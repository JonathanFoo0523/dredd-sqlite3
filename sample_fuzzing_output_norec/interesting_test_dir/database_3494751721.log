-- Time: 2024/06/09 10:20:46
-- Database: database21
-- Database version: 3.40.0
-- seed value: 3494751721
PRAGMA cache_size = 50000; -- 5ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 1ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 3ms;
COMMIT TRANSACTION; -- 4ms;
INSERT OR REPLACE INTO rt0(c2) VALUES (NULL), (0.7957796865698987), (0xfffffffff0743828); -- 7ms;
INSERT OR REPLACE INTO rt0(c2, c1) VALUES (NULL, x'ebd0'); -- 7ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=765106262 WHERE (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END IN (((rt0.c2) IS FALSE))); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(0.7241090794027636); -- 11ms;
INSERT OR ABORT INTO rt0 VALUES (x'', x'', 0.608654655573975), (0.608654655573975, x'f19e', x'5805273a51ce'), (7.65106262E8, NULL, x''), (0Xffffffffd8a18bf3, 0.33404593618029443, 'Y↗S\'), (x'3862adc3', 'Y↗S\', -6.60501517E8); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2, c1) VALUES (-6.60501517E8, '6a', 0xffffffffc4f3e4d8); -- 1ms;
INSERT OR ABORT INTO rt0(c0, c2) VALUES (-2.60818904E8, '683156936'), (x'1e6f', x''), (x'', ''); -- 6ms;
INSERT OR ABORT INTO rt0(c0, c1) VALUES (0.1405105748548452, 'X}'); -- 1ms;
UPDATE OR ABORT rt0 SET (c0)=(NULL); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c1)=(0.7745934667760315); -- 1ms;
ANALYZE rt0; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2, c1, c1)=(x'', '-260818904', NULL) WHERE 'g#<pb\rA6j'; -- 2ms;
UPDATE rt0 SET (c1)=(x'2cd8'); -- 7ms;
INSERT OR FAIL INTO rt0 VALUES ('-260818904', x'c7e2', '0.608654655573975'), (NULL, x'', '-96629061'), (0.008366420947017006, x'', NULL); -- 1ms;
INSERT OR ABORT INTO rt0(c0, c1) VALUES (NULL, '-2030800938'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2, c2)=(NULL, 0.7241090794027636) WHERE CAST(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END AS TEXT); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR FAIL rt0 SET (c1)=('705822108') WHERE ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE BINARY; -- 0ms;
UPDATE OR FAIL rt0 SET (c0, c0, c0)=(NULL, '-1004800732', 0xfffffffffa3d8ebb); -- 5ms;
UPDATE OR REPLACE rt0 SET (c2)=('D{') WHERE CASE WHEN rt0.c0 THEN CAST(rt0.c2 AS TEXT) END; -- 0ms;
UPDATE rt0 SET (c0)=(0x2d9a9856) WHERE ((((rt0.c2)-(rt0.c2)))|(((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))); -- 3ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (x'c198', NULL, x''), (x'f794338b', '944447895', 0Xffffffff8f650039), (0.05526626615513863, x'', '.xPAq(H'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')||(x''))) ISNULL); -- 0ms;
INSERT OR REPLACE INTO rt0(c2) VALUES (944447895); -- 7ms;
UPDATE OR IGNORE rt0 SET (c1)=(NULL); -- 0ms;
UPDATE rt0 SET (c1, c1)=(0x18747cf5, 6.83156936E8); -- 0ms;
UPDATE OR IGNORE rt0 SET c0=x'' WHERE CAST(CASE WHEN NULL THEN rt0.c1 WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END AS REAL); -- 0ms;
INSERT OR FAIL INTO rt0(c0) VALUES ('-1961566875'), (NULL), ('-96629061'); -- 0ms;
INSERT OR ABORT INTO rt0(c2, c0, c1) VALUES (0x18747cf5, x'e476', 0.7241090794027636), ('~b', NULL, ''), (x'ff172144', NULL, '353845792'); -- 0ms;
INSERT OR REPLACE INTO rt0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES ('Td0'), (NULL), (0.4912363232106798); -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM temp; -- 0ms;
UPDATE OR IGNORE rt0 SET c2='跆'; -- 0ms;
UPDATE OR FAIL rt0 SET c1='', c0=x''; -- 0ms;
UPDATE OR ROLLBACK rt0 SET c0=0x5faedc1d WHERE ((((((((((rt0.c1)LIKE(rt0.c0)))OR(((rt0.c0)<>(rt0.c1)))))AND(((rt0.c2)>(rt0.c1)))))AND(rt0.c2 COLLATE BINARY)))AND((((((((('1605295133')OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))OR(0.24681098821121716)))); -- 0ms;
ANALYZE rt0; -- 0ms;
UPDATE rt0 SET c2=NULL WHERE ((((CAST(rt0.c2 AS NUMERIC))AND(rt0.c2)))AND(UPPER(DISTINCT rt0.c2))); -- 0ms;
INSERT OR FAIL INTO rt0(c2, c1) VALUES ('7(歭X', ''); -- 0ms;
UPDATE OR ROLLBACK rt0 SET c0=x'' WHERE ((CAST(rt0.c1 AS INTEGER)) BETWEEN (((rt0.c2)%(rt0.c1))) AND (rt0.c2 COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (0.22994312976592912), (0.2438116268454762), (NULL); -- 0ms;
UPDATE rt0 SET (c1)=(1605295133); -- 0ms;
UPDATE rt0 SET (c0)=(NULL) WHERE (((rt0.c1)) NOT BETWEEN (((((rt0.c0))>((rt0.c1))))) AND ((IFNULL(rt0.c1, rt0.c0)))); -- 1ms;
REINDEX; -- 12ms;
INSERT OR ABORT INTO rt0(c2, c1, c0) VALUES (0.10956655970002505, (((((NOT (x'')))OR(((0.2089029577582977)<(NULL)))))OR(((((x'23f7')AND('')))AND('-429968317')))), NULL), (x'5d11', '⧧\n>\nup2', x''), (9.44447895E8, '0.7957796865698987', 0.3743073300551978); -- 12ms;
INSERT OR IGNORE INTO rt0(c2, c0) VALUES (NULL, '154666775'); -- 0ms;
UPDATE OR IGNORE rt0 SET c2='Eu.F', c2=NULL WHERE CASE WHEN ((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)) THEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)) WHEN CASE WHEN x'7d13' THEN rt0.c1 END THEN rt0.c1 WHEN ((rt0.c0)>(rt0.c0)) THEN (rt0.c1 IN ()) END; -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (0.20131616373235117), ('-1812761108'), (0.19502155431733847); -- 0ms;
UPDATE rt0 SET c1=NULL; -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, +c3 REAL , +c4 REAL ); -- 1ms;
UPDATE OR IGNORE rt1 SET c0=0.2089029577582977; -- 1ms;
INSERT OR IGNORE INTO rt0 VALUES (0.29062227440340793, x'', NULL), (0.6461638904586405, '115301562', '-2139255354'), (0.4093474908677921, x'', 7.05822108E8); -- 0ms;
ANALYZE rt0; -- 1ms;
SELECT rtreecheck('rt0'); -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 INT , c1 TEXT , c2 INT ); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET c2='h/)d', c1=NULL WHERE (- (((t0.c1) BETWEEN (t0.c1) AND (t0.c1)))); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (NULL, NULL, NULL); -- 3ms;
INSERT OR FAIL INTO t0(c0, c2) VALUES (NULL, x''), (x'', '1890859120'), ('', 'U!'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1, c2, c1)=(x'', NULL, ''); -- 1ms;
UPDATE rt1 SET c4=x''; -- 0ms;
ANALYZE main; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET (c4)=(0.16951929996125426) WHERE ((rt1.c4 COLLATE RTRIM) IS TRUE); -- 0ms;
INSERT OR REPLACE INTO rt1(c2, c1, c3) VALUES (0.32884222191668677, x'6420', 0xfffffffff0743828); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
VACUUM; -- 1ms;
INSERT OR IGNORE INTO rt0(c0, c2, c1) VALUES (x'', '-1889206215', '-586179925'); -- 0ms;
INSERT OR IGNORE INTO t0(c1) VALUES (0.23005221467862258), ('X}'), (NULL); -- 1ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1) VALUES ('', x''); -- 0ms;
UPDATE OR FAIL rt0 SET c2='#E1*	zPY'; -- 1ms;
INSERT OR ROLLBACK INTO t0(c1, c2, c0) VALUES (x'0987', '-330143859', ''), ('-96629061', ' d.uᗡ3dE', 0.8576848968704401), (x'', '}|mW', x'909669e5'); -- 0ms;
INSERT OR IGNORE INTO t0(c2) VALUES ('-586017311'), ('-2139255354'), (NULL); -- 0ms;
END TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
UPDATE OR ABORT t0 SET c2='1890859120'; -- 0ms;
ANALYZE rt0; -- 0ms;
ANALYZE; -- 1ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM rt1 WHERE (((((- (rt1.c0))))==((rt1.c0 COLLATE RTRIM)))) ORDER BY ((((rt1.c2)<=(x'')))||((((rt1.c3)) NOT BETWEEN ((rt1.c0)) AND (('683156936'))))) ASC, (CAST(rt1.c4 AS BLOB) IN ()), rt1.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((- (rt1.c0))))==((rt1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2)<=(x'')))||((((rt1.c3)) NOT BETWEEN ((rt1.c0)) AND (('683156936'))))) ASC, (CAST(rt1.c4 AS BLOB) IN ()), rt1.c1  NULLS FIRST);
SELECT * FROM rt1 WHERE (((((- (rt1.c0))))==((rt1.c0 COLLATE RTRIM)))) ORDER BY ((((rt1.c2)<=(x'')))||((((rt1.c3)) NOT BETWEEN ((rt1.c0)) AND (('683156936'))))) ASC, (CAST(rt1.c4 AS BLOB) IN ()), rt1.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((- (rt1.c0))))==((rt1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2)<=(x'')))||((((rt1.c3)) NOT BETWEEN ((rt1.c0)) AND (('683156936'))))) ASC, (CAST(rt1.c4 AS BLOB) IN ()), rt1.c1  NULLS FIRST);
SELECT * FROM rt1 WHERE (((((- (rt1.c0))))==((rt1.c0 COLLATE RTRIM)))) ORDER BY ((((rt1.c2)<=(x'')))||((((rt1.c3)) NOT BETWEEN ((rt1.c0)) AND (('683156936'))))) ASC, (CAST(rt1.c4 AS BLOB) IN ()), rt1.c1  NULLS FIRST;
SELECT ALL * FROM rt1, t0, rt0 NOT INDEXED WHERE (TYPEOF(DISTINCT rt1.c4) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT rt1.c4) COLLATE NOCASE) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL * FROM rt1, t0, rt0 NOT INDEXED WHERE (TYPEOF(DISTINCT rt1.c4) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT rt1.c4) COLLATE NOCASE) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL * FROM rt1, t0, rt0 NOT INDEXED WHERE (TYPEOF(DISTINCT rt1.c4) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))  WHEN CASE rt0.c2  WHEN rt0.c2 THEN x'' WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END THEN rt0.c2 ELSE ((rt0.c1)+(rt0.c2)) END) ORDER BY ((((((((((rt0.c1) IS TRUE))AND(((rt0.c2)||(rt0.c0)))))OR((~ (rt0.c1)))))AND(x'')))OR((NOT (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))  WHEN CASE rt0.c2  WHEN rt0.c2 THEN x'' WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END THEN rt0.c2 ELSE ((rt0.c1)+(rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c1) IS TRUE))AND(((rt0.c2)||(rt0.c0)))))OR((~ (rt0.c1)))))AND(x'')))OR((NOT (rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))  WHEN CASE rt0.c2  WHEN rt0.c2 THEN x'' WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END THEN rt0.c2 ELSE ((rt0.c1)+(rt0.c2)) END) ORDER BY ((((((((((rt0.c1) IS TRUE))AND(((rt0.c2)||(rt0.c0)))))OR((~ (rt0.c1)))))AND(x'')))OR((NOT (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))  WHEN CASE rt0.c2  WHEN rt0.c2 THEN x'' WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END THEN rt0.c2 ELSE ((rt0.c1)+(rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c1) IS TRUE))AND(((rt0.c2)||(rt0.c0)))))OR((~ (rt0.c1)))))AND(x'')))OR((NOT (rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))  WHEN CASE rt0.c2  WHEN rt0.c2 THEN x'' WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END THEN rt0.c2 ELSE ((rt0.c1)+(rt0.c2)) END) ORDER BY ((((((((((rt0.c1) IS TRUE))AND(((rt0.c2)||(rt0.c0)))))OR((~ (rt0.c1)))))AND(x'')))OR((NOT (rt0.c1))));
SELECT COUNT(*) FROM rt1 WHERE ((+ (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((+ (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((+ (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)))));
SELECT * FROM rt0, t0 WHERE ((((t0.c0 IN ()))|(HEX(DISTINCT rt0.c0)))) ORDER BY ((((((((((t0.c2)OR(t0.c0)))AND(rt0.c2)))AND(t0.c2)))OR(rt0.c0)))AND(t0.c1 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ()))|(HEX(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((((((t0.c2)OR(t0.c0)))AND(rt0.c2)))AND(t0.c2)))OR(rt0.c0)))AND(t0.c1 COLLATE NOCASE))  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE ((((t0.c0 IN ()))|(HEX(DISTINCT rt0.c0)))) ORDER BY ((((((((((t0.c2)OR(t0.c0)))AND(rt0.c2)))AND(t0.c2)))OR(rt0.c0)))AND(t0.c1 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ()))|(HEX(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((((((t0.c2)OR(t0.c0)))AND(rt0.c2)))AND(t0.c2)))OR(rt0.c0)))AND(t0.c1 COLLATE NOCASE))  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE ((((t0.c0 IN ()))|(HEX(DISTINCT rt0.c0)))) ORDER BY ((((((((((t0.c2)OR(t0.c0)))AND(rt0.c2)))AND(t0.c2)))OR(rt0.c0)))AND(t0.c1 COLLATE NOCASE))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c0 IN (rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c0 IN (rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c0 IN (rt0.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON (((rt0.c1 COLLATE RTRIM))>(('350877944'))) FULL OUTER JOIN rt1 ON (((((rt0.c1)) BETWEEN ((x'')) AND ((rt0.c0))))%(((rt1.c2) ISNULL))) WHERE (((((rt0.c0) IS TRUE))=(CASE rt0.c1  WHEN t0.c1 THEN rt0.c1 ELSE t0.c0 END))) ORDER BY ('0.7241090794027636' IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS TRUE))==(CASE rt0.c1  WHEN t0.c1 THEN rt0.c1 ELSE t0.c0 END))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (((rt0.c1 COLLATE RTRIM))>(('350877944'))) FULL OUTER JOIN rt1 ON (((((rt0.c1)) BETWEEN ((x'')) AND ((rt0.c0))))%(((rt1.c2) ISNULL))) ORDER BY ('0.7241090794027636' IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON (((rt0.c1 COLLATE RTRIM))>(('350877944'))) FULL OUTER JOIN rt1 ON (((((rt0.c1)) BETWEEN ((x'')) AND ((rt0.c0))))%(((rt1.c2) ISNULL))) WHERE (((((rt0.c0) IS TRUE))=(CASE rt0.c1  WHEN t0.c1 THEN rt0.c1 ELSE t0.c0 END))) ORDER BY ('0.7241090794027636' IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS TRUE))==(CASE rt0.c1  WHEN t0.c1 THEN rt0.c1 ELSE t0.c0 END))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (((rt0.c1 COLLATE RTRIM))>(('350877944'))) FULL OUTER JOIN rt1 ON (((((rt0.c1)) BETWEEN ((x'')) AND ((rt0.c0))))%(((rt1.c2) ISNULL))) ORDER BY ('0.7241090794027636' IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON (((rt0.c1 COLLATE RTRIM))>(('350877944'))) FULL OUTER JOIN rt1 ON (((((rt0.c1)) BETWEEN ((x'')) AND ((rt0.c0))))%(((rt1.c2) ISNULL))) WHERE (((((rt0.c0) IS TRUE))=(CASE rt0.c1  WHEN t0.c1 THEN rt0.c1 ELSE t0.c0 END))) ORDER BY ('0.7241090794027636' IN ()) ASC  NULLS LAST;
SELECT * FROM rt0, rt1, t0 WHERE (((rt1.c0) IS FALSE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt1.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT * FROM rt0, rt1, t0 WHERE (((rt1.c0) IS FALSE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt1.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT * FROM rt0, rt1, t0 WHERE (((rt1.c0) IS FALSE) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0) NOTNULL) IN (rt0.c2, CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0) NOTNULL) IN (rt0.c2, CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0) NOTNULL) IN (rt0.c2, CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0) NOTNULL) IN (rt0.c2, CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0) NOTNULL) IN (rt0.c2, CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END)));
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE (CAST(rt1.c3 AS BLOB)) ORDER BY ((((rt1.c4)LIKE(rt0.c2)))AND(((((rt1.c0)AND(rt0.c1)))OR(x'05ff')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c3 AS BLOB)) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY ((((rt1.c4)LIKE(rt0.c2)))AND(((((rt1.c0)AND(rt0.c1)))OR(x'05ff')))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE (CAST(rt1.c3 AS BLOB)) ORDER BY ((((rt1.c4)LIKE(rt0.c2)))AND(((((rt1.c0)AND(rt0.c1)))OR(x'05ff')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c3 AS BLOB)) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY ((((rt1.c4)LIKE(rt0.c2)))AND(((((rt1.c0)AND(rt0.c1)))OR(x'05ff')))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE (CAST(rt1.c3 AS BLOB)) ORDER BY ((((rt1.c4)LIKE(rt0.c2)))AND(((((rt1.c0)AND(rt0.c1)))OR(x'05ff')))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((('-96629061') BETWEEN (t0.c2) AND (t0.c2))) BETWEEN (((((((((((((rt0.c1)OR(t0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(t0.c2)))OR(rt0.c0)))AND(t0.c2))) AND (t0.c2))) ORDER BY ((((CAST(rt0.c0 AS REAL))AND(((t0.c0)<>(t0.c0)))))AND(NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('-96629061') BETWEEN (t0.c2) AND (t0.c2))) BETWEEN (((((((((((((rt0.c1)OR(t0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(t0.c2)))OR(rt0.c0)))AND(t0.c2))) AND (t0.c2))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((CAST(rt0.c0 AS REAL))AND(((t0.c0)!=(t0.c0)))))AND(NULL)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((('-96629061') BETWEEN (t0.c2) AND (t0.c2))) BETWEEN (((((((((((((rt0.c1)OR(t0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(t0.c2)))OR(rt0.c0)))AND(t0.c2))) AND (t0.c2))) ORDER BY ((((CAST(rt0.c0 AS REAL))AND(((t0.c0)<>(t0.c0)))))AND(NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('-96629061') BETWEEN (t0.c2) AND (t0.c2))) BETWEEN (((((((((((((rt0.c1)OR(t0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(t0.c2)))OR(rt0.c0)))AND(t0.c2))) AND (t0.c2))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((CAST(rt0.c0 AS REAL))AND(((t0.c0)!=(t0.c0)))))AND(NULL)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((('-96629061') BETWEEN (t0.c2) AND (t0.c2))) BETWEEN (((((((((((((rt0.c1)OR(t0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(t0.c2)))OR(rt0.c0)))AND(t0.c2))) AND (t0.c2))) ORDER BY ((((CAST(rt0.c0 AS REAL))AND(((t0.c0)<>(t0.c0)))))AND(NULL)) DESC  NULLS LAST;
SELECT * FROM t0, rt0 WHERE (CAST(((NULL)*(t0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((NULL)*(t0.c1)) AS BLOB)) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (CAST(((NULL)*(t0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((NULL)*(t0.c1)) AS BLOB)) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (CAST(((NULL)*(t0.c1)) AS BLOB));
SELECT * FROM t0, rt1 WHERE (((CAST(rt1.c3 AS TEXT)) BETWEEN (rt1.c4) AND (CASE WHEN t0.c1 THEN rt1.c1 END))) ORDER BY rt1.c2 COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c3 AS TEXT)) BETWEEN (rt1.c4) AND (CASE WHEN t0.c1 THEN rt1.c1 END))) IS TRUE)  as count FROM t0, rt1 ORDER BY rt1.c2 COLLATE NOCASE ASC);
SELECT * FROM t0, rt1 WHERE (((CAST(rt1.c3 AS TEXT)) BETWEEN (rt1.c4) AND (CASE WHEN t0.c1 THEN rt1.c1 END))) ORDER BY rt1.c2 COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c3 AS TEXT)) BETWEEN (rt1.c4) AND (CASE WHEN t0.c1 THEN rt1.c1 END))) IS TRUE)  as count FROM t0, rt1 ORDER BY rt1.c2 COLLATE NOCASE ASC);
SELECT * FROM t0, rt1 WHERE (((CAST(rt1.c3 AS TEXT)) BETWEEN (rt1.c4) AND (CASE WHEN t0.c1 THEN rt1.c1 END))) ORDER BY rt1.c2 COLLATE NOCASE ASC;
SELECT COUNT(*) FROM t0 WHERE (((((((((((x'')OR(t0.c1)))OR(t0.c2)))OR(t0.c2)))OR(t0.c2))) BETWEEN ((+ (t0.c2))) AND ((NOT (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((x'')OR(t0.c1)))OR(t0.c2)))OR(t0.c2)))OR(t0.c2))) BETWEEN ((+ (t0.c2))) AND ((NOT (t0.c2))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((((((x'')OR(t0.c1)))OR(t0.c2)))OR(t0.c2)))OR(t0.c2))) BETWEEN ((+ (t0.c2))) AND ((NOT (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((x'')OR(t0.c1)))OR(t0.c2)))OR(t0.c2)))OR(t0.c2))) BETWEEN ((+ (t0.c2))) AND ((NOT (t0.c2))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((((((x'')OR(t0.c1)))OR(t0.c2)))OR(t0.c2)))OR(t0.c2))) BETWEEN ((+ (t0.c2))) AND ((NOT (t0.c2)))));
SELECT COUNT(*) FROM t0 WHERE (((((((((CAST(t0.c1 AS NUMERIC))OR(((t0.c0)AND(t0.c1)))))AND(HEX(DISTINCT t0.c2))))AND(CAST('-660501517' AS INTEGER))))OR(highlight(t0.c0, t0.c2, t0.c0, t0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(t0.c1 AS NUMERIC))OR(((t0.c0)AND(t0.c1)))))AND(HEX(DISTINCT t0.c2))))AND(CAST('-660501517' AS INTEGER))))OR(highlight(t0.c0, t0.c2, t0.c0, t0.c1)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((((CAST(t0.c1 AS NUMERIC))OR(((t0.c0)AND(t0.c1)))))AND(HEX(DISTINCT t0.c2))))AND(CAST('-660501517' AS INTEGER))))OR(highlight(t0.c0, t0.c2, t0.c0, t0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(t0.c1 AS NUMERIC))OR(((t0.c0)AND(t0.c1)))))AND(HEX(DISTINCT t0.c2))))AND(CAST('-660501517' AS INTEGER))))OR(highlight(t0.c0, t0.c2, t0.c0, t0.c1)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE ('0.4912363232106798');
SELECT SUM(count) FROM (SELECT (('0.4912363232106798') IS TRUE)  as count FROM t0, rt1, rt0);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE ('0.4912363232106798');
SELECT SUM(count) FROM (SELECT (('0.4912363232106798') IS TRUE)  as count FROM t0, rt1, rt0);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE ('0.4912363232106798');
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c0)-(rt1.c4)), ((rt1.c1)<(rt1.c2)), ((((NULL)AND(rt1.c1)))AND(rt1.c0))))!=((rt1.c2, CAST(rt1.c4 AS TEXT), ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c3)))))) ORDER BY LIKELIHOOD(NULL, 0.721530039902257)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)-(rt1.c4)), ((rt1.c1)<(rt1.c2)), ((((NULL)AND(rt1.c1)))AND(rt1.c0))))<>((rt1.c2, CAST(rt1.c4 AS TEXT), ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c3)))))) IS TRUE)  as count FROM rt1 ORDER BY LIKELIHOOD(NULL, 0.721530039902257)  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c0)-(rt1.c4)), ((rt1.c1)<(rt1.c2)), ((((NULL)AND(rt1.c1)))AND(rt1.c0))))!=((rt1.c2, CAST(rt1.c4 AS TEXT), ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c3)))))) ORDER BY LIKELIHOOD(NULL, 0.721530039902257)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)-(rt1.c4)), ((rt1.c1)<(rt1.c2)), ((((NULL)AND(rt1.c1)))AND(rt1.c0))))<>((rt1.c2, CAST(rt1.c4 AS TEXT), ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c3)))))) IS TRUE)  as count FROM rt1 ORDER BY LIKELIHOOD(NULL, 0.721530039902257)  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c0)-(rt1.c4)), ((rt1.c1)<(rt1.c2)), ((((NULL)AND(rt1.c1)))AND(rt1.c0))))!=((rt1.c2, CAST(rt1.c4 AS TEXT), ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c3)))))) ORDER BY LIKELIHOOD(NULL, 0.721530039902257)  NULLS LAST;
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON ((((((((rt0.c2 COLLATE RTRIM)OR(((((((((rt1.c4)OR(rt1.c4)))AND(98459401)))AND(rt1.c3)))AND(rt1.c4)))))OR((rt0.c1 IN (rt0.c1)))))OR(((((rt0.c2)OR(rt1.c4)))OR(rt1.c4)))))AND(((rt1.c1) NOTNULL))) WHERE (0.24429410478075386);
SELECT SUM(count) FROM (SELECT ((0.24429410478075386) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((((((((rt0.c2 COLLATE RTRIM)OR(((((((((rt1.c4)OR(rt1.c4)))AND(98459401)))AND(rt1.c3)))AND(rt1.c4)))))OR((rt0.c1 IN (rt0.c1)))))OR(((((rt0.c2)OR(rt1.c4)))OR(rt1.c4)))))AND(((rt1.c1) NOTNULL))));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON ((((((((rt0.c2 COLLATE RTRIM)OR(((((((((rt1.c4)OR(rt1.c4)))AND(98459401)))AND(rt1.c3)))AND(rt1.c4)))))OR((rt0.c1 IN (rt0.c1)))))OR(((((rt0.c2)OR(rt1.c4)))OR(rt1.c4)))))AND(((rt1.c1) NOTNULL))) WHERE (0.24429410478075386);
SELECT SUM(count) FROM (SELECT ((0.24429410478075386) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((((((((rt0.c2 COLLATE RTRIM)OR(((((((((rt1.c4)OR(rt1.c4)))AND(98459401)))AND(rt1.c3)))AND(rt1.c4)))))OR((rt0.c1 IN (rt0.c1)))))OR(((((rt0.c2)OR(rt1.c4)))OR(rt1.c4)))))AND(((rt1.c1) NOTNULL))));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON ((((((((rt0.c2 COLLATE RTRIM)OR(((((((((rt1.c4)OR(rt1.c4)))AND(98459401)))AND(rt1.c3)))AND(rt1.c4)))))OR((rt0.c1 IN (rt0.c1)))))OR(((((rt0.c2)OR(rt1.c4)))OR(rt1.c4)))))AND(((rt1.c1) NOTNULL))) WHERE (0.24429410478075386);
SELECT ALL * FROM t0 INNER JOIN rt1 ON 0.637303947312444 COLLATE BINARY WHERE (((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c0)))<=((((rt1.c0))<((0x18747cf5))))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c0)))<=((((rt1.c0))<((0X18747cf5)))))) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON 0.637303947312444 COLLATE BINARY);
SELECT ALL * FROM t0 INNER JOIN rt1 ON 0.637303947312444 COLLATE BINARY WHERE (((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c0)))<=((((rt1.c0))<((0x18747cf5))))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c0)))<=((((rt1.c0))<((0X18747cf5)))))) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON 0.637303947312444 COLLATE BINARY);
SELECT ALL * FROM t0 INNER JOIN rt1 ON 0.637303947312444 COLLATE BINARY WHERE (((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c0)))<=((((rt1.c0))<((0x18747cf5))))));
SELECT ALL * FROM t0, rt1 WHERE (NULL) ORDER BY ((t0.c1 COLLATE BINARY)||(t0.c1)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, rt1 ORDER BY ((t0.c1 COLLATE BINARY)||(t0.c1)) DESC);
SELECT ALL * FROM t0, rt1 WHERE (NULL) ORDER BY ((t0.c1 COLLATE BINARY)||(t0.c1)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, rt1 ORDER BY ((t0.c1 COLLATE BINARY)||(t0.c1)) DESC);
SELECT ALL * FROM t0, rt1 WHERE (NULL) ORDER BY ((t0.c1 COLLATE BINARY)||(t0.c1)) DESC;
SELECT ALL * FROM rt0 WHERE (CAST(LIKE(rt0.c2, rt0.c0) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKE(rt0.c2, rt0.c0) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(LIKE(rt0.c2, rt0.c0) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKE(rt0.c2, rt0.c0) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(LIKE(rt0.c2, rt0.c0) AS INTEGER));
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) IS TRUE)) ORDER BY x'42b6'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY x'42b6'  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) IS TRUE)) ORDER BY x'42b6'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY x'42b6'  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) IS TRUE)) ORDER BY x'42b6'  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE ((+ (((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c4))))) ORDER BY ((((rt1.c1) NOT NULL))>(rt1.c1 COLLATE NOCASE)) ASC, rt1.c1;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c4))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1) NOT NULL))>(rt1.c1 COLLATE NOCASE)) ASC, rt1.c1);
SELECT ALL * FROM rt1 WHERE ((+ (((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c4))))) ORDER BY ((((rt1.c1) NOT NULL))>(rt1.c1 COLLATE NOCASE)) ASC, rt1.c1;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c4))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1) NOT NULL))>(rt1.c1 COLLATE NOCASE)) ASC, rt1.c1);
SELECT ALL * FROM rt1 WHERE ((+ (((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c4))))) ORDER BY ((((rt1.c1) NOT NULL))>(rt1.c1 COLLATE NOCASE)) ASC, rt1.c1;
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE (CASE (~ (x''))  WHEN ((rt1.c2) NOT NULL) THEN (NOT (t0.c0)) ELSE 0.3687661584915809 END) ORDER BY (- (NULL)) DESC, UNLIKELY(((t0.c1)*(t0.c2))) ASC  NULLS FIRST, ((CASE t0.c0  WHEN t0.c0 THEN rt0.c2 ELSE rt0.c2 END)==(CASE WHEN rt1.c2 THEN rt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (x''))  WHEN ((rt1.c2) NOT NULL) THEN (NOT (t0.c0)) ELSE 0.3687661584915809 END) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY (- (NULL)) DESC, UNLIKELY(((t0.c1)*(t0.c2))) ASC  NULLS FIRST, ((CASE t0.c0  WHEN t0.c0 THEN rt0.c2 ELSE rt0.c2 END)=(CASE WHEN rt1.c2 THEN rt0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE (CASE (~ (x''))  WHEN ((rt1.c2) NOT NULL) THEN (NOT (t0.c0)) ELSE 0.3687661584915809 END) ORDER BY (- (NULL)) DESC, UNLIKELY(((t0.c1)*(t0.c2))) ASC  NULLS FIRST, ((CASE t0.c0  WHEN t0.c0 THEN rt0.c2 ELSE rt0.c2 END)==(CASE WHEN rt1.c2 THEN rt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (x''))  WHEN ((rt1.c2) NOT NULL) THEN (NOT (t0.c0)) ELSE 0.3687661584915809 END) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY (- (NULL)) DESC, UNLIKELY(((t0.c1)*(t0.c2))) ASC  NULLS FIRST, ((CASE t0.c0  WHEN t0.c0 THEN rt0.c2 ELSE rt0.c2 END)=(CASE WHEN rt1.c2 THEN rt0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE (CASE (~ (x''))  WHEN ((rt1.c2) NOT NULL) THEN (NOT (t0.c0)) ELSE 0.3687661584915809 END) ORDER BY (- (NULL)) DESC, UNLIKELY(((t0.c1)*(t0.c2))) ASC  NULLS FIRST, ((CASE t0.c0  WHEN t0.c0 THEN rt0.c2 ELSE rt0.c2 END)==(CASE WHEN rt1.c2 THEN rt0.c0 END))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt1 ON (((+ (rt0.c2)))<=(((('350877944', rt0.c2, t0.c1)) NOT BETWEEN ((t0.c1, rt1.c2, rt0.c2)) AND (('>6\n3Rs', rt1.c2, rt0.c2))))) LEFT OUTER JOIN rt0 ON (+ (((rt1.c0)<(t0.c2)))) WHERE (((NULL) BETWEEN ((+ (rt0.c0))) AND ((rt1.c1 IN ())))) ORDER BY CASE '1郺7'  WHEN (rt0.c1 IN ()) THEN UNLIKELY(DISTINCT rt1.c1) ELSE (((rt1.c0)) BETWEEN ((rt1.c3)) AND ((t0.c0))) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN ((+ (rt0.c0))) AND ((rt1.c1 IN ())))) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON (((+ (rt0.c2)))<=(((('350877944', rt0.c2, t0.c1)) NOT BETWEEN ((t0.c1, rt1.c2, rt0.c2)) AND (('>6\n3Rs', rt1.c2, rt0.c2))))) LEFT OUTER JOIN rt0 ON (+ (((rt1.c0)<(t0.c2)))) ORDER BY CASE '1郺7'  WHEN (rt0.c1 IN ()) THEN UNLIKELY(DISTINCT rt1.c1) ELSE (((rt1.c0)) BETWEEN ((rt1.c3)) AND ((t0.c0))) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt1 ON (((+ (rt0.c2)))<=(((('350877944', rt0.c2, t0.c1)) NOT BETWEEN ((t0.c1, rt1.c2, rt0.c2)) AND (('>6\n3Rs', rt1.c2, rt0.c2))))) LEFT OUTER JOIN rt0 ON (+ (((rt1.c0)<(t0.c2)))) WHERE (((NULL) BETWEEN ((+ (rt0.c0))) AND ((rt1.c1 IN ())))) ORDER BY CASE '1郺7'  WHEN (rt0.c1 IN ()) THEN UNLIKELY(DISTINCT rt1.c1) ELSE (((rt1.c0)) BETWEEN ((rt1.c3)) AND ((t0.c0))) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN ((+ (rt0.c0))) AND ((rt1.c1 IN ())))) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON (((+ (rt0.c2)))<=(((('350877944', rt0.c2, t0.c1)) NOT BETWEEN ((t0.c1, rt1.c2, rt0.c2)) AND (('>6\n3Rs', rt1.c2, rt0.c2))))) LEFT OUTER JOIN rt0 ON (+ (((rt1.c0)<(t0.c2)))) ORDER BY CASE '1郺7'  WHEN (rt0.c1 IN ()) THEN UNLIKELY(DISTINCT rt1.c1) ELSE (((rt1.c0)) BETWEEN ((rt1.c3)) AND ((t0.c0))) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt1 ON (((+ (rt0.c2)))<=(((('350877944', rt0.c2, t0.c1)) NOT BETWEEN ((t0.c1, rt1.c2, rt0.c2)) AND (('>6\n3Rs', rt1.c2, rt0.c2))))) LEFT OUTER JOIN rt0 ON (+ (((rt1.c0)<(t0.c2)))) WHERE (((NULL) BETWEEN ((+ (rt0.c0))) AND ((rt1.c1 IN ())))) ORDER BY CASE '1郺7'  WHEN (rt0.c1 IN ()) THEN UNLIKELY(DISTINCT rt1.c1) ELSE (((rt1.c0)) BETWEEN ((rt1.c3)) AND ((t0.c0))) END DESC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2)>=(t0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)>=(t0.c1)) IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2)>=(t0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)>=(t0.c1)) IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2)>=(t0.c1)) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (((TRIM(DISTINCT rt0.c2))&((~ (rt0.c1))))) ORDER BY rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT rt0.c2))&((~ (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC);
SELECT COUNT(*) FROM rt0 WHERE (((TRIM(DISTINCT rt0.c2))&((~ (rt0.c1))))) ORDER BY rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT rt0.c2))&((~ (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC);
SELECT COUNT(*) FROM rt0 WHERE (((TRIM(DISTINCT rt0.c2))&((~ (rt0.c1))))) ORDER BY rt0.c1 ASC;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE BINARY) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (((rt0.c2) NOT BETWEEN (-4.29968317E8) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (((rt0.c2) NOT BETWEEN (-4.29968317E8) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE BINARY) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (((rt0.c2) NOT BETWEEN (-4.29968317E8) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (((rt0.c2) NOT BETWEEN (-4.29968317E8) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE BINARY) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (((rt0.c2) NOT BETWEEN (-4.29968317E8) AND (rt0.c0)))));
SELECT ALL * FROM rt1, t0 WHERE (CAST(((rt1.c4)==(t0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c4)==(t0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE (CAST(((rt1.c4)==(t0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c4)==(t0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE (CAST(((rt1.c4)==(t0.c1)) AS INTEGER));
SELECT ALL * FROM rt1 WHERE (((NULL) BETWEEN (((rt1.c4) IS TRUE)) AND (((rt1.c1) NOT NULL)))) ORDER BY TRIM(((NULL)<>(rt1.c4)), CAST(rt1.c1 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (((rt1.c4) IS TRUE)) AND (((rt1.c1) NOT NULL)))) IS TRUE)  as count FROM rt1 ORDER BY TRIM(((NULL)<>(rt1.c4)), CAST(rt1.c1 AS TEXT)));
SELECT ALL * FROM rt1 WHERE (((NULL) BETWEEN (((rt1.c4) IS TRUE)) AND (((rt1.c1) NOT NULL)))) ORDER BY TRIM(((NULL)<>(rt1.c4)), CAST(rt1.c1 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (((rt1.c4) IS TRUE)) AND (((rt1.c1) NOT NULL)))) IS TRUE)  as count FROM rt1 ORDER BY TRIM(((NULL)<>(rt1.c4)), CAST(rt1.c1 AS TEXT)));
SELECT ALL * FROM rt1 WHERE (((NULL) BETWEEN (((rt1.c4) IS TRUE)) AND (((rt1.c1) NOT NULL)))) ORDER BY TRIM(((NULL)<>(rt1.c4)), CAST(rt1.c1 AS TEXT));
SELECT ALL * FROM rt1 LEFT OUTER JOIN t0 ON CASE ((rt0.c1)>(rt1.c2))  WHEN ((t0.c1) IS FALSE) THEN CAST(rt1.c1 AS REAL) WHEN ((t0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) THEN rt1.c1 COLLATE BINARY WHEN CAST(0.10956655970002505 AS INTEGER) THEN ((rt0.c0)<=(rt1.c1)) END RIGHT OUTER JOIN rt0 ON rt0.c0 WHERE (((((rt0.c2)<=(NULL))) ISNULL)) ORDER BY (((rt1.c4 IN ())) NOT BETWEEN (((rt0.c1)IS(t0.c2))) AND ((- (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<=(NULL))) ISNULL)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON CASE ((rt0.c1)>(rt1.c2))  WHEN ((t0.c1) IS FALSE) THEN CAST(rt1.c1 AS REAL) WHEN ((t0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) THEN rt1.c1 COLLATE BINARY WHEN CAST(0.10956655970002505 AS INTEGER) THEN ((rt0.c0)<=(rt1.c1)) END RIGHT OUTER JOIN rt0 ON rt0.c0 ORDER BY (((rt1.c4 IN ())) NOT BETWEEN (((rt0.c1)IS(t0.c2))) AND ((- (rt0.c1)))));
SELECT ALL * FROM rt1 LEFT OUTER JOIN t0 ON CASE ((rt0.c1)>(rt1.c2))  WHEN ((t0.c1) IS FALSE) THEN CAST(rt1.c1 AS REAL) WHEN ((t0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) THEN rt1.c1 COLLATE BINARY WHEN CAST(0.10956655970002505 AS INTEGER) THEN ((rt0.c0)<=(rt1.c1)) END RIGHT OUTER JOIN rt0 ON rt0.c0 WHERE (((((rt0.c2)<=(NULL))) ISNULL)) ORDER BY (((rt1.c4 IN ())) NOT BETWEEN (((rt0.c1)IS(t0.c2))) AND ((- (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<=(NULL))) ISNULL)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON CASE ((rt0.c1)>(rt1.c2))  WHEN ((t0.c1) IS FALSE) THEN CAST(rt1.c1 AS REAL) WHEN ((t0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) THEN rt1.c1 COLLATE BINARY WHEN CAST(0.10956655970002505 AS INTEGER) THEN ((rt0.c0)<=(rt1.c1)) END RIGHT OUTER JOIN rt0 ON rt0.c0 ORDER BY (((rt1.c4 IN ())) NOT BETWEEN (((rt0.c1)IS(t0.c2))) AND ((- (rt0.c1)))));
SELECT * FROM rt1 WHERE ((((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))))<((rt1.c1 IN ('115301562', rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))))<((rt1.c1 IN ('115301562', rt1.c4))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))))<((rt1.c1 IN ('115301562', rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))))<((rt1.c1 IN ('115301562', rt1.c4))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))))<((rt1.c1 IN ('115301562', rt1.c4)))));
SELECT * FROM rt0 WHERE (CASE ((rt0.c0) IS FALSE)  WHEN (- (rt0.c1)) THEN ((((((((rt0.c1)AND(0Xffffffffd2e7d7f8)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)) WHEN (rt0.c1 IN ()) THEN json_object(rt0.c2, rt0.c1) WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) THEN ((rt0.c2)=(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0) IS FALSE)  WHEN (- (rt0.c1)) THEN ((((((((rt0.c1)AND(0Xffffffffd2e7d7f8)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)) WHEN (rt0.c1 IN ()) THEN json_object(rt0.c2, rt0.c1) WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) THEN ((rt0.c2)==(rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE ((rt0.c0) IS FALSE)  WHEN (- (rt0.c1)) THEN ((((((((rt0.c1)AND(0Xffffffffd2e7d7f8)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)) WHEN (rt0.c1 IN ()) THEN json_object(rt0.c2, rt0.c1) WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) THEN ((rt0.c2)=(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0) IS FALSE)  WHEN (- (rt0.c1)) THEN ((((((((rt0.c1)AND(0Xffffffffd2e7d7f8)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)) WHEN (rt0.c1 IN ()) THEN json_object(rt0.c2, rt0.c1) WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) THEN ((rt0.c2)==(rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE ((rt0.c0) IS FALSE)  WHEN (- (rt0.c1)) THEN ((((((((rt0.c1)AND(0Xffffffffd2e7d7f8)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)) WHEN (rt0.c1 IN ()) THEN json_object(rt0.c2, rt0.c1) WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) THEN ((rt0.c2)=(rt0.c2)) END);
SELECT * FROM t0, rt0 WHERE (((rt0.c2)LIKE(t0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)LIKE(t0.c1)) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((rt0.c2)LIKE(t0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)LIKE(t0.c1)) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((rt0.c2)LIKE(t0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE ((rt0.c2 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE RTRIM IN ())) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE ((rt0.c2 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE RTRIM IN ())) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE ((rt0.c2 COLLATE RTRIM IN ()));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON ((((rt1.c4) NOTNULL))<('705822108')) WHERE (NULL) ORDER BY ((((rt0.c1) IS FALSE)) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON ((((rt1.c4) NOTNULL))<('705822108')) ORDER BY ((((rt0.c1) IS FALSE)) IS TRUE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON ((((rt1.c4) NOTNULL))<('705822108')) WHERE (NULL) ORDER BY ((((rt0.c1) IS FALSE)) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON ((((rt1.c4) NOTNULL))<('705822108')) ORDER BY ((((rt0.c1) IS FALSE)) IS TRUE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON ((((rt1.c4) NOTNULL))<('705822108')) WHERE (NULL) ORDER BY ((((rt0.c1) IS FALSE)) IS TRUE) DESC  NULLS FIRST;
SELECT * FROM rt0, t0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((t0.c2 IN ())) NOT BETWEEN ((t0.c2 IN ())) AND (((((t0.c0)OR(t0.c1)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN ())) NOT BETWEEN ((t0.c2 IN ())) AND (((((t0.c0)OR(t0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((t0.c2 IN ())) NOT BETWEEN ((t0.c2 IN ())) AND (((((t0.c0)OR(t0.c1)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN ())) NOT BETWEEN ((t0.c2 IN ())) AND (((((t0.c0)OR(t0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((t0.c2 IN ())) NOT BETWEEN ((t0.c2 IN ())) AND (((((t0.c0)OR(t0.c1)))AND(rt0.c0)))));
SELECT ALL * FROM rt0, t0, rt1 WHERE (((rt1.c0 IN ()) IN ())) ORDER BY (+ (((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0 IN ()) IN ())) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY (+ (((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt1.c1))))  NULLS LAST);
SELECT ALL * FROM rt0, t0, rt1 WHERE (((rt1.c0 IN ()) IN ())) ORDER BY (+ (((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0 IN ()) IN ())) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY (+ (((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt1.c1))))  NULLS LAST);
SELECT ALL * FROM rt0, t0, rt1 WHERE (((rt1.c0 IN ()) IN ())) ORDER BY (+ (((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt1.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL);
SELECT * FROM rt0, t0, rt1 WHERE ((+ (((rt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c0) NOT NULL)))) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT * FROM rt0, t0, rt1 WHERE ((+ (((rt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c0) NOT NULL)))) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT * FROM rt0, t0, rt1 WHERE ((+ (((rt1.c0) NOT NULL))));
SELECT ALL * FROM t0, rt0 NOT INDEXED, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL * FROM t0, rt0 NOT INDEXED, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL * FROM t0, rt0 NOT INDEXED, rt1 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c1)/(rt1.c3)))<=(0xffffffff8b14dd65)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)/(rt1.c3)))<=(0xffffffff8b14dd65))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c1)/(rt1.c3)))<=(0xffffffff8b14dd65)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)/(rt1.c3)))<=(0xffffffff8b14dd65))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c1)/(rt1.c3)))<=(0xffffffff8b14dd65)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((rt0.c2 IN ()))AND((rt0.c0 IN (rt0.c1)))))OR(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)))OR(((((rt0.c1)OR(rt0.c0)))OR(-165554357)))))OR(LIKELIHOOD(DISTINCT rt0.c0, 0.9818580767657366)))) ORDER BY (+ (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c2 IN ()))AND((rt0.c0 IN (rt0.c1)))))OR(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)))OR(((((rt0.c1)OR(rt0.c0)))OR(-165554357)))))OR(LIKELIHOOD(DISTINCT rt0.c0, 0.9818580767657366)))) IS TRUE)  as count FROM rt0 ORDER BY (+ (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((rt0.c2 IN ()))AND((rt0.c0 IN (rt0.c1)))))OR(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)))OR(((((rt0.c1)OR(rt0.c0)))OR(-165554357)))))OR(LIKELIHOOD(DISTINCT rt0.c0, 0.9818580767657366)))) ORDER BY (+ (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c2 IN ()))AND((rt0.c0 IN (rt0.c1)))))OR(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)))OR(((((rt0.c1)OR(rt0.c0)))OR(-165554357)))))OR(LIKELIHOOD(DISTINCT rt0.c0, 0.9818580767657366)))) IS TRUE)  as count FROM rt0 ORDER BY (+ (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((rt0.c2 IN ()))AND((rt0.c0 IN (rt0.c1)))))OR(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)))OR(((((rt0.c1)OR(rt0.c0)))OR(-165554357)))))OR(LIKELIHOOD(DISTINCT rt0.c0, 0.9818580767657366)))) ORDER BY (+ (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END));
SELECT * FROM t0, rt1 WHERE (CAST(rt1.c2 COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c2 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (CAST(rt1.c2 COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c2 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (CAST(rt1.c2 COLLATE NOCASE AS BLOB));
SELECT * FROM rt1 WHERE (((((~ (rt1.c4))))>=((rt1.c4))));
SELECT SUM(count) FROM (SELECT ((((((~ (rt1.c4))))>=((rt1.c4)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((~ (rt1.c4))))>=((rt1.c4))));
SELECT SUM(count) FROM (SELECT ((((((~ (rt1.c4))))>=((rt1.c4)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((~ (rt1.c4))))>=((rt1.c4))));
SELECT COUNT(*) FROM t0 WHERE (((t0.c2)||(t0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t0.c2)||(t0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c2)||(t0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t0.c2)||(t0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c2)||(t0.c2)) COLLATE RTRIM);
SELECT * FROM rt0 WHERE (((rt0.c0)<>((((rt0.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)<>((((rt0.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c0)<>((((rt0.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)<>((((rt0.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c0)<>((((rt0.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c2))))));
SELECT COUNT(*) FROM t0 WHERE (((t0.c2)>=(t0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2)>=(t0.c1)) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c2)>=(t0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2)>=(t0.c1)) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c2)>=(t0.c1)) COLLATE BINARY);
SELECT ALL * FROM t0, rt1, rt0 WHERE ((- (CAST(rt0.c0 AS NUMERIC)))) ORDER BY rt1.c4 ASC  NULLS FIRST, CAST((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c3))) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT (((- (CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY rt1.c4 ASC  NULLS FIRST, CAST((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c3))) AS BLOB) DESC);
SELECT ALL * FROM t0, rt1, rt0 WHERE ((- (CAST(rt0.c0 AS NUMERIC)))) ORDER BY rt1.c4 ASC  NULLS FIRST, CAST((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c3))) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT (((- (CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY rt1.c4 ASC  NULLS FIRST, CAST((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c3))) AS BLOB) DESC);
SELECT ALL * FROM t0, rt1, rt0 WHERE ((- (CAST(rt0.c0 AS NUMERIC)))) ORDER BY rt1.c4 ASC  NULLS FIRST, CAST((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c3))) AS BLOB) DESC;
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (rt1.c4) ORDER BY ((((((t0.c0)OR(rt1.c3)))OR(rt1.c3)))>>(CASE WHEN NULL THEN rt1.c2 ELSE rt1.c2 END)), SQLITE_SOURCE_ID() DESC  NULLS FIRST, (((('0.05526626615513863') NOT NULL))==(((rt1.c0)>>(0.7414619490269423)))) DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM t0, rt1 ORDER BY ((((((t0.c0)OR(rt1.c3)))OR(rt1.c3)))>>(CASE WHEN NULL THEN rt1.c2 ELSE rt1.c2 END)), SQLITE_SOURCE_ID() DESC  NULLS FIRST, (((('0.05526626615513863') NOT NULL))==(((rt1.c0)>>(0.7414619490269423)))) DESC);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (rt1.c4) ORDER BY ((((((t0.c0)OR(rt1.c3)))OR(rt1.c3)))>>(CASE WHEN NULL THEN rt1.c2 ELSE rt1.c2 END)), SQLITE_SOURCE_ID() DESC  NULLS FIRST, (((('0.05526626615513863') NOT NULL))==(((rt1.c0)>>(0.7414619490269423)))) DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM t0, rt1 ORDER BY ((((((t0.c0)OR(rt1.c3)))OR(rt1.c3)))>>(CASE WHEN NULL THEN rt1.c2 ELSE rt1.c2 END)), SQLITE_SOURCE_ID() DESC  NULLS FIRST, (((('0.05526626615513863') NOT NULL))==(((rt1.c0)>>(0.7414619490269423)))) DESC);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (rt1.c4) ORDER BY ((((((t0.c0)OR(rt1.c3)))OR(rt1.c3)))>>(CASE WHEN NULL THEN rt1.c2 ELSE rt1.c2 END)), SQLITE_SOURCE_ID() DESC  NULLS FIRST, (((('0.05526626615513863') NOT NULL))==(((rt1.c0)>>(0.7414619490269423)))) DESC;
SELECT ALL * FROM t0, rt1 WHERE ((((LIKELY(rt1.c4), (~ (rt1.c1)), CAST(t0.c0 AS REAL)))>((((t0.c1) BETWEEN (rt1.c2) AND (t0.c2)), TRIM(rt1.c0), (((t0.c1)) BETWEEN ((rt1.c4)) AND ((rt1.c4))))))) ORDER BY ((TIME(t0.c1, t0.c2, rt1.c0)) NOT BETWEEN (rt1.c0 COLLATE BINARY) AND (json(rt1.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((LIKELY(rt1.c4), (~ (rt1.c1)), CAST(t0.c0 AS REAL)))>((((t0.c1) BETWEEN (rt1.c2) AND (t0.c2)), TRIM(rt1.c0), (((t0.c1)) BETWEEN ((rt1.c4)) AND ((rt1.c4))))))) IS TRUE)  as count FROM t0, rt1 ORDER BY ((TIME(t0.c1, t0.c2, rt1.c0)) NOT BETWEEN (rt1.c0 COLLATE BINARY) AND (json(rt1.c0))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, rt1 WHERE ((((LIKELY(rt1.c4), (~ (rt1.c1)), CAST(t0.c0 AS REAL)))>((((t0.c1) BETWEEN (rt1.c2) AND (t0.c2)), TRIM(rt1.c0), (((t0.c1)) BETWEEN ((rt1.c4)) AND ((rt1.c4))))))) ORDER BY ((TIME(t0.c1, t0.c2, rt1.c0)) NOT BETWEEN (rt1.c0 COLLATE BINARY) AND (json(rt1.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((LIKELY(rt1.c4), (~ (rt1.c1)), CAST(t0.c0 AS REAL)))>((((t0.c1) BETWEEN (rt1.c2) AND (t0.c2)), TRIM(rt1.c0), (((t0.c1)) BETWEEN ((rt1.c4)) AND ((rt1.c4))))))) IS TRUE)  as count FROM t0, rt1 ORDER BY ((TIME(t0.c1, t0.c2, rt1.c0)) NOT BETWEEN (rt1.c0 COLLATE BINARY) AND (json(rt1.c0))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, rt1 WHERE ((((LIKELY(rt1.c4), (~ (rt1.c1)), CAST(t0.c0 AS REAL)))>((((t0.c1) BETWEEN (rt1.c2) AND (t0.c2)), TRIM(rt1.c0), (((t0.c1)) BETWEEN ((rt1.c4)) AND ((rt1.c4))))))) ORDER BY ((TIME(t0.c1, t0.c2, rt1.c0)) NOT BETWEEN (rt1.c0 COLLATE BINARY) AND (json(rt1.c0))) DESC  NULLS FIRST;
SELECT * FROM t0, rt0, rt1 WHERE (rt1.c0) ORDER BY CASE ((rt0.c1) IS FALSE)  WHEN ((rt1.c0)<(rt0.c0)) THEN t0.c0 END  NULLS LAST, ((((ABS(DISTINCT t0.c2))OR(((rt0.c2) NOTNULL))))AND((rt1.c4 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY CASE ((rt0.c1) IS FALSE)  WHEN ((rt1.c0)<(rt0.c0)) THEN t0.c0 END  NULLS LAST, ((((ABS(DISTINCT t0.c2))OR(((rt0.c2) NOTNULL))))AND((rt1.c4 IN ()))) DESC);
SELECT * FROM t0, rt0, rt1 WHERE (rt1.c0) ORDER BY CASE ((rt0.c1) IS FALSE)  WHEN ((rt1.c0)<(rt0.c0)) THEN t0.c0 END  NULLS LAST, ((((ABS(DISTINCT t0.c2))OR(((rt0.c2) NOTNULL))))AND((rt1.c4 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY CASE ((rt0.c1) IS FALSE)  WHEN ((rt1.c0)<(rt0.c0)) THEN t0.c0 END  NULLS LAST, ((((ABS(DISTINCT t0.c2))OR(((rt0.c2) NOTNULL))))AND((rt1.c4 IN ()))) DESC);
SELECT ALL * FROM rt0, t0 WHERE (CASE WHEN ((t0.c0)%(t0.c1)) THEN ((t0.c1) BETWEEN (rt0.c0) AND (t0.c1)) ELSE LIKELIHOOD(DISTINCT '', 0.3158041530899177) END) ORDER BY UPPER(((t0.c2) BETWEEN (rt0.c0) AND (rt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0)%(t0.c1)) THEN ((t0.c1) BETWEEN (rt0.c0) AND (t0.c1)) ELSE LIKELIHOOD(DISTINCT '', 0.3158041530899177) END) IS TRUE)  as count FROM rt0, t0 ORDER BY UPPER(((t0.c2) BETWEEN (rt0.c0) AND (rt0.c0))) ASC);
SELECT ALL * FROM rt0, t0 WHERE (CASE WHEN ((t0.c0)%(t0.c1)) THEN ((t0.c1) BETWEEN (rt0.c0) AND (t0.c1)) ELSE LIKELIHOOD(DISTINCT '', 0.3158041530899177) END) ORDER BY UPPER(((t0.c2) BETWEEN (rt0.c0) AND (rt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0)%(t0.c1)) THEN ((t0.c1) BETWEEN (rt0.c0) AND (t0.c1)) ELSE LIKELIHOOD(DISTINCT '', 0.3158041530899177) END) IS TRUE)  as count FROM rt0, t0 ORDER BY UPPER(((t0.c2) BETWEEN (rt0.c0) AND (rt0.c0))) ASC);
SELECT ALL * FROM rt0, t0 WHERE (CASE WHEN ((t0.c0)%(t0.c1)) THEN ((t0.c1) BETWEEN (rt0.c0) AND (t0.c1)) ELSE LIKELIHOOD(DISTINCT '', 0.3158041530899177) END) ORDER BY UPPER(((t0.c2) BETWEEN (rt0.c0) AND (rt0.c0))) ASC;
SELECT ALL * FROM rt1, t0 WHERE ((- (((((((((t0.c1)OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c4)))AND(x'418f'))))) ORDER BY (NOT (CASE t0.c2  WHEN rt1.c2 THEN t0.c2 ELSE rt1.c4 END)) DESC, COALESCE(((rt1.c0) IS FALSE), NULLIF(rt1.c1, t0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((((((((t0.c1)OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c4)))AND(x'418f'))))) IS TRUE)  as count FROM rt1, t0 ORDER BY (NOT (CASE t0.c2  WHEN rt1.c2 THEN t0.c2 ELSE rt1.c4 END)) DESC, COALESCE(((rt1.c0) IS FALSE), NULLIF(rt1.c1, t0.c0))  NULLS LAST);
SELECT ALL * FROM rt1, t0 WHERE ((- (((((((((t0.c1)OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c4)))AND(x'418f'))))) ORDER BY (NOT (CASE t0.c2  WHEN rt1.c2 THEN t0.c2 ELSE rt1.c4 END)) DESC, COALESCE(((rt1.c0) IS FALSE), NULLIF(rt1.c1, t0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((((((((t0.c1)OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c4)))AND(x'418f'))))) IS TRUE)  as count FROM rt1, t0 ORDER BY (NOT (CASE t0.c2  WHEN rt1.c2 THEN t0.c2 ELSE rt1.c4 END)) DESC, COALESCE(((rt1.c0) IS FALSE), NULLIF(rt1.c1, t0.c0))  NULLS LAST);
SELECT ALL * FROM rt1, t0 WHERE ((- (((((((((t0.c1)OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c4)))AND(x'418f'))))) ORDER BY (NOT (CASE t0.c2  WHEN rt1.c2 THEN t0.c2 ELSE rt1.c4 END)) DESC, COALESCE(((rt1.c0) IS FALSE), NULLIF(rt1.c1, t0.c0))  NULLS LAST;
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (((IFNULL(rt0.c2, rt1.c3))-(CASE WHEN rt1.c2 THEN t0.c2 ELSE rt0.c0 END))) ORDER BY ((((((((((rt0.c0)OR(t0.c2)))OR(rt1.c3)))AND(t0.c2)))AND(rt1.c0))) IS TRUE) DESC, (+ (NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((IFNULL(rt0.c2, rt1.c3))-(CASE WHEN rt1.c2 THEN t0.c2 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY ((((((((((rt0.c0)OR(t0.c2)))OR(rt1.c3)))AND(t0.c2)))AND(rt1.c0))) IS TRUE) DESC, (+ (NULL))  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (((IFNULL(rt0.c2, rt1.c3))-(CASE WHEN rt1.c2 THEN t0.c2 ELSE rt0.c0 END))) ORDER BY ((((((((((rt0.c0)OR(t0.c2)))OR(rt1.c3)))AND(t0.c2)))AND(rt1.c0))) IS TRUE) DESC, (+ (NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((IFNULL(rt0.c2, rt1.c3))-(CASE WHEN rt1.c2 THEN t0.c2 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY ((((((((((rt0.c0)OR(t0.c2)))OR(rt1.c3)))AND(t0.c2)))AND(rt1.c0))) IS TRUE) DESC, (+ (NULL))  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (((IFNULL(rt0.c2, rt1.c3))-(CASE WHEN rt1.c2 THEN t0.c2 ELSE rt0.c0 END))) ORDER BY ((((((((((rt0.c0)OR(t0.c2)))OR(rt1.c3)))AND(t0.c2)))AND(rt1.c0))) IS TRUE) DESC, (+ (NULL))  NULLS LAST;
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt1.c0)>=(rt0.c1))) NOT BETWEEN (NULL) AND (CASE rt1.c1  WHEN rt0.c0 THEN rt1.c3 ELSE rt0.c2 END))) ORDER BY ((CASE rt1.c0  WHEN rt1.c0 THEN rt0.c0 WHEN 'g#<pb\rA6j' THEN rt0.c2 WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt1.c3 END) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)>=(rt0.c1))) NOT BETWEEN (NULL) AND (CASE rt1.c1  WHEN rt0.c0 THEN rt1.c3 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((CASE rt1.c0  WHEN rt1.c0 THEN rt0.c0 WHEN 'g#<pb\rA6j' THEN rt0.c2 WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt1.c3 END) IS TRUE));
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt1.c0)>=(rt0.c1))) NOT BETWEEN (NULL) AND (CASE rt1.c1  WHEN rt0.c0 THEN rt1.c3 ELSE rt0.c2 END))) ORDER BY ((CASE rt1.c0  WHEN rt1.c0 THEN rt0.c0 WHEN 'g#<pb\rA6j' THEN rt0.c2 WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt1.c3 END) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)>=(rt0.c1))) NOT BETWEEN (NULL) AND (CASE rt1.c1  WHEN rt0.c0 THEN rt1.c3 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((CASE rt1.c0  WHEN rt1.c0 THEN rt0.c0 WHEN 'g#<pb\rA6j' THEN rt0.c2 WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt1.c3 END) IS TRUE));
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt1.c0)>=(rt0.c1))) NOT BETWEEN (NULL) AND (CASE rt1.c1  WHEN rt0.c0 THEN rt1.c3 ELSE rt0.c2 END))) ORDER BY ((CASE rt1.c0  WHEN rt1.c0 THEN rt0.c0 WHEN 'g#<pb\rA6j' THEN rt0.c2 WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt1.c3 END) IS TRUE);
SELECT ALL * FROM rt0, rt1, t0 WHERE (((rt1.c4) NOT NULL) COLLATE BINARY) ORDER BY (~ ((rt1.c4 IN ())));
SELECT SUM(count) FROM (SELECT ((((rt1.c4) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY (~ ((rt1.c4 IN ()))));
SELECT ALL * FROM rt0, rt1, t0 WHERE (((rt1.c4) NOT NULL) COLLATE BINARY) ORDER BY (~ ((rt1.c4 IN ())));
SELECT SUM(count) FROM (SELECT ((((rt1.c4) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY (~ ((rt1.c4 IN ()))));
SELECT ALL * FROM rt0, rt1, t0 WHERE (((rt1.c4) NOT NULL) COLLATE BINARY) ORDER BY (~ ((rt1.c4 IN ())));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ())) IS FALSE)) ORDER BY (((TYPEOF(DISTINCT rt0.c0)))=((x'')))  NULLS LAST, rt0.c2;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY (((TYPEOF(DISTINCT rt0.c0)))=((x'')))  NULLS LAST, rt0.c2);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ())) IS FALSE)) ORDER BY (((TYPEOF(DISTINCT rt0.c0)))=((x'')))  NULLS LAST, rt0.c2;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY (((TYPEOF(DISTINCT rt0.c0)))=((x'')))  NULLS LAST, rt0.c2);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ())) IS FALSE)) ORDER BY (((TYPEOF(DISTINCT rt0.c0)))=((x'')))  NULLS LAST, rt0.c2;
SELECT COUNT(*) FROM rt1 WHERE ((CAST(rt1.c2 AS BLOB) IN (UPPER(DISTINCT rt1.c4), ((rt1.c4)+(rt1.c3))))) ORDER BY (((((((rt1.c3)AND(rt1.c4)))AND(rt1.c1))))==(((rt1.c1 IN (rt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c2 AS BLOB) IN (UPPER(DISTINCT rt1.c4), ((rt1.c4)+(rt1.c3))))) IS TRUE)  as count FROM rt1 ORDER BY (((((((rt1.c3)AND(rt1.c4)))AND(rt1.c1))))==(((rt1.c1 IN (rt1.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((CAST(rt1.c2 AS BLOB) IN (UPPER(DISTINCT rt1.c4), ((rt1.c4)+(rt1.c3))))) ORDER BY (((((((rt1.c3)AND(rt1.c4)))AND(rt1.c1))))==(((rt1.c1 IN (rt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c2 AS BLOB) IN (UPPER(DISTINCT rt1.c4), ((rt1.c4)+(rt1.c3))))) IS TRUE)  as count FROM rt1 ORDER BY (((((((rt1.c3)AND(rt1.c4)))AND(rt1.c1))))==(((rt1.c1 IN (rt1.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((CAST(rt1.c2 AS BLOB) IN (UPPER(DISTINCT rt1.c4), ((rt1.c4)+(rt1.c3))))) ORDER BY (((((((rt1.c3)AND(rt1.c4)))AND(rt1.c1))))==(((rt1.c1 IN (rt1.c0)))))  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ('-586017311');
SELECT SUM(count) FROM (SELECT (('-586017311') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ('-586017311');
SELECT SUM(count) FROM (SELECT (('-586017311') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ('-586017311');
SELECT COUNT(*) FROM rt0, rt1 WHERE (INSTR('5K#偈RYw#P' COLLATE RTRIM, rt1.c1));
SELECT SUM(count) FROM (SELECT ((INSTR('5K#偈RYw#P' COLLATE RTRIM, rt1.c1)) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (INSTR('5K#偈RYw#P' COLLATE RTRIM, rt1.c1));
SELECT SUM(count) FROM (SELECT ((INSTR('5K#偈RYw#P' COLLATE RTRIM, rt1.c1)) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (INSTR('5K#偈RYw#P' COLLATE RTRIM, rt1.c1));
SELECT ALL * FROM t0 NATURAL JOIN rt1 WHERE (((CAST(t0.c0 AS NUMERIC)) NOTNULL)) ORDER BY CASE WHEN ((rt1.c3) ISNULL) THEN ((((rt1.c1)OR(rt1.c3)))OR(rt1.c4)) WHEN ((rt1.c1) NOT NULL) THEN rt1.c3 WHEN (~ (t0.c2)) THEN ((((t0.c1)OR(rt1.c4)))OR(t0.c1)) ELSE CASE WHEN rt1.c4 THEN t0.c2 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c4 THEN t0.c1 END END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS NUMERIC)) NOTNULL)) IS TRUE)  as count FROM t0 NATURAL JOIN rt1 ORDER BY CASE WHEN ((rt1.c3) ISNULL) THEN ((((rt1.c1)OR(rt1.c3)))OR(rt1.c4)) WHEN ((rt1.c1) NOT NULL) THEN rt1.c3 WHEN (~ (t0.c2)) THEN ((((t0.c1)OR(rt1.c4)))OR(t0.c1)) ELSE CASE WHEN rt1.c4 THEN t0.c2 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c4 THEN t0.c1 END END ASC);
SELECT ALL * FROM t0 NATURAL JOIN rt1 WHERE (((CAST(t0.c0 AS NUMERIC)) NOTNULL)) ORDER BY CASE WHEN ((rt1.c3) ISNULL) THEN ((((rt1.c1)OR(rt1.c3)))OR(rt1.c4)) WHEN ((rt1.c1) NOT NULL) THEN rt1.c3 WHEN (~ (t0.c2)) THEN ((((t0.c1)OR(rt1.c4)))OR(t0.c1)) ELSE CASE WHEN rt1.c4 THEN t0.c2 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c4 THEN t0.c1 END END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS NUMERIC)) NOTNULL)) IS TRUE)  as count FROM t0 NATURAL JOIN rt1 ORDER BY CASE WHEN ((rt1.c3) ISNULL) THEN ((((rt1.c1)OR(rt1.c3)))OR(rt1.c4)) WHEN ((rt1.c1) NOT NULL) THEN rt1.c3 WHEN (~ (t0.c2)) THEN ((((t0.c1)OR(rt1.c4)))OR(t0.c1)) ELSE CASE WHEN rt1.c4 THEN t0.c2 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c4 THEN t0.c1 END END ASC);
SELECT ALL * FROM t0 NATURAL JOIN rt1 WHERE (((CAST(t0.c0 AS NUMERIC)) NOTNULL)) ORDER BY CASE WHEN ((rt1.c3) ISNULL) THEN ((((rt1.c1)OR(rt1.c3)))OR(rt1.c4)) WHEN ((rt1.c1) NOT NULL) THEN rt1.c3 WHEN (~ (t0.c2)) THEN ((((t0.c1)OR(rt1.c4)))OR(t0.c1)) ELSE CASE WHEN rt1.c4 THEN t0.c2 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c4 THEN t0.c1 END END ASC;
SELECT ALL * FROM rt1 FULL OUTER JOIN t0 ON ((+ (rt1.c4)) IN (rt0.c2)) INNER JOIN rt0 ON CASE ((t0.c2)*(t0.c2))  WHEN ((rt1.c2)IS(rt0.c0)) THEN ((rt0.c2)==(rt1.c0)) ELSE ((((rt1.c3)OR(rt1.c3)))AND(rt1.c1)) END WHERE ((- (((rt1.c4)<<(NULL))))) ORDER BY ((rt1.c0 COLLATE RTRIM)GLOB(((t0.c0)>(t0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt1.c4)<<(NULL))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON ((+ (rt1.c4)) IN (rt0.c2)) INNER JOIN rt0 ON CASE ((t0.c2)*(t0.c2))  WHEN ((rt1.c2)IS(rt0.c0)) THEN ((rt0.c2)==(rt1.c0)) ELSE ((((rt1.c3)OR(rt1.c3)))AND(rt1.c1)) END ORDER BY ((rt1.c0 COLLATE RTRIM)GLOB(((t0.c0)>(t0.c2)))));
SELECT ALL * FROM rt1 FULL OUTER JOIN t0 ON ((+ (rt1.c4)) IN (rt0.c2)) INNER JOIN rt0 ON CASE ((t0.c2)*(t0.c2))  WHEN ((rt1.c2)IS(rt0.c0)) THEN ((rt0.c2)==(rt1.c0)) ELSE ((((rt1.c3)OR(rt1.c3)))AND(rt1.c1)) END WHERE ((- (((rt1.c4)<<(NULL))))) ORDER BY ((rt1.c0 COLLATE RTRIM)GLOB(((t0.c0)>(t0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt1.c4)<<(NULL))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON ((+ (rt1.c4)) IN (rt0.c2)) INNER JOIN rt0 ON CASE ((t0.c2)*(t0.c2))  WHEN ((rt1.c2)IS(rt0.c0)) THEN ((rt0.c2)==(rt1.c0)) ELSE ((((rt1.c3)OR(rt1.c3)))AND(rt1.c1)) END ORDER BY ((rt1.c0 COLLATE RTRIM)GLOB(((t0.c0)>(t0.c2)))));
SELECT ALL * FROM rt0, rt1 WHERE ((CASE rt1.c3  WHEN rt1.c1 THEN rt1.c0 ELSE '' END IN ())) ORDER BY CASE NULL  WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c3 THEN rt0.c2 WHEN rt1.c1 THEN rt0.c2 ELSE x'79bf' END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((CASE rt1.c3  WHEN rt1.c1 THEN rt1.c0 ELSE '' END IN ())) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE NULL  WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c3 THEN rt0.c2 WHEN rt1.c1 THEN rt0.c2 ELSE x'79bf' END COLLATE BINARY);
SELECT ALL * FROM rt0, rt1 WHERE ((CASE rt1.c3  WHEN rt1.c1 THEN rt1.c0 ELSE '' END IN ())) ORDER BY CASE NULL  WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c3 THEN rt0.c2 WHEN rt1.c1 THEN rt0.c2 ELSE x'79bf' END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((CASE rt1.c3  WHEN rt1.c1 THEN rt1.c0 ELSE '' END IN ())) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE NULL  WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c3 THEN rt0.c2 WHEN rt1.c1 THEN rt0.c2 ELSE x'79bf' END COLLATE BINARY);
SELECT ALL * FROM rt0, rt1 WHERE ((CASE rt1.c3  WHEN rt1.c1 THEN rt1.c0 ELSE '' END IN ())) ORDER BY CASE NULL  WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c3 THEN rt0.c2 WHEN rt1.c1 THEN rt0.c2 ELSE x'79bf' END COLLATE BINARY;
SELECT COUNT(*) FROM t0, rt0 WHERE ((((0.10956655970002505 IN ()))!=(CAST(t0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((0.10956655970002505 IN ()))<>(CAST(t0.c0 AS INTEGER)))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((0.10956655970002505 IN ()))!=(CAST(t0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((0.10956655970002505 IN ()))<>(CAST(t0.c0 AS INTEGER)))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((0.10956655970002505 IN ()))!=(CAST(t0.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((CASE t0.c0  WHEN rt0.c2 THEN t0.c0 END)OR((rt0.c1 IN ()))))OR(CAST(rt0.c1 AS BLOB)))) ORDER BY (NOT ((~ (rt0.c1)))) DESC, ((((t0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CASE t0.c0  WHEN rt0.c2 THEN t0.c0 END)OR((rt0.c1 IN ()))))OR(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM t0, rt0 ORDER BY (NOT ((~ (rt0.c1)))) DESC, ((((t0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((CASE t0.c0  WHEN rt0.c2 THEN t0.c0 END)OR((rt0.c1 IN ()))))OR(CAST(rt0.c1 AS BLOB)))) ORDER BY (NOT ((~ (rt0.c1)))) DESC, ((((t0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CASE t0.c0  WHEN rt0.c2 THEN t0.c0 END)OR((rt0.c1 IN ()))))OR(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM t0, rt0 ORDER BY (NOT ((~ (rt0.c1)))) DESC, ((((t0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((CASE t0.c0  WHEN rt0.c2 THEN t0.c0 END)OR((rt0.c1 IN ()))))OR(CAST(rt0.c1 AS BLOB)))) ORDER BY (NOT ((~ (rt0.c1)))) DESC, ((((t0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT NULL)  NULLS LAST;
SELECT * FROM rt1 WHERE ((((QUOTE(rt1.c2), x'15df', ((rt1.c3) IS FALSE)))>(((- (0.9880745168129205)), ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)), json_object(rt1.c4, rt1.c0))))) ORDER BY ((('1693457135') BETWEEN (rt1.c1) AND (rt1.c2)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((QUOTE(rt1.c2), x'15df', ((rt1.c3) IS FALSE)))>(((- (0.9880745168129205)), ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)), json_object(rt1.c4, rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY ((('1693457135') BETWEEN (rt1.c1) AND (rt1.c2)) IN ()) ASC  NULLS LAST);
SELECT * FROM rt1 WHERE ((((QUOTE(rt1.c2), x'15df', ((rt1.c3) IS FALSE)))>(((- (0.9880745168129205)), ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)), json_object(rt1.c4, rt1.c0))))) ORDER BY ((('1693457135') BETWEEN (rt1.c1) AND (rt1.c2)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((QUOTE(rt1.c2), x'15df', ((rt1.c3) IS FALSE)))>(((- (0.9880745168129205)), ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)), json_object(rt1.c4, rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY ((('1693457135') BETWEEN (rt1.c1) AND (rt1.c2)) IN ()) ASC  NULLS LAST);
SELECT * FROM rt1 WHERE ((((QUOTE(rt1.c2), x'15df', ((rt1.c3) IS FALSE)))>(((- (0.9880745168129205)), ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)), json_object(rt1.c4, rt1.c0))))) ORDER BY ((('1693457135') BETWEEN (rt1.c1) AND (rt1.c2)) IN ()) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((~ (rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((~ (rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((~ (rt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM rt1, t0, rt0 WHERE (((rt1.c0) NOTNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL * FROM rt1, t0, rt0 WHERE (((rt1.c0) NOTNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL * FROM rt1, t0, rt0 WHERE (((rt1.c0) NOTNULL) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN ((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c2)) THEN ((rt1.c1)<(rt1.c0)) END) ORDER BY rt1.c1  NULLS FIRST, IFNULL(((rt1.c2)<=(rt1.c2)), ((rt1.c4) IS TRUE)) ASC, ((((rt1.c2)*(rt1.c4)))>(CASE rt1.c1  WHEN rt1.c3 THEN rt1.c3 END));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c2)) THEN ((rt1.c1)<(rt1.c0)) END) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1  NULLS FIRST, IFNULL(((rt1.c2)<=(rt1.c2)), ((rt1.c4) IS TRUE)) ASC, ((((rt1.c2)*(rt1.c4)))>(CASE rt1.c1  WHEN rt1.c3 THEN rt1.c3 END)));
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN ((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c2)) THEN ((rt1.c1)<(rt1.c0)) END) ORDER BY rt1.c1  NULLS FIRST, IFNULL(((rt1.c2)<=(rt1.c2)), ((rt1.c4) IS TRUE)) ASC, ((((rt1.c2)*(rt1.c4)))>(CASE rt1.c1  WHEN rt1.c3 THEN rt1.c3 END));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c2)) THEN ((rt1.c1)<(rt1.c0)) END) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1  NULLS FIRST, IFNULL(((rt1.c2)<=(rt1.c2)), ((rt1.c4) IS TRUE)) ASC, ((((rt1.c2)*(rt1.c4)))>(CASE rt1.c1  WHEN rt1.c3 THEN rt1.c3 END)));
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN ((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c2)) THEN ((rt1.c1)<(rt1.c0)) END) ORDER BY rt1.c1  NULLS FIRST, IFNULL(((rt1.c2)<=(rt1.c2)), ((rt1.c4) IS TRUE)) ASC, ((((rt1.c2)*(rt1.c4)))>(CASE rt1.c1  WHEN rt1.c3 THEN rt1.c3 END));
SELECT ALL * FROM rt0 WHERE (((TYPEOF(DISTINCT rt0.c1)) NOT BETWEEN ((rt0.c2 IN ())) AND (((rt0.c0)<<(rt0.c1))))) ORDER BY HEX(((rt0.c1)|(rt0.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT rt0.c1)) NOT BETWEEN ((rt0.c2 IN ())) AND (((rt0.c0)<<(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY HEX(((rt0.c1)|(rt0.c2))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((TYPEOF(DISTINCT rt0.c1)) NOT BETWEEN ((rt0.c2 IN ())) AND (((rt0.c0)<<(rt0.c1))))) ORDER BY HEX(((rt0.c1)|(rt0.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT rt0.c1)) NOT BETWEEN ((rt0.c2 IN ())) AND (((rt0.c0)<<(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY HEX(((rt0.c1)|(rt0.c2))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((TYPEOF(DISTINCT rt0.c1)) NOT BETWEEN ((rt0.c2 IN ())) AND (((rt0.c0)<<(rt0.c1))))) ORDER BY HEX(((rt0.c1)|(rt0.c2))) ASC  NULLS LAST;
SELECT * FROM t0 WHERE ((~ ((((t0.c1)) BETWEEN ((t0.c1)) AND ((t0.c1))))));
SELECT SUM(count) FROM (SELECT (((~ ((((t0.c1)) BETWEEN ((t0.c1)) AND ((t0.c1)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((~ ((((t0.c1)) BETWEEN ((t0.c1)) AND ((t0.c1))))));
SELECT SUM(count) FROM (SELECT (((~ ((((t0.c1)) BETWEEN ((t0.c1)) AND ((t0.c1)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((~ ((((t0.c1)) BETWEEN ((t0.c1)) AND ((t0.c1))))));
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 COLLATE BINARY AS NUMERIC)) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY NULL  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 COLLATE BINARY AS NUMERIC)) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY NULL  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 COLLATE BINARY AS NUMERIC)) ORDER BY NULL  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2) ORDER BY x'c0fb';
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1 ORDER BY x'c0fb');
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2) ORDER BY x'c0fb';
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1 ORDER BY x'c0fb');
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2) ORDER BY x'c0fb';
SELECT * FROM rt0, rt1 WHERE (((((((rt1.c2)<=(rt1.c3)))AND(((rt1.c2)|(rt1.c3)))))OR(CASE WHEN rt1.c1 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)<=(rt1.c3)))AND(((rt1.c2)|(rt1.c3)))))OR(CASE WHEN rt1.c1 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (((((((rt1.c2)<=(rt1.c3)))AND(((rt1.c2)|(rt1.c3)))))OR(CASE WHEN rt1.c1 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)<=(rt1.c3)))AND(((rt1.c2)|(rt1.c3)))))OR(CASE WHEN rt1.c1 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (((((((rt1.c2)<=(rt1.c3)))AND(((rt1.c2)|(rt1.c3)))))OR(CASE WHEN rt1.c1 THEN rt0.c2 END)));
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (NULL) ORDER BY (((((rt1.c4))<((rt1.c2)))) BETWEEN (((((t0.c1)OR(rt1.c3)))AND(t0.c0))) AND ((((t0.c0))<((t0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY (((((rt1.c4))<((rt1.c2)))) BETWEEN (((((t0.c1)OR(rt1.c3)))AND(t0.c0))) AND ((((t0.c0))<((t0.c2))))) ASC);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (NULL) ORDER BY (((((rt1.c4))<((rt1.c2)))) BETWEEN (((((t0.c1)OR(rt1.c3)))AND(t0.c0))) AND ((((t0.c0))<((t0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY (((((rt1.c4))<((rt1.c2)))) BETWEEN (((((t0.c1)OR(rt1.c3)))AND(t0.c0))) AND ((((t0.c0))<((t0.c2))))) ASC);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (NULL) ORDER BY (((((rt1.c4))<((rt1.c2)))) BETWEEN (((((t0.c1)OR(rt1.c3)))AND(t0.c0))) AND ((((t0.c0))<((t0.c2))))) ASC;
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON t0.c0 INNER JOIN rt1 ON LTRIM(rt1.c1 COLLATE RTRIM, (NOT (rt0.c2))) WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON t0.c0 INNER JOIN rt1 ON LTRIM(rt1.c1 COLLATE RTRIM, (NOT (rt0.c2))));
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON t0.c0 INNER JOIN rt1 ON LTRIM(rt1.c1 COLLATE RTRIM, (NOT (rt0.c2))) WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON t0.c0 INNER JOIN rt1 ON LTRIM(rt1.c1 COLLATE RTRIM, (NOT (rt0.c2))));
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON t0.c0 INNER JOIN rt1 ON LTRIM(rt1.c1 COLLATE RTRIM, (NOT (rt0.c2))) WHERE (rt1.c3);
SELECT * FROM rt0, t0 WHERE (((((((t0.c1)) NOT BETWEEN (('G}<')) AND ((rt0.c2)))))<=((rt0.c2 COLLATE RTRIM)))) ORDER BY CASE WHEN (((rt0.c1, t0.c1, t0.c0, t0.c0, rt0.c1)) BETWEEN ((t0.c1, t0.c2, rt0.c0, 469970364, rt0.c0)) AND ((rt0.c0, t0.c2, t0.c1, rt0.c1, t0.c1))) THEN rt0.c1 COLLATE RTRIM END  NULLS LAST, ((((t0.c2)OR(t0.c2)))&(t0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1)) NOT BETWEEN (('G}<')) AND ((rt0.c2)))))<=((rt0.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE WHEN (((rt0.c1, t0.c1, t0.c0, t0.c0, rt0.c1)) BETWEEN ((t0.c1, t0.c2, rt0.c0, 469970364, rt0.c0)) AND ((rt0.c0, t0.c2, t0.c1, rt0.c1, t0.c1))) THEN rt0.c1 COLLATE RTRIM END  NULLS LAST, ((((t0.c2)OR(t0.c2)))&(t0.c0 COLLATE NOCASE)));
SELECT * FROM rt0, t0 WHERE (((((((t0.c1)) NOT BETWEEN (('G}<')) AND ((rt0.c2)))))<=((rt0.c2 COLLATE RTRIM)))) ORDER BY CASE WHEN (((rt0.c1, t0.c1, t0.c0, t0.c0, rt0.c1)) BETWEEN ((t0.c1, t0.c2, rt0.c0, 469970364, rt0.c0)) AND ((rt0.c0, t0.c2, t0.c1, rt0.c1, t0.c1))) THEN rt0.c1 COLLATE RTRIM END  NULLS LAST, ((((t0.c2)OR(t0.c2)))&(t0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1)) NOT BETWEEN (('G}<')) AND ((rt0.c2)))))<=((rt0.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE WHEN (((rt0.c1, t0.c1, t0.c0, t0.c0, rt0.c1)) BETWEEN ((t0.c1, t0.c2, rt0.c0, 469970364, rt0.c0)) AND ((rt0.c0, t0.c2, t0.c1, rt0.c1, t0.c1))) THEN rt0.c1 COLLATE RTRIM END  NULLS LAST, ((((t0.c2)OR(t0.c2)))&(t0.c0 COLLATE NOCASE)));
SELECT * FROM rt0, t0 WHERE (((((((t0.c1)) NOT BETWEEN (('G}<')) AND ((rt0.c2)))))<=((rt0.c2 COLLATE RTRIM)))) ORDER BY CASE WHEN (((rt0.c1, t0.c1, t0.c0, t0.c0, rt0.c1)) BETWEEN ((t0.c1, t0.c2, rt0.c0, 469970364, rt0.c0)) AND ((rt0.c0, t0.c2, t0.c1, rt0.c1, t0.c1))) THEN rt0.c1 COLLATE RTRIM END  NULLS LAST, ((((t0.c2)OR(t0.c2)))&(t0.c0 COLLATE NOCASE));
SELECT ALL * FROM rt1, t0 WHERE (((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c4))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c4))) IN ())) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE (((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c4))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c4))) IN ())) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE (((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c4))) IN ()));
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (x'3aa3') ORDER BY ((ABS(t0.c1)) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'3aa3') IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY ((ABS(t0.c1)) IS TRUE) ASC);
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (x'3aa3') ORDER BY ((ABS(t0.c1)) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'3aa3') IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY ((ABS(t0.c1)) IS TRUE) ASC);
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (x'3aa3') ORDER BY ((ABS(t0.c1)) IS TRUE) ASC;
SELECT COUNT(*) FROM rt0, t0 WHERE ((((t0.c0)) NOT BETWEEN (((+ (rt0.c2)))) AND ((CASE WHEN rt0.c1 THEN x'' END))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) NOT BETWEEN (((+ (rt0.c2)))) AND ((CASE WHEN rt0.c1 THEN x'' END)))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((t0.c0)) NOT BETWEEN (((+ (rt0.c2)))) AND ((CASE WHEN rt0.c1 THEN x'' END))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) NOT BETWEEN (((+ (rt0.c2)))) AND ((CASE WHEN rt0.c1 THEN x'' END)))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((t0.c0)) NOT BETWEEN (((+ (rt0.c2)))) AND ((CASE WHEN rt0.c1 THEN x'' END))));
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (CAST(('410287349' IN (rt1.c2, rt1.c4)) AS TEXT)) ORDER BY ((json_valid(rt1.c2)) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(('410287349' IN (rt1.c2, rt1.c4)) AS TEXT)) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY ((json_valid(rt1.c2)) NOT NULL)  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (CAST(('410287349' IN (rt1.c2, rt1.c4)) AS TEXT)) ORDER BY ((json_valid(rt1.c2)) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(('410287349' IN (rt1.c2, rt1.c4)) AS TEXT)) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY ((json_valid(rt1.c2)) NOT NULL)  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (CAST(('410287349' IN (rt1.c2, rt1.c4)) AS TEXT)) ORDER BY ((json_valid(rt1.c2)) NOT NULL)  NULLS LAST;
SELECT ALL * FROM t0, rt1, rt0 WHERE (rt0.c2) ORDER BY COALESCE(DISTINCT CAST(rt1.c1 AS NUMERIC), ((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY COALESCE(DISTINCT CAST(rt1.c1 AS NUMERIC), ((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt1.c0)))  NULLS LAST);
SELECT ALL * FROM t0, rt1, rt0 WHERE (rt0.c2) ORDER BY COALESCE(DISTINCT CAST(rt1.c1 AS NUMERIC), ((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY COALESCE(DISTINCT CAST(rt1.c1 AS NUMERIC), ((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt1.c0)))  NULLS LAST);
SELECT ALL * FROM t0, rt1, rt0 WHERE (rt0.c2) ORDER BY COALESCE(DISTINCT CAST(rt1.c1 AS NUMERIC), ((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt1.c0)))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt1 WHERE (UPPER(t0.c1));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(t0.c1)) IS TRUE)  as count FROM t0 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt1 WHERE (UPPER(t0.c1));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(t0.c1)) IS TRUE)  as count FROM t0 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt1 WHERE (UPPER(t0.c1));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((~ (rt1.c2))) NOTNULL)) ORDER BY ((CASE WHEN rt1.c3 THEN rt1.c0 END) NOTNULL) DESC, (NOT (rt1.c3)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (rt1.c2))) NOTNULL)) IS TRUE)  as count FROM rt1 ORDER BY ((CASE WHEN rt1.c3 THEN rt1.c0 END) NOTNULL) DESC, (NOT (rt1.c3)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((~ (rt1.c2))) NOTNULL)) ORDER BY ((CASE WHEN rt1.c3 THEN rt1.c0 END) NOTNULL) DESC, (NOT (rt1.c3)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (rt1.c2))) NOTNULL)) IS TRUE)  as count FROM rt1 ORDER BY ((CASE WHEN rt1.c3 THEN rt1.c0 END) NOTNULL) DESC, (NOT (rt1.c3)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((~ (rt1.c2))) NOTNULL)) ORDER BY ((CASE WHEN rt1.c3 THEN rt1.c0 END) NOTNULL) DESC, (NOT (rt1.c3)) COLLATE RTRIM  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c4 END)AND(CAST(x'' AS REAL))))OR(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c4 END)AND(CAST(x'' AS REAL))))OR(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c4 END)AND(CAST(x'' AS REAL))))OR(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c4 END)AND(CAST(x'' AS REAL))))OR(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c4 END)AND(CAST(x'' AS REAL))))OR(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 END)));
SELECT * FROM t0 WHERE ((((t0.c1 IN ()))-((((t0.c2)) NOT BETWEEN ((0.20289299710778708)) AND ((t0.c2))))));
SELECT SUM(count) FROM (SELECT (((((t0.c1 IN ()))-((((t0.c2)) NOT BETWEEN ((0.20289299710778708)) AND ((t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c1 IN ()))-((((t0.c2)) NOT BETWEEN ((0.20289299710778708)) AND ((t0.c2))))));
SELECT SUM(count) FROM (SELECT (((((t0.c1 IN ()))-((((t0.c2)) NOT BETWEEN ((0.20289299710778708)) AND ((t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c1 IN ()))-((((t0.c2)) NOT BETWEEN ((0.20289299710778708)) AND ((t0.c2))))));
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))AND((rt0.c2 IN ()))))OR(7.05822108E8)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))AND((rt0.c2 IN ()))))OR(7.05822108E8))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))AND((rt0.c2 IN ()))))OR(7.05822108E8)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))AND((rt0.c2 IN ()))))OR(7.05822108E8))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))AND((rt0.c2 IN ()))))OR(7.05822108E8)));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST((((t0.c0))<((rt0.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t0.c0))<((rt0.c0))) AS BLOB)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST((((t0.c0))<((rt0.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t0.c0))<((rt0.c0))) AS BLOB)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST((((t0.c0))<((rt0.c0))) AS BLOB));
SELECT COUNT(*) FROM rt1 WHERE ((((((- (rt1.c0)))OR((((0.8177303606802453))==((rt1.c4))))))AND(CASE rt1.c3  WHEN rt1.c2 THEN rt1.c0 END))) ORDER BY (rt1.c0 COLLATE BINARY IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((- (rt1.c0)))OR((((0.8177303606802453))==((rt1.c4))))))AND(CASE rt1.c3  WHEN rt1.c2 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1 ORDER BY (rt1.c0 COLLATE BINARY IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE ((((((- (rt1.c0)))OR((((0.8177303606802453))==((rt1.c4))))))AND(CASE rt1.c3  WHEN rt1.c2 THEN rt1.c0 END))) ORDER BY (rt1.c0 COLLATE BINARY IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((- (rt1.c0)))OR((((0.8177303606802453))==((rt1.c4))))))AND(CASE rt1.c3  WHEN rt1.c2 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1 ORDER BY (rt1.c0 COLLATE BINARY IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE ((((((- (rt1.c0)))OR((((0.8177303606802453))==((rt1.c4))))))AND(CASE rt1.c3  WHEN rt1.c2 THEN rt1.c0 END))) ORDER BY (rt1.c0 COLLATE BINARY IN ()) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(TRIM(t0.c2) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TRIM(t0.c2) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(TRIM(t0.c2) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TRIM(t0.c2) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(TRIM(t0.c2) AS NUMERIC));
SELECT ALL * FROM rt0, t0 NOT INDEXED, rt1 WHERE ('j顒]n_|') ORDER BY TRIM(DISTINCT ((((rt1.c0)AND(rt0.c0)))OR(rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('j顒]n_|') IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY TRIM(DISTINCT ((((rt1.c0)AND(rt0.c0)))OR(rt0.c1))) ASC);
SELECT ALL * FROM rt0, t0 NOT INDEXED, rt1 WHERE ('j顒]n_|') ORDER BY TRIM(DISTINCT ((((rt1.c0)AND(rt0.c0)))OR(rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('j顒]n_|') IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY TRIM(DISTINCT ((((rt1.c0)AND(rt0.c0)))OR(rt0.c1))) ASC);
SELECT ALL * FROM rt0, t0 NOT INDEXED, rt1 WHERE ('j顒]n_|') ORDER BY TRIM(DISTINCT ((((rt1.c0)AND(rt0.c0)))OR(rt0.c1))) ASC;
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE ((- (CASE t0.c1  WHEN t0.c2 THEN rt1.c3 WHEN rt1.c2 THEN t0.c0 WHEN rt0.c0 THEN rt1.c1 END))) ORDER BY (((+ (rt1.c3)))IS NOT(CASE WHEN rt1.c2 THEN rt1.c3 WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c0 ELSE rt0.c0 END));
SELECT SUM(count) FROM (SELECT (((- (CASE t0.c1  WHEN t0.c2 THEN rt1.c3 WHEN rt1.c2 THEN t0.c0 WHEN rt0.c0 THEN rt1.c1 END))) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY (((+ (rt1.c3)))IS NOT(CASE WHEN rt1.c2 THEN rt1.c3 WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c0 ELSE rt0.c0 END)));
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE ((- (CASE t0.c1  WHEN t0.c2 THEN rt1.c3 WHEN rt1.c2 THEN t0.c0 WHEN rt0.c0 THEN rt1.c1 END))) ORDER BY (((+ (rt1.c3)))IS NOT(CASE WHEN rt1.c2 THEN rt1.c3 WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c0 ELSE rt0.c0 END));
SELECT SUM(count) FROM (SELECT (((- (CASE t0.c1  WHEN t0.c2 THEN rt1.c3 WHEN rt1.c2 THEN t0.c0 WHEN rt0.c0 THEN rt1.c1 END))) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY (((+ (rt1.c3)))IS NOT(CASE WHEN rt1.c2 THEN rt1.c3 WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c0 ELSE rt0.c0 END)));
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE ((- (CASE t0.c1  WHEN t0.c2 THEN rt1.c3 WHEN rt1.c2 THEN t0.c0 WHEN rt0.c0 THEN rt1.c1 END))) ORDER BY (((+ (rt1.c3)))IS NOT(CASE WHEN rt1.c2 THEN rt1.c3 WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c0 ELSE rt0.c0 END));
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT ALL * FROM rt1, t0, rt0 WHERE ((((t0.c1)) NOT BETWEEN (((((rt1.c4, rt1.c4, rt1.c4, t0.c1, NULL)) BETWEEN ((t0.c1, rt1.c3, 0.2976042702600953, rt1.c0, NULL)) AND ((rt0.c2, rt1.c2, rt1.c4, '0.20289299710778708', 0.1596686250039746))))) AND ((CAST(x'' AS BLOB))))) ORDER BY ((((rt1.c3) NOTNULL))||(CAST(rt0.c1 AS INTEGER))) ASC, (~ (t0.c1)) ASC  NULLS FIRST, CASE WHEN t0.c2 COLLATE RTRIM THEN ((rt0.c2) NOT NULL) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)) NOT BETWEEN (((((rt1.c4, rt1.c4, rt1.c4, t0.c1, NULL)) BETWEEN ((t0.c1, rt1.c3, 0.2976042702600953, rt1.c0, NULL)) AND ((rt0.c2, rt1.c2, rt1.c4, '0.20289299710778708', 0.1596686250039746))))) AND ((CAST(x'' AS BLOB))))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((((rt1.c3) NOTNULL))||(CAST(rt0.c1 AS INTEGER))) ASC, (~ (t0.c1)) ASC  NULLS FIRST, CASE WHEN t0.c2 COLLATE RTRIM THEN ((rt0.c2) NOT NULL) END ASC);
SELECT ALL * FROM rt1, t0, rt0 WHERE ((((t0.c1)) NOT BETWEEN (((((rt1.c4, rt1.c4, rt1.c4, t0.c1, NULL)) BETWEEN ((t0.c1, rt1.c3, 0.2976042702600953, rt1.c0, NULL)) AND ((rt0.c2, rt1.c2, rt1.c4, '0.20289299710778708', 0.1596686250039746))))) AND ((CAST(x'' AS BLOB))))) ORDER BY ((((rt1.c3) NOTNULL))||(CAST(rt0.c1 AS INTEGER))) ASC, (~ (t0.c1)) ASC  NULLS FIRST, CASE WHEN t0.c2 COLLATE RTRIM THEN ((rt0.c2) NOT NULL) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)) NOT BETWEEN (((((rt1.c4, rt1.c4, rt1.c4, t0.c1, NULL)) BETWEEN ((t0.c1, rt1.c3, 0.2976042702600953, rt1.c0, NULL)) AND ((rt0.c2, rt1.c2, rt1.c4, '0.20289299710778708', 0.1596686250039746))))) AND ((CAST(x'' AS BLOB))))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((((rt1.c3) NOTNULL))||(CAST(rt0.c1 AS INTEGER))) ASC, (~ (t0.c1)) ASC  NULLS FIRST, CASE WHEN t0.c2 COLLATE RTRIM THEN ((rt0.c2) NOT NULL) END ASC);
SELECT ALL * FROM rt1, t0, rt0 WHERE ((((t0.c1)) NOT BETWEEN (((((rt1.c4, rt1.c4, rt1.c4, t0.c1, NULL)) BETWEEN ((t0.c1, rt1.c3, 0.2976042702600953, rt1.c0, NULL)) AND ((rt0.c2, rt1.c2, rt1.c4, '0.20289299710778708', 0.1596686250039746))))) AND ((CAST(x'' AS BLOB))))) ORDER BY ((((rt1.c3) NOTNULL))||(CAST(rt0.c1 AS INTEGER))) ASC, (~ (t0.c1)) ASC  NULLS FIRST, CASE WHEN t0.c2 COLLATE RTRIM THEN ((rt0.c2) NOT NULL) END ASC;
SELECT * FROM t0 FULL OUTER JOIN rt0 ON ((rt1.c3)>=((~ (rt1.c4)))) CROSS JOIN rt1 ON (((rt1.c0)>=(rt1.c1)) IN ()) WHERE (((rt0.c0) ISNULL)) ORDER BY SQLITE_SOURCE_ID() DESC  NULLS LAST, (((t0.c2)IS NOT(rt0.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) ISNULL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((rt1.c3)>=((~ (rt1.c4)))) CROSS JOIN rt1 ON (((rt1.c0)>=(rt1.c1)) IN ()) ORDER BY SQLITE_SOURCE_ID() DESC  NULLS LAST, (((t0.c2)IS NOT(rt0.c1)) IN ()) DESC);
SELECT * FROM t0 FULL OUTER JOIN rt0 ON ((rt1.c3)>=((~ (rt1.c4)))) CROSS JOIN rt1 ON (((rt1.c0)>=(rt1.c1)) IN ()) WHERE (((rt0.c0) ISNULL)) ORDER BY SQLITE_SOURCE_ID() DESC  NULLS LAST, (((t0.c2)IS NOT(rt0.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) ISNULL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((rt1.c3)>=((~ (rt1.c4)))) CROSS JOIN rt1 ON (((rt1.c0)>=(rt1.c1)) IN ()) ORDER BY SQLITE_SOURCE_ID() DESC  NULLS LAST, (((t0.c2)IS NOT(rt0.c1)) IN ()) DESC);
SELECT * FROM t0 FULL OUTER JOIN rt0 ON ((rt1.c3)>=((~ (rt1.c4)))) CROSS JOIN rt1 ON (((rt1.c0)>=(rt1.c1)) IN ()) WHERE (((rt0.c0) ISNULL)) ORDER BY SQLITE_SOURCE_ID() DESC  NULLS LAST, (((t0.c2)IS NOT(rt0.c1)) IN ()) DESC;
SELECT * FROM rt0, t0 INNER JOIN rt1 ON CAST(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt0.c0)) AS BLOB) WHERE (t0.c2) ORDER BY t0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM rt0, t0 INNER JOIN rt1 ON CAST(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt0.c0)) AS BLOB) ORDER BY t0.c1 ASC  NULLS LAST);
SELECT * FROM rt0, t0 INNER JOIN rt1 ON CAST(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt0.c0)) AS BLOB) WHERE (t0.c2) ORDER BY t0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM rt0, t0 INNER JOIN rt1 ON CAST(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt0.c0)) AS BLOB) ORDER BY t0.c1 ASC  NULLS LAST);
SELECT * FROM rt0, t0 INNER JOIN rt1 ON CAST(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt0.c0)) AS BLOB) WHERE (t0.c2) ORDER BY t0.c1 ASC  NULLS LAST;
SELECT ALL * FROM rt1, rt0 WHERE ((((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt0.c1)), (- (rt1.c1)), ((rt1.c4) ISNULL)))<>((CAST(-1812761108 AS BLOB), rt1.c0, (~ (rt1.c4))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt0.c1)), (- (rt1.c1)), ((rt1.c4) ISNULL)))!=((CAST(-1812761108 AS BLOB), rt1.c0, (~ (rt1.c4)))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE ((((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt0.c1)), (- (rt1.c1)), ((rt1.c4) ISNULL)))<>((CAST(-1812761108 AS BLOB), rt1.c0, (~ (rt1.c4))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt0.c1)), (- (rt1.c1)), ((rt1.c4) ISNULL)))!=((CAST(-1812761108 AS BLOB), rt1.c0, (~ (rt1.c4)))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE ((((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt0.c1)), (- (rt1.c1)), ((rt1.c4) ISNULL)))<>((CAST(-1812761108 AS BLOB), rt1.c0, (~ (rt1.c4))))));
SELECT COUNT(*) FROM rt1, rt0 LEFT OUTER JOIN t0 ON ((-6.32935961E8 COLLATE BINARY) NOTNULL) WHERE (((((t0.c1)AND((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt1.c1))))))AND(t0.c1)));
SELECT SUM(count) FROM (SELECT ((((((t0.c1)AND((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt1.c1))))))AND(t0.c1))) IS TRUE)  as count FROM rt1, rt0 LEFT OUTER JOIN t0 ON ((-6.32935961E8 COLLATE BINARY) NOTNULL));
SELECT COUNT(*) FROM rt1, rt0 LEFT OUTER JOIN t0 ON ((-6.32935961E8 COLLATE BINARY) NOTNULL) WHERE (((((t0.c1)AND((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt1.c1))))))AND(t0.c1)));
SELECT SUM(count) FROM (SELECT ((((((t0.c1)AND((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt1.c1))))))AND(t0.c1))) IS TRUE)  as count FROM rt1, rt0 LEFT OUTER JOIN t0 ON ((-6.32935961E8 COLLATE BINARY) NOTNULL));
SELECT COUNT(*) FROM rt1, rt0 LEFT OUTER JOIN t0 ON ((-6.32935961E8 COLLATE BINARY) NOTNULL) WHERE (((((t0.c1)AND((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt1.c1))))))AND(t0.c1)));
SELECT * FROM rt0, rt1, t0 WHERE (CASE x'1974'  WHEN ((rt0.c0)>>(t0.c2)) THEN (((x'be22')) NOT BETWEEN ((rt1.c2)) AND ((rt0.c1))) ELSE ((6.64178938E8) NOT BETWEEN (rt1.c2) AND (t0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE x'1974'  WHEN ((rt0.c0)>>(t0.c2)) THEN (((x'be22')) NOT BETWEEN ((rt1.c2)) AND ((rt0.c1))) ELSE ((6.64178938E8) NOT BETWEEN (rt1.c2) AND (t0.c1)) END) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT * FROM rt0, rt1, t0 WHERE (CASE x'1974'  WHEN ((rt0.c0)>>(t0.c2)) THEN (((x'be22')) NOT BETWEEN ((rt1.c2)) AND ((rt0.c1))) ELSE ((6.64178938E8) NOT BETWEEN (rt1.c2) AND (t0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE x'1974'  WHEN ((rt0.c0)>>(t0.c2)) THEN (((x'be22')) NOT BETWEEN ((rt1.c2)) AND ((rt0.c1))) ELSE ((6.64178938E8) NOT BETWEEN (rt1.c2) AND (t0.c1)) END) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT * FROM rt0, rt1, t0 WHERE (CASE x'1974'  WHEN ((rt0.c0)>>(t0.c2)) THEN (((x'be22')) NOT BETWEEN ((rt1.c2)) AND ((rt0.c1))) ELSE ((6.64178938E8) NOT BETWEEN (rt1.c2) AND (t0.c1)) END);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (+ (ABS(NULL))) RIGHT OUTER JOIN rt1 ON rt0.c1 WHERE ((((rt1.c1)) BETWEEN ((((((rt1.c2)OR(rt1.c2)))AND(t0.c2)))) AND ((((x'acc9')IS(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) BETWEEN ((((((rt1.c2)OR(rt1.c2)))AND(t0.c2)))) AND ((((x'acc9')IS(rt0.c1)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (+ (ABS(NULL))) RIGHT OUTER JOIN rt1 ON rt0.c1);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (+ (ABS(NULL))) RIGHT OUTER JOIN rt1 ON rt0.c1 WHERE ((((rt1.c1)) BETWEEN ((((((rt1.c2)OR(rt1.c2)))AND(t0.c2)))) AND ((((x'acc9')IS(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) BETWEEN ((((((rt1.c2)OR(rt1.c2)))AND(t0.c2)))) AND ((((x'acc9')IS(rt0.c1)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (+ (ABS(NULL))) RIGHT OUTER JOIN rt1 ON rt0.c1);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (+ (ABS(NULL))) RIGHT OUTER JOIN rt1 ON rt0.c1 WHERE ((((rt1.c1)) BETWEEN ((((((rt1.c2)OR(rt1.c2)))AND(t0.c2)))) AND ((((x'acc9')IS(rt0.c1))))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt1 ON (NOT (TRIM(DISTINCT rt1.c4))) WHERE (CAST(rt1.c1 COLLATE RTRIM AS TEXT)) ORDER BY ((~ (rt1.c0)) IN ()) DESC, ((((rt1.c0 IN ()), CAST(t0.c2 AS NUMERIC), x'46ce'))==((((((t0.c0)OR(x'')))OR(rt1.c2)), (rt1.c3 IN ()), ((rt1.c0) BETWEEN (t0.c0) AND (t0.c2))))) DESC, rt1.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c1 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON (NOT (TRIM(DISTINCT rt1.c4))) ORDER BY ((~ (rt1.c0)) IN ()) DESC, ((((rt1.c0 IN ()), CAST(t0.c2 AS NUMERIC), x'46ce'))==((((((t0.c0)OR(x'')))OR(rt1.c2)), (rt1.c3 IN ()), ((rt1.c0) BETWEEN (t0.c0) AND (t0.c2))))) DESC, rt1.c2 DESC);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt1 ON (NOT (TRIM(DISTINCT rt1.c4))) WHERE (CAST(rt1.c1 COLLATE RTRIM AS TEXT)) ORDER BY ((~ (rt1.c0)) IN ()) DESC, ((((rt1.c0 IN ()), CAST(t0.c2 AS NUMERIC), x'46ce'))==((((((t0.c0)OR(x'')))OR(rt1.c2)), (rt1.c3 IN ()), ((rt1.c0) BETWEEN (t0.c0) AND (t0.c2))))) DESC, rt1.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c1 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON (NOT (TRIM(DISTINCT rt1.c4))) ORDER BY ((~ (rt1.c0)) IN ()) DESC, ((((rt1.c0 IN ()), CAST(t0.c2 AS NUMERIC), x'46ce'))==((((((t0.c0)OR(x'')))OR(rt1.c2)), (rt1.c3 IN ()), ((rt1.c0) BETWEEN (t0.c0) AND (t0.c2))))) DESC, rt1.c2 DESC);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt1 ON (NOT (TRIM(DISTINCT rt1.c4))) WHERE (CAST(rt1.c1 COLLATE RTRIM AS TEXT)) ORDER BY ((~ (rt1.c0)) IN ()) DESC, ((((rt1.c0 IN ()), CAST(t0.c2 AS NUMERIC), x'46ce'))==((((((t0.c0)OR(x'')))OR(rt1.c2)), (rt1.c3 IN ()), ((rt1.c0) BETWEEN (t0.c0) AND (t0.c2))))) DESC, rt1.c2 DESC;
SELECT * FROM rt0 WHERE (((IFNULL(rt0.c1, rt0.c1))<(SQLITE_SOURCE_ID()))) ORDER BY ((((rt0.c0 COLLATE BINARY)AND((- (rt0.c0)))))OR(LIKELY(DISTINCT rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((IFNULL(rt0.c1, rt0.c1))<(SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0 COLLATE BINARY)AND((- (rt0.c0)))))OR(LIKELY(DISTINCT rt0.c1))));
SELECT * FROM rt0 WHERE (((IFNULL(rt0.c1, rt0.c1))<(SQLITE_SOURCE_ID()))) ORDER BY ((((rt0.c0 COLLATE BINARY)AND((- (rt0.c0)))))OR(LIKELY(DISTINCT rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((IFNULL(rt0.c1, rt0.c1))<(SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0 COLLATE BINARY)AND((- (rt0.c0)))))OR(LIKELY(DISTINCT rt0.c1))));
SELECT * FROM rt0 WHERE (((IFNULL(rt0.c1, rt0.c1))<(SQLITE_SOURCE_ID()))) ORDER BY ((((rt0.c0 COLLATE BINARY)AND((- (rt0.c0)))))OR(LIKELY(DISTINCT rt0.c1)));
SELECT ALL COUNT(*) FROM t0, rt0 RIGHT OUTER JOIN rt1 ON rt0.c0 COLLATE BINARY WHERE (0Xffffffff807d8dc6);
SELECT SUM(count) FROM (SELECT ((0Xffffffff807d8dc6) IS TRUE)  as count FROM t0, rt0 RIGHT OUTER JOIN rt1 ON rt0.c0 COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, rt0 RIGHT OUTER JOIN rt1 ON rt0.c0 COLLATE BINARY WHERE (0Xffffffff807d8dc6);
SELECT SUM(count) FROM (SELECT ((0Xffffffff807d8dc6) IS TRUE)  as count FROM t0, rt0 RIGHT OUTER JOIN rt1 ON rt0.c0 COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, rt0 RIGHT OUTER JOIN rt1 ON rt0.c0 COLLATE BINARY WHERE (0Xffffffff807d8dc6);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(((rt1.c1)<<(rt1.c4)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c1)<<(rt1.c4)) AS REAL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(((rt1.c1)<<(rt1.c4)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c1)<<(rt1.c4)) AS REAL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(((rt1.c1)<<(rt1.c4)) AS REAL));
SELECT ALL * FROM rt1 WHERE ((((((-364574956 IN ()))OR(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c4)))))AND((+ (rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((((-364574956 IN ()))OR(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c4)))))AND((+ (rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((-364574956 IN ()))OR(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c4)))))AND((+ (rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((((-364574956 IN ()))OR(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c4)))))AND((+ (rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((-364574956 IN ()))OR(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c4)))))AND((+ (rt1.c2)))));
SELECT * FROM rt1, t0 WHERE ((((t0.c1)&(rt1.c3)) IN ())) ORDER BY CASE rt1.c4 COLLATE BINARY  WHEN HEX(rt1.c1) THEN ((rt1.c4)!=(rt1.c1)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)&(rt1.c3)) IN ())) IS TRUE)  as count FROM rt1, t0 ORDER BY CASE rt1.c4 COLLATE BINARY  WHEN HEX(rt1.c1) THEN ((rt1.c4)!=(rt1.c1)) END ASC  NULLS FIRST);
SELECT * FROM rt1, t0 WHERE ((((t0.c1)&(rt1.c3)) IN ())) ORDER BY CASE rt1.c4 COLLATE BINARY  WHEN HEX(rt1.c1) THEN ((rt1.c4)!=(rt1.c1)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)&(rt1.c3)) IN ())) IS TRUE)  as count FROM rt1, t0 ORDER BY CASE rt1.c4 COLLATE BINARY  WHEN HEX(rt1.c1) THEN ((rt1.c4)!=(rt1.c1)) END ASC  NULLS FIRST);
SELECT * FROM rt1, t0 WHERE ((((t0.c1)&(rt1.c3)) IN ())) ORDER BY CASE rt1.c4 COLLATE BINARY  WHEN HEX(rt1.c1) THEN ((rt1.c4)!=(rt1.c1)) END ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE ((- (CAST(rt1.c3 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((- (CAST(rt1.c3 AS INTEGER)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((- (CAST(rt1.c3 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((- (CAST(rt1.c3 AS INTEGER)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((- (CAST(rt1.c3 AS INTEGER))));
SELECT * FROM rt1 WHERE (((UNLIKELY(DISTINCT rt1.c3)) IS TRUE)) ORDER BY ((((rt1.c2) ISNULL)) ISNULL)  NULLS LAST, ((rt1.c0 COLLATE RTRIM) NOT BETWEEN (rt1.c2 COLLATE BINARY) AND (0Xfffffffff621d74b))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(DISTINCT rt1.c3)) IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2) ISNULL)) ISNULL)  NULLS LAST, ((rt1.c0 COLLATE RTRIM) NOT BETWEEN (rt1.c2 COLLATE BINARY) AND (0xfffffffff621d74b))  NULLS LAST);
SELECT * FROM rt1 WHERE (((UNLIKELY(DISTINCT rt1.c3)) IS TRUE)) ORDER BY ((((rt1.c2) ISNULL)) ISNULL)  NULLS LAST, ((rt1.c0 COLLATE RTRIM) NOT BETWEEN (rt1.c2 COLLATE BINARY) AND (0Xfffffffff621d74b))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(DISTINCT rt1.c3)) IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2) ISNULL)) ISNULL)  NULLS LAST, ((rt1.c0 COLLATE RTRIM) NOT BETWEEN (rt1.c2 COLLATE BINARY) AND (0xfffffffff621d74b))  NULLS LAST);
SELECT * FROM rt1 WHERE (((UNLIKELY(DISTINCT rt1.c3)) IS TRUE)) ORDER BY ((((rt1.c2) ISNULL)) ISNULL)  NULLS LAST, ((rt1.c0 COLLATE RTRIM) NOT BETWEEN (rt1.c2 COLLATE BINARY) AND (0Xfffffffff621d74b))  NULLS LAST;
SELECT ALL * FROM rt1, rt0 WHERE ('') ORDER BY (((((((((('')OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c2))) BETWEEN ((((rt0.c1, rt1.c0, rt1.c2, rt0.c0, rt1.c1))=((rt1.c2, rt0.c1, rt1.c2, rt1.c3, rt1.c4)))) AND ((- (rt1.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt1, rt0 ORDER BY (((((((((('')OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c2))) BETWEEN ((((rt0.c1, rt1.c0, rt1.c2, rt0.c0, rt1.c1))=((rt1.c2, rt0.c1, rt1.c2, rt1.c3, rt1.c4)))) AND ((- (rt1.c1)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE ('') ORDER BY (((((((((('')OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c2))) BETWEEN ((((rt0.c1, rt1.c0, rt1.c2, rt0.c0, rt1.c1))=((rt1.c2, rt0.c1, rt1.c2, rt1.c3, rt1.c4)))) AND ((- (rt1.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt1, rt0 ORDER BY (((((((((('')OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c2))) BETWEEN ((((rt0.c1, rt1.c0, rt1.c2, rt0.c0, rt1.c1))=((rt1.c2, rt0.c1, rt1.c2, rt1.c3, rt1.c4)))) AND ((- (rt1.c1)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE ('') ORDER BY (((((((((('')OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c2))) BETWEEN ((((rt0.c1, rt1.c0, rt1.c2, rt0.c0, rt1.c1))=((rt1.c2, rt0.c1, rt1.c2, rt1.c3, rt1.c4)))) AND ((- (rt1.c1)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt1, rt0, t0 WHERE (((((((((((((((rt0.c2)OR(t0.c1)))AND(rt0.c1)))AND(t0.c0)))AND(x'2528')))AND(t0.c2)))AND(0.3660540675574704)))<>(((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c2)OR(t0.c1)))AND(rt0.c1)))AND(t0.c0)))AND(x'2528')))AND(t0.c2)))AND(0.3660540675574704)))<>(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT ALL * FROM rt1, rt0, t0 WHERE (((((((((((((((rt0.c2)OR(t0.c1)))AND(rt0.c1)))AND(t0.c0)))AND(x'2528')))AND(t0.c2)))AND(0.3660540675574704)))<>(((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c2)OR(t0.c1)))AND(rt0.c1)))AND(t0.c0)))AND(x'2528')))AND(t0.c2)))AND(0.3660540675574704)))<>(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT ALL * FROM rt1, rt0, t0 WHERE (((((((((((((((rt0.c2)OR(t0.c1)))AND(rt0.c1)))AND(t0.c0)))AND(x'2528')))AND(t0.c2)))AND(0.3660540675574704)))<>(((rt0.c0) IS FALSE))));
SELECT * FROM t0 WHERE (((((((t0.c0)AND(t0.c1)))OR(t0.c2))) BETWEEN ((((t0.c1)) BETWEEN ((t0.c2)) AND ((t0.c0)))) AND (ABS(t0.c1)))) ORDER BY ((((t0.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c1))) IN (TYPEOF(DISTINCT t0.c0), ((t0.c1) BETWEEN (t0.c2) AND (t0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND(t0.c1)))OR(t0.c2))) BETWEEN ((((t0.c1)) BETWEEN ((t0.c2)) AND ((t0.c0)))) AND (ABS(t0.c1)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c1))) IN (TYPEOF(DISTINCT t0.c0), ((t0.c1) BETWEEN (t0.c2) AND (t0.c1))))  NULLS LAST);
SELECT * FROM t0 WHERE (((((((t0.c0)AND(t0.c1)))OR(t0.c2))) BETWEEN ((((t0.c1)) BETWEEN ((t0.c2)) AND ((t0.c0)))) AND (ABS(t0.c1)))) ORDER BY ((((t0.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c1))) IN (TYPEOF(DISTINCT t0.c0), ((t0.c1) BETWEEN (t0.c2) AND (t0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND(t0.c1)))OR(t0.c2))) BETWEEN ((((t0.c1)) BETWEEN ((t0.c2)) AND ((t0.c0)))) AND (ABS(t0.c1)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c1))) IN (TYPEOF(DISTINCT t0.c0), ((t0.c1) BETWEEN (t0.c2) AND (t0.c1))))  NULLS LAST);
SELECT * FROM t0 WHERE (((((((t0.c0)AND(t0.c1)))OR(t0.c2))) BETWEEN ((((t0.c1)) BETWEEN ((t0.c2)) AND ((t0.c0)))) AND (ABS(t0.c1)))) ORDER BY ((((t0.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c1))) IN (TYPEOF(DISTINCT t0.c0), ((t0.c1) BETWEEN (t0.c2) AND (t0.c1))))  NULLS LAST;
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE (CASE (NOT (rt1.c1))  WHEN (+ (x'')) THEN ((x'2a6a')||(rt1.c3)) WHEN CAST(t0.c2 AS REAL) THEN rt1.c3 COLLATE NOCASE WHEN TRIM(DISTINCT rt1.c0) THEN (((rt0.c0))>((rt1.c3))) END);
SELECT SUM(count) FROM (SELECT ((CASE (NOT (rt1.c1))  WHEN (+ (x'')) THEN ((x'2a6a')||(rt1.c3)) WHEN CAST(t0.c2 AS REAL) THEN rt1.c3 COLLATE NOCASE WHEN TRIM(DISTINCT rt1.c0) THEN (((rt0.c0))>((rt1.c3))) END) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE (CASE (NOT (rt1.c1))  WHEN (+ (x'')) THEN ((x'2a6a')||(rt1.c3)) WHEN CAST(t0.c2 AS REAL) THEN rt1.c3 COLLATE NOCASE WHEN TRIM(DISTINCT rt1.c0) THEN (((rt0.c0))>((rt1.c3))) END);
SELECT SUM(count) FROM (SELECT ((CASE (NOT (rt1.c1))  WHEN (+ (x'')) THEN ((x'2a6a')||(rt1.c3)) WHEN CAST(t0.c2 AS REAL) THEN rt1.c3 COLLATE NOCASE WHEN TRIM(DISTINCT rt1.c0) THEN (((rt0.c0))>((rt1.c3))) END) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE (CASE (NOT (rt1.c1))  WHEN (+ (x'')) THEN ((x'2a6a')||(rt1.c3)) WHEN CAST(t0.c2 AS REAL) THEN rt1.c3 COLLATE NOCASE WHEN TRIM(DISTINCT rt1.c0) THEN (((rt0.c0))>((rt1.c3))) END);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (rt0.c1) ORDER BY ((rt0.c0 COLLATE NOCASE) BETWEEN (((rt0.c1)OR(rt0.c0))) AND (NULL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY ((rt0.c0 COLLATE NOCASE) BETWEEN (((rt0.c1)OR(rt0.c0))) AND (NULL)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (rt0.c1) ORDER BY ((rt0.c0 COLLATE NOCASE) BETWEEN (((rt0.c1)OR(rt0.c0))) AND (NULL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY ((rt0.c0 COLLATE NOCASE) BETWEEN (((rt0.c1)OR(rt0.c0))) AND (NULL)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (rt0.c1) ORDER BY ((rt0.c0 COLLATE NOCASE) BETWEEN (((rt0.c1)OR(rt0.c0))) AND (NULL)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c2)))>>(((rt1.c4)-(rt1.c4))))) ORDER BY (- (NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c2)))>>(((rt1.c4)-(rt1.c4))))) IS TRUE)  as count FROM t0, rt1 ORDER BY (- (NULL)));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c2)))>>(((rt1.c4)-(rt1.c4))))) ORDER BY (- (NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c2)))>>(((rt1.c4)-(rt1.c4))))) IS TRUE)  as count FROM t0, rt1 ORDER BY (- (NULL)));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c2)))>>(((rt1.c4)-(rt1.c4))))) ORDER BY (- (NULL));
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (((((0.43584883309882205)&(rt1.c2)))&(CASE WHEN rt1.c2 THEN rt0.c0 ELSE rt1.c4 END)));
SELECT SUM(count) FROM (SELECT ((((((0.43584883309882205)&(rt1.c2)))&(CASE WHEN rt1.c2 THEN rt0.c0 ELSE rt1.c4 END))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (((((0.43584883309882205)&(rt1.c2)))&(CASE WHEN rt1.c2 THEN rt0.c0 ELSE rt1.c4 END)));
SELECT SUM(count) FROM (SELECT ((((((0.43584883309882205)&(rt1.c2)))&(CASE WHEN rt1.c2 THEN rt0.c0 ELSE rt1.c4 END))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (((((0.43584883309882205)&(rt1.c2)))&(CASE WHEN rt1.c2 THEN rt0.c0 ELSE rt1.c4 END)));
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (((rt1.c0)*(x'19453ee0'))) ORDER BY ('0.6461638904586405' IN ()) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0)*(x'19453ee0'))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY ('0.6461638904586405' IN ()) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (((rt1.c0)*(x'19453ee0'))) ORDER BY ('0.6461638904586405' IN ()) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0)*(x'19453ee0'))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY ('0.6461638904586405' IN ()) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (((rt1.c0)*(x'19453ee0'))) ORDER BY ('0.6461638904586405' IN ()) COLLATE BINARY ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt1 ON rt1.c0 WHERE (CASE rt1.c4  WHEN rt1.c4 THEN t0.c0 ELSE rt1.c4 END COLLATE NOCASE) ORDER BY (NOT ((t0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c4  WHEN rt1.c4 THEN t0.c0 ELSE rt1.c4 END COLLATE NOCASE) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt1 ON rt1.c0 ORDER BY (NOT ((t0.c0 IN ()))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt1 ON rt1.c0 WHERE (CASE rt1.c4  WHEN rt1.c4 THEN t0.c0 ELSE rt1.c4 END COLLATE NOCASE) ORDER BY (NOT ((t0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c4  WHEN rt1.c4 THEN t0.c0 ELSE rt1.c4 END COLLATE NOCASE) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt1 ON rt1.c0 ORDER BY (NOT ((t0.c0 IN ()))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt1 ON rt1.c0 WHERE (CASE rt1.c4  WHEN rt1.c4 THEN t0.c0 ELSE rt1.c4 END COLLATE NOCASE) ORDER BY (NOT ((t0.c0 IN ()))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE (LIKELIHOOD((rt1.c1 IN ()), 0.33558486349685746));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((rt1.c1 IN ()), 0.33558486349685746)) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE (LIKELIHOOD((rt1.c1 IN ()), 0.33558486349685746));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((rt1.c1 IN ()), 0.33558486349685746)) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE (LIKELIHOOD((rt1.c1 IN ()), 0.33558486349685746));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)OR(t0.c2)) IN (IFNULL(t0.c0, t0.c2), ((t0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)OR(t0.c2)) IN (IFNULL(t0.c0, t0.c2), ((t0.c2) ISNULL)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)OR(t0.c2)) IN (IFNULL(t0.c0, t0.c2), ((t0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)OR(t0.c2)) IN (IFNULL(t0.c0, t0.c2), ((t0.c2) ISNULL)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)OR(t0.c2)) IN (IFNULL(t0.c0, t0.c2), ((t0.c2) ISNULL))));
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (IFNULL(-1639002394, ((rt1.c3)%(rt1.c2)))) ORDER BY ((rt1.c2)<(rt0.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((IFNULL(-1639002394, ((rt1.c3)%(rt1.c2)))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY ((rt1.c2)<(rt0.c1)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (IFNULL(-1639002394, ((rt1.c3)%(rt1.c2)))) ORDER BY ((rt1.c2)<(rt0.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((IFNULL(-1639002394, ((rt1.c3)%(rt1.c2)))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY ((rt1.c2)<(rt0.c1)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (IFNULL(-1639002394, ((rt1.c3)%(rt1.c2)))) ORDER BY ((rt1.c2)<(rt0.c1)) COLLATE NOCASE;
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1, rt0 NOT INDEXED, t0 NOT INDEXED);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1, rt0 NOT INDEXED, t0 NOT INDEXED);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (rt1.c0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE 0.13998835775128038  WHEN rt0.c2 THEN x'' END AS TEXT)) ORDER BY (+ ((((rt0.c2, rt0.c1, rt0.c0))>((rt0.c2, rt0.c1, rt0.c0))))), ((x'd315')&((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) ASC  NULLS LAST, CAST(CASE rt0.c2  WHEN x'15f2' THEN rt0.c2 END AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE 0.13998835775128038  WHEN rt0.c2 THEN x'' END AS TEXT)) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY (+ ((((rt0.c2, rt0.c1, rt0.c0))>((rt0.c2, rt0.c1, rt0.c0))))), ((x'd315')&((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) ASC  NULLS LAST, CAST(CASE rt0.c2  WHEN x'15f2' THEN rt0.c2 END AS BLOB));
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE 0.13998835775128038  WHEN rt0.c2 THEN x'' END AS TEXT)) ORDER BY (+ ((((rt0.c2, rt0.c1, rt0.c0))>((rt0.c2, rt0.c1, rt0.c0))))), ((x'd315')&((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) ASC  NULLS LAST, CAST(CASE rt0.c2  WHEN x'15f2' THEN rt0.c2 END AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE 0.13998835775128038  WHEN rt0.c2 THEN x'' END AS TEXT)) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY (+ ((((rt0.c2, rt0.c1, rt0.c0))>((rt0.c2, rt0.c1, rt0.c0))))), ((x'd315')&((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) ASC  NULLS LAST, CAST(CASE rt0.c2  WHEN x'15f2' THEN rt0.c2 END AS BLOB));
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE 0.13998835775128038  WHEN rt0.c2 THEN x'' END AS TEXT)) ORDER BY (+ ((((rt0.c2, rt0.c1, rt0.c0))>((rt0.c2, rt0.c1, rt0.c0))))), ((x'd315')&((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) ASC  NULLS LAST, CAST(CASE rt0.c2  WHEN x'15f2' THEN rt0.c2 END AS BLOB);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c1)LIKE(rt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)LIKE(rt1.c0)) IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c1)LIKE(rt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)LIKE(rt1.c0)) IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c1)LIKE(rt1.c0)) IN ()));
SELECT ALL * FROM rt1, t0, rt0 WHERE (((((((((rt1.c4)OR(rt0.c0)))OR(t0.c1)))OR(rt0.c0)))AND(t0.c0)) COLLATE RTRIM) ORDER BY ((((rt1.c4)OR(x'')))AND(rt1.c3)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c4)OR(rt0.c0)))OR(t0.c1)))OR(rt0.c0)))AND(t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((((rt1.c4)OR(x'')))AND(rt1.c3)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL * FROM rt1, t0, rt0 WHERE (((((((((rt1.c4)OR(rt0.c0)))OR(t0.c1)))OR(rt0.c0)))AND(t0.c0)) COLLATE RTRIM) ORDER BY ((((rt1.c4)OR(x'')))AND(rt1.c3)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c4)OR(rt0.c0)))OR(t0.c1)))OR(rt0.c0)))AND(t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((((rt1.c4)OR(x'')))AND(rt1.c3)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL * FROM rt1, t0, rt0 WHERE (((((((((rt1.c4)OR(rt0.c0)))OR(t0.c1)))OR(rt0.c0)))AND(t0.c0)) COLLATE RTRIM) ORDER BY ((((rt1.c4)OR(x'')))AND(rt1.c3)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))GLOB(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))GLOB(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))GLOB(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))GLOB(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))GLOB(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE ((((rt1.c3)<<(-260818904)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3)<<(-260818904)) IN ())) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE ((((rt1.c3)<<(-260818904)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3)<<(-260818904)) IN ())) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE ((((rt1.c3)<<(-260818904)) IN ()));
SELECT ALL * FROM rt1, t0, rt0 NOT INDEXED WHERE (((t0.c0) BETWEEN (CAST(rt0.c2 AS TEXT)) AND (((rt0.c0) IS TRUE)))) ORDER BY CAST((~ (rt0.c1)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) BETWEEN (CAST(rt0.c2 AS TEXT)) AND (((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY CAST((~ (rt0.c1)) AS BLOB) ASC);
SELECT ALL * FROM rt1, t0, rt0 NOT INDEXED WHERE (((t0.c0) BETWEEN (CAST(rt0.c2 AS TEXT)) AND (((rt0.c0) IS TRUE)))) ORDER BY CAST((~ (rt0.c1)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) BETWEEN (CAST(rt0.c2 AS TEXT)) AND (((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY CAST((~ (rt0.c1)) AS BLOB) ASC);
SELECT ALL * FROM rt1, t0, rt0 NOT INDEXED WHERE (((t0.c0) BETWEEN (CAST(rt0.c2 AS TEXT)) AND (((rt0.c0) IS TRUE)))) ORDER BY CAST((~ (rt0.c1)) AS BLOB) ASC;
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED WHERE ('+zD*s');
SELECT SUM(count) FROM (SELECT (('+zD*s') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED WHERE ('+zD*s');
SELECT SUM(count) FROM (SELECT (('+zD*s') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED WHERE ('+zD*s');
SELECT * FROM rt0 WHERE ((NOT ((rt0.c0 IN ())))) ORDER BY ((((rt0.c1 COLLATE BINARY)OR((x'' IN ()))))OR(SQLITE_COMPILEOPTION_USED(rt0.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1 COLLATE BINARY)OR((x'' IN ()))))OR(SQLITE_COMPILEOPTION_USED(rt0.c1))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((NOT ((rt0.c0 IN ())))) ORDER BY ((((rt0.c1 COLLATE BINARY)OR((x'' IN ()))))OR(SQLITE_COMPILEOPTION_USED(rt0.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1 COLLATE BINARY)OR((x'' IN ()))))OR(SQLITE_COMPILEOPTION_USED(rt0.c1))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((NOT ((rt0.c0 IN ())))) ORDER BY ((((rt0.c1 COLLATE BINARY)OR((x'' IN ()))))OR(SQLITE_COMPILEOPTION_USED(rt0.c1))) ASC  NULLS LAST;
SELECT ALL * FROM rt1, t0 RIGHT OUTER JOIN rt0 ON rt1.c1 WHERE ((((- ('1464417741')))!=(CASE x''  WHEN rt1.c1 THEN rt1.c0 ELSE t0.c0 END))) ORDER BY 0X75e6d0c0  NULLS LAST, ((((rt0.c1)LIKE(t0.c0)))+((rt0.c1 IN (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((- ('1464417741')))!=(CASE x''  WHEN rt1.c1 THEN rt1.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM rt1, t0 RIGHT OUTER JOIN rt0 ON rt1.c1 ORDER BY 0X75e6d0c0  NULLS LAST, ((((rt0.c1)LIKE(t0.c0)))+((rt0.c1 IN (rt0.c0)))) ASC);
SELECT ALL * FROM rt1, t0 RIGHT OUTER JOIN rt0 ON rt1.c1 WHERE ((((- ('1464417741')))!=(CASE x''  WHEN rt1.c1 THEN rt1.c0 ELSE t0.c0 END))) ORDER BY 0X75e6d0c0  NULLS LAST, ((((rt0.c1)LIKE(t0.c0)))+((rt0.c1 IN (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((- ('1464417741')))!=(CASE x''  WHEN rt1.c1 THEN rt1.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM rt1, t0 RIGHT OUTER JOIN rt0 ON rt1.c1 ORDER BY 0X75e6d0c0  NULLS LAST, ((((rt0.c1)LIKE(t0.c0)))+((rt0.c1 IN (rt0.c0)))) ASC);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON (LIKELY(rt1.c3) IN ()) RIGHT OUTER JOIN t0 ON ((((((rt1.c2)OR(rt1.c2)))AND((('-734261109') IS TRUE))))AND(((rt1.c1)>=(t0.c2)))) WHERE (0x6973e8b5);
SELECT SUM(count) FROM (SELECT ALL ((0X6973e8b5) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON (LIKELY(rt1.c3) IN ()) RIGHT OUTER JOIN t0 ON ((((((rt1.c2)OR(rt1.c2)))AND((('-734261109') IS TRUE))))AND(((rt1.c1)>=(t0.c2)))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON (LIKELY(rt1.c3) IN ()) RIGHT OUTER JOIN t0 ON ((((((rt1.c2)OR(rt1.c2)))AND((('-734261109') IS TRUE))))AND(((rt1.c1)>=(t0.c2)))) WHERE (0x6973e8b5);
SELECT SUM(count) FROM (SELECT ALL ((0X6973e8b5) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON (LIKELY(rt1.c3) IN ()) RIGHT OUTER JOIN t0 ON ((((((rt1.c2)OR(rt1.c2)))AND((('-734261109') IS TRUE))))AND(((rt1.c1)>=(t0.c2)))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON (LIKELY(rt1.c3) IN ()) RIGHT OUTER JOIN t0 ON ((((((rt1.c2)OR(rt1.c2)))AND((('-734261109') IS TRUE))))AND(((rt1.c1)>=(t0.c2)))) WHERE (0x6973e8b5);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE ((+ (t0.c1)) COLLATE BINARY COLLATE BINARY) ORDER BY CAST(CASE t0.c2  WHEN '98459401' THEN t0.c0 WHEN rt1.c4 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c0 END AS INTEGER), CASE WHEN rt0.c0 COLLATE BINARY THEN COALESCE(rt1.c2, rt0.c0) ELSE ((t0.c1)>(rt1.c1)) END;
SELECT SUM(count) FROM (SELECT (((+ (t0.c1)) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY CAST(CASE t0.c2  WHEN '98459401' THEN t0.c0 WHEN rt1.c4 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c0 END AS INTEGER), CASE WHEN rt0.c0 COLLATE BINARY THEN COALESCE(rt1.c2, rt0.c0) ELSE ((t0.c1)>(rt1.c1)) END);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE ((+ (t0.c1)) COLLATE BINARY COLLATE BINARY) ORDER BY CAST(CASE t0.c2  WHEN '98459401' THEN t0.c0 WHEN rt1.c4 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c0 END AS INTEGER), CASE WHEN rt0.c0 COLLATE BINARY THEN COALESCE(rt1.c2, rt0.c0) ELSE ((t0.c1)>(rt1.c1)) END;
SELECT SUM(count) FROM (SELECT (((+ (t0.c1)) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY CAST(CASE t0.c2  WHEN '98459401' THEN t0.c0 WHEN rt1.c4 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c0 END AS INTEGER), CASE WHEN rt0.c0 COLLATE BINARY THEN COALESCE(rt1.c2, rt0.c0) ELSE ((t0.c1)>(rt1.c1)) END);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE ((+ (t0.c1)) COLLATE BINARY COLLATE BINARY) ORDER BY CAST(CASE t0.c2  WHEN '98459401' THEN t0.c0 WHEN rt1.c4 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c0 END AS INTEGER), CASE WHEN rt0.c0 COLLATE BINARY THEN COALESCE(rt1.c2, rt0.c0) ELSE ((t0.c1)>(rt1.c1)) END;
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE (((CAST(rt1.c1 AS TEXT))%(((((t0.c2)AND(t0.c1)))OR(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c1 AS TEXT))%(((((t0.c2)AND(t0.c1)))OR(rt1.c1))))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE (((CAST(rt1.c1 AS TEXT))%(((((t0.c2)AND(t0.c1)))OR(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c1 AS TEXT))%(((((t0.c2)AND(t0.c1)))OR(rt1.c1))))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE (((CAST(rt1.c1 AS TEXT))%(((((t0.c2)AND(t0.c1)))OR(rt1.c1)))));
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS NUMERIC) COLLATE NOCASE) ORDER BY ((x'') NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY ((x'') NOT NULL)  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS NUMERIC) COLLATE NOCASE) ORDER BY ((x'') NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY ((x'') NOT NULL)  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS NUMERIC) COLLATE NOCASE) ORDER BY ((x'') NOT NULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY (- (CAST(t0.c1 AS BLOB))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY (- (CAST(t0.c1 AS BLOB))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY (- (CAST(t0.c1 AS BLOB))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY (- (CAST(t0.c1 AS BLOB))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY (- (CAST(t0.c1 AS BLOB))) ASC  NULLS FIRST;
SELECT ALL * FROM t0, rt1 WHERE ((((((t0.c1))<((rt1.c3)))) BETWEEN ((((rt1.c2))<>((t0.c2)))) AND (CASE t0.c2  WHEN rt1.c1 THEN t0.c2 END)));
SELECT SUM(count) FROM (SELECT (((((((t0.c1))<((rt1.c3)))) BETWEEN ((((rt1.c2))!=((t0.c2)))) AND (CASE t0.c2  WHEN rt1.c1 THEN t0.c2 END))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE ((((((t0.c1))<((rt1.c3)))) BETWEEN ((((rt1.c2))<>((t0.c2)))) AND (CASE t0.c2  WHEN rt1.c1 THEN t0.c2 END)));
SELECT SUM(count) FROM (SELECT (((((((t0.c1))<((rt1.c3)))) BETWEEN ((((rt1.c2))!=((t0.c2)))) AND (CASE t0.c2  WHEN rt1.c1 THEN t0.c2 END))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE ((((((t0.c1))<((rt1.c3)))) BETWEEN ((((rt1.c2))<>((t0.c2)))) AND (CASE t0.c2  WHEN rt1.c1 THEN t0.c2 END)));
SELECT * FROM rt0, t0 WHERE (((t0.c1) NOT NULL) COLLATE RTRIM) ORDER BY (((~ (t0.c2))) BETWEEN ((t0.c0 IN (t0.c2))) AND ((('-1961566875') NOTNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0 ORDER BY (((~ (t0.c2))) BETWEEN ((t0.c0 IN (t0.c2))) AND ((('-1961566875') NOTNULL))) DESC  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE (((t0.c1) NOT NULL) COLLATE RTRIM) ORDER BY (((~ (t0.c2))) BETWEEN ((t0.c0 IN (t0.c2))) AND ((('-1961566875') NOTNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0 ORDER BY (((~ (t0.c2))) BETWEEN ((t0.c0 IN (t0.c2))) AND ((('-1961566875') NOTNULL))) DESC  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE (((t0.c1) NOT NULL) COLLATE RTRIM) ORDER BY (((~ (t0.c2))) BETWEEN ((t0.c0 IN (t0.c2))) AND ((('-1961566875') NOTNULL))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY ((t0.c0) BETWEEN (t0.c0 COLLATE BINARY) AND (((t0.c0)|(t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0) BETWEEN (t0.c0 COLLATE BINARY) AND (((t0.c0)|(t0.c2)))));
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY ((t0.c0) BETWEEN (t0.c0 COLLATE BINARY) AND (((t0.c0)|(t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0) BETWEEN (t0.c0 COLLATE BINARY) AND (((t0.c0)|(t0.c2)))));
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY ((t0.c0) BETWEEN (t0.c0 COLLATE BINARY) AND (((t0.c0)|(t0.c2))));
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((rt1.c2)) NOT BETWEEN ((((x'') BETWEEN (rt1.c0) AND (rt1.c4)))) AND ((x'3f4b'))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) NOT BETWEEN ((((x'') BETWEEN (rt1.c0) AND (rt1.c4)))) AND ((x'3f4b')))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((rt1.c2)) NOT BETWEEN ((((x'') BETWEEN (rt1.c0) AND (rt1.c4)))) AND ((x'3f4b'))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) NOT BETWEEN ((((x'') BETWEEN (rt1.c0) AND (rt1.c4)))) AND ((x'3f4b')))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((rt1.c2)) NOT BETWEEN ((((x'') BETWEEN (rt1.c0) AND (rt1.c4)))) AND ((x'3f4b'))));
SELECT ALL * FROM rt1, rt0, t0 WHERE ((((('') ISNULL)) BETWEEN (rt1.c3 COLLATE BINARY) AND (rt0.c1 COLLATE BINARY))) ORDER BY NULL, ((((0.05526626615513863) ISNULL)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('') ISNULL)) BETWEEN (rt1.c3 COLLATE BINARY) AND (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY NULL, ((((0.05526626615513863) ISNULL)) ISNULL)  NULLS FIRST);
SELECT ALL * FROM rt1, rt0, t0 WHERE ((((('') ISNULL)) BETWEEN (rt1.c3 COLLATE BINARY) AND (rt0.c1 COLLATE BINARY))) ORDER BY NULL, ((((0.05526626615513863) ISNULL)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('') ISNULL)) BETWEEN (rt1.c3 COLLATE BINARY) AND (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY NULL, ((((0.05526626615513863) ISNULL)) ISNULL)  NULLS FIRST);
SELECT ALL * FROM rt1, rt0, t0 WHERE ((((('') ISNULL)) BETWEEN (rt1.c3 COLLATE BINARY) AND (rt0.c1 COLLATE BINARY))) ORDER BY NULL, ((((0.05526626615513863) ISNULL)) ISNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE (((rt0.c1, rt0.c2, rt0.c2))==((rt0.c1, rt0.c2, rt0.c2)))  WHEN LAST_INSERT_ROWID() THEN x'4026' END);
SELECT SUM(count) FROM (SELECT ((CASE (((rt0.c1, rt0.c2, rt0.c2))==((rt0.c1, rt0.c2, rt0.c2)))  WHEN LAST_INSERT_ROWID() THEN x'4026' END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE (((rt0.c1, rt0.c2, rt0.c2))==((rt0.c1, rt0.c2, rt0.c2)))  WHEN LAST_INSERT_ROWID() THEN x'4026' END);
SELECT SUM(count) FROM (SELECT ((CASE (((rt0.c1, rt0.c2, rt0.c2))==((rt0.c1, rt0.c2, rt0.c2)))  WHEN LAST_INSERT_ROWID() THEN x'4026' END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE (((rt0.c1, rt0.c2, rt0.c2))==((rt0.c1, rt0.c2, rt0.c2)))  WHEN LAST_INSERT_ROWID() THEN x'4026' END);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CASE WHEN ((rt1.c2)<=('-1812761108')) THEN HEX(DISTINCT rt1.c1) ELSE ((rt0.c0) BETWEEN (rt0.c1) AND (rt1.c3)) END) ORDER BY (~ ((NOT (rt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c2)<=('-1812761108')) THEN HEX(DISTINCT rt1.c1) ELSE ((rt0.c0) BETWEEN (rt0.c1) AND (rt1.c3)) END) IS TRUE)  as count FROM rt0, rt1 ORDER BY (~ ((NOT (rt1.c1)))) DESC);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CASE WHEN ((rt1.c2)<=('-1812761108')) THEN HEX(DISTINCT rt1.c1) ELSE ((rt0.c0) BETWEEN (rt0.c1) AND (rt1.c3)) END) ORDER BY (~ ((NOT (rt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c2)<=('-1812761108')) THEN HEX(DISTINCT rt1.c1) ELSE ((rt0.c0) BETWEEN (rt0.c1) AND (rt1.c3)) END) IS TRUE)  as count FROM rt0, rt1 ORDER BY (~ ((NOT (rt1.c1)))) DESC);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CASE WHEN ((rt1.c2)<=('-1812761108')) THEN HEX(DISTINCT rt1.c1) ELSE ((rt0.c0) BETWEEN (rt0.c1) AND (rt1.c3)) END) ORDER BY (~ ((NOT (rt1.c1)))) DESC;
SELECT ALL * FROM t0, rt0 WHERE (CAST(rt0.c1 COLLATE NOCASE AS TEXT)) ORDER BY (t0.c1 IN (rt0.c1)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM t0, rt0 NOT INDEXED ORDER BY (t0.c1 IN (rt0.c1)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (CAST(rt0.c1 COLLATE NOCASE AS TEXT)) ORDER BY (t0.c1 IN (rt0.c1)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM t0, rt0 NOT INDEXED ORDER BY (t0.c1 IN (rt0.c1)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (CAST(rt0.c1 COLLATE NOCASE AS TEXT)) ORDER BY (t0.c1 IN (rt0.c1)) COLLATE NOCASE  NULLS FIRST;
SELECT ALL * FROM rt1, rt0, t0 WHERE (((CAST(rt1.c2 AS REAL)) BETWEEN ((rt1.c1 IN ())) AND (((((((((t0.c1)AND(t0.c2)))AND(rt1.c1)))OR(t0.c1)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c2 AS REAL)) BETWEEN ((rt1.c1 IN ())) AND (((((((((t0.c1)AND(t0.c2)))AND(rt1.c1)))OR(t0.c1)))OR(rt0.c1))))) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT ALL * FROM rt1, rt0, t0 WHERE (((CAST(rt1.c2 AS REAL)) BETWEEN ((rt1.c1 IN ())) AND (((((((((t0.c1)AND(t0.c2)))AND(rt1.c1)))OR(t0.c1)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c2 AS REAL)) BETWEEN ((rt1.c1 IN ())) AND (((((((((t0.c1)AND(t0.c2)))AND(rt1.c1)))OR(t0.c1)))OR(rt0.c1))))) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT ALL * FROM rt1, rt0, t0 WHERE (((CAST(rt1.c2 AS REAL)) BETWEEN ((rt1.c1 IN ())) AND (((((((((t0.c1)AND(t0.c2)))AND(rt1.c1)))OR(t0.c1)))OR(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0, t0 INNER JOIN rt1 ON (rt1.c0 IN ()) COLLATE RTRIM WHERE (CAST(x'e129' COLLATE NOCASE AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'e129' COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM rt0, t0 INNER JOIN rt1 ON (rt1.c0 IN ()) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0, t0 INNER JOIN rt1 ON (rt1.c0 IN ()) COLLATE RTRIM WHERE (CAST(x'e129' COLLATE NOCASE AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'e129' COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM rt0, t0 INNER JOIN rt1 ON (rt1.c0 IN ()) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0, t0 INNER JOIN rt1 ON (rt1.c0 IN ()) COLLATE RTRIM WHERE (CAST(x'e129' COLLATE NOCASE AS INTEGER));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c1 AS BLOB)) ORDER BY CAST(((rt0.c1) NOTNULL) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c1) NOTNULL) AS BLOB) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c1 AS BLOB)) ORDER BY CAST(((rt0.c1) NOTNULL) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c1) NOTNULL) AS BLOB) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c1 AS BLOB)) ORDER BY CAST(((rt0.c1) NOTNULL) AS BLOB) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)LIKE(x'')))=(rt0.c0 COLLATE BINARY))) ORDER BY rt0.c1 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)LIKE(x'')))==(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 COLLATE BINARY);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)LIKE(x'')))=(rt0.c0 COLLATE BINARY))) ORDER BY rt0.c1 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)LIKE(x'')))==(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 COLLATE BINARY);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)LIKE(x'')))=(rt0.c0 COLLATE BINARY))) ORDER BY rt0.c1 COLLATE BINARY;
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (LIKELY(DISTINCT (' d.uᗡ3dE' IN ())));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT (' d.uᗡ3dE' IN ()))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (LIKELY(DISTINCT (' d.uᗡ3dE' IN ())));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT (' d.uᗡ3dE' IN ()))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (LIKELY(DISTINCT (' d.uᗡ3dE' IN ())));
SELECT COUNT(*) FROM rt1 WHERE (CAST(((rt1.c1)<<(rt1.c3)) AS REAL)) ORDER BY HEX(DISTINCT (- (x''))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1)<<(rt1.c3)) AS REAL)) IS TRUE)  as count FROM rt1 ORDER BY HEX(DISTINCT (- (x''))) ASC);
SELECT COUNT(*) FROM rt1 WHERE (CAST(((rt1.c1)<<(rt1.c3)) AS REAL)) ORDER BY HEX(DISTINCT (- (x''))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1)<<(rt1.c3)) AS REAL)) IS TRUE)  as count FROM rt1 ORDER BY HEX(DISTINCT (- (x''))) ASC);
SELECT COUNT(*) FROM rt1 WHERE (CAST(((rt1.c1)<<(rt1.c3)) AS REAL)) ORDER BY HEX(DISTINCT (- (x''))) ASC;
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE (JULIANDAY(CASE WHEN 'T,n&4' THEN rt1.c4 ELSE rt1.c4 END, CASE rt1.c2  WHEN t0.c0 THEN rt0.c1 ELSE rt1.c0 END, CASE rt1.c2  WHEN rt0.c2 THEN t0.c0 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c1 END)) ORDER BY t0.c2;
SELECT SUM(count) FROM (SELECT ((JULIANDAY(CASE WHEN 'T,n&4' THEN rt1.c4 ELSE rt1.c4 END, CASE rt1.c2  WHEN t0.c0 THEN rt0.c1 ELSE rt1.c0 END, CASE rt1.c2  WHEN rt0.c2 THEN t0.c0 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c1 END)) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY t0.c2);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE (JULIANDAY(CASE WHEN 'T,n&4' THEN rt1.c4 ELSE rt1.c4 END, CASE rt1.c2  WHEN t0.c0 THEN rt0.c1 ELSE rt1.c0 END, CASE rt1.c2  WHEN rt0.c2 THEN t0.c0 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c1 END)) ORDER BY t0.c2;
SELECT SUM(count) FROM (SELECT ((JULIANDAY(CASE WHEN 'T,n&4' THEN rt1.c4 ELSE rt1.c4 END, CASE rt1.c2  WHEN t0.c0 THEN rt0.c1 ELSE rt1.c0 END, CASE rt1.c2  WHEN rt0.c2 THEN t0.c0 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c1 END)) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY t0.c2);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE (JULIANDAY(CASE WHEN 'T,n&4' THEN rt1.c4 ELSE rt1.c4 END, CASE rt1.c2  WHEN t0.c0 THEN rt0.c1 ELSE rt1.c0 END, CASE rt1.c2  WHEN rt0.c2 THEN t0.c0 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c1 END)) ORDER BY t0.c2;
SELECT * FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c2);
SELECT ALL * FROM rt0 WHERE ('') ORDER BY CASE WHEN (+ (rt0.c1)) THEN CAST(rt0.c0 AS NUMERIC) WHEN ((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)) THEN ((rt0.c1)>(rt0.c2)) WHEN CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END THEN rt0.c2 COLLATE NOCASE END ASC  NULLS FIRST, ((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))AND(rt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (+ (rt0.c1)) THEN CAST(rt0.c0 AS NUMERIC) WHEN ((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)) THEN ((rt0.c1)>(rt0.c2)) WHEN CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END THEN rt0.c2 COLLATE NOCASE END ASC  NULLS FIRST, ((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))AND(rt0.c1 COLLATE BINARY)));
SELECT ALL * FROM rt0 WHERE ('') ORDER BY CASE WHEN (+ (rt0.c1)) THEN CAST(rt0.c0 AS NUMERIC) WHEN ((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)) THEN ((rt0.c1)>(rt0.c2)) WHEN CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END THEN rt0.c2 COLLATE NOCASE END ASC  NULLS FIRST, ((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))AND(rt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (+ (rt0.c1)) THEN CAST(rt0.c0 AS NUMERIC) WHEN ((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)) THEN ((rt0.c1)>(rt0.c2)) WHEN CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END THEN rt0.c2 COLLATE NOCASE END ASC  NULLS FIRST, ((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))AND(rt0.c1 COLLATE BINARY)));
SELECT ALL * FROM rt0 WHERE ('') ORDER BY CASE WHEN (+ (rt0.c1)) THEN CAST(rt0.c0 AS NUMERIC) WHEN ((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)) THEN ((rt0.c1)>(rt0.c2)) WHEN CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END THEN rt0.c2 COLLATE NOCASE END ASC  NULLS FIRST, ((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))AND(rt0.c1 COLLATE BINARY));
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE ((NOT (((t0.c0) BETWEEN (rt1.c1) AND (t0.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c0) BETWEEN (rt1.c1) AND (t0.c2))))) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE ((NOT (((t0.c0) BETWEEN (rt1.c1) AND (t0.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c0) BETWEEN (rt1.c1) AND (t0.c2))))) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE ((NOT (((t0.c0) BETWEEN (rt1.c1) AND (t0.c2)))));
SELECT ALL * FROM rt1, rt0, t0 WHERE (json_type(rt1.c4 COLLATE NOCASE)) ORDER BY (((t0.c2) BETWEEN (t0.c1) AND (rt1.c4)) IN ((+ (rt0.c0)))) DESC  NULLS LAST, ROUND(((t0.c1)==(t0.c0)), ((rt0.c0) BETWEEN (rt0.c0) AND (t0.c0))) ASC  NULLS FIRST, ((~ (rt1.c1)) IN ((rt1.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((json_type(rt1.c4 COLLATE NOCASE)) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY (((t0.c2) BETWEEN (t0.c1) AND (rt1.c4)) IN ((+ (rt0.c0)))) DESC  NULLS LAST, ROUND(((t0.c1)==(t0.c0)), ((rt0.c0) BETWEEN (rt0.c0) AND (t0.c0))) ASC  NULLS FIRST, ((~ (rt1.c1)) IN ((rt1.c1 IN ()))));
SELECT ALL * FROM rt1, rt0, t0 WHERE (json_type(rt1.c4 COLLATE NOCASE)) ORDER BY (((t0.c2) BETWEEN (t0.c1) AND (rt1.c4)) IN ((+ (rt0.c0)))) DESC  NULLS LAST, ROUND(((t0.c1)==(t0.c0)), ((rt0.c0) BETWEEN (rt0.c0) AND (t0.c0))) ASC  NULLS FIRST, ((~ (rt1.c1)) IN ((rt1.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((json_type(rt1.c4 COLLATE NOCASE)) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY (((t0.c2) BETWEEN (t0.c1) AND (rt1.c4)) IN ((+ (rt0.c0)))) DESC  NULLS LAST, ROUND(((t0.c1)==(t0.c0)), ((rt0.c0) BETWEEN (rt0.c0) AND (t0.c0))) ASC  NULLS FIRST, ((~ (rt1.c1)) IN ((rt1.c1 IN ()))));
SELECT ALL * FROM rt1, rt0, t0 WHERE (json_type(rt1.c4 COLLATE NOCASE)) ORDER BY (((t0.c2) BETWEEN (t0.c1) AND (rt1.c4)) IN ((+ (rt0.c0)))) DESC  NULLS LAST, ROUND(((t0.c1)==(t0.c0)), ((rt0.c0) BETWEEN (rt0.c0) AND (t0.c0))) ASC  NULLS FIRST, ((~ (rt1.c1)) IN ((rt1.c1 IN ())));
SELECT ALL * FROM rt1 WHERE ((- (rt1.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((- (rt1.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((- (rt1.c1 COLLATE NOCASE)));
SELECT ALL * FROM rt1, rt0 WHERE (((((rt0.c2) NOT NULL)) NOT BETWEEN ((NOT (rt1.c4))) AND ('')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT NULL)) NOT BETWEEN ((NOT (rt1.c4))) AND (''))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (((((rt0.c2) NOT NULL)) NOT BETWEEN ((NOT (rt1.c4))) AND ('')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT NULL)) NOT BETWEEN ((NOT (rt1.c4))) AND (''))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (((((rt0.c2) NOT NULL)) NOT BETWEEN ((NOT (rt1.c4))) AND ('')));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON (((((t0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c3))))>=((((t0.c1) BETWEEN (t0.c1) AND (t0.c2))))) LEFT OUTER JOIN rt1 ON ((x'4739') ISNULL) WHERE (highlight(t0.c1 COLLATE BINARY, rt0.c0 COLLATE RTRIM, ((rt1.c4) IS TRUE), TRIM(DISTINCT rt1.c3, NULL)));
SELECT SUM(count) FROM (SELECT ((highlight(t0.c1 COLLATE BINARY, rt0.c0 COLLATE RTRIM, ((rt1.c4) IS TRUE), TRIM(DISTINCT rt1.c3, NULL))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON (((((t0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c3))))>=((((t0.c1) BETWEEN (t0.c1) AND (t0.c2))))) LEFT OUTER JOIN rt1 ON ((x'4739') ISNULL));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON (((((t0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c3))))>=((((t0.c1) BETWEEN (t0.c1) AND (t0.c2))))) LEFT OUTER JOIN rt1 ON ((x'4739') ISNULL) WHERE (highlight(t0.c1 COLLATE BINARY, rt0.c0 COLLATE RTRIM, ((rt1.c4) IS TRUE), TRIM(DISTINCT rt1.c3, NULL)));
SELECT SUM(count) FROM (SELECT ((highlight(t0.c1 COLLATE BINARY, rt0.c0 COLLATE RTRIM, ((rt1.c4) IS TRUE), TRIM(DISTINCT rt1.c3, NULL))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON (((((t0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c3))))>=((((t0.c1) BETWEEN (t0.c1) AND (t0.c2))))) LEFT OUTER JOIN rt1 ON ((x'4739') ISNULL));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)%(t0.c1)))IS(((t0.c1) BETWEEN (t0.c1) AND (t0.c2))))) ORDER BY ((t0.c0) IS TRUE) COLLATE NOCASE, CAST(((((t0.c1)OR(t0.c1)))AND(t0.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)%(t0.c1)))IS(((t0.c1) BETWEEN (t0.c1) AND (t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0) IS TRUE) COLLATE NOCASE, CAST(((((t0.c1)OR(t0.c1)))AND(t0.c0)) AS NUMERIC));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)%(t0.c1)))IS(((t0.c1) BETWEEN (t0.c1) AND (t0.c2))))) ORDER BY ((t0.c0) IS TRUE) COLLATE NOCASE, CAST(((((t0.c1)OR(t0.c1)))AND(t0.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)%(t0.c1)))IS(((t0.c1) BETWEEN (t0.c1) AND (t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0) IS TRUE) COLLATE NOCASE, CAST(((((t0.c1)OR(t0.c1)))AND(t0.c0)) AS NUMERIC));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)%(t0.c1)))IS(((t0.c1) BETWEEN (t0.c1) AND (t0.c2))))) ORDER BY ((t0.c0) IS TRUE) COLLATE NOCASE, CAST(((((t0.c1)OR(t0.c1)))AND(t0.c0)) AS NUMERIC);
SELECT ALL * FROM t0, rt1 RIGHT OUTER JOIN rt0 ON ((rt0.c0 COLLATE NOCASE) NOTNULL) WHERE (rt1.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt1.c1 COLLATE NOCASE) IS TRUE)  as count FROM t0, rt1 RIGHT OUTER JOIN rt0 ON ((rt0.c0 COLLATE NOCASE) NOTNULL));
SELECT ALL * FROM t0, rt1 RIGHT OUTER JOIN rt0 ON ((rt0.c0 COLLATE NOCASE) NOTNULL) WHERE (rt1.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt1.c1 COLLATE NOCASE) IS TRUE)  as count FROM t0, rt1 RIGHT OUTER JOIN rt0 ON ((rt0.c0 COLLATE NOCASE) NOTNULL));
SELECT ALL * FROM t0, rt1 RIGHT OUTER JOIN rt0 ON ((rt0.c0 COLLATE NOCASE) NOTNULL) WHERE (rt1.c1 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c3) NOT NULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3) NOT NULL)) ISNULL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c3) NOT NULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3) NOT NULL)) ISNULL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c3) NOT NULL)) ISNULL));
SELECT * FROM rt0, t0, rt1 WHERE (CAST(NULL AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT * FROM rt0, t0, rt1 WHERE (CAST(NULL AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT * FROM rt0, t0, rt1 WHERE (CAST(NULL AS NUMERIC));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON (((((((((((((((t0.c2)) BETWEEN ((rt1.c4)) AND ((-1159510306))))OR(rt1.c0 COLLATE RTRIM)))OR(TYPEOF(DISTINCT rt1.c0))))AND(((t0.c1)|(rt1.c2)))))AND(((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt1.c4)))))AND(TYPEOF(DISTINCT rt1.c1))))OR(((rt1.c1)GLOB(rt1.c1)))) LEFT OUTER JOIN t0 ON x'' WHERE (t0.c1) ORDER BY ((((((x'')OR(0.8390538813756557)))AND(rt1.c3))) BETWEEN (((rt1.c4)LIKE(rt0.c2))) AND (CAST(rt1.c0 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON (((((((((((((((t0.c2)) BETWEEN ((rt1.c4)) AND ((-1159510306))))OR(rt1.c0 COLLATE RTRIM)))OR(TYPEOF(DISTINCT rt1.c0))))AND(((t0.c1)|(rt1.c2)))))AND(((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt1.c4)))))AND(TYPEOF(DISTINCT rt1.c1))))OR(((rt1.c1)GLOB(rt1.c1)))) LEFT OUTER JOIN t0 ON x'' ORDER BY ((((((x'')OR(0.8390538813756557)))AND(rt1.c3))) BETWEEN (((rt1.c4)LIKE(rt0.c2))) AND (CAST(rt1.c0 AS REAL))) ASC);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON (((((((((((((((t0.c2)) BETWEEN ((rt1.c4)) AND ((-1159510306))))OR(rt1.c0 COLLATE RTRIM)))OR(TYPEOF(DISTINCT rt1.c0))))AND(((t0.c1)|(rt1.c2)))))AND(((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt1.c4)))))AND(TYPEOF(DISTINCT rt1.c1))))OR(((rt1.c1)GLOB(rt1.c1)))) LEFT OUTER JOIN t0 ON x'' WHERE (t0.c1) ORDER BY ((((((x'')OR(0.8390538813756557)))AND(rt1.c3))) BETWEEN (((rt1.c4)LIKE(rt0.c2))) AND (CAST(rt1.c0 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON (((((((((((((((t0.c2)) BETWEEN ((rt1.c4)) AND ((-1159510306))))OR(rt1.c0 COLLATE RTRIM)))OR(TYPEOF(DISTINCT rt1.c0))))AND(((t0.c1)|(rt1.c2)))))AND(((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt1.c4)))))AND(TYPEOF(DISTINCT rt1.c1))))OR(((rt1.c1)GLOB(rt1.c1)))) LEFT OUTER JOIN t0 ON x'' ORDER BY ((((((x'')OR(0.8390538813756557)))AND(rt1.c3))) BETWEEN (((rt1.c4)LIKE(rt0.c2))) AND (CAST(rt1.c0 AS REAL))) ASC);
SELECT * FROM rt1, rt0 CROSS JOIN t0 ON LENGTH('-1159510306') WHERE ((((((((((((((rt0.c0)OR(t0.c2)))AND(rt0.c2)))AND(rt1.c3)))OR(rt1.c4)))AND(rt0.c2)))AND(rt1.c1)) IN (CASE WHEN rt1.c2 THEN rt1.c1 WHEN t0.c0 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c3 END)));
SELECT SUM(count) FROM (SELECT (((((((((((((((rt0.c0)OR(t0.c2)))AND(rt0.c2)))AND(rt1.c3)))OR(rt1.c4)))AND(rt0.c2)))AND(rt1.c1)) IN (CASE WHEN rt1.c2 THEN rt1.c1 WHEN t0.c0 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c3 END))) IS TRUE)  as count FROM rt1, rt0 CROSS JOIN t0 ON LENGTH('-1159510306'));
SELECT * FROM rt1, rt0 CROSS JOIN t0 ON LENGTH('-1159510306') WHERE ((((((((((((((rt0.c0)OR(t0.c2)))AND(rt0.c2)))AND(rt1.c3)))OR(rt1.c4)))AND(rt0.c2)))AND(rt1.c1)) IN (CASE WHEN rt1.c2 THEN rt1.c1 WHEN t0.c0 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c3 END)));
SELECT SUM(count) FROM (SELECT (((((((((((((((rt0.c0)OR(t0.c2)))AND(rt0.c2)))AND(rt1.c3)))OR(rt1.c4)))AND(rt0.c2)))AND(rt1.c1)) IN (CASE WHEN rt1.c2 THEN rt1.c1 WHEN t0.c0 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c3 END))) IS TRUE)  as count FROM rt1, rt0 CROSS JOIN t0 ON LENGTH('-1159510306'));
SELECT * FROM rt1, rt0 CROSS JOIN t0 ON LENGTH('-1159510306') WHERE ((((((((((((((rt0.c0)OR(t0.c2)))AND(rt0.c2)))AND(rt1.c3)))OR(rt1.c4)))AND(rt0.c2)))AND(rt1.c1)) IN (CASE WHEN rt1.c2 THEN rt1.c1 WHEN t0.c0 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c3 END)));
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (CAST(rt1.c1 AS REAL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c1 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM rt1, t0);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (CAST(rt1.c1 AS REAL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c1 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM rt1, t0);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (CAST(rt1.c1 AS REAL) COLLATE RTRIM);
SELECT * FROM t0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c1);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 NOT INDEXED WHERE (CAST(TRIM(rt0.c2) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(rt0.c2) AS REAL)) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 NOT INDEXED WHERE (CAST(TRIM(rt0.c2) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(rt0.c2) AS REAL)) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 NOT INDEXED WHERE (CAST(TRIM(rt0.c2) AS REAL));
SELECT * FROM rt0, t0 WHERE (CAST('904278988' AS TEXT)) ORDER BY (- (((rt0.c0) BETWEEN (t0.c2) AND (t0.c2)))) DESC, (- (((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('904278988' AS TEXT)) IS TRUE)  as count FROM rt0, t0 ORDER BY (- (((rt0.c0) BETWEEN (t0.c2) AND (t0.c2)))) DESC, (- (((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE (CAST('904278988' AS TEXT)) ORDER BY (- (((rt0.c0) BETWEEN (t0.c2) AND (t0.c2)))) DESC, (- (((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('904278988' AS TEXT)) IS TRUE)  as count FROM rt0, t0 ORDER BY (- (((rt0.c0) BETWEEN (t0.c2) AND (t0.c2)))) DESC, (- (((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE (CAST('904278988' AS TEXT)) ORDER BY (- (((rt0.c0) BETWEEN (t0.c2) AND (t0.c2)))) DESC, (- (((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (IFNULL(DISTINCT t0.c1 COLLATE RTRIM, (((x'')) BETWEEN ((t0.c2)) AND ((t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT t0.c1 COLLATE RTRIM, (((x'')) BETWEEN ((t0.c2)) AND ((t0.c1))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (IFNULL(DISTINCT t0.c1 COLLATE RTRIM, (((x'')) BETWEEN ((t0.c2)) AND ((t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT t0.c1 COLLATE RTRIM, (((x'')) BETWEEN ((t0.c2)) AND ((t0.c1))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (IFNULL(DISTINCT t0.c1 COLLATE RTRIM, (((x'')) BETWEEN ((t0.c2)) AND ((t0.c1)))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c3)%(rt1.c0)) IN ((((rt1.c3, rt1.c2, rt1.c2))<((x'', rt1.c3, rt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c3)%(rt1.c0)) IN ((((rt1.c3, rt1.c2, rt1.c2))<((x'', rt1.c3, rt1.c0)))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c3)%(rt1.c0)) IN ((((rt1.c3, rt1.c2, rt1.c2))<((x'', rt1.c3, rt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c3)%(rt1.c0)) IN ((((rt1.c3, rt1.c2, rt1.c2))<((x'', rt1.c3, rt1.c0)))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c3)%(rt1.c0)) IN ((((rt1.c3, rt1.c2, rt1.c2))<((x'', rt1.c3, rt1.c0))))));
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (CAST(CAST(rt1.c3 AS INTEGER) AS TEXT)) ORDER BY CAST(rt0.c2 AS NUMERIC) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c3 AS INTEGER) AS TEXT)) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY CAST(rt0.c2 AS NUMERIC) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (CAST(CAST(rt1.c3 AS INTEGER) AS TEXT)) ORDER BY CAST(rt0.c2 AS NUMERIC) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c3 AS INTEGER) AS TEXT)) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY CAST(rt0.c2 AS NUMERIC) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (CAST(CAST(rt1.c3 AS INTEGER) AS TEXT)) ORDER BY CAST(rt0.c2 AS NUMERIC) COLLATE RTRIM  NULLS FIRST;
SELECT * FROM rt0 WHERE (x'') ORDER BY CASE WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c1) NOT NULL) END;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c1) NOT NULL) END);
SELECT * FROM rt0 WHERE (x'') ORDER BY CASE WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c1) NOT NULL) END;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c1) NOT NULL) END);
SELECT * FROM rt0 WHERE (x'') ORDER BY CASE WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c1) NOT NULL) END;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON CAST(LOWER(DISTINCT rt1.c0) AS BLOB) FULL OUTER JOIN rt1 ON (~ ((((rt1.c4))>((rt1.c4))))) WHERE (CAST(t0.c2 COLLATE NOCASE AS NUMERIC)) ORDER BY (((((rt0.c0) NOTNULL), ((rt1.c2)IS NOT(t0.c0)), CAST(rt1.c4 AS BLOB), TRIM(DISTINCT NULL), ((rt1.c4) BETWEEN (t0.c0) AND (rt0.c1))))<((CAST(rt1.c2 AS BLOB), SQLITE_VERSION(), (~ (rt1.c1)), ((('925913020'))<>((rt0.c1))), ((rt1.c0)IS NOT(rt0.c2))))), (((((rt1.c4)AND(rt1.c1)))OR(rt1.c3)) IN ()), rt1.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c2 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON CAST(LOWER(DISTINCT rt1.c0) AS BLOB) FULL OUTER JOIN rt1 ON (~ ((((rt1.c4))>((rt1.c4))))) ORDER BY (((((rt0.c0) NOTNULL), ((rt1.c2)IS NOT(t0.c0)), CAST(rt1.c4 AS BLOB), TRIM(DISTINCT NULL), ((rt1.c4) BETWEEN (t0.c0) AND (rt0.c1))))<((CAST(rt1.c2 AS BLOB), SQLITE_VERSION(), (~ (rt1.c1)), ((('925913020'))!=((rt0.c1))), ((rt1.c0)IS NOT(rt0.c2))))), (((((rt1.c4)AND(rt1.c1)))OR(rt1.c3)) IN ()), rt1.c3  NULLS LAST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON CAST(LOWER(DISTINCT rt1.c0) AS BLOB) FULL OUTER JOIN rt1 ON (~ ((((rt1.c4))>((rt1.c4))))) WHERE (CAST(t0.c2 COLLATE NOCASE AS NUMERIC)) ORDER BY (((((rt0.c0) NOTNULL), ((rt1.c2)IS NOT(t0.c0)), CAST(rt1.c4 AS BLOB), TRIM(DISTINCT NULL), ((rt1.c4) BETWEEN (t0.c0) AND (rt0.c1))))<((CAST(rt1.c2 AS BLOB), SQLITE_VERSION(), (~ (rt1.c1)), ((('925913020'))<>((rt0.c1))), ((rt1.c0)IS NOT(rt0.c2))))), (((((rt1.c4)AND(rt1.c1)))OR(rt1.c3)) IN ()), rt1.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c2 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON CAST(LOWER(DISTINCT rt1.c0) AS BLOB) FULL OUTER JOIN rt1 ON (~ ((((rt1.c4))>((rt1.c4))))) ORDER BY (((((rt0.c0) NOTNULL), ((rt1.c2)IS NOT(t0.c0)), CAST(rt1.c4 AS BLOB), TRIM(DISTINCT NULL), ((rt1.c4) BETWEEN (t0.c0) AND (rt0.c1))))<((CAST(rt1.c2 AS BLOB), SQLITE_VERSION(), (~ (rt1.c1)), ((('925913020'))!=((rt0.c1))), ((rt1.c0)IS NOT(rt0.c2))))), (((((rt1.c4)AND(rt1.c1)))OR(rt1.c3)) IN ()), rt1.c3  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CAST(((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt0.c0)) AS BLOB)) ORDER BY LOWER(((((rt1.c2)AND(rt0.c2)))AND(rt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt1, rt0 ORDER BY LOWER(((((rt1.c2)AND(rt0.c2)))AND(rt0.c2))) DESC);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CAST(((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt0.c0)) AS BLOB)) ORDER BY LOWER(((((rt1.c2)AND(rt0.c2)))AND(rt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt1, rt0 ORDER BY LOWER(((((rt1.c2)AND(rt0.c2)))AND(rt0.c2))) DESC);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CAST(((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt0.c0)) AS BLOB)) ORDER BY LOWER(((((rt1.c2)AND(rt0.c2)))AND(rt0.c2))) DESC;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((json_array(rt0.c2, rt0.c0))+(x'66b7a9c4'))) ORDER BY ((((rt0.c1) NOTNULL))/(((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((json_array(rt0.c2, rt0.c0))+(x'66b7a9c4'))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt0.c1) NOTNULL))/(((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c1)))) DESC);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((json_array(rt0.c2, rt0.c0))+(x'66b7a9c4'))) ORDER BY ((((rt0.c1) NOTNULL))/(((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((json_array(rt0.c2, rt0.c0))+(x'66b7a9c4'))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt0.c1) NOTNULL))/(((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c1)))) DESC);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((json_array(rt0.c2, rt0.c0))+(x'66b7a9c4'))) ORDER BY ((((rt0.c1) NOTNULL))/(((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c1)))) DESC;
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON json_extract(rt1.c2, rt1.c1) COLLATE NOCASE FULL OUTER JOIN rt1 ON ((rt1.c2)&(t0.c1)) COLLATE BINARY WHERE (CAST((rt1.c1 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt1.c1 IN ()) AS TEXT)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON json_extract(rt1.c2, rt1.c1) COLLATE NOCASE FULL OUTER JOIN rt1 ON ((rt1.c2)&(t0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON json_extract(rt1.c2, rt1.c1) COLLATE NOCASE FULL OUTER JOIN rt1 ON ((rt1.c2)&(t0.c1)) COLLATE BINARY WHERE (CAST((rt1.c1 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt1.c1 IN ()) AS TEXT)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON json_extract(rt1.c2, rt1.c1) COLLATE NOCASE FULL OUTER JOIN rt1 ON ((rt1.c2)&(t0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c0)LIKE(rt0.c2))  WHEN rt0.c0 THEN ((rt0.c2) BETWEEN (rt0.c1) AND (x'')) ELSE (- (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0)LIKE(rt0.c2))  WHEN rt0.c0 THEN ((rt0.c2) BETWEEN (rt0.c1) AND (x'')) ELSE (- (rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c0)LIKE(rt0.c2))  WHEN rt0.c0 THEN ((rt0.c2) BETWEEN (rt0.c1) AND (x'')) ELSE (- (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0)LIKE(rt0.c2))  WHEN rt0.c0 THEN ((rt0.c2) BETWEEN (rt0.c1) AND (x'')) ELSE (- (rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c0)LIKE(rt0.c2))  WHEN rt0.c0 THEN ((rt0.c2) BETWEEN (rt0.c1) AND (x'')) ELSE (- (rt0.c1)) END);
SELECT * FROM t0 FULL OUTER JOIN rt0 ON CASE rt0.c1  WHEN ((t0.c0) NOTNULL) THEN NULL WHEN t0.c1 THEN NULL COLLATE NOCASE WHEN ((t0.c1) IS TRUE) THEN (+ (t0.c0)) END WHERE (rt0.c1) ORDER BY ((((((((((x'')OR(t0.c0)))AND(t0.c2)))AND(0.6212655273538842)))OR(t0.c2)))LIKE(((rt0.c1)<(0.111437236251417)))) DESC  NULLS LAST, (((((~ (t0.c0)))OR(((t0.c1) NOT BETWEEN (t0.c2) AND (rt0.c2)))))OR(CAST(t0.c0 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON CASE rt0.c1  WHEN ((t0.c0) NOTNULL) THEN NULL WHEN t0.c1 THEN NULL COLLATE NOCASE WHEN ((t0.c1) IS TRUE) THEN (+ (t0.c0)) END ORDER BY ((((((((((x'')OR(t0.c0)))AND(t0.c2)))AND(0.6212655273538842)))OR(t0.c2)))LIKE(((rt0.c1)<(0.111437236251417)))) DESC  NULLS LAST, (((((~ (t0.c0)))OR(((t0.c1) NOT BETWEEN (t0.c2) AND (rt0.c2)))))OR(CAST(t0.c0 AS INTEGER)))  NULLS LAST);
SELECT * FROM t0 FULL OUTER JOIN rt0 ON CASE rt0.c1  WHEN ((t0.c0) NOTNULL) THEN NULL WHEN t0.c1 THEN NULL COLLATE NOCASE WHEN ((t0.c1) IS TRUE) THEN (+ (t0.c0)) END WHERE (rt0.c1) ORDER BY ((((((((((x'')OR(t0.c0)))AND(t0.c2)))AND(0.6212655273538842)))OR(t0.c2)))LIKE(((rt0.c1)<(0.111437236251417)))) DESC  NULLS LAST, (((((~ (t0.c0)))OR(((t0.c1) NOT BETWEEN (t0.c2) AND (rt0.c2)))))OR(CAST(t0.c0 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON CASE rt0.c1  WHEN ((t0.c0) NOTNULL) THEN NULL WHEN t0.c1 THEN NULL COLLATE NOCASE WHEN ((t0.c1) IS TRUE) THEN (+ (t0.c0)) END ORDER BY ((((((((((x'')OR(t0.c0)))AND(t0.c2)))AND(0.6212655273538842)))OR(t0.c2)))LIKE(((rt0.c1)<(0.111437236251417)))) DESC  NULLS LAST, (((((~ (t0.c0)))OR(((t0.c1) NOT BETWEEN (t0.c2) AND (rt0.c2)))))OR(CAST(t0.c0 AS INTEGER)))  NULLS LAST);
SELECT * FROM t0 FULL OUTER JOIN rt0 ON CASE rt0.c1  WHEN ((t0.c0) NOTNULL) THEN NULL WHEN t0.c1 THEN NULL COLLATE NOCASE WHEN ((t0.c1) IS TRUE) THEN (+ (t0.c0)) END WHERE (rt0.c1) ORDER BY ((((((((((x'')OR(t0.c0)))AND(t0.c2)))AND(0.6212655273538842)))OR(t0.c2)))LIKE(((rt0.c1)<(0.111437236251417)))) DESC  NULLS LAST, (((((~ (t0.c0)))OR(((t0.c1) NOT BETWEEN (t0.c2) AND (rt0.c2)))))OR(CAST(t0.c0 AS INTEGER)))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((('u!')<=(CASE t0.c2  WHEN NULL THEN t0.c0 END))) ORDER BY CASE t0.c0  WHEN ((t0.c1) BETWEEN (t0.c1) AND (t0.c0)) THEN ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('u!')<=(CASE t0.c2  WHEN NULL THEN t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY CASE t0.c0  WHEN ((t0.c1) BETWEEN (t0.c1) AND (t0.c0)) THEN ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((('u!')<=(CASE t0.c2  WHEN NULL THEN t0.c0 END))) ORDER BY CASE t0.c0  WHEN ((t0.c1) BETWEEN (t0.c1) AND (t0.c0)) THEN ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('u!')<=(CASE t0.c2  WHEN NULL THEN t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY CASE t0.c0  WHEN ((t0.c1) BETWEEN (t0.c1) AND (t0.c0)) THEN ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((('u!')<=(CASE t0.c2  WHEN NULL THEN t0.c0 END))) ORDER BY CASE t0.c0  WHEN ((t0.c1) BETWEEN (t0.c1) AND (t0.c0)) THEN ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)) END ASC  NULLS LAST;
SELECT * FROM rt0, rt1 NATURAL JOIN t0 WHERE (((rt1.c1) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((rt1.c1) IS FALSE)) IS TRUE)  as count FROM rt0, rt1 NATURAL JOIN t0);
SELECT * FROM rt0, rt1 NATURAL JOIN t0 WHERE (((rt1.c1) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((rt1.c1) IS FALSE)) IS TRUE)  as count FROM rt0, rt1 NATURAL JOIN t0);
SELECT * FROM rt0, rt1 NATURAL JOIN t0 WHERE (((rt1.c1) IS FALSE));
SELECT COUNT(*) FROM rt0, rt1 WHERE (((x'')>=((((x'')) BETWEEN ((rt1.c0)) AND ((rt1.c2))))));
SELECT SUM(count) FROM (SELECT ((((x'')>=((((x'')) BETWEEN ((rt1.c0)) AND ((rt1.c2)))))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((x'')>=((((x'')) BETWEEN ((rt1.c0)) AND ((rt1.c2))))));
SELECT SUM(count) FROM (SELECT ((((x'')>=((((x'')) BETWEEN ((rt1.c0)) AND ((rt1.c2)))))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((x'')>=((((x'')) BETWEEN ((rt1.c0)) AND ((rt1.c2))))));
SELECT ALL * FROM rt1 WHERE (((((((((CASE rt1.c4  WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c2 END)OR(CAST(rt1.c0 AS NUMERIC))))OR(rt1.c0)))AND(rt1.c0 COLLATE NOCASE)))OR((rt1.c0 IN (rt1.c3, rt1.c1))))) ORDER BY '2Wq\n';
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE rt1.c4  WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c2 END)OR(CAST(rt1.c0 AS NUMERIC))))OR(rt1.c0)))AND(rt1.c0 COLLATE NOCASE)))OR((rt1.c0 IN (rt1.c3, rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY '2Wq\n');
SELECT ALL * FROM rt1 WHERE (((((((((CASE rt1.c4  WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c2 END)OR(CAST(rt1.c0 AS NUMERIC))))OR(rt1.c0)))AND(rt1.c0 COLLATE NOCASE)))OR((rt1.c0 IN (rt1.c3, rt1.c1))))) ORDER BY '2Wq\n';
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE rt1.c4  WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c2 END)OR(CAST(rt1.c0 AS NUMERIC))))OR(rt1.c0)))AND(rt1.c0 COLLATE NOCASE)))OR((rt1.c0 IN (rt1.c3, rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY '2Wq\n');
SELECT ALL * FROM rt1 WHERE (((((((((CASE rt1.c4  WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c2 END)OR(CAST(rt1.c0 AS NUMERIC))))OR(rt1.c0)))AND(rt1.c0 COLLATE NOCASE)))OR((rt1.c0 IN (rt1.c3, rt1.c1))))) ORDER BY '2Wq\n';
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (((((NOT (t0.c0))))<>(((- (rt1.c1)))))) ORDER BY ((((t0.c0) NOTNULL)) ISNULL) DESC  NULLS LAST, ((((t0.c2) BETWEEN (rt0.c2) AND (rt1.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (t0.c0))))!=(((- (rt1.c1)))))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((((t0.c0) NOTNULL)) ISNULL) DESC  NULLS LAST, ((((t0.c2) BETWEEN (rt0.c2) AND (rt1.c0))) IS TRUE));
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (((((NOT (t0.c0))))<>(((- (rt1.c1)))))) ORDER BY ((((t0.c0) NOTNULL)) ISNULL) DESC  NULLS LAST, ((((t0.c2) BETWEEN (rt0.c2) AND (rt1.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (t0.c0))))!=(((- (rt1.c1)))))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((((t0.c0) NOTNULL)) ISNULL) DESC  NULLS LAST, ((((t0.c2) BETWEEN (rt0.c2) AND (rt1.c0))) IS TRUE));
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (((((NOT (t0.c0))))<>(((- (rt1.c1)))))) ORDER BY ((((t0.c0) NOTNULL)) ISNULL) DESC  NULLS LAST, ((((t0.c2) BETWEEN (rt0.c2) AND (rt1.c0))) IS TRUE);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (rt0.c1);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE (((('')) BETWEEN ((HEX(DISTINCT rt1.c0))) AND ((((t0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c4)))))) ORDER BY (NOT ((((rt1.c3))>=((rt1.c3))))), rt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((('')) BETWEEN ((HEX(DISTINCT rt1.c0))) AND ((((t0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c4)))))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY (NOT ((((rt1.c3))>=((rt1.c3))))), rt1.c1 ASC);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE (((('')) BETWEEN ((HEX(DISTINCT rt1.c0))) AND ((((t0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c4)))))) ORDER BY (NOT ((((rt1.c3))>=((rt1.c3))))), rt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((('')) BETWEEN ((HEX(DISTINCT rt1.c0))) AND ((((t0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c4)))))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY (NOT ((((rt1.c3))>=((rt1.c3))))), rt1.c1 ASC);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE (((('')) BETWEEN ((HEX(DISTINCT rt1.c0))) AND ((((t0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c4)))))) ORDER BY (NOT ((((rt1.c3))>=((rt1.c3))))), rt1.c1 ASC;
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON ((0.37871727212764084) BETWEEN (CASE WHEN rt1.c1 THEN '-165554357' WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c2 END) AND (((((rt1.c2)OR(rt0.c0)))AND(rt1.c2)))) WHERE (CAST(((((rt1.c3)OR(rt1.c1)))AND(rt1.c3)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt1.c3)OR(rt1.c1)))AND(rt1.c3)) AS INTEGER)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((0.37871727212764084) BETWEEN (CASE WHEN rt1.c1 THEN '-165554357' WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c2 END) AND (((((rt1.c2)OR(rt0.c0)))AND(rt1.c2)))));
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON ((0.37871727212764084) BETWEEN (CASE WHEN rt1.c1 THEN '-165554357' WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c2 END) AND (((((rt1.c2)OR(rt0.c0)))AND(rt1.c2)))) WHERE (CAST(((((rt1.c3)OR(rt1.c1)))AND(rt1.c3)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt1.c3)OR(rt1.c1)))AND(rt1.c3)) AS INTEGER)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((0.37871727212764084) BETWEEN (CASE WHEN rt1.c1 THEN '-165554357' WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c2 END) AND (((((rt1.c2)OR(rt0.c0)))AND(rt1.c2)))));
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON ((0.37871727212764084) BETWEEN (CASE WHEN rt1.c1 THEN '-165554357' WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c2 END) AND (((((rt1.c2)OR(rt0.c0)))AND(rt1.c2)))) WHERE (CAST(((((rt1.c3)OR(rt1.c1)))AND(rt1.c3)) AS INTEGER));
SELECT ALL * FROM t0, rt0 WHERE ((~ (((t0.c0)==(NULL))))) ORDER BY ((((rt0.c0) IS FALSE))>(((rt0.c0)OR(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c0)=(NULL))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c0) IS FALSE))>(((rt0.c0)OR(t0.c0)))));
SELECT ALL * FROM t0, rt0 WHERE ((~ (((t0.c0)==(NULL))))) ORDER BY ((((rt0.c0) IS FALSE))>(((rt0.c0)OR(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c0)=(NULL))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c0) IS FALSE))>(((rt0.c0)OR(t0.c0)))));
SELECT ALL * FROM t0, rt0 WHERE ((~ (((t0.c0)==(NULL))))) ORDER BY ((((rt0.c0) IS FALSE))>(((rt0.c0)OR(t0.c0))));
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((((NULL))<(((((t0.c0, rt1.c0, t0.c1))<=((rt1.c4, 9.44447895E8, rt1.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL))<(((((t0.c0, rt1.c0, t0.c1))<=((rt1.c4, 9.44447895E8, rt1.c0))))))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((((NULL))<(((((t0.c0, rt1.c0, t0.c1))<=((rt1.c4, 9.44447895E8, rt1.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL))<(((((t0.c0, rt1.c0, t0.c1))<=((rt1.c4, 9.44447895E8, rt1.c0))))))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((((NULL))<(((((t0.c0, rt1.c0, t0.c1))<=((rt1.c4, 9.44447895E8, rt1.c0)))))));
SELECT COUNT(*) FROM rt0, rt1 WHERE (((0.1596686250039746)>>(rt0.c0 COLLATE BINARY))) ORDER BY (((((rt1.c1) BETWEEN (rt1.c4) AND (x''))))>(((+ (rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.1596686250039746)>>(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((((rt1.c1) BETWEEN (rt1.c4) AND (x''))))>(((+ (rt1.c4))))));
SELECT COUNT(*) FROM rt0, rt1 WHERE (((0.1596686250039746)>>(rt0.c0 COLLATE BINARY))) ORDER BY (((((rt1.c1) BETWEEN (rt1.c4) AND (x''))))>(((+ (rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.1596686250039746)>>(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((((rt1.c1) BETWEEN (rt1.c4) AND (x''))))>(((+ (rt1.c4))))));
SELECT COUNT(*) FROM rt0, rt1 WHERE (((0.1596686250039746)>>(rt0.c0 COLLATE BINARY))) ORDER BY (((((rt1.c1) BETWEEN (rt1.c4) AND (x''))))>(((+ (rt1.c4)))));
SELECT COUNT(*) FROM rt0, rt1 INNER JOIN t0 ON (((+ (rt1.c2)))<<(CAST(rt1.c1 AS TEXT))) WHERE (((((((NULL)AND(x'')))AND(rt0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((NULL)AND(x'')))AND(rt0.c2))) IS FALSE)) IS TRUE)  as count FROM rt0, rt1 INNER JOIN t0 ON (((+ (rt1.c2)))<<(CAST(rt1.c1 AS TEXT))));
SELECT COUNT(*) FROM rt0, rt1 INNER JOIN t0 ON (((+ (rt1.c2)))<<(CAST(rt1.c1 AS TEXT))) WHERE (((((((NULL)AND(x'')))AND(rt0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((NULL)AND(x'')))AND(rt0.c2))) IS FALSE)) IS TRUE)  as count FROM rt0, rt1 INNER JOIN t0 ON (((+ (rt1.c2)))<<(CAST(rt1.c1 AS TEXT))));
SELECT COUNT(*) FROM rt0, rt1 INNER JOIN t0 ON (((+ (rt1.c2)))<<(CAST(rt1.c1 AS TEXT))) WHERE (((((((NULL)AND(x'')))AND(rt0.c2))) IS FALSE));
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)+(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)+(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)+(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)+(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)+(rt0.c1)) IN ()));
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON CASE WHEN CAST(rt0.c2 AS BLOB) THEN (rt1.c1 IN (t0.c0)) END LEFT OUTER JOIN rt1 ON (((((t0.c2))>=((rt0.c2)))) IS TRUE) WHERE (rt1.c0) ORDER BY TOTAL_CHANGES() COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON CASE WHEN CAST(rt0.c2 AS BLOB) THEN (rt1.c1 IN (t0.c0)) END LEFT OUTER JOIN rt1 ON (((((t0.c2))>=((rt0.c2)))) IS TRUE) ORDER BY TOTAL_CHANGES() COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON CASE WHEN CAST(rt0.c2 AS BLOB) THEN (rt1.c1 IN (t0.c0)) END LEFT OUTER JOIN rt1 ON (((((t0.c2))>=((rt0.c2)))) IS TRUE) WHERE (rt1.c0) ORDER BY TOTAL_CHANGES() COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON CASE WHEN CAST(rt0.c2 AS BLOB) THEN (rt1.c1 IN (t0.c0)) END LEFT OUTER JOIN rt1 ON (((((t0.c2))>=((rt0.c2)))) IS TRUE) ORDER BY TOTAL_CHANGES() COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c1) IS TRUE) THEN ((((((((t0.c2)AND(t0.c0)))AND(t0.c2)))AND(t0.c2)))AND(t0.c2)) WHEN ((t0.c0)|(t0.c2)) THEN ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)) WHEN ((t0.c2)=(t0.c1)) THEN (((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c1) IS TRUE) THEN ((((((((t0.c2)AND(t0.c0)))AND(t0.c2)))AND(t0.c2)))AND(t0.c2)) WHEN ((t0.c0)|(t0.c2)) THEN ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)) WHEN ((t0.c2)=(t0.c1)) THEN (((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c1) IS TRUE) THEN ((((((((t0.c2)AND(t0.c0)))AND(t0.c2)))AND(t0.c2)))AND(t0.c2)) WHEN ((t0.c0)|(t0.c2)) THEN ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)) WHEN ((t0.c2)=(t0.c1)) THEN (((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c1) IS TRUE) THEN ((((((((t0.c2)AND(t0.c0)))AND(t0.c2)))AND(t0.c2)))AND(t0.c2)) WHEN ((t0.c0)|(t0.c2)) THEN ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)) WHEN ((t0.c2)=(t0.c1)) THEN (((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c1) IS TRUE) THEN ((((((((t0.c2)AND(t0.c0)))AND(t0.c2)))AND(t0.c2)))AND(t0.c2)) WHEN ((t0.c0)|(t0.c2)) THEN ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)) WHEN ((t0.c2)=(t0.c1)) THEN (((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) END);
SELECT * FROM t0, rt1 RIGHT OUTER JOIN rt0 ON t0.c0 WHERE ((0.042397272469532954 IN ())) ORDER BY (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((0.042397272469532954 IN ())) IS TRUE)  as count FROM t0, rt1 RIGHT OUTER JOIN rt0 ON t0.c0 ORDER BY (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) IN ()) DESC  NULLS LAST);
SELECT * FROM t0, rt1 RIGHT OUTER JOIN rt0 ON t0.c0 WHERE ((0.042397272469532954 IN ())) ORDER BY (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((0.042397272469532954 IN ())) IS TRUE)  as count FROM t0, rt1 RIGHT OUTER JOIN rt0 ON t0.c0 ORDER BY (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) IN ()) DESC  NULLS LAST);
SELECT * FROM t0, rt1 RIGHT OUTER JOIN rt0 ON t0.c0 WHERE ((0.042397272469532954 IN ())) ORDER BY (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) IN ()) DESC  NULLS LAST;
SELECT ALL * FROM rt1 RIGHT OUTER JOIN t0 ON ((CASE rt0.c2  WHEN rt1.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN 1.83806165E9 THEN rt1.c1 END)||(((((rt1.c3)OR(rt1.c0)))AND(rt1.c0)))) CROSS JOIN rt0 ON (((((t0.c0) ISNULL)))=((CASE rt1.c3  WHEN t0.c2 THEN rt0.c0 ELSE rt0.c2 END))) WHERE (CAST(CASE WHEN rt1.c4 THEN rt1.c4 END AS NUMERIC)) ORDER BY CAST((((rt1.c4)) BETWEEN ((rt1.c4)) AND ((rt1.c3))) AS REAL) ASC, SQLITE_VERSION() ASC, rtreenode(((rt0.c0) IS FALSE), (rt1.c3 IN (x'', rt0.c1))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt1.c4 THEN rt1.c4 END AS NUMERIC)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN t0 ON ((CASE rt0.c2  WHEN rt1.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN 1.83806165E9 THEN rt1.c1 END)||(((((rt1.c3)OR(rt1.c0)))AND(rt1.c0)))) CROSS JOIN rt0 ON (((((t0.c0) ISNULL)))=((CASE rt1.c3  WHEN t0.c2 THEN rt0.c0 ELSE rt0.c2 END))) ORDER BY CAST((((rt1.c4)) BETWEEN ((rt1.c4)) AND ((rt1.c3))) AS REAL) ASC, SQLITE_VERSION() ASC, rtreenode(((rt0.c0) IS FALSE), (rt1.c3 IN (x'', rt0.c1))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN t0 ON ((CASE rt0.c2  WHEN rt1.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN 1.83806165E9 THEN rt1.c1 END)||(((((rt1.c3)OR(rt1.c0)))AND(rt1.c0)))) CROSS JOIN rt0 ON (((((t0.c0) ISNULL)))=((CASE rt1.c3  WHEN t0.c2 THEN rt0.c0 ELSE rt0.c2 END))) WHERE (CAST(CASE WHEN rt1.c4 THEN rt1.c4 END AS NUMERIC)) ORDER BY CAST((((rt1.c4)) BETWEEN ((rt1.c4)) AND ((rt1.c3))) AS REAL) ASC, SQLITE_VERSION() ASC, rtreenode(((rt0.c0) IS FALSE), (rt1.c3 IN (x'', rt0.c1))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt1.c4 THEN rt1.c4 END AS NUMERIC)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN t0 ON ((CASE rt0.c2  WHEN rt1.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN 1.83806165E9 THEN rt1.c1 END)||(((((rt1.c3)OR(rt1.c0)))AND(rt1.c0)))) CROSS JOIN rt0 ON (((((t0.c0) ISNULL)))=((CASE rt1.c3  WHEN t0.c2 THEN rt0.c0 ELSE rt0.c2 END))) ORDER BY CAST((((rt1.c4)) BETWEEN ((rt1.c4)) AND ((rt1.c3))) AS REAL) ASC, SQLITE_VERSION() ASC, rtreenode(((rt0.c0) IS FALSE), (rt1.c3 IN (x'', rt0.c1))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 INNER JOIN t0 ON CASE WHEN 0.1895354775182635 THEN ((t0.c2)>(t0.c2)) WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c0)||(rt0.c2)) WHEN 0.7564230770044106 THEN COALESCE(DISTINCT '-1703607843', rt0.c2) ELSE LAST_INSERT_ROWID() END WHERE (json_array((rt0.c1 IN (t0.c0)), (NOT (rt0.c2)), '-2134939564', ((rt0.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((json_array((rt0.c1 IN (t0.c0)), (NOT (rt0.c2)), '-2134939564', ((rt0.c1) NOTNULL))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON CASE WHEN 0.1895354775182635 THEN ((t0.c2)>(t0.c2)) WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c0)||(rt0.c2)) WHEN 0.7564230770044106 THEN COALESCE(DISTINCT '-1703607843', rt0.c2) ELSE LAST_INSERT_ROWID() END);
SELECT ALL * FROM rt0 INNER JOIN t0 ON CASE WHEN 0.1895354775182635 THEN ((t0.c2)>(t0.c2)) WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c0)||(rt0.c2)) WHEN 0.7564230770044106 THEN COALESCE(DISTINCT '-1703607843', rt0.c2) ELSE LAST_INSERT_ROWID() END WHERE (json_array((rt0.c1 IN (t0.c0)), (NOT (rt0.c2)), '-2134939564', ((rt0.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((json_array((rt0.c1 IN (t0.c0)), (NOT (rt0.c2)), '-2134939564', ((rt0.c1) NOTNULL))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON CASE WHEN 0.1895354775182635 THEN ((t0.c2)>(t0.c2)) WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c0)||(rt0.c2)) WHEN 0.7564230770044106 THEN COALESCE(DISTINCT '-1703607843', rt0.c2) ELSE LAST_INSERT_ROWID() END);
SELECT ALL * FROM rt0 INNER JOIN t0 ON CASE WHEN 0.1895354775182635 THEN ((t0.c2)>(t0.c2)) WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c0)||(rt0.c2)) WHEN 0.7564230770044106 THEN COALESCE(DISTINCT '-1703607843', rt0.c2) ELSE LAST_INSERT_ROWID() END WHERE (json_array((rt0.c1 IN (t0.c0)), (NOT (rt0.c2)), '-2134939564', ((rt0.c1) NOTNULL)));
SELECT * FROM rt0, rt1 WHERE ((((rt1.c2 IN ()))<<(((rt0.c0) NOT BETWEEN (rt1.c4) AND (rt1.c0))))) ORDER BY ((((CAST('-1699698112' AS BLOB))AND(((rt0.c1) IS TRUE))))OR((~ (rt1.c2)))) ASC  NULLS FIRST, ((((rt1.c3) IS TRUE))OR(((rt0.c0)<('526100732'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2 IN ()))<<(((rt0.c0) NOT BETWEEN (rt1.c4) AND (rt1.c0))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((CAST('-1699698112' AS BLOB))AND(((rt0.c1) IS TRUE))))OR((~ (rt1.c2)))) ASC  NULLS FIRST, ((((rt1.c3) IS TRUE))OR(((rt0.c0)<('526100732'))))  NULLS LAST);
SELECT * FROM rt0, rt1 WHERE ((((rt1.c2 IN ()))<<(((rt0.c0) NOT BETWEEN (rt1.c4) AND (rt1.c0))))) ORDER BY ((((CAST('-1699698112' AS BLOB))AND(((rt0.c1) IS TRUE))))OR((~ (rt1.c2)))) ASC  NULLS FIRST, ((((rt1.c3) IS TRUE))OR(((rt0.c0)<('526100732'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2 IN ()))<<(((rt0.c0) NOT BETWEEN (rt1.c4) AND (rt1.c0))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((CAST('-1699698112' AS BLOB))AND(((rt0.c1) IS TRUE))))OR((~ (rt1.c2)))) ASC  NULLS FIRST, ((((rt1.c3) IS TRUE))OR(((rt0.c0)<('526100732'))))  NULLS LAST);
SELECT * FROM rt0, rt1 WHERE ((((rt1.c2 IN ()))<<(((rt0.c0) NOT BETWEEN (rt1.c4) AND (rt1.c0))))) ORDER BY ((((CAST('-1699698112' AS BLOB))AND(((rt0.c1) IS TRUE))))OR((~ (rt1.c2)))) ASC  NULLS FIRST, ((((rt1.c3) IS TRUE))OR(((rt0.c0)<('526100732'))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (ABS(0.9766952938393623)) ORDER BY (NOT (CASE WHEN rt0.c2 THEN '%&bU' END)) ASC, TOTAL_CHANGES() DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ABS(0.9766952938393623)) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY (NOT (CASE WHEN rt0.c2 THEN '%&bU' END)) ASC, TOTAL_CHANGES() DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (ABS(0.9766952938393623)) ORDER BY (NOT (CASE WHEN rt0.c2 THEN '%&bU' END)) ASC, TOTAL_CHANGES() DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ABS(0.9766952938393623)) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY (NOT (CASE WHEN rt0.c2 THEN '%&bU' END)) ASC, TOTAL_CHANGES() DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (ABS(0.9766952938393623)) ORDER BY (NOT (CASE WHEN rt0.c2 THEN '%&bU' END)) ASC, TOTAL_CHANGES() DESC  NULLS FIRST;
SELECT * FROM rt0, t0 WHERE (((((((((((t0.c2)!=(rt0.c0)))AND(STRFTIME(t0.c1, t0.c2, t0.c1, rt0.c2, rt0.c0))))OR((~ (t0.c0)))))OR(CAST(rt0.c0 AS REAL))))AND((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c2)<>(rt0.c0)))AND(STRFTIME(t0.c1, t0.c2, t0.c1, rt0.c2, rt0.c0))))OR((~ (t0.c0)))))OR(CAST(rt0.c0 AS REAL))))AND((~ (rt0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((((((((((t0.c2)!=(rt0.c0)))AND(STRFTIME(t0.c1, t0.c2, t0.c1, rt0.c2, rt0.c0))))OR((~ (t0.c0)))))OR(CAST(rt0.c0 AS REAL))))AND((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c2)<>(rt0.c0)))AND(STRFTIME(t0.c1, t0.c2, t0.c1, rt0.c2, rt0.c0))))OR((~ (t0.c0)))))OR(CAST(rt0.c0 AS REAL))))AND((~ (rt0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((((((((((t0.c2)!=(rt0.c0)))AND(STRFTIME(t0.c1, t0.c2, t0.c1, rt0.c2, rt0.c0))))OR((~ (t0.c0)))))OR(CAST(rt0.c0 AS REAL))))AND((~ (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c3)>>(rt1.c2)) COLLATE BINARY) ORDER BY ((((((rt1.c4)AND(rt1.c0)))OR(rt1.c0))) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c3)>>(rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c4)AND(rt1.c0)))OR(rt1.c0))) NOTNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c3)>>(rt1.c2)) COLLATE BINARY) ORDER BY ((((((rt1.c4)AND(rt1.c0)))OR(rt1.c0))) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c3)>>(rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c4)AND(rt1.c0)))OR(rt1.c0))) NOTNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c3)>>(rt1.c2)) COLLATE BINARY) ORDER BY ((((((rt1.c4)AND(rt1.c0)))OR(rt1.c0))) NOTNULL) DESC  NULLS FIRST;
SELECT ALL * FROM t0 INNER JOIN rt0 ON (((((t0.c1 IN ()))OR(json_type(rt1.c1))))AND((~ (rt0.c0)))) INNER JOIN rt1 ON ((((t0.c1)>(rt1.c3)))>=(((t0.c1)||(rt1.c3)))) WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (((((t0.c1 IN ()))OR(json_type(rt1.c1))))AND((~ (rt0.c0)))) INNER JOIN rt1 ON ((((t0.c1)>(rt1.c3)))>=(((t0.c1)||(rt1.c3)))));
SELECT ALL * FROM t0 INNER JOIN rt0 ON (((((t0.c1 IN ()))OR(json_type(rt1.c1))))AND((~ (rt0.c0)))) INNER JOIN rt1 ON ((((t0.c1)>(rt1.c3)))>=(((t0.c1)||(rt1.c3)))) WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (((((t0.c1 IN ()))OR(json_type(rt1.c1))))AND((~ (rt0.c0)))) INNER JOIN rt1 ON ((((t0.c1)>(rt1.c3)))>=(((t0.c1)||(rt1.c3)))));
SELECT ALL * FROM t0 INNER JOIN rt0 ON (((((t0.c1 IN ()))OR(json_type(rt1.c1))))AND((~ (rt0.c0)))) INNER JOIN rt1 ON ((((t0.c1)>(rt1.c3)))>=(((t0.c1)||(rt1.c3)))) WHERE ('');
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (CAST(((rt1.c0)IS NOT(t0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c0)IS NOT(t0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (CAST(((rt1.c0)IS NOT(t0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c0)IS NOT(t0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (CAST(((rt1.c0)IS NOT(t0.c0)) AS INTEGER));
SELECT * FROM t0, rt1 WHERE (((t0.c2)!=(((rt1.c1) NOTNULL)))) ORDER BY (((t0.c2)>=(t0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c2)!=(((rt1.c1) NOTNULL)))) IS TRUE)  as count FROM t0, rt1 ORDER BY (((t0.c2)>=(t0.c0)) IN ()) DESC);
SELECT * FROM t0, rt1 WHERE (((t0.c2)!=(((rt1.c1) NOTNULL)))) ORDER BY (((t0.c2)>=(t0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c2)!=(((rt1.c1) NOTNULL)))) IS TRUE)  as count FROM t0, rt1 ORDER BY (((t0.c2)>=(t0.c0)) IN ()) DESC);
SELECT * FROM t0, rt1 WHERE (((t0.c2)!=(((rt1.c1) NOTNULL)))) ORDER BY (((t0.c2)>=(t0.c0)) IN ()) DESC;
SELECT * FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (NULL);
SELECT ALL * FROM t0 NOT INDEXED, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0 NOT INDEXED, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0 NOT INDEXED, rt0 WHERE (NULL);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)LIKE(rt0.c0))) NOT BETWEEN ((rt0.c2 IN (rt0.c2))) AND (((rt0.c1)+(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)LIKE(rt0.c0))) NOT BETWEEN ((rt0.c2 IN (rt0.c2))) AND (((rt0.c1)+(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)LIKE(rt0.c0))) NOT BETWEEN ((rt0.c2 IN (rt0.c2))) AND (((rt0.c1)+(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)LIKE(rt0.c0))) NOT BETWEEN ((rt0.c2 IN (rt0.c2))) AND (((rt0.c1)+(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)LIKE(rt0.c0))) NOT BETWEEN ((rt0.c2 IN (rt0.c2))) AND (((rt0.c1)+(rt0.c2)))));
SELECT * FROM t0 WHERE (((((t0.c2)-(t0.c2)))<(((t0.c1) BETWEEN (NULL) AND (t0.c1))))) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)-(t0.c2)))<(((t0.c1) BETWEEN (NULL) AND (t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0);
SELECT * FROM t0 WHERE (((((t0.c2)-(t0.c2)))<(((t0.c1) BETWEEN (NULL) AND (t0.c1))))) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)-(t0.c2)))<(((t0.c1) BETWEEN (NULL) AND (t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0);
SELECT * FROM t0 WHERE (((((t0.c2)-(t0.c2)))<(((t0.c1) BETWEEN (NULL) AND (t0.c1))))) ORDER BY t0.c0;
SELECT ALL * FROM rt0, t0, rt1 WHERE ((((((rt0.c2, t0.c0, rt1.c3)) NOT BETWEEN ((rt1.c3, rt1.c4, rt0.c1)) AND ((rt0.c2, rt0.c2, rt1.c2)))) BETWEEN (rt1.c1 COLLATE NOCASE) AND (rt1.c0))) ORDER BY CASE rt0.c0 COLLATE NOCASE  WHEN (rt0.c0 IN ()) THEN CAST(-434004098 AS BLOB) END ASC  NULLS FIRST, ((rt1.c3)-(rt1.c3 COLLATE BINARY))  NULLS LAST, ((((((-2.139255354E9) BETWEEN (rt0.c0) AND (t0.c2)))OR(IFNULL(DISTINCT rt1.c4, rt1.c0))))AND(((t0.c2) NOT BETWEEN (rt1.c2) AND (rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2, t0.c0, rt1.c3)) NOT BETWEEN ((rt1.c3, rt1.c4, rt0.c1)) AND ((rt0.c2, rt0.c2, rt1.c2)))) BETWEEN (rt1.c1 COLLATE NOCASE) AND (rt1.c0))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY CASE rt0.c0 COLLATE NOCASE  WHEN (rt0.c0 IN ()) THEN CAST(-434004098 AS BLOB) END ASC  NULLS FIRST, ((rt1.c3)-(rt1.c3 COLLATE BINARY))  NULLS LAST, ((((((-2.139255354E9) BETWEEN (rt0.c0) AND (t0.c2)))OR(IFNULL(DISTINCT rt1.c4, rt1.c0))))AND(((t0.c2) NOT BETWEEN (rt1.c2) AND (rt0.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t0, rt1 WHERE ((((((rt0.c2, t0.c0, rt1.c3)) NOT BETWEEN ((rt1.c3, rt1.c4, rt0.c1)) AND ((rt0.c2, rt0.c2, rt1.c2)))) BETWEEN (rt1.c1 COLLATE NOCASE) AND (rt1.c0))) ORDER BY CASE rt0.c0 COLLATE NOCASE  WHEN (rt0.c0 IN ()) THEN CAST(-434004098 AS BLOB) END ASC  NULLS FIRST, ((rt1.c3)-(rt1.c3 COLLATE BINARY))  NULLS LAST, ((((((-2.139255354E9) BETWEEN (rt0.c0) AND (t0.c2)))OR(IFNULL(DISTINCT rt1.c4, rt1.c0))))AND(((t0.c2) NOT BETWEEN (rt1.c2) AND (rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2, t0.c0, rt1.c3)) NOT BETWEEN ((rt1.c3, rt1.c4, rt0.c1)) AND ((rt0.c2, rt0.c2, rt1.c2)))) BETWEEN (rt1.c1 COLLATE NOCASE) AND (rt1.c0))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY CASE rt0.c0 COLLATE NOCASE  WHEN (rt0.c0 IN ()) THEN CAST(-434004098 AS BLOB) END ASC  NULLS FIRST, ((rt1.c3)-(rt1.c3 COLLATE BINARY))  NULLS LAST, ((((((-2.139255354E9) BETWEEN (rt0.c0) AND (t0.c2)))OR(IFNULL(DISTINCT rt1.c4, rt1.c0))))AND(((t0.c2) NOT BETWEEN (rt1.c2) AND (rt0.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t0, rt1 WHERE ((((((rt0.c2, t0.c0, rt1.c3)) NOT BETWEEN ((rt1.c3, rt1.c4, rt0.c1)) AND ((rt0.c2, rt0.c2, rt1.c2)))) BETWEEN (rt1.c1 COLLATE NOCASE) AND (rt1.c0))) ORDER BY CASE rt0.c0 COLLATE NOCASE  WHEN (rt0.c0 IN ()) THEN CAST(-434004098 AS BLOB) END ASC  NULLS FIRST, ((rt1.c3)-(rt1.c3 COLLATE BINARY))  NULLS LAST, ((((((-2.139255354E9) BETWEEN (rt0.c0) AND (t0.c2)))OR(IFNULL(DISTINCT rt1.c4, rt1.c0))))AND(((t0.c2) NOT BETWEEN (rt1.c2) AND (rt0.c1)))) ASC  NULLS FIRST;
SELECT * FROM rt1 WHERE (((0.8300252010477827) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((0.8300252010477827) IS FALSE)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((0.8300252010477827) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((0.8300252010477827) IS FALSE)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((0.8300252010477827) IS FALSE));
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0  NULLS LAST);
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0  NULLS LAST);
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY rt0.c0  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((~ (NULL)) IN ()));
SELECT SUM(count) FROM (SELECT ((((~ (NULL)) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((~ (NULL)) IN ()));
SELECT SUM(count) FROM (SELECT ((((~ (NULL)) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((~ (NULL)) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (UNLIKELY(((((rt0.c0)OR(rt0.c0)))AND(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (UNLIKELY(((((rt0.c0)OR(rt0.c0)))AND(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (UNLIKELY(((((rt0.c0)OR(rt0.c0)))AND(rt0.c1))));
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (TYPEOF(DISTINCT CAST(rt1.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT CAST(rt1.c0 AS BLOB))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (TYPEOF(DISTINCT CAST(rt1.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT CAST(rt1.c0 AS BLOB))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (TYPEOF(DISTINCT CAST(rt1.c0 AS BLOB)));
SELECT * FROM rt1, t0, rt0 WHERE ('-1304736662') ORDER BY NULL DESC  NULLS LAST, rt1.c2 ASC, (((((- (t0.c2)))AND(rt1.c1)))AND((t0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL (('-1304736662') IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY NULL DESC  NULLS LAST, rt1.c2 ASC, (((((- (t0.c2)))AND(rt1.c1)))AND((t0.c2 IN ()))));
SELECT * FROM rt1, t0, rt0 WHERE ('-1304736662') ORDER BY NULL DESC  NULLS LAST, rt1.c2 ASC, (((((- (t0.c2)))AND(rt1.c1)))AND((t0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL (('-1304736662') IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY NULL DESC  NULLS LAST, rt1.c2 ASC, (((((- (t0.c2)))AND(rt1.c1)))AND((t0.c2 IN ()))));
SELECT ALL * FROM rt1 WHERE (((TRIM(DISTINCT rt1.c3)) ISNULL)) ORDER BY ((((rt1.c3 IN ())))>=((rt1.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT rt1.c3)) ISNULL)) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c3 IN ())))>=((rt1.c1))) ASC);
SELECT ALL * FROM rt1 WHERE (((TRIM(DISTINCT rt1.c3)) ISNULL)) ORDER BY ((((rt1.c3 IN ())))>=((rt1.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT rt1.c3)) ISNULL)) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c3 IN ())))>=((rt1.c1))) ASC);
SELECT ALL * FROM rt1 WHERE (((TRIM(DISTINCT rt1.c3)) ISNULL)) ORDER BY ((((rt1.c3 IN ())))>=((rt1.c1))) ASC;
SELECT COUNT(*) FROM t0, rt1 FULL OUTER JOIN rt0 ON CAST((- (rt0.c1)) AS BLOB) WHERE (((UNLIKELY(DISTINCT rt1.c0)) BETWEEN ('') AND (((rt0.c1)>(rt1.c4))))) ORDER BY NULL  NULLS LAST, (~ (PRINTF(rt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(DISTINCT rt1.c0)) BETWEEN ('') AND (((rt0.c1)>(rt1.c4))))) IS TRUE)  as count FROM t0, rt1 FULL OUTER JOIN rt0 ON CAST((- (rt0.c1)) AS BLOB) ORDER BY NULL  NULLS LAST, (~ (PRINTF(rt0.c0))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt1 FULL OUTER JOIN rt0 ON CAST((- (rt0.c1)) AS BLOB) WHERE (((UNLIKELY(DISTINCT rt1.c0)) BETWEEN ('') AND (((rt0.c1)>(rt1.c4))))) ORDER BY NULL  NULLS LAST, (~ (PRINTF(rt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(DISTINCT rt1.c0)) BETWEEN ('') AND (((rt0.c1)>(rt1.c4))))) IS TRUE)  as count FROM t0, rt1 FULL OUTER JOIN rt0 ON CAST((- (rt0.c1)) AS BLOB) ORDER BY NULL  NULLS LAST, (~ (PRINTF(rt0.c0))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt1 FULL OUTER JOIN rt0 ON CAST((- (rt0.c1)) AS BLOB) WHERE (((UNLIKELY(DISTINCT rt1.c0)) BETWEEN ('') AND (((rt0.c1)>(rt1.c4))))) ORDER BY NULL  NULLS LAST, (~ (PRINTF(rt0.c0))) ASC  NULLS LAST;
SELECT * FROM rt0 FULL OUTER JOIN t0 ON t0.c0 WHERE (((rt0.c0)*(rt0.c1)) COLLATE RTRIM) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c1) AND (rt0.c2)))GLOB(((t0.c0)*(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)*(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON t0.c0 ORDER BY ((((t0.c0) NOT BETWEEN (t0.c1) AND (rt0.c2)))GLOB(((t0.c0)*(rt0.c0))))  NULLS LAST);
SELECT * FROM rt0 FULL OUTER JOIN t0 ON t0.c0 WHERE (((rt0.c0)*(rt0.c1)) COLLATE RTRIM) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c1) AND (rt0.c2)))GLOB(((t0.c0)*(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)*(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON t0.c0 ORDER BY ((((t0.c0) NOT BETWEEN (t0.c1) AND (rt0.c2)))GLOB(((t0.c0)*(rt0.c0))))  NULLS LAST);
SELECT * FROM rt0 FULL OUTER JOIN t0 ON t0.c0 WHERE (((rt0.c0)*(rt0.c1)) COLLATE RTRIM) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c1) AND (rt0.c2)))GLOB(((t0.c0)*(rt0.c0))))  NULLS LAST;
SELECT ALL * FROM rt0, rt1 WHERE (((((rt1.c3) ISNULL))==(0.1596686250039746)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3) ISNULL))=(0.1596686250039746))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((((rt1.c3) ISNULL))==(0.1596686250039746)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3) ISNULL))=(0.1596686250039746))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((((rt1.c3) ISNULL))==(0.1596686250039746)));
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (CAST(rt0.c2 AS INTEGER) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (CAST(rt0.c2 AS INTEGER) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (CAST(rt0.c2 AS INTEGER) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE (json((('0.1596686250039746')>=(NULL)))) ORDER BY ((((rt1.c2)|(rt0.c0))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json((('0.1596686250039746')>=(NULL)))) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1 ORDER BY ((((rt1.c2)|(rt0.c0))) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE (json((('0.1596686250039746')>=(NULL)))) ORDER BY ((((rt1.c2)|(rt0.c0))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json((('0.1596686250039746')>=(NULL)))) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1 ORDER BY ((((rt1.c2)|(rt0.c0))) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE (json((('0.1596686250039746')>=(NULL)))) ORDER BY ((((rt1.c2)|(rt0.c0))) NOT NULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((CAST(NULL AS TEXT)) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 END) AND ((((rt0.c2))<((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS TEXT)) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 END) AND ((((rt0.c2))<((rt0.c0)))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((CAST(NULL AS TEXT)) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 END) AND ((((rt0.c2))<((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS TEXT)) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 END) AND ((((rt0.c2))<((rt0.c0)))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((CAST(NULL AS TEXT)) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 END) AND ((((rt0.c2))<((rt0.c0))))));
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (((t0.c0) NOT NULL)) ORDER BY LIKELY(json_quote(rt1.c2)), (((t0.c2) BETWEEN (t0.c0) AND (rt0.c0)) IN ((((t0.c0))=((rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0) NOT NULL)) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY LIKELY(json_quote(rt1.c2)), (((t0.c2) BETWEEN (t0.c0) AND (rt0.c0)) IN ((((t0.c0))=((rt1.c1))))));
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (((t0.c0) NOT NULL)) ORDER BY LIKELY(json_quote(rt1.c2)), (((t0.c2) BETWEEN (t0.c0) AND (rt0.c0)) IN ((((t0.c0))=((rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0) NOT NULL)) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY LIKELY(json_quote(rt1.c2)), (((t0.c2) BETWEEN (t0.c0) AND (rt0.c0)) IN ((((t0.c0))=((rt1.c1))))));
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (((t0.c0) NOT NULL)) ORDER BY LIKELY(json_quote(rt1.c2)), (((t0.c2) BETWEEN (t0.c0) AND (rt0.c0)) IN ((((t0.c0))=((rt1.c1)))));
SELECT * FROM t0, rt0, rt1 WHERE (((CASE WHEN rt1.c2 THEN rt0.c1 WHEN t0.c1 THEN rt1.c4 WHEN t0.c0 THEN rt0.c0 END)*(((rt0.c0) ISNULL)))) ORDER BY (+ (((t0.c0) BETWEEN (rt1.c0) AND (rt1.c3))))  NULLS FIRST, -1.889206215E9 DESC  NULLS LAST, ((((((((CAST(rt0.c1 AS NUMERIC))AND(CAST(rt1.c4 AS BLOB))))AND(rt1.c2)))OR(((((t0.c0)AND(t0.c2)))OR(t0.c2)))))OR(((((((((rt1.c4)AND(rt1.c2)))OR(rt1.c3)))AND(t0.c0)))OR(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c2 THEN rt0.c1 WHEN t0.c1 THEN rt1.c4 WHEN t0.c0 THEN rt0.c0 END)*(((rt0.c0) ISNULL)))) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY (+ (((t0.c0) BETWEEN (rt1.c0) AND (rt1.c3))))  NULLS FIRST, -1.889206215E9 DESC  NULLS LAST, ((((((((CAST(rt0.c1 AS NUMERIC))AND(CAST(rt1.c4 AS BLOB))))AND(rt1.c2)))OR(((((t0.c0)AND(t0.c2)))OR(t0.c2)))))OR(((((((((rt1.c4)AND(rt1.c2)))OR(rt1.c3)))AND(t0.c0)))OR(rt0.c2))))  NULLS FIRST);
SELECT * FROM t0, rt0, rt1 WHERE (((CASE WHEN rt1.c2 THEN rt0.c1 WHEN t0.c1 THEN rt1.c4 WHEN t0.c0 THEN rt0.c0 END)*(((rt0.c0) ISNULL)))) ORDER BY (+ (((t0.c0) BETWEEN (rt1.c0) AND (rt1.c3))))  NULLS FIRST, -1.889206215E9 DESC  NULLS LAST, ((((((((CAST(rt0.c1 AS NUMERIC))AND(CAST(rt1.c4 AS BLOB))))AND(rt1.c2)))OR(((((t0.c0)AND(t0.c2)))OR(t0.c2)))))OR(((((((((rt1.c4)AND(rt1.c2)))OR(rt1.c3)))AND(t0.c0)))OR(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c2 THEN rt0.c1 WHEN t0.c1 THEN rt1.c4 WHEN t0.c0 THEN rt0.c0 END)*(((rt0.c0) ISNULL)))) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY (+ (((t0.c0) BETWEEN (rt1.c0) AND (rt1.c3))))  NULLS FIRST, -1.889206215E9 DESC  NULLS LAST, ((((((((CAST(rt0.c1 AS NUMERIC))AND(CAST(rt1.c4 AS BLOB))))AND(rt1.c2)))OR(((((t0.c0)AND(t0.c2)))OR(t0.c2)))))OR(((((((((rt1.c4)AND(rt1.c2)))OR(rt1.c3)))AND(t0.c0)))OR(rt0.c2))))  NULLS FIRST);
SELECT * FROM t0, rt0, rt1 WHERE (((CASE WHEN rt1.c2 THEN rt0.c1 WHEN t0.c1 THEN rt1.c4 WHEN t0.c0 THEN rt0.c0 END)*(((rt0.c0) ISNULL)))) ORDER BY (+ (((t0.c0) BETWEEN (rt1.c0) AND (rt1.c3))))  NULLS FIRST, -1.889206215E9 DESC  NULLS LAST, ((((((((CAST(rt0.c1 AS NUMERIC))AND(CAST(rt1.c4 AS BLOB))))AND(rt1.c2)))OR(((((t0.c0)AND(t0.c2)))OR(t0.c2)))))OR(((((((((rt1.c4)AND(rt1.c2)))OR(rt1.c3)))AND(t0.c0)))OR(rt0.c2))))  NULLS FIRST;
SELECT ALL * FROM rt0, rt1, t0 WHERE ((NOT (CASE WHEN rt1.c0 THEN rt1.c2 END))) ORDER BY ((((((((((((rt1.c1)OR(t0.c1)))AND(rt1.c4)))AND(rt1.c3)))AND(rt1.c4)))AND((((rt1.c1))>=((t0.c1))))))OR(CAST(rt1.c3 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN rt1.c0 THEN rt1.c2 END))) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY ((((((((((((rt1.c1)OR(t0.c1)))AND(rt1.c4)))AND(rt1.c3)))AND(rt1.c4)))AND((((rt1.c1))>=((t0.c1))))))OR(CAST(rt1.c3 AS INTEGER))));
SELECT ALL * FROM rt0, rt1, t0 WHERE ((NOT (CASE WHEN rt1.c0 THEN rt1.c2 END))) ORDER BY ((((((((((((rt1.c1)OR(t0.c1)))AND(rt1.c4)))AND(rt1.c3)))AND(rt1.c4)))AND((((rt1.c1))>=((t0.c1))))))OR(CAST(rt1.c3 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN rt1.c0 THEN rt1.c2 END))) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY ((((((((((((rt1.c1)OR(t0.c1)))AND(rt1.c4)))AND(rt1.c3)))AND(rt1.c4)))AND((((rt1.c1))>=((t0.c1))))))OR(CAST(rt1.c3 AS INTEGER))));
SELECT ALL * FROM rt0, rt1, t0 WHERE ((NOT (CASE WHEN rt1.c0 THEN rt1.c2 END))) ORDER BY ((((((((((((rt1.c1)OR(t0.c1)))AND(rt1.c4)))AND(rt1.c3)))AND(rt1.c4)))AND((((rt1.c1))>=((t0.c1))))))OR(CAST(rt1.c3 AS INTEGER)));
SELECT COUNT(*) FROM rt0, rt1 WHERE (CASE WHEN (((NULL, rt1.c1, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c0, rt1.c0)) AND ((rt1.c1, rt0.c1, rt1.c3))) THEN CASE rt0.c0  WHEN x'' THEN rt1.c3 ELSE rt0.c2 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((NULL, rt1.c1, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c0, rt1.c0)) AND ((rt1.c1, rt0.c1, rt1.c3))) THEN CASE rt0.c0  WHEN x'' THEN rt1.c3 ELSE rt0.c2 END END) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CASE WHEN (((NULL, rt1.c1, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c0, rt1.c0)) AND ((rt1.c1, rt0.c1, rt1.c3))) THEN CASE rt0.c0  WHEN x'' THEN rt1.c3 ELSE rt0.c2 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((NULL, rt1.c1, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c0, rt1.c0)) AND ((rt1.c1, rt0.c1, rt1.c3))) THEN CASE rt0.c0  WHEN x'' THEN rt1.c3 ELSE rt0.c2 END END) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CASE WHEN (((NULL, rt1.c1, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c0, rt1.c0)) AND ((rt1.c1, rt0.c1, rt1.c3))) THEN CASE rt0.c0  WHEN x'' THEN rt1.c3 ELSE rt0.c2 END END);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((+ (rt1.c0)))>=(rtreenode(rt0.c0, rt0.c0)))) ORDER BY (+ (((rt1.c4) NOT NULL))) ASC, ((CAST(rt0.c0 AS INTEGER)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c0)))>=(rtreenode(rt0.c0, rt0.c0)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (+ (((rt1.c4) NOT NULL))) ASC, ((CAST(rt0.c0 AS INTEGER)) NOT NULL)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((+ (rt1.c0)))>=(rtreenode(rt0.c0, rt0.c0)))) ORDER BY (+ (((rt1.c4) NOT NULL))) ASC, ((CAST(rt0.c0 AS INTEGER)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c0)))>=(rtreenode(rt0.c0, rt0.c0)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (+ (((rt1.c4) NOT NULL))) ASC, ((CAST(rt0.c0 AS INTEGER)) NOT NULL)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((+ (rt1.c0)))>=(rtreenode(rt0.c0, rt0.c0)))) ORDER BY (+ (((rt1.c4) NOT NULL))) ASC, ((CAST(rt0.c0 AS INTEGER)) NOT NULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((((t0.c2, t0.c2, rt1.c1, rt1.c2, t0.c0)) NOT BETWEEN ((t0.c1, ((rt1.c2)IS NOT(rt1.c1)), rt1.c0 COLLATE BINARY, rt1.c1, rt1.c4 COLLATE RTRIM)) AND (((t0.c1 IN ()), ((rt1.c4)%(rt1.c3)), (((('-260818904')AND(rt1.c0)))OR(rt1.c4)), t0.c1 COLLATE NOCASE, DATE(t0.c0, t0.c0, t0.c1, t0.c0, rt1.c0, rt1.c1, rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((t0.c2, t0.c2, rt1.c1, rt1.c2, t0.c0)) NOT BETWEEN ((t0.c1, ((rt1.c2)IS NOT(rt1.c1)), rt1.c0 COLLATE BINARY, rt1.c1, rt1.c4 COLLATE RTRIM)) AND (((t0.c1 IN ()), ((rt1.c4)%(rt1.c3)), (((('-260818904')AND(rt1.c0)))OR(rt1.c4)), t0.c1 COLLATE NOCASE, DATE(t0.c0, t0.c0, t0.c1, t0.c0, rt1.c0, rt1.c1, rt1.c2))))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((((t0.c2, t0.c2, rt1.c1, rt1.c2, t0.c0)) NOT BETWEEN ((t0.c1, ((rt1.c2)IS NOT(rt1.c1)), rt1.c0 COLLATE BINARY, rt1.c1, rt1.c4 COLLATE RTRIM)) AND (((t0.c1 IN ()), ((rt1.c4)%(rt1.c3)), (((('-260818904')AND(rt1.c0)))OR(rt1.c4)), t0.c1 COLLATE NOCASE, DATE(t0.c0, t0.c0, t0.c1, t0.c0, rt1.c0, rt1.c1, rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((t0.c2, t0.c2, rt1.c1, rt1.c2, t0.c0)) NOT BETWEEN ((t0.c1, ((rt1.c2)IS NOT(rt1.c1)), rt1.c0 COLLATE BINARY, rt1.c1, rt1.c4 COLLATE RTRIM)) AND (((t0.c1 IN ()), ((rt1.c4)%(rt1.c3)), (((('-260818904')AND(rt1.c0)))OR(rt1.c4)), t0.c1 COLLATE NOCASE, DATE(t0.c0, t0.c0, t0.c1, t0.c0, rt1.c0, rt1.c1, rt1.c2))))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((((t0.c2, t0.c2, rt1.c1, rt1.c2, t0.c0)) NOT BETWEEN ((t0.c1, ((rt1.c2)IS NOT(rt1.c1)), rt1.c0 COLLATE BINARY, rt1.c1, rt1.c4 COLLATE RTRIM)) AND (((t0.c1 IN ()), ((rt1.c4)%(rt1.c3)), (((('-260818904')AND(rt1.c0)))OR(rt1.c4)), t0.c1 COLLATE NOCASE, DATE(t0.c0, t0.c0, t0.c1, t0.c0, rt1.c0, rt1.c1, rt1.c2)))));
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (((CASE WHEN rt1.c1 THEN rt0.c1 WHEN rt1.c3 THEN t0.c0 WHEN rt1.c3 THEN rt0.c1 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN rt1.c0 END)/((+ (t0.c2))))) ORDER BY (((((t0.c1))==((rt1.c4)))) NOT BETWEEN (CAST(NULL AS NUMERIC)) AND (LOWER(rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c1 THEN rt0.c1 WHEN rt1.c3 THEN t0.c0 WHEN rt1.c3 THEN rt0.c1 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN rt1.c0 END)/((+ (t0.c2))))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY (((((t0.c1))=((rt1.c4)))) NOT BETWEEN (CAST(NULL AS NUMERIC)) AND (LOWER(rt1.c0))));
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (((CASE WHEN rt1.c1 THEN rt0.c1 WHEN rt1.c3 THEN t0.c0 WHEN rt1.c3 THEN rt0.c1 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN rt1.c0 END)/((+ (t0.c2))))) ORDER BY (((((t0.c1))==((rt1.c4)))) NOT BETWEEN (CAST(NULL AS NUMERIC)) AND (LOWER(rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c1 THEN rt0.c1 WHEN rt1.c3 THEN t0.c0 WHEN rt1.c3 THEN rt0.c1 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN rt1.c0 END)/((+ (t0.c2))))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY (((((t0.c1))=((rt1.c4)))) NOT BETWEEN (CAST(NULL AS NUMERIC)) AND (LOWER(rt1.c0))));
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (((CASE WHEN rt1.c1 THEN rt0.c1 WHEN rt1.c3 THEN t0.c0 WHEN rt1.c3 THEN rt0.c1 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN rt1.c0 END)/((+ (t0.c2))))) ORDER BY (((((t0.c1))==((rt1.c4)))) NOT BETWEEN (CAST(NULL AS NUMERIC)) AND (LOWER(rt1.c0)));
SELECT * FROM rt0 WHERE ((~ (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((~ (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((~ (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE ((((rt1.c2 COLLATE BINARY))=((((t0.c1)IS(t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2 COLLATE BINARY))==((((t0.c1)IS(t0.c0)))))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE ((((rt1.c2 COLLATE BINARY))=((((t0.c1)IS(t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2 COLLATE BINARY))==((((t0.c1)IS(t0.c0)))))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE ((((rt1.c2 COLLATE BINARY))=((((t0.c1)IS(t0.c0))))));
SELECT * FROM t0, rt0 WHERE (NULL) ORDER BY 'j9ZY{' DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, rt0 ORDER BY 'j9ZY{' DESC);
SELECT * FROM t0, rt0 WHERE (NULL) ORDER BY 'j9ZY{' DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, rt0 ORDER BY 'j9ZY{' DESC);
SELECT * FROM t0, rt0 WHERE (NULL) ORDER BY 'j9ZY{' DESC;
SELECT * FROM rt0 WHERE (((((0xffffffffdf3d0153)%(rt0.c2))) BETWEEN ((((rt0.c1, rt0.c0, rt0.c2))>((rt0.c1, rt0.c2, rt0.c0)))) AND (rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((0xffffffffdf3d0153)%(rt0.c2))) BETWEEN ((((rt0.c1, rt0.c0, rt0.c2))>((rt0.c1, rt0.c2, rt0.c0)))) AND (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((0xffffffffdf3d0153)%(rt0.c2))) BETWEEN ((((rt0.c1, rt0.c0, rt0.c2))>((rt0.c1, rt0.c2, rt0.c0)))) AND (rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((0xffffffffdf3d0153)%(rt0.c2))) BETWEEN ((((rt0.c1, rt0.c0, rt0.c2))>((rt0.c1, rt0.c2, rt0.c0)))) AND (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((0xffffffffdf3d0153)%(rt0.c2))) BETWEEN ((((rt0.c1, rt0.c0, rt0.c2))>((rt0.c1, rt0.c2, rt0.c0)))) AND (rt0.c0 COLLATE NOCASE)));
SELECT * FROM rt1 WHERE (rt1.c4) ORDER BY ((((rt1.c4)-(NULL)))<(((0.6083392945788857) IS TRUE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c4)-(NULL)))<(((0.6083392945788857) IS TRUE))) DESC  NULLS FIRST);
SELECT * FROM rt1 WHERE (rt1.c4) ORDER BY ((((rt1.c4)-(NULL)))<(((0.6083392945788857) IS TRUE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c4)-(NULL)))<(((0.6083392945788857) IS TRUE))) DESC  NULLS FIRST);
SELECT * FROM rt1 WHERE (rt1.c4) ORDER BY ((((rt1.c4)-(NULL)))<(((0.6083392945788857) IS TRUE))) DESC  NULLS FIRST;
SELECT * FROM rt0, rt1 WHERE (LTRIM(LOWER(rt1.c2), x''));
SELECT SUM(count) FROM (SELECT ((LTRIM(LOWER(rt1.c2), x'')) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (LTRIM(LOWER(rt1.c2), x''));
SELECT SUM(count) FROM (SELECT ((LTRIM(LOWER(rt1.c2), x'')) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (LTRIM(LOWER(rt1.c2), x''));
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN t0 WHERE (((((((((t0.c2 COLLATE BINARY)AND(CASE WHEN t0.c1 THEN rt0.c0 WHEN t0.c0 THEN rt0.c0 WHEN t0.c0 THEN 1.464417741E9 ELSE t0.c2 END)))OR(((rt0.c1) BETWEEN (rt0.c1) AND (t0.c2)))))OR(((rt0.c1)GLOB(rt0.c1)))))AND((~ (rt0.c2))))) ORDER BY (NULL IN ()) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((((((((t0.c2 COLLATE BINARY)AND(CASE WHEN t0.c1 THEN rt0.c0 WHEN t0.c0 THEN rt0.c0 WHEN t0.c0 THEN 1.464417741E9 ELSE t0.c2 END)))OR(((rt0.c1) BETWEEN (rt0.c1) AND (t0.c2)))))OR(((rt0.c1)GLOB(rt0.c1)))))AND((~ (rt0.c2))))) IS TRUE)  as count FROM rt0 NATURAL JOIN t0 ORDER BY (NULL IN ()) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN t0 WHERE (((((((((t0.c2 COLLATE BINARY)AND(CASE WHEN t0.c1 THEN rt0.c0 WHEN t0.c0 THEN rt0.c0 WHEN t0.c0 THEN 1.464417741E9 ELSE t0.c2 END)))OR(((rt0.c1) BETWEEN (rt0.c1) AND (t0.c2)))))OR(((rt0.c1)GLOB(rt0.c1)))))AND((~ (rt0.c2))))) ORDER BY (NULL IN ()) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((((((((t0.c2 COLLATE BINARY)AND(CASE WHEN t0.c1 THEN rt0.c0 WHEN t0.c0 THEN rt0.c0 WHEN t0.c0 THEN 1.464417741E9 ELSE t0.c2 END)))OR(((rt0.c1) BETWEEN (rt0.c1) AND (t0.c2)))))OR(((rt0.c1)GLOB(rt0.c1)))))AND((~ (rt0.c2))))) IS TRUE)  as count FROM rt0 NATURAL JOIN t0 ORDER BY (NULL IN ()) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN t0 WHERE (((((((((t0.c2 COLLATE BINARY)AND(CASE WHEN t0.c1 THEN rt0.c0 WHEN t0.c0 THEN rt0.c0 WHEN t0.c0 THEN 1.464417741E9 ELSE t0.c2 END)))OR(((rt0.c1) BETWEEN (rt0.c1) AND (t0.c2)))))OR(((rt0.c1)GLOB(rt0.c1)))))AND((~ (rt0.c2))))) ORDER BY (NULL IN ()) COLLATE BINARY DESC;
SELECT COUNT(*) FROM rt0 WHERE ((+ ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((+ ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((+ ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((+ ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((+ ((rt0.c1 IN ()))));
SELECT * FROM t0, rt0, rt1 WHERE ((- (0.2976042702600953))) ORDER BY (((rt1.c3, 'mTz.몟N(%0', rt1.c3)) BETWEEN ((rt1.c1 COLLATE RTRIM, (((rt1.c2, t0.c1, rt1.c1))<((rt1.c1, x'54a8', t0.c2))), ((x'') ISNULL))) AND ((((rt1.c2) NOTNULL), ((NULL) NOT BETWEEN (rt0.c2) AND (rt1.c1)), (NOT ('>6\n3rs'))))) ASC  NULLS LAST, t0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (0.2976042702600953))) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY (((rt1.c3, 'mTz.몟N(%0', rt1.c3)) BETWEEN ((rt1.c1 COLLATE RTRIM, (((rt1.c2, t0.c1, rt1.c1))<((rt1.c1, x'54a8', t0.c2))), ((x'') ISNULL))) AND ((((rt1.c2) NOTNULL), ((NULL) NOT BETWEEN (rt0.c2) AND (rt1.c1)), (NOT ('>6\n3rs'))))) ASC  NULLS LAST, t0.c1 DESC  NULLS LAST);
SELECT * FROM t0, rt0, rt1 WHERE ((- (0.2976042702600953))) ORDER BY (((rt1.c3, 'mTz.몟N(%0', rt1.c3)) BETWEEN ((rt1.c1 COLLATE RTRIM, (((rt1.c2, t0.c1, rt1.c1))<((rt1.c1, x'54a8', t0.c2))), ((x'') ISNULL))) AND ((((rt1.c2) NOTNULL), ((NULL) NOT BETWEEN (rt0.c2) AND (rt1.c1)), (NOT ('>6\n3rs'))))) ASC  NULLS LAST, t0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (0.2976042702600953))) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY (((rt1.c3, 'mTz.몟N(%0', rt1.c3)) BETWEEN ((rt1.c1 COLLATE RTRIM, (((rt1.c2, t0.c1, rt1.c1))<((rt1.c1, x'54a8', t0.c2))), ((x'') ISNULL))) AND ((((rt1.c2) NOTNULL), ((NULL) NOT BETWEEN (rt0.c2) AND (rt1.c1)), (NOT ('>6\n3rs'))))) ASC  NULLS LAST, t0.c1 DESC  NULLS LAST);
SELECT * FROM t0, rt0, rt1 WHERE ((- (0.2976042702600953))) ORDER BY (((rt1.c3, 'mTz.몟N(%0', rt1.c3)) BETWEEN ((rt1.c1 COLLATE RTRIM, (((rt1.c2, t0.c1, rt1.c1))<((rt1.c1, x'54a8', t0.c2))), ((x'') ISNULL))) AND ((((rt1.c2) NOTNULL), ((NULL) NOT BETWEEN (rt0.c2) AND (rt1.c1)), (NOT ('>6\n3rs'))))) ASC  NULLS LAST, t0.c1 DESC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2)) NOT BETWEEN ((((((t0.c0)OR(t0.c1)))AND(t0.c2)))) AND ((((((((((t0.c1)OR(t0.c1)))OR(t0.c1)))OR(x'9109')))AND(t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((t0.c2)) NOT BETWEEN ((((((t0.c0)OR(t0.c1)))AND(t0.c2)))) AND ((((((((((t0.c1)OR(t0.c1)))OR(t0.c1)))OR(x'9109')))AND(t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2)) NOT BETWEEN ((((((t0.c0)OR(t0.c1)))AND(t0.c2)))) AND ((((((((((t0.c1)OR(t0.c1)))OR(t0.c1)))OR(x'9109')))AND(t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((t0.c2)) NOT BETWEEN ((((((t0.c0)OR(t0.c1)))AND(t0.c2)))) AND ((((((((((t0.c1)OR(t0.c1)))OR(t0.c1)))OR(x'9109')))AND(t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2)) NOT BETWEEN ((((((t0.c0)OR(t0.c1)))AND(t0.c2)))) AND ((((((((((t0.c1)OR(t0.c1)))OR(t0.c1)))OR(x'9109')))AND(t0.c0))))));
SELECT ALL * FROM rt1, t0, rt0 WHERE (((((((((((rt1.c4)GLOB(rt0.c0)))OR('^濖y!O*8''l')))AND((rt0.c0 IN (NULL)))))AND(((((x'')OR(x'')))OR(rt0.c2)))))AND(t0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c4)GLOB(rt0.c0)))OR('^濖y!O*8''l')))AND((rt0.c0 IN (NULL)))))AND(((((x'')OR(x'')))OR(rt0.c2)))))AND(t0.c2))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL * FROM rt1, t0, rt0 WHERE (((((((((((rt1.c4)GLOB(rt0.c0)))OR('^濖y!O*8''l')))AND((rt0.c0 IN (NULL)))))AND(((((x'')OR(x'')))OR(rt0.c2)))))AND(t0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c4)GLOB(rt0.c0)))OR('^濖y!O*8''l')))AND((rt0.c0 IN (NULL)))))AND(((((x'')OR(x'')))OR(rt0.c2)))))AND(t0.c2))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL * FROM rt1, t0, rt0 WHERE (((((((((((rt1.c4)GLOB(rt0.c0)))OR('^濖y!O*8''l')))AND((rt0.c0 IN (NULL)))))AND(((((x'')OR(x'')))OR(rt0.c2)))))AND(t0.c2)));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((((((CASE rt0.c1  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c3 THEN rt0.c1 ELSE rt0.c1 END)AND(CASE rt1.c4  WHEN rt1.c3 THEN rt1.c3 ELSE rt0.c1 END)))AND(ABS(rt1.c2))))AND(((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c3)))))AND(rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((((((((CASE rt0.c1  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c3 THEN rt0.c1 ELSE rt0.c1 END)AND(CASE rt1.c4  WHEN rt1.c3 THEN rt1.c3 ELSE rt0.c1 END)))AND(ABS(rt1.c2))))AND(((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c3)))))AND(rt1.c1))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((((((CASE rt0.c1  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c3 THEN rt0.c1 ELSE rt0.c1 END)AND(CASE rt1.c4  WHEN rt1.c3 THEN rt1.c3 ELSE rt0.c1 END)))AND(ABS(rt1.c2))))AND(((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c3)))))AND(rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((((((((CASE rt0.c1  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c3 THEN rt0.c1 ELSE rt0.c1 END)AND(CASE rt1.c4  WHEN rt1.c3 THEN rt1.c3 ELSE rt0.c1 END)))AND(ABS(rt1.c2))))AND(((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c3)))))AND(rt1.c1))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((((((CASE rt0.c1  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c3 THEN rt0.c1 ELSE rt0.c1 END)AND(CASE rt1.c4  WHEN rt1.c3 THEN rt1.c3 ELSE rt0.c1 END)))AND(ABS(rt1.c2))))AND(((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c3)))))AND(rt1.c1)));
SELECT ALL * FROM rt0, rt1 WHERE ((~ (((((((((rt1.c1)OR(rt1.c4)))OR(rt1.c1)))AND(rt1.c2)))AND(rt1.c2))))) ORDER BY RTRIM(((rt1.c2)IS NOT(rt1.c2))) DESC, ((((rt0.c0) NOTNULL))>>((+ (rt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((((((rt1.c1)OR(rt1.c4)))OR(rt1.c1)))AND(rt1.c2)))AND(rt1.c2))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY RTRIM(((rt1.c2)IS NOT(rt1.c2))) DESC, ((((rt0.c0) NOTNULL))>>((+ (rt1.c2))))  NULLS LAST);
SELECT ALL * FROM rt0, rt1 WHERE ((~ (((((((((rt1.c1)OR(rt1.c4)))OR(rt1.c1)))AND(rt1.c2)))AND(rt1.c2))))) ORDER BY RTRIM(((rt1.c2)IS NOT(rt1.c2))) DESC, ((((rt0.c0) NOTNULL))>>((+ (rt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((((((rt1.c1)OR(rt1.c4)))OR(rt1.c1)))AND(rt1.c2)))AND(rt1.c2))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY RTRIM(((rt1.c2)IS NOT(rt1.c2))) DESC, ((((rt0.c0) NOTNULL))>>((+ (rt1.c2))))  NULLS LAST);
SELECT ALL * FROM rt0, rt1 WHERE ((~ (((((((((rt1.c1)OR(rt1.c4)))OR(rt1.c1)))AND(rt1.c2)))AND(rt1.c2))))) ORDER BY RTRIM(((rt1.c2)IS NOT(rt1.c2))) DESC, ((((rt0.c0) NOTNULL))>>((+ (rt1.c2))))  NULLS LAST;
SELECT COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE (CAST(((rt1.c2) BETWEEN (rt0.c0) AND (rt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2) BETWEEN (rt0.c0) AND (rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE (CAST(((rt1.c2) BETWEEN (rt0.c0) AND (rt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2) BETWEEN (rt0.c0) AND (rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE (CAST(((rt1.c2) BETWEEN (rt0.c0) AND (rt0.c1)) AS INTEGER));
SELECT COUNT(*) FROM rt0, t0 FULL OUTER JOIN rt1 ON rt0.c0 WHERE (rt1.c4) ORDER BY HEX(((rt0.c2) BETWEEN (rt1.c3) AND (t0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN rt1 ON rt0.c0 ORDER BY HEX(((rt0.c2) BETWEEN (rt1.c3) AND (t0.c1))) DESC);
SELECT COUNT(*) FROM rt0, t0 FULL OUTER JOIN rt1 ON rt0.c0 WHERE (rt1.c4) ORDER BY HEX(((rt0.c2) BETWEEN (rt1.c3) AND (t0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN rt1 ON rt0.c0 ORDER BY HEX(((rt0.c2) BETWEEN (rt1.c3) AND (t0.c1))) DESC);
SELECT COUNT(*) FROM rt0, t0 FULL OUTER JOIN rt1 ON rt0.c0 WHERE (rt1.c4) ORDER BY HEX(((rt0.c2) BETWEEN (rt1.c3) AND (t0.c1))) DESC;
SELECT COUNT(*) FROM t0 WHERE (0xffffffffe65f3443 COLLATE BINARY) ORDER BY ((0xffffffffea450714 COLLATE NOCASE) NOT BETWEEN (t0.c1) AND (((t0.c0) NOTNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0xffffffffe65f3443 COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY ((0xffffffffea450714 COLLATE NOCASE) NOT BETWEEN (t0.c1) AND (((t0.c0) NOTNULL))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (0xffffffffe65f3443 COLLATE BINARY) ORDER BY ((0xffffffffea450714 COLLATE NOCASE) NOT BETWEEN (t0.c1) AND (((t0.c0) NOTNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0xffffffffe65f3443 COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY ((0xffffffffea450714 COLLATE NOCASE) NOT BETWEEN (t0.c1) AND (((t0.c0) NOTNULL))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (0xffffffffe65f3443 COLLATE BINARY) ORDER BY ((0xffffffffea450714 COLLATE NOCASE) NOT BETWEEN (t0.c1) AND (((t0.c0) NOTNULL))) ASC  NULLS LAST;
SELECT ALL * FROM t0, rt0 WHERE ((~ (rt0.c1 COLLATE NOCASE))) ORDER BY (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((t0.c2))))IS((+ ('904278988'))))  NULLS FIRST, x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((t0.c2))))IS((+ ('904278988'))))  NULLS FIRST, x'' DESC  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE ((~ (rt0.c1 COLLATE NOCASE))) ORDER BY (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((t0.c2))))IS((+ ('904278988'))))  NULLS FIRST, x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((t0.c2))))IS((+ ('904278988'))))  NULLS FIRST, x'' DESC  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE ((~ (rt0.c1 COLLATE NOCASE))) ORDER BY (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((t0.c2))))IS((+ ('904278988'))))  NULLS FIRST, x'' DESC  NULLS LAST;
SELECT * FROM t0, rt1, rt0 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN t0.c2 ELSE t0.c0 END)*(x'9eeb' COLLATE NOCASE))) ORDER BY ((((NULL))=((rt0.c1))) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c0 THEN t0.c2 ELSE t0.c0 END)*(x'9eeb' COLLATE NOCASE))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY ((((NULL))==((rt0.c1))) IN ())  NULLS LAST);
SELECT * FROM t0, rt1, rt0 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN t0.c2 ELSE t0.c0 END)*(x'9eeb' COLLATE NOCASE))) ORDER BY ((((NULL))=((rt0.c1))) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c0 THEN t0.c2 ELSE t0.c0 END)*(x'9eeb' COLLATE NOCASE))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY ((((NULL))==((rt0.c1))) IN ())  NULLS LAST);
SELECT * FROM t0, rt1, rt0 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN t0.c2 ELSE t0.c0 END)*(x'9eeb' COLLATE NOCASE))) ORDER BY ((((NULL))=((rt0.c1))) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c0) ISNULL) THEN ((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)) END) ORDER BY TRIM((((rt0.c2))!=((rt0.c1))), (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) ISNULL) THEN ((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY TRIM((((rt0.c2))<>((rt0.c1))), (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c0) ISNULL) THEN ((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)) END) ORDER BY TRIM((((rt0.c2))!=((rt0.c1))), (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) ISNULL) THEN ((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY TRIM((((rt0.c2))<>((rt0.c1))), (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c0) ISNULL) THEN ((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)) END) ORDER BY TRIM((((rt0.c2))!=((rt0.c1))), (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) NOT NULL))&('0.6212655273538842')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT NULL))&('0.6212655273538842'))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) NOT NULL))&('0.6212655273538842')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT NULL))&('0.6212655273538842'))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) NOT NULL))&('0.6212655273538842')));
SELECT * FROM t0 FULL OUTER JOIN rt0 ON t0.c2 WHERE (t0.c0) ORDER BY x'9272' ASC  NULLS FIRST, (((rt0.c0))>((rt0.c2))) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON t0.c2 ORDER BY x'9272' ASC  NULLS FIRST, (((rt0.c0))>((rt0.c2))) COLLATE RTRIM DESC);
SELECT * FROM t0 FULL OUTER JOIN rt0 ON t0.c2 WHERE (t0.c0) ORDER BY x'9272' ASC  NULLS FIRST, (((rt0.c0))>((rt0.c2))) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON t0.c2 ORDER BY x'9272' ASC  NULLS FIRST, (((rt0.c0))>((rt0.c2))) COLLATE RTRIM DESC);
SELECT * FROM t0 FULL OUTER JOIN rt0 ON t0.c2 WHERE (t0.c0) ORDER BY x'9272' ASC  NULLS FIRST, (((rt0.c0))>((rt0.c2))) COLLATE RTRIM DESC;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c0) IS TRUE)) BETWEEN (CAST(rt1.c2 AS REAL)) AND (rt1.c1))) ORDER BY rt1.c0 DESC  NULLS LAST, (CAST(rt1.c0 AS TEXT) IN ()) DESC, ((((rt1.c1) BETWEEN (rt0.c2) AND (rt1.c0))) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) IS TRUE)) BETWEEN (CAST(rt1.c2 AS REAL)) AND (rt1.c1))) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt1.c0 DESC  NULLS LAST, (CAST(rt1.c0 AS TEXT) IN ()) DESC, ((((rt1.c1) BETWEEN (rt0.c2) AND (rt1.c0))) IS FALSE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c0) IS TRUE)) BETWEEN (CAST(rt1.c2 AS REAL)) AND (rt1.c1))) ORDER BY rt1.c0 DESC  NULLS LAST, (CAST(rt1.c0 AS TEXT) IN ()) DESC, ((((rt1.c1) BETWEEN (rt0.c2) AND (rt1.c0))) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) IS TRUE)) BETWEEN (CAST(rt1.c2 AS REAL)) AND (rt1.c1))) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt1.c0 DESC  NULLS LAST, (CAST(rt1.c0 AS TEXT) IN ()) DESC, ((((rt1.c1) BETWEEN (rt0.c2) AND (rt1.c0))) IS FALSE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c0) IS TRUE)) BETWEEN (CAST(rt1.c2 AS REAL)) AND (rt1.c1))) ORDER BY rt1.c0 DESC  NULLS LAST, (CAST(rt1.c0 AS TEXT) IN ()) DESC, ((((rt1.c1) BETWEEN (rt0.c2) AND (rt1.c0))) IS FALSE) DESC  NULLS FIRST;
SELECT * FROM rt1, rt0 WHERE ('765106262');
SELECT SUM(count) FROM (SELECT (('765106262') IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE ('765106262');
SELECT SUM(count) FROM (SELECT (('765106262') IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE ('765106262');
SELECT COUNT(*) FROM rt1 WHERE (CAST(-7.34261109E8 AS INTEGER)) ORDER BY CASE ((((rt1.c1)OR(rt1.c2)))OR(rt1.c0))  WHEN ((rt1.c4)&(rt1.c4)) THEN IFNULL(rt1.c3, rt1.c1) END, CASE rt1.c4  WHEN CASE rt1.c0  WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c0 END THEN rt1.c1 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(-7.34261109E8 AS INTEGER)) IS TRUE)  as count FROM rt1 ORDER BY CASE ((((rt1.c1)OR(rt1.c2)))OR(rt1.c0))  WHEN ((rt1.c4)&(rt1.c4)) THEN IFNULL(rt1.c3, rt1.c1) END, CASE rt1.c4  WHEN CASE rt1.c0  WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c0 END THEN rt1.c1 END  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (CAST(-7.34261109E8 AS INTEGER)) ORDER BY CASE ((((rt1.c1)OR(rt1.c2)))OR(rt1.c0))  WHEN ((rt1.c4)&(rt1.c4)) THEN IFNULL(rt1.c3, rt1.c1) END, CASE rt1.c4  WHEN CASE rt1.c0  WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c0 END THEN rt1.c1 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(-7.34261109E8 AS INTEGER)) IS TRUE)  as count FROM rt1 ORDER BY CASE ((((rt1.c1)OR(rt1.c2)))OR(rt1.c0))  WHEN ((rt1.c4)&(rt1.c4)) THEN IFNULL(rt1.c3, rt1.c1) END, CASE rt1.c4  WHEN CASE rt1.c0  WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c0 END THEN rt1.c1 END  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (CAST(-7.34261109E8 AS INTEGER)) ORDER BY CASE ((((rt1.c1)OR(rt1.c2)))OR(rt1.c0))  WHEN ((rt1.c4)&(rt1.c4)) THEN IFNULL(rt1.c3, rt1.c1) END, CASE rt1.c4  WHEN CASE rt1.c0  WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c0 END THEN rt1.c1 END  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON ((rt1.c1 COLLATE NOCASE) BETWEEN ((rt1.c3 IN (t0.c1))) AND (((rt1.c3) BETWEEN (0.01941055261984459) AND (rt0.c2)))) RIGHT OUTER JOIN rt1 ON ((CAST(t0.c2 AS BLOB))OR(CAST(rt0.c2 AS INTEGER))) WHERE (json_insert((((rt0.c0)) BETWEEN ((rt1.c4)) AND ((NULL))), (((t0.c1))=((rt1.c4))), ((x'caa6')<(rt1.c1)), ((((rt1.c0)AND(rt0.c0)))OR(t0.c2)), ((((rt0.c1)AND(rt0.c1)))OR(rt1.c4)))) ORDER BY rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_insert((((rt0.c0)) BETWEEN ((rt1.c4)) AND ((NULL))), (((t0.c1))==((rt1.c4))), ((x'caa6')<(rt1.c1)), ((((rt1.c0)AND(rt0.c0)))OR(t0.c2)), ((((rt0.c1)AND(rt0.c1)))OR(rt1.c4)))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON ((rt1.c1 COLLATE NOCASE) BETWEEN ((rt1.c3 IN (t0.c1))) AND (((rt1.c3) BETWEEN (0.01941055261984459) AND (rt0.c2)))) RIGHT OUTER JOIN rt1 ON ((CAST(t0.c2 AS BLOB))OR(CAST(rt0.c2 AS INTEGER))) ORDER BY rt0.c0 ASC);
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON ((rt1.c1 COLLATE NOCASE) BETWEEN ((rt1.c3 IN (t0.c1))) AND (((rt1.c3) BETWEEN (0.01941055261984459) AND (rt0.c2)))) RIGHT OUTER JOIN rt1 ON ((CAST(t0.c2 AS BLOB))OR(CAST(rt0.c2 AS INTEGER))) WHERE (json_insert((((rt0.c0)) BETWEEN ((rt1.c4)) AND ((NULL))), (((t0.c1))=((rt1.c4))), ((x'caa6')<(rt1.c1)), ((((rt1.c0)AND(rt0.c0)))OR(t0.c2)), ((((rt0.c1)AND(rt0.c1)))OR(rt1.c4)))) ORDER BY rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_insert((((rt0.c0)) BETWEEN ((rt1.c4)) AND ((NULL))), (((t0.c1))==((rt1.c4))), ((x'caa6')<(rt1.c1)), ((((rt1.c0)AND(rt0.c0)))OR(t0.c2)), ((((rt0.c1)AND(rt0.c1)))OR(rt1.c4)))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON ((rt1.c1 COLLATE NOCASE) BETWEEN ((rt1.c3 IN (t0.c1))) AND (((rt1.c3) BETWEEN (0.01941055261984459) AND (rt0.c2)))) RIGHT OUTER JOIN rt1 ON ((CAST(t0.c2 AS BLOB))OR(CAST(rt0.c2 AS INTEGER))) ORDER BY rt0.c0 ASC);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0))) NOT BETWEEN (((rt0.c2)<=(rt0.c2))) AND (((0X1a49fa1f)AND(rt0.c2))))) ORDER BY CAST(LIKELIHOOD(DISTINCT rt0.c1, 0.8116677037303076) AS TEXT) ASC, CASE (~ (rt0.c0))  WHEN CAST(rt0.c1 AS NUMERIC) THEN -2030800938 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0))) NOT BETWEEN (((rt0.c2)<=(rt0.c2))) AND (((0X1a49fa1f)AND(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(LIKELIHOOD(DISTINCT rt0.c1, 0.8116677037303076) AS TEXT) ASC, CASE (~ (rt0.c0))  WHEN CAST(rt0.c1 AS NUMERIC) THEN -2030800938 END  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0))) NOT BETWEEN (((rt0.c2)<=(rt0.c2))) AND (((0X1a49fa1f)AND(rt0.c2))))) ORDER BY CAST(LIKELIHOOD(DISTINCT rt0.c1, 0.8116677037303076) AS TEXT) ASC, CASE (~ (rt0.c0))  WHEN CAST(rt0.c1 AS NUMERIC) THEN -2030800938 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0))) NOT BETWEEN (((rt0.c2)<=(rt0.c2))) AND (((0X1a49fa1f)AND(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(LIKELIHOOD(DISTINCT rt0.c1, 0.8116677037303076) AS TEXT) ASC, CASE (~ (rt0.c0))  WHEN CAST(rt0.c1 AS NUMERIC) THEN -2030800938 END  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0))) NOT BETWEEN (((rt0.c2)<=(rt0.c2))) AND (((0X1a49fa1f)AND(rt0.c2))))) ORDER BY CAST(LIKELIHOOD(DISTINCT rt0.c1, 0.8116677037303076) AS TEXT) ASC, CASE (~ (rt0.c0))  WHEN CAST(rt0.c1 AS NUMERIC) THEN -2030800938 END  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((rt0.c1) IS TRUE) IN (CAST(rt1.c3 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1) IS TRUE) IN (CAST(rt1.c3 AS INTEGER)))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((rt0.c1) IS TRUE) IN (CAST(rt1.c3 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1) IS TRUE) IN (CAST(rt1.c3 AS INTEGER)))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((rt0.c1) IS TRUE) IN (CAST(rt1.c3 AS INTEGER))));
SELECT * FROM t0 LEFT OUTER JOIN rt1 ON CAST(('' IN ()) AS BLOB) LEFT OUTER JOIN rt0 ON (((('')OR(CAST(rt1.c1 AS REAL))))OR(((t0.c1)IS NOT(rt0.c1)))) WHERE (((CHANGES())*(((rt0.c1)OR(rt1.c2))))) ORDER BY rt1.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CHANGES())*(((rt0.c1)OR(rt1.c2))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt1 ON CAST(('' IN ()) AS BLOB) LEFT OUTER JOIN rt0 ON (((('')OR(CAST(rt1.c1 AS REAL))))OR(((t0.c1)IS NOT(rt0.c1)))) ORDER BY rt1.c1 DESC  NULLS FIRST);
SELECT * FROM t0 LEFT OUTER JOIN rt1 ON CAST(('' IN ()) AS BLOB) LEFT OUTER JOIN rt0 ON (((('')OR(CAST(rt1.c1 AS REAL))))OR(((t0.c1)IS NOT(rt0.c1)))) WHERE (((CHANGES())*(((rt0.c1)OR(rt1.c2))))) ORDER BY rt1.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CHANGES())*(((rt0.c1)OR(rt1.c2))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt1 ON CAST(('' IN ()) AS BLOB) LEFT OUTER JOIN rt0 ON (((('')OR(CAST(rt1.c1 AS REAL))))OR(((t0.c1)IS NOT(rt0.c1)))) ORDER BY rt1.c1 DESC  NULLS FIRST);
SELECT * FROM t0 LEFT OUTER JOIN rt1 ON CAST(('' IN ()) AS BLOB) LEFT OUTER JOIN rt0 ON (((('')OR(CAST(rt1.c1 AS REAL))))OR(((t0.c1)IS NOT(rt0.c1)))) WHERE (((CHANGES())*(((rt0.c1)OR(rt1.c2))))) ORDER BY rt1.c1 DESC  NULLS FIRST;
SELECT * FROM rt1, rt0 WHERE ((((rt1.c0)) BETWEEN ((((rt1.c2) NOT NULL))) AND ((((((rt0.c1)OR(rt1.c2)))OR(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) BETWEEN ((((rt1.c2) NOT NULL))) AND ((((((rt0.c1)OR(rt1.c2)))OR(rt0.c2)))))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE ((((rt1.c0)) BETWEEN ((((rt1.c2) NOT NULL))) AND ((((((rt0.c1)OR(rt1.c2)))OR(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) BETWEEN ((((rt1.c2) NOT NULL))) AND ((((((rt0.c1)OR(rt1.c2)))OR(rt0.c2)))))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE ((((rt1.c0)) BETWEEN ((((rt1.c2) NOT NULL))) AND ((((((rt0.c1)OR(rt1.c2)))OR(rt0.c2))))));
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE ((+ (0.720325081884471))) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL (((+ (0.720325081884471))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY t0.c0);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE ((+ (0.720325081884471))) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL (((+ (0.720325081884471))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY t0.c0);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE ((+ (0.720325081884471))) ORDER BY t0.c0;
SELECT ALL * FROM rt0, rt1 WHERE (((CAST(rt0.c1 AS BLOB)) BETWEEN (((rt0.c2)-(rt1.c1))) AND (((NULL) NOT NULL)))) ORDER BY (rt0.c0 IN ())  NULLS LAST, ((((((x'') BETWEEN (rt1.c3) AND (rt1.c2)))OR(rt0.c2)))AND(rt0.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS BLOB)) BETWEEN (((rt0.c2)-(rt1.c1))) AND (((NULL) NOT NULL)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (rt0.c0 IN ())  NULLS LAST, ((((((x'') BETWEEN (rt1.c3) AND (rt1.c2)))OR(rt0.c2)))AND(rt0.c1 COLLATE NOCASE)));
SELECT ALL * FROM rt0, rt1 WHERE (((CAST(rt0.c1 AS BLOB)) BETWEEN (((rt0.c2)-(rt1.c1))) AND (((NULL) NOT NULL)))) ORDER BY (rt0.c0 IN ())  NULLS LAST, ((((((x'') BETWEEN (rt1.c3) AND (rt1.c2)))OR(rt0.c2)))AND(rt0.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS BLOB)) BETWEEN (((rt0.c2)-(rt1.c1))) AND (((NULL) NOT NULL)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (rt0.c0 IN ())  NULLS LAST, ((((((x'') BETWEEN (rt1.c3) AND (rt1.c2)))OR(rt0.c2)))AND(rt0.c1 COLLATE NOCASE)));
SELECT ALL * FROM rt0, rt1 WHERE (((CAST(rt0.c1 AS BLOB)) BETWEEN (((rt0.c2)-(rt1.c1))) AND (((NULL) NOT NULL)))) ORDER BY (rt0.c0 IN ())  NULLS LAST, ((((((x'') BETWEEN (rt1.c3) AND (rt1.c2)))OR(rt0.c2)))AND(rt0.c1 COLLATE NOCASE));
SELECT * FROM t0 WHERE ((NOT (CAST(t0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(t0.c2 AS TEXT)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((NOT (CAST(t0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(t0.c2 AS TEXT)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((NOT (CAST(t0.c2 AS TEXT))));
SELECT COUNT(*) FROM rt0 INNER JOIN t0 ON CAST(QUOTE(rt0.c0) AS BLOB) WHERE (CAST(((rt0.c2)==(t0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)==(t0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON CAST(QUOTE(rt0.c0) AS BLOB));
SELECT COUNT(*) FROM rt0 INNER JOIN t0 ON CAST(QUOTE(rt0.c0) AS BLOB) WHERE (CAST(((rt0.c2)==(t0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)==(t0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON CAST(QUOTE(rt0.c0) AS BLOB));
SELECT COUNT(*) FROM rt0 INNER JOIN t0 ON CAST(QUOTE(rt0.c0) AS BLOB) WHERE (CAST(((rt0.c2)==(t0.c1)) AS BLOB));
SELECT ALL * FROM rt0 INNER JOIN rt1 ON NULL FULL OUTER JOIN t0 ON ((NULL) NOT BETWEEN ((+ (rt0.c2))) AND ((+ (rt1.c4)))) WHERE ((((~ (rt1.c3))) NOT BETWEEN (((((rt1.c4)OR(t0.c1)))OR(t0.c0))) AND (((((rt0.c0)OR(rt1.c3)))OR(rt1.c1))))) ORDER BY CASE WHEN ((((((((((((t0.c1)AND(t0.c0)))AND(rt1.c0)))OR(t0.c2)))AND(rt1.c3)))OR(rt1.c0)))AND(rt0.c1)) THEN NULL END DESC, NULL, LIKELIHOOD(((((((((t0.c1)OR(rt1.c1)))AND(rt0.c1)))OR(rt1.c2)))AND(rt1.c1)), 0.07754580277127876);
SELECT SUM(count) FROM (SELECT (((((~ (rt1.c3))) NOT BETWEEN (((((rt1.c4)OR(t0.c1)))OR(t0.c0))) AND (((((rt0.c0)OR(rt1.c3)))OR(rt1.c1))))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON NULL FULL OUTER JOIN t0 ON ((NULL) NOT BETWEEN ((+ (rt0.c2))) AND ((+ (rt1.c4)))) ORDER BY CASE WHEN ((((((((((((t0.c1)AND(t0.c0)))AND(rt1.c0)))OR(t0.c2)))AND(rt1.c3)))OR(rt1.c0)))AND(rt0.c1)) THEN NULL END DESC, NULL, LIKELIHOOD(((((((((t0.c1)OR(rt1.c1)))AND(rt0.c1)))OR(rt1.c2)))AND(rt1.c1)), 0.07754580277127876));
SELECT ALL * FROM rt0 INNER JOIN rt1 ON NULL FULL OUTER JOIN t0 ON ((NULL) NOT BETWEEN ((+ (rt0.c2))) AND ((+ (rt1.c4)))) WHERE ((((~ (rt1.c3))) NOT BETWEEN (((((rt1.c4)OR(t0.c1)))OR(t0.c0))) AND (((((rt0.c0)OR(rt1.c3)))OR(rt1.c1))))) ORDER BY CASE WHEN ((((((((((((t0.c1)AND(t0.c0)))AND(rt1.c0)))OR(t0.c2)))AND(rt1.c3)))OR(rt1.c0)))AND(rt0.c1)) THEN NULL END DESC, NULL, LIKELIHOOD(((((((((t0.c1)OR(rt1.c1)))AND(rt0.c1)))OR(rt1.c2)))AND(rt1.c1)), 0.07754580277127876);
SELECT SUM(count) FROM (SELECT (((((~ (rt1.c3))) NOT BETWEEN (((((rt1.c4)OR(t0.c1)))OR(t0.c0))) AND (((((rt0.c0)OR(rt1.c3)))OR(rt1.c1))))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON NULL FULL OUTER JOIN t0 ON ((NULL) NOT BETWEEN ((+ (rt0.c2))) AND ((+ (rt1.c4)))) ORDER BY CASE WHEN ((((((((((((t0.c1)AND(t0.c0)))AND(rt1.c0)))OR(t0.c2)))AND(rt1.c3)))OR(rt1.c0)))AND(rt0.c1)) THEN NULL END DESC, NULL, LIKELIHOOD(((((((((t0.c1)OR(rt1.c1)))AND(rt0.c1)))OR(rt1.c2)))AND(rt1.c1)), 0.07754580277127876));
SELECT ALL * FROM rt0 INNER JOIN rt1 ON NULL FULL OUTER JOIN t0 ON ((NULL) NOT BETWEEN ((+ (rt0.c2))) AND ((+ (rt1.c4)))) WHERE ((((~ (rt1.c3))) NOT BETWEEN (((((rt1.c4)OR(t0.c1)))OR(t0.c0))) AND (((((rt0.c0)OR(rt1.c3)))OR(rt1.c1))))) ORDER BY CASE WHEN ((((((((((((t0.c1)AND(t0.c0)))AND(rt1.c0)))OR(t0.c2)))AND(rt1.c3)))OR(rt1.c0)))AND(rt0.c1)) THEN NULL END DESC, NULL, LIKELIHOOD(((((((((t0.c1)OR(rt1.c1)))AND(rt0.c1)))OR(rt1.c2)))AND(rt1.c1)), 0.07754580277127876);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE ('D{') ORDER BY CAST(((rt0.c1)GLOB(rt0.c1)) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('D{') IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY CAST(((rt0.c1)GLOB(rt0.c1)) AS TEXT) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE ('D{') ORDER BY CAST(((rt0.c1)GLOB(rt0.c1)) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('D{') IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY CAST(((rt0.c1)GLOB(rt0.c1)) AS TEXT) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE ('D{') ORDER BY CAST(((rt0.c1)GLOB(rt0.c1)) AS TEXT) DESC  NULLS LAST;
SELECT * FROM rt1, rt0, t0 WHERE (((((t0.c2)IS NOT(rt1.c3))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)IS NOT(rt1.c3))) NOT NULL)) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT * FROM rt1, rt0, t0 WHERE (((((t0.c2)IS NOT(rt1.c3))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)IS NOT(rt1.c3))) NOT NULL)) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT * FROM rt1, rt0, t0 WHERE (((((t0.c2)IS NOT(rt1.c3))) NOT NULL));
SELECT COUNT(*) FROM rt0, t0 WHERE (((NULL) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (((rt0.c0)||(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (((rt0.c0)||(t0.c2))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((NULL) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (((rt0.c0)||(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (((rt0.c0)||(t0.c2))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((NULL) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (((rt0.c0)||(t0.c2)))));
SELECT ALL * FROM rt0 WHERE (TRIM(CAST(rt0.c2 AS NUMERIC))) ORDER BY (((rt0.c2 IN ()))AND((~ (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CAST(rt0.c2 AS NUMERIC))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN ()))AND((~ (rt0.c0)))));
SELECT ALL * FROM rt0 WHERE (TRIM(CAST(rt0.c2 AS NUMERIC))) ORDER BY (((rt0.c2 IN ()))AND((~ (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CAST(rt0.c2 AS NUMERIC))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN ()))AND((~ (rt0.c0)))));
SELECT * FROM rt0, rt1, t0 WHERE (((((((rt0.c2) BETWEEN (rt1.c1) AND (t0.c2)))OR(UPPER(DISTINCT t0.c0))))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c1))))) ORDER BY t0.c1;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2) BETWEEN (rt1.c1) AND (t0.c2)))OR(UPPER(DISTINCT t0.c0))))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c1))))) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY t0.c1);
SELECT * FROM rt0, rt1, t0 WHERE (((((((rt0.c2) BETWEEN (rt1.c1) AND (t0.c2)))OR(UPPER(DISTINCT t0.c0))))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c1))))) ORDER BY t0.c1;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2) BETWEEN (rt1.c1) AND (t0.c2)))OR(UPPER(DISTINCT t0.c0))))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c1))))) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY t0.c1);
SELECT * FROM rt0, rt1, t0 WHERE (((((((rt0.c2) BETWEEN (rt1.c1) AND (t0.c2)))OR(UPPER(DISTINCT t0.c0))))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c1))))) ORDER BY t0.c1;
SELECT * FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))OR(t0.c2))) IS TRUE)) ORDER BY ((CAST(t0.c2 AS BLOB)) NOT BETWEEN (((t0.c1) NOT NULL)) AND ((((t0.c0)) NOT BETWEEN (('nw-ﱑ(*N')) AND ((t0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND(t0.c0)))OR(t0.c2))) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c2 AS BLOB)) NOT BETWEEN (((t0.c1) NOT NULL)) AND ((((t0.c0)) NOT BETWEEN (('nw-ﱑ(*N')) AND ((t0.c1)))))  NULLS LAST);
SELECT * FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))OR(t0.c2))) IS TRUE)) ORDER BY ((CAST(t0.c2 AS BLOB)) NOT BETWEEN (((t0.c1) NOT NULL)) AND ((((t0.c0)) NOT BETWEEN (('nw-ﱑ(*N')) AND ((t0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND(t0.c0)))OR(t0.c2))) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c2 AS BLOB)) NOT BETWEEN (((t0.c1) NOT NULL)) AND ((((t0.c0)) NOT BETWEEN (('nw-ﱑ(*N')) AND ((t0.c1)))))  NULLS LAST);
SELECT * FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))OR(t0.c2))) IS TRUE)) ORDER BY ((CAST(t0.c2 AS BLOB)) NOT BETWEEN (((t0.c1) NOT NULL)) AND ((((t0.c0)) NOT BETWEEN (('nw-ﱑ(*N')) AND ((t0.c1)))))  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c3))) NOT BETWEEN (((rt1.c4) NOTNULL)) AND (((rt1.c3)IS NOT(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c3))) NOT BETWEEN (((rt1.c4) NOTNULL)) AND (((rt1.c3)IS NOT(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c3))) NOT BETWEEN (((rt1.c4) NOTNULL)) AND (((rt1.c3)IS NOT(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c3))) NOT BETWEEN (((rt1.c4) NOTNULL)) AND (((rt1.c3)IS NOT(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c3))) NOT BETWEEN (((rt1.c4) NOTNULL)) AND (((rt1.c3)IS NOT(rt1.c0)))));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN t0 ON (((((NULL)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c0))))!=((rt1.c0 IN ()))) INNER JOIN rt0 ON CASE (((t0.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c0)))  WHEN CAST(rt1.c4 AS TEXT) THEN ((rt0.c2)AND(t0.c2)) WHEN (rt0.c1 IN ()) THEN CASE rt0.c1  WHEN '{DC8A*' THEN 0xffffffffa0a764b4 WHEN rt1.c2 THEN 0.6005513130163718 WHEN rt1.c1 THEN t0.c2 END WHEN ((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)) THEN CAST(t0.c2 AS REAL) END WHERE ((((- (rt1.c4)))!=(rt0.c2 COLLATE BINARY))) ORDER BY ((((CASE rt1.c1  WHEN t0.c1 THEN rt0.c2 ELSE t0.c2 END)OR(((rt1.c1)/(rt1.c2)))))AND(rt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (rt1.c4)))!=(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON (((((NULL)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c0))))<>((rt1.c0 IN ()))) INNER JOIN rt0 ON CASE (((t0.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c0)))  WHEN CAST(rt1.c4 AS TEXT) THEN ((rt0.c2)AND(t0.c2)) WHEN (rt0.c1 IN ()) THEN CASE rt0.c1  WHEN '{DC8A*' THEN 0Xffffffffa0a764b4 WHEN rt1.c2 THEN 0.6005513130163718 WHEN rt1.c1 THEN t0.c2 END WHEN ((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)) THEN CAST(t0.c2 AS REAL) END ORDER BY ((((CASE rt1.c1  WHEN t0.c1 THEN rt0.c2 ELSE t0.c2 END)OR(((rt1.c1)/(rt1.c2)))))AND(rt0.c0)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN t0 ON (((((NULL)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c0))))!=((rt1.c0 IN ()))) INNER JOIN rt0 ON CASE (((t0.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c0)))  WHEN CAST(rt1.c4 AS TEXT) THEN ((rt0.c2)AND(t0.c2)) WHEN (rt0.c1 IN ()) THEN CASE rt0.c1  WHEN '{DC8A*' THEN 0xffffffffa0a764b4 WHEN rt1.c2 THEN 0.6005513130163718 WHEN rt1.c1 THEN t0.c2 END WHEN ((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)) THEN CAST(t0.c2 AS REAL) END WHERE ((((- (rt1.c4)))!=(rt0.c2 COLLATE BINARY))) ORDER BY ((((CASE rt1.c1  WHEN t0.c1 THEN rt0.c2 ELSE t0.c2 END)OR(((rt1.c1)/(rt1.c2)))))AND(rt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (rt1.c4)))!=(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON (((((NULL)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c0))))<>((rt1.c0 IN ()))) INNER JOIN rt0 ON CASE (((t0.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c0)))  WHEN CAST(rt1.c4 AS TEXT) THEN ((rt0.c2)AND(t0.c2)) WHEN (rt0.c1 IN ()) THEN CASE rt0.c1  WHEN '{DC8A*' THEN 0Xffffffffa0a764b4 WHEN rt1.c2 THEN 0.6005513130163718 WHEN rt1.c1 THEN t0.c2 END WHEN ((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)) THEN CAST(t0.c2 AS REAL) END ORDER BY ((((CASE rt1.c1  WHEN t0.c1 THEN rt0.c2 ELSE t0.c2 END)OR(((rt1.c1)/(rt1.c2)))))AND(rt0.c0)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t0 WHERE ((~ (((((t0.c2)AND(rt1.c3)))AND(x''))))) ORDER BY ((((t0.c1)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c3))) IN ()), ((((rt1.c3)) BETWEEN ((rt1.c2)) AND ((rt1.c1))) IN ());
SELECT SUM(count) FROM (SELECT ALL (((~ (((((t0.c2)AND(rt1.c3)))AND(x''))))) IS TRUE)  as count FROM rt1, t0 ORDER BY ((((t0.c1)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c3))) IN ()), ((((rt1.c3)) BETWEEN ((rt1.c2)) AND ((rt1.c1))) IN ()));
SELECT COUNT(*) FROM rt1, t0 WHERE ((~ (((((t0.c2)AND(rt1.c3)))AND(x''))))) ORDER BY ((((t0.c1)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c3))) IN ()), ((((rt1.c3)) BETWEEN ((rt1.c2)) AND ((rt1.c1))) IN ());
SELECT SUM(count) FROM (SELECT ALL (((~ (((((t0.c2)AND(rt1.c3)))AND(x''))))) IS TRUE)  as count FROM rt1, t0 ORDER BY ((((t0.c1)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c3))) IN ()), ((((rt1.c3)) BETWEEN ((rt1.c2)) AND ((rt1.c1))) IN ()));
SELECT COUNT(*) FROM rt1, t0 WHERE ((~ (((((t0.c2)AND(rt1.c3)))AND(x''))))) ORDER BY ((((t0.c1)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c3))) IN ()), ((((rt1.c3)) BETWEEN ((rt1.c2)) AND ((rt1.c1))) IN ());
SELECT * FROM t0, rt1, rt0 WHERE (CASE WHEN ((rt1.c2)>(rt0.c1)) THEN t0.c1 COLLATE RTRIM WHEN HEX(rt0.c1) THEN ((t0.c0)!=(rt1.c0)) WHEN ((((rt0.c1)OR(x'')))AND(rt0.c2)) THEN (- (rt1.c0)) ELSE ((rt1.c3)|(rt1.c4)) END) ORDER BY CAST(TRIM(DISTINCT rt1.c2) AS TEXT);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c2)>(rt0.c1)) THEN t0.c1 COLLATE RTRIM WHEN HEX(rt0.c1) THEN ((t0.c0)<>(rt1.c0)) WHEN ((((rt0.c1)OR(x'')))AND(rt0.c2)) THEN (- (rt1.c0)) ELSE ((rt1.c3)|(rt1.c4)) END) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY CAST(TRIM(DISTINCT rt1.c2) AS TEXT));
SELECT * FROM t0, rt1, rt0 WHERE (CASE WHEN ((rt1.c2)>(rt0.c1)) THEN t0.c1 COLLATE RTRIM WHEN HEX(rt0.c1) THEN ((t0.c0)!=(rt1.c0)) WHEN ((((rt0.c1)OR(x'')))AND(rt0.c2)) THEN (- (rt1.c0)) ELSE ((rt1.c3)|(rt1.c4)) END) ORDER BY CAST(TRIM(DISTINCT rt1.c2) AS TEXT);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c2)>(rt0.c1)) THEN t0.c1 COLLATE RTRIM WHEN HEX(rt0.c1) THEN ((t0.c0)<>(rt1.c0)) WHEN ((((rt0.c1)OR(x'')))AND(rt0.c2)) THEN (- (rt1.c0)) ELSE ((rt1.c3)|(rt1.c4)) END) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY CAST(TRIM(DISTINCT rt1.c2) AS TEXT));
SELECT * FROM t0, rt1, rt0 WHERE (CASE WHEN ((rt1.c2)>(rt0.c1)) THEN t0.c1 COLLATE RTRIM WHEN HEX(rt0.c1) THEN ((t0.c0)!=(rt1.c0)) WHEN ((((rt0.c1)OR(x'')))AND(rt0.c2)) THEN (- (rt1.c0)) ELSE ((rt1.c3)|(rt1.c4)) END) ORDER BY CAST(TRIM(DISTINCT rt1.c2) AS TEXT);
SELECT * FROM rt0, rt1, t0 WHERE (0.014947352732010977);
SELECT SUM(count) FROM (SELECT ((0.014947352732010977) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT * FROM rt0, rt1, t0 WHERE (0.014947352732010977);
SELECT SUM(count) FROM (SELECT ((0.014947352732010977) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT * FROM rt0, rt1, t0 WHERE (0.014947352732010977);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE ((~ (((('-1959571384'))<>((t0.c1)))))) ORDER BY LIKELIHOOD(((t0.c2) BETWEEN (rt0.c2) AND (rt0.c1)), 0.20844043020182335)  NULLS LAST, ((('')) NOT BETWEEN ((((t0.c1) ISNULL))) AND ((QUOTE(rt1.c2)))) DESC  NULLS LAST, ((rt1.c0)>(rt1.c2)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((('-1959571384'))!=((t0.c1)))))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY LIKELIHOOD(((t0.c2) BETWEEN (rt0.c2) AND (rt0.c1)), 0.20844043020182335)  NULLS LAST, ((('')) NOT BETWEEN ((((t0.c1) ISNULL))) AND ((QUOTE(rt1.c2)))) DESC  NULLS LAST, ((rt1.c0)>(rt1.c2)) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE ((~ (((('-1959571384'))<>((t0.c1)))))) ORDER BY LIKELIHOOD(((t0.c2) BETWEEN (rt0.c2) AND (rt0.c1)), 0.20844043020182335)  NULLS LAST, ((('')) NOT BETWEEN ((((t0.c1) ISNULL))) AND ((QUOTE(rt1.c2)))) DESC  NULLS LAST, ((rt1.c0)>(rt1.c2)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((('-1959571384'))!=((t0.c1)))))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY LIKELIHOOD(((t0.c2) BETWEEN (rt0.c2) AND (rt0.c1)), 0.20844043020182335)  NULLS LAST, ((('')) NOT BETWEEN ((((t0.c1) ISNULL))) AND ((QUOTE(rt1.c2)))) DESC  NULLS LAST, ((rt1.c0)>(rt1.c2)) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE ((~ (((('-1959571384'))<>((t0.c1)))))) ORDER BY LIKELIHOOD(((t0.c2) BETWEEN (rt0.c2) AND (rt0.c1)), 0.20844043020182335)  NULLS LAST, ((('')) NOT BETWEEN ((((t0.c1) ISNULL))) AND ((QUOTE(rt1.c2)))) DESC  NULLS LAST, ((rt1.c0)>(rt1.c2)) COLLATE NOCASE  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (rt1.c0) ORDER BY ((rt1.c1) IS TRUE) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1) IS TRUE) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c0) ORDER BY ((rt1.c1) IS TRUE) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1) IS TRUE) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c0) ORDER BY ((rt1.c1) IS TRUE) COLLATE NOCASE  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0 RIGHT OUTER JOIN rt1 ON NULL WHERE ((((CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt1.c3 THEN rt1.c4 ELSE rt0.c0 END))=(((+ (rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt1.c3 THEN rt1.c4 ELSE rt0.c0 END))==(((+ (rt1.c2)))))) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN rt1 ON NULL);
SELECT COUNT(*) FROM rt0, t0 RIGHT OUTER JOIN rt1 ON NULL WHERE ((((CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt1.c3 THEN rt1.c4 ELSE rt0.c0 END))=(((+ (rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt1.c3 THEN rt1.c4 ELSE rt0.c0 END))==(((+ (rt1.c2)))))) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN rt1 ON NULL);
SELECT COUNT(*) FROM rt0, t0 RIGHT OUTER JOIN rt1 ON NULL WHERE ((((CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt1.c3 THEN rt1.c4 ELSE rt0.c0 END))=(((+ (rt1.c2))))));
SELECT ALL COUNT(*) FROM t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (x'');
SELECT ALL * FROM t0, rt1 WHERE ((((((rt1.c3)OR(rt1.c1)))OR(rt1.c2)) IN ())) ORDER BY CAST(t0.c1 COLLATE RTRIM AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c3)OR(rt1.c1)))OR(rt1.c2)) IN ())) IS TRUE)  as count FROM t0, rt1 ORDER BY CAST(t0.c1 COLLATE RTRIM AS BLOB) DESC);
SELECT ALL * FROM t0, rt1 WHERE ((((((rt1.c3)OR(rt1.c1)))OR(rt1.c2)) IN ())) ORDER BY CAST(t0.c1 COLLATE RTRIM AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c3)OR(rt1.c1)))OR(rt1.c2)) IN ())) IS TRUE)  as count FROM t0, rt1 ORDER BY CAST(t0.c1 COLLATE RTRIM AS BLOB) DESC);
SELECT ALL * FROM t0, rt1 WHERE ((((((rt1.c3)OR(rt1.c1)))OR(rt1.c2)) IN ())) ORDER BY CAST(t0.c1 COLLATE RTRIM AS BLOB) DESC;
SELECT ALL * FROM rt1 WHERE (CASE WHEN (NOT (rt1.c3)) THEN rt1.c3 COLLATE NOCASE WHEN (((rt1.c0, rt1.c3, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c4, '-284492719')) AND ((rt1.c3, rt1.c2, rt1.c3))) THEN ((rt1.c4)IS NOT(rt1.c3)) WHEN CAST(rt1.c1 AS NUMERIC) THEN CASE rt1.c1  WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c4 END ELSE CASE rt1.c1  WHEN rt1.c3 THEN rt1.c4 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (rt1.c3)) THEN rt1.c3 COLLATE NOCASE WHEN (((rt1.c0, rt1.c3, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c4, '-284492719')) AND ((rt1.c3, rt1.c2, rt1.c3))) THEN ((rt1.c4)IS NOT(rt1.c3)) WHEN CAST(rt1.c1 AS NUMERIC) THEN CASE rt1.c1  WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c4 END ELSE CASE rt1.c1  WHEN rt1.c3 THEN rt1.c4 END END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE WHEN (NOT (rt1.c3)) THEN rt1.c3 COLLATE NOCASE WHEN (((rt1.c0, rt1.c3, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c4, '-284492719')) AND ((rt1.c3, rt1.c2, rt1.c3))) THEN ((rt1.c4)IS NOT(rt1.c3)) WHEN CAST(rt1.c1 AS NUMERIC) THEN CASE rt1.c1  WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c4 END ELSE CASE rt1.c1  WHEN rt1.c3 THEN rt1.c4 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (rt1.c3)) THEN rt1.c3 COLLATE NOCASE WHEN (((rt1.c0, rt1.c3, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c4, '-284492719')) AND ((rt1.c3, rt1.c2, rt1.c3))) THEN ((rt1.c4)IS NOT(rt1.c3)) WHEN CAST(rt1.c1 AS NUMERIC) THEN CASE rt1.c1  WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c4 END ELSE CASE rt1.c1  WHEN rt1.c3 THEN rt1.c4 END END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE WHEN (NOT (rt1.c3)) THEN rt1.c3 COLLATE NOCASE WHEN (((rt1.c0, rt1.c3, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c4, '-284492719')) AND ((rt1.c3, rt1.c2, rt1.c3))) THEN ((rt1.c4)IS NOT(rt1.c3)) WHEN CAST(rt1.c1 AS NUMERIC) THEN CASE rt1.c1  WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c4 END ELSE CASE rt1.c1  WHEN rt1.c3 THEN rt1.c4 END END);
SELECT * FROM rt0, rt1, t0 WHERE ((((NOT (t0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c2))) ISNULL)) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT * FROM rt0, rt1, t0 WHERE ((((NOT (t0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c2))) ISNULL)) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT * FROM rt0, rt1, t0 WHERE ((((NOT (t0.c2))) ISNULL));
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c1))=((rt1.c1))) IN ())) ORDER BY LIKELIHOOD(DISTINCT x'', 0.6232633861831106)  NULLS LAST, CAST(((rt1.c1)==(rt1.c4)) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1))=((rt1.c1))) IN ())) IS TRUE)  as count FROM rt1 ORDER BY LIKELIHOOD(DISTINCT x'', 0.6232633861831106)  NULLS LAST, CAST(((rt1.c1)==(rt1.c4)) AS NUMERIC) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c1))=((rt1.c1))) IN ())) ORDER BY LIKELIHOOD(DISTINCT x'', 0.6232633861831106)  NULLS LAST, CAST(((rt1.c1)==(rt1.c4)) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1))=((rt1.c1))) IN ())) IS TRUE)  as count FROM rt1 ORDER BY LIKELIHOOD(DISTINCT x'', 0.6232633861831106)  NULLS LAST, CAST(((rt1.c1)==(rt1.c4)) AS NUMERIC) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c1))=((rt1.c1))) IN ())) ORDER BY LIKELIHOOD(DISTINCT x'', 0.6232633861831106)  NULLS LAST, CAST(((rt1.c1)==(rt1.c4)) AS NUMERIC) ASC  NULLS FIRST;
SELECT * FROM t0 WHERE ((((~ (t0.c0)))/((- (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((~ (t0.c0)))/((- (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((~ (t0.c0)))/((- (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((~ (t0.c0)))/((- (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((~ (t0.c0)))/((- (t0.c0)))));
SELECT * FROM rt1, t0, rt0 WHERE (0.5918363646959632) ORDER BY ((x'')*(((rt1.c2) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.5918363646959632) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((x'')*(((rt1.c2) ISNULL)))  NULLS LAST);
SELECT * FROM rt1, t0, rt0 WHERE (0.5918363646959632) ORDER BY ((x'')*(((rt1.c2) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.5918363646959632) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((x'')*(((rt1.c2) ISNULL)))  NULLS LAST);
SELECT * FROM rt1, t0, rt0 WHERE (0.5918363646959632) ORDER BY ((x'')*(((rt1.c2) ISNULL)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE ((((t0.c0, rt1.c2, rt1.c0)) BETWEEN ((rt1.c1, ((((rt0.c2)OR(rt0.c1)))AND(rt1.c0)), ((((((((t0.c1)AND(rt0.c1)))OR(rt1.c2)))OR(rt1.c4)))OR(rt0.c0)))) AND ((((((((((rt0.c1)AND(NULL)))OR(rt1.c1)))AND(t0.c0)))OR(rt1.c4)), TRIM(DISTINCT rt0.c0, x''), 0.14546003990662182)))) ORDER BY (NOT (t0.c2)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0, rt1.c2, rt1.c0)) BETWEEN ((rt1.c1, ((((rt0.c2)OR(rt0.c1)))AND(rt1.c0)), ((((((((t0.c1)AND(rt0.c1)))OR(rt1.c2)))OR(rt1.c4)))OR(rt0.c0)))) AND ((((((((((rt0.c1)AND(NULL)))OR(rt1.c1)))AND(t0.c0)))OR(rt1.c4)), TRIM(DISTINCT rt0.c0, x''), 0.14546003990662182)))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY (NOT (t0.c2)) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE ((((t0.c0, rt1.c2, rt1.c0)) BETWEEN ((rt1.c1, ((((rt0.c2)OR(rt0.c1)))AND(rt1.c0)), ((((((((t0.c1)AND(rt0.c1)))OR(rt1.c2)))OR(rt1.c4)))OR(rt0.c0)))) AND ((((((((((rt0.c1)AND(NULL)))OR(rt1.c1)))AND(t0.c0)))OR(rt1.c4)), TRIM(DISTINCT rt0.c0, x''), 0.14546003990662182)))) ORDER BY (NOT (t0.c2)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0, rt1.c2, rt1.c0)) BETWEEN ((rt1.c1, ((((rt0.c2)OR(rt0.c1)))AND(rt1.c0)), ((((((((t0.c1)AND(rt0.c1)))OR(rt1.c2)))OR(rt1.c4)))OR(rt0.c0)))) AND ((((((((((rt0.c1)AND(NULL)))OR(rt1.c1)))AND(t0.c0)))OR(rt1.c4)), TRIM(DISTINCT rt0.c0, x''), 0.14546003990662182)))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY (NOT (t0.c2)) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE ((((t0.c0, rt1.c2, rt1.c0)) BETWEEN ((rt1.c1, ((((rt0.c2)OR(rt0.c1)))AND(rt1.c0)), ((((((((t0.c1)AND(rt0.c1)))OR(rt1.c2)))OR(rt1.c4)))OR(rt0.c0)))) AND ((((((((((rt0.c1)AND(NULL)))OR(rt1.c1)))AND(t0.c0)))OR(rt1.c4)), TRIM(DISTINCT rt0.c0, x''), 0.14546003990662182)))) ORDER BY (NOT (t0.c2)) COLLATE NOCASE ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE ((NOT ((t0.c1 IN ())))) ORDER BY LOWER(DISTINCT CASE rt1.c4  WHEN rt1.c2 THEN t0.c1 END) ASC;
SELECT SUM(count) FROM (SELECT (((NOT ((t0.c1 IN ())))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY LOWER(DISTINCT CASE rt1.c4  WHEN rt1.c2 THEN t0.c1 END) ASC);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE ((NOT ((t0.c1 IN ())))) ORDER BY LOWER(DISTINCT CASE rt1.c4  WHEN rt1.c2 THEN t0.c1 END) ASC;
SELECT SUM(count) FROM (SELECT (((NOT ((t0.c1 IN ())))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY LOWER(DISTINCT CASE rt1.c4  WHEN rt1.c2 THEN t0.c1 END) ASC);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE ((NOT ((t0.c1 IN ())))) ORDER BY LOWER(DISTINCT CASE rt1.c4  WHEN rt1.c2 THEN t0.c1 END) ASC;
SELECT ALL * FROM t0, rt0, rt1 WHERE (((((rt1.c4)IS(t0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt1.c4)IS(t0.c0))) NOT NULL)) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL * FROM t0, rt0, rt1 WHERE (((((rt1.c4)IS(t0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt1.c4)IS(t0.c0))) NOT NULL)) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL * FROM t0, rt0, rt1 WHERE (((((rt1.c4)IS(t0.c0))) NOT NULL));
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON ((((rt1.c1)AND(rt0.c2)))AND(0.12242032308550865)) COLLATE BINARY INNER JOIN rt1 ON ((rt1.c4) IS FALSE) WHERE (((((t0.c0)LIKE(rt1.c1))) NOT BETWEEN (CASE WHEN rt1.c1 THEN rt1.c3 WHEN rt0.c1 THEN t0.c2 WHEN t0.c1 THEN rt1.c4 ELSE rt0.c2 END) AND (((rt1.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)LIKE(rt1.c1))) NOT BETWEEN (CASE WHEN rt1.c1 THEN rt1.c3 WHEN rt0.c1 THEN t0.c2 WHEN t0.c1 THEN rt1.c4 ELSE rt0.c2 END) AND (((rt1.c2) NOT NULL)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((((rt1.c1)AND(rt0.c2)))AND(0.12242032308550865)) COLLATE BINARY INNER JOIN rt1 ON ((rt1.c4) IS FALSE));
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON ((((rt1.c1)AND(rt0.c2)))AND(0.12242032308550865)) COLLATE BINARY INNER JOIN rt1 ON ((rt1.c4) IS FALSE) WHERE (((((t0.c0)LIKE(rt1.c1))) NOT BETWEEN (CASE WHEN rt1.c1 THEN rt1.c3 WHEN rt0.c1 THEN t0.c2 WHEN t0.c1 THEN rt1.c4 ELSE rt0.c2 END) AND (((rt1.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)LIKE(rt1.c1))) NOT BETWEEN (CASE WHEN rt1.c1 THEN rt1.c3 WHEN rt0.c1 THEN t0.c2 WHEN t0.c1 THEN rt1.c4 ELSE rt0.c2 END) AND (((rt1.c2) NOT NULL)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((((rt1.c1)AND(rt0.c2)))AND(0.12242032308550865)) COLLATE BINARY INNER JOIN rt1 ON ((rt1.c4) IS FALSE));
SELECT ALL * FROM t0 WHERE ((~ (((t0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c0) IS FALSE)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((~ (((t0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c0) IS FALSE)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((~ (((t0.c0) IS FALSE))));
SELECT ALL * FROM rt0, t0 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (TOTAL_CHANGES());
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN t0 ON CAST(((((0.14546003990662182)OR(t0.c2)))OR(t0.c0)) AS REAL) FULL OUTER JOIN rt0 ON CASE '-104159102' COLLATE NOCASE  WHEN (((rt0.c2)) BETWEEN ((rt1.c2)) AND ((rt0.c1))) THEN ((((((((t0.c0)OR(0xffffffffb23b4c6a)))OR(t0.c0)))OR(x'cbdb6eda')))OR(t0.c1)) WHEN ((((rt1.c2)OR(t0.c1)))OR(rt1.c4)) THEN ((rt0.c1)*(rt0.c1)) WHEN (- (rt1.c2)) THEN rt1.c4 END WHERE (CAST((+ (rt1.c0)) AS INTEGER)) ORDER BY ((rt0.c1 COLLATE BINARY)*(CASE rt1.c1  WHEN 0.28335013813347654 THEN rt1.c1 END));
SELECT SUM(count) FROM (SELECT ((CAST((+ (rt1.c0)) AS INTEGER)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON CAST(((((0.14546003990662182)OR(t0.c2)))OR(t0.c0)) AS REAL) FULL OUTER JOIN rt0 ON CASE '-104159102' COLLATE NOCASE  WHEN (((rt0.c2)) BETWEEN ((rt1.c2)) AND ((rt0.c1))) THEN ((((((((t0.c0)OR(0xffffffffb23b4c6a)))OR(t0.c0)))OR(x'cbdb6eda')))OR(t0.c1)) WHEN ((((rt1.c2)OR(t0.c1)))OR(rt1.c4)) THEN ((rt0.c1)*(rt0.c1)) WHEN (- (rt1.c2)) THEN rt1.c4 END ORDER BY ((rt0.c1 COLLATE BINARY)*(CASE rt1.c1  WHEN 0.28335013813347654 THEN rt1.c1 END)));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN t0 ON CAST(((((0.14546003990662182)OR(t0.c2)))OR(t0.c0)) AS REAL) FULL OUTER JOIN rt0 ON CASE '-104159102' COLLATE NOCASE  WHEN (((rt0.c2)) BETWEEN ((rt1.c2)) AND ((rt0.c1))) THEN ((((((((t0.c0)OR(0xffffffffb23b4c6a)))OR(t0.c0)))OR(x'cbdb6eda')))OR(t0.c1)) WHEN ((((rt1.c2)OR(t0.c1)))OR(rt1.c4)) THEN ((rt0.c1)*(rt0.c1)) WHEN (- (rt1.c2)) THEN rt1.c4 END WHERE (CAST((+ (rt1.c0)) AS INTEGER)) ORDER BY ((rt0.c1 COLLATE BINARY)*(CASE rt1.c1  WHEN 0.28335013813347654 THEN rt1.c1 END));
SELECT SUM(count) FROM (SELECT ((CAST((+ (rt1.c0)) AS INTEGER)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON CAST(((((0.14546003990662182)OR(t0.c2)))OR(t0.c0)) AS REAL) FULL OUTER JOIN rt0 ON CASE '-104159102' COLLATE NOCASE  WHEN (((rt0.c2)) BETWEEN ((rt1.c2)) AND ((rt0.c1))) THEN ((((((((t0.c0)OR(0xffffffffb23b4c6a)))OR(t0.c0)))OR(x'cbdb6eda')))OR(t0.c1)) WHEN ((((rt1.c2)OR(t0.c1)))OR(rt1.c4)) THEN ((rt0.c1)*(rt0.c1)) WHEN (- (rt1.c2)) THEN rt1.c4 END ORDER BY ((rt0.c1 COLLATE BINARY)*(CASE rt1.c1  WHEN 0.28335013813347654 THEN rt1.c1 END)));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN t0 ON CAST(((((0.14546003990662182)OR(t0.c2)))OR(t0.c0)) AS REAL) FULL OUTER JOIN rt0 ON CASE '-104159102' COLLATE NOCASE  WHEN (((rt0.c2)) BETWEEN ((rt1.c2)) AND ((rt0.c1))) THEN ((((((((t0.c0)OR(0xffffffffb23b4c6a)))OR(t0.c0)))OR(x'cbdb6eda')))OR(t0.c1)) WHEN ((((rt1.c2)OR(t0.c1)))OR(rt1.c4)) THEN ((rt0.c1)*(rt0.c1)) WHEN (- (rt1.c2)) THEN rt1.c4 END WHERE (CAST((+ (rt1.c0)) AS INTEGER)) ORDER BY ((rt0.c1 COLLATE BINARY)*(CASE rt1.c1  WHEN 0.28335013813347654 THEN rt1.c1 END));
SELECT COUNT(*) FROM t0, rt0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (t0.c2);
SELECT * FROM rt1 WHERE (((CAST(rt1.c0 AS NUMERIC)) BETWEEN (CAST(rt1.c4 AS REAL)) AND (((0.15246864172348673) NOTNULL)))) ORDER BY rt1.c3 DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS NUMERIC)) BETWEEN (CAST(rt1.c4 AS REAL)) AND (((0.15246864172348673) NOTNULL)))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c3 DESC);
SELECT * FROM rt1 WHERE (((CAST(rt1.c0 AS NUMERIC)) BETWEEN (CAST(rt1.c4 AS REAL)) AND (((0.15246864172348673) NOTNULL)))) ORDER BY rt1.c3 DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS NUMERIC)) BETWEEN (CAST(rt1.c4 AS REAL)) AND (((0.15246864172348673) NOTNULL)))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c3 DESC);
SELECT * FROM rt1 WHERE (((CAST(rt1.c0 AS NUMERIC)) BETWEEN (CAST(rt1.c4 AS REAL)) AND (((0.15246864172348673) NOTNULL)))) ORDER BY rt1.c3 DESC;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((('-281770317') IS FALSE)) ORDER BY (((((0.7142285038558394)) BETWEEN ((t0.c2)) AND ((rt0.c0))))IS NOT(t0.c1 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('-281770317') IS FALSE)) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((0.7142285038558394)) BETWEEN ((t0.c2)) AND ((rt0.c0))))IS NOT(t0.c1 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((('-281770317') IS FALSE)) ORDER BY (((((0.7142285038558394)) BETWEEN ((t0.c2)) AND ((rt0.c0))))IS NOT(t0.c1 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('-281770317') IS FALSE)) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((0.7142285038558394)) BETWEEN ((t0.c2)) AND ((rt0.c0))))IS NOT(t0.c1 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((('-281770317') IS FALSE)) ORDER BY (((((0.7142285038558394)) BETWEEN ((t0.c2)) AND ((rt0.c0))))IS NOT(t0.c1 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((t0.c2, t0.c0, t0.c1, t0.c1, t0.c0)) BETWEEN ((t0.c2, t0.c1, t0.c2, t0.c1, NULL)) AND ((t0.c1, t0.c2, t0.c1, t0.c0, NULL))))AND((NOT (t0.c1)))))OR(t0.c0))) ORDER BY ((- (t0.c0)) IN ());
SELECT SUM(count) FROM (SELECT (((((((((t0.c2, t0.c0, t0.c1, t0.c1, t0.c0)) BETWEEN ((t0.c2, t0.c1, t0.c2, t0.c1, NULL)) AND ((t0.c1, t0.c2, t0.c1, t0.c0, NULL))))AND((NOT (t0.c1)))))OR(t0.c0))) IS TRUE)  as count FROM t0 ORDER BY ((- (t0.c0)) IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((t0.c2, t0.c0, t0.c1, t0.c1, t0.c0)) BETWEEN ((t0.c2, t0.c1, t0.c2, t0.c1, NULL)) AND ((t0.c1, t0.c2, t0.c1, t0.c0, NULL))))AND((NOT (t0.c1)))))OR(t0.c0))) ORDER BY ((- (t0.c0)) IN ());
SELECT SUM(count) FROM (SELECT (((((((((t0.c2, t0.c0, t0.c1, t0.c1, t0.c0)) BETWEEN ((t0.c2, t0.c1, t0.c2, t0.c1, NULL)) AND ((t0.c1, t0.c2, t0.c1, t0.c0, NULL))))AND((NOT (t0.c1)))))OR(t0.c0))) IS TRUE)  as count FROM t0 ORDER BY ((- (t0.c0)) IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((t0.c2, t0.c0, t0.c1, t0.c1, t0.c0)) BETWEEN ((t0.c2, t0.c1, t0.c2, t0.c1, NULL)) AND ((t0.c1, t0.c2, t0.c1, t0.c0, NULL))))AND((NOT (t0.c1)))))OR(t0.c0))) ORDER BY ((- (t0.c0)) IN ());
SELECT ALL * FROM rt1, rt0, t0 WHERE (0.608654655573975);
SELECT SUM(count) FROM (SELECT ((0.608654655573975) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT ALL * FROM rt1, rt0, t0 WHERE (0.608654655573975);
SELECT SUM(count) FROM (SELECT ((0.608654655573975) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT ALL * FROM rt1, rt0, t0 WHERE (0.608654655573975);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c4)))) NOT BETWEEN ((((rt1.c1))<>((rt1.c1)))) AND (((rt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c4)))) NOT BETWEEN ((((rt1.c1))!=((rt1.c1)))) AND (((rt1.c0) IS TRUE)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c4)))) NOT BETWEEN ((((rt1.c1))<>((rt1.c1)))) AND (((rt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c4)))) NOT BETWEEN ((((rt1.c1))!=((rt1.c1)))) AND (((rt1.c0) IS TRUE)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c4)))) NOT BETWEEN ((((rt1.c1))<>((rt1.c1)))) AND (((rt1.c0) IS TRUE))));
SELECT ALL * FROM rt1 INNER JOIN rt0 ON CAST(rt1.c3 AS TEXT) WHERE (((((rt0.c1) IS FALSE)) NOT BETWEEN (UNLIKELY(DISTINCT rt1.c1)) AND (((rt1.c2) ISNULL)))) ORDER BY CAST(((((((((rt0.c0)OR(rt1.c1)))OR(rt0.c1)))AND(rt1.c1)))OR(rt1.c1)) AS INTEGER) DESC, rt0.c0 ASC  NULLS LAST, (((rt0.c2)) BETWEEN (((0Xffffffffca8732ba IN ()))) AND ((CAST(rt1.c3 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) IS FALSE)) NOT BETWEEN (UNLIKELY(DISTINCT rt1.c1)) AND (((rt1.c2) ISNULL)))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON CAST(rt1.c3 AS TEXT) ORDER BY CAST(((((((((rt0.c0)OR(rt1.c1)))OR(rt0.c1)))AND(rt1.c1)))OR(rt1.c1)) AS INTEGER) DESC, rt0.c0 ASC  NULLS LAST, (((rt0.c2)) BETWEEN (((0Xffffffffca8732ba IN ()))) AND ((CAST(rt1.c3 AS NUMERIC)))));
SELECT ALL * FROM rt1 INNER JOIN rt0 ON CAST(rt1.c3 AS TEXT) WHERE (((((rt0.c1) IS FALSE)) NOT BETWEEN (UNLIKELY(DISTINCT rt1.c1)) AND (((rt1.c2) ISNULL)))) ORDER BY CAST(((((((((rt0.c0)OR(rt1.c1)))OR(rt0.c1)))AND(rt1.c1)))OR(rt1.c1)) AS INTEGER) DESC, rt0.c0 ASC  NULLS LAST, (((rt0.c2)) BETWEEN (((0Xffffffffca8732ba IN ()))) AND ((CAST(rt1.c3 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) IS FALSE)) NOT BETWEEN (UNLIKELY(DISTINCT rt1.c1)) AND (((rt1.c2) ISNULL)))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON CAST(rt1.c3 AS TEXT) ORDER BY CAST(((((((((rt0.c0)OR(rt1.c1)))OR(rt0.c1)))AND(rt1.c1)))OR(rt1.c1)) AS INTEGER) DESC, rt0.c0 ASC  NULLS LAST, (((rt0.c2)) BETWEEN (((0Xffffffffca8732ba IN ()))) AND ((CAST(rt1.c3 AS NUMERIC)))));
SELECT ALL * FROM rt1 INNER JOIN rt0 ON CAST(rt1.c3 AS TEXT) WHERE (((((rt0.c1) IS FALSE)) NOT BETWEEN (UNLIKELY(DISTINCT rt1.c1)) AND (((rt1.c2) ISNULL)))) ORDER BY CAST(((((((((rt0.c0)OR(rt1.c1)))OR(rt0.c1)))AND(rt1.c1)))OR(rt1.c1)) AS INTEGER) DESC, rt0.c0 ASC  NULLS LAST, (((rt0.c2)) BETWEEN (((0Xffffffffca8732ba IN ()))) AND ((CAST(rt1.c3 AS NUMERIC))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))<=(rt0.c0))) ORDER BY (rt0.c2 IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))<=(rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c2 IN ()));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))<=(rt0.c0))) ORDER BY (rt0.c2 IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))<=(rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c2 IN ()));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))<=(rt0.c0))) ORDER BY (rt0.c2 IN ());
SELECT * FROM t0 WHERE (((CAST(x'' AS BLOB)) ISNULL)) ORDER BY ((((t0.c0) IS TRUE)) IS FALSE), CAST(((t0.c2)<>(t0.c2)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((CAST(x'' AS BLOB)) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) IS TRUE)) IS FALSE), CAST(((t0.c2)!=(t0.c2)) AS NUMERIC));
SELECT * FROM t0 WHERE (((CAST(x'' AS BLOB)) ISNULL)) ORDER BY ((((t0.c0) IS TRUE)) IS FALSE), CAST(((t0.c2)<>(t0.c2)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((CAST(x'' AS BLOB)) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) IS TRUE)) IS FALSE), CAST(((t0.c2)!=(t0.c2)) AS NUMERIC));
SELECT * FROM t0 WHERE (((CAST(x'' AS BLOB)) ISNULL)) ORDER BY ((((t0.c0) IS TRUE)) IS FALSE), CAST(((t0.c2)<>(t0.c2)) AS NUMERIC);
SELECT ALL COUNT(*) FROM rt0, rt1 CROSS JOIN t0 ON ((((t0.c1 IN ())))=((((t0.c2) NOTNULL)))) WHERE ((((((((((((rt1.c3))<=((rt1.c0))))AND(((-2.006119505E9) BETWEEN (rt0.c1) AND (t0.c2)))))OR(((rt0.c0)<<(rt1.c2)))))AND(CAST(rt1.c3 AS TEXT))))AND((((rt1.c4))>((rt0.c2)))))) ORDER BY CASE WHEN rt1.c0 THEN rt0.c0 WHEN 0.016652244903808233 THEN t0.c2 WHEN '0ᗡ뺻yW툟l>.' THEN rt1.c1 END COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt1.c3))<=((rt1.c0))))AND(((-2.006119505E9) BETWEEN (rt0.c1) AND (t0.c2)))))OR(((rt0.c0)<<(rt1.c2)))))AND(CAST(rt1.c3 AS TEXT))))AND((((rt1.c4))>((rt0.c2)))))) IS TRUE)  as count FROM rt0, rt1 CROSS JOIN t0 ON ((((t0.c1 IN ())))==((((t0.c2) NOTNULL)))) ORDER BY CASE WHEN rt1.c0 THEN rt0.c0 WHEN 0.016652244903808233 THEN t0.c2 WHEN '0ᗡ뺻yW툟l>.' THEN rt1.c1 END COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 CROSS JOIN t0 ON ((((t0.c1 IN ())))=((((t0.c2) NOTNULL)))) WHERE ((((((((((((rt1.c3))<=((rt1.c0))))AND(((-2.006119505E9) BETWEEN (rt0.c1) AND (t0.c2)))))OR(((rt0.c0)<<(rt1.c2)))))AND(CAST(rt1.c3 AS TEXT))))AND((((rt1.c4))>((rt0.c2)))))) ORDER BY CASE WHEN rt1.c0 THEN rt0.c0 WHEN 0.016652244903808233 THEN t0.c2 WHEN '0ᗡ뺻yW툟l>.' THEN rt1.c1 END COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt1.c3))<=((rt1.c0))))AND(((-2.006119505E9) BETWEEN (rt0.c1) AND (t0.c2)))))OR(((rt0.c0)<<(rt1.c2)))))AND(CAST(rt1.c3 AS TEXT))))AND((((rt1.c4))>((rt0.c2)))))) IS TRUE)  as count FROM rt0, rt1 CROSS JOIN t0 ON ((((t0.c1 IN ())))==((((t0.c2) NOTNULL)))) ORDER BY CASE WHEN rt1.c0 THEN rt0.c0 WHEN 0.016652244903808233 THEN t0.c2 WHEN '0ᗡ뺻yW툟l>.' THEN rt1.c1 END COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 CROSS JOIN t0 ON ((((t0.c1 IN ())))=((((t0.c2) NOTNULL)))) WHERE ((((((((((((rt1.c3))<=((rt1.c0))))AND(((-2.006119505E9) BETWEEN (rt0.c1) AND (t0.c2)))))OR(((rt0.c0)<<(rt1.c2)))))AND(CAST(rt1.c3 AS TEXT))))AND((((rt1.c4))>((rt0.c2)))))) ORDER BY CASE WHEN rt1.c0 THEN rt0.c0 WHEN 0.016652244903808233 THEN t0.c2 WHEN '0ᗡ뺻yW툟l>.' THEN rt1.c1 END COLLATE RTRIM  NULLS FIRST;
SELECT ALL * FROM t0 INNER JOIN rt1 ON CASE WHEN ((rt1.c2) IS TRUE) THEN (rt1.c4 IN ()) WHEN ((rt1.c1) BETWEEN (x'') AND (rt1.c3)) THEN (- (NULL)) WHEN rt1.c0 THEN json_patch(rt1.c3, t0.c0) END WHERE (rt1.c4) ORDER BY ((((t0.c1)+(rt1.c1)))OR(((rt1.c3)LIKE(rt1.c4)))) DESC, CASE CASE rt1.c4  WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c4 END  WHEN rt1.c3 COLLATE RTRIM THEN CAST(t0.c2 AS BLOB) WHEN HEX(x'') THEN ((((NULL)OR(t0.c1)))AND(rt1.c0)) WHEN ((rt1.c3) NOTNULL) THEN CASE rt1.c0  WHEN rt1.c1 THEN 0.9695767405569834 ELSE rt1.c2 END WHEN (((rt1.c3))<=((rt1.c2))) THEN 0.15103921749701055 WHEN (- (rt1.c4)) THEN (((rt1.c1)) NOT BETWEEN (('6J')) AND ((rt1.c3))) END DESC  NULLS FIRST, (~ ((((t0.c0))>((rt1.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON CASE WHEN ((rt1.c2) IS TRUE) THEN (rt1.c4 IN ()) WHEN ((rt1.c1) BETWEEN (x'') AND (rt1.c3)) THEN (- (NULL)) WHEN rt1.c0 THEN json_patch(rt1.c3, t0.c0) END ORDER BY ((((t0.c1)+(rt1.c1)))OR(((rt1.c3)LIKE(rt1.c4)))) DESC, CASE CASE rt1.c4  WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c4 END  WHEN rt1.c3 COLLATE RTRIM THEN CAST(t0.c2 AS BLOB) WHEN HEX(x'') THEN ((((NULL)OR(t0.c1)))AND(rt1.c0)) WHEN ((rt1.c3) NOTNULL) THEN CASE rt1.c0  WHEN rt1.c1 THEN 0.9695767405569834 ELSE rt1.c2 END WHEN (((rt1.c3))<=((rt1.c2))) THEN 0.15103921749701055 WHEN (- (rt1.c4)) THEN (((rt1.c1)) NOT BETWEEN (('6J')) AND ((rt1.c3))) END DESC  NULLS FIRST, (~ ((((t0.c0))>((rt1.c1)))))  NULLS LAST);
SELECT ALL * FROM t0 INNER JOIN rt1 ON CASE WHEN ((rt1.c2) IS TRUE) THEN (rt1.c4 IN ()) WHEN ((rt1.c1) BETWEEN (x'') AND (rt1.c3)) THEN (- (NULL)) WHEN rt1.c0 THEN json_patch(rt1.c3, t0.c0) END WHERE (rt1.c4) ORDER BY ((((t0.c1)+(rt1.c1)))OR(((rt1.c3)LIKE(rt1.c4)))) DESC, CASE CASE rt1.c4  WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c4 END  WHEN rt1.c3 COLLATE RTRIM THEN CAST(t0.c2 AS BLOB) WHEN HEX(x'') THEN ((((NULL)OR(t0.c1)))AND(rt1.c0)) WHEN ((rt1.c3) NOTNULL) THEN CASE rt1.c0  WHEN rt1.c1 THEN 0.9695767405569834 ELSE rt1.c2 END WHEN (((rt1.c3))<=((rt1.c2))) THEN 0.15103921749701055 WHEN (- (rt1.c4)) THEN (((rt1.c1)) NOT BETWEEN (('6J')) AND ((rt1.c3))) END DESC  NULLS FIRST, (~ ((((t0.c0))>((rt1.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON CASE WHEN ((rt1.c2) IS TRUE) THEN (rt1.c4 IN ()) WHEN ((rt1.c1) BETWEEN (x'') AND (rt1.c3)) THEN (- (NULL)) WHEN rt1.c0 THEN json_patch(rt1.c3, t0.c0) END ORDER BY ((((t0.c1)+(rt1.c1)))OR(((rt1.c3)LIKE(rt1.c4)))) DESC, CASE CASE rt1.c4  WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c4 END  WHEN rt1.c3 COLLATE RTRIM THEN CAST(t0.c2 AS BLOB) WHEN HEX(x'') THEN ((((NULL)OR(t0.c1)))AND(rt1.c0)) WHEN ((rt1.c3) NOTNULL) THEN CASE rt1.c0  WHEN rt1.c1 THEN 0.9695767405569834 ELSE rt1.c2 END WHEN (((rt1.c3))<=((rt1.c2))) THEN 0.15103921749701055 WHEN (- (rt1.c4)) THEN (((rt1.c1)) NOT BETWEEN (('6J')) AND ((rt1.c3))) END DESC  NULLS FIRST, (~ ((((t0.c0))>((rt1.c1)))))  NULLS LAST);
SELECT ALL * FROM t0 INNER JOIN rt1 ON CASE WHEN ((rt1.c2) IS TRUE) THEN (rt1.c4 IN ()) WHEN ((rt1.c1) BETWEEN (x'') AND (rt1.c3)) THEN (- (NULL)) WHEN rt1.c0 THEN json_patch(rt1.c3, t0.c0) END WHERE (rt1.c4) ORDER BY ((((t0.c1)+(rt1.c1)))OR(((rt1.c3)LIKE(rt1.c4)))) DESC, CASE CASE rt1.c4  WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c4 END  WHEN rt1.c3 COLLATE RTRIM THEN CAST(t0.c2 AS BLOB) WHEN HEX(x'') THEN ((((NULL)OR(t0.c1)))AND(rt1.c0)) WHEN ((rt1.c3) NOTNULL) THEN CASE rt1.c0  WHEN rt1.c1 THEN 0.9695767405569834 ELSE rt1.c2 END WHEN (((rt1.c3))<=((rt1.c2))) THEN 0.15103921749701055 WHEN (- (rt1.c4)) THEN (((rt1.c1)) NOT BETWEEN (('6J')) AND ((rt1.c3))) END DESC  NULLS FIRST, (~ ((((t0.c0))>((rt1.c1)))))  NULLS LAST;
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE ((((((((rt1.c3, rt0.c0, rt0.c1))!=((rt1.c1, rt0.c1, rt1.c4))))AND(((rt1.c1) NOT BETWEEN (t0.c1) AND (rt1.c0)))))OR(t0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c3, rt0.c0, rt0.c1))!=((rt1.c1, rt0.c1, rt1.c4))))AND(((rt1.c1) NOT BETWEEN (t0.c1) AND (rt1.c0)))))OR(t0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE ((((((((rt1.c3, rt0.c0, rt0.c1))!=((rt1.c1, rt0.c1, rt1.c4))))AND(((rt1.c1) NOT BETWEEN (t0.c1) AND (rt1.c0)))))OR(t0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c3, rt0.c0, rt0.c1))!=((rt1.c1, rt0.c1, rt1.c4))))AND(((rt1.c1) NOT BETWEEN (t0.c1) AND (rt1.c0)))))OR(t0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE ((((((((rt1.c3, rt0.c0, rt0.c1))!=((rt1.c1, rt0.c1, rt1.c4))))AND(((rt1.c1) NOT BETWEEN (t0.c1) AND (rt1.c0)))))OR(t0.c2 COLLATE NOCASE)));
SELECT ALL * FROM rt1 WHERE (((CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c4 END)IS((((rt1.c0, rt1.c1, rt1.c4))<=((rt1.c0, 'MK', rt1.c3)))))) ORDER BY ((((((((((((rt1.c2 COLLATE RTRIM)OR((((rt1.c1, 0.27809694317983247, rt1.c3, rt1.c3, rt1.c2))<>((x'', rt1.c2, 1464417741, rt1.c2, rt1.c2))))))OR(((rt1.c4)%(NULL)))))AND(585682496)))OR(((rt1.c4)>=(0.8410458248306433)))))AND(((((rt1.c2)AND(rt1.c2)))OR(0.3575845188445197)))))OR(((rt1.c3)IS NOT(rt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c4 END)IS((((rt1.c0, rt1.c1, rt1.c4))<=((rt1.c0, 'MK', rt1.c3)))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((((((((rt1.c2 COLLATE RTRIM)OR((((rt1.c1, 0.27809694317983247, rt1.c3, rt1.c3, rt1.c2))!=((x'', rt1.c2, 1464417741, rt1.c2, rt1.c2))))))OR(((rt1.c4)%(NULL)))))AND(585682496)))OR(((rt1.c4)>=(0.8410458248306433)))))AND(((((rt1.c2)AND(rt1.c2)))OR(0.3575845188445197)))))OR(((rt1.c3)IS NOT(rt1.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c4 END)IS((((rt1.c0, rt1.c1, rt1.c4))<=((rt1.c0, 'MK', rt1.c3)))))) ORDER BY ((((((((((((rt1.c2 COLLATE RTRIM)OR((((rt1.c1, 0.27809694317983247, rt1.c3, rt1.c3, rt1.c2))<>((x'', rt1.c2, 1464417741, rt1.c2, rt1.c2))))))OR(((rt1.c4)%(NULL)))))AND(585682496)))OR(((rt1.c4)>=(0.8410458248306433)))))AND(((((rt1.c2)AND(rt1.c2)))OR(0.3575845188445197)))))OR(((rt1.c3)IS NOT(rt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c4 END)IS((((rt1.c0, rt1.c1, rt1.c4))<=((rt1.c0, 'MK', rt1.c3)))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((((((((rt1.c2 COLLATE RTRIM)OR((((rt1.c1, 0.27809694317983247, rt1.c3, rt1.c3, rt1.c2))!=((x'', rt1.c2, 1464417741, rt1.c2, rt1.c2))))))OR(((rt1.c4)%(NULL)))))AND(585682496)))OR(((rt1.c4)>=(0.8410458248306433)))))AND(((((rt1.c2)AND(rt1.c2)))OR(0.3575845188445197)))))OR(((rt1.c3)IS NOT(rt1.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c4 END)IS((((rt1.c0, rt1.c1, rt1.c4))<=((rt1.c0, 'MK', rt1.c3)))))) ORDER BY ((((((((((((rt1.c2 COLLATE RTRIM)OR((((rt1.c1, 0.27809694317983247, rt1.c3, rt1.c3, rt1.c2))<>((x'', rt1.c2, 1464417741, rt1.c2, rt1.c2))))))OR(((rt1.c4)%(NULL)))))AND(585682496)))OR(((rt1.c4)>=(0.8410458248306433)))))AND(((((rt1.c2)AND(rt1.c2)))OR(0.3575845188445197)))))OR(((rt1.c3)IS NOT(rt1.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (CASE WHEN ((t0.c0)||(t0.c1)) THEN (-1639002394 IN (0.13872674863282186)) ELSE x'' END) ORDER BY (((((t0.c2, t0.c1, t0.c1))<=((t0.c0, t0.c2, t0.c2))))-((((x'', t0.c0, t0.c2))>=((t0.c0, t0.c1, NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0)||(t0.c1)) THEN (-1639002394 IN (0.13872674863282186)) ELSE x'' END) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c2, t0.c1, t0.c1))<=((t0.c0, t0.c2, t0.c2))))-((((x'', t0.c0, t0.c2))>=((t0.c0, t0.c1, NULL))))));
SELECT ALL * FROM t0 WHERE (CASE WHEN ((t0.c0)||(t0.c1)) THEN (-1639002394 IN (0.13872674863282186)) ELSE x'' END) ORDER BY (((((t0.c2, t0.c1, t0.c1))<=((t0.c0, t0.c2, t0.c2))))-((((x'', t0.c0, t0.c2))>=((t0.c0, t0.c1, NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0)||(t0.c1)) THEN (-1639002394 IN (0.13872674863282186)) ELSE x'' END) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c2, t0.c1, t0.c1))<=((t0.c0, t0.c2, t0.c2))))-((((x'', t0.c0, t0.c2))>=((t0.c0, t0.c1, NULL))))));
SELECT ALL * FROM t0 WHERE (CASE WHEN ((t0.c0)||(t0.c1)) THEN (-1639002394 IN (0.13872674863282186)) ELSE x'' END) ORDER BY (((((t0.c2, t0.c1, t0.c1))<=((t0.c0, t0.c2, t0.c2))))-((((x'', t0.c0, t0.c2))>=((t0.c0, t0.c1, NULL)))));
SELECT COUNT(*) FROM t0, rt1 LEFT OUTER JOIN rt0 ON (+ (CASE rt1.c1  WHEN t0.c1 THEN rt1.c2 END)) WHERE (CASE ((rt0.c0)GLOB(rt1.c1))  WHEN TRIM(rt0.c0) THEN ((rt0.c0)|(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0)GLOB(rt1.c1))  WHEN TRIM(rt0.c0) THEN ((rt0.c0)|(rt0.c0)) END) IS TRUE)  as count FROM t0, rt1 LEFT OUTER JOIN rt0 ON (+ (CASE rt1.c1  WHEN t0.c1 THEN rt1.c2 END)));
SELECT COUNT(*) FROM t0, rt1 LEFT OUTER JOIN rt0 ON (+ (CASE rt1.c1  WHEN t0.c1 THEN rt1.c2 END)) WHERE (CASE ((rt0.c0)GLOB(rt1.c1))  WHEN TRIM(rt0.c0) THEN ((rt0.c0)|(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0)GLOB(rt1.c1))  WHEN TRIM(rt0.c0) THEN ((rt0.c0)|(rt0.c0)) END) IS TRUE)  as count FROM t0, rt1 LEFT OUTER JOIN rt0 ON (+ (CASE rt1.c1  WHEN t0.c1 THEN rt1.c2 END)));
SELECT COUNT(*) FROM t0, rt1 LEFT OUTER JOIN rt0 ON (+ (CASE rt1.c1  WHEN t0.c1 THEN rt1.c2 END)) WHERE (CASE ((rt0.c0)GLOB(rt1.c1))  WHEN TRIM(rt0.c0) THEN ((rt0.c0)|(rt0.c0)) END);
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt1 ON x'' WHERE (((LOWER(DISTINCT rt1.c3))<=(((t0.c1)|(rt1.c2))))) ORDER BY CAST(t0.c2 COLLATE NOCASE AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(DISTINCT rt1.c3))<=(((t0.c1)|(rt1.c2))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt1 ON x'' ORDER BY CAST(t0.c2 COLLATE NOCASE AS NUMERIC) DESC  NULLS LAST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt1 ON x'' WHERE (((LOWER(DISTINCT rt1.c3))<=(((t0.c1)|(rt1.c2))))) ORDER BY CAST(t0.c2 COLLATE NOCASE AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(DISTINCT rt1.c3))<=(((t0.c1)|(rt1.c2))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt1 ON x'' ORDER BY CAST(t0.c2 COLLATE NOCASE AS NUMERIC) DESC  NULLS LAST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt1 ON x'' WHERE (((LOWER(DISTINCT rt1.c3))<=(((t0.c1)|(rt1.c2))))) ORDER BY CAST(t0.c2 COLLATE NOCASE AS NUMERIC) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((UNLIKELY(DISTINCT rt0.c0))LIKE(((((rt1.c3)OR(rt1.c0)))AND(x'ae93'))))) ORDER BY ((((((rt1.c0)LIKE(rt1.c2)))AND(CASE WHEN '597473951' THEN rt1.c1 END)))AND(((rt1.c2)&(rt1.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(DISTINCT rt0.c0))LIKE(((((rt1.c3)OR(rt1.c0)))AND(x'ae93'))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((((rt1.c0)LIKE(rt1.c2)))AND(CASE WHEN '597473951' THEN rt1.c1 END)))AND(((rt1.c2)&(rt1.c3))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((UNLIKELY(DISTINCT rt0.c0))LIKE(((((rt1.c3)OR(rt1.c0)))AND(x'ae93'))))) ORDER BY ((((((rt1.c0)LIKE(rt1.c2)))AND(CASE WHEN '597473951' THEN rt1.c1 END)))AND(((rt1.c2)&(rt1.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(DISTINCT rt0.c0))LIKE(((((rt1.c3)OR(rt1.c0)))AND(x'ae93'))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((((rt1.c0)LIKE(rt1.c2)))AND(CASE WHEN '597473951' THEN rt1.c1 END)))AND(((rt1.c2)&(rt1.c3))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((UNLIKELY(DISTINCT rt0.c0))LIKE(((((rt1.c3)OR(rt1.c0)))AND(x'ae93'))))) ORDER BY ((((((rt1.c0)LIKE(rt1.c2)))AND(CASE WHEN '597473951' THEN rt1.c1 END)))AND(((rt1.c2)&(rt1.c3))))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ('597473951');
SELECT SUM(count) FROM (SELECT (('597473951') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('597473951');
SELECT SUM(count) FROM (SELECT (('597473951') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('597473951');
SELECT COUNT(*) FROM rt0, rt1 NOT INDEXED, t0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c3)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c3)))) IS TRUE)) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT COUNT(*) FROM rt0, rt1 NOT INDEXED, t0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c3)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c3)))) IS TRUE)) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT COUNT(*) FROM rt0, rt1 NOT INDEXED, t0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c3)))) IS TRUE));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((rt1.c3, rt0.c0, rt1.c3)) NOT BETWEEN ((CAST(rt0.c2 AS BLOB), rt1.c4, (~ (rt1.c1)))) AND ((rt1.c1 COLLATE NOCASE, ((rt0.c2)>>(1838061650)), rt1.c4 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3, rt0.c0, rt1.c3)) NOT BETWEEN ((CAST(rt0.c2 AS BLOB), rt1.c4, (~ (rt1.c1)))) AND ((rt1.c1 COLLATE NOCASE, ((rt0.c2)>>(1838061650)), rt1.c4 COLLATE BINARY)))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((rt1.c3, rt0.c0, rt1.c3)) NOT BETWEEN ((CAST(rt0.c2 AS BLOB), rt1.c4, (~ (rt1.c1)))) AND ((rt1.c1 COLLATE NOCASE, ((rt0.c2)>>(1838061650)), rt1.c4 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3, rt0.c0, rt1.c3)) NOT BETWEEN ((CAST(rt0.c2 AS BLOB), rt1.c4, (~ (rt1.c1)))) AND ((rt1.c1 COLLATE NOCASE, ((rt0.c2)>>(1838061650)), rt1.c4 COLLATE BINARY)))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((rt1.c3, rt0.c0, rt1.c3)) NOT BETWEEN ((CAST(rt0.c2 AS BLOB), rt1.c4, (~ (rt1.c1)))) AND ((rt1.c1 COLLATE NOCASE, ((rt0.c2)>>(1838061650)), rt1.c4 COLLATE BINARY))));
SELECT ALL * FROM t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c2);
SELECT ALL * FROM t0 WHERE (((((((((((0.2958072970577542)AND(t0.c0)))AND(t0.c1)))AND(0Xffffffffa0618a3c)))OR(t0.c2)))IS(CASE t0.c0  WHEN t0.c1 THEN x'' END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((0.2958072970577542)AND(t0.c0)))AND(t0.c1)))AND(0Xffffffffa0618a3c)))OR(t0.c2)))IS(CASE t0.c0  WHEN t0.c1 THEN x'' END))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((((((0.2958072970577542)AND(t0.c0)))AND(t0.c1)))AND(0Xffffffffa0618a3c)))OR(t0.c2)))IS(CASE t0.c0  WHEN t0.c1 THEN x'' END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((0.2958072970577542)AND(t0.c0)))AND(t0.c1)))AND(0Xffffffffa0618a3c)))OR(t0.c2)))IS(CASE t0.c0  WHEN t0.c1 THEN x'' END))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((((((0.2958072970577542)AND(t0.c0)))AND(t0.c1)))AND(0Xffffffffa0618a3c)))OR(t0.c2)))IS(CASE t0.c0  WHEN t0.c1 THEN x'' END)));
SELECT COUNT(*) FROM rt0 WHERE (CAST((((rt0.c1, rt0.c0, -935040965, 5.97473951E8, rt0.c0)) BETWEEN ((x'', rt0.c0, '904278988', 0.14472175780293106, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c2))) AS NUMERIC)) ORDER BY CAST(NULL AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c1, rt0.c0, -935040965, 5.97473951E8, rt0.c0)) BETWEEN ((x'', rt0.c0, '904278988', 0.14472175780293106, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c2))) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY CAST(NULL AS TEXT));
SELECT COUNT(*) FROM rt0 WHERE (CAST((((rt0.c1, rt0.c0, -935040965, 5.97473951E8, rt0.c0)) BETWEEN ((x'', rt0.c0, '904278988', 0.14472175780293106, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c2))) AS NUMERIC)) ORDER BY CAST(NULL AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c1, rt0.c0, -935040965, 5.97473951E8, rt0.c0)) BETWEEN ((x'', rt0.c0, '904278988', 0.14472175780293106, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c2))) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY CAST(NULL AS TEXT));
SELECT COUNT(*) FROM rt0 WHERE (CAST((((rt0.c1, rt0.c0, -935040965, 5.97473951E8, rt0.c0)) BETWEEN ((x'', rt0.c0, '904278988', 0.14472175780293106, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c2))) AS NUMERIC)) ORDER BY CAST(NULL AS TEXT);
SELECT * FROM t0, rt1 WHERE ((+ (((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c3))))) ORDER BY CAST(x'b0a7' AS INTEGER), ((((CASE WHEN rt1.c3 THEN x'8abb' WHEN rt1.c0 THEN NULL WHEN t0.c1 THEN x'' END)AND(rt1.c1)))AND(((rt1.c2) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c3))))) IS TRUE)  as count FROM t0, rt1 ORDER BY CAST(x'b0a7' AS INTEGER), ((((CASE WHEN rt1.c3 THEN x'8abb' WHEN rt1.c0 THEN NULL WHEN t0.c1 THEN x'' END)AND(rt1.c1)))AND(((rt1.c2) NOT NULL))));
SELECT * FROM t0, rt1 WHERE ((+ (((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c3))))) ORDER BY CAST(x'b0a7' AS INTEGER), ((((CASE WHEN rt1.c3 THEN x'8abb' WHEN rt1.c0 THEN NULL WHEN t0.c1 THEN x'' END)AND(rt1.c1)))AND(((rt1.c2) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c3))))) IS TRUE)  as count FROM t0, rt1 ORDER BY CAST(x'b0a7' AS INTEGER), ((((CASE WHEN rt1.c3 THEN x'8abb' WHEN rt1.c0 THEN NULL WHEN t0.c1 THEN x'' END)AND(rt1.c1)))AND(((rt1.c2) NOT NULL))));
SELECT * FROM t0, rt1 WHERE ((+ (((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c3))))) ORDER BY CAST(x'b0a7' AS INTEGER), ((((CASE WHEN rt1.c3 THEN x'8abb' WHEN rt1.c0 THEN NULL WHEN t0.c1 THEN x'' END)AND(rt1.c1)))AND(((rt1.c2) NOT NULL)));
SELECT * FROM t0 CROSS JOIN rt0 ON rt0.c2 RIGHT OUTER JOIN rt1 ON ((rt1.c3) IS FALSE) COLLATE NOCASE WHERE ((((((rt0.c2)) NOT BETWEEN (('2038254656')) AND ((rt1.c4)))) NOT BETWEEN (((((rt0.c0)OR(t0.c0)))OR(rt1.c3))) AND (((((((((rt0.c0)OR(rt1.c1)))AND(rt1.c1)))OR(rt0.c2)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) NOT BETWEEN (('2038254656')) AND ((rt1.c4)))) NOT BETWEEN (((((rt0.c0)OR(t0.c0)))OR(rt1.c3))) AND (((((((((rt0.c0)OR(rt1.c1)))AND(rt1.c1)))OR(rt0.c2)))OR(rt0.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON rt0.c2 RIGHT OUTER JOIN rt1 ON ((rt1.c3) IS FALSE) COLLATE NOCASE);
SELECT * FROM t0 CROSS JOIN rt0 ON rt0.c2 RIGHT OUTER JOIN rt1 ON ((rt1.c3) IS FALSE) COLLATE NOCASE WHERE ((((((rt0.c2)) NOT BETWEEN (('2038254656')) AND ((rt1.c4)))) NOT BETWEEN (((((rt0.c0)OR(t0.c0)))OR(rt1.c3))) AND (((((((((rt0.c0)OR(rt1.c1)))AND(rt1.c1)))OR(rt0.c2)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) NOT BETWEEN (('2038254656')) AND ((rt1.c4)))) NOT BETWEEN (((((rt0.c0)OR(t0.c0)))OR(rt1.c3))) AND (((((((((rt0.c0)OR(rt1.c1)))AND(rt1.c1)))OR(rt0.c2)))OR(rt0.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON rt0.c2 RIGHT OUTER JOIN rt1 ON ((rt1.c3) IS FALSE) COLLATE NOCASE);
SELECT * FROM t0 CROSS JOIN rt0 ON rt0.c2 RIGHT OUTER JOIN rt1 ON ((rt1.c3) IS FALSE) COLLATE NOCASE WHERE ((((((rt0.c2)) NOT BETWEEN (('2038254656')) AND ((rt1.c4)))) NOT BETWEEN (((((rt0.c0)OR(t0.c0)))OR(rt1.c3))) AND (((((((((rt0.c0)OR(rt1.c1)))AND(rt1.c1)))OR(rt0.c2)))OR(rt0.c0)))));
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c0)AND(t0.c0)))OR(t0.c1)))OR(t0.c2)))AND(t0.c1)))LIKE(CAST(x'f8a0' AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)AND(t0.c0)))OR(t0.c1)))OR(t0.c2)))AND(t0.c1)))LIKE(CAST(x'f8a0' AS REAL)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c0)AND(t0.c0)))OR(t0.c1)))OR(t0.c2)))AND(t0.c1)))LIKE(CAST(x'f8a0' AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)AND(t0.c0)))OR(t0.c1)))OR(t0.c2)))AND(t0.c1)))LIKE(CAST(x'f8a0' AS REAL)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c0)AND(t0.c0)))OR(t0.c1)))OR(t0.c2)))AND(t0.c1)))LIKE(CAST(x'f8a0' AS REAL))));
SELECT ALL * FROM rt1 WHERE ((((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c4)), (NOT (rt1.c4)), rt1.c2 COLLATE RTRIM))=((CASE 0.3782817941555088  WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c2 END, x'', '-897109318'))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c4)), (NOT (rt1.c4)), rt1.c2 COLLATE RTRIM))==((CASE 0.3782817941555088  WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c2 END, x'', '-897109318')))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c4)), (NOT (rt1.c4)), rt1.c2 COLLATE RTRIM))=((CASE 0.3782817941555088  WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c2 END, x'', '-897109318'))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c4)), (NOT (rt1.c4)), rt1.c2 COLLATE RTRIM))==((CASE 0.3782817941555088  WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c2 END, x'', '-897109318')))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c4)), (NOT (rt1.c4)), rt1.c2 COLLATE RTRIM))=((CASE 0.3782817941555088  WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c2 END, x'', '-897109318'))));
SELECT COUNT(*) FROM rt1, t0 RIGHT OUTER JOIN rt0 ON CAST(CASE rt1.c3  WHEN NULL THEN rt1.c0 END AS BLOB) WHERE ((((((((((rt0.c2)OR(t0.c2)))OR(rt1.c3)))AND(rt1.c1)))AND(t0.c0)) IN ((NOT (t0.c1)), ((rt1.c4)OR(t0.c1)), rt1.c2))) ORDER BY UPPER(DISTINCT ((rt0.c2) BETWEEN (t0.c0) AND (t0.c2)));
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c2)OR(t0.c2)))OR(rt1.c3)))AND(rt1.c1)))AND(t0.c0)) IN ((NOT (t0.c1)), ((rt1.c4)OR(t0.c1)), rt1.c2))) IS TRUE)  as count FROM rt1, t0 RIGHT OUTER JOIN rt0 ON CAST(CASE rt1.c3  WHEN NULL THEN rt1.c0 END AS BLOB) ORDER BY UPPER(DISTINCT ((rt0.c2) BETWEEN (t0.c0) AND (t0.c2))));
SELECT COUNT(*) FROM rt1, t0 RIGHT OUTER JOIN rt0 ON CAST(CASE rt1.c3  WHEN NULL THEN rt1.c0 END AS BLOB) WHERE ((((((((((rt0.c2)OR(t0.c2)))OR(rt1.c3)))AND(rt1.c1)))AND(t0.c0)) IN ((NOT (t0.c1)), ((rt1.c4)OR(t0.c1)), rt1.c2))) ORDER BY UPPER(DISTINCT ((rt0.c2) BETWEEN (t0.c0) AND (t0.c2)));
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c2)OR(t0.c2)))OR(rt1.c3)))AND(rt1.c1)))AND(t0.c0)) IN ((NOT (t0.c1)), ((rt1.c4)OR(t0.c1)), rt1.c2))) IS TRUE)  as count FROM rt1, t0 RIGHT OUTER JOIN rt0 ON CAST(CASE rt1.c3  WHEN NULL THEN rt1.c0 END AS BLOB) ORDER BY UPPER(DISTINCT ((rt0.c2) BETWEEN (t0.c0) AND (t0.c2))));
SELECT COUNT(*) FROM rt1, t0 RIGHT OUTER JOIN rt0 ON CAST(CASE rt1.c3  WHEN NULL THEN rt1.c0 END AS BLOB) WHERE ((((((((((rt0.c2)OR(t0.c2)))OR(rt1.c3)))AND(rt1.c1)))AND(t0.c0)) IN ((NOT (t0.c1)), ((rt1.c4)OR(t0.c1)), rt1.c2))) ORDER BY UPPER(DISTINCT ((rt0.c2) BETWEEN (t0.c0) AND (t0.c2)));
SELECT * FROM t0, rt1 WHERE (CAST(rt1.c3 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c3 AS REAL)) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (CAST(rt1.c3 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c3 AS REAL)) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (CAST(rt1.c3 AS REAL));
SELECT ALL * FROM t0, rt1 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE (t0.c2);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((CAST(rt0.c0 AS BLOB))%(((0.10358922389950886) BETWEEN (t0.c2) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS BLOB))%(((0.10358922389950886) BETWEEN (t0.c2) AND (t0.c0))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((CAST(rt0.c0 AS BLOB))%(((0.10358922389950886) BETWEEN (t0.c2) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS BLOB))%(((0.10358922389950886) BETWEEN (t0.c2) AND (t0.c0))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((CAST(rt0.c0 AS BLOB))%(((0.10358922389950886) BETWEEN (t0.c2) AND (t0.c0)))));
SELECT * FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))) NOTNULL)) ORDER BY ((rt0.c2 COLLATE NOCASE)>(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2 COLLATE NOCASE)>(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))) NOTNULL)) ORDER BY ((rt0.c2 COLLATE NOCASE)>(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2 COLLATE NOCASE)>(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))) NOTNULL)) ORDER BY ((rt0.c2 COLLATE NOCASE)>(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))) ASC  NULLS FIRST;
SELECT * FROM t0, rt0 WHERE (CAST((+ (rt0.c1)) AS INTEGER)) ORDER BY ((CAST(rt0.c0 AS INTEGER))OR(((rt0.c1) BETWEEN (t0.c0) AND (t0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((CAST(rt0.c0 AS INTEGER))OR(((rt0.c1) BETWEEN (t0.c0) AND (t0.c2)))) ASC);
SELECT * FROM t0, rt0 WHERE (CAST((+ (rt0.c1)) AS INTEGER)) ORDER BY ((CAST(rt0.c0 AS INTEGER))OR(((rt0.c1) BETWEEN (t0.c0) AND (t0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((CAST(rt0.c0 AS INTEGER))OR(((rt0.c1) BETWEEN (t0.c0) AND (t0.c2)))) ASC);
SELECT * FROM t0, rt0 WHERE (CAST((+ (rt0.c1)) AS INTEGER)) ORDER BY ((CAST(rt0.c0 AS INTEGER))OR(((rt0.c1) BETWEEN (t0.c0) AND (t0.c2)))) ASC;
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE ((((CASE rt0.c2  WHEN rt0.c2 THEN rt1.c1 END, (((t0.c0)) BETWEEN ((0.016652244903808233)) AND ((rt1.c2))), (((rt1.c1))<>((rt1.c0)))))=(((~ (rt1.c0)), rt0.c0 COLLATE NOCASE, ((rt0.c0)<>(rt1.c4)))))) ORDER BY CAST(CAST(rt1.c3 AS TEXT) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((CASE rt0.c2  WHEN rt0.c2 THEN rt1.c1 END, (((t0.c0)) BETWEEN ((0.016652244903808233)) AND ((rt1.c2))), (((rt1.c1))!=((rt1.c0)))))=(((~ (rt1.c0)), rt0.c0 COLLATE NOCASE, ((rt0.c0)!=(rt1.c4)))))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY CAST(CAST(rt1.c3 AS TEXT) AS INTEGER) ASC);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE ((((CASE rt0.c2  WHEN rt0.c2 THEN rt1.c1 END, (((t0.c0)) BETWEEN ((0.016652244903808233)) AND ((rt1.c2))), (((rt1.c1))<>((rt1.c0)))))=(((~ (rt1.c0)), rt0.c0 COLLATE NOCASE, ((rt0.c0)<>(rt1.c4)))))) ORDER BY CAST(CAST(rt1.c3 AS TEXT) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((CASE rt0.c2  WHEN rt0.c2 THEN rt1.c1 END, (((t0.c0)) BETWEEN ((0.016652244903808233)) AND ((rt1.c2))), (((rt1.c1))!=((rt1.c0)))))=(((~ (rt1.c0)), rt0.c0 COLLATE NOCASE, ((rt0.c0)!=(rt1.c4)))))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY CAST(CAST(rt1.c3 AS TEXT) AS INTEGER) ASC);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE ((((CASE rt0.c2  WHEN rt0.c2 THEN rt1.c1 END, (((t0.c0)) BETWEEN ((0.016652244903808233)) AND ((rt1.c2))), (((rt1.c1))<>((rt1.c0)))))=(((~ (rt1.c0)), rt0.c0 COLLATE NOCASE, ((rt0.c0)<>(rt1.c4)))))) ORDER BY CAST(CAST(rt1.c3 AS TEXT) AS INTEGER) ASC;
SELECT * FROM t0, rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((((rt1.c1)*(rt1.c1)))) AND ((((((rt1.c2)AND(rt1.c0)))OR(rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) NOT BETWEEN ((((rt1.c1)*(rt1.c1)))) AND ((((((rt1.c2)AND(rt1.c0)))OR(rt1.c2)))))) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((((rt1.c1)*(rt1.c1)))) AND ((((((rt1.c2)AND(rt1.c0)))OR(rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) NOT BETWEEN ((((rt1.c1)*(rt1.c1)))) AND ((((((rt1.c2)AND(rt1.c0)))OR(rt1.c2)))))) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((((rt1.c1)*(rt1.c1)))) AND ((((((rt1.c2)AND(rt1.c0)))OR(rt1.c2))))));
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (((((rt1.c3) BETWEEN (rt0.c1) AND (t0.c0))) IS FALSE)) ORDER BY ((IFNULL(t0.c2, t0.c1)) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3) BETWEEN (rt0.c1) AND (t0.c0))) IS FALSE)) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY ((IFNULL(t0.c2, t0.c1)) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (((((rt1.c3) BETWEEN (rt0.c1) AND (t0.c0))) IS FALSE)) ORDER BY ((IFNULL(t0.c2, t0.c1)) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3) BETWEEN (rt0.c1) AND (t0.c0))) IS FALSE)) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY ((IFNULL(t0.c2, t0.c1)) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (((((rt1.c3) BETWEEN (rt0.c1) AND (t0.c0))) IS FALSE)) ORDER BY ((IFNULL(t0.c2, t0.c1)) NOT NULL) DESC;
SELECT * FROM rt1 WHERE (((((rt1.c3) NOT NULL))<<(IFNULL(rt1.c1, rt1.c0)))) ORDER BY ((((rt1.c2)IS NOT(x'')))LIKE(CASE WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c4 WHEN NULL THEN rt1.c4 ELSE rt1.c3 END));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3) NOT NULL))<<(IFNULL(rt1.c1, rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2)IS NOT(x'')))LIKE(CASE WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c4 WHEN NULL THEN rt1.c4 ELSE rt1.c3 END)));
SELECT * FROM rt1 WHERE (((((rt1.c3) NOT NULL))<<(IFNULL(rt1.c1, rt1.c0)))) ORDER BY ((((rt1.c2)IS NOT(x'')))LIKE(CASE WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c4 WHEN NULL THEN rt1.c4 ELSE rt1.c3 END));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3) NOT NULL))<<(IFNULL(rt1.c1, rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2)IS NOT(x'')))LIKE(CASE WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c4 WHEN NULL THEN rt1.c4 ELSE rt1.c3 END)));
SELECT * FROM rt1 WHERE (((((rt1.c3) NOT NULL))<<(IFNULL(rt1.c1, rt1.c0)))) ORDER BY ((((rt1.c2)IS NOT(x'')))LIKE(CASE WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c4 WHEN NULL THEN rt1.c4 ELSE rt1.c3 END));
SELECT * FROM rt1, rt0 WHERE (LENGTH((((rt0.c2))<((rt1.c4)))));
SELECT SUM(count) FROM (SELECT ((LENGTH((((rt0.c2))<((rt1.c4))))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (LENGTH((((rt0.c2))<((rt1.c4)))));
SELECT SUM(count) FROM (SELECT ((LENGTH((((rt0.c2))<((rt1.c4))))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (LENGTH((((rt0.c2))<((rt1.c4)))));
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY (('-508764993') NOT BETWEEN (CASE 0.3485901583037583  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END) AND (((rt0.c2)<<(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 ORDER BY (('-508764993') NOT BETWEEN (CASE 0.3485901583037583  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END) AND (((rt0.c2)<<(rt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY (('-508764993') NOT BETWEEN (CASE 0.3485901583037583  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END) AND (((rt0.c2)<<(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 ORDER BY (('-508764993') NOT BETWEEN (CASE 0.3485901583037583  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END) AND (((rt0.c2)<<(rt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY (('-508764993') NOT BETWEEN (CASE 0.3485901583037583  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END) AND (((rt0.c2)<<(rt0.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN rt0 WHERE (SUBSTR(((rt0.c2)|(rt0.c0)), CASE rt1.c2  WHEN rt0.c2 THEN NULL WHEN rt1.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt1.c4 WHEN '' THEN rt1.c3 WHEN rt1.c0 THEN rt0.c2 ELSE rt1.c0 END));
SELECT SUM(count) FROM (SELECT ((SUBSTR(((rt0.c2)|(rt0.c0)), CASE rt1.c2  WHEN rt0.c2 THEN NULL WHEN rt1.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt1.c4 WHEN '' THEN rt1.c3 WHEN rt1.c0 THEN rt0.c2 ELSE rt1.c0 END)) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN rt0 WHERE (SUBSTR(((rt0.c2)|(rt0.c0)), CASE rt1.c2  WHEN rt0.c2 THEN NULL WHEN rt1.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt1.c4 WHEN '' THEN rt1.c3 WHEN rt1.c0 THEN rt0.c2 ELSE rt1.c0 END));
SELECT SUM(count) FROM (SELECT ((SUBSTR(((rt0.c2)|(rt0.c0)), CASE rt1.c2  WHEN rt0.c2 THEN NULL WHEN rt1.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt1.c4 WHEN '' THEN rt1.c3 WHEN rt1.c0 THEN rt0.c2 ELSE rt1.c0 END)) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN rt0 WHERE (SUBSTR(((rt0.c2)|(rt0.c0)), CASE rt1.c2  WHEN rt0.c2 THEN NULL WHEN rt1.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt1.c4 WHEN '' THEN rt1.c3 WHEN rt1.c0 THEN rt0.c2 ELSE rt1.c0 END));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((NOT (x''))) ORDER BY CAST(((rt0.c1)|(rt0.c1)) AS REAL), ((t0.c0) BETWEEN (NULLIF(DISTINCT rt0.c1, rt0.c1)) AND (((((((((t0.c1)OR(rt0.c2)))AND(rt0.c2)))OR(t0.c1)))AND(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (x''))) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST(((rt0.c1)|(rt0.c1)) AS REAL), ((t0.c0) BETWEEN (NULLIF(DISTINCT rt0.c1, rt0.c1)) AND (((((((((t0.c1)OR(rt0.c2)))AND(rt0.c2)))OR(t0.c1)))AND(rt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((NOT (x''))) ORDER BY CAST(((rt0.c1)|(rt0.c1)) AS REAL), ((t0.c0) BETWEEN (NULLIF(DISTINCT rt0.c1, rt0.c1)) AND (((((((((t0.c1)OR(rt0.c2)))AND(rt0.c2)))OR(t0.c1)))AND(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (x''))) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST(((rt0.c1)|(rt0.c1)) AS REAL), ((t0.c0) BETWEEN (NULLIF(DISTINCT rt0.c1, rt0.c1)) AND (((((((((t0.c1)OR(rt0.c2)))AND(rt0.c2)))OR(t0.c1)))AND(rt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((NOT (x''))) ORDER BY CAST(((rt0.c1)|(rt0.c1)) AS REAL), ((t0.c0) BETWEEN (NULLIF(DISTINCT rt0.c1, rt0.c1)) AND (((((((((t0.c1)OR(rt0.c2)))AND(rt0.c2)))OR(t0.c1)))AND(rt0.c1))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c2 COLLATE RTRIM)AND((rt0.c0 IN ()))))OR(CAST(rt0.c0 AS REAL))))OR(rt0.c2 COLLATE NOCASE)))OR(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2 COLLATE RTRIM)AND((rt0.c0 IN ()))))OR(CAST(rt0.c0 AS REAL))))OR(rt0.c2 COLLATE NOCASE)))OR(rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c2 COLLATE RTRIM)AND((rt0.c0 IN ()))))OR(CAST(rt0.c0 AS REAL))))OR(rt0.c2 COLLATE NOCASE)))OR(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2 COLLATE RTRIM)AND((rt0.c0 IN ()))))OR(CAST(rt0.c0 AS REAL))))OR(rt0.c2 COLLATE NOCASE)))OR(rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c2 COLLATE RTRIM)AND((rt0.c0 IN ()))))OR(CAST(rt0.c0 AS REAL))))OR(rt0.c2 COLLATE NOCASE)))OR(rt0.c0)));
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (((((rt1.c0) NOT BETWEEN (rt1.c3) AND (t0.c0)))=((~ (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) NOT BETWEEN (rt1.c3) AND (t0.c0)))=((~ (rt1.c2))))) IS TRUE)  as count FROM rt0, t0, rt1 NOT INDEXED);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (((((rt1.c0) NOT BETWEEN (rt1.c3) AND (t0.c0)))=((~ (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) NOT BETWEEN (rt1.c3) AND (t0.c0)))=((~ (rt1.c2))))) IS TRUE)  as count FROM rt0, t0, rt1 NOT INDEXED);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (((((rt1.c0) NOT BETWEEN (rt1.c3) AND (t0.c0)))=((~ (rt1.c2)))));
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (((rt1.c1) NOTNULL) COLLATE RTRIM) ORDER BY CASE CAST(rt1.c1 AS INTEGER)  WHEN rt1.c4 COLLATE BINARY THEN ((((x'')OR(rt0.c0)))OR(rt1.c3)) ELSE ((NULL)>(rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((rt1.c1) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY CASE CAST(rt1.c1 AS INTEGER)  WHEN rt1.c4 COLLATE BINARY THEN ((((x'')OR(rt0.c0)))OR(rt1.c3)) ELSE ((NULL)>(rt0.c0)) END);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (((rt1.c1) NOTNULL) COLLATE RTRIM) ORDER BY CASE CAST(rt1.c1 AS INTEGER)  WHEN rt1.c4 COLLATE BINARY THEN ((((x'')OR(rt0.c0)))OR(rt1.c3)) ELSE ((NULL)>(rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((rt1.c1) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY CASE CAST(rt1.c1 AS INTEGER)  WHEN rt1.c4 COLLATE BINARY THEN ((((x'')OR(rt0.c0)))OR(rt1.c3)) ELSE ((NULL)>(rt0.c0)) END);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (((rt1.c1) NOTNULL) COLLATE RTRIM) ORDER BY CASE CAST(rt1.c1 AS INTEGER)  WHEN rt1.c4 COLLATE BINARY THEN ((((x'')OR(rt0.c0)))OR(rt1.c3)) ELSE ((NULL)>(rt0.c0)) END;
SELECT ALL * FROM rt1 WHERE ((((+ (rt1.c1))) BETWEEN (((rt1.c3) NOTNULL)) AND ((rt1.c4 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt1.c1))) BETWEEN (((rt1.c3) NOTNULL)) AND ((rt1.c4 IN ())))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((+ (rt1.c1))) BETWEEN (((rt1.c3) NOTNULL)) AND ((rt1.c4 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt1.c1))) BETWEEN (((rt1.c3) NOTNULL)) AND ((rt1.c4 IN ())))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((+ (rt1.c1))) BETWEEN (((rt1.c3) NOTNULL)) AND ((rt1.c4 IN ()))));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (NULLIF(((((rt1.c4)AND(rt1.c1)))OR(rt1.c2)), rt1.c3 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((((rt1.c4)AND(rt1.c1)))OR(rt1.c2)), rt1.c3 COLLATE BINARY)) IS TRUE)  as count FROM t0, rt1);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (NULLIF(((((rt1.c4)AND(rt1.c1)))OR(rt1.c2)), rt1.c3 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((((rt1.c4)AND(rt1.c1)))OR(rt1.c2)), rt1.c3 COLLATE BINARY)) IS TRUE)  as count FROM t0, rt1);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (NULLIF(((((rt1.c4)AND(rt1.c1)))OR(rt1.c2)), rt1.c3 COLLATE BINARY));
SELECT * FROM rt0 FULL OUTER JOIN t0 ON rt1.c3 INNER JOIN rt1 ON (+ (((rt1.c1)>>(t0.c2)))) WHERE (((((((((rt0.c0)AND(t0.c2)))OR(t0.c0)))AND(CAST(NULL AS BLOB))))AND(rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c0)AND(t0.c2)))OR(t0.c0)))AND(CAST(NULL AS BLOB))))AND(rt1.c2))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON rt1.c3 INNER JOIN rt1 ON (+ (((rt1.c1)>>(t0.c2)))));
SELECT * FROM rt0 FULL OUTER JOIN t0 ON rt1.c3 INNER JOIN rt1 ON (+ (((rt1.c1)>>(t0.c2)))) WHERE (((((((((rt0.c0)AND(t0.c2)))OR(t0.c0)))AND(CAST(NULL AS BLOB))))AND(rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c0)AND(t0.c2)))OR(t0.c0)))AND(CAST(NULL AS BLOB))))AND(rt1.c2))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON rt1.c3 INNER JOIN rt1 ON (+ (((rt1.c1)>>(t0.c2)))));
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON (((t0.c1, rt0.c2, t0.c2)) NOT BETWEEN (((~ (t0.c1)), (rt0.c2 IN (t0.c1)), ((rt0.c0)LIKE(t0.c1)))) AND (((t0.c2 IN ()), ((rt0.c0)<(t0.c1)), (rt0.c1 IN (rt0.c1))))) WHERE ('1769203893');
SELECT SUM(count) FROM (SELECT ALL (('1769203893') IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (((t0.c1, rt0.c2, t0.c2)) NOT BETWEEN (((~ (t0.c1)), (rt0.c2 IN (t0.c1)), ((rt0.c0)LIKE(t0.c1)))) AND (((t0.c2 IN ()), ((rt0.c0)<(t0.c1)), (rt0.c1 IN (rt0.c1))))));
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON (((t0.c1, rt0.c2, t0.c2)) NOT BETWEEN (((~ (t0.c1)), (rt0.c2 IN (t0.c1)), ((rt0.c0)LIKE(t0.c1)))) AND (((t0.c2 IN ()), ((rt0.c0)<(t0.c1)), (rt0.c1 IN (rt0.c1))))) WHERE ('1769203893');
SELECT SUM(count) FROM (SELECT ALL (('1769203893') IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (((t0.c1, rt0.c2, t0.c2)) NOT BETWEEN (((~ (t0.c1)), (rt0.c2 IN (t0.c1)), ((rt0.c0)LIKE(t0.c1)))) AND (((t0.c2 IN ()), ((rt0.c0)<(t0.c1)), (rt0.c1 IN (rt0.c1))))));
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON (((t0.c1, rt0.c2, t0.c2)) NOT BETWEEN (((~ (t0.c1)), (rt0.c2 IN (t0.c1)), ((rt0.c0)LIKE(t0.c1)))) AND (((t0.c2 IN ()), ((rt0.c0)<(t0.c1)), (rt0.c1 IN (rt0.c1))))) WHERE ('1769203893');
SELECT ALL * FROM rt1, t0, rt0 WHERE ((((+ (rt1.c1))) NOT BETWEEN ((((rt1.c3, NULL, t0.c2))!=((rt1.c4, t0.c1, rt1.c2)))) AND (0.5836082436011308)));
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c1))) NOT BETWEEN ((((rt1.c3, NULL, t0.c2))!=((rt1.c4, t0.c1, rt1.c2)))) AND (0.5836082436011308))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL * FROM rt1, t0, rt0 WHERE ((((+ (rt1.c1))) NOT BETWEEN ((((rt1.c3, NULL, t0.c2))!=((rt1.c4, t0.c1, rt1.c2)))) AND (0.5836082436011308)));
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c1))) NOT BETWEEN ((((rt1.c3, NULL, t0.c2))!=((rt1.c4, t0.c1, rt1.c2)))) AND (0.5836082436011308))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL * FROM rt1, t0, rt0 WHERE ((((+ (rt1.c1))) NOT BETWEEN ((((rt1.c3, NULL, t0.c2))!=((rt1.c4, t0.c1, rt1.c2)))) AND (0.5836082436011308)));
SELECT ALL COUNT(*) FROM rt1, rt0 FULL OUTER JOIN t0 ON ((((rt1.c0) IS TRUE))>(((((((((rt1.c3)OR(rt1.c2)))OR(rt1.c3)))AND(rt0.c2)))OR(rt0.c0)))) WHERE (((CASE rt1.c4  WHEN rt1.c4 THEN rt0.c0 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 END) NOT BETWEEN (HEX(DISTINCT x'')) AND (((((rt1.c1)OR(t0.c0)))OR(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c4  WHEN rt1.c4 THEN rt0.c0 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 END) NOT BETWEEN (HEX(DISTINCT x'')) AND (((((rt1.c1)OR(t0.c0)))OR(t0.c2))))) IS TRUE)  as count FROM rt1, rt0 FULL OUTER JOIN t0 ON ((((rt1.c0) IS TRUE))>(((((((((rt1.c3)OR(rt1.c2)))OR(rt1.c3)))AND(rt0.c2)))OR(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt1, rt0 FULL OUTER JOIN t0 ON ((((rt1.c0) IS TRUE))>(((((((((rt1.c3)OR(rt1.c2)))OR(rt1.c3)))AND(rt0.c2)))OR(rt0.c0)))) WHERE (((CASE rt1.c4  WHEN rt1.c4 THEN rt0.c0 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 END) NOT BETWEEN (HEX(DISTINCT x'')) AND (((((rt1.c1)OR(t0.c0)))OR(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c4  WHEN rt1.c4 THEN rt0.c0 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 END) NOT BETWEEN (HEX(DISTINCT x'')) AND (((((rt1.c1)OR(t0.c0)))OR(t0.c2))))) IS TRUE)  as count FROM rt1, rt0 FULL OUTER JOIN t0 ON ((((rt1.c0) IS TRUE))>(((((((((rt1.c3)OR(rt1.c2)))OR(rt1.c3)))AND(rt0.c2)))OR(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt1, rt0 FULL OUTER JOIN t0 ON ((((rt1.c0) IS TRUE))>(((((((((rt1.c3)OR(rt1.c2)))OR(rt1.c3)))AND(rt0.c2)))OR(rt0.c0)))) WHERE (((CASE rt1.c4  WHEN rt1.c4 THEN rt0.c0 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 END) NOT BETWEEN (HEX(DISTINCT x'')) AND (((((rt1.c1)OR(t0.c0)))OR(t0.c2)))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((t0.c0)) BETWEEN ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN t0.c1 THEN 0.9180198193260684 ELSE t0.c0 END)) AND ((((((rt0.c0)AND(t0.c1)))AND(t0.c2)))))) ORDER BY ((rt0.c1)AND(t0.c1)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0)) BETWEEN ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN t0.c1 THEN 0.9180198193260684 ELSE t0.c0 END)) AND ((((((rt0.c0)AND(t0.c1)))AND(t0.c2)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((rt0.c1)AND(t0.c1)) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((t0.c0)) BETWEEN ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN t0.c1 THEN 0.9180198193260684 ELSE t0.c0 END)) AND ((((((rt0.c0)AND(t0.c1)))AND(t0.c2)))))) ORDER BY ((rt0.c1)AND(t0.c1)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0)) BETWEEN ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN t0.c1 THEN 0.9180198193260684 ELSE t0.c0 END)) AND ((((((rt0.c0)AND(t0.c1)))AND(t0.c2)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((rt0.c1)AND(t0.c1)) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((t0.c0)) BETWEEN ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN t0.c1 THEN 0.9180198193260684 ELSE t0.c0 END)) AND ((((((rt0.c0)AND(t0.c1)))AND(t0.c2)))))) ORDER BY ((rt0.c1)AND(t0.c1)) COLLATE RTRIM DESC  NULLS LAST;
SELECT * FROM rt0, rt1 WHERE (((((CASE rt0.c1  WHEN rt1.c1 THEN 0.754904013504715 WHEN rt0.c2 THEN rt0.c2 WHEN '跆' THEN rt0.c2 END)AND(TRIM(DISTINCT rt0.c2, rt0.c0))))OR(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c1  WHEN rt1.c1 THEN 0.754904013504715 WHEN rt0.c2 THEN rt0.c2 WHEN '跆' THEN rt0.c2 END)AND(TRIM(DISTINCT rt0.c2, rt0.c0))))OR(rt0.c0))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (((((CASE rt0.c1  WHEN rt1.c1 THEN 0.754904013504715 WHEN rt0.c2 THEN rt0.c2 WHEN '跆' THEN rt0.c2 END)AND(TRIM(DISTINCT rt0.c2, rt0.c0))))OR(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c1  WHEN rt1.c1 THEN 0.754904013504715 WHEN rt0.c2 THEN rt0.c2 WHEN '跆' THEN rt0.c2 END)AND(TRIM(DISTINCT rt0.c2, rt0.c0))))OR(rt0.c0))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (((((CASE rt0.c1  WHEN rt1.c1 THEN 0.754904013504715 WHEN rt0.c2 THEN rt0.c2 WHEN '跆' THEN rt0.c2 END)AND(TRIM(DISTINCT rt0.c2, rt0.c0))))OR(rt0.c0)));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON ((rt1.c4 COLLATE RTRIM)LIKE(CASE rt0.c1  WHEN rt1.c4 THEN t0.c2 ELSE t0.c1 END)) LEFT OUTER JOIN t0 ON (NOT (t0.c2)) WHERE ((((((t0.c1)) BETWEEN ((rt0.c2)) AND ((t0.c2)))) NOTNULL)) ORDER BY ((((rt1.c1)/(rt1.c0))) NOT BETWEEN ('944447895') AND (rtreenode(rt1.c3, t0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c1)) BETWEEN ((rt0.c2)) AND ((t0.c2)))) NOTNULL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON ((rt1.c4 COLLATE RTRIM)LIKE(CASE rt0.c1  WHEN rt1.c4 THEN t0.c2 ELSE t0.c1 END)) LEFT OUTER JOIN t0 ON (NOT (t0.c2)) ORDER BY ((((rt1.c1)/(rt1.c0))) NOT BETWEEN ('944447895') AND (rtreenode(rt1.c3, t0.c0))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON ((rt1.c4 COLLATE RTRIM)LIKE(CASE rt0.c1  WHEN rt1.c4 THEN t0.c2 ELSE t0.c1 END)) LEFT OUTER JOIN t0 ON (NOT (t0.c2)) WHERE ((((((t0.c1)) BETWEEN ((rt0.c2)) AND ((t0.c2)))) NOTNULL)) ORDER BY ((((rt1.c1)/(rt1.c0))) NOT BETWEEN ('944447895') AND (rtreenode(rt1.c3, t0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c1)) BETWEEN ((rt0.c2)) AND ((t0.c2)))) NOTNULL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON ((rt1.c4 COLLATE RTRIM)LIKE(CASE rt0.c1  WHEN rt1.c4 THEN t0.c2 ELSE t0.c1 END)) LEFT OUTER JOIN t0 ON (NOT (t0.c2)) ORDER BY ((((rt1.c1)/(rt1.c0))) NOT BETWEEN ('944447895') AND (rtreenode(rt1.c3, t0.c0))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN rt1 ON (~ ((((rt1.c0))>((rt1.c1))))) WHERE ((((NOT (rt1.c1))) NOT BETWEEN (((rt1.c4) ISNULL)) AND (((rt0.c2)+(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c1))) NOT BETWEEN (((rt1.c4) ISNULL)) AND (((rt0.c2)+(rt0.c1))))) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON (~ ((((rt1.c0))>((rt1.c1))))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN rt1 ON (~ ((((rt1.c0))>((rt1.c1))))) WHERE ((((NOT (rt1.c1))) NOT BETWEEN (((rt1.c4) ISNULL)) AND (((rt0.c2)+(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c1))) NOT BETWEEN (((rt1.c4) ISNULL)) AND (((rt0.c2)+(rt0.c1))))) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON (~ ((((rt1.c0))>((rt1.c1))))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN rt1 ON (~ ((((rt1.c0))>((rt1.c1))))) WHERE ((((NOT (rt1.c1))) NOT BETWEEN (((rt1.c4) ISNULL)) AND (((rt0.c2)+(rt0.c1)))));
SELECT ALL * FROM rt0, rt1, t0 WHERE ((+ (((rt1.c1)IS NOT(rt1.c1))))) ORDER BY ((((rt1.c1)LIKE(rt1.c4))) ISNULL) ASC  NULLS FIRST, (((-104159102 IN ('', t0.c1)))IS(((rt0.c2) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c1)IS NOT(rt1.c1))))) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY ((((rt1.c1)LIKE(rt1.c4))) ISNULL) ASC  NULLS FIRST, (((-104159102 IN ('', t0.c1)))IS(((rt0.c2) NOT NULL))) DESC);
SELECT ALL * FROM rt0, rt1, t0 WHERE ((+ (((rt1.c1)IS NOT(rt1.c1))))) ORDER BY ((((rt1.c1)LIKE(rt1.c4))) ISNULL) ASC  NULLS FIRST, (((-104159102 IN ('', t0.c1)))IS(((rt0.c2) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c1)IS NOT(rt1.c1))))) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY ((((rt1.c1)LIKE(rt1.c4))) ISNULL) ASC  NULLS FIRST, (((-104159102 IN ('', t0.c1)))IS(((rt0.c2) NOT NULL))) DESC);
SELECT ALL * FROM rt0, rt1, t0 WHERE ((+ (((rt1.c1)IS NOT(rt1.c1))))) ORDER BY ((((rt1.c1)LIKE(rt1.c4))) ISNULL) ASC  NULLS FIRST, (((-104159102 IN ('', t0.c1)))IS(((rt0.c2) NOT NULL))) DESC;
SELECT ALL * FROM t0, rt1, rt0 WHERE (CASE ((((t0.c1)AND(t0.c2)))AND(rt0.c2))  WHEN '765106262' THEN CASE WHEN rt1.c4 THEN rt1.c4 END ELSE ((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt0.c0)) END) ORDER BY ((((x'')AND(t0.c0 COLLATE RTRIM)))AND(((rt1.c1) IS FALSE))) ASC, (((t0.c1)AND(t0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((((t0.c1)AND(t0.c2)))AND(rt0.c2))  WHEN '765106262' THEN CASE WHEN rt1.c4 THEN rt1.c4 END ELSE ((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt0.c0)) END) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY ((((x'')AND(t0.c0 COLLATE RTRIM)))AND(((rt1.c1) IS FALSE))) ASC, (((t0.c1)AND(t0.c0)) IN ()) DESC);
SELECT ALL * FROM t0, rt1, rt0 WHERE (CASE ((((t0.c1)AND(t0.c2)))AND(rt0.c2))  WHEN '765106262' THEN CASE WHEN rt1.c4 THEN rt1.c4 END ELSE ((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt0.c0)) END) ORDER BY ((((x'')AND(t0.c0 COLLATE RTRIM)))AND(((rt1.c1) IS FALSE))) ASC, (((t0.c1)AND(t0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((((t0.c1)AND(t0.c2)))AND(rt0.c2))  WHEN '765106262' THEN CASE WHEN rt1.c4 THEN rt1.c4 END ELSE ((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt0.c0)) END) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY ((((x'')AND(t0.c0 COLLATE RTRIM)))AND(((rt1.c1) IS FALSE))) ASC, (((t0.c1)AND(t0.c0)) IN ()) DESC);
SELECT ALL * FROM t0, rt1, rt0 WHERE (CASE ((((t0.c1)AND(t0.c2)))AND(rt0.c2))  WHEN '765106262' THEN CASE WHEN rt1.c4 THEN rt1.c4 END ELSE ((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt0.c0)) END) ORDER BY ((((x'')AND(t0.c0 COLLATE RTRIM)))AND(((rt1.c1) IS FALSE))) ASC, (((t0.c1)AND(t0.c0)) IN ()) DESC;
SELECT * FROM t0 WHERE (((t0.c0 COLLATE NOCASE)<=(((t0.c0)<=(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE NOCASE)<=(((t0.c0)<=(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0 COLLATE NOCASE)<=(((t0.c0)<=(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE NOCASE)<=(((t0.c0)<=(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0 COLLATE NOCASE)<=(((t0.c0)<=(t0.c2)))));
SELECT * FROM t0 CROSS JOIN rt1 ON (((((t0.c2)OR(rt1.c3)))AND(t0.c1)) IN ((NOT (t0.c2)))) CROSS JOIN rt0 ON (CASE t0.c0  WHEN 3.50877944E8 THEN t0.c1 ELSE rt1.c2 END IN ()) WHERE (((((t0.c2)|(rt1.c0)))<>(CASE WHEN t0.c2 THEN rt1.c0 END))) ORDER BY (((rt1.c1) NOT NULL) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)|(rt1.c0)))<>(CASE WHEN t0.c2 THEN rt1.c0 END))) IS TRUE)  as count FROM t0 NOT INDEXED CROSS JOIN rt1 ON (((((t0.c2)OR(rt1.c3)))AND(t0.c1)) IN ((NOT (t0.c2)))) CROSS JOIN rt0 ON (CASE t0.c0  WHEN 3.50877944E8 THEN t0.c1 ELSE rt1.c2 END IN ()) ORDER BY (((rt1.c1) NOT NULL) IN ()) ASC  NULLS LAST);
SELECT * FROM t0 CROSS JOIN rt1 ON (((((t0.c2)OR(rt1.c3)))AND(t0.c1)) IN ((NOT (t0.c2)))) CROSS JOIN rt0 ON (CASE t0.c0  WHEN 3.50877944E8 THEN t0.c1 ELSE rt1.c2 END IN ()) WHERE (((((t0.c2)|(rt1.c0)))<>(CASE WHEN t0.c2 THEN rt1.c0 END))) ORDER BY (((rt1.c1) NOT NULL) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)|(rt1.c0)))<>(CASE WHEN t0.c2 THEN rt1.c0 END))) IS TRUE)  as count FROM t0 NOT INDEXED CROSS JOIN rt1 ON (((((t0.c2)OR(rt1.c3)))AND(t0.c1)) IN ((NOT (t0.c2)))) CROSS JOIN rt0 ON (CASE t0.c0  WHEN 3.50877944E8 THEN t0.c1 ELSE rt1.c2 END IN ()) ORDER BY (((rt1.c1) NOT NULL) IN ()) ASC  NULLS LAST);
SELECT * FROM t0 CROSS JOIN rt1 ON (((((t0.c2)OR(rt1.c3)))AND(t0.c1)) IN ((NOT (t0.c2)))) CROSS JOIN rt0 ON (CASE t0.c0  WHEN 3.50877944E8 THEN t0.c1 ELSE rt1.c2 END IN ()) WHERE (((((t0.c2)|(rt1.c0)))<>(CASE WHEN t0.c2 THEN rt1.c0 END))) ORDER BY (((rt1.c1) NOT NULL) IN ()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN t0.c0 THEN rt1.c2 END)<(((rt1.c0)|(t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN t0.c0 THEN rt1.c2 END)<(((rt1.c0)|(t0.c1))))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN t0.c0 THEN rt1.c2 END)<(((rt1.c0)|(t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN t0.c0 THEN rt1.c2 END)<(((rt1.c0)|(t0.c1))))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN t0.c0 THEN rt1.c2 END)<(((rt1.c0)|(t0.c1)))));
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c4) NOT BETWEEN ((rt1.c0 IN ())) AND (QUOTE(rt1.c2)))) ORDER BY ((CASE rt1.c4  WHEN '2\n1┼' THEN rt1.c2 ELSE rt1.c4 END) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c4) NOT BETWEEN ((rt1.c0 IN ())) AND (QUOTE(rt1.c2)))) IS TRUE)  as count FROM rt1 ORDER BY ((CASE rt1.c4  WHEN '2\n1┼' THEN rt1.c2 ELSE rt1.c4 END) NOT NULL));
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c4) NOT BETWEEN ((rt1.c0 IN ())) AND (QUOTE(rt1.c2)))) ORDER BY ((CASE rt1.c4  WHEN '2\n1┼' THEN rt1.c2 ELSE rt1.c4 END) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c4) NOT BETWEEN ((rt1.c0 IN ())) AND (QUOTE(rt1.c2)))) IS TRUE)  as count FROM rt1 ORDER BY ((CASE rt1.c4  WHEN '2\n1┼' THEN rt1.c2 ELSE rt1.c4 END) NOT NULL));
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c4) NOT BETWEEN ((rt1.c0 IN ())) AND (QUOTE(rt1.c2)))) ORDER BY ((CASE rt1.c4  WHEN '2\n1┼' THEN rt1.c2 ELSE rt1.c4 END) NOT NULL);
SELECT ALL * FROM t0 WHERE (TYPEOF(t0.c1)) ORDER BY (((((t0.c0))<((0X410fdcd0))))<<(t0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(t0.c1)) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0))<((0X410fdcd0))))<<(t0.c1 COLLATE RTRIM)));
SELECT ALL * FROM t0 WHERE (TYPEOF(t0.c1)) ORDER BY (((((t0.c0))<((0X410fdcd0))))<<(t0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(t0.c1)) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0))<((0X410fdcd0))))<<(t0.c1 COLLATE RTRIM)));
SELECT ALL * FROM t0 WHERE (TYPEOF(t0.c1)) ORDER BY (((((t0.c0))<((0X410fdcd0))))<<(t0.c1 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CASE ((0.32732730801928434)<=(rt0.c0))  WHEN rt0.c0 COLLATE RTRIM THEN rt1.c2 END) ORDER BY ABS('2033112362') ASC, ((0.8836294187072891 IN (rt1.c0)) IN (((((rt0.c2)OR(rt1.c3)))AND(rt1.c3)))) ASC  NULLS LAST, LIKELY(DISTINCT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((0.32732730801928434)<=(rt0.c0))  WHEN rt0.c0 COLLATE RTRIM THEN rt1.c2 END) IS TRUE)  as count FROM rt0, rt1 ORDER BY ABS('2033112362') ASC, ((0.8836294187072891 IN (rt1.c0)) IN (((((rt0.c2)OR(rt1.c3)))AND(rt1.c3)))) ASC  NULLS LAST, LIKELY(DISTINCT NULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CASE ((0.32732730801928434)<=(rt0.c0))  WHEN rt0.c0 COLLATE RTRIM THEN rt1.c2 END) ORDER BY ABS('2033112362') ASC, ((0.8836294187072891 IN (rt1.c0)) IN (((((rt0.c2)OR(rt1.c3)))AND(rt1.c3)))) ASC  NULLS LAST, LIKELY(DISTINCT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((0.32732730801928434)<=(rt0.c0))  WHEN rt0.c0 COLLATE RTRIM THEN rt1.c2 END) IS TRUE)  as count FROM rt0, rt1 ORDER BY ABS('2033112362') ASC, ((0.8836294187072891 IN (rt1.c0)) IN (((((rt0.c2)OR(rt1.c3)))AND(rt1.c3)))) ASC  NULLS LAST, LIKELY(DISTINCT NULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CASE ((0.32732730801928434)<=(rt0.c0))  WHEN rt0.c0 COLLATE RTRIM THEN rt1.c2 END) ORDER BY ABS('2033112362') ASC, ((0.8836294187072891 IN (rt1.c0)) IN (((((rt0.c2)OR(rt1.c3)))AND(rt1.c3)))) ASC  NULLS LAST, LIKELY(DISTINCT NULL) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((((rt0.c2) IS TRUE), rt0.c0, ((rt0.c1) NOT NULL)))<((CAST('+Cvhz169' AS INTEGER), CAST(rt0.c1 AS BLOB), ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) IS TRUE), rt0.c0, ((rt0.c1) NOT NULL)))<((CAST('+Cvhz169' AS INTEGER), CAST(rt0.c1 AS BLOB), ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1);
SELECT * FROM rt0 WHERE ((((((rt0.c2) IS TRUE), rt0.c0, ((rt0.c1) NOT NULL)))<((CAST('+Cvhz169' AS INTEGER), CAST(rt0.c1 AS BLOB), ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) IS TRUE), rt0.c0, ((rt0.c1) NOT NULL)))<((CAST('+Cvhz169' AS INTEGER), CAST(rt0.c1 AS BLOB), ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1);
SELECT * FROM rt0 WHERE ((((((rt0.c2) IS TRUE), rt0.c0, ((rt0.c1) NOT NULL)))<((CAST('+Cvhz169' AS INTEGER), CAST(rt0.c1 AS BLOB), ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))))) ORDER BY rt0.c1;
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (((((((((CASE WHEN t0.c0 THEN rt1.c0 WHEN t0.c1 THEN 1894951684 WHEN NULL THEN rt1.c2 END)OR(((0Xffffffffbae346de) BETWEEN (rt0.c0) AND (t0.c0)))))AND(rt1.c2)))AND(((rt1.c1)*(rt1.c4)))))AND(((t0.c2) IS FALSE)))) ORDER BY rt0.c2 COLLATE NOCASE COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN t0.c0 THEN rt1.c0 WHEN t0.c1 THEN 1894951684 WHEN NULL THEN rt1.c2 END)OR(((0xffffffffbae346de) BETWEEN (rt0.c0) AND (t0.c0)))))AND(rt1.c2)))AND(((rt1.c1)*(rt1.c4)))))AND(((t0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY rt0.c2 COLLATE NOCASE COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (((((((((CASE WHEN t0.c0 THEN rt1.c0 WHEN t0.c1 THEN 1894951684 WHEN NULL THEN rt1.c2 END)OR(((0Xffffffffbae346de) BETWEEN (rt0.c0) AND (t0.c0)))))AND(rt1.c2)))AND(((rt1.c1)*(rt1.c4)))))AND(((t0.c2) IS FALSE)))) ORDER BY rt0.c2 COLLATE NOCASE COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN t0.c0 THEN rt1.c0 WHEN t0.c1 THEN 1894951684 WHEN NULL THEN rt1.c2 END)OR(((0xffffffffbae346de) BETWEEN (rt0.c0) AND (t0.c0)))))AND(rt1.c2)))AND(((rt1.c1)*(rt1.c4)))))AND(((t0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY rt0.c2 COLLATE NOCASE COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (((((((((CASE WHEN t0.c0 THEN rt1.c0 WHEN t0.c1 THEN 1894951684 WHEN NULL THEN rt1.c2 END)OR(((0Xffffffffbae346de) BETWEEN (rt0.c0) AND (t0.c0)))))AND(rt1.c2)))AND(((rt1.c1)*(rt1.c4)))))AND(((t0.c2) IS FALSE)))) ORDER BY rt0.c2 COLLATE NOCASE COLLATE NOCASE ASC;
SELECT COUNT(*) FROM rt1 WHERE ((((CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c3 END))!=((((((((((((((rt1.c1)AND(rt1.c3)))OR(rt1.c4)))AND(rt1.c1)))AND(rt1.c2)))OR(rt1.c0)))OR(1.54666775E8))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c3 END))!=((((((((((((((rt1.c1)AND(rt1.c3)))OR(rt1.c4)))AND(rt1.c1)))AND(rt1.c2)))OR(rt1.c0)))OR(1.54666775E8)))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c3 END))!=((((((((((((((rt1.c1)AND(rt1.c3)))OR(rt1.c4)))AND(rt1.c1)))AND(rt1.c2)))OR(rt1.c0)))OR(1.54666775E8))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c3 END))!=((((((((((((((rt1.c1)AND(rt1.c3)))OR(rt1.c4)))AND(rt1.c1)))AND(rt1.c2)))OR(rt1.c0)))OR(1.54666775E8)))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c3 END))!=((((((((((((((rt1.c1)AND(rt1.c3)))OR(rt1.c4)))AND(rt1.c1)))AND(rt1.c2)))OR(rt1.c0)))OR(1.54666775E8))))));
SELECT * FROM rt1 WHERE ((((rt1.c3 IN ())) NOT BETWEEN (rt1.c2) AND (SQLITE_VERSION())));
SELECT SUM(count) FROM (SELECT (((((rt1.c3 IN ())) NOT BETWEEN (rt1.c2) AND (SQLITE_VERSION()))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c3 IN ())) NOT BETWEEN (rt1.c2) AND (SQLITE_VERSION())));
SELECT SUM(count) FROM (SELECT (((((rt1.c3 IN ())) NOT BETWEEN (rt1.c2) AND (SQLITE_VERSION()))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c3 IN ())) NOT BETWEEN (rt1.c2) AND (SQLITE_VERSION())));
SELECT * FROM t0, rt0, rt1 WHERE (CASE WHEN CAST(rt0.c0 AS REAL) THEN ((NULL) NOT BETWEEN (rt0.c0) AND (rt1.c4)) WHEN ((t0.c0)+(rt1.c1)) THEN '%&' WHEN CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END THEN (NOT (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c0 AS REAL) THEN ((NULL) NOT BETWEEN (rt0.c0) AND (rt1.c4)) WHEN ((t0.c0)+(rt1.c1)) THEN '%&' WHEN CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END THEN (NOT (rt0.c1)) END) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT * FROM t0, rt0, rt1 WHERE (CASE WHEN CAST(rt0.c0 AS REAL) THEN ((NULL) NOT BETWEEN (rt0.c0) AND (rt1.c4)) WHEN ((t0.c0)+(rt1.c1)) THEN '%&' WHEN CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END THEN (NOT (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c0 AS REAL) THEN ((NULL) NOT BETWEEN (rt0.c0) AND (rt1.c4)) WHEN ((t0.c0)+(rt1.c1)) THEN '%&' WHEN CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END THEN (NOT (rt0.c1)) END) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT * FROM t0, rt0, rt1 WHERE (CASE WHEN CAST(rt0.c0 AS REAL) THEN ((NULL) NOT BETWEEN (rt0.c0) AND (rt1.c4)) WHEN ((t0.c0)+(rt1.c1)) THEN '%&' WHEN CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END THEN (NOT (rt0.c1)) END);
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE (CAST(((rt0.c2)-(rt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)-(rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE (CAST(((rt0.c2)-(rt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)-(rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE (CAST(((rt0.c2)-(rt0.c0)) AS NUMERIC));
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE ((((rt1.c4 IN (t0.c1, rt1.c1))) BETWEEN (ABS(rt1.c2)) AND (t0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c4 IN (t0.c1, rt1.c1))) BETWEEN (ABS(rt1.c2)) AND (t0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE ((((rt1.c4 IN (t0.c1, rt1.c1))) BETWEEN (ABS(rt1.c2)) AND (t0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c4 IN (t0.c1, rt1.c1))) BETWEEN (ABS(rt1.c2)) AND (t0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE ((((rt1.c4 IN (t0.c1, rt1.c1))) BETWEEN (ABS(rt1.c2)) AND (t0.c2 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT ((((rt1.c3, rt1.c3, rt1.c4)) BETWEEN ((rt1.c0, rt1.c2, rt1.c0)) AND ((x'', rt1.c4, rt1.c3)))))) ORDER BY PRINTF((- (rt1.c3)), -1.639002394E9, ((((rt1.c1)AND(rt1.c2)))AND(rt1.c3))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT ((((rt1.c3, rt1.c3, rt1.c4)) BETWEEN ((rt1.c0, rt1.c2, rt1.c0)) AND ((x'', rt1.c4, rt1.c3)))))) IS TRUE)  as count FROM rt1 ORDER BY PRINTF((- (rt1.c3)), -1.639002394E9, ((((rt1.c1)AND(rt1.c2)))AND(rt1.c3))) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT ((((rt1.c3, rt1.c3, rt1.c4)) BETWEEN ((rt1.c0, rt1.c2, rt1.c0)) AND ((x'', rt1.c4, rt1.c3)))))) ORDER BY PRINTF((- (rt1.c3)), -1.639002394E9, ((((rt1.c1)AND(rt1.c2)))AND(rt1.c3))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT ((((rt1.c3, rt1.c3, rt1.c4)) BETWEEN ((rt1.c0, rt1.c2, rt1.c0)) AND ((x'', rt1.c4, rt1.c3)))))) IS TRUE)  as count FROM rt1 ORDER BY PRINTF((- (rt1.c3)), -1.639002394E9, ((((rt1.c1)AND(rt1.c2)))AND(rt1.c3))) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT ((((rt1.c3, rt1.c3, rt1.c4)) BETWEEN ((rt1.c0, rt1.c2, rt1.c0)) AND ((x'', rt1.c4, rt1.c3)))))) ORDER BY PRINTF((- (rt1.c3)), -1.639002394E9, ((((rt1.c1)AND(rt1.c2)))AND(rt1.c3))) DESC;
SELECT COUNT(*) FROM rt1 INNER JOIN t0 ON ((((rt1.c4)IS(rt0.c0)))+((((rt1.c1, rt0.c2, rt1.c0))==(('-429968317', rt0.c1, rt1.c4))))) FULL OUTER JOIN rt0 ON ROUND((NOT (rt1.c1)), CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN 'RjY])' WHEN t0.c1 THEN t0.c1 END) WHERE (((CAST(t0.c2 AS BLOB)) NOT BETWEEN (TRIM(rt0.c1)) AND ((((('?#骫5D3dE?')AND(t0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c2 AS BLOB)) NOT BETWEEN (TRIM(rt0.c1)) AND ((((('?#骫5D3dE?')AND(t0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt1 INNER JOIN t0 ON ((((rt1.c4)IS(rt0.c0)))+((((rt1.c1, rt0.c2, rt1.c0))==(('-429968317', rt0.c1, rt1.c4))))) FULL OUTER JOIN rt0 ON ROUND((NOT (rt1.c1)), CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN 'RjY])' WHEN t0.c1 THEN t0.c1 END));
SELECT COUNT(*) FROM rt1 INNER JOIN t0 ON ((((rt1.c4)IS(rt0.c0)))+((((rt1.c1, rt0.c2, rt1.c0))==(('-429968317', rt0.c1, rt1.c4))))) FULL OUTER JOIN rt0 ON ROUND((NOT (rt1.c1)), CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN 'RjY])' WHEN t0.c1 THEN t0.c1 END) WHERE (((CAST(t0.c2 AS BLOB)) NOT BETWEEN (TRIM(rt0.c1)) AND ((((('?#骫5D3dE?')AND(t0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c2 AS BLOB)) NOT BETWEEN (TRIM(rt0.c1)) AND ((((('?#骫5D3dE?')AND(t0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt1 INNER JOIN t0 ON ((((rt1.c4)IS(rt0.c0)))+((((rt1.c1, rt0.c2, rt1.c0))==(('-429968317', rt0.c1, rt1.c4))))) FULL OUTER JOIN rt0 ON ROUND((NOT (rt1.c1)), CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN 'RjY])' WHEN t0.c1 THEN t0.c1 END));
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS REAL))%(load_extension(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS REAL))%(load_extension(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS REAL))%(load_extension(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS REAL))%(load_extension(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((NULL IN ())) NOT BETWEEN ((- (rt0.c1))) AND (335202035))) ORDER BY (((NOT (NULL))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((((NULL IN ())) NOT BETWEEN ((- (rt0.c1))) AND (335202035))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((NOT (NULL))) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((NULL IN ())) NOT BETWEEN ((- (rt0.c1))) AND (335202035))) ORDER BY (((NOT (NULL))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((((NULL IN ())) NOT BETWEEN ((- (rt0.c1))) AND (335202035))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((NOT (NULL))) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((NULL IN ())) NOT BETWEEN ((- (rt0.c1))) AND (335202035))) ORDER BY (((NOT (NULL))) IS FALSE) ASC;
SELECT * FROM t0, rt1 CROSS JOIN rt0 ON (((rt1.c3) IS FALSE) IN ()) WHERE (-527958852) ORDER BY (((((~ (rt1.c3)))AND(((rt1.c3)*(rt1.c0)))))AND(rt1.c2));
SELECT SUM(count) FROM (SELECT ALL ((-527958852) IS TRUE)  as count FROM t0, rt1 CROSS JOIN rt0 ON (((rt1.c3) IS FALSE) IN ()) ORDER BY (((((~ (rt1.c3)))AND(((rt1.c3)*(rt1.c0)))))AND(rt1.c2)));
SELECT * FROM t0, rt1 CROSS JOIN rt0 ON (((rt1.c3) IS FALSE) IN ()) WHERE (-527958852) ORDER BY (((((~ (rt1.c3)))AND(((rt1.c3)*(rt1.c0)))))AND(rt1.c2));
SELECT SUM(count) FROM (SELECT ALL ((-527958852) IS TRUE)  as count FROM t0, rt1 CROSS JOIN rt0 ON (((rt1.c3) IS FALSE) IN ()) ORDER BY (((((~ (rt1.c3)))AND(((rt1.c3)*(rt1.c0)))))AND(rt1.c2)));
SELECT * FROM t0, rt1 CROSS JOIN rt0 ON (((rt1.c3) IS FALSE) IN ()) WHERE (-527958852) ORDER BY (((((~ (rt1.c3)))AND(((rt1.c3)*(rt1.c0)))))AND(rt1.c2));
SELECT ALL * FROM t0 INNER JOIN rt0 ON 0.3985471880631948 WHERE ((~ (((((rt0.c1)AND(t0.c0)))OR(t0.c1))))) ORDER BY 0.6339304712095987 COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((rt0.c1)AND(t0.c0)))OR(t0.c1))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON 0.3985471880631948 ORDER BY 0.6339304712095987 COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL * FROM t0 INNER JOIN rt0 ON 0.3985471880631948 WHERE ((~ (((((rt0.c1)AND(t0.c0)))OR(t0.c1))))) ORDER BY 0.6339304712095987 COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((rt0.c1)AND(t0.c0)))OR(t0.c1))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON 0.3985471880631948 ORDER BY 0.6339304712095987 COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL * FROM t0 INNER JOIN rt0 ON 0.3985471880631948 WHERE ((~ (((((rt0.c1)AND(t0.c0)))OR(t0.c1))))) ORDER BY 0.6339304712095987 COLLATE RTRIM DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0 WHERE (IFNULL(((rt0.c2)<>(t0.c0)), ((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((IFNULL(((rt0.c2)!=(t0.c0)), ((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c2)))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (IFNULL(((rt0.c2)<>(t0.c0)), ((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((IFNULL(((rt0.c2)!=(t0.c0)), ((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c2)))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (IFNULL(((rt0.c2)<>(t0.c0)), ((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c2))));
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE ((((((rt1.c0)) BETWEEN ((t0.c2)) AND ((rt0.c2)))) NOTNULL)) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)) BETWEEN ((t0.c2)) AND ((rt0.c2)))) NOTNULL)) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY NULL ASC);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE ((((((rt1.c0)) BETWEEN ((t0.c2)) AND ((rt0.c2)))) NOTNULL)) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)) BETWEEN ((t0.c2)) AND ((rt0.c2)))) NOTNULL)) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY NULL ASC);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE ((((((rt1.c0)) BETWEEN ((t0.c2)) AND ((rt0.c2)))) NOTNULL)) ORDER BY NULL ASC;
SELECT ALL COUNT(*) FROM t0, rt1 INNER JOIN rt0 ON ((((CASE WHEN rt1.c0 THEN rt0.c2 WHEN 0.6005513130163718 THEN rt1.c3 WHEN rt0.c1 THEN rt0.c1 END)AND(rt0.c2)))OR(rt1.c0)) WHERE ((((rt1.c2 IN (rt0.c2, rt1.c0)))<<(''))) ORDER BY NULLIF(DISTINCT ((rt0.c1) IS TRUE), ((((((((rt1.c0)OR(rt0.c0)))AND(t0.c2)))AND(rt1.c1)))AND(rt1.c3))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN (rt0.c2, rt1.c0)))<<(''))) IS TRUE)  as count FROM t0, rt1 INNER JOIN rt0 ON ((((CASE WHEN rt1.c0 THEN rt0.c2 WHEN 0.6005513130163718 THEN rt1.c3 WHEN rt0.c1 THEN rt0.c1 END)AND(rt0.c2)))OR(rt1.c0)) ORDER BY NULLIF(DISTINCT ((rt0.c1) IS TRUE), ((((((((rt1.c0)OR(rt0.c0)))AND(t0.c2)))AND(rt1.c1)))AND(rt1.c3))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt1 INNER JOIN rt0 ON ((((CASE WHEN rt1.c0 THEN rt0.c2 WHEN 0.6005513130163718 THEN rt1.c3 WHEN rt0.c1 THEN rt0.c1 END)AND(rt0.c2)))OR(rt1.c0)) WHERE ((((rt1.c2 IN (rt0.c2, rt1.c0)))<<(''))) ORDER BY NULLIF(DISTINCT ((rt0.c1) IS TRUE), ((((((((rt1.c0)OR(rt0.c0)))AND(t0.c2)))AND(rt1.c1)))AND(rt1.c3))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN (rt0.c2, rt1.c0)))<<(''))) IS TRUE)  as count FROM t0, rt1 INNER JOIN rt0 ON ((((CASE WHEN rt1.c0 THEN rt0.c2 WHEN 0.6005513130163718 THEN rt1.c3 WHEN rt0.c1 THEN rt0.c1 END)AND(rt0.c2)))OR(rt1.c0)) ORDER BY NULLIF(DISTINCT ((rt0.c1) IS TRUE), ((((((((rt1.c0)OR(rt0.c0)))AND(t0.c2)))AND(rt1.c1)))AND(rt1.c3))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt1 INNER JOIN rt0 ON ((((CASE WHEN rt1.c0 THEN rt0.c2 WHEN 0.6005513130163718 THEN rt1.c3 WHEN rt0.c1 THEN rt0.c1 END)AND(rt0.c2)))OR(rt1.c0)) WHERE ((((rt1.c2 IN (rt0.c2, rt1.c0)))<<(''))) ORDER BY NULLIF(DISTINCT ((rt0.c1) IS TRUE), ((((((((rt1.c0)OR(rt0.c0)))AND(t0.c2)))AND(rt1.c1)))AND(rt1.c3))) ASC  NULLS LAST;
SELECT * FROM t0, rt0, rt1 WHERE (((((rt1.c0)/(rt0.c2)))>(((('')) BETWEEN ((rt1.c3)) AND ((rt1.c0)))))) ORDER BY x'9dba', (+ (CAST(rt1.c3 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)/(rt0.c2)))>(((('')) BETWEEN ((rt1.c3)) AND ((rt1.c0)))))) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY x'9dba', (+ (CAST(rt1.c3 AS REAL))) ASC);
SELECT * FROM t0, rt0, rt1 WHERE (((((rt1.c0)/(rt0.c2)))>(((('')) BETWEEN ((rt1.c3)) AND ((rt1.c0)))))) ORDER BY x'9dba', (+ (CAST(rt1.c3 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)/(rt0.c2)))>(((('')) BETWEEN ((rt1.c3)) AND ((rt1.c0)))))) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY x'9dba', (+ (CAST(rt1.c3 AS REAL))) ASC);
SELECT * FROM t0, rt0, rt1 WHERE (((((rt1.c0)/(rt0.c2)))>(((('')) BETWEEN ((rt1.c3)) AND ((rt1.c0)))))) ORDER BY x'9dba', (+ (CAST(rt1.c3 AS REAL))) ASC;
SELECT COUNT(*) FROM rt0 WHERE (((((TRIM(DISTINCT '1033463357', rt0.c1))AND(CAST(rt0.c2 AS REAL))))AND(((rt0.c2)/(rt0.c2))))) ORDER BY (((rt0.c0 IN ()))>=(rt0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((TRIM(DISTINCT '1033463357', rt0.c1))AND(CAST(rt0.c2 AS REAL))))AND(((rt0.c2)/(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN ()))>=(rt0.c2)) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((TRIM(DISTINCT '1033463357', rt0.c1))AND(CAST(rt0.c2 AS REAL))))AND(((rt0.c2)/(rt0.c2))))) ORDER BY (((rt0.c0 IN ()))>=(rt0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((TRIM(DISTINCT '1033463357', rt0.c1))AND(CAST(rt0.c2 AS REAL))))AND(((rt0.c2)/(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN ()))>=(rt0.c2)) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((TRIM(DISTINCT '1033463357', rt0.c1))AND(CAST(rt0.c2 AS REAL))))AND(((rt0.c2)/(rt0.c2))))) ORDER BY (((rt0.c0 IN ()))>=(rt0.c2)) DESC;
SELECT COUNT(*) FROM rt1 WHERE (((- (rt1.c2)) IN (((rt1.c1)LIKE(rt1.c1)), rt1.c2)));
SELECT SUM(count) FROM (SELECT ((((- (rt1.c2)) IN (((rt1.c1)LIKE(rt1.c1)), rt1.c2))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((- (rt1.c2)) IN (((rt1.c1)LIKE(rt1.c1)), rt1.c2)));
SELECT SUM(count) FROM (SELECT ((((- (rt1.c2)) IN (((rt1.c1)LIKE(rt1.c1)), rt1.c2))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((- (rt1.c2)) IN (((rt1.c1)LIKE(rt1.c1)), rt1.c2)));
SELECT COUNT(*) FROM t0 WHERE ((((+ (t0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((+ (t0.c1))) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((+ (t0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((+ (t0.c1))) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((+ (t0.c1))) NOT NULL));
SELECT * FROM rt1, rt0, t0 WHERE (HEX(CAST(rt1.c3 AS INTEGER))) ORDER BY TRIM(DISTINCT ((rt1.c4)||(t0.c2)), (((rt0.c1, t0.c2, x''))=((t0.c2, rt1.c0, rt1.c2)))) DESC  NULLS LAST, CASE WHEN ((0Xffffffff9ab0aa40)+(t0.c2)) THEN ((rt1.c3)LIKE(rt0.c2)) WHEN ((rt0.c0)-(t0.c1)) THEN ((((rt1.c0)AND(rt0.c2)))OR(t0.c0)) WHEN ((((t0.c0)AND(t0.c1)))OR(rt1.c0)) THEN ((0.2089029577582977)*(rt1.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ((HEX(CAST(rt1.c3 AS INTEGER))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY TRIM(DISTINCT ((rt1.c4)||(t0.c2)), (((rt0.c1, t0.c2, x''))==((t0.c2, rt1.c0, rt1.c2)))) DESC  NULLS LAST, CASE WHEN ((0Xffffffff9ab0aa40)+(t0.c2)) THEN ((rt1.c3)LIKE(rt0.c2)) WHEN ((rt0.c0)-(t0.c1)) THEN ((((rt1.c0)AND(rt0.c2)))OR(t0.c0)) WHEN ((((t0.c0)AND(t0.c1)))OR(rt1.c0)) THEN ((0.2089029577582977)*(rt1.c1)) END ASC);
SELECT * FROM rt1, rt0, t0 WHERE (HEX(CAST(rt1.c3 AS INTEGER))) ORDER BY TRIM(DISTINCT ((rt1.c4)||(t0.c2)), (((rt0.c1, t0.c2, x''))=((t0.c2, rt1.c0, rt1.c2)))) DESC  NULLS LAST, CASE WHEN ((0Xffffffff9ab0aa40)+(t0.c2)) THEN ((rt1.c3)LIKE(rt0.c2)) WHEN ((rt0.c0)-(t0.c1)) THEN ((((rt1.c0)AND(rt0.c2)))OR(t0.c0)) WHEN ((((t0.c0)AND(t0.c1)))OR(rt1.c0)) THEN ((0.2089029577582977)*(rt1.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ((HEX(CAST(rt1.c3 AS INTEGER))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY TRIM(DISTINCT ((rt1.c4)||(t0.c2)), (((rt0.c1, t0.c2, x''))==((t0.c2, rt1.c0, rt1.c2)))) DESC  NULLS LAST, CASE WHEN ((0Xffffffff9ab0aa40)+(t0.c2)) THEN ((rt1.c3)LIKE(rt0.c2)) WHEN ((rt0.c0)-(t0.c1)) THEN ((((rt1.c0)AND(rt0.c2)))OR(t0.c0)) WHEN ((((t0.c0)AND(t0.c1)))OR(rt1.c0)) THEN ((0.2089029577582977)*(rt1.c1)) END ASC);
SELECT * FROM rt1, rt0, t0 WHERE (HEX(CAST(rt1.c3 AS INTEGER))) ORDER BY TRIM(DISTINCT ((rt1.c4)||(t0.c2)), (((rt0.c1, t0.c2, x''))=((t0.c2, rt1.c0, rt1.c2)))) DESC  NULLS LAST, CASE WHEN ((0Xffffffff9ab0aa40)+(t0.c2)) THEN ((rt1.c3)LIKE(rt0.c2)) WHEN ((rt0.c0)-(t0.c1)) THEN ((((rt1.c0)AND(rt0.c2)))OR(t0.c0)) WHEN ((((t0.c0)AND(t0.c1)))OR(rt1.c0)) THEN ((0.2089029577582977)*(rt1.c1)) END ASC;
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE (((((((((((rt1.c0)AND(rt1.c4)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))IS NOT(rt1.c0))) ORDER BY ((x'c97dde03')LIKE(rt1.c2)) COLLATE BINARY, CASE WHEN (NOT (rt1.c2)) THEN (~ (rt0.c0)) END, ((((rt1.c1)<>(rt0.c2)))%(rt1.c2));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0)AND(rt1.c4)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))IS NOT(rt1.c0))) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1 ORDER BY ((x'c97dde03')LIKE(rt1.c2)) COLLATE BINARY, CASE WHEN (NOT (rt1.c2)) THEN (~ (rt0.c0)) END, ((((rt1.c1)!=(rt0.c2)))%(rt1.c2)));
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE (((((((((((rt1.c0)AND(rt1.c4)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))IS NOT(rt1.c0))) ORDER BY ((x'c97dde03')LIKE(rt1.c2)) COLLATE BINARY, CASE WHEN (NOT (rt1.c2)) THEN (~ (rt0.c0)) END, ((((rt1.c1)<>(rt0.c2)))%(rt1.c2));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0)AND(rt1.c4)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))IS NOT(rt1.c0))) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1 ORDER BY ((x'c97dde03')LIKE(rt1.c2)) COLLATE BINARY, CASE WHEN (NOT (rt1.c2)) THEN (~ (rt0.c0)) END, ((((rt1.c1)!=(rt0.c2)))%(rt1.c2)));
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE (((((((((((rt1.c0)AND(rt1.c4)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))IS NOT(rt1.c0))) ORDER BY ((x'c97dde03')LIKE(rt1.c2)) COLLATE BINARY, CASE WHEN (NOT (rt1.c2)) THEN (~ (rt0.c0)) END, ((((rt1.c1)<>(rt0.c2)))%(rt1.c2));
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON ((rt0.c2 COLLATE NOCASE) NOT BETWEEN (CAST(rt1.c0 AS INTEGER)) AND (((rt0.c1) BETWEEN (rt1.c2) AND (rt1.c4)))) WHERE (((((rt1.c2 COLLATE RTRIM)OR(((rt1.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))OR(rt1.c2 COLLATE RTRIM))) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2 COLLATE RTRIM)OR(((rt1.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))OR(rt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON ((rt0.c2 COLLATE NOCASE) NOT BETWEEN (CAST(rt1.c0 AS INTEGER)) AND (((rt0.c1) BETWEEN (rt1.c2) AND (rt1.c4)))) ORDER BY rt0.c2  NULLS LAST);
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON ((rt0.c2 COLLATE NOCASE) NOT BETWEEN (CAST(rt1.c0 AS INTEGER)) AND (((rt0.c1) BETWEEN (rt1.c2) AND (rt1.c4)))) WHERE (((((rt1.c2 COLLATE RTRIM)OR(((rt1.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))OR(rt1.c2 COLLATE RTRIM))) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2 COLLATE RTRIM)OR(((rt1.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))OR(rt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON ((rt0.c2 COLLATE NOCASE) NOT BETWEEN (CAST(rt1.c0 AS INTEGER)) AND (((rt0.c1) BETWEEN (rt1.c2) AND (rt1.c4)))) ORDER BY rt0.c2  NULLS LAST);
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON ((rt0.c2 COLLATE NOCASE) NOT BETWEEN (CAST(rt1.c0 AS INTEGER)) AND (((rt0.c1) BETWEEN (rt1.c2) AND (rt1.c4)))) WHERE (((((rt1.c2 COLLATE RTRIM)OR(((rt1.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))OR(rt1.c2 COLLATE RTRIM))) ORDER BY rt0.c2  NULLS LAST;
SELECT ALL * FROM t0 CROSS JOIN rt0 ON json_insert((rt0.c2 IN ()), CAST(t0.c2 AS NUMERIC), CAST(rt0.c0 AS INTEGER)) WHERE (((0x69483ad7)|(x'')));
SELECT SUM(count) FROM (SELECT ((((0X69483ad7)|(x''))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON json_insert((rt0.c2 IN ()), CAST(t0.c2 AS NUMERIC), CAST(rt0.c0 AS INTEGER)));
SELECT ALL * FROM t0 CROSS JOIN rt0 ON json_insert((rt0.c2 IN ()), CAST(t0.c2 AS NUMERIC), CAST(rt0.c0 AS INTEGER)) WHERE (((0x69483ad7)|(x'')));
SELECT SUM(count) FROM (SELECT ((((0X69483ad7)|(x''))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON json_insert((rt0.c2 IN ()), CAST(t0.c2 AS NUMERIC), CAST(rt0.c0 AS INTEGER)));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((CAST(0.06796383608944823 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((CAST(0.06796383608944823 AS NUMERIC))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((CAST(0.06796383608944823 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((CAST(0.06796383608944823 AS NUMERIC))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((CAST(0.06796383608944823 AS NUMERIC)))));
SELECT ALL * FROM t0, rt1 WHERE (CASE WHEN (t0.c0 IN ()) THEN ((t0.c2) IS FALSE) WHEN UNLIKELY(DISTINCT rt1.c2) THEN NULL COLLATE RTRIM WHEN ((t0.c1)=(rt1.c1)) THEN ((rt1.c3) NOTNULL) END) ORDER BY CASE WHEN (((t0.c0, rt1.c3, rt1.c4))<=((rt1.c2, t0.c0, rt1.c4))) THEN ((rt1.c0) IS FALSE) END;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (t0.c0 IN ()) THEN ((t0.c2) IS FALSE) WHEN UNLIKELY(DISTINCT rt1.c2) THEN NULL COLLATE RTRIM WHEN ((t0.c1)==(rt1.c1)) THEN ((rt1.c3) NOTNULL) END) IS TRUE)  as count FROM t0, rt1 ORDER BY CASE WHEN (((t0.c0, rt1.c3, rt1.c4))<=((rt1.c2, t0.c0, rt1.c4))) THEN ((rt1.c0) IS FALSE) END);
SELECT ALL * FROM t0, rt1 WHERE (CASE WHEN (t0.c0 IN ()) THEN ((t0.c2) IS FALSE) WHEN UNLIKELY(DISTINCT rt1.c2) THEN NULL COLLATE RTRIM WHEN ((t0.c1)=(rt1.c1)) THEN ((rt1.c3) NOTNULL) END) ORDER BY CASE WHEN (((t0.c0, rt1.c3, rt1.c4))<=((rt1.c2, t0.c0, rt1.c4))) THEN ((rt1.c0) IS FALSE) END;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (t0.c0 IN ()) THEN ((t0.c2) IS FALSE) WHEN UNLIKELY(DISTINCT rt1.c2) THEN NULL COLLATE RTRIM WHEN ((t0.c1)==(rt1.c1)) THEN ((rt1.c3) NOTNULL) END) IS TRUE)  as count FROM t0, rt1 ORDER BY CASE WHEN (((t0.c0, rt1.c3, rt1.c4))<=((rt1.c2, t0.c0, rt1.c4))) THEN ((rt1.c0) IS FALSE) END);
SELECT ALL * FROM t0, rt1 WHERE (CASE WHEN (t0.c0 IN ()) THEN ((t0.c2) IS FALSE) WHEN UNLIKELY(DISTINCT rt1.c2) THEN NULL COLLATE RTRIM WHEN ((t0.c1)=(rt1.c1)) THEN ((rt1.c3) NOTNULL) END) ORDER BY CASE WHEN (((t0.c0, rt1.c3, rt1.c4))<=((rt1.c2, t0.c0, rt1.c4))) THEN ((rt1.c0) IS FALSE) END;
SELECT ALL * FROM rt1 INNER JOIN rt0 ON (- (((rt1.c4)GLOB(rt1.c3)))) WHERE (((NULL COLLATE RTRIM)/(CASE WHEN rt1.c3 THEN rt0.c0 ELSE '' END))) ORDER BY ((rt1.c1)|(rt1.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((NULL COLLATE RTRIM)/(CASE WHEN rt1.c3 THEN rt0.c0 ELSE '' END))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON (- (((rt1.c4)GLOB(rt1.c3)))) ORDER BY ((rt1.c1)|(rt1.c0)) COLLATE NOCASE DESC);
SELECT ALL * FROM rt1 INNER JOIN rt0 ON (- (((rt1.c4)GLOB(rt1.c3)))) WHERE (((NULL COLLATE RTRIM)/(CASE WHEN rt1.c3 THEN rt0.c0 ELSE '' END))) ORDER BY ((rt1.c1)|(rt1.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((NULL COLLATE RTRIM)/(CASE WHEN rt1.c3 THEN rt0.c0 ELSE '' END))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON (- (((rt1.c4)GLOB(rt1.c3)))) ORDER BY ((rt1.c1)|(rt1.c0)) COLLATE NOCASE DESC);
SELECT ALL * FROM rt1 INNER JOIN rt0 ON (- (((rt1.c4)GLOB(rt1.c3)))) WHERE (((NULL COLLATE RTRIM)/(CASE WHEN rt1.c3 THEN rt0.c0 ELSE '' END))) ORDER BY ((rt1.c1)|(rt1.c0)) COLLATE NOCASE DESC;
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((CAST(t0.c1 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(t0.c1 AS INTEGER) IN ())) IS TRUE)  as count FROM t0, rt1);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((CAST(t0.c1 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(t0.c1 AS INTEGER) IN ())) IS TRUE)  as count FROM t0, rt1);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((CAST(t0.c1 AS INTEGER) IN ()));
SELECT ALL * FROM rt1 LEFT OUTER JOIN t0 ON ((((NOT (t0.c1))))>=((CAST(rt1.c4 AS NUMERIC)))) WHERE ((((NULL)) NOT BETWEEN ((((t0.c1)/(rt1.c3)))) AND ((CAST(t0.c1 AS REAL))))) ORDER BY (((rt1.c0)||(rt1.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NULL)) NOT BETWEEN ((((t0.c1)/(rt1.c3)))) AND ((CAST(t0.c1 AS REAL))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON ((((NOT (t0.c1))))>=((CAST(rt1.c4 AS NUMERIC)))) ORDER BY (((rt1.c0)||(rt1.c1)) IN ())  NULLS LAST);
SELECT ALL * FROM rt1 LEFT OUTER JOIN t0 ON ((((NOT (t0.c1))))>=((CAST(rt1.c4 AS NUMERIC)))) WHERE ((((NULL)) NOT BETWEEN ((((t0.c1)/(rt1.c3)))) AND ((CAST(t0.c1 AS REAL))))) ORDER BY (((rt1.c0)||(rt1.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NULL)) NOT BETWEEN ((((t0.c1)/(rt1.c3)))) AND ((CAST(t0.c1 AS REAL))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON ((((NOT (t0.c1))))>=((CAST(rt1.c4 AS NUMERIC)))) ORDER BY (((rt1.c0)||(rt1.c1)) IN ())  NULLS LAST);
SELECT ALL * FROM rt1 LEFT OUTER JOIN t0 ON ((((NOT (t0.c1))))>=((CAST(rt1.c4 AS NUMERIC)))) WHERE ((((NULL)) NOT BETWEEN ((((t0.c1)/(rt1.c3)))) AND ((CAST(t0.c1 AS REAL))))) ORDER BY (((rt1.c0)||(rt1.c1)) IN ())  NULLS LAST;
SELECT COUNT(*) FROM rt0, t0 WHERE (((((x'6fc82ed4') NOT NULL))>>(((rt0.c2) BETWEEN (rt0.c2) AND (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'6fc82ed4') NOT NULL))>>(((rt0.c2) BETWEEN (rt0.c2) AND (t0.c2))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((x'6fc82ed4') NOT NULL))>>(((rt0.c2) BETWEEN (rt0.c2) AND (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'6fc82ed4') NOT NULL))>>(((rt0.c2) BETWEEN (rt0.c2) AND (t0.c2))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((x'6fc82ed4') NOT NULL))>>(((rt0.c2) BETWEEN (rt0.c2) AND (t0.c2)))));
SELECT * FROM t0, rt1, rt0 WHERE (((((((rt1.c3)<<(rt1.c2)))AND(((rt1.c2)<=(rt1.c4)))))AND(((rt0.c1)*(rt0.c2))))) ORDER BY CAST(CASE WHEN t0.c1 THEN rt1.c2 ELSE rt1.c3 END AS NUMERIC) DESC  NULLS LAST, ((ABS(DISTINCT rt1.c3)) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((((((rt1.c3)<<(rt1.c2)))AND(((rt1.c2)<=(rt1.c4)))))AND(((rt0.c1)*(rt0.c2))))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY CAST(CASE WHEN t0.c1 THEN rt1.c2 ELSE rt1.c3 END AS NUMERIC) DESC  NULLS LAST, ((ABS(DISTINCT rt1.c3)) IS FALSE));
SELECT * FROM t0, rt1, rt0 WHERE (((((((rt1.c3)<<(rt1.c2)))AND(((rt1.c2)<=(rt1.c4)))))AND(((rt0.c1)*(rt0.c2))))) ORDER BY CAST(CASE WHEN t0.c1 THEN rt1.c2 ELSE rt1.c3 END AS NUMERIC) DESC  NULLS LAST, ((ABS(DISTINCT rt1.c3)) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((((((rt1.c3)<<(rt1.c2)))AND(((rt1.c2)<=(rt1.c4)))))AND(((rt0.c1)*(rt0.c2))))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY CAST(CASE WHEN t0.c1 THEN rt1.c2 ELSE rt1.c3 END AS NUMERIC) DESC  NULLS LAST, ((ABS(DISTINCT rt1.c3)) IS FALSE));
SELECT * FROM t0, rt1, rt0 WHERE (((((((rt1.c3)<<(rt1.c2)))AND(((rt1.c2)<=(rt1.c4)))))AND(((rt0.c1)*(rt0.c2))))) ORDER BY CAST(CASE WHEN t0.c1 THEN rt1.c2 ELSE rt1.c3 END AS NUMERIC) DESC  NULLS LAST, ((ABS(DISTINCT rt1.c3)) IS FALSE);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (((((((((((rt0.c0)AND(x'')))AND(t0.c1)))OR(t0.c2)))AND(rt1.c2))) BETWEEN (PRINTF(rt0.c2)) AND (((-756557832) IS TRUE)))) ORDER BY ''  NULLS LAST, ((((((((CAST(rt1.c3 AS TEXT))OR(json_type(t0.c1))))AND(NULL COLLATE NOCASE)))OR((NOT (rt1.c3)))))AND(CASE WHEN rt1.c4 THEN t0.c2 WHEN rt1.c4 THEN rt0.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c4 THEN rt0.c0 WHEN t0.c1 THEN '64F6䱀O' END));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)AND(x'')))AND(t0.c1)))OR(t0.c2)))AND(rt1.c2))) BETWEEN (PRINTF(rt0.c2)) AND (((-756557832) IS TRUE)))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY ''  NULLS LAST, ((((((((CAST(rt1.c3 AS TEXT))OR(json_type(t0.c1))))AND(NULL COLLATE NOCASE)))OR((NOT (rt1.c3)))))AND(CASE WHEN rt1.c4 THEN t0.c2 WHEN rt1.c4 THEN rt0.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c4 THEN rt0.c0 WHEN t0.c1 THEN '64F6䱀O' END)));
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (((((((((((rt0.c0)AND(x'')))AND(t0.c1)))OR(t0.c2)))AND(rt1.c2))) BETWEEN (PRINTF(rt0.c2)) AND (((-756557832) IS TRUE)))) ORDER BY ''  NULLS LAST, ((((((((CAST(rt1.c3 AS TEXT))OR(json_type(t0.c1))))AND(NULL COLLATE NOCASE)))OR((NOT (rt1.c3)))))AND(CASE WHEN rt1.c4 THEN t0.c2 WHEN rt1.c4 THEN rt0.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c4 THEN rt0.c0 WHEN t0.c1 THEN '64F6䱀O' END));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)AND(x'')))AND(t0.c1)))OR(t0.c2)))AND(rt1.c2))) BETWEEN (PRINTF(rt0.c2)) AND (((-756557832) IS TRUE)))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY ''  NULLS LAST, ((((((((CAST(rt1.c3 AS TEXT))OR(json_type(t0.c1))))AND(NULL COLLATE NOCASE)))OR((NOT (rt1.c3)))))AND(CASE WHEN rt1.c4 THEN t0.c2 WHEN rt1.c4 THEN rt0.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c4 THEN rt0.c0 WHEN t0.c1 THEN '64F6䱀O' END)));
SELECT COUNT(*) FROM t0 NATURAL JOIN rt1 WHERE (CAST(((NULL)-(rt1.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((NULL)-(rt1.c2)) AS INTEGER)) IS TRUE)  as count FROM t0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM t0 NATURAL JOIN rt1 WHERE (CAST(((NULL)-(rt1.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((NULL)-(rt1.c2)) AS INTEGER)) IS TRUE)  as count FROM t0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM t0 NATURAL JOIN rt1 WHERE (CAST(((NULL)-(rt1.c2)) AS INTEGER));
SELECT ALL * FROM rt0, t0 WHERE ((((t0.c0, t0.c1, rt0.c0)) BETWEEN (((+ (rt0.c1)), rt0.c0 COLLATE RTRIM, NULL COLLATE RTRIM)) AND ((t0.c1 COLLATE NOCASE, TOTAL_CHANGES(), (((t0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))))) ORDER BY LIKELY(((rt0.c0) NOT NULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, t0.c1, rt0.c0)) BETWEEN (((+ (rt0.c1)), rt0.c0 COLLATE RTRIM, NULL COLLATE RTRIM)) AND ((t0.c1 COLLATE NOCASE, TOTAL_CHANGES(), (((t0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))))) IS TRUE)  as count FROM rt0, t0 ORDER BY LIKELY(((rt0.c0) NOT NULL)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE ((((t0.c0, t0.c1, rt0.c0)) BETWEEN (((+ (rt0.c1)), rt0.c0 COLLATE RTRIM, NULL COLLATE RTRIM)) AND ((t0.c1 COLLATE NOCASE, TOTAL_CHANGES(), (((t0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))))) ORDER BY LIKELY(((rt0.c0) NOT NULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, t0.c1, rt0.c0)) BETWEEN (((+ (rt0.c1)), rt0.c0 COLLATE RTRIM, NULL COLLATE RTRIM)) AND ((t0.c1 COLLATE NOCASE, TOTAL_CHANGES(), (((t0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))))) IS TRUE)  as count FROM rt0, t0 ORDER BY LIKELY(((rt0.c0) NOT NULL)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE ((((t0.c0, t0.c1, rt0.c0)) BETWEEN (((+ (rt0.c1)), rt0.c0 COLLATE RTRIM, NULL COLLATE RTRIM)) AND ((t0.c1 COLLATE NOCASE, TOTAL_CHANGES(), (((t0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))))) ORDER BY LIKELY(((rt0.c0) NOT NULL)) DESC  NULLS FIRST;
SELECT ALL * FROM t0, rt0 WHERE (TRIM(CASE WHEN t0.c1 THEN rt0.c0 ELSE t0.c2 END, LIKE(rt0.c2, rt0.c2, '0'))) ORDER BY 1129911028  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CASE WHEN t0.c1 THEN rt0.c0 ELSE t0.c2 END, LIKE(rt0.c2, rt0.c2, '0'))) IS TRUE)  as count FROM t0, rt0 ORDER BY 1129911028  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (TRIM(CASE WHEN t0.c1 THEN rt0.c0 ELSE t0.c2 END, LIKE(rt0.c2, rt0.c2, '0'))) ORDER BY 1129911028  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CASE WHEN t0.c1 THEN rt0.c0 ELSE t0.c2 END, LIKE(rt0.c2, rt0.c2, '0'))) IS TRUE)  as count FROM t0, rt0 ORDER BY 1129911028  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE (x'') ORDER BY (NOT (rt1.c2)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1, rt0 ORDER BY (NOT (rt1.c2)) DESC  NULLS LAST);
SELECT ALL * FROM rt1, rt0 WHERE (x'') ORDER BY (NOT (rt1.c2)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1, rt0 ORDER BY (NOT (rt1.c2)) DESC  NULLS LAST);
SELECT ALL * FROM rt1, rt0 WHERE (x'') ORDER BY (NOT (rt1.c2)) DESC  NULLS LAST;
SELECT * FROM t0, rt0 NOT INDEXED LEFT OUTER JOIN rt1 ON ((rt1.c3) NOT NULL) COLLATE RTRIM COLLATE BINARY WHERE (rt1.c3) ORDER BY (- (((((rt1.c2)OR(t0.c0)))OR(t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN rt1 ON ((rt1.c3) NOT NULL) COLLATE RTRIM COLLATE BINARY ORDER BY (- (((((rt1.c2)OR(t0.c0)))OR(t0.c2)))));
SELECT * FROM t0, rt0 NOT INDEXED LEFT OUTER JOIN rt1 ON ((rt1.c3) NOT NULL) COLLATE RTRIM COLLATE BINARY WHERE (rt1.c3) ORDER BY (- (((((rt1.c2)OR(t0.c0)))OR(t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN rt1 ON ((rt1.c3) NOT NULL) COLLATE RTRIM COLLATE BINARY ORDER BY (- (((((rt1.c2)OR(t0.c0)))OR(t0.c2)))));
SELECT * FROM t0, rt0 NOT INDEXED LEFT OUTER JOIN rt1 ON ((rt1.c3) NOT NULL) COLLATE RTRIM COLLATE BINARY WHERE (rt1.c3) ORDER BY (- (((((rt1.c2)OR(t0.c0)))OR(t0.c2))));
SELECT COUNT(*) FROM t0 WHERE ((~ ((((t0.c0))<=((t0.c2))))));
SELECT SUM(count) FROM (SELECT (((~ ((((t0.c0))<=((t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((~ ((((t0.c0))<=((t0.c2))))));
SELECT SUM(count) FROM (SELECT (((~ ((((t0.c0))<=((t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((~ ((((t0.c0))<=((t0.c2))))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((t0.c1)) NOT BETWEEN (((((rt0.c1))>=((t0.c0))))) AND (((- (rt0.c0)))))) ORDER BY ((((t0.c2)OR(t0.c2)))OR(t0.c2)) COLLATE RTRIM ASC  NULLS LAST, (((t0.c2)GLOB(rt0.c1)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)) NOT BETWEEN (((((rt0.c1))>=((t0.c0))))) AND (((- (rt0.c0)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((t0.c2)OR(t0.c2)))OR(t0.c2)) COLLATE RTRIM ASC  NULLS LAST, (((t0.c2)GLOB(rt0.c1)) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((t0.c1)) NOT BETWEEN (((((rt0.c1))>=((t0.c0))))) AND (((- (rt0.c0)))))) ORDER BY ((((t0.c2)OR(t0.c2)))OR(t0.c2)) COLLATE RTRIM ASC  NULLS LAST, (((t0.c2)GLOB(rt0.c1)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)) NOT BETWEEN (((((rt0.c1))>=((t0.c0))))) AND (((- (rt0.c0)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((t0.c2)OR(t0.c2)))OR(t0.c2)) COLLATE RTRIM ASC  NULLS LAST, (((t0.c2)GLOB(rt0.c1)) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((t0.c1)) NOT BETWEEN (((((rt0.c1))>=((t0.c0))))) AND (((- (rt0.c0)))))) ORDER BY ((((t0.c2)OR(t0.c2)))OR(t0.c2)) COLLATE RTRIM ASC  NULLS LAST, (((t0.c2)GLOB(rt0.c1)) IN ()) ASC  NULLS LAST;
SELECT ALL * FROM t0 INNER JOIN rt0 ON CHAR(((rt1.c4) NOT NULL)) RIGHT OUTER JOIN rt1 ON rt1.c0 WHERE (((((rt1.c2)<(rt0.c2))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt1.c0 END) AND (((((t0.c1)OR(rt1.c0)))AND(rt0.c1))))) ORDER BY ((((NULL)*('6{'))) BETWEEN (rt0.c2 COLLATE BINARY) AND (((t0.c2)GLOB(t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)<(rt0.c2))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt1.c0 END) AND (((((t0.c1)OR(rt1.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON CHAR(((rt1.c4) NOT NULL)) RIGHT OUTER JOIN rt1 ON rt1.c0 ORDER BY ((((NULL)*('6{'))) BETWEEN (rt0.c2 COLLATE BINARY) AND (((t0.c2)GLOB(t0.c2)))));
SELECT ALL * FROM t0 INNER JOIN rt0 ON CHAR(((rt1.c4) NOT NULL)) RIGHT OUTER JOIN rt1 ON rt1.c0 WHERE (((((rt1.c2)<(rt0.c2))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt1.c0 END) AND (((((t0.c1)OR(rt1.c0)))AND(rt0.c1))))) ORDER BY ((((NULL)*('6{'))) BETWEEN (rt0.c2 COLLATE BINARY) AND (((t0.c2)GLOB(t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)<(rt0.c2))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt1.c0 END) AND (((((t0.c1)OR(rt1.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON CHAR(((rt1.c4) NOT NULL)) RIGHT OUTER JOIN rt1 ON rt1.c0 ORDER BY ((((NULL)*('6{'))) BETWEEN (rt0.c2 COLLATE BINARY) AND (((t0.c2)GLOB(t0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) AS REAL)) ORDER BY (+ (((rt0.c1)OR(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY (+ (((rt0.c1)OR(rt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) AS REAL)) ORDER BY (+ (((rt0.c1)OR(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY (+ (((rt0.c1)OR(rt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) AS REAL)) ORDER BY (+ (((rt0.c1)OR(rt0.c0)))) DESC;
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) THEN ((rt0.c1)>(rt0.c1)) END) ORDER BY CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) THEN ((rt0.c1)>(rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END COLLATE RTRIM ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) THEN ((rt0.c1)>(rt0.c1)) END) ORDER BY CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) THEN ((rt0.c1)>(rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END COLLATE RTRIM ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) THEN ((rt0.c1)>(rt0.c1)) END) ORDER BY CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END COLLATE RTRIM ASC  NULLS LAST;
SELECT * FROM t0 WHERE (((CAST(t0.c1 AS BLOB))LIKE(((t0.c0)IS NOT(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c1 AS BLOB))LIKE(((t0.c0)IS NOT(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((CAST(t0.c1 AS BLOB))LIKE(((t0.c0)IS NOT(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c1 AS BLOB))LIKE(((t0.c0)IS NOT(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((CAST(t0.c1 AS BLOB))LIKE(((t0.c0)IS NOT(t0.c0)))));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN rt0 ON 0xffffffffc0794e83 INNER JOIN t0 ON (((rt0.c2)&('-1267072247')) IN (((rt1.c1) ISNULL))) WHERE (CASE WHEN ((((rt1.c3)AND(rt1.c0)))AND(rt0.c0)) THEN (+ (rt1.c3)) END) ORDER BY ('744685869' IN ()) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt1.c3)AND(rt1.c0)))AND(rt0.c0)) THEN (+ (rt1.c3)) END) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON 0xffffffffc0794e83 INNER JOIN t0 ON (((rt0.c2)&('-1267072247')) IN (((rt1.c1) ISNULL))) ORDER BY ('744685869' IN ()) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1 INNER JOIN rt0 ON 0xffffffffc0794e83 INNER JOIN t0 ON (((rt0.c2)&('-1267072247')) IN (((rt1.c1) ISNULL))) WHERE (CASE WHEN ((((rt1.c3)AND(rt1.c0)))AND(rt0.c0)) THEN (+ (rt1.c3)) END) ORDER BY ('744685869' IN ()) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt1.c3)AND(rt1.c0)))AND(rt0.c0)) THEN (+ (rt1.c3)) END) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON 0xffffffffc0794e83 INNER JOIN t0 ON (((rt0.c2)&('-1267072247')) IN (((rt1.c1) ISNULL))) ORDER BY ('744685869' IN ()) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1 INNER JOIN rt0 ON 0xffffffffc0794e83 INNER JOIN t0 ON (((rt0.c2)&('-1267072247')) IN (((rt1.c1) ISNULL))) WHERE (CASE WHEN ((((rt1.c3)AND(rt1.c0)))AND(rt0.c0)) THEN (+ (rt1.c3)) END) ORDER BY ('744685869' IN ()) COLLATE NOCASE;
SELECT * FROM rt1, rt0 WHERE ('-475664567');
SELECT SUM(count) FROM (SELECT ALL (('-475664567') IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE ('-475664567');
SELECT SUM(count) FROM (SELECT ALL (('-475664567') IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE ('-475664567');
SELECT * FROM t0, rt0 WHERE (UPPER(CAST(t0.c1 AS REAL))) ORDER BY ((t0.c2)<=(0.12188791091625206)) DESC, ((((x'acaf')AND(((((t0.c2)OR(t0.c0)))OR(t0.c2)))))OR('')) ASC;
SELECT SUM(count) FROM (SELECT ((UPPER(CAST(t0.c1 AS REAL))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((t0.c2)<=(0.12188791091625206)) DESC, ((((x'acaf')AND(((((t0.c2)OR(t0.c0)))OR(t0.c2)))))OR('')) ASC);
SELECT * FROM t0, rt0 WHERE (UPPER(CAST(t0.c1 AS REAL))) ORDER BY ((t0.c2)<=(0.12188791091625206)) DESC, ((((x'acaf')AND(((((t0.c2)OR(t0.c0)))OR(t0.c2)))))OR('')) ASC;
SELECT SUM(count) FROM (SELECT ((UPPER(CAST(t0.c1 AS REAL))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((t0.c2)<=(0.12188791091625206)) DESC, ((((x'acaf')AND(((((t0.c2)OR(t0.c0)))OR(t0.c2)))))OR('')) ASC);
SELECT * FROM t0, rt0 WHERE (UPPER(CAST(t0.c1 AS REAL))) ORDER BY ((t0.c2)<=(0.12188791091625206)) DESC, ((((x'acaf')AND(((((t0.c2)OR(t0.c0)))OR(t0.c2)))))OR('')) ASC;
SELECT ALL * FROM rt0, t0, rt1 WHERE ((+ ((rt1.c3 IN ()))));
SELECT SUM(count) FROM (SELECT (((+ ((rt1.c3 IN ())))) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL * FROM rt0, t0, rt1 WHERE ((+ ((rt1.c3 IN ()))));
SELECT SUM(count) FROM (SELECT (((+ ((rt1.c3 IN ())))) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL * FROM rt0, t0, rt1 WHERE ((+ ((rt1.c3 IN ()))));
SELECT COUNT(*) FROM rt0 WHERE (0.25131545736678695) ORDER BY rt0.c0  NULLS LAST, ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) IN ());
SELECT SUM(count) FROM (SELECT ((0.25131545736678695) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0  NULLS LAST, ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (0.25131545736678695) ORDER BY rt0.c0  NULLS LAST, ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) IN ());
SELECT SUM(count) FROM (SELECT ((0.25131545736678695) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0  NULLS LAST, ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (0.25131545736678695) ORDER BY rt0.c0  NULLS LAST, ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) IN ());
SELECT * FROM rt1 WHERE (((rt1.c4 COLLATE BINARY)<<(((((rt1.c0)OR(rt1.c2)))AND(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c4 COLLATE BINARY)<<(((((rt1.c0)OR(rt1.c2)))AND(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c4 COLLATE BINARY)<<(((((rt1.c0)OR(rt1.c2)))AND(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c4 COLLATE BINARY)<<(((((rt1.c0)OR(rt1.c2)))AND(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c4 COLLATE BINARY)<<(((((rt1.c0)OR(rt1.c2)))AND(rt1.c1)))));
SELECT * FROM rt0, rt1 WHERE (rt1.c3) ORDER BY ((((rt1.c4)OR(rt0.c1)))AND(rt1.c4 COLLATE NOCASE)), ((CASE WHEN rt1.c2 THEN rt0.c1 ELSE rt1.c4 END)=(((rt0.c0)<<(rt1.c4)))) ASC  NULLS FIRST, rt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt1.c4)OR(rt0.c1)))AND(rt1.c4 COLLATE NOCASE)), ((CASE WHEN rt1.c2 THEN rt0.c1 ELSE rt1.c4 END)=(((rt0.c0)<<(rt1.c4)))) ASC  NULLS FIRST, rt1.c0);
SELECT * FROM rt0, rt1 WHERE (rt1.c3) ORDER BY ((((rt1.c4)OR(rt0.c1)))AND(rt1.c4 COLLATE NOCASE)), ((CASE WHEN rt1.c2 THEN rt0.c1 ELSE rt1.c4 END)=(((rt0.c0)<<(rt1.c4)))) ASC  NULLS FIRST, rt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt1.c4)OR(rt0.c1)))AND(rt1.c4 COLLATE NOCASE)), ((CASE WHEN rt1.c2 THEN rt0.c1 ELSE rt1.c4 END)=(((rt0.c0)<<(rt1.c4)))) ASC  NULLS FIRST, rt1.c0);
SELECT * FROM rt0, rt1 WHERE (rt1.c3) ORDER BY ((((rt1.c4)OR(rt0.c1)))AND(rt1.c4 COLLATE NOCASE)), ((CASE WHEN rt1.c2 THEN rt0.c1 ELSE rt1.c4 END)=(((rt0.c0)<<(rt1.c4)))) ASC  NULLS FIRST, rt1.c0;
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON ((((((t0.c1)AND(t0.c1)))AND(rt0.c2)))AND(INSTR(t0.c1, rt0.c2))) WHERE (CAST(rt0.c0 AS INTEGER)) ORDER BY rt0.c0 COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS INTEGER)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((((((t0.c1)AND(t0.c1)))AND(rt0.c2)))AND(INSTR(t0.c1, rt0.c2))) ORDER BY rt0.c0 COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON ((((((t0.c1)AND(t0.c1)))AND(rt0.c2)))AND(INSTR(t0.c1, rt0.c2))) WHERE (CAST(rt0.c0 AS INTEGER)) ORDER BY rt0.c0 COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS INTEGER)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((((((t0.c1)AND(t0.c1)))AND(rt0.c2)))AND(INSTR(t0.c1, rt0.c2))) ORDER BY rt0.c0 COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON ((((((t0.c1)AND(t0.c1)))AND(rt0.c2)))AND(INSTR(t0.c1, rt0.c2))) WHERE (CAST(rt0.c0 AS INTEGER)) ORDER BY rt0.c0 COLLATE BINARY DESC  NULLS FIRST;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON ((rt1.c4 COLLATE BINARY) NOTNULL) RIGHT OUTER JOIN rt1 ON ((((((rt1.c3)AND(rt1.c0)))OR(rt0.c2)))LIKE(CAST(rt1.c0 AS REAL))) WHERE (CASE WHEN t0.c2 THEN rt0.c0 ELSE ((rt0.c0) BETWEEN (rt0.c1) AND (rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c2 THEN rt0.c0 ELSE ((rt0.c0) BETWEEN (rt0.c1) AND (rt1.c0)) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((rt1.c4 COLLATE BINARY) NOTNULL) RIGHT OUTER JOIN rt1 ON ((((((rt1.c3)AND(rt1.c0)))OR(rt0.c2)))LIKE(CAST(rt1.c0 AS REAL))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON ((rt1.c4 COLLATE BINARY) NOTNULL) RIGHT OUTER JOIN rt1 ON ((((((rt1.c3)AND(rt1.c0)))OR(rt0.c2)))LIKE(CAST(rt1.c0 AS REAL))) WHERE (CASE WHEN t0.c2 THEN rt0.c0 ELSE ((rt0.c0) BETWEEN (rt0.c1) AND (rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c2 THEN rt0.c0 ELSE ((rt0.c0) BETWEEN (rt0.c1) AND (rt1.c0)) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((rt1.c4 COLLATE BINARY) NOTNULL) RIGHT OUTER JOIN rt1 ON ((((((rt1.c3)AND(rt1.c0)))OR(rt0.c2)))LIKE(CAST(rt1.c0 AS REAL))));
SELECT COUNT(*) FROM rt1 NOT INDEXED WHERE (((1377156168)*(((((rt1.c2)OR(rt1.c1)))OR(rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((1377156168)*(((((rt1.c2)OR(rt1.c1)))OR(rt1.c4))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 NOT INDEXED WHERE (((1377156168)*(((((rt1.c2)OR(rt1.c1)))OR(rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((1377156168)*(((((rt1.c2)OR(rt1.c1)))OR(rt1.c4))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 NOT INDEXED WHERE (((1377156168)*(((((rt1.c2)OR(rt1.c1)))OR(rt1.c4)))));
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE ((('-901209041')&(CAST(rt1.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((('-901209041')&(CAST(rt1.c2 AS TEXT)))) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE ((('-901209041')&(CAST(rt1.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((('-901209041')&(CAST(rt1.c2 AS TEXT)))) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE ((('-901209041')&(CAST(rt1.c2 AS TEXT))));
SELECT * FROM rt0, rt1 WHERE (rt1.c2) ORDER BY (((rt1.c4)) NOT BETWEEN ((CAST(rt1.c1 AS TEXT))) AND ((CASE rt1.c3  WHEN rt1.c1 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt1.c4)) NOT BETWEEN ((CAST(rt1.c1 AS TEXT))) AND ((CASE rt1.c3  WHEN rt1.c1 THEN rt0.c1 ELSE rt0.c1 END))));
SELECT * FROM rt0, rt1 WHERE (rt1.c2) ORDER BY (((rt1.c4)) NOT BETWEEN ((CAST(rt1.c1 AS TEXT))) AND ((CASE rt1.c3  WHEN rt1.c1 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt1.c4)) NOT BETWEEN ((CAST(rt1.c1 AS TEXT))) AND ((CASE rt1.c3  WHEN rt1.c1 THEN rt0.c1 ELSE rt0.c1 END))));
SELECT * FROM rt0, rt1 WHERE (rt1.c2) ORDER BY (((rt1.c4)) NOT BETWEEN ((CAST(rt1.c1 AS TEXT))) AND ((CASE rt1.c3  WHEN rt1.c1 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((+ ((+ (rt1.c0))))) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((+ (rt1.c0))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt0.c2  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((+ ((+ (rt1.c0))))) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((+ (rt1.c0))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt0.c2  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((+ ((+ (rt1.c0))))) ORDER BY rt0.c2  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (json_array(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), '5)<*X-f㫗x')) ORDER BY (((LIKELIHOOD(rt0.c0, 0.10491634650014059), ((rt0.c1)>(rt0.c1)), (rt0.c0 IN ())))==((LOWER(DISTINCT rt0.c2), ((rt0.c0)<(rt0.c0)), ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(x'')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_array(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), '5)<*X-f㫗x')) IS TRUE)  as count FROM rt0 ORDER BY (((LIKELIHOOD(rt0.c0, 0.10491634650014059), ((rt0.c1)>(rt0.c1)), (rt0.c0 IN ())))==((LOWER(DISTINCT rt0.c2), ((rt0.c0)<(rt0.c0)), ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(x'')))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (json_array(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), '5)<*X-f㫗x')) ORDER BY (((LIKELIHOOD(rt0.c0, 0.10491634650014059), ((rt0.c1)>(rt0.c1)), (rt0.c0 IN ())))==((LOWER(DISTINCT rt0.c2), ((rt0.c0)<(rt0.c0)), ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(x'')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_array(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), '5)<*X-f㫗x')) IS TRUE)  as count FROM rt0 ORDER BY (((LIKELIHOOD(rt0.c0, 0.10491634650014059), ((rt0.c1)>(rt0.c1)), (rt0.c0 IN ())))==((LOWER(DISTINCT rt0.c2), ((rt0.c0)<(rt0.c0)), ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(x'')))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (json_array(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), '5)<*X-f㫗x')) ORDER BY (((LIKELIHOOD(rt0.c0, 0.10491634650014059), ((rt0.c1)>(rt0.c1)), (rt0.c0 IN ())))==((LOWER(DISTINCT rt0.c2), ((rt0.c0)<(rt0.c0)), ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(x'')))))  NULLS LAST;
SELECT * FROM t0 WHERE (CAST(((t0.c1)LIKE(t0.c2)) AS NUMERIC)) ORDER BY t0.c1 DESC  NULLS FIRST, ((((t0.c0) IS FALSE)) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c1)LIKE(t0.c2)) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY t0.c1 DESC  NULLS FIRST, ((((t0.c0) IS FALSE)) NOT NULL) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (CAST(((t0.c1)LIKE(t0.c2)) AS NUMERIC)) ORDER BY t0.c1 DESC  NULLS FIRST, ((((t0.c0) IS FALSE)) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c1)LIKE(t0.c2)) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY t0.c1 DESC  NULLS FIRST, ((((t0.c0) IS FALSE)) NOT NULL) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (CAST(((t0.c1)LIKE(t0.c2)) AS NUMERIC)) ORDER BY t0.c1 DESC  NULLS FIRST, ((((t0.c0) IS FALSE)) NOT NULL) ASC  NULLS FIRST;
SELECT * FROM t0, rt1, rt0 WHERE ((((((rt1.c0) NOT NULL), ((rt0.c0) NOT BETWEEN (rt1.c4) AND (rt0.c1)), ((rt1.c0) NOTNULL)))<(((((rt1.c1))=((rt1.c2))), (rt1.c4 IN ()), ((((((((t0.c0)AND(rt1.c4)))OR(rt1.c4)))OR(rt0.c2)))AND(t0.c2))))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0) NOT NULL), ((rt0.c0) NOT BETWEEN (rt1.c4) AND (rt0.c1)), ((rt1.c0) NOTNULL)))<(((((rt1.c1))==((rt1.c2))), (rt1.c4 IN ()), ((((((((t0.c0)AND(rt1.c4)))OR(rt1.c4)))OR(rt0.c2)))AND(t0.c2)))))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT * FROM t0, rt1, rt0 WHERE ((((((rt1.c0) NOT NULL), ((rt0.c0) NOT BETWEEN (rt1.c4) AND (rt0.c1)), ((rt1.c0) NOTNULL)))<(((((rt1.c1))=((rt1.c2))), (rt1.c4 IN ()), ((((((((t0.c0)AND(rt1.c4)))OR(rt1.c4)))OR(rt0.c2)))AND(t0.c2))))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0) NOT NULL), ((rt0.c0) NOT BETWEEN (rt1.c4) AND (rt0.c1)), ((rt1.c0) NOTNULL)))<(((((rt1.c1))==((rt1.c2))), (rt1.c4 IN ()), ((((((((t0.c0)AND(rt1.c4)))OR(rt1.c4)))OR(rt0.c2)))AND(t0.c2)))))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT * FROM t0, rt1, rt0 WHERE ((((((rt1.c0) NOT NULL), ((rt0.c0) NOT BETWEEN (rt1.c4) AND (rt0.c1)), ((rt1.c0) NOTNULL)))<(((((rt1.c1))=((rt1.c2))), (rt1.c4 IN ()), ((((((((t0.c0)AND(rt1.c4)))OR(rt1.c4)))OR(rt0.c2)))AND(t0.c2))))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)) AND ((((rt0.c1)>=(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)) AND ((((rt0.c1)>=(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)) AND ((((rt0.c1)>=(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)) AND ((((rt0.c1)>=(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)) AND ((((rt0.c1)>=(rt0.c1))))));
SELECT ALL * FROM rt1 LEFT OUTER JOIN t0 ON ((((((t0.c1)) BETWEEN (('')) AND ((rt1.c4)))))>((CASE WHEN t0.c1 THEN t0.c0 END))) LEFT OUTER JOIN rt0 ON ((LIKELIHOOD(rt1.c0, 0.5939839087468347)) IS TRUE) WHERE (CASE GLOB(t0.c0, rt1.c2)  WHEN ((t0.c1) ISNULL) THEN ((((rt1.c4)AND(rt1.c4)))AND(rt1.c4)) END) ORDER BY CASE WHEN ((x'')GLOB(rt1.c4)) THEN ((rt1.c3) NOT BETWEEN (rt1.c1) AND (t0.c0)) ELSE 0xffffffffeae70552 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE GLOB(t0.c0, rt1.c2)  WHEN ((t0.c1) ISNULL) THEN ((((rt1.c4)AND(rt1.c4)))AND(rt1.c4)) END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON ((((((t0.c1)) BETWEEN (('')) AND ((rt1.c4)))))>((CASE WHEN t0.c1 THEN t0.c0 END))) LEFT OUTER JOIN rt0 ON ((LIKELIHOOD(rt1.c0, 0.5939839087468347)) IS TRUE) ORDER BY CASE WHEN ((x'')GLOB(rt1.c4)) THEN ((rt1.c3) NOT BETWEEN (rt1.c1) AND (t0.c0)) ELSE 0Xffffffffeae70552 END DESC  NULLS FIRST);
SELECT ALL * FROM rt1 LEFT OUTER JOIN t0 ON ((((((t0.c1)) BETWEEN (('')) AND ((rt1.c4)))))>((CASE WHEN t0.c1 THEN t0.c0 END))) LEFT OUTER JOIN rt0 ON ((LIKELIHOOD(rt1.c0, 0.5939839087468347)) IS TRUE) WHERE (CASE GLOB(t0.c0, rt1.c2)  WHEN ((t0.c1) ISNULL) THEN ((((rt1.c4)AND(rt1.c4)))AND(rt1.c4)) END) ORDER BY CASE WHEN ((x'')GLOB(rt1.c4)) THEN ((rt1.c3) NOT BETWEEN (rt1.c1) AND (t0.c0)) ELSE 0xffffffffeae70552 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE GLOB(t0.c0, rt1.c2)  WHEN ((t0.c1) ISNULL) THEN ((((rt1.c4)AND(rt1.c4)))AND(rt1.c4)) END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON ((((((t0.c1)) BETWEEN (('')) AND ((rt1.c4)))))>((CASE WHEN t0.c1 THEN t0.c0 END))) LEFT OUTER JOIN rt0 ON ((LIKELIHOOD(rt1.c0, 0.5939839087468347)) IS TRUE) ORDER BY CASE WHEN ((x'')GLOB(rt1.c4)) THEN ((rt1.c3) NOT BETWEEN (rt1.c1) AND (t0.c0)) ELSE 0Xffffffffeae70552 END DESC  NULLS FIRST);
SELECT ALL * FROM rt1 LEFT OUTER JOIN t0 ON ((((((t0.c1)) BETWEEN (('')) AND ((rt1.c4)))))>((CASE WHEN t0.c1 THEN t0.c0 END))) LEFT OUTER JOIN rt0 ON ((LIKELIHOOD(rt1.c0, 0.5939839087468347)) IS TRUE) WHERE (CASE GLOB(t0.c0, rt1.c2)  WHEN ((t0.c1) ISNULL) THEN ((((rt1.c4)AND(rt1.c4)))AND(rt1.c4)) END) ORDER BY CASE WHEN ((x'')GLOB(rt1.c4)) THEN ((rt1.c3) NOT BETWEEN (rt1.c1) AND (t0.c0)) ELSE 0xffffffffeae70552 END DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, rt1 WHERE (CAST(((((((((rt0.c0)AND(x'')))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)) AS NUMERIC)) ORDER BY ((rt1.c1 IN ()) IN (CAST(rt1.c1 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c0)AND(x'')))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt1.c1 IN ()) IN (CAST(rt1.c1 AS TEXT))) DESC);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CAST(((((((((rt0.c0)AND(x'')))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)) AS NUMERIC)) ORDER BY ((rt1.c1 IN ()) IN (CAST(rt1.c1 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c0)AND(x'')))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt1.c1 IN ()) IN (CAST(rt1.c1 AS TEXT))) DESC);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CAST(((((((((rt0.c0)AND(x'')))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)) AS NUMERIC)) ORDER BY ((rt1.c1 IN ()) IN (CAST(rt1.c1 AS TEXT))) DESC;
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c1, rt1.c0, NULL)) NOT BETWEEN ((rt1.c3, CASE rt1.c0  WHEN rt1.c0 THEN NULL WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c4 END, ((rt1.c0)LIKE(rt1.c2)))) AND ((((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c4)), TIME(rt1.c3, rt1.c3, rt1.c2), (0.509044460774386 IN (rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1, rt1.c0, NULL)) NOT BETWEEN ((rt1.c3, CASE rt1.c0  WHEN rt1.c0 THEN NULL WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c4 END, ((rt1.c0)LIKE(rt1.c2)))) AND ((((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c4)), TIME(rt1.c3, rt1.c3, rt1.c2), (0.509044460774386 IN (rt1.c0)))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c1, rt1.c0, NULL)) NOT BETWEEN ((rt1.c3, CASE rt1.c0  WHEN rt1.c0 THEN NULL WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c4 END, ((rt1.c0)LIKE(rt1.c2)))) AND ((((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c4)), TIME(rt1.c3, rt1.c3, rt1.c2), (0.509044460774386 IN (rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1, rt1.c0, NULL)) NOT BETWEEN ((rt1.c3, CASE rt1.c0  WHEN rt1.c0 THEN NULL WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c4 END, ((rt1.c0)LIKE(rt1.c2)))) AND ((((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c4)), TIME(rt1.c3, rt1.c3, rt1.c2), (0.509044460774386 IN (rt1.c0)))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c1, rt1.c0, NULL)) NOT BETWEEN ((rt1.c3, CASE rt1.c0  WHEN rt1.c0 THEN NULL WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c4 END, ((rt1.c0)LIKE(rt1.c2)))) AND ((((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c4)), TIME(rt1.c3, rt1.c3, rt1.c2), (0.509044460774386 IN (rt1.c0))))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((SUBSTR(t0.c1, t0.c0), (((t0.c0, t0.c1, t0.c0))=((t0.c0, t0.c1, 'g'))), (((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c2)))))==((TIME(NULL, t0.c2, t0.c2, t0.c2, t0.c1), ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)), ((((((((t0.c2)OR(t0.c1)))OR(t0.c2)))AND(t0.c1)))OR(t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((SUBSTR(t0.c1, t0.c0), (((t0.c0, t0.c1, t0.c0))==((t0.c0, t0.c1, 'g'))), (((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c2)))))=((TIME(NULL, t0.c2, t0.c2, t0.c2, t0.c1), ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)), ((((((((t0.c2)OR(t0.c1)))OR(t0.c2)))AND(t0.c1)))OR(t0.c1)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((SUBSTR(t0.c1, t0.c0), (((t0.c0, t0.c1, t0.c0))=((t0.c0, t0.c1, 'g'))), (((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c2)))))==((TIME(NULL, t0.c2, t0.c2, t0.c2, t0.c1), ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)), ((((((((t0.c2)OR(t0.c1)))OR(t0.c2)))AND(t0.c1)))OR(t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((SUBSTR(t0.c1, t0.c0), (((t0.c0, t0.c1, t0.c0))==((t0.c0, t0.c1, 'g'))), (((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c2)))))=((TIME(NULL, t0.c2, t0.c2, t0.c2, t0.c1), ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)), ((((((((t0.c2)OR(t0.c1)))OR(t0.c2)))AND(t0.c1)))OR(t0.c1)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((SUBSTR(t0.c1, t0.c0), (((t0.c0, t0.c1, t0.c0))=((t0.c0, t0.c1, 'g'))), (((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c2)))))==((TIME(NULL, t0.c2, t0.c2, t0.c2, t0.c1), ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)), ((((((((t0.c2)OR(t0.c1)))OR(t0.c2)))AND(t0.c1)))OR(t0.c1))))));
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (NULL) ORDER BY ((CAST(rt1.c0 AS INTEGER)) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY ((CAST(rt1.c0 AS INTEGER)) NOT NULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (NULL) ORDER BY ((CAST(rt1.c0 AS INTEGER)) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY ((CAST(rt1.c0 AS INTEGER)) NOT NULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (NULL) ORDER BY ((CAST(rt1.c0 AS INTEGER)) NOT NULL) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0 WHERE (SQLITE_COMPILEOPTION_GET((((rt0.c1)) BETWEEN ((t0.c2)) AND ((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET((((rt0.c1)) BETWEEN ((t0.c2)) AND ((rt0.c0))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (SQLITE_COMPILEOPTION_GET((((rt0.c1)) BETWEEN ((t0.c2)) AND ((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET((((rt0.c1)) BETWEEN ((t0.c2)) AND ((rt0.c0))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (SQLITE_COMPILEOPTION_GET((((rt0.c1)) BETWEEN ((t0.c2)) AND ((rt0.c0)))));
SELECT ALL * FROM rt0, rt1 CROSS JOIN t0 ON ((IFNULL(t0.c0, rt1.c4)) BETWEEN (((((rt0.c2)OR('335202035')))AND(t0.c0))) AND (CASE t0.c0  WHEN t0.c2 THEN rt0.c1 WHEN rt0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c2 ELSE x'' END)) WHERE (CASE (t0.c2 IN ())  WHEN (((rt1.c1))<((rt1.c1))) THEN ((rt0.c2) BETWEEN (t0.c0) AND (rt0.c1)) END) ORDER BY (((rt1.c4))<=((((((t0.c2)AND(-741228)))OR(t0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (t0.c2 IN ())  WHEN (((rt1.c1))<((rt1.c1))) THEN ((rt0.c2) BETWEEN (t0.c0) AND (rt0.c1)) END) IS TRUE)  as count FROM rt0, rt1 CROSS JOIN t0 ON ((IFNULL(t0.c0, rt1.c4)) BETWEEN (((((rt0.c2)OR('335202035')))AND(t0.c0))) AND (CASE t0.c0  WHEN t0.c2 THEN rt0.c1 WHEN rt0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c2 ELSE x'' END)) ORDER BY (((rt1.c4))<=((((((t0.c2)AND(-741228)))OR(t0.c0))))) DESC);
SELECT ALL * FROM rt0, rt1 CROSS JOIN t0 ON ((IFNULL(t0.c0, rt1.c4)) BETWEEN (((((rt0.c2)OR('335202035')))AND(t0.c0))) AND (CASE t0.c0  WHEN t0.c2 THEN rt0.c1 WHEN rt0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c2 ELSE x'' END)) WHERE (CASE (t0.c2 IN ())  WHEN (((rt1.c1))<((rt1.c1))) THEN ((rt0.c2) BETWEEN (t0.c0) AND (rt0.c1)) END) ORDER BY (((rt1.c4))<=((((((t0.c2)AND(-741228)))OR(t0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (t0.c2 IN ())  WHEN (((rt1.c1))<((rt1.c1))) THEN ((rt0.c2) BETWEEN (t0.c0) AND (rt0.c1)) END) IS TRUE)  as count FROM rt0, rt1 CROSS JOIN t0 ON ((IFNULL(t0.c0, rt1.c4)) BETWEEN (((((rt0.c2)OR('335202035')))AND(t0.c0))) AND (CASE t0.c0  WHEN t0.c2 THEN rt0.c1 WHEN rt0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c2 ELSE x'' END)) ORDER BY (((rt1.c4))<=((((((t0.c2)AND(-741228)))OR(t0.c0))))) DESC);
SELECT ALL * FROM rt0, rt1 CROSS JOIN t0 ON ((IFNULL(t0.c0, rt1.c4)) BETWEEN (((((rt0.c2)OR('335202035')))AND(t0.c0))) AND (CASE t0.c0  WHEN t0.c2 THEN rt0.c1 WHEN rt0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c2 ELSE x'' END)) WHERE (CASE (t0.c2 IN ())  WHEN (((rt1.c1))<((rt1.c1))) THEN ((rt0.c2) BETWEEN (t0.c0) AND (rt0.c1)) END) ORDER BY (((rt1.c4))<=((((((t0.c2)AND(-741228)))OR(t0.c0))))) DESC;
SELECT ALL * FROM rt0, rt1, t0 WHERE ((((~ (rt1.c3)))LIKE(((rt1.c3)LIKE(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt1.c3)))LIKE(((rt1.c3)LIKE(rt0.c2))))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL * FROM rt0, rt1, t0 WHERE ((((~ (rt1.c3)))LIKE(((rt1.c3)LIKE(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt1.c3)))LIKE(((rt1.c3)LIKE(rt0.c2))))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL * FROM rt0, rt1, t0 WHERE ((((~ (rt1.c3)))LIKE(((rt1.c3)LIKE(rt0.c2)))));
SELECT COUNT(*) FROM rt0, rt1 WHERE (((CASE NULL  WHEN rt1.c4 THEN rt1.c4 WHEN rt0.c1 THEN rt0.c2 WHEN rt1.c1 THEN rt0.c0 END)GLOB('0.720325081884471'))) ORDER BY 2119001119 DESC, (x'' IN ()) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE NULL  WHEN rt1.c4 THEN rt1.c4 WHEN rt0.c1 THEN rt0.c2 WHEN rt1.c1 THEN rt0.c0 END)GLOB('0.720325081884471'))) IS TRUE)  as count FROM rt0, rt1 ORDER BY 2119001119 DESC, (x'' IN ()) COLLATE BINARY ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((CASE NULL  WHEN rt1.c4 THEN rt1.c4 WHEN rt0.c1 THEN rt0.c2 WHEN rt1.c1 THEN rt0.c0 END)GLOB('0.720325081884471'))) ORDER BY 2119001119 DESC, (x'' IN ()) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE NULL  WHEN rt1.c4 THEN rt1.c4 WHEN rt0.c1 THEN rt0.c2 WHEN rt1.c1 THEN rt0.c0 END)GLOB('0.720325081884471'))) IS TRUE)  as count FROM rt0, rt1 ORDER BY 2119001119 DESC, (x'' IN ()) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 WHERE (((rt1.c0)<<(rt1.c4)) COLLATE NOCASE) ORDER BY rt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0)<<(rt1.c4)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt0.c1 DESC  NULLS LAST);
SELECT ALL * FROM rt0, rt1 WHERE (((rt1.c0)<<(rt1.c4)) COLLATE NOCASE) ORDER BY rt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0)<<(rt1.c4)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt0.c1 DESC  NULLS LAST);
SELECT ALL * FROM rt0, rt1 WHERE (((rt1.c0)<<(rt1.c4)) COLLATE NOCASE) ORDER BY rt0.c1 DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON ((LOWER(t0.c2)) BETWEEN (rt0.c1) AND (((t0.c1) IS FALSE))) WHERE ((((t0.c2 IN (t0.c0))) IS TRUE)) ORDER BY CAST(CASE rt0.c1  WHEN rt0.c0 THEN t0.c0 WHEN '-1648145742' THEN '1978060992' WHEN 'Sa' THEN t0.c2 ELSE t0.c2 END AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN (t0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON ((LOWER(t0.c2)) BETWEEN (rt0.c1) AND (((t0.c1) IS FALSE))) ORDER BY CAST(CASE rt0.c1  WHEN rt0.c0 THEN t0.c0 WHEN '-1648145742' THEN '1978060992' WHEN 'Sa' THEN t0.c2 ELSE t0.c2 END AS NUMERIC) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON ((LOWER(t0.c2)) BETWEEN (rt0.c1) AND (((t0.c1) IS FALSE))) WHERE ((((t0.c2 IN (t0.c0))) IS TRUE)) ORDER BY CAST(CASE rt0.c1  WHEN rt0.c0 THEN t0.c0 WHEN '-1648145742' THEN '1978060992' WHEN 'Sa' THEN t0.c2 ELSE t0.c2 END AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN (t0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON ((LOWER(t0.c2)) BETWEEN (rt0.c1) AND (((t0.c1) IS FALSE))) ORDER BY CAST(CASE rt0.c1  WHEN rt0.c0 THEN t0.c0 WHEN '-1648145742' THEN '1978060992' WHEN 'Sa' THEN t0.c2 ELSE t0.c2 END AS NUMERIC) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON ((LOWER(t0.c2)) BETWEEN (rt0.c1) AND (((t0.c1) IS FALSE))) WHERE ((((t0.c2 IN (t0.c0))) IS TRUE)) ORDER BY CAST(CASE rt0.c1  WHEN rt0.c0 THEN t0.c0 WHEN '-1648145742' THEN '1978060992' WHEN 'Sa' THEN t0.c2 ELSE t0.c2 END AS NUMERIC) DESC  NULLS LAST;
SELECT * FROM rt1 WHERE (rt1.c0) ORDER BY (((((rt1.c1)>(rt1.c2))))>(((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c1)>(rt1.c2))))>(((rt1.c1 IN ())))));
SELECT * FROM rt1 WHERE (rt1.c0) ORDER BY (((((rt1.c1)>(rt1.c2))))>(((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c1)>(rt1.c2))))>(((rt1.c1 IN ())))));
SELECT * FROM rt1 WHERE (rt1.c0) ORDER BY (((((rt1.c1)>(rt1.c2))))>(((rt1.c1 IN ()))));
SELECT ALL * FROM t0, rt1 WHERE (((((rt1.c3)==('sa')))-(((rt1.c4)OR(t0.c1))))) ORDER BY ((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt1.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)==('sa')))-(((rt1.c4)OR(t0.c1))))) IS TRUE)  as count FROM t0, rt1 ORDER BY ((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt1.c0)) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM t0, rt1 WHERE (((((rt1.c3)==('sa')))-(((rt1.c4)OR(t0.c1))))) ORDER BY ((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt1.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)==('sa')))-(((rt1.c4)OR(t0.c1))))) IS TRUE)  as count FROM t0, rt1 ORDER BY ((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt1.c0)) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM t0, rt1 WHERE (((((rt1.c3)==('sa')))-(((rt1.c4)OR(t0.c1))))) ORDER BY ((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt1.c0)) COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM rt0 FULL OUTER JOIN rt1 ON CAST(((rt1.c3) IS FALSE) AS NUMERIC) WHERE (((rt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 IN ()) IN ())) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON CAST(((rt1.c3) IS FALSE) AS NUMERIC));
SELECT ALL * FROM rt0 FULL OUTER JOIN rt1 ON CAST(((rt1.c3) IS FALSE) AS NUMERIC) WHERE (((rt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 IN ()) IN ())) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON CAST(((rt1.c3) IS FALSE) AS NUMERIC));
SELECT ALL * FROM rt0 FULL OUTER JOIN rt1 ON CAST(((rt1.c3) IS FALSE) AS NUMERIC) WHERE (((rt0.c0 IN ()) IN ()));
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (CASE ((rt1.c0) IS FALSE)  WHEN ((rt1.c3) NOT BETWEEN (rt1.c1) AND (t0.c1)) THEN rt1.c3 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c0) IS FALSE)  WHEN ((rt1.c3) NOT BETWEEN (rt1.c1) AND (t0.c1)) THEN rt1.c3 COLLATE NOCASE END) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (CASE ((rt1.c0) IS FALSE)  WHEN ((rt1.c3) NOT BETWEEN (rt1.c1) AND (t0.c1)) THEN rt1.c3 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c0) IS FALSE)  WHEN ((rt1.c3) NOT BETWEEN (rt1.c1) AND (t0.c1)) THEN rt1.c3 COLLATE NOCASE END) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (CASE ((rt1.c0) IS FALSE)  WHEN ((rt1.c3) NOT BETWEEN (rt1.c1) AND (t0.c1)) THEN rt1.c3 COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((683156936)&(t0.c2))) BETWEEN (rt0.c1 COLLATE NOCASE) AND (((t0.c0) NOT BETWEEN ('196726932') AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((683156936)&(t0.c2))) BETWEEN (rt0.c1 COLLATE NOCASE) AND (((t0.c0) NOT BETWEEN ('196726932') AND (rt0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((683156936)&(t0.c2))) BETWEEN (rt0.c1 COLLATE NOCASE) AND (((t0.c0) NOT BETWEEN ('196726932') AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((683156936)&(t0.c2))) BETWEEN (rt0.c1 COLLATE NOCASE) AND (((t0.c0) NOT BETWEEN ('196726932') AND (rt0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((683156936)&(t0.c2))) BETWEEN (rt0.c1 COLLATE NOCASE) AND (((t0.c0) NOT BETWEEN ('196726932') AND (rt0.c0)))));
SELECT * FROM rt1 WHERE (((rt1.c3)GLOB(NULL)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3)GLOB(NULL)) COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c3)GLOB(NULL)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3)GLOB(NULL)) COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c3)GLOB(NULL)) COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE ((rt0.c1 COLLATE NOCASE IN ())) ORDER BY ((CAST(rt0.c1 AS INTEGER)) BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c2)GLOB(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt0.c1 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c1 AS INTEGER)) BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c2)GLOB(rt0.c2))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((rt0.c1 COLLATE NOCASE IN ())) ORDER BY ((CAST(rt0.c1 AS INTEGER)) BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c2)GLOB(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt0.c1 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c1 AS INTEGER)) BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c2)GLOB(rt0.c2))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((rt0.c1 COLLATE NOCASE IN ())) ORDER BY ((CAST(rt0.c1 AS INTEGER)) BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c2)GLOB(rt0.c2))))  NULLS LAST;
SELECT ALL * FROM rt0, rt1 WHERE (((rt0.c2)<=(rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)<=(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((rt0.c2)<=(rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)<=(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((rt0.c2)<=(rt0.c2)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c4)OR(rt1.c1))))<>((((rt1.c3)IS(rt1.c3)))))) ORDER BY ((((((rt1.c2) IS FALSE))AND(((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c4)))))AND(rt1.c0))  NULLS FIRST, (((rt1.c0))<=((('' IN ()))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c4)OR(rt1.c1))))<>((((rt1.c3)IS(rt1.c3)))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c2) IS FALSE))AND(((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c4)))))AND(rt1.c0))  NULLS FIRST, (((rt1.c0))<=((('' IN ()))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c4)OR(rt1.c1))))<>((((rt1.c3)IS(rt1.c3)))))) ORDER BY ((((((rt1.c2) IS FALSE))AND(((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c4)))))AND(rt1.c0))  NULLS FIRST, (((rt1.c0))<=((('' IN ()))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c4)OR(rt1.c1))))<>((((rt1.c3)IS(rt1.c3)))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c2) IS FALSE))AND(((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c4)))))AND(rt1.c0))  NULLS FIRST, (((rt1.c0))<=((('' IN ()))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c4)OR(rt1.c1))))<>((((rt1.c3)IS(rt1.c3)))))) ORDER BY ((((((rt1.c2) IS FALSE))AND(((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c4)))))AND(rt1.c0))  NULLS FIRST, (((rt1.c0))<=((('' IN ()))))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((((~ (rt0.c2)))GLOB(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY 0.7450210751509834  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c2)))GLOB(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY 0.7450210751509834  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((~ (rt0.c2)))GLOB(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY 0.7450210751509834  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c2)))GLOB(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY 0.7450210751509834  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((~ (rt0.c2)))GLOB(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY 0.7450210751509834  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON rt1.c3 COLLATE BINARY WHERE (((-334314368 IN (rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((-334314368 IN (rt1.c1)) IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON rt1.c3 COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON rt1.c3 COLLATE BINARY WHERE (((-334314368 IN (rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((-334314368 IN (rt1.c1)) IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON rt1.c3 COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON rt1.c3 COLLATE BINARY WHERE (((-334314368 IN (rt1.c1)) IN ()));
SELECT * FROM rt1, rt0 WHERE ((NOT (rt0.c2))) ORDER BY (CASE rt0.c2  WHEN '-434004098' THEN rt0.c0 ELSE rt0.c1 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c2))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (CASE rt0.c2  WHEN '-434004098' THEN rt0.c0 ELSE rt0.c1 END IN ())  NULLS FIRST);
SELECT * FROM rt1, rt0 WHERE ((NOT (rt0.c2))) ORDER BY (CASE rt0.c2  WHEN '-434004098' THEN rt0.c0 ELSE rt0.c1 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c2))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (CASE rt0.c2  WHEN '-434004098' THEN rt0.c0 ELSE rt0.c1 END IN ())  NULLS FIRST);
SELECT * FROM rt1, rt0 WHERE ((NOT (rt0.c2))) ORDER BY (CASE rt0.c2  WHEN '-434004098' THEN rt0.c0 ELSE rt0.c1 END IN ())  NULLS FIRST;
SELECT * FROM rt1, rt0, t0 WHERE ((- ((- (rt1.c2))))) ORDER BY CASE CASE WHEN rt0.c0 THEN t0.c1 WHEN rt1.c2 THEN '1郺7' WHEN rt0.c0 THEN rt1.c2 WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c1 ELSE rt1.c2 END  WHEN ((rt0.c0)IS(t0.c2)) THEN CAST(rt1.c3 AS TEXT) WHEN (((1636254359)) BETWEEN ((t0.c0)) AND ((x''))) THEN (((rt1.c2)) NOT BETWEEN (('೐)')) AND ((rt1.c1))) WHEN ((rt0.c1) IS FALSE) THEN rt1.c4 ELSE ((rt0.c2) IS TRUE) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((- (rt1.c2))))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY CASE CASE WHEN rt0.c0 THEN t0.c1 WHEN rt1.c2 THEN '1郺7' WHEN rt0.c0 THEN rt1.c2 WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c1 ELSE rt1.c2 END  WHEN ((rt0.c0)IS(t0.c2)) THEN CAST(rt1.c3 AS TEXT) WHEN (((1636254359)) BETWEEN ((t0.c0)) AND ((x''))) THEN (((rt1.c2)) NOT BETWEEN (('೐)')) AND ((rt1.c1))) WHEN ((rt0.c1) IS FALSE) THEN rt1.c4 ELSE ((rt0.c2) IS TRUE) END ASC  NULLS LAST);
SELECT * FROM rt1, rt0, t0 WHERE ((- ((- (rt1.c2))))) ORDER BY CASE CASE WHEN rt0.c0 THEN t0.c1 WHEN rt1.c2 THEN '1郺7' WHEN rt0.c0 THEN rt1.c2 WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c1 ELSE rt1.c2 END  WHEN ((rt0.c0)IS(t0.c2)) THEN CAST(rt1.c3 AS TEXT) WHEN (((1636254359)) BETWEEN ((t0.c0)) AND ((x''))) THEN (((rt1.c2)) NOT BETWEEN (('೐)')) AND ((rt1.c1))) WHEN ((rt0.c1) IS FALSE) THEN rt1.c4 ELSE ((rt0.c2) IS TRUE) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((- (rt1.c2))))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY CASE CASE WHEN rt0.c0 THEN t0.c1 WHEN rt1.c2 THEN '1郺7' WHEN rt0.c0 THEN rt1.c2 WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c1 ELSE rt1.c2 END  WHEN ((rt0.c0)IS(t0.c2)) THEN CAST(rt1.c3 AS TEXT) WHEN (((1636254359)) BETWEEN ((t0.c0)) AND ((x''))) THEN (((rt1.c2)) NOT BETWEEN (('೐)')) AND ((rt1.c1))) WHEN ((rt0.c1) IS FALSE) THEN rt1.c4 ELSE ((rt0.c2) IS TRUE) END ASC  NULLS LAST);
SELECT * FROM rt1, rt0, t0 WHERE ((- ((- (rt1.c2))))) ORDER BY CASE CASE WHEN rt0.c0 THEN t0.c1 WHEN rt1.c2 THEN '1郺7' WHEN rt0.c0 THEN rt1.c2 WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c1 ELSE rt1.c2 END  WHEN ((rt0.c0)IS(t0.c2)) THEN CAST(rt1.c3 AS TEXT) WHEN (((1636254359)) BETWEEN ((t0.c0)) AND ((x''))) THEN (((rt1.c2)) NOT BETWEEN (('೐)')) AND ((rt1.c1))) WHEN ((rt0.c1) IS FALSE) THEN rt1.c4 ELSE ((rt0.c2) IS TRUE) END ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON rt1.c0 RIGHT OUTER JOIN t0 ON (((rt0.c0)<>(rt0.c1)) IN ()) WHERE (rt1.c0) ORDER BY CASE t0.c2 COLLATE BINARY  WHEN rt0.c1 THEN CASE rt1.c2  WHEN rt0.c2 THEN rt1.c2 END WHEN ((rt1.c4)/(0.32884222191668677)) THEN ((rt0.c0) NOT NULL) WHEN CASE t0.c1  WHEN x'' THEN rt0.c2 END THEN ((rt1.c1)LIKE(rt1.c1)) ELSE (NOT (rt1.c3)) END DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON rt1.c0 RIGHT OUTER JOIN t0 ON (((rt0.c0)!=(rt0.c1)) IN ()) ORDER BY CASE t0.c2 COLLATE BINARY  WHEN rt0.c1 THEN CASE rt1.c2  WHEN rt0.c2 THEN rt1.c2 END WHEN ((rt1.c4)/(0.32884222191668677)) THEN ((rt0.c0) NOT NULL) WHEN CASE t0.c1  WHEN x'' THEN rt0.c2 END THEN ((rt1.c1)LIKE(rt1.c1)) ELSE (NOT (rt1.c3)) END DESC);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON rt1.c0 RIGHT OUTER JOIN t0 ON (((rt0.c0)<>(rt0.c1)) IN ()) WHERE (rt1.c0) ORDER BY CASE t0.c2 COLLATE BINARY  WHEN rt0.c1 THEN CASE rt1.c2  WHEN rt0.c2 THEN rt1.c2 END WHEN ((rt1.c4)/(0.32884222191668677)) THEN ((rt0.c0) NOT NULL) WHEN CASE t0.c1  WHEN x'' THEN rt0.c2 END THEN ((rt1.c1)LIKE(rt1.c1)) ELSE (NOT (rt1.c3)) END DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON rt1.c0 RIGHT OUTER JOIN t0 ON (((rt0.c0)!=(rt0.c1)) IN ()) ORDER BY CASE t0.c2 COLLATE BINARY  WHEN rt0.c1 THEN CASE rt1.c2  WHEN rt0.c2 THEN rt1.c2 END WHEN ((rt1.c4)/(0.32884222191668677)) THEN ((rt0.c0) NOT NULL) WHEN CASE t0.c1  WHEN x'' THEN rt0.c2 END THEN ((rt1.c1)LIKE(rt1.c1)) ELSE (NOT (rt1.c3)) END DESC);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON rt1.c0 RIGHT OUTER JOIN t0 ON (((rt0.c0)<>(rt0.c1)) IN ()) WHERE (rt1.c0) ORDER BY CASE t0.c2 COLLATE BINARY  WHEN rt0.c1 THEN CASE rt1.c2  WHEN rt0.c2 THEN rt1.c2 END WHEN ((rt1.c4)/(0.32884222191668677)) THEN ((rt0.c0) NOT NULL) WHEN CASE t0.c1  WHEN x'' THEN rt0.c2 END THEN ((rt1.c1)LIKE(rt1.c1)) ELSE (NOT (rt1.c3)) END DESC;
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (((rt1.c3 IN (rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3 IN (rt1.c2)) IN ())) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (((rt1.c3 IN (rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3 IN (rt1.c2)) IN ())) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (((rt1.c3 IN (rt1.c2)) IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE ('x^a/}9');
SELECT SUM(count) FROM (SELECT (('x^a/}9') IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ('x^a/}9');
SELECT SUM(count) FROM (SELECT (('x^a/}9') IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ('x^a/}9');
SELECT * FROM t0, rt1 NOT INDEXED WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 NOT INDEXED WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 NOT INDEXED WHERE (rt1.c3);
SELECT ALL * FROM t0, rt0 NATURAL JOIN rt1 WHERE (((rt0.c0 COLLATE NOCASE) NOT BETWEEN (t0.c2) AND (((rt1.c0)IS(rt1.c2))))) ORDER BY (- (((rt0.c2) BETWEEN (rt1.c4) AND (rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE) NOT BETWEEN (t0.c2) AND (((rt1.c0)IS(rt1.c2))))) IS TRUE)  as count FROM t0, rt0 NATURAL JOIN rt1 ORDER BY (- (((rt0.c2) BETWEEN (rt1.c4) AND (rt1.c0)))));
SELECT ALL * FROM t0, rt0 NATURAL JOIN rt1 WHERE (((rt0.c0 COLLATE NOCASE) NOT BETWEEN (t0.c2) AND (((rt1.c0)IS(rt1.c2))))) ORDER BY (- (((rt0.c2) BETWEEN (rt1.c4) AND (rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE) NOT BETWEEN (t0.c2) AND (((rt1.c0)IS(rt1.c2))))) IS TRUE)  as count FROM t0, rt0 NATURAL JOIN rt1 ORDER BY (- (((rt0.c2) BETWEEN (rt1.c4) AND (rt1.c0)))));
SELECT ALL * FROM t0, rt0 NATURAL JOIN rt1 WHERE (((rt0.c0 COLLATE NOCASE) NOT BETWEEN (t0.c2) AND (((rt1.c0)IS(rt1.c2))))) ORDER BY (- (((rt0.c2) BETWEEN (rt1.c4) AND (rt1.c0))));
SELECT * FROM rt0 WHERE (((((rt0.c1)%(rt0.c2))) NOTNULL)) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)%(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2);
SELECT * FROM rt0 WHERE (((((rt0.c1)%(rt0.c2))) NOTNULL)) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)%(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2);
SELECT * FROM rt0 WHERE (((((rt0.c1)%(rt0.c2))) NOTNULL)) ORDER BY rt0.c2;
SELECT ALL * FROM t0, rt0, rt1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL * FROM t0, rt0, rt1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL * FROM t0, rt0, rt1 WHERE ('');
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (t0.c1) ORDER BY t0.c1;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0, rt0 ORDER BY t0.c1);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (t0.c1) ORDER BY t0.c1;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0, rt0 ORDER BY t0.c1);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (t0.c1) ORDER BY t0.c1;
SELECT COUNT(*) FROM rt0 NOT INDEXED, t0 NATURAL JOIN rt1 WHERE ((((- ('0.7414619490269423'))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((- ('0.7414619490269423'))) IS FALSE)) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM rt0 NOT INDEXED, t0 NATURAL JOIN rt1 WHERE ((((- ('0.7414619490269423'))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((- ('0.7414619490269423'))) IS FALSE)) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM rt0 NOT INDEXED, t0 NATURAL JOIN rt1 WHERE ((((- ('0.7414619490269423'))) IS FALSE));
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE ((((((rt0.c0) NOT BETWEEN (t0.c2) AND (rt1.c0))))<((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt1.c1 END)))) ORDER BY (~ ((((rt1.c3)) NOT BETWEEN ((rt0.c2)) AND ((t0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0) NOT BETWEEN (t0.c2) AND (rt1.c0))))<((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt1.c1 END)))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY (~ ((((rt1.c3)) NOT BETWEEN ((rt0.c2)) AND ((t0.c2)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE ((((((rt0.c0) NOT BETWEEN (t0.c2) AND (rt1.c0))))<((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt1.c1 END)))) ORDER BY (~ ((((rt1.c3)) NOT BETWEEN ((rt0.c2)) AND ((t0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0) NOT BETWEEN (t0.c2) AND (rt1.c0))))<((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt1.c1 END)))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY (~ ((((rt1.c3)) NOT BETWEEN ((rt0.c2)) AND ((t0.c2)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE ((((((rt0.c0) NOT BETWEEN (t0.c2) AND (rt1.c0))))<((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt1.c1 END)))) ORDER BY (~ ((((rt1.c3)) NOT BETWEEN ((rt0.c2)) AND ((t0.c2)))))  NULLS FIRST;
SELECT * FROM t0 WHERE (((((t0.c2)||(t0.c0)))IS((((t0.c1, t0.c2, t0.c0, t0.c1, t0.c1))>=((0.01941055261984459, t0.c1, t0.c0, t0.c1, t0.c0)))))) ORDER BY ((((t0.c2) BETWEEN (t0.c2) AND (t0.c0)))+(NULL)) ASC  NULLS FIRST, ((t0.c1)/(NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)||(t0.c0)))IS((((t0.c1, t0.c2, t0.c0, t0.c1, t0.c1))>=((0.01941055261984459, t0.c1, t0.c0, t0.c1, t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c2) BETWEEN (t0.c2) AND (t0.c0)))+(NULL)) ASC  NULLS FIRST, ((t0.c1)/(NULL)) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (((((t0.c2)||(t0.c0)))IS((((t0.c1, t0.c2, t0.c0, t0.c1, t0.c1))>=((0.01941055261984459, t0.c1, t0.c0, t0.c1, t0.c0)))))) ORDER BY ((((t0.c2) BETWEEN (t0.c2) AND (t0.c0)))+(NULL)) ASC  NULLS FIRST, ((t0.c1)/(NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)||(t0.c0)))IS((((t0.c1, t0.c2, t0.c0, t0.c1, t0.c1))>=((0.01941055261984459, t0.c1, t0.c0, t0.c1, t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c2) BETWEEN (t0.c2) AND (t0.c0)))+(NULL)) ASC  NULLS FIRST, ((t0.c1)/(NULL)) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (((((t0.c2)||(t0.c0)))IS((((t0.c1, t0.c2, t0.c0, t0.c1, t0.c1))>=((0.01941055261984459, t0.c1, t0.c0, t0.c1, t0.c0)))))) ORDER BY ((((t0.c2) BETWEEN (t0.c2) AND (t0.c0)))+(NULL)) ASC  NULLS FIRST, ((t0.c1)/(NULL)) DESC  NULLS LAST;
SELECT * FROM t0, rt0 WHERE (((t0.c2 COLLATE BINARY) BETWEEN ((~ (rt0.c2))) AND ((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2 COLLATE BINARY) BETWEEN ((~ (rt0.c2))) AND ((~ (rt0.c0))))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((t0.c2 COLLATE BINARY) BETWEEN ((~ (rt0.c2))) AND ((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2 COLLATE BINARY) BETWEEN ((~ (rt0.c2))) AND ((~ (rt0.c0))))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((t0.c2 COLLATE BINARY) BETWEEN ((~ (rt0.c2))) AND ((~ (rt0.c0)))));
SELECT COUNT(*) FROM rt0, t0 WHERE ((((LIKELIHOOD(rt0.c1, 0.9990727535074192)))>=((((t0.c0) NOT BETWEEN (t0.c1) AND (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((LIKELIHOOD(rt0.c1, 0.9990727535074192)))>=((((t0.c0) NOT BETWEEN (t0.c1) AND (rt0.c1)))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((LIKELIHOOD(rt0.c1, 0.9990727535074192)))>=((((t0.c0) NOT BETWEEN (t0.c1) AND (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((LIKELIHOOD(rt0.c1, 0.9990727535074192)))>=((((t0.c0) NOT BETWEEN (t0.c1) AND (rt0.c1)))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((LIKELIHOOD(rt0.c1, 0.9990727535074192)))>=((((t0.c0) NOT BETWEEN (t0.c1) AND (rt0.c1))))));
SELECT ALL * FROM rt0, rt1 WHERE ((IFNULL(DISTINCT rt0.c1, rt1.c4) IN (((rt1.c1)IS(rt0.c1))))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ALL (((IFNULL(DISTINCT rt0.c1, rt1.c4) IN (((rt1.c1)IS(rt0.c1))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt0.c1);
SELECT ALL * FROM rt0, rt1 WHERE ((IFNULL(DISTINCT rt0.c1, rt1.c4) IN (((rt1.c1)IS(rt0.c1))))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ALL (((IFNULL(DISTINCT rt0.c1, rt1.c4) IN (((rt1.c1)IS(rt0.c1))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt0.c1);
SELECT ALL * FROM rt0, rt1 WHERE ((IFNULL(DISTINCT rt0.c1, rt1.c4) IN (((rt1.c1)IS(rt0.c1))))) ORDER BY rt0.c1;
SELECT COUNT(*) FROM rt1 CROSS JOIN rt0 ON ((rt0.c0 COLLATE RTRIM)!=(((((((((((((rt1.c4)AND(rt0.c2)))AND(rt1.c4)))AND(rt1.c3)))OR(rt1.c1)))OR(rt1.c3)))AND(rt1.c0)))) WHERE ((~ (rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((~ (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON ((rt0.c0 COLLATE RTRIM)!=(((((((((((((rt1.c4)AND(rt0.c2)))AND(rt1.c4)))AND(rt1.c3)))OR(rt1.c1)))OR(rt1.c3)))AND(rt1.c0)))));
SELECT COUNT(*) FROM rt1 CROSS JOIN rt0 ON ((rt0.c0 COLLATE RTRIM)!=(((((((((((((rt1.c4)AND(rt0.c2)))AND(rt1.c4)))AND(rt1.c3)))OR(rt1.c1)))OR(rt1.c3)))AND(rt1.c0)))) WHERE ((~ (rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((~ (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON ((rt0.c0 COLLATE RTRIM)!=(((((((((((((rt1.c4)AND(rt0.c2)))AND(rt1.c4)))AND(rt1.c3)))OR(rt1.c1)))OR(rt1.c3)))AND(rt1.c0)))));
SELECT COUNT(*) FROM rt1 CROSS JOIN rt0 ON ((rt0.c0 COLLATE RTRIM)!=(((((((((((((rt1.c4)AND(rt0.c2)))AND(rt1.c4)))AND(rt1.c3)))OR(rt1.c1)))OR(rt1.c3)))AND(rt1.c0)))) WHERE ((~ (rt0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (NULL) ORDER BY (((rt1.c4)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((CAST(rt0.c0 AS NUMERIC)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt1.c4)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((CAST(rt0.c0 AS NUMERIC)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (NULL) ORDER BY (((rt1.c4)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((CAST(rt0.c0 AS NUMERIC)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt1.c4)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((CAST(rt0.c0 AS NUMERIC)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (NULL) ORDER BY (((rt1.c4)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((CAST(rt0.c0 AS NUMERIC)))) ASC  NULLS FIRST;
SELECT ALL * FROM t0, rt0 WHERE (((((t0.c2)<=(t0.c0)))IS NOT((('') NOT BETWEEN (t0.c0) AND (t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)<=(t0.c0)))IS NOT((('') NOT BETWEEN (t0.c0) AND (t0.c2))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((((t0.c2)<=(t0.c0)))IS NOT((('') NOT BETWEEN (t0.c0) AND (t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)<=(t0.c0)))IS NOT((('') NOT BETWEEN (t0.c0) AND (t0.c2))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((((t0.c2)<=(t0.c0)))IS NOT((('') NOT BETWEEN (t0.c0) AND (t0.c2)))));
SELECT * FROM rt0, t0 WHERE (CASE WHEN ((rt0.c1)&(t0.c0)) THEN ((rt0.c0) IS FALSE) ELSE (NOT (t0.c0)) END) ORDER BY ((((((((((rt0.c2)OR(rt0.c0)))AND(t0.c0)))OR(t0.c0)))OR(rt0.c1)))<>(CASE t0.c0  WHEN t0.c1 THEN rt0.c1 ELSE t0.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1)&(t0.c0)) THEN ((rt0.c0) IS FALSE) ELSE (NOT (t0.c0)) END) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((((((rt0.c2)OR(rt0.c0)))AND(t0.c0)))OR(t0.c0)))OR(rt0.c1)))!=(CASE t0.c0  WHEN t0.c1 THEN rt0.c1 ELSE t0.c2 END))  NULLS LAST);
SELECT * FROM rt0, t0 WHERE (CASE WHEN ((rt0.c1)&(t0.c0)) THEN ((rt0.c0) IS FALSE) ELSE (NOT (t0.c0)) END) ORDER BY ((((((((((rt0.c2)OR(rt0.c0)))AND(t0.c0)))OR(t0.c0)))OR(rt0.c1)))<>(CASE t0.c0  WHEN t0.c1 THEN rt0.c1 ELSE t0.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1)&(t0.c0)) THEN ((rt0.c0) IS FALSE) ELSE (NOT (t0.c0)) END) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((((((rt0.c2)OR(rt0.c0)))AND(t0.c0)))OR(t0.c0)))OR(rt0.c1)))!=(CASE t0.c0  WHEN t0.c1 THEN rt0.c1 ELSE t0.c2 END))  NULLS LAST);
SELECT * FROM rt0, t0 WHERE (CASE WHEN ((rt0.c1)&(t0.c0)) THEN ((rt0.c0) IS FALSE) ELSE (NOT (t0.c0)) END) ORDER BY ((((((((((rt0.c2)OR(rt0.c0)))AND(t0.c0)))OR(t0.c0)))OR(rt0.c1)))<>(CASE t0.c0  WHEN t0.c1 THEN rt0.c1 ELSE t0.c2 END))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN UPPER(rt1.c2) THEN CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN 0.2012682008549196 THEN rt1.c3 ELSE rt1.c0 END ELSE ((rt1.c1) IS FALSE) END) ORDER BY CASE TRIM(DISTINCT rt1.c4, rt1.c4)  WHEN rt1.c2 THEN ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN UPPER(rt1.c2) THEN CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN 0.2012682008549196 THEN rt1.c3 ELSE rt1.c0 END ELSE ((rt1.c1) IS FALSE) END) IS TRUE)  as count FROM rt1 ORDER BY CASE TRIM(DISTINCT rt1.c4, rt1.c4)  WHEN rt1.c2 THEN ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN UPPER(rt1.c2) THEN CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN 0.2012682008549196 THEN rt1.c3 ELSE rt1.c0 END ELSE ((rt1.c1) IS FALSE) END) ORDER BY CASE TRIM(DISTINCT rt1.c4, rt1.c4)  WHEN rt1.c2 THEN ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN UPPER(rt1.c2) THEN CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN 0.2012682008549196 THEN rt1.c3 ELSE rt1.c0 END ELSE ((rt1.c1) IS FALSE) END) IS TRUE)  as count FROM rt1 ORDER BY CASE TRIM(DISTINCT rt1.c4, rt1.c4)  WHEN rt1.c2 THEN ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN UPPER(rt1.c2) THEN CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN 0.2012682008549196 THEN rt1.c3 ELSE rt1.c0 END ELSE ((rt1.c1) IS FALSE) END) ORDER BY CASE TRIM(DISTINCT rt1.c4, rt1.c4)  WHEN rt1.c2 THEN ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)) END ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (CASE rt1.c4 COLLATE BINARY  WHEN (((rt1.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c3))) THEN ((rt1.c2)+(rt1.c4)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c4 COLLATE BINARY  WHEN (((rt1.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c3))) THEN ((rt1.c2)+(rt1.c4)) END) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CASE rt1.c4 COLLATE BINARY  WHEN (((rt1.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c3))) THEN ((rt1.c2)+(rt1.c4)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c4 COLLATE BINARY  WHEN (((rt1.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c3))) THEN ((rt1.c2)+(rt1.c4)) END) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CASE rt1.c4 COLLATE BINARY  WHEN (((rt1.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c3))) THEN ((rt1.c2)+(rt1.c4)) END);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON CASE WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) THEN ((t0.c1) NOT NULL) ELSE ((rt0.c0)%(t0.c2)) END WHERE (t0.c0) ORDER BY LOWER(DISTINCT ((rt0.c1) NOT BETWEEN (t0.c1) AND (rt0.c1))), ((UPPER(rt0.c2)) IS TRUE), ((0.6581191166922549)>=(t0.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON CASE WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) THEN ((t0.c1) NOT NULL) ELSE ((rt0.c0)%(t0.c2)) END ORDER BY LOWER(DISTINCT ((rt0.c1) NOT BETWEEN (t0.c1) AND (rt0.c1))), ((UPPER(rt0.c2)) IS TRUE), ((0.6581191166922549)>=(t0.c1)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON CASE WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) THEN ((t0.c1) NOT NULL) ELSE ((rt0.c0)%(t0.c2)) END WHERE (t0.c0) ORDER BY LOWER(DISTINCT ((rt0.c1) NOT BETWEEN (t0.c1) AND (rt0.c1))), ((UPPER(rt0.c2)) IS TRUE), ((0.6581191166922549)>=(t0.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON CASE WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) THEN ((t0.c1) NOT NULL) ELSE ((rt0.c0)%(t0.c2)) END ORDER BY LOWER(DISTINCT ((rt0.c1) NOT BETWEEN (t0.c1) AND (rt0.c1))), ((UPPER(rt0.c2)) IS TRUE), ((0.6581191166922549)>=(t0.c1)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON CASE WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) THEN ((t0.c1) NOT NULL) ELSE ((rt0.c0)%(t0.c2)) END WHERE (t0.c0) ORDER BY LOWER(DISTINCT ((rt0.c1) NOT BETWEEN (t0.c1) AND (rt0.c1))), ((UPPER(rt0.c2)) IS TRUE), ((0.6581191166922549)>=(t0.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT * FROM rt0, t0, rt1 WHERE (((((x'') BETWEEN (rt1.c4) AND (t0.c1))) IS TRUE)) ORDER BY ((CAST(rt1.c2 AS BLOB))AND(((((((((rt1.c4)OR(0.5730097914444842)))AND(t0.c1)))OR('441055775')))OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((x'') BETWEEN (rt1.c4) AND (t0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY ((CAST(rt1.c2 AS BLOB))AND(((((((((rt1.c4)OR(0.5730097914444842)))AND(t0.c1)))OR('441055775')))OR(rt0.c1)))));
SELECT * FROM rt0, t0, rt1 WHERE (((((x'') BETWEEN (rt1.c4) AND (t0.c1))) IS TRUE)) ORDER BY ((CAST(rt1.c2 AS BLOB))AND(((((((((rt1.c4)OR(0.5730097914444842)))AND(t0.c1)))OR('441055775')))OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((x'') BETWEEN (rt1.c4) AND (t0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY ((CAST(rt1.c2 AS BLOB))AND(((((((((rt1.c4)OR(0.5730097914444842)))AND(t0.c1)))OR('441055775')))OR(rt0.c1)))));
SELECT * FROM rt0, t0, rt1 WHERE (((((x'') BETWEEN (rt1.c4) AND (t0.c1))) IS TRUE)) ORDER BY ((CAST(rt1.c2 AS BLOB))AND(((((((((rt1.c4)OR(0.5730097914444842)))AND(t0.c1)))OR('441055775')))OR(rt0.c1))));
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE (t0.c1 COLLATE NOCASE) ORDER BY ((((rt1.c3)LIKE(rt1.c3)))GLOB(((rt0.c2)AND(rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c1 COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY ((((rt1.c3)LIKE(rt1.c3)))GLOB(((rt0.c2)AND(rt0.c1)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE (t0.c1 COLLATE NOCASE) ORDER BY ((((rt1.c3)LIKE(rt1.c3)))GLOB(((rt0.c2)AND(rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c1 COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY ((((rt1.c3)LIKE(rt1.c3)))GLOB(((rt0.c2)AND(rt0.c1)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE (t0.c1 COLLATE NOCASE) ORDER BY ((((rt1.c3)LIKE(rt1.c3)))GLOB(((rt0.c2)AND(rt0.c1)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c1) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c1) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c1) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c1) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c1) NOTNULL) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 NOT INDEXED WHERE ((NOT (rt1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((NOT (rt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 NOT INDEXED WHERE ((NOT (rt1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((NOT (rt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 NOT INDEXED WHERE ((NOT (rt1.c1 COLLATE RTRIM)));
SELECT * FROM rt0 WHERE ((rt0.c0 IN (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN (rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((rt0.c0 IN (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN (rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((rt0.c0 IN (rt0.c1)));
SELECT * FROM rt0, rt1 WHERE (((rt0.c2 COLLATE BINARY) BETWEEN ((rt0.c2 IN ())) AND ('1|恧'))) ORDER BY ((((rt1.c3) IS TRUE))<>((((0.16888988370776137)) BETWEEN ((0Xffffffffc0794e83)) AND ((rt1.c3)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY) BETWEEN ((rt0.c2 IN ())) AND ('1|恧'))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt1.c3) IS TRUE))!=((((0.16888988370776137)) BETWEEN ((0Xffffffffc0794e83)) AND ((rt1.c3)))))  NULLS LAST);
SELECT * FROM rt0, rt1 WHERE (((rt0.c2 COLLATE BINARY) BETWEEN ((rt0.c2 IN ())) AND ('1|恧'))) ORDER BY ((((rt1.c3) IS TRUE))<>((((0.16888988370776137)) BETWEEN ((0Xffffffffc0794e83)) AND ((rt1.c3)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY) BETWEEN ((rt0.c2 IN ())) AND ('1|恧'))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt1.c3) IS TRUE))!=((((0.16888988370776137)) BETWEEN ((0Xffffffffc0794e83)) AND ((rt1.c3)))))  NULLS LAST);
SELECT * FROM rt0, rt1 WHERE (((rt0.c2 COLLATE BINARY) BETWEEN ((rt0.c2 IN ())) AND ('1|恧'))) ORDER BY ((((rt1.c3) IS TRUE))<>((((0.16888988370776137)) BETWEEN ((0Xffffffffc0794e83)) AND ((rt1.c3)))))  NULLS LAST;
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (((rt1.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ((((rt1.c0) ISNULL)) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (((rt1.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ((((rt1.c0) ISNULL)) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (((rt1.c0) ISNULL));
SELECT ALL * FROM rt1 NOT INDEXED INNER JOIN t0 ON 0.8544579340626431 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM rt1 INNER JOIN t0 ON 0.8544579340626431);
SELECT ALL * FROM rt1 NOT INDEXED INNER JOIN t0 ON 0.8544579340626431 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM rt1 INNER JOIN t0 ON 0.8544579340626431);
SELECT ALL * FROM rt1 NOT INDEXED INNER JOIN t0 ON 0.8544579340626431 WHERE (t0.c2);
SELECT ALL * FROM t0, rt0 WHERE (((((t0.c1)LIKE(rt0.c1)))IS NOT(t0.c1))) ORDER BY (((+ (t0.c1))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c1)LIKE(rt0.c1)))IS NOT(t0.c1))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((+ (t0.c1))) NOTNULL)  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (((((t0.c1)LIKE(rt0.c1)))IS NOT(t0.c1))) ORDER BY (((+ (t0.c1))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c1)LIKE(rt0.c1)))IS NOT(t0.c1))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((+ (t0.c1))) NOTNULL)  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (((((t0.c1)LIKE(rt0.c1)))IS NOT(t0.c1))) ORDER BY (((+ (t0.c1))) NOTNULL)  NULLS LAST;
SELECT COUNT(*) FROM rt0, t0 LEFT OUTER JOIN rt1 ON ((rt0.c2) NOT BETWEEN (rt1.c3) AND (rt0.c2)) COLLATE RTRIM WHERE (0xffffffffad3074cf);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffad3074cf) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN rt1 ON ((rt0.c2) NOT BETWEEN (rt1.c3) AND (rt0.c2)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0, t0 LEFT OUTER JOIN rt1 ON ((rt0.c2) NOT BETWEEN (rt1.c3) AND (rt0.c2)) COLLATE RTRIM WHERE (0xffffffffad3074cf);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffad3074cf) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN rt1 ON ((rt0.c2) NOT BETWEEN (rt1.c3) AND (rt0.c2)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0, t0 LEFT OUTER JOIN rt1 ON ((rt0.c2) NOT BETWEEN (rt1.c3) AND (rt0.c2)) COLLATE RTRIM WHERE (0xffffffffad3074cf);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((((~ (t0.c0)))OR((- (t0.c2)))))AND(((rt0.c1)LIKE(t0.c1))))) ORDER BY (((('~㦪.QL}')OR(((t0.c1) IS TRUE))))AND(rt0.c1))  NULLS FIRST, (~ (((t0.c1)IS NOT(t0.c2)))) DESC  NULLS FIRST, ((t0.c2)+(rt0.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((~ (t0.c0)))OR((- (t0.c2)))))AND(((rt0.c1)LIKE(t0.c1))))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((('~㦪.QL}')OR(((t0.c1) IS TRUE))))AND(rt0.c1))  NULLS FIRST, (~ (((t0.c1)IS NOT(t0.c2)))) DESC  NULLS FIRST, ((t0.c2)+(rt0.c0)) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((((~ (t0.c0)))OR((- (t0.c2)))))AND(((rt0.c1)LIKE(t0.c1))))) ORDER BY (((('~㦪.QL}')OR(((t0.c1) IS TRUE))))AND(rt0.c1))  NULLS FIRST, (~ (((t0.c1)IS NOT(t0.c2)))) DESC  NULLS FIRST, ((t0.c2)+(rt0.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((~ (t0.c0)))OR((- (t0.c2)))))AND(((rt0.c1)LIKE(t0.c1))))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((('~㦪.QL}')OR(((t0.c1) IS TRUE))))AND(rt0.c1))  NULLS FIRST, (~ (((t0.c1)IS NOT(t0.c2)))) DESC  NULLS FIRST, ((t0.c2)+(rt0.c0)) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((((~ (t0.c0)))OR((- (t0.c2)))))AND(((rt0.c1)LIKE(t0.c1))))) ORDER BY (((('~㦪.QL}')OR(((t0.c1) IS TRUE))))AND(rt0.c1))  NULLS FIRST, (~ (((t0.c1)IS NOT(t0.c2)))) DESC  NULLS FIRST, ((t0.c2)+(rt0.c0)) COLLATE RTRIM DESC;
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON ((0.969026644370497 COLLATE RTRIM) IS FALSE) RIGHT OUTER JOIN t0 ON (((((rt0.c2)OR(rt1.c1)))OR(rt0.c0)) IN ()) WHERE (((CASE WHEN rt1.c3 THEN rt1.c0 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c3 THEN rt1.c0 END) NOTNULL)) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON ((0.969026644370497 COLLATE RTRIM) IS FALSE) RIGHT OUTER JOIN t0 ON (((((rt0.c2)OR(rt1.c1)))OR(rt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON ((0.969026644370497 COLLATE RTRIM) IS FALSE) RIGHT OUTER JOIN t0 ON (((((rt0.c2)OR(rt1.c1)))OR(rt0.c0)) IN ()) WHERE (((CASE WHEN rt1.c3 THEN rt1.c0 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c3 THEN rt1.c0 END) NOTNULL)) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON ((0.969026644370497 COLLATE RTRIM) IS FALSE) RIGHT OUTER JOIN t0 ON (((((rt0.c2)OR(rt1.c1)))OR(rt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON ((0.969026644370497 COLLATE RTRIM) IS FALSE) RIGHT OUTER JOIN t0 ON (((((rt0.c2)OR(rt1.c1)))OR(rt0.c0)) IN ()) WHERE (((CASE WHEN rt1.c3 THEN rt1.c0 END) NOTNULL));
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (rt1.c2) ORDER BY rt1.c3 DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1, t0 ORDER BY rt1.c3 DESC);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (rt1.c2) ORDER BY rt1.c3 DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1, t0 ORDER BY rt1.c3 DESC);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (rt1.c2) ORDER BY rt1.c3 DESC;
SELECT * FROM rt1, t0 WHERE (NULL) ORDER BY ((rt1.c3) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, t0 ORDER BY ((rt1.c3) NOTNULL) DESC);
SELECT * FROM rt1, t0 WHERE (NULL) ORDER BY ((rt1.c3) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, t0 ORDER BY ((rt1.c3) NOTNULL) DESC);
SELECT * FROM rt1, t0 WHERE (NULL) ORDER BY ((rt1.c3) NOTNULL) DESC;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)OR(t0.c1)) IN (json_quote(t0.c0), ((t0.c2)==(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)OR(t0.c1)) IN (json_quote(t0.c0), ((t0.c2)==(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)OR(t0.c1)) IN (json_quote(t0.c0), ((t0.c2)==(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)OR(t0.c1)) IN (json_quote(t0.c0), ((t0.c2)==(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((rt1.c4)) BETWEEN ((((0.5844500976104475) NOT BETWEEN (rt0.c1) AND (rt1.c2)))) AND ((((rt1.c1) NOT BETWEEN (rt1.c0) AND ('-756557832')))))) ORDER BY ((rt0.c2 COLLATE RTRIM) NOT BETWEEN (((rt1.c0)OR(rt1.c3))) AND ((rt0.c2 IN ()))) DESC  NULLS LAST, (('-1316099112') BETWEEN ((rt0.c2 IN ())) AND ((rt1.c1 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c4)) BETWEEN ((((0.5844500976104475) NOT BETWEEN (rt0.c1) AND (rt1.c2)))) AND ((((rt1.c1) NOT BETWEEN (rt1.c0) AND ('-756557832')))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((rt0.c2 COLLATE RTRIM) NOT BETWEEN (((rt1.c0)OR(rt1.c3))) AND ((rt0.c2 IN ()))) DESC  NULLS LAST, (('-1316099112') BETWEEN ((rt0.c2 IN ())) AND ((rt1.c1 IN ()))) ASC);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((rt1.c4)) BETWEEN ((((0.5844500976104475) NOT BETWEEN (rt0.c1) AND (rt1.c2)))) AND ((((rt1.c1) NOT BETWEEN (rt1.c0) AND ('-756557832')))))) ORDER BY ((rt0.c2 COLLATE RTRIM) NOT BETWEEN (((rt1.c0)OR(rt1.c3))) AND ((rt0.c2 IN ()))) DESC  NULLS LAST, (('-1316099112') BETWEEN ((rt0.c2 IN ())) AND ((rt1.c1 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c4)) BETWEEN ((((0.5844500976104475) NOT BETWEEN (rt0.c1) AND (rt1.c2)))) AND ((((rt1.c1) NOT BETWEEN (rt1.c0) AND ('-756557832')))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((rt0.c2 COLLATE RTRIM) NOT BETWEEN (((rt1.c0)OR(rt1.c3))) AND ((rt0.c2 IN ()))) DESC  NULLS LAST, (('-1316099112') BETWEEN ((rt0.c2 IN ())) AND ((rt1.c1 IN ()))) ASC);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((rt1.c4)) BETWEEN ((((0.5844500976104475) NOT BETWEEN (rt0.c1) AND (rt1.c2)))) AND ((((rt1.c1) NOT BETWEEN (rt1.c0) AND ('-756557832')))))) ORDER BY ((rt0.c2 COLLATE RTRIM) NOT BETWEEN (((rt1.c0)OR(rt1.c3))) AND ((rt0.c2 IN ()))) DESC  NULLS LAST, (('-1316099112') BETWEEN ((rt0.c2 IN ())) AND ((rt1.c1 IN ()))) ASC;
SELECT * FROM t0 FULL OUTER JOIN rt0 ON 0.3697192411595016 WHERE (((t0.c1)>=(t0.c0)) COLLATE RTRIM) ORDER BY CAST(((NULL)||(rt0.c2)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c1)>=(t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON 0.3697192411595016 ORDER BY CAST(((NULL)||(rt0.c2)) AS BLOB) DESC);
SELECT * FROM t0 FULL OUTER JOIN rt0 ON 0.3697192411595016 WHERE (((t0.c1)>=(t0.c0)) COLLATE RTRIM) ORDER BY CAST(((NULL)||(rt0.c2)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c1)>=(t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON 0.3697192411595016 ORDER BY CAST(((NULL)||(rt0.c2)) AS BLOB) DESC);
SELECT * FROM t0 FULL OUTER JOIN rt0 ON 0.3697192411595016 WHERE (((t0.c1)>=(t0.c0)) COLLATE RTRIM) ORDER BY CAST(((NULL)||(rt0.c2)) AS BLOB) DESC;
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE (((((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt0.c2)))AND(rt0.c0)))OR(((t0.c2) NOT BETWEEN (t0.c2) AND (rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt0.c2)))AND(rt0.c0)))OR(((t0.c2) NOT BETWEEN (t0.c2) AND (rt1.c4))))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE (((((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt0.c2)))AND(rt0.c0)))OR(((t0.c2) NOT BETWEEN (t0.c2) AND (rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt0.c2)))AND(rt0.c0)))OR(((t0.c2) NOT BETWEEN (t0.c2) AND (rt1.c4))))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE (((((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt0.c2)))AND(rt0.c0)))OR(((t0.c2) NOT BETWEEN (t0.c2) AND (rt1.c4)))));
SELECT * FROM t0, rt1, rt0 WHERE ('-955961657');
SELECT SUM(count) FROM (SELECT ALL (('-955961657') IS TRUE)  as count FROM t0, rt1, rt0);
SELECT * FROM t0, rt1, rt0 WHERE ('-955961657');
SELECT SUM(count) FROM (SELECT ALL (('-955961657') IS TRUE)  as count FROM t0, rt1, rt0);
SELECT * FROM t0, rt1, rt0 WHERE ('-955961657');
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c1 COLLATE NOCASE)&(((t0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((t0.c1 COLLATE NOCASE)&(((t0.c2) NOTNULL)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c1 COLLATE NOCASE)&(((t0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((t0.c1 COLLATE NOCASE)&(((t0.c2) NOTNULL)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c1 COLLATE NOCASE)&(((t0.c2) NOTNULL))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON INSTR(CAST(t0.c0 AS TEXT), ((t0.c1)>=(rt0.c0))) WHERE (((rt0.c1)IS(t0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)IS(t0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON INSTR(CAST(t0.c0 AS TEXT), ((t0.c1)>=(rt0.c0))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON INSTR(CAST(t0.c0 AS TEXT), ((t0.c1)>=(rt0.c0))) WHERE (((rt0.c1)IS(t0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)IS(t0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON INSTR(CAST(t0.c0 AS TEXT), ((t0.c1)>=(rt0.c0))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON INSTR(CAST(t0.c0 AS TEXT), ((t0.c1)>=(rt0.c0))) WHERE (((rt0.c1)IS(t0.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0 WHERE (((x'64b2e11d')-(t0.c0)) COLLATE RTRIM) ORDER BY (((t0.c0 IN ()))!=((((t0.c0))!=((t0.c1))))), t0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((x'64b2e11d')-(t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY (((t0.c0 IN ()))<>((((t0.c0))<>((t0.c1))))), t0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((x'64b2e11d')-(t0.c0)) COLLATE RTRIM) ORDER BY (((t0.c0 IN ()))!=((((t0.c0))!=((t0.c1))))), t0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((x'64b2e11d')-(t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY (((t0.c0 IN ()))<>((((t0.c0))<>((t0.c1))))), t0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((x'64b2e11d')-(t0.c0)) COLLATE RTRIM) ORDER BY (((t0.c0 IN ()))!=((((t0.c0))!=((t0.c1))))), t0.c0 DESC  NULLS LAST;
SELECT ALL * FROM rt1, rt0 NOT INDEXED WHERE (((((0X1e6193cc)/(rt0.c2))) BETWEEN (rt1.c4 COLLATE NOCASE) AND (rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((0x1e6193cc)/(rt0.c2))) BETWEEN (rt1.c4 COLLATE NOCASE) AND (rt1.c2))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 NOT INDEXED WHERE (((((0X1e6193cc)/(rt0.c2))) BETWEEN (rt1.c4 COLLATE NOCASE) AND (rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((0x1e6193cc)/(rt0.c2))) BETWEEN (rt1.c4 COLLATE NOCASE) AND (rt1.c2))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 NOT INDEXED WHERE (((((0X1e6193cc)/(rt0.c2))) BETWEEN (rt1.c4 COLLATE NOCASE) AND (rt1.c2)));
SELECT ALL * FROM rt1, rt0 NOT INDEXED, t0 WHERE (((SQLITE_SOURCE_ID())<>(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_SOURCE_ID())!=(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt1 NOT INDEXED, rt0, t0);
SELECT ALL * FROM rt1, rt0 NOT INDEXED, t0 WHERE (((SQLITE_SOURCE_ID())<>(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_SOURCE_ID())!=(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt1 NOT INDEXED, rt0, t0);
SELECT ALL * FROM rt1, rt0 NOT INDEXED, t0 WHERE (((SQLITE_SOURCE_ID())<>(CAST(rt0.c0 AS REAL))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON CASE WHEN (NOT (rt1.c3)) THEN ((rt0.c0)*(NULL)) WHEN ((rt1.c4)IS NOT(t0.c2)) THEN CASE rt0.c0  WHEN 0.5116608163465325 THEN rt0.c1 ELSE rt1.c4 END WHEN ((rt0.c0)||(rt0.c1)) THEN (((rt0.c1)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0))) WHEN (rt1.c2 IN ()) THEN ((((((((rt1.c2)AND(rt1.c0)))AND(rt1.c3)))AND(rt1.c0)))OR('L闋Ak')) WHEN (((rt0.c2))<=((t0.c2))) THEN CAST(rt1.c1 AS TEXT) ELSE CAST(rt1.c4 AS TEXT) END FULL OUTER JOIN rt1 ON CAST(rt0.c1 AS BLOB) COLLATE BINARY WHERE ((rt0.c1 COLLATE RTRIM IN ())) ORDER BY (- (((t0.c1) IS TRUE)))  NULLS FIRST, HEX(MIN(t0.c1, rt1.c3)) DESC  NULLS LAST, ((((((((rt1.c1)AND(t0.c2)))AND(rt1.c2)))AND(t0.c1)))OR(rt1.c4)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((rt0.c1 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON CASE WHEN (NOT (rt1.c3)) THEN ((rt0.c0)*(NULL)) WHEN ((rt1.c4)IS NOT(t0.c2)) THEN CASE rt0.c0  WHEN 0.5116608163465325 THEN rt0.c1 ELSE rt1.c4 END WHEN ((rt0.c0)||(rt0.c1)) THEN (((rt0.c1)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0))) WHEN (rt1.c2 IN ()) THEN ((((((((rt1.c2)AND(rt1.c0)))AND(rt1.c3)))AND(rt1.c0)))OR('L闋Ak')) WHEN (((rt0.c2))<=((t0.c2))) THEN CAST(rt1.c1 AS TEXT) ELSE CAST(rt1.c4 AS TEXT) END FULL OUTER JOIN rt1 ON CAST(rt0.c1 AS BLOB) COLLATE BINARY ORDER BY (- (((t0.c1) IS TRUE)))  NULLS FIRST, HEX(MIN(t0.c1, rt1.c3)) DESC  NULLS LAST, ((((((((rt1.c1)AND(t0.c2)))AND(rt1.c2)))AND(t0.c1)))OR(rt1.c4)) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON CASE WHEN (NOT (rt1.c3)) THEN ((rt0.c0)*(NULL)) WHEN ((rt1.c4)IS NOT(t0.c2)) THEN CASE rt0.c0  WHEN 0.5116608163465325 THEN rt0.c1 ELSE rt1.c4 END WHEN ((rt0.c0)||(rt0.c1)) THEN (((rt0.c1)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0))) WHEN (rt1.c2 IN ()) THEN ((((((((rt1.c2)AND(rt1.c0)))AND(rt1.c3)))AND(rt1.c0)))OR('L闋Ak')) WHEN (((rt0.c2))<=((t0.c2))) THEN CAST(rt1.c1 AS TEXT) ELSE CAST(rt1.c4 AS TEXT) END FULL OUTER JOIN rt1 ON CAST(rt0.c1 AS BLOB) COLLATE BINARY WHERE ((rt0.c1 COLLATE RTRIM IN ())) ORDER BY (- (((t0.c1) IS TRUE)))  NULLS FIRST, HEX(MIN(t0.c1, rt1.c3)) DESC  NULLS LAST, ((((((((rt1.c1)AND(t0.c2)))AND(rt1.c2)))AND(t0.c1)))OR(rt1.c4)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((rt0.c1 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON CASE WHEN (NOT (rt1.c3)) THEN ((rt0.c0)*(NULL)) WHEN ((rt1.c4)IS NOT(t0.c2)) THEN CASE rt0.c0  WHEN 0.5116608163465325 THEN rt0.c1 ELSE rt1.c4 END WHEN ((rt0.c0)||(rt0.c1)) THEN (((rt0.c1)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0))) WHEN (rt1.c2 IN ()) THEN ((((((((rt1.c2)AND(rt1.c0)))AND(rt1.c3)))AND(rt1.c0)))OR('L闋Ak')) WHEN (((rt0.c2))<=((t0.c2))) THEN CAST(rt1.c1 AS TEXT) ELSE CAST(rt1.c4 AS TEXT) END FULL OUTER JOIN rt1 ON CAST(rt0.c1 AS BLOB) COLLATE BINARY ORDER BY (- (((t0.c1) IS TRUE)))  NULLS FIRST, HEX(MIN(t0.c1, rt1.c3)) DESC  NULLS LAST, ((((((((rt1.c1)AND(t0.c2)))AND(rt1.c2)))AND(t0.c1)))OR(rt1.c4)) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM rt0, rt1 RIGHT OUTER JOIN t0 ON CASE (((('1890859120')OR(t0.c2)))AND(t0.c0))  WHEN (~ (t0.c1)) THEN (rt0.c2 IN (rt1.c0, rt1.c1)) WHEN rt1.c4 THEN x'' WHEN ((((rt1.c3)OR(rt0.c0)))OR(t0.c0)) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c4))) ELSE rt0.c2 END WHERE (((((rt0.c0 COLLATE BINARY)AND(((('-1244264438', rt1.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt1.c1, rt1.c1)) AND ((rt1.c4, t0.c0, rt0.c0))))))OR(((rt0.c2)-(t0.c0))))) ORDER BY ((((((rt1.c4)LIKE(rt0.c2)))OR(((0X26344fa5)/(rt1.c2)))))AND(CAST(t0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 COLLATE BINARY)AND(((('-1244264438', rt1.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt1.c1, rt1.c1)) AND ((rt1.c4, t0.c0, rt0.c0))))))OR(((rt0.c2)-(t0.c0))))) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN t0 ON CASE (((('1890859120')OR(t0.c2)))AND(t0.c0))  WHEN (~ (t0.c1)) THEN (rt0.c2 IN (rt1.c0, rt1.c1)) WHEN rt1.c4 THEN x'' WHEN ((((rt1.c3)OR(rt0.c0)))OR(t0.c0)) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c4))) ELSE rt0.c2 END ORDER BY ((((((rt1.c4)LIKE(rt0.c2)))OR(((0X26344fa5)/(rt1.c2)))))AND(CAST(t0.c0 AS REAL))));
SELECT ALL COUNT(*) FROM rt0, rt1 RIGHT OUTER JOIN t0 ON CASE (((('1890859120')OR(t0.c2)))AND(t0.c0))  WHEN (~ (t0.c1)) THEN (rt0.c2 IN (rt1.c0, rt1.c1)) WHEN rt1.c4 THEN x'' WHEN ((((rt1.c3)OR(rt0.c0)))OR(t0.c0)) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c4))) ELSE rt0.c2 END WHERE (((((rt0.c0 COLLATE BINARY)AND(((('-1244264438', rt1.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt1.c1, rt1.c1)) AND ((rt1.c4, t0.c0, rt0.c0))))))OR(((rt0.c2)-(t0.c0))))) ORDER BY ((((((rt1.c4)LIKE(rt0.c2)))OR(((0X26344fa5)/(rt1.c2)))))AND(CAST(t0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 COLLATE BINARY)AND(((('-1244264438', rt1.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt1.c1, rt1.c1)) AND ((rt1.c4, t0.c0, rt0.c0))))))OR(((rt0.c2)-(t0.c0))))) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN t0 ON CASE (((('1890859120')OR(t0.c2)))AND(t0.c0))  WHEN (~ (t0.c1)) THEN (rt0.c2 IN (rt1.c0, rt1.c1)) WHEN rt1.c4 THEN x'' WHEN ((((rt1.c3)OR(rt0.c0)))OR(t0.c0)) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c4))) ELSE rt0.c2 END ORDER BY ((((((rt1.c4)LIKE(rt0.c2)))OR(((0X26344fa5)/(rt1.c2)))))AND(CAST(t0.c0 AS REAL))));
SELECT ALL COUNT(*) FROM rt0, rt1 RIGHT OUTER JOIN t0 ON CASE (((('1890859120')OR(t0.c2)))AND(t0.c0))  WHEN (~ (t0.c1)) THEN (rt0.c2 IN (rt1.c0, rt1.c1)) WHEN rt1.c4 THEN x'' WHEN ((((rt1.c3)OR(rt0.c0)))OR(t0.c0)) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c4))) ELSE rt0.c2 END WHERE (((((rt0.c0 COLLATE BINARY)AND(((('-1244264438', rt1.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt1.c1, rt1.c1)) AND ((rt1.c4, t0.c0, rt0.c0))))))OR(((rt0.c2)-(t0.c0))))) ORDER BY ((((((rt1.c4)LIKE(rt0.c2)))OR(((0X26344fa5)/(rt1.c2)))))AND(CAST(t0.c0 AS REAL)));
SELECT * FROM t0 WHERE (((t0.c2)==(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2)==(t0.c0))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c2)==(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2)==(t0.c0))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c2)==(t0.c0)));
SELECT ALL * FROM rt1 WHERE (json_insert(CASE WHEN rt1.c2 THEN rt1.c4 END, CASE rt1.c3  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END, ((rt1.c1)OR(rt1.c2)))) ORDER BY ((rt1.c2)||(rt1.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_insert(CASE WHEN rt1.c2 THEN rt1.c4 END, CASE rt1.c3  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END, ((rt1.c1)OR(rt1.c2)))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2)||(rt1.c0)) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (json_insert(CASE WHEN rt1.c2 THEN rt1.c4 END, CASE rt1.c3  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END, ((rt1.c1)OR(rt1.c2)))) ORDER BY ((rt1.c2)||(rt1.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_insert(CASE WHEN rt1.c2 THEN rt1.c4 END, CASE rt1.c3  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END, ((rt1.c1)OR(rt1.c2)))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2)||(rt1.c0)) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (json_insert(CASE WHEN rt1.c2 THEN rt1.c4 END, CASE rt1.c3  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END, ((rt1.c1)OR(rt1.c2)))) ORDER BY ((rt1.c2)||(rt1.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST(CAST(rt0.c0 AS REAL) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS REAL) AS REAL)) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST(CAST(rt0.c0 AS REAL) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS REAL) AS REAL)) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST(CAST(rt0.c0 AS REAL) AS REAL));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CASE UNLIKELY(DISTINCT rt0.c0)  WHEN ((rt0.c2)||(rt1.c4)) THEN '376018814' COLLATE BINARY ELSE ((rt0.c0) NOT BETWEEN (rt1.c3) AND (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE UNLIKELY(DISTINCT rt0.c0)  WHEN ((rt0.c2)||(rt1.c4)) THEN '376018814' COLLATE BINARY ELSE ((rt0.c0) NOT BETWEEN (rt1.c3) AND (rt0.c1)) END) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CASE UNLIKELY(DISTINCT rt0.c0)  WHEN ((rt0.c2)||(rt1.c4)) THEN '376018814' COLLATE BINARY ELSE ((rt0.c0) NOT BETWEEN (rt1.c3) AND (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE UNLIKELY(DISTINCT rt0.c0)  WHEN ((rt0.c2)||(rt1.c4)) THEN '376018814' COLLATE BINARY ELSE ((rt0.c0) NOT BETWEEN (rt1.c3) AND (rt0.c1)) END) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CASE UNLIKELY(DISTINCT rt0.c0)  WHEN ((rt0.c2)||(rt1.c4)) THEN '376018814' COLLATE BINARY ELSE ((rt0.c0) NOT BETWEEN (rt1.c3) AND (rt0.c1)) END);
SELECT ALL * FROM t0 FULL OUTER JOIN rt1 ON ((((rt1.c4 COLLATE BINARY)OR(CAST(t0.c2 AS BLOB))))AND((+ (rt1.c3)))) WHERE (t0.c1 COLLATE RTRIM) ORDER BY ((((((rt1.c3)OR(t0.c1)))OR(rt1.c0))) IS FALSE)  NULLS FIRST, (((t0.c0)<(rt1.c0)) IN (rt1.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((t0.c1 COLLATE RTRIM) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt1 ON ((((rt1.c4 COLLATE BINARY)OR(CAST(t0.c2 AS BLOB))))AND((+ (rt1.c3)))) ORDER BY ((((((rt1.c3)OR(t0.c1)))OR(rt1.c0))) IS FALSE)  NULLS FIRST, (((t0.c0)<(rt1.c0)) IN (rt1.c1 COLLATE BINARY)));
SELECT ALL * FROM t0 FULL OUTER JOIN rt1 ON ((((rt1.c4 COLLATE BINARY)OR(CAST(t0.c2 AS BLOB))))AND((+ (rt1.c3)))) WHERE (t0.c1 COLLATE RTRIM) ORDER BY ((((((rt1.c3)OR(t0.c1)))OR(rt1.c0))) IS FALSE)  NULLS FIRST, (((t0.c0)<(rt1.c0)) IN (rt1.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((t0.c1 COLLATE RTRIM) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt1 ON ((((rt1.c4 COLLATE BINARY)OR(CAST(t0.c2 AS BLOB))))AND((+ (rt1.c3)))) ORDER BY ((((((rt1.c3)OR(t0.c1)))OR(rt1.c0))) IS FALSE)  NULLS FIRST, (((t0.c0)<(rt1.c0)) IN (rt1.c1 COLLATE BINARY)));
SELECT ALL * FROM t0 FULL OUTER JOIN rt1 ON ((((rt1.c4 COLLATE BINARY)OR(CAST(t0.c2 AS BLOB))))AND((+ (rt1.c3)))) WHERE (t0.c1 COLLATE RTRIM) ORDER BY ((((((rt1.c3)OR(t0.c1)))OR(rt1.c0))) IS FALSE)  NULLS FIRST, (((t0.c0)<(rt1.c0)) IN (rt1.c1 COLLATE BINARY));
SELECT ALL * FROM rt0, rt1, t0 WHERE ((~ ((~ ('귍F	arbW!''')))));
SELECT SUM(count) FROM (SELECT (((~ ((~ ('귍F	arbW!'''))))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL * FROM rt0, rt1, t0 WHERE ((~ ((~ ('귍F	arbW!''')))));
SELECT SUM(count) FROM (SELECT (((~ ((~ ('귍F	arbW!'''))))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL * FROM rt0, rt1, t0 WHERE ((~ ((~ ('귍F	arbW!''')))));
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (((rt0.c1) NOT NULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (((rt0.c1) NOT NULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (((rt0.c1) NOT NULL) COLLATE BINARY);
SELECT * FROM rt1, t0 WHERE (CAST(rt1.c3 AS BLOB) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c3 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (CAST(rt1.c3 AS BLOB) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c3 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (CAST(rt1.c3 AS BLOB) COLLATE NOCASE);
SELECT ALL * FROM t0, rt1 WHERE (x'8304') ORDER BY (((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1))))<((((rt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((x'8304') IS TRUE)  as count FROM t0, rt1 ORDER BY (((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1))))<((((rt1.c0) NOTNULL)))));
SELECT ALL * FROM t0, rt1 WHERE (x'8304') ORDER BY (((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1))))<((((rt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((x'8304') IS TRUE)  as count FROM t0, rt1 ORDER BY (((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1))))<((((rt1.c0) NOTNULL)))));
SELECT ALL * FROM t0, rt1 WHERE (x'8304') ORDER BY (((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1))))<((((rt1.c0) NOTNULL))));
SELECT ALL * FROM t0, rt0, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, rt0, rt1 NOT INDEXED);
SELECT ALL * FROM t0, rt0, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, rt0, rt1 NOT INDEXED);
SELECT ALL * FROM t0, rt0, rt1 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (CAST(rt1.c2 AS BLOB) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c2 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (CAST(rt1.c2 AS BLOB) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c2 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (CAST(rt1.c2 AS BLOB) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) NOTNULL) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) NOTNULL) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1) NOTNULL) IN ()));
SELECT ALL * FROM rt0, rt1, t0 WHERE ((+ (CAST(rt1.c3 AS REAL))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(rt1.c3 AS REAL)))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL * FROM rt0, rt1, t0 WHERE ((+ (CAST(rt1.c3 AS REAL))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(rt1.c3 AS REAL)))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL * FROM rt0, rt1, t0 WHERE ((+ (CAST(rt1.c3 AS REAL))));
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (((CASE rt1.c2  WHEN rt1.c1 THEN t0.c1 END) NOT BETWEEN (((((((((rt1.c4)AND(rt1.c0)))AND(rt1.c1)))AND(t0.c1)))AND(rt1.c3))) AND ((~ (rt1.c4)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c2  WHEN rt1.c1 THEN t0.c1 END) NOT BETWEEN (((((((((rt1.c4)AND(rt1.c0)))AND(rt1.c1)))AND(t0.c1)))AND(rt1.c3))) AND ((~ (rt1.c4))))) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (((CASE rt1.c2  WHEN rt1.c1 THEN t0.c1 END) NOT BETWEEN (((((((((rt1.c4)AND(rt1.c0)))AND(rt1.c1)))AND(t0.c1)))AND(rt1.c3))) AND ((~ (rt1.c4)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c2  WHEN rt1.c1 THEN t0.c1 END) NOT BETWEEN (((((((((rt1.c4)AND(rt1.c0)))AND(rt1.c1)))AND(t0.c1)))AND(rt1.c3))) AND ((~ (rt1.c4))))) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (((CASE rt1.c2  WHEN rt1.c1 THEN t0.c1 END) NOT BETWEEN (((((((((rt1.c4)AND(rt1.c0)))AND(rt1.c1)))AND(t0.c1)))AND(rt1.c3))) AND ((~ (rt1.c4)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((((rt1.c0) IS FALSE))OR(LIKELIHOOD(rt1.c4, 0.3442212120788014))))OR((((rt1.c2))>((rt1.c0))))))AND((x'' IN ()))))AND(((((rt1.c4)AND(rt1.c0)))OR(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0) IS FALSE))OR(LIKELIHOOD(rt1.c4, 0.3442212120788014))))OR((((rt1.c2))>((rt1.c0))))))AND((x'' IN ()))))AND(((((rt1.c4)AND(rt1.c0)))OR(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((((rt1.c0) IS FALSE))OR(LIKELIHOOD(rt1.c4, 0.3442212120788014))))OR((((rt1.c2))>((rt1.c0))))))AND((x'' IN ()))))AND(((((rt1.c4)AND(rt1.c0)))OR(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0) IS FALSE))OR(LIKELIHOOD(rt1.c4, 0.3442212120788014))))OR((((rt1.c2))>((rt1.c0))))))AND((x'' IN ()))))AND(((((rt1.c4)AND(rt1.c0)))OR(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((((rt1.c0) IS FALSE))OR(LIKELIHOOD(rt1.c4, 0.3442212120788014))))OR((((rt1.c2))>((rt1.c0))))))AND((x'' IN ()))))AND(((((rt1.c4)AND(rt1.c0)))OR(rt1.c1)))));
SELECT ALL * FROM rt0, t0, rt1 WHERE ((((+ (rt1.c2))) NOTNULL)) ORDER BY 0.5771489494661688 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt1.c2))) NOTNULL)) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY 0.5771489494661688 DESC);
SELECT ALL * FROM rt0, t0, rt1 WHERE ((((+ (rt1.c2))) NOTNULL)) ORDER BY 0.5771489494661688 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt1.c2))) NOTNULL)) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY 0.5771489494661688 DESC);
SELECT ALL * FROM rt0, t0, rt1 WHERE ((((+ (rt1.c2))) NOTNULL)) ORDER BY 0.5771489494661688 DESC;
SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON CASE WHEN ((-2139255354)>>(rt1.c3)) THEN ((((((((rt1.c4)OR(rt1.c1)))OR(rt1.c4)))AND(rt1.c1)))OR(t0.c2)) ELSE t0.c1 END WHERE (((rt1.c3) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((rt1.c3) IS TRUE)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt1 ON CASE WHEN ((-2139255354)>>(rt1.c3)) THEN ((((((((rt1.c4)OR(rt1.c1)))OR(rt1.c4)))AND(rt1.c1)))OR(t0.c2)) ELSE t0.c1 END);
SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON CASE WHEN ((-2139255354)>>(rt1.c3)) THEN ((((((((rt1.c4)OR(rt1.c1)))OR(rt1.c4)))AND(rt1.c1)))OR(t0.c2)) ELSE t0.c1 END WHERE (((rt1.c3) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((rt1.c3) IS TRUE)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt1 ON CASE WHEN ((-2139255354)>>(rt1.c3)) THEN ((((((((rt1.c4)OR(rt1.c1)))OR(rt1.c4)))AND(rt1.c1)))OR(t0.c2)) ELSE t0.c1 END);
SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON CASE WHEN ((-2139255354)>>(rt1.c3)) THEN ((((((((rt1.c4)OR(rt1.c1)))OR(rt1.c4)))AND(rt1.c1)))OR(t0.c2)) ELSE t0.c1 END WHERE (((rt1.c3) IS TRUE));
SELECT COUNT(*) FROM rt1 WHERE (-2079804814) ORDER BY ((NULL) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((-2079804814) IS TRUE)  as count FROM rt1 ORDER BY ((NULL) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (-2079804814) ORDER BY ((NULL) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((-2079804814) IS TRUE)  as count FROM rt1 ORDER BY ((NULL) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (-2079804814) ORDER BY ((NULL) IS FALSE)  NULLS LAST;
SELECT * FROM rt0, rt1 WHERE (((rt1.c3)||(x'')) COLLATE NOCASE) ORDER BY 0.30306504787734045  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c3)||(x'')) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1 ORDER BY 0.30306504787734045  NULLS LAST);
SELECT * FROM rt0, rt1 WHERE (((rt1.c3)||(x'')) COLLATE NOCASE) ORDER BY 0.30306504787734045  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c3)||(x'')) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1 ORDER BY 0.30306504787734045  NULLS LAST);
SELECT * FROM rt0, rt1 WHERE (((rt1.c3)||(x'')) COLLATE NOCASE) ORDER BY 0.30306504787734045  NULLS LAST;
SELECT COUNT(*) FROM rt0, rt1 INNER JOIN t0 ON 0.1632904774970395 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM rt0, rt1 INNER JOIN t0 ON 0.1632904774970395);
SELECT COUNT(*) FROM rt0, rt1 INNER JOIN t0 ON 0.1632904774970395 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM rt0, rt1 INNER JOIN t0 ON 0.1632904774970395);
SELECT COUNT(*) FROM rt0, rt1 INNER JOIN t0 ON 0.1632904774970395 WHERE (t0.c1);
SELECT * FROM t0 INNER JOIN rt0 ON t0.c1 CROSS JOIN rt1 ON json_remove(((((rt1.c2)OR('A&TG\nfFT')))OR(rt0.c2)), ((((rt1.c2)OR(rt1.c4)))AND(rt1.c4)), ((rt1.c4) NOTNULL), rt1.c2) WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON t0.c1 CROSS JOIN rt1 ON json_remove(((((rt1.c2)OR('A&TG\nfFT')))OR(rt0.c2)), ((((rt1.c2)OR(rt1.c4)))AND(rt1.c4)), ((rt1.c4) NOTNULL), rt1.c2));
SELECT * FROM t0 INNER JOIN rt0 ON t0.c1 CROSS JOIN rt1 ON json_remove(((((rt1.c2)OR('A&TG\nfFT')))OR(rt0.c2)), ((((rt1.c2)OR(rt1.c4)))AND(rt1.c4)), ((rt1.c4) NOTNULL), rt1.c2) WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON t0.c1 CROSS JOIN rt1 ON json_remove(((((rt1.c2)OR('A&TG\nfFT')))OR(rt0.c2)), ((((rt1.c2)OR(rt1.c4)))AND(rt1.c4)), ((rt1.c4) NOTNULL), rt1.c2));
SELECT * FROM t0 INNER JOIN rt0 ON t0.c1 CROSS JOIN rt1 ON json_remove(((((rt1.c2)OR('A&TG\nfFT')))OR(rt0.c2)), ((((rt1.c2)OR(rt1.c4)))AND(rt1.c4)), ((rt1.c4) NOTNULL), rt1.c2) WHERE (rt1.c4);
SELECT * FROM rt1, rt0 WHERE (((CASE WHEN rt1.c2 THEN rt0.c1 END)==(((rt1.c2)*(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c2 THEN rt0.c1 END)==(((rt1.c2)*(rt0.c2))))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((CASE WHEN rt1.c2 THEN rt0.c1 END)==(((rt1.c2)*(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c2 THEN rt0.c1 END)==(((rt1.c2)*(rt0.c2))))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((CASE WHEN rt1.c2 THEN rt0.c1 END)==(((rt1.c2)*(rt0.c2)))));
SELECT ALL * FROM rt1 WHERE ((+ (rt1.c4 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((+ (rt1.c4 COLLATE NOCASE))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((+ (rt1.c4 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((+ (rt1.c4 COLLATE NOCASE))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((+ (rt1.c4 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE ((((NOT (rt0.c2))) NOT BETWEEN (CASE WHEN -864091304 THEN rt0.c1 END) AND (0.9604685193031441)));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c2))) NOT BETWEEN (CASE WHEN -864091304 THEN rt0.c1 END) AND (0.9604685193031441))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE ((((NOT (rt0.c2))) NOT BETWEEN (CASE WHEN -864091304 THEN rt0.c1 END) AND (0.9604685193031441)));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c2))) NOT BETWEEN (CASE WHEN -864091304 THEN rt0.c1 END) AND (0.9604685193031441))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE ((((NOT (rt0.c2))) NOT BETWEEN (CASE WHEN -864091304 THEN rt0.c1 END) AND (0.9604685193031441)));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON ((CAST(rt1.c1 AS REAL))IS NOT((((rt0.c1)) NOT BETWEEN ((0.09138967900776984)) AND ((rt0.c1))))) WHERE (CASE CAST(rt1.c4 AS NUMERIC)  WHEN (~ (rt1.c3)) THEN rt0.c2 COLLATE BINARY WHEN ((rt1.c0)>>(rt1.c4)) THEN ((rt0.c1)IS NOT(rt0.c2)) WHEN (((rt1.c3))>=((rt0.c1))) THEN rt0.c2 COLLATE RTRIM END) ORDER BY rt1.c4 ASC, ((rt1.c0)IS(rt1.c4)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt1.c4 AS NUMERIC)  WHEN (~ (rt1.c3)) THEN rt0.c2 COLLATE BINARY WHEN ((rt1.c0)>>(rt1.c4)) THEN ((rt0.c1)IS NOT(rt0.c2)) WHEN (((rt1.c3))>=((rt0.c1))) THEN rt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((CAST(rt1.c1 AS REAL))IS NOT((((rt0.c1)) NOT BETWEEN ((0.09138967900776984)) AND ((rt0.c1))))) ORDER BY rt1.c4 ASC, ((rt1.c0)IS(rt1.c4)) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON ((CAST(rt1.c1 AS REAL))IS NOT((((rt0.c1)) NOT BETWEEN ((0.09138967900776984)) AND ((rt0.c1))))) WHERE (CASE CAST(rt1.c4 AS NUMERIC)  WHEN (~ (rt1.c3)) THEN rt0.c2 COLLATE BINARY WHEN ((rt1.c0)>>(rt1.c4)) THEN ((rt0.c1)IS NOT(rt0.c2)) WHEN (((rt1.c3))>=((rt0.c1))) THEN rt0.c2 COLLATE RTRIM END) ORDER BY rt1.c4 ASC, ((rt1.c0)IS(rt1.c4)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt1.c4 AS NUMERIC)  WHEN (~ (rt1.c3)) THEN rt0.c2 COLLATE BINARY WHEN ((rt1.c0)>>(rt1.c4)) THEN ((rt0.c1)IS NOT(rt0.c2)) WHEN (((rt1.c3))>=((rt0.c1))) THEN rt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((CAST(rt1.c1 AS REAL))IS NOT((((rt0.c1)) NOT BETWEEN ((0.09138967900776984)) AND ((rt0.c1))))) ORDER BY rt1.c4 ASC, ((rt1.c0)IS(rt1.c4)) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON ((CAST(rt1.c1 AS REAL))IS NOT((((rt0.c1)) NOT BETWEEN ((0.09138967900776984)) AND ((rt0.c1))))) WHERE (CASE CAST(rt1.c4 AS NUMERIC)  WHEN (~ (rt1.c3)) THEN rt0.c2 COLLATE BINARY WHEN ((rt1.c0)>>(rt1.c4)) THEN ((rt0.c1)IS NOT(rt0.c2)) WHEN (((rt1.c3))>=((rt0.c1))) THEN rt0.c2 COLLATE RTRIM END) ORDER BY rt1.c4 ASC, ((rt1.c0)IS(rt1.c4)) COLLATE NOCASE DESC;
SELECT COUNT(*) FROM t0, rt1 WHERE (CAST(((t0.c1) NOTNULL) AS NUMERIC)) ORDER BY TRIM(((x'b002') BETWEEN (t0.c0) AND (rt1.c0)))  NULLS FIRST, (((t0.c1)) NOT BETWEEN ((rt1.c4)) AND ((CAST(rt1.c2 AS NUMERIC))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c1) NOTNULL) AS NUMERIC)) IS TRUE)  as count FROM t0, rt1 ORDER BY TRIM(((x'b002') BETWEEN (t0.c0) AND (rt1.c0)))  NULLS FIRST, (((t0.c1)) NOT BETWEEN ((rt1.c4)) AND ((CAST(rt1.c2 AS NUMERIC))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt1 WHERE (CAST(((t0.c1) NOTNULL) AS NUMERIC)) ORDER BY TRIM(((x'b002') BETWEEN (t0.c0) AND (rt1.c0)))  NULLS FIRST, (((t0.c1)) NOT BETWEEN ((rt1.c4)) AND ((CAST(rt1.c2 AS NUMERIC))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c1) NOTNULL) AS NUMERIC)) IS TRUE)  as count FROM t0, rt1 ORDER BY TRIM(((x'b002') BETWEEN (t0.c0) AND (rt1.c0)))  NULLS FIRST, (((t0.c1)) NOT BETWEEN ((rt1.c4)) AND ((CAST(rt1.c2 AS NUMERIC))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt1 WHERE (CAST(((t0.c1) NOTNULL) AS NUMERIC)) ORDER BY TRIM(((x'b002') BETWEEN (t0.c0) AND (rt1.c0)))  NULLS FIRST, (((t0.c1)) NOT BETWEEN ((rt1.c4)) AND ((CAST(rt1.c2 AS NUMERIC))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE ((((NOT (rt1.c4))) BETWEEN (((t0.c1) ISNULL)) AND (CAST(rt1.c3 AS BLOB)))) ORDER BY (((('')<<('')))IS(COALESCE(rt1.c4, t0.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c4))) BETWEEN (((t0.c1) ISNULL)) AND (CAST(rt1.c3 AS BLOB)))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY (((('')<<('')))IS(COALESCE(rt1.c4, t0.c0))) ASC);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE ((((NOT (rt1.c4))) BETWEEN (((t0.c1) ISNULL)) AND (CAST(rt1.c3 AS BLOB)))) ORDER BY (((('')<<('')))IS(COALESCE(rt1.c4, t0.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c4))) BETWEEN (((t0.c1) ISNULL)) AND (CAST(rt1.c3 AS BLOB)))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY (((('')<<('')))IS(COALESCE(rt1.c4, t0.c0))) ASC);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE ((((NOT (rt1.c4))) BETWEEN (((t0.c1) ISNULL)) AND (CAST(rt1.c3 AS BLOB)))) ORDER BY (((('')<<('')))IS(COALESCE(rt1.c4, t0.c0))) ASC;
SELECT COUNT(*) FROM rt0, t0 WHERE (((((((rt0.c1)OR(t0.c1)))AND(rt0.c2)))>=((((rt0.c0))>=((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(t0.c1)))AND(rt0.c2)))>=((((rt0.c0))>=((rt0.c2)))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((((rt0.c1)OR(t0.c1)))AND(rt0.c2)))>=((((rt0.c0))>=((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(t0.c1)))AND(rt0.c2)))>=((((rt0.c0))>=((rt0.c2)))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((((rt0.c1)OR(t0.c1)))AND(rt0.c2)))>=((((rt0.c0))>=((rt0.c2))))));
SELECT ALL * FROM rt0, rt1 WHERE (CAST(x'e488' COLLATE BINARY AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'e488' COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (CAST(x'e488' COLLATE BINARY AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'e488' COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (CAST(x'e488' COLLATE BINARY AS NUMERIC));
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE ((~ (RTRIM(rt1.c1)))) ORDER BY (((rt1.c1, rt0.c0, t0.c0)) NOT BETWEEN ((((t0.c0) IS FALSE), ((t0.c2)+(rt1.c3)), NULL)) AND (((rt1.c1 IN (t0.c0)), ((rt0.c0)<<(rt1.c3)), CASE WHEN rt0.c1 THEN rt0.c0 END))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (RTRIM(rt1.c1)))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY (((rt1.c1, rt0.c0, t0.c0)) NOT BETWEEN ((((t0.c0) IS FALSE), ((t0.c2)+(rt1.c3)), NULL)) AND (((rt1.c1 IN (t0.c0)), ((rt0.c0)<<(rt1.c3)), CASE WHEN rt0.c1 THEN rt0.c0 END))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE ((~ (RTRIM(rt1.c1)))) ORDER BY (((rt1.c1, rt0.c0, t0.c0)) NOT BETWEEN ((((t0.c0) IS FALSE), ((t0.c2)+(rt1.c3)), NULL)) AND (((rt1.c1 IN (t0.c0)), ((rt0.c0)<<(rt1.c3)), CASE WHEN rt0.c1 THEN rt0.c0 END))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (RTRIM(rt1.c1)))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY (((rt1.c1, rt0.c0, t0.c0)) NOT BETWEEN ((((t0.c0) IS FALSE), ((t0.c2)+(rt1.c3)), NULL)) AND (((rt1.c1 IN (t0.c0)), ((rt0.c0)<<(rt1.c3)), CASE WHEN rt0.c1 THEN rt0.c0 END))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE ((~ (RTRIM(rt1.c1)))) ORDER BY (((rt1.c1, rt0.c0, t0.c0)) NOT BETWEEN ((((t0.c0) IS FALSE), ((t0.c2)+(rt1.c3)), NULL)) AND (((rt1.c1 IN (t0.c0)), ((rt0.c0)<<(rt1.c3)), CASE WHEN rt0.c1 THEN rt0.c0 END))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, rt1 WHERE (DATETIME(CAST(rt1.c0 AS REAL), ((((t0.c0)OR(0.42095474946321776)))AND(rt1.c4)), ((rt1.c3)GLOB(rt1.c2)), CAST(rt1.c0 AS BLOB), CAST(rt1.c3 AS REAL), (+ (rt1.c3)), (rt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(CAST(rt1.c0 AS REAL), ((((t0.c0)OR(0.42095474946321776)))AND(rt1.c4)), ((rt1.c3)GLOB(rt1.c2)), CAST(rt1.c0 AS BLOB), CAST(rt1.c3 AS REAL), (+ (rt1.c3)), (rt1.c0 IN ()))) IS TRUE)  as count FROM t0, rt1);
SELECT COUNT(*) FROM t0, rt1 WHERE (DATETIME(CAST(rt1.c0 AS REAL), ((((t0.c0)OR(0.42095474946321776)))AND(rt1.c4)), ((rt1.c3)GLOB(rt1.c2)), CAST(rt1.c0 AS BLOB), CAST(rt1.c3 AS REAL), (+ (rt1.c3)), (rt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(CAST(rt1.c0 AS REAL), ((((t0.c0)OR(0.42095474946321776)))AND(rt1.c4)), ((rt1.c3)GLOB(rt1.c2)), CAST(rt1.c0 AS BLOB), CAST(rt1.c3 AS REAL), (+ (rt1.c3)), (rt1.c0 IN ()))) IS TRUE)  as count FROM t0, rt1);
SELECT COUNT(*) FROM t0, rt1 WHERE (DATETIME(CAST(rt1.c0 AS REAL), ((((t0.c0)OR(0.42095474946321776)))AND(rt1.c4)), ((rt1.c3)GLOB(rt1.c2)), CAST(rt1.c0 AS BLOB), CAST(rt1.c3 AS REAL), (+ (rt1.c3)), (rt1.c0 IN ())));
SELECT ALL * FROM t0, rt1, rt0 WHERE ((~ (((0.3145942462861647)%(rt1.c1))))) ORDER BY CASE WHEN (NOT (rt1.c0)) THEN CAST(rt0.c1 AS BLOB) ELSE SQLITE_COMPILEOPTION_GET(rt0.c2) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((0.3145942462861647)%(rt1.c1))))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY CASE WHEN (NOT (rt1.c0)) THEN CAST(rt0.c1 AS BLOB) ELSE SQLITE_COMPILEOPTION_GET(rt0.c2) END  NULLS LAST);
SELECT ALL * FROM t0, rt1, rt0 WHERE ((~ (((0.3145942462861647)%(rt1.c1))))) ORDER BY CASE WHEN (NOT (rt1.c0)) THEN CAST(rt0.c1 AS BLOB) ELSE SQLITE_COMPILEOPTION_GET(rt0.c2) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((0.3145942462861647)%(rt1.c1))))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY CASE WHEN (NOT (rt1.c0)) THEN CAST(rt0.c1 AS BLOB) ELSE SQLITE_COMPILEOPTION_GET(rt0.c2) END  NULLS LAST);
SELECT ALL * FROM t0, rt1, rt0 WHERE ((~ (((0.3145942462861647)%(rt1.c1))))) ORDER BY CASE WHEN (NOT (rt1.c0)) THEN CAST(rt0.c1 AS BLOB) ELSE SQLITE_COMPILEOPTION_GET(rt0.c2) END  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE (HEX(DISTINCT ((t0.c1) BETWEEN (rt1.c3) AND (rt1.c2)))) ORDER BY ((((rt1.c2) ISNULL)) NOT BETWEEN (CAST(rt1.c2 AS INTEGER)) AND ((t0.c1 IN (rt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((t0.c1) BETWEEN (rt1.c3) AND (rt1.c2)))) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY ((((rt1.c2) ISNULL)) NOT BETWEEN (CAST(rt1.c2 AS INTEGER)) AND ((t0.c1 IN (rt1.c1)))) DESC);
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE (HEX(DISTINCT ((t0.c1) BETWEEN (rt1.c3) AND (rt1.c2)))) ORDER BY ((((rt1.c2) ISNULL)) NOT BETWEEN (CAST(rt1.c2 AS INTEGER)) AND ((t0.c1 IN (rt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((t0.c1) BETWEEN (rt1.c3) AND (rt1.c2)))) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY ((((rt1.c2) ISNULL)) NOT BETWEEN (CAST(rt1.c2 AS INTEGER)) AND ((t0.c1 IN (rt1.c1)))) DESC);
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE (HEX(DISTINCT ((t0.c1) BETWEEN (rt1.c3) AND (rt1.c2)))) ORDER BY ((((rt1.c2) ISNULL)) NOT BETWEEN (CAST(rt1.c2 AS INTEGER)) AND ((t0.c1 IN (rt1.c1)))) DESC;
SELECT COUNT(*) FROM t0, rt0 WHERE (((rt0.c0 COLLATE RTRIM) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((rt0.c0 COLLATE RTRIM) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((rt0.c0 COLLATE RTRIM) IS FALSE));
SELECT COUNT(*) FROM rt1, t0 WHERE (CASE WHEN json_array_length(rt1.c1) THEN CASE rt1.c1  WHEN rt1.c3 THEN rt1.c0 WHEN NULL THEN t0.c2 WHEN t0.c2 THEN rt1.c1 ELSE rt1.c0 END ELSE ((((((((((((t0.c1)AND(rt1.c2)))OR(rt1.c2)))OR(t0.c0)))AND(rt1.c4)))AND(rt1.c0)))OR(rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json_array_length(rt1.c1) THEN CASE rt1.c1  WHEN rt1.c3 THEN rt1.c0 WHEN NULL THEN t0.c2 WHEN t0.c2 THEN rt1.c1 ELSE rt1.c0 END ELSE ((((((((((((t0.c1)AND(rt1.c2)))OR(rt1.c2)))OR(t0.c0)))AND(rt1.c4)))AND(rt1.c0)))OR(rt1.c1)) END) IS TRUE)  as count FROM rt1, t0);
SELECT COUNT(*) FROM rt1, t0 WHERE (CASE WHEN json_array_length(rt1.c1) THEN CASE rt1.c1  WHEN rt1.c3 THEN rt1.c0 WHEN NULL THEN t0.c2 WHEN t0.c2 THEN rt1.c1 ELSE rt1.c0 END ELSE ((((((((((((t0.c1)AND(rt1.c2)))OR(rt1.c2)))OR(t0.c0)))AND(rt1.c4)))AND(rt1.c0)))OR(rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json_array_length(rt1.c1) THEN CASE rt1.c1  WHEN rt1.c3 THEN rt1.c0 WHEN NULL THEN t0.c2 WHEN t0.c2 THEN rt1.c1 ELSE rt1.c0 END ELSE ((((((((((((t0.c1)AND(rt1.c2)))OR(rt1.c2)))OR(t0.c0)))AND(rt1.c4)))AND(rt1.c0)))OR(rt1.c1)) END) IS TRUE)  as count FROM rt1, t0);
SELECT COUNT(*) FROM rt1, t0 WHERE (CASE WHEN json_array_length(rt1.c1) THEN CASE rt1.c1  WHEN rt1.c3 THEN rt1.c0 WHEN NULL THEN t0.c2 WHEN t0.c2 THEN rt1.c1 ELSE rt1.c0 END ELSE ((((((((((((t0.c1)AND(rt1.c2)))OR(rt1.c2)))OR(t0.c0)))AND(rt1.c4)))AND(rt1.c0)))OR(rt1.c1)) END);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (((rt1.c1)IS(t0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt1.c1)IS(t0.c1)) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (((rt1.c1)IS(t0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt1.c1)IS(t0.c1)) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (((rt1.c1)IS(t0.c1)) COLLATE BINARY);
SELECT ALL * FROM rt0 WHERE (TRIM(DISTINCT CAST(rt0.c0 AS NUMERIC), (rt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT CAST(rt0.c0 AS NUMERIC), (rt0.c0 IN ()))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (TRIM(DISTINCT CAST(rt0.c0 AS NUMERIC), (rt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT CAST(rt0.c0 AS NUMERIC), (rt0.c0 IN ()))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (TRIM(DISTINCT CAST(rt0.c0 AS NUMERIC), (rt0.c0 IN ())));
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL);
SELECT * FROM t0 RIGHT OUTER JOIN rt1 ON CASE (((t0.c2))<=((rt1.c2)))  WHEN ((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c3)))OR(rt1.c3)))AND(rt1.c0)) THEN ((((rt1.c3)AND(t0.c1)))AND(rt1.c1)) ELSE (((t0.c0, rt1.c4, rt1.c4))<((rt1.c0, rt1.c1, t0.c0))) END WHERE ((((((rt1.c1)AND(t0.c0)))OR(t0.c2)) IN ())) ORDER BY (TYPEOF(rt1.c3) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1)AND(t0.c0)))OR(t0.c2)) IN ())) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt1 ON CASE (((t0.c2))<=((rt1.c2)))  WHEN ((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c3)))OR(rt1.c3)))AND(rt1.c0)) THEN ((((rt1.c3)AND(t0.c1)))AND(rt1.c1)) ELSE (((t0.c0, rt1.c4, rt1.c4))<((rt1.c0, rt1.c1, t0.c0))) END ORDER BY (TYPEOF(rt1.c3) IN ()) DESC);
SELECT * FROM t0 RIGHT OUTER JOIN rt1 ON CASE (((t0.c2))<=((rt1.c2)))  WHEN ((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c3)))OR(rt1.c3)))AND(rt1.c0)) THEN ((((rt1.c3)AND(t0.c1)))AND(rt1.c1)) ELSE (((t0.c0, rt1.c4, rt1.c4))<((rt1.c0, rt1.c1, t0.c0))) END WHERE ((((((rt1.c1)AND(t0.c0)))OR(t0.c2)) IN ())) ORDER BY (TYPEOF(rt1.c3) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1)AND(t0.c0)))OR(t0.c2)) IN ())) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt1 ON CASE (((t0.c2))<=((rt1.c2)))  WHEN ((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c3)))OR(rt1.c3)))AND(rt1.c0)) THEN ((((rt1.c3)AND(t0.c1)))AND(rt1.c1)) ELSE (((t0.c0, rt1.c4, rt1.c4))<((rt1.c0, rt1.c1, t0.c0))) END ORDER BY (TYPEOF(rt1.c3) IN ()) DESC);
SELECT * FROM t0 RIGHT OUTER JOIN rt1 ON CASE (((t0.c2))<=((rt1.c2)))  WHEN ((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c3)))OR(rt1.c3)))AND(rt1.c0)) THEN ((((rt1.c3)AND(t0.c1)))AND(rt1.c1)) ELSE (((t0.c0, rt1.c4, rt1.c4))<((rt1.c0, rt1.c1, t0.c0))) END WHERE ((((((rt1.c1)AND(t0.c0)))OR(t0.c2)) IN ())) ORDER BY (TYPEOF(rt1.c3) IN ()) DESC;
