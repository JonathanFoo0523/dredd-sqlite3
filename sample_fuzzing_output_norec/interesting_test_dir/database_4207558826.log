-- Time: 2024/06/09 23:54:48
-- Database: database26
-- Database version: 3.40.0
-- seed value: 4207558826
PRAGMA cache_size = 50000; -- 3ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, +c3 BLOB ); -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2, c3, c4); -- 0ms;
UPDATE OR IGNORE rt1 SET c3=-70915344 WHERE ((((rt1.c4) BETWEEN (rt1.c3) AND (rt1.c2))) NOTNULL); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR FAIL rt1 SET c4=x'' WHERE (((~ (899366128)))OR(rt1.c2)); -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM temp; -- 0ms;
PRAGMA optimize; -- 0ms;
PRAGMA temp.cache_spill = false; -- 0ms;
COMMIT; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.integrity_check; -- 0ms;
PRAGMA automatic_index; -- 0ms;
PRAGMA temp.secure_delete = true; -- 0ms;
UPDATE OR IGNORE rt1 SET (c2)=('') WHERE UNLIKELY(DISTINCT ((NULL) NOT BETWEEN (rt1.c4) AND (x'43ba'))); -- 0ms;
END TRANSACTION; -- 0ms;
REINDEX BINARY; -- 0ms;
REINDEX  rt1; -- 0ms;
COMMIT; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c1, c4) VALUES (0xfffffffffbc5eaf0, 'P', NULL); -- 0ms;
UPDATE OR IGNORE rt1 SET c0=NULL, c0=0.4564293084571245 WHERE ((CAST(rt1.c3 AS REAL))IS NOT((rt1.c1 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=899366128 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-70915344'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((8.99366128E8, x'3797', x'')) NOT BETWEEN ((((('-70915344'))>((NULL))), 0Xfffffffffbc5eaf0 COLLATE RTRIM, (('tC') BETWEEN (899366128) AND (0.2026366124027601)))) AND (((~ ('')), (('-351041004')+(NULL)), ((0xfffffffffbc5eaf0) IS FALSE)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '4 sz=1864997047 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-768787874 sz=1370305728 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(-7.68787874E8 AS REAL) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0Xffffffffd22d3a5e)AND('-774965563')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1684354896 0 sz=-774965563'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (x''))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(('-774965563' IN ())); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('&')|('1370305728')))AND(CAST(0X64653750 AS REAL))))OR((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (x'' IN ()) THEN x'' COLLATE NOCASE END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=562450984 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1608353084'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=665124951 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.6671214723339859)) BETWEEN (((('') BETWEEN (0.6297112857090142) AND (0.4564293084571245)))) AND ((0.4564293084571245))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1482371494 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-839533848 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN COALESCE('-416686748', 'tC') THEN (-839533848 IN ('TRUE')) ELSE (0Xffffffffa0227ac4 IN ()) END; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1482371494 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1280373435'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=2082057212 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1007827459 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) BETWEEN ((x'' IN ())) AND (((0.8591722683152268) BETWEEN (x'') AND ('1007827459')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-2072034816 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1864997047 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '736223879'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1204749815 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1111108082 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN 0.6822343727524416 THEN '' ELSE '-2072850525' END AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-2072850525'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1204749815'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE '-1341015906'  WHEN 0.5920166135579592 THEN 208441938 END))<((MIN('TC', '-719116269')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-979899537 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2072850525'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2072850525 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-879063402 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=736223879'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=885195462 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1111108082 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1097514661 sz=-346062584'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')IS NOT(0.43797247625998714)) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('r\')||('2118866780')))AND(0xffffffffbd6c86dc COLLATE NOCASE)))OR((('') NOT BETWEEN (0.13422202291937535) AND (x'')))))AND(((NULL) NOT BETWEEN ('') AND (NULL)))))AND((~ ('-K7KFvu1')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((0.9572138123486639)OR(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '-1273807331'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 1705413232 THEN NULL WHEN '1111108082' THEN '1864997047' WHEN x'' THEN x'' ELSE 'q-' END)||(x'18a6' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=562450984 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-734161496'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1994324130 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-490683194 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((- (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1336662279 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE x'4dd3'  WHEN '-734161496' THEN x'40ce' END))<((CAST('&z' AS NUMERIC)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CAST(x'cf6f' AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('373719396'))<((-1773733415))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'')IS('-2072034816')) THEN CAST(0.24140964650196373 AS TEXT) WHEN CASE x''  WHEN x'2c89' THEN '-719116269' ELSE '' END THEN ((1.684354896E9)<<(x'')) WHEN ((NULL) IS FALSE) THEN ((-8.79063402E8) IS FALSE) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'13ae')<(NULL)))<=(((0.7059278275355602)<('O')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((NULL)AND(0Xffffffffc1d8d4d9)))OR(1.864997047E9)))AND((NULL IN (NULL, 0.6780076048467861)))))AND(((0.24140964650196373)GLOB(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('7䓤㸝JE(')AND(1.336662279E9)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS TRUE)) BETWEEN ((((NULL)) BETWEEN ((-1042754343)) AND ((NULL)))) AND ((((('1482371494')OR(x'd8dd')))AND(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(((0xffffffff98c66930)GLOB(x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 1529610544 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1097514661 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '2 2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL) IS FALSE)))>=(((((('n입iD''r#j0')OR(NULL)))AND(0X6dc67e52))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1529610544 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=986309586 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 sz=-1356631532 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1102374583'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT UNLIKELY(NULL), CAST(0.8801975558993547 AS REAL)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '948376592 0 sz=-1097514661 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=373719396 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 0 sz=-1981189248 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('451348025') NOT BETWEEN (0.9511368748646966) AND ('0.24140964650196373'))) IS FALSE); -- 1ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT json_extract(0.18680870827767615, 0.6458468460655715)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=513759960 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE LIKE(('cTHbz' IN ()), ((0.10596619843811994)OR(-1570817445))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM((('-594762973')LIKE(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1007827459 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1608353084'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1922242075'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-879063402 sz=-1243925758 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((1142481342 COLLATE BINARY) BETWEEN (((('1517667713')) BETWEEN ((0.9885239714254135)) AND (('y')))) AND ((((-1.570817445E9))==((0.748096658253468))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN IFNULL(-7.74965563E8, 0Xffffffffd6f079f2) THEN (- (x'')) ELSE (('-1981189248')+(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER((+ (5.1375996E8))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN 0.9594436808008809 THEN x'58f6' END)<(1339782353 COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 sz=1111108082 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '824209599 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=986309586 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 3ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.748096658253468)>(0xffffffffd934a352))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-1246371418 2 sz=-1348286543 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=208008682 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1906063924 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=115050097 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '817273705 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-144801700'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)/(0xc65f5ea)))<<(json_valid(0.31076266442013467))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-642712920 0 -1348286543 sz=373719396 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (6.65124951E8))) NOT NULL); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))/(CASE '1280373435'  WHEN 0.4924413792449259 THEN '6g' WHEN 0X486bad61 THEN '21251300' WHEN x'b60e' THEN NULL ELSE 0.5283180938584343 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1640809961 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1864997047 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((('1933935523')OR('1111108082')))AND(0.10647492096934918))  WHEN ((((1116888588)AND(NULL)))AND('-1366227640')) THEN x'' ELSE ((x'')%('<7k.㨃')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '2024847534'  WHEN -9.79899537E8 THEN '7>	⪳e' END)%('yVm|{?ᾤXX')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=597055182 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 sz=-1705445820 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.46171731790331305, NULL, NULL)) BETWEEN ((CASE WHEN 0.23285325578656446 THEN '451348025' ELSE NULL END, (NULL IN ()), ((((0x7cc38d7a)AND(x'e675')))AND(NULL)))) AND (((~ ('-1143322581')), LOWER(NULL), ((NULL) NOT BETWEEN (0.6707408363713032) AND (0.28218303867821715))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(NULL) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 2 sz=-301066604'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '1273558643 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1318099167 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=736223879'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((NULL)AND(0.6822343727524416)))AND(x'560a')))OR(((x'a48f') NOTNULL))))OR(CAST('<oI3	㓀怖~' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1243925758 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=736223879 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-2127053470 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL)>=('y'))  WHEN IFNULL(NULL, NULL) THEN ((0.537201413399653)<<(0Xffffffffbd6c86dc)) WHEN CAST('-416686748' AS INTEGER) THEN ((x'')&(0.0344186161650023)) WHEN '-K7KFvu1' THEN (((((((('')AND(x'')))OR(0.5691851114123427)))AND(-1316297779)))OR(2215324)) WHEN '2024847534' COLLATE NOCASE THEN x'a23d' WHEN CASE ''  WHEN 0xaacff7a THEN -7.34161496E8 WHEN x'c7b1' THEN 0.4142042763553766 WHEN '1280373435' THEN x'' ELSE x'' END THEN ((NULL) NOTNULL) END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-914092999'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')<(0Xffffffffe16e4eda))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1922242075 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=736223879 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE json_array_length(x'')  WHEN QUOTE('{n') THEN NULL COLLATE RTRIM END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ('p\9i椰*a' IN (2.08441938E8)) THEN 1.933935523E9 ELSE '-7224051' END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '505882599 -69239630 sz=-594762973 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN 'v' THEN '' ELSE x'' END)OR((('') IS FALSE))))OR(CASE WHEN NULL THEN 992063295 WHEN x'65f7' THEN x'' WHEN 0.3518421785269543 THEN NULL WHEN NULL THEN '505882599' WHEN 0.11816946050275412 THEN NULL ELSE x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-350204694 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=621503017 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-52042515 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2093190522 817273705 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=385331384'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN NULL ELSE 0.9476752786092136 END) BETWEEN ((('1142481342') IS FALSE)) AND ((NULL IN ()))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((-1.243925758E9) NOT NULL))OR((('1]')<('+匾')))))OR('736223879' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-642712920'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-32062255'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((0.8548250121561783)OR(0.12567090758279986)))AND(0.748975623383947)), ((NULL) NOT BETWEEN ('I亏') AND (NULL)), ((0X34626895)||(0.8801975558993547))))<((((NULL) NOT BETWEEN ('-1786754574') AND (NULL)), ((0.8213104275170463)+(NULL)), (NULL IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=871371713 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1608353084 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-225753864 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '562450984 sz=-911467775 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((((0xfffffffff75e805c) BETWEEN ('-1044087993') AND (NULL)))) AND ((IFNULL('-334311064', x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-594762973 sz=986309586'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 1339782353 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2129226 sz=-346062584 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1841725010 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (0.39121333517248014)))AND(CASE WHEN x'' THEN NULL ELSE 0.034863670657643175 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TYPEOF(-9.79899537E8))|(((x'16ce')<=(291449389)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1705445820)>(0X6db8671)))GLOB((- (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-45810061 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1529610544 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((('a\', 5.1375996E8, NULL))<(('-774965563', 0X6f0c89ad, x''))) THEN CASE WHEN NULL THEN x'eca2' WHEN 0.2634552025803212 THEN 0xffffffffdaa47330 WHEN 0.4004054033791429 THEN NULL ELSE NULL END WHEN '233285166' THEN (- ('665124951')) WHEN HEX('T{^}') THEN CASE 0.4564293084571245  WHEN x'7546' THEN x'6a49' END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=208008682 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-684982771 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) BETWEEN (NULL) AND (x'ee62')) IN ()); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('' AS BLOB))+(CAST(0.4027551873101659 AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=155274352 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE DATETIME(GLOB(-1348286543, ''), 0.28218303867821715, ((-3.50204694E8)<=(-1753942771))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=1395806645'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN -6.88883214E8 THEN (('0.28218303867821715') IS TRUE) ELSE ((x'9e90') NOT BETWEEN ('-2024898671') AND (108589869)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('2]O')) NOT BETWEEN ((((x'') NOT BETWEEN (x'7cac') AND (x'')))) AND (('451348025'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('0.18680870827767615' IN ()))!=(CASE WHEN '' THEN -4.90683194E8 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-70915344 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=115050097'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-1917173531 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((1215016289 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-1460151538 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((~ (NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ ('1852359650')))|(0.5391908775525471)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'71f0')<(0.6173164861875312)) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=977312462 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1075906694 sz=-458966016 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS NUMERIC)) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1116888588 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE STRFTIME(CASE x''  WHEN '0.5391908775525471' THEN 0.7168742408262071 END, (('d') BETWEEN (NULL) AND (x'fc40')), NULL, (((('-1042754343')OR('-346062584')))OR(0xfffffffffc814080)), (((x'2f3c')) NOT BETWEEN ((0.4008763568988122)) AND (('2024847534')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((('0.13422202291937535'))!=((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '336622836 sz=505882599 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '562450984 235869647 sz=-1361815519 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(DISTINCT NULL, LIKE(NULL, NULL, '0')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('', '-23098784', '페2')) NOT BETWEEN ((0.8971215426451531, x'4d80', x'')) AND ((1102374583, '-1547052573', x''))))-(((x'')>>(NULL)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '208441938 -1366227640 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2057808382 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '676846217 sz=625419041 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '1215016289 sz=-157259242 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1766693534 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '-980709311 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((('U.2Pv+p,')|('3{W')))OR(CASE 0.2702478344405991  WHEN x'' THEN x'' END)))OR((x'0ab5' IN (0X2011d4be, 0.6173164861875312)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1102374583') IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=697131961 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1968529104 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2012750040 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1976231351 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'3292' AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((0.26906765697965485)OR(NULL)))OR(0.1796938551349181)) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('') IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-512864550 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNICODE(505882599); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((COALESCE('', NULL))=(CASE WHEN x'fb5d' THEN NULL WHEN '0.5283180938584343' THEN 0.16588522856478716 WHEN NULL THEN '-69239630' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('-719116269'))) NOT BETWEEN (((x'') NOT BETWEEN (NULL) AND (NULL))) AND (0.9825791712953523 COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-942073669 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1907561413'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1023343839 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((2.082057212E9)) NOT BETWEEN ((x'')) AND ((NULL))) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.9212859461898429; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (x'')))<=((('') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.787374852669082  WHEN '1855435066' THEN x'0896' WHEN 1354559130 THEN 0X359b3cf0 WHEN 0Xfffffffff65ffdf7 THEN '1906063924' END)<<(0.6521678180421374 COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-650861742 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1273558643 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((x'')AND(NULL)))OR('899366128')))AND(x'0067')))OR(NULL))))<=(((('+匾') NOTNULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-301066604'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (json_valid(-1.341015906E9))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL COLLATE BINARY))>((CASE '992063295'  WHEN '' THEN NULL ELSE x'b7b9' END))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '993571271'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2024847534 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '518286151 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '-219216700 2 sz=1580659517 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '-774965563 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '499341882 sz=-1740575388'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('{n', NULL, NULL)) BETWEEN ((((x'bcac')<<(NULL)), NULL, (0xffffffffc597eb6f IN ()))) AND ((((-1789017963)>(x'ac86')), CASE x'40a4'  WHEN NULL THEN 0.6748342557871275 ELSE NULL END, (+ ('+m'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1407645868 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1938490157 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2016673668 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1570817445') BETWEEN (NULL) AND ('-457112236'))) BETWEEN (CASE '-1773733415'  WHEN NULL THEN x'' WHEN x'' THEN '0.537201413399653' WHEN 0.6049748169786032 THEN 'C*j9imq低Ո' WHEN x'' THEN '2093190522' WHEN x'' THEN 0Xffffffffa04173ed ELSE 'UvJI	T㹒Z' END) AND (((('-1981189248'))<((x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0x585b31a6)+(''))))<((CASE WHEN 0.19834504468455072 THEN x'' END))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CAST(NULL AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-346062584 sz=373719396 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1538798750 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'' THEN '&-쾣l+' ELSE NULL END COLLATE BINARY COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=2118866780 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('4⠓eu\nd')LIKE('')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1718001085'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '621503017 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ('0.46171731790331305' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.44446194737134526 IN ())))<=(((('-350204694') NOT BETWEEN ('⪳FO⬋5') AND (NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1923012823 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=513759960 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((2.093190522E9) NOT NULL)))!=((('' IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=352450181 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=2116551196'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (~ (x'')) THEN CAST(NULL AS NUMERIC) ELSE (NOT (0Xffffffff9ca2490a)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-3894007 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1370422922') IS FALSE) COLLATE NOCASE; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 0 sz=-1273807331 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1414334354 0 sz=1111108082 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-882890871 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-787992240 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-656737940'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.790749539988366 COLLATE NOCASE) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1735208241 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'6ab3')<>((((-879063402)) BETWEEN ((')\,G1')) AND ((''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1765495338 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '1102374583'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ ('I\r U')))||((('_	')<>(0X4fdb74d1)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '4 987439176 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((~ (NULL))) BETWEEN (((0.5610926021146074)+(''))) AND (((((((((((((NULL)OR(NULL)))OR('ᐐCxLyహ^*')))OR('-235299727')))OR(0.9397616492297545)))AND('438255347')))OR('*nUs*JS4')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('D!Ǚ怖St}/v') IS FALSE)  WHEN CAST(NULL AS TEXT) THEN ((x'')<<(x'15a8')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1007827459 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-536798070'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=2107986016 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1116459801) IS TRUE)) BETWEEN (((((0.8744511982529142)OR('I\r U')))OR('-391841966'))) AND (LAST_INSERT_ROWID())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-512864550 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-301066604 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=2024847534'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=21251300'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('-263937894' COLLATE BINARY IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0x10303417; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '+匾' THEN x'' END)<=(CAST(NULL AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xffffffff964101d5)==('0.10596619843811994')))<(((0.022024248601747454)/('7䓤㸝(E(')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (- (CAST(NULL AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((NULL)AND(0.07438104374180965)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CHAR((((0.6822343727524416))<=(('-1705445820')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '-351041004 0 sz=-346062584 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0Xffffffffdc8ca323; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '4 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1994324130 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-923373064 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=-1501754256 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 sz=-1366227640 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=948376592 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1300237467 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (+ (NULL))  WHEN (NULL IN ()) THEN CAST('0i4#~D' AS TEXT) WHEN 0.6450538433831611 COLLATE BINARY THEN (+ ('')) WHEN LIKE(0.48552770469265005, x'') THEN ((NULL) NOT NULL) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array((- (x'092b')), x''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x''))<((LIKE(x'', x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=58965594 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKE(NULL COLLATE RTRIM, (('973295987') NOTNULL)); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')<(0X117f895c)))>=((~ ('-1705445820')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2074054831 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1773733415 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)IS('<OI3	㓀怖~'))) NOT BETWEEN (0.5397815826581851) AND (((x'1fc2')GLOB('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-1087669277 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1705445820 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('-1564267853' AS INTEGER) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=824209599 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (x'' IN ()) THEN (+ (NULL)) WHEN (x'13c0' IN ()) THEN CAST(x'' AS BLOB) WHEN '61582479' THEN ((((NULL)AND(5.97055182E8)))AND('B!&>j!ꙥ')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.884649216716736) NOT BETWEEN ('3E83T_G,') AND (''))))<>(((((('925183890')OR(NULL)))AND('948376592'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(((-1570817445) BETWEEN ('-1810438962') AND (0.8582769870067153)), CASE WHEN '-1190702153' THEN NULL ELSE x'' END); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1298827550'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1386938281 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (x'' IN ()) THEN ((('-1731827408')) NOT BETWEEN ((x'cdc4')) AND (('873173433'))) ELSE (((NULL)) NOT BETWEEN ((x'ce8d695f')) AND ((NULL))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '208008682 1513427297 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)) BETWEEN (('	*\n倕	}*W')) AND ((0.44127127790195286)))))=((x''))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.4762446469699708  WHEN x'' THEN '-1660673216' END)|('-1e500')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1532757749 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 208441938'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((('')||('-1161069657')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=482643972'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '513759960 -839533848 sz=416226001 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1748719010'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(CASE WHEN -1.348286543E9 THEN NULL WHEN x'' THEN NULL WHEN NULL THEN x'' END, x'9389d40c' COLLATE NOCASE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '-1143322581 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1705445820 sz=373719396'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-793904035 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'ecd3') NOT BETWEEN (0Xfffffffff46a74a8) AND (NULL)), ((0.06582149449904384)<>('V(GF')), CAST(x'cdcf' AS BLOB)))<=((CASE WHEN 0.5915440536095897 THEN x'' ELSE 0X64791de1 END, ((NULL) NOT BETWEEN (x'') AND (0X30b69b69)), '-1042754343'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7111028508756793)>(0x30795d2d)))<((((0.06582149449904384, -1649974924, x''))>(('1529610544', '1094089040', 0.5122303216287272))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1608353084 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('1994324130' IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'nA宲'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-416686748 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-512864550 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1697769466 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=736223879'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1186627936 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1756324414 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(DISTINCT CASE WHEN '' THEN NULL END); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.9572138123486639; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1557127217 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'1865' COLLATE NOCASE IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.8154169911389527  WHEN 0.5862803469156121 THEN (('-1171293725')GLOB(x'')) END; -- 2ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0X7cc38d7a)AND('YS>p' COLLATE RTRIM)))AND(NULL)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1800720847 sz=117214021 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-688883214 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=2122224932'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2140767704 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN '-2072850525' THEN -915901776 ELSE '-1282098498' END)AND(('0.43797247625998714' IN ()))))AND(((0.24140964650196373)>=(0.7695859854882938)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-656945418 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'60f2')OR(NULL)))OR('')) IN (((x'0cdba9076803')<>('6^+mkuUj')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=985021969'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_COMPILEOPTION_GET(CASE 0.16588522856478716  WHEN 0.9769390455799062 THEN x'' ELSE 1336662279 END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1640809961 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE '.1刨fWꌣ{'  WHEN 0.3589952411183258 THEN x'' END AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 6487916 sz=-1246371418 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-7224051 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN (0.328381229419211) AND (x''))) NOT BETWEEN ((NOT (0.3763356183872443))) AND (CASE 0.17118702578317346  WHEN -811110442 THEN 0.29403178723428847 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 -1273807331'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '-1705445820 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1608353084 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '449755406'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-688883214 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE BINARY) NOT BETWEEN ((0.6793589715563242 IN ())) AND ('0.48552770469265005' COLLATE NOCASE)); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 8.85195462E8 THEN '' WHEN 0.082735355476806 THEN x'ec93' WHEN x'' THEN x'' END COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '-688883214 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-1229275758 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=2041983802 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1916192269 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '2 451348025 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR(270562036)))AND(x'1143')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (0.1272870075351964)))OR(((x'f678') BETWEEN (-1.570817445E9) AND (0.9672044601726724)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-2072034816 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.8621840237130733 THEN '-1048193929' END) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1700271809 sz=-2046727072 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-151225994 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1364265195 1593813940 sz=-1685285368 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '915696627 895391291 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_remove(0.022024248601747454, NULL))*(CAST(-1097904897 AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1221246229 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (''))) BETWEEN (((('-1356631532')) BETWEEN (('')) AND ((NULL)))) AND (('' IN (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2096061400 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((')')AND(-490683194)))AND('137749768')))OR(NULL)))AND(x'dae2')))!=(CASE WHEN '179109754' THEN '&' ELSE 'R]>sJ++' END)); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((NULL)<<('\76#ࡈw*')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-794461427 2095800575 sz=-1705445820 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 sz=-3421482'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-550985342 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('-416686748')IS(0.57676682116914)) AS TEXT); -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=-1198217007 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '736223879 sz=485200114 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE -1141641521; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0X7f254404)+(NULL)))OR(((0.9118670043261511)<>('t^錈t?j.Mb')))))AND(-1601062175)); -- 0ms;
DELETE FROM sqlite_stat1; -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=2122286565'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-642712920 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1097514661 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('UvJI	T㹒Z')) NOT BETWEEN (((('621503017')GLOB(x'')))) AND (((- (NULL))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1826187340'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1996471674'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(((NULL) NOT BETWEEN (-3.46062584E8) AND (1.482371494E9)), 0.7245365036002692); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1017131938 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE DATETIME(((1902179194)>=('E''R')), (('')GLOB('-2017089139')), ((NULL) NOTNULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '-1640809961'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)<(-4.16686748E8)))IS NOT((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1204749815'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CAST(0Xffffffff8aa00d12 AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((((((('')OR('-805656609')))OR(x'a09b')))OR(x'b5e0')))AND('-774965563')) THEN (x'e476' IN ('R]UL慩DR\rk', '辪/{}')) ELSE ((NULL)>(0x567112cb)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-445574219 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((0x6551d8b0)OR(x'')))OR('뷬\')))AND(0.8226321240450727)))AND(0.3518421785269543)))AND(0.048365242461289926 COLLATE RTRIM)))AND(CASE x''  WHEN 0.36429550662386756 THEN 0.2451212521540327 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1156069274 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=878674375'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2215324 sz=1517667713 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.5170929620976357 IN ()) IN (CASE x''  WHEN NULL THEN '-1341015906' END, ((0.3779873930021479)IS NOT(x'dfc7737018f4')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((+ (x'')) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.823731298116246 COLLATE BINARY)OR(NULL COLLATE NOCASE)))OR((('O䠫') BETWEEN (1698776024) AND ('992063295')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1366227640 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=899366128'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1987724500 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -1526405950 sz=597055182 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL) BETWEEN (0.48290449708975214) AND (0.11879323303306366))  WHEN TRIM(DISTINCT '', '1116888588') THEN (+ (0.25398858938160673)) WHEN (('2057184089') NOT NULL) THEN ('' IN ()) WHEN ((((((((NULL)OR(NULL)))AND(NULL)))OR('665124951')))AND(0.9078732719159766)) THEN ('824209599' IN (729363413, x'')) ELSE (+ (NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.6822343727524416 COLLATE BINARY, 0X41ffc785, CAST(NULL AS BLOB)))<>((CAST(0.4772119642098902 AS REAL), '', (0.31076266442013467 IN (-1600558113))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1693643138 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1107281797 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1080983565 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(DISTINCT 0.48552770469265005))AND(-1147139705)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1358542488'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '-2127053470 0 sz=-259955558 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1684354896 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('') BETWEEN (x'') AND (x'')))AND(((((((((x'')AND(x'')))OR(1.116888588E9)))OR(x'')))OR('-1348286543')))))AND(448539994)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')>=('')))%((((NULL))<=((x'ae3c2b74'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(CAST(x'' AS NUMERIC), CAST(0.9603484401706567 AS NUMERIC)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0X64653750)) BETWEEN ((((((0.6425685334698772)OR(x'')))OR('1497858908')))) AND ((((-7.34161496E8) NOTNULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((('h')OR('622344831')))OR(0.8213104275170463)))AND(0.07604746725203038)))OR(x'')), 0x155f8f27 COLLATE NOCASE, json_valid(NULL)))<(((('!Y{') BETWEEN ('665124951') AND (-1.042754343E9)), RTRIM('-879063402'), '-669006085' COLLATE BINARY))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1339782353 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (('D' IN ()))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-768787874'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '885195462 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=260050948 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1981189248 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-267523169 -28384094 sz=-1042754343 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)IS(0Xfffffffffce5e4ed)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1570817445 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6469965857744024) IS TRUE))*(x'' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('')*(0.5791413038148719)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOTNULL)) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-613129669 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((0Xffffffffed06d0a7))!=(('%ic_M'))) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1018425419 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1421835932 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 1707122318 sz=562450984 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 2 sz=-2037951103'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1875011057 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((CASE x'be015ba8'  WHEN '451348025' THEN '992063295' END)OR((((0.43651664404518886)) BETWEEN ((x'')) AND ((x''))))))AND((((((((('Fwa')AND('-738468310')))AND('2118866780')))OR(NULL)))AND('C''겅c>uX')))))AND(MIN('', 931680089))))OR(((x'') ISNULL))))AND((('3[m') BETWEEN ('&z') AND ('1 *P2C&z')))))OR((((0.5397815826581851)) BETWEEN ((-594762973)) AND ((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-1370598526'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE '-1341015906'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('-144801700') ISNULL) THEN (0.046757606041589406 IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 sz=2093190522 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1611429760 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (LOWER(''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1593342449 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.37878176395173646) ISNULL) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(((-494051535)%(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=141275539'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-70915344'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(CAST(x'' AS TEXT)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '-1243925758'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1640809961 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '-1424490930 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'e532'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.39434642493410155)AND(0.8790968855940728)))AND('Zfix竄0*'))) NOT BETWEEN (((0.4599961200825222) BETWEEN (x'') AND (NULL))) AND (('' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((-1981189248 IN (NULL)))AND(((x'')%(0.12688619396886613)))))AND(CAST('>.(40-f*' AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')==(x''))))<((CAST('1107281797' AS NUMERIC)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('-52366253') NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '208441938 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-719116269 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CASE WHEN x'ec19' THEN NULL ELSE NULL END)OR((-2072034816 IN ()))))OR((('-69239630')>('1215016289')))))OR(((0.8078044458004925)==(x'')))))AND((((0x8e7c6b7)) NOT BETWEEN ((NULL)) AND ((-1.570817445E9))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.8468334599305026; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-70915344 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 1326591598 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1734179104 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=510162760 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1999803757 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_insert('[aOꥐ/', 'Q聜dnAD', x'385d') COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CASE WHEN x'' THEN NULL WHEN 5.97055182E8 THEN '704454564' WHEN 0.18907330853383275 THEN x'8116' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.8056837834195341)) NOT BETWEEN (((+ (x'')))) AND (((~ (-9.14092999E8))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-346062584 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-265773230 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-1366227640 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'', '?F7j', NULL)) BETWEEN (('-1451394202', 1911261487, NULL)) AND ((x'', -459076775, 0.09278915195138815)))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=451348025'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=986309586 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1687274614 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=17469402'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1341015906'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')AND(x'')))OR(0.5920166135579592))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CASE x'921b'  WHEN NULL THEN x'' WHEN '-2072034816' THEN NULL WHEN '' THEN x'b053' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS BLOB) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=596182799'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=836964729'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-351041004 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (''))) BETWEEN (((((0.7772352423043424)AND(0xffffffffe011dc42)))AND(x''))) AND (((810373023) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '408122391 0 sz=1779535817 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LAST_INSERT_ROWID()) BETWEEN ((+ (NULL))) AND (((x'') BETWEEN (x'') AND ('()#n')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1365754340 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1481997607') NOT BETWEEN ((('-146896161')>>('698833261'))) AND (0.4762395171450968)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1731827408 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-368785366 -89267130'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('([y<53e44') NOTNULL) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1150289959 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('lb&(-Xೖ') BETWEEN (1314977911) AND (NULL)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 sz=1038162554 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 -238670244 sz=728632074 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL  WHEN CAST(x'' AS BLOB) THEN CASE WHEN NULL THEN '/9' WHEN 0Xffffffffa5198450 THEN NULL WHEN '' THEN '䫩e' ELSE x'f6984de7bee2' END ELSE '-2127053470' COLLATE BINARY END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LTRIM((((x'9e78'))!=(('bm]u#R\r.')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((6.855223057574689E-4 IN ()), (NULL IN ()), ('eR+%oD' IN (0.048365242461289926))))>=((x'', (('') NOT BETWEEN (1.336662279E9) AND (NULL)), (('')-(0.13319088593083894))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_quote(0.8391398002893967)) BETWEEN ((1.933935523E9 IN ())) AND ((('-1243925758')%('*glTV\rFiq')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('C3o]✱a'))<(('1'))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1730446892 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')<<('899366128')))IS(((0x250b6229) NOT BETWEEN ('') AND ('3[m')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1889572245'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.26401738363268923) BETWEEN (NULL) AND (0Xfffffffff9835e30))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-812763390'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '-774965563 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('1100732454')OR(NULL)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 sz=481200060 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '548564070'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-719116269'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1393211015 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_COMPILEOPTION_GET((((('P%|xc')OR(x'46cc')))OR(NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE '-1640809961'  WHEN x'' THEN 0X7df77fce ELSE '' END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1564267853 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (TYPEOF(65426291))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((- ('')))OR((((x'', x'b195', 'xx')) BETWEEN ((NULL, x'15bb', 1107281797)) AND ((x'd0858c02', NULL, '1177203324'))))))AND((x'' IN ('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-734161496 sz=-351239871 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-2072034816 sz=-1384050018 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2006630034 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1943189161 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-1191134 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=-196366617 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1705413232 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('948376592')-(''))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((NULL)AND(CASE WHEN '-1366227640' THEN '1774961548' ELSE x'' END)))OR(((((x'')AND('-979899537')))AND('-1207855184')))))AND((((x''))!=((NULL))))))OR(UPPER(DISTINCT '2118866780'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-50340050'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=365117515 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL((0.57676682116914 IN ()), (+ (0X4c50f2bb))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-490683194')-(-4.16686748E8)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '260501636 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-719116269 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((NULL) NOT BETWEEN (0X2c99396d) AND ('-193832982')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=349126622'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 sz=187476082 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (CAST(-45736346 AS BLOB) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 -4631072'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=992063295 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('짃i2)EwZV')>=(x'')))IS('' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'c6610474')<=(0.6149560924966252)))AND(((((((((NULL)OR(NULL)))AND(0Xffffffffd6f079f2)))OR(0Xffffffffbbda482b)))AND(x'c7d7')))))OR((('')LIKE('900992542')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('')>=(NULL)))AND(CAST(x'' AS TEXT))))AND((('᬴]')AND(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 0 sz=-512864550 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.25337240292937036 AS REAL)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-181498269 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((SQLITE_SOURCE_ID())|((((x''))!=((NULL))))); -- 0ms;
END TRANSACTION; -- 0ms;
DELETE FROM rt1; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE rt2 USING rtree(c0, c1, c2); -- 1ms;
PRAGMA temp.checkpoint_fullfsync = true; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c3, c2, c0) VALUES (796093718, 0.9744410277909263, 0.43797247625998714, NULL); -- 0ms;
INSERT OR IGNORE INTO rt2(c1, c2, c0) VALUES (0.4142042763553766, '1218240396', NULL); -- 1ms;
PRAGMA cache_spill; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt2(c2, c0) VALUES (0.9991759154385109, 0x47cf05f7); -- 0ms;
INSERT OR IGNORE INTO rt2(c2, c1, c0) VALUES ('B>', NULL, 0.429242206746428), ('P纀!wy2', 0Xffffffffff91c50d, 'kP'), (NULL, NULL, NULL); -- 1ms;
REINDEX BINARY; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
UPDATE rt2 SET c2='eF%%', c0=-1519794983, c2=NULL WHERE CASE WHEN rt2.c1 THEN rt2.c2 COLLATE NOCASE ELSE rt2.c0 END; -- 0ms;
UPDATE OR IGNORE rt2 SET (c1)=(0.7091354651081426); -- 0ms;
INSERT OR FAIL INTO rt1(c0, c2, c4, c3) VALUES ('-1366227640', 0.6011710670494246, 1095372686, '-1745047631'); -- 1ms;
REINDEX  rt1; -- 1ms;
INSERT OR IGNORE INTO rt1(c2, c1, c4, c3, c0) VALUES (x'97567812', 1.007827459E9, 0.1128319131179808, NULL, NULL); -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
PRAGMA secure_delete; -- 0ms;
INSERT OR FAIL INTO rt1(c2, c1, c0, c3, c4) VALUES (x'5bdc', '-346062584', NULL, 0.1788356855081099, x'9a72'); -- 0ms;
PRAGMA main.threads; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt2', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt2', '0 -1138400721 sz=1775733308 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1143322581'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-32432930 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt2', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt2', '4 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' sz=1868409414 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE NULL  WHEN 0.39211021367887555 THEN '1705413232' ELSE x'3258' END IN ((NULL IN ()), ((0.5617858407418898)>>(x'693b')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (NULL)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-2127053470'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=456033071'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt1', '-594762973 sz=389200216 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.6763095332865194  WHEN x'7cfc' THEN '451348025' END)<=((((NULL)) NOT BETWEEN (('U9')) AND ((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 -632432320 sz=-1608353084'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('0.10647492096934918' COLLATE NOCASE AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1107281797' COLLATE BINARY; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('')>=(x'6b16')))OR(CASE x'2427'  WHEN 2215324.0 THEN x'' END)))OR((x'' IN ()))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(NULL AS INTEGER)  WHEN x'' COLLATE RTRIM THEN CASE WHEN x'' THEN 0.7252811687898288 ELSE x'' END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt2', '-331377405 2 sz=1303746367 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' COLLATE NOCASE))=((CAST(-70915344 AS BLOB)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', '0 sz=1165938198 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt1', '828636965 236128202 sz=-688883214 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt0', ' sz=1395494163 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt2', ' sz=-719116269 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.99300098177282 THEN 0.24792341984007227 ELSE x'' END)OR(((((((((NULL)AND('')))AND(NULL)))OR(NULL)))OR('9竉N~Y')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN LENGTH(x'') THEN ((((x'')OR(0.25175269213122964)))AND(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '115050097 sz=-372993360 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-161378648 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS NUMERIC))||(CASE WHEN '7Q' THEN 0.48510707464662484 ELSE 'mm⺨uv䅚' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.729927978393192 AS BLOB))AND(CASE WHEN 'BBﾄAzl' THEN '-406032601' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.013345000665908713)<=(0.4133041474668159)))AND(x'')))AND(json_object(NULL, NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt2', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '621503017 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt2', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', '2 sz=781079299 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('899533758' AS REAL))-(((0.2708466677006842)+('-57584491')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', '-189018956 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt2', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'db52')AND(x'')))AND(1273294298)))AND(0.40245173811085555)))OR(x'4e9d'))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NOT (x'8502cf10')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt2', ' sz=1336662279 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt2', '-689316928 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-1143322581 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', '-1042754343 2 sz=-1242626735 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-7.0915344E7)) BETWEEN ((x'' COLLATE BINARY)) AND ((SQLITE_COMPILEOPTION_USED('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.3590947726752023 COLLATE NOCASE IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt0', ' sz=1864997047 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.29124768614867824) NOT BETWEEN ('-1552104215') AND (0.9084665605590162)))OR(CASE WHEN 0x585b31a6 THEN NULL END)))OR((('') BETWEEN ('') AND (NULL)))))AND(((('0.16588522856478716', 0.3118265646090752, NULL))==((-29727942, '', '736223879'))))))OR(((0.5220339642741083) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt2', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', '597055182 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt2', '2 sz=-594762973 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((x'27c1b938', 5.05882599E8, NULL, 0.5639393614902178, 1.517667713E9))<((x'', -7.68787874E8, x'1edf', 0x5e72bf46, 0.01418397953851147))))AND(((0.6634266052150307)OR(x'')))))OR(('1142481342' IN ()))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array_length(((((((((1.15050097E8)OR('888204057')))OR(0Xffffffff81122dde)))AND(0xffffffffef3b3f94)))OR(x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '537321688 sz=-194753798 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1207155695 sz=1557453262 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE '~O'  WHEN NULL THEN 0.09308730834759094 END)AND((NOT (x'a080')))))OR(((('204040408'))>((0.4776536134777716))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' sz=-351041004 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-390078055'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1052135111 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt2', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1253337332 IN ()))<<(((x'')&(0.8621840237130733)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((ABS(NULL))OR((0.5178041383455181 IN ('312373649')))))AND(CAST(0.6614042122245716 AS INTEGER))))AND((((-1366227640, x'9c85', NULL)) BETWEEN ((0.3063713657035706, '-319205979', x'')) AND ((0x16ac96b5, NULL, 0.6194488738258849))))))AND((((x'', '', NULL, '208008682', NULL)) NOT BETWEEN (('1152242003', 0.21428008431755974, -147293149, NULL, 0x4418e1be)) AND ((x'', NULL, 0.17314759295483495, x'', '1684354896'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-601148866 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=799770931 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1296205826 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')*(NULL))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1336662279'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ('1005449839')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xffffffffaf1cdad6)IS(0.6040467547731141)))IS NOT((- ('L~、zEyࡴ履')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'b4db')) NOT BETWEEN (((((('')AND(0X1ae70639)))AND('-1795922936')))) AND (('*3}#' COLLATE RTRIM))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.411637890387905)>=(0.15755571585233596)))IS NOT(((x'383d') BETWEEN (-465211422) AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.4237249691250754) IS TRUE) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt1', '899366128 sz=-1895778194 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt2', '346155750 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1243925758 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt2', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.12567090758279986 IN ('-1639536957')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'3a11', 6.65124951E8, '0.9572138123486639'))<((0.5367444895251736, x'', '-650861742'))) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt2', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)OR(NULL)))AND('_n[]W')))+(((0.6521678180421374)LIKE(x'f456')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt2', ' sz=1663779985 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('')AND(x'')))OR('-719116269')))OR(0.11079528250031656)))OR(x'')))<((((('399085055')OR(0.9569431946026611)))AND(0.25381737945530725)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2028009191 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL))<(('0.6458468460655715'))) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1143322581 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt2', ' sz=-1079754532'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((('1336662279')-('324651875')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE NOCASE)IS(RTRIM(1370305728))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS REAL))AND(0.062464353522998395 COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-2013006734 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1398722538'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('1204749815' IN ()) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt2', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(x'b385' AS TEXT))AND(COALESCE(0.7767511556011458, 0X21cd9c))))AND(((x'') NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('2146310043') NOT BETWEEN ('') AND (0.4564293084571245)))LIKE((0.34161872955842665 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', '-458009228 -774965563 sz=1529610544 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt2', '0 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt2', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.39376386460414803) NOT NULL) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=899366128 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-520977553 sz=1074302967 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.57676682116914') BETWEEN (-1097514661) AND (NULL))) BETWEEN (((0.44414173477041086)>(0.8749081854363128))) AND (CAST(NULL AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('' AS INTEGER) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.2763586311568359) NOT BETWEEN (x'e739') AND ('g⋀')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-594762973 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((((0.9462934889706105)) NOT BETWEEN (('-1097514661')) AND ((0x29fd1fa4))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' sz=1007827459 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS BLOB))%((((((((('')OR(0.0344186161650023)))AND('p''~C')))OR(x'5b92')))AND(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((GLOB('-gS8uKDhe', NULL)) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL))>((0.7837513875031353))) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' sz=986309586 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('') NOT BETWEEN (x'') AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (LOWER('*y') IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt2', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN 0.17160696946924037 ELSE NULL END)LIKE((('Y0')+(0.2426920031998625)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=3442535 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 sz=-594762973 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '817273705 -1464901433 0 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt2', ' sz=-1773733415'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '-427463944'  WHEN '	-' THEN 0.5547220470809071 ELSE '' END) NOT BETWEEN ('0.1272870075351964' COLLATE BINARY) AND (((((NULL)AND(NULL)))AND('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.006283089402156272)) BETWEEN ((((-1155254899)>=(x'')))) AND ((((NULL) IS TRUE)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', '2 sz=-867310250 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (NULL))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((((('' COLLATE BINARY)OR(((-709188093)+(x'836b')))))OR((('1922242075') NOT BETWEEN ('F7') AND (0x357c8491)))))AND(((0.28218303867821715) BETWEEN (0.40375539695691565) AND ('-1640809961')))))AND(-9.79899537E8 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CASE WHEN NULL THEN 0.4004498229014797 ELSE '1328352286' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=748960101 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' sz=-1091866191 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(DISTINCT (NULL IN ()), 0.6997102192139969); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0x2c57eda5)OR(x'')))OR((((NULL, '2096110704', '-1316900764')) NOT BETWEEN (('2118866780', 0.07438104374180965, -7224051.0)) AND ((NULL, -1.570817445E9, -2015018244))))))AND(NULL COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt0', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((CASE 0.37260598675111944  WHEN 1660989563 THEN x'f546' ELSE '704454564' END))<>((CAST(x'' AS REAL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)==(NULL))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST(x'' AS REAL))OR(TRIM('''K*', NULL))))AND((('-2076221011') ISNULL))))AND(((0.1364795631715473) NOT BETWEEN ('Bf,&4Z1f_') AND (0.25895663862968155)))))OR(CASE -221342723  WHEN '' THEN x'5517' WHEN x'' THEN -1.731827408E9 WHEN x'' THEN -7224051 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.8891468579926302) NOT BETWEEN (NULL) AND ('N9pRQ~J喍')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(((NULL)&(x'1e7efe30'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT ((x'469b9a35') NOT BETWEEN ('1906063924') AND (0.6049748169786032))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((((x'')AND(0.6647783783283046)))AND(''))))>=((((0.36429550662386756)<=(x'e850'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=208008682 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '686248643 0 sz=-177753021 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' sz=-734161496'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt1', ' sz=1204749815 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'') ISNULL))OR(((0.6792407921225738)>=(NULL)))))OR('7䓤㸝JE(')))AND((((('X*KFI6\rE')OR(x'')))OR('1215016289')))))AND(CASE WHEN '' THEN NULL ELSE 0.4765146295296341 END)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.903083890084003) NOTNULL))<(((0X36db0b71) NOT BETWEEN ('') AND ('{}')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', '1566102490 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) NOT BETWEEN (0.34277624895128844) AND (x'')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt1', ' sz=-832174131 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt0', '2 272875434'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') BETWEEN (NULL) AND (1482371494)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('1204749815' AS NUMERIC) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'c117') BETWEEN (CAST(NULL AS TEXT)) AND (((((NULL)OR(NULL)))AND(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(LOWER(NULL) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' sz=1778932397 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE NULL  WHEN 0.5165481629383804 THEN NULL ELSE 'qEOA/yI,' END)AND((((0X7ce540b9))>((0.3493645717336925))))))AND((x'dbe2' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x''))>=((NULL))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt1', ' sz=1336662279'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-362856745 -2039878557 sz=417505884 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1864997047 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0xffffffff89e97380)) NOT BETWEEN ((NULL)) AND ((402295842))))LIKE(TRIM(0.07460018436661342))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1039114196 sz=1295801820'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt2', '521256434 sz=-1202877809 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'df41') IS TRUE)  WHEN 0.4008763568988122 THEN ((1933935523) NOT BETWEEN (0.6643194482604694) AND (x'8e26')) ELSE (((((((('{VNH')AND(-7.34161496E8)))OR('0.29403178723428847')))OR('572405633')))AND('׷㝐|72}')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1741909430 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1922242075 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' sz=1142481342'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('-168640484' AS INTEGER) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt2', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('2011426161') ISNULL) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1881007519 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1356631532 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 0 sz=-1990977303 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ('570804939' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1774421737 sz=-914092999 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=379045703 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt2', '2 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '1539522900 -650861742 sz=274189279 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'75dc') ISNULL)) BETWEEN (UNICODE(0X63c99419)) AND (CASE '154290916'  WHEN '' THEN NULL ELSE '1130328529' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', '-1564267853 sz=2093190522 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN 0.11239389577722148 THEN '1864997047' ELSE x'' END IN ()); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN NULL THEN 0x43701ee1 END IN ((('211064673') BETWEEN ('gu') AND ('0.5920166135579592')), NULL COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt2', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt2', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(JULIANDAY(0.6075152119509662, x'267d', 1.7976931348623157E308) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt2', ' sz=123300300 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE TRIM(0.7362385216607388)  WHEN 0.9029249637997993 THEN ((x'') BETWEEN (0.9430935350204556) AND ('')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(x'', (NOT (''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '4 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt1', ' sz=-1341015906 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array_length(((((NULL)AND(NULL)))AND(x'')), (((x'')) NOT BETWEEN (('uSO睇ZThF')) AND ((0.9760495330438274)))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE '817273705'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1684354896 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=55394105'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt2', ' sz=1665167810 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('1718739505')OR(LENGTH(x''))))OR((0.6278435068063846 IN ()))))OR(((0xffffffffd6c5354d) NOT BETWEEN ('-882390545') AND (0X7e6dc193)))))AND(((('''', -2031329258, 'aV,Lp')) NOT BETWEEN ((NULL, '', '')) AND (('-688883214', x'', x''))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 1994324130 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1994324130 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt2', '0 sz=-1348286543 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1705445820'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x''  WHEN (0Xffffffffdc4cf80d IN ()) THEN ((NULL)<=(0.8496234741159093)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ (0.8362574252236861)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1269002425 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' sz=-1203255560'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1536296655 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt1', ' sz=1618909577'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-815397882) NOT BETWEEN ((NULL IN ())) AND (UNLIKELY(x'9c393078'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' sz=-356934499'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt1', ' sz=-1366227640 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1529610544')LIKE(NULL)))==(-1.316297779E9 COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 sz=2118866780 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-879063402 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt2', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt2', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt2', '0 sz=282375251 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt1', '-1542020095 683754304 sz=-1570817445'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt2', '1370644923 sz=759516310'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1480262123 -839533848 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt2', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt2', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt1', '-1920064733 1378851207'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('B!&>j!ꙥ')OR(x''))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((-1731827408) BETWEEN (CASE '!W+z5'  WHEN x'b0f79d4b' THEN NULL WHEN x'' THEN NULL WHEN '' THEN '-577807630' ELSE x'9a7b27f3' END) AND (NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt1', ' sz=1381858830 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', '0 sz=-1819481842 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt2', '1464566811 501081454'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-879063402'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' sz=1560992095 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-173480714 sz=-734161496 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.6239538310065597 THEN NULL ELSE x'' END)GLOB(((x'9661')GLOB(899366128)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1755618467')) NOT BETWEEN ((((x'0445') NOT BETWEEN (0Xffffffffc9840c39) AND (0.603945605459201)))) AND ((((0.7373744767400873) NOT BETWEEN (x'') AND ('-320601330'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' COLLATE BINARY AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 -1981189248 sz=884886983'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' sz=-856285780'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt2', '2 1280373435 sz=-102288226 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-63181438'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('tquu\n7%' COLLATE BINARY AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=757176912 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)>(0X7d6372c0)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', '1485409970 sz=885195462 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'')OR('0.7111028508756793')))OR(NULL)))OR('hFg瓑,')))OR(x'')))|(TOTAL_CHANGES())); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.790749539988366) NOTNULL)) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS BLOB)) NOT BETWEEN ((((0.7910955540029317))<((x'f97f')))) AND (((1933935523) NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TOTAL_CHANGES(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN 0.8120265721526225 THEN 0.9648510640002353 WHEN '535726861' THEN NULL WHEN x'' THEN NULL ELSE 'EH|c투㝐L錈<' END)&((((NULL, NULL, 158668251))>((-1273807331, 0x3ac9e3d2, NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('505882599') NOTNULL) THEN (((0x7c390bb6)) NOT BETWEEN ((x'')) AND ((x'827d'))) WHEN x'' THEN 'O&' WHEN ((x'')/('X7')) THEN (('-1213145929')>('0.9672044601726724')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((NULL IN ()))OR(((((((((((((0.9221948297766338)AND('')))AND(NULL)))OR('N(U흙Yqᳱj')))OR(x'')))AND('')))AND(-0.0)))))OR(((-1731827408)&(-3.46062584E8)))))AND(CAST(NULL AS TEXT))))OR(((-3.01066604E8)>>(1.529610544E9)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1383697287'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt0', ' sz=1107281797 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((DATETIME(0.035541808420143095, NULL, NULL, '[aOꥐ/', NULL, NULL, '%.'))>>(((((x'')AND('')))AND(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '-1214884597 sz=1408320122 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT ((x'9c0cf3b9')%(0.33878522756713436)), ((x'') IS FALSE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') NOTNULL) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', '605836792 sz=-1366075381'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', '1161933550 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1348286543 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' sz=373719396'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=971213869 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1346746267 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('1756308745') NOT BETWEEN (0.4022074911130782) AND (NULL)))OR(x'')))OR(CAST('OKy(,{)' AS NUMERIC))))AND(((0Xffffffff928a494c) NOT NULL))))AND((+ (NULL)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt1', '-1886965755 948376592 sz=1 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1261729404 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('0.787374852669082' COLLATE RTRIM)OR((((0.11385815737851368, '', NULL)) NOT BETWEEN ((-7.34161496E8, NULL, NULL)) AND ((NULL, 0.11816946050275412, ''))))))OR(((('<z', '', NULL))>=((x'4748', 77065333, '513759960'))))))OR(CAST(NULL AS TEXT))))OR(((0.6023498624534502)<(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt2', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt2', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-218427089 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', '202252373 sz=543981165'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1388745101 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1204749815 sz=1280373435 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SUBSTR(CAST(0.8728855093681785 AS REAL), CASE WHEN 0xffffffffe729dd64 THEN '' WHEN '-642712920' THEN 0X45875f24 WHEN NULL THEN 5.97055182E8 ELSE x'2778' END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((((('%G12YdKKdaysS'))>=((2.12513E7))))) AND ((((((0.3757511108175856)OR(x'')))AND(-257805766))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-790760512 sz=-194771609'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1135156704 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt2', '0 100636733'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' sz=364464093 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-166009581 sz=817273705'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.5238009604490331; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' sz=562450984 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKE(((-3.46062584E8) NOT BETWEEN (NULL) AND (0.39508486456359804)), (NULL IN (NULL, '?')), 'o'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt2', ' sz=1151781155'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS INTEGER)) NOT BETWEEN ((0xffffffff96a805b5 IN (NULL))) AND ((((x''))==((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=2054347007 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' sz=-1557865284'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-596305314 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (-3.50204694E8 IN ()) THEN ((('0.7059278275355602')) BETWEEN ((NULL)) AND ((-5.94762973E8))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 sz=-229560067'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.33603340008189797)/('331250972')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' sz=1864997047 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' sz=1215016289'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt1', '1684354896 sz=1339782353'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST(x'' AS REAL)))>=((((((0X50800651)AND(0x3fe20b7)))AND(-650861742))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1407514838'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt2', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt2', ' sz=2106523244'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1627779739 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('%Q' AS NUMERIC))<=(CASE x''  WHEN x'' THEN x'32d9' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 sz=986309586 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', '1102427940 sz=-1 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 sz=1698425093 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' sz=1058016525'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-316461611 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((0.19225761297302602) BETWEEN ('0.6297112857090142') AND (-351041004)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt2', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-182842790'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (NULL COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', '-879334083 sz=-852167621 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE RTRIM) NOT BETWEEN (CAST(0.582232449862038 AS INTEGER)) AND ((NOT (-1318128528)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1280373435'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', '-1184313523 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' sz=-1348286543 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt1', ' sz=-1693682196 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1316297779 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('0.07438104374180965' COLLATE RTRIM IN ('1988353065' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1.246371418E9)) NOT BETWEEN ((NULL COLLATE NOCASE)) AND ((CASE ''  WHEN '' THEN NULL WHEN 679459876 THEN NULL WHEN x'' THEN 0x4f43b861 WHEN x'' THEN x'' WHEN 0.2026366124027601 THEN 9.86309586E8 ELSE x'ee956266' END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-2072850525 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1204749815 0 sz=-594762973 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt2', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt2', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 sz=255427458 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('489486452')) BETWEEN (((+ (0.8095228290306483)))) AND ((CASE NULL  WHEN 1.922242075E9 THEN 'Mp_\Pi.?' ELSE 0.9672044601726724 END))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 -1292212558'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1204840783 sz=-774965563 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('') IS TRUE) THEN ((((((((-1273807331)OR(NULL)))AND(NULL)))AND('')))OR(x'')) END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' sz=-1974396921 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('2016173376')IS NOT(CAST(x'' AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1770145010 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'') NOT NULL)))<(((- (0.05906890106265883))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', '714208877 sz=1348254451'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('H') NOT BETWEEN (637843406) AND (x'')) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1393325922 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN ('') AND ('{}')))=((('')==(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1392324856 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-2072850525') NOT NULL))>=(((0.6922128428533821)>('-149550104')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1564267853 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 1239839319 COLLATE RTRIM  WHEN CAST(NULL AS NUMERIC) THEN ((-1684331774)LIKE('-852301319')) WHEN ((((((((1280373435)AND('665124951')))AND(x'')))OR(-7224051.0)))OR(0.22287497297357917)) THEN (x'99e7' IN ()) WHEN TRIM(NULL, NULL) THEN NULL END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt2', ' sz=1864997047 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('JW') BETWEEN (NULL) AND (NULL)) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1606828232'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', '986309586 218411794 sz=-1246371418 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt2', ' sz=561490625 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.57676682116914) NOT BETWEEN (x'937e') AND (NULL)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN NULL THEN 0.3148116180447561 END AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', '-645310456 948376592 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt2', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1841725010 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1929843869 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt2', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULLIF(NULL, '1339782353') THEN (('0.9397616492297545') NOT NULL) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((NULL) NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.4737131812796467) BETWEEN (0x76def8a2) AND ('-994963482')) THEN 0Xffffffffe16e4eda END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt2', ' sz=-1981189248 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1624986119 IN ()), ((0.18680870827767615)>=('948376592')), 'Q聜dnAD'))>((CASE WHEN '' THEN NULL WHEN x'' THEN 0X2be1e287 WHEN NULL THEN 0xffffffff86c24d7a WHEN '208441938' THEN x'415d' WHEN x'' THEN NULL END, ((((((((0.4004054033791429)AND(x'')))OR(NULL)))AND(0.22290396644202626)))OR(0.5876422521629815)), ((('')) BETWEEN ((0.8690364148788061)) AND ((0.45776495660287875)))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '2 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt2', '0 0 sz=-699516378 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULLIF(DISTINCT 0.32204520280274807, x'') AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt2', ' sz=208441938 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt1', '2 -1042754343 sz=-1634882118'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt0', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN '8T' THEN 0.2026366124027601 END THEN CASE x''  WHEN '' THEN '!M' WHEN x'7231' THEN x'' WHEN x'' THEN '' ELSE NULL END ELSE 0.5552425343973039 END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((ABS(DISTINCT x''))<<(((x'') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELY(0.14662592007423958)) NOT BETWEEN ((- (x'58b7'))) AND (CASE '	惔/3'  WHEN 0.9947937006672695 THEN x'' ELSE 3.73719396E8 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' sz=-990214539'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2097400696 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' sz=1103930344 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '''D^椰'; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', '4 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((- (x'd22b'))))=(((- (-1568131686))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1700782482') IS FALSE) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt2', '2057196020 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1107281797 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1989240984 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt1', ' sz=-1615722133'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.5906942473142902 AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 sz=-1991129962'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((('NJQp	U')%(-1366227640)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1339782353 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-734161496 sz=562450984 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' sz=660196223'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(((((0.8154169911389527)OR(x'')))AND(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 1006226947 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt2', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-351041004 sz=-734161496 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=928345806 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-1564267853)IS(CASE 0x224ec2a5  WHEN -1564267853 THEN NULL ELSE '/Ś' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt1', '4 sz=-1773733415'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt2', '208008682 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_valid((('''<') NOT BETWEEN (0.3433847038798632) AND (1.864997047E9))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', '1723704660 sz=-642712920 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN (((((NULL))<=(('^O'))))) AND ((((((x'')OR(0.2655488240060062)))AND('1007827459'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=514530339 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-332853824')AND(x'')))AND(621503017))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1307280427 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=294344701'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', '-190535617 sz=373719396 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=919402843 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' sz=-774965563 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 sz=831860906 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=505882599 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', '4 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('1204749815')IS('-1326173022')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'ffc2' COLLATE BINARY AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NULL IN ()) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt2', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1661332387 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'960f'))<((x'')))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)AND(x'')))OR(x'1aaa')))%(COALESCE(NULL, 0X1759f5a))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=884871550 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CASE WHEN NULL THEN 0.57676682116914 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt2', ' sz=1087082488'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=115050097 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1007827459 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((LIKELIHOOD(DISTINCT x'', 0.16640372524479985))AND(CASE '738066675'  WHEN x'' THEN 0.7740779197028607 ELSE '-1525987066' END)))AND(((x'') NOT BETWEEN (x'1b50') AND (0.367283355293215)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-346062584 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1387674515 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt2', ' sz=-532766505 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt2', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-252164707'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xffffffffc9840c39 COLLATE NOCASE)OR(CASE WHEN 'r_\rx?\K' THEN NULL WHEN 1185606750 THEN 'sW/' WHEN 5.05882599E8 THEN 0.8956282482315229 WHEN 'b>' THEN x'' WHEN 0.3130947082971077 THEN x'82a2' END)))AND(JULIANDAY(0Xffffffff8cbc282d, x'', x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1345868553 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt2', ' sz=377325826 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', '-659120254 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_type((~ (''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.11996263924298323 IN ()))GLOB(0.8262878094947717 COLLATE RTRIM)); -- 6ms;
DELETE FROM sqlite_stat1 WHERE ((((0.748096658253468) BETWEEN ('-2072850525') AND (0.7555600245863863)))/((((((((((((('>P')OR('B-T')))OR(x'1f16')))AND(NULL)))AND('597055182')))AND(NULL)))OR('-734161496')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', '-2102499488 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', '-1878013964 687143847 sz=1841725010'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt1', ' sz=-919719036 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' sz=395439411 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')AND(-4.90683194E8)))*('1013931553')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '-820732115 1435756342 sz=-1218452731'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8481622566032284)&(x'')))AND(CAST('-725273489' AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1401619613 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE ''  WHEN x'' THEN '728589883' WHEN '1e500' THEN NULL WHEN 0.2509836141903653 THEN 0.13386327040776813 END AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-642712920 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', '2 sz=248162076'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE highlight(CAST('R a#!|P|' AS TEXT), ((-750725045)%('1906063924')), (('3E83T_G,')=(x'c01b')), NULL COLLATE BINARY); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-1058896042 -1037171226 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (-1.273807331E9 COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)&(x'')))LIKE(((((((((((((0.35793518125234236)AND(-5.1286455E8)))AND(x'')))AND(0.4623142427536018)))OR(0.7129223349095573)))AND('-688883214')))OR('dr.')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')*(''))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('')+(1160600150)) THEN CASE x''  WHEN x'' THEN x'2f7a' WHEN x'7e07' THEN 0.0 WHEN NULL THEN x'c30d' ELSE '*v' END WHEN NULL THEN ((NULL) NOTNULL) WHEN json_array_length(0.8606748469294438) THEN (~ (x'')) WHEN (~ (0.58851517095457)) THEN ABS(DISTINCT x'') WHEN ((NULL) IS FALSE) THEN 0xffffffffda999b77 COLLATE NOCASE END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt2', '-176217878 sz=-739961448'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-2107493446 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt2', '355797350 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', '2 sz=1142481342 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' sz=2082057212 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('-1641588720'))) NOT BETWEEN (0.6173164861875312) AND (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt2', '0 0 sz=-1565244474 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (x'')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' sz=1215016289 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1705445820'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 sz=-274069473 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'cbc6') NOT BETWEEN (NULL) AND (NULL)))<>(CAST(1.215016289E9 AS NUMERIC))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1579316744 sz=-490683194 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (LOWER(DISTINCT '1807048942'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((-1.70544582E9)*('-1707491985')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt2', '344840465 1139231716 sz=803034512 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-849007542 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt2', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1731827408 sz=1102374583'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE BINARY) BETWEEN (((0.034863670657643175)*(x''))) AND ((- ('1864997047')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-863672310 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE WHEN x'7a85' THEN 'y嶇PY]' ELSE x'78d2' END  WHEN 0.19045304592301826 THEN (('-650861742')%('')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1922242075 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt2', ' sz=-1184375497 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-4.90683194E8)>=(NULL))) NOT BETWEEN ((- (0.2719649627885664))) AND (CASE WHEN '-1e500' THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((('0.3763356183872443')OR(0.19261114473471086)))AND(NULL)) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0Xfffffffff2fe91f3) NOT NULL))AND(((x'') IS FALSE))))OR(((x'0e65') IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('' IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('S')>=('u9')))OR((((NULL))>=(('2125414050'))))))AND(NULL COLLATE RTRIM)))OR((((('2053245465')OR(NULL)))OR(-130310106)))))OR(((0.9990663318246507)<<(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((IFNULL('-2062679142', '')) BETWEEN (((('2063249540', -1112993278, x'', x'', '')) NOT BETWEEN ((NULL, 1.111108082E9, 0.24731966662336768, 0xfffffffffea06762, 0.9397616492297545)) AND (('s*', x'', '-1042754343', NULL, x'313e')))) AND (((x'5045')IS NOT(-1089818347)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt2', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', '4 sz=-1046265181'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-1804551702 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-771385519'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.4860002339838585 COLLATE BINARY)<(CAST(0.4858585615966642 AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt2', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=621503017'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' sz=1823629786 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=913806500'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt2', ' sz=2141651503'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((NULL)OR(1227193640)))OR(1.15050097E8)))OR('-1608353084')))AND(x'')))OR(CAST(0.3613946768827663 AS INTEGER))))AND(0xffffffff98e1ce05 COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=244572188 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '885195462 sz=1400307127 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'') BETWEEN ('r\') AND (0.9143476197035094)) IN ((((('cj~[zJd')AND(x'')))OR(-2121990362)), (((986309586))>=((0.86511181148393))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt1', '-144801700 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt0', ' sz=593720951'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0X9458bb9 COLLATE BINARY)AND((x'' IN ()))))AND((('') IS TRUE))))OR((('b') NOT BETWEEN (NULL) AND (0.787374852669082)))))AND((((NULL)) BETWEEN ((NULL)) AND ((1575230776))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt2', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1370305728 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1768672647 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-214785845 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1.773733415E9; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -376598779 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.10607459858625712  WHEN NULL THEN '\p*hO㩛x' ELSE '-1243925758' END) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-734161496 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1572032012 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt0', ' sz=-1521158280 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt2', ' sz=46143774 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt2', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-1608353084 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('948376592')) NOT BETWEEN ((((((0X266ab163)AND(-7.68787874E8)))AND(0xffffffffa1a1b8d4)))) AND ((CASE NULL  WHEN NULL THEN x'' ELSE 0.26454674721843485 END))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('|_m㓀' AS INTEGER))*((('qf') NOT BETWEEN ('8Quk') AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')OR(0.4009987007516491)))AND(x'')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN 0.6748342557871275 END) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt2', ' sz=-1694640064 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('2093190522' IN ('')))LIKE((NOT ('984627946')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', '-1282605065 0 sz=155679404 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1278411811 sz=-979899537 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (0.4290721272345761) AND (0.11813400791095363)))OR(CASE -1824560671  WHEN NULL THEN '1215016289' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -512864550 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.01752623349993998 IN ()))/((('1256924994')>=(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt2', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt0', ' sz=-1971322610'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=115050097'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((x'')<(0X446457c7)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt2', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt2', '-2108559530 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt2', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=2002701505 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('''{wZYNCq㧟' IN ('')) IN ((+ ('2024847534')), ((((((((((((x'')AND(1213545790)))AND(0.16156726798546495)))OR(0.8794731315038601)))AND(-668956187)))AND('B뵢Zo?H9')))AND('ˆWR	#')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=88305512'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0X576c3059) NOT BETWEEN (x'') AND (-7.19116269E8)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS BLOB))OR(((NULL)=(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1985626917 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) BETWEEN ('-351041004') AND (x'')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ()))IS NOT(1248014719 COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1142481342'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt1', '-1608353084'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt0', '1684354896 sz=736223879'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-543553381'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('' AS REAL))IS(((NULL)<<(x'')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt2', '692013977 4 sz=1102374583 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt2', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(DISTINCT ((2024969889) NOT BETWEEN ('') AND ('&ᣮ'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' sz=-1927143575'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((0.774439228582058)OR('1116098135')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt1', ' sz=-280283669 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.39121333517248014 COLLATE NOCASE))<((((NULL) NOT BETWEEN (0.5056922307327342) AND (x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('-351041004')||('-145875159'))  WHEN (((NULL)) NOT BETWEEN ((0xffffffffbb8ade57)) AND ((x''))) THEN CAST('fwa' AS REAL) ELSE CAST('0.9118670043261511' AS REAL) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT 0.9172822227675647 COLLATE NOCASE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-329757278'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (~ (-69239630)) THEN ((NULL)>=(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '|t4k뢞'  WHEN 0.04459162763411506 THEN 0.006803889566971533 END)<=((((NULL)) BETWEEN ((x'')) AND ((0.2865566572886954))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)<>(NULL))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt2', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1014003587 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((HEX(x'')) NOT BETWEEN (CAST('-1750328064' AS TEXT)) AND (CAST('uK' AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (x'646a9560' IN ('2215324'))  WHEN (('501413686') IS FALSE) THEN (((((((('G9{*')AND('1482640184')))AND(x'')))AND(NULL)))AND(0.5946906798678396)) WHEN x'' COLLATE NOCASE THEN x'' COLLATE NOCASE WHEN x'' THEN (0.6822343727524416 IN (x'')) ELSE ((NULL) IS FALSE) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') NOTNULL))|((NOT ('986309586')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('(FnE)' IN ()))GLOB((('')*('굡F')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', '-1356631532 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt0', ' sz=-975771977 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.6822343727524416)IS(NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.5741802719250324) NOT NULL)  WHEN LOWER(DISTINCT '') THEN ('1922242075' IN ()) ELSE ((x'') NOT BETWEEN (-1607266405) AND (NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(0.4528040119808112 AS INTEGER) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-77178078 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(NULL COLLATE RTRIM, x'4538' COLLATE NOCASE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt1', ' sz=-734161496'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt2', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((NULL IN (0.7987711259701487)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '-1223546343 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.6616890353979007 COLLATE NOCASE) BETWEEN ((NULL IN (''))) AND ((('-287906915')!=('1136153402')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1900455175 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' sz=208441938 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((373719396)) NOT BETWEEN ((((x'')IS(x'')))) AND ((((((((((x'')AND(NULL)))AND(NULL)))AND('')))OR(x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ()))OR(0.6251811999942012)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-144801700 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt2', '0 sz=-504225974 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' sz=2093190522'); -- 4ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT CAST('' AS NUMERIC), NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1703188742 983336997 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1529610544' COLLATE BINARY)||(CASE WHEN '0.048365242461289926' THEN '' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.24140964650196373) BETWEEN (NULL) AND (x''))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (TYPEOF(0.4008763568988122))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-52042515'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7695859854882938)!=(0.4924413792449259)))<=('0.6049748169786032')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, NULL, '-1097514661'))>(('-1298176158', 'cG', NULL))) COLLATE NOCASE COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-91602619 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'1ef5'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1861330348 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'rt1', ' sz=703971512 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1798513162'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE '-1243925758'  WHEN x'' THEN '%cAbxy0입' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.405486125894553 COLLATE BINARY) BETWEEN (((((0X21865228)AND(0.44962812483381653)))AND('e'))) AND (COALESCE(0.6256965049926062, -3.51041004E8, '34407024', NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=239566570 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CASE ''  WHEN 0.8231771520519644 THEN 1933935523 WHEN x'' THEN NULL WHEN 'Q聜dnAD' THEN 'N}}' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 0 sz=1922242075'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '899366128 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
UPDATE OR IGNORE rt1 SET c1=NULL; -- 0ms;
INSERT OR IGNORE INTO rt1(c4, c3) VALUES (0.4964814835668844, x''); -- 0ms;
ANALYZE temp; -- 0ms;
REINDEX; -- 0ms;
REINDEX BINARY; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.optimize; -- 0ms;
INSERT OR ABORT INTO rt2(c1) VALUES ('1111108082'); -- 0ms;
INSERT OR REPLACE INTO rt0(c3, c0) VALUES (NULL, 0.4027551873101659); -- 1ms;
PRAGMA threads; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c3, c2, c0) VALUES (0.9815931057525158, 0.5218918014864616, x''); -- 0ms;
INSERT OR IGNORE INTO rt2(c0, c2) VALUES (x'', x''), (0.4027551873101659, x''), (NULL, -1116466943); -- 0ms;
UPDATE OR IGNORE rt1 SET c0=NULL; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
REINDEX  rt0; -- 0ms;
PRAGMA main.automatic_index = true; -- 0ms;
INSERT OR IGNORE INTO rt2(c0, c1) VALUES ('704454564', NULL), ('-1168623768', x'34f8'), (0.6095995634654263, x''); -- 1ms;
CREATE TABLE IF NOT EXISTS t47 (c0 TEXT ); -- 0ms;
UPDATE OR FAIL rt1 SET (c4, c0, c3)=(NULL, '-914092999', x''); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA reverse_unordered_selects; -- 0ms;
ANALYZE; -- 0ms;
ALTER TABLE t47 RENAME TO t0; -- 1ms;
INSERT OR REPLACE INTO t0(c0) VALUES (0.5670631724263986); -- 0ms;
UPDATE rt2 SET c0='568327836' WHERE ((rt2.c0) IS TRUE) COLLATE BINARY; -- 0ms;
UPDATE t0 SET c0=x'9a9e' WHERE x'' COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x''), (0.30163386511811474), (''); -- 0ms;
PRAGMA secure_delete = true; -- 0ms;
REINDEX  rt1; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-329476651 sz=1111108082 noskipscan'); -- 0ms;
COMMIT; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL COUNT(*) FROM rt2, rt0 RIGHT OUTER JOIN rt1 ON (rt2.c0 IN ()) COLLATE RTRIM COLLATE RTRIM WHERE (((((((rt1.c4)AND(rt1.c1)))AND(-1.448017E8)))OR(rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c4)AND(rt1.c1)))AND(-1.448017E8)))OR(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt2, rt0 RIGHT OUTER JOIN rt1 ON (rt2.c0 IN ()) COLLATE RTRIM COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt2, rt0 RIGHT OUTER JOIN rt1 ON (rt2.c0 IN ()) COLLATE RTRIM COLLATE RTRIM WHERE (((((((rt1.c4)AND(rt1.c1)))AND(-1.448017E8)))OR(rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c4)AND(rt1.c1)))AND(-1.448017E8)))OR(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt2, rt0 RIGHT OUTER JOIN rt1 ON (rt2.c0 IN ()) COLLATE RTRIM COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt2, rt0 RIGHT OUTER JOIN rt1 ON (rt2.c0 IN ()) COLLATE RTRIM COLLATE RTRIM WHERE (((((((rt1.c4)AND(rt1.c1)))AND(-1.448017E8)))OR(rt0.c2 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt1 WHERE ((((CAST(rt1.c3 AS TEXT)))==((CAST(rt1.c4 AS TEXT))))) ORDER BY ((((((((((((((((rt1.c3)AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c4)))OR(rt1.c4)))OR((- (rt1.c1)))))OR((((rt1.c4)) NOT BETWEEN ((0.8676210001879566)) AND ((rt1.c0))))))AND(((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c1)))))AND((((rt1.c1, rt1.c1, rt1.c1))>((rt1.c2, rt1.c3, rt1.c3))))) DESC  NULLS LAST, ((((rt1.c4) BETWEEN (rt1.c1) AND (rt1.c1)))%(CASE WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c2 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt1.c3 AS TEXT)))=((CAST(rt1.c4 AS TEXT))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((((((((((((rt1.c3)AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c4)))OR(rt1.c4)))OR((- (rt1.c1)))))OR((((rt1.c4)) NOT BETWEEN ((0.8676210001879566)) AND ((rt1.c0))))))AND(((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c1)))))AND((((rt1.c1, rt1.c1, rt1.c1))>((rt1.c2, rt1.c3, rt1.c3))))) DESC  NULLS LAST, ((((rt1.c4) BETWEEN (rt1.c1) AND (rt1.c1)))%(CASE WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c2 END)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((((CAST(rt1.c3 AS TEXT)))==((CAST(rt1.c4 AS TEXT))))) ORDER BY ((((((((((((((((rt1.c3)AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c4)))OR(rt1.c4)))OR((- (rt1.c1)))))OR((((rt1.c4)) NOT BETWEEN ((0.8676210001879566)) AND ((rt1.c0))))))AND(((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c1)))))AND((((rt1.c1, rt1.c1, rt1.c1))>((rt1.c2, rt1.c3, rt1.c3))))) DESC  NULLS LAST, ((((rt1.c4) BETWEEN (rt1.c1) AND (rt1.c1)))%(CASE WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c2 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt1.c3 AS TEXT)))=((CAST(rt1.c4 AS TEXT))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((((((((((((rt1.c3)AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c4)))OR(rt1.c4)))OR((- (rt1.c1)))))OR((((rt1.c4)) NOT BETWEEN ((0.8676210001879566)) AND ((rt1.c0))))))AND(((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c1)))))AND((((rt1.c1, rt1.c1, rt1.c1))>((rt1.c2, rt1.c3, rt1.c3))))) DESC  NULLS LAST, ((((rt1.c4) BETWEEN (rt1.c1) AND (rt1.c1)))%(CASE WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c2 END)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((((CAST(rt1.c3 AS TEXT)))==((CAST(rt1.c4 AS TEXT))))) ORDER BY ((((((((((((((((rt1.c3)AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c4)))OR(rt1.c4)))OR((- (rt1.c1)))))OR((((rt1.c4)) NOT BETWEEN ((0.8676210001879566)) AND ((rt1.c0))))))AND(((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c1)))))AND((((rt1.c1, rt1.c1, rt1.c1))>((rt1.c2, rt1.c3, rt1.c3))))) DESC  NULLS LAST, ((((rt1.c4) BETWEEN (rt1.c1) AND (rt1.c1)))%(CASE WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c2 END)) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, rt1, rt2 WHERE (CASE (~ (rt2.c2))  WHEN (((rt0.c2, x'', rt1.c4)) NOT BETWEEN ((rt2.c2, x'', rt1.c2)) AND ((rt1.c3, rt1.c4, 0.3195660025112316))) THEN ((((rt1.c0)AND(rt2.c0)))AND(rt2.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (rt2.c2))  WHEN (((rt0.c2, x'', rt1.c4)) NOT BETWEEN ((rt2.c2, x'', rt1.c2)) AND ((rt1.c3, rt1.c4, 0.3195660025112316))) THEN ((((rt1.c0)AND(rt2.c0)))AND(rt2.c0)) END) IS TRUE)  as count FROM rt0, rt1, rt2);
SELECT COUNT(*) FROM rt0, rt1, rt2 WHERE (CASE (~ (rt2.c2))  WHEN (((rt0.c2, x'', rt1.c4)) NOT BETWEEN ((rt2.c2, x'', rt1.c2)) AND ((rt1.c3, rt1.c4, 0.3195660025112316))) THEN ((((rt1.c0)AND(rt2.c0)))AND(rt2.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (rt2.c2))  WHEN (((rt0.c2, x'', rt1.c4)) NOT BETWEEN ((rt2.c2, x'', rt1.c2)) AND ((rt1.c3, rt1.c4, 0.3195660025112316))) THEN ((((rt1.c0)AND(rt2.c0)))AND(rt2.c0)) END) IS TRUE)  as count FROM rt0, rt1, rt2);
SELECT COUNT(*) FROM rt0, rt1, rt2 WHERE (CASE (~ (rt2.c2))  WHEN (((rt0.c2, x'', rt1.c4)) NOT BETWEEN ((rt2.c2, x'', rt1.c2)) AND ((rt1.c3, rt1.c4, 0.3195660025112316))) THEN ((((rt1.c0)AND(rt2.c0)))AND(rt2.c0)) END);
SELECT COUNT(*) FROM rt2 WHERE (((rt2.c2 COLLATE NOCASE) BETWEEN (((rt2.c2)>=(rt2.c2))) AND (((((rt2.c1)OR(rt2.c2)))OR(rt2.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt2.c2 COLLATE NOCASE) BETWEEN (((rt2.c2)>=(rt2.c2))) AND (((((rt2.c1)OR(rt2.c2)))OR(rt2.c0))))) IS TRUE)  as count FROM rt2);
SELECT COUNT(*) FROM rt2 WHERE (((rt2.c2 COLLATE NOCASE) BETWEEN (((rt2.c2)>=(rt2.c2))) AND (((((rt2.c1)OR(rt2.c2)))OR(rt2.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt2.c2 COLLATE NOCASE) BETWEEN (((rt2.c2)>=(rt2.c2))) AND (((((rt2.c1)OR(rt2.c2)))OR(rt2.c0))))) IS TRUE)  as count FROM rt2);
SELECT COUNT(*) FROM rt2 WHERE (((rt2.c2 COLLATE NOCASE) BETWEEN (((rt2.c2)>=(rt2.c2))) AND (((((rt2.c1)OR(rt2.c2)))OR(rt2.c0)))));
SELECT COUNT(*) FROM rt2 WHERE ((- ((((rt2.c0)) NOT BETWEEN (('0.9594436808008809')) AND ((rt2.c2)))))) ORDER BY ((rt2.c2 COLLATE NOCASE)GLOB((((rt2.c0))<=((rt2.c2))))), CAST(rt2.c1 AS NUMERIC) COLLATE RTRIM  NULLS FIRST, (((((rt2.c1))!=((rt2.c1))))!=(CASE rt2.c0  WHEN rt2.c0 THEN rt2.c2 WHEN rt2.c0 THEN rt2.c2 WHEN rt2.c1 THEN rt2.c1 END));
SELECT SUM(count) FROM (SELECT ALL (((- ((((rt2.c0)) NOT BETWEEN (('0.9594436808008809')) AND ((rt2.c2)))))) IS TRUE)  as count FROM rt2 ORDER BY ((rt2.c2 COLLATE NOCASE)GLOB((((rt2.c0))<=((rt2.c2))))), CAST(rt2.c1 AS NUMERIC) COLLATE RTRIM  NULLS FIRST, (((((rt2.c1))!=((rt2.c1))))<>(CASE rt2.c0  WHEN rt2.c0 THEN rt2.c2 WHEN rt2.c0 THEN rt2.c2 WHEN rt2.c1 THEN rt2.c1 END)));
SELECT COUNT(*) FROM rt2 WHERE ((- ((((rt2.c0)) NOT BETWEEN (('0.9594436808008809')) AND ((rt2.c2)))))) ORDER BY ((rt2.c2 COLLATE NOCASE)GLOB((((rt2.c0))<=((rt2.c2))))), CAST(rt2.c1 AS NUMERIC) COLLATE RTRIM  NULLS FIRST, (((((rt2.c1))!=((rt2.c1))))!=(CASE rt2.c0  WHEN rt2.c0 THEN rt2.c2 WHEN rt2.c0 THEN rt2.c2 WHEN rt2.c1 THEN rt2.c1 END));
SELECT SUM(count) FROM (SELECT ALL (((- ((((rt2.c0)) NOT BETWEEN (('0.9594436808008809')) AND ((rt2.c2)))))) IS TRUE)  as count FROM rt2 ORDER BY ((rt2.c2 COLLATE NOCASE)GLOB((((rt2.c0))<=((rt2.c2))))), CAST(rt2.c1 AS NUMERIC) COLLATE RTRIM  NULLS FIRST, (((((rt2.c1))!=((rt2.c1))))<>(CASE rt2.c0  WHEN rt2.c0 THEN rt2.c2 WHEN rt2.c0 THEN rt2.c2 WHEN rt2.c1 THEN rt2.c1 END)));
SELECT COUNT(*) FROM rt2 WHERE ((- ((((rt2.c0)) NOT BETWEEN (('0.9594436808008809')) AND ((rt2.c2)))))) ORDER BY ((rt2.c2 COLLATE NOCASE)GLOB((((rt2.c0))<=((rt2.c2))))), CAST(rt2.c1 AS NUMERIC) COLLATE RTRIM  NULLS FIRST, (((((rt2.c1))!=((rt2.c1))))!=(CASE rt2.c0  WHEN rt2.c0 THEN rt2.c2 WHEN rt2.c0 THEN rt2.c2 WHEN rt2.c1 THEN rt2.c1 END));
SELECT ALL * FROM rt2 INNER JOIN rt0 ON ((rt0.c1)!=(CAST(rt2.c1 AS BLOB))) WHERE (LIKELIHOOD(DISTINCT CASE WHEN rt2.c2 THEN rt2.c2 WHEN rt0.c0 THEN rt2.c1 WHEN rt2.c1 THEN rt0.c0 END, 0.539322265639507));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT CASE WHEN rt2.c2 THEN rt2.c2 WHEN rt0.c0 THEN rt2.c1 WHEN rt2.c1 THEN rt0.c0 END, 0.539322265639507)) IS TRUE)  as count FROM rt2 INNER JOIN rt0 ON ((rt0.c1)!=(CAST(rt2.c1 AS BLOB))));
SELECT ALL * FROM rt2 INNER JOIN rt0 ON ((rt0.c1)!=(CAST(rt2.c1 AS BLOB))) WHERE (LIKELIHOOD(DISTINCT CASE WHEN rt2.c2 THEN rt2.c2 WHEN rt0.c0 THEN rt2.c1 WHEN rt2.c1 THEN rt0.c0 END, 0.539322265639507));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT CASE WHEN rt2.c2 THEN rt2.c2 WHEN rt0.c0 THEN rt2.c1 WHEN rt2.c1 THEN rt0.c0 END, 0.539322265639507)) IS TRUE)  as count FROM rt2 INNER JOIN rt0 ON ((rt0.c1)!=(CAST(rt2.c1 AS BLOB))));
SELECT ALL * FROM rt2 INNER JOIN rt0 ON ((rt0.c1)!=(CAST(rt2.c1 AS BLOB))) WHERE (LIKELIHOOD(DISTINCT CASE WHEN rt2.c2 THEN rt2.c2 WHEN rt0.c0 THEN rt2.c1 WHEN rt2.c1 THEN rt0.c0 END, 0.539322265639507));
SELECT * FROM rt1 INNER JOIN rt2 ON rt1.c1 COLLATE RTRIM WHERE (CAST(rt1.c2 AS REAL) COLLATE BINARY) ORDER BY ((rt2.c1)<=((0.11782560987091795 IN ())))  NULLS FIRST, CAST(((rt2.c0)GLOB(rt1.c1)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c2 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM rt1 INNER JOIN rt2 ON rt1.c1 COLLATE RTRIM ORDER BY ((rt2.c1)<=((0.11782560987091795 IN ())))  NULLS FIRST, CAST(((rt2.c0)GLOB(rt1.c1)) AS BLOB));
SELECT * FROM rt1 INNER JOIN rt2 ON rt1.c1 COLLATE RTRIM WHERE (CAST(rt1.c2 AS REAL) COLLATE BINARY) ORDER BY ((rt2.c1)<=((0.11782560987091795 IN ())))  NULLS FIRST, CAST(((rt2.c0)GLOB(rt1.c1)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c2 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM rt1 INNER JOIN rt2 ON rt1.c1 COLLATE RTRIM ORDER BY ((rt2.c1)<=((0.11782560987091795 IN ())))  NULLS FIRST, CAST(((rt2.c0)GLOB(rt1.c1)) AS BLOB));
SELECT * FROM rt1 INNER JOIN rt2 ON rt1.c1 COLLATE RTRIM WHERE (CAST(rt1.c2 AS REAL) COLLATE BINARY) ORDER BY ((rt2.c1)<=((0.11782560987091795 IN ())))  NULLS FIRST, CAST(((rt2.c0)GLOB(rt1.c1)) AS BLOB);
SELECT * FROM rt0, rt2 WHERE (TRIM(DISTINCT (NOT (rt0.c1)))) ORDER BY (((((rt0.c2 IN (rt2.c2, rt2.c0)))OR(CASE rt2.c2  WHEN rt2.c0 THEN rt0.c0 ELSE rt2.c1 END)))OR(((rt2.c1)OR(rt2.c2)))) ASC, NULL COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (NOT (rt0.c1)))) IS TRUE)  as count FROM rt0, rt2 ORDER BY (((((rt0.c2 IN (rt2.c2, rt2.c0)))OR(CASE rt2.c2  WHEN rt2.c0 THEN rt0.c0 ELSE rt2.c1 END)))OR(((rt2.c1)OR(rt2.c2)))) ASC, NULL COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM rt0, rt2 WHERE (TRIM(DISTINCT (NOT (rt0.c1)))) ORDER BY (((((rt0.c2 IN (rt2.c2, rt2.c0)))OR(CASE rt2.c2  WHEN rt2.c0 THEN rt0.c0 ELSE rt2.c1 END)))OR(((rt2.c1)OR(rt2.c2)))) ASC, NULL COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (NOT (rt0.c1)))) IS TRUE)  as count FROM rt0, rt2 ORDER BY (((((rt0.c2 IN (rt2.c2, rt2.c0)))OR(CASE rt2.c2  WHEN rt2.c0 THEN rt0.c0 ELSE rt2.c1 END)))OR(((rt2.c1)OR(rt2.c2)))) ASC, NULL COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM rt0, rt2 WHERE (TRIM(DISTINCT (NOT (rt0.c1)))) ORDER BY (((((rt0.c2 IN (rt2.c2, rt2.c0)))OR(CASE rt2.c2  WHEN rt2.c0 THEN rt0.c0 ELSE rt2.c1 END)))OR(((rt2.c1)OR(rt2.c2)))) ASC, NULL COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, rt0, rt2 WHERE (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)<(0.9687003361721642)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)<(0.9687003361721642))) IS TRUE)  as count FROM rt1, rt0, rt2);
SELECT ALL COUNT(*) FROM rt1, rt0, rt2 WHERE (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)<(0.9687003361721642)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)<(0.9687003361721642))) IS TRUE)  as count FROM rt1, rt0, rt2);
SELECT ALL COUNT(*) FROM rt1, rt0, rt2 WHERE (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)<(0.9687003361721642)));
SELECT ALL * FROM rt0, rt1 INNER JOIN rt2 ON (- (NULL)) COLLATE RTRIM WHERE ((- (CAST(rt2.c2 AS NUMERIC)))) ORDER BY (~ (CASE WHEN 0.33736728772270563 THEN rt2.c0 END)) ASC, (+ (((rt1.c4) BETWEEN (rt1.c1) AND (rt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (CAST(rt2.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt0, rt1 INNER JOIN rt2 ON (- (NULL)) COLLATE RTRIM ORDER BY (~ (CASE WHEN 0.33736728772270563 THEN rt2.c0 END)) ASC, (+ (((rt1.c4) BETWEEN (rt1.c1) AND (rt1.c1))))  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 INNER JOIN rt2 ON (- (NULL)) COLLATE RTRIM WHERE ((- (CAST(rt2.c2 AS NUMERIC)))) ORDER BY (~ (CASE WHEN 0.33736728772270563 THEN rt2.c0 END)) ASC, (+ (((rt1.c4) BETWEEN (rt1.c1) AND (rt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (CAST(rt2.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt0, rt1 INNER JOIN rt2 ON (- (NULL)) COLLATE RTRIM ORDER BY (~ (CASE WHEN 0.33736728772270563 THEN rt2.c0 END)) ASC, (+ (((rt1.c4) BETWEEN (rt1.c1) AND (rt1.c1))))  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 INNER JOIN rt2 ON (- (NULL)) COLLATE RTRIM WHERE ((- (CAST(rt2.c2 AS NUMERIC)))) ORDER BY (~ (CASE WHEN 0.33736728772270563 THEN rt2.c0 END)) ASC, (+ (((rt1.c4) BETWEEN (rt1.c1) AND (rt1.c1))))  NULLS FIRST;
SELECT * FROM rt2, rt1, rt0 WHERE (((CASE WHEN rt1.c2 THEN rt1.c4 WHEN rt2.c0 THEN rt1.c4 WHEN rt1.c4 THEN rt0.c2 ELSE rt0.c0 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c2 THEN rt1.c4 WHEN rt2.c0 THEN rt1.c4 WHEN rt1.c4 THEN rt0.c2 ELSE rt0.c0 END) NOTNULL)) IS TRUE)  as count FROM rt2, rt1, rt0);
SELECT * FROM rt2, rt1, rt0 WHERE (((CASE WHEN rt1.c2 THEN rt1.c4 WHEN rt2.c0 THEN rt1.c4 WHEN rt1.c4 THEN rt0.c2 ELSE rt0.c0 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c2 THEN rt1.c4 WHEN rt2.c0 THEN rt1.c4 WHEN rt1.c4 THEN rt0.c2 ELSE rt0.c0 END) NOTNULL)) IS TRUE)  as count FROM rt2, rt1, rt0);
SELECT * FROM rt2, rt1, rt0 WHERE (((CASE WHEN rt1.c2 THEN rt1.c4 WHEN rt2.c0 THEN rt1.c4 WHEN rt1.c4 THEN rt0.c2 ELSE rt0.c0 END) NOTNULL));
SELECT COUNT(*) FROM rt2, rt1, rt0 WHERE ('eX\\niq') ORDER BY ((rt0.c2 COLLATE NOCASE)AND(rt1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL (('eX\\niq') IS TRUE)  as count FROM rt2, rt1, rt0 ORDER BY ((rt0.c2 COLLATE NOCASE)AND(rt1.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt2, rt1, rt0 WHERE ('eX\\niq') ORDER BY ((rt0.c2 COLLATE NOCASE)AND(rt1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL (('eX\\niq') IS TRUE)  as count FROM rt2, rt1, rt0 ORDER BY ((rt0.c2 COLLATE NOCASE)AND(rt1.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt2, rt1, rt0 WHERE ('eX\\niq') ORDER BY ((rt0.c2 COLLATE NOCASE)AND(rt1.c0 COLLATE RTRIM));
SELECT COUNT(*) FROM rt0 NOT INDEXED, rt2, rt1 WHERE (json_array_length(((((rt1.c2)AND(x'e9e0')))AND(rt2.c1)), CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt1.c0 END)) ORDER BY (((((rt0.c2)) BETWEEN ((rt1.c1)) AND ((rt2.c2)))) ISNULL), rt0.c0 DESC, ((('6*u￿Yl')) BETWEEN ((rt1.c4 COLLATE RTRIM)) AND ((((rt1.c4) BETWEEN (rt0.c3) AND (rt1.c3))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_array_length(((((rt1.c2)AND(x'e9e0')))AND(rt2.c1)), CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt1.c0 END)) IS TRUE)  as count FROM rt0, rt2, rt1 ORDER BY (((((rt0.c2)) BETWEEN ((rt1.c1)) AND ((rt2.c2)))) ISNULL), rt0.c0 DESC, ((('6*u￿Yl')) BETWEEN ((rt1.c4 COLLATE RTRIM)) AND ((((rt1.c4) BETWEEN (rt0.c3) AND (rt1.c3))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 NOT INDEXED, rt2, rt1 WHERE (json_array_length(((((rt1.c2)AND(x'e9e0')))AND(rt2.c1)), CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt1.c0 END)) ORDER BY (((((rt0.c2)) BETWEEN ((rt1.c1)) AND ((rt2.c2)))) ISNULL), rt0.c0 DESC, ((('6*u￿Yl')) BETWEEN ((rt1.c4 COLLATE RTRIM)) AND ((((rt1.c4) BETWEEN (rt0.c3) AND (rt1.c3))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_array_length(((((rt1.c2)AND(x'e9e0')))AND(rt2.c1)), CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt1.c0 END)) IS TRUE)  as count FROM rt0, rt2, rt1 ORDER BY (((((rt0.c2)) BETWEEN ((rt1.c1)) AND ((rt2.c2)))) ISNULL), rt0.c0 DESC, ((('6*u￿Yl')) BETWEEN ((rt1.c4 COLLATE RTRIM)) AND ((((rt1.c4) BETWEEN (rt0.c3) AND (rt1.c3))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 NOT INDEXED, rt2, rt1 WHERE (json_array_length(((((rt1.c2)AND(x'e9e0')))AND(rt2.c1)), CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt1.c0 END)) ORDER BY (((((rt0.c2)) BETWEEN ((rt1.c1)) AND ((rt2.c2)))) ISNULL), rt0.c0 DESC, ((('6*u￿Yl')) BETWEEN ((rt1.c4 COLLATE RTRIM)) AND ((((rt1.c4) BETWEEN (rt0.c3) AND (rt1.c3))))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, rt2, rt1 WHERE ((rt0.c1 IN (rt2.c0)) COLLATE BINARY) ORDER BY (UPPER(DISTINCT rt0.c3) IN (LOWER(rt1.c3))) ASC, TYPEOF(DISTINCT rt0.c2) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN (rt2.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt2, rt1 ORDER BY (UPPER(DISTINCT rt0.c3) IN (LOWER(rt1.c3))) ASC, TYPEOF(DISTINCT rt0.c2) COLLATE NOCASE DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt2, rt1 WHERE ((rt0.c1 IN (rt2.c0)) COLLATE BINARY) ORDER BY (UPPER(DISTINCT rt0.c3) IN (LOWER(rt1.c3))) ASC, TYPEOF(DISTINCT rt0.c2) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN (rt2.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt2, rt1 ORDER BY (UPPER(DISTINCT rt0.c3) IN (LOWER(rt1.c3))) ASC, TYPEOF(DISTINCT rt0.c2) COLLATE NOCASE DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt2, rt1 WHERE ((rt0.c1 IN (rt2.c0)) COLLATE BINARY) ORDER BY (UPPER(DISTINCT rt0.c3) IN (LOWER(rt1.c3))) ASC, TYPEOF(DISTINCT rt0.c2) COLLATE NOCASE DESC  NULLS FIRST;
SELECT * FROM rt1 WHERE (x'' COLLATE RTRIM) ORDER BY CAST((rt1.c2 IN ()) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY CAST((rt1.c2 IN ()) AS INTEGER));
SELECT * FROM rt1 WHERE (x'' COLLATE RTRIM) ORDER BY CAST((rt1.c2 IN ()) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY CAST((rt1.c2 IN ()) AS INTEGER));
SELECT * FROM rt1 WHERE (x'' COLLATE RTRIM) ORDER BY CAST((rt1.c2 IN ()) AS INTEGER);
SELECT ALL COUNT(*) FROM rt0, rt2, rt1 WHERE (NULLIF(DISTINCT ((rt0.c2)<=(rt0.c0)), CAST(rt1.c2 AS INTEGER))) ORDER BY (0X4418e1be IN ());
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((rt0.c2)<=(rt0.c0)), CAST(rt1.c2 AS INTEGER))) IS TRUE)  as count FROM rt0, rt2, rt1 ORDER BY (0x4418e1be IN ()));
SELECT ALL COUNT(*) FROM rt0, rt2, rt1 WHERE (NULLIF(DISTINCT ((rt0.c2)<=(rt0.c0)), CAST(rt1.c2 AS INTEGER))) ORDER BY (0X4418e1be IN ());
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((rt0.c2)<=(rt0.c0)), CAST(rt1.c2 AS INTEGER))) IS TRUE)  as count FROM rt0, rt2, rt1 ORDER BY (0x4418e1be IN ()));
SELECT ALL COUNT(*) FROM rt0, rt2, rt1 WHERE (NULLIF(DISTINCT ((rt0.c2)<=(rt0.c0)), CAST(rt1.c2 AS INTEGER))) ORDER BY (0X4418e1be IN ());
SELECT * FROM rt1, rt0, rt2 WHERE (((TYPEOF(rt1.c2)) NOTNULL)) ORDER BY ((rt2.c0 COLLATE BINARY) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(rt1.c2)) NOTNULL)) IS TRUE)  as count FROM rt1, rt0, rt2 ORDER BY ((rt2.c0 COLLATE BINARY) NOT NULL) DESC  NULLS FIRST);
SELECT * FROM rt1, rt0, rt2 WHERE (((TYPEOF(rt1.c2)) NOTNULL)) ORDER BY ((rt2.c0 COLLATE BINARY) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(rt1.c2)) NOTNULL)) IS TRUE)  as count FROM rt1, rt0, rt2 ORDER BY ((rt2.c0 COLLATE BINARY) NOT NULL) DESC  NULLS FIRST);
SELECT * FROM rt1, rt0, rt2 WHERE (((TYPEOF(rt1.c2)) NOTNULL)) ORDER BY ((rt2.c0 COLLATE BINARY) NOT NULL) DESC  NULLS FIRST;
SELECT ALL * FROM rt2, rt1, rt0 WHERE (((rt1.c3) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3) IS FALSE)) IS TRUE)  as count FROM rt2, rt1, rt0);
SELECT ALL * FROM rt2, rt1, rt0 WHERE (((rt1.c3) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3) IS FALSE)) IS TRUE)  as count FROM rt2, rt1, rt0);
SELECT ALL * FROM rt2, rt1, rt0 WHERE (((rt1.c3) IS FALSE));
SELECT ALL COUNT(*) FROM rt0, rt2, rt1 WHERE ((((((((((NULL)AND(0.5294645486457391)))OR(rt1.c3)))AND(rt0.c3)))AND(rt2.c1)) IN ())) ORDER BY (+ ((x'' IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((NULL)AND(0.5294645486457391)))OR(rt1.c3)))AND(rt0.c3)))AND(rt2.c1)) IN ())) IS TRUE)  as count FROM rt0, rt2, rt1 ORDER BY (+ ((x'' IN ()))) ASC);
SELECT ALL COUNT(*) FROM rt0, rt2, rt1 WHERE ((((((((((NULL)AND(0.5294645486457391)))OR(rt1.c3)))AND(rt0.c3)))AND(rt2.c1)) IN ())) ORDER BY (+ ((x'' IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((NULL)AND(0.5294645486457391)))OR(rt1.c3)))AND(rt0.c3)))AND(rt2.c1)) IN ())) IS TRUE)  as count FROM rt0, rt2, rt1 ORDER BY (+ ((x'' IN ()))) ASC);
SELECT ALL COUNT(*) FROM rt0, rt2, rt1 WHERE ((((((((((NULL)AND(0.5294645486457391)))OR(rt1.c3)))AND(rt0.c3)))AND(rt2.c1)) IN ())) ORDER BY (+ ((x'' IN ()))) ASC;
SELECT ALL * FROM rt1, rt0 WHERE (NULL) ORDER BY ((((rt1.c0) NOT NULL)) NOTNULL), (CASE rt1.c4  WHEN rt0.c3 THEN rt0.c2 ELSE x'85f7' END IN ()) DESC  NULLS FIRST, rt1.c4 ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt1.c0) NOT NULL)) NOTNULL), (CASE rt1.c4  WHEN rt0.c3 THEN rt0.c2 ELSE x'85f7' END IN ()) DESC  NULLS FIRST, rt1.c4 ASC);
SELECT ALL * FROM rt1, rt0 WHERE (NULL) ORDER BY ((((rt1.c0) NOT NULL)) NOTNULL), (CASE rt1.c4  WHEN rt0.c3 THEN rt0.c2 ELSE x'85f7' END IN ()) DESC  NULLS FIRST, rt1.c4 ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt1.c0) NOT NULL)) NOTNULL), (CASE rt1.c4  WHEN rt0.c3 THEN rt0.c2 ELSE x'85f7' END IN ()) DESC  NULLS FIRST, rt1.c4 ASC);
SELECT ALL * FROM rt1, rt0 WHERE (NULL) ORDER BY ((((rt1.c0) NOT NULL)) NOTNULL), (CASE rt1.c4  WHEN rt0.c3 THEN rt0.c2 ELSE x'85f7' END IN ()) DESC  NULLS FIRST, rt1.c4 ASC;
SELECT ALL * FROM rt2, rt1, rt0 WHERE (((CASE rt2.c2  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c3 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE rt2.c2  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c3 END) ISNULL)) IS TRUE)  as count FROM rt2, rt1, rt0);
SELECT ALL * FROM rt2, rt1, rt0 WHERE (((CASE rt2.c2  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c3 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE rt2.c2  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c3 END) ISNULL)) IS TRUE)  as count FROM rt2, rt1, rt0);
SELECT ALL * FROM rt2, rt1, rt0 WHERE (((CASE rt2.c2  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c3 END) ISNULL));
SELECT * FROM rt1, rt0, rt2 WHERE ('-965320442') ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-965320442') IS TRUE)  as count FROM rt1, rt0, rt2 ORDER BY rt0.c0  NULLS LAST);
SELECT * FROM rt1, rt0, rt2 WHERE ('-965320442') ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-965320442') IS TRUE)  as count FROM rt1, rt0, rt2 ORDER BY rt0.c0  NULLS LAST);
SELECT * FROM rt1, rt0, rt2 WHERE ('-965320442') ORDER BY rt0.c0  NULLS LAST;
SELECT COUNT(*) FROM rt2, rt0, rt1 WHERE ((((((((((rt0.c3 IN (rt0.c2, rt1.c1)))AND((((rt1.c2, rt2.c1, rt1.c4)) NOT BETWEEN (('-992093611', rt2.c1, rt2.c2)) AND ((rt1.c2, rt1.c1, rt2.c0))))))OR((+ (rt1.c4)))))AND(x'')))AND(((('-1659679499')) NOT BETWEEN ((rt2.c1)) AND ((rt2.c2)))))) ORDER BY LAST_INSERT_ROWID();
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c3 IN (rt0.c2, rt1.c1)))AND((((rt1.c2, rt2.c1, rt1.c4)) NOT BETWEEN (('-992093611', rt2.c1, rt2.c2)) AND ((rt1.c2, rt1.c1, rt2.c0))))))OR((+ (rt1.c4)))))AND(x'')))AND(((('-1659679499')) NOT BETWEEN ((rt2.c1)) AND ((rt2.c2)))))) IS TRUE)  as count FROM rt2, rt0, rt1 ORDER BY LAST_INSERT_ROWID());
SELECT COUNT(*) FROM rt2, rt0, rt1 WHERE ((((((((((rt0.c3 IN (rt0.c2, rt1.c1)))AND((((rt1.c2, rt2.c1, rt1.c4)) NOT BETWEEN (('-992093611', rt2.c1, rt2.c2)) AND ((rt1.c2, rt1.c1, rt2.c0))))))OR((+ (rt1.c4)))))AND(x'')))AND(((('-1659679499')) NOT BETWEEN ((rt2.c1)) AND ((rt2.c2)))))) ORDER BY LAST_INSERT_ROWID();
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c3 IN (rt0.c2, rt1.c1)))AND((((rt1.c2, rt2.c1, rt1.c4)) NOT BETWEEN (('-992093611', rt2.c1, rt2.c2)) AND ((rt1.c2, rt1.c1, rt2.c0))))))OR((+ (rt1.c4)))))AND(x'')))AND(((('-1659679499')) NOT BETWEEN ((rt2.c1)) AND ((rt2.c2)))))) IS TRUE)  as count FROM rt2, rt0, rt1 ORDER BY LAST_INSERT_ROWID());
SELECT COUNT(*) FROM rt2, rt0, rt1 WHERE ((((((((((rt0.c3 IN (rt0.c2, rt1.c1)))AND((((rt1.c2, rt2.c1, rt1.c4)) NOT BETWEEN (('-992093611', rt2.c1, rt2.c2)) AND ((rt1.c2, rt1.c1, rt2.c0))))))OR((+ (rt1.c4)))))AND(x'')))AND(((('-1659679499')) NOT BETWEEN ((rt2.c1)) AND ((rt2.c2)))))) ORDER BY LAST_INSERT_ROWID();
SELECT ALL COUNT(*) FROM rt2, rt0 WHERE (((NULLIF(DISTINCT NULL, rt0.c0))-(((((rt0.c1)AND(rt2.c0)))OR(rt0.c3))))) ORDER BY ((((rt2.c0)AND(rt2.c2)))OR(rt2.c1)) COLLATE NOCASE DESC  NULLS FIRST, ((((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt2.c0)))))>=(((rt2.c0 IN ()))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT NULL, rt0.c0))-(((((rt0.c1)AND(rt2.c0)))OR(rt0.c3))))) IS TRUE)  as count FROM rt2, rt0 ORDER BY ((((rt2.c0)AND(rt2.c2)))OR(rt2.c1)) COLLATE NOCASE DESC  NULLS FIRST, ((((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt2.c0)))))>=(((rt2.c0 IN ()))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt2, rt0 WHERE (((NULLIF(DISTINCT NULL, rt0.c0))-(((((rt0.c1)AND(rt2.c0)))OR(rt0.c3))))) ORDER BY ((((rt2.c0)AND(rt2.c2)))OR(rt2.c1)) COLLATE NOCASE DESC  NULLS FIRST, ((((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt2.c0)))))>=(((rt2.c0 IN ()))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT NULL, rt0.c0))-(((((rt0.c1)AND(rt2.c0)))OR(rt0.c3))))) IS TRUE)  as count FROM rt2, rt0 ORDER BY ((((rt2.c0)AND(rt2.c2)))OR(rt2.c1)) COLLATE NOCASE DESC  NULLS FIRST, ((((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt2.c0)))))>=(((rt2.c0 IN ()))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt2, rt0 WHERE (((NULLIF(DISTINCT NULL, rt0.c0))-(((((rt0.c1)AND(rt2.c0)))OR(rt0.c3))))) ORDER BY ((((rt2.c0)AND(rt2.c2)))OR(rt2.c1)) COLLATE NOCASE DESC  NULLS FIRST, ((((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt2.c0)))))>=(((rt2.c0 IN ()))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, rt2 NOT INDEXED WHERE (((((((rt2.c2, rt2.c2, rt2.c1))<((rt2.c2, rt2.c0, rt2.c0)))))>((rt2.c1)))) ORDER BY ((((rt2.c2)<=(rt1.c1))) BETWEEN (CAST(rt2.c0 AS NUMERIC)) AND (((rt1.c0) NOT NULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt2.c2, rt2.c2, rt2.c1))<((rt2.c2, rt2.c0, rt2.c0)))))>((rt2.c1)))) IS TRUE)  as count FROM rt1, rt2 ORDER BY ((((rt2.c2)<=(rt1.c1))) BETWEEN (CAST(rt2.c0 AS NUMERIC)) AND (((rt1.c0) NOT NULL))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt2 NOT INDEXED WHERE (((((((rt2.c2, rt2.c2, rt2.c1))<((rt2.c2, rt2.c0, rt2.c0)))))>((rt2.c1)))) ORDER BY ((((rt2.c2)<=(rt1.c1))) BETWEEN (CAST(rt2.c0 AS NUMERIC)) AND (((rt1.c0) NOT NULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt2.c2, rt2.c2, rt2.c1))<((rt2.c2, rt2.c0, rt2.c0)))))>((rt2.c1)))) IS TRUE)  as count FROM rt1, rt2 ORDER BY ((((rt2.c2)<=(rt1.c1))) BETWEEN (CAST(rt2.c0 AS NUMERIC)) AND (((rt1.c0) NOT NULL))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt2 NOT INDEXED WHERE (((((((rt2.c2, rt2.c2, rt2.c1))<((rt2.c2, rt2.c0, rt2.c0)))))>((rt2.c1)))) ORDER BY ((((rt2.c2)<=(rt1.c1))) BETWEEN (CAST(rt2.c0 AS NUMERIC)) AND (((rt1.c0) NOT NULL))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CASE WHEN ((rt1.c2)<=(rt1.c4)) THEN rt0.c2 COLLATE NOCASE WHEN ((rt1.c3)IS NOT('1994324130')) THEN (((rt1.c1)) NOT BETWEEN ((rt1.c4)) AND ((rt0.c2))) WHEN CAST(rt1.c4 AS INTEGER) THEN '-52042515' END) ORDER BY LIKE(((rt1.c1)>(rt0.c1)), CAST(rt0.c0 AS TEXT)), (((~ (rt0.c1))) NOT BETWEEN (rt1.c2 COLLATE RTRIM) AND (CAST(rt0.c3 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c2)<=(rt1.c4)) THEN rt0.c2 COLLATE NOCASE WHEN ((rt1.c3)IS NOT('1994324130')) THEN (((rt1.c1)) NOT BETWEEN ((rt1.c4)) AND ((rt0.c2))) WHEN CAST(rt1.c4 AS INTEGER) THEN '-52042515' END) IS TRUE)  as count FROM rt0, rt1 ORDER BY LIKE(((rt1.c1)>(rt0.c1)), CAST(rt0.c0 AS TEXT)), (((~ (rt0.c1))) NOT BETWEEN (rt1.c2 COLLATE RTRIM) AND (CAST(rt0.c3 AS BLOB))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CASE WHEN ((rt1.c2)<=(rt1.c4)) THEN rt0.c2 COLLATE NOCASE WHEN ((rt1.c3)IS NOT('1994324130')) THEN (((rt1.c1)) NOT BETWEEN ((rt1.c4)) AND ((rt0.c2))) WHEN CAST(rt1.c4 AS INTEGER) THEN '-52042515' END) ORDER BY LIKE(((rt1.c1)>(rt0.c1)), CAST(rt0.c0 AS TEXT)), (((~ (rt0.c1))) NOT BETWEEN (rt1.c2 COLLATE RTRIM) AND (CAST(rt0.c3 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c2)<=(rt1.c4)) THEN rt0.c2 COLLATE NOCASE WHEN ((rt1.c3)IS NOT('1994324130')) THEN (((rt1.c1)) NOT BETWEEN ((rt1.c4)) AND ((rt0.c2))) WHEN CAST(rt1.c4 AS INTEGER) THEN '-52042515' END) IS TRUE)  as count FROM rt0, rt1 ORDER BY LIKE(((rt1.c1)>(rt0.c1)), CAST(rt0.c0 AS TEXT)), (((~ (rt0.c1))) NOT BETWEEN (rt1.c2 COLLATE RTRIM) AND (CAST(rt0.c3 AS BLOB))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CASE WHEN ((rt1.c2)<=(rt1.c4)) THEN rt0.c2 COLLATE NOCASE WHEN ((rt1.c3)IS NOT('1994324130')) THEN (((rt1.c1)) NOT BETWEEN ((rt1.c4)) AND ((rt0.c2))) WHEN CAST(rt1.c4 AS INTEGER) THEN '-52042515' END) ORDER BY LIKE(((rt1.c1)>(rt0.c1)), CAST(rt0.c0 AS TEXT)), (((~ (rt0.c1))) NOT BETWEEN (rt1.c2 COLLATE RTRIM) AND (CAST(rt0.c3 AS BLOB)));
SELECT * FROM rt0 WHERE (CAST(rt0.c2 AS TEXT)) ORDER BY rt0.c2, CAST(((rt0.c3)&(rt0.c1)) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2, CAST(((rt0.c3)&(rt0.c1)) AS BLOB) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (CAST(rt0.c2 AS TEXT)) ORDER BY rt0.c2, CAST(((rt0.c3)&(rt0.c1)) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2, CAST(((rt0.c3)&(rt0.c1)) AS BLOB) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (CAST(rt0.c2 AS TEXT)) ORDER BY rt0.c2, CAST(((rt0.c3)&(rt0.c1)) AS BLOB) ASC  NULLS LAST;
SELECT * FROM rt1 WHERE (((((rt1.c4))>=((rt1.c0))) IN ('_\nᬬPDbs{''', (rt1.c0 IN (rt1.c4, rt1.c0))))) ORDER BY NULLIF(((((rt1.c3)AND(rt1.c2)))AND(rt1.c0)), (((0.9020205764873744)) BETWEEN ((rt1.c0)) AND ((rt1.c4))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4))>=((rt1.c0))) IN ('_\nᬬPDbs{''', (rt1.c0 IN (rt1.c4, rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY NULLIF(((((rt1.c3)AND(rt1.c2)))AND(rt1.c0)), (((0.9020205764873744)) BETWEEN ((rt1.c0)) AND ((rt1.c4))))  NULLS FIRST);
SELECT * FROM rt1 WHERE (((((rt1.c4))>=((rt1.c0))) IN ('_\nᬬPDbs{''', (rt1.c0 IN (rt1.c4, rt1.c0))))) ORDER BY NULLIF(((((rt1.c3)AND(rt1.c2)))AND(rt1.c0)), (((0.9020205764873744)) BETWEEN ((rt1.c0)) AND ((rt1.c4))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4))>=((rt1.c0))) IN ('_\nᬬPDbs{''', (rt1.c0 IN (rt1.c4, rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY NULLIF(((((rt1.c3)AND(rt1.c2)))AND(rt1.c0)), (((0.9020205764873744)) BETWEEN ((rt1.c0)) AND ((rt1.c4))))  NULLS FIRST);
SELECT * FROM rt1 WHERE (((((rt1.c4))>=((rt1.c0))) IN ('_\nᬬPDbs{''', (rt1.c0 IN (rt1.c4, rt1.c0))))) ORDER BY NULLIF(((((rt1.c3)AND(rt1.c2)))AND(rt1.c0)), (((0.9020205764873744)) BETWEEN ((rt1.c0)) AND ((rt1.c4))))  NULLS FIRST;
SELECT * FROM rt1 WHERE (((rt1.c4 COLLATE NOCASE) IS FALSE)) ORDER BY ((((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c4))) NOT NULL), ((- (rt1.c1)) IN ()) DESC  NULLS LAST, UNLIKELY(CAST(rt1.c4 AS REAL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c4 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c4))) NOT NULL), ((- (rt1.c1)) IN ()) DESC  NULLS LAST, UNLIKELY(CAST(rt1.c4 AS REAL))  NULLS LAST);
SELECT * FROM rt1 WHERE (((rt1.c4 COLLATE NOCASE) IS FALSE)) ORDER BY ((((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c4))) NOT NULL), ((- (rt1.c1)) IN ()) DESC  NULLS LAST, UNLIKELY(CAST(rt1.c4 AS REAL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c4 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c4))) NOT NULL), ((- (rt1.c1)) IN ()) DESC  NULLS LAST, UNLIKELY(CAST(rt1.c4 AS REAL))  NULLS LAST);
SELECT * FROM rt1 WHERE (((rt1.c4 COLLATE NOCASE) IS FALSE)) ORDER BY ((((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c4))) NOT NULL), ((- (rt1.c1)) IN ()) DESC  NULLS LAST, UNLIKELY(CAST(rt1.c4 AS REAL))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 INNER JOIN rt2 ON CASE WHEN ((rt1.c0)IS(rt2.c2)) THEN CASE WHEN rt2.c0 THEN rt1.c1 ELSE rt2.c2 END WHEN (rt2.c2 IN ()) THEN ((rt2.c0) NOT BETWEEN (rt1.c1) AND (rt1.c4)) WHEN (rt1.c2 IN ()) THEN (+ (rt1.c3)) WHEN CASE WHEN '\nP' THEN rt1.c2 ELSE rt2.c0 END THEN ((rt1.c2) IS TRUE) WHEN ((((((((rt1.c4)AND(rt1.c2)))AND(rt1.c4)))AND(rt1.c0)))AND(rt1.c2)) THEN (~ (rt1.c0)) ELSE NULL END WHERE (ABS((((rt2.c1, rt1.c1, 'G'))>=(('', rt1.c0, rt2.c2)))));
SELECT SUM(count) FROM (SELECT ((ABS((((rt2.c1, rt1.c1, 'G'))>=(('', rt1.c0, rt2.c2))))) IS TRUE)  as count FROM rt1 INNER JOIN rt2 ON CASE WHEN ((rt1.c0)IS(rt2.c2)) THEN CASE WHEN rt2.c0 THEN rt1.c1 ELSE rt2.c2 END WHEN (rt2.c2 IN ()) THEN ((rt2.c0) NOT BETWEEN (rt1.c1) AND (rt1.c4)) WHEN (rt1.c2 IN ()) THEN (+ (rt1.c3)) WHEN CASE WHEN '\nP' THEN rt1.c2 ELSE rt2.c0 END THEN ((rt1.c2) IS TRUE) WHEN ((((((((rt1.c4)AND(rt1.c2)))AND(rt1.c4)))AND(rt1.c0)))AND(rt1.c2)) THEN (~ (rt1.c0)) ELSE NULL END);
SELECT ALL COUNT(*) FROM rt1 INNER JOIN rt2 ON CASE WHEN ((rt1.c0)IS(rt2.c2)) THEN CASE WHEN rt2.c0 THEN rt1.c1 ELSE rt2.c2 END WHEN (rt2.c2 IN ()) THEN ((rt2.c0) NOT BETWEEN (rt1.c1) AND (rt1.c4)) WHEN (rt1.c2 IN ()) THEN (+ (rt1.c3)) WHEN CASE WHEN '\nP' THEN rt1.c2 ELSE rt2.c0 END THEN ((rt1.c2) IS TRUE) WHEN ((((((((rt1.c4)AND(rt1.c2)))AND(rt1.c4)))AND(rt1.c0)))AND(rt1.c2)) THEN (~ (rt1.c0)) ELSE NULL END WHERE (ABS((((rt2.c1, rt1.c1, 'G'))>=(('', rt1.c0, rt2.c2)))));
SELECT SUM(count) FROM (SELECT ((ABS((((rt2.c1, rt1.c1, 'G'))>=(('', rt1.c0, rt2.c2))))) IS TRUE)  as count FROM rt1 INNER JOIN rt2 ON CASE WHEN ((rt1.c0)IS(rt2.c2)) THEN CASE WHEN rt2.c0 THEN rt1.c1 ELSE rt2.c2 END WHEN (rt2.c2 IN ()) THEN ((rt2.c0) NOT BETWEEN (rt1.c1) AND (rt1.c4)) WHEN (rt1.c2 IN ()) THEN (+ (rt1.c3)) WHEN CASE WHEN '\nP' THEN rt1.c2 ELSE rt2.c0 END THEN ((rt1.c2) IS TRUE) WHEN ((((((((rt1.c4)AND(rt1.c2)))AND(rt1.c4)))AND(rt1.c0)))AND(rt1.c2)) THEN (~ (rt1.c0)) ELSE NULL END);
SELECT ALL COUNT(*) FROM rt1 INNER JOIN rt2 ON CASE WHEN ((rt1.c0)IS(rt2.c2)) THEN CASE WHEN rt2.c0 THEN rt1.c1 ELSE rt2.c2 END WHEN (rt2.c2 IN ()) THEN ((rt2.c0) NOT BETWEEN (rt1.c1) AND (rt1.c4)) WHEN (rt1.c2 IN ()) THEN (+ (rt1.c3)) WHEN CASE WHEN '\nP' THEN rt1.c2 ELSE rt2.c0 END THEN ((rt1.c2) IS TRUE) WHEN ((((((((rt1.c4)AND(rt1.c2)))AND(rt1.c4)))AND(rt1.c0)))AND(rt1.c2)) THEN (~ (rt1.c0)) ELSE NULL END WHERE (ABS((((rt2.c1, rt1.c1, 'G'))>=(('', rt1.c0, rt2.c2)))));
SELECT ALL * FROM rt0 INNER JOIN rt2 ON ((rt0.c0) IS FALSE) COLLATE RTRIM FULL OUTER JOIN rt1 ON ((((((rt1.c1)IS(rt1.c1)))OR(rt2.c0)))AND(CASE WHEN rt2.c0 THEN rt1.c1 ELSE x'' END)) WHERE (((((((rt1.c4) ISNULL))OR(((rt0.c3)+(rt1.c0)))))AND((rt1.c0 IN (rt1.c3, 'QCC<Dt'))))) ORDER BY (x'9ff6' IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c4) ISNULL))OR(((rt0.c3)+(rt1.c0)))))AND((rt1.c0 IN (rt1.c3, 'QCC<Dt'))))) IS TRUE)  as count FROM rt0 INNER JOIN rt2 ON ((rt0.c0) IS FALSE) COLLATE RTRIM FULL OUTER JOIN rt1 ON ((((((rt1.c1)IS(rt1.c1)))OR(rt2.c0)))AND(CASE WHEN rt2.c0 THEN rt1.c1 ELSE x'' END)) ORDER BY (x'9ff6' IN ())  NULLS FIRST);
SELECT ALL * FROM rt0 INNER JOIN rt2 ON ((rt0.c0) IS FALSE) COLLATE RTRIM FULL OUTER JOIN rt1 ON ((((((rt1.c1)IS(rt1.c1)))OR(rt2.c0)))AND(CASE WHEN rt2.c0 THEN rt1.c1 ELSE x'' END)) WHERE (((((((rt1.c4) ISNULL))OR(((rt0.c3)+(rt1.c0)))))AND((rt1.c0 IN (rt1.c3, 'QCC<Dt'))))) ORDER BY (x'9ff6' IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c4) ISNULL))OR(((rt0.c3)+(rt1.c0)))))AND((rt1.c0 IN (rt1.c3, 'QCC<Dt'))))) IS TRUE)  as count FROM rt0 INNER JOIN rt2 ON ((rt0.c0) IS FALSE) COLLATE RTRIM FULL OUTER JOIN rt1 ON ((((((rt1.c1)IS(rt1.c1)))OR(rt2.c0)))AND(CASE WHEN rt2.c0 THEN rt1.c1 ELSE x'' END)) ORDER BY (x'9ff6' IN ())  NULLS FIRST);
SELECT ALL * FROM rt0 INNER JOIN rt2 ON ((rt0.c0) IS FALSE) COLLATE RTRIM FULL OUTER JOIN rt1 ON ((((((rt1.c1)IS(rt1.c1)))OR(rt2.c0)))AND(CASE WHEN rt2.c0 THEN rt1.c1 ELSE x'' END)) WHERE (((((((rt1.c4) ISNULL))OR(((rt0.c3)+(rt1.c0)))))AND((rt1.c0 IN (rt1.c3, 'QCC<Dt'))))) ORDER BY (x'9ff6' IN ())  NULLS FIRST;
SELECT * FROM rt0 NATURAL JOIN rt2 WHERE ('1864997047') ORDER BY ((((((((((rt0.c1) ISNULL))AND(CASE WHEN rt2.c2 THEN rt0.c1 ELSE rt2.c1 END)))OR(((((rt0.c2)OR(rt2.c1)))AND(0Xffffffffc04d245b)))))AND((rt0.c1 IN (rt2.c0)))))OR(((((rt2.c1)OR(0xffffffff8a665045)))AND(rt2.c1)))) ASC  NULLS FIRST, ((rt0.c0)IS NOT(rt0.c3)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('1864997047') IS TRUE)  as count FROM rt0 NATURAL JOIN rt2 ORDER BY ((((((((((rt0.c1) ISNULL))AND(CASE WHEN rt2.c2 THEN rt0.c1 ELSE rt2.c1 END)))OR(((((rt0.c2)OR(rt2.c1)))AND(0Xffffffffc04d245b)))))AND((rt0.c1 IN (rt2.c0)))))OR(((((rt2.c1)OR(0xffffffff8a665045)))AND(rt2.c1)))) ASC  NULLS FIRST, ((rt0.c0)IS NOT(rt0.c3)) COLLATE RTRIM  NULLS LAST);
SELECT * FROM rt0 NATURAL JOIN rt2 WHERE ('1864997047') ORDER BY ((((((((((rt0.c1) ISNULL))AND(CASE WHEN rt2.c2 THEN rt0.c1 ELSE rt2.c1 END)))OR(((((rt0.c2)OR(rt2.c1)))AND(0Xffffffffc04d245b)))))AND((rt0.c1 IN (rt2.c0)))))OR(((((rt2.c1)OR(0xffffffff8a665045)))AND(rt2.c1)))) ASC  NULLS FIRST, ((rt0.c0)IS NOT(rt0.c3)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('1864997047') IS TRUE)  as count FROM rt0 NATURAL JOIN rt2 ORDER BY ((((((((((rt0.c1) ISNULL))AND(CASE WHEN rt2.c2 THEN rt0.c1 ELSE rt2.c1 END)))OR(((((rt0.c2)OR(rt2.c1)))AND(0Xffffffffc04d245b)))))AND((rt0.c1 IN (rt2.c0)))))OR(((((rt2.c1)OR(0xffffffff8a665045)))AND(rt2.c1)))) ASC  NULLS FIRST, ((rt0.c0)IS NOT(rt0.c3)) COLLATE RTRIM  NULLS LAST);
SELECT * FROM rt0 NATURAL JOIN rt2 WHERE ('1864997047') ORDER BY ((((((((((rt0.c1) ISNULL))AND(CASE WHEN rt2.c2 THEN rt0.c1 ELSE rt2.c1 END)))OR(((((rt0.c2)OR(rt2.c1)))AND(0Xffffffffc04d245b)))))AND((rt0.c1 IN (rt2.c0)))))OR(((((rt2.c1)OR(0xffffffff8a665045)))AND(rt2.c1)))) ASC  NULLS FIRST, ((rt0.c0)IS NOT(rt0.c3)) COLLATE RTRIM  NULLS LAST;
SELECT COUNT(*) FROM rt0, rt2, rt1 WHERE (((CAST(rt0.c1 AS REAL))*(((rt1.c0)GLOB(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS REAL))*(((rt1.c0)GLOB(rt0.c0))))) IS TRUE)  as count FROM rt0, rt2, rt1);
SELECT COUNT(*) FROM rt0, rt2, rt1 WHERE (((CAST(rt0.c1 AS REAL))*(((rt1.c0)GLOB(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS REAL))*(((rt1.c0)GLOB(rt0.c0))))) IS TRUE)  as count FROM rt0, rt2, rt1);
SELECT COUNT(*) FROM rt0, rt2, rt1 WHERE (((CAST(rt0.c1 AS REAL))*(((rt1.c0)GLOB(rt0.c0)))));
SELECT COUNT(*) FROM rt0, rt2 INNER JOIN rt1 ON (((((rt1.c2 IN ()))AND(IFNULL(rt1.c4, rt0.c2))))AND(rt1.c3 COLLATE BINARY)) WHERE ((- (((rt1.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((- (((rt1.c2) NOTNULL)))) IS TRUE)  as count FROM rt0, rt2 INNER JOIN rt1 ON (((((rt1.c2 IN ()))AND(IFNULL(rt1.c4, rt0.c2))))AND(rt1.c3 COLLATE BINARY)));
SELECT COUNT(*) FROM rt0, rt2 INNER JOIN rt1 ON (((((rt1.c2 IN ()))AND(IFNULL(rt1.c4, rt0.c2))))AND(rt1.c3 COLLATE BINARY)) WHERE ((- (((rt1.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((- (((rt1.c2) NOTNULL)))) IS TRUE)  as count FROM rt0, rt2 INNER JOIN rt1 ON (((((rt1.c2 IN ()))AND(IFNULL(rt1.c4, rt0.c2))))AND(rt1.c3 COLLATE BINARY)));
SELECT COUNT(*) FROM rt0, rt2 INNER JOIN rt1 ON (((((rt1.c2 IN ()))AND(IFNULL(rt1.c4, rt0.c2))))AND(rt1.c3 COLLATE BINARY)) WHERE ((- (((rt1.c2) NOTNULL))));
SELECT ALL * FROM rt0, rt2 WHERE (rt2.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt2.c2 COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt2);
SELECT ALL * FROM rt0, rt2 WHERE (rt2.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt2.c2 COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt2);
SELECT ALL * FROM rt0, rt2 WHERE (rt2.c2 COLLATE NOCASE);
SELECT COUNT(*) FROM rt1 WHERE ((CAST(rt1.c4 AS NUMERIC) IN ())) ORDER BY ((('*YAEꍒ' COLLATE NOCASE, UNLIKELY(0X4418e1be), ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2))))<=((CAST(rt1.c3 AS REAL), ((rt1.c3)>(rt1.c4)), (rt1.c4 IN (rt1.c0, rt1.c3))))) DESC  NULLS FIRST, (((((((((((rt1.c1, rt1.c0, rt1.c2)) BETWEEN ((rt1.c3, rt1.c4, rt1.c0)) AND ((rt1.c1, rt1.c3, rt1.c2))))AND(((((rt1.c0)AND(rt1.c2)))OR(rt1.c2)))))AND((((rt1.c0, rt1.c0, rt1.c4))<(('q8\rbk', rt1.c2, rt1.c4))))))AND(((rt1.c2)%(rt1.c4)))))AND(CAST(rt1.c3 AS BLOB))) DESC  NULLS FIRST, ((rt1.c2 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt1.c4 AS NUMERIC) IN ())) IS TRUE)  as count FROM rt1 ORDER BY ((('*YAEꍒ' COLLATE NOCASE, UNLIKELY(0X4418e1be), ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2))))<=((CAST(rt1.c3 AS REAL), ((rt1.c3)>(rt1.c4)), (rt1.c4 IN (rt1.c0, rt1.c3))))) DESC  NULLS FIRST, (((((((((((rt1.c1, rt1.c0, rt1.c2)) BETWEEN ((rt1.c3, rt1.c4, rt1.c0)) AND ((rt1.c1, rt1.c3, rt1.c2))))AND(((((rt1.c0)AND(rt1.c2)))OR(rt1.c2)))))AND((((rt1.c0, rt1.c0, rt1.c4))<(('q8\rbk', rt1.c2, rt1.c4))))))AND(((rt1.c2)%(rt1.c4)))))AND(CAST(rt1.c3 AS BLOB))) DESC  NULLS FIRST, ((rt1.c2 IN ()) IN ()));
SELECT COUNT(*) FROM rt1 WHERE ((CAST(rt1.c4 AS NUMERIC) IN ())) ORDER BY ((('*YAEꍒ' COLLATE NOCASE, UNLIKELY(0X4418e1be), ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2))))<=((CAST(rt1.c3 AS REAL), ((rt1.c3)>(rt1.c4)), (rt1.c4 IN (rt1.c0, rt1.c3))))) DESC  NULLS FIRST, (((((((((((rt1.c1, rt1.c0, rt1.c2)) BETWEEN ((rt1.c3, rt1.c4, rt1.c0)) AND ((rt1.c1, rt1.c3, rt1.c2))))AND(((((rt1.c0)AND(rt1.c2)))OR(rt1.c2)))))AND((((rt1.c0, rt1.c0, rt1.c4))<(('q8\rbk', rt1.c2, rt1.c4))))))AND(((rt1.c2)%(rt1.c4)))))AND(CAST(rt1.c3 AS BLOB))) DESC  NULLS FIRST, ((rt1.c2 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt1.c4 AS NUMERIC) IN ())) IS TRUE)  as count FROM rt1 ORDER BY ((('*YAEꍒ' COLLATE NOCASE, UNLIKELY(0X4418e1be), ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2))))<=((CAST(rt1.c3 AS REAL), ((rt1.c3)>(rt1.c4)), (rt1.c4 IN (rt1.c0, rt1.c3))))) DESC  NULLS FIRST, (((((((((((rt1.c1, rt1.c0, rt1.c2)) BETWEEN ((rt1.c3, rt1.c4, rt1.c0)) AND ((rt1.c1, rt1.c3, rt1.c2))))AND(((((rt1.c0)AND(rt1.c2)))OR(rt1.c2)))))AND((((rt1.c0, rt1.c0, rt1.c4))<(('q8\rbk', rt1.c2, rt1.c4))))))AND(((rt1.c2)%(rt1.c4)))))AND(CAST(rt1.c3 AS BLOB))) DESC  NULLS FIRST, ((rt1.c2 IN ()) IN ()));
SELECT COUNT(*) FROM rt1 WHERE ((CAST(rt1.c4 AS NUMERIC) IN ())) ORDER BY ((('*YAEꍒ' COLLATE NOCASE, UNLIKELY(0X4418e1be), ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2))))<=((CAST(rt1.c3 AS REAL), ((rt1.c3)>(rt1.c4)), (rt1.c4 IN (rt1.c0, rt1.c3))))) DESC  NULLS FIRST, (((((((((((rt1.c1, rt1.c0, rt1.c2)) BETWEEN ((rt1.c3, rt1.c4, rt1.c0)) AND ((rt1.c1, rt1.c3, rt1.c2))))AND(((((rt1.c0)AND(rt1.c2)))OR(rt1.c2)))))AND((((rt1.c0, rt1.c0, rt1.c4))<(('q8\rbk', rt1.c2, rt1.c4))))))AND(((rt1.c2)%(rt1.c4)))))AND(CAST(rt1.c3 AS BLOB))) DESC  NULLS FIRST, ((rt1.c2 IN ()) IN ());
SELECT ALL * FROM rt0, rt2 WHERE (((((((rt0.c1)>=(rt2.c2)))AND(CAST(rt0.c2 AS INTEGER))))OR((((rt2.c0)) NOT BETWEEN ((rt2.c0)) AND ((rt2.c0)))))) ORDER BY x'e2e9' ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)>=(rt2.c2)))AND(CAST(rt0.c2 AS INTEGER))))OR((((rt2.c0)) NOT BETWEEN ((rt2.c0)) AND ((rt2.c0)))))) IS TRUE)  as count FROM rt0, rt2 ORDER BY x'e2e9' ASC);
SELECT ALL * FROM rt0, rt2 WHERE (((((((rt0.c1)>=(rt2.c2)))AND(CAST(rt0.c2 AS INTEGER))))OR((((rt2.c0)) NOT BETWEEN ((rt2.c0)) AND ((rt2.c0)))))) ORDER BY x'e2e9' ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)>=(rt2.c2)))AND(CAST(rt0.c2 AS INTEGER))))OR((((rt2.c0)) NOT BETWEEN ((rt2.c0)) AND ((rt2.c0)))))) IS TRUE)  as count FROM rt0, rt2 ORDER BY x'e2e9' ASC);
SELECT ALL * FROM rt0, rt2 WHERE (((((((rt0.c1)>=(rt2.c2)))AND(CAST(rt0.c2 AS INTEGER))))OR((((rt2.c0)) NOT BETWEEN ((rt2.c0)) AND ((rt2.c0)))))) ORDER BY x'e2e9' ASC;
SELECT ALL * FROM rt2, rt0, rt1 WHERE ((+ (ABS(DISTINCT rt2.c1))));
SELECT SUM(count) FROM (SELECT (((+ (ABS(DISTINCT rt2.c1)))) IS TRUE)  as count FROM rt2, rt0, rt1);
SELECT ALL * FROM rt2, rt0, rt1 WHERE ((+ (ABS(DISTINCT rt2.c1))));
SELECT SUM(count) FROM (SELECT (((+ (ABS(DISTINCT rt2.c1)))) IS TRUE)  as count FROM rt2, rt0, rt1);
SELECT ALL * FROM rt2, rt0, rt1 WHERE ((+ (ABS(DISTINCT rt2.c1))));
SELECT ALL * FROM rt2, rt1, rt0 WHERE (rt1.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0 COLLATE RTRIM) IS TRUE)  as count FROM rt2 NOT INDEXED, rt1, rt0);
SELECT ALL * FROM rt2, rt1, rt0 WHERE (rt1.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0 COLLATE RTRIM) IS TRUE)  as count FROM rt2 NOT INDEXED, rt1, rt0);
SELECT ALL * FROM rt2, rt1, rt0 WHERE (rt1.c0 COLLATE RTRIM);
SELECT * FROM rt0, rt2 WHERE ((+ (((rt0.c3) IS FALSE)))) ORDER BY CAST(rt0.c2 AS BLOB) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c3) IS FALSE)))) IS TRUE)  as count FROM rt0, rt2 ORDER BY CAST(rt0.c2 AS BLOB) COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM rt0, rt2 WHERE ((+ (((rt0.c3) IS FALSE)))) ORDER BY CAST(rt0.c2 AS BLOB) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c3) IS FALSE)))) IS TRUE)  as count FROM rt0, rt2 ORDER BY CAST(rt0.c2 AS BLOB) COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM rt0, rt2 WHERE ((+ (((rt0.c3) IS FALSE)))) ORDER BY CAST(rt0.c2 AS BLOB) COLLATE RTRIM ASC  NULLS LAST;
SELECT * FROM rt1, rt0, rt2 WHERE (((((rt1.c2) ISNULL))!=((((rt2.c1))==((rt2.c1)))))) ORDER BY (((rt0.c0 IN (rt1.c4)))<(CASE WHEN rt1.c1 THEN rt2.c1 ELSE 2056228752 END)) ASC, ((rt0.c0) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) ISNULL))<>((((rt2.c1))==((rt2.c1)))))) IS TRUE)  as count FROM rt1, rt0, rt2 ORDER BY (((rt0.c0 IN (rt1.c4)))<(CASE WHEN rt1.c1 THEN rt2.c1 ELSE 2056228752 END)) ASC, ((rt0.c0) NOTNULL)  NULLS FIRST);
SELECT * FROM rt1, rt0, rt2 WHERE (((((rt1.c2) ISNULL))!=((((rt2.c1))==((rt2.c1)))))) ORDER BY (((rt0.c0 IN (rt1.c4)))<(CASE WHEN rt1.c1 THEN rt2.c1 ELSE 2056228752 END)) ASC, ((rt0.c0) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) ISNULL))<>((((rt2.c1))==((rt2.c1)))))) IS TRUE)  as count FROM rt1, rt0, rt2 ORDER BY (((rt0.c0 IN (rt1.c4)))<(CASE WHEN rt1.c1 THEN rt2.c1 ELSE 2056228752 END)) ASC, ((rt0.c0) NOTNULL)  NULLS FIRST);
SELECT * FROM rt1, rt0, rt2 WHERE (((((rt1.c2) ISNULL))!=((((rt2.c1))==((rt2.c1)))))) ORDER BY (((rt0.c0 IN (rt1.c4)))<(CASE WHEN rt1.c1 THEN rt2.c1 ELSE 2056228752 END)) ASC, ((rt0.c0) NOTNULL)  NULLS FIRST;
SELECT * FROM rt2 WHERE (((CASE WHEN rt2.c0 THEN rt2.c0 WHEN rt2.c0 THEN rt2.c0 WHEN rt2.c2 THEN rt2.c2 WHEN rt2.c2 THEN rt2.c1 WHEN rt2.c2 THEN rt2.c0 END)!=(rt2.c0)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt2.c0 THEN rt2.c0 WHEN rt2.c0 THEN rt2.c0 WHEN rt2.c2 THEN rt2.c2 WHEN rt2.c2 THEN rt2.c1 WHEN rt2.c2 THEN rt2.c0 END)!=(rt2.c0))) IS TRUE)  as count FROM rt2);
SELECT * FROM rt2 WHERE (((CASE WHEN rt2.c0 THEN rt2.c0 WHEN rt2.c0 THEN rt2.c0 WHEN rt2.c2 THEN rt2.c2 WHEN rt2.c2 THEN rt2.c1 WHEN rt2.c2 THEN rt2.c0 END)!=(rt2.c0)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt2.c0 THEN rt2.c0 WHEN rt2.c0 THEN rt2.c0 WHEN rt2.c2 THEN rt2.c2 WHEN rt2.c2 THEN rt2.c1 WHEN rt2.c2 THEN rt2.c0 END)!=(rt2.c0))) IS TRUE)  as count FROM rt2);
SELECT * FROM rt2 WHERE (((CASE WHEN rt2.c0 THEN rt2.c0 WHEN rt2.c0 THEN rt2.c0 WHEN rt2.c2 THEN rt2.c2 WHEN rt2.c2 THEN rt2.c1 WHEN rt2.c2 THEN rt2.c0 END)!=(rt2.c0)));
SELECT ALL COUNT(*) FROM rt2, rt0, rt1 WHERE ((rt1.c3 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((rt1.c3 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt2, rt0, rt1);
SELECT ALL COUNT(*) FROM rt2, rt0, rt1 WHERE ((rt1.c3 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((rt1.c3 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt2, rt0, rt1);
SELECT ALL COUNT(*) FROM rt2, rt0, rt1 WHERE ((rt1.c3 IN ()) COLLATE RTRIM);
SELECT COUNT(*) FROM rt2 RIGHT OUTER JOIN rt1 ON ((((rt2.c1)>>(rt1.c4)))<(CASE rt2.c1  WHEN rt1.c4 THEN rt1.c0 ELSE rt2.c2 END)) RIGHT OUTER JOIN rt0 ON (((rt0.c0 COLLATE RTRIM))<((CASE rt2.c0  WHEN rt0.c1 THEN rt2.c2 END))) WHERE ((~ (CAST(rt0.c0 AS BLOB)))) ORDER BY rt1.c0 ASC;
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt2 RIGHT OUTER JOIN rt1 ON ((((rt2.c1)>>(rt1.c4)))<(CASE rt2.c1  WHEN rt1.c4 THEN rt1.c0 ELSE rt2.c2 END)) RIGHT OUTER JOIN rt0 ON (((rt0.c0 COLLATE RTRIM))<((CASE rt2.c0  WHEN rt0.c1 THEN rt2.c2 END))) ORDER BY rt1.c0 ASC);
SELECT COUNT(*) FROM rt2 RIGHT OUTER JOIN rt1 ON ((((rt2.c1)>>(rt1.c4)))<(CASE rt2.c1  WHEN rt1.c4 THEN rt1.c0 ELSE rt2.c2 END)) RIGHT OUTER JOIN rt0 ON (((rt0.c0 COLLATE RTRIM))<((CASE rt2.c0  WHEN rt0.c1 THEN rt2.c2 END))) WHERE ((~ (CAST(rt0.c0 AS BLOB)))) ORDER BY rt1.c0 ASC;
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt2 RIGHT OUTER JOIN rt1 ON ((((rt2.c1)>>(rt1.c4)))<(CASE rt2.c1  WHEN rt1.c4 THEN rt1.c0 ELSE rt2.c2 END)) RIGHT OUTER JOIN rt0 ON (((rt0.c0 COLLATE RTRIM))<((CASE rt2.c0  WHEN rt0.c1 THEN rt2.c2 END))) ORDER BY rt1.c0 ASC);
SELECT COUNT(*) FROM rt2 RIGHT OUTER JOIN rt1 ON ((((rt2.c1)>>(rt1.c4)))<(CASE rt2.c1  WHEN rt1.c4 THEN rt1.c0 ELSE rt2.c2 END)) RIGHT OUTER JOIN rt0 ON (((rt0.c0 COLLATE RTRIM))<((CASE rt2.c0  WHEN rt0.c1 THEN rt2.c2 END))) WHERE ((~ (CAST(rt0.c0 AS BLOB)))) ORDER BY rt1.c0 ASC;
SELECT * FROM rt0, rt1 WHERE ((((rt0.c3)) NOT BETWEEN ((NULL)) AND (((((rt0.c1, rt1.c2, ''))>((rt0.c0, '', rt1.c0))))))) ORDER BY (((rt1.c0))>((TYPEOF(rt1.c3)))) ASC  NULLS FIRST, CASE ((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c3))  WHEN ((rt1.c3) IS TRUE) THEN CAST(rt0.c1 AS TEXT) ELSE (('') ISNULL) END DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) NOT BETWEEN ((NULL)) AND (((((rt0.c1, rt1.c2, ''))>((rt0.c0, '', rt1.c0))))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt1.c0))>((TYPEOF(rt1.c3)))) ASC  NULLS FIRST, CASE ((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c3))  WHEN ((rt1.c3) IS TRUE) THEN CAST(rt0.c1 AS TEXT) ELSE (('') ISNULL) END DESC);
SELECT * FROM rt0, rt1 WHERE ((((rt0.c3)) NOT BETWEEN ((NULL)) AND (((((rt0.c1, rt1.c2, ''))>((rt0.c0, '', rt1.c0))))))) ORDER BY (((rt1.c0))>((TYPEOF(rt1.c3)))) ASC  NULLS FIRST, CASE ((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c3))  WHEN ((rt1.c3) IS TRUE) THEN CAST(rt0.c1 AS TEXT) ELSE (('') ISNULL) END DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) NOT BETWEEN ((NULL)) AND (((((rt0.c1, rt1.c2, ''))>((rt0.c0, '', rt1.c0))))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt1.c0))>((TYPEOF(rt1.c3)))) ASC  NULLS FIRST, CASE ((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c3))  WHEN ((rt1.c3) IS TRUE) THEN CAST(rt0.c1 AS TEXT) ELSE (('') ISNULL) END DESC);
SELECT * FROM rt0, rt1 WHERE ((((rt0.c3)) NOT BETWEEN ((NULL)) AND (((((rt0.c1, rt1.c2, ''))>((rt0.c0, '', rt1.c0))))))) ORDER BY (((rt1.c0))>((TYPEOF(rt1.c3)))) ASC  NULLS FIRST, CASE ((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c3))  WHEN ((rt1.c3) IS TRUE) THEN CAST(rt0.c1 AS TEXT) ELSE (('') ISNULL) END DESC;
SELECT COUNT(*) FROM rt0, rt1, rt2 WHERE ((((rt2.c0 IN ())) BETWEEN (((rt2.c1)>=(rt1.c0))) AND (TOTAL_CHANGES())));
SELECT SUM(count) FROM (SELECT ALL (((((rt2.c0 IN ())) BETWEEN (((rt2.c1)>=(rt1.c0))) AND (TOTAL_CHANGES()))) IS TRUE)  as count FROM rt0, rt1, rt2);
SELECT COUNT(*) FROM rt0, rt1, rt2 WHERE ((((rt2.c0 IN ())) BETWEEN (((rt2.c1)>=(rt1.c0))) AND (TOTAL_CHANGES())));
SELECT SUM(count) FROM (SELECT ALL (((((rt2.c0 IN ())) BETWEEN (((rt2.c1)>=(rt1.c0))) AND (TOTAL_CHANGES()))) IS TRUE)  as count FROM rt0, rt1, rt2);
SELECT COUNT(*) FROM rt0, rt1, rt2 WHERE ((((rt2.c0 IN ())) BETWEEN (((rt2.c1)>=(rt1.c0))) AND (TOTAL_CHANGES())));
SELECT ALL * FROM rt1 WHERE (((((rt1.c3) NOT BETWEEN (x'5fa0') AND (rt1.c0))) NOT NULL)) ORDER BY (((+ (rt1.c1)))OR(((rt1.c0)AND(rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) NOT BETWEEN (x'5fa0') AND (rt1.c0))) NOT NULL)) IS TRUE)  as count FROM rt1 ORDER BY (((+ (rt1.c1)))OR(((rt1.c0)AND(rt1.c2))))  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((((rt1.c3) NOT BETWEEN (x'5fa0') AND (rt1.c0))) NOT NULL)) ORDER BY (((+ (rt1.c1)))OR(((rt1.c0)AND(rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) NOT BETWEEN (x'5fa0') AND (rt1.c0))) NOT NULL)) IS TRUE)  as count FROM rt1 ORDER BY (((+ (rt1.c1)))OR(((rt1.c0)AND(rt1.c2))))  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((((rt1.c3) NOT BETWEEN (x'5fa0') AND (rt1.c0))) NOT NULL)) ORDER BY (((+ (rt1.c1)))OR(((rt1.c0)AND(rt1.c2))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt2 WHERE ((CAST(rt2.c1 AS TEXT) IN ())) ORDER BY ((((x'') NOTNULL)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT (((CAST(rt2.c1 AS TEXT) IN ())) IS TRUE)  as count FROM rt2 ORDER BY ((((x'') NOTNULL)) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM rt2 WHERE ((CAST(rt2.c1 AS TEXT) IN ())) ORDER BY ((((x'') NOTNULL)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT (((CAST(rt2.c1 AS TEXT) IN ())) IS TRUE)  as count FROM rt2 ORDER BY ((((x'') NOTNULL)) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM rt2 WHERE ((CAST(rt2.c1 AS TEXT) IN ())) ORDER BY ((((x'') NOTNULL)) NOTNULL) DESC;
SELECT * FROM rt1 WHERE (CASE (~ (rt1.c0))  WHEN (rt1.c2 IN ()) THEN ((0.9164504889595425) BETWEEN (rt1.c3) AND (rt1.c1)) END) ORDER BY (((rt1.c0)=(rt1.c3)) IN ()) DESC  NULLS FIRST, rt1.c4  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (rt1.c0))  WHEN (rt1.c2 IN ()) THEN ((0.9164504889595425) BETWEEN (rt1.c3) AND (rt1.c1)) END) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0)==(rt1.c3)) IN ()) DESC  NULLS FIRST, rt1.c4  NULLS FIRST);
SELECT * FROM rt1 WHERE (CASE (~ (rt1.c0))  WHEN (rt1.c2 IN ()) THEN ((0.9164504889595425) BETWEEN (rt1.c3) AND (rt1.c1)) END) ORDER BY (((rt1.c0)=(rt1.c3)) IN ()) DESC  NULLS FIRST, rt1.c4  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (rt1.c0))  WHEN (rt1.c2 IN ()) THEN ((0.9164504889595425) BETWEEN (rt1.c3) AND (rt1.c1)) END) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0)==(rt1.c3)) IN ()) DESC  NULLS FIRST, rt1.c4  NULLS FIRST);
SELECT * FROM rt1 WHERE (CASE (~ (rt1.c0))  WHEN (rt1.c2 IN ()) THEN ((0.9164504889595425) BETWEEN (rt1.c3) AND (rt1.c1)) END) ORDER BY (((rt1.c0)=(rt1.c3)) IN ()) DESC  NULLS FIRST, rt1.c4  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c4)) NOT BETWEEN ((SQLITE_SOURCE_ID())) AND ((CAST(rt1.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c4)) NOT BETWEEN ((SQLITE_SOURCE_ID())) AND ((CAST(rt1.c0 AS REAL))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c4)) NOT BETWEEN ((SQLITE_SOURCE_ID())) AND ((CAST(rt1.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c4)) NOT BETWEEN ((SQLITE_SOURCE_ID())) AND ((CAST(rt1.c0 AS REAL))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c4)) NOT BETWEEN ((SQLITE_SOURCE_ID())) AND ((CAST(rt1.c0 AS REAL)))));
SELECT ALL * FROM rt2 WHERE (json(((((rt2.c1)AND(rt2.c1)))OR(rt2.c2)))) ORDER BY (((('-1161358583')) BETWEEN ((rt2.c2)) AND ((rt2.c1))) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json(((((rt2.c1)AND(rt2.c1)))OR(rt2.c2)))) IS TRUE)  as count FROM rt2 ORDER BY (((('-1161358583')) BETWEEN ((rt2.c2)) AND ((rt2.c1))) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM rt2 WHERE (json(((((rt2.c1)AND(rt2.c1)))OR(rt2.c2)))) ORDER BY (((('-1161358583')) BETWEEN ((rt2.c2)) AND ((rt2.c1))) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json(((((rt2.c1)AND(rt2.c1)))OR(rt2.c2)))) IS TRUE)  as count FROM rt2 ORDER BY (((('-1161358583')) BETWEEN ((rt2.c2)) AND ((rt2.c1))) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM rt2 WHERE (json(((((rt2.c1)AND(rt2.c1)))OR(rt2.c2)))) ORDER BY (((('-1161358583')) BETWEEN ((rt2.c2)) AND ((rt2.c1))) IN ()) ASC  NULLS LAST;
SELECT * FROM rt1 NATURAL JOIN rt2 WHERE ((- (((rt1.c2) BETWEEN (rt1.c1) AND (rt2.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt1.c2) BETWEEN (rt1.c1) AND (rt2.c0))))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt2);
SELECT * FROM rt1 NATURAL JOIN rt2 WHERE ((- (((rt1.c2) BETWEEN (rt1.c1) AND (rt2.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt1.c2) BETWEEN (rt1.c1) AND (rt2.c0))))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt2);
SELECT * FROM rt1 NATURAL JOIN rt2 WHERE ((- (((rt1.c2) BETWEEN (rt1.c1) AND (rt2.c0)))));
SELECT * FROM rt1, rt0, rt2 WHERE ((~ ((rt1.c4 IN ())))) ORDER BY CAST(((((((((rt1.c1)AND(rt2.c2)))OR(rt1.c4)))OR(rt1.c3)))OR(rt2.c2)) AS REAL), (~ (rt1.c1)) DESC, TRIM(CHAR(rt1.c2, rt0.c1, rt1.c2)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((rt1.c4 IN ())))) IS TRUE)  as count FROM rt1, rt0, rt2 ORDER BY CAST(((((((((rt1.c1)AND(rt2.c2)))OR(rt1.c4)))OR(rt1.c3)))OR(rt2.c2)) AS REAL), (~ (rt1.c1)) DESC, TRIM(CHAR(rt1.c2, rt0.c1, rt1.c2)) ASC  NULLS FIRST);
SELECT * FROM rt1, rt0, rt2 WHERE ((~ ((rt1.c4 IN ())))) ORDER BY CAST(((((((((rt1.c1)AND(rt2.c2)))OR(rt1.c4)))OR(rt1.c3)))OR(rt2.c2)) AS REAL), (~ (rt1.c1)) DESC, TRIM(CHAR(rt1.c2, rt0.c1, rt1.c2)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((rt1.c4 IN ())))) IS TRUE)  as count FROM rt1, rt0, rt2 ORDER BY CAST(((((((((rt1.c1)AND(rt2.c2)))OR(rt1.c4)))OR(rt1.c3)))OR(rt2.c2)) AS REAL), (~ (rt1.c1)) DESC, TRIM(CHAR(rt1.c2, rt0.c1, rt1.c2)) ASC  NULLS FIRST);
SELECT * FROM rt1, rt0, rt2 WHERE ((~ ((rt1.c4 IN ())))) ORDER BY CAST(((((((((rt1.c1)AND(rt2.c2)))OR(rt1.c4)))OR(rt1.c3)))OR(rt2.c2)) AS REAL), (~ (rt1.c1)) DESC, TRIM(CHAR(rt1.c2, rt0.c1, rt1.c2)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt2, rt0 WHERE ((((rt0.c1)) BETWEEN (((((rt2.c0, rt0.c0, rt0.c0))>=((rt0.c1, rt0.c0, rt0.c0))))) AND ((((rt2.c1) BETWEEN (rt0.c2) AND (rt2.c2)))))) ORDER BY (NOT (((rt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN (((((rt2.c0, rt0.c0, rt0.c0))>=((rt0.c1, rt0.c0, rt0.c0))))) AND ((((rt2.c1) BETWEEN (rt0.c2) AND (rt2.c2)))))) IS TRUE)  as count FROM rt2, rt0 ORDER BY (NOT (((rt0.c0) IS FALSE))));
SELECT COUNT(*) FROM rt2, rt0 WHERE ((((rt0.c1)) BETWEEN (((((rt2.c0, rt0.c0, rt0.c0))>=((rt0.c1, rt0.c0, rt0.c0))))) AND ((((rt2.c1) BETWEEN (rt0.c2) AND (rt2.c2)))))) ORDER BY (NOT (((rt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN (((((rt2.c0, rt0.c0, rt0.c0))>=((rt0.c1, rt0.c0, rt0.c0))))) AND ((((rt2.c1) BETWEEN (rt0.c2) AND (rt2.c2)))))) IS TRUE)  as count FROM rt2, rt0 ORDER BY (NOT (((rt0.c0) IS FALSE))));
SELECT COUNT(*) FROM rt2, rt0 WHERE ((((rt0.c1)) BETWEEN (((((rt2.c0, rt0.c0, rt0.c0))>=((rt0.c1, rt0.c0, rt0.c0))))) AND ((((rt2.c1) BETWEEN (rt0.c2) AND (rt2.c2)))))) ORDER BY (NOT (((rt0.c0) IS FALSE)));
SELECT ALL COUNT(*) FROM rt0, rt2 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 NOT INDEXED, rt2);
SELECT ALL COUNT(*) FROM rt0, rt2 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 NOT INDEXED, rt2);
SELECT ALL COUNT(*) FROM rt0, rt2 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt0, rt1, rt2 WHERE (((x'91b9') IS TRUE));
SELECT SUM(count) FROM (SELECT ((((x'91b9') IS TRUE)) IS TRUE)  as count FROM rt0, rt1, rt2);
SELECT ALL COUNT(*) FROM rt0, rt1, rt2 WHERE (((x'91b9') IS TRUE));
SELECT SUM(count) FROM (SELECT ((((x'91b9') IS TRUE)) IS TRUE)  as count FROM rt0, rt1, rt2);
SELECT ALL COUNT(*) FROM rt0, rt1, rt2 WHERE (((x'91b9') IS TRUE));
SELECT ALL * FROM rt2, rt0, rt1 WHERE (((((((((rt0.c3)AND(rt1.c4)))OR(rt1.c0)))OR((NOT (rt1.c2)))))AND(((rt2.c0)/(0xffffffffb8e1000c)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c3)AND(rt1.c4)))OR(rt1.c0)))OR((NOT (rt1.c2)))))AND(((rt2.c0)/(0Xffffffffb8e1000c))))) IS TRUE)  as count FROM rt2, rt0, rt1);
SELECT ALL * FROM rt2, rt0, rt1 WHERE (((((((((rt0.c3)AND(rt1.c4)))OR(rt1.c0)))OR((NOT (rt1.c2)))))AND(((rt2.c0)/(0xffffffffb8e1000c)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c3)AND(rt1.c4)))OR(rt1.c0)))OR((NOT (rt1.c2)))))AND(((rt2.c0)/(0Xffffffffb8e1000c))))) IS TRUE)  as count FROM rt2, rt0, rt1);
SELECT ALL * FROM rt2, rt0, rt1 WHERE (((((((((rt0.c3)AND(rt1.c4)))OR(rt1.c0)))OR((NOT (rt1.c2)))))AND(((rt2.c0)/(0xffffffffb8e1000c)))));
SELECT * FROM rt1, rt2, rt0 WHERE ((((((rt1.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) ISNULL)) ORDER BY rt1.c3 ASC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) ISNULL)) IS TRUE)  as count FROM rt1, rt2, rt0 ORDER BY rt1.c3 ASC);
SELECT * FROM rt1, rt2, rt0 WHERE ((((((rt1.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) ISNULL)) ORDER BY rt1.c3 ASC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) ISNULL)) IS TRUE)  as count FROM rt1, rt2, rt0 ORDER BY rt1.c3 ASC);
SELECT * FROM rt1, rt2, rt0 WHERE ((((((rt1.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) ISNULL)) ORDER BY rt1.c3 ASC;
SELECT ALL * FROM rt1 WHERE ((((rt1.c3, rt1.c1, rt1.c2)) NOT BETWEEN (((('0.8621840237130733') NOT BETWEEN (rt1.c1) AND (rt1.c1)), '2024847534', CAST(rt1.c2 AS TEXT))) AND ((((rt1.c3)IS NOT(rt1.c3)), x'', (~ (rt1.c1)))))) ORDER BY ((rt1.c1) ISNULL) ASC, (- (rt1.c2)) COLLATE NOCASE  NULLS FIRST, ((((rt1.c4) NOT NULL))AND(rt1.c2)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c3, rt1.c1, rt1.c2)) NOT BETWEEN (((('0.8621840237130733') NOT BETWEEN (rt1.c1) AND (rt1.c1)), '2024847534', CAST(rt1.c2 AS TEXT))) AND ((((rt1.c3)IS NOT(rt1.c3)), x'', (~ (rt1.c1)))))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1) ISNULL) ASC, (- (rt1.c2)) COLLATE NOCASE  NULLS FIRST, ((((rt1.c4) NOT NULL))AND(rt1.c2)) ASC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((((rt1.c3, rt1.c1, rt1.c2)) NOT BETWEEN (((('0.8621840237130733') NOT BETWEEN (rt1.c1) AND (rt1.c1)), '2024847534', CAST(rt1.c2 AS TEXT))) AND ((((rt1.c3)IS NOT(rt1.c3)), x'', (~ (rt1.c1)))))) ORDER BY ((rt1.c1) ISNULL) ASC, (- (rt1.c2)) COLLATE NOCASE  NULLS FIRST, ((((rt1.c4) NOT NULL))AND(rt1.c2)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c3, rt1.c1, rt1.c2)) NOT BETWEEN (((('0.8621840237130733') NOT BETWEEN (rt1.c1) AND (rt1.c1)), '2024847534', CAST(rt1.c2 AS TEXT))) AND ((((rt1.c3)IS NOT(rt1.c3)), x'', (~ (rt1.c1)))))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1) ISNULL) ASC, (- (rt1.c2)) COLLATE NOCASE  NULLS FIRST, ((((rt1.c4) NOT NULL))AND(rt1.c2)) ASC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((((rt1.c3, rt1.c1, rt1.c2)) NOT BETWEEN (((('0.8621840237130733') NOT BETWEEN (rt1.c1) AND (rt1.c1)), '2024847534', CAST(rt1.c2 AS TEXT))) AND ((((rt1.c3)IS NOT(rt1.c3)), x'', (~ (rt1.c1)))))) ORDER BY ((rt1.c1) ISNULL) ASC, (- (rt1.c2)) COLLATE NOCASE  NULLS FIRST, ((((rt1.c4) NOT NULL))AND(rt1.c2)) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c1) BETWEEN (rt0.c3) AND (x'')))>(((rt1.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) BETWEEN (rt0.c3) AND (x'')))>(((rt1.c2) ISNULL)))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c1) BETWEEN (rt0.c3) AND (x'')))>(((rt1.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) BETWEEN (rt0.c3) AND (x'')))>(((rt1.c2) ISNULL)))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c1) BETWEEN (rt0.c3) AND (x'')))>(((rt1.c2) ISNULL))));
SELECT ALL COUNT(*) FROM rt2, rt1 WHERE (((rt1.c0 COLLATE RTRIM) BETWEEN (CASE rt2.c1  WHEN rt1.c2 THEN rt2.c2 END) AND (((rt2.c0) ISNULL)))) ORDER BY (rt2.c1 COLLATE BINARY IN ());
SELECT SUM(count) FROM (SELECT ((((rt1.c0 COLLATE RTRIM) BETWEEN (CASE rt2.c1  WHEN rt1.c2 THEN rt2.c2 END) AND (((rt2.c0) ISNULL)))) IS TRUE)  as count FROM rt2, rt1 ORDER BY (rt2.c1 COLLATE BINARY IN ()));
SELECT ALL COUNT(*) FROM rt2, rt1 WHERE (((rt1.c0 COLLATE RTRIM) BETWEEN (CASE rt2.c1  WHEN rt1.c2 THEN rt2.c2 END) AND (((rt2.c0) ISNULL)))) ORDER BY (rt2.c1 COLLATE BINARY IN ());
SELECT SUM(count) FROM (SELECT ((((rt1.c0 COLLATE RTRIM) BETWEEN (CASE rt2.c1  WHEN rt1.c2 THEN rt2.c2 END) AND (((rt2.c0) ISNULL)))) IS TRUE)  as count FROM rt2, rt1 ORDER BY (rt2.c1 COLLATE BINARY IN ()));
SELECT ALL COUNT(*) FROM rt2, rt1 WHERE (((rt1.c0 COLLATE RTRIM) BETWEEN (CASE rt2.c1  WHEN rt1.c2 THEN rt2.c2 END) AND (((rt2.c0) ISNULL)))) ORDER BY (rt2.c1 COLLATE BINARY IN ());
SELECT * FROM rt2, rt1, rt0 WHERE (((rt1.c4) NOT BETWEEN (CASE rt2.c1  WHEN rt1.c3 THEN rt1.c3 END) AND (rt1.c0))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c4) NOT BETWEEN (CASE rt2.c1  WHEN rt1.c3 THEN rt1.c3 END) AND (rt1.c0))) IS TRUE)  as count FROM rt2, rt1, rt0 ORDER BY NULL DESC);
SELECT * FROM rt2, rt1, rt0 WHERE (((rt1.c4) NOT BETWEEN (CASE rt2.c1  WHEN rt1.c3 THEN rt1.c3 END) AND (rt1.c0))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c4) NOT BETWEEN (CASE rt2.c1  WHEN rt1.c3 THEN rt1.c3 END) AND (rt1.c0))) IS TRUE)  as count FROM rt2, rt1, rt0 ORDER BY NULL DESC);
SELECT * FROM rt2, rt1, rt0 WHERE (((rt1.c4) NOT BETWEEN (CASE rt2.c1  WHEN rt1.c3 THEN rt1.c3 END) AND (rt1.c0))) ORDER BY NULL DESC;
SELECT * FROM rt0, rt1 WHERE (CASE ((((rt0.c0)OR(rt1.c4)))AND(0.7294654568813836))  WHEN CAST(0X190a05aa AS REAL) THEN ((x'')IS NOT(rt1.c0)) WHEN NULL THEN CAST(rt0.c2 AS INTEGER) WHEN CAST(rt1.c4 AS INTEGER) THEN (+ (rt0.c3)) ELSE ((rt1.c1)<(rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c0)OR(rt1.c4)))AND(0.7294654568813836))  WHEN CAST(0X190a05aa AS REAL) THEN ((x'')IS NOT(rt1.c0)) WHEN NULL THEN CAST(rt0.c2 AS INTEGER) WHEN CAST(rt1.c4 AS INTEGER) THEN (+ (rt0.c3)) ELSE ((rt1.c1)<(rt1.c0)) END) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (CASE ((((rt0.c0)OR(rt1.c4)))AND(0.7294654568813836))  WHEN CAST(0X190a05aa AS REAL) THEN ((x'')IS NOT(rt1.c0)) WHEN NULL THEN CAST(rt0.c2 AS INTEGER) WHEN CAST(rt1.c4 AS INTEGER) THEN (+ (rt0.c3)) ELSE ((rt1.c1)<(rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c0)OR(rt1.c4)))AND(0.7294654568813836))  WHEN CAST(0X190a05aa AS REAL) THEN ((x'')IS NOT(rt1.c0)) WHEN NULL THEN CAST(rt0.c2 AS INTEGER) WHEN CAST(rt1.c4 AS INTEGER) THEN (+ (rt0.c3)) ELSE ((rt1.c1)<(rt1.c0)) END) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (CASE ((((rt0.c0)OR(rt1.c4)))AND(0.7294654568813836))  WHEN CAST(0X190a05aa AS REAL) THEN ((x'')IS NOT(rt1.c0)) WHEN NULL THEN CAST(rt0.c2 AS INTEGER) WHEN CAST(rt1.c4 AS INTEGER) THEN (+ (rt0.c3)) ELSE ((rt1.c1)<(rt1.c0)) END);
SELECT ALL COUNT(*) FROM rt2, rt1, rt0 WHERE (LIKELIHOOD(DISTINCT UPPER(DISTINCT rt0.c2), 0.7384995111813566));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT UPPER(DISTINCT rt0.c2), 0.7384995111813566)) IS TRUE)  as count FROM rt2, rt1, rt0);
SELECT ALL COUNT(*) FROM rt2, rt1, rt0 WHERE (LIKELIHOOD(DISTINCT UPPER(DISTINCT rt0.c2), 0.7384995111813566));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT UPPER(DISTINCT rt0.c2), 0.7384995111813566)) IS TRUE)  as count FROM rt2, rt1, rt0);
SELECT ALL COUNT(*) FROM rt2, rt1, rt0 WHERE (LIKELIHOOD(DISTINCT UPPER(DISTINCT rt0.c2), 0.7384995111813566));
SELECT ALL COUNT(*) FROM rt1, rt0 NATURAL JOIN rt2 WHERE (((rt2.c1) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((rt2.c1) IS FALSE)) IS TRUE)  as count FROM rt1 NOT INDEXED, rt0 NATURAL JOIN rt2);
SELECT ALL COUNT(*) FROM rt1, rt0 NATURAL JOIN rt2 WHERE (((rt2.c1) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((rt2.c1) IS FALSE)) IS TRUE)  as count FROM rt1 NOT INDEXED, rt0 NATURAL JOIN rt2);
SELECT ALL COUNT(*) FROM rt1, rt0 NATURAL JOIN rt2 WHERE (((rt2.c1) IS FALSE));
SELECT ALL * FROM rt0 WHERE ((- (((rt0.c1)==(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c1)==(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((- (((rt0.c1)==(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c1)==(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((- (((rt0.c1)==(rt0.c3)))));
SELECT * FROM rt0, rt2, rt1 WHERE (((((rt1.c0) IS FALSE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) IS FALSE)) IS TRUE)) IS TRUE)  as count FROM rt0, rt2, rt1);
SELECT * FROM rt0, rt2, rt1 WHERE (((((rt1.c0) IS FALSE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) IS FALSE)) IS TRUE)) IS TRUE)  as count FROM rt0, rt2, rt1);
SELECT * FROM rt0, rt2, rt1 WHERE (((((rt1.c0) IS FALSE)) IS TRUE));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c2) NOT NULL))OR(rt1.c4)))OR((('aKseX&\nhQ') BETWEEN (rt1.c0) AND (rt1.c4)))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2) NOT NULL))OR(rt1.c4)))OR((('aKseX&\nhQ') BETWEEN (rt1.c0) AND (rt1.c4))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c2) NOT NULL))OR(rt1.c4)))OR((('aKseX&\nhQ') BETWEEN (rt1.c0) AND (rt1.c4)))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2) NOT NULL))OR(rt1.c4)))OR((('aKseX&\nhQ') BETWEEN (rt1.c0) AND (rt1.c4))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c2) NOT NULL))OR(rt1.c4)))OR((('aKseX&\nhQ') BETWEEN (rt1.c0) AND (rt1.c4)))));
SELECT COUNT(*) FROM rt2 WHERE ((((0x716d4db3)IS(0xffffffff803885c0)) IN (((rt2.c0) BETWEEN (rt2.c0) AND (rt2.c0)), ((rt2.c0) ISNULL)))) ORDER BY CASE CASE WHEN rt2.c0 THEN rt2.c1 WHEN rt2.c1 THEN rt2.c2 WHEN rt2.c1 THEN rt2.c0 ELSE rt2.c0 END  WHEN ((rt2.c0) NOT BETWEEN (rt2.c1) AND (rt2.c2)) THEN ((((rt2.c0)OR(rt2.c1)))OR(rt2.c2)) ELSE rt2.c2 COLLATE BINARY END ASC, ''  NULLS LAST, CASE WHEN CAST(rt2.c1 AS INTEGER) THEN CAST(rt2.c0 AS BLOB) WHEN (((rt2.c1))<((rt2.c0))) THEN ((rt2.c0) NOT BETWEEN (rt2.c1) AND (rt2.c0)) WHEN rt2.c1 THEN CAST(0.1506888283781752 AS INTEGER) ELSE x'b6e6' END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((0x716d4db3)IS(0Xffffffff803885c0)) IN (((rt2.c0) BETWEEN (rt2.c0) AND (rt2.c0)), ((rt2.c0) ISNULL)))) IS TRUE)  as count FROM rt2 ORDER BY CASE CASE WHEN rt2.c0 THEN rt2.c1 WHEN rt2.c1 THEN rt2.c2 WHEN rt2.c1 THEN rt2.c0 ELSE rt2.c0 END  WHEN ((rt2.c0) NOT BETWEEN (rt2.c1) AND (rt2.c2)) THEN ((((rt2.c0)OR(rt2.c1)))OR(rt2.c2)) ELSE rt2.c2 COLLATE BINARY END ASC, ''  NULLS LAST, CASE WHEN CAST(rt2.c1 AS INTEGER) THEN CAST(rt2.c0 AS BLOB) WHEN (((rt2.c1))<((rt2.c0))) THEN ((rt2.c0) NOT BETWEEN (rt2.c1) AND (rt2.c0)) WHEN rt2.c1 THEN CAST(0.1506888283781752 AS INTEGER) ELSE x'b6e6' END DESC  NULLS LAST);
SELECT COUNT(*) FROM rt2 WHERE ((((0x716d4db3)IS(0xffffffff803885c0)) IN (((rt2.c0) BETWEEN (rt2.c0) AND (rt2.c0)), ((rt2.c0) ISNULL)))) ORDER BY CASE CASE WHEN rt2.c0 THEN rt2.c1 WHEN rt2.c1 THEN rt2.c2 WHEN rt2.c1 THEN rt2.c0 ELSE rt2.c0 END  WHEN ((rt2.c0) NOT BETWEEN (rt2.c1) AND (rt2.c2)) THEN ((((rt2.c0)OR(rt2.c1)))OR(rt2.c2)) ELSE rt2.c2 COLLATE BINARY END ASC, ''  NULLS LAST, CASE WHEN CAST(rt2.c1 AS INTEGER) THEN CAST(rt2.c0 AS BLOB) WHEN (((rt2.c1))<((rt2.c0))) THEN ((rt2.c0) NOT BETWEEN (rt2.c1) AND (rt2.c0)) WHEN rt2.c1 THEN CAST(0.1506888283781752 AS INTEGER) ELSE x'b6e6' END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((0x716d4db3)IS(0Xffffffff803885c0)) IN (((rt2.c0) BETWEEN (rt2.c0) AND (rt2.c0)), ((rt2.c0) ISNULL)))) IS TRUE)  as count FROM rt2 ORDER BY CASE CASE WHEN rt2.c0 THEN rt2.c1 WHEN rt2.c1 THEN rt2.c2 WHEN rt2.c1 THEN rt2.c0 ELSE rt2.c0 END  WHEN ((rt2.c0) NOT BETWEEN (rt2.c1) AND (rt2.c2)) THEN ((((rt2.c0)OR(rt2.c1)))OR(rt2.c2)) ELSE rt2.c2 COLLATE BINARY END ASC, ''  NULLS LAST, CASE WHEN CAST(rt2.c1 AS INTEGER) THEN CAST(rt2.c0 AS BLOB) WHEN (((rt2.c1))<((rt2.c0))) THEN ((rt2.c0) NOT BETWEEN (rt2.c1) AND (rt2.c0)) WHEN rt2.c1 THEN CAST(0.1506888283781752 AS INTEGER) ELSE x'b6e6' END DESC  NULLS LAST);
SELECT COUNT(*) FROM rt2 WHERE ((((0x716d4db3)IS(0xffffffff803885c0)) IN (((rt2.c0) BETWEEN (rt2.c0) AND (rt2.c0)), ((rt2.c0) ISNULL)))) ORDER BY CASE CASE WHEN rt2.c0 THEN rt2.c1 WHEN rt2.c1 THEN rt2.c2 WHEN rt2.c1 THEN rt2.c0 ELSE rt2.c0 END  WHEN ((rt2.c0) NOT BETWEEN (rt2.c1) AND (rt2.c2)) THEN ((((rt2.c0)OR(rt2.c1)))OR(rt2.c2)) ELSE rt2.c2 COLLATE BINARY END ASC, ''  NULLS LAST, CASE WHEN CAST(rt2.c1 AS INTEGER) THEN CAST(rt2.c0 AS BLOB) WHEN (((rt2.c1))<((rt2.c0))) THEN ((rt2.c0) NOT BETWEEN (rt2.c1) AND (rt2.c0)) WHEN rt2.c1 THEN CAST(0.1506888283781752 AS INTEGER) ELSE x'b6e6' END DESC  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE ((((NOT (rt1.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c2))) IS TRUE)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((NOT (rt1.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c2))) IS TRUE)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((NOT (rt1.c2))) IS TRUE));
SELECT COUNT(*) FROM rt1, rt2, rt0 WHERE (UPPER(rt1.c4) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((UPPER(rt1.c4) COLLATE BINARY) IS TRUE)  as count FROM rt1, rt2, rt0);
SELECT COUNT(*) FROM rt1, rt2, rt0 WHERE (UPPER(rt1.c4) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((UPPER(rt1.c4) COLLATE BINARY) IS TRUE)  as count FROM rt1, rt2, rt0);
SELECT COUNT(*) FROM rt1, rt2, rt0 WHERE (UPPER(rt1.c4) COLLATE BINARY);
SELECT COUNT(*) FROM rt2, rt0, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt2, rt0, rt1);
SELECT COUNT(*) FROM rt2, rt0, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt2, rt0, rt1);
SELECT COUNT(*) FROM rt2, rt0, rt1 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c4 COLLATE NOCASE) ORDER BY (+ ((- (rt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c4 COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY (+ ((- (rt1.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c4 COLLATE NOCASE) ORDER BY (+ ((- (rt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c4 COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY (+ ((- (rt1.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c4 COLLATE NOCASE) ORDER BY (+ ((- (rt1.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt2, rt0 WHERE ((((((rt2.c0)) NOT BETWEEN ((rt2.c2)) AND ((rt0.c1)))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((((rt2.c0)) NOT BETWEEN ((rt2.c2)) AND ((rt0.c1)))) IS FALSE)) IS TRUE)  as count FROM rt2, rt0);
SELECT ALL COUNT(*) FROM rt2, rt0 WHERE ((((((rt2.c0)) NOT BETWEEN ((rt2.c2)) AND ((rt0.c1)))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((((rt2.c0)) NOT BETWEEN ((rt2.c2)) AND ((rt0.c1)))) IS FALSE)) IS TRUE)  as count FROM rt2, rt0);
SELECT ALL COUNT(*) FROM rt2, rt0 WHERE ((((((rt2.c0)) NOT BETWEEN ((rt2.c2)) AND ((rt0.c1)))) IS FALSE));
SELECT * FROM rt1 WHERE ((~ ((((rt1.c3, rt1.c0, rt1.c3))>=((rt1.c3, rt1.c4, rt1.c4))))));
SELECT SUM(count) FROM (SELECT (((~ ((((rt1.c3, rt1.c0, rt1.c3))>=((rt1.c3, rt1.c4, rt1.c4)))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((~ ((((rt1.c3, rt1.c0, rt1.c3))>=((rt1.c3, rt1.c4, rt1.c4))))));
SELECT SUM(count) FROM (SELECT (((~ ((((rt1.c3, rt1.c0, rt1.c3))>=((rt1.c3, rt1.c4, rt1.c4)))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((~ ((((rt1.c3, rt1.c0, rt1.c3))>=((rt1.c3, rt1.c4, rt1.c4))))));
SELECT ALL COUNT(*) FROM rt1, rt0, rt2 WHERE ((+ ('')));
SELECT SUM(count) FROM (SELECT ALL (((+ (''))) IS TRUE)  as count FROM rt1, rt0 NOT INDEXED, rt2);
SELECT ALL COUNT(*) FROM rt1, rt0, rt2 WHERE ((+ ('')));
SELECT SUM(count) FROM (SELECT ALL (((+ (''))) IS TRUE)  as count FROM rt1, rt0 NOT INDEXED, rt2);
SELECT ALL COUNT(*) FROM rt1, rt0, rt2 WHERE ((+ ('')));
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c3))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c3))) COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c3))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c3))) COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c3))) COLLATE NOCASE);
SELECT ALL * FROM rt2 WHERE (load_extension(((rt2.c0)|(NULL)))) ORDER BY TRIM(QUOTE(rt2.c2));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(((rt2.c0)|(NULL)))) IS TRUE)  as count FROM rt2 ORDER BY TRIM(QUOTE(rt2.c2)));
SELECT ALL * FROM rt2 WHERE (load_extension(((rt2.c0)|(NULL)))) ORDER BY TRIM(QUOTE(rt2.c2));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(((rt2.c0)|(NULL)))) IS TRUE)  as count FROM rt2 ORDER BY TRIM(QUOTE(rt2.c2)));
SELECT ALL * FROM rt2, rt0, rt1 WHERE ((- (LOWER(DISTINCT rt0.c2))));
SELECT SUM(count) FROM (SELECT (((- (LOWER(DISTINCT rt0.c2)))) IS TRUE)  as count FROM rt2, rt0, rt1);
SELECT ALL * FROM rt2, rt0, rt1 WHERE ((- (LOWER(DISTINCT rt0.c2))));
SELECT SUM(count) FROM (SELECT (((- (LOWER(DISTINCT rt0.c2)))) IS TRUE)  as count FROM rt2, rt0, rt1);
SELECT ALL * FROM rt2, rt0, rt1 WHERE ((- (LOWER(DISTINCT rt0.c2))));
SELECT ALL COUNT(*) FROM rt0, rt2 WHERE ((+ (LIKELIHOOD(rt2.c1, 0.3354607158115045)))) ORDER BY CASE WHEN 0.2451212521540327 THEN (rt0.c3 IN ()) WHEN ((((rt0.c0)AND(rt0.c1)))AND(rt2.c2)) THEN (('0.8621840237130733')OR(rt0.c2)) WHEN LENGTH(rt2.c2) THEN ((rt0.c3)>>(rt2.c2)) ELSE rt2.c0 COLLATE NOCASE END ASC;
SELECT SUM(count) FROM (SELECT (((+ (LIKELIHOOD(rt2.c1, 0.3354607158115045)))) IS TRUE)  as count FROM rt0, rt2 ORDER BY CASE WHEN 0.2451212521540327 THEN (rt0.c3 IN ()) WHEN ((((rt0.c0)AND(rt0.c1)))AND(rt2.c2)) THEN (('0.8621840237130733')OR(rt0.c2)) WHEN LENGTH(rt2.c2) THEN ((rt0.c3)>>(rt2.c2)) ELSE rt2.c0 COLLATE NOCASE END ASC);
SELECT ALL COUNT(*) FROM rt0, rt2 WHERE ((+ (LIKELIHOOD(rt2.c1, 0.3354607158115045)))) ORDER BY CASE WHEN 0.2451212521540327 THEN (rt0.c3 IN ()) WHEN ((((rt0.c0)AND(rt0.c1)))AND(rt2.c2)) THEN (('0.8621840237130733')OR(rt0.c2)) WHEN LENGTH(rt2.c2) THEN ((rt0.c3)>>(rt2.c2)) ELSE rt2.c0 COLLATE NOCASE END ASC;
SELECT SUM(count) FROM (SELECT (((+ (LIKELIHOOD(rt2.c1, 0.3354607158115045)))) IS TRUE)  as count FROM rt0, rt2 ORDER BY CASE WHEN 0.2451212521540327 THEN (rt0.c3 IN ()) WHEN ((((rt0.c0)AND(rt0.c1)))AND(rt2.c2)) THEN (('0.8621840237130733')OR(rt0.c2)) WHEN LENGTH(rt2.c2) THEN ((rt0.c3)>>(rt2.c2)) ELSE rt2.c0 COLLATE NOCASE END ASC);
SELECT ALL COUNT(*) FROM rt0, rt2 WHERE ((+ (LIKELIHOOD(rt2.c1, 0.3354607158115045)))) ORDER BY CASE WHEN 0.2451212521540327 THEN (rt0.c3 IN ()) WHEN ((((rt0.c0)AND(rt0.c1)))AND(rt2.c2)) THEN (('0.8621840237130733')OR(rt0.c2)) WHEN LENGTH(rt2.c2) THEN ((rt0.c3)>>(rt2.c2)) ELSE rt2.c0 COLLATE NOCASE END ASC;
SELECT ALL * FROM rt2, rt0 NATURAL JOIN rt1 WHERE (json_type(CASE rt0.c1  WHEN rt2.c2 THEN rt0.c3 END));
SELECT SUM(count) FROM (SELECT ALL ((json_type(CASE rt0.c1  WHEN rt2.c2 THEN rt0.c3 END)) IS TRUE)  as count FROM rt2, rt0 NATURAL JOIN rt1);
SELECT ALL * FROM rt2, rt0 NATURAL JOIN rt1 WHERE (json_type(CASE rt0.c1  WHEN rt2.c2 THEN rt0.c3 END));
SELECT SUM(count) FROM (SELECT ALL ((json_type(CASE rt0.c1  WHEN rt2.c2 THEN rt0.c3 END)) IS TRUE)  as count FROM rt2, rt0 NATURAL JOIN rt1);
SELECT ALL * FROM rt2, rt0 NATURAL JOIN rt1 WHERE (json_type(CASE rt0.c1  WHEN rt2.c2 THEN rt0.c3 END));
SELECT ALL COUNT(*) FROM rt2, rt1 WHERE (((('1034 926 1202 ')) BETWEEN (((rt2.c1 IN ()))) AND ((((((rt1.c0)OR(rt1.c4)))AND(352931523)))))) ORDER BY CASE WHEN CAST(rt1.c0 AS NUMERIC) THEN ((rt1.c0) NOT BETWEEN (rt2.c2) AND (rt2.c1)) ELSE (~ (rt1.c4)) END DESC, (((rt1.c2 IN ()))<<(((rt1.c4) BETWEEN (rt2.c2) AND (rt2.c1)))) ASC, (((x'')) BETWEEN ((((-448340921)AND(rt1.c1)))) AND ((((rt1.c2) BETWEEN (rt2.c2) AND (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((('1034 926 1202 ')) BETWEEN (((rt2.c1 IN ()))) AND ((((((rt1.c0)OR(rt1.c4)))AND(352931523)))))) IS TRUE)  as count FROM rt2, rt1 ORDER BY CASE WHEN CAST(rt1.c0 AS NUMERIC) THEN ((rt1.c0) NOT BETWEEN (rt2.c2) AND (rt2.c1)) ELSE (~ (rt1.c4)) END DESC, (((rt1.c2 IN ()))<<(((rt1.c4) BETWEEN (rt2.c2) AND (rt2.c1)))) ASC, (((x'')) BETWEEN ((((-448340921)AND(rt1.c1)))) AND ((((rt1.c2) BETWEEN (rt2.c2) AND (rt1.c3))))));
SELECT ALL COUNT(*) FROM rt2, rt1 WHERE (((('1034 926 1202 ')) BETWEEN (((rt2.c1 IN ()))) AND ((((((rt1.c0)OR(rt1.c4)))AND(352931523)))))) ORDER BY CASE WHEN CAST(rt1.c0 AS NUMERIC) THEN ((rt1.c0) NOT BETWEEN (rt2.c2) AND (rt2.c1)) ELSE (~ (rt1.c4)) END DESC, (((rt1.c2 IN ()))<<(((rt1.c4) BETWEEN (rt2.c2) AND (rt2.c1)))) ASC, (((x'')) BETWEEN ((((-448340921)AND(rt1.c1)))) AND ((((rt1.c2) BETWEEN (rt2.c2) AND (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((('1034 926 1202 ')) BETWEEN (((rt2.c1 IN ()))) AND ((((((rt1.c0)OR(rt1.c4)))AND(352931523)))))) IS TRUE)  as count FROM rt2, rt1 ORDER BY CASE WHEN CAST(rt1.c0 AS NUMERIC) THEN ((rt1.c0) NOT BETWEEN (rt2.c2) AND (rt2.c1)) ELSE (~ (rt1.c4)) END DESC, (((rt1.c2 IN ()))<<(((rt1.c4) BETWEEN (rt2.c2) AND (rt2.c1)))) ASC, (((x'')) BETWEEN ((((-448340921)AND(rt1.c1)))) AND ((((rt1.c2) BETWEEN (rt2.c2) AND (rt1.c3))))));
SELECT ALL COUNT(*) FROM rt2, rt1 WHERE (((('1034 926 1202 ')) BETWEEN (((rt2.c1 IN ()))) AND ((((((rt1.c0)OR(rt1.c4)))AND(352931523)))))) ORDER BY CASE WHEN CAST(rt1.c0 AS NUMERIC) THEN ((rt1.c0) NOT BETWEEN (rt2.c2) AND (rt2.c1)) ELSE (~ (rt1.c4)) END DESC, (((rt1.c2 IN ()))<<(((rt1.c4) BETWEEN (rt2.c2) AND (rt2.c1)))) ASC, (((x'')) BETWEEN ((((-448340921)AND(rt1.c1)))) AND ((((rt1.c2) BETWEEN (rt2.c2) AND (rt1.c3)))));
SELECT COUNT(*) FROM rt0, rt2 WHERE (rt0.c3) ORDER BY (((rt0.c2)) NOT BETWEEN ((CASE WHEN rt2.c2 THEN rt0.c2 ELSE NULL END)) AND ((x'5f31'))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, rt2 ORDER BY (((rt0.c2)) NOT BETWEEN ((CASE WHEN rt2.c2 THEN rt0.c2 ELSE NULL END)) AND ((x'5f31'))) DESC);
SELECT COUNT(*) FROM rt0, rt2 WHERE (rt0.c3) ORDER BY (((rt0.c2)) NOT BETWEEN ((CASE WHEN rt2.c2 THEN rt0.c2 ELSE NULL END)) AND ((x'5f31'))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, rt2 ORDER BY (((rt0.c2)) NOT BETWEEN ((CASE WHEN rt2.c2 THEN rt0.c2 ELSE NULL END)) AND ((x'5f31'))) DESC);
SELECT COUNT(*) FROM rt0, rt2 WHERE (rt0.c3) ORDER BY (((rt0.c2)) NOT BETWEEN ((CASE WHEN rt2.c2 THEN rt0.c2 ELSE NULL END)) AND ((x'5f31'))) DESC;
SELECT * FROM rt0, rt1 WHERE (((rt0.c0) IS FALSE)) ORDER BY ((CAST(rt1.c0 AS TEXT))+(CASE rt1.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt0.c1 THEN rt0.c0 WHEN '0.10647492096934918' THEN rt0.c3 WHEN rt1.c1 THEN rt1.c3 ELSE rt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) IS FALSE)) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((CAST(rt1.c0 AS TEXT))+(CASE rt1.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt0.c1 THEN rt0.c0 WHEN '0.10647492096934918' THEN rt0.c3 WHEN rt1.c1 THEN rt1.c3 ELSE rt0.c0 END)));
SELECT * FROM rt0, rt1 WHERE (((rt0.c0) IS FALSE)) ORDER BY ((CAST(rt1.c0 AS TEXT))+(CASE rt1.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt0.c1 THEN rt0.c0 WHEN '0.10647492096934918' THEN rt0.c3 WHEN rt1.c1 THEN rt1.c3 ELSE rt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) IS FALSE)) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((CAST(rt1.c0 AS TEXT))+(CASE rt1.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt0.c1 THEN rt0.c0 WHEN '0.10647492096934918' THEN rt0.c3 WHEN rt1.c1 THEN rt1.c3 ELSE rt0.c0 END)));
SELECT * FROM rt0, rt1 WHERE (((rt0.c0) IS FALSE)) ORDER BY ((CAST(rt1.c0 AS TEXT))+(CASE rt1.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt0.c1 THEN rt0.c0 WHEN '0.10647492096934918' THEN rt0.c3 WHEN rt1.c1 THEN rt1.c3 ELSE rt0.c0 END));
SELECT * FROM rt0, rt2, rt1 WHERE (HEX(((rt2.c2)IS NOT(rt0.c3)))) ORDER BY ((((rt0.c0)IS NOT(rt1.c3))) IS TRUE) ASC  NULLS LAST, CASE ((((rt0.c1)OR('1260380017')))AND(0.4264277336780933))  WHEN rt0.c3 THEN rt1.c0 ELSE rt0.c0 END DESC, CASE ((rt0.c2) NOT BETWEEN (rt1.c4) AND (rt0.c0))  WHEN ((rt1.c4) ISNULL) THEN (((rt0.c3))=((rt0.c0))) ELSE ((rt0.c1)&(rt1.c4)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((HEX(((rt2.c2)IS NOT(rt0.c3)))) IS TRUE)  as count FROM rt0, rt2, rt1 ORDER BY ((((rt0.c0)IS NOT(rt1.c3))) IS TRUE) ASC  NULLS LAST, CASE ((((rt0.c1)OR('1260380017')))AND(0.4264277336780933))  WHEN rt0.c3 THEN rt1.c0 ELSE rt0.c0 END DESC, CASE ((rt0.c2) NOT BETWEEN (rt1.c4) AND (rt0.c0))  WHEN ((rt1.c4) ISNULL) THEN (((rt0.c3))==((rt0.c0))) ELSE ((rt0.c1)&(rt1.c4)) END ASC  NULLS FIRST);
SELECT * FROM rt0, rt2, rt1 WHERE (HEX(((rt2.c2)IS NOT(rt0.c3)))) ORDER BY ((((rt0.c0)IS NOT(rt1.c3))) IS TRUE) ASC  NULLS LAST, CASE ((((rt0.c1)OR('1260380017')))AND(0.4264277336780933))  WHEN rt0.c3 THEN rt1.c0 ELSE rt0.c0 END DESC, CASE ((rt0.c2) NOT BETWEEN (rt1.c4) AND (rt0.c0))  WHEN ((rt1.c4) ISNULL) THEN (((rt0.c3))=((rt0.c0))) ELSE ((rt0.c1)&(rt1.c4)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((HEX(((rt2.c2)IS NOT(rt0.c3)))) IS TRUE)  as count FROM rt0, rt2, rt1 ORDER BY ((((rt0.c0)IS NOT(rt1.c3))) IS TRUE) ASC  NULLS LAST, CASE ((((rt0.c1)OR('1260380017')))AND(0.4264277336780933))  WHEN rt0.c3 THEN rt1.c0 ELSE rt0.c0 END DESC, CASE ((rt0.c2) NOT BETWEEN (rt1.c4) AND (rt0.c0))  WHEN ((rt1.c4) ISNULL) THEN (((rt0.c3))==((rt0.c0))) ELSE ((rt0.c1)&(rt1.c4)) END ASC  NULLS FIRST);
SELECT * FROM rt0, rt2, rt1 WHERE (HEX(((rt2.c2)IS NOT(rt0.c3)))) ORDER BY ((((rt0.c0)IS NOT(rt1.c3))) IS TRUE) ASC  NULLS LAST, CASE ((((rt0.c1)OR('1260380017')))AND(0.4264277336780933))  WHEN rt0.c3 THEN rt1.c0 ELSE rt0.c0 END DESC, CASE ((rt0.c2) NOT BETWEEN (rt1.c4) AND (rt0.c0))  WHEN ((rt1.c4) ISNULL) THEN (((rt0.c3))=((rt0.c0))) ELSE ((rt0.c1)&(rt1.c4)) END ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt2 WHERE (((((rt2.c1) NOT BETWEEN (rt2.c1) AND (rt2.c0)))AND(CAST(rt2.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((rt2.c1) NOT BETWEEN (rt2.c1) AND (rt2.c0)))AND(CAST(rt2.c2 AS TEXT)))) IS TRUE)  as count FROM rt2);
SELECT COUNT(*) FROM rt2 WHERE (((((rt2.c1) NOT BETWEEN (rt2.c1) AND (rt2.c0)))AND(CAST(rt2.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((rt2.c1) NOT BETWEEN (rt2.c1) AND (rt2.c0)))AND(CAST(rt2.c2 AS TEXT)))) IS TRUE)  as count FROM rt2);
SELECT COUNT(*) FROM rt2 WHERE (((((rt2.c1) NOT BETWEEN (rt2.c1) AND (rt2.c0)))AND(CAST(rt2.c2 AS TEXT))));
SELECT ALL * FROM rt2, rt0, rt1 WHERE (rt0.c0) ORDER BY (((+ (rt1.c3)))|(((((rt0.c0)AND(rt1.c1)))OR(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt2, rt0, rt1 ORDER BY (((+ (rt1.c3)))|(((((rt0.c0)AND(rt1.c1)))OR(rt0.c2))))  NULLS FIRST);
SELECT ALL * FROM rt2, rt0, rt1 WHERE (rt0.c0) ORDER BY (((+ (rt1.c3)))|(((((rt0.c0)AND(rt1.c1)))OR(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt2, rt0, rt1 ORDER BY (((+ (rt1.c3)))|(((((rt0.c0)AND(rt1.c1)))OR(rt0.c2))))  NULLS FIRST);
SELECT ALL * FROM rt2, rt0, rt1 WHERE (rt0.c0) ORDER BY (((+ (rt1.c3)))|(((((rt0.c0)AND(rt1.c1)))OR(rt0.c2))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt2 WHERE (((rt2.c2)&(rt2.c1)) COLLATE BINARY) ORDER BY CASE WHEN rt2.c0 COLLATE BINARY THEN CAST(rt2.c0 AS NUMERIC) WHEN ((rt2.c2) NOT NULL) THEN ((rt2.c2) BETWEEN (rt2.c0) AND (rt2.c0)) WHEN (((rt2.c0)) BETWEEN ((rt2.c2)) AND ((rt2.c2))) THEN ((-3.01066604E8)*(rt2.c2)) END ASC  NULLS FIRST, ((((rt2.c0)||(rt2.c1)))/(((rt2.c1) NOT BETWEEN (rt2.c1) AND (rt2.c0)))) DESC  NULLS LAST, ((NULL) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt2.c2)&(rt2.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt2 ORDER BY CASE WHEN rt2.c0 COLLATE BINARY THEN CAST(rt2.c0 AS NUMERIC) WHEN ((rt2.c2) NOT NULL) THEN ((rt2.c2) BETWEEN (rt2.c0) AND (rt2.c0)) WHEN (((rt2.c0)) BETWEEN ((rt2.c2)) AND ((rt2.c2))) THEN ((-3.01066604E8)*(rt2.c2)) END ASC  NULLS FIRST, ((((rt2.c0)||(rt2.c1)))/(((rt2.c1) NOT BETWEEN (rt2.c1) AND (rt2.c0)))) DESC  NULLS LAST, ((NULL) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM rt2 WHERE (((rt2.c2)&(rt2.c1)) COLLATE BINARY) ORDER BY CASE WHEN rt2.c0 COLLATE BINARY THEN CAST(rt2.c0 AS NUMERIC) WHEN ((rt2.c2) NOT NULL) THEN ((rt2.c2) BETWEEN (rt2.c0) AND (rt2.c0)) WHEN (((rt2.c0)) BETWEEN ((rt2.c2)) AND ((rt2.c2))) THEN ((-3.01066604E8)*(rt2.c2)) END ASC  NULLS FIRST, ((((rt2.c0)||(rt2.c1)))/(((rt2.c1) NOT BETWEEN (rt2.c1) AND (rt2.c0)))) DESC  NULLS LAST, ((NULL) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt2.c2)&(rt2.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt2 ORDER BY CASE WHEN rt2.c0 COLLATE BINARY THEN CAST(rt2.c0 AS NUMERIC) WHEN ((rt2.c2) NOT NULL) THEN ((rt2.c2) BETWEEN (rt2.c0) AND (rt2.c0)) WHEN (((rt2.c0)) BETWEEN ((rt2.c2)) AND ((rt2.c2))) THEN ((-3.01066604E8)*(rt2.c2)) END ASC  NULLS FIRST, ((((rt2.c0)||(rt2.c1)))/(((rt2.c1) NOT BETWEEN (rt2.c1) AND (rt2.c0)))) DESC  NULLS LAST, ((NULL) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM rt2 WHERE (((rt2.c2)&(rt2.c1)) COLLATE BINARY) ORDER BY CASE WHEN rt2.c0 COLLATE BINARY THEN CAST(rt2.c0 AS NUMERIC) WHEN ((rt2.c2) NOT NULL) THEN ((rt2.c2) BETWEEN (rt2.c0) AND (rt2.c0)) WHEN (((rt2.c0)) BETWEEN ((rt2.c2)) AND ((rt2.c2))) THEN ((-3.01066604E8)*(rt2.c2)) END ASC  NULLS FIRST, ((((rt2.c0)||(rt2.c1)))/(((rt2.c1) NOT BETWEEN (rt2.c1) AND (rt2.c0)))) DESC  NULLS LAST, ((NULL) IS TRUE) DESC;
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c1)==(rt1.c0)) AS REAL) WHERE ((((- ('-1183689414'))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((- ('-1183689414'))) IS FALSE)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c1)==(rt1.c0)) AS REAL));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c1)==(rt1.c0)) AS REAL) WHERE ((((- ('-1183689414'))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((- ('-1183689414'))) IS FALSE)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c1)==(rt1.c0)) AS REAL));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c1)==(rt1.c0)) AS REAL) WHERE ((((- ('-1183689414'))) IS FALSE));
SELECT * FROM rt2, rt0, rt1 WHERE (((((0.7168742408262071)AND(((rt2.c0) BETWEEN (rt0.c0) AND (rt0.c3)))))AND(((rt0.c0)>(rt2.c2))))) ORDER BY UNLIKELY(DISTINCT rt1.c0)  NULLS LAST, ((rt2.c2 COLLATE NOCASE)||(((rt1.c1) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ((((((0.7168742408262071)AND(((rt2.c0) BETWEEN (rt0.c0) AND (rt0.c3)))))AND(((rt0.c0)>(rt2.c2))))) IS TRUE)  as count FROM rt2, rt0, rt1 ORDER BY UNLIKELY(DISTINCT rt1.c0)  NULLS LAST, ((rt2.c2 COLLATE NOCASE)||(((rt1.c1) IS FALSE))) DESC);
SELECT * FROM rt2, rt0, rt1 WHERE (((((0.7168742408262071)AND(((rt2.c0) BETWEEN (rt0.c0) AND (rt0.c3)))))AND(((rt0.c0)>(rt2.c2))))) ORDER BY UNLIKELY(DISTINCT rt1.c0)  NULLS LAST, ((rt2.c2 COLLATE NOCASE)||(((rt1.c1) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ((((((0.7168742408262071)AND(((rt2.c0) BETWEEN (rt0.c0) AND (rt0.c3)))))AND(((rt0.c0)>(rt2.c2))))) IS TRUE)  as count FROM rt2, rt0, rt1 ORDER BY UNLIKELY(DISTINCT rt1.c0)  NULLS LAST, ((rt2.c2 COLLATE NOCASE)||(((rt1.c1) IS FALSE))) DESC);
SELECT * FROM rt2, rt0, rt1 WHERE (((((0.7168742408262071)AND(((rt2.c0) BETWEEN (rt0.c0) AND (rt0.c3)))))AND(((rt0.c0)>(rt2.c2))))) ORDER BY UNLIKELY(DISTINCT rt1.c0)  NULLS LAST, ((rt2.c2 COLLATE NOCASE)||(((rt1.c1) IS FALSE))) DESC;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN rt2 ON ((rt2.c2) NOT BETWEEN (rt0.c2) AND (rt2.c2)) COLLATE NOCASE LEFT OUTER JOIN rt1 ON ((((x'')||(rt1.c1)))==(((rt0.c3)<<(rt0.c2)))) WHERE ((((x'') IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((x'') IS TRUE) IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN rt2 ON ((rt2.c2) NOT BETWEEN (rt0.c2) AND (rt2.c2)) COLLATE NOCASE LEFT OUTER JOIN rt1 ON ((((x'')||(rt1.c1)))==(((rt0.c3)<<(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN rt2 ON ((rt2.c2) NOT BETWEEN (rt0.c2) AND (rt2.c2)) COLLATE NOCASE LEFT OUTER JOIN rt1 ON ((((x'')||(rt1.c1)))==(((rt0.c3)<<(rt0.c2)))) WHERE ((((x'') IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((x'') IS TRUE) IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN rt2 ON ((rt2.c2) NOT BETWEEN (rt0.c2) AND (rt2.c2)) COLLATE NOCASE LEFT OUTER JOIN rt1 ON ((((x'')||(rt1.c1)))==(((rt0.c3)<<(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN rt2 ON ((rt2.c2) NOT BETWEEN (rt0.c2) AND (rt2.c2)) COLLATE NOCASE LEFT OUTER JOIN rt1 ON ((((x'')||(rt1.c1)))==(((rt0.c3)<<(rt0.c2)))) WHERE ((((x'') IS TRUE) IN ()));
SELECT * FROM rt2 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt2);
SELECT * FROM rt2 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt2);
SELECT * FROM rt2 WHERE ('');
SELECT ALL * FROM rt2, rt1 CROSS JOIN rt0 ON ((rt2.c2 COLLATE BINARY) NOTNULL) WHERE (((x'd7b9') NOT BETWEEN ((rt0.c2 IN (x''))) AND (rt2.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((x'd7b9') NOT BETWEEN ((rt0.c2 IN (x''))) AND (rt2.c0))) IS TRUE)  as count FROM rt2, rt1 CROSS JOIN rt0 ON ((rt2.c2 COLLATE BINARY) NOTNULL));
SELECT ALL * FROM rt2, rt1 CROSS JOIN rt0 ON ((rt2.c2 COLLATE BINARY) NOTNULL) WHERE (((x'd7b9') NOT BETWEEN ((rt0.c2 IN (x''))) AND (rt2.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((x'd7b9') NOT BETWEEN ((rt0.c2 IN (x''))) AND (rt2.c0))) IS TRUE)  as count FROM rt2, rt1 CROSS JOIN rt0 ON ((rt2.c2 COLLATE BINARY) NOTNULL));
SELECT ALL * FROM rt2, rt1 CROSS JOIN rt0 ON ((rt2.c2 COLLATE BINARY) NOTNULL) WHERE (((x'd7b9') NOT BETWEEN ((rt0.c2 IN (x''))) AND (rt2.c0)));
SELECT * FROM rt1 INNER JOIN rt0 ON (((((rt1.c1)) BETWEEN ((rt1.c4)) AND ((rt0.c3)))) NOT BETWEEN ((rt0.c1 IN ())) AND (CAST(rt0.c2 AS TEXT))) WHERE (((rt1.c0) BETWEEN (((rt0.c0) IS TRUE)) AND ((((rt1.c4))<=((rt0.c3)))))) ORDER BY CAST((~ (1280373435)) AS REAL), ((rt1.c2)<<(rt1.c3)) COLLATE BINARY ASC, CAST(rt1.c0 AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((((rt1.c0) BETWEEN (((rt0.c0) IS TRUE)) AND ((((rt1.c4))<=((rt0.c3)))))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON (((((rt1.c1)) BETWEEN ((rt1.c4)) AND ((rt0.c3)))) NOT BETWEEN ((rt0.c1 IN ())) AND (CAST(rt0.c2 AS TEXT))) ORDER BY CAST((~ (1280373435)) AS REAL), ((rt1.c2)<<(rt1.c3)) COLLATE BINARY ASC, CAST(rt1.c0 AS TEXT) DESC);
SELECT * FROM rt1 INNER JOIN rt0 ON (((((rt1.c1)) BETWEEN ((rt1.c4)) AND ((rt0.c3)))) NOT BETWEEN ((rt0.c1 IN ())) AND (CAST(rt0.c2 AS TEXT))) WHERE (((rt1.c0) BETWEEN (((rt0.c0) IS TRUE)) AND ((((rt1.c4))<=((rt0.c3)))))) ORDER BY CAST((~ (1280373435)) AS REAL), ((rt1.c2)<<(rt1.c3)) COLLATE BINARY ASC, CAST(rt1.c0 AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((((rt1.c0) BETWEEN (((rt0.c0) IS TRUE)) AND ((((rt1.c4))<=((rt0.c3)))))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON (((((rt1.c1)) BETWEEN ((rt1.c4)) AND ((rt0.c3)))) NOT BETWEEN ((rt0.c1 IN ())) AND (CAST(rt0.c2 AS TEXT))) ORDER BY CAST((~ (1280373435)) AS REAL), ((rt1.c2)<<(rt1.c3)) COLLATE BINARY ASC, CAST(rt1.c0 AS TEXT) DESC);
SELECT * FROM rt1 INNER JOIN rt0 ON (((((rt1.c1)) BETWEEN ((rt1.c4)) AND ((rt0.c3)))) NOT BETWEEN ((rt0.c1 IN ())) AND (CAST(rt0.c2 AS TEXT))) WHERE (((rt1.c0) BETWEEN (((rt0.c0) IS TRUE)) AND ((((rt1.c4))<=((rt0.c3)))))) ORDER BY CAST((~ (1280373435)) AS REAL), ((rt1.c2)<<(rt1.c3)) COLLATE BINARY ASC, CAST(rt1.c0 AS TEXT) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c1)))AND('834375819')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c1)))AND('834375819')) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c1)))AND('834375819')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c1)))AND('834375819')) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c1)))AND('834375819')) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (0.6748342557871275) ORDER BY ((TYPEOF(rt0.c1))-(CAST(rt0.c0 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.6748342557871275) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((TYPEOF(rt0.c1))-(CAST(rt0.c0 AS BLOB))) ASC);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (0.6748342557871275) ORDER BY ((TYPEOF(rt0.c1))-(CAST(rt0.c0 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.6748342557871275) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((TYPEOF(rt0.c1))-(CAST(rt0.c0 AS BLOB))) ASC);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (0.6748342557871275) ORDER BY ((TYPEOF(rt0.c1))-(CAST(rt0.c0 AS BLOB))) ASC;
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1)+(rt0.c0)))AND(((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))))AND(rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)+(rt0.c0)))AND(((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))))AND(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1)+(rt0.c0)))AND(((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))))AND(rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)+(rt0.c0)))AND(((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))))AND(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1)+(rt0.c0)))AND(((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))))AND(rt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM rt1, rt2 WHERE (CASE WHEN ((rt1.c0)OR(rt2.c2)) THEN (rt1.c4 IN ()) ELSE ((rt1.c0) NOT BETWEEN (rt2.c1) AND (rt1.c2)) END) ORDER BY LIKELIHOOD(DISTINCT ((rt1.c0) BETWEEN (rt1.c3) AND (-7224051)), 0.2017016760865783) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c0)OR(rt2.c2)) THEN (rt1.c4 IN ()) ELSE ((rt1.c0) NOT BETWEEN (rt2.c1) AND (rt1.c2)) END) IS TRUE)  as count FROM rt1, rt2 ORDER BY LIKELIHOOD(DISTINCT ((rt1.c0) BETWEEN (rt1.c3) AND (-7224051)), 0.2017016760865783) DESC);
SELECT ALL * FROM rt1, rt2 WHERE (CASE WHEN ((rt1.c0)OR(rt2.c2)) THEN (rt1.c4 IN ()) ELSE ((rt1.c0) NOT BETWEEN (rt2.c1) AND (rt1.c2)) END) ORDER BY LIKELIHOOD(DISTINCT ((rt1.c0) BETWEEN (rt1.c3) AND (-7224051)), 0.2017016760865783) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c0)OR(rt2.c2)) THEN (rt1.c4 IN ()) ELSE ((rt1.c0) NOT BETWEEN (rt2.c1) AND (rt1.c2)) END) IS TRUE)  as count FROM rt1, rt2 ORDER BY LIKELIHOOD(DISTINCT ((rt1.c0) BETWEEN (rt1.c3) AND (-7224051)), 0.2017016760865783) DESC);
SELECT ALL * FROM rt1, rt2 WHERE (CASE WHEN ((rt1.c0)OR(rt2.c2)) THEN (rt1.c4 IN ()) ELSE ((rt1.c0) NOT BETWEEN (rt2.c1) AND (rt1.c2)) END) ORDER BY LIKELIHOOD(DISTINCT ((rt1.c0) BETWEEN (rt1.c3) AND (-7224051)), 0.2017016760865783) DESC;
SELECT COUNT(*) FROM rt2, rt0 WHERE ((((~ (rt2.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt2.c1))) NOT NULL)) IS TRUE)  as count FROM rt2, rt0);
SELECT COUNT(*) FROM rt2, rt0 WHERE ((((~ (rt2.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt2.c1))) NOT NULL)) IS TRUE)  as count FROM rt2, rt0);
SELECT COUNT(*) FROM rt2, rt0 WHERE ((((~ (rt2.c1))) NOT NULL));
SELECT COUNT(*) FROM rt1 WHERE (rt1.c4) ORDER BY ((CAST(rt1.c2 AS NUMERIC)) IS TRUE)  NULLS FIRST, CAST(((((rt1.c1)AND(rt1.c1)))AND(rt1.c3)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c2 AS NUMERIC)) IS TRUE)  NULLS FIRST, CAST(((((rt1.c1)AND(rt1.c1)))AND(rt1.c3)) AS NUMERIC) ASC);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c4) ORDER BY ((CAST(rt1.c2 AS NUMERIC)) IS TRUE)  NULLS FIRST, CAST(((((rt1.c1)AND(rt1.c1)))AND(rt1.c3)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c2 AS NUMERIC)) IS TRUE)  NULLS FIRST, CAST(((((rt1.c1)AND(rt1.c1)))AND(rt1.c3)) AS NUMERIC) ASC);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c4) ORDER BY ((CAST(rt1.c2 AS NUMERIC)) IS TRUE)  NULLS FIRST, CAST(((((rt1.c1)AND(rt1.c1)))AND(rt1.c3)) AS NUMERIC) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)&(rt0.c3)))|((- (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)&(rt0.c3)))|((- (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)&(rt0.c3)))|((- (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)&(rt0.c3)))|((- (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)&(rt0.c3)))|((- (rt0.c2)))));
SELECT * FROM rt1, rt2 WHERE (LIKELY(CAST(rt1.c2 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((LIKELY(CAST(rt1.c2 AS NUMERIC))) IS TRUE)  as count FROM rt1, rt2);
SELECT * FROM rt1, rt2 WHERE (LIKELY(CAST(rt1.c2 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((LIKELY(CAST(rt1.c2 AS NUMERIC))) IS TRUE)  as count FROM rt1, rt2);
SELECT * FROM rt1, rt2 WHERE (LIKELY(CAST(rt1.c2 AS NUMERIC)));
SELECT ALL * FROM rt2 WHERE (((CASE rt2.c2  WHEN rt2.c0 THEN rt2.c0 WHEN rt2.c2 THEN rt2.c0 WHEN 0x6f2998b7 THEN rt2.c0 ELSE rt2.c1 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE rt2.c2  WHEN rt2.c0 THEN rt2.c0 WHEN rt2.c2 THEN rt2.c0 WHEN 0x6f2998b7 THEN rt2.c0 ELSE rt2.c1 END) NOTNULL)) IS TRUE)  as count FROM rt2);
SELECT ALL * FROM rt2 WHERE (((CASE rt2.c2  WHEN rt2.c0 THEN rt2.c0 WHEN rt2.c2 THEN rt2.c0 WHEN 0x6f2998b7 THEN rt2.c0 ELSE rt2.c1 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE rt2.c2  WHEN rt2.c0 THEN rt2.c0 WHEN rt2.c2 THEN rt2.c0 WHEN 0x6f2998b7 THEN rt2.c0 ELSE rt2.c1 END) NOTNULL)) IS TRUE)  as count FROM rt2);
SELECT ALL * FROM rt2 WHERE (((CASE rt2.c2  WHEN rt2.c0 THEN rt2.c0 WHEN rt2.c2 THEN rt2.c0 WHEN 0x6f2998b7 THEN rt2.c0 ELSE rt2.c1 END) NOTNULL));
SELECT * FROM rt2, rt1, rt0 WHERE ((((rt2.c2)) NOT BETWEEN (((rt1.c4 IN ()))) AND ((((((rt0.c1)AND(rt1.c0)))OR(rt1.c3)))))) ORDER BY (((rt2.c0))<((((rt0.c2)>(rt1.c2))))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt2.c2)) NOT BETWEEN (((rt1.c4 IN ()))) AND ((((((rt0.c1)AND(rt1.c0)))OR(rt1.c3)))))) IS TRUE)  as count FROM rt2, rt1, rt0 ORDER BY (((rt2.c0))<((((rt0.c2)>(rt1.c2))))) DESC);
SELECT * FROM rt2, rt1, rt0 WHERE ((((rt2.c2)) NOT BETWEEN (((rt1.c4 IN ()))) AND ((((((rt0.c1)AND(rt1.c0)))OR(rt1.c3)))))) ORDER BY (((rt2.c0))<((((rt0.c2)>(rt1.c2))))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt2.c2)) NOT BETWEEN (((rt1.c4 IN ()))) AND ((((((rt0.c1)AND(rt1.c0)))OR(rt1.c3)))))) IS TRUE)  as count FROM rt2, rt1, rt0 ORDER BY (((rt2.c0))<((((rt0.c2)>(rt1.c2))))) DESC);
SELECT * FROM rt2, rt1, rt0 WHERE ((((rt2.c2)) NOT BETWEEN (((rt1.c4 IN ()))) AND ((((((rt0.c1)AND(rt1.c0)))OR(rt1.c3)))))) ORDER BY (((rt2.c0))<((((rt0.c2)>(rt1.c2))))) DESC;
SELECT * FROM rt1, rt0, rt2 WHERE (((((rt0.c0)!=(rt2.c1))) BETWEEN (((rt1.c3) BETWEEN (rt0.c0) AND (rt1.c0))) AND (((rt1.c0)LIKE(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)!=(rt2.c1))) BETWEEN (((rt1.c3) BETWEEN (rt0.c0) AND (rt1.c0))) AND (((rt1.c0)LIKE(rt1.c0))))) IS TRUE)  as count FROM rt1, rt0, rt2);
SELECT * FROM rt1, rt0, rt2 WHERE (((((rt0.c0)!=(rt2.c1))) BETWEEN (((rt1.c3) BETWEEN (rt0.c0) AND (rt1.c0))) AND (((rt1.c0)LIKE(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)!=(rt2.c1))) BETWEEN (((rt1.c3) BETWEEN (rt0.c0) AND (rt1.c0))) AND (((rt1.c0)LIKE(rt1.c0))))) IS TRUE)  as count FROM rt1, rt0, rt2);
SELECT * FROM rt1, rt0, rt2 WHERE (((((rt0.c0)!=(rt2.c1))) BETWEEN (((rt1.c3) BETWEEN (rt0.c0) AND (rt1.c0))) AND (((rt1.c0)LIKE(rt1.c0)))));
SELECT COUNT(*) FROM rt1 INNER JOIN rt0 ON UNLIKELY(((x'0d43') BETWEEN (x'') AND (rt1.c1))) WHERE (TRIM((((rt0.c2, x'', rt1.c3))=((rt0.c2, rt1.c1, rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((TRIM((((rt0.c2, x'', rt1.c3))==((rt0.c2, rt1.c1, rt1.c1))))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON UNLIKELY(((x'0d43') BETWEEN (x'') AND (rt1.c1))));
SELECT COUNT(*) FROM rt1 INNER JOIN rt0 ON UNLIKELY(((x'0d43') BETWEEN (x'') AND (rt1.c1))) WHERE (TRIM((((rt0.c2, x'', rt1.c3))=((rt0.c2, rt1.c1, rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((TRIM((((rt0.c2, x'', rt1.c3))==((rt0.c2, rt1.c1, rt1.c1))))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON UNLIKELY(((x'0d43') BETWEEN (x'') AND (rt1.c1))));
SELECT COUNT(*) FROM rt1 INNER JOIN rt0 ON UNLIKELY(((x'0d43') BETWEEN (x'') AND (rt1.c1))) WHERE (TRIM((((rt0.c2, x'', rt1.c3))=((rt0.c2, rt1.c1, rt1.c1)))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((rt1.c3)&((+ (rt1.c3))))) ORDER BY (('zz%O\r,')%(((rt0.c3)==(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3)&((+ (rt1.c3))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (('zz%O\r,')%(((rt0.c3)=(rt1.c2)))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((rt1.c3)&((+ (rt1.c3))))) ORDER BY (('zz%O\r,')%(((rt0.c3)==(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3)&((+ (rt1.c3))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (('zz%O\r,')%(((rt0.c3)=(rt1.c2)))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((rt1.c3)&((+ (rt1.c3))))) ORDER BY (('zz%O\r,')%(((rt0.c3)==(rt1.c2))));
SELECT ALL * FROM rt2, rt1 WHERE (CAST(((rt1.c3) IS FALSE) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c3) IS FALSE) AS INTEGER)) IS TRUE)  as count FROM rt2, rt1);
SELECT ALL * FROM rt2, rt1 WHERE (CAST(((rt1.c3) IS FALSE) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c3) IS FALSE) AS INTEGER)) IS TRUE)  as count FROM rt2, rt1);
SELECT ALL * FROM rt2, rt1 WHERE (CAST(((rt1.c3) IS FALSE) AS INTEGER));
SELECT * FROM rt1, rt2 WHERE (((NULL IN ()) IN (CAST(rt1.c2 AS TEXT)))) ORDER BY (((rt2.c1)IS(rt1.c4)) IN ()) DESC  NULLS LAST, CASE (0.29721303449231207 IN ())  WHEN ((rt2.c0) NOT NULL) THEN ((rt2.c0) NOTNULL) END DESC;
SELECT SUM(count) FROM (SELECT ((((NULL IN ()) IN (CAST(rt1.c2 AS TEXT)))) IS TRUE)  as count FROM rt1, rt2 ORDER BY (((rt2.c1)IS(rt1.c4)) IN ()) DESC  NULLS LAST, CASE (0.29721303449231207 IN ())  WHEN ((rt2.c0) NOT NULL) THEN ((rt2.c0) NOTNULL) END DESC);
SELECT * FROM rt1, rt2 WHERE (((NULL IN ()) IN (CAST(rt1.c2 AS TEXT)))) ORDER BY (((rt2.c1)IS(rt1.c4)) IN ()) DESC  NULLS LAST, CASE (0.29721303449231207 IN ())  WHEN ((rt2.c0) NOT NULL) THEN ((rt2.c0) NOTNULL) END DESC;
SELECT SUM(count) FROM (SELECT ((((NULL IN ()) IN (CAST(rt1.c2 AS TEXT)))) IS TRUE)  as count FROM rt1, rt2 ORDER BY (((rt2.c1)IS(rt1.c4)) IN ()) DESC  NULLS LAST, CASE (0.29721303449231207 IN ())  WHEN ((rt2.c0) NOT NULL) THEN ((rt2.c0) NOTNULL) END DESC);
SELECT * FROM rt1, rt2 WHERE (((NULL IN ()) IN (CAST(rt1.c2 AS TEXT)))) ORDER BY (((rt2.c1)IS(rt1.c4)) IN ()) DESC  NULLS LAST, CASE (0.29721303449231207 IN ())  WHEN ((rt2.c0) NOT NULL) THEN ((rt2.c0) NOTNULL) END DESC;
SELECT ALL * FROM rt0, rt2, rt1 WHERE ((((((rt1.c1)AND(rt1.c1)))AND(rt2.c0)) IN ())) ORDER BY COALESCE(((rt0.c0) NOT BETWEEN (rt2.c0) AND (rt0.c1)), NULL);
SELECT SUM(count) FROM (SELECT (((((((rt1.c1)AND(rt1.c1)))AND(rt2.c0)) IN ())) IS TRUE)  as count FROM rt0, rt2, rt1 ORDER BY COALESCE(((rt0.c0) NOT BETWEEN (rt2.c0) AND (rt0.c1)), NULL));
SELECT ALL * FROM rt0, rt2, rt1 WHERE ((((((rt1.c1)AND(rt1.c1)))AND(rt2.c0)) IN ())) ORDER BY COALESCE(((rt0.c0) NOT BETWEEN (rt2.c0) AND (rt0.c1)), NULL);
SELECT SUM(count) FROM (SELECT (((((((rt1.c1)AND(rt1.c1)))AND(rt2.c0)) IN ())) IS TRUE)  as count FROM rt0, rt2, rt1 ORDER BY COALESCE(((rt0.c0) NOT BETWEEN (rt2.c0) AND (rt0.c1)), NULL));
SELECT ALL * FROM rt0, rt2, rt1 WHERE ((((((rt1.c1)AND(rt1.c1)))AND(rt2.c0)) IN ())) ORDER BY COALESCE(((rt0.c0) NOT BETWEEN (rt2.c0) AND (rt0.c1)), NULL);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c4))))OR(((rt1.c4) ISNULL)))) ORDER BY CAST(0.14051371554769276 AS BLOB), ((rt1.c3) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c4))))OR(((rt1.c4) ISNULL)))) IS TRUE)  as count FROM rt1 ORDER BY CAST(0.14051371554769276 AS BLOB), ((rt1.c3) NOT NULL) ASC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c4))))OR(((rt1.c4) ISNULL)))) ORDER BY CAST(0.14051371554769276 AS BLOB), ((rt1.c3) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c4))))OR(((rt1.c4) ISNULL)))) IS TRUE)  as count FROM rt1 ORDER BY CAST(0.14051371554769276 AS BLOB), ((rt1.c3) NOT NULL) ASC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c4))))OR(((rt1.c4) ISNULL)))) ORDER BY CAST(0.14051371554769276 AS BLOB), ((rt1.c3) NOT NULL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt2 WHERE ((NOT ((rt2.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt2.c0 IN ())))) IS TRUE)  as count FROM rt2);
SELECT ALL COUNT(*) FROM rt2 WHERE ((NOT ((rt2.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt2.c0 IN ())))) IS TRUE)  as count FROM rt2);
SELECT ALL COUNT(*) FROM rt2 WHERE ((NOT ((rt2.c0 IN ()))));
SELECT * FROM rt1 WHERE ((+ (((rt1.c4)GLOB(rt1.c3))))) ORDER BY ((CAST(rt1.c1 AS BLOB)) NOT BETWEEN (((((rt1.c3)AND(rt1.c1)))AND(rt1.c4))) AND (((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c4))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c4)GLOB(rt1.c3))))) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c1 AS BLOB)) NOT BETWEEN (((((rt1.c3)AND(rt1.c1)))AND(rt1.c4))) AND (((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c4)))));
SELECT * FROM rt1 WHERE ((+ (((rt1.c4)GLOB(rt1.c3))))) ORDER BY ((CAST(rt1.c1 AS BLOB)) NOT BETWEEN (((((rt1.c3)AND(rt1.c1)))AND(rt1.c4))) AND (((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c4))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c4)GLOB(rt1.c3))))) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c1 AS BLOB)) NOT BETWEEN (((((rt1.c3)AND(rt1.c1)))AND(rt1.c4))) AND (((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c4)))));
SELECT * FROM rt1 WHERE ((+ (((rt1.c4)GLOB(rt1.c3))))) ORDER BY ((CAST(rt1.c1 AS BLOB)) NOT BETWEEN (((((rt1.c3)AND(rt1.c1)))AND(rt1.c4))) AND (((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c4))));
SELECT ALL COUNT(*) FROM rt0, rt2, rt1 WHERE ((((((rt1.c1)LIKE(rt1.c1))))<>((((rt1.c4) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1)LIKE(rt1.c1))))<>((((rt1.c4) IS FALSE))))) IS TRUE)  as count FROM rt0, rt2, rt1);
SELECT ALL COUNT(*) FROM rt0, rt2, rt1 WHERE ((((((rt1.c1)LIKE(rt1.c1))))<>((((rt1.c4) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1)LIKE(rt1.c1))))<>((((rt1.c4) IS FALSE))))) IS TRUE)  as count FROM rt0, rt2, rt1);
SELECT ALL COUNT(*) FROM rt0, rt2, rt1 WHERE ((((((rt1.c1)LIKE(rt1.c1))))<>((((rt1.c4) IS FALSE)))));
SELECT COUNT(*) FROM rt2 WHERE (CASE WHEN ((rt2.c0) BETWEEN (rt2.c0) AND (rt2.c2)) THEN rt2.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt2.c0) BETWEEN (rt2.c0) AND (rt2.c2)) THEN rt2.c1 END) IS TRUE)  as count FROM rt2);
SELECT COUNT(*) FROM rt2 WHERE (CASE WHEN ((rt2.c0) BETWEEN (rt2.c0) AND (rt2.c2)) THEN rt2.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt2.c0) BETWEEN (rt2.c0) AND (rt2.c2)) THEN rt2.c1 END) IS TRUE)  as count FROM rt2);
SELECT COUNT(*) FROM rt2 WHERE (CASE WHEN ((rt2.c0) BETWEEN (rt2.c0) AND (rt2.c2)) THEN rt2.c1 END);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((NULL)<(rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)<(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((NULL)<(rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)<(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((NULL)<(rt0.c1))) IS TRUE));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (NULLIF((((rt0.c0)) NOT BETWEEN ((rt1.c4)) AND ((rt0.c1))), (+ (rt1.c0)))) ORDER BY (+ (NULL)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF((((rt0.c0)) NOT BETWEEN ((rt1.c4)) AND ((rt0.c1))), (+ (rt1.c0)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (+ (NULL)) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (NULLIF((((rt0.c0)) NOT BETWEEN ((rt1.c4)) AND ((rt0.c1))), (+ (rt1.c0)))) ORDER BY (+ (NULL)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF((((rt0.c0)) NOT BETWEEN ((rt1.c4)) AND ((rt0.c1))), (+ (rt1.c0)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (+ (NULL)) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (NULLIF((((rt0.c0)) NOT BETWEEN ((rt1.c4)) AND ((rt0.c1))), (+ (rt1.c0)))) ORDER BY (+ (NULL)) COLLATE RTRIM ASC  NULLS LAST;
SELECT COUNT(*) FROM rt2 WHERE (((ROUND(rt2.c0, rt2.c2))OR((rt2.c2 IN ())))) ORDER BY LIKELIHOOD(((rt2.c0) IS TRUE), 0.3313602681481651) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((ROUND(rt2.c0, rt2.c2))OR((rt2.c2 IN ())))) IS TRUE)  as count FROM rt2 ORDER BY LIKELIHOOD(((rt2.c0) IS TRUE), 0.3313602681481651) DESC);
SELECT COUNT(*) FROM rt2 WHERE (((ROUND(rt2.c0, rt2.c2))OR((rt2.c2 IN ())))) ORDER BY LIKELIHOOD(((rt2.c0) IS TRUE), 0.3313602681481651) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((ROUND(rt2.c0, rt2.c2))OR((rt2.c2 IN ())))) IS TRUE)  as count FROM rt2 ORDER BY LIKELIHOOD(((rt2.c0) IS TRUE), 0.3313602681481651) DESC);
SELECT COUNT(*) FROM rt2 WHERE (((ROUND(rt2.c0, rt2.c2))OR((rt2.c2 IN ())))) ORDER BY LIKELIHOOD(((rt2.c0) IS TRUE), 0.3313602681481651) DESC;
SELECT * FROM rt0 WHERE (HEX(DISTINCT (('') NOT BETWEEN (x'caa0d973') AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT (('') NOT BETWEEN (x'caa0d973') AND (rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (HEX(DISTINCT (('') NOT BETWEEN (x'caa0d973') AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT (('') NOT BETWEEN (x'caa0d973') AND (rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (HEX(DISTINCT (('') NOT BETWEEN (x'caa0d973') AND (rt0.c0))));
SELECT COUNT(*) FROM rt2, rt1 WHERE (((((((rt1.c3)OR(rt1.c0)))OR(((rt1.c0)>(rt1.c3)))))AND(((rt2.c2) BETWEEN (rt2.c1) AND (rt2.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c3)OR(rt1.c0)))OR(((rt1.c0)>(rt1.c3)))))AND(((rt2.c2) BETWEEN (rt2.c1) AND (rt2.c0))))) IS TRUE)  as count FROM rt2, rt1);
SELECT COUNT(*) FROM rt2, rt1 WHERE (((((((rt1.c3)OR(rt1.c0)))OR(((rt1.c0)>(rt1.c3)))))AND(((rt2.c2) BETWEEN (rt2.c1) AND (rt2.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c3)OR(rt1.c0)))OR(((rt1.c0)>(rt1.c3)))))AND(((rt2.c2) BETWEEN (rt2.c1) AND (rt2.c0))))) IS TRUE)  as count FROM rt2, rt1);
SELECT COUNT(*) FROM rt2, rt1 WHERE (((((((rt1.c3)OR(rt1.c0)))OR(((rt1.c0)>(rt1.c3)))))AND(((rt2.c2) BETWEEN (rt2.c1) AND (rt2.c0)))));
SELECT * FROM rt0 WHERE (SQLITE_COMPILEOPTION_USED(((rt0.c1) NOT NULL))) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(((rt0.c1) NOT NULL))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1  NULLS LAST);
SELECT * FROM rt0 WHERE (SQLITE_COMPILEOPTION_USED(((rt0.c1) NOT NULL))) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(((rt0.c1) NOT NULL))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1  NULLS LAST);
SELECT * FROM rt0 WHERE (SQLITE_COMPILEOPTION_USED(((rt0.c1) NOT NULL))) ORDER BY rt0.c1  NULLS LAST;
SELECT ALL COUNT(*) FROM rt2, rt1 CROSS JOIN rt0 ON ((((((((((rt0.c2) ISNULL))AND(CAST(rt2.c0 AS INTEGER))))AND(((((((((rt0.c3)OR(rt2.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt2.c0)))))OR(rt0.c3)))OR(((rt0.c3) BETWEEN (rt1.c3) AND (rt0.c3)))) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt2, rt1 CROSS JOIN rt0 ON ((((((((((rt0.c2) ISNULL))AND(CAST(rt2.c0 AS INTEGER))))AND(((((((((rt0.c3)OR(rt2.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt2.c0)))))OR(rt0.c3)))OR(((rt0.c3) BETWEEN (rt1.c3) AND (rt0.c3)))));
SELECT ALL COUNT(*) FROM rt2, rt1 CROSS JOIN rt0 ON ((((((((((rt0.c2) ISNULL))AND(CAST(rt2.c0 AS INTEGER))))AND(((((((((rt0.c3)OR(rt2.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt2.c0)))))OR(rt0.c3)))OR(((rt0.c3) BETWEEN (rt1.c3) AND (rt0.c3)))) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt2, rt1 CROSS JOIN rt0 ON ((((((((((rt0.c2) ISNULL))AND(CAST(rt2.c0 AS INTEGER))))AND(((((((((rt0.c3)OR(rt2.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt2.c0)))))OR(rt0.c3)))OR(((rt0.c3) BETWEEN (rt1.c3) AND (rt0.c3)))));
SELECT ALL COUNT(*) FROM rt2, rt1 CROSS JOIN rt0 ON ((((((((((rt0.c2) ISNULL))AND(CAST(rt2.c0 AS INTEGER))))AND(((((((((rt0.c3)OR(rt2.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt2.c0)))))OR(rt0.c3)))OR(((rt0.c3) BETWEEN (rt1.c3) AND (rt0.c3)))) WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))>(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN 336023068 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))) ORDER BY (((rt0.c1)) BETWEEN (((rt0.c3 IN ()))) AND ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0))))) ASC, ((NOT (rt0.c2)) IN ())  NULLS FIRST, (((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN (('1705413232', (rt0.c1 IN ()), ((rt0.c2)-(rt0.c2)))) AND ((((((rt0.c0)OR('fI')))OR(rt0.c1)), rt0.c0 COLLATE RTRIM, GLOB(rt0.c1, rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))>(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN 336023068 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) BETWEEN (((rt0.c3 IN ()))) AND ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0))))) ASC, ((NOT (rt0.c2)) IN ())  NULLS FIRST, (((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN (('1705413232', (rt0.c1 IN ()), ((rt0.c2)-(rt0.c2)))) AND ((((((rt0.c0)OR('fI')))OR(rt0.c1)), rt0.c0 COLLATE RTRIM, GLOB(rt0.c1, rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))>(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN 336023068 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))) ORDER BY (((rt0.c1)) BETWEEN (((rt0.c3 IN ()))) AND ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0))))) ASC, ((NOT (rt0.c2)) IN ())  NULLS FIRST, (((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN (('1705413232', (rt0.c1 IN ()), ((rt0.c2)-(rt0.c2)))) AND ((((((rt0.c0)OR('fI')))OR(rt0.c1)), rt0.c0 COLLATE RTRIM, GLOB(rt0.c1, rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))>(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN 336023068 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) BETWEEN (((rt0.c3 IN ()))) AND ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0))))) ASC, ((NOT (rt0.c2)) IN ())  NULLS FIRST, (((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN (('1705413232', (rt0.c1 IN ()), ((rt0.c2)-(rt0.c2)))) AND ((((((rt0.c0)OR('fI')))OR(rt0.c1)), rt0.c0 COLLATE RTRIM, GLOB(rt0.c1, rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))>(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN 336023068 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))) ORDER BY (((rt0.c1)) BETWEEN (((rt0.c3 IN ()))) AND ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0))))) ASC, ((NOT (rt0.c2)) IN ())  NULLS FIRST, (((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN (('1705413232', (rt0.c1 IN ()), ((rt0.c2)-(rt0.c2)))) AND ((((((rt0.c0)OR('fI')))OR(rt0.c1)), rt0.c0 COLLATE RTRIM, GLOB(rt0.c1, rt0.c2))));
SELECT ALL * FROM rt1 FULL OUTER JOIN rt2 ON ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END) NOT BETWEEN (NULL) AND (CAST(rt0.c2 AS BLOB))) INNER JOIN rt0 ON 0.24723988947084496 WHERE ((((~ (rt1.c2)))>>((~ (rt0.c1))))) ORDER BY (((CAST(rt1.c0 AS TEXT), (((rt2.c1)) BETWEEN ((rt1.c4)) AND ((rt2.c2))), ((rt1.c3) BETWEEN (rt1.c4) AND (NULL))))>=((((((rt1.c2)OR(rt2.c0)))OR(rt0.c1)), CASE rt1.c1  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END, ((rt1.c4) IS TRUE)))) ASC  NULLS LAST, ((CAST(0.18102665994635614 AS TEXT))&(LIKELY(rt1.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (rt1.c2)))>>((~ (rt0.c1))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt2 ON ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END) NOT BETWEEN (NULL) AND (CAST(rt0.c2 AS BLOB))) INNER JOIN rt0 ON 0.24723988947084496 ORDER BY (((CAST(rt1.c0 AS TEXT), (((rt2.c1)) BETWEEN ((rt1.c4)) AND ((rt2.c2))), ((rt1.c3) BETWEEN (rt1.c4) AND (NULL))))>=((((((rt1.c2)OR(rt2.c0)))OR(rt0.c1)), CASE rt1.c1  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END, ((rt1.c4) IS TRUE)))) ASC  NULLS LAST, ((CAST(0.18102665994635614 AS TEXT))&(LIKELY(rt1.c2)))  NULLS LAST);
SELECT ALL * FROM rt1 FULL OUTER JOIN rt2 ON ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END) NOT BETWEEN (NULL) AND (CAST(rt0.c2 AS BLOB))) INNER JOIN rt0 ON 0.24723988947084496 WHERE ((((~ (rt1.c2)))>>((~ (rt0.c1))))) ORDER BY (((CAST(rt1.c0 AS TEXT), (((rt2.c1)) BETWEEN ((rt1.c4)) AND ((rt2.c2))), ((rt1.c3) BETWEEN (rt1.c4) AND (NULL))))>=((((((rt1.c2)OR(rt2.c0)))OR(rt0.c1)), CASE rt1.c1  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END, ((rt1.c4) IS TRUE)))) ASC  NULLS LAST, ((CAST(0.18102665994635614 AS TEXT))&(LIKELY(rt1.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (rt1.c2)))>>((~ (rt0.c1))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt2 ON ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END) NOT BETWEEN (NULL) AND (CAST(rt0.c2 AS BLOB))) INNER JOIN rt0 ON 0.24723988947084496 ORDER BY (((CAST(rt1.c0 AS TEXT), (((rt2.c1)) BETWEEN ((rt1.c4)) AND ((rt2.c2))), ((rt1.c3) BETWEEN (rt1.c4) AND (NULL))))>=((((((rt1.c2)OR(rt2.c0)))OR(rt0.c1)), CASE rt1.c1  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END, ((rt1.c4) IS TRUE)))) ASC  NULLS LAST, ((CAST(0.18102665994635614 AS TEXT))&(LIKELY(rt1.c2)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt2 WHERE ((((rt2.c0 COLLATE BINARY))>=((((((((((((((((((rt2.c0)OR(rt2.c1)))AND(x'')))OR(rt2.c2)))AND(rt2.c1)))OR(rt2.c1)))AND(rt2.c2)))AND(rt2.c1)))AND(rt2.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt2.c0 COLLATE BINARY))>=((((((((((((((((((rt2.c0)OR(rt2.c1)))AND(x'')))OR(rt2.c2)))AND(rt2.c1)))OR(rt2.c1)))AND(rt2.c2)))AND(rt2.c1)))AND(rt2.c1)))))) IS TRUE)  as count FROM rt2);
SELECT ALL COUNT(*) FROM rt2 WHERE ((((rt2.c0 COLLATE BINARY))>=((((((((((((((((((rt2.c0)OR(rt2.c1)))AND(x'')))OR(rt2.c2)))AND(rt2.c1)))OR(rt2.c1)))AND(rt2.c2)))AND(rt2.c1)))AND(rt2.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt2.c0 COLLATE BINARY))>=((((((((((((((((((rt2.c0)OR(rt2.c1)))AND(x'')))OR(rt2.c2)))AND(rt2.c1)))OR(rt2.c1)))AND(rt2.c2)))AND(rt2.c1)))AND(rt2.c1)))))) IS TRUE)  as count FROM rt2);
SELECT ALL COUNT(*) FROM rt2 WHERE ((((rt2.c0 COLLATE BINARY))>=((((((((((((((((((rt2.c0)OR(rt2.c1)))AND(x'')))OR(rt2.c2)))AND(rt2.c1)))OR(rt2.c1)))AND(rt2.c2)))AND(rt2.c1)))AND(rt2.c1))))));
SELECT ALL COUNT(*) FROM rt1, rt2, rt0 WHERE ((rt0.c1 IN (rt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN (rt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt2, rt0);
SELECT ALL COUNT(*) FROM rt1, rt2, rt0 WHERE ((rt0.c1 IN (rt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN (rt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt2, rt0);
SELECT ALL COUNT(*) FROM rt1, rt2, rt0 WHERE ((rt0.c1 IN (rt1.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 INNER JOIN rt2 ON ((((((NULL) ISNULL))AND('U.2PV+P,')))OR(rt0.c3 COLLATE RTRIM)) CROSS JOIN rt1 ON 0Xffffffffb036f422 WHERE ((((rt0.c1 COLLATE BINARY, rt2.c2, (((rt2.c1)) BETWEEN ((0.6519486556345967)) AND ((rt1.c2)))))!=((CASE NULL  WHEN '-414332256' THEN rt1.c4 ELSE rt0.c3 END, ((rt2.c2)IS(rt1.c3)), ((((NULL)OR(rt0.c2)))AND(rt1.c4))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 COLLATE BINARY, rt2.c2, (((rt2.c1)) BETWEEN ((0.6519486556345967)) AND ((rt1.c2)))))!=((CASE NULL  WHEN '-414332256' THEN rt1.c4 ELSE rt0.c3 END, ((rt2.c2)IS(rt1.c3)), ((((NULL)OR(rt0.c2)))AND(rt1.c4)))))) IS TRUE)  as count FROM rt0 INNER JOIN rt2 ON ((((((NULL) ISNULL))AND('U.2PV+P,')))OR(rt0.c3 COLLATE RTRIM)) CROSS JOIN rt1 ON 0Xffffffffb036f422);
SELECT COUNT(*) FROM rt0 INNER JOIN rt2 ON ((((((NULL) ISNULL))AND('U.2PV+P,')))OR(rt0.c3 COLLATE RTRIM)) CROSS JOIN rt1 ON 0Xffffffffb036f422 WHERE ((((rt0.c1 COLLATE BINARY, rt2.c2, (((rt2.c1)) BETWEEN ((0.6519486556345967)) AND ((rt1.c2)))))!=((CASE NULL  WHEN '-414332256' THEN rt1.c4 ELSE rt0.c3 END, ((rt2.c2)IS(rt1.c3)), ((((NULL)OR(rt0.c2)))AND(rt1.c4))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 COLLATE BINARY, rt2.c2, (((rt2.c1)) BETWEEN ((0.6519486556345967)) AND ((rt1.c2)))))!=((CASE NULL  WHEN '-414332256' THEN rt1.c4 ELSE rt0.c3 END, ((rt2.c2)IS(rt1.c3)), ((((NULL)OR(rt0.c2)))AND(rt1.c4)))))) IS TRUE)  as count FROM rt0 INNER JOIN rt2 ON ((((((NULL) ISNULL))AND('U.2PV+P,')))OR(rt0.c3 COLLATE RTRIM)) CROSS JOIN rt1 ON 0Xffffffffb036f422);
SELECT COUNT(*) FROM rt0 INNER JOIN rt2 ON ((((((NULL) ISNULL))AND('U.2PV+P,')))OR(rt0.c3 COLLATE RTRIM)) CROSS JOIN rt1 ON 0Xffffffffb036f422 WHERE ((((rt0.c1 COLLATE BINARY, rt2.c2, (((rt2.c1)) BETWEEN ((0.6519486556345967)) AND ((rt1.c2)))))!=((CASE NULL  WHEN '-414332256' THEN rt1.c4 ELSE rt0.c3 END, ((rt2.c2)IS(rt1.c3)), ((((NULL)OR(rt0.c2)))AND(rt1.c4))))));
SELECT COUNT(*) FROM rt2 WHERE (0.8744511982529142);
SELECT SUM(count) FROM (SELECT ((0.8744511982529142) IS TRUE)  as count FROM rt2);
SELECT COUNT(*) FROM rt2 WHERE (0.8744511982529142);
SELECT SUM(count) FROM (SELECT ((0.8744511982529142) IS TRUE)  as count FROM rt2);
SELECT COUNT(*) FROM rt2 WHERE (0.8744511982529142);
SELECT ALL COUNT(*) FROM rt1, rt2, rt0 WHERE ((~ (((((rt1.c1)AND(rt1.c4)))AND(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((rt1.c1)AND(rt1.c4)))AND(rt1.c0))))) IS TRUE)  as count FROM rt1, rt2, rt0);
SELECT ALL COUNT(*) FROM rt1, rt2, rt0 WHERE ((~ (((((rt1.c1)AND(rt1.c4)))AND(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((rt1.c1)AND(rt1.c4)))AND(rt1.c0))))) IS TRUE)  as count FROM rt1, rt2, rt0);
SELECT ALL COUNT(*) FROM rt1, rt2, rt0 WHERE ((~ (((((rt1.c1)AND(rt1.c4)))AND(rt1.c0)))));
SELECT COUNT(*) FROM rt1 WHERE (STRFTIME(TRIM(DISTINCT rt1.c3), ((rt1.c4)*(0x7c19abfc)), ((rt1.c1) IS TRUE))) ORDER BY CAST(CASE WHEN rt1.c4 THEN rt1.c4 END AS INTEGER) ASC, ((((CAST(rt1.c0 AS REAL))OR(0.15509918335793071)))OR(((rt1.c4) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(TRIM(DISTINCT rt1.c3), ((rt1.c4)*(0x7c19abfc)), ((rt1.c1) IS TRUE))) IS TRUE)  as count FROM rt1 ORDER BY CAST(CASE WHEN rt1.c4 THEN rt1.c4 END AS INTEGER) ASC, ((((CAST(rt1.c0 AS REAL))OR(0.15509918335793071)))OR(((rt1.c4) NOTNULL))) DESC);
SELECT COUNT(*) FROM rt1 WHERE (STRFTIME(TRIM(DISTINCT rt1.c3), ((rt1.c4)*(0x7c19abfc)), ((rt1.c1) IS TRUE))) ORDER BY CAST(CASE WHEN rt1.c4 THEN rt1.c4 END AS INTEGER) ASC, ((((CAST(rt1.c0 AS REAL))OR(0.15509918335793071)))OR(((rt1.c4) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(TRIM(DISTINCT rt1.c3), ((rt1.c4)*(0x7c19abfc)), ((rt1.c1) IS TRUE))) IS TRUE)  as count FROM rt1 ORDER BY CAST(CASE WHEN rt1.c4 THEN rt1.c4 END AS INTEGER) ASC, ((((CAST(rt1.c0 AS REAL))OR(0.15509918335793071)))OR(((rt1.c4) NOTNULL))) DESC);
SELECT COUNT(*) FROM rt1 WHERE (STRFTIME(TRIM(DISTINCT rt1.c3), ((rt1.c4)*(0x7c19abfc)), ((rt1.c1) IS TRUE))) ORDER BY CAST(CASE WHEN rt1.c4 THEN rt1.c4 END AS INTEGER) ASC, ((((CAST(rt1.c0 AS REAL))OR(0.15509918335793071)))OR(((rt1.c4) NOTNULL))) DESC;
SELECT * FROM rt1 NATURAL JOIN rt2 WHERE (((((((0.1272870075351964)AND(rt2.c2)))AND(rt1.c3)))>=(rt1.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((0.1272870075351964)AND(rt2.c2)))AND(rt1.c3)))>=(rt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt2);
SELECT * FROM rt1 NATURAL JOIN rt2 WHERE (((((((0.1272870075351964)AND(rt2.c2)))AND(rt1.c3)))>=(rt1.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((0.1272870075351964)AND(rt2.c2)))AND(rt1.c3)))>=(rt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt2);
SELECT * FROM rt1 NATURAL JOIN rt2 WHERE (((((((0.1272870075351964)AND(rt2.c2)))AND(rt1.c3)))>=(rt1.c2 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3)>=(rt0.c3))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)>=(rt0.c3))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3)>=(rt0.c3))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)>=(rt0.c3))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3)>=(rt0.c3))) IS FALSE));
SELECT ALL * FROM rt0, rt2 WHERE (((json_quote(0.6793589715563242))<<((NOT (rt2.c0)))));
SELECT SUM(count) FROM (SELECT ((((json_quote(0.6793589715563242))<<((NOT (rt2.c0))))) IS TRUE)  as count FROM rt0, rt2);
SELECT ALL * FROM rt0, rt2 WHERE (((json_quote(0.6793589715563242))<<((NOT (rt2.c0)))));
SELECT SUM(count) FROM (SELECT ((((json_quote(0.6793589715563242))<<((NOT (rt2.c0))))) IS TRUE)  as count FROM rt0, rt2);
SELECT ALL * FROM rt0, rt2 WHERE (((json_quote(0.6793589715563242))<<((NOT (rt2.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (((rt0.c1)>(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (((rt0.c1)>(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (((rt0.c1)>(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (((rt0.c1)>(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (((rt0.c1)>(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt2, rt0 WHERE ((- (((x'')OR(rt0.c3))))) ORDER BY ((rt0.c0) IS FALSE), CASE WHEN ((NULL)IS(NULL)) THEN CAST(rt0.c2 AS NUMERIC) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((x'')OR(rt0.c3))))) IS TRUE)  as count FROM rt2, rt0 ORDER BY ((rt0.c0) IS FALSE), CASE WHEN ((NULL)IS(NULL)) THEN CAST(rt0.c2 AS NUMERIC) END ASC);
SELECT ALL COUNT(*) FROM rt2, rt0 WHERE ((- (((x'')OR(rt0.c3))))) ORDER BY ((rt0.c0) IS FALSE), CASE WHEN ((NULL)IS(NULL)) THEN CAST(rt0.c2 AS NUMERIC) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((x'')OR(rt0.c3))))) IS TRUE)  as count FROM rt2, rt0 ORDER BY ((rt0.c0) IS FALSE), CASE WHEN ((NULL)IS(NULL)) THEN CAST(rt0.c2 AS NUMERIC) END ASC);
SELECT ALL COUNT(*) FROM rt2, rt0 WHERE ((- (((x'')OR(rt0.c3))))) ORDER BY ((rt0.c0) IS FALSE), CASE WHEN ((NULL)IS(NULL)) THEN CAST(rt0.c2 AS NUMERIC) END ASC;
SELECT ALL * FROM rt1, rt0 WHERE (json_quote(rt0.c3 COLLATE RTRIM)) ORDER BY ((UNLIKELY(DISTINCT rt1.c1))|(((rt1.c4)LIKE(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_quote(rt0.c3 COLLATE RTRIM)) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((UNLIKELY(DISTINCT rt1.c1))|(((rt1.c4)LIKE(rt0.c0))))  NULLS LAST);
SELECT ALL * FROM rt1, rt0 WHERE (json_quote(rt0.c3 COLLATE RTRIM)) ORDER BY ((UNLIKELY(DISTINCT rt1.c1))|(((rt1.c4)LIKE(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_quote(rt0.c3 COLLATE RTRIM)) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((UNLIKELY(DISTINCT rt1.c1))|(((rt1.c4)LIKE(rt0.c0))))  NULLS LAST);
SELECT ALL * FROM rt1, rt0 WHERE (json_quote(rt0.c3 COLLATE RTRIM)) ORDER BY ((UNLIKELY(DISTINCT rt1.c1))|(((rt1.c4)LIKE(rt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2)>(rt0.c2)) COLLATE NOCASE) ORDER BY ((NULLIF(DISTINCT rt0.c3, rt0.c1))IS NOT('W+3P')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)>(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((NULLIF(DISTINCT rt0.c3, rt0.c1))IS NOT('W+3P')) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2)>(rt0.c2)) COLLATE NOCASE) ORDER BY ((NULLIF(DISTINCT rt0.c3, rt0.c1))IS NOT('W+3P')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)>(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((NULLIF(DISTINCT rt0.c3, rt0.c1))IS NOT('W+3P')) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2)>(rt0.c2)) COLLATE NOCASE) ORDER BY ((NULLIF(DISTINCT rt0.c3, rt0.c1))IS NOT('W+3P')) ASC  NULLS FIRST;
SELECT * FROM rt2, rt0 WHERE (rt0.c1) ORDER BY ((rt0.c3) IS FALSE) COLLATE BINARY ASC  NULLS FIRST, rt2.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt2, rt0 ORDER BY ((rt0.c3) IS FALSE) COLLATE BINARY ASC  NULLS FIRST, rt2.c1 DESC  NULLS LAST);
SELECT * FROM rt2, rt0 WHERE (rt0.c1) ORDER BY ((rt0.c3) IS FALSE) COLLATE BINARY ASC  NULLS FIRST, rt2.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt2, rt0 ORDER BY ((rt0.c3) IS FALSE) COLLATE BINARY ASC  NULLS FIRST, rt2.c1 DESC  NULLS LAST);
SELECT * FROM rt2, rt0 WHERE (rt0.c1) ORDER BY ((rt0.c3) IS FALSE) COLLATE BINARY ASC  NULLS FIRST, rt2.c1 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((TRIM(rt0.c1, rt0.c3))OR(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END)))OR((+ ('䅦퀈Ix涍h')))))AND(((rt0.c1)GLOB(rt0.c0)))))OR(((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((TRIM(rt0.c1, rt0.c3))OR(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END)))OR((+ ('䅦퀈Ix涍h')))))AND(((rt0.c1)GLOB(rt0.c0)))))OR(((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((TRIM(rt0.c1, rt0.c3))OR(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END)))OR((+ ('䅦퀈Ix涍h')))))AND(((rt0.c1)GLOB(rt0.c0)))))OR(((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((TRIM(rt0.c1, rt0.c3))OR(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END)))OR((+ ('䅦퀈Ix涍h')))))AND(((rt0.c1)GLOB(rt0.c0)))))OR(((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((TRIM(rt0.c1, rt0.c3))OR(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END)))OR((+ ('䅦퀈Ix涍h')))))AND(((rt0.c1)GLOB(rt0.c0)))))OR(((rt0.c2) ISNULL))));
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c1);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) AS BLOB)) ORDER BY rt0.c3  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) AS BLOB)) ORDER BY rt0.c3  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) AS BLOB)) ORDER BY rt0.c3  NULLS FIRST;
SELECT * FROM rt1 INNER JOIN rt0 ON (NOT (rt0.c0 COLLATE BINARY)) LEFT OUTER JOIN rt2 ON ABS(CASE WHEN rt1.c3 THEN rt1.c1 ELSE rt2.c1 END) WHERE (CAST(((((rt1.c0)AND(rt0.c0)))OR(rt1.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt1.c0)AND(rt0.c0)))OR(rt1.c2)) AS BLOB)) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON (NOT (rt0.c0 COLLATE BINARY)) LEFT OUTER JOIN rt2 ON ABS(CASE WHEN rt1.c3 THEN rt1.c1 ELSE rt2.c1 END));
SELECT * FROM rt1 INNER JOIN rt0 ON (NOT (rt0.c0 COLLATE BINARY)) LEFT OUTER JOIN rt2 ON ABS(CASE WHEN rt1.c3 THEN rt1.c1 ELSE rt2.c1 END) WHERE (CAST(((((rt1.c0)AND(rt0.c0)))OR(rt1.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt1.c0)AND(rt0.c0)))OR(rt1.c2)) AS BLOB)) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON (NOT (rt0.c0 COLLATE BINARY)) LEFT OUTER JOIN rt2 ON ABS(CASE WHEN rt1.c3 THEN rt1.c1 ELSE rt2.c1 END));
SELECT * FROM rt1 INNER JOIN rt0 ON (NOT (rt0.c0 COLLATE BINARY)) LEFT OUTER JOIN rt2 ON ABS(CASE WHEN rt1.c3 THEN rt1.c1 ELSE rt2.c1 END) WHERE (CAST(((((rt1.c0)AND(rt0.c0)))OR(rt1.c2)) AS BLOB));
SELECT ALL * FROM rt2, rt1, rt0 WHERE ((+ (((rt1.c2)!=(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c2)<>(rt1.c2))))) IS TRUE)  as count FROM rt2, rt1, rt0);
SELECT ALL * FROM rt2, rt1, rt0 WHERE ((+ (((rt1.c2)!=(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c2)<>(rt1.c2))))) IS TRUE)  as count FROM rt2, rt1, rt0);
SELECT ALL * FROM rt2, rt1, rt0 WHERE ((+ (((rt1.c2)!=(rt1.c2)))));
SELECT COUNT(*) FROM rt0, rt1, rt2 WHERE ((CAST(x'' AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(x'' AS NUMERIC) IN ())) IS TRUE)  as count FROM rt0, rt1, rt2);
SELECT COUNT(*) FROM rt0, rt1, rt2 WHERE ((CAST(x'' AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(x'' AS NUMERIC) IN ())) IS TRUE)  as count FROM rt0, rt1, rt2);
SELECT COUNT(*) FROM rt0, rt1, rt2 WHERE ((CAST(x'' AS NUMERIC) IN ()));
SELECT * FROM rt2, rt0 WHERE ((((rt0.c3, rt2.c0, 0xffffffffa2c11994)) BETWEEN ((rt2.c1 COLLATE RTRIM, 35705337, rt2.c2)) AND ((HEX(rt0.c3), CASE rt0.c0  WHEN rt2.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt2.c2 WHEN rt2.c2 THEN rt0.c0 END, CAST(rt0.c2 AS BLOB))))) ORDER BY ((((((rt2.c2) NOT BETWEEN (rt2.c0) AND (rt2.c2)))AND(CASE rt2.c1  WHEN rt2.c1 THEN rt2.c1 END)))AND(CASE rt0.c1  WHEN rt2.c2 THEN 0.4498607814014488 END)) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c3, rt2.c0, 0Xffffffffa2c11994)) BETWEEN ((rt2.c1 COLLATE RTRIM, 35705337, rt2.c2)) AND ((HEX(rt0.c3), CASE rt0.c0  WHEN rt2.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt2.c2 WHEN rt2.c2 THEN rt0.c0 END, CAST(rt0.c2 AS BLOB))))) IS TRUE)  as count FROM rt2, rt0 ORDER BY ((((((rt2.c2) NOT BETWEEN (rt2.c0) AND (rt2.c2)))AND(CASE rt2.c1  WHEN rt2.c1 THEN rt2.c1 END)))AND(CASE rt0.c1  WHEN rt2.c2 THEN 0.4498607814014488 END)) DESC);
SELECT * FROM rt2, rt0 WHERE ((((rt0.c3, rt2.c0, 0xffffffffa2c11994)) BETWEEN ((rt2.c1 COLLATE RTRIM, 35705337, rt2.c2)) AND ((HEX(rt0.c3), CASE rt0.c0  WHEN rt2.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt2.c2 WHEN rt2.c2 THEN rt0.c0 END, CAST(rt0.c2 AS BLOB))))) ORDER BY ((((((rt2.c2) NOT BETWEEN (rt2.c0) AND (rt2.c2)))AND(CASE rt2.c1  WHEN rt2.c1 THEN rt2.c1 END)))AND(CASE rt0.c1  WHEN rt2.c2 THEN 0.4498607814014488 END)) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c3, rt2.c0, 0Xffffffffa2c11994)) BETWEEN ((rt2.c1 COLLATE RTRIM, 35705337, rt2.c2)) AND ((HEX(rt0.c3), CASE rt0.c0  WHEN rt2.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt2.c2 WHEN rt2.c2 THEN rt0.c0 END, CAST(rt0.c2 AS BLOB))))) IS TRUE)  as count FROM rt2, rt0 ORDER BY ((((((rt2.c2) NOT BETWEEN (rt2.c0) AND (rt2.c2)))AND(CASE rt2.c1  WHEN rt2.c1 THEN rt2.c1 END)))AND(CASE rt0.c1  WHEN rt2.c2 THEN 0.4498607814014488 END)) DESC);
SELECT * FROM rt2, rt0 WHERE ((((rt0.c3, rt2.c0, 0xffffffffa2c11994)) BETWEEN ((rt2.c1 COLLATE RTRIM, 35705337, rt2.c2)) AND ((HEX(rt0.c3), CASE rt0.c0  WHEN rt2.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt2.c2 WHEN rt2.c2 THEN rt0.c0 END, CAST(rt0.c2 AS BLOB))))) ORDER BY ((((((rt2.c2) NOT BETWEEN (rt2.c0) AND (rt2.c2)))AND(CASE rt2.c1  WHEN rt2.c1 THEN rt2.c1 END)))AND(CASE rt0.c1  WHEN rt2.c2 THEN 0.4498607814014488 END)) DESC;
SELECT ALL * FROM rt1 CROSS JOIN rt0 ON ((((rt0.c3)OR(rt1.c0)))OR((rt1.c1 IN ()))) INNER JOIN rt2 ON (NOT (((rt1.c0) NOTNULL))) WHERE (((((((((SQLITE_COMPILEOPTION_USED(rt0.c0))AND(HEX(rt1.c1))))AND(((rt1.c0) ISNULL))))AND(CASE WHEN 0.4762446469699708 THEN rt2.c2 WHEN rt0.c3 THEN '-2098907337' WHEN rt1.c4 THEN rt2.c2 END)))AND((+ (rt1.c4))))) ORDER BY (('665124951') BETWEEN (((((rt1.c0)OR(rt0.c0)))OR(rt0.c3))) AND (CAST(rt1.c2 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((SQLITE_COMPILEOPTION_USED(rt0.c0))AND(HEX(rt1.c1))))AND(((rt1.c0) ISNULL))))AND(CASE WHEN 0.4762446469699708 THEN rt2.c2 WHEN rt0.c3 THEN '-2098907337' WHEN rt1.c4 THEN rt2.c2 END)))AND((+ (rt1.c4))))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON ((((rt0.c3)OR(rt1.c0)))OR((rt1.c1 IN ()))) INNER JOIN rt2 ON (NOT (((rt1.c0) NOTNULL))) ORDER BY (('665124951') BETWEEN (((((rt1.c0)OR(rt0.c0)))OR(rt0.c3))) AND (CAST(rt1.c2 AS BLOB)))  NULLS LAST);
SELECT ALL * FROM rt1 CROSS JOIN rt0 ON ((((rt0.c3)OR(rt1.c0)))OR((rt1.c1 IN ()))) INNER JOIN rt2 ON (NOT (((rt1.c0) NOTNULL))) WHERE (((((((((SQLITE_COMPILEOPTION_USED(rt0.c0))AND(HEX(rt1.c1))))AND(((rt1.c0) ISNULL))))AND(CASE WHEN 0.4762446469699708 THEN rt2.c2 WHEN rt0.c3 THEN '-2098907337' WHEN rt1.c4 THEN rt2.c2 END)))AND((+ (rt1.c4))))) ORDER BY (('665124951') BETWEEN (((((rt1.c0)OR(rt0.c0)))OR(rt0.c3))) AND (CAST(rt1.c2 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((SQLITE_COMPILEOPTION_USED(rt0.c0))AND(HEX(rt1.c1))))AND(((rt1.c0) ISNULL))))AND(CASE WHEN 0.4762446469699708 THEN rt2.c2 WHEN rt0.c3 THEN '-2098907337' WHEN rt1.c4 THEN rt2.c2 END)))AND((+ (rt1.c4))))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON ((((rt0.c3)OR(rt1.c0)))OR((rt1.c1 IN ()))) INNER JOIN rt2 ON (NOT (((rt1.c0) NOTNULL))) ORDER BY (('665124951') BETWEEN (((((rt1.c0)OR(rt0.c0)))OR(rt0.c3))) AND (CAST(rt1.c2 AS BLOB)))  NULLS LAST);
SELECT ALL * FROM rt1 CROSS JOIN rt0 ON ((((rt0.c3)OR(rt1.c0)))OR((rt1.c1 IN ()))) INNER JOIN rt2 ON (NOT (((rt1.c0) NOTNULL))) WHERE (((((((((SQLITE_COMPILEOPTION_USED(rt0.c0))AND(HEX(rt1.c1))))AND(((rt1.c0) ISNULL))))AND(CASE WHEN 0.4762446469699708 THEN rt2.c2 WHEN rt0.c3 THEN '-2098907337' WHEN rt1.c4 THEN rt2.c2 END)))AND((+ (rt1.c4))))) ORDER BY (('665124951') BETWEEN (((((rt1.c0)OR(rt0.c0)))OR(rt0.c3))) AND (CAST(rt1.c2 AS BLOB)))  NULLS LAST;
SELECT COUNT(*) FROM rt2 FULL OUTER JOIN rt1 ON (NOT (rt1.c4 COLLATE BINARY)) WHERE (0.10292318285639335) ORDER BY ((CAST(rt2.c2 AS INTEGER))GLOB((NOT (rt1.c2)))) ASC  NULLS FIRST, CAST(((rt1.c4)>(rt2.c2)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((0.10292318285639335) IS TRUE)  as count FROM rt2 FULL OUTER JOIN rt1 ON (NOT (rt1.c4 COLLATE BINARY)) ORDER BY ((CAST(rt2.c2 AS INTEGER))GLOB((NOT (rt1.c2)))) ASC  NULLS FIRST, CAST(((rt1.c4)>(rt2.c2)) AS BLOB));
SELECT COUNT(*) FROM rt2 FULL OUTER JOIN rt1 ON (NOT (rt1.c4 COLLATE BINARY)) WHERE (0.10292318285639335) ORDER BY ((CAST(rt2.c2 AS INTEGER))GLOB((NOT (rt1.c2)))) ASC  NULLS FIRST, CAST(((rt1.c4)>(rt2.c2)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((0.10292318285639335) IS TRUE)  as count FROM rt2 FULL OUTER JOIN rt1 ON (NOT (rt1.c4 COLLATE BINARY)) ORDER BY ((CAST(rt2.c2 AS INTEGER))GLOB((NOT (rt1.c2)))) ASC  NULLS FIRST, CAST(((rt1.c4)>(rt2.c2)) AS BLOB));
SELECT COUNT(*) FROM rt2 FULL OUTER JOIN rt1 ON (NOT (rt1.c4 COLLATE BINARY)) WHERE (0.10292318285639335) ORDER BY ((CAST(rt2.c2 AS INTEGER))GLOB((NOT (rt1.c2)))) ASC  NULLS FIRST, CAST(((rt1.c4)>(rt2.c2)) AS BLOB);
SELECT ALL COUNT(*) FROM rt2 INNER JOIN rt1 ON ((((((rt2.c2) BETWEEN ('-346062584') AND (rt1.c2)))AND(((rt1.c2)|(rt1.c2)))))OR((x'ad9a' IN ()))) WHERE ((NOT (LOWER(rt2.c1))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (LOWER(rt2.c1)))) IS TRUE)  as count FROM rt2 INNER JOIN rt1 ON ((((((rt2.c2) BETWEEN ('-346062584') AND (rt1.c2)))AND(((rt1.c2)|(rt1.c2)))))OR((x'ad9a' IN ()))));
SELECT ALL COUNT(*) FROM rt2 INNER JOIN rt1 ON ((((((rt2.c2) BETWEEN ('-346062584') AND (rt1.c2)))AND(((rt1.c2)|(rt1.c2)))))OR((x'ad9a' IN ()))) WHERE ((NOT (LOWER(rt2.c1))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (LOWER(rt2.c1)))) IS TRUE)  as count FROM rt2 INNER JOIN rt1 ON ((((((rt2.c2) BETWEEN ('-346062584') AND (rt1.c2)))AND(((rt1.c2)|(rt1.c2)))))OR((x'ad9a' IN ()))));
SELECT ALL COUNT(*) FROM rt2 INNER JOIN rt1 ON ((((((rt2.c2) BETWEEN ('-346062584') AND (rt1.c2)))AND(((rt1.c2)|(rt1.c2)))))OR((x'ad9a' IN ()))) WHERE ((NOT (LOWER(rt2.c1))));
SELECT * FROM rt0, rt1 CROSS JOIN rt2 ON json_extract(((rt1.c4) IS FALSE), rt2.c0) WHERE ((((((rt1.c4)) NOT BETWEEN (('o')) AND ((rt0.c3))))<<(TRIM(DISTINCT rt0.c0)))) ORDER BY ((((rt1.c4 IN ())))<>(((((rt1.c1))=((rt0.c0))))))  NULLS LAST, ((((rt0.c2)>=(rt1.c2))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c4)) NOT BETWEEN (('o')) AND ((rt0.c3))))<<(TRIM(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0, rt1 CROSS JOIN rt2 ON json_extract(((rt1.c4) IS FALSE), rt2.c0) ORDER BY ((((rt1.c4 IN ())))!=(((((rt1.c1))==((rt0.c0))))))  NULLS LAST, ((((rt0.c2)>=(rt1.c2))) IS FALSE)  NULLS LAST);
SELECT * FROM rt0, rt1 CROSS JOIN rt2 ON json_extract(((rt1.c4) IS FALSE), rt2.c0) WHERE ((((((rt1.c4)) NOT BETWEEN (('o')) AND ((rt0.c3))))<<(TRIM(DISTINCT rt0.c0)))) ORDER BY ((((rt1.c4 IN ())))<>(((((rt1.c1))=((rt0.c0))))))  NULLS LAST, ((((rt0.c2)>=(rt1.c2))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c4)) NOT BETWEEN (('o')) AND ((rt0.c3))))<<(TRIM(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0, rt1 CROSS JOIN rt2 ON json_extract(((rt1.c4) IS FALSE), rt2.c0) ORDER BY ((((rt1.c4 IN ())))!=(((((rt1.c1))==((rt0.c0))))))  NULLS LAST, ((((rt0.c2)>=(rt1.c2))) IS FALSE)  NULLS LAST);
SELECT * FROM rt0, rt1 CROSS JOIN rt2 ON json_extract(((rt1.c4) IS FALSE), rt2.c0) WHERE ((((((rt1.c4)) NOT BETWEEN (('o')) AND ((rt0.c3))))<<(TRIM(DISTINCT rt0.c0)))) ORDER BY ((((rt1.c4 IN ())))<>(((((rt1.c1))=((rt0.c0))))))  NULLS LAST, ((((rt0.c2)>=(rt1.c2))) IS FALSE)  NULLS LAST;
SELECT * FROM rt2 LEFT OUTER JOIN rt0 ON rt0.c0 WHERE ((- (rt0.c3))) ORDER BY ((json(rt2.c2))IS(CASE WHEN rt2.c1 THEN '0.7695859854882938' END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (rt0.c3))) IS TRUE)  as count FROM rt2 LEFT OUTER JOIN rt0 ON rt0.c0 ORDER BY ((json(rt2.c2))IS(CASE WHEN rt2.c1 THEN '0.7695859854882938' END))  NULLS FIRST);
SELECT * FROM rt2 LEFT OUTER JOIN rt0 ON rt0.c0 WHERE ((- (rt0.c3))) ORDER BY ((json(rt2.c2))IS(CASE WHEN rt2.c1 THEN '0.7695859854882938' END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (rt0.c3))) IS TRUE)  as count FROM rt2 LEFT OUTER JOIN rt0 ON rt0.c0 ORDER BY ((json(rt2.c2))IS(CASE WHEN rt2.c1 THEN '0.7695859854882938' END))  NULLS FIRST);
SELECT * FROM rt2 LEFT OUTER JOIN rt0 ON rt0.c0 WHERE ((- (rt0.c3))) ORDER BY ((json(rt2.c2))IS(CASE WHEN rt2.c1 THEN '0.7695859854882938' END))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2)OR(rt1.c3))) BETWEEN (((rt1.c0) ISNULL)) AND (((((rt1.c1)AND(rt1.c0)))AND(rt1.c2))))) ORDER BY json_insert(((rt1.c2) IS FALSE), -232100026, CASE rt1.c4  WHEN rt1.c4 THEN rt1.c2 END), CASE WHEN ((rt1.c4)>(rt1.c3)) THEN ((rt1.c1) NOTNULL) WHEN ((((rt1.c2)AND(rt1.c3)))OR(rt1.c1)) THEN '-1243925758' WHEN ((rt1.c3) NOT NULL) THEN ((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)) ELSE ((rt1.c0) NOT BETWEEN (rt1.c3) AND (NULL)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)OR(rt1.c3))) BETWEEN (((rt1.c0) ISNULL)) AND (((((rt1.c1)AND(rt1.c0)))AND(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY json_insert(((rt1.c2) IS FALSE), -232100026, CASE rt1.c4  WHEN rt1.c4 THEN rt1.c2 END), CASE WHEN ((rt1.c4)>(rt1.c3)) THEN ((rt1.c1) NOTNULL) WHEN ((((rt1.c2)AND(rt1.c3)))OR(rt1.c1)) THEN '-1243925758' WHEN ((rt1.c3) NOT NULL) THEN ((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)) ELSE ((rt1.c0) NOT BETWEEN (rt1.c3) AND (NULL)) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2)OR(rt1.c3))) BETWEEN (((rt1.c0) ISNULL)) AND (((((rt1.c1)AND(rt1.c0)))AND(rt1.c2))))) ORDER BY json_insert(((rt1.c2) IS FALSE), -232100026, CASE rt1.c4  WHEN rt1.c4 THEN rt1.c2 END), CASE WHEN ((rt1.c4)>(rt1.c3)) THEN ((rt1.c1) NOTNULL) WHEN ((((rt1.c2)AND(rt1.c3)))OR(rt1.c1)) THEN '-1243925758' WHEN ((rt1.c3) NOT NULL) THEN ((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)) ELSE ((rt1.c0) NOT BETWEEN (rt1.c3) AND (NULL)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)OR(rt1.c3))) BETWEEN (((rt1.c0) ISNULL)) AND (((((rt1.c1)AND(rt1.c0)))AND(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY json_insert(((rt1.c2) IS FALSE), -232100026, CASE rt1.c4  WHEN rt1.c4 THEN rt1.c2 END), CASE WHEN ((rt1.c4)>(rt1.c3)) THEN ((rt1.c1) NOTNULL) WHEN ((((rt1.c2)AND(rt1.c3)))OR(rt1.c1)) THEN '-1243925758' WHEN ((rt1.c3) NOT NULL) THEN ((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)) ELSE ((rt1.c0) NOT BETWEEN (rt1.c3) AND (NULL)) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2)OR(rt1.c3))) BETWEEN (((rt1.c0) ISNULL)) AND (((((rt1.c1)AND(rt1.c0)))AND(rt1.c2))))) ORDER BY json_insert(((rt1.c2) IS FALSE), -232100026, CASE rt1.c4  WHEN rt1.c4 THEN rt1.c2 END), CASE WHEN ((rt1.c4)>(rt1.c3)) THEN ((rt1.c1) NOTNULL) WHEN ((((rt1.c2)AND(rt1.c3)))OR(rt1.c1)) THEN '-1243925758' WHEN ((rt1.c3) NOT NULL) THEN ((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)) ELSE ((rt1.c0) NOT BETWEEN (rt1.c3) AND (NULL)) END DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, rt1 WHERE (CAST(CASE WHEN rt1.c0 THEN rt0.c2 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt1.c0 THEN rt0.c2 END AS TEXT)) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CAST(CASE WHEN rt1.c0 THEN rt0.c2 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt1.c0 THEN rt0.c2 END AS TEXT)) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CAST(CASE WHEN rt1.c0 THEN rt0.c2 END AS TEXT));
SELECT ALL * FROM rt0, rt2 WHERE ((((((rt2.c1)) NOT BETWEEN ((x'b341')) AND ((rt2.c1))))-((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((rt2.c1)) NOT BETWEEN ((x'b341')) AND ((rt2.c1))))-((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, rt2);
SELECT ALL * FROM rt0, rt2 WHERE ((((((rt2.c1)) NOT BETWEEN ((x'b341')) AND ((rt2.c1))))-((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((rt2.c1)) NOT BETWEEN ((x'b341')) AND ((rt2.c1))))-((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, rt2);
SELECT ALL * FROM rt0, rt2 WHERE ((((((rt2.c1)) NOT BETWEEN ((x'b341')) AND ((rt2.c1))))-((rt0.c1 IN ()))));
SELECT * FROM rt2, rt0 NOT INDEXED, rt1 WHERE (LIKELIHOOD(DISTINCT CAST(rt1.c1 AS TEXT), 0.6748700827639946));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT CAST(rt1.c1 AS TEXT), 0.6748700827639946)) IS TRUE)  as count FROM rt2, rt0, rt1);
SELECT * FROM rt2, rt0 NOT INDEXED, rt1 WHERE (LIKELIHOOD(DISTINCT CAST(rt1.c1 AS TEXT), 0.6748700827639946));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT CAST(rt1.c1 AS TEXT), 0.6748700827639946)) IS TRUE)  as count FROM rt2, rt0, rt1);
SELECT * FROM rt2, rt0 NOT INDEXED, rt1 WHERE (LIKELIHOOD(DISTINCT CAST(rt1.c1 AS TEXT), 0.6748700827639946));
SELECT COUNT(*) FROM rt1 WHERE ((('') IS FALSE));
SELECT SUM(count) FROM (SELECT (((('') IS FALSE)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((('') IS FALSE));
SELECT SUM(count) FROM (SELECT (((('') IS FALSE)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((('') IS FALSE));
SELECT * FROM rt1 WHERE (rt1.c1) ORDER BY rt1.c3 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY rt1.c3 DESC  NULLS LAST);
SELECT * FROM rt1 WHERE (rt1.c1) ORDER BY rt1.c3 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY rt1.c3 DESC  NULLS LAST);
SELECT * FROM rt1 WHERE (rt1.c1) ORDER BY rt1.c3 DESC  NULLS LAST;
SELECT * FROM rt0, rt1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ('');
SELECT ALL * FROM rt2 WHERE (CAST(CAST(rt2.c0 AS REAL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt2.c0 AS REAL) AS NUMERIC)) IS TRUE)  as count FROM rt2);
SELECT ALL * FROM rt2 WHERE (CAST(CAST(rt2.c0 AS REAL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt2.c0 AS REAL) AS NUMERIC)) IS TRUE)  as count FROM rt2);
SELECT ALL * FROM rt2 WHERE (CAST(CAST(rt2.c0 AS REAL) AS NUMERIC));
SELECT COUNT(*) FROM rt2 INNER JOIN rt1 ON rt1.c2 WHERE (DATETIME(((rt1.c0)/(rt1.c1)), (rt1.c0 IN ()), UNICODE(NULL), rt2.c1 COLLATE NOCASE, rt1.c0)) ORDER BY (((((rt1.c2))<((rt1.c1)))) BETWEEN (rt1.c3 COLLATE BINARY) AND (UPPER(DISTINCT rt2.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(((rt1.c0)/(rt1.c1)), (rt1.c0 IN ()), UNICODE(NULL), rt2.c1 COLLATE NOCASE, rt1.c0)) IS TRUE)  as count FROM rt2 INNER JOIN rt1 ON rt1.c2 ORDER BY (((((rt1.c2))<((rt1.c1)))) BETWEEN (rt1.c3 COLLATE BINARY) AND (UPPER(DISTINCT rt2.c0))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt2 INNER JOIN rt1 ON rt1.c2 WHERE (DATETIME(((rt1.c0)/(rt1.c1)), (rt1.c0 IN ()), UNICODE(NULL), rt2.c1 COLLATE NOCASE, rt1.c0)) ORDER BY (((((rt1.c2))<((rt1.c1)))) BETWEEN (rt1.c3 COLLATE BINARY) AND (UPPER(DISTINCT rt2.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(((rt1.c0)/(rt1.c1)), (rt1.c0 IN ()), UNICODE(NULL), rt2.c1 COLLATE NOCASE, rt1.c0)) IS TRUE)  as count FROM rt2 INNER JOIN rt1 ON rt1.c2 ORDER BY (((((rt1.c2))<((rt1.c1)))) BETWEEN (rt1.c3 COLLATE BINARY) AND (UPPER(DISTINCT rt2.c0))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt2 INNER JOIN rt1 ON rt1.c2 WHERE (DATETIME(((rt1.c0)/(rt1.c1)), (rt1.c0 IN ()), UNICODE(NULL), rt2.c1 COLLATE NOCASE, rt1.c0)) ORDER BY (((((rt1.c2))<((rt1.c1)))) BETWEEN (rt1.c3 COLLATE BINARY) AND (UPPER(DISTINCT rt2.c0))) ASC  NULLS LAST;
SELECT * FROM rt2, rt1, rt0 WHERE ((((((-1367345513)) BETWEEN ((rt1.c0)) AND ((rt0.c1)))) BETWEEN (((((rt0.c3)AND(rt2.c2)))AND(rt0.c3))) AND (CASE WHEN rt2.c1 THEN rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((-1367345513)) BETWEEN ((rt1.c0)) AND ((rt0.c1)))) BETWEEN (((((rt0.c3)AND(rt2.c2)))AND(rt0.c3))) AND (CASE WHEN rt2.c1 THEN rt0.c3 END))) IS TRUE)  as count FROM rt2, rt1, rt0);
SELECT * FROM rt2, rt1, rt0 WHERE ((((((-1367345513)) BETWEEN ((rt1.c0)) AND ((rt0.c1)))) BETWEEN (((((rt0.c3)AND(rt2.c2)))AND(rt0.c3))) AND (CASE WHEN rt2.c1 THEN rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((-1367345513)) BETWEEN ((rt1.c0)) AND ((rt0.c1)))) BETWEEN (((((rt0.c3)AND(rt2.c2)))AND(rt0.c3))) AND (CASE WHEN rt2.c1 THEN rt0.c3 END))) IS TRUE)  as count FROM rt2, rt1, rt0);
SELECT * FROM rt2, rt1, rt0 WHERE ((((((-1367345513)) BETWEEN ((rt1.c0)) AND ((rt0.c1)))) BETWEEN (((((rt0.c3)AND(rt2.c2)))AND(rt0.c3))) AND (CASE WHEN rt2.c1 THEN rt0.c3 END)));
SELECT * FROM rt2, rt0 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN NULL END) BETWEEN (TYPEOF(DISTINCT rt0.c1)) AND (((((NULL)AND(rt0.c1)))OR(rt2.c2))))) ORDER BY ((((((((rt2.c1)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN rt0.c0 THEN NULL END) BETWEEN (TYPEOF(DISTINCT rt0.c1)) AND (((((NULL)AND(rt0.c1)))OR(rt2.c2))))) IS TRUE)  as count FROM rt2, rt0 ORDER BY ((((((((rt2.c1)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT * FROM rt2, rt0 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN NULL END) BETWEEN (TYPEOF(DISTINCT rt0.c1)) AND (((((NULL)AND(rt0.c1)))OR(rt2.c2))))) ORDER BY ((((((((rt2.c1)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN rt0.c0 THEN NULL END) BETWEEN (TYPEOF(DISTINCT rt0.c1)) AND (((((NULL)AND(rt0.c1)))OR(rt2.c2))))) IS TRUE)  as count FROM rt2, rt0 ORDER BY ((((((((rt2.c1)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT * FROM rt2, rt0 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN NULL END) BETWEEN (TYPEOF(DISTINCT rt0.c1)) AND (((((NULL)AND(rt0.c1)))OR(rt2.c2))))) ORDER BY ((((((((rt2.c1)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL * FROM rt0, rt1, rt2 WHERE (rt1.c2) ORDER BY ((((rt1.c1)/(rt0.c0))) NOT BETWEEN (((rt2.c0) IS TRUE)) AND ((rt0.c0 IN ()))), ((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))OR(rt1.c3)))OR(rt0.c3)))!=(rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt0, rt1, rt2 ORDER BY ((((rt1.c1)/(rt0.c0))) NOT BETWEEN (((rt2.c0) IS TRUE)) AND ((rt0.c0 IN ()))), ((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))OR(rt1.c3)))OR(rt0.c3)))<>(rt0.c2))  NULLS FIRST);
SELECT ALL * FROM rt0, rt1, rt2 WHERE (rt1.c2) ORDER BY ((((rt1.c1)/(rt0.c0))) NOT BETWEEN (((rt2.c0) IS TRUE)) AND ((rt0.c0 IN ()))), ((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))OR(rt1.c3)))OR(rt0.c3)))!=(rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt0, rt1, rt2 ORDER BY ((((rt1.c1)/(rt0.c0))) NOT BETWEEN (((rt2.c0) IS TRUE)) AND ((rt0.c0 IN ()))), ((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))OR(rt1.c3)))OR(rt0.c3)))<>(rt0.c2))  NULLS FIRST);
SELECT ALL * FROM rt0, rt1, rt2 WHERE (rt1.c2) ORDER BY ((((rt1.c1)/(rt0.c0))) NOT BETWEEN (((rt2.c0) IS TRUE)) AND ((rt0.c0 IN ()))), ((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))OR(rt1.c3)))OR(rt0.c3)))!=(rt0.c2))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((((rt0.c3)/(rt0.c1)))AND(((rt0.c1) NOTNULL))))OR(CAST(rt0.c3 AS INTEGER))))AND(CAST(rt0.c1 AS REAL))))AND((rt0.c0 IN ()))))OR(((rt0.c3) ISNULL))))AND(rt0.c1 COLLATE RTRIM))) ORDER BY ((x'9416') BETWEEN ((((rt0.c2)) BETWEEN (('d!ǚ怖st}/v')) AND ((rt0.c2)))) AND (((rt0.c0) ISNULL)))  NULLS LAST, ((((rt0.c1)&(rt0.c2))) BETWEEN (((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c1))) AND (CAST(rt0.c2 AS REAL)));
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c3)/(rt0.c1)))AND(((rt0.c1) NOTNULL))))OR(CAST(rt0.c3 AS INTEGER))))AND(CAST(rt0.c1 AS REAL))))AND((rt0.c0 IN ()))))OR(((rt0.c3) ISNULL))))AND(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY ((x'9416') BETWEEN ((((rt0.c2)) BETWEEN (('d!ǚ怖st}/v')) AND ((rt0.c2)))) AND (((rt0.c0) ISNULL)))  NULLS LAST, ((((rt0.c1)&(rt0.c2))) BETWEEN (((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c1))) AND (CAST(rt0.c2 AS REAL))));
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((((rt0.c3)/(rt0.c1)))AND(((rt0.c1) NOTNULL))))OR(CAST(rt0.c3 AS INTEGER))))AND(CAST(rt0.c1 AS REAL))))AND((rt0.c0 IN ()))))OR(((rt0.c3) ISNULL))))AND(rt0.c1 COLLATE RTRIM))) ORDER BY ((x'9416') BETWEEN ((((rt0.c2)) BETWEEN (('d!ǚ怖st}/v')) AND ((rt0.c2)))) AND (((rt0.c0) ISNULL)))  NULLS LAST, ((((rt0.c1)&(rt0.c2))) BETWEEN (((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c1))) AND (CAST(rt0.c2 AS REAL)));
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c3)/(rt0.c1)))AND(((rt0.c1) NOTNULL))))OR(CAST(rt0.c3 AS INTEGER))))AND(CAST(rt0.c1 AS REAL))))AND((rt0.c0 IN ()))))OR(((rt0.c3) ISNULL))))AND(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY ((x'9416') BETWEEN ((((rt0.c2)) BETWEEN (('d!ǚ怖st}/v')) AND ((rt0.c2)))) AND (((rt0.c0) ISNULL)))  NULLS LAST, ((((rt0.c1)&(rt0.c2))) BETWEEN (((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c1))) AND (CAST(rt0.c2 AS REAL))));
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((((rt0.c3)/(rt0.c1)))AND(((rt0.c1) NOTNULL))))OR(CAST(rt0.c3 AS INTEGER))))AND(CAST(rt0.c1 AS REAL))))AND((rt0.c0 IN ()))))OR(((rt0.c3) ISNULL))))AND(rt0.c1 COLLATE RTRIM))) ORDER BY ((x'9416') BETWEEN ((((rt0.c2)) BETWEEN (('d!ǚ怖st}/v')) AND ((rt0.c2)))) AND (((rt0.c0) ISNULL)))  NULLS LAST, ((((rt0.c1)&(rt0.c2))) BETWEEN (((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c1))) AND (CAST(rt0.c2 AS REAL)));
SELECT ALL * FROM rt0, rt2 WHERE ((rt0.c2 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt2);
SELECT ALL * FROM rt0, rt2 WHERE ((rt0.c2 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt2);
SELECT ALL * FROM rt0, rt2 WHERE ((rt0.c2 IN ()) COLLATE BINARY);
SELECT * FROM rt2 WHERE (rt2.c1) ORDER BY (((rt2.c0 IN ())) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt2.c1) IS TRUE)  as count FROM rt2 ORDER BY (((rt2.c0 IN ())) IS FALSE) DESC);
SELECT * FROM rt2 WHERE (rt2.c1) ORDER BY (((rt2.c0 IN ())) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt2.c1) IS TRUE)  as count FROM rt2 ORDER BY (((rt2.c0 IN ())) IS FALSE) DESC);
SELECT * FROM rt2 WHERE (rt2.c1) ORDER BY (((rt2.c0 IN ())) IS FALSE) DESC;
SELECT ALL COUNT(*) FROM rt0, rt2, rt1 WHERE (((((rt0.c0)<(rt0.c3))) IS FALSE)) ORDER BY ((((rt2.c2) BETWEEN (rt0.c1) AND (rt2.c1))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)<(rt0.c3))) IS FALSE)) IS TRUE)  as count FROM rt0, rt2, rt1 ORDER BY ((((rt2.c2) BETWEEN (rt0.c1) AND (rt2.c1))) IS TRUE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt2, rt1 WHERE (((((rt0.c0)<(rt0.c3))) IS FALSE)) ORDER BY ((((rt2.c2) BETWEEN (rt0.c1) AND (rt2.c1))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)<(rt0.c3))) IS FALSE)) IS TRUE)  as count FROM rt0, rt2, rt1 ORDER BY ((((rt2.c2) BETWEEN (rt0.c1) AND (rt2.c1))) IS TRUE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt2, rt1 WHERE (((((rt0.c0)<(rt0.c3))) IS FALSE)) ORDER BY ((((rt2.c2) BETWEEN (rt0.c1) AND (rt2.c1))) IS TRUE) ASC  NULLS FIRST;
SELECT * FROM rt2 WHERE (rt2.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt2.c0) IS TRUE)  as count FROM rt2);
SELECT * FROM rt2 WHERE (rt2.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt2.c0) IS TRUE)  as count FROM rt2);
SELECT * FROM rt2 WHERE (rt2.c0);
SELECT COUNT(*) FROM rt2, rt0 FULL OUTER JOIN rt1 ON ((CASE rt1.c0  WHEN rt0.c0 THEN rt1.c2 WHEN rt2.c2 THEN rt0.c0 WHEN rt1.c4 THEN rt1.c4 END)|(0.3589952411183258)) WHERE ((ABS(0x313fe3d8) IN ()));
SELECT SUM(count) FROM (SELECT (((ABS(0x313fe3d8) IN ())) IS TRUE)  as count FROM rt2, rt0 FULL OUTER JOIN rt1 ON ((CASE rt1.c0  WHEN rt0.c0 THEN rt1.c2 WHEN rt2.c2 THEN rt0.c0 WHEN rt1.c4 THEN rt1.c4 END)|(0.3589952411183258)));
SELECT COUNT(*) FROM rt2, rt0 FULL OUTER JOIN rt1 ON ((CASE rt1.c0  WHEN rt0.c0 THEN rt1.c2 WHEN rt2.c2 THEN rt0.c0 WHEN rt1.c4 THEN rt1.c4 END)|(0.3589952411183258)) WHERE ((ABS(0x313fe3d8) IN ()));
SELECT SUM(count) FROM (SELECT (((ABS(0x313fe3d8) IN ())) IS TRUE)  as count FROM rt2, rt0 FULL OUTER JOIN rt1 ON ((CASE rt1.c0  WHEN rt0.c0 THEN rt1.c2 WHEN rt2.c2 THEN rt0.c0 WHEN rt1.c4 THEN rt1.c4 END)|(0.3589952411183258)));
SELECT COUNT(*) FROM rt2, rt0 FULL OUTER JOIN rt1 ON ((CASE rt1.c0  WHEN rt0.c0 THEN rt1.c2 WHEN rt2.c2 THEN rt0.c0 WHEN rt1.c4 THEN rt1.c4 END)|(0.3589952411183258)) WHERE ((ABS(0x313fe3d8) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2)|(x'')) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)|(x'')) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2)|(x'')) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)|(x'')) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2)|(x'')) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt1, rt2 WHERE (CASE ((rt1.c3)IS(rt1.c4))  WHEN CAST(rt1.c3 AS TEXT) THEN ((rt2.c0)/(rt1.c4)) WHEN (rt1.c2 IN ()) THEN CASE WHEN rt1.c1 THEN rt1.c4 END WHEN CAST(rt1.c0 AS TEXT) THEN (+ (rt1.c2)) ELSE load_extension(rt1.c2) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c3)IS(rt1.c4))  WHEN CAST(rt1.c3 AS TEXT) THEN ((rt2.c0)/(rt1.c4)) WHEN (rt1.c2 IN ()) THEN CASE WHEN rt1.c1 THEN rt1.c4 END WHEN CAST(rt1.c0 AS TEXT) THEN (+ (rt1.c2)) ELSE load_extension(rt1.c2) END) IS TRUE)  as count FROM rt1, rt2);
SELECT ALL COUNT(*) FROM rt1, rt2 WHERE (CASE ((rt1.c3)IS(rt1.c4))  WHEN CAST(rt1.c3 AS TEXT) THEN ((rt2.c0)/(rt1.c4)) WHEN (rt1.c2 IN ()) THEN CASE WHEN rt1.c1 THEN rt1.c4 END WHEN CAST(rt1.c0 AS TEXT) THEN (+ (rt1.c2)) ELSE load_extension(rt1.c2) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c3)IS(rt1.c4))  WHEN CAST(rt1.c3 AS TEXT) THEN ((rt2.c0)/(rt1.c4)) WHEN (rt1.c2 IN ()) THEN CASE WHEN rt1.c1 THEN rt1.c4 END WHEN CAST(rt1.c0 AS TEXT) THEN (+ (rt1.c2)) ELSE load_extension(rt1.c2) END) IS TRUE)  as count FROM rt1, rt2);
SELECT ALL COUNT(*) FROM rt1, rt2 WHERE (CASE ((rt1.c3)IS(rt1.c4))  WHEN CAST(rt1.c3 AS TEXT) THEN ((rt2.c0)/(rt1.c4)) WHEN (rt1.c2 IN ()) THEN CASE WHEN rt1.c1 THEN rt1.c4 END WHEN CAST(rt1.c0 AS TEXT) THEN (+ (rt1.c2)) ELSE load_extension(rt1.c2) END);
SELECT * FROM rt2, rt1 WHERE (rt2.c2) ORDER BY (((((NOT (rt2.c1)))OR(LOWER(DISTINCT rt1.c1))))AND(((rt1.c1)<<(rt2.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt2.c2) IS TRUE)  as count FROM rt2, rt1 ORDER BY (((((NOT (rt2.c1)))OR(LOWER(DISTINCT rt1.c1))))AND(((rt1.c1)<<(rt2.c2))))  NULLS LAST);
SELECT * FROM rt2, rt1 WHERE (rt2.c2) ORDER BY (((((NOT (rt2.c1)))OR(LOWER(DISTINCT rt1.c1))))AND(((rt1.c1)<<(rt2.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt2.c2) IS TRUE)  as count FROM rt2, rt1 ORDER BY (((((NOT (rt2.c1)))OR(LOWER(DISTINCT rt1.c1))))AND(((rt1.c1)<<(rt2.c2))))  NULLS LAST);
SELECT * FROM rt2, rt1 WHERE (rt2.c2) ORDER BY (((((NOT (rt2.c1)))OR(LOWER(DISTINCT rt1.c1))))AND(((rt1.c1)<<(rt2.c2))))  NULLS LAST;
SELECT * FROM rt2 WHERE (CAST('1瓑' AS INTEGER)) ORDER BY rt2.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST('1瓑' AS INTEGER)) IS TRUE)  as count FROM rt2 ORDER BY rt2.c0  NULLS LAST);
SELECT * FROM rt2 WHERE (CAST('1瓑' AS INTEGER)) ORDER BY rt2.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST('1瓑' AS INTEGER)) IS TRUE)  as count FROM rt2 ORDER BY rt2.c0  NULLS LAST);
SELECT * FROM rt2 WHERE (CAST('1瓑' AS INTEGER)) ORDER BY rt2.c0  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY LIKELIHOOD(CASE WHEN rt0.c0 THEN rt0.c1 END, 0.9813381133036867) ASC  NULLS LAST, CAST(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END AS INTEGER), (((rt0.c0 COLLATE NOCASE))<>(('1521464620')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY LIKELIHOOD(CASE WHEN rt0.c0 THEN rt0.c1 END, 0.9813381133036867) ASC  NULLS LAST, CAST(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END AS INTEGER), (((rt0.c0 COLLATE NOCASE))!=(('1521464620')))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY LIKELIHOOD(CASE WHEN rt0.c0 THEN rt0.c1 END, 0.9813381133036867) ASC  NULLS LAST, CAST(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END AS INTEGER), (((rt0.c0 COLLATE NOCASE))<>(('1521464620')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY LIKELIHOOD(CASE WHEN rt0.c0 THEN rt0.c1 END, 0.9813381133036867) ASC  NULLS LAST, CAST(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END AS INTEGER), (((rt0.c0 COLLATE NOCASE))!=(('1521464620')))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY LIKELIHOOD(CASE WHEN rt0.c0 THEN rt0.c1 END, 0.9813381133036867) ASC  NULLS LAST, CAST(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END AS INTEGER), (((rt0.c0 COLLATE NOCASE))<>(('1521464620')))  NULLS LAST;
SELECT COUNT(*) FROM rt1, rt2 WHERE (CASE WHEN rt1.c2 THEN CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 ELSE rt2.c1 END WHEN (NOT (rt2.c2)) THEN rt1.c3 COLLATE RTRIM WHEN rt2.c2 THEN rt1.c3 ELSE rt1.c3 COLLATE BINARY END) ORDER BY ((0.35770643725113604)IS NOT(CASE rt1.c4  WHEN rt2.c2 THEN rt2.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c2 THEN CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 ELSE rt2.c1 END WHEN (NOT (rt2.c2)) THEN rt1.c3 COLLATE RTRIM WHEN rt2.c2 THEN rt1.c3 ELSE rt1.c3 COLLATE BINARY END) IS TRUE)  as count FROM rt1, rt2 ORDER BY ((0.35770643725113604)IS NOT(CASE rt1.c4  WHEN rt2.c2 THEN rt2.c1 END))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt2 WHERE (CASE WHEN rt1.c2 THEN CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 ELSE rt2.c1 END WHEN (NOT (rt2.c2)) THEN rt1.c3 COLLATE RTRIM WHEN rt2.c2 THEN rt1.c3 ELSE rt1.c3 COLLATE BINARY END) ORDER BY ((0.35770643725113604)IS NOT(CASE rt1.c4  WHEN rt2.c2 THEN rt2.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c2 THEN CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 ELSE rt2.c1 END WHEN (NOT (rt2.c2)) THEN rt1.c3 COLLATE RTRIM WHEN rt2.c2 THEN rt1.c3 ELSE rt1.c3 COLLATE BINARY END) IS TRUE)  as count FROM rt1, rt2 ORDER BY ((0.35770643725113604)IS NOT(CASE rt1.c4  WHEN rt2.c2 THEN rt2.c1 END))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt2 WHERE (CASE WHEN rt1.c2 THEN CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 ELSE rt2.c1 END WHEN (NOT (rt2.c2)) THEN rt1.c3 COLLATE RTRIM WHEN rt2.c2 THEN rt1.c3 ELSE rt1.c3 COLLATE BINARY END) ORDER BY ((0.35770643725113604)IS NOT(CASE rt1.c4  WHEN rt2.c2 THEN rt2.c1 END))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, rt2 WHERE (TRIM(rt2.c1, rt0.c3) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((TRIM(rt2.c1, rt0.c3) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt2);
SELECT COUNT(*) FROM rt0, rt2 WHERE (TRIM(rt2.c1, rt0.c3) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((TRIM(rt2.c1, rt0.c3) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt2);
SELECT COUNT(*) FROM rt0, rt2 WHERE (TRIM(rt2.c1, rt0.c3) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c0)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c4)))) BETWEEN ((rt1.c0 IN (rt1.c3, rt1.c2))) AND (IFNULL(DISTINCT rt1.c2, '-2072034816')))) ORDER BY (((NOT (rt1.c1))) BETWEEN (((rt1.c3)%(rt1.c2))) AND (CASE rt1.c0  WHEN NULL THEN rt1.c0 ELSE rt1.c3 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c4)))) BETWEEN ((rt1.c0 IN (rt1.c3, rt1.c2))) AND (IFNULL(DISTINCT rt1.c2, '-2072034816')))) IS TRUE)  as count FROM rt1 ORDER BY (((NOT (rt1.c1))) BETWEEN (((rt1.c3)%(rt1.c2))) AND (CASE rt1.c0  WHEN NULL THEN rt1.c0 ELSE rt1.c3 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c0)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c4)))) BETWEEN ((rt1.c0 IN (rt1.c3, rt1.c2))) AND (IFNULL(DISTINCT rt1.c2, '-2072034816')))) ORDER BY (((NOT (rt1.c1))) BETWEEN (((rt1.c3)%(rt1.c2))) AND (CASE rt1.c0  WHEN NULL THEN rt1.c0 ELSE rt1.c3 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c4)))) BETWEEN ((rt1.c0 IN (rt1.c3, rt1.c2))) AND (IFNULL(DISTINCT rt1.c2, '-2072034816')))) IS TRUE)  as count FROM rt1 ORDER BY (((NOT (rt1.c1))) BETWEEN (((rt1.c3)%(rt1.c2))) AND (CASE rt1.c0  WHEN NULL THEN rt1.c0 ELSE rt1.c3 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c0)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c4)))) BETWEEN ((rt1.c0 IN (rt1.c3, rt1.c2))) AND (IFNULL(DISTINCT rt1.c2, '-2072034816')))) ORDER BY (((NOT (rt1.c1))) BETWEEN (((rt1.c3)%(rt1.c2))) AND (CASE rt1.c0  WHEN NULL THEN rt1.c0 ELSE rt1.c3 END))  NULLS LAST;
SELECT ALL * FROM rt2, rt0 RIGHT OUTER JOIN rt1 ON ((((rt1.c4)/(rt2.c2)))*((rt0.c3 IN ()))) WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt2, rt0 RIGHT OUTER JOIN rt1 ON ((((rt1.c4)/(rt2.c2)))*((rt0.c3 IN ()))));
SELECT ALL * FROM rt2, rt0 RIGHT OUTER JOIN rt1 ON ((((rt1.c4)/(rt2.c2)))*((rt0.c3 IN ()))) WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt2, rt0 RIGHT OUTER JOIN rt1 ON ((((rt1.c4)/(rt2.c2)))*((rt0.c3 IN ()))));
SELECT ALL * FROM rt2, rt0 RIGHT OUTER JOIN rt1 ON ((((rt1.c4)/(rt2.c2)))*((rt0.c3 IN ()))) WHERE (rt1.c1);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON ((((((((((((((rt1.c2) NOT BETWEEN ('()') AND (rt1.c2)))AND(rt0.c1)))AND((((rt1.c3))!=((rt0.c0))))))AND(((((((((rt0.c1)OR(rt0.c2)))AND(rt1.c4)))OR(rt0.c3)))OR(rt1.c3)))))AND((((rt1.c2))>=((rt1.c2))))))AND(rt0.c1 COLLATE BINARY)))OR(CAST(rt0.c0 AS INTEGER))) WHERE (CAST(CAST(rt0.c3 AS NUMERIC) AS NUMERIC)) ORDER BY ((rt1.c3 IN (rt1.c0)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c3 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON ((((((((((((((rt1.c2) NOT BETWEEN ('()') AND (rt1.c2)))AND(rt0.c1)))AND((((rt1.c3))!=((rt0.c0))))))AND(((((((((rt0.c1)OR(rt0.c2)))AND(rt1.c4)))OR(rt0.c3)))OR(rt1.c3)))))AND((((rt1.c2))>=((rt1.c2))))))AND(rt0.c1 COLLATE BINARY)))OR(CAST(rt0.c0 AS INTEGER))) ORDER BY ((rt1.c3 IN (rt1.c0)) IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON ((((((((((((((rt1.c2) NOT BETWEEN ('()') AND (rt1.c2)))AND(rt0.c1)))AND((((rt1.c3))!=((rt0.c0))))))AND(((((((((rt0.c1)OR(rt0.c2)))AND(rt1.c4)))OR(rt0.c3)))OR(rt1.c3)))))AND((((rt1.c2))>=((rt1.c2))))))AND(rt0.c1 COLLATE BINARY)))OR(CAST(rt0.c0 AS INTEGER))) WHERE (CAST(CAST(rt0.c3 AS NUMERIC) AS NUMERIC)) ORDER BY ((rt1.c3 IN (rt1.c0)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c3 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON ((((((((((((((rt1.c2) NOT BETWEEN ('()') AND (rt1.c2)))AND(rt0.c1)))AND((((rt1.c3))!=((rt0.c0))))))AND(((((((((rt0.c1)OR(rt0.c2)))AND(rt1.c4)))OR(rt0.c3)))OR(rt1.c3)))))AND((((rt1.c2))>=((rt1.c2))))))AND(rt0.c1 COLLATE BINARY)))OR(CAST(rt0.c0 AS INTEGER))) ORDER BY ((rt1.c3 IN (rt1.c0)) IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON ((((((((((((((rt1.c2) NOT BETWEEN ('()') AND (rt1.c2)))AND(rt0.c1)))AND((((rt1.c3))!=((rt0.c0))))))AND(((((((((rt0.c1)OR(rt0.c2)))AND(rt1.c4)))OR(rt0.c3)))OR(rt1.c3)))))AND((((rt1.c2))>=((rt1.c2))))))AND(rt0.c1 COLLATE BINARY)))OR(CAST(rt0.c0 AS INTEGER))) WHERE (CAST(CAST(rt0.c3 AS NUMERIC) AS NUMERIC)) ORDER BY ((rt1.c3 IN (rt1.c0)) IN ()) ASC  NULLS FIRST;
SELECT * FROM rt0, rt2 WHERE (((('Y6ir' IN (x'0b2fd067', rt0.c0)))&(CASE rt2.c2  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((('Y6ir' IN (x'0b2fd067', rt0.c0)))&(CASE rt2.c2  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0, rt2);
SELECT * FROM rt0, rt2 WHERE (((('Y6ir' IN (x'0b2fd067', rt0.c0)))&(CASE rt2.c2  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((('Y6ir' IN (x'0b2fd067', rt0.c0)))&(CASE rt2.c2  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0, rt2);
SELECT * FROM rt0, rt2 WHERE (((('Y6ir' IN (x'0b2fd067', rt0.c0)))&(CASE rt2.c2  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END)));
SELECT * FROM rt1 WHERE (((((rt1.c0)OR(rt1.c2)))AND(rt1.c3)) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)OR(rt1.c2)))AND(rt1.c3)) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c0)OR(rt1.c2)))AND(rt1.c3)) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)OR(rt1.c2)))AND(rt1.c3)) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c0)OR(rt1.c2)))AND(rt1.c3)) COLLATE BINARY COLLATE BINARY);
SELECT ALL * FROM rt2 WHERE (CAST(((rt2.c1)>(rt2.c1)) AS INTEGER)) ORDER BY (NOT (((rt2.c0) NOTNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt2.c1)>(rt2.c1)) AS INTEGER)) IS TRUE)  as count FROM rt2 ORDER BY (NOT (((rt2.c0) NOTNULL))) ASC  NULLS LAST);
SELECT ALL * FROM rt2 WHERE (CAST(((rt2.c1)>(rt2.c1)) AS INTEGER)) ORDER BY (NOT (((rt2.c0) NOTNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt2.c1)>(rt2.c1)) AS INTEGER)) IS TRUE)  as count FROM rt2 ORDER BY (NOT (((rt2.c0) NOTNULL))) ASC  NULLS LAST);
SELECT ALL * FROM rt2 WHERE (CAST(((rt2.c1)>(rt2.c1)) AS INTEGER)) ORDER BY (NOT (((rt2.c0) NOTNULL))) ASC  NULLS LAST;
SELECT * FROM rt2, rt1 WHERE (CASE WHEN ((((rt1.c0)AND(rt2.c2)))AND(x'')) THEN 629801291 ELSE CAST(rt1.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt1.c0)AND(rt2.c2)))AND(x'')) THEN 629801291 ELSE CAST(rt1.c0 AS TEXT) END) IS TRUE)  as count FROM rt2, rt1);
SELECT * FROM rt2, rt1 WHERE (CASE WHEN ((((rt1.c0)AND(rt2.c2)))AND(x'')) THEN 629801291 ELSE CAST(rt1.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt1.c0)AND(rt2.c2)))AND(x'')) THEN 629801291 ELSE CAST(rt1.c0 AS TEXT) END) IS TRUE)  as count FROM rt2, rt1);
SELECT * FROM rt2, rt1 WHERE (CASE WHEN ((((rt1.c0)AND(rt2.c2)))AND(x'')) THEN 629801291 ELSE CAST(rt1.c0 AS TEXT) END);
SELECT COUNT(*) FROM rt1, rt0, rt2 WHERE ('817273705') ORDER BY CASE 0.13554262912589887  WHEN rt2.c2 COLLATE BINARY THEN ((rt2.c0) BETWEEN (rt2.c0) AND (rt1.c3)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (('817273705') IS TRUE)  as count FROM rt1, rt0, rt2 ORDER BY CASE 0.13554262912589887  WHEN rt2.c2 COLLATE BINARY THEN ((rt2.c0) BETWEEN (rt2.c0) AND (rt1.c3)) END DESC);
SELECT COUNT(*) FROM rt1, rt0, rt2 WHERE ('817273705') ORDER BY CASE 0.13554262912589887  WHEN rt2.c2 COLLATE BINARY THEN ((rt2.c0) BETWEEN (rt2.c0) AND (rt1.c3)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (('817273705') IS TRUE)  as count FROM rt1, rt0, rt2 ORDER BY CASE 0.13554262912589887  WHEN rt2.c2 COLLATE BINARY THEN ((rt2.c0) BETWEEN (rt2.c0) AND (rt1.c3)) END DESC);
SELECT COUNT(*) FROM rt1, rt0, rt2 WHERE ('817273705') ORDER BY CASE 0.13554262912589887  WHEN rt2.c2 COLLATE BINARY THEN ((rt2.c0) BETWEEN (rt2.c0) AND (rt1.c3)) END DESC;
SELECT COUNT(*) FROM rt2 WHERE (UNLIKELY(UNLIKELY(DISTINCT rt2.c0))) ORDER BY ((((rt2.c1)OR((rt2.c2 IN ()))))AND(((rt2.c0) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(UNLIKELY(DISTINCT rt2.c0))) IS TRUE)  as count FROM rt2 ORDER BY ((((rt2.c1)OR((rt2.c2 IN ()))))AND(((rt2.c0) IS TRUE)))  NULLS FIRST);
SELECT COUNT(*) FROM rt2 WHERE (UNLIKELY(UNLIKELY(DISTINCT rt2.c0))) ORDER BY ((((rt2.c1)OR((rt2.c2 IN ()))))AND(((rt2.c0) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(UNLIKELY(DISTINCT rt2.c0))) IS TRUE)  as count FROM rt2 ORDER BY ((((rt2.c1)OR((rt2.c2 IN ()))))AND(((rt2.c0) IS TRUE)))  NULLS FIRST);
SELECT COUNT(*) FROM rt2 WHERE (UNLIKELY(UNLIKELY(DISTINCT rt2.c0))) ORDER BY ((((rt2.c1)OR((rt2.c2 IN ()))))AND(((rt2.c0) IS TRUE)))  NULLS FIRST;
SELECT * FROM rt0 WHERE (((rt0.c2)IS NOT(0xffffffffbea38f67)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)IS NOT(0xffffffffbea38f67)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c2)IS NOT(0xffffffffbea38f67)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)IS NOT(0xffffffffbea38f67)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c2)IS NOT(0xffffffffbea38f67)) COLLATE RTRIM);
SELECT * FROM rt1, rt2 WHERE (CAST(rt1.c2 AS BLOB)) ORDER BY ((((rt1.c2 COLLATE RTRIM)AND(((rt1.c2) BETWEEN (rt1.c2) AND (rt2.c0)))))AND(TRIM(DISTINCT rt1.c0, rt1.c3)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c2 AS BLOB)) IS TRUE)  as count FROM rt1, rt2 ORDER BY ((((rt1.c2 COLLATE RTRIM)AND(((rt1.c2) BETWEEN (rt1.c2) AND (rt2.c0)))))AND(TRIM(DISTINCT rt1.c0, rt1.c3)))  NULLS LAST);
SELECT * FROM rt1, rt2 WHERE (CAST(rt1.c2 AS BLOB)) ORDER BY ((((rt1.c2 COLLATE RTRIM)AND(((rt1.c2) BETWEEN (rt1.c2) AND (rt2.c0)))))AND(TRIM(DISTINCT rt1.c0, rt1.c3)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c2 AS BLOB)) IS TRUE)  as count FROM rt1, rt2 ORDER BY ((((rt1.c2 COLLATE RTRIM)AND(((rt1.c2) BETWEEN (rt1.c2) AND (rt2.c0)))))AND(TRIM(DISTINCT rt1.c0, rt1.c3)))  NULLS LAST);
SELECT * FROM rt1, rt2 WHERE (CAST(rt1.c2 AS BLOB)) ORDER BY ((((rt1.c2 COLLATE RTRIM)AND(((rt1.c2) BETWEEN (rt1.c2) AND (rt2.c0)))))AND(TRIM(DISTINCT rt1.c0, rt1.c3)))  NULLS LAST;
SELECT ALL * FROM rt2, rt1 WHERE (rt2.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt2.c2) IS TRUE)  as count FROM rt2, rt1);
SELECT ALL * FROM rt2, rt1 WHERE (rt2.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt2.c2) IS TRUE)  as count FROM rt2, rt1);
SELECT ALL * FROM rt2, rt1 WHERE (rt2.c2);
SELECT * FROM rt2 WHERE (CASE WHEN rt2.c0 THEN rt2.c1 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt2.c0 THEN rt2.c1 END COLLATE NOCASE) IS TRUE)  as count FROM rt2);
SELECT * FROM rt2 WHERE (CASE WHEN rt2.c0 THEN rt2.c1 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt2.c0 THEN rt2.c1 END COLLATE NOCASE) IS TRUE)  as count FROM rt2);
SELECT * FROM rt2 WHERE (CASE WHEN rt2.c0 THEN rt2.c1 END COLLATE NOCASE);
SELECT COUNT(*) FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (NULL);
SELECT * FROM rt0 WHERE (json_quote(((rt0.c3)>(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_quote(((rt0.c3)>(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (json_quote(((rt0.c3)>(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_quote(((rt0.c3)>(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (json_quote(((rt0.c3)>(rt0.c0))));
SELECT * FROM rt1, rt2, rt0 WHERE (((((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt1.c1))) NOT BETWEEN (NULL) AND (((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt2.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt1.c1))) NOT BETWEEN (NULL) AND (((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt2.c1))))) IS TRUE)  as count FROM rt1, rt2, rt0);
SELECT * FROM rt1, rt2, rt0 WHERE (((((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt1.c1))) NOT BETWEEN (NULL) AND (((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt2.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt1.c1))) NOT BETWEEN (NULL) AND (((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt2.c1))))) IS TRUE)  as count FROM rt1, rt2, rt0);
SELECT * FROM rt1, rt2, rt0 WHERE (((((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt1.c1))) NOT BETWEEN (NULL) AND (((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt2.c1)))));
SELECT ALL * FROM rt2 LEFT OUTER JOIN rt1 ON ((((rt2.c0)GLOB(rt1.c4))) NOT NULL) WHERE (rt1.c4) ORDER BY CASE (((rt1.c1))<=((rt1.c0)))  WHEN HEX(rt2.c2) THEN '444657601' END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM rt2 LEFT OUTER JOIN rt1 ON ((((rt2.c0)GLOB(rt1.c4))) NOT NULL) ORDER BY CASE (((rt1.c1))<=((rt1.c0)))  WHEN HEX(rt2.c2) THEN '444657601' END  NULLS FIRST);
SELECT ALL * FROM rt2 LEFT OUTER JOIN rt1 ON ((((rt2.c0)GLOB(rt1.c4))) NOT NULL) WHERE (rt1.c4) ORDER BY CASE (((rt1.c1))<=((rt1.c0)))  WHEN HEX(rt2.c2) THEN '444657601' END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM rt2 LEFT OUTER JOIN rt1 ON ((((rt2.c0)GLOB(rt1.c4))) NOT NULL) ORDER BY CASE (((rt1.c1))<=((rt1.c0)))  WHEN HEX(rt2.c2) THEN '444657601' END  NULLS FIRST);
SELECT ALL * FROM rt2 LEFT OUTER JOIN rt1 ON ((((rt2.c0)GLOB(rt1.c4))) NOT NULL) WHERE (rt1.c4) ORDER BY CASE (((rt1.c1))<=((rt1.c0)))  WHEN HEX(rt2.c2) THEN '444657601' END  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c2)AND(rt0.c3)) AS NUMERIC)) ORDER BY CAST(rt0.c3 AS BLOB);
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)AND(rt0.c3)) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c3 AS BLOB));
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c2)AND(rt0.c3)) AS NUMERIC)) ORDER BY CAST(rt0.c3 AS BLOB);
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)AND(rt0.c3)) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c3 AS BLOB));
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c2)AND(rt0.c3)) AS NUMERIC)) ORDER BY CAST(rt0.c3 AS BLOB);
SELECT COUNT(*) FROM rt2 CROSS JOIN rt1 ON CASE WHEN LIKE(rt0.c2, rt0.c2, 'U') THEN rt0.c1 WHEN ((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c0)) THEN TRIM(rt0.c1) WHEN (rt1.c3 IN (rt0.c1)) THEN ((((((((rt2.c1)AND(rt0.c2)))OR(rt1.c1)))AND(rt1.c4)))OR(rt2.c1)) END CROSS JOIN rt0 ON ((rt1.c1 COLLATE NOCASE) NOT BETWEEN (0x16468164 COLLATE NOCASE) AND (rt0.c2)) WHERE (((rt0.c2) IS FALSE) COLLATE NOCASE) ORDER BY (((rt2.c1) ISNULL) IN ((- (rt0.c3)), x''));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM rt2 CROSS JOIN rt1 ON CASE WHEN LIKE(rt0.c2, rt0.c2, 'U') THEN rt0.c1 WHEN ((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c0)) THEN TRIM(rt0.c1) WHEN (rt1.c3 IN (rt0.c1)) THEN ((((((((rt2.c1)AND(rt0.c2)))OR(rt1.c1)))AND(rt1.c4)))OR(rt2.c1)) END CROSS JOIN rt0 ON ((rt1.c1 COLLATE NOCASE) NOT BETWEEN (0x16468164 COLLATE NOCASE) AND (rt0.c2)) ORDER BY (((rt2.c1) ISNULL) IN ((- (rt0.c3)), x'')));
SELECT COUNT(*) FROM rt2 CROSS JOIN rt1 ON CASE WHEN LIKE(rt0.c2, rt0.c2, 'U') THEN rt0.c1 WHEN ((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c0)) THEN TRIM(rt0.c1) WHEN (rt1.c3 IN (rt0.c1)) THEN ((((((((rt2.c1)AND(rt0.c2)))OR(rt1.c1)))AND(rt1.c4)))OR(rt2.c1)) END CROSS JOIN rt0 ON ((rt1.c1 COLLATE NOCASE) NOT BETWEEN (0x16468164 COLLATE NOCASE) AND (rt0.c2)) WHERE (((rt0.c2) IS FALSE) COLLATE NOCASE) ORDER BY (((rt2.c1) ISNULL) IN ((- (rt0.c3)), x''));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM rt2 CROSS JOIN rt1 ON CASE WHEN LIKE(rt0.c2, rt0.c2, 'U') THEN rt0.c1 WHEN ((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c0)) THEN TRIM(rt0.c1) WHEN (rt1.c3 IN (rt0.c1)) THEN ((((((((rt2.c1)AND(rt0.c2)))OR(rt1.c1)))AND(rt1.c4)))OR(rt2.c1)) END CROSS JOIN rt0 ON ((rt1.c1 COLLATE NOCASE) NOT BETWEEN (0x16468164 COLLATE NOCASE) AND (rt0.c2)) ORDER BY (((rt2.c1) ISNULL) IN ((- (rt0.c3)), x'')));
SELECT COUNT(*) FROM rt2 CROSS JOIN rt1 ON CASE WHEN LIKE(rt0.c2, rt0.c2, 'U') THEN rt0.c1 WHEN ((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c0)) THEN TRIM(rt0.c1) WHEN (rt1.c3 IN (rt0.c1)) THEN ((((((((rt2.c1)AND(rt0.c2)))OR(rt1.c1)))AND(rt1.c4)))OR(rt2.c1)) END CROSS JOIN rt0 ON ((rt1.c1 COLLATE NOCASE) NOT BETWEEN (0x16468164 COLLATE NOCASE) AND (rt0.c2)) WHERE (((rt0.c2) IS FALSE) COLLATE NOCASE) ORDER BY (((rt2.c1) ISNULL) IN ((- (rt0.c3)), x''));
SELECT ALL COUNT(*) FROM rt0, rt2 WHERE (((CASE rt2.c1  WHEN rt2.c2 THEN rt2.c0 END)<=((rt2.c1 IN (rt0.c0, x'a7d1'))))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ((((CASE rt2.c1  WHEN rt2.c2 THEN rt2.c0 END)<=((rt2.c1 IN (rt0.c0, x'a7d1'))))) IS TRUE)  as count FROM rt0, rt2 ORDER BY NULL ASC);
SELECT ALL COUNT(*) FROM rt0, rt2 WHERE (((CASE rt2.c1  WHEN rt2.c2 THEN rt2.c0 END)<=((rt2.c1 IN (rt0.c0, x'a7d1'))))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ((((CASE rt2.c1  WHEN rt2.c2 THEN rt2.c0 END)<=((rt2.c1 IN (rt0.c0, x'a7d1'))))) IS TRUE)  as count FROM rt0, rt2 ORDER BY NULL ASC);
SELECT ALL COUNT(*) FROM rt0, rt2 WHERE (((CASE rt2.c1  WHEN rt2.c2 THEN rt2.c0 END)<=((rt2.c1 IN (rt0.c0, x'a7d1'))))) ORDER BY NULL ASC;
SELECT COUNT(*) FROM rt1 WHERE (((json_insert(rt1.c3, rt1.c3, rt1.c4))IS NOT(((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c3)))OR(rt1.c0)))OR(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((json_insert(rt1.c3, rt1.c3, rt1.c4))IS NOT(((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c3)))OR(rt1.c0)))OR(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((json_insert(rt1.c3, rt1.c3, rt1.c4))IS NOT(((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c3)))OR(rt1.c0)))OR(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((json_insert(rt1.c3, rt1.c3, rt1.c4))IS NOT(((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c3)))OR(rt1.c0)))OR(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((json_insert(rt1.c3, rt1.c3, rt1.c4))IS NOT(((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c3)))OR(rt1.c0)))OR(rt1.c0)))));
SELECT ALL * FROM rt2 INNER JOIN rt0 ON (((((rt2.c2 IN ()))AND((NOT (rt0.c1)))))AND(((rt2.c0) ISNULL))) FULL OUTER JOIN rt1 ON (~ ((NOT (0.2089645193845454)))) WHERE (CAST(x'187a' AS BLOB)) ORDER BY NULL ASC, (((rt2.c0 IN ())) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'187a' AS BLOB)) IS TRUE)  as count FROM rt2 INNER JOIN rt0 ON (((((rt2.c2 IN ()))AND((NOT (rt0.c1)))))AND(((rt2.c0) ISNULL))) FULL OUTER JOIN rt1 ON (~ ((NOT (0.2089645193845454)))) ORDER BY NULL ASC, (((rt2.c0 IN ())) NOT NULL)  NULLS LAST);
SELECT ALL * FROM rt2 INNER JOIN rt0 ON (((((rt2.c2 IN ()))AND((NOT (rt0.c1)))))AND(((rt2.c0) ISNULL))) FULL OUTER JOIN rt1 ON (~ ((NOT (0.2089645193845454)))) WHERE (CAST(x'187a' AS BLOB)) ORDER BY NULL ASC, (((rt2.c0 IN ())) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'187a' AS BLOB)) IS TRUE)  as count FROM rt2 INNER JOIN rt0 ON (((((rt2.c2 IN ()))AND((NOT (rt0.c1)))))AND(((rt2.c0) ISNULL))) FULL OUTER JOIN rt1 ON (~ ((NOT (0.2089645193845454)))) ORDER BY NULL ASC, (((rt2.c0 IN ())) NOT NULL)  NULLS LAST);
SELECT ALL * FROM rt2 INNER JOIN rt0 ON (((((rt2.c2 IN ()))AND((NOT (rt0.c1)))))AND(((rt2.c0) ISNULL))) FULL OUTER JOIN rt1 ON (~ ((NOT (0.2089645193845454)))) WHERE (CAST(x'187a' AS BLOB)) ORDER BY NULL ASC, (((rt2.c0 IN ())) NOT NULL)  NULLS LAST;
SELECT COUNT(*) FROM rt2 FULL OUTER JOIN rt1 ON CAST(CASE rt2.c2  WHEN rt0.c2 THEN rt1.c3 WHEN rt2.c2 THEN rt1.c4 WHEN rt0.c0 THEN rt1.c3 ELSE rt0.c2 END AS BLOB) LEFT OUTER JOIN rt0 ON CAST(rt2.c1 AS INTEGER) COLLATE NOCASE COLLATE NOCASE WHERE (((rt1.c4) NOT BETWEEN (((rt1.c1)/(rt0.c1))) AND (x'69ce')));
SELECT SUM(count) FROM (SELECT ((((rt1.c4) NOT BETWEEN (((rt1.c1)/(rt0.c1))) AND (x'69ce'))) IS TRUE)  as count FROM rt2 FULL OUTER JOIN rt1 ON CAST(CASE rt2.c2  WHEN rt0.c2 THEN rt1.c3 WHEN rt2.c2 THEN rt1.c4 WHEN rt0.c0 THEN rt1.c3 ELSE rt0.c2 END AS BLOB) LEFT OUTER JOIN rt0 ON CAST(rt2.c1 AS INTEGER) COLLATE NOCASE COLLATE NOCASE);
SELECT COUNT(*) FROM rt2 FULL OUTER JOIN rt1 ON CAST(CASE rt2.c2  WHEN rt0.c2 THEN rt1.c3 WHEN rt2.c2 THEN rt1.c4 WHEN rt0.c0 THEN rt1.c3 ELSE rt0.c2 END AS BLOB) LEFT OUTER JOIN rt0 ON CAST(rt2.c1 AS INTEGER) COLLATE NOCASE COLLATE NOCASE WHERE (((rt1.c4) NOT BETWEEN (((rt1.c1)/(rt0.c1))) AND (x'69ce')));
SELECT SUM(count) FROM (SELECT ((((rt1.c4) NOT BETWEEN (((rt1.c1)/(rt0.c1))) AND (x'69ce'))) IS TRUE)  as count FROM rt2 FULL OUTER JOIN rt1 ON CAST(CASE rt2.c2  WHEN rt0.c2 THEN rt1.c3 WHEN rt2.c2 THEN rt1.c4 WHEN rt0.c0 THEN rt1.c3 ELSE rt0.c2 END AS BLOB) LEFT OUTER JOIN rt0 ON CAST(rt2.c1 AS INTEGER) COLLATE NOCASE COLLATE NOCASE);
SELECT * FROM rt2 WHERE ((((rt2.c2) IS TRUE) IN ())) ORDER BY CASE WHEN ((rt2.c1) NOT BETWEEN (rt2.c0) AND (rt2.c1)) THEN ((rt2.c0)-(rt2.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt2.c2) IS TRUE) IN ())) IS TRUE)  as count FROM rt2 ORDER BY CASE WHEN ((rt2.c1) NOT BETWEEN (rt2.c0) AND (rt2.c1)) THEN ((rt2.c0)-(rt2.c2)) END ASC);
SELECT * FROM rt2 WHERE ((((rt2.c2) IS TRUE) IN ())) ORDER BY CASE WHEN ((rt2.c1) NOT BETWEEN (rt2.c0) AND (rt2.c1)) THEN ((rt2.c0)-(rt2.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt2.c2) IS TRUE) IN ())) IS TRUE)  as count FROM rt2 ORDER BY CASE WHEN ((rt2.c1) NOT BETWEEN (rt2.c0) AND (rt2.c1)) THEN ((rt2.c0)-(rt2.c2)) END ASC);
SELECT * FROM rt2 WHERE ((((rt2.c2) IS TRUE) IN ())) ORDER BY CASE WHEN ((rt2.c1) NOT BETWEEN (rt2.c0) AND (rt2.c1)) THEN ((rt2.c0)-(rt2.c2)) END ASC;
SELECT * FROM rt1 WHERE (((((rt1.c1)IS(rt1.c2)))<(((0.021044830502107148)-(rt1.c3))))) ORDER BY ((((rt1.c1) BETWEEN (-2.072034816E9) AND (rt1.c3))) BETWEEN (((rt1.c0)<<(rt1.c4))) AND (CASE WHEN rt1.c4 THEN rt1.c2 END)) DESC, ((rt1.c0 COLLATE RTRIM) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)IS(rt1.c2)))<(((0.021044830502107148)-(rt1.c3))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1) BETWEEN (-2.072034816E9) AND (rt1.c3))) BETWEEN (((rt1.c0)<<(rt1.c4))) AND (CASE WHEN rt1.c4 THEN rt1.c2 END)) DESC, ((rt1.c0 COLLATE RTRIM) NOTNULL)  NULLS LAST);
SELECT * FROM rt1 WHERE (((((rt1.c1)IS(rt1.c2)))<(((0.021044830502107148)-(rt1.c3))))) ORDER BY ((((rt1.c1) BETWEEN (-2.072034816E9) AND (rt1.c3))) BETWEEN (((rt1.c0)<<(rt1.c4))) AND (CASE WHEN rt1.c4 THEN rt1.c2 END)) DESC, ((rt1.c0 COLLATE RTRIM) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)IS(rt1.c2)))<(((0.021044830502107148)-(rt1.c3))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1) BETWEEN (-2.072034816E9) AND (rt1.c3))) BETWEEN (((rt1.c0)<<(rt1.c4))) AND (CASE WHEN rt1.c4 THEN rt1.c2 END)) DESC, ((rt1.c0 COLLATE RTRIM) NOTNULL)  NULLS LAST);
SELECT * FROM rt1 WHERE (((((rt1.c1)IS(rt1.c2)))<(((0.021044830502107148)-(rt1.c3))))) ORDER BY ((((rt1.c1) BETWEEN (-2.072034816E9) AND (rt1.c3))) BETWEEN (((rt1.c0)<<(rt1.c4))) AND (CASE WHEN rt1.c4 THEN rt1.c2 END)) DESC, ((rt1.c0 COLLATE RTRIM) NOTNULL)  NULLS LAST;
SELECT COUNT(*) FROM rt2, rt0, rt1 WHERE ((((('') NOT NULL))+(rt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((('') NOT NULL))+(rt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt2, rt0, rt1);
SELECT COUNT(*) FROM rt2, rt0, rt1 WHERE ((((('') NOT NULL))+(rt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((('') NOT NULL))+(rt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt2, rt0, rt1);
SELECT COUNT(*) FROM rt2, rt0, rt1 WHERE ((((('') NOT NULL))+(rt1.c0 COLLATE RTRIM)));
SELECT ALL * FROM rt2, rt0 WHERE ((((((0X1e2727e7, rt0.c3, rt2.c2)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c2)) AND ((rt0.c2, 0Xffffffffb140329c, rt0.c2))))IS(TRIM(rt0.c0, NULL)))) ORDER BY CAST((rt2.c1 IN (rt2.c1, 'qZ2WYXX')) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT (((((((0X1e2727e7, rt0.c3, rt2.c2)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c2)) AND ((rt0.c2, 0Xffffffffb140329c, rt0.c2))))IS(TRIM(rt0.c0, NULL)))) IS TRUE)  as count FROM rt2, rt0 ORDER BY CAST((rt2.c1 IN (rt2.c1, 'qZ2WYXX')) AS BLOB) DESC);
SELECT ALL * FROM rt2, rt0 WHERE ((((((0X1e2727e7, rt0.c3, rt2.c2)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c2)) AND ((rt0.c2, 0Xffffffffb140329c, rt0.c2))))IS(TRIM(rt0.c0, NULL)))) ORDER BY CAST((rt2.c1 IN (rt2.c1, 'qZ2WYXX')) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT (((((((0X1e2727e7, rt0.c3, rt2.c2)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c2)) AND ((rt0.c2, 0Xffffffffb140329c, rt0.c2))))IS(TRIM(rt0.c0, NULL)))) IS TRUE)  as count FROM rt2, rt0 ORDER BY CAST((rt2.c1 IN (rt2.c1, 'qZ2WYXX')) AS BLOB) DESC);
SELECT ALL * FROM rt2, rt0 WHERE ((((((0X1e2727e7, rt0.c3, rt2.c2)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c2)) AND ((rt0.c2, 0Xffffffffb140329c, rt0.c2))))IS(TRIM(rt0.c0, NULL)))) ORDER BY CAST((rt2.c1 IN (rt2.c1, 'qZ2WYXX')) AS BLOB) DESC;
SELECT ALL * FROM rt2, rt1 WHERE (((((((((LIKELIHOOD(rt2.c0, 0.4263768692258576))AND(rt2.c2)))OR(((rt1.c1) ISNULL))))AND((((rt1.c3)) BETWEEN ((rt2.c0)) AND ((0.041182618085533806))))))OR(CAST(rt1.c0 AS REAL)))) ORDER BY CAST(rt2.c0 AS BLOB) DESC  NULLS FIRST, ((((rt1.c4)/(rt2.c0)))%(((rt2.c1)*(x'')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((LIKELIHOOD(rt2.c0, 0.4263768692258576))AND(rt2.c2)))OR(((rt1.c1) ISNULL))))AND((((rt1.c3)) BETWEEN ((rt2.c0)) AND ((0.041182618085533806))))))OR(CAST(rt1.c0 AS REAL)))) IS TRUE)  as count FROM rt2, rt1 ORDER BY CAST(rt2.c0 AS BLOB) DESC  NULLS FIRST, ((((rt1.c4)/(rt2.c0)))%(((rt2.c1)*(x'')))) DESC  NULLS FIRST);
SELECT ALL * FROM rt2, rt1 WHERE (((((((((LIKELIHOOD(rt2.c0, 0.4263768692258576))AND(rt2.c2)))OR(((rt1.c1) ISNULL))))AND((((rt1.c3)) BETWEEN ((rt2.c0)) AND ((0.041182618085533806))))))OR(CAST(rt1.c0 AS REAL)))) ORDER BY CAST(rt2.c0 AS BLOB) DESC  NULLS FIRST, ((((rt1.c4)/(rt2.c0)))%(((rt2.c1)*(x'')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((LIKELIHOOD(rt2.c0, 0.4263768692258576))AND(rt2.c2)))OR(((rt1.c1) ISNULL))))AND((((rt1.c3)) BETWEEN ((rt2.c0)) AND ((0.041182618085533806))))))OR(CAST(rt1.c0 AS REAL)))) IS TRUE)  as count FROM rt2, rt1 ORDER BY CAST(rt2.c0 AS BLOB) DESC  NULLS FIRST, ((((rt1.c4)/(rt2.c0)))%(((rt2.c1)*(x'')))) DESC  NULLS FIRST);
SELECT ALL * FROM rt2, rt1 WHERE (((((((((LIKELIHOOD(rt2.c0, 0.4263768692258576))AND(rt2.c2)))OR(((rt1.c1) ISNULL))))AND((((rt1.c3)) BETWEEN ((rt2.c0)) AND ((0.041182618085533806))))))OR(CAST(rt1.c0 AS REAL)))) ORDER BY CAST(rt2.c0 AS BLOB) DESC  NULLS FIRST, ((((rt1.c4)/(rt2.c0)))%(((rt2.c1)*(x'')))) DESC  NULLS FIRST;
SELECT * FROM rt0, rt2 NOT INDEXED WHERE (ABS(DISTINCT rt2.c2));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT rt2.c2)) IS TRUE)  as count FROM rt0, rt2);
SELECT * FROM rt0, rt2 NOT INDEXED WHERE (ABS(DISTINCT rt2.c2));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT rt2.c2)) IS TRUE)  as count FROM rt0, rt2);
SELECT * FROM rt0, rt2 NOT INDEXED WHERE (ABS(DISTINCT rt2.c2));
SELECT ALL * FROM rt0, rt1 WHERE (ROUND((~ (rt1.c1)), MIN(rt0.c3, rt1.c3))) ORDER BY 0.022904528143948832 ASC;
SELECT SUM(count) FROM (SELECT ((ROUND((~ (rt1.c1)), MIN(rt0.c3, rt1.c3))) IS TRUE)  as count FROM rt0, rt1 ORDER BY 0.022904528143948832 ASC);
SELECT ALL * FROM rt0, rt1 WHERE (ROUND((~ (rt1.c1)), MIN(rt0.c3, rt1.c3))) ORDER BY 0.022904528143948832 ASC;
SELECT SUM(count) FROM (SELECT ((ROUND((~ (rt1.c1)), MIN(rt0.c3, rt1.c3))) IS TRUE)  as count FROM rt0, rt1 ORDER BY 0.022904528143948832 ASC);
SELECT ALL * FROM rt0, rt1 WHERE (ROUND((~ (rt1.c1)), MIN(rt0.c3, rt1.c3))) ORDER BY 0.022904528143948832 ASC;
SELECT * FROM rt1 NATURAL JOIN rt2 WHERE (((((rt1.c1 IN ())))==((LOWER(rt2.c1))))) ORDER BY rt1.c0 DESC, (((rt2.c1, rt1.c4, rt2.c2)) NOT BETWEEN ((rt1.c0, rt1.c4, rt1.c1)) AND ((rt2.c1, rt1.c2, rt1.c2))) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1 IN ())))==((LOWER(rt2.c1))))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt2 ORDER BY rt1.c0 DESC, (((rt2.c1, rt1.c4, rt2.c2)) NOT BETWEEN ((rt1.c0, rt1.c4, rt1.c1)) AND ((rt2.c1, rt1.c2, rt1.c2))) COLLATE NOCASE);
SELECT * FROM rt1 NATURAL JOIN rt2 WHERE (((((rt1.c1 IN ())))==((LOWER(rt2.c1))))) ORDER BY rt1.c0 DESC, (((rt2.c1, rt1.c4, rt2.c2)) NOT BETWEEN ((rt1.c0, rt1.c4, rt1.c1)) AND ((rt2.c1, rt1.c2, rt1.c2))) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1 IN ())))==((LOWER(rt2.c1))))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt2 ORDER BY rt1.c0 DESC, (((rt2.c1, rt1.c4, rt2.c2)) NOT BETWEEN ((rt1.c0, rt1.c4, rt1.c1)) AND ((rt2.c1, rt1.c2, rt1.c2))) COLLATE NOCASE);
SELECT * FROM rt1 NATURAL JOIN rt2 WHERE (((((rt1.c1 IN ())))==((LOWER(rt2.c1))))) ORDER BY rt1.c0 DESC, (((rt2.c1, rt1.c4, rt2.c2)) NOT BETWEEN ((rt1.c0, rt1.c4, rt1.c1)) AND ((rt2.c1, rt1.c2, rt1.c2))) COLLATE NOCASE;
SELECT ALL * FROM rt2, rt0 WHERE (((rt2.c2 COLLATE RTRIM) NOT BETWEEN (((rt0.c1)%(rt2.c2))) AND (CASE WHEN rt2.c1 THEN rt2.c1 END)));
SELECT SUM(count) FROM (SELECT ((((rt2.c2 COLLATE RTRIM) NOT BETWEEN (((rt0.c1)%(rt2.c2))) AND (CASE WHEN rt2.c1 THEN rt2.c1 END))) IS TRUE)  as count FROM rt2, rt0);
SELECT ALL * FROM rt2, rt0 WHERE (((rt2.c2 COLLATE RTRIM) NOT BETWEEN (((rt0.c1)%(rt2.c2))) AND (CASE WHEN rt2.c1 THEN rt2.c1 END)));
SELECT SUM(count) FROM (SELECT ((((rt2.c2 COLLATE RTRIM) NOT BETWEEN (((rt0.c1)%(rt2.c2))) AND (CASE WHEN rt2.c1 THEN rt2.c1 END))) IS TRUE)  as count FROM rt2, rt0);
SELECT ALL * FROM rt2, rt0 WHERE (((rt2.c2 COLLATE RTRIM) NOT BETWEEN (((rt0.c1)%(rt2.c2))) AND (CASE WHEN rt2.c1 THEN rt2.c1 END)));
SELECT * FROM rt1 WHERE (((NOT (rt1.c0)) IN ())) ORDER BY (('817273705')%((NULL IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((((NOT (rt1.c0)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY (('817273705')%((NULL IN ()))) DESC);
SELECT * FROM rt1 WHERE (((NOT (rt1.c0)) IN ())) ORDER BY (('817273705')%((NULL IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((((NOT (rt1.c0)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY (('817273705')%((NULL IN ()))) DESC);
SELECT * FROM rt1 WHERE (((NOT (rt1.c0)) IN ())) ORDER BY (('817273705')%((NULL IN ()))) DESC;
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c2)<=('''A䚆⷏ N')) AS BLOB)) ORDER BY (~ (((rt0.c3)<(rt0.c0))))  NULLS LAST, x'' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)<=('''A䚆⷏ N')) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (~ (((rt0.c3)<(rt0.c0))))  NULLS LAST, x'' ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c2)<=('''A䚆⷏ N')) AS BLOB)) ORDER BY (~ (((rt0.c3)<(rt0.c0))))  NULLS LAST, x'' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)<=('''A䚆⷏ N')) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (~ (((rt0.c3)<(rt0.c0))))  NULLS LAST, x'' ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c2)<=('''A䚆⷏ N')) AS BLOB)) ORDER BY (~ (((rt0.c3)<(rt0.c0))))  NULLS LAST, x'' ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1, rt2 WHERE (TRIM(rt2.c1, rt2.c1)) ORDER BY ((((+ (rt1.c2)), ((rt1.c2)LIKE(rt1.c2)), CASE WHEN rt1.c3 THEN '0.8226321240450727' WHEN rt2.c1 THEN rt2.c2 WHEN rt1.c2 THEN rt1.c1 END))>(((NOT (rt1.c4)), ((((rt1.c2)OR(rt2.c0)))AND(rt1.c0)), ((((((((rt1.c1)AND(rt1.c4)))OR(NULL)))OR(rt1.c3)))OR('s^1)')))));
SELECT SUM(count) FROM (SELECT ((TRIM(rt2.c1, rt2.c1)) IS TRUE)  as count FROM rt1, rt2 ORDER BY ((((+ (rt1.c2)), ((rt1.c2)LIKE(rt1.c2)), CASE WHEN rt1.c3 THEN '0.8226321240450727' WHEN rt2.c1 THEN rt2.c2 WHEN rt1.c2 THEN rt1.c1 END))>(((NOT (rt1.c4)), ((((rt1.c2)OR(rt2.c0)))AND(rt1.c0)), ((((((((rt1.c1)AND(rt1.c4)))OR(NULL)))OR(rt1.c3)))OR('s^1)'))))));
SELECT COUNT(*) FROM rt1, rt2 WHERE (TRIM(rt2.c1, rt2.c1)) ORDER BY ((((+ (rt1.c2)), ((rt1.c2)LIKE(rt1.c2)), CASE WHEN rt1.c3 THEN '0.8226321240450727' WHEN rt2.c1 THEN rt2.c2 WHEN rt1.c2 THEN rt1.c1 END))>(((NOT (rt1.c4)), ((((rt1.c2)OR(rt2.c0)))AND(rt1.c0)), ((((((((rt1.c1)AND(rt1.c4)))OR(NULL)))OR(rt1.c3)))OR('s^1)')))));
SELECT SUM(count) FROM (SELECT ((TRIM(rt2.c1, rt2.c1)) IS TRUE)  as count FROM rt1, rt2 ORDER BY ((((+ (rt1.c2)), ((rt1.c2)LIKE(rt1.c2)), CASE WHEN rt1.c3 THEN '0.8226321240450727' WHEN rt2.c1 THEN rt2.c2 WHEN rt1.c2 THEN rt1.c1 END))>(((NOT (rt1.c4)), ((((rt1.c2)OR(rt2.c0)))AND(rt1.c0)), ((((((((rt1.c1)AND(rt1.c4)))OR(NULL)))OR(rt1.c3)))OR('s^1)'))))));
SELECT COUNT(*) FROM rt1, rt2 WHERE (TRIM(rt2.c1, rt2.c1)) ORDER BY ((((+ (rt1.c2)), ((rt1.c2)LIKE(rt1.c2)), CASE WHEN rt1.c3 THEN '0.8226321240450727' WHEN rt2.c1 THEN rt2.c2 WHEN rt1.c2 THEN rt1.c1 END))>(((NOT (rt1.c4)), ((((rt1.c2)OR(rt2.c0)))AND(rt1.c0)), ((((((((rt1.c1)AND(rt1.c4)))OR(NULL)))OR(rt1.c3)))OR('s^1)')))));
SELECT ALL COUNT(*) FROM rt2, rt0 WHERE (((CASE WHEN rt2.c1 THEN x'' END) NOT BETWEEN (TYPEOF(rt0.c2)) AND (CASE WHEN rt0.c0 THEN rt0.c1 END))) ORDER BY CAST(NULL AS TEXT);
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt2.c1 THEN x'' END) NOT BETWEEN (TYPEOF(rt0.c2)) AND (CASE WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt2, rt0 ORDER BY CAST(NULL AS TEXT));
SELECT ALL COUNT(*) FROM rt2, rt0 WHERE (((CASE WHEN rt2.c1 THEN x'' END) NOT BETWEEN (TYPEOF(rt0.c2)) AND (CASE WHEN rt0.c0 THEN rt0.c1 END))) ORDER BY CAST(NULL AS TEXT);
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt2.c1 THEN x'' END) NOT BETWEEN (TYPEOF(rt0.c2)) AND (CASE WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt2, rt0 ORDER BY CAST(NULL AS TEXT));
SELECT ALL COUNT(*) FROM rt2, rt0 WHERE (((CASE WHEN rt2.c1 THEN x'' END) NOT BETWEEN (TYPEOF(rt0.c2)) AND (CASE WHEN rt0.c0 THEN rt0.c1 END))) ORDER BY CAST(NULL AS TEXT);
SELECT ALL * FROM rt1, rt2, rt0 WHERE (((((NULL IN (rt0.c2, rt2.c0)), '0', rt1.c0 COLLATE NOCASE))!=((((rt1.c1)GLOB(rt0.c3)), CASE rt1.c2  WHEN rt1.c2 THEN rt1.c4 WHEN rt2.c1 THEN rt2.c0 WHEN rt2.c2 THEN rt1.c2 ELSE rt0.c2 END, ((rt1.c2) NOT BETWEEN ('992063295') AND (rt2.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL IN (rt0.c2, rt2.c0)), '0', rt1.c0 COLLATE NOCASE))<>((((rt1.c1)GLOB(rt0.c3)), CASE rt1.c2  WHEN rt1.c2 THEN rt1.c4 WHEN rt2.c1 THEN rt2.c0 WHEN rt2.c2 THEN rt1.c2 ELSE rt0.c2 END, ((rt1.c2) NOT BETWEEN ('992063295') AND (rt2.c2)))))) IS TRUE)  as count FROM rt1, rt2, rt0);
SELECT ALL * FROM rt1, rt2, rt0 WHERE (((((NULL IN (rt0.c2, rt2.c0)), '0', rt1.c0 COLLATE NOCASE))!=((((rt1.c1)GLOB(rt0.c3)), CASE rt1.c2  WHEN rt1.c2 THEN rt1.c4 WHEN rt2.c1 THEN rt2.c0 WHEN rt2.c2 THEN rt1.c2 ELSE rt0.c2 END, ((rt1.c2) NOT BETWEEN ('992063295') AND (rt2.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL IN (rt0.c2, rt2.c0)), '0', rt1.c0 COLLATE NOCASE))<>((((rt1.c1)GLOB(rt0.c3)), CASE rt1.c2  WHEN rt1.c2 THEN rt1.c4 WHEN rt2.c1 THEN rt2.c0 WHEN rt2.c2 THEN rt1.c2 ELSE rt0.c2 END, ((rt1.c2) NOT BETWEEN ('992063295') AND (rt2.c2)))))) IS TRUE)  as count FROM rt1, rt2, rt0);
SELECT ALL * FROM rt1, rt2, rt0 WHERE (((((NULL IN (rt0.c2, rt2.c0)), '0', rt1.c0 COLLATE NOCASE))!=((((rt1.c1)GLOB(rt0.c3)), CASE rt1.c2  WHEN rt1.c2 THEN rt1.c4 WHEN rt2.c1 THEN rt2.c0 WHEN rt2.c2 THEN rt1.c2 ELSE rt0.c2 END, ((rt1.c2) NOT BETWEEN ('992063295') AND (rt2.c2))))));
SELECT COUNT(*) FROM rt0, rt1, rt2 WHERE ((+ ((((rt2.c2, rt1.c1, rt2.c1))<>((x'', 1.339782353E9, rt1.c4))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((rt2.c2, rt1.c1, rt2.c1))!=((x'', 1.339782353E9, rt1.c4)))))) IS TRUE)  as count FROM rt0, rt1, rt2);
SELECT COUNT(*) FROM rt0, rt1, rt2 WHERE ((+ ((((rt2.c2, rt1.c1, rt2.c1))<>((x'', 1.339782353E9, rt1.c4))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((rt2.c2, rt1.c1, rt2.c1))!=((x'', 1.339782353E9, rt1.c4)))))) IS TRUE)  as count FROM rt0, rt1, rt2);
SELECT COUNT(*) FROM rt0, rt1, rt2 WHERE ((+ ((((rt2.c2, rt1.c1, rt2.c1))<>((x'', 1.339782353E9, rt1.c4))))));
SELECT COUNT(*) FROM rt0 WHERE ((((((((((((rt0.c0, rt0.c2, rt0.c2))<=((rt0.c3, rt0.c1, rt0.c2))))AND(CASE WHEN rt0.c1 THEN rt0.c3 END)))OR(((rt0.c0)IS(rt0.c3)))))AND((rt0.c2 IN ()))))OR('-1983582823'))) ORDER BY ((((((rt0.c0)AND(rt0.c3)))AND(rt0.c1))) IS TRUE) DESC, ((rt0.c3)*(((rt0.c0) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt0.c0, rt0.c2, rt0.c2))<=((rt0.c3, rt0.c1, rt0.c2))))AND(CASE WHEN rt0.c1 THEN rt0.c3 END)))OR(((rt0.c0)IS(rt0.c3)))))AND((rt0.c2 IN ()))))OR('-1983582823'))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)AND(rt0.c3)))AND(rt0.c1))) IS TRUE) DESC, ((rt0.c3)*(((rt0.c0) ISNULL))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((((((((((rt0.c0, rt0.c2, rt0.c2))<=((rt0.c3, rt0.c1, rt0.c2))))AND(CASE WHEN rt0.c1 THEN rt0.c3 END)))OR(((rt0.c0)IS(rt0.c3)))))AND((rt0.c2 IN ()))))OR('-1983582823'))) ORDER BY ((((((rt0.c0)AND(rt0.c3)))AND(rt0.c1))) IS TRUE) DESC, ((rt0.c3)*(((rt0.c0) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt0.c0, rt0.c2, rt0.c2))<=((rt0.c3, rt0.c1, rt0.c2))))AND(CASE WHEN rt0.c1 THEN rt0.c3 END)))OR(((rt0.c0)IS(rt0.c3)))))AND((rt0.c2 IN ()))))OR('-1983582823'))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)AND(rt0.c3)))AND(rt0.c1))) IS TRUE) DESC, ((rt0.c3)*(((rt0.c0) ISNULL))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((((((((((rt0.c0, rt0.c2, rt0.c2))<=((rt0.c3, rt0.c1, rt0.c2))))AND(CASE WHEN rt0.c1 THEN rt0.c3 END)))OR(((rt0.c0)IS(rt0.c3)))))AND((rt0.c2 IN ()))))OR('-1983582823'))) ORDER BY ((((((rt0.c0)AND(rt0.c3)))AND(rt0.c1))) IS TRUE) DESC, ((rt0.c3)*(((rt0.c0) ISNULL))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt2, rt0, rt1 WHERE (((rt1.c1) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1) NOT NULL)) IS TRUE)  as count FROM rt2, rt0, rt1);
SELECT ALL COUNT(*) FROM rt2, rt0, rt1 WHERE (((rt1.c1) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1) NOT NULL)) IS TRUE)  as count FROM rt2, rt0, rt1);
SELECT ALL COUNT(*) FROM rt2, rt0, rt1 WHERE (((rt1.c1) NOT NULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c0) IS TRUE) THEN (+ (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0) IS TRUE) THEN (+ (rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c0) IS TRUE) THEN (+ (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0) IS TRUE) THEN (+ (rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c0) IS TRUE) THEN (+ (rt0.c1)) END);
SELECT * FROM rt2, rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt2.c2)GLOB(rt2.c2)))) AND (((+ (rt2.c0)))))) ORDER BY (((rt0.c3)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c3 END)) AND ((rt2.c0 COLLATE NOCASE))) DESC  NULLS FIRST, ((CAST(rt0.c3 AS NUMERIC))<<((NOT ('1529610544'))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((((rt2.c2)GLOB(rt2.c2)))) AND (((+ (rt2.c0)))))) IS TRUE)  as count FROM rt2, rt0 ORDER BY (((rt0.c3)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c3 END)) AND ((rt2.c0 COLLATE NOCASE))) DESC  NULLS FIRST, ((CAST(rt0.c3 AS NUMERIC))<<((NOT ('1529610544')))));
SELECT * FROM rt2, rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt2.c2)GLOB(rt2.c2)))) AND (((+ (rt2.c0)))))) ORDER BY (((rt0.c3)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c3 END)) AND ((rt2.c0 COLLATE NOCASE))) DESC  NULLS FIRST, ((CAST(rt0.c3 AS NUMERIC))<<((NOT ('1529610544'))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((((rt2.c2)GLOB(rt2.c2)))) AND (((+ (rt2.c0)))))) IS TRUE)  as count FROM rt2, rt0 ORDER BY (((rt0.c3)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c3 END)) AND ((rt2.c0 COLLATE NOCASE))) DESC  NULLS FIRST, ((CAST(rt0.c3 AS NUMERIC))<<((NOT ('1529610544')))));
SELECT * FROM rt2, rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt2.c2)GLOB(rt2.c2)))) AND (((+ (rt2.c0)))))) ORDER BY (((rt0.c3)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c3 END)) AND ((rt2.c0 COLLATE NOCASE))) DESC  NULLS FIRST, ((CAST(rt0.c3 AS NUMERIC))<<((NOT ('1529610544'))));
SELECT * FROM rt0 WHERE (((((rt0.c0)>=(rt0.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)>=(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0)>=(rt0.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)>=(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0)>=(rt0.c2))) NOT NULL));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c3 AS TEXT))||((+ (rt1.c2)))) LEFT OUTER JOIN rt2 ON rt2.c0 WHERE (((((-1418331889)*('L~、zEyࡴ履'))) NOT BETWEEN (((((((((rt1.c2)OR(rt0.c2)))OR(rt0.c1)))AND(rt1.c3)))AND(rt2.c2))) AND (((rt1.c4)AND(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((((-1418331889)*('L~、zEyࡴ履'))) NOT BETWEEN (((((((((rt1.c2)OR(rt0.c2)))OR(rt0.c1)))AND(rt1.c3)))AND(rt2.c2))) AND (((rt1.c4)AND(rt1.c3))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c3 AS TEXT))||((+ (rt1.c2)))) LEFT OUTER JOIN rt2 ON rt2.c0);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c3 AS TEXT))||((+ (rt1.c2)))) LEFT OUTER JOIN rt2 ON rt2.c0 WHERE (((((-1418331889)*('L~、zEyࡴ履'))) NOT BETWEEN (((((((((rt1.c2)OR(rt0.c2)))OR(rt0.c1)))AND(rt1.c3)))AND(rt2.c2))) AND (((rt1.c4)AND(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((((-1418331889)*('L~、zEyࡴ履'))) NOT BETWEEN (((((((((rt1.c2)OR(rt0.c2)))OR(rt0.c1)))AND(rt1.c3)))AND(rt2.c2))) AND (((rt1.c4)AND(rt1.c3))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c3 AS TEXT))||((+ (rt1.c2)))) LEFT OUTER JOIN rt2 ON rt2.c0);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c3 AS TEXT))||((+ (rt1.c2)))) LEFT OUTER JOIN rt2 ON rt2.c0 WHERE (((((-1418331889)*('L~、zEyࡴ履'))) NOT BETWEEN (((((((((rt1.c2)OR(rt0.c2)))OR(rt0.c1)))AND(rt1.c3)))AND(rt2.c2))) AND (((rt1.c4)AND(rt1.c3)))));
SELECT ALL * FROM rt0 WHERE ((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c1))))<((((((NULL)AND(rt0.c0)))AND(rt0.c2)))))) ORDER BY (((rt0.c3, 1.215016289E9, rt0.c3)) NOT BETWEEN (('', (NOT (rt0.c3)), RTRIM(rt0.c0))) AND ((rt0.c1, NULL, ((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c1))))<((((((NULL)AND(rt0.c0)))AND(rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3, 1.215016289E9, rt0.c3)) NOT BETWEEN (('', (NOT (rt0.c3)), RTRIM(rt0.c0))) AND ((rt0.c1, NULL, ((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1))))) DESC);
SELECT ALL * FROM rt0 WHERE ((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c1))))<((((((NULL)AND(rt0.c0)))AND(rt0.c2)))))) ORDER BY (((rt0.c3, 1.215016289E9, rt0.c3)) NOT BETWEEN (('', (NOT (rt0.c3)), RTRIM(rt0.c0))) AND ((rt0.c1, NULL, ((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c1))))<((((((NULL)AND(rt0.c0)))AND(rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3, 1.215016289E9, rt0.c3)) NOT BETWEEN (('', (NOT (rt0.c3)), RTRIM(rt0.c0))) AND ((rt0.c1, NULL, ((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1))))) DESC);
SELECT ALL * FROM rt0 WHERE ((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c1))))<((((((NULL)AND(rt0.c0)))AND(rt0.c2)))))) ORDER BY (((rt0.c3, 1.215016289E9, rt0.c3)) NOT BETWEEN (('', (NOT (rt0.c3)), RTRIM(rt0.c0))) AND ((rt0.c1, NULL, ((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1))))) DESC;
SELECT ALL * FROM rt1 CROSS JOIN rt2 ON ((((rt1.c0)IS(rt2.c0))) NOT BETWEEN ('#o') AND (0.3568337681955873)) WHERE (((NULL)IS NOT(((x'a2b8')IS NOT(rt1.c2))))) ORDER BY (((rt2.c2, rt2.c2, rt2.c1)) BETWEEN ((((((rt1.c0)OR(rt1.c0)))AND(rt1.c0)), ((rt2.c0)||(rt1.c2)), ((rt2.c2) BETWEEN (rt1.c4) AND (rt1.c4)))) AND ((((rt2.c2)==(rt1.c4)), (~ ('8<w')), CAST(rt2.c2 AS NUMERIC)))) ASC  NULLS FIRST, ((832980401)|(rt1.c3)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((NULL)IS NOT(((x'a2b8')IS NOT(rt1.c2))))) IS TRUE)  as count FROM rt1 CROSS JOIN rt2 ON ((((rt1.c0)IS(rt2.c0))) NOT BETWEEN ('#o') AND (0.3568337681955873)) ORDER BY (((rt2.c2, rt2.c2, rt2.c1)) BETWEEN ((((((rt1.c0)OR(rt1.c0)))AND(rt1.c0)), ((rt2.c0)||(rt1.c2)), ((rt2.c2) BETWEEN (rt1.c4) AND (rt1.c4)))) AND ((((rt2.c2)=(rt1.c4)), (~ ('8<w')), CAST(rt2.c2 AS NUMERIC)))) ASC  NULLS FIRST, ((832980401)|(rt1.c3)) COLLATE NOCASE);
SELECT ALL * FROM rt1 CROSS JOIN rt2 ON ((((rt1.c0)IS(rt2.c0))) NOT BETWEEN ('#o') AND (0.3568337681955873)) WHERE (((NULL)IS NOT(((x'a2b8')IS NOT(rt1.c2))))) ORDER BY (((rt2.c2, rt2.c2, rt2.c1)) BETWEEN ((((((rt1.c0)OR(rt1.c0)))AND(rt1.c0)), ((rt2.c0)||(rt1.c2)), ((rt2.c2) BETWEEN (rt1.c4) AND (rt1.c4)))) AND ((((rt2.c2)==(rt1.c4)), (~ ('8<w')), CAST(rt2.c2 AS NUMERIC)))) ASC  NULLS FIRST, ((832980401)|(rt1.c3)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((NULL)IS NOT(((x'a2b8')IS NOT(rt1.c2))))) IS TRUE)  as count FROM rt1 CROSS JOIN rt2 ON ((((rt1.c0)IS(rt2.c0))) NOT BETWEEN ('#o') AND (0.3568337681955873)) ORDER BY (((rt2.c2, rt2.c2, rt2.c1)) BETWEEN ((((((rt1.c0)OR(rt1.c0)))AND(rt1.c0)), ((rt2.c0)||(rt1.c2)), ((rt2.c2) BETWEEN (rt1.c4) AND (rt1.c4)))) AND ((((rt2.c2)=(rt1.c4)), (~ ('8<w')), CAST(rt2.c2 AS NUMERIC)))) ASC  NULLS FIRST, ((832980401)|(rt1.c3)) COLLATE NOCASE);
SELECT ALL * FROM rt1 CROSS JOIN rt2 ON ((((rt1.c0)IS(rt2.c0))) NOT BETWEEN ('#o') AND (0.3568337681955873)) WHERE (((NULL)IS NOT(((x'a2b8')IS NOT(rt1.c2))))) ORDER BY (((rt2.c2, rt2.c2, rt2.c1)) BETWEEN ((((((rt1.c0)OR(rt1.c0)))AND(rt1.c0)), ((rt2.c0)||(rt1.c2)), ((rt2.c2) BETWEEN (rt1.c4) AND (rt1.c4)))) AND ((((rt2.c2)==(rt1.c4)), (~ ('8<w')), CAST(rt2.c2 AS NUMERIC)))) ASC  NULLS FIRST, ((832980401)|(rt1.c3)) COLLATE NOCASE;
SELECT ALL * FROM rt2, rt0 INNER JOIN rt1 ON ((((((rt2.c1)AND(rt1.c3)))OR(CASE rt1.c2  WHEN rt0.c1 THEN '2133213559' WHEN rt0.c1 THEN rt1.c1 WHEN rt2.c0 THEN rt1.c2 END)))AND(((rt0.c0) BETWEEN (rt0.c0) AND (1362731280)))) WHERE ((((('#9a')>(rt2.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((('#9a')>(rt2.c0))) ISNULL)) IS TRUE)  as count FROM rt2, rt0 INNER JOIN rt1 ON ((((((rt2.c1)AND(rt1.c3)))OR(CASE rt1.c2  WHEN rt0.c1 THEN '2133213559' WHEN rt0.c1 THEN rt1.c1 WHEN rt2.c0 THEN rt1.c2 END)))AND(((rt0.c0) BETWEEN (rt0.c0) AND (1362731280)))));
SELECT ALL * FROM rt2, rt0 INNER JOIN rt1 ON ((((((rt2.c1)AND(rt1.c3)))OR(CASE rt1.c2  WHEN rt0.c1 THEN '2133213559' WHEN rt0.c1 THEN rt1.c1 WHEN rt2.c0 THEN rt1.c2 END)))AND(((rt0.c0) BETWEEN (rt0.c0) AND (1362731280)))) WHERE ((((('#9a')>(rt2.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((('#9a')>(rt2.c0))) ISNULL)) IS TRUE)  as count FROM rt2, rt0 INNER JOIN rt1 ON ((((((rt2.c1)AND(rt1.c3)))OR(CASE rt1.c2  WHEN rt0.c1 THEN '2133213559' WHEN rt0.c1 THEN rt1.c1 WHEN rt2.c0 THEN rt1.c2 END)))AND(((rt0.c0) BETWEEN (rt0.c0) AND (1362731280)))));
SELECT ALL * FROM rt2, rt0 INNER JOIN rt1 ON ((((((rt2.c1)AND(rt1.c3)))OR(CASE rt1.c2  WHEN rt0.c1 THEN '2133213559' WHEN rt0.c1 THEN rt1.c1 WHEN rt2.c0 THEN rt1.c2 END)))AND(((rt0.c0) BETWEEN (rt0.c0) AND (1362731280)))) WHERE ((((('#9a')>(rt2.c0))) ISNULL));
SELECT * FROM rt2 WHERE (rt2.c1) ORDER BY CASE rt2.c0 COLLATE NOCASE  WHEN (rt2.c2 IN (rt2.c2)) THEN (rt2.c1 IN ()) WHEN ((rt2.c0) NOT BETWEEN (rt2.c0) AND (rt2.c1)) THEN (((rt2.c2))<>((rt2.c0))) WHEN ('|O' IN ()) THEN ((((rt2.c2)OR(rt2.c1)))OR(rt2.c1)) ELSE rt2.c2 COLLATE BINARY END  NULLS LAST, x'', (((((rt2.c0, rt2.c1, NULL))=((rt2.c0, rt2.c0, rt2.c1)))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt2.c1) IS TRUE)  as count FROM rt2 ORDER BY CASE rt2.c0 COLLATE NOCASE  WHEN (rt2.c2 IN (rt2.c2)) THEN (rt2.c1 IN ()) WHEN ((rt2.c0) NOT BETWEEN (rt2.c0) AND (rt2.c1)) THEN (((rt2.c2))!=((rt2.c0))) WHEN ('|O' IN ()) THEN ((((rt2.c2)OR(rt2.c1)))OR(rt2.c1)) ELSE rt2.c2 COLLATE BINARY END  NULLS LAST, x'', (((((rt2.c0, rt2.c1, NULL))=((rt2.c0, rt2.c0, rt2.c1)))) IS FALSE)  NULLS LAST);
SELECT * FROM rt2 WHERE (rt2.c1) ORDER BY CASE rt2.c0 COLLATE NOCASE  WHEN (rt2.c2 IN (rt2.c2)) THEN (rt2.c1 IN ()) WHEN ((rt2.c0) NOT BETWEEN (rt2.c0) AND (rt2.c1)) THEN (((rt2.c2))<>((rt2.c0))) WHEN ('|O' IN ()) THEN ((((rt2.c2)OR(rt2.c1)))OR(rt2.c1)) ELSE rt2.c2 COLLATE BINARY END  NULLS LAST, x'', (((((rt2.c0, rt2.c1, NULL))=((rt2.c0, rt2.c0, rt2.c1)))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt2.c1) IS TRUE)  as count FROM rt2 ORDER BY CASE rt2.c0 COLLATE NOCASE  WHEN (rt2.c2 IN (rt2.c2)) THEN (rt2.c1 IN ()) WHEN ((rt2.c0) NOT BETWEEN (rt2.c0) AND (rt2.c1)) THEN (((rt2.c2))!=((rt2.c0))) WHEN ('|O' IN ()) THEN ((((rt2.c2)OR(rt2.c1)))OR(rt2.c1)) ELSE rt2.c2 COLLATE BINARY END  NULLS LAST, x'', (((((rt2.c0, rt2.c1, NULL))=((rt2.c0, rt2.c0, rt2.c1)))) IS FALSE)  NULLS LAST);
SELECT * FROM rt2 WHERE (rt2.c1) ORDER BY CASE rt2.c0 COLLATE NOCASE  WHEN (rt2.c2 IN (rt2.c2)) THEN (rt2.c1 IN ()) WHEN ((rt2.c0) NOT BETWEEN (rt2.c0) AND (rt2.c1)) THEN (((rt2.c2))<>((rt2.c0))) WHEN ('|O' IN ()) THEN ((((rt2.c2)OR(rt2.c1)))OR(rt2.c1)) ELSE rt2.c2 COLLATE BINARY END  NULLS LAST, x'', (((((rt2.c0, rt2.c1, NULL))=((rt2.c0, rt2.c0, rt2.c1)))) IS FALSE)  NULLS LAST;
SELECT ALL * FROM rt2, rt1 LEFT OUTER JOIN rt0 ON ((((((((CAST(rt2.c0 AS TEXT))OR(((rt2.c0)<<(rt0.c0)))))AND((((rt0.c2, rt1.c3, rt0.c1))<((rt0.c3, rt0.c2, rt0.c3))))))OR(CASE rt1.c0  WHEN rt2.c2 THEN rt0.c0 WHEN rt1.c2 THEN rt0.c3 WHEN rt1.c1 THEN rt0.c2 ELSE rt0.c2 END)))OR(0.7981684535034629)) WHERE ((((((((((rt1.c2 IN ()))AND(UPPER(rt1.c0))))AND(((rt1.c4) IS TRUE))))AND(((rt0.c3) NOT NULL))))OR(rt2.c0 COLLATE RTRIM))) ORDER BY ((CASE rt2.c2  WHEN rt2.c0 THEN rt1.c4 END) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((rt1.c2 IN ()))AND(UPPER(rt1.c0))))AND(((rt1.c4) IS TRUE))))AND(((rt0.c3) NOT NULL))))OR(rt2.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt2, rt1 LEFT OUTER JOIN rt0 ON ((((((((CAST(rt2.c0 AS TEXT))OR(((rt2.c0)<<(rt0.c0)))))AND((((rt0.c2, rt1.c3, rt0.c1))<((rt0.c3, rt0.c2, rt0.c3))))))OR(CASE rt1.c0  WHEN rt2.c2 THEN rt0.c0 WHEN rt1.c2 THEN rt0.c3 WHEN rt1.c1 THEN rt0.c2 ELSE rt0.c2 END)))OR(0.7981684535034629)) ORDER BY ((CASE rt2.c2  WHEN rt2.c0 THEN rt1.c4 END) IS FALSE) DESC  NULLS FIRST);
SELECT ALL * FROM rt2, rt1 LEFT OUTER JOIN rt0 ON ((((((((CAST(rt2.c0 AS TEXT))OR(((rt2.c0)<<(rt0.c0)))))AND((((rt0.c2, rt1.c3, rt0.c1))<((rt0.c3, rt0.c2, rt0.c3))))))OR(CASE rt1.c0  WHEN rt2.c2 THEN rt0.c0 WHEN rt1.c2 THEN rt0.c3 WHEN rt1.c1 THEN rt0.c2 ELSE rt0.c2 END)))OR(0.7981684535034629)) WHERE ((((((((((rt1.c2 IN ()))AND(UPPER(rt1.c0))))AND(((rt1.c4) IS TRUE))))AND(((rt0.c3) NOT NULL))))OR(rt2.c0 COLLATE RTRIM))) ORDER BY ((CASE rt2.c2  WHEN rt2.c0 THEN rt1.c4 END) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((rt1.c2 IN ()))AND(UPPER(rt1.c0))))AND(((rt1.c4) IS TRUE))))AND(((rt0.c3) NOT NULL))))OR(rt2.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt2, rt1 LEFT OUTER JOIN rt0 ON ((((((((CAST(rt2.c0 AS TEXT))OR(((rt2.c0)<<(rt0.c0)))))AND((((rt0.c2, rt1.c3, rt0.c1))<((rt0.c3, rt0.c2, rt0.c3))))))OR(CASE rt1.c0  WHEN rt2.c2 THEN rt0.c0 WHEN rt1.c2 THEN rt0.c3 WHEN rt1.c1 THEN rt0.c2 ELSE rt0.c2 END)))OR(0.7981684535034629)) ORDER BY ((CASE rt2.c2  WHEN rt2.c0 THEN rt1.c4 END) IS FALSE) DESC  NULLS FIRST);
SELECT ALL * FROM rt2, rt1 LEFT OUTER JOIN rt0 ON ((((((((CAST(rt2.c0 AS TEXT))OR(((rt2.c0)<<(rt0.c0)))))AND((((rt0.c2, rt1.c3, rt0.c1))<((rt0.c3, rt0.c2, rt0.c3))))))OR(CASE rt1.c0  WHEN rt2.c2 THEN rt0.c0 WHEN rt1.c2 THEN rt0.c3 WHEN rt1.c1 THEN rt0.c2 ELSE rt0.c2 END)))OR(0.7981684535034629)) WHERE ((((((((((rt1.c2 IN ()))AND(UPPER(rt1.c0))))AND(((rt1.c4) IS TRUE))))AND(((rt0.c3) NOT NULL))))OR(rt2.c0 COLLATE RTRIM))) ORDER BY ((CASE rt2.c2  WHEN rt2.c0 THEN rt1.c4 END) IS FALSE) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1, rt2 WHERE (CASE WHEN TRIM(rt0.c3, rt1.c4) THEN CASE WHEN rt1.c4 THEN rt0.c1 ELSE x'c65c' END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN TRIM(rt0.c3, rt1.c4) THEN CASE WHEN rt1.c4 THEN rt0.c1 ELSE x'c65c' END END) IS TRUE)  as count FROM rt0, rt1, rt2);
SELECT ALL COUNT(*) FROM rt0, rt1, rt2 WHERE (CASE WHEN TRIM(rt0.c3, rt1.c4) THEN CASE WHEN rt1.c4 THEN rt0.c1 ELSE x'c65c' END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN TRIM(rt0.c3, rt1.c4) THEN CASE WHEN rt1.c4 THEN rt0.c1 ELSE x'c65c' END END) IS TRUE)  as count FROM rt0, rt1, rt2);
SELECT ALL COUNT(*) FROM rt0, rt1, rt2 WHERE (CASE WHEN TRIM(rt0.c3, rt1.c4) THEN CASE WHEN rt1.c4 THEN rt0.c1 ELSE x'c65c' END END);
SELECT ALL COUNT(*) FROM rt2, rt1 WHERE (((('6^+MKUUJ', rt2.c2, rt1.c1)) NOT BETWEEN ((0.34032977704011325, rt1.c3, rt2.c2 COLLATE NOCASE)) AND ((((rt2.c0)|(rt2.c1)), rt2.c1, ((rt2.c0)<(rt1.c2)))))) ORDER BY ((json_insert(rt2.c2, '1142481342', '4D')) ISNULL) DESC, (((((rt1.c1)IS(rt2.c1)), LAST_INSERT_ROWID(), rt1.c0, CASE WHEN rt2.c2 THEN rt1.c2 END, CASE WHEN rt2.c2 THEN '1275573725' WHEN rt1.c1 THEN rt2.c0 WHEN rt2.c2 THEN rt2.c0 ELSE rt1.c4 END))==((ABS(rt2.c1), ((rt2.c1) IS FALSE), rt1.c2, (+ (rt1.c0)), ((rt2.c2)%(rt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((('6^+MKUUJ', rt2.c2, rt1.c1)) NOT BETWEEN ((0.34032977704011325, rt1.c3, rt2.c2 COLLATE NOCASE)) AND ((((rt2.c0)|(rt2.c1)), rt2.c1, ((rt2.c0)<(rt1.c2)))))) IS TRUE)  as count FROM rt2, rt1 ORDER BY ((json_insert(rt2.c2, '1142481342', '4D')) ISNULL) DESC, (((((rt1.c1)IS(rt2.c1)), LAST_INSERT_ROWID(), rt1.c0, CASE WHEN rt2.c2 THEN rt1.c2 END, CASE WHEN rt2.c2 THEN '1275573725' WHEN rt1.c1 THEN rt2.c0 WHEN rt2.c2 THEN rt2.c0 ELSE rt1.c4 END))==((ABS(rt2.c1), ((rt2.c1) IS FALSE), rt1.c2, (+ (rt1.c0)), ((rt2.c2)%(rt1.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt2, rt1 WHERE (((('6^+MKUUJ', rt2.c2, rt1.c1)) NOT BETWEEN ((0.34032977704011325, rt1.c3, rt2.c2 COLLATE NOCASE)) AND ((((rt2.c0)|(rt2.c1)), rt2.c1, ((rt2.c0)<(rt1.c2)))))) ORDER BY ((json_insert(rt2.c2, '1142481342', '4D')) ISNULL) DESC, (((((rt1.c1)IS(rt2.c1)), LAST_INSERT_ROWID(), rt1.c0, CASE WHEN rt2.c2 THEN rt1.c2 END, CASE WHEN rt2.c2 THEN '1275573725' WHEN rt1.c1 THEN rt2.c0 WHEN rt2.c2 THEN rt2.c0 ELSE rt1.c4 END))==((ABS(rt2.c1), ((rt2.c1) IS FALSE), rt1.c2, (+ (rt1.c0)), ((rt2.c2)%(rt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((('6^+MKUUJ', rt2.c2, rt1.c1)) NOT BETWEEN ((0.34032977704011325, rt1.c3, rt2.c2 COLLATE NOCASE)) AND ((((rt2.c0)|(rt2.c1)), rt2.c1, ((rt2.c0)<(rt1.c2)))))) IS TRUE)  as count FROM rt2, rt1 ORDER BY ((json_insert(rt2.c2, '1142481342', '4D')) ISNULL) DESC, (((((rt1.c1)IS(rt2.c1)), LAST_INSERT_ROWID(), rt1.c0, CASE WHEN rt2.c2 THEN rt1.c2 END, CASE WHEN rt2.c2 THEN '1275573725' WHEN rt1.c1 THEN rt2.c0 WHEN rt2.c2 THEN rt2.c0 ELSE rt1.c4 END))==((ABS(rt2.c1), ((rt2.c1) IS FALSE), rt1.c2, (+ (rt1.c0)), ((rt2.c2)%(rt1.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt2, rt1 WHERE (((('6^+MKUUJ', rt2.c2, rt1.c1)) NOT BETWEEN ((0.34032977704011325, rt1.c3, rt2.c2 COLLATE NOCASE)) AND ((((rt2.c0)|(rt2.c1)), rt2.c1, ((rt2.c0)<(rt1.c2)))))) ORDER BY ((json_insert(rt2.c2, '1142481342', '4D')) ISNULL) DESC, (((((rt1.c1)IS(rt2.c1)), LAST_INSERT_ROWID(), rt1.c0, CASE WHEN rt2.c2 THEN rt1.c2 END, CASE WHEN rt2.c2 THEN '1275573725' WHEN rt1.c1 THEN rt2.c0 WHEN rt2.c2 THEN rt2.c0 ELSE rt1.c4 END))==((ABS(rt2.c1), ((rt2.c1) IS FALSE), rt1.c2, (+ (rt1.c0)), ((rt2.c2)%(rt1.c0)))))  NULLS LAST;
SELECT COUNT(*) FROM rt1 NATURAL JOIN rt2 WHERE ((((NULL)) BETWEEN ((rt2.c2)) AND ((((rt1.c3) NOT BETWEEN (rt1.c0) AND ('')))))) ORDER BY json_array_length(rt1.c0) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NULL)) BETWEEN ((rt2.c2)) AND ((((rt1.c3) NOT BETWEEN (rt1.c0) AND ('')))))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt2 ORDER BY json_array_length(rt1.c0) COLLATE RTRIM DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 NATURAL JOIN rt2 WHERE ((((NULL)) BETWEEN ((rt2.c2)) AND ((((rt1.c3) NOT BETWEEN (rt1.c0) AND ('')))))) ORDER BY json_array_length(rt1.c0) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NULL)) BETWEEN ((rt2.c2)) AND ((((rt1.c3) NOT BETWEEN (rt1.c0) AND ('')))))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt2 ORDER BY json_array_length(rt1.c0) COLLATE RTRIM DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 NATURAL JOIN rt2 WHERE ((((NULL)) BETWEEN ((rt2.c2)) AND ((((rt1.c3) NOT BETWEEN (rt1.c0) AND ('')))))) ORDER BY json_array_length(rt1.c0) COLLATE RTRIM DESC  NULLS LAST;
SELECT * FROM rt0, rt1, rt2 WHERE (NULL) ORDER BY ((((GLOB(rt0.c3, rt1.c3))AND(NULL)))AND(((rt1.c0)=('N>iZh<C>'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, rt1, rt2 ORDER BY ((((GLOB(rt0.c3, rt1.c3))AND(NULL)))AND(((rt1.c0)=('N>iZh<C>'))))  NULLS LAST);
SELECT * FROM rt0, rt1, rt2 WHERE (NULL) ORDER BY ((((GLOB(rt0.c3, rt1.c3))AND(NULL)))AND(((rt1.c0)=('N>iZh<C>'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, rt1, rt2 ORDER BY ((((GLOB(rt0.c3, rt1.c3))AND(NULL)))AND(((rt1.c0)=('N>iZh<C>'))))  NULLS LAST);
SELECT * FROM rt0, rt1, rt2 WHERE (NULL) ORDER BY ((((GLOB(rt0.c3, rt1.c3))AND(NULL)))AND(((rt1.c0)=('N>iZh<C>'))))  NULLS LAST;
SELECT ALL * FROM rt1, rt2 WHERE (NULLIF(((rt1.c0)<>(rt1.c0)), ((x'7281')==(rt1.c1)))) ORDER BY rt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ((NULLIF(((rt1.c0)!=(rt1.c0)), ((x'7281')==(rt1.c1)))) IS TRUE)  as count FROM rt1, rt2 ORDER BY rt1.c0 DESC);
SELECT ALL * FROM rt1, rt2 WHERE (NULLIF(((rt1.c0)<>(rt1.c0)), ((x'7281')==(rt1.c1)))) ORDER BY rt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ((NULLIF(((rt1.c0)!=(rt1.c0)), ((x'7281')==(rt1.c1)))) IS TRUE)  as count FROM rt1, rt2 ORDER BY rt1.c0 DESC);
SELECT ALL * FROM rt1, rt2 WHERE (NULLIF(((rt1.c0)<>(rt1.c0)), ((x'7281')==(rt1.c1)))) ORDER BY rt1.c0 DESC;
SELECT * FROM rt1 WHERE (0Xffffffffecf5e3a5);
SELECT SUM(count) FROM (SELECT ((0Xffffffffecf5e3a5) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (0Xffffffffecf5e3a5);
SELECT SUM(count) FROM (SELECT ((0Xffffffffecf5e3a5) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (0Xffffffffecf5e3a5);
SELECT * FROM rt0 WHERE ((((((rt0.c1) NOTNULL), rt0.c3, rt0.c2))=(((rt0.c0 IN (rt0.c0)), ((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c2)), ((((((((rt0.c1)AND(rt0.c2)))OR(2003754360)))OR(rt0.c1)))OR(rt0.c1)))))) ORDER BY (((rt0.c2)IS(rt0.c0)) IN ()) DESC, JULIANDAY(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)), json_array(rt0.c3, rt0.c2, rt0.c1, rt0.c1), CASE NULL  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1) NOTNULL), rt0.c3, rt0.c2))==(((rt0.c0 IN (rt0.c0)), ((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c2)), ((((((((rt0.c1)AND(rt0.c2)))OR(2003754360)))OR(rt0.c1)))OR(rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)IS(rt0.c0)) IN ()) DESC, JULIANDAY(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)), json_array(rt0.c3, rt0.c2, rt0.c1, rt0.c1), CASE NULL  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END) DESC);
SELECT * FROM rt0 WHERE ((((((rt0.c1) NOTNULL), rt0.c3, rt0.c2))=(((rt0.c0 IN (rt0.c0)), ((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c2)), ((((((((rt0.c1)AND(rt0.c2)))OR(2003754360)))OR(rt0.c1)))OR(rt0.c1)))))) ORDER BY (((rt0.c2)IS(rt0.c0)) IN ()) DESC, JULIANDAY(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)), json_array(rt0.c3, rt0.c2, rt0.c1, rt0.c1), CASE NULL  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1) NOTNULL), rt0.c3, rt0.c2))==(((rt0.c0 IN (rt0.c0)), ((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c2)), ((((((((rt0.c1)AND(rt0.c2)))OR(2003754360)))OR(rt0.c1)))OR(rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)IS(rt0.c0)) IN ()) DESC, JULIANDAY(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)), json_array(rt0.c3, rt0.c2, rt0.c1, rt0.c1), CASE NULL  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END) DESC);
SELECT * FROM rt0 WHERE ((((((rt0.c1) NOTNULL), rt0.c3, rt0.c2))=(((rt0.c0 IN (rt0.c0)), ((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c2)), ((((((((rt0.c1)AND(rt0.c2)))OR(2003754360)))OR(rt0.c1)))OR(rt0.c1)))))) ORDER BY (((rt0.c2)IS(rt0.c0)) IN ()) DESC, JULIANDAY(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)), json_array(rt0.c3, rt0.c2, rt0.c1, rt0.c1), CASE NULL  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END) DESC;
SELECT ALL COUNT(*) FROM rt0, rt2 WHERE ((- (((rt0.c2)OR(rt2.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c2)OR(rt2.c0))))) IS TRUE)  as count FROM rt0, rt2);
SELECT ALL COUNT(*) FROM rt0, rt2 WHERE ((- (((rt0.c2)OR(rt2.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c2)OR(rt2.c0))))) IS TRUE)  as count FROM rt0, rt2);
SELECT ALL COUNT(*) FROM rt0, rt2 WHERE ((- (((rt0.c2)OR(rt2.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (IFNULL((rt0.c2 IN (x'')), 'T'));
SELECT SUM(count) FROM (SELECT ((IFNULL((rt0.c2 IN (x'')), 'T')) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (IFNULL((rt0.c2 IN (x'')), 'T'));
SELECT SUM(count) FROM (SELECT ((IFNULL((rt0.c2 IN (x'')), 'T')) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (IFNULL((rt0.c2 IN (x'')), 'T'));
SELECT * FROM rt2, rt0 WHERE (((((((((rt0.c0 COLLATE NOCASE)AND(((rt0.c2) IS TRUE))))OR((((rt2.c1)) BETWEEN ((rt2.c1)) AND ((rt0.c0))))))OR(x'3fc8')))OR(rt0.c2 COLLATE NOCASE))) ORDER BY CAST(((rt2.c2) NOT NULL) AS BLOB) ASC, ((CAST(0.9487338739291651 AS TEXT)) NOT BETWEEN (((rt2.c2) IS FALSE)) AND (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c0 COLLATE NOCASE)AND(((rt0.c2) IS TRUE))))OR((((rt2.c1)) BETWEEN ((rt2.c1)) AND ((rt0.c0))))))OR(x'3fc8')))OR(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt2, rt0 ORDER BY CAST(((rt2.c2) NOT NULL) AS BLOB) ASC, ((CAST(0.9487338739291651 AS TEXT)) NOT BETWEEN (((rt2.c2) IS FALSE)) AND (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))) DESC  NULLS FIRST);
SELECT * FROM rt2, rt0 WHERE (((((((((rt0.c0 COLLATE NOCASE)AND(((rt0.c2) IS TRUE))))OR((((rt2.c1)) BETWEEN ((rt2.c1)) AND ((rt0.c0))))))OR(x'3fc8')))OR(rt0.c2 COLLATE NOCASE))) ORDER BY CAST(((rt2.c2) NOT NULL) AS BLOB) ASC, ((CAST(0.9487338739291651 AS TEXT)) NOT BETWEEN (((rt2.c2) IS FALSE)) AND (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c0 COLLATE NOCASE)AND(((rt0.c2) IS TRUE))))OR((((rt2.c1)) BETWEEN ((rt2.c1)) AND ((rt0.c0))))))OR(x'3fc8')))OR(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt2, rt0 ORDER BY CAST(((rt2.c2) NOT NULL) AS BLOB) ASC, ((CAST(0.9487338739291651 AS TEXT)) NOT BETWEEN (((rt2.c2) IS FALSE)) AND (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))) DESC  NULLS FIRST);
SELECT * FROM rt2, rt0 WHERE (((((((((rt0.c0 COLLATE NOCASE)AND(((rt0.c2) IS TRUE))))OR((((rt2.c1)) BETWEEN ((rt2.c1)) AND ((rt0.c0))))))OR(x'3fc8')))OR(rt0.c2 COLLATE NOCASE))) ORDER BY CAST(((rt2.c2) NOT NULL) AS BLOB) ASC, ((CAST(0.9487338739291651 AS TEXT)) NOT BETWEEN (((rt2.c2) IS FALSE)) AND (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt2, rt1 WHERE (((rt1.c0)AND(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt2.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0)AND(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt2.c2))))) IS TRUE)  as count FROM rt2, rt1);
SELECT ALL COUNT(*) FROM rt2, rt1 WHERE (((rt1.c0)AND(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt2.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0)AND(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt2.c2))))) IS TRUE)  as count FROM rt2, rt1);
SELECT ALL COUNT(*) FROM rt2, rt1 WHERE (((rt1.c0)AND(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt2.c2)))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN rt2 ON rt0.c3 WHERE ((((NOT (rt2.c0)))IS(HEX(rt0.c1)))) ORDER BY (((('', '1152315444', rt2.c2)) BETWEEN ((rt2.c0, rt0.c0, rt0.c0)) AND ((rt0.c2, rt2.c1, rt0.c2))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt2.c0)))IS(HEX(rt0.c1)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt2 ON rt0.c3 ORDER BY (((('', '1152315444', rt2.c2)) BETWEEN ((rt2.c0, rt0.c0, rt0.c0)) AND ((rt0.c2, rt2.c1, rt0.c2))) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN rt2 ON rt0.c3 WHERE ((((NOT (rt2.c0)))IS(HEX(rt0.c1)))) ORDER BY (((('', '1152315444', rt2.c2)) BETWEEN ((rt2.c0, rt0.c0, rt0.c0)) AND ((rt0.c2, rt2.c1, rt0.c2))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt2.c0)))IS(HEX(rt0.c1)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt2 ON rt0.c3 ORDER BY (((('', '1152315444', rt2.c2)) BETWEEN ((rt2.c0, rt0.c0, rt0.c0)) AND ((rt0.c2, rt2.c1, rt0.c2))) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN rt2 ON rt0.c3 WHERE ((((NOT (rt2.c0)))IS(HEX(rt0.c1)))) ORDER BY (((('', '1152315444', rt2.c2)) BETWEEN ((rt2.c0, rt0.c0, rt0.c0)) AND ((rt0.c2, rt2.c1, rt0.c2))) IN ())  NULLS FIRST;
SELECT ALL * FROM rt1, rt2 WHERE ((((((rt2.c0)) NOT BETWEEN ((rt2.c2)) AND ((rt2.c1))))/(x''))) ORDER BY ((((((((rt2.c1)OR(rt2.c2)))OR(rt2.c2)))OR(CAST(rt1.c0 AS TEXT))))OR(((rt1.c2)IS(rt2.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt2.c0)) NOT BETWEEN ((rt2.c2)) AND ((rt2.c1))))/(x''))) IS TRUE)  as count FROM rt1, rt2 ORDER BY ((((((((rt2.c1)OR(rt2.c2)))OR(rt2.c2)))OR(CAST(rt1.c0 AS TEXT))))OR(((rt1.c2)IS(rt2.c0)))) DESC);
SELECT ALL * FROM rt1, rt2 WHERE ((((((rt2.c0)) NOT BETWEEN ((rt2.c2)) AND ((rt2.c1))))/(x''))) ORDER BY ((((((((rt2.c1)OR(rt2.c2)))OR(rt2.c2)))OR(CAST(rt1.c0 AS TEXT))))OR(((rt1.c2)IS(rt2.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt2.c0)) NOT BETWEEN ((rt2.c2)) AND ((rt2.c1))))/(x''))) IS TRUE)  as count FROM rt1, rt2 ORDER BY ((((((((rt2.c1)OR(rt2.c2)))OR(rt2.c2)))OR(CAST(rt1.c0 AS TEXT))))OR(((rt1.c2)IS(rt2.c0)))) DESC);
SELECT ALL * FROM rt1, rt2 WHERE ((((((rt2.c0)) NOT BETWEEN ((rt2.c2)) AND ((rt2.c1))))/(x''))) ORDER BY ((((((((rt2.c1)OR(rt2.c2)))OR(rt2.c2)))OR(CAST(rt1.c0 AS TEXT))))OR(((rt1.c2)IS(rt2.c0)))) DESC;
SELECT * FROM rt1 WHERE (((NULLIF(DISTINCT rt1.c3, rt1.c0))+(((rt1.c1)<(NULL)))));
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT rt1.c3, rt1.c0))+(((rt1.c1)<(NULL))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((NULLIF(DISTINCT rt1.c3, rt1.c0))+(((rt1.c1)<(NULL)))));
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT rt1.c3, rt1.c0))+(((rt1.c1)<(NULL))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((NULLIF(DISTINCT rt1.c3, rt1.c0))+(((rt1.c1)<(NULL)))));
SELECT ALL COUNT(*) FROM rt2, rt1, rt0 WHERE (0.48587126658589375);
SELECT SUM(count) FROM (SELECT ((0.48587126658589375) IS TRUE)  as count FROM rt2, rt1, rt0);
SELECT ALL COUNT(*) FROM rt2, rt1, rt0 WHERE (0.48587126658589375);
SELECT SUM(count) FROM (SELECT ((0.48587126658589375) IS TRUE)  as count FROM rt2, rt1, rt0);
SELECT ALL COUNT(*) FROM rt2, rt1, rt0 WHERE (0.48587126658589375);
SELECT ALL * FROM rt1 WHERE ('1748430499');
SELECT SUM(count) FROM (SELECT (('1748430499') IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ('1748430499');
SELECT SUM(count) FROM (SELECT (('1748430499') IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ('1748430499');
SELECT COUNT(*) FROM rt1, rt0 WHERE ((NOT (CAST(rt1.c4 AS NUMERIC)))) ORDER BY (+ (CAST(rt0.c2 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(rt1.c4 AS NUMERIC)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (+ (CAST(rt0.c2 AS BLOB)))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((NOT (CAST(rt1.c4 AS NUMERIC)))) ORDER BY (+ (CAST(rt0.c2 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(rt1.c4 AS NUMERIC)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (+ (CAST(rt0.c2 AS BLOB)))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((NOT (CAST(rt1.c4 AS NUMERIC)))) ORDER BY (+ (CAST(rt0.c2 AS BLOB)))  NULLS FIRST;
SELECT * FROM rt0, rt1 WHERE ((((ABS(rt0.c3)))<((((((rt1.c2)OR(rt1.c1)))AND(rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((ABS(rt0.c3)))<((((((rt1.c2)OR(rt1.c1)))AND(rt0.c1)))))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((((ABS(rt0.c3)))<((((((rt1.c2)OR(rt1.c1)))AND(rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((ABS(rt0.c3)))<((((((rt1.c2)OR(rt1.c1)))AND(rt0.c1)))))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((((ABS(rt0.c3)))<((((((rt1.c2)OR(rt1.c1)))AND(rt0.c1))))));
SELECT ALL COUNT(*) FROM rt2, rt1, rt0 WHERE (((CAST(rt1.c3 AS INTEGER))IS(((rt2.c1)<('좲A')))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c3 AS INTEGER))IS(((rt2.c1)<('좲A'))))) IS TRUE)  as count FROM rt2, rt1, rt0);
SELECT ALL COUNT(*) FROM rt2, rt1, rt0 WHERE (((CAST(rt1.c3 AS INTEGER))IS(((rt2.c1)<('좲A')))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c3 AS INTEGER))IS(((rt2.c1)<('좲A'))))) IS TRUE)  as count FROM rt2, rt1, rt0);
SELECT ALL COUNT(*) FROM rt2, rt1, rt0 WHERE (((CAST(rt1.c3 AS INTEGER))IS(((rt2.c1)<('좲A')))));
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c3, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c3, rt0.c0, rt0.c3)))) BETWEEN (rt0.c2 COLLATE NOCASE) AND (0.31076266442013467)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c3, rt0.c0, rt0.c3)))) BETWEEN (rt0.c2 COLLATE NOCASE) AND (0.31076266442013467))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c3, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c3, rt0.c0, rt0.c3)))) BETWEEN (rt0.c2 COLLATE NOCASE) AND (0.31076266442013467)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c3, rt0.c0, rt0.c3)))) BETWEEN (rt0.c2 COLLATE NOCASE) AND (0.31076266442013467))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c3, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c3, rt0.c0, rt0.c3)))) BETWEEN (rt0.c2 COLLATE NOCASE) AND (0.31076266442013467)));
SELECT * FROM rt1 WHERE (RTRIM(rt1.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((RTRIM(rt1.c2 COLLATE NOCASE)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (RTRIM(rt1.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((RTRIM(rt1.c2 COLLATE NOCASE)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (RTRIM(rt1.c2 COLLATE NOCASE));
SELECT ALL * FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (x'');
SELECT ALL * FROM rt0, rt2, rt1 WHERE (((CASE WHEN rt0.c1 THEN rt2.c1 END)OR(((rt0.c2)%(rt2.c2))))) ORDER BY SQLITE_COMPILEOPTION_USED(CASE 'RrE#'  WHEN rt0.c3 THEN rt0.c2 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c1 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt2.c1 END)OR(((rt0.c2)%(rt2.c2))))) IS TRUE)  as count FROM rt0, rt2, rt1 ORDER BY SQLITE_COMPILEOPTION_USED(CASE 'RrE#'  WHEN rt0.c3 THEN rt0.c2 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c1 END)  NULLS FIRST);
SELECT ALL * FROM rt0, rt2, rt1 WHERE (((CASE WHEN rt0.c1 THEN rt2.c1 END)OR(((rt0.c2)%(rt2.c2))))) ORDER BY SQLITE_COMPILEOPTION_USED(CASE 'RrE#'  WHEN rt0.c3 THEN rt0.c2 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c1 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt2.c1 END)OR(((rt0.c2)%(rt2.c2))))) IS TRUE)  as count FROM rt0, rt2, rt1 ORDER BY SQLITE_COMPILEOPTION_USED(CASE 'RrE#'  WHEN rt0.c3 THEN rt0.c2 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c1 END)  NULLS FIRST);
SELECT ALL * FROM rt0, rt2, rt1 WHERE (((CASE WHEN rt0.c1 THEN rt2.c1 END)OR(((rt0.c2)%(rt2.c2))))) ORDER BY SQLITE_COMPILEOPTION_USED(CASE 'RrE#'  WHEN rt0.c3 THEN rt0.c2 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c1 END)  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((- (((rt0.c0)!=(rt0.c3))))) ORDER BY (rt0.c1 COLLATE NOCASE IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c0)!=(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c1 COLLATE NOCASE IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((- (((rt0.c0)!=(rt0.c3))))) ORDER BY (rt0.c1 COLLATE NOCASE IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c0)!=(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c1 COLLATE NOCASE IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((- (((rt0.c0)!=(rt0.c3))))) ORDER BY (rt0.c1 COLLATE NOCASE IN ()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, rt2 WHERE (((((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt2.c2)))))>=(((NOT (rt0.c2)))))) ORDER BY ((((((((((((CAST(rt0.c3 AS REAL))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))OR(((rt0.c0)>=(rt0.c3)))))OR((+ (rt0.c3)))))AND(CAST(rt2.c2 AS INTEGER))))AND((rt0.c3 IN ()))))OR(((rt2.c2)IS NOT(''))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt2.c2)))))>=(((NOT (rt0.c2)))))) IS TRUE)  as count FROM rt0, rt2 ORDER BY ((((((((((((CAST(rt0.c3 AS REAL))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))OR(((rt0.c0)>=(rt0.c3)))))OR((+ (rt0.c3)))))AND(CAST(rt2.c2 AS INTEGER))))AND((rt0.c3 IN ()))))OR(((rt2.c2)IS NOT(''))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt2 WHERE (((((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt2.c2)))))>=(((NOT (rt0.c2)))))) ORDER BY ((((((((((((CAST(rt0.c3 AS REAL))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))OR(((rt0.c0)>=(rt0.c3)))))OR((+ (rt0.c3)))))AND(CAST(rt2.c2 AS INTEGER))))AND((rt0.c3 IN ()))))OR(((rt2.c2)IS NOT(''))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt2.c2)))))>=(((NOT (rt0.c2)))))) IS TRUE)  as count FROM rt0, rt2 ORDER BY ((((((((((((CAST(rt0.c3 AS REAL))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))OR(((rt0.c0)>=(rt0.c3)))))OR((+ (rt0.c3)))))AND(CAST(rt2.c2 AS INTEGER))))AND((rt0.c3 IN ()))))OR(((rt2.c2)IS NOT(''))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt2 WHERE (((((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt2.c2)))))>=(((NOT (rt0.c2)))))) ORDER BY ((((((((((((CAST(rt0.c3 AS REAL))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))OR(((rt0.c0)>=(rt0.c3)))))OR((+ (rt0.c3)))))AND(CAST(rt2.c2 AS INTEGER))))AND((rt0.c3 IN ()))))OR(((rt2.c2)IS NOT(''))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt2, rt1 WHERE ((- (rt1.c4 COLLATE BINARY))) ORDER BY ((rt1.c1 COLLATE RTRIM)IS((~ ('n-.'))));
SELECT SUM(count) FROM (SELECT ALL (((- (rt1.c4 COLLATE BINARY))) IS TRUE)  as count FROM rt2, rt1 ORDER BY ((rt1.c1 COLLATE RTRIM)IS((~ ('n-.')))));
SELECT ALL COUNT(*) FROM rt2, rt1 WHERE ((- (rt1.c4 COLLATE BINARY))) ORDER BY ((rt1.c1 COLLATE RTRIM)IS((~ ('n-.'))));
SELECT SUM(count) FROM (SELECT ALL (((- (rt1.c4 COLLATE BINARY))) IS TRUE)  as count FROM rt2, rt1 ORDER BY ((rt1.c1 COLLATE RTRIM)IS((~ ('n-.')))));
SELECT ALL COUNT(*) FROM rt2, rt1 WHERE ((- (rt1.c4 COLLATE BINARY))) ORDER BY ((rt1.c1 COLLATE RTRIM)IS((~ ('n-.'))));
SELECT ALL * FROM rt2, rt1, rt0 WHERE (((21243757 COLLATE RTRIM) IS TRUE)) ORDER BY (((- (rt1.c1)))/((rt1.c4 IN (rt1.c0)))) DESC  NULLS FIRST, ((rt0.c0 COLLATE BINARY)*((rt2.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((21243757 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM rt2, rt1, rt0 ORDER BY (((- (rt1.c1)))/((rt1.c4 IN (rt1.c0)))) DESC  NULLS FIRST, ((rt0.c0 COLLATE BINARY)*((rt2.c0 IN ()))) ASC  NULLS LAST);
SELECT ALL * FROM rt2, rt1, rt0 WHERE (((21243757 COLLATE RTRIM) IS TRUE)) ORDER BY (((- (rt1.c1)))/((rt1.c4 IN (rt1.c0)))) DESC  NULLS FIRST, ((rt0.c0 COLLATE BINARY)*((rt2.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((21243757 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM rt2, rt1, rt0 ORDER BY (((- (rt1.c1)))/((rt1.c4 IN (rt1.c0)))) DESC  NULLS FIRST, ((rt0.c0 COLLATE BINARY)*((rt2.c0 IN ()))) ASC  NULLS LAST);
SELECT ALL * FROM rt2, rt1, rt0 WHERE (((21243757 COLLATE RTRIM) IS TRUE)) ORDER BY (((- (rt1.c1)))/((rt1.c4 IN (rt1.c0)))) DESC  NULLS FIRST, ((rt0.c0 COLLATE BINARY)*((rt2.c0 IN ()))) ASC  NULLS LAST;
SELECT * FROM rt0, rt1 WHERE (CASE WHEN rt1.c1 THEN rt1.c3 WHEN rt0.c0 THEN rt1.c3 WHEN rt1.c2 THEN rt0.c2 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c1 THEN 0.48167219214116486 ELSE rt0.c1 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c1 THEN rt1.c3 WHEN rt0.c0 THEN rt1.c3 WHEN rt1.c2 THEN rt0.c2 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c1 THEN 0.48167219214116486 ELSE rt0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (CASE WHEN rt1.c1 THEN rt1.c3 WHEN rt0.c0 THEN rt1.c3 WHEN rt1.c2 THEN rt0.c2 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c1 THEN 0.48167219214116486 ELSE rt0.c1 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c1 THEN rt1.c3 WHEN rt0.c0 THEN rt1.c3 WHEN rt1.c2 THEN rt0.c2 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c1 THEN 0.48167219214116486 ELSE rt0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (CASE WHEN rt1.c1 THEN rt1.c3 WHEN rt0.c0 THEN rt1.c3 WHEN rt1.c2 THEN rt0.c2 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c1 THEN 0.48167219214116486 ELSE rt0.c1 END COLLATE RTRIM);
SELECT COUNT(*) FROM rt1 WHERE ((- ((rt1.c4 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((rt1.c4 IN ())))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((- ((rt1.c4 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((rt1.c4 IN ())))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((- ((rt1.c4 IN ()))));
SELECT ALL COUNT(*) FROM rt1, rt2, rt0 WHERE ((((HEX(DISTINCT rt1.c4)))>((CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt1.c0 END))));
SELECT SUM(count) FROM (SELECT (((((HEX(DISTINCT rt1.c4)))>((CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt1.c0 END)))) IS TRUE)  as count FROM rt1, rt2, rt0);
SELECT ALL COUNT(*) FROM rt1, rt2, rt0 WHERE ((((HEX(DISTINCT rt1.c4)))>((CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt1.c0 END))));
SELECT SUM(count) FROM (SELECT (((((HEX(DISTINCT rt1.c4)))>((CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt1.c0 END)))) IS TRUE)  as count FROM rt1, rt2, rt0);
SELECT ALL COUNT(*) FROM rt1, rt2, rt0 WHERE ((((HEX(DISTINCT rt1.c4)))>((CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt1.c0 END))));
SELECT * FROM rt2 WHERE ((+ (rt2.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((+ (rt2.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt2);
SELECT * FROM rt2 WHERE ((+ (rt2.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((+ (rt2.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt2);
SELECT * FROM rt2 WHERE ((+ (rt2.c2)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt2 INNER JOIN rt0 ON json_array_length((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1))), (~ (rt0.c1))) INNER JOIN rt1 ON ((rt1.c4)||(rt1.c4)) COLLATE BINARY WHERE ((((rt0.c3) NOTNULL) IN ())) ORDER BY (~ (((rt0.c3)-('824209599')))) ASC, json_remove(UNLIKELY(DISTINCT rt2.c2), x'fb07', (((rt2.c2))<>((rt1.c0))), (rt1.c4 IN (rt0.c0, rt2.c2))), (((rt1.c3) ISNULL) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3) NOTNULL) IN ())) IS TRUE)  as count FROM rt2 INNER JOIN rt0 ON json_array_length((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1))), (~ (rt0.c1))) INNER JOIN rt1 ON ((rt1.c4)||(rt1.c4)) COLLATE BINARY ORDER BY (~ (((rt0.c3)-('824209599')))) ASC, json_remove(UNLIKELY(DISTINCT rt2.c2), x'fb07', (((rt2.c2))!=((rt1.c0))), (rt1.c4 IN (rt0.c0, rt2.c2))), (((rt1.c3) ISNULL) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt2 INNER JOIN rt0 ON json_array_length((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1))), (~ (rt0.c1))) INNER JOIN rt1 ON ((rt1.c4)||(rt1.c4)) COLLATE BINARY WHERE ((((rt0.c3) NOTNULL) IN ())) ORDER BY (~ (((rt0.c3)-('824209599')))) ASC, json_remove(UNLIKELY(DISTINCT rt2.c2), x'fb07', (((rt2.c2))<>((rt1.c0))), (rt1.c4 IN (rt0.c0, rt2.c2))), (((rt1.c3) ISNULL) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3) NOTNULL) IN ())) IS TRUE)  as count FROM rt2 INNER JOIN rt0 ON json_array_length((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1))), (~ (rt0.c1))) INNER JOIN rt1 ON ((rt1.c4)||(rt1.c4)) COLLATE BINARY ORDER BY (~ (((rt0.c3)-('824209599')))) ASC, json_remove(UNLIKELY(DISTINCT rt2.c2), x'fb07', (((rt2.c2))!=((rt1.c0))), (rt1.c4 IN (rt0.c0, rt2.c2))), (((rt1.c3) ISNULL) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt2 INNER JOIN rt0 ON json_array_length((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1))), (~ (rt0.c1))) INNER JOIN rt1 ON ((rt1.c4)||(rt1.c4)) COLLATE BINARY WHERE ((((rt0.c3) NOTNULL) IN ())) ORDER BY (~ (((rt0.c3)-('824209599')))) ASC, json_remove(UNLIKELY(DISTINCT rt2.c2), x'fb07', (((rt2.c2))<>((rt1.c0))), (rt1.c4 IN (rt0.c0, rt2.c2))), (((rt1.c3) ISNULL) IN ())  NULLS FIRST;
SELECT * FROM rt2, rt0, rt1 WHERE (((((rt1.c3) BETWEEN (rt0.c0) AND (rt0.c2)))>(((rt1.c3) BETWEEN (rt2.c1) AND (NULL))))) ORDER BY (((- (rt1.c2))) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) BETWEEN (rt0.c0) AND (rt0.c2)))>(((rt1.c3) BETWEEN (rt2.c1) AND (NULL))))) IS TRUE)  as count FROM rt2, rt0, rt1 ORDER BY (((- (rt1.c2))) NOTNULL) ASC  NULLS FIRST);
SELECT * FROM rt2, rt0, rt1 WHERE (((((rt1.c3) BETWEEN (rt0.c0) AND (rt0.c2)))>(((rt1.c3) BETWEEN (rt2.c1) AND (NULL))))) ORDER BY (((- (rt1.c2))) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) BETWEEN (rt0.c0) AND (rt0.c2)))>(((rt1.c3) BETWEEN (rt2.c1) AND (NULL))))) IS TRUE)  as count FROM rt2, rt0, rt1 ORDER BY (((- (rt1.c2))) NOTNULL) ASC  NULLS FIRST);
SELECT * FROM rt2, rt0, rt1 WHERE (((((rt1.c3) BETWEEN (rt0.c0) AND (rt0.c2)))>(((rt1.c3) BETWEEN (rt2.c1) AND (NULL))))) ORDER BY (((- (rt1.c2))) NOTNULL) ASC  NULLS FIRST;
SELECT ALL * FROM rt2 WHERE (((((rt2.c0) NOT BETWEEN (rt2.c2) AND (rt2.c2))) BETWEEN ((rt2.c2 IN ())) AND (CAST(rt2.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((rt2.c0) NOT BETWEEN (rt2.c2) AND (rt2.c2))) BETWEEN ((rt2.c2 IN ())) AND (CAST(rt2.c0 AS TEXT)))) IS TRUE)  as count FROM rt2);
SELECT ALL * FROM rt2 WHERE (((((rt2.c0) NOT BETWEEN (rt2.c2) AND (rt2.c2))) BETWEEN ((rt2.c2 IN ())) AND (CAST(rt2.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((rt2.c0) NOT BETWEEN (rt2.c2) AND (rt2.c2))) BETWEEN ((rt2.c2 IN ())) AND (CAST(rt2.c0 AS TEXT)))) IS TRUE)  as count FROM rt2);
SELECT ALL * FROM rt2 WHERE (((((rt2.c0) NOT BETWEEN (rt2.c2) AND (rt2.c2))) BETWEEN ((rt2.c2 IN ())) AND (CAST(rt2.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((json_valid(rt1.c4))=(((((((((rt1.c0)AND(rt1.c3)))OR(rt1.c2)))OR(rt1.c0)))OR(0.7901840327034496))))) ORDER BY ((((rt1.c0)IS NOT(rt1.c1))) BETWEEN (((rt1.c4) BETWEEN (rt1.c1) AND (rt1.c3))) AND ((~ (rt1.c0))))  NULLS LAST, DATETIME(((rt1.c3)||(rt1.c2)), (- (rt1.c3)), ((rt1.c0)>>(rt1.c2)), CAST(rt1.c4 AS INTEGER), ((rt1.c3)/(rt1.c4)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((json_valid(rt1.c4))=(((((((((rt1.c0)AND(rt1.c3)))OR(rt1.c2)))OR(rt1.c0)))OR(0.7901840327034496))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0)IS NOT(rt1.c1))) BETWEEN (((rt1.c4) BETWEEN (rt1.c1) AND (rt1.c3))) AND ((~ (rt1.c0))))  NULLS LAST, DATETIME(((rt1.c3)||(rt1.c2)), (- (rt1.c3)), ((rt1.c0)>>(rt1.c2)), CAST(rt1.c4 AS INTEGER), ((rt1.c3)/(rt1.c4)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((json_valid(rt1.c4))=(((((((((rt1.c0)AND(rt1.c3)))OR(rt1.c2)))OR(rt1.c0)))OR(0.7901840327034496))))) ORDER BY ((((rt1.c0)IS NOT(rt1.c1))) BETWEEN (((rt1.c4) BETWEEN (rt1.c1) AND (rt1.c3))) AND ((~ (rt1.c0))))  NULLS LAST, DATETIME(((rt1.c3)||(rt1.c2)), (- (rt1.c3)), ((rt1.c0)>>(rt1.c2)), CAST(rt1.c4 AS INTEGER), ((rt1.c3)/(rt1.c4)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((json_valid(rt1.c4))=(((((((((rt1.c0)AND(rt1.c3)))OR(rt1.c2)))OR(rt1.c0)))OR(0.7901840327034496))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0)IS NOT(rt1.c1))) BETWEEN (((rt1.c4) BETWEEN (rt1.c1) AND (rt1.c3))) AND ((~ (rt1.c0))))  NULLS LAST, DATETIME(((rt1.c3)||(rt1.c2)), (- (rt1.c3)), ((rt1.c0)>>(rt1.c2)), CAST(rt1.c4 AS INTEGER), ((rt1.c3)/(rt1.c4)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((json_valid(rt1.c4))=(((((((((rt1.c0)AND(rt1.c3)))OR(rt1.c2)))OR(rt1.c0)))OR(0.7901840327034496))))) ORDER BY ((((rt1.c0)IS NOT(rt1.c1))) BETWEEN (((rt1.c4) BETWEEN (rt1.c1) AND (rt1.c3))) AND ((~ (rt1.c0))))  NULLS LAST, DATETIME(((rt1.c3)||(rt1.c2)), (- (rt1.c3)), ((rt1.c0)>>(rt1.c2)), CAST(rt1.c4 AS INTEGER), ((rt1.c3)/(rt1.c4)))  NULLS FIRST;
SELECT COUNT(*) FROM rt2, rt1, rt0 WHERE (((rt0.c1)>(rt0.c3)) COLLATE BINARY) ORDER BY HEX(((((NULL)AND(rt2.c1)))OR(rt1.c4))) DESC  NULLS FIRST, LIKELIHOOD(DISTINCT ((rt0.c1)>=(rt1.c0)), 0.9625219567983847) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)>(rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM rt2, rt1, rt0 ORDER BY HEX(((((NULL)AND(rt2.c1)))OR(rt1.c4))) DESC  NULLS FIRST, LIKELIHOOD(DISTINCT ((rt0.c1)>=(rt1.c0)), 0.9625219567983847) ASC);
SELECT COUNT(*) FROM rt2, rt1, rt0 WHERE (((rt0.c1)>(rt0.c3)) COLLATE BINARY) ORDER BY HEX(((((NULL)AND(rt2.c1)))OR(rt1.c4))) DESC  NULLS FIRST, LIKELIHOOD(DISTINCT ((rt0.c1)>=(rt1.c0)), 0.9625219567983847) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)>(rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM rt2, rt1, rt0 ORDER BY HEX(((((NULL)AND(rt2.c1)))OR(rt1.c4))) DESC  NULLS FIRST, LIKELIHOOD(DISTINCT ((rt0.c1)>=(rt1.c0)), 0.9625219567983847) ASC);
SELECT COUNT(*) FROM rt2, rt1, rt0 WHERE (((rt0.c1)>(rt0.c3)) COLLATE BINARY) ORDER BY HEX(((((NULL)AND(rt2.c1)))OR(rt1.c4))) DESC  NULLS FIRST, LIKELIHOOD(DISTINCT ((rt0.c1)>=(rt1.c0)), 0.9625219567983847) ASC;
SELECT ALL * FROM rt2, rt1 INNER JOIN rt0 ON ((((rt2.c0)AND(rt2.c0)))AND('8Tc]&')) COLLATE BINARY COLLATE BINARY WHERE (ABS(rt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((ABS(rt0.c1 COLLATE BINARY)) IS TRUE)  as count FROM rt2, rt1 INNER JOIN rt0 ON ((((rt2.c0)AND(rt2.c0)))AND('8Tc]&')) COLLATE BINARY COLLATE BINARY);
SELECT ALL * FROM rt2, rt1 INNER JOIN rt0 ON ((((rt2.c0)AND(rt2.c0)))AND('8Tc]&')) COLLATE BINARY COLLATE BINARY WHERE (ABS(rt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((ABS(rt0.c1 COLLATE BINARY)) IS TRUE)  as count FROM rt2, rt1 INNER JOIN rt0 ON ((((rt2.c0)AND(rt2.c0)))AND('8Tc]&')) COLLATE BINARY COLLATE BINARY);
SELECT ALL * FROM rt2, rt1 INNER JOIN rt0 ON ((((rt2.c0)AND(rt2.c0)))AND('8Tc]&')) COLLATE BINARY COLLATE BINARY WHERE (ABS(rt0.c1 COLLATE BINARY));
SELECT ALL COUNT(*) FROM rt0 WHERE (ABS(1.705413232E9)) ORDER BY ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))/(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((ABS(1.705413232E9)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))/(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (ABS(1.705413232E9)) ORDER BY ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))/(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((ABS(1.705413232E9)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))/(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (ABS(1.705413232E9)) ORDER BY ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))/(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))));
SELECT COUNT(*) FROM rt0, rt1, rt2 WHERE (((((rt1.c3 COLLATE RTRIM)AND(((rt0.c2) NOT BETWEEN (rt1.c4) AND (rt2.c2)))))AND(rt2.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3 COLLATE RTRIM)AND(((rt0.c2) NOT BETWEEN (rt1.c4) AND (rt2.c2)))))AND(rt2.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, rt1, rt2);
SELECT COUNT(*) FROM rt0, rt1, rt2 WHERE (((((rt1.c3 COLLATE RTRIM)AND(((rt0.c2) NOT BETWEEN (rt1.c4) AND (rt2.c2)))))AND(rt2.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3 COLLATE RTRIM)AND(((rt0.c2) NOT BETWEEN (rt1.c4) AND (rt2.c2)))))AND(rt2.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, rt1, rt2);
SELECT COUNT(*) FROM rt0, rt1, rt2 WHERE (((((rt1.c3 COLLATE RTRIM)AND(((rt0.c2) NOT BETWEEN (rt1.c4) AND (rt2.c2)))))AND(rt2.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt1 WHERE (CASE '0'  WHEN CAST(rt1.c2 AS INTEGER) THEN (~ (0.8665942165773514)) WHEN ((rt1.c1) NOTNULL) THEN rt1.c2 WHEN ((((rt1.c1)OR(rt1.c2)))OR(rt1.c0)) THEN (rt1.c1 IN ()) ELSE ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)) END) ORDER BY CAST((+ (rt1.c0)) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE '0'  WHEN CAST(rt1.c2 AS INTEGER) THEN (~ (0.8665942165773514)) WHEN ((rt1.c1) NOTNULL) THEN rt1.c2 WHEN ((((rt1.c1)OR(rt1.c2)))OR(rt1.c0)) THEN (rt1.c1 IN ()) ELSE ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)) END) IS TRUE)  as count FROM rt1 ORDER BY CAST((+ (rt1.c0)) AS NUMERIC) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (CASE '0'  WHEN CAST(rt1.c2 AS INTEGER) THEN (~ (0.8665942165773514)) WHEN ((rt1.c1) NOTNULL) THEN rt1.c2 WHEN ((((rt1.c1)OR(rt1.c2)))OR(rt1.c0)) THEN (rt1.c1 IN ()) ELSE ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)) END) ORDER BY CAST((+ (rt1.c0)) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE '0'  WHEN CAST(rt1.c2 AS INTEGER) THEN (~ (0.8665942165773514)) WHEN ((rt1.c1) NOTNULL) THEN rt1.c2 WHEN ((((rt1.c1)OR(rt1.c2)))OR(rt1.c0)) THEN (rt1.c1 IN ()) ELSE ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)) END) IS TRUE)  as count FROM rt1 ORDER BY CAST((+ (rt1.c0)) AS NUMERIC) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (CASE '0'  WHEN CAST(rt1.c2 AS INTEGER) THEN (~ (0.8665942165773514)) WHEN ((rt1.c1) NOTNULL) THEN rt1.c2 WHEN ((((rt1.c1)OR(rt1.c2)))OR(rt1.c0)) THEN (rt1.c1 IN ()) ELSE ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)) END) ORDER BY CAST((+ (rt1.c0)) AS NUMERIC) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, rt0, rt2 WHERE (CASE NULL  WHEN (rt2.c1 IN (rt0.c1)) THEN CAST(rt0.c2 AS NUMERIC) WHEN (((rt1.c2))<>((rt0.c1))) THEN x'' WHEN ((((((((rt1.c1)AND(rt1.c4)))OR(rt1.c1)))AND(rt2.c2)))OR(rt1.c1)) THEN (- (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN (rt2.c1 IN (rt0.c1)) THEN CAST(rt0.c2 AS NUMERIC) WHEN (((rt1.c2))!=((rt0.c1))) THEN x'' WHEN ((((((((rt1.c1)AND(rt1.c4)))OR(rt1.c1)))AND(rt2.c2)))OR(rt1.c1)) THEN (- (rt0.c0)) END) IS TRUE)  as count FROM rt1, rt0, rt2);
SELECT ALL COUNT(*) FROM rt1, rt0, rt2 WHERE (CASE NULL  WHEN (rt2.c1 IN (rt0.c1)) THEN CAST(rt0.c2 AS NUMERIC) WHEN (((rt1.c2))<>((rt0.c1))) THEN x'' WHEN ((((((((rt1.c1)AND(rt1.c4)))OR(rt1.c1)))AND(rt2.c2)))OR(rt1.c1)) THEN (- (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN (rt2.c1 IN (rt0.c1)) THEN CAST(rt0.c2 AS NUMERIC) WHEN (((rt1.c2))!=((rt0.c1))) THEN x'' WHEN ((((((((rt1.c1)AND(rt1.c4)))OR(rt1.c1)))AND(rt2.c2)))OR(rt1.c1)) THEN (- (rt0.c0)) END) IS TRUE)  as count FROM rt1, rt0, rt2);
SELECT ALL COUNT(*) FROM rt1, rt0, rt2 WHERE (CASE NULL  WHEN (rt2.c1 IN (rt0.c1)) THEN CAST(rt0.c2 AS NUMERIC) WHEN (((rt1.c2))<>((rt0.c1))) THEN x'' WHEN ((((((((rt1.c1)AND(rt1.c4)))OR(rt1.c1)))AND(rt2.c2)))OR(rt1.c1)) THEN (- (rt0.c0)) END);
SELECT ALL COUNT(*) FROM rt2 WHERE (((((((rt2.c1)OR(rt2.c1)))OR(rt2.c0)))+(((rt2.c0)<(rt2.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt2.c1)OR(rt2.c1)))OR(rt2.c0)))+(((rt2.c0)<(rt2.c0))))) IS TRUE)  as count FROM rt2);
SELECT ALL COUNT(*) FROM rt2 WHERE (((((((rt2.c1)OR(rt2.c1)))OR(rt2.c0)))+(((rt2.c0)<(rt2.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt2.c1)OR(rt2.c1)))OR(rt2.c0)))+(((rt2.c0)<(rt2.c0))))) IS TRUE)  as count FROM rt2);
SELECT ALL COUNT(*) FROM rt2 WHERE (((((((rt2.c1)OR(rt2.c1)))OR(rt2.c0)))+(((rt2.c0)<(rt2.c0)))));
SELECT ALL * FROM rt0 WHERE (DATE((((rt0.c3))>((rt0.c3))), ((rt0.c1) NOTNULL), ((rt0.c0)||(rt0.c2)))) ORDER BY (NOT (STRFTIME(rt0.c2, rt0.c3, rt0.c3, rt0.c3, rt0.c1, '91606144', rt0.c0, rt0.c2, rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((DATE((((rt0.c3))>((rt0.c3))), ((rt0.c1) NOTNULL), ((rt0.c0)||(rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (STRFTIME(rt0.c2, rt0.c3, rt0.c3, rt0.c3, rt0.c1, '91606144', rt0.c0, rt0.c2, rt0.c0))));
SELECT ALL * FROM rt0 WHERE (DATE((((rt0.c3))>((rt0.c3))), ((rt0.c1) NOTNULL), ((rt0.c0)||(rt0.c2)))) ORDER BY (NOT (STRFTIME(rt0.c2, rt0.c3, rt0.c3, rt0.c3, rt0.c1, '91606144', rt0.c0, rt0.c2, rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((DATE((((rt0.c3))>((rt0.c3))), ((rt0.c1) NOTNULL), ((rt0.c0)||(rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (STRFTIME(rt0.c2, rt0.c3, rt0.c3, rt0.c3, rt0.c1, '91606144', rt0.c0, rt0.c2, rt0.c0))));
SELECT ALL * FROM rt0 WHERE (DATE((((rt0.c3))>((rt0.c3))), ((rt0.c1) NOTNULL), ((rt0.c0)||(rt0.c2)))) ORDER BY (NOT (STRFTIME(rt0.c2, rt0.c3, rt0.c3, rt0.c3, rt0.c1, '91606144', rt0.c0, rt0.c2, rt0.c0)));
SELECT * FROM rt2 CROSS JOIN rt0 ON CAST(rt2.c2 AS INTEGER) COLLATE RTRIM FULL OUTER JOIN rt1 ON ((((rt0.c1)/(rt1.c2)))<<(NULL)) WHERE ((((((rt0.c3)>=(rt0.c3))))<=((CASE rt2.c0  WHEN rt1.c0 THEN rt2.c1 ELSE rt1.c1 END))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3)>=(rt0.c3))))<=((CASE rt2.c0  WHEN rt1.c0 THEN rt2.c1 ELSE rt1.c1 END)))) IS TRUE)  as count FROM rt2 CROSS JOIN rt0 ON CAST(rt2.c2 AS INTEGER) COLLATE RTRIM FULL OUTER JOIN rt1 ON ((((rt0.c1)/(rt1.c2)))<<(NULL)));
SELECT * FROM rt2 CROSS JOIN rt0 ON CAST(rt2.c2 AS INTEGER) COLLATE RTRIM FULL OUTER JOIN rt1 ON ((((rt0.c1)/(rt1.c2)))<<(NULL)) WHERE ((((((rt0.c3)>=(rt0.c3))))<=((CASE rt2.c0  WHEN rt1.c0 THEN rt2.c1 ELSE rt1.c1 END))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3)>=(rt0.c3))))<=((CASE rt2.c0  WHEN rt1.c0 THEN rt2.c1 ELSE rt1.c1 END)))) IS TRUE)  as count FROM rt2 CROSS JOIN rt0 ON CAST(rt2.c2 AS INTEGER) COLLATE RTRIM FULL OUTER JOIN rt1 ON ((((rt0.c1)/(rt1.c2)))<<(NULL)));
SELECT * FROM rt2 CROSS JOIN rt0 ON CAST(rt2.c2 AS INTEGER) COLLATE RTRIM FULL OUTER JOIN rt1 ON ((((rt0.c1)/(rt1.c2)))<<(NULL)) WHERE ((((((rt0.c3)>=(rt0.c3))))<=((CASE rt2.c0  WHEN rt1.c0 THEN rt2.c1 ELSE rt1.c1 END))));
SELECT * FROM rt2, rt1 WHERE (CAST(((rt1.c1) BETWEEN (rt2.c1) AND (rt2.c1)) AS TEXT)) ORDER BY ((x'')/(CAST(rt1.c3 AS BLOB))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1) BETWEEN (rt2.c1) AND (rt2.c1)) AS TEXT)) IS TRUE)  as count FROM rt2, rt1 ORDER BY ((x'')/(CAST(rt1.c3 AS BLOB))) DESC  NULLS FIRST);
SELECT * FROM rt2, rt1 WHERE (CAST(((rt1.c1) BETWEEN (rt2.c1) AND (rt2.c1)) AS TEXT)) ORDER BY ((x'')/(CAST(rt1.c3 AS BLOB))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1) BETWEEN (rt2.c1) AND (rt2.c1)) AS TEXT)) IS TRUE)  as count FROM rt2, rt1 ORDER BY ((x'')/(CAST(rt1.c3 AS BLOB))) DESC  NULLS FIRST);
SELECT * FROM rt2, rt1 WHERE (CAST(((rt1.c1) BETWEEN (rt2.c1) AND (rt2.c1)) AS TEXT)) ORDER BY ((x'')/(CAST(rt1.c3 AS BLOB))) DESC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE ((((((rt1.c1)>=(rt1.c1))))<=((CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c3 THEN NULL WHEN rt1.c3 THEN rt1.c3 END))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c1)>=(rt1.c1))))<=((CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c3 THEN NULL WHEN rt1.c3 THEN rt1.c3 END)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c1)>=(rt1.c1))))<=((CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c3 THEN NULL WHEN rt1.c3 THEN rt1.c3 END))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c1)>=(rt1.c1))))<=((CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c3 THEN NULL WHEN rt1.c3 THEN rt1.c3 END)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c1)>=(rt1.c1))))<=((CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c3 THEN NULL WHEN rt1.c3 THEN rt1.c3 END))));
SELECT COUNT(*) FROM rt0, rt2, rt1 WHERE ((((((rt2.c0) NOTNULL)))<=((rt1.c3 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((((rt2.c0) NOTNULL)))<=((rt1.c3 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0, rt2, rt1);
SELECT COUNT(*) FROM rt0, rt2, rt1 WHERE ((((((rt2.c0) NOTNULL)))<=((rt1.c3 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((((rt2.c0) NOTNULL)))<=((rt1.c3 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0, rt2, rt1);
SELECT COUNT(*) FROM rt0, rt2, rt1 WHERE ((((((rt2.c0) NOTNULL)))<=((rt1.c3 COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM rt2 FULL OUTER JOIN rt1 ON ('-734161496' IN (rt1.c1 COLLATE BINARY)) WHERE (CASE WHEN ((((((((rt1.c3)OR(rt1.c3)))AND(rt1.c3)))AND('-2090611596')))OR(rt1.c3)) THEN NULL COLLATE BINARY WHEN (- (rt2.c2)) THEN ((((rt1.c2)AND(rt1.c3)))AND(rt2.c2)) WHEN ((rt2.c1)/(rt1.c4)) THEN ((rt1.c3)<=(rt1.c4)) ELSE (rt2.c2 IN ()) END) ORDER BY (((((-768787874 IN ()))OR(((rt2.c2)>=(rt1.c4)))))OR((+ ('y5x\'))))  NULLS LAST, CASE WHEN ((rt1.c4) NOT BETWEEN ('1840965232') AND (rt2.c1)) THEN CASE WHEN rt2.c2 THEN rt2.c0 WHEN rt1.c4 THEN rt2.c1 WHEN rt2.c1 THEN rt2.c1 END WHEN rt1.c1 THEN ((rt2.c1)IS(x'')) WHEN ((rt1.c0) BETWEEN (rt2.c0) AND (rt1.c3)) THEN HEX(rt1.c0) WHEN CASE WHEN rt1.c3 THEN rt2.c1 WHEN rt2.c0 THEN '-1186499569' WHEN rt2.c0 THEN rt1.c3 ELSE rt1.c2 END THEN CAST(rt2.c0 AS REAL) WHEN rt1.c1 THEN HEX(rt1.c4) ELSE ((rt1.c2) NOT NULL) END ASC, rt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((rt1.c3)OR(rt1.c3)))AND(rt1.c3)))AND('-2090611596')))OR(rt1.c3)) THEN NULL COLLATE BINARY WHEN (- (rt2.c2)) THEN ((((rt1.c2)AND(rt1.c3)))AND(rt2.c2)) WHEN ((rt2.c1)/(rt1.c4)) THEN ((rt1.c3)<=(rt1.c4)) ELSE (rt2.c2 IN ()) END) IS TRUE)  as count FROM rt2 FULL OUTER JOIN rt1 ON ('-734161496' IN (rt1.c1 COLLATE BINARY)) ORDER BY (((((-768787874 IN ()))OR(((rt2.c2)>=(rt1.c4)))))OR((+ ('y5x\'))))  NULLS LAST, CASE WHEN ((rt1.c4) NOT BETWEEN ('1840965232') AND (rt2.c1)) THEN CASE WHEN rt2.c2 THEN rt2.c0 WHEN rt1.c4 THEN rt2.c1 WHEN rt2.c1 THEN rt2.c1 END WHEN rt1.c1 THEN ((rt2.c1)IS(x'')) WHEN ((rt1.c0) BETWEEN (rt2.c0) AND (rt1.c3)) THEN HEX(rt1.c0) WHEN CASE WHEN rt1.c3 THEN rt2.c1 WHEN rt2.c0 THEN '-1186499569' WHEN rt2.c0 THEN rt1.c3 ELSE rt1.c2 END THEN CAST(rt2.c0 AS REAL) WHEN rt1.c1 THEN HEX(rt1.c4) ELSE ((rt1.c2) NOT NULL) END ASC, rt1.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt2 FULL OUTER JOIN rt1 ON ('-734161496' IN (rt1.c1 COLLATE BINARY)) WHERE (CASE WHEN ((((((((rt1.c3)OR(rt1.c3)))AND(rt1.c3)))AND('-2090611596')))OR(rt1.c3)) THEN NULL COLLATE BINARY WHEN (- (rt2.c2)) THEN ((((rt1.c2)AND(rt1.c3)))AND(rt2.c2)) WHEN ((rt2.c1)/(rt1.c4)) THEN ((rt1.c3)<=(rt1.c4)) ELSE (rt2.c2 IN ()) END) ORDER BY (((((-768787874 IN ()))OR(((rt2.c2)>=(rt1.c4)))))OR((+ ('y5x\'))))  NULLS LAST, CASE WHEN ((rt1.c4) NOT BETWEEN ('1840965232') AND (rt2.c1)) THEN CASE WHEN rt2.c2 THEN rt2.c0 WHEN rt1.c4 THEN rt2.c1 WHEN rt2.c1 THEN rt2.c1 END WHEN rt1.c1 THEN ((rt2.c1)IS(x'')) WHEN ((rt1.c0) BETWEEN (rt2.c0) AND (rt1.c3)) THEN HEX(rt1.c0) WHEN CASE WHEN rt1.c3 THEN rt2.c1 WHEN rt2.c0 THEN '-1186499569' WHEN rt2.c0 THEN rt1.c3 ELSE rt1.c2 END THEN CAST(rt2.c0 AS REAL) WHEN rt1.c1 THEN HEX(rt1.c4) ELSE ((rt1.c2) NOT NULL) END ASC, rt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((rt1.c3)OR(rt1.c3)))AND(rt1.c3)))AND('-2090611596')))OR(rt1.c3)) THEN NULL COLLATE BINARY WHEN (- (rt2.c2)) THEN ((((rt1.c2)AND(rt1.c3)))AND(rt2.c2)) WHEN ((rt2.c1)/(rt1.c4)) THEN ((rt1.c3)<=(rt1.c4)) ELSE (rt2.c2 IN ()) END) IS TRUE)  as count FROM rt2 FULL OUTER JOIN rt1 ON ('-734161496' IN (rt1.c1 COLLATE BINARY)) ORDER BY (((((-768787874 IN ()))OR(((rt2.c2)>=(rt1.c4)))))OR((+ ('y5x\'))))  NULLS LAST, CASE WHEN ((rt1.c4) NOT BETWEEN ('1840965232') AND (rt2.c1)) THEN CASE WHEN rt2.c2 THEN rt2.c0 WHEN rt1.c4 THEN rt2.c1 WHEN rt2.c1 THEN rt2.c1 END WHEN rt1.c1 THEN ((rt2.c1)IS(x'')) WHEN ((rt1.c0) BETWEEN (rt2.c0) AND (rt1.c3)) THEN HEX(rt1.c0) WHEN CASE WHEN rt1.c3 THEN rt2.c1 WHEN rt2.c0 THEN '-1186499569' WHEN rt2.c0 THEN rt1.c3 ELSE rt1.c2 END THEN CAST(rt2.c0 AS REAL) WHEN rt1.c1 THEN HEX(rt1.c4) ELSE ((rt1.c2) NOT NULL) END ASC, rt1.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt2 FULL OUTER JOIN rt1 ON ('-734161496' IN (rt1.c1 COLLATE BINARY)) WHERE (CASE WHEN ((((((((rt1.c3)OR(rt1.c3)))AND(rt1.c3)))AND('-2090611596')))OR(rt1.c3)) THEN NULL COLLATE BINARY WHEN (- (rt2.c2)) THEN ((((rt1.c2)AND(rt1.c3)))AND(rt2.c2)) WHEN ((rt2.c1)/(rt1.c4)) THEN ((rt1.c3)<=(rt1.c4)) ELSE (rt2.c2 IN ()) END) ORDER BY (((((-768787874 IN ()))OR(((rt2.c2)>=(rt1.c4)))))OR((+ ('y5x\'))))  NULLS LAST, CASE WHEN ((rt1.c4) NOT BETWEEN ('1840965232') AND (rt2.c1)) THEN CASE WHEN rt2.c2 THEN rt2.c0 WHEN rt1.c4 THEN rt2.c1 WHEN rt2.c1 THEN rt2.c1 END WHEN rt1.c1 THEN ((rt2.c1)IS(x'')) WHEN ((rt1.c0) BETWEEN (rt2.c0) AND (rt1.c3)) THEN HEX(rt1.c0) WHEN CASE WHEN rt1.c3 THEN rt2.c1 WHEN rt2.c0 THEN '-1186499569' WHEN rt2.c0 THEN rt1.c3 ELSE rt1.c2 END THEN CAST(rt2.c0 AS REAL) WHEN rt1.c1 THEN HEX(rt1.c4) ELSE ((rt1.c2) NOT NULL) END ASC, rt1.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt2 RIGHT OUTER JOIN rt1 ON load_extension((((rt1.c0))<((rt0.c2))), ('' IN ())) LEFT OUTER JOIN rt0 ON CAST(x'' AS TEXT) WHERE ((+ (CAST(rt0.c3 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt0.c3 AS REAL)))) IS TRUE)  as count FROM rt2 RIGHT OUTER JOIN rt1 ON load_extension((((rt1.c0))<((rt0.c2))), ('' IN ())) LEFT OUTER JOIN rt0 ON CAST(x'' AS TEXT));
SELECT ALL COUNT(*) FROM rt2 RIGHT OUTER JOIN rt1 ON load_extension((((rt1.c0))<((rt0.c2))), ('' IN ())) LEFT OUTER JOIN rt0 ON CAST(x'' AS TEXT) WHERE ((+ (CAST(rt0.c3 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt0.c3 AS REAL)))) IS TRUE)  as count FROM rt2 RIGHT OUTER JOIN rt1 ON load_extension((((rt1.c0))<((rt0.c2))), ('' IN ())) LEFT OUTER JOIN rt0 ON CAST(x'' AS TEXT));
SELECT ALL * FROM rt1 WHERE ((((((((((((rt1.c1)OR(rt1.c3)))OR(rt1.c4)))AND(rt1.c1)))OR(rt1.c0))))<((''))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt1.c1)OR(rt1.c3)))OR(rt1.c4)))AND(rt1.c1)))OR(rt1.c0))))<(('')))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((((((((rt1.c1)OR(rt1.c3)))OR(rt1.c4)))AND(rt1.c1)))OR(rt1.c0))))<((''))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt1.c1)OR(rt1.c3)))OR(rt1.c4)))AND(rt1.c1)))OR(rt1.c0))))<(('')))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((((((((rt1.c1)OR(rt1.c3)))OR(rt1.c4)))AND(rt1.c1)))OR(rt1.c0))))<((''))));
SELECT ALL COUNT(*) FROM rt2, rt0 WHERE (((((CASE rt2.c2  WHEN rt0.c3 THEN '\r*#4bK经!/' ELSE rt2.c2 END)OR(((rt0.c3) IS TRUE))))AND(CASE rt2.c2  WHEN rt2.c0 THEN rt0.c0 ELSE rt0.c0 END))) ORDER BY ((((((((rt2.c1 COLLATE BINARY)AND(rt2.c1)))AND(CASE WHEN rt0.c1 THEN rt2.c1 ELSE rt2.c1 END)))AND(CASE rt2.c0  WHEN rt2.c1 THEN rt2.c0 WHEN rt2.c2 THEN rt2.c0 WHEN rt0.c0 THEN rt0.c3 END)))AND(1359859541)), ((((((rt2.c2)AND('-128297450')))AND(rt0.c1)))<>(((('1잱+6+v1', rt0.c1, rt2.c1))>((rt0.c3, rt0.c2, rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt2.c2  WHEN rt0.c3 THEN '\r*#4bK经!/' ELSE rt2.c2 END)OR(((rt0.c3) IS TRUE))))AND(CASE rt2.c2  WHEN rt2.c0 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt2, rt0 ORDER BY ((((((((rt2.c1 COLLATE BINARY)AND(rt2.c1)))AND(CASE WHEN rt0.c1 THEN rt2.c1 ELSE rt2.c1 END)))AND(CASE rt2.c0  WHEN rt2.c1 THEN rt2.c0 WHEN rt2.c2 THEN rt2.c0 WHEN rt0.c0 THEN rt0.c3 END)))AND(1359859541)), ((((((rt2.c2)AND('-128297450')))AND(rt0.c1)))<>(((('1잱+6+v1', rt0.c1, rt2.c1))>((rt0.c3, rt0.c2, rt0.c3))))));
SELECT ALL COUNT(*) FROM rt2, rt0 WHERE (((((CASE rt2.c2  WHEN rt0.c3 THEN '\r*#4bK经!/' ELSE rt2.c2 END)OR(((rt0.c3) IS TRUE))))AND(CASE rt2.c2  WHEN rt2.c0 THEN rt0.c0 ELSE rt0.c0 END))) ORDER BY ((((((((rt2.c1 COLLATE BINARY)AND(rt2.c1)))AND(CASE WHEN rt0.c1 THEN rt2.c1 ELSE rt2.c1 END)))AND(CASE rt2.c0  WHEN rt2.c1 THEN rt2.c0 WHEN rt2.c2 THEN rt2.c0 WHEN rt0.c0 THEN rt0.c3 END)))AND(1359859541)), ((((((rt2.c2)AND('-128297450')))AND(rt0.c1)))<>(((('1잱+6+v1', rt0.c1, rt2.c1))>((rt0.c3, rt0.c2, rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt2.c2  WHEN rt0.c3 THEN '\r*#4bK经!/' ELSE rt2.c2 END)OR(((rt0.c3) IS TRUE))))AND(CASE rt2.c2  WHEN rt2.c0 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt2, rt0 ORDER BY ((((((((rt2.c1 COLLATE BINARY)AND(rt2.c1)))AND(CASE WHEN rt0.c1 THEN rt2.c1 ELSE rt2.c1 END)))AND(CASE rt2.c0  WHEN rt2.c1 THEN rt2.c0 WHEN rt2.c2 THEN rt2.c0 WHEN rt0.c0 THEN rt0.c3 END)))AND(1359859541)), ((((((rt2.c2)AND('-128297450')))AND(rt0.c1)))<>(((('1잱+6+v1', rt0.c1, rt2.c1))>((rt0.c3, rt0.c2, rt0.c3))))));
SELECT ALL COUNT(*) FROM rt2, rt0 WHERE (((((CASE rt2.c2  WHEN rt0.c3 THEN '\r*#4bK经!/' ELSE rt2.c2 END)OR(((rt0.c3) IS TRUE))))AND(CASE rt2.c2  WHEN rt2.c0 THEN rt0.c0 ELSE rt0.c0 END))) ORDER BY ((((((((rt2.c1 COLLATE BINARY)AND(rt2.c1)))AND(CASE WHEN rt0.c1 THEN rt2.c1 ELSE rt2.c1 END)))AND(CASE rt2.c0  WHEN rt2.c1 THEN rt2.c0 WHEN rt2.c2 THEN rt2.c0 WHEN rt0.c0 THEN rt0.c3 END)))AND(1359859541)), ((((((rt2.c2)AND('-128297450')))AND(rt0.c1)))<>(((('1잱+6+v1', rt0.c1, rt2.c1))>((rt0.c3, rt0.c2, rt0.c3)))));
SELECT COUNT(*) FROM rt1 WHERE (CAST(((rt1.c4)OR(rt1.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c4)OR(rt1.c2)) AS REAL)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CAST(((rt1.c4)OR(rt1.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c4)OR(rt1.c2)) AS REAL)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CAST(((rt1.c4)OR(rt1.c2)) AS REAL));
SELECT * FROM rt0 WHERE ((('21251300') IS FALSE));
SELECT SUM(count) FROM (SELECT (((('21251300') IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((('21251300') IS FALSE));
SELECT SUM(count) FROM (SELECT (((('21251300') IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((('21251300') IS FALSE));
SELECT * FROM rt0 WHERE (((+ (rt0.c3)) IN ())) ORDER BY IFNULL(rt0.c0 COLLATE NOCASE, rt0.c1) DESC  NULLS LAST, ((((((((NULL)OR(TYPEOF(rt0.c2))))OR(((rt0.c2)GLOB(rt0.c2)))))AND(((rt0.c0)||(rt0.c0)))))OR(CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((+ (rt0.c3)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY IFNULL(rt0.c0 COLLATE NOCASE, rt0.c1) DESC  NULLS LAST, ((((((((NULL)OR(TYPEOF(rt0.c2))))OR(((rt0.c2)GLOB(rt0.c2)))))AND(((rt0.c0)||(rt0.c0)))))OR(CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END)) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((+ (rt0.c3)) IN ())) ORDER BY IFNULL(rt0.c0 COLLATE NOCASE, rt0.c1) DESC  NULLS LAST, ((((((((NULL)OR(TYPEOF(rt0.c2))))OR(((rt0.c2)GLOB(rt0.c2)))))AND(((rt0.c0)||(rt0.c0)))))OR(CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((+ (rt0.c3)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY IFNULL(rt0.c0 COLLATE NOCASE, rt0.c1) DESC  NULLS LAST, ((((((((NULL)OR(TYPEOF(rt0.c2))))OR(((rt0.c2)GLOB(rt0.c2)))))AND(((rt0.c0)||(rt0.c0)))))OR(CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END)) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((+ (rt0.c3)) IN ())) ORDER BY IFNULL(rt0.c0 COLLATE NOCASE, rt0.c1) DESC  NULLS LAST, ((((((((NULL)OR(TYPEOF(rt0.c2))))OR(((rt0.c2)GLOB(rt0.c2)))))AND(((rt0.c0)||(rt0.c0)))))OR(CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END)) DESC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE ((((rt1.c2 COLLATE RTRIM))>=((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1)))))) ORDER BY (NOT (((rt1.c3) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2 COLLATE RTRIM))>=((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1)))))) IS TRUE)  as count FROM rt1 ORDER BY (NOT (((rt1.c3) NOTNULL)))  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((((rt1.c2 COLLATE RTRIM))>=((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1)))))) ORDER BY (NOT (((rt1.c3) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2 COLLATE RTRIM))>=((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1)))))) IS TRUE)  as count FROM rt1 ORDER BY (NOT (((rt1.c3) NOTNULL)))  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((((rt1.c2 COLLATE RTRIM))>=((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1)))))) ORDER BY (NOT (((rt1.c3) NOTNULL)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt2 WHERE (((((rt2.c2 IN ())))<((((rt2.c2)<=(rt2.c1)))))) ORDER BY rt2.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt2.c2 IN ())))<((((rt2.c2)<=(rt2.c1)))))) IS TRUE)  as count FROM rt2 ORDER BY rt2.c2 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt2 WHERE (((((rt2.c2 IN ())))<((((rt2.c2)<=(rt2.c1)))))) ORDER BY rt2.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt2.c2 IN ())))<((((rt2.c2)<=(rt2.c1)))))) IS TRUE)  as count FROM rt2 ORDER BY rt2.c2 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt2 WHERE (((((rt2.c2 IN ())))<((((rt2.c2)<=(rt2.c1)))))) ORDER BY rt2.c2 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt2, rt0, rt1 WHERE (CAST((+ (rt0.c3)) AS BLOB)) ORDER BY UPPER(DISTINCT (((rt0.c3)) BETWEEN ((rt0.c3)) AND ((x''))));
SELECT SUM(count) FROM (SELECT ((CAST((+ (rt0.c3)) AS BLOB)) IS TRUE)  as count FROM rt2, rt0, rt1 ORDER BY UPPER(DISTINCT (((rt0.c3)) BETWEEN ((rt0.c3)) AND ((x'')))));
SELECT ALL COUNT(*) FROM rt2, rt0, rt1 WHERE (CAST((+ (rt0.c3)) AS BLOB)) ORDER BY UPPER(DISTINCT (((rt0.c3)) BETWEEN ((rt0.c3)) AND ((x''))));
SELECT SUM(count) FROM (SELECT ((CAST((+ (rt0.c3)) AS BLOB)) IS TRUE)  as count FROM rt2, rt0, rt1 ORDER BY UPPER(DISTINCT (((rt0.c3)) BETWEEN ((rt0.c3)) AND ((x'')))));
SELECT ALL COUNT(*) FROM rt2, rt0, rt1 WHERE (CAST((+ (rt0.c3)) AS BLOB)) ORDER BY UPPER(DISTINCT (((rt0.c3)) BETWEEN ((rt0.c3)) AND ((x''))));
SELECT COUNT(*) FROM rt1 WHERE (CASE ((((rt1.c1)AND(rt1.c0)))AND(0.1458178722025799))  WHEN ((((rt1.c2)OR(rt1.c0)))AND(rt1.c0)) THEN ((rt1.c0) IS FALSE) WHEN ((rt1.c1)OR(rt1.c3)) THEN NULL WHEN rt1.c4 THEN ((rt1.c3)LIKE(0.44263489626841646)) END) ORDER BY ((rt1.c1 COLLATE NOCASE)||((((rt1.c0))!=((rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt1.c1)AND(rt1.c0)))AND(0.1458178722025799))  WHEN ((((rt1.c2)OR(rt1.c0)))AND(rt1.c0)) THEN ((rt1.c0) IS FALSE) WHEN ((rt1.c1)OR(rt1.c3)) THEN NULL WHEN rt1.c4 THEN ((rt1.c3)LIKE(0.44263489626841646)) END) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1 COLLATE NOCASE)||((((rt1.c0))!=((rt1.c2))))));
SELECT COUNT(*) FROM rt1 WHERE (CASE ((((rt1.c1)AND(rt1.c0)))AND(0.1458178722025799))  WHEN ((((rt1.c2)OR(rt1.c0)))AND(rt1.c0)) THEN ((rt1.c0) IS FALSE) WHEN ((rt1.c1)OR(rt1.c3)) THEN NULL WHEN rt1.c4 THEN ((rt1.c3)LIKE(0.44263489626841646)) END) ORDER BY ((rt1.c1 COLLATE NOCASE)||((((rt1.c0))!=((rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt1.c1)AND(rt1.c0)))AND(0.1458178722025799))  WHEN ((((rt1.c2)OR(rt1.c0)))AND(rt1.c0)) THEN ((rt1.c0) IS FALSE) WHEN ((rt1.c1)OR(rt1.c3)) THEN NULL WHEN rt1.c4 THEN ((rt1.c3)LIKE(0.44263489626841646)) END) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1 COLLATE NOCASE)||((((rt1.c0))!=((rt1.c2))))));
SELECT COUNT(*) FROM rt1 WHERE (CASE ((((rt1.c1)AND(rt1.c0)))AND(0.1458178722025799))  WHEN ((((rt1.c2)OR(rt1.c0)))AND(rt1.c0)) THEN ((rt1.c0) IS FALSE) WHEN ((rt1.c1)OR(rt1.c3)) THEN NULL WHEN rt1.c4 THEN ((rt1.c3)LIKE(0.44263489626841646)) END) ORDER BY ((rt1.c1 COLLATE NOCASE)||((((rt1.c0))!=((rt1.c2)))));
SELECT ALL COUNT(*) FROM rt2, rt0 RIGHT OUTER JOIN rt1 ON ((((LOWER(rt2.c2))AND(((((rt2.c1)OR(x'')))OR(rt0.c2)))))OR(0x11d44e07)) WHERE ((-774704366 IN ())) ORDER BY ((((x'')/(rt1.c3))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((-774704366 IN ())) IS TRUE)  as count FROM rt2, rt0 RIGHT OUTER JOIN rt1 ON ((((LOWER(rt2.c2))AND(((((rt2.c1)OR(x'')))OR(rt0.c2)))))OR(0x11d44e07)) ORDER BY ((((x'')/(rt1.c3))) ISNULL));
SELECT ALL COUNT(*) FROM rt2, rt0 RIGHT OUTER JOIN rt1 ON ((((LOWER(rt2.c2))AND(((((rt2.c1)OR(x'')))OR(rt0.c2)))))OR(0x11d44e07)) WHERE ((-774704366 IN ())) ORDER BY ((((x'')/(rt1.c3))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((-774704366 IN ())) IS TRUE)  as count FROM rt2, rt0 RIGHT OUTER JOIN rt1 ON ((((LOWER(rt2.c2))AND(((((rt2.c1)OR(x'')))OR(rt0.c2)))))OR(0x11d44e07)) ORDER BY ((((x'')/(rt1.c3))) ISNULL));
SELECT ALL COUNT(*) FROM rt2, rt0 RIGHT OUTER JOIN rt1 ON ((((LOWER(rt2.c2))AND(((((rt2.c1)OR(x'')))OR(rt0.c2)))))OR(0x11d44e07)) WHERE ((-774704366 IN ())) ORDER BY ((((x'')/(rt1.c3))) ISNULL);
SELECT ALL COUNT(*) FROM rt2, rt1, rt0 WHERE (CASE WHEN rt1.c0 COLLATE NOCASE THEN (((rt1.c3)) BETWEEN ((rt1.c4)) AND ((rt1.c2))) WHEN ((rt1.c4)<<(rt1.c1)) THEN CASE rt2.c2  WHEN 0.39121333517248014 THEN '0.6450538433831611' END WHEN NULL COLLATE RTRIM THEN ((rt1.c1)>(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c0 COLLATE NOCASE THEN (((rt1.c3)) BETWEEN ((rt1.c4)) AND ((rt1.c2))) WHEN ((rt1.c4)<<(rt1.c1)) THEN CASE rt2.c2  WHEN 0.39121333517248014 THEN '0.6450538433831611' END WHEN NULL COLLATE RTRIM THEN ((rt1.c1)>(rt0.c1)) END) IS TRUE)  as count FROM rt2, rt1, rt0);
SELECT ALL COUNT(*) FROM rt2, rt1, rt0 WHERE (CASE WHEN rt1.c0 COLLATE NOCASE THEN (((rt1.c3)) BETWEEN ((rt1.c4)) AND ((rt1.c2))) WHEN ((rt1.c4)<<(rt1.c1)) THEN CASE rt2.c2  WHEN 0.39121333517248014 THEN '0.6450538433831611' END WHEN NULL COLLATE RTRIM THEN ((rt1.c1)>(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c0 COLLATE NOCASE THEN (((rt1.c3)) BETWEEN ((rt1.c4)) AND ((rt1.c2))) WHEN ((rt1.c4)<<(rt1.c1)) THEN CASE rt2.c2  WHEN 0.39121333517248014 THEN '0.6450538433831611' END WHEN NULL COLLATE RTRIM THEN ((rt1.c1)>(rt0.c1)) END) IS TRUE)  as count FROM rt2, rt1, rt0);
SELECT ALL COUNT(*) FROM rt2, rt1, rt0 WHERE (CASE WHEN rt1.c0 COLLATE NOCASE THEN (((rt1.c3)) BETWEEN ((rt1.c4)) AND ((rt1.c2))) WHEN ((rt1.c4)<<(rt1.c1)) THEN CASE rt2.c2  WHEN 0.39121333517248014 THEN '0.6450538433831611' END WHEN NULL COLLATE RTRIM THEN ((rt1.c1)>(rt0.c1)) END);
SELECT ALL COUNT(*) FROM rt0, rt2, rt1 WHERE (((CAST(rt0.c3 AS BLOB))LIKE(((((((((((((351276455)AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c2)))OR(rt1.c0)))AND(x'')))AND(rt1.c1))))) ORDER BY ABS((rt0.c1 IN ())), IFNULL(((rt0.c2)AND(rt1.c1)), ((rt1.c3)<(rt0.c2))), ((rt1.c2)<=(rt0.c2)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS BLOB))LIKE(((((((((((((351276455)AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c2)))OR(rt1.c0)))AND(x'')))AND(rt1.c1))))) IS TRUE)  as count FROM rt0, rt2, rt1 ORDER BY ABS((rt0.c1 IN ())), IFNULL(((rt0.c2)AND(rt1.c1)), ((rt1.c3)<(rt0.c2))), ((rt1.c2)<=(rt0.c2)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, rt2, rt1 WHERE (((CAST(rt0.c3 AS BLOB))LIKE(((((((((((((351276455)AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c2)))OR(rt1.c0)))AND(x'')))AND(rt1.c1))))) ORDER BY ABS((rt0.c1 IN ())), IFNULL(((rt0.c2)AND(rt1.c1)), ((rt1.c3)<(rt0.c2))), ((rt1.c2)<=(rt0.c2)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS BLOB))LIKE(((((((((((((351276455)AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c2)))OR(rt1.c0)))AND(x'')))AND(rt1.c1))))) IS TRUE)  as count FROM rt0, rt2, rt1 ORDER BY ABS((rt0.c1 IN ())), IFNULL(((rt0.c2)AND(rt1.c1)), ((rt1.c3)<(rt0.c2))), ((rt1.c2)<=(rt0.c2)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, rt2, rt1 WHERE (((CAST(rt0.c3 AS BLOB))LIKE(((((((((((((351276455)AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c2)))OR(rt1.c0)))AND(x'')))AND(rt1.c1))))) ORDER BY ABS((rt0.c1 IN ())), IFNULL(((rt0.c2)AND(rt1.c1)), ((rt1.c3)<(rt0.c2))), ((rt1.c2)<=(rt0.c2)) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))%('C''겅c>uX')) WHERE (((CAST(rt0.c3 AS NUMERIC)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS NUMERIC)) NOTNULL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))%('C''겅c>uX')));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))%('C''겅c>uX')) WHERE (((CAST(rt0.c3 AS NUMERIC)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS NUMERIC)) NOTNULL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))%('C''겅c>uX')));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))%('C''겅c>uX')) WHERE (((CAST(rt0.c3 AS NUMERIC)) NOTNULL));
SELECT * FROM rt2, rt1, rt0 WHERE ((((0xffffffff9a28b310))>((NULL))));
SELECT SUM(count) FROM (SELECT (((((0xffffffff9a28b310))>((NULL)))) IS TRUE)  as count FROM rt2, rt1, rt0);
SELECT * FROM rt2, rt1, rt0 WHERE ((((0xffffffff9a28b310))>((NULL))));
SELECT SUM(count) FROM (SELECT (((((0xffffffff9a28b310))>((NULL)))) IS TRUE)  as count FROM rt2, rt1, rt0);
SELECT * FROM rt2, rt1, rt0 WHERE ((((0xffffffff9a28b310))>((NULL))));
SELECT ALL * FROM rt0, rt1 WHERE (CAST(((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c4)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c4)) AS BLOB)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (CAST(((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c4)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c4)) AS BLOB)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (CAST(((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c4)) AS BLOB));
SELECT COUNT(*) FROM rt0, rt2 NOT INDEXED, rt1 WHERE (((CAST(rt0.c0 AS BLOB)) NOTNULL)) ORDER BY (((NOT (rt1.c2)))/(((rt0.c1) IS FALSE))), TRIM(((rt0.c3)<=(x''))), TYPEOF((((rt1.c3))<((rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS BLOB)) NOTNULL)) IS TRUE)  as count FROM rt0, rt2, rt1 ORDER BY (((NOT (rt1.c2)))/(((rt0.c1) IS FALSE))), TRIM(((rt0.c3)<=(x''))), TYPEOF((((rt1.c3))<((rt1.c0)))) ASC);
SELECT COUNT(*) FROM rt0, rt2 NOT INDEXED, rt1 WHERE (((CAST(rt0.c0 AS BLOB)) NOTNULL)) ORDER BY (((NOT (rt1.c2)))/(((rt0.c1) IS FALSE))), TRIM(((rt0.c3)<=(x''))), TYPEOF((((rt1.c3))<((rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS BLOB)) NOTNULL)) IS TRUE)  as count FROM rt0, rt2, rt1 ORDER BY (((NOT (rt1.c2)))/(((rt0.c1) IS FALSE))), TRIM(((rt0.c3)<=(x''))), TYPEOF((((rt1.c3))<((rt1.c0)))) ASC);
SELECT COUNT(*) FROM rt0, rt2 NOT INDEXED, rt1 WHERE (((CAST(rt0.c0 AS BLOB)) NOTNULL)) ORDER BY (((NOT (rt1.c2)))/(((rt0.c1) IS FALSE))), TRIM(((rt0.c3)<=(x''))), TYPEOF((((rt1.c3))<((rt1.c0)))) ASC;
SELECT ALL COUNT(*) FROM rt1, rt2 WHERE (((rt1.c3) NOTNULL) COLLATE BINARY) ORDER BY ((NULLIF(rt2.c1, rt1.c2)) IS TRUE) ASC, CASE WHEN DATETIME(rt2.c1, rt2.c0, rt2.c1) THEN (0.09416318011158742 IN ()) ELSE (+ (rt2.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ((((rt1.c3) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM rt1, rt2 ORDER BY ((NULLIF(rt2.c1, rt1.c2)) IS TRUE) ASC, CASE WHEN DATETIME(rt2.c1, rt2.c0, rt2.c1) THEN (0.09416318011158742 IN ()) ELSE (+ (rt2.c2)) END ASC);
SELECT ALL COUNT(*) FROM rt1, rt2 WHERE (((rt1.c3) NOTNULL) COLLATE BINARY) ORDER BY ((NULLIF(rt2.c1, rt1.c2)) IS TRUE) ASC, CASE WHEN DATETIME(rt2.c1, rt2.c0, rt2.c1) THEN (0.09416318011158742 IN ()) ELSE (+ (rt2.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ((((rt1.c3) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM rt1, rt2 ORDER BY ((NULLIF(rt2.c1, rt1.c2)) IS TRUE) ASC, CASE WHEN DATETIME(rt2.c1, rt2.c0, rt2.c1) THEN (0.09416318011158742 IN ()) ELSE (+ (rt2.c2)) END ASC);
SELECT ALL COUNT(*) FROM rt1, rt2 WHERE (((rt1.c3) NOTNULL) COLLATE BINARY) ORDER BY ((NULLIF(rt2.c1, rt1.c2)) IS TRUE) ASC, CASE WHEN DATETIME(rt2.c1, rt2.c0, rt2.c1) THEN (0.09416318011158742 IN ()) ELSE (+ (rt2.c2)) END ASC;
SELECT * FROM rt2, rt0, rt1 WHERE ((((rt0.c3 IN (rt0.c0))) NOT BETWEEN ((((rt1.c0, 'uj', rt1.c3))>=((rt2.c2, rt1.c2, rt1.c0)))) AND (CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c4 THEN rt2.c2 END))) ORDER BY ((((((((((((((((rt2.c1)AND(rt0.c3)))OR(rt1.c0)))AND(rt0.c2)))OR(rt2.c0)))OR(rt1.c4)))OR(NULL)))OR(((rt1.c2)IS(rt2.c0)))))OR(((rt1.c3) BETWEEN (rt1.c4) AND (rt2.c2)))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN (rt0.c0))) NOT BETWEEN ((((rt1.c0, 'uj', rt1.c3))>=((rt2.c2, rt1.c2, rt1.c0)))) AND (CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c4 THEN rt2.c2 END))) IS TRUE)  as count FROM rt2, rt0, rt1 ORDER BY ((((((((((((((((rt2.c1)AND(rt0.c3)))OR(rt1.c0)))AND(rt0.c2)))OR(rt2.c0)))OR(rt1.c4)))OR(NULL)))OR(((rt1.c2)IS(rt2.c0)))))OR(((rt1.c3) BETWEEN (rt1.c4) AND (rt2.c2)))) DESC);
SELECT * FROM rt2, rt0, rt1 WHERE ((((rt0.c3 IN (rt0.c0))) NOT BETWEEN ((((rt1.c0, 'uj', rt1.c3))>=((rt2.c2, rt1.c2, rt1.c0)))) AND (CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c4 THEN rt2.c2 END))) ORDER BY ((((((((((((((((rt2.c1)AND(rt0.c3)))OR(rt1.c0)))AND(rt0.c2)))OR(rt2.c0)))OR(rt1.c4)))OR(NULL)))OR(((rt1.c2)IS(rt2.c0)))))OR(((rt1.c3) BETWEEN (rt1.c4) AND (rt2.c2)))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN (rt0.c0))) NOT BETWEEN ((((rt1.c0, 'uj', rt1.c3))>=((rt2.c2, rt1.c2, rt1.c0)))) AND (CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c4 THEN rt2.c2 END))) IS TRUE)  as count FROM rt2, rt0, rt1 ORDER BY ((((((((((((((((rt2.c1)AND(rt0.c3)))OR(rt1.c0)))AND(rt0.c2)))OR(rt2.c0)))OR(rt1.c4)))OR(NULL)))OR(((rt1.c2)IS(rt2.c0)))))OR(((rt1.c3) BETWEEN (rt1.c4) AND (rt2.c2)))) DESC);
SELECT * FROM rt2, rt0, rt1 WHERE ((((rt0.c3 IN (rt0.c0))) NOT BETWEEN ((((rt1.c0, 'uj', rt1.c3))>=((rt2.c2, rt1.c2, rt1.c0)))) AND (CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c4 THEN rt2.c2 END))) ORDER BY ((((((((((((((((rt2.c1)AND(rt0.c3)))OR(rt1.c0)))AND(rt0.c2)))OR(rt2.c0)))OR(rt1.c4)))OR(NULL)))OR(((rt1.c2)IS(rt2.c0)))))OR(((rt1.c3) BETWEEN (rt1.c4) AND (rt2.c2)))) DESC;
SELECT ALL COUNT(*) FROM rt0, rt1, rt2 WHERE (LIKELIHOOD(DISTINCT rt0.c1, 0.9050774808681815) COLLATE BINARY) ORDER BY ((rt1.c4 COLLATE RTRIM) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT rt0.c1, 0.9050774808681815) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1, rt2 ORDER BY ((rt1.c4 COLLATE RTRIM) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1, rt2 WHERE (LIKELIHOOD(DISTINCT rt0.c1, 0.9050774808681815) COLLATE BINARY) ORDER BY ((rt1.c4 COLLATE RTRIM) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT rt0.c1, 0.9050774808681815) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1, rt2 ORDER BY ((rt1.c4 COLLATE RTRIM) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1, rt2 WHERE (LIKELIHOOD(DISTINCT rt0.c1, 0.9050774808681815) COLLATE BINARY) ORDER BY ((rt1.c4 COLLATE RTRIM) NOT NULL)  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (STRFTIME(CASE rt1.c0  WHEN rt1.c4 THEN rt1.c3 ELSE NULL END, (rt1.c1 IN ()), CAST(rt1.c0 AS NUMERIC), ((rt1.c4) NOT NULL), (((rt1.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c4, rt1.c0, rt1.c1)) AND ((rt1.c2, rt1.c2, x''))))) ORDER BY 0.905194033853853 ASC;
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(CASE rt1.c0  WHEN rt1.c4 THEN rt1.c3 ELSE NULL END, (rt1.c1 IN ()), CAST(rt1.c0 AS NUMERIC), ((rt1.c4) NOT NULL), (((rt1.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c4, rt1.c0, rt1.c1)) AND ((rt1.c2, rt1.c2, x''))))) IS TRUE)  as count FROM rt1 ORDER BY 0.905194033853853 ASC);
SELECT COUNT(*) FROM rt1 WHERE (STRFTIME(CASE rt1.c0  WHEN rt1.c4 THEN rt1.c3 ELSE NULL END, (rt1.c1 IN ()), CAST(rt1.c0 AS NUMERIC), ((rt1.c4) NOT NULL), (((rt1.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c4, rt1.c0, rt1.c1)) AND ((rt1.c2, rt1.c2, x''))))) ORDER BY 0.905194033853853 ASC;
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(CASE rt1.c0  WHEN rt1.c4 THEN rt1.c3 ELSE NULL END, (rt1.c1 IN ()), CAST(rt1.c0 AS NUMERIC), ((rt1.c4) NOT NULL), (((rt1.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c4, rt1.c0, rt1.c1)) AND ((rt1.c2, rt1.c2, x''))))) IS TRUE)  as count FROM rt1 ORDER BY 0.905194033853853 ASC);
SELECT COUNT(*) FROM rt1 WHERE (STRFTIME(CASE rt1.c0  WHEN rt1.c4 THEN rt1.c3 ELSE NULL END, (rt1.c1 IN ()), CAST(rt1.c0 AS NUMERIC), ((rt1.c4) NOT NULL), (((rt1.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c4, rt1.c0, rt1.c1)) AND ((rt1.c2, rt1.c2, x''))))) ORDER BY 0.905194033853853 ASC;
SELECT ALL * FROM rt0, rt1 NATURAL JOIN rt2 WHERE (CAST(rt1.c4 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c4 AS INTEGER)) IS TRUE)  as count FROM rt0, rt1 NATURAL JOIN rt2);
SELECT ALL * FROM rt0, rt1 NATURAL JOIN rt2 WHERE (CAST(rt1.c4 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c4 AS INTEGER)) IS TRUE)  as count FROM rt0, rt1 NATURAL JOIN rt2);
SELECT ALL * FROM rt0, rt1 NATURAL JOIN rt2 WHERE (CAST(rt1.c4 AS INTEGER));
SELECT COUNT(*) FROM rt2 WHERE ((((rt2.c2, rt2.c0, rt2.c2)) BETWEEN ((x'', rt2.c2 COLLATE NOCASE, rt2.c2 COLLATE NOCASE)) AND ((((((((((rt2.c2)AND(rt2.c0)))OR(rt2.c0)))OR(rt2.c0)))OR(rt2.c0)), ((rt2.c2)!=(rt2.c0)), (rt2.c0 IN ()))))) ORDER BY ((((rt2.c1) ISNULL))IS NOT(CAST(rt2.c0 AS INTEGER))) ASC  NULLS LAST, (((('c')OR(((rt2.c1) IS TRUE))))AND(CAST(rt2.c0 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt2.c2, rt2.c0, rt2.c2)) BETWEEN ((x'', rt2.c2 COLLATE NOCASE, rt2.c2 COLLATE NOCASE)) AND ((((((((((rt2.c2)AND(rt2.c0)))OR(rt2.c0)))OR(rt2.c0)))OR(rt2.c0)), ((rt2.c2)!=(rt2.c0)), (rt2.c0 IN ()))))) IS TRUE)  as count FROM rt2 ORDER BY ((((rt2.c1) ISNULL))IS NOT(CAST(rt2.c0 AS INTEGER))) ASC  NULLS LAST, (((('c')OR(((rt2.c1) IS TRUE))))AND(CAST(rt2.c0 AS TEXT)))  NULLS LAST);
SELECT COUNT(*) FROM rt2 WHERE ((((rt2.c2, rt2.c0, rt2.c2)) BETWEEN ((x'', rt2.c2 COLLATE NOCASE, rt2.c2 COLLATE NOCASE)) AND ((((((((((rt2.c2)AND(rt2.c0)))OR(rt2.c0)))OR(rt2.c0)))OR(rt2.c0)), ((rt2.c2)!=(rt2.c0)), (rt2.c0 IN ()))))) ORDER BY ((((rt2.c1) ISNULL))IS NOT(CAST(rt2.c0 AS INTEGER))) ASC  NULLS LAST, (((('c')OR(((rt2.c1) IS TRUE))))AND(CAST(rt2.c0 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt2.c2, rt2.c0, rt2.c2)) BETWEEN ((x'', rt2.c2 COLLATE NOCASE, rt2.c2 COLLATE NOCASE)) AND ((((((((((rt2.c2)AND(rt2.c0)))OR(rt2.c0)))OR(rt2.c0)))OR(rt2.c0)), ((rt2.c2)!=(rt2.c0)), (rt2.c0 IN ()))))) IS TRUE)  as count FROM rt2 ORDER BY ((((rt2.c1) ISNULL))IS NOT(CAST(rt2.c0 AS INTEGER))) ASC  NULLS LAST, (((('c')OR(((rt2.c1) IS TRUE))))AND(CAST(rt2.c0 AS TEXT)))  NULLS LAST);
SELECT COUNT(*) FROM rt2 WHERE ((((rt2.c2, rt2.c0, rt2.c2)) BETWEEN ((x'', rt2.c2 COLLATE NOCASE, rt2.c2 COLLATE NOCASE)) AND ((((((((((rt2.c2)AND(rt2.c0)))OR(rt2.c0)))OR(rt2.c0)))OR(rt2.c0)), ((rt2.c2)!=(rt2.c0)), (rt2.c0 IN ()))))) ORDER BY ((((rt2.c1) ISNULL))IS NOT(CAST(rt2.c0 AS INTEGER))) ASC  NULLS LAST, (((('c')OR(((rt2.c1) IS TRUE))))AND(CAST(rt2.c0 AS TEXT)))  NULLS LAST;
SELECT ALL * FROM rt1 INNER JOIN rt0 ON (((((rt1.c1)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c3)))) IS TRUE) WHERE (((((((((((rt1.c4)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c1))) NOT BETWEEN (796119677) AND ((+ (rt1.c3))))) ORDER BY '(\^now*';
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c4)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c1))) NOT BETWEEN (796119677) AND ((+ (rt1.c3))))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON (((((rt1.c1)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c3)))) IS TRUE) ORDER BY '(\^now*');
SELECT ALL * FROM rt1 INNER JOIN rt0 ON (((((rt1.c1)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c3)))) IS TRUE) WHERE (((((((((((rt1.c4)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c1))) NOT BETWEEN (796119677) AND ((+ (rt1.c3))))) ORDER BY '(\^now*';
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c4)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c1))) NOT BETWEEN (796119677) AND ((+ (rt1.c3))))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON (((((rt1.c1)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c3)))) IS TRUE) ORDER BY '(\^now*');
SELECT ALL * FROM rt1 INNER JOIN rt0 ON (((((rt1.c1)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c3)))) IS TRUE) WHERE (((((((((((rt1.c4)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c1))) NOT BETWEEN (796119677) AND ((+ (rt1.c3))))) ORDER BY '(\^now*';
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c0)/(x'd508'))) IS TRUE)) ORDER BY ((CAST(rt1.c4 AS REAL)) BETWEEN (rt1.c4) AND (rt1.c2 COLLATE RTRIM))  NULLS FIRST, (((rt1.c4 IN ())) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)/(x'd508'))) IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c4 AS REAL)) BETWEEN (rt1.c4) AND (rt1.c2 COLLATE RTRIM))  NULLS FIRST, (((rt1.c4 IN ())) IS TRUE) ASC);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c0)/(x'd508'))) IS TRUE)) ORDER BY ((CAST(rt1.c4 AS REAL)) BETWEEN (rt1.c4) AND (rt1.c2 COLLATE RTRIM))  NULLS FIRST, (((rt1.c4 IN ())) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)/(x'd508'))) IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c4 AS REAL)) BETWEEN (rt1.c4) AND (rt1.c2 COLLATE RTRIM))  NULLS FIRST, (((rt1.c4 IN ())) IS TRUE) ASC);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c0)/(x'd508'))) IS TRUE)) ORDER BY ((CAST(rt1.c4 AS REAL)) BETWEEN (rt1.c4) AND (rt1.c2 COLLATE RTRIM))  NULLS FIRST, (((rt1.c4 IN ())) IS TRUE) ASC;
SELECT * FROM rt2, rt0 WHERE (((rt0.c3)>>(rt2.c2))) ORDER BY ((((NULL) NOTNULL))AND(TOTAL_CHANGES()))  NULLS FIRST, (((((rt2.c1 IN ()))OR(TRIM(rt2.c0))))AND(((x'') ISNULL)));
SELECT SUM(count) FROM (SELECT ((((rt0.c3)>>(rt2.c2))) IS TRUE)  as count FROM rt2, rt0 ORDER BY ((((NULL) NOTNULL))AND(TOTAL_CHANGES()))  NULLS FIRST, (((((rt2.c1 IN ()))OR(TRIM(rt2.c0))))AND(((x'') ISNULL))));
SELECT * FROM rt2, rt0 WHERE (((rt0.c3)>>(rt2.c2))) ORDER BY ((((NULL) NOTNULL))AND(TOTAL_CHANGES()))  NULLS FIRST, (((((rt2.c1 IN ()))OR(TRIM(rt2.c0))))AND(((x'') ISNULL)));
SELECT SUM(count) FROM (SELECT ((((rt0.c3)>>(rt2.c2))) IS TRUE)  as count FROM rt2, rt0 ORDER BY ((((NULL) NOTNULL))AND(TOTAL_CHANGES()))  NULLS FIRST, (((((rt2.c1 IN ()))OR(TRIM(rt2.c0))))AND(((x'') ISNULL))));
SELECT * FROM rt2, rt0 WHERE (((rt0.c3)>>(rt2.c2))) ORDER BY ((((NULL) NOTNULL))AND(TOTAL_CHANGES()))  NULLS FIRST, (((((rt2.c1 IN ()))OR(TRIM(rt2.c0))))AND(((x'') ISNULL)));
SELECT ALL COUNT(*) FROM rt1 WHERE (NULL) ORDER BY CASE json_extract(rt1.c2, rt1.c4)  WHEN ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c0)) THEN rt1.c4 WHEN rt1.c4 THEN CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c3 END WHEN DATETIME(rt1.c1, rt1.c3, rt1.c2) THEN ((rt1.c4)GLOB(rt1.c1)) END ASC, (((rt1.c0) NOT BETWEEN (rt1.c4) AND (x'b98055fe')) IN ());
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1 ORDER BY CASE json_extract(rt1.c2, rt1.c4)  WHEN ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c0)) THEN rt1.c4 WHEN rt1.c4 THEN CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c3 END WHEN DATETIME(rt1.c1, rt1.c3, rt1.c2) THEN ((rt1.c4)GLOB(rt1.c1)) END ASC, (((rt1.c0) NOT BETWEEN (rt1.c4) AND (x'b98055fe')) IN ()));
SELECT ALL COUNT(*) FROM rt1 WHERE (NULL) ORDER BY CASE json_extract(rt1.c2, rt1.c4)  WHEN ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c0)) THEN rt1.c4 WHEN rt1.c4 THEN CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c3 END WHEN DATETIME(rt1.c1, rt1.c3, rt1.c2) THEN ((rt1.c4)GLOB(rt1.c1)) END ASC, (((rt1.c0) NOT BETWEEN (rt1.c4) AND (x'b98055fe')) IN ());
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1 ORDER BY CASE json_extract(rt1.c2, rt1.c4)  WHEN ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c0)) THEN rt1.c4 WHEN rt1.c4 THEN CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c3 END WHEN DATETIME(rt1.c1, rt1.c3, rt1.c2) THEN ((rt1.c4)GLOB(rt1.c1)) END ASC, (((rt1.c0) NOT BETWEEN (rt1.c4) AND (x'b98055fe')) IN ()));
SELECT ALL COUNT(*) FROM rt1 WHERE (NULL) ORDER BY CASE json_extract(rt1.c2, rt1.c4)  WHEN ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c0)) THEN rt1.c4 WHEN rt1.c4 THEN CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c3 END WHEN DATETIME(rt1.c1, rt1.c3, rt1.c2) THEN ((rt1.c4)GLOB(rt1.c1)) END ASC, (((rt1.c0) NOT BETWEEN (rt1.c4) AND (x'b98055fe')) IN ());
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ()))>=((rt0.c1 IN (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ()))>=((rt0.c1 IN (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ()))>=((rt0.c1 IN (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ()))>=((rt0.c1 IN (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ()))>=((rt0.c1 IN (rt0.c1)))));
SELECT ALL COUNT(*) FROM rt2 FULL OUTER JOIN rt1 ON (((rt0.c3 COLLATE RTRIM))>((((-1.341015906E9)OR('0.10596619843811994'))))) FULL OUTER JOIN rt0 ON CHAR(((((rt2.c0)AND(rt0.c0)))OR('2*'))) WHERE ((+ (((rt0.c0) BETWEEN (rt0.c2) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c0) BETWEEN (rt0.c2) AND (rt1.c0))))) IS TRUE)  as count FROM rt2 FULL OUTER JOIN rt1 ON (((rt0.c3 COLLATE RTRIM))>((((-1.341015906E9)OR('0.10596619843811994'))))) FULL OUTER JOIN rt0 ON CHAR(((((rt2.c0)AND(rt0.c0)))OR('2*'))));
SELECT ALL COUNT(*) FROM rt2 FULL OUTER JOIN rt1 ON (((rt0.c3 COLLATE RTRIM))>((((-1.341015906E9)OR('0.10596619843811994'))))) FULL OUTER JOIN rt0 ON CHAR(((((rt2.c0)AND(rt0.c0)))OR('2*'))) WHERE ((+ (((rt0.c0) BETWEEN (rt0.c2) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c0) BETWEEN (rt0.c2) AND (rt1.c0))))) IS TRUE)  as count FROM rt2 FULL OUTER JOIN rt1 ON (((rt0.c3 COLLATE RTRIM))>((((-1.341015906E9)OR('0.10596619843811994'))))) FULL OUTER JOIN rt0 ON CHAR(((((rt2.c0)AND(rt0.c0)))OR('2*'))));
SELECT ALL * FROM rt0, rt2, rt1 WHERE ((((~ (rt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0, rt2, rt1);
SELECT ALL * FROM rt0, rt2, rt1 WHERE ((((~ (rt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0, rt2, rt1);
SELECT ALL * FROM rt0, rt2, rt1 WHERE ((((~ (rt0.c1))) NOT NULL));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3 IN ())) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 END) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN ())) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 END) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3 IN ())) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 END) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN ())) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 END) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3 IN ())) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 END) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT * FROM rt0, rt2, rt1 WHERE (TOTAL_CHANGES()) ORDER BY CASE WHEN rt2.c0 COLLATE NOCASE THEN CAST(rt1.c1 AS TEXT) ELSE ((rt2.c0)+(rt2.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM rt0, rt2, rt1 ORDER BY CASE WHEN rt2.c0 COLLATE NOCASE THEN CAST(rt1.c1 AS TEXT) ELSE ((rt2.c0)+(rt2.c0)) END ASC  NULLS FIRST);
SELECT * FROM rt0, rt2, rt1 WHERE (TOTAL_CHANGES()) ORDER BY CASE WHEN rt2.c0 COLLATE NOCASE THEN CAST(rt1.c1 AS TEXT) ELSE ((rt2.c0)+(rt2.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM rt0, rt2, rt1 ORDER BY CASE WHEN rt2.c0 COLLATE NOCASE THEN CAST(rt1.c1 AS TEXT) ELSE ((rt2.c0)+(rt2.c0)) END ASC  NULLS FIRST);
SELECT * FROM rt0, rt2, rt1 WHERE (TOTAL_CHANGES()) ORDER BY CASE WHEN rt2.c0 COLLATE NOCASE THEN CAST(rt1.c1 AS TEXT) ELSE ((rt2.c0)+(rt2.c0)) END ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt2, rt0, rt1 WHERE ((((((rt2.c2)AND(rt0.c0)))AND(rt2.c2)) IN (((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt1.c0))))) ORDER BY rt2.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt2.c2)AND(rt0.c0)))AND(rt2.c2)) IN (((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt1.c0))))) IS TRUE)  as count FROM rt2, rt0, rt1 ORDER BY rt2.c1 ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt2, rt0, rt1 WHERE ((((((rt2.c2)AND(rt0.c0)))AND(rt2.c2)) IN (((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt1.c0))))) ORDER BY rt2.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt2.c2)AND(rt0.c0)))AND(rt2.c2)) IN (((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt1.c0))))) IS TRUE)  as count FROM rt2, rt0, rt1 ORDER BY rt2.c1 ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt2, rt0, rt1 WHERE ((((((rt2.c2)AND(rt0.c0)))AND(rt2.c2)) IN (((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt1.c0))))) ORDER BY rt2.c1 ASC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (((rt1.c1 COLLATE BINARY) NOT BETWEEN (((rt1.c1)>=(rt1.c4))) AND (CASE WHEN rt1.c4 THEN rt1.c0 ELSE x'' END))) ORDER BY (CASE WHEN rt1.c0 THEN rt1.c3 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE BINARY) NOT BETWEEN (((rt1.c1)>=(rt1.c4))) AND (CASE WHEN rt1.c4 THEN rt1.c0 ELSE x'' END))) IS TRUE)  as count FROM rt1 ORDER BY (CASE WHEN rt1.c0 THEN rt1.c3 END IN ()) DESC);
SELECT ALL * FROM rt1 WHERE (((rt1.c1 COLLATE BINARY) NOT BETWEEN (((rt1.c1)>=(rt1.c4))) AND (CASE WHEN rt1.c4 THEN rt1.c0 ELSE x'' END))) ORDER BY (CASE WHEN rt1.c0 THEN rt1.c3 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE BINARY) NOT BETWEEN (((rt1.c1)>=(rt1.c4))) AND (CASE WHEN rt1.c4 THEN rt1.c0 ELSE x'' END))) IS TRUE)  as count FROM rt1 ORDER BY (CASE WHEN rt1.c0 THEN rt1.c3 END IN ()) DESC);
SELECT ALL * FROM rt1 WHERE (((rt1.c1 COLLATE BINARY) NOT BETWEEN (((rt1.c1)>=(rt1.c4))) AND (CASE WHEN rt1.c4 THEN rt1.c0 ELSE x'' END))) ORDER BY (CASE WHEN rt1.c0 THEN rt1.c3 END IN ()) DESC;
SELECT * FROM rt1, rt0 WHERE (((((rt0.c3)IS NOT(rt0.c1)))|(((rt0.c1)>=(NULL)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)IS NOT(rt0.c1)))|(((rt0.c1)>=(NULL))))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((((rt0.c3)IS NOT(rt0.c1)))|(((rt0.c1)>=(NULL)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)IS NOT(rt0.c1)))|(((rt0.c1)>=(NULL))))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((((rt0.c3)IS NOT(rt0.c1)))|(((rt0.c1)>=(NULL)))));
SELECT * FROM rt2, rt0 LEFT OUTER JOIN rt1 ON ((rt0.c2) ISNULL) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt2, rt0 LEFT OUTER JOIN rt1 ON ((rt0.c2) ISNULL));
SELECT * FROM rt2, rt0 LEFT OUTER JOIN rt1 ON ((rt0.c2) ISNULL) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt2, rt0 LEFT OUTER JOIN rt1 ON ((rt0.c2) ISNULL));
SELECT * FROM rt2, rt0 LEFT OUTER JOIN rt1 ON ((rt0.c2) ISNULL) WHERE (rt0.c1);
SELECT * FROM rt1, rt2 WHERE ((CASE rt2.c2  WHEN rt1.c3 THEN '5d' WHEN rt2.c2 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END IN ())) ORDER BY ((CASE rt2.c0  WHEN rt2.c1 THEN rt1.c0 WHEN x'' THEN '-1564267853' WHEN rt2.c1 THEN rt1.c1 ELSE rt2.c1 END) IS FALSE) ASC  NULLS LAST, COALESCE((~ (rt1.c2)), CASE WHEN rt2.c1 THEN rt2.c1 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE rt2.c2  WHEN rt1.c3 THEN '5d' WHEN rt2.c2 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END IN ())) IS TRUE)  as count FROM rt1, rt2 ORDER BY ((CASE rt2.c0  WHEN rt2.c1 THEN rt1.c0 WHEN x'' THEN '-1564267853' WHEN rt2.c1 THEN rt1.c1 ELSE rt2.c1 END) IS FALSE) ASC  NULLS LAST, COALESCE((~ (rt1.c2)), CASE WHEN rt2.c1 THEN rt2.c1 END)  NULLS FIRST);
SELECT * FROM rt1, rt2 WHERE ((CASE rt2.c2  WHEN rt1.c3 THEN '5d' WHEN rt2.c2 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END IN ())) ORDER BY ((CASE rt2.c0  WHEN rt2.c1 THEN rt1.c0 WHEN x'' THEN '-1564267853' WHEN rt2.c1 THEN rt1.c1 ELSE rt2.c1 END) IS FALSE) ASC  NULLS LAST, COALESCE((~ (rt1.c2)), CASE WHEN rt2.c1 THEN rt2.c1 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE rt2.c2  WHEN rt1.c3 THEN '5d' WHEN rt2.c2 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END IN ())) IS TRUE)  as count FROM rt1, rt2 ORDER BY ((CASE rt2.c0  WHEN rt2.c1 THEN rt1.c0 WHEN x'' THEN '-1564267853' WHEN rt2.c1 THEN rt1.c1 ELSE rt2.c1 END) IS FALSE) ASC  NULLS LAST, COALESCE((~ (rt1.c2)), CASE WHEN rt2.c1 THEN rt2.c1 END)  NULLS FIRST);
SELECT * FROM rt1, rt2 WHERE ((CASE rt2.c2  WHEN rt1.c3 THEN '5d' WHEN rt2.c2 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END IN ())) ORDER BY ((CASE rt2.c0  WHEN rt2.c1 THEN rt1.c0 WHEN x'' THEN '-1564267853' WHEN rt2.c1 THEN rt1.c1 ELSE rt2.c1 END) IS FALSE) ASC  NULLS LAST, COALESCE((~ (rt1.c2)), CASE WHEN rt2.c1 THEN rt2.c1 END)  NULLS FIRST;
SELECT * FROM rt2, rt1 WHERE (LIKELY(((((((((((((rt2.c1)OR(rt2.c2)))AND(rt2.c1)))OR(rt2.c1)))AND(rt1.c0)))OR(rt2.c1)))OR(rt1.c4))));
SELECT SUM(count) FROM (SELECT ((LIKELY(((((((((((((rt2.c1)OR(rt2.c2)))AND(rt2.c1)))OR(rt2.c1)))AND(rt1.c0)))OR(rt2.c1)))OR(rt1.c4)))) IS TRUE)  as count FROM rt2, rt1);
SELECT * FROM rt2, rt1 WHERE (LIKELY(((((((((((((rt2.c1)OR(rt2.c2)))AND(rt2.c1)))OR(rt2.c1)))AND(rt1.c0)))OR(rt2.c1)))OR(rt1.c4))));
SELECT SUM(count) FROM (SELECT ((LIKELY(((((((((((((rt2.c1)OR(rt2.c2)))AND(rt2.c1)))OR(rt2.c1)))AND(rt1.c0)))OR(rt2.c1)))OR(rt1.c4)))) IS TRUE)  as count FROM rt2, rt1);
SELECT * FROM rt2, rt1 WHERE (LIKELY(((((((((((((rt2.c1)OR(rt2.c2)))AND(rt2.c1)))OR(rt2.c1)))AND(rt1.c0)))OR(rt2.c1)))OR(rt1.c4))));
SELECT ALL * FROM rt0 WHERE ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c3))))>=(((((rt0.c0)) NOT BETWEEN (('')) AND ((rt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c3))))>=(((((rt0.c0)) NOT BETWEEN (('')) AND ((rt0.c0))))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c3))))>=(((((rt0.c0)) NOT BETWEEN (('')) AND ((rt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c3))))>=(((((rt0.c0)) NOT BETWEEN (('')) AND ((rt0.c0))))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c3))))>=(((((rt0.c0)) NOT BETWEEN (('')) AND ((rt0.c0)))))));
SELECT * FROM rt1 WHERE ((~ (rt1.c4 COLLATE NOCASE))) ORDER BY (('0.9397616492297545' COLLATE BINARY)>>(0.880614497281567)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt1.c4 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 ORDER BY (('0.9397616492297545' COLLATE BINARY)>>(0.880614497281567)) ASC);
SELECT * FROM rt1 WHERE ((~ (rt1.c4 COLLATE NOCASE))) ORDER BY (('0.9397616492297545' COLLATE BINARY)>>(0.880614497281567)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt1.c4 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 ORDER BY (('0.9397616492297545' COLLATE BINARY)>>(0.880614497281567)) ASC);
SELECT * FROM rt1 WHERE ((~ (rt1.c4 COLLATE NOCASE))) ORDER BY (('0.9397616492297545' COLLATE BINARY)>>(0.880614497281567)) ASC;
SELECT COUNT(*) FROM rt1, rt0, rt2 WHERE (GLOB(((rt2.c0)%(rt0.c1)), (rt1.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((GLOB(((rt2.c0)%(rt0.c1)), (rt1.c1 IN ()))) IS TRUE)  as count FROM rt1, rt0, rt2);
SELECT COUNT(*) FROM rt1, rt0, rt2 WHERE (GLOB(((rt2.c0)%(rt0.c1)), (rt1.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((GLOB(((rt2.c0)%(rt0.c1)), (rt1.c1 IN ()))) IS TRUE)  as count FROM rt1, rt0, rt2);
SELECT COUNT(*) FROM rt1, rt0, rt2 WHERE (GLOB(((rt2.c0)%(rt0.c1)), (rt1.c1 IN ())));
SELECT * FROM rt2, rt0, rt1 WHERE (((rt0.c2 COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM rt2, rt0, rt1);
SELECT * FROM rt2, rt0, rt1 WHERE (((rt0.c2 COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM rt2, rt0, rt1);
SELECT * FROM rt2, rt0, rt1 WHERE (((rt0.c2 COLLATE NOCASE) IS FALSE));
SELECT COUNT(*) FROM rt1, rt2, rt0 WHERE (((((rt0.c2)!=(rt0.c1)))<(CASE WHEN rt0.c3 THEN '1994324130' ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)!=(rt0.c1)))<(CASE WHEN rt0.c3 THEN '1994324130' ELSE rt0.c2 END))) IS TRUE)  as count FROM rt1, rt2, rt0);
SELECT COUNT(*) FROM rt1, rt2, rt0 WHERE (((((rt0.c2)!=(rt0.c1)))<(CASE WHEN rt0.c3 THEN '1994324130' ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)!=(rt0.c1)))<(CASE WHEN rt0.c3 THEN '1994324130' ELSE rt0.c2 END))) IS TRUE)  as count FROM rt1, rt2, rt0);
SELECT COUNT(*) FROM rt1, rt2, rt0 WHERE (((((rt0.c2)!=(rt0.c1)))<(CASE WHEN rt0.c3 THEN '1994324130' ELSE rt0.c2 END)));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt2 ON CAST(((rt0.c0)LIKE(rt2.c1)) AS NUMERIC) WHERE (0.7719528874955047) ORDER BY ((((rt2.c1)%(rt2.c2)))>>(((((rt2.c0)AND(rt2.c0)))AND(NULL))))  NULLS FIRST, (((NOT (rt0.c2))) NOT BETWEEN (((rt0.c0)+(rt0.c1))) AND (((rt0.c2) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.7719528874955047) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt2 ON CAST(((rt0.c0)LIKE(rt2.c1)) AS NUMERIC) ORDER BY ((((rt2.c1)%(rt2.c2)))>>(((((rt2.c0)AND(rt2.c0)))AND(NULL))))  NULLS FIRST, (((NOT (rt0.c2))) NOT BETWEEN (((rt0.c0)+(rt0.c1))) AND (((rt0.c2) IS TRUE)))  NULLS LAST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt2 ON CAST(((rt0.c0)LIKE(rt2.c1)) AS NUMERIC) WHERE (0.7719528874955047) ORDER BY ((((rt2.c1)%(rt2.c2)))>>(((((rt2.c0)AND(rt2.c0)))AND(NULL))))  NULLS FIRST, (((NOT (rt0.c2))) NOT BETWEEN (((rt0.c0)+(rt0.c1))) AND (((rt0.c2) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.7719528874955047) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt2 ON CAST(((rt0.c0)LIKE(rt2.c1)) AS NUMERIC) ORDER BY ((((rt2.c1)%(rt2.c2)))>>(((((rt2.c0)AND(rt2.c0)))AND(NULL))))  NULLS FIRST, (((NOT (rt0.c2))) NOT BETWEEN (((rt0.c0)+(rt0.c1))) AND (((rt0.c2) IS TRUE)))  NULLS LAST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt2 ON CAST(((rt0.c0)LIKE(rt2.c1)) AS NUMERIC) WHERE (0.7719528874955047) ORDER BY ((((rt2.c1)%(rt2.c2)))>>(((((rt2.c0)AND(rt2.c0)))AND(NULL))))  NULLS FIRST, (((NOT (rt0.c2))) NOT BETWEEN (((rt0.c0)+(rt0.c1))) AND (((rt0.c2) IS TRUE)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, rt0 CROSS JOIN rt2 ON rt2.c1 WHERE ((((('')AND(CASE WHEN rt0.c3 THEN x'8a8a' ELSE rt0.c2 END)))AND((rt1.c4 IN (rt0.c2, rt2.c0))))) ORDER BY CAST((NOT (rt2.c0)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((('')AND(CASE WHEN rt0.c3 THEN x'8a8a' ELSE rt0.c2 END)))AND((rt1.c4 IN (rt0.c2, rt2.c0))))) IS TRUE)  as count FROM rt1, rt0 CROSS JOIN rt2 ON rt2.c1 ORDER BY CAST((NOT (rt2.c0)) AS NUMERIC) DESC);
SELECT ALL COUNT(*) FROM rt1, rt0 CROSS JOIN rt2 ON rt2.c1 WHERE ((((('')AND(CASE WHEN rt0.c3 THEN x'8a8a' ELSE rt0.c2 END)))AND((rt1.c4 IN (rt0.c2, rt2.c0))))) ORDER BY CAST((NOT (rt2.c0)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((('')AND(CASE WHEN rt0.c3 THEN x'8a8a' ELSE rt0.c2 END)))AND((rt1.c4 IN (rt0.c2, rt2.c0))))) IS TRUE)  as count FROM rt1, rt0 CROSS JOIN rt2 ON rt2.c1 ORDER BY CAST((NOT (rt2.c0)) AS NUMERIC) DESC);
SELECT ALL COUNT(*) FROM rt1, rt0 CROSS JOIN rt2 ON rt2.c1 WHERE ((((('')AND(CASE WHEN rt0.c3 THEN x'8a8a' ELSE rt0.c2 END)))AND((rt1.c4 IN (rt0.c2, rt2.c0))))) ORDER BY CAST((NOT (rt2.c0)) AS NUMERIC) DESC;
SELECT ALL COUNT(*) FROM rt0, rt2 INNER JOIN rt1 ON CAST(((((rt1.c4)AND(rt0.c2)))AND(rt1.c1)) AS NUMERIC) WHERE ('') ORDER BY (+ (((rt1.c1) BETWEEN ('') AND (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0, rt2 INNER JOIN rt1 ON CAST(((((rt1.c4)AND(rt0.c2)))AND(rt1.c1)) AS NUMERIC) ORDER BY (+ (((rt1.c1) BETWEEN ('') AND (rt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt2 INNER JOIN rt1 ON CAST(((((rt1.c4)AND(rt0.c2)))AND(rt1.c1)) AS NUMERIC) WHERE ('') ORDER BY (+ (((rt1.c1) BETWEEN ('') AND (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0, rt2 INNER JOIN rt1 ON CAST(((((rt1.c4)AND(rt0.c2)))AND(rt1.c1)) AS NUMERIC) ORDER BY (+ (((rt1.c1) BETWEEN ('') AND (rt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt2 INNER JOIN rt1 ON CAST(((((rt1.c4)AND(rt0.c2)))AND(rt1.c1)) AS NUMERIC) WHERE ('') ORDER BY (+ (((rt1.c1) BETWEEN ('') AND (rt0.c0))))  NULLS LAST;
SELECT ALL * FROM rt2, rt1 WHERE ((((((x'')) NOT BETWEEN ((rt1.c0)) AND ((rt2.c1)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((x'')) NOT BETWEEN ((rt1.c0)) AND ((rt2.c1)))) ISNULL)) IS TRUE)  as count FROM rt2, rt1);
SELECT ALL * FROM rt2, rt1 WHERE ((((((x'')) NOT BETWEEN ((rt1.c0)) AND ((rt2.c1)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((x'')) NOT BETWEEN ((rt1.c0)) AND ((rt2.c1)))) ISNULL)) IS TRUE)  as count FROM rt2, rt1);
SELECT ALL * FROM rt2, rt1 WHERE ((((((x'')) NOT BETWEEN ((rt1.c0)) AND ((rt2.c1)))) ISNULL));
SELECT ALL COUNT(*) FROM rt1, rt0, rt2 WHERE ((- ((- (rt0.c3))))) ORDER BY (((rt1.c3) IS FALSE) IN ((+ (rt1.c4)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((- (rt0.c3))))) IS TRUE)  as count FROM rt1, rt0, rt2 ORDER BY (((rt1.c3) IS FALSE) IN ((+ (rt1.c4)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0, rt2 WHERE ((- ((- (rt0.c3))))) ORDER BY (((rt1.c3) IS FALSE) IN ((+ (rt1.c4)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((- (rt0.c3))))) IS TRUE)  as count FROM rt1, rt0, rt2 ORDER BY (((rt1.c3) IS FALSE) IN ((+ (rt1.c4)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0, rt2 WHERE ((- ((- (rt0.c3))))) ORDER BY (((rt1.c3) IS FALSE) IN ((+ (rt1.c4)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, rt2 WHERE (((((((((rt2.c0)OR(-1.731827408E9)))AND(rt2.c2 COLLATE RTRIM)))OR(CASE rt2.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt2.c1 WHEN rt2.c2 THEN rt2.c0 END)))AND((rt2.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt2.c0)OR(-1.731827408E9)))AND(rt2.c2 COLLATE RTRIM)))OR(CASE rt2.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt2.c1 WHEN rt2.c2 THEN rt2.c0 END)))AND((rt2.c2 IN ())))) IS TRUE)  as count FROM rt0, rt2);
SELECT COUNT(*) FROM rt0, rt2 WHERE (((((((((rt2.c0)OR(-1.731827408E9)))AND(rt2.c2 COLLATE RTRIM)))OR(CASE rt2.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt2.c1 WHEN rt2.c2 THEN rt2.c0 END)))AND((rt2.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt2.c0)OR(-1.731827408E9)))AND(rt2.c2 COLLATE RTRIM)))OR(CASE rt2.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt2.c1 WHEN rt2.c2 THEN rt2.c0 END)))AND((rt2.c2 IN ())))) IS TRUE)  as count FROM rt0, rt2);
SELECT COUNT(*) FROM rt0, rt2 WHERE (((((((((rt2.c0)OR(-1.731827408E9)))AND(rt2.c2 COLLATE RTRIM)))OR(CASE rt2.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt2.c1 WHEN rt2.c2 THEN rt2.c0 END)))AND((rt2.c2 IN ()))));
SELECT ALL * FROM rt1, rt2 WHERE (CAST(rt1.c4 COLLATE NOCASE AS REAL)) ORDER BY (- ((rt1.c2 IN (rt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c4 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM rt1, rt2 ORDER BY (- ((rt1.c2 IN (rt1.c1))))  NULLS FIRST);
SELECT ALL * FROM rt1, rt2 WHERE (CAST(rt1.c4 COLLATE NOCASE AS REAL)) ORDER BY (- ((rt1.c2 IN (rt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c4 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM rt1, rt2 ORDER BY (- ((rt1.c2 IN (rt1.c1))))  NULLS FIRST);
SELECT ALL * FROM rt1, rt2 WHERE (CAST(rt1.c4 COLLATE NOCASE AS REAL)) ORDER BY (- ((rt1.c2 IN (rt1.c1))))  NULLS FIRST;
SELECT ALL * FROM rt1, rt2 INNER JOIN rt0 ON (NULLIF(rt2.c0, 0Xffffffffe16e4eda) IN ()) WHERE (LOWER(((rt2.c2)|('1111108082'))));
SELECT SUM(count) FROM (SELECT ((LOWER(((rt2.c2)|('1111108082')))) IS TRUE)  as count FROM rt1, rt2 INNER JOIN rt0 ON (NULLIF(rt2.c0, 0Xffffffffe16e4eda) IN ()));
SELECT ALL * FROM rt1, rt2 INNER JOIN rt0 ON (NULLIF(rt2.c0, 0Xffffffffe16e4eda) IN ()) WHERE (LOWER(((rt2.c2)|('1111108082'))));
SELECT SUM(count) FROM (SELECT ((LOWER(((rt2.c2)|('1111108082')))) IS TRUE)  as count FROM rt1, rt2 INNER JOIN rt0 ON (NULLIF(rt2.c0, 0Xffffffffe16e4eda) IN ()));
SELECT ALL * FROM rt1, rt2 INNER JOIN rt0 ON (NULLIF(rt2.c0, 0Xffffffffe16e4eda) IN ()) WHERE (LOWER(((rt2.c2)|('1111108082'))));
SELECT ALL * FROM rt2, rt0 FULL OUTER JOIN rt1 ON ((((rt1.c4) ISNULL))AND(((rt1.c4)<(rt1.c3)))) WHERE (UNICODE(((rt1.c2)==(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((UNICODE(((rt1.c2)==(rt0.c0)))) IS TRUE)  as count FROM rt2, rt0 FULL OUTER JOIN rt1 ON ((((rt1.c4) ISNULL))AND(((rt1.c4)<(rt1.c3)))));
SELECT ALL * FROM rt2, rt0 FULL OUTER JOIN rt1 ON ((((rt1.c4) ISNULL))AND(((rt1.c4)<(rt1.c3)))) WHERE (UNICODE(((rt1.c2)==(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((UNICODE(((rt1.c2)==(rt0.c0)))) IS TRUE)  as count FROM rt2, rt0 FULL OUTER JOIN rt1 ON ((((rt1.c4) ISNULL))AND(((rt1.c4)<(rt1.c3)))));
SELECT ALL * FROM rt2, rt0 FULL OUTER JOIN rt1 ON ((((rt1.c4) ISNULL))AND(((rt1.c4)<(rt1.c3)))) WHERE (UNICODE(((rt1.c2)==(rt0.c0))));
SELECT ALL COUNT(*) FROM rt2, rt1, rt0 WHERE ((((((NULL)>=(rt1.c2))))==(((rt0.c3 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL)>=(rt1.c2))))==(((rt0.c3 IN ()))))) IS TRUE)  as count FROM rt2, rt1, rt0);
SELECT ALL COUNT(*) FROM rt2, rt1, rt0 WHERE ((((((NULL)>=(rt1.c2))))==(((rt0.c3 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL)>=(rt1.c2))))==(((rt0.c3 IN ()))))) IS TRUE)  as count FROM rt2, rt1, rt0);
SELECT ALL COUNT(*) FROM rt2, rt1, rt0 WHERE ((((((NULL)>=(rt1.c2))))==(((rt0.c3 IN ())))));
SELECT COUNT(*) FROM rt0, rt1, rt2 WHERE ((CAST(rt1.c4 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt1.c4 AS REAL) IN ())) IS TRUE)  as count FROM rt0, rt1, rt2);
SELECT COUNT(*) FROM rt0, rt1, rt2 WHERE ((CAST(rt1.c4 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt1.c4 AS REAL) IN ())) IS TRUE)  as count FROM rt0, rt1, rt2);
SELECT COUNT(*) FROM rt0, rt1, rt2 WHERE ((CAST(rt1.c4 AS REAL) IN ()));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN rt2 ON (((rt2.c0, rt2.c1, 0.9671961602024788)) NOT BETWEEN ((((((rt0.c0)AND(rt0.c2)))OR(rt1.c2)), CASE rt2.c1  WHEN rt1.c2 THEN rt0.c1 END, (((rt2.c2))<((rt2.c0))))) AND ((rt1.c0 COLLATE BINARY, '409749354', ABS(rt0.c0)))) CROSS JOIN rt0 ON (((((rt1.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND(CAST(rt2.c0 AS REAL))) WHERE (CAST(((rt1.c1) IS FALSE) AS NUMERIC)) ORDER BY NULLIF(0x4be8f673, (((rt2.c0))>=((rt0.c2))))  NULLS FIRST, RTRIM(((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c1) IS FALSE) AS NUMERIC)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt2 ON (((rt2.c0, rt2.c1, 0.9671961602024788)) NOT BETWEEN ((((((rt0.c0)AND(rt0.c2)))OR(rt1.c2)), CASE rt2.c1  WHEN rt1.c2 THEN rt0.c1 END, (((rt2.c2))<((rt2.c0))))) AND ((rt1.c0 COLLATE BINARY, '409749354', ABS(rt0.c0)))) CROSS JOIN rt0 ON (((((rt1.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND(CAST(rt2.c0 AS REAL))) ORDER BY NULLIF(0X4be8f673, (((rt2.c0))>=((rt0.c2))))  NULLS FIRST, RTRIM(((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c0))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN rt2 ON (((rt2.c0, rt2.c1, 0.9671961602024788)) NOT BETWEEN ((((((rt0.c0)AND(rt0.c2)))OR(rt1.c2)), CASE rt2.c1  WHEN rt1.c2 THEN rt0.c1 END, (((rt2.c2))<((rt2.c0))))) AND ((rt1.c0 COLLATE BINARY, '409749354', ABS(rt0.c0)))) CROSS JOIN rt0 ON (((((rt1.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND(CAST(rt2.c0 AS REAL))) WHERE (CAST(((rt1.c1) IS FALSE) AS NUMERIC)) ORDER BY NULLIF(0x4be8f673, (((rt2.c0))>=((rt0.c2))))  NULLS FIRST, RTRIM(((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c1) IS FALSE) AS NUMERIC)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt2 ON (((rt2.c0, rt2.c1, 0.9671961602024788)) NOT BETWEEN ((((((rt0.c0)AND(rt0.c2)))OR(rt1.c2)), CASE rt2.c1  WHEN rt1.c2 THEN rt0.c1 END, (((rt2.c2))<((rt2.c0))))) AND ((rt1.c0 COLLATE BINARY, '409749354', ABS(rt0.c0)))) CROSS JOIN rt0 ON (((((rt1.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND(CAST(rt2.c0 AS REAL))) ORDER BY NULLIF(0X4be8f673, (((rt2.c0))>=((rt0.c2))))  NULLS FIRST, RTRIM(((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c0))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN rt2 ON (((rt2.c0, rt2.c1, 0.9671961602024788)) NOT BETWEEN ((((((rt0.c0)AND(rt0.c2)))OR(rt1.c2)), CASE rt2.c1  WHEN rt1.c2 THEN rt0.c1 END, (((rt2.c2))<((rt2.c0))))) AND ((rt1.c0 COLLATE BINARY, '409749354', ABS(rt0.c0)))) CROSS JOIN rt0 ON (((((rt1.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND(CAST(rt2.c0 AS REAL))) WHERE (CAST(((rt1.c1) IS FALSE) AS NUMERIC)) ORDER BY NULLIF(0x4be8f673, (((rt2.c0))>=((rt0.c2))))  NULLS FIRST, RTRIM(((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c0))) ASC  NULLS LAST;
SELECT ALL * FROM rt1, rt0, rt2 WHERE (CAST(rt0.c2 COLLATE RTRIM AS TEXT)) ORDER BY (((x'd36f', rt1.c0 COLLATE RTRIM, rt1.c2))<((((rt0.c1)*(rt1.c0)), ((rt1.c2)%(rt1.c4)), CAST(rt0.c3 AS REAL))));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM rt1, rt0, rt2 ORDER BY (((x'd36f', rt1.c0 COLLATE RTRIM, rt1.c2))<((((rt0.c1)*(rt1.c0)), ((rt1.c2)%(rt1.c4)), CAST(rt0.c3 AS REAL)))));
SELECT ALL * FROM rt1, rt0, rt2 WHERE (CAST(rt0.c2 COLLATE RTRIM AS TEXT)) ORDER BY (((x'd36f', rt1.c0 COLLATE RTRIM, rt1.c2))<((((rt0.c1)*(rt1.c0)), ((rt1.c2)%(rt1.c4)), CAST(rt0.c3 AS REAL))));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM rt1, rt0, rt2 ORDER BY (((x'd36f', rt1.c0 COLLATE RTRIM, rt1.c2))<((((rt0.c1)*(rt1.c0)), ((rt1.c2)%(rt1.c4)), CAST(rt0.c3 AS REAL)))));
SELECT ALL * FROM rt1, rt0, rt2 WHERE (CAST(rt0.c2 COLLATE RTRIM AS TEXT)) ORDER BY (((x'd36f', rt1.c0 COLLATE RTRIM, rt1.c2))<((((rt0.c1)*(rt1.c0)), ((rt1.c2)%(rt1.c4)), CAST(rt0.c3 AS REAL))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN rt2 ON x'' INNER JOIN rt1 ON rt2.c2 WHERE (CASE (NOT (rt0.c0))  WHEN rt2.c2 COLLATE BINARY THEN (rt0.c3 IN ()) ELSE '-1981189248' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (rt0.c0))  WHEN rt2.c2 COLLATE BINARY THEN (rt0.c3 IN ()) ELSE '-1981189248' END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt2 ON x'' INNER JOIN rt1 ON rt2.c2);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN rt2 ON x'' INNER JOIN rt1 ON rt2.c2 WHERE (CASE (NOT (rt0.c0))  WHEN rt2.c2 COLLATE BINARY THEN (rt0.c3 IN ()) ELSE '-1981189248' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (rt0.c0))  WHEN rt2.c2 COLLATE BINARY THEN (rt0.c3 IN ()) ELSE '-1981189248' END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt2 ON x'' INNER JOIN rt1 ON rt2.c2);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN rt2 ON x'' INNER JOIN rt1 ON rt2.c2 WHERE (CASE (NOT (rt0.c0))  WHEN rt2.c2 COLLATE BINARY THEN (rt0.c3 IN ()) ELSE '-1981189248' END);
SELECT ALL COUNT(*) FROM rt0, rt2 LEFT OUTER JOIN rt1 ON (((rt1.c4) NOTNULL) IN ()) WHERE (CAST(rt1.c3 COLLATE BINARY AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c3 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM rt0, rt2 LEFT OUTER JOIN rt1 ON (((rt1.c4) NOTNULL) IN ()));
SELECT ALL COUNT(*) FROM rt0, rt2 LEFT OUTER JOIN rt1 ON (((rt1.c4) NOTNULL) IN ()) WHERE (CAST(rt1.c3 COLLATE BINARY AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c3 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM rt0, rt2 LEFT OUTER JOIN rt1 ON (((rt1.c4) NOTNULL) IN ()));
SELECT ALL COUNT(*) FROM rt0, rt2 LEFT OUTER JOIN rt1 ON (((rt1.c4) NOTNULL) IN ()) WHERE (CAST(rt1.c3 COLLATE BINARY AS INTEGER));
SELECT ALL * FROM rt1 WHERE ((((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2))))<=((CASE rt1.c3  WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c1 END)))) ORDER BY ((((((((rt1.c3)OR(rt1.c2)))OR(rt1.c3)))AND(((rt1.c2) IS FALSE))))OR(((rt1.c2)IS NOT(rt1.c4))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2))))<=((CASE rt1.c3  WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c1 END)))) IS TRUE)  as count FROM rt1 ORDER BY ((((((((rt1.c3)OR(rt1.c2)))OR(rt1.c3)))AND(((rt1.c2) IS FALSE))))OR(((rt1.c2)IS NOT(rt1.c4))))  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2))))<=((CASE rt1.c3  WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c1 END)))) ORDER BY ((((((((rt1.c3)OR(rt1.c2)))OR(rt1.c3)))AND(((rt1.c2) IS FALSE))))OR(((rt1.c2)IS NOT(rt1.c4))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2))))<=((CASE rt1.c3  WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c1 END)))) IS TRUE)  as count FROM rt1 ORDER BY ((((((((rt1.c3)OR(rt1.c2)))OR(rt1.c3)))AND(((rt1.c2) IS FALSE))))OR(((rt1.c2)IS NOT(rt1.c4))))  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2))))<=((CASE rt1.c3  WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c1 END)))) ORDER BY ((((((((rt1.c3)OR(rt1.c2)))OR(rt1.c3)))AND(((rt1.c2) IS FALSE))))OR(((rt1.c2)IS NOT(rt1.c4))))  NULLS LAST;
SELECT ALL * FROM rt1, rt2 WHERE (((0.8849495682182481)||(((rt1.c3) IS TRUE)))) ORDER BY CAST(CAST(rt2.c1 AS REAL) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((((0.8849495682182481)||(((rt1.c3) IS TRUE)))) IS TRUE)  as count FROM rt1, rt2 ORDER BY CAST(CAST(rt2.c1 AS REAL) AS REAL) DESC);
SELECT ALL * FROM rt1, rt2 WHERE (((0.8849495682182481)||(((rt1.c3) IS TRUE)))) ORDER BY CAST(CAST(rt2.c1 AS REAL) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((((0.8849495682182481)||(((rt1.c3) IS TRUE)))) IS TRUE)  as count FROM rt1, rt2 ORDER BY CAST(CAST(rt2.c1 AS REAL) AS REAL) DESC);
SELECT ALL * FROM rt1, rt2 WHERE (((0.8849495682182481)||(((rt1.c3) IS TRUE)))) ORDER BY CAST(CAST(rt2.c1 AS REAL) AS REAL) DESC;
SELECT * FROM rt1 LEFT OUTER JOIN rt2 ON ((((((rt0.c2)AND(rt0.c1)))OR(rt1.c1)))-(NULL)) CROSS JOIN rt0 ON ((CASE rt2.c2  WHEN rt2.c2 THEN rt2.c2 WHEN rt1.c2 THEN rt2.c1 WHEN rt1.c2 THEN rt2.c0 ELSE rt1.c4 END)LIKE(CASE WHEN rt1.c2 THEN rt2.c2 ELSE rt1.c1 END)) WHERE (CASE (rt2.c1 IN ())  WHEN (('.jd')==(rt2.c2)) THEN (~ (rt1.c3)) WHEN 0x4be8f673 THEN CASE WHEN '-605660008' THEN rt2.c0 ELSE rt1.c0 END WHEN (NULL IN ()) THEN ((rt0.c1)<('')) END);
SELECT SUM(count) FROM (SELECT ((CASE (rt2.c1 IN ())  WHEN (('.jd')==(rt2.c2)) THEN (~ (rt1.c3)) WHEN 0X4be8f673 THEN CASE WHEN '-605660008' THEN rt2.c0 ELSE rt1.c0 END WHEN (NULL IN ()) THEN ((rt0.c1)<('')) END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt2 ON ((((((rt0.c2)AND(rt0.c1)))OR(rt1.c1)))-(NULL)) CROSS JOIN rt0 ON ((CASE rt2.c2  WHEN rt2.c2 THEN rt2.c2 WHEN rt1.c2 THEN rt2.c1 WHEN rt1.c2 THEN rt2.c0 ELSE rt1.c4 END)LIKE(CASE WHEN rt1.c2 THEN rt2.c2 ELSE rt1.c1 END)));
SELECT * FROM rt1 LEFT OUTER JOIN rt2 ON ((((((rt0.c2)AND(rt0.c1)))OR(rt1.c1)))-(NULL)) CROSS JOIN rt0 ON ((CASE rt2.c2  WHEN rt2.c2 THEN rt2.c2 WHEN rt1.c2 THEN rt2.c1 WHEN rt1.c2 THEN rt2.c0 ELSE rt1.c4 END)LIKE(CASE WHEN rt1.c2 THEN rt2.c2 ELSE rt1.c1 END)) WHERE (CASE (rt2.c1 IN ())  WHEN (('.jd')==(rt2.c2)) THEN (~ (rt1.c3)) WHEN 0x4be8f673 THEN CASE WHEN '-605660008' THEN rt2.c0 ELSE rt1.c0 END WHEN (NULL IN ()) THEN ((rt0.c1)<('')) END);
SELECT SUM(count) FROM (SELECT ((CASE (rt2.c1 IN ())  WHEN (('.jd')==(rt2.c2)) THEN (~ (rt1.c3)) WHEN 0X4be8f673 THEN CASE WHEN '-605660008' THEN rt2.c0 ELSE rt1.c0 END WHEN (NULL IN ()) THEN ((rt0.c1)<('')) END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt2 ON ((((((rt0.c2)AND(rt0.c1)))OR(rt1.c1)))-(NULL)) CROSS JOIN rt0 ON ((CASE rt2.c2  WHEN rt2.c2 THEN rt2.c2 WHEN rt1.c2 THEN rt2.c1 WHEN rt1.c2 THEN rt2.c0 ELSE rt1.c4 END)LIKE(CASE WHEN rt1.c2 THEN rt2.c2 ELSE rt1.c1 END)));
SELECT ALL * FROM rt2, rt0 WHERE ((((+ (rt0.c1)))>(CASE WHEN rt0.c1 THEN 0.25096362344428047 ELSE rt2.c0 END))) ORDER BY ((rt0.c1) NOTNULL);
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1)))>(CASE WHEN rt0.c1 THEN 0.25096362344428047 ELSE rt2.c0 END))) IS TRUE)  as count FROM rt2, rt0 ORDER BY ((rt0.c1) NOTNULL));
SELECT ALL * FROM rt2, rt0 WHERE ((((+ (rt0.c1)))>(CASE WHEN rt0.c1 THEN 0.25096362344428047 ELSE rt2.c0 END))) ORDER BY ((rt0.c1) NOTNULL);
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1)))>(CASE WHEN rt0.c1 THEN 0.25096362344428047 ELSE rt2.c0 END))) IS TRUE)  as count FROM rt2, rt0 ORDER BY ((rt0.c1) NOTNULL));
SELECT ALL * FROM rt2, rt0 WHERE ((((+ (rt0.c1)))>(CASE WHEN rt0.c1 THEN 0.25096362344428047 ELSE rt2.c0 END))) ORDER BY ((rt0.c1) NOTNULL);
SELECT ALL * FROM rt1, rt0 WHERE (((rt1.c0 COLLATE NOCASE)*(((rt0.c3) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 COLLATE NOCASE)*(((rt0.c3) ISNULL)))) IS TRUE)  as count FROM rt1, rt0 NOT INDEXED);
SELECT ALL * FROM rt1, rt0 WHERE (((rt1.c0 COLLATE NOCASE)*(((rt0.c3) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 COLLATE NOCASE)*(((rt0.c3) ISNULL)))) IS TRUE)  as count FROM rt1, rt0 NOT INDEXED);
SELECT ALL * FROM rt1, rt0 WHERE (((rt1.c0 COLLATE NOCASE)*(((rt0.c3) ISNULL))));
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON ((json_object(rt1.c2, rt0.c0)) BETWEEN (CAST(rt1.c2 AS INTEGER)) AND (TYPEOF(rt0.c2))) INNER JOIN rt2 ON ((((rt2.c0)>>(rt1.c2))) IS FALSE) WHERE (7.04454564E8);
SELECT SUM(count) FROM (SELECT ALL ((7.04454564E8) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON ((json_object(rt1.c2, rt0.c0)) BETWEEN (CAST(rt1.c2 AS INTEGER)) AND (TYPEOF(rt0.c2))) INNER JOIN rt2 ON ((((rt2.c0)>>(rt1.c2))) IS FALSE));
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON ((json_object(rt1.c2, rt0.c0)) BETWEEN (CAST(rt1.c2 AS INTEGER)) AND (TYPEOF(rt0.c2))) INNER JOIN rt2 ON ((((rt2.c0)>>(rt1.c2))) IS FALSE) WHERE (7.04454564E8);
SELECT SUM(count) FROM (SELECT ALL ((7.04454564E8) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON ((json_object(rt1.c2, rt0.c0)) BETWEEN (CAST(rt1.c2 AS INTEGER)) AND (TYPEOF(rt0.c2))) INNER JOIN rt2 ON ((((rt2.c0)>>(rt1.c2))) IS FALSE));
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON ((json_object(rt1.c2, rt0.c0)) BETWEEN (CAST(rt1.c2 AS INTEGER)) AND (TYPEOF(rt0.c2))) INNER JOIN rt2 ON ((((rt2.c0)>>(rt1.c2))) IS FALSE) WHERE (7.04454564E8);
SELECT ALL * FROM rt1 CROSS JOIN rt2 ON ((((((((((((((((rt1.c2)OR(NULL)))AND(rt1.c3)))AND(rt0.c0)))AND(NULL)))OR(((rt2.c0) IS TRUE))))AND(CAST(rt0.c2 AS REAL))))OR(((rt1.c3) NOT NULL))))AND(((rt0.c3)||(rt0.c2)))) FULL OUTER JOIN rt0 ON (~ (rt0.c2)) COLLATE BINARY WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((HEX(DISTINCT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((HEX(DISTINCT NULL))))) IS TRUE)  as count FROM rt1 CROSS JOIN rt2 ON ((((((((((((((((rt1.c2)OR(NULL)))AND(rt1.c3)))AND(rt0.c0)))AND(NULL)))OR(((rt2.c0) IS TRUE))))AND(CAST(rt0.c2 AS REAL))))OR(((rt1.c3) NOT NULL))))AND(((rt0.c3)||(rt0.c2)))) FULL OUTER JOIN rt0 ON (~ (rt0.c2)) COLLATE BINARY);
SELECT ALL * FROM rt1 CROSS JOIN rt2 ON ((((((((((((((((rt1.c2)OR(NULL)))AND(rt1.c3)))AND(rt0.c0)))AND(NULL)))OR(((rt2.c0) IS TRUE))))AND(CAST(rt0.c2 AS REAL))))OR(((rt1.c3) NOT NULL))))AND(((rt0.c3)||(rt0.c2)))) FULL OUTER JOIN rt0 ON (~ (rt0.c2)) COLLATE BINARY WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((HEX(DISTINCT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((HEX(DISTINCT NULL))))) IS TRUE)  as count FROM rt1 CROSS JOIN rt2 ON ((((((((((((((((rt1.c2)OR(NULL)))AND(rt1.c3)))AND(rt0.c0)))AND(NULL)))OR(((rt2.c0) IS TRUE))))AND(CAST(rt0.c2 AS REAL))))OR(((rt1.c3) NOT NULL))))AND(((rt0.c3)||(rt0.c2)))) FULL OUTER JOIN rt0 ON (~ (rt0.c2)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt2, rt0 WHERE ((((((rt2.c0) NOT NULL)))<=((0X29fd1fa4 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt2.c0) NOT NULL)))<=((0X29fd1fa4 COLLATE BINARY)))) IS TRUE)  as count FROM rt2, rt0);
SELECT ALL COUNT(*) FROM rt2, rt0 WHERE ((((((rt2.c0) NOT NULL)))<=((0X29fd1fa4 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt2.c0) NOT NULL)))<=((0X29fd1fa4 COLLATE BINARY)))) IS TRUE)  as count FROM rt2, rt0);
SELECT ALL COUNT(*) FROM rt2, rt0 WHERE ((((((rt2.c0) NOT NULL)))<=((0X29fd1fa4 COLLATE BINARY))));
SELECT * FROM rt2 WHERE (CASE CAST(rt2.c2 AS NUMERIC)  WHEN ((NULL) BETWEEN (rt2.c2) AND (rt2.c0)) THEN (NOT (rt2.c1)) END) ORDER BY (((((NOT (rt2.c1)))AND(CASE WHEN rt2.c0 THEN rt2.c1 WHEN '0.1796938551349181' THEN 5.05882599E8 WHEN rt2.c0 THEN rt2.c0 END)))AND(LIKELIHOOD(DISTINCT rt2.c2, 0.5003070944514255))) DESC, 'SN菱갈L3' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt2.c2 AS NUMERIC)  WHEN ((NULL) BETWEEN (rt2.c2) AND (rt2.c0)) THEN (NOT (rt2.c1)) END) IS TRUE)  as count FROM rt2 ORDER BY (((((NOT (rt2.c1)))AND(CASE WHEN rt2.c0 THEN rt2.c1 WHEN '0.1796938551349181' THEN 5.05882599E8 WHEN rt2.c0 THEN rt2.c0 END)))AND(LIKELIHOOD(DISTINCT rt2.c2, 0.5003070944514255))) DESC, 'SN菱갈L3' DESC  NULLS FIRST);
SELECT * FROM rt2 WHERE (CASE CAST(rt2.c2 AS NUMERIC)  WHEN ((NULL) BETWEEN (rt2.c2) AND (rt2.c0)) THEN (NOT (rt2.c1)) END) ORDER BY (((((NOT (rt2.c1)))AND(CASE WHEN rt2.c0 THEN rt2.c1 WHEN '0.1796938551349181' THEN 5.05882599E8 WHEN rt2.c0 THEN rt2.c0 END)))AND(LIKELIHOOD(DISTINCT rt2.c2, 0.5003070944514255))) DESC, 'SN菱갈L3' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt2.c2 AS NUMERIC)  WHEN ((NULL) BETWEEN (rt2.c2) AND (rt2.c0)) THEN (NOT (rt2.c1)) END) IS TRUE)  as count FROM rt2 ORDER BY (((((NOT (rt2.c1)))AND(CASE WHEN rt2.c0 THEN rt2.c1 WHEN '0.1796938551349181' THEN 5.05882599E8 WHEN rt2.c0 THEN rt2.c0 END)))AND(LIKELIHOOD(DISTINCT rt2.c2, 0.5003070944514255))) DESC, 'SN菱갈L3' DESC  NULLS FIRST);
SELECT * FROM rt2 WHERE (CASE CAST(rt2.c2 AS NUMERIC)  WHEN ((NULL) BETWEEN (rt2.c2) AND (rt2.c0)) THEN (NOT (rt2.c1)) END) ORDER BY (((((NOT (rt2.c1)))AND(CASE WHEN rt2.c0 THEN rt2.c1 WHEN '0.1796938551349181' THEN 5.05882599E8 WHEN rt2.c0 THEN rt2.c0 END)))AND(LIKELIHOOD(DISTINCT rt2.c2, 0.5003070944514255))) DESC, 'SN菱갈L3' DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1, rt2 WHERE (CASE WHEN ((((rt0.c2)AND(x'')))AND(rt0.c3)) THEN ((x'') BETWEEN (rt1.c2) AND (rt0.c0)) ELSE rt0.c0 COLLATE NOCASE END) ORDER BY (rt0.c2 COLLATE NOCASE IN ()) DESC, ((((((rt1.c2)AND(rt1.c3)))OR(rt0.c2))) BETWEEN ((((rt2.c0))=((rt1.c3)))) AND (rt0.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt0.c2)AND(x'')))AND(rt0.c3)) THEN ((x'') BETWEEN (rt1.c2) AND (rt0.c0)) ELSE rt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM rt0, rt1, rt2 ORDER BY (rt0.c2 COLLATE NOCASE IN ()) DESC, ((((((rt1.c2)AND(rt1.c3)))OR(rt0.c2))) BETWEEN ((((rt2.c0))=((rt1.c3)))) AND (rt0.c1)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, rt2 WHERE (CASE WHEN ((((rt0.c2)AND(x'')))AND(rt0.c3)) THEN ((x'') BETWEEN (rt1.c2) AND (rt0.c0)) ELSE rt0.c0 COLLATE NOCASE END) ORDER BY (rt0.c2 COLLATE NOCASE IN ()) DESC, ((((((rt1.c2)AND(rt1.c3)))OR(rt0.c2))) BETWEEN ((((rt2.c0))=((rt1.c3)))) AND (rt0.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt0.c2)AND(x'')))AND(rt0.c3)) THEN ((x'') BETWEEN (rt1.c2) AND (rt0.c0)) ELSE rt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM rt0, rt1, rt2 ORDER BY (rt0.c2 COLLATE NOCASE IN ()) DESC, ((((((rt1.c2)AND(rt1.c3)))OR(rt0.c2))) BETWEEN ((((rt2.c0))=((rt1.c3)))) AND (rt0.c1)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, rt2 WHERE (CASE WHEN ((((rt0.c2)AND(x'')))AND(rt0.c3)) THEN ((x'') BETWEEN (rt1.c2) AND (rt0.c0)) ELSE rt0.c0 COLLATE NOCASE END) ORDER BY (rt0.c2 COLLATE NOCASE IN ()) DESC, ((((((rt1.c2)AND(rt1.c3)))OR(rt0.c2))) BETWEEN ((((rt2.c0))=((rt1.c3)))) AND (rt0.c1)) ASC  NULLS FIRST;
SELECT * FROM rt0, rt2 WHERE ((((NOT (rt2.c1))) NOT BETWEEN ((((rt2.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c3)))) AND (DATE(0X611db220, rt0.c1, rt0.c3))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt2.c1))) NOT BETWEEN ((((rt2.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c3)))) AND (DATE(0x611db220, rt0.c1, rt0.c3)))) IS TRUE)  as count FROM rt0, rt2);
SELECT * FROM rt0, rt2 WHERE ((((NOT (rt2.c1))) NOT BETWEEN ((((rt2.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c3)))) AND (DATE(0X611db220, rt0.c1, rt0.c3))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt2.c1))) NOT BETWEEN ((((rt2.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c3)))) AND (DATE(0x611db220, rt0.c1, rt0.c3)))) IS TRUE)  as count FROM rt0, rt2);
SELECT * FROM rt0, rt2 WHERE ((((NOT (rt2.c1))) NOT BETWEEN ((((rt2.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c3)))) AND (DATE(0X611db220, rt0.c1, rt0.c3))));
SELECT * FROM rt1, rt2 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1, rt2);
SELECT * FROM rt1, rt2 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1, rt2);
SELECT * FROM rt1, rt2 WHERE (rt1.c1);
SELECT ALL * FROM rt1 WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (rt1.c4);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN rt2 ON (rt1.c3 IN ()) COLLATE BINARY LEFT OUTER JOIN rt0 ON ((rt0.c3) IS FALSE) COLLATE RTRIM WHERE (((((rt1.c2) IS FALSE)) BETWEEN (QUOTE(rt2.c0)) AND ((('%')AND(rt0.c0))))) ORDER BY (((rt0.c1 IN ()))!=(((rt0.c2)%(rt2.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) IS FALSE)) BETWEEN (QUOTE(rt2.c0)) AND ((('%')AND(rt0.c0))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt2 ON (rt1.c3 IN ()) COLLATE BINARY LEFT OUTER JOIN rt0 ON ((rt0.c3) IS FALSE) COLLATE RTRIM ORDER BY (((rt0.c1 IN ()))<>(((rt0.c2)%(rt2.c1)))));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN rt2 ON (rt1.c3 IN ()) COLLATE BINARY LEFT OUTER JOIN rt0 ON ((rt0.c3) IS FALSE) COLLATE RTRIM WHERE (((((rt1.c2) IS FALSE)) BETWEEN (QUOTE(rt2.c0)) AND ((('%')AND(rt0.c0))))) ORDER BY (((rt0.c1 IN ()))!=(((rt0.c2)%(rt2.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) IS FALSE)) BETWEEN (QUOTE(rt2.c0)) AND ((('%')AND(rt0.c0))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt2 ON (rt1.c3 IN ()) COLLATE BINARY LEFT OUTER JOIN rt0 ON ((rt0.c3) IS FALSE) COLLATE RTRIM ORDER BY (((rt0.c1 IN ()))<>(((rt0.c2)%(rt2.c1)))));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN rt2 ON (rt1.c3 IN ()) COLLATE BINARY LEFT OUTER JOIN rt0 ON ((rt0.c3) IS FALSE) COLLATE RTRIM WHERE (((((rt1.c2) IS FALSE)) BETWEEN (QUOTE(rt2.c0)) AND ((('%')AND(rt0.c0))))) ORDER BY (((rt0.c1 IN ()))!=(((rt0.c2)%(rt2.c1))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON CASE WHEN CASE rt1.c0  WHEN rt0.c3 THEN NULL END THEN (- (rt1.c1)) WHEN ((rt2.c1) NOT BETWEEN (rt1.c0) AND (rt0.c2)) THEN (- (rt2.c0)) WHEN CHAR(rt1.c4, rt1.c0, rt0.c2) THEN CAST(rt2.c1 AS NUMERIC) WHEN ((((-1576439781)AND(rt2.c0)))AND(rt0.c1)) THEN (((0X5e3761dd))>((rt0.c2))) WHEN rt0.c1 COLLATE BINARY THEN ((rt2.c1) ISNULL) END RIGHT OUTER JOIN rt2 ON 0.6802971857838673 WHERE (((rt2.c1) NOT BETWEEN (((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c1))) AND (NULL))) ORDER BY ((((rt2.c1) NOT BETWEEN (0x13e587aa) AND (rt0.c3)))>>(((rt2.c2)+(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((rt2.c1) NOT BETWEEN (((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c1))) AND (NULL))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON CASE WHEN CASE rt1.c0  WHEN rt0.c3 THEN NULL END THEN (- (rt1.c1)) WHEN ((rt2.c1) NOT BETWEEN (rt1.c0) AND (rt0.c2)) THEN (- (rt2.c0)) WHEN CHAR(rt1.c4, rt1.c0, rt0.c2) THEN CAST(rt2.c1 AS NUMERIC) WHEN ((((-1576439781)AND(rt2.c0)))AND(rt0.c1)) THEN (((0X5e3761dd))>((rt0.c2))) WHEN rt0.c1 COLLATE BINARY THEN ((rt2.c1) ISNULL) END RIGHT OUTER JOIN rt2 ON 0.6802971857838673 ORDER BY ((((rt2.c1) NOT BETWEEN (0X13e587aa) AND (rt0.c3)))>>(((rt2.c2)+(rt1.c2)))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON CASE WHEN CASE rt1.c0  WHEN rt0.c3 THEN NULL END THEN (- (rt1.c1)) WHEN ((rt2.c1) NOT BETWEEN (rt1.c0) AND (rt0.c2)) THEN (- (rt2.c0)) WHEN CHAR(rt1.c4, rt1.c0, rt0.c2) THEN CAST(rt2.c1 AS NUMERIC) WHEN ((((-1576439781)AND(rt2.c0)))AND(rt0.c1)) THEN (((0X5e3761dd))>((rt0.c2))) WHEN rt0.c1 COLLATE BINARY THEN ((rt2.c1) ISNULL) END RIGHT OUTER JOIN rt2 ON 0.6802971857838673 WHERE (((rt2.c1) NOT BETWEEN (((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c1))) AND (NULL))) ORDER BY ((((rt2.c1) NOT BETWEEN (0x13e587aa) AND (rt0.c3)))>>(((rt2.c2)+(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((rt2.c1) NOT BETWEEN (((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c1))) AND (NULL))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON CASE WHEN CASE rt1.c0  WHEN rt0.c3 THEN NULL END THEN (- (rt1.c1)) WHEN ((rt2.c1) NOT BETWEEN (rt1.c0) AND (rt0.c2)) THEN (- (rt2.c0)) WHEN CHAR(rt1.c4, rt1.c0, rt0.c2) THEN CAST(rt2.c1 AS NUMERIC) WHEN ((((-1576439781)AND(rt2.c0)))AND(rt0.c1)) THEN (((0X5e3761dd))>((rt0.c2))) WHEN rt0.c1 COLLATE BINARY THEN ((rt2.c1) ISNULL) END RIGHT OUTER JOIN rt2 ON 0.6802971857838673 ORDER BY ((((rt2.c1) NOT BETWEEN (0X13e587aa) AND (rt0.c3)))>>(((rt2.c2)+(rt1.c2)))));
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND (((((rt1.c3)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0)))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND (((((rt1.c3)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND (((((rt1.c3)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0)))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND (((((rt1.c3)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND (((((rt1.c3)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0)))))));
SELECT ALL COUNT(*) FROM rt2, rt1, rt0 WHERE (((((rt0.c2) IS FALSE)) NOT BETWEEN (((x'')AND(rt0.c0))) AND ((rt1.c0 IN ())))) ORDER BY UNLIKELY(x'b371') ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS FALSE)) NOT BETWEEN (((x'')AND(rt0.c0))) AND ((rt1.c0 IN ())))) IS TRUE)  as count FROM rt2, rt1, rt0 ORDER BY UNLIKELY(x'b371') ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt2, rt1, rt0 WHERE (((((rt0.c2) IS FALSE)) NOT BETWEEN (((x'')AND(rt0.c0))) AND ((rt1.c0 IN ())))) ORDER BY UNLIKELY(x'b371') ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS FALSE)) NOT BETWEEN (((x'')AND(rt0.c0))) AND ((rt1.c0 IN ())))) IS TRUE)  as count FROM rt2, rt1, rt0 ORDER BY UNLIKELY(x'b371') ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt2, rt1, rt0 WHERE (((((rt0.c2) IS FALSE)) NOT BETWEEN (((x'')AND(rt0.c0))) AND ((rt1.c0 IN ())))) ORDER BY UNLIKELY(x'b371') ASC  NULLS FIRST;
SELECT * FROM rt1, rt2 FULL OUTER JOIN rt0 ON rt0.c3 WHERE ((((rt1.c1)IS(rt0.c0)) IN (CAST(rt1.c2 AS BLOB)))) ORDER BY ((((((rt0.c3) BETWEEN (rt0.c1) AND (rt1.c2)))AND(((((rt0.c2)OR(rt1.c2)))OR(rt0.c0)))))OR('')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1)IS(rt0.c0)) IN (CAST(rt1.c2 AS BLOB)))) IS TRUE)  as count FROM rt1, rt2 FULL OUTER JOIN rt0 ON rt0.c3 ORDER BY ((((((rt0.c3) BETWEEN (rt0.c1) AND (rt1.c2)))AND(((((rt0.c2)OR(rt1.c2)))OR(rt0.c0)))))OR('')) DESC  NULLS FIRST);
SELECT * FROM rt1, rt2 FULL OUTER JOIN rt0 ON rt0.c3 WHERE ((((rt1.c1)IS(rt0.c0)) IN (CAST(rt1.c2 AS BLOB)))) ORDER BY ((((((rt0.c3) BETWEEN (rt0.c1) AND (rt1.c2)))AND(((((rt0.c2)OR(rt1.c2)))OR(rt0.c0)))))OR('')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1)IS(rt0.c0)) IN (CAST(rt1.c2 AS BLOB)))) IS TRUE)  as count FROM rt1, rt2 FULL OUTER JOIN rt0 ON rt0.c3 ORDER BY ((((((rt0.c3) BETWEEN (rt0.c1) AND (rt1.c2)))AND(((((rt0.c2)OR(rt1.c2)))OR(rt0.c0)))))OR('')) DESC  NULLS FIRST);
SELECT * FROM rt1, rt2 FULL OUTER JOIN rt0 ON rt0.c3 WHERE ((((rt1.c1)IS(rt0.c0)) IN (CAST(rt1.c2 AS BLOB)))) ORDER BY ((((((rt0.c3) BETWEEN (rt0.c1) AND (rt1.c2)))AND(((((rt0.c2)OR(rt1.c2)))OR(rt0.c0)))))OR('')) DESC  NULLS FIRST;
SELECT ALL * FROM rt2, rt1 WHERE (TRIM(DISTINCT ((rt2.c2) ISNULL))) ORDER BY ((rt1.c1)|(rt2.c0)) COLLATE BINARY DESC, CASE rt1.c3  WHEN rt2.c0 THEN ((rt1.c4) NOTNULL) ELSE ((rt2.c0) NOT BETWEEN (rt1.c1) AND (rt2.c1)) END;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((rt2.c2) ISNULL))) IS TRUE)  as count FROM rt2, rt1 ORDER BY ((rt1.c1)|(rt2.c0)) COLLATE BINARY DESC, CASE rt1.c3  WHEN rt2.c0 THEN ((rt1.c4) NOTNULL) ELSE ((rt2.c0) NOT BETWEEN (rt1.c1) AND (rt2.c1)) END);
SELECT ALL * FROM rt2, rt1 WHERE (TRIM(DISTINCT ((rt2.c2) ISNULL))) ORDER BY ((rt1.c1)|(rt2.c0)) COLLATE BINARY DESC, CASE rt1.c3  WHEN rt2.c0 THEN ((rt1.c4) NOTNULL) ELSE ((rt2.c0) NOT BETWEEN (rt1.c1) AND (rt2.c1)) END;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((rt2.c2) ISNULL))) IS TRUE)  as count FROM rt2, rt1 ORDER BY ((rt1.c1)|(rt2.c0)) COLLATE BINARY DESC, CASE rt1.c3  WHEN rt2.c0 THEN ((rt1.c4) NOTNULL) ELSE ((rt2.c0) NOT BETWEEN (rt1.c1) AND (rt2.c1)) END);
SELECT ALL * FROM rt2, rt1 WHERE (TRIM(DISTINCT ((rt2.c2) ISNULL))) ORDER BY ((rt1.c1)|(rt2.c0)) COLLATE BINARY DESC, CASE rt1.c3  WHEN rt2.c0 THEN ((rt1.c4) NOTNULL) ELSE ((rt2.c0) NOT BETWEEN (rt1.c1) AND (rt2.c1)) END;
SELECT * FROM rt0, rt1 WHERE ((+ ((((rt1.c0))=((rt1.c0))))));
SELECT SUM(count) FROM (SELECT (((+ ((((rt1.c0))=((rt1.c0)))))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((+ ((((rt1.c0))=((rt1.c0))))));
SELECT SUM(count) FROM (SELECT (((+ ((((rt1.c0))=((rt1.c0)))))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((+ ((((rt1.c0))=((rt1.c0))))));
SELECT ALL * FROM rt1, rt2 WHERE (rt2.c0) ORDER BY (+ ((- (rt1.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt2.c0) IS TRUE)  as count FROM rt1, rt2 ORDER BY (+ ((- (rt1.c3))))  NULLS FIRST);
SELECT ALL * FROM rt1, rt2 WHERE (rt2.c0) ORDER BY (+ ((- (rt1.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt2.c0) IS TRUE)  as count FROM rt1, rt2 ORDER BY (+ ((- (rt1.c3))))  NULLS FIRST);
SELECT ALL * FROM rt1, rt2 WHERE (rt2.c0) ORDER BY (+ ((- (rt1.c3))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 END) NOT BETWEEN (CASE WHEN NULL THEN '0.06582149449904384' WHEN x'a6d0' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 END) AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 END) NOT BETWEEN (CASE WHEN NULL THEN '0.06582149449904384' WHEN x'a6d0' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 END) AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 END) NOT BETWEEN (CASE WHEN NULL THEN '0.06582149449904384' WHEN x'a6d0' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 END) AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 END) NOT BETWEEN (CASE WHEN NULL THEN '0.06582149449904384' WHEN x'a6d0' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 END) AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 END) NOT BETWEEN (CASE WHEN NULL THEN '0.06582149449904384' WHEN x'a6d0' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 END) AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END)));
SELECT ALL COUNT(*) FROM rt0, rt2 WHERE ((NOT (rt0.c2 COLLATE RTRIM))) ORDER BY rt2.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, rt2 ORDER BY rt2.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt2 WHERE ((NOT (rt0.c2 COLLATE RTRIM))) ORDER BY rt2.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, rt2 ORDER BY rt2.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt2 WHERE ((NOT (rt0.c2 COLLATE RTRIM))) ORDER BY rt2.c0 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1 RIGHT OUTER JOIN rt2 ON ((((((((((rt1.c1)==(rt1.c1)))OR((rt0.c2 IN (rt1.c4)))))OR(rt1.c0)))OR(CAST(rt0.c3 AS REAL))))OR(((rt0.c1)<<(rt1.c2)))) WHERE (x'97fc');
SELECT SUM(count) FROM (SELECT ((x'97fc') IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN rt2 ON ((((((((((rt1.c1)==(rt1.c1)))OR((rt0.c2 IN (rt1.c4)))))OR(rt1.c0)))OR(CAST(rt0.c3 AS REAL))))OR(((rt0.c1)<<(rt1.c2)))));
SELECT ALL COUNT(*) FROM rt0, rt1 RIGHT OUTER JOIN rt2 ON ((((((((((rt1.c1)==(rt1.c1)))OR((rt0.c2 IN (rt1.c4)))))OR(rt1.c0)))OR(CAST(rt0.c3 AS REAL))))OR(((rt0.c1)<<(rt1.c2)))) WHERE (x'97fc');
SELECT SUM(count) FROM (SELECT ((x'97fc') IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN rt2 ON ((((((((((rt1.c1)==(rt1.c1)))OR((rt0.c2 IN (rt1.c4)))))OR(rt1.c0)))OR(CAST(rt0.c3 AS REAL))))OR(((rt0.c1)<<(rt1.c2)))));
SELECT ALL COUNT(*) FROM rt0, rt1 RIGHT OUTER JOIN rt2 ON ((((((((((rt1.c1)==(rt1.c1)))OR((rt0.c2 IN (rt1.c4)))))OR(rt1.c0)))OR(CAST(rt0.c3 AS REAL))))OR(((rt0.c1)<<(rt1.c2)))) WHERE (x'97fc');
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)|(rt0.c0)))AND((('-1034161941')+(rt0.c3)))))AND((((x''))>((rt0.c3)))))) ORDER BY ((((rt0.c3 IN ())))<>((IFNULL(DISTINCT rt0.c0, rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)|(rt0.c0)))AND((('-1034161941')+(rt0.c3)))))AND((((x''))>((rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3 IN ())))!=((IFNULL(DISTINCT rt0.c0, rt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)|(rt0.c0)))AND((('-1034161941')+(rt0.c3)))))AND((((x''))>((rt0.c3)))))) ORDER BY ((((rt0.c3 IN ())))<>((IFNULL(DISTINCT rt0.c0, rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)|(rt0.c0)))AND((('-1034161941')+(rt0.c3)))))AND((((x''))>((rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3 IN ())))!=((IFNULL(DISTINCT rt0.c0, rt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)|(rt0.c0)))AND((('-1034161941')+(rt0.c3)))))AND((((x''))>((rt0.c3)))))) ORDER BY ((((rt0.c3 IN ())))<>((IFNULL(DISTINCT rt0.c0, rt0.c1)))) ASC;
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END) IS FALSE));
SELECT * FROM rt2, rt0, rt1 WHERE (TYPEOF(DISTINCT ((0.22007860166776594)IS(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((0.22007860166776594)IS(rt0.c0)))) IS TRUE)  as count FROM rt2, rt0, rt1);
SELECT * FROM rt2, rt0, rt1 WHERE (TYPEOF(DISTINCT ((0.22007860166776594)IS(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((0.22007860166776594)IS(rt0.c0)))) IS TRUE)  as count FROM rt2, rt0, rt1);
SELECT * FROM rt2, rt0, rt1 WHERE (TYPEOF(DISTINCT ((0.22007860166776594)IS(rt0.c0))));
SELECT COUNT(*) FROM rt1, rt2 WHERE ((((rt2.c2, rt1.c4, rt2.c0)) BETWEEN ((CASE WHEN NULL THEN rt1.c3 WHEN '' THEN rt2.c2 WHEN rt1.c0 THEN rt1.c3 END, rt2.c2 COLLATE BINARY, LIKE(rt1.c0, rt1.c0))) AND ((x'', 0.9885239714254135, ((rt2.c1)-(rt2.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt2.c2, rt1.c4, rt2.c0)) BETWEEN ((CASE WHEN NULL THEN rt1.c3 WHEN '' THEN rt2.c2 WHEN rt1.c0 THEN rt1.c3 END, rt2.c2 COLLATE BINARY, LIKE(rt1.c0, rt1.c0))) AND ((x'', 0.9885239714254135, ((rt2.c1)-(rt2.c1)))))) IS TRUE)  as count FROM rt1, rt2);
SELECT COUNT(*) FROM rt1, rt2 WHERE ((((rt2.c2, rt1.c4, rt2.c0)) BETWEEN ((CASE WHEN NULL THEN rt1.c3 WHEN '' THEN rt2.c2 WHEN rt1.c0 THEN rt1.c3 END, rt2.c2 COLLATE BINARY, LIKE(rt1.c0, rt1.c0))) AND ((x'', 0.9885239714254135, ((rt2.c1)-(rt2.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt2.c2, rt1.c4, rt2.c0)) BETWEEN ((CASE WHEN NULL THEN rt1.c3 WHEN '' THEN rt2.c2 WHEN rt1.c0 THEN rt1.c3 END, rt2.c2 COLLATE BINARY, LIKE(rt1.c0, rt1.c0))) AND ((x'', 0.9885239714254135, ((rt2.c1)-(rt2.c1)))))) IS TRUE)  as count FROM rt1, rt2);
SELECT COUNT(*) FROM rt1, rt2 WHERE ((((rt2.c2, rt1.c4, rt2.c0)) BETWEEN ((CASE WHEN NULL THEN rt1.c3 WHEN '' THEN rt2.c2 WHEN rt1.c0 THEN rt1.c3 END, rt2.c2 COLLATE BINARY, LIKE(rt1.c0, rt1.c0))) AND ((x'', 0.9885239714254135, ((rt2.c1)-(rt2.c1))))));
SELECT ALL * FROM rt0, rt1, rt2 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt0, rt1, rt2);
SELECT ALL * FROM rt0, rt1, rt2 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt0, rt1, rt2);
SELECT ALL * FROM rt0, rt1, rt2 WHERE (rt1.c1);
SELECT COUNT(*) FROM rt2 CROSS JOIN rt0 ON ((((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt2.c2 THEN rt0.c3 WHEN rt0.c1 THEN NULL WHEN rt2.c0 THEN rt0.c2 END)AND(TRIM(rt0.c3))))AND((rt2.c0 IN ()))) WHERE (((TYPEOF(rt0.c3)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(rt0.c3)) ISNULL)) IS TRUE)  as count FROM rt2 CROSS JOIN rt0 ON ((((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt2.c2 THEN rt0.c3 WHEN rt0.c1 THEN NULL WHEN rt2.c0 THEN rt0.c2 END)AND(TRIM(rt0.c3))))AND((rt2.c0 IN ()))));
SELECT COUNT(*) FROM rt2 CROSS JOIN rt0 ON ((((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt2.c2 THEN rt0.c3 WHEN rt0.c1 THEN NULL WHEN rt2.c0 THEN rt0.c2 END)AND(TRIM(rt0.c3))))AND((rt2.c0 IN ()))) WHERE (((TYPEOF(rt0.c3)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(rt0.c3)) ISNULL)) IS TRUE)  as count FROM rt2 CROSS JOIN rt0 ON ((((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt2.c2 THEN rt0.c3 WHEN rt0.c1 THEN NULL WHEN rt2.c0 THEN rt0.c2 END)AND(TRIM(rt0.c3))))AND((rt2.c0 IN ()))));
SELECT COUNT(*) FROM rt2 CROSS JOIN rt0 ON ((((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt2.c2 THEN rt0.c3 WHEN rt0.c1 THEN NULL WHEN rt2.c0 THEN rt0.c2 END)AND(TRIM(rt0.c3))))AND((rt2.c0 IN ()))) WHERE (((TYPEOF(rt0.c3)) ISNULL));
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(rt1.c1 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c1 AS REAL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(rt1.c1 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c1 AS REAL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(rt1.c1 AS REAL));
SELECT * FROM rt0 WHERE ((NOT (((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NOT (((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NOT (((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c2)))));
SELECT * FROM rt1 WHERE (CAST(json_patch(rt1.c0, rt1.c1) AS BLOB)) ORDER BY (~ (((rt1.c0) BETWEEN ('1142481342') AND (rt1.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(json_patch(rt1.c0, rt1.c1) AS BLOB)) IS TRUE)  as count FROM rt1 ORDER BY (~ (((rt1.c0) BETWEEN ('1142481342') AND (rt1.c3)))) DESC);
SELECT * FROM rt1 WHERE (CAST(json_patch(rt1.c0, rt1.c1) AS BLOB)) ORDER BY (~ (((rt1.c0) BETWEEN ('1142481342') AND (rt1.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(json_patch(rt1.c0, rt1.c1) AS BLOB)) IS TRUE)  as count FROM rt1 ORDER BY (~ (((rt1.c0) BETWEEN ('1142481342') AND (rt1.c3)))) DESC);
SELECT * FROM rt1 WHERE (CAST(json_patch(rt1.c0, rt1.c1) AS BLOB)) ORDER BY (~ (((rt1.c0) BETWEEN ('1142481342') AND (rt1.c3)))) DESC;
SELECT ALL * FROM rt2, rt0 WHERE (CASE ((rt0.c2)>>(rt0.c0))  WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt2.c2)) THEN CASE rt0.c2  WHEN x'' THEN rt2.c1 END WHEN (rt0.c3 IN ()) THEN (~ (rt0.c3)) WHEN 0.5380737802524246 THEN rt0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2)>>(rt0.c0))  WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt2.c2)) THEN CASE rt0.c2  WHEN x'' THEN rt2.c1 END WHEN (rt0.c3 IN ()) THEN (~ (rt0.c3)) WHEN 0.5380737802524246 THEN rt0.c1 END) IS TRUE)  as count FROM rt2, rt0);
SELECT ALL * FROM rt2, rt0 WHERE (CASE ((rt0.c2)>>(rt0.c0))  WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt2.c2)) THEN CASE rt0.c2  WHEN x'' THEN rt2.c1 END WHEN (rt0.c3 IN ()) THEN (~ (rt0.c3)) WHEN 0.5380737802524246 THEN rt0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2)>>(rt0.c0))  WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt2.c2)) THEN CASE rt0.c2  WHEN x'' THEN rt2.c1 END WHEN (rt0.c3 IN ()) THEN (~ (rt0.c3)) WHEN 0.5380737802524246 THEN rt0.c1 END) IS TRUE)  as count FROM rt2, rt0);
SELECT ALL * FROM rt2, rt0 WHERE (CASE ((rt0.c2)>>(rt0.c0))  WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt2.c2)) THEN CASE rt0.c2  WHEN x'' THEN rt2.c1 END WHEN (rt0.c3 IN ()) THEN (~ (rt0.c3)) WHEN 0.5380737802524246 THEN rt0.c1 END);
SELECT ALL COUNT(*) FROM rt1 WHERE (MIN(CAST(rt1.c0 AS REAL), (((rt1.c4, rt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c4, rt1.c1)) AND ((rt1.c1, rt1.c2, rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((MIN(CAST(rt1.c0 AS REAL), (((rt1.c4, rt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c4, rt1.c1)) AND ((rt1.c1, rt1.c2, rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (MIN(CAST(rt1.c0 AS REAL), (((rt1.c4, rt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c4, rt1.c1)) AND ((rt1.c1, rt1.c2, rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((MIN(CAST(rt1.c0 AS REAL), (((rt1.c4, rt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c4, rt1.c1)) AND ((rt1.c1, rt1.c2, rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (MIN(CAST(rt1.c0 AS REAL), (((rt1.c4, rt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c4, rt1.c1)) AND ((rt1.c1, rt1.c2, rt1.c0)))));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (SUBSTR((+ (rt0.c1)), ((((rt1.c3)AND(rt0.c2)))OR(rt1.c0)))) ORDER BY -2072850525, ((rt0.c3)IS NOT(LIKELIHOOD(DISTINCT rt0.c0, 0.02340639667369926))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR((+ (rt0.c1)), ((((rt1.c3)AND(rt0.c2)))OR(rt1.c0)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY -2072850525, ((rt0.c3)IS NOT(LIKELIHOOD(DISTINCT rt0.c0, 0.02340639667369926))) DESC);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (SUBSTR((+ (rt0.c1)), ((((rt1.c3)AND(rt0.c2)))OR(rt1.c0)))) ORDER BY -2072850525, ((rt0.c3)IS NOT(LIKELIHOOD(DISTINCT rt0.c0, 0.02340639667369926))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR((+ (rt0.c1)), ((((rt1.c3)AND(rt0.c2)))OR(rt1.c0)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY -2072850525, ((rt0.c3)IS NOT(LIKELIHOOD(DISTINCT rt0.c0, 0.02340639667369926))) DESC);
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON rt1.c4 WHERE ((((+ (rt1.c4)))<<((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c4)))<<((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON rt1.c4);
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON rt1.c4 WHERE ((((+ (rt1.c4)))<<((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c4)))<<((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON rt1.c4);
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON rt1.c4 WHERE ((((+ (rt1.c4)))<<((rt0.c0 IN ()))));
SELECT * FROM rt0, rt2 WHERE ((((~ (rt2.c2))) IS FALSE)) ORDER BY CASE WHEN RTRIM(rt2.c2) THEN rt2.c0 WHEN ((rt0.c3)>>(rt2.c1)) THEN ((rt0.c3) NOTNULL) WHEN rt2.c1 THEN ((rt0.c0)AND(x'')) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (rt2.c2))) IS FALSE)) IS TRUE)  as count FROM rt0, rt2 ORDER BY CASE WHEN RTRIM(rt2.c2) THEN rt2.c0 WHEN ((rt0.c3)>>(rt2.c1)) THEN ((rt0.c3) NOTNULL) WHEN rt2.c1 THEN ((rt0.c0)AND(x'')) END  NULLS FIRST);
SELECT * FROM rt0, rt2 WHERE ((((~ (rt2.c2))) IS FALSE)) ORDER BY CASE WHEN RTRIM(rt2.c2) THEN rt2.c0 WHEN ((rt0.c3)>>(rt2.c1)) THEN ((rt0.c3) NOTNULL) WHEN rt2.c1 THEN ((rt0.c0)AND(x'')) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (rt2.c2))) IS FALSE)) IS TRUE)  as count FROM rt0, rt2 ORDER BY CASE WHEN RTRIM(rt2.c2) THEN rt2.c0 WHEN ((rt0.c3)>>(rt2.c1)) THEN ((rt0.c3) NOTNULL) WHEN rt2.c1 THEN ((rt0.c0)AND(x'')) END  NULLS FIRST);
SELECT * FROM rt0, rt2 WHERE ((((~ (rt2.c2))) IS FALSE)) ORDER BY CASE WHEN RTRIM(rt2.c2) THEN rt2.c0 WHEN ((rt0.c3)>>(rt2.c1)) THEN ((rt0.c3) NOTNULL) WHEN rt2.c1 THEN ((rt0.c0)AND(x'')) END  NULLS FIRST;
SELECT * FROM rt1 WHERE (((((((rt1.c1))==((rt1.c1)))))<((((rt1.c2)OR(rt1.c4))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1))==((rt1.c1)))))<((((rt1.c2)OR(rt1.c4)))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((((rt1.c1))==((rt1.c1)))))<((((rt1.c2)OR(rt1.c4))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1))==((rt1.c1)))))<((((rt1.c2)OR(rt1.c4)))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((((rt1.c1))==((rt1.c1)))))<((((rt1.c2)OR(rt1.c4))))));
SELECT * FROM rt2, rt0, rt1 WHERE (load_extension(((rt0.c2)<(rt2.c0))));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(((rt0.c2)<(rt2.c0)))) IS TRUE)  as count FROM rt2, rt0, rt1);
SELECT * FROM rt2, rt0, rt1 WHERE (load_extension(((rt0.c2)<(rt2.c0))));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(((rt0.c2)<(rt2.c0)))) IS TRUE)  as count FROM rt2, rt0, rt1);
SELECT ALL * FROM rt2, rt0, rt1 WHERE (ABS((('-629443465') NOT BETWEEN (x'0d51') AND (NULL)))) ORDER BY rt1.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS((('-629443465') NOT BETWEEN (x'0d51') AND (NULL)))) IS TRUE)  as count FROM rt2, rt0, rt1 ORDER BY rt1.c3  NULLS LAST);
SELECT ALL * FROM rt2, rt0, rt1 WHERE (ABS((('-629443465') NOT BETWEEN (x'0d51') AND (NULL)))) ORDER BY rt1.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS((('-629443465') NOT BETWEEN (x'0d51') AND (NULL)))) IS TRUE)  as count FROM rt2, rt0, rt1 ORDER BY rt1.c3  NULLS LAST);
SELECT ALL * FROM rt2, rt0, rt1 WHERE (ABS((('-629443465') NOT BETWEEN (x'0d51') AND (NULL)))) ORDER BY rt1.c3  NULLS LAST;
SELECT COUNT(*) FROM rt2 LEFT OUTER JOIN rt1 ON NULL WHERE (((((rt1.c2)*(rt2.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)*(rt2.c0))) NOTNULL)) IS TRUE)  as count FROM rt2 LEFT OUTER JOIN rt1 ON NULL);
SELECT COUNT(*) FROM rt2 LEFT OUTER JOIN rt1 ON NULL WHERE (((((rt1.c2)*(rt2.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)*(rt2.c0))) NOTNULL)) IS TRUE)  as count FROM rt2 LEFT OUTER JOIN rt1 ON NULL);
SELECT COUNT(*) FROM rt2 LEFT OUTER JOIN rt1 ON NULL WHERE (((((rt1.c2)*(rt2.c0))) NOTNULL));
SELECT * FROM rt0, rt2, rt1 WHERE (((((NULL)AND(CAST(rt2.c1 AS BLOB))))AND(((rt1.c0)=(rt1.c2))))) ORDER BY ((((rt0.c3)*(x''))) NOT NULL) DESC, ((x'ccec')AND(NULL))  NULLS FIRST, ((rt2.c1 COLLATE NOCASE)||(rt1.c4 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((((((NULL)AND(CAST(rt2.c1 AS BLOB))))AND(((rt1.c0)==(rt1.c2))))) IS TRUE)  as count FROM rt0, rt2, rt1 ORDER BY ((((rt0.c3)*(x''))) NOT NULL) DESC, ((x'ccec')AND(NULL))  NULLS FIRST, ((rt2.c1 COLLATE NOCASE)||(rt1.c4 COLLATE BINARY)) ASC);
SELECT * FROM rt0, rt2, rt1 WHERE (((((NULL)AND(CAST(rt2.c1 AS BLOB))))AND(((rt1.c0)=(rt1.c2))))) ORDER BY ((((rt0.c3)*(x''))) NOT NULL) DESC, ((x'ccec')AND(NULL))  NULLS FIRST, ((rt2.c1 COLLATE NOCASE)||(rt1.c4 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((((((NULL)AND(CAST(rt2.c1 AS BLOB))))AND(((rt1.c0)==(rt1.c2))))) IS TRUE)  as count FROM rt0, rt2, rt1 ORDER BY ((((rt0.c3)*(x''))) NOT NULL) DESC, ((x'ccec')AND(NULL))  NULLS FIRST, ((rt2.c1 COLLATE NOCASE)||(rt1.c4 COLLATE BINARY)) ASC);
SELECT * FROM rt0, rt2, rt1 WHERE (((((NULL)AND(CAST(rt2.c1 AS BLOB))))AND(((rt1.c0)=(rt1.c2))))) ORDER BY ((((rt0.c3)*(x''))) NOT NULL) DESC, ((x'ccec')AND(NULL))  NULLS FIRST, ((rt2.c1 COLLATE NOCASE)||(rt1.c4 COLLATE BINARY)) ASC;
SELECT COUNT(*) FROM rt1, rt0 WHERE (((rt0.c3) BETWEEN (((rt0.c1) NOTNULL)) AND (((rt0.c1)<<(rt1.c0))))) ORDER BY ((((rt1.c0) NOT BETWEEN (rt0.c0) AND (NULL))) NOT BETWEEN ((~ (rt1.c4))) AND (((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) DESC, ((rt1.c4 COLLATE NOCASE)IS NOT((rt1.c3 IN ()))) DESC, ((((rt1.c2) IS FALSE))==((- (rt1.c1))));
SELECT SUM(count) FROM (SELECT ((((rt0.c3) BETWEEN (((rt0.c1) NOTNULL)) AND (((rt0.c1)<<(rt1.c0))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt1.c0) NOT BETWEEN (rt0.c0) AND (NULL))) NOT BETWEEN ((~ (rt1.c4))) AND (((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) DESC, ((rt1.c4 COLLATE NOCASE)IS NOT((rt1.c3 IN ()))) DESC, ((((rt1.c2) IS FALSE))=((- (rt1.c1)))));
SELECT COUNT(*) FROM rt1, rt0 WHERE (((rt0.c3) BETWEEN (((rt0.c1) NOTNULL)) AND (((rt0.c1)<<(rt1.c0))))) ORDER BY ((((rt1.c0) NOT BETWEEN (rt0.c0) AND (NULL))) NOT BETWEEN ((~ (rt1.c4))) AND (((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) DESC, ((rt1.c4 COLLATE NOCASE)IS NOT((rt1.c3 IN ()))) DESC, ((((rt1.c2) IS FALSE))==((- (rt1.c1))));
SELECT SUM(count) FROM (SELECT ((((rt0.c3) BETWEEN (((rt0.c1) NOTNULL)) AND (((rt0.c1)<<(rt1.c0))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt1.c0) NOT BETWEEN (rt0.c0) AND (NULL))) NOT BETWEEN ((~ (rt1.c4))) AND (((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) DESC, ((rt1.c4 COLLATE NOCASE)IS NOT((rt1.c3 IN ()))) DESC, ((((rt1.c2) IS FALSE))=((- (rt1.c1)))));
SELECT COUNT(*) FROM rt1, rt0 WHERE (((rt0.c3) BETWEEN (((rt0.c1) NOTNULL)) AND (((rt0.c1)<<(rt1.c0))))) ORDER BY ((((rt1.c0) NOT BETWEEN (rt0.c0) AND (NULL))) NOT BETWEEN ((~ (rt1.c4))) AND (((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) DESC, ((rt1.c4 COLLATE NOCASE)IS NOT((rt1.c3 IN ()))) DESC, ((((rt1.c2) IS FALSE))==((- (rt1.c1))));
SELECT * FROM rt2, rt0 WHERE (CASE (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))  WHEN '-1705445820' COLLATE BINARY THEN (((rt2.c2)) NOT BETWEEN ((0.014029774016172891)) AND ((rt0.c0))) ELSE CASE WHEN rt2.c0 THEN rt0.c3 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))  WHEN '-1705445820' COLLATE BINARY THEN (((rt2.c2)) NOT BETWEEN ((0.014029774016172891)) AND ((rt0.c0))) ELSE CASE WHEN rt2.c0 THEN rt0.c3 END END) IS TRUE)  as count FROM rt2, rt0);
SELECT * FROM rt2, rt0 WHERE (CASE (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))  WHEN '-1705445820' COLLATE BINARY THEN (((rt2.c2)) NOT BETWEEN ((0.014029774016172891)) AND ((rt0.c0))) ELSE CASE WHEN rt2.c0 THEN rt0.c3 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))  WHEN '-1705445820' COLLATE BINARY THEN (((rt2.c2)) NOT BETWEEN ((0.014029774016172891)) AND ((rt0.c0))) ELSE CASE WHEN rt2.c0 THEN rt0.c3 END END) IS TRUE)  as count FROM rt2, rt0);
SELECT * FROM rt2, rt0 WHERE (CASE (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))  WHEN '-1705445820' COLLATE BINARY THEN (((rt2.c2)) NOT BETWEEN ((0.014029774016172891)) AND ((rt0.c0))) ELSE CASE WHEN rt2.c0 THEN rt0.c3 END END);
SELECT ALL COUNT(*) FROM rt2, rt0, rt1 WHERE (((((((((((rt0.c1)OR('-610800821')))AND('-158503337')))OR(rt1.c0)))AND(rt1.c3))) IS FALSE)) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)OR('-610800821')))AND('-158503337')))OR(rt1.c0)))AND(rt1.c3))) IS FALSE)) IS TRUE)  as count FROM rt2, rt0, rt1 ORDER BY rt0.c2 DESC);
SELECT ALL COUNT(*) FROM rt2, rt0, rt1 WHERE (((((((((((rt0.c1)OR('-610800821')))AND('-158503337')))OR(rt1.c0)))AND(rt1.c3))) IS FALSE)) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)OR('-610800821')))AND('-158503337')))OR(rt1.c0)))AND(rt1.c3))) IS FALSE)) IS TRUE)  as count FROM rt2, rt0, rt1 ORDER BY rt0.c2 DESC);
SELECT ALL COUNT(*) FROM rt2, rt0, rt1 WHERE (((((((((((rt0.c1)OR('-610800821')))AND('-158503337')))OR(rt1.c0)))AND(rt1.c3))) IS FALSE)) ORDER BY rt0.c2 DESC;
SELECT COUNT(*) FROM rt2, rt0 LEFT OUTER JOIN rt1 ON 0xffffffff8472cfa3 WHERE ((+ ((~ (rt2.c1))))) ORDER BY ((rt0.c0)*(NULL COLLATE BINARY)) ASC  NULLS LAST, (((((rt0.c0))<=((rt1.c4)))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((+ ((~ (rt2.c1))))) IS TRUE)  as count FROM rt2, rt0 LEFT OUTER JOIN rt1 ON 0Xffffffff8472cfa3 ORDER BY ((rt0.c0)*(NULL COLLATE BINARY)) ASC  NULLS LAST, (((((rt0.c0))<=((rt1.c4)))) IS FALSE) ASC);
SELECT COUNT(*) FROM rt2, rt0 LEFT OUTER JOIN rt1 ON 0xffffffff8472cfa3 WHERE ((+ ((~ (rt2.c1))))) ORDER BY ((rt0.c0)*(NULL COLLATE BINARY)) ASC  NULLS LAST, (((((rt0.c0))<=((rt1.c4)))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((+ ((~ (rt2.c1))))) IS TRUE)  as count FROM rt2, rt0 LEFT OUTER JOIN rt1 ON 0Xffffffff8472cfa3 ORDER BY ((rt0.c0)*(NULL COLLATE BINARY)) ASC  NULLS LAST, (((((rt0.c0))<=((rt1.c4)))) IS FALSE) ASC);
SELECT COUNT(*) FROM rt2, rt0 LEFT OUTER JOIN rt1 ON 0xffffffff8472cfa3 WHERE ((+ ((~ (rt2.c1))))) ORDER BY ((rt0.c0)*(NULL COLLATE BINARY)) ASC  NULLS LAST, (((((rt0.c0))<=((rt1.c4)))) IS FALSE) ASC;
SELECT * FROM rt2, rt0 CROSS JOIN rt1 ON CAST(CASE WHEN rt0.c3 THEN rt1.c2 END AS BLOB) WHERE (((((((rt2.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt2.c0)))))<(((((rt0.c1, 0.6945192436331215, rt1.c4, rt0.c1, rt0.c1))=((rt1.c1, rt1.c4, rt2.c1, rt0.c0, rt0.c3))))))) ORDER BY CAST((0.7088695771868123 IN (rt1.c2)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((((((rt2.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt2.c0)))))<(((((rt0.c1, 0.6945192436331215, rt1.c4, rt0.c1, rt0.c1))==((rt1.c1, rt1.c4, rt2.c1, rt0.c0, rt0.c3))))))) IS TRUE)  as count FROM rt2, rt0 CROSS JOIN rt1 ON CAST(CASE WHEN rt0.c3 THEN rt1.c2 END AS BLOB) ORDER BY CAST((0.7088695771868123 IN (rt1.c2)) AS INTEGER));
SELECT * FROM rt2, rt0 CROSS JOIN rt1 ON CAST(CASE WHEN rt0.c3 THEN rt1.c2 END AS BLOB) WHERE (((((((rt2.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt2.c0)))))<(((((rt0.c1, 0.6945192436331215, rt1.c4, rt0.c1, rt0.c1))=((rt1.c1, rt1.c4, rt2.c1, rt0.c0, rt0.c3))))))) ORDER BY CAST((0.7088695771868123 IN (rt1.c2)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((((((rt2.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt2.c0)))))<(((((rt0.c1, 0.6945192436331215, rt1.c4, rt0.c1, rt0.c1))==((rt1.c1, rt1.c4, rt2.c1, rt0.c0, rt0.c3))))))) IS TRUE)  as count FROM rt2, rt0 CROSS JOIN rt1 ON CAST(CASE WHEN rt0.c3 THEN rt1.c2 END AS BLOB) ORDER BY CAST((0.7088695771868123 IN (rt1.c2)) AS INTEGER));
SELECT * FROM rt2, rt0 CROSS JOIN rt1 ON CAST(CASE WHEN rt0.c3 THEN rt1.c2 END AS BLOB) WHERE (((((((rt2.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt2.c0)))))<(((((rt0.c1, 0.6945192436331215, rt1.c4, rt0.c1, rt0.c1))=((rt1.c1, rt1.c4, rt2.c1, rt0.c0, rt0.c3))))))) ORDER BY CAST((0.7088695771868123 IN (rt1.c2)) AS INTEGER);
SELECT * FROM rt1, rt0 WHERE (CASE WHEN '0.39121333517248014' THEN (rt1.c3 IN (rt1.c0)) WHEN ((rt1.c3)AND(rt1.c0)) THEN ((rt1.c1) BETWEEN (rt1.c3) AND (rt0.c0)) WHEN ((rt1.c2)=(rt1.c3)) THEN ((((((((rt0.c3)OR(NULL)))OR(rt0.c3)))AND(rt0.c3)))AND(NULL)) END) ORDER BY CAST(rt0.c0 COLLATE NOCASE AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN '0.39121333517248014' THEN (rt1.c3 IN (rt1.c0)) WHEN ((rt1.c3)AND(rt1.c0)) THEN ((rt1.c1) BETWEEN (rt1.c3) AND (rt0.c0)) WHEN ((rt1.c2)=(rt1.c3)) THEN ((((((((rt0.c3)OR(NULL)))OR(rt0.c3)))AND(rt0.c3)))AND(NULL)) END) IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST(rt0.c0 COLLATE NOCASE AS NUMERIC) ASC);
SELECT * FROM rt1, rt0 WHERE (CASE WHEN '0.39121333517248014' THEN (rt1.c3 IN (rt1.c0)) WHEN ((rt1.c3)AND(rt1.c0)) THEN ((rt1.c1) BETWEEN (rt1.c3) AND (rt0.c0)) WHEN ((rt1.c2)=(rt1.c3)) THEN ((((((((rt0.c3)OR(NULL)))OR(rt0.c3)))AND(rt0.c3)))AND(NULL)) END) ORDER BY CAST(rt0.c0 COLLATE NOCASE AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN '0.39121333517248014' THEN (rt1.c3 IN (rt1.c0)) WHEN ((rt1.c3)AND(rt1.c0)) THEN ((rt1.c1) BETWEEN (rt1.c3) AND (rt0.c0)) WHEN ((rt1.c2)=(rt1.c3)) THEN ((((((((rt0.c3)OR(NULL)))OR(rt0.c3)))AND(rt0.c3)))AND(NULL)) END) IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST(rt0.c0 COLLATE NOCASE AS NUMERIC) ASC);
SELECT * FROM rt1, rt0 WHERE (CASE WHEN '0.39121333517248014' THEN (rt1.c3 IN (rt1.c0)) WHEN ((rt1.c3)AND(rt1.c0)) THEN ((rt1.c1) BETWEEN (rt1.c3) AND (rt0.c0)) WHEN ((rt1.c2)=(rt1.c3)) THEN ((((((((rt0.c3)OR(NULL)))OR(rt0.c3)))AND(rt0.c3)))AND(NULL)) END) ORDER BY CAST(rt0.c0 COLLATE NOCASE AS NUMERIC) ASC;
SELECT * FROM rt1, rt0 WHERE ((((rt0.c2)) BETWEEN (((rt0.c0 IN ()))) AND ((rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN (((rt0.c0 IN ()))) AND ((rt0.c1)))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE ((((rt0.c2)) BETWEEN (((rt0.c0 IN ()))) AND ((rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN (((rt0.c0 IN ()))) AND ((rt0.c1)))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE ((((rt0.c2)) BETWEEN (((rt0.c0 IN ()))) AND ((rt0.c1))));
SELECT COUNT(*) FROM rt2 WHERE (((rt2.c2)GLOB(rt2.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt2.c2)GLOB(rt2.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt2);
SELECT COUNT(*) FROM rt2 WHERE (((rt2.c2)GLOB(rt2.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt2.c2)GLOB(rt2.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt2);
SELECT COUNT(*) FROM rt2 WHERE (((rt2.c2)GLOB(rt2.c0)) COLLATE NOCASE);
SELECT * FROM rt1 WHERE ((((rt1.c0)IS(rt1.c3)) IN ())) ORDER BY CASE WHEN SQLITE_COMPILEOPTION_USED(rt1.c2) THEN ((((rt1.c3)OR(rt1.c4)))OR(rt1.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)IS(rt1.c3)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN SQLITE_COMPILEOPTION_USED(rt1.c2) THEN ((((rt1.c3)OR(rt1.c4)))OR(rt1.c1)) END ASC);
SELECT * FROM rt1 WHERE ((((rt1.c0)IS(rt1.c3)) IN ())) ORDER BY CASE WHEN SQLITE_COMPILEOPTION_USED(rt1.c2) THEN ((((rt1.c3)OR(rt1.c4)))OR(rt1.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)IS(rt1.c3)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN SQLITE_COMPILEOPTION_USED(rt1.c2) THEN ((((rt1.c3)OR(rt1.c4)))OR(rt1.c1)) END ASC);
SELECT * FROM rt1 WHERE ((((rt1.c0)IS(rt1.c3)) IN ())) ORDER BY CASE WHEN SQLITE_COMPILEOPTION_USED(rt1.c2) THEN ((((rt1.c3)OR(rt1.c4)))OR(rt1.c1)) END ASC;
SELECT COUNT(*) FROM rt2, rt0, rt1 WHERE (LIKELY(DISTINCT CAST(rt0.c1 AS BLOB))) ORDER BY (- (rt1.c3 COLLATE NOCASE)), (+ (((rt2.c2) NOT BETWEEN (rt1.c4) AND (rt1.c4))))  NULLS FIRST, IFNULL(((0.25371360108567664)AND(rt0.c1)), ((((rt0.c2)AND(rt2.c1)))AND(rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT CAST(rt0.c1 AS BLOB))) IS TRUE)  as count FROM rt2, rt0, rt1 ORDER BY (- (rt1.c3 COLLATE NOCASE)), (+ (((rt2.c2) NOT BETWEEN (rt1.c4) AND (rt1.c4))))  NULLS FIRST, IFNULL(((0.25371360108567664)AND(rt0.c1)), ((((rt0.c2)AND(rt2.c1)))AND(rt0.c0))) DESC);
SELECT COUNT(*) FROM rt2, rt0, rt1 WHERE (LIKELY(DISTINCT CAST(rt0.c1 AS BLOB))) ORDER BY (- (rt1.c3 COLLATE NOCASE)), (+ (((rt2.c2) NOT BETWEEN (rt1.c4) AND (rt1.c4))))  NULLS FIRST, IFNULL(((0.25371360108567664)AND(rt0.c1)), ((((rt0.c2)AND(rt2.c1)))AND(rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT CAST(rt0.c1 AS BLOB))) IS TRUE)  as count FROM rt2, rt0, rt1 ORDER BY (- (rt1.c3 COLLATE NOCASE)), (+ (((rt2.c2) NOT BETWEEN (rt1.c4) AND (rt1.c4))))  NULLS FIRST, IFNULL(((0.25371360108567664)AND(rt0.c1)), ((((rt0.c2)AND(rt2.c1)))AND(rt0.c0))) DESC);
SELECT COUNT(*) FROM rt2, rt0, rt1 WHERE (LIKELY(DISTINCT CAST(rt0.c1 AS BLOB))) ORDER BY (- (rt1.c3 COLLATE NOCASE)), (+ (((rt2.c2) NOT BETWEEN (rt1.c4) AND (rt1.c4))))  NULLS FIRST, IFNULL(((0.25371360108567664)AND(rt0.c1)), ((((rt0.c2)AND(rt2.c1)))AND(rt0.c0))) DESC;
SELECT * FROM rt0, rt1 WHERE ((((((rt1.c3, rt0.c3, rt1.c2)) BETWEEN ((rt1.c1, rt1.c4, rt1.c3)) AND ((rt1.c1, rt0.c0, rt1.c4)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((rt1.c3, rt0.c3, rt1.c2)) BETWEEN ((rt1.c1, rt1.c4, rt1.c3)) AND ((rt1.c1, rt0.c0, rt1.c4)))) NOTNULL)) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((((((rt1.c3, rt0.c3, rt1.c2)) BETWEEN ((rt1.c1, rt1.c4, rt1.c3)) AND ((rt1.c1, rt0.c0, rt1.c4)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((rt1.c3, rt0.c3, rt1.c2)) BETWEEN ((rt1.c1, rt1.c4, rt1.c3)) AND ((rt1.c1, rt0.c0, rt1.c4)))) NOTNULL)) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((((((rt1.c3, rt0.c3, rt1.c2)) BETWEEN ((rt1.c1, rt1.c4, rt1.c3)) AND ((rt1.c1, rt0.c0, rt1.c4)))) NOTNULL));
SELECT * FROM rt2 RIGHT OUTER JOIN rt1 ON (((((x'', rt1.c3, rt1.c3)) NOT BETWEEN ((rt2.c0, rt2.c1, rt1.c0)) AND ((rt1.c0, rt2.c2, rt1.c3))))-(CAST(rt1.c4 AS TEXT))) WHERE ((((rt2.c1)<<(rt1.c4)) IN ())) ORDER BY ((x'f7e8' COLLATE BINARY) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt2.c1)<<(rt1.c4)) IN ())) IS TRUE)  as count FROM rt2 RIGHT OUTER JOIN rt1 ON (((((x'', rt1.c3, rt1.c3)) NOT BETWEEN ((rt2.c0, rt2.c1, rt1.c0)) AND ((rt1.c0, rt2.c2, rt1.c3))))-(CAST(rt1.c4 AS TEXT))) ORDER BY ((x'f7e8' COLLATE BINARY) IS TRUE)  NULLS LAST);
SELECT * FROM rt2 RIGHT OUTER JOIN rt1 ON (((((x'', rt1.c3, rt1.c3)) NOT BETWEEN ((rt2.c0, rt2.c1, rt1.c0)) AND ((rt1.c0, rt2.c2, rt1.c3))))-(CAST(rt1.c4 AS TEXT))) WHERE ((((rt2.c1)<<(rt1.c4)) IN ())) ORDER BY ((x'f7e8' COLLATE BINARY) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt2.c1)<<(rt1.c4)) IN ())) IS TRUE)  as count FROM rt2 RIGHT OUTER JOIN rt1 ON (((((x'', rt1.c3, rt1.c3)) NOT BETWEEN ((rt2.c0, rt2.c1, rt1.c0)) AND ((rt1.c0, rt2.c2, rt1.c3))))-(CAST(rt1.c4 AS TEXT))) ORDER BY ((x'f7e8' COLLATE BINARY) IS TRUE)  NULLS LAST);
SELECT * FROM rt2 RIGHT OUTER JOIN rt1 ON (((((x'', rt1.c3, rt1.c3)) NOT BETWEEN ((rt2.c0, rt2.c1, rt1.c0)) AND ((rt1.c0, rt2.c2, rt1.c3))))-(CAST(rt1.c4 AS TEXT))) WHERE ((((rt2.c1)<<(rt1.c4)) IN ())) ORDER BY ((x'f7e8' COLLATE BINARY) IS TRUE)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, rt2 WHERE ((((NULL)<=(rt2.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((NULL)<=(rt2.c0)) IN ())) IS TRUE)  as count FROM rt1, rt2);
SELECT ALL COUNT(*) FROM rt1, rt2 WHERE ((((NULL)<=(rt2.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((NULL)<=(rt2.c0)) IN ())) IS TRUE)  as count FROM rt1, rt2);
SELECT ALL COUNT(*) FROM rt1, rt2 WHERE ((((NULL)<=(rt2.c0)) IN ()));
SELECT * FROM rt2, rt1 NATURAL JOIN rt0 WHERE (((((((((CASE rt1.c1  WHEN '' THEN rt2.c2 ELSE rt0.c2 END)AND(CAST(rt1.c0 AS BLOB))))AND(((rt1.c0)!=(rt1.c2)))))AND(((rt0.c3) NOT BETWEEN (rt1.c2) AND (rt2.c2)))))AND(((rt2.c0) IS FALSE)))) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ((((((((((CASE rt1.c1  WHEN '' THEN rt2.c2 ELSE rt0.c2 END)AND(CAST(rt1.c0 AS BLOB))))AND(((rt1.c0)<>(rt1.c2)))))AND(((rt0.c3) NOT BETWEEN (rt1.c2) AND (rt2.c2)))))AND(((rt2.c0) IS FALSE)))) IS TRUE)  as count FROM rt2, rt1 NATURAL JOIN rt0 ORDER BY rt0.c2);
SELECT * FROM rt2, rt1 NATURAL JOIN rt0 WHERE (((((((((CASE rt1.c1  WHEN '' THEN rt2.c2 ELSE rt0.c2 END)AND(CAST(rt1.c0 AS BLOB))))AND(((rt1.c0)!=(rt1.c2)))))AND(((rt0.c3) NOT BETWEEN (rt1.c2) AND (rt2.c2)))))AND(((rt2.c0) IS FALSE)))) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ((((((((((CASE rt1.c1  WHEN '' THEN rt2.c2 ELSE rt0.c2 END)AND(CAST(rt1.c0 AS BLOB))))AND(((rt1.c0)<>(rt1.c2)))))AND(((rt0.c3) NOT BETWEEN (rt1.c2) AND (rt2.c2)))))AND(((rt2.c0) IS FALSE)))) IS TRUE)  as count FROM rt2, rt1 NATURAL JOIN rt0 ORDER BY rt0.c2);
SELECT * FROM rt2, rt1 NATURAL JOIN rt0 WHERE (((((((((CASE rt1.c1  WHEN '' THEN rt2.c2 ELSE rt0.c2 END)AND(CAST(rt1.c0 AS BLOB))))AND(((rt1.c0)!=(rt1.c2)))))AND(((rt0.c3) NOT BETWEEN (rt1.c2) AND (rt2.c2)))))AND(((rt2.c0) IS FALSE)))) ORDER BY rt0.c2;
SELECT ALL * FROM rt1, rt0 WHERE (((((((rt0.c1)AND(rt1.c0)))OR(rt1.c3))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(rt1.c0)))OR(rt1.c3))) ISNULL)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (((((((rt0.c1)AND(rt1.c0)))OR(rt1.c3))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(rt1.c0)))OR(rt1.c3))) ISNULL)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (((((((rt0.c1)AND(rt1.c0)))OR(rt1.c3))) ISNULL));
SELECT COUNT(*) FROM rt1 WHERE ((+ (GLOB(x'6534', rt1.c0))));
SELECT SUM(count) FROM (SELECT (((+ (GLOB(x'6534', rt1.c0)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((+ (GLOB(x'6534', rt1.c0))));
SELECT SUM(count) FROM (SELECT (((+ (GLOB(x'6534', rt1.c0)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((+ (GLOB(x'6534', rt1.c0))));
SELECT COUNT(*) FROM rt1, rt0, rt2 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt1, rt0, rt2);
SELECT COUNT(*) FROM rt1, rt0, rt2 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt1, rt0, rt2);
SELECT COUNT(*) FROM rt1, rt0, rt2 WHERE (rt0.c3);
SELECT ALL * FROM rt0, rt2 WHERE (((rt0.c0) BETWEEN (rt2.c1) AND ((((rt2.c1, rt0.c3, rt2.c2))>=((rt2.c1, rt0.c2, rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (rt2.c1) AND ((((rt2.c1, rt0.c3, rt2.c2))>=((rt2.c1, rt0.c2, rt0.c2)))))) IS TRUE)  as count FROM rt0, rt2);
SELECT ALL * FROM rt0, rt2 WHERE (((rt0.c0) BETWEEN (rt2.c1) AND ((((rt2.c1, rt0.c3, rt2.c2))>=((rt2.c1, rt0.c2, rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (rt2.c1) AND ((((rt2.c1, rt0.c3, rt2.c2))>=((rt2.c1, rt0.c2, rt0.c2)))))) IS TRUE)  as count FROM rt0, rt2);
SELECT ALL * FROM rt0, rt2 WHERE (((rt0.c0) BETWEEN (rt2.c1) AND ((((rt2.c1, rt0.c3, rt2.c2))>=((rt2.c1, rt0.c2, rt0.c2))))));
SELECT * FROM rt1 WHERE (CAST(CASE WHEN rt1.c4 THEN rt1.c1 END AS BLOB)) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt1.c4 THEN rt1.c1 END AS BLOB)) IS TRUE)  as count FROM rt1 ORDER BY x'');
SELECT * FROM rt1 WHERE (CAST(CASE WHEN rt1.c4 THEN rt1.c1 END AS BLOB)) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt1.c4 THEN rt1.c1 END AS BLOB)) IS TRUE)  as count FROM rt1 ORDER BY x'');
SELECT * FROM rt1 WHERE (CAST(CASE WHEN rt1.c4 THEN rt1.c1 END AS BLOB)) ORDER BY x'';
SELECT * FROM rt0 WHERE (((rt0.c2) IS FALSE) COLLATE BINARY) ORDER BY (~ (CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 WHEN x'' THEN rt0.c1 ELSE 0xffffffffdba7c2dd END)), ((rt0.c3) BETWEEN (((((rt0.c2)AND(rt0.c1)))OR(rt0.c0))) AND ((NOT (rt0.c3))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (~ (CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 WHEN x'' THEN rt0.c1 ELSE 0xffffffffdba7c2dd END)), ((rt0.c3) BETWEEN (((((rt0.c2)AND(rt0.c1)))OR(rt0.c0))) AND ((NOT (rt0.c3)))));
SELECT * FROM rt0 WHERE (((rt0.c2) IS FALSE) COLLATE BINARY) ORDER BY (~ (CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 WHEN x'' THEN rt0.c1 ELSE 0xffffffffdba7c2dd END)), ((rt0.c3) BETWEEN (((((rt0.c2)AND(rt0.c1)))OR(rt0.c0))) AND ((NOT (rt0.c3))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (~ (CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 WHEN x'' THEN rt0.c1 ELSE 0xffffffffdba7c2dd END)), ((rt0.c3) BETWEEN (((((rt0.c2)AND(rt0.c1)))OR(rt0.c0))) AND ((NOT (rt0.c3)))));
SELECT * FROM rt0 WHERE (((rt0.c2) IS FALSE) COLLATE BINARY) ORDER BY (~ (CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 WHEN x'' THEN rt0.c1 ELSE 0xffffffffdba7c2dd END)), ((rt0.c3) BETWEEN (((((rt0.c2)AND(rt0.c1)))OR(rt0.c0))) AND ((NOT (rt0.c3))));
SELECT ALL COUNT(*) FROM rt2, rt1, rt0 WHERE ('0.9594436808008809' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (('0.9594436808008809' COLLATE RTRIM) IS TRUE)  as count FROM rt2, rt1, rt0);
SELECT ALL COUNT(*) FROM rt2, rt1, rt0 WHERE ('0.9594436808008809' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (('0.9594436808008809' COLLATE RTRIM) IS TRUE)  as count FROM rt2, rt1, rt0);
SELECT ALL COUNT(*) FROM rt2, rt1, rt0 WHERE ('0.9594436808008809' COLLATE RTRIM);
SELECT * FROM rt2, rt1 WHERE ((((x'' IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((x'' IN ())) NOTNULL)) IS TRUE)  as count FROM rt2, rt1);
SELECT * FROM rt2, rt1 WHERE ((((x'' IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((x'' IN ())) NOTNULL)) IS TRUE)  as count FROM rt2, rt1);
SELECT * FROM rt2, rt1 WHERE ((((x'' IN ())) NOTNULL));
SELECT COUNT(*) FROM rt1, rt2, rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)))%((~ (rt1.c3))))) ORDER BY CASE ((((rt2.c2)AND(rt1.c3)))AND('-1366227640'))  WHEN ((0.9648409035250186) NOT NULL) THEN ((rt2.c0) ISNULL) END, TYPEOF(((rt1.c0)AND(rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)))%((~ (rt1.c3))))) IS TRUE)  as count FROM rt1, rt2, rt0 ORDER BY CASE ((((rt2.c2)AND(rt1.c3)))AND('-1366227640'))  WHEN ((0.9648409035250186) NOT NULL) THEN ((rt2.c0) ISNULL) END, TYPEOF(((rt1.c0)AND(rt0.c2))) ASC);
SELECT COUNT(*) FROM rt1, rt2, rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)))%((~ (rt1.c3))))) ORDER BY CASE ((((rt2.c2)AND(rt1.c3)))AND('-1366227640'))  WHEN ((0.9648409035250186) NOT NULL) THEN ((rt2.c0) ISNULL) END, TYPEOF(((rt1.c0)AND(rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)))%((~ (rt1.c3))))) IS TRUE)  as count FROM rt1, rt2, rt0 ORDER BY CASE ((((rt2.c2)AND(rt1.c3)))AND('-1366227640'))  WHEN ((0.9648409035250186) NOT NULL) THEN ((rt2.c0) ISNULL) END, TYPEOF(((rt1.c0)AND(rt0.c2))) ASC);
SELECT COUNT(*) FROM rt1, rt2, rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)))%((~ (rt1.c3))))) ORDER BY CASE ((((rt2.c2)AND(rt1.c3)))AND('-1366227640'))  WHEN ((0.9648409035250186) NOT NULL) THEN ((rt2.c0) ISNULL) END, TYPEOF(((rt1.c0)AND(rt0.c2))) ASC;
SELECT ALL * FROM rt1 WHERE ((((((rt1.c2)GLOB(x'')), ((rt1.c3)IS(rt1.c2)), rt1.c0 COLLATE NOCASE))<((((((rt1.c0)OR(rt1.c1)))AND(rt1.c3)), TRIM(DISTINCT rt1.c4), (((rt1.c3)) BETWEEN ((rt1.c0)) AND ((rt1.c1)))))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c2)GLOB(x'')), ((rt1.c3)IS(rt1.c2)), rt1.c0 COLLATE NOCASE))<((((((rt1.c0)OR(rt1.c1)))AND(rt1.c3)), TRIM(DISTINCT rt1.c4), (((rt1.c3)) BETWEEN ((rt1.c0)) AND ((rt1.c1))))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c2)GLOB(x'')), ((rt1.c3)IS(rt1.c2)), rt1.c0 COLLATE NOCASE))<((((((rt1.c0)OR(rt1.c1)))AND(rt1.c3)), TRIM(DISTINCT rt1.c4), (((rt1.c3)) BETWEEN ((rt1.c0)) AND ((rt1.c1)))))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c2)GLOB(x'')), ((rt1.c3)IS(rt1.c2)), rt1.c0 COLLATE NOCASE))<((((((rt1.c0)OR(rt1.c1)))AND(rt1.c3)), TRIM(DISTINCT rt1.c4), (((rt1.c3)) BETWEEN ((rt1.c0)) AND ((rt1.c1))))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c2)GLOB(x'')), ((rt1.c3)IS(rt1.c2)), rt1.c0 COLLATE NOCASE))<((((((rt1.c0)OR(rt1.c1)))AND(rt1.c3)), TRIM(DISTINCT rt1.c4), (((rt1.c3)) BETWEEN ((rt1.c0)) AND ((rt1.c1)))))));
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN ((rt1.c3)LIKE(rt1.c0)) THEN ((((((((rt1.c1)OR(rt1.c4)))OR(rt1.c3)))OR(rt1.c2)))AND(rt1.c3)) END) ORDER BY ((CASE WHEN rt1.c3 THEN rt1.c0 END) IS TRUE), UNLIKELY(DISTINCT (rt1.c4 IN (rt1.c3)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c3)LIKE(rt1.c0)) THEN ((((((((rt1.c1)OR(rt1.c4)))OR(rt1.c3)))OR(rt1.c2)))AND(rt1.c3)) END) IS TRUE)  as count FROM rt1 ORDER BY ((CASE WHEN rt1.c3 THEN rt1.c0 END) IS TRUE), UNLIKELY(DISTINCT (rt1.c4 IN (rt1.c3))));
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN ((rt1.c3)LIKE(rt1.c0)) THEN ((((((((rt1.c1)OR(rt1.c4)))OR(rt1.c3)))OR(rt1.c2)))AND(rt1.c3)) END) ORDER BY ((CASE WHEN rt1.c3 THEN rt1.c0 END) IS TRUE), UNLIKELY(DISTINCT (rt1.c4 IN (rt1.c3)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c3)LIKE(rt1.c0)) THEN ((((((((rt1.c1)OR(rt1.c4)))OR(rt1.c3)))OR(rt1.c2)))AND(rt1.c3)) END) IS TRUE)  as count FROM rt1 ORDER BY ((CASE WHEN rt1.c3 THEN rt1.c0 END) IS TRUE), UNLIKELY(DISTINCT (rt1.c4 IN (rt1.c3))));
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN ((rt1.c3)LIKE(rt1.c0)) THEN ((((((((rt1.c1)OR(rt1.c4)))OR(rt1.c3)))OR(rt1.c2)))AND(rt1.c3)) END) ORDER BY ((CASE WHEN rt1.c3 THEN rt1.c0 END) IS TRUE), UNLIKELY(DISTINCT (rt1.c4 IN (rt1.c3)));
SELECT COUNT(*) FROM rt2 WHERE (CASE WHEN ((rt2.c2) NOT BETWEEN (rt2.c1) AND (rt2.c1)) THEN CAST(rt2.c1 AS NUMERIC) ELSE ((-1.773733415E9) NOTNULL) END) ORDER BY ((rt2.c0 IN ()) IN ()) DESC  NULLS LAST, CAST(((rt2.c2)IS(rt2.c1)) AS BLOB) ASC, (((rt2.c1)!=(rt2.c2)) IN ((rt2.c1 IN (rt2.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt2.c2) NOT BETWEEN (rt2.c1) AND (rt2.c1)) THEN CAST(rt2.c1 AS NUMERIC) ELSE ((-1.773733415E9) NOTNULL) END) IS TRUE)  as count FROM rt2 ORDER BY ((rt2.c0 IN ()) IN ()) DESC  NULLS LAST, CAST(((rt2.c2)IS(rt2.c1)) AS BLOB) ASC, (((rt2.c1)<>(rt2.c2)) IN ((rt2.c1 IN (rt2.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM rt2 WHERE (CASE WHEN ((rt2.c2) NOT BETWEEN (rt2.c1) AND (rt2.c1)) THEN CAST(rt2.c1 AS NUMERIC) ELSE ((-1.773733415E9) NOTNULL) END) ORDER BY ((rt2.c0 IN ()) IN ()) DESC  NULLS LAST, CAST(((rt2.c2)IS(rt2.c1)) AS BLOB) ASC, (((rt2.c1)!=(rt2.c2)) IN ((rt2.c1 IN (rt2.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt2.c2) NOT BETWEEN (rt2.c1) AND (rt2.c1)) THEN CAST(rt2.c1 AS NUMERIC) ELSE ((-1.773733415E9) NOTNULL) END) IS TRUE)  as count FROM rt2 ORDER BY ((rt2.c0 IN ()) IN ()) DESC  NULLS LAST, CAST(((rt2.c2)IS(rt2.c1)) AS BLOB) ASC, (((rt2.c1)<>(rt2.c2)) IN ((rt2.c1 IN (rt2.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM rt2 WHERE (CASE WHEN ((rt2.c2) NOT BETWEEN (rt2.c1) AND (rt2.c1)) THEN CAST(rt2.c1 AS NUMERIC) ELSE ((-1.773733415E9) NOTNULL) END) ORDER BY ((rt2.c0 IN ()) IN ()) DESC  NULLS LAST, CAST(((rt2.c2)IS(rt2.c1)) AS BLOB) ASC, (((rt2.c1)!=(rt2.c2)) IN ((rt2.c1 IN (rt2.c1))))  NULLS FIRST;
SELECT ALL * FROM rt0 LEFT OUTER JOIN rt2 ON ((CASE rt0.c2  WHEN rt2.c0 THEN rt1.c4 ELSE rt2.c1 END) NOT NULL) CROSS JOIN rt1 ON ('f%#g.++L' IN (rt2.c0, (((rt2.c2))>((rt2.c1))))) WHERE ((CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 ELSE 2145831757 END IN ())) ORDER BY (~ (NULL COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT (((CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 ELSE 2145831757 END IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt2 ON ((CASE rt0.c2  WHEN rt2.c0 THEN rt1.c4 ELSE rt2.c1 END) NOT NULL) CROSS JOIN rt1 ON ('f%#g.++L' IN (rt2.c0, (((rt2.c2))>((rt2.c1))))) ORDER BY (~ (NULL COLLATE NOCASE)) DESC);
SELECT ALL * FROM rt0 LEFT OUTER JOIN rt2 ON ((CASE rt0.c2  WHEN rt2.c0 THEN rt1.c4 ELSE rt2.c1 END) NOT NULL) CROSS JOIN rt1 ON ('f%#g.++L' IN (rt2.c0, (((rt2.c2))>((rt2.c1))))) WHERE ((CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 ELSE 2145831757 END IN ())) ORDER BY (~ (NULL COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT (((CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 ELSE 2145831757 END IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt2 ON ((CASE rt0.c2  WHEN rt2.c0 THEN rt1.c4 ELSE rt2.c1 END) NOT NULL) CROSS JOIN rt1 ON ('f%#g.++L' IN (rt2.c0, (((rt2.c2))>((rt2.c1))))) ORDER BY (~ (NULL COLLATE NOCASE)) DESC);
SELECT COUNT(*) FROM rt1, rt2, rt0 WHERE (((((rt2.c1)OR(rt2.c2)))AND(rt0.c3)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((rt2.c1)OR(rt2.c2)))AND(rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM rt1, rt2, rt0);
SELECT COUNT(*) FROM rt1, rt2, rt0 WHERE (((((rt2.c1)OR(rt2.c2)))AND(rt0.c3)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((rt2.c1)OR(rt2.c2)))AND(rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM rt1, rt2, rt0);
SELECT COUNT(*) FROM rt1, rt2, rt0 WHERE (((((rt2.c1)OR(rt2.c2)))AND(rt0.c3)) COLLATE BINARY);
SELECT * FROM rt0 WHERE ((((((rt0.c0))>((rt0.c3)))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (NULL)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))>((rt0.c3)))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (NULL))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c0))>((rt0.c3)))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (NULL)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))>((rt0.c3)))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (NULL))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c0))>((rt0.c3)))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (NULL)));
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c1 AS NUMERIC)) BETWEEN (LIKELIHOOD(rt1.c4, 0.18131088472733337)) AND ((rt1.c4 IN ())))) ORDER BY (((rt1.c3 IN ())) IS TRUE), CAST(CASE WHEN rt1.c2 THEN rt1.c0 WHEN x'' THEN rt1.c3 WHEN rt1.c3 THEN rt1.c4 END AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS NUMERIC)) BETWEEN (LIKELIHOOD(rt1.c4, 0.18131088472733337)) AND ((rt1.c4 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c3 IN ())) IS TRUE), CAST(CASE WHEN rt1.c2 THEN rt1.c0 WHEN x'' THEN rt1.c3 WHEN rt1.c3 THEN rt1.c4 END AS TEXT) DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c1 AS NUMERIC)) BETWEEN (LIKELIHOOD(rt1.c4, 0.18131088472733337)) AND ((rt1.c4 IN ())))) ORDER BY (((rt1.c3 IN ())) IS TRUE), CAST(CASE WHEN rt1.c2 THEN rt1.c0 WHEN x'' THEN rt1.c3 WHEN rt1.c3 THEN rt1.c4 END AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS NUMERIC)) BETWEEN (LIKELIHOOD(rt1.c4, 0.18131088472733337)) AND ((rt1.c4 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c3 IN ())) IS TRUE), CAST(CASE WHEN rt1.c2 THEN rt1.c0 WHEN x'' THEN rt1.c3 WHEN rt1.c3 THEN rt1.c4 END AS TEXT) DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c1 AS NUMERIC)) BETWEEN (LIKELIHOOD(rt1.c4, 0.18131088472733337)) AND ((rt1.c4 IN ())))) ORDER BY (((rt1.c3 IN ())) IS TRUE), CAST(CASE WHEN rt1.c2 THEN rt1.c0 WHEN x'' THEN rt1.c3 WHEN rt1.c3 THEN rt1.c4 END AS TEXT) DESC  NULLS LAST;
SELECT ALL * FROM rt0 FULL OUTER JOIN rt1 ON ((rt1.c4)<(rt0.c1)) COLLATE RTRIM RIGHT OUTER JOIN rt2 ON -1162570802 WHERE ((((rt1.c0))<((rt1.c1))) COLLATE RTRIM) ORDER BY ((((rt2.c2)+(rt1.c0)))%((rt1.c3 IN (rt0.c0)))) ASC, ((rt0.c3) NOT NULL) ASC  NULLS FIRST, (((rt2.c0)<=(rt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT (((((rt1.c0))<((rt1.c1))) COLLATE RTRIM) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON ((rt1.c4)<(rt0.c1)) COLLATE RTRIM RIGHT OUTER JOIN rt2 ON -1162570802 ORDER BY ((((rt2.c2)+(rt1.c0)))%((rt1.c3 IN (rt0.c0)))) ASC, ((rt0.c3) NOT NULL) ASC  NULLS FIRST, (((rt2.c0)<=(rt0.c1)) IN ()));
SELECT ALL * FROM rt0 FULL OUTER JOIN rt1 ON ((rt1.c4)<(rt0.c1)) COLLATE RTRIM RIGHT OUTER JOIN rt2 ON -1162570802 WHERE ((((rt1.c0))<((rt1.c1))) COLLATE RTRIM) ORDER BY ((((rt2.c2)+(rt1.c0)))%((rt1.c3 IN (rt0.c0)))) ASC, ((rt0.c3) NOT NULL) ASC  NULLS FIRST, (((rt2.c0)<=(rt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT (((((rt1.c0))<((rt1.c1))) COLLATE RTRIM) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON ((rt1.c4)<(rt0.c1)) COLLATE RTRIM RIGHT OUTER JOIN rt2 ON -1162570802 ORDER BY ((((rt2.c2)+(rt1.c0)))%((rt1.c3 IN (rt0.c0)))) ASC, ((rt0.c3) NOT NULL) ASC  NULLS FIRST, (((rt2.c0)<=(rt0.c1)) IN ()));
SELECT ALL * FROM rt0 FULL OUTER JOIN rt1 ON ((rt1.c4)<(rt0.c1)) COLLATE RTRIM RIGHT OUTER JOIN rt2 ON -1162570802 WHERE ((((rt1.c0))<((rt1.c1))) COLLATE RTRIM) ORDER BY ((((rt2.c2)+(rt1.c0)))%((rt1.c3 IN (rt0.c0)))) ASC, ((rt0.c3) NOT NULL) ASC  NULLS FIRST, (((rt2.c0)<=(rt0.c1)) IN ());
SELECT ALL * FROM rt0 FULL OUTER JOIN rt1 ON ((((rt1.c1) BETWEEN (rt1.c1) AND ('O'))) NOT BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt1.c3))) AND (((rt1.c3) NOTNULL))) WHERE ((((rt0.c0)%(rt1.c1)) IN (((rt1.c3)IS(rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)%(rt1.c1)) IN (((rt1.c3)IS(rt1.c4))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON ((((rt1.c1) BETWEEN (rt1.c1) AND ('O'))) NOT BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt1.c3))) AND (((rt1.c3) NOTNULL))));
SELECT ALL * FROM rt0 FULL OUTER JOIN rt1 ON ((((rt1.c1) BETWEEN (rt1.c1) AND ('O'))) NOT BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt1.c3))) AND (((rt1.c3) NOTNULL))) WHERE ((((rt0.c0)%(rt1.c1)) IN (((rt1.c3)IS(rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)%(rt1.c1)) IN (((rt1.c3)IS(rt1.c4))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON ((((rt1.c1) BETWEEN (rt1.c1) AND ('O'))) NOT BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt1.c3))) AND (((rt1.c3) NOTNULL))));
SELECT ALL * FROM rt0 FULL OUTER JOIN rt1 ON ((((rt1.c1) BETWEEN (rt1.c1) AND ('O'))) NOT BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt1.c3))) AND (((rt1.c3) NOTNULL))) WHERE ((((rt0.c0)%(rt1.c1)) IN (((rt1.c3)IS(rt1.c4)))));
SELECT * FROM rt1 INNER JOIN rt2 ON TYPEOF(((rt2.c2)%(rt1.c0))) LEFT OUTER JOIN rt0 ON '-650861742' WHERE (TIME(rt2.c2, -800223326, rt0.c3, rt1.c3, rt2.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((TIME(rt2.c2, -800223326, rt0.c3, rt1.c3, rt2.c0) COLLATE RTRIM) IS TRUE)  as count FROM rt1 INNER JOIN rt2 ON TYPEOF(((rt2.c2)%(rt1.c0))) LEFT OUTER JOIN rt0 ON '-650861742');
SELECT * FROM rt1 INNER JOIN rt2 ON TYPEOF(((rt2.c2)%(rt1.c0))) LEFT OUTER JOIN rt0 ON '-650861742' WHERE (TIME(rt2.c2, -800223326, rt0.c3, rt1.c3, rt2.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((TIME(rt2.c2, -800223326, rt0.c3, rt1.c3, rt2.c0) COLLATE RTRIM) IS TRUE)  as count FROM rt1 INNER JOIN rt2 ON TYPEOF(((rt2.c2)%(rt1.c0))) LEFT OUTER JOIN rt0 ON '-650861742');
SELECT * FROM rt1 INNER JOIN rt2 ON TYPEOF(((rt2.c2)%(rt1.c0))) LEFT OUTER JOIN rt0 ON '-650861742' WHERE (TIME(rt2.c2, -800223326, rt0.c3, rt1.c3, rt2.c0) COLLATE RTRIM);
SELECT * FROM rt2, rt1 RIGHT OUTER JOIN rt0 ON LIKE(rt2.c2, rt1.c0) COLLATE BINARY WHERE (((((CASE WHEN rt0.c0 THEN rt0.c2 END)AND(rt1.c1)))AND(((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN rt0.c0 THEN rt0.c2 END)AND(rt1.c1)))AND(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt2, rt1 RIGHT OUTER JOIN rt0 ON LIKE(rt2.c2, rt1.c0) COLLATE BINARY);
SELECT * FROM rt2, rt1 RIGHT OUTER JOIN rt0 ON LIKE(rt2.c2, rt1.c0) COLLATE BINARY WHERE (((((CASE WHEN rt0.c0 THEN rt0.c2 END)AND(rt1.c1)))AND(((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN rt0.c0 THEN rt0.c2 END)AND(rt1.c1)))AND(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt2, rt1 RIGHT OUTER JOIN rt0 ON LIKE(rt2.c2, rt1.c0) COLLATE BINARY);
SELECT * FROM rt2, rt1 RIGHT OUTER JOIN rt0 ON LIKE(rt2.c2, rt1.c0) COLLATE BINARY WHERE (((((CASE WHEN rt0.c0 THEN rt0.c2 END)AND(rt1.c1)))AND(((rt0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c2, '2<'))))OR(((rt0.c1) NOT BETWEEN (rt0.c3) AND (NULL)))))AND(INSTR(rt0.c1, rt0.c2)))) ORDER BY (((((rt0.c0))<>((rt0.c1))))IS NOT(rt0.c2 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c2, '2<'))))OR(((rt0.c1) NOT BETWEEN (rt0.c3) AND (NULL)))))AND(INSTR(rt0.c1, rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0))!=((rt0.c1))))IS NOT(rt0.c2 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c2, '2<'))))OR(((rt0.c1) NOT BETWEEN (rt0.c3) AND (NULL)))))AND(INSTR(rt0.c1, rt0.c2)))) ORDER BY (((((rt0.c0))<>((rt0.c1))))IS NOT(rt0.c2 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c2, '2<'))))OR(((rt0.c1) NOT BETWEEN (rt0.c3) AND (NULL)))))AND(INSTR(rt0.c1, rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0))!=((rt0.c1))))IS NOT(rt0.c2 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c2, '2<'))))OR(((rt0.c1) NOT BETWEEN (rt0.c3) AND (NULL)))))AND(INSTR(rt0.c1, rt0.c2)))) ORDER BY (((((rt0.c0))<>((rt0.c1))))IS NOT(rt0.c2 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT * FROM rt1, rt0 WHERE ((((rt1.c4 IN (rt0.c3, rt1.c2)))<>((((0.43245198350400493)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3)))))) ORDER BY CAST(((((rt0.c0)OR(rt0.c3)))AND(rt0.c0)) AS TEXT) ASC, (+ ((+ (rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c4 IN (rt0.c3, rt1.c2)))<>((((0.43245198350400493)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3)))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST(((((rt0.c0)OR(rt0.c3)))AND(rt0.c0)) AS TEXT) ASC, (+ ((+ (rt1.c1)))));
SELECT * FROM rt1, rt0 WHERE ((((rt1.c4 IN (rt0.c3, rt1.c2)))<>((((0.43245198350400493)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3)))))) ORDER BY CAST(((((rt0.c0)OR(rt0.c3)))AND(rt0.c0)) AS TEXT) ASC, (+ ((+ (rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c4 IN (rt0.c3, rt1.c2)))<>((((0.43245198350400493)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3)))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST(((((rt0.c0)OR(rt0.c3)))AND(rt0.c0)) AS TEXT) ASC, (+ ((+ (rt1.c1)))));
SELECT * FROM rt1, rt0 WHERE ((((rt1.c4 IN (rt0.c3, rt1.c2)))<>((((0.43245198350400493)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3)))))) ORDER BY CAST(((((rt0.c0)OR(rt0.c3)))AND(rt0.c0)) AS TEXT) ASC, (+ ((+ (rt1.c1))));
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((rt0.c0 COLLATE RTRIM)&(CAST(rt0.c0 AS NUMERIC))) DESC, ((((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END)AND(((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c3)))AND(0.7846268819831723)))))OR(((((rt0.c2)AND(rt0.c3)))OR('')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE RTRIM)&(CAST(rt0.c0 AS NUMERIC))) DESC, ((((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END)AND(((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c3)))AND(0.7846268819831723)))))OR(((((rt0.c2)AND(rt0.c3)))OR('')))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((rt0.c0 COLLATE RTRIM)&(CAST(rt0.c0 AS NUMERIC))) DESC, ((((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END)AND(((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c3)))AND(0.7846268819831723)))))OR(((((rt0.c2)AND(rt0.c3)))OR('')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE RTRIM)&(CAST(rt0.c0 AS NUMERIC))) DESC, ((((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END)AND(((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c3)))AND(0.7846268819831723)))))OR(((((rt0.c2)AND(rt0.c3)))OR('')))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((rt0.c0 COLLATE RTRIM)&(CAST(rt0.c0 AS NUMERIC))) DESC, ((((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END)AND(((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c3)))AND(0.7846268819831723)))))OR(((((rt0.c2)AND(rt0.c3)))OR('')))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (LIKELY(DISTINCT CASE WHEN rt0.c3 THEN rt0.c1 WHEN x'' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END)) ORDER BY (((rt0.c3, rt0.c3, rt0.c0, rt0.c3, rt0.c3)) BETWEEN ((rt0.c0 COLLATE RTRIM, ((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)), rt0.c3, CAST(rt0.c2 AS REAL), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))) AND ((((rt0.c3)OR(rt0.c0)), (~ (rt0.c3)), rt0.c2 COLLATE BINARY, ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)), rt0.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT CASE WHEN rt0.c3 THEN rt0.c1 WHEN x'' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3, rt0.c3, rt0.c0, rt0.c3, rt0.c3)) BETWEEN ((rt0.c0 COLLATE RTRIM, ((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)), rt0.c3, CAST(rt0.c2 AS REAL), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))) AND ((((rt0.c3)OR(rt0.c0)), (~ (rt0.c3)), rt0.c2 COLLATE BINARY, ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)), rt0.c2))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (LIKELY(DISTINCT CASE WHEN rt0.c3 THEN rt0.c1 WHEN x'' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END)) ORDER BY (((rt0.c3, rt0.c3, rt0.c0, rt0.c3, rt0.c3)) BETWEEN ((rt0.c0 COLLATE RTRIM, ((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)), rt0.c3, CAST(rt0.c2 AS REAL), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))) AND ((((rt0.c3)OR(rt0.c0)), (~ (rt0.c3)), rt0.c2 COLLATE BINARY, ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)), rt0.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT CASE WHEN rt0.c3 THEN rt0.c1 WHEN x'' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3, rt0.c3, rt0.c0, rt0.c3, rt0.c3)) BETWEEN ((rt0.c0 COLLATE RTRIM, ((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)), rt0.c3, CAST(rt0.c2 AS REAL), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))) AND ((((rt0.c3)OR(rt0.c0)), (~ (rt0.c3)), rt0.c2 COLLATE BINARY, ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)), rt0.c2))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (LIKELY(DISTINCT CASE WHEN rt0.c3 THEN rt0.c1 WHEN x'' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END)) ORDER BY (((rt0.c3, rt0.c3, rt0.c0, rt0.c3, rt0.c3)) BETWEEN ((rt0.c0 COLLATE RTRIM, ((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)), rt0.c3, CAST(rt0.c2 AS REAL), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))) AND ((((rt0.c3)OR(rt0.c0)), (~ (rt0.c3)), rt0.c2 COLLATE BINARY, ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)), rt0.c2))) ASC  NULLS LAST;
SELECT ALL * FROM rt1 INNER JOIN rt2 ON rt2.c2 INNER JOIN rt0 ON CAST(CAST(rt1.c3 AS NUMERIC) AS INTEGER) WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM rt1 INNER JOIN rt2 ON rt2.c2 INNER JOIN rt0 ON CAST(CAST(rt1.c3 AS NUMERIC) AS INTEGER));
SELECT ALL * FROM rt1 INNER JOIN rt2 ON rt2.c2 INNER JOIN rt0 ON CAST(CAST(rt1.c3 AS NUMERIC) AS INTEGER) WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM rt1 INNER JOIN rt2 ON rt2.c2 INNER JOIN rt0 ON CAST(CAST(rt1.c3 AS NUMERIC) AS INTEGER));
SELECT ALL * FROM rt1 INNER JOIN rt2 ON rt2.c2 INNER JOIN rt0 ON CAST(CAST(rt1.c3 AS NUMERIC) AS INTEGER) WHERE (LAST_INSERT_ROWID());
SELECT * FROM rt1, rt0 NATURAL JOIN rt2 WHERE (LENGTH((((rt0.c3))<((rt0.c2))))) ORDER BY CASE rt0.c2  WHEN (((rt1.c3))>=((rt0.c1))) THEN (((rt2.c0, rt1.c3, rt2.c2)) NOT BETWEEN ((rt2.c0, rt0.c1, rt0.c3)) AND ((rt1.c0, rt0.c0, rt0.c2))) ELSE CASE WHEN rt2.c0 THEN rt0.c0 END END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LENGTH((((rt0.c3))<((rt0.c2))))) IS TRUE)  as count FROM rt1, rt0 NATURAL JOIN rt2 ORDER BY CASE rt0.c2  WHEN (((rt1.c3))>=((rt0.c1))) THEN (((rt2.c0, rt1.c3, rt2.c2)) NOT BETWEEN ((rt2.c0, rt0.c1, rt0.c3)) AND ((rt1.c0, rt0.c0, rt0.c2))) ELSE CASE WHEN rt2.c0 THEN rt0.c0 END END ASC  NULLS LAST);
SELECT * FROM rt1, rt0 NATURAL JOIN rt2 WHERE (LENGTH((((rt0.c3))<((rt0.c2))))) ORDER BY CASE rt0.c2  WHEN (((rt1.c3))>=((rt0.c1))) THEN (((rt2.c0, rt1.c3, rt2.c2)) NOT BETWEEN ((rt2.c0, rt0.c1, rt0.c3)) AND ((rt1.c0, rt0.c0, rt0.c2))) ELSE CASE WHEN rt2.c0 THEN rt0.c0 END END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LENGTH((((rt0.c3))<((rt0.c2))))) IS TRUE)  as count FROM rt1, rt0 NATURAL JOIN rt2 ORDER BY CASE rt0.c2  WHEN (((rt1.c3))>=((rt0.c1))) THEN (((rt2.c0, rt1.c3, rt2.c2)) NOT BETWEEN ((rt2.c0, rt0.c1, rt0.c3)) AND ((rt1.c0, rt0.c0, rt0.c2))) ELSE CASE WHEN rt2.c0 THEN rt0.c0 END END ASC  NULLS LAST);
SELECT * FROM rt1, rt0 NATURAL JOIN rt2 WHERE (LENGTH((((rt0.c3))<((rt0.c2))))) ORDER BY CASE rt0.c2  WHEN (((rt1.c3))>=((rt0.c1))) THEN (((rt2.c0, rt1.c3, rt2.c2)) NOT BETWEEN ((rt2.c0, rt0.c1, rt0.c3)) AND ((rt1.c0, rt0.c0, rt0.c2))) ELSE CASE WHEN rt2.c0 THEN rt0.c0 END END ASC  NULLS LAST;
SELECT ALL * FROM rt0, rt1 INNER JOIN rt2 ON (((CASE rt1.c2  WHEN rt2.c2 THEN rt1.c4 WHEN rt1.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END, rt0.c0, CASE WHEN rt2.c0 THEN rt1.c0 END))>((x'0a3e', ((rt1.c1)IS(rt0.c1)), rt1.c0))) WHERE ((((rt1.c1, rt2.c2, 0.8662796315896031, rt1.c3, rt1.c4)) NOT BETWEEN ((UPPER(DISTINCT rt0.c0), HEX(DISTINCT rt1.c1), CAST(rt2.c0 AS INTEGER), CASE WHEN rt2.c1 THEN rt0.c0 ELSE rt1.c2 END, rt2.c1)) AND ((((rt2.c0) ISNULL), ((rt2.c0) IS FALSE), ((rt0.c3)*(rt1.c2)), (- (-1570817445)), (- (rt1.c4)))))) ORDER BY (((rt2.c2)) NOT BETWEEN ((rt1.c4)) AND ((CAST(rt1.c4 AS REAL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1, rt2.c2, 0.8662796315896031, rt1.c3, rt1.c4)) NOT BETWEEN ((UPPER(DISTINCT rt0.c0), HEX(DISTINCT rt1.c1), CAST(rt2.c0 AS INTEGER), CASE WHEN rt2.c1 THEN rt0.c0 ELSE rt1.c2 END, rt2.c1)) AND ((((rt2.c0) ISNULL), ((rt2.c0) IS FALSE), ((rt0.c3)*(rt1.c2)), (- (-1570817445)), (- (rt1.c4)))))) IS TRUE)  as count FROM rt0, rt1 INNER JOIN rt2 ON (((CASE rt1.c2  WHEN rt2.c2 THEN rt1.c4 WHEN rt1.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END, rt0.c0, CASE WHEN rt2.c0 THEN rt1.c0 END))>((x'0a3e', ((rt1.c1)IS(rt0.c1)), rt1.c0))) ORDER BY (((rt2.c2)) NOT BETWEEN ((rt1.c4)) AND ((CAST(rt1.c4 AS REAL)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 INNER JOIN rt2 ON (((CASE rt1.c2  WHEN rt2.c2 THEN rt1.c4 WHEN rt1.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END, rt0.c0, CASE WHEN rt2.c0 THEN rt1.c0 END))>((x'0a3e', ((rt1.c1)IS(rt0.c1)), rt1.c0))) WHERE ((((rt1.c1, rt2.c2, 0.8662796315896031, rt1.c3, rt1.c4)) NOT BETWEEN ((UPPER(DISTINCT rt0.c0), HEX(DISTINCT rt1.c1), CAST(rt2.c0 AS INTEGER), CASE WHEN rt2.c1 THEN rt0.c0 ELSE rt1.c2 END, rt2.c1)) AND ((((rt2.c0) ISNULL), ((rt2.c0) IS FALSE), ((rt0.c3)*(rt1.c2)), (- (-1570817445)), (- (rt1.c4)))))) ORDER BY (((rt2.c2)) NOT BETWEEN ((rt1.c4)) AND ((CAST(rt1.c4 AS REAL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1, rt2.c2, 0.8662796315896031, rt1.c3, rt1.c4)) NOT BETWEEN ((UPPER(DISTINCT rt0.c0), HEX(DISTINCT rt1.c1), CAST(rt2.c0 AS INTEGER), CASE WHEN rt2.c1 THEN rt0.c0 ELSE rt1.c2 END, rt2.c1)) AND ((((rt2.c0) ISNULL), ((rt2.c0) IS FALSE), ((rt0.c3)*(rt1.c2)), (- (-1570817445)), (- (rt1.c4)))))) IS TRUE)  as count FROM rt0, rt1 INNER JOIN rt2 ON (((CASE rt1.c2  WHEN rt2.c2 THEN rt1.c4 WHEN rt1.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END, rt0.c0, CASE WHEN rt2.c0 THEN rt1.c0 END))>((x'0a3e', ((rt1.c1)IS(rt0.c1)), rt1.c0))) ORDER BY (((rt2.c2)) NOT BETWEEN ((rt1.c4)) AND ((CAST(rt1.c4 AS REAL)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 INNER JOIN rt2 ON (((CASE rt1.c2  WHEN rt2.c2 THEN rt1.c4 WHEN rt1.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END, rt0.c0, CASE WHEN rt2.c0 THEN rt1.c0 END))>((x'0a3e', ((rt1.c1)IS(rt0.c1)), rt1.c0))) WHERE ((((rt1.c1, rt2.c2, 0.8662796315896031, rt1.c3, rt1.c4)) NOT BETWEEN ((UPPER(DISTINCT rt0.c0), HEX(DISTINCT rt1.c1), CAST(rt2.c0 AS INTEGER), CASE WHEN rt2.c1 THEN rt0.c0 ELSE rt1.c2 END, rt2.c1)) AND ((((rt2.c0) ISNULL), ((rt2.c0) IS FALSE), ((rt0.c3)*(rt1.c2)), (- (-1570817445)), (- (rt1.c4)))))) ORDER BY (((rt2.c2)) NOT BETWEEN ((rt1.c4)) AND ((CAST(rt1.c4 AS REAL)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, rt2, rt0 WHERE (rt0.c3) ORDER BY ((((rt0.c2)OR(rt1.c2)))AND(rt1.c4)) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt1 NOT INDEXED, rt2, rt0 ORDER BY ((((rt0.c2)OR(rt1.c2)))AND(rt1.c4)) COLLATE BINARY DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt2, rt0 WHERE (rt0.c3) ORDER BY ((((rt0.c2)OR(rt1.c2)))AND(rt1.c4)) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt1 NOT INDEXED, rt2, rt0 ORDER BY ((((rt0.c2)OR(rt1.c2)))AND(rt1.c4)) COLLATE BINARY DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt2, rt0 WHERE (rt0.c3) ORDER BY ((((rt0.c2)OR(rt1.c2)))AND(rt1.c4)) COLLATE BINARY DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, rt2, rt1 WHERE ((((((rt2.c0)) BETWEEN (('GQ')) AND ((rt0.c1))))AND(((((((((rt1.c4)OR(rt2.c1)))OR(rt1.c4)))AND(rt1.c1)))OR(rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt2.c0)) BETWEEN (('GQ')) AND ((rt0.c1))))AND(((((((((rt1.c4)OR(rt2.c1)))OR(rt1.c4)))AND(rt1.c1)))OR(rt1.c0))))) IS TRUE)  as count FROM rt0, rt2, rt1);
SELECT COUNT(*) FROM rt0, rt2, rt1 WHERE ((((((rt2.c0)) BETWEEN (('GQ')) AND ((rt0.c1))))AND(((((((((rt1.c4)OR(rt2.c1)))OR(rt1.c4)))AND(rt1.c1)))OR(rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt2.c0)) BETWEEN (('GQ')) AND ((rt0.c1))))AND(((((((((rt1.c4)OR(rt2.c1)))OR(rt1.c4)))AND(rt1.c1)))OR(rt1.c0))))) IS TRUE)  as count FROM rt0, rt2, rt1);
SELECT COUNT(*) FROM rt0, rt2, rt1 WHERE ((((((rt2.c0)) BETWEEN (('GQ')) AND ((rt0.c1))))AND(((((((((rt1.c4)OR(rt2.c1)))OR(rt1.c4)))AND(rt1.c1)))OR(rt1.c0)))));
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON '997685484' WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON '997685484');
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON '997685484' WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON '997685484');
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON '997685484' WHERE (rt1.c1);
SELECT ALL COUNT(*) FROM rt1 WHERE (COALESCE(((((rt1.c0)AND(rt1.c3)))AND(rt1.c1)), CAST(rt1.c2 AS TEXT), TRIM(DISTINCT rt1.c4, rt1.c4), TRIM(rt1.c1)));
SELECT SUM(count) FROM (SELECT ((COALESCE(((((rt1.c0)AND(rt1.c3)))AND(rt1.c1)), CAST(rt1.c2 AS TEXT), TRIM(DISTINCT rt1.c4, rt1.c4), TRIM(rt1.c1))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (COALESCE(((((rt1.c0)AND(rt1.c3)))AND(rt1.c1)), CAST(rt1.c2 AS TEXT), TRIM(DISTINCT rt1.c4, rt1.c4), TRIM(rt1.c1)));
SELECT SUM(count) FROM (SELECT ((COALESCE(((((rt1.c0)AND(rt1.c3)))AND(rt1.c1)), CAST(rt1.c2 AS TEXT), TRIM(DISTINCT rt1.c4, rt1.c4), TRIM(rt1.c1))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (COALESCE(((((rt1.c0)AND(rt1.c3)))AND(rt1.c1)), CAST(rt1.c2 AS TEXT), TRIM(DISTINCT rt1.c4, rt1.c4), TRIM(rt1.c1)));
SELECT ALL * FROM rt0 WHERE (((x'' IN (rt0.c0)) IN (((((rt0.c3)AND(rt0.c0)))AND(rt0.c0)), rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((x'' IN (rt0.c0)) IN (((((rt0.c3)AND(rt0.c0)))AND(rt0.c0)), rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((x'' IN (rt0.c0)) IN (((((rt0.c3)AND(rt0.c0)))AND(rt0.c0)), rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((x'' IN (rt0.c0)) IN (((((rt0.c3)AND(rt0.c0)))AND(rt0.c0)), rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((x'' IN (rt0.c0)) IN (((((rt0.c3)AND(rt0.c0)))AND(rt0.c0)), rt0.c1)));
SELECT ALL * FROM rt0 WHERE ((((rt0.c1, rt0.c3, rt0.c2)) BETWEEN (((rt0.c0 IN ()), (- (rt0.c1)), ((rt0.c2) NOT BETWEEN (x'') AND (rt0.c1)))) AND (((x'389c3e09' IN ()), rt0.c2 COLLATE NOCASE, (rt0.c0 IN ()))))) ORDER BY (0.4142042763553766 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c3, rt0.c2)) BETWEEN (((rt0.c0 IN ()), (- (rt0.c1)), ((rt0.c2) NOT BETWEEN (x'') AND (rt0.c1)))) AND (((x'389c3e09' IN ()), rt0.c2 COLLATE NOCASE, (rt0.c0 IN ()))))) IS TRUE)  as count FROM rt0 ORDER BY (0.4142042763553766 IN ())  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1, rt0.c3, rt0.c2)) BETWEEN (((rt0.c0 IN ()), (- (rt0.c1)), ((rt0.c2) NOT BETWEEN (x'') AND (rt0.c1)))) AND (((x'389c3e09' IN ()), rt0.c2 COLLATE NOCASE, (rt0.c0 IN ()))))) ORDER BY (0.4142042763553766 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c3, rt0.c2)) BETWEEN (((rt0.c0 IN ()), (- (rt0.c1)), ((rt0.c2) NOT BETWEEN (x'') AND (rt0.c1)))) AND (((x'389c3e09' IN ()), rt0.c2 COLLATE NOCASE, (rt0.c0 IN ()))))) IS TRUE)  as count FROM rt0 ORDER BY (0.4142042763553766 IN ())  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1, rt0.c3, rt0.c2)) BETWEEN (((rt0.c0 IN ()), (- (rt0.c1)), ((rt0.c2) NOT BETWEEN (x'') AND (rt0.c1)))) AND (((x'389c3e09' IN ()), rt0.c2 COLLATE NOCASE, (rt0.c0 IN ()))))) ORDER BY (0.4142042763553766 IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM rt2, rt1 WHERE (((rt1.c2) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((rt1.c2) NOTNULL)) IS TRUE)  as count FROM rt2, rt1);
SELECT ALL COUNT(*) FROM rt2, rt1 WHERE (((rt1.c2) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((rt1.c2) NOTNULL)) IS TRUE)  as count FROM rt2, rt1);
SELECT ALL COUNT(*) FROM rt2, rt1 WHERE (((rt1.c2) NOTNULL));
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT * FROM rt1, rt2 WHERE (0X4d653a48);
SELECT SUM(count) FROM (SELECT ((0X4d653a48) IS TRUE)  as count FROM rt1, rt2);
SELECT * FROM rt1, rt2 WHERE (0X4d653a48);
SELECT SUM(count) FROM (SELECT ((0X4d653a48) IS TRUE)  as count FROM rt1, rt2);
SELECT * FROM rt1, rt2 WHERE (0X4d653a48);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) IS TRUE))/(((rt0.c2)|(rt0.c3))))) ORDER BY TOTAL_CHANGES();
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) IS TRUE))/(((rt0.c2)|(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY TOTAL_CHANGES());
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) IS TRUE))/(((rt0.c2)|(rt0.c3))))) ORDER BY TOTAL_CHANGES();
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) IS TRUE))/(((rt0.c2)|(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY TOTAL_CHANGES());
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) IS TRUE))/(((rt0.c2)|(rt0.c3))))) ORDER BY TOTAL_CHANGES();
SELECT * FROM rt2 WHERE (x'') ORDER BY rt2.c0  NULLS LAST, (((((rt2.c0, rt2.c2, rt2.c0)) NOT BETWEEN ((0.3153623577586634, rt2.c0, rt2.c2)) AND ((rt2.c1, rt2.c1, rt2.c1))))!=(json_array_length(rt2.c0, rt2.c0)));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt2 ORDER BY rt2.c0  NULLS LAST, (((((rt2.c0, rt2.c2, rt2.c0)) NOT BETWEEN ((0.3153623577586634, rt2.c0, rt2.c2)) AND ((rt2.c1, rt2.c1, rt2.c1))))!=(json_array_length(rt2.c0, rt2.c0))));
SELECT * FROM rt2 WHERE (x'') ORDER BY rt2.c0  NULLS LAST, (((((rt2.c0, rt2.c2, rt2.c0)) NOT BETWEEN ((0.3153623577586634, rt2.c0, rt2.c2)) AND ((rt2.c1, rt2.c1, rt2.c1))))!=(json_array_length(rt2.c0, rt2.c0)));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt2 ORDER BY rt2.c0  NULLS LAST, (((((rt2.c0, rt2.c2, rt2.c0)) NOT BETWEEN ((0.3153623577586634, rt2.c0, rt2.c2)) AND ((rt2.c1, rt2.c1, rt2.c1))))!=(json_array_length(rt2.c0, rt2.c0))));
SELECT ALL COUNT(*) FROM rt2, rt1, rt0 WHERE (MIN(rt1.c1, rt1.c1) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((MIN(rt1.c1, rt1.c1) COLLATE BINARY) IS TRUE)  as count FROM rt2, rt1, rt0);
SELECT ALL COUNT(*) FROM rt2, rt1, rt0 WHERE (MIN(rt1.c1, rt1.c1) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((MIN(rt1.c1, rt1.c1) COLLATE BINARY) IS TRUE)  as count FROM rt2, rt1, rt0);
SELECT ALL COUNT(*) FROM rt2, rt1, rt0 WHERE (MIN(rt1.c1, rt1.c1) COLLATE BINARY);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0) ISNULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) ISNULL)) NOT NULL)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0) ISNULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) ISNULL)) NOT NULL)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0) ISNULL)) NOT NULL));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN rt2 ON x'' WHERE (((IFNULL(DISTINCT rt2.c0, rt0.c3)) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt2.c0) AND (rt2.c1))) AND (((rt0.c2)AND(rt2.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT rt2.c0, rt0.c3)) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt2.c0) AND (rt2.c1))) AND (((rt0.c2)AND(rt2.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN rt2 ON x'');
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN rt2 ON x'' WHERE (((IFNULL(DISTINCT rt2.c0, rt0.c3)) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt2.c0) AND (rt2.c1))) AND (((rt0.c2)AND(rt2.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT rt2.c0, rt0.c3)) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt2.c0) AND (rt2.c1))) AND (((rt0.c2)AND(rt2.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN rt2 ON x'');
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN rt2 ON x'' WHERE (((IFNULL(DISTINCT rt2.c0, rt0.c3)) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt2.c0) AND (rt2.c1))) AND (((rt0.c2)AND(rt2.c0)))));
SELECT ALL COUNT(*) FROM rt2 RIGHT OUTER JOIN rt0 ON LOWER(DISTINCT ((rt2.c2)=(rt0.c0))) WHERE (((((rt2.c0)>(rt2.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt2.c0)>(rt2.c1))) NOT NULL)) IS TRUE)  as count FROM rt2 RIGHT OUTER JOIN rt0 ON LOWER(DISTINCT ((rt2.c2)=(rt0.c0))));
SELECT ALL COUNT(*) FROM rt2 RIGHT OUTER JOIN rt0 ON LOWER(DISTINCT ((rt2.c2)=(rt0.c0))) WHERE (((((rt2.c0)>(rt2.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt2.c0)>(rt2.c1))) NOT NULL)) IS TRUE)  as count FROM rt2 RIGHT OUTER JOIN rt0 ON LOWER(DISTINCT ((rt2.c2)=(rt0.c0))));
SELECT ALL COUNT(*) FROM rt2 RIGHT OUTER JOIN rt0 ON LOWER(DISTINCT ((rt2.c2)=(rt0.c0))) WHERE (((((rt2.c0)>(rt2.c1))) NOT NULL));
SELECT ALL COUNT(*) FROM rt2 WHERE ((- (((rt2.c0) BETWEEN (rt2.c0) AND (1.705413232E9)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt2.c0) BETWEEN (rt2.c0) AND (1.705413232E9))))) IS TRUE)  as count FROM rt2);
SELECT ALL COUNT(*) FROM rt2 WHERE ((- (((rt2.c0) BETWEEN (rt2.c0) AND (1.705413232E9)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt2.c0) BETWEEN (rt2.c0) AND (1.705413232E9))))) IS TRUE)  as count FROM rt2);
SELECT ALL COUNT(*) FROM rt2 WHERE ((- (((rt2.c0) BETWEEN (rt2.c0) AND (1.705413232E9)))));
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON LTRIM(((((rt0.c3)AND(rt0.c3)))OR(0.34160027709918117))) CROSS JOIN rt2 ON CASE (- (rt1.c0))  WHEN (- (rt0.c3)) THEN (((rt0.c1)) NOT BETWEEN ((rt2.c1)) AND ((rt0.c2))) ELSE (NOT (rt2.c1)) END WHERE ((rt1.c3 IN ()) COLLATE NOCASE) ORDER BY (~ (rt1.c2)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt1.c3 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON LTRIM(((((rt0.c3)AND(rt0.c3)))OR(0.34160027709918117))) CROSS JOIN rt2 ON CASE (- (rt1.c0))  WHEN (- (rt0.c3)) THEN (((rt0.c1)) NOT BETWEEN ((rt2.c1)) AND ((rt0.c2))) ELSE (NOT (rt2.c1)) END ORDER BY (~ (rt1.c2)) ASC  NULLS LAST);
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON LTRIM(((((rt0.c3)AND(rt0.c3)))OR(0.34160027709918117))) CROSS JOIN rt2 ON CASE (- (rt1.c0))  WHEN (- (rt0.c3)) THEN (((rt0.c1)) NOT BETWEEN ((rt2.c1)) AND ((rt0.c2))) ELSE (NOT (rt2.c1)) END WHERE ((rt1.c3 IN ()) COLLATE NOCASE) ORDER BY (~ (rt1.c2)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt1.c3 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON LTRIM(((((rt0.c3)AND(rt0.c3)))OR(0.34160027709918117))) CROSS JOIN rt2 ON CASE (- (rt1.c0))  WHEN (- (rt0.c3)) THEN (((rt0.c1)) NOT BETWEEN ((rt2.c1)) AND ((rt0.c2))) ELSE (NOT (rt2.c1)) END ORDER BY (~ (rt1.c2)) ASC  NULLS LAST);
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON LTRIM(((((rt0.c3)AND(rt0.c3)))OR(0.34160027709918117))) CROSS JOIN rt2 ON CASE (- (rt1.c0))  WHEN (- (rt0.c3)) THEN (((rt0.c1)) NOT BETWEEN ((rt2.c1)) AND ((rt0.c2))) ELSE (NOT (rt2.c1)) END WHERE ((rt1.c3 IN ()) COLLATE NOCASE) ORDER BY (~ (rt1.c2)) ASC  NULLS LAST;
SELECT * FROM rt1, rt2 WHERE (((STRFTIME(rt1.c2, rt1.c1, rt1.c3))IS(((rt2.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((STRFTIME(rt1.c2, rt1.c1, rt1.c3))IS(((rt2.c1) NOTNULL)))) IS TRUE)  as count FROM rt1, rt2);
SELECT * FROM rt1, rt2 WHERE (((STRFTIME(rt1.c2, rt1.c1, rt1.c3))IS(((rt2.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((STRFTIME(rt1.c2, rt1.c1, rt1.c3))IS(((rt2.c1) NOTNULL)))) IS TRUE)  as count FROM rt1, rt2);
SELECT * FROM rt1, rt2 WHERE (((STRFTIME(rt1.c2, rt1.c1, rt1.c3))IS(((rt2.c1) NOTNULL))));
SELECT * FROM rt2 WHERE (((((IFNULL(DISTINCT rt2.c2, x'55fa'))OR((x'' IN ()))))OR(((rt2.c0)>=(rt2.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((IFNULL(DISTINCT rt2.c2, x'55fa'))OR((x'' IN ()))))OR(((rt2.c0)>=(rt2.c1))))) IS TRUE)  as count FROM rt2);
SELECT * FROM rt2 WHERE (((((IFNULL(DISTINCT rt2.c2, x'55fa'))OR((x'' IN ()))))OR(((rt2.c0)>=(rt2.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((IFNULL(DISTINCT rt2.c2, x'55fa'))OR((x'' IN ()))))OR(((rt2.c0)>=(rt2.c1))))) IS TRUE)  as count FROM rt2);
SELECT * FROM rt2 WHERE (((((IFNULL(DISTINCT rt2.c2, x'55fa'))OR((x'' IN ()))))OR(((rt2.c0)>=(rt2.c1)))));
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((((0.9889458400454565) NOTNULL))) AND ((((rt1.c2) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) NOT BETWEEN ((((0.9889458400454565) NOTNULL))) AND ((((rt1.c2) NOT NULL))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((((0.9889458400454565) NOTNULL))) AND ((((rt1.c2) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) NOT BETWEEN ((((0.9889458400454565) NOTNULL))) AND ((((rt1.c2) NOT NULL))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((((0.9889458400454565) NOTNULL))) AND ((((rt1.c2) NOT NULL)))));
SELECT * FROM rt2 LEFT OUTER JOIN rt1 ON ((rt0.c2)/(COALESCE(rt0.c3, rt1.c2))) CROSS JOIN rt0 ON CAST(((rt1.c2)+(rt0.c3)) AS TEXT) WHERE ((((((((((- (rt0.c3)))OR((- (rt0.c2)))))AND((NULL IN ()))))OR(rt2.c0 COLLATE BINARY)))AND(((rt1.c0)|(rt2.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((- (rt0.c3)))OR((- (rt0.c2)))))AND((NULL IN ()))))OR(rt2.c0 COLLATE BINARY)))AND(((rt1.c0)|(rt2.c1))))) IS TRUE)  as count FROM rt2 LEFT OUTER JOIN rt1 ON ((rt0.c2)/(COALESCE(rt0.c3, rt1.c2))) CROSS JOIN rt0 ON CAST(((rt1.c2)+(rt0.c3)) AS TEXT));
SELECT * FROM rt2 LEFT OUTER JOIN rt1 ON ((rt0.c2)/(COALESCE(rt0.c3, rt1.c2))) CROSS JOIN rt0 ON CAST(((rt1.c2)+(rt0.c3)) AS TEXT) WHERE ((((((((((- (rt0.c3)))OR((- (rt0.c2)))))AND((NULL IN ()))))OR(rt2.c0 COLLATE BINARY)))AND(((rt1.c0)|(rt2.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((- (rt0.c3)))OR((- (rt0.c2)))))AND((NULL IN ()))))OR(rt2.c0 COLLATE BINARY)))AND(((rt1.c0)|(rt2.c1))))) IS TRUE)  as count FROM rt2 LEFT OUTER JOIN rt1 ON ((rt0.c2)/(COALESCE(rt0.c3, rt1.c2))) CROSS JOIN rt0 ON CAST(((rt1.c2)+(rt0.c3)) AS TEXT));
SELECT * FROM rt2 LEFT OUTER JOIN rt1 ON ((rt0.c2)/(COALESCE(rt0.c3, rt1.c2))) CROSS JOIN rt0 ON CAST(((rt1.c2)+(rt0.c3)) AS TEXT) WHERE ((((((((((- (rt0.c3)))OR((- (rt0.c2)))))AND((NULL IN ()))))OR(rt2.c0 COLLATE BINARY)))AND(((rt1.c0)|(rt2.c1)))));
SELECT ALL * FROM rt1 WHERE (NULL) ORDER BY ((TYPEOF(DISTINCT rt1.c2))>(((rt1.c4)>=(rt1.c3)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1 ORDER BY ((TYPEOF(DISTINCT rt1.c2))>(((rt1.c4)>=(rt1.c3)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (NULL) ORDER BY ((TYPEOF(DISTINCT rt1.c2))>(((rt1.c4)>=(rt1.c3)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1 ORDER BY ((TYPEOF(DISTINCT rt1.c2))>(((rt1.c4)>=(rt1.c3)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (NULL) ORDER BY ((TYPEOF(DISTINCT rt1.c2))>(((rt1.c4)>=(rt1.c3)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt2, rt0, rt1 WHERE ((NOT (((rt1.c4)<<(rt1.c1))))) ORDER BY (NOT (((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c1)))AND(rt1.c2)))AND(rt2.c2))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c4)<<(rt1.c1))))) IS TRUE)  as count FROM rt2, rt0, rt1 ORDER BY (NOT (((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c1)))AND(rt1.c2)))AND(rt2.c2)))));
SELECT COUNT(*) FROM rt2, rt0, rt1 WHERE ((NOT (((rt1.c4)<<(rt1.c1))))) ORDER BY (NOT (((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c1)))AND(rt1.c2)))AND(rt2.c2))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c4)<<(rt1.c1))))) IS TRUE)  as count FROM rt2, rt0, rt1 ORDER BY (NOT (((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c1)))AND(rt1.c2)))AND(rt2.c2)))));
SELECT COUNT(*) FROM rt2, rt0, rt1 WHERE ((NOT (((rt1.c4)<<(rt1.c1))))) ORDER BY (NOT (((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c1)))AND(rt1.c2)))AND(rt2.c2))));
SELECT ALL * FROM rt1 WHERE (CASE (rt1.c1 IN ())  WHEN (rt1.c0 IN ()) THEN (rt1.c3 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt1.c1 IN ())  WHEN (rt1.c0 IN ()) THEN (rt1.c3 IN ()) END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE (rt1.c1 IN ())  WHEN (rt1.c0 IN ()) THEN (rt1.c3 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt1.c1 IN ())  WHEN (rt1.c0 IN ()) THEN (rt1.c3 IN ()) END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE (rt1.c1 IN ())  WHEN (rt1.c0 IN ()) THEN (rt1.c3 IN ()) END);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt2 ON (((CASE rt0.c0  WHEN rt0.c0 THEN rt1.c2 END))>=((CAST(rt1.c1 AS NUMERIC)))) FULL OUTER JOIN rt1 ON ((((~ (rt1.c2))))<=((NULL))) WHERE (((((rt0.c1)IS(rt0.c2)))==(CAST(rt1.c4 AS BLOB)))) ORDER BY (((rt2.c1)*(rt0.c3)) IN ()) ASC  NULLS FIRST, NULL ASC  NULLS FIRST, ((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 END) NOT BETWEEN (((rt2.c0)AND(rt1.c4))) AND (''));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)IS(rt0.c2)))=(CAST(rt1.c4 AS BLOB)))) IS TRUE)  as count FROM rt0 INNER JOIN rt2 ON (((CASE rt0.c0  WHEN rt0.c0 THEN rt1.c2 END))>=((CAST(rt1.c1 AS NUMERIC)))) FULL OUTER JOIN rt1 ON ((((~ (rt1.c2))))<=((NULL))) ORDER BY (((rt2.c1)*(rt0.c3)) IN ()) ASC  NULLS FIRST, NULL ASC  NULLS FIRST, ((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 END) NOT BETWEEN (((rt2.c0)AND(rt1.c4))) AND ('')));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt2 ON (((CASE rt0.c0  WHEN rt0.c0 THEN rt1.c2 END))>=((CAST(rt1.c1 AS NUMERIC)))) FULL OUTER JOIN rt1 ON ((((~ (rt1.c2))))<=((NULL))) WHERE (((((rt0.c1)IS(rt0.c2)))==(CAST(rt1.c4 AS BLOB)))) ORDER BY (((rt2.c1)*(rt0.c3)) IN ()) ASC  NULLS FIRST, NULL ASC  NULLS FIRST, ((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 END) NOT BETWEEN (((rt2.c0)AND(rt1.c4))) AND (''));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)IS(rt0.c2)))=(CAST(rt1.c4 AS BLOB)))) IS TRUE)  as count FROM rt0 INNER JOIN rt2 ON (((CASE rt0.c0  WHEN rt0.c0 THEN rt1.c2 END))>=((CAST(rt1.c1 AS NUMERIC)))) FULL OUTER JOIN rt1 ON ((((~ (rt1.c2))))<=((NULL))) ORDER BY (((rt2.c1)*(rt0.c3)) IN ()) ASC  NULLS FIRST, NULL ASC  NULLS FIRST, ((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 END) NOT BETWEEN (((rt2.c0)AND(rt1.c4))) AND ('')));
SELECT ALL * FROM rt2, rt0 WHERE (((rt2.c1 IN ()) IN (((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((rt2.c1 IN ()) IN (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt2, rt0);
SELECT ALL * FROM rt2, rt0 WHERE (((rt2.c1 IN ()) IN (((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((rt2.c1 IN ()) IN (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt2, rt0);
SELECT ALL * FROM rt2, rt0 WHERE (((rt2.c1 IN ()) IN (((rt0.c1) IS TRUE))));
SELECT * FROM rt2 WHERE (NULLIF('314066957', CASE WHEN rt2.c1 THEN x'59ed' ELSE rt2.c2 END)) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF('314066957', CASE WHEN rt2.c1 THEN x'59ed' ELSE rt2.c2 END)) IS TRUE)  as count FROM rt2 ORDER BY NULL  NULLS LAST);
SELECT * FROM rt2 WHERE (NULLIF('314066957', CASE WHEN rt2.c1 THEN x'59ed' ELSE rt2.c2 END)) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF('314066957', CASE WHEN rt2.c1 THEN x'59ed' ELSE rt2.c2 END)) IS TRUE)  as count FROM rt2 ORDER BY NULL  NULLS LAST);
SELECT * FROM rt2 WHERE (NULLIF('314066957', CASE WHEN rt2.c1 THEN x'59ed' ELSE rt2.c2 END)) ORDER BY NULL  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, rt0, rt2 WHERE (CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN CAST(rt0.c2 AS INTEGER) END) ORDER BY ((CASE rt2.c1  WHEN rt1.c3 THEN rt1.c4 WHEN rt0.c0 THEN rt2.c1 WHEN rt2.c2 THEN rt2.c0 END) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN CAST(rt0.c2 AS INTEGER) END) IS TRUE)  as count FROM rt1, rt0, rt2 ORDER BY ((CASE rt2.c1  WHEN rt1.c3 THEN rt1.c4 WHEN rt0.c0 THEN rt2.c1 WHEN rt2.c2 THEN rt2.c0 END) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0, rt2 WHERE (CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN CAST(rt0.c2 AS INTEGER) END) ORDER BY ((CASE rt2.c1  WHEN rt1.c3 THEN rt1.c4 WHEN rt0.c0 THEN rt2.c1 WHEN rt2.c2 THEN rt2.c0 END) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN CAST(rt0.c2 AS INTEGER) END) IS TRUE)  as count FROM rt1, rt0, rt2 ORDER BY ((CASE rt2.c1  WHEN rt1.c3 THEN rt1.c4 WHEN rt0.c0 THEN rt2.c1 WHEN rt2.c2 THEN rt2.c0 END) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0, rt2 WHERE (CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN CAST(rt0.c2 AS INTEGER) END) ORDER BY ((CASE rt2.c1  WHEN rt1.c3 THEN rt1.c4 WHEN rt0.c0 THEN rt2.c1 WHEN rt2.c2 THEN rt2.c0 END) IS TRUE)  NULLS LAST;
SELECT * FROM rt0 INNER JOIN rt1 ON NULL WHERE (CASE CAST(rt1.c2 AS BLOB)  WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END THEN ((rt1.c0)OR(rt1.c3)) ELSE ((rt0.c2) ISNULL) END) ORDER BY ((((rt1.c0) IS TRUE))-(rt0.c0))  NULLS LAST, (rt1.c0 IN ('')) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt1.c2 AS BLOB)  WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END THEN ((rt1.c0)OR(rt1.c3)) ELSE ((rt0.c2) ISNULL) END) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON NULL ORDER BY ((((rt1.c0) IS TRUE))-(rt0.c0))  NULLS LAST, (rt1.c0 IN ('')) COLLATE RTRIM);
SELECT * FROM rt0 INNER JOIN rt1 ON NULL WHERE (CASE CAST(rt1.c2 AS BLOB)  WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END THEN ((rt1.c0)OR(rt1.c3)) ELSE ((rt0.c2) ISNULL) END) ORDER BY ((((rt1.c0) IS TRUE))-(rt0.c0))  NULLS LAST, (rt1.c0 IN ('')) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt1.c2 AS BLOB)  WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END THEN ((rt1.c0)OR(rt1.c3)) ELSE ((rt0.c2) ISNULL) END) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON NULL ORDER BY ((((rt1.c0) IS TRUE))-(rt0.c0))  NULLS LAST, (rt1.c0 IN ('')) COLLATE RTRIM);
SELECT * FROM rt0 INNER JOIN rt1 ON NULL WHERE (CASE CAST(rt1.c2 AS BLOB)  WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END THEN ((rt1.c0)OR(rt1.c3)) ELSE ((rt0.c2) ISNULL) END) ORDER BY ((((rt1.c0) IS TRUE))-(rt0.c0))  NULLS LAST, (rt1.c0 IN ('')) COLLATE RTRIM;
SELECT * FROM rt2, rt1, rt0 WHERE (rt1.c2 COLLATE RTRIM) ORDER BY (((((rt0.c3))<=((0.5716092223466789))))==(CAST(rt2.c0 AS BLOB))) ASC, (((rt2.c0) BETWEEN (rt1.c3) AND (rt0.c1)) IN (rt1.c4, ((rt2.c0) BETWEEN (rt1.c3) AND (0.018027154757097263)))), ABS(rt1.c4 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2 COLLATE RTRIM) IS TRUE)  as count FROM rt2, rt1, rt0 ORDER BY (((((rt0.c3))<=((0.5716092223466789))))==(CAST(rt2.c0 AS BLOB))) ASC, (((rt2.c0) BETWEEN (rt1.c3) AND (rt0.c1)) IN (rt1.c4, ((rt2.c0) BETWEEN (rt1.c3) AND (0.018027154757097263)))), ABS(rt1.c4 COLLATE BINARY));
SELECT * FROM rt2, rt1, rt0 WHERE (rt1.c2 COLLATE RTRIM) ORDER BY (((((rt0.c3))<=((0.5716092223466789))))==(CAST(rt2.c0 AS BLOB))) ASC, (((rt2.c0) BETWEEN (rt1.c3) AND (rt0.c1)) IN (rt1.c4, ((rt2.c0) BETWEEN (rt1.c3) AND (0.018027154757097263)))), ABS(rt1.c4 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2 COLLATE RTRIM) IS TRUE)  as count FROM rt2, rt1, rt0 ORDER BY (((((rt0.c3))<=((0.5716092223466789))))==(CAST(rt2.c0 AS BLOB))) ASC, (((rt2.c0) BETWEEN (rt1.c3) AND (rt0.c1)) IN (rt1.c4, ((rt2.c0) BETWEEN (rt1.c3) AND (0.018027154757097263)))), ABS(rt1.c4 COLLATE BINARY));
SELECT * FROM rt2, rt1, rt0 WHERE (rt1.c2 COLLATE RTRIM) ORDER BY (((((rt0.c3))<=((0.5716092223466789))))==(CAST(rt2.c0 AS BLOB))) ASC, (((rt2.c0) BETWEEN (rt1.c3) AND (rt0.c1)) IN (rt1.c4, ((rt2.c0) BETWEEN (rt1.c3) AND (0.018027154757097263)))), ABS(rt1.c4 COLLATE BINARY);
SELECT ALL * FROM rt2 WHERE ((+ (((rt2.c0)/(rt2.c2))))) ORDER BY HEX(DISTINCT ((rt2.c0) BETWEEN (rt2.c0) AND (rt2.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((rt2.c0)/(rt2.c2))))) IS TRUE)  as count FROM rt2 ORDER BY HEX(DISTINCT ((rt2.c0) BETWEEN (rt2.c0) AND (rt2.c0)))  NULLS LAST);
SELECT ALL * FROM rt2 WHERE ((+ (((rt2.c0)/(rt2.c2))))) ORDER BY HEX(DISTINCT ((rt2.c0) BETWEEN (rt2.c0) AND (rt2.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((rt2.c0)/(rt2.c2))))) IS TRUE)  as count FROM rt2 ORDER BY HEX(DISTINCT ((rt2.c0) BETWEEN (rt2.c0) AND (rt2.c0)))  NULLS LAST);
SELECT ALL * FROM rt2 WHERE ((+ (((rt2.c0)/(rt2.c2))))) ORDER BY HEX(DISTINCT ((rt2.c0) BETWEEN (rt2.c0) AND (rt2.c0)))  NULLS LAST;
SELECT * FROM rt0, rt2, rt1 WHERE (((((CAST(rt2.c0 AS BLOB))OR(STRFTIME(rt0.c3, rt2.c0, rt1.c4))))AND(CAST(rt0.c0 AS NUMERIC)))) ORDER BY ((((rt2.c1)) BETWEEN ((rt2.c1)) AND ((rt1.c0))) IN (((rt2.c2) NOT NULL), (- ('2118866780')))) ASC, (((((((((((((rt1.c0 IN ()))OR(IFNULL(DISTINCT rt0.c1, rt2.c0))))AND(((((rt1.c0)AND(rt0.c3)))OR(rt2.c0)))))AND((+ (rt2.c2)))))OR(((rt1.c2)GLOB(rt0.c1)))))OR(CHANGES())))OR((~ (rt0.c0)))), CAST(HEX(DISTINCT NULL) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt2.c0 AS BLOB))OR(STRFTIME(rt0.c3, rt2.c0, rt1.c4))))AND(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0, rt2, rt1 ORDER BY ((((rt2.c1)) BETWEEN ((rt2.c1)) AND ((rt1.c0))) IN (((rt2.c2) NOT NULL), (- ('2118866780')))) ASC, (((((((((((((rt1.c0 IN ()))OR(IFNULL(DISTINCT rt0.c1, rt2.c0))))AND(((((rt1.c0)AND(rt0.c3)))OR(rt2.c0)))))AND((+ (rt2.c2)))))OR(((rt1.c2)GLOB(rt0.c1)))))OR(CHANGES())))OR((~ (rt0.c0)))), CAST(HEX(DISTINCT NULL) AS NUMERIC) DESC);
SELECT * FROM rt0, rt2, rt1 WHERE (((((CAST(rt2.c0 AS BLOB))OR(STRFTIME(rt0.c3, rt2.c0, rt1.c4))))AND(CAST(rt0.c0 AS NUMERIC)))) ORDER BY ((((rt2.c1)) BETWEEN ((rt2.c1)) AND ((rt1.c0))) IN (((rt2.c2) NOT NULL), (- ('2118866780')))) ASC, (((((((((((((rt1.c0 IN ()))OR(IFNULL(DISTINCT rt0.c1, rt2.c0))))AND(((((rt1.c0)AND(rt0.c3)))OR(rt2.c0)))))AND((+ (rt2.c2)))))OR(((rt1.c2)GLOB(rt0.c1)))))OR(CHANGES())))OR((~ (rt0.c0)))), CAST(HEX(DISTINCT NULL) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt2.c0 AS BLOB))OR(STRFTIME(rt0.c3, rt2.c0, rt1.c4))))AND(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0, rt2, rt1 ORDER BY ((((rt2.c1)) BETWEEN ((rt2.c1)) AND ((rt1.c0))) IN (((rt2.c2) NOT NULL), (- ('2118866780')))) ASC, (((((((((((((rt1.c0 IN ()))OR(IFNULL(DISTINCT rt0.c1, rt2.c0))))AND(((((rt1.c0)AND(rt0.c3)))OR(rt2.c0)))))AND((+ (rt2.c2)))))OR(((rt1.c2)GLOB(rt0.c1)))))OR(CHANGES())))OR((~ (rt0.c0)))), CAST(HEX(DISTINCT NULL) AS NUMERIC) DESC);
SELECT * FROM rt0, rt2, rt1 WHERE (((((CAST(rt2.c0 AS BLOB))OR(STRFTIME(rt0.c3, rt2.c0, rt1.c4))))AND(CAST(rt0.c0 AS NUMERIC)))) ORDER BY ((((rt2.c1)) BETWEEN ((rt2.c1)) AND ((rt1.c0))) IN (((rt2.c2) NOT NULL), (- ('2118866780')))) ASC, (((((((((((((rt1.c0 IN ()))OR(IFNULL(DISTINCT rt0.c1, rt2.c0))))AND(((((rt1.c0)AND(rt0.c3)))OR(rt2.c0)))))AND((+ (rt2.c2)))))OR(((rt1.c2)GLOB(rt0.c1)))))OR(CHANGES())))OR((~ (rt0.c0)))), CAST(HEX(DISTINCT NULL) AS NUMERIC) DESC;
SELECT ALL * FROM rt2 WHERE (json_type(CASE NULL  WHEN rt2.c0 THEN rt2.c2 ELSE rt2.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((json_type(CASE NULL  WHEN rt2.c0 THEN rt2.c2 ELSE rt2.c0 END)) IS TRUE)  as count FROM rt2);
SELECT ALL * FROM rt2 WHERE (json_type(CASE NULL  WHEN rt2.c0 THEN rt2.c2 ELSE rt2.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((json_type(CASE NULL  WHEN rt2.c0 THEN rt2.c2 ELSE rt2.c0 END)) IS TRUE)  as count FROM rt2);
SELECT ALL * FROM rt2 WHERE (json_type(CASE NULL  WHEN rt2.c0 THEN rt2.c2 ELSE rt2.c0 END));
SELECT ALL COUNT(*) FROM rt2 WHERE ((NOT (((rt2.c2) BETWEEN (rt2.c1) AND (rt2.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt2.c2) BETWEEN (rt2.c1) AND (rt2.c2))))) IS TRUE)  as count FROM rt2);
SELECT ALL COUNT(*) FROM rt2 WHERE ((NOT (((rt2.c2) BETWEEN (rt2.c1) AND (rt2.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt2.c2) BETWEEN (rt2.c1) AND (rt2.c2))))) IS TRUE)  as count FROM rt2);
SELECT ALL COUNT(*) FROM rt2 WHERE ((NOT (((rt2.c2) BETWEEN (rt2.c1) AND (rt2.c2)))));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((rt1.c3 IN (rt1.c1))) BETWEEN (((rt0.c2) BETWEEN (rt1.c2) AND (rt0.c2))) AND (((rt1.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((rt1.c3 IN (rt1.c1))) BETWEEN (((rt0.c2) BETWEEN (rt1.c2) AND (rt0.c2))) AND (((rt1.c2) NOTNULL)))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((rt1.c3 IN (rt1.c1))) BETWEEN (((rt0.c2) BETWEEN (rt1.c2) AND (rt0.c2))) AND (((rt1.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((rt1.c3 IN (rt1.c1))) BETWEEN (((rt0.c2) BETWEEN (rt1.c2) AND (rt0.c2))) AND (((rt1.c2) NOTNULL)))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((rt1.c3 IN (rt1.c1))) BETWEEN (((rt0.c2) BETWEEN (rt1.c2) AND (rt0.c2))) AND (((rt1.c2) NOTNULL))));
SELECT * FROM rt0 WHERE (CASE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))  WHEN (((rt0.c1, '0.23285325578656446', rt0.c3)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c1))) THEN (- (rt0.c0)) WHEN UNLIKELY(rt0.c0) THEN ((0Xffffffff8e760e7c)IS(rt0.c1)) WHEN ((rt0.c1)/(rt0.c2)) THEN rt0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))  WHEN (((rt0.c1, '0.23285325578656446', rt0.c3)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c1))) THEN (- (rt0.c0)) WHEN UNLIKELY(rt0.c0) THEN ((0Xffffffff8e760e7c)IS(rt0.c1)) WHEN ((rt0.c1)/(rt0.c2)) THEN rt0.c1 END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))  WHEN (((rt0.c1, '0.23285325578656446', rt0.c3)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c1))) THEN (- (rt0.c0)) WHEN UNLIKELY(rt0.c0) THEN ((0Xffffffff8e760e7c)IS(rt0.c1)) WHEN ((rt0.c1)/(rt0.c2)) THEN rt0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))  WHEN (((rt0.c1, '0.23285325578656446', rt0.c3)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c1))) THEN (- (rt0.c0)) WHEN UNLIKELY(rt0.c0) THEN ((0Xffffffff8e760e7c)IS(rt0.c1)) WHEN ((rt0.c1)/(rt0.c2)) THEN rt0.c1 END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))  WHEN (((rt0.c1, '0.23285325578656446', rt0.c3)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c1))) THEN (- (rt0.c0)) WHEN UNLIKELY(rt0.c0) THEN ((0Xffffffff8e760e7c)IS(rt0.c1)) WHEN ((rt0.c1)/(rt0.c2)) THEN rt0.c1 END);
SELECT * FROM rt0, rt2, rt1 WHERE (NULLIF(rt0.c3 COLLATE NOCASE, ((rt1.c3) NOT BETWEEN (rt0.c2) AND (rt1.c4)))) ORDER BY ((((((((CASE rt2.c0  WHEN NULL THEN rt2.c0 ELSE rt0.c1 END)OR(((rt2.c1) BETWEEN (rt1.c2) AND (rt1.c2)))))AND(LENGTH(rt0.c1))))OR((~ (rt1.c4)))))OR('_s념+\m'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(rt0.c3 COLLATE NOCASE, ((rt1.c3) NOT BETWEEN (rt0.c2) AND (rt1.c4)))) IS TRUE)  as count FROM rt0, rt2, rt1 ORDER BY ((((((((CASE rt2.c0  WHEN NULL THEN rt2.c0 ELSE rt0.c1 END)OR(((rt2.c1) BETWEEN (rt1.c2) AND (rt1.c2)))))AND(LENGTH(rt0.c1))))OR((~ (rt1.c4)))))OR('_s념+\m'))  NULLS LAST);
SELECT * FROM rt0, rt2, rt1 WHERE (NULLIF(rt0.c3 COLLATE NOCASE, ((rt1.c3) NOT BETWEEN (rt0.c2) AND (rt1.c4)))) ORDER BY ((((((((CASE rt2.c0  WHEN NULL THEN rt2.c0 ELSE rt0.c1 END)OR(((rt2.c1) BETWEEN (rt1.c2) AND (rt1.c2)))))AND(LENGTH(rt0.c1))))OR((~ (rt1.c4)))))OR('_s념+\m'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(rt0.c3 COLLATE NOCASE, ((rt1.c3) NOT BETWEEN (rt0.c2) AND (rt1.c4)))) IS TRUE)  as count FROM rt0, rt2, rt1 ORDER BY ((((((((CASE rt2.c0  WHEN NULL THEN rt2.c0 ELSE rt0.c1 END)OR(((rt2.c1) BETWEEN (rt1.c2) AND (rt1.c2)))))AND(LENGTH(rt0.c1))))OR((~ (rt1.c4)))))OR('_s념+\m'))  NULLS LAST);
SELECT * FROM rt0, rt2, rt1 WHERE (NULLIF(rt0.c3 COLLATE NOCASE, ((rt1.c3) NOT BETWEEN (rt0.c2) AND (rt1.c4)))) ORDER BY ((((((((CASE rt2.c0  WHEN NULL THEN rt2.c0 ELSE rt0.c1 END)OR(((rt2.c1) BETWEEN (rt1.c2) AND (rt1.c2)))))AND(LENGTH(rt0.c1))))OR((~ (rt1.c4)))))OR('_s념+\m'))  NULLS LAST;
SELECT COUNT(*) FROM rt1 INNER JOIN rt0 ON CASE rt2.c2 COLLATE NOCASE  WHEN rt1.c2 COLLATE BINARY THEN rt0.c0 COLLATE BINARY ELSE ((rt0.c2)|(rt1.c0)) END LEFT OUTER JOIN rt2 ON (((- ('wnowy'))) NOTNULL) WHERE ((((((+ (rt0.c3)))OR((((rt0.c0)) BETWEEN ((rt1.c2)) AND ((rt2.c2))))))AND((rt2.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((+ (rt0.c3)))OR((((rt0.c0)) BETWEEN ((rt1.c2)) AND ((rt2.c2))))))AND((rt2.c1 IN ())))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON CASE rt2.c2 COLLATE NOCASE  WHEN rt1.c2 COLLATE BINARY THEN rt0.c0 COLLATE BINARY ELSE ((rt0.c2)|(rt1.c0)) END LEFT OUTER JOIN rt2 ON (((- ('wnowy'))) NOTNULL));
SELECT COUNT(*) FROM rt1 INNER JOIN rt0 ON CASE rt2.c2 COLLATE NOCASE  WHEN rt1.c2 COLLATE BINARY THEN rt0.c0 COLLATE BINARY ELSE ((rt0.c2)|(rt1.c0)) END LEFT OUTER JOIN rt2 ON (((- ('wnowy'))) NOTNULL) WHERE ((((((+ (rt0.c3)))OR((((rt0.c0)) BETWEEN ((rt1.c2)) AND ((rt2.c2))))))AND((rt2.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((+ (rt0.c3)))OR((((rt0.c0)) BETWEEN ((rt1.c2)) AND ((rt2.c2))))))AND((rt2.c1 IN ())))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON CASE rt2.c2 COLLATE NOCASE  WHEN rt1.c2 COLLATE BINARY THEN rt0.c0 COLLATE BINARY ELSE ((rt0.c2)|(rt1.c0)) END LEFT OUTER JOIN rt2 ON (((- ('wnowy'))) NOTNULL));
SELECT COUNT(*) FROM rt1 INNER JOIN rt0 ON CASE rt2.c2 COLLATE NOCASE  WHEN rt1.c2 COLLATE BINARY THEN rt0.c0 COLLATE BINARY ELSE ((rt0.c2)|(rt1.c0)) END LEFT OUTER JOIN rt2 ON (((- ('wnowy'))) NOTNULL) WHERE ((((((+ (rt0.c3)))OR((((rt0.c0)) BETWEEN ((rt1.c2)) AND ((rt2.c2))))))AND((rt2.c1 IN ()))));
SELECT ALL * FROM rt1 INNER JOIN rt2 ON (+ (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt1.c4)))) FULL OUTER JOIN rt0 ON rt1.c0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt1 INNER JOIN rt2 ON (+ (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt1.c4)))) FULL OUTER JOIN rt0 ON rt1.c0);
SELECT ALL * FROM rt1 INNER JOIN rt2 ON (+ (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt1.c4)))) FULL OUTER JOIN rt0 ON rt1.c0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt1 INNER JOIN rt2 ON (+ (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt1.c4)))) FULL OUTER JOIN rt0 ON rt1.c0);
SELECT ALL COUNT(*) FROM rt2, rt1, rt0 WHERE (JULIANDAY(LTRIM(rt2.c0, rt1.c1), CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c3 THEN rt0.c1 WHEN rt2.c0 THEN rt0.c2 WHEN rt1.c2 THEN rt1.c0 WHEN -1.348286543E9 THEN rt0.c3 ELSE rt0.c0 END, MIN(rt0.c2, rt2.c0)));
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY(LTRIM(rt2.c0, rt1.c1), CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c3 THEN rt0.c1 WHEN rt2.c0 THEN rt0.c2 WHEN rt1.c2 THEN rt1.c0 WHEN -1.348286543E9 THEN rt0.c3 ELSE rt0.c0 END, MIN(rt0.c2, rt2.c0))) IS TRUE)  as count FROM rt2, rt1, rt0);
SELECT ALL COUNT(*) FROM rt2, rt1, rt0 WHERE (JULIANDAY(LTRIM(rt2.c0, rt1.c1), CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c3 THEN rt0.c1 WHEN rt2.c0 THEN rt0.c2 WHEN rt1.c2 THEN rt1.c0 WHEN -1.348286543E9 THEN rt0.c3 ELSE rt0.c0 END, MIN(rt0.c2, rt2.c0)));
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY(LTRIM(rt2.c0, rt1.c1), CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c3 THEN rt0.c1 WHEN rt2.c0 THEN rt0.c2 WHEN rt1.c2 THEN rt1.c0 WHEN -1.348286543E9 THEN rt0.c3 ELSE rt0.c0 END, MIN(rt0.c2, rt2.c0))) IS TRUE)  as count FROM rt2, rt1, rt0);
SELECT ALL COUNT(*) FROM rt2, rt1, rt0 WHERE (JULIANDAY(LTRIM(rt2.c0, rt1.c1), CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c3 THEN rt0.c1 WHEN rt2.c0 THEN rt0.c2 WHEN rt1.c2 THEN rt1.c0 WHEN -1.348286543E9 THEN rt0.c3 ELSE rt0.c0 END, MIN(rt0.c2, rt2.c0)));
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c3) BETWEEN (0.44127127790195286) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c3) BETWEEN (0.44127127790195286) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c3) BETWEEN (0.44127127790195286) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c3) BETWEEN (0.44127127790195286) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c3) BETWEEN (0.44127127790195286) AND (rt0.c0)))));
SELECT * FROM rt2, rt1 WHERE (rt1.c0) ORDER BY ((rt1.c3 COLLATE BINARY)<(((rt2.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt2, rt1 ORDER BY ((rt1.c3 COLLATE BINARY)<(((rt2.c0) ISNULL))));
SELECT * FROM rt2, rt1 WHERE (rt1.c0) ORDER BY ((rt1.c3 COLLATE BINARY)<(((rt2.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt2, rt1 ORDER BY ((rt1.c3 COLLATE BINARY)<(((rt2.c0) ISNULL))));
SELECT * FROM rt2, rt1 WHERE (rt1.c0) ORDER BY ((rt1.c3 COLLATE BINARY)<(((rt2.c0) ISNULL)));
SELECT * FROM rt2, rt0 WHERE (((((rt2.c1 COLLATE NOCASE)OR('326839994')))OR(((((rt0.c2)AND(rt2.c0)))OR(rt0.c0))))) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ((((((rt2.c1 COLLATE NOCASE)OR('326839994')))OR(((((rt0.c2)AND(rt2.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM rt2, rt0 ORDER BY rt0.c2 ASC);
SELECT * FROM rt2, rt0 WHERE (((((rt2.c1 COLLATE NOCASE)OR('326839994')))OR(((((rt0.c2)AND(rt2.c0)))OR(rt0.c0))))) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ((((((rt2.c1 COLLATE NOCASE)OR('326839994')))OR(((((rt0.c2)AND(rt2.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM rt2, rt0 ORDER BY rt0.c2 ASC);
SELECT * FROM rt2, rt0 WHERE (((((rt2.c1 COLLATE NOCASE)OR('326839994')))OR(((((rt0.c2)AND(rt2.c0)))OR(rt0.c0))))) ORDER BY rt0.c2 ASC;
SELECT ALL * FROM rt2, rt1, rt0 WHERE ((((rt2.c2)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((((((rt2.c1)AND(rt2.c1)))OR(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt2.c2)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((((((rt2.c1)AND(rt2.c1)))OR(rt0.c0)))))) IS TRUE)  as count FROM rt2, rt1, rt0);
SELECT ALL * FROM rt2, rt1, rt0 WHERE ((((rt2.c2)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((((((rt2.c1)AND(rt2.c1)))OR(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt2.c2)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((((((rt2.c1)AND(rt2.c1)))OR(rt0.c0)))))) IS TRUE)  as count FROM rt2, rt1, rt0);
SELECT ALL * FROM rt2, rt1, rt0 WHERE ((((rt2.c2)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((((((rt2.c1)AND(rt2.c1)))OR(rt0.c0))))));
SELECT COUNT(*) FROM rt0, rt1, rt2 WHERE (((rt1.c3 COLLATE RTRIM)IS(NULL)));
SELECT SUM(count) FROM (SELECT ((((rt1.c3 COLLATE RTRIM)IS(NULL))) IS TRUE)  as count FROM rt0, rt1, rt2);
SELECT COUNT(*) FROM rt0, rt1, rt2 WHERE (((rt1.c3 COLLATE RTRIM)IS(NULL)));
SELECT SUM(count) FROM (SELECT ((((rt1.c3 COLLATE RTRIM)IS(NULL))) IS TRUE)  as count FROM rt0, rt1, rt2);
SELECT COUNT(*) FROM rt0, rt1, rt2 WHERE (((rt1.c3 COLLATE RTRIM)IS(NULL)));
SELECT ALL COUNT(*) FROM rt2, rt1 WHERE (((((rt2.c1) NOT NULL))IS(x'')));
SELECT SUM(count) FROM (SELECT ((((((rt2.c1) NOT NULL))IS(x''))) IS TRUE)  as count FROM rt2, rt1);
SELECT ALL COUNT(*) FROM rt2, rt1 WHERE (((((rt2.c1) NOT NULL))IS(x'')));
SELECT SUM(count) FROM (SELECT ((((((rt2.c1) NOT NULL))IS(x''))) IS TRUE)  as count FROM rt2, rt1);
SELECT ALL COUNT(*) FROM rt2, rt1 WHERE (((((rt2.c1) NOT NULL))IS(x'')));
SELECT * FROM rt0, rt1, rt2 WHERE (CASE ((rt2.c2) NOT NULL)  WHEN ((((rt0.c3)AND(rt0.c1)))OR(rt1.c1)) THEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt2.c2)) WHEN rt2.c1 THEN LIKELIHOOD(rt2.c2, 0.348795974071371) WHEN (- (rt1.c3)) THEN ((rt0.c2) NOT BETWEEN (0x13afa529) AND (rt0.c0)) END) ORDER BY 796995955 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt2.c2) NOT NULL)  WHEN ((((rt0.c3)AND(rt0.c1)))OR(rt1.c1)) THEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt2.c2)) WHEN rt2.c1 THEN LIKELIHOOD(rt2.c2, 0.348795974071371) WHEN (- (rt1.c3)) THEN ((rt0.c2) NOT BETWEEN (0X13afa529) AND (rt0.c0)) END) IS TRUE)  as count FROM rt0, rt1, rt2 ORDER BY 796995955 DESC  NULLS FIRST);
SELECT * FROM rt0, rt1, rt2 WHERE (CASE ((rt2.c2) NOT NULL)  WHEN ((((rt0.c3)AND(rt0.c1)))OR(rt1.c1)) THEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt2.c2)) WHEN rt2.c1 THEN LIKELIHOOD(rt2.c2, 0.348795974071371) WHEN (- (rt1.c3)) THEN ((rt0.c2) NOT BETWEEN (0x13afa529) AND (rt0.c0)) END) ORDER BY 796995955 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt2.c2) NOT NULL)  WHEN ((((rt0.c3)AND(rt0.c1)))OR(rt1.c1)) THEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt2.c2)) WHEN rt2.c1 THEN LIKELIHOOD(rt2.c2, 0.348795974071371) WHEN (- (rt1.c3)) THEN ((rt0.c2) NOT BETWEEN (0X13afa529) AND (rt0.c0)) END) IS TRUE)  as count FROM rt0, rt1, rt2 ORDER BY 796995955 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt2 WHERE (((((rt2.c0)&(-921515761)))LIKE(rt2.c1)));
SELECT SUM(count) FROM (SELECT ((((((rt2.c0)&(-921515761)))LIKE(rt2.c1))) IS TRUE)  as count FROM rt2);
SELECT COUNT(*) FROM rt2 WHERE (((((rt2.c0)&(-921515761)))LIKE(rt2.c1)));
SELECT SUM(count) FROM (SELECT ((((((rt2.c0)&(-921515761)))LIKE(rt2.c1))) IS TRUE)  as count FROM rt2);
SELECT COUNT(*) FROM rt2 WHERE (((((rt2.c0)&(-921515761)))LIKE(rt2.c1)));
SELECT * FROM rt2, rt0 WHERE (0.4008763568988122);
SELECT SUM(count) FROM (SELECT ((0.4008763568988122) IS TRUE)  as count FROM rt2, rt0);
SELECT * FROM rt2, rt0 WHERE (0.4008763568988122);
SELECT SUM(count) FROM (SELECT ((0.4008763568988122) IS TRUE)  as count FROM rt2, rt0);
SELECT * FROM rt2, rt0 WHERE (0.4008763568988122);
SELECT * FROM rt2 WHERE ((((rt2.c1 IN ()))+(((((((((rt2.c1)OR(rt2.c1)))OR(rt2.c0)))OR(rt2.c1)))AND(NULL))))) ORDER BY ((rt2.c0)<=(('%+M|	w' IN (rt2.c0, rt2.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt2.c1 IN ()))+(((((((((rt2.c1)OR(rt2.c1)))OR(rt2.c0)))OR(rt2.c1)))AND(NULL))))) IS TRUE)  as count FROM rt2 NOT INDEXED ORDER BY ((rt2.c0)<=(('%+M|	w' IN (rt2.c0, rt2.c2)))) DESC);
SELECT * FROM rt2 WHERE ((((rt2.c1 IN ()))+(((((((((rt2.c1)OR(rt2.c1)))OR(rt2.c0)))OR(rt2.c1)))AND(NULL))))) ORDER BY ((rt2.c0)<=(('%+M|	w' IN (rt2.c0, rt2.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt2.c1 IN ()))+(((((((((rt2.c1)OR(rt2.c1)))OR(rt2.c0)))OR(rt2.c1)))AND(NULL))))) IS TRUE)  as count FROM rt2 NOT INDEXED ORDER BY ((rt2.c0)<=(('%+M|	w' IN (rt2.c0, rt2.c2)))) DESC);
SELECT * FROM rt2 WHERE ((((rt2.c1 IN ()))+(((((((((rt2.c1)OR(rt2.c1)))OR(rt2.c0)))OR(rt2.c1)))AND(NULL))))) ORDER BY ((rt2.c0)<=(('%+M|	w' IN (rt2.c0, rt2.c2)))) DESC;
SELECT ALL COUNT(*) FROM rt2 RIGHT OUTER JOIN rt0 ON (((rt0.c1 IN (rt2.c1)))||((rt2.c0 IN ()))) WHERE (LTRIM(rt2.c1));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(rt2.c1)) IS TRUE)  as count FROM rt2 RIGHT OUTER JOIN rt0 ON (((rt0.c1 IN (rt2.c1)))||((rt2.c0 IN ()))));
SELECT ALL COUNT(*) FROM rt2 RIGHT OUTER JOIN rt0 ON (((rt0.c1 IN (rt2.c1)))||((rt2.c0 IN ()))) WHERE (LTRIM(rt2.c1));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(rt2.c1)) IS TRUE)  as count FROM rt2 RIGHT OUTER JOIN rt0 ON (((rt0.c1 IN (rt2.c1)))||((rt2.c0 IN ()))));
SELECT ALL COUNT(*) FROM rt2 RIGHT OUTER JOIN rt0 ON (((rt0.c1 IN (rt2.c1)))||((rt2.c0 IN ()))) WHERE (LTRIM(rt2.c1));
SELECT COUNT(*) FROM rt1 NOT INDEXED, rt2 WHERE (json(rt2.c2) COLLATE RTRIM) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ((json(rt2.c2) COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt2 ORDER BY x'' ASC);
SELECT COUNT(*) FROM rt1 NOT INDEXED, rt2 WHERE (json(rt2.c2) COLLATE RTRIM) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ((json(rt2.c2) COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt2 ORDER BY x'' ASC);
SELECT COUNT(*) FROM rt1 NOT INDEXED, rt2 WHERE (json(rt2.c2) COLLATE RTRIM) ORDER BY x'' ASC;
SELECT ALL * FROM rt0, rt2 NATURAL JOIN rt1 WHERE (((rt1.c0)IS(rt1.c3)) COLLATE NOCASE) ORDER BY TYPEOF((rt2.c0 IN (rt1.c4))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0)IS(rt1.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt2 NATURAL JOIN rt1 ORDER BY TYPEOF((rt2.c0 IN (rt1.c4))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, rt2 NATURAL JOIN rt1 WHERE (((rt1.c0)IS(rt1.c3)) COLLATE NOCASE) ORDER BY TYPEOF((rt2.c0 IN (rt1.c4))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0)IS(rt1.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt2 NATURAL JOIN rt1 ORDER BY TYPEOF((rt2.c0 IN (rt1.c4))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, rt2 NATURAL JOIN rt1 WHERE (((rt1.c0)IS(rt1.c3)) COLLATE NOCASE) ORDER BY TYPEOF((rt2.c0 IN (rt1.c4))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, rt2, rt1 WHERE (COALESCE(DISTINCT IFNULL(rt0.c0, rt0.c2), (rt0.c3 IN (rt1.c2, rt1.c3))));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT IFNULL(rt0.c0, rt0.c2), (rt0.c3 IN (rt1.c2, rt1.c3)))) IS TRUE)  as count FROM rt0, rt2, rt1);
SELECT ALL COUNT(*) FROM rt0, rt2, rt1 WHERE (COALESCE(DISTINCT IFNULL(rt0.c0, rt0.c2), (rt0.c3 IN (rt1.c2, rt1.c3))));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT IFNULL(rt0.c0, rt0.c2), (rt0.c3 IN (rt1.c2, rt1.c3)))) IS TRUE)  as count FROM rt0, rt2, rt1);
SELECT ALL COUNT(*) FROM rt0, rt2, rt1 WHERE (COALESCE(DISTINCT IFNULL(rt0.c0, rt0.c2), (rt0.c3 IN (rt1.c2, rt1.c3))));
SELECT * FROM rt2 WHERE (LIKELY(rt2.c2 COLLATE NOCASE)) ORDER BY CAST(((rt2.c0)<<(rt2.c1)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((LIKELY(rt2.c2 COLLATE NOCASE)) IS TRUE)  as count FROM rt2 ORDER BY CAST(((rt2.c0)<<(rt2.c1)) AS BLOB) DESC);
SELECT * FROM rt2 WHERE (LIKELY(rt2.c2 COLLATE NOCASE)) ORDER BY CAST(((rt2.c0)<<(rt2.c1)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((LIKELY(rt2.c2 COLLATE NOCASE)) IS TRUE)  as count FROM rt2 ORDER BY CAST(((rt2.c0)<<(rt2.c1)) AS BLOB) DESC);
SELECT * FROM rt2 WHERE (LIKELY(rt2.c2 COLLATE NOCASE)) ORDER BY CAST(((rt2.c0)<<(rt2.c1)) AS BLOB) DESC;
SELECT ALL COUNT(*) FROM rt2 LEFT OUTER JOIN rt1 ON CASE WHEN ((((rt2.c0)OR(rt1.c1)))AND(rt1.c1)) THEN CASE WHEN rt1.c1 THEN rt2.c2 WHEN rt2.c2 THEN rt1.c3 WHEN rt1.c0 THEN rt2.c1 END ELSE CASE WHEN rt2.c1 THEN rt2.c0 END END WHERE (((LTRIM(rt1.c2, rt2.c1)) NOT BETWEEN ((((rt2.c1, rt1.c4, rt1.c0))==((rt1.c2, rt1.c3, rt1.c2)))) AND (((rt2.c0) IS FALSE)))) ORDER BY rt1.c3 COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LTRIM(rt1.c2, rt2.c1)) NOT BETWEEN ((((rt2.c1, rt1.c4, rt1.c0))==((rt1.c2, rt1.c3, rt1.c2)))) AND (((rt2.c0) IS FALSE)))) IS TRUE)  as count FROM rt2 LEFT OUTER JOIN rt1 ON CASE WHEN ((((rt2.c0)OR(rt1.c1)))AND(rt1.c1)) THEN CASE WHEN rt1.c1 THEN rt2.c2 WHEN rt2.c2 THEN rt1.c3 WHEN rt1.c0 THEN rt2.c1 END ELSE CASE WHEN rt2.c1 THEN rt2.c0 END END ORDER BY rt1.c3 COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM rt2 LEFT OUTER JOIN rt1 ON CASE WHEN ((((rt2.c0)OR(rt1.c1)))AND(rt1.c1)) THEN CASE WHEN rt1.c1 THEN rt2.c2 WHEN rt2.c2 THEN rt1.c3 WHEN rt1.c0 THEN rt2.c1 END ELSE CASE WHEN rt2.c1 THEN rt2.c0 END END WHERE (((LTRIM(rt1.c2, rt2.c1)) NOT BETWEEN ((((rt2.c1, rt1.c4, rt1.c0))==((rt1.c2, rt1.c3, rt1.c2)))) AND (((rt2.c0) IS FALSE)))) ORDER BY rt1.c3 COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LTRIM(rt1.c2, rt2.c1)) NOT BETWEEN ((((rt2.c1, rt1.c4, rt1.c0))==((rt1.c2, rt1.c3, rt1.c2)))) AND (((rt2.c0) IS FALSE)))) IS TRUE)  as count FROM rt2 LEFT OUTER JOIN rt1 ON CASE WHEN ((((rt2.c0)OR(rt1.c1)))AND(rt1.c1)) THEN CASE WHEN rt1.c1 THEN rt2.c2 WHEN rt2.c2 THEN rt1.c3 WHEN rt1.c0 THEN rt2.c1 END ELSE CASE WHEN rt2.c1 THEN rt2.c0 END END ORDER BY rt1.c3 COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM rt2 LEFT OUTER JOIN rt1 ON CASE WHEN ((((rt2.c0)OR(rt1.c1)))AND(rt1.c1)) THEN CASE WHEN rt1.c1 THEN rt2.c2 WHEN rt2.c2 THEN rt1.c3 WHEN rt1.c0 THEN rt2.c1 END ELSE CASE WHEN rt2.c1 THEN rt2.c0 END END WHERE (((LTRIM(rt1.c2, rt2.c1)) NOT BETWEEN ((((rt2.c1, rt1.c4, rt1.c0))==((rt1.c2, rt1.c3, rt1.c2)))) AND (((rt2.c0) IS FALSE)))) ORDER BY rt1.c3 COLLATE RTRIM  NULLS LAST;
SELECT COUNT(*) FROM rt2, rt0, rt1 WHERE ('1007827459') ORDER BY TRIM(DISTINCT (((rt2.c2))>=((rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('1007827459') IS TRUE)  as count FROM rt2, rt0, rt1 ORDER BY TRIM(DISTINCT (((rt2.c2))>=((rt0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM rt2, rt0, rt1 WHERE ('1007827459') ORDER BY TRIM(DISTINCT (((rt2.c2))>=((rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('1007827459') IS TRUE)  as count FROM rt2, rt0, rt1 ORDER BY TRIM(DISTINCT (((rt2.c2))>=((rt0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM rt2, rt0, rt1 WHERE ('1007827459') ORDER BY TRIM(DISTINCT (((rt2.c2))>=((rt0.c2))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt2 WHERE (((rt2.c2) NOT BETWEEN (rt2.c0) AND (rt2.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt2.c2) NOT BETWEEN (rt2.c0) AND (rt2.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt2);
SELECT ALL COUNT(*) FROM rt2 WHERE (((rt2.c2) NOT BETWEEN (rt2.c0) AND (rt2.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt2.c2) NOT BETWEEN (rt2.c0) AND (rt2.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt2);
SELECT ALL COUNT(*) FROM rt2 WHERE (((rt2.c2) NOT BETWEEN (rt2.c0) AND (rt2.c2)) COLLATE RTRIM);
SELECT ALL * FROM rt2 WHERE ((NOT (rt2.c0)) COLLATE RTRIM) ORDER BY ((CAST(rt2.c0 AS TEXT))<=(IFNULL(rt2.c0, rt2.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt2.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt2 ORDER BY ((CAST(rt2.c0 AS TEXT))<=(IFNULL(rt2.c0, rt2.c0)))  NULLS LAST);
SELECT ALL * FROM rt2 WHERE ((NOT (rt2.c0)) COLLATE RTRIM) ORDER BY ((CAST(rt2.c0 AS TEXT))<=(IFNULL(rt2.c0, rt2.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt2.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt2 ORDER BY ((CAST(rt2.c0 AS TEXT))<=(IFNULL(rt2.c0, rt2.c0)))  NULLS LAST);
SELECT ALL * FROM rt2 WHERE ((NOT (rt2.c0)) COLLATE RTRIM) ORDER BY ((CAST(rt2.c0 AS TEXT))<=(IFNULL(rt2.c0, rt2.c0)))  NULLS LAST;
SELECT ALL * FROM rt2, rt1 WHERE (CAST(rt2.c1 AS BLOB)) ORDER BY HEX(CAST(rt2.c0 AS INTEGER)) DESC  NULLS LAST, LENGTH(((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt2.c1)))  NULLS LAST, (((rt1.c0)) NOT BETWEEN ((((rt2.c2) NOT BETWEEN (rt2.c1) AND (rt1.c2)))) AND (((rt1.c4 IN ()))));
SELECT SUM(count) FROM (SELECT ((CAST(rt2.c1 AS BLOB)) IS TRUE)  as count FROM rt2, rt1 ORDER BY HEX(CAST(rt2.c0 AS INTEGER)) DESC  NULLS LAST, LENGTH(((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt2.c1)))  NULLS LAST, (((rt1.c0)) NOT BETWEEN ((((rt2.c2) NOT BETWEEN (rt2.c1) AND (rt1.c2)))) AND (((rt1.c4 IN ())))));
SELECT ALL * FROM rt2, rt1 WHERE (CAST(rt2.c1 AS BLOB)) ORDER BY HEX(CAST(rt2.c0 AS INTEGER)) DESC  NULLS LAST, LENGTH(((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt2.c1)))  NULLS LAST, (((rt1.c0)) NOT BETWEEN ((((rt2.c2) NOT BETWEEN (rt2.c1) AND (rt1.c2)))) AND (((rt1.c4 IN ()))));
SELECT SUM(count) FROM (SELECT ((CAST(rt2.c1 AS BLOB)) IS TRUE)  as count FROM rt2, rt1 ORDER BY HEX(CAST(rt2.c0 AS INTEGER)) DESC  NULLS LAST, LENGTH(((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt2.c1)))  NULLS LAST, (((rt1.c0)) NOT BETWEEN ((((rt2.c2) NOT BETWEEN (rt2.c1) AND (rt1.c2)))) AND (((rt1.c4 IN ())))));
SELECT ALL * FROM rt2, rt1 WHERE (CAST(rt2.c1 AS BLOB)) ORDER BY HEX(CAST(rt2.c0 AS INTEGER)) DESC  NULLS LAST, LENGTH(((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt2.c1)))  NULLS LAST, (((rt1.c0)) NOT BETWEEN ((((rt2.c2) NOT BETWEEN (rt2.c1) AND (rt1.c2)))) AND (((rt1.c4 IN ()))));
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c4)>(rt1.c4)))IS(((rt1.c4)-(rt1.c4)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c4)>(rt1.c4)))IS(((rt1.c4)-(rt1.c4))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c4)>(rt1.c4)))IS(((rt1.c4)-(rt1.c4)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c4)>(rt1.c4)))IS(((rt1.c4)-(rt1.c4))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c4)>(rt1.c4)))IS(((rt1.c4)-(rt1.c4)))));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN rt2 ON (NOT ((((('L')OR(rt1.c3)))OR(rt1.c1)))) CROSS JOIN rt0 ON (((((rt0.c3) NOT NULL)))!=((rt1.c2 COLLATE RTRIM))) WHERE (CAST(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt2.c0)) AS NUMERIC)) ORDER BY rt1.c3 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt2.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt2 ON (NOT ((((('L')OR(rt1.c3)))OR(rt1.c1)))) CROSS JOIN rt0 ON (((((rt0.c3) NOT NULL)))<>((rt1.c2 COLLATE RTRIM))) ORDER BY rt1.c3 DESC);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN rt2 ON (NOT ((((('L')OR(rt1.c3)))OR(rt1.c1)))) CROSS JOIN rt0 ON (((((rt0.c3) NOT NULL)))!=((rt1.c2 COLLATE RTRIM))) WHERE (CAST(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt2.c0)) AS NUMERIC)) ORDER BY rt1.c3 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt2.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt2 ON (NOT ((((('L')OR(rt1.c3)))OR(rt1.c1)))) CROSS JOIN rt0 ON (((((rt0.c3) NOT NULL)))<>((rt1.c2 COLLATE RTRIM))) ORDER BY rt1.c3 DESC);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN rt2 ON (NOT ((((('L')OR(rt1.c3)))OR(rt1.c1)))) CROSS JOIN rt0 ON (((((rt0.c3) NOT NULL)))!=((rt1.c2 COLLATE RTRIM))) WHERE (CAST(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt2.c0)) AS NUMERIC)) ORDER BY rt1.c3 DESC;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2)OR(rt1.c3))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)OR(rt1.c3))) NOTNULL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2)OR(rt1.c3))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)OR(rt1.c3))) NOTNULL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2)OR(rt1.c3))) NOTNULL));
SELECT ALL COUNT(*) FROM rt2, rt1 WHERE ((~ (CAST(rt1.c4 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt1.c4 AS NUMERIC)))) IS TRUE)  as count FROM rt2, rt1);
SELECT ALL COUNT(*) FROM rt2, rt1 WHERE ((~ (CAST(rt1.c4 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt1.c4 AS NUMERIC)))) IS TRUE)  as count FROM rt2, rt1);
SELECT ALL COUNT(*) FROM rt2, rt1 WHERE ((~ (CAST(rt1.c4 AS NUMERIC))));
SELECT ALL * FROM rt2 WHERE (((((((((((rt2.c1) NOT BETWEEN (rt2.c1) AND (rt2.c0)))OR(((rt2.c2) NOTNULL))))OR(HEX(rt2.c0))))OR(LTRIM(rt2.c2))))OR(NULLIF(DISTINCT rt2.c1, rt2.c0)))) ORDER BY load_extension(rt2.c1) COLLATE BINARY, ((CASE rt2.c1  WHEN rt2.c1 THEN rt2.c1 END)+(CAST(rt2.c1 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt2.c1) NOT BETWEEN (rt2.c1) AND (rt2.c0)))OR(((rt2.c2) NOTNULL))))OR(HEX(rt2.c0))))OR(LTRIM(rt2.c2))))OR(NULLIF(DISTINCT rt2.c1, rt2.c0)))) IS TRUE)  as count FROM rt2 ORDER BY load_extension(rt2.c1) COLLATE BINARY, ((CASE rt2.c1  WHEN rt2.c1 THEN rt2.c1 END)+(CAST(rt2.c1 AS TEXT))));
SELECT ALL * FROM rt2 WHERE (((((((((((rt2.c1) NOT BETWEEN (rt2.c1) AND (rt2.c0)))OR(((rt2.c2) NOTNULL))))OR(HEX(rt2.c0))))OR(LTRIM(rt2.c2))))OR(NULLIF(DISTINCT rt2.c1, rt2.c0)))) ORDER BY load_extension(rt2.c1) COLLATE BINARY, ((CASE rt2.c1  WHEN rt2.c1 THEN rt2.c1 END)+(CAST(rt2.c1 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt2.c1) NOT BETWEEN (rt2.c1) AND (rt2.c0)))OR(((rt2.c2) NOTNULL))))OR(HEX(rt2.c0))))OR(LTRIM(rt2.c2))))OR(NULLIF(DISTINCT rt2.c1, rt2.c0)))) IS TRUE)  as count FROM rt2 ORDER BY load_extension(rt2.c1) COLLATE BINARY, ((CASE rt2.c1  WHEN rt2.c1 THEN rt2.c1 END)+(CAST(rt2.c1 AS TEXT))));
SELECT ALL COUNT(*) FROM rt2 WHERE (((CASE rt2.c2  WHEN rt2.c2 THEN NULL ELSE rt2.c2 END)%(CAST(rt2.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((CASE rt2.c2  WHEN rt2.c2 THEN NULL ELSE rt2.c2 END)%(CAST(rt2.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt2);
SELECT ALL COUNT(*) FROM rt2 WHERE (((CASE rt2.c2  WHEN rt2.c2 THEN NULL ELSE rt2.c2 END)%(CAST(rt2.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((CASE rt2.c2  WHEN rt2.c2 THEN NULL ELSE rt2.c2 END)%(CAST(rt2.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt2);
SELECT ALL COUNT(*) FROM rt2 WHERE (((CASE rt2.c2  WHEN rt2.c2 THEN NULL ELSE rt2.c2 END)%(CAST(rt2.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (((-704585728) NOT BETWEEN (rt1.c3) AND (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((-704585728) NOT BETWEEN (rt1.c3) AND (rt1.c3))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (((-704585728) NOT BETWEEN (rt1.c3) AND (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((-704585728) NOT BETWEEN (rt1.c3) AND (rt1.c3))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (((-704585728) NOT BETWEEN (rt1.c3) AND (rt1.c3)))));
SELECT COUNT(*) FROM rt0, rt1, rt2 WHERE (((((CASE WHEN rt1.c0 THEN rt0.c1 ELSE x'4879' END)AND((rt2.c2 IN ()))))AND(rt1.c1))) ORDER BY (((((rt0.c3) IS FALSE)))<>((rt0.c1))) DESC  NULLS FIRST, LIKELY(DISTINCT CASE WHEN rt1.c4 THEN rt1.c1 END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN rt1.c0 THEN rt0.c1 ELSE x'4879' END)AND((rt2.c2 IN ()))))AND(rt1.c1))) IS TRUE)  as count FROM rt0, rt1, rt2 ORDER BY (((((rt0.c3) IS FALSE)))<>((rt0.c1))) DESC  NULLS FIRST, LIKELY(DISTINCT CASE WHEN rt1.c4 THEN rt1.c1 END) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1, rt2 WHERE (((((CASE WHEN rt1.c0 THEN rt0.c1 ELSE x'4879' END)AND((rt2.c2 IN ()))))AND(rt1.c1))) ORDER BY (((((rt0.c3) IS FALSE)))<>((rt0.c1))) DESC  NULLS FIRST, LIKELY(DISTINCT CASE WHEN rt1.c4 THEN rt1.c1 END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN rt1.c0 THEN rt0.c1 ELSE x'4879' END)AND((rt2.c2 IN ()))))AND(rt1.c1))) IS TRUE)  as count FROM rt0, rt1, rt2 ORDER BY (((((rt0.c3) IS FALSE)))<>((rt0.c1))) DESC  NULLS FIRST, LIKELY(DISTINCT CASE WHEN rt1.c4 THEN rt1.c1 END) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1, rt2 WHERE (((((CASE WHEN rt1.c0 THEN rt0.c1 ELSE x'4879' END)AND((rt2.c2 IN ()))))AND(rt1.c1))) ORDER BY (((((rt0.c3) IS FALSE)))<>((rt0.c1))) DESC  NULLS FIRST, LIKELY(DISTINCT CASE WHEN rt1.c4 THEN rt1.c1 END) ASC  NULLS LAST;
SELECT * FROM rt0, rt2 WHERE ((((rt2.c2 IN ()))IS NOT(rt0.c2 COLLATE NOCASE))) ORDER BY CASE HEX(rt2.c1)  WHEN ((rt2.c1)<=(rt0.c2)) THEN ((((rt2.c0)AND(rt2.c2)))AND(rt0.c0)) END, ((rt0.c2 COLLATE BINARY)>=(((rt0.c1)%(rt2.c0))));
SELECT SUM(count) FROM (SELECT (((((rt2.c2 IN ()))IS NOT(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, rt2 ORDER BY CASE HEX(rt2.c1)  WHEN ((rt2.c1)<=(rt0.c2)) THEN ((((rt2.c0)AND(rt2.c2)))AND(rt0.c0)) END, ((rt0.c2 COLLATE BINARY)>=(((rt0.c1)%(rt2.c0)))));
SELECT * FROM rt0, rt2 WHERE ((((rt2.c2 IN ()))IS NOT(rt0.c2 COLLATE NOCASE))) ORDER BY CASE HEX(rt2.c1)  WHEN ((rt2.c1)<=(rt0.c2)) THEN ((((rt2.c0)AND(rt2.c2)))AND(rt0.c0)) END, ((rt0.c2 COLLATE BINARY)>=(((rt0.c1)%(rt2.c0))));
SELECT SUM(count) FROM (SELECT (((((rt2.c2 IN ()))IS NOT(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, rt2 ORDER BY CASE HEX(rt2.c1)  WHEN ((rt2.c1)<=(rt0.c2)) THEN ((((rt2.c0)AND(rt2.c2)))AND(rt0.c0)) END, ((rt0.c2 COLLATE BINARY)>=(((rt0.c1)%(rt2.c0)))));
SELECT * FROM rt0, rt2 WHERE ((((rt2.c2 IN ()))IS NOT(rt0.c2 COLLATE NOCASE))) ORDER BY CASE HEX(rt2.c1)  WHEN ((rt2.c1)<=(rt0.c2)) THEN ((((rt2.c0)AND(rt2.c2)))AND(rt0.c0)) END, ((rt0.c2 COLLATE BINARY)>=(((rt0.c1)%(rt2.c0))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((NOT (rt1.c4))) BETWEEN (((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c1))) AND (CASE WHEN x'' THEN rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt1.c4))) BETWEEN (((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c1))) AND (CASE WHEN x'' THEN rt1.c2 END))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((NOT (rt1.c4))) BETWEEN (((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c1))) AND (CASE WHEN x'' THEN rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt1.c4))) BETWEEN (((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c1))) AND (CASE WHEN x'' THEN rt1.c2 END))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((NOT (rt1.c4))) BETWEEN (((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c1))) AND (CASE WHEN x'' THEN rt1.c2 END)));
SELECT * FROM rt0, rt1 WHERE (((((rt0.c0)AND(rt1.c3)))OR(rt1.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)AND(rt1.c3)))OR(rt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (((((rt0.c0)AND(rt1.c3)))OR(rt1.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)AND(rt1.c3)))OR(rt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (((((rt0.c0)AND(rt1.c3)))OR(rt1.c1)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0, rt2 WHERE ((((rt2.c1)) BETWEEN ((((rt2.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))) AND ((json(rt0.c2))))) ORDER BY ((rt2.c0 COLLATE RTRIM)/(rt2.c0 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt2.c1)) BETWEEN ((((rt2.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))) AND ((json(rt0.c2))))) IS TRUE)  as count FROM rt0, rt2 ORDER BY ((rt2.c0 COLLATE RTRIM)/(rt2.c0 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt2 WHERE ((((rt2.c1)) BETWEEN ((((rt2.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))) AND ((json(rt0.c2))))) ORDER BY ((rt2.c0 COLLATE RTRIM)/(rt2.c0 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt2.c1)) BETWEEN ((((rt2.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))) AND ((json(rt0.c2))))) IS TRUE)  as count FROM rt0, rt2 ORDER BY ((rt2.c0 COLLATE RTRIM)/(rt2.c0 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt2 WHERE ((((rt2.c1)) BETWEEN ((((rt2.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))) AND ((json(rt0.c2))))) ORDER BY ((rt2.c0 COLLATE RTRIM)/(rt2.c0 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT * FROM rt2 WHERE ((rt2.c1 COLLATE NOCASE IN ((((rt2.c2)) NOT BETWEEN ((rt2.c1)) AND ((rt2.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((rt2.c1 COLLATE NOCASE IN ((((rt2.c2)) NOT BETWEEN ((rt2.c1)) AND ((rt2.c1)))))) IS TRUE)  as count FROM rt2);
SELECT * FROM rt2 WHERE ((rt2.c1 COLLATE NOCASE IN ((((rt2.c2)) NOT BETWEEN ((rt2.c1)) AND ((rt2.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((rt2.c1 COLLATE NOCASE IN ((((rt2.c2)) NOT BETWEEN ((rt2.c1)) AND ((rt2.c1)))))) IS TRUE)  as count FROM rt2);
SELECT * FROM rt2 WHERE ((rt2.c1 COLLATE NOCASE IN ((((rt2.c2)) NOT BETWEEN ((rt2.c1)) AND ((rt2.c1))))));
SELECT COUNT(*) FROM rt2 WHERE (((((rt2.c2)&(rt2.c0))) IS FALSE)) ORDER BY (+ (rt2.c0 COLLATE NOCASE))  NULLS LAST, (((((((rt2.c1)AND(rt2.c0)))OR(rt2.c0))))==((CASE rt2.c0  WHEN rt2.c2 THEN rt2.c1 ELSE rt2.c0 END))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt2.c2)&(rt2.c0))) IS FALSE)) IS TRUE)  as count FROM rt2 ORDER BY (+ (rt2.c0 COLLATE NOCASE))  NULLS LAST, (((((((rt2.c1)AND(rt2.c0)))OR(rt2.c0))))==((CASE rt2.c0  WHEN rt2.c2 THEN rt2.c1 ELSE rt2.c0 END))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt2 WHERE (((((rt2.c2)&(rt2.c0))) IS FALSE)) ORDER BY (+ (rt2.c0 COLLATE NOCASE))  NULLS LAST, (((((((rt2.c1)AND(rt2.c0)))OR(rt2.c0))))==((CASE rt2.c0  WHEN rt2.c2 THEN rt2.c1 ELSE rt2.c0 END))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt2.c2)&(rt2.c0))) IS FALSE)) IS TRUE)  as count FROM rt2 ORDER BY (+ (rt2.c0 COLLATE NOCASE))  NULLS LAST, (((((((rt2.c1)AND(rt2.c0)))OR(rt2.c0))))==((CASE rt2.c0  WHEN rt2.c2 THEN rt2.c1 ELSE rt2.c0 END))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt2 WHERE (((((rt2.c2)&(rt2.c0))) IS FALSE)) ORDER BY (+ (rt2.c0 COLLATE NOCASE))  NULLS LAST, (((((((rt2.c1)AND(rt2.c0)))OR(rt2.c0))))==((CASE rt2.c0  WHEN rt2.c2 THEN rt2.c1 ELSE rt2.c0 END))) ASC  NULLS LAST;
SELECT * FROM rt2 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt2);
SELECT * FROM rt2 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt2);
SELECT * FROM rt2 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt0, rt2, rt1 WHERE ((~ (CAST(NULL AS REAL)))) ORDER BY ((((TRIM(DISTINCT rt0.c0))OR(rt2.c2)))OR(NULL COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (CAST(NULL AS REAL)))) IS TRUE)  as count FROM rt0, rt2, rt1 ORDER BY ((((TRIM(DISTINCT rt0.c0))OR(rt2.c2)))OR(NULL COLLATE RTRIM))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt2, rt1 WHERE ((~ (CAST(NULL AS REAL)))) ORDER BY ((((TRIM(DISTINCT rt0.c0))OR(rt2.c2)))OR(NULL COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (CAST(NULL AS REAL)))) IS TRUE)  as count FROM rt0, rt2, rt1 ORDER BY ((((TRIM(DISTINCT rt0.c0))OR(rt2.c2)))OR(NULL COLLATE RTRIM))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt2, rt1 WHERE ((~ (CAST(NULL AS REAL)))) ORDER BY ((((TRIM(DISTINCT rt0.c0))OR(rt2.c2)))OR(NULL COLLATE RTRIM))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt2 WHERE ((((NOT (rt2.c0))) BETWEEN (((rt2.c1)IS NOT(rt2.c1))) AND (((rt2.c0)IS(rt2.c1))))) ORDER BY (~ (x'3391'));
SELECT SUM(count) FROM (SELECT (((((NOT (rt2.c0))) BETWEEN (((rt2.c1)IS NOT(rt2.c1))) AND (((rt2.c0)IS(rt2.c1))))) IS TRUE)  as count FROM rt2 ORDER BY (~ (x'3391')));
SELECT ALL COUNT(*) FROM rt2 WHERE ((((NOT (rt2.c0))) BETWEEN (((rt2.c1)IS NOT(rt2.c1))) AND (((rt2.c0)IS(rt2.c1))))) ORDER BY (~ (x'3391'));
SELECT SUM(count) FROM (SELECT (((((NOT (rt2.c0))) BETWEEN (((rt2.c1)IS NOT(rt2.c1))) AND (((rt2.c0)IS(rt2.c1))))) IS TRUE)  as count FROM rt2 ORDER BY (~ (x'3391')));
SELECT ALL COUNT(*) FROM rt2 WHERE ((((NOT (rt2.c0))) BETWEEN (((rt2.c1)IS NOT(rt2.c1))) AND (((rt2.c0)IS(rt2.c1))))) ORDER BY (~ (x'3391'));
SELECT COUNT(*) FROM rt2 INNER JOIN rt1 ON (((rt1.c0)) BETWEEN ((NULL)) AND ((((1.102374583E9) IS TRUE)))) WHERE (((((rt2.c1)>=(rt1.c4)))>(1.906063924E9)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt2.c1)>=(rt1.c4)))>(1.906063924E9))) IS TRUE)  as count FROM rt2 INNER JOIN rt1 ON (((rt1.c0)) BETWEEN ((NULL)) AND ((((1.102374583E9) IS TRUE)))));
SELECT COUNT(*) FROM rt2 INNER JOIN rt1 ON (((rt1.c0)) BETWEEN ((NULL)) AND ((((1.102374583E9) IS TRUE)))) WHERE (((((rt2.c1)>=(rt1.c4)))>(1.906063924E9)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt2.c1)>=(rt1.c4)))>(1.906063924E9))) IS TRUE)  as count FROM rt2 INNER JOIN rt1 ON (((rt1.c0)) BETWEEN ((NULL)) AND ((((1.102374583E9) IS TRUE)))));
SELECT COUNT(*) FROM rt2 INNER JOIN rt1 ON (((rt1.c0)) BETWEEN ((NULL)) AND ((((1.102374583E9) IS TRUE)))) WHERE (((((rt2.c1)>=(rt1.c4)))>(1.906063924E9)));
SELECT ALL * FROM rt0 LEFT OUTER JOIN rt1 ON (rt1.c3 IN ()) COLLATE NOCASE FULL OUTER JOIN rt2 ON '-69239630' WHERE (CAST(NULL AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON (rt1.c3 IN ()) COLLATE NOCASE FULL OUTER JOIN rt2 ON '-69239630');
SELECT ALL * FROM rt0 LEFT OUTER JOIN rt1 ON (rt1.c3 IN ()) COLLATE NOCASE FULL OUTER JOIN rt2 ON '-69239630' WHERE (CAST(NULL AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON (rt1.c3 IN ()) COLLATE NOCASE FULL OUTER JOIN rt2 ON '-69239630');
SELECT ALL * FROM rt0 LEFT OUTER JOIN rt1 ON (rt1.c3 IN ()) COLLATE NOCASE FULL OUTER JOIN rt2 ON '-69239630' WHERE (CAST(NULL AS TEXT));
SELECT COUNT(*) FROM rt1, rt2, rt0 NOT INDEXED WHERE (((x'') NOTNULL)) ORDER BY ((CHANGES()) NOTNULL)  NULLS FIRST, (NOT (CAST(rt2.c0 AS INTEGER))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOTNULL)) IS TRUE)  as count FROM rt1, rt2, rt0 ORDER BY ((CHANGES()) NOTNULL)  NULLS FIRST, (NOT (CAST(rt2.c0 AS INTEGER))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt2, rt0 NOT INDEXED WHERE (((x'') NOTNULL)) ORDER BY ((CHANGES()) NOTNULL)  NULLS FIRST, (NOT (CAST(rt2.c0 AS INTEGER))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOTNULL)) IS TRUE)  as count FROM rt1, rt2, rt0 ORDER BY ((CHANGES()) NOTNULL)  NULLS FIRST, (NOT (CAST(rt2.c0 AS INTEGER))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt2, rt0 NOT INDEXED WHERE (((x'') NOTNULL)) ORDER BY ((CHANGES()) NOTNULL)  NULLS FIRST, (NOT (CAST(rt2.c0 AS INTEGER))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, rt1 WHERE (((TRIM(DISTINCT rt0.c3, 0.2795629115852851)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT rt0.c3, 0.2795629115852851)) ISNULL)) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((TRIM(DISTINCT rt0.c3, 0.2795629115852851)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT rt0.c3, 0.2795629115852851)) ISNULL)) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((TRIM(DISTINCT rt0.c3, 0.2795629115852851)) ISNULL));
SELECT * FROM rt1, rt0, rt2 WHERE ((((((((((x'' IN ()))OR((((rt0.c3))>=((rt0.c0))))))OR(((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt0.c1)))))OR(UNLIKELY(rt2.c2))))OR((rt2.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((((((x'' IN ()))OR((((rt0.c3))>=((rt0.c0))))))OR(((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt0.c1)))))OR(UNLIKELY(rt2.c2))))OR((rt2.c2 IN ())))) IS TRUE)  as count FROM rt1, rt0, rt2);
SELECT * FROM rt1, rt0, rt2 WHERE ((((((((((x'' IN ()))OR((((rt0.c3))>=((rt0.c0))))))OR(((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt0.c1)))))OR(UNLIKELY(rt2.c2))))OR((rt2.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((((((x'' IN ()))OR((((rt0.c3))>=((rt0.c0))))))OR(((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt0.c1)))))OR(UNLIKELY(rt2.c2))))OR((rt2.c2 IN ())))) IS TRUE)  as count FROM rt1, rt0, rt2);
SELECT * FROM rt1, rt0, rt2 WHERE ((((((((((x'' IN ()))OR((((rt0.c3))>=((rt0.c0))))))OR(((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt0.c1)))))OR(UNLIKELY(rt2.c2))))OR((rt2.c2 IN ()))));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON (((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) ISNULL) WHERE ((NOT (((((rt1.c1)OR(rt1.c0)))AND(rt0.c2))))) ORDER BY ((CAST(rt0.c0 AS NUMERIC)) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((rt1.c1)OR(rt1.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON (((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) ISNULL) ORDER BY ((CAST(rt0.c0 AS NUMERIC)) ISNULL));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON (((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) ISNULL) WHERE ((NOT (((((rt1.c1)OR(rt1.c0)))AND(rt0.c2))))) ORDER BY ((CAST(rt0.c0 AS NUMERIC)) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((rt1.c1)OR(rt1.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON (((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) ISNULL) ORDER BY ((CAST(rt0.c0 AS NUMERIC)) ISNULL));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON (((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) ISNULL) WHERE ((NOT (((((rt1.c1)OR(rt1.c0)))AND(rt0.c2))))) ORDER BY ((CAST(rt0.c0 AS NUMERIC)) ISNULL);
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c2, rt1.c3, rt1.c2))<=((rt1.c2, x'', rt1.c3)))) IS TRUE)) ORDER BY rt1.c3;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2, rt1.c3, rt1.c2))<=((rt1.c2, x'', rt1.c3)))) IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY rt1.c3);
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c2, rt1.c3, rt1.c2))<=((rt1.c2, x'', rt1.c3)))) IS TRUE)) ORDER BY rt1.c3;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2, rt1.c3, rt1.c2))<=((rt1.c2, x'', rt1.c3)))) IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY rt1.c3);
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c2, rt1.c3, rt1.c2))<=((rt1.c2, x'', rt1.c3)))) IS TRUE)) ORDER BY rt1.c3;
SELECT COUNT(*) FROM rt2, rt1 WHERE (((((((((((rt1.c1)OR(rt1.c4)))OR(0.10725925054620933)))OR(rt1.c1)))AND(rt2.c0)))AND((- (-768787874))))) ORDER BY CAST(((rt2.c2) IS FALSE) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c1)OR(rt1.c4)))OR(0.10725925054620933)))OR(rt1.c1)))AND(rt2.c0)))AND((- (-768787874))))) IS TRUE)  as count FROM rt2, rt1 ORDER BY CAST(((rt2.c2) IS FALSE) AS TEXT)  NULLS FIRST);
SELECT COUNT(*) FROM rt2, rt1 WHERE (((((((((((rt1.c1)OR(rt1.c4)))OR(0.10725925054620933)))OR(rt1.c1)))AND(rt2.c0)))AND((- (-768787874))))) ORDER BY CAST(((rt2.c2) IS FALSE) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c1)OR(rt1.c4)))OR(0.10725925054620933)))OR(rt1.c1)))AND(rt2.c0)))AND((- (-768787874))))) IS TRUE)  as count FROM rt2, rt1 ORDER BY CAST(((rt2.c2) IS FALSE) AS TEXT)  NULLS FIRST);
SELECT COUNT(*) FROM rt2, rt1 WHERE (((((((((((rt1.c1)OR(rt1.c4)))OR(0.10725925054620933)))OR(rt1.c1)))AND(rt2.c0)))AND((- (-768787874))))) ORDER BY CAST(((rt2.c2) IS FALSE) AS TEXT)  NULLS FIRST;
SELECT ALL * FROM rt1, rt0 LEFT OUTER JOIN rt2 ON '-1731827408' WHERE (CASE x''  WHEN ((((rt1.c1)OR(rt0.c0)))AND(rt1.c1)) THEN ((((((((rt0.c1)AND(rt0.c0)))AND(rt1.c3)))OR(rt1.c4)))OR(NULL)) WHEN rt1.c1 COLLATE RTRIM THEN ((rt0.c2)<<(rt1.c3)) WHEN ((rt1.c4) IS TRUE) THEN (NOT (rt1.c1)) ELSE (rt1.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE x''  WHEN ((((rt1.c1)OR(rt0.c0)))AND(rt1.c1)) THEN ((((((((rt0.c1)AND(rt0.c0)))AND(rt1.c3)))OR(rt1.c4)))OR(NULL)) WHEN rt1.c1 COLLATE RTRIM THEN ((rt0.c2)<<(rt1.c3)) WHEN ((rt1.c4) IS TRUE) THEN (NOT (rt1.c1)) ELSE (rt1.c0 IN ()) END) IS TRUE)  as count FROM rt1, rt0 LEFT OUTER JOIN rt2 ON '-1731827408');
SELECT ALL * FROM rt1, rt0 LEFT OUTER JOIN rt2 ON '-1731827408' WHERE (CASE x''  WHEN ((((rt1.c1)OR(rt0.c0)))AND(rt1.c1)) THEN ((((((((rt0.c1)AND(rt0.c0)))AND(rt1.c3)))OR(rt1.c4)))OR(NULL)) WHEN rt1.c1 COLLATE RTRIM THEN ((rt0.c2)<<(rt1.c3)) WHEN ((rt1.c4) IS TRUE) THEN (NOT (rt1.c1)) ELSE (rt1.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE x''  WHEN ((((rt1.c1)OR(rt0.c0)))AND(rt1.c1)) THEN ((((((((rt0.c1)AND(rt0.c0)))AND(rt1.c3)))OR(rt1.c4)))OR(NULL)) WHEN rt1.c1 COLLATE RTRIM THEN ((rt0.c2)<<(rt1.c3)) WHEN ((rt1.c4) IS TRUE) THEN (NOT (rt1.c1)) ELSE (rt1.c0 IN ()) END) IS TRUE)  as count FROM rt1, rt0 LEFT OUTER JOIN rt2 ON '-1731827408');
SELECT ALL * FROM rt1, rt0 LEFT OUTER JOIN rt2 ON '-1731827408' WHERE (CASE x''  WHEN ((((rt1.c1)OR(rt0.c0)))AND(rt1.c1)) THEN ((((((((rt0.c1)AND(rt0.c0)))AND(rt1.c3)))OR(rt1.c4)))OR(NULL)) WHEN rt1.c1 COLLATE RTRIM THEN ((rt0.c2)<<(rt1.c3)) WHEN ((rt1.c4) IS TRUE) THEN (NOT (rt1.c1)) ELSE (rt1.c0 IN ()) END);
SELECT * FROM rt0 WHERE ((rt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((rt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((rt0.c1 IN ()));
SELECT ALL * FROM rt1 WHERE (((((rt1.c4 COLLATE NOCASE)AND(((rt1.c2) NOT BETWEEN (rt1.c4) AND (rt1.c3)))))AND(CASE rt1.c3  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c4 END))) ORDER BY (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c4)) IN (rt1.c1 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c4 COLLATE NOCASE)AND(((rt1.c2) NOT BETWEEN (rt1.c4) AND (rt1.c3)))))AND(CASE rt1.c3  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c4 END))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c4)) IN (rt1.c1 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((((rt1.c4 COLLATE NOCASE)AND(((rt1.c2) NOT BETWEEN (rt1.c4) AND (rt1.c3)))))AND(CASE rt1.c3  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c4 END))) ORDER BY (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c4)) IN (rt1.c1 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c4 COLLATE NOCASE)AND(((rt1.c2) NOT BETWEEN (rt1.c4) AND (rt1.c3)))))AND(CASE rt1.c3  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c4 END))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c4)) IN (rt1.c1 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((((rt1.c4 COLLATE NOCASE)AND(((rt1.c2) NOT BETWEEN (rt1.c4) AND (rt1.c3)))))AND(CASE rt1.c3  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c4 END))) ORDER BY (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c4)) IN (rt1.c1 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT ALL * FROM rt2, rt0 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN rt2.c0 ELSE rt0.c3 END) NOT BETWEEN (CAST(rt2.c0 AS NUMERIC)) AND (((rt0.c0) NOTNULL)))) ORDER BY (~ (((rt2.c2)==(rt0.c1)))), ((((((rt0.c2)OR(rt2.c0)))OR(rt0.c3)))IS((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c0 THEN rt2.c0 ELSE rt0.c3 END) NOT BETWEEN (CAST(rt2.c0 AS NUMERIC)) AND (((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt2, rt0 ORDER BY (~ (((rt2.c2)==(rt0.c1)))), ((((((rt0.c2)OR(rt2.c0)))OR(rt0.c3)))IS((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) ASC  NULLS LAST);
SELECT ALL * FROM rt2, rt0 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN rt2.c0 ELSE rt0.c3 END) NOT BETWEEN (CAST(rt2.c0 AS NUMERIC)) AND (((rt0.c0) NOTNULL)))) ORDER BY (~ (((rt2.c2)==(rt0.c1)))), ((((((rt0.c2)OR(rt2.c0)))OR(rt0.c3)))IS((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c0 THEN rt2.c0 ELSE rt0.c3 END) NOT BETWEEN (CAST(rt2.c0 AS NUMERIC)) AND (((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt2, rt0 ORDER BY (~ (((rt2.c2)==(rt0.c1)))), ((((((rt0.c2)OR(rt2.c0)))OR(rt0.c3)))IS((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) ASC  NULLS LAST);
SELECT ALL * FROM rt2, rt0 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN rt2.c0 ELSE rt0.c3 END) NOT BETWEEN (CAST(rt2.c0 AS NUMERIC)) AND (((rt0.c0) NOTNULL)))) ORDER BY (~ (((rt2.c2)==(rt0.c1)))), ((((((rt0.c2)OR(rt2.c0)))OR(rt0.c3)))IS((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) ASC  NULLS LAST;
SELECT * FROM rt0, rt1 WHERE (CAST((rt0.c0 IN ()) AS REAL)) ORDER BY SQLITE_SOURCE_ID();
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM rt0, rt1 ORDER BY SQLITE_SOURCE_ID());
SELECT * FROM rt0, rt1 WHERE (CAST((rt0.c0 IN ()) AS REAL)) ORDER BY SQLITE_SOURCE_ID();
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM rt0, rt1 ORDER BY SQLITE_SOURCE_ID());
SELECT * FROM rt0, rt1 WHERE (CAST((rt0.c0 IN ()) AS REAL)) ORDER BY SQLITE_SOURCE_ID();
SELECT * FROM rt1, rt2, rt0 WHERE (CAST(((rt1.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)) AS INTEGER)) ORDER BY TYPEOF(DISTINCT rt1.c1) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)) AS INTEGER)) IS TRUE)  as count FROM rt1, rt2, rt0 ORDER BY TYPEOF(DISTINCT rt1.c1) ASC);
SELECT * FROM rt1, rt2, rt0 WHERE (CAST(((rt1.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)) AS INTEGER)) ORDER BY TYPEOF(DISTINCT rt1.c1) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)) AS INTEGER)) IS TRUE)  as count FROM rt1, rt2, rt0 ORDER BY TYPEOF(DISTINCT rt1.c1) ASC);
SELECT * FROM rt1, rt2, rt0 WHERE (CAST(((rt1.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)) AS INTEGER)) ORDER BY TYPEOF(DISTINCT rt1.c1) ASC;
SELECT COUNT(*) FROM rt2 WHERE (0.584310730815594);
SELECT SUM(count) FROM (SELECT ALL ((0.584310730815594) IS TRUE)  as count FROM rt2);
SELECT COUNT(*) FROM rt2 WHERE (0.584310730815594);
SELECT SUM(count) FROM (SELECT ALL ((0.584310730815594) IS TRUE)  as count FROM rt2);
SELECT COUNT(*) FROM rt2 WHERE (0.584310730815594);
SELECT COUNT(*) FROM rt0, rt2 WHERE (CAST(9.92063295E8 AS REAL)) ORDER BY rt2.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(9.92063295E8 AS REAL)) IS TRUE)  as count FROM rt0, rt2 ORDER BY rt2.c0  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt2 WHERE (CAST(9.92063295E8 AS REAL)) ORDER BY rt2.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(9.92063295E8 AS REAL)) IS TRUE)  as count FROM rt0, rt2 ORDER BY rt2.c0  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt2 WHERE (CAST(9.92063295E8 AS REAL)) ORDER BY rt2.c0  NULLS FIRST;
SELECT COUNT(*) FROM rt2, rt0 WHERE (COALESCE(CAST(rt2.c1 AS NUMERIC), (~ (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((COALESCE(CAST(rt2.c1 AS NUMERIC), (~ (rt0.c1)))) IS TRUE)  as count FROM rt2, rt0);
SELECT COUNT(*) FROM rt2, rt0 WHERE (COALESCE(CAST(rt2.c1 AS NUMERIC), (~ (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((COALESCE(CAST(rt2.c1 AS NUMERIC), (~ (rt0.c1)))) IS TRUE)  as count FROM rt2, rt0);
SELECT COUNT(*) FROM rt2, rt0 WHERE (COALESCE(CAST(rt2.c1 AS NUMERIC), (~ (rt0.c1))));
SELECT ALL COUNT(*) FROM rt2, rt1 WHERE ((NOT (CASE WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c4 END))) ORDER BY ((((rt2.c1) BETWEEN (rt1.c4) AND (rt2.c2))) BETWEEN ((NOT (rt1.c1))) AND (((rt1.c1)<<(rt2.c0))))  NULLS LAST, (((rt1.c4 IN ())) NOT BETWEEN ((('OT')<(rt1.c0))) AND ((((rt2.c0, rt1.c2, rt1.c2)) NOT BETWEEN ((rt1.c4, rt1.c1, rt2.c0)) AND (('1864997047', rt2.c0, x''))))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c4 END))) IS TRUE)  as count FROM rt2, rt1 ORDER BY ((((rt2.c1) BETWEEN (rt1.c4) AND (rt2.c2))) BETWEEN ((NOT (rt1.c1))) AND (((rt1.c1)<<(rt2.c0))))  NULLS LAST, (((rt1.c4 IN ())) NOT BETWEEN ((('OT')<(rt1.c0))) AND ((((rt2.c0, rt1.c2, rt1.c2)) NOT BETWEEN ((rt1.c4, rt1.c1, rt2.c0)) AND (('1864997047', rt2.c0, x''))))) DESC);
SELECT ALL COUNT(*) FROM rt2, rt1 WHERE ((NOT (CASE WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c4 END))) ORDER BY ((((rt2.c1) BETWEEN (rt1.c4) AND (rt2.c2))) BETWEEN ((NOT (rt1.c1))) AND (((rt1.c1)<<(rt2.c0))))  NULLS LAST, (((rt1.c4 IN ())) NOT BETWEEN ((('OT')<(rt1.c0))) AND ((((rt2.c0, rt1.c2, rt1.c2)) NOT BETWEEN ((rt1.c4, rt1.c1, rt2.c0)) AND (('1864997047', rt2.c0, x''))))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c4 END))) IS TRUE)  as count FROM rt2, rt1 ORDER BY ((((rt2.c1) BETWEEN (rt1.c4) AND (rt2.c2))) BETWEEN ((NOT (rt1.c1))) AND (((rt1.c1)<<(rt2.c0))))  NULLS LAST, (((rt1.c4 IN ())) NOT BETWEEN ((('OT')<(rt1.c0))) AND ((((rt2.c0, rt1.c2, rt1.c2)) NOT BETWEEN ((rt1.c4, rt1.c1, rt2.c0)) AND (('1864997047', rt2.c0, x''))))) DESC);
SELECT ALL COUNT(*) FROM rt2, rt1 WHERE ((NOT (CASE WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c4 END))) ORDER BY ((((rt2.c1) BETWEEN (rt1.c4) AND (rt2.c2))) BETWEEN ((NOT (rt1.c1))) AND (((rt1.c1)<<(rt2.c0))))  NULLS LAST, (((rt1.c4 IN ())) NOT BETWEEN ((('OT')<(rt1.c0))) AND ((((rt2.c0, rt1.c2, rt1.c2)) NOT BETWEEN ((rt1.c4, rt1.c1, rt2.c0)) AND (('1864997047', rt2.c0, x''))))) DESC;
SELECT * FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM);
SELECT * FROM rt1 FULL OUTER JOIN rt2 ON (~ (((rt2.c0) BETWEEN (rt2.c2) AND (rt0.c2)))) CROSS JOIN rt0 ON CASE WHEN CAST(rt2.c0 AS TEXT) THEN ((rt0.c2) ISNULL) END WHERE (UPPER((((x'', rt0.c2, rt0.c3))==((rt1.c1, rt0.c0, rt2.c2))))) ORDER BY CAST(((((rt0.c2)AND(rt0.c3)))AND(1994324130)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((UPPER((((x'', rt0.c2, rt0.c3))==((rt1.c1, rt0.c0, rt2.c2))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt2 ON (~ (((rt2.c0) BETWEEN (rt2.c2) AND (rt0.c2)))) CROSS JOIN rt0 ON CASE WHEN CAST(rt2.c0 AS TEXT) THEN ((rt0.c2) ISNULL) END ORDER BY CAST(((((rt0.c2)AND(rt0.c3)))AND(1994324130)) AS INTEGER));
SELECT * FROM rt1 FULL OUTER JOIN rt2 ON (~ (((rt2.c0) BETWEEN (rt2.c2) AND (rt0.c2)))) CROSS JOIN rt0 ON CASE WHEN CAST(rt2.c0 AS TEXT) THEN ((rt0.c2) ISNULL) END WHERE (UPPER((((x'', rt0.c2, rt0.c3))==((rt1.c1, rt0.c0, rt2.c2))))) ORDER BY CAST(((((rt0.c2)AND(rt0.c3)))AND(1994324130)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((UPPER((((x'', rt0.c2, rt0.c3))==((rt1.c1, rt0.c0, rt2.c2))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt2 ON (~ (((rt2.c0) BETWEEN (rt2.c2) AND (rt0.c2)))) CROSS JOIN rt0 ON CASE WHEN CAST(rt2.c0 AS TEXT) THEN ((rt0.c2) ISNULL) END ORDER BY CAST(((((rt0.c2)AND(rt0.c3)))AND(1994324130)) AS INTEGER));
SELECT ALL * FROM rt1 WHERE (((((((rt1.c4)+(rt1.c4)))AND(((rt1.c4)==(0.9885239714254135)))))AND(((rt1.c3)=(rt1.c1))))) ORDER BY CAST(((rt1.c0) IS TRUE) AS REAL), CASE WHEN ((rt1.c3)>=(rt1.c3)) THEN ((rt1.c3)||(0.007820784798854508)) WHEN LTRIM(rt1.c1, rt1.c2) THEN CASE WHEN '' THEN NULL WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c4 END WHEN ((((rt1.c4)OR(rt1.c3)))AND('0.5691851114123427')) THEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c4)+(rt1.c4)))AND(((rt1.c4)=(0.9885239714254135)))))AND(((rt1.c3)=(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY CAST(((rt1.c0) IS TRUE) AS REAL), CASE WHEN ((rt1.c3)>=(rt1.c3)) THEN ((rt1.c3)||(0.007820784798854508)) WHEN LTRIM(rt1.c1, rt1.c2) THEN CASE WHEN '' THEN NULL WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c4 END WHEN ((((rt1.c4)OR(rt1.c3)))AND('0.5691851114123427')) THEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)) END  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((((((rt1.c4)+(rt1.c4)))AND(((rt1.c4)==(0.9885239714254135)))))AND(((rt1.c3)=(rt1.c1))))) ORDER BY CAST(((rt1.c0) IS TRUE) AS REAL), CASE WHEN ((rt1.c3)>=(rt1.c3)) THEN ((rt1.c3)||(0.007820784798854508)) WHEN LTRIM(rt1.c1, rt1.c2) THEN CASE WHEN '' THEN NULL WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c4 END WHEN ((((rt1.c4)OR(rt1.c3)))AND('0.5691851114123427')) THEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c4)+(rt1.c4)))AND(((rt1.c4)=(0.9885239714254135)))))AND(((rt1.c3)=(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY CAST(((rt1.c0) IS TRUE) AS REAL), CASE WHEN ((rt1.c3)>=(rt1.c3)) THEN ((rt1.c3)||(0.007820784798854508)) WHEN LTRIM(rt1.c1, rt1.c2) THEN CASE WHEN '' THEN NULL WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c4 END WHEN ((((rt1.c4)OR(rt1.c3)))AND('0.5691851114123427')) THEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)) END  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((((((rt1.c4)+(rt1.c4)))AND(((rt1.c4)==(0.9885239714254135)))))AND(((rt1.c3)=(rt1.c1))))) ORDER BY CAST(((rt1.c0) IS TRUE) AS REAL), CASE WHEN ((rt1.c3)>=(rt1.c3)) THEN ((rt1.c3)||(0.007820784798854508)) WHEN LTRIM(rt1.c1, rt1.c2) THEN CASE WHEN '' THEN NULL WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c4 END WHEN ((((rt1.c4)OR(rt1.c3)))AND('0.5691851114123427')) THEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)) END  NULLS LAST;
SELECT COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN rt2 ON ((((rt0.c1)/(rt0.c2)))-(((0.5031945091511361)<<(rt1.c0)))) WHERE (((TIME(rt1.c3, rt1.c1, rt0.c2, rt0.c0, rt0.c1)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((TIME(rt1.c3, rt1.c1, rt0.c2, rt0.c0, rt0.c1)) NOTNULL)) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN rt2 ON ((((rt0.c1)/(rt0.c2)))-(((0.5031945091511361)<<(rt1.c0)))));
SELECT COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN rt2 ON ((((rt0.c1)/(rt0.c2)))-(((0.5031945091511361)<<(rt1.c0)))) WHERE (((TIME(rt1.c3, rt1.c1, rt0.c2, rt0.c0, rt0.c1)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((TIME(rt1.c3, rt1.c1, rt0.c2, rt0.c0, rt0.c1)) NOTNULL)) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN rt2 ON ((((rt0.c1)/(rt0.c2)))-(((0.5031945091511361)<<(rt1.c0)))));
SELECT COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN rt2 ON ((((rt0.c1)/(rt0.c2)))-(((0.5031945091511361)<<(rt1.c0)))) WHERE (((TIME(rt1.c3, rt1.c1, rt0.c2, rt0.c0, rt0.c1)) NOTNULL));
SELECT COUNT(*) FROM rt1 CROSS JOIN rt2 ON TYPEOF(DISTINCT ((rt1.c0)<>(rt1.c4))) WHERE ((((((~ (rt1.c1)))AND(rt2.c1 COLLATE RTRIM)))OR((- (rt1.c3))))) ORDER BY ((PRINTF(rt2.c1))LIKE(CASE WHEN rt1.c0 THEN rt1.c3 END)) ASC  NULLS FIRST, ((((~ (rt1.c1))))=((-1.773733415E9)))  NULLS LAST, (((~ (rt2.c2)))<=(rt1.c4)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((~ (rt1.c1)))AND(rt2.c1 COLLATE RTRIM)))OR((- (rt1.c3))))) IS TRUE)  as count FROM rt1 CROSS JOIN rt2 ON TYPEOF(DISTINCT ((rt1.c0)<>(rt1.c4))) ORDER BY ((PRINTF(rt2.c1))LIKE(CASE WHEN rt1.c0 THEN rt1.c3 END)) ASC  NULLS FIRST, ((((~ (rt1.c1))))=((-1.773733415E9)))  NULLS LAST, (((~ (rt2.c2)))<=(rt1.c4)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 CROSS JOIN rt2 ON TYPEOF(DISTINCT ((rt1.c0)<>(rt1.c4))) WHERE ((((((~ (rt1.c1)))AND(rt2.c1 COLLATE RTRIM)))OR((- (rt1.c3))))) ORDER BY ((PRINTF(rt2.c1))LIKE(CASE WHEN rt1.c0 THEN rt1.c3 END)) ASC  NULLS FIRST, ((((~ (rt1.c1))))=((-1.773733415E9)))  NULLS LAST, (((~ (rt2.c2)))<=(rt1.c4)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((~ (rt1.c1)))AND(rt2.c1 COLLATE RTRIM)))OR((- (rt1.c3))))) IS TRUE)  as count FROM rt1 CROSS JOIN rt2 ON TYPEOF(DISTINCT ((rt1.c0)<>(rt1.c4))) ORDER BY ((PRINTF(rt2.c1))LIKE(CASE WHEN rt1.c0 THEN rt1.c3 END)) ASC  NULLS FIRST, ((((~ (rt1.c1))))=((-1.773733415E9)))  NULLS LAST, (((~ (rt2.c2)))<=(rt1.c4)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 CROSS JOIN rt2 ON TYPEOF(DISTINCT ((rt1.c0)<>(rt1.c4))) WHERE ((((((~ (rt1.c1)))AND(rt2.c1 COLLATE RTRIM)))OR((- (rt1.c3))))) ORDER BY ((PRINTF(rt2.c1))LIKE(CASE WHEN rt1.c0 THEN rt1.c3 END)) ASC  NULLS FIRST, ((((~ (rt1.c1))))=((-1.773733415E9)))  NULLS LAST, (((~ (rt2.c2)))<=(rt1.c4)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1, rt2 WHERE (CASE WHEN ((rt0.c1) IS TRUE) THEN x'' END) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1) IS TRUE) THEN x'' END) IS TRUE)  as count FROM rt0, rt1, rt2 ORDER BY NULL);
SELECT ALL COUNT(*) FROM rt0, rt1, rt2 WHERE (CASE WHEN ((rt0.c1) IS TRUE) THEN x'' END) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1) IS TRUE) THEN x'' END) IS TRUE)  as count FROM rt0, rt1, rt2 ORDER BY NULL);
SELECT ALL COUNT(*) FROM rt0, rt1, rt2 WHERE (CASE WHEN ((rt0.c1) IS TRUE) THEN x'' END) ORDER BY NULL;
SELECT ALL * FROM rt1 WHERE (x'') ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1 ORDER BY NULL ASC);
SELECT ALL * FROM rt1 WHERE (x'') ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1 ORDER BY NULL ASC);
SELECT ALL * FROM rt1 WHERE (x'') ORDER BY NULL ASC;
SELECT ALL * FROM rt0 WHERE (((((NULL)AND(-1366227640)))OR(-569064569)));
SELECT SUM(count) FROM (SELECT ((((((NULL)AND(-1366227640)))OR(-569064569))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((NULL)AND(-1366227640)))OR(-569064569)));
SELECT SUM(count) FROM (SELECT ((((((NULL)AND(-1366227640)))OR(-569064569))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((NULL)AND(-1366227640)))OR(-569064569)));
