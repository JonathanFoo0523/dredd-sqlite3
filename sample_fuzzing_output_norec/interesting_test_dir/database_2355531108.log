-- Time: 2024/06/09 11:01:23
-- Database: database8
-- Database version: 3.40.0
-- seed value: 2355531108
PRAGMA cache_size = 50000; -- 6ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4, +c5 BLOB ); -- 1ms;
PRAGMA temp.recursive_triggers = true; -- 0ms;
UPDATE OR IGNORE rt0 SET c5=0.23255030807903498; -- 0ms;
REINDEX; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=x'', c0=NULL, c1=x''; -- 0ms;
PRAGMA busy_timeout; -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c2, c0, c4)=(0Xffffffffefa72340, 0.6553085929202298, 0.9549654452840263); -- 0ms;
REINDEX; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '-274259136'  WHEN x'6d8e' THEN NULL WHEN NULL THEN 215811784 WHEN 0.6553085929202298 THEN x'' ELSE NULL END)<>((('532924744') BETWEEN (0.9549654452840263) AND (x'3eea')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=532924744 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1035702201'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((x'')%(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1230238813'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1535386269 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1325471309 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '314271622 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1535386269')<>('Xc#%Cc2Tt'))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 1230238813 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT BETWEEN ('*fA,' COLLATE BINARY) AND (NULL COLLATE NOCASE)); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '?>L^J6x!' THEN x'' END) IS TRUE); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=215811784 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -274259136'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((x'5c63', '1230238813', '')) BETWEEN ((('8' IN ()), ((x'3037') NOTNULL), CAST(NULL AS NUMERIC))) AND ((NULL, (~ (x'd880')), ((x'2fdf')==('8'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=427117522 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '256051657 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '179931636 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '532924744 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=215811784 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1766555354'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=256051657'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'9e07'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-543981596 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('2048932920') BETWEEN (NULL) AND ('1535386269')) THEN json_extract(NULL, '0.9549654452840263') ELSE (('FL') NOT NULL) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=829812817 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_insert(CASE WHEN NULL THEN '1548194759' END, (((x'5561'))>=(('d?XSgX.W'))), (((4.27117522E8, '0.9549654452840263', '铂'))!=(('3z', x'', x''))), ((0.9549654452840263)&(0X57a0ad4f)), CAST('C^}\' AS REAL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.9423328970641874)) BETWEEN ((NULL)) AND ((0.6553085929202298)))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-1853405327 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.9423328970641874') IS FALSE)) NOT BETWEEN ('-G' COLLATE NOCASE) AND ((((x'dce3'))=((x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1470147919'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.9423328970641874; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((NULL)AND(NULL)))AND(NULL))  WHEN ((('0.6553085929202298', '-279081053', x'56e4'))=(('', '9[]L', 0.6553085929202298))) THEN (((-722233991, '-42660264', x'3dd9d425')) NOT BETWEEN ((0.9423328970641874, x'', x'9962')) AND ((NULL, '-543981596', '-1569541863'))) END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(x'' AS NUMERIC)  WHEN ((0.40166133195319176) BETWEEN (-7.22233991E8) AND (0.9549654452840263)) THEN (0Xfffffffff3d7c5af IN ()) END; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') BETWEEN (0.4070876251261134) AND (NULL))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') BETWEEN ('') AND (x'')))LIKE((~ (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1118488234 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (+ ('63014601')) THEN ((x'') IS FALSE) ELSE ((((((((((((0.7143543265879341)AND(x'')))OR('*fA,')))AND(0.9923344533310716)))AND(x'')))OR(0.20557550297793015)))AND(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1353681694 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)<('-732252264')))AND(((0.943106036096091)%(0.7208251030172266)))))AND(((x'')<>(x'')))))OR(CAST(NULL AS INTEGER))))OR((NOT ('-735711965')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(x'' AS REAL) IN ('9mbP+v0d', NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((~ (-2026230743)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-41777508'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-279081053 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((0.28288986784932024, x'', 427117522))!=(('ePUⰩ', NULL, ''))) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1401710955 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-732252264 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('J7a')LIKE(NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL))<>((x''))) COLLATE NOCASE COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-722233991'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1065759461'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1268777674 0 sz=351387563'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0xffffffffa272b119 THEN 0.8955069866127602 WHEN x'' THEN NULL WHEN 885912806 THEN '-732252264' END) NOT BETWEEN (((-9223372036854775808) NOT NULL)) AND (((0x33398566)%(0x74eefbf)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE NOCASE) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1548194759 sz=-722233991'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1313838808 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-621760470'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1876122038 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('AsUMs'))<((((x'') NOT BETWEEN (x'') AND (0.6672342861516029))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1531341941 2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-203962961 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2134905180'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1480776938'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4 sz=-352749426 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '18680005 sz=19518533 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1924838823 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1766555354'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-203962961') IS TRUE))>>(NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF((NOT ('Bf'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2048932920 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) BETWEEN (('-2026230743' IN ())) AND (((x'') NOT BETWEEN (x'') AND (1470147919)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1371887564 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-2072560318 sz=1102651952 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('#c.\nxjPK' AS REAL) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=134730179'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1869032921 -1995526385 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0Xffffffffcafbab2c)+(0.6246450122985397)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '829812817 -1035702201 sz=-402221188 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN SQLITE_COMPILEOPTION_GET(NULL) THEN CASE x''  WHEN '-707952178' THEN x'870f' WHEN 0Xffffffffa5770fa2 THEN 0.7208251030172266 WHEN NULL THEN '{}' ELSE 6.3014601E7 END WHEN (~ (0Xffffffffa34e61e9)) THEN CASE WHEN x'' THEN NULL WHEN 0.6345441537135521 THEN -1586509119 WHEN NULL THEN '' WHEN x'9e7863b1' THEN 0.38109841999539573 WHEN '0.28288986784932024' THEN 0.814812721752356 END WHEN ((('')) NOT BETWEEN ((1.102651952E9)) AND ((''))) THEN ((0.9704517514787491) NOT BETWEEN ('-1518923870') AND (NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-777221765 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2026230743 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1233408348'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1761411911'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-190173707 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7208251030172266)/('225598318'))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (x'bf01')); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'a6c8' COLLATE NOCASE AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-735711965'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2048932920 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=69581910 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (x'dedb')))>>('0.9704517514787491')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-154179572 sz=123411160 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)GLOB(CASE WHEN 0.8955069866127602 THEN 'Bf' WHEN x'' THEN '859407718' WHEN 0.790398902936027 THEN x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1492924793'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-560559691 2 sz=219273874 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-21899305 sz=1587964255 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-707952178'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-1995526385'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-154179572')/((~ (2048932920)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1871539827 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 1548194759 sz=234360702 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ROUND((NOT (0.31156218971433525)), (((1383658852))<=((NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1812892359 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((- (''))))==(((('-1035702201')/(NULL))))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '	H%\>(*#Y' THEN NULL ELSE 0.09477334208867749 COLLATE BINARY END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1555144215'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')GLOB(x''))) NOT BETWEEN (CASE WHEN NULL THEN x'' ELSE x'' END) AND (('1626973473' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=10213281 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1832191779 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('518201740') ISNULL) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1298731068 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '747016263 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('747016263' IN ()) IN (HEX(DISTINCT 0x4729555a), (((NULL)) NOT BETWEEN ((0.6923976661130052)) AND ((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1268777674 sz=-1309685124 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) BETWEEN ((('mU')GLOB('Q!<)'))) AND (TYPEOF(-231401220))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1206642719'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-253167568'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1819284227 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.9316245100631126 COLLATE NOCASE)&(CASE x'b6fe'  WHEN '' THEN 298849498 ELSE x'eb93' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1995526385 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-154179572 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('154520751' COLLATE BINARY IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((-4.02221188E8)|(0.6966500096339605)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN x'' THEN 266276560 END IN (CAST('gY|[%rc0J' AS INTEGER))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1711137176'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1760960673 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-707952178 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.9498700784325209)) BETWEEN (((NOT (0.14358817172912008)))) AND ((UNLIKELY(DISTINCT '')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=747016263 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1065759461')/('532924744'))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-560559691 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -1673578797 sz=-373662172 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1742853596'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) IS TRUE) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '689821412 sz=-560559691 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2121537654 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1') IS FALSE))||(NULL COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=638626854'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-1353681694 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('\Tpg脦龯#.D')) NOT BETWEEN ((x'')) AND (((((NULL, 'iB', '-437070531')) BETWEEN ((x'', '350780155', x'')) AND ((NULL, NULL, x'')))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-259809169 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2137317540'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2121537654 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-2072560318 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' AS NUMERIC) COLLATE BINARY; -- 1ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=179931636 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (UNICODE(x'e589'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '-2072560318'  WHEN x'' THEN 256051657 WHEN -1.51892387E9 THEN 0.896080564048478 WHEN 0.38109841999539573 THEN 0.21825839542599357 WHEN 0.6586730453454008 THEN 0.9423328970641874 WHEN NULL THEN 0.6426776862116155 ELSE NULL END)IS NOT((x'93aa' IN (0.4070876251261134, '446433372')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE NOCASE)-(NULL COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE NOCASE AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE -1.90173707E8  WHEN (x'' IN ()) THEN ((x'9352')<(0Xffffffffd8476d64)) WHEN ((NULL)GLOB(NULL)) THEN ((((1.587964255E9)AND(0.3713386563633988)))OR(0Xffffffffde37bb90)) WHEN ((NULL) NOTNULL) THEN IFNULL(1911795787, '0.896080564048478') END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((NULL))<((NULL))) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '314271622'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1206642719 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1819284227')==(x''))))<(((x'' IN ())))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(x'4619') COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1771812905 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.5486575195284281)IS('-2134905180')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1742853596'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR('0.9704517514787491')))AND(-2.1899305E7)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.7567511143477915)|(NULL)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('314271622')||('#f!㞕K,'))  WHEN ((NULL)<<(0X2610ac26)) THEN ((((((((0.19521127930042914)OR(-1.995526385E9)))OR(x'')))AND('')))OR('1480776938')) WHEN (('~<l/A9ꚲry')|(-2.74259136E8)) THEN (NOT (x'')) WHEN ((0.661840257373125)OR(-1233408348)) THEN ((('E8', x'', NULL))==((x'', 0.8918432388067127, '0.9498700784325209'))) ELSE (~ ('1587964255')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-373662172 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1035702201 -529749861 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-621760470 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(STRFTIME('N2)hJ', NULL, x'', 0.8866521172730683, -1.035702201E9) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=355999086'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=803683367 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((-1.586509119E9) IS FALSE) THEN ((x'') NOTNULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=100892416'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS INTEGER))GLOB((NULL IN ('Ze')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE NOCASE) NOT BETWEEN (('^' IN ())) AND (TRIM(0.6095344273434015))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)AND(x'')))AND(NULL)))<<('1352809239' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1323286978 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST('355696193' AS TEXT))AND(((((0.38109841999539573)AND(-1036912141)))AND(x'')))))AND(DATE(0.4070876251261134, '', NULL))))OR(x'5e1b' COLLATE RTRIM)))AND((((0Xffffffffc00a10fb))=((0.23406595085366955))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE NOCASE AS BLOB); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 1007969098 sz=298849498'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '679655259 sz=-926047879 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY((~ ('M7'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-68349669 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1517302193 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-722233991'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('-1812892359')) BETWEEN ((0.7143543265879341)) AND ((x''))) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((' -E㳻olGD')) NOT BETWEEN ((0xffffffffef5d8fa3)) AND ((((((((((-1.035702201E9)OR(x'6eb0')))AND(x'e2d7')))AND(0Xffffffffb9ab99a0)))OR(0.9704517514787491))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=179931636 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.3769466375024765 AS NUMERIC))AND((~ ('6d	yAU8&')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('' AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1275783298 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-2098934139 sz=1383658852'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((~ (0.7746001195016776)))AND(NULL)))AND((('1676086030') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0xffffffffcfaff1a1) NOTNULL) THEN ((x'') BETWEEN (NULL) AND (1587964255)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((((('1548194759', 0X1c9d08d0, '', '- oU%x', x'')) NOT BETWEEN ((x'109c', 0x57ac83e7, 1.871539827E9, '{}', '19518533')) AND (('*EYQgUe', 0.6422956448004011, x'', x'', 0X3c186c9))))) AND ((TRIM(DISTINCT '^')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -1465097144 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1498531640') BETWEEN (0.47569493828458265) AND (NULL)) IN ()); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0x5ea6695f) BETWEEN (1760960673) AND (0.3713386563633988)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1401710955') NOT NULL) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.5595317603818789 IN (NULL, 1.102651952E9)))>=(((NULL)<('1871539827')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.9616747847744145 THEN 0Xffffffffa87aa161 ELSE 0.19521127930042914 END)AND(((x'eff4') IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '781453782 sz=-1711137176'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1843697816 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('234360702'))=(('')))))>((CAST(x'0673' AS INTEGER)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((NULL)>>(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '163528991 -1613880208 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (NULL)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (0x3d583c75)))+(((0.7896406279785534) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1043174095 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0x65f139fa)||('-1812892359'))) NOT BETWEEN ((- (NULL))) AND (CASE WHEN -1876122038 THEN NULL ELSE x'' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT ((((((((0Xffffffffe939a091)OR(888088941)))OR(x'f536')))AND(0.11431778915831714)))OR('zTT]L1a')), (((x'3079d821')) BETWEEN ((x'')) AND ((0xfffffffff0e8f830)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(('肁l' IN (0x6f8d6e73)) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1304402610 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '941550286 -722233991 sz=-1601541272 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2121537654 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=229864704 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=560231182 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1115731140 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(NULL AS TEXT) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 990105865 sz=-203962961'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1195775258 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1298731068'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((((x'' COLLATE BINARY)AND(((((((((NULL)AND(0.7819504075766848)))AND(x'1630')))OR('1577322516')))AND('')))))OR(((0.5203833373810468)|(512311274)))))AND((0.5595317603818789 IN ()))))OR(LIKE(0.8955069866127602, NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE ''  WHEN 'g)xpmK0q7' THEN x'' ELSE 0.7880367147817476 END)OR(((0.3505873221961159) BETWEEN (x'5f85') AND (0.1722856477865229)))))OR((('1924838823') BETWEEN (0X1fc3c948) AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(SQLITE_COMPILEOPTION_USED(x'6984ec20') AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.016367964423665282) BETWEEN (NULL) AND ('')) IN (CASE 0.08858311941201935  WHEN 613108216 THEN '-1865664234' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')OR(((('1587097270')) BETWEEN ((0.4619393065632136)) AND (('OV'))))))OR(((((((((((((0X19008ae6)AND(0.9341551706316698)))OR(NULL)))OR('HAb')))AND(NULL)))OR(NULL)))AND('800697369')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '518201740'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1325471309' IN ())) NOT BETWEEN (CASE WHEN '0.11431778915831714' THEN '' WHEN '-210330613' THEN 320745814 WHEN x'' THEN NULL ELSE '-1800393870' END) AND ((- (701112722)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-94342428 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1812892359 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1017017672 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1878098711 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_quote('-1298731068')) NOT NULL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 0 sz=-2037727245 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-633853278 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1301235715 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1948929697 2 sz=1530747944 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)<>('')) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((((NULL))!=((0x4c0a086b))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1203450192'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1098044263 2 sz=1485072733 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-751173443 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 sz=974124048 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1492924793 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.8179957031937279 COLLATE NOCASE) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNICODE(((NULL) ISNULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((- (0.24652332528509135)))OR((('')>>(NULL)))))OR(((('-2099243488'))>((0Xf94199a))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN '-732252264' ELSE NULL END) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2046514385'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1045132384 0 sz=-1013736341'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=238261442 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '134730179 sz=-2110287891 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CAST('' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1455783476 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=19518533 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.7779064757938291) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-559481120 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN '' THEN NULL END) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 4 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST(-3.73662172E8 AS REAL))AND((~ (0.42628610013236756)))))OR((((NULL, '', 0.4858222683030735))=((NULL, 0.1081874530731316, 1569241386))))))AND(LIKELIHOOD(0Xffffffff80bfeea4, 0.9559577914185655))))OR((NULL IN ()))); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((0Xfffffffff0c6244e)AND(-1078293197)))AND('')))AND(x'')))AND('1587964255')))AND((('-829677193') BETWEEN (NULL) AND (1.587964255E9)))))OR(CAST('427117522' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS NUMERIC)) BETWEEN ((x'' IN ())) AND (((NULL) NOT BETWEEN ('-547822435') AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NOT (x'f57c')) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1035702201 sz=-1876122038'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1792888984 0 sz=-1995554132 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1233408348 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS REAL))==(NULL COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1832191779 0 sz=-50529971'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE NULL  WHEN NULL THEN 0x5bb0ccdf WHEN 0.10878521116094741 THEN NULL WHEN '-2018273790' THEN '2136158927' ELSE 0.2944656935560759 END AS BLOB); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1455990325 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2045474743 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE x''  WHEN '510511945' THEN 0.7912348295122108 WHEN '133105376' THEN x'ec3e' WHEN 'Zq' THEN '*还' ELSE 0.9733355838376776 END AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1823575581 sz=265972518 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('0.7912348295122108') IS TRUE), (('2048932920') IS FALSE), (~ (0x807d1c3))))==(((((NULL, x'', ''))<>((0.13872326188125417, NULL, x''))), CAST('1884093321' AS BLOB), CASE '-210914905'  WHEN NULL THEN '1435315577' END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE '-1792085450'  WHEN 0.703110862754109 THEN x'' END)AND((('-2125923210')IS NOT('')))))OR((((1.7976931348623157E308)) NOT BETWEEN (('Q!<)')) AND ((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1010062252 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-889476308'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1987882136 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1781018646 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.1769050503258779)OR(((x'') NOT NULL))))AND('18680005' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-621760470 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '883485457 sz=134730179'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 'N4'  WHEN '1077064757' THEN 0.24824799126141017 ELSE 0xffffffff84773d42 END) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=123411160'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 1484848992 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1987669496 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1909528584 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 sz=-1432256786'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=134730179 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('{}') NOT BETWEEN (1.118488234E9) AND (0Xfffffffffc529a33)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1819284227 sz=-735711965'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=768096782 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((x'')) BETWEEN (('-707952178')) AND ((''))) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') IS FALSE)) NOT BETWEEN (((NULL) BETWEEN ('1967314708083972941 -4520838587531373940:-1263144280892967874--38076056147720630days95-602 138765185585286490 3791150614377822972:') AND ('!/m'))) AND (CASE 0.40166133195319176  WHEN '1726822380' THEN x'fa646731' ELSE 1118488234 END)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UNLIKELY(DISTINCT 0.7477693837086564))<=(((x'') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '174340114 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-752142250 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=317796112'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-707952178')%(x'6df9'))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=358841197 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0xffffffffcbc4db96 THEN x'' WHEN x'6c03' THEN '-1070838169' WHEN 0.33637758294371045 THEN -1051470756 ELSE NULL END COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-486266014 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-154542912 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((((((NULL)AND('-42660264')))AND(NULL)))AND(0.24652332528509135)))OR(-2.53167568E8)) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(NULL AS TEXT) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) IS FALSE) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('1118488234') ISNULL))OR(LENGTH('zTT]L1a'))))AND((('') BETWEEN (x'1eb9') AND ('-1812892359')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1206642719 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-61599029 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=-1709971879'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-62336497 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) NOT BETWEEN (0.9858093928360914) AND (NULL)) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=420553329 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1677255699'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1272308947 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('179931636') NOT BETWEEN ('597921070') AND (0.2598014868002464)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 2 sz=-652790361 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(0xffffffffd1ac897b AS REAL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((('-41777508')OR(x'25bd')))AND(x'')) THEN ((-154179572)LIKE(x'')) WHEN CASE WHEN x'' THEN '' WHEN 0.039493778006612246 THEN x'' WHEN '' THEN -1.035702201E9 ELSE '1871539827' END THEN ((0.45454140634065976)&(NULL)) WHEN 1.9518533E7 THEN ((',{') NOT NULL) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((DATE('-203962961', -2.53167568E8, '', '', x''))>(((0.47279076486962435) BETWEEN (',V 	zH1	') AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.9733355838376776; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.8936351749203242 AS TEXT))GLOB(TYPEOF('-735711965'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-154179572'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 0 sz=1535386269 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (x'' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('154520751')OR('Md')))AND('-1876122038')))AND(0.43088380301704154)))AND(0.8459433906146389))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-503658140 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1586509119 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1617860415') NOT NULL)) BETWEEN (CAST(x'' AS REAL)) AND (((0.4616283943408428)<('1796877478')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=550218387 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('') IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1510493730 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1545783791 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.8564720173487362) NOTNULL) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-203962961 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((0.016725810983544864) NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=492779789 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=320449657 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(NULL AS BLOB) IN ()); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-158550982 sz=-1035702201 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1909471901'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1481723625 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1359746523 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (1.2341116E8 IN ()) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))GLOB(-244482299)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ ('351387563'))) NOT BETWEEN ((x'' IN ())) AND ('\৉>o潊u䋢d')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1995526385'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((-1761269404)IS NOT(0.5595317603818789))  WHEN (((((((('%ỻg')AND(NULL)))AND('l}eF_G(''')))OR('0.2944656935560759')))OR(x'')) THEN (x'' IN ()) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=969914098 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=696936880 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1193109147 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.1392965153514656)OR('iqa뱖[\n5q')))OR('')))-(((0.8108985655020738) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2085875995 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=62952913 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4 0 sz=-373662172 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '875303345 316957339 sz=1615209275 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1569541863 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('-Infinity')||(83482939)))IS(CASE '-1510916937'  WHEN x'' THEN NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1673444025 sz=1792094158'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=825489020 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=321919410'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('')LIKE(NULL)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1634529018'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')<(CAST('' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-253167568 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=518201740 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)>=('D_Ok辣ZHg')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '885912806 -190173707 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(((-521940181)IS(x'')), '1832191779', '1924838823', (('!/m') NOT BETWEEN (x'3a0e') AND ('134730179'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-891957334 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-871481042 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')IS(2.34360702E8))))=((x'421a' COLLATE RTRIM))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 1404835319 sz=34699490 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2033296344 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-769672068 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 2 sz=996157205 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-596172128'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN 0x68fd0347 THEN x'772c' WHEN '' THEN '1659527715' WHEN '' THEN '-1866586593' END) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-552277556'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=511914067 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '256051657'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2026230743'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS FALSE)) BETWEEN ((('XZu8%')OR(1.535386269E9))) AND (((8.59407718E8) NOT BETWEEN ('1065759461') AND ('-1586509119')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0Xfffffffffec47201))>=(((+ (x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=428860868 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)LIKE(0.470410868106682))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((0.1769050503258779)) BETWEEN ((x'1a30')) AND ((x''))) THEN (+ ('179931636')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=512628330 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'd63e6877')OR(x'')))AND(x'')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('??Fq\n3tr') NOT NULL))AND((- ('50')))))AND('0.9704517514787491' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((x'7f65') NOT BETWEEN (0.7972128908072913) AND ('0.43088380301704154')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST('' AS INTEGER) THEN x'5389' COLLATE BINARY END; -- 1ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1860135490 sz=-998766020 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) ISNULL))!=(CAST('Uyd(' AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NOT (0Xffffffffc7b0bca8)))AND(((x'')=('-1726264014')))))AND('⨓|' COLLATE BINARY)); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '418380413 2 sz=63014601 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(TYPEOF('1869032921') AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1940382770 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-2026230743 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1193891162 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(4.7677054707551125E-4 AS INTEGER) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=-210710645 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'c62e') BETWEEN ('1552154237') AND (-2078424823))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN MIN('', 0.896080564048478) THEN 0.8778690689478273 COLLATE BINARY WHEN ((0.05354411545863125) NOT BETWEEN (-621760470) AND ('a8%2')) THEN '-352749426' COLLATE RTRIM WHEN ((0.011344413173963619)<<('w+M*2lD')) THEN CAST(0.8523359788642342 AS BLOB) ELSE ((((x'1320')AND('622534503')))OR(-1309685124)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1171910938 sz=-1137384536 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=778800582 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '536413486 0 sz=26966447 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-95286344 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-732252264 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=473234010 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2132779675 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=307593976'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '0.6672342861516029' THEN NULL END COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'bdad' IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN (x'')))!=(UPPER(NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -721363123 sz=1832191779 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-208949912 sz=-352749426 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 1832191779 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((x'')OR('1313838808')))AND('-406934027')) THEN CASE 614146711  WHEN NULL THEN NULL WHEN '^' THEN x'e736' WHEN '1548194759' THEN '1103613706' END WHEN (('褌3?s39') IS TRUE) THEN (~ (x'')) WHEN ((x'') NOT NULL) THEN (((NULL, NULL, 1765124459)) BETWEEN ((NULL, '', 0.5788742950587263)) AND (('0q', 0.06495537876789359, NULL))) ELSE CASE NULL  WHEN '' THEN -7.22233991E8 ELSE x'' END END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.27295672641924484 AS TEXT))&(('\q' IN (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((+ ('Pi')))OR((((0x4ba002ca)) NOT BETWEEN (('')) AND ((0.6795596232110992))))))AND(0.016367964423665282 COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-151640046 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-420186570 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('zTT]L1a')%(829812817))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1204898816 sz=18680005 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-154179572 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))IS NOT(CAST(-2.53167568E8 AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (0.8068974951579823 COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-333638592'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOTNULL)) IS TRUE); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((0.09032254011325092) NOT BETWEEN (0.7477693837086564) AND ('nW')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE WHEN NULL THEN NULL ELSE -1673578797 END  WHEN x'' COLLATE RTRIM THEN ((((2.19273874E8)OR(0.43144364831970394)))AND(x'')) ELSE ((('', NULL, 'COW'))<((x'6fe0', '-227362439', x'87da'))) END; -- 3ms;
DELETE FROM sqlite_stat1 WHERE (((('-1371887564') NOT BETWEEN (NULL) AND (NULL)))<((('') NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 1982117420 1535386269'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=445935189'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN UNICODE(x'') THEN ((NULL)%(NULL)) WHEN json_valid(0.5251026698053013) THEN x'' WHEN '1820471693' COLLATE RTRIM THEN (('1339976945') NOT NULL) ELSE UNLIKELY('-1652176429') END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((('y')AND(491620597)))AND(0.36212075018894285)))AND(-889476308)))AND(0.4619393065632136)))AND(0.07297572143935482)))AND('-1393524906')) IN ((- ('-722233991')), ((('Td', NULL, 0.7060892675512223))!=((-2.03962961E8, '1535386269', '0.011344413173963619'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1649231923'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.7317912024931926  WHEN 1.268777674E9 THEN '216978627' WHEN '0.8778690689478273' THEN 8.59407718E8 WHEN NULL THEN x'' ELSE NULL END)+((('') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')<=(x''))))>=(((- (1102651952))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.8955069866127602)>(465104589))))>=((((0.6586730453454008) NOT BETWEEN ('1924838823') AND ('覵1'))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-381098063 sz=298849498 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2118764946 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1050770392 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1711348507 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1.766555354E9)IS NOT(x'2667'))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT ((-2037556022) NOT BETWEEN (x'') AND (0xffffffffdf42bba8))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=1005754670 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')) NOT BETWEEN (((((('1489668639')OR(0.955052011670167)))OR(0.08730731227944366)))) AND ((CASE WHEN '-898597430' THEN -2.026230743E9 END))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 2 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN x'' WHEN 0.33234013748968527 THEN '1671901864' WHEN NULL THEN x'' END) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1914251424 sz=1492924793 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')GLOB(x'')))/((('829812817') NOT BETWEEN (NULL) AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1550900636 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-997089410 sz=2121537654'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1812340215'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT '' COLLATE RTRIM); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1353681694 sz=122613695 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((rtreenode(0.34147925992609596, '600033027'))GLOB(CAST('-603891772' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('{恄}') NOT BETWEEN (NULL) AND (0.32747443419949285)))<(((0Xffffffff983ed2aa)==(0.1436576491115772)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-190173707'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE GLOB(((((((((((((0.9517340095487439)AND('1489550136')))OR(NULL)))AND(0x34cdf4e6)))OR(NULL)))AND(x'')))AND('K,tD[|*')), (NOT (0.5788742950587263))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-373662172'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.23677632466000775)AND(0.45461118405507495)))OR(NULL)))>=((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-657325411'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1621803675 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.05339813840449059) BETWEEN ('') AND (NULL))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN NULL ELSE x'cd77' END)+((('-|Nqr￿*') IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1454833772 1438427226 -1 sz=411861747 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (x''))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-1093026237) NOT BETWEEN (0.5595317603818789) AND ('')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1694859284'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (NULL))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=18680005'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=781267252'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1650281530'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=1987280147'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('' AS INTEGER) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.6414977129269038, '', '1268777674')) NOT BETWEEN (('1387058307', -1.995526385E9, 0.5245074456207155)) AND ((x'6853', x'', 0.3769466375024765)))) NOT BETWEEN (((((NULL)AND(x'')))AND(0x66bff47d))) AND (((0.14863133640990034)<=('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(NULL AS INTEGER)  WHEN (((0.8792834554318212)) BETWEEN ((x'1a46')) AND ((x'343f'))) THEN (('7L') NOT BETWEEN (0.20957294321318265) AND (NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=1706607658 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 -515300343 sz=-1368275548'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((('D_h74\r')OR('')))OR('0g1ⷵ'))))=((UPPER(DISTINCT x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((((((NULL)OR(-1e500)))AND(x'')))OR('1080776330')))AND(-1355989504)) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.0014894013013938556)OR(NULL)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE MAX('	F', ((((((((0.0)AND('-854470693')))AND(0.8475364260517764)))OR(NULL)))AND(NULL)), ((x'') NOT BETWEEN (0.604709988419411) AND (NULL)), 0.13112014830818552 COLLATE NOCASE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1304203197 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-732252264 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=500776912 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-81443414 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CASE ''  WHEN '-2123339962' THEN x'' END) BETWEEN ('0.21825839542599357') AND (((x'bb02')-(0.8953048360517015)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-203962961 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 1556603577 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'c911' IN ()) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1841997920 0 sz=-1663606567 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1995526385 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'6f58', x'', x''))<=((x'd1c3', x'', x'7447'))))IS NOT(((',QQp覵Ko1') BETWEEN (x'') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1535386269 sz=321122260 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1516174752 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1353681694 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('0.43088380301704154')&(0.7478094745991617))))>=(((0.07638705969761406 IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '651312334 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('645371979' COLLATE RTRIM IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')<=(NULL)))-((- (0.604460099456216)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((-1523118628))!=((NULL))))<((((-1372319067))<=((x'baf3'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT (((0.1272302789301204, 0X5d4f9027, 'E8')) BETWEEN (('Z\r', 0.730293742040152, NULL)) AND (('-1440142710', '-41777508', x''))), ((x'') NOTNULL), x'', ((('-1669936859', NULL, '2')) NOT BETWEEN ((0.9672892170601255, '-279081053', NULL)) AND ((x'3aa0', NULL, '779564721')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-924103021'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=955470609'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-123236394 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=179931636 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-823869021 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN 0.4852186751821107 THEN '-1584242578' END)AND(((-1008968354) NOT BETWEEN (x'') AND ('')))))OR(CHANGES())); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1009496450 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-2072560318 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1446171349 1375491001 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '	獦!1p'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1208474692'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((0x5842dcea, 0.3769466375024765, NULL))>((4.27117522E8, '%Zu8%', NULL))))OR(((NULL) BETWEEN (x'') AND (638626854)))))AND(((((x'')OR(1871539827)))OR(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=446233659 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1617482374 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')OR(0xfffffffff249d76c))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (NULL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
REINDEX  rt0; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-846351999 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-735711965 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) NOTNULL) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=256051657 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL COLLATE BINARY))>=((x'' COLLATE NOCASE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((CAST('' AS BLOB)))<>(((31935889 IN (0.9599016303502869, NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT (('^T6bkGp') NOT NULL), 0.10494698385429746); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '-1570476489 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 sz=-405117763 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=17358170 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=700684727'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.6218645199130903) NOTNULL) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2121537654 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '638626854 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1630304829 0 sz=1626973473 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1256324154 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (-1.7976931348623157E308) AND (0.8446797093190886))) NOT BETWEEN ((('1587964255') BETWEEN (NULL) AND (x''))) AND (((x'') IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-1766555354'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('ov') BETWEEN (0.43231607472119093) AND (0.7845478211651853)) THEN x'' END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((('0.3769466375024765')) BETWEEN ((x'')) AND (('0.7746001195016776')))  WHEN (- ('omRH')) THEN NULL COLLATE NOCASE END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1102651952 sz=-373662172'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('J>⍀f*冾OY' IN ()))AND(x'')))OR((((0.03834748048234016))==((x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.23406595085366955 AS TEXT) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 225598318 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2108068150 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1435351497') NOT BETWEEN (((0.05156607819220094)AND('2048932920'))) AND ((('1535386269') BETWEEN ('') AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM('z>5Oo	'))OR((((0.789694632035744))<(('( t8o	.b5'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' COLLATE NOCASE AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 -1530115782 sz=909285782'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-647553978 -782547960 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS REAL)) NOT BETWEEN (CAST(NULL AS NUMERIC)) AND ((('(S') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_patch(((2.15811784E8) BETWEEN (x'') AND (NULL)), 0X68f620a1); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1404893911 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-1023423205 1028644445 sz=1485602619 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1292035574 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.14358817172912008') NOT NULL)) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1118488234 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((1313838808)OR('1383658852')))OR(x'')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 980426185 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2098353793 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1043890184 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL COLLATE BINARY THEN (NULL IN ()) WHEN CAST(0.09477334208867749 AS NUMERIC) THEN NULL WHEN (~ ('/g')) THEN ((NULL) BETWEEN (1.268777674E9) AND ('-732252264')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-374990033'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1795453262 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((0X4ba002ca)&(0.876491933517681)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '-1013386425 -279081053 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=151453879'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=337436523 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL))>=((-274007099))) IN (CAST(x'1721' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (- (NULL))  WHEN x'' COLLATE BINARY THEN (('0.039493778006612246')<(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(((x'')IS NOT(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 noskipscan'); -- 3ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0x1fc3c948)OR('762757996')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(CAST(NULL AS REAL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)AND('''')))OR(314271622)))AND('rb^W')))OR('-707952178'))) BETWEEN (CAST(NULL AS BLOB)) AND ((NOT (0.4767296692833407)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 -279081053 sz=532924744'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1947893303 sz=427117522 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-543981596 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1626973473 2 sz=2121537654'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('[2mw' IN ()) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'5a85'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=1626606525 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0x38cc1cf8) ISNULL) COLLATE NOCASE COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1276734017 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-373662172 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-722233991 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1802099505 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '747016263 -1376526947 sz=532924744 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=238261442'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1791766564 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(((((-869781473)OR(NULL)))AND(0.12722810003269225))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.9645396621844841) NOT NULL)  WHEN '㭢M' THEN json_array(x'', '540945597') WHEN ((NULL) NOT BETWEEN ('') AND (0xffffffffa34e61e9)) THEN (NOT ('-543981596')) WHEN (x'' IN ()) THEN ((NULL) NOTNULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)<<((~ (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 821936148 sz=-2130945432 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1658329162 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1233408348'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)AND('667635528')))AND(NULL)) IN (((x'8390') IS TRUE), (('') IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1609938584 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2026230743 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1939440622 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-729107977 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1500786651 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(x'' AS REAL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1907624789'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=256051657 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '1230238813 -1358233295 sz=-246231714 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 2 sz=-277271361'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') NOT NULL) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-1075382335 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '491316708 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS REAL)) NOT BETWEEN ((('S')==(0.5782069230837302))) AND (CASE x''  WHEN ']<' THEN '' ELSE x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=745631731 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 sz=1330189204 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.02025028377297)OR(x'794f')))AND(NULL)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=317251343 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1401046568'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '2 -1663909492'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1233408348'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '2 2 sz=134730179 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(627102869 AS REAL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1186993651 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '226747057 sz=1210605872 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1673578797 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1626973473 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1192267574 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE NOCASE) NOT BETWEEN (CASE WHEN x'1098' THEN '' ELSE NULL END) AND ('0.8068974951579823' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-707952178 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')OR(0.3837747643228667)))AND('-1'))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1470147919 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1.51892387E9 IN ())) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((NULL)OR('')))AND('-1218053547')))OR(0.4621630920387926)))OR(0.3295626424659931)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('&_' COLLATE BINARY))<((CAST(NULL AS NUMERIC)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2001881068 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=72897422 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-1518923870')AND(0.41328332145063784)))AND('W/gw'))) BETWEEN (DATE('18680005', 'ePUⰩ', 0.02934878604468638)) AND (((NULL)AND('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0Xffffffffdae28675) NOT BETWEEN (0.19323821913706896) AND (x''))))==((LOWER(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1247217241 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=1102651952 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('' COLLATE BINARY) NOT BETWEEN ((NULL IN ())) AND (CASE WHEN x'281586db' THEN x'' ELSE x'f1ca' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1296636771 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL  WHEN '䞷hK-YC|]' THEN NULL END COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(((NULL) NOT BETWEEN (NULL) AND (0.9341551706316698))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1445834296 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1778969002 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-423710686'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('') BETWEEN (0.06410199439217235) AND (-7.22233991E8)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1749174614 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1812630493 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)%(x''))) BETWEEN ((((((((('')OR(x'')))AND('1470147919')))OR('Gu㹬q\rhpX*')))AND(0.2348409880417972))) AND ((NOT (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-12316035'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1037439228 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=885912806 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('铂')&('234360702')))>=((((-1.766555354E9))<((-1.673578797E9))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '1600968232 2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.40166133195319176 COLLATE NOCASE)AND(((x'9a9b')+(x'')))))AND('-292444905' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '2 sz=-560559691 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-220095846'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1995526385')>=(0.07994912608990046))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('63014601') NOTNULL))GLOB(((NULL)<<(0.1064111695740867)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=689821412'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=705566457'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=802805669 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '1936354789 0 sz=1699468636 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((NULL)AND('䞷hK-YC|]')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')) BETWEEN (((('-154179572')*('')))) AND (((NOT (-309219222))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1531869548 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xffffffffe9fbe3ce) ISNULL))/(NULLIF(DISTINCT 0.7477693837086564, -7.32252264E8))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((NULL)AND(0.26451619460414655)))OR(x'7ac9a806')))AND(0.7779064757938291)))AND('*还'))))==(((('*c') NOT BETWEEN (NULL) AND (0.4654546020205148))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-889638310 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-253167568 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '123411160 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.8108985655020738 COLLATE RTRIM)GLOB((((x''))<=(('1869032921'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((('298849498')OR(NULL)))OR(0.22064206885816995)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1518923870 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1817715293 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')AND((((NULL))<=((0Xffffffff90e9ff35))))))OR(x'' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-2028346651 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'')|(x'6f36')) THEN ((x'')IS NOT(0.39686074758263)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-1835790522 sz=-419047044 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.5288814424443747) IS FALSE) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-2141737900 sz=-1532249698'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 602519087; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '2052956951 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=885912806 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '351387563 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((NULL IN (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-2020379620'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '-2035560776 1215596238 sz=-2061416425'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2027054245 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1535386269 sz=-1954526022 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT CASE '-582860241'  WHEN 0.2591245831905763 THEN NULL ELSE '-1558166788' END, ((0.5144652613261298) BETWEEN ('靼Wi~i ') AND ('')), ((0.09477334208867749)>=(NULL)), (NULL IN ())); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1268777674 -1287939190 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT ((NULL)GLOB('''ퟗ')), ((x'') BETWEEN (x'8ea7') AND (0.9027610310667611))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)) BETWEEN ((0.9423328970641874)) AND ((NULL))) IN ((NOT (1.742853596E9)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-670115214 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.6901876378343855 COLLATE RTRIM)&(STRFTIME('N{19', x'3e1da0342ad1', '518201740'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-1380598298 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1230238813 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.8191868409535921  WHEN 1924838823 THEN '' WHEN x'5ddc' THEN 1.206642719E9 WHEN 0.2582197166847283 THEN 'H' END COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -1043644072'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1876122038 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=18680005 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1921021765 sz=-154179572 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-889476308'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((((NULL)AND(0.7019626871568011)))OR('-2026230743')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-122143481 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1001511604 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_object((('123411160') IS FALSE), NULL COLLATE BINARY); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (-846386429 IN ()) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('') NOT BETWEEN (NULL) AND (0.7249562504948532)) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((6.89821412E8, '9', '1587964255')) NOT BETWEEN ((1.54520751E8, x'b2c5', -707952178)) AND (('TRUE', 1.742853596E9, '-190173707')))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1045774238 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=74327183 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)>=(1871539827)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-722233991 sz=-1860456403 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-1768744992 sz=-1380133561 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4 377158363 sz=-1219416279'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1268777674 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1853405327 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((STRFTIME(1105721887, x'2bdb250b', 'J^iM᧥')))=(((('2121537654') IS FALSE)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('<'))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-722233991'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1193026814 sz=1268777674 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '1e500000' COLLATE RTRIM THEN (('-1160709880')AND(0xfffffffffd750e58)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=759455817 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CHANGES())<<(NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0xfffffffff8a8b9f1))>=((((x'') BETWEEN (NULL) AND ('헜|,'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 -1766034691 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-240888065 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-10664836 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((0.8564720173487362)AND(0.9060302584952081)))AND('m\r3K*.P.')), ((NULL)AND(1189494149)), ((0xffffffffae3aa834)>(x''))))==((CAST(1e500 AS INTEGER), CASE WHEN x'' THEN NULL END, ((x'b110')|(NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=123411160'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1358888462 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '169793001'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('18680005')IS NOT(NULL))  WHEN (('8Wuans)\r~')+('-1711137176')) THEN ((((NULL)OR('-681798082')))AND(0x32144dbb)) ELSE TYPEOF(x'') END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ('991905953' IN ())  WHEN ABS('') THEN CAST(1401710955 AS NUMERIC) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'5f19')IS(NULL))))>=((NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-57350238 IN (NULL, 0X12bb6786))) BETWEEN ('-1398353415') AND (((NULL)AND(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN '>' THEN NULL WHEN x'a2d3ff33' THEN 0Xfffffffff64ab9d3 WHEN x'6bd0' THEN '-314541579' ELSE '' END) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1590210709 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-22314025 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('-517402121')%(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-213121135 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-278548755'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2056435298 sz=-735711965'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1871539827 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('[' IN (NULL, 0.3254279330110301))) IS FALSE); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1481325299 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 sz=1113684573 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '223679979 sz=19518533'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(CAST(NULL AS INTEGER), 0.25491833802829666); -- 0ms;
DELETE FROM sqlite_stat1 WHERE INSTR(((0.09032254011325092)>=(NULL)), ((0.36441040993359664)IS NOT('-707952178'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1149878968 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 -1766555354 sz=266276560 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-722233991') NOTNULL)) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.10878521116094741)) BETWEEN (((((('鏇cy븽')AND(0xffffffffbe1a27ff)))AND(0.5067920350507835)))) AND ((((((x'53ae')AND(0.23406595085366955)))OR(0.7819504075766848))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-1995526385 0 sz=2047834972'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1531010520 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1391270960 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((((NULL)OR(0x7256e9ae)))OR('㰻g9k')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-567845267 sz=7819847 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 sz=1391971885 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-692124502 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1470147919, '-1059402026', 0.21178730366897736))>((x'74ae', NULL, 'xKW!XyuZ'))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1.711137176E9) BETWEEN (0.3294382164383023) AND (0.9636667649832846))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(x'' AS TEXT)  WHEN ((x'') IS TRUE) THEN ((1105581220)||(-1.853405327E9)) WHEN ((0.6149148945329085) NOT BETWEEN ('256051657') AND (0X2acbdaac)) THEN ((x'')<(x'')) WHEN ((0.12989017503103617) NOT BETWEEN (x'') AND (x'')) THEN ((0.8408906013658978)<=('鰂%dG')) WHEN TRIM(0.9704517514787491) THEN (('')<=(0.0016120373222833217)) WHEN ((70427630)GLOB('')) THEN '-694846402' COLLATE BINARY ELSE ((x'941f') NOT NULL) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)|(NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((((NULL)AND(0.4233955002441431)))OR(0xfffffffff23518fc)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=790627479 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1435500960'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '473817390 sz=1924838823 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('' AS TEXT)) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NOT (x'')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-214932709 -1766555354 sz=1403964629'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1353681694 -286977166 sz=530170081'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-2087419109'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'e159fdc9')+('77151154'))) NOT BETWEEN (((((((((((((0.9923344533310716)OR(x'0489')))OR(x'2490949e')))AND(-6.2176047E8)))AND(x'')))OR(x'314a')))AND('0.1392965153514656'))) AND (((NULL)AND(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'21df' AS TEXT) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('693219860')*(NULL))))!=((CAST(x'' AS NUMERIC)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'8b04' THEN 1688854147 WHEN 0.8941721987436954 THEN x'2c32' WHEN '2114002839' THEN 0.47221460926988346 END COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1548194759'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '-1233408348 0 sz=69121623 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)=(NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1747815115 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (314271622 IN ()) THEN 0.7301898080342514 COLLATE BINARY ELSE CAST(NULL AS TEXT) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) BETWEEN (((x'') NOT BETWEEN (NULL) AND (''))) AND (CASE WHEN NULL THEN x'' WHEN '-1525611970' THEN -1.309685124E9 WHEN NULL THEN 0xffffffffa954e7d4 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-2142957739 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-682543455 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'765c0d41' AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL) BETWEEN (x'a01f519a2e0f') AND ('0.814812721752356')))OR(((0.4858222683030735)>>(0.19252774029336406)))))AND(CAST('-722233991' AS BLOB))))AND((('{')GLOB('0.9704517514787491')))))AND(((0.49101152190644914)<('\r*/5')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=251461266 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKE((((('1535386269')AND(x'b130cde0')))OR('m.^[(')), (((''))>=((x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (''))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 sz=187634207 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=63014601 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-253167568 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_remove(0.35875458100161206 COLLATE RTRIM, (((0.08858311941201935))!=(('0PU5'))), TYPEOF(x''), (('')=(NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((x'818a' IN ()) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 -241821136 1325471309 sz=-309055975 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (0x4953f45d)))+(('' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-2069511205 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=365863583 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1041763948 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=123411160 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-59619686 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=427117522 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=243635736 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '470971056'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=590071693 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=979908610 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-541813559 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1248931914'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.25750556314495154; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((NOT (0.24084430723520123)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT CASE 0.5171806297598496  WHEN '365538374' THEN '-1995526385' WHEN x'd776' THEN '-J' WHEN 'l\n>[' THEN NULL ELSE 'g69+X' END); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'034a', NULL, NULL, '', 0.08491337616177408, '-1995526385', 0.5217648368864645)) NOT BETWEEN (((']l' IN (859407718)), (('ꏤC+') IS FALSE), ((0.4319912661635956)==('1Inq*7vA')), CASE NULL  WHEN x'' THEN NULL END, (('-732252264')<('0.28288986784932024')), CAST('' AS BLOB), CAST('N>' AS INTEGER))) AND ((CAST('-1770388174' AS TEXT), (0.11086440086933014 IN ()), ((NULL) ISNULL), ((x'') IS TRUE), 0.6246450122985397, (~ (0.5595759452291627)), (0.14113556829439255 IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '885912806 sz=298849498 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-373662172' AS REAL)) BETWEEN ((('532924744') IS FALSE)) AND (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2121537654 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1917087379')) NOT BETWEEN (('>')) AND ((0.6910167165288865))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'a55a')-(0.7284667601653934))) NOT BETWEEN ((((x'e6cd')) NOT BETWEEN ((-900300031)) AND ((NULL)))) AND ('/' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 -722233991 sz=-479891096'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=776165796 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN (('z')) AND ((CAST(x'' AS NUMERIC)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (SUBSTR('1871539827', 1847110631) IN (((NULL)GLOB(0xffffffff870c82eb)))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('a8')LIKE('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1327708853 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE INSTR((('1102651952')%('hMX')), ((0.6923976661130052) NOT BETWEEN (NULL) AND ('-2011107442'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('1268777674') NOT BETWEEN (0.9935901573606134) AND ('')) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.6328523365622902 AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1515956541 sz=792990013 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('-274259136', x'', x'be15'))<((0X6a300ba, 0.15250566972391388, '3\nY<䥎'))) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT LIKELY(0xffffffffe49a9ee6)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 sz=1843318667'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((('j9 VvBz|,' IN ()))OR(load_extension(x''))))OR(((0.8199831865388632)IS(0X28483379)))))AND((('179931636')AND('2(')))))OR(0Xfffffffffb166804 COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-1518923870'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=-517367861 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (x'' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-1673578797 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '-274259136 sz=-1868614976 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-42660264'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=886052388 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)IS('')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CASE NULL  WHEN 0.7265686653775815 THEN x'7785' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 122613695 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('-1099103657' AS BLOB) COLLATE NOCASE; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')!=(0Xffffffffbc153132))) NOT BETWEEN (CAST(NULL AS TEXT)) AND (((0.7766650642493733) BETWEEN (1.535386269E9) AND (-443860737)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.2660286271320519)<=('-1518923870'))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1268777674 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '-537509036 4 sz=-576865948 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1717571399 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1723875128 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '1057852794 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1722927382'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-41777508', NULL, '')) BETWEEN ((((x'')%(']')), ((0.6095344273434015) NOT NULL), (((('')OR(x'')))AND('0.45454140634065976')))) AND ((COALESCE(DISTINCT x'11e5', x'3071', NULL, NULL), (((0x6f0735da)) BETWEEN ((NULL)) AND ((''))), x'6eeb' COLLATE NOCASE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1484113664 -1848950365 sz=1268777674 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1596459551 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1540981609 1102651952 sz=1924791178 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=134730179 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT (((NULL)) NOT BETWEEN (('1832191779')) AND (('0.4616283943408428'))), 'j7a' COLLATE BINARY); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1040519831 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'a13e' IN ()))OR((- (-5.60559691E8)))))AND('{LfR{孮6띘g')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST('-2072560318' AS TEXT))AND(((0.72172430537345)IS('ꬬr')))))AND((- ('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1587964255 sz=-1093371615 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1869596236 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '-1876122038 sz=-1 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 2 sz=1548194759 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT (('-1056342860') NOT BETWEEN (x'') AND (x'')), (('467276655')&(x'25cf4e55'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '2 sz=-788530377 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 2 sz=-104996494'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))+(CAST(x'' AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1876867731 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((0.4979024362349873)OR('0.40166133195319176')))OR(']nnow[,陂')))OR(NULL)))OR(NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-2134905180 sz=-1812892359 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1649346972 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=154520751 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-1293986280'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-777133104 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=154520751'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1430117931 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-910735488 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1608090657'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN x'' THEN '-41777508' WHEN '0.0' THEN '0.2598014868002464' WHEN '532924744' THEN 0x67b00ee END)IS NOT((('1924838823')<(x'6f1fb803')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '2 sz=-870683309 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-373662172'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1165217695 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '606776673 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-133325679 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LTRIM(((((x'')OR(0Xffffffff83d4475a)))AND(-1259211554)), ((1.065759461E9)IS(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1924838823 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 2 sz=-2008505092 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1527341953'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-2134905180'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=123411160 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('D捓pYaW' COLLATE BINARY IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'24ca')*(NULL)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(((0.5298965805065772)LIKE(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1713270088 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((CASE WHEN 'ilDV' THEN NULL END)) AND (((('') ISNULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN LENGTH(0.45454140634065976) THEN CASE NULL  WHEN '' THEN x'' WHEN x'' THEN NULL WHEN '' THEN NULL END WHEN (((0.9298420024563275)) BETWEEN ((0.23255030807903498)) AND (('0.9549654452840263'))) THEN (('1003012373') NOT NULL) WHEN ((('}S'))<=(('?N'))) THEN ((0.24518282583329554) BETWEEN ('') AND (1771624768)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=225598318 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL COLLATE NOCASE IN (((x'')&(NULL)), ((NULL)GLOB(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '-1531341941 1065759461 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=2121537654 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-146791582 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-196754927 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1812892359 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1407875118'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('') NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '-1766555354 sz=1084424380 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-749167669 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1075925017 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.041114537096867076)*((((('0.7972128908072913')OR(x'')))AND('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1516954780'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(x'f321' AS TEXT)  WHEN NULL THEN ((',U7f\n0+')>>(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=70648781 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-2028046067 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-732252264 2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=885912806 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1360156307 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ROUND((- (NULL)), CAST(0.5595317603818789 AS INTEGER)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 1268777674 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=748753391 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '-31423021 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UNLIKELY(0x2625cd24))>(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=2010878171 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('1e500') BETWEEN (NULL) AND (NULL)) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=1383658852 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '298849498 0 sz=-190173707 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CASE NULL  WHEN '~X' THEN 2.6627656E8 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2113894575 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(0.8936351749203242 AS TEXT) IN (((NULL) BETWEEN (x'940f') AND (0xffffffffd332abbc)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-665288529 sz=-1049335446 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '-805410897 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=19518533 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((494673819, x'b304', '&.ᓚ', x'', NULL)) BETWEEN ((CAST(179931636 AS BLOB), (NOT ('-716278154')), ((0x5429b9b7) NOT BETWEEN ('Z\r') AND (NULL)), CASE WHEN NULL THEN '0.7567511143477915' WHEN NULL THEN x'8b744d73' WHEN '' THEN 0.1262061266372947 ELSE '314271622' END, '')) AND (((('-543981596') NOTNULL), ((0x6b6eb592)<(0.5228894736258429)), (('2121537654') BETWEEN (NULL) AND ('Ve')), (('')%(0x225b94f8)), NULL COLLATE BINARY))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1724801141'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '509528623 sz=-156870072'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)<>(NULL))) NOT BETWEEN ('-1271024265' COLLATE RTRIM) AND (((((0.1769050503258779)OR(NULL)))AND(0X6e39a241)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1819284227'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (0Xffffffffa5770fa2 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=909334385 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((NULL, 0.6540041470290772, 0.16116450270567673))>((0X66498651, NULL, '1325471309'))))OR((('') NOT BETWEEN (0xffffffffb26fad9a) AND ('1193891162')))))AND((('-763385330') NOT BETWEEN ('*yPA!)') AND (0.6205841005659807)))))AND((('-1531341941')==(x'')))))OR(((0.8955069866127602) IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=763037497 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')=(x'ef899884'))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((- (0Xfffffffff3d7c5af)))AND((((x'')) NOT BETWEEN ((x'')) AND ((NULL))))))OR(((0.44829344416998995) BETWEEN ('G)XPMK0Q7') AND ('-2138184469')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '505321940 164672248 sz=1087614809'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 sz=-648805670 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((0.8245936771398092))!=((x''))))OR(((NULL) ISNULL))))OR((((('8h')AND('-1995526385')))OR(0.9399037341285484)))))AND(CASE NULL  WHEN -847742944 THEN NULL END)))AND('576728542')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1079287161 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(ABS(NULL), (((x'')) BETWEEN ((687715840)) AND ((x''))), ((0.9142609885558041)<>(x'')), ((0x1092abae) BETWEEN ('tD~	&u') AND (NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-267677689'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '885912806 sz=699257218'); -- 4ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=627630521'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '829812817 sz=866192552 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'3769' COLLATE RTRIM)LIKE((x'638c' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-528636897 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (NULL)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('2028810735') NOT BETWEEN ('-1590273155') AND ('#_!O5Z2U2')))AND('铂' COLLATE RTRIM)))OR((NOT (0.6580665563857047)))))OR(((0x5b84229d) IS FALSE))))OR((((x'', x'', '179931636')) NOT BETWEEN ((0.2314204118907638, '-1819284227', '-1263411082')) AND ((NULL, NULL, '5ଙ	Aw)'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 0 sz=2085015789 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=275610012 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1965191402 0 sz=794703221 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1206642719 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 1394628230 sz=1862191176 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('', x'', 0.9027932349288522, 0.16984239741324791, x'')) NOT BETWEEN ((((0.21972678848723215)&(NULL)), (((('0.24652332528509135')AND('0.1769050503258779')))AND(NULL)), ((0.41674234876630967)*(0.4979872147365133)), (('-1701388344')&(0xffffffffaeff2fee)), 0.10945158038330993)) AND ((((NULL)LIKE(NULL)), CAST('肁3' AS TEXT), 0.09949480516050557, (x'' IN ('', x'')), ((((0X11d014da)AND(-6.2176047E8)))AND(1.193891162E9))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM((('0.5595317603818789')&(5.32924744E8)), ((((x'')AND('0.4619393065632136')))AND(505253356))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-819459446 unordered noskipscan'); -- 7ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((- (NULL))))<((488861467 COLLATE BINARY))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)<=(NULL))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)>=(((0.4371177510181631) BETWEEN ('-1970931872') AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-777221765'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CAST(0.047541097797810905 AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 sz=747016263 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '573113624 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1742853596 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2023742382 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1325471309 -1019370676 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array_length(-1412795753 COLLATE BINARY, (('42527638') NOTNULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=944827063 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (x''))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('(楟綰n') NOT BETWEEN ('-1770144948') AND ('-279081053')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-1328972050 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1683376043 4 sz=-154179572 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)*('(J{3uk}H')))<>(((1116938804) ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL) NOT BETWEEN ('-2026230743') AND (NULL))  WHEN CASE -0.0  WHEN x'315e' THEN NULL END THEN ((((1.760960673E9)OR(1.065759461E9)))AND(1913016119)) WHEN ('' IN ()) THEN TRIM(DISTINCT 'ꧢy', -1469955834) WHEN CAST(NULL AS NUMERIC) THEN (((('')OR('XZu84')))OR(x'')) ELSE ((x'f55ad3db')GLOB(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(UNLIKELY(x'7070ff2f') AS TEXT); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1354001162 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-21578557 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((- (-6.2176047E8)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-1170830302 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1211863941 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN '?4q0' THEN '-1013585740' END THEN CAST('K' AS NUMERIC) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.13872326188125417')AND('179931636'))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-182576891')OR(NULL)))AND(x''))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1813837824', 'Xc#%Cc2Tt', x'')) BETWEEN ((NULL, '', 870922313)) AND ((NULL, x'', 0.7744603509902681))) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOTNULL)) NOT BETWEEN (((0.20716445938083106) BETWEEN (x'') AND (1871539827))) AND ((('')LIKE(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('-1607719247')|(x'beca')) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '2048932920 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('' IN ()))AND(LOWER(DISTINCT '154520751'))))AND('u4' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0.27295672641924484)OR(x'ca0e')))OR(NULL)))AND(CAST(NULL AS BLOB))))OR(CHAR(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '2 -1667229569 sz=-564681714 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ('hqc>57K')) COLLATE NOCASE COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1383658852 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '-542728886 -273940880 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(CASE x''  WHEN 0Xffffffffd2e7b52c THEN x'' WHEN '1268777674' THEN 0xffffffff91874771 WHEN 0.06461473405631535 THEN '-44846994' ELSE x'' END, (('2045038365')<=(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '1487863278 1401710955 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('1060512638') ISNULL) THEN json_quote('-1103513187') ELSE CASE NULL  WHEN NULL THEN '-274259136' ELSE NULL END END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((NULL)OR(NULL)))OR('-42660264')))OR(2.38261442E8)))AND(''))))==((((NULL) ISNULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '1873912960 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL))<=((NULL)))))>((((x'') BETWEEN (x'') AND (0.06874636796725242))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (x'b3b1')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- ('780442730')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=284677126 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('{R' AS REAL) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' COLLATE BINARY AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '123411160'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1353681694'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=736152432'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-1371887564'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'6d57')==(0.10246352502127754))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'a7344c44'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=134730179'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.1923505080669885 COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=238261442'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('0.08858311941201935') IS TRUE) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NOT (NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1626973473'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '2 sz=-1579939748'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1492924793')<=(NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.9134759122960229 AS REAL)) NOT BETWEEN (LAST_INSERT_ROWID()) AND (CASE -1.569541863E9  WHEN x'' THEN x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '2 -41777508 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-1828847258'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2128583980 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 134730179 sz=-694781120 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') BETWEEN (-1819284227) AND ('-270090902'))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-2132611827 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_valid(((x'')>>(x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1672781401'))!=((''))) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-1812892359 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=103413617 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '18680005 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) BETWEEN (((-168034854)>>(x''))) AND (((x'')=(-1.569541863E9)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') ISNULL))>=(0.12688509071140008)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'3de9' COLLATE RTRIM THEN (('-427709734') IS FALSE) WHEN ((x'') NOTNULL) THEN CASE x''  WHEN 0.7343770617632711 THEN '\Cz}z' WHEN x'' THEN '1401710955' WHEN 'qSW]pཊ' THEN 1.383658852E9 END WHEN ((x'') BETWEEN (x'') AND (x'')) THEN ((('*'))!=(('FALSE'))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '1945890948 sz=16071082'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=123411160 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array(314271622, '-0.0', NULL, '') COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=35830587'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (''))) BETWEEN ((('-g\rྡྷgV')<(-2106838303))) AND (CAST(0.15683761383265193 AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=859407718 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((x'')AND(NULL)))AND(0.1904465604270037)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-373252943 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1916603161 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7493473926936816)||('-1328478035')))<<(CASE WHEN x'40ff' THEN NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('6d	yau8&')) NOT BETWEEN ((x'')) AND ((x'1057'))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULLIF(x'1817', NULL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=305445695 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('')) BETWEEN (('%ỻg')) AND ((NULL))) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-927109878'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1371249108'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (x'')))/((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1756737934 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((NULL) ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN NULL THEN x'd0f9' WHEN '-32443095' THEN -488840753 WHEN x'' THEN 0.4547883882044981 END IN ()); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'05a8' AS TEXT) COLLATE RTRIM COLLATE NOCASE; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1173879450 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-732252264 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (0X7a203c38); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (-1.233408348E9); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (0Xffffffffefa9cfda); -- 0ms;
PRAGMA cache_size = 462293898402361976; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'', c0=NULL WHERE (((vt0.c0))<((vt0.c0))) COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(x'') WHERE '1325471309' COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(0.8433304763815043, x'') WHERE ((((UNLIKELY(DISTINCT vt0.c0))AND(vt0.c0)))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))); -- 0ms;
REINDEX NOCASE; -- 0ms;
UPDATE OR FAIL rt0 SET (c5)=(x''); -- 0ms;
COMMIT TRANSACTION; -- 12ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (x''); -- 0ms;
PRAGMA legacy_file_format = true; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'' WHERE '1857414974'; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=176689624,14');\n; -- 0ms;
PRAGMA temp.wal_autocheckpoint = 9093036059364862924; -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (x''); -- 0ms;
INSERT OR FAIL INTO rt0(c2, c4, c1, c5) VALUES ('E8', '859407718', x'', x''), (x'', '-1518009716', NULL, x''), (NULL, 'i/Cࢎ5', '-1505444414', NULL); -- 1ms;
INSERT OR ABORT INTO vt0(c0) VALUES (1.54520751E8); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
UPDATE rt0 SET (c2, c2)=(NULL, NULL); -- 3ms;
PRAGMA temp.default_cache_size = -578746764; -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
UPDATE OR IGNORE vt0 SET c0=0.4416879754699574; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.9858093928360914); -- 0ms;
INSERT OR FAIL INTO rt0(c5, c3) VALUES ('1432034964', '-2072560318'); -- 1ms;
UPDATE OR FAIL rt0 SET c2=0X2c27d31b, c0=NULL; -- 4ms;
INSERT OR FAIL INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c5) VALUES (x''); -- 0ms;
UPDATE OR IGNORE rt0 SET c0='cvX髇k\*࿀K'; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (''); -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES ('-889476308'); -- 15ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA threads = 5302089583438362760; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2) VALUES ('-496523821', 0.6218613316407607); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c5, c1) VALUES (x'', 0.050590153214976286); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1) VALUES ('EL', x'd13b'); -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '49519'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (''); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('-373662172'), ('1383658852'), ('154520751'); -- 0ms;
PRAGMA soft_heap_limit; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '61732'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 5ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1775477281 sz=532924744 unordered noskipscan'); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (0.8219260030667366), (x''), (-1.555144215E9); -- 0ms;
INSERT OR IGNORE INTO rt0(c4) VALUES ('1401710955'), (''), (NULL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(1551760647); -- 1ms;
PRAGMA short_column_names = true; -- 0ms;
UPDATE rt0 SET (c5)=(NULL); -- 0ms;
PRAGMA automatic_index; -- 0ms;
INSERT OR ABORT INTO rt0(c0, c2, c5, c3) VALUES (2.38261442E8, '0.896080564048478', 0.010364623008475293, NULL); -- 0ms;
PRAGMA defer_foreign_keys = false; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=x''; -- 1ms;
PRAGMA cell_size_check; -- 0ms;
UPDATE rt0 SET c1=x''; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''); -- 0ms;
INSERT OR FAIL INTO rt0(c0, c4, c2) VALUES (NULL, NULL, NULL), ('-1459202756', 0xffffffff9df18f97, x''), (-2.79081053E8, x'', x''); -- 8ms;
INSERT OR ABORT INTO vt0 VALUES ('-2072560318'), (x'4c63'), ('1193891162'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 15); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '58209'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 172714786); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '28219'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 14ms;
UPDATE OR IGNORE vt0 SET c0='-1876122038'; -- 3ms;
UPDATE OR ROLLBACK rt0 SET (c3)=(NULL); -- 1ms;
INSERT OR FAIL INTO vt0 VALUES ('C^}\'); -- 16ms;
PRAGMA cell_size_check = true; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1) VALUES (''); -- 0ms;
INSERT OR ROLLBACK INTO rt0 VALUES (-437922561, '', NULL, '杇a', x'', NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 unordered noskipscan'); -- 33ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 329215352); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 524837800); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA temp.legacy_file_format = false; -- 0ms;
PRAGMA temp.busy_timeout; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES ('1761411911'); -- 11ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1586509119,12');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-253167568,15');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=2'); -- 1ms;
INSERT OR IGNORE INTO rt0(c0, c4, c1) VALUES (x'', '-1551545655', x'ea94'); -- 0ms;
UPDATE OR IGNORE rt0 SET c3=NULL, c1=x''; -- 0ms;
ANALYZE; -- 1ms;
PRAGMA reverse_unordered_selects; -- 0ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0, c5, c3, c1) VALUES (x'', x'd93a', '-602303832', x'', 1492924793), (x'', '885912806', NULL, NULL, 0.6180501509585707), (NULL, CAST(CASE NULL  WHEN x'e7f9' THEN x'd07e' ELSE x'93c2' END AS INTEGER), x'', -1531569967, NULL); -- 12ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt0.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt0.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt0.c0))) AS NUMERIC));
SELECT ALL * FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS REAL));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c1)))>=((+ (rt0.c5)))) WHERE (CASE CAST(rt0.c3 AS NUMERIC)  WHEN (((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c4))) THEN (rt0.c5 IN ()) ELSE ((vt0.c0)*(rt0.c0)) END) ORDER BY ((((NOT (rt0.c3))))!=(((rt0.c0 IN ())))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c3 AS NUMERIC)  WHEN (((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c4))) THEN (rt0.c5 IN ()) ELSE ((vt0.c0)*(rt0.c0)) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c1)))>=((+ (rt0.c5)))) ORDER BY ((((NOT (rt0.c3))))!=(((rt0.c0 IN ())))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c1)))>=((+ (rt0.c5)))) WHERE (CASE CAST(rt0.c3 AS NUMERIC)  WHEN (((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c4))) THEN (rt0.c5 IN ()) ELSE ((vt0.c0)*(rt0.c0)) END) ORDER BY ((((NOT (rt0.c3))))!=(((rt0.c0 IN ())))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c3 AS NUMERIC)  WHEN (((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c4))) THEN (rt0.c5 IN ()) ELSE ((vt0.c0)*(rt0.c0)) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c1)))>=((+ (rt0.c5)))) ORDER BY ((((NOT (rt0.c3))))!=(((rt0.c0 IN ())))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c1)))>=((+ (rt0.c5)))) WHERE (CASE CAST(rt0.c3 AS NUMERIC)  WHEN (((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c4))) THEN (rt0.c5 IN ()) ELSE ((vt0.c0)*(rt0.c0)) END) ORDER BY ((((NOT (rt0.c3))))!=(((rt0.c0 IN ())))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((2.38261442E8 IN ()));
SELECT SUM(count) FROM (SELECT (((2.38261442E8 IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((2.38261442E8 IN ()));
SELECT SUM(count) FROM (SELECT (((2.38261442E8 IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((2.38261442E8 IN ()));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1)LIKE(rt0.c4)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)LIKE(rt0.c4)) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1)LIKE(rt0.c4)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)LIKE(rt0.c4)) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1)LIKE(rt0.c4)) IN ()));
SELECT * FROM vt0 CROSS JOIN rt0 ON CASE CAST(rt0.c0 AS REAL)  WHEN ((rt0.c5) NOT NULL) THEN ((rt0.c4)LIKE(rt0.c5)) WHEN CASE WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c4 THEN vt0.c0 END THEN (((rt0.c3, rt0.c3, '0.42628610013236756'))==((rt0.c4, rt0.c2, 1.8680005E7))) WHEN ((rt0.c5)==(rt0.c4)) THEN rt0.c1 COLLATE BINARY ELSE ((vt0.c0) NOT BETWEEN (rt0.c5) AND (vt0.c0)) END WHERE (((((((rt0.c0)OR(rt0.c3)))OR('Pi*]4/a')))<<(rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(rt0.c3)))OR('Pi*]4/a')))<<(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON CASE CAST(rt0.c0 AS REAL)  WHEN ((rt0.c5) NOT NULL) THEN ((rt0.c4)LIKE(rt0.c5)) WHEN CASE WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c4 THEN vt0.c0 END THEN (((rt0.c3, rt0.c3, '0.42628610013236756'))=((rt0.c4, rt0.c2, 1.8680005E7))) WHEN ((rt0.c5)=(rt0.c4)) THEN rt0.c1 COLLATE BINARY ELSE ((vt0.c0) NOT BETWEEN (rt0.c5) AND (vt0.c0)) END);
SELECT * FROM vt0 CROSS JOIN rt0 ON CASE CAST(rt0.c0 AS REAL)  WHEN ((rt0.c5) NOT NULL) THEN ((rt0.c4)LIKE(rt0.c5)) WHEN CASE WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c4 THEN vt0.c0 END THEN (((rt0.c3, rt0.c3, '0.42628610013236756'))==((rt0.c4, rt0.c2, 1.8680005E7))) WHEN ((rt0.c5)==(rt0.c4)) THEN rt0.c1 COLLATE BINARY ELSE ((vt0.c0) NOT BETWEEN (rt0.c5) AND (vt0.c0)) END WHERE (((((((rt0.c0)OR(rt0.c3)))OR('Pi*]4/a')))<<(rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(rt0.c3)))OR('Pi*]4/a')))<<(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON CASE CAST(rt0.c0 AS REAL)  WHEN ((rt0.c5) NOT NULL) THEN ((rt0.c4)LIKE(rt0.c5)) WHEN CASE WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c4 THEN vt0.c0 END THEN (((rt0.c3, rt0.c3, '0.42628610013236756'))=((rt0.c4, rt0.c2, 1.8680005E7))) WHEN ((rt0.c5)=(rt0.c4)) THEN rt0.c1 COLLATE BINARY ELSE ((vt0.c0) NOT BETWEEN (rt0.c5) AND (vt0.c0)) END);
SELECT * FROM vt0 CROSS JOIN rt0 ON CASE CAST(rt0.c0 AS REAL)  WHEN ((rt0.c5) NOT NULL) THEN ((rt0.c4)LIKE(rt0.c5)) WHEN CASE WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c4 THEN vt0.c0 END THEN (((rt0.c3, rt0.c3, '0.42628610013236756'))==((rt0.c4, rt0.c2, 1.8680005E7))) WHEN ((rt0.c5)==(rt0.c4)) THEN rt0.c1 COLLATE BINARY ELSE ((vt0.c0) NOT BETWEEN (rt0.c5) AND (vt0.c0)) END WHERE (((((((rt0.c0)OR(rt0.c3)))OR('Pi*]4/a')))<<(rt0.c1 COLLATE RTRIM)));
SELECT * FROM rt0, vt0 WHERE (CAST(rt0.c5 AS BLOB)) ORDER BY (+ ((+ (rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c5 AS BLOB)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (+ ((+ (rt0.c3))))  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (CAST(rt0.c5 AS BLOB)) ORDER BY (+ ((+ (rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c5 AS BLOB)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (+ ((+ (rt0.c3))))  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (CAST(rt0.c5 AS BLOB)) ORDER BY (+ ((+ (rt0.c3))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOTNULL));
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (ROUND(((vt0.c0) ISNULL), rt0.c0)) ORDER BY CAST(((rt0.c2) IS TRUE) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((ROUND(((vt0.c0) ISNULL), rt0.c0)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY CAST(((rt0.c2) IS TRUE) AS INTEGER) ASC);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (ROUND(((vt0.c0) ISNULL), rt0.c0)) ORDER BY CAST(((rt0.c2) IS TRUE) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((ROUND(((vt0.c0) ISNULL), rt0.c0)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY CAST(((rt0.c2) IS TRUE) AS INTEGER) ASC);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (ROUND(((vt0.c0) ISNULL), rt0.c0)) ORDER BY CAST(((rt0.c2) IS TRUE) AS INTEGER) ASC;
SELECT * FROM vt0 WHERE (((vt0.c0 IN ()) IN (vt0.c0 COLLATE RTRIM, (+ (vt0.c0))))) ORDER BY '铂' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN (vt0.c0 COLLATE RTRIM, (+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY '铂' ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c0 IN ()) IN (vt0.c0 COLLATE RTRIM, (+ (vt0.c0))))) ORDER BY '铂' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN (vt0.c0 COLLATE RTRIM, (+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY '铂' ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c0 IN ()) IN (vt0.c0 COLLATE RTRIM, (+ (vt0.c0))))) ORDER BY '铂' ASC  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c2 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c2 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c2 COLLATE BINARY);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) IN ()));
SELECT ALL * FROM vt0 WHERE (LIKELY(DISTINCT vt0.c0 COLLATE BINARY)) ORDER BY '0.9423328970641874', ((vt0.c0)/(((vt0.c0)IS NOT(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT vt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0 ORDER BY '0.9423328970641874', ((vt0.c0)/(((vt0.c0)IS NOT(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (LIKELY(DISTINCT vt0.c0 COLLATE BINARY)) ORDER BY '0.9423328970641874', ((vt0.c0)/(((vt0.c0)IS NOT(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT vt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0 ORDER BY '0.9423328970641874', ((vt0.c0)/(((vt0.c0)IS NOT(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (LIKELY(DISTINCT vt0.c0 COLLATE BINARY)) ORDER BY '0.9423328970641874', ((vt0.c0)/(((vt0.c0)IS NOT(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (vt0.c0)));
SELECT ALL * FROM vt0, rt0 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (SQLITE_VERSION());
SELECT * FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c3)))) BETWEEN (((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c5))) AND (MIN(rt0.c4, rt0.c4)))) ORDER BY (~ ((298849498 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c3)))) BETWEEN (((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c5))) AND (MIN(rt0.c4, rt0.c4)))) IS TRUE)  as count FROM rt0 ORDER BY (~ ((298849498 IN ()))));
SELECT * FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c3)))) BETWEEN (((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c5))) AND (MIN(rt0.c4, rt0.c4)))) ORDER BY (~ ((298849498 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c3)))) BETWEEN (((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c5))) AND (MIN(rt0.c4, rt0.c4)))) IS TRUE)  as count FROM rt0 ORDER BY (~ ((298849498 IN ()))));
SELECT * FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c3)))) BETWEEN (((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c5))) AND (MIN(rt0.c4, rt0.c4)))) ORDER BY (~ ((298849498 IN ())));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON GLOB(rt0.c1 COLLATE BINARY, TRIM(DISTINCT '', rt0.c2)) WHERE (0.6329967382939193);
SELECT SUM(count) FROM (SELECT ALL ((0.6329967382939193) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON GLOB(rt0.c1 COLLATE BINARY, TRIM(DISTINCT '', rt0.c2)));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON GLOB(rt0.c1 COLLATE BINARY, TRIM(DISTINCT '', rt0.c2)) WHERE (0.6329967382939193);
SELECT SUM(count) FROM (SELECT ALL ((0.6329967382939193) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON GLOB(rt0.c1 COLLATE BINARY, TRIM(DISTINCT '', rt0.c2)));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON GLOB(rt0.c1 COLLATE BINARY, TRIM(DISTINCT '', rt0.c2)) WHERE (0.6329967382939193);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (vt0.c0)));
SELECT * FROM rt0 WHERE (((((((((rt0.c1 COLLATE RTRIM)OR(CAST(rt0.c5 AS NUMERIC))))OR(((rt0.c4) NOT BETWEEN (rt0.c5) AND (rt0.c2)))))OR(((rt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c1)))))OR(CASE WHEN rt0.c2 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c1 COLLATE RTRIM)OR(CAST(rt0.c5 AS NUMERIC))))OR(((rt0.c4) NOT BETWEEN (rt0.c5) AND (rt0.c2)))))OR(((rt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c1)))))OR(CASE WHEN rt0.c2 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((((rt0.c1 COLLATE RTRIM)OR(CAST(rt0.c5 AS NUMERIC))))OR(((rt0.c4) NOT BETWEEN (rt0.c5) AND (rt0.c2)))))OR(((rt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c1)))))OR(CASE WHEN rt0.c2 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c1 COLLATE RTRIM)OR(CAST(rt0.c5 AS NUMERIC))))OR(((rt0.c4) NOT BETWEEN (rt0.c5) AND (rt0.c2)))))OR(((rt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c1)))))OR(CASE WHEN rt0.c2 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((((rt0.c1 COLLATE RTRIM)OR(CAST(rt0.c5 AS NUMERIC))))OR(((rt0.c4) NOT BETWEEN (rt0.c5) AND (rt0.c2)))))OR(((rt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c1)))))OR(CASE WHEN rt0.c2 THEN rt0.c2 END)));
SELECT * FROM vt0 WHERE ((((((vt0.c0)*(vt0.c0))))>=((CAST(vt0.c0 AS BLOB))))) ORDER BY vt0.c0 DESC, vt0.c0, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)*(vt0.c0))))>=((CAST(vt0.c0 AS BLOB))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC, vt0.c0, vt0.c0);
SELECT * FROM vt0 WHERE ((((((vt0.c0)*(vt0.c0))))>=((CAST(vt0.c0 AS BLOB))))) ORDER BY vt0.c0 DESC, vt0.c0, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)*(vt0.c0))))>=((CAST(vt0.c0 AS BLOB))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC, vt0.c0, vt0.c0);
SELECT * FROM vt0 WHERE ((((((vt0.c0)*(vt0.c0))))>=((CAST(vt0.c0 AS BLOB))))) ORDER BY vt0.c0 DESC, vt0.c0, vt0.c0;
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (rt0.c5 COLLATE BINARY) ORDER BY 0x2ffc4a6b ASC, '6gbqb鎋9.-', ((((((((((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c3)))OR('-2067638198')))AND(CAST(rt0.c2 AS TEXT))))OR((rt0.c0 IN ()))))AND(CAST(rt0.c0 AS TEXT))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c5 COLLATE BINARY) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY 0X2ffc4a6b ASC, '6gbqb鎋9.-', ((((((((((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c3)))OR('-2067638198')))AND(CAST(rt0.c2 AS TEXT))))OR((rt0.c0 IN ()))))AND(CAST(rt0.c0 AS TEXT))) ASC  NULLS FIRST);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (rt0.c5 COLLATE BINARY) ORDER BY 0x2ffc4a6b ASC, '6gbqb鎋9.-', ((((((((((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c3)))OR('-2067638198')))AND(CAST(rt0.c2 AS TEXT))))OR((rt0.c0 IN ()))))AND(CAST(rt0.c0 AS TEXT))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c5 COLLATE BINARY) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY 0X2ffc4a6b ASC, '6gbqb鎋9.-', ((((((((((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c3)))OR('-2067638198')))AND(CAST(rt0.c2 AS TEXT))))OR((rt0.c0 IN ()))))AND(CAST(rt0.c0 AS TEXT))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((COALESCE(rt0.c4, rt0.c4))>=(CASE rt0.c0  WHEN '-1569541863' THEN rt0.c4 ELSE '0.790398902936027' END))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(rt0.c4, rt0.c4))>=(CASE rt0.c0  WHEN '-1569541863' THEN rt0.c4 ELSE '0.790398902936027' END))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((COALESCE(rt0.c4, rt0.c4))>=(CASE rt0.c0  WHEN '-1569541863' THEN rt0.c4 ELSE '0.790398902936027' END))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(rt0.c4, rt0.c4))>=(CASE rt0.c0  WHEN '-1569541863' THEN rt0.c4 ELSE '0.790398902936027' END))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((COALESCE(rt0.c4, rt0.c4))>=(CASE rt0.c0  WHEN '-1569541863' THEN rt0.c4 ELSE '0.790398902936027' END))) ORDER BY rt0.c0;
SELECT COUNT(*) FROM vt0 WHERE ((+ (vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (vt0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c5) BETWEEN (vt0.c0) AND (rt0.c3)) ELSE CAST(rt0.c3 AS REAL) END) ORDER BY (((rt0.c5)) NOT BETWEEN ((CAST(rt0.c1 AS NUMERIC))) AND (((rt0.c0 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c5) BETWEEN (vt0.c0) AND (rt0.c3)) ELSE CAST(rt0.c3 AS REAL) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c5)) NOT BETWEEN ((CAST(rt0.c1 AS NUMERIC))) AND (((rt0.c0 IN ())))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c5) BETWEEN (vt0.c0) AND (rt0.c3)) ELSE CAST(rt0.c3 AS REAL) END) ORDER BY (((rt0.c5)) NOT BETWEEN ((CAST(rt0.c1 AS NUMERIC))) AND (((rt0.c0 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c5) BETWEEN (vt0.c0) AND (rt0.c3)) ELSE CAST(rt0.c3 AS REAL) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c5)) NOT BETWEEN ((CAST(rt0.c1 AS NUMERIC))) AND (((rt0.c0 IN ())))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c5) BETWEEN (vt0.c0) AND (rt0.c3)) ELSE CAST(rt0.c3 AS REAL) END) ORDER BY (((rt0.c5)) NOT BETWEEN ((CAST(rt0.c1 AS NUMERIC))) AND (((rt0.c0 IN ())))) ASC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((- (vt0.c0))) ORDER BY DATETIME(((rt0.c0)==(rt0.c5)), CAST(rt0.c1 AS TEXT), rt0.c5, rt0.c0, rt0.c2 COLLATE NOCASE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0))) IS TRUE)  as count FROM vt0, rt0 ORDER BY DATETIME(((rt0.c0)==(rt0.c5)), CAST(rt0.c1 AS TEXT), rt0.c5, rt0.c0, rt0.c2 COLLATE NOCASE) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((- (vt0.c0))) ORDER BY DATETIME(((rt0.c0)==(rt0.c5)), CAST(rt0.c1 AS TEXT), rt0.c5, rt0.c0, rt0.c2 COLLATE NOCASE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0))) IS TRUE)  as count FROM vt0, rt0 ORDER BY DATETIME(((rt0.c0)==(rt0.c5)), CAST(rt0.c1 AS TEXT), rt0.c5, rt0.c0, rt0.c2 COLLATE NOCASE) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((- (vt0.c0))) ORDER BY DATETIME(((rt0.c0)==(rt0.c5)), CAST(rt0.c1 AS TEXT), rt0.c5, rt0.c0, rt0.c2 COLLATE NOCASE) DESC;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON CASE rt0.c1 COLLATE BINARY  WHEN (- (rt0.c1)) THEN 'N4' END WHERE ((((((x''))!=((rt0.c3)))) BETWEEN ((rt0.c1 IN (rt0.c3))) AND (CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((((x''))!=((rt0.c3)))) BETWEEN ((rt0.c1 IN (rt0.c3))) AND (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CASE rt0.c1 COLLATE BINARY  WHEN (- (rt0.c1)) THEN 'N4' END);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON CASE rt0.c1 COLLATE BINARY  WHEN (- (rt0.c1)) THEN 'N4' END WHERE ((((((x''))!=((rt0.c3)))) BETWEEN ((rt0.c1 IN (rt0.c3))) AND (CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((((x''))!=((rt0.c3)))) BETWEEN ((rt0.c1 IN (rt0.c3))) AND (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CASE rt0.c1 COLLATE BINARY  WHEN (- (rt0.c1)) THEN 'N4' END);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON CASE rt0.c1 COLLATE BINARY  WHEN (- (rt0.c1)) THEN 'N4' END WHERE ((((((x''))!=((rt0.c3)))) BETWEEN ((rt0.c1 IN (rt0.c3))) AND (CAST(vt0.c0 AS REAL))));
SELECT ALL * FROM rt0 WHERE (IFNULL((rt0.c2 IN (rt0.c2)), NULL)) ORDER BY (((rt0.c0)) BETWEEN (((rt0.c4 IN (rt0.c5)))) AND ((((rt0.c2)!=(rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((rt0.c2 IN (rt0.c2)), NULL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) BETWEEN (((rt0.c4 IN (rt0.c5)))) AND ((((rt0.c2)!=(rt0.c0)))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (IFNULL((rt0.c2 IN (rt0.c2)), NULL)) ORDER BY (((rt0.c0)) BETWEEN (((rt0.c4 IN (rt0.c5)))) AND ((((rt0.c2)!=(rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((rt0.c2 IN (rt0.c2)), NULL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) BETWEEN (((rt0.c4 IN (rt0.c5)))) AND ((((rt0.c2)!=(rt0.c0)))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (IFNULL((rt0.c2 IN (rt0.c2)), NULL)) ORDER BY (((rt0.c0)) BETWEEN (((rt0.c4 IN (rt0.c5)))) AND ((((rt0.c2)!=(rt0.c0)))))  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE (CASE rt0.c5 COLLATE RTRIM  WHEN CAST(rt0.c3 AS INTEGER) THEN CAST(rt0.c2 AS BLOB) WHEN (((rt0.c1))<((1.325471309E9))) THEN rt0.c4 WHEN CASE WHEN rt0.c2 THEN 0Xd725b6e WHEN rt0.c5 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c5 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c1 END THEN CAST(rt0.c2 AS REAL) ELSE UNLIKELY(rt0.c3) END) ORDER BY ((CASE rt0.c5  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c4 END)-(((rt0.c5)/(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c5 COLLATE RTRIM  WHEN CAST(rt0.c3 AS INTEGER) THEN CAST(rt0.c2 AS BLOB) WHEN (((rt0.c1))<((1.325471309E9))) THEN rt0.c4 WHEN CASE WHEN rt0.c2 THEN 0xd725b6e WHEN rt0.c5 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c5 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c1 END THEN CAST(rt0.c2 AS REAL) ELSE UNLIKELY(rt0.c3) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE rt0.c5  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c4 END)-(((rt0.c5)/(vt0.c0)))) DESC);
SELECT * FROM vt0, rt0 WHERE (CASE rt0.c5 COLLATE RTRIM  WHEN CAST(rt0.c3 AS INTEGER) THEN CAST(rt0.c2 AS BLOB) WHEN (((rt0.c1))<((1.325471309E9))) THEN rt0.c4 WHEN CASE WHEN rt0.c2 THEN 0Xd725b6e WHEN rt0.c5 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c5 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c1 END THEN CAST(rt0.c2 AS REAL) ELSE UNLIKELY(rt0.c3) END) ORDER BY ((CASE rt0.c5  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c4 END)-(((rt0.c5)/(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c5 COLLATE RTRIM  WHEN CAST(rt0.c3 AS INTEGER) THEN CAST(rt0.c2 AS BLOB) WHEN (((rt0.c1))<((1.325471309E9))) THEN rt0.c4 WHEN CASE WHEN rt0.c2 THEN 0xd725b6e WHEN rt0.c5 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c5 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c1 END THEN CAST(rt0.c2 AS REAL) ELSE UNLIKELY(rt0.c3) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE rt0.c5  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c4 END)-(((rt0.c5)/(vt0.c0)))) DESC);
SELECT * FROM vt0, rt0 WHERE (CASE rt0.c5 COLLATE RTRIM  WHEN CAST(rt0.c3 AS INTEGER) THEN CAST(rt0.c2 AS BLOB) WHEN (((rt0.c1))<((1.325471309E9))) THEN rt0.c4 WHEN CASE WHEN rt0.c2 THEN 0Xd725b6e WHEN rt0.c5 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c5 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c1 END THEN CAST(rt0.c2 AS REAL) ELSE UNLIKELY(rt0.c3) END) ORDER BY ((CASE rt0.c5  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c4 END)-(((rt0.c5)/(vt0.c0)))) DESC;
SELECT ALL * FROM rt0, vt0 WHERE (((((0.029314261262378127)OR(rt0.c1 COLLATE NOCASE)))OR((vt0.c0 IN (vt0.c0))))) ORDER BY rt0.c5 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.029314261262378127)OR(rt0.c1 COLLATE NOCASE)))OR((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c5 DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (((((0.029314261262378127)OR(rt0.c1 COLLATE NOCASE)))OR((vt0.c0 IN (vt0.c0))))) ORDER BY rt0.c5 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.029314261262378127)OR(rt0.c1 COLLATE NOCASE)))OR((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c5 DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (((((0.029314261262378127)OR(rt0.c1 COLLATE NOCASE)))OR((vt0.c0 IN (vt0.c0))))) ORDER BY rt0.c5 DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c0);
SELECT * FROM vt0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NULL IN ()));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (- (CAST('' AS TEXT))) ASC, (((vt0.c0)) BETWEEN (((vt0.c0 IN (vt0.c0, vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (- (CAST('' AS TEXT))) ASC, (((vt0.c0)) BETWEEN (((vt0.c0 IN (vt0.c0, vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (- (CAST('' AS TEXT))) ASC, (((vt0.c0)) BETWEEN (((vt0.c0 IN (vt0.c0, vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (- (CAST('' AS TEXT))) ASC, (((vt0.c0)) BETWEEN (((vt0.c0 IN (vt0.c0, vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (- (CAST('' AS TEXT))) ASC, (((vt0.c0)) BETWEEN (((vt0.c0 IN (vt0.c0, vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c3) ORDER BY ((((vt0.c0 IN ()), rt0.c4, (NOT (rt0.c2))))>((((rt0.c4) BETWEEN (rt0.c0) AND ('-K')), (((rt0.c2))!=((rt0.c5))), LIKE(rt0.c5, 0.9704517514787491, '1')))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c0 IN ()), rt0.c4, (NOT (rt0.c2))))>((((rt0.c4) BETWEEN (rt0.c0) AND ('-K')), (((rt0.c2))<>((rt0.c5))), LIKE(rt0.c5, 0.9704517514787491, '1')))) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c3) ORDER BY ((((vt0.c0 IN ()), rt0.c4, (NOT (rt0.c2))))>((((rt0.c4) BETWEEN (rt0.c0) AND ('-K')), (((rt0.c2))!=((rt0.c5))), LIKE(rt0.c5, 0.9704517514787491, '1')))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c0 IN ()), rt0.c4, (NOT (rt0.c2))))>((((rt0.c4) BETWEEN (rt0.c0) AND ('-K')), (((rt0.c2))<>((rt0.c5))), LIKE(rt0.c5, 0.9704517514787491, '1')))) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c3) ORDER BY ((((vt0.c0 IN ()), rt0.c4, (NOT (rt0.c2))))>((((rt0.c4) BETWEEN (rt0.c0) AND ('-K')), (((rt0.c2))!=((rt0.c5))), LIKE(rt0.c5, 0.9704517514787491, '1')))) ASC;
SELECT * FROM vt0 WHERE (0.467779662407121);
SELECT SUM(count) FROM (SELECT ((0.467779662407121) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0.467779662407121);
SELECT SUM(count) FROM (SELECT ((0.467779662407121) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0.467779662407121);
SELECT * FROM rt0 CROSS JOIN vt0 ON ((((rt0.c0)&(rt0.c5))) NOT NULL) WHERE (((((((vt0.c0)LIKE(NULL)))AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))OR(CASE WHEN NULL THEN rt0.c3 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)LIKE(NULL)))AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))OR(CASE WHEN NULL THEN rt0.c3 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((rt0.c0)&(rt0.c5))) NOT NULL));
SELECT * FROM rt0 CROSS JOIN vt0 ON ((((rt0.c0)&(rt0.c5))) NOT NULL) WHERE (((((((vt0.c0)LIKE(NULL)))AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))OR(CASE WHEN NULL THEN rt0.c3 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)LIKE(NULL)))AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))OR(CASE WHEN NULL THEN rt0.c3 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((rt0.c0)&(rt0.c5))) NOT NULL));
SELECT * FROM rt0 CROSS JOIN vt0 ON ((((rt0.c0)&(rt0.c5))) NOT NULL) WHERE (((((((vt0.c0)LIKE(NULL)))AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))OR(CASE WHEN NULL THEN rt0.c3 ELSE rt0.c0 END)));
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) NOTNULL)) ORDER BY ((((((rt0.c4) BETWEEN (rt0.c1) AND ('-253167568')))OR(CAST(rt0.c1 AS INTEGER))))OR(((rt0.c3) ISNULL)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS INTEGER)) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c4) BETWEEN (rt0.c1) AND ('-253167568')))OR(CAST(rt0.c1 AS INTEGER))))OR(((rt0.c3) ISNULL))));
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) NOTNULL)) ORDER BY ((((((rt0.c4) BETWEEN (rt0.c1) AND ('-253167568')))OR(CAST(rt0.c1 AS INTEGER))))OR(((rt0.c3) ISNULL)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS INTEGER)) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c4) BETWEEN (rt0.c1) AND ('-253167568')))OR(CAST(rt0.c1 AS INTEGER))))OR(((rt0.c3) ISNULL))));
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) NOTNULL)) ORDER BY ((((((rt0.c4) BETWEEN (rt0.c1) AND ('-253167568')))OR(CAST(rt0.c1 AS INTEGER))))OR(((rt0.c3) ISNULL)));
SELECT * FROM rt0, vt0 WHERE (((CASE rt0.c4  WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c5 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c4  WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c5 END) IS FALSE)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((CASE rt0.c4  WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c5 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c4  WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c5 END) IS FALSE)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((CASE rt0.c4  WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c5 END) IS FALSE));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (TOTAL_CHANGES()) ORDER BY (~ (-1.298731068E9)) DESC;
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM vt0, rt0 ORDER BY (~ (-1.298731068E9)) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (TOTAL_CHANGES()) ORDER BY (~ (-1.298731068E9)) DESC;
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM vt0, rt0 ORDER BY (~ (-1.298731068E9)) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (TOTAL_CHANGES()) ORDER BY (~ (-1.298731068E9)) DESC;
SELECT ALL * FROM vt0, rt0 WHERE ((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END))>=((CAST(rt0.c5 AS REAL)))));
SELECT SUM(count) FROM (SELECT (((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END))>=((CAST(rt0.c5 AS REAL))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END))>=((CAST(rt0.c5 AS REAL)))));
SELECT SUM(count) FROM (SELECT (((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END))>=((CAST(rt0.c5 AS REAL))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END))>=((CAST(rt0.c5 AS REAL)))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))LIKE(((vt0.c0)<>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))LIKE(((vt0.c0)<>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))LIKE(((vt0.c0)<>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))LIKE(((vt0.c0)<>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))LIKE(((vt0.c0)<>(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((((SQLITE_COMPILEOPTION_GET(vt0.c0))OR(CAST(vt0.c0 AS BLOB))))AND(((vt0.c0) NOT NULL)))) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) ISNULL) ELSE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((SQLITE_COMPILEOPTION_GET(vt0.c0))OR(CAST(vt0.c0 AS BLOB))))AND(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) ISNULL) ELSE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((SQLITE_COMPILEOPTION_GET(vt0.c0))OR(CAST(vt0.c0 AS BLOB))))AND(((vt0.c0) NOT NULL)))) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) ISNULL) ELSE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((SQLITE_COMPILEOPTION_GET(vt0.c0))OR(CAST(vt0.c0 AS BLOB))))AND(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) ISNULL) ELSE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((SQLITE_COMPILEOPTION_GET(vt0.c0))OR(CAST(vt0.c0 AS BLOB))))AND(((vt0.c0) NOT NULL)))) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) ISNULL) ELSE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END DESC  NULLS LAST;
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (((NULL) NOTNULL) IN ()) WHERE (JULIANDAY((('}m넽LY')%(rt0.c2)), ((rt0.c3) NOTNULL), ((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c4)))AND(rt0.c5))));
SELECT SUM(count) FROM (SELECT ((JULIANDAY((('}m넽LY')%(rt0.c2)), ((rt0.c3) NOTNULL), ((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c4)))AND(rt0.c5)))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((NULL) NOTNULL) IN ()));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (((NULL) NOTNULL) IN ()) WHERE (JULIANDAY((('}m넽LY')%(rt0.c2)), ((rt0.c3) NOTNULL), ((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c4)))AND(rt0.c5))));
SELECT SUM(count) FROM (SELECT ((JULIANDAY((('}m넽LY')%(rt0.c2)), ((rt0.c3) NOTNULL), ((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c4)))AND(rt0.c5)))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((NULL) NOTNULL) IN ()));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (((NULL) NOTNULL) IN ()) WHERE (JULIANDAY((('}m넽LY')%(rt0.c2)), ((rt0.c3) NOTNULL), ((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c4)))AND(rt0.c5))));
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)|(vt0.c0))  WHEN vt0.c0 THEN ((vt0.c0)<=(vt0.c0)) WHEN ((vt0.c0) NOT NULL) THEN (NULL IN ()) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')) THEN ((vt0.c0)||(vt0.c0)) ELSE (((vt0.c0, x'', vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))) END) ORDER BY CASE WHEN ((vt0.c0) IS FALSE) THEN vt0.c0 COLLATE RTRIM ELSE '179931636' END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)|(vt0.c0))  WHEN vt0.c0 THEN ((vt0.c0)<=(vt0.c0)) WHEN ((vt0.c0) NOT NULL) THEN (NULL IN ()) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')) THEN ((vt0.c0)||(vt0.c0)) ELSE (((vt0.c0, x'', vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))) END) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0) IS FALSE) THEN vt0.c0 COLLATE RTRIM ELSE '179931636' END  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)|(vt0.c0))  WHEN vt0.c0 THEN ((vt0.c0)<=(vt0.c0)) WHEN ((vt0.c0) NOT NULL) THEN (NULL IN ()) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')) THEN ((vt0.c0)||(vt0.c0)) ELSE (((vt0.c0, x'', vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))) END) ORDER BY CASE WHEN ((vt0.c0) IS FALSE) THEN vt0.c0 COLLATE RTRIM ELSE '179931636' END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)|(vt0.c0))  WHEN vt0.c0 THEN ((vt0.c0)<=(vt0.c0)) WHEN ((vt0.c0) NOT NULL) THEN (NULL IN ()) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')) THEN ((vt0.c0)||(vt0.c0)) ELSE (((vt0.c0, x'', vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))) END) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0) IS FALSE) THEN vt0.c0 COLLATE RTRIM ELSE '179931636' END  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)|(vt0.c0))  WHEN vt0.c0 THEN ((vt0.c0)<=(vt0.c0)) WHEN ((vt0.c0) NOT NULL) THEN (NULL IN ()) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')) THEN ((vt0.c0)||(vt0.c0)) ELSE (((vt0.c0, x'', vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))) END) ORDER BY CASE WHEN ((vt0.c0) IS FALSE) THEN vt0.c0 COLLATE RTRIM ELSE '179931636' END  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)OR(0.5595317603818789)))OR(NULL)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)<=('-1146734199'))))) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)OR(0.5595317603818789)))OR(NULL)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)<=('-1146734199'))))) IS TRUE)  as count FROM vt0 ORDER BY NULL DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)OR(0.5595317603818789)))OR(NULL)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)<=('-1146734199'))))) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)OR(0.5595317603818789)))OR(NULL)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)<=('-1146734199'))))) IS TRUE)  as count FROM vt0 ORDER BY NULL DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)OR(0.5595317603818789)))OR(NULL)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)<=('-1146734199'))))) ORDER BY NULL DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(rt0.c5 COLLATE BINARY AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c5 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(rt0.c5 COLLATE BINARY AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c5 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(rt0.c5 COLLATE BINARY AS NUMERIC));
SELECT * FROM rt0, vt0 WHERE (CASE WHEN CAST(rt0.c4 AS BLOB) THEN (NOT (rt0.c4)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c4 AS BLOB) THEN (NOT (rt0.c4)) END) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CASE WHEN CAST(rt0.c4 AS BLOB) THEN (NOT (rt0.c4)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c4 AS BLOB) THEN (NOT (rt0.c4)) END) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CASE WHEN CAST(rt0.c4 AS BLOB) THEN (NOT (rt0.c4)) END);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON 'dNeZT{' WHERE (CASE ((rt0.c2)*(rt0.c5))  WHEN (~ (rt0.c5)) THEN ((rt0.c1)>(rt0.c3)) WHEN rt0.c3 COLLATE BINARY THEN ((((((((((((rt0.c3)OR(NULL)))AND(rt0.c4)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)) WHEN CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c4 THEN vt0.c0 END THEN ((0xffffffffb1efca7c) IS TRUE) ELSE rt0.c4 END) ORDER BY CAST(((rt0.c3) NOT NULL) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2)*(rt0.c5))  WHEN (~ (rt0.c5)) THEN ((rt0.c1)>(rt0.c3)) WHEN rt0.c3 COLLATE BINARY THEN ((((((((((((rt0.c3)OR(NULL)))AND(rt0.c4)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)) WHEN CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c4 THEN vt0.c0 END THEN ((0Xffffffffb1efca7c) IS TRUE) ELSE rt0.c4 END) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON 'dNeZT{' ORDER BY CAST(((rt0.c3) NOT NULL) AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON 'dNeZT{' WHERE (CASE ((rt0.c2)*(rt0.c5))  WHEN (~ (rt0.c5)) THEN ((rt0.c1)>(rt0.c3)) WHEN rt0.c3 COLLATE BINARY THEN ((((((((((((rt0.c3)OR(NULL)))AND(rt0.c4)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)) WHEN CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c4 THEN vt0.c0 END THEN ((0xffffffffb1efca7c) IS TRUE) ELSE rt0.c4 END) ORDER BY CAST(((rt0.c3) NOT NULL) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2)*(rt0.c5))  WHEN (~ (rt0.c5)) THEN ((rt0.c1)>(rt0.c3)) WHEN rt0.c3 COLLATE BINARY THEN ((((((((((((rt0.c3)OR(NULL)))AND(rt0.c4)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)) WHEN CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c4 THEN vt0.c0 END THEN ((0Xffffffffb1efca7c) IS TRUE) ELSE rt0.c4 END) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON 'dNeZT{' ORDER BY CAST(((rt0.c3) NOT NULL) AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON 'dNeZT{' WHERE (CASE ((rt0.c2)*(rt0.c5))  WHEN (~ (rt0.c5)) THEN ((rt0.c1)>(rt0.c3)) WHEN rt0.c3 COLLATE BINARY THEN ((((((((((((rt0.c3)OR(NULL)))AND(rt0.c4)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)) WHEN CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c4 THEN vt0.c0 END THEN ((0xffffffffb1efca7c) IS TRUE) ELSE rt0.c4 END) ORDER BY CAST(((rt0.c3) NOT NULL) AS NUMERIC)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.6811960808457687)))))) ORDER BY vt0.c0  NULLS LAST, (NOT (0.7170161426366463)) ASC  NULLS FIRST, (~ ((((vt0.c0))=((NULL))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.6811960808457687)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST, (NOT (0.7170161426366463)) ASC  NULLS FIRST, (~ ((((vt0.c0))==((NULL))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.6811960808457687)))))) ORDER BY vt0.c0  NULLS LAST, (NOT (0.7170161426366463)) ASC  NULLS FIRST, (~ ((((vt0.c0))=((NULL))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.6811960808457687)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST, (NOT (0.7170161426366463)) ASC  NULLS FIRST, (~ ((((vt0.c0))==((NULL))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.6811960808457687)))))) ORDER BY vt0.c0  NULLS LAST, (NOT (0.7170161426366463)) ASC  NULLS FIRST, (~ ((((vt0.c0))=((NULL))))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD(DISTINCT ((vt0.c0)-(vt0.c0)), 0.10119993620038437)) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT ((vt0.c0)-(vt0.c0)), 0.10119993620038437)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD(DISTINCT ((vt0.c0)-(vt0.c0)), 0.10119993620038437)) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT ((vt0.c0)-(vt0.c0)), 0.10119993620038437)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD(DISTINCT ((vt0.c0)-(vt0.c0)), 0.10119993620038437)) ORDER BY vt0.c0;
SELECT * FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c2)>>('-643585769')) THEN 3.51387563E8 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2)>>('-643585769')) THEN 3.51387563E8 END) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c2)>>('-643585769')) THEN 3.51387563E8 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2)>>('-643585769')) THEN 3.51387563E8 END) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c2)>>('-643585769')) THEN 3.51387563E8 END);
SELECT * FROM vt0 WHERE (LOWER(DISTINCT ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) ORDER BY ((((NOT (vt0.c0)), ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>((((vt0.c0)||(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END))) DESC;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((NOT (vt0.c0)), ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>((((vt0.c0)||(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END))) DESC);
SELECT * FROM vt0 WHERE (LOWER(DISTINCT ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) ORDER BY ((((NOT (vt0.c0)), ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>((((vt0.c0)||(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END))) DESC;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((NOT (vt0.c0)), ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>((((vt0.c0)||(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END))) DESC);
SELECT * FROM vt0 WHERE (LOWER(DISTINCT ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) ORDER BY ((((NOT (vt0.c0)), ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>((((vt0.c0)||(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END))) DESC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((~ (rt0.c1))) NOT BETWEEN (vt0.c0) AND (((rt0.c2) NOT NULL)))) ORDER BY ((((vt0.c0)&(0.6745237204591811))) BETWEEN (CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 END) AND (CAST(rt0.c4 AS REAL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c1))) NOT BETWEEN (vt0.c0) AND (((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c0)&(0.6745237204591811))) BETWEEN (CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 END) AND (CAST(rt0.c4 AS REAL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((~ (rt0.c1))) NOT BETWEEN (vt0.c0) AND (((rt0.c2) NOT NULL)))) ORDER BY ((((vt0.c0)&(0.6745237204591811))) BETWEEN (CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 END) AND (CAST(rt0.c4 AS REAL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c1))) NOT BETWEEN (vt0.c0) AND (((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c0)&(0.6745237204591811))) BETWEEN (CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 END) AND (CAST(rt0.c4 AS REAL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((~ (rt0.c1))) NOT BETWEEN (vt0.c0) AND (((rt0.c2) NOT NULL)))) ORDER BY ((((vt0.c0)&(0.6745237204591811))) BETWEEN (CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 END) AND (CAST(rt0.c4 AS REAL))) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))AND(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC))AND(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))AND(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC))AND(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))AND(vt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c4)AND(rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c4)AND(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c4)AND(rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c4)AND(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c4)AND(rt0.c2)) AS TEXT));
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c5)IS(rt0.c5)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c5)IS(rt0.c5)) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c5)IS(rt0.c5)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c5)IS(rt0.c5)) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c5)IS(rt0.c5)) AS BLOB));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) ISNULL))IS NOT((((rt0.c3, rt0.c0, rt0.c0)) BETWEEN ((rt0.c4, rt0.c3, x'b11a')) AND ((rt0.c3, rt0.c1, rt0.c0)))))) ORDER BY ((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 END)GLOB(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) DESC  NULLS FIRST, CASE ((rt0.c0)*(-978850769))  WHEN CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END THEN ((((x'd08f1d35')AND(rt0.c2)))AND(rt0.c5)) WHEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c5 END THEN LIKELIHOOD(DISTINCT rt0.c2, 0.7910083296436031) WHEN ((rt0.c4) IS TRUE) THEN rt0.c3 END, (((+ (rt0.c0)))IS NOT((((rt0.c2))<=((x'')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) ISNULL))IS NOT((((rt0.c3, rt0.c0, rt0.c0)) BETWEEN ((rt0.c4, rt0.c3, x'b11a')) AND ((rt0.c3, rt0.c1, rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 END)GLOB(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) DESC  NULLS FIRST, CASE ((rt0.c0)*(-978850769))  WHEN CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END THEN ((((x'd08f1d35')AND(rt0.c2)))AND(rt0.c5)) WHEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c5 END THEN LIKELIHOOD(DISTINCT rt0.c2, 0.7910083296436031) WHEN ((rt0.c4) IS TRUE) THEN rt0.c3 END, (((+ (rt0.c0)))IS NOT((((rt0.c2))<=((x'')))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) ISNULL))IS NOT((((rt0.c3, rt0.c0, rt0.c0)) BETWEEN ((rt0.c4, rt0.c3, x'b11a')) AND ((rt0.c3, rt0.c1, rt0.c0)))))) ORDER BY ((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 END)GLOB(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) DESC  NULLS FIRST, CASE ((rt0.c0)*(-978850769))  WHEN CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END THEN ((((x'd08f1d35')AND(rt0.c2)))AND(rt0.c5)) WHEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c5 END THEN LIKELIHOOD(DISTINCT rt0.c2, 0.7910083296436031) WHEN ((rt0.c4) IS TRUE) THEN rt0.c3 END, (((+ (rt0.c0)))IS NOT((((rt0.c2))<=((x'')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) ISNULL))IS NOT((((rt0.c3, rt0.c0, rt0.c0)) BETWEEN ((rt0.c4, rt0.c3, x'b11a')) AND ((rt0.c3, rt0.c1, rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 END)GLOB(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) DESC  NULLS FIRST, CASE ((rt0.c0)*(-978850769))  WHEN CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END THEN ((((x'd08f1d35')AND(rt0.c2)))AND(rt0.c5)) WHEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c5 END THEN LIKELIHOOD(DISTINCT rt0.c2, 0.7910083296436031) WHEN ((rt0.c4) IS TRUE) THEN rt0.c3 END, (((+ (rt0.c0)))IS NOT((((rt0.c2))<=((x'')))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) ISNULL))IS NOT((((rt0.c3, rt0.c0, rt0.c0)) BETWEEN ((rt0.c4, rt0.c3, x'b11a')) AND ((rt0.c3, rt0.c1, rt0.c0)))))) ORDER BY ((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 END)GLOB(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) DESC  NULLS FIRST, CASE ((rt0.c0)*(-978850769))  WHEN CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END THEN ((((x'd08f1d35')AND(rt0.c2)))AND(rt0.c5)) WHEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c5 END THEN LIKELIHOOD(DISTINCT rt0.c2, 0.7910083296436031) WHEN ((rt0.c4) IS TRUE) THEN rt0.c3 END, (((+ (rt0.c0)))IS NOT((((rt0.c2))<=((x'')))))  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE (((rt0.c0 COLLATE BINARY) NOT BETWEEN ((+ (rt0.c0))) AND ((((vt0.c0))<((0.011344413173963619))))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE BINARY) NOT BETWEEN ((+ (rt0.c0))) AND ((((vt0.c0))<((0.011344413173963619)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((rt0.c0 COLLATE BINARY) NOT BETWEEN ((+ (rt0.c0))) AND ((((vt0.c0))<((0.011344413173963619))))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE BINARY) NOT BETWEEN ((+ (rt0.c0))) AND ((((vt0.c0))<((0.011344413173963619)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((rt0.c0 COLLATE BINARY) NOT BETWEEN ((+ (rt0.c0))) AND ((((vt0.c0))<((0.011344413173963619))))));
SELECT ALL * FROM vt0, rt0 WHERE (json_patch(rt0.c5 COLLATE RTRIM, '-1353681694'));
SELECT SUM(count) FROM (SELECT ((json_patch(rt0.c5 COLLATE RTRIM, '-1353681694')) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (json_patch(rt0.c5 COLLATE RTRIM, '-1353681694'));
SELECT SUM(count) FROM (SELECT ((json_patch(rt0.c5 COLLATE RTRIM, '-1353681694')) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE WHEN rt0.c1 THEN rt0.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c1 THEN rt0.c0 END AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE WHEN rt0.c1 THEN rt0.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c1 THEN rt0.c0 END AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE WHEN rt0.c1 THEN rt0.c0 END AS TEXT));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((rt0.c1)>=(rt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)>=(rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((rt0.c1)>=(rt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)>=(rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((rt0.c1)>=(rt0.c0)) AS NUMERIC));
SELECT * FROM rt0 WHERE (TRIM(DISTINCT CASE rt0.c2  WHEN '0.470410868106682' THEN rt0.c2 ELSE rt0.c2 END, ((rt0.c1) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT CASE rt0.c2  WHEN '0.470410868106682' THEN rt0.c2 ELSE rt0.c2 END, ((rt0.c1) IS FALSE))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (TRIM(DISTINCT CASE rt0.c2  WHEN '0.470410868106682' THEN rt0.c2 ELSE rt0.c2 END, ((rt0.c1) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT CASE rt0.c2  WHEN '0.470410868106682' THEN rt0.c2 ELSE rt0.c2 END, ((rt0.c1) IS FALSE))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (TRIM(DISTINCT CASE rt0.c2  WHEN '0.470410868106682' THEN rt0.c2 ELSE rt0.c2 END, ((rt0.c1) IS FALSE)));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((~ (rt0.c3))))!=(((+ (rt0.c2)))))) ORDER BY (NOT (CAST(rt0.c5 AS REAL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((~ (rt0.c3))))<>(((+ (rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT (CAST(rt0.c5 AS REAL))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((~ (rt0.c3))))!=(((+ (rt0.c2)))))) ORDER BY (NOT (CAST(rt0.c5 AS REAL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((~ (rt0.c3))))<>(((+ (rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT (CAST(rt0.c5 AS REAL))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((~ (rt0.c3))))!=(((+ (rt0.c2)))))) ORDER BY (NOT (CAST(rt0.c5 AS REAL))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS NOT(((vt0.c0)+(vt0.c0))))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS NOT(((vt0.c0)+(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS NOT(((vt0.c0)+(vt0.c0))))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS NOT(((vt0.c0)+(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS NOT(((vt0.c0)+(vt0.c0))))) ORDER BY NULL  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((+ (rt0.c3)))=((('1118488234')/(rt0.c2))))) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END) BETWEEN ((((rt0.c5))=((rt0.c0)))) AND (rt0.c3)) ASC;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c3)))==((('1118488234')/(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END) BETWEEN ((((rt0.c5))==((rt0.c0)))) AND (rt0.c3)) ASC);
SELECT ALL * FROM rt0 WHERE ((((+ (rt0.c3)))=((('1118488234')/(rt0.c2))))) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END) BETWEEN ((((rt0.c5))=((rt0.c0)))) AND (rt0.c3)) ASC;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c3)))==((('1118488234')/(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END) BETWEEN ((((rt0.c5))==((rt0.c0)))) AND (rt0.c3)) ASC);
SELECT ALL * FROM rt0 WHERE ((((+ (rt0.c3)))=((('1118488234')/(rt0.c2))))) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END) BETWEEN ((((rt0.c5))=((rt0.c0)))) AND (rt0.c3)) ASC;
SELECT * FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE NOCASE, ((vt0.c0)&(vt0.c0)), (vt0.c0 IN (vt0.c0)), (~ (vt0.c0))))<=((((vt0.c0) IS TRUE), 0.25057957578259804, CAST(vt0.c0 AS NUMERIC), (vt0.c0 IN ()), (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE NOCASE, ((vt0.c0)&(vt0.c0)), (vt0.c0 IN (vt0.c0)), (~ (vt0.c0))))<=((((vt0.c0) IS TRUE), 0.25057957578259804, CAST(vt0.c0 AS NUMERIC), (vt0.c0 IN ()), (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE NOCASE, ((vt0.c0)&(vt0.c0)), (vt0.c0 IN (vt0.c0)), (~ (vt0.c0))))<=((((vt0.c0) IS TRUE), 0.25057957578259804, CAST(vt0.c0 AS NUMERIC), (vt0.c0 IN ()), (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE NOCASE, ((vt0.c0)&(vt0.c0)), (vt0.c0 IN (vt0.c0)), (~ (vt0.c0))))<=((((vt0.c0) IS TRUE), 0.25057957578259804, CAST(vt0.c0 AS NUMERIC), (vt0.c0 IN ()), (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE NOCASE, ((vt0.c0)&(vt0.c0)), (vt0.c0 IN (vt0.c0)), (~ (vt0.c0))))<=((((vt0.c0) IS TRUE), 0.25057957578259804, CAST(vt0.c0 AS NUMERIC), (vt0.c0 IN ()), (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))));
SELECT * FROM rt0, vt0 WHERE (((((rt0.c0)OR(rt0.c3)))OR(rt0.c3)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)OR(rt0.c3)))OR(rt0.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c0)OR(rt0.c3)))OR(rt0.c3)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)OR(rt0.c3)))OR(rt0.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c0)OR(rt0.c3)))OR(rt0.c3)) COLLATE NOCASE);
SELECT * FROM rt0, vt0 WHERE (((rt0.c5 COLLATE NOCASE) BETWEEN (rt0.c5) AND (rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((rt0.c5 COLLATE NOCASE) BETWEEN (rt0.c5) AND (rt0.c2))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((rt0.c5 COLLATE NOCASE) BETWEEN (rt0.c5) AND (rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((rt0.c5 COLLATE NOCASE) BETWEEN (rt0.c5) AND (rt0.c2))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((rt0.c5 COLLATE NOCASE) BETWEEN (rt0.c5) AND (rt0.c2)));
SELECT ALL * FROM rt0 WHERE (CASE WHEN CAST('1065759461' AS INTEGER) THEN CASE WHEN rt0.c3 THEN rt0.c4 END END) ORDER BY ((CASE rt0.c5  WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c2 END) NOT NULL) ASC, '- oU%x' DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST('1065759461' AS INTEGER) THEN CASE WHEN rt0.c3 THEN rt0.c4 END END) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c5  WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c2 END) NOT NULL) ASC, '- oU%x' DESC);
SELECT ALL * FROM rt0 WHERE (CASE WHEN CAST('1065759461' AS INTEGER) THEN CASE WHEN rt0.c3 THEN rt0.c4 END END) ORDER BY ((CASE rt0.c5  WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c2 END) NOT NULL) ASC, '- oU%x' DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST('1065759461' AS INTEGER) THEN CASE WHEN rt0.c3 THEN rt0.c4 END END) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c5  WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c2 END) NOT NULL) ASC, '- oU%x' DESC);
SELECT ALL * FROM rt0 WHERE (CASE WHEN CAST('1065759461' AS INTEGER) THEN CASE WHEN rt0.c3 THEN rt0.c4 END END) ORDER BY ((CASE rt0.c5  WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c2 END) NOT NULL) ASC, '- oU%x' DESC;
SELECT ALL * FROM vt0, rt0 WHERE ((- (NULL))) ORDER BY (((('1492924793')<(rt0.c4)))>>((rt0.c1 IN (rt0.c5)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (NULL))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((('1492924793')<(rt0.c4)))>>((rt0.c1 IN (rt0.c5)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE ((- (NULL))) ORDER BY (((('1492924793')<(rt0.c4)))>>((rt0.c1 IN (rt0.c5)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (NULL))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((('1492924793')<(rt0.c4)))>>((rt0.c1 IN (rt0.c5)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE ((- (NULL))) ORDER BY (((('1492924793')<(rt0.c4)))>>((rt0.c1 IN (rt0.c5)))) DESC  NULLS FIRST;
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (NULL);
SELECT * FROM rt0 WHERE (((((rt0.c1)=(rt0.c0))) BETWEEN ((rt0.c1 IN ())) AND (TRIM(DISTINCT rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)==(rt0.c0))) BETWEEN ((rt0.c1 IN ())) AND (TRIM(DISTINCT rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1)=(rt0.c0))) BETWEEN ((rt0.c1 IN ())) AND (TRIM(DISTINCT rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)==(rt0.c0))) BETWEEN ((rt0.c1 IN ())) AND (TRIM(DISTINCT rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1)=(rt0.c0))) BETWEEN ((rt0.c1 IN ())) AND (TRIM(DISTINCT rt0.c2))));
SELECT COUNT(*) FROM rt0 WHERE ((PRINTF(NULL) IN (CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c5 END))) ORDER BY (- (((rt0.c4)<<(rt0.c4))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((PRINTF(NULL) IN (CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c5 END))) IS TRUE)  as count FROM rt0 ORDER BY (- (((rt0.c4)<<(rt0.c4))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((PRINTF(NULL) IN (CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c5 END))) ORDER BY (- (((rt0.c4)<<(rt0.c4))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((PRINTF(NULL) IN (CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c5 END))) IS TRUE)  as count FROM rt0 ORDER BY (- (((rt0.c4)<<(rt0.c4))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((PRINTF(NULL) IN (CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c5 END))) ORDER BY (- (((rt0.c4)<<(rt0.c4))))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (((NOT (vt0.c0))) NOT BETWEEN (vt0.c0) AND ((- (vt0.c0))))  NULLS LAST, (((('') NOTNULL))>>(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))  NULLS FIRST, (((- (vt0.c0))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0))) NOT BETWEEN (vt0.c0) AND ((- (vt0.c0))))  NULLS LAST, (((('') NOTNULL))>>(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))  NULLS FIRST, (((- (vt0.c0))) ISNULL) ASC);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (((NOT (vt0.c0))) NOT BETWEEN (vt0.c0) AND ((- (vt0.c0))))  NULLS LAST, (((('') NOTNULL))>>(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))  NULLS FIRST, (((- (vt0.c0))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0))) NOT BETWEEN (vt0.c0) AND ((- (vt0.c0))))  NULLS LAST, (((('') NOTNULL))>>(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))  NULLS FIRST, (((- (vt0.c0))) ISNULL) ASC);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (((NOT (vt0.c0))) NOT BETWEEN (vt0.c0) AND ((- (vt0.c0))))  NULLS LAST, (((('') NOTNULL))>>(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))  NULLS FIRST, (((- (vt0.c0))) ISNULL) ASC;
SELECT * FROM vt0 WHERE ((NOT (((((((((0.4616283943408428)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(x'fb1748d5'))))) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((((((((0.4616283943408428)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(x'fb1748d5'))))) IS TRUE)  as count FROM vt0 ORDER BY NULL DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ((NOT (((((((((0.4616283943408428)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(x'fb1748d5'))))) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((((((((0.4616283943408428)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(x'fb1748d5'))))) IS TRUE)  as count FROM vt0 ORDER BY NULL DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ((NOT (((((((((0.4616283943408428)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(x'fb1748d5'))))) ORDER BY NULL DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (RTRIM(((vt0.c0) IS FALSE))) ORDER BY (NOT (vt0.c0)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((RTRIM(((vt0.c0) IS FALSE))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (vt0.c0)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (RTRIM(((vt0.c0) IS FALSE))) ORDER BY (NOT (vt0.c0)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((RTRIM(((vt0.c0) IS FALSE))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (vt0.c0)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (RTRIM(((vt0.c0) IS FALSE))) ORDER BY (NOT (vt0.c0)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((~ (LIKELY(DISTINCT rt0.c0))));
SELECT SUM(count) FROM (SELECT (((~ (LIKELY(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((~ (LIKELY(DISTINCT rt0.c0))));
SELECT SUM(count) FROM (SELECT (((~ (LIKELY(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((~ (LIKELY(DISTINCT rt0.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((- ((((rt0.c0))<>((rt0.c5)))))) ORDER BY ((NULL)||(rt0.c5))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((((rt0.c0))!=((rt0.c5)))))) IS TRUE)  as count FROM rt0 ORDER BY ((NULL)||(rt0.c5))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- ((((rt0.c0))<>((rt0.c5)))))) ORDER BY ((NULL)||(rt0.c5))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((((rt0.c0))!=((rt0.c5)))))) IS TRUE)  as count FROM rt0 ORDER BY ((NULL)||(rt0.c5))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- ((((rt0.c0))<>((rt0.c5)))))) ORDER BY ((NULL)||(rt0.c5))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((215811784, rt0.c5, rt0.c3)) NOT BETWEEN ((((((rt0.c1)AND(rt0.c4)))OR(rt0.c5)), rt0.c5, rt0.c5 COLLATE BINARY)) AND ((rt0.c3, (((rt0.c3))<>((rt0.c5))), ((rt0.c2) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((215811784, rt0.c5, rt0.c3)) NOT BETWEEN ((((((rt0.c1)AND(rt0.c4)))OR(rt0.c5)), rt0.c5, rt0.c5 COLLATE BINARY)) AND ((rt0.c3, (((rt0.c3))<>((rt0.c5))), ((rt0.c2) NOTNULL))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((215811784, rt0.c5, rt0.c3)) NOT BETWEEN ((((((rt0.c1)AND(rt0.c4)))OR(rt0.c5)), rt0.c5, rt0.c5 COLLATE BINARY)) AND ((rt0.c3, (((rt0.c3))<>((rt0.c5))), ((rt0.c2) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((215811784, rt0.c5, rt0.c3)) NOT BETWEEN ((((((rt0.c1)AND(rt0.c4)))OR(rt0.c5)), rt0.c5, rt0.c5 COLLATE BINARY)) AND ((rt0.c3, (((rt0.c3))<>((rt0.c5))), ((rt0.c2) NOTNULL))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((215811784, rt0.c5, rt0.c3)) NOT BETWEEN ((((((rt0.c1)AND(rt0.c4)))OR(rt0.c5)), rt0.c5, rt0.c5 COLLATE BINARY)) AND ((rt0.c3, (((rt0.c3))<>((rt0.c5))), ((rt0.c2) NOTNULL)))));
SELECT * FROM rt0 NOT INDEXED WHERE ((CAST(rt0.c1 AS INTEGER) IN ())) ORDER BY LTRIM(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c4 END) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c1 AS INTEGER) IN ())) IS TRUE)  as count FROM rt0 ORDER BY LTRIM(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c4 END) DESC  NULLS FIRST);
SELECT * FROM rt0 NOT INDEXED WHERE ((CAST(rt0.c1 AS INTEGER) IN ())) ORDER BY LTRIM(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c4 END) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c1 AS INTEGER) IN ())) IS TRUE)  as count FROM rt0 ORDER BY LTRIM(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c4 END) DESC  NULLS FIRST);
SELECT * FROM rt0 NOT INDEXED WHERE ((CAST(rt0.c1 AS INTEGER) IN ())) ORDER BY LTRIM(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c4 END) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((('-1559788817') IS TRUE)) BETWEEN (((vt0.c0)>>(vt0.c0))) AND (COALESCE(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((('-1559788817') IS TRUE)) BETWEEN (((vt0.c0)>>(vt0.c0))) AND (COALESCE(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((('-1559788817') IS TRUE)) BETWEEN (((vt0.c0)>>(vt0.c0))) AND (COALESCE(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((('-1559788817') IS TRUE)) BETWEEN (((vt0.c0)>>(vt0.c0))) AND (COALESCE(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((('-1559788817') IS TRUE)) BETWEEN (((vt0.c0)>>(vt0.c0))) AND (COALESCE(vt0.c0, vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (ABS((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) ORDER BY ((((x'')OR(((vt0.c0)OR(vt0.c0)))))OR(CAST(vt0.c0 AS BLOB))), CASE WHEN '1924838823' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE  NULLS FIRST, (((vt0.c0 IN ())) BETWEEN (vt0.c0) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((ABS((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((x'')OR(((vt0.c0)OR(vt0.c0)))))OR(CAST(vt0.c0 AS BLOB))), CASE WHEN '1924838823' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE  NULLS FIRST, (((vt0.c0 IN ())) BETWEEN (vt0.c0) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (ABS((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) ORDER BY ((((x'')OR(((vt0.c0)OR(vt0.c0)))))OR(CAST(vt0.c0 AS BLOB))), CASE WHEN '1924838823' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE  NULLS FIRST, (((vt0.c0 IN ())) BETWEEN (vt0.c0) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((ABS((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((x'')OR(((vt0.c0)OR(vt0.c0)))))OR(CAST(vt0.c0 AS BLOB))), CASE WHEN '1924838823' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE  NULLS FIRST, (((vt0.c0 IN ())) BETWEEN (vt0.c0) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (ABS((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) ORDER BY ((((x'')OR(((vt0.c0)OR(vt0.c0)))))OR(CAST(vt0.c0 AS BLOB))), CASE WHEN '1924838823' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE  NULLS FIRST, (((vt0.c0 IN ())) BETWEEN (vt0.c0) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (CASE vt0.c0  WHEN rt0.c3 THEN rt0.c5 COLLATE BINARY END) ORDER BY ((((((rt0.c2)AND(rt0.c5)))AND(rt0.c0))) NOT BETWEEN ((- (rt0.c1))) AND (vt0.c0)) ASC, (((rt0.c0, rt0.c4, rt0.c5)) NOT BETWEEN (((rt0.c3 IN ()), ((rt0.c0)>=('0.3505873221961159')), CAST(rt0.c0 AS TEXT))) AND (((- (rt0.c0)), CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN -274259136 THEN rt0.c0 END, CASE rt0.c4  WHEN rt0.c2 THEN rt0.c3 ELSE vt0.c0 END))) ASC  NULLS FIRST, (((((rt0.c5)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4)))) NOT BETWEEN ((rt0.c2 IN ())) AND ((NOT (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN rt0.c3 THEN rt0.c5 COLLATE BINARY END) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((((((rt0.c2)AND(rt0.c5)))AND(rt0.c0))) NOT BETWEEN ((- (rt0.c1))) AND (vt0.c0)) ASC, (((rt0.c0, rt0.c4, rt0.c5)) NOT BETWEEN (((rt0.c3 IN ()), ((rt0.c0)>=('0.3505873221961159')), CAST(rt0.c0 AS TEXT))) AND (((- (rt0.c0)), CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN -274259136 THEN rt0.c0 END, CASE rt0.c4  WHEN rt0.c2 THEN rt0.c3 ELSE vt0.c0 END))) ASC  NULLS FIRST, (((((rt0.c5)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4)))) NOT BETWEEN ((rt0.c2 IN ())) AND ((NOT (rt0.c1)))));
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (CASE vt0.c0  WHEN rt0.c3 THEN rt0.c5 COLLATE BINARY END) ORDER BY ((((((rt0.c2)AND(rt0.c5)))AND(rt0.c0))) NOT BETWEEN ((- (rt0.c1))) AND (vt0.c0)) ASC, (((rt0.c0, rt0.c4, rt0.c5)) NOT BETWEEN (((rt0.c3 IN ()), ((rt0.c0)>=('0.3505873221961159')), CAST(rt0.c0 AS TEXT))) AND (((- (rt0.c0)), CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN -274259136 THEN rt0.c0 END, CASE rt0.c4  WHEN rt0.c2 THEN rt0.c3 ELSE vt0.c0 END))) ASC  NULLS FIRST, (((((rt0.c5)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4)))) NOT BETWEEN ((rt0.c2 IN ())) AND ((NOT (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN rt0.c3 THEN rt0.c5 COLLATE BINARY END) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((((((rt0.c2)AND(rt0.c5)))AND(rt0.c0))) NOT BETWEEN ((- (rt0.c1))) AND (vt0.c0)) ASC, (((rt0.c0, rt0.c4, rt0.c5)) NOT BETWEEN (((rt0.c3 IN ()), ((rt0.c0)>=('0.3505873221961159')), CAST(rt0.c0 AS TEXT))) AND (((- (rt0.c0)), CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN -274259136 THEN rt0.c0 END, CASE rt0.c4  WHEN rt0.c2 THEN rt0.c3 ELSE vt0.c0 END))) ASC  NULLS FIRST, (((((rt0.c5)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4)))) NOT BETWEEN ((rt0.c2 IN ())) AND ((NOT (rt0.c1)))));
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (CASE vt0.c0  WHEN rt0.c3 THEN rt0.c5 COLLATE BINARY END) ORDER BY ((((((rt0.c2)AND(rt0.c5)))AND(rt0.c0))) NOT BETWEEN ((- (rt0.c1))) AND (vt0.c0)) ASC, (((rt0.c0, rt0.c4, rt0.c5)) NOT BETWEEN (((rt0.c3 IN ()), ((rt0.c0)>=('0.3505873221961159')), CAST(rt0.c0 AS TEXT))) AND (((- (rt0.c0)), CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN -274259136 THEN rt0.c0 END, CASE rt0.c4  WHEN rt0.c2 THEN rt0.c3 ELSE vt0.c0 END))) ASC  NULLS FIRST, (((((rt0.c5)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4)))) NOT BETWEEN ((rt0.c2 IN ())) AND ((NOT (rt0.c1))));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON TRIM((((''))<=((rt0.c1)))) WHERE (rt0.c2) ORDER BY (~ (CAST(rt0.c1 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON TRIM((((''))<=((rt0.c1)))) ORDER BY (~ (CAST(rt0.c1 AS TEXT)))  NULLS LAST);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON TRIM((((''))<=((rt0.c1)))) WHERE (rt0.c2) ORDER BY (~ (CAST(rt0.c1 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON TRIM((((''))<=((rt0.c1)))) ORDER BY (~ (CAST(rt0.c1 AS TEXT)))  NULLS LAST);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON TRIM((((''))<=((rt0.c1)))) WHERE (rt0.c2) ORDER BY (~ (CAST(rt0.c1 AS TEXT)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c4, rt0.c2, rt0.c2)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN vt0.c0 ELSE NULL END, ((rt0.c1) ISNULL), NULL)) AND (((- (rt0.c0)), CASE WHEN rt0.c4 THEN rt0.c0 END, rt0.c3 COLLATE RTRIM)))) ORDER BY ((((rt0.c1) NOT NULL))>((((rt0.c0, NULL, vt0.c0, vt0.c0, 0.82218233936895)) NOT BETWEEN (('-2068535607', rt0.c2, rt0.c4, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c1, rt0.c4, NULL)))))  NULLS LAST, ((((0Xffffffffd72b87a0) BETWEEN (rt0.c5) AND (rt0.c4)))*(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END)) ASC, UPPER(rt0.c0 COLLATE RTRIM) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c4, rt0.c2, rt0.c2)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN vt0.c0 ELSE NULL END, ((rt0.c1) ISNULL), NULL)) AND (((- (rt0.c0)), CASE WHEN rt0.c4 THEN rt0.c0 END, rt0.c3 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c1) NOT NULL))>((((rt0.c0, NULL, vt0.c0, vt0.c0, 0.82218233936895)) NOT BETWEEN (('-2068535607', rt0.c2, rt0.c4, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c1, rt0.c4, NULL)))))  NULLS LAST, ((((0Xffffffffd72b87a0) BETWEEN (rt0.c5) AND (rt0.c4)))*(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END)) ASC, UPPER(rt0.c0 COLLATE RTRIM) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c4, rt0.c2, rt0.c2)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN vt0.c0 ELSE NULL END, ((rt0.c1) ISNULL), NULL)) AND (((- (rt0.c0)), CASE WHEN rt0.c4 THEN rt0.c0 END, rt0.c3 COLLATE RTRIM)))) ORDER BY ((((rt0.c1) NOT NULL))>((((rt0.c0, NULL, vt0.c0, vt0.c0, 0.82218233936895)) NOT BETWEEN (('-2068535607', rt0.c2, rt0.c4, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c1, rt0.c4, NULL)))))  NULLS LAST, ((((0Xffffffffd72b87a0) BETWEEN (rt0.c5) AND (rt0.c4)))*(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END)) ASC, UPPER(rt0.c0 COLLATE RTRIM) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c4, rt0.c2, rt0.c2)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN vt0.c0 ELSE NULL END, ((rt0.c1) ISNULL), NULL)) AND (((- (rt0.c0)), CASE WHEN rt0.c4 THEN rt0.c0 END, rt0.c3 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c1) NOT NULL))>((((rt0.c0, NULL, vt0.c0, vt0.c0, 0.82218233936895)) NOT BETWEEN (('-2068535607', rt0.c2, rt0.c4, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c1, rt0.c4, NULL)))))  NULLS LAST, ((((0Xffffffffd72b87a0) BETWEEN (rt0.c5) AND (rt0.c4)))*(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END)) ASC, UPPER(rt0.c0 COLLATE RTRIM) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c4, rt0.c2, rt0.c2)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN vt0.c0 ELSE NULL END, ((rt0.c1) ISNULL), NULL)) AND (((- (rt0.c0)), CASE WHEN rt0.c4 THEN rt0.c0 END, rt0.c3 COLLATE RTRIM)))) ORDER BY ((((rt0.c1) NOT NULL))>((((rt0.c0, NULL, vt0.c0, vt0.c0, 0.82218233936895)) NOT BETWEEN (('-2068535607', rt0.c2, rt0.c4, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c1, rt0.c4, NULL)))))  NULLS LAST, ((((0Xffffffffd72b87a0) BETWEEN (rt0.c5) AND (rt0.c4)))*(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END)) ASC, UPPER(rt0.c0 COLLATE RTRIM) ASC;
SELECT * FROM vt0 WHERE ((((vt0.c0))<>((vt0.c0))) COLLATE BINARY) ORDER BY ((~ (vt0.c0)) IN ()) ASC  NULLS FIRST, TRIM(NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))!=((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((~ (vt0.c0)) IN ()) ASC  NULLS FIRST, TRIM(NULL)  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c0))<>((vt0.c0))) COLLATE BINARY) ORDER BY ((~ (vt0.c0)) IN ()) ASC  NULLS FIRST, TRIM(NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))!=((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((~ (vt0.c0)) IN ()) ASC  NULLS FIRST, TRIM(NULL)  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c0))<>((vt0.c0))) COLLATE BINARY) ORDER BY ((~ (vt0.c0)) IN ()) ASC  NULLS FIRST, TRIM(NULL)  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((((((UNLIKELY(vt0.c0))OR(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((vt0.c0)>>(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((UNLIKELY(vt0.c0))OR(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((vt0.c0)>>(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((UNLIKELY(vt0.c0))OR(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((vt0.c0)>>(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((UNLIKELY(vt0.c0))OR(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((vt0.c0)>>(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((UNLIKELY(vt0.c0))OR(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((vt0.c0)>>(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (CAST(TRIM(DISTINCT rt0.c5, rt0.c0) AS TEXT)) ORDER BY (((((rt0.c5)) BETWEEN ((rt0.c3)) AND ((rt0.c3)))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(DISTINCT rt0.c5, rt0.c0) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c5)) BETWEEN ((rt0.c3)) AND ((rt0.c3)))) IS TRUE) ASC);
SELECT COUNT(*) FROM rt0 WHERE (CAST(TRIM(DISTINCT rt0.c5, rt0.c0) AS TEXT)) ORDER BY (((((rt0.c5)) BETWEEN ((rt0.c3)) AND ((rt0.c3)))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(DISTINCT rt0.c5, rt0.c0) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c5)) BETWEEN ((rt0.c3)) AND ((rt0.c3)))) IS TRUE) ASC);
SELECT COUNT(*) FROM rt0 WHERE (CAST(TRIM(DISTINCT rt0.c5, rt0.c0) AS TEXT)) ORDER BY (((((rt0.c5)) BETWEEN ((rt0.c3)) AND ((rt0.c3)))) IS TRUE) ASC;
SELECT COUNT(*) FROM vt0, rt0 WHERE (MIN(CASE WHEN 9223372036854775807 THEN rt0.c2 END, LOWER(DISTINCT vt0.c0))) ORDER BY ((((rt0.c4) NOT NULL))>(((vt0.c0) ISNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((MIN(CASE WHEN 9223372036854775807 THEN rt0.c2 END, LOWER(DISTINCT vt0.c0))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c4) NOT NULL))>(((vt0.c0) ISNULL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (MIN(CASE WHEN 9223372036854775807 THEN rt0.c2 END, LOWER(DISTINCT vt0.c0))) ORDER BY ((((rt0.c4) NOT NULL))>(((vt0.c0) ISNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((MIN(CASE WHEN 9223372036854775807 THEN rt0.c2 END, LOWER(DISTINCT vt0.c0))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c4) NOT NULL))>(((vt0.c0) ISNULL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (MIN(CASE WHEN 9223372036854775807 THEN rt0.c2 END, LOWER(DISTINCT vt0.c0))) ORDER BY ((((rt0.c4) NOT NULL))>(((vt0.c0) ISNULL))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((+ (CASE WHEN x'' THEN '-125558794' ELSE rt0.c4 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN x'' THEN '-125558794' ELSE rt0.c4 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((+ (CASE WHEN x'' THEN '-125558794' ELSE rt0.c4 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN x'' THEN '-125558794' ELSE rt0.c4 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((+ (CASE WHEN x'' THEN '-125558794' ELSE rt0.c4 END)));
SELECT * FROM rt0 WHERE (((((((604202442)OR(rt0.c3)))AND(rt0.c4)))LIKE((~ (rt0.c5)))));
SELECT SUM(count) FROM (SELECT ((((((((604202442)OR(rt0.c3)))AND(rt0.c4)))LIKE((~ (rt0.c5))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((604202442)OR(rt0.c3)))AND(rt0.c4)))LIKE((~ (rt0.c5)))));
SELECT SUM(count) FROM (SELECT ((((((((604202442)OR(rt0.c3)))AND(rt0.c4)))LIKE((~ (rt0.c5))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((604202442)OR(rt0.c3)))AND(rt0.c4)))LIKE((~ (rt0.c5)))));
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0) NOTNULL)) AND (CAST(vt0.c0 AS BLOB)))) ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0) NOTNULL)) AND (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0) NOTNULL)) AND (CAST(vt0.c0 AS BLOB)))) ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0) NOTNULL)) AND (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0) NOTNULL)) AND (CAST(vt0.c0 AS BLOB)))) ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))  NULLS LAST;
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c1 IN ())) NOT BETWEEN (rt0.c0) AND (((((rt0.c0)OR(vt0.c0)))OR(vt0.c0)))) WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c1 IN ())) NOT BETWEEN (rt0.c0) AND (((((rt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c1 IN ())) NOT BETWEEN (rt0.c0) AND (((((rt0.c0)OR(vt0.c0)))OR(vt0.c0)))) WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c1 IN ())) NOT BETWEEN (rt0.c0) AND (((((rt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c1 IN ())) NOT BETWEEN (rt0.c0) AND (((((rt0.c0)OR(vt0.c0)))OR(vt0.c0)))) WHERE (rt0.c3);
SELECT ALL * FROM rt0 WHERE (load_extension((((rt0.c3, rt0.c2, rt0.c4)) NOT BETWEEN (('0.06495537876789359', rt0.c0, rt0.c4)) AND ((rt0.c4, rt0.c5, rt0.c2))), ((rt0.c2)IS(rt0.c1)))) ORDER BY (((NULL))=(((~ (rt0.c4)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension((((rt0.c3, rt0.c2, rt0.c4)) NOT BETWEEN (('0.06495537876789359', rt0.c0, rt0.c4)) AND ((rt0.c4, rt0.c5, rt0.c2))), ((rt0.c2)IS(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY (((NULL))==(((~ (rt0.c4)))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (load_extension((((rt0.c3, rt0.c2, rt0.c4)) NOT BETWEEN (('0.06495537876789359', rt0.c0, rt0.c4)) AND ((rt0.c4, rt0.c5, rt0.c2))), ((rt0.c2)IS(rt0.c1)))) ORDER BY (((NULL))=(((~ (rt0.c4)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension((((rt0.c3, rt0.c2, rt0.c4)) NOT BETWEEN (('0.06495537876789359', rt0.c0, rt0.c4)) AND ((rt0.c4, rt0.c5, rt0.c2))), ((rt0.c2)IS(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY (((NULL))==(((~ (rt0.c4)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN ((rt0.c1)&(rt0.c1)) THEN (rt0.c2 IN ()) WHEN ((((rt0.c3)AND(rt0.c2)))AND(rt0.c3)) THEN json_type(vt0.c0) WHEN rt0.c0 COLLATE RTRIM THEN (+ (rt0.c5)) WHEN CASE rt0.c5  WHEN vt0.c0 THEN '103457404' END THEN UNLIKELY(rt0.c4) WHEN ((((((((rt0.c3)OR(rt0.c0)))OR(vt0.c0)))OR(rt0.c5)))OR(rt0.c3)) THEN (((rt0.c5))==((rt0.c4))) ELSE (rt0.c1 IN ()) END) ORDER BY ((((rt0.c1)IS(rt0.c4))) NOT NULL), CASE WHEN ((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c4)) THEN ((((((((rt0.c2)AND('<')))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)) ELSE rt0.c5 COLLATE BINARY END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)&(rt0.c1)) THEN (rt0.c2 IN ()) WHEN ((((rt0.c3)AND(rt0.c2)))AND(rt0.c3)) THEN json_type(vt0.c0) WHEN rt0.c0 COLLATE RTRIM THEN (+ (rt0.c5)) WHEN CASE rt0.c5  WHEN vt0.c0 THEN '103457404' END THEN UNLIKELY(rt0.c4) WHEN ((((((((rt0.c3)OR(rt0.c0)))OR(vt0.c0)))OR(rt0.c5)))OR(rt0.c3)) THEN (((rt0.c5))=((rt0.c4))) ELSE (rt0.c1 IN ()) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c1)IS(rt0.c4))) NOT NULL), CASE WHEN ((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c4)) THEN ((((((((rt0.c2)AND('<')))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)) ELSE rt0.c5 COLLATE BINARY END ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN ((rt0.c1)&(rt0.c1)) THEN (rt0.c2 IN ()) WHEN ((((rt0.c3)AND(rt0.c2)))AND(rt0.c3)) THEN json_type(vt0.c0) WHEN rt0.c0 COLLATE RTRIM THEN (+ (rt0.c5)) WHEN CASE rt0.c5  WHEN vt0.c0 THEN '103457404' END THEN UNLIKELY(rt0.c4) WHEN ((((((((rt0.c3)OR(rt0.c0)))OR(vt0.c0)))OR(rt0.c5)))OR(rt0.c3)) THEN (((rt0.c5))==((rt0.c4))) ELSE (rt0.c1 IN ()) END) ORDER BY ((((rt0.c1)IS(rt0.c4))) NOT NULL), CASE WHEN ((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c4)) THEN ((((((((rt0.c2)AND('<')))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)) ELSE rt0.c5 COLLATE BINARY END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)&(rt0.c1)) THEN (rt0.c2 IN ()) WHEN ((((rt0.c3)AND(rt0.c2)))AND(rt0.c3)) THEN json_type(vt0.c0) WHEN rt0.c0 COLLATE RTRIM THEN (+ (rt0.c5)) WHEN CASE rt0.c5  WHEN vt0.c0 THEN '103457404' END THEN UNLIKELY(rt0.c4) WHEN ((((((((rt0.c3)OR(rt0.c0)))OR(vt0.c0)))OR(rt0.c5)))OR(rt0.c3)) THEN (((rt0.c5))=((rt0.c4))) ELSE (rt0.c1 IN ()) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c1)IS(rt0.c4))) NOT NULL), CASE WHEN ((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c4)) THEN ((((((((rt0.c2)AND('<')))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)) ELSE rt0.c5 COLLATE BINARY END ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN ((rt0.c1)&(rt0.c1)) THEN (rt0.c2 IN ()) WHEN ((((rt0.c3)AND(rt0.c2)))AND(rt0.c3)) THEN json_type(vt0.c0) WHEN rt0.c0 COLLATE RTRIM THEN (+ (rt0.c5)) WHEN CASE rt0.c5  WHEN vt0.c0 THEN '103457404' END THEN UNLIKELY(rt0.c4) WHEN ((((((((rt0.c3)OR(rt0.c0)))OR(vt0.c0)))OR(rt0.c5)))OR(rt0.c3)) THEN (((rt0.c5))==((rt0.c4))) ELSE (rt0.c1 IN ()) END) ORDER BY ((((rt0.c1)IS(rt0.c4))) NOT NULL), CASE WHEN ((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c4)) THEN ((((((((rt0.c2)AND('<')))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)) ELSE rt0.c5 COLLATE BINARY END ASC;
SELECT ALL * FROM rt0 WHERE (1.871539827E9);
SELECT SUM(count) FROM (SELECT ALL ((1.871539827E9) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (1.871539827E9);
SELECT SUM(count) FROM (SELECT ALL ((1.871539827E9) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (1.871539827E9);
SELECT * FROM rt0 WHERE (CAST(0xffffffffb88fc196 COLLATE RTRIM AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0xffffffffb88fc196 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(0xffffffffb88fc196 COLLATE RTRIM AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0xffffffffb88fc196 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(0xffffffffb88fc196 COLLATE RTRIM AS BLOB));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((((((NULL)OR(rt0.c5)))AND(rt0.c4)))AND(vt0.c0)))AND(rt0.c1)) IN ())) ORDER BY ((LIKELY(rt0.c5)) BETWEEN (rt0.c1 COLLATE RTRIM) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((NULL)OR(rt0.c5)))AND(rt0.c4)))AND(vt0.c0)))AND(rt0.c1)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((LIKELY(rt0.c5)) BETWEEN (rt0.c1 COLLATE RTRIM) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((((((NULL)OR(rt0.c5)))AND(rt0.c4)))AND(vt0.c0)))AND(rt0.c1)) IN ())) ORDER BY ((LIKELY(rt0.c5)) BETWEEN (rt0.c1 COLLATE RTRIM) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((NULL)OR(rt0.c5)))AND(rt0.c4)))AND(vt0.c0)))AND(rt0.c1)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((LIKELY(rt0.c5)) BETWEEN (rt0.c1 COLLATE RTRIM) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((((((NULL)OR(rt0.c5)))AND(rt0.c4)))AND(vt0.c0)))AND(rt0.c1)) IN ())) ORDER BY ((LIKELY(rt0.c5)) BETWEEN (rt0.c1 COLLATE RTRIM) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c4 IN (rt0.c1, rt0.c0)))&(((rt0.c3)|(rt0.c3))))) ORDER BY ((((((((rt0.c1)AND(((((rt0.c0)OR(rt0.c0)))OR('')))))OR(-2061262275)))OR(CAST(rt0.c5 AS INTEGER))))OR(rt0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c4 IN (rt0.c1, rt0.c0)))&(((rt0.c3)|(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((rt0.c1)AND(((((rt0.c0)OR(rt0.c0)))OR('')))))OR(-2061262275)))OR(CAST(rt0.c5 AS INTEGER))))OR(rt0.c1))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c4 IN (rt0.c1, rt0.c0)))&(((rt0.c3)|(rt0.c3))))) ORDER BY ((((((((rt0.c1)AND(((((rt0.c0)OR(rt0.c0)))OR('')))))OR(-2061262275)))OR(CAST(rt0.c5 AS INTEGER))))OR(rt0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c4 IN (rt0.c1, rt0.c0)))&(((rt0.c3)|(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((rt0.c1)AND(((((rt0.c0)OR(rt0.c0)))OR('')))))OR(-2061262275)))OR(CAST(rt0.c5 AS INTEGER))))OR(rt0.c1))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c4 IN (rt0.c1, rt0.c0)))&(((rt0.c3)|(rt0.c3))))) ORDER BY ((((((((rt0.c1)AND(((((rt0.c0)OR(rt0.c0)))OR('')))))OR(-2061262275)))OR(CAST(rt0.c5 AS INTEGER))))OR(rt0.c1))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c5)) NOT BETWEEN (((('')<(rt0.c3)))) AND ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c5))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c5)) NOT BETWEEN (((('')<(rt0.c3)))) AND ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c5)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c5)) NOT BETWEEN (((('')<(rt0.c3)))) AND ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c5))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c5)) NOT BETWEEN (((('')<(rt0.c3)))) AND ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c5)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c5)) NOT BETWEEN (((('')<(rt0.c3)))) AND ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c5))))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c1 COLLATE RTRIM)<=(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c5 WHEN 0.14580145503739173 THEN rt0.c5 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN '*)H' WHEN rt0.c0 THEN 0.4938924805976863 END)));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM)<=(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c5 WHEN 0.14580145503739173 THEN rt0.c5 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN '*)H' WHEN rt0.c0 THEN 0.4938924805976863 END))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c1 COLLATE RTRIM)<=(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c5 WHEN 0.14580145503739173 THEN rt0.c5 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN '*)H' WHEN rt0.c0 THEN 0.4938924805976863 END)));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM)<=(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c5 WHEN 0.14580145503739173 THEN rt0.c5 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN '*)H' WHEN rt0.c0 THEN 0.4938924805976863 END))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c1 COLLATE RTRIM)<=(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c5 WHEN 0.14580145503739173 THEN rt0.c5 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN '*)H' WHEN rt0.c0 THEN 0.4938924805976863 END)));
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((rt0.c3) ISNULL) AS REAL)) ORDER BY CAST(((rt0.c5)IS NOT(rt0.c5)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3) ISNULL) AS REAL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((rt0.c5)IS NOT(rt0.c5)) AS NUMERIC) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((rt0.c3) ISNULL) AS REAL)) ORDER BY CAST(((rt0.c5)IS NOT(rt0.c5)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3) ISNULL) AS REAL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((rt0.c5)IS NOT(rt0.c5)) AS NUMERIC) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((rt0.c3) ISNULL) AS REAL)) ORDER BY CAST(((rt0.c5)IS NOT(rt0.c5)) AS NUMERIC) ASC;
SELECT ALL * FROM rt0 WHERE (CAST(0.943106036096091 AS NUMERIC)) ORDER BY (NOT ((~ (rt0.c2))))  NULLS LAST, ((CAST(rt0.c4 AS BLOB))<<('1193891162'))  NULLS LAST, (((((rt0.c0, rt0.c3, rt0.c4)) NOT BETWEEN ((x'89fa', rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c3, rt0.c1))))>(TRIM(DISTINCT rt0.c0, rt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(0.943106036096091 AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY (NOT ((~ (rt0.c2))))  NULLS LAST, ((CAST(rt0.c4 AS BLOB))<<('1193891162'))  NULLS LAST, (((((rt0.c0, rt0.c3, rt0.c4)) NOT BETWEEN ((x'89fa', rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c3, rt0.c1))))>(TRIM(DISTINCT rt0.c0, rt0.c0)))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CAST(0.943106036096091 AS NUMERIC)) ORDER BY (NOT ((~ (rt0.c2))))  NULLS LAST, ((CAST(rt0.c4 AS BLOB))<<('1193891162'))  NULLS LAST, (((((rt0.c0, rt0.c3, rt0.c4)) NOT BETWEEN ((x'89fa', rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c3, rt0.c1))))>(TRIM(DISTINCT rt0.c0, rt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(0.943106036096091 AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY (NOT ((~ (rt0.c2))))  NULLS LAST, ((CAST(rt0.c4 AS BLOB))<<('1193891162'))  NULLS LAST, (((((rt0.c0, rt0.c3, rt0.c4)) NOT BETWEEN ((x'89fa', rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c3, rt0.c1))))>(TRIM(DISTINCT rt0.c0, rt0.c0)))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CAST(0.943106036096091 AS NUMERIC)) ORDER BY (NOT ((~ (rt0.c2))))  NULLS LAST, ((CAST(rt0.c4 AS BLOB))<<('1193891162'))  NULLS LAST, (((((rt0.c0, rt0.c3, rt0.c4)) NOT BETWEEN ((x'89fa', rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c3, rt0.c1))))>(TRIM(DISTINCT rt0.c0, rt0.c0)))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CAST((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS REAL)) ORDER BY '-402221188', ((((vt0.c0)&(vt0.c0))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY '-402221188', ((((vt0.c0)&(vt0.c0))) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS REAL)) ORDER BY '-402221188', ((((vt0.c0)&(vt0.c0))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY '-402221188', ((((vt0.c0)&(vt0.c0))) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS REAL)) ORDER BY '-402221188', ((((vt0.c0)&(vt0.c0))) IS FALSE)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((0.9757803516273093)*(rt0.c3)))OR(CASE rt0.c4  WHEN rt0.c5 THEN rt0.c4 ELSE rt0.c3 END)))OR(((rt0.c1) BETWEEN (vt0.c0) AND (NULL)))));
SELECT SUM(count) FROM (SELECT ((((((((0.9757803516273093)*(rt0.c3)))OR(CASE rt0.c4  WHEN rt0.c5 THEN rt0.c4 ELSE rt0.c3 END)))OR(((rt0.c1) BETWEEN (vt0.c0) AND (NULL))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((0.9757803516273093)*(rt0.c3)))OR(CASE rt0.c4  WHEN rt0.c5 THEN rt0.c4 ELSE rt0.c3 END)))OR(((rt0.c1) BETWEEN (vt0.c0) AND (NULL)))));
SELECT SUM(count) FROM (SELECT ((((((((0.9757803516273093)*(rt0.c3)))OR(CASE rt0.c4  WHEN rt0.c5 THEN rt0.c4 ELSE rt0.c3 END)))OR(((rt0.c1) BETWEEN (vt0.c0) AND (NULL))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((0.9757803516273093)*(rt0.c3)))OR(CASE rt0.c4  WHEN rt0.c5 THEN rt0.c4 ELSE rt0.c3 END)))OR(((rt0.c1) BETWEEN (vt0.c0) AND (NULL)))));
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY NULL  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((~ (rt0.c5 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c5 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((~ (rt0.c5 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c5 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((~ (rt0.c5 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (- (vt0.c0))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)|(vt0.c0)) WHEN CAST(vt0.c0 AS TEXT) THEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, x'9b6d', vt0.c0)) AND ((x'4ea6', vt0.c0, NULL))) THEN ((((vt0.c0)OR(2048932920)))OR(vt0.c0)) ELSE ((vt0.c0) IS TRUE) END) ORDER BY CASE WHEN ((vt0.c0)/(vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE vt0.c0 END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (vt0.c0))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)|(vt0.c0)) WHEN CAST(vt0.c0 AS TEXT) THEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, x'9b6d', vt0.c0)) AND ((x'4ea6', vt0.c0, NULL))) THEN ((((vt0.c0)OR(2048932920)))OR(vt0.c0)) ELSE ((vt0.c0) IS TRUE) END) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0)/(vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE vt0.c0 END ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (- (vt0.c0))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)|(vt0.c0)) WHEN CAST(vt0.c0 AS TEXT) THEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, x'9b6d', vt0.c0)) AND ((x'4ea6', vt0.c0, NULL))) THEN ((((vt0.c0)OR(2048932920)))OR(vt0.c0)) ELSE ((vt0.c0) IS TRUE) END) ORDER BY CASE WHEN ((vt0.c0)/(vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE vt0.c0 END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (vt0.c0))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)|(vt0.c0)) WHEN CAST(vt0.c0 AS TEXT) THEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, x'9b6d', vt0.c0)) AND ((x'4ea6', vt0.c0, NULL))) THEN ((((vt0.c0)OR(2048932920)))OR(vt0.c0)) ELSE ((vt0.c0) IS TRUE) END) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0)/(vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE vt0.c0 END ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (- (vt0.c0))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)|(vt0.c0)) WHEN CAST(vt0.c0 AS TEXT) THEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, x'9b6d', vt0.c0)) AND ((x'4ea6', vt0.c0, NULL))) THEN ((((vt0.c0)OR(2048932920)))OR(vt0.c0)) ELSE ((vt0.c0) IS TRUE) END) ORDER BY CASE WHEN ((vt0.c0)/(vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE vt0.c0 END ASC;
SELECT * FROM rt0, vt0 WHERE ((((rt0.c1 IN (rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c1 IN (rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c1 IN (rt0.c2))) NOTNULL));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (rt0.c0) AND (NULL))) ISNULL)) ORDER BY rt0.c4 ASC  NULLS LAST, LIKELIHOOD(DISTINCT (- (rt0.c1)), 0.9652067903928109) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (rt0.c0) AND (NULL))) ISNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c4 ASC  NULLS LAST, LIKELIHOOD(DISTINCT (- (rt0.c1)), 0.9652067903928109) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (rt0.c0) AND (NULL))) ISNULL)) ORDER BY rt0.c4 ASC  NULLS LAST, LIKELIHOOD(DISTINCT (- (rt0.c1)), 0.9652067903928109) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (rt0.c0) AND (NULL))) ISNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c4 ASC  NULLS LAST, LIKELIHOOD(DISTINCT (- (rt0.c1)), 0.9652067903928109) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (rt0.c0) AND (NULL))) ISNULL)) ORDER BY rt0.c4 ASC  NULLS LAST, LIKELIHOOD(DISTINCT (- (rt0.c1)), 0.9652067903928109) ASC;
SELECT * FROM rt0, vt0 WHERE ((('-274259136' COLLATE RTRIM)-(UNLIKELY(x'')))) ORDER BY ((('437170431')) BETWEEN (((+ (vt0.c0)))) AND ((((vt0.c0)%(rt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT (((('-274259136' COLLATE RTRIM)-(UNLIKELY(x'')))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((('437170431')) BETWEEN (((+ (vt0.c0)))) AND ((((vt0.c0)%(rt0.c1))))) ASC);
SELECT * FROM rt0, vt0 WHERE ((('-274259136' COLLATE RTRIM)-(UNLIKELY(x'')))) ORDER BY ((('437170431')) BETWEEN (((+ (vt0.c0)))) AND ((((vt0.c0)%(rt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT (((('-274259136' COLLATE RTRIM)-(UNLIKELY(x'')))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((('437170431')) BETWEEN (((+ (vt0.c0)))) AND ((((vt0.c0)%(rt0.c1))))) ASC);
SELECT * FROM rt0, vt0 WHERE ((('-274259136' COLLATE RTRIM)-(UNLIKELY(x'')))) ORDER BY ((('437170431')) BETWEEN (((+ (vt0.c0)))) AND ((((vt0.c0)%(rt0.c1))))) ASC;
SELECT * FROM rt0 WHERE (CAST(rt0.c4 AS REAL)) ORDER BY CAST((rt0.c4 IN (rt0.c1)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c4 AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY CAST((rt0.c4 IN (rt0.c1)) AS REAL)  NULLS LAST);
SELECT * FROM rt0 WHERE (CAST(rt0.c4 AS REAL)) ORDER BY CAST((rt0.c4 IN (rt0.c1)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c4 AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY CAST((rt0.c4 IN (rt0.c1)) AS REAL)  NULLS LAST);
SELECT * FROM rt0 WHERE (CAST(rt0.c4 AS REAL)) ORDER BY CAST((rt0.c4 IN (rt0.c1)) AS REAL)  NULLS LAST;
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (((((rt0.c5) ISNULL)) BETWEEN (rt0.c3) AND ('kUh'))) ORDER BY SQLITE_COMPILEOPTION_USED(rt0.c0) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5) ISNULL)) BETWEEN (rt0.c3) AND ('kUh'))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY SQLITE_COMPILEOPTION_USED(rt0.c0) COLLATE NOCASE DESC);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (((((rt0.c5) ISNULL)) BETWEEN (rt0.c3) AND ('kUh'))) ORDER BY SQLITE_COMPILEOPTION_USED(rt0.c0) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5) ISNULL)) BETWEEN (rt0.c3) AND ('kUh'))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY SQLITE_COMPILEOPTION_USED(rt0.c0) COLLATE NOCASE DESC);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (((((rt0.c5) ISNULL)) BETWEEN (rt0.c3) AND ('kUh'))) ORDER BY SQLITE_COMPILEOPTION_USED(rt0.c0) COLLATE NOCASE DESC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((CAST(rt0.c4 AS INTEGER))==(((rt0.c3)*(rt0.c1))))) ORDER BY CASE WHEN (((rt0.c2, rt0.c1, rt0.c3)) NOT BETWEEN ((vt0.c0, rt0.c3, rt0.c0)) AND ((rt0.c3, rt0.c0, rt0.c5))) THEN ((vt0.c0)==(rt0.c2)) ELSE CAST(rt0.c2 AS REAL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c4 AS INTEGER))=(((rt0.c3)*(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN (((rt0.c2, rt0.c1, rt0.c3)) NOT BETWEEN ((vt0.c0, rt0.c3, rt0.c0)) AND ((rt0.c3, rt0.c0, rt0.c5))) THEN ((vt0.c0)==(rt0.c2)) ELSE CAST(rt0.c2 AS REAL) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((CAST(rt0.c4 AS INTEGER))==(((rt0.c3)*(rt0.c1))))) ORDER BY CASE WHEN (((rt0.c2, rt0.c1, rt0.c3)) NOT BETWEEN ((vt0.c0, rt0.c3, rt0.c0)) AND ((rt0.c3, rt0.c0, rt0.c5))) THEN ((vt0.c0)==(rt0.c2)) ELSE CAST(rt0.c2 AS REAL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c4 AS INTEGER))=(((rt0.c3)*(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN (((rt0.c2, rt0.c1, rt0.c3)) NOT BETWEEN ((vt0.c0, rt0.c3, rt0.c0)) AND ((rt0.c3, rt0.c0, rt0.c5))) THEN ((vt0.c0)==(rt0.c2)) ELSE CAST(rt0.c2 AS REAL) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((CAST(rt0.c4 AS INTEGER))==(((rt0.c3)*(rt0.c1))))) ORDER BY CASE WHEN (((rt0.c2, rt0.c1, rt0.c3)) NOT BETWEEN ((vt0.c0, rt0.c3, rt0.c0)) AND ((rt0.c3, rt0.c0, rt0.c5))) THEN ((vt0.c0)==(rt0.c2)) ELSE CAST(rt0.c2 AS REAL) END  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((vt0.c0) NOTNULL)) NOTNULL)) ORDER BY CASE ((rt0.c4)LIKE(rt0.c4))  WHEN (((rt0.c3)) BETWEEN ((0.7741368521084752)) AND ((rt0.c2))) THEN (-2018721744 IN ()) ELSE ((('읈HI', vt0.c0, rt0.c0))==((rt0.c0, rt0.c1, rt0.c4))) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE ((rt0.c4)LIKE(rt0.c4))  WHEN (((rt0.c3)) BETWEEN ((0.7741368521084752)) AND ((rt0.c2))) THEN (-2018721744 IN ()) ELSE ((('읈HI', vt0.c0, rt0.c0))=((rt0.c0, rt0.c1, rt0.c4))) END DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((vt0.c0) NOTNULL)) NOTNULL)) ORDER BY CASE ((rt0.c4)LIKE(rt0.c4))  WHEN (((rt0.c3)) BETWEEN ((0.7741368521084752)) AND ((rt0.c2))) THEN (-2018721744 IN ()) ELSE ((('읈HI', vt0.c0, rt0.c0))==((rt0.c0, rt0.c1, rt0.c4))) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE ((rt0.c4)LIKE(rt0.c4))  WHEN (((rt0.c3)) BETWEEN ((0.7741368521084752)) AND ((rt0.c2))) THEN (-2018721744 IN ()) ELSE ((('읈HI', vt0.c0, rt0.c0))=((rt0.c0, rt0.c1, rt0.c4))) END DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((vt0.c0) NOTNULL)) NOTNULL)) ORDER BY CASE ((rt0.c4)LIKE(rt0.c4))  WHEN (((rt0.c3)) BETWEEN ((0.7741368521084752)) AND ((rt0.c2))) THEN (-2018721744 IN ()) ELSE ((('읈HI', vt0.c0, rt0.c0))==((rt0.c0, rt0.c1, rt0.c4))) END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (IFNULL(rt0.c2, NULL));
SELECT SUM(count) FROM (SELECT ((IFNULL(rt0.c2, NULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (IFNULL(rt0.c2, NULL));
SELECT SUM(count) FROM (SELECT ((IFNULL(rt0.c2, NULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (IFNULL(rt0.c2, NULL));
SELECT ALL * FROM vt0 WHERE (CAST((((vt0.c0))=((vt0.c0))) AS INTEGER)) ORDER BY ((vt0.c0) ISNULL) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0))==((vt0.c0))) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) ISNULL) COLLATE RTRIM ASC);
SELECT ALL * FROM vt0 WHERE (CAST((((vt0.c0))=((vt0.c0))) AS INTEGER)) ORDER BY ((vt0.c0) ISNULL) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0))==((vt0.c0))) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) ISNULL) COLLATE RTRIM ASC);
SELECT ALL * FROM vt0 WHERE (CAST((((vt0.c0))=((vt0.c0))) AS INTEGER)) ORDER BY ((vt0.c0) ISNULL) COLLATE RTRIM ASC;
SELECT * FROM vt0, rt0 WHERE ((NOT (((rt0.c4)%(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c4)%(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((NOT (((rt0.c4)%(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c4)%(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((NOT (((rt0.c4)%(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (TYPEOF(DISTINCT ((rt0.c3) IS FALSE))) ORDER BY (((rt0.c0)) NOT BETWEEN (((~ (0.7439716957810071)))) AND ((rt0.c3)))  NULLS FIRST, (((rt0.c2)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((x''))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((rt0.c3) IS FALSE))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) NOT BETWEEN (((~ (0.7439716957810071)))) AND ((rt0.c3)))  NULLS FIRST, (((rt0.c2)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((x''))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (TYPEOF(DISTINCT ((rt0.c3) IS FALSE))) ORDER BY (((rt0.c0)) NOT BETWEEN (((~ (0.7439716957810071)))) AND ((rt0.c3)))  NULLS FIRST, (((rt0.c2)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((x''))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((rt0.c3) IS FALSE))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) NOT BETWEEN (((~ (0.7439716957810071)))) AND ((rt0.c3)))  NULLS FIRST, (((rt0.c2)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((x''))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (TYPEOF(DISTINCT ((rt0.c3) IS FALSE))) ORDER BY (((rt0.c0)) NOT BETWEEN (((~ (0.7439716957810071)))) AND ((rt0.c3)))  NULLS FIRST, (((rt0.c2)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((x''))) DESC;
SELECT ALL * FROM rt0 WHERE (((((rt0.c5)IS NOT(rt0.c0)))|(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5)IS NOT(rt0.c0)))|(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c5)IS NOT(rt0.c0)))|(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5)IS NOT(rt0.c0)))|(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c5)IS NOT(rt0.c0)))|(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)));
SELECT COUNT(*) FROM rt0 WHERE ((NOT (CAST(rt0.c2 AS NUMERIC)))) ORDER BY ((((rt0.c4 COLLATE RTRIM)OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 END)))OR((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c4 COLLATE RTRIM)OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 END)))OR((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (CAST(rt0.c2 AS NUMERIC)))) ORDER BY ((((rt0.c4 COLLATE RTRIM)OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 END)))OR((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c4 COLLATE RTRIM)OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 END)))OR((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (CAST(rt0.c2 AS NUMERIC)))) ORDER BY ((((rt0.c4 COLLATE RTRIM)OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 END)))OR((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c3)OR(rt0.c4))) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND ('215811784'))) ORDER BY rt0.c3 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)OR(rt0.c4))) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND ('215811784'))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3 DESC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3)OR(rt0.c4))) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND ('215811784'))) ORDER BY rt0.c3 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)OR(rt0.c4))) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND ('215811784'))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3 DESC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3)OR(rt0.c4))) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND ('215811784'))) ORDER BY rt0.c3 DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT ALL * FROM rt0 WHERE (CASE (rt0.c5 IN ())  WHEN CAST(rt0.c2 AS REAL) THEN ((rt0.c4)*(rt0.c2)) ELSE CASE rt0.c1  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c0 END END) ORDER BY ((CAST(rt0.c5 AS TEXT))<=((rt0.c0 IN (rt0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c5 IN ())  WHEN CAST(rt0.c2 AS REAL) THEN ((rt0.c4)*(rt0.c2)) ELSE CASE rt0.c1  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c0 END END) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c5 AS TEXT))<=((rt0.c0 IN (rt0.c3))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CASE (rt0.c5 IN ())  WHEN CAST(rt0.c2 AS REAL) THEN ((rt0.c4)*(rt0.c2)) ELSE CASE rt0.c1  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c0 END END) ORDER BY ((CAST(rt0.c5 AS TEXT))<=((rt0.c0 IN (rt0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c5 IN ())  WHEN CAST(rt0.c2 AS REAL) THEN ((rt0.c4)*(rt0.c2)) ELSE CASE rt0.c1  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c0 END END) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c5 AS TEXT))<=((rt0.c0 IN (rt0.c3))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CASE (rt0.c5 IN ())  WHEN CAST(rt0.c2 AS REAL) THEN ((rt0.c4)*(rt0.c2)) ELSE CASE rt0.c1  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c0 END END) ORDER BY ((CAST(rt0.c5 AS TEXT))<=((rt0.c0 IN (rt0.c3))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (ROUND((vt0.c0 IN ()), vt0.c0));
SELECT SUM(count) FROM (SELECT ((ROUND((vt0.c0 IN ()), vt0.c0)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (ROUND((vt0.c0 IN ()), vt0.c0));
SELECT SUM(count) FROM (SELECT ((ROUND((vt0.c0 IN ()), vt0.c0)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (ROUND((vt0.c0 IN ()), vt0.c0));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c5)||(rt0.c2)) IN ())) ORDER BY ((rt0.c4)>=((NOT (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c5)||(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c4)>=((NOT (rt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c5)||(rt0.c2)) IN ())) ORDER BY ((rt0.c4)>=((NOT (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c5)||(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c4)>=((NOT (rt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c5)||(rt0.c2)) IN ())) ORDER BY ((rt0.c4)>=((NOT (rt0.c1)))) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (1325471309) ORDER BY CAST(CAST(rt0.c2 AS TEXT) AS NUMERIC) ASC, rt0.c0;
SELECT SUM(count) FROM (SELECT ((1325471309) IS TRUE)  as count FROM rt0 ORDER BY CAST(CAST(rt0.c2 AS TEXT) AS NUMERIC) ASC, rt0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (1325471309) ORDER BY CAST(CAST(rt0.c2 AS TEXT) AS NUMERIC) ASC, rt0.c0;
SELECT SUM(count) FROM (SELECT ((1325471309) IS TRUE)  as count FROM rt0 ORDER BY CAST(CAST(rt0.c2 AS TEXT) AS NUMERIC) ASC, rt0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (1325471309) ORDER BY CAST(CAST(rt0.c2 AS TEXT) AS NUMERIC) ASC, rt0.c0;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c3)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))))<>((((rt0.c5)>(rt0.c1)))))) ORDER BY ((((rt0.c3 COLLATE BINARY)AND('')))AND(((rt0.c3) NOTNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))))<>((((rt0.c5)>(rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c3 COLLATE BINARY)AND('')))AND(((rt0.c3) NOTNULL))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c3)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))))<>((((rt0.c5)>(rt0.c1)))))) ORDER BY ((((rt0.c3 COLLATE BINARY)AND('')))AND(((rt0.c3) NOTNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))))<>((((rt0.c5)>(rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c3 COLLATE BINARY)AND('')))AND(((rt0.c3) NOTNULL))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c3)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))))<>((((rt0.c5)>(rt0.c1)))))) ORDER BY ((((rt0.c3 COLLATE BINARY)AND('')))AND(((rt0.c3) NOTNULL))) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c3 COLLATE BINARY AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c3 COLLATE BINARY AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c3 COLLATE BINARY AS INTEGER));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON rt0.c0 WHERE ((- (((((rt0.c4)OR(vt0.c0)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((((rt0.c4)OR(vt0.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON rt0.c0);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON rt0.c0 WHERE ((- (((((rt0.c4)OR(vt0.c0)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((((rt0.c4)OR(vt0.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON rt0.c0);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON rt0.c0 WHERE ((- (((((rt0.c4)OR(vt0.c0)))AND(rt0.c0)))));
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c0)))&(((vt0.c0)LIKE(vt0.c0))))) ORDER BY ((~ (vt0.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0)))&(((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((~ (vt0.c0)) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c0)))&(((vt0.c0)LIKE(vt0.c0))))) ORDER BY ((~ (vt0.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0)))&(((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((~ (vt0.c0)) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c0)))&(((vt0.c0)LIKE(vt0.c0))))) ORDER BY ((~ (vt0.c0)) IN ()) DESC  NULLS LAST;
SELECT ALL * FROM vt0 NOT INDEXED, rt0 WHERE ('384860987');
SELECT SUM(count) FROM (SELECT ALL (('384860987') IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0 NOT INDEXED, rt0 WHERE ('384860987');
SELECT SUM(count) FROM (SELECT ALL (('384860987') IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0 NOT INDEXED, rt0 WHERE ('384860987');
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3) IS FALSE))%(rt0.c0 COLLATE NOCASE))) ORDER BY ((rt0.c4) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) IS FALSE))%(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c4) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3) IS FALSE))%(rt0.c0 COLLATE NOCASE))) ORDER BY ((rt0.c4) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) IS FALSE))%(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c4) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3) IS FALSE))%(rt0.c0 COLLATE NOCASE))) ORDER BY ((rt0.c4) IS FALSE)  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (RTRIM(((rt0.c4)<<(rt0.c4))));
SELECT SUM(count) FROM (SELECT ((RTRIM(((rt0.c4)<<(rt0.c4)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (RTRIM(((rt0.c4)<<(rt0.c4))));
SELECT SUM(count) FROM (SELECT ((RTRIM(((rt0.c4)<<(rt0.c4)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (RTRIM(((rt0.c4)<<(rt0.c4))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c4, rt0.c4, rt0.c1)) NOT BETWEEN ((CAST(rt0.c1 AS INTEGER), ((rt0.c0) NOTNULL), ((rt0.c2)OR(rt0.c3)))) AND (((rt0.c3 IN ()), 1480776938, ((rt0.c1)||(rt0.c5)))))) ORDER BY ((x'')&(CASE WHEN rt0.c1 THEN rt0.c4 END)), NULL;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4, rt0.c4, rt0.c1)) NOT BETWEEN ((CAST(rt0.c1 AS INTEGER), ((rt0.c0) NOTNULL), ((rt0.c2)OR(rt0.c3)))) AND (((rt0.c3 IN ()), 1480776938, ((rt0.c1)||(rt0.c5)))))) IS TRUE)  as count FROM rt0 ORDER BY ((x'')&(CASE WHEN rt0.c1 THEN rt0.c4 END)), NULL);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c4, rt0.c4, rt0.c1)) NOT BETWEEN ((CAST(rt0.c1 AS INTEGER), ((rt0.c0) NOTNULL), ((rt0.c2)OR(rt0.c3)))) AND (((rt0.c3 IN ()), 1480776938, ((rt0.c1)||(rt0.c5)))))) ORDER BY ((x'')&(CASE WHEN rt0.c1 THEN rt0.c4 END)), NULL;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4, rt0.c4, rt0.c1)) NOT BETWEEN ((CAST(rt0.c1 AS INTEGER), ((rt0.c0) NOTNULL), ((rt0.c2)OR(rt0.c3)))) AND (((rt0.c3 IN ()), 1480776938, ((rt0.c1)||(rt0.c5)))))) IS TRUE)  as count FROM rt0 ORDER BY ((x'')&(CASE WHEN rt0.c1 THEN rt0.c4 END)), NULL);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c4, rt0.c4, rt0.c1)) NOT BETWEEN ((CAST(rt0.c1 AS INTEGER), ((rt0.c0) NOTNULL), ((rt0.c2)OR(rt0.c3)))) AND (((rt0.c3 IN ()), 1480776938, ((rt0.c1)||(rt0.c5)))))) ORDER BY ((x'')&(CASE WHEN rt0.c1 THEN rt0.c4 END)), NULL;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c3) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c3) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c3) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c3) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c3) NOTNULL) COLLATE BINARY);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE ((~ ((rt0.c3 IN ())))) ORDER BY CAST(rt0.c2 COLLATE RTRIM AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((rt0.c3 IN ())))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY CAST(rt0.c2 COLLATE RTRIM AS BLOB) DESC);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE ((~ ((rt0.c3 IN ())))) ORDER BY CAST(rt0.c2 COLLATE RTRIM AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((rt0.c3 IN ())))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY CAST(rt0.c2 COLLATE RTRIM AS BLOB) DESC);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE ((~ ((rt0.c3 IN ())))) ORDER BY CAST(rt0.c2 COLLATE RTRIM AS BLOB) DESC;
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN ((rt0.c4)IS(rt0.c0)) THEN rt0.c5 COLLATE BINARY END WHERE ((+ (rt0.c4))) ORDER BY (((rt0.c5, rt0.c4, rt0.c5)) BETWEEN ((((((x'')OR(vt0.c0)))AND(rt0.c1)), 'uk', CASE WHEN rt0.c5 THEN rt0.c1 END)) AND ((((rt0.c5) IS FALSE), (((rt0.c5)) NOT BETWEEN ((rt0.c2)) AND ((0.6250300343143754))), CAST(rt0.c3 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c4))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN ((rt0.c4)IS(rt0.c0)) THEN rt0.c5 COLLATE BINARY END ORDER BY (((rt0.c5, rt0.c4, rt0.c5)) BETWEEN ((((((x'')OR(vt0.c0)))AND(rt0.c1)), 'uk', CASE WHEN rt0.c5 THEN rt0.c1 END)) AND ((((rt0.c5) IS FALSE), (((rt0.c5)) NOT BETWEEN ((rt0.c2)) AND ((0.6250300343143754))), CAST(rt0.c3 AS REAL)))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN ((rt0.c4)IS(rt0.c0)) THEN rt0.c5 COLLATE BINARY END WHERE ((+ (rt0.c4))) ORDER BY (((rt0.c5, rt0.c4, rt0.c5)) BETWEEN ((((((x'')OR(vt0.c0)))AND(rt0.c1)), 'uk', CASE WHEN rt0.c5 THEN rt0.c1 END)) AND ((((rt0.c5) IS FALSE), (((rt0.c5)) NOT BETWEEN ((rt0.c2)) AND ((0.6250300343143754))), CAST(rt0.c3 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c4))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN ((rt0.c4)IS(rt0.c0)) THEN rt0.c5 COLLATE BINARY END ORDER BY (((rt0.c5, rt0.c4, rt0.c5)) BETWEEN ((((((x'')OR(vt0.c0)))AND(rt0.c1)), 'uk', CASE WHEN rt0.c5 THEN rt0.c1 END)) AND ((((rt0.c5) IS FALSE), (((rt0.c5)) NOT BETWEEN ((rt0.c2)) AND ((0.6250300343143754))), CAST(rt0.c3 AS REAL)))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN ((rt0.c4)IS(rt0.c0)) THEN rt0.c5 COLLATE BINARY END WHERE ((+ (rt0.c4))) ORDER BY (((rt0.c5, rt0.c4, rt0.c5)) BETWEEN ((((((x'')OR(vt0.c0)))AND(rt0.c1)), 'uk', CASE WHEN rt0.c5 THEN rt0.c1 END)) AND ((((rt0.c5) IS FALSE), (((rt0.c5)) NOT BETWEEN ((rt0.c2)) AND ((0.6250300343143754))), CAST(rt0.c3 AS REAL))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((- (((rt0.c0) NOT BETWEEN (rt0.c2) AND (x'5722')))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c0) NOT BETWEEN (rt0.c2) AND (x'5722'))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((- (((rt0.c0) NOT BETWEEN (rt0.c2) AND (x'5722')))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c0) NOT BETWEEN (rt0.c2) AND (x'5722'))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((- (((rt0.c0) NOT BETWEEN (rt0.c2) AND (x'5722')))));
SELECT COUNT(*) FROM rt0 WHERE ((((- (rt0.c3))) IS TRUE)) ORDER BY (((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c3))) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c0)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((- (rt0.c3))) IS TRUE)) ORDER BY (((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c3))) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c0)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((- (rt0.c3))) IS TRUE)) ORDER BY (((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c0)) IN ())  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c4)LIKE(CAST(vt0.c0 AS REAL)))) ORDER BY CAST(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c5 ELSE rt0.c5 END AS INTEGER) DESC  NULLS LAST, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4)LIKE(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c5 ELSE rt0.c5 END AS INTEGER) DESC  NULLS LAST, NULL  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c4)LIKE(CAST(vt0.c0 AS REAL)))) ORDER BY CAST(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c5 ELSE rt0.c5 END AS INTEGER) DESC  NULLS LAST, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4)LIKE(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c5 ELSE rt0.c5 END AS INTEGER) DESC  NULLS LAST, NULL  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c4)LIKE(CAST(vt0.c0 AS REAL)))) ORDER BY CAST(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c5 ELSE rt0.c5 END AS INTEGER) DESC  NULLS LAST, NULL  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c4)) IN ())) ORDER BY (((('␬!/_-hf')AND(CASE rt0.c4  WHEN rt0.c4 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c5 THEN vt0.c0 ELSE 0x4c9e8c4c END)))OR((rt0.c1 IN (rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c4)) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((('␬!/_-hf')AND(CASE rt0.c4  WHEN rt0.c4 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c5 THEN vt0.c0 ELSE 0X4c9e8c4c END)))OR((rt0.c1 IN (rt0.c0)))) DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c4)) IN ())) ORDER BY (((('␬!/_-hf')AND(CASE rt0.c4  WHEN rt0.c4 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c5 THEN vt0.c0 ELSE 0x4c9e8c4c END)))OR((rt0.c1 IN (rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c4)) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((('␬!/_-hf')AND(CASE rt0.c4  WHEN rt0.c4 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c5 THEN vt0.c0 ELSE 0X4c9e8c4c END)))OR((rt0.c1 IN (rt0.c0)))) DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c4)) IN ())) ORDER BY (((('␬!/_-hf')AND(CASE rt0.c4  WHEN rt0.c4 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c5 THEN vt0.c0 ELSE 0x4c9e8c4c END)))OR((rt0.c1 IN (rt0.c0)))) DESC;
SELECT * FROM rt0, vt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (rt0.c3);
SELECT ALL * FROM vt0 WHERE ((~ (((((vt0.c0)AND(0X196b3609)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((vt0.c0)AND(0X196b3609)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL * FROM vt0 WHERE ((~ (((((vt0.c0)AND(0X196b3609)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((vt0.c0)AND(0X196b3609)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL * FROM vt0 WHERE ((~ (((((vt0.c0)AND(0X196b3609)))AND(vt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE ('') ORDER BY (~ (((0.19813344091436624) NOT BETWEEN (rt0.c0) AND (rt0.c4))))  NULLS FIRST, (((((rt0.c0)=(NULL)), CAST(NULL AS NUMERIC), ((rt0.c2)<(rt0.c5))))<>((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c5 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c5 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c5 WHEN rt0.c4 THEN rt0.c1 END, IFNULL(DISTINCT rt0.c2, rt0.c2), rt0.c4 COLLATE RTRIM))) DESC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0 ORDER BY (~ (((0.19813344091436624) NOT BETWEEN (rt0.c0) AND (rt0.c4))))  NULLS FIRST, (((((rt0.c0)=(NULL)), CAST(NULL AS NUMERIC), ((rt0.c2)<(rt0.c5))))!=((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c5 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c5 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c5 WHEN rt0.c4 THEN rt0.c1 END, IFNULL(DISTINCT rt0.c2, rt0.c2), rt0.c4 COLLATE RTRIM))) DESC);
SELECT COUNT(*) FROM rt0 WHERE ('') ORDER BY (~ (((0.19813344091436624) NOT BETWEEN (rt0.c0) AND (rt0.c4))))  NULLS FIRST, (((((rt0.c0)=(NULL)), CAST(NULL AS NUMERIC), ((rt0.c2)<(rt0.c5))))<>((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c5 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c5 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c5 WHEN rt0.c4 THEN rt0.c1 END, IFNULL(DISTINCT rt0.c2, rt0.c2), rt0.c4 COLLATE RTRIM))) DESC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0 ORDER BY (~ (((0.19813344091436624) NOT BETWEEN (rt0.c0) AND (rt0.c4))))  NULLS FIRST, (((((rt0.c0)=(NULL)), CAST(NULL AS NUMERIC), ((rt0.c2)<(rt0.c5))))!=((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c5 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c5 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c5 WHEN rt0.c4 THEN rt0.c1 END, IFNULL(DISTINCT rt0.c2, rt0.c2), rt0.c4 COLLATE RTRIM))) DESC);
SELECT COUNT(*) FROM rt0 WHERE ('') ORDER BY (~ (((0.19813344091436624) NOT BETWEEN (rt0.c0) AND (rt0.c4))))  NULLS FIRST, (((((rt0.c0)=(NULL)), CAST(NULL AS NUMERIC), ((rt0.c2)<(rt0.c5))))<>((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c5 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c5 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c5 WHEN rt0.c4 THEN rt0.c1 END, IFNULL(DISTINCT rt0.c2, rt0.c2), rt0.c4 COLLATE RTRIM))) DESC;
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c1) ISNULL)) ISNULL) WHERE ((- (NULL)));
SELECT SUM(count) FROM (SELECT (((- (NULL))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c1) ISNULL)) ISNULL));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c1) ISNULL)) ISNULL) WHERE ((- (NULL)));
SELECT SUM(count) FROM (SELECT (((- (NULL))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c1) ISNULL)) ISNULL));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c1) ISNULL)) ISNULL) WHERE ((- (NULL)));
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0, rt0.c5, rt0.c1))!=((rt0.c5, rt0.c4, '-722233991')))) NOTNULL)) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c4))) BETWEEN (rt0.c1) AND ((((rt0.c4))<((rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, rt0.c5, rt0.c1))<>((rt0.c5, rt0.c4, '-722233991')))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c4))) BETWEEN (rt0.c1) AND ((((rt0.c4))<((rt0.c2))))));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0, rt0.c5, rt0.c1))!=((rt0.c5, rt0.c4, '-722233991')))) NOTNULL)) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c4))) BETWEEN (rt0.c1) AND ((((rt0.c4))<((rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, rt0.c5, rt0.c1))<>((rt0.c5, rt0.c4, '-722233991')))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c4))) BETWEEN (rt0.c1) AND ((((rt0.c4))<((rt0.c2))))));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0, rt0.c5, rt0.c1))!=((rt0.c5, rt0.c4, '-722233991')))) NOTNULL)) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c4))) BETWEEN (rt0.c1) AND ((((rt0.c4))<((rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS((vt0.c0 IN ()))));
SELECT * FROM rt0 WHERE (CAST(((rt0.c3)IS NOT(rt0.c5)) AS BLOB)) ORDER BY (((((rt0.c1))!=((rt0.c0)))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c3)IS NOT(rt0.c5)) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1))!=((rt0.c0)))) NOT NULL) DESC);
SELECT * FROM rt0 WHERE (CAST(((rt0.c3)IS NOT(rt0.c5)) AS BLOB)) ORDER BY (((((rt0.c1))!=((rt0.c0)))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c3)IS NOT(rt0.c5)) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1))!=((rt0.c0)))) NOT NULL) DESC);
SELECT * FROM rt0 WHERE (CAST(((rt0.c3)IS NOT(rt0.c5)) AS BLOB)) ORDER BY (((((rt0.c1))!=((rt0.c0)))) NOT NULL) DESC;
SELECT ALL * FROM rt0, vt0 WHERE ((+ (((vt0.c0)==(rt0.c1))))) ORDER BY CASE ((rt0.c2)>(rt0.c3))  WHEN ((rt0.c4) IS TRUE) THEN (((vt0.c0, rt0.c1, rt0.c5))<((rt0.c3, rt0.c0, rt0.c4))) END, x'e800' DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)==(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE ((rt0.c2)>(rt0.c3))  WHEN ((rt0.c4) IS TRUE) THEN (((vt0.c0, rt0.c1, rt0.c5))<((rt0.c3, rt0.c0, rt0.c4))) END, x'e800' DESC);
SELECT ALL * FROM rt0, vt0 WHERE ((+ (((vt0.c0)==(rt0.c1))))) ORDER BY CASE ((rt0.c2)>(rt0.c3))  WHEN ((rt0.c4) IS TRUE) THEN (((vt0.c0, rt0.c1, rt0.c5))<((rt0.c3, rt0.c0, rt0.c4))) END, x'e800' DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)==(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE ((rt0.c2)>(rt0.c3))  WHEN ((rt0.c4) IS TRUE) THEN (((vt0.c0, rt0.c1, rt0.c5))<((rt0.c3, rt0.c0, rt0.c4))) END, x'e800' DESC);
SELECT ALL * FROM rt0, vt0 WHERE ((+ (((vt0.c0)==(rt0.c1))))) ORDER BY CASE ((rt0.c2)>(rt0.c3))  WHEN ((rt0.c4) IS TRUE) THEN (((vt0.c0, rt0.c1, rt0.c5))<((rt0.c3, rt0.c0, rt0.c4))) END, x'e800' DESC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c1) BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (NULL COLLATE NOCASE))) ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3)))) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (NULL COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3)))) NOT NULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c1) BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (NULL COLLATE NOCASE))) ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3)))) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (NULL COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3)))) NOT NULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c1) BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (NULL COLLATE NOCASE))) ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3)))) NOT NULL) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((((((rt0.c2)>(vt0.c0)))OR(((((x'dc3b')OR(rt0.c0)))AND(rt0.c5)))))AND((('1966290906')<<(0Xffffffff973fa9d9)))))OR(CASE WHEN rt0.c5 THEN rt0.c5 ELSE rt0.c2 END)))AND(((rt0.c2)*(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2)>(vt0.c0)))OR(((((x'dc3b')OR(rt0.c0)))AND(rt0.c5)))))AND((('1966290906')<<(0Xffffffff973fa9d9)))))OR(CASE WHEN rt0.c5 THEN rt0.c5 ELSE rt0.c2 END)))AND(((rt0.c2)*(rt0.c3))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((((((rt0.c2)>(vt0.c0)))OR(((((x'dc3b')OR(rt0.c0)))AND(rt0.c5)))))AND((('1966290906')<<(0Xffffffff973fa9d9)))))OR(CASE WHEN rt0.c5 THEN rt0.c5 ELSE rt0.c2 END)))AND(((rt0.c2)*(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2)>(vt0.c0)))OR(((((x'dc3b')OR(rt0.c0)))AND(rt0.c5)))))AND((('1966290906')<<(0Xffffffff973fa9d9)))))OR(CASE WHEN rt0.c5 THEN rt0.c5 ELSE rt0.c2 END)))AND(((rt0.c2)*(rt0.c3))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((((((rt0.c2)>(vt0.c0)))OR(((((x'dc3b')OR(rt0.c0)))AND(rt0.c5)))))AND((('1966290906')<<(0Xffffffff973fa9d9)))))OR(CASE WHEN rt0.c5 THEN rt0.c5 ELSE rt0.c2 END)))AND(((rt0.c2)*(rt0.c3)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((((((((((((rt0.c0)AND(((rt0.c4)LIKE('-1340943919')))))AND(CASE x''  WHEN rt0.c2 THEN rt0.c0 END)))AND(LOWER(DISTINCT rt0.c1))))AND(((((rt0.c4)OR(rt0.c3)))AND(rt0.c2)))))AND(((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)))))OR(((rt0.c2)IS(rt0.c1)))) WHERE (((rt0.c1) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) ISNULL)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((((((((((rt0.c0)AND(((rt0.c4)LIKE('-1340943919')))))AND(CASE x''  WHEN rt0.c2 THEN rt0.c0 END)))AND(LOWER(DISTINCT rt0.c1))))AND(((((rt0.c4)OR(rt0.c3)))AND(rt0.c2)))))AND(((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)))))OR(((rt0.c2)IS(rt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((((((((((((rt0.c0)AND(((rt0.c4)LIKE('-1340943919')))))AND(CASE x''  WHEN rt0.c2 THEN rt0.c0 END)))AND(LOWER(DISTINCT rt0.c1))))AND(((((rt0.c4)OR(rt0.c3)))AND(rt0.c2)))))AND(((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)))))OR(((rt0.c2)IS(rt0.c1)))) WHERE (((rt0.c1) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) ISNULL)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((((((((((rt0.c0)AND(((rt0.c4)LIKE('-1340943919')))))AND(CASE x''  WHEN rt0.c2 THEN rt0.c0 END)))AND(LOWER(DISTINCT rt0.c1))))AND(((((rt0.c4)OR(rt0.c3)))AND(rt0.c2)))))AND(((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)))))OR(((rt0.c2)IS(rt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((((((((((((rt0.c0)AND(((rt0.c4)LIKE('-1340943919')))))AND(CASE x''  WHEN rt0.c2 THEN rt0.c0 END)))AND(LOWER(DISTINCT rt0.c1))))AND(((((rt0.c4)OR(rt0.c3)))AND(rt0.c2)))))AND(((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)))))OR(((rt0.c2)IS(rt0.c1)))) WHERE (((rt0.c1) ISNULL));
SELECT ALL * FROM rt0, vt0 WHERE (CASE rt0.c0  WHEN rt0.c5 THEN vt0.c0 ELSE rt0.c3 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN rt0.c5 THEN vt0.c0 ELSE rt0.c3 END COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CASE rt0.c0  WHEN rt0.c5 THEN vt0.c0 ELSE rt0.c3 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN rt0.c5 THEN vt0.c0 ELSE rt0.c3 END COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CASE rt0.c0  WHEN rt0.c5 THEN vt0.c0 ELSE rt0.c3 END COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((('80160385')) BETWEEN ((CASE WHEN x'ab84' THEN vt0.c0 END)) AND ((((rt0.c0) ISNULL))))) ORDER BY ((((((((rt0.c1)AND((rt0.c0 IN (rt0.c2)))))AND((rt0.c0 IN (vt0.c0, vt0.c0, rt0.c4)))))AND(CHAR(rt0.c4))))OR(TYPEOF(DISTINCT rt0.c5))) DESC, x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((('80160385')) BETWEEN ((CASE WHEN x'ab84' THEN vt0.c0 END)) AND ((((rt0.c0) ISNULL))))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0 ORDER BY ((((((((rt0.c1)AND((rt0.c0 IN (rt0.c2)))))AND((rt0.c0 IN (vt0.c0, vt0.c0, rt0.c4)))))AND(CHAR(rt0.c4))))OR(TYPEOF(DISTINCT rt0.c5))) DESC, x'' ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((('80160385')) BETWEEN ((CASE WHEN x'ab84' THEN vt0.c0 END)) AND ((((rt0.c0) ISNULL))))) ORDER BY ((((((((rt0.c1)AND((rt0.c0 IN (rt0.c2)))))AND((rt0.c0 IN (vt0.c0, vt0.c0, rt0.c4)))))AND(CHAR(rt0.c4))))OR(TYPEOF(DISTINCT rt0.c5))) DESC, x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((('80160385')) BETWEEN ((CASE WHEN x'ab84' THEN vt0.c0 END)) AND ((((rt0.c0) ISNULL))))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0 ORDER BY ((((((((rt0.c1)AND((rt0.c0 IN (rt0.c2)))))AND((rt0.c0 IN (vt0.c0, vt0.c0, rt0.c4)))))AND(CHAR(rt0.c4))))OR(TYPEOF(DISTINCT rt0.c5))) DESC, x'' ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((('80160385')) BETWEEN ((CASE WHEN x'ab84' THEN vt0.c0 END)) AND ((((rt0.c0) ISNULL))))) ORDER BY ((((((((rt0.c1)AND((rt0.c0 IN (rt0.c2)))))AND((rt0.c0 IN (vt0.c0, vt0.c0, rt0.c4)))))AND(CHAR(rt0.c4))))OR(TYPEOF(DISTINCT rt0.c5))) DESC, x'' ASC;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (((vt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c4 THEN rt0.c2 END)) AND ((CAST(vt0.c0 AS INTEGER)))) WHERE (((((('-352749426')<(rt0.c5)), '-1825632379', '].'))<=((rt0.c5, NULLIF(DISTINCT rt0.c0, rt0.c1), ((rt0.c4) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((('-352749426')<(rt0.c5)), '-1825632379', '].'))<=((rt0.c5, NULLIF(DISTINCT rt0.c0, rt0.c1), ((rt0.c4) NOTNULL))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((vt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c4 THEN rt0.c2 END)) AND ((CAST(vt0.c0 AS INTEGER)))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (((vt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c4 THEN rt0.c2 END)) AND ((CAST(vt0.c0 AS INTEGER)))) WHERE (((((('-352749426')<(rt0.c5)), '-1825632379', '].'))<=((rt0.c5, NULLIF(DISTINCT rt0.c0, rt0.c1), ((rt0.c4) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((('-352749426')<(rt0.c5)), '-1825632379', '].'))<=((rt0.c5, NULLIF(DISTINCT rt0.c0, rt0.c1), ((rt0.c4) NOTNULL))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((vt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c4 THEN rt0.c2 END)) AND ((CAST(vt0.c0 AS INTEGER)))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (((vt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c4 THEN rt0.c2 END)) AND ((CAST(vt0.c0 AS INTEGER)))) WHERE (((((('-352749426')<(rt0.c5)), '-1825632379', '].'))<=((rt0.c5, NULLIF(DISTINCT rt0.c0, rt0.c1), ((rt0.c4) NOTNULL)))));
SELECT COUNT(*) FROM rt0 WHERE ((+ (((((rt0.c5)AND(rt0.c1)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((rt0.c5)AND(rt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((+ (((((rt0.c5)AND(rt0.c1)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((rt0.c5)AND(rt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((+ (((((rt0.c5)AND(rt0.c1)))AND(rt0.c0)))));
SELECT * FROM vt0, rt0 WHERE ((NULLIF(DISTINCT rt0.c1, vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((NULLIF(DISTINCT rt0.c1, vt0.c0) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((NULLIF(DISTINCT rt0.c1, vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((NULLIF(DISTINCT rt0.c1, vt0.c0) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((NULLIF(DISTINCT rt0.c1, vt0.c0) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)))>=(((((((((x'')AND(rt0.c5)))OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c5)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)))>=(((((((((x'')AND(rt0.c5)))OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c5))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)))>=(((((((((x'')AND(rt0.c5)))OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c5)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)))>=(((((((((x'')AND(rt0.c5)))OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c5))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)))>=(((((((((x'')AND(rt0.c5)))OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c5)))));
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c3)||(rt0.c0)))OR(CAST(vt0.c0 AS NUMERIC)))) ORDER BY CASE WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN rt0.c0 WHEN CAST(rt0.c0 AS NUMERIC) THEN ((((rt0.c4)AND(rt0.c0)))AND(rt0.c4)) WHEN (((vt0.c0))=((rt0.c0))) THEN (- (x'c28d311c')) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)||(rt0.c0)))OR(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN rt0.c0 WHEN CAST(rt0.c0 AS NUMERIC) THEN ((((rt0.c4)AND(rt0.c0)))AND(rt0.c4)) WHEN (((vt0.c0))=((rt0.c0))) THEN (- (x'c28d311c')) END DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c3)||(rt0.c0)))OR(CAST(vt0.c0 AS NUMERIC)))) ORDER BY CASE WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN rt0.c0 WHEN CAST(rt0.c0 AS NUMERIC) THEN ((((rt0.c4)AND(rt0.c0)))AND(rt0.c4)) WHEN (((vt0.c0))=((rt0.c0))) THEN (- (x'c28d311c')) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)||(rt0.c0)))OR(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN rt0.c0 WHEN CAST(rt0.c0 AS NUMERIC) THEN ((((rt0.c4)AND(rt0.c0)))AND(rt0.c4)) WHEN (((vt0.c0))=((rt0.c0))) THEN (- (x'c28d311c')) END DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c3)||(rt0.c0)))OR(CAST(vt0.c0 AS NUMERIC)))) ORDER BY CASE WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN rt0.c0 WHEN CAST(rt0.c0 AS NUMERIC) THEN ((((rt0.c4)AND(rt0.c0)))AND(rt0.c4)) WHEN (((vt0.c0))=((rt0.c0))) THEN (- (x'c28d311c')) END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3)<=(rt0.c2)))>>(((rt0.c0) IS FALSE)))) ORDER BY ((((((((((rt0.c5)AND(rt0.c4)))OR(rt0.c5)))AND(rt0.c1)))OR(rt0.c1)))<(LIKELIHOOD(rt0.c1, 0.017859818585712728))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)<=(rt0.c2)))>>(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c5)AND(rt0.c4)))OR(rt0.c5)))AND(rt0.c1)))OR(rt0.c1)))<(LIKELIHOOD(rt0.c1, 0.017859818585712728))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3)<=(rt0.c2)))>>(((rt0.c0) IS FALSE)))) ORDER BY ((((((((((rt0.c5)AND(rt0.c4)))OR(rt0.c5)))AND(rt0.c1)))OR(rt0.c1)))<(LIKELIHOOD(rt0.c1, 0.017859818585712728))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)<=(rt0.c2)))>>(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c5)AND(rt0.c4)))OR(rt0.c5)))AND(rt0.c1)))OR(rt0.c1)))<(LIKELIHOOD(rt0.c1, 0.017859818585712728))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3)<=(rt0.c2)))>>(((rt0.c0) IS FALSE)))) ORDER BY ((((((((((rt0.c5)AND(rt0.c4)))OR(rt0.c5)))AND(rt0.c1)))OR(rt0.c1)))<(LIKELIHOOD(rt0.c1, 0.017859818585712728))) ASC;
SELECT * FROM vt0, rt0 WHERE (((((rt0.c4 IN ())))<>((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c3 END)))) ORDER BY (((rt0.c5 IN ())) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((((rt0.c4 IN ())))<>((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c3 END)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c5 IN ())) NOT NULL));
SELECT * FROM vt0, rt0 WHERE (((((rt0.c4 IN ())))<>((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c3 END)))) ORDER BY (((rt0.c5 IN ())) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((((rt0.c4 IN ())))<>((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c3 END)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c5 IN ())) NOT NULL));
SELECT * FROM vt0, rt0 WHERE (((((rt0.c4 IN ())))<>((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c3 END)))) ORDER BY (((rt0.c5 IN ())) NOT NULL);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)<(vt0.c0)) AS BLOB)) ORDER BY (-1093747121 IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)<(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (-1093747121 IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)<(vt0.c0)) AS BLOB)) ORDER BY (-1093747121 IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)<(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (-1093747121 IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)<(vt0.c0)) AS BLOB)) ORDER BY (-1093747121 IN ()) DESC  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE (((((0.4070313395520333)AND(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c4 ELSE 0.89088023493919 END)))AND(rt0.c5)));
SELECT SUM(count) FROM (SELECT ALL ((((((0.4070313395520333)AND(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c4 ELSE 0.89088023493919 END)))AND(rt0.c5))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((0.4070313395520333)AND(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c4 ELSE 0.89088023493919 END)))AND(rt0.c5)));
SELECT SUM(count) FROM (SELECT ALL ((((((0.4070313395520333)AND(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c4 ELSE 0.89088023493919 END)))AND(rt0.c5))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((0.4070313395520333)AND(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c4 ELSE 0.89088023493919 END)))AND(rt0.c5)));
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.48412933763389954 ELSE vt0.c0 END)AND((- (vt0.c0))))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0 IN ('0.3713386563633988', vt0.c0)), x'dec684c1', ((vt0.c0)GLOB(vt0.c0)))) AND ((((vt0.c0)&(vt0.c0)), vt0.c0 COLLATE NOCASE, ((vt0.c0)<=(vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.48412933763389954 ELSE vt0.c0 END)AND((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0 IN ('0.3713386563633988', vt0.c0)), x'dec684c1', ((vt0.c0)GLOB(vt0.c0)))) AND ((((vt0.c0)&(vt0.c0)), vt0.c0 COLLATE NOCASE, ((vt0.c0)<=(vt0.c0))))) DESC);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.48412933763389954 ELSE vt0.c0 END)AND((- (vt0.c0))))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0 IN ('0.3713386563633988', vt0.c0)), x'dec684c1', ((vt0.c0)GLOB(vt0.c0)))) AND ((((vt0.c0)&(vt0.c0)), vt0.c0 COLLATE NOCASE, ((vt0.c0)<=(vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.48412933763389954 ELSE vt0.c0 END)AND((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0 IN ('0.3713386563633988', vt0.c0)), x'dec684c1', ((vt0.c0)GLOB(vt0.c0)))) AND ((((vt0.c0)&(vt0.c0)), vt0.c0 COLLATE NOCASE, ((vt0.c0)<=(vt0.c0))))) DESC);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.48412933763389954 ELSE vt0.c0 END)AND((- (vt0.c0))))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0 IN ('0.3713386563633988', vt0.c0)), x'dec684c1', ((vt0.c0)GLOB(vt0.c0)))) AND ((((vt0.c0)&(vt0.c0)), vt0.c0 COLLATE NOCASE, ((vt0.c0)<=(vt0.c0))))) DESC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2 COLLATE NOCASE)>=(((rt0.c1)>=(vt0.c0))))) ORDER BY ((rt0.c3 COLLATE RTRIM) BETWEEN (rt0.c2 COLLATE NOCASE) AND ((((rt0.c2))>((rt0.c5))))), (+ (((rt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE)>=(((rt0.c1)>=(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c3 COLLATE RTRIM) BETWEEN (rt0.c2 COLLATE NOCASE) AND ((((rt0.c2))>((rt0.c5))))), (+ (((rt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2 COLLATE NOCASE)>=(((rt0.c1)>=(vt0.c0))))) ORDER BY ((rt0.c3 COLLATE RTRIM) BETWEEN (rt0.c2 COLLATE NOCASE) AND ((((rt0.c2))>((rt0.c5))))), (+ (((rt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE)>=(((rt0.c1)>=(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c3 COLLATE RTRIM) BETWEEN (rt0.c2 COLLATE NOCASE) AND ((((rt0.c2))>((rt0.c5))))), (+ (((rt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2 COLLATE NOCASE)>=(((rt0.c1)>=(vt0.c0))))) ORDER BY ((rt0.c3 COLLATE RTRIM) BETWEEN (rt0.c2 COLLATE NOCASE) AND ((((rt0.c2))>((rt0.c5))))), (+ (((rt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c2))))  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE ('<GNiQuXc');
SELECT SUM(count) FROM (SELECT ALL (('<GNiQuXc') IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ('<GNiQuXc');
SELECT SUM(count) FROM (SELECT ALL (('<GNiQuXc') IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ('<GNiQuXc');
SELECT ALL * FROM rt0 WHERE ((((((rt0.c5)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c5)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c5)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c5)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c5)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) NOT NULL));
SELECT ALL * FROM rt0 WHERE (CASE (rt0.c4 IN ())  WHEN CASE rt0.c2  WHEN rt0.c5 THEN rt0.c1 END THEN CASE rt0.c4  WHEN rt0.c4 THEN rt0.c1 END WHEN NULL COLLATE NOCASE THEN -1.819284227E9 WHEN rt0.c4 COLLATE BINARY THEN SQLITE_SOURCE_ID() ELSE ((rt0.c2) NOTNULL) END) ORDER BY ((CASE rt0.c3  WHEN rt0.c5 THEN rt0.c4 END) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c4 IN ())  WHEN CASE rt0.c2  WHEN rt0.c5 THEN rt0.c1 END THEN CASE rt0.c4  WHEN rt0.c4 THEN rt0.c1 END WHEN NULL COLLATE NOCASE THEN -1.819284227E9 WHEN rt0.c4 COLLATE BINARY THEN SQLITE_SOURCE_ID() ELSE ((rt0.c2) NOTNULL) END) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c3  WHEN rt0.c5 THEN rt0.c4 END) ISNULL) ASC);
SELECT ALL * FROM rt0 WHERE (CASE (rt0.c4 IN ())  WHEN CASE rt0.c2  WHEN rt0.c5 THEN rt0.c1 END THEN CASE rt0.c4  WHEN rt0.c4 THEN rt0.c1 END WHEN NULL COLLATE NOCASE THEN -1.819284227E9 WHEN rt0.c4 COLLATE BINARY THEN SQLITE_SOURCE_ID() ELSE ((rt0.c2) NOTNULL) END) ORDER BY ((CASE rt0.c3  WHEN rt0.c5 THEN rt0.c4 END) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c4 IN ())  WHEN CASE rt0.c2  WHEN rt0.c5 THEN rt0.c1 END THEN CASE rt0.c4  WHEN rt0.c4 THEN rt0.c1 END WHEN NULL COLLATE NOCASE THEN -1.819284227E9 WHEN rt0.c4 COLLATE BINARY THEN SQLITE_SOURCE_ID() ELSE ((rt0.c2) NOTNULL) END) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c3  WHEN rt0.c5 THEN rt0.c4 END) ISNULL) ASC);
SELECT ALL * FROM rt0 WHERE (CASE (rt0.c4 IN ())  WHEN CASE rt0.c2  WHEN rt0.c5 THEN rt0.c1 END THEN CASE rt0.c4  WHEN rt0.c4 THEN rt0.c1 END WHEN NULL COLLATE NOCASE THEN -1.819284227E9 WHEN rt0.c4 COLLATE BINARY THEN SQLITE_SOURCE_ID() ELSE ((rt0.c2) NOTNULL) END) ORDER BY ((CASE rt0.c3  WHEN rt0.c5 THEN rt0.c4 END) ISNULL) ASC;
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((((rt0.c5)*(rt0.c3)))+(((rt0.c4) NOTNULL))) WHERE (ABS(DISTINCT rt0.c3 COLLATE NOCASE)) ORDER BY json_array_length(((rt0.c5) IS TRUE), (NULL IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT rt0.c3 COLLATE NOCASE)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((rt0.c5)*(rt0.c3)))+(((rt0.c4) NOTNULL))) ORDER BY json_array_length(((rt0.c5) IS TRUE), (NULL IN ()))  NULLS LAST);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((((rt0.c5)*(rt0.c3)))+(((rt0.c4) NOTNULL))) WHERE (ABS(DISTINCT rt0.c3 COLLATE NOCASE)) ORDER BY json_array_length(((rt0.c5) IS TRUE), (NULL IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT rt0.c3 COLLATE NOCASE)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((rt0.c5)*(rt0.c3)))+(((rt0.c4) NOTNULL))) ORDER BY json_array_length(((rt0.c5) IS TRUE), (NULL IN ()))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c3) ORDER BY ((((((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)))OR((rt0.c5 IN ()))))OR(CAST(rt0.c0 AS NUMERIC))))OR(rt0.c2)))OR(CAST(rt0.c1 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)))OR((rt0.c5 IN ()))))OR(CAST(rt0.c0 AS NUMERIC))))OR(rt0.c2)))OR(CAST(rt0.c1 AS BLOB)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c3) ORDER BY ((((((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)))OR((rt0.c5 IN ()))))OR(CAST(rt0.c0 AS NUMERIC))))OR(rt0.c2)))OR(CAST(rt0.c1 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)))OR((rt0.c5 IN ()))))OR(CAST(rt0.c0 AS NUMERIC))))OR(rt0.c2)))OR(CAST(rt0.c1 AS BLOB)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c3) ORDER BY ((((((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)))OR((rt0.c5 IN ()))))OR(CAST(rt0.c0 AS NUMERIC))))OR(rt0.c2)))OR(CAST(rt0.c1 AS BLOB)))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (NULLIF(rt0.c2 COLLATE BINARY, CASE WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c5 END)) ORDER BY TYPEOF(DISTINCT ((rt0.c3)<(vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(rt0.c2 COLLATE BINARY, CASE WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c5 END)) IS TRUE)  as count FROM rt0, vt0 ORDER BY TYPEOF(DISTINCT ((rt0.c3)<(vt0.c0))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (NULLIF(rt0.c2 COLLATE BINARY, CASE WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c5 END)) ORDER BY TYPEOF(DISTINCT ((rt0.c3)<(vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(rt0.c2 COLLATE BINARY, CASE WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c5 END)) IS TRUE)  as count FROM rt0, vt0 ORDER BY TYPEOF(DISTINCT ((rt0.c3)<(vt0.c0))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (NULLIF(rt0.c2 COLLATE BINARY, CASE WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c5 END)) ORDER BY TYPEOF(DISTINCT ((rt0.c3)<(vt0.c0))) DESC  NULLS FIRST;
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (rt0.c3) ORDER BY (~ (CAST(rt0.c5 AS INTEGER))), ((((rt0.c0) ISNULL)) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c5 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END) AND ((rt0.c3 IN ()))) DESC, ((((rt0.c2)*(vt0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY (~ (CAST(rt0.c5 AS INTEGER))), ((((rt0.c0) ISNULL)) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c5 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END) AND ((rt0.c3 IN ()))) DESC, ((((rt0.c2)*(vt0.c0))) IS TRUE));
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (rt0.c3) ORDER BY (~ (CAST(rt0.c5 AS INTEGER))), ((((rt0.c0) ISNULL)) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c5 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END) AND ((rt0.c3 IN ()))) DESC, ((((rt0.c2)*(vt0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY (~ (CAST(rt0.c5 AS INTEGER))), ((((rt0.c0) ISNULL)) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c5 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END) AND ((rt0.c3 IN ()))) DESC, ((((rt0.c2)*(vt0.c0))) IS TRUE));
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (rt0.c3) ORDER BY (~ (CAST(rt0.c5 AS INTEGER))), ((((rt0.c0) ISNULL)) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c5 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END) AND ((rt0.c3 IN ()))) DESC, ((((rt0.c2)*(vt0.c0))) IS TRUE);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) NOTNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOTNULL) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) NOTNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOTNULL) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) NOTNULL) AS BLOB));
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c4)) AS INTEGER)) ORDER BY CHAR(x'', ((rt0.c5)IS(0.11771072551910844)), CAST(rt0.c4 AS TEXT)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c4)) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY CHAR(x'', ((rt0.c5)IS(0.11771072551910844)), CAST(rt0.c4 AS TEXT)) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c4)) AS INTEGER)) ORDER BY CHAR(x'', ((rt0.c5)IS(0.11771072551910844)), CAST(rt0.c4 AS TEXT)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c4)) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY CHAR(x'', ((rt0.c5)IS(0.11771072551910844)), CAST(rt0.c4 AS TEXT)) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c4)) AS INTEGER)) ORDER BY CHAR(x'', ((rt0.c5)IS(0.11771072551910844)), CAST(rt0.c4 AS TEXT)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE ((- (7.47016263E8))) ORDER BY HEX(DISTINCT ((vt0.c0)/(x'')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (7.47016263E8))) IS TRUE)  as count FROM vt0 ORDER BY HEX(DISTINCT ((vt0.c0)/(x'')))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((- (7.47016263E8))) ORDER BY HEX(DISTINCT ((vt0.c0)/(x'')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (7.47016263E8))) IS TRUE)  as count FROM vt0 ORDER BY HEX(DISTINCT ((vt0.c0)/(x'')))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((- (7.47016263E8))) ORDER BY HEX(DISTINCT ((vt0.c0)/(x'')))  NULLS LAST;
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON ((((((rt0.c0)<>('695886118')))AND(((rt0.c5)>=(rt0.c4)))))AND((rt0.c1 IN ()))) WHERE (COALESCE((~ (rt0.c3)), ((-1876122038) BETWEEN (rt0.c2) AND (rt0.c4)))) ORDER BY (- (CASE WHEN rt0.c3 THEN rt0.c3 END)), CASE rt0.c4  WHEN rt0.c5 THEN '' END COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE((~ (rt0.c3)), ((-1876122038) BETWEEN (rt0.c2) AND (rt0.c4)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((((((rt0.c0)!=('695886118')))AND(((rt0.c5)>=(rt0.c4)))))AND((rt0.c1 IN ()))) ORDER BY (- (CASE WHEN rt0.c3 THEN rt0.c3 END)), CASE rt0.c4  WHEN rt0.c5 THEN '' END COLLATE RTRIM DESC);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON ((((((rt0.c0)<>('695886118')))AND(((rt0.c5)>=(rt0.c4)))))AND((rt0.c1 IN ()))) WHERE (COALESCE((~ (rt0.c3)), ((-1876122038) BETWEEN (rt0.c2) AND (rt0.c4)))) ORDER BY (- (CASE WHEN rt0.c3 THEN rt0.c3 END)), CASE rt0.c4  WHEN rt0.c5 THEN '' END COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE((~ (rt0.c3)), ((-1876122038) BETWEEN (rt0.c2) AND (rt0.c4)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((((((rt0.c0)!=('695886118')))AND(((rt0.c5)>=(rt0.c4)))))AND((rt0.c1 IN ()))) ORDER BY (- (CASE WHEN rt0.c3 THEN rt0.c3 END)), CASE rt0.c4  WHEN rt0.c5 THEN '' END COLLATE RTRIM DESC);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON ((((((rt0.c0)<>('695886118')))AND(((rt0.c5)>=(rt0.c4)))))AND((rt0.c1 IN ()))) WHERE (COALESCE((~ (rt0.c3)), ((-1876122038) BETWEEN (rt0.c2) AND (rt0.c4)))) ORDER BY (- (CASE WHEN rt0.c3 THEN rt0.c3 END)), CASE rt0.c4  WHEN rt0.c5 THEN '' END COLLATE RTRIM DESC;
SELECT ALL * FROM vt0, rt0 WHERE ((((CASE rt0.c4  WHEN rt0.c4 THEN vt0.c0 END))>((((rt0.c3) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((CASE rt0.c4  WHEN rt0.c4 THEN vt0.c0 END))>((((rt0.c3) ISNULL))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((CASE rt0.c4  WHEN rt0.c4 THEN vt0.c0 END))>((((rt0.c3) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((CASE rt0.c4  WHEN rt0.c4 THEN vt0.c0 END))>((((rt0.c3) ISNULL))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((CASE rt0.c4  WHEN rt0.c4 THEN vt0.c0 END))>((((rt0.c3) ISNULL)))));
SELECT COUNT(*) FROM rt0 WHERE (TYPEOF(rt0.c0 COLLATE BINARY)) ORDER BY rt0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(rt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (TYPEOF(rt0.c0 COLLATE BINARY)) ORDER BY rt0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(rt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (TYPEOF(rt0.c0 COLLATE BINARY)) ORDER BY rt0.c2 DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (0.22168373664184626) ORDER BY ((((0.2687341885928539)AND(((rt0.c5)AND(rt0.c2)))))OR(((rt0.c3)IS(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((0.22168373664184626) IS TRUE)  as count FROM rt0 ORDER BY ((((0.2687341885928539)AND(((rt0.c5)AND(rt0.c2)))))OR(((rt0.c3)IS(rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE (0.22168373664184626) ORDER BY ((((0.2687341885928539)AND(((rt0.c5)AND(rt0.c2)))))OR(((rt0.c3)IS(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((0.22168373664184626) IS TRUE)  as count FROM rt0 ORDER BY ((((0.2687341885928539)AND(((rt0.c5)AND(rt0.c2)))))OR(((rt0.c3)IS(rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE (0.22168373664184626) ORDER BY ((((0.2687341885928539)AND(((rt0.c5)AND(rt0.c2)))))OR(((rt0.c3)IS(rt0.c2))));
SELECT ALL * FROM vt0 WHERE ((((IFNULL(-7.22233991E8, '630158930')))>((vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((IFNULL(-7.22233991E8, '630158930')))>((vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((IFNULL(-7.22233991E8, '630158930')))>((vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((IFNULL(-7.22233991E8, '630158930')))>((vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((IFNULL(-7.22233991E8, '630158930')))>((vt0.c0))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c5 COLLATE NOCASE) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c5 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c5 COLLATE NOCASE) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c5 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c5 COLLATE NOCASE) NOTNULL));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON vt0.c0 WHERE (((((rt0.c4)IS(rt0.c0)))-(((rt0.c1) IS TRUE)))) ORDER BY CASE ((((((((0.8564720173487362)OR(vt0.c0)))OR(rt0.c3)))OR(rt0.c5)))AND(rt0.c2))  WHEN rt0.c4 THEN CAST(rt0.c0 AS INTEGER) WHEN '>\r쫁bA ,' THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) WHEN CAST(rt0.c5 AS NUMERIC) THEN UNLIKELY(DISTINCT rt0.c2) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)IS(rt0.c0)))-(((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON vt0.c0 ORDER BY CASE ((((((((0.8564720173487362)OR(vt0.c0)))OR(rt0.c3)))OR(rt0.c5)))AND(rt0.c2))  WHEN rt0.c4 THEN CAST(rt0.c0 AS INTEGER) WHEN '>\r쫁bA ,' THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) WHEN CAST(rt0.c5 AS NUMERIC) THEN UNLIKELY(DISTINCT rt0.c2) END  NULLS LAST);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON vt0.c0 WHERE (((((rt0.c4)IS(rt0.c0)))-(((rt0.c1) IS TRUE)))) ORDER BY CASE ((((((((0.8564720173487362)OR(vt0.c0)))OR(rt0.c3)))OR(rt0.c5)))AND(rt0.c2))  WHEN rt0.c4 THEN CAST(rt0.c0 AS INTEGER) WHEN '>\r쫁bA ,' THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) WHEN CAST(rt0.c5 AS NUMERIC) THEN UNLIKELY(DISTINCT rt0.c2) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)IS(rt0.c0)))-(((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON vt0.c0 ORDER BY CASE ((((((((0.8564720173487362)OR(vt0.c0)))OR(rt0.c3)))OR(rt0.c5)))AND(rt0.c2))  WHEN rt0.c4 THEN CAST(rt0.c0 AS INTEGER) WHEN '>\r쫁bA ,' THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) WHEN CAST(rt0.c5 AS NUMERIC) THEN UNLIKELY(DISTINCT rt0.c2) END  NULLS LAST);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON vt0.c0 WHERE (((((rt0.c4)IS(rt0.c0)))-(((rt0.c1) IS TRUE)))) ORDER BY CASE ((((((((0.8564720173487362)OR(vt0.c0)))OR(rt0.c3)))OR(rt0.c5)))AND(rt0.c2))  WHEN rt0.c4 THEN CAST(rt0.c0 AS INTEGER) WHEN '>\r쫁bA ,' THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) WHEN CAST(rt0.c5 AS NUMERIC) THEN UNLIKELY(DISTINCT rt0.c2) END  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((((- (6.38626854E8)))<(0x26b6088))) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS INTEGER) DESC, ((1869032921) IS TRUE);
SELECT SUM(count) FROM (SELECT (((((- (6.38626854E8)))<(0x26b6088))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 COLLATE NOCASE AS INTEGER) DESC, ((1869032921) IS TRUE));
SELECT COUNT(*) FROM vt0 WHERE ((((- (6.38626854E8)))<(0x26b6088))) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS INTEGER) DESC, ((1869032921) IS TRUE);
SELECT SUM(count) FROM (SELECT (((((- (6.38626854E8)))<(0x26b6088))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 COLLATE NOCASE AS INTEGER) DESC, ((1869032921) IS TRUE));
SELECT COUNT(*) FROM vt0 WHERE ((((- (6.38626854E8)))<(0x26b6088))) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS INTEGER) DESC, ((1869032921) IS TRUE);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2 IN ()) IN ()));
SELECT * FROM vt0 WHERE ((((0.0 IN (vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((0.0 IN (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((0.0 IN (vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((0.0 IN (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((0.0 IN (vt0.c0))) NOTNULL));
SELECT * FROM rt0, vt0 WHERE (((rt0.c2 IN ()) IN ())) ORDER BY ((rt0.c4) IS FALSE) ASC, (((rt0.c1)) NOT BETWEEN ((((((rt0.c5)AND(rt0.c4)))AND(rt0.c3)))) AND ((((rt0.c4)>(rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c4) IS FALSE) ASC, (((rt0.c1)) NOT BETWEEN ((((((rt0.c5)AND(rt0.c4)))AND(rt0.c3)))) AND ((((rt0.c4)>(rt0.c0)))))  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (((rt0.c2 IN ()) IN ())) ORDER BY ((rt0.c4) IS FALSE) ASC, (((rt0.c1)) NOT BETWEEN ((((((rt0.c5)AND(rt0.c4)))AND(rt0.c3)))) AND ((((rt0.c4)>(rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c4) IS FALSE) ASC, (((rt0.c1)) NOT BETWEEN ((((((rt0.c5)AND(rt0.c4)))AND(rt0.c3)))) AND ((((rt0.c4)>(rt0.c0)))))  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (((rt0.c2 IN ()) IN ())) ORDER BY ((rt0.c4) IS FALSE) ASC, (((rt0.c1)) NOT BETWEEN ((((((rt0.c5)AND(rt0.c4)))AND(rt0.c3)))) AND ((((rt0.c4)>(rt0.c0)))))  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE (0.5493423544737708) ORDER BY rt0.c5  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.5493423544737708) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c5  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (0.5493423544737708) ORDER BY rt0.c5  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.5493423544737708) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c5  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (0.5493423544737708) ORDER BY rt0.c5  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) IS TRUE))||(((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c1))))) ORDER BY ((((((rt0.c3)OR(rt0.c5)))AND(rt0.c2))) BETWEEN (rt0.c4 COLLATE BINARY) AND (rt0.c3 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) IS TRUE))||(((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c3)OR(rt0.c5)))AND(rt0.c2))) BETWEEN (rt0.c4 COLLATE BINARY) AND (rt0.c3 COLLATE BINARY))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) IS TRUE))||(((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c1))))) ORDER BY ((((((rt0.c3)OR(rt0.c5)))AND(rt0.c2))) BETWEEN (rt0.c4 COLLATE BINARY) AND (rt0.c3 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) IS TRUE))||(((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c3)OR(rt0.c5)))AND(rt0.c2))) BETWEEN (rt0.c4 COLLATE BINARY) AND (rt0.c3 COLLATE BINARY))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) IS TRUE))||(((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c1))))) ORDER BY ((((((rt0.c3)OR(rt0.c5)))AND(rt0.c2))) BETWEEN (rt0.c4 COLLATE BINARY) AND (rt0.c3 COLLATE BINARY))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((- (((rt0.c5)%(rt0.c5))))) ORDER BY (+ (rt0.c2 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c5)%(rt0.c5))))) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c2 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((- (((rt0.c5)%(rt0.c5))))) ORDER BY (+ (rt0.c2 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c5)%(rt0.c5))))) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c2 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((- (((rt0.c5)%(rt0.c5))))) ORDER BY (+ (rt0.c2 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (IFNULL(DISTINCT vt0.c0, vt0.c0) COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT vt0.c0, vt0.c0) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (IFNULL(DISTINCT vt0.c0, vt0.c0) COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT vt0.c0, vt0.c0) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (IFNULL(DISTINCT vt0.c0, vt0.c0) COLLATE NOCASE COLLATE NOCASE);
SELECT * FROM vt0, rt0 WHERE (json_array_length(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c5 THEN rt0.c1 ELSE rt0.c4 END, (rt0.c4 IN ())));
SELECT SUM(count) FROM (SELECT ((json_array_length(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c5 THEN rt0.c1 ELSE rt0.c4 END, (rt0.c4 IN ()))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (json_array_length(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c5 THEN rt0.c1 ELSE rt0.c4 END, (rt0.c4 IN ())));
SELECT SUM(count) FROM (SELECT ((json_array_length(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c5 THEN rt0.c1 ELSE rt0.c4 END, (rt0.c4 IN ()))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c5 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c5 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c5 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c5 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c5 IN ()) COLLATE BINARY);
SELECT * FROM vt0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON CAST((((NULL)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3))) AS REAL) WHERE ((((rt0.c4, rt0.c4, NULL)) NOT BETWEEN (((((rt0.c5)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))), rt0.c3, ((((NULL)OR(rt0.c0)))OR(vt0.c0)))) AND ((x'', (~ (rt0.c1)), ((rt0.c4) IS TRUE))))) ORDER BY (((rt0.c3)) BETWEEN (((+ (rt0.c1)))) AND ((((vt0.c0) NOTNULL)))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c4, rt0.c4, NULL)) NOT BETWEEN (((((rt0.c5)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))), rt0.c3, ((((NULL)OR(rt0.c0)))OR(vt0.c0)))) AND ((x'', (~ (rt0.c1)), ((rt0.c4) IS TRUE))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CAST((((NULL)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3))) AS REAL) ORDER BY (((rt0.c3)) BETWEEN (((+ (rt0.c1)))) AND ((((vt0.c0) NOTNULL)))) DESC);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON CAST((((NULL)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3))) AS REAL) WHERE ((((rt0.c4, rt0.c4, NULL)) NOT BETWEEN (((((rt0.c5)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))), rt0.c3, ((((NULL)OR(rt0.c0)))OR(vt0.c0)))) AND ((x'', (~ (rt0.c1)), ((rt0.c4) IS TRUE))))) ORDER BY (((rt0.c3)) BETWEEN (((+ (rt0.c1)))) AND ((((vt0.c0) NOTNULL)))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c4, rt0.c4, NULL)) NOT BETWEEN (((((rt0.c5)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))), rt0.c3, ((((NULL)OR(rt0.c0)))OR(vt0.c0)))) AND ((x'', (~ (rt0.c1)), ((rt0.c4) IS TRUE))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CAST((((NULL)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3))) AS REAL) ORDER BY (((rt0.c3)) BETWEEN (((+ (rt0.c1)))) AND ((((vt0.c0) NOTNULL)))) DESC);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON CAST((((NULL)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3))) AS REAL) WHERE ((((rt0.c4, rt0.c4, NULL)) NOT BETWEEN (((((rt0.c5)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))), rt0.c3, ((((NULL)OR(rt0.c0)))OR(vt0.c0)))) AND ((x'', (~ (rt0.c1)), ((rt0.c4) IS TRUE))))) ORDER BY (((rt0.c3)) BETWEEN (((+ (rt0.c1)))) AND ((((vt0.c0) NOTNULL)))) DESC;
SELECT COUNT(*) FROM vt0, rt0 WHERE (NULL) ORDER BY x'1906';
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED ORDER BY x'1906');
SELECT COUNT(*) FROM vt0, rt0 WHERE (NULL) ORDER BY x'1906';
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED ORDER BY x'1906');
SELECT COUNT(*) FROM vt0, rt0 WHERE (NULL) ORDER BY x'1906';
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((0.6854219157299981)OR(HEX(DISTINCT rt0.c2))))OR((+ (''))))) ORDER BY CASE load_extension(rt0.c4, rt0.c3)  WHEN ((rt0.c5) IS FALSE) THEN ((((rt0.c5)AND(vt0.c0)))AND(rt0.c1)) WHEN (rt0.c4 IN (rt0.c2)) THEN ((((rt0.c1)AND(rt0.c5)))AND(rt0.c3)) WHEN (('-1269996712') NOT BETWEEN (rt0.c0) AND (rt0.c5)) THEN CASE vt0.c0  WHEN rt0.c1 THEN NULL WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c5 ELSE rt0.c5 END ELSE rt0.c1 END ASC  NULLS LAST, ((((+ (rt0.c5))))<((((rt0.c0) NOT BETWEEN (x'ce2b') AND (rt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((0.6854219157299981)OR(HEX(DISTINCT rt0.c2))))OR((+ (''))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE load_extension(rt0.c4, rt0.c3)  WHEN ((rt0.c5) IS FALSE) THEN ((((rt0.c5)AND(vt0.c0)))AND(rt0.c1)) WHEN (rt0.c4 IN (rt0.c2)) THEN ((((rt0.c1)AND(rt0.c5)))AND(rt0.c3)) WHEN (('-1269996712') NOT BETWEEN (rt0.c0) AND (rt0.c5)) THEN CASE vt0.c0  WHEN rt0.c1 THEN NULL WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c5 ELSE rt0.c5 END ELSE rt0.c1 END ASC  NULLS LAST, ((((+ (rt0.c5))))<((((rt0.c0) NOT BETWEEN (x'ce2b') AND (rt0.c1)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((0.6854219157299981)OR(HEX(DISTINCT rt0.c2))))OR((+ (''))))) ORDER BY CASE load_extension(rt0.c4, rt0.c3)  WHEN ((rt0.c5) IS FALSE) THEN ((((rt0.c5)AND(vt0.c0)))AND(rt0.c1)) WHEN (rt0.c4 IN (rt0.c2)) THEN ((((rt0.c1)AND(rt0.c5)))AND(rt0.c3)) WHEN (('-1269996712') NOT BETWEEN (rt0.c0) AND (rt0.c5)) THEN CASE vt0.c0  WHEN rt0.c1 THEN NULL WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c5 ELSE rt0.c5 END ELSE rt0.c1 END ASC  NULLS LAST, ((((+ (rt0.c5))))<((((rt0.c0) NOT BETWEEN (x'ce2b') AND (rt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((0.6854219157299981)OR(HEX(DISTINCT rt0.c2))))OR((+ (''))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE load_extension(rt0.c4, rt0.c3)  WHEN ((rt0.c5) IS FALSE) THEN ((((rt0.c5)AND(vt0.c0)))AND(rt0.c1)) WHEN (rt0.c4 IN (rt0.c2)) THEN ((((rt0.c1)AND(rt0.c5)))AND(rt0.c3)) WHEN (('-1269996712') NOT BETWEEN (rt0.c0) AND (rt0.c5)) THEN CASE vt0.c0  WHEN rt0.c1 THEN NULL WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c5 ELSE rt0.c5 END ELSE rt0.c1 END ASC  NULLS LAST, ((((+ (rt0.c5))))<((((rt0.c0) NOT BETWEEN (x'ce2b') AND (rt0.c1)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS NUMERIC)) ORDER BY 0.004565715279560512  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS REAL) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0 ORDER BY 0.004565715279560512  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS NUMERIC)) ORDER BY 0.004565715279560512  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS REAL) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0 ORDER BY 0.004565715279560512  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS NUMERIC)) ORDER BY 0.004565715279560512  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (CAST('-707952178' AS INTEGER) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST('-707952178' AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (CAST('-707952178' AS INTEGER) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST('-707952178' AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (CAST('-707952178' AS INTEGER) COLLATE RTRIM);
SELECT ALL * FROM rt0 WHERE ((+ (-0.0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (-0.0))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (-0.0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (-0.0))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (-0.0)));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON 0.34606837897907683 WHERE (((((829812817) BETWEEN (rt0.c4) AND (rt0.c4)))<=(((rt0.c5) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY CAST(((rt0.c2)<>(rt0.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((((829812817) BETWEEN (rt0.c4) AND (rt0.c4)))<=(((rt0.c5) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON 0.34606837897907683 ORDER BY CAST(((rt0.c2)<>(rt0.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON 0.34606837897907683 WHERE (((((829812817) BETWEEN (rt0.c4) AND (rt0.c4)))<=(((rt0.c5) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY CAST(((rt0.c2)<>(rt0.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((((829812817) BETWEEN (rt0.c4) AND (rt0.c4)))<=(((rt0.c5) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON 0.34606837897907683 ORDER BY CAST(((rt0.c2)<>(rt0.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON 0.34606837897907683 WHERE (((((829812817) BETWEEN (rt0.c4) AND (rt0.c4)))<=(((rt0.c5) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY CAST(((rt0.c2)<>(rt0.c0)) AS NUMERIC);
SELECT ALL * FROM vt0, rt0 WHERE ((((- (rt0.c1)))<=(json_insert(rt0.c0, vt0.c0, rt0.c1)))) ORDER BY ((rt0.c3) IS TRUE);
SELECT SUM(count) FROM (SELECT (((((- (rt0.c1)))<=(json_insert(rt0.c0, vt0.c0, rt0.c1)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c3) IS TRUE));
SELECT ALL * FROM vt0, rt0 WHERE ((((- (rt0.c1)))<=(json_insert(rt0.c0, vt0.c0, rt0.c1)))) ORDER BY ((rt0.c3) IS TRUE);
SELECT SUM(count) FROM (SELECT (((((- (rt0.c1)))<=(json_insert(rt0.c0, vt0.c0, rt0.c1)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c3) IS TRUE));
SELECT * FROM vt0, rt0 WHERE (CAST(((rt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c5)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c5)) AS BLOB)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST(((rt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c5)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c5)) AS BLOB)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST(((rt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c5)) AS BLOB));
SELECT ALL * FROM vt0 WHERE (CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END  WHEN vt0.c0 THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END  WHEN vt0.c0 THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END  WHEN vt0.c0 THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END  WHEN vt0.c0 THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END  WHEN vt0.c0 THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON NULL WHERE (((((rt0.c5, rt0.c4, rt0.c5)) NOT BETWEEN ((rt0.c5, rt0.c1, rt0.c5)) AND ((rt0.c1, rt0.c5, vt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5, rt0.c4, rt0.c5)) NOT BETWEEN ((rt0.c5, rt0.c1, rt0.c5)) AND ((rt0.c1, rt0.c5, vt0.c0))) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON NULL);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON NULL WHERE (((((rt0.c5, rt0.c4, rt0.c5)) NOT BETWEEN ((rt0.c5, rt0.c1, rt0.c5)) AND ((rt0.c1, rt0.c5, vt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5, rt0.c4, rt0.c5)) NOT BETWEEN ((rt0.c5, rt0.c1, rt0.c5)) AND ((rt0.c1, rt0.c5, vt0.c0))) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON NULL);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON NULL WHERE (((((rt0.c5, rt0.c4, rt0.c5)) NOT BETWEEN ((rt0.c5, rt0.c1, rt0.c5)) AND ((rt0.c1, rt0.c5, vt0.c0))) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (json_patch(rt0.c4, (+ (rt0.c3)))) ORDER BY ((CAST(rt0.c2 AS REAL)) BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) AND (((rt0.c5)-(rt0.c5)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_patch(rt0.c4, (+ (rt0.c3)))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c2 AS REAL)) BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) AND (((rt0.c5)-(rt0.c5)))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (json_patch(rt0.c4, (+ (rt0.c3)))) ORDER BY ((CAST(rt0.c2 AS REAL)) BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) AND (((rt0.c5)-(rt0.c5)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_patch(rt0.c4, (+ (rt0.c3)))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c2 AS REAL)) BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) AND (((rt0.c5)-(rt0.c5)))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (json_patch(rt0.c4, (+ (rt0.c3)))) ORDER BY ((CAST(rt0.c2 AS REAL)) BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) AND (((rt0.c5)-(rt0.c5)))) DESC;
SELECT * FROM rt0 WHERE ((((rt0.c5 IN ()))>(((rt0.c4) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c5 IN ()))>(((rt0.c4) IS TRUE)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c5 IN ()))>(((rt0.c4) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c5 IN ()))>(((rt0.c4) IS TRUE)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c5 IN ()))>(((rt0.c4) IS TRUE))));
SELECT * FROM rt0 INNER JOIN vt0 ON (((~ (rt0.c5)))GLOB(rt0.c0 COLLATE RTRIM)) WHERE (((((LIKELIHOOD(rt0.c0, 0.3957566375600582))OR(((rt0.c2)<<(rt0.c1)))))OR(((rt0.c2) NOTNULL)))) ORDER BY CAST(((rt0.c4) BETWEEN (rt0.c0) AND (vt0.c0)) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((LIKELIHOOD(rt0.c0, 0.3957566375600582))OR(((rt0.c2)<<(rt0.c1)))))OR(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((~ (rt0.c5)))GLOB(rt0.c0 COLLATE RTRIM)) ORDER BY CAST(((rt0.c4) BETWEEN (rt0.c0) AND (vt0.c0)) AS REAL) DESC  NULLS LAST);
SELECT * FROM rt0 INNER JOIN vt0 ON (((~ (rt0.c5)))GLOB(rt0.c0 COLLATE RTRIM)) WHERE (((((LIKELIHOOD(rt0.c0, 0.3957566375600582))OR(((rt0.c2)<<(rt0.c1)))))OR(((rt0.c2) NOTNULL)))) ORDER BY CAST(((rt0.c4) BETWEEN (rt0.c0) AND (vt0.c0)) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((LIKELIHOOD(rt0.c0, 0.3957566375600582))OR(((rt0.c2)<<(rt0.c1)))))OR(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((~ (rt0.c5)))GLOB(rt0.c0 COLLATE RTRIM)) ORDER BY CAST(((rt0.c4) BETWEEN (rt0.c0) AND (vt0.c0)) AS REAL) DESC  NULLS LAST);
SELECT * FROM rt0 INNER JOIN vt0 ON (((~ (rt0.c5)))GLOB(rt0.c0 COLLATE RTRIM)) WHERE (((((LIKELIHOOD(rt0.c0, 0.3957566375600582))OR(((rt0.c2)<<(rt0.c1)))))OR(((rt0.c2) NOTNULL)))) ORDER BY CAST(((rt0.c4) BETWEEN (rt0.c0) AND (vt0.c0)) AS REAL) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (((((((((vt0.c0 COLLATE RTRIM)OR(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR(NULL)))AND(TRIM(DISTINCT vt0.c0, vt0.c0))))AND(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0 COLLATE RTRIM)OR(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR(NULL)))AND(TRIM(DISTINCT vt0.c0, vt0.c0))))AND(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((vt0.c0 COLLATE RTRIM)OR(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR(NULL)))AND(TRIM(DISTINCT vt0.c0, vt0.c0))))AND(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0 COLLATE RTRIM)OR(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR(NULL)))AND(TRIM(DISTINCT vt0.c0, vt0.c0))))AND(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((vt0.c0 COLLATE RTRIM)OR(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR(NULL)))AND(TRIM(DISTINCT vt0.c0, vt0.c0))))AND(CAST(vt0.c0 AS BLOB))));
SELECT * FROM vt0, rt0 WHERE ((((rt0.c3)) BETWEEN ((((rt0.c3) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((TIME(rt0.c0, rt0.c3, 0Xffffffff8decf574))))) ORDER BY ((vt0.c0) NOT BETWEEN (rt0.c5) AND (vt0.c0)) COLLATE RTRIM  NULLS LAST, (+ (rt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) BETWEEN ((((rt0.c3) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((TIME(rt0.c0, rt0.c3, 0xffffffff8decf574))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((vt0.c0) NOT BETWEEN (rt0.c5) AND (vt0.c0)) COLLATE RTRIM  NULLS LAST, (+ (rt0.c0 COLLATE BINARY)));
SELECT * FROM vt0, rt0 WHERE ((((rt0.c3)) BETWEEN ((((rt0.c3) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((TIME(rt0.c0, rt0.c3, 0Xffffffff8decf574))))) ORDER BY ((vt0.c0) NOT BETWEEN (rt0.c5) AND (vt0.c0)) COLLATE RTRIM  NULLS LAST, (+ (rt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) BETWEEN ((((rt0.c3) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((TIME(rt0.c0, rt0.c3, 0xffffffff8decf574))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((vt0.c0) NOT BETWEEN (rt0.c5) AND (vt0.c0)) COLLATE RTRIM  NULLS LAST, (+ (rt0.c0 COLLATE BINARY)));
SELECT * FROM vt0, rt0 WHERE ((((rt0.c3)) BETWEEN ((((rt0.c3) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((TIME(rt0.c0, rt0.c3, 0Xffffffff8decf574))))) ORDER BY ((vt0.c0) NOT BETWEEN (rt0.c5) AND (vt0.c0)) COLLATE RTRIM  NULLS LAST, (+ (rt0.c0 COLLATE BINARY));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON (- ((- (rt0.c4)))) WHERE (rt0.c5) ORDER BY ((vt0.c0) NOT BETWEEN (((rt0.c2)*(rt0.c1))) AND (vt0.c0 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c5) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (- ((- (rt0.c4)))) ORDER BY ((vt0.c0) NOT BETWEEN (((rt0.c2)*(rt0.c1))) AND (vt0.c0 COLLATE RTRIM)) DESC);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON (- ((- (rt0.c4)))) WHERE (rt0.c5) ORDER BY ((vt0.c0) NOT BETWEEN (((rt0.c2)*(rt0.c1))) AND (vt0.c0 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c5) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (- ((- (rt0.c4)))) ORDER BY ((vt0.c0) NOT BETWEEN (((rt0.c2)*(rt0.c1))) AND (vt0.c0 COLLATE RTRIM)) DESC);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON (- ((- (rt0.c4)))) WHERE (rt0.c5) ORDER BY ((vt0.c0) NOT BETWEEN (((rt0.c2)*(rt0.c1))) AND (vt0.c0 COLLATE RTRIM)) DESC;
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE (CASE rt0.c5 COLLATE RTRIM  WHEN TRIM(rt0.c2) THEN ',VFGw' WHEN CASE WHEN rt0.c5 THEN rt0.c3 ELSE rt0.c2 END THEN (((rt0.c4))!=((rt0.c1))) WHEN ((rt0.c0)<=('')) THEN rt0.c4 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c5 COLLATE RTRIM  WHEN TRIM(rt0.c2) THEN ',VFGw' WHEN CASE WHEN rt0.c5 THEN rt0.c3 ELSE rt0.c2 END THEN (((rt0.c4))<>((rt0.c1))) WHEN ((rt0.c0)<=('')) THEN rt0.c4 END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE (CASE rt0.c5 COLLATE RTRIM  WHEN TRIM(rt0.c2) THEN ',VFGw' WHEN CASE WHEN rt0.c5 THEN rt0.c3 ELSE rt0.c2 END THEN (((rt0.c4))!=((rt0.c1))) WHEN ((rt0.c0)<=('')) THEN rt0.c4 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c5 COLLATE RTRIM  WHEN TRIM(rt0.c2) THEN ',VFGw' WHEN CASE WHEN rt0.c5 THEN rt0.c3 ELSE rt0.c2 END THEN (((rt0.c4))<>((rt0.c1))) WHEN ((rt0.c0)<=('')) THEN rt0.c4 END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE (CASE rt0.c5 COLLATE RTRIM  WHEN TRIM(rt0.c2) THEN ',VFGw' WHEN CASE WHEN rt0.c5 THEN rt0.c3 ELSE rt0.c2 END THEN (((rt0.c4))!=((rt0.c1))) WHEN ((rt0.c0)<=('')) THEN rt0.c4 END);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c4) IS FALSE))OR(rt0.c0)))OR(0.4755571340164042)))OR(CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 END)))OR(CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c4) IS FALSE))OR(rt0.c0)))OR(0.4755571340164042)))OR(CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 END)))OR(CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c4) IS FALSE))OR(rt0.c0)))OR(0.4755571340164042)))OR(CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 END)))OR(CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c4) IS FALSE))OR(rt0.c0)))OR(0.4755571340164042)))OR(CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 END)))OR(CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c4) IS FALSE))OR(rt0.c0)))OR(0.4755571340164042)))OR(CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 END)))OR(CAST(rt0.c2 AS TEXT))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((TRIM(rt0.c0, rt0.c4)))<>((((((rt0.c4)AND(rt0.c2)))AND(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((TRIM(rt0.c0, rt0.c4)))!=((((((rt0.c4)AND(rt0.c2)))AND(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((TRIM(rt0.c0, rt0.c4)))<>((((((rt0.c4)AND(rt0.c2)))AND(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((TRIM(rt0.c0, rt0.c4)))!=((((((rt0.c4)AND(rt0.c2)))AND(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((TRIM(rt0.c0, rt0.c4)))<>((((((rt0.c4)AND(rt0.c2)))AND(rt0.c1))))));
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c0)||(vt0.c0))) AND (((vt0.c0)IS(x''))))) ORDER BY (~ ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c0)||(vt0.c0))) AND (((vt0.c0)IS(x''))))) IS TRUE)  as count FROM vt0 ORDER BY (~ ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c0)||(vt0.c0))) AND (((vt0.c0)IS(x''))))) ORDER BY (~ ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c0)||(vt0.c0))) AND (((vt0.c0)IS(x''))))) IS TRUE)  as count FROM vt0 ORDER BY (~ ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c0)||(vt0.c0))) AND (((vt0.c0)IS(x''))))) ORDER BY (~ ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c1) ISNULL) THEN ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c0)) END) ORDER BY (((rt0.c3 IN ()))>(CAST(rt0.c4 AS REAL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1) ISNULL) THEN ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c0)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c3 IN ()))>(CAST(rt0.c4 AS REAL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c1) ISNULL) THEN ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c0)) END) ORDER BY (((rt0.c3 IN ()))>(CAST(rt0.c4 AS REAL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1) ISNULL) THEN ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c0)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c3 IN ()))>(CAST(rt0.c4 AS REAL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c1) ISNULL) THEN ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c0)) END) ORDER BY (((rt0.c3 IN ()))>(CAST(rt0.c4 AS REAL))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c2 AS BLOB) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c2 AS BLOB) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c2 AS BLOB) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c2 AS BLOB) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c2 AS BLOB) AS BLOB));
SELECT * FROM vt0 WHERE (((NULL)>>((~ (vt0.c0))))) ORDER BY CASE WHEN ((vt0.c0)<<(vt0.c0)) THEN (vt0.c0 IN ()) WHEN RTRIM('') THEN vt0.c0 WHEN ((vt0.c0)+(vt0.c0)) THEN vt0.c0 END ASC  NULLS LAST, -2.74259136E8  NULLS FIRST, ((((vt0.c0)IS(vt0.c0)))<<(CAST(vt0.c0 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL)>>((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0)<<(vt0.c0)) THEN (vt0.c0 IN ()) WHEN RTRIM('') THEN vt0.c0 WHEN ((vt0.c0)+(vt0.c0)) THEN vt0.c0 END ASC  NULLS LAST, -2.74259136E8  NULLS FIRST, ((((vt0.c0)IS(vt0.c0)))<<(CAST(vt0.c0 AS TEXT)))  NULLS LAST);
SELECT * FROM vt0 WHERE (((NULL)>>((~ (vt0.c0))))) ORDER BY CASE WHEN ((vt0.c0)<<(vt0.c0)) THEN (vt0.c0 IN ()) WHEN RTRIM('') THEN vt0.c0 WHEN ((vt0.c0)+(vt0.c0)) THEN vt0.c0 END ASC  NULLS LAST, -2.74259136E8  NULLS FIRST, ((((vt0.c0)IS(vt0.c0)))<<(CAST(vt0.c0 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL)>>((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0)<<(vt0.c0)) THEN (vt0.c0 IN ()) WHEN RTRIM('') THEN vt0.c0 WHEN ((vt0.c0)+(vt0.c0)) THEN vt0.c0 END ASC  NULLS LAST, -2.74259136E8  NULLS FIRST, ((((vt0.c0)IS(vt0.c0)))<<(CAST(vt0.c0 AS TEXT)))  NULLS LAST);
SELECT * FROM vt0 WHERE (((NULL)>>((~ (vt0.c0))))) ORDER BY CASE WHEN ((vt0.c0)<<(vt0.c0)) THEN (vt0.c0 IN ()) WHEN RTRIM('') THEN vt0.c0 WHEN ((vt0.c0)+(vt0.c0)) THEN vt0.c0 END ASC  NULLS LAST, -2.74259136E8  NULLS FIRST, ((((vt0.c0)IS(vt0.c0)))<<(CAST(vt0.c0 AS TEXT)))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)IS((1.401710955E9 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)IS((1.401710955E9 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)IS((1.401710955E9 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)IS((1.401710955E9 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)IS((1.401710955E9 IN (vt0.c0)))));
SELECT * FROM rt0, vt0 WHERE (((((NOT (rt0.c1))))<(((((rt0.c0))<((rt0.c4))))))) ORDER BY LOWER(DISTINCT UPPER(vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((((((NOT (rt0.c1))))<(((((rt0.c0))<((rt0.c4))))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY LOWER(DISTINCT UPPER(vt0.c0)) DESC);
SELECT * FROM rt0, vt0 WHERE (((((NOT (rt0.c1))))<(((((rt0.c0))<((rt0.c4))))))) ORDER BY LOWER(DISTINCT UPPER(vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((((((NOT (rt0.c1))))<(((((rt0.c0))<((rt0.c4))))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY LOWER(DISTINCT UPPER(vt0.c0)) DESC);
SELECT * FROM rt0, vt0 WHERE (((((NOT (rt0.c1))))<(((((rt0.c0))<((rt0.c4))))))) ORDER BY LOWER(DISTINCT UPPER(vt0.c0)) DESC;
SELECT * FROM rt0, vt0 WHERE (LOWER(DISTINCT load_extension(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT load_extension(rt0.c1))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (LOWER(DISTINCT load_extension(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT load_extension(rt0.c1))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((SUBSTR(vt0.c0, x''))&(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((((vt0.c0, x'', x'', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))%(CAST(vt0.c0 AS REAL))) ASC, (IFNULL(vt0.c0, vt0.c0) IN (QUOTE(vt0.c0))) ASC  NULLS FIRST, (NOT (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((SUBSTR(vt0.c0, x''))&(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, x'', x'', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))%(CAST(vt0.c0 AS REAL))) ASC, (IFNULL(vt0.c0, vt0.c0) IN (QUOTE(vt0.c0))) ASC  NULLS FIRST, (NOT (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((SUBSTR(vt0.c0, x''))&(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((((vt0.c0, x'', x'', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))%(CAST(vt0.c0 AS REAL))) ASC, (IFNULL(vt0.c0, vt0.c0) IN (QUOTE(vt0.c0))) ASC  NULLS FIRST, (NOT (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((SUBSTR(vt0.c0, x''))&(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, x'', x'', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))%(CAST(vt0.c0 AS REAL))) ASC, (IFNULL(vt0.c0, vt0.c0) IN (QUOTE(vt0.c0))) ASC  NULLS FIRST, (NOT (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((SUBSTR(vt0.c0, x''))&(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((((vt0.c0, x'', x'', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))%(CAST(vt0.c0 AS REAL))) ASC, (IFNULL(vt0.c0, vt0.c0) IN (QUOTE(vt0.c0))) ASC  NULLS FIRST, (NOT (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) ASC;
SELECT * FROM vt0, rt0 WHERE ((rt0.c2 COLLATE NOCASE IN ((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE NOCASE IN ((+ (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((rt0.c2 COLLATE NOCASE IN ((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE NOCASE IN ((+ (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((rt0.c2 COLLATE NOCASE IN ((+ (rt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c0)%(rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)%(rt0.c3)) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c0)%(rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)%(rt0.c3)) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c0)%(rt0.c3)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (((vt0.c0) IS TRUE)) AND ((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (((vt0.c0) IS TRUE)) AND ((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (((vt0.c0) IS TRUE)) AND ((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (((vt0.c0) IS TRUE)) AND ((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (((vt0.c0) IS TRUE)) AND ((vt0.c0 IN (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((((((((RTRIM(vt0.c0))OR('' COLLATE RTRIM)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND((vt0.c0 IN ()))))AND(((vt0.c0) IS FALSE)))) ORDER BY '#c';
SELECT SUM(count) FROM (SELECT ((((((((((RTRIM(vt0.c0))OR('' COLLATE RTRIM)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND((vt0.c0 IN ()))))AND(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY '#c');
SELECT ALL * FROM vt0 WHERE (((((((((RTRIM(vt0.c0))OR('' COLLATE RTRIM)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND((vt0.c0 IN ()))))AND(((vt0.c0) IS FALSE)))) ORDER BY '#c';
SELECT SUM(count) FROM (SELECT ((((((((((RTRIM(vt0.c0))OR('' COLLATE RTRIM)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND((vt0.c0 IN ()))))AND(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY '#c');
SELECT ALL * FROM vt0 WHERE (((((((((RTRIM(vt0.c0))OR('' COLLATE RTRIM)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND((vt0.c0 IN ()))))AND(((vt0.c0) IS FALSE)))) ORDER BY '#c';
SELECT ALL * FROM rt0 WHERE (CASE ((((((((rt0.c5)OR(rt0.c5)))AND(rt0.c2)))AND(rt0.c2)))OR(''))  WHEN (((rt0.c4))!=((rt0.c1))) THEN ((rt0.c2)AND(rt0.c5)) WHEN (~ (rt0.c1)) THEN CAST(rt0.c0 AS TEXT) WHEN (rt0.c0 IN ()) THEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)) WHEN ((rt0.c4)+(rt0.c2)) THEN ((rt0.c1)%(rt0.c3)) WHEN rt0.c3 THEN ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((((((rt0.c5)OR(rt0.c5)))AND(rt0.c2)))AND(rt0.c2)))OR(''))  WHEN (((rt0.c4))!=((rt0.c1))) THEN ((rt0.c2)AND(rt0.c5)) WHEN (~ (rt0.c1)) THEN CAST(rt0.c0 AS TEXT) WHEN (rt0.c0 IN ()) THEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)) WHEN ((rt0.c4)+(rt0.c2)) THEN ((rt0.c1)%(rt0.c3)) WHEN rt0.c3 THEN ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE ((((((((rt0.c5)OR(rt0.c5)))AND(rt0.c2)))AND(rt0.c2)))OR(''))  WHEN (((rt0.c4))!=((rt0.c1))) THEN ((rt0.c2)AND(rt0.c5)) WHEN (~ (rt0.c1)) THEN CAST(rt0.c0 AS TEXT) WHEN (rt0.c0 IN ()) THEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)) WHEN ((rt0.c4)+(rt0.c2)) THEN ((rt0.c1)%(rt0.c3)) WHEN rt0.c3 THEN ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((((((rt0.c5)OR(rt0.c5)))AND(rt0.c2)))AND(rt0.c2)))OR(''))  WHEN (((rt0.c4))!=((rt0.c1))) THEN ((rt0.c2)AND(rt0.c5)) WHEN (~ (rt0.c1)) THEN CAST(rt0.c0 AS TEXT) WHEN (rt0.c0 IN ()) THEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)) WHEN ((rt0.c4)+(rt0.c2)) THEN ((rt0.c1)%(rt0.c3)) WHEN rt0.c3 THEN ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE ((((((((rt0.c5)OR(rt0.c5)))AND(rt0.c2)))AND(rt0.c2)))OR(''))  WHEN (((rt0.c4))!=((rt0.c1))) THEN ((rt0.c2)AND(rt0.c5)) WHEN (~ (rt0.c1)) THEN CAST(rt0.c0 AS TEXT) WHEN (rt0.c0 IN ()) THEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)) WHEN ((rt0.c4)+(rt0.c2)) THEN ((rt0.c1)%(rt0.c3)) WHEN rt0.c3 THEN ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)) END);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c4, rt0.c0, rt0.c4, rt0.c0, rt0.c3)) BETWEEN ((rt0.c1, rt0.c1, rt0.c4, rt0.c5, 0.41877653054377495)) AND ((rt0.c5, rt0.c5, rt0.c0, rt0.c3, rt0.c5))))==((- (rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c4, rt0.c0, rt0.c4, rt0.c0, rt0.c3)) BETWEEN ((rt0.c1, rt0.c1, rt0.c4, rt0.c5, 0.41877653054377495)) AND ((rt0.c5, rt0.c5, rt0.c0, rt0.c3, rt0.c5))))=((- (rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c4, rt0.c0, rt0.c4, rt0.c0, rt0.c3)) BETWEEN ((rt0.c1, rt0.c1, rt0.c4, rt0.c5, 0.41877653054377495)) AND ((rt0.c5, rt0.c5, rt0.c0, rt0.c3, rt0.c5))))==((- (rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c4, rt0.c0, rt0.c4, rt0.c0, rt0.c3)) BETWEEN ((rt0.c1, rt0.c1, rt0.c4, rt0.c5, 0.41877653054377495)) AND ((rt0.c5, rt0.c5, rt0.c0, rt0.c3, rt0.c5))))=((- (rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c4, rt0.c0, rt0.c4, rt0.c0, rt0.c3)) BETWEEN ((rt0.c1, rt0.c1, rt0.c4, rt0.c5, 0.41877653054377495)) AND ((rt0.c5, rt0.c5, rt0.c0, rt0.c3, rt0.c5))))==((- (rt0.c4)))));
SELECT COUNT(*) FROM rt0 WHERE (TYPEOF(DISTINCT (- (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT (- (rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (TYPEOF(DISTINCT (- (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT (- (rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (TYPEOF(DISTINCT (- (rt0.c1))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((CAST(vt0.c0 AS TEXT))AND(IFNULL(rt0.c5, rt0.c3))))AND((('351387563')=(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS TEXT))AND(IFNULL(rt0.c5, rt0.c3))))AND((('351387563')==(NULL))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((CAST(vt0.c0 AS TEXT))AND(IFNULL(rt0.c5, rt0.c3))))AND((('351387563')=(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS TEXT))AND(IFNULL(rt0.c5, rt0.c3))))AND((('351387563')==(NULL))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((CAST(vt0.c0 AS TEXT))AND(IFNULL(rt0.c5, rt0.c3))))AND((('351387563')=(NULL)))));
SELECT COUNT(*) FROM rt0 WHERE (CASE (rt0.c4 IN ())  WHEN ((rt0.c1) BETWEEN (rt0.c5) AND (0Xffffffffcc53ea66)) THEN (rt0.c2 IN (rt0.c5)) END);
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c4 IN ())  WHEN ((rt0.c1) BETWEEN (rt0.c5) AND (0xffffffffcc53ea66)) THEN (rt0.c2 IN (rt0.c5)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE (rt0.c4 IN ())  WHEN ((rt0.c1) BETWEEN (rt0.c5) AND (0Xffffffffcc53ea66)) THEN (rt0.c2 IN (rt0.c5)) END);
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c4 IN ())  WHEN ((rt0.c1) BETWEEN (rt0.c5) AND (0xffffffffcc53ea66)) THEN (rt0.c2 IN (rt0.c5)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE (rt0.c4 IN ())  WHEN ((rt0.c1) BETWEEN (rt0.c5) AND (0Xffffffffcc53ea66)) THEN (rt0.c2 IN (rt0.c5)) END);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON '-1035702201' WHERE ((((rt0.c2 IN ()))=((((vt0.c0, rt0.c1, rt0.c3))<=((rt0.c3, 0x42acf2b9, vt0.c0)))))) ORDER BY json_array_length(((0.0512603364432489) NOT BETWEEN (rt0.c1) AND (rt0.c2)), CASE rt0.c3  WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c2 END) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ()))=((((vt0.c0, rt0.c1, rt0.c3))<=((rt0.c3, 0X42acf2b9, vt0.c0)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON '-1035702201' ORDER BY json_array_length(((0.0512603364432489) NOT BETWEEN (rt0.c1) AND (rt0.c2)), CASE rt0.c3  WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c2 END) DESC);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON '-1035702201' WHERE ((((rt0.c2 IN ()))=((((vt0.c0, rt0.c1, rt0.c3))<=((rt0.c3, 0x42acf2b9, vt0.c0)))))) ORDER BY json_array_length(((0.0512603364432489) NOT BETWEEN (rt0.c1) AND (rt0.c2)), CASE rt0.c3  WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c2 END) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ()))=((((vt0.c0, rt0.c1, rt0.c3))<=((rt0.c3, 0X42acf2b9, vt0.c0)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON '-1035702201' ORDER BY json_array_length(((0.0512603364432489) NOT BETWEEN (rt0.c1) AND (rt0.c2)), CASE rt0.c3  WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c2 END) DESC);
SELECT * FROM rt0 WHERE (x'') ORDER BY x'c387' DESC  NULLS FIRST, CAST(rt0.c5 AS NUMERIC) COLLATE RTRIM ASC, (~ (((rt0.c5) NOT BETWEEN (rt0.c4) AND (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 ORDER BY x'c387' DESC  NULLS FIRST, CAST(rt0.c5 AS NUMERIC) COLLATE RTRIM ASC, (~ (((rt0.c5) NOT BETWEEN (rt0.c4) AND (rt0.c2))))  NULLS FIRST);
SELECT * FROM rt0 WHERE (x'') ORDER BY x'c387' DESC  NULLS FIRST, CAST(rt0.c5 AS NUMERIC) COLLATE RTRIM ASC, (~ (((rt0.c5) NOT BETWEEN (rt0.c4) AND (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 ORDER BY x'c387' DESC  NULLS FIRST, CAST(rt0.c5 AS NUMERIC) COLLATE RTRIM ASC, (~ (((rt0.c5) NOT BETWEEN (rt0.c4) AND (rt0.c2))))  NULLS FIRST);
SELECT * FROM rt0 WHERE (x'') ORDER BY x'c387' DESC  NULLS FIRST, CAST(rt0.c5 AS NUMERIC) COLLATE RTRIM ASC, (~ (((rt0.c5) NOT BETWEEN (rt0.c4) AND (rt0.c2))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((('') NOT BETWEEN (vt0.c0) AND ((rt0.c1 IN ())))) ORDER BY ((((rt0.c5)IS NOT(rt0.c2))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('') NOT BETWEEN (vt0.c0) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c5)IS NOT(rt0.c2))) ISNULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((('') NOT BETWEEN (vt0.c0) AND ((rt0.c1 IN ())))) ORDER BY ((((rt0.c5)IS NOT(rt0.c2))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('') NOT BETWEEN (vt0.c0) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c5)IS NOT(rt0.c2))) ISNULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((('') NOT BETWEEN (vt0.c0) AND ((rt0.c1 IN ())))) ORDER BY ((((rt0.c5)IS NOT(rt0.c2))) ISNULL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0) NOTNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0) NOTNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0) NOTNULL)) IS FALSE));
SELECT ALL * FROM rt0 WHERE (((((rt0.c3) BETWEEN (0xffffffff938fecfd) AND (0.8095337347573163)))>=('')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) BETWEEN (0xffffffff938fecfd) AND (0.8095337347573163)))>=(''))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3) BETWEEN (0xffffffff938fecfd) AND (0.8095337347573163)))>=('')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) BETWEEN (0xffffffff938fecfd) AND (0.8095337347573163)))>=(''))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3) BETWEEN (0xffffffff938fecfd) AND (0.8095337347573163)))>=('')));
SELECT COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0)))AND((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))AND((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0)))AND((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))AND((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0)))AND((NOT (vt0.c0)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c4) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c4) IS TRUE) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c4) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c4) IS TRUE) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c4) IS TRUE) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (CASE ((((rt0.c0)AND(rt0.c0)))AND(0Xfdf0ed0))  WHEN rt0.c0 COLLATE NOCASE THEN x'aae1c2f5' ELSE ((rt0.c0)+(rt0.c4)) END) ORDER BY ((((CAST(rt0.c1 AS TEXT))OR(((((((((rt0.c5)AND(rt0.c0)))AND(rt0.c4)))OR(rt0.c5)))OR(rt0.c4)))))OR(((rt0.c5)OR(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt0.c0)AND(rt0.c0)))AND(0Xfdf0ed0))  WHEN rt0.c0 COLLATE NOCASE THEN x'aae1c2f5' ELSE ((rt0.c0)+(rt0.c4)) END) IS TRUE)  as count FROM rt0 ORDER BY ((((CAST(rt0.c1 AS TEXT))OR(((((((((rt0.c5)AND(rt0.c0)))AND(rt0.c4)))OR(rt0.c5)))OR(rt0.c4)))))OR(((rt0.c5)OR(rt0.c1)))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (CASE ((((rt0.c0)AND(rt0.c0)))AND(0Xfdf0ed0))  WHEN rt0.c0 COLLATE NOCASE THEN x'aae1c2f5' ELSE ((rt0.c0)+(rt0.c4)) END) ORDER BY ((((CAST(rt0.c1 AS TEXT))OR(((((((((rt0.c5)AND(rt0.c0)))AND(rt0.c4)))OR(rt0.c5)))OR(rt0.c4)))))OR(((rt0.c5)OR(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt0.c0)AND(rt0.c0)))AND(0Xfdf0ed0))  WHEN rt0.c0 COLLATE NOCASE THEN x'aae1c2f5' ELSE ((rt0.c0)+(rt0.c4)) END) IS TRUE)  as count FROM rt0 ORDER BY ((((CAST(rt0.c1 AS TEXT))OR(((((((((rt0.c5)AND(rt0.c0)))AND(rt0.c4)))OR(rt0.c5)))OR(rt0.c4)))))OR(((rt0.c5)OR(rt0.c1)))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (CASE ((((rt0.c0)AND(rt0.c0)))AND(0Xfdf0ed0))  WHEN rt0.c0 COLLATE NOCASE THEN x'aae1c2f5' ELSE ((rt0.c0)+(rt0.c4)) END) ORDER BY ((((CAST(rt0.c1 AS TEXT))OR(((((((((rt0.c5)AND(rt0.c0)))AND(rt0.c4)))OR(rt0.c5)))OR(rt0.c4)))))OR(((rt0.c5)OR(rt0.c1)))) ASC;
SELECT ALL * FROM vt0 WHERE (x'f177');
SELECT SUM(count) FROM (SELECT ALL ((x'f177') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'f177');
SELECT SUM(count) FROM (SELECT ALL ((x'f177') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'f177');
SELECT * FROM vt0, rt0 WHERE (CASE WHEN (((rt0.c5)) BETWEEN (('1579200020')) AND ((rt0.c4))) THEN (('') NOT BETWEEN (rt0.c0) AND (rt0.c2)) ELSE (((('')AND(rt0.c1)))OR(vt0.c0)) END) ORDER BY CASE (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c3)))  WHEN rt0.c2 THEN rt0.c1 COLLATE RTRIM END, ((((rt0.c0) IS FALSE)) NOT BETWEEN (0x4977e44f COLLATE BINARY) AND ((x'' IN (rt0.c4)))), (~ (x'')) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c5)) BETWEEN (('1579200020')) AND ((rt0.c4))) THEN (('') NOT BETWEEN (rt0.c0) AND (rt0.c2)) ELSE (((('')AND(rt0.c1)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c3)))  WHEN rt0.c2 THEN rt0.c1 COLLATE RTRIM END, ((((rt0.c0) IS FALSE)) NOT BETWEEN (0x4977e44f COLLATE BINARY) AND ((x'' IN (rt0.c4)))), (~ (x'')) COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (CASE WHEN (((rt0.c5)) BETWEEN (('1579200020')) AND ((rt0.c4))) THEN (('') NOT BETWEEN (rt0.c0) AND (rt0.c2)) ELSE (((('')AND(rt0.c1)))OR(vt0.c0)) END) ORDER BY CASE (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c3)))  WHEN rt0.c2 THEN rt0.c1 COLLATE RTRIM END, ((((rt0.c0) IS FALSE)) NOT BETWEEN (0x4977e44f COLLATE BINARY) AND ((x'' IN (rt0.c4)))), (~ (x'')) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c5)) BETWEEN (('1579200020')) AND ((rt0.c4))) THEN (('') NOT BETWEEN (rt0.c0) AND (rt0.c2)) ELSE (((('')AND(rt0.c1)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c3)))  WHEN rt0.c2 THEN rt0.c1 COLLATE RTRIM END, ((((rt0.c0) IS FALSE)) NOT BETWEEN (0x4977e44f COLLATE BINARY) AND ((x'' IN (rt0.c4)))), (~ (x'')) COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (CASE WHEN (((rt0.c5)) BETWEEN (('1579200020')) AND ((rt0.c4))) THEN (('') NOT BETWEEN (rt0.c0) AND (rt0.c2)) ELSE (((('')AND(rt0.c1)))OR(vt0.c0)) END) ORDER BY CASE (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c3)))  WHEN rt0.c2 THEN rt0.c1 COLLATE RTRIM END, ((((rt0.c0) IS FALSE)) NOT BETWEEN (0x4977e44f COLLATE BINARY) AND ((x'' IN (rt0.c4)))), (~ (x'')) COLLATE RTRIM ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c4 COLLATE RTRIM) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((rt0.c4 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c4 COLLATE RTRIM) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((rt0.c4 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c4 COLLATE RTRIM) IS FALSE));
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c4) ORDER BY (((((((((((rt0.c2))==((rt0.c4))))AND((('5h')<>(rt0.c3)))))OR((rt0.c4 IN (rt0.c5)))))AND(((vt0.c0)<=(rt0.c0)))))AND((~ (rt0.c3))))  NULLS LAST, (rt0.c2 IN ()) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((((((((rt0.c2))==((rt0.c4))))AND((('5h')!=(rt0.c3)))))OR((rt0.c4 IN (rt0.c5)))))AND(((vt0.c0)<=(rt0.c0)))))AND((~ (rt0.c3))))  NULLS LAST, (rt0.c2 IN ()) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c4) ORDER BY (((((((((((rt0.c2))==((rt0.c4))))AND((('5h')<>(rt0.c3)))))OR((rt0.c4 IN (rt0.c5)))))AND(((vt0.c0)<=(rt0.c0)))))AND((~ (rt0.c3))))  NULLS LAST, (rt0.c2 IN ()) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((((((((rt0.c2))==((rt0.c4))))AND((('5h')!=(rt0.c3)))))OR((rt0.c4 IN (rt0.c5)))))AND(((vt0.c0)<=(rt0.c0)))))AND((~ (rt0.c3))))  NULLS LAST, (rt0.c2 IN ()) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c4) ORDER BY (((((((((((rt0.c2))==((rt0.c4))))AND((('5h')<>(rt0.c3)))))OR((rt0.c4 IN (rt0.c5)))))AND(((vt0.c0)<=(rt0.c0)))))AND((~ (rt0.c3))))  NULLS LAST, (rt0.c2 IN ()) COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(LIKE(vt0.c0, vt0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKE(vt0.c0, vt0.c0) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(LIKE(vt0.c0, vt0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKE(vt0.c0, vt0.c0) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(LIKE(vt0.c0, vt0.c0) AS TEXT));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) ISNULL));
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)|(vt0.c0)) AS NUMERIC)) ORDER BY ((CAST(vt0.c0 AS TEXT))<<(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)), (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST, (((CAST(vt0.c0 AS BLOB), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), LIKE(vt0.c0, vt0.c0, 'R')))>=((CAST(0.15714343299799738 AS INTEGER), ((vt0.c0)%(vt0.c0)), CAST(vt0.c0 AS NUMERIC))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)|(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS TEXT))<<(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)), (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST, (((CAST(vt0.c0 AS BLOB), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), LIKE(vt0.c0, vt0.c0, 'R')))>=((CAST(0.15714343299799738 AS INTEGER), ((vt0.c0)%(vt0.c0)), CAST(vt0.c0 AS NUMERIC))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)|(vt0.c0)) AS NUMERIC)) ORDER BY ((CAST(vt0.c0 AS TEXT))<<(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)), (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST, (((CAST(vt0.c0 AS BLOB), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), LIKE(vt0.c0, vt0.c0, 'R')))>=((CAST(0.15714343299799738 AS INTEGER), ((vt0.c0)%(vt0.c0)), CAST(vt0.c0 AS NUMERIC))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)|(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS TEXT))<<(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)), (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST, (((CAST(vt0.c0 AS BLOB), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), LIKE(vt0.c0, vt0.c0, 'R')))>=((CAST(0.15714343299799738 AS INTEGER), ((vt0.c0)%(vt0.c0)), CAST(vt0.c0 AS NUMERIC))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)|(vt0.c0)) AS NUMERIC)) ORDER BY ((CAST(vt0.c0 AS TEXT))<<(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)), (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST, (((CAST(vt0.c0 AS BLOB), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), LIKE(vt0.c0, vt0.c0, 'R')))>=((CAST(0.15714343299799738 AS INTEGER), ((vt0.c0)%(vt0.c0)), CAST(vt0.c0 AS NUMERIC))))  NULLS LAST;
SELECT * FROM vt0 WHERE ((('2')*(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((('2')*(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((('2')*(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((('2')*(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((('2')*(vt0.c0)));
SELECT COUNT(*) FROM rt0, vt0 WHERE (TRIM(DISTINCT ((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)), (rt0.c4 IN (rt0.c1, rt0.c5)))) ORDER BY rt0.c5;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)), (rt0.c4 IN (rt0.c1, rt0.c5)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c5);
SELECT COUNT(*) FROM rt0, vt0 WHERE (TRIM(DISTINCT ((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)), (rt0.c4 IN (rt0.c1, rt0.c5)))) ORDER BY rt0.c5;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)), (rt0.c4 IN (rt0.c1, rt0.c5)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c5);
SELECT COUNT(*) FROM rt0, vt0 WHERE (TRIM(DISTINCT ((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)), (rt0.c4 IN (rt0.c1, rt0.c5)))) ORDER BY rt0.c5;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((x'')<((((vt0.c0, rt0.c4, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c4, rt0.c0))))) WHERE ((((rt0.c5) IS TRUE) IN ((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c5) IS TRUE) IN ((NULL IN ())))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((x'')<((((vt0.c0, rt0.c4, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c4, rt0.c0))))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((x'')<((((vt0.c0, rt0.c4, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c4, rt0.c0))))) WHERE ((((rt0.c5) IS TRUE) IN ((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c5) IS TRUE) IN ((NULL IN ())))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((x'')<((((vt0.c0, rt0.c4, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c4, rt0.c0))))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((x'')<((((vt0.c0, rt0.c4, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c4, rt0.c0))))) WHERE ((((rt0.c5) IS TRUE) IN ((NULL IN ()))));
SELECT * FROM rt0 WHERE ((((rt0.c5)) BETWEEN ((((('/Z7oK\', rt0.c4, rt0.c2)) NOT BETWEEN ((rt0.c5, rt0.c3, rt0.c4)) AND ((NULL, rt0.c1, rt0.c3))))) AND (((rt0.c1 IN (rt0.c1, rt0.c5))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c5)) BETWEEN ((((('/Z7oK\', rt0.c4, rt0.c2)) NOT BETWEEN ((rt0.c5, rt0.c3, rt0.c4)) AND ((NULL, rt0.c1, rt0.c3))))) AND (((rt0.c1 IN (rt0.c1, rt0.c5)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c5)) BETWEEN ((((('/Z7oK\', rt0.c4, rt0.c2)) NOT BETWEEN ((rt0.c5, rt0.c3, rt0.c4)) AND ((NULL, rt0.c1, rt0.c3))))) AND (((rt0.c1 IN (rt0.c1, rt0.c5))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c5)) BETWEEN ((((('/Z7oK\', rt0.c4, rt0.c2)) NOT BETWEEN ((rt0.c5, rt0.c3, rt0.c4)) AND ((NULL, rt0.c1, rt0.c3))))) AND (((rt0.c1 IN (rt0.c1, rt0.c5)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c5)) BETWEEN ((((('/Z7oK\', rt0.c4, rt0.c2)) NOT BETWEEN ((rt0.c5, rt0.c3, rt0.c4)) AND ((NULL, rt0.c1, rt0.c3))))) AND (((rt0.c1 IN (rt0.c1, rt0.c5))))));
SELECT COUNT(*) FROM vt0 WHERE (((ABS(DISTINCT vt0.c0)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(DISTINCT vt0.c0)) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((ABS(DISTINCT vt0.c0)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(DISTINCT vt0.c0)) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((ABS(DISTINCT vt0.c0)) ISNULL));
SELECT * FROM rt0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (rt0.c1);
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON 0.47526882950306515 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON 0.47526882950306515);
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON 0.47526882950306515 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON 0.47526882950306515);
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON 0.47526882950306515 WHERE (vt0.c0);
SELECT * FROM vt0 WHERE ((((x'', vt0.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))), (vt0.c0 IN ()), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((NULL, ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0)-(NULL)))))) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT (((((x'', vt0.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))), (vt0.c0 IN ()), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((NULL, ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0)-(NULL)))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB) ASC);
SELECT * FROM vt0 WHERE ((((x'', vt0.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))), (vt0.c0 IN ()), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((NULL, ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0)-(NULL)))))) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT (((((x'', vt0.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))), (vt0.c0 IN ()), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((NULL, ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0)-(NULL)))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB) ASC);
SELECT * FROM vt0 WHERE ((((x'', vt0.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))), (vt0.c0 IN ()), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((NULL, ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0)-(NULL)))))) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB) ASC;
SELECT ALL * FROM rt0, vt0 WHERE (LIKELY(x'501f'));
SELECT SUM(count) FROM (SELECT ((LIKELY(x'501f')) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (LIKELY(x'501f'));
SELECT SUM(count) FROM (SELECT ((LIKELY(x'501f')) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (LIKELY(x'501f'));
SELECT COUNT(*) FROM rt0 WHERE (((561589347) ISNULL)) ORDER BY CAST(((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) AS TEXT) DESC  NULLS FIRST, (((rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((rt0.c5 COLLATE BINARY))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((561589347) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) AS TEXT) DESC  NULLS FIRST, (((rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((rt0.c5 COLLATE BINARY))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((561589347) ISNULL)) ORDER BY CAST(((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) AS TEXT) DESC  NULLS FIRST, (((rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((rt0.c5 COLLATE BINARY))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((561589347) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) AS TEXT) DESC  NULLS FIRST, (((rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((rt0.c5 COLLATE BINARY))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((561589347) ISNULL)) ORDER BY CAST(((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) AS TEXT) DESC  NULLS FIRST, (((rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((rt0.c5 COLLATE BINARY))) DESC;
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (x'');
SELECT ALL * FROM vt0, rt0 WHERE ((+ ((((rt0.c3, rt0.c1, rt0.c3)) NOT BETWEEN ((vt0.c0, rt0.c1, rt0.c3)) AND ((rt0.c2, rt0.c0, rt0.c5)))))) ORDER BY (((~ (rt0.c1)))<((~ (rt0.c5))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c3, rt0.c1, rt0.c3)) NOT BETWEEN ((vt0.c0, rt0.c1, rt0.c3)) AND ((rt0.c2, rt0.c0, rt0.c5)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((~ (rt0.c1)))<((~ (rt0.c5))))  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE ((+ ((((rt0.c3, rt0.c1, rt0.c3)) NOT BETWEEN ((vt0.c0, rt0.c1, rt0.c3)) AND ((rt0.c2, rt0.c0, rt0.c5)))))) ORDER BY (((~ (rt0.c1)))<((~ (rt0.c5))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c3, rt0.c1, rt0.c3)) NOT BETWEEN ((vt0.c0, rt0.c1, rt0.c3)) AND ((rt0.c2, rt0.c0, rt0.c5)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((~ (rt0.c1)))<((~ (rt0.c5))))  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE ((+ ((((rt0.c3, rt0.c1, rt0.c3)) NOT BETWEEN ((vt0.c0, rt0.c1, rt0.c3)) AND ((rt0.c2, rt0.c0, rt0.c5)))))) ORDER BY (((~ (rt0.c1)))<((~ (rt0.c5))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((+ (((((rt0.c2)AND(rt0.c1)))OR(vt0.c0))))) ORDER BY (- (rt0.c3 COLLATE RTRIM)) ASC  NULLS FIRST, ((((IFNULL(vt0.c0, rt0.c3))AND(((rt0.c5)=(rt0.c5)))))OR(vt0.c0)) DESC  NULLS LAST, (- ((('1118488234')!=(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((+ (((((rt0.c2)AND(rt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (- (rt0.c3 COLLATE RTRIM)) ASC  NULLS FIRST, ((((IFNULL(vt0.c0, rt0.c3))AND(((rt0.c5)=(rt0.c5)))))OR(vt0.c0)) DESC  NULLS LAST, (- ((('1118488234')<>(vt0.c0)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((+ (((((rt0.c2)AND(rt0.c1)))OR(vt0.c0))))) ORDER BY (- (rt0.c3 COLLATE RTRIM)) ASC  NULLS FIRST, ((((IFNULL(vt0.c0, rt0.c3))AND(((rt0.c5)=(rt0.c5)))))OR(vt0.c0)) DESC  NULLS LAST, (- ((('1118488234')!=(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((+ (((((rt0.c2)AND(rt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (- (rt0.c3 COLLATE RTRIM)) ASC  NULLS FIRST, ((((IFNULL(vt0.c0, rt0.c3))AND(((rt0.c5)=(rt0.c5)))))OR(vt0.c0)) DESC  NULLS LAST, (- ((('1118488234')<>(vt0.c0)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((+ (((((rt0.c2)AND(rt0.c1)))OR(vt0.c0))))) ORDER BY (- (rt0.c3 COLLATE RTRIM)) ASC  NULLS FIRST, ((((IFNULL(vt0.c0, rt0.c3))AND(((rt0.c5)=(rt0.c5)))))OR(vt0.c0)) DESC  NULLS LAST, (- ((('1118488234')!=(vt0.c0))));
SELECT ALL * FROM rt0 WHERE (((((x'')-(rt0.c5))) NOTNULL)) ORDER BY ((((rt0.c5)*(rt0.c3))) BETWEEN ((((rt0.c2, rt0.c5, x'c923'))>=((rt0.c1, rt0.c0, rt0.c1)))) AND (((rt0.c3)AND(0X35c2f0cd)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'')-(rt0.c5))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c5)*(rt0.c3))) BETWEEN ((((rt0.c2, rt0.c5, x'c923'))>=((rt0.c1, rt0.c0, rt0.c1)))) AND (((rt0.c3)AND(0X35c2f0cd)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((x'')-(rt0.c5))) NOTNULL)) ORDER BY ((((rt0.c5)*(rt0.c3))) BETWEEN ((((rt0.c2, rt0.c5, x'c923'))>=((rt0.c1, rt0.c0, rt0.c1)))) AND (((rt0.c3)AND(0X35c2f0cd)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'')-(rt0.c5))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c5)*(rt0.c3))) BETWEEN ((((rt0.c2, rt0.c5, x'c923'))>=((rt0.c1, rt0.c0, rt0.c1)))) AND (((rt0.c3)AND(0X35c2f0cd)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((x'')-(rt0.c5))) NOTNULL)) ORDER BY ((((rt0.c5)*(rt0.c3))) BETWEEN ((((rt0.c2, rt0.c5, x'c923'))>=((rt0.c1, rt0.c0, rt0.c1)))) AND (((rt0.c3)AND(0X35c2f0cd)))) DESC  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c4)AND(rt0.c2)))<=(((((rt0.c2)OR(rt0.c2)))OR(rt0.c4))))) ORDER BY CASE WHEN ((rt0.c0) IS TRUE) THEN rt0.c3 WHEN (((vt0.c0, rt0.c2, vt0.c0)) BETWEEN ((rt0.c2, rt0.c3, rt0.c1)) AND ((rt0.c3, rt0.c3, rt0.c1))) THEN ((rt0.c4)/(rt0.c2)) WHEN CASE WHEN rt0.c5 THEN NULL WHEN rt0.c1 THEN '2088832645' WHEN rt0.c2 THEN rt0.c3 END THEN (+ (rt0.c4)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)AND(rt0.c2)))<=(((((rt0.c2)OR(rt0.c2)))OR(rt0.c4))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN ((rt0.c0) IS TRUE) THEN rt0.c3 WHEN (((vt0.c0, rt0.c2, vt0.c0)) BETWEEN ((rt0.c2, rt0.c3, rt0.c1)) AND ((rt0.c3, rt0.c3, rt0.c1))) THEN ((rt0.c4)/(rt0.c2)) WHEN CASE WHEN rt0.c5 THEN NULL WHEN rt0.c1 THEN '2088832645' WHEN rt0.c2 THEN rt0.c3 END THEN (+ (rt0.c4)) END ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c4)AND(rt0.c2)))<=(((((rt0.c2)OR(rt0.c2)))OR(rt0.c4))))) ORDER BY CASE WHEN ((rt0.c0) IS TRUE) THEN rt0.c3 WHEN (((vt0.c0, rt0.c2, vt0.c0)) BETWEEN ((rt0.c2, rt0.c3, rt0.c1)) AND ((rt0.c3, rt0.c3, rt0.c1))) THEN ((rt0.c4)/(rt0.c2)) WHEN CASE WHEN rt0.c5 THEN NULL WHEN rt0.c1 THEN '2088832645' WHEN rt0.c2 THEN rt0.c3 END THEN (+ (rt0.c4)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)AND(rt0.c2)))<=(((((rt0.c2)OR(rt0.c2)))OR(rt0.c4))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN ((rt0.c0) IS TRUE) THEN rt0.c3 WHEN (((vt0.c0, rt0.c2, vt0.c0)) BETWEEN ((rt0.c2, rt0.c3, rt0.c1)) AND ((rt0.c3, rt0.c3, rt0.c1))) THEN ((rt0.c4)/(rt0.c2)) WHEN CASE WHEN rt0.c5 THEN NULL WHEN rt0.c1 THEN '2088832645' WHEN rt0.c2 THEN rt0.c3 END THEN (+ (rt0.c4)) END ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c4)AND(rt0.c2)))<=(((((rt0.c2)OR(rt0.c2)))OR(rt0.c4))))) ORDER BY CASE WHEN ((rt0.c0) IS TRUE) THEN rt0.c3 WHEN (((vt0.c0, rt0.c2, vt0.c0)) BETWEEN ((rt0.c2, rt0.c3, rt0.c1)) AND ((rt0.c3, rt0.c3, rt0.c1))) THEN ((rt0.c4)/(rt0.c2)) WHEN CASE WHEN rt0.c5 THEN NULL WHEN rt0.c1 THEN '2088832645' WHEN rt0.c2 THEN rt0.c3 END THEN (+ (rt0.c4)) END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'');
SELECT ALL * FROM rt0 NOT INDEXED, vt0 WHERE (((((NULL) NOT BETWEEN (vt0.c0) AND (rt0.c4)))<(0.3713386563633988))) ORDER BY CAST(rt0.c5 AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((((((NULL) NOT BETWEEN (vt0.c0) AND (rt0.c4)))<(0.3713386563633988))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(rt0.c5 AS NUMERIC) ASC);
SELECT ALL * FROM rt0 NOT INDEXED, vt0 WHERE (((((NULL) NOT BETWEEN (vt0.c0) AND (rt0.c4)))<(0.3713386563633988))) ORDER BY CAST(rt0.c5 AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((((((NULL) NOT BETWEEN (vt0.c0) AND (rt0.c4)))<(0.3713386563633988))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(rt0.c5 AS NUMERIC) ASC);
SELECT ALL * FROM rt0 NOT INDEXED, vt0 WHERE (((((NULL) NOT BETWEEN (vt0.c0) AND (rt0.c4)))<(0.3713386563633988))) ORDER BY CAST(rt0.c5 AS NUMERIC) ASC;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)-(vt0.c0)), '1730835092')) AND ((((((((((vt0.c0)OR(vt0.c0)))OR(NULL)))AND(vt0.c0)))AND(vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))), (((vt0.c0))<=((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)-(vt0.c0)), '1730835092')) AND ((((((((((vt0.c0)OR(vt0.c0)))OR(NULL)))AND(vt0.c0)))AND(vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))), (((vt0.c0))<=((vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)-(vt0.c0)), '1730835092')) AND ((((((((((vt0.c0)OR(vt0.c0)))OR(NULL)))AND(vt0.c0)))AND(vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))), (((vt0.c0))<=((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)-(vt0.c0)), '1730835092')) AND ((((((((((vt0.c0)OR(vt0.c0)))OR(NULL)))AND(vt0.c0)))AND(vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))), (((vt0.c0))<=((vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)-(vt0.c0)), '1730835092')) AND ((((((((((vt0.c0)OR(vt0.c0)))OR(NULL)))AND(vt0.c0)))AND(vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))), (((vt0.c0))<=((vt0.c0)))))));
SELECT * FROM rt0 WHERE ((((rt0.c0 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c0 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c0 IN ())) NOTNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c3 AS REAL))<(((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS REAL))<(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c3 AS REAL))<(((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS REAL))<(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c3 AS REAL))<(((rt0.c0) IS FALSE))));
SELECT * FROM vt0 WHERE (((((((((((((((vt0.c0)AND(vt0.c0)))OR(NULL)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (x'2217') AND (((vt0.c0)%(vt0.c0))))) ORDER BY 0.18839009696840558 DESC, CAST(HEX(DISTINCT vt0.c0) AS BLOB), (((0.9923344533310716)) NOT BETWEEN ((LTRIM(vt0.c0, vt0.c0))) AND ((CAST('-1711137176' AS NUMERIC))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((vt0.c0)AND(vt0.c0)))OR(NULL)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (x'2217') AND (((vt0.c0)%(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY 0.18839009696840558 DESC, CAST(HEX(DISTINCT vt0.c0) AS BLOB), (((0.9923344533310716)) NOT BETWEEN ((LTRIM(vt0.c0, vt0.c0))) AND ((CAST('-1711137176' AS NUMERIC))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((((((((((((vt0.c0)AND(vt0.c0)))OR(NULL)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (x'2217') AND (((vt0.c0)%(vt0.c0))))) ORDER BY 0.18839009696840558 DESC, CAST(HEX(DISTINCT vt0.c0) AS BLOB), (((0.9923344533310716)) NOT BETWEEN ((LTRIM(vt0.c0, vt0.c0))) AND ((CAST('-1711137176' AS NUMERIC))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((vt0.c0)AND(vt0.c0)))OR(NULL)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (x'2217') AND (((vt0.c0)%(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY 0.18839009696840558 DESC, CAST(HEX(DISTINCT vt0.c0) AS BLOB), (((0.9923344533310716)) NOT BETWEEN ((LTRIM(vt0.c0, vt0.c0))) AND ((CAST('-1711137176' AS NUMERIC))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((((((((((((vt0.c0)AND(vt0.c0)))OR(NULL)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (x'2217') AND (((vt0.c0)%(vt0.c0))))) ORDER BY 0.18839009696840558 DESC, CAST(HEX(DISTINCT vt0.c0) AS BLOB), (((0.9923344533310716)) NOT BETWEEN ((LTRIM(vt0.c0, vt0.c0))) AND ((CAST('-1711137176' AS NUMERIC))))  NULLS FIRST;
SELECT * FROM vt0, rt0 WHERE ((~ (rt0.c4 COLLATE RTRIM))) ORDER BY CAST(rt0.c1 AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((~ (rt0.c4 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(rt0.c1 AS NUMERIC));
SELECT * FROM vt0, rt0 WHERE ((~ (rt0.c4 COLLATE RTRIM))) ORDER BY CAST(rt0.c1 AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((~ (rt0.c4 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(rt0.c1 AS NUMERIC));
SELECT * FROM vt0, rt0 WHERE ((~ (rt0.c4 COLLATE RTRIM))) ORDER BY CAST(rt0.c1 AS NUMERIC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((json_patch(NULL, rt0.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((json_patch(NULL, rt0.c0)) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((json_patch(NULL, rt0.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((json_patch(NULL, rt0.c0)) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((json_patch(NULL, rt0.c0)) IS TRUE));
SELECT * FROM rt0, vt0 WHERE ((~ (((rt0.c5)IS(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c5)IS(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((~ (((rt0.c5)IS(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c5)IS(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((~ (((rt0.c5)IS(rt0.c2)))));
SELECT * FROM rt0, vt0 WHERE ((((((((((((('830507598')AND(rt0.c5)))OR(load_extension(rt0.c2, rt0.c5))))OR(((vt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c5)))))AND(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c4 END)))OR((+ ('858219432')))))AND(((rt0.c4) BETWEEN (rt0.c5) AND (0.43088380301704154)))));
SELECT SUM(count) FROM (SELECT (((((((((((((('830507598')AND(rt0.c5)))OR(load_extension(rt0.c2, rt0.c5))))OR(((vt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c5)))))AND(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c4 END)))OR((+ ('858219432')))))AND(((rt0.c4) BETWEEN (rt0.c5) AND (0.43088380301704154))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((((((((((('830507598')AND(rt0.c5)))OR(load_extension(rt0.c2, rt0.c5))))OR(((vt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c5)))))AND(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c4 END)))OR((+ ('858219432')))))AND(((rt0.c4) BETWEEN (rt0.c5) AND (0.43088380301704154)))));
SELECT SUM(count) FROM (SELECT (((((((((((((('830507598')AND(rt0.c5)))OR(load_extension(rt0.c2, rt0.c5))))OR(((vt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c5)))))AND(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c4 END)))OR((+ ('858219432')))))AND(((rt0.c4) BETWEEN (rt0.c5) AND (0.43088380301704154))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0 WHERE (CASE ((rt0.c0)<=(NULL))  WHEN (+ (rt0.c2)) THEN CASE rt0.c3  WHEN rt0.c1 THEN rt0.c5 END ELSE UNLIKELY(rt0.c5) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0)<=(NULL))  WHEN (+ (rt0.c2)) THEN CASE rt0.c3  WHEN rt0.c1 THEN rt0.c5 END ELSE UNLIKELY(rt0.c5) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE ((rt0.c0)<=(NULL))  WHEN (+ (rt0.c2)) THEN CASE rt0.c3  WHEN rt0.c1 THEN rt0.c5 END ELSE UNLIKELY(rt0.c5) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0)<=(NULL))  WHEN (+ (rt0.c2)) THEN CASE rt0.c3  WHEN rt0.c1 THEN rt0.c5 END ELSE UNLIKELY(rt0.c5) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE ((rt0.c0)<=(NULL))  WHEN (+ (rt0.c2)) THEN CASE rt0.c3  WHEN rt0.c1 THEN rt0.c5 END ELSE UNLIKELY(rt0.c5) END);
SELECT ALL * FROM vt0 WHERE (IFNULL(DISTINCT ((vt0.c0)+(vt0.c0)), CAST(vt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((vt0.c0)+(vt0.c0)), CAST(vt0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (IFNULL(DISTINCT ((vt0.c0)+(vt0.c0)), CAST(vt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((vt0.c0)+(vt0.c0)), CAST(vt0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (IFNULL(DISTINCT ((vt0.c0)+(vt0.c0)), CAST(vt0.c0 AS NUMERIC)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0)IS NOT(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)IS NOT(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0)IS NOT(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)IS NOT(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0)IS NOT(rt0.c2)) IN ()));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c3 IN ()))IS((~ (rt0.c3))))) ORDER BY (+ (rt0.c5)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN ()))IS((~ (rt0.c3))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (rt0.c5)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c3 IN ()))IS((~ (rt0.c3))))) ORDER BY (+ (rt0.c5)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN ()))IS((~ (rt0.c3))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (rt0.c5)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c3 IN ()))IS((~ (rt0.c3))))) ORDER BY (+ (rt0.c5)) COLLATE RTRIM;
SELECT ALL * FROM vt0, rt0 WHERE (json_valid((('63014601') NOT BETWEEN (rt0.c5) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((json_valid((('63014601') NOT BETWEEN (rt0.c5) AND (rt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (json_valid((('63014601') NOT BETWEEN (rt0.c5) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((json_valid((('63014601') NOT BETWEEN (rt0.c5) AND (rt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (json_valid((('63014601') NOT BETWEEN (rt0.c5) AND (rt0.c0))));
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c4)IS((- (x'')))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4)IS((- (x''))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c4)IS((- (x'')))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4)IS((- (x''))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c4)IS((- (x'')))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c4)) BETWEEN (((rt0.c1 IN ()))) AND (((((rt0.c0))<=((rt0.c4)))))) WHERE (rt0.c2) ORDER BY '-722233991';
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c4)) BETWEEN (((rt0.c1 IN ()))) AND (((((rt0.c0))<=((rt0.c4)))))) ORDER BY '-722233991');
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c4)) BETWEEN (((rt0.c1 IN ()))) AND (((((rt0.c0))<=((rt0.c4)))))) WHERE (rt0.c2) ORDER BY '-722233991';
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c4)) BETWEEN (((rt0.c1 IN ()))) AND (((((rt0.c0))<=((rt0.c4)))))) ORDER BY '-722233991');
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c4)) BETWEEN (((rt0.c1 IN ()))) AND (((((rt0.c0))<=((rt0.c4)))))) WHERE (rt0.c2) ORDER BY '-722233991';
SELECT ALL * FROM rt0, vt0 WHERE (((- (rt0.c2)) IN ())) ORDER BY ((CAST(vt0.c0 AS REAL))>=(RTRIM(0Xffffffff9314198a)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((- (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(vt0.c0 AS REAL))>=(RTRIM(0xffffffff9314198a)))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((- (rt0.c2)) IN ())) ORDER BY ((CAST(vt0.c0 AS REAL))>=(RTRIM(0Xffffffff9314198a)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((- (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(vt0.c0 AS REAL))>=(RTRIM(0xffffffff9314198a)))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((- (rt0.c2)) IN ())) ORDER BY ((CAST(vt0.c0 AS REAL))>=(RTRIM(0Xffffffff9314198a)))  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c3)OR(rt0.c5)))AND(rt0.c4)) IN (rt0.c1 COLLATE BINARY))) ORDER BY (((('JNn')AND((rt0.c0 IN ()))))OR(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3)OR(rt0.c5)))AND(rt0.c4)) IN (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((('JNn')AND((rt0.c0 IN ()))))OR(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c3)OR(rt0.c5)))AND(rt0.c4)) IN (rt0.c1 COLLATE BINARY))) ORDER BY (((('JNn')AND((rt0.c0 IN ()))))OR(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3)OR(rt0.c5)))AND(rt0.c4)) IN (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((('JNn')AND((rt0.c0 IN ()))))OR(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c3)OR(rt0.c5)))AND(rt0.c4)) IN (rt0.c1 COLLATE BINARY))) ORDER BY (((('JNn')AND((rt0.c0 IN ()))))OR(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c0)>(rt0.c5)) IN ((- (rt0.c2)), ((rt0.c3) IS FALSE)))) ORDER BY ((0.8459433906146389)<<(rt0.c4)) COLLATE NOCASE COLLATE NOCASE DESC, UPPER(((rt0.c5) BETWEEN (vt0.c0) AND (x''))) ASC, ((rt0.c2) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)>(rt0.c5)) IN ((- (rt0.c2)), ((rt0.c3) IS FALSE)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((0.8459433906146389)<<(rt0.c4)) COLLATE NOCASE COLLATE NOCASE DESC, UPPER(((rt0.c5) BETWEEN (vt0.c0) AND (x''))) ASC, ((rt0.c2) NOT NULL));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c0)>(rt0.c5)) IN ((- (rt0.c2)), ((rt0.c3) IS FALSE)))) ORDER BY ((0.8459433906146389)<<(rt0.c4)) COLLATE NOCASE COLLATE NOCASE DESC, UPPER(((rt0.c5) BETWEEN (vt0.c0) AND (x''))) ASC, ((rt0.c2) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)>(rt0.c5)) IN ((- (rt0.c2)), ((rt0.c3) IS FALSE)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((0.8459433906146389)<<(rt0.c4)) COLLATE NOCASE COLLATE NOCASE DESC, UPPER(((rt0.c5) BETWEEN (vt0.c0) AND (x''))) ASC, ((rt0.c2) NOT NULL));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c0)>(rt0.c5)) IN ((- (rt0.c2)), ((rt0.c3) IS FALSE)))) ORDER BY ((0.8459433906146389)<<(rt0.c4)) COLLATE NOCASE COLLATE NOCASE DESC, UPPER(((rt0.c5) BETWEEN (vt0.c0) AND (x''))) ASC, ((rt0.c2) NOT NULL);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c4 COLLATE NOCASE) NOT BETWEEN (CASE WHEN 0.4619393065632136 THEN 0.5265121043636284 END) AND (((0.507586438547409) NOTNULL)))) ORDER BY '-608237458' DESC  NULLS FIRST, (((rt0.c2)) BETWEEN (((+ (rt0.c3)))) AND (((+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4 COLLATE NOCASE) NOT BETWEEN (CASE WHEN 0.4619393065632136 THEN 0.5265121043636284 END) AND (((0.507586438547409) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY '-608237458' DESC  NULLS FIRST, (((rt0.c2)) BETWEEN (((+ (rt0.c3)))) AND (((+ (rt0.c1))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c4 COLLATE NOCASE) NOT BETWEEN (CASE WHEN 0.4619393065632136 THEN 0.5265121043636284 END) AND (((0.507586438547409) NOTNULL)))) ORDER BY '-608237458' DESC  NULLS FIRST, (((rt0.c2)) BETWEEN (((+ (rt0.c3)))) AND (((+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4 COLLATE NOCASE) NOT BETWEEN (CASE WHEN 0.4619393065632136 THEN 0.5265121043636284 END) AND (((0.507586438547409) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY '-608237458' DESC  NULLS FIRST, (((rt0.c2)) BETWEEN (((+ (rt0.c3)))) AND (((+ (rt0.c1))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c4 COLLATE NOCASE) NOT BETWEEN (CASE WHEN 0.4619393065632136 THEN 0.5265121043636284 END) AND (((0.507586438547409) NOTNULL)))) ORDER BY '-608237458' DESC  NULLS FIRST, (((rt0.c2)) BETWEEN (((+ (rt0.c3)))) AND (((+ (rt0.c1)))));
SELECT * FROM rt0, vt0 WHERE ((vt0.c0 IN (vt0.c0)) COLLATE NOCASE) ORDER BY ((((((((((((rt0.c3)AND(NULL)))AND(rt0.c2)))OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((((((rt0.c3)AND(NULL)))AND(rt0.c2)))OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE ASC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ((vt0.c0 IN (vt0.c0)) COLLATE NOCASE) ORDER BY ((((((((((((rt0.c3)AND(NULL)))AND(rt0.c2)))OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((((((rt0.c3)AND(NULL)))AND(rt0.c2)))OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE ASC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ((vt0.c0 IN (vt0.c0)) COLLATE NOCASE) ORDER BY ((((((((((((rt0.c3)AND(NULL)))AND(rt0.c2)))OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((- (rt0.c0)));
SELECT SUM(count) FROM (SELECT (((- (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((- (rt0.c0)));
SELECT SUM(count) FROM (SELECT (((- (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((- (rt0.c0)));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (0.3396058409421864);
SELECT SUM(count) FROM (SELECT ALL ((0.3396058409421864) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (0.3396058409421864);
SELECT SUM(count) FROM (SELECT ALL ((0.3396058409421864) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (0.3396058409421864);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)-(rt0.c5)))=((((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)-(rt0.c5)))=((((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)-(rt0.c5)))=((((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)-(rt0.c5)))=((((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)-(rt0.c5)))=((((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c2))))));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (((('-1762901262')|(rt0.c2)))<<(((rt0.c5) NOT NULL))) WHERE ('') ORDER BY ((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c3)))AND(rt0.c2)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((('-1762901262')|(rt0.c2)))<<(((rt0.c5) NOT NULL))) ORDER BY ((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c3)))AND(rt0.c2)) COLLATE NOCASE ASC);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (((('-1762901262')|(rt0.c2)))<<(((rt0.c5) NOT NULL))) WHERE ('') ORDER BY ((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c3)))AND(rt0.c2)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((('-1762901262')|(rt0.c2)))<<(((rt0.c5) NOT NULL))) ORDER BY ((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c3)))AND(rt0.c2)) COLLATE NOCASE ASC);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (((('-1762901262')|(rt0.c2)))<<(((rt0.c5) NOT NULL))) WHERE ('') ORDER BY ((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c3)))AND(rt0.c2)) COLLATE NOCASE ASC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE ((rt0.c1) NOT NULL)  WHEN ((rt0.c3) IS FALSE) THEN ((('532924744'))=((rt0.c3))) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1) NOT NULL)  WHEN ((rt0.c3) IS FALSE) THEN ((('532924744'))=((rt0.c3))) END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE ((rt0.c1) NOT NULL)  WHEN ((rt0.c3) IS FALSE) THEN ((('532924744'))=((rt0.c3))) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1) NOT NULL)  WHEN ((rt0.c3) IS FALSE) THEN ((('532924744'))=((rt0.c3))) END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE ((rt0.c1) NOT NULL)  WHEN ((rt0.c3) IS FALSE) THEN ((('532924744'))=((rt0.c3))) END);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c0)||(rt0.c5))) BETWEEN (CASE vt0.c0  WHEN rt0.c3 THEN rt0.c3 END) AND (rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)||(rt0.c5))) BETWEEN (CASE vt0.c0  WHEN rt0.c3 THEN rt0.c3 END) AND (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c0)||(rt0.c5))) BETWEEN (CASE vt0.c0  WHEN rt0.c3 THEN rt0.c3 END) AND (rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)||(rt0.c5))) BETWEEN (CASE vt0.c0  WHEN rt0.c3 THEN rt0.c3 END) AND (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c0)||(rt0.c5))) BETWEEN (CASE vt0.c0  WHEN rt0.c3 THEN rt0.c3 END) AND (rt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((- (x'6339')));
SELECT SUM(count) FROM (SELECT ALL (((- (x'6339'))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((- (x'6339')));
SELECT SUM(count) FROM (SELECT ALL (((- (x'6339'))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((- (x'6339')));
SELECT ALL * FROM rt0 WHERE ('C') ORDER BY ((((rt0.c2)!=(0.7263261499019522)))==(((rt0.c1)LIKE(rt0.c2))));
SELECT SUM(count) FROM (SELECT (('C') IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)<>(0.7263261499019522)))==(((rt0.c1)LIKE(rt0.c2)))));
SELECT ALL * FROM rt0 WHERE ('C') ORDER BY ((((rt0.c2)!=(0.7263261499019522)))==(((rt0.c1)LIKE(rt0.c2))));
SELECT SUM(count) FROM (SELECT (('C') IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)<>(0.7263261499019522)))==(((rt0.c1)LIKE(rt0.c2)))));
SELECT ALL * FROM rt0 WHERE ('C') ORDER BY ((((rt0.c2)!=(0.7263261499019522)))==(((rt0.c1)LIKE(rt0.c2))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0))) NOT BETWEEN (((vt0.c0)<(vt0.c0))) AND ((- (NULL))))) ORDER BY ((vt0.c0)OR(vt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0))) NOT BETWEEN (((vt0.c0)<(vt0.c0))) AND ((- (NULL))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)OR(vt0.c0)) COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0))) NOT BETWEEN (((vt0.c0)<(vt0.c0))) AND ((- (NULL))))) ORDER BY ((vt0.c0)OR(vt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0))) NOT BETWEEN (((vt0.c0)<(vt0.c0))) AND ((- (NULL))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)OR(vt0.c0)) COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0))) NOT BETWEEN (((vt0.c0)<(vt0.c0))) AND ((- (NULL))))) ORDER BY ((vt0.c0)OR(vt0.c0)) COLLATE BINARY;
SELECT * FROM vt0, rt0 WHERE (CAST((((rt0.c1))>=((rt0.c0))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c1))>=((rt0.c0))) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST((((rt0.c1))>=((rt0.c0))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c1))>=((rt0.c0))) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST((((rt0.c1))>=((rt0.c0))) AS INTEGER));
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c4)OR(vt0.c0)) THEN (((((((('')OR(rt0.c5)))OR(0.9120352297896316)))OR(rt0.c0)))AND(rt0.c4)) ELSE ((('5628166')) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c4)OR(vt0.c0)) THEN (((((((('')OR(rt0.c5)))OR(0.9120352297896316)))OR(rt0.c0)))AND(rt0.c4)) ELSE ((('5628166')) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))) END) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c4)OR(vt0.c0)) THEN (((((((('')OR(rt0.c5)))OR(0.9120352297896316)))OR(rt0.c0)))AND(rt0.c4)) ELSE ((('5628166')) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c4)OR(vt0.c0)) THEN (((((((('')OR(rt0.c5)))OR(0.9120352297896316)))OR(rt0.c0)))AND(rt0.c4)) ELSE ((('5628166')) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))) END) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c4)OR(vt0.c0)) THEN (((((((('')OR(rt0.c5)))OR(0.9120352297896316)))OR(rt0.c0)))AND(rt0.c4)) ELSE ((('5628166')) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))) END);
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c1)OR(rt0.c4)))OR(rt0.c0)))OR(rt0.c5)))OR(rt0.c2))) NOT NULL)) ORDER BY ((rt0.c4 COLLATE NOCASE)=((+ (rt0.c5))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)OR(rt0.c4)))OR(rt0.c0)))OR(rt0.c5)))OR(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c4 COLLATE NOCASE)=((+ (rt0.c5)))));
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c1)OR(rt0.c4)))OR(rt0.c0)))OR(rt0.c5)))OR(rt0.c2))) NOT NULL)) ORDER BY ((rt0.c4 COLLATE NOCASE)=((+ (rt0.c5))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)OR(rt0.c4)))OR(rt0.c0)))OR(rt0.c5)))OR(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c4 COLLATE NOCASE)=((+ (rt0.c5)))));
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c1)OR(rt0.c4)))OR(rt0.c0)))OR(rt0.c5)))OR(rt0.c2))) NOT NULL)) ORDER BY ((rt0.c4 COLLATE NOCASE)=((+ (rt0.c5))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)GLOB(0.05730308755171931)))<>((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)GLOB(0.05730308755171931)))!=((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)GLOB(0.05730308755171931)))<>((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)GLOB(0.05730308755171931)))!=((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)GLOB(0.05730308755171931)))<>((vt0.c0 IN ()))));
SELECT ALL * FROM rt0 NOT INDEXED NATURAL JOIN vt0 WHERE (NULL) ORDER BY ((rt0.c4 COLLATE RTRIM) NOT BETWEEN (((rt0.c0) ISNULL)) AND (CAST(rt0.c1 AS REAL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY ((rt0.c4 COLLATE RTRIM) NOT BETWEEN (((rt0.c0) ISNULL)) AND (CAST(rt0.c1 AS REAL))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 NOT INDEXED NATURAL JOIN vt0 WHERE (NULL) ORDER BY ((rt0.c4 COLLATE RTRIM) NOT BETWEEN (((rt0.c0) ISNULL)) AND (CAST(rt0.c1 AS REAL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY ((rt0.c4 COLLATE RTRIM) NOT BETWEEN (((rt0.c0) ISNULL)) AND (CAST(rt0.c1 AS REAL))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 NOT INDEXED NATURAL JOIN vt0 WHERE (NULL) ORDER BY ((rt0.c4 COLLATE RTRIM) NOT BETWEEN (((rt0.c0) ISNULL)) AND (CAST(rt0.c1 AS REAL))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON UPPER(rt0.c0) COLLATE BINARY WHERE ((((vt0.c0)) NOT BETWEEN (((((rt0.c0, rt0.c2, rt0.c2))<=((rt0.c4, rt0.c2, ''))))) AND ((((NULL) IS FALSE))))) ORDER BY ((QUOTE(NULL))<(rt0.c5 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((((rt0.c0, rt0.c2, rt0.c2))<=((rt0.c4, rt0.c2, ''))))) AND ((((NULL) IS FALSE))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON UPPER(rt0.c0) COLLATE BINARY ORDER BY ((QUOTE(NULL))<(rt0.c5 COLLATE NOCASE))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON UPPER(rt0.c0) COLLATE BINARY WHERE ((((vt0.c0)) NOT BETWEEN (((((rt0.c0, rt0.c2, rt0.c2))<=((rt0.c4, rt0.c2, ''))))) AND ((((NULL) IS FALSE))))) ORDER BY ((QUOTE(NULL))<(rt0.c5 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((((rt0.c0, rt0.c2, rt0.c2))<=((rt0.c4, rt0.c2, ''))))) AND ((((NULL) IS FALSE))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON UPPER(rt0.c0) COLLATE BINARY ORDER BY ((QUOTE(NULL))<(rt0.c5 COLLATE NOCASE))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON UPPER(rt0.c0) COLLATE BINARY WHERE ((((vt0.c0)) NOT BETWEEN (((((rt0.c0, rt0.c2, rt0.c2))<=((rt0.c4, rt0.c2, ''))))) AND ((((NULL) IS FALSE))))) ORDER BY ((QUOTE(NULL))<(rt0.c5 COLLATE NOCASE))  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((((vt0.c0 IN ()))AND('{}33')))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))AND('{}33')))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0 IN ()))AND('{}33')))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))AND('{}33')))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0 IN ()))AND('{}33')))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((((CASE rt0.c5  WHEN rt0.c5 THEN rt0.c1 END)OR(CAST(rt0.c5 AS NUMERIC))))OR(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c5  WHEN rt0.c5 THEN rt0.c1 END)OR(CAST(rt0.c5 AS NUMERIC))))OR(NULL))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((((CASE rt0.c5  WHEN rt0.c5 THEN rt0.c1 END)OR(CAST(rt0.c5 AS NUMERIC))))OR(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c5  WHEN rt0.c5 THEN rt0.c1 END)OR(CAST(rt0.c5 AS NUMERIC))))OR(NULL))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((((CASE rt0.c5  WHEN rt0.c5 THEN rt0.c1 END)OR(CAST(rt0.c5 AS NUMERIC))))OR(NULL)));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c2)) THEN ((rt0.c5)+(rt0.c0)) WHEN (- (rt0.c4)) THEN (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c1))) WHEN ((((rt0.c4)OR(rt0.c3)))AND(rt0.c3)) THEN CAST(NULL AS BLOB) ELSE rt0.c5 COLLATE NOCASE END) ORDER BY ((CASE rt0.c5  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END) NOT BETWEEN (0.8955069866127602) AND (ABS(DISTINCT rt0.c5)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c2)) THEN ((rt0.c5)+(rt0.c0)) WHEN (- (rt0.c4)) THEN (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c1))) WHEN ((((rt0.c4)OR(rt0.c3)))AND(rt0.c3)) THEN CAST(NULL AS BLOB) ELSE rt0.c5 COLLATE NOCASE END) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE rt0.c5  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END) NOT BETWEEN (0.8955069866127602) AND (ABS(DISTINCT rt0.c5)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c2)) THEN ((rt0.c5)+(rt0.c0)) WHEN (- (rt0.c4)) THEN (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c1))) WHEN ((((rt0.c4)OR(rt0.c3)))AND(rt0.c3)) THEN CAST(NULL AS BLOB) ELSE rt0.c5 COLLATE NOCASE END) ORDER BY ((CASE rt0.c5  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END) NOT BETWEEN (0.8955069866127602) AND (ABS(DISTINCT rt0.c5)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c2)) THEN ((rt0.c5)+(rt0.c0)) WHEN (- (rt0.c4)) THEN (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c1))) WHEN ((((rt0.c4)OR(rt0.c3)))AND(rt0.c3)) THEN CAST(NULL AS BLOB) ELSE rt0.c5 COLLATE NOCASE END) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE rt0.c5  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END) NOT BETWEEN (0.8955069866127602) AND (ABS(DISTINCT rt0.c5)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c2)) THEN ((rt0.c5)+(rt0.c0)) WHEN (- (rt0.c4)) THEN (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c1))) WHEN ((((rt0.c4)OR(rt0.c3)))AND(rt0.c3)) THEN CAST(NULL AS BLOB) ELSE rt0.c5 COLLATE NOCASE END) ORDER BY ((CASE rt0.c5  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END) NOT BETWEEN (0.8955069866127602) AND (ABS(DISTINCT rt0.c5)))  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((rt0.c2)<>(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)!=(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((rt0.c2)<>(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)!=(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((rt0.c2)<>(vt0.c0)) AS INTEGER));
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(((rt0.c0)*(rt0.c5)) AS NUMERIC)) ORDER BY (rt0.c5 COLLATE RTRIM IN ((NOT (rt0.c4)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)*(rt0.c5)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (rt0.c5 COLLATE RTRIM IN ((NOT (rt0.c4)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(((rt0.c0)*(rt0.c5)) AS NUMERIC)) ORDER BY (rt0.c5 COLLATE RTRIM IN ((NOT (rt0.c4)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)*(rt0.c5)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (rt0.c5 COLLATE RTRIM IN ((NOT (rt0.c4)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(((rt0.c0)*(rt0.c5)) AS NUMERIC)) ORDER BY (rt0.c5 COLLATE RTRIM IN ((NOT (rt0.c4)))) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (0Xfffffffffea0eacb);
SELECT SUM(count) FROM (SELECT ((0xfffffffffea0eacb) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (0Xfffffffffea0eacb);
SELECT SUM(count) FROM (SELECT ((0xfffffffffea0eacb) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (0Xfffffffffea0eacb);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c3)GLOB(rt0.c2)))|((+ (vt0.c0))))) ORDER BY ((rt0.c4) BETWEEN (UNICODE(vt0.c0)) AND (vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)GLOB(rt0.c2)))|((+ (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c4) BETWEEN (UNICODE(vt0.c0)) AND (vt0.c0))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c3)GLOB(rt0.c2)))|((+ (vt0.c0))))) ORDER BY ((rt0.c4) BETWEEN (UNICODE(vt0.c0)) AND (vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)GLOB(rt0.c2)))|((+ (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c4) BETWEEN (UNICODE(vt0.c0)) AND (vt0.c0))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c3)GLOB(rt0.c2)))|((+ (vt0.c0))))) ORDER BY ((rt0.c4) BETWEEN (UNICODE(vt0.c0)) AND (vt0.c0))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((((rt0.c4))<((rt0.c3))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c4))<((rt0.c3))) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((((rt0.c4))<((rt0.c3))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c4))<((rt0.c3))) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((((rt0.c4))<((rt0.c3))) AS BLOB));
SELECT ALL * FROM vt0 WHERE ((((((x'')) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (((x'b86b') ISNULL)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((x'')) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (((x'b86b') ISNULL)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((x'')) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (((x'b86b') ISNULL)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((x'')) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (((x'b86b') ISNULL)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((x'')) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (((x'b86b') ISNULL)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3);
SELECT COUNT(*) FROM vt0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))>((((vt0.c0)!=(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))>((((vt0.c0)<>(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))>((((vt0.c0)!=(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))>((((vt0.c0)<>(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))>((((vt0.c0)!=(vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND ((((0.896080564048478)-(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND ((((0.896080564048478)-(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND ((((0.896080564048478)-(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND ((((0.896080564048478)-(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND ((((0.896080564048478)-(vt0.c0))))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)OR(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)OR(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)OR(vt0.c0)) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c3) IS FALSE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c3) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c3) IS FALSE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c3) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c3) IS FALSE) COLLATE RTRIM);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c5)&(vt0.c0))) NOT BETWEEN ((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) AND (CASE WHEN '689821412' THEN rt0.c2 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c0 THEN x'' END))) ORDER BY ((((((((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c5)))OR(rt0.c1)))&(((rt0.c4)>=(rt0.c3))))  NULLS FIRST, (rt0.c4 IN ()) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5)&(vt0.c0))) NOT BETWEEN ((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) AND (CASE WHEN '689821412' THEN rt0.c2 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c0 THEN x'' END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c5)))OR(rt0.c1)))&(((rt0.c4)>=(rt0.c3))))  NULLS FIRST, (rt0.c4 IN ()) COLLATE BINARY  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c5)&(vt0.c0))) NOT BETWEEN ((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) AND (CASE WHEN '689821412' THEN rt0.c2 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c0 THEN x'' END))) ORDER BY ((((((((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c5)))OR(rt0.c1)))&(((rt0.c4)>=(rt0.c3))))  NULLS FIRST, (rt0.c4 IN ()) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5)&(vt0.c0))) NOT BETWEEN ((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) AND (CASE WHEN '689821412' THEN rt0.c2 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c0 THEN x'' END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c5)))OR(rt0.c1)))&(((rt0.c4)>=(rt0.c3))))  NULLS FIRST, (rt0.c4 IN ()) COLLATE BINARY  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c5)&(vt0.c0))) NOT BETWEEN ((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) AND (CASE WHEN '689821412' THEN rt0.c2 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c0 THEN x'' END))) ORDER BY ((((((((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c5)))OR(rt0.c1)))&(((rt0.c4)>=(rt0.c3))))  NULLS FIRST, (rt0.c4 IN ()) COLLATE BINARY  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((~ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY IFNULL(CAST(vt0.c0 AS TEXT), ((vt0.c0)GLOB(vt0.c0))) ASC, ((CAST(vt0.c0 AS TEXT)) BETWEEN (((vt0.c0)OR(vt0.c0))) AND (vt0.c0 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY IFNULL(CAST(vt0.c0 AS TEXT), ((vt0.c0)GLOB(vt0.c0))) ASC, ((CAST(vt0.c0 AS TEXT)) BETWEEN (((vt0.c0)OR(vt0.c0))) AND (vt0.c0 COLLATE NOCASE)) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((~ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY IFNULL(CAST(vt0.c0 AS TEXT), ((vt0.c0)GLOB(vt0.c0))) ASC, ((CAST(vt0.c0 AS TEXT)) BETWEEN (((vt0.c0)OR(vt0.c0))) AND (vt0.c0 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY IFNULL(CAST(vt0.c0 AS TEXT), ((vt0.c0)GLOB(vt0.c0))) ASC, ((CAST(vt0.c0 AS TEXT)) BETWEEN (((vt0.c0)OR(vt0.c0))) AND (vt0.c0 COLLATE NOCASE)) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((~ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY IFNULL(CAST(vt0.c0 AS TEXT), ((vt0.c0)GLOB(vt0.c0))) ASC, ((CAST(vt0.c0 AS TEXT)) BETWEEN (((vt0.c0)OR(vt0.c0))) AND (vt0.c0 COLLATE NOCASE)) DESC;
SELECT ALL * FROM vt0 WHERE (((0.5634580676751538) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((0.5634580676751538) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((0.5634580676751538) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((0.5634580676751538) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((0.5634580676751538) NOT NULL));
SELECT * FROM rt0, vt0 WHERE (((((CAST(rt0.c2 AS INTEGER))OR(((rt0.c3) NOTNULL))))OR(NULLIF(rt0.c3, rt0.c5))));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c2 AS INTEGER))OR(((rt0.c3) NOTNULL))))OR(NULLIF(rt0.c3, rt0.c5)))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((CAST(rt0.c2 AS INTEGER))OR(((rt0.c3) NOTNULL))))OR(NULLIF(rt0.c3, rt0.c5))));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c2 AS INTEGER))OR(((rt0.c3) NOTNULL))))OR(NULLIF(rt0.c3, rt0.c5)))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((CAST(rt0.c2 AS INTEGER))OR(((rt0.c3) NOTNULL))))OR(NULLIF(rt0.c3, rt0.c5))));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON json_object(rt0.c3, json_patch(rt0.c5, rt0.c4)) WHERE ('YTRLE{t^') ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c5 END) IS TRUE);
SELECT SUM(count) FROM (SELECT (('YTRLE{t^') IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON json_object(rt0.c3, json_patch(rt0.c5, rt0.c4)) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c5 END) IS TRUE));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON json_object(rt0.c3, json_patch(rt0.c5, rt0.c4)) WHERE ('YTRLE{t^') ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c5 END) IS TRUE);
SELECT SUM(count) FROM (SELECT (('YTRLE{t^') IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON json_object(rt0.c3, json_patch(rt0.c5, rt0.c4)) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c5 END) IS TRUE));
SELECT * FROM rt0 WHERE ((rt0.c1 IN ()) COLLATE BINARY) ORDER BY TRIM(DISTINCT (- (rt0.c4)), ((rt0.c2) ISNULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY TRIM(DISTINCT (- (rt0.c4)), ((rt0.c2) ISNULL))  NULLS FIRST);
SELECT * FROM rt0 WHERE ((rt0.c1 IN ()) COLLATE BINARY) ORDER BY TRIM(DISTINCT (- (rt0.c4)), ((rt0.c2) ISNULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY TRIM(DISTINCT (- (rt0.c4)), ((rt0.c2) ISNULL))  NULLS FIRST);
SELECT * FROM rt0 WHERE ((rt0.c1 IN ()) COLLATE BINARY) ORDER BY TRIM(DISTINCT (- (rt0.c4)), ((rt0.c2) ISNULL))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY ((((rt0.c2) IS FALSE)) ISNULL) DESC, ((('&_') NOTNULL) IN ()) DESC  NULLS LAST, ((rt0.c3 COLLATE BINARY) BETWEEN (SUBSTR(rt0.c2, 0.2579608265234873)) AND (rt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) IS FALSE)) ISNULL) DESC, ((('&_') NOTNULL) IN ()) DESC  NULLS LAST, ((rt0.c3 COLLATE BINARY) BETWEEN (SUBSTR(rt0.c2, 0.2579608265234873)) AND (rt0.c0)) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY ((((rt0.c2) IS FALSE)) ISNULL) DESC, ((('&_') NOTNULL) IN ()) DESC  NULLS LAST, ((rt0.c3 COLLATE BINARY) BETWEEN (SUBSTR(rt0.c2, 0.2579608265234873)) AND (rt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) IS FALSE)) ISNULL) DESC, ((('&_') NOTNULL) IN ()) DESC  NULLS LAST, ((rt0.c3 COLLATE BINARY) BETWEEN (SUBSTR(rt0.c2, 0.2579608265234873)) AND (rt0.c0)) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY ((((rt0.c2) IS FALSE)) ISNULL) DESC, ((('&_') NOTNULL) IN ()) DESC  NULLS LAST, ((rt0.c3 COLLATE BINARY) BETWEEN (SUBSTR(rt0.c2, 0.2579608265234873)) AND (rt0.c0)) ASC;
SELECT * FROM rt0, vt0 WHERE ((((rt0.c5))>=(((NOT (rt0.c3)))))) ORDER BY (NOT ((((rt0.c3))<>((0.29876603317170847))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c5))>=(((NOT (rt0.c3)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (NOT ((((rt0.c3))<>((0.29876603317170847))))) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c5))>=(((NOT (rt0.c3)))))) ORDER BY (NOT ((((rt0.c3))<>((0.29876603317170847))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c5))>=(((NOT (rt0.c3)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (NOT ((((rt0.c3))<>((0.29876603317170847))))) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c5))>=(((NOT (rt0.c3)))))) ORDER BY (NOT ((((rt0.c3))<>((0.29876603317170847))))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE ((((((('.t\rG䯒#U/&')AND(rt0.c2)))OR(vt0.c0))) BETWEEN ((+ (rt0.c1))) AND (CAST(rt0.c2 AS NUMERIC)))) ORDER BY rt0.c4 DESC  NULLS FIRST, ((((rt0.c1)|(vt0.c0)))IS(CAST(rt0.c3 AS TEXT))) DESC, rt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((('.t\rG䯒#U/&')AND(rt0.c2)))OR(vt0.c0))) BETWEEN ((+ (rt0.c1))) AND (CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c4 DESC  NULLS FIRST, ((((rt0.c1)|(vt0.c0)))IS(CAST(rt0.c3 AS TEXT))) DESC, rt0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE ((((((('.t\rG䯒#U/&')AND(rt0.c2)))OR(vt0.c0))) BETWEEN ((+ (rt0.c1))) AND (CAST(rt0.c2 AS NUMERIC)))) ORDER BY rt0.c4 DESC  NULLS FIRST, ((((rt0.c1)|(vt0.c0)))IS(CAST(rt0.c3 AS TEXT))) DESC, rt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((('.t\rG䯒#U/&')AND(rt0.c2)))OR(vt0.c0))) BETWEEN ((+ (rt0.c1))) AND (CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c4 DESC  NULLS FIRST, ((((rt0.c1)|(vt0.c0)))IS(CAST(rt0.c3 AS TEXT))) DESC, rt0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE ((((((('.t\rG䯒#U/&')AND(rt0.c2)))OR(vt0.c0))) BETWEEN ((+ (rt0.c1))) AND (CAST(rt0.c2 AS NUMERIC)))) ORDER BY rt0.c4 DESC  NULLS FIRST, ((((rt0.c1)|(vt0.c0)))IS(CAST(rt0.c3 AS TEXT))) DESC, rt0.c0 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (TYPEOF(((((((((rt0.c5)OR(rt0.c5)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))) ORDER BY ((((rt0.c3)IS(rt0.c4)))|((+ (rt0.c4)))) ASC  NULLS LAST, CAST(((rt0.c4) IS TRUE) AS NUMERIC) ASC, (((rt0.c1 IN ())) BETWEEN ('') AND (LIKELY(DISTINCT rt0.c3)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((((((((rt0.c5)OR(rt0.c5)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)IS(rt0.c4)))|((+ (rt0.c4)))) ASC  NULLS LAST, CAST(((rt0.c4) IS TRUE) AS NUMERIC) ASC, (((rt0.c1 IN ())) BETWEEN ('') AND (LIKELY(DISTINCT rt0.c3))));
SELECT ALL COUNT(*) FROM rt0 WHERE (TYPEOF(((((((((rt0.c5)OR(rt0.c5)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))) ORDER BY ((((rt0.c3)IS(rt0.c4)))|((+ (rt0.c4)))) ASC  NULLS LAST, CAST(((rt0.c4) IS TRUE) AS NUMERIC) ASC, (((rt0.c1 IN ())) BETWEEN ('') AND (LIKELY(DISTINCT rt0.c3)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((((((((rt0.c5)OR(rt0.c5)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)IS(rt0.c4)))|((+ (rt0.c4)))) ASC  NULLS LAST, CAST(((rt0.c4) IS TRUE) AS NUMERIC) ASC, (((rt0.c1 IN ())) BETWEEN ('') AND (LIKELY(DISTINCT rt0.c3))));
SELECT ALL COUNT(*) FROM rt0 WHERE (TYPEOF(((((((((rt0.c5)OR(rt0.c5)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))) ORDER BY ((((rt0.c3)IS(rt0.c4)))|((+ (rt0.c4)))) ASC  NULLS LAST, CAST(((rt0.c4) IS TRUE) AS NUMERIC) ASC, (((rt0.c1 IN ())) BETWEEN ('') AND (LIKELY(DISTINCT rt0.c3)));
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c2 COLLATE RTRIM THEN ((((rt0.c0)OR(rt0.c1)))AND(rt0.c5)) END) ORDER BY CAST('-777221765' AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c2 COLLATE RTRIM THEN ((((rt0.c0)OR(rt0.c1)))AND(rt0.c5)) END) IS TRUE)  as count FROM rt0 ORDER BY CAST('-777221765' AS NUMERIC));
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c2 COLLATE RTRIM THEN ((((rt0.c0)OR(rt0.c1)))AND(rt0.c5)) END) ORDER BY CAST('-777221765' AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c2 COLLATE RTRIM THEN ((((rt0.c0)OR(rt0.c1)))AND(rt0.c5)) END) IS TRUE)  as count FROM rt0 ORDER BY CAST('-777221765' AS NUMERIC));
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c2 COLLATE RTRIM THEN ((((rt0.c0)OR(rt0.c1)))AND(rt0.c5)) END) ORDER BY CAST('-777221765' AS NUMERIC);
SELECT ALL * FROM rt0 WHERE (((x'' COLLATE RTRIM) BETWEEN (rt0.c0 COLLATE NOCASE) AND (rt0.c0))) ORDER BY ((json_object(rt0.c0, rt0.c5)) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'' COLLATE RTRIM) BETWEEN (rt0.c0 COLLATE NOCASE) AND (rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY ((json_object(rt0.c0, rt0.c5)) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((x'' COLLATE RTRIM) BETWEEN (rt0.c0 COLLATE NOCASE) AND (rt0.c0))) ORDER BY ((json_object(rt0.c0, rt0.c5)) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'' COLLATE RTRIM) BETWEEN (rt0.c0 COLLATE NOCASE) AND (rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY ((json_object(rt0.c0, rt0.c5)) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CAST(vt0.c0 AS INTEGER))!=(((0.34866521995692057) NOT BETWEEN (rt0.c0) AND (rt0.c4))))) ORDER BY (((NULL COLLATE RTRIM, ((rt0.c5)>=(rt0.c5)), ((rt0.c0) ISNULL)))<=((LAST_INSERT_ROWID(), rt0.c5, ((rt0.c1)>=(rt0.c0))))) ASC, x'' DESC, CAST(((((((((rt0.c4)OR(rt0.c5)))OR(vt0.c0)))OR(rt0.c5)))OR(rt0.c0)) AS NUMERIC)  NULLS FIRST, ((~ (rt0.c4)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER))!=(((0.34866521995692057) NOT BETWEEN (rt0.c0) AND (rt0.c4))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((NULL COLLATE RTRIM, ((rt0.c5)>=(rt0.c5)), ((rt0.c0) ISNULL)))<=((LAST_INSERT_ROWID(), rt0.c5, ((rt0.c1)>=(rt0.c0))))) ASC, x'' DESC, CAST(((((((((rt0.c4)OR(rt0.c5)))OR(vt0.c0)))OR(rt0.c5)))OR(rt0.c0)) AS NUMERIC)  NULLS FIRST, ((~ (rt0.c4)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CAST(vt0.c0 AS INTEGER))!=(((0.34866521995692057) NOT BETWEEN (rt0.c0) AND (rt0.c4))))) ORDER BY (((NULL COLLATE RTRIM, ((rt0.c5)>=(rt0.c5)), ((rt0.c0) ISNULL)))<=((LAST_INSERT_ROWID(), rt0.c5, ((rt0.c1)>=(rt0.c0))))) ASC, x'' DESC, CAST(((((((((rt0.c4)OR(rt0.c5)))OR(vt0.c0)))OR(rt0.c5)))OR(rt0.c0)) AS NUMERIC)  NULLS FIRST, ((~ (rt0.c4)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER))!=(((0.34866521995692057) NOT BETWEEN (rt0.c0) AND (rt0.c4))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((NULL COLLATE RTRIM, ((rt0.c5)>=(rt0.c5)), ((rt0.c0) ISNULL)))<=((LAST_INSERT_ROWID(), rt0.c5, ((rt0.c1)>=(rt0.c0))))) ASC, x'' DESC, CAST(((((((((rt0.c4)OR(rt0.c5)))OR(vt0.c0)))OR(rt0.c5)))OR(rt0.c0)) AS NUMERIC)  NULLS FIRST, ((~ (rt0.c4)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CAST(vt0.c0 AS INTEGER))!=(((0.34866521995692057) NOT BETWEEN (rt0.c0) AND (rt0.c4))))) ORDER BY (((NULL COLLATE RTRIM, ((rt0.c5)>=(rt0.c5)), ((rt0.c0) ISNULL)))<=((LAST_INSERT_ROWID(), rt0.c5, ((rt0.c1)>=(rt0.c0))))) ASC, x'' DESC, CAST(((((((((rt0.c4)OR(rt0.c5)))OR(vt0.c0)))OR(rt0.c5)))OR(rt0.c0)) AS NUMERIC)  NULLS FIRST, ((~ (rt0.c4)) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((rt0.c0) ISNULL) WHERE (((((rt0.c5) IS TRUE))AND(CAST(rt0.c5 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5) IS TRUE))AND(CAST(rt0.c5 AS TEXT)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((rt0.c0) ISNULL));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((rt0.c0) ISNULL) WHERE (((((rt0.c5) IS TRUE))AND(CAST(rt0.c5 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5) IS TRUE))AND(CAST(rt0.c5 AS TEXT)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((rt0.c0) ISNULL));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((rt0.c0) ISNULL) WHERE (((((rt0.c5) IS TRUE))AND(CAST(rt0.c5 AS TEXT))));
SELECT * FROM rt0, vt0 WHERE ((rt0.c3 IN (rt0.c4)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((rt0.c3 IN (rt0.c4)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((rt0.c3 IN (rt0.c4)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((rt0.c3 IN (rt0.c4)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((rt0.c3 IN (rt0.c4)) COLLATE NOCASE);
SELECT * FROM vt0 WHERE ((~ (vt0.c0 COLLATE RTRIM))) ORDER BY (- (((vt0.c0)-(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0)-(vt0.c0)))) DESC);
SELECT * FROM vt0 WHERE ((~ (vt0.c0 COLLATE RTRIM))) ORDER BY (- (((vt0.c0)-(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0)-(vt0.c0)))) DESC);
SELECT * FROM vt0 WHERE ((~ (vt0.c0 COLLATE RTRIM))) ORDER BY (- (((vt0.c0)-(vt0.c0)))) DESC;
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON (+ (rt0.c3 COLLATE BINARY)) WHERE ((((rt0.c2, rt0.c0, rt0.c0, NULL, 0.20020461672437773, rt0.c5, rt0.c1)) NOT BETWEEN ((((x'') ISNULL), vt0.c0, CAST(rt0.c4 AS REAL), ((((((((rt0.c2)OR(rt0.c5)))AND(rt0.c5)))OR(rt0.c5)))AND(vt0.c0)), (((vt0.c0))>((vt0.c0))), CAST(rt0.c2 AS INTEGER), LIKELY(DISTINCT rt0.c0))) AND ((((rt0.c1)AND(rt0.c4)), rt0.c2, ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), (rt0.c2 IN ()), TYPEOF(rt0.c0), (((rt0.c3))!=((rt0.c3))), rt0.c5)))) ORDER BY rt0.c4 ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c0, rt0.c0, NULL, 0.20020461672437773, rt0.c5, rt0.c1)) NOT BETWEEN ((((x'') ISNULL), vt0.c0, CAST(rt0.c4 AS REAL), ((((((((rt0.c2)OR(rt0.c5)))AND(rt0.c5)))OR(rt0.c5)))AND(vt0.c0)), (((vt0.c0))>((vt0.c0))), CAST(rt0.c2 AS INTEGER), LIKELY(DISTINCT rt0.c0))) AND ((((rt0.c1)AND(rt0.c4)), rt0.c2, ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), (rt0.c2 IN ()), TYPEOF(rt0.c0), (((rt0.c3))!=((rt0.c3))), rt0.c5)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (+ (rt0.c3 COLLATE BINARY)) ORDER BY rt0.c4 ASC);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON (+ (rt0.c3 COLLATE BINARY)) WHERE ((((rt0.c2, rt0.c0, rt0.c0, NULL, 0.20020461672437773, rt0.c5, rt0.c1)) NOT BETWEEN ((((x'') ISNULL), vt0.c0, CAST(rt0.c4 AS REAL), ((((((((rt0.c2)OR(rt0.c5)))AND(rt0.c5)))OR(rt0.c5)))AND(vt0.c0)), (((vt0.c0))>((vt0.c0))), CAST(rt0.c2 AS INTEGER), LIKELY(DISTINCT rt0.c0))) AND ((((rt0.c1)AND(rt0.c4)), rt0.c2, ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), (rt0.c2 IN ()), TYPEOF(rt0.c0), (((rt0.c3))!=((rt0.c3))), rt0.c5)))) ORDER BY rt0.c4 ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c0, rt0.c0, NULL, 0.20020461672437773, rt0.c5, rt0.c1)) NOT BETWEEN ((((x'') ISNULL), vt0.c0, CAST(rt0.c4 AS REAL), ((((((((rt0.c2)OR(rt0.c5)))AND(rt0.c5)))OR(rt0.c5)))AND(vt0.c0)), (((vt0.c0))>((vt0.c0))), CAST(rt0.c2 AS INTEGER), LIKELY(DISTINCT rt0.c0))) AND ((((rt0.c1)AND(rt0.c4)), rt0.c2, ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), (rt0.c2 IN ()), TYPEOF(rt0.c0), (((rt0.c3))!=((rt0.c3))), rt0.c5)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (+ (rt0.c3 COLLATE BINARY)) ORDER BY rt0.c4 ASC);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON (+ (rt0.c3 COLLATE BINARY)) WHERE ((((rt0.c2, rt0.c0, rt0.c0, NULL, 0.20020461672437773, rt0.c5, rt0.c1)) NOT BETWEEN ((((x'') ISNULL), vt0.c0, CAST(rt0.c4 AS REAL), ((((((((rt0.c2)OR(rt0.c5)))AND(rt0.c5)))OR(rt0.c5)))AND(vt0.c0)), (((vt0.c0))>((vt0.c0))), CAST(rt0.c2 AS INTEGER), LIKELY(DISTINCT rt0.c0))) AND ((((rt0.c1)AND(rt0.c4)), rt0.c2, ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), (rt0.c2 IN ()), TYPEOF(rt0.c0), (((rt0.c3))!=((rt0.c3))), rt0.c5)))) ORDER BY rt0.c4 ASC;
SELECT ALL * FROM rt0, vt0 WHERE ((NOT (((rt0.c2)<(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c2)<(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((NOT (((rt0.c2)<(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c2)<(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((NOT (((rt0.c2)<(rt0.c1)))));
SELECT ALL * FROM vt0 WHERE ('lkv');
SELECT SUM(count) FROM (SELECT (('lkv') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('lkv');
SELECT SUM(count) FROM (SELECT (('lkv') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('lkv');
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON (~ (CAST(rt0.c0 AS INTEGER))) WHERE (CASE WHEN LOWER(DISTINCT rt0.c5) THEN (NOT (0.036751986856377705)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN LOWER(DISTINCT rt0.c5) THEN (NOT (0.036751986856377705)) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (~ (CAST(rt0.c0 AS INTEGER))));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON (~ (CAST(rt0.c0 AS INTEGER))) WHERE (CASE WHEN LOWER(DISTINCT rt0.c5) THEN (NOT (0.036751986856377705)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN LOWER(DISTINCT rt0.c5) THEN (NOT (0.036751986856377705)) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (~ (CAST(rt0.c0 AS INTEGER))));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON (~ (CAST(rt0.c0 AS INTEGER))) WHERE (CASE WHEN LOWER(DISTINCT rt0.c5) THEN (NOT (0.036751986856377705)) END);
SELECT * FROM vt0 WHERE ('-1853405327') ORDER BY CAST(vt0.c0 AS REAL) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-1853405327') IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS REAL) COLLATE RTRIM DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ('-1853405327') ORDER BY CAST(vt0.c0 AS REAL) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-1853405327') IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS REAL) COLLATE RTRIM DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ('-1853405327') ORDER BY CAST(vt0.c0 AS REAL) COLLATE RTRIM DESC  NULLS LAST;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON CAST('-373778633' AS INTEGER) WHERE (COALESCE(DISTINCT ((rt0.c4)=(rt0.c1)), CAST(rt0.c3 AS INTEGER), TYPEOF(rt0.c1), UPPER(DISTINCT rt0.c4)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ((rt0.c4)=(rt0.c1)), CAST(rt0.c3 AS INTEGER), TYPEOF(rt0.c1), UPPER(DISTINCT rt0.c4))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CAST('-373778633' AS INTEGER));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON CAST('-373778633' AS INTEGER) WHERE (COALESCE(DISTINCT ((rt0.c4)=(rt0.c1)), CAST(rt0.c3 AS INTEGER), TYPEOF(rt0.c1), UPPER(DISTINCT rt0.c4)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ((rt0.c4)=(rt0.c1)), CAST(rt0.c3 AS INTEGER), TYPEOF(rt0.c1), UPPER(DISTINCT rt0.c4))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CAST('-373778633' AS INTEGER));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON CAST('-373778633' AS INTEGER) WHERE (COALESCE(DISTINCT ((rt0.c4)=(rt0.c1)), CAST(rt0.c3 AS INTEGER), TYPEOF(rt0.c1), UPPER(DISTINCT rt0.c4)));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON '1749011942' WHERE (((CASE rt0.c2  WHEN rt0.c4 THEN x'660b' WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN NULL ELSE vt0.c0 END)%(CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN rt0.c4 THEN x'660b' WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN NULL ELSE vt0.c0 END)%(CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON '1749011942');
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON '1749011942' WHERE (((CASE rt0.c2  WHEN rt0.c4 THEN x'660b' WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN NULL ELSE vt0.c0 END)%(CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN rt0.c4 THEN x'660b' WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN NULL ELSE vt0.c0 END)%(CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON '1749011942');
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON '1749011942' WHERE (((CASE rt0.c2  WHEN rt0.c4 THEN x'660b' WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN NULL ELSE vt0.c0 END)%(CAST(rt0.c2 AS TEXT))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c3)AND(rt0.c0)))AND(rt0.c5))) ISNULL)) ORDER BY CAST(((((rt0.c0)OR(rt0.c0)))OR(vt0.c0)) AS REAL)  NULLS FIRST, rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c5))) ISNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((((rt0.c0)OR(rt0.c0)))OR(vt0.c0)) AS REAL)  NULLS FIRST, rt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c3)AND(rt0.c0)))AND(rt0.c5))) ISNULL)) ORDER BY CAST(((((rt0.c0)OR(rt0.c0)))OR(vt0.c0)) AS REAL)  NULLS FIRST, rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c5))) ISNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((((rt0.c0)OR(rt0.c0)))OR(vt0.c0)) AS REAL)  NULLS FIRST, rt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c3)AND(rt0.c0)))AND(rt0.c5))) ISNULL)) ORDER BY CAST(((((rt0.c0)OR(rt0.c0)))OR(vt0.c0)) AS REAL)  NULLS FIRST, rt0.c0  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c0)>(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)>(rt0.c2)) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c0)>(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)>(rt0.c2)) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c0)>(rt0.c2)) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c4) IS FALSE)) NOT BETWEEN (CASE rt0.c3  WHEN rt0.c4 THEN 0.07856625552280172 ELSE rt0.c3 END) AND (CAST(rt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) IS FALSE)) NOT BETWEEN (CASE rt0.c3  WHEN rt0.c4 THEN 0.07856625552280172 ELSE rt0.c3 END) AND (CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c4) IS FALSE)) NOT BETWEEN (CASE rt0.c3  WHEN rt0.c4 THEN 0.07856625552280172 ELSE rt0.c3 END) AND (CAST(rt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) IS FALSE)) NOT BETWEEN (CASE rt0.c3  WHEN rt0.c4 THEN 0.07856625552280172 ELSE rt0.c3 END) AND (CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c4) IS FALSE)) NOT BETWEEN (CASE rt0.c3  WHEN rt0.c4 THEN 0.07856625552280172 ELSE rt0.c3 END) AND (CAST(rt0.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (vt0.c0) ORDER BY (load_extension('') IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY (load_extension('') IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (vt0.c0) ORDER BY (load_extension('') IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY (load_extension('') IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (vt0.c0) ORDER BY (load_extension('') IN ()) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (HEX((rt0.c4 IN (vt0.c0)))) ORDER BY (('C') IS TRUE) DESC, ((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c0))) BETWEEN (((rt0.c4) NOTNULL)) AND (((vt0.c0)<(0.024668840558251026))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX((rt0.c4 IN (vt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (('C') IS TRUE) DESC, ((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c0))) BETWEEN (((rt0.c4) NOTNULL)) AND (((vt0.c0)<(0.024668840558251026))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (HEX((rt0.c4 IN (vt0.c0)))) ORDER BY (('C') IS TRUE) DESC, ((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c0))) BETWEEN (((rt0.c4) NOTNULL)) AND (((vt0.c0)<(0.024668840558251026))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX((rt0.c4 IN (vt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (('C') IS TRUE) DESC, ((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c0))) BETWEEN (((rt0.c4) NOTNULL)) AND (((vt0.c0)<(0.024668840558251026))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (HEX((rt0.c4 IN (vt0.c0)))) ORDER BY (('C') IS TRUE) DESC, ((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c0))) BETWEEN (((rt0.c4) NOTNULL)) AND (((vt0.c0)<(0.024668840558251026))))  NULLS LAST;
SELECT * FROM rt0 WHERE ((rt0.c3 IN (rt0.c3)) COLLATE BINARY) ORDER BY (((rt0.c1)) BETWEEN ((((rt0.c5) NOT NULL))) AND (((NOT (rt0.c5)))));
SELECT SUM(count) FROM (SELECT (((rt0.c3 IN (rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) BETWEEN ((((rt0.c5) NOT NULL))) AND (((NOT (rt0.c5))))));
SELECT * FROM rt0 WHERE ((rt0.c3 IN (rt0.c3)) COLLATE BINARY) ORDER BY (((rt0.c1)) BETWEEN ((((rt0.c5) NOT NULL))) AND (((NOT (rt0.c5)))));
SELECT SUM(count) FROM (SELECT (((rt0.c3 IN (rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) BETWEEN ((((rt0.c5) NOT NULL))) AND (((NOT (rt0.c5))))));
SELECT * FROM rt0 WHERE ((rt0.c3 IN (rt0.c3)) COLLATE BINARY) ORDER BY (((rt0.c1)) BETWEEN ((((rt0.c5) NOT NULL))) AND (((NOT (rt0.c5)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c3);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)LIKE(vt0.c0))  WHEN ((vt0.c0) IS TRUE) THEN vt0.c0 WHEN ((vt0.c0) BETWEEN (NULL) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN x'8726' THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)LIKE(vt0.c0))  WHEN ((vt0.c0) IS TRUE) THEN vt0.c0 WHEN ((vt0.c0) BETWEEN (NULL) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN x'8726' THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)LIKE(vt0.c0))  WHEN ((vt0.c0) IS TRUE) THEN vt0.c0 WHEN ((vt0.c0) BETWEEN (NULL) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN x'8726' THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)LIKE(vt0.c0))  WHEN ((vt0.c0) IS TRUE) THEN vt0.c0 WHEN ((vt0.c0) BETWEEN (NULL) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN x'8726' THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)LIKE(vt0.c0))  WHEN ((vt0.c0) IS TRUE) THEN vt0.c0 WHEN ((vt0.c0) BETWEEN (NULL) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN x'8726' THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'');
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((SUBSTR(vt0.c0, x''))) AND ((((vt0.c0)<(vt0.c0)))))) ORDER BY ((((vt0.c0)IS(vt0.c0)))>(NULL)) ASC, (((((vt0.c0)|(vt0.c0))))=(((NOT (vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((SUBSTR(vt0.c0, x''))) AND ((((vt0.c0)<(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)IS(vt0.c0)))>(NULL)) ASC, (((((vt0.c0)|(vt0.c0))))=(((NOT (vt0.c0))))) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((SUBSTR(vt0.c0, x''))) AND ((((vt0.c0)<(vt0.c0)))))) ORDER BY ((((vt0.c0)IS(vt0.c0)))>(NULL)) ASC, (((((vt0.c0)|(vt0.c0))))=(((NOT (vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((SUBSTR(vt0.c0, x''))) AND ((((vt0.c0)<(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)IS(vt0.c0)))>(NULL)) ASC, (((((vt0.c0)|(vt0.c0))))=(((NOT (vt0.c0))))) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((SUBSTR(vt0.c0, x''))) AND ((((vt0.c0)<(vt0.c0)))))) ORDER BY ((((vt0.c0)IS(vt0.c0)))>(NULL)) ASC, (((((vt0.c0)|(vt0.c0))))=(((NOT (vt0.c0))))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((LTRIM(rt0.c1, rt0.c3))AND(NULL)))OR(rt0.c3 COLLATE NOCASE))) ORDER BY CAST(((rt0.c2)&(rt0.c0)) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((LTRIM(rt0.c1, rt0.c3))AND(NULL)))OR(rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY CAST(((rt0.c2)&(rt0.c0)) AS TEXT) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((LTRIM(rt0.c1, rt0.c3))AND(NULL)))OR(rt0.c3 COLLATE NOCASE))) ORDER BY CAST(((rt0.c2)&(rt0.c0)) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((LTRIM(rt0.c1, rt0.c3))AND(NULL)))OR(rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY CAST(((rt0.c2)&(rt0.c0)) AS TEXT) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((LTRIM(rt0.c1, rt0.c3))AND(NULL)))OR(rt0.c3 COLLATE NOCASE))) ORDER BY CAST(((rt0.c2)&(rt0.c0)) AS TEXT) DESC  NULLS FIRST;
SELECT * FROM vt0, rt0 WHERE (LTRIM(rt0.c1, rt0.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(rt0.c1, rt0.c2 COLLATE NOCASE)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (LTRIM(rt0.c1, rt0.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(rt0.c1, rt0.c2 COLLATE NOCASE)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (LTRIM(rt0.c1, rt0.c2 COLLATE NOCASE));
SELECT ALL * FROM rt0 WHERE ((~ (MAX(rt0.c2, rt0.c1)))) ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c3) BETWEEN (rt0.c5) AND (rt0.c3)))) AND ((((((rt0.c1)OR(rt0.c3)))OR(rt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (MAX(rt0.c2, rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c3) BETWEEN (rt0.c5) AND (rt0.c3)))) AND ((((((rt0.c1)OR(rt0.c3)))OR(rt0.c0))))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((~ (MAX(rt0.c2, rt0.c1)))) ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c3) BETWEEN (rt0.c5) AND (rt0.c3)))) AND ((((((rt0.c1)OR(rt0.c3)))OR(rt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (MAX(rt0.c2, rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c3) BETWEEN (rt0.c5) AND (rt0.c3)))) AND ((((((rt0.c1)OR(rt0.c3)))OR(rt0.c0))))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((~ (MAX(rt0.c2, rt0.c1)))) ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c3) BETWEEN (rt0.c5) AND (rt0.c3)))) AND ((((((rt0.c1)OR(rt0.c3)))OR(rt0.c0))))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (-2.53167568E8) ORDER BY (~ (((rt0.c2)<=(rt0.c5)))) ASC, ((rt0.c1)>>(0Xe3394c2)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((-2.53167568E8) IS TRUE)  as count FROM rt0 ORDER BY (~ (((rt0.c2)<=(rt0.c5)))) ASC, ((rt0.c1)>>(0xe3394c2)) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (-2.53167568E8) ORDER BY (~ (((rt0.c2)<=(rt0.c5)))) ASC, ((rt0.c1)>>(0Xe3394c2)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((-2.53167568E8) IS TRUE)  as count FROM rt0 ORDER BY (~ (((rt0.c2)<=(rt0.c5)))) ASC, ((rt0.c1)>>(0xe3394c2)) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (-2.53167568E8) ORDER BY (~ (((rt0.c2)<=(rt0.c5)))) ASC, ((rt0.c1)>>(0Xe3394c2)) COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c1)LIKE(rt0.c1)))>('?>L^J6x!'))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)LIKE(rt0.c1)))>('?>L^J6x!'))) IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c1)LIKE(rt0.c1)))>('?>L^J6x!'))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)LIKE(rt0.c1)))>('?>L^J6x!'))) IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c1)LIKE(rt0.c1)))>('?>L^J6x!'))) ORDER BY vt0.c0  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE (x'8352fa472e7e');
SELECT SUM(count) FROM (SELECT ((x'8352fa472e7e') IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (x'8352fa472e7e');
SELECT SUM(count) FROM (SELECT ((x'8352fa472e7e') IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (x'8352fa472e7e');
SELECT * FROM rt0 WHERE ((- (((rt0.c3)IS(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c3)IS(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- (((rt0.c3)IS(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c3)IS(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- (((rt0.c3)IS(rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c0))>((vt0.c0))) THEN vt0.c0 WHEN (~ (0.9412192446404049)) THEN vt0.c0 WHEN (((vt0.c0, 0.6923976661130052, x'', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, NULL)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, 0.48747873893161053))) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 COLLATE RTRIM THEN (((vt0.c0))==((vt0.c0))) WHEN (vt0.c0 IN ()) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0))>((vt0.c0))) THEN vt0.c0 WHEN (~ (0.9412192446404049)) THEN vt0.c0 WHEN (((vt0.c0, 0.6923976661130052, x'', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, NULL)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, 0.48747873893161053))) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 COLLATE RTRIM THEN (((vt0.c0))==((vt0.c0))) WHEN (vt0.c0 IN ()) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c0))>((vt0.c0))) THEN vt0.c0 WHEN (~ (0.9412192446404049)) THEN vt0.c0 WHEN (((vt0.c0, 0.6923976661130052, x'', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, NULL)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, 0.48747873893161053))) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 COLLATE RTRIM THEN (((vt0.c0))==((vt0.c0))) WHEN (vt0.c0 IN ()) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0))>((vt0.c0))) THEN vt0.c0 WHEN (~ (0.9412192446404049)) THEN vt0.c0 WHEN (((vt0.c0, 0.6923976661130052, x'', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, NULL)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, 0.48747873893161053))) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 COLLATE RTRIM THEN (((vt0.c0))==((vt0.c0))) WHEN (vt0.c0 IN ()) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c0))>((vt0.c0))) THEN vt0.c0 WHEN (~ (0.9412192446404049)) THEN vt0.c0 WHEN (((vt0.c0, 0.6923976661130052, x'', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, NULL)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, 0.48747873893161053))) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 COLLATE RTRIM THEN (((vt0.c0))==((vt0.c0))) WHEN (vt0.c0 IN ()) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) END);
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN (- (rt0.c3)) THEN CASE WHEN rt0.c3 THEN rt0.c5 END WHEN (((rt0.c1, rt0.c3, rt0.c4))>((rt0.c4, vt0.c0, rt0.c0))) THEN ((vt0.c0)%(rt0.c5)) WHEN ((rt0.c3)IS NOT(rt0.c2)) THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END ELSE ((rt0.c3) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (rt0.c3)) THEN CASE WHEN rt0.c3 THEN rt0.c5 END WHEN (((rt0.c1, rt0.c3, rt0.c4))>((rt0.c4, vt0.c0, rt0.c0))) THEN ((vt0.c0)%(rt0.c5)) WHEN ((rt0.c3)IS NOT(rt0.c2)) THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END ELSE ((rt0.c3) ISNULL) END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN (- (rt0.c3)) THEN CASE WHEN rt0.c3 THEN rt0.c5 END WHEN (((rt0.c1, rt0.c3, rt0.c4))>((rt0.c4, vt0.c0, rt0.c0))) THEN ((vt0.c0)%(rt0.c5)) WHEN ((rt0.c3)IS NOT(rt0.c2)) THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END ELSE ((rt0.c3) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (rt0.c3)) THEN CASE WHEN rt0.c3 THEN rt0.c5 END WHEN (((rt0.c1, rt0.c3, rt0.c4))>((rt0.c4, vt0.c0, rt0.c0))) THEN ((vt0.c0)%(rt0.c5)) WHEN ((rt0.c3)IS NOT(rt0.c2)) THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END ELSE ((rt0.c3) ISNULL) END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN (- (rt0.c3)) THEN CASE WHEN rt0.c3 THEN rt0.c5 END WHEN (((rt0.c1, rt0.c3, rt0.c4))>((rt0.c4, vt0.c0, rt0.c0))) THEN ((vt0.c0)%(rt0.c5)) WHEN ((rt0.c3)IS NOT(rt0.c2)) THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END ELSE ((rt0.c3) ISNULL) END);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) ISNULL));
SELECT * FROM vt0 WHERE ((((vt0.c0))>=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY (((CASE WHEN vt0.c0 THEN vt0.c0 END))<((ROUND(vt0.c0, 0.7044263178748155)))), LOWER(DISTINCT NULL);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))>=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((CASE WHEN vt0.c0 THEN vt0.c0 END))<((ROUND(vt0.c0, 0.7044263178748155)))), LOWER(DISTINCT NULL));
SELECT * FROM vt0 WHERE ((((vt0.c0))>=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY (((CASE WHEN vt0.c0 THEN vt0.c0 END))<((ROUND(vt0.c0, 0.7044263178748155)))), LOWER(DISTINCT NULL);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))>=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((CASE WHEN vt0.c0 THEN vt0.c0 END))<((ROUND(vt0.c0, 0.7044263178748155)))), LOWER(DISTINCT NULL));
SELECT * FROM vt0 WHERE ((((vt0.c0))>=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY (((CASE WHEN vt0.c0 THEN vt0.c0 END))<((ROUND(vt0.c0, 0.7044263178748155)))), LOWER(DISTINCT NULL);
SELECT ALL * FROM vt0, rt0 WHERE ('1275250073');
SELECT SUM(count) FROM (SELECT ALL (('1275250073') IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ('1275250073');
SELECT SUM(count) FROM (SELECT ALL (('1275250073') IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ('1275250073');
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))+((((vt0.c0)) NOT BETWEEN ((0.61615926388439)) AND ((vt0.c0))))) DESC, (((CAST(vt0.c0 AS REAL), IFNULL(vt0.c0, vt0.c0), ((vt0.c0) BETWEEN ('mR0[!8Y') AND (vt0.c0))))<=((1679443565, ((vt0.c0) IS FALSE), (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))), HEX(DISTINCT (((vt0.c0))=((vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))+((((vt0.c0)) NOT BETWEEN ((0.61615926388439)) AND ((vt0.c0))))) DESC, (((CAST(vt0.c0 AS REAL), IFNULL(vt0.c0, vt0.c0), ((vt0.c0) BETWEEN ('mR0[!8Y') AND (vt0.c0))))<=((1679443565, ((vt0.c0) IS FALSE), (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))), HEX(DISTINCT (((vt0.c0))=((vt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))+((((vt0.c0)) NOT BETWEEN ((0.61615926388439)) AND ((vt0.c0))))) DESC, (((CAST(vt0.c0 AS REAL), IFNULL(vt0.c0, vt0.c0), ((vt0.c0) BETWEEN ('mR0[!8Y') AND (vt0.c0))))<=((1679443565, ((vt0.c0) IS FALSE), (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))), HEX(DISTINCT (((vt0.c0))=((vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))+((((vt0.c0)) NOT BETWEEN ((0.61615926388439)) AND ((vt0.c0))))) DESC, (((CAST(vt0.c0 AS REAL), IFNULL(vt0.c0, vt0.c0), ((vt0.c0) BETWEEN ('mR0[!8Y') AND (vt0.c0))))<=((1679443565, ((vt0.c0) IS FALSE), (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))), HEX(DISTINCT (((vt0.c0))=((vt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))+((((vt0.c0)) NOT BETWEEN ((0.61615926388439)) AND ((vt0.c0))))) DESC, (((CAST(vt0.c0 AS REAL), IFNULL(vt0.c0, vt0.c0), ((vt0.c0) BETWEEN ('mR0[!8Y') AND (vt0.c0))))<=((1679443565, ((vt0.c0) IS FALSE), (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))), HEX(DISTINCT (((vt0.c0))=((vt0.c0)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c2 THEN ((rt0.c5) NOT BETWEEN (rt0.c4) AND (rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN ((rt0.c5) NOT BETWEEN (rt0.c4) AND (rt0.c3)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c2 THEN ((rt0.c5) NOT BETWEEN (rt0.c4) AND (rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN ((rt0.c5) NOT BETWEEN (rt0.c4) AND (rt0.c3)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c2 THEN ((rt0.c5) NOT BETWEEN (rt0.c4) AND (rt0.c3)) END);
SELECT ALL * FROM rt0 WHERE (((rt0.c4) NOT BETWEEN (CASE rt0.c4  WHEN rt0.c0 THEN rt0.c0 END) AND (rt0.c4)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4) NOT BETWEEN (CASE rt0.c4  WHEN rt0.c0 THEN rt0.c0 END) AND (rt0.c4))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c4) NOT BETWEEN (CASE rt0.c4  WHEN rt0.c0 THEN rt0.c0 END) AND (rt0.c4)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4) NOT BETWEEN (CASE rt0.c4  WHEN rt0.c0 THEN rt0.c0 END) AND (rt0.c4))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c4) NOT BETWEEN (CASE rt0.c4  WHEN rt0.c0 THEN rt0.c0 END) AND (rt0.c4)));
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c4)))*(((rt0.c5)>(vt0.c0))))) ORDER BY (((((rt0.c1) ISNULL), ((((x'')AND(rt0.c4)))OR(rt0.c0)), CAST(rt0.c0 AS REAL)))==((0.5932141238011485, CAST(rt0.c2 AS REAL), json_quote(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c4)))*(((rt0.c5)>(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c1) ISNULL), ((((x'')AND(rt0.c4)))OR(rt0.c0)), CAST(rt0.c0 AS REAL)))=((0.5932141238011485, CAST(rt0.c2 AS REAL), json_quote(vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c4)))*(((rt0.c5)>(vt0.c0))))) ORDER BY (((((rt0.c1) ISNULL), ((((x'')AND(rt0.c4)))OR(rt0.c0)), CAST(rt0.c0 AS REAL)))==((0.5932141238011485, CAST(rt0.c2 AS REAL), json_quote(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c4)))*(((rt0.c5)>(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c1) ISNULL), ((((x'')AND(rt0.c4)))OR(rt0.c0)), CAST(rt0.c0 AS REAL)))=((0.5932141238011485, CAST(rt0.c2 AS REAL), json_quote(vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c4)))*(((rt0.c5)>(vt0.c0))))) ORDER BY (((((rt0.c1) ISNULL), ((((x'')AND(rt0.c4)))OR(rt0.c0)), CAST(rt0.c0 AS REAL)))==((0.5932141238011485, CAST(rt0.c2 AS REAL), json_quote(vt0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c2 COLLATE BINARY) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c2 COLLATE BINARY) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c2 COLLATE BINARY) NOT NULL));
SELECT COUNT(*) FROM rt0 WHERE ((- (((rt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c1) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- (((rt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c1) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- (((rt0.c1) ISNULL))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE -1833906726 END)));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE -1833906726 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE -1833906726 END)));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE -1833906726 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE -1833906726 END)));
SELECT ALL * FROM vt0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((CASE vt0.c0  WHEN rt0.c0 THEN rt0.c4 END)AND(((rt0.c4)GLOB(rt0.c5)))))AND((vt0.c0 IN (rt0.c2))))) ORDER BY CASE TRIM(rt0.c2, rt0.c2)  WHEN ((vt0.c0)%(rt0.c5)) THEN CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c5 ELSE rt0.c0 END ELSE ((rt0.c5)IS(1.9518533E7)) END  NULLS LAST, 1492924793 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt0.c0  WHEN rt0.c0 THEN rt0.c4 END)AND(((rt0.c4)GLOB(rt0.c5)))))AND((vt0.c0 IN (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE TRIM(rt0.c2, rt0.c2)  WHEN ((vt0.c0)%(rt0.c5)) THEN CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c5 ELSE rt0.c0 END ELSE ((rt0.c5)IS(1.9518533E7)) END  NULLS LAST, 1492924793 ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((CASE vt0.c0  WHEN rt0.c0 THEN rt0.c4 END)AND(((rt0.c4)GLOB(rt0.c5)))))AND((vt0.c0 IN (rt0.c2))))) ORDER BY CASE TRIM(rt0.c2, rt0.c2)  WHEN ((vt0.c0)%(rt0.c5)) THEN CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c5 ELSE rt0.c0 END ELSE ((rt0.c5)IS(1.9518533E7)) END  NULLS LAST, 1492924793 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt0.c0  WHEN rt0.c0 THEN rt0.c4 END)AND(((rt0.c4)GLOB(rt0.c5)))))AND((vt0.c0 IN (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE TRIM(rt0.c2, rt0.c2)  WHEN ((vt0.c0)%(rt0.c5)) THEN CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c5 ELSE rt0.c0 END ELSE ((rt0.c5)IS(1.9518533E7)) END  NULLS LAST, 1492924793 ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((((rt0.c5)OR(rt0.c1)))OR(NULL)) THEN CAST(rt0.c0 AS INTEGER) WHEN LIKELY(rt0.c5) THEN rt0.c3 COLLATE BINARY WHEN ((rt0.c5) BETWEEN (rt0.c2) AND (rt0.c0)) THEN ((rt0.c4)<<(rt0.c2)) ELSE (NOT (rt0.c2)) END) ORDER BY CASE json_type(rt0.c1)  WHEN CAST(rt0.c3 AS NUMERIC) THEN ((rt0.c5)>>(rt0.c2)) ELSE rt0.c0 COLLATE RTRIM END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt0.c5)OR(rt0.c1)))OR(NULL)) THEN CAST(rt0.c0 AS INTEGER) WHEN LIKELY(rt0.c5) THEN rt0.c3 COLLATE BINARY WHEN ((rt0.c5) BETWEEN (rt0.c2) AND (rt0.c0)) THEN ((rt0.c4)<<(rt0.c2)) ELSE (NOT (rt0.c2)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE json_type(rt0.c1)  WHEN CAST(rt0.c3 AS NUMERIC) THEN ((rt0.c5)>>(rt0.c2)) ELSE rt0.c0 COLLATE RTRIM END ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((((rt0.c5)OR(rt0.c1)))OR(NULL)) THEN CAST(rt0.c0 AS INTEGER) WHEN LIKELY(rt0.c5) THEN rt0.c3 COLLATE BINARY WHEN ((rt0.c5) BETWEEN (rt0.c2) AND (rt0.c0)) THEN ((rt0.c4)<<(rt0.c2)) ELSE (NOT (rt0.c2)) END) ORDER BY CASE json_type(rt0.c1)  WHEN CAST(rt0.c3 AS NUMERIC) THEN ((rt0.c5)>>(rt0.c2)) ELSE rt0.c0 COLLATE RTRIM END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt0.c5)OR(rt0.c1)))OR(NULL)) THEN CAST(rt0.c0 AS INTEGER) WHEN LIKELY(rt0.c5) THEN rt0.c3 COLLATE BINARY WHEN ((rt0.c5) BETWEEN (rt0.c2) AND (rt0.c0)) THEN ((rt0.c4)<<(rt0.c2)) ELSE (NOT (rt0.c2)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE json_type(rt0.c1)  WHEN CAST(rt0.c3 AS NUMERIC) THEN ((rt0.c5)>>(rt0.c2)) ELSE rt0.c0 COLLATE RTRIM END ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((((rt0.c5)OR(rt0.c1)))OR(NULL)) THEN CAST(rt0.c0 AS INTEGER) WHEN LIKELY(rt0.c5) THEN rt0.c3 COLLATE BINARY WHEN ((rt0.c5) BETWEEN (rt0.c2) AND (rt0.c0)) THEN ((rt0.c4)<<(rt0.c2)) ELSE (NOT (rt0.c2)) END) ORDER BY CASE json_type(rt0.c1)  WHEN CAST(rt0.c3 AS NUMERIC) THEN ((rt0.c5)>>(rt0.c2)) ELSE rt0.c0 COLLATE RTRIM END ASC;
SELECT COUNT(*) FROM vt0 WHERE (x'efd6');
SELECT SUM(count) FROM (SELECT ((x'efd6') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'efd6');
SELECT SUM(count) FROM (SELECT ((x'efd6') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'efd6');
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((+ (TRIM(rt0.c4))));
SELECT SUM(count) FROM (SELECT (((+ (TRIM(rt0.c4)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((+ (TRIM(rt0.c4))));
SELECT SUM(count) FROM (SELECT (((+ (TRIM(rt0.c4)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((+ (TRIM(rt0.c4))));
SELECT * FROM vt0, rt0 WHERE (LAST_INSERT_ROWID()) ORDER BY ((rt0.c2 COLLATE BINARY)<((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c2 COLLATE BINARY)<((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))))));
SELECT * FROM vt0, rt0 WHERE (LAST_INSERT_ROWID()) ORDER BY ((rt0.c2 COLLATE BINARY)<((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c2 COLLATE BINARY)<((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))))));
SELECT * FROM vt0, rt0 WHERE (LAST_INSERT_ROWID()) ORDER BY ((rt0.c2 COLLATE BINARY)<((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))));
SELECT * FROM rt0 WHERE ((((((rt0.c2, rt0.c4, rt0.c0)) NOT BETWEEN ((x'e444', rt0.c4, rt0.c1)) AND ((rt0.c1, rt0.c4, rt0.c2)))) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (rt0.c4 COLLATE RTRIM))) ORDER BY CAST(rt0.c1 AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2, rt0.c4, rt0.c0)) NOT BETWEEN ((x'e444', rt0.c4, rt0.c1)) AND ((rt0.c1, rt0.c4, rt0.c2)))) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (rt0.c4 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c1 AS TEXT) ASC);
SELECT * FROM rt0 WHERE ((((((rt0.c2, rt0.c4, rt0.c0)) NOT BETWEEN ((x'e444', rt0.c4, rt0.c1)) AND ((rt0.c1, rt0.c4, rt0.c2)))) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (rt0.c4 COLLATE RTRIM))) ORDER BY CAST(rt0.c1 AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2, rt0.c4, rt0.c0)) NOT BETWEEN ((x'e444', rt0.c4, rt0.c1)) AND ((rt0.c1, rt0.c4, rt0.c2)))) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (rt0.c4 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c1 AS TEXT) ASC);
SELECT * FROM rt0 WHERE ((((((rt0.c2, rt0.c4, rt0.c0)) NOT BETWEEN ((x'e444', rt0.c4, rt0.c1)) AND ((rt0.c1, rt0.c4, rt0.c2)))) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (rt0.c4 COLLATE RTRIM))) ORDER BY CAST(rt0.c1 AS TEXT) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ ('0.9858093928360914')) COLLATE BINARY) ORDER BY ((NULL)<=(CASE WHEN rt0.c0 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END)) ASC  NULLS LAST, CASE ((rt0.c1)LIKE(rt0.c3))  WHEN (- (rt0.c2)) THEN rt0.c1 COLLATE NOCASE END ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ ('0.9858093928360914')) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((NULL)<=(CASE WHEN rt0.c0 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END)) ASC  NULLS LAST, CASE ((rt0.c1)LIKE(rt0.c3))  WHEN (- (rt0.c2)) THEN rt0.c1 COLLATE NOCASE END ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ ('0.9858093928360914')) COLLATE BINARY) ORDER BY ((NULL)<=(CASE WHEN rt0.c0 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END)) ASC  NULLS LAST, CASE ((rt0.c1)LIKE(rt0.c3))  WHEN (- (rt0.c2)) THEN rt0.c1 COLLATE NOCASE END ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ ('0.9858093928360914')) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((NULL)<=(CASE WHEN rt0.c0 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END)) ASC  NULLS LAST, CASE ((rt0.c1)LIKE(rt0.c3))  WHEN (- (rt0.c2)) THEN rt0.c1 COLLATE NOCASE END ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ ('0.9858093928360914')) COLLATE BINARY) ORDER BY ((NULL)<=(CASE WHEN rt0.c0 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END)) ASC  NULLS LAST, CASE ((rt0.c1)LIKE(rt0.c3))  WHEN (- (rt0.c2)) THEN rt0.c1 COLLATE NOCASE END ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (LENGTH(rt0.c2)) ORDER BY 0x11d08c5 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LENGTH(rt0.c2)) IS TRUE)  as count FROM rt0 ORDER BY 0X11d08c5 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (LENGTH(rt0.c2)) ORDER BY 0x11d08c5 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LENGTH(rt0.c2)) IS TRUE)  as count FROM rt0 ORDER BY 0X11d08c5 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL);
SELECT * FROM vt0, rt0 WHERE (((((0.09477334208867749) NOT BETWEEN (rt0.c2) AND (rt0.c1)))-(CASE rt0.c3  WHEN rt0.c2 THEN x'8ff9' END)));
SELECT SUM(count) FROM (SELECT ALL ((((((0.09477334208867749) NOT BETWEEN (rt0.c2) AND (rt0.c1)))-(CASE rt0.c3  WHEN rt0.c2 THEN x'8ff9' END))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((0.09477334208867749) NOT BETWEEN (rt0.c2) AND (rt0.c1)))-(CASE rt0.c3  WHEN rt0.c2 THEN x'8ff9' END)));
SELECT SUM(count) FROM (SELECT ALL ((((((0.09477334208867749) NOT BETWEEN (rt0.c2) AND (rt0.c1)))-(CASE rt0.c3  WHEN rt0.c2 THEN x'8ff9' END))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((0.09477334208867749) NOT BETWEEN (rt0.c2) AND (rt0.c1)))-(CASE rt0.c3  WHEN rt0.c2 THEN x'8ff9' END)));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c4)) BETWEEN ((rt0.c5)) AND ((rt0.c3))))<>(CAST(rt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c4)) BETWEEN ((rt0.c5)) AND ((rt0.c3))))!=(CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c4)) BETWEEN ((rt0.c5)) AND ((rt0.c3))))<>(CAST(rt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c4)) BETWEEN ((rt0.c5)) AND ((rt0.c3))))!=(CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c4)) BETWEEN ((rt0.c5)) AND ((rt0.c3))))<>(CAST(rt0.c0 AS TEXT))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)<=(vt0.c0)) IN ())) ORDER BY ((((CAST(vt0.c0 AS REAL))AND(((vt0.c0) IS FALSE))))OR((vt0.c0 IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)<=(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((CAST(vt0.c0 AS REAL))AND(((vt0.c0) IS FALSE))))OR((vt0.c0 IN (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)<=(vt0.c0)) IN ())) ORDER BY ((((CAST(vt0.c0 AS REAL))AND(((vt0.c0) IS FALSE))))OR((vt0.c0 IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)<=(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((CAST(vt0.c0 AS REAL))AND(((vt0.c0) IS FALSE))))OR((vt0.c0 IN (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)<=(vt0.c0)) IN ())) ORDER BY ((((CAST(vt0.c0 AS REAL))AND(((vt0.c0) IS FALSE))))OR((vt0.c0 IN (vt0.c0))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((CASE WHEN rt0.c4 THEN rt0.c0 END)AND(((rt0.c2)-(rt0.c4)))))OR((rt0.c1 IN ())))) ORDER BY (((((((rt0.c1)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3))))AND(NULL)))AND(((0.18146899252398174) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt0.c4 THEN rt0.c0 END)AND(((rt0.c2)-(rt0.c4)))))OR((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((((rt0.c1)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3))))AND(NULL)))AND(((0.18146899252398174) NOT NULL))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((CASE WHEN rt0.c4 THEN rt0.c0 END)AND(((rt0.c2)-(rt0.c4)))))OR((rt0.c1 IN ())))) ORDER BY (((((((rt0.c1)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3))))AND(NULL)))AND(((0.18146899252398174) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt0.c4 THEN rt0.c0 END)AND(((rt0.c2)-(rt0.c4)))))OR((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((((rt0.c1)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3))))AND(NULL)))AND(((0.18146899252398174) NOT NULL))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((CASE WHEN rt0.c4 THEN rt0.c0 END)AND(((rt0.c2)-(rt0.c4)))))OR((rt0.c1 IN ())))) ORDER BY (((((((rt0.c1)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3))))AND(NULL)))AND(((0.18146899252398174) NOT NULL))) ASC;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0 COLLATE BINARY) ORDER BY ((((0.6535230209741771) NOT BETWEEN (rt0.c4) AND (rt0.c3))) NOT BETWEEN (((0.8398125473382696)<>(rt0.c5))) AND ((+ (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((rt0.c0 COLLATE BINARY) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY ((((0.6535230209741771) NOT BETWEEN (rt0.c4) AND (rt0.c3))) NOT BETWEEN (((0.8398125473382696)<>(rt0.c5))) AND ((+ (rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0 COLLATE BINARY) ORDER BY ((((0.6535230209741771) NOT BETWEEN (rt0.c4) AND (rt0.c3))) NOT BETWEEN (((0.8398125473382696)<>(rt0.c5))) AND ((+ (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((rt0.c0 COLLATE BINARY) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY ((((0.6535230209741771) NOT BETWEEN (rt0.c4) AND (rt0.c3))) NOT BETWEEN (((0.8398125473382696)<>(rt0.c5))) AND ((+ (rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0 COLLATE BINARY) ORDER BY ((((0.6535230209741771) NOT BETWEEN (rt0.c4) AND (rt0.c3))) NOT BETWEEN (((0.8398125473382696)<>(rt0.c5))) AND ((+ (rt0.c2))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((0.41245822552551725)) AND ((rt0.c2)))) AND (CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((0.41245822552551725)) AND ((rt0.c2)))) AND (CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((0.41245822552551725)) AND ((rt0.c2)))) AND (CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((0.41245822552551725)) AND ((rt0.c2)))) AND (CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((0.41245822552551725)) AND ((rt0.c2)))) AND (CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END))  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c0) NOTNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c0) NOTNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c0) NOTNULL) COLLATE RTRIM);
SELECT * FROM vt0, rt0 WHERE (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c5 ELSE rt0.c2 END)&(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c5 ELSE rt0.c2 END)&(vt0.c0))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c5 ELSE rt0.c2 END)&(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c5 ELSE rt0.c2 END)&(vt0.c0))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c5 ELSE rt0.c2 END)&(vt0.c0)));
SELECT * FROM vt0 NOT INDEXED WHERE (UPPER(DISTINCT ((vt0.c0)-(vt0.c0)))) ORDER BY LIKELY(DISTINCT (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT ((vt0.c0)-(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY LIKELY(DISTINCT (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM vt0 NOT INDEXED WHERE (UPPER(DISTINCT ((vt0.c0)-(vt0.c0)))) ORDER BY LIKELY(DISTINCT (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT ((vt0.c0)-(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY LIKELY(DISTINCT (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM vt0 NOT INDEXED WHERE (UPPER(DISTINCT ((vt0.c0)-(vt0.c0)))) ORDER BY LIKELY(DISTINCT (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((+ (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((+ (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((+ (((vt0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c4) BETWEEN (((rt0.c1) NOT NULL)) AND (((rt0.c0) NOTNULL)))) ORDER BY (((((((rt0.c4)OR(rt0.c4)))OR(rt0.c5))))==((((rt0.c2) NOTNULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4) BETWEEN (((rt0.c1) NOT NULL)) AND (((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY (((((((rt0.c4)OR(rt0.c4)))OR(rt0.c5))))==((((rt0.c2) NOTNULL))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c4) BETWEEN (((rt0.c1) NOT NULL)) AND (((rt0.c0) NOTNULL)))) ORDER BY (((((((rt0.c4)OR(rt0.c4)))OR(rt0.c5))))==((((rt0.c2) NOTNULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4) BETWEEN (((rt0.c1) NOT NULL)) AND (((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY (((((((rt0.c4)OR(rt0.c4)))OR(rt0.c5))))==((((rt0.c2) NOTNULL))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c4) BETWEEN (((rt0.c1) NOT NULL)) AND (((rt0.c0) NOTNULL)))) ORDER BY (((((((rt0.c4)OR(rt0.c4)))OR(rt0.c5))))==((((rt0.c2) NOTNULL))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON ((CAST(rt0.c5 AS REAL)) BETWEEN (x'') AND (CAST(rt0.c3 AS REAL))) WHERE ((((rt0.c0)) BETWEEN (((((rt0.c5, rt0.c4, rt0.c5, 0.7196100354780457, rt0.c4))!=((rt0.c3, rt0.c4, rt0.c1, vt0.c0, vt0.c0))))) AND ((((rt0.c4) BETWEEN (0x7c619fc9) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN (((((rt0.c5, rt0.c4, rt0.c5, 0.7196100354780457, rt0.c4))!=((rt0.c3, rt0.c4, rt0.c1, vt0.c0, vt0.c0))))) AND ((((rt0.c4) BETWEEN (0X7c619fc9) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((CAST(rt0.c5 AS REAL)) BETWEEN (x'') AND (CAST(rt0.c3 AS REAL))));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON ((CAST(rt0.c5 AS REAL)) BETWEEN (x'') AND (CAST(rt0.c3 AS REAL))) WHERE ((((rt0.c0)) BETWEEN (((((rt0.c5, rt0.c4, rt0.c5, 0.7196100354780457, rt0.c4))!=((rt0.c3, rt0.c4, rt0.c1, vt0.c0, vt0.c0))))) AND ((((rt0.c4) BETWEEN (0x7c619fc9) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN (((((rt0.c5, rt0.c4, rt0.c5, 0.7196100354780457, rt0.c4))!=((rt0.c3, rt0.c4, rt0.c1, vt0.c0, vt0.c0))))) AND ((((rt0.c4) BETWEEN (0X7c619fc9) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((CAST(rt0.c5 AS REAL)) BETWEEN (x'') AND (CAST(rt0.c3 AS REAL))));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON ((CAST(rt0.c5 AS REAL)) BETWEEN (x'') AND (CAST(rt0.c3 AS REAL))) WHERE ((((rt0.c0)) BETWEEN (((((rt0.c5, rt0.c4, rt0.c5, 0.7196100354780457, rt0.c4))!=((rt0.c3, rt0.c4, rt0.c1, vt0.c0, vt0.c0))))) AND ((((rt0.c4) BETWEEN (0x7c619fc9) AND (vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END  WHEN NULLIF(DISTINCT vt0.c0, vt0.c0) THEN vt0.c0 COLLATE BINARY WHEN CAST(NULL AS INTEGER) THEN ((vt0.c0)<<(vt0.c0)) WHEN (+ (NULL)) THEN CASE vt0.c0  WHEN vt0.c0 THEN 1760960673 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END  WHEN NULLIF(DISTINCT vt0.c0, vt0.c0) THEN vt0.c0 COLLATE BINARY WHEN CAST(NULL AS INTEGER) THEN ((vt0.c0)<<(vt0.c0)) WHEN (+ (NULL)) THEN CASE vt0.c0  WHEN vt0.c0 THEN 1760960673 END END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END  WHEN NULLIF(DISTINCT vt0.c0, vt0.c0) THEN vt0.c0 COLLATE BINARY WHEN CAST(NULL AS INTEGER) THEN ((vt0.c0)<<(vt0.c0)) WHEN (+ (NULL)) THEN CASE vt0.c0  WHEN vt0.c0 THEN 1760960673 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END  WHEN NULLIF(DISTINCT vt0.c0, vt0.c0) THEN vt0.c0 COLLATE BINARY WHEN CAST(NULL AS INTEGER) THEN ((vt0.c0)<<(vt0.c0)) WHEN (+ (NULL)) THEN CASE vt0.c0  WHEN vt0.c0 THEN 1760960673 END END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END  WHEN NULLIF(DISTINCT vt0.c0, vt0.c0) THEN vt0.c0 COLLATE BINARY WHEN CAST(NULL AS INTEGER) THEN ((vt0.c0)<<(vt0.c0)) WHEN (+ (NULL)) THEN CASE vt0.c0  WHEN vt0.c0 THEN 1760960673 END END);
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c0))<=((x'24ee'))) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0))<=((x'24ee'))) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c0))<=((x'24ee'))) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0))<=((x'24ee'))) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c0))<=((x'24ee'))) AS REAL));
SELECT * FROM rt0, vt0 WHERE ((((vt0.c0, rt0.c2, rt0.c3, rt0.c3, rt0.c4)) NOT BETWEEN ((CAST(rt0.c4 AS REAL), NULL, (NOT (rt0.c5)), x'', ((0.7214499167581523)>>(vt0.c0)))) AND ((((((((((rt0.c0)AND(vt0.c0)))AND(rt0.c3)))AND(rt0.c2)))AND('10213281')), (rt0.c1 IN ()), LOWER(rt0.c3), (rt0.c4 IN ()), ('0.4070876251261134' IN ()))))) ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 END)&(CASE WHEN vt0.c0 THEN x'1844' ELSE rt0.c3 END))  NULLS FIRST, (((('jNh\ze]')OR(((vt0.c0)GLOB(rt0.c2)))))AND((NOT (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, rt0.c2, rt0.c3, rt0.c3, rt0.c4)) NOT BETWEEN ((CAST(rt0.c4 AS REAL), NULL, (NOT (rt0.c5)), x'', ((0.7214499167581523)>>(vt0.c0)))) AND ((((((((((rt0.c0)AND(vt0.c0)))AND(rt0.c3)))AND(rt0.c2)))AND('10213281')), (rt0.c1 IN ()), LOWER(rt0.c3), (rt0.c4 IN ()), ('0.4070876251261134' IN ()))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 END)&(CASE WHEN vt0.c0 THEN x'1844' ELSE rt0.c3 END))  NULLS FIRST, (((('jNh\ze]')OR(((vt0.c0)GLOB(rt0.c2)))))AND((NOT (vt0.c0))))  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ((((vt0.c0, rt0.c2, rt0.c3, rt0.c3, rt0.c4)) NOT BETWEEN ((CAST(rt0.c4 AS REAL), NULL, (NOT (rt0.c5)), x'', ((0.7214499167581523)>>(vt0.c0)))) AND ((((((((((rt0.c0)AND(vt0.c0)))AND(rt0.c3)))AND(rt0.c2)))AND('10213281')), (rt0.c1 IN ()), LOWER(rt0.c3), (rt0.c4 IN ()), ('0.4070876251261134' IN ()))))) ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 END)&(CASE WHEN vt0.c0 THEN x'1844' ELSE rt0.c3 END))  NULLS FIRST, (((('jNh\ze]')OR(((vt0.c0)GLOB(rt0.c2)))))AND((NOT (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, rt0.c2, rt0.c3, rt0.c3, rt0.c4)) NOT BETWEEN ((CAST(rt0.c4 AS REAL), NULL, (NOT (rt0.c5)), x'', ((0.7214499167581523)>>(vt0.c0)))) AND ((((((((((rt0.c0)AND(vt0.c0)))AND(rt0.c3)))AND(rt0.c2)))AND('10213281')), (rt0.c1 IN ()), LOWER(rt0.c3), (rt0.c4 IN ()), ('0.4070876251261134' IN ()))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 END)&(CASE WHEN vt0.c0 THEN x'1844' ELSE rt0.c3 END))  NULLS FIRST, (((('jNh\ze]')OR(((vt0.c0)GLOB(rt0.c2)))))AND((NOT (vt0.c0))))  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ((((vt0.c0, rt0.c2, rt0.c3, rt0.c3, rt0.c4)) NOT BETWEEN ((CAST(rt0.c4 AS REAL), NULL, (NOT (rt0.c5)), x'', ((0.7214499167581523)>>(vt0.c0)))) AND ((((((((((rt0.c0)AND(vt0.c0)))AND(rt0.c3)))AND(rt0.c2)))AND('10213281')), (rt0.c1 IN ()), LOWER(rt0.c3), (rt0.c4 IN ()), ('0.4070876251261134' IN ()))))) ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 END)&(CASE WHEN vt0.c0 THEN x'1844' ELSE rt0.c3 END))  NULLS FIRST, (((('jNh\ze]')OR(((vt0.c0)GLOB(rt0.c2)))))AND((NOT (vt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((UNICODE(rt0.c4))LIKE(((rt0.c3) BETWEEN (x'e2df') AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((UNICODE(rt0.c4))LIKE(((rt0.c3) BETWEEN (x'e2df') AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((UNICODE(rt0.c4))LIKE(((rt0.c3) BETWEEN (x'e2df') AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((UNICODE(rt0.c4))LIKE(((rt0.c3) BETWEEN (x'e2df') AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((UNICODE(rt0.c4))LIKE(((rt0.c3) BETWEEN (x'e2df') AND (rt0.c2)))));
SELECT ALL * FROM rt0, vt0 WHERE (0.6042461836674331) ORDER BY (((rt0.c0))<=((NULLIF(DISTINCT 0.9369672774284756, vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((0.6042461836674331) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c0))<=((NULLIF(DISTINCT 0.9369672774284756, vt0.c0)))) DESC);
SELECT ALL * FROM rt0, vt0 WHERE (0.6042461836674331) ORDER BY (((rt0.c0))<=((NULLIF(DISTINCT 0.9369672774284756, vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((0.6042461836674331) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c0))<=((NULLIF(DISTINCT 0.9369672774284756, vt0.c0)))) DESC);
SELECT ALL * FROM rt0, vt0 WHERE (0.6042461836674331) ORDER BY (((rt0.c0))<=((NULLIF(DISTINCT 0.9369672774284756, vt0.c0)))) DESC;
SELECT * FROM rt0 WHERE (((NULL)<=((rt0.c2 IN ())))) ORDER BY (((rt0.c3)GLOB(rt0.c1)) IN ()) ASC, ((((rt0.c2, rt0.c4, rt0.c0)) BETWEEN ((rt0.c3, x'', rt0.c5)) AND ((rt0.c0, rt0.c5, rt0.c5))) IN (((rt0.c5) BETWEEN (x'') AND (rt0.c5)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL)<=((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3)GLOB(rt0.c1)) IN ()) ASC, ((((rt0.c2, rt0.c4, rt0.c0)) BETWEEN ((rt0.c3, x'', rt0.c5)) AND ((rt0.c0, rt0.c5, rt0.c5))) IN (((rt0.c5) BETWEEN (x'') AND (rt0.c5)))) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((NULL)<=((rt0.c2 IN ())))) ORDER BY (((rt0.c3)GLOB(rt0.c1)) IN ()) ASC, ((((rt0.c2, rt0.c4, rt0.c0)) BETWEEN ((rt0.c3, x'', rt0.c5)) AND ((rt0.c0, rt0.c5, rt0.c5))) IN (((rt0.c5) BETWEEN (x'') AND (rt0.c5)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL)<=((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3)GLOB(rt0.c1)) IN ()) ASC, ((((rt0.c2, rt0.c4, rt0.c0)) BETWEEN ((rt0.c3, x'', rt0.c5)) AND ((rt0.c0, rt0.c5, rt0.c5))) IN (((rt0.c5) BETWEEN (x'') AND (rt0.c5)))) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((NULL)<=((rt0.c2 IN ())))) ORDER BY (((rt0.c3)GLOB(rt0.c1)) IN ()) ASC, ((((rt0.c2, rt0.c4, rt0.c0)) BETWEEN ((rt0.c3, x'', rt0.c5)) AND ((rt0.c0, rt0.c5, rt0.c5))) IN (((rt0.c5) BETWEEN (x'') AND (rt0.c5)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON CASE ((rt0.c4)<>(rt0.c1))  WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)) THEN ((vt0.c0) NOTNULL) END WHERE (CAST(((((((((((((vt0.c0)AND(rt0.c4)))OR(-374406026)))OR(rt0.c1)))OR(rt0.c5)))OR(rt0.c5)))OR(rt0.c2)) AS BLOB)) ORDER BY ((((rt0.c5)|(rt0.c3)))+((((rt0.c3, x'', vt0.c0)) NOT BETWEEN ((0.6553085929202298, rt0.c3, rt0.c0)) AND ((rt0.c3, rt0.c2, rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((((((vt0.c0)AND(rt0.c4)))OR(-374406026)))OR(rt0.c1)))OR(rt0.c5)))OR(rt0.c5)))OR(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CASE ((rt0.c4)<>(rt0.c1))  WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)) THEN ((vt0.c0) NOTNULL) END ORDER BY ((((rt0.c5)|(rt0.c3)))+((((rt0.c3, x'', vt0.c0)) NOT BETWEEN ((0.6553085929202298, rt0.c3, rt0.c0)) AND ((rt0.c3, rt0.c2, rt0.c4))))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON CASE ((rt0.c4)<>(rt0.c1))  WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)) THEN ((vt0.c0) NOTNULL) END WHERE (CAST(((((((((((((vt0.c0)AND(rt0.c4)))OR(-374406026)))OR(rt0.c1)))OR(rt0.c5)))OR(rt0.c5)))OR(rt0.c2)) AS BLOB)) ORDER BY ((((rt0.c5)|(rt0.c3)))+((((rt0.c3, x'', vt0.c0)) NOT BETWEEN ((0.6553085929202298, rt0.c3, rt0.c0)) AND ((rt0.c3, rt0.c2, rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((((((vt0.c0)AND(rt0.c4)))OR(-374406026)))OR(rt0.c1)))OR(rt0.c5)))OR(rt0.c5)))OR(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CASE ((rt0.c4)<>(rt0.c1))  WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)) THEN ((vt0.c0) NOTNULL) END ORDER BY ((((rt0.c5)|(rt0.c3)))+((((rt0.c3, x'', vt0.c0)) NOT BETWEEN ((0.6553085929202298, rt0.c3, rt0.c0)) AND ((rt0.c3, rt0.c2, rt0.c4))))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON CASE ((rt0.c4)<>(rt0.c1))  WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)) THEN ((vt0.c0) NOTNULL) END WHERE (CAST(((((((((((((vt0.c0)AND(rt0.c4)))OR(-374406026)))OR(rt0.c1)))OR(rt0.c5)))OR(rt0.c5)))OR(rt0.c2)) AS BLOB)) ORDER BY ((((rt0.c5)|(rt0.c3)))+((((rt0.c3, x'', vt0.c0)) NOT BETWEEN ((0.6553085929202298, rt0.c3, rt0.c0)) AND ((rt0.c3, rt0.c2, rt0.c4)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c4)<(rt0.c1)) THEN ((rt0.c3)&(rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c4)<(rt0.c1)) THEN ((rt0.c3)&(rt0.c3)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c4)<(rt0.c1)) THEN ((rt0.c3)&(rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c4)<(rt0.c1)) THEN ((rt0.c3)&(rt0.c3)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c4)<(rt0.c1)) THEN ((rt0.c3)&(rt0.c3)) END);
SELECT ALL * FROM vt0, rt0 WHERE ((((+ (rt0.c5)))%(((((x'')AND(rt0.c1)))OR(rt0.c3))))) ORDER BY 0.8263947172593076 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c5)))%(((((x'')AND(rt0.c1)))OR(rt0.c3))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY 0.8263947172593076 ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE ((((+ (rt0.c5)))%(((((x'')AND(rt0.c1)))OR(rt0.c3))))) ORDER BY 0.8263947172593076 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c5)))%(((((x'')AND(rt0.c1)))OR(rt0.c3))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY 0.8263947172593076 ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE ((((+ (rt0.c5)))%(((((x'')AND(rt0.c1)))OR(rt0.c3))))) ORDER BY 0.8263947172593076 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (COALESCE((rt0.c3 IN ()), ((rt0.c5)IS(rt0.c2)), ((rt0.c4) NOT BETWEEN (NULL) AND (rt0.c2)), (rt0.c0 IN ()))) ORDER BY ((IFNULL(rt0.c2, rt0.c2)) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((COALESCE((rt0.c3 IN ()), ((rt0.c5)IS(rt0.c2)), ((rt0.c4) NOT BETWEEN (NULL) AND (rt0.c2)), (rt0.c0 IN ()))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((IFNULL(rt0.c2, rt0.c2)) IS TRUE));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (COALESCE((rt0.c3 IN ()), ((rt0.c5)IS(rt0.c2)), ((rt0.c4) NOT BETWEEN (NULL) AND (rt0.c2)), (rt0.c0 IN ()))) ORDER BY ((IFNULL(rt0.c2, rt0.c2)) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((COALESCE((rt0.c3 IN ()), ((rt0.c5)IS(rt0.c2)), ((rt0.c4) NOT BETWEEN (NULL) AND (rt0.c2)), (rt0.c0 IN ()))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((IFNULL(rt0.c2, rt0.c2)) IS TRUE));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (COALESCE((rt0.c3 IN ()), ((rt0.c5)IS(rt0.c2)), ((rt0.c4) NOT BETWEEN (NULL) AND (rt0.c2)), (rt0.c0 IN ()))) ORDER BY ((IFNULL(rt0.c2, rt0.c2)) IS TRUE);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((CAST(rt0.c4 AS NUMERIC))OR((rt0.c5 IN (rt0.c1)))))AND(((((rt0.c3)AND(rt0.c3)))OR(rt0.c5))))) ORDER BY (~ (rt0.c0)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c4 AS NUMERIC))OR((rt0.c5 IN (rt0.c1)))))AND(((((rt0.c3)AND(rt0.c3)))OR(rt0.c5))))) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED ORDER BY (~ (rt0.c0)) COLLATE RTRIM ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((CAST(rt0.c4 AS NUMERIC))OR((rt0.c5 IN (rt0.c1)))))AND(((((rt0.c3)AND(rt0.c3)))OR(rt0.c5))))) ORDER BY (~ (rt0.c0)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c4 AS NUMERIC))OR((rt0.c5 IN (rt0.c1)))))AND(((((rt0.c3)AND(rt0.c3)))OR(rt0.c5))))) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED ORDER BY (~ (rt0.c0)) COLLATE RTRIM ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((CAST(rt0.c4 AS NUMERIC))OR((rt0.c5 IN (rt0.c1)))))AND(((((rt0.c3)AND(rt0.c3)))OR(rt0.c5))))) ORDER BY (~ (rt0.c0)) COLLATE RTRIM ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (NULL) ORDER BY ((((((((((NULL)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) IS FALSE), MAX(CASE WHEN vt0.c0 THEN vt0.c0 END, (((vt0.c0))!=((vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((NULL)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) IS FALSE), MAX(CASE WHEN vt0.c0 THEN vt0.c0 END, (((vt0.c0))<>((vt0.c0)))));
SELECT * FROM vt0 WHERE (NULL) ORDER BY ((((((((((NULL)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) IS FALSE), MAX(CASE WHEN vt0.c0 THEN vt0.c0 END, (((vt0.c0))!=((vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((NULL)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) IS FALSE), MAX(CASE WHEN vt0.c0 THEN vt0.c0 END, (((vt0.c0))<>((vt0.c0)))));
SELECT * FROM vt0 WHERE (NULL) ORDER BY ((((((((((NULL)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) IS FALSE), MAX(CASE WHEN vt0.c0 THEN vt0.c0 END, (((vt0.c0))!=((vt0.c0))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON 0.11603612552992126 WHERE (((((rt0.c3)=(vt0.c0))) NOT BETWEEN (CAST(rt0.c3 AS TEXT)) AND (((rt0.c2)<(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)==(vt0.c0))) NOT BETWEEN (CAST(rt0.c3 AS TEXT)) AND (((rt0.c2)<(NULL))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON 0.11603612552992126);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON 0.11603612552992126 WHERE (((((rt0.c3)=(vt0.c0))) NOT BETWEEN (CAST(rt0.c3 AS TEXT)) AND (((rt0.c2)<(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)==(vt0.c0))) NOT BETWEEN (CAST(rt0.c3 AS TEXT)) AND (((rt0.c2)<(NULL))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON 0.11603612552992126);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON 0.11603612552992126 WHERE (((((rt0.c3)=(vt0.c0))) NOT BETWEEN (CAST(rt0.c3 AS TEXT)) AND (((rt0.c2)<(NULL)))));
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c5)%(rt0.c4)) THEN rt0.c2 COLLATE NOCASE END) ORDER BY ((rt0.c3) NOT BETWEEN (rt0.c2) AND ('')) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c5)%(rt0.c4)) THEN rt0.c2 COLLATE NOCASE END) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c3) NOT BETWEEN (rt0.c2) AND ('')) COLLATE BINARY DESC);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c5)%(rt0.c4)) THEN rt0.c2 COLLATE NOCASE END) ORDER BY ((rt0.c3) NOT BETWEEN (rt0.c2) AND ('')) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c5)%(rt0.c4)) THEN rt0.c2 COLLATE NOCASE END) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c3) NOT BETWEEN (rt0.c2) AND ('')) COLLATE BINARY DESC);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c5)%(rt0.c4)) THEN rt0.c2 COLLATE NOCASE END) ORDER BY ((rt0.c3) NOT BETWEEN (rt0.c2) AND ('')) COLLATE BINARY DESC;
SELECT * FROM vt0 WHERE (((vt0.c0)-(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)-(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)-(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)-(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)-(vt0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 WHERE ('806796800');
SELECT SUM(count) FROM (SELECT ALL (('806796800') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ('806796800');
SELECT SUM(count) FROM (SELECT ALL (('806796800') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ('806796800');
SELECT ALL * FROM vt0 WHERE ((+ (TRIM(vt0.c0)))) ORDER BY CASE WHEN x'' THEN ((0.790398902936027) ISNULL) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '1494624356' END THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN CAST(vt0.c0 AS BLOB) THEN CAST(vt0.c0 AS BLOB) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (TRIM(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN x'' THEN ((0.790398902936027) ISNULL) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '1494624356' END THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN CAST(vt0.c0 AS BLOB) THEN CAST(vt0.c0 AS BLOB) END  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((+ (TRIM(vt0.c0)))) ORDER BY CASE WHEN x'' THEN ((0.790398902936027) ISNULL) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '1494624356' END THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN CAST(vt0.c0 AS BLOB) THEN CAST(vt0.c0 AS BLOB) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (TRIM(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN x'' THEN ((0.790398902936027) ISNULL) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '1494624356' END THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN CAST(vt0.c0 AS BLOB) THEN CAST(vt0.c0 AS BLOB) END  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((+ (TRIM(vt0.c0)))) ORDER BY CASE WHEN x'' THEN ((0.790398902936027) ISNULL) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '1494624356' END THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN CAST(vt0.c0 AS BLOB) THEN CAST(vt0.c0 AS BLOB) END  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE (((((((rt0.c2)-(rt0.c3)))OR(((((NULL)OR(rt0.c5)))OR(rt0.c2)))))AND(MAX(vt0.c0, vt0.c0, rt0.c4, vt0.c0)))) ORDER BY 2.98849498E8 DESC  NULLS LAST, ((rt0.c5)%((rt0.c2 IN (NULL))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)-(rt0.c3)))OR(((((NULL)OR(rt0.c5)))OR(rt0.c2)))))AND(MAX(vt0.c0, vt0.c0, rt0.c4, vt0.c0)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY 2.98849498E8 DESC  NULLS LAST, ((rt0.c5)%((rt0.c2 IN (NULL)))));
SELECT ALL * FROM rt0, vt0 WHERE (((((((rt0.c2)-(rt0.c3)))OR(((((NULL)OR(rt0.c5)))OR(rt0.c2)))))AND(MAX(vt0.c0, vt0.c0, rt0.c4, vt0.c0)))) ORDER BY 2.98849498E8 DESC  NULLS LAST, ((rt0.c5)%((rt0.c2 IN (NULL))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)-(rt0.c3)))OR(((((NULL)OR(rt0.c5)))OR(rt0.c2)))))AND(MAX(vt0.c0, vt0.c0, rt0.c4, vt0.c0)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY 2.98849498E8 DESC  NULLS LAST, ((rt0.c5)%((rt0.c2 IN (NULL)))));
SELECT ALL * FROM rt0, vt0 WHERE (((((((rt0.c2)-(rt0.c3)))OR(((((NULL)OR(rt0.c5)))OR(rt0.c2)))))AND(MAX(vt0.c0, vt0.c0, rt0.c4, vt0.c0)))) ORDER BY 2.98849498E8 DESC  NULLS LAST, ((rt0.c5)%((rt0.c2 IN (NULL))));
SELECT * FROM vt0, rt0 WHERE (((((rt0.c5))<=((rt0.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5))<=((rt0.c2))) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c5))<=((rt0.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5))<=((rt0.c2))) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c5))<=((rt0.c2))) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((TRIM(DISTINCT 0.9522876499843642, rt0.c3))OR(((rt0.c1)+(rt0.c0)))))AND(((((rt0.c0)AND(rt0.c5)))OR(rt0.c3))))) ORDER BY ((((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((((((TRIM(DISTINCT 0.9522876499843642, rt0.c3))OR(((rt0.c1)+(rt0.c0)))))AND(((((rt0.c0)AND(rt0.c5)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c0))) IS TRUE) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((TRIM(DISTINCT 0.9522876499843642, rt0.c3))OR(((rt0.c1)+(rt0.c0)))))AND(((((rt0.c0)AND(rt0.c5)))OR(rt0.c3))))) ORDER BY ((((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((((((TRIM(DISTINCT 0.9522876499843642, rt0.c3))OR(((rt0.c1)+(rt0.c0)))))AND(((((rt0.c0)AND(rt0.c5)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c0))) IS TRUE) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((TRIM(DISTINCT 0.9522876499843642, rt0.c3))OR(((rt0.c1)+(rt0.c0)))))AND(((((rt0.c0)AND(rt0.c5)))OR(rt0.c3))))) ORDER BY ((((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c0))) IS TRUE) ASC;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((json_extract(rt0.c5, rt0.c5, vt0.c0, rt0.c1) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((json_extract(rt0.c5, rt0.c5, vt0.c0, rt0.c1) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((json_extract(rt0.c5, rt0.c5, vt0.c0, rt0.c1) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((json_extract(rt0.c5, rt0.c5, vt0.c0, rt0.c1) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((json_extract(rt0.c5, rt0.c5, vt0.c0, rt0.c1) IN ()));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)-(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)-(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)-(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)-(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)-(vt0.c0)) IN ()));
SELECT * FROM vt0 WHERE ((((~ (vt0.c0)))<<((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, '123411160')) AND ((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))<<((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, '123411160')) AND ((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((~ (vt0.c0)))<<((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, '123411160')) AND ((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))<<((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, '123411160')) AND ((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((~ (vt0.c0)))<<((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, '123411160')) AND ((vt0.c0, vt0.c0, vt0.c0))))));
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c3))) NOT BETWEEN (0.8347579078698427) AND (x'' COLLATE BINARY))) ORDER BY rt0.c1 DESC  NULLS LAST, ((CASE WHEN rt0.c5 THEN rt0.c2 END) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c3))) NOT BETWEEN (0.8347579078698427) AND (x'' COLLATE BINARY))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY rt0.c1 DESC  NULLS LAST, ((CASE WHEN rt0.c5 THEN rt0.c2 END) IS FALSE) ASC  NULLS LAST);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c3))) NOT BETWEEN (0.8347579078698427) AND (x'' COLLATE BINARY))) ORDER BY rt0.c1 DESC  NULLS LAST, ((CASE WHEN rt0.c5 THEN rt0.c2 END) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c3))) NOT BETWEEN (0.8347579078698427) AND (x'' COLLATE BINARY))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY rt0.c1 DESC  NULLS LAST, ((CASE WHEN rt0.c5 THEN rt0.c2 END) IS FALSE) ASC  NULLS LAST);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c3))) NOT BETWEEN (0.8347579078698427) AND (x'' COLLATE BINARY))) ORDER BY rt0.c1 DESC  NULLS LAST, ((CASE WHEN rt0.c5 THEN rt0.c2 END) IS FALSE) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 END)!=((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 END)!=((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 END)!=((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 END)!=((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 END)!=((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))));
SELECT COUNT(*) FROM vt0 WHERE (((((x'')AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY TRIM((NULL IN ()), ((vt0.c0)AND(vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY TRIM((NULL IN ()), ((vt0.c0)AND(vt0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((x'')AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY TRIM((NULL IN ()), ((vt0.c0)AND(vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY TRIM((NULL IN ()), ((vt0.c0)AND(vt0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((x'')AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY TRIM((NULL IN ()), ((vt0.c0)AND(vt0.c0)))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((+ (((vt0.c0)&(vt0.c0))))) ORDER BY ((((vt0.c0) IS FALSE))%((((vt0.c0))<=((vt0.c0)))))  NULLS FIRST, vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) IS FALSE))%((((vt0.c0))<=((vt0.c0)))))  NULLS FIRST, vt0.c0 ASC);
SELECT ALL * FROM vt0 WHERE ((+ (((vt0.c0)&(vt0.c0))))) ORDER BY ((((vt0.c0) IS FALSE))%((((vt0.c0))<=((vt0.c0)))))  NULLS FIRST, vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) IS FALSE))%((((vt0.c0))<=((vt0.c0)))))  NULLS FIRST, vt0.c0 ASC);
SELECT ALL * FROM vt0 WHERE ((+ (((vt0.c0)&(vt0.c0))))) ORDER BY ((((vt0.c0) IS FALSE))%((((vt0.c0))<=((vt0.c0)))))  NULLS FIRST, vt0.c0 ASC;
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (((CAST(rt0.c1 AS NUMERIC))%((+ (x''))))) ORDER BY (CAST(vt0.c0 AS TEXT) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS NUMERIC))%((+ (x''))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY (CAST(vt0.c0 AS TEXT) IN ()) DESC);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (((CAST(rt0.c1 AS NUMERIC))%((+ (x''))))) ORDER BY (CAST(vt0.c0 AS TEXT) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS NUMERIC))%((+ (x''))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY (CAST(vt0.c0 AS TEXT) IN ()) DESC);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (((CAST(rt0.c1 AS NUMERIC))%((+ (x''))))) ORDER BY (CAST(vt0.c0 AS TEXT) IN ()) DESC;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c5) IS TRUE))AND(rt0.c5)))AND(CASE rt0.c3  WHEN rt0.c5 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 END))) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c5) IS TRUE))AND(rt0.c5)))AND(CASE rt0.c3  WHEN rt0.c5 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c1  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c5) IS TRUE))AND(rt0.c5)))AND(CASE rt0.c3  WHEN rt0.c5 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 END))) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c5) IS TRUE))AND(rt0.c5)))AND(CASE rt0.c3  WHEN rt0.c5 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c1  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c5) IS TRUE))AND(rt0.c5)))AND(CASE rt0.c3  WHEN rt0.c5 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 END))) ORDER BY rt0.c1  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE (0.28288986784932024) ORDER BY (+ (rt0.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.28288986784932024) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (rt0.c1)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (0.28288986784932024) ORDER BY (+ (rt0.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.28288986784932024) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (rt0.c1)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (0.28288986784932024) ORDER BY (+ (rt0.c1)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((~ (0.6116786995627056))) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (((rt0.c2)%(rt0.c3))))) ORDER BY CAST(((rt0.c1)<(rt0.c0)) AS INTEGER)  NULLS FIRST, (((((rt0.c3) BETWEEN (rt0.c2) AND (0X286d73b1)), CAST(rt0.c5 AS BLOB), ((rt0.c1) NOT NULL)))<=((((rt0.c1)>(rt0.c4)), rt0.c2, TRIM(rt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (0.6116786995627056))) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (((rt0.c2)%(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c1)<(rt0.c0)) AS INTEGER)  NULLS FIRST, (((((rt0.c3) BETWEEN (rt0.c2) AND (0X286d73b1)), CAST(rt0.c5 AS BLOB), ((rt0.c1) NOT NULL)))<=((((rt0.c1)>(rt0.c4)), rt0.c2, TRIM(rt0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((~ (0.6116786995627056))) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (((rt0.c2)%(rt0.c3))))) ORDER BY CAST(((rt0.c1)<(rt0.c0)) AS INTEGER)  NULLS FIRST, (((((rt0.c3) BETWEEN (rt0.c2) AND (0X286d73b1)), CAST(rt0.c5 AS BLOB), ((rt0.c1) NOT NULL)))<=((((rt0.c1)>(rt0.c4)), rt0.c2, TRIM(rt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (0.6116786995627056))) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (((rt0.c2)%(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c1)<(rt0.c0)) AS INTEGER)  NULLS FIRST, (((((rt0.c3) BETWEEN (rt0.c2) AND (0X286d73b1)), CAST(rt0.c5 AS BLOB), ((rt0.c1) NOT NULL)))<=((((rt0.c1)>(rt0.c4)), rt0.c2, TRIM(rt0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((~ (0.6116786995627056))) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (((rt0.c2)%(rt0.c3))))) ORDER BY CAST(((rt0.c1)<(rt0.c0)) AS INTEGER)  NULLS FIRST, (((((rt0.c3) BETWEEN (rt0.c2) AND (0X286d73b1)), CAST(rt0.c5 AS BLOB), ((rt0.c1) NOT NULL)))<=((((rt0.c1)>(rt0.c4)), rt0.c2, TRIM(rt0.c0)))) ASC  NULLS FIRST;
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (rt0.c5);
SELECT SUM(count) FROM (SELECT ((rt0.c5) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (rt0.c5);
SELECT SUM(count) FROM (SELECT ((rt0.c5) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (rt0.c5);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0) NOTNULL)))!=((((vt0.c0) IS TRUE))))) ORDER BY (((vt0.c0 IN (vt0.c0, vt0.c0)))<((NOT (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) NOTNULL)))!=((((vt0.c0) IS TRUE))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c0, vt0.c0)))<((NOT (vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0) NOTNULL)))!=((((vt0.c0) IS TRUE))))) ORDER BY (((vt0.c0 IN (vt0.c0, vt0.c0)))<((NOT (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) NOTNULL)))!=((((vt0.c0) IS TRUE))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c0, vt0.c0)))<((NOT (vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0) NOTNULL)))!=((((vt0.c0) IS TRUE))))) ORDER BY (((vt0.c0 IN (vt0.c0, vt0.c0)))<((NOT (vt0.c0))))  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE (STRFTIME((rt0.c4 IN ()), CAST(NULL AS TEXT), ((rt0.c0)IS(rt0.c3)), ((rt0.c4)>=('2121537654')), vt0.c0 COLLATE RTRIM)) ORDER BY ((((rt0.c4) IS FALSE))OR((rt0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((STRFTIME((rt0.c4 IN ()), CAST(NULL AS TEXT), ((rt0.c0)IS(rt0.c3)), ((rt0.c4)>=('2121537654')), vt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c4) IS FALSE))OR((rt0.c0 IN ()))) ASC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (STRFTIME((rt0.c4 IN ()), CAST(NULL AS TEXT), ((rt0.c0)IS(rt0.c3)), ((rt0.c4)>=('2121537654')), vt0.c0 COLLATE RTRIM)) ORDER BY ((((rt0.c4) IS FALSE))OR((rt0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((STRFTIME((rt0.c4 IN ()), CAST(NULL AS TEXT), ((rt0.c0)IS(rt0.c3)), ((rt0.c4)>=('2121537654')), vt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c4) IS FALSE))OR((rt0.c0 IN ()))) ASC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (STRFTIME((rt0.c4 IN ()), CAST(NULL AS TEXT), ((rt0.c0)IS(rt0.c3)), ((rt0.c4)>=('2121537654')), vt0.c0 COLLATE RTRIM)) ORDER BY ((((rt0.c4) IS FALSE))OR((rt0.c0 IN ()))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c3 IN ())) BETWEEN (((((((((((((rt0.c5)OR(NULL)))AND(rt0.c5)))OR(NULL)))OR(rt0.c0)))AND(rt0.c4)))OR('-38058707'))) AND (((rt0.c3)<(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN ())) BETWEEN (((((((((((((rt0.c5)OR(NULL)))AND(rt0.c5)))OR(NULL)))OR(rt0.c0)))AND(rt0.c4)))OR('-38058707'))) AND (((rt0.c3)<(rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c3 IN ())) BETWEEN (((((((((((((rt0.c5)OR(NULL)))AND(rt0.c5)))OR(NULL)))OR(rt0.c0)))AND(rt0.c4)))OR('-38058707'))) AND (((rt0.c3)<(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN ())) BETWEEN (((((((((((((rt0.c5)OR(NULL)))AND(rt0.c5)))OR(NULL)))OR(rt0.c0)))AND(rt0.c4)))OR('-38058707'))) AND (((rt0.c3)<(rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c3 IN ())) BETWEEN (((((((((((((rt0.c5)OR(NULL)))AND(rt0.c5)))OR(NULL)))OR(rt0.c0)))AND(rt0.c4)))OR('-38058707'))) AND (((rt0.c3)<(rt0.c4)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c1)|(rt0.c5)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)|(rt0.c5)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c1)|(rt0.c5)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)|(rt0.c5)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c1)|(rt0.c5)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE (CAST(UPPER(vt0.c0) AS BLOB)) ORDER BY LIKELIHOOD(DISTINCT vt0.c0, 0.7301802956868099) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(UPPER(vt0.c0) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(DISTINCT vt0.c0, 0.7301802956868099) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(UPPER(vt0.c0) AS BLOB)) ORDER BY LIKELIHOOD(DISTINCT vt0.c0, 0.7301802956868099) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(UPPER(vt0.c0) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(DISTINCT vt0.c0, 0.7301802956868099) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(UPPER(vt0.c0) AS BLOB)) ORDER BY LIKELIHOOD(DISTINCT vt0.c0, 0.7301802956868099) COLLATE RTRIM DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (STRFTIME((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), (('-755049523') NOT BETWEEN (vt0.c0) AND (vt0.c0)), 'u\n~zyI' COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((STRFTIME((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), (('-755049523') NOT BETWEEN (vt0.c0) AND (vt0.c0)), 'u\n~zyI' COLLATE NOCASE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (STRFTIME((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), (('-755049523') NOT BETWEEN (vt0.c0) AND (vt0.c0)), 'u\n~zyI' COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((STRFTIME((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), (('-755049523') NOT BETWEEN (vt0.c0) AND (vt0.c0)), 'u\n~zyI' COLLATE NOCASE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (STRFTIME((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), (('-755049523') NOT BETWEEN (vt0.c0) AND (vt0.c0)), 'u\n~zyI' COLLATE NOCASE));
SELECT ALL * FROM vt0 WHERE (UNLIKELY(((vt0.c0)<(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((vt0.c0)<(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (UNLIKELY(((vt0.c0)<(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((vt0.c0)<(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (UNLIKELY(((vt0.c0)<(vt0.c0))));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON json_array(((rt0.c1)IS NOT(rt0.c3)), PRINTF(rt0.c0), CAST(vt0.c0 AS REAL), ((rt0.c4)<>(rt0.c4))) WHERE ((- (TRIM(rt0.c4, rt0.c3)))) ORDER BY ((((((rt0.c3)AND(rt0.c3)))OR(rt0.c5)))<(UNLIKELY(rt0.c4))) ASC, (vt0.c0 IN ());
SELECT SUM(count) FROM (SELECT ALL (((- (TRIM(rt0.c4, rt0.c3)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON json_array(((rt0.c1)IS NOT(rt0.c3)), PRINTF(rt0.c0), CAST(vt0.c0 AS REAL), ((rt0.c4)!=(rt0.c4))) ORDER BY ((((((rt0.c3)AND(rt0.c3)))OR(rt0.c5)))<(UNLIKELY(rt0.c4))) ASC, (vt0.c0 IN ()));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON json_array(((rt0.c1)IS NOT(rt0.c3)), PRINTF(rt0.c0), CAST(vt0.c0 AS REAL), ((rt0.c4)<>(rt0.c4))) WHERE ((- (TRIM(rt0.c4, rt0.c3)))) ORDER BY ((((((rt0.c3)AND(rt0.c3)))OR(rt0.c5)))<(UNLIKELY(rt0.c4))) ASC, (vt0.c0 IN ());
SELECT SUM(count) FROM (SELECT ALL (((- (TRIM(rt0.c4, rt0.c3)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON json_array(((rt0.c1)IS NOT(rt0.c3)), PRINTF(rt0.c0), CAST(vt0.c0 AS REAL), ((rt0.c4)!=(rt0.c4))) ORDER BY ((((((rt0.c3)AND(rt0.c3)))OR(rt0.c5)))<(UNLIKELY(rt0.c4))) ASC, (vt0.c0 IN ()));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON json_array(((rt0.c1)IS NOT(rt0.c3)), PRINTF(rt0.c0), CAST(vt0.c0 AS REAL), ((rt0.c4)<>(rt0.c4))) WHERE ((- (TRIM(rt0.c4, rt0.c3)))) ORDER BY ((((((rt0.c3)AND(rt0.c3)))OR(rt0.c5)))<(UNLIKELY(rt0.c4))) ASC, (vt0.c0 IN ());
SELECT COUNT(*) FROM rt0 NOT INDEXED, vt0 WHERE (((IFNULL(rt0.c4, rt0.c3))=((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(rt0.c4, rt0.c3))==((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0 NOT INDEXED, vt0 WHERE (((IFNULL(rt0.c4, rt0.c3))=((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(rt0.c4, rt0.c3))==((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0 NOT INDEXED, vt0 WHERE (((IFNULL(rt0.c4, rt0.c3))=((NOT (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3)%('R\F<'))) NOT NULL)) ORDER BY (((rt0.c5)) NOT BETWEEN ((LIKELIHOOD(DISTINCT rt0.c4, 0.7069181752449191))) AND ((rt0.c5)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)%('R\F<'))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c5)) NOT BETWEEN ((LIKELIHOOD(DISTINCT rt0.c4, 0.7069181752449191))) AND ((rt0.c5)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3)%('R\F<'))) NOT NULL)) ORDER BY (((rt0.c5)) NOT BETWEEN ((LIKELIHOOD(DISTINCT rt0.c4, 0.7069181752449191))) AND ((rt0.c5)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)%('R\F<'))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c5)) NOT BETWEEN ((LIKELIHOOD(DISTINCT rt0.c4, 0.7069181752449191))) AND ((rt0.c5)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3)%('R\F<'))) NOT NULL)) ORDER BY (((rt0.c5)) NOT BETWEEN ((LIKELIHOOD(DISTINCT rt0.c4, 0.7069181752449191))) AND ((rt0.c5)))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (LAST_INSERT_ROWID()) ORDER BY (((rt0.c3)) BETWEEN ((((-311256651)GLOB(rt0.c3)))) AND ((((rt0.c3)=(rt0.c4))))) ASC  NULLS LAST, ((rt0.c0) NOT NULL) COLLATE BINARY ASC, ('1e500' IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3)) BETWEEN ((((-311256651)GLOB(rt0.c3)))) AND ((((rt0.c3)==(rt0.c4))))) ASC  NULLS LAST, ((rt0.c0) NOT NULL) COLLATE BINARY ASC, ('1e500' IN ()) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (LAST_INSERT_ROWID()) ORDER BY (((rt0.c3)) BETWEEN ((((-311256651)GLOB(rt0.c3)))) AND ((((rt0.c3)=(rt0.c4))))) ASC  NULLS LAST, ((rt0.c0) NOT NULL) COLLATE BINARY ASC, ('1e500' IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3)) BETWEEN ((((-311256651)GLOB(rt0.c3)))) AND ((((rt0.c3)==(rt0.c4))))) ASC  NULLS LAST, ((rt0.c0) NOT NULL) COLLATE BINARY ASC, ('1e500' IN ()) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (LAST_INSERT_ROWID()) ORDER BY (((rt0.c3)) BETWEEN ((((-311256651)GLOB(rt0.c3)))) AND ((((rt0.c3)=(rt0.c4))))) ASC  NULLS LAST, ((rt0.c0) NOT NULL) COLLATE BINARY ASC, ('1e500' IN ()) DESC  NULLS LAST;
SELECT * FROM vt0 CROSS JOIN rt0 ON CASE WHEN ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)) THEN rt0.c1 WHEN x'b6689e5e' THEN '0.8778690689478273' WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c4)) THEN 'ubn?r' ELSE rt0.c3 END WHERE ('-33447291') ORDER BY (((CASE WHEN rt0.c0 THEN vt0.c0 ELSE 0.6027135255162364 END))<>((CAST(rt0.c2 AS NUMERIC)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-33447291') IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON CASE WHEN ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)) THEN rt0.c1 WHEN x'b6689e5e' THEN '0.8778690689478273' WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c4)) THEN 'ubn?r' ELSE rt0.c3 END ORDER BY (((CASE WHEN rt0.c0 THEN vt0.c0 ELSE 0.6027135255162364 END))<>((CAST(rt0.c2 AS NUMERIC)))) DESC  NULLS LAST);
SELECT * FROM vt0 CROSS JOIN rt0 ON CASE WHEN ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)) THEN rt0.c1 WHEN x'b6689e5e' THEN '0.8778690689478273' WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c4)) THEN 'ubn?r' ELSE rt0.c3 END WHERE ('-33447291') ORDER BY (((CASE WHEN rt0.c0 THEN vt0.c0 ELSE 0.6027135255162364 END))<>((CAST(rt0.c2 AS NUMERIC)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-33447291') IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON CASE WHEN ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)) THEN rt0.c1 WHEN x'b6689e5e' THEN '0.8778690689478273' WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c4)) THEN 'ubn?r' ELSE rt0.c3 END ORDER BY (((CASE WHEN rt0.c0 THEN vt0.c0 ELSE 0.6027135255162364 END))<>((CAST(rt0.c2 AS NUMERIC)))) DESC  NULLS LAST);
SELECT * FROM vt0 CROSS JOIN rt0 ON CASE WHEN ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)) THEN rt0.c1 WHEN x'b6689e5e' THEN '0.8778690689478273' WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c4)) THEN 'ubn?r' ELSE rt0.c3 END WHERE ('-33447291') ORDER BY (((CASE WHEN rt0.c0 THEN vt0.c0 ELSE 0.6027135255162364 END))<>((CAST(rt0.c2 AS NUMERIC)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c1);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3) NOTNULL))IS((rt0.c5 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOTNULL))IS((rt0.c5 IN (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3) NOTNULL))IS((rt0.c5 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOTNULL))IS((rt0.c5 IN (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3) NOTNULL))IS((rt0.c5 IN (rt0.c0)))));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON rt0.c0 WHERE (0.25563237171933473) ORDER BY (((vt0.c0 IN ())) IS TRUE) DESC  NULLS LAST, 0.8055968886066398 ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.25563237171933473) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON rt0.c0 ORDER BY (((vt0.c0 IN ())) IS TRUE) DESC  NULLS LAST, 0.8055968886066398 ASC);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON rt0.c0 WHERE (0.25563237171933473) ORDER BY (((vt0.c0 IN ())) IS TRUE) DESC  NULLS LAST, 0.8055968886066398 ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.25563237171933473) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON rt0.c0 ORDER BY (((vt0.c0 IN ())) IS TRUE) DESC  NULLS LAST, 0.8055968886066398 ASC);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON rt0.c0 WHERE (0.25563237171933473) ORDER BY (((vt0.c0 IN ())) IS TRUE) DESC  NULLS LAST, 0.8055968886066398 ASC;
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c2 ELSE x'' END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE x'' END COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c2 ELSE x'' END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE x'' END COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c2 ELSE x'' END COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)=((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)=((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)=((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)=((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)=((- (vt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c5)AND(rt0.c0)))AND(rt0.c5))) BETWEEN (IFNULL(DISTINCT rt0.c3, rt0.c3)) AND (((rt0.c4)LIKE(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c5)AND(rt0.c0)))AND(rt0.c5))) BETWEEN (IFNULL(DISTINCT rt0.c3, rt0.c3)) AND (((rt0.c4)LIKE(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c5)AND(rt0.c0)))AND(rt0.c5))) BETWEEN (IFNULL(DISTINCT rt0.c3, rt0.c3)) AND (((rt0.c4)LIKE(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c5)AND(rt0.c0)))AND(rt0.c5))) BETWEEN (IFNULL(DISTINCT rt0.c3, rt0.c3)) AND (((rt0.c4)LIKE(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c5)AND(rt0.c0)))AND(rt0.c5))) BETWEEN (IFNULL(DISTINCT rt0.c3, rt0.c3)) AND (((rt0.c4)LIKE(rt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN (((vt0.c0) ISNULL), ((vt0.c0)AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN (((vt0.c0) ISNULL), ((vt0.c0)AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN (((vt0.c0) ISNULL), ((vt0.c0)AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN (((vt0.c0) ISNULL), ((vt0.c0)AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN (((vt0.c0) ISNULL), ((vt0.c0)AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)==(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)==(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)==(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)==(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)==(vt0.c0)) AS INTEGER));
SELECT * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (NULL);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c3)|(vt0.c0)) COLLATE NOCASE) ORDER BY ((rt0.c0 COLLATE RTRIM) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (x'')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)|(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c0 COLLATE RTRIM) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (x'')) ASC);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c3)|(vt0.c0)) COLLATE NOCASE) ORDER BY ((rt0.c0 COLLATE RTRIM) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (x'')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)|(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c0 COLLATE RTRIM) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (x'')) ASC);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c3)|(vt0.c0)) COLLATE NOCASE) ORDER BY ((rt0.c0 COLLATE RTRIM) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (x'')) ASC;
SELECT * FROM vt0 WHERE (((LOWER(DISTINCT vt0.c0))>=(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT vt0.c0))>=(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((LOWER(DISTINCT vt0.c0))>=(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT vt0.c0))>=(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((LOWER(DISTINCT vt0.c0))>=(vt0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((HEX(rt0.c5) IN (LTRIM(rt0.c3), (((0.9849690167174785))<=((rt0.c3)))))) ORDER BY ((((('-1510684666') BETWEEN (rt0.c0) AND (rt0.c4))))<((CAST(rt0.c1 AS INTEGER)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((HEX(rt0.c5) IN (LTRIM(rt0.c3), (((0.9849690167174785))<=((rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((('-1510684666') BETWEEN (rt0.c0) AND (rt0.c4))))<((CAST(rt0.c1 AS INTEGER)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((HEX(rt0.c5) IN (LTRIM(rt0.c3), (((0.9849690167174785))<=((rt0.c3)))))) ORDER BY ((((('-1510684666') BETWEEN (rt0.c0) AND (rt0.c4))))<((CAST(rt0.c1 AS INTEGER)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((HEX(rt0.c5) IN (LTRIM(rt0.c3), (((0.9849690167174785))<=((rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((('-1510684666') BETWEEN (rt0.c0) AND (rt0.c4))))<((CAST(rt0.c1 AS INTEGER)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((HEX(rt0.c5) IN (LTRIM(rt0.c3), (((0.9849690167174785))<=((rt0.c3)))))) ORDER BY ((((('-1510684666') BETWEEN (rt0.c0) AND (rt0.c4))))<((CAST(rt0.c1 AS INTEGER)))) ASC;
SELECT ALL * FROM rt0, vt0 WHERE (CASE 0Xffffffffa7951522  WHEN (((vt0.c0, rt0.c5, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c2, vt0.c0, rt0.c4))) THEN ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 0Xffffffffa7951522  WHEN (((vt0.c0, rt0.c5, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c2, vt0.c0, rt0.c4))) THEN ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CASE 0Xffffffffa7951522  WHEN (((vt0.c0, rt0.c5, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c2, vt0.c0, rt0.c4))) THEN ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 0Xffffffffa7951522  WHEN (((vt0.c0, rt0.c5, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c2, vt0.c0, rt0.c4))) THEN ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CASE 0Xffffffffa7951522  WHEN (((vt0.c0, rt0.c5, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c2, vt0.c0, rt0.c4))) THEN ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (json_patch(CAST(rt0.c4 AS TEXT), rt0.c4 COLLATE BINARY)) ORDER BY LIKELY(DISTINCT json_quote(rt0.c3))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_patch(CAST(rt0.c4 AS TEXT), rt0.c4 COLLATE BINARY)) IS TRUE)  as count FROM rt0 ORDER BY LIKELY(DISTINCT json_quote(rt0.c3))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (json_patch(CAST(rt0.c4 AS TEXT), rt0.c4 COLLATE BINARY)) ORDER BY LIKELY(DISTINCT json_quote(rt0.c3))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_patch(CAST(rt0.c4 AS TEXT), rt0.c4 COLLATE BINARY)) IS TRUE)  as count FROM rt0 ORDER BY LIKELY(DISTINCT json_quote(rt0.c3))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (json_patch(CAST(rt0.c4 AS TEXT), rt0.c4 COLLATE BINARY)) ORDER BY LIKELY(DISTINCT json_quote(rt0.c3))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(CAST(rt0.c2 AS REAL) AS INTEGER) WHERE (UNLIKELY(DISTINCT ((rt0.c0) IS TRUE))) ORDER BY rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((rt0.c0) IS TRUE))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(CAST(rt0.c2 AS REAL) AS INTEGER) ORDER BY rt0.c0 DESC);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(CAST(rt0.c2 AS REAL) AS INTEGER) WHERE (UNLIKELY(DISTINCT ((rt0.c0) IS TRUE))) ORDER BY rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((rt0.c0) IS TRUE))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(CAST(rt0.c2 AS REAL) AS INTEGER) ORDER BY rt0.c0 DESC);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(CAST(rt0.c2 AS REAL) AS INTEGER) WHERE (UNLIKELY(DISTINCT ((rt0.c0) IS TRUE))) ORDER BY rt0.c0 DESC;
SELECT * FROM rt0 WHERE ((+ (((rt0.c5) IS FALSE)))) ORDER BY rt0.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c5) IS FALSE)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3  NULLS LAST);
SELECT * FROM rt0 WHERE ((+ (((rt0.c5) IS FALSE)))) ORDER BY rt0.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c5) IS FALSE)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3  NULLS LAST);
SELECT * FROM rt0 WHERE ((+ (((rt0.c5) IS FALSE)))) ORDER BY rt0.c3  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))>((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL))>((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))>((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL))>((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))>((vt0.c0 IN ()))));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN -371707102 ELSE rt0.c0 END IN ())) ORDER BY (((~ (rt0.c2))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN -371707102 ELSE rt0.c0 END IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((~ (rt0.c2))) ISNULL));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN -371707102 ELSE rt0.c0 END IN ())) ORDER BY (((~ (rt0.c2))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN -371707102 ELSE rt0.c0 END IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((~ (rt0.c2))) ISNULL));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN -371707102 ELSE rt0.c0 END IN ())) ORDER BY (((~ (rt0.c2))) ISNULL);
SELECT * FROM vt0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CHANGES());
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((SQLITE_SOURCE_ID())) AND (((NOT (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((SQLITE_SOURCE_ID())) AND (((NOT (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((SQLITE_SOURCE_ID())) AND (((NOT (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((SQLITE_SOURCE_ID())) AND (((NOT (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((SQLITE_SOURCE_ID())) AND (((NOT (vt0.c0))))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (rt0.c5)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((- (rt0.c5)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (rt0.c5)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((- (rt0.c5)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (rt0.c5)) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN 0x323d7f21 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))) ORDER BY json('')  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN 0X323d7f21 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY json('')  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN 0x323d7f21 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))) ORDER BY json('')  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN 0X323d7f21 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY json('')  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)+(x'')))|(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)+(x'')))|(rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)+(x'')))|(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)+(x'')))|(rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)+(x'')))|(rt0.c0)));
SELECT * FROM rt0, vt0 WHERE ((((rt0.c4 IN ())) BETWEEN ('읿!/[') AND (CASE WHEN rt0.c3 THEN rt0.c5 END)));
SELECT SUM(count) FROM (SELECT (((((rt0.c4 IN ())) BETWEEN ('읿!/[') AND (CASE WHEN rt0.c3 THEN rt0.c5 END))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c4 IN ())) BETWEEN ('읿!/[') AND (CASE WHEN rt0.c3 THEN rt0.c5 END)));
SELECT SUM(count) FROM (SELECT (((((rt0.c4 IN ())) BETWEEN ('읿!/[') AND (CASE WHEN rt0.c3 THEN rt0.c5 END))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c4 IN ())) BETWEEN ('읿!/[') AND (CASE WHEN rt0.c3 THEN rt0.c5 END)));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0 COLLATE BINARY) NOT BETWEEN (((rt0.c3) IS FALSE)) AND (CAST(rt0.c1 AS NUMERIC)))) ORDER BY ((((((rt0.c4)OR(x'15c8')))OR(vt0.c0))) NOT BETWEEN ((~ (rt0.c5))) AND (NULLIF(0x414095a5, '992929705'))) ASC, (~ ((((rt0.c2, rt0.c2, rt0.c4))>((rt0.c0, rt0.c4, rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE BINARY) NOT BETWEEN (((rt0.c3) IS FALSE)) AND (CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c4)OR(x'15c8')))OR(vt0.c0))) NOT BETWEEN ((~ (rt0.c5))) AND (NULLIF(0x414095a5, '992929705'))) ASC, (~ ((((rt0.c2, rt0.c2, rt0.c4))>((rt0.c0, rt0.c4, rt0.c0))))) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0 COLLATE BINARY) NOT BETWEEN (((rt0.c3) IS FALSE)) AND (CAST(rt0.c1 AS NUMERIC)))) ORDER BY ((((((rt0.c4)OR(x'15c8')))OR(vt0.c0))) NOT BETWEEN ((~ (rt0.c5))) AND (NULLIF(0x414095a5, '992929705'))) ASC, (~ ((((rt0.c2, rt0.c2, rt0.c4))>((rt0.c0, rt0.c4, rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE BINARY) NOT BETWEEN (((rt0.c3) IS FALSE)) AND (CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c4)OR(x'15c8')))OR(vt0.c0))) NOT BETWEEN ((~ (rt0.c5))) AND (NULLIF(0x414095a5, '992929705'))) ASC, (~ ((((rt0.c2, rt0.c2, rt0.c4))>((rt0.c0, rt0.c4, rt0.c0))))) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0 COLLATE BINARY) NOT BETWEEN (((rt0.c3) IS FALSE)) AND (CAST(rt0.c1 AS NUMERIC)))) ORDER BY ((((((rt0.c4)OR(x'15c8')))OR(vt0.c0))) NOT BETWEEN ((~ (rt0.c5))) AND (NULLIF(0x414095a5, '992929705'))) ASC, (~ ((((rt0.c2, rt0.c2, rt0.c4))>((rt0.c0, rt0.c4, rt0.c0))))) DESC;
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c1) ORDER BY NULLIF((((rt0.c4, rt0.c3, NULL)) NOT BETWEEN ((vt0.c0, vt0.c0, rt0.c4)) AND ((rt0.c1, rt0.c5, rt0.c4))), (('1587964255') NOTNULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0 ORDER BY NULLIF((((rt0.c4, rt0.c3, NULL)) NOT BETWEEN ((vt0.c0, vt0.c0, rt0.c4)) AND ((rt0.c1, rt0.c5, rt0.c4))), (('1587964255') NOTNULL)) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c1) ORDER BY NULLIF((((rt0.c4, rt0.c3, NULL)) NOT BETWEEN ((vt0.c0, vt0.c0, rt0.c4)) AND ((rt0.c1, rt0.c5, rt0.c4))), (('1587964255') NOTNULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0 ORDER BY NULLIF((((rt0.c4, rt0.c3, NULL)) NOT BETWEEN ((vt0.c0, vt0.c0, rt0.c4)) AND ((rt0.c1, rt0.c5, rt0.c4))), (('1587964255') NOTNULL)) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c1) ORDER BY NULLIF((((rt0.c4, rt0.c3, NULL)) NOT BETWEEN ((vt0.c0, vt0.c0, rt0.c4)) AND ((rt0.c1, rt0.c5, rt0.c4))), (('1587964255') NOTNULL)) DESC;
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON (((((rt0.c1))>=((rt0.c4))))OR(((vt0.c0) IS TRUE))) WHERE ((NOT (((NULL) NOT BETWEEN (rt0.c5) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((NULL) NOT BETWEEN (rt0.c5) AND (rt0.c3))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((((rt0.c1))>=((rt0.c4))))OR(((vt0.c0) IS TRUE))));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON (((((rt0.c1))>=((rt0.c4))))OR(((vt0.c0) IS TRUE))) WHERE ((NOT (((NULL) NOT BETWEEN (rt0.c5) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((NULL) NOT BETWEEN (rt0.c5) AND (rt0.c3))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((((rt0.c1))>=((rt0.c4))))OR(((vt0.c0) IS TRUE))));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON (((((rt0.c1))>=((rt0.c4))))OR(((vt0.c0) IS TRUE))) WHERE ((NOT (((NULL) NOT BETWEEN (rt0.c5) AND (rt0.c3)))));
SELECT * FROM rt0 WHERE (rt0.c5) ORDER BY (+ (0.7912348295122108)) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c5) IS TRUE)  as count FROM rt0 ORDER BY (+ (0.7912348295122108)) DESC);
SELECT * FROM rt0 WHERE (rt0.c5) ORDER BY (+ (0.7912348295122108)) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c5) IS TRUE)  as count FROM rt0 ORDER BY (+ (0.7912348295122108)) DESC);
SELECT * FROM rt0 WHERE (rt0.c5) ORDER BY (+ (0.7912348295122108)) DESC;
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c3 COLLATE RTRIM) ISNULL)) ORDER BY (~ ((+ (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (~ ((+ (rt0.c2))))  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c3 COLLATE RTRIM) ISNULL)) ORDER BY (~ ((+ (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (~ ((+ (rt0.c2))))  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c3 COLLATE RTRIM) ISNULL)) ORDER BY (~ ((+ (rt0.c2))))  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE (((NULL) NOT NULL)) ORDER BY ((+ (vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((NULL) NOT NULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((+ (vt0.c0)) IN ()));
SELECT * FROM rt0, vt0 WHERE (((NULL) NOT NULL)) ORDER BY ((+ (vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((NULL) NOT NULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((+ (vt0.c0)) IN ()));
SELECT * FROM rt0, vt0 WHERE (((NULL) NOT NULL)) ORDER BY ((+ (vt0.c0)) IN ());
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)*(rt0.c4)))==(CASE WHEN rt0.c5 THEN rt0.c4 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)*(rt0.c4)))=(CASE WHEN rt0.c5 THEN rt0.c4 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)*(rt0.c4)))==(CASE WHEN rt0.c5 THEN rt0.c4 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)*(rt0.c4)))=(CASE WHEN rt0.c5 THEN rt0.c4 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)*(rt0.c4)))==(CASE WHEN rt0.c5 THEN rt0.c4 END)));
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE ((((rt0.c0)>>(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)>>(rt0.c2)) IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE ((((rt0.c0)>>(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)>>(rt0.c2)) IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE ((((rt0.c0)>>(rt0.c2)) IN ()));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0 COLLATE BINARY)|(CASE rt0.c5  WHEN rt0.c5 THEN rt0.c1 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE BINARY)|(CASE rt0.c5  WHEN rt0.c5 THEN rt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0 COLLATE BINARY)|(CASE rt0.c5  WHEN rt0.c5 THEN rt0.c1 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE BINARY)|(CASE rt0.c5  WHEN rt0.c5 THEN rt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0 COLLATE BINARY)|(CASE rt0.c5  WHEN rt0.c5 THEN rt0.c1 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((~ (rt0.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((~ (rt0.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((~ (rt0.c2))) NOT NULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 IN (7.47016263E8)) IN ())) ORDER BY UPPER(CASE rt0.c4  WHEN x'1283' THEN rt0.c2 ELSE rt0.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 IN (7.47016263E8)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY UPPER(CASE rt0.c4  WHEN x'1283' THEN rt0.c2 ELSE rt0.c1 END));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 IN (7.47016263E8)) IN ())) ORDER BY UPPER(CASE rt0.c4  WHEN x'1283' THEN rt0.c2 ELSE rt0.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 IN (7.47016263E8)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY UPPER(CASE rt0.c4  WHEN x'1283' THEN rt0.c2 ELSE rt0.c1 END));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 IN (7.47016263E8)) IN ())) ORDER BY UPPER(CASE rt0.c4  WHEN x'1283' THEN rt0.c2 ELSE rt0.c1 END);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)AND(vt0.c0)))OR(NULL)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)AND(vt0.c0)))OR(NULL)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)AND(vt0.c0)))OR(NULL)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)AND(vt0.c0)))OR(NULL)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)AND(vt0.c0)))OR(NULL)) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c4)))OR(rt0.c3))) NOT BETWEEN (((((rt0.c1)AND(rt0.c0)))OR(rt0.c0))) AND (((rt0.c2)&(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c4)))OR(rt0.c3))) NOT BETWEEN (((((rt0.c1)AND(rt0.c0)))OR(rt0.c0))) AND (((rt0.c2)&(NULL))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c4)))OR(rt0.c3))) NOT BETWEEN (((((rt0.c1)AND(rt0.c0)))OR(rt0.c0))) AND (((rt0.c2)&(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c4)))OR(rt0.c3))) NOT BETWEEN (((((rt0.c1)AND(rt0.c0)))OR(rt0.c0))) AND (((rt0.c2)&(NULL))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c4)))OR(rt0.c3))) NOT BETWEEN (((((rt0.c1)AND(rt0.c0)))OR(rt0.c0))) AND (((rt0.c2)&(NULL)))));
SELECT ALL * FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL));
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c3)IS NOT(rt0.c4))) IS TRUE)) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)IS NOT(rt0.c4))) IS TRUE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c1  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c3)IS NOT(rt0.c4))) IS TRUE)) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)IS NOT(rt0.c4))) IS TRUE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c1  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c3)IS NOT(rt0.c4))) IS TRUE)) ORDER BY rt0.c1  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((((((((((vt0.c0 IN ()))OR('256051657')))AND(((vt0.c0)<>(vt0.c0)))))OR(((vt0.c0)>(vt0.c0)))))AND(((vt0.c0) IS FALSE)))) ORDER BY CAST(vt0.c0 AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0 IN ()))OR('256051657')))AND(((vt0.c0)!=(vt0.c0)))))OR(((vt0.c0)>(vt0.c0)))))AND(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((((((((vt0.c0 IN ()))OR('256051657')))AND(((vt0.c0)<>(vt0.c0)))))OR(((vt0.c0)>(vt0.c0)))))AND(((vt0.c0) IS FALSE)))) ORDER BY CAST(vt0.c0 AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0 IN ()))OR('256051657')))AND(((vt0.c0)!=(vt0.c0)))))OR(((vt0.c0)>(vt0.c0)))))AND(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((((((((vt0.c0 IN ()))OR('256051657')))AND(((vt0.c0)<>(vt0.c0)))))OR(((vt0.c0)>(vt0.c0)))))AND(((vt0.c0) IS FALSE)))) ORDER BY CAST(vt0.c0 AS NUMERIC)  NULLS LAST;
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON ((load_extension(rt0.c1))+(((rt0.c3)IS(rt0.c3)))) WHERE ((((((((((((vt0.c0)OR(rt0.c2)))OR(rt0.c4)))OR(rt0.c5)))AND(vt0.c0))))>((((rt0.c3) ISNULL))))) ORDER BY ((((rt0.c4)) BETWEEN ((rt0.c5)) AND ((rt0.c3))) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((((((((((vt0.c0)OR(rt0.c2)))OR(rt0.c4)))OR(rt0.c5)))AND(vt0.c0))))>((((rt0.c3) ISNULL))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((load_extension(rt0.c1))+(((rt0.c3)IS(rt0.c3)))) ORDER BY ((((rt0.c4)) BETWEEN ((rt0.c5)) AND ((rt0.c3))) IN ()) ASC);
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON ((load_extension(rt0.c1))+(((rt0.c3)IS(rt0.c3)))) WHERE ((((((((((((vt0.c0)OR(rt0.c2)))OR(rt0.c4)))OR(rt0.c5)))AND(vt0.c0))))>((((rt0.c3) ISNULL))))) ORDER BY ((((rt0.c4)) BETWEEN ((rt0.c5)) AND ((rt0.c3))) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((((((((((vt0.c0)OR(rt0.c2)))OR(rt0.c4)))OR(rt0.c5)))AND(vt0.c0))))>((((rt0.c3) ISNULL))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((load_extension(rt0.c1))+(((rt0.c3)IS(rt0.c3)))) ORDER BY ((((rt0.c4)) BETWEEN ((rt0.c5)) AND ((rt0.c3))) IN ()) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (CAST((((rt0.c1, 0.9923344533310716, rt0.c1))=((rt0.c0, rt0.c1, rt0.c1))) AS BLOB)) ORDER BY ((((((vt0.c0)%(rt0.c3)))OR(CAST(rt0.c5 AS TEXT))))OR((('266276560') IS FALSE)))  NULLS FIRST, rt0.c1 DESC, CASE WHEN LOWER(DISTINCT rt0.c0) THEN ((rt0.c1)+(rt0.c4)) WHEN ((rt0.c5)<<(vt0.c0)) THEN (rt0.c3 IN ()) WHEN ((((rt0.c4)OR(rt0.c3)))OR(rt0.c3)) THEN json_array_length(rt0.c4) END ASC;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c1, 0.9923344533310716, rt0.c1))=((rt0.c0, rt0.c1, rt0.c1))) AS BLOB)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((vt0.c0)%(rt0.c3)))OR(CAST(rt0.c5 AS TEXT))))OR((('266276560') IS FALSE)))  NULLS FIRST, rt0.c1 DESC, CASE WHEN LOWER(DISTINCT rt0.c0) THEN ((rt0.c1)+(rt0.c4)) WHEN ((rt0.c5)<<(vt0.c0)) THEN (rt0.c3 IN ()) WHEN ((((rt0.c4)OR(rt0.c3)))OR(rt0.c3)) THEN json_array_length(rt0.c4) END ASC);
SELECT ALL * FROM rt0, vt0 WHERE (CAST((((rt0.c1, 0.9923344533310716, rt0.c1))=((rt0.c0, rt0.c1, rt0.c1))) AS BLOB)) ORDER BY ((((((vt0.c0)%(rt0.c3)))OR(CAST(rt0.c5 AS TEXT))))OR((('266276560') IS FALSE)))  NULLS FIRST, rt0.c1 DESC, CASE WHEN LOWER(DISTINCT rt0.c0) THEN ((rt0.c1)+(rt0.c4)) WHEN ((rt0.c5)<<(vt0.c0)) THEN (rt0.c3 IN ()) WHEN ((((rt0.c4)OR(rt0.c3)))OR(rt0.c3)) THEN json_array_length(rt0.c4) END ASC;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c1, 0.9923344533310716, rt0.c1))=((rt0.c0, rt0.c1, rt0.c1))) AS BLOB)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((vt0.c0)%(rt0.c3)))OR(CAST(rt0.c5 AS TEXT))))OR((('266276560') IS FALSE)))  NULLS FIRST, rt0.c1 DESC, CASE WHEN LOWER(DISTINCT rt0.c0) THEN ((rt0.c1)+(rt0.c4)) WHEN ((rt0.c5)<<(vt0.c0)) THEN (rt0.c3 IN ()) WHEN ((((rt0.c4)OR(rt0.c3)))OR(rt0.c3)) THEN json_array_length(rt0.c4) END ASC);
SELECT ALL * FROM rt0, vt0 WHERE (CAST((((rt0.c1, 0.9923344533310716, rt0.c1))=((rt0.c0, rt0.c1, rt0.c1))) AS BLOB)) ORDER BY ((((((vt0.c0)%(rt0.c3)))OR(CAST(rt0.c5 AS TEXT))))OR((('266276560') IS FALSE)))  NULLS FIRST, rt0.c1 DESC, CASE WHEN LOWER(DISTINCT rt0.c0) THEN ((rt0.c1)+(rt0.c4)) WHEN ((rt0.c5)<<(vt0.c0)) THEN (rt0.c3 IN ()) WHEN ((((rt0.c4)OR(rt0.c3)))OR(rt0.c3)) THEN json_array_length(rt0.c4) END ASC;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON CAST((rt0.c2 IN ()) AS NUMERIC) WHERE ((~ (((vt0.c0) IS FALSE)))) ORDER BY rt0.c4 ASC;
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CAST((rt0.c2 IN ()) AS NUMERIC) ORDER BY rt0.c4 ASC);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON CAST((rt0.c2 IN ()) AS NUMERIC) WHERE ((~ (((vt0.c0) IS FALSE)))) ORDER BY rt0.c4 ASC;
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CAST((rt0.c2 IN ()) AS NUMERIC) ORDER BY rt0.c4 ASC);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON CAST((rt0.c2 IN ()) AS NUMERIC) WHERE ((~ (((vt0.c0) IS FALSE)))) ORDER BY rt0.c4 ASC;
SELECT COUNT(*) FROM rt0, vt0 WHERE (LTRIM(((rt0.c5)/(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((rt0.c5)/(rt0.c2)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (LTRIM(((rt0.c5)/(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((rt0.c5)/(rt0.c2)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (LTRIM(((rt0.c5)/(rt0.c2))));
SELECT ALL * FROM rt0 WHERE (CASE x'1b8e'  WHEN ((rt0.c2) NOTNULL) THEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c5)) ELSE CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END END) ORDER BY (((((('쑟v') NOTNULL))AND(CAST(rt0.c0 AS INTEGER))))OR(((((rt0.c0)AND(rt0.c4)))OR(rt0.c4)))) DESC, ((((((((CAST(rt0.c2 AS TEXT))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))))OR(CAST(rt0.c0 AS REAL))))OR((- (rt0.c0)))))AND(x'')) DESC  NULLS LAST, ((((((rt0.c2)AND(rt0.c1)))OR(rt0.c3))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE x'1b8e'  WHEN ((rt0.c2) NOTNULL) THEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c5)) ELSE CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END END) IS TRUE)  as count FROM rt0 ORDER BY (((((('쑟v') NOTNULL))AND(CAST(rt0.c0 AS INTEGER))))OR(((((rt0.c0)AND(rt0.c4)))OR(rt0.c4)))) DESC, ((((((((CAST(rt0.c2 AS TEXT))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))))OR(CAST(rt0.c0 AS REAL))))OR((- (rt0.c0)))))AND(x'')) DESC  NULLS LAST, ((((((rt0.c2)AND(rt0.c1)))OR(rt0.c3))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))) ASC);
SELECT ALL * FROM rt0 WHERE (CASE x'1b8e'  WHEN ((rt0.c2) NOTNULL) THEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c5)) ELSE CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END END) ORDER BY (((((('쑟v') NOTNULL))AND(CAST(rt0.c0 AS INTEGER))))OR(((((rt0.c0)AND(rt0.c4)))OR(rt0.c4)))) DESC, ((((((((CAST(rt0.c2 AS TEXT))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))))OR(CAST(rt0.c0 AS REAL))))OR((- (rt0.c0)))))AND(x'')) DESC  NULLS LAST, ((((((rt0.c2)AND(rt0.c1)))OR(rt0.c3))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE x'1b8e'  WHEN ((rt0.c2) NOTNULL) THEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c5)) ELSE CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END END) IS TRUE)  as count FROM rt0 ORDER BY (((((('쑟v') NOTNULL))AND(CAST(rt0.c0 AS INTEGER))))OR(((((rt0.c0)AND(rt0.c4)))OR(rt0.c4)))) DESC, ((((((((CAST(rt0.c2 AS TEXT))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))))OR(CAST(rt0.c0 AS REAL))))OR((- (rt0.c0)))))AND(x'')) DESC  NULLS LAST, ((((((rt0.c2)AND(rt0.c1)))OR(rt0.c3))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))) ASC);
SELECT ALL * FROM rt0 WHERE (CASE x'1b8e'  WHEN ((rt0.c2) NOTNULL) THEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c5)) ELSE CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END END) ORDER BY (((((('쑟v') NOTNULL))AND(CAST(rt0.c0 AS INTEGER))))OR(((((rt0.c0)AND(rt0.c4)))OR(rt0.c4)))) DESC, ((((((((CAST(rt0.c2 AS TEXT))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))))OR(CAST(rt0.c0 AS REAL))))OR((- (rt0.c0)))))AND(x'')) DESC  NULLS LAST, ((((((rt0.c2)AND(rt0.c1)))OR(rt0.c3))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))) ASC;
SELECT ALL * FROM rt0, vt0 WHERE (UPPER(''));
SELECT SUM(count) FROM (SELECT ALL ((UPPER('')) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED);
SELECT ALL * FROM rt0, vt0 WHERE (UPPER(''));
SELECT SUM(count) FROM (SELECT ALL ((UPPER('')) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED);
SELECT ALL * FROM rt0, vt0 WHERE (UPPER(''));
SELECT * FROM vt0, rt0 WHERE (LIKELIHOOD(CAST(rt0.c2 AS REAL), 0.5478118422813483));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(CAST(rt0.c2 AS REAL), 0.5478118422813483)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (LIKELIHOOD(CAST(rt0.c2 AS REAL), 0.5478118422813483));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(CAST(rt0.c2 AS REAL), 0.5478118422813483)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (LIKELIHOOD(CAST(rt0.c2 AS REAL), 0.5478118422813483));
SELECT * FROM rt0 WHERE ((- (((rt0.c0)GLOB(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c0)GLOB(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- (((rt0.c0)GLOB(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c0)GLOB(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- (((rt0.c0)GLOB(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)-(rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)-(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)-(rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)-(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)-(rt0.c2))) IS TRUE));
SELECT * FROM vt0, rt0 WHERE ((((((((rt0.c1)OR(rt0.c0)))OR(NULL))))<((((rt0.c1) ISNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c1)OR(rt0.c0)))OR(NULL))))<((((rt0.c1) ISNULL))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((((((rt0.c1)OR(rt0.c0)))OR(NULL))))<((((rt0.c1) ISNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c1)OR(rt0.c0)))OR(NULL))))<((((rt0.c1) ISNULL))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((((((rt0.c1)OR(rt0.c0)))OR(NULL))))<((((rt0.c1) ISNULL)))));
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON ((((CAST(rt0.c0 AS BLOB))OR(rt0.c0)))AND(((rt0.c2)>=(rt0.c2)))) WHERE (CASE WHEN rt0.c2 THEN ((rt0.c5)%(rt0.c5)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c2 THEN ((rt0.c5)%(rt0.c5)) END) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((CAST(rt0.c0 AS BLOB))OR(rt0.c0)))AND(((rt0.c2)>=(rt0.c2)))));
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON ((((CAST(rt0.c0 AS BLOB))OR(rt0.c0)))AND(((rt0.c2)>=(rt0.c2)))) WHERE (CASE WHEN rt0.c2 THEN ((rt0.c5)%(rt0.c5)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c2 THEN ((rt0.c5)%(rt0.c5)) END) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((CAST(rt0.c0 AS BLOB))OR(rt0.c0)))AND(((rt0.c2)>=(rt0.c2)))));
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON ((((CAST(rt0.c0 AS BLOB))OR(rt0.c0)))AND(((rt0.c2)>=(rt0.c2)))) WHERE (CASE WHEN rt0.c2 THEN ((rt0.c5)%(rt0.c5)) END);
SELECT * FROM rt0, vt0 WHERE ((+ ((NULL IN ())))) ORDER BY (((rt0.c2 IN (rt0.c4))) BETWEEN (((rt0.c3)>=(rt0.c1))) AND (((rt0.c1)>>(rt0.c0)))) DESC, CASE WHEN (+ (rt0.c4)) THEN ((rt0.c3) NOT NULL) ELSE rt0.c2 END;
SELECT SUM(count) FROM (SELECT ALL (((+ ((NULL IN ())))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c2 IN (rt0.c4))) BETWEEN (((rt0.c3)>=(rt0.c1))) AND (((rt0.c1)>>(rt0.c0)))) DESC, CASE WHEN (+ (rt0.c4)) THEN ((rt0.c3) NOT NULL) ELSE rt0.c2 END);
SELECT * FROM rt0, vt0 WHERE ((+ ((NULL IN ())))) ORDER BY (((rt0.c2 IN (rt0.c4))) BETWEEN (((rt0.c3)>=(rt0.c1))) AND (((rt0.c1)>>(rt0.c0)))) DESC, CASE WHEN (+ (rt0.c4)) THEN ((rt0.c3) NOT NULL) ELSE rt0.c2 END;
SELECT SUM(count) FROM (SELECT ALL (((+ ((NULL IN ())))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c2 IN (rt0.c4))) BETWEEN (((rt0.c3)>=(rt0.c1))) AND (((rt0.c1)>>(rt0.c0)))) DESC, CASE WHEN (+ (rt0.c4)) THEN ((rt0.c3) NOT NULL) ELSE rt0.c2 END);
SELECT * FROM rt0, vt0 WHERE ((+ ((NULL IN ())))) ORDER BY (((rt0.c2 IN (rt0.c4))) BETWEEN (((rt0.c3)>=(rt0.c1))) AND (((rt0.c1)>>(rt0.c0)))) DESC, CASE WHEN (+ (rt0.c4)) THEN ((rt0.c3) NOT NULL) ELSE rt0.c2 END;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c5, rt0.c0, x''))>((x'8765', rt0.c0, rt0.c3))))*(rt0.c5 COLLATE BINARY))) ORDER BY ((CAST(rt0.c3 AS BLOB))<((rt0.c4 IN ())))  NULLS FIRST, CASE WHEN ((((rt0.c2)AND(rt0.c3)))OR(rt0.c3)) THEN (((rt0.c5))<((rt0.c4))) ELSE ((rt0.c2)%(rt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c5, rt0.c0, x''))>((x'8765', rt0.c0, rt0.c3))))*(rt0.c5 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(rt0.c3 AS BLOB))<((rt0.c4 IN ())))  NULLS FIRST, CASE WHEN ((((rt0.c2)AND(rt0.c3)))OR(rt0.c3)) THEN (((rt0.c5))<((rt0.c4))) ELSE ((rt0.c2)%(rt0.c0)) END  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c5, rt0.c0, x''))>((x'8765', rt0.c0, rt0.c3))))*(rt0.c5 COLLATE BINARY))) ORDER BY ((CAST(rt0.c3 AS BLOB))<((rt0.c4 IN ())))  NULLS FIRST, CASE WHEN ((((rt0.c2)AND(rt0.c3)))OR(rt0.c3)) THEN (((rt0.c5))<((rt0.c4))) ELSE ((rt0.c2)%(rt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c5, rt0.c0, x''))>((x'8765', rt0.c0, rt0.c3))))*(rt0.c5 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(rt0.c3 AS BLOB))<((rt0.c4 IN ())))  NULLS FIRST, CASE WHEN ((((rt0.c2)AND(rt0.c3)))OR(rt0.c3)) THEN (((rt0.c5))<((rt0.c4))) ELSE ((rt0.c2)%(rt0.c0)) END  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c5, rt0.c0, x''))>((x'8765', rt0.c0, rt0.c3))))*(rt0.c5 COLLATE BINARY))) ORDER BY ((CAST(rt0.c3 AS BLOB))<((rt0.c4 IN ())))  NULLS FIRST, CASE WHEN ((((rt0.c2)AND(rt0.c3)))OR(rt0.c3)) THEN (((rt0.c5))<((rt0.c4))) ELSE ((rt0.c2)%(rt0.c0)) END  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((1.22613695E8, NULL, rt0.c2)) BETWEEN ((rt0.c5 COLLATE RTRIM, TYPEOF(rt0.c3), ((rt0.c4) BETWEEN (rt0.c5) AND (rt0.c2)))) AND ((CASE rt0.c3  WHEN 'L[' THEN rt0.c0 END, 0X935ccaf, ((((rt0.c4)AND(rt0.c0)))AND(rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((1.22613695E8, NULL, rt0.c2)) BETWEEN ((rt0.c5 COLLATE RTRIM, TYPEOF(rt0.c3), ((rt0.c4) BETWEEN (rt0.c5) AND (rt0.c2)))) AND ((CASE rt0.c3  WHEN 'L[' THEN rt0.c0 END, 0x935ccaf, ((((rt0.c4)AND(rt0.c0)))AND(rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((1.22613695E8, NULL, rt0.c2)) BETWEEN ((rt0.c5 COLLATE RTRIM, TYPEOF(rt0.c3), ((rt0.c4) BETWEEN (rt0.c5) AND (rt0.c2)))) AND ((CASE rt0.c3  WHEN 'L[' THEN rt0.c0 END, 0X935ccaf, ((((rt0.c4)AND(rt0.c0)))AND(rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((1.22613695E8, NULL, rt0.c2)) BETWEEN ((rt0.c5 COLLATE RTRIM, TYPEOF(rt0.c3), ((rt0.c4) BETWEEN (rt0.c5) AND (rt0.c2)))) AND ((CASE rt0.c3  WHEN 'L[' THEN rt0.c0 END, 0x935ccaf, ((((rt0.c4)AND(rt0.c0)))AND(rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((1.22613695E8, NULL, rt0.c2)) BETWEEN ((rt0.c5 COLLATE RTRIM, TYPEOF(rt0.c3), ((rt0.c4) BETWEEN (rt0.c5) AND (rt0.c2)))) AND ((CASE rt0.c3  WHEN 'L[' THEN rt0.c0 END, 0X935ccaf, ((((rt0.c4)AND(rt0.c0)))AND(rt0.c3))))));
SELECT * FROM rt0 WHERE ((((rt0.c3, rt0.c0, rt0.c1)) NOT BETWEEN ((((x'')*(rt0.c1)), json_insert(0.943106036096091, rt0.c3, rt0.c3), ((rt0.c4) NOTNULL))) AND ((((rt0.c4) NOT NULL), ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c4)), CAST(rt0.c1 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3, rt0.c0, rt0.c1)) NOT BETWEEN ((((x'')*(rt0.c1)), json_insert(0.943106036096091, rt0.c3, rt0.c3), ((rt0.c4) NOTNULL))) AND ((((rt0.c4) NOT NULL), ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c4)), CAST(rt0.c1 AS REAL))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c3, rt0.c0, rt0.c1)) NOT BETWEEN ((((x'')*(rt0.c1)), json_insert(0.943106036096091, rt0.c3, rt0.c3), ((rt0.c4) NOTNULL))) AND ((((rt0.c4) NOT NULL), ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c4)), CAST(rt0.c1 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3, rt0.c0, rt0.c1)) NOT BETWEEN ((((x'')*(rt0.c1)), json_insert(0.943106036096091, rt0.c3, rt0.c3), ((rt0.c4) NOTNULL))) AND ((((rt0.c4) NOT NULL), ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c4)), CAST(rt0.c1 AS REAL))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)IS NOT(vt0.c0))  WHEN ((((vt0.c0)AND('0.2598014868002464')))AND(vt0.c0)) THEN ((vt0.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)IS NOT(vt0.c0))  WHEN ((((vt0.c0)AND('0.2598014868002464')))AND(vt0.c0)) THEN ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)IS NOT(vt0.c0))  WHEN ((((vt0.c0)AND('0.2598014868002464')))AND(vt0.c0)) THEN ((vt0.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)IS NOT(vt0.c0))  WHEN ((((vt0.c0)AND('0.2598014868002464')))AND(vt0.c0)) THEN ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)IS NOT(vt0.c0))  WHEN ((((vt0.c0)AND('0.2598014868002464')))AND(vt0.c0)) THEN ((vt0.c0) NOT NULL) END);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (((((rt0.c3, rt0.c3, rt0.c2))>=((rt0.c4, rt0.c0, rt0.c3))))LIKE((- (rt0.c5)))) WHERE (((((((((rt0.c2)OR(rt0.c2)))AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c4)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c2)OR(rt0.c2)))AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c4)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((((rt0.c3, rt0.c3, rt0.c2))>=((rt0.c4, rt0.c0, rt0.c3))))LIKE((- (rt0.c5)))));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (((((rt0.c3, rt0.c3, rt0.c2))>=((rt0.c4, rt0.c0, rt0.c3))))LIKE((- (rt0.c5)))) WHERE (((((((((rt0.c2)OR(rt0.c2)))AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c4)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c2)OR(rt0.c2)))AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c4)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((((rt0.c3, rt0.c3, rt0.c2))>=((rt0.c4, rt0.c0, rt0.c3))))LIKE((- (rt0.c5)))));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (((((rt0.c3, rt0.c3, rt0.c2))>=((rt0.c4, rt0.c0, rt0.c3))))LIKE((- (rt0.c5)))) WHERE (((((((((rt0.c2)OR(rt0.c2)))AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c4)) COLLATE NOCASE);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c2 WHERE (LIKELY(rt0.c1) COLLATE BINARY COLLATE BINARY) ORDER BY x'f080'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(rt0.c1) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c2 ORDER BY x'f080'  NULLS FIRST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c2 WHERE (LIKELY(rt0.c1) COLLATE BINARY COLLATE BINARY) ORDER BY x'f080'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(rt0.c1) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c2 ORDER BY x'f080'  NULLS FIRST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c2 WHERE (LIKELY(rt0.c1) COLLATE BINARY COLLATE BINARY) ORDER BY x'f080'  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((~ (((rt0.c5) NOT BETWEEN (rt0.c4) AND (rt0.c5))))) ORDER BY ((((((((((((rt0.c0)OR(rt0.c0)))OR(NULL)))OR(CASE rt0.c5  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c4 END)))OR(CAST(rt0.c4 AS NUMERIC))))AND(x'')))OR(((rt0.c3) NOTNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c5) NOT BETWEEN (rt0.c4) AND (rt0.c5))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((((rt0.c0)OR(rt0.c0)))OR(NULL)))OR(CASE rt0.c5  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c4 END)))OR(CAST(rt0.c4 AS NUMERIC))))AND(x'')))OR(((rt0.c3) NOTNULL))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((~ (((rt0.c5) NOT BETWEEN (rt0.c4) AND (rt0.c5))))) ORDER BY ((((((((((((rt0.c0)OR(rt0.c0)))OR(NULL)))OR(CASE rt0.c5  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c4 END)))OR(CAST(rt0.c4 AS NUMERIC))))AND(x'')))OR(((rt0.c3) NOTNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c5) NOT BETWEEN (rt0.c4) AND (rt0.c5))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((((rt0.c0)OR(rt0.c0)))OR(NULL)))OR(CASE rt0.c5  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c4 END)))OR(CAST(rt0.c4 AS NUMERIC))))AND(x'')))OR(((rt0.c3) NOTNULL))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((~ (((rt0.c5) NOT BETWEEN (rt0.c4) AND (rt0.c5))))) ORDER BY ((((((((((((rt0.c0)OR(rt0.c0)))OR(NULL)))OR(CASE rt0.c5  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c4 END)))OR(CAST(rt0.c4 AS NUMERIC))))AND(x'')))OR(((rt0.c3) NOTNULL))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ('0.9733355838376776');
SELECT SUM(count) FROM (SELECT (('0.9733355838376776') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('0.9733355838376776');
SELECT SUM(count) FROM (SELECT (('0.9733355838376776') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('0.9733355838376776');
SELECT ALL * FROM rt0, vt0 WHERE (TRIM((~ (rt0.c4)))) ORDER BY ((((((rt0.c4) NOT BETWEEN ('') AND (rt0.c5)))OR(((vt0.c0) NOTNULL))))AND(((rt0.c2)<(rt0.c2)))) DESC, (('314271622') NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c5 ELSE vt0.c0 END) AND (((rt0.c2)<=(rt0.c1)))) DESC  NULLS LAST, ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c5)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM((~ (rt0.c4)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((rt0.c4) NOT BETWEEN ('') AND (rt0.c5)))OR(((vt0.c0) NOTNULL))))AND(((rt0.c2)<(rt0.c2)))) DESC, (('314271622') NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c5 ELSE vt0.c0 END) AND (((rt0.c2)<=(rt0.c1)))) DESC  NULLS LAST, ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c5)) COLLATE RTRIM DESC);
SELECT ALL * FROM rt0, vt0 WHERE (TRIM((~ (rt0.c4)))) ORDER BY ((((((rt0.c4) NOT BETWEEN ('') AND (rt0.c5)))OR(((vt0.c0) NOTNULL))))AND(((rt0.c2)<(rt0.c2)))) DESC, (('314271622') NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c5 ELSE vt0.c0 END) AND (((rt0.c2)<=(rt0.c1)))) DESC  NULLS LAST, ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c5)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM((~ (rt0.c4)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((rt0.c4) NOT BETWEEN ('') AND (rt0.c5)))OR(((vt0.c0) NOTNULL))))AND(((rt0.c2)<(rt0.c2)))) DESC, (('314271622') NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c5 ELSE vt0.c0 END) AND (((rt0.c2)<=(rt0.c1)))) DESC  NULLS LAST, ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c5)) COLLATE RTRIM DESC);
SELECT ALL * FROM rt0, vt0 WHERE (TRIM((~ (rt0.c4)))) ORDER BY ((((((rt0.c4) NOT BETWEEN ('') AND (rt0.c5)))OR(((vt0.c0) NOTNULL))))AND(((rt0.c2)<(rt0.c2)))) DESC, (('314271622') NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c5 ELSE vt0.c0 END) AND (((rt0.c2)<=(rt0.c1)))) DESC  NULLS LAST, ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c5)) COLLATE RTRIM DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS NUMERIC))>(0X79653a30)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS NUMERIC))>(0x79653a30))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS NUMERIC))>(0X79653a30)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS NUMERIC))>(0x79653a30))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS NUMERIC))>(0X79653a30)));
SELECT COUNT(*) FROM rt0 WHERE (json(((rt0.c0) ISNULL))) ORDER BY ((rt0.c4 COLLATE RTRIM)GLOB(LOWER(rt0.c4)));
SELECT SUM(count) FROM (SELECT ALL ((json(((rt0.c0) ISNULL))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c4 COLLATE RTRIM)GLOB(LOWER(rt0.c4))));
SELECT COUNT(*) FROM rt0 WHERE (json(((rt0.c0) ISNULL))) ORDER BY ((rt0.c4 COLLATE RTRIM)GLOB(LOWER(rt0.c4)));
SELECT SUM(count) FROM (SELECT ALL ((json(((rt0.c0) ISNULL))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c4 COLLATE RTRIM)GLOB(LOWER(rt0.c4))));
SELECT COUNT(*) FROM rt0 WHERE (json(((rt0.c0) ISNULL))) ORDER BY ((rt0.c4 COLLATE RTRIM)GLOB(LOWER(rt0.c4)));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (CASE WHEN '0.33637758294371045' THEN rt0.c3 END IN ()) WHERE (((rt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 IN ()) IN ())) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (CASE WHEN '0.33637758294371045' THEN rt0.c3 END IN ()));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (CASE WHEN '0.33637758294371045' THEN rt0.c3 END IN ()) WHERE (((rt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 IN ()) IN ())) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (CASE WHEN '0.33637758294371045' THEN rt0.c3 END IN ()));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (CASE WHEN '0.33637758294371045' THEN rt0.c3 END IN ()) WHERE (((rt0.c0 IN ()) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0) ISNULL)) IS FALSE) ASC  NULLS FIRST, ((CAST(vt0.c0 AS TEXT)) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((x'3c91', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) AND (LOWER(DISTINCT vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) ISNULL)) IS FALSE) ASC  NULLS FIRST, ((CAST(vt0.c0 AS TEXT)) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((x'3c91', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) AND (LOWER(DISTINCT vt0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0) ISNULL)) IS FALSE) ASC  NULLS FIRST, ((CAST(vt0.c0 AS TEXT)) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((x'3c91', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) AND (LOWER(DISTINCT vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) ISNULL)) IS FALSE) ASC  NULLS FIRST, ((CAST(vt0.c0 AS TEXT)) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((x'3c91', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) AND (LOWER(DISTINCT vt0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0) ISNULL)) IS FALSE) ASC  NULLS FIRST, ((CAST(vt0.c0 AS TEXT)) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((x'3c91', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) AND (LOWER(DISTINCT vt0.c0))) DESC;
SELECT * FROM vt0 WHERE ((+ (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT ALL * FROM vt0, rt0 WHERE (((CASE '-1005884657'  WHEN rt0.c3 THEN rt0.c5 WHEN '993941495' THEN rt0.c2 WHEN '-1371887564' THEN vt0.c0 ELSE rt0.c5 END) NOT NULL)) ORDER BY (((((rt0.c2, rt0.c3, rt0.c5)) BETWEEN ((rt0.c3, rt0.c3, rt0.c2)) AND (('', NULL, rt0.c1)))) NOT BETWEEN (((rt0.c1) IS FALSE)) AND (rt0.c5));
SELECT SUM(count) FROM (SELECT ((((CASE '-1005884657'  WHEN rt0.c3 THEN rt0.c5 WHEN '993941495' THEN rt0.c2 WHEN '-1371887564' THEN vt0.c0 ELSE rt0.c5 END) NOT NULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c2, rt0.c3, rt0.c5)) BETWEEN ((rt0.c3, rt0.c3, rt0.c2)) AND (('', NULL, rt0.c1)))) NOT BETWEEN (((rt0.c1) IS FALSE)) AND (rt0.c5)));
SELECT ALL * FROM vt0, rt0 WHERE (((CASE '-1005884657'  WHEN rt0.c3 THEN rt0.c5 WHEN '993941495' THEN rt0.c2 WHEN '-1371887564' THEN vt0.c0 ELSE rt0.c5 END) NOT NULL)) ORDER BY (((((rt0.c2, rt0.c3, rt0.c5)) BETWEEN ((rt0.c3, rt0.c3, rt0.c2)) AND (('', NULL, rt0.c1)))) NOT BETWEEN (((rt0.c1) IS FALSE)) AND (rt0.c5));
SELECT SUM(count) FROM (SELECT ((((CASE '-1005884657'  WHEN rt0.c3 THEN rt0.c5 WHEN '993941495' THEN rt0.c2 WHEN '-1371887564' THEN vt0.c0 ELSE rt0.c5 END) NOT NULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c2, rt0.c3, rt0.c5)) BETWEEN ((rt0.c3, rt0.c3, rt0.c2)) AND (('', NULL, rt0.c1)))) NOT BETWEEN (((rt0.c1) IS FALSE)) AND (rt0.c5)));
SELECT ALL * FROM vt0, rt0 WHERE (((CASE '-1005884657'  WHEN rt0.c3 THEN rt0.c5 WHEN '993941495' THEN rt0.c2 WHEN '-1371887564' THEN vt0.c0 ELSE rt0.c5 END) NOT NULL)) ORDER BY (((((rt0.c2, rt0.c3, rt0.c5)) BETWEEN ((rt0.c3, rt0.c3, rt0.c2)) AND (('', NULL, rt0.c1)))) NOT BETWEEN (((rt0.c1) IS FALSE)) AND (rt0.c5));
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (((+ ('[{'))) NOT NULL) WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((+ ('[{'))) NOT NULL));
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (((+ ('[{'))) NOT NULL) WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((+ ('[{'))) NOT NULL));
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (((+ ('[{'))) NOT NULL) WHERE (rt0.c4);
SELECT ALL * FROM rt0 WHERE (((((0.21825839542599357) NOT NULL)) NOT BETWEEN (((rt0.c5)-(rt0.c4))) AND (rt0.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((0.21825839542599357) NOT NULL)) NOT BETWEEN (((rt0.c5)-(rt0.c4))) AND (rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((0.21825839542599357) NOT NULL)) NOT BETWEEN (((rt0.c5)-(rt0.c4))) AND (rt0.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((0.21825839542599357) NOT NULL)) NOT BETWEEN (((rt0.c5)-(rt0.c4))) AND (rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((0.21825839542599357) NOT NULL)) NOT BETWEEN (((rt0.c5)-(rt0.c4))) AND (rt0.c3 COLLATE NOCASE)));
SELECT * FROM vt0 CROSS JOIN rt0 ON ((vt0.c0) IS FALSE) COLLATE NOCASE WHERE (CAST((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) AS INTEGER)) ORDER BY ((((rt0.c5)OR((((rt0.c3))>=((rt0.c1))))))AND((rt0.c1 IN (rt0.c5)))) DESC  NULLS LAST, CASE CAST(rt0.c5 AS TEXT)  WHEN (~ (rt0.c0)) THEN CAST(rt0.c5 AS REAL) WHEN CAST(rt0.c4 AS BLOB) THEN ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c5)) WHEN ((rt0.c5)IS NOT(vt0.c0)) THEN ((rt0.c3)OR(rt0.c5)) WHEN rt0.c2 COLLATE NOCASE THEN (rt0.c5 IN (rt0.c0)) WHEN QUOTE(rt0.c0) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN '0.40166133195319176' THEN rt0.c5 WHEN rt0.c3 THEN rt0.c3 END ELSE ((((rt0.c2)OR(rt0.c4)))AND(x'')) END;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) AS INTEGER)) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((vt0.c0) IS FALSE) COLLATE NOCASE ORDER BY ((((rt0.c5)OR((((rt0.c3))>=((rt0.c1))))))AND((rt0.c1 IN (rt0.c5)))) DESC  NULLS LAST, CASE CAST(rt0.c5 AS TEXT)  WHEN (~ (rt0.c0)) THEN CAST(rt0.c5 AS REAL) WHEN CAST(rt0.c4 AS BLOB) THEN ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c5)) WHEN ((rt0.c5)IS NOT(vt0.c0)) THEN ((rt0.c3)OR(rt0.c5)) WHEN rt0.c2 COLLATE NOCASE THEN (rt0.c5 IN (rt0.c0)) WHEN QUOTE(rt0.c0) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN '0.40166133195319176' THEN rt0.c5 WHEN rt0.c3 THEN rt0.c3 END ELSE ((((rt0.c2)OR(rt0.c4)))AND(x'')) END);
SELECT * FROM vt0 CROSS JOIN rt0 ON ((vt0.c0) IS FALSE) COLLATE NOCASE WHERE (CAST((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) AS INTEGER)) ORDER BY ((((rt0.c5)OR((((rt0.c3))>=((rt0.c1))))))AND((rt0.c1 IN (rt0.c5)))) DESC  NULLS LAST, CASE CAST(rt0.c5 AS TEXT)  WHEN (~ (rt0.c0)) THEN CAST(rt0.c5 AS REAL) WHEN CAST(rt0.c4 AS BLOB) THEN ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c5)) WHEN ((rt0.c5)IS NOT(vt0.c0)) THEN ((rt0.c3)OR(rt0.c5)) WHEN rt0.c2 COLLATE NOCASE THEN (rt0.c5 IN (rt0.c0)) WHEN QUOTE(rt0.c0) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN '0.40166133195319176' THEN rt0.c5 WHEN rt0.c3 THEN rt0.c3 END ELSE ((((rt0.c2)OR(rt0.c4)))AND(x'')) END;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) AS INTEGER)) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((vt0.c0) IS FALSE) COLLATE NOCASE ORDER BY ((((rt0.c5)OR((((rt0.c3))>=((rt0.c1))))))AND((rt0.c1 IN (rt0.c5)))) DESC  NULLS LAST, CASE CAST(rt0.c5 AS TEXT)  WHEN (~ (rt0.c0)) THEN CAST(rt0.c5 AS REAL) WHEN CAST(rt0.c4 AS BLOB) THEN ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c5)) WHEN ((rt0.c5)IS NOT(vt0.c0)) THEN ((rt0.c3)OR(rt0.c5)) WHEN rt0.c2 COLLATE NOCASE THEN (rt0.c5 IN (rt0.c0)) WHEN QUOTE(rt0.c0) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN '0.40166133195319176' THEN rt0.c5 WHEN rt0.c3 THEN rt0.c3 END ELSE ((((rt0.c2)OR(rt0.c4)))AND(x'')) END);
SELECT * FROM vt0 CROSS JOIN rt0 ON ((vt0.c0) IS FALSE) COLLATE NOCASE WHERE (CAST((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) AS INTEGER)) ORDER BY ((((rt0.c5)OR((((rt0.c3))>=((rt0.c1))))))AND((rt0.c1 IN (rt0.c5)))) DESC  NULLS LAST, CASE CAST(rt0.c5 AS TEXT)  WHEN (~ (rt0.c0)) THEN CAST(rt0.c5 AS REAL) WHEN CAST(rt0.c4 AS BLOB) THEN ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c5)) WHEN ((rt0.c5)IS NOT(vt0.c0)) THEN ((rt0.c3)OR(rt0.c5)) WHEN rt0.c2 COLLATE NOCASE THEN (rt0.c5 IN (rt0.c0)) WHEN QUOTE(rt0.c0) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN '0.40166133195319176' THEN rt0.c5 WHEN rt0.c3 THEN rt0.c3 END ELSE ((((rt0.c2)OR(rt0.c4)))AND(x'')) END;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c3, rt0.c1, rt0.c1, vt0.c0, NULL))!=((rt0.c3, vt0.c0, 1.102651952E9, rt0.c3, rt0.c3))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((rt0.c3, rt0.c1, rt0.c1, vt0.c0, NULL))!=((rt0.c3, vt0.c0, 1.102651952E9, rt0.c3, rt0.c3))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c3, rt0.c1, rt0.c1, vt0.c0, NULL))!=((rt0.c3, vt0.c0, 1.102651952E9, rt0.c3, rt0.c3))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((rt0.c3, rt0.c1, rt0.c1, vt0.c0, NULL))!=((rt0.c3, vt0.c0, 1.102651952E9, rt0.c3, rt0.c3))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c3, rt0.c1, rt0.c1, vt0.c0, NULL))!=((rt0.c3, vt0.c0, 1.102651952E9, rt0.c3, rt0.c3))) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL) ORDER BY TYPEOF(((rt0.c1)<(rt0.c5))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY TYPEOF(((rt0.c1)<(rt0.c5))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL) ORDER BY TYPEOF(((rt0.c1)<(rt0.c5))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY TYPEOF(((rt0.c1)<(rt0.c5))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL) ORDER BY TYPEOF(((rt0.c1)<(rt0.c5))) DESC;
SELECT * FROM rt0, vt0 WHERE (((((rt0.c2)AND(rt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)AND(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c2)AND(rt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)AND(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c2)AND(rt0.c0))) NOTNULL));
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 COLLATE BINARY AS TEXT)) ORDER BY (((rt0.c2)%(rt0.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)%(rt0.c1)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 COLLATE BINARY AS TEXT)) ORDER BY (((rt0.c2)%(rt0.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)%(rt0.c1)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 COLLATE BINARY AS TEXT)) ORDER BY (((rt0.c2)%(rt0.c1)) IN ())  NULLS LAST;
