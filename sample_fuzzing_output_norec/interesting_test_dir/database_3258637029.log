-- Time: 2024/06/10 17:34:40
-- Database: database29
-- Database version: 3.40.0
-- seed value: 3258637029
PRAGMA cache_size = 50000; -- 5ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 1ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, c3, c4); -- 1ms;
INSERT OR ROLLBACK INTO rt0(c3, c4) VALUES (0.11589194159344007, 0.9375129726531455), (x'', 157702617), (NULL, 1795450609); -- 1ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(NULL); -- 0ms;
UPDATE rt0 SET (c2, c0, c4)=('', 0.10256649313478916, 740505915) WHERE ((CASE 7.40505915E8  WHEN rt0.c3 THEN rt0.c0 ELSE '' END)-(CASE WHEN rt0.c4 THEN rt0.c2 ELSE 0x96659d9 END)); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt0(c3, c4, c1) VALUES (0.49522466359492856, '1860865879', 'H嶰'); -- 1ms;
UPDATE OR IGNORE rt0 SET c4=1.795450609E9 WHERE rt0.c4; -- 1ms;
UPDATE OR IGNORE rt0 SET (c2)=(NULL) WHERE (((((rt0.c4)<<(rt0.c0))))=(((rt0.c4 IN (rt0.c1))))); -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c1, c3)=(x'5d371ee4', NULL); -- 0ms;
UPDATE rt0 SET c0=x'' WHERE ((((rt0.c3) NOT NULL)) IS TRUE); -- 1ms;
UPDATE OR ABORT rt0 SET c4=0.11589194159344007; -- 1ms;
INSERT OR FAIL INTO rt0(c2) VALUES (0.5878492186180756); -- 0ms;
ANALYZE rt0; -- 0ms;
ANALYZE rt0; -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2046605014 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (x'07fb', 1795450609, -2046605014, NULL, -63320600); -- 0ms;
PRAGMA temp.shrink_memory; -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c2, c0, c1) VALUES ('-2083037756', 'S\r', 0x6b0466f1, x''), ('[1', 0.49522466359492856, 'y3	G[䞹', 0.1225148891383997), (0.9722065953233464, NULL, 'H嶰', 0x1f46abf9); -- 0ms;
PRAGMA ignore_check_constraints; -- 1ms;
UPDATE OR FAIL rt0 SET (c3)=(x'90dd22b0') WHERE ((rt0.c2)AND(rt0.c4)) COLLATE NOCASE; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA short_column_names; -- 0ms;
PRAGMA temp.locking_mode; -- 1ms;
UPDATE OR IGNORE rt0 SET (c4)=('1795450609'); -- 0ms;
PRAGMA main.cache_spill; -- 0ms;
UPDATE OR ABORT rt0 SET (c0)=('0.10256649313478916'); -- 0ms;
UPDATE OR ROLLBACK rt0 SET c1=x'6a27' WHERE (((((rt0.c3)AND(rt0.c2)))AND(rt0.c2)) IN ((((rt0.c2))!=((rt0.c3))), ((((rt0.c1)OR(x'')))AND(rt0.c1)))); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA main.journal_mode = PERSIST; -- 0ms;
REINDEX BINARY; -- 0ms;
UPDATE OR FAIL rt0 SET c1='1860865879'; -- 0ms;
UPDATE OR IGNORE rt0 SET c1='-1006554187', c0=x'846e' WHERE CAST(((rt0.c3) NOTNULL) AS BLOB); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c3, c4, c0, c1) VALUES ('220814768', 'ke(*lk)+A', '', x''); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2, c3, c4, c0, c1) VALUES (NULL, NULL, NULL, '', NULL), ('-1991081117', '1795450609', '', 0.20343224878069022, 0.23849980551343686), (NULL, NULL, (((('')>>(x''))) IS FALSE), x'', '220814768'); -- 0ms;
INSERT OR FAIL INTO rt0(c1, c3, c0, c2) VALUES (NULL, x'', '-63320600', NULL); -- 0ms;
UPDATE rt0 SET c4=NULL; -- 3ms;
UPDATE rt0 SET (c3)=('V>\P'); -- 0ms;
PRAGMA main.recursive_triggers = false; -- 1ms;
PRAGMA cache_spill = -4531581098004935322; -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (-2.046605014E9, NULL, NULL, (((0.8595301213912212))>=((x''))) COLLATE NOCASE COLLATE RTRIM, 0x6eea8f57); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR ABORT rt0 SET (c4)=(0Xffffffff83d75dc4) WHERE (((~ ('n-*vB{^rZ')))>=(((rt0.c2)>(rt0.c3)))); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt0(c4) VALUES (167234779), (x''), (-1.006554187E9); -- 0ms;
INSERT OR REPLACE INTO rt0(c0, c2, c4, c1) VALUES ('-351943699', '[y9KS^', 0.2623631677642394, x''); -- 1ms;
UPDATE OR IGNORE rt0 SET (c4)=(596506921); -- 0ms;
UPDATE rt0 SET c4=x'' WHERE CAST(rt0.c1 COLLATE BINARY AS TEXT); -- 1ms;
ANALYZE; -- 0ms;
UPDATE OR ABORT rt0 SET c3=0.5715434400527459; -- 1ms;
UPDATE rt0 SET (c0)=(0.5067879902825949) WHERE rt0.c0; -- 0ms;
UPDATE rt0 SET c4=0.13959888351589933, c1=0.4853460983961102; -- 0ms;
UPDATE OR FAIL rt0 SET (c0)=(740505915); -- 0ms;
UPDATE OR ROLLBACK rt0 SET c1=NULL WHERE CASE (rt0.c0 IN (rt0.c1))  WHEN ((((((((rt0.c3)OR('-1205464201')))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)) THEN '\n	' WHEN '-1006554187' THEN rt0.c3 WHEN rt0.c4 COLLATE RTRIM THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) ELSE (((((((('')OR(rt0.c4)))OR(rt0.c2)))AND('-351943699')))AND(rt0.c2)) END; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-77117511 noskipscan'); -- 0ms;
PRAGMA main.recursive_triggers = false; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=NULL, c1=0.8834008775367419, c0='-1991081117'; -- 1ms;
UPDATE OR IGNORE rt0 SET (c4)=(NULL) WHERE ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0))) NOT NULL); -- 1ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT OR REPLACE INTO rt0(c4) VALUES (''); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(NULL) WHERE (rt0.c0 IN ()) COLLATE NOCASE; -- 0ms;
UPDATE OR REPLACE rt0 SET c1=0x6eea8f57, c2='' WHERE (~ (rt0.c3)) COLLATE NOCASE COLLATE RTRIM; -- 0ms;
UPDATE OR ABORT rt0 SET (c1)=('-1205464201'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c4, c1, c4)=(NULL, 157702617, NULL); -- 0ms;
INSERT OR ABORT INTO rt0(c0, c1, c2, c4) VALUES (0.008094478186301823, x'', NULL, x''), (0.2773762952072545, NULL, x'', 0.14798382480665584), ('350689768', x'', x'', 0.2623631677642394); -- 1ms;
INSERT OR FAIL INTO rt0(c4, c1, c3) VALUES ('887730056', 1883273241, NULL), (0.0620987861681922, 0.1225148891383997, ''), (0.24816642377500986, 0x799bdc36, x''), ('1373252731', NULL, '-77117511'), (0.42598448996296456, 0.20343224878069022, NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c1, c2) VALUES (0.7117315532592814, 0x30c1931b, NULL); -- 0ms;
END TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2) VALUES (x'', '쳛MQH~'); -- 0ms;
UPDATE OR IGNORE rt0 SET c3=0.2522561695022896; -- 0ms;
REINDEX  rt0; -- 0ms;
PRAGMA application_id = -2610399279072177254; -- 1ms;
INSERT OR IGNORE INTO rt0(c0, c1, c3) VALUES (1050957277, 0xffffffffc40133b5, -910452169); -- 0ms;
PRAGMA wal_autocheckpoint; -- 1ms;
UPDATE rt0 SET c2=NULL; -- 0ms;
INSERT OR ABORT INTO rt0(c1, c3, c2, c4) VALUES (NULL, '701718266', '', x'dfbd25dc'), (NULL, '1102980276', '0.13959888351589933', 0.6638754598917896), ('0.23849980551343686', x'82e0', 5.24725241E8, '-0.0'); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c3) VALUES (0.803599026619489, '曱Qw,7X\r*'); -- 0ms;
UPDATE rt0 SET (c4)=(x'4fd6') WHERE '-1660330489'; -- 0ms;
PRAGMA foreign_keys; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2); -- 1ms;
INSERT OR IGNORE INTO rt0(c0, c2, c3, c1) VALUES (x'', x'', '1373252731', NULL); -- 0ms;
PRAGMA temp.incremental_vacuum; -- 0ms;
PRAGMA secure_delete = true; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1) VALUES (CAST('1896718257' COLLATE RTRIM AS REAL)); -- 0ms;
INSERT OR ABORT INTO rt1(c1, c0) VALUES (NULL, -1.991081117E9), (0.07693463240785514, -1924298701), (0.034266490639813796, NULL); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=('1620824718'); -- 0ms;
INSERT OR ROLLBACK INTO rt1(c0) VALUES ('-878980726'), (x''), (NULL); -- 0ms;
UPDATE OR ABORT rt1 SET c1='n-*vb{^rz'; -- 0ms;
PRAGMA reverse_unordered_selects; -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c2) VALUES ('|O', 'O6s'), (NULL, '-2083037756'), (NULL, 0.8847648447137355); -- 0ms;
UPDATE OR ROLLBACK rt1 SET (c1)=('Hd') WHERE ((((CAST(rt1.c0 AS TEXT))OR('856423535')))OR(CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 END)); -- 0ms;
INSERT OR ABORT INTO rt1(c2, c1, c0) VALUES (' >', x'', x'12b6'); -- 0ms;
INSERT OR REPLACE INTO rt1 VALUES (NULL, 0.8789135964067603, -484739612), ('-298521912', NULL, NULL), (x'', 0.24816642377500986, ''); -- 0ms;
INSERT OR ROLLBACK INTO rt1(c2) VALUES (0.8595301213912212); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA checkpoint_fullfsync; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM rt1 NOT INDEXED CROSS JOIN rt0 ON (NOT (SQLITE_COMPILEOPTION_USED(rt1.c1))) WHERE ((((rt0.c2)) NOT BETWEEN ((((rt1.c2)-(rt1.c1)))) AND ((((rt0.c0)/(rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((((rt1.c2)-(rt1.c1)))) AND ((((rt0.c0)/(rt0.c1)))))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON (NOT (SQLITE_COMPILEOPTION_USED(rt1.c1))));
SELECT * FROM rt1 NOT INDEXED CROSS JOIN rt0 ON (NOT (SQLITE_COMPILEOPTION_USED(rt1.c1))) WHERE ((((rt0.c2)) NOT BETWEEN ((((rt1.c2)-(rt1.c1)))) AND ((((rt0.c0)/(rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((((rt1.c2)-(rt1.c1)))) AND ((((rt0.c0)/(rt0.c1)))))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON (NOT (SQLITE_COMPILEOPTION_USED(rt1.c1))));
SELECT * FROM rt1 NOT INDEXED CROSS JOIN rt0 ON (NOT (SQLITE_COMPILEOPTION_USED(rt1.c1))) WHERE ((((rt0.c2)) NOT BETWEEN ((((rt1.c2)-(rt1.c1)))) AND ((((rt0.c0)/(rt0.c1))))));
SELECT * FROM rt1 WHERE (CAST(((rt1.c0)>>(rt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0)>>(rt1.c0)) AS BLOB)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST(((rt1.c0)>>(rt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0)>>(rt1.c0)) AS BLOB)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST(((rt1.c0)>>(rt1.c0)) AS BLOB));
SELECT * FROM rt1 WHERE (CASE CAST(rt1.c1 AS INTEGER)  WHEN ((rt1.c1) IS FALSE) THEN 0.8113365606968475 ELSE ((((rt1.c0)AND(rt1.c2)))OR(rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt1.c1 AS INTEGER)  WHEN ((rt1.c1) IS FALSE) THEN 0.8113365606968475 ELSE ((((rt1.c0)AND(rt1.c2)))OR(rt1.c1)) END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE CAST(rt1.c1 AS INTEGER)  WHEN ((rt1.c1) IS FALSE) THEN 0.8113365606968475 ELSE ((((rt1.c0)AND(rt1.c2)))OR(rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt1.c1 AS INTEGER)  WHEN ((rt1.c1) IS FALSE) THEN 0.8113365606968475 ELSE ((((rt1.c0)AND(rt1.c2)))OR(rt1.c1)) END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE CAST(rt1.c1 AS INTEGER)  WHEN ((rt1.c1) IS FALSE) THEN 0.8113365606968475 ELSE ((((rt1.c0)AND(rt1.c2)))OR(rt1.c1)) END);
SELECT ALL COUNT(*) FROM rt1 WHERE (TRIM(DISTINCT CAST(rt1.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT CAST(rt1.c0 AS BLOB))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (TRIM(DISTINCT CAST(rt1.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT CAST(rt1.c0 AS BLOB))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (TRIM(DISTINCT CAST(rt1.c0 AS BLOB)));
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3))) AND (((rt0.c0)>(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3))) AND (((rt0.c0)>(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3))) AND (((rt0.c0)>(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3))) AND (((rt0.c0)>(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3))) AND (((rt0.c0)>(rt0.c3)))));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CASE ((rt0.c0)IS NOT(rt0.c0))  WHEN rt1.c1 COLLATE BINARY THEN CASE WHEN rt0.c0 THEN rt0.c4 END END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0)IS NOT(rt0.c0))  WHEN rt1.c1 COLLATE BINARY THEN CASE WHEN rt0.c0 THEN rt0.c4 END END) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CASE ((rt0.c0)IS NOT(rt0.c0))  WHEN rt1.c1 COLLATE BINARY THEN CASE WHEN rt0.c0 THEN rt0.c4 END END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0)IS NOT(rt0.c0))  WHEN rt1.c1 COLLATE BINARY THEN CASE WHEN rt0.c0 THEN rt0.c4 END END) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CASE ((rt0.c0)IS NOT(rt0.c0))  WHEN rt1.c1 COLLATE BINARY THEN CASE WHEN rt0.c0 THEN rt0.c4 END END);
SELECT * FROM rt0 WHERE ((((rt0.c3)) NOT BETWEEN ((((rt0.c4) NOT NULL))) AND ((JULIANDAY(rt0.c2, rt0.c0, rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) NOT BETWEEN ((((rt0.c4) NOT NULL))) AND ((JULIANDAY(rt0.c2, rt0.c0, rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c3)) NOT BETWEEN ((((rt0.c4) NOT NULL))) AND ((JULIANDAY(rt0.c2, rt0.c0, rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) NOT BETWEEN ((((rt0.c4) NOT NULL))) AND ((JULIANDAY(rt0.c2, rt0.c0, rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c3)) NOT BETWEEN ((((rt0.c4) NOT NULL))) AND ((JULIANDAY(rt0.c2, rt0.c0, rt0.c3)))));
SELECT COUNT(*) FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt0 WHERE ((CAST(rt0.c1 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c1 AS REAL) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((CAST(rt0.c1 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c1 AS REAL) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((CAST(rt0.c1 AS REAL) IN ()));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END)AND(((((rt1.c1)OR(rt1.c2)))OR(rt1.c2)))))AND((rt1.c2 IN ())))) ORDER BY (((rt1.c1 IN ())) BETWEEN ((NOT (rt1.c1))) AND (((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)))), CASE WHEN TRIM(rt1.c1) THEN NULL WHEN CAST(rt1.c1 AS REAL) THEN (rt1.c2 IN ()) WHEN ((rt1.c0) ISNULL) THEN (((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))) WHEN ((rt1.c2)OR(rt1.c0)) THEN (- (rt1.c1)) WHEN CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 END THEN ((rt1.c0)AND(rt1.c2)) ELSE rt1.c2 COLLATE BINARY END DESC, ((((((((x'')OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c1)))OR(rt1.c0)) COLLATE NOCASE COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END)AND(((((rt1.c1)OR(rt1.c2)))OR(rt1.c2)))))AND((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c1 IN ())) BETWEEN ((NOT (rt1.c1))) AND (((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)))), CASE WHEN TRIM(rt1.c1) THEN NULL WHEN CAST(rt1.c1 AS REAL) THEN (rt1.c2 IN ()) WHEN ((rt1.c0) ISNULL) THEN (((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))) WHEN ((rt1.c2)OR(rt1.c0)) THEN (- (rt1.c1)) WHEN CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 END THEN ((rt1.c0)AND(rt1.c2)) ELSE rt1.c2 COLLATE BINARY END DESC, ((((((((x'')OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c1)))OR(rt1.c0)) COLLATE NOCASE COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END)AND(((((rt1.c1)OR(rt1.c2)))OR(rt1.c2)))))AND((rt1.c2 IN ())))) ORDER BY (((rt1.c1 IN ())) BETWEEN ((NOT (rt1.c1))) AND (((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)))), CASE WHEN TRIM(rt1.c1) THEN NULL WHEN CAST(rt1.c1 AS REAL) THEN (rt1.c2 IN ()) WHEN ((rt1.c0) ISNULL) THEN (((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))) WHEN ((rt1.c2)OR(rt1.c0)) THEN (- (rt1.c1)) WHEN CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 END THEN ((rt1.c0)AND(rt1.c2)) ELSE rt1.c2 COLLATE BINARY END DESC, ((((((((x'')OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c1)))OR(rt1.c0)) COLLATE NOCASE COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END)AND(((((rt1.c1)OR(rt1.c2)))OR(rt1.c2)))))AND((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c1 IN ())) BETWEEN ((NOT (rt1.c1))) AND (((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)))), CASE WHEN TRIM(rt1.c1) THEN NULL WHEN CAST(rt1.c1 AS REAL) THEN (rt1.c2 IN ()) WHEN ((rt1.c0) ISNULL) THEN (((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))) WHEN ((rt1.c2)OR(rt1.c0)) THEN (- (rt1.c1)) WHEN CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 END THEN ((rt1.c0)AND(rt1.c2)) ELSE rt1.c2 COLLATE BINARY END DESC, ((((((((x'')OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c1)))OR(rt1.c0)) COLLATE NOCASE COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END)AND(((((rt1.c1)OR(rt1.c2)))OR(rt1.c2)))))AND((rt1.c2 IN ())))) ORDER BY (((rt1.c1 IN ())) BETWEEN ((NOT (rt1.c1))) AND (((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)))), CASE WHEN TRIM(rt1.c1) THEN NULL WHEN CAST(rt1.c1 AS REAL) THEN (rt1.c2 IN ()) WHEN ((rt1.c0) ISNULL) THEN (((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))) WHEN ((rt1.c2)OR(rt1.c0)) THEN (- (rt1.c1)) WHEN CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 END THEN ((rt1.c0)AND(rt1.c2)) ELSE rt1.c2 COLLATE BINARY END DESC, ((((((((x'')OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c1)))OR(rt1.c0)) COLLATE NOCASE COLLATE NOCASE;
SELECT * FROM rt1 WHERE ((+ ((~ (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((~ (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((+ ((~ (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((~ (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((+ ((~ (rt1.c0)))));
SELECT ALL * FROM rt1 WHERE (((((rt1.c2 COLLATE NOCASE)AND(IFNULL(rt1.c0, rt1.c0))))OR(((rt1.c2)&(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2 COLLATE NOCASE)AND(IFNULL(rt1.c0, rt1.c0))))OR(((rt1.c2)&(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c2 COLLATE NOCASE)AND(IFNULL(rt1.c0, rt1.c0))))OR(((rt1.c2)&(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2 COLLATE NOCASE)AND(IFNULL(rt1.c0, rt1.c0))))OR(((rt1.c2)&(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c2 COLLATE NOCASE)AND(IFNULL(rt1.c0, rt1.c0))))OR(((rt1.c2)&(rt1.c0)))));
SELECT ALL * FROM rt0 WHERE ((~ ((rt0.c2 IN ())))) ORDER BY ((rt0.c1)>=((~ (rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)>=((~ (rt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((~ ((rt0.c2 IN ())))) ORDER BY ((rt0.c1)>=((~ (rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)>=((~ (rt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((~ ((rt0.c2 IN ())))) ORDER BY ((rt0.c1)>=((~ (rt0.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END AS INTEGER));
SELECT ALL COUNT(*) FROM rt0 WHERE (((SQLITE_COMPILEOPTION_GET(rt0.c2)) BETWEEN ((((rt0.c4, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c2, x'', rt0.c0)) AND ((rt0.c3, rt0.c1, rt0.c0)))) AND (rt0.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((SQLITE_COMPILEOPTION_GET(rt0.c2)) BETWEEN ((((rt0.c4, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c2, x'', rt0.c0)) AND ((rt0.c3, rt0.c1, rt0.c0)))) AND (rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((SQLITE_COMPILEOPTION_GET(rt0.c2)) BETWEEN ((((rt0.c4, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c2, x'', rt0.c0)) AND ((rt0.c3, rt0.c1, rt0.c0)))) AND (rt0.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((SQLITE_COMPILEOPTION_GET(rt0.c2)) BETWEEN ((((rt0.c4, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c2, x'', rt0.c0)) AND ((rt0.c3, rt0.c1, rt0.c0)))) AND (rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((SQLITE_COMPILEOPTION_GET(rt0.c2)) BETWEEN ((((rt0.c4, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c2, x'', rt0.c0)) AND ((rt0.c3, rt0.c1, rt0.c0)))) AND (rt0.c3 COLLATE NOCASE)));
SELECT ALL * FROM rt1, rt0 WHERE (((((((((((rt1.c2)AND(x'436c')))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c3)))IS(x'')));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c2)AND(x'436c')))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c3)))IS(x''))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (((((((((((rt1.c2)AND(x'436c')))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c3)))IS(x'')));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c2)AND(x'436c')))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c3)))IS(x''))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (((((((((((rt1.c2)AND(x'436c')))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c3)))IS(x'')));
SELECT ALL * FROM rt0 WHERE ((- ((NOT (rt0.c0))))) ORDER BY ((NOT (rt0.c2)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- ((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((NOT (rt0.c2)) IN ()) ASC);
SELECT ALL * FROM rt0 WHERE ((- ((NOT (rt0.c0))))) ORDER BY ((NOT (rt0.c2)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- ((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((NOT (rt0.c2)) IN ()) ASC);
SELECT ALL * FROM rt0 WHERE ((- ((NOT (rt0.c0))))) ORDER BY ((NOT (rt0.c2)) IN ()) ASC;
SELECT ALL * FROM rt0 WHERE ((('-941262093')AND(rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((('-941262093')AND(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((('-941262093')AND(rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((('-941262093')AND(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((('-941262093')AND(rt0.c1 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CAST((('>!㻯G?') NOT NULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((('>!㻯G?') NOT NULL) AS NUMERIC)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CAST((('>!㻯G?') NOT NULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((('>!㻯G?') NOT NULL) AS NUMERIC)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CAST((('>!㻯G?') NOT NULL) AS NUMERIC));
SELECT * FROM rt1, rt0 WHERE (((~ (rt1.c0)) IN (CAST(rt0.c2 AS REAL), ((rt0.c4)>=(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((~ (rt1.c0)) IN (CAST(rt0.c2 AS REAL), ((rt0.c4)>=(rt0.c4))))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((~ (rt1.c0)) IN (CAST(rt0.c2 AS REAL), ((rt0.c4)>=(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((~ (rt1.c0)) IN (CAST(rt0.c2 AS REAL), ((rt0.c4)>=(rt0.c4))))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((~ (rt1.c0)) IN (CAST(rt0.c2 AS REAL), ((rt0.c4)>=(rt0.c4)))));
SELECT COUNT(*) FROM rt0, rt1 WHERE (CAST(LOWER(rt0.c4) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LOWER(rt0.c4) AS REAL)) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CAST(LOWER(rt0.c4) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LOWER(rt0.c4) AS REAL)) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CAST(LOWER(rt0.c4) AS REAL));
SELECT ALL * FROM rt1 NATURAL JOIN rt0 WHERE (x'ca0a' COLLATE NOCASE) ORDER BY (- ((~ (rt0.c0)))) DESC, ((rt0.c4)OR(rt0.c2)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((x'ca0a' COLLATE NOCASE) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0 ORDER BY (- ((~ (rt0.c0)))) DESC, ((rt0.c4)OR(rt0.c2)) COLLATE NOCASE DESC);
SELECT ALL * FROM rt1 NATURAL JOIN rt0 WHERE (x'ca0a' COLLATE NOCASE) ORDER BY (- ((~ (rt0.c0)))) DESC, ((rt0.c4)OR(rt0.c2)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((x'ca0a' COLLATE NOCASE) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0 ORDER BY (- ((~ (rt0.c0)))) DESC, ((rt0.c4)OR(rt0.c2)) COLLATE NOCASE DESC);
SELECT ALL * FROM rt1 NATURAL JOIN rt0 WHERE (x'ca0a' COLLATE NOCASE) ORDER BY (- ((~ (rt0.c0)))) DESC, ((rt0.c4)OR(rt0.c2)) COLLATE NOCASE DESC;
SELECT ALL * FROM rt1, rt0 WHERE ((rt1.c1 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((rt1.c1 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE ((rt1.c1 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((rt1.c1 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE ((rt1.c1 IN ()) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((x''))!=((((((rt0.c2)OR(rt0.c3)))OR(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((x''))!=((((((rt0.c2)OR(rt0.c3)))OR(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((x''))!=((((((rt0.c2)OR(rt0.c3)))OR(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((x''))!=((((((rt0.c2)OR(rt0.c3)))OR(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((x''))!=((((((rt0.c2)OR(rt0.c3)))OR(rt0.c1))))));
SELECT COUNT(*) FROM rt0 WHERE ((~ (rt0.c0)));
SELECT SUM(count) FROM (SELECT (((~ (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((~ (rt0.c0)));
SELECT SUM(count) FROM (SELECT (((~ (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((~ (rt0.c0)));
SELECT * FROM rt0 WHERE ((((NULL))<=((((rt0.c1) ISNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL))<=((((rt0.c1) ISNULL))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((NULL))<=((((rt0.c1) ISNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL))<=((((rt0.c1) ISNULL))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((NULL))<=((((rt0.c1) ISNULL)))));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((json_array_length(rt1.c0, rt1.c1) IN ()));
SELECT SUM(count) FROM (SELECT (((json_array_length(rt1.c0, rt1.c1) IN ())) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((json_array_length(rt1.c0, rt1.c1) IN ()));
SELECT SUM(count) FROM (SELECT (((json_array_length(rt1.c0, rt1.c1) IN ())) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((json_array_length(rt1.c0, rt1.c1) IN ()));
SELECT * FROM rt0 WHERE (CAST(((((((((rt0.c1)OR('_A')))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((rt0.c1)OR('_A')))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(((((((((rt0.c1)OR('_A')))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((rt0.c1)OR('_A')))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(((((((((rt0.c1)OR('_A')))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)) AS INTEGER));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3 COLLATE RTRIM) ORDER BY ((rt0.c3 COLLATE RTRIM) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c3 COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c3 COLLATE RTRIM) NOTNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3 COLLATE RTRIM) ORDER BY ((rt0.c3 COLLATE RTRIM) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c3 COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c3 COLLATE RTRIM) NOTNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3 COLLATE RTRIM) ORDER BY ((rt0.c3 COLLATE RTRIM) NOTNULL) ASC  NULLS LAST;
SELECT * FROM rt0, rt1 WHERE (((((((((CASE rt0.c1  WHEN rt0.c4 THEN rt0.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c0 END)OR(((rt1.c2)-(rt1.c1)))))OR(rt0.c3)))OR((((rt1.c2))>((rt1.c2))))))AND((rt1.c0 IN (rt0.c1))))) ORDER BY '-1435315288';
SELECT SUM(count) FROM (SELECT ((((((((((CASE rt0.c1  WHEN rt0.c4 THEN rt0.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c0 END)OR(((rt1.c2)-(rt1.c1)))))OR(rt0.c3)))OR((((rt1.c2))>((rt1.c2))))))AND((rt1.c0 IN (rt0.c1))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY '-1435315288');
SELECT * FROM rt0, rt1 WHERE (((((((((CASE rt0.c1  WHEN rt0.c4 THEN rt0.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c0 END)OR(((rt1.c2)-(rt1.c1)))))OR(rt0.c3)))OR((((rt1.c2))>((rt1.c2))))))AND((rt1.c0 IN (rt0.c1))))) ORDER BY '-1435315288';
SELECT SUM(count) FROM (SELECT ((((((((((CASE rt0.c1  WHEN rt0.c4 THEN rt0.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c0 END)OR(((rt1.c2)-(rt1.c1)))))OR(rt0.c3)))OR((((rt1.c2))>((rt1.c2))))))AND((rt1.c0 IN (rt0.c1))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY '-1435315288');
SELECT * FROM rt0, rt1 WHERE (((((((((CASE rt0.c1  WHEN rt0.c4 THEN rt0.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c0 END)OR(((rt1.c2)-(rt1.c1)))))OR(rt0.c3)))OR((((rt1.c2))>((rt1.c2))))))AND((rt1.c0 IN (rt0.c1))))) ORDER BY '-1435315288';
SELECT * FROM rt1, rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) IS TRUE)) ORDER BY (((CAST(rt0.c3 AS REAL), HEX(DISTINCT rt0.c4), ((((rt0.c0)OR(rt0.c1)))AND(rt0.c1))))>=(((NOT (rt0.c4)), (((rt1.c0))<=((rt0.c0))), (((rt0.c3))!=((rt0.c3)))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((CAST(rt0.c3 AS REAL), HEX(DISTINCT rt0.c4), ((((rt0.c0)OR(rt0.c1)))AND(rt0.c1))))>=(((NOT (rt0.c4)), (((rt1.c0))<=((rt0.c0))), (((rt0.c3))<>((rt0.c3)))))) ASC);
SELECT * FROM rt1, rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) IS TRUE)) ORDER BY (((CAST(rt0.c3 AS REAL), HEX(DISTINCT rt0.c4), ((((rt0.c0)OR(rt0.c1)))AND(rt0.c1))))>=(((NOT (rt0.c4)), (((rt1.c0))<=((rt0.c0))), (((rt0.c3))!=((rt0.c3)))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((CAST(rt0.c3 AS REAL), HEX(DISTINCT rt0.c4), ((((rt0.c0)OR(rt0.c1)))AND(rt0.c1))))>=(((NOT (rt0.c4)), (((rt1.c0))<=((rt0.c0))), (((rt0.c3))<>((rt0.c3)))))) ASC);
SELECT * FROM rt1, rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) IS TRUE)) ORDER BY (((CAST(rt0.c3 AS REAL), HEX(DISTINCT rt0.c4), ((((rt0.c0)OR(rt0.c1)))AND(rt0.c1))))>=(((NOT (rt0.c4)), (((rt1.c0))<=((rt0.c0))), (((rt0.c3))!=((rt0.c3)))))) ASC;
SELECT COUNT(*) FROM rt1 WHERE (LIKELIHOOD(DISTINCT ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)), 0.025459567739661293)) ORDER BY ((CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END)>=(((((rt1.c0)AND(rt1.c0)))AND(rt1.c0)))), x''  NULLS FIRST, (- (ABS(rt1.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)), 0.025459567739661293)) IS TRUE)  as count FROM rt1 ORDER BY ((CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END)>=(((((rt1.c0)AND(rt1.c0)))AND(rt1.c0)))), x''  NULLS FIRST, (- (ABS(rt1.c0))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (LIKELIHOOD(DISTINCT ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)), 0.025459567739661293)) ORDER BY ((CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END)>=(((((rt1.c0)AND(rt1.c0)))AND(rt1.c0)))), x''  NULLS FIRST, (- (ABS(rt1.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)), 0.025459567739661293)) IS TRUE)  as count FROM rt1 ORDER BY ((CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END)>=(((((rt1.c0)AND(rt1.c0)))AND(rt1.c0)))), x''  NULLS FIRST, (- (ABS(rt1.c0))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (LIKELIHOOD(DISTINCT ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)), 0.025459567739661293)) ORDER BY ((CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END)>=(((((rt1.c0)AND(rt1.c0)))AND(rt1.c0)))), x''  NULLS FIRST, (- (ABS(rt1.c0))) DESC  NULLS LAST;
SELECT * FROM rt1, rt0 WHERE (CAST('m' AS NUMERIC) COLLATE NOCASE) ORDER BY (((((((rt1.c2))>=((rt1.c0))))OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE '!OD' END)))OR((rt1.c2 IN ()))) DESC, json_extract(NULL, ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1)), ((rt1.c0)%(rt1.c1)), ((rt1.c0)IS(rt0.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('m' AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((((((rt1.c2))>=((rt1.c0))))OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE '!OD' END)))OR((rt1.c2 IN ()))) DESC, json_extract(NULL, ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1)), ((rt1.c0)%(rt1.c1)), ((rt1.c0)IS(rt0.c2))) ASC  NULLS FIRST);
SELECT * FROM rt1, rt0 WHERE (CAST('m' AS NUMERIC) COLLATE NOCASE) ORDER BY (((((((rt1.c2))>=((rt1.c0))))OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE '!OD' END)))OR((rt1.c2 IN ()))) DESC, json_extract(NULL, ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1)), ((rt1.c0)%(rt1.c1)), ((rt1.c0)IS(rt0.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('m' AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((((((rt1.c2))>=((rt1.c0))))OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE '!OD' END)))OR((rt1.c2 IN ()))) DESC, json_extract(NULL, ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1)), ((rt1.c0)%(rt1.c1)), ((rt1.c0)IS(rt0.c2))) ASC  NULLS FIRST);
SELECT * FROM rt1, rt0 WHERE (CAST('m' AS NUMERIC) COLLATE NOCASE) ORDER BY (((((((rt1.c2))>=((rt1.c0))))OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE '!OD' END)))OR((rt1.c2 IN ()))) DESC, json_extract(NULL, ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1)), ((rt1.c0)%(rt1.c1)), ((rt1.c0)IS(rt0.c2))) ASC  NULLS FIRST;
SELECT * FROM rt1 WHERE (CAST(CASE WHEN -706568310 THEN rt1.c1 WHEN rt1.c0 THEN 0.5014530714057902 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN -706568310 THEN rt1.c1 WHEN rt1.c0 THEN 0.5014530714057902 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END AS NUMERIC)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST(CASE WHEN -706568310 THEN rt1.c1 WHEN rt1.c0 THEN 0.5014530714057902 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN -706568310 THEN rt1.c1 WHEN rt1.c0 THEN 0.5014530714057902 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END AS NUMERIC)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST(CASE WHEN -706568310 THEN rt1.c1 WHEN rt1.c0 THEN 0.5014530714057902 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END AS NUMERIC));
SELECT ALL * FROM rt1 WHERE ((+ (rt1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((+ (rt1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((+ (rt1.c2 COLLATE RTRIM)));
SELECT * FROM rt1, rt0 WHERE (CASE CAST(rt0.c0 AS INTEGER)  WHEN LIKELY(DISTINCT rt1.c0) THEN ((rt0.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c0 AS INTEGER)  WHEN LIKELY(DISTINCT rt1.c0) THEN ((rt0.c0) NOTNULL) END) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (CASE CAST(rt0.c0 AS INTEGER)  WHEN LIKELY(DISTINCT rt1.c0) THEN ((rt0.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c0 AS INTEGER)  WHEN LIKELY(DISTINCT rt1.c0) THEN ((rt0.c0) NOTNULL) END) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (CASE CAST(rt0.c0 AS INTEGER)  WHEN LIKELY(DISTINCT rt1.c0) THEN ((rt0.c0) NOTNULL) END);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON CAST(((rt0.c4)<(rt0.c4)) AS TEXT) WHERE ((((((rt1.c1)AND(rt0.c2)))OR(rt0.c3)) IN ())) ORDER BY ((((rt0.c0)>>(rt0.c0))) NOT BETWEEN (CASE rt1.c2  WHEN rt0.c0 THEN rt1.c2 ELSE rt0.c1 END) AND (rt1.c0)) DESC  NULLS FIRST, CAST(rt0.c4 AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c1)AND(rt0.c2)))OR(rt0.c3)) IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON CAST(((rt0.c4)<(rt0.c4)) AS TEXT) ORDER BY ((((rt0.c0)>>(rt0.c0))) NOT BETWEEN (CASE rt1.c2  WHEN rt0.c0 THEN rt1.c2 ELSE rt0.c1 END) AND (rt1.c0)) DESC  NULLS FIRST, CAST(rt0.c4 AS INTEGER) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON CAST(((rt0.c4)<(rt0.c4)) AS TEXT) WHERE ((((((rt1.c1)AND(rt0.c2)))OR(rt0.c3)) IN ())) ORDER BY ((((rt0.c0)>>(rt0.c0))) NOT BETWEEN (CASE rt1.c2  WHEN rt0.c0 THEN rt1.c2 ELSE rt0.c1 END) AND (rt1.c0)) DESC  NULLS FIRST, CAST(rt0.c4 AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c1)AND(rt0.c2)))OR(rt0.c3)) IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON CAST(((rt0.c4)<(rt0.c4)) AS TEXT) ORDER BY ((((rt0.c0)>>(rt0.c0))) NOT BETWEEN (CASE rt1.c2  WHEN rt0.c0 THEN rt1.c2 ELSE rt0.c1 END) AND (rt1.c0)) DESC  NULLS FIRST, CAST(rt0.c4 AS INTEGER) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON CAST(((rt0.c4)<(rt0.c4)) AS TEXT) WHERE ((((((rt1.c1)AND(rt0.c2)))OR(rt0.c3)) IN ())) ORDER BY ((((rt0.c0)>>(rt0.c0))) NOT BETWEEN (CASE rt1.c2  WHEN rt0.c0 THEN rt1.c2 ELSE rt0.c1 END) AND (rt1.c0)) DESC  NULLS FIRST, CAST(rt0.c4 AS INTEGER) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c4 COLLATE NOCASE IN ())) ORDER BY (IFNULL(DISTINCT rt0.c3, rt0.c1) IN (((rt0.c2)>(rt0.c0)))) DESC, (~ (rt0.c4)) COLLATE BINARY ASC  NULLS LAST, json_extract(((rt0.c3) ISNULL), ((rt0.c0)AND(rt0.c4)), ((((rt0.c1)OR('')))AND(rt0.c2)), rt0.c1, ((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)), TRIM(rt0.c0, rt0.c3))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt0.c4 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt0 ORDER BY (IFNULL(DISTINCT rt0.c3, rt0.c1) IN (((rt0.c2)>(rt0.c0)))) DESC, (~ (rt0.c4)) COLLATE BINARY ASC  NULLS LAST, json_extract(((rt0.c3) ISNULL), ((rt0.c0)AND(rt0.c4)), ((((rt0.c1)OR('')))AND(rt0.c2)), rt0.c1, ((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)), TRIM(rt0.c0, rt0.c3))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c4 COLLATE NOCASE IN ())) ORDER BY (IFNULL(DISTINCT rt0.c3, rt0.c1) IN (((rt0.c2)>(rt0.c0)))) DESC, (~ (rt0.c4)) COLLATE BINARY ASC  NULLS LAST, json_extract(((rt0.c3) ISNULL), ((rt0.c0)AND(rt0.c4)), ((((rt0.c1)OR('')))AND(rt0.c2)), rt0.c1, ((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)), TRIM(rt0.c0, rt0.c3))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt0.c4 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt0 ORDER BY (IFNULL(DISTINCT rt0.c3, rt0.c1) IN (((rt0.c2)>(rt0.c0)))) DESC, (~ (rt0.c4)) COLLATE BINARY ASC  NULLS LAST, json_extract(((rt0.c3) ISNULL), ((rt0.c0)AND(rt0.c4)), ((((rt0.c1)OR('')))AND(rt0.c2)), rt0.c1, ((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)), TRIM(rt0.c0, rt0.c3))  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (COALESCE((x'' IN (rt1.c0, rt1.c2)), (rt0.c2 IN ()), 0Xffffffffeb05c3ed COLLATE RTRIM, UPPER(DISTINCT rt0.c2))) ORDER BY (((rt0.c3, rt0.c2, rt1.c0))<>((rt0.c4, rt0.c2, rt0.c4))) COLLATE BINARY  NULLS LAST, '0.1225148891383997' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE((x'' IN (rt1.c0, rt1.c2)), (rt0.c2 IN ()), 0Xffffffffeb05c3ed COLLATE RTRIM, UPPER(DISTINCT rt0.c2))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt0.c3, rt0.c2, rt1.c0))!=((rt0.c4, rt0.c2, rt0.c4))) COLLATE BINARY  NULLS LAST, '0.1225148891383997' DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (COALESCE((x'' IN (rt1.c0, rt1.c2)), (rt0.c2 IN ()), 0Xffffffffeb05c3ed COLLATE RTRIM, UPPER(DISTINCT rt0.c2))) ORDER BY (((rt0.c3, rt0.c2, rt1.c0))<>((rt0.c4, rt0.c2, rt0.c4))) COLLATE BINARY  NULLS LAST, '0.1225148891383997' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE((x'' IN (rt1.c0, rt1.c2)), (rt0.c2 IN ()), 0Xffffffffeb05c3ed COLLATE RTRIM, UPPER(DISTINCT rt0.c2))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt0.c3, rt0.c2, rt1.c0))!=((rt0.c4, rt0.c2, rt0.c4))) COLLATE BINARY  NULLS LAST, '0.1225148891383997' DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (COALESCE((x'' IN (rt1.c0, rt1.c2)), (rt0.c2 IN ()), 0Xffffffffeb05c3ed COLLATE RTRIM, UPPER(DISTINCT rt0.c2))) ORDER BY (((rt0.c3, rt0.c2, rt1.c0))<>((rt0.c4, rt0.c2, rt0.c4))) COLLATE BINARY  NULLS LAST, '0.1225148891383997' DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON ((((x'')<(rt0.c3))) NOT BETWEEN (rt0.c4) AND (rt0.c0)) WHERE (((rt0.c1) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) ISNULL)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((((x'')<(rt0.c3))) NOT BETWEEN (rt0.c4) AND (rt0.c0)));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON ((((x'')<(rt0.c3))) NOT BETWEEN (rt0.c4) AND (rt0.c0)) WHERE (((rt0.c1) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) ISNULL)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((((x'')<(rt0.c3))) NOT BETWEEN (rt0.c4) AND (rt0.c0)));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON ((((x'')<(rt0.c3))) NOT BETWEEN (rt0.c4) AND (rt0.c0)) WHERE (((rt0.c1) ISNULL));
SELECT * FROM rt0, rt1 WHERE (((((rt0.c1))<=((rt0.c3))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1))<=((rt0.c3))) IN ())) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (((((rt0.c1))<=((rt0.c3))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1))<=((rt0.c3))) IN ())) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (((((rt0.c1))<=((rt0.c3))) IN ()));
SELECT * FROM rt0 WHERE (((((CAST(rt0.c0 AS INTEGER))AND(NULL)))OR(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY (('~rD{j5 #''') IS TRUE) ASC  NULLS LAST, (((rt0.c2 IN (rt0.c0))) BETWEEN (((((((((rt0.c3)AND(rt0.c4)))AND(x'')))OR('ai')))AND(rt0.c3))) AND (((((((((((((rt0.c2)AND(rt0.c4)))OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c0)))OR(rt0.c4)))AND(rt0.c4))))  NULLS LAST, ((rt0.c3)AND((('-1811988337') NOT BETWEEN (rt0.c0) AND (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c0 AS INTEGER))AND(NULL)))OR(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (('~rD{j5 #''') IS TRUE) ASC  NULLS LAST, (((rt0.c2 IN (rt0.c0))) BETWEEN (((((((((rt0.c3)AND(rt0.c4)))AND(x'')))OR('ai')))AND(rt0.c3))) AND (((((((((((((rt0.c2)AND(rt0.c4)))OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c0)))OR(rt0.c4)))AND(rt0.c4))))  NULLS LAST, ((rt0.c3)AND((('-1811988337') NOT BETWEEN (rt0.c0) AND (rt0.c2)))) DESC);
SELECT * FROM rt0 WHERE (((((CAST(rt0.c0 AS INTEGER))AND(NULL)))OR(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY (('~rD{j5 #''') IS TRUE) ASC  NULLS LAST, (((rt0.c2 IN (rt0.c0))) BETWEEN (((((((((rt0.c3)AND(rt0.c4)))AND(x'')))OR('ai')))AND(rt0.c3))) AND (((((((((((((rt0.c2)AND(rt0.c4)))OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c0)))OR(rt0.c4)))AND(rt0.c4))))  NULLS LAST, ((rt0.c3)AND((('-1811988337') NOT BETWEEN (rt0.c0) AND (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c0 AS INTEGER))AND(NULL)))OR(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (('~rD{j5 #''') IS TRUE) ASC  NULLS LAST, (((rt0.c2 IN (rt0.c0))) BETWEEN (((((((((rt0.c3)AND(rt0.c4)))AND(x'')))OR('ai')))AND(rt0.c3))) AND (((((((((((((rt0.c2)AND(rt0.c4)))OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c0)))OR(rt0.c4)))AND(rt0.c4))))  NULLS LAST, ((rt0.c3)AND((('-1811988337') NOT BETWEEN (rt0.c0) AND (rt0.c2)))) DESC);
SELECT * FROM rt0 WHERE (((((CAST(rt0.c0 AS INTEGER))AND(NULL)))OR(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY (('~rD{j5 #''') IS TRUE) ASC  NULLS LAST, (((rt0.c2 IN (rt0.c0))) BETWEEN (((((((((rt0.c3)AND(rt0.c4)))AND(x'')))OR('ai')))AND(rt0.c3))) AND (((((((((((((rt0.c2)AND(rt0.c4)))OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c0)))OR(rt0.c4)))AND(rt0.c4))))  NULLS LAST, ((rt0.c3)AND((('-1811988337') NOT BETWEEN (rt0.c0) AND (rt0.c2)))) DESC;
SELECT * FROM rt1 WHERE ((+ (((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1))))) ORDER BY (NOT ((((rt1.c1))==((rt1.c1)))))  NULLS LAST, ((((rt1.c1) NOT BETWEEN (rt1.c2) AND (NULL)))||(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)))) ASC, (((rt1.c0 IN ()))LIKE(((rt1.c0) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY (NOT ((((rt1.c1))=((rt1.c1)))))  NULLS LAST, ((((rt1.c1) NOT BETWEEN (rt1.c2) AND (NULL)))||(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)))) ASC, (((rt1.c0 IN ()))LIKE(((rt1.c0) IS FALSE)))  NULLS LAST);
SELECT * FROM rt1 WHERE ((+ (((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1))))) ORDER BY (NOT ((((rt1.c1))==((rt1.c1)))))  NULLS LAST, ((((rt1.c1) NOT BETWEEN (rt1.c2) AND (NULL)))||(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)))) ASC, (((rt1.c0 IN ()))LIKE(((rt1.c0) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY (NOT ((((rt1.c1))=((rt1.c1)))))  NULLS LAST, ((((rt1.c1) NOT BETWEEN (rt1.c2) AND (NULL)))||(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)))) ASC, (((rt1.c0 IN ()))LIKE(((rt1.c0) IS FALSE)))  NULLS LAST);
SELECT * FROM rt1 WHERE ((+ (((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1))))) ORDER BY (NOT ((((rt1.c1))==((rt1.c1)))))  NULLS LAST, ((((rt1.c1) NOT BETWEEN (rt1.c2) AND (NULL)))||(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)))) ASC, (((rt1.c0 IN ()))LIKE(((rt1.c0) IS FALSE)))  NULLS LAST;
SELECT ALL * FROM rt1, rt0 WHERE (((x'') NOTNULL));
SELECT SUM(count) FROM (SELECT ((((x'') NOTNULL)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (((x'') NOTNULL));
SELECT SUM(count) FROM (SELECT ((((x'') NOTNULL)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (((x'') NOTNULL));
SELECT * FROM rt0, rt1 WHERE (((('1945195972') BETWEEN (rt1.c2) AND (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((('1945195972') BETWEEN (rt1.c2) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 NOT INDEXED, rt1);
SELECT * FROM rt0, rt1 WHERE (((('1945195972') BETWEEN (rt1.c2) AND (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((('1945195972') BETWEEN (rt1.c2) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 NOT INDEXED, rt1);
SELECT * FROM rt0, rt1 WHERE (((('1945195972') BETWEEN (rt1.c2) AND (rt0.c0)) IN ()));
SELECT * FROM rt1 WHERE ('0.008094478186301823') ORDER BY (((((((((NOT (rt1.c0)))OR((rt1.c0 IN ()))))AND((((rt1.c1))>((rt1.c2))))))AND(((rt1.c2)LIKE(rt1.c0)))))OR(rt1.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('0.008094478186301823') IS TRUE)  as count FROM rt1 ORDER BY (((((((((NOT (rt1.c0)))OR((rt1.c0 IN ()))))AND((((rt1.c1))>((rt1.c2))))))AND(((rt1.c2)LIKE(rt1.c0)))))OR(rt1.c0)) ASC  NULLS FIRST);
SELECT * FROM rt1 WHERE ('0.008094478186301823') ORDER BY (((((((((NOT (rt1.c0)))OR((rt1.c0 IN ()))))AND((((rt1.c1))>((rt1.c2))))))AND(((rt1.c2)LIKE(rt1.c0)))))OR(rt1.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('0.008094478186301823') IS TRUE)  as count FROM rt1 ORDER BY (((((((((NOT (rt1.c0)))OR((rt1.c0 IN ()))))AND((((rt1.c1))>((rt1.c2))))))AND(((rt1.c2)LIKE(rt1.c0)))))OR(rt1.c0)) ASC  NULLS FIRST);
SELECT * FROM rt1 WHERE ('0.008094478186301823') ORDER BY (((((((((NOT (rt1.c0)))OR((rt1.c0 IN ()))))AND((((rt1.c1))>((rt1.c2))))))AND(((rt1.c2)LIKE(rt1.c0)))))OR(rt1.c0)) ASC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE ((+ (((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0))))) ORDER BY CAST(((rt1.c2) IS TRUE) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY CAST(((rt1.c2) IS TRUE) AS REAL));
SELECT ALL * FROM rt1 WHERE ((+ (((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0))))) ORDER BY CAST(((rt1.c2) IS TRUE) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY CAST(((rt1.c2) IS TRUE) AS REAL));
SELECT ALL * FROM rt1 WHERE ((+ (((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0))))) ORDER BY CAST(((rt1.c2) IS TRUE) AS REAL);
SELECT * FROM rt1, rt0 WHERE ((((CAST(rt1.c0 AS INTEGER), rt1.c0, (NOT (-351943699))))=(((((rt1.c1))!=((rt0.c3))), ((x'') NOT NULL), '-77117511')))) ORDER BY ((rt0.c2 COLLATE BINARY) NOT NULL), ((CASE WHEN rt1.c1 THEN rt0.c4 END)<<(CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt0.c4 THEN rt0.c1 WHEN rt1.c1 THEN rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt1.c0 AS INTEGER), rt1.c0, (NOT (-351943699))))==(((((rt1.c1))!=((rt0.c3))), ((x'') NOT NULL), '-77117511')))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((rt0.c2 COLLATE BINARY) NOT NULL), ((CASE WHEN rt1.c1 THEN rt0.c4 END)<<(CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt0.c4 THEN rt0.c1 WHEN rt1.c1 THEN rt0.c1 END)));
SELECT * FROM rt1, rt0 WHERE ((((CAST(rt1.c0 AS INTEGER), rt1.c0, (NOT (-351943699))))=(((((rt1.c1))!=((rt0.c3))), ((x'') NOT NULL), '-77117511')))) ORDER BY ((rt0.c2 COLLATE BINARY) NOT NULL), ((CASE WHEN rt1.c1 THEN rt0.c4 END)<<(CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt0.c4 THEN rt0.c1 WHEN rt1.c1 THEN rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt1.c0 AS INTEGER), rt1.c0, (NOT (-351943699))))==(((((rt1.c1))!=((rt0.c3))), ((x'') NOT NULL), '-77117511')))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((rt0.c2 COLLATE BINARY) NOT NULL), ((CASE WHEN rt1.c1 THEN rt0.c4 END)<<(CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt0.c4 THEN rt0.c1 WHEN rt1.c1 THEN rt0.c1 END)));
SELECT * FROM rt1, rt0 WHERE ((((CAST(rt1.c0 AS INTEGER), rt1.c0, (NOT (-351943699))))=(((((rt1.c1))!=((rt0.c3))), ((x'') NOT NULL), '-77117511')))) ORDER BY ((rt0.c2 COLLATE BINARY) NOT NULL), ((CASE WHEN rt1.c1 THEN rt0.c4 END)<<(CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt0.c4 THEN rt0.c1 WHEN rt1.c1 THEN rt0.c1 END));
SELECT ALL * FROM rt1, rt0 WHERE ((((((rt1.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0)))) NOT BETWEEN (((((rt0.c1)AND(rt0.c2)))OR(rt1.c2))) AND (((rt0.c1)!=(rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0)))) NOT BETWEEN (((((rt0.c1)AND(rt0.c2)))OR(rt1.c2))) AND (((rt0.c1)<>(rt1.c0))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE ((((((rt1.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0)))) NOT BETWEEN (((((rt0.c1)AND(rt0.c2)))OR(rt1.c2))) AND (((rt0.c1)!=(rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0)))) NOT BETWEEN (((((rt0.c1)AND(rt0.c2)))OR(rt1.c2))) AND (((rt0.c1)<>(rt1.c0))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE ((((((rt1.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0)))) NOT BETWEEN (((((rt0.c1)AND(rt0.c2)))OR(rt1.c2))) AND (((rt0.c1)!=(rt1.c0)))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((COALESCE(rt0.c2, rt1.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((COALESCE(rt0.c2, rt1.c0)) IS FALSE)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((COALESCE(rt0.c2, rt1.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((COALESCE(rt0.c2, rt1.c0)) IS FALSE)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((COALESCE(rt0.c2, rt1.c0)) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON NULL WHERE (CAST(CAST(rt1.c2 AS TEXT) AS BLOB)) ORDER BY CAST((rt1.c0 IN ()) AS REAL), '㝩K';
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt1.c2 AS TEXT) AS BLOB)) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON NULL ORDER BY CAST((rt1.c0 IN ()) AS REAL), '㝩K');
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON NULL WHERE (CAST(CAST(rt1.c2 AS TEXT) AS BLOB)) ORDER BY CAST((rt1.c0 IN ()) AS REAL), '㝩K';
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt1.c2 AS TEXT) AS BLOB)) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON NULL ORDER BY CAST((rt1.c0 IN ()) AS REAL), '㝩K');
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON NULL WHERE (CAST(CAST(rt1.c2 AS TEXT) AS BLOB)) ORDER BY CAST((rt1.c0 IN ()) AS REAL), '㝩K';
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt1.c0)) IN ())) ORDER BY ((2136942156)>(((rt1.c0)-(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt1.c0)) IN ())) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((2136942156)>(((rt1.c0)-(rt1.c2)))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt1.c0)) IN ())) ORDER BY ((2136942156)>(((rt1.c0)-(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt1.c0)) IN ())) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((2136942156)>(((rt1.c0)-(rt1.c2)))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt1.c0)) IN ())) ORDER BY ((2136942156)>(((rt1.c0)-(rt1.c2))));
SELECT * FROM rt1, rt0 WHERE (((rt1.c2 COLLATE BINARY)<=(LIKELY(rt0.c0)))) ORDER BY (((rt1.c1, rt0.c2, NULL)) NOT BETWEEN ((CASE rt0.c4  WHEN x'' THEN rt0.c4 WHEN rt0.c4 THEN rt1.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END, x'', ((rt0.c0) IS FALSE))) AND (((+ (rt0.c1)), NULL, ((rt1.c0)>=(rt0.c3))))) ASC, ((((rt1.c0)>=(rt0.c0)))&(((((rt0.c1)AND(rt0.c4)))OR(rt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c2 COLLATE BINARY)<=(LIKELY(rt0.c0)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt1.c1, rt0.c2, NULL)) NOT BETWEEN ((CASE rt0.c4  WHEN x'' THEN rt0.c4 WHEN rt0.c4 THEN rt1.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END, x'', ((rt0.c0) IS FALSE))) AND (((+ (rt0.c1)), NULL, ((rt1.c0)>=(rt0.c3))))) ASC, ((((rt1.c0)>=(rt0.c0)))&(((((rt0.c1)AND(rt0.c4)))OR(rt1.c0)))) DESC  NULLS LAST);
SELECT * FROM rt1, rt0 WHERE (((rt1.c2 COLLATE BINARY)<=(LIKELY(rt0.c0)))) ORDER BY (((rt1.c1, rt0.c2, NULL)) NOT BETWEEN ((CASE rt0.c4  WHEN x'' THEN rt0.c4 WHEN rt0.c4 THEN rt1.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END, x'', ((rt0.c0) IS FALSE))) AND (((+ (rt0.c1)), NULL, ((rt1.c0)>=(rt0.c3))))) ASC, ((((rt1.c0)>=(rt0.c0)))&(((((rt0.c1)AND(rt0.c4)))OR(rt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c2 COLLATE BINARY)<=(LIKELY(rt0.c0)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt1.c1, rt0.c2, NULL)) NOT BETWEEN ((CASE rt0.c4  WHEN x'' THEN rt0.c4 WHEN rt0.c4 THEN rt1.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END, x'', ((rt0.c0) IS FALSE))) AND (((+ (rt0.c1)), NULL, ((rt1.c0)>=(rt0.c3))))) ASC, ((((rt1.c0)>=(rt0.c0)))&(((((rt0.c1)AND(rt0.c4)))OR(rt1.c0)))) DESC  NULLS LAST);
SELECT * FROM rt1, rt0 WHERE (((rt1.c2 COLLATE BINARY)<=(LIKELY(rt0.c0)))) ORDER BY (((rt1.c1, rt0.c2, NULL)) NOT BETWEEN ((CASE rt0.c4  WHEN x'' THEN rt0.c4 WHEN rt0.c4 THEN rt1.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END, x'', ((rt0.c0) IS FALSE))) AND (((+ (rt0.c1)), NULL, ((rt1.c0)>=(rt0.c3))))) ASC, ((((rt1.c0)>=(rt0.c0)))&(((((rt0.c1)AND(rt0.c4)))OR(rt1.c0)))) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (((rt0.c4)%(rt0.c4)) COLLATE RTRIM) ORDER BY CASE WHEN rt0.c0 COLLATE BINARY THEN (NULL IN ()) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c4)%(rt0.c4)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c0 COLLATE BINARY THEN (NULL IN ()) END DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((rt0.c4)%(rt0.c4)) COLLATE RTRIM) ORDER BY CASE WHEN rt0.c0 COLLATE BINARY THEN (NULL IN ()) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c4)%(rt0.c4)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c0 COLLATE BINARY THEN (NULL IN ()) END DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((rt0.c4)%(rt0.c4)) COLLATE RTRIM) ORDER BY CASE WHEN rt0.c0 COLLATE BINARY THEN (NULL IN ()) END DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM)IS(0.325563731132091)));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM)IS(0.325563731132091))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM)IS(0.325563731132091)));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM)IS(0.325563731132091))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM)IS(0.325563731132091)));
SELECT ALL * FROM rt1 WHERE ((((rt1.c1 IN ()))==(HEX(rt1.c1)))) ORDER BY json_array(IFNULL(DISTINCT rt1.c2, rt1.c2), (((rt1.c0))<=(('jXc')))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN ()))==(HEX(rt1.c1)))) IS TRUE)  as count FROM rt1 ORDER BY json_array(IFNULL(DISTINCT rt1.c2, rt1.c2), (((rt1.c0))<=(('jXc')))) ASC);
SELECT ALL * FROM rt1 WHERE ((((rt1.c1 IN ()))==(HEX(rt1.c1)))) ORDER BY json_array(IFNULL(DISTINCT rt1.c2, rt1.c2), (((rt1.c0))<=(('jXc')))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN ()))==(HEX(rt1.c1)))) IS TRUE)  as count FROM rt1 ORDER BY json_array(IFNULL(DISTINCT rt1.c2, rt1.c2), (((rt1.c0))<=(('jXc')))) ASC);
SELECT ALL * FROM rt1 WHERE ((((rt1.c1 IN ()))==(HEX(rt1.c1)))) ORDER BY json_array(IFNULL(DISTINCT rt1.c2, rt1.c2), (((rt1.c0))<=(('jXc')))) ASC;
SELECT ALL * FROM rt0, rt1 WHERE (PRINTF(((rt0.c1) ISNULL))) ORDER BY ((UNICODE(rt0.c0))>((((rt1.c0, rt0.c1, rt1.c1))<=((rt1.c2, rt0.c0, rt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((PRINTF(((rt0.c1) ISNULL))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((UNICODE(rt0.c0))>((((rt1.c0, rt0.c1, rt1.c1))<=((rt1.c2, rt0.c0, rt1.c0))))) ASC);
SELECT ALL * FROM rt0, rt1 WHERE (PRINTF(((rt0.c1) ISNULL))) ORDER BY ((UNICODE(rt0.c0))>((((rt1.c0, rt0.c1, rt1.c1))<=((rt1.c2, rt0.c0, rt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((PRINTF(((rt0.c1) ISNULL))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((UNICODE(rt0.c0))>((((rt1.c0, rt0.c1, rt1.c1))<=((rt1.c2, rt0.c0, rt1.c0))))) ASC);
SELECT ALL * FROM rt0, rt1 WHERE (PRINTF(((rt0.c1) ISNULL))) ORDER BY ((UNICODE(rt0.c0))>((((rt1.c0, rt0.c1, rt1.c1))<=((rt1.c2, rt0.c0, rt1.c0))))) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1) NOT BETWEEN (-2082901730) AND (rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOT BETWEEN (-2082901730) AND (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1) NOT BETWEEN (-2082901730) AND (rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOT BETWEEN (-2082901730) AND (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1) NOT BETWEEN (-2082901730) AND (rt0.c1)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt1 WHERE (x'') ORDER BY (- (CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1 ORDER BY (- (CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END)));
SELECT COUNT(*) FROM rt1 WHERE (x'') ORDER BY (- (CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1 ORDER BY (- (CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END)));
SELECT COUNT(*) FROM rt1 WHERE (x'') ORDER BY (- (CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END));
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c0 COLLATE NOCASE IN ()));
SELECT ALL * FROM rt1 NATURAL JOIN rt0 WHERE (NULL COLLATE NOCASE) ORDER BY ((rt1.c2 COLLATE RTRIM) BETWEEN (rt0.c2) AND ((- (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0 ORDER BY ((rt1.c2 COLLATE RTRIM) BETWEEN (rt0.c2) AND ((- (rt0.c0)))));
SELECT ALL * FROM rt1 NATURAL JOIN rt0 WHERE (NULL COLLATE NOCASE) ORDER BY ((rt1.c2 COLLATE RTRIM) BETWEEN (rt0.c2) AND ((- (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0 ORDER BY ((rt1.c2 COLLATE RTRIM) BETWEEN (rt0.c2) AND ((- (rt0.c0)))));
SELECT ALL * FROM rt1 NATURAL JOIN rt0 WHERE (NULL COLLATE NOCASE) ORDER BY ((rt1.c2 COLLATE RTRIM) BETWEEN (rt0.c2) AND ((- (rt0.c0))));
SELECT COUNT(*) FROM rt1, rt0 WHERE (CASE (rt0.c1 IN ())  WHEN CASE NULL  WHEN rt0.c2 THEN rt0.c4 END THEN (((rt0.c4, rt1.c0, rt1.c1))<((rt0.c3, 0.11589194159344007, rt0.c0))) END) ORDER BY CASE WHEN ((NULL) IS TRUE) THEN (rt0.c0 IN ()) END  NULLS FIRST, x'';
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c1 IN ())  WHEN CASE NULL  WHEN rt0.c2 THEN rt0.c4 END THEN (((rt0.c4, rt1.c0, rt1.c1))<((rt0.c3, 0.11589194159344007, rt0.c0))) END) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE WHEN ((NULL) IS TRUE) THEN (rt0.c0 IN ()) END  NULLS FIRST, x'');
SELECT COUNT(*) FROM rt1, rt0 WHERE (CASE (rt0.c1 IN ())  WHEN CASE NULL  WHEN rt0.c2 THEN rt0.c4 END THEN (((rt0.c4, rt1.c0, rt1.c1))<((rt0.c3, 0.11589194159344007, rt0.c0))) END) ORDER BY CASE WHEN ((NULL) IS TRUE) THEN (rt0.c0 IN ()) END  NULLS FIRST, x'';
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c1 IN ())  WHEN CASE NULL  WHEN rt0.c2 THEN rt0.c4 END THEN (((rt0.c4, rt1.c0, rt1.c1))<((rt0.c3, 0.11589194159344007, rt0.c0))) END) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE WHEN ((NULL) IS TRUE) THEN (rt0.c0 IN ()) END  NULLS FIRST, x'');
SELECT COUNT(*) FROM rt1, rt0 WHERE (CASE (rt0.c1 IN ())  WHEN CASE NULL  WHEN rt0.c2 THEN rt0.c4 END THEN (((rt0.c4, rt1.c0, rt1.c1))<((rt0.c3, 0.11589194159344007, rt0.c0))) END) ORDER BY CASE WHEN ((NULL) IS TRUE) THEN (rt0.c0 IN ()) END  NULLS FIRST, x'';
SELECT ALL * FROM rt0 NOT INDEXED WHERE ((((NULL))<>((((((rt0.c0)OR(rt0.c0)))AND(rt0.c3)))))) ORDER BY json_patch((- (rt0.c3)), ((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3))) DESC, (NULL COLLATE BINARY IN ());
SELECT SUM(count) FROM (SELECT (((((NULL))<>((((((rt0.c0)OR(rt0.c0)))AND(rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY json_patch((- (rt0.c3)), ((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3))) DESC, (NULL COLLATE BINARY IN ()));
SELECT ALL * FROM rt0 NOT INDEXED WHERE ((((NULL))<>((((((rt0.c0)OR(rt0.c0)))AND(rt0.c3)))))) ORDER BY json_patch((- (rt0.c3)), ((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3))) DESC, (NULL COLLATE BINARY IN ());
SELECT SUM(count) FROM (SELECT (((((NULL))<>((((((rt0.c0)OR(rt0.c0)))AND(rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY json_patch((- (rt0.c3)), ((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3))) DESC, (NULL COLLATE BINARY IN ()));
SELECT ALL * FROM rt0 NOT INDEXED WHERE ((((NULL))<>((((((rt0.c0)OR(rt0.c0)))AND(rt0.c3)))))) ORDER BY json_patch((- (rt0.c3)), ((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3))) DESC, (NULL COLLATE BINARY IN ());
SELECT ALL * FROM rt1 CROSS JOIN rt0 ON CASE WHEN ((rt1.c2) NOT NULL) THEN CAST(rt1.c0 AS TEXT) ELSE ((rt1.c0) NOT BETWEEN (NULL) AND (rt0.c4)) END WHERE (((((rt0.c0) IS TRUE)) NOT NULL)) ORDER BY CAST(CASE WHEN rt0.c0 THEN rt0.c0 END AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON CASE WHEN ((rt1.c2) NOT NULL) THEN CAST(rt1.c0 AS TEXT) ELSE ((rt1.c0) NOT BETWEEN (NULL) AND (rt0.c4)) END ORDER BY CAST(CASE WHEN rt0.c0 THEN rt0.c0 END AS REAL) ASC  NULLS LAST);
SELECT ALL * FROM rt1 CROSS JOIN rt0 ON CASE WHEN ((rt1.c2) NOT NULL) THEN CAST(rt1.c0 AS TEXT) ELSE ((rt1.c0) NOT BETWEEN (NULL) AND (rt0.c4)) END WHERE (((((rt0.c0) IS TRUE)) NOT NULL)) ORDER BY CAST(CASE WHEN rt0.c0 THEN rt0.c0 END AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON CASE WHEN ((rt1.c2) NOT NULL) THEN CAST(rt1.c0 AS TEXT) ELSE ((rt1.c0) NOT BETWEEN (NULL) AND (rt0.c4)) END ORDER BY CAST(CASE WHEN rt0.c0 THEN rt0.c0 END AS REAL) ASC  NULLS LAST);
SELECT ALL * FROM rt1 CROSS JOIN rt0 ON CASE WHEN ((rt1.c2) NOT NULL) THEN CAST(rt1.c0 AS TEXT) ELSE ((rt1.c0) NOT BETWEEN (NULL) AND (rt0.c4)) END WHERE (((((rt0.c0) IS TRUE)) NOT NULL)) ORDER BY CAST(CASE WHEN rt0.c0 THEN rt0.c0 END AS REAL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((((((((rt1.c0)OR(rt0.c4)))OR(rt0.c1)))OR(rt1.c0)))OR(rt0.c4)) IN ())) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c4))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((rt1.c0)OR(rt0.c4)))OR(rt0.c1)))OR(rt1.c0)))OR(rt0.c4)) IN ())) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c4))) NOTNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((((((((rt1.c0)OR(rt0.c4)))OR(rt0.c1)))OR(rt1.c0)))OR(rt0.c4)) IN ())) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c4))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((rt1.c0)OR(rt0.c4)))OR(rt0.c1)))OR(rt1.c0)))OR(rt0.c4)) IN ())) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c4))) NOTNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((((((((rt1.c0)OR(rt0.c4)))OR(rt0.c1)))OR(rt1.c0)))OR(rt0.c4)) IN ())) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c4))) NOTNULL)  NULLS LAST;
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt1.c2)*(rt0.c2))) IS TRUE)) ORDER BY (- (((rt0.c3) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)*(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt1, rt0 ORDER BY (- (((rt0.c3) NOT NULL)))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt1.c2)*(rt0.c2))) IS TRUE)) ORDER BY (- (((rt0.c3) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)*(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt1, rt0 ORDER BY (- (((rt0.c3) NOT NULL)))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt1.c2)*(rt0.c2))) IS TRUE)) ORDER BY (- (((rt0.c3) NOT NULL)))  NULLS FIRST;
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON (CAST(rt0.c4 AS BLOB) IN ()) WHERE (((json_array_length(rt0.c2))<=(((rt0.c4)==(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((json_array_length(rt0.c2))<=(((rt0.c4)=(rt0.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (CAST(rt0.c4 AS BLOB) IN ()));
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON (CAST(rt0.c4 AS BLOB) IN ()) WHERE (((json_array_length(rt0.c2))<=(((rt0.c4)==(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((json_array_length(rt0.c2))<=(((rt0.c4)=(rt0.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (CAST(rt0.c4 AS BLOB) IN ()));
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON (CAST(rt0.c4 AS BLOB) IN ()) WHERE (((json_array_length(rt0.c2))<=(((rt0.c4)==(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((CAST(rt1.c0 AS REAL)) NOT BETWEEN (((((rt1.c1)AND(rt1.c0)))OR(rt1.c1))) AND ((((rt1.c0))>((0.2522561695022896)))))) ORDER BY ((((((((((-1638365142) IS TRUE))AND(CAST(rt1.c0 AS REAL))))AND(rt1.c0 COLLATE BINARY)))OR('' COLLATE RTRIM)))AND((- ('0.9722065953233464')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c0 AS REAL)) NOT BETWEEN (((((rt1.c1)AND(rt1.c0)))OR(rt1.c1))) AND ((((rt1.c0))>((0.2522561695022896)))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((((((-1638365142) IS TRUE))AND(CAST(rt1.c0 AS REAL))))AND(rt1.c0 COLLATE BINARY)))OR('' COLLATE RTRIM)))AND((- ('0.9722065953233464')))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((CAST(rt1.c0 AS REAL)) NOT BETWEEN (((((rt1.c1)AND(rt1.c0)))OR(rt1.c1))) AND ((((rt1.c0))>((0.2522561695022896)))))) ORDER BY ((((((((((-1638365142) IS TRUE))AND(CAST(rt1.c0 AS REAL))))AND(rt1.c0 COLLATE BINARY)))OR('' COLLATE RTRIM)))AND((- ('0.9722065953233464')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c0 AS REAL)) NOT BETWEEN (((((rt1.c1)AND(rt1.c0)))OR(rt1.c1))) AND ((((rt1.c0))>((0.2522561695022896)))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((((((-1638365142) IS TRUE))AND(CAST(rt1.c0 AS REAL))))AND(rt1.c0 COLLATE BINARY)))OR('' COLLATE RTRIM)))AND((- ('0.9722065953233464')))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((CAST(rt1.c0 AS REAL)) NOT BETWEEN (((((rt1.c1)AND(rt1.c0)))OR(rt1.c1))) AND ((((rt1.c0))>((0.2522561695022896)))))) ORDER BY ((((((((((-1638365142) IS TRUE))AND(CAST(rt1.c0 AS REAL))))AND(rt1.c0 COLLATE BINARY)))OR('' COLLATE RTRIM)))AND((- ('0.9722065953233464')))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((((((((rt0.c3)AND(rt1.c1)))AND(rt0.c2)))AND(rt1.c1)))AND(rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c3)AND(rt1.c1)))AND(rt0.c2)))AND(rt1.c1)))AND(rt1.c1)) IN ())) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((((((((rt0.c3)AND(rt1.c1)))AND(rt0.c2)))AND(rt1.c1)))AND(rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c3)AND(rt1.c1)))AND(rt0.c2)))AND(rt1.c1)))AND(rt1.c1)) IN ())) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((((((((rt0.c3)AND(rt1.c1)))AND(rt0.c2)))AND(rt1.c1)))AND(rt1.c1)) IN ()));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CASE rt1.c0  WHEN rt1.c1 THEN rt0.c2 COLLATE BINARY WHEN rt0.c2 THEN ((rt0.c2) IS FALSE) WHEN NULL THEN NULL COLLATE RTRIM ELSE CAST(rt0.c3 AS NUMERIC) END) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE rt1.c0  WHEN rt1.c1 THEN rt0.c2 COLLATE BINARY WHEN rt0.c2 THEN ((rt0.c2) IS FALSE) WHEN NULL THEN NULL COLLATE RTRIM ELSE CAST(rt0.c3 AS NUMERIC) END) IS TRUE)  as count FROM rt1, rt0 ORDER BY NULL ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CASE rt1.c0  WHEN rt1.c1 THEN rt0.c2 COLLATE BINARY WHEN rt0.c2 THEN ((rt0.c2) IS FALSE) WHEN NULL THEN NULL COLLATE RTRIM ELSE CAST(rt0.c3 AS NUMERIC) END) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE rt1.c0  WHEN rt1.c1 THEN rt0.c2 COLLATE BINARY WHEN rt0.c2 THEN ((rt0.c2) IS FALSE) WHEN NULL THEN NULL COLLATE RTRIM ELSE CAST(rt0.c3 AS NUMERIC) END) IS TRUE)  as count FROM rt1, rt0 ORDER BY NULL ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CASE rt1.c0  WHEN rt1.c1 THEN rt0.c2 COLLATE BINARY WHEN rt0.c2 THEN ((rt0.c2) IS FALSE) WHEN NULL THEN NULL COLLATE RTRIM ELSE CAST(rt0.c3 AS NUMERIC) END) ORDER BY NULL ASC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (CAST(CAST(rt1.c2 AS NUMERIC) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c2 AS NUMERIC) AS BLOB)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(CAST(rt1.c2 AS NUMERIC) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c2 AS NUMERIC) AS BLOB)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(CAST(rt1.c2 AS NUMERIC) AS BLOB));
SELECT * FROM rt1 WHERE ((+ (rt1.c1)) COLLATE NOCASE COLLATE NOCASE) ORDER BY rt1.c1 DESC  NULLS LAST, (CAST(rt1.c0 AS TEXT) IN ((NOT (rt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (rt1.c1)) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1 DESC  NULLS LAST, (CAST(rt1.c0 AS TEXT) IN ((NOT (rt1.c0))))  NULLS FIRST);
SELECT * FROM rt1 WHERE ((+ (rt1.c1)) COLLATE NOCASE COLLATE NOCASE) ORDER BY rt1.c1 DESC  NULLS LAST, (CAST(rt1.c0 AS TEXT) IN ((NOT (rt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (rt1.c1)) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1 DESC  NULLS LAST, (CAST(rt1.c0 AS TEXT) IN ((NOT (rt1.c0))))  NULLS FIRST);
SELECT * FROM rt1 WHERE ((+ (rt1.c1)) COLLATE NOCASE COLLATE NOCASE) ORDER BY rt1.c1 DESC  NULLS LAST, (CAST(rt1.c0 AS TEXT) IN ((NOT (rt1.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, rt1 WHERE (((rt0.c4 COLLATE BINARY) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((rt0.c4 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((rt0.c4 COLLATE BINARY) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((rt0.c4 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((rt0.c4 COLLATE BINARY) IS TRUE));
SELECT * FROM rt1, rt0 WHERE (((((((((rt0.c2 COLLATE BINARY)OR(((rt1.c2) IS TRUE))))OR((rt1.c2 IN ()))))AND(CASE rt1.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN 'h㥹' WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c3 THEN rt1.c1 ELSE '[y9KS^' END)))AND((rt0.c4 IN ())))) ORDER BY CAST(((rt0.c2)LIKE(rt0.c1)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c2 COLLATE BINARY)OR(((rt1.c2) IS TRUE))))OR((rt1.c2 IN ()))))AND(CASE rt1.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN 'h㥹' WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c3 THEN rt1.c1 ELSE '[y9KS^' END)))AND((rt0.c4 IN ())))) IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST(((rt0.c2)LIKE(rt0.c1)) AS NUMERIC) ASC);
SELECT * FROM rt1, rt0 WHERE (((((((((rt0.c2 COLLATE BINARY)OR(((rt1.c2) IS TRUE))))OR((rt1.c2 IN ()))))AND(CASE rt1.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN 'h㥹' WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c3 THEN rt1.c1 ELSE '[y9KS^' END)))AND((rt0.c4 IN ())))) ORDER BY CAST(((rt0.c2)LIKE(rt0.c1)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c2 COLLATE BINARY)OR(((rt1.c2) IS TRUE))))OR((rt1.c2 IN ()))))AND(CASE rt1.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN 'h㥹' WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c3 THEN rt1.c1 ELSE '[y9KS^' END)))AND((rt0.c4 IN ())))) IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST(((rt0.c2)LIKE(rt0.c1)) AS NUMERIC) ASC);
SELECT * FROM rt1, rt0 WHERE (((((((((rt0.c2 COLLATE BINARY)OR(((rt1.c2) IS TRUE))))OR((rt1.c2 IN ()))))AND(CASE rt1.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN 'h㥹' WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c3 THEN rt1.c1 ELSE '[y9KS^' END)))AND((rt0.c4 IN ())))) ORDER BY CAST(((rt0.c2)LIKE(rt0.c1)) AS NUMERIC) ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c1)LIKE(rt1.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)LIKE(rt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c1)LIKE(rt1.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)LIKE(rt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c1)LIKE(rt1.c1)) COLLATE BINARY);
SELECT * FROM rt1 WHERE (((((rt1.c2) NOT NULL)) NOT BETWEEN (((rt1.c0) IS FALSE)) AND (CAST(rt1.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOT NULL)) NOT BETWEEN (((rt1.c0) IS FALSE)) AND (CAST(rt1.c2 AS BLOB)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c2) NOT NULL)) NOT BETWEEN (((rt1.c0) IS FALSE)) AND (CAST(rt1.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOT NULL)) NOT BETWEEN (((rt1.c0) IS FALSE)) AND (CAST(rt1.c2 AS BLOB)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c2) NOT NULL)) NOT BETWEEN (((rt1.c0) IS FALSE)) AND (CAST(rt1.c2 AS BLOB))));
SELECT ALL * FROM rt1 WHERE (((NULL) BETWEEN ('-1593569868') AND (((rt1.c2)%(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN ('-1593569868') AND (((rt1.c2)%(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((NULL) BETWEEN ('-1593569868') AND (((rt1.c2)%(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN ('-1593569868') AND (((rt1.c2)%(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((NULL) BETWEEN ('-1593569868') AND (((rt1.c2)%(rt1.c1)))));
SELECT ALL * FROM rt1, rt0 WHERE (((((NULLIF(DISTINCT rt1.c1, rt0.c2))AND(x'')))OR(((rt0.c0)-(rt1.c0))))) ORDER BY ((NULL) NOTNULL)  NULLS LAST, (((((rt1.c2)AND(rt0.c1)))OR(rt0.c1)) IN ((rt0.c0 IN ()))) DESC, CASE (rt0.c4 IN ())  WHEN CAST(x'' AS INTEGER) THEN ((((((((rt0.c4)OR(rt1.c1)))AND(rt0.c4)))OR(rt0.c2)))OR(rt0.c2)) ELSE (rt1.c0 IN ()) END ASC, (- ((rt0.c1 IN (0.128363492509052)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((NULLIF(DISTINCT rt1.c1, rt0.c2))AND(x'')))OR(((rt0.c0)-(rt1.c0))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((NULL) NOTNULL)  NULLS LAST, (((((rt1.c2)AND(rt0.c1)))OR(rt0.c1)) IN ((rt0.c0 IN ()))) DESC, CASE (rt0.c4 IN ())  WHEN CAST(x'' AS INTEGER) THEN ((((((((rt0.c4)OR(rt1.c1)))AND(rt0.c4)))OR(rt0.c2)))OR(rt0.c2)) ELSE (rt1.c0 IN ()) END ASC, (- ((rt0.c1 IN (0.128363492509052)))) DESC);
SELECT ALL * FROM rt1, rt0 WHERE (((((NULLIF(DISTINCT rt1.c1, rt0.c2))AND(x'')))OR(((rt0.c0)-(rt1.c0))))) ORDER BY ((NULL) NOTNULL)  NULLS LAST, (((((rt1.c2)AND(rt0.c1)))OR(rt0.c1)) IN ((rt0.c0 IN ()))) DESC, CASE (rt0.c4 IN ())  WHEN CAST(x'' AS INTEGER) THEN ((((((((rt0.c4)OR(rt1.c1)))AND(rt0.c4)))OR(rt0.c2)))OR(rt0.c2)) ELSE (rt1.c0 IN ()) END ASC, (- ((rt0.c1 IN (0.128363492509052)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((NULLIF(DISTINCT rt1.c1, rt0.c2))AND(x'')))OR(((rt0.c0)-(rt1.c0))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((NULL) NOTNULL)  NULLS LAST, (((((rt1.c2)AND(rt0.c1)))OR(rt0.c1)) IN ((rt0.c0 IN ()))) DESC, CASE (rt0.c4 IN ())  WHEN CAST(x'' AS INTEGER) THEN ((((((((rt0.c4)OR(rt1.c1)))AND(rt0.c4)))OR(rt0.c2)))OR(rt0.c2)) ELSE (rt1.c0 IN ()) END ASC, (- ((rt0.c1 IN (0.128363492509052)))) DESC);
SELECT ALL * FROM rt1, rt0 WHERE (((((NULLIF(DISTINCT rt1.c1, rt0.c2))AND(x'')))OR(((rt0.c0)-(rt1.c0))))) ORDER BY ((NULL) NOTNULL)  NULLS LAST, (((((rt1.c2)AND(rt0.c1)))OR(rt0.c1)) IN ((rt0.c0 IN ()))) DESC, CASE (rt0.c4 IN ())  WHEN CAST(x'' AS INTEGER) THEN ((((((((rt0.c4)OR(rt1.c1)))AND(rt0.c4)))OR(rt0.c2)))OR(rt0.c2)) ELSE (rt1.c0 IN ()) END ASC, (- ((rt0.c1 IN (0.128363492509052)))) DESC;
SELECT COUNT(*) FROM rt0, rt1 WHERE ((NOT (((rt0.c3)<=(NULL)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c3)<=(NULL))))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((NOT (((rt0.c3)<=(NULL)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c3)<=(NULL))))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((NOT (((rt0.c3)<=(NULL)))));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CAST(((rt0.c2) IS TRUE) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CAST(((rt0.c2) IS TRUE) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CAST(((rt0.c2) IS TRUE) AS INTEGER));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((rt0.c3)) BETWEEN (((+ (rt0.c0)))) AND ((((rt1.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) BETWEEN (((+ (rt0.c0)))) AND ((((rt1.c0) NOT NULL))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((rt0.c3)) BETWEEN (((+ (rt0.c0)))) AND ((((rt1.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) BETWEEN (((+ (rt0.c0)))) AND ((((rt1.c0) NOT NULL))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((rt0.c3)) BETWEEN (((+ (rt0.c0)))) AND ((((rt1.c0) NOT NULL)))));
SELECT COUNT(*) FROM rt0 WHERE ((((((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND(((rt0.c2)AND(rt0.c0)))))OR((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND(((rt0.c2)AND(rt0.c0)))))OR((+ (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND(((rt0.c2)AND(rt0.c0)))))OR((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND(((rt0.c2)AND(rt0.c0)))))OR((+ (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND(((rt0.c2)AND(rt0.c0)))))OR((+ (rt0.c0)))));
SELECT COUNT(*) FROM rt1, rt0 WHERE (((CASE rt0.c4  WHEN rt0.c2 THEN rt1.c1 END)<=(((rt0.c4)|(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c4  WHEN rt0.c2 THEN rt1.c1 END)<=(((rt0.c4)|(rt1.c2))))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((CASE rt0.c4  WHEN rt0.c2 THEN rt1.c1 END)<=(((rt0.c4)|(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c4  WHEN rt0.c2 THEN rt1.c1 END)<=(((rt0.c4)|(rt1.c2))))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((CASE rt0.c4  WHEN rt0.c2 THEN rt1.c1 END)<=(((rt0.c4)|(rt1.c2)))));
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c0) NOT NULL))%(((('JXC'))<=((rt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) NOT NULL))%(((('JXC'))<=((rt1.c1)))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c0) NOT NULL))%(((('JXC'))<=((rt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) NOT NULL))%(((('JXC'))<=((rt1.c1)))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c0) NOT NULL))%(((('JXC'))<=((rt1.c1))))));
SELECT * FROM rt1 WHERE ((- (rt1.c0))) ORDER BY ((0.7289602812621236) NOT BETWEEN (CAST(rt1.c1 AS REAL)) AND ('-1924298701'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (rt1.c0))) IS TRUE)  as count FROM rt1 ORDER BY ((0.7289602812621236) NOT BETWEEN (CAST(rt1.c1 AS REAL)) AND ('-1924298701'))  NULLS FIRST);
SELECT * FROM rt1 WHERE ((- (rt1.c0))) ORDER BY ((0.7289602812621236) NOT BETWEEN (CAST(rt1.c1 AS REAL)) AND ('-1924298701'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (rt1.c0))) IS TRUE)  as count FROM rt1 ORDER BY ((0.7289602812621236) NOT BETWEEN (CAST(rt1.c1 AS REAL)) AND ('-1924298701'))  NULLS FIRST);
SELECT * FROM rt1 WHERE ((- (rt1.c0))) ORDER BY ((0.7289602812621236) NOT BETWEEN (CAST(rt1.c1 AS REAL)) AND ('-1924298701'))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((~ (rt0.c1)))) AND ((((rt0.c3) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN (((~ (rt0.c1)))) AND ((((rt0.c3) NOT NULL))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((~ (rt0.c1)))) AND ((((rt0.c3) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN (((~ (rt0.c1)))) AND ((((rt0.c3) NOT NULL))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((~ (rt0.c1)))) AND ((((rt0.c3) NOT NULL)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST((rt1.c0 IN (rt1.c0, rt1.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt1.c0 IN (rt1.c0, rt1.c1)) AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST((rt1.c0 IN (rt1.c0, rt1.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt1.c0 IN (rt1.c0, rt1.c1)) AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST((rt1.c0 IN (rt1.c0, rt1.c1)) AS TEXT));
SELECT * FROM rt1, rt0 WHERE (LOWER(DISTINCT rt1.c1) COLLATE RTRIM) ORDER BY rt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT rt1.c1) COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0 ORDER BY rt0.c1 DESC  NULLS LAST);
SELECT * FROM rt1, rt0 WHERE (LOWER(DISTINCT rt1.c1) COLLATE RTRIM) ORDER BY rt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT rt1.c1) COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0 ORDER BY rt0.c1 DESC  NULLS LAST);
SELECT * FROM rt1, rt0 WHERE (LOWER(DISTINCT rt1.c1) COLLATE RTRIM) ORDER BY rt0.c1 DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY (((rt0.c0))>=((rt0.c1))) COLLATE BINARY, ((((rt0.c2)LIKE(rt0.c4))) BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4))) AND (((rt0.c2) BETWEEN (rt0.c0) AND (NULL)))) DESC, CAST(x'' AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0))>=((rt0.c1))) COLLATE BINARY, ((((rt0.c2)LIKE(rt0.c4))) BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4))) AND (((rt0.c2) BETWEEN (rt0.c0) AND (NULL)))) DESC, CAST(x'' AS BLOB) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY (((rt0.c0))>=((rt0.c1))) COLLATE BINARY, ((((rt0.c2)LIKE(rt0.c4))) BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4))) AND (((rt0.c2) BETWEEN (rt0.c0) AND (NULL)))) DESC, CAST(x'' AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0))>=((rt0.c1))) COLLATE BINARY, ((((rt0.c2)LIKE(rt0.c4))) BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4))) AND (((rt0.c2) BETWEEN (rt0.c0) AND (NULL)))) DESC, CAST(x'' AS BLOB) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY (((rt0.c0))>=((rt0.c1))) COLLATE BINARY, ((((rt0.c2)LIKE(rt0.c4))) BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4))) AND (((rt0.c2) BETWEEN (rt0.c0) AND (NULL)))) DESC, CAST(x'' AS BLOB) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)AND((('FALSE') NOT BETWEEN (rt0.c4) AND (rt0.c4)))))AND(((x'')<>(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)AND((('FALSE') NOT BETWEEN (rt0.c4) AND (rt0.c4)))))AND(((x'')!=(rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)AND((('FALSE') NOT BETWEEN (rt0.c4) AND (rt0.c4)))))AND(((x'')<>(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)AND((('FALSE') NOT BETWEEN (rt0.c4) AND (rt0.c4)))))AND(((x'')!=(rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)AND((('FALSE') NOT BETWEEN (rt0.c4) AND (rt0.c4)))))AND(((x'')<>(rt0.c4)))));
SELECT COUNT(*) FROM rt0 WHERE (CASE ((rt0.c1) IS FALSE)  WHEN (rt0.c2 IN ()) THEN UPPER(DISTINCT rt0.c4) END) ORDER BY CAST('-288831675' AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1) IS FALSE)  WHEN (rt0.c2 IN ()) THEN UPPER(DISTINCT rt0.c4) END) IS TRUE)  as count FROM rt0 ORDER BY CAST('-288831675' AS INTEGER));
SELECT COUNT(*) FROM rt0 WHERE (CASE ((rt0.c1) IS FALSE)  WHEN (rt0.c2 IN ()) THEN UPPER(DISTINCT rt0.c4) END) ORDER BY CAST('-288831675' AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1) IS FALSE)  WHEN (rt0.c2 IN ()) THEN UPPER(DISTINCT rt0.c4) END) IS TRUE)  as count FROM rt0 ORDER BY CAST('-288831675' AS INTEGER));
SELECT COUNT(*) FROM rt0 WHERE (CASE ((rt0.c1) IS FALSE)  WHEN (rt0.c2 IN ()) THEN UPPER(DISTINCT rt0.c4) END) ORDER BY CAST('-288831675' AS INTEGER);
SELECT ALL * FROM rt0 WHERE (json_array_length((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((json_array_length((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (json_array_length((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((json_array_length((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (json_array_length((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c3)))));
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, rt1 WHERE (((CAST(rt0.c4 AS INTEGER))>(CASE rt0.c4  WHEN rt0.c2 THEN x'' ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c4 AS INTEGER))>(CASE rt0.c4  WHEN rt0.c2 THEN x'' ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, rt1 WHERE (((CAST(rt0.c4 AS INTEGER))>(CASE rt0.c4  WHEN rt0.c2 THEN x'' ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c4 AS INTEGER))>(CASE rt0.c4  WHEN rt0.c2 THEN x'' ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, rt1 WHERE (((CAST(rt0.c4 AS INTEGER))>(CASE rt0.c4  WHEN rt0.c2 THEN x'' ELSE rt0.c1 END)));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY (rt0.c2 IN ()) COLLATE RTRIM DESC  NULLS FIRST, CAST(((rt0.c1)LIKE(rt0.c2)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c2 IN ()) COLLATE RTRIM DESC  NULLS FIRST, CAST(((rt0.c1)LIKE(rt0.c2)) AS REAL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY (rt0.c2 IN ()) COLLATE RTRIM DESC  NULLS FIRST, CAST(((rt0.c1)LIKE(rt0.c2)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c2 IN ()) COLLATE RTRIM DESC  NULLS FIRST, CAST(((rt0.c1)LIKE(rt0.c2)) AS REAL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY (rt0.c2 IN ()) COLLATE RTRIM DESC  NULLS FIRST, CAST(((rt0.c1)LIKE(rt0.c2)) AS REAL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE ((((('ne2B')AND((rt1.c1 IN (rt1.c0)))))OR(((rt1.c1) NOTNULL)))) ORDER BY IFNULL(((((((((rt1.c0)OR(rt1.c2)))AND(rt1.c1)))AND(rt1.c0)))OR(rt1.c2)), 0.4650724577415769), ((HEX(DISTINCT rt1.c1))>=(((rt1.c2)IS(rt1.c0)))) DESC  NULLS FIRST, CAST(rt1.c1 COLLATE NOCASE AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('ne2B')AND((rt1.c1 IN (rt1.c0)))))OR(((rt1.c1) NOTNULL)))) IS TRUE)  as count FROM rt1 ORDER BY IFNULL(((((((((rt1.c0)OR(rt1.c2)))AND(rt1.c1)))AND(rt1.c0)))OR(rt1.c2)), 0.4650724577415769), ((HEX(DISTINCT rt1.c1))>=(((rt1.c2)IS(rt1.c0)))) DESC  NULLS FIRST, CAST(rt1.c1 COLLATE NOCASE AS TEXT) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((((('ne2B')AND((rt1.c1 IN (rt1.c0)))))OR(((rt1.c1) NOTNULL)))) ORDER BY IFNULL(((((((((rt1.c0)OR(rt1.c2)))AND(rt1.c1)))AND(rt1.c0)))OR(rt1.c2)), 0.4650724577415769), ((HEX(DISTINCT rt1.c1))>=(((rt1.c2)IS(rt1.c0)))) DESC  NULLS FIRST, CAST(rt1.c1 COLLATE NOCASE AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('ne2B')AND((rt1.c1 IN (rt1.c0)))))OR(((rt1.c1) NOTNULL)))) IS TRUE)  as count FROM rt1 ORDER BY IFNULL(((((((((rt1.c0)OR(rt1.c2)))AND(rt1.c1)))AND(rt1.c0)))OR(rt1.c2)), 0.4650724577415769), ((HEX(DISTINCT rt1.c1))>=(((rt1.c2)IS(rt1.c0)))) DESC  NULLS FIRST, CAST(rt1.c1 COLLATE NOCASE AS TEXT) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((((('ne2B')AND((rt1.c1 IN (rt1.c0)))))OR(((rt1.c1) NOTNULL)))) ORDER BY IFNULL(((((((((rt1.c0)OR(rt1.c2)))AND(rt1.c1)))AND(rt1.c0)))OR(rt1.c2)), 0.4650724577415769), ((HEX(DISTINCT rt1.c1))>=(((rt1.c2)IS(rt1.c0)))) DESC  NULLS FIRST, CAST(rt1.c1 COLLATE NOCASE AS TEXT) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((((((+ (rt1.c0)))AND(0.7289602812621236)))AND(rt1.c1)))AND((rt1.c2 IN ()))))AND(0.36063027580305584)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((+ (rt1.c0)))AND(0.7289602812621236)))AND(rt1.c1)))AND((rt1.c2 IN ()))))AND(0.36063027580305584))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((((((+ (rt1.c0)))AND(0.7289602812621236)))AND(rt1.c1)))AND((rt1.c2 IN ()))))AND(0.36063027580305584)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((+ (rt1.c0)))AND(0.7289602812621236)))AND(rt1.c1)))AND((rt1.c2 IN ()))))AND(0.36063027580305584))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((((((+ (rt1.c0)))AND(0.7289602812621236)))AND(rt1.c1)))AND((rt1.c2 IN ()))))AND(0.36063027580305584)));
SELECT COUNT(*) FROM rt1 WHERE ('GK/V.');
SELECT SUM(count) FROM (SELECT (('GK/V.') IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ('GK/V.');
SELECT SUM(count) FROM (SELECT (('GK/V.') IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ('GK/V.');
SELECT * FROM rt1 WHERE (CAST((rt1.c0 IN (rt1.c1)) AS INTEGER)) ORDER BY (NOT (1e500));
SELECT SUM(count) FROM (SELECT ((CAST((rt1.c0 IN (rt1.c1)) AS INTEGER)) IS TRUE)  as count FROM rt1 ORDER BY (NOT (1e500)));
SELECT * FROM rt1 WHERE (CAST((rt1.c0 IN (rt1.c1)) AS INTEGER)) ORDER BY (NOT (1e500));
SELECT SUM(count) FROM (SELECT ((CAST((rt1.c0 IN (rt1.c1)) AS INTEGER)) IS TRUE)  as count FROM rt1 ORDER BY (NOT (1e500)));
SELECT * FROM rt1 WHERE (CAST((rt1.c0 IN (rt1.c1)) AS INTEGER)) ORDER BY (NOT (1e500));
SELECT ALL COUNT(*) FROM rt1 WHERE (((JULIANDAY(rt1.c1, rt1.c0, rt1.c0)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((JULIANDAY(rt1.c1, rt1.c0, rt1.c0)) NOT NULL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((JULIANDAY(rt1.c1, rt1.c0, rt1.c0)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((JULIANDAY(rt1.c1, rt1.c0, rt1.c0)) NOT NULL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((JULIANDAY(rt1.c1, rt1.c0, rt1.c0)) NOT NULL));
SELECT COUNT(*) FROM rt0, rt1 WHERE (CAST((((rt0.c1, NULL, rt0.c1)) NOT BETWEEN ((rt0.c1, rt1.c1, rt0.c3)) AND ((rt0.c4, x'', rt1.c1))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c1, NULL, rt0.c1)) NOT BETWEEN ((rt0.c1, rt1.c1, rt0.c3)) AND ((rt0.c4, x'', rt1.c1))) AS INTEGER)) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CAST((((rt0.c1, NULL, rt0.c1)) NOT BETWEEN ((rt0.c1, rt1.c1, rt0.c3)) AND ((rt0.c4, x'', rt1.c1))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c1, NULL, rt0.c1)) NOT BETWEEN ((rt0.c1, rt1.c1, rt0.c3)) AND ((rt0.c4, x'', rt1.c1))) AS INTEGER)) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CAST((((rt0.c1, NULL, rt0.c1)) NOT BETWEEN ((rt0.c1, rt1.c1, rt0.c3)) AND ((rt0.c4, x'', rt1.c1))) AS INTEGER));
SELECT ALL * FROM rt0, rt1 WHERE ((((rt1.c2)AND(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)AND(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE ((((rt1.c2)AND(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)AND(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE ((((rt1.c2)AND(rt0.c0)) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (0.4650724577415769);
SELECT SUM(count) FROM (SELECT ALL ((0.4650724577415769) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (0.4650724577415769);
SELECT SUM(count) FROM (SELECT ALL ((0.4650724577415769) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (0.4650724577415769);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN rt0 ON ((((((rt0.c1)OR(rt1.c2)))AND(rt0.c1))) IS TRUE) WHERE (((((rt1.c1)-(rt1.c1))) NOT BETWEEN (rt1.c2) AND ((((rt1.c1, 0.5467306023919969, rt0.c2, rt0.c0, rt0.c4))<=((rt0.c3, rt1.c1, rt0.c2, rt0.c0, rt0.c4))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)-(rt1.c1))) NOT BETWEEN (rt1.c2) AND ((((rt1.c1, 0.5467306023919969, rt0.c2, rt0.c0, rt0.c4))<=((rt0.c3, rt1.c1, rt0.c2, rt0.c0, rt0.c4)))))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON ((((((rt0.c1)OR(rt1.c2)))AND(rt0.c1))) IS TRUE));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN rt0 ON ((((((rt0.c1)OR(rt1.c2)))AND(rt0.c1))) IS TRUE) WHERE (((((rt1.c1)-(rt1.c1))) NOT BETWEEN (rt1.c2) AND ((((rt1.c1, 0.5467306023919969, rt0.c2, rt0.c0, rt0.c4))<=((rt0.c3, rt1.c1, rt0.c2, rt0.c0, rt0.c4))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)-(rt1.c1))) NOT BETWEEN (rt1.c2) AND ((((rt1.c1, 0.5467306023919969, rt0.c2, rt0.c0, rt0.c4))<=((rt0.c3, rt1.c1, rt0.c2, rt0.c0, rt0.c4)))))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON ((((((rt0.c1)OR(rt1.c2)))AND(rt0.c1))) IS TRUE));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN rt0 ON ((((((rt0.c1)OR(rt1.c2)))AND(rt0.c1))) IS TRUE) WHERE (((((rt1.c1)-(rt1.c1))) NOT BETWEEN (rt1.c2) AND ((((rt1.c1, 0.5467306023919969, rt0.c2, rt0.c0, rt0.c4))<=((rt0.c3, rt1.c1, rt0.c2, rt0.c0, rt0.c4))))));
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((((((((rt0.c1)AND(rt0.c3)))OR(rt1.c2)))OR(rt0.c0)))AND(rt0.c1)))%(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)AND(rt0.c3)))OR(rt1.c2)))OR(rt0.c0)))AND(rt0.c1)))%(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((((((((rt0.c1)AND(rt0.c3)))OR(rt1.c2)))OR(rt0.c0)))AND(rt0.c1)))%(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)AND(rt0.c3)))OR(rt1.c2)))OR(rt0.c0)))AND(rt0.c1)))%(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((((((((rt0.c1)AND(rt0.c3)))OR(rt1.c2)))OR(rt0.c0)))AND(rt0.c1)))%(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)));
SELECT ALL * FROM rt1 WHERE (((((((((((rt1.c1)||(rt1.c0)))AND(((((rt1.c0)OR(0.018915213120945018)))OR(rt1.c2)))))AND(rt1.c0 COLLATE RTRIM)))OR(rt1.c2 COLLATE NOCASE)))OR(((rt1.c0)>=(rt1.c1))))) ORDER BY LIKE(IFNULL(rt1.c0, rt1.c1), (((rt1.c0, rt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c0, rt1.c0, NULL)) AND ((rt1.c1, rt1.c2, rt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c1)||(rt1.c0)))AND(((((rt1.c0)OR(0.018915213120945018)))OR(rt1.c2)))))AND(rt1.c0 COLLATE RTRIM)))OR(rt1.c2 COLLATE NOCASE)))OR(((rt1.c0)>=(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY LIKE(IFNULL(rt1.c0, rt1.c1), (((rt1.c0, rt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c0, rt1.c0, NULL)) AND ((rt1.c1, rt1.c2, rt1.c0)))));
SELECT ALL * FROM rt1 WHERE (((((((((((rt1.c1)||(rt1.c0)))AND(((((rt1.c0)OR(0.018915213120945018)))OR(rt1.c2)))))AND(rt1.c0 COLLATE RTRIM)))OR(rt1.c2 COLLATE NOCASE)))OR(((rt1.c0)>=(rt1.c1))))) ORDER BY LIKE(IFNULL(rt1.c0, rt1.c1), (((rt1.c0, rt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c0, rt1.c0, NULL)) AND ((rt1.c1, rt1.c2, rt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c1)||(rt1.c0)))AND(((((rt1.c0)OR(0.018915213120945018)))OR(rt1.c2)))))AND(rt1.c0 COLLATE RTRIM)))OR(rt1.c2 COLLATE NOCASE)))OR(((rt1.c0)>=(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY LIKE(IFNULL(rt1.c0, rt1.c1), (((rt1.c0, rt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c0, rt1.c0, NULL)) AND ((rt1.c1, rt1.c2, rt1.c0)))));
SELECT ALL * FROM rt1 WHERE (((((((((((rt1.c1)||(rt1.c0)))AND(((((rt1.c0)OR(0.018915213120945018)))OR(rt1.c2)))))AND(rt1.c0 COLLATE RTRIM)))OR(rt1.c2 COLLATE NOCASE)))OR(((rt1.c0)>=(rt1.c1))))) ORDER BY LIKE(IFNULL(rt1.c0, rt1.c1), (((rt1.c0, rt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c0, rt1.c0, NULL)) AND ((rt1.c1, rt1.c2, rt1.c0))));
SELECT * FROM rt1 WHERE ((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)) IN ())) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)) IN ())) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)) IN ()));
SELECT COUNT(*) FROM rt1 WHERE ((((+ (rt1.c2)))<(CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END))) ORDER BY '' ASC  NULLS LAST, ((((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c1))), ((rt1.c2) BETWEEN (rt1.c2) AND (0.5152204194199124)), ((((rt1.c2)AND(rt1.c1)))OR(rt1.c0))))>((rt1.c1 COLLATE BINARY, ((NULL) NOT BETWEEN (rt1.c2) AND (-151505047)), ((rt1.c1) IS TRUE)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt1.c2)))<(CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END))) IS TRUE)  as count FROM rt1 ORDER BY '' ASC  NULLS LAST, ((((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c1))), ((rt1.c2) BETWEEN (rt1.c2) AND (0.5152204194199124)), ((((rt1.c2)AND(rt1.c1)))OR(rt1.c0))))>((rt1.c1 COLLATE BINARY, ((NULL) NOT BETWEEN (rt1.c2) AND (-151505047)), ((rt1.c1) IS TRUE)))) ASC);
SELECT COUNT(*) FROM rt1 WHERE ((((+ (rt1.c2)))<(CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END))) ORDER BY '' ASC  NULLS LAST, ((((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c1))), ((rt1.c2) BETWEEN (rt1.c2) AND (0.5152204194199124)), ((((rt1.c2)AND(rt1.c1)))OR(rt1.c0))))>((rt1.c1 COLLATE BINARY, ((NULL) NOT BETWEEN (rt1.c2) AND (-151505047)), ((rt1.c1) IS TRUE)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt1.c2)))<(CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END))) IS TRUE)  as count FROM rt1 ORDER BY '' ASC  NULLS LAST, ((((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c1))), ((rt1.c2) BETWEEN (rt1.c2) AND (0.5152204194199124)), ((((rt1.c2)AND(rt1.c1)))OR(rt1.c0))))>((rt1.c1 COLLATE BINARY, ((NULL) NOT BETWEEN (rt1.c2) AND (-151505047)), ((rt1.c1) IS TRUE)))) ASC);
SELECT COUNT(*) FROM rt1 WHERE ((((+ (rt1.c2)))<(CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END))) ORDER BY '' ASC  NULLS LAST, ((((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c1))), ((rt1.c2) BETWEEN (rt1.c2) AND (0.5152204194199124)), ((((rt1.c2)AND(rt1.c1)))OR(rt1.c0))))>((rt1.c1 COLLATE BINARY, ((NULL) NOT BETWEEN (rt1.c2) AND (-151505047)), ((rt1.c1) IS TRUE)))) ASC;
SELECT COUNT(*) FROM rt1 WHERE (RTRIM(CASE NULL  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)) ORDER BY (((rt1.c1 IN (rt1.c1))) NOT NULL) ASC  NULLS LAST, NULLIF(LIKELY(DISTINCT rt1.c1), ((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(CASE NULL  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c1 IN (rt1.c1))) NOT NULL) ASC  NULLS LAST, NULLIF(LIKELY(DISTINCT rt1.c1), ((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1))));
SELECT COUNT(*) FROM rt1 WHERE (RTRIM(CASE NULL  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)) ORDER BY (((rt1.c1 IN (rt1.c1))) NOT NULL) ASC  NULLS LAST, NULLIF(LIKELY(DISTINCT rt1.c1), ((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(CASE NULL  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c1 IN (rt1.c1))) NOT NULL) ASC  NULLS LAST, NULLIF(LIKELY(DISTINCT rt1.c1), ((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1))));
SELECT COUNT(*) FROM rt1 WHERE (RTRIM(CASE NULL  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)) ORDER BY (((rt1.c1 IN (rt1.c1))) NOT NULL) ASC  NULLS LAST, NULLIF(LIKELY(DISTINCT rt1.c1), ((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON (((((((rt1.c1, rt0.c4, rt1.c2)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c4, rt0.c3, rt0.c1))))OR((~ (rt0.c4)))))AND((rt0.c4 IN ()))) WHERE ((((CASE rt0.c2  WHEN rt1.c2 THEN rt1.c0 ELSE rt0.c2 END, ((rt0.c4)>>(rt1.c1)), ((rt0.c1) NOTNULL)))>((CASE rt1.c0  WHEN rt0.c4 THEN rt1.c2 END, ((rt1.c0)|(rt1.c1)), ((((rt1.c0)AND(x'13c7')))AND(rt0.c2)))))) ORDER BY ((CASE rt1.c2  WHEN rt0.c4 THEN rt0.c0 WHEN '1620824718' THEN rt1.c1 WHEN rt0.c4 THEN rt0.c2 END)AND(rt0.c0)) ASC, ((NULL)<=(((rt0.c1)||(0.31569575021660345)))), ((((rt0.c4) NOT BETWEEN (rt1.c1) AND (rt0.c2))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((CASE rt0.c2  WHEN rt1.c2 THEN rt1.c0 ELSE rt0.c2 END, ((rt0.c4)>>(rt1.c1)), ((rt0.c1) NOTNULL)))>((CASE rt1.c0  WHEN rt0.c4 THEN rt1.c2 END, ((rt1.c0)|(rt1.c1)), ((((rt1.c0)AND(x'13c7')))AND(rt0.c2)))))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON (((((((rt1.c1, rt0.c4, rt1.c2)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c4, rt0.c3, rt0.c1))))OR((~ (rt0.c4)))))AND((rt0.c4 IN ()))) ORDER BY ((CASE rt1.c2  WHEN rt0.c4 THEN rt0.c0 WHEN '1620824718' THEN rt1.c1 WHEN rt0.c4 THEN rt0.c2 END)AND(rt0.c0)) ASC, ((NULL)<=(((rt0.c1)||(0.31569575021660345)))), ((((rt0.c4) NOT BETWEEN (rt1.c1) AND (rt0.c2))) NOT NULL) ASC);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON (((((((rt1.c1, rt0.c4, rt1.c2)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c4, rt0.c3, rt0.c1))))OR((~ (rt0.c4)))))AND((rt0.c4 IN ()))) WHERE ((((CASE rt0.c2  WHEN rt1.c2 THEN rt1.c0 ELSE rt0.c2 END, ((rt0.c4)>>(rt1.c1)), ((rt0.c1) NOTNULL)))>((CASE rt1.c0  WHEN rt0.c4 THEN rt1.c2 END, ((rt1.c0)|(rt1.c1)), ((((rt1.c0)AND(x'13c7')))AND(rt0.c2)))))) ORDER BY ((CASE rt1.c2  WHEN rt0.c4 THEN rt0.c0 WHEN '1620824718' THEN rt1.c1 WHEN rt0.c4 THEN rt0.c2 END)AND(rt0.c0)) ASC, ((NULL)<=(((rt0.c1)||(0.31569575021660345)))), ((((rt0.c4) NOT BETWEEN (rt1.c1) AND (rt0.c2))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((CASE rt0.c2  WHEN rt1.c2 THEN rt1.c0 ELSE rt0.c2 END, ((rt0.c4)>>(rt1.c1)), ((rt0.c1) NOTNULL)))>((CASE rt1.c0  WHEN rt0.c4 THEN rt1.c2 END, ((rt1.c0)|(rt1.c1)), ((((rt1.c0)AND(x'13c7')))AND(rt0.c2)))))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON (((((((rt1.c1, rt0.c4, rt1.c2)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c4, rt0.c3, rt0.c1))))OR((~ (rt0.c4)))))AND((rt0.c4 IN ()))) ORDER BY ((CASE rt1.c2  WHEN rt0.c4 THEN rt0.c0 WHEN '1620824718' THEN rt1.c1 WHEN rt0.c4 THEN rt0.c2 END)AND(rt0.c0)) ASC, ((NULL)<=(((rt0.c1)||(0.31569575021660345)))), ((((rt0.c4) NOT BETWEEN (rt1.c1) AND (rt0.c2))) NOT NULL) ASC);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON (((((((rt1.c1, rt0.c4, rt1.c2)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c4, rt0.c3, rt0.c1))))OR((~ (rt0.c4)))))AND((rt0.c4 IN ()))) WHERE ((((CASE rt0.c2  WHEN rt1.c2 THEN rt1.c0 ELSE rt0.c2 END, ((rt0.c4)>>(rt1.c1)), ((rt0.c1) NOTNULL)))>((CASE rt1.c0  WHEN rt0.c4 THEN rt1.c2 END, ((rt1.c0)|(rt1.c1)), ((((rt1.c0)AND(x'13c7')))AND(rt0.c2)))))) ORDER BY ((CASE rt1.c2  WHEN rt0.c4 THEN rt0.c0 WHEN '1620824718' THEN rt1.c1 WHEN rt0.c4 THEN rt0.c2 END)AND(rt0.c0)) ASC, ((NULL)<=(((rt0.c1)||(0.31569575021660345)))), ((((rt0.c4) NOT BETWEEN (rt1.c1) AND (rt0.c2))) NOT NULL) ASC;
SELECT ALL * FROM rt1, rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c2))) NOT NULL)) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt1, rt0 ORDER BY x'');
SELECT ALL * FROM rt1, rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c2))) NOT NULL)) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt1, rt0 ORDER BY x'');
SELECT ALL * FROM rt1, rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c2))) NOT NULL)) ORDER BY x'';
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN rt1 ON ((CAST(rt1.c2 AS BLOB))>>((((rt1.c2)) NOT BETWEEN ((0.008094478186301823)) AND ((rt0.c4))))) WHERE (((rt0.c4 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt0.c4 IN ()) IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON ((CAST(rt1.c2 AS BLOB))>>((((rt1.c2)) NOT BETWEEN ((0.008094478186301823)) AND ((rt0.c4))))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN rt1 ON ((CAST(rt1.c2 AS BLOB))>>((((rt1.c2)) NOT BETWEEN ((0.008094478186301823)) AND ((rt0.c4))))) WHERE (((rt0.c4 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt0.c4 IN ()) IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON ((CAST(rt1.c2 AS BLOB))>>((((rt1.c2)) NOT BETWEEN ((0.008094478186301823)) AND ((rt0.c4))))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN rt1 ON ((CAST(rt1.c2 AS BLOB))>>((((rt1.c2)) NOT BETWEEN ((0.008094478186301823)) AND ((rt0.c4))))) WHERE (((rt0.c4 IN ()) IN ()));
SELECT * FROM rt0, rt1 WHERE (1373252731) ORDER BY ((((rt0.c4) IS FALSE)) BETWEEN ((rt0.c0 IN ())) AND (((rt0.c3) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((1373252731) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt0.c4) IS FALSE)) BETWEEN ((rt0.c0 IN ())) AND (((rt0.c3) ISNULL))) DESC);
SELECT * FROM rt0, rt1 WHERE (1373252731) ORDER BY ((((rt0.c4) IS FALSE)) BETWEEN ((rt0.c0 IN ())) AND (((rt0.c3) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((1373252731) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt0.c4) IS FALSE)) BETWEEN ((rt0.c0 IN ())) AND (((rt0.c3) ISNULL))) DESC);
SELECT * FROM rt0, rt1 WHERE (1373252731) ORDER BY ((((rt0.c4) IS FALSE)) BETWEEN ((rt0.c0 IN ())) AND (((rt0.c3) ISNULL))) DESC;
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)>>(rt0.c4))) NOT BETWEEN (CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt1.c2 ELSE x'' END) AND (((rt0.c2)IS NOT(rt0.c3)))) WHERE (CASE WHEN CASE rt0.c3  WHEN rt1.c1 THEN 580716398 END THEN (+ (rt0.c3)) ELSE CASE WHEN rt0.c0 THEN rt0.c2 END END) ORDER BY ((rt0.c1 COLLATE RTRIM)<(rt0.c3)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE rt0.c3  WHEN rt1.c1 THEN 580716398 END THEN (+ (rt0.c3)) ELSE CASE WHEN rt0.c0 THEN rt0.c2 END END) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)>>(rt0.c4))) NOT BETWEEN (CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt1.c2 ELSE x'' END) AND (((rt0.c2)IS NOT(rt0.c3)))) ORDER BY ((rt0.c1 COLLATE RTRIM)<(rt0.c3)) ASC);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)>>(rt0.c4))) NOT BETWEEN (CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt1.c2 ELSE x'' END) AND (((rt0.c2)IS NOT(rt0.c3)))) WHERE (CASE WHEN CASE rt0.c3  WHEN rt1.c1 THEN 580716398 END THEN (+ (rt0.c3)) ELSE CASE WHEN rt0.c0 THEN rt0.c2 END END) ORDER BY ((rt0.c1 COLLATE RTRIM)<(rt0.c3)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE rt0.c3  WHEN rt1.c1 THEN 580716398 END THEN (+ (rt0.c3)) ELSE CASE WHEN rt0.c0 THEN rt0.c2 END END) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)>>(rt0.c4))) NOT BETWEEN (CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt1.c2 ELSE x'' END) AND (((rt0.c2)IS NOT(rt0.c3)))) ORDER BY ((rt0.c1 COLLATE RTRIM)<(rt0.c3)) ASC);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)>>(rt0.c4))) NOT BETWEEN (CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt1.c2 ELSE x'' END) AND (((rt0.c2)IS NOT(rt0.c3)))) WHERE (CASE WHEN CASE rt0.c3  WHEN rt1.c1 THEN 580716398 END THEN (+ (rt0.c3)) ELSE CASE WHEN rt0.c0 THEN rt0.c2 END END) ORDER BY ((rt0.c1 COLLATE RTRIM)<(rt0.c3)) ASC;
SELECT COUNT(*) FROM rt0 WHERE (CAST(0xffffffffffffffff AS BLOB)) ORDER BY json_extract((NOT (rt0.c0)), ((((((((rt0.c4)OR(rt0.c4)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c4)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0Xffffffffffffffff AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY json_extract((NOT (rt0.c0)), ((((((((rt0.c4)OR(rt0.c4)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c4)))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(0xffffffffffffffff AS BLOB)) ORDER BY json_extract((NOT (rt0.c0)), ((((((((rt0.c4)OR(rt0.c4)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c4)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0Xffffffffffffffff AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY json_extract((NOT (rt0.c0)), ((((((((rt0.c4)OR(rt0.c4)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c4)))  NULLS LAST);
SELECT * FROM rt1, rt0 WHERE ((NOT (rt0.c0)) COLLATE BINARY) ORDER BY (- (((rt0.c4)/(rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0 ORDER BY (- (((rt0.c4)/(rt0.c1)))) DESC  NULLS FIRST);
SELECT * FROM rt1, rt0 WHERE ((NOT (rt0.c0)) COLLATE BINARY) ORDER BY (- (((rt0.c4)/(rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0 ORDER BY (- (((rt0.c4)/(rt0.c1)))) DESC  NULLS FIRST);
SELECT * FROM rt1, rt0 WHERE ((NOT (rt0.c0)) COLLATE BINARY) ORDER BY (- (((rt0.c4)/(rt0.c1)))) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (x'fee0');
SELECT SUM(count) FROM (SELECT ((x'fee0') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (x'fee0');
SELECT SUM(count) FROM (SELECT ((x'fee0') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (x'fee0');
SELECT ALL * FROM rt1 WHERE (x'59b4') ORDER BY (('-573999288')+(rt1.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'59b4') IS TRUE)  as count FROM rt1 ORDER BY (('-573999288')+(rt1.c0)) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (x'59b4') ORDER BY (('-573999288')+(rt1.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'59b4') IS TRUE)  as count FROM rt1 ORDER BY (('-573999288')+(rt1.c0)) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (x'59b4') ORDER BY (('-573999288')+(rt1.c0)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, rt1 WHERE (CASE WHEN (rt0.c4 IN (rt0.c3)) THEN ((((rt1.c0)AND(rt0.c4)))OR(rt0.c1)) ELSE (('0.5467306023919969') BETWEEN (rt0.c1) AND (rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c4 IN (rt0.c3)) THEN ((((rt1.c0)AND(rt0.c4)))OR(rt0.c1)) ELSE (('0.5467306023919969') BETWEEN (rt0.c1) AND (rt1.c0)) END) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CASE WHEN (rt0.c4 IN (rt0.c3)) THEN ((((rt1.c0)AND(rt0.c4)))OR(rt0.c1)) ELSE (('0.5467306023919969') BETWEEN (rt0.c1) AND (rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c4 IN (rt0.c3)) THEN ((((rt1.c0)AND(rt0.c4)))OR(rt0.c1)) ELSE (('0.5467306023919969') BETWEEN (rt0.c1) AND (rt1.c0)) END) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CASE WHEN (rt0.c4 IN (rt0.c3)) THEN ((((rt1.c0)AND(rt0.c4)))OR(rt0.c1)) ELSE (('0.5467306023919969') BETWEEN (rt0.c1) AND (rt1.c0)) END);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((+ (rt0.c0)))>>(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c0)))>>(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt0.c3))))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((+ (rt0.c0)))>>(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c0)))>>(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt0.c3))))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((+ (rt0.c0)))>>(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt0.c3)))));
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)+(rt1.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)+(rt1.c1))) IS FALSE)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)+(rt1.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)+(rt1.c1))) IS FALSE)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)+(rt1.c1))) IS FALSE));
SELECT * FROM rt1, rt0 WHERE (CAST(((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt1.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt1.c2)) AS TEXT)) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (CAST(((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt1.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt1.c2)) AS TEXT)) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (CAST(((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt1.c2)) AS TEXT));
SELECT * FROM rt0 WHERE ((((rt0.c1, rt0.c3, rt0.c0)) BETWEEN ((((rt0.c4)GLOB(rt0.c3)), CAST(0x3ea455dd AS INTEGER), (- (rt0.c0)))) AND ((CASE WHEN rt0.c1 THEN x'' WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c3 END, rt0.c0, rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c3, rt0.c0)) BETWEEN ((((rt0.c4)GLOB(rt0.c3)), CAST(0X3ea455dd AS INTEGER), (- (rt0.c0)))) AND ((CASE WHEN rt0.c1 THEN x'' WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c3 END, rt0.c0, rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c1, rt0.c3, rt0.c0)) BETWEEN ((((rt0.c4)GLOB(rt0.c3)), CAST(0x3ea455dd AS INTEGER), (- (rt0.c0)))) AND ((CASE WHEN rt0.c1 THEN x'' WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c3 END, rt0.c0, rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c3, rt0.c0)) BETWEEN ((((rt0.c4)GLOB(rt0.c3)), CAST(0X3ea455dd AS INTEGER), (- (rt0.c0)))) AND ((CASE WHEN rt0.c1 THEN x'' WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c3 END, rt0.c0, rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c1, rt0.c3, rt0.c0)) BETWEEN ((((rt0.c4)GLOB(rt0.c3)), CAST(0x3ea455dd AS INTEGER), (- (rt0.c0)))) AND ((CASE WHEN rt0.c1 THEN x'' WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c3 END, rt0.c0, rt0.c2))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ (((rt1.c1)IS('')))));
SELECT SUM(count) FROM (SELECT (((~ (((rt1.c1)IS(''))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ (((rt1.c1)IS('')))));
SELECT SUM(count) FROM (SELECT (((~ (((rt1.c1)IS(''))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ (((rt1.c1)IS('')))));
SELECT * FROM rt0 WHERE (LIKELIHOOD(rt0.c0 COLLATE BINARY, 0.8191015243788223)) ORDER BY CAST(rt0.c0 COLLATE NOCASE AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(rt0.c0 COLLATE BINARY, 0.8191015243788223)) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c0 COLLATE NOCASE AS INTEGER) ASC);
SELECT * FROM rt0 WHERE (LIKELIHOOD(rt0.c0 COLLATE BINARY, 0.8191015243788223)) ORDER BY CAST(rt0.c0 COLLATE NOCASE AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(rt0.c0 COLLATE BINARY, 0.8191015243788223)) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c0 COLLATE NOCASE AS INTEGER) ASC);
SELECT * FROM rt0 WHERE (LIKELIHOOD(rt0.c0 COLLATE BINARY, 0.8191015243788223)) ORDER BY CAST(rt0.c0 COLLATE NOCASE AS INTEGER) ASC;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((- (rt1.c0)) IN ())) ORDER BY (((rt0.c3, rt0.c2, rt0.c1)) BETWEEN (((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c0))), ((rt0.c4) BETWEEN (rt0.c2) AND (rt1.c1)), (-1.811988337E9 IN (x'')))) AND ((CAST(rt0.c2 AS REAL), ((((rt0.c0)OR(rt0.c3)))OR(rt0.c4)), (+ (rt0.c4))))) DESC;
SELECT SUM(count) FROM (SELECT ((((- (rt1.c0)) IN ())) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt0.c3, rt0.c2, rt0.c1)) BETWEEN (((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c0))), ((rt0.c4) BETWEEN (rt0.c2) AND (rt1.c1)), (-1.811988337E9 IN (x'')))) AND ((CAST(rt0.c2 AS REAL), ((((rt0.c0)OR(rt0.c3)))OR(rt0.c4)), (+ (rt0.c4))))) DESC);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((- (rt1.c0)) IN ())) ORDER BY (((rt0.c3, rt0.c2, rt0.c1)) BETWEEN (((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c0))), ((rt0.c4) BETWEEN (rt0.c2) AND (rt1.c1)), (-1.811988337E9 IN (x'')))) AND ((CAST(rt0.c2 AS REAL), ((((rt0.c0)OR(rt0.c3)))OR(rt0.c4)), (+ (rt0.c4))))) DESC;
SELECT SUM(count) FROM (SELECT ((((- (rt1.c0)) IN ())) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt0.c3, rt0.c2, rt0.c1)) BETWEEN (((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c0))), ((rt0.c4) BETWEEN (rt0.c2) AND (rt1.c1)), (-1.811988337E9 IN (x'')))) AND ((CAST(rt0.c2 AS REAL), ((((rt0.c0)OR(rt0.c3)))OR(rt0.c4)), (+ (rt0.c4))))) DESC);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((- (rt1.c0)) IN ())) ORDER BY (((rt0.c3, rt0.c2, rt0.c1)) BETWEEN (((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c0))), ((rt0.c4) BETWEEN (rt0.c2) AND (rt1.c1)), (-1.811988337E9 IN (x'')))) AND ((CAST(rt0.c2 AS REAL), ((((rt0.c0)OR(rt0.c3)))OR(rt0.c4)), (+ (rt0.c4))))) DESC;
SELECT * FROM rt0 INNER JOIN rt1 ON ((((((((((((((rt0.c4)OR(rt1.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(rt1.c2)))AND(rt0.c1)))OR(rt1.c1)))|((rt0.c3 IN (rt1.c2)))) WHERE ((((SUBSTR(NULL, rt0.c3)))<((((rt0.c0) BETWEEN (rt1.c2) AND (rt0.c4)))))) ORDER BY ((((((rt1.c2)AND(rt1.c1)))OR(rt0.c4))) NOT BETWEEN (CAST(rt1.c1 AS INTEGER)) AND (rt0.c3))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((SUBSTR(NULL, rt0.c3)))<((((rt0.c0) BETWEEN (rt1.c2) AND (rt0.c4)))))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON ((((((((((((((rt0.c4)OR(rt1.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(rt1.c2)))AND(rt0.c1)))OR(rt1.c1)))|((rt0.c3 IN (rt1.c2)))) ORDER BY ((((((rt1.c2)AND(rt1.c1)))OR(rt0.c4))) NOT BETWEEN (CAST(rt1.c1 AS INTEGER)) AND (rt0.c3))  NULLS LAST);
SELECT * FROM rt0 INNER JOIN rt1 ON ((((((((((((((rt0.c4)OR(rt1.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(rt1.c2)))AND(rt0.c1)))OR(rt1.c1)))|((rt0.c3 IN (rt1.c2)))) WHERE ((((SUBSTR(NULL, rt0.c3)))<((((rt0.c0) BETWEEN (rt1.c2) AND (rt0.c4)))))) ORDER BY ((((((rt1.c2)AND(rt1.c1)))OR(rt0.c4))) NOT BETWEEN (CAST(rt1.c1 AS INTEGER)) AND (rt0.c3))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((SUBSTR(NULL, rt0.c3)))<((((rt0.c0) BETWEEN (rt1.c2) AND (rt0.c4)))))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON ((((((((((((((rt0.c4)OR(rt1.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(rt1.c2)))AND(rt0.c1)))OR(rt1.c1)))|((rt0.c3 IN (rt1.c2)))) ORDER BY ((((((rt1.c2)AND(rt1.c1)))OR(rt0.c4))) NOT BETWEEN (CAST(rt1.c1 AS INTEGER)) AND (rt0.c3))  NULLS LAST);
SELECT * FROM rt0 INNER JOIN rt1 ON ((((((((((((((rt0.c4)OR(rt1.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(rt1.c2)))AND(rt0.c1)))OR(rt1.c1)))|((rt0.c3 IN (rt1.c2)))) WHERE ((((SUBSTR(NULL, rt0.c3)))<((((rt0.c0) BETWEEN (rt1.c2) AND (rt0.c4)))))) ORDER BY ((((((rt1.c2)AND(rt1.c1)))OR(rt0.c4))) NOT BETWEEN (CAST(rt1.c1 AS INTEGER)) AND (rt0.c3))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON (((rt0.c0))<((rt0.c1))) COLLATE RTRIM WHERE (((((rt0.c4) NOTNULL))||(((rt1.c0)>>(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) NOTNULL))||(((rt1.c0)>>(rt0.c1))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON (((rt0.c0))<((rt0.c1))) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON (((rt0.c0))<((rt0.c1))) COLLATE RTRIM WHERE (((((rt0.c4) NOTNULL))||(((rt1.c0)>>(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) NOTNULL))||(((rt1.c0)>>(rt0.c1))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON (((rt0.c0))<((rt0.c1))) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON (((rt0.c0))<((rt0.c1))) COLLATE RTRIM WHERE (((((rt0.c4) NOTNULL))||(((rt1.c0)>>(rt0.c1)))));
SELECT ALL * FROM rt1 NATURAL JOIN rt0 WHERE (rt1.c0) ORDER BY (((rt0.c0 IN ())) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0 ORDER BY (((rt0.c0 IN ())) IS FALSE) ASC);
SELECT ALL * FROM rt1 NATURAL JOIN rt0 WHERE (rt1.c0) ORDER BY (((rt0.c0 IN ())) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0 ORDER BY (((rt0.c0 IN ())) IS FALSE) ASC);
SELECT ALL * FROM rt1 NATURAL JOIN rt0 WHERE (rt1.c0) ORDER BY (((rt0.c0 IN ())) IS FALSE) ASC;
SELECT ALL * FROM rt0, rt1 WHERE (((x'') NOT BETWEEN ((NOT (rt0.c4))) AND ((((NULL, 0X2f42ec2c, 0.06776400704697216, x'7b62', 0.17209223841464616)) NOT BETWEEN ((rt0.c0, rt1.c0, rt0.c1, rt0.c0, rt1.c1)) AND ((rt0.c3, rt0.c0, '', rt1.c2, rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN ((NOT (rt0.c4))) AND ((((NULL, 0X2f42ec2c, 0.06776400704697216, x'7b62', 0.17209223841464616)) NOT BETWEEN ((rt0.c0, rt1.c0, rt0.c1, rt0.c0, rt1.c1)) AND ((rt0.c3, rt0.c0, '', rt1.c2, rt1.c1)))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((x'') NOT BETWEEN ((NOT (rt0.c4))) AND ((((NULL, 0X2f42ec2c, 0.06776400704697216, x'7b62', 0.17209223841464616)) NOT BETWEEN ((rt0.c0, rt1.c0, rt0.c1, rt0.c0, rt1.c1)) AND ((rt0.c3, rt0.c0, '', rt1.c2, rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN ((NOT (rt0.c4))) AND ((((NULL, 0X2f42ec2c, 0.06776400704697216, x'7b62', 0.17209223841464616)) NOT BETWEEN ((rt0.c0, rt1.c0, rt0.c1, rt0.c0, rt1.c1)) AND ((rt0.c3, rt0.c0, '', rt1.c2, rt1.c1)))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((x'') NOT BETWEEN ((NOT (rt0.c4))) AND ((((NULL, 0X2f42ec2c, 0.06776400704697216, x'7b62', 0.17209223841464616)) NOT BETWEEN ((rt0.c0, rt1.c0, rt0.c1, rt0.c0, rt1.c1)) AND ((rt0.c3, rt0.c0, '', rt1.c2, rt1.c1))))));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((CASE WHEN '' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt1.c0 THEN rt1.c0 END)IS(CAST(x'' AS INTEGER)))) ORDER BY (+ (CASE rt0.c0  WHEN rt1.c1 THEN rt1.c2 WHEN x'' THEN rt0.c4 WHEN rt1.c2 THEN rt0.c4 ELSE rt1.c1 END))  NULLS FIRST, (((rt1.c1 IN ())) NOT BETWEEN (((((rt1.c1)OR(rt0.c3)))AND(rt1.c0))) AND (((((rt0.c1)OR(rt0.c2)))AND(rt0.c0))))  NULLS FIRST, CASE WHEN (((rt1.c1))<=((NULL))) THEN ((rt0.c3) NOT BETWEEN (rt1.c0) AND (rt0.c3)) ELSE UNLIKELY(rt0.c2) END DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN '' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt1.c0 THEN rt1.c0 END)IS(CAST(x'' AS INTEGER)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (+ (CASE rt0.c0  WHEN rt1.c1 THEN rt1.c2 WHEN x'' THEN rt0.c4 WHEN rt1.c2 THEN rt0.c4 ELSE rt1.c1 END))  NULLS FIRST, (((rt1.c1 IN ())) NOT BETWEEN (((((rt1.c1)OR(rt0.c3)))AND(rt1.c0))) AND (((((rt0.c1)OR(rt0.c2)))AND(rt0.c0))))  NULLS FIRST, CASE WHEN (((rt1.c1))<=((NULL))) THEN ((rt0.c3) NOT BETWEEN (rt1.c0) AND (rt0.c3)) ELSE UNLIKELY(rt0.c2) END DESC);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((CASE WHEN '' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt1.c0 THEN rt1.c0 END)IS(CAST(x'' AS INTEGER)))) ORDER BY (+ (CASE rt0.c0  WHEN rt1.c1 THEN rt1.c2 WHEN x'' THEN rt0.c4 WHEN rt1.c2 THEN rt0.c4 ELSE rt1.c1 END))  NULLS FIRST, (((rt1.c1 IN ())) NOT BETWEEN (((((rt1.c1)OR(rt0.c3)))AND(rt1.c0))) AND (((((rt0.c1)OR(rt0.c2)))AND(rt0.c0))))  NULLS FIRST, CASE WHEN (((rt1.c1))<=((NULL))) THEN ((rt0.c3) NOT BETWEEN (rt1.c0) AND (rt0.c3)) ELSE UNLIKELY(rt0.c2) END DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN '' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt1.c0 THEN rt1.c0 END)IS(CAST(x'' AS INTEGER)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (+ (CASE rt0.c0  WHEN rt1.c1 THEN rt1.c2 WHEN x'' THEN rt0.c4 WHEN rt1.c2 THEN rt0.c4 ELSE rt1.c1 END))  NULLS FIRST, (((rt1.c1 IN ())) NOT BETWEEN (((((rt1.c1)OR(rt0.c3)))AND(rt1.c0))) AND (((((rt0.c1)OR(rt0.c2)))AND(rt0.c0))))  NULLS FIRST, CASE WHEN (((rt1.c1))<=((NULL))) THEN ((rt0.c3) NOT BETWEEN (rt1.c0) AND (rt0.c3)) ELSE UNLIKELY(rt0.c2) END DESC);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((CASE WHEN '' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt1.c0 THEN rt1.c0 END)IS(CAST(x'' AS INTEGER)))) ORDER BY (+ (CASE rt0.c0  WHEN rt1.c1 THEN rt1.c2 WHEN x'' THEN rt0.c4 WHEN rt1.c2 THEN rt0.c4 ELSE rt1.c1 END))  NULLS FIRST, (((rt1.c1 IN ())) NOT BETWEEN (((((rt1.c1)OR(rt0.c3)))AND(rt1.c0))) AND (((((rt0.c1)OR(rt0.c2)))AND(rt0.c0))))  NULLS FIRST, CASE WHEN (((rt1.c1))<=((NULL))) THEN ((rt0.c3) NOT BETWEEN (rt1.c0) AND (rt0.c3)) ELSE UNLIKELY(rt0.c2) END DESC;
SELECT ALL * FROM rt0, rt1 WHERE (CASE WHEN (- (rt0.c0)) THEN (rt0.c0 IN ()) ELSE ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (rt0.c0)) THEN (rt0.c0 IN ()) ELSE ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)) END) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (CASE WHEN (- (rt0.c0)) THEN (rt0.c0 IN ()) ELSE ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (rt0.c0)) THEN (rt0.c0 IN ()) ELSE ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)) END) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (CASE WHEN (- (rt0.c0)) THEN (rt0.c0 IN ()) ELSE ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)) END);
SELECT ALL * FROM rt1 WHERE ((~ (((rt1.c2)AND(NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt1.c2)AND(NULL))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((~ (((rt1.c2)AND(NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt1.c2)AND(NULL))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((~ (((rt1.c2)AND(NULL)))));
SELECT COUNT(*) FROM rt1, rt0 WHERE (((json_array(rt0.c3, rt0.c4))LIKE((rt1.c2 IN (rt0.c3))))) ORDER BY ((((rt0.c1) BETWEEN (NULL) AND (rt1.c2)))<=(rt0.c3 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((((json_array(rt0.c3, rt0.c4))LIKE((rt1.c2 IN (rt0.c3))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt0.c1) BETWEEN (NULL) AND (rt1.c2)))<=(rt0.c3 COLLATE BINARY)));
SELECT COUNT(*) FROM rt1, rt0 WHERE (((json_array(rt0.c3, rt0.c4))LIKE((rt1.c2 IN (rt0.c3))))) ORDER BY ((((rt0.c1) BETWEEN (NULL) AND (rt1.c2)))<=(rt0.c3 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((((json_array(rt0.c3, rt0.c4))LIKE((rt1.c2 IN (rt0.c3))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt0.c1) BETWEEN (NULL) AND (rt1.c2)))<=(rt0.c3 COLLATE BINARY)));
SELECT COUNT(*) FROM rt1, rt0 WHERE (((json_array(rt0.c3, rt0.c4))LIKE((rt1.c2 IN (rt0.c3))))) ORDER BY ((((rt0.c1) BETWEEN (NULL) AND (rt1.c2)))<=(rt0.c3 COLLATE BINARY));
SELECT COUNT(*) FROM rt0 WHERE (load_extension(NULL)) ORDER BY CAST((+ (rt0.c3)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((load_extension(NULL)) IS TRUE)  as count FROM rt0 ORDER BY CAST((+ (rt0.c3)) AS BLOB));
SELECT COUNT(*) FROM rt0 WHERE (load_extension(NULL)) ORDER BY CAST((+ (rt0.c3)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((load_extension(NULL)) IS TRUE)  as count FROM rt0 ORDER BY CAST((+ (rt0.c3)) AS BLOB));
SELECT ALL * FROM rt0 WHERE (((rtreenode(rt0.c0, rt0.c1)) BETWEEN (rt0.c0 COLLATE BINARY) AND (DATE(rt0.c1, rt0.c1, rt0.c1)))) ORDER BY (rt0.c2 IN ()) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rtreenode(rt0.c0, rt0.c1)) BETWEEN (rt0.c0 COLLATE BINARY) AND (DATE(rt0.c1, rt0.c1, rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c2 IN ()) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((rtreenode(rt0.c0, rt0.c1)) BETWEEN (rt0.c0 COLLATE BINARY) AND (DATE(rt0.c1, rt0.c1, rt0.c1)))) ORDER BY (rt0.c2 IN ()) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rtreenode(rt0.c0, rt0.c1)) BETWEEN (rt0.c0 COLLATE BINARY) AND (DATE(rt0.c1, rt0.c1, rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c2 IN ()) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((rtreenode(rt0.c0, rt0.c1)) BETWEEN (rt0.c0 COLLATE BINARY) AND (DATE(rt0.c1, rt0.c1, rt0.c1)))) ORDER BY (rt0.c2 IN ()) COLLATE NOCASE  NULLS FIRST;
SELECT COUNT(*) FROM rt0, rt1 WHERE ('6Y{n');
SELECT SUM(count) FROM (SELECT (('6Y{n') IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE ('6Y{n');
SELECT SUM(count) FROM (SELECT (('6Y{n') IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE ('6Y{n');
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((((((((((((((NULL)OR(rt0.c2)))AND(rt1.c0)))AND(rt0.c1)))OR(rt1.c0)))AND((rt0.c2 IN ()))))OR(((rt0.c4) IS TRUE))))AND(((rt0.c2)!=(rt1.c0)))))AND((~ (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((NULL)OR(rt0.c2)))AND(rt1.c0)))AND(rt0.c1)))OR(rt1.c0)))AND((rt0.c2 IN ()))))OR(((rt0.c4) IS TRUE))))AND(((rt0.c2)<>(rt1.c0)))))AND((~ (rt1.c2))))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((((((((((((((NULL)OR(rt0.c2)))AND(rt1.c0)))AND(rt0.c1)))OR(rt1.c0)))AND((rt0.c2 IN ()))))OR(((rt0.c4) IS TRUE))))AND(((rt0.c2)!=(rt1.c0)))))AND((~ (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((NULL)OR(rt0.c2)))AND(rt1.c0)))AND(rt0.c1)))OR(rt1.c0)))AND((rt0.c2 IN ()))))OR(((rt0.c4) IS TRUE))))AND(((rt0.c2)<>(rt1.c0)))))AND((~ (rt1.c2))))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((((((((((((((NULL)OR(rt0.c2)))AND(rt1.c0)))AND(rt0.c1)))OR(rt1.c0)))AND((rt0.c2 IN ()))))OR(((rt0.c4) IS TRUE))))AND(((rt0.c2)!=(rt1.c0)))))AND((~ (rt1.c2)))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CAST(((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt1.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt1.c2)) AS REAL)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CAST(((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt1.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt1.c2)) AS REAL)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CAST(((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt1.c2)) AS REAL));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c3, rt0.c0)) NOT BETWEEN ((((((rt0.c2)OR(rt0.c2)))OR(rt0.c4)), ((rt0.c3)OR(rt0.c4)), CAST(rt0.c0 AS REAL))) AND ((((x'')>(rt0.c2)), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c4)), ((rt0.c3)>(rt0.c0)))))) ORDER BY NULL ASC  NULLS FIRST, (((rt0.c2 COLLATE BINARY, rt0.c3, '-298521912'))!=((((((rt0.c4)OR(rt0.c0)))AND(rt0.c2)), ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3))))) ASC, (((rt0.c0)) BETWEEN ((CAST(rt0.c4 AS TEXT))) AND ((((rt0.c2)!=(rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c3, rt0.c0)) NOT BETWEEN ((((((rt0.c2)OR(rt0.c2)))OR(rt0.c4)), ((rt0.c3)OR(rt0.c4)), CAST(rt0.c0 AS REAL))) AND ((((x'')>(rt0.c2)), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c4)), ((rt0.c3)>(rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY NULL ASC  NULLS FIRST, (((rt0.c2 COLLATE BINARY, rt0.c3, '-298521912'))!=((((((rt0.c4)OR(rt0.c0)))AND(rt0.c2)), ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3))))) ASC, (((rt0.c0)) BETWEEN ((CAST(rt0.c4 AS TEXT))) AND ((((rt0.c2)<>(rt0.c4))))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c3, rt0.c0)) NOT BETWEEN ((((((rt0.c2)OR(rt0.c2)))OR(rt0.c4)), ((rt0.c3)OR(rt0.c4)), CAST(rt0.c0 AS REAL))) AND ((((x'')>(rt0.c2)), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c4)), ((rt0.c3)>(rt0.c0)))))) ORDER BY NULL ASC  NULLS FIRST, (((rt0.c2 COLLATE BINARY, rt0.c3, '-298521912'))!=((((((rt0.c4)OR(rt0.c0)))AND(rt0.c2)), ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3))))) ASC, (((rt0.c0)) BETWEEN ((CAST(rt0.c4 AS TEXT))) AND ((((rt0.c2)!=(rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c3, rt0.c0)) NOT BETWEEN ((((((rt0.c2)OR(rt0.c2)))OR(rt0.c4)), ((rt0.c3)OR(rt0.c4)), CAST(rt0.c0 AS REAL))) AND ((((x'')>(rt0.c2)), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c4)), ((rt0.c3)>(rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY NULL ASC  NULLS FIRST, (((rt0.c2 COLLATE BINARY, rt0.c3, '-298521912'))!=((((((rt0.c4)OR(rt0.c0)))AND(rt0.c2)), ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3))))) ASC, (((rt0.c0)) BETWEEN ((CAST(rt0.c4 AS TEXT))) AND ((((rt0.c2)<>(rt0.c4))))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c3, rt0.c0)) NOT BETWEEN ((((((rt0.c2)OR(rt0.c2)))OR(rt0.c4)), ((rt0.c3)OR(rt0.c4)), CAST(rt0.c0 AS REAL))) AND ((((x'')>(rt0.c2)), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c4)), ((rt0.c3)>(rt0.c0)))))) ORDER BY NULL ASC  NULLS FIRST, (((rt0.c2 COLLATE BINARY, rt0.c3, '-298521912'))!=((((((rt0.c4)OR(rt0.c0)))AND(rt0.c2)), ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3))))) ASC, (((rt0.c0)) BETWEEN ((CAST(rt0.c4 AS TEXT))) AND ((((rt0.c2)!=(rt0.c4)))));
SELECT ALL * FROM rt1 WHERE (CAST(rt1.c1 COLLATE BINARY AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c1 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(rt1.c1 COLLATE BINARY AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c1 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(rt1.c1 COLLATE BINARY AS INTEGER));
SELECT COUNT(*) FROM rt0, rt1 WHERE (CASE CAST(rt0.c0 AS BLOB)  WHEN (('-151505047')OR('-1355358646')) THEN (((rt0.c3)) BETWEEN ((rt1.c2)) AND ((rt0.c3))) END) ORDER BY ((((rt1.c0)>=(rt1.c1))) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (NULL)), ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))) BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt1.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c0 AS BLOB)  WHEN (('-151505047')OR('-1355358646')) THEN (((rt0.c3)) BETWEEN ((rt1.c2)) AND ((rt0.c3))) END) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt1.c0)>=(rt1.c1))) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (NULL)), ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))) BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt1.c0) IS TRUE))));
SELECT COUNT(*) FROM rt0, rt1 WHERE (CASE CAST(rt0.c0 AS BLOB)  WHEN (('-151505047')OR('-1355358646')) THEN (((rt0.c3)) BETWEEN ((rt1.c2)) AND ((rt0.c3))) END) ORDER BY ((((rt1.c0)>=(rt1.c1))) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (NULL)), ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))) BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt1.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c0 AS BLOB)  WHEN (('-151505047')OR('-1355358646')) THEN (((rt0.c3)) BETWEEN ((rt1.c2)) AND ((rt0.c3))) END) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt1.c0)>=(rt1.c1))) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (NULL)), ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))) BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt1.c0) IS TRUE))));
SELECT COUNT(*) FROM rt0, rt1 WHERE (CASE CAST(rt0.c0 AS BLOB)  WHEN (('-151505047')OR('-1355358646')) THEN (((rt0.c3)) BETWEEN ((rt1.c2)) AND ((rt0.c3))) END) ORDER BY ((((rt1.c0)>=(rt1.c1))) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (NULL)), ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))) BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt1.c0) IS TRUE)));
SELECT * FROM rt0, rt1 WHERE (((((rt1.c0)IS(rt0.c2))) BETWEEN (((rt0.c1)GLOB(rt1.c0))) AND (TRIM(rt0.c2, rt1.c0)))) ORDER BY rt1.c1  NULLS LAST, LTRIM(((((rt1.c0)AND(0xffffffffb1d31452)))OR(rt0.c2)), 0X2a3398df)  NULLS FIRST, (((((((rt0.c4)OR(rt0.c2)))AND(rt0.c3)), (rt1.c1 IN ()), 3.50689768E8))<(('-910452169', ((((rt0.c0)OR(rt1.c1)))AND(rt0.c4)), TRIM(rt0.c2, rt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)IS(rt0.c2))) BETWEEN (((rt0.c1)GLOB(rt1.c0))) AND (TRIM(rt0.c2, rt1.c0)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt1.c1  NULLS LAST, LTRIM(((((rt1.c0)AND(0Xffffffffb1d31452)))OR(rt0.c2)), 0X2a3398df)  NULLS FIRST, (((((((rt0.c4)OR(rt0.c2)))AND(rt0.c3)), (rt1.c1 IN ()), 3.50689768E8))<(('-910452169', ((((rt0.c0)OR(rt1.c1)))AND(rt0.c4)), TRIM(rt0.c2, rt1.c1)))) DESC);
SELECT * FROM rt0, rt1 WHERE (((((rt1.c0)IS(rt0.c2))) BETWEEN (((rt0.c1)GLOB(rt1.c0))) AND (TRIM(rt0.c2, rt1.c0)))) ORDER BY rt1.c1  NULLS LAST, LTRIM(((((rt1.c0)AND(0xffffffffb1d31452)))OR(rt0.c2)), 0X2a3398df)  NULLS FIRST, (((((((rt0.c4)OR(rt0.c2)))AND(rt0.c3)), (rt1.c1 IN ()), 3.50689768E8))<(('-910452169', ((((rt0.c0)OR(rt1.c1)))AND(rt0.c4)), TRIM(rt0.c2, rt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)IS(rt0.c2))) BETWEEN (((rt0.c1)GLOB(rt1.c0))) AND (TRIM(rt0.c2, rt1.c0)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt1.c1  NULLS LAST, LTRIM(((((rt1.c0)AND(0Xffffffffb1d31452)))OR(rt0.c2)), 0X2a3398df)  NULLS FIRST, (((((((rt0.c4)OR(rt0.c2)))AND(rt0.c3)), (rt1.c1 IN ()), 3.50689768E8))<(('-910452169', ((((rt0.c0)OR(rt1.c1)))AND(rt0.c4)), TRIM(rt0.c2, rt1.c1)))) DESC);
SELECT * FROM rt0, rt1 WHERE (((((rt1.c0)IS(rt0.c2))) BETWEEN (((rt0.c1)GLOB(rt1.c0))) AND (TRIM(rt0.c2, rt1.c0)))) ORDER BY rt1.c1  NULLS LAST, LTRIM(((((rt1.c0)AND(0xffffffffb1d31452)))OR(rt0.c2)), 0X2a3398df)  NULLS FIRST, (((((((rt0.c4)OR(rt0.c2)))AND(rt0.c3)), (rt1.c1 IN ()), 3.50689768E8))<(('-910452169', ((((rt0.c0)OR(rt1.c1)))AND(rt0.c4)), TRIM(rt0.c2, rt1.c1)))) DESC;
SELECT COUNT(*) FROM rt0, rt1 WHERE ((+ ((- (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((- (rt0.c1))))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((+ ((- (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((- (rt0.c1))))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((+ ((- (rt0.c1)))));
SELECT * FROM rt1 WHERE ((((((((rt1.c0))!=((rt1.c0))))AND(rt1.c1)))OR(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 END))) ORDER BY CASE WHEN (rt1.c1 IN ()) THEN CAST(rt1.c1 AS BLOB) ELSE ((rt1.c2)<=(rt1.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c0))<>((rt1.c0))))AND(rt1.c1)))OR(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN (rt1.c1 IN ()) THEN CAST(rt1.c1 AS BLOB) ELSE ((rt1.c2)<=(rt1.c2)) END ASC);
SELECT * FROM rt1 WHERE ((((((((rt1.c0))!=((rt1.c0))))AND(rt1.c1)))OR(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 END))) ORDER BY CASE WHEN (rt1.c1 IN ()) THEN CAST(rt1.c1 AS BLOB) ELSE ((rt1.c2)<=(rt1.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c0))<>((rt1.c0))))AND(rt1.c1)))OR(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN (rt1.c1 IN ()) THEN CAST(rt1.c1 AS BLOB) ELSE ((rt1.c2)<=(rt1.c2)) END ASC);
SELECT * FROM rt1 WHERE ((((((((rt1.c0))!=((rt1.c0))))AND(rt1.c1)))OR(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 END))) ORDER BY CASE WHEN (rt1.c1 IN ()) THEN CAST(rt1.c1 AS BLOB) ELSE ((rt1.c2)<=(rt1.c2)) END ASC;
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE (((rt1.c2) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 END) AND (((rt0.c2)IS NOT(rt0.c0))))) ORDER BY ABS(rt1.c2)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c2) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 END) AND (((rt0.c2)IS NOT(rt0.c0))))) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1 ORDER BY ABS(rt1.c2)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE (((rt1.c2) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 END) AND (((rt0.c2)IS NOT(rt0.c0))))) ORDER BY ABS(rt1.c2)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c2) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 END) AND (((rt0.c2)IS NOT(rt0.c0))))) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1 ORDER BY ABS(rt1.c2)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE (((rt1.c2) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 END) AND (((rt0.c2)IS NOT(rt0.c0))))) ORDER BY ABS(rt1.c2)  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c2 AS TEXT)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c2 AS TEXT)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c2 AS TEXT)) IS FALSE));
SELECT ALL COUNT(*) FROM rt1 WHERE (NULLIF(DISTINCT '㥹痤WR蓷⒴', (+ (rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT '㥹痤WR蓷⒴', (+ (rt1.c0)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (NULLIF(DISTINCT '㥹痤WR蓷⒴', (+ (rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT '㥹痤WR蓷⒴', (+ (rt1.c0)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (NULLIF(DISTINCT '㥹痤WR蓷⒴', (+ (rt1.c0))));
SELECT * FROM rt1 NATURAL JOIN rt0 WHERE (((((rt0.c1) IS FALSE)) NOT BETWEEN (((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))AND(rt1.c2)))AND('2I낌[r'))) AND (COALESCE(rt1.c2, rt0.c2)))) ORDER BY x'' ASC, CASE WHEN rt0.c3 THEN CASE WHEN rt0.c3 THEN rt0.c2 ELSE '\n	' END WHEN ((rt1.c1)GLOB(rt1.c0)) THEN (rt0.c1 IN ()) WHEN ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0)) THEN CAST(rt0.c1 AS BLOB) ELSE ((rt1.c0) BETWEEN (rt1.c1) AND (x'')) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) IS FALSE)) NOT BETWEEN (((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))AND(rt1.c2)))AND('2I낌[r'))) AND (COALESCE(rt1.c2, rt0.c2)))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0 ORDER BY x'' ASC, CASE WHEN rt0.c3 THEN CASE WHEN rt0.c3 THEN rt0.c2 ELSE '\n	' END WHEN ((rt1.c1)GLOB(rt1.c0)) THEN (rt0.c1 IN ()) WHEN ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0)) THEN CAST(rt0.c1 AS BLOB) ELSE ((rt1.c0) BETWEEN (rt1.c1) AND (x'')) END DESC  NULLS FIRST);
SELECT * FROM rt1 NATURAL JOIN rt0 WHERE (((((rt0.c1) IS FALSE)) NOT BETWEEN (((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))AND(rt1.c2)))AND('2I낌[r'))) AND (COALESCE(rt1.c2, rt0.c2)))) ORDER BY x'' ASC, CASE WHEN rt0.c3 THEN CASE WHEN rt0.c3 THEN rt0.c2 ELSE '\n	' END WHEN ((rt1.c1)GLOB(rt1.c0)) THEN (rt0.c1 IN ()) WHEN ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0)) THEN CAST(rt0.c1 AS BLOB) ELSE ((rt1.c0) BETWEEN (rt1.c1) AND (x'')) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) IS FALSE)) NOT BETWEEN (((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))AND(rt1.c2)))AND('2I낌[r'))) AND (COALESCE(rt1.c2, rt0.c2)))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0 ORDER BY x'' ASC, CASE WHEN rt0.c3 THEN CASE WHEN rt0.c3 THEN rt0.c2 ELSE '\n	' END WHEN ((rt1.c1)GLOB(rt1.c0)) THEN (rt0.c1 IN ()) WHEN ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0)) THEN CAST(rt0.c1 AS BLOB) ELSE ((rt1.c0) BETWEEN (rt1.c1) AND (x'')) END DESC  NULLS FIRST);
SELECT * FROM rt1 NATURAL JOIN rt0 WHERE (((((rt0.c1) IS FALSE)) NOT BETWEEN (((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))AND(rt1.c2)))AND('2I낌[r'))) AND (COALESCE(rt1.c2, rt0.c2)))) ORDER BY x'' ASC, CASE WHEN rt0.c3 THEN CASE WHEN rt0.c3 THEN rt0.c2 ELSE '\n	' END WHEN ((rt1.c1)GLOB(rt1.c0)) THEN (rt0.c1 IN ()) WHEN ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0)) THEN CAST(rt0.c1 AS BLOB) ELSE ((rt1.c0) BETWEEN (rt1.c1) AND (x'')) END DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CASE WHEN NULL THEN 0X7aeb499d WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 END COLLATE RTRIM) ORDER BY COALESCE(CASE WHEN rt0.c0 THEN rt0.c1 ELSE 0.24816642377500986 END, rt0.c2) DESC, json_array(rt0.c4, CAST(rt0.c1 AS INTEGER), rt0.c3, ((rt0.c0)IS NOT(rt0.c3))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN 0x7aeb499d WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY COALESCE(CASE WHEN rt0.c0 THEN rt0.c1 ELSE 0.24816642377500986 END, rt0.c2) DESC, json_array(rt0.c4, CAST(rt0.c1 AS INTEGER), rt0.c3, ((rt0.c0)IS NOT(rt0.c3))) ASC);
SELECT ALL * FROM rt0 WHERE (CASE WHEN NULL THEN 0X7aeb499d WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 END COLLATE RTRIM) ORDER BY COALESCE(CASE WHEN rt0.c0 THEN rt0.c1 ELSE 0.24816642377500986 END, rt0.c2) DESC, json_array(rt0.c4, CAST(rt0.c1 AS INTEGER), rt0.c3, ((rt0.c0)IS NOT(rt0.c3))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN 0x7aeb499d WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY COALESCE(CASE WHEN rt0.c0 THEN rt0.c1 ELSE 0.24816642377500986 END, rt0.c2) DESC, json_array(rt0.c4, CAST(rt0.c1 AS INTEGER), rt0.c3, ((rt0.c0)IS NOT(rt0.c3))) ASC);
SELECT ALL * FROM rt0 WHERE (CASE WHEN NULL THEN 0X7aeb499d WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 END COLLATE RTRIM) ORDER BY COALESCE(CASE WHEN rt0.c0 THEN rt0.c1 ELSE 0.24816642377500986 END, rt0.c2) DESC, json_array(rt0.c4, CAST(rt0.c1 AS INTEGER), rt0.c3, ((rt0.c0)IS NOT(rt0.c3))) ASC;
SELECT ALL * FROM rt1, rt0 WHERE ((((((rt1.c1)/(NULL))))==((rt0.c0)))) ORDER BY ((~ ('-484739612')) IN (json_array_length(rt0.c2, rt1.c2))) DESC, 0.4650724577415769 DESC, ((((CASE rt0.c2  WHEN rt1.c1 THEN rt0.c0 ELSE rt0.c3 END)AND(CASE rt0.c2  WHEN 0.803599026619489 THEN rt1.c0 WHEN '628898169' THEN rt1.c0 WHEN rt1.c2 THEN rt0.c2 END)))AND(((rt1.c1) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c1)/(NULL))))=((rt0.c0)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((~ ('-484739612')) IN (json_array_length(rt0.c2, rt1.c2))) DESC, 0.4650724577415769 DESC, ((((CASE rt0.c2  WHEN rt1.c1 THEN rt0.c0 ELSE rt0.c3 END)AND(CASE rt0.c2  WHEN 0.803599026619489 THEN rt1.c0 WHEN '628898169' THEN rt1.c0 WHEN rt1.c2 THEN rt0.c2 END)))AND(((rt1.c1) NOTNULL))) DESC);
SELECT ALL * FROM rt1, rt0 WHERE ((((((rt1.c1)/(NULL))))==((rt0.c0)))) ORDER BY ((~ ('-484739612')) IN (json_array_length(rt0.c2, rt1.c2))) DESC, 0.4650724577415769 DESC, ((((CASE rt0.c2  WHEN rt1.c1 THEN rt0.c0 ELSE rt0.c3 END)AND(CASE rt0.c2  WHEN 0.803599026619489 THEN rt1.c0 WHEN '628898169' THEN rt1.c0 WHEN rt1.c2 THEN rt0.c2 END)))AND(((rt1.c1) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c1)/(NULL))))=((rt0.c0)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((~ ('-484739612')) IN (json_array_length(rt0.c2, rt1.c2))) DESC, 0.4650724577415769 DESC, ((((CASE rt0.c2  WHEN rt1.c1 THEN rt0.c0 ELSE rt0.c3 END)AND(CASE rt0.c2  WHEN 0.803599026619489 THEN rt1.c0 WHEN '628898169' THEN rt1.c0 WHEN rt1.c2 THEN rt0.c2 END)))AND(((rt1.c1) NOTNULL))) DESC);
SELECT * FROM rt1, rt0 WHERE (MIN(((rt0.c0)AND(rt0.c2)), (((rt0.c4)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c2))))) ORDER BY x'86e2' DESC;
SELECT SUM(count) FROM (SELECT ((MIN(((rt0.c0)AND(rt0.c2)), (((rt0.c4)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c2))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY x'86e2' DESC);
SELECT * FROM rt1, rt0 WHERE (MIN(((rt0.c0)AND(rt0.c2)), (((rt0.c4)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c2))))) ORDER BY x'86e2' DESC;
SELECT SUM(count) FROM (SELECT ((MIN(((rt0.c0)AND(rt0.c2)), (((rt0.c4)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c2))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY x'86e2' DESC);
SELECT * FROM rt1, rt0 WHERE (MIN(((rt0.c0)AND(rt0.c2)), (((rt0.c4)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c2))))) ORDER BY x'86e2' DESC;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((rt1.c2)-(NULL)) IN ((rt0.c0 IN (rt1.c0, rt1.c2)), ((((((((-1.311566766E9)OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c4)))OR(rt0.c3))))) ORDER BY ((x'') BETWEEN (((rt1.c0)AND(rt0.c1))) AND ((x'' IN (rt1.c1)))) ASC  NULLS LAST, CAST(((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)-(NULL)) IN ((rt0.c0 IN (rt1.c0, rt1.c2)), ((((((((-1.311566766E9)OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c4)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((x'') BETWEEN (((rt1.c0)AND(rt0.c1))) AND ((x'' IN (rt1.c1)))) ASC  NULLS LAST, CAST(((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)) AS BLOB) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((rt1.c2)-(NULL)) IN ((rt0.c0 IN (rt1.c0, rt1.c2)), ((((((((-1.311566766E9)OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c4)))OR(rt0.c3))))) ORDER BY ((x'') BETWEEN (((rt1.c0)AND(rt0.c1))) AND ((x'' IN (rt1.c1)))) ASC  NULLS LAST, CAST(((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)-(NULL)) IN ((rt0.c0 IN (rt1.c0, rt1.c2)), ((((((((-1.311566766E9)OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c4)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((x'') BETWEEN (((rt1.c0)AND(rt0.c1))) AND ((x'' IN (rt1.c1)))) ASC  NULLS LAST, CAST(((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)) AS BLOB) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((rt1.c2)-(NULL)) IN ((rt0.c0 IN (rt1.c0, rt1.c2)), ((((((((-1.311566766E9)OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c4)))OR(rt0.c3))))) ORDER BY ((x'') BETWEEN (((rt1.c0)AND(rt0.c1))) AND ((x'' IN (rt1.c1)))) ASC  NULLS LAST, CAST(((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)) AS BLOB) DESC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE ((((+ ('-941262093')))OR(((0.09239981064655911)<<(rt1.c2))))) ORDER BY (((CAST(rt1.c2 AS NUMERIC)))>((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1))))) DESC;
SELECT SUM(count) FROM (SELECT (((((+ ('-941262093')))OR(((0.09239981064655911)<<(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY (((CAST(rt1.c2 AS NUMERIC)))>((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1))))) DESC);
SELECT ALL * FROM rt1 WHERE ((((+ ('-941262093')))OR(((0.09239981064655911)<<(rt1.c2))))) ORDER BY (((CAST(rt1.c2 AS NUMERIC)))>((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1))))) DESC;
SELECT SUM(count) FROM (SELECT (((((+ ('-941262093')))OR(((0.09239981064655911)<<(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY (((CAST(rt1.c2 AS NUMERIC)))>((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1))))) DESC);
SELECT ALL * FROM rt1 WHERE ((((+ ('-941262093')))OR(((0.09239981064655911)<<(rt1.c2))))) ORDER BY (((CAST(rt1.c2 AS NUMERIC)))>((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1))))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (((rt0.c2)<(2.136942156E9))))) ORDER BY (NOT (rt0.c3)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c2)<(2.136942156E9))))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (rt0.c3)) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (((rt0.c2)<(2.136942156E9))))) ORDER BY (NOT (rt0.c3)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c2)<(2.136942156E9))))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (rt0.c3)) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (((rt0.c2)<(2.136942156E9))))) ORDER BY (NOT (rt0.c3)) COLLATE NOCASE ASC  NULLS LAST;
SELECT ALL * FROM rt1, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (NULL);
SELECT COUNT(*) FROM rt1 WHERE (CASE rt1.c2  WHEN '-1181611951' THEN NULL WHEN '2136942156' THEN rt1.c1 WHEN rt1.c0 THEN x'f73f' ELSE rt1.c1 END COLLATE BINARY) ORDER BY LAST_INSERT_ROWID()  NULLS FIRST, rt1.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c2  WHEN '-1181611951' THEN NULL WHEN '2136942156' THEN rt1.c1 WHEN rt1.c0 THEN x'f73f' ELSE rt1.c1 END COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY LAST_INSERT_ROWID()  NULLS FIRST, rt1.c2 ASC);
SELECT COUNT(*) FROM rt1 WHERE (CASE rt1.c2  WHEN '-1181611951' THEN NULL WHEN '2136942156' THEN rt1.c1 WHEN rt1.c0 THEN x'f73f' ELSE rt1.c1 END COLLATE BINARY) ORDER BY LAST_INSERT_ROWID()  NULLS FIRST, rt1.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c2  WHEN '-1181611951' THEN NULL WHEN '2136942156' THEN rt1.c1 WHEN rt1.c0 THEN x'f73f' ELSE rt1.c1 END COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY LAST_INSERT_ROWID()  NULLS FIRST, rt1.c2 ASC);
SELECT COUNT(*) FROM rt1 WHERE (CASE rt1.c2  WHEN '-1181611951' THEN NULL WHEN '2136942156' THEN rt1.c1 WHEN rt1.c0 THEN x'f73f' ELSE rt1.c1 END COLLATE BINARY) ORDER BY LAST_INSERT_ROWID()  NULLS FIRST, rt1.c2 ASC;
SELECT * FROM rt1 WHERE (DATE(rt1.c0, rt1.c1, rt1.c0) COLLATE RTRIM) ORDER BY (rt1.c1 IN ()) COLLATE NOCASE  NULLS LAST, (((((- (rt1.c1)))AND(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 END)))OR('y<aH*aiPp'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((DATE(rt1.c0, rt1.c1, rt1.c0) COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY (rt1.c1 IN ()) COLLATE NOCASE  NULLS LAST, (((((- (rt1.c1)))AND(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 END)))OR('y<aH*aiPp'))  NULLS FIRST);
SELECT * FROM rt1 WHERE (DATE(rt1.c0, rt1.c1, rt1.c0) COLLATE RTRIM) ORDER BY (rt1.c1 IN ()) COLLATE NOCASE  NULLS LAST, (((((- (rt1.c1)))AND(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 END)))OR('y<aH*aiPp'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((DATE(rt1.c0, rt1.c1, rt1.c0) COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY (rt1.c1 IN ()) COLLATE NOCASE  NULLS LAST, (((((- (rt1.c1)))AND(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 END)))OR('y<aH*aiPp'))  NULLS FIRST);
SELECT * FROM rt1 WHERE (DATE(rt1.c0, rt1.c1, rt1.c0) COLLATE RTRIM) ORDER BY (rt1.c1 IN ()) COLLATE NOCASE  NULLS LAST, (((((- (rt1.c1)))AND(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 END)))OR('y<aH*aiPp'))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((CAST(rt0.c0 AS REAL) IN ())) ORDER BY ((CAST(rt0.c1 AS TEXT))OR((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c0))))) DESC, (((((('	rK/') NOT NULL))AND(rt0.c4)))OR('')) DESC  NULLS FIRST, rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c0 AS REAL) IN ())) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((CAST(rt0.c1 AS TEXT))OR((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c0))))) DESC, (((((('	rK/') NOT NULL))AND(rt0.c4)))OR('')) DESC  NULLS FIRST, rt0.c0 DESC);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((CAST(rt0.c0 AS REAL) IN ())) ORDER BY ((CAST(rt0.c1 AS TEXT))OR((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c0))))) DESC, (((((('	rK/') NOT NULL))AND(rt0.c4)))OR('')) DESC  NULLS FIRST, rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c0 AS REAL) IN ())) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((CAST(rt0.c1 AS TEXT))OR((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c0))))) DESC, (((((('	rK/') NOT NULL))AND(rt0.c4)))OR('')) DESC  NULLS FIRST, rt0.c0 DESC);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((CAST(rt0.c0 AS REAL) IN ())) ORDER BY ((CAST(rt0.c1 AS TEXT))OR((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c0))))) DESC, (((((('	rK/') NOT NULL))AND(rt0.c4)))OR('')) DESC  NULLS FIRST, rt0.c0 DESC;
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt1.c1 COLLATE RTRIM)AND(IFNULL(DISTINCT rt0.c0, rt1.c1))))AND(((rt1.c0)<(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1 COLLATE RTRIM)AND(IFNULL(DISTINCT rt0.c0, rt1.c1))))AND(((rt1.c0)<(rt1.c2))))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt1.c1 COLLATE RTRIM)AND(IFNULL(DISTINCT rt0.c0, rt1.c1))))AND(((rt1.c0)<(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1 COLLATE RTRIM)AND(IFNULL(DISTINCT rt0.c0, rt1.c1))))AND(((rt1.c0)<(rt1.c2))))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt1.c1 COLLATE RTRIM)AND(IFNULL(DISTINCT rt0.c0, rt1.c1))))AND(((rt1.c0)<(rt1.c2)))));
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c3))=((rt0.c3)))) BETWEEN (((rt0.c2)<(rt0.c2))) AND (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END))) ORDER BY ((((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c4))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3))==((rt0.c3)))) BETWEEN (((rt0.c2)<(rt0.c2))) AND (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c4))) IS FALSE)  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c3))=((rt0.c3)))) BETWEEN (((rt0.c2)<(rt0.c2))) AND (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END))) ORDER BY ((((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c4))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3))==((rt0.c3)))) BETWEEN (((rt0.c2)<(rt0.c2))) AND (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c4))) IS FALSE)  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c3))=((rt0.c3)))) BETWEEN (((rt0.c2)<(rt0.c2))) AND (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END))) ORDER BY ((((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c4))) IS FALSE)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((CAST(rt1.c1 AS INTEGER))) AND ((rt0.c2 COLLATE BINARY))) WHERE ((((rt0.c3 IN ())) IS TRUE)) ORDER BY CAST(rt0.c1 AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN ())) IS TRUE)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((CAST(rt1.c1 AS INTEGER))) AND ((rt0.c2 COLLATE BINARY))) ORDER BY CAST(rt0.c1 AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((CAST(rt1.c1 AS INTEGER))) AND ((rt0.c2 COLLATE BINARY))) WHERE ((((rt0.c3 IN ())) IS TRUE)) ORDER BY CAST(rt0.c1 AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN ())) IS TRUE)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((CAST(rt1.c1 AS INTEGER))) AND ((rt0.c2 COLLATE BINARY))) ORDER BY CAST(rt0.c1 AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((CAST(rt1.c1 AS INTEGER))) AND ((rt0.c2 COLLATE BINARY))) WHERE ((((rt0.c3 IN ())) IS TRUE)) ORDER BY CAST(rt0.c1 AS BLOB)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CASE WHEN CAST(rt1.c2 AS REAL) THEN '' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt1.c2 AS REAL) THEN '' END) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CASE WHEN CAST(rt1.c2 AS REAL) THEN '' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt1.c2 AS REAL) THEN '' END) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CASE WHEN CAST(rt1.c2 AS REAL) THEN '' END);
SELECT * FROM rt0, rt1 WHERE (TRIM(ABS('y<ah*aipp'))) ORDER BY rt1.c1  NULLS FIRST, ((((rt0.c4) BETWEEN (rt1.c1) AND (rt0.c4)))*(((x'')=(x''))));
SELECT SUM(count) FROM (SELECT ((TRIM(ABS('y<ah*aipp'))) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt1.c1  NULLS FIRST, ((((rt0.c4) BETWEEN (rt1.c1) AND (rt0.c4)))*(((x'')==(x'')))));
SELECT * FROM rt0, rt1 WHERE (TRIM(ABS('y<ah*aipp'))) ORDER BY rt1.c1  NULLS FIRST, ((((rt0.c4) BETWEEN (rt1.c1) AND (rt0.c4)))*(((x'')=(x''))));
SELECT SUM(count) FROM (SELECT ((TRIM(ABS('y<ah*aipp'))) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt1.c1  NULLS FIRST, ((((rt0.c4) BETWEEN (rt1.c1) AND (rt0.c4)))*(((x'')==(x'')))));
SELECT * FROM rt0, rt1 WHERE (TRIM(ABS('y<ah*aipp'))) ORDER BY rt1.c1  NULLS FIRST, ((((rt0.c4) BETWEEN (rt1.c1) AND (rt0.c4)))*(((x'')=(x''))));
SELECT * FROM rt0 WHERE ((((((- (rt0.c2)))AND(rt0.c4)))AND((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((0.2715591331384932)))))) ORDER BY (((((rt0.c3, rt0.c3, rt0.c0))>=((rt0.c4, rt0.c2, x'f96b')))) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c1)LIKE(rt0.c4))));
SELECT SUM(count) FROM (SELECT (((((((- (rt0.c2)))AND(rt0.c4)))AND((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((0.2715591331384932)))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c3, rt0.c3, rt0.c0))>=((rt0.c4, rt0.c2, x'f96b')))) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c1)LIKE(rt0.c4)))));
SELECT * FROM rt0 WHERE ((((((- (rt0.c2)))AND(rt0.c4)))AND((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((0.2715591331384932)))))) ORDER BY (((((rt0.c3, rt0.c3, rt0.c0))>=((rt0.c4, rt0.c2, x'f96b')))) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c1)LIKE(rt0.c4))));
SELECT SUM(count) FROM (SELECT (((((((- (rt0.c2)))AND(rt0.c4)))AND((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((0.2715591331384932)))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c3, rt0.c3, rt0.c0))>=((rt0.c4, rt0.c2, x'f96b')))) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c1)LIKE(rt0.c4)))));
SELECT * FROM rt0 WHERE ((((((- (rt0.c2)))AND(rt0.c4)))AND((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((0.2715591331384932)))))) ORDER BY (((((rt0.c3, rt0.c3, rt0.c0))>=((rt0.c4, rt0.c2, x'f96b')))) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c1)LIKE(rt0.c4))));
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, rt1 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, rt1 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, rt1 WHERE (rt0.c2);
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c4 COLLATE NOCASE  WHEN rt0.c0 THEN (('1373252731') NOT BETWEEN (x'') AND (rt0.c3)) ELSE CASE WHEN rt0.c1 THEN rt0.c2 END END) ORDER BY CAST(rt0.c1 AS BLOB) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c4 COLLATE NOCASE  WHEN rt0.c0 THEN (('1373252731') NOT BETWEEN (x'') AND (rt0.c3)) ELSE CASE WHEN rt0.c1 THEN rt0.c2 END END) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c1 AS BLOB) COLLATE BINARY ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c4 COLLATE NOCASE  WHEN rt0.c0 THEN (('1373252731') NOT BETWEEN (x'') AND (rt0.c3)) ELSE CASE WHEN rt0.c1 THEN rt0.c2 END END) ORDER BY CAST(rt0.c1 AS BLOB) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c4 COLLATE NOCASE  WHEN rt0.c0 THEN (('1373252731') NOT BETWEEN (x'') AND (rt0.c3)) ELSE CASE WHEN rt0.c1 THEN rt0.c2 END END) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c1 AS BLOB) COLLATE BINARY ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c4 COLLATE NOCASE  WHEN rt0.c0 THEN (('1373252731') NOT BETWEEN (x'') AND (rt0.c3)) ELSE CASE WHEN rt0.c1 THEN rt0.c2 END END) ORDER BY CAST(rt0.c1 AS BLOB) COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (rt0.c1)) COLLATE NOCASE) ORDER BY (NOT (((NULL) BETWEEN (rt0.c4) AND (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((NULL) BETWEEN (rt0.c4) AND (rt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (rt0.c1)) COLLATE NOCASE) ORDER BY (NOT (((NULL) BETWEEN (rt0.c4) AND (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((NULL) BETWEEN (rt0.c4) AND (rt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (rt0.c1)) COLLATE NOCASE) ORDER BY (NOT (((NULL) BETWEEN (rt0.c4) AND (rt0.c0))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (CASE CAST(rt0.c0 AS TEXT)  WHEN ((rt0.c2)|(rt0.c1)) THEN rt0.c3 COLLATE RTRIM WHEN ((((((((rt0.c1)OR(x'7194')))AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c1)) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) WHEN LIKELIHOOD(rt0.c3, 0.0016411967168058483) THEN LIKELIHOOD(rt0.c1, 0.19855448293637) ELSE (((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c0 AS TEXT)  WHEN ((rt0.c2)|(rt0.c1)) THEN rt0.c3 COLLATE RTRIM WHEN ((((((((rt0.c1)OR(x'7194')))AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c1)) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) WHEN LIKELIHOOD(rt0.c3, 0.0016411967168058483) THEN LIKELIHOOD(rt0.c1, 0.19855448293637) ELSE (((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c0))) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE CAST(rt0.c0 AS TEXT)  WHEN ((rt0.c2)|(rt0.c1)) THEN rt0.c3 COLLATE RTRIM WHEN ((((((((rt0.c1)OR(x'7194')))AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c1)) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) WHEN LIKELIHOOD(rt0.c3, 0.0016411967168058483) THEN LIKELIHOOD(rt0.c1, 0.19855448293637) ELSE (((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c0 AS TEXT)  WHEN ((rt0.c2)|(rt0.c1)) THEN rt0.c3 COLLATE RTRIM WHEN ((((((((rt0.c1)OR(x'7194')))AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c1)) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) WHEN LIKELIHOOD(rt0.c3, 0.0016411967168058483) THEN LIKELIHOOD(rt0.c1, 0.19855448293637) ELSE (((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c0))) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE CAST(rt0.c0 AS TEXT)  WHEN ((rt0.c2)|(rt0.c1)) THEN rt0.c3 COLLATE RTRIM WHEN ((((((((rt0.c1)OR(x'7194')))AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c1)) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) WHEN LIKELIHOOD(rt0.c3, 0.0016411967168058483) THEN LIKELIHOOD(rt0.c1, 0.19855448293637) ELSE (((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c0))) END);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt0.c4) ISNULL)) NOT NULL)) ORDER BY (((rt0.c1)-(rt0.c1)) IN ((- (rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) ISNULL)) NOT NULL)) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt0.c1)-(rt0.c1)) IN ((- (rt1.c2)))) ASC);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt0.c4) ISNULL)) NOT NULL)) ORDER BY (((rt0.c1)-(rt0.c1)) IN ((- (rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) ISNULL)) NOT NULL)) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt0.c1)-(rt0.c1)) IN ((- (rt1.c2)))) ASC);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt0.c4) ISNULL)) NOT NULL)) ORDER BY (((rt0.c1)-(rt0.c1)) IN ((- (rt1.c2)))) ASC;
SELECT * FROM rt1 WHERE ((((CAST(rt1.c0 AS TEXT)))>((rt1.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((CAST(rt1.c0 AS TEXT)))>((rt1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((CAST(rt1.c0 AS TEXT)))>((rt1.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((CAST(rt1.c0 AS TEXT)))>((rt1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((CAST(rt1.c0 AS TEXT)))>((rt1.c0 COLLATE RTRIM))));
SELECT * FROM rt0 WHERE ((((0.5662219280529107, rt0.c0, 0Xffffffffe215b775)) BETWEEN ((((rt0.c3) NOTNULL), rt0.c2, ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c0)))) AND ((CAST(rt0.c2 AS NUMERIC), (rt0.c2 IN ()), (((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3)))))));
SELECT SUM(count) FROM (SELECT (((((0.5662219280529107, rt0.c0, 0xffffffffe215b775)) BETWEEN ((((rt0.c3) NOTNULL), rt0.c2, ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c0)))) AND ((CAST(rt0.c2 AS NUMERIC), (rt0.c2 IN ()), (((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3))))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((0.5662219280529107, rt0.c0, 0Xffffffffe215b775)) BETWEEN ((((rt0.c3) NOTNULL), rt0.c2, ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c0)))) AND ((CAST(rt0.c2 AS NUMERIC), (rt0.c2 IN ()), (((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3)))))));
SELECT SUM(count) FROM (SELECT (((((0.5662219280529107, rt0.c0, 0xffffffffe215b775)) BETWEEN ((((rt0.c3) NOTNULL), rt0.c2, ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c0)))) AND ((CAST(rt0.c2 AS NUMERIC), (rt0.c2 IN ()), (((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3))))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((0.5662219280529107, rt0.c0, 0Xffffffffe215b775)) BETWEEN ((((rt0.c3) NOTNULL), rt0.c2, ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c0)))) AND ((CAST(rt0.c2 AS NUMERIC), (rt0.c2 IN ()), (((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3)))))));
SELECT ALL * FROM rt0 WHERE ((- ((('ZsV\r') ISNULL)))) ORDER BY ((((((((((rt0.c3)AND(rt0.c4)))OR(NULL)))OR(rt0.c3)))OR(rt0.c4)))AND(((((((((((((x'')AND(rt0.c0)))AND('0.4853460983961102')))OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c4)))), (x'' IN ()) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((('ZsV\r') ISNULL)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c3)AND(rt0.c4)))OR(NULL)))OR(rt0.c3)))OR(rt0.c4)))AND(((((((((((((x'')AND(rt0.c0)))AND('0.4853460983961102')))OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c4)))), (x'' IN ()) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((- ((('ZsV\r') ISNULL)))) ORDER BY ((((((((((rt0.c3)AND(rt0.c4)))OR(NULL)))OR(rt0.c3)))OR(rt0.c4)))AND(((((((((((((x'')AND(rt0.c0)))AND('0.4853460983961102')))OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c4)))), (x'' IN ()) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((('ZsV\r') ISNULL)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c3)AND(rt0.c4)))OR(NULL)))OR(rt0.c3)))OR(rt0.c4)))AND(((((((((((((x'')AND(rt0.c0)))AND('0.4853460983961102')))OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c4)))), (x'' IN ()) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((- ((('ZsV\r') ISNULL)))) ORDER BY ((((((((((rt0.c3)AND(rt0.c4)))OR(NULL)))OR(rt0.c3)))OR(rt0.c4)))AND(((((((((((((x'')AND(rt0.c0)))AND('0.4853460983961102')))OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c4)))), (x'' IN ()) COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((rt0.c0 IN (rt0.c0, rt1.c2))) BETWEEN (((((((((rt1.c1)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1))) AND (CAST(rt0.c2 AS TEXT)))) ORDER BY ((rt0.c4) BETWEEN (rt1.c0) AND (rt0.c2)) COLLATE RTRIM  NULLS FIRST, rt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (rt0.c0, rt1.c2))) BETWEEN (((((((((rt1.c1)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1))) AND (CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((rt0.c4) BETWEEN (rt1.c0) AND (rt0.c2)) COLLATE RTRIM  NULLS FIRST, rt0.c1 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((rt0.c0 IN (rt0.c0, rt1.c2))) BETWEEN (((((((((rt1.c1)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1))) AND (CAST(rt0.c2 AS TEXT)))) ORDER BY ((rt0.c4) BETWEEN (rt1.c0) AND (rt0.c2)) COLLATE RTRIM  NULLS FIRST, rt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (rt0.c0, rt1.c2))) BETWEEN (((((((((rt1.c1)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1))) AND (CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((rt0.c4) BETWEEN (rt1.c0) AND (rt0.c2)) COLLATE RTRIM  NULLS FIRST, rt0.c1 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((rt0.c0 IN (rt0.c0, rt1.c2))) BETWEEN (((((((((rt1.c1)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1))) AND (CAST(rt0.c2 AS TEXT)))) ORDER BY ((rt0.c4) BETWEEN (rt1.c0) AND (rt0.c2)) COLLATE RTRIM  NULLS FIRST, rt0.c1 DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (TYPEOF(DISTINCT ((((rt0.c2)OR(rt0.c3)))OR(rt0.c1)))) ORDER BY CAST(((rt0.c1)%(rt0.c3)) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((((rt0.c2)OR(rt0.c3)))OR(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c1)%(rt0.c3)) AS TEXT) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (TYPEOF(DISTINCT ((((rt0.c2)OR(rt0.c3)))OR(rt0.c1)))) ORDER BY CAST(((rt0.c1)%(rt0.c3)) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((((rt0.c2)OR(rt0.c3)))OR(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c1)%(rt0.c3)) AS TEXT) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (TYPEOF(DISTINCT ((((rt0.c2)OR(rt0.c3)))OR(rt0.c1)))) ORDER BY CAST(((rt0.c1)%(rt0.c3)) AS TEXT) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((rt0.c2)) BETWEEN ((((rt1.c2) IS FALSE))) AND ((((((rt0.c2)OR(0xffffffffee34eac8)))OR(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((((rt1.c2) IS FALSE))) AND ((((((rt0.c2)OR(0Xffffffffee34eac8)))OR(rt0.c1)))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((rt0.c2)) BETWEEN ((((rt1.c2) IS FALSE))) AND ((((((rt0.c2)OR(0xffffffffee34eac8)))OR(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((((rt1.c2) IS FALSE))) AND ((((((rt0.c2)OR(0Xffffffffee34eac8)))OR(rt0.c1)))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((rt0.c2)) BETWEEN ((((rt1.c2) IS FALSE))) AND ((((((rt0.c2)OR(0xffffffffee34eac8)))OR(rt0.c1))))));
SELECT ALL * FROM rt1, rt0 WHERE (CASE 'O6s'  WHEN ((((rt0.c1)AND(rt1.c1)))OR(rt1.c1)) THEN rt1.c0 ELSE rt0.c4 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE 'O6s'  WHEN ((((rt0.c1)AND(rt1.c1)))OR(rt1.c1)) THEN rt1.c0 ELSE rt0.c4 COLLATE BINARY END) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (CASE 'O6s'  WHEN ((((rt0.c1)AND(rt1.c1)))OR(rt1.c1)) THEN rt1.c0 ELSE rt0.c4 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE 'O6s'  WHEN ((((rt0.c1)AND(rt1.c1)))OR(rt1.c1)) THEN rt1.c0 ELSE rt0.c4 COLLATE BINARY END) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (CASE 'O6s'  WHEN ((((rt0.c1)AND(rt1.c1)))OR(rt1.c1)) THEN rt1.c0 ELSE rt0.c4 COLLATE BINARY END);
SELECT * FROM rt1, rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c1))))IS(CAST(rt1.c0 AS TEXT)))) ORDER BY (('-89130010') NOT BETWEEN (((NULL)/(rt0.c0))) AND (''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c1))))IS(CAST(rt1.c0 AS TEXT)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (('-89130010') NOT BETWEEN (((NULL)/(rt0.c0))) AND (''))  NULLS FIRST);
SELECT * FROM rt1, rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c1))))IS(CAST(rt1.c0 AS TEXT)))) ORDER BY (('-89130010') NOT BETWEEN (((NULL)/(rt0.c0))) AND (''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c1))))IS(CAST(rt1.c0 AS TEXT)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (('-89130010') NOT BETWEEN (((NULL)/(rt0.c0))) AND (''))  NULLS FIRST);
SELECT * FROM rt1, rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c1))))IS(CAST(rt1.c0 AS TEXT)))) ORDER BY (('-89130010') NOT BETWEEN (((NULL)/(rt0.c0))) AND (''))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CHANGES());
SELECT ALL * FROM rt1 WHERE ((((rt1.c2 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN ())) NOTNULL)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c2 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN ())) NOTNULL)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c2 IN ())) NOTNULL));
SELECT * FROM rt0 WHERE (CASE WHEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c4 END THEN (~ (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c4 END THEN (~ (rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c4 END THEN (~ (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c4 END THEN (~ (rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c4 END THEN (~ (rt0.c2)) END);
SELECT ALL * FROM rt0 WHERE (((0.250830634726788)LIKE(((rt0.c3)IS NOT(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.250830634726788)LIKE(((rt0.c3)IS NOT(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((0.250830634726788)LIKE(((rt0.c3)IS NOT(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.250830634726788)LIKE(((rt0.c3)IS NOT(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((0.250830634726788)LIKE(((rt0.c3)IS NOT(rt0.c3)))));
SELECT * FROM rt0 WHERE (((((rt0.c1 COLLATE BINARY)AND(((rt0.c3)IS(rt0.c2)))))OR(((rt0.c1)AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 COLLATE BINARY)AND(((rt0.c3)IS(rt0.c2)))))OR(((rt0.c1)AND(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1 COLLATE BINARY)AND(((rt0.c3)IS(rt0.c2)))))OR(((rt0.c1)AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 COLLATE BINARY)AND(((rt0.c3)IS(rt0.c2)))))OR(((rt0.c1)AND(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1 COLLATE BINARY)AND(((rt0.c3)IS(rt0.c2)))))OR(((rt0.c1)AND(rt0.c3)))));
SELECT * FROM rt1 CROSS JOIN rt0 ON LIKELIHOOD(((rt1.c2)<=(rt0.c2)), 0.2254501573763299) WHERE ((NOT (((rt0.c2)<<(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c2)<<(rt1.c0))))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON LIKELIHOOD(((rt1.c2)<=(rt0.c2)), 0.2254501573763299));
SELECT * FROM rt1 CROSS JOIN rt0 ON LIKELIHOOD(((rt1.c2)<=(rt0.c2)), 0.2254501573763299) WHERE ((NOT (((rt0.c2)<<(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c2)<<(rt1.c0))))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON LIKELIHOOD(((rt1.c2)<=(rt0.c2)), 0.2254501573763299));
SELECT * FROM rt1 CROSS JOIN rt0 ON LIKELIHOOD(((rt1.c2)<=(rt0.c2)), 0.2254501573763299) WHERE ((NOT (((rt0.c2)<<(rt1.c0)))));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((((x''))==((rt1.c0)))) NOT BETWEEN (((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c4))) AND (((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))))) ORDER BY CAST(((x'') NOT BETWEEN (rt1.c2) AND (rt0.c4)) AS INTEGER)  NULLS LAST, ((((rt0.c3)+(0.37132766819024754))) BETWEEN (CAST(rt1.c2 AS INTEGER)) AND (rt1.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((x''))==((rt1.c0)))) NOT BETWEEN (((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c4))) AND (((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST(((x'') NOT BETWEEN (rt1.c2) AND (rt0.c4)) AS INTEGER)  NULLS LAST, ((((rt0.c3)+(0.37132766819024754))) BETWEEN (CAST(rt1.c2 AS INTEGER)) AND (rt1.c0 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((((x''))==((rt1.c0)))) NOT BETWEEN (((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c4))) AND (((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))))) ORDER BY CAST(((x'') NOT BETWEEN (rt1.c2) AND (rt0.c4)) AS INTEGER)  NULLS LAST, ((((rt0.c3)+(0.37132766819024754))) BETWEEN (CAST(rt1.c2 AS INTEGER)) AND (rt1.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((x''))==((rt1.c0)))) NOT BETWEEN (((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c4))) AND (((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST(((x'') NOT BETWEEN (rt1.c2) AND (rt0.c4)) AS INTEGER)  NULLS LAST, ((((rt0.c3)+(0.37132766819024754))) BETWEEN (CAST(rt1.c2 AS INTEGER)) AND (rt1.c0 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((((x''))==((rt1.c0)))) NOT BETWEEN (((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c4))) AND (((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))))) ORDER BY CAST(((x'') NOT BETWEEN (rt1.c2) AND (rt0.c4)) AS INTEGER)  NULLS LAST, ((((rt0.c3)+(0.37132766819024754))) BETWEEN (CAST(rt1.c2 AS INTEGER)) AND (rt1.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c4)))AND(CAST(rt0.c1 AS BLOB))))OR('157702617')));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c4)))AND(CAST(rt0.c1 AS BLOB))))OR('157702617'))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c4)))AND(CAST(rt0.c1 AS BLOB))))OR('157702617')));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c4)))AND(CAST(rt0.c1 AS BLOB))))OR('157702617'))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c4)))AND(CAST(rt0.c1 AS BLOB))))OR('157702617')));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (LIKELIHOOD(0.13508517189142377, 0.37518545940545356)) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(0.13508517189142377, 0.37518545940545356)) IS TRUE)  as count FROM rt1, rt0 ORDER BY rt0.c1 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (LIKELIHOOD(0.13508517189142377, 0.37518545940545356)) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(0.13508517189142377, 0.37518545940545356)) IS TRUE)  as count FROM rt1, rt0 ORDER BY rt0.c1 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (LIKELIHOOD(0.13508517189142377, 0.37518545940545356)) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c1)*(rt1.c0))) BETWEEN (((rt1.c1)>>(rt1.c1))) AND (rt1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)*(rt1.c0))) BETWEEN (((rt1.c1)>>(rt1.c1))) AND (rt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c1)*(rt1.c0))) BETWEEN (((rt1.c1)>>(rt1.c1))) AND (rt1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)*(rt1.c0))) BETWEEN (((rt1.c1)>>(rt1.c1))) AND (rt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c1)*(rt1.c0))) BETWEEN (((rt1.c1)>>(rt1.c1))) AND (rt1.c1 COLLATE RTRIM)));
SELECT ALL * FROM rt1, rt0 WHERE (((((((rt0.c0)AND(0.5119300251561776)))AND(rt1.c0))) NOT BETWEEN (x'') AND ((rt1.c1 IN ('1050957277', rt1.c0))))) ORDER BY ((CAST(rt0.c4 AS BLOB))IS((((rt1.c2))!=((rt0.c0))))) ASC  NULLS LAST, x'4a77' ASC, HEX(rt0.c0) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(0.5119300251561776)))AND(rt1.c0))) NOT BETWEEN (x'') AND ((rt1.c1 IN ('1050957277', rt1.c0))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((CAST(rt0.c4 AS BLOB))IS((((rt1.c2))<>((rt0.c0))))) ASC  NULLS LAST, x'4a77' ASC, HEX(rt0.c0) COLLATE RTRIM ASC);
SELECT ALL * FROM rt1, rt0 WHERE (((((((rt0.c0)AND(0.5119300251561776)))AND(rt1.c0))) NOT BETWEEN (x'') AND ((rt1.c1 IN ('1050957277', rt1.c0))))) ORDER BY ((CAST(rt0.c4 AS BLOB))IS((((rt1.c2))!=((rt0.c0))))) ASC  NULLS LAST, x'4a77' ASC, HEX(rt0.c0) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(0.5119300251561776)))AND(rt1.c0))) NOT BETWEEN (x'') AND ((rt1.c1 IN ('1050957277', rt1.c0))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((CAST(rt0.c4 AS BLOB))IS((((rt1.c2))<>((rt0.c0))))) ASC  NULLS LAST, x'4a77' ASC, HEX(rt0.c0) COLLATE RTRIM ASC);
SELECT ALL * FROM rt1, rt0 WHERE (((((((rt0.c0)AND(0.5119300251561776)))AND(rt1.c0))) NOT BETWEEN (x'') AND ((rt1.c1 IN ('1050957277', rt1.c0))))) ORDER BY ((CAST(rt0.c4 AS BLOB))IS((((rt1.c2))!=((rt0.c0))))) ASC  NULLS LAST, x'4a77' ASC, HEX(rt0.c0) COLLATE RTRIM ASC;
SELECT COUNT(*) FROM rt0 WHERE (((load_extension(rt0.c2, rt0.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((load_extension(rt0.c2, rt0.c0)) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((load_extension(rt0.c2, rt0.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((load_extension(rt0.c2, rt0.c0)) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0, rt1 WHERE (rt1.c1) ORDER BY (((((rt0.c1))>=((rt0.c2)))) BETWEEN (((rt0.c1)GLOB(rt0.c4))) AND (((rt1.c1) BETWEEN (rt0.c3) AND (rt0.c4))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((((rt0.c1))>=((rt0.c2)))) BETWEEN (((rt0.c1)GLOB(rt0.c4))) AND (((rt1.c1) BETWEEN (rt0.c3) AND (rt0.c4))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (rt1.c1) ORDER BY (((((rt0.c1))>=((rt0.c2)))) BETWEEN (((rt0.c1)GLOB(rt0.c4))) AND (((rt1.c1) BETWEEN (rt0.c3) AND (rt0.c4))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((((rt0.c1))>=((rt0.c2)))) BETWEEN (((rt0.c1)GLOB(rt0.c4))) AND (((rt1.c1) BETWEEN (rt0.c3) AND (rt0.c4))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (rt1.c1) ORDER BY (((((rt0.c1))>=((rt0.c2)))) BETWEEN (((rt0.c1)GLOB(rt0.c4))) AND (((rt1.c1) BETWEEN (rt0.c3) AND (rt0.c4))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(((rt1.c1)-(rt1.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1)-(rt1.c2)) AS REAL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(((rt1.c1)-(rt1.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1)-(rt1.c2)) AS REAL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(((rt1.c1)-(rt1.c2)) AS REAL));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END COLLATE RTRIM) ORDER BY CASE ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c2))  WHEN (rt0.c1 IN ()) THEN ((rt0.c4) ISNULL) END  NULLS FIRST, ((NULL) NOT BETWEEN (((rt0.c4) IS FALSE)) AND (CASE WHEN rt0.c1 THEN rt0.c4 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c2))  WHEN (rt0.c1 IN ()) THEN ((rt0.c4) ISNULL) END  NULLS FIRST, ((NULL) NOT BETWEEN (((rt0.c4) IS FALSE)) AND (CASE WHEN rt0.c1 THEN rt0.c4 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END COLLATE RTRIM) ORDER BY CASE ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c2))  WHEN (rt0.c1 IN ()) THEN ((rt0.c4) ISNULL) END  NULLS FIRST, ((NULL) NOT BETWEEN (((rt0.c4) IS FALSE)) AND (CASE WHEN rt0.c1 THEN rt0.c4 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c2))  WHEN (rt0.c1 IN ()) THEN ((rt0.c4) ISNULL) END  NULLS FIRST, ((NULL) NOT BETWEEN (((rt0.c4) IS FALSE)) AND (CASE WHEN rt0.c1 THEN rt0.c4 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END COLLATE RTRIM) ORDER BY CASE ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c2))  WHEN (rt0.c1 IN ()) THEN ((rt0.c4) ISNULL) END  NULLS FIRST, ((NULL) NOT BETWEEN (((rt0.c4) IS FALSE)) AND (CASE WHEN rt0.c1 THEN rt0.c4 END)) DESC  NULLS LAST;
SELECT * FROM rt1 NATURAL JOIN rt0 WHERE (((((((rt1.c1)*(rt0.c0)))OR(((((rt0.c3)AND(rt0.c4)))AND(x'')))))OR((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)*(rt0.c0)))OR(((((rt0.c3)AND(rt0.c4)))AND(x'')))))OR((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT * FROM rt1 NATURAL JOIN rt0 WHERE (((((((rt1.c1)*(rt0.c0)))OR(((((rt0.c3)AND(rt0.c4)))AND(x'')))))OR((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)*(rt0.c0)))OR(((((rt0.c3)AND(rt0.c4)))AND(x'')))))OR((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT * FROM rt1 NATURAL JOIN rt0 WHERE (((((((rt1.c1)*(rt0.c0)))OR(((((rt0.c3)AND(rt0.c4)))AND(x'')))))OR((rt1.c2 IN ()))));
SELECT * FROM rt1 NATURAL JOIN rt0 WHERE (((rt0.c1 COLLATE NOCASE)IS(rt0.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE NOCASE)IS(rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT * FROM rt1 NATURAL JOIN rt0 WHERE (((rt0.c1 COLLATE NOCASE)IS(rt0.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE NOCASE)IS(rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT * FROM rt1 NATURAL JOIN rt0 WHERE (((rt0.c1 COLLATE NOCASE)IS(rt0.c3 COLLATE NOCASE)));
SELECT * FROM rt1, rt0 WHERE ((((rt0.c1, rt0.c0, '\ne')) BETWEEN (((rt1.c1 IN ()), CASE rt1.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c4 END, CAST(rt0.c4 AS TEXT))) AND ((((rt0.c0)OR(rt1.c0)), (- (rt0.c2)), HEX(DISTINCT 0.8834008775367419)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c0, '\ne')) BETWEEN (((rt1.c1 IN ()), CASE rt1.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c4 END, CAST(rt0.c4 AS TEXT))) AND ((((rt0.c0)OR(rt1.c0)), (- (rt0.c2)), HEX(DISTINCT 0.8834008775367419))))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE ((((rt0.c1, rt0.c0, '\ne')) BETWEEN (((rt1.c1 IN ()), CASE rt1.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c4 END, CAST(rt0.c4 AS TEXT))) AND ((((rt0.c0)OR(rt1.c0)), (- (rt0.c2)), HEX(DISTINCT 0.8834008775367419)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c0, '\ne')) BETWEEN (((rt1.c1 IN ()), CASE rt1.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c4 END, CAST(rt0.c4 AS TEXT))) AND ((((rt0.c0)OR(rt1.c0)), (- (rt0.c2)), HEX(DISTINCT 0.8834008775367419))))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE ((((rt0.c1, rt0.c0, '\ne')) BETWEEN (((rt1.c1 IN ()), CASE rt1.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c4 END, CAST(rt0.c4 AS TEXT))) AND ((((rt0.c0)OR(rt1.c0)), (- (rt0.c2)), HEX(DISTINCT 0.8834008775367419)))));
SELECT * FROM rt0 WHERE (((((rt0.c2 COLLATE RTRIM)OR(((rt0.c4)%(rt0.c4)))))AND(CASE rt0.c4  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c4 END))) ORDER BY ((((rt0.c3)OR(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)))))AND(rt0.c2))  NULLS FIRST, CAST(((rt0.c4) NOTNULL) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2 COLLATE RTRIM)OR(((rt0.c4)%(rt0.c4)))))AND(CASE rt0.c4  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c4 END))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)OR(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)))))AND(rt0.c2))  NULLS FIRST, CAST(((rt0.c4) NOTNULL) AS BLOB) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (((((rt0.c2 COLLATE RTRIM)OR(((rt0.c4)%(rt0.c4)))))AND(CASE rt0.c4  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c4 END))) ORDER BY ((((rt0.c3)OR(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)))))AND(rt0.c2))  NULLS FIRST, CAST(((rt0.c4) NOTNULL) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2 COLLATE RTRIM)OR(((rt0.c4)%(rt0.c4)))))AND(CASE rt0.c4  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c4 END))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)OR(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)))))AND(rt0.c2))  NULLS FIRST, CAST(((rt0.c4) NOTNULL) AS BLOB) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (((((rt0.c2 COLLATE RTRIM)OR(((rt0.c4)%(rt0.c4)))))AND(CASE rt0.c4  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c4 END))) ORDER BY ((((rt0.c3)OR(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)))))AND(rt0.c2))  NULLS FIRST, CAST(((rt0.c4) NOTNULL) AS BLOB) DESC  NULLS LAST;
SELECT ALL * FROM rt0, rt1 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))))AND(((rt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))))AND(((rt1.c0) IS TRUE)))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))))AND(((rt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))))AND(((rt1.c0) IS TRUE)))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))))AND(((rt1.c0) IS TRUE))));
SELECT * FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c3);
SELECT ALL * FROM rt1 WHERE ((- ((((rt1.c0, rt1.c2, rt1.c2))>((rt1.c1, rt1.c0, rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((rt1.c0, rt1.c2, rt1.c2))>((rt1.c1, rt1.c0, rt1.c1)))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((- ((((rt1.c0, rt1.c2, rt1.c2))>((rt1.c1, rt1.c0, rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((rt1.c0, rt1.c2, rt1.c2))>((rt1.c1, rt1.c0, rt1.c1)))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((- ((((rt1.c0, rt1.c2, rt1.c2))>((rt1.c1, rt1.c0, rt1.c1))))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c3)|(NULL)))AND((rt0.c0 IN ())))) ORDER BY ((((rt0.c2)<<(x'')))IS NOT(((((0.3263833621689687)AND(rt0.c3)))AND(rt0.c0)))), 0.5119300251561776, rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)|(NULL)))AND((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY ((((rt0.c2)<<(x'')))IS NOT(((((0.3263833621689687)AND(rt0.c3)))AND(rt0.c0)))), 0.5119300251561776, rt0.c0  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3)|(NULL)))AND((rt0.c0 IN ())))) ORDER BY ((((rt0.c2)<<(x'')))IS NOT(((((0.3263833621689687)AND(rt0.c3)))AND(rt0.c0)))), 0.5119300251561776, rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)|(NULL)))AND((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY ((((rt0.c2)<<(x'')))IS NOT(((((0.3263833621689687)AND(rt0.c3)))AND(rt0.c0)))), 0.5119300251561776, rt0.c0  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3)|(NULL)))AND((rt0.c0 IN ())))) ORDER BY ((((rt0.c2)<<(x'')))IS NOT(((((0.3263833621689687)AND(rt0.c3)))AND(rt0.c0)))), 0.5119300251561776, rt0.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0)<(rt1.c1)))>(((rt1.c2)<=(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)<(rt1.c1)))>(((rt1.c2)<=(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0)<(rt1.c1)))>(((rt1.c2)<=(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)<(rt1.c1)))>(((rt1.c2)<=(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0)<(rt1.c1)))>(((rt1.c2)<=(rt1.c0)))));
SELECT ALL * FROM rt1 WHERE (((((((((((((rt1.c1)AND(rt1.c2)))AND(rt1.c1)))AND((rt1.c1 IN (rt1.c2, rt1.c0)))))AND(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 END)))OR(CAST(rt1.c1 AS REAL))))AND(rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt1.c1)AND(rt1.c2)))AND(rt1.c1)))AND((rt1.c1 IN (rt1.c2, rt1.c0)))))AND(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 END)))OR(CAST(rt1.c1 AS REAL))))AND(rt1.c1))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((((((((((rt1.c1)AND(rt1.c2)))AND(rt1.c1)))AND((rt1.c1 IN (rt1.c2, rt1.c0)))))AND(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 END)))OR(CAST(rt1.c1 AS REAL))))AND(rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt1.c1)AND(rt1.c2)))AND(rt1.c1)))AND((rt1.c1 IN (rt1.c2, rt1.c0)))))AND(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 END)))OR(CAST(rt1.c1 AS REAL))))AND(rt1.c1))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((((((((((rt1.c1)AND(rt1.c2)))AND(rt1.c1)))AND((rt1.c1 IN (rt1.c2, rt1.c0)))))AND(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 END)))OR(CAST(rt1.c1 AS REAL))))AND(rt1.c1)));
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((((rt0.c3)IS(rt1.c0)), (((rt1.c2)) BETWEEN ((0Xffffffffbf185c1f)) AND ((rt0.c3))), ((0.7056887948275183)*(rt0.c4))))>=((CASE WHEN rt0.c1 THEN rt0.c3 END, ((((((((((((rt0.c1)AND(rt0.c0)))AND(rt1.c1)))OR(0.2327814360387358)))OR(rt0.c3)))AND(rt0.c2)))AND(rt1.c0)), ((rt1.c0)/(NULL)))))) ORDER BY x'', ((((LIKELIHOOD(DISTINCT rt0.c1, 0.1825265042181824))OR(rt0.c0)))OR((rt0.c4 IN ()))), (((rt0.c3)|(rt0.c3)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3)IS(rt1.c0)), (((rt1.c2)) BETWEEN ((0xffffffffbf185c1f)) AND ((rt0.c3))), ((0.7056887948275183)*(rt0.c4))))>=((CASE WHEN rt0.c1 THEN rt0.c3 END, ((((((((((((rt0.c1)AND(rt0.c0)))AND(rt1.c1)))OR(0.2327814360387358)))OR(rt0.c3)))AND(rt0.c2)))AND(rt1.c0)), ((rt1.c0)/(NULL)))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY x'', ((((LIKELIHOOD(DISTINCT rt0.c1, 0.1825265042181824))OR(rt0.c0)))OR((rt0.c4 IN ()))), (((rt0.c3)|(rt0.c3)) IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((((rt0.c3)IS(rt1.c0)), (((rt1.c2)) BETWEEN ((0Xffffffffbf185c1f)) AND ((rt0.c3))), ((0.7056887948275183)*(rt0.c4))))>=((CASE WHEN rt0.c1 THEN rt0.c3 END, ((((((((((((rt0.c1)AND(rt0.c0)))AND(rt1.c1)))OR(0.2327814360387358)))OR(rt0.c3)))AND(rt0.c2)))AND(rt1.c0)), ((rt1.c0)/(NULL)))))) ORDER BY x'', ((((LIKELIHOOD(DISTINCT rt0.c1, 0.1825265042181824))OR(rt0.c0)))OR((rt0.c4 IN ()))), (((rt0.c3)|(rt0.c3)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3)IS(rt1.c0)), (((rt1.c2)) BETWEEN ((0xffffffffbf185c1f)) AND ((rt0.c3))), ((0.7056887948275183)*(rt0.c4))))>=((CASE WHEN rt0.c1 THEN rt0.c3 END, ((((((((((((rt0.c1)AND(rt0.c0)))AND(rt1.c1)))OR(0.2327814360387358)))OR(rt0.c3)))AND(rt0.c2)))AND(rt1.c0)), ((rt1.c0)/(NULL)))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY x'', ((((LIKELIHOOD(DISTINCT rt0.c1, 0.1825265042181824))OR(rt0.c0)))OR((rt0.c4 IN ()))), (((rt0.c3)|(rt0.c3)) IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((((rt0.c3)IS(rt1.c0)), (((rt1.c2)) BETWEEN ((0Xffffffffbf185c1f)) AND ((rt0.c3))), ((0.7056887948275183)*(rt0.c4))))>=((CASE WHEN rt0.c1 THEN rt0.c3 END, ((((((((((((rt0.c1)AND(rt0.c0)))AND(rt1.c1)))OR(0.2327814360387358)))OR(rt0.c3)))AND(rt0.c2)))AND(rt1.c0)), ((rt1.c0)/(NULL)))))) ORDER BY x'', ((((LIKELIHOOD(DISTINCT rt0.c1, 0.1825265042181824))OR(rt0.c0)))OR((rt0.c4 IN ()))), (((rt0.c3)|(rt0.c3)) IN ()) DESC  NULLS FIRST;
SELECT * FROM rt1 WHERE ((~ (rt1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((~ (rt1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((~ (rt1.c2 COLLATE RTRIM)));
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c4)IS NOT(rt0.c4)) THEN rt0.c2 END) ORDER BY (NOT (LIKELY(rt0.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c4)IS NOT(rt0.c4)) THEN rt0.c2 END) IS TRUE)  as count FROM rt0 ORDER BY (NOT (LIKELY(rt0.c1))) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c4)IS NOT(rt0.c4)) THEN rt0.c2 END) ORDER BY (NOT (LIKELY(rt0.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c4)IS NOT(rt0.c4)) THEN rt0.c2 END) IS TRUE)  as count FROM rt0 ORDER BY (NOT (LIKELY(rt0.c1))) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c4)IS NOT(rt0.c4)) THEN rt0.c2 END) ORDER BY (NOT (LIKELY(rt0.c1))) ASC  NULLS FIRST;
SELECT * FROM rt1 WHERE (rt1.c0) ORDER BY CASE WHEN 7.40505915E8 THEN (rt1.c0 IN ()) ELSE (rt1.c0 IN (rt1.c0, rt1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN 7.40505915E8 THEN (rt1.c0 IN ()) ELSE (rt1.c0 IN (rt1.c0, rt1.c0)) END  NULLS LAST);
SELECT * FROM rt1 WHERE (rt1.c0) ORDER BY CASE WHEN 7.40505915E8 THEN (rt1.c0 IN ()) ELSE (rt1.c0 IN (rt1.c0, rt1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN 7.40505915E8 THEN (rt1.c0 IN ()) ELSE (rt1.c0 IN (rt1.c0, rt1.c0)) END  NULLS LAST);
SELECT * FROM rt1 WHERE (rt1.c0) ORDER BY CASE WHEN 7.40505915E8 THEN (rt1.c0 IN ()) ELSE (rt1.c0 IN (rt1.c0, rt1.c0)) END  NULLS LAST;
SELECT ALL * FROM rt1, rt0 WHERE (CASE x'7189'  WHEN ((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))AND(rt1.c0)))OR(rt0.c2)) THEN (+ (rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE x'7189'  WHEN ((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))AND(rt1.c0)))OR(rt0.c2)) THEN (+ (rt1.c1)) END) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (CASE x'7189'  WHEN ((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))AND(rt1.c0)))OR(rt0.c2)) THEN (+ (rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE x'7189'  WHEN ((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))AND(rt1.c0)))OR(rt0.c2)) THEN (+ (rt1.c1)) END) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (CASE x'7189'  WHEN ((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))AND(rt1.c0)))OR(rt0.c2)) THEN (+ (rt1.c1)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)OR((- (rt0.c2)))))OR(((rt0.c0)LIKE(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)OR((- (rt0.c2)))))OR(((rt0.c0)LIKE(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)OR((- (rt0.c2)))))OR(((rt0.c0)LIKE(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)OR((- (rt0.c2)))))OR(((rt0.c0)LIKE(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)OR((- (rt0.c2)))))OR(((rt0.c0)LIKE(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((x'') IS FALSE) IN (rt0.c2 COLLATE BINARY, rt1.c1))) ORDER BY (NOT (CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt1.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c3 END))  NULLS FIRST, ((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))+(((((((((rt0.c3)AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c2)))AND(rt0.c3))))  NULLS FIRST, ((json_array_length(rt1.c1, rt1.c0))%(((rt1.c1)IS NOT(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((x'') IS FALSE) IN (rt0.c2 COLLATE BINARY, rt1.c1))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (NOT (CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt1.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c3 END))  NULLS FIRST, ((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))+(((((((((rt0.c3)AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c2)))AND(rt0.c3))))  NULLS FIRST, ((json_array_length(rt1.c1, rt1.c0))%(((rt1.c1)IS NOT(rt0.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((x'') IS FALSE) IN (rt0.c2 COLLATE BINARY, rt1.c1))) ORDER BY (NOT (CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt1.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c3 END))  NULLS FIRST, ((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))+(((((((((rt0.c3)AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c2)))AND(rt0.c3))))  NULLS FIRST, ((json_array_length(rt1.c1, rt1.c0))%(((rt1.c1)IS NOT(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((x'') IS FALSE) IN (rt0.c2 COLLATE BINARY, rt1.c1))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (NOT (CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt1.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c3 END))  NULLS FIRST, ((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))+(((((((((rt0.c3)AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c2)))AND(rt0.c3))))  NULLS FIRST, ((json_array_length(rt1.c1, rt1.c0))%(((rt1.c1)IS NOT(rt0.c2)))) ASC  NULLS LAST);
SELECT ALL * FROM rt1, rt0 WHERE ((rt0.c3 IN ()) COLLATE BINARY) ORDER BY ((((((((rt1.c1 COLLATE RTRIM)AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt1.c2)))))AND(rt0.c2)))AND(NULLIF(DISTINCT 0.1609000383410839, '1'))))AND(CAST('' AS TEXT)));
SELECT SUM(count) FROM (SELECT (((rt0.c3 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((((((rt1.c1 COLLATE RTRIM)AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt1.c2)))))AND(rt0.c2)))AND(NULLIF(DISTINCT 0.1609000383410839, '1'))))AND(CAST('' AS TEXT))));
SELECT ALL * FROM rt1, rt0 WHERE ((rt0.c3 IN ()) COLLATE BINARY) ORDER BY ((((((((rt1.c1 COLLATE RTRIM)AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt1.c2)))))AND(rt0.c2)))AND(NULLIF(DISTINCT 0.1609000383410839, '1'))))AND(CAST('' AS TEXT)));
SELECT SUM(count) FROM (SELECT (((rt0.c3 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((((((rt1.c1 COLLATE RTRIM)AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt1.c2)))))AND(rt0.c2)))AND(NULLIF(DISTINCT 0.1609000383410839, '1'))))AND(CAST('' AS TEXT))));
SELECT ALL * FROM rt1, rt0 WHERE ((rt0.c3 IN ()) COLLATE BINARY) ORDER BY ((((((((rt1.c1 COLLATE RTRIM)AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt1.c2)))))AND(rt0.c2)))AND(NULLIF(DISTINCT 0.1609000383410839, '1'))))AND(CAST('' AS TEXT)));
SELECT * FROM rt1 WHERE (CASE ((((rt1.c1)OR(rt1.c1)))AND(rt1.c0))  WHEN (~ (rt1.c0)) THEN rt1.c0 END) ORDER BY rt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt1.c1)OR(rt1.c1)))AND(rt1.c0))  WHEN (~ (rt1.c0)) THEN rt1.c0 END) IS TRUE)  as count FROM rt1 ORDER BY rt1.c0 ASC  NULLS LAST);
SELECT * FROM rt1 WHERE (CASE ((((rt1.c1)OR(rt1.c1)))AND(rt1.c0))  WHEN (~ (rt1.c0)) THEN rt1.c0 END) ORDER BY rt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt1.c1)OR(rt1.c1)))AND(rt1.c0))  WHEN (~ (rt1.c0)) THEN rt1.c0 END) IS TRUE)  as count FROM rt1 ORDER BY rt1.c0 ASC  NULLS LAST);
SELECT * FROM rt1 WHERE (CASE ((((rt1.c1)OR(rt1.c1)))AND(rt1.c0))  WHEN (~ (rt1.c0)) THEN rt1.c0 END) ORDER BY rt1.c0 ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (CASE WHEN UPPER(DISTINCT rt0.c0) THEN ((rt0.c1)-(rt0.c4)) WHEN ((((rt0.c4)OR(rt0.c4)))OR(rt0.c4)) THEN ((0.9697283736989576) ISNULL) WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c4)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN UPPER(DISTINCT rt0.c0) THEN ((rt0.c1)-(rt0.c4)) WHEN ((((rt0.c4)OR(rt0.c4)))OR(rt0.c4)) THEN ((0.9697283736989576) ISNULL) WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c4)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN UPPER(DISTINCT rt0.c0) THEN ((rt0.c1)-(rt0.c4)) WHEN ((((rt0.c4)OR(rt0.c4)))OR(rt0.c4)) THEN ((0.9697283736989576) ISNULL) WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c4)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN UPPER(DISTINCT rt0.c0) THEN ((rt0.c1)-(rt0.c4)) WHEN ((((rt0.c4)OR(rt0.c4)))OR(rt0.c4)) THEN ((0.9697283736989576) ISNULL) WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c4)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN UPPER(DISTINCT rt0.c0) THEN ((rt0.c1)-(rt0.c4)) WHEN ((((rt0.c4)OR(rt0.c4)))OR(rt0.c4)) THEN ((0.9697283736989576) ISNULL) WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c4)) END);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON ((((rt0.c3) NOTNULL))<=(((rt1.c0) NOTNULL))) WHERE ((((rt0.c0)>>(rt0.c0)) IN ())) ORDER BY (((((rt1.c2, rt1.c2, rt1.c2)) NOT BETWEEN ((rt0.c0, rt1.c1, rt1.c2)) AND ((rt0.c1, 'kDA匚N3.{', rt1.c0))))==(CAST(rt0.c0 AS NUMERIC))), ((((rt1.c0) NOT NULL)) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)>>(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON ((((rt0.c3) NOTNULL))<=(((rt1.c0) NOTNULL))) ORDER BY (((((rt1.c2, rt1.c2, rt1.c2)) NOT BETWEEN ((rt0.c0, rt1.c1, rt1.c2)) AND ((rt0.c1, 'kDA匚N3.{', rt1.c0))))==(CAST(rt0.c0 AS NUMERIC))), ((((rt1.c0) NOT NULL)) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON ((((rt0.c3) NOTNULL))<=(((rt1.c0) NOTNULL))) WHERE ((((rt0.c0)>>(rt0.c0)) IN ())) ORDER BY (((((rt1.c2, rt1.c2, rt1.c2)) NOT BETWEEN ((rt0.c0, rt1.c1, rt1.c2)) AND ((rt0.c1, 'kDA匚N3.{', rt1.c0))))==(CAST(rt0.c0 AS NUMERIC))), ((((rt1.c0) NOT NULL)) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)>>(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON ((((rt0.c3) NOTNULL))<=(((rt1.c0) NOTNULL))) ORDER BY (((((rt1.c2, rt1.c2, rt1.c2)) NOT BETWEEN ((rt0.c0, rt1.c1, rt1.c2)) AND ((rt0.c1, 'kDA匚N3.{', rt1.c0))))==(CAST(rt0.c0 AS NUMERIC))), ((((rt1.c0) NOT NULL)) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON ((((rt0.c3) NOTNULL))<=(((rt1.c0) NOTNULL))) WHERE ((((rt0.c0)>>(rt0.c0)) IN ())) ORDER BY (((((rt1.c2, rt1.c2, rt1.c2)) NOT BETWEEN ((rt0.c0, rt1.c1, rt1.c2)) AND ((rt0.c1, 'kDA匚N3.{', rt1.c0))))==(CAST(rt0.c0 AS NUMERIC))), ((((rt1.c0) NOT NULL)) NOT NULL)  NULLS LAST;
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON CAST(((rt0.c4)<<(rt0.c2)) AS BLOB) WHERE (((((rt1.c1) NOTNULL)) NOT BETWEEN (((rt1.c2) BETWEEN (rt0.c3) AND (rt0.c4))) AND (((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) NOTNULL)) NOT BETWEEN (((rt1.c2) BETWEEN (rt0.c3) AND (rt0.c4))) AND (((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON CAST(((rt0.c4)<<(rt0.c2)) AS BLOB));
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON CAST(((rt0.c4)<<(rt0.c2)) AS BLOB) WHERE (((((rt1.c1) NOTNULL)) NOT BETWEEN (((rt1.c2) BETWEEN (rt0.c3) AND (rt0.c4))) AND (((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) NOTNULL)) NOT BETWEEN (((rt1.c2) BETWEEN (rt0.c3) AND (rt0.c4))) AND (((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON CAST(((rt0.c4)<<(rt0.c2)) AS BLOB));
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON CAST(((rt0.c4)<<(rt0.c2)) AS BLOB) WHERE (((((rt1.c1) NOTNULL)) NOT BETWEEN (((rt1.c2) BETWEEN (rt0.c3) AND (rt0.c4))) AND (((rt0.c2) ISNULL))));
SELECT * FROM rt1 CROSS JOIN rt0 ON ((((rt0.c0) NOT NULL))!=(((((rt0.c4)OR(rt1.c0)))OR(rt1.c0)))) WHERE (((CAST(rt1.c0 AS TEXT)) IS FALSE)) ORDER BY TRIM(DISTINCT (NOT (rt0.c3))) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON ((((rt0.c0) NOT NULL))!=(((((rt0.c4)OR(rt1.c0)))OR(rt1.c0)))) ORDER BY TRIM(DISTINCT (NOT (rt0.c3))) DESC);
SELECT * FROM rt1 CROSS JOIN rt0 ON ((((rt0.c0) NOT NULL))!=(((((rt0.c4)OR(rt1.c0)))OR(rt1.c0)))) WHERE (((CAST(rt1.c0 AS TEXT)) IS FALSE)) ORDER BY TRIM(DISTINCT (NOT (rt0.c3))) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON ((((rt0.c0) NOT NULL))!=(((((rt0.c4)OR(rt1.c0)))OR(rt1.c0)))) ORDER BY TRIM(DISTINCT (NOT (rt0.c3))) DESC);
SELECT * FROM rt1 CROSS JOIN rt0 ON ((((rt0.c0) NOT NULL))!=(((((rt0.c4)OR(rt1.c0)))OR(rt1.c0)))) WHERE (((CAST(rt1.c0 AS TEXT)) IS FALSE)) ORDER BY TRIM(DISTINCT (NOT (rt0.c3))) DESC;
SELECT ALL * FROM rt0 WHERE (0.6811527501647884) ORDER BY UNLIKELY(((('h㥹')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((0.6811527501647884) IS TRUE)  as count FROM rt0 ORDER BY UNLIKELY(((('h㥹')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) DESC);
SELECT ALL * FROM rt0 WHERE (0.6811527501647884) ORDER BY UNLIKELY(((('h㥹')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((0.6811527501647884) IS TRUE)  as count FROM rt0 ORDER BY UNLIKELY(((('h㥹')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) DESC);
SELECT ALL * FROM rt0 WHERE (0.6811527501647884) ORDER BY UNLIKELY(((('h㥹')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) DESC;
SELECT * FROM rt0 CROSS JOIN rt1 ON (((rt0.c2 IN ())) NOTNULL) WHERE (((NOT (rt0.c2)) IN ())) ORDER BY ((((rt0.c2) NOTNULL)) NOT BETWEEN (JULIANDAY(0.6899431031201697, rt0.c0, rt1.c0)) AND (CASE rt0.c0  WHEN rt1.c2 THEN rt0.c1 ELSE rt0.c2 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON (((rt0.c2 IN ())) NOTNULL) ORDER BY ((((rt0.c2) NOTNULL)) NOT BETWEEN (JULIANDAY(0.6899431031201697, rt0.c0, rt1.c0)) AND (CASE rt0.c0  WHEN rt1.c2 THEN rt0.c1 ELSE rt0.c2 END)) ASC  NULLS LAST);
SELECT * FROM rt0 CROSS JOIN rt1 ON (((rt0.c2 IN ())) NOTNULL) WHERE (((NOT (rt0.c2)) IN ())) ORDER BY ((((rt0.c2) NOTNULL)) NOT BETWEEN (JULIANDAY(0.6899431031201697, rt0.c0, rt1.c0)) AND (CASE rt0.c0  WHEN rt1.c2 THEN rt0.c1 ELSE rt0.c2 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON (((rt0.c2 IN ())) NOTNULL) ORDER BY ((((rt0.c2) NOTNULL)) NOT BETWEEN (JULIANDAY(0.6899431031201697, rt0.c0, rt1.c0)) AND (CASE rt0.c0  WHEN rt1.c2 THEN rt0.c1 ELSE rt0.c2 END)) ASC  NULLS LAST);
SELECT * FROM rt0 CROSS JOIN rt1 ON (((rt0.c2 IN ())) NOTNULL) WHERE (((NOT (rt0.c2)) IN ())) ORDER BY ((((rt0.c2) NOTNULL)) NOT BETWEEN (JULIANDAY(0.6899431031201697, rt0.c0, rt1.c0)) AND (CASE rt0.c0  WHEN rt1.c2 THEN rt0.c1 ELSE rt0.c2 END)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE ((rt1.c2) ISNULL)  WHEN rt1.c1 THEN (+ (rt1.c2)) ELSE rt1.c1 COLLATE NOCASE END) ORDER BY (((rt1.c1 IN ())) IS FALSE) ASC, (rt1.c1 COLLATE NOCASE IN (CAST(rt1.c2 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c2) ISNULL)  WHEN rt1.c1 THEN (+ (rt1.c2)) ELSE rt1.c1 COLLATE NOCASE END) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c1 IN ())) IS FALSE) ASC, (rt1.c1 COLLATE NOCASE IN (CAST(rt1.c2 AS NUMERIC)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE ((rt1.c2) ISNULL)  WHEN rt1.c1 THEN (+ (rt1.c2)) ELSE rt1.c1 COLLATE NOCASE END) ORDER BY (((rt1.c1 IN ())) IS FALSE) ASC, (rt1.c1 COLLATE NOCASE IN (CAST(rt1.c2 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c2) ISNULL)  WHEN rt1.c1 THEN (+ (rt1.c2)) ELSE rt1.c1 COLLATE NOCASE END) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c1 IN ())) IS FALSE) ASC, (rt1.c1 COLLATE NOCASE IN (CAST(rt1.c2 AS NUMERIC)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE ((rt1.c2) ISNULL)  WHEN rt1.c1 THEN (+ (rt1.c2)) ELSE rt1.c1 COLLATE NOCASE END) ORDER BY (((rt1.c1 IN ())) IS FALSE) ASC, (rt1.c1 COLLATE NOCASE IN (CAST(rt1.c2 AS NUMERIC)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS REAL)) BETWEEN (((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3))) AND ((~ (rt0.c1))))) ORDER BY rt0.c3 COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS REAL)) BETWEEN (((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3))) AND ((~ (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3 COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS REAL)) BETWEEN (((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3))) AND ((~ (rt0.c1))))) ORDER BY rt0.c3 COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS REAL)) BETWEEN (((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3))) AND ((~ (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3 COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS REAL)) BETWEEN (((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3))) AND ((~ (rt0.c1))))) ORDER BY rt0.c3 COLLATE NOCASE ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, rt1 WHERE (CASE CAST(rt1.c0 AS NUMERIC)  WHEN (NOT (rt0.c3)) THEN ((rt0.c0) NOT NULL) WHEN rt0.c2 THEN ((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c4)))OR(rt1.c0)))OR(rt0.c2)) WHEN PRINTF(rt1.c0) THEN ((rt1.c1) NOT NULL) ELSE 0.9697283736989576 END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt1.c0 AS NUMERIC)  WHEN (NOT (rt0.c3)) THEN ((rt0.c0) NOT NULL) WHEN rt0.c2 THEN ((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c4)))OR(rt1.c0)))OR(rt0.c2)) WHEN PRINTF(rt1.c0) THEN ((rt1.c1) NOT NULL) ELSE 0.9697283736989576 END) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CASE CAST(rt1.c0 AS NUMERIC)  WHEN (NOT (rt0.c3)) THEN ((rt0.c0) NOT NULL) WHEN rt0.c2 THEN ((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c4)))OR(rt1.c0)))OR(rt0.c2)) WHEN PRINTF(rt1.c0) THEN ((rt1.c1) NOT NULL) ELSE 0.9697283736989576 END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt1.c0 AS NUMERIC)  WHEN (NOT (rt0.c3)) THEN ((rt0.c0) NOT NULL) WHEN rt0.c2 THEN ((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c4)))OR(rt1.c0)))OR(rt0.c2)) WHEN PRINTF(rt1.c0) THEN ((rt1.c1) NOT NULL) ELSE 0.9697283736989576 END) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CASE CAST(rt1.c0 AS NUMERIC)  WHEN (NOT (rt0.c3)) THEN ((rt0.c0) NOT NULL) WHEN rt0.c2 THEN ((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c4)))OR(rt1.c0)))OR(rt0.c2)) WHEN PRINTF(rt1.c0) THEN ((rt1.c1) NOT NULL) ELSE 0.9697283736989576 END);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((CAST('1373252731' AS REAL)))=(((+ (rt0.c1)))))) ORDER BY ((((rt0.c1)IS NOT(rt0.c4))) ISNULL) DESC  NULLS LAST, ((((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c0)))IS NOT(((rt0.c2) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL (((((CAST('1373252731' AS REAL)))=(((+ (rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)IS NOT(rt0.c4))) ISNULL) DESC  NULLS LAST, ((((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c0)))IS NOT(((rt0.c2) ISNULL))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((CAST('1373252731' AS REAL)))=(((+ (rt0.c1)))))) ORDER BY ((((rt0.c1)IS NOT(rt0.c4))) ISNULL) DESC  NULLS LAST, ((((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c0)))IS NOT(((rt0.c2) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL (((((CAST('1373252731' AS REAL)))=(((+ (rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)IS NOT(rt0.c4))) ISNULL) DESC  NULLS LAST, ((((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c0)))IS NOT(((rt0.c2) ISNULL))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((CAST('1373252731' AS REAL)))=(((+ (rt0.c1)))))) ORDER BY ((((rt0.c1)IS NOT(rt0.c4))) ISNULL) DESC  NULLS LAST, ((((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c0)))IS NOT(((rt0.c2) ISNULL)));
SELECT COUNT(*) FROM rt1, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (NULL);
SELECT * FROM rt1, rt0 WHERE (CASE ((((rt0.c3)AND(rt0.c0)))AND(''))  WHEN TYPEOF(rt1.c2) THEN json_object(rt0.c2, rt0.c2) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c3)AND(rt0.c0)))AND(''))  WHEN TYPEOF(rt1.c2) THEN json_object(rt0.c2, rt0.c2) END) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (CASE ((((rt0.c3)AND(rt0.c0)))AND(''))  WHEN TYPEOF(rt1.c2) THEN json_object(rt0.c2, rt0.c2) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c3)AND(rt0.c0)))AND(''))  WHEN TYPEOF(rt1.c2) THEN json_object(rt0.c2, rt0.c2) END) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (CASE ((((rt0.c3)AND(rt0.c0)))AND(''))  WHEN TYPEOF(rt1.c2) THEN json_object(rt0.c2, rt0.c2) END);
SELECT * FROM rt0 WHERE ((((rt0.c1)>(rt0.c1)) IN ())) ORDER BY IFNULL(rt0.c0, rt0.c1) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)>(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY IFNULL(rt0.c0, rt0.c1) COLLATE NOCASE ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((rt0.c1)>(rt0.c1)) IN ())) ORDER BY IFNULL(rt0.c0, rt0.c1) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)>(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY IFNULL(rt0.c0, rt0.c1) COLLATE NOCASE ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((rt0.c1)>(rt0.c1)) IN ())) ORDER BY IFNULL(rt0.c0, rt0.c1) COLLATE NOCASE ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt0.c3)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c2))) IN ())) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt0.c3)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c2))) IN ())) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt0.c3)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c2))) IN ()));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON (((rt0.c0 IN ())) IS TRUE) WHERE ((('v') NOT NULL)) ORDER BY TRIM(((((((((rt1.c1)OR(rt0.c2)))OR(rt0.c1)))AND(rt1.c2)))AND(rt0.c2)))  NULLS FIRST, ((((rt1.c0) BETWEEN (rt0.c4) AND (rt0.c2)))&((((rt1.c2, rt0.c0, rt0.c1, rt0.c4, rt0.c3))>=((rt1.c0, rt0.c0, rt0.c0, rt0.c0, rt1.c0))))), (((((rt0.c2)-(rt0.c2))))<>((rt0.c1 COLLATE NOCASE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('v') NOT NULL)) IS TRUE)  as count FROM rt1 NOT INDEXED LEFT OUTER JOIN rt0 ON (((rt0.c0 IN ())) IS TRUE) ORDER BY TRIM(((((((((rt1.c1)OR(rt0.c2)))OR(rt0.c1)))AND(rt1.c2)))AND(rt0.c2)))  NULLS FIRST, ((((rt1.c0) BETWEEN (rt0.c4) AND (rt0.c2)))&((((rt1.c2, rt0.c0, rt0.c1, rt0.c4, rt0.c3))>=((rt1.c0, rt0.c0, rt0.c0, rt0.c0, rt1.c0))))), (((((rt0.c2)-(rt0.c2))))!=((rt0.c1 COLLATE NOCASE))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON (((rt0.c0 IN ())) IS TRUE) WHERE ((('v') NOT NULL)) ORDER BY TRIM(((((((((rt1.c1)OR(rt0.c2)))OR(rt0.c1)))AND(rt1.c2)))AND(rt0.c2)))  NULLS FIRST, ((((rt1.c0) BETWEEN (rt0.c4) AND (rt0.c2)))&((((rt1.c2, rt0.c0, rt0.c1, rt0.c4, rt0.c3))>=((rt1.c0, rt0.c0, rt0.c0, rt0.c0, rt1.c0))))), (((((rt0.c2)-(rt0.c2))))<>((rt0.c1 COLLATE NOCASE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('v') NOT NULL)) IS TRUE)  as count FROM rt1 NOT INDEXED LEFT OUTER JOIN rt0 ON (((rt0.c0 IN ())) IS TRUE) ORDER BY TRIM(((((((((rt1.c1)OR(rt0.c2)))OR(rt0.c1)))AND(rt1.c2)))AND(rt0.c2)))  NULLS FIRST, ((((rt1.c0) BETWEEN (rt0.c4) AND (rt0.c2)))&((((rt1.c2, rt0.c0, rt0.c1, rt0.c4, rt0.c3))>=((rt1.c0, rt0.c0, rt0.c0, rt0.c0, rt1.c0))))), (((((rt0.c2)-(rt0.c2))))!=((rt0.c1 COLLATE NOCASE))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON (((rt0.c0 IN ())) IS TRUE) WHERE ((('v') NOT NULL)) ORDER BY TRIM(((((((((rt1.c1)OR(rt0.c2)))OR(rt0.c1)))AND(rt1.c2)))AND(rt0.c2)))  NULLS FIRST, ((((rt1.c0) BETWEEN (rt0.c4) AND (rt0.c2)))&((((rt1.c2, rt0.c0, rt0.c1, rt0.c4, rt0.c3))>=((rt1.c0, rt0.c0, rt0.c0, rt0.c0, rt1.c0))))), (((((rt0.c2)-(rt0.c2))))<>((rt0.c1 COLLATE NOCASE))) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((ABS('1472153919')) BETWEEN (CAST(rt0.c2 AS BLOB)) AND (CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END)));
SELECT SUM(count) FROM (SELECT ALL ((((ABS('1472153919')) BETWEEN (CAST(rt0.c2 AS BLOB)) AND (CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((ABS('1472153919')) BETWEEN (CAST(rt0.c2 AS BLOB)) AND (CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END)));
SELECT SUM(count) FROM (SELECT ALL ((((ABS('1472153919')) BETWEEN (CAST(rt0.c2 AS BLOB)) AND (CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((ABS('1472153919')) BETWEEN (CAST(rt0.c2 AS BLOB)) AND (CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END)));
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (CAST(rt1.c0 AS BLOB)))) ORDER BY (((- (rt1.c0))) NOTNULL), rtreenode(rt1.c0, rt1.c1) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt1.c0 AS BLOB)))) IS TRUE)  as count FROM rt1 ORDER BY (((- (rt1.c0))) NOTNULL), rtreenode(rt1.c0, rt1.c1) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (CAST(rt1.c0 AS BLOB)))) ORDER BY (((- (rt1.c0))) NOTNULL), rtreenode(rt1.c0, rt1.c1) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt1.c0 AS BLOB)))) IS TRUE)  as count FROM rt1 ORDER BY (((- (rt1.c0))) NOTNULL), rtreenode(rt1.c0, rt1.c1) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (CAST(rt1.c0 AS BLOB)))) ORDER BY (((- (rt1.c0))) NOTNULL), rtreenode(rt1.c0, rt1.c1) DESC;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((rt1.c2 COLLATE BINARY))<((((rt0.c1)>=(rt0.c1)))))) ORDER BY TRIM(((((NULL)OR(x'')))OR(rt0.c3))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2 COLLATE BINARY))<((((rt0.c1)>=(rt0.c1)))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY TRIM(((((NULL)OR(x'')))OR(rt0.c3))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((rt1.c2 COLLATE BINARY))<((((rt0.c1)>=(rt0.c1)))))) ORDER BY TRIM(((((NULL)OR(x'')))OR(rt0.c3))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2 COLLATE BINARY))<((((rt0.c1)>=(rt0.c1)))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY TRIM(((((NULL)OR(x'')))OR(rt0.c3))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((rt1.c2 COLLATE BINARY))<((((rt0.c1)>=(rt0.c1)))))) ORDER BY TRIM(((((NULL)OR(x'')))OR(rt0.c3))) DESC  NULLS FIRST;
SELECT * FROM rt1, rt0 WHERE (CASE ((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1))  WHEN NULL THEN HEX(rt0.c3) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1))  WHEN NULL THEN HEX(rt0.c3) END) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (CASE ((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1))  WHEN NULL THEN HEX(rt0.c3) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1))  WHEN NULL THEN HEX(rt0.c3) END) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (CASE ((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1))  WHEN NULL THEN HEX(rt0.c3) END);
SELECT COUNT(*) FROM rt0, rt1 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (rt0.c4);
SELECT ALL * FROM rt1 WHERE ((((CAST(rt1.c2 AS BLOB), ((((1.67234779E8)AND(rt1.c0)))OR(rt1.c0)), ((((rt1.c1)OR(rt1.c1)))AND(rt1.c2))))!=((CAST(rt1.c2 AS TEXT), ('1556361582' IN ('㝩K', rt1.c2)), ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt1.c2 AS BLOB), ((((1.67234779E8)AND(rt1.c0)))OR(rt1.c0)), ((((rt1.c1)OR(rt1.c1)))AND(rt1.c2))))<>((CAST(rt1.c2 AS TEXT), ('1556361582' IN ('㝩K', rt1.c2)), ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((CAST(rt1.c2 AS BLOB), ((((1.67234779E8)AND(rt1.c0)))OR(rt1.c0)), ((((rt1.c1)OR(rt1.c1)))AND(rt1.c2))))!=((CAST(rt1.c2 AS TEXT), ('1556361582' IN ('㝩K', rt1.c2)), ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt1.c2 AS BLOB), ((((1.67234779E8)AND(rt1.c0)))OR(rt1.c0)), ((((rt1.c1)OR(rt1.c1)))AND(rt1.c2))))<>((CAST(rt1.c2 AS TEXT), ('1556361582' IN ('㝩K', rt1.c2)), ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((CAST(rt1.c2 AS BLOB), ((((1.67234779E8)AND(rt1.c0)))OR(rt1.c0)), ((((rt1.c1)OR(rt1.c1)))AND(rt1.c2))))!=((CAST(rt1.c2 AS TEXT), ('1556361582' IN ('㝩K', rt1.c2)), ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1))))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (-9.10452169E8);
SELECT SUM(count) FROM (SELECT ALL ((-9.10452169E8) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (-9.10452169E8);
SELECT SUM(count) FROM (SELECT ALL ((-9.10452169E8) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (-9.10452169E8);
SELECT * FROM rt1 WHERE (((((rt1.c1) NOTNULL))OR(((((rt1.c0)AND('1883273241')))OR(rt1.c0))))) ORDER BY CAST((((rt1.c1))<=((rt1.c2))) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) NOTNULL))OR(((((rt1.c0)AND('1883273241')))OR(rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY CAST((((rt1.c1))<=((rt1.c2))) AS TEXT)  NULLS FIRST);
SELECT * FROM rt1 WHERE (((((rt1.c1) NOTNULL))OR(((((rt1.c0)AND('1883273241')))OR(rt1.c0))))) ORDER BY CAST((((rt1.c1))<=((rt1.c2))) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) NOTNULL))OR(((((rt1.c0)AND('1883273241')))OR(rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY CAST((((rt1.c1))<=((rt1.c2))) AS TEXT)  NULLS FIRST);
SELECT * FROM rt1 WHERE (((((rt1.c1) NOTNULL))OR(((((rt1.c0)AND('1883273241')))OR(rt1.c0))))) ORDER BY CAST((((rt1.c1))<=((rt1.c2))) AS TEXT)  NULLS FIRST;
SELECT COUNT(*) FROM rt0, rt1 WHERE (x'') ORDER BY json_patch(rt1.c0, rt1.c2) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, rt1 ORDER BY json_patch(rt1.c0, rt1.c2) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM rt0, rt1 WHERE (x'') ORDER BY json_patch(rt1.c0, rt1.c2) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, rt1 ORDER BY json_patch(rt1.c0, rt1.c2) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM rt0, rt1 WHERE (x'') ORDER BY json_patch(rt1.c0, rt1.c2) COLLATE RTRIM ASC;
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)) IN (CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END, UPPER(DISTINCT rt1.c2)))) ORDER BY JULIANDAY(CAST(rt1.c1 AS NUMERIC), (~ (rt1.c1)), rt1.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)) IN (CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END, UPPER(DISTINCT rt1.c2)))) IS TRUE)  as count FROM rt1 ORDER BY JULIANDAY(CAST(rt1.c1 AS NUMERIC), (~ (rt1.c1)), rt1.c0 COLLATE BINARY));
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)) IN (CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END, UPPER(DISTINCT rt1.c2)))) ORDER BY JULIANDAY(CAST(rt1.c1 AS NUMERIC), (~ (rt1.c1)), rt1.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)) IN (CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END, UPPER(DISTINCT rt1.c2)))) IS TRUE)  as count FROM rt1 ORDER BY JULIANDAY(CAST(rt1.c1 AS NUMERIC), (~ (rt1.c1)), rt1.c0 COLLATE BINARY));
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)) IN (CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END, UPPER(DISTINCT rt1.c2)))) ORDER BY JULIANDAY(CAST(rt1.c1 AS NUMERIC), (~ (rt1.c1)), rt1.c0 COLLATE BINARY);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((rt0.c1) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1))) AND (0Xffffffffe4b1d95a))) ORDER BY (~ (rt0.c1)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1))) AND (0Xffffffffe4b1d95a))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (~ (rt0.c1)) COLLATE BINARY ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((rt0.c1) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1))) AND (0Xffffffffe4b1d95a))) ORDER BY (~ (rt0.c1)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1))) AND (0Xffffffffe4b1d95a))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (~ (rt0.c1)) COLLATE BINARY ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((rt0.c1) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1))) AND (0Xffffffffe4b1d95a))) ORDER BY (~ (rt0.c1)) COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CASE WHEN ((rt0.c0)>(rt1.c2)) THEN CASE rt1.c1  WHEN -1.638365142E9 THEN rt1.c0 END END) ORDER BY CASE WHEN (- (rt1.c2)) THEN 0X2d07b6cd END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)>(rt1.c2)) THEN CASE rt1.c1  WHEN -1.638365142E9 THEN rt1.c0 END END) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE WHEN (- (rt1.c2)) THEN 0X2d07b6cd END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CASE WHEN ((rt0.c0)>(rt1.c2)) THEN CASE rt1.c1  WHEN -1.638365142E9 THEN rt1.c0 END END) ORDER BY CASE WHEN (- (rt1.c2)) THEN 0X2d07b6cd END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)>(rt1.c2)) THEN CASE rt1.c1  WHEN -1.638365142E9 THEN rt1.c0 END END) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE WHEN (- (rt1.c2)) THEN 0X2d07b6cd END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CASE WHEN ((rt0.c0)>(rt1.c2)) THEN CASE rt1.c1  WHEN -1.638365142E9 THEN rt1.c0 END END) ORDER BY CASE WHEN (- (rt1.c2)) THEN 0X2d07b6cd END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ (NULLIF(rt1.c0, rt1.c0)))) ORDER BY ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2))) NOTNULL);
SELECT SUM(count) FROM (SELECT (((~ (NULLIF(rt1.c0, rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2))) NOTNULL));
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ (NULLIF(rt1.c0, rt1.c0)))) ORDER BY ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2))) NOTNULL);
SELECT SUM(count) FROM (SELECT (((~ (NULLIF(rt1.c0, rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2))) NOTNULL));
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ (NULLIF(rt1.c0, rt1.c0)))) ORDER BY ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2))) NOTNULL);
SELECT * FROM rt1, rt0 WHERE (0Xffffffffad6eaebc) ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))|(rt1.c2));
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffad6eaebc) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))|(rt1.c2)));
SELECT * FROM rt1, rt0 WHERE (0Xffffffffad6eaebc) ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))|(rt1.c2));
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffad6eaebc) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))|(rt1.c2)));
SELECT * FROM rt1, rt0 WHERE (0Xffffffffad6eaebc) ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))|(rt1.c2));
SELECT ALL * FROM rt1, rt0 WHERE ((((('ai')OR((rt0.c3 IN ()))))AND(((((rt0.c4)AND(rt0.c4)))AND(rt0.c3))))) ORDER BY ((((rt0.c1)IS NOT(rt0.c4)))OR(CAST(rt1.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT (((((('ai')OR((rt0.c3 IN ()))))AND(((((rt0.c4)AND(rt0.c4)))AND(rt0.c3))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt0.c1)IS NOT(rt0.c4)))OR(CAST(rt1.c0 AS INTEGER))));
SELECT ALL * FROM rt1, rt0 WHERE ((((('ai')OR((rt0.c3 IN ()))))AND(((((rt0.c4)AND(rt0.c4)))AND(rt0.c3))))) ORDER BY ((((rt0.c1)IS NOT(rt0.c4)))OR(CAST(rt1.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT (((((('ai')OR((rt0.c3 IN ()))))AND(((((rt0.c4)AND(rt0.c4)))AND(rt0.c3))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt0.c1)IS NOT(rt0.c4)))OR(CAST(rt1.c0 AS INTEGER))));
SELECT ALL * FROM rt1, rt0 WHERE ((((('ai')OR((rt0.c3 IN ()))))AND(((((rt0.c4)AND(rt0.c4)))AND(rt0.c3))))) ORDER BY ((((rt0.c1)IS NOT(rt0.c4)))OR(CAST(rt1.c0 AS INTEGER)));
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT ALL * FROM rt1, rt0 WHERE (CAST(x'e0c88964' AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(x'e0c88964' AS REAL)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (CAST(x'e0c88964' AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(x'e0c88964' AS REAL)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (CAST(x'e0c88964' AS REAL));
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)AND(rt0.c3)))OR(rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)AND(rt0.c3)))OR(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)AND(rt0.c3)))OR(rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)AND(rt0.c3)))OR(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)AND(rt0.c3)))OR(rt0.c1)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c1)) BETWEEN ((rt1.c0 COLLATE BINARY)) AND ((rt1.c0))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) BETWEEN ((rt1.c0 COLLATE BINARY)) AND ((rt1.c0)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c1)) BETWEEN ((rt1.c0 COLLATE BINARY)) AND ((rt1.c0))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) BETWEEN ((rt1.c0 COLLATE BINARY)) AND ((rt1.c0)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c1)) BETWEEN ((rt1.c0 COLLATE BINARY)) AND ((rt1.c0))));
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c0)AND(rt1.c1)))OR(rt1.c0)) IN (((rt1.c0)IS NOT(rt1.c2))))) ORDER BY (((CAST(rt1.c1 AS NUMERIC)))<=((((((rt1.c1)AND(rt1.c1)))AND(rt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0)AND(rt1.c1)))OR(rt1.c0)) IN (((rt1.c0)IS NOT(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY (((CAST(rt1.c1 AS NUMERIC)))<=((((((rt1.c1)AND(rt1.c1)))AND(rt1.c0))))) DESC);
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c0)AND(rt1.c1)))OR(rt1.c0)) IN (((rt1.c0)IS NOT(rt1.c2))))) ORDER BY (((CAST(rt1.c1 AS NUMERIC)))<=((((((rt1.c1)AND(rt1.c1)))AND(rt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0)AND(rt1.c1)))OR(rt1.c0)) IN (((rt1.c0)IS NOT(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY (((CAST(rt1.c1 AS NUMERIC)))<=((((((rt1.c1)AND(rt1.c1)))AND(rt1.c0))))) DESC);
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c0)AND(rt1.c1)))OR(rt1.c0)) IN (((rt1.c0)IS NOT(rt1.c2))))) ORDER BY (((CAST(rt1.c1 AS NUMERIC)))<=((((((rt1.c1)AND(rt1.c1)))AND(rt1.c0))))) DESC;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((- (rt0.c1)))<(rt1.c0))) ORDER BY ((rt0.c4) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c1)))<(rt1.c0))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt0.c4) IS FALSE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((- (rt0.c1)))<(rt1.c0))) ORDER BY ((rt0.c4) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c1)))<(rt1.c0))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt0.c4) IS FALSE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((- (rt0.c1)))<(rt1.c0))) ORDER BY ((rt0.c4) IS FALSE) ASC  NULLS FIRST;
SELECT * FROM rt0, rt1 NOT INDEXED WHERE ((rt1.c1 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((rt1.c1 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 NOT INDEXED WHERE ((rt1.c1 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((rt1.c1 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 NOT INDEXED WHERE ((rt1.c1 IN ()) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON (((((((((- (rt1.c1)))OR(CASE rt0.c2  WHEN '1795450609' THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 END)))OR((((rt1.c0, rt0.c2, rt0.c3)) BETWEEN ((NULL, rt0.c3, rt0.c4)) AND ((rt1.c0, rt0.c1, ''))))))AND(((rt1.c2)*(rt1.c0)))))OR(((rt1.c1)<=(rt0.c0)))) WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON (((((((((- (rt1.c1)))OR(CASE rt0.c2  WHEN '1795450609' THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 END)))OR((((rt1.c0, rt0.c2, rt0.c3)) BETWEEN ((NULL, rt0.c3, rt0.c4)) AND ((rt1.c0, rt0.c1, ''))))))AND(((rt1.c2)*(rt1.c0)))))OR(((rt1.c1)<=(rt0.c0)))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON (((((((((- (rt1.c1)))OR(CASE rt0.c2  WHEN '1795450609' THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 END)))OR((((rt1.c0, rt0.c2, rt0.c3)) BETWEEN ((NULL, rt0.c3, rt0.c4)) AND ((rt1.c0, rt0.c1, ''))))))AND(((rt1.c2)*(rt1.c0)))))OR(((rt1.c1)<=(rt0.c0)))) WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON (((((((((- (rt1.c1)))OR(CASE rt0.c2  WHEN '1795450609' THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 END)))OR((((rt1.c0, rt0.c2, rt0.c3)) BETWEEN ((NULL, rt0.c3, rt0.c4)) AND ((rt1.c0, rt0.c1, ''))))))AND(((rt1.c2)*(rt1.c0)))))OR(((rt1.c1)<=(rt0.c0)))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON (((((((((- (rt1.c1)))OR(CASE rt0.c2  WHEN '1795450609' THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 END)))OR((((rt1.c0, rt0.c2, rt0.c3)) BETWEEN ((NULL, rt0.c3, rt0.c4)) AND ((rt1.c0, rt0.c1, ''))))))AND(((rt1.c2)*(rt1.c0)))))OR(((rt1.c1)<=(rt0.c0)))) WHERE (rt1.c0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (NULL) ORDER BY CASE ((0.9500559469949332)%(rt1.c0))  WHEN (rt0.c0 IN ()) THEN ((((rt0.c4)OR(rt0.c3)))OR(NULL)) ELSE ((rt0.c3)&(rt0.c2)) END  NULLS FIRST, CAST(((((x'')OR(rt0.c1)))OR(rt1.c2)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, rt0 NOT INDEXED ORDER BY CASE ((0.9500559469949332)%(rt1.c0))  WHEN (rt0.c0 IN ()) THEN ((((rt0.c4)OR(rt0.c3)))OR(NULL)) ELSE ((rt0.c3)&(rt0.c2)) END  NULLS FIRST, CAST(((((x'')OR(rt0.c1)))OR(rt1.c2)) AS TEXT));
SELECT COUNT(*) FROM rt1, rt0 WHERE (NULL) ORDER BY CASE ((0.9500559469949332)%(rt1.c0))  WHEN (rt0.c0 IN ()) THEN ((((rt0.c4)OR(rt0.c3)))OR(NULL)) ELSE ((rt0.c3)&(rt0.c2)) END  NULLS FIRST, CAST(((((x'')OR(rt0.c1)))OR(rt1.c2)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, rt0 NOT INDEXED ORDER BY CASE ((0.9500559469949332)%(rt1.c0))  WHEN (rt0.c0 IN ()) THEN ((((rt0.c4)OR(rt0.c3)))OR(NULL)) ELSE ((rt0.c3)&(rt0.c2)) END  NULLS FIRST, CAST(((((x'')OR(rt0.c1)))OR(rt1.c2)) AS TEXT));
SELECT COUNT(*) FROM rt1, rt0 WHERE (NULL) ORDER BY CASE ((0.9500559469949332)%(rt1.c0))  WHEN (rt0.c0 IN ()) THEN ((((rt0.c4)OR(rt0.c3)))OR(NULL)) ELSE ((rt0.c3)&(rt0.c2)) END  NULLS FIRST, CAST(((((x'')OR(rt0.c1)))OR(rt1.c2)) AS TEXT);
SELECT * FROM rt0 WHERE (((rt0.c2) IS FALSE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c2) IS FALSE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c2) IS FALSE) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 WHERE (((TRIM(rt0.c3, NULL))>>(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(rt0.c3, NULL))>>(rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((TRIM(rt0.c3, NULL))>>(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(rt0.c3, NULL))>>(rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((TRIM(rt0.c3, NULL))>>(rt0.c0)));
SELECT ALL COUNT(*) FROM rt1 NOT INDEXED WHERE (((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2))) NOT NULL)) ORDER BY ((((((('1050957277')AND(rt1.c2)))OR(rt1.c2))))<>(((NOT (rt1.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2))) NOT NULL)) IS TRUE)  as count FROM rt1 ORDER BY ((((((('1050957277')AND(rt1.c2)))OR(rt1.c2))))<>(((NOT (rt1.c0))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 NOT INDEXED WHERE (((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2))) NOT NULL)) ORDER BY ((((((('1050957277')AND(rt1.c2)))OR(rt1.c2))))<>(((NOT (rt1.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2))) NOT NULL)) IS TRUE)  as count FROM rt1 ORDER BY ((((((('1050957277')AND(rt1.c2)))OR(rt1.c2))))<>(((NOT (rt1.c0))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 NOT INDEXED WHERE (((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2))) NOT NULL)) ORDER BY ((((((('1050957277')AND(rt1.c2)))OR(rt1.c2))))<>(((NOT (rt1.c0))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, rt1 WHERE (0.8834008775367419) ORDER BY ((rt0.c1 IN (rt0.c2)) IN (((rt1.c0)<<(rt0.c2)), ((rt0.c2) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((0.8834008775367419) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt0.c1 IN (rt0.c2)) IN (((rt1.c0)<<(rt0.c2)), ((rt0.c2) NOTNULL))) DESC);
SELECT COUNT(*) FROM rt0, rt1 WHERE (0.8834008775367419) ORDER BY ((rt0.c1 IN (rt0.c2)) IN (((rt1.c0)<<(rt0.c2)), ((rt0.c2) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((0.8834008775367419) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt0.c1 IN (rt0.c2)) IN (((rt1.c0)<<(rt0.c2)), ((rt0.c2) NOTNULL))) DESC);
SELECT COUNT(*) FROM rt0, rt1 WHERE (0.8834008775367419) ORDER BY ((rt0.c1 IN (rt0.c2)) IN (((rt1.c0)<<(rt0.c2)), ((rt0.c2) NOTNULL))) DESC;
SELECT COUNT(*) FROM rt1 INNER JOIN rt0 ON ((rt1.c0)GLOB(rt0.c0)) COLLATE NOCASE WHERE (CASE WHEN ((((((((((((rt1.c2)OR(rt0.c1)))AND(rt0.c1)))OR(rt1.c1)))OR(rt0.c3)))OR(rt0.c3)))AND(rt1.c1)) THEN CAST(rt0.c4 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((((((rt1.c2)OR(rt0.c1)))AND(rt0.c1)))OR(rt1.c1)))OR(rt0.c3)))OR(rt0.c3)))AND(rt1.c1)) THEN CAST(rt0.c4 AS BLOB) END) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON ((rt1.c0)GLOB(rt0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt1 INNER JOIN rt0 ON ((rt1.c0)GLOB(rt0.c0)) COLLATE NOCASE WHERE (CASE WHEN ((((((((((((rt1.c2)OR(rt0.c1)))AND(rt0.c1)))OR(rt1.c1)))OR(rt0.c3)))OR(rt0.c3)))AND(rt1.c1)) THEN CAST(rt0.c4 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((((((rt1.c2)OR(rt0.c1)))AND(rt0.c1)))OR(rt1.c1)))OR(rt0.c3)))OR(rt0.c3)))AND(rt1.c1)) THEN CAST(rt0.c4 AS BLOB) END) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON ((rt1.c0)GLOB(rt0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt1 INNER JOIN rt0 ON ((rt1.c0)GLOB(rt0.c0)) COLLATE NOCASE WHERE (CASE WHEN ((((((((((((rt1.c2)OR(rt0.c1)))AND(rt0.c1)))OR(rt1.c1)))OR(rt0.c3)))OR(rt0.c3)))AND(rt1.c1)) THEN CAST(rt0.c4 AS BLOB) END);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON ((rt1.c2) NOT BETWEEN (CAST(rt1.c0 AS INTEGER)) AND ((rt0.c0 IN ()))) WHERE (((((rt0.c3)=(0.6350647055165387))) ISNULL)) ORDER BY (+ ((NOT (rt0.c4)))) ASC  NULLS LAST, ((((rt0.c0)/(rt0.c4))) BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (((rt1.c0) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)=(0.6350647055165387))) ISNULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON ((rt1.c2) NOT BETWEEN (CAST(rt1.c0 AS INTEGER)) AND ((rt0.c0 IN ()))) ORDER BY (+ ((NOT (rt0.c4)))) ASC  NULLS LAST, ((((rt0.c0)/(rt0.c4))) BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (((rt1.c0) IS TRUE))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON ((rt1.c2) NOT BETWEEN (CAST(rt1.c0 AS INTEGER)) AND ((rt0.c0 IN ()))) WHERE (((((rt0.c3)=(0.6350647055165387))) ISNULL)) ORDER BY (+ ((NOT (rt0.c4)))) ASC  NULLS LAST, ((((rt0.c0)/(rt0.c4))) BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (((rt1.c0) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)=(0.6350647055165387))) ISNULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON ((rt1.c2) NOT BETWEEN (CAST(rt1.c0 AS INTEGER)) AND ((rt0.c0 IN ()))) ORDER BY (+ ((NOT (rt0.c4)))) ASC  NULLS LAST, ((((rt0.c0)/(rt0.c4))) BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (((rt1.c0) IS TRUE))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON ((rt1.c2) NOT BETWEEN (CAST(rt1.c0 AS INTEGER)) AND ((rt0.c0 IN ()))) WHERE (((((rt0.c3)=(0.6350647055165387))) ISNULL)) ORDER BY (+ ((NOT (rt0.c4)))) ASC  NULLS LAST, ((((rt0.c0)/(rt0.c4))) BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (((rt1.c0) IS TRUE))) ASC  NULLS FIRST;
SELECT * FROM rt1 WHERE (((CAST(rt1.c0 AS INTEGER))!=(((rt1.c1)+(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c0 AS INTEGER))!=(((rt1.c1)+(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((CAST(rt1.c0 AS INTEGER))!=(((rt1.c1)+(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c0 AS INTEGER))!=(((rt1.c1)+(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((CAST(rt1.c0 AS INTEGER))!=(((rt1.c1)+(rt1.c0)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0) ISNULL))%(rt1.c1 COLLATE BINARY))) ORDER BY 'F뇚3c*	61'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) ISNULL))%(rt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt1 ORDER BY 'F뇚3c*	61'  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0) ISNULL))%(rt1.c1 COLLATE BINARY))) ORDER BY 'F뇚3c*	61'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) ISNULL))%(rt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt1 ORDER BY 'F뇚3c*	61'  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0) ISNULL))%(rt1.c1 COLLATE BINARY))) ORDER BY 'F뇚3c*	61'  NULLS LAST;
SELECT COUNT(*) FROM rt0, rt1 WHERE ((CASE rt0.c3  WHEN '1883273241' THEN rt1.c1 WHEN rt1.c2 THEN rt0.c3 WHEN rt1.c0 THEN x'' ELSE rt0.c4 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE rt0.c3  WHEN '1883273241' THEN rt1.c1 WHEN rt1.c2 THEN rt0.c3 WHEN rt1.c0 THEN x'' ELSE rt0.c4 END IN ())) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((CASE rt0.c3  WHEN '1883273241' THEN rt1.c1 WHEN rt1.c2 THEN rt0.c3 WHEN rt1.c0 THEN x'' ELSE rt0.c4 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE rt0.c3  WHEN '1883273241' THEN rt1.c1 WHEN rt1.c2 THEN rt0.c3 WHEN rt1.c0 THEN x'' ELSE rt0.c4 END IN ())) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((CASE rt0.c3  WHEN '1883273241' THEN rt1.c1 WHEN rt1.c2 THEN rt0.c3 WHEN rt1.c0 THEN x'' ELSE rt0.c4 END IN ()));
SELECT ALL * FROM rt0, rt1 WHERE (CASE WHEN 0Xffffffffd4d3686e THEN ((rt1.c1)<>(rt0.c2)) ELSE ((rt0.c0) ISNULL) END) ORDER BY json_insert(rt0.c3, (- (rt1.c0)), ((rt0.c4)AND(NULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0Xffffffffd4d3686e THEN ((rt1.c1)!=(rt0.c2)) ELSE ((rt0.c0) ISNULL) END) IS TRUE)  as count FROM rt0, rt1 ORDER BY json_insert(rt0.c3, (- (rt1.c0)), ((rt0.c4)AND(NULL))) DESC);
SELECT ALL * FROM rt0, rt1 WHERE (CASE WHEN 0Xffffffffd4d3686e THEN ((rt1.c1)<>(rt0.c2)) ELSE ((rt0.c0) ISNULL) END) ORDER BY json_insert(rt0.c3, (- (rt1.c0)), ((rt0.c4)AND(NULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0Xffffffffd4d3686e THEN ((rt1.c1)!=(rt0.c2)) ELSE ((rt0.c0) ISNULL) END) IS TRUE)  as count FROM rt0, rt1 ORDER BY json_insert(rt0.c3, (- (rt1.c0)), ((rt0.c4)AND(NULL))) DESC);
SELECT ALL * FROM rt1 CROSS JOIN rt0 ON CAST(NULL AS TEXT) WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON CAST(NULL AS TEXT));
SELECT ALL * FROM rt1 CROSS JOIN rt0 ON CAST(NULL AS TEXT) WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON CAST(NULL AS TEXT));
SELECT ALL * FROM rt1 CROSS JOIN rt0 ON CAST(NULL AS TEXT) WHERE (rt1.c2);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1) ORDER BY (((((rt1.c1) IS TRUE), rt1.c1 COLLATE BINARY, '-9223372036854775808'))=((rt1.c2, CAST(rt1.c1 AS NUMERIC), ((rt1.c0)/(rt1.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c1) IS TRUE), rt1.c1 COLLATE BINARY, '-9223372036854775808'))==((rt1.c2, CAST(rt1.c1 AS NUMERIC), ((rt1.c0)/(rt1.c1)))))  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1) ORDER BY (((((rt1.c1) IS TRUE), rt1.c1 COLLATE BINARY, '-9223372036854775808'))=((rt1.c2, CAST(rt1.c1 AS NUMERIC), ((rt1.c0)/(rt1.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c1) IS TRUE), rt1.c1 COLLATE BINARY, '-9223372036854775808'))==((rt1.c2, CAST(rt1.c1 AS NUMERIC), ((rt1.c0)/(rt1.c1)))))  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1) ORDER BY (((((rt1.c1) IS TRUE), rt1.c1 COLLATE BINARY, '-9223372036854775808'))=((rt1.c2, CAST(rt1.c1 AS NUMERIC), ((rt1.c0)/(rt1.c1)))))  NULLS LAST;
SELECT ALL * FROM rt1, rt0 WHERE ((- (((rt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((- (((rt1.c0) IS TRUE)))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE ((- (((rt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((- (((rt1.c0) IS TRUE)))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE ((- (((rt1.c0) IS TRUE))));
SELECT COUNT(*) FROM rt0 WHERE (((COALESCE(rt0.c0, rt0.c1))|((rt0.c0 IN ())))) ORDER BY CASE WHEN ((rt0.c0)||(rt0.c2)) THEN rt0.c1 WHEN ((rt0.c4)<=(rt0.c3)) THEN (rt0.c2 IN ()) WHEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 END THEN rt0.c0 END  NULLS FIRST, ((LENGTH(rt0.c3))|((rt0.c3 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((COALESCE(rt0.c0, rt0.c1))|((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c0)||(rt0.c2)) THEN rt0.c1 WHEN ((rt0.c4)<=(rt0.c3)) THEN (rt0.c2 IN ()) WHEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 END THEN rt0.c0 END  NULLS FIRST, ((LENGTH(rt0.c3))|((rt0.c3 IN ()))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((COALESCE(rt0.c0, rt0.c1))|((rt0.c0 IN ())))) ORDER BY CASE WHEN ((rt0.c0)||(rt0.c2)) THEN rt0.c1 WHEN ((rt0.c4)<=(rt0.c3)) THEN (rt0.c2 IN ()) WHEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 END THEN rt0.c0 END  NULLS FIRST, ((LENGTH(rt0.c3))|((rt0.c3 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((COALESCE(rt0.c0, rt0.c1))|((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c0)||(rt0.c2)) THEN rt0.c1 WHEN ((rt0.c4)<=(rt0.c3)) THEN (rt0.c2 IN ()) WHEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 END THEN rt0.c0 END  NULLS FIRST, ((LENGTH(rt0.c3))|((rt0.c3 IN ()))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((COALESCE(rt0.c0, rt0.c1))|((rt0.c0 IN ())))) ORDER BY CASE WHEN ((rt0.c0)||(rt0.c2)) THEN rt0.c1 WHEN ((rt0.c4)<=(rt0.c3)) THEN (rt0.c2 IN ()) WHEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 END THEN rt0.c0 END  NULLS FIRST, ((LENGTH(rt0.c3))|((rt0.c3 IN ()))) ASC;
SELECT ALL * FROM rt1 WHERE ((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)) IN (CASE WHEN rt1.c0 THEN 0.325563731132091 ELSE rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)) IN (CASE WHEN rt1.c0 THEN 0.325563731132091 ELSE rt1.c0 END))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)) IN (CASE WHEN rt1.c0 THEN 0.325563731132091 ELSE rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)) IN (CASE WHEN rt1.c0 THEN 0.325563731132091 ELSE rt1.c0 END))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)) IN (CASE WHEN rt1.c0 THEN 0.325563731132091 ELSE rt1.c0 END)));
SELECT ALL * FROM rt1 WHERE (CASE (~ (rt1.c2))  WHEN ((((((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c2)))OR(rt1.c2)))AND(rt1.c2)))OR(rt1.c0)))OR(rt1.c1)) THEN ((rt1.c2) BETWEEN (rt1.c1) AND (x'')) ELSE rt1.c2 END) ORDER BY (- (((rt1.c2) BETWEEN (0xffffffffdda3cdf8) AND (0.0)))) ASC, (- ((('uY䍖6\r9BP') NOT NULL))) DESC, (((((rt1.c0 IN ()))OR(rt1.c0 COLLATE RTRIM)))OR(((rt1.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((CASE (~ (rt1.c2))  WHEN ((((((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c2)))OR(rt1.c2)))AND(rt1.c2)))OR(rt1.c0)))OR(rt1.c1)) THEN ((rt1.c2) BETWEEN (rt1.c1) AND (x'')) ELSE rt1.c2 END) IS TRUE)  as count FROM rt1 ORDER BY (- (((rt1.c2) BETWEEN (0xffffffffdda3cdf8) AND (0.0)))) ASC, (- ((('uY䍖6\r9BP') NOT NULL))) DESC, (((((rt1.c0 IN ()))OR(rt1.c0 COLLATE RTRIM)))OR(((rt1.c0) IS FALSE))));
SELECT ALL * FROM rt1 WHERE (CASE (~ (rt1.c2))  WHEN ((((((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c2)))OR(rt1.c2)))AND(rt1.c2)))OR(rt1.c0)))OR(rt1.c1)) THEN ((rt1.c2) BETWEEN (rt1.c1) AND (x'')) ELSE rt1.c2 END) ORDER BY (- (((rt1.c2) BETWEEN (0xffffffffdda3cdf8) AND (0.0)))) ASC, (- ((('uY䍖6\r9BP') NOT NULL))) DESC, (((((rt1.c0 IN ()))OR(rt1.c0 COLLATE RTRIM)))OR(((rt1.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((CASE (~ (rt1.c2))  WHEN ((((((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c2)))OR(rt1.c2)))AND(rt1.c2)))OR(rt1.c0)))OR(rt1.c1)) THEN ((rt1.c2) BETWEEN (rt1.c1) AND (x'')) ELSE rt1.c2 END) IS TRUE)  as count FROM rt1 ORDER BY (- (((rt1.c2) BETWEEN (0xffffffffdda3cdf8) AND (0.0)))) ASC, (- ((('uY䍖6\r9BP') NOT NULL))) DESC, (((((rt1.c0 IN ()))OR(rt1.c0 COLLATE RTRIM)))OR(((rt1.c0) IS FALSE))));
SELECT ALL * FROM rt1 WHERE (CASE (~ (rt1.c2))  WHEN ((((((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c2)))OR(rt1.c2)))AND(rt1.c2)))OR(rt1.c0)))OR(rt1.c1)) THEN ((rt1.c2) BETWEEN (rt1.c1) AND (x'')) ELSE rt1.c2 END) ORDER BY (- (((rt1.c2) BETWEEN (0xffffffffdda3cdf8) AND (0.0)))) ASC, (- ((('uY䍖6\r9BP') NOT NULL))) DESC, (((((rt1.c0 IN ()))OR(rt1.c0 COLLATE RTRIM)))OR(((rt1.c0) IS FALSE)));
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c0  WHEN (((rt0.c3))==((rt0.c0))) THEN rt0.c4 END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN (((rt0.c3))=((rt0.c0))) THEN rt0.c4 END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c0  WHEN (((rt0.c3))==((rt0.c0))) THEN rt0.c4 END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN (((rt0.c3))=((rt0.c0))) THEN rt0.c4 END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c0  WHEN (((rt0.c3))==((rt0.c0))) THEN rt0.c4 END);
SELECT ALL * FROM rt0 INNER JOIN rt1 ON CAST(((rt1.c0) ISNULL) AS REAL) WHERE (((((((rt1.c1)OR(rt1.c2)))OR('166077328'))) IS FALSE)) ORDER BY CAST((('1230558477') NOT BETWEEN (rt0.c2) AND (rt0.c2)) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1)OR(rt1.c2)))OR('166077328'))) IS FALSE)) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON CAST(((rt1.c0) ISNULL) AS REAL) ORDER BY CAST((('1230558477') NOT BETWEEN (rt0.c2) AND (rt0.c2)) AS NUMERIC) ASC  NULLS LAST);
SELECT ALL * FROM rt0 INNER JOIN rt1 ON CAST(((rt1.c0) ISNULL) AS REAL) WHERE (((((((rt1.c1)OR(rt1.c2)))OR('166077328'))) IS FALSE)) ORDER BY CAST((('1230558477') NOT BETWEEN (rt0.c2) AND (rt0.c2)) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1)OR(rt1.c2)))OR('166077328'))) IS FALSE)) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON CAST(((rt1.c0) ISNULL) AS REAL) ORDER BY CAST((('1230558477') NOT BETWEEN (rt0.c2) AND (rt0.c2)) AS NUMERIC) ASC  NULLS LAST);
SELECT ALL * FROM rt0 INNER JOIN rt1 ON CAST(((rt1.c0) ISNULL) AS REAL) WHERE (((((((rt1.c1)OR(rt1.c2)))OR('166077328'))) IS FALSE)) ORDER BY CAST((('1230558477') NOT BETWEEN (rt0.c2) AND (rt0.c2)) AS NUMERIC) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END END);
SELECT ALL COUNT(*) FROM rt1 WHERE ('') ORDER BY (((rt1.c0, rt1.c0, rt1.c1, rt1.c0, rt1.c1)) BETWEEN ((UPPER(rt1.c0), ((((rt1.c2)OR(rt1.c0)))OR(rt1.c2)), rt1.c0, rt1.c2, ((rt1.c1)OR(rt1.c2)))) AND ((((((((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c0)))OR(NULL)))AND(rt1.c2)), rt1.c1 COLLATE RTRIM, ABS(rt1.c0), rt1.c0 COLLATE BINARY, ((rt1.c0) NOT BETWEEN (rt1.c1) AND (x''))))), ((((((0Xffffffffeec8c745)OR(rt1.c0)))OR(rt1.c2)))LIKE(x'')), (((rt1.c0)) BETWEEN ((((rt1.c1) NOT NULL))) AND ((6.28898169E8))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0, rt1.c0, rt1.c1, rt1.c0, rt1.c1)) BETWEEN ((UPPER(rt1.c0), ((((rt1.c2)OR(rt1.c0)))OR(rt1.c2)), rt1.c0, rt1.c2, ((rt1.c1)OR(rt1.c2)))) AND ((((((((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c0)))OR(NULL)))AND(rt1.c2)), rt1.c1 COLLATE RTRIM, ABS(rt1.c0), rt1.c0 COLLATE BINARY, ((rt1.c0) NOT BETWEEN (rt1.c1) AND (x''))))), ((((((0Xffffffffeec8c745)OR(rt1.c0)))OR(rt1.c2)))LIKE(x'')), (((rt1.c0)) BETWEEN ((((rt1.c1) NOT NULL))) AND ((6.28898169E8))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE ('') ORDER BY (((rt1.c0, rt1.c0, rt1.c1, rt1.c0, rt1.c1)) BETWEEN ((UPPER(rt1.c0), ((((rt1.c2)OR(rt1.c0)))OR(rt1.c2)), rt1.c0, rt1.c2, ((rt1.c1)OR(rt1.c2)))) AND ((((((((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c0)))OR(NULL)))AND(rt1.c2)), rt1.c1 COLLATE RTRIM, ABS(rt1.c0), rt1.c0 COLLATE BINARY, ((rt1.c0) NOT BETWEEN (rt1.c1) AND (x''))))), ((((((0Xffffffffeec8c745)OR(rt1.c0)))OR(rt1.c2)))LIKE(x'')), (((rt1.c0)) BETWEEN ((((rt1.c1) NOT NULL))) AND ((6.28898169E8))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0, rt1.c0, rt1.c1, rt1.c0, rt1.c1)) BETWEEN ((UPPER(rt1.c0), ((((rt1.c2)OR(rt1.c0)))OR(rt1.c2)), rt1.c0, rt1.c2, ((rt1.c1)OR(rt1.c2)))) AND ((((((((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c0)))OR(NULL)))AND(rt1.c2)), rt1.c1 COLLATE RTRIM, ABS(rt1.c0), rt1.c0 COLLATE BINARY, ((rt1.c0) NOT BETWEEN (rt1.c1) AND (x''))))), ((((((0Xffffffffeec8c745)OR(rt1.c0)))OR(rt1.c2)))LIKE(x'')), (((rt1.c0)) BETWEEN ((((rt1.c1) NOT NULL))) AND ((6.28898169E8))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE ('') ORDER BY (((rt1.c0, rt1.c0, rt1.c1, rt1.c0, rt1.c1)) BETWEEN ((UPPER(rt1.c0), ((((rt1.c2)OR(rt1.c0)))OR(rt1.c2)), rt1.c0, rt1.c2, ((rt1.c1)OR(rt1.c2)))) AND ((((((((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c0)))OR(NULL)))AND(rt1.c2)), rt1.c1 COLLATE RTRIM, ABS(rt1.c0), rt1.c0 COLLATE BINARY, ((rt1.c0) NOT BETWEEN (rt1.c1) AND (x''))))), ((((((0Xffffffffeec8c745)OR(rt1.c0)))OR(rt1.c2)))LIKE(x'')), (((rt1.c0)) BETWEEN ((((rt1.c1) NOT NULL))) AND ((6.28898169E8))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE ((((- (rt0.c2)))OR(((((rt0.c2)AND(rt1.c2)))OR(rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c2)))OR(((((rt0.c2)AND(rt1.c2)))OR(rt1.c0))))) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE ((((- (rt0.c2)))OR(((((rt0.c2)AND(rt1.c2)))OR(rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c2)))OR(((((rt0.c2)AND(rt1.c2)))OR(rt1.c0))))) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE ((((- (rt0.c2)))OR(((((rt0.c2)AND(rt1.c2)))OR(rt1.c0)))));
SELECT * FROM rt0 WHERE (((UNLIKELY(rt0.c0)) IS FALSE)) ORDER BY CAST((- (rt0.c0)) AS NUMERIC)  NULLS FIRST, ((rt0.c2 COLLATE NOCASE)>=(x'93494bad'));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(rt0.c0)) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY CAST((- (rt0.c0)) AS NUMERIC)  NULLS FIRST, ((rt0.c2 COLLATE NOCASE)>=(x'93494bad')));
SELECT * FROM rt0 WHERE (((UNLIKELY(rt0.c0)) IS FALSE)) ORDER BY CAST((- (rt0.c0)) AS NUMERIC)  NULLS FIRST, ((rt0.c2 COLLATE NOCASE)>=(x'93494bad'));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(rt0.c0)) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY CAST((- (rt0.c0)) AS NUMERIC)  NULLS FIRST, ((rt0.c2 COLLATE NOCASE)>=(x'93494bad')));
SELECT * FROM rt0 WHERE (((UNLIKELY(rt0.c0)) IS FALSE)) ORDER BY CAST((- (rt0.c0)) AS NUMERIC)  NULLS FIRST, ((rt0.c2 COLLATE NOCASE)>=(x'93494bad'));
SELECT * FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c1);
SELECT ALL * FROM rt1, rt0 WHERE ((((((NULL) IS TRUE), (rt1.c2 IN ()), ((x'') NOT NULL)))<=((x'', (NOT (rt1.c0)), CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt1.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c0 ELSE rt1.c2 END)))) ORDER BY TRIM(DISTINCT CASE rt0.c2  WHEN rt0.c1 THEN rt0.c4 WHEN rt1.c2 THEN rt1.c0 WHEN rt0.c4 THEN rt1.c1 WHEN rt0.c1 THEN NULL WHEN rt1.c1 THEN rt1.c2 ELSE rt0.c0 END) DESC  NULLS FIRST, json_array_length(((rt0.c4) NOT BETWEEN (rt1.c1) AND (rt0.c2)), (+ (rt0.c0))), ((1e500) BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND ('r蠪o諕 '))) AND ((rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL) IS TRUE), (rt1.c2 IN ()), ((x'') NOT NULL)))<=((x'', (NOT (rt1.c0)), CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt1.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c0 ELSE rt1.c2 END)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY TRIM(DISTINCT CASE rt0.c2  WHEN rt0.c1 THEN rt0.c4 WHEN rt1.c2 THEN rt1.c0 WHEN rt0.c4 THEN rt1.c1 WHEN rt0.c1 THEN NULL WHEN rt1.c1 THEN rt1.c2 ELSE rt0.c0 END) DESC  NULLS FIRST, json_array_length(((rt0.c4) NOT BETWEEN (rt1.c1) AND (rt0.c2)), (+ (rt0.c0))), ((1e500) BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND ('r蠪o諕 '))) AND ((rt0.c1 IN ()))));
SELECT ALL * FROM rt1, rt0 WHERE ((((((NULL) IS TRUE), (rt1.c2 IN ()), ((x'') NOT NULL)))<=((x'', (NOT (rt1.c0)), CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt1.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c0 ELSE rt1.c2 END)))) ORDER BY TRIM(DISTINCT CASE rt0.c2  WHEN rt0.c1 THEN rt0.c4 WHEN rt1.c2 THEN rt1.c0 WHEN rt0.c4 THEN rt1.c1 WHEN rt0.c1 THEN NULL WHEN rt1.c1 THEN rt1.c2 ELSE rt0.c0 END) DESC  NULLS FIRST, json_array_length(((rt0.c4) NOT BETWEEN (rt1.c1) AND (rt0.c2)), (+ (rt0.c0))), ((1e500) BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND ('r蠪o諕 '))) AND ((rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL) IS TRUE), (rt1.c2 IN ()), ((x'') NOT NULL)))<=((x'', (NOT (rt1.c0)), CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt1.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c0 ELSE rt1.c2 END)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY TRIM(DISTINCT CASE rt0.c2  WHEN rt0.c1 THEN rt0.c4 WHEN rt1.c2 THEN rt1.c0 WHEN rt0.c4 THEN rt1.c1 WHEN rt0.c1 THEN NULL WHEN rt1.c1 THEN rt1.c2 ELSE rt0.c0 END) DESC  NULLS FIRST, json_array_length(((rt0.c4) NOT BETWEEN (rt1.c1) AND (rt0.c2)), (+ (rt0.c0))), ((1e500) BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND ('r蠪o諕 '))) AND ((rt0.c1 IN ()))));
SELECT * FROM rt1, rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))OR(CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN '-2082901730' ELSE rt1.c2 END)))AND((rt0.c3 IN (rt1.c0, rt0.c0))))) ORDER BY ((((((((rt0.c2 COLLATE RTRIM)AND(CAST(rt0.c2 AS REAL))))OR((('{a')<=(rt1.c2)))))OR(highlight(rt0.c4, rt0.c3, rt0.c0, rt1.c0))))OR(((rt0.c0)<>(rt1.c1)))) ASC  NULLS LAST, CASE WHEN (rt1.c0 IN ()) THEN ((rt1.c0)<<(rt0.c2)) WHEN CASE rt1.c1  WHEN rt1.c1 THEN rt0.c0 ELSE rt0.c2 END THEN HEX(DISTINCT rt0.c1) WHEN ((((rt1.c2)OR(rt1.c0)))OR(rt0.c1)) THEN (((rt0.c4)) BETWEEN (('\nRN')) AND ((rt0.c4))) WHEN CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END THEN (rt0.c4 IN ()) WHEN 0xffffffff81a6ddc3 THEN (NOT (rt0.c0)) ELSE CAST(rt1.c2 AS TEXT) END;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))OR(CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN '-2082901730' ELSE rt1.c2 END)))AND((rt0.c3 IN (rt1.c0, rt0.c0))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((((((rt0.c2 COLLATE RTRIM)AND(CAST(rt0.c2 AS REAL))))OR((('{a')<=(rt1.c2)))))OR(highlight(rt0.c4, rt0.c3, rt0.c0, rt1.c0))))OR(((rt0.c0)<>(rt1.c1)))) ASC  NULLS LAST, CASE WHEN (rt1.c0 IN ()) THEN ((rt1.c0)<<(rt0.c2)) WHEN CASE rt1.c1  WHEN rt1.c1 THEN rt0.c0 ELSE rt0.c2 END THEN HEX(DISTINCT rt0.c1) WHEN ((((rt1.c2)OR(rt1.c0)))OR(rt0.c1)) THEN (((rt0.c4)) BETWEEN (('\nRN')) AND ((rt0.c4))) WHEN CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END THEN (rt0.c4 IN ()) WHEN 0xffffffff81a6ddc3 THEN (NOT (rt0.c0)) ELSE CAST(rt1.c2 AS TEXT) END);
SELECT * FROM rt1, rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))OR(CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN '-2082901730' ELSE rt1.c2 END)))AND((rt0.c3 IN (rt1.c0, rt0.c0))))) ORDER BY ((((((((rt0.c2 COLLATE RTRIM)AND(CAST(rt0.c2 AS REAL))))OR((('{a')<=(rt1.c2)))))OR(highlight(rt0.c4, rt0.c3, rt0.c0, rt1.c0))))OR(((rt0.c0)<>(rt1.c1)))) ASC  NULLS LAST, CASE WHEN (rt1.c0 IN ()) THEN ((rt1.c0)<<(rt0.c2)) WHEN CASE rt1.c1  WHEN rt1.c1 THEN rt0.c0 ELSE rt0.c2 END THEN HEX(DISTINCT rt0.c1) WHEN ((((rt1.c2)OR(rt1.c0)))OR(rt0.c1)) THEN (((rt0.c4)) BETWEEN (('\nRN')) AND ((rt0.c4))) WHEN CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END THEN (rt0.c4 IN ()) WHEN 0xffffffff81a6ddc3 THEN (NOT (rt0.c0)) ELSE CAST(rt1.c2 AS TEXT) END;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))OR(CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN '-2082901730' ELSE rt1.c2 END)))AND((rt0.c3 IN (rt1.c0, rt0.c0))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((((((rt0.c2 COLLATE RTRIM)AND(CAST(rt0.c2 AS REAL))))OR((('{a')<=(rt1.c2)))))OR(highlight(rt0.c4, rt0.c3, rt0.c0, rt1.c0))))OR(((rt0.c0)<>(rt1.c1)))) ASC  NULLS LAST, CASE WHEN (rt1.c0 IN ()) THEN ((rt1.c0)<<(rt0.c2)) WHEN CASE rt1.c1  WHEN rt1.c1 THEN rt0.c0 ELSE rt0.c2 END THEN HEX(DISTINCT rt0.c1) WHEN ((((rt1.c2)OR(rt1.c0)))OR(rt0.c1)) THEN (((rt0.c4)) BETWEEN (('\nRN')) AND ((rt0.c4))) WHEN CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END THEN (rt0.c4 IN ()) WHEN 0xffffffff81a6ddc3 THEN (NOT (rt0.c0)) ELSE CAST(rt1.c2 AS TEXT) END);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON COALESCE(CAST(rt1.c2 AS TEXT), (rt0.c3 IN ())) WHERE ((((rt1.c1 IN ())) BETWEEN (rt1.c0) AND ('-709624166')));
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN ())) BETWEEN (rt1.c0) AND ('-709624166'))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON COALESCE(CAST(rt1.c2 AS TEXT), (rt0.c3 IN ())));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON COALESCE(CAST(rt1.c2 AS TEXT), (rt0.c3 IN ())) WHERE ((((rt1.c1 IN ())) BETWEEN (rt1.c0) AND ('-709624166')));
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN ())) BETWEEN (rt1.c0) AND ('-709624166'))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON COALESCE(CAST(rt1.c2 AS TEXT), (rt0.c3 IN ())));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON COALESCE(CAST(rt1.c2 AS TEXT), (rt0.c3 IN ())) WHERE ((((rt1.c1 IN ())) BETWEEN (rt1.c0) AND ('-709624166')));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((- (rt0.c1 COLLATE BINARY))) ORDER BY '8Q';
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, rt1 ORDER BY '8Q');
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((- (rt0.c1 COLLATE BINARY))) ORDER BY '8Q';
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, rt1 ORDER BY '8Q');
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((- (rt0.c1 COLLATE BINARY))) ORDER BY '8Q';
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON CAST(rt0.c2 AS REAL) WHERE (((rt0.c3)AND(rt0.c4)) COLLATE RTRIM) ORDER BY ((((((((((((((rt0.c1) IS FALSE))AND(((rt1.c1) IS TRUE))))OR(((rt0.c3)AND(rt1.c1)))))OR((- (rt0.c2)))))OR(((rt0.c1)>=(0X1)))))OR((((rt1.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c0)) AND ((rt0.c3, rt0.c0, rt0.c2))))))AND(rt0.c4)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)AND(rt0.c4)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON CAST(rt0.c2 AS REAL) ORDER BY ((((((((((((((rt0.c1) IS FALSE))AND(((rt1.c1) IS TRUE))))OR(((rt0.c3)AND(rt1.c1)))))OR((- (rt0.c2)))))OR(((rt0.c1)>=(0x1)))))OR((((rt1.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c0)) AND ((rt0.c3, rt0.c0, rt0.c2))))))AND(rt0.c4)) DESC);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON CAST(rt0.c2 AS REAL) WHERE (((rt0.c3)AND(rt0.c4)) COLLATE RTRIM) ORDER BY ((((((((((((((rt0.c1) IS FALSE))AND(((rt1.c1) IS TRUE))))OR(((rt0.c3)AND(rt1.c1)))))OR((- (rt0.c2)))))OR(((rt0.c1)>=(0X1)))))OR((((rt1.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c0)) AND ((rt0.c3, rt0.c0, rt0.c2))))))AND(rt0.c4)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)AND(rt0.c4)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON CAST(rt0.c2 AS REAL) ORDER BY ((((((((((((((rt0.c1) IS FALSE))AND(((rt1.c1) IS TRUE))))OR(((rt0.c3)AND(rt1.c1)))))OR((- (rt0.c2)))))OR(((rt0.c1)>=(0x1)))))OR((((rt1.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c0)) AND ((rt0.c3, rt0.c0, rt0.c2))))))AND(rt0.c4)) DESC);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON CAST(rt0.c2 AS REAL) WHERE (((rt0.c3)AND(rt0.c4)) COLLATE RTRIM) ORDER BY ((((((((((((((rt0.c1) IS FALSE))AND(((rt1.c1) IS TRUE))))OR(((rt0.c3)AND(rt1.c1)))))OR((- (rt0.c2)))))OR(((rt0.c1)>=(0X1)))))OR((((rt1.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c0)) AND ((rt0.c3, rt0.c0, rt0.c2))))))AND(rt0.c4)) DESC;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN (((((rt0.c4)) BETWEEN (('*')) AND ((rt0.c1))), ((rt0.c3)/(rt0.c0)), TYPEOF(rt0.c0))) AND ((rt0.c3, CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c4 END, CAST(rt0.c3 AS REAL))))) ORDER BY 0.94402929372991 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN (((((rt0.c4)) BETWEEN (('*')) AND ((rt0.c1))), ((rt0.c3)/(rt0.c0)), TYPEOF(rt0.c0))) AND ((rt0.c3, CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c4 END, CAST(rt0.c3 AS REAL))))) IS TRUE)  as count FROM rt0 ORDER BY 0.94402929372991 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN (((((rt0.c4)) BETWEEN (('*')) AND ((rt0.c1))), ((rt0.c3)/(rt0.c0)), TYPEOF(rt0.c0))) AND ((rt0.c3, CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c4 END, CAST(rt0.c3 AS REAL))))) ORDER BY 0.94402929372991 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN (((((rt0.c4)) BETWEEN (('*')) AND ((rt0.c1))), ((rt0.c3)/(rt0.c0)), TYPEOF(rt0.c0))) AND ((rt0.c3, CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c4 END, CAST(rt0.c3 AS REAL))))) IS TRUE)  as count FROM rt0 ORDER BY 0.94402929372991 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN (((((rt0.c4)) BETWEEN (('*')) AND ((rt0.c1))), ((rt0.c3)/(rt0.c0)), TYPEOF(rt0.c0))) AND ((rt0.c3, CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c4 END, CAST(rt0.c3 AS REAL))))) ORDER BY 0.94402929372991 DESC  NULLS LAST;
SELECT ALL * FROM rt1, rt0 WHERE (((CAST(rt1.c2 AS INTEGER)) BETWEEN ((((rt1.c0))==((rt0.c2)))) AND (((NULL)|(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS INTEGER)) BETWEEN ((((rt1.c0))==((rt0.c2)))) AND (((NULL)|(rt1.c0))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (((CAST(rt1.c2 AS INTEGER)) BETWEEN ((((rt1.c0))==((rt0.c2)))) AND (((NULL)|(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS INTEGER)) BETWEEN ((((rt1.c0))==((rt0.c2)))) AND (((NULL)|(rt1.c0))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (((CAST(rt1.c2 AS INTEGER)) BETWEEN ((((rt1.c0))==((rt0.c2)))) AND (((NULL)|(rt1.c0)))));
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((rt0.c0)|(rt0.c4)))>>(rt0.c3 COLLATE BINARY))) ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)|(rt0.c4)))>>(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt0 NOT INDEXED, rt1 ORDER BY rt0.c0  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((rt0.c0)|(rt0.c4)))>>(rt0.c3 COLLATE BINARY))) ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)|(rt0.c4)))>>(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt0 NOT INDEXED, rt1 ORDER BY rt0.c0  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((rt0.c0)|(rt0.c4)))>>(rt0.c3 COLLATE BINARY))) ORDER BY rt0.c0  NULLS LAST;
SELECT * FROM rt0 WHERE (((- (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((- (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((- (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((- (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((- (rt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CAST(((rt0.c3)<(rt0.c3)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c3)<(rt0.c3)) AS NUMERIC)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CAST(((rt0.c3)<(rt0.c3)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c3)<(rt0.c3)) AS NUMERIC)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CAST(((rt0.c3)<(rt0.c3)) AS NUMERIC));
SELECT ALL * FROM rt1 WHERE (CASE WHEN ((rt1.c0)==(rt1.c2)) THEN ((rt1.c2)<=(rt1.c0)) ELSE CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END END) ORDER BY (- (x''))  NULLS FIRST, x'383d' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c0)=(rt1.c2)) THEN ((rt1.c2)<=(rt1.c0)) ELSE CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END END) IS TRUE)  as count FROM rt1 ORDER BY (- (x''))  NULLS FIRST, x'383d' DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (CASE WHEN ((rt1.c0)==(rt1.c2)) THEN ((rt1.c2)<=(rt1.c0)) ELSE CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END END) ORDER BY (- (x''))  NULLS FIRST, x'383d' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c0)=(rt1.c2)) THEN ((rt1.c2)<=(rt1.c0)) ELSE CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END END) IS TRUE)  as count FROM rt1 ORDER BY (- (x''))  NULLS FIRST, x'383d' DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (CASE WHEN ((rt1.c0)==(rt1.c2)) THEN ((rt1.c2)<=(rt1.c0)) ELSE CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END END) ORDER BY (- (x''))  NULLS FIRST, x'383d' DESC  NULLS LAST;
SELECT COUNT(*) FROM rt1, rt0 WHERE (UPPER(CASE WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(CASE WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c1 END)) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (UPPER(CASE WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(CASE WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c1 END)) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (UPPER(CASE WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c1 END));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((((rt0.c4) IS TRUE))AND(((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c4)))))AND(((rt0.c3)LIKE(rt0.c4))))) ORDER BY CASE ((((rt0.c4)OR(rt1.c0)))AND(rt1.c0))  WHEN CASE WHEN rt0.c2 THEN '-1638365142' ELSE rt0.c1 END THEN CAST('!7CSd|R' AS TEXT) END DESC  NULLS FIRST, ((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c1)))AND(rt0.c4))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c4) IS TRUE))AND(((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c4)))))AND(((rt0.c3)LIKE(rt0.c4))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE ((((rt0.c4)OR(rt1.c0)))AND(rt1.c0))  WHEN CASE WHEN rt0.c2 THEN '-1638365142' ELSE rt0.c1 END THEN CAST('!7CSd|R' AS TEXT) END DESC  NULLS FIRST, ((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c1)))AND(rt0.c4))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((((rt0.c4) IS TRUE))AND(((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c4)))))AND(((rt0.c3)LIKE(rt0.c4))))) ORDER BY CASE ((((rt0.c4)OR(rt1.c0)))AND(rt1.c0))  WHEN CASE WHEN rt0.c2 THEN '-1638365142' ELSE rt0.c1 END THEN CAST('!7CSd|R' AS TEXT) END DESC  NULLS FIRST, ((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c1)))AND(rt0.c4))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c4) IS TRUE))AND(((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c4)))))AND(((rt0.c3)LIKE(rt0.c4))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE ((((rt0.c4)OR(rt1.c0)))AND(rt1.c0))  WHEN CASE WHEN rt0.c2 THEN '-1638365142' ELSE rt0.c1 END THEN CAST('!7CSd|R' AS TEXT) END DESC  NULLS FIRST, ((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c1)))AND(rt0.c4))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((((rt0.c4) IS TRUE))AND(((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c4)))))AND(((rt0.c3)LIKE(rt0.c4))))) ORDER BY CASE ((((rt0.c4)OR(rt1.c0)))AND(rt1.c0))  WHEN CASE WHEN rt0.c2 THEN '-1638365142' ELSE rt0.c1 END THEN CAST('!7CSd|R' AS TEXT) END DESC  NULLS FIRST, ((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c1)))AND(rt0.c4))  NULLS LAST;
SELECT ALL * FROM rt1 WHERE ((CAST(rt1.c0 AS REAL) IN ())) ORDER BY (((((rt1.c0)>(rt1.c1))))>=((rt1.c2))) DESC;
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c0 AS REAL) IN ())) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c0)>(rt1.c1))))>=((rt1.c2))) DESC);
SELECT ALL * FROM rt1 WHERE ((CAST(rt1.c0 AS REAL) IN ())) ORDER BY (((((rt1.c0)>(rt1.c1))))>=((rt1.c2))) DESC;
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c0 AS REAL) IN ())) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c0)>(rt1.c1))))>=((rt1.c2))) DESC);
SELECT ALL * FROM rt1 WHERE ((CAST(rt1.c0 AS REAL) IN ())) ORDER BY (((((rt1.c0)>(rt1.c1))))>=((rt1.c2))) DESC;
SELECT COUNT(*) FROM rt1 INNER JOIN rt0 ON (((((rt0.c0))=((rt0.c4)))) IS FALSE) WHERE (CAST(CAST(rt0.c2 AS BLOB) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c2 AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON (((((rt0.c0))==((rt0.c4)))) IS FALSE));
SELECT COUNT(*) FROM rt1 INNER JOIN rt0 ON (((((rt0.c0))=((rt0.c4)))) IS FALSE) WHERE (CAST(CAST(rt0.c2 AS BLOB) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c2 AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON (((((rt0.c0))==((rt0.c4)))) IS FALSE));
SELECT COUNT(*) FROM rt1 INNER JOIN rt0 ON (((((rt0.c0))=((rt0.c4)))) IS FALSE) WHERE (CAST(CAST(rt0.c2 AS BLOB) AS NUMERIC));
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c1)AND('1808227895')) COLLATE NOCASE) ORDER BY ((((((rt1.c2)AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c2));
SELECT SUM(count) FROM (SELECT ((((rt1.c1)AND('1808227895')) COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c2)AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c2)));
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c1)AND('1808227895')) COLLATE NOCASE) ORDER BY ((((((rt1.c2)AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c2));
SELECT SUM(count) FROM (SELECT ((((rt1.c1)AND('1808227895')) COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c2)AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c2)));
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c1)AND('1808227895')) COLLATE NOCASE) ORDER BY ((((((rt1.c2)AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c2));
SELECT ALL * FROM rt1, rt0 WHERE ((((((rt1.c0))=((rt0.c3)))) BETWEEN ((((rt1.c1, rt1.c1, rt0.c3))>=((rt0.c0, rt0.c1, rt1.c1)))) AND (((((rt0.c4)AND(rt0.c0)))AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0))=((rt0.c3)))) BETWEEN ((((rt1.c1, rt1.c1, rt0.c3))>=((rt0.c0, rt0.c1, rt1.c1)))) AND (((((rt0.c4)AND(rt0.c0)))AND(rt0.c3))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE ((((((rt1.c0))=((rt0.c3)))) BETWEEN ((((rt1.c1, rt1.c1, rt0.c3))>=((rt0.c0, rt0.c1, rt1.c1)))) AND (((((rt0.c4)AND(rt0.c0)))AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0))=((rt0.c3)))) BETWEEN ((((rt1.c1, rt1.c1, rt0.c3))>=((rt0.c0, rt0.c1, rt1.c1)))) AND (((((rt0.c4)AND(rt0.c0)))AND(rt0.c3))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE ((((((rt1.c0))=((rt0.c3)))) BETWEEN ((((rt1.c1, rt1.c1, rt0.c3))>=((rt0.c0, rt0.c1, rt1.c1)))) AND (((((rt0.c4)AND(rt0.c0)))AND(rt0.c3)))));
SELECT ALL * FROM rt0, rt1 WHERE ((((((rt1.c2)OR(rt1.c1)))OR(rt0.c2)) IN (COALESCE(rt0.c1, rt1.c0)))) ORDER BY (((rt0.c3 IN ()))>(json_object(rt1.c0, rt1.c1, rt0.c1, rt1.c0))) ASC, ((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt1.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c2)OR(rt1.c1)))OR(rt0.c2)) IN (COALESCE(rt0.c1, rt1.c0)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt0.c3 IN ()))>(json_object(rt1.c0, rt1.c1, rt0.c1, rt1.c0))) ASC, ((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt1.c0)) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM rt0, rt1 WHERE ((((((rt1.c2)OR(rt1.c1)))OR(rt0.c2)) IN (COALESCE(rt0.c1, rt1.c0)))) ORDER BY (((rt0.c3 IN ()))>(json_object(rt1.c0, rt1.c1, rt0.c1, rt1.c0))) ASC, ((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt1.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c2)OR(rt1.c1)))OR(rt0.c2)) IN (COALESCE(rt0.c1, rt1.c0)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt0.c3 IN ()))>(json_object(rt1.c0, rt1.c1, rt0.c1, rt1.c0))) ASC, ((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt1.c0)) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((CAST(rt0.c1 AS BLOB) IN ((((rt1.c0))<>((rt0.c4))))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c1 AS BLOB) IN ((((rt1.c0))<>((rt0.c4)))))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((CAST(rt0.c1 AS BLOB) IN ((((rt1.c0))<>((rt0.c4))))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c1 AS BLOB) IN ((((rt1.c0))<>((rt0.c4)))))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((CAST(rt0.c1 AS BLOB) IN ((((rt1.c0))<>((rt0.c4))))));
SELECT * FROM rt0 WHERE (CAST(rt0.c1 AS REAL)) ORDER BY (((rt0.c3, rt0.c3, '-2082901730')) NOT BETWEEN (((rt0.c1 IN ()), rt0.c3, CASE rt0.c4  WHEN rt0.c4 THEN rt0.c2 END)) AND (((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND (('0.8113365606968475'))), (rt0.c0 IN (rt0.c3)), rt0.c1))) ASC  NULLS FIRST, ((rt0.c0)&('EF')) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3, rt0.c3, '-2082901730')) NOT BETWEEN (((rt0.c1 IN ()), rt0.c3, CASE rt0.c4  WHEN rt0.c4 THEN rt0.c2 END)) AND (((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND (('0.8113365606968475'))), (rt0.c0 IN (rt0.c3)), rt0.c1))) ASC  NULLS FIRST, ((rt0.c0)&('EF')) COLLATE BINARY ASC);
SELECT * FROM rt0 WHERE (CAST(rt0.c1 AS REAL)) ORDER BY (((rt0.c3, rt0.c3, '-2082901730')) NOT BETWEEN (((rt0.c1 IN ()), rt0.c3, CASE rt0.c4  WHEN rt0.c4 THEN rt0.c2 END)) AND (((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND (('0.8113365606968475'))), (rt0.c0 IN (rt0.c3)), rt0.c1))) ASC  NULLS FIRST, ((rt0.c0)&('EF')) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3, rt0.c3, '-2082901730')) NOT BETWEEN (((rt0.c1 IN ()), rt0.c3, CASE rt0.c4  WHEN rt0.c4 THEN rt0.c2 END)) AND (((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND (('0.8113365606968475'))), (rt0.c0 IN (rt0.c3)), rt0.c1))) ASC  NULLS FIRST, ((rt0.c0)&('EF')) COLLATE BINARY ASC);
SELECT * FROM rt0 WHERE (CAST(rt0.c1 AS REAL)) ORDER BY (((rt0.c3, rt0.c3, '-2082901730')) NOT BETWEEN (((rt0.c1 IN ()), rt0.c3, CASE rt0.c4  WHEN rt0.c4 THEN rt0.c2 END)) AND (((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND (('0.8113365606968475'))), (rt0.c0 IN (rt0.c3)), rt0.c1))) ASC  NULLS FIRST, ((rt0.c0)&('EF')) COLLATE BINARY ASC;
SELECT COUNT(*) FROM rt1, rt0 WHERE (((rt0.c4 COLLATE RTRIM) BETWEEN ('-1585309669') AND (((rt1.c0)<<(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4 COLLATE RTRIM) BETWEEN ('-1585309669') AND (((rt1.c0)<<(rt0.c3))))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((rt0.c4 COLLATE RTRIM) BETWEEN ('-1585309669') AND (((rt1.c0)<<(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4 COLLATE RTRIM) BETWEEN ('-1585309669') AND (((rt1.c0)<<(rt0.c3))))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((rt0.c4 COLLATE RTRIM) BETWEEN ('-1585309669') AND (((rt1.c0)<<(rt0.c3)))));
SELECT COUNT(*) FROM rt0 WHERE ((((((NULL IN ()))AND(rt0.c2 COLLATE RTRIM)))AND(((((rt0.c1)AND(rt0.c0)))OR(rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((((((NULL IN ()))AND(rt0.c2 COLLATE RTRIM)))AND(((((rt0.c1)AND(rt0.c0)))OR(rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((NULL IN ()))AND(rt0.c2 COLLATE RTRIM)))AND(((((rt0.c1)AND(rt0.c0)))OR(rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((((((NULL IN ()))AND(rt0.c2 COLLATE RTRIM)))AND(((((rt0.c1)AND(rt0.c0)))OR(rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((NULL IN ()))AND(rt0.c2 COLLATE RTRIM)))AND(((((rt0.c1)AND(rt0.c0)))OR(rt0.c4)))));
SELECT ALL * FROM rt1 WHERE (((((((rt1.c2) IS FALSE))AND(((rt1.c2)*(rt1.c1)))))OR(((rt1.c0)>=(x''))))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2) IS FALSE))AND(((rt1.c2)*(rt1.c1)))))OR(((rt1.c0)>=(x''))))) IS TRUE)  as count FROM rt1 ORDER BY NULL  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((((((rt1.c2) IS FALSE))AND(((rt1.c2)*(rt1.c1)))))OR(((rt1.c0)>=(x''))))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2) IS FALSE))AND(((rt1.c2)*(rt1.c1)))))OR(((rt1.c0)>=(x''))))) IS TRUE)  as count FROM rt1 ORDER BY NULL  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((((((rt1.c2) IS FALSE))AND(((rt1.c2)*(rt1.c1)))))OR(((rt1.c0)>=(x''))))) ORDER BY NULL  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2))  WHEN (((rt1.c0))<((rt1.c1))) THEN ((((rt1.c1)AND(rt1.c0)))OR('1493515240')) END) ORDER BY CASE CAST(-2078709248 AS BLOB)  WHEN CAST(rt1.c0 AS REAL) THEN (rt1.c2 IN (rt1.c1)) END  NULLS FIRST, ((SQLITE_COMPILEOPTION_USED(rt1.c1)) ISNULL) ASC  NULLS FIRST, ((UNICODE(rt1.c2)) BETWEEN ((- (rt1.c0))) AND (rt1.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2))  WHEN (((rt1.c0))<((rt1.c1))) THEN ((((rt1.c1)AND(rt1.c0)))OR('1493515240')) END) IS TRUE)  as count FROM rt1 ORDER BY CASE CAST(-2078709248 AS BLOB)  WHEN CAST(rt1.c0 AS REAL) THEN (rt1.c2 IN (rt1.c1)) END  NULLS FIRST, ((SQLITE_COMPILEOPTION_USED(rt1.c1)) ISNULL) ASC  NULLS FIRST, ((UNICODE(rt1.c2)) BETWEEN ((- (rt1.c0))) AND (rt1.c1))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2))  WHEN (((rt1.c0))<((rt1.c1))) THEN ((((rt1.c1)AND(rt1.c0)))OR('1493515240')) END) ORDER BY CASE CAST(-2078709248 AS BLOB)  WHEN CAST(rt1.c0 AS REAL) THEN (rt1.c2 IN (rt1.c1)) END  NULLS FIRST, ((SQLITE_COMPILEOPTION_USED(rt1.c1)) ISNULL) ASC  NULLS FIRST, ((UNICODE(rt1.c2)) BETWEEN ((- (rt1.c0))) AND (rt1.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2))  WHEN (((rt1.c0))<((rt1.c1))) THEN ((((rt1.c1)AND(rt1.c0)))OR('1493515240')) END) IS TRUE)  as count FROM rt1 ORDER BY CASE CAST(-2078709248 AS BLOB)  WHEN CAST(rt1.c0 AS REAL) THEN (rt1.c2 IN (rt1.c1)) END  NULLS FIRST, ((SQLITE_COMPILEOPTION_USED(rt1.c1)) ISNULL) ASC  NULLS FIRST, ((UNICODE(rt1.c2)) BETWEEN ((- (rt1.c0))) AND (rt1.c1))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2))  WHEN (((rt1.c0))<((rt1.c1))) THEN ((((rt1.c1)AND(rt1.c0)))OR('1493515240')) END) ORDER BY CASE CAST(-2078709248 AS BLOB)  WHEN CAST(rt1.c0 AS REAL) THEN (rt1.c2 IN (rt1.c1)) END  NULLS FIRST, ((SQLITE_COMPILEOPTION_USED(rt1.c1)) ISNULL) ASC  NULLS FIRST, ((UNICODE(rt1.c2)) BETWEEN ((- (rt1.c0))) AND (rt1.c1))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((NOT (rt0.c2))) BETWEEN ((~ (rt0.c4))) AND (((rt0.c4)||(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c2))) BETWEEN ((~ (rt0.c4))) AND (((rt0.c4)||(rt0.c3))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((NOT (rt0.c2))) BETWEEN ((~ (rt0.c4))) AND (((rt0.c4)||(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c2))) BETWEEN ((~ (rt0.c4))) AND (((rt0.c4)||(rt0.c3))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((NOT (rt0.c2))) BETWEEN ((~ (rt0.c4))) AND (((rt0.c4)||(rt0.c3)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((NULL)IS NOT(rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)IS NOT(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((NULL)IS NOT(rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)IS NOT(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((NULL)IS NOT(rt0.c1 COLLATE NOCASE)));
SELECT ALL * FROM rt1 WHERE (QUOTE(((((rt1.c2)AND(rt1.c1)))AND(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((QUOTE(((((rt1.c2)AND(rt1.c1)))AND(rt1.c2)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (QUOTE(((((rt1.c2)AND(rt1.c1)))AND(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((QUOTE(((((rt1.c2)AND(rt1.c1)))AND(rt1.c2)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (QUOTE(((((rt1.c2)AND(rt1.c1)))AND(rt1.c2))));
SELECT * FROM rt1 NATURAL JOIN rt0 WHERE (((((rt0.c1)<<(rt1.c0))) NOT BETWEEN (rt1.c0) AND ((rt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)<<(rt1.c0))) NOT BETWEEN (rt1.c0) AND ((rt1.c0 IN ())))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT * FROM rt1 NATURAL JOIN rt0 WHERE (((((rt0.c1)<<(rt1.c0))) NOT BETWEEN (rt1.c0) AND ((rt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)<<(rt1.c0))) NOT BETWEEN (rt1.c0) AND ((rt1.c0 IN ())))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT * FROM rt1 NATURAL JOIN rt0 WHERE (((((rt0.c1)<<(rt1.c0))) NOT BETWEEN (rt1.c0) AND ((rt1.c0 IN ()))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END)));
SELECT * FROM rt0 WHERE (rt0.c3) ORDER BY (+ (CAST(rt0.c4 AS BLOB))) DESC, (NOT (rt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY (+ (CAST(rt0.c4 AS BLOB))) DESC, (NOT (rt0.c0))  NULLS FIRST);
SELECT * FROM rt0 WHERE (rt0.c3) ORDER BY (+ (CAST(rt0.c4 AS BLOB))) DESC, (NOT (rt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY (+ (CAST(rt0.c4 AS BLOB))) DESC, (NOT (rt0.c0))  NULLS FIRST);
SELECT * FROM rt0 WHERE (rt0.c3) ORDER BY (+ (CAST(rt0.c4 AS BLOB))) DESC, (NOT (rt0.c0))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1, rt0.c4, x'ecab', rt0.c0, rt0.c1)) BETWEEN (((((rt0.c0))!=((rt0.c0))), ((((rt0.c2)AND(0.13508517189142377)))AND(rt0.c0)), ((((((((rt0.c4)OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)), ((rt0.c1) NOTNULL), ((((((((rt0.c4)AND(rt0.c2)))OR(1.78274031E8)))OR(rt0.c1)))AND(rt0.c2)))) AND ((((rt0.c2)OR(rt0.c2)), '1095320406', CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN '-1585309669' WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c4 END, 0.553949739641118, ((rt0.c2)|(rt0.c0)))))) ORDER BY ((rt0.c1 COLLATE BINARY) BETWEEN (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3))) AND (CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c4, x'ecab', rt0.c0, rt0.c1)) BETWEEN (((((rt0.c0))<>((rt0.c0))), ((((rt0.c2)AND(0.13508517189142377)))AND(rt0.c0)), ((((((((rt0.c4)OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)), ((rt0.c1) NOTNULL), ((((((((rt0.c4)AND(rt0.c2)))OR(1.78274031E8)))OR(rt0.c1)))AND(rt0.c2)))) AND ((((rt0.c2)OR(rt0.c2)), '1095320406', CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN '-1585309669' WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c4 END, 0.553949739641118, ((rt0.c2)|(rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1 COLLATE BINARY) BETWEEN (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3))) AND (CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1, rt0.c4, x'ecab', rt0.c0, rt0.c1)) BETWEEN (((((rt0.c0))!=((rt0.c0))), ((((rt0.c2)AND(0.13508517189142377)))AND(rt0.c0)), ((((((((rt0.c4)OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)), ((rt0.c1) NOTNULL), ((((((((rt0.c4)AND(rt0.c2)))OR(1.78274031E8)))OR(rt0.c1)))AND(rt0.c2)))) AND ((((rt0.c2)OR(rt0.c2)), '1095320406', CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN '-1585309669' WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c4 END, 0.553949739641118, ((rt0.c2)|(rt0.c0)))))) ORDER BY ((rt0.c1 COLLATE BINARY) BETWEEN (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3))) AND (CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c4, x'ecab', rt0.c0, rt0.c1)) BETWEEN (((((rt0.c0))<>((rt0.c0))), ((((rt0.c2)AND(0.13508517189142377)))AND(rt0.c0)), ((((((((rt0.c4)OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)), ((rt0.c1) NOTNULL), ((((((((rt0.c4)AND(rt0.c2)))OR(1.78274031E8)))OR(rt0.c1)))AND(rt0.c2)))) AND ((((rt0.c2)OR(rt0.c2)), '1095320406', CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN '-1585309669' WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c4 END, 0.553949739641118, ((rt0.c2)|(rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1 COLLATE BINARY) BETWEEN (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3))) AND (CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1, rt0.c4, x'ecab', rt0.c0, rt0.c1)) BETWEEN (((((rt0.c0))!=((rt0.c0))), ((((rt0.c2)AND(0.13508517189142377)))AND(rt0.c0)), ((((((((rt0.c4)OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)), ((rt0.c1) NOTNULL), ((((((((rt0.c4)AND(rt0.c2)))OR(1.78274031E8)))OR(rt0.c1)))AND(rt0.c2)))) AND ((((rt0.c2)OR(rt0.c2)), '1095320406', CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN '-1585309669' WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c4 END, 0.553949739641118, ((rt0.c2)|(rt0.c0)))))) ORDER BY ((rt0.c1 COLLATE BINARY) BETWEEN (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3))) AND (CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c0 END))  NULLS LAST;
SELECT * FROM rt1, rt0 WHERE (((8.56423535E8 COLLATE NOCASE) NOT BETWEEN ((~ (rt0.c0))) AND (((rt0.c4)IS NOT(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((8.56423535E8 COLLATE NOCASE) NOT BETWEEN ((~ (rt0.c0))) AND (((rt0.c4)IS NOT(rt0.c1))))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((8.56423535E8 COLLATE NOCASE) NOT BETWEEN ((~ (rt0.c0))) AND (((rt0.c4)IS NOT(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((8.56423535E8 COLLATE NOCASE) NOT BETWEEN ((~ (rt0.c0))) AND (((rt0.c4)IS NOT(rt0.c1))))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((8.56423535E8 COLLATE NOCASE) NOT BETWEEN ((~ (rt0.c0))) AND (((rt0.c4)IS NOT(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY (rt0.c2 IN ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))  NULLS FIRST, ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c4)))+(rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c2 IN ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))  NULLS FIRST, ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c4)))+(rt0.c2))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY (rt0.c2 IN ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))  NULLS FIRST, ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c4)))+(rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c2 IN ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))  NULLS FIRST, ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c4)))+(rt0.c2))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY (rt0.c2 IN ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))  NULLS FIRST, ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c4)))+(rt0.c2))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((rt0.c3 COLLATE BINARY) IS TRUE)) ORDER BY CASE LIKELIHOOD(rt0.c0, 0.3831763140937424)  WHEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN ((rt0.c1) BETWEEN ('') AND (rt0.c3)) ELSE TIME(rt0.c2, rt0.c1, rt0.c0) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY CASE LIKELIHOOD(rt0.c0, 0.3831763140937424)  WHEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN ((rt0.c1) BETWEEN ('') AND (rt0.c3)) ELSE TIME(rt0.c2, rt0.c1, rt0.c0) END  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((rt0.c3 COLLATE BINARY) IS TRUE)) ORDER BY CASE LIKELIHOOD(rt0.c0, 0.3831763140937424)  WHEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN ((rt0.c1) BETWEEN ('') AND (rt0.c3)) ELSE TIME(rt0.c2, rt0.c1, rt0.c0) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY CASE LIKELIHOOD(rt0.c0, 0.3831763140937424)  WHEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN ((rt0.c1) BETWEEN ('') AND (rt0.c3)) ELSE TIME(rt0.c2, rt0.c1, rt0.c0) END  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((rt0.c3 COLLATE BINARY) IS TRUE)) ORDER BY CASE LIKELIHOOD(rt0.c0, 0.3831763140937424)  WHEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN ((rt0.c1) BETWEEN ('') AND (rt0.c3)) ELSE TIME(rt0.c2, rt0.c1, rt0.c0) END  NULLS LAST;
SELECT * FROM rt1 WHERE (((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END) NOT BETWEEN (rt1.c2 COLLATE RTRIM) AND (CAST(rt1.c2 AS TEXT)))) ORDER BY (((rt1.c1 IN ()))+(rt1.c0))  NULLS LAST, rt1.c2 ASC, (((rt1.c0)) NOT BETWEEN (((((rt1.c1))=((rt1.c0))))) AND ((((rt1.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END) NOT BETWEEN (rt1.c2 COLLATE RTRIM) AND (CAST(rt1.c2 AS TEXT)))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c1 IN ()))+(rt1.c0))  NULLS LAST, rt1.c2 ASC, (((rt1.c0)) NOT BETWEEN (((((rt1.c1))==((rt1.c0))))) AND ((((rt1.c2) IS TRUE)))));
SELECT * FROM rt1 WHERE (((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END) NOT BETWEEN (rt1.c2 COLLATE RTRIM) AND (CAST(rt1.c2 AS TEXT)))) ORDER BY (((rt1.c1 IN ()))+(rt1.c0))  NULLS LAST, rt1.c2 ASC, (((rt1.c0)) NOT BETWEEN (((((rt1.c1))=((rt1.c0))))) AND ((((rt1.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END) NOT BETWEEN (rt1.c2 COLLATE RTRIM) AND (CAST(rt1.c2 AS TEXT)))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c1 IN ()))+(rt1.c0))  NULLS LAST, rt1.c2 ASC, (((rt1.c0)) NOT BETWEEN (((((rt1.c1))==((rt1.c0))))) AND ((((rt1.c2) IS TRUE)))));
SELECT * FROM rt1 WHERE (((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END) NOT BETWEEN (rt1.c2 COLLATE RTRIM) AND (CAST(rt1.c2 AS TEXT)))) ORDER BY (((rt1.c1 IN ()))+(rt1.c0))  NULLS LAST, rt1.c2 ASC, (((rt1.c0)) NOT BETWEEN (((((rt1.c1))=((rt1.c0))))) AND ((((rt1.c2) IS TRUE))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((((((rt1.c0)OR(rt1.c0)))OR(rt1.c0)))))) ORDER BY CAST('6y{n' AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((((((rt1.c0)OR(rt1.c0)))OR(rt1.c0)))))) IS TRUE)  as count FROM rt1 ORDER BY CAST('6y{n' AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((((((rt1.c0)OR(rt1.c0)))OR(rt1.c0)))))) ORDER BY CAST('6y{n' AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((((((rt1.c0)OR(rt1.c0)))OR(rt1.c0)))))) IS TRUE)  as count FROM rt1 ORDER BY CAST('6y{n' AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((((((rt1.c0)OR(rt1.c0)))OR(rt1.c0)))))) ORDER BY CAST('6y{n' AS BLOB)  NULLS LAST;
SELECT * FROM rt1 WHERE (((CASE WHEN rt1.c2 THEN rt1.c0 END)%((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c2 THEN rt1.c0 END)%((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((CASE WHEN rt1.c2 THEN rt1.c0 END)%((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c2 THEN rt1.c0 END)%((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((CASE WHEN rt1.c2 THEN rt1.c0 END)%((rt1.c2 IN ()))));
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c0 THEN ((rt0.c4)%(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c0 THEN ((rt0.c4)%(rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c0 THEN ((rt0.c4)%(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c0 THEN ((rt0.c4)%(rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c0 THEN ((rt0.c4)%(rt0.c2)) END);
SELECT ALL * FROM rt1 WHERE (COALESCE(CASE WHEN rt1.c0 THEN rt1.c1 ELSE x'' END, ((rt1.c2)/(x'5443'))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(CASE WHEN rt1.c0 THEN rt1.c1 ELSE x'' END, ((rt1.c2)/(x'5443')))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (COALESCE(CASE WHEN rt1.c0 THEN rt1.c1 ELSE x'' END, ((rt1.c2)/(x'5443'))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(CASE WHEN rt1.c0 THEN rt1.c1 ELSE x'' END, ((rt1.c2)/(x'5443')))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (COALESCE(CASE WHEN rt1.c0 THEN rt1.c1 ELSE x'' END, ((rt1.c2)/(x'5443'))));
SELECT * FROM rt0, rt1 WHERE (((rt0.c4)>=(((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4)>=(((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (((rt0.c4)>=(((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4)>=(((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (((rt0.c4)>=(((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))));
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2)) NOT BETWEEN ((((rt1.c1)>=(rt1.c1)))) AND ((CASE WHEN rt1.c0 THEN rt1.c1 END)))) ORDER BY ((0x1f1ae648 COLLATE BINARY)|(NULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) NOT BETWEEN ((((rt1.c1)>=(rt1.c1)))) AND ((CASE WHEN rt1.c0 THEN rt1.c1 END)))) IS TRUE)  as count FROM rt1 ORDER BY ((0x1f1ae648 COLLATE BINARY)|(NULL)));
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2)) NOT BETWEEN ((((rt1.c1)>=(rt1.c1)))) AND ((CASE WHEN rt1.c0 THEN rt1.c1 END)))) ORDER BY ((0x1f1ae648 COLLATE BINARY)|(NULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) NOT BETWEEN ((((rt1.c1)>=(rt1.c1)))) AND ((CASE WHEN rt1.c0 THEN rt1.c1 END)))) IS TRUE)  as count FROM rt1 ORDER BY ((0x1f1ae648 COLLATE BINARY)|(NULL)));
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2)) NOT BETWEEN ((((rt1.c1)>=(rt1.c1)))) AND ((CASE WHEN rt1.c0 THEN rt1.c1 END)))) ORDER BY ((0x1f1ae648 COLLATE BINARY)|(NULL));
SELECT ALL * FROM rt0, rt1 WHERE ((+ ((((rt0.c1))<>((rt0.c0)))))) ORDER BY ((LOWER(rt0.c3))>>(rt0.c3));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((rt0.c1))!=((rt0.c0)))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((LOWER(rt0.c3))>>(rt0.c3)));
SELECT ALL * FROM rt0, rt1 WHERE ((+ ((((rt0.c1))<>((rt0.c0)))))) ORDER BY ((LOWER(rt0.c3))>>(rt0.c3));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((rt0.c1))!=((rt0.c0)))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((LOWER(rt0.c3))>>(rt0.c3)));
SELECT ALL * FROM rt0, rt1 WHERE ((+ ((((rt0.c1))<>((rt0.c0)))))) ORDER BY ((LOWER(rt0.c3))>>(rt0.c3));
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c1 COLLATE RTRIM)GLOB(((((((((NULL)OR(rt1.c2)))AND(rt1.c1)))OR(rt1.c1)))OR(rt1.c1))))) ORDER BY ((rt1.c2)IS(rt1.c1)) COLLATE BINARY DESC  NULLS LAST, CAST(((((rt1.c2)OR(x'')))AND(rt1.c1)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE RTRIM)GLOB(((((((((NULL)OR(rt1.c2)))AND(rt1.c1)))OR(rt1.c1)))OR(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2)IS(rt1.c1)) COLLATE BINARY DESC  NULLS LAST, CAST(((((rt1.c2)OR(x'')))AND(rt1.c1)) AS INTEGER));
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c1 COLLATE RTRIM)GLOB(((((((((NULL)OR(rt1.c2)))AND(rt1.c1)))OR(rt1.c1)))OR(rt1.c1))))) ORDER BY ((rt1.c2)IS(rt1.c1)) COLLATE BINARY DESC  NULLS LAST, CAST(((((rt1.c2)OR(x'')))AND(rt1.c1)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE RTRIM)GLOB(((((((((NULL)OR(rt1.c2)))AND(rt1.c1)))OR(rt1.c1)))OR(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2)IS(rt1.c1)) COLLATE BINARY DESC  NULLS LAST, CAST(((((rt1.c2)OR(x'')))AND(rt1.c1)) AS INTEGER));
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c1 COLLATE RTRIM)GLOB(((((((((NULL)OR(rt1.c2)))AND(rt1.c1)))OR(rt1.c1)))OR(rt1.c1))))) ORDER BY ((rt1.c2)IS(rt1.c1)) COLLATE BINARY DESC  NULLS LAST, CAST(((((rt1.c2)OR(x'')))AND(rt1.c1)) AS INTEGER);
SELECT COUNT(*) FROM rt1 WHERE ((((~ (rt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((~ (rt1.c0))) ISNULL)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((~ (rt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((~ (rt1.c0))) ISNULL)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((~ (rt1.c0))) ISNULL));
SELECT ALL * FROM rt1 WHERE ((((((((((NOT (rt1.c1)))OR(IFNULL(rt1.c2, x'4d99f010'))))AND(CAST(rt1.c1 AS NUMERIC))))OR(((((rt1.c0)AND(rt1.c2)))AND(rt1.c1)))))AND(((0.7189123773746033) NOT BETWEEN (rt1.c0) AND ('')))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((NOT (rt1.c1)))OR(IFNULL(rt1.c2, x'4d99f010'))))AND(CAST(rt1.c1 AS NUMERIC))))OR(((((rt1.c0)AND(rt1.c2)))AND(rt1.c1)))))AND(((0.7189123773746033) NOT BETWEEN (rt1.c0) AND (''))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((((((NOT (rt1.c1)))OR(IFNULL(rt1.c2, x'4d99f010'))))AND(CAST(rt1.c1 AS NUMERIC))))OR(((((rt1.c0)AND(rt1.c2)))AND(rt1.c1)))))AND(((0.7189123773746033) NOT BETWEEN (rt1.c0) AND ('')))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((NOT (rt1.c1)))OR(IFNULL(rt1.c2, x'4d99f010'))))AND(CAST(rt1.c1 AS NUMERIC))))OR(((((rt1.c0)AND(rt1.c2)))AND(rt1.c1)))))AND(((0.7189123773746033) NOT BETWEEN (rt1.c0) AND (''))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((((((NOT (rt1.c1)))OR(IFNULL(rt1.c2, x'4d99f010'))))AND(CAST(rt1.c1 AS NUMERIC))))OR(((((rt1.c0)AND(rt1.c2)))AND(rt1.c1)))))AND(((0.7189123773746033) NOT BETWEEN (rt1.c0) AND ('')))));
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0))>=((json_patch(rt1.c1, rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0))>=((json_patch(rt1.c1, rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0))>=((json_patch(rt1.c1, rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0))>=((json_patch(rt1.c1, rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0))>=((json_patch(rt1.c1, rt1.c0)))));
SELECT COUNT(*) FROM rt1 WHERE (((CAST(rt1.c2 AS TEXT)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS TEXT)) IS TRUE)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((CAST(rt1.c2 AS TEXT)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS TEXT)) IS TRUE)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((CAST(rt1.c2 AS TEXT)) IS TRUE));
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt1.c0)-(rt0.c2))) NOT BETWEEN (json_remove(rt1.c2, rt1.c2)) AND ((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)-(rt0.c2))) NOT BETWEEN (json_remove(rt1.c2, rt1.c2)) AND ((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1)))))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt1.c0)-(rt0.c2))) NOT BETWEEN (json_remove(rt1.c2, rt1.c2)) AND ((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)-(rt0.c2))) NOT BETWEEN (json_remove(rt1.c2, rt1.c2)) AND ((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1)))))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt0 WHERE (((rt0.c1)/(IFNULL('-2078709248', rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)/(IFNULL('-2078709248', rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c1)/(IFNULL('-2078709248', rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)/(IFNULL('-2078709248', rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c1)/(IFNULL('-2078709248', rt0.c3))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((rt0.c3)AND(rt0.c4)))AND(rt0.c1)))AND(rt0.c1)))AND(NULL)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c3)AND(rt0.c4)))AND(rt0.c1)))AND(rt0.c1)))AND(NULL)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((rt0.c3)AND(rt0.c4)))AND(rt0.c1)))AND(rt0.c1)))AND(NULL)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c3)AND(rt0.c4)))AND(rt0.c1)))AND(rt0.c1)))AND(NULL)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((rt0.c3)AND(rt0.c4)))AND(rt0.c1)))AND(rt0.c1)))AND(NULL)) IN ()));
SELECT * FROM rt1, rt0 WHERE (((rt1.c1 COLLATE BINARY)||(((rt0.c2) IS TRUE)))) ORDER BY 0.9070152076210185 ASC;
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE BINARY)||(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY 0.9070152076210185 ASC);
SELECT * FROM rt1, rt0 WHERE (((rt1.c1 COLLATE BINARY)||(((rt0.c2) IS TRUE)))) ORDER BY 0.9070152076210185 ASC;
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE BINARY)||(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY 0.9070152076210185 ASC);
SELECT * FROM rt1, rt0 WHERE (((rt1.c1 COLLATE BINARY)||(((rt0.c2) IS TRUE)))) ORDER BY 0.9070152076210185 ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c2 COLLATE NOCASE) NOT BETWEEN (((rt1.c2) ISNULL)) AND (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 END))) ORDER BY (((rt1.c0)) BETWEEN ((STRFTIME(rt1.c2, rt1.c2, rt1.c1))) AND ((((rt1.c0) IS FALSE)))) ASC, HEX(DISTINCT rt1.c2) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE NOCASE) NOT BETWEEN (((rt1.c2) ISNULL)) AND (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 END))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0)) BETWEEN ((STRFTIME(rt1.c2, rt1.c2, rt1.c1))) AND ((((rt1.c0) IS FALSE)))) ASC, HEX(DISTINCT rt1.c2) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c2 COLLATE NOCASE) NOT BETWEEN (((rt1.c2) ISNULL)) AND (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 END))) ORDER BY (((rt1.c0)) BETWEEN ((STRFTIME(rt1.c2, rt1.c2, rt1.c1))) AND ((((rt1.c0) IS FALSE)))) ASC, HEX(DISTINCT rt1.c2) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE NOCASE) NOT BETWEEN (((rt1.c2) ISNULL)) AND (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 END))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0)) BETWEEN ((STRFTIME(rt1.c2, rt1.c2, rt1.c1))) AND ((((rt1.c0) IS FALSE)))) ASC, HEX(DISTINCT rt1.c2) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c2 COLLATE NOCASE) NOT BETWEEN (((rt1.c2) ISNULL)) AND (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 END))) ORDER BY (((rt1.c0)) BETWEEN ((STRFTIME(rt1.c2, rt1.c2, rt1.c1))) AND ((((rt1.c0) IS FALSE)))) ASC, HEX(DISTINCT rt1.c2) COLLATE BINARY DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END IN ())) ORDER BY CASE WHEN (+ (rt1.c2)) THEN (- (rt1.c0)) ELSE CASE WHEN rt1.c0 THEN rt1.c1 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END IN ())) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN (+ (rt1.c2)) THEN (- (rt1.c0)) ELSE CASE WHEN rt1.c0 THEN rt1.c1 END END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END IN ())) ORDER BY CASE WHEN (+ (rt1.c2)) THEN (- (rt1.c0)) ELSE CASE WHEN rt1.c0 THEN rt1.c1 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END IN ())) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN (+ (rt1.c2)) THEN (- (rt1.c0)) ELSE CASE WHEN rt1.c0 THEN rt1.c1 END END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END IN ())) ORDER BY CASE WHEN (+ (rt1.c2)) THEN (- (rt1.c0)) ELSE CASE WHEN rt1.c0 THEN rt1.c1 END END  NULLS LAST;
SELECT * FROM rt1, rt0 WHERE ((((rt0.c3)>=(rt1.c2)) IN (((((((((rt1.c0)OR(rt1.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(rt1.c2))))) ORDER BY x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)>=(rt1.c2)) IN (((((((((rt1.c0)OR(rt1.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(rt1.c2))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY x'' DESC  NULLS LAST);
SELECT * FROM rt1, rt0 WHERE ((((rt0.c3)>=(rt1.c2)) IN (((((((((rt1.c0)OR(rt1.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(rt1.c2))))) ORDER BY x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)>=(rt1.c2)) IN (((((((((rt1.c0)OR(rt1.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(rt1.c2))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY x'' DESC  NULLS LAST);
SELECT * FROM rt1, rt0 WHERE ((((rt0.c3)>=(rt1.c2)) IN (((((((((rt1.c0)OR(rt1.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(rt1.c2))))) ORDER BY x'' DESC  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (NULL) ORDER BY CAST(LENGTH(rt1.c1) AS NUMERIC)  NULLS FIRST, CHANGES() ASC  NULLS FIRST, ((rt1.c0 COLLATE BINARY)>>((((rt1.c1))=((rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1 ORDER BY CAST(LENGTH(rt1.c1) AS NUMERIC)  NULLS FIRST, CHANGES() ASC  NULLS FIRST, ((rt1.c0 COLLATE BINARY)>>((((rt1.c1))==((rt1.c2))))));
SELECT COUNT(*) FROM rt1 WHERE (NULL) ORDER BY CAST(LENGTH(rt1.c1) AS NUMERIC)  NULLS FIRST, CHANGES() ASC  NULLS FIRST, ((rt1.c0 COLLATE BINARY)>>((((rt1.c1))=((rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1 ORDER BY CAST(LENGTH(rt1.c1) AS NUMERIC)  NULLS FIRST, CHANGES() ASC  NULLS FIRST, ((rt1.c0 COLLATE BINARY)>>((((rt1.c1))==((rt1.c2))))));
SELECT COUNT(*) FROM rt1 WHERE (NULL) ORDER BY CAST(LENGTH(rt1.c1) AS NUMERIC)  NULLS FIRST, CHANGES() ASC  NULLS FIRST, ((rt1.c0 COLLATE BINARY)>>((((rt1.c1))=((rt1.c2)))));
SELECT COUNT(*) FROM rt0, rt1 WHERE (ABS((rt1.c2 IN (rt0.c1, rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((ABS((rt1.c2 IN (rt0.c1, rt0.c3)))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (ABS((rt1.c2 IN (rt0.c1, rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((ABS((rt1.c2 IN (rt0.c1, rt0.c3)))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (ABS((rt1.c2 IN (rt0.c1, rt0.c3))));
SELECT COUNT(*) FROM rt0 WHERE ((~ (((rt0.c3)-(rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c3)-(rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((~ (((rt0.c3)-(rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c3)-(rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((~ (((rt0.c3)-(rt0.c4)))));
SELECT COUNT(*) FROM rt1 NATURAL JOIN rt0 WHERE ((((LAST_INSERT_ROWID(), (rt0.c2 IN (rt0.c0, rt0.c3)), (~ (rt0.c4)), rt1.c2 COLLATE NOCASE, ((rt0.c2)<=(rt0.c1))))!=((TRIM(rt1.c0), NULL, (0.5311013418021832 IN ()), ((((rt0.c2)OR(rt0.c1)))AND(rt0.c3)), ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c4))))));
SELECT SUM(count) FROM (SELECT ALL (((((LAST_INSERT_ROWID(), (rt0.c2 IN (rt0.c0, rt0.c3)), (~ (rt0.c4)), rt1.c2 COLLATE NOCASE, ((rt0.c2)<=(rt0.c1))))<>((TRIM(rt1.c0), NULL, (0.5311013418021832 IN ()), ((((rt0.c2)OR(rt0.c1)))AND(rt0.c3)), ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c4)))))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT COUNT(*) FROM rt1 NATURAL JOIN rt0 WHERE ((((LAST_INSERT_ROWID(), (rt0.c2 IN (rt0.c0, rt0.c3)), (~ (rt0.c4)), rt1.c2 COLLATE NOCASE, ((rt0.c2)<=(rt0.c1))))!=((TRIM(rt1.c0), NULL, (0.5311013418021832 IN ()), ((((rt0.c2)OR(rt0.c1)))AND(rt0.c3)), ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c4))))));
SELECT SUM(count) FROM (SELECT ALL (((((LAST_INSERT_ROWID(), (rt0.c2 IN (rt0.c0, rt0.c3)), (~ (rt0.c4)), rt1.c2 COLLATE NOCASE, ((rt0.c2)<=(rt0.c1))))<>((TRIM(rt1.c0), NULL, (0.5311013418021832 IN ()), ((((rt0.c2)OR(rt0.c1)))AND(rt0.c3)), ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c4)))))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT COUNT(*) FROM rt1 NATURAL JOIN rt0 WHERE ((((LAST_INSERT_ROWID(), (rt0.c2 IN (rt0.c0, rt0.c3)), (~ (rt0.c4)), rt1.c2 COLLATE NOCASE, ((rt0.c2)<=(rt0.c1))))!=((TRIM(rt1.c0), NULL, (0.5311013418021832 IN ()), ((((rt0.c2)OR(rt0.c1)))AND(rt0.c3)), ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c4))))));
SELECT ALL * FROM rt0 WHERE ((((~ (rt0.c0))) IS FALSE)) ORDER BY ((((rt0.c4)IS NOT(NULL)))>=((rt0.c2 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c4)IS NOT(NULL)))>=((rt0.c2 IN ()))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((~ (rt0.c0))) IS FALSE)) ORDER BY ((((rt0.c4)IS NOT(NULL)))>=((rt0.c2 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c4)IS NOT(NULL)))>=((rt0.c2 IN ()))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((~ (rt0.c0))) IS FALSE)) ORDER BY ((((rt0.c4)IS NOT(NULL)))>=((rt0.c2 IN ()))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1 CROSS JOIN rt0 ON json_array(x'', rt0.c3 COLLATE BINARY, (((rt1.c1, rt1.c0, rt0.c2, rt0.c4, rt0.c3))>=((rt0.c3, rt0.c4, 0.7303625167495675, rt0.c3, rt0.c4))), UPPER(rt0.c0)) WHERE (((CAST(rt1.c0 AS INTEGER)) IS FALSE)) ORDER BY CAST(LOWER(rt0.c0) AS NUMERIC)  NULLS FIRST, ((((((((((rt0.c4)>>(rt0.c4)))AND(CAST(rt1.c1 AS INTEGER))))AND(((rt1.c0) BETWEEN (rt1.c0) AND (rt0.c4)))))OR((((rt1.c1))<((rt1.c2))))))OR(UPPER(rt0.c2)))  NULLS FIRST, ((((rt0.c2)OR('0.2327814360387358')))LIKE(((rt0.c3) NOT BETWEEN (rt1.c1) AND (rt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c0 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON json_array(x'', rt0.c3 COLLATE BINARY, (((rt1.c1, rt1.c0, rt0.c2, rt0.c4, rt0.c3))>=((rt0.c3, rt0.c4, 0.7303625167495675, rt0.c3, rt0.c4))), UPPER(rt0.c0)) ORDER BY CAST(LOWER(rt0.c0) AS NUMERIC)  NULLS FIRST, ((((((((((rt0.c4)>>(rt0.c4)))AND(CAST(rt1.c1 AS INTEGER))))AND(((rt1.c0) BETWEEN (rt1.c0) AND (rt0.c4)))))OR((((rt1.c1))<((rt1.c2))))))OR(UPPER(rt0.c2)))  NULLS FIRST, ((((rt0.c2)OR('0.2327814360387358')))LIKE(((rt0.c3) NOT BETWEEN (rt1.c1) AND (rt1.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 CROSS JOIN rt0 ON json_array(x'', rt0.c3 COLLATE BINARY, (((rt1.c1, rt1.c0, rt0.c2, rt0.c4, rt0.c3))>=((rt0.c3, rt0.c4, 0.7303625167495675, rt0.c3, rt0.c4))), UPPER(rt0.c0)) WHERE (((CAST(rt1.c0 AS INTEGER)) IS FALSE)) ORDER BY CAST(LOWER(rt0.c0) AS NUMERIC)  NULLS FIRST, ((((((((((rt0.c4)>>(rt0.c4)))AND(CAST(rt1.c1 AS INTEGER))))AND(((rt1.c0) BETWEEN (rt1.c0) AND (rt0.c4)))))OR((((rt1.c1))<((rt1.c2))))))OR(UPPER(rt0.c2)))  NULLS FIRST, ((((rt0.c2)OR('0.2327814360387358')))LIKE(((rt0.c3) NOT BETWEEN (rt1.c1) AND (rt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c0 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON json_array(x'', rt0.c3 COLLATE BINARY, (((rt1.c1, rt1.c0, rt0.c2, rt0.c4, rt0.c3))>=((rt0.c3, rt0.c4, 0.7303625167495675, rt0.c3, rt0.c4))), UPPER(rt0.c0)) ORDER BY CAST(LOWER(rt0.c0) AS NUMERIC)  NULLS FIRST, ((((((((((rt0.c4)>>(rt0.c4)))AND(CAST(rt1.c1 AS INTEGER))))AND(((rt1.c0) BETWEEN (rt1.c0) AND (rt0.c4)))))OR((((rt1.c1))<((rt1.c2))))))OR(UPPER(rt0.c2)))  NULLS FIRST, ((((rt0.c2)OR('0.2327814360387358')))LIKE(((rt0.c3) NOT BETWEEN (rt1.c1) AND (rt1.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((- (((rt1.c2) NOTNULL)))) ORDER BY (((TRIM(rt1.c0)))>=((((((rt0.c3)OR(rt0.c4)))AND(rt1.c1))))) ASC;
SELECT SUM(count) FROM (SELECT (((- (((rt1.c2) NOTNULL)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((TRIM(rt1.c0)))>=((((((rt0.c3)OR(rt0.c4)))AND(rt1.c1))))) ASC);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((- (((rt1.c2) NOTNULL)))) ORDER BY (((TRIM(rt1.c0)))>=((((((rt0.c3)OR(rt0.c4)))AND(rt1.c1))))) ASC;
SELECT SUM(count) FROM (SELECT (((- (((rt1.c2) NOTNULL)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((TRIM(rt1.c0)))>=((((((rt0.c3)OR(rt0.c4)))AND(rt1.c1))))) ASC);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((- (((rt1.c2) NOTNULL)))) ORDER BY (((TRIM(rt1.c0)))>=((((((rt0.c3)OR(rt0.c4)))AND(rt1.c1))))) ASC;
SELECT * FROM rt1, rt0 WHERE (CASE WHEN CAST(rt0.c0 AS TEXT) THEN 0X41be24b4 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c0 AS TEXT) THEN 0X41be24b4 END) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (CASE WHEN CAST(rt0.c0 AS TEXT) THEN 0X41be24b4 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c0 AS TEXT) THEN 0X41be24b4 END) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (CASE WHEN CAST(rt0.c0 AS TEXT) THEN 0X41be24b4 END);
SELECT COUNT(*) FROM rt0, rt1 WHERE (1.7976931348623157E308) ORDER BY ((CAST(rt1.c0 AS REAL))<<(NULL)) ASC;
SELECT SUM(count) FROM (SELECT ((1.7976931348623157E308) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((CAST(rt1.c0 AS REAL))<<(NULL)) ASC);
SELECT COUNT(*) FROM rt0, rt1 WHERE (1.7976931348623157E308) ORDER BY ((CAST(rt1.c0 AS REAL))<<(NULL)) ASC;
SELECT SUM(count) FROM (SELECT ((1.7976931348623157E308) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((CAST(rt1.c0 AS REAL))<<(NULL)) ASC);
SELECT COUNT(*) FROM rt0, rt1 WHERE (1.7976931348623157E308) ORDER BY ((CAST(rt1.c0 AS REAL))<<(NULL)) ASC;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CAST(CASE rt0.c0  WHEN rt1.c1 THEN rt1.c2 END AS NUMERIC)) ORDER BY (+ (NULL)) DESC  NULLS LAST, (((rt0.c2)) NOT BETWEEN ((CASE WHEN rt1.c0 THEN rt1.c0 END)) AND ((((rt0.c0)<<(rt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c0  WHEN rt1.c1 THEN rt1.c2 END AS NUMERIC)) IS TRUE)  as count FROM rt0, rt1 ORDER BY (+ (NULL)) DESC  NULLS LAST, (((rt0.c2)) NOT BETWEEN ((CASE WHEN rt1.c0 THEN rt1.c0 END)) AND ((((rt0.c0)<<(rt0.c2)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CAST(CASE rt0.c0  WHEN rt1.c1 THEN rt1.c2 END AS NUMERIC)) ORDER BY (+ (NULL)) DESC  NULLS LAST, (((rt0.c2)) NOT BETWEEN ((CASE WHEN rt1.c0 THEN rt1.c0 END)) AND ((((rt0.c0)<<(rt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c0  WHEN rt1.c1 THEN rt1.c2 END AS NUMERIC)) IS TRUE)  as count FROM rt0, rt1 ORDER BY (+ (NULL)) DESC  NULLS LAST, (((rt0.c2)) NOT BETWEEN ((CASE WHEN rt1.c0 THEN rt1.c0 END)) AND ((((rt0.c0)<<(rt0.c2)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CAST(CASE rt0.c0  WHEN rt1.c1 THEN rt1.c2 END AS NUMERIC)) ORDER BY (+ (NULL)) DESC  NULLS LAST, (((rt0.c2)) NOT BETWEEN ((CASE WHEN rt1.c0 THEN rt1.c0 END)) AND ((((rt0.c0)<<(rt0.c2)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((NOT (((rt0.c2)|(rt0.c0))))) ORDER BY (((CAST(rt1.c0 AS INTEGER)))=((0.04773602043633152 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2)|(rt0.c0))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((CAST(rt1.c0 AS INTEGER)))==((0.04773602043633152 COLLATE NOCASE))));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((NOT (((rt0.c2)|(rt0.c0))))) ORDER BY (((CAST(rt1.c0 AS INTEGER)))=((0.04773602043633152 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2)|(rt0.c0))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((CAST(rt1.c0 AS INTEGER)))==((0.04773602043633152 COLLATE NOCASE))));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((NOT (((rt0.c2)|(rt0.c0))))) ORDER BY (((CAST(rt1.c0 AS INTEGER)))=((0.04773602043633152 COLLATE NOCASE)));
SELECT ALL * FROM rt1, rt0 WHERE (CASE CAST(rt1.c0 AS INTEGER)  WHEN ((rt1.c1)>=(rt0.c2)) THEN (- ('*')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt1.c0 AS INTEGER)  WHEN ((rt1.c1)>=(rt0.c2)) THEN (- ('*')) END) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (CASE CAST(rt1.c0 AS INTEGER)  WHEN ((rt1.c1)>=(rt0.c2)) THEN (- ('*')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt1.c0 AS INTEGER)  WHEN ((rt1.c1)>=(rt0.c2)) THEN (- ('*')) END) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (CASE CAST(rt1.c0 AS INTEGER)  WHEN ((rt1.c1)>=(rt0.c2)) THEN (- ('*')) END);
SELECT ALL COUNT(*) FROM rt1 WHERE ('887730056') ORDER BY rt1.c2, (((((rt1.c0)GLOB(rt1.c0))))>=((rt1.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('887730056') IS TRUE)  as count FROM rt1 ORDER BY rt1.c2, (((((rt1.c0)GLOB(rt1.c0))))>=((rt1.c0))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ('887730056') ORDER BY rt1.c2, (((((rt1.c0)GLOB(rt1.c0))))>=((rt1.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('887730056') IS TRUE)  as count FROM rt1 ORDER BY rt1.c2, (((((rt1.c0)GLOB(rt1.c0))))>=((rt1.c0))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ('887730056') ORDER BY rt1.c2, (((((rt1.c0)GLOB(rt1.c0))))>=((rt1.c0))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN (((rt0.c3))=((rt0.c4))) THEN ((x'')OR(rt0.c2)) END) ORDER BY CAST(CAST(rt0.c2 AS BLOB) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c3))==((rt0.c4))) THEN ((x'')OR(rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY CAST(CAST(rt0.c2 AS BLOB) AS BLOB) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN (((rt0.c3))=((rt0.c4))) THEN ((x'')OR(rt0.c2)) END) ORDER BY CAST(CAST(rt0.c2 AS BLOB) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c3))==((rt0.c4))) THEN ((x'')OR(rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY CAST(CAST(rt0.c2 AS BLOB) AS BLOB) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN (((rt0.c3))=((rt0.c4))) THEN ((x'')OR(rt0.c2)) END) ORDER BY CAST(CAST(rt0.c2 AS BLOB) AS BLOB) DESC;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((CASE rt0.c3  WHEN rt0.c3 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt0.c3 WHEN rt0.c2 THEN 0.4523494722624646 WHEN rt0.c2 THEN rt0.c0 ELSE -113218083 END))<>((((rt0.c2)>=(rt1.c2)))))) ORDER BY (+ ((NOT (rt1.c1)))) ASC  NULLS LAST, ((COALESCE(DISTINCT rt0.c3, rt0.c1))%((((NULL)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CASE rt0.c3  WHEN rt0.c3 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt0.c3 WHEN rt0.c2 THEN 0.4523494722624646 WHEN rt0.c2 THEN rt0.c0 ELSE -113218083 END))!=((((rt0.c2)>=(rt1.c2)))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (+ ((NOT (rt1.c1)))) ASC  NULLS LAST, ((COALESCE(DISTINCT rt0.c3, rt0.c1))%((((NULL)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((CASE rt0.c3  WHEN rt0.c3 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt0.c3 WHEN rt0.c2 THEN 0.4523494722624646 WHEN rt0.c2 THEN rt0.c0 ELSE -113218083 END))<>((((rt0.c2)>=(rt1.c2)))))) ORDER BY (+ ((NOT (rt1.c1)))) ASC  NULLS LAST, ((COALESCE(DISTINCT rt0.c3, rt0.c1))%((((NULL)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CASE rt0.c3  WHEN rt0.c3 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt0.c3 WHEN rt0.c2 THEN 0.4523494722624646 WHEN rt0.c2 THEN rt0.c0 ELSE -113218083 END))!=((((rt0.c2)>=(rt1.c2)))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (+ ((NOT (rt1.c1)))) ASC  NULLS LAST, ((COALESCE(DISTINCT rt0.c3, rt0.c1))%((((NULL)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((CASE rt0.c3  WHEN rt0.c3 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt0.c3 WHEN rt0.c2 THEN 0.4523494722624646 WHEN rt0.c2 THEN rt0.c0 ELSE -113218083 END))<>((((rt0.c2)>=(rt1.c2)))))) ORDER BY (+ ((NOT (rt1.c1)))) ASC  NULLS LAST, ((COALESCE(DISTINCT rt0.c3, rt0.c1))%((((NULL)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2)&(rt1.c2))) ISNULL)) ORDER BY (~ (TRIM(DISTINCT rt1.c1, rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)&(rt1.c2))) ISNULL)) IS TRUE)  as count FROM rt1 ORDER BY (~ (TRIM(DISTINCT rt1.c1, rt1.c1))));
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2)&(rt1.c2))) ISNULL)) ORDER BY (~ (TRIM(DISTINCT rt1.c1, rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)&(rt1.c2))) ISNULL)) IS TRUE)  as count FROM rt1 ORDER BY (~ (TRIM(DISTINCT rt1.c1, rt1.c1))));
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2)&(rt1.c2))) ISNULL)) ORDER BY (~ (TRIM(DISTINCT rt1.c1, rt1.c1)));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON CASE WHEN CASE rt0.c4  WHEN x'' THEN rt0.c2 END THEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END WHEN rt0.c3 COLLATE NOCASE THEN CAST(0.8576577956471197 AS INTEGER) WHEN ((rt0.c1)<>(rt0.c2)) THEN rt0.c3 ELSE QUOTE('') END WHERE (((rt1.c1)<<((+ (rt0.c4))))) ORDER BY x'' COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)<<((+ (rt0.c4))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON CASE WHEN CASE rt0.c4  WHEN x'' THEN rt0.c2 END THEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END WHEN rt0.c3 COLLATE NOCASE THEN CAST(0.8576577956471197 AS INTEGER) WHEN ((rt0.c1)<>(rt0.c2)) THEN rt0.c3 ELSE QUOTE('') END ORDER BY x'' COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON CASE WHEN CASE rt0.c4  WHEN x'' THEN rt0.c2 END THEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END WHEN rt0.c3 COLLATE NOCASE THEN CAST(0.8576577956471197 AS INTEGER) WHEN ((rt0.c1)<>(rt0.c2)) THEN rt0.c3 ELSE QUOTE('') END WHERE (((rt1.c1)<<((+ (rt0.c4))))) ORDER BY x'' COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)<<((+ (rt0.c4))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON CASE WHEN CASE rt0.c4  WHEN x'' THEN rt0.c2 END THEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END WHEN rt0.c3 COLLATE NOCASE THEN CAST(0.8576577956471197 AS INTEGER) WHEN ((rt0.c1)<>(rt0.c2)) THEN rt0.c3 ELSE QUOTE('') END ORDER BY x'' COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON CASE WHEN CASE rt0.c4  WHEN x'' THEN rt0.c2 END THEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END WHEN rt0.c3 COLLATE NOCASE THEN CAST(0.8576577956471197 AS INTEGER) WHEN ((rt0.c1)<>(rt0.c2)) THEN rt0.c3 ELSE QUOTE('') END WHERE (((rt1.c1)<<((+ (rt0.c4))))) ORDER BY x'' COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM rt1 NATURAL JOIN rt0 WHERE (CASE WHEN rt0.c4 THEN ((rt1.c0)=(rt0.c2)) WHEN NULL THEN (- (rt0.c4)) WHEN ((rt1.c1) IS FALSE) THEN ((rt0.c3)>(rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c4 THEN ((rt1.c0)=(rt0.c2)) WHEN NULL THEN (- (rt0.c4)) WHEN ((rt1.c1) IS FALSE) THEN ((rt0.c3)>(rt0.c3)) END) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT ALL * FROM rt1 NATURAL JOIN rt0 WHERE (CASE WHEN rt0.c4 THEN ((rt1.c0)=(rt0.c2)) WHEN NULL THEN (- (rt0.c4)) WHEN ((rt1.c1) IS FALSE) THEN ((rt0.c3)>(rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c4 THEN ((rt1.c0)=(rt0.c2)) WHEN NULL THEN (- (rt0.c4)) WHEN ((rt1.c1) IS FALSE) THEN ((rt0.c3)>(rt0.c3)) END) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT ALL * FROM rt1 NATURAL JOIN rt0 WHERE (CASE WHEN rt0.c4 THEN ((rt1.c0)=(rt0.c2)) WHEN NULL THEN (- (rt0.c4)) WHEN ((rt1.c1) IS FALSE) THEN ((rt0.c3)>(rt0.c3)) END);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (NULL) ORDER BY ((((rt1.c1) BETWEEN (rt0.c1) AND (rt0.c1))) NOT NULL), ((((((rt1.c0)AND('')))OR(rt0.c0)))/(CASE rt1.c1  WHEN -1 THEN rt1.c1 END)) ASC, (((rt0.c2)) NOT BETWEEN (((rt0.c4 IN (584172509, rt1.c1)))) AND (((rt0.c3 IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt1.c1) BETWEEN (rt0.c1) AND (rt0.c1))) NOT NULL), ((((((rt1.c0)AND('')))OR(rt0.c0)))/(CASE rt1.c1  WHEN -1 THEN rt1.c1 END)) ASC, (((rt0.c2)) NOT BETWEEN (((rt0.c4 IN (584172509, rt1.c1)))) AND (((rt0.c3 IN ()))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (NULL) ORDER BY ((((rt1.c1) BETWEEN (rt0.c1) AND (rt0.c1))) NOT NULL), ((((((rt1.c0)AND('')))OR(rt0.c0)))/(CASE rt1.c1  WHEN -1 THEN rt1.c1 END)) ASC, (((rt0.c2)) NOT BETWEEN (((rt0.c4 IN (584172509, rt1.c1)))) AND (((rt0.c3 IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt1.c1) BETWEEN (rt0.c1) AND (rt0.c1))) NOT NULL), ((((((rt1.c0)AND('')))OR(rt0.c0)))/(CASE rt1.c1  WHEN -1 THEN rt1.c1 END)) ASC, (((rt0.c2)) NOT BETWEEN (((rt0.c4 IN (584172509, rt1.c1)))) AND (((rt0.c3 IN ()))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (NULL) ORDER BY ((((rt1.c1) BETWEEN (rt0.c1) AND (rt0.c1))) NOT NULL), ((((((rt1.c0)AND('')))OR(rt0.c0)))/(CASE rt1.c1  WHEN -1 THEN rt1.c1 END)) ASC, (((rt0.c2)) NOT BETWEEN (((rt0.c4 IN (584172509, rt1.c1)))) AND (((rt0.c3 IN ()))))  NULLS FIRST;
SELECT * FROM rt0, rt1 WHERE (((((rt0.c4) IS FALSE))>=(((rt1.c1) IS TRUE)))) ORDER BY (((rt0.c3)) NOT BETWEEN (((rt1.c1 IN ()))) AND (('1230558477'))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) IS FALSE))>=(((rt1.c1) IS TRUE)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt0.c3)) NOT BETWEEN (((rt1.c1 IN ()))) AND (('1230558477'))) ASC);
SELECT * FROM rt0, rt1 WHERE (((((rt0.c4) IS FALSE))>=(((rt1.c1) IS TRUE)))) ORDER BY (((rt0.c3)) NOT BETWEEN (((rt1.c1 IN ()))) AND (('1230558477'))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) IS FALSE))>=(((rt1.c1) IS TRUE)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt0.c3)) NOT BETWEEN (((rt1.c1 IN ()))) AND (('1230558477'))) ASC);
SELECT * FROM rt0, rt1 WHERE (((((rt0.c4) IS FALSE))>=(((rt1.c1) IS TRUE)))) ORDER BY (((rt0.c3)) NOT BETWEEN (((rt1.c1 IN ()))) AND (('1230558477'))) ASC;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3))>((rt0.c1))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((rt0.c3))>((rt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3))>((rt0.c1))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((rt0.c3))>((rt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3))>((rt0.c1))) COLLATE RTRIM);
SELECT * FROM rt1 WHERE ((((~ (rt1.c0)))==((rt1.c1 IN (0Xffffffffbe99845a))))) ORDER BY ((rt1.c2 COLLATE RTRIM)+(CASE WHEN rt1.c2 THEN rt1.c1 ELSE '-1006554187' END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt1.c0)))=((rt1.c1 IN (0xffffffffbe99845a))))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2 COLLATE RTRIM)+(CASE WHEN rt1.c2 THEN rt1.c1 ELSE '-1006554187' END))  NULLS LAST);
SELECT * FROM rt1 WHERE ((((~ (rt1.c0)))==((rt1.c1 IN (0Xffffffffbe99845a))))) ORDER BY ((rt1.c2 COLLATE RTRIM)+(CASE WHEN rt1.c2 THEN rt1.c1 ELSE '-1006554187' END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt1.c0)))=((rt1.c1 IN (0xffffffffbe99845a))))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2 COLLATE RTRIM)+(CASE WHEN rt1.c2 THEN rt1.c1 ELSE '-1006554187' END))  NULLS LAST);
SELECT * FROM rt1 WHERE ((((~ (rt1.c0)))==((rt1.c1 IN (0Xffffffffbe99845a))))) ORDER BY ((rt1.c2 COLLATE RTRIM)+(CASE WHEN rt1.c2 THEN rt1.c1 ELSE '-1006554187' END))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 END)+(((rt0.c3)<(rt0.c3)))), rt0.c0  NULLS FIRST, (~ ((rt0.c0 IN (rt0.c3, rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 END)+(((rt0.c3)<(rt0.c3)))), rt0.c0  NULLS FIRST, (~ ((rt0.c0 IN (rt0.c3, rt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 END)+(((rt0.c3)<(rt0.c3)))), rt0.c0  NULLS FIRST, (~ ((rt0.c0 IN (rt0.c3, rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 END)+(((rt0.c3)<(rt0.c3)))), rt0.c0  NULLS FIRST, (~ ((rt0.c0 IN (rt0.c3, rt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 END)+(((rt0.c3)<(rt0.c3)))), rt0.c0  NULLS FIRST, (~ ((rt0.c0 IN (rt0.c3, rt0.c0))));
SELECT * FROM rt0, rt1 WHERE (NULL) ORDER BY CASE ((rt1.c2)>>(rt1.c2))  WHEN (rt1.c0 IN ()) THEN CASE rt1.c2  WHEN rt0.c4 THEN rt1.c1 END END;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE ((rt1.c2)>>(rt1.c2))  WHEN (rt1.c0 IN ()) THEN CASE rt1.c2  WHEN rt0.c4 THEN rt1.c1 END END);
SELECT * FROM rt0, rt1 WHERE (NULL) ORDER BY CASE ((rt1.c2)>>(rt1.c2))  WHEN (rt1.c0 IN ()) THEN CASE rt1.c2  WHEN rt0.c4 THEN rt1.c1 END END;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE ((rt1.c2)>>(rt1.c2))  WHEN (rt1.c0 IN ()) THEN CASE rt1.c2  WHEN rt0.c4 THEN rt1.c1 END END);
SELECT * FROM rt0, rt1 WHERE (NULL) ORDER BY CASE ((rt1.c2)>>(rt1.c2))  WHEN (rt1.c0 IN ()) THEN CASE rt1.c2  WHEN rt0.c4 THEN rt1.c1 END END;
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c3 AS BLOB)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS BLOB)) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c3 AS BLOB)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS BLOB)) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c3 AS BLOB)) IS FALSE));
SELECT * FROM rt1, rt0 WHERE ((CASE WHEN rt1.c1 THEN rt0.c2 END IN ())) ORDER BY (+ (rt0.c0 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt1.c1 THEN rt0.c2 END IN ())) IS TRUE)  as count FROM rt1, rt0 ORDER BY (+ (rt0.c0 COLLATE BINARY)) ASC  NULLS FIRST);
SELECT * FROM rt1, rt0 WHERE ((CASE WHEN rt1.c1 THEN rt0.c2 END IN ())) ORDER BY (+ (rt0.c0 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt1.c1 THEN rt0.c2 END IN ())) IS TRUE)  as count FROM rt1, rt0 ORDER BY (+ (rt0.c0 COLLATE BINARY)) ASC  NULLS FIRST);
SELECT * FROM rt1, rt0 WHERE ((CASE WHEN rt1.c1 THEN rt0.c2 END IN ())) ORDER BY (+ (rt0.c0 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c1)) BETWEEN ((x'')) AND ((((rt1.c2) IS FALSE))))) ORDER BY '-937439564'  NULLS FIRST, ((((rt1.c1) ISNULL)) NOT BETWEEN (((rt1.c1)<=(rt1.c0))) AND ((((rt1.c2))=((rt1.c1))))) ASC  NULLS LAST, (~ (rt1.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) BETWEEN ((x'')) AND ((((rt1.c2) IS FALSE))))) IS TRUE)  as count FROM rt1 ORDER BY '-937439564'  NULLS FIRST, ((((rt1.c1) ISNULL)) NOT BETWEEN (((rt1.c1)<=(rt1.c0))) AND ((((rt1.c2))=((rt1.c1))))) ASC  NULLS LAST, (~ (rt1.c1))  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c1)) BETWEEN ((x'')) AND ((((rt1.c2) IS FALSE))))) ORDER BY '-937439564'  NULLS FIRST, ((((rt1.c1) ISNULL)) NOT BETWEEN (((rt1.c1)<=(rt1.c0))) AND ((((rt1.c2))=((rt1.c1))))) ASC  NULLS LAST, (~ (rt1.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) BETWEEN ((x'')) AND ((((rt1.c2) IS FALSE))))) IS TRUE)  as count FROM rt1 ORDER BY '-937439564'  NULLS FIRST, ((((rt1.c1) ISNULL)) NOT BETWEEN (((rt1.c1)<=(rt1.c0))) AND ((((rt1.c2))=((rt1.c1))))) ASC  NULLS LAST, (~ (rt1.c1))  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c1)) BETWEEN ((x'')) AND ((((rt1.c2) IS FALSE))))) ORDER BY '-937439564'  NULLS FIRST, ((((rt1.c1) ISNULL)) NOT BETWEEN (((rt1.c1)<=(rt1.c0))) AND ((((rt1.c2))=((rt1.c1))))) ASC  NULLS LAST, (~ (rt1.c1))  NULLS LAST;
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt0.c0) IS TRUE))IS(CAST(NULL AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS TRUE))IS(CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt0.c0) IS TRUE))IS(CAST(NULL AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS TRUE))IS(CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt0.c0) IS TRUE))IS(CAST(NULL AS INTEGER))));
SELECT ALL COUNT(*) FROM rt1 WHERE (COALESCE(((rt1.c1)<<(rt1.c2)), CAST(rt1.c2 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((rt1.c1)<<(rt1.c2)), CAST(rt1.c2 AS NUMERIC))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (COALESCE(((rt1.c1)<<(rt1.c2)), CAST(rt1.c2 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((rt1.c1)<<(rt1.c2)), CAST(rt1.c2 AS NUMERIC))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (COALESCE(((rt1.c1)<<(rt1.c2)), CAST(rt1.c2 AS NUMERIC)));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON ((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c2)) COLLATE NOCASE COLLATE BINARY WHERE (x'' COLLATE NOCASE COLLATE NOCASE) ORDER BY INSTR((rt0.c2 IN ()), ((((((((((((rt1.c1)OR(rt0.c2)))AND(rt0.c2)))AND('now.y')))AND(rt1.c2)))OR(rt0.c1)))OR(rt0.c1))), ((rt1.c0 IN ()) IN ()), x'78f2e3ef';
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON ((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c2)) COLLATE NOCASE COLLATE BINARY ORDER BY INSTR((rt0.c2 IN ()), ((((((((((((rt1.c1)OR(rt0.c2)))AND(rt0.c2)))AND('now.y')))AND(rt1.c2)))OR(rt0.c1)))OR(rt0.c1))), ((rt1.c0 IN ()) IN ()), x'78f2e3ef');
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON ((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c2)) COLLATE NOCASE COLLATE BINARY WHERE (x'' COLLATE NOCASE COLLATE NOCASE) ORDER BY INSTR((rt0.c2 IN ()), ((((((((((((rt1.c1)OR(rt0.c2)))AND(rt0.c2)))AND('now.y')))AND(rt1.c2)))OR(rt0.c1)))OR(rt0.c1))), ((rt1.c0 IN ()) IN ()), x'78f2e3ef';
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON ((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c2)) COLLATE NOCASE COLLATE BINARY ORDER BY INSTR((rt0.c2 IN ()), ((((((((((((rt1.c1)OR(rt0.c2)))AND(rt0.c2)))AND('now.y')))AND(rt1.c2)))OR(rt0.c1)))OR(rt0.c1))), ((rt1.c0 IN ()) IN ()), x'78f2e3ef');
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON ((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c2)) COLLATE NOCASE COLLATE BINARY WHERE (x'' COLLATE NOCASE COLLATE NOCASE) ORDER BY INSTR((rt0.c2 IN ()), ((((((((((((rt1.c1)OR(rt0.c2)))AND(rt0.c2)))AND('now.y')))AND(rt1.c2)))OR(rt0.c1)))OR(rt0.c1))), ((rt1.c0 IN ()) IN ()), x'78f2e3ef';
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)&(rt0.c4)))=('9y|FMV')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)&(rt0.c4)))==('9y|FMV'))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)&(rt0.c4)))=('9y|FMV')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)&(rt0.c4)))==('9y|FMV'))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)&(rt0.c4)))=('9y|FMV')));
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c4 IN ())) ORDER BY '-482218237'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt0.c4 IN ())) IS TRUE)  as count FROM rt0 ORDER BY '-482218237'  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c4 IN ())) ORDER BY '-482218237'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt0.c4 IN ())) IS TRUE)  as count FROM rt0 ORDER BY '-482218237'  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c4 IN ())) ORDER BY '-482218237'  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((TYPEOF(rt0.c2) IN ()));
SELECT SUM(count) FROM (SELECT (((TYPEOF(rt0.c2) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((TYPEOF(rt0.c2) IN ()));
SELECT SUM(count) FROM (SELECT (((TYPEOF(rt0.c2) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((TYPEOF(rt0.c2) IN ()));
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE (LENGTH(((((((((((((rt0.c1)OR(rt1.c2)))OR(rt0.c2)))OR(rt0.c0)))AND(rt1.c0)))AND('905709935')))AND(rt0.c4)))) ORDER BY ((((rt0.c3)-(rt0.c3))) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt1.c2 END) AND (((((rt1.c1)OR(rt0.c0)))OR(rt1.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LENGTH(((((((((((((rt0.c1)OR(rt1.c2)))OR(rt0.c2)))OR(rt0.c0)))AND(rt1.c0)))AND('905709935')))AND(rt0.c4)))) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1 ORDER BY ((((rt0.c3)-(rt0.c3))) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt1.c2 END) AND (((((rt1.c1)OR(rt0.c0)))OR(rt1.c1)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE (LENGTH(((((((((((((rt0.c1)OR(rt1.c2)))OR(rt0.c2)))OR(rt0.c0)))AND(rt1.c0)))AND('905709935')))AND(rt0.c4)))) ORDER BY ((((rt0.c3)-(rt0.c3))) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt1.c2 END) AND (((((rt1.c1)OR(rt0.c0)))OR(rt1.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LENGTH(((((((((((((rt0.c1)OR(rt1.c2)))OR(rt0.c2)))OR(rt0.c0)))AND(rt1.c0)))AND('905709935')))AND(rt0.c4)))) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1 ORDER BY ((((rt0.c3)-(rt0.c3))) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt1.c2 END) AND (((((rt1.c1)OR(rt0.c0)))OR(rt1.c1)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE (LENGTH(((((((((((((rt0.c1)OR(rt1.c2)))OR(rt0.c2)))OR(rt0.c0)))AND(rt1.c0)))AND('905709935')))AND(rt0.c4)))) ORDER BY ((((rt0.c3)-(rt0.c3))) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt1.c2 END) AND (((((rt1.c1)OR(rt0.c0)))OR(rt1.c1)))) ASC  NULLS LAST;
SELECT * FROM rt0, rt1 WHERE (((((rt0.c4))<>((rt1.c2))) IN ())) ORDER BY CASE WHEN (- (rt0.c0)) THEN rt0.c0 END;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4))!=((rt1.c2))) IN ())) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE WHEN (- (rt0.c0)) THEN rt0.c0 END);
SELECT * FROM rt0, rt1 WHERE (((((rt0.c4))<>((rt1.c2))) IN ())) ORDER BY CASE WHEN (- (rt0.c0)) THEN rt0.c0 END;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4))!=((rt1.c2))) IN ())) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE WHEN (- (rt0.c0)) THEN rt0.c0 END);
SELECT * FROM rt0, rt1 WHERE (((((rt0.c4))<>((rt1.c2))) IN ())) ORDER BY CASE WHEN (- (rt0.c0)) THEN rt0.c0 END;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT NULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT NULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT NULL)) IS FALSE));
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)<(rt1.c1))) NOT BETWEEN (LIKELIHOOD(DISTINCT 0.2623631677642394, 0.3138934677651911)) AND (CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 END))) ORDER BY ((((rt1.c0)-(rt1.c2)))|(rt1.c1))  NULLS LAST, '1620824718';
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)<(rt1.c1))) NOT BETWEEN (LIKELIHOOD(DISTINCT 0.2623631677642394, 0.3138934677651911)) AND (CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 END))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0)-(rt1.c2)))|(rt1.c1))  NULLS LAST, '1620824718');
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)<(rt1.c1))) NOT BETWEEN (LIKELIHOOD(DISTINCT 0.2623631677642394, 0.3138934677651911)) AND (CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 END))) ORDER BY ((((rt1.c0)-(rt1.c2)))|(rt1.c1))  NULLS LAST, '1620824718';
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)<(rt1.c1))) NOT BETWEEN (LIKELIHOOD(DISTINCT 0.2623631677642394, 0.3138934677651911)) AND (CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 END))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0)-(rt1.c2)))|(rt1.c1))  NULLS LAST, '1620824718');
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)<(rt1.c1))) NOT BETWEEN (LIKELIHOOD(DISTINCT 0.2623631677642394, 0.3138934677651911)) AND (CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 END))) ORDER BY ((((rt1.c0)-(rt1.c2)))|(rt1.c1))  NULLS LAST, '1620824718';
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((0.553949739641118)AND(rt0.c1)))OR(rt0.c0)))>(TRIM(rt0.c3)))) ORDER BY rt0.c3 COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((0.553949739641118)AND(rt0.c1)))OR(rt0.c0)))>(TRIM(rt0.c3)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3 COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((0.553949739641118)AND(rt0.c1)))OR(rt0.c0)))>(TRIM(rt0.c3)))) ORDER BY rt0.c3 COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((0.553949739641118)AND(rt0.c1)))OR(rt0.c0)))>(TRIM(rt0.c3)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3 COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((0.553949739641118)AND(rt0.c1)))OR(rt0.c0)))>(TRIM(rt0.c3)))) ORDER BY rt0.c3 COLLATE NOCASE ASC;
SELECT COUNT(*) FROM rt1, rt0 WHERE (((rt1.c0) IS FALSE)) ORDER BY COALESCE(rt0.c4 COLLATE BINARY, ((rt0.c2)OR(rt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0) IS FALSE)) IS TRUE)  as count FROM rt1, rt0 ORDER BY COALESCE(rt0.c4 COLLATE BINARY, ((rt0.c2)OR(rt0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((rt1.c0) IS FALSE)) ORDER BY COALESCE(rt0.c4 COLLATE BINARY, ((rt0.c2)OR(rt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0) IS FALSE)) IS TRUE)  as count FROM rt1, rt0 ORDER BY COALESCE(rt0.c4 COLLATE BINARY, ((rt0.c2)OR(rt0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((rt1.c0) IS FALSE)) ORDER BY COALESCE(rt0.c4 COLLATE BINARY, ((rt0.c2)OR(rt0.c0)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((+ (((((((((((((rt1.c0)AND(rt0.c1)))AND(rt1.c1)))OR(rt1.c2)))AND('0.250830634726788')))OR(rt1.c0)))AND(rt1.c1))))) ORDER BY ((x'') NOT BETWEEN (rt1.c2) AND ((rt1.c2 IN (rt0.c4, rt0.c1)))) ASC, rt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((((((rt1.c0)AND(rt0.c1)))AND(rt1.c1)))OR(rt1.c2)))AND('0.250830634726788')))OR(rt1.c0)))AND(rt1.c1))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((x'') NOT BETWEEN (rt1.c2) AND ((rt1.c2 IN (rt0.c4, rt0.c1)))) ASC, rt1.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((+ (((((((((((((rt1.c0)AND(rt0.c1)))AND(rt1.c1)))OR(rt1.c2)))AND('0.250830634726788')))OR(rt1.c0)))AND(rt1.c1))))) ORDER BY ((x'') NOT BETWEEN (rt1.c2) AND ((rt1.c2 IN (rt0.c4, rt0.c1)))) ASC, rt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((((((rt1.c0)AND(rt0.c1)))AND(rt1.c1)))OR(rt1.c2)))AND('0.250830634726788')))OR(rt1.c0)))AND(rt1.c1))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((x'') NOT BETWEEN (rt1.c2) AND ((rt1.c2 IN (rt0.c4, rt0.c1)))) ASC, rt1.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((+ (((((((((((((rt1.c0)AND(rt0.c1)))AND(rt1.c1)))OR(rt1.c2)))AND('0.250830634726788')))OR(rt1.c0)))AND(rt1.c1))))) ORDER BY ((x'') NOT BETWEEN (rt1.c2) AND ((rt1.c2 IN (rt0.c4, rt0.c1)))) ASC, rt1.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (rt0.c4);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 COLLATE RTRIM))>((((rt0.c0) IS FALSE))))) ORDER BY (((rt0.c0)) BETWEEN ((((((rt0.c3)AND(rt0.c1)))OR(rt0.c2)))) AND ((((0.19871162767894557)|(rt0.c3)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 COLLATE RTRIM))>((((rt0.c0) IS FALSE))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) BETWEEN ((((((rt0.c3)AND(rt0.c1)))OR(rt0.c2)))) AND ((((0.19871162767894557)|(rt0.c3)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 COLLATE RTRIM))>((((rt0.c0) IS FALSE))))) ORDER BY (((rt0.c0)) BETWEEN ((((((rt0.c3)AND(rt0.c1)))OR(rt0.c2)))) AND ((((0.19871162767894557)|(rt0.c3)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 COLLATE RTRIM))>((((rt0.c0) IS FALSE))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) BETWEEN ((((((rt0.c3)AND(rt0.c1)))OR(rt0.c2)))) AND ((((0.19871162767894557)|(rt0.c3)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 COLLATE RTRIM))>((((rt0.c0) IS FALSE))))) ORDER BY (((rt0.c0)) BETWEEN ((((((rt0.c3)AND(rt0.c1)))OR(rt0.c2)))) AND ((((0.19871162767894557)|(rt0.c3)))))  NULLS LAST;
SELECT * FROM rt1, rt0 WHERE (((rt1.c0 COLLATE NOCASE) NOT BETWEEN (rt1.c2 COLLATE BINARY) AND (rtreenode(rt0.c0, rt0.c0)))) ORDER BY ((((((rt0.c4) BETWEEN (rt1.c2) AND (rt0.c0)))AND(rt0.c4 COLLATE RTRIM)))AND(CAST(rt0.c2 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt1.c0 COLLATE NOCASE) NOT BETWEEN (rt1.c2 COLLATE BINARY) AND (rtreenode(rt0.c0, rt0.c0)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((((rt0.c4) BETWEEN (rt1.c2) AND (rt0.c0)))AND(rt0.c4 COLLATE RTRIM)))AND(CAST(rt0.c2 AS BLOB))) ASC);
SELECT * FROM rt1, rt0 WHERE (((rt1.c0 COLLATE NOCASE) NOT BETWEEN (rt1.c2 COLLATE BINARY) AND (rtreenode(rt0.c0, rt0.c0)))) ORDER BY ((((((rt0.c4) BETWEEN (rt1.c2) AND (rt0.c0)))AND(rt0.c4 COLLATE RTRIM)))AND(CAST(rt0.c2 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt1.c0 COLLATE NOCASE) NOT BETWEEN (rt1.c2 COLLATE BINARY) AND (rtreenode(rt0.c0, rt0.c0)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((((rt0.c4) BETWEEN (rt1.c2) AND (rt0.c0)))AND(rt0.c4 COLLATE RTRIM)))AND(CAST(rt0.c2 AS BLOB))) ASC);
SELECT * FROM rt1, rt0 WHERE (((rt1.c0 COLLATE NOCASE) NOT BETWEEN (rt1.c2 COLLATE BINARY) AND (rtreenode(rt0.c0, rt0.c0)))) ORDER BY ((((((rt0.c4) BETWEEN (rt1.c2) AND (rt0.c0)))AND(rt0.c4 COLLATE RTRIM)))AND(CAST(rt0.c2 AS BLOB))) ASC;
SELECT ALL * FROM rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((((rt1.c2)>>(rt1.c1)))) AND ((rt1.c0)))) ORDER BY rt1.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) NOT BETWEEN ((((rt1.c2)>>(rt1.c1)))) AND ((rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((((rt1.c2)>>(rt1.c1)))) AND ((rt1.c0)))) ORDER BY rt1.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) NOT BETWEEN ((((rt1.c2)>>(rt1.c1)))) AND ((rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((((rt1.c2)>>(rt1.c1)))) AND ((rt1.c0)))) ORDER BY rt1.c1  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (NULL) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1 ORDER BY NULL ASC);
SELECT COUNT(*) FROM rt1 WHERE (NULL) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1 ORDER BY NULL ASC);
SELECT COUNT(*) FROM rt1 WHERE (NULL) ORDER BY NULL ASC;
SELECT * FROM rt0, rt1 WHERE (CASE ((rt1.c2)GLOB(rt0.c3))  WHEN ((rt1.c1)IS(rt0.c1)) THEN CASE rt1.c1  WHEN NULL THEN rt1.c2 ELSE rt0.c3 END WHEN '*﷊' THEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3)) WHEN (((rt1.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c3)) AND ((rt1.c0, '-1435315288', rt0.c4))) THEN ((rt1.c0) IS FALSE) ELSE x'' END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c2)GLOB(rt0.c3))  WHEN ((rt1.c1)IS(rt0.c1)) THEN CASE rt1.c1  WHEN NULL THEN rt1.c2 ELSE rt0.c3 END WHEN '*﷊' THEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3)) WHEN (((rt1.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c3)) AND ((rt1.c0, '-1435315288', rt0.c4))) THEN ((rt1.c0) IS FALSE) ELSE x'' END) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (CASE ((rt1.c2)GLOB(rt0.c3))  WHEN ((rt1.c1)IS(rt0.c1)) THEN CASE rt1.c1  WHEN NULL THEN rt1.c2 ELSE rt0.c3 END WHEN '*﷊' THEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3)) WHEN (((rt1.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c3)) AND ((rt1.c0, '-1435315288', rt0.c4))) THEN ((rt1.c0) IS FALSE) ELSE x'' END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c2)GLOB(rt0.c3))  WHEN ((rt1.c1)IS(rt0.c1)) THEN CASE rt1.c1  WHEN NULL THEN rt1.c2 ELSE rt0.c3 END WHEN '*﷊' THEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3)) WHEN (((rt1.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c3)) AND ((rt1.c0, '-1435315288', rt0.c4))) THEN ((rt1.c0) IS FALSE) ELSE x'' END) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (CASE ((rt1.c2)GLOB(rt0.c3))  WHEN ((rt1.c1)IS(rt0.c1)) THEN CASE rt1.c1  WHEN NULL THEN rt1.c2 ELSE rt0.c3 END WHEN '*﷊' THEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3)) WHEN (((rt1.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c3)) AND ((rt1.c0, '-1435315288', rt0.c4))) THEN ((rt1.c0) IS FALSE) ELSE x'' END);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON (- ((rt1.c1 IN ()))) WHERE ((((((((('䄃Ou2<')OR(((rt1.c1)GLOB(rt0.c0)))))OR(((rt1.c2) NOT NULL))))AND(0.6084789517554585)))AND(CASE rt0.c4  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END))) ORDER BY (rt0.c3 COLLATE BINARY IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((((((('䄃Ou2<')OR(((rt1.c1)GLOB(rt0.c0)))))OR(((rt1.c2) NOT NULL))))AND(0.6084789517554585)))AND(CASE rt0.c4  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON (- ((rt1.c1 IN ()))) ORDER BY (rt0.c3 COLLATE BINARY IN ()) DESC);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON (- ((rt1.c1 IN ()))) WHERE ((((((((('䄃Ou2<')OR(((rt1.c1)GLOB(rt0.c0)))))OR(((rt1.c2) NOT NULL))))AND(0.6084789517554585)))AND(CASE rt0.c4  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END))) ORDER BY (rt0.c3 COLLATE BINARY IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((((((('䄃Ou2<')OR(((rt1.c1)GLOB(rt0.c0)))))OR(((rt1.c2) NOT NULL))))AND(0.6084789517554585)))AND(CASE rt0.c4  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON (- ((rt1.c1 IN ()))) ORDER BY (rt0.c3 COLLATE BINARY IN ()) DESC);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON (- ((rt1.c1 IN ()))) WHERE ((((((((('䄃Ou2<')OR(((rt1.c1)GLOB(rt0.c0)))))OR(((rt1.c2) NOT NULL))))AND(0.6084789517554585)))AND(CASE rt0.c4  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END))) ORDER BY (rt0.c3 COLLATE BINARY IN ()) DESC;
SELECT ALL * FROM rt0 WHERE (((UNLIKELY(rt0.c3))GLOB((rt0.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(rt0.c3))GLOB((rt0.c3 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((UNLIKELY(rt0.c3))GLOB((rt0.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(rt0.c3))GLOB((rt0.c3 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((UNLIKELY(rt0.c3))GLOB((rt0.c3 IN ()))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((~ ('-1343275434'))) NOT NULL)) ORDER BY ('-1006554187' IN (rt0.c1 COLLATE NOCASE, rt0.c2 COLLATE NOCASE, ((rt0.c1) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ ('-1343275434'))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY ('-1006554187' IN (rt0.c1 COLLATE NOCASE, rt0.c2 COLLATE NOCASE, ((rt0.c1) NOTNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((~ ('-1343275434'))) NOT NULL)) ORDER BY ('-1006554187' IN (rt0.c1 COLLATE NOCASE, rt0.c2 COLLATE NOCASE, ((rt0.c1) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ ('-1343275434'))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY ('-1006554187' IN (rt0.c1 COLLATE NOCASE, rt0.c2 COLLATE NOCASE, ((rt0.c1) NOTNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((~ ('-1343275434'))) NOT NULL)) ORDER BY ('-1006554187' IN (rt0.c1 COLLATE NOCASE, rt0.c2 COLLATE NOCASE, ((rt0.c1) NOTNULL)))  NULLS LAST;
SELECT COUNT(*) FROM rt1, rt0 WHERE (((rt1.c2) NOT BETWEEN ((('8a') IS TRUE)) AND (CAST(rt0.c3 AS TEXT)))) ORDER BY rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2) NOT BETWEEN ((('8a') IS TRUE)) AND (CAST(rt0.c3 AS TEXT)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY rt0.c1 ASC);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((rt1.c2) NOT BETWEEN ((('8a') IS TRUE)) AND (CAST(rt0.c3 AS TEXT)))) ORDER BY rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2) NOT BETWEEN ((('8a') IS TRUE)) AND (CAST(rt0.c3 AS TEXT)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY rt0.c1 ASC);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((rt1.c2) NOT BETWEEN ((('8a') IS TRUE)) AND (CAST(rt0.c3 AS TEXT)))) ORDER BY rt0.c1 ASC;
SELECT * FROM rt0, rt1 WHERE (((((((rt0.c1)AND(rt1.c1)))OR(rt1.c2))) NOT BETWEEN (rt0.c4 COLLATE BINARY) AND (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(rt1.c1)))OR(rt1.c2))) NOT BETWEEN (rt0.c4 COLLATE BINARY) AND (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1))))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (((((((rt0.c1)AND(rt1.c1)))OR(rt1.c2))) NOT BETWEEN (rt0.c4 COLLATE BINARY) AND (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(rt1.c1)))OR(rt1.c2))) NOT BETWEEN (rt0.c4 COLLATE BINARY) AND (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1))))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (((((((rt0.c1)AND(rt1.c1)))OR(rt1.c2))) NOT BETWEEN (rt0.c4 COLLATE BINARY) AND (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)))));
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c4) NOT BETWEEN (rt0.c4) AND (0.03018685518959796)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c4) NOT BETWEEN (rt0.c4) AND (0.03018685518959796)) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c4) NOT BETWEEN (rt0.c4) AND (0.03018685518959796)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c4) NOT BETWEEN (rt0.c4) AND (0.03018685518959796)) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c4) NOT BETWEEN (rt0.c4) AND (0.03018685518959796)) AS NUMERIC));
SELECT COUNT(*) FROM rt0, rt1 WHERE (CAST(((rt0.c4)AND(rt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c4)AND(rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CAST(((rt0.c4)AND(rt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c4)AND(rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CAST(((rt0.c4)AND(rt0.c1)) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (GLOB(((rt1.c0)AND(rt0.c1)), ''));
SELECT SUM(count) FROM (SELECT ALL ((GLOB(((rt1.c0)AND(rt0.c1)), '')) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (GLOB(((rt1.c0)AND(rt0.c1)), ''));
SELECT SUM(count) FROM (SELECT ALL ((GLOB(((rt1.c0)AND(rt0.c1)), '')) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (GLOB(((rt1.c0)AND(rt0.c1)), ''));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1))) NOT BETWEEN (((rt0.c0)<>(rt0.c0))) AND (((rt0.c3)/(rt0.c2))))) ORDER BY CASE rt0.c0  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c4 END COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1))) NOT BETWEEN (((rt0.c0)!=(rt0.c0))) AND (((rt0.c3)/(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c0  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c4 END COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1))) NOT BETWEEN (((rt0.c0)<>(rt0.c0))) AND (((rt0.c3)/(rt0.c2))))) ORDER BY CASE rt0.c0  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c4 END COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1))) NOT BETWEEN (((rt0.c0)!=(rt0.c0))) AND (((rt0.c3)/(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c0  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c4 END COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1))) NOT BETWEEN (((rt0.c0)<>(rt0.c0))) AND (((rt0.c3)/(rt0.c2))))) ORDER BY CASE rt0.c0  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c4 END COLLATE BINARY DESC;
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON ((highlight(rt0.c0, rt1.c1, rt0.c3, rt1.c1)) BETWEEN (x'4a73') AND (LIKE(rt1.c0, rt1.c1, 'B'))) WHERE (rt1.c0) ORDER BY (((rt0.c4))>((rt0.c4))) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((highlight(rt0.c0, rt1.c1, rt0.c3, rt1.c1)) BETWEEN (x'4a73') AND (LIKE(rt1.c0, rt1.c1, 'B'))) ORDER BY (((rt0.c4))>((rt0.c4))) COLLATE BINARY ASC);
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON ((highlight(rt0.c0, rt1.c1, rt0.c3, rt1.c1)) BETWEEN (x'4a73') AND (LIKE(rt1.c0, rt1.c1, 'B'))) WHERE (rt1.c0) ORDER BY (((rt0.c4))>((rt0.c4))) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((highlight(rt0.c0, rt1.c1, rt0.c3, rt1.c1)) BETWEEN (x'4a73') AND (LIKE(rt1.c0, rt1.c1, 'B'))) ORDER BY (((rt0.c4))>((rt0.c4))) COLLATE BINARY ASC);
SELECT ALL * FROM rt0 WHERE ((~ ((((rt0.c2, rt0.c1, x'')) NOT BETWEEN ((rt0.c4, rt0.c4, rt0.c2)) AND (('', rt0.c2, rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c2, rt0.c1, x'')) NOT BETWEEN ((rt0.c4, rt0.c4, rt0.c2)) AND (('', rt0.c2, rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((~ ((((rt0.c2, rt0.c1, x'')) NOT BETWEEN ((rt0.c4, rt0.c4, rt0.c2)) AND (('', rt0.c2, rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c2, rt0.c1, x'')) NOT BETWEEN ((rt0.c4, rt0.c4, rt0.c2)) AND (('', rt0.c2, rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((~ ((((rt0.c2, rt0.c1, x'')) NOT BETWEEN ((rt0.c4, rt0.c4, rt0.c2)) AND (('', rt0.c2, rt0.c2))))));
SELECT ALL * FROM rt0 INNER JOIN rt1 ON x'' WHERE (rt0.c3) ORDER BY ((((0.24816642377500986) NOT NULL)) NOT BETWEEN ((((rt0.c1, rt1.c2, rt1.c0))<>((rt1.c1, rt0.c1, rt1.c0)))) AND (((rt1.c2) NOT BETWEEN (rt0.c4) AND (rt1.c1))))  NULLS FIRST, (((((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c2))))>((((rt1.c2)>>(rt1.c2)))))  NULLS FIRST, ((CASE NULL  WHEN rt0.c1 THEN '' END)AND(((rt0.c4) IS TRUE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON x'' ORDER BY ((((0.24816642377500986) NOT NULL)) NOT BETWEEN ((((rt0.c1, rt1.c2, rt1.c0))<>((rt1.c1, rt0.c1, rt1.c0)))) AND (((rt1.c2) NOT BETWEEN (rt0.c4) AND (rt1.c1))))  NULLS FIRST, (((((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c2))))>((((rt1.c2)>>(rt1.c2)))))  NULLS FIRST, ((CASE NULL  WHEN rt0.c1 THEN '' END)AND(((rt0.c4) IS TRUE))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 INNER JOIN rt1 ON x'' WHERE (rt0.c3) ORDER BY ((((0.24816642377500986) NOT NULL)) NOT BETWEEN ((((rt0.c1, rt1.c2, rt1.c0))<>((rt1.c1, rt0.c1, rt1.c0)))) AND (((rt1.c2) NOT BETWEEN (rt0.c4) AND (rt1.c1))))  NULLS FIRST, (((((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c2))))>((((rt1.c2)>>(rt1.c2)))))  NULLS FIRST, ((CASE NULL  WHEN rt0.c1 THEN '' END)AND(((rt0.c4) IS TRUE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON x'' ORDER BY ((((0.24816642377500986) NOT NULL)) NOT BETWEEN ((((rt0.c1, rt1.c2, rt1.c0))<>((rt1.c1, rt0.c1, rt1.c0)))) AND (((rt1.c2) NOT BETWEEN (rt0.c4) AND (rt1.c1))))  NULLS FIRST, (((((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c2))))>((((rt1.c2)>>(rt1.c2)))))  NULLS FIRST, ((CASE NULL  WHEN rt0.c1 THEN '' END)AND(((rt0.c4) IS TRUE))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 INNER JOIN rt1 ON x'' WHERE (rt0.c3) ORDER BY ((((0.24816642377500986) NOT NULL)) NOT BETWEEN ((((rt0.c1, rt1.c2, rt1.c0))<>((rt1.c1, rt0.c1, rt1.c0)))) AND (((rt1.c2) NOT BETWEEN (rt0.c4) AND (rt1.c1))))  NULLS FIRST, (((((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c2))))>((((rt1.c2)>>(rt1.c2)))))  NULLS FIRST, ((CASE NULL  WHEN rt0.c1 THEN '' END)AND(((rt0.c4) IS TRUE))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((LIKELIHOOD(rt1.c1, 0.2122853386914707)) NOTNULL)) ORDER BY CAST(NULL AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(rt1.c1, 0.2122853386914707)) NOTNULL)) IS TRUE)  as count FROM rt1 ORDER BY CAST(NULL AS BLOB) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((LIKELIHOOD(rt1.c1, 0.2122853386914707)) NOTNULL)) ORDER BY CAST(NULL AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(rt1.c1, 0.2122853386914707)) NOTNULL)) IS TRUE)  as count FROM rt1 ORDER BY CAST(NULL AS BLOB) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((LIKELIHOOD(rt1.c1, 0.2122853386914707)) NOTNULL)) ORDER BY CAST(NULL AS BLOB) DESC  NULLS LAST;
SELECT ALL * FROM rt0, rt1 WHERE ((UNLIKELY(rt1.c1) IN (rt0.c4 COLLATE RTRIM))) ORDER BY ((rt1.c0 COLLATE BINARY) NOT BETWEEN ((0Xffffffff9187531a IN ())) AND (((rt0.c3) BETWEEN (rt0.c3) AND (0.36063027580305584)))), rt0.c4, NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((UNLIKELY(rt1.c1) IN (rt0.c4 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt1.c0 COLLATE BINARY) NOT BETWEEN ((0xffffffff9187531a IN ())) AND (((rt0.c3) BETWEEN (rt0.c3) AND (0.36063027580305584)))), rt0.c4, NULL ASC  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 WHERE ((UNLIKELY(rt1.c1) IN (rt0.c4 COLLATE RTRIM))) ORDER BY ((rt1.c0 COLLATE BINARY) NOT BETWEEN ((0Xffffffff9187531a IN ())) AND (((rt0.c3) BETWEEN (rt0.c3) AND (0.36063027580305584)))), rt0.c4, NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((UNLIKELY(rt1.c1) IN (rt0.c4 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt1.c0 COLLATE BINARY) NOT BETWEEN ((0xffffffff9187531a IN ())) AND (((rt0.c3) BETWEEN (rt0.c3) AND (0.36063027580305584)))), rt0.c4, NULL ASC  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 WHERE ((UNLIKELY(rt1.c1) IN (rt0.c4 COLLATE RTRIM))) ORDER BY ((rt1.c0 COLLATE BINARY) NOT BETWEEN ((0Xffffffff9187531a IN ())) AND (((rt0.c3) BETWEEN (rt0.c3) AND (0.36063027580305584)))), rt0.c4, NULL ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ('1419659073') ORDER BY (- (((rt1.c2) BETWEEN (rt0.c4) AND (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('1419659073') IS TRUE)  as count FROM rt0, rt1 ORDER BY (- (((rt1.c2) BETWEEN (rt0.c4) AND (rt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ('1419659073') ORDER BY (- (((rt1.c2) BETWEEN (rt0.c4) AND (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('1419659073') IS TRUE)  as count FROM rt0, rt1 ORDER BY (- (((rt1.c2) BETWEEN (rt0.c4) AND (rt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ('1419659073') ORDER BY (- (((rt1.c2) BETWEEN (rt0.c4) AND (rt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c4 AS REAL) COLLATE NOCASE) ORDER BY NULL ASC  NULLS LAST, (((rt0.c2 IN ()))==((+ (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c4 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY NULL ASC  NULLS LAST, (((rt0.c2 IN ()))==((+ (rt0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c4 AS REAL) COLLATE NOCASE) ORDER BY NULL ASC  NULLS LAST, (((rt0.c2 IN ()))==((+ (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c4 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY NULL ASC  NULLS LAST, (((rt0.c2 IN ()))==((+ (rt0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c4 AS REAL) COLLATE NOCASE) ORDER BY NULL ASC  NULLS LAST, (((rt0.c2 IN ()))==((+ (rt0.c1))));
SELECT ALL * FROM rt1 WHERE ((((('')OR(rt1.c0 COLLATE BINARY)))OR(((rt1.c1) NOT BETWEEN (x'') AND (rt1.c1))))) ORDER BY ((((((((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))AND(NULL)))OR((rt1.c2 IN ()))))OR((rt1.c1 IN (rt1.c0, '-484739612')))))AND(((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0)))) DESC, ((rt1.c2) NOT BETWEEN (((rt1.c0)%(rt1.c0))) AND (CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('')OR(rt1.c0 COLLATE BINARY)))OR(((rt1.c1) NOT BETWEEN (x'') AND (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))AND(NULL)))OR((rt1.c2 IN ()))))OR((rt1.c1 IN (rt1.c0, '-484739612')))))AND(((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0)))) DESC, ((rt1.c2) NOT BETWEEN (((rt1.c0)%(rt1.c0))) AND (CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END)) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((((('')OR(rt1.c0 COLLATE BINARY)))OR(((rt1.c1) NOT BETWEEN (x'') AND (rt1.c1))))) ORDER BY ((((((((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))AND(NULL)))OR((rt1.c2 IN ()))))OR((rt1.c1 IN (rt1.c0, '-484739612')))))AND(((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0)))) DESC, ((rt1.c2) NOT BETWEEN (((rt1.c0)%(rt1.c0))) AND (CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('')OR(rt1.c0 COLLATE BINARY)))OR(((rt1.c1) NOT BETWEEN (x'') AND (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))AND(NULL)))OR((rt1.c2 IN ()))))OR((rt1.c1 IN (rt1.c0, '-484739612')))))AND(((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0)))) DESC, ((rt1.c2) NOT BETWEEN (((rt1.c0)%(rt1.c0))) AND (CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END)) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((((('')OR(rt1.c0 COLLATE BINARY)))OR(((rt1.c1) NOT BETWEEN (x'') AND (rt1.c1))))) ORDER BY ((((((((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))AND(NULL)))OR((rt1.c2 IN ()))))OR((rt1.c1 IN (rt1.c0, '-484739612')))))AND(((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0)))) DESC, ((rt1.c2) NOT BETWEEN (((rt1.c0)%(rt1.c0))) AND (CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END)) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, rt1 WHERE (((((((rt1.c2)AND(rt1.c1)))OR(rt0.c1))) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (((rt0.c0)<('BlO-[ꅦv3'))))) ORDER BY (~ (CAST(rt1.c1 AS NUMERIC)))  NULLS FIRST, (((NULL))>=((LTRIM(rt1.c1, rt0.c4))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)AND(rt1.c1)))OR(rt0.c1))) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (((rt0.c0)<('BlO-[ꅦv3'))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (~ (CAST(rt1.c1 AS NUMERIC)))  NULLS FIRST, (((NULL))>=((LTRIM(rt1.c1, rt0.c4))))  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 WHERE (((((((rt1.c2)AND(rt1.c1)))OR(rt0.c1))) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (((rt0.c0)<('BlO-[ꅦv3'))))) ORDER BY (~ (CAST(rt1.c1 AS NUMERIC)))  NULLS FIRST, (((NULL))>=((LTRIM(rt1.c1, rt0.c4))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)AND(rt1.c1)))OR(rt0.c1))) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (((rt0.c0)<('BlO-[ꅦv3'))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (~ (CAST(rt1.c1 AS NUMERIC)))  NULLS FIRST, (((NULL))>=((LTRIM(rt1.c1, rt0.c4))))  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 WHERE (((((((rt1.c2)AND(rt1.c1)))OR(rt0.c1))) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (((rt0.c0)<('BlO-[ꅦv3'))))) ORDER BY (~ (CAST(rt1.c1 AS NUMERIC)))  NULLS FIRST, (((NULL))>=((LTRIM(rt1.c1, rt0.c4))))  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c0)) IN ())) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c0)) IN ())) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c0)) IN ()));
SELECT * FROM rt1, rt0 WHERE (json_insert(((rt1.c0) NOTNULL), (((rt0.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))), ((rt1.c1)%(rt1.c1)))) ORDER BY (((rt0.c1)) BETWEEN ((((rt1.c2)/(rt0.c3)))) AND ((json_array(rt0.c4, rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ((json_insert(((rt1.c0) NOTNULL), (((rt0.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))), ((rt1.c1)%(rt1.c1)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt0.c1)) BETWEEN ((((rt1.c2)/(rt0.c3)))) AND ((json_array(rt0.c4, rt0.c3)))) DESC);
SELECT * FROM rt1, rt0 WHERE (json_insert(((rt1.c0) NOTNULL), (((rt0.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))), ((rt1.c1)%(rt1.c1)))) ORDER BY (((rt0.c1)) BETWEEN ((((rt1.c2)/(rt0.c3)))) AND ((json_array(rt0.c4, rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ((json_insert(((rt1.c0) NOTNULL), (((rt0.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))), ((rt1.c1)%(rt1.c1)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt0.c1)) BETWEEN ((((rt1.c2)/(rt0.c3)))) AND ((json_array(rt0.c4, rt0.c3)))) DESC);
SELECT * FROM rt0, rt1 WHERE ((+ ((((rt0.c2))>((rt1.c0)))))) ORDER BY rt1.c0 COLLATE RTRIM ASC, NULL;
SELECT SUM(count) FROM (SELECT ALL (((+ ((((rt0.c2))>((rt1.c0)))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt1.c0 COLLATE RTRIM ASC, NULL);
SELECT * FROM rt0, rt1 WHERE ((+ ((((rt0.c2))>((rt1.c0)))))) ORDER BY rt1.c0 COLLATE RTRIM ASC, NULL;
SELECT SUM(count) FROM (SELECT ALL (((+ ((((rt0.c2))>((rt1.c0)))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt1.c0 COLLATE RTRIM ASC, NULL);
SELECT * FROM rt0, rt1 WHERE ((+ ((((rt0.c2))>((rt1.c0)))))) ORDER BY rt1.c0 COLLATE RTRIM ASC, NULL;
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((('-1429061373')OR(CAST(rt1.c0 AS BLOB))))AND('%䄒')));
SELECT SUM(count) FROM (SELECT ALL (((((('-1429061373')OR(CAST(rt1.c0 AS BLOB))))AND('%䄒'))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((('-1429061373')OR(CAST(rt1.c0 AS BLOB))))AND('%䄒')));
SELECT SUM(count) FROM (SELECT ALL (((((('-1429061373')OR(CAST(rt1.c0 AS BLOB))))AND('%䄒'))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((('-1429061373')OR(CAST(rt1.c0 AS BLOB))))AND('%䄒')));
SELECT * FROM rt0 WHERE ((((rt0.c4, rt0.c2, rt0.c1)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)), highlight(rt0.c0, rt0.c1, rt0.c1, rt0.c2), (rt0.c2 IN ()))) AND ((rt0.c0 COLLATE NOCASE, ((((((((rt0.c2)OR('-1606117078')))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c3)), ((rt0.c1)*(rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c4, rt0.c2, rt0.c1)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)), highlight(rt0.c0, rt0.c1, rt0.c1, rt0.c2), (rt0.c2 IN ()))) AND ((rt0.c0 COLLATE NOCASE, ((((((((rt0.c2)OR('-1606117078')))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c3)), ((rt0.c1)*(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c4, rt0.c2, rt0.c1)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)), highlight(rt0.c0, rt0.c1, rt0.c1, rt0.c2), (rt0.c2 IN ()))) AND ((rt0.c0 COLLATE NOCASE, ((((((((rt0.c2)OR('-1606117078')))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c3)), ((rt0.c1)*(rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c4, rt0.c2, rt0.c1)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)), highlight(rt0.c0, rt0.c1, rt0.c1, rt0.c2), (rt0.c2 IN ()))) AND ((rt0.c0 COLLATE NOCASE, ((((((((rt0.c2)OR('-1606117078')))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c3)), ((rt0.c1)*(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT ALL * FROM rt0 WHERE (((((x'')AND(((0X1ddfda64)<<(rt0.c1)))))OR((~ (rt0.c0))))) ORDER BY CASE rt0.c3  WHEN CAST(rt0.c0 AS INTEGER) THEN CAST(rt0.c2 AS BLOB) ELSE ((rt0.c0) NOT NULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')AND(((0X1ddfda64)<<(rt0.c1)))))OR((~ (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c3  WHEN CAST(rt0.c0 AS INTEGER) THEN CAST(rt0.c2 AS BLOB) ELSE ((rt0.c0) NOT NULL) END  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((x'')AND(((0X1ddfda64)<<(rt0.c1)))))OR((~ (rt0.c0))))) ORDER BY CASE rt0.c3  WHEN CAST(rt0.c0 AS INTEGER) THEN CAST(rt0.c2 AS BLOB) ELSE ((rt0.c0) NOT NULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')AND(((0X1ddfda64)<<(rt0.c1)))))OR((~ (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c3  WHEN CAST(rt0.c0 AS INTEGER) THEN CAST(rt0.c2 AS BLOB) ELSE ((rt0.c0) NOT NULL) END  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((x'')AND(((0X1ddfda64)<<(rt0.c1)))))OR((~ (rt0.c0))))) ORDER BY CASE rt0.c3  WHEN CAST(rt0.c0 AS INTEGER) THEN CAST(rt0.c2 AS BLOB) ELSE ((rt0.c0) NOT NULL) END  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (CAST(((((rt1.c2)OR(rt1.c1)))OR(rt1.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt1.c2)OR(rt1.c1)))OR(rt1.c0)) AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(((((rt1.c2)OR(rt1.c1)))OR(rt1.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt1.c2)OR(rt1.c1)))OR(rt1.c0)) AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(((((rt1.c2)OR(rt1.c1)))OR(rt1.c0)) AS TEXT));
SELECT * FROM rt0, rt1 WHERE (((((CAST(rt1.c1 AS REAL))OR('')))AND(((rt0.c2) NOTNULL)))) ORDER BY ((((rt0.c0) BETWEEN (NULL) AND (rt0.c4)))<=(rt0.c3 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt1.c1 AS REAL))OR('')))AND(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt0.c0) BETWEEN (NULL) AND (rt0.c4)))<=(rt0.c3 COLLATE NOCASE)));
SELECT * FROM rt0, rt1 WHERE (((((CAST(rt1.c1 AS REAL))OR('')))AND(((rt0.c2) NOTNULL)))) ORDER BY ((((rt0.c0) BETWEEN (NULL) AND (rt0.c4)))<=(rt0.c3 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt1.c1 AS REAL))OR('')))AND(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt0.c0) BETWEEN (NULL) AND (rt0.c4)))<=(rt0.c3 COLLATE NOCASE)));
SELECT * FROM rt0, rt1 WHERE (((((CAST(rt1.c1 AS REAL))OR('')))AND(((rt0.c2) NOTNULL)))) ORDER BY ((((rt0.c0) BETWEEN (NULL) AND (rt0.c4)))<=(rt0.c3 COLLATE NOCASE));
SELECT * FROM rt0, rt1 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (rt0.c3);
SELECT ALL * FROM rt1 WHERE (rt1.c0 COLLATE BINARY) ORDER BY CASE WHEN (((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2))) THEN ((rt1.c0)*(rt1.c1)) WHEN (((rt1.c2)) BETWEEN (('{}')) AND ((rt1.c2))) THEN ((rt1.c1)%(rt1.c0)) WHEN ((rt1.c1) NOT NULL) THEN CAST(rt1.c0 AS NUMERIC) END, '708024543'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c0 COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN (((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2))) THEN ((rt1.c0)*(rt1.c1)) WHEN (((rt1.c2)) BETWEEN (('{}')) AND ((rt1.c2))) THEN ((rt1.c1)%(rt1.c0)) WHEN ((rt1.c1) NOT NULL) THEN CAST(rt1.c0 AS NUMERIC) END, '708024543'  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (rt1.c0 COLLATE BINARY) ORDER BY CASE WHEN (((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2))) THEN ((rt1.c0)*(rt1.c1)) WHEN (((rt1.c2)) BETWEEN (('{}')) AND ((rt1.c2))) THEN ((rt1.c1)%(rt1.c0)) WHEN ((rt1.c1) NOT NULL) THEN CAST(rt1.c0 AS NUMERIC) END, '708024543'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c0 COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN (((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2))) THEN ((rt1.c0)*(rt1.c1)) WHEN (((rt1.c2)) BETWEEN (('{}')) AND ((rt1.c2))) THEN ((rt1.c1)%(rt1.c0)) WHEN ((rt1.c1) NOT NULL) THEN CAST(rt1.c0 AS NUMERIC) END, '708024543'  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (rt1.c0 COLLATE BINARY) ORDER BY CASE WHEN (((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2))) THEN ((rt1.c0)*(rt1.c1)) WHEN (((rt1.c2)) BETWEEN (('{}')) AND ((rt1.c2))) THEN ((rt1.c1)%(rt1.c0)) WHEN ((rt1.c1) NOT NULL) THEN CAST(rt1.c0 AS NUMERIC) END, '708024543'  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ('521856584');
SELECT SUM(count) FROM (SELECT ALL (('521856584') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('521856584');
SELECT SUM(count) FROM (SELECT ALL (('521856584') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('521856584');
SELECT * FROM rt0, rt1 WHERE ((rt1.c1 IN (((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0))))) ORDER BY GLOB(((((rt0.c4)AND(rt1.c1)))OR(rt1.c2)), CASE WHEN rt1.c1 THEN 0.6350647055165387 WHEN x'dbb9' THEN rt1.c1 WHEN rt0.c3 THEN rt1.c1 ELSE rt0.c4 END)  NULLS LAST, ((rt1.c2 IN (rt0.c3, rt0.c0)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt1.c1 IN (((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY GLOB(((((rt0.c4)AND(rt1.c1)))OR(rt1.c2)), CASE WHEN rt1.c1 THEN 0.6350647055165387 WHEN x'dbb9' THEN rt1.c1 WHEN rt0.c3 THEN rt1.c1 ELSE rt0.c4 END)  NULLS LAST, ((rt1.c2 IN (rt0.c3, rt0.c0)) IN ()) ASC  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE ((rt1.c1 IN (((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0))))) ORDER BY GLOB(((((rt0.c4)AND(rt1.c1)))OR(rt1.c2)), CASE WHEN rt1.c1 THEN 0.6350647055165387 WHEN x'dbb9' THEN rt1.c1 WHEN rt0.c3 THEN rt1.c1 ELSE rt0.c4 END)  NULLS LAST, ((rt1.c2 IN (rt0.c3, rt0.c0)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt1.c1 IN (((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY GLOB(((((rt0.c4)AND(rt1.c1)))OR(rt1.c2)), CASE WHEN rt1.c1 THEN 0.6350647055165387 WHEN x'dbb9' THEN rt1.c1 WHEN rt0.c3 THEN rt1.c1 ELSE rt0.c4 END)  NULLS LAST, ((rt1.c2 IN (rt0.c3, rt0.c0)) IN ()) ASC  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE ((rt1.c1 IN (((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0))))) ORDER BY GLOB(((((rt0.c4)AND(rt1.c1)))OR(rt1.c2)), CASE WHEN rt1.c1 THEN 0.6350647055165387 WHEN x'dbb9' THEN rt1.c1 WHEN rt0.c3 THEN rt1.c1 ELSE rt0.c4 END)  NULLS LAST, ((rt1.c2 IN (rt0.c3, rt0.c0)) IN ()) ASC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (((((rt1.c2) IS TRUE))<<(((rt1.c2)IS NOT(rt1.c0))))) ORDER BY CAST(CASE WHEN rt1.c2 THEN rt1.c2 END AS INTEGER) DESC, (((rt1.c1))==((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) IS TRUE))<<(((rt1.c2)IS NOT(rt1.c0))))) IS TRUE)  as count FROM rt1 NOT INDEXED ORDER BY CAST(CASE WHEN rt1.c2 THEN rt1.c2 END AS INTEGER) DESC, (((rt1.c1))==((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2))))) ASC);
SELECT ALL * FROM rt1 WHERE (((((rt1.c2) IS TRUE))<<(((rt1.c2)IS NOT(rt1.c0))))) ORDER BY CAST(CASE WHEN rt1.c2 THEN rt1.c2 END AS INTEGER) DESC, (((rt1.c1))==((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) IS TRUE))<<(((rt1.c2)IS NOT(rt1.c0))))) IS TRUE)  as count FROM rt1 NOT INDEXED ORDER BY CAST(CASE WHEN rt1.c2 THEN rt1.c2 END AS INTEGER) DESC, (((rt1.c1))==((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2))))) ASC);
SELECT ALL * FROM rt1 WHERE (((((rt1.c2) IS TRUE))<<(((rt1.c2)IS NOT(rt1.c0))))) ORDER BY CAST(CASE WHEN rt1.c2 THEN rt1.c2 END AS INTEGER) DESC, (((rt1.c1))==((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2))))) ASC;
SELECT * FROM rt1 CROSS JOIN rt0 ON '' WHERE (((((0.2995646922495755)LIKE(rt1.c1)))<((NOT (rt0.c4))))) ORDER BY ((((rt0.c4)>(rt1.c1))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt1.c0 END) AND (rt0.c0 COLLATE NOCASE))  NULLS LAST, ((NULLIF(rt0.c1, rt1.c0)) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((((0.2995646922495755)LIKE(rt1.c1)))<((NOT (rt0.c4))))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON '' ORDER BY ((((rt0.c4)>(rt1.c1))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt1.c0 END) AND (rt0.c0 COLLATE NOCASE))  NULLS LAST, ((NULLIF(rt0.c1, rt1.c0)) IS FALSE));
SELECT * FROM rt1 CROSS JOIN rt0 ON '' WHERE (((((0.2995646922495755)LIKE(rt1.c1)))<((NOT (rt0.c4))))) ORDER BY ((((rt0.c4)>(rt1.c1))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt1.c0 END) AND (rt0.c0 COLLATE NOCASE))  NULLS LAST, ((NULLIF(rt0.c1, rt1.c0)) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((((0.2995646922495755)LIKE(rt1.c1)))<((NOT (rt0.c4))))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON '' ORDER BY ((((rt0.c4)>(rt1.c1))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt1.c0 END) AND (rt0.c0 COLLATE NOCASE))  NULLS LAST, ((NULLIF(rt0.c1, rt1.c0)) IS FALSE));
SELECT * FROM rt1 CROSS JOIN rt0 ON '' WHERE (((((0.2995646922495755)LIKE(rt1.c1)))<((NOT (rt0.c4))))) ORDER BY ((((rt0.c4)>(rt1.c1))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt1.c0 END) AND (rt0.c0 COLLATE NOCASE))  NULLS LAST, ((NULLIF(rt0.c1, rt1.c0)) IS FALSE);
SELECT ALL * FROM rt1 NATURAL JOIN rt0 WHERE (((rt0.c2)&(rt1.c1)) COLLATE RTRIM) ORDER BY ((x'bbf9') NOT BETWEEN (NULL) AND (((rt1.c0) IS TRUE))) ASC, UNLIKELY(((rt0.c0) IS TRUE)) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)&(rt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0 ORDER BY ((x'bbf9') NOT BETWEEN (NULL) AND (((rt1.c0) IS TRUE))) ASC, UNLIKELY(((rt0.c0) IS TRUE)) DESC);
SELECT ALL * FROM rt1 NATURAL JOIN rt0 WHERE (((rt0.c2)&(rt1.c1)) COLLATE RTRIM) ORDER BY ((x'bbf9') NOT BETWEEN (NULL) AND (((rt1.c0) IS TRUE))) ASC, UNLIKELY(((rt0.c0) IS TRUE)) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)&(rt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0 ORDER BY ((x'bbf9') NOT BETWEEN (NULL) AND (((rt1.c0) IS TRUE))) ASC, UNLIKELY(((rt0.c0) IS TRUE)) DESC);
SELECT ALL * FROM rt1 NATURAL JOIN rt0 WHERE (((rt0.c2)&(rt1.c1)) COLLATE RTRIM) ORDER BY ((x'bbf9') NOT BETWEEN (NULL) AND (((rt1.c0) IS TRUE))) ASC, UNLIKELY(((rt0.c0) IS TRUE)) DESC;
SELECT COUNT(*) FROM rt1 WHERE (((LOWER(rt1.c0)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(rt1.c0)) NOT NULL)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((LOWER(rt1.c0)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(rt1.c0)) NOT NULL)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((LOWER(rt1.c0)) NOT NULL));
SELECT ALL * FROM rt0, rt1 WHERE ((- (rt0.c3)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((- (rt0.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE ((- (rt0.c3)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((- (rt0.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE ((- (rt0.c3)) COLLATE NOCASE);
SELECT * FROM rt0, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (NULL);
SELECT * FROM rt1, rt0 WHERE (rt0.c3 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((rt0.c3 COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (rt0.c3 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((rt0.c3 COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (rt0.c3 COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c2 COLLATE RTRIM)OR(((((rt1.c0)OR(rt1.c1)))AND(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE RTRIM)OR(((((rt1.c0)OR(rt1.c1)))AND(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c2 COLLATE RTRIM)OR(((((rt1.c0)OR(rt1.c1)))AND(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE RTRIM)OR(((((rt1.c0)OR(rt1.c1)))AND(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c2 COLLATE RTRIM)OR(((((rt1.c0)OR(rt1.c1)))AND(rt1.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((LTRIM(rt0.c2, rt0.c2) IN ())) ORDER BY (rt0.c1 IN ()) COLLATE BINARY COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((LTRIM(rt0.c2, rt0.c2) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c1 IN ()) COLLATE BINARY COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((LTRIM(rt0.c2, rt0.c2) IN ())) ORDER BY (rt0.c1 IN ()) COLLATE BINARY COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((LTRIM(rt0.c2, rt0.c2) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c1 IN ()) COLLATE BINARY COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((LTRIM(rt0.c2, rt0.c2) IN ())) ORDER BY (rt0.c1 IN ()) COLLATE BINARY COLLATE BINARY ASC  NULLS FIRST;
SELECT * FROM rt1 WHERE (LIKELIHOOD(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)), 0.19574005657351423)) ORDER BY ((((rt1.c0)IS(x''))) BETWEEN (0.8847648447137355) AND (SQLITE_COMPILEOPTION_GET(rt1.c2))), ((CASE WHEN rt1.c1 THEN rt1.c1 END) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)), 0.19574005657351423)) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0)IS(x''))) BETWEEN (0.8847648447137355) AND (SQLITE_COMPILEOPTION_GET(rt1.c2))), ((CASE WHEN rt1.c1 THEN rt1.c1 END) NOTNULL)  NULLS LAST);
SELECT * FROM rt1 WHERE (LIKELIHOOD(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)), 0.19574005657351423)) ORDER BY ((((rt1.c0)IS(x''))) BETWEEN (0.8847648447137355) AND (SQLITE_COMPILEOPTION_GET(rt1.c2))), ((CASE WHEN rt1.c1 THEN rt1.c1 END) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)), 0.19574005657351423)) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0)IS(x''))) BETWEEN (0.8847648447137355) AND (SQLITE_COMPILEOPTION_GET(rt1.c2))), ((CASE WHEN rt1.c1 THEN rt1.c1 END) NOTNULL)  NULLS LAST);
SELECT * FROM rt1 WHERE (LIKELIHOOD(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)), 0.19574005657351423)) ORDER BY ((((rt1.c0)IS(x''))) BETWEEN (0.8847648447137355) AND (SQLITE_COMPILEOPTION_GET(rt1.c2))), ((CASE WHEN rt1.c1 THEN rt1.c1 END) NOTNULL)  NULLS LAST;
SELECT * FROM rt1, rt0 WHERE (rt1.c0) ORDER BY ((((rt0.c3)AND(((rt0.c0)!=(rt0.c0)))))AND(x''))  NULLS FIRST, ((((rt0.c2)>>(rt1.c1)))IS(((rt1.c2) BETWEEN (0.33966053154223486) AND (rt1.c1)))) DESC  NULLS FIRST, (~ (rt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt0.c3)AND(((rt0.c0)!=(rt0.c0)))))AND(x''))  NULLS FIRST, ((((rt0.c2)>>(rt1.c1)))IS(((rt1.c2) BETWEEN (0.33966053154223486) AND (rt1.c1)))) DESC  NULLS FIRST, (~ (rt1.c0))  NULLS FIRST);
SELECT * FROM rt1, rt0 WHERE (rt1.c0) ORDER BY ((((rt0.c3)AND(((rt0.c0)!=(rt0.c0)))))AND(x''))  NULLS FIRST, ((((rt0.c2)>>(rt1.c1)))IS(((rt1.c2) BETWEEN (0.33966053154223486) AND (rt1.c1)))) DESC  NULLS FIRST, (~ (rt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt0.c3)AND(((rt0.c0)!=(rt0.c0)))))AND(x''))  NULLS FIRST, ((((rt0.c2)>>(rt1.c1)))IS(((rt1.c2) BETWEEN (0.33966053154223486) AND (rt1.c1)))) DESC  NULLS FIRST, (~ (rt1.c0))  NULLS FIRST);
SELECT * FROM rt1, rt0 WHERE (rt1.c0) ORDER BY ((((rt0.c3)AND(((rt0.c0)!=(rt0.c0)))))AND(x''))  NULLS FIRST, ((((rt0.c2)>>(rt1.c1)))IS(((rt1.c2) BETWEEN (0.33966053154223486) AND (rt1.c1)))) DESC  NULLS FIRST, (~ (rt1.c0))  NULLS FIRST;
SELECT ALL * FROM rt1, rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt1.c1)))<>(x'665ffe82')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt1.c1)))<>(x'665ffe82'))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt1.c1)))<>(x'665ffe82')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt1.c1)))<>(x'665ffe82'))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt1.c1)))<>(x'665ffe82')));
SELECT * FROM rt1 WHERE (rt1.c1) ORDER BY ((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0))) NOTNULL)  NULLS LAST);
SELECT * FROM rt1 WHERE (rt1.c1) ORDER BY ((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0))) NOTNULL)  NULLS LAST);
SELECT * FROM rt1 WHERE (rt1.c1) ORDER BY ((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0))) NOTNULL)  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c0, rt0.c0, rt0.c0, rt0.c2, rt0.c4)) BETWEEN ((NULL, TYPEOF(DISTINCT rt0.c3), CAST(rt0.c4 AS REAL), (((((((('0.0620987861681922')AND(rt0.c4)))AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c0)), ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0)))) AND (((- (rt0.c3)), (- (rt0.c1)), (- (rt0.c1)), (- (rt0.c2)), ((NULL) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c0, rt0.c0, rt0.c2, rt0.c4)) BETWEEN ((NULL, TYPEOF(DISTINCT rt0.c3), CAST(rt0.c4 AS REAL), (((((((('0.0620987861681922')AND(rt0.c4)))AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c0)), ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0)))) AND (((- (rt0.c3)), (- (rt0.c1)), (- (rt0.c1)), (- (rt0.c2)), ((NULL) IS FALSE))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0, rt0.c0, rt0.c0, rt0.c2, rt0.c4)) BETWEEN ((NULL, TYPEOF(DISTINCT rt0.c3), CAST(rt0.c4 AS REAL), (((((((('0.0620987861681922')AND(rt0.c4)))AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c0)), ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0)))) AND (((- (rt0.c3)), (- (rt0.c1)), (- (rt0.c1)), (- (rt0.c2)), ((NULL) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c0, rt0.c0, rt0.c2, rt0.c4)) BETWEEN ((NULL, TYPEOF(DISTINCT rt0.c3), CAST(rt0.c4 AS REAL), (((((((('0.0620987861681922')AND(rt0.c4)))AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c0)), ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0)))) AND (((- (rt0.c3)), (- (rt0.c1)), (- (rt0.c1)), (- (rt0.c2)), ((NULL) IS FALSE))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0, rt0.c0, rt0.c0, rt0.c2, rt0.c4)) BETWEEN ((NULL, TYPEOF(DISTINCT rt0.c3), CAST(rt0.c4 AS REAL), (((((((('0.0620987861681922')AND(rt0.c4)))AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c0)), ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0)))) AND (((- (rt0.c3)), (- (rt0.c1)), (- (rt0.c1)), (- (rt0.c2)), ((NULL) IS FALSE)))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c1)>(rt0.c0))) BETWEEN ((rt0.c2 IN ())) AND (CASE x'bd22'  WHEN rt0.c3 THEN rt0.c1 WHEN rt1.c0 THEN '792914988' WHEN rt1.c0 THEN rt1.c1 ELSE rt0.c4 END))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)>(rt0.c0))) BETWEEN ((rt0.c2 IN ())) AND (CASE x'bd22'  WHEN rt0.c3 THEN rt0.c1 WHEN rt1.c0 THEN '792914988' WHEN rt1.c0 THEN rt1.c1 ELSE rt0.c4 END))) IS TRUE)  as count FROM rt0, rt1 ORDER BY x'' DESC);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c1)>(rt0.c0))) BETWEEN ((rt0.c2 IN ())) AND (CASE x'bd22'  WHEN rt0.c3 THEN rt0.c1 WHEN rt1.c0 THEN '792914988' WHEN rt1.c0 THEN rt1.c1 ELSE rt0.c4 END))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)>(rt0.c0))) BETWEEN ((rt0.c2 IN ())) AND (CASE x'bd22'  WHEN rt0.c3 THEN rt0.c1 WHEN rt1.c0 THEN '792914988' WHEN rt1.c0 THEN rt1.c1 ELSE rt0.c4 END))) IS TRUE)  as count FROM rt0, rt1 ORDER BY x'' DESC);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c1)>(rt0.c0))) BETWEEN ((rt0.c2 IN ())) AND (CASE x'bd22'  WHEN rt0.c3 THEN rt0.c1 WHEN rt1.c0 THEN '792914988' WHEN rt1.c0 THEN rt1.c1 ELSE rt0.c4 END))) ORDER BY x'' DESC;
SELECT * FROM rt0, rt1 WHERE ((((rt0.c2))>(((rt0.c2 IN ()))))) ORDER BY (NOT (rt0.c0 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2))>(((rt0.c2 IN ()))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (NOT (rt0.c0 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT * FROM rt0, rt1 WHERE ((((rt0.c2))>(((rt0.c2 IN ()))))) ORDER BY (NOT (rt0.c0 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2))>(((rt0.c2 IN ()))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (NOT (rt0.c0 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT * FROM rt0, rt1 WHERE ((((rt0.c2))>(((rt0.c2 IN ()))))) ORDER BY (NOT (rt0.c0 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE (- (rt1.c2))  WHEN (((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))) THEN ((rt1.c1) ISNULL) ELSE 0.9544939099975472 END) ORDER BY ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 WHEN '1440482346' THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END)>(NULL)), (((rt1.c1)) BETWEEN ((x'e200')) AND ((CAST(rt1.c1 AS BLOB))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (- (rt1.c2))  WHEN (((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))) THEN ((rt1.c1) ISNULL) ELSE 0.9544939099975472 END) IS TRUE)  as count FROM rt1 ORDER BY ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 WHEN '1440482346' THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END)>(NULL)), (((rt1.c1)) BETWEEN ((x'e200')) AND ((CAST(rt1.c1 AS BLOB))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE (- (rt1.c2))  WHEN (((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))) THEN ((rt1.c1) ISNULL) ELSE 0.9544939099975472 END) ORDER BY ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 WHEN '1440482346' THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END)>(NULL)), (((rt1.c1)) BETWEEN ((x'e200')) AND ((CAST(rt1.c1 AS BLOB))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (- (rt1.c2))  WHEN (((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))) THEN ((rt1.c1) ISNULL) ELSE 0.9544939099975472 END) IS TRUE)  as count FROM rt1 ORDER BY ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 WHEN '1440482346' THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END)>(NULL)), (((rt1.c1)) BETWEEN ((x'e200')) AND ((CAST(rt1.c1 AS BLOB))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE (- (rt1.c2))  WHEN (((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))) THEN ((rt1.c1) ISNULL) ELSE 0.9544939099975472 END) ORDER BY ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 WHEN '1440482346' THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END)>(NULL)), (((rt1.c1)) BETWEEN ((x'e200')) AND ((CAST(rt1.c1 AS BLOB))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN rt1 ON (((~ ('#')))<=(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 END)) WHERE (((((rt1.c0) BETWEEN (rt0.c3) AND (rt0.c3)))>(((rt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) BETWEEN (rt0.c3) AND (rt0.c3)))>(((rt1.c0) NOTNULL)))) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON (((~ ('#')))<=(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 END)));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN rt1 ON (((~ ('#')))<=(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 END)) WHERE (((((rt1.c0) BETWEEN (rt0.c3) AND (rt0.c3)))>(((rt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) BETWEEN (rt0.c3) AND (rt0.c3)))>(((rt1.c0) NOTNULL)))) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON (((~ ('#')))<=(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 END)));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN rt1 ON (((~ ('#')))<=(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 END)) WHERE (((((rt1.c0) BETWEEN (rt0.c3) AND (rt0.c3)))>(((rt1.c0) NOTNULL))));
SELECT * FROM rt1, rt0 WHERE (CASE WHEN UPPER(DISTINCT rt0.c0) THEN ((rt1.c2) ISNULL) END) ORDER BY CAST(((rt1.c0)<=(rt1.c2)) AS INTEGER) DESC  NULLS LAST, CAST((- (rt0.c0)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN UPPER(DISTINCT rt0.c0) THEN ((rt1.c2) ISNULL) END) IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST(((rt1.c0)<=(rt1.c2)) AS INTEGER) DESC  NULLS LAST, CAST((- (rt0.c0)) AS NUMERIC) ASC);
SELECT * FROM rt1, rt0 WHERE (CASE WHEN UPPER(DISTINCT rt0.c0) THEN ((rt1.c2) ISNULL) END) ORDER BY CAST(((rt1.c0)<=(rt1.c2)) AS INTEGER) DESC  NULLS LAST, CAST((- (rt0.c0)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN UPPER(DISTINCT rt0.c0) THEN ((rt1.c2) ISNULL) END) IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST(((rt1.c0)<=(rt1.c2)) AS INTEGER) DESC  NULLS LAST, CAST((- (rt0.c0)) AS NUMERIC) ASC);
SELECT * FROM rt1, rt0 WHERE (CASE WHEN UPPER(DISTINCT rt0.c0) THEN ((rt1.c2) ISNULL) END) ORDER BY CAST(((rt1.c0)<=(rt1.c2)) AS INTEGER) DESC  NULLS LAST, CAST((- (rt0.c0)) AS NUMERIC) ASC;
SELECT * FROM rt0 WHERE (((LIKELIHOOD(DISTINCT rt0.c0, 0.7744170623504016))<=(NULL))) ORDER BY rt0.c3 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT rt0.c0, 0.7744170623504016))<=(NULL))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3 DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (((LIKELIHOOD(DISTINCT rt0.c0, 0.7744170623504016))<=(NULL))) ORDER BY rt0.c3 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT rt0.c0, 0.7744170623504016))<=(NULL))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3 DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (((LIKELIHOOD(DISTINCT rt0.c0, 0.7744170623504016))<=(NULL))) ORDER BY rt0.c3 DESC  NULLS LAST;
SELECT ALL * FROM rt1, rt0 WHERE (((((((((x'')OR(rt0.c4)))AND(rt0.c2)))AND('')))OR((rt0.c4 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((x'')OR(rt0.c4)))AND(rt0.c2)))AND('')))OR((rt0.c4 IN ())))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (((((((((x'')OR(rt0.c4)))AND(rt0.c2)))AND('')))OR((rt0.c4 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((x'')OR(rt0.c4)))AND(rt0.c2)))AND('')))OR((rt0.c4 IN ())))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (((((((((x'')OR(rt0.c4)))AND(rt0.c2)))AND('')))OR((rt0.c4 IN ()))));
SELECT * FROM rt0, rt1 WHERE (CAST(((rt1.c2)<(rt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2)<(rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (CAST(((rt1.c2)<(rt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2)<(rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (CAST(((rt1.c2)<(rt0.c0)) AS NUMERIC));
SELECT * FROM rt1, rt0 WHERE (((((rt1.c1)) BETWEEN ((rt0.c0)) AND ((rt1.c2))) IN ())) ORDER BY (((NOT (rt1.c0))) IS TRUE) DESC  NULLS LAST, ((((rt0.c2)LIKE(x'882a'))) NOTNULL), CASE ((rt0.c4)>(rt1.c1))  WHEN rt0.c3 THEN -2082901730 ELSE ((x'dfa5')>>(rt0.c2)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)) BETWEEN ((rt0.c0)) AND ((rt1.c2))) IN ())) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((NOT (rt1.c0))) IS TRUE) DESC  NULLS LAST, ((((rt0.c2)LIKE(x'882a'))) NOTNULL), CASE ((rt0.c4)>(rt1.c1))  WHEN rt0.c3 THEN -2082901730 ELSE ((x'dfa5')>>(rt0.c2)) END);
SELECT * FROM rt1, rt0 WHERE (((((rt1.c1)) BETWEEN ((rt0.c0)) AND ((rt1.c2))) IN ())) ORDER BY (((NOT (rt1.c0))) IS TRUE) DESC  NULLS LAST, ((((rt0.c2)LIKE(x'882a'))) NOTNULL), CASE ((rt0.c4)>(rt1.c1))  WHEN rt0.c3 THEN -2082901730 ELSE ((x'dfa5')>>(rt0.c2)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)) BETWEEN ((rt0.c0)) AND ((rt1.c2))) IN ())) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((NOT (rt1.c0))) IS TRUE) DESC  NULLS LAST, ((((rt0.c2)LIKE(x'882a'))) NOTNULL), CASE ((rt0.c4)>(rt1.c1))  WHEN rt0.c3 THEN -2082901730 ELSE ((x'dfa5')>>(rt0.c2)) END);
SELECT * FROM rt1, rt0 WHERE (((((rt1.c1)) BETWEEN ((rt0.c0)) AND ((rt1.c2))) IN ())) ORDER BY (((NOT (rt1.c0))) IS TRUE) DESC  NULLS LAST, ((((rt0.c2)LIKE(x'882a'))) NOTNULL), CASE ((rt0.c4)>(rt1.c1))  WHEN rt0.c3 THEN -2082901730 ELSE ((x'dfa5')>>(rt0.c2)) END;
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c4) NOTNULL) AS REAL)) ORDER BY CAST(rt0.c3 AS TEXT) COLLATE NOCASE, '' COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c4) NOTNULL) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c3 AS TEXT) COLLATE NOCASE, '' COLLATE NOCASE ASC);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c4) NOTNULL) AS REAL)) ORDER BY CAST(rt0.c3 AS TEXT) COLLATE NOCASE, '' COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c4) NOTNULL) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c3 AS TEXT) COLLATE NOCASE, '' COLLATE NOCASE ASC);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c4) NOTNULL) AS REAL)) ORDER BY CAST(rt0.c3 AS TEXT) COLLATE NOCASE, '' COLLATE NOCASE ASC;
SELECT ALL * FROM rt0, rt1 WHERE (((rt0.c4 IN (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4 IN (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((rt0.c4 IN (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4 IN (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((rt0.c4 IN (rt0.c1)) IN ()));
SELECT * FROM rt1 WHERE (CAST(((rt1.c0) IS TRUE) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c0) IS TRUE) AS BLOB)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST(((rt1.c0) IS TRUE) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c0) IS TRUE) AS BLOB)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST(((rt1.c0) IS TRUE) AS BLOB));
SELECT * FROM rt1 WHERE (((0X3e7ba469)+((+ (rt1.c2))))) ORDER BY ABS((- (rt1.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0X3e7ba469)+((+ (rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY ABS((- (rt1.c1))) ASC  NULLS FIRST);
SELECT * FROM rt1 WHERE (((0X3e7ba469)+((+ (rt1.c2))))) ORDER BY ABS((- (rt1.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0X3e7ba469)+((+ (rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY ABS((- (rt1.c1))) ASC  NULLS FIRST);
SELECT * FROM rt1 WHERE (((0X3e7ba469)+((+ (rt1.c2))))) ORDER BY ABS((- (rt1.c1))) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (0x257c3979);
SELECT SUM(count) FROM (SELECT ((0X257c3979) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (0x257c3979);
SELECT SUM(count) FROM (SELECT ((0X257c3979) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (0x257c3979);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((- (rt0.c4)) AS TEXT)) ORDER BY (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c4)) IN (((rt0.c1)>>(rt0.c0)), (((rt0.c0))<=((rt0.c3))), NULL)), x'5281', (~ (((((((((rt0.c0)OR(rt0.c4)))OR(rt0.c4)))AND(rt0.c2)))AND(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (rt0.c4)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c4)) IN (((rt0.c1)>>(rt0.c0)), (((rt0.c0))<=((rt0.c3))), NULL)), x'5281', (~ (((((((((rt0.c0)OR(rt0.c4)))OR(rt0.c4)))AND(rt0.c2)))AND(rt0.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((- (rt0.c4)) AS TEXT)) ORDER BY (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c4)) IN (((rt0.c1)>>(rt0.c0)), (((rt0.c0))<=((rt0.c3))), NULL)), x'5281', (~ (((((((((rt0.c0)OR(rt0.c4)))OR(rt0.c4)))AND(rt0.c2)))AND(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (rt0.c4)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c4)) IN (((rt0.c1)>>(rt0.c0)), (((rt0.c0))<=((rt0.c3))), NULL)), x'5281', (~ (((((((((rt0.c0)OR(rt0.c4)))OR(rt0.c4)))AND(rt0.c2)))AND(rt0.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((- (rt0.c4)) AS TEXT)) ORDER BY (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c4)) IN (((rt0.c1)>>(rt0.c0)), (((rt0.c0))<=((rt0.c3))), NULL)), x'5281', (~ (((((((((rt0.c0)OR(rt0.c4)))OR(rt0.c4)))AND(rt0.c2)))AND(rt0.c2)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1)OR(NULL)))OR(rt0.c2)) IN ())) ORDER BY CAST((((rt0.c2))>((x''))) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)OR(NULL)))OR(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY CAST((((rt0.c2))>((x''))) AS INTEGER) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1)OR(NULL)))OR(rt0.c2)) IN ())) ORDER BY CAST((((rt0.c2))>((x''))) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)OR(NULL)))OR(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY CAST((((rt0.c2))>((x''))) AS INTEGER) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1)OR(NULL)))OR(rt0.c2)) IN ())) ORDER BY CAST((((rt0.c2))>((x''))) AS INTEGER) ASC;
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON (rt0.c1 COLLATE BINARY IN (((((rt0.c3)AND(rt0.c2)))AND(rt0.c1)), (((rt0.c4, rt1.c1, rt1.c0))>((rt0.c2, rt0.c4, rt0.c3))))) WHERE (0xffffffffdd87cdde);
SELECT SUM(count) FROM (SELECT ((0xffffffffdd87cdde) IS TRUE)  as count FROM rt0 NOT INDEXED FULL OUTER JOIN rt1 ON (rt0.c1 COLLATE BINARY IN (((((rt0.c3)AND(rt0.c2)))AND(rt0.c1)), (((rt0.c4, rt1.c1, rt1.c0))>((rt0.c2, rt0.c4, rt0.c3))))));
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON (rt0.c1 COLLATE BINARY IN (((((rt0.c3)AND(rt0.c2)))AND(rt0.c1)), (((rt0.c4, rt1.c1, rt1.c0))>((rt0.c2, rt0.c4, rt0.c3))))) WHERE (0xffffffffdd87cdde);
SELECT SUM(count) FROM (SELECT ((0xffffffffdd87cdde) IS TRUE)  as count FROM rt0 NOT INDEXED FULL OUTER JOIN rt1 ON (rt0.c1 COLLATE BINARY IN (((((rt0.c3)AND(rt0.c2)))AND(rt0.c1)), (((rt0.c4, rt1.c1, rt1.c0))>((rt0.c2, rt0.c4, rt0.c3))))));
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON (rt0.c1 COLLATE BINARY IN (((((rt0.c3)AND(rt0.c2)))AND(rt0.c1)), (((rt0.c4, rt1.c1, rt1.c0))>((rt0.c2, rt0.c4, rt0.c3))))) WHERE (0xffffffffdd87cdde);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN ((rt0.c1) NOT NULL) WHEN (rt0.c3 IN ()) THEN rt0.c2 COLLATE RTRIM WHEN ((((rt0.c4)AND(rt0.c3)))OR('%Jw')) THEN (((rt0.c0))>=((rt0.c4))) WHEN ((rt0.c4)&(NULL)) THEN (rt0.c0 IN (rt0.c4)) WHEN UNICODE(rt0.c4) THEN (~ (0.5500724011792244)) END) ORDER BY (((((((((rt0.c0 IN ()))AND(rt0.c1 COLLATE NOCASE)))OR(((rt0.c2)==(rt0.c2)))))AND(((0.7656104261467341)IS(rt0.c4)))))OR((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN ((rt0.c1) NOT NULL) WHEN (rt0.c3 IN ()) THEN rt0.c2 COLLATE RTRIM WHEN ((((rt0.c4)AND(rt0.c3)))OR('%Jw')) THEN (((rt0.c0))>=((rt0.c4))) WHEN ((rt0.c4)&(NULL)) THEN (rt0.c0 IN (rt0.c4)) WHEN UNICODE(rt0.c4) THEN (~ (0.5500724011792244)) END) IS TRUE)  as count FROM rt0 ORDER BY (((((((((rt0.c0 IN ()))AND(rt0.c1 COLLATE NOCASE)))OR(((rt0.c2)==(rt0.c2)))))AND(((0.7656104261467341)IS(rt0.c4)))))OR((rt0.c2 IN ()))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN ((rt0.c1) NOT NULL) WHEN (rt0.c3 IN ()) THEN rt0.c2 COLLATE RTRIM WHEN ((((rt0.c4)AND(rt0.c3)))OR('%Jw')) THEN (((rt0.c0))>=((rt0.c4))) WHEN ((rt0.c4)&(NULL)) THEN (rt0.c0 IN (rt0.c4)) WHEN UNICODE(rt0.c4) THEN (~ (0.5500724011792244)) END) ORDER BY (((((((((rt0.c0 IN ()))AND(rt0.c1 COLLATE NOCASE)))OR(((rt0.c2)==(rt0.c2)))))AND(((0.7656104261467341)IS(rt0.c4)))))OR((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN ((rt0.c1) NOT NULL) WHEN (rt0.c3 IN ()) THEN rt0.c2 COLLATE RTRIM WHEN ((((rt0.c4)AND(rt0.c3)))OR('%Jw')) THEN (((rt0.c0))>=((rt0.c4))) WHEN ((rt0.c4)&(NULL)) THEN (rt0.c0 IN (rt0.c4)) WHEN UNICODE(rt0.c4) THEN (~ (0.5500724011792244)) END) IS TRUE)  as count FROM rt0 ORDER BY (((((((((rt0.c0 IN ()))AND(rt0.c1 COLLATE NOCASE)))OR(((rt0.c2)==(rt0.c2)))))AND(((0.7656104261467341)IS(rt0.c4)))))OR((rt0.c2 IN ()))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN ((rt0.c1) NOT NULL) WHEN (rt0.c3 IN ()) THEN rt0.c2 COLLATE RTRIM WHEN ((((rt0.c4)AND(rt0.c3)))OR('%Jw')) THEN (((rt0.c0))>=((rt0.c4))) WHEN ((rt0.c4)&(NULL)) THEN (rt0.c0 IN (rt0.c4)) WHEN UNICODE(rt0.c4) THEN (~ (0.5500724011792244)) END) ORDER BY (((((((((rt0.c0 IN ()))AND(rt0.c1 COLLATE NOCASE)))OR(((rt0.c2)==(rt0.c2)))))AND(((0.7656104261467341)IS(rt0.c4)))))OR((rt0.c2 IN ())));
SELECT COUNT(*) FROM rt1 WHERE (((((CAST(rt1.c0 AS REAL))OR(NULL)))OR((~ (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt1.c0 AS REAL))OR(NULL)))OR((~ (rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((CAST(rt1.c0 AS REAL))OR(NULL)))OR((~ (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt1.c0 AS REAL))OR(NULL)))OR((~ (rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((CAST(rt1.c0 AS REAL))OR(NULL)))OR((~ (rt1.c2)))));
SELECT * FROM rt0, rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (rt1.c2);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c1, rt1.c1, rt1.c0)) BETWEEN ((rt1.c1, rt1.c2, rt1.c2)) AND ((rt1.c2, rt1.c1, rt1.c0)))) BETWEEN (NULL) AND (((((rt1.c1)AND(rt1.c0)))OR(rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c1, rt1.c1, rt1.c0)) BETWEEN ((rt1.c1, rt1.c2, rt1.c2)) AND ((rt1.c2, rt1.c1, rt1.c0)))) BETWEEN (NULL) AND (((((rt1.c1)AND(rt1.c0)))OR(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c1, rt1.c1, rt1.c0)) BETWEEN ((rt1.c1, rt1.c2, rt1.c2)) AND ((rt1.c2, rt1.c1, rt1.c0)))) BETWEEN (NULL) AND (((((rt1.c1)AND(rt1.c0)))OR(rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c1, rt1.c1, rt1.c0)) BETWEEN ((rt1.c1, rt1.c2, rt1.c2)) AND ((rt1.c2, rt1.c1, rt1.c0)))) BETWEEN (NULL) AND (((((rt1.c1)AND(rt1.c0)))OR(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c1, rt1.c1, rt1.c0)) BETWEEN ((rt1.c1, rt1.c2, rt1.c2)) AND ((rt1.c2, rt1.c1, rt1.c0)))) BETWEEN (NULL) AND (((((rt1.c1)AND(rt1.c0)))OR(rt1.c2)))));
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((((rt0.c1)||('1723190080')))OR(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt0.c2)))))AND(rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)||('1723190080')))OR(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt0.c2)))))AND(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((((rt0.c1)||('1723190080')))OR(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt0.c2)))))AND(rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)||('1723190080')))OR(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt0.c2)))))AND(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((((rt0.c1)||('1723190080')))OR(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt0.c2)))))AND(rt0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((rt1.c2 COLLATE RTRIM)<<((((rt1.c0))>((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((rt1.c2 COLLATE RTRIM)<<((((rt1.c0))>((rt0.c1)))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((rt1.c2 COLLATE RTRIM)<<((((rt1.c0))>((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((rt1.c2 COLLATE RTRIM)<<((((rt1.c0))>((rt0.c1)))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((rt1.c2 COLLATE RTRIM)<<((((rt1.c0))>((rt0.c1))))));
SELECT * FROM rt1, rt0 WHERE ((rt0.c2 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE ((rt0.c2 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE ((rt0.c2 IN ()) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CASE ((rt1.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))  WHEN ((rt0.c4) ISNULL) THEN ((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt0.c4)) END) ORDER BY (rt0.c1 IN (((((((((x'')AND(rt1.c0)))OR(x'')))AND(rt1.c1)))AND(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))  WHEN ((rt0.c4) ISNULL) THEN ((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt0.c4)) END) IS TRUE)  as count FROM rt1, rt0 ORDER BY (rt0.c1 IN (((((((((x'')AND(rt1.c0)))OR(x'')))AND(rt1.c1)))AND(rt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CASE ((rt1.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))  WHEN ((rt0.c4) ISNULL) THEN ((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt0.c4)) END) ORDER BY (rt0.c1 IN (((((((((x'')AND(rt1.c0)))OR(x'')))AND(rt1.c1)))AND(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))  WHEN ((rt0.c4) ISNULL) THEN ((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt0.c4)) END) IS TRUE)  as count FROM rt1, rt0 ORDER BY (rt0.c1 IN (((((((((x'')AND(rt1.c0)))OR(x'')))AND(rt1.c1)))AND(rt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CASE ((rt1.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))  WHEN ((rt0.c4) ISNULL) THEN ((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt0.c4)) END) ORDER BY (rt0.c1 IN (((((((((x'')AND(rt1.c0)))OR(x'')))AND(rt1.c1)))AND(rt0.c0)))) DESC;
SELECT * FROM rt0 WHERE ((((((NOT (rt0.c3)))OR(((((((((rt0.c4)AND(rt0.c2)))OR(rt0.c0)))OR(-1904394605)))AND(rt0.c3)))))OR(json_remove(rt0.c4, rt0.c0)))) ORDER BY (rt0.c3 IN (rt0.c4, rt0.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (rt0.c3)))OR(((((((((rt0.c4)AND(rt0.c2)))OR(rt0.c0)))OR(-1904394605)))AND(rt0.c3)))))OR(json_remove(rt0.c4, rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c3 IN (rt0.c4, rt0.c1)) COLLATE NOCASE);
SELECT * FROM rt0 WHERE ((((((NOT (rt0.c3)))OR(((((((((rt0.c4)AND(rt0.c2)))OR(rt0.c0)))OR(-1904394605)))AND(rt0.c3)))))OR(json_remove(rt0.c4, rt0.c0)))) ORDER BY (rt0.c3 IN (rt0.c4, rt0.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (rt0.c3)))OR(((((((((rt0.c4)AND(rt0.c2)))OR(rt0.c0)))OR(-1904394605)))AND(rt0.c3)))))OR(json_remove(rt0.c4, rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c3 IN (rt0.c4, rt0.c1)) COLLATE NOCASE);
SELECT * FROM rt0 WHERE (0.16955449060519856);
SELECT SUM(count) FROM (SELECT ((0.16955449060519856) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (0.16955449060519856);
SELECT SUM(count) FROM (SELECT ((0.16955449060519856) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (0.16955449060519856);
SELECT ALL * FROM rt1, rt0 WHERE ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)) IN (1.472153919E9)));
SELECT SUM(count) FROM (SELECT (((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)) IN (1.472153919E9))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)) IN (1.472153919E9)));
SELECT SUM(count) FROM (SELECT (((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)) IN (1.472153919E9))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)) IN (1.472153919E9)));
SELECT ALL * FROM rt0, rt1 WHERE ((~ (CAST(rt0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE ((~ (CAST(rt0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE ((~ (CAST(rt0.c2 AS INTEGER))));
SELECT ALL * FROM rt0 WHERE (rt0.c4) ORDER BY CAST(CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE NULL END AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0 ORDER BY CAST(CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE NULL END AS REAL) ASC);
SELECT ALL * FROM rt0 WHERE (rt0.c4) ORDER BY CAST(CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE NULL END AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0 ORDER BY CAST(CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE NULL END AS REAL) ASC);
SELECT ALL * FROM rt0 WHERE (rt0.c4) ORDER BY CAST(CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE NULL END AS REAL) ASC;
SELECT * FROM rt0 WHERE ((NOT (0X30c1931b))) ORDER BY CASE WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c2) IS TRUE) END;
SELECT SUM(count) FROM (SELECT ALL (((NOT (0X30c1931b))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c2) IS TRUE) END);
SELECT * FROM rt0 WHERE ((NOT (0X30c1931b))) ORDER BY CASE WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c2) IS TRUE) END;
SELECT SUM(count) FROM (SELECT ALL (((NOT (0X30c1931b))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c2) IS TRUE) END);
SELECT * FROM rt0 WHERE ((NOT (0X30c1931b))) ORDER BY CASE WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c2) IS TRUE) END;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((NULLIF(rt0.c1, rt0.c2) IN ()));
SELECT SUM(count) FROM (SELECT (((NULLIF(rt0.c1, rt0.c2) IN ())) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((NULLIF(rt0.c1, rt0.c2) IN ()));
SELECT SUM(count) FROM (SELECT (((NULLIF(rt0.c1, rt0.c2) IN ())) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((NULLIF(rt0.c1, rt0.c2) IN ()));
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c2 COLLATE BINARY) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((rt1.c2 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c2 COLLATE BINARY) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((rt1.c2 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c2 COLLATE BINARY) NOTNULL));
SELECT COUNT(*) FROM rt1 WHERE (json_remove((rt1.c2 IN ()), ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((json_remove((rt1.c2 IN ()), ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (json_remove((rt1.c2 IN ()), ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((json_remove((rt1.c2 IN ()), ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt0 WHERE (((((COALESCE(DISTINCT rt0.c2, rt0.c0, rt0.c4, rt0.c4))OR(((rt0.c0) IS TRUE))))AND(((0.4138474315253461)>(rt0.c0))))) ORDER BY (+ (rt0.c0))  NULLS LAST, CASE WHEN (rt0.c4 IN (rt0.c3)) THEN ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c2)) ELSE rt0.c2 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((COALESCE(DISTINCT rt0.c2, rt0.c0, rt0.c4, rt0.c4))OR(((rt0.c0) IS TRUE))))AND(((0.4138474315253461)>(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c0))  NULLS LAST, CASE WHEN (rt0.c4 IN (rt0.c3)) THEN ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c2)) ELSE rt0.c2 END  NULLS LAST);
SELECT * FROM rt0 WHERE (((((COALESCE(DISTINCT rt0.c2, rt0.c0, rt0.c4, rt0.c4))OR(((rt0.c0) IS TRUE))))AND(((0.4138474315253461)>(rt0.c0))))) ORDER BY (+ (rt0.c0))  NULLS LAST, CASE WHEN (rt0.c4 IN (rt0.c3)) THEN ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c2)) ELSE rt0.c2 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((COALESCE(DISTINCT rt0.c2, rt0.c0, rt0.c4, rt0.c4))OR(((rt0.c0) IS TRUE))))AND(((0.4138474315253461)>(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c0))  NULLS LAST, CASE WHEN (rt0.c4 IN (rt0.c3)) THEN ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c2)) ELSE rt0.c2 END  NULLS LAST);
SELECT * FROM rt0 WHERE (((((COALESCE(DISTINCT rt0.c2, rt0.c0, rt0.c4, rt0.c4))OR(((rt0.c0) IS TRUE))))AND(((0.4138474315253461)>(rt0.c0))))) ORDER BY (+ (rt0.c0))  NULLS LAST, CASE WHEN (rt0.c4 IN (rt0.c3)) THEN ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c2)) ELSE rt0.c2 END  NULLS LAST;
SELECT COUNT(*) FROM rt0 INNER JOIN rt1 ON CAST(rt0.c4 AS BLOB) WHERE (((((rt1.c2)LIKE(rt1.c1))) NOTNULL)) ORDER BY (((rt0.c1 COLLATE NOCASE))<>((rt0.c4 COLLATE RTRIM))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)LIKE(rt1.c1))) NOTNULL)) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON CAST(rt0.c4 AS BLOB) ORDER BY (((rt0.c1 COLLATE NOCASE))<>((rt0.c4 COLLATE RTRIM))) ASC);
SELECT COUNT(*) FROM rt0 INNER JOIN rt1 ON CAST(rt0.c4 AS BLOB) WHERE (((((rt1.c2)LIKE(rt1.c1))) NOTNULL)) ORDER BY (((rt0.c1 COLLATE NOCASE))<>((rt0.c4 COLLATE RTRIM))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)LIKE(rt1.c1))) NOTNULL)) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON CAST(rt0.c4 AS BLOB) ORDER BY (((rt0.c1 COLLATE NOCASE))<>((rt0.c4 COLLATE RTRIM))) ASC);
SELECT COUNT(*) FROM rt0 INNER JOIN rt1 ON CAST(rt0.c4 AS BLOB) WHERE (((((rt1.c2)LIKE(rt1.c1))) NOTNULL)) ORDER BY (((rt0.c1 COLLATE NOCASE))<>((rt0.c4 COLLATE RTRIM))) ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 END COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 END COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 END COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((rt1.c1)-(x'5d83'))) NOT BETWEEN ((NOT (rt0.c3))) AND ((+ (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)-(x'5d83'))) NOT BETWEEN ((NOT (rt0.c3))) AND ((+ (rt1.c2))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((rt1.c1)-(x'5d83'))) NOT BETWEEN ((NOT (rt0.c3))) AND ((+ (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)-(x'5d83'))) NOT BETWEEN ((NOT (rt0.c3))) AND ((+ (rt1.c2))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((rt1.c1)-(x'5d83'))) NOT BETWEEN ((NOT (rt0.c3))) AND ((+ (rt1.c2)))));
SELECT * FROM rt0, rt1 WHERE ('1440482346') ORDER BY (rt0.c1 COLLATE NOCASE IN (0.20343224878069022))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('1440482346') IS TRUE)  as count FROM rt0, rt1 ORDER BY (rt0.c1 COLLATE NOCASE IN (0.20343224878069022))  NULLS LAST);
SELECT * FROM rt0, rt1 WHERE ('1440482346') ORDER BY (rt0.c1 COLLATE NOCASE IN (0.20343224878069022))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('1440482346') IS TRUE)  as count FROM rt0, rt1 ORDER BY (rt0.c1 COLLATE NOCASE IN (0.20343224878069022))  NULLS LAST);
SELECT * FROM rt0, rt1 WHERE ('1440482346') ORDER BY (rt0.c1 COLLATE NOCASE IN (0.20343224878069022))  NULLS LAST;
SELECT COUNT(*) FROM rt0, rt1 WHERE (CASE CAST(rt1.c2 AS INTEGER)  WHEN ((rt0.c1)<>(rt0.c0)) THEN rt1.c1 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt1.c2 AS INTEGER)  WHEN ((rt0.c1)<>(rt0.c0)) THEN rt1.c1 COLLATE NOCASE END) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CASE CAST(rt1.c2 AS INTEGER)  WHEN ((rt0.c1)<>(rt0.c0)) THEN rt1.c1 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt1.c2 AS INTEGER)  WHEN ((rt0.c1)<>(rt0.c0)) THEN rt1.c1 COLLATE NOCASE END) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CASE CAST(rt1.c2 AS INTEGER)  WHEN ((rt0.c1)<>(rt0.c0)) THEN rt1.c1 COLLATE NOCASE END);
SELECT COUNT(*) FROM rt1 WHERE (((load_extension(rt1.c1, rt1.c2)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((load_extension(rt1.c1, rt1.c2)) IS TRUE)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((load_extension(rt1.c1, rt1.c2)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((load_extension(rt1.c1, rt1.c2)) IS TRUE)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt0 WHERE (CASE LOWER(DISTINCT rt0.c4)  WHEN RTRIM(rt0.c2) THEN (- (rt0.c1)) END) ORDER BY ((rt0.c3)GLOB(CASE -1939794475  WHEN rt0.c0 THEN rt0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((CASE LOWER(DISTINCT rt0.c4)  WHEN RTRIM(rt0.c2) THEN (- (rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c3)GLOB(CASE -1939794475  WHEN rt0.c0 THEN rt0.c2 END)));
SELECT * FROM rt0 WHERE (CASE LOWER(DISTINCT rt0.c4)  WHEN RTRIM(rt0.c2) THEN (- (rt0.c1)) END) ORDER BY ((rt0.c3)GLOB(CASE -1939794475  WHEN rt0.c0 THEN rt0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((CASE LOWER(DISTINCT rt0.c4)  WHEN RTRIM(rt0.c2) THEN (- (rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c3)GLOB(CASE -1939794475  WHEN rt0.c0 THEN rt0.c2 END)));
SELECT * FROM rt0 WHERE (CASE LOWER(DISTINCT rt0.c4)  WHEN RTRIM(rt0.c2) THEN (- (rt0.c1)) END) ORDER BY ((rt0.c3)GLOB(CASE -1939794475  WHEN rt0.c0 THEN rt0.c2 END));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON CAST((- (rt0.c0)) AS INTEGER) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON CAST((- (rt0.c0)) AS INTEGER));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON CAST((- (rt0.c0)) AS INTEGER) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON CAST((- (rt0.c0)) AS INTEGER));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON CAST((- (rt0.c0)) AS INTEGER) WHERE (rt0.c2);
SELECT COUNT(*) FROM rt0 WHERE ((- ((NULL IN (rt0.c3))))) ORDER BY json_extract('708024543', CAST(rt0.c0 AS TEXT), CAST(rt0.c1 AS TEXT), NULL COLLATE NOCASE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((NULL IN (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY json_extract('708024543', CAST(rt0.c0 AS TEXT), CAST(rt0.c1 AS TEXT), NULL COLLATE NOCASE) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((- ((NULL IN (rt0.c3))))) ORDER BY json_extract('708024543', CAST(rt0.c0 AS TEXT), CAST(rt0.c1 AS TEXT), NULL COLLATE NOCASE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((NULL IN (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY json_extract('708024543', CAST(rt0.c0 AS TEXT), CAST(rt0.c1 AS TEXT), NULL COLLATE NOCASE) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0)+(rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt1.c0)+(rt1.c1)) IN ())) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0)+(rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt1.c0)+(rt1.c1)) IN ())) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0)+(rt1.c1)) IN ()));
SELECT ALL * FROM rt0 WHERE (((json_quote(rt0.c3)) NOT BETWEEN (NULLIF(DISTINCT rt0.c0, rt0.c1)) AND (x'1bba'))) ORDER BY ((((rt0.c0)GLOB(rt0.c0))) NOT BETWEEN (((rt0.c1) NOT NULL)) AND ((rt0.c4 IN (rt0.c3, rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((json_quote(rt0.c3)) NOT BETWEEN (NULLIF(DISTINCT rt0.c0, rt0.c1)) AND (x'1bba'))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)GLOB(rt0.c0))) NOT BETWEEN (((rt0.c1) NOT NULL)) AND ((rt0.c4 IN (rt0.c3, rt0.c1)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((json_quote(rt0.c3)) NOT BETWEEN (NULLIF(DISTINCT rt0.c0, rt0.c1)) AND (x'1bba'))) ORDER BY ((((rt0.c0)GLOB(rt0.c0))) NOT BETWEEN (((rt0.c1) NOT NULL)) AND ((rt0.c4 IN (rt0.c3, rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((json_quote(rt0.c3)) NOT BETWEEN (NULLIF(DISTINCT rt0.c0, rt0.c1)) AND (x'1bba'))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)GLOB(rt0.c0))) NOT BETWEEN (((rt0.c1) NOT NULL)) AND ((rt0.c4 IN (rt0.c3, rt0.c1)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((json_quote(rt0.c3)) NOT BETWEEN (NULLIF(DISTINCT rt0.c0, rt0.c1)) AND (x'1bba'))) ORDER BY ((((rt0.c0)GLOB(rt0.c0))) NOT BETWEEN (((rt0.c1) NOT NULL)) AND ((rt0.c4 IN (rt0.c3, rt0.c1)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((((- (rt0.c2)))OR(rt0.c4 COLLATE BINARY)))AND(CAST(rt1.c2 AS INTEGER)))) ORDER BY highlight((- (rt0.c0)), ((rt1.c0)&(rt0.c3)), CASE WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c0 END, 0.9941402588301878)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((- (rt0.c2)))OR(rt0.c4 COLLATE BINARY)))AND(CAST(rt1.c2 AS INTEGER)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY highlight((- (rt0.c0)), ((rt1.c0)&(rt0.c3)), CASE WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c0 END, 0.9941402588301878)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((((- (rt0.c2)))OR(rt0.c4 COLLATE BINARY)))AND(CAST(rt1.c2 AS INTEGER)))) ORDER BY highlight((- (rt0.c0)), ((rt1.c0)&(rt0.c3)), CASE WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c0 END, 0.9941402588301878)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((- (rt0.c2)))OR(rt0.c4 COLLATE BINARY)))AND(CAST(rt1.c2 AS INTEGER)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY highlight((- (rt0.c0)), ((rt1.c0)&(rt0.c3)), CASE WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c0 END, 0.9941402588301878)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY (- (0x31364645))  NULLS LAST, x'2e7d' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY (- (0x31364645))  NULLS LAST, x'2e7d' ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY (- (0x31364645))  NULLS LAST, x'2e7d' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY (- (0x31364645))  NULLS LAST, x'2e7d' ASC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((rt1.c0 COLLATE RTRIM) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c0 COLLATE RTRIM) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c0 COLLATE RTRIM) IS TRUE));
SELECT ALL * FROM rt1, rt0 WHERE (CASE CASE rt0.c1  WHEN NULL THEN rt0.c3 END  WHEN rt0.c4 THEN ((((rt1.c2)AND(rt0.c2)))OR(rt1.c1)) WHEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND ('')) THEN rt0.c3 WHEN HEX(rt0.c4) THEN NULL ELSE '-484739612' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt0.c1  WHEN NULL THEN rt0.c3 END  WHEN rt0.c4 THEN ((((rt1.c2)AND(rt0.c2)))OR(rt1.c1)) WHEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND ('')) THEN rt0.c3 WHEN HEX(rt0.c4) THEN NULL ELSE '-484739612' END) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (CASE CASE rt0.c1  WHEN NULL THEN rt0.c3 END  WHEN rt0.c4 THEN ((((rt1.c2)AND(rt0.c2)))OR(rt1.c1)) WHEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND ('')) THEN rt0.c3 WHEN HEX(rt0.c4) THEN NULL ELSE '-484739612' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt0.c1  WHEN NULL THEN rt0.c3 END  WHEN rt0.c4 THEN ((((rt1.c2)AND(rt0.c2)))OR(rt1.c1)) WHEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND ('')) THEN rt0.c3 WHEN HEX(rt0.c4) THEN NULL ELSE '-484739612' END) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (CASE CASE rt0.c1  WHEN NULL THEN rt0.c3 END  WHEN rt0.c4 THEN ((((rt1.c2)AND(rt0.c2)))OR(rt1.c1)) WHEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND ('')) THEN rt0.c3 WHEN HEX(rt0.c4) THEN NULL ELSE '-484739612' END);
SELECT ALL * FROM rt0, rt1 WHERE ((('')||((rt0.c4 IN (rt0.c1))))) ORDER BY ((((rt1.c1))>=((rt0.c2))) IN ()), CAST(x'' AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('')||((rt0.c4 IN (rt0.c1))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt1.c1))>=((rt0.c2))) IN ()), CAST(x'' AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 WHERE ((('')||((rt0.c4 IN (rt0.c1))))) ORDER BY ((((rt1.c1))>=((rt0.c2))) IN ()), CAST(x'' AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('')||((rt0.c4 IN (rt0.c1))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt1.c1))>=((rt0.c2))) IN ()), CAST(x'' AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 WHERE ((('')||((rt0.c4 IN (rt0.c1))))) ORDER BY ((((rt1.c1))>=((rt0.c2))) IN ()), CAST(x'' AS INTEGER)  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (((CASE 0.7178585763740071  WHEN rt1.c2 THEN rt1.c0 END)*(x'27a4'))) ORDER BY CAST(rt1.c1 COLLATE RTRIM AS REAL) DESC, rt1.c2;
SELECT SUM(count) FROM (SELECT ((((CASE 0.7178585763740071  WHEN rt1.c2 THEN rt1.c0 END)*(x'27a4'))) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c1 COLLATE RTRIM AS REAL) DESC, rt1.c2);
SELECT ALL * FROM rt1 WHERE (((CASE 0.7178585763740071  WHEN rt1.c2 THEN rt1.c0 END)*(x'27a4'))) ORDER BY CAST(rt1.c1 COLLATE RTRIM AS REAL) DESC, rt1.c2;
SELECT SUM(count) FROM (SELECT ((((CASE 0.7178585763740071  WHEN rt1.c2 THEN rt1.c0 END)*(x'27a4'))) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c1 COLLATE RTRIM AS REAL) DESC, rt1.c2);
SELECT ALL * FROM rt1 WHERE (((CASE 0.7178585763740071  WHEN rt1.c2 THEN rt1.c0 END)*(x'27a4'))) ORDER BY CAST(rt1.c1 COLLATE RTRIM AS REAL) DESC, rt1.c2;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c1)+(rt0.c2)) THEN CAST(0.5311013418021832 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)+(rt0.c2)) THEN CAST(0.5311013418021832 AS TEXT) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c1)+(rt0.c2)) THEN CAST(0.5311013418021832 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)+(rt0.c2)) THEN CAST(0.5311013418021832 AS TEXT) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c1)+(rt0.c2)) THEN CAST(0.5311013418021832 AS TEXT) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c3 AS INTEGER)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c3 AS INTEGER)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c3 AS INTEGER)) IS FALSE));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((CASE rt0.c0  WHEN x'' THEN rt0.c2 ELSE rt1.c2 END, ((((rt1.c2)AND(rt0.c3)))AND(rt0.c1)), TRIM(rt1.c2, rt0.c3)))<=((((NULL) IS TRUE), (rt1.c0 IN ()), rt1.c2 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE rt0.c0  WHEN x'' THEN rt0.c2 ELSE rt1.c2 END, ((((rt1.c2)AND(rt0.c3)))AND(rt0.c1)), TRIM(rt1.c2, rt0.c3)))<=((((NULL) IS TRUE), (rt1.c0 IN ()), rt1.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((CASE rt0.c0  WHEN x'' THEN rt0.c2 ELSE rt1.c2 END, ((((rt1.c2)AND(rt0.c3)))AND(rt0.c1)), TRIM(rt1.c2, rt0.c3)))<=((((NULL) IS TRUE), (rt1.c0 IN ()), rt1.c2 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE rt0.c0  WHEN x'' THEN rt0.c2 ELSE rt1.c2 END, ((((rt1.c2)AND(rt0.c3)))AND(rt0.c1)), TRIM(rt1.c2, rt0.c3)))<=((((NULL) IS TRUE), (rt1.c0 IN ()), rt1.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((CASE rt0.c0  WHEN x'' THEN rt0.c2 ELSE rt1.c2 END, ((((rt1.c2)AND(rt0.c3)))AND(rt0.c1)), TRIM(rt1.c2, rt0.c3)))<=((((NULL) IS TRUE), (rt1.c0 IN ()), rt1.c2 COLLATE NOCASE))));
SELECT * FROM rt1 WHERE (NULL) ORDER BY ((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c1 END) BETWEEN (((rt1.c1) NOTNULL)) AND ((rt1.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1 ORDER BY ((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c1 END) BETWEEN (((rt1.c1) NOTNULL)) AND ((rt1.c0 IN ()))) DESC);
SELECT * FROM rt1 WHERE (NULL) ORDER BY ((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c1 END) BETWEEN (((rt1.c1) NOTNULL)) AND ((rt1.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1 ORDER BY ((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c1 END) BETWEEN (((rt1.c1) NOTNULL)) AND ((rt1.c0 IN ()))) DESC);
SELECT * FROM rt1 WHERE (NULL) ORDER BY ((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c1 END) BETWEEN (((rt1.c1) NOTNULL)) AND ((rt1.c0 IN ()))) DESC;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2))>((x'a574')))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))>((x'a574')))) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2))>((x'a574')))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))>((x'a574')))) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2))>((x'a574')))) NOTNULL));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE BINARY)-(((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY)-(((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE BINARY)-(((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY)-(((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE BINARY)-(((rt0.c2) ISNULL))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((x'')OR(((rt1.c1)*(rt0.c3)))))OR(((((rt0.c1)OR(rt0.c1)))OR(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')OR(((rt1.c1)*(rt0.c3)))))OR(((((rt0.c1)OR(rt0.c1)))OR(rt1.c1))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((x'')OR(((rt1.c1)*(rt0.c3)))))OR(((((rt0.c1)OR(rt0.c1)))OR(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')OR(((rt1.c1)*(rt0.c3)))))OR(((((rt0.c1)OR(rt0.c1)))OR(rt1.c1))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((x'')OR(((rt1.c1)*(rt0.c3)))))OR(((((rt0.c1)OR(rt0.c1)))OR(rt1.c1)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST((rt1.c2 IN ()) AS REAL)) ORDER BY CAST(NULLIF(rt1.c1, rt1.c0) AS BLOB);
SELECT SUM(count) FROM (SELECT ((CAST((rt1.c2 IN ()) AS REAL)) IS TRUE)  as count FROM rt1 ORDER BY CAST(NULLIF(rt1.c1, rt1.c0) AS BLOB));
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST((rt1.c2 IN ()) AS REAL)) ORDER BY CAST(NULLIF(rt1.c1, rt1.c0) AS BLOB);
SELECT SUM(count) FROM (SELECT ((CAST((rt1.c2 IN ()) AS REAL)) IS TRUE)  as count FROM rt1 ORDER BY CAST(NULLIF(rt1.c1, rt1.c0) AS BLOB));
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST((rt1.c2 IN ()) AS REAL)) ORDER BY CAST(NULLIF(rt1.c1, rt1.c0) AS BLOB);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((((rt0.c0)OR(rt0.c3)))OR(rt0.c0)) THEN (rt0.c1 IN ()) WHEN (((rt0.c0)) BETWEEN (('-937439564')) AND ((rt0.c4))) THEN CAST(rt0.c2 AS NUMERIC) WHEN 'M V#帇㲑' THEN (rt0.c4 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt0.c0)OR(rt0.c3)))OR(rt0.c0)) THEN (rt0.c1 IN ()) WHEN (((rt0.c0)) BETWEEN (('-937439564')) AND ((rt0.c4))) THEN CAST(rt0.c2 AS NUMERIC) WHEN 'M V#帇㲑' THEN (rt0.c4 IN ()) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((((rt0.c0)OR(rt0.c3)))OR(rt0.c0)) THEN (rt0.c1 IN ()) WHEN (((rt0.c0)) BETWEEN (('-937439564')) AND ((rt0.c4))) THEN CAST(rt0.c2 AS NUMERIC) WHEN 'M V#帇㲑' THEN (rt0.c4 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt0.c0)OR(rt0.c3)))OR(rt0.c0)) THEN (rt0.c1 IN ()) WHEN (((rt0.c0)) BETWEEN (('-937439564')) AND ((rt0.c4))) THEN CAST(rt0.c2 AS NUMERIC) WHEN 'M V#帇㲑' THEN (rt0.c4 IN ()) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((((rt0.c0)OR(rt0.c3)))OR(rt0.c0)) THEN (rt0.c1 IN ()) WHEN (((rt0.c0)) BETWEEN (('-937439564')) AND ((rt0.c4))) THEN CAST(rt0.c2 AS NUMERIC) WHEN 'M V#帇㲑' THEN (rt0.c4 IN ()) END);
SELECT ALL * FROM rt0 INNER JOIN rt1 ON (((((x'b93e')) NOT BETWEEN ((rt1.c1)) AND ((rt0.c3))))>(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c4 END)) WHERE (((rt0.c4)IS((+ (rt1.c2))))) ORDER BY CASE WHEN CAST(rt0.c4 AS NUMERIC) THEN rt1.c1 COLLATE NOCASE WHEN NULL THEN (rt1.c2 IN ()) WHEN CASE WHEN rt0.c0 THEN rt1.c1 ELSE rt0.c1 END THEN NULL ELSE 0.17327339415596021 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4)IS((+ (rt1.c2))))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON (((((x'b93e')) NOT BETWEEN ((rt1.c1)) AND ((rt0.c3))))>(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c4 END)) ORDER BY CASE WHEN CAST(rt0.c4 AS NUMERIC) THEN rt1.c1 COLLATE NOCASE WHEN NULL THEN (rt1.c2 IN ()) WHEN CASE WHEN rt0.c0 THEN rt1.c1 ELSE rt0.c1 END THEN NULL ELSE 0.17327339415596021 END DESC);
SELECT ALL * FROM rt0 INNER JOIN rt1 ON (((((x'b93e')) NOT BETWEEN ((rt1.c1)) AND ((rt0.c3))))>(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c4 END)) WHERE (((rt0.c4)IS((+ (rt1.c2))))) ORDER BY CASE WHEN CAST(rt0.c4 AS NUMERIC) THEN rt1.c1 COLLATE NOCASE WHEN NULL THEN (rt1.c2 IN ()) WHEN CASE WHEN rt0.c0 THEN rt1.c1 ELSE rt0.c1 END THEN NULL ELSE 0.17327339415596021 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4)IS((+ (rt1.c2))))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON (((((x'b93e')) NOT BETWEEN ((rt1.c1)) AND ((rt0.c3))))>(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c4 END)) ORDER BY CASE WHEN CAST(rt0.c4 AS NUMERIC) THEN rt1.c1 COLLATE NOCASE WHEN NULL THEN (rt1.c2 IN ()) WHEN CASE WHEN rt0.c0 THEN rt1.c1 ELSE rt0.c1 END THEN NULL ELSE 0.17327339415596021 END DESC);
SELECT ALL * FROM rt0 INNER JOIN rt1 ON (((((x'b93e')) NOT BETWEEN ((rt1.c1)) AND ((rt0.c3))))>(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c4 END)) WHERE (((rt0.c4)IS((+ (rt1.c2))))) ORDER BY CASE WHEN CAST(rt0.c4 AS NUMERIC) THEN rt1.c1 COLLATE NOCASE WHEN NULL THEN (rt1.c2 IN ()) WHEN CASE WHEN rt0.c0 THEN rt1.c1 ELSE rt0.c1 END THEN NULL ELSE 0.17327339415596021 END DESC;
SELECT * FROM rt1 WHERE (((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN NULL ELSE rt1.c1 END) NOT BETWEEN (NULLIF(DISTINCT rt1.c1, rt1.c0)) AND (((rt1.c2)LIKE(rt1.c0))))) ORDER BY (((rt1.c0 IN (rt1.c1))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN NULL ELSE rt1.c1 END) NOT BETWEEN (NULLIF(DISTINCT rt1.c1, rt1.c0)) AND (((rt1.c2)LIKE(rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0 IN (rt1.c1))) NOT NULL));
SELECT * FROM rt1 WHERE (((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN NULL ELSE rt1.c1 END) NOT BETWEEN (NULLIF(DISTINCT rt1.c1, rt1.c0)) AND (((rt1.c2)LIKE(rt1.c0))))) ORDER BY (((rt1.c0 IN (rt1.c1))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN NULL ELSE rt1.c1 END) NOT BETWEEN (NULLIF(DISTINCT rt1.c1, rt1.c0)) AND (((rt1.c2)LIKE(rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0 IN (rt1.c1))) NOT NULL));
SELECT * FROM rt1 WHERE (((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN NULL ELSE rt1.c1 END) NOT BETWEEN (NULLIF(DISTINCT rt1.c1, rt1.c0)) AND (((rt1.c2)LIKE(rt1.c0))))) ORDER BY (((rt1.c0 IN (rt1.c1))) NOT NULL);
SELECT * FROM rt1, rt0 WHERE (1373252731) ORDER BY CAST(CAST(rt1.c2 AS INTEGER) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((1373252731) IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST(CAST(rt1.c2 AS INTEGER) AS REAL)  NULLS LAST);
SELECT * FROM rt1, rt0 WHERE (1373252731) ORDER BY CAST(CAST(rt1.c2 AS INTEGER) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((1373252731) IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST(CAST(rt1.c2 AS INTEGER) AS REAL)  NULLS LAST);
SELECT * FROM rt1, rt0 WHERE (1373252731) ORDER BY CAST(CAST(rt1.c2 AS INTEGER) AS REAL)  NULLS LAST;
SELECT * FROM rt1, rt0 WHERE (CASE WHEN ((((((((rt1.c2)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)) THEN CASE WHEN x'' THEN rt0.c2 END ELSE (- (rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((rt1.c2)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)) THEN CASE WHEN x'' THEN rt0.c2 END ELSE (- (rt0.c3)) END) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (CASE WHEN ((((((((rt1.c2)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)) THEN CASE WHEN x'' THEN rt0.c2 END ELSE (- (rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((rt1.c2)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)) THEN CASE WHEN x'' THEN rt0.c2 END ELSE (- (rt0.c3)) END) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (CASE WHEN ((((((((rt1.c2)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)) THEN CASE WHEN x'' THEN rt0.c2 END ELSE (- (rt0.c3)) END);
SELECT COUNT(*) FROM rt0 WHERE ((((('5269202' COLLATE NOCASE)AND(rt0.c3 COLLATE BINARY)))OR((- (rt0.c4))))) ORDER BY (((rt0.c1)) BETWEEN (((rt0.c2 IN ()))) AND ((CAST(rt0.c3 AS TEXT)))) ASC  NULLS LAST, UNLIKELY((~ (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((('5269202' COLLATE NOCASE)AND(rt0.c3 COLLATE BINARY)))OR((- (rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) BETWEEN (((rt0.c2 IN ()))) AND ((CAST(rt0.c3 AS TEXT)))) ASC  NULLS LAST, UNLIKELY((~ (rt0.c2))));
SELECT COUNT(*) FROM rt0 WHERE ((((('5269202' COLLATE NOCASE)AND(rt0.c3 COLLATE BINARY)))OR((- (rt0.c4))))) ORDER BY (((rt0.c1)) BETWEEN (((rt0.c2 IN ()))) AND ((CAST(rt0.c3 AS TEXT)))) ASC  NULLS LAST, UNLIKELY((~ (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((('5269202' COLLATE NOCASE)AND(rt0.c3 COLLATE BINARY)))OR((- (rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) BETWEEN (((rt0.c2 IN ()))) AND ((CAST(rt0.c3 AS TEXT)))) ASC  NULLS LAST, UNLIKELY((~ (rt0.c2))));
SELECT COUNT(*) FROM rt0 WHERE ((((('5269202' COLLATE NOCASE)AND(rt0.c3 COLLATE BINARY)))OR((- (rt0.c4))))) ORDER BY (((rt0.c1)) BETWEEN (((rt0.c2 IN ()))) AND ((CAST(rt0.c3 AS TEXT)))) ASC  NULLS LAST, UNLIKELY((~ (rt0.c2)));
SELECT * FROM rt1 WHERE (CAST(CAST(rt1.c2 AS NUMERIC) AS TEXT)) ORDER BY (('W29hx~84') NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c2 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM rt1 ORDER BY (('W29hx~84') NOTNULL) DESC  NULLS FIRST);
SELECT * FROM rt1 WHERE (CAST(CAST(rt1.c2 AS NUMERIC) AS TEXT)) ORDER BY (('W29hx~84') NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c2 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM rt1 ORDER BY (('W29hx~84') NOTNULL) DESC  NULLS FIRST);
SELECT * FROM rt1 WHERE (CAST(CAST(rt1.c2 AS NUMERIC) AS TEXT)) ORDER BY (('W29hx~84') NOTNULL) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, rt1 WHERE ((+ (0.0746512107311118))) ORDER BY ((CAST(rt1.c0 AS NUMERIC))!=(CAST(rt0.c0 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (0.0746512107311118))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((CAST(rt1.c0 AS NUMERIC))<>(CAST(rt0.c0 AS BLOB)))  NULLS LAST);
SELECT ALL * FROM rt0, rt1 WHERE ((+ (0.0746512107311118))) ORDER BY ((CAST(rt1.c0 AS NUMERIC))!=(CAST(rt0.c0 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (0.0746512107311118))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((CAST(rt1.c0 AS NUMERIC))<>(CAST(rt0.c0 AS BLOB)))  NULLS LAST);
SELECT ALL * FROM rt0, rt1 WHERE ((+ (0.0746512107311118))) ORDER BY ((CAST(rt1.c0 AS NUMERIC))!=(CAST(rt0.c0 AS BLOB)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((LTRIM(rt0.c4)) IS FALSE)) ORDER BY ((((((rt1.c2)OR(rt0.c2)))AND(rt1.c1))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((LTRIM(rt0.c4)) IS FALSE)) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((((rt1.c2)OR(rt0.c2)))AND(rt1.c1))) IS TRUE) ASC);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((LTRIM(rt0.c4)) IS FALSE)) ORDER BY ((((((rt1.c2)OR(rt0.c2)))AND(rt1.c1))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((LTRIM(rt0.c4)) IS FALSE)) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((((rt1.c2)OR(rt0.c2)))AND(rt1.c1))) IS TRUE) ASC);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((LTRIM(rt0.c4)) IS FALSE)) ORDER BY ((((((rt1.c2)OR(rt0.c2)))AND(rt1.c1))) IS TRUE) ASC;
SELECT COUNT(*) FROM rt0 WHERE ((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 END IN ())) ORDER BY rt0.c4;
SELECT SUM(count) FROM (SELECT (((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 END IN ())) IS TRUE)  as count FROM rt0 ORDER BY rt0.c4);
SELECT COUNT(*) FROM rt0 WHERE ((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 END IN ())) ORDER BY rt0.c4;
SELECT SUM(count) FROM (SELECT (((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 END IN ())) IS TRUE)  as count FROM rt0 ORDER BY rt0.c4);
SELECT COUNT(*) FROM rt0 WHERE ((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 END IN ())) ORDER BY rt0.c4;
SELECT ALL * FROM rt1, rt0 WHERE ((((~ ('b_')))==((NOT (rt1.c1))))) ORDER BY SQLITE_SOURCE_ID()  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ ('b_')))==((NOT (rt1.c1))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY SQLITE_SOURCE_ID()  NULLS LAST);
SELECT ALL * FROM rt1, rt0 WHERE ((((~ ('b_')))==((NOT (rt1.c1))))) ORDER BY SQLITE_SOURCE_ID()  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ ('b_')))==((NOT (rt1.c1))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY SQLITE_SOURCE_ID()  NULLS LAST);
SELECT ALL * FROM rt1, rt0 WHERE ((((~ ('b_')))==((NOT (rt1.c1))))) ORDER BY SQLITE_SOURCE_ID()  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((~ ((+ (rt0.c3))))) ORDER BY ((((((rt0.c3)AND(rt0.c0)))OR(-7.09624166E8)))!=(((rt1.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (rt0.c3))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((((rt0.c3)AND(rt0.c0)))OR(-7.09624166E8)))<>(((rt1.c1) NOTNULL))));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((~ ((+ (rt0.c3))))) ORDER BY ((((((rt0.c3)AND(rt0.c0)))OR(-7.09624166E8)))!=(((rt1.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (rt0.c3))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((((rt0.c3)AND(rt0.c0)))OR(-7.09624166E8)))<>(((rt1.c1) NOTNULL))));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((~ ((+ (rt0.c3))))) ORDER BY ((((((rt0.c3)AND(rt0.c0)))OR(-7.09624166E8)))!=(((rt1.c1) NOTNULL)));
SELECT COUNT(*) FROM rt0 WHERE (NULLIF((((rt0.c1))==((rt0.c2))), ((((rt0.c1)AND(rt0.c2)))AND(rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((((rt0.c1))==((rt0.c2))), ((((rt0.c1)AND(rt0.c2)))AND(rt0.c4)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULLIF((((rt0.c1))==((rt0.c2))), ((((rt0.c1)AND(rt0.c2)))AND(rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((((rt0.c1))==((rt0.c2))), ((((rt0.c1)AND(rt0.c2)))AND(rt0.c4)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULLIF((((rt0.c1))==((rt0.c2))), ((((rt0.c1)AND(rt0.c2)))AND(rt0.c4))));
SELECT COUNT(*) FROM rt1 WHERE (CAST(rt1.c0 AS BLOB) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c0 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CAST(rt1.c0 AS BLOB) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c0 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CAST(rt1.c0 AS BLOB) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((~ (((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0))))) ORDER BY ((rt0.c1) NOT NULL) COLLATE NOCASE COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt0.c1) NOT NULL) COLLATE NOCASE COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((~ (((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0))))) ORDER BY ((rt0.c1) NOT NULL) COLLATE NOCASE COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt0.c1) NOT NULL) COLLATE NOCASE COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((~ (((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0))))) ORDER BY ((rt0.c1) NOT NULL) COLLATE NOCASE COLLATE BINARY;
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON ((((rt1.c2)<(x''))) ISNULL) WHERE (json_patch((((rt0.c0))<=((rt0.c4))), CAST(rt0.c3 AS REAL)));
SELECT SUM(count) FROM (SELECT ((json_patch((((rt0.c0))<=((rt0.c4))), CAST(rt0.c3 AS REAL))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON ((((rt1.c2)<(x''))) ISNULL));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON ((((rt1.c2)<(x''))) ISNULL) WHERE (json_patch((((rt0.c0))<=((rt0.c4))), CAST(rt0.c3 AS REAL)));
SELECT SUM(count) FROM (SELECT ((json_patch((((rt0.c0))<=((rt0.c4))), CAST(rt0.c3 AS REAL))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON ((((rt1.c2)<(x''))) ISNULL));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON ((((rt1.c2)<(x''))) ISNULL) WHERE (json_patch((((rt0.c0))<=((rt0.c4))), CAST(rt0.c3 AS REAL)));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c4) NOT NULL)) BETWEEN (CAST(rt0.c3 AS NUMERIC)) AND (HEX(rt0.c4)))) ORDER BY ((rt0.c4)OR(rt0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) NOT NULL)) BETWEEN (CAST(rt0.c3 AS NUMERIC)) AND (HEX(rt0.c4)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c4)OR(rt0.c0)) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c4) NOT NULL)) BETWEEN (CAST(rt0.c3 AS NUMERIC)) AND (HEX(rt0.c4)))) ORDER BY ((rt0.c4)OR(rt0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) NOT NULL)) BETWEEN (CAST(rt0.c3 AS NUMERIC)) AND (HEX(rt0.c4)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c4)OR(rt0.c0)) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c4) NOT NULL)) BETWEEN (CAST(rt0.c3 AS NUMERIC)) AND (HEX(rt0.c4)))) ORDER BY ((rt0.c4)OR(rt0.c0)) COLLATE RTRIM ASC;
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((((((rt0.c1)AND(rt0.c2)))OR(CASE WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c4 THEN rt0.c1 WHEN 0.3496760552253565 THEN rt0.c4 ELSE rt0.c0 END)))AND(((rt0.c1)<=(NULL)))))AND((+ (rt0.c0))))) ORDER BY ((rt0.c2)IS NOT(x'0355')) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c1)AND(rt0.c2)))OR(CASE WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c4 THEN rt0.c1 WHEN 0.3496760552253565 THEN rt0.c4 ELSE rt0.c0 END)))AND(((rt0.c1)<=(NULL)))))AND((+ (rt0.c0))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt0.c2)IS NOT(x'0355')) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((((((rt0.c1)AND(rt0.c2)))OR(CASE WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c4 THEN rt0.c1 WHEN 0.3496760552253565 THEN rt0.c4 ELSE rt0.c0 END)))AND(((rt0.c1)<=(NULL)))))AND((+ (rt0.c0))))) ORDER BY ((rt0.c2)IS NOT(x'0355')) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c1)AND(rt0.c2)))OR(CASE WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c4 THEN rt0.c1 WHEN 0.3496760552253565 THEN rt0.c4 ELSE rt0.c0 END)))AND(((rt0.c1)<=(NULL)))))AND((+ (rt0.c0))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt0.c2)IS NOT(x'0355')) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((((((rt0.c1)AND(rt0.c2)))OR(CASE WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c4 THEN rt0.c1 WHEN 0.3496760552253565 THEN rt0.c4 ELSE rt0.c0 END)))AND(((rt0.c1)<=(NULL)))))AND((+ (rt0.c0))))) ORDER BY ((rt0.c2)IS NOT(x'0355')) COLLATE RTRIM;
SELECT * FROM rt1, rt0 WHERE (CASE WHEN (+ (rt1.c2)) THEN CASE rt1.c0  WHEN rt1.c2 THEN NULL END WHEN load_extension(rt0.c0, rt1.c1) THEN ((rt0.c0)>=(rt1.c2)) WHEN (+ (rt1.c1)) THEN CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 END WHEN (((0.939312101059092))>=(('-77117511'))) THEN x'' WHEN json_insert(rt1.c2, rt0.c0, rt0.c2) THEN CASE rt0.c3  WHEN rt1.c2 THEN rt0.c1 WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c3 THEN rt0.c1 ELSE rt1.c0 END ELSE TRIM(DISTINCT rt1.c1, rt1.c2) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (rt1.c2)) THEN CASE rt1.c0  WHEN rt1.c2 THEN NULL END WHEN load_extension(rt0.c0, rt1.c1) THEN ((rt0.c0)>=(rt1.c2)) WHEN (+ (rt1.c1)) THEN CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 END WHEN (((0.939312101059092))>=(('-77117511'))) THEN x'' WHEN json_insert(rt1.c2, rt0.c0, rt0.c2) THEN CASE rt0.c3  WHEN rt1.c2 THEN rt0.c1 WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c3 THEN rt0.c1 ELSE rt1.c0 END ELSE TRIM(DISTINCT rt1.c1, rt1.c2) END) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (CASE WHEN (+ (rt1.c2)) THEN CASE rt1.c0  WHEN rt1.c2 THEN NULL END WHEN load_extension(rt0.c0, rt1.c1) THEN ((rt0.c0)>=(rt1.c2)) WHEN (+ (rt1.c1)) THEN CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 END WHEN (((0.939312101059092))>=(('-77117511'))) THEN x'' WHEN json_insert(rt1.c2, rt0.c0, rt0.c2) THEN CASE rt0.c3  WHEN rt1.c2 THEN rt0.c1 WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c3 THEN rt0.c1 ELSE rt1.c0 END ELSE TRIM(DISTINCT rt1.c1, rt1.c2) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (rt1.c2)) THEN CASE rt1.c0  WHEN rt1.c2 THEN NULL END WHEN load_extension(rt0.c0, rt1.c1) THEN ((rt0.c0)>=(rt1.c2)) WHEN (+ (rt1.c1)) THEN CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 END WHEN (((0.939312101059092))>=(('-77117511'))) THEN x'' WHEN json_insert(rt1.c2, rt0.c0, rt0.c2) THEN CASE rt0.c3  WHEN rt1.c2 THEN rt0.c1 WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c3 THEN rt0.c1 ELSE rt1.c0 END ELSE TRIM(DISTINCT rt1.c1, rt1.c2) END) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE ((- (((rt0.c4) IS TRUE)))) ORDER BY CASE WHEN rt0.c3 THEN (~ (rt0.c2)) ELSE 0.6084789517554585 END ASC  NULLS FIRST, ((((CASE WHEN rt0.c4 THEN rt0.c1 END)AND(rt1.c0 COLLATE NOCASE)))AND(rt0.c4)) ASC  NULLS FIRST, rt0.c4 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c4) IS TRUE)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE WHEN rt0.c3 THEN (~ (rt0.c2)) ELSE 0.6084789517554585 END ASC  NULLS FIRST, ((((CASE WHEN rt0.c4 THEN rt0.c1 END)AND(rt1.c0 COLLATE NOCASE)))AND(rt0.c4)) ASC  NULLS FIRST, rt0.c4 DESC  NULLS LAST);
SELECT ALL * FROM rt1, rt0 WHERE ((- (((rt0.c4) IS TRUE)))) ORDER BY CASE WHEN rt0.c3 THEN (~ (rt0.c2)) ELSE 0.6084789517554585 END ASC  NULLS FIRST, ((((CASE WHEN rt0.c4 THEN rt0.c1 END)AND(rt1.c0 COLLATE NOCASE)))AND(rt0.c4)) ASC  NULLS FIRST, rt0.c4 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c4) IS TRUE)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE WHEN rt0.c3 THEN (~ (rt0.c2)) ELSE 0.6084789517554585 END ASC  NULLS FIRST, ((((CASE WHEN rt0.c4 THEN rt0.c1 END)AND(rt1.c0 COLLATE NOCASE)))AND(rt0.c4)) ASC  NULLS FIRST, rt0.c4 DESC  NULLS LAST);
SELECT ALL * FROM rt1, rt0 WHERE ((- (((rt0.c4) IS TRUE)))) ORDER BY CASE WHEN rt0.c3 THEN (~ (rt0.c2)) ELSE 0.6084789517554585 END ASC  NULLS FIRST, ((((CASE WHEN rt0.c4 THEN rt0.c1 END)AND(rt1.c0 COLLATE NOCASE)))AND(rt0.c4)) ASC  NULLS FIRST, rt0.c4 DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((0.8649589853259296 COLLATE RTRIM)>>(((((rt0.c1)OR(rt0.c3)))OR(rt0.c2))))) ORDER BY rt0.c3  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.8649589853259296 COLLATE RTRIM)>>(((((rt0.c1)OR(rt0.c3)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((0.8649589853259296 COLLATE RTRIM)>>(((((rt0.c1)OR(rt0.c3)))OR(rt0.c2))))) ORDER BY rt0.c3  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.8649589853259296 COLLATE RTRIM)>>(((((rt0.c1)OR(rt0.c3)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((0.8649589853259296 COLLATE RTRIM)>>(((((rt0.c1)OR(rt0.c3)))OR(rt0.c2))))) ORDER BY rt0.c3  NULLS FIRST;
SELECT * FROM rt1, rt0 WHERE (CAST(rt0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS BLOB)) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (CAST(rt0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS BLOB)) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (CAST(rt0.c0 AS BLOB));
SELECT * FROM rt0 WHERE ((((rt0.c0 IN (rt0.c1, rt0.c1)))<(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (rt0.c1, rt0.c1)))<(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c0 IN (rt0.c1, rt0.c1)))<(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (rt0.c1, rt0.c1)))<(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c0 IN (rt0.c1, rt0.c1)))<(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c4)))));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON ((((rt1.c2)<<(rt1.c2))) ISNULL) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((((rt1.c2)<<(rt1.c2))) ISNULL));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON ((((rt1.c2)<<(rt1.c2))) ISNULL) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((((rt1.c2)<<(rt1.c2))) ISNULL));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON ((((rt1.c2)<<(rt1.c2))) ISNULL) WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((((((rt0.c2))!=((rt0.c3))))OR(((rt1.c1)LIKE(rt1.c0)))))OR('-1811988337'))) ORDER BY ((('856423535')/(rt0.c4)) IN ());
SELECT SUM(count) FROM (SELECT (((((((((rt0.c2))<>((rt0.c3))))OR(((rt1.c1)LIKE(rt1.c0)))))OR('-1811988337'))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((('856423535')/(rt0.c4)) IN ()));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((((((rt0.c2))!=((rt0.c3))))OR(((rt1.c1)LIKE(rt1.c0)))))OR('-1811988337'))) ORDER BY ((('856423535')/(rt0.c4)) IN ());
SELECT SUM(count) FROM (SELECT (((((((((rt0.c2))<>((rt0.c3))))OR(((rt1.c1)LIKE(rt1.c0)))))OR('-1811988337'))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((('856423535')/(rt0.c4)) IN ()));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((((((rt0.c2))!=((rt0.c3))))OR(((rt1.c1)LIKE(rt1.c0)))))OR('-1811988337'))) ORDER BY ((('856423535')/(rt0.c4)) IN ());
SELECT ALL COUNT(*) FROM rt1 WHERE ((((NULL, rt1.c1, rt1.c1))!=((rt1.c2, rt1.c2, rt1.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((NULL, rt1.c1, rt1.c1))<>((rt1.c2, rt1.c2, rt1.c0))) COLLATE RTRIM) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((NULL, rt1.c1, rt1.c1))!=((rt1.c2, rt1.c2, rt1.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((NULL, rt1.c1, rt1.c1))<>((rt1.c2, rt1.c2, rt1.c0))) COLLATE RTRIM) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((NULL, rt1.c1, rt1.c1))!=((rt1.c2, rt1.c2, rt1.c0))) COLLATE RTRIM);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c0)IS(rt1.c0))))>(((((rt1.c0))==((rt1.c1)))))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)IS(rt1.c0))))>(((((rt1.c0))==((rt1.c1))))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c0)IS(rt1.c0))))>(((((rt1.c0))==((rt1.c1)))))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)IS(rt1.c0))))>(((((rt1.c0))==((rt1.c1))))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c0)IS(rt1.c0))))>(((((rt1.c0))==((rt1.c1)))))));
SELECT COUNT(*) FROM rt0 WHERE ((((((+ (rt0.c3)))OR(((((rt0.c3)OR(rt0.c2)))OR(rt0.c2)))))AND(SQLITE_VERSION()))) ORDER BY ((((rt0.c1) IS FALSE)) BETWEEN (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END) AND (CASE '348047509'  WHEN rt0.c4 THEN rt0.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((+ (rt0.c3)))OR(((((rt0.c3)OR(rt0.c2)))OR(rt0.c2)))))AND(SQLITE_VERSION()))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) IS FALSE)) BETWEEN (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END) AND (CASE '348047509'  WHEN rt0.c4 THEN rt0.c1 END))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((((+ (rt0.c3)))OR(((((rt0.c3)OR(rt0.c2)))OR(rt0.c2)))))AND(SQLITE_VERSION()))) ORDER BY ((((rt0.c1) IS FALSE)) BETWEEN (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END) AND (CASE '348047509'  WHEN rt0.c4 THEN rt0.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((+ (rt0.c3)))OR(((((rt0.c3)OR(rt0.c2)))OR(rt0.c2)))))AND(SQLITE_VERSION()))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) IS FALSE)) BETWEEN (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END) AND (CASE '348047509'  WHEN rt0.c4 THEN rt0.c1 END))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((((+ (rt0.c3)))OR(((((rt0.c3)OR(rt0.c2)))OR(rt0.c2)))))AND(SQLITE_VERSION()))) ORDER BY ((((rt0.c1) IS FALSE)) BETWEEN (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END) AND (CASE '348047509'  WHEN rt0.c4 THEN rt0.c1 END))  NULLS FIRST;
SELECT COUNT(*) FROM rt1, rt0 WHERE (((rt0.c3) IS FALSE) COLLATE RTRIM) ORDER BY ((rt0.c4) BETWEEN (rt1.c1) AND (rt0.c2)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((rt0.c4) BETWEEN (rt1.c1) AND (rt0.c2)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((rt0.c3) IS FALSE) COLLATE RTRIM) ORDER BY ((rt0.c4) BETWEEN (rt1.c1) AND (rt0.c2)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((rt0.c4) BETWEEN (rt1.c1) AND (rt0.c2)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((rt0.c3) IS FALSE) COLLATE RTRIM) ORDER BY ((rt0.c4) BETWEEN (rt1.c1) AND (rt0.c2)) COLLATE NOCASE;
SELECT ALL * FROM rt1, rt0 WHERE (((CAST(rt0.c1 AS NUMERIC)) BETWEEN (CASE rt0.c1  WHEN rt1.c2 THEN x'' END) AND (rt1.c1))) ORDER BY ((CASE rt0.c1  WHEN rt1.c2 THEN rt0.c1 END) NOTNULL) ASC  NULLS FIRST, ((rt0.c1)>>(rt1.c1)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS NUMERIC)) BETWEEN (CASE rt0.c1  WHEN rt1.c2 THEN x'' END) AND (rt1.c1))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((CASE rt0.c1  WHEN rt1.c2 THEN rt0.c1 END) NOTNULL) ASC  NULLS FIRST, ((rt0.c1)>>(rt1.c1)) COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE (((CAST(rt0.c1 AS NUMERIC)) BETWEEN (CASE rt0.c1  WHEN rt1.c2 THEN x'' END) AND (rt1.c1))) ORDER BY ((CASE rt0.c1  WHEN rt1.c2 THEN rt0.c1 END) NOTNULL) ASC  NULLS FIRST, ((rt0.c1)>>(rt1.c1)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS NUMERIC)) BETWEEN (CASE rt0.c1  WHEN rt1.c2 THEN x'' END) AND (rt1.c1))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((CASE rt0.c1  WHEN rt1.c2 THEN rt0.c1 END) NOTNULL) ASC  NULLS FIRST, ((rt0.c1)>>(rt1.c1)) COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE (((CAST(rt0.c1 AS NUMERIC)) BETWEEN (CASE rt0.c1  WHEN rt1.c2 THEN x'' END) AND (rt1.c1))) ORDER BY ((CASE rt0.c1  WHEN rt1.c2 THEN rt0.c1 END) NOTNULL) ASC  NULLS FIRST, ((rt0.c1)>>(rt1.c1)) COLLATE BINARY DESC  NULLS FIRST;
SELECT * FROM rt0, rt1 WHERE (LIKELY(DISTINCT rt1.c2)) ORDER BY ((CAST(rt0.c2 AS BLOB)) BETWEEN ((NULL IN ('!v-]-d'))) AND (CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END)), '' DESC;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT rt1.c2)) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((CAST(rt0.c2 AS BLOB)) BETWEEN ((NULL IN ('!v-]-d'))) AND (CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END)), '' DESC);
SELECT * FROM rt0, rt1 WHERE (LIKELY(DISTINCT rt1.c2)) ORDER BY ((CAST(rt0.c2 AS BLOB)) BETWEEN ((NULL IN ('!v-]-d'))) AND (CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END)), '' DESC;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT rt1.c2)) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((CAST(rt0.c2 AS BLOB)) BETWEEN ((NULL IN ('!v-]-d'))) AND (CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END)), '' DESC);
SELECT * FROM rt0, rt1 WHERE (LIKELY(DISTINCT rt1.c2)) ORDER BY ((CAST(rt0.c2 AS BLOB)) BETWEEN ((NULL IN ('!v-]-d'))) AND (CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END)), '' DESC;
SELECT COUNT(*) FROM rt1 WHERE ((- (((rt1.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT (((- (((rt1.c1) ISNULL)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((- (((rt1.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT (((- (((rt1.c1) ISNULL)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((- (((rt1.c1) ISNULL))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON ((UNLIKELY(x''))/((- (rt0.c3)))) WHERE (CASE WHEN CASE rt0.c2  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c4 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 END THEN NULLIF(DISTINCT rt0.c1, rt1.c1) ELSE ((((rt0.c4)OR(rt0.c1)))AND(rt0.c1)) END) ORDER BY (~ (CAST(rt0.c3 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE rt0.c2  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c4 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 END THEN NULLIF(DISTINCT rt0.c1, rt1.c1) ELSE ((((rt0.c4)OR(rt0.c1)))AND(rt0.c1)) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON ((UNLIKELY(x''))/((- (rt0.c3)))) ORDER BY (~ (CAST(rt0.c3 AS BLOB)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON ((UNLIKELY(x''))/((- (rt0.c3)))) WHERE (CASE WHEN CASE rt0.c2  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c4 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 END THEN NULLIF(DISTINCT rt0.c1, rt1.c1) ELSE ((((rt0.c4)OR(rt0.c1)))AND(rt0.c1)) END) ORDER BY (~ (CAST(rt0.c3 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE rt0.c2  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c4 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 END THEN NULLIF(DISTINCT rt0.c1, rt1.c1) ELSE ((((rt0.c4)OR(rt0.c1)))AND(rt0.c1)) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON ((UNLIKELY(x''))/((- (rt0.c3)))) ORDER BY (~ (CAST(rt0.c3 AS BLOB)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON ((UNLIKELY(x''))/((- (rt0.c3)))) WHERE (CASE WHEN CASE rt0.c2  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c4 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 END THEN NULLIF(DISTINCT rt0.c1, rt1.c1) ELSE ((((rt0.c4)OR(rt0.c1)))AND(rt0.c1)) END) ORDER BY (~ (CAST(rt0.c3 AS BLOB)))  NULLS FIRST;
SELECT ALL * FROM rt0, rt1 WHERE (((CASE WHEN rt0.c2 THEN rt1.c0 END)<=(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt1.c0 END)<=(rt0.c0))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((CASE WHEN rt0.c2 THEN rt1.c0 END)<=(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt1.c0 END)<=(rt0.c0))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((CASE WHEN rt0.c2 THEN rt1.c0 END)<=(rt0.c0)));
SELECT COUNT(*) FROM rt1 WHERE ((NOT (((((rt1.c2)OR(rt1.c2)))AND(rt1.c1))))) ORDER BY ((((((rt1.c1)AND(rt1.c1)))OR(rt1.c0))) NOT BETWEEN ((((rt1.c2))>((rt1.c2)))) AND (rt1.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((rt1.c2)OR(rt1.c2)))AND(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c1)AND(rt1.c1)))OR(rt1.c0))) NOT BETWEEN ((((rt1.c2))>((rt1.c2)))) AND (rt1.c1)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE ((NOT (((((rt1.c2)OR(rt1.c2)))AND(rt1.c1))))) ORDER BY ((((((rt1.c1)AND(rt1.c1)))OR(rt1.c0))) NOT BETWEEN ((((rt1.c2))>((rt1.c2)))) AND (rt1.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((rt1.c2)OR(rt1.c2)))AND(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c1)AND(rt1.c1)))OR(rt1.c0))) NOT BETWEEN ((((rt1.c2))>((rt1.c2)))) AND (rt1.c1)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE ((NOT (((((rt1.c2)OR(rt1.c2)))AND(rt1.c1))))) ORDER BY ((((((rt1.c1)AND(rt1.c1)))OR(rt1.c0))) NOT BETWEEN ((((rt1.c2))>((rt1.c2)))) AND (rt1.c1)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((((((((((((rt1.c0)+(rt0.c3)))AND(((rt1.c2)IS(rt0.c3)))))AND(CAST(rt0.c4 AS BLOB))))OR(((rt0.c0)-(rt1.c0)))))AND(((((rt1.c0)AND(rt0.c0)))OR(rt0.c4)))))AND((~ ('')))))OR(((((rt1.c2)AND(rt0.c4)))OR(rt0.c0))))) ORDER BY ((rt0.c1) NOT BETWEEN ((+ (rt1.c1))) AND (GLOB(rt1.c1, rt1.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt1.c0)+(rt0.c3)))AND(((rt1.c2)IS(rt0.c3)))))AND(CAST(rt0.c4 AS BLOB))))OR(((rt0.c0)-(rt1.c0)))))AND(((((rt1.c0)AND(rt0.c0)))OR(rt0.c4)))))AND((~ ('')))))OR(((((rt1.c2)AND(rt0.c4)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt0.c1) NOT BETWEEN ((+ (rt1.c1))) AND (GLOB(rt1.c1, rt1.c1))) DESC);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((((((((((((rt1.c0)+(rt0.c3)))AND(((rt1.c2)IS(rt0.c3)))))AND(CAST(rt0.c4 AS BLOB))))OR(((rt0.c0)-(rt1.c0)))))AND(((((rt1.c0)AND(rt0.c0)))OR(rt0.c4)))))AND((~ ('')))))OR(((((rt1.c2)AND(rt0.c4)))OR(rt0.c0))))) ORDER BY ((rt0.c1) NOT BETWEEN ((+ (rt1.c1))) AND (GLOB(rt1.c1, rt1.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt1.c0)+(rt0.c3)))AND(((rt1.c2)IS(rt0.c3)))))AND(CAST(rt0.c4 AS BLOB))))OR(((rt0.c0)-(rt1.c0)))))AND(((((rt1.c0)AND(rt0.c0)))OR(rt0.c4)))))AND((~ ('')))))OR(((((rt1.c2)AND(rt0.c4)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt0.c1) NOT BETWEEN ((+ (rt1.c1))) AND (GLOB(rt1.c1, rt1.c1))) DESC);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((((((((((((rt1.c0)+(rt0.c3)))AND(((rt1.c2)IS(rt0.c3)))))AND(CAST(rt0.c4 AS BLOB))))OR(((rt0.c0)-(rt1.c0)))))AND(((((rt1.c0)AND(rt0.c0)))OR(rt0.c4)))))AND((~ ('')))))OR(((((rt1.c2)AND(rt0.c4)))OR(rt0.c0))))) ORDER BY ((rt0.c1) NOT BETWEEN ((+ (rt1.c1))) AND (GLOB(rt1.c1, rt1.c1))) DESC;
SELECT * FROM rt0 NOT INDEXED WHERE (CAST(rt0.c1 COLLATE NOCASE AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 NOT INDEXED WHERE (CAST(rt0.c1 COLLATE NOCASE AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 NOT INDEXED WHERE (CAST(rt0.c1 COLLATE NOCASE AS NUMERIC));
SELECT ALL COUNT(*) FROM rt1 WHERE (((CASE WHEN 'YMDts]t,' THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN x'7734' THEN rt1.c0 END)IS(NULL))) ORDER BY UPPER(DISTINCT rt1.c1)  NULLS LAST, HEX(DISTINCT 0.5858510664784434) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN 'YMDts]t,' THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN x'7734' THEN rt1.c0 END)IS(NULL))) IS TRUE)  as count FROM rt1 ORDER BY UPPER(DISTINCT rt1.c1)  NULLS LAST, HEX(DISTINCT 0.5858510664784434) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((CASE WHEN 'YMDts]t,' THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN x'7734' THEN rt1.c0 END)IS(NULL))) ORDER BY UPPER(DISTINCT rt1.c1)  NULLS LAST, HEX(DISTINCT 0.5858510664784434) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN 'YMDts]t,' THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN x'7734' THEN rt1.c0 END)IS(NULL))) IS TRUE)  as count FROM rt1 ORDER BY UPPER(DISTINCT rt1.c1)  NULLS LAST, HEX(DISTINCT 0.5858510664784434) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((CASE WHEN 'YMDts]t,' THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN x'7734' THEN rt1.c0 END)IS(NULL))) ORDER BY UPPER(DISTINCT rt1.c1)  NULLS LAST, HEX(DISTINCT 0.5858510664784434) ASC;
SELECT COUNT(*) FROM rt0 WHERE (0.5119300251561776 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((0.5119300251561776 COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (0.5119300251561776 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((0.5119300251561776 COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (0.5119300251561776 COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((NOT ((~ (rt1.c0))))) ORDER BY 0.39790254429018346 ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((~ (rt1.c0))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY 0.39790254429018346 ASC);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((NOT ((~ (rt1.c0))))) ORDER BY 0.39790254429018346 ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((~ (rt1.c0))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY 0.39790254429018346 ASC);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((NOT ((~ (rt1.c0))))) ORDER BY 0.39790254429018346 ASC;
SELECT ALL * FROM rt1, rt0 WHERE (rt0.c4) ORDER BY CASE WHEN ((rt0.c4)LIKE(NULL)) THEN ((rt0.c0) NOTNULL) WHEN rt0.c2 THEN CASE WHEN x'' THEN rt0.c2 WHEN rt0.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt0.c3 ELSE rt0.c0 END WHEN '701718266' THEN ((rt0.c1)>=(rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE WHEN ((rt0.c4)LIKE(NULL)) THEN ((rt0.c0) NOTNULL) WHEN rt0.c2 THEN CASE WHEN x'' THEN rt0.c2 WHEN rt0.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt0.c3 ELSE rt0.c0 END WHEN '701718266' THEN ((rt0.c1)>=(rt0.c0)) END);
SELECT ALL * FROM rt1, rt0 WHERE (rt0.c4) ORDER BY CASE WHEN ((rt0.c4)LIKE(NULL)) THEN ((rt0.c0) NOTNULL) WHEN rt0.c2 THEN CASE WHEN x'' THEN rt0.c2 WHEN rt0.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt0.c3 ELSE rt0.c0 END WHEN '701718266' THEN ((rt0.c1)>=(rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE WHEN ((rt0.c4)LIKE(NULL)) THEN ((rt0.c0) NOTNULL) WHEN rt0.c2 THEN CASE WHEN x'' THEN rt0.c2 WHEN rt0.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt0.c3 ELSE rt0.c0 END WHEN '701718266' THEN ((rt0.c1)>=(rt0.c0)) END);
SELECT ALL * FROM rt1, rt0 WHERE (rt0.c4) ORDER BY CASE WHEN ((rt0.c4)LIKE(NULL)) THEN ((rt0.c0) NOTNULL) WHEN rt0.c2 THEN CASE WHEN x'' THEN rt0.c2 WHEN rt0.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt0.c3 ELSE rt0.c0 END WHEN '701718266' THEN ((rt0.c1)>=(rt0.c0)) END;
SELECT * FROM rt0, rt1 WHERE (((rt0.c2)<>(rt0.c1)) COLLATE RTRIM) ORDER BY (- (((rt0.c0)>=(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)<>(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1 ORDER BY (- (((rt0.c0)>=(rt0.c0)))) ASC);
SELECT * FROM rt0, rt1 WHERE (((rt0.c2)<>(rt0.c1)) COLLATE RTRIM) ORDER BY (- (((rt0.c0)>=(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)<>(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1 ORDER BY (- (((rt0.c0)>=(rt0.c0)))) ASC);
SELECT * FROM rt0, rt1 WHERE (((rt0.c2)<>(rt0.c1)) COLLATE RTRIM) ORDER BY (- (((rt0.c0)>=(rt0.c0)))) ASC;
SELECT COUNT(*) FROM rt0, rt1 WHERE ((NOT (((rt0.c4)LIKE(0Xffffffffd4d3686e))))) ORDER BY ((616912544)LIKE(TRIM(DISTINCT rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c4)LIKE(0Xffffffffd4d3686e))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((616912544)LIKE(TRIM(DISTINCT rt0.c0))) DESC);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((NOT (((rt0.c4)LIKE(0Xffffffffd4d3686e))))) ORDER BY ((616912544)LIKE(TRIM(DISTINCT rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c4)LIKE(0Xffffffffd4d3686e))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((616912544)LIKE(TRIM(DISTINCT rt0.c0))) DESC);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((NOT (((rt0.c4)LIKE(0Xffffffffd4d3686e))))) ORDER BY ((616912544)LIKE(TRIM(DISTINCT rt0.c0))) DESC;
