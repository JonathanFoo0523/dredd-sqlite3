-- Time: 2024/06/09 18:48:38
-- Database: database95
-- Database version: 3.40.0
-- seed value: 3075684395
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE TEMPORARY TABLE IF NOT EXISTS t0 (c0 TEXT ); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, c3, c4, +c5 TEXT ); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(2008415859) WHERE ((((t0.c0)+(t0.c0))) ISNULL); -- 0ms;
UPDATE OR IGNORE t0 SET c0='2008415859'; -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (0xffffffffef4d40db); -- 0ms;
END; -- 0ms;
ALTER TABLE t0 ADD COLUMN c92 INT; -- 0ms;
INSERT OR IGNORE INTO rt1(c0) VALUES ('2008415859'); -- 0ms;
UPDATE OR ROLLBACK rt1 SET (c0)=('-280149797') WHERE (((rt1.c3 IN ()))|((('760451358') NOT NULL))); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c0, c92)=(0.49562404746466204, NULL) WHERE MIN(((((t0.c92)AND(t0.c0)))AND(t0.c0)), ((t0.c0)+(t0.c92))); -- 0ms;
DROP TABLE IF EXISTS t0; -- 0ms;
INSERT OR ABORT INTO rt1(c4, c5, c3, c0, c2) VALUES (NULL, '-1281191471', '', '1444789558', 0.18794764385513962); -- 0ms;
UPDATE OR FAIL rt1 SET c3=x'', c1=NULL WHERE CAST((~ (rt1.c0)) AS TEXT); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET c5='-1870076291'; -- 1ms;
INSERT OR ROLLBACK INTO rt1(c2, c4, c3, c1) VALUES ('2008415859', -129139032, 0.18794764385513962, x'7425'), (NULL, 'V8+ⵠウx c	', -1.29139032E8, NULL), ('1715833160', 'lLviuQ<\n', NULL, '529929678'); -- 0ms;
INSERT OR ABORT INTO rt1 VALUES ('1688472161', '', -1.29139032E8, '-1281191471', x'9255', x''); -- 0ms;
INSERT OR REPLACE INTO rt1 VALUES ('ri<VFv~ࣰ擻', NULL, '-129139032', 'AIJ&', NULL, x''); -- 1ms;
INSERT OR IGNORE INTO rt1(c1, c4, c2) VALUES (NULL, x'7ae9', NULL), ('', x'', 'ⵠ)'), (x'', NULL, x''), ('0.49562404746466204', 0.4438939230815737, ''), (-5.91909536E8, 0.4438939230815737, x''); -- 0ms;
INSERT OR IGNORE INTO rt1(c4, c1, c0, c3) VALUES (0.30657367987070383, '', 0.21278018664289988, NULL), (0x118681ec, x'', 7.60451358E8, x''), (0.49562404746466204, '-1870076291', 0.8904718436424588, 0.17757350961194862); -- 1ms;
UPDATE OR ROLLBACK rt1 SET (c1)=(1242073615); -- 0ms;
UPDATE OR IGNORE rt1 SET c1='', c0=NULL WHERE (((~ (rt1.c5)))<=(CASE WHEN '420025072' THEN rt1.c4 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c4 END)); -- 0ms;
INSERT OR IGNORE INTO rt1(c3) VALUES (0.5240111411138489); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1(c3, c0) VALUES (NULL, 0.8963171205042059); -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c4) VALUES (0.4777875740187566, x''); -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c5, c3, c4) VALUES (x'', '', 'sVA1/RpT)', NULL); -- 0ms;
UPDATE rt1 SET c5='-1281191471'; -- 0ms;
UPDATE OR ABORT rt1 SET c1=1.906772208E9; -- 0ms;
UPDATE rt1 SET (c4)=(NULL) WHERE HEX(DISTINCT ((rt1.c2)GLOB(rt1.c2))); -- 0ms;
INSERT OR FAIL INTO rt1(c0, c5, c4, c1, c2) VALUES (0.08446091233119346, 'Vn!', '213624311', 0X1f9615ce, NULL); -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES (x'', '412632975', NULL, x'', '-1328533338', x'95c2'), (NULL, 0.9490169184000555, 0.9886562770091248, 0.6446402016580216, '-2010709213', 1.242073615E9), (NULL, 2.008415859E9, 0X2c0fd8d0, x'', '1688472161', -655368408); -- 0ms;
UPDATE OR REPLACE rt1 SET c4='-1163641617'; -- 0ms;
UPDATE OR IGNORE rt1 SET c0=7.60451358E8 WHERE (rt1.c5 IN ()) COLLATE RTRIM; -- 0ms;
INSERT OR REPLACE INTO rt1(c4) VALUES ('-2071757369'), ('4l7p4-Gj'), (x''); -- 0ms;
INSERT OR IGNORE INTO rt1(c5) VALUES (7.60451358E8); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
INSERT OR IGNORE INTO rt1(c1) VALUES (NULL); -- 0ms;
COMMIT; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET c2=0.9901144977535417 WHERE (((rt1.c3)>=(0.29703568109777834)) IN ()); -- 0ms;
REINDEX RTRIM; -- 0ms;
INSERT OR ABORT INTO rt1(c2, c1) VALUES (0.6052033627319747, 0.8904718436424588), (NULL, '-801084021'), (0.8118859747139069, 0.5240111411138489); -- 0ms;
INSERT OR IGNORE INTO rt1(c4, c2, c1, c0, c3) VALUES (0.8118859747139069, '', '-1870076291', 'R緇1ウ|㎜(', NULL), (NULL, NULL, NULL, '', 0.515216577204408), (NULL, 0.6168387423037379, '', x'9c68', x''); -- 0ms;
PRAGMA temp.stats; -- 0ms;
END; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1(c5, c3) VALUES (NULL, x'2a0e'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
INSERT OR ROLLBACK INTO rt1(c0, c3, c5, c1, c2, c4) VALUES ('-801084021', 1349514268, 0.2270274594118853, 0.9463097932756412, x'25e11f82', NULL), (x'', 0.3675556937410682, -1874262013, x'', '366678145', '-591909536'), ('-1328533338', '0.515216577204408', '', '', 0.04021841764566503, NULL); -- 0ms;
INSERT OR IGNORE INTO rt1(c0) VALUES (1e500), (NULL), ('-830814503'); -- 0ms;
INSERT OR ROLLBACK INTO rt1(c1, c3, c0, c4, c5, c2) VALUES (NULL, NULL, NULL, NULL, 0.27337457973625534, 0.0); -- 1ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO rt1(c1) VALUES (NULL); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
UPDATE OR IGNORE rt1 SET c5='739236048' WHERE (('837104598')<((((rt1.c2))<((rt1.c3))))); -- 0ms;
INSERT OR IGNORE INTO rt1(c3, c0, c4, c2) VALUES ('-1874262013', 0.8118859747139069, '-1539599752', NULL), (0.5407932757355172, 0.777991154296598, NULL, -2.071757369E9), ('', 0.29630366366490535, 0.3363394621680902, 0.6516713617644289); -- 1ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE rt1 SET c4=',0d' WHERE ((rt1.c2)GLOB(((rt1.c2)OR(rt1.c1)))); -- 0ms;
REINDEX  rt1; -- 0ms;
UPDATE OR IGNORE rt1 SET c3=x'' WHERE ((CAST(rt1.c0 AS TEXT))AND((rt1.c2 IN ()))); -- 0ms;
UPDATE OR IGNORE rt1 SET c5=x''; -- 0ms;
UPDATE rt1 SET (c0, c4, c5)=('-138550368', NULL, x'aaf5'); -- 0ms;
UPDATE OR REPLACE rt1 SET (c4)=('L)') WHERE (('-1081765039' COLLATE NOCASE)OR((((rt1.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c2))))); -- 1ms;
INSERT OR FAIL INTO rt1(c0) VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES (x'f191', NULL, 'v8+ⵠウx c	', -1.38550368E8, '', x'bbc2'), (0.9901144977535417, NULL, NULL, NULL, '嗺mem?I', x''), (NULL, 0.40258466412260985, '-1794334430', x'', NULL, 's䶁LL~?'); -- 0ms;
INSERT OR FAIL INTO rt1(c1, c4, c3, c5, c2) VALUES (x'854d', '-1447784154', NULL, '0.8118859747139069', x'c0ac'), (x'8c09', 0.5426045888040343, '-1120383615', 0.06979369805857671, NULL), (0x9b8fb49, '_7', '294027756', -709142702, 1715833160); -- 0ms;
INSERT OR REPLACE INTO rt1(c0, c5, c1, c4) VALUES ('-1965606104', 0.6446402016580216, 'sVA1/RpT)', NULL); -- 0ms;
UPDATE OR IGNORE rt1 SET (c3, c2, c3)=(0.0031929431686479326, 0.7822113801058986, 'ⵠ)'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1671319764 unordered noskipscan'); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=420025072,8');\n; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x'4072'); -- 0ms;
UPDATE rt1 SET (c2, c0, c3)=(7.39236048E8, x'43d5', 1.59409403E8); -- 1ms;
UPDATE rt1 SET c1=NULL; -- 4ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS BLOB)) ISNULL); -- 0ms;
UPDATE OR IGNORE rt1 SET (c3, c4)=(NULL, '-591909536'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.4557085079914074); -- 0ms;
REINDEX; -- 0ms;
UPDATE rt1 SET c2=0Xffffffff950ca122 WHERE CASE (+ (rt1.c0))  WHEN CAST(rt1.c1 AS INTEGER) THEN ((((((((rt1.c0)AND(rt1.c3)))AND(rt1.c0)))OR(-2010709213)))AND(rt1.c4)) END; -- 0ms;
CREATE TEMPORARY VIEW  IF NOT EXISTS v0(c0, c1, c2) AS SELECT ALL MAX(((((rt1.c4)AND(rt1.c2)))OR(rt1.c4))), (((json_array_length(rt1.c0)))>=((((vt0.c0) BETWEEN (rt1.c5) AND (rt1.c4))))), SUM((+ (vt0.c0))) FROM rt1, vt0 ORDER BY 0.2912014776590477; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET (c1)=(0.7230392899372287) WHERE ((CASE rt1.c5  WHEN rt1.c2 THEN rt1.c4 ELSE rt1.c4 END)+(rt1.c5)); -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON ((0.30657367987070383) IS FALSE) COLLATE RTRIM LEFT OUTER JOIN v0 ON v0.c2 WHERE ((((((((((((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((v0.c1))))OR((('') NOTNULL))))AND(((vt0.c0)<<(rt1.c2)))))AND(((vt0.c0)%(0.15756724539810174)))))OR(LIKELIHOOD(v0.c0, 0.24234400457166982)))) ORDER BY ((((rt1.c0)>(rt1.c1)))-(LIKELY(rt1.c4)));
SELECT SUM(count) FROM (SELECT (((((((((((((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((v0.c1))))OR((('') NOTNULL))))AND(((vt0.c0)<<(rt1.c2)))))AND(((vt0.c0)%(0.15756724539810174)))))OR(LIKELIHOOD(v0.c0, 0.24234400457166982)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON ((0.30657367987070383) IS FALSE) COLLATE RTRIM LEFT OUTER JOIN v0 ON v0.c2 ORDER BY ((((rt1.c0)>(rt1.c1)))-(LIKELY(rt1.c4))));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON ((0.30657367987070383) IS FALSE) COLLATE RTRIM LEFT OUTER JOIN v0 ON v0.c2 WHERE ((((((((((((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((v0.c1))))OR((('') NOTNULL))))AND(((vt0.c0)<<(rt1.c2)))))AND(((vt0.c0)%(0.15756724539810174)))))OR(LIKELIHOOD(v0.c0, 0.24234400457166982)))) ORDER BY ((((rt1.c0)>(rt1.c1)))-(LIKELY(rt1.c4)));
SELECT SUM(count) FROM (SELECT (((((((((((((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((v0.c1))))OR((('') NOTNULL))))AND(((vt0.c0)<<(rt1.c2)))))AND(((vt0.c0)%(0.15756724539810174)))))OR(LIKELIHOOD(v0.c0, 0.24234400457166982)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON ((0.30657367987070383) IS FALSE) COLLATE RTRIM LEFT OUTER JOIN v0 ON v0.c2 ORDER BY ((((rt1.c0)>(rt1.c1)))-(LIKELY(rt1.c4))));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON ((0.30657367987070383) IS FALSE) COLLATE RTRIM LEFT OUTER JOIN v0 ON v0.c2 WHERE ((((((((((((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((v0.c1))))OR((('') NOTNULL))))AND(((vt0.c0)<<(rt1.c2)))))AND(((vt0.c0)%(0.15756724539810174)))))OR(LIKELIHOOD(v0.c0, 0.24234400457166982)))) ORDER BY ((((rt1.c0)>(rt1.c1)))-(LIKELY(rt1.c4)));
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c1)LIKE(0.8009933111666164)))AND(v0.c1 COLLATE BINARY)))AND(CASE v0.c0  WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) ORDER BY -129139032  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c1)LIKE(0.8009933111666164)))AND(v0.c1 COLLATE BINARY)))AND(CASE v0.c0  WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY -129139032  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c1)LIKE(0.8009933111666164)))AND(v0.c1 COLLATE BINARY)))AND(CASE v0.c0  WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) ORDER BY -129139032  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c1)LIKE(0.8009933111666164)))AND(v0.c1 COLLATE BINARY)))AND(CASE v0.c0  WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY -129139032  NULLS LAST);
SELECT ALL * FROM rt1, v0 WHERE (((rt1.c4) NOT BETWEEN (((rt1.c3)<(rt1.c2))) AND (rt1.c4 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c4) NOT BETWEEN (((rt1.c3)<(rt1.c2))) AND (rt1.c4 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, v0);
SELECT ALL * FROM rt1, v0 WHERE (((rt1.c4) NOT BETWEEN (((rt1.c3)<(rt1.c2))) AND (rt1.c4 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c4) NOT BETWEEN (((rt1.c3)<(rt1.c2))) AND (rt1.c4 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, v0);
SELECT ALL * FROM rt1, v0 WHERE (((rt1.c4) NOT BETWEEN (((rt1.c3)<(rt1.c2))) AND (rt1.c4 COLLATE RTRIM)));
SELECT * FROM v0, vt0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (v0.c1);
SELECT ALL * FROM rt1, v0, vt0 WHERE (((((((rt1.c1)OR(v0.c2)))OR(v0.c0))) NOT BETWEEN (0.42292953379156795) AND (CASE WHEN rt1.c3 THEN v0.c1 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1)OR(v0.c2)))OR(v0.c0))) NOT BETWEEN (0.42292953379156795) AND (CASE WHEN rt1.c3 THEN v0.c1 ELSE v0.c0 END))) IS TRUE)  as count FROM rt1, v0, vt0);
SELECT ALL * FROM rt1, v0, vt0 WHERE (((((((rt1.c1)OR(v0.c2)))OR(v0.c0))) NOT BETWEEN (0.42292953379156795) AND (CASE WHEN rt1.c3 THEN v0.c1 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1)OR(v0.c2)))OR(v0.c0))) NOT BETWEEN (0.42292953379156795) AND (CASE WHEN rt1.c3 THEN v0.c1 ELSE v0.c0 END))) IS TRUE)  as count FROM rt1, v0, vt0);
SELECT ALL * FROM rt1, v0, vt0 WHERE (((((((rt1.c1)OR(v0.c2)))OR(v0.c0))) NOT BETWEEN (0.42292953379156795) AND (CASE WHEN rt1.c3 THEN v0.c1 ELSE v0.c0 END)));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((CAST(vt0.c0 AS TEXT))<(((vt0.c0)||(v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT))<(((vt0.c0)||(v0.c2))))) IS TRUE)  as count FROM vt0 NOT INDEXED, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((CAST(vt0.c0 AS TEXT))<(((vt0.c0)||(v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT))<(((vt0.c0)||(v0.c2))))) IS TRUE)  as count FROM vt0 NOT INDEXED, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((CAST(vt0.c0 AS TEXT))<(((vt0.c0)||(v0.c2)))));
SELECT COUNT(*) FROM vt0, rt1, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, rt1, v0);
SELECT COUNT(*) FROM vt0, rt1, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, rt1, v0);
SELECT COUNT(*) FROM vt0, rt1, v0 WHERE (x'');
SELECT * FROM v0 WHERE (UPPER(DISTINCT UPPER(-2077760072))) ORDER BY ((((v0.c0)>=(v0.c1))) NOT BETWEEN (((v0.c1) NOT NULL)) AND ((NOT (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT UPPER(-2077760072))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)>=(v0.c1))) NOT BETWEEN (((v0.c1) NOT NULL)) AND ((NOT (v0.c0)))) DESC);
SELECT * FROM v0 WHERE (UPPER(DISTINCT UPPER(-2077760072))) ORDER BY ((((v0.c0)>=(v0.c1))) NOT BETWEEN (((v0.c1) NOT NULL)) AND ((NOT (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT UPPER(-2077760072))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)>=(v0.c1))) NOT BETWEEN (((v0.c1) NOT NULL)) AND ((NOT (v0.c0)))) DESC);
SELECT * FROM v0 WHERE (UPPER(DISTINCT UPPER(-2077760072))) ORDER BY ((((v0.c0)>=(v0.c1))) NOT BETWEEN (((v0.c1) NOT NULL)) AND ((NOT (v0.c0)))) DESC;
SELECT ALL * FROM rt1 WHERE (rt1.c5) ORDER BY (((NULL) NOTNULL) IN (rt1.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c5) IS TRUE)  as count FROM rt1 ORDER BY (((NULL) NOTNULL) IN (rt1.c2)) DESC);
SELECT ALL * FROM rt1 WHERE (rt1.c5) ORDER BY (((NULL) NOTNULL) IN (rt1.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c5) IS TRUE)  as count FROM rt1 ORDER BY (((NULL) NOTNULL) IN (rt1.c2)) DESC);
SELECT ALL * FROM rt1 WHERE (rt1.c5) ORDER BY (((NULL) NOTNULL) IN (rt1.c2)) DESC;
SELECT * FROM v0 FULL OUTER JOIN rt1 ON CASE WHEN '1767070917' THEN rt1.c1 COLLATE BINARY WHEN (v0.c2 IN (rt1.c3)) THEN ((((((((rt1.c3)AND(rt1.c5)))AND(v0.c2)))AND(rt1.c2)))OR(rt1.c1)) WHEN ((rt1.c0) BETWEEN (v0.c1) AND (rt1.c0)) THEN ((rt1.c5) NOT BETWEEN (rt1.c5) AND (rt1.c0)) END WHERE ((((rt1.c0)) NOT BETWEEN ((CAST(rt1.c0 AS REAL))) AND ((CASE rt1.c5  WHEN rt1.c4 THEN rt1.c5 END))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) NOT BETWEEN ((CAST(rt1.c0 AS REAL))) AND ((CASE rt1.c5  WHEN rt1.c4 THEN rt1.c5 END)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt1 ON CASE WHEN '1767070917' THEN rt1.c1 COLLATE BINARY WHEN (v0.c2 IN (rt1.c3)) THEN ((((((((rt1.c3)AND(rt1.c5)))AND(v0.c2)))AND(rt1.c2)))OR(rt1.c1)) WHEN ((rt1.c0) BETWEEN (v0.c1) AND (rt1.c0)) THEN ((rt1.c5) NOT BETWEEN (rt1.c5) AND (rt1.c0)) END);
SELECT * FROM v0 FULL OUTER JOIN rt1 ON CASE WHEN '1767070917' THEN rt1.c1 COLLATE BINARY WHEN (v0.c2 IN (rt1.c3)) THEN ((((((((rt1.c3)AND(rt1.c5)))AND(v0.c2)))AND(rt1.c2)))OR(rt1.c1)) WHEN ((rt1.c0) BETWEEN (v0.c1) AND (rt1.c0)) THEN ((rt1.c5) NOT BETWEEN (rt1.c5) AND (rt1.c0)) END WHERE ((((rt1.c0)) NOT BETWEEN ((CAST(rt1.c0 AS REAL))) AND ((CASE rt1.c5  WHEN rt1.c4 THEN rt1.c5 END))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) NOT BETWEEN ((CAST(rt1.c0 AS REAL))) AND ((CASE rt1.c5  WHEN rt1.c4 THEN rt1.c5 END)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt1 ON CASE WHEN '1767070917' THEN rt1.c1 COLLATE BINARY WHEN (v0.c2 IN (rt1.c3)) THEN ((((((((rt1.c3)AND(rt1.c5)))AND(v0.c2)))AND(rt1.c2)))OR(rt1.c1)) WHEN ((rt1.c0) BETWEEN (v0.c1) AND (rt1.c0)) THEN ((rt1.c5) NOT BETWEEN (rt1.c5) AND (rt1.c0)) END);
SELECT * FROM v0 FULL OUTER JOIN rt1 ON CASE WHEN '1767070917' THEN rt1.c1 COLLATE BINARY WHEN (v0.c2 IN (rt1.c3)) THEN ((((((((rt1.c3)AND(rt1.c5)))AND(v0.c2)))AND(rt1.c2)))OR(rt1.c1)) WHEN ((rt1.c0) BETWEEN (v0.c1) AND (rt1.c0)) THEN ((rt1.c5) NOT BETWEEN (rt1.c5) AND (rt1.c0)) END WHERE ((((rt1.c0)) NOT BETWEEN ((CAST(rt1.c0 AS REAL))) AND ((CASE rt1.c5  WHEN rt1.c4 THEN rt1.c5 END))));
SELECT * FROM v0 WHERE (((((v0.c2) NOT NULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2) NOT NULL)) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c2) NOT NULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2) NOT NULL)) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c2) NOT NULL)) NOTNULL));
SELECT * FROM rt1 WHERE ((- ('4I' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((- ('4I' COLLATE NOCASE))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((- ('4I' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((- ('4I' COLLATE NOCASE))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((- ('4I' COLLATE NOCASE)));
SELECT * FROM rt1, v0, vt0 WHERE ((- (((rt1.c4) NOTNULL)))) ORDER BY ((((CASE WHEN x'' THEN '548556527' END)AND(rt1.c4 COLLATE BINARY)))AND(CAST(rt1.c2 AS NUMERIC)))  NULLS LAST, (((((((((((((+ (rt1.c0)))OR(((v0.c1)<>('')))))AND(SQLITE_COMPILEOPTION_USED(v0.c1))))OR((NOT (v0.c1)))))OR((((v0.c0, vt0.c0, rt1.c5, v0.c0, rt1.c4))>((rt1.c2, rt1.c4, vt0.c0, rt1.c2, rt1.c5))))))OR(((((0X77b5fe73)AND(v0.c2)))OR(v0.c0)))))AND((((rt1.c0))=((rt1.c2)))))  NULLS LAST, (((rt1.c4, rt1.c0, v0.c1)) NOT BETWEEN ((CASE rt1.c5  WHEN v0.c0 THEN v0.c1 END, CASE WHEN v0.c2 THEN rt1.c4 ELSE rt1.c0 END, (NOT (rt1.c3)))) AND ((rt1.c0, 0.022665287020225633, ((v0.c1) ISNULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt1.c4) NOTNULL)))) IS TRUE)  as count FROM rt1, v0, vt0 ORDER BY ((((CASE WHEN x'' THEN '548556527' END)AND(rt1.c4 COLLATE BINARY)))AND(CAST(rt1.c2 AS NUMERIC)))  NULLS LAST, (((((((((((((+ (rt1.c0)))OR(((v0.c1)!=('')))))AND(SQLITE_COMPILEOPTION_USED(v0.c1))))OR((NOT (v0.c1)))))OR((((v0.c0, vt0.c0, rt1.c5, v0.c0, rt1.c4))>((rt1.c2, rt1.c4, vt0.c0, rt1.c2, rt1.c5))))))OR(((((0x77b5fe73)AND(v0.c2)))OR(v0.c0)))))AND((((rt1.c0))==((rt1.c2)))))  NULLS LAST, (((rt1.c4, rt1.c0, v0.c1)) NOT BETWEEN ((CASE rt1.c5  WHEN v0.c0 THEN v0.c1 END, CASE WHEN v0.c2 THEN rt1.c4 ELSE rt1.c0 END, (NOT (rt1.c3)))) AND ((rt1.c0, 0.022665287020225633, ((v0.c1) ISNULL))))  NULLS FIRST);
SELECT * FROM rt1, v0, vt0 WHERE ((- (((rt1.c4) NOTNULL)))) ORDER BY ((((CASE WHEN x'' THEN '548556527' END)AND(rt1.c4 COLLATE BINARY)))AND(CAST(rt1.c2 AS NUMERIC)))  NULLS LAST, (((((((((((((+ (rt1.c0)))OR(((v0.c1)<>('')))))AND(SQLITE_COMPILEOPTION_USED(v0.c1))))OR((NOT (v0.c1)))))OR((((v0.c0, vt0.c0, rt1.c5, v0.c0, rt1.c4))>((rt1.c2, rt1.c4, vt0.c0, rt1.c2, rt1.c5))))))OR(((((0X77b5fe73)AND(v0.c2)))OR(v0.c0)))))AND((((rt1.c0))=((rt1.c2)))))  NULLS LAST, (((rt1.c4, rt1.c0, v0.c1)) NOT BETWEEN ((CASE rt1.c5  WHEN v0.c0 THEN v0.c1 END, CASE WHEN v0.c2 THEN rt1.c4 ELSE rt1.c0 END, (NOT (rt1.c3)))) AND ((rt1.c0, 0.022665287020225633, ((v0.c1) ISNULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt1.c4) NOTNULL)))) IS TRUE)  as count FROM rt1, v0, vt0 ORDER BY ((((CASE WHEN x'' THEN '548556527' END)AND(rt1.c4 COLLATE BINARY)))AND(CAST(rt1.c2 AS NUMERIC)))  NULLS LAST, (((((((((((((+ (rt1.c0)))OR(((v0.c1)!=('')))))AND(SQLITE_COMPILEOPTION_USED(v0.c1))))OR((NOT (v0.c1)))))OR((((v0.c0, vt0.c0, rt1.c5, v0.c0, rt1.c4))>((rt1.c2, rt1.c4, vt0.c0, rt1.c2, rt1.c5))))))OR(((((0x77b5fe73)AND(v0.c2)))OR(v0.c0)))))AND((((rt1.c0))==((rt1.c2)))))  NULLS LAST, (((rt1.c4, rt1.c0, v0.c1)) NOT BETWEEN ((CASE rt1.c5  WHEN v0.c0 THEN v0.c1 END, CASE WHEN v0.c2 THEN rt1.c4 ELSE rt1.c0 END, (NOT (rt1.c3)))) AND ((rt1.c0, 0.022665287020225633, ((v0.c1) ISNULL))))  NULLS FIRST);
SELECT * FROM rt1, v0, vt0 WHERE ((- (((rt1.c4) NOTNULL)))) ORDER BY ((((CASE WHEN x'' THEN '548556527' END)AND(rt1.c4 COLLATE BINARY)))AND(CAST(rt1.c2 AS NUMERIC)))  NULLS LAST, (((((((((((((+ (rt1.c0)))OR(((v0.c1)<>('')))))AND(SQLITE_COMPILEOPTION_USED(v0.c1))))OR((NOT (v0.c1)))))OR((((v0.c0, vt0.c0, rt1.c5, v0.c0, rt1.c4))>((rt1.c2, rt1.c4, vt0.c0, rt1.c2, rt1.c5))))))OR(((((0X77b5fe73)AND(v0.c2)))OR(v0.c0)))))AND((((rt1.c0))=((rt1.c2)))))  NULLS LAST, (((rt1.c4, rt1.c0, v0.c1)) NOT BETWEEN ((CASE rt1.c5  WHEN v0.c0 THEN v0.c1 END, CASE WHEN v0.c2 THEN rt1.c4 ELSE rt1.c0 END, (NOT (rt1.c3)))) AND ((rt1.c0, 0.022665287020225633, ((v0.c1) ISNULL))))  NULLS FIRST;
SELECT COUNT(*) FROM rt1, v0 WHERE (((v0.c2) IS TRUE)) ORDER BY rt1.c3 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c2) IS TRUE)) IS TRUE)  as count FROM rt1, v0 ORDER BY rt1.c3 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, v0 WHERE (((v0.c2) IS TRUE)) ORDER BY rt1.c3 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c2) IS TRUE)) IS TRUE)  as count FROM rt1, v0 ORDER BY rt1.c3 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, v0 WHERE (((v0.c2) IS TRUE)) ORDER BY rt1.c3 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, v0, vt0 WHERE (UNICODE(((rt1.c3)IS(rt1.c2)))) ORDER BY (NOT (0.29630366366490535)) ASC, json(CAST(v0.c1 AS REAL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UNICODE(((rt1.c3)IS(rt1.c2)))) IS TRUE)  as count FROM rt1, v0, vt0 ORDER BY (NOT (0.29630366366490535)) ASC, json(CAST(v0.c1 AS REAL))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, v0, vt0 WHERE (UNICODE(((rt1.c3)IS(rt1.c2)))) ORDER BY (NOT (0.29630366366490535)) ASC, json(CAST(v0.c1 AS REAL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UNICODE(((rt1.c3)IS(rt1.c2)))) IS TRUE)  as count FROM rt1, v0, vt0 ORDER BY (NOT (0.29630366366490535)) ASC, json(CAST(v0.c1 AS REAL))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, v0, vt0 WHERE (UNICODE(((rt1.c3)IS(rt1.c2)))) ORDER BY (NOT (0.29630366366490535)) ASC, json(CAST(v0.c1 AS REAL))  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((v0.c1) IS FALSE) COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1) IS FALSE) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c1) IS FALSE) COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1) IS FALSE) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c1) IS FALSE) COLLATE BINARY COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1, vt0 NATURAL JOIN v0 WHERE ((((rt1.c5)-(v0.c0)) IN (ABS(v0.c0))));
SELECT SUM(count) FROM (SELECT (((((rt1.c5)-(v0.c0)) IN (ABS(v0.c0)))) IS TRUE)  as count FROM rt1, vt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM rt1, vt0 NATURAL JOIN v0 WHERE ((((rt1.c5)-(v0.c0)) IN (ABS(v0.c0))));
SELECT SUM(count) FROM (SELECT (((((rt1.c5)-(v0.c0)) IN (ABS(v0.c0)))) IS TRUE)  as count FROM rt1, vt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM rt1, vt0 NATURAL JOIN v0 WHERE ((((rt1.c5)-(v0.c0)) IN (ABS(v0.c0))));
SELECT ALL COUNT(*) FROM rt1, v0 NOT INDEXED, vt0 WHERE (((((rt1.c5)==(v0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt1.c5)==(v0.c1))) IS FALSE)) IS TRUE)  as count FROM rt1, v0, vt0);
SELECT ALL COUNT(*) FROM rt1, v0 NOT INDEXED, vt0 WHERE (((((rt1.c5)==(v0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt1.c5)==(v0.c1))) IS FALSE)) IS TRUE)  as count FROM rt1, v0, vt0);
SELECT ALL COUNT(*) FROM rt1, v0 NOT INDEXED, vt0 WHERE (((((rt1.c5)==(v0.c1))) IS FALSE));
SELECT ALL * FROM vt0, v0, rt1 WHERE ((((rt1.c1)) BETWEEN ((((vt0.c0)<=(NULL)))) AND (((~ (v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) BETWEEN ((((vt0.c0)<=(NULL)))) AND (((~ (v0.c0)))))) IS TRUE)  as count FROM vt0, v0, rt1);
SELECT ALL * FROM vt0, v0, rt1 WHERE ((((rt1.c1)) BETWEEN ((((vt0.c0)<=(NULL)))) AND (((~ (v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) BETWEEN ((((vt0.c0)<=(NULL)))) AND (((~ (v0.c0)))))) IS TRUE)  as count FROM vt0, v0, rt1);
SELECT ALL * FROM vt0, v0, rt1 WHERE ((((rt1.c1)) BETWEEN ((((vt0.c0)<=(NULL)))) AND (((~ (v0.c0))))));
SELECT * FROM v0 CROSS JOIN vt0 ON ((v0.c2 IN ()) IN ()) WHERE ((((v0.c2)) NOT BETWEEN ((CASE WHEN v0.c2 THEN v0.c0 ELSE v0.c1 END)) AND ((((v0.c1)>(0.2741371045457982)))))) ORDER BY ((LIKELY(vt0.c0))IS NOT(CAST(v0.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT (((((v0.c2)) NOT BETWEEN ((CASE WHEN v0.c2 THEN v0.c0 ELSE v0.c1 END)) AND ((((v0.c1)>(0.2741371045457982)))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((v0.c2 IN ()) IN ()) ORDER BY ((LIKELY(vt0.c0))IS NOT(CAST(v0.c1 AS INTEGER))));
SELECT * FROM v0 CROSS JOIN vt0 ON ((v0.c2 IN ()) IN ()) WHERE ((((v0.c2)) NOT BETWEEN ((CASE WHEN v0.c2 THEN v0.c0 ELSE v0.c1 END)) AND ((((v0.c1)>(0.2741371045457982)))))) ORDER BY ((LIKELY(vt0.c0))IS NOT(CAST(v0.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT (((((v0.c2)) NOT BETWEEN ((CASE WHEN v0.c2 THEN v0.c0 ELSE v0.c1 END)) AND ((((v0.c1)>(0.2741371045457982)))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((v0.c2 IN ()) IN ()) ORDER BY ((LIKELY(vt0.c0))IS NOT(CAST(v0.c1 AS INTEGER))));
SELECT * FROM v0 CROSS JOIN vt0 ON ((v0.c2 IN ()) IN ()) WHERE ((((v0.c2)) NOT BETWEEN ((CASE WHEN v0.c2 THEN v0.c0 ELSE v0.c1 END)) AND ((((v0.c1)>(0.2741371045457982)))))) ORDER BY ((LIKELY(vt0.c0))IS NOT(CAST(v0.c1 AS INTEGER)));
SELECT COUNT(*) FROM v0, rt1 WHERE (0.828875454150558);
SELECT SUM(count) FROM (SELECT ALL ((0.828875454150558) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM v0, rt1 WHERE (0.828875454150558);
SELECT SUM(count) FROM (SELECT ALL ((0.828875454150558) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM v0, rt1 WHERE (0.828875454150558);
SELECT ALL COUNT(*) FROM rt1, v0, vt0 WHERE ((((((((((((rt1.c0))==((vt0.c0))))AND((((rt1.c3))==((v0.c2))))))AND(CASE WHEN vt0.c0 THEN v0.c0 ELSE rt1.c4 END)))OR((((rt1.c2))<=((v0.c1))))))OR((NOT (rt1.c2))))) ORDER BY ((((((((((rt1.c3)-(v0.c2)))OR(CAST(rt1.c3 AS TEXT))))AND(((((vt0.c0)AND(rt1.c0)))AND(rt1.c0)))))OR(rt1.c1)))OR('-970839618')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt1.c0))==((vt0.c0))))AND((((rt1.c3))==((v0.c2))))))AND(CASE WHEN vt0.c0 THEN v0.c0 ELSE rt1.c4 END)))OR((((rt1.c2))<=((v0.c1))))))OR((NOT (rt1.c2))))) IS TRUE)  as count FROM rt1, v0, vt0 ORDER BY ((((((((((rt1.c3)-(v0.c2)))OR(CAST(rt1.c3 AS TEXT))))AND(((((vt0.c0)AND(rt1.c0)))AND(rt1.c0)))))OR(rt1.c1)))OR('-970839618')) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, v0, vt0 WHERE ((((((((((((rt1.c0))==((vt0.c0))))AND((((rt1.c3))==((v0.c2))))))AND(CASE WHEN vt0.c0 THEN v0.c0 ELSE rt1.c4 END)))OR((((rt1.c2))<=((v0.c1))))))OR((NOT (rt1.c2))))) ORDER BY ((((((((((rt1.c3)-(v0.c2)))OR(CAST(rt1.c3 AS TEXT))))AND(((((vt0.c0)AND(rt1.c0)))AND(rt1.c0)))))OR(rt1.c1)))OR('-970839618')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt1.c0))==((vt0.c0))))AND((((rt1.c3))==((v0.c2))))))AND(CASE WHEN vt0.c0 THEN v0.c0 ELSE rt1.c4 END)))OR((((rt1.c2))<=((v0.c1))))))OR((NOT (rt1.c2))))) IS TRUE)  as count FROM rt1, v0, vt0 ORDER BY ((((((((((rt1.c3)-(v0.c2)))OR(CAST(rt1.c3 AS TEXT))))AND(((((vt0.c0)AND(rt1.c0)))AND(rt1.c0)))))OR(rt1.c1)))OR('-970839618')) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, v0, vt0 WHERE ((((((((((((rt1.c0))==((vt0.c0))))AND((((rt1.c3))==((v0.c2))))))AND(CASE WHEN vt0.c0 THEN v0.c0 ELSE rt1.c4 END)))OR((((rt1.c2))<=((v0.c1))))))OR((NOT (rt1.c2))))) ORDER BY ((((((((((rt1.c3)-(v0.c2)))OR(CAST(rt1.c3 AS TEXT))))AND(((((vt0.c0)AND(rt1.c0)))AND(rt1.c0)))))OR(rt1.c1)))OR('-970839618')) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt1 WHERE (((v0.c1)%('0.8963171205042059'))) ORDER BY ((CASE WHEN rt1.c0 THEN rt1.c3 END)>((- (v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c1)%('0.8963171205042059'))) IS TRUE)  as count FROM v0, rt1 ORDER BY ((CASE WHEN rt1.c0 THEN rt1.c3 END)>((- (v0.c0)))) ASC);
SELECT COUNT(*) FROM v0, rt1 WHERE (((v0.c1)%('0.8963171205042059'))) ORDER BY ((CASE WHEN rt1.c0 THEN rt1.c3 END)>((- (v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c1)%('0.8963171205042059'))) IS TRUE)  as count FROM v0, rt1 ORDER BY ((CASE WHEN rt1.c0 THEN rt1.c3 END)>((- (v0.c0)))) ASC);
SELECT COUNT(*) FROM v0, rt1 WHERE (((v0.c1)%('0.8963171205042059'))) ORDER BY ((CASE WHEN rt1.c0 THEN rt1.c3 END)>((- (v0.c0)))) ASC;
SELECT ALL COUNT(*) FROM rt1, vt0, v0 WHERE ((((vt0.c0)) BETWEEN ((rt1.c3)) AND ((CASE WHEN rt1.c5 THEN rt1.c1 WHEN rt1.c0 THEN x'' WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c1 END)))) ORDER BY (~ (NULLIF(DISTINCT v0.c0, rt1.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((rt1.c3)) AND ((CASE WHEN rt1.c5 THEN rt1.c1 WHEN rt1.c0 THEN x'' WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c1 END)))) IS TRUE)  as count FROM rt1, vt0, v0 ORDER BY (~ (NULLIF(DISTINCT v0.c0, rt1.c1))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0, v0 WHERE ((((vt0.c0)) BETWEEN ((rt1.c3)) AND ((CASE WHEN rt1.c5 THEN rt1.c1 WHEN rt1.c0 THEN x'' WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c1 END)))) ORDER BY (~ (NULLIF(DISTINCT v0.c0, rt1.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((rt1.c3)) AND ((CASE WHEN rt1.c5 THEN rt1.c1 WHEN rt1.c0 THEN x'' WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c1 END)))) IS TRUE)  as count FROM rt1, vt0, v0 ORDER BY (~ (NULLIF(DISTINCT v0.c0, rt1.c1))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0, v0 WHERE ((((vt0.c0)) BETWEEN ((rt1.c3)) AND ((CASE WHEN rt1.c5 THEN rt1.c1 WHEN rt1.c0 THEN x'' WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c1 END)))) ORDER BY (~ (NULLIF(DISTINCT v0.c0, rt1.c1))) ASC  NULLS LAST;
SELECT * FROM v0, rt1 WHERE (((((rt1.c0 IN ()), ((rt1.c4)OR(v0.c0)), rt1.c4 COLLATE BINARY))>((((((v0.c1)OR(rt1.c5)))OR(v0.c0)), 0.5527055940780153, LIKE(rt1.c2, rt1.c1, '㾉'))))) ORDER BY rt1.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0 IN ()), ((rt1.c4)OR(v0.c0)), rt1.c4 COLLATE BINARY))>((((((v0.c1)OR(rt1.c5)))OR(v0.c0)), 0.5527055940780153, LIKE(rt1.c2, rt1.c1, '㾉'))))) IS TRUE)  as count FROM v0, rt1 ORDER BY rt1.c2 ASC  NULLS FIRST);
SELECT * FROM v0, rt1 WHERE (((((rt1.c0 IN ()), ((rt1.c4)OR(v0.c0)), rt1.c4 COLLATE BINARY))>((((((v0.c1)OR(rt1.c5)))OR(v0.c0)), 0.5527055940780153, LIKE(rt1.c2, rt1.c1, '㾉'))))) ORDER BY rt1.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0 IN ()), ((rt1.c4)OR(v0.c0)), rt1.c4 COLLATE BINARY))>((((((v0.c1)OR(rt1.c5)))OR(v0.c0)), 0.5527055940780153, LIKE(rt1.c2, rt1.c1, '㾉'))))) IS TRUE)  as count FROM v0, rt1 ORDER BY rt1.c2 ASC  NULLS FIRST);
SELECT * FROM v0, rt1 WHERE (((((rt1.c0 IN ()), ((rt1.c4)OR(v0.c0)), rt1.c4 COLLATE BINARY))>((((((v0.c1)OR(rt1.c5)))OR(v0.c0)), 0.5527055940780153, LIKE(rt1.c2, rt1.c1, '㾉'))))) ORDER BY rt1.c2 ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((- (vt0.c0))) ORDER BY CAST((~ (vt0.c0)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY CAST((~ (vt0.c0)) AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((- (vt0.c0))) ORDER BY CAST((~ (vt0.c0)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY CAST((~ (vt0.c0)) AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((- (vt0.c0))) ORDER BY CAST((~ (vt0.c0)) AS BLOB)  NULLS LAST;
SELECT ALL * FROM v0, vt0 WHERE ((((((((v0.c1))!=((v0.c2))))AND(vt0.c0)))OR((v0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((v0.c1))<>((v0.c2))))AND(vt0.c0)))OR((v0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((((((v0.c1))!=((v0.c2))))AND(vt0.c0)))OR((v0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((v0.c1))<>((v0.c2))))AND(vt0.c0)))OR((v0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((((((v0.c1))!=((v0.c2))))AND(vt0.c0)))OR((v0.c0 IN (vt0.c0)))));
SELECT * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL);
SELECT ALL * FROM rt1, v0, vt0 WHERE (JULIANDAY((- (rt1.c1)), ((((vt0.c0)AND(v0.c2)))OR(v0.c0)), ((((NULL)AND(rt1.c3)))OR(vt0.c0)))) ORDER BY (NOT (((rt1.c0) NOT BETWEEN (rt1.c4) AND (v0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((JULIANDAY((- (rt1.c1)), ((((vt0.c0)AND(v0.c2)))OR(v0.c0)), ((((NULL)AND(rt1.c3)))OR(vt0.c0)))) IS TRUE)  as count FROM rt1, v0, vt0 ORDER BY (NOT (((rt1.c0) NOT BETWEEN (rt1.c4) AND (v0.c1))))  NULLS LAST);
SELECT ALL * FROM rt1, v0, vt0 WHERE (JULIANDAY((- (rt1.c1)), ((((vt0.c0)AND(v0.c2)))OR(v0.c0)), ((((NULL)AND(rt1.c3)))OR(vt0.c0)))) ORDER BY (NOT (((rt1.c0) NOT BETWEEN (rt1.c4) AND (v0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((JULIANDAY((- (rt1.c1)), ((((vt0.c0)AND(v0.c2)))OR(v0.c0)), ((((NULL)AND(rt1.c3)))OR(vt0.c0)))) IS TRUE)  as count FROM rt1, v0, vt0 ORDER BY (NOT (((rt1.c0) NOT BETWEEN (rt1.c4) AND (v0.c1))))  NULLS LAST);
SELECT ALL * FROM rt1, v0, vt0 WHERE (JULIANDAY((- (rt1.c1)), ((((vt0.c0)AND(v0.c2)))OR(v0.c0)), ((((NULL)AND(rt1.c3)))OR(vt0.c0)))) ORDER BY (NOT (((rt1.c0) NOT BETWEEN (rt1.c4) AND (v0.c1))))  NULLS LAST;
SELECT ALL * FROM v0, rt1 INNER JOIN vt0 ON (- (((v0.c0) BETWEEN (v0.c2) AND (rt1.c3)))) WHERE (((((vt0.c0)|(rt1.c0)))+(((rt1.c4) NOT BETWEEN (rt1.c0) AND (rt1.c1))))) ORDER BY (((NULL))<((CASE rt1.c3  WHEN v0.c0 THEN v0.c1 WHEN rt1.c1 THEN rt1.c2 WHEN v0.c2 THEN rt1.c0 ELSE 0.4627723729591364 END))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)|(rt1.c0)))+(((rt1.c4) NOT BETWEEN (rt1.c0) AND (rt1.c1))))) IS TRUE)  as count FROM v0, rt1 INNER JOIN vt0 ON (- (((v0.c0) BETWEEN (v0.c2) AND (rt1.c3)))) ORDER BY (((NULL))<((CASE rt1.c3  WHEN v0.c0 THEN v0.c1 WHEN rt1.c1 THEN rt1.c2 WHEN v0.c2 THEN rt1.c0 ELSE 0.4627723729591364 END))) ASC  NULLS FIRST);
SELECT ALL * FROM v0, rt1 INNER JOIN vt0 ON (- (((v0.c0) BETWEEN (v0.c2) AND (rt1.c3)))) WHERE (((((vt0.c0)|(rt1.c0)))+(((rt1.c4) NOT BETWEEN (rt1.c0) AND (rt1.c1))))) ORDER BY (((NULL))<((CASE rt1.c3  WHEN v0.c0 THEN v0.c1 WHEN rt1.c1 THEN rt1.c2 WHEN v0.c2 THEN rt1.c0 ELSE 0.4627723729591364 END))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)|(rt1.c0)))+(((rt1.c4) NOT BETWEEN (rt1.c0) AND (rt1.c1))))) IS TRUE)  as count FROM v0, rt1 INNER JOIN vt0 ON (- (((v0.c0) BETWEEN (v0.c2) AND (rt1.c3)))) ORDER BY (((NULL))<((CASE rt1.c3  WHEN v0.c0 THEN v0.c1 WHEN rt1.c1 THEN rt1.c2 WHEN v0.c2 THEN rt1.c0 ELSE 0.4627723729591364 END))) ASC  NULLS FIRST);
SELECT ALL * FROM v0, rt1 INNER JOIN vt0 ON (- (((v0.c0) BETWEEN (v0.c2) AND (rt1.c3)))) WHERE (((((vt0.c0)|(rt1.c0)))+(((rt1.c4) NOT BETWEEN (rt1.c0) AND (rt1.c1))))) ORDER BY (((NULL))<((CASE rt1.c3  WHEN v0.c0 THEN v0.c1 WHEN rt1.c1 THEN rt1.c2 WHEN v0.c2 THEN rt1.c0 ELSE 0.4627723729591364 END))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c1)) BETWEEN ((v0.c0)) AND ((v0.c1))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((v0.c1)) BETWEEN ((v0.c0)) AND ((v0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c1)) BETWEEN ((v0.c0)) AND ((v0.c1))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((v0.c1)) BETWEEN ((v0.c0)) AND ((v0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c1)) BETWEEN ((v0.c0)) AND ((v0.c1))) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, v0, rt1 WHERE (rt1.c4) ORDER BY (('鄦d') NOTNULL) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM vt0, v0, rt1 ORDER BY (('鄦d') NOTNULL) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0, rt1 WHERE (rt1.c4) ORDER BY (('鄦d') NOTNULL) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM vt0, v0, rt1 ORDER BY (('鄦d') NOTNULL) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0, rt1 WHERE (rt1.c4) ORDER BY (('鄦d') NOTNULL) COLLATE RTRIM  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (((CAST(0Xffffffffc47e6ee6 AS BLOB))IS((~ (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0Xffffffffc47e6ee6 AS BLOB))IS((~ (rt1.c3))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((CAST(0Xffffffffc47e6ee6 AS BLOB))IS((~ (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0Xffffffffc47e6ee6 AS BLOB))IS((~ (rt1.c3))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((CAST(0Xffffffffc47e6ee6 AS BLOB))IS((~ (rt1.c3)))));
SELECT ALL * FROM rt1, vt0, v0 WHERE ((((CAST(rt1.c1 AS NUMERIC)))>=((CASE rt1.c2  WHEN v0.c0 THEN rt1.c3 WHEN rt1.c3 THEN vt0.c0 WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c3 WHEN vt0.c0 THEN v0.c2 END)))) ORDER BY CAST((-1671319764 IN ()) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CAST(rt1.c1 AS NUMERIC)))>=((CASE rt1.c2  WHEN v0.c0 THEN rt1.c3 WHEN rt1.c3 THEN vt0.c0 WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c3 WHEN vt0.c0 THEN v0.c2 END)))) IS TRUE)  as count FROM rt1, vt0, v0 ORDER BY CAST((-1671319764 IN ()) AS BLOB) DESC  NULLS LAST);
SELECT ALL * FROM rt1, vt0, v0 WHERE ((((CAST(rt1.c1 AS NUMERIC)))>=((CASE rt1.c2  WHEN v0.c0 THEN rt1.c3 WHEN rt1.c3 THEN vt0.c0 WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c3 WHEN vt0.c0 THEN v0.c2 END)))) ORDER BY CAST((-1671319764 IN ()) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CAST(rt1.c1 AS NUMERIC)))>=((CASE rt1.c2  WHEN v0.c0 THEN rt1.c3 WHEN rt1.c3 THEN vt0.c0 WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c3 WHEN vt0.c0 THEN v0.c2 END)))) IS TRUE)  as count FROM rt1, vt0, v0 ORDER BY CAST((-1671319764 IN ()) AS BLOB) DESC  NULLS LAST);
SELECT ALL * FROM rt1, vt0, v0 WHERE ((((CAST(rt1.c1 AS NUMERIC)))>=((CASE rt1.c2  WHEN v0.c0 THEN rt1.c3 WHEN rt1.c3 THEN vt0.c0 WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c3 WHEN vt0.c0 THEN v0.c2 END)))) ORDER BY CAST((-1671319764 IN ()) AS BLOB) DESC  NULLS LAST;
SELECT ALL * FROM rt1, vt0 WHERE (((((rt1.c0)=(rt1.c4))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)=(rt1.c4))) ISNULL)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((((rt1.c0)=(rt1.c4))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)=(rt1.c4))) ISNULL)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((((rt1.c0)=(rt1.c4))) ISNULL));
SELECT ALL * FROM rt1, v0, vt0 WHERE ((((NOT (x'')))|(((rt1.c4)AND(v0.c1))))) ORDER BY json_insert(((rt1.c0) NOT BETWEEN (vt0.c0) AND (v0.c1)), ((((v0.c0)OR(x'db60')))AND(rt1.c1)), (v0.c2 IN (rt1.c5))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (x'')))|(((rt1.c4)AND(v0.c1))))) IS TRUE)  as count FROM rt1, v0, vt0 ORDER BY json_insert(((rt1.c0) NOT BETWEEN (vt0.c0) AND (v0.c1)), ((((v0.c0)OR(x'db60')))AND(rt1.c1)), (v0.c2 IN (rt1.c5))) ASC);
SELECT ALL * FROM rt1, v0, vt0 WHERE ((((NOT (x'')))|(((rt1.c4)AND(v0.c1))))) ORDER BY json_insert(((rt1.c0) NOT BETWEEN (vt0.c0) AND (v0.c1)), ((((v0.c0)OR(x'db60')))AND(rt1.c1)), (v0.c2 IN (rt1.c5))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (x'')))|(((rt1.c4)AND(v0.c1))))) IS TRUE)  as count FROM rt1, v0, vt0 ORDER BY json_insert(((rt1.c0) NOT BETWEEN (vt0.c0) AND (v0.c1)), ((((v0.c0)OR(x'db60')))AND(rt1.c1)), (v0.c2 IN (rt1.c5))) ASC);
SELECT * FROM rt1 WHERE (((((rt1.c4)GLOB(rt1.c5))) NOT BETWEEN (((((((((rt1.c1)AND(rt1.c5)))OR(rt1.c1)))AND(rt1.c2)))OR(rt1.c5))) AND (((rt1.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c4)GLOB(rt1.c5))) NOT BETWEEN (((((((((rt1.c1)AND(rt1.c5)))OR(rt1.c1)))AND(rt1.c2)))OR(rt1.c5))) AND (((rt1.c1) IS FALSE)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c4)GLOB(rt1.c5))) NOT BETWEEN (((((((((rt1.c1)AND(rt1.c5)))OR(rt1.c1)))AND(rt1.c2)))OR(rt1.c5))) AND (((rt1.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c4)GLOB(rt1.c5))) NOT BETWEEN (((((((((rt1.c1)AND(rt1.c5)))OR(rt1.c1)))AND(rt1.c2)))OR(rt1.c5))) AND (((rt1.c1) IS FALSE)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c4)GLOB(rt1.c5))) NOT BETWEEN (((((((((rt1.c1)AND(rt1.c5)))OR(rt1.c1)))AND(rt1.c2)))OR(rt1.c5))) AND (((rt1.c1) IS FALSE))));
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((rt1.c3)==(rt1.c4)) COLLATE RTRIM) ORDER BY ((NOT (rt1.c0)) IN (SQLITE_SOURCE_ID(), (~ (v0.c1)), ((((((((rt1.c5)AND(rt1.c0)))AND(rt1.c0)))AND(v0.c2)))OR(v0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c3)==(rt1.c4)) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt1 ORDER BY ((NOT (rt1.c0)) IN (SQLITE_SOURCE_ID(), (~ (v0.c1)), ((((((((rt1.c5)AND(rt1.c0)))AND(rt1.c0)))AND(v0.c2)))OR(v0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((rt1.c3)==(rt1.c4)) COLLATE RTRIM) ORDER BY ((NOT (rt1.c0)) IN (SQLITE_SOURCE_ID(), (~ (v0.c1)), ((((((((rt1.c5)AND(rt1.c0)))AND(rt1.c0)))AND(v0.c2)))OR(v0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c3)==(rt1.c4)) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt1 ORDER BY ((NOT (rt1.c0)) IN (SQLITE_SOURCE_ID(), (~ (v0.c1)), ((((((((rt1.c5)AND(rt1.c0)))AND(rt1.c0)))AND(v0.c2)))OR(v0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((rt1.c3)==(rt1.c4)) COLLATE RTRIM) ORDER BY ((NOT (rt1.c0)) IN (SQLITE_SOURCE_ID(), (~ (v0.c1)), ((((((((rt1.c5)AND(rt1.c0)))AND(rt1.c0)))AND(v0.c2)))OR(v0.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON NULL INNER JOIN rt1 ON CAST(rt1.c4 AS REAL) COLLATE RTRIM WHERE ((((((rt1.c3, NULL, v0.c2, rt1.c4, rt1.c5)) NOT BETWEEN ((rt1.c1, v0.c1, v0.c0, rt1.c2, rt1.c1)) AND ((vt0.c0, vt0.c0, v0.c1, rt1.c5, rt1.c3)))) BETWEEN (TOTAL_CHANGES()) AND (vt0.c0))) ORDER BY (+ (((rt1.c3) BETWEEN (rt1.c1) AND (v0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c3, NULL, v0.c2, rt1.c4, rt1.c5)) NOT BETWEEN ((rt1.c1, v0.c1, v0.c0, rt1.c2, rt1.c1)) AND ((vt0.c0, vt0.c0, v0.c1, rt1.c5, rt1.c3)))) BETWEEN (TOTAL_CHANGES()) AND (vt0.c0))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON NULL INNER JOIN rt1 ON CAST(rt1.c4 AS REAL) COLLATE RTRIM ORDER BY (+ (((rt1.c3) BETWEEN (rt1.c1) AND (v0.c2)))) DESC);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON NULL INNER JOIN rt1 ON CAST(rt1.c4 AS REAL) COLLATE RTRIM WHERE ((((((rt1.c3, NULL, v0.c2, rt1.c4, rt1.c5)) NOT BETWEEN ((rt1.c1, v0.c1, v0.c0, rt1.c2, rt1.c1)) AND ((vt0.c0, vt0.c0, v0.c1, rt1.c5, rt1.c3)))) BETWEEN (TOTAL_CHANGES()) AND (vt0.c0))) ORDER BY (+ (((rt1.c3) BETWEEN (rt1.c1) AND (v0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c3, NULL, v0.c2, rt1.c4, rt1.c5)) NOT BETWEEN ((rt1.c1, v0.c1, v0.c0, rt1.c2, rt1.c1)) AND ((vt0.c0, vt0.c0, v0.c1, rt1.c5, rt1.c3)))) BETWEEN (TOTAL_CHANGES()) AND (vt0.c0))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON NULL INNER JOIN rt1 ON CAST(rt1.c4 AS REAL) COLLATE RTRIM ORDER BY (+ (((rt1.c3) BETWEEN (rt1.c1) AND (v0.c2)))) DESC);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON NULL INNER JOIN rt1 ON CAST(rt1.c4 AS REAL) COLLATE RTRIM WHERE ((((((rt1.c3, NULL, v0.c2, rt1.c4, rt1.c5)) NOT BETWEEN ((rt1.c1, v0.c1, v0.c0, rt1.c2, rt1.c1)) AND ((vt0.c0, vt0.c0, v0.c1, rt1.c5, rt1.c3)))) BETWEEN (TOTAL_CHANGES()) AND (vt0.c0))) ORDER BY (+ (((rt1.c3) BETWEEN (rt1.c1) AND (v0.c2)))) DESC;
SELECT ALL * FROM rt1, vt0, v0 WHERE (CASE (~ (0.9712361810156301))  WHEN CAST(v0.c2 AS NUMERIC) THEN (rt1.c0 IN ()) ELSE (rt1.c4 IN ()) END) ORDER BY json_remove(SQLITE_VERSION(), (rt1.c0 IN (rt1.c1))), ''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (~ (0.9712361810156301))  WHEN CAST(v0.c2 AS NUMERIC) THEN (rt1.c0 IN ()) ELSE (rt1.c4 IN ()) END) IS TRUE)  as count FROM rt1, vt0, v0 ORDER BY json_remove(SQLITE_VERSION(), (rt1.c0 IN (rt1.c1))), ''  NULLS LAST);
SELECT ALL * FROM rt1, vt0, v0 WHERE (CASE (~ (0.9712361810156301))  WHEN CAST(v0.c2 AS NUMERIC) THEN (rt1.c0 IN ()) ELSE (rt1.c4 IN ()) END) ORDER BY json_remove(SQLITE_VERSION(), (rt1.c0 IN (rt1.c1))), ''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (~ (0.9712361810156301))  WHEN CAST(v0.c2 AS NUMERIC) THEN (rt1.c0 IN ()) ELSE (rt1.c4 IN ()) END) IS TRUE)  as count FROM rt1, vt0, v0 ORDER BY json_remove(SQLITE_VERSION(), (rt1.c0 IN (rt1.c1))), ''  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 NATURAL JOIN v0 WHERE ((((((v0.c0, rt1.c3, rt1.c1)) BETWEEN ((rt1.c5, vt0.c0, v0.c2)) AND ((v0.c2, v0.c2, rt1.c4))))GLOB(v0.c2 COLLATE BINARY))) ORDER BY ((rt1.c5 COLLATE RTRIM) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0, rt1.c3, rt1.c1)) BETWEEN ((rt1.c5, vt0.c0, v0.c2)) AND ((v0.c2, v0.c2, rt1.c4))))GLOB(v0.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt1 NATURAL JOIN v0 ORDER BY ((rt1.c5 COLLATE RTRIM) NOTNULL) ASC);
SELECT ALL COUNT(*) FROM vt0, rt1 NATURAL JOIN v0 WHERE ((((((v0.c0, rt1.c3, rt1.c1)) BETWEEN ((rt1.c5, vt0.c0, v0.c2)) AND ((v0.c2, v0.c2, rt1.c4))))GLOB(v0.c2 COLLATE BINARY))) ORDER BY ((rt1.c5 COLLATE RTRIM) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0, rt1.c3, rt1.c1)) BETWEEN ((rt1.c5, vt0.c0, v0.c2)) AND ((v0.c2, v0.c2, rt1.c4))))GLOB(v0.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt1 NATURAL JOIN v0 ORDER BY ((rt1.c5 COLLATE RTRIM) NOTNULL) ASC);
SELECT ALL COUNT(*) FROM vt0, rt1 NATURAL JOIN v0 WHERE ((((((v0.c0, rt1.c3, rt1.c1)) BETWEEN ((rt1.c5, vt0.c0, v0.c2)) AND ((v0.c2, v0.c2, rt1.c4))))GLOB(v0.c2 COLLATE BINARY))) ORDER BY ((rt1.c5 COLLATE RTRIM) NOTNULL) ASC;
SELECT COUNT(*) FROM vt0 WHERE ((((CAST(vt0.c0 AS INTEGER)))=(((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))) ORDER BY (((((vt0.c0) NOT NULL)))<((CAST(vt0.c0 AS TEXT)))) DESC;
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS INTEGER)))=(((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) NOT NULL)))<((CAST(vt0.c0 AS TEXT)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((CAST(vt0.c0 AS INTEGER)))=(((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))) ORDER BY (((((vt0.c0) NOT NULL)))<((CAST(vt0.c0 AS TEXT)))) DESC;
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS INTEGER)))=(((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) NOT NULL)))<((CAST(vt0.c0 AS TEXT)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((CAST(vt0.c0 AS INTEGER)))=(((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))) ORDER BY (((((vt0.c0) NOT NULL)))<((CAST(vt0.c0 AS TEXT)))) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c1)) AS REAL)) ORDER BY CASE ((v0.c0)>>(v0.c1))  WHEN CAST(v0.c1 AS TEXT) THEN 0x409bbbae WHEN (((v0.c2))<>((v0.c0))) THEN v0.c1 COLLATE NOCASE WHEN v0.c2 COLLATE NOCASE THEN CAST(v0.c1 AS INTEGER) END;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c1)) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY CASE ((v0.c0)>>(v0.c1))  WHEN CAST(v0.c1 AS TEXT) THEN 0X409bbbae WHEN (((v0.c2))!=((v0.c0))) THEN v0.c1 COLLATE NOCASE WHEN v0.c2 COLLATE NOCASE THEN CAST(v0.c1 AS INTEGER) END);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c1)) AS REAL)) ORDER BY CASE ((v0.c0)>>(v0.c1))  WHEN CAST(v0.c1 AS TEXT) THEN 0x409bbbae WHEN (((v0.c2))<>((v0.c0))) THEN v0.c1 COLLATE NOCASE WHEN v0.c2 COLLATE NOCASE THEN CAST(v0.c1 AS INTEGER) END;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c1)) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY CASE ((v0.c0)>>(v0.c1))  WHEN CAST(v0.c1 AS TEXT) THEN 0X409bbbae WHEN (((v0.c2))!=((v0.c0))) THEN v0.c1 COLLATE NOCASE WHEN v0.c2 COLLATE NOCASE THEN CAST(v0.c1 AS INTEGER) END);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c1)) AS REAL)) ORDER BY CASE ((v0.c0)>>(v0.c1))  WHEN CAST(v0.c1 AS TEXT) THEN 0x409bbbae WHEN (((v0.c2))<>((v0.c0))) THEN v0.c1 COLLATE NOCASE WHEN v0.c2 COLLATE NOCASE THEN CAST(v0.c1 AS INTEGER) END;
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c1))==((v0.c2))))GLOB('3''Qt)\rRXy'))) ORDER BY (((v0.c2 IN ()))/(((v0.c1)&(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c1))=((v0.c2))))GLOB('3''Qt)\rRXy'))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c2 IN ()))/(((v0.c1)&(v0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c1))==((v0.c2))))GLOB('3''Qt)\rRXy'))) ORDER BY (((v0.c2 IN ()))/(((v0.c1)&(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c1))=((v0.c2))))GLOB('3''Qt)\rRXy'))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c2 IN ()))/(((v0.c1)&(v0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c1))==((v0.c2))))GLOB('3''Qt)\rRXy'))) ORDER BY (((v0.c2 IN ()))/(((v0.c1)&(v0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((CASE WHEN v0.c1 THEN NULL ELSE v0.c0 END) IS TRUE)) ORDER BY ((((v0.c1) NOT NULL))OR((+ (v0.c0))))  NULLS LAST, 'b\bU6D9(W' DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c1 THEN NULL ELSE v0.c0 END) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c1) NOT NULL))OR((+ (v0.c0))))  NULLS LAST, 'b\bU6D9(W' DESC);
SELECT COUNT(*) FROM v0 WHERE (((CASE WHEN v0.c1 THEN NULL ELSE v0.c0 END) IS TRUE)) ORDER BY ((((v0.c1) NOT NULL))OR((+ (v0.c0))))  NULLS LAST, 'b\bU6D9(W' DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c1 THEN NULL ELSE v0.c0 END) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c1) NOT NULL))OR((+ (v0.c0))))  NULLS LAST, 'b\bU6D9(W' DESC);
SELECT COUNT(*) FROM v0 WHERE (((CASE WHEN v0.c1 THEN NULL ELSE v0.c0 END) IS TRUE)) ORDER BY ((((v0.c1) NOT NULL))OR((+ (v0.c0))))  NULLS LAST, 'b\bU6D9(W' DESC;
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 'lLviuQ<\n' END THEN CAST(vt0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 'lLviuQ<\n' END THEN CAST(vt0.c0 AS TEXT) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 'lLviuQ<\n' END THEN CAST(vt0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 'lLviuQ<\n' END THEN CAST(vt0.c0 AS TEXT) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 'lLviuQ<\n' END THEN CAST(vt0.c0 AS TEXT) END);
SELECT ALL * FROM vt0 INNER JOIN v0 ON ((CAST(rt1.c1 AS INTEGER))<((~ (rt1.c0)))) LEFT OUTER JOIN rt1 ON ((((((v0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c5)))OR(vt0.c0 COLLATE NOCASE)))AND((+ (v0.c1)))) WHERE ((((v0.c2) BETWEEN (v0.c1) AND (rt1.c5)) IN (((rt1.c3) BETWEEN (v0.c0) AND (vt0.c0)), ((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c0))))) ORDER BY ((((rt1.c5) IS TRUE))<>(((rt1.c0)<('-287243563')))), CAST(x'' AS REAL) DESC  NULLS LAST, ((((rt1.c2) BETWEEN (rt1.c0) AND (vt0.c0)))IS NOT(((((rt1.c3)AND(rt1.c0)))OR(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2) BETWEEN (v0.c1) AND (rt1.c5)) IN (((rt1.c3) BETWEEN (v0.c0) AND (vt0.c0)), ((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((CAST(rt1.c1 AS INTEGER))<((~ (rt1.c0)))) LEFT OUTER JOIN rt1 ON ((((((v0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c5)))OR(vt0.c0 COLLATE NOCASE)))AND((+ (v0.c1)))) ORDER BY ((((rt1.c5) IS TRUE))!=(((rt1.c0)<('-287243563')))), CAST(x'' AS REAL) DESC  NULLS LAST, ((((rt1.c2) BETWEEN (rt1.c0) AND (vt0.c0)))IS NOT(((((rt1.c3)AND(rt1.c0)))OR(vt0.c0)))) ASC);
SELECT ALL * FROM vt0 INNER JOIN v0 ON ((CAST(rt1.c1 AS INTEGER))<((~ (rt1.c0)))) LEFT OUTER JOIN rt1 ON ((((((v0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c5)))OR(vt0.c0 COLLATE NOCASE)))AND((+ (v0.c1)))) WHERE ((((v0.c2) BETWEEN (v0.c1) AND (rt1.c5)) IN (((rt1.c3) BETWEEN (v0.c0) AND (vt0.c0)), ((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c0))))) ORDER BY ((((rt1.c5) IS TRUE))<>(((rt1.c0)<('-287243563')))), CAST(x'' AS REAL) DESC  NULLS LAST, ((((rt1.c2) BETWEEN (rt1.c0) AND (vt0.c0)))IS NOT(((((rt1.c3)AND(rt1.c0)))OR(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2) BETWEEN (v0.c1) AND (rt1.c5)) IN (((rt1.c3) BETWEEN (v0.c0) AND (vt0.c0)), ((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((CAST(rt1.c1 AS INTEGER))<((~ (rt1.c0)))) LEFT OUTER JOIN rt1 ON ((((((v0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c5)))OR(vt0.c0 COLLATE NOCASE)))AND((+ (v0.c1)))) ORDER BY ((((rt1.c5) IS TRUE))!=(((rt1.c0)<('-287243563')))), CAST(x'' AS REAL) DESC  NULLS LAST, ((((rt1.c2) BETWEEN (rt1.c0) AND (vt0.c0)))IS NOT(((((rt1.c3)AND(rt1.c0)))OR(vt0.c0)))) ASC);
SELECT ALL * FROM vt0 INNER JOIN v0 ON ((CAST(rt1.c1 AS INTEGER))<((~ (rt1.c0)))) LEFT OUTER JOIN rt1 ON ((((((v0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c5)))OR(vt0.c0 COLLATE NOCASE)))AND((+ (v0.c1)))) WHERE ((((v0.c2) BETWEEN (v0.c1) AND (rt1.c5)) IN (((rt1.c3) BETWEEN (v0.c0) AND (vt0.c0)), ((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c0))))) ORDER BY ((((rt1.c5) IS TRUE))<>(((rt1.c0)<('-287243563')))), CAST(x'' AS REAL) DESC  NULLS LAST, ((((rt1.c2) BETWEEN (rt1.c0) AND (vt0.c0)))IS NOT(((((rt1.c3)AND(rt1.c0)))OR(vt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((INSTR(v0.c0, v0.c2))<=((((vt0.c0, v0.c2, v0.c2)) BETWEEN ((v0.c0, vt0.c0, v0.c1)) AND ((vt0.c0, v0.c2, v0.c0)))))) ORDER BY ((NOT (0.035325200603381623)) IN ());
SELECT SUM(count) FROM (SELECT ((((INSTR(v0.c0, v0.c2))<=((((vt0.c0, v0.c2, v0.c2)) BETWEEN ((v0.c0, vt0.c0, v0.c1)) AND ((vt0.c0, v0.c2, v0.c0)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((NOT (0.035325200603381623)) IN ()));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((INSTR(v0.c0, v0.c2))<=((((vt0.c0, v0.c2, v0.c2)) BETWEEN ((v0.c0, vt0.c0, v0.c1)) AND ((vt0.c0, v0.c2, v0.c0)))))) ORDER BY ((NOT (0.035325200603381623)) IN ());
SELECT SUM(count) FROM (SELECT ((((INSTR(v0.c0, v0.c2))<=((((vt0.c0, v0.c2, v0.c2)) BETWEEN ((v0.c0, vt0.c0, v0.c1)) AND ((vt0.c0, v0.c2, v0.c0)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((NOT (0.035325200603381623)) IN ()));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((INSTR(v0.c0, v0.c2))<=((((vt0.c0, v0.c2, v0.c2)) BETWEEN ((v0.c0, vt0.c0, v0.c1)) AND ((vt0.c0, v0.c2, v0.c0)))))) ORDER BY ((NOT (0.035325200603381623)) IN ());
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2) ISNULL))&(v0.c2 COLLATE RTRIM))) ORDER BY v0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c2) ISNULL))&(v0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY v0.c1 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2) ISNULL))&(v0.c2 COLLATE RTRIM))) ORDER BY v0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c2) ISNULL))&(v0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY v0.c1 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2) ISNULL))&(v0.c2 COLLATE RTRIM))) ORDER BY v0.c1 DESC  NULLS FIRST;
SELECT * FROM v0, rt1, vt0 WHERE (vt0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM v0, rt1, vt0);
SELECT * FROM v0, rt1, vt0 WHERE (vt0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM v0, rt1, vt0);
SELECT * FROM v0, rt1, vt0 WHERE (vt0.c0 COLLATE BINARY);
SELECT * FROM v0, rt1 WHERE (rt1.c3) ORDER BY CASE WHEN ((v0.c0)||(rt1.c5)) THEN (rt1.c1 IN ()) ELSE ((rt1.c1)+(v0.c2)) END;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM v0, rt1 ORDER BY CASE WHEN ((v0.c0)||(rt1.c5)) THEN (rt1.c1 IN ()) ELSE ((rt1.c1)+(v0.c2)) END);
SELECT * FROM v0, rt1 WHERE (rt1.c3) ORDER BY CASE WHEN ((v0.c0)||(rt1.c5)) THEN (rt1.c1 IN ()) ELSE ((rt1.c1)+(v0.c2)) END;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM v0, rt1 ORDER BY CASE WHEN ((v0.c0)||(rt1.c5)) THEN (rt1.c1 IN ()) ELSE ((rt1.c1)+(v0.c2)) END);
SELECT * FROM v0, rt1 WHERE (rt1.c3) ORDER BY CASE WHEN ((v0.c0)||(rt1.c5)) THEN (rt1.c1 IN ()) ELSE ((rt1.c1)+(v0.c2)) END;
SELECT ALL * FROM vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY (~ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (~ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY (~ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (~ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY (~ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC;
SELECT ALL COUNT(*) FROM v0, rt1 RIGHT OUTER JOIN vt0 ON ((((((((rt1.c0)AND(CAST(rt1.c4 AS NUMERIC))))AND((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))))))AND(rt1.c4 COLLATE NOCASE)))AND(((rt1.c5) BETWEEN (v0.c1) AND (vt0.c0)))) WHERE (((CAST(rt1.c4 AS NUMERIC)) BETWEEN (rt1.c1 COLLATE BINARY) AND (rtreenode(v0.c1, rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c4 AS NUMERIC)) BETWEEN (rt1.c1 COLLATE BINARY) AND (rtreenode(v0.c1, rt1.c0)))) IS TRUE)  as count FROM v0, rt1 RIGHT OUTER JOIN vt0 ON ((((((((rt1.c0)AND(CAST(rt1.c4 AS NUMERIC))))AND((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))))))AND(rt1.c4 COLLATE NOCASE)))AND(((rt1.c5) BETWEEN (v0.c1) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM v0, rt1 RIGHT OUTER JOIN vt0 ON ((((((((rt1.c0)AND(CAST(rt1.c4 AS NUMERIC))))AND((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))))))AND(rt1.c4 COLLATE NOCASE)))AND(((rt1.c5) BETWEEN (v0.c1) AND (vt0.c0)))) WHERE (((CAST(rt1.c4 AS NUMERIC)) BETWEEN (rt1.c1 COLLATE BINARY) AND (rtreenode(v0.c1, rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c4 AS NUMERIC)) BETWEEN (rt1.c1 COLLATE BINARY) AND (rtreenode(v0.c1, rt1.c0)))) IS TRUE)  as count FROM v0, rt1 RIGHT OUTER JOIN vt0 ON ((((((((rt1.c0)AND(CAST(rt1.c4 AS NUMERIC))))AND((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))))))AND(rt1.c4 COLLATE NOCASE)))AND(((rt1.c5) BETWEEN (v0.c1) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM v0, rt1 RIGHT OUTER JOIN vt0 ON ((((((((rt1.c0)AND(CAST(rt1.c4 AS NUMERIC))))AND((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))))))AND(rt1.c4 COLLATE NOCASE)))AND(((rt1.c5) BETWEEN (v0.c1) AND (vt0.c0)))) WHERE (((CAST(rt1.c4 AS NUMERIC)) BETWEEN (rt1.c1 COLLATE BINARY) AND (rtreenode(v0.c1, rt1.c0))));
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE (((rt1.c3))<((rt1.c2)))  WHEN ((((((((rt1.c3)OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c2)))OR(rt1.c2)) THEN CASE rt1.c4  WHEN rt1.c1 THEN rt1.c5 END END) ORDER BY ((((((rt1.c4) NOTNULL))OR(rt1.c1)))OR('Ut%?')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt1.c3))<((rt1.c2)))  WHEN ((((((((rt1.c3)OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c2)))OR(rt1.c2)) THEN CASE rt1.c4  WHEN rt1.c1 THEN rt1.c5 END END) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c4) NOTNULL))OR(rt1.c1)))OR('Ut%?')) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE (((rt1.c3))<((rt1.c2)))  WHEN ((((((((rt1.c3)OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c2)))OR(rt1.c2)) THEN CASE rt1.c4  WHEN rt1.c1 THEN rt1.c5 END END) ORDER BY ((((((rt1.c4) NOTNULL))OR(rt1.c1)))OR('Ut%?')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt1.c3))<((rt1.c2)))  WHEN ((((((((rt1.c3)OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c2)))OR(rt1.c2)) THEN CASE rt1.c4  WHEN rt1.c1 THEN rt1.c5 END END) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c4) NOTNULL))OR(rt1.c1)))OR('Ut%?')) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE (((rt1.c3))<((rt1.c2)))  WHEN ((((((((rt1.c3)OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c2)))OR(rt1.c2)) THEN CASE rt1.c4  WHEN rt1.c1 THEN rt1.c5 END END) ORDER BY ((((((rt1.c4) NOTNULL))OR(rt1.c1)))OR('Ut%?')) DESC  NULLS FIRST;
SELECT * FROM v0 NOT INDEXED, rt1 WHERE ((((~ (0.4557085079914074)))>>(((rt1.c5)<(rt1.c1))))) ORDER BY (((((rt1.c3, v0.c1, rt1.c2)) BETWEEN ((rt1.c3, v0.c1, rt1.c0)) AND ((rt1.c5, v0.c0, NULL))))LIKE(UNLIKELY(rt1.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (0.4557085079914074)))>>(((rt1.c5)<(rt1.c1))))) IS TRUE)  as count FROM v0, rt1 ORDER BY (((((rt1.c3, v0.c1, rt1.c2)) BETWEEN ((rt1.c3, v0.c1, rt1.c0)) AND ((rt1.c5, v0.c0, NULL))))LIKE(UNLIKELY(rt1.c1))) DESC  NULLS LAST);
SELECT * FROM v0 NOT INDEXED, rt1 WHERE ((((~ (0.4557085079914074)))>>(((rt1.c5)<(rt1.c1))))) ORDER BY (((((rt1.c3, v0.c1, rt1.c2)) BETWEEN ((rt1.c3, v0.c1, rt1.c0)) AND ((rt1.c5, v0.c0, NULL))))LIKE(UNLIKELY(rt1.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (0.4557085079914074)))>>(((rt1.c5)<(rt1.c1))))) IS TRUE)  as count FROM v0, rt1 ORDER BY (((((rt1.c3, v0.c1, rt1.c2)) BETWEEN ((rt1.c3, v0.c1, rt1.c0)) AND ((rt1.c5, v0.c0, NULL))))LIKE(UNLIKELY(rt1.c1))) DESC  NULLS LAST);
SELECT * FROM v0 NOT INDEXED, rt1 WHERE ((((~ (0.4557085079914074)))>>(((rt1.c5)<(rt1.c1))))) ORDER BY (((((rt1.c3, v0.c1, rt1.c2)) BETWEEN ((rt1.c3, v0.c1, rt1.c0)) AND ((rt1.c5, v0.c0, NULL))))LIKE(UNLIKELY(rt1.c1))) DESC  NULLS LAST;
SELECT * FROM v0, rt1 WHERE (((((rt1.c0)AND(rt1.c2)))OR(rt1.c3)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)AND(rt1.c2)))OR(rt1.c3)) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0, rt1 WHERE (((((rt1.c0)AND(rt1.c2)))OR(rt1.c3)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)AND(rt1.c2)))OR(rt1.c3)) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0, rt1 WHERE (((((rt1.c0)AND(rt1.c2)))OR(rt1.c3)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt1 WHERE ((+ (rt1.c5 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt1.c5 COLLATE BINARY))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((+ (rt1.c5 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt1.c5 COLLATE BINARY))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((+ (rt1.c5 COLLATE BINARY)));
SELECT * FROM vt0, v0, rt1 WHERE (x'') ORDER BY ((json_array(5.29929678E8, rt1.c0)) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, v0, rt1 ORDER BY ((json_array(5.29929678E8, rt1.c0)) NOT NULL));
SELECT * FROM vt0, v0, rt1 WHERE (x'') ORDER BY ((json_array(5.29929678E8, rt1.c0)) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, v0, rt1 ORDER BY ((json_array(5.29929678E8, rt1.c0)) NOT NULL));
SELECT * FROM vt0, v0, rt1 WHERE (x'') ORDER BY ((json_array(5.29929678E8, rt1.c0)) NOT NULL);
SELECT ALL COUNT(*) FROM vt0, v0 LEFT OUTER JOIN rt1 ON (NOT (((rt1.c1)OR(v0.c0)))) WHERE ((~ (rt1.c5)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt1.c5))) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN rt1 ON (NOT (((rt1.c1)OR(v0.c0)))));
SELECT ALL COUNT(*) FROM vt0, v0 LEFT OUTER JOIN rt1 ON (NOT (((rt1.c1)OR(v0.c0)))) WHERE ((~ (rt1.c5)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt1.c5))) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN rt1 ON (NOT (((rt1.c1)OR(v0.c0)))));
SELECT ALL COUNT(*) FROM vt0, v0 LEFT OUTER JOIN rt1 ON (NOT (((rt1.c1)OR(v0.c0)))) WHERE ((~ (rt1.c5)));
SELECT COUNT(*) FROM v0 WHERE (NULL) ORDER BY v0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY v0.c1 DESC);
SELECT COUNT(*) FROM v0 WHERE (NULL) ORDER BY v0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY v0.c1 DESC);
SELECT COUNT(*) FROM v0 WHERE (NULL) ORDER BY v0.c1 DESC;
SELECT ALL COUNT(*) FROM rt1 WHERE (TRIM(((rt1.c3) ISNULL), CASE WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c5 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c5 THEN rt1.c5 WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c4 END)) ORDER BY ((CASE WHEN rt1.c2 THEN rt1.c4 ELSE rt1.c1 END)/(rt1.c3));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((rt1.c3) ISNULL), CASE WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c5 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c5 THEN rt1.c5 WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c4 END)) IS TRUE)  as count FROM rt1 ORDER BY ((CASE WHEN rt1.c2 THEN rt1.c4 ELSE rt1.c1 END)/(rt1.c3)));
SELECT ALL COUNT(*) FROM rt1 WHERE (TRIM(((rt1.c3) ISNULL), CASE WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c5 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c5 THEN rt1.c5 WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c4 END)) ORDER BY ((CASE WHEN rt1.c2 THEN rt1.c4 ELSE rt1.c1 END)/(rt1.c3));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((rt1.c3) ISNULL), CASE WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c5 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c5 THEN rt1.c5 WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c4 END)) IS TRUE)  as count FROM rt1 ORDER BY ((CASE WHEN rt1.c2 THEN rt1.c4 ELSE rt1.c1 END)/(rt1.c3)));
SELECT ALL COUNT(*) FROM rt1 WHERE (TRIM(((rt1.c3) ISNULL), CASE WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c5 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c5 THEN rt1.c5 WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c4 END)) ORDER BY ((CASE WHEN rt1.c2 THEN rt1.c4 ELSE rt1.c1 END)/(rt1.c3));
SELECT ALL * FROM v0 CROSS JOIN vt0 ON (((vt0.c0)) BETWEEN ((x'')) AND (((((rt1.c0, v0.c2, rt1.c2))>=((v0.c2, rt1.c0, rt1.c1)))))) INNER JOIN rt1 ON (((v0.c1)||('-825176344')) IN ()) WHERE (((((((0.1633631748667954)OR(rt1.c2)))OR(rt1.c5)))IS NOT(((rt1.c4) IS TRUE)))) ORDER BY (((((v0.c1, rt1.c2, -456009553))<=((v0.c1, rt1.c2, v0.c2))))&(((v0.c1) BETWEEN (rt1.c4) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((0.1633631748667954)OR(rt1.c2)))OR(rt1.c5)))IS NOT(((rt1.c4) IS TRUE)))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (((vt0.c0)) BETWEEN ((x'')) AND (((((rt1.c0, v0.c2, rt1.c2))>=((v0.c2, rt1.c0, rt1.c1)))))) INNER JOIN rt1 ON (((v0.c1)||('-825176344')) IN ()) ORDER BY (((((v0.c1, rt1.c2, -456009553))<=((v0.c1, rt1.c2, v0.c2))))&(((v0.c1) BETWEEN (rt1.c4) AND (v0.c0)))));
SELECT ALL * FROM v0 CROSS JOIN vt0 ON (((vt0.c0)) BETWEEN ((x'')) AND (((((rt1.c0, v0.c2, rt1.c2))>=((v0.c2, rt1.c0, rt1.c1)))))) INNER JOIN rt1 ON (((v0.c1)||('-825176344')) IN ()) WHERE (((((((0.1633631748667954)OR(rt1.c2)))OR(rt1.c5)))IS NOT(((rt1.c4) IS TRUE)))) ORDER BY (((((v0.c1, rt1.c2, -456009553))<=((v0.c1, rt1.c2, v0.c2))))&(((v0.c1) BETWEEN (rt1.c4) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((0.1633631748667954)OR(rt1.c2)))OR(rt1.c5)))IS NOT(((rt1.c4) IS TRUE)))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (((vt0.c0)) BETWEEN ((x'')) AND (((((rt1.c0, v0.c2, rt1.c2))>=((v0.c2, rt1.c0, rt1.c1)))))) INNER JOIN rt1 ON (((v0.c1)||('-825176344')) IN ()) ORDER BY (((((v0.c1, rt1.c2, -456009553))<=((v0.c1, rt1.c2, v0.c2))))&(((v0.c1) BETWEEN (rt1.c4) AND (v0.c0)))));
SELECT ALL * FROM v0 CROSS JOIN vt0 ON (((vt0.c0)) BETWEEN ((x'')) AND (((((rt1.c0, v0.c2, rt1.c2))>=((v0.c2, rt1.c0, rt1.c1)))))) INNER JOIN rt1 ON (((v0.c1)||('-825176344')) IN ()) WHERE (((((((0.1633631748667954)OR(rt1.c2)))OR(rt1.c5)))IS NOT(((rt1.c4) IS TRUE)))) ORDER BY (((((v0.c1, rt1.c2, -456009553))<=((v0.c1, rt1.c2, v0.c2))))&(((v0.c1) BETWEEN (rt1.c4) AND (v0.c0))));
SELECT COUNT(*) FROM v0 WHERE ((NOT (CAST(v0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(v0.c1 AS INTEGER)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((NOT (CAST(v0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(v0.c1 AS INTEGER)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((NOT (CAST(v0.c1 AS INTEGER))));
SELECT ALL * FROM v0, rt1 WHERE (CASE WHEN CAST(rt1.c3 AS BLOB) THEN ((v0.c0)=(rt1.c1)) END) ORDER BY (x'' COLLATE BINARY IN ((((v0.c0))>((rt1.c4)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt1.c3 AS BLOB) THEN ((v0.c0)==(rt1.c1)) END) IS TRUE)  as count FROM v0, rt1 ORDER BY (x'' COLLATE BINARY IN ((((v0.c0))>((rt1.c4)))))  NULLS FIRST);
SELECT ALL * FROM v0, rt1 WHERE (CASE WHEN CAST(rt1.c3 AS BLOB) THEN ((v0.c0)=(rt1.c1)) END) ORDER BY (x'' COLLATE BINARY IN ((((v0.c0))>((rt1.c4)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt1.c3 AS BLOB) THEN ((v0.c0)==(rt1.c1)) END) IS TRUE)  as count FROM v0, rt1 ORDER BY (x'' COLLATE BINARY IN ((((v0.c0))>((rt1.c4)))))  NULLS FIRST);
SELECT ALL * FROM v0, rt1 WHERE (CASE WHEN CAST(rt1.c3 AS BLOB) THEN ((v0.c0)=(rt1.c1)) END) ORDER BY (x'' COLLATE BINARY IN ((((v0.c0))>((rt1.c4)))))  NULLS FIRST;
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt1 ON TRIM(DISTINCT MAX(vt0.c0, rt1.c3, rt1.c5, rt1.c3)) FULL OUTER JOIN vt0 ON rt1.c0 WHERE (vt0.c0) ORDER BY (('-456009553') ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON TRIM(DISTINCT MAX(vt0.c0, rt1.c3, rt1.c5, rt1.c3)) FULL OUTER JOIN vt0 ON rt1.c0 ORDER BY (('-456009553') ISNULL) ASC);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt1 ON TRIM(DISTINCT MAX(vt0.c0, rt1.c3, rt1.c5, rt1.c3)) FULL OUTER JOIN vt0 ON rt1.c0 WHERE (vt0.c0) ORDER BY (('-456009553') ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON TRIM(DISTINCT MAX(vt0.c0, rt1.c3, rt1.c5, rt1.c3)) FULL OUTER JOIN vt0 ON rt1.c0 ORDER BY (('-456009553') ISNULL) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (ABS(x''));
SELECT SUM(count) FROM (SELECT ((ABS(x'')) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (ABS(x''));
SELECT SUM(count) FROM (SELECT ((ABS(x'')) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (ABS(x''));
SELECT * FROM v0 INNER JOIN rt1 ON (((((rt1.c1))<=((v0.c2))))AND(CASE WHEN v0.c2 THEN v0.c2 END)) WHERE (((((v0.c0)LIKE(rt1.c5)))>=((((rt1.c5)) NOT BETWEEN ((')b<9')) AND ((v0.c0)))))) ORDER BY ((NULLIF(DISTINCT rt1.c0, rt1.c0))>>((rt1.c4 IN (v0.c2)))) DESC  NULLS LAST, v0.c0, HEX(((x'0bb9')=(rt1.c3)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)LIKE(rt1.c5)))>=((((rt1.c5)) NOT BETWEEN ((')b<9')) AND ((v0.c0)))))) IS TRUE)  as count FROM v0 INNER JOIN rt1 ON (((((rt1.c1))<=((v0.c2))))AND(CASE WHEN v0.c2 THEN v0.c2 END)) ORDER BY ((NULLIF(DISTINCT rt1.c0, rt1.c0))>>((rt1.c4 IN (v0.c2)))) DESC  NULLS LAST, v0.c0, HEX(((x'0bb9')=(rt1.c3)))  NULLS FIRST);
SELECT * FROM v0 INNER JOIN rt1 ON (((((rt1.c1))<=((v0.c2))))AND(CASE WHEN v0.c2 THEN v0.c2 END)) WHERE (((((v0.c0)LIKE(rt1.c5)))>=((((rt1.c5)) NOT BETWEEN ((')b<9')) AND ((v0.c0)))))) ORDER BY ((NULLIF(DISTINCT rt1.c0, rt1.c0))>>((rt1.c4 IN (v0.c2)))) DESC  NULLS LAST, v0.c0, HEX(((x'0bb9')=(rt1.c3)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)LIKE(rt1.c5)))>=((((rt1.c5)) NOT BETWEEN ((')b<9')) AND ((v0.c0)))))) IS TRUE)  as count FROM v0 INNER JOIN rt1 ON (((((rt1.c1))<=((v0.c2))))AND(CASE WHEN v0.c2 THEN v0.c2 END)) ORDER BY ((NULLIF(DISTINCT rt1.c0, rt1.c0))>>((rt1.c4 IN (v0.c2)))) DESC  NULLS LAST, v0.c0, HEX(((x'0bb9')=(rt1.c3)))  NULLS FIRST);
SELECT * FROM v0 INNER JOIN rt1 ON (((((rt1.c1))<=((v0.c2))))AND(CASE WHEN v0.c2 THEN v0.c2 END)) WHERE (((((v0.c0)LIKE(rt1.c5)))>=((((rt1.c5)) NOT BETWEEN ((')b<9')) AND ((v0.c0)))))) ORDER BY ((NULLIF(DISTINCT rt1.c0, rt1.c0))>>((rt1.c4 IN (v0.c2)))) DESC  NULLS LAST, v0.c0, HEX(((x'0bb9')=(rt1.c3)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'') IS FALSE)) ORDER BY ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (((vt0.c0)GLOB(vt0.c0)))), NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (((vt0.c0)GLOB(vt0.c0)))), NULL DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'') IS FALSE)) ORDER BY ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (((vt0.c0)GLOB(vt0.c0)))), NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (((vt0.c0)GLOB(vt0.c0)))), NULL DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'') IS FALSE)) ORDER BY ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (((vt0.c0)GLOB(vt0.c0)))), NULL DESC  NULLS FIRST;
SELECT ALL * FROM rt1, v0, vt0 WHERE (((((CHAR(0X3fb979cb))OR(v0.c1)))OR(CASE WHEN rt1.c3 THEN rt1.c2 ELSE v0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((CHAR(0x3fb979cb))OR(v0.c1)))OR(CASE WHEN rt1.c3 THEN rt1.c2 ELSE v0.c2 END))) IS TRUE)  as count FROM rt1, v0, vt0);
SELECT ALL * FROM rt1, v0, vt0 WHERE (((((CHAR(0X3fb979cb))OR(v0.c1)))OR(CASE WHEN rt1.c3 THEN rt1.c2 ELSE v0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((CHAR(0x3fb979cb))OR(v0.c1)))OR(CASE WHEN rt1.c3 THEN rt1.c2 ELSE v0.c2 END))) IS TRUE)  as count FROM rt1, v0, vt0);
SELECT ALL * FROM rt1, v0, vt0 WHERE (((((CHAR(0X3fb979cb))OR(v0.c1)))OR(CASE WHEN rt1.c3 THEN rt1.c2 ELSE v0.c2 END)));
SELECT ALL * FROM v0 WHERE ((+ ((+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((+ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((+ ((+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((+ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((+ ((+ (v0.c0)))));
SELECT ALL * FROM rt1, vt0 WHERE (((('759016174', rt1.c4, rt1.c3)) NOT BETWEEN ((((rt1.c5) IS TRUE), (rt1.c1 IN (rt1.c5, rt1.c4, rt1.c2, 'Rn\nUXcD^')), ((x'') NOTNULL))) AND ((((rt1.c3) IS TRUE), CASE WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c4 END, ((((rt1.c0)OR(rt1.c4)))OR(rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((('759016174', rt1.c4, rt1.c3)) NOT BETWEEN ((((rt1.c5) IS TRUE), (rt1.c1 IN (rt1.c5, rt1.c4, rt1.c2, 'Rn\nUXcD^')), ((x'') NOTNULL))) AND ((((rt1.c3) IS TRUE), CASE WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c4 END, ((((rt1.c0)OR(rt1.c4)))OR(rt1.c0)))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((('759016174', rt1.c4, rt1.c3)) NOT BETWEEN ((((rt1.c5) IS TRUE), (rt1.c1 IN (rt1.c5, rt1.c4, rt1.c2, 'Rn\nUXcD^')), ((x'') NOTNULL))) AND ((((rt1.c3) IS TRUE), CASE WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c4 END, ((((rt1.c0)OR(rt1.c4)))OR(rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((('759016174', rt1.c4, rt1.c3)) NOT BETWEEN ((((rt1.c5) IS TRUE), (rt1.c1 IN (rt1.c5, rt1.c4, rt1.c2, 'Rn\nUXcD^')), ((x'') NOTNULL))) AND ((((rt1.c3) IS TRUE), CASE WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c4 END, ((((rt1.c0)OR(rt1.c4)))OR(rt1.c0)))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((('759016174', rt1.c4, rt1.c3)) NOT BETWEEN ((((rt1.c5) IS TRUE), (rt1.c1 IN (rt1.c5, rt1.c4, rt1.c2, 'Rn\nUXcD^')), ((x'') NOTNULL))) AND ((((rt1.c3) IS TRUE), CASE WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c4 END, ((((rt1.c0)OR(rt1.c4)))OR(rt1.c0))))));
SELECT ALL * FROM rt1, vt0, v0 WHERE ((((((~ (rt1.c3)))AND(((v0.c1) NOT BETWEEN (rt1.c3) AND (rt1.c4)))))OR(rt1.c0))) ORDER BY (~ ((((v0.c1))<=((rt1.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((~ (rt1.c3)))AND(((v0.c1) NOT BETWEEN (rt1.c3) AND (rt1.c4)))))OR(rt1.c0))) IS TRUE)  as count FROM rt1, vt0, v0 ORDER BY (~ ((((v0.c1))<=((rt1.c0))))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, vt0, v0 WHERE ((((((~ (rt1.c3)))AND(((v0.c1) NOT BETWEEN (rt1.c3) AND (rt1.c4)))))OR(rt1.c0))) ORDER BY (~ ((((v0.c1))<=((rt1.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((~ (rt1.c3)))AND(((v0.c1) NOT BETWEEN (rt1.c3) AND (rt1.c4)))))OR(rt1.c0))) IS TRUE)  as count FROM rt1, vt0, v0 ORDER BY (~ ((((v0.c1))<=((rt1.c0))))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, vt0, v0 WHERE ((((((~ (rt1.c3)))AND(((v0.c1) NOT BETWEEN (rt1.c3) AND (rt1.c4)))))OR(rt1.c0))) ORDER BY (~ ((((v0.c1))<=((rt1.c0))))) ASC  NULLS FIRST;
SELECT * FROM rt1 WHERE ((NOT ((NOT (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((NOT (rt1.c3))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((NOT ((NOT (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((NOT (rt1.c3))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((NOT ((NOT (rt1.c3)))));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((vt0.c0)IS(rt1.c2)))>=(((rt1.c5)+(rt1.c0))))) ORDER BY ((((rt1.c5)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS(rt1.c2)))>=(((rt1.c5)+(rt1.c0))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((rt1.c5)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()) ASC);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((vt0.c0)IS(rt1.c2)))>=(((rt1.c5)+(rt1.c0))))) ORDER BY ((((rt1.c5)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS(rt1.c2)))>=(((rt1.c5)+(rt1.c0))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((rt1.c5)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()) ASC);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((vt0.c0)IS(rt1.c2)))>=(((rt1.c5)+(rt1.c0))))) ORDER BY ((((rt1.c5)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()) ASC;
SELECT COUNT(*) FROM vt0, rt1 WHERE ((NOT (((rt1.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c1) ISNULL)))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((NOT (((rt1.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c1) ISNULL)))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((NOT (((rt1.c1) ISNULL))));
SELECT ALL * FROM vt0, v0 WHERE ((v0.c2 IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c2 IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((v0.c2 IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c2 IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((v0.c2 IN ()));
SELECT ALL COUNT(*) FROM vt0, rt1, v0 WHERE (CASE WHEN CASE v0.c2  WHEN v0.c2 THEN rt1.c2 END THEN (((rt1.c3)) NOT BETWEEN ((rt1.c0)) AND ((vt0.c0))) WHEN CAST(rt1.c1 AS REAL) THEN ((rt1.c1) NOT NULL) WHEN (NOT (v0.c0)) THEN (- ('')) ELSE rt1.c5 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE v0.c2  WHEN v0.c2 THEN rt1.c2 END THEN (((rt1.c3)) NOT BETWEEN ((rt1.c0)) AND ((vt0.c0))) WHEN CAST(rt1.c1 AS REAL) THEN ((rt1.c1) NOT NULL) WHEN (NOT (v0.c0)) THEN (- ('')) ELSE rt1.c5 END) IS TRUE)  as count FROM vt0, rt1, v0);
SELECT ALL COUNT(*) FROM vt0, rt1, v0 WHERE (CASE WHEN CASE v0.c2  WHEN v0.c2 THEN rt1.c2 END THEN (((rt1.c3)) NOT BETWEEN ((rt1.c0)) AND ((vt0.c0))) WHEN CAST(rt1.c1 AS REAL) THEN ((rt1.c1) NOT NULL) WHEN (NOT (v0.c0)) THEN (- ('')) ELSE rt1.c5 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE v0.c2  WHEN v0.c2 THEN rt1.c2 END THEN (((rt1.c3)) NOT BETWEEN ((rt1.c0)) AND ((vt0.c0))) WHEN CAST(rt1.c1 AS REAL) THEN ((rt1.c1) NOT NULL) WHEN (NOT (v0.c0)) THEN (- ('')) ELSE rt1.c5 END) IS TRUE)  as count FROM vt0, rt1, v0);
SELECT ALL COUNT(*) FROM vt0, rt1, v0 WHERE (CASE WHEN CASE v0.c2  WHEN v0.c2 THEN rt1.c2 END THEN (((rt1.c3)) NOT BETWEEN ((rt1.c0)) AND ((vt0.c0))) WHEN CAST(rt1.c1 AS REAL) THEN ((rt1.c1) NOT NULL) WHEN (NOT (v0.c0)) THEN (- ('')) ELSE rt1.c5 END);
SELECT COUNT(*) FROM vt0, rt1, v0 WHERE (((rt1.c1) NOT BETWEEN (json_extract('1069119947', rt1.c2)) AND ((((NULL)) BETWEEN ((rt1.c4)) AND ((rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1) NOT BETWEEN (json_extract('1069119947', rt1.c2)) AND ((((NULL)) BETWEEN ((rt1.c4)) AND ((rt1.c1)))))) IS TRUE)  as count FROM vt0, rt1, v0);
SELECT COUNT(*) FROM vt0, rt1, v0 WHERE (((rt1.c1) NOT BETWEEN (json_extract('1069119947', rt1.c2)) AND ((((NULL)) BETWEEN ((rt1.c4)) AND ((rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1) NOT BETWEEN (json_extract('1069119947', rt1.c2)) AND ((((NULL)) BETWEEN ((rt1.c4)) AND ((rt1.c1)))))) IS TRUE)  as count FROM vt0, rt1, v0);
SELECT ALL COUNT(*) FROM v0, vt0, rt1 WHERE ('') ORDER BY (NOT (vt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM v0, vt0, rt1 ORDER BY (NOT (vt0.c0)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0, rt1 WHERE ('') ORDER BY (NOT (vt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM v0, vt0, rt1 ORDER BY (NOT (vt0.c0)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0, rt1 WHERE ('') ORDER BY (NOT (vt0.c0)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt0 CROSS JOIN v0 ON rt1.c4 WHERE (((((((676611871)AND(rt1.c2)))AND(vt0.c0)))||(((('-1292230933'))<((v0.c0)))))) ORDER BY ((rt1.c2) IS FALSE) COLLATE NOCASE COLLATE RTRIM, ((((rt1.c2)=(rt1.c3)))>(((((rt1.c0)OR(rt1.c1)))OR(rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((676611871)AND(rt1.c2)))AND(vt0.c0)))||(((('-1292230933'))<((v0.c0)))))) IS TRUE)  as count FROM rt1, vt0 CROSS JOIN v0 ON rt1.c4 ORDER BY ((rt1.c2) IS FALSE) COLLATE NOCASE COLLATE RTRIM, ((((rt1.c2)==(rt1.c3)))>(((((rt1.c0)OR(rt1.c1)))OR(rt1.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0 CROSS JOIN v0 ON rt1.c4 WHERE (((((((676611871)AND(rt1.c2)))AND(vt0.c0)))||(((('-1292230933'))<((v0.c0)))))) ORDER BY ((rt1.c2) IS FALSE) COLLATE NOCASE COLLATE RTRIM, ((((rt1.c2)=(rt1.c3)))>(((((rt1.c0)OR(rt1.c1)))OR(rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((676611871)AND(rt1.c2)))AND(vt0.c0)))||(((('-1292230933'))<((v0.c0)))))) IS TRUE)  as count FROM rt1, vt0 CROSS JOIN v0 ON rt1.c4 ORDER BY ((rt1.c2) IS FALSE) COLLATE NOCASE COLLATE RTRIM, ((((rt1.c2)==(rt1.c3)))>(((((rt1.c0)OR(rt1.c1)))OR(rt1.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0 CROSS JOIN v0 ON rt1.c4 WHERE (((((((676611871)AND(rt1.c2)))AND(vt0.c0)))||(((('-1292230933'))<((v0.c0)))))) ORDER BY ((rt1.c2) IS FALSE) COLLATE NOCASE COLLATE RTRIM, ((((rt1.c2)=(rt1.c3)))>(((((rt1.c0)OR(rt1.c1)))OR(rt1.c2))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, v0, vt0 WHERE ((((rt1.c0, x'707c68a0', vt0.c0)) NOT BETWEEN (((((rt1.c3)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c4))), rt1.c2, CAST(rt1.c2 AS REAL))) AND ((0.0031929431686479326 COLLATE NOCASE, ((rt1.c1) IS FALSE), v0.c0))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0, x'707c68a0', vt0.c0)) NOT BETWEEN (((((rt1.c3)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c4))), rt1.c2, CAST(rt1.c2 AS REAL))) AND ((0.0031929431686479326 COLLATE NOCASE, ((rt1.c1) IS FALSE), v0.c0)))) IS TRUE)  as count FROM rt1, v0, vt0);
SELECT ALL COUNT(*) FROM rt1, v0, vt0 WHERE ((((rt1.c0, x'707c68a0', vt0.c0)) NOT BETWEEN (((((rt1.c3)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c4))), rt1.c2, CAST(rt1.c2 AS REAL))) AND ((0.0031929431686479326 COLLATE NOCASE, ((rt1.c1) IS FALSE), v0.c0))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0, x'707c68a0', vt0.c0)) NOT BETWEEN (((((rt1.c3)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c4))), rt1.c2, CAST(rt1.c2 AS REAL))) AND ((0.0031929431686479326 COLLATE NOCASE, ((rt1.c1) IS FALSE), v0.c0)))) IS TRUE)  as count FROM rt1, v0, vt0);
SELECT ALL COUNT(*) FROM rt1, v0, vt0 WHERE ((((rt1.c0, x'707c68a0', vt0.c0)) NOT BETWEEN (((((rt1.c3)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c4))), rt1.c2, CAST(rt1.c2 AS REAL))) AND ((0.0031929431686479326 COLLATE NOCASE, ((rt1.c1) IS FALSE), v0.c0))));
SELECT * FROM v0 WHERE ((+ (CAST(x'327b' AS BLOB)))) ORDER BY CAST(((v0.c0)%('RH!kWMB肴')) AS BLOB)  NULLS FIRST, (((v0.c1)) BETWEEN ((v0.c2)) AND (((v0.c0 IN ())))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(x'327b' AS BLOB)))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0)%('RH!kWMB肴')) AS BLOB)  NULLS FIRST, (((v0.c1)) BETWEEN ((v0.c2)) AND (((v0.c0 IN ())))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE ((+ (CAST(x'327b' AS BLOB)))) ORDER BY CAST(((v0.c0)%('RH!kWMB肴')) AS BLOB)  NULLS FIRST, (((v0.c1)) BETWEEN ((v0.c2)) AND (((v0.c0 IN ())))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(x'327b' AS BLOB)))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0)%('RH!kWMB肴')) AS BLOB)  NULLS FIRST, (((v0.c1)) BETWEEN ((v0.c2)) AND (((v0.c0 IN ())))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE ((+ (CAST(x'327b' AS BLOB)))) ORDER BY CAST(((v0.c0)%('RH!kWMB肴')) AS BLOB)  NULLS FIRST, (((v0.c1)) BETWEEN ((v0.c2)) AND (((v0.c0 IN ())))) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 NATURAL JOIN rt1 WHERE (((vt0.c0 COLLATE RTRIM) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM v0, vt0 NATURAL JOIN rt1 WHERE (((vt0.c0 COLLATE RTRIM) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM v0, vt0 NATURAL JOIN rt1 WHERE (((vt0.c0 COLLATE RTRIM) NOT NULL));
SELECT ALL COUNT(*) FROM vt0, rt1, v0 WHERE (((((0X2365fbb2)AND((- (v0.c2)))))OR(((((((((rt1.c5)AND(rt1.c0)))OR(v0.c0)))AND(vt0.c0)))AND(rt1.c0))))) ORDER BY CAST(v0.c1 COLLATE BINARY AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((((((0X2365fbb2)AND((- (v0.c2)))))OR(((((((((rt1.c5)AND(rt1.c0)))OR(v0.c0)))AND(vt0.c0)))AND(rt1.c0))))) IS TRUE)  as count FROM vt0, rt1, v0 ORDER BY CAST(v0.c1 COLLATE BINARY AS BLOB) ASC);
SELECT ALL COUNT(*) FROM vt0, rt1, v0 WHERE (((((0X2365fbb2)AND((- (v0.c2)))))OR(((((((((rt1.c5)AND(rt1.c0)))OR(v0.c0)))AND(vt0.c0)))AND(rt1.c0))))) ORDER BY CAST(v0.c1 COLLATE BINARY AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((((((0X2365fbb2)AND((- (v0.c2)))))OR(((((((((rt1.c5)AND(rt1.c0)))OR(v0.c0)))AND(vt0.c0)))AND(rt1.c0))))) IS TRUE)  as count FROM vt0, rt1, v0 ORDER BY CAST(v0.c1 COLLATE BINARY AS BLOB) ASC);
SELECT ALL COUNT(*) FROM vt0, rt1, v0 WHERE (((((0X2365fbb2)AND((- (v0.c2)))))OR(((((((((rt1.c5)AND(rt1.c0)))OR(v0.c0)))AND(vt0.c0)))AND(rt1.c0))))) ORDER BY CAST(v0.c1 COLLATE BINARY AS BLOB) ASC;
SELECT COUNT(*) FROM rt1, vt0 WHERE (((CAST(0.5667408735678747 AS TEXT))||(((rt1.c3)-(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.5667408735678747 AS TEXT))||(((rt1.c3)-(vt0.c0))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((CAST(0.5667408735678747 AS TEXT))||(((rt1.c3)-(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.5667408735678747 AS TEXT))||(((rt1.c3)-(vt0.c0))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((CAST(0.5667408735678747 AS TEXT))||(((rt1.c3)-(vt0.c0)))));
SELECT * FROM vt0 WHERE (((NULLIF(DISTINCT vt0.c0, vt0.c0)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT vt0.c0, vt0.c0)) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((NULLIF(DISTINCT vt0.c0, vt0.c0)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT vt0.c0, vt0.c0)) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((NULLIF(DISTINCT vt0.c0, vt0.c0)) ISNULL));
SELECT ALL * FROM vt0 WHERE (CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (((((((((CASE NULL  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c5 THEN '337399299' WHEN rt1.c4 THEN rt1.c0 END)AND(CAST(v0.c0 AS TEXT))))OR(((v0.c2) ISNULL))))OR(rt1.c3)))OR(x''))) ORDER BY v0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE NULL  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c5 THEN '337399299' WHEN rt1.c4 THEN rt1.c0 END)AND(CAST(v0.c0 AS TEXT))))OR(((v0.c2) ISNULL))))OR(rt1.c3)))OR(x''))) IS TRUE)  as count FROM rt1, v0 ORDER BY v0.c2 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (((((((((CASE NULL  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c5 THEN '337399299' WHEN rt1.c4 THEN rt1.c0 END)AND(CAST(v0.c0 AS TEXT))))OR(((v0.c2) ISNULL))))OR(rt1.c3)))OR(x''))) ORDER BY v0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE NULL  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c5 THEN '337399299' WHEN rt1.c4 THEN rt1.c0 END)AND(CAST(v0.c0 AS TEXT))))OR(((v0.c2) ISNULL))))OR(rt1.c3)))OR(x''))) IS TRUE)  as count FROM rt1, v0 ORDER BY v0.c2 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (((((((((CASE NULL  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c5 THEN '337399299' WHEN rt1.c4 THEN rt1.c0 END)AND(CAST(v0.c0 AS TEXT))))OR(((v0.c2) ISNULL))))OR(rt1.c3)))OR(x''))) ORDER BY v0.c2 ASC  NULLS LAST;
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON ((x'')+(((NULL) NOT BETWEEN (rt1.c0) AND (rt1.c2)))) WHERE ((((((vt0.c0)-(rt1.c3))))<=((CASE WHEN rt1.c4 THEN rt1.c5 END)))) ORDER BY 0.1633631748667954  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)-(rt1.c3))))<=((CASE WHEN rt1.c4 THEN rt1.c5 END)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON ((x'')+(((NULL) NOT BETWEEN (rt1.c0) AND (rt1.c2)))) ORDER BY 0.1633631748667954  NULLS LAST);
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON ((x'')+(((NULL) NOT BETWEEN (rt1.c0) AND (rt1.c2)))) WHERE ((((((vt0.c0)-(rt1.c3))))<=((CASE WHEN rt1.c4 THEN rt1.c5 END)))) ORDER BY 0.1633631748667954  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)-(rt1.c3))))<=((CASE WHEN rt1.c4 THEN rt1.c5 END)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON ((x'')+(((NULL) NOT BETWEEN (rt1.c0) AND (rt1.c2)))) ORDER BY 0.1633631748667954  NULLS LAST);
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON ((x'')+(((NULL) NOT BETWEEN (rt1.c0) AND (rt1.c2)))) WHERE ((((((vt0.c0)-(rt1.c3))))<=((CASE WHEN rt1.c4 THEN rt1.c5 END)))) ORDER BY 0.1633631748667954  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON ABS(((rt1.c5)&(rt1.c0))) INNER JOIN v0 ON (NOT (CAST(rt1.c1 AS INTEGER))) WHERE ((((rt1.c5, v0.c0, v0.c1)) BETWEEN ((UPPER(DISTINCT v0.c2), ((rt1.c3) IS FALSE), CASE rt1.c4  WHEN '-1198131808' THEN v0.c2 ELSE v0.c0 END)) AND ((((((((((rt1.c3)OR(rt1.c3)))AND(rt1.c5)))OR(rt1.c0)))OR(v0.c0)), CAST(rt1.c1 AS INTEGER), json_array_length(v0.c1, vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c5, v0.c0, v0.c1)) BETWEEN ((UPPER(DISTINCT v0.c2), ((rt1.c3) IS FALSE), CASE rt1.c4  WHEN '-1198131808' THEN v0.c2 ELSE v0.c0 END)) AND ((((((((((rt1.c3)OR(rt1.c3)))AND(rt1.c5)))OR(rt1.c0)))OR(v0.c0)), CAST(rt1.c1 AS INTEGER), json_array_length(v0.c1, vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON ABS(((rt1.c5)&(rt1.c0))) INNER JOIN v0 ON (NOT (CAST(rt1.c1 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON ABS(((rt1.c5)&(rt1.c0))) INNER JOIN v0 ON (NOT (CAST(rt1.c1 AS INTEGER))) WHERE ((((rt1.c5, v0.c0, v0.c1)) BETWEEN ((UPPER(DISTINCT v0.c2), ((rt1.c3) IS FALSE), CASE rt1.c4  WHEN '-1198131808' THEN v0.c2 ELSE v0.c0 END)) AND ((((((((((rt1.c3)OR(rt1.c3)))AND(rt1.c5)))OR(rt1.c0)))OR(v0.c0)), CAST(rt1.c1 AS INTEGER), json_array_length(v0.c1, vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c5, v0.c0, v0.c1)) BETWEEN ((UPPER(DISTINCT v0.c2), ((rt1.c3) IS FALSE), CASE rt1.c4  WHEN '-1198131808' THEN v0.c2 ELSE v0.c0 END)) AND ((((((((((rt1.c3)OR(rt1.c3)))AND(rt1.c5)))OR(rt1.c0)))OR(v0.c0)), CAST(rt1.c1 AS INTEGER), json_array_length(v0.c1, vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON ABS(((rt1.c5)&(rt1.c0))) INNER JOIN v0 ON (NOT (CAST(rt1.c1 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON ABS(((rt1.c5)&(rt1.c0))) INNER JOIN v0 ON (NOT (CAST(rt1.c1 AS INTEGER))) WHERE ((((rt1.c5, v0.c0, v0.c1)) BETWEEN ((UPPER(DISTINCT v0.c2), ((rt1.c3) IS FALSE), CASE rt1.c4  WHEN '-1198131808' THEN v0.c2 ELSE v0.c0 END)) AND ((((((((((rt1.c3)OR(rt1.c3)))AND(rt1.c5)))OR(rt1.c0)))OR(v0.c0)), CAST(rt1.c1 AS INTEGER), json_array_length(v0.c1, vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))>>(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(vt0.c0)))>>(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))>>(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(vt0.c0)))>>(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))>>(vt0.c0)));
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c1) IS FALSE)) ORDER BY (('-655368408') NOTNULL), (~ (((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c5)))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt1.c1) IS FALSE)) IS TRUE)  as count FROM rt1 ORDER BY (('-655368408') NOTNULL), (~ (((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c5)))) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c1) IS FALSE)) ORDER BY (('-655368408') NOTNULL), (~ (((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c5)))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt1.c1) IS FALSE)) IS TRUE)  as count FROM rt1 ORDER BY (('-655368408') NOTNULL), (~ (((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c5)))) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c1) IS FALSE)) ORDER BY (('-655368408') NOTNULL), (~ (((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c5)))) DESC;
SELECT * FROM rt1, vt0 WHERE ((((rt1.c2)-(rt1.c2)) IN (rt1.c3)));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)-(rt1.c2)) IN (rt1.c3))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((((rt1.c2)-(rt1.c2)) IN (rt1.c3)));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)-(rt1.c2)) IN (rt1.c3))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((((rt1.c2)-(rt1.c2)) IN (rt1.c3)));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c1)-(v0.c2)))) AND ((v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((((v0.c1)-(v0.c2)))) AND ((v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c1)-(v0.c2)))) AND ((v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((((v0.c1)-(v0.c2)))) AND ((v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c1)-(v0.c2)))) AND ((v0.c0))));
SELECT * FROM v0 WHERE (v0.c1) ORDER BY 0.5667408735678747  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0 ORDER BY 0.5667408735678747  NULLS LAST);
SELECT * FROM v0 WHERE (v0.c1) ORDER BY 0.5667408735678747  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0 ORDER BY 0.5667408735678747  NULLS LAST);
SELECT * FROM v0 WHERE (v0.c1) ORDER BY 0.5667408735678747  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0 WHERE (LOWER(DISTINCT CASE WHEN v0.c1 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c2 END)) ORDER BY CASE CAST(vt0.c0 AS BLOB)  WHEN '' COLLATE NOCASE THEN ((v0.c0) BETWEEN (v0.c2) AND (v0.c0)) WHEN vt0.c0 THEN (~ (v0.c1)) WHEN ((vt0.c0)OR(v0.c2)) THEN (~ (x'')) ELSE ((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)) END DESC;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT CASE WHEN v0.c1 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c2 END)) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE CAST(vt0.c0 AS BLOB)  WHEN '' COLLATE NOCASE THEN ((v0.c0) BETWEEN (v0.c2) AND (v0.c0)) WHEN vt0.c0 THEN (~ (v0.c1)) WHEN ((vt0.c0)OR(v0.c2)) THEN (~ (x'')) ELSE ((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)) END DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE (LOWER(DISTINCT CASE WHEN v0.c1 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c2 END)) ORDER BY CASE CAST(vt0.c0 AS BLOB)  WHEN '' COLLATE NOCASE THEN ((v0.c0) BETWEEN (v0.c2) AND (v0.c0)) WHEN vt0.c0 THEN (~ (v0.c1)) WHEN ((vt0.c0)OR(v0.c2)) THEN (~ (x'')) ELSE ((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)) END DESC;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT CASE WHEN v0.c1 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c2 END)) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE CAST(vt0.c0 AS BLOB)  WHEN '' COLLATE NOCASE THEN ((v0.c0) BETWEEN (v0.c2) AND (v0.c0)) WHEN vt0.c0 THEN (~ (v0.c1)) WHEN ((vt0.c0)OR(v0.c2)) THEN (~ (x'')) ELSE ((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)) END DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE (LOWER(DISTINCT CASE WHEN v0.c1 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c2 END)) ORDER BY CASE CAST(vt0.c0 AS BLOB)  WHEN '' COLLATE NOCASE THEN ((v0.c0) BETWEEN (v0.c2) AND (v0.c0)) WHEN vt0.c0 THEN (~ (v0.c1)) WHEN ((vt0.c0)OR(v0.c2)) THEN (~ (x'')) ELSE ((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)) END DESC;
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c2 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c2 AS REAL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c2 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c2 AS REAL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c2 AS REAL));
SELECT * FROM rt1 FULL OUTER JOIN vt0 ON ((rt1.c2 COLLATE NOCASE)GLOB(rt1.c1)) LEFT OUTER JOIN v0 ON NULL WHERE ((((0.6285456247822039))>((CASE WHEN rt1.c0 THEN v0.c1 END)))) ORDER BY ((CASE v0.c1  WHEN vt0.c0 THEN rt1.c4 ELSE rt1.c5 END)==((rt1.c5 IN ()))) ASC  NULLS FIRST, CASE WHEN rt1.c5 COLLATE BINARY THEN IFNULL(DISTINCT rt1.c1, vt0.c0) WHEN (NOT (rt1.c4)) THEN ((vt0.c0) NOT BETWEEN (rt1.c4) AND (rt1.c1)) WHEN ((((rt1.c2)OR(v0.c1)))AND(rt1.c5)) THEN NULL END;
SELECT SUM(count) FROM (SELECT ALL (((((0.6285456247822039))>((CASE WHEN rt1.c0 THEN v0.c1 END)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON ((rt1.c2 COLLATE NOCASE)GLOB(rt1.c1)) LEFT OUTER JOIN v0 ON NULL ORDER BY ((CASE v0.c1  WHEN vt0.c0 THEN rt1.c4 ELSE rt1.c5 END)=((rt1.c5 IN ()))) ASC  NULLS FIRST, CASE WHEN rt1.c5 COLLATE BINARY THEN IFNULL(DISTINCT rt1.c1, vt0.c0) WHEN (NOT (rt1.c4)) THEN ((vt0.c0) NOT BETWEEN (rt1.c4) AND (rt1.c1)) WHEN ((((rt1.c2)OR(v0.c1)))AND(rt1.c5)) THEN NULL END);
SELECT * FROM rt1 FULL OUTER JOIN vt0 ON ((rt1.c2 COLLATE NOCASE)GLOB(rt1.c1)) LEFT OUTER JOIN v0 ON NULL WHERE ((((0.6285456247822039))>((CASE WHEN rt1.c0 THEN v0.c1 END)))) ORDER BY ((CASE v0.c1  WHEN vt0.c0 THEN rt1.c4 ELSE rt1.c5 END)==((rt1.c5 IN ()))) ASC  NULLS FIRST, CASE WHEN rt1.c5 COLLATE BINARY THEN IFNULL(DISTINCT rt1.c1, vt0.c0) WHEN (NOT (rt1.c4)) THEN ((vt0.c0) NOT BETWEEN (rt1.c4) AND (rt1.c1)) WHEN ((((rt1.c2)OR(v0.c1)))AND(rt1.c5)) THEN NULL END;
SELECT SUM(count) FROM (SELECT ALL (((((0.6285456247822039))>((CASE WHEN rt1.c0 THEN v0.c1 END)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON ((rt1.c2 COLLATE NOCASE)GLOB(rt1.c1)) LEFT OUTER JOIN v0 ON NULL ORDER BY ((CASE v0.c1  WHEN vt0.c0 THEN rt1.c4 ELSE rt1.c5 END)=((rt1.c5 IN ()))) ASC  NULLS FIRST, CASE WHEN rt1.c5 COLLATE BINARY THEN IFNULL(DISTINCT rt1.c1, vt0.c0) WHEN (NOT (rt1.c4)) THEN ((vt0.c0) NOT BETWEEN (rt1.c4) AND (rt1.c1)) WHEN ((((rt1.c2)OR(v0.c1)))AND(rt1.c5)) THEN NULL END);
SELECT * FROM rt1 FULL OUTER JOIN vt0 ON ((rt1.c2 COLLATE NOCASE)GLOB(rt1.c1)) LEFT OUTER JOIN v0 ON NULL WHERE ((((0.6285456247822039))>((CASE WHEN rt1.c0 THEN v0.c1 END)))) ORDER BY ((CASE v0.c1  WHEN vt0.c0 THEN rt1.c4 ELSE rt1.c5 END)==((rt1.c5 IN ()))) ASC  NULLS FIRST, CASE WHEN rt1.c5 COLLATE BINARY THEN IFNULL(DISTINCT rt1.c1, vt0.c0) WHEN (NOT (rt1.c4)) THEN ((vt0.c0) NOT BETWEEN (rt1.c4) AND (rt1.c1)) WHEN ((((rt1.c2)OR(v0.c1)))AND(rt1.c5)) THEN NULL END;
SELECT ALL COUNT(*) FROM vt0, v0, rt1 WHERE ((('0.5667408735678747') IS FALSE));
SELECT SUM(count) FROM (SELECT (((('0.5667408735678747') IS FALSE)) IS TRUE)  as count FROM vt0, v0, rt1);
SELECT ALL COUNT(*) FROM vt0, v0, rt1 WHERE ((('0.5667408735678747') IS FALSE));
SELECT SUM(count) FROM (SELECT (((('0.5667408735678747') IS FALSE)) IS TRUE)  as count FROM vt0, v0, rt1);
SELECT ALL COUNT(*) FROM vt0, v0, rt1 WHERE ((('0.5667408735678747') IS FALSE));
SELECT * FROM rt1 WHERE (CAST(((((rt1.c0)AND(x'')))AND(rt1.c5)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt1.c0)AND(x'')))AND(rt1.c5)) AS REAL)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST(((((rt1.c0)AND(x'')))AND(rt1.c5)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt1.c0)AND(x'')))AND(rt1.c5)) AS REAL)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST(((((rt1.c0)AND(x'')))AND(rt1.c5)) AS REAL));
SELECT * FROM v0, vt0 WHERE (CAST(v0.c2 COLLATE RTRIM AS NUMERIC)) ORDER BY ''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c2 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM v0, vt0 ORDER BY ''  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (CAST(v0.c2 COLLATE RTRIM AS NUMERIC)) ORDER BY ''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c2 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM v0, vt0 ORDER BY ''  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (CAST(v0.c2 COLLATE RTRIM AS NUMERIC)) ORDER BY ''  NULLS FIRST;
SELECT * FROM v0 INNER JOIN vt0 ON TRIM(v0.c1) COLLATE BINARY WHERE (((v0.c0)IS NOT(739236048)) COLLATE RTRIM) ORDER BY CAST(((v0.c2) IS TRUE) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)IS NOT(739236048)) COLLATE RTRIM) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON TRIM(v0.c1) COLLATE BINARY ORDER BY CAST(((v0.c2) IS TRUE) AS INTEGER)  NULLS FIRST);
SELECT * FROM v0 INNER JOIN vt0 ON TRIM(v0.c1) COLLATE BINARY WHERE (((v0.c0)IS NOT(739236048)) COLLATE RTRIM) ORDER BY CAST(((v0.c2) IS TRUE) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)IS NOT(739236048)) COLLATE RTRIM) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON TRIM(v0.c1) COLLATE BINARY ORDER BY CAST(((v0.c2) IS TRUE) AS INTEGER)  NULLS FIRST);
SELECT * FROM v0 INNER JOIN vt0 ON TRIM(v0.c1) COLLATE BINARY WHERE (((v0.c0)IS NOT(739236048)) COLLATE RTRIM) ORDER BY CAST(((v0.c2) IS TRUE) AS INTEGER)  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN ()))IS NOT(CASE v0.c0  WHEN v0.c0 THEN v0.c1 ELSE v0.c1 END))) ORDER BY ((v0.c1) NOT BETWEEN ((v0.c0 IN (v0.c1, v0.c0))) AND (((((v0.c0)OR(v0.c2)))OR(v0.c2))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))IS NOT(CASE v0.c0  WHEN v0.c0 THEN v0.c1 ELSE v0.c1 END))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c1) NOT BETWEEN ((v0.c0 IN (v0.c1, v0.c0))) AND (((((v0.c0)OR(v0.c2)))OR(v0.c2)))));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN ()))IS NOT(CASE v0.c0  WHEN v0.c0 THEN v0.c1 ELSE v0.c1 END))) ORDER BY ((v0.c1) NOT BETWEEN ((v0.c0 IN (v0.c1, v0.c0))) AND (((((v0.c0)OR(v0.c2)))OR(v0.c2))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))IS NOT(CASE v0.c0  WHEN v0.c0 THEN v0.c1 ELSE v0.c1 END))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c1) NOT BETWEEN ((v0.c0 IN (v0.c1, v0.c0))) AND (((((v0.c0)OR(v0.c2)))OR(v0.c2)))));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN ()))IS NOT(CASE v0.c0  WHEN v0.c0 THEN v0.c1 ELSE v0.c1 END))) ORDER BY ((v0.c1) NOT BETWEEN ((v0.c0 IN (v0.c1, v0.c0))) AND (((((v0.c0)OR(v0.c2)))OR(v0.c2))));
SELECT * FROM v0, rt1 NATURAL JOIN vt0 WHERE (((HEX(DISTINCT v0.c1))<<(rt1.c0 COLLATE BINARY))) ORDER BY (((rt1.c2)) NOT BETWEEN ((((v0.c0)<>(v0.c1)))) AND ((UPPER(DISTINCT rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(DISTINCT v0.c1))<<(rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, rt1 NATURAL JOIN vt0 ORDER BY (((rt1.c2)) NOT BETWEEN ((((v0.c0)!=(v0.c1)))) AND ((UPPER(DISTINCT rt1.c3)))));
SELECT * FROM v0, rt1 NATURAL JOIN vt0 WHERE (((HEX(DISTINCT v0.c1))<<(rt1.c0 COLLATE BINARY))) ORDER BY (((rt1.c2)) NOT BETWEEN ((((v0.c0)<>(v0.c1)))) AND ((UPPER(DISTINCT rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(DISTINCT v0.c1))<<(rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, rt1 NATURAL JOIN vt0 ORDER BY (((rt1.c2)) NOT BETWEEN ((((v0.c0)!=(v0.c1)))) AND ((UPPER(DISTINCT rt1.c3)))));
SELECT * FROM v0, rt1 NATURAL JOIN vt0 WHERE (((HEX(DISTINCT v0.c1))<<(rt1.c0 COLLATE BINARY))) ORDER BY (((rt1.c2)) NOT BETWEEN ((((v0.c0)<>(v0.c1)))) AND ((UPPER(DISTINCT rt1.c3))));
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((CASE rt1.c5  WHEN rt1.c1 THEN v0.c2 END)IS(((x'')||(rt1.c5))))) ORDER BY '-1328533338' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c5  WHEN rt1.c1 THEN v0.c2 END)IS(((x'')||(rt1.c5))))) IS TRUE)  as count FROM v0, rt1 ORDER BY '-1328533338' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((CASE rt1.c5  WHEN rt1.c1 THEN v0.c2 END)IS(((x'')||(rt1.c5))))) ORDER BY '-1328533338' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c5  WHEN rt1.c1 THEN v0.c2 END)IS(((x'')||(rt1.c5))))) IS TRUE)  as count FROM v0, rt1 ORDER BY '-1328533338' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((CASE rt1.c5  WHEN rt1.c1 THEN v0.c2 END)IS(((x'')||(rt1.c5))))) ORDER BY '-1328533338' DESC  NULLS FIRST;
SELECT ALL * FROM rt1, vt0, v0 WHERE (((((((((((rt1.c0)<<(rt1.c1)))OR(UPPER(v0.c0))))AND(((v0.c1) NOT NULL))))AND(((v0.c0) IS TRUE))))AND(rt1.c5))) ORDER BY CASE WHEN ((rt1.c4) BETWEEN (rt1.c1) AND (v0.c2)) THEN CAST(v0.c2 AS TEXT) WHEN (NOT (rt1.c4)) THEN rt1.c0 COLLATE BINARY WHEN ((rt1.c5)*(v0.c0)) THEN (((v0.c2, v0.c0, v0.c2)) NOT BETWEEN ((rt1.c4, v0.c1, rt1.c0)) AND ((v0.c1, v0.c1, v0.c0))) ELSE ((rt1.c1)*(rt1.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0)<<(rt1.c1)))OR(UPPER(v0.c0))))AND(((v0.c1) NOT NULL))))AND(((v0.c0) IS TRUE))))AND(rt1.c5))) IS TRUE)  as count FROM rt1, vt0, v0 ORDER BY CASE WHEN ((rt1.c4) BETWEEN (rt1.c1) AND (v0.c2)) THEN CAST(v0.c2 AS TEXT) WHEN (NOT (rt1.c4)) THEN rt1.c0 COLLATE BINARY WHEN ((rt1.c5)*(v0.c0)) THEN (((v0.c2, v0.c0, v0.c2)) NOT BETWEEN ((rt1.c4, v0.c1, rt1.c0)) AND ((v0.c1, v0.c1, v0.c0))) ELSE ((rt1.c1)*(rt1.c1)) END DESC);
SELECT ALL * FROM rt1, vt0, v0 WHERE (((((((((((rt1.c0)<<(rt1.c1)))OR(UPPER(v0.c0))))AND(((v0.c1) NOT NULL))))AND(((v0.c0) IS TRUE))))AND(rt1.c5))) ORDER BY CASE WHEN ((rt1.c4) BETWEEN (rt1.c1) AND (v0.c2)) THEN CAST(v0.c2 AS TEXT) WHEN (NOT (rt1.c4)) THEN rt1.c0 COLLATE BINARY WHEN ((rt1.c5)*(v0.c0)) THEN (((v0.c2, v0.c0, v0.c2)) NOT BETWEEN ((rt1.c4, v0.c1, rt1.c0)) AND ((v0.c1, v0.c1, v0.c0))) ELSE ((rt1.c1)*(rt1.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0)<<(rt1.c1)))OR(UPPER(v0.c0))))AND(((v0.c1) NOT NULL))))AND(((v0.c0) IS TRUE))))AND(rt1.c5))) IS TRUE)  as count FROM rt1, vt0, v0 ORDER BY CASE WHEN ((rt1.c4) BETWEEN (rt1.c1) AND (v0.c2)) THEN CAST(v0.c2 AS TEXT) WHEN (NOT (rt1.c4)) THEN rt1.c0 COLLATE BINARY WHEN ((rt1.c5)*(v0.c0)) THEN (((v0.c2, v0.c0, v0.c2)) NOT BETWEEN ((rt1.c4, v0.c1, rt1.c0)) AND ((v0.c1, v0.c1, v0.c0))) ELSE ((rt1.c1)*(rt1.c1)) END DESC);
SELECT ALL * FROM rt1, vt0, v0 WHERE (((((((((((rt1.c0)<<(rt1.c1)))OR(UPPER(v0.c0))))AND(((v0.c1) NOT NULL))))AND(((v0.c0) IS TRUE))))AND(rt1.c5))) ORDER BY CASE WHEN ((rt1.c4) BETWEEN (rt1.c1) AND (v0.c2)) THEN CAST(v0.c2 AS TEXT) WHEN (NOT (rt1.c4)) THEN rt1.c0 COLLATE BINARY WHEN ((rt1.c5)*(v0.c0)) THEN (((v0.c2, v0.c0, v0.c2)) NOT BETWEEN ((rt1.c4, v0.c1, rt1.c0)) AND ((v0.c1, v0.c1, v0.c0))) ELSE ((rt1.c1)*(rt1.c1)) END DESC;
SELECT COUNT(*) FROM vt0, rt1, v0 WHERE ((COALESCE(rt1.c2, rt1.c1, v0.c2, vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((COALESCE(rt1.c2, rt1.c1, v0.c2, vt0.c0) IN ())) IS TRUE)  as count FROM vt0, rt1, v0);
SELECT COUNT(*) FROM vt0, rt1, v0 WHERE ((COALESCE(rt1.c2, rt1.c1, v0.c2, vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((COALESCE(rt1.c2, rt1.c1, v0.c2, vt0.c0) IN ())) IS TRUE)  as count FROM vt0, rt1, v0);
SELECT COUNT(*) FROM vt0, rt1, v0 WHERE ((COALESCE(rt1.c2, rt1.c1, v0.c2, vt0.c0) IN ()));
SELECT ALL * FROM rt1 WHERE ((((rt1.c2) IS FALSE) IN (0Xffffffffbafcf6fc))) ORDER BY ((((((rt1.c3)>=(rt1.c5)))OR(CAST(rt1.c2 AS REAL))))AND(((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2) IS FALSE) IN (0xffffffffbafcf6fc))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c3)>=(rt1.c5)))OR(CAST(rt1.c2 AS REAL))))AND(((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((((rt1.c2) IS FALSE) IN (0Xffffffffbafcf6fc))) ORDER BY ((((((rt1.c3)>=(rt1.c5)))OR(CAST(rt1.c2 AS REAL))))AND(((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2) IS FALSE) IN (0xffffffffbafcf6fc))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c3)>=(rt1.c5)))OR(CAST(rt1.c2 AS REAL))))AND(((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((((rt1.c2) IS FALSE) IN (0Xffffffffbafcf6fc))) ORDER BY ((((((rt1.c3)>=(rt1.c5)))OR(CAST(rt1.c2 AS REAL))))AND(((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c0)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt1, vt0, v0 WHERE (((((((rt1.c1)OR(vt0.c0)))OR(rt1.c0)))AND(((rt1.c4) BETWEEN (v0.c1) AND (rt1.c3))))) ORDER BY ((((rt1.c4)<<(rt1.c5))) IS TRUE), rt1.c4  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)OR(vt0.c0)))OR(rt1.c0)))AND(((rt1.c4) BETWEEN (v0.c1) AND (rt1.c3))))) IS TRUE)  as count FROM rt1, vt0, v0 ORDER BY ((((rt1.c4)<<(rt1.c5))) IS TRUE), rt1.c4  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0, v0 WHERE (((((((rt1.c1)OR(vt0.c0)))OR(rt1.c0)))AND(((rt1.c4) BETWEEN (v0.c1) AND (rt1.c3))))) ORDER BY ((((rt1.c4)<<(rt1.c5))) IS TRUE), rt1.c4  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)OR(vt0.c0)))OR(rt1.c0)))AND(((rt1.c4) BETWEEN (v0.c1) AND (rt1.c3))))) IS TRUE)  as count FROM rt1, vt0, v0 ORDER BY ((((rt1.c4)<<(rt1.c5))) IS TRUE), rt1.c4  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0, v0 WHERE (((((((rt1.c1)OR(vt0.c0)))OR(rt1.c0)))AND(((rt1.c4) BETWEEN (v0.c1) AND (rt1.c3))))) ORDER BY ((((rt1.c4)<<(rt1.c5))) IS TRUE), rt1.c4  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt1 WHERE (vt0.c0) ORDER BY CAST(((rt1.c1)IS NOT(rt1.c2)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt1 ORDER BY CAST(((rt1.c1)IS NOT(rt1.c2)) AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (vt0.c0) ORDER BY CAST(((rt1.c1)IS NOT(rt1.c2)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt1 ORDER BY CAST(((rt1.c1)IS NOT(rt1.c2)) AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (vt0.c0) ORDER BY CAST(((rt1.c1)IS NOT(rt1.c2)) AS REAL)  NULLS LAST;
SELECT ALL * FROM rt1, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (x'');
SELECT ALL COUNT(*) FROM vt0, v0, rt1 WHERE (CASE ((((((((vt0.c0)AND(rt1.c3)))OR(rt1.c5)))OR(vt0.c0)))AND(rt1.c2))  WHEN -1.874262013E9 COLLATE BINARY THEN (((rt1.c4, rt1.c0, rt1.c4))>((0.7263983994791771, v0.c2, vt0.c0))) WHEN (v0.c0 IN ()) THEN ((x'')IS NOT(rt1.c3)) WHEN 0X2854471f THEN rt1.c4 COLLATE NOCASE END) ORDER BY ((((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c5)))AND(v0.c2)))AND(vt0.c0))) IS TRUE) DESC, (((((rt1.c4))<((rt1.c4))))LIKE((rt1.c0 IN (v0.c2)))) DESC  NULLS LAST, ((((vt0.c0) NOT BETWEEN (v0.c1) AND (rt1.c3)))<((vt0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((((((((vt0.c0)AND(rt1.c3)))OR(rt1.c5)))OR(vt0.c0)))AND(rt1.c2))  WHEN -1.874262013E9 COLLATE BINARY THEN (((rt1.c4, rt1.c0, rt1.c4))>((0.7263983994791771, v0.c2, vt0.c0))) WHEN (v0.c0 IN ()) THEN ((x'')IS NOT(rt1.c3)) WHEN 0X2854471f THEN rt1.c4 COLLATE NOCASE END) IS TRUE)  as count FROM vt0, v0, rt1 ORDER BY ((((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c5)))AND(v0.c2)))AND(vt0.c0))) IS TRUE) DESC, (((((rt1.c4))<((rt1.c4))))LIKE((rt1.c0 IN (v0.c2)))) DESC  NULLS LAST, ((((vt0.c0) NOT BETWEEN (v0.c1) AND (rt1.c3)))<((vt0.c0 IN ()))) DESC);
SELECT ALL COUNT(*) FROM vt0, v0, rt1 WHERE (CASE ((((((((vt0.c0)AND(rt1.c3)))OR(rt1.c5)))OR(vt0.c0)))AND(rt1.c2))  WHEN -1.874262013E9 COLLATE BINARY THEN (((rt1.c4, rt1.c0, rt1.c4))>((0.7263983994791771, v0.c2, vt0.c0))) WHEN (v0.c0 IN ()) THEN ((x'')IS NOT(rt1.c3)) WHEN 0X2854471f THEN rt1.c4 COLLATE NOCASE END) ORDER BY ((((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c5)))AND(v0.c2)))AND(vt0.c0))) IS TRUE) DESC, (((((rt1.c4))<((rt1.c4))))LIKE((rt1.c0 IN (v0.c2)))) DESC  NULLS LAST, ((((vt0.c0) NOT BETWEEN (v0.c1) AND (rt1.c3)))<((vt0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((((((((vt0.c0)AND(rt1.c3)))OR(rt1.c5)))OR(vt0.c0)))AND(rt1.c2))  WHEN -1.874262013E9 COLLATE BINARY THEN (((rt1.c4, rt1.c0, rt1.c4))>((0.7263983994791771, v0.c2, vt0.c0))) WHEN (v0.c0 IN ()) THEN ((x'')IS NOT(rt1.c3)) WHEN 0X2854471f THEN rt1.c4 COLLATE NOCASE END) IS TRUE)  as count FROM vt0, v0, rt1 ORDER BY ((((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c5)))AND(v0.c2)))AND(vt0.c0))) IS TRUE) DESC, (((((rt1.c4))<((rt1.c4))))LIKE((rt1.c0 IN (v0.c2)))) DESC  NULLS LAST, ((((vt0.c0) NOT BETWEEN (v0.c1) AND (rt1.c3)))<((vt0.c0 IN ()))) DESC);
SELECT ALL COUNT(*) FROM vt0, v0, rt1 WHERE (CASE ((((((((vt0.c0)AND(rt1.c3)))OR(rt1.c5)))OR(vt0.c0)))AND(rt1.c2))  WHEN -1.874262013E9 COLLATE BINARY THEN (((rt1.c4, rt1.c0, rt1.c4))>((0.7263983994791771, v0.c2, vt0.c0))) WHEN (v0.c0 IN ()) THEN ((x'')IS NOT(rt1.c3)) WHEN 0X2854471f THEN rt1.c4 COLLATE NOCASE END) ORDER BY ((((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c5)))AND(v0.c2)))AND(vt0.c0))) IS TRUE) DESC, (((((rt1.c4))<((rt1.c4))))LIKE((rt1.c0 IN (v0.c2)))) DESC  NULLS LAST, ((((vt0.c0) NOT BETWEEN (v0.c1) AND (rt1.c3)))<((vt0.c0 IN ()))) DESC;
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((CAST(v0.c0 AS BLOB))OR((('-1671319764') NOT BETWEEN (v0.c2) AND (rt1.c3)))) CROSS JOIN rt1 ON '' WHERE (v0.c1) ORDER BY ((((rt1.c3)-(rt1.c2))) IS TRUE) DESC, ((rt1.c0 IN (rt1.c3, rt1.c5)) IN (((rt1.c3) IS TRUE), ((rt1.c3) BETWEEN (rt1.c5) AND (rt1.c1)))) ASC  NULLS LAST, (NOT ((rt1.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((CAST(v0.c0 AS BLOB))OR((('-1671319764') NOT BETWEEN (v0.c2) AND (rt1.c3)))) CROSS JOIN rt1 ON '' ORDER BY ((((rt1.c3)-(rt1.c2))) IS TRUE) DESC, ((rt1.c0 IN (rt1.c3, rt1.c5)) IN (((rt1.c3) IS TRUE), ((rt1.c3) BETWEEN (rt1.c5) AND (rt1.c1)))) ASC  NULLS LAST, (NOT ((rt1.c0 IN ()))) DESC);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((CAST(v0.c0 AS BLOB))OR((('-1671319764') NOT BETWEEN (v0.c2) AND (rt1.c3)))) CROSS JOIN rt1 ON '' WHERE (v0.c1) ORDER BY ((((rt1.c3)-(rt1.c2))) IS TRUE) DESC, ((rt1.c0 IN (rt1.c3, rt1.c5)) IN (((rt1.c3) IS TRUE), ((rt1.c3) BETWEEN (rt1.c5) AND (rt1.c1)))) ASC  NULLS LAST, (NOT ((rt1.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((CAST(v0.c0 AS BLOB))OR((('-1671319764') NOT BETWEEN (v0.c2) AND (rt1.c3)))) CROSS JOIN rt1 ON '' ORDER BY ((((rt1.c3)-(rt1.c2))) IS TRUE) DESC, ((rt1.c0 IN (rt1.c3, rt1.c5)) IN (((rt1.c3) IS TRUE), ((rt1.c3) BETWEEN (rt1.c5) AND (rt1.c1)))) ASC  NULLS LAST, (NOT ((rt1.c0 IN ()))) DESC);
SELECT ALL COUNT(*) FROM vt0, rt1, v0 WHERE (((((((vt0.c0)OR('0.5667408735678747')))AND(v0.c0))) NOTNULL)) ORDER BY ((v0.c2)>((v0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR('0.5667408735678747')))AND(v0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, rt1, v0 ORDER BY ((v0.c2)>((v0.c0 IN ()))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1, v0 WHERE (((((((vt0.c0)OR('0.5667408735678747')))AND(v0.c0))) NOTNULL)) ORDER BY ((v0.c2)>((v0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR('0.5667408735678747')))AND(v0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, rt1, v0 ORDER BY ((v0.c2)>((v0.c0 IN ()))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1, v0 WHERE (((((((vt0.c0)OR('0.5667408735678747')))AND(v0.c0))) NOTNULL)) ORDER BY ((v0.c2)>((v0.c0 IN ()))) ASC  NULLS LAST;
SELECT * FROM rt1, vt0 WHERE (CASE (((rt1.c0))=((rt1.c2)))  WHEN ((rt1.c2) IS FALSE) THEN CAST(rt1.c0 AS TEXT) WHEN ((((rt1.c4)OR(rt1.c2)))OR(rt1.c0)) THEN ((rt1.c4) NOT BETWEEN (rt1.c4) AND (rt1.c1)) WHEN rt1.c4 COLLATE RTRIM THEN ((rt1.c3)%(rt1.c0)) ELSE (((rt1.c3))>=((rt1.c1))) END) ORDER BY LOWER(CASE WHEN rt1.c3 THEN rt1.c5 ELSE rt1.c1 END) DESC  NULLS FIRST, ((('1117451516'))>((CAST(rt1.c5 AS BLOB)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt1.c0))==((rt1.c2)))  WHEN ((rt1.c2) IS FALSE) THEN CAST(rt1.c0 AS TEXT) WHEN ((((rt1.c4)OR(rt1.c2)))OR(rt1.c0)) THEN ((rt1.c4) NOT BETWEEN (rt1.c4) AND (rt1.c1)) WHEN rt1.c4 COLLATE RTRIM THEN ((rt1.c3)%(rt1.c0)) ELSE (((rt1.c3))>=((rt1.c1))) END) IS TRUE)  as count FROM rt1, vt0 ORDER BY LOWER(CASE WHEN rt1.c3 THEN rt1.c5 ELSE rt1.c1 END) DESC  NULLS FIRST, ((('1117451516'))>((CAST(rt1.c5 AS BLOB)))) DESC  NULLS FIRST);
SELECT * FROM rt1, vt0 WHERE (CASE (((rt1.c0))=((rt1.c2)))  WHEN ((rt1.c2) IS FALSE) THEN CAST(rt1.c0 AS TEXT) WHEN ((((rt1.c4)OR(rt1.c2)))OR(rt1.c0)) THEN ((rt1.c4) NOT BETWEEN (rt1.c4) AND (rt1.c1)) WHEN rt1.c4 COLLATE RTRIM THEN ((rt1.c3)%(rt1.c0)) ELSE (((rt1.c3))>=((rt1.c1))) END) ORDER BY LOWER(CASE WHEN rt1.c3 THEN rt1.c5 ELSE rt1.c1 END) DESC  NULLS FIRST, ((('1117451516'))>((CAST(rt1.c5 AS BLOB)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt1.c0))==((rt1.c2)))  WHEN ((rt1.c2) IS FALSE) THEN CAST(rt1.c0 AS TEXT) WHEN ((((rt1.c4)OR(rt1.c2)))OR(rt1.c0)) THEN ((rt1.c4) NOT BETWEEN (rt1.c4) AND (rt1.c1)) WHEN rt1.c4 COLLATE RTRIM THEN ((rt1.c3)%(rt1.c0)) ELSE (((rt1.c3))>=((rt1.c1))) END) IS TRUE)  as count FROM rt1, vt0 ORDER BY LOWER(CASE WHEN rt1.c3 THEN rt1.c5 ELSE rt1.c1 END) DESC  NULLS FIRST, ((('1117451516'))>((CAST(rt1.c5 AS BLOB)))) DESC  NULLS FIRST);
SELECT * FROM rt1, vt0 WHERE (CASE (((rt1.c0))=((rt1.c2)))  WHEN ((rt1.c2) IS FALSE) THEN CAST(rt1.c0 AS TEXT) WHEN ((((rt1.c4)OR(rt1.c2)))OR(rt1.c0)) THEN ((rt1.c4) NOT BETWEEN (rt1.c4) AND (rt1.c1)) WHEN rt1.c4 COLLATE RTRIM THEN ((rt1.c3)%(rt1.c0)) ELSE (((rt1.c3))>=((rt1.c1))) END) ORDER BY LOWER(CASE WHEN rt1.c3 THEN rt1.c5 ELSE rt1.c1 END) DESC  NULLS FIRST, ((('1117451516'))>((CAST(rt1.c5 AS BLOB)))) DESC  NULLS FIRST;
SELECT * FROM v0, rt1, vt0 WHERE (UNLIKELY(v0.c1));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(v0.c1)) IS TRUE)  as count FROM v0, rt1, vt0);
SELECT * FROM v0, rt1, vt0 WHERE (UNLIKELY(v0.c1));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(v0.c1)) IS TRUE)  as count FROM v0, rt1, vt0);
SELECT * FROM v0, rt1, vt0 WHERE (UNLIKELY(v0.c1));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL))>(''))) ORDER BY (((((vt0.c0 IN (vt0.c0)))OR(((vt0.c0) ISNULL))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL), (~ (((vt0.c0) NOTNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL))>(''))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0 IN (vt0.c0)))OR(((vt0.c0) ISNULL))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL), (~ (((vt0.c0) NOTNULL))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL))>(''))) ORDER BY (((((vt0.c0 IN (vt0.c0)))OR(((vt0.c0) ISNULL))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL), (~ (((vt0.c0) NOTNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL))>(''))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0 IN (vt0.c0)))OR(((vt0.c0) ISNULL))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL), (~ (((vt0.c0) NOTNULL))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL))>(''))) ORDER BY (((((vt0.c0 IN (vt0.c0)))OR(((vt0.c0) ISNULL))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL), (~ (((vt0.c0) NOTNULL))) DESC  NULLS LAST;
SELECT * FROM v0, vt0 RIGHT OUTER JOIN rt1 ON ((((v0.c2) NOT NULL)) NOT BETWEEN ((+ (rt1.c0))) AND (((((v0.c1)AND(rt1.c1)))OR(v0.c2)))) WHERE (v0.c1) ORDER BY ((CAST(0x757da19e AS REAL))AND(UNICODE(rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN rt1 ON ((((v0.c2) NOT NULL)) NOT BETWEEN ((+ (rt1.c0))) AND (((((v0.c1)AND(rt1.c1)))OR(v0.c2)))) ORDER BY ((CAST(0x757da19e AS REAL))AND(UNICODE(rt1.c2))));
SELECT * FROM v0, vt0 RIGHT OUTER JOIN rt1 ON ((((v0.c2) NOT NULL)) NOT BETWEEN ((+ (rt1.c0))) AND (((((v0.c1)AND(rt1.c1)))OR(v0.c2)))) WHERE (v0.c1) ORDER BY ((CAST(0x757da19e AS REAL))AND(UNICODE(rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN rt1 ON ((((v0.c2) NOT NULL)) NOT BETWEEN ((+ (rt1.c0))) AND (((((v0.c1)AND(rt1.c1)))OR(v0.c2)))) ORDER BY ((CAST(0x757da19e AS REAL))AND(UNICODE(rt1.c2))));
SELECT * FROM v0, vt0 RIGHT OUTER JOIN rt1 ON ((((v0.c2) NOT NULL)) NOT BETWEEN ((+ (rt1.c0))) AND (((((v0.c1)AND(rt1.c1)))OR(v0.c2)))) WHERE (v0.c1) ORDER BY ((CAST(0x757da19e AS REAL))AND(UNICODE(rt1.c2)));
SELECT * FROM vt0, rt1 WHERE ((CAST(vt0.c0 AS REAL) IN ())) ORDER BY CAST(NULL AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS REAL) IN ())) IS TRUE)  as count FROM vt0, rt1 ORDER BY CAST(NULL AS REAL) ASC  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE ((CAST(vt0.c0 AS REAL) IN ())) ORDER BY CAST(NULL AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS REAL) IN ())) IS TRUE)  as count FROM vt0, rt1 ORDER BY CAST(NULL AS REAL) ASC  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE ((CAST(vt0.c0 AS REAL) IN ())) ORDER BY CAST(NULL AS REAL) ASC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)%(rt1.c3)))&(CAST(rt1.c3 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)%(rt1.c3)))&(CAST(rt1.c3 AS BLOB)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)%(rt1.c3)))&(CAST(rt1.c3 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)%(rt1.c3)))&(CAST(rt1.c3 AS BLOB)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)%(rt1.c3)))&(CAST(rt1.c3 AS BLOB))));
SELECT ALL COUNT(*) FROM rt1, vt0 LEFT OUTER JOIN v0 ON ((rt1.c4)OR(CASE rt1.c3  WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c3 END)) WHERE ((((((((((((rt1.c2, v0.c2, vt0.c0)) NOT BETWEEN ((rt1.c3, rt1.c2, rt1.c2)) AND ((v0.c2, v0.c0, rt1.c2))))OR((((rt1.c5, '^ v嗺tr~1', rt1.c0))>((rt1.c0, v0.c1, rt1.c0))))))AND(rt1.c5 COLLATE NOCASE)))OR(((rt1.c4)==(rt1.c1)))))OR(((rt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((((((((((rt1.c2, v0.c2, vt0.c0)) NOT BETWEEN ((rt1.c3, rt1.c2, rt1.c2)) AND ((v0.c2, v0.c0, rt1.c2))))OR((((rt1.c5, '^ v嗺tr~1', rt1.c0))>((rt1.c0, v0.c1, rt1.c0))))))AND(rt1.c5 COLLATE NOCASE)))OR(((rt1.c4)==(rt1.c1)))))OR(((rt1.c0) ISNULL)))) IS TRUE)  as count FROM rt1, vt0 LEFT OUTER JOIN v0 ON ((rt1.c4)OR(CASE rt1.c3  WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c3 END)));
SELECT ALL COUNT(*) FROM rt1, vt0 LEFT OUTER JOIN v0 ON ((rt1.c4)OR(CASE rt1.c3  WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c3 END)) WHERE ((((((((((((rt1.c2, v0.c2, vt0.c0)) NOT BETWEEN ((rt1.c3, rt1.c2, rt1.c2)) AND ((v0.c2, v0.c0, rt1.c2))))OR((((rt1.c5, '^ v嗺tr~1', rt1.c0))>((rt1.c0, v0.c1, rt1.c0))))))AND(rt1.c5 COLLATE NOCASE)))OR(((rt1.c4)==(rt1.c1)))))OR(((rt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((((((((((rt1.c2, v0.c2, vt0.c0)) NOT BETWEEN ((rt1.c3, rt1.c2, rt1.c2)) AND ((v0.c2, v0.c0, rt1.c2))))OR((((rt1.c5, '^ v嗺tr~1', rt1.c0))>((rt1.c0, v0.c1, rt1.c0))))))AND(rt1.c5 COLLATE NOCASE)))OR(((rt1.c4)==(rt1.c1)))))OR(((rt1.c0) ISNULL)))) IS TRUE)  as count FROM rt1, vt0 LEFT OUTER JOIN v0 ON ((rt1.c4)OR(CASE rt1.c3  WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c3 END)));
SELECT ALL COUNT(*) FROM rt1, vt0 LEFT OUTER JOIN v0 ON ((rt1.c4)OR(CASE rt1.c3  WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c3 END)) WHERE ((((((((((((rt1.c2, v0.c2, vt0.c0)) NOT BETWEEN ((rt1.c3, rt1.c2, rt1.c2)) AND ((v0.c2, v0.c0, rt1.c2))))OR((((rt1.c5, '^ v嗺tr~1', rt1.c0))>((rt1.c0, v0.c1, rt1.c0))))))AND(rt1.c5 COLLATE NOCASE)))OR(((rt1.c4)==(rt1.c1)))))OR(((rt1.c0) ISNULL))));
SELECT COUNT(*) FROM v0 WHERE (((v0.c1)%(v0.c0)));
SELECT SUM(count) FROM (SELECT ((((v0.c1)%(v0.c0))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c1)%(v0.c0)));
SELECT SUM(count) FROM (SELECT ((((v0.c1)%(v0.c0))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c1)%(v0.c0)));
SELECT * FROM vt0, rt1 WHERE (((((rt1.c5)AND(-1014085318)))AND((((rt1.c0, rt1.c2, rt1.c1)) BETWEEN ((rt1.c1, rt1.c2, rt1.c0)) AND ((vt0.c0, rt1.c2, rt1.c4))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c5)AND(-1014085318)))AND((((rt1.c0, rt1.c2, rt1.c1)) BETWEEN ((rt1.c1, rt1.c2, rt1.c0)) AND ((vt0.c0, rt1.c2, rt1.c4)))))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (((((rt1.c5)AND(-1014085318)))AND((((rt1.c0, rt1.c2, rt1.c1)) BETWEEN ((rt1.c1, rt1.c2, rt1.c0)) AND ((vt0.c0, rt1.c2, rt1.c4))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c5)AND(-1014085318)))AND((((rt1.c0, rt1.c2, rt1.c1)) BETWEEN ((rt1.c1, rt1.c2, rt1.c0)) AND ((vt0.c0, rt1.c2, rt1.c4)))))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (((((rt1.c5)AND(-1014085318)))AND((((rt1.c0, rt1.c2, rt1.c1)) BETWEEN ((rt1.c1, rt1.c2, rt1.c0)) AND ((vt0.c0, rt1.c2, rt1.c4))))));
SELECT ALL COUNT(*) FROM vt0, rt1, v0 WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM vt0, rt1, v0);
SELECT ALL COUNT(*) FROM vt0, rt1, v0 WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM vt0, rt1, v0);
SELECT ALL COUNT(*) FROM vt0, rt1, v0 WHERE (rt1.c4);
SELECT COUNT(*) FROM v0, rt1 WHERE (5.29929678E8);
SELECT SUM(count) FROM (SELECT ((5.29929678E8) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM v0, rt1 WHERE (5.29929678E8);
SELECT SUM(count) FROM (SELECT ((5.29929678E8) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM v0, rt1 WHERE (5.29929678E8);
SELECT ALL * FROM rt1, v0 WHERE ('-1164528082') ORDER BY rt1.c5  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-1164528082') IS TRUE)  as count FROM rt1, v0 ORDER BY rt1.c5  NULLS LAST);
SELECT ALL * FROM rt1, v0 WHERE ('-1164528082') ORDER BY rt1.c5  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-1164528082') IS TRUE)  as count FROM rt1, v0 ORDER BY rt1.c5  NULLS LAST);
SELECT ALL * FROM rt1, v0 WHERE ('-1164528082') ORDER BY rt1.c5  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (((ABS(vt0.c0)))=((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((ABS(vt0.c0)))==((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (((ABS(vt0.c0)))=((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((ABS(vt0.c0)))==((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (((ABS(vt0.c0)))=((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))  NULLS LAST;
SELECT * FROM rt1, vt0 WHERE (((((((((((rt1.c4)OR(vt0.c0)))OR(rt1.c2)))OR(NULL)))AND(rt1.c5)))<=(((rt1.c3) NOT BETWEEN (0.9012175715422971) AND (rt1.c5))))) ORDER BY (((UPPER(rt1.c5)))!=(((rt1.c3 IN (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c4)OR(vt0.c0)))OR(rt1.c2)))OR(NULL)))AND(rt1.c5)))<=(((rt1.c3) NOT BETWEEN (0.9012175715422971) AND (rt1.c5))))) IS TRUE)  as count FROM rt1, vt0 NOT INDEXED ORDER BY (((UPPER(rt1.c5)))<>(((rt1.c3 IN (rt1.c2))))));
SELECT * FROM rt1, vt0 WHERE (((((((((((rt1.c4)OR(vt0.c0)))OR(rt1.c2)))OR(NULL)))AND(rt1.c5)))<=(((rt1.c3) NOT BETWEEN (0.9012175715422971) AND (rt1.c5))))) ORDER BY (((UPPER(rt1.c5)))!=(((rt1.c3 IN (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c4)OR(vt0.c0)))OR(rt1.c2)))OR(NULL)))AND(rt1.c5)))<=(((rt1.c3) NOT BETWEEN (0.9012175715422971) AND (rt1.c5))))) IS TRUE)  as count FROM rt1, vt0 NOT INDEXED ORDER BY (((UPPER(rt1.c5)))<>(((rt1.c3 IN (rt1.c2))))));
SELECT * FROM rt1, vt0 WHERE (((((((((((rt1.c4)OR(vt0.c0)))OR(rt1.c2)))OR(NULL)))AND(rt1.c5)))<=(((rt1.c3) NOT BETWEEN (0.9012175715422971) AND (rt1.c5))))) ORDER BY (((UPPER(rt1.c5)))!=(((rt1.c3 IN (rt1.c2)))));
SELECT ALL * FROM v0, rt1 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM v0, rt1);
SELECT ALL * FROM v0, rt1 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM v0, rt1);
SELECT ALL * FROM v0, rt1 WHERE (LAST_INSERT_ROWID());
SELECT COUNT(*) FROM rt1, vt0 FULL OUTER JOIN v0 ON rt1.c4 WHERE (CAST(((rt1.c2) IS FALSE) AS REAL)) ORDER BY ((((rt1.c4)OR(vt0.c0)))>=(0xffffffffd5bb5752))  NULLS LAST, ((CAST(v0.c0 AS BLOB))>(((rt1.c3)IS(rt1.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2) IS FALSE) AS REAL)) IS TRUE)  as count FROM rt1, vt0 FULL OUTER JOIN v0 ON rt1.c4 ORDER BY ((((rt1.c4)OR(vt0.c0)))>=(0xffffffffd5bb5752))  NULLS LAST, ((CAST(v0.c0 AS BLOB))>(((rt1.c3)IS(rt1.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 FULL OUTER JOIN v0 ON rt1.c4 WHERE (CAST(((rt1.c2) IS FALSE) AS REAL)) ORDER BY ((((rt1.c4)OR(vt0.c0)))>=(0xffffffffd5bb5752))  NULLS LAST, ((CAST(v0.c0 AS BLOB))>(((rt1.c3)IS(rt1.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2) IS FALSE) AS REAL)) IS TRUE)  as count FROM rt1, vt0 FULL OUTER JOIN v0 ON rt1.c4 ORDER BY ((((rt1.c4)OR(vt0.c0)))>=(0xffffffffd5bb5752))  NULLS LAST, ((CAST(v0.c0 AS BLOB))>(((rt1.c3)IS(rt1.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 FULL OUTER JOIN v0 ON rt1.c4 WHERE (CAST(((rt1.c2) IS FALSE) AS REAL)) ORDER BY ((((rt1.c4)OR(vt0.c0)))>=(0xffffffffd5bb5752))  NULLS LAST, ((CAST(v0.c0 AS BLOB))>(((rt1.c3)IS(rt1.c1)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY v0.c1 DESC  NULLS FIRST, v0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY v0.c1 DESC  NULLS FIRST, v0.c1 DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY v0.c1 DESC  NULLS FIRST, v0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY v0.c1 DESC  NULLS FIRST, v0.c1 DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY v0.c1 DESC  NULLS FIRST, v0.c1 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, v0, vt0 WHERE (IFNULL(rt1.c1, rt1.c4 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((IFNULL(rt1.c1, rt1.c4 COLLATE BINARY)) IS TRUE)  as count FROM rt1, v0, vt0);
SELECT ALL COUNT(*) FROM rt1, v0, vt0 WHERE (IFNULL(rt1.c1, rt1.c4 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((IFNULL(rt1.c1, rt1.c4 COLLATE BINARY)) IS TRUE)  as count FROM rt1, v0, vt0);
SELECT ALL COUNT(*) FROM rt1, v0, vt0 WHERE (IFNULL(rt1.c1, rt1.c4 COLLATE BINARY));
SELECT COUNT(*) FROM rt1, v0, vt0 WHERE ((+ (vt0.c0))) ORDER BY ((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c0)) COLLATE RTRIM, '1349514268' DESC  NULLS LAST, v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0))) IS TRUE)  as count FROM rt1, v0, vt0 ORDER BY ((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c0)) COLLATE RTRIM, '1349514268' DESC  NULLS LAST, v0.c0  NULLS LAST);
SELECT COUNT(*) FROM rt1, v0, vt0 WHERE ((+ (vt0.c0))) ORDER BY ((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c0)) COLLATE RTRIM, '1349514268' DESC  NULLS LAST, v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0))) IS TRUE)  as count FROM rt1, v0, vt0 ORDER BY ((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c0)) COLLATE RTRIM, '1349514268' DESC  NULLS LAST, v0.c0  NULLS LAST);
SELECT COUNT(*) FROM rt1, v0, vt0 WHERE ((+ (vt0.c0))) ORDER BY ((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c0)) COLLATE RTRIM, '1349514268' DESC  NULLS LAST, v0.c0  NULLS LAST;
SELECT ALL * FROM vt0, v0 INNER JOIN rt1 ON (((((rt1.c5)AND(v0.c2)))AND(rt1.c5)) IN ()) WHERE (json(((rt1.c2)&(rt1.c5))));
SELECT SUM(count) FROM (SELECT ((json(((rt1.c2)&(rt1.c5)))) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt1 ON (((((rt1.c5)AND(v0.c2)))AND(rt1.c5)) IN ()));
SELECT ALL * FROM vt0, v0 INNER JOIN rt1 ON (((((rt1.c5)AND(v0.c2)))AND(rt1.c5)) IN ()) WHERE (json(((rt1.c2)&(rt1.c5))));
SELECT SUM(count) FROM (SELECT ((json(((rt1.c2)&(rt1.c5)))) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt1 ON (((((rt1.c5)AND(v0.c2)))AND(rt1.c5)) IN ()));
SELECT ALL * FROM vt0, v0 INNER JOIN rt1 ON (((((rt1.c5)AND(v0.c2)))AND(rt1.c5)) IN ()) WHERE (json(((rt1.c2)&(rt1.c5))));
SELECT COUNT(*) FROM vt0, v0, rt1 WHERE (CASE WHEN ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)) THEN CAST(v0.c1 AS BLOB) ELSE CAST(rt1.c0 AS NUMERIC) END) ORDER BY rt1.c2 ASC, ((((((((CASE WHEN v0.c0 THEN rt1.c5 ELSE rt1.c3 END)AND(((((vt0.c0)AND(rt1.c2)))OR(rt1.c3)))))AND(CAST(v0.c2 AS REAL))))AND(((rt1.c5) NOT BETWEEN (v0.c2) AND (rt1.c0)))))OR(LOWER(DISTINCT rt1.c4))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)) THEN CAST(v0.c1 AS BLOB) ELSE CAST(rt1.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt0, v0, rt1 ORDER BY rt1.c2 ASC, ((((((((CASE WHEN v0.c0 THEN rt1.c5 ELSE rt1.c3 END)AND(((((vt0.c0)AND(rt1.c2)))OR(rt1.c3)))))AND(CAST(v0.c2 AS REAL))))AND(((rt1.c5) NOT BETWEEN (v0.c2) AND (rt1.c0)))))OR(LOWER(DISTINCT rt1.c4))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, rt1 WHERE (CASE WHEN ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)) THEN CAST(v0.c1 AS BLOB) ELSE CAST(rt1.c0 AS NUMERIC) END) ORDER BY rt1.c2 ASC, ((((((((CASE WHEN v0.c0 THEN rt1.c5 ELSE rt1.c3 END)AND(((((vt0.c0)AND(rt1.c2)))OR(rt1.c3)))))AND(CAST(v0.c2 AS REAL))))AND(((rt1.c5) NOT BETWEEN (v0.c2) AND (rt1.c0)))))OR(LOWER(DISTINCT rt1.c4))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)) THEN CAST(v0.c1 AS BLOB) ELSE CAST(rt1.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt0, v0, rt1 ORDER BY rt1.c2 ASC, ((((((((CASE WHEN v0.c0 THEN rt1.c5 ELSE rt1.c3 END)AND(((((vt0.c0)AND(rt1.c2)))OR(rt1.c3)))))AND(CAST(v0.c2 AS REAL))))AND(((rt1.c5) NOT BETWEEN (v0.c2) AND (rt1.c0)))))OR(LOWER(DISTINCT rt1.c4))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, rt1 WHERE (CASE WHEN ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)) THEN CAST(v0.c1 AS BLOB) ELSE CAST(rt1.c0 AS NUMERIC) END) ORDER BY rt1.c2 ASC, ((((((((CASE WHEN v0.c0 THEN rt1.c5 ELSE rt1.c3 END)AND(((((vt0.c0)AND(rt1.c2)))OR(rt1.c3)))))AND(CAST(v0.c2 AS REAL))))AND(((rt1.c5) NOT BETWEEN (v0.c2) AND (rt1.c0)))))OR(LOWER(DISTINCT rt1.c4))) ASC  NULLS FIRST;
SELECT * FROM vt0, rt1, v0 WHERE (((((vt0.c0)*(rt1.c5))) BETWEEN (((v0.c1)<<(rt1.c2))) AND ((((v0.c1))<=((rt1.c5)))))) ORDER BY CAST(CAST(v0.c0 AS INTEGER) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)*(rt1.c5))) BETWEEN (((v0.c1)<<(rt1.c2))) AND ((((v0.c1))<=((rt1.c5)))))) IS TRUE)  as count FROM vt0, rt1, v0 ORDER BY CAST(CAST(v0.c0 AS INTEGER) AS INTEGER));
SELECT * FROM vt0, rt1, v0 WHERE (((((vt0.c0)*(rt1.c5))) BETWEEN (((v0.c1)<<(rt1.c2))) AND ((((v0.c1))<=((rt1.c5)))))) ORDER BY CAST(CAST(v0.c0 AS INTEGER) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)*(rt1.c5))) BETWEEN (((v0.c1)<<(rt1.c2))) AND ((((v0.c1))<=((rt1.c5)))))) IS TRUE)  as count FROM vt0, rt1, v0 ORDER BY CAST(CAST(v0.c0 AS INTEGER) AS INTEGER));
SELECT * FROM vt0, rt1, v0 WHERE (((((vt0.c0)*(rt1.c5))) BETWEEN (((v0.c1)<<(rt1.c2))) AND ((((v0.c1))<=((rt1.c5)))))) ORDER BY CAST(CAST(v0.c0 AS INTEGER) AS INTEGER);
SELECT COUNT(*) FROM v0 WHERE (((v0.c2 COLLATE BINARY)-(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2 COLLATE BINARY)-(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c1))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c2 COLLATE BINARY)-(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2 COLLATE BINARY)-(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c1))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c2 COLLATE BINARY)-(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c1)))));
SELECT * FROM rt1, v0 NATURAL JOIN vt0 WHERE ((((rt1.c0 IN ()))/((((rt1.c4))<>((rt1.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 IN ()))/((((rt1.c4))!=((rt1.c3)))))) IS TRUE)  as count FROM rt1, v0 NATURAL JOIN vt0);
SELECT * FROM rt1, v0 NATURAL JOIN vt0 WHERE ((((rt1.c0 IN ()))/((((rt1.c4))<>((rt1.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 IN ()))/((((rt1.c4))!=((rt1.c3)))))) IS TRUE)  as count FROM rt1, v0 NATURAL JOIN vt0);
SELECT * FROM rt1, v0 NATURAL JOIN vt0 WHERE ((((rt1.c0 IN ()))/((((rt1.c4))<>((rt1.c3))))));
SELECT * FROM v0, vt0 WHERE ((NOT (CASE NULL  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE NULL  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((NOT (CASE NULL  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE NULL  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((NOT (CASE NULL  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT * FROM vt0, rt1 WHERE (((((((vt0.c0) IS TRUE))AND((rt1.c5 IN (rt1.c0)))))OR(((rt1.c3) ISNULL)))) ORDER BY TRIM((- (rt1.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) IS TRUE))AND((rt1.c5 IN (rt1.c0)))))OR(((rt1.c3) ISNULL)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY TRIM((- (rt1.c2))) DESC  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE (((((((vt0.c0) IS TRUE))AND((rt1.c5 IN (rt1.c0)))))OR(((rt1.c3) ISNULL)))) ORDER BY TRIM((- (rt1.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) IS TRUE))AND((rt1.c5 IN (rt1.c0)))))OR(((rt1.c3) ISNULL)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY TRIM((- (rt1.c2))) DESC  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE (((((((vt0.c0) IS TRUE))AND((rt1.c5 IN (rt1.c0)))))OR(((rt1.c3) ISNULL)))) ORDER BY TRIM((- (rt1.c2))) DESC  NULLS LAST;
SELECT ALL * FROM rt1 NATURAL JOIN vt0 WHERE (((((rt1.c5) NOT BETWEEN ('213624311') AND (rt1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt1.c5) NOT BETWEEN ('213624311') AND (rt1.c0))) IS FALSE)) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0);
SELECT ALL * FROM rt1 NATURAL JOIN vt0 WHERE (((((rt1.c5) NOT BETWEEN ('213624311') AND (rt1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt1.c5) NOT BETWEEN ('213624311') AND (rt1.c0))) IS FALSE)) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0);
SELECT ALL * FROM rt1 NATURAL JOIN vt0 WHERE (((((rt1.c5) NOT BETWEEN ('213624311') AND (rt1.c0))) IS FALSE));
SELECT COUNT(*) FROM rt1 INNER JOIN vt0 ON ((CASE rt1.c4  WHEN v0.c2 THEN v0.c0 END) NOT BETWEEN (LIKELY(rt1.c2)) AND (rt1.c0)) RIGHT OUTER JOIN v0 ON ((((((((((((vt0.c0)AND(rt1.c2)))OR(rt1.c2)))AND(((rt1.c3)%(v0.c1)))))OR(rt1.c3)))AND((((rt1.c2))>=((vt0.c0))))))OR((rt1.c0 IN (NULL)))) WHERE ('') ORDER BY SQLITE_COMPILEOPTION_USED(((x'')||(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON ((CASE rt1.c4  WHEN v0.c2 THEN v0.c0 END) NOT BETWEEN (LIKELY(rt1.c2)) AND (rt1.c0)) RIGHT OUTER JOIN v0 ON ((((((((((((vt0.c0)AND(rt1.c2)))OR(rt1.c2)))AND(((rt1.c3)%(v0.c1)))))OR(rt1.c3)))AND((((rt1.c2))>=((vt0.c0))))))OR((rt1.c0 IN (NULL)))) ORDER BY SQLITE_COMPILEOPTION_USED(((x'')||(vt0.c0))) ASC);
SELECT COUNT(*) FROM rt1 INNER JOIN vt0 ON ((CASE rt1.c4  WHEN v0.c2 THEN v0.c0 END) NOT BETWEEN (LIKELY(rt1.c2)) AND (rt1.c0)) RIGHT OUTER JOIN v0 ON ((((((((((((vt0.c0)AND(rt1.c2)))OR(rt1.c2)))AND(((rt1.c3)%(v0.c1)))))OR(rt1.c3)))AND((((rt1.c2))>=((vt0.c0))))))OR((rt1.c0 IN (NULL)))) WHERE ('') ORDER BY SQLITE_COMPILEOPTION_USED(((x'')||(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON ((CASE rt1.c4  WHEN v0.c2 THEN v0.c0 END) NOT BETWEEN (LIKELY(rt1.c2)) AND (rt1.c0)) RIGHT OUTER JOIN v0 ON ((((((((((((vt0.c0)AND(rt1.c2)))OR(rt1.c2)))AND(((rt1.c3)%(v0.c1)))))OR(rt1.c3)))AND((((rt1.c2))>=((vt0.c0))))))OR((rt1.c0 IN (NULL)))) ORDER BY SQLITE_COMPILEOPTION_USED(((x'')||(vt0.c0))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE ((NULL IN (((v0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN (((v0.c2) IS FALSE)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((NULL IN (((v0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN (((v0.c2) IS FALSE)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((NULL IN (((v0.c2) IS FALSE))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt1 ON (TYPEOF(rt1.c5) IN ()) WHERE (((rt1.c1 COLLATE NOCASE)>(((((rt1.c5)AND(rt1.c5)))AND(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 COLLATE NOCASE)>(((((rt1.c5)AND(rt1.c5)))AND(rt1.c1))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt1 ON (TYPEOF(rt1.c5) IN ()));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt1 ON (TYPEOF(rt1.c5) IN ()) WHERE (((rt1.c1 COLLATE NOCASE)>(((((rt1.c5)AND(rt1.c5)))AND(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 COLLATE NOCASE)>(((((rt1.c5)AND(rt1.c5)))AND(rt1.c1))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt1 ON (TYPEOF(rt1.c5) IN ()));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt1 ON (TYPEOF(rt1.c5) IN ()) WHERE (((rt1.c1 COLLATE NOCASE)>(((((rt1.c5)AND(rt1.c5)))AND(rt1.c1)))));
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((NULL)) AND ((((vt0.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((NULL)) AND ((((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((NULL)) AND ((((vt0.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((NULL)) AND ((((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((NULL)) AND ((((vt0.c0) NOT NULL)))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c1)OR(CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN '!(' WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END)))AND((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)OR(CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN '!(' WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END)))AND((- (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c1)OR(CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN '!(' WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END)))AND((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)OR(CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN '!(' WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END)))AND((- (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c1)OR(CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN '!(' WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END)))AND((- (v0.c0)))));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) ISNULL));
SELECT COUNT(*) FROM v0, rt1 WHERE (0.49562404746466204) ORDER BY CAST(((rt1.c1)|(rt1.c2)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((0.49562404746466204) IS TRUE)  as count FROM v0, rt1 ORDER BY CAST(((rt1.c1)|(rt1.c2)) AS INTEGER));
SELECT COUNT(*) FROM v0, rt1 WHERE (0.49562404746466204) ORDER BY CAST(((rt1.c1)|(rt1.c2)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((0.49562404746466204) IS TRUE)  as count FROM v0, rt1 ORDER BY CAST(((rt1.c1)|(rt1.c2)) AS INTEGER));
SELECT COUNT(*) FROM v0, rt1 WHERE (0.49562404746466204) ORDER BY CAST(((rt1.c1)|(rt1.c2)) AS INTEGER);
SELECT ALL COUNT(*) FROM rt1, vt0, v0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1, vt0, v0);
SELECT ALL COUNT(*) FROM rt1, vt0, v0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1, vt0, v0);
SELECT ALL COUNT(*) FROM rt1, vt0, v0 WHERE (rt1.c0);
SELECT * FROM rt1 WHERE (CASE rt1.c0 COLLATE BINARY  WHEN ((rt1.c1) NOT BETWEEN (rt1.c3) AND (-9.98347034E8)) THEN CASE WHEN '5N' THEN rt1.c5 ELSE rt1.c4 END ELSE ((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE rt1.c0 COLLATE BINARY  WHEN ((rt1.c1) NOT BETWEEN (rt1.c3) AND (-9.98347034E8)) THEN CASE WHEN '5N' THEN rt1.c5 ELSE rt1.c4 END ELSE ((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c0)) END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE rt1.c0 COLLATE BINARY  WHEN ((rt1.c1) NOT BETWEEN (rt1.c3) AND (-9.98347034E8)) THEN CASE WHEN '5N' THEN rt1.c5 ELSE rt1.c4 END ELSE ((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE rt1.c0 COLLATE BINARY  WHEN ((rt1.c1) NOT BETWEEN (rt1.c3) AND (-9.98347034E8)) THEN CASE WHEN '5N' THEN rt1.c5 ELSE rt1.c4 END ELSE ((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c0)) END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE rt1.c0 COLLATE BINARY  WHEN ((rt1.c1) NOT BETWEEN (rt1.c3) AND (-9.98347034E8)) THEN CASE WHEN '5N' THEN rt1.c5 ELSE rt1.c4 END ELSE ((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c0)) END);
SELECT COUNT(*) FROM v0, vt0 INNER JOIN rt1 ON INSTR(((rt1.c1) IS TRUE), ((v0.c2)IS NOT(v0.c1))) WHERE (((((rt1.c3) IS FALSE))&((((vt0.c0, rt1.c3, vt0.c0)) BETWEEN (('0.9886562770091248', v0.c2, rt1.c2)) AND ((v0.c2, NULL, NULL))))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) IS FALSE))&((((vt0.c0, rt1.c3, vt0.c0)) BETWEEN (('0.9886562770091248', v0.c2, rt1.c2)) AND ((v0.c2, NULL, NULL)))))) IS TRUE)  as count FROM v0, vt0 INNER JOIN rt1 ON INSTR(((rt1.c1) IS TRUE), ((v0.c2)IS NOT(v0.c1))));
SELECT COUNT(*) FROM v0, vt0 INNER JOIN rt1 ON INSTR(((rt1.c1) IS TRUE), ((v0.c2)IS NOT(v0.c1))) WHERE (((((rt1.c3) IS FALSE))&((((vt0.c0, rt1.c3, vt0.c0)) BETWEEN (('0.9886562770091248', v0.c2, rt1.c2)) AND ((v0.c2, NULL, NULL))))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) IS FALSE))&((((vt0.c0, rt1.c3, vt0.c0)) BETWEEN (('0.9886562770091248', v0.c2, rt1.c2)) AND ((v0.c2, NULL, NULL)))))) IS TRUE)  as count FROM v0, vt0 INNER JOIN rt1 ON INSTR(((rt1.c1) IS TRUE), ((v0.c2)IS NOT(v0.c1))));
SELECT COUNT(*) FROM v0, vt0 INNER JOIN rt1 ON INSTR(((rt1.c1) IS TRUE), ((v0.c2)IS NOT(v0.c1))) WHERE (((((rt1.c3) IS FALSE))&((((vt0.c0, rt1.c3, vt0.c0)) BETWEEN (('0.9886562770091248', v0.c2, rt1.c2)) AND ((v0.c2, NULL, NULL))))));
SELECT COUNT(*) FROM vt0, v0, rt1 WHERE (((((v0.c2)|(rt1.c5)))OR(((vt0.c0)<>(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c2)|(rt1.c5)))OR(((vt0.c0)!=(rt1.c1))))) IS TRUE)  as count FROM vt0, v0, rt1);
SELECT COUNT(*) FROM vt0, v0, rt1 WHERE (((((v0.c2)|(rt1.c5)))OR(((vt0.c0)<>(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c2)|(rt1.c5)))OR(((vt0.c0)!=(rt1.c1))))) IS TRUE)  as count FROM vt0, v0, rt1);
SELECT COUNT(*) FROM vt0, v0, rt1 WHERE (((((v0.c2)|(rt1.c5)))OR(((vt0.c0)<>(rt1.c1)))));
SELECT * FROM rt1, v0 CROSS JOIN vt0 ON (- (CAST(rt1.c3 AS TEXT))) WHERE ('1741511457');
SELECT SUM(count) FROM (SELECT ALL (('1741511457') IS TRUE)  as count FROM rt1, v0 CROSS JOIN vt0 ON (- (CAST(rt1.c3 AS TEXT))));
SELECT * FROM rt1, v0 CROSS JOIN vt0 ON (- (CAST(rt1.c3 AS TEXT))) WHERE ('1741511457');
SELECT SUM(count) FROM (SELECT ALL (('1741511457') IS TRUE)  as count FROM rt1, v0 CROSS JOIN vt0 ON (- (CAST(rt1.c3 AS TEXT))));
SELECT * FROM rt1, v0 CROSS JOIN vt0 ON (- (CAST(rt1.c3 AS TEXT))) WHERE ('1741511457');
SELECT ALL COUNT(*) FROM rt1 WHERE (((UPPER('1877667890')) ISNULL));
SELECT SUM(count) FROM (SELECT ((((UPPER('1877667890')) ISNULL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((UPPER('1877667890')) ISNULL));
SELECT SUM(count) FROM (SELECT ((((UPPER('1877667890')) ISNULL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((UPPER('1877667890')) ISNULL));
SELECT COUNT(*) FROM v0, vt0 WHERE ((((v0.c0)IS NOT(vt0.c0)) IN ())) ORDER BY CAST((+ (vt0.c0)) AS INTEGER), ((v0.c0) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)IS NOT(vt0.c0)) IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST((+ (vt0.c0)) AS INTEGER), ((v0.c0) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((v0.c0)IS NOT(vt0.c0)) IN ())) ORDER BY CAST((+ (vt0.c0)) AS INTEGER), ((v0.c0) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)IS NOT(vt0.c0)) IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST((+ (vt0.c0)) AS INTEGER), ((v0.c0) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((v0.c0)IS NOT(vt0.c0)) IN ())) ORDER BY CAST((+ (vt0.c0)) AS INTEGER), ((v0.c0) IS FALSE)  NULLS LAST;
SELECT * FROM v0 WHERE ((((v0.c1, v0.c2, v0.c1)) NOT BETWEEN ((CAST(v0.c0 AS INTEGER), ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c0)), ((v0.c1)*(v0.c0)))) AND ((((v0.c0) NOTNULL), ((v0.c0) NOT NULL), (~ (v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c1, v0.c2, v0.c1)) NOT BETWEEN ((CAST(v0.c0 AS INTEGER), ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c0)), ((v0.c1)*(v0.c0)))) AND ((((v0.c0) NOTNULL), ((v0.c0) NOT NULL), (~ (v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c1, v0.c2, v0.c1)) NOT BETWEEN ((CAST(v0.c0 AS INTEGER), ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c0)), ((v0.c1)*(v0.c0)))) AND ((((v0.c0) NOTNULL), ((v0.c0) NOT NULL), (~ (v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c1, v0.c2, v0.c1)) NOT BETWEEN ((CAST(v0.c0 AS INTEGER), ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c0)), ((v0.c1)*(v0.c0)))) AND ((((v0.c0) NOTNULL), ((v0.c0) NOT NULL), (~ (v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c1, v0.c2, v0.c1)) NOT BETWEEN ((CAST(v0.c0 AS INTEGER), ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c0)), ((v0.c1)*(v0.c0)))) AND ((((v0.c0) NOTNULL), ((v0.c0) NOT NULL), (~ (v0.c0))))));
SELECT COUNT(*) FROM v0, rt1 WHERE (((((rt1.c2)<(0.6138456201469311)))>>(((rt1.c5)>=(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)<(0.6138456201469311)))>>(((rt1.c5)>=(rt1.c0))))) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM v0, rt1 WHERE (((((rt1.c2)<(0.6138456201469311)))>>(((rt1.c5)>=(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)<(0.6138456201469311)))>>(((rt1.c5)>=(rt1.c0))))) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM v0, rt1 WHERE (((((rt1.c2)<(0.6138456201469311)))>>(((rt1.c5)>=(rt1.c0)))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)AND(CAST(vt0.c0 AS TEXT))))OR((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(CAST(vt0.c0 AS TEXT))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)AND(CAST(vt0.c0 AS TEXT))))OR((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(CAST(vt0.c0 AS TEXT))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)AND(CAST(vt0.c0 AS TEXT))))OR((vt0.c0 IN ()))));
SELECT * FROM rt1, v0, vt0 WHERE ((((((rt1.c4) NOT NULL), (rt1.c2 IN (rt1.c0)), (((rt1.c3, rt1.c1, '366678145')) BETWEEN ((rt1.c1, rt1.c3, v0.c0)) AND ((rt1.c1, v0.c1, v0.c0)))))!=((((rt1.c3) BETWEEN (v0.c0) AND (rt1.c4)), ((rt1.c3) IS TRUE), ((((0.8656759204187502)OR(rt1.c2)))OR(v0.c2)))))) ORDER BY rt1.c3;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c4) NOT NULL), (rt1.c2 IN (rt1.c0)), (((rt1.c3, rt1.c1, '366678145')) BETWEEN ((rt1.c1, rt1.c3, v0.c0)) AND ((rt1.c1, v0.c1, v0.c0)))))<>((((rt1.c3) BETWEEN (v0.c0) AND (rt1.c4)), ((rt1.c3) IS TRUE), ((((0.8656759204187502)OR(rt1.c2)))OR(v0.c2)))))) IS TRUE)  as count FROM rt1, v0, vt0 ORDER BY rt1.c3);
SELECT * FROM rt1, v0, vt0 WHERE ((((((rt1.c4) NOT NULL), (rt1.c2 IN (rt1.c0)), (((rt1.c3, rt1.c1, '366678145')) BETWEEN ((rt1.c1, rt1.c3, v0.c0)) AND ((rt1.c1, v0.c1, v0.c0)))))!=((((rt1.c3) BETWEEN (v0.c0) AND (rt1.c4)), ((rt1.c3) IS TRUE), ((((0.8656759204187502)OR(rt1.c2)))OR(v0.c2)))))) ORDER BY rt1.c3;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c4) NOT NULL), (rt1.c2 IN (rt1.c0)), (((rt1.c3, rt1.c1, '366678145')) BETWEEN ((rt1.c1, rt1.c3, v0.c0)) AND ((rt1.c1, v0.c1, v0.c0)))))<>((((rt1.c3) BETWEEN (v0.c0) AND (rt1.c4)), ((rt1.c3) IS TRUE), ((((0.8656759204187502)OR(rt1.c2)))OR(v0.c2)))))) IS TRUE)  as count FROM rt1, v0, vt0 ORDER BY rt1.c3);
SELECT * FROM rt1, v0, vt0 WHERE ((((((rt1.c4) NOT NULL), (rt1.c2 IN (rt1.c0)), (((rt1.c3, rt1.c1, '366678145')) BETWEEN ((rt1.c1, rt1.c3, v0.c0)) AND ((rt1.c1, v0.c1, v0.c0)))))!=((((rt1.c3) BETWEEN (v0.c0) AND (rt1.c4)), ((rt1.c3) IS TRUE), ((((0.8656759204187502)OR(rt1.c2)))OR(v0.c2)))))) ORDER BY rt1.c3;
SELECT COUNT(*) FROM vt0, v0 WHERE (IFNULL(DISTINCT NULL, -2.077760072E9 COLLATE RTRIM)) ORDER BY (((v0.c1)) NOT BETWEEN (((((v0.c1, v0.c0, vt0.c0)) NOT BETWEEN (('0.9712361810156301', v0.c1, v0.c1)) AND ((v0.c1, v0.c1, v0.c2))))) AND ((((v0.c0)||(vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT NULL, -2.077760072E9 COLLATE RTRIM)) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c1)) NOT BETWEEN (((((v0.c1, v0.c0, vt0.c0)) NOT BETWEEN (('0.9712361810156301', v0.c1, v0.c1)) AND ((v0.c1, v0.c1, v0.c2))))) AND ((((v0.c0)||(vt0.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (IFNULL(DISTINCT NULL, -2.077760072E9 COLLATE RTRIM)) ORDER BY (((v0.c1)) NOT BETWEEN (((((v0.c1, v0.c0, vt0.c0)) NOT BETWEEN (('0.9712361810156301', v0.c1, v0.c1)) AND ((v0.c1, v0.c1, v0.c2))))) AND ((((v0.c0)||(vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT NULL, -2.077760072E9 COLLATE RTRIM)) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c1)) NOT BETWEEN (((((v0.c1, v0.c0, vt0.c0)) NOT BETWEEN (('0.9712361810156301', v0.c1, v0.c1)) AND ((v0.c1, v0.c1, v0.c2))))) AND ((((v0.c0)||(vt0.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (IFNULL(DISTINCT NULL, -2.077760072E9 COLLATE RTRIM)) ORDER BY (((v0.c1)) NOT BETWEEN (((((v0.c1, v0.c0, vt0.c0)) NOT BETWEEN (('0.9712361810156301', v0.c1, v0.c1)) AND ((v0.c1, v0.c1, v0.c2))))) AND ((((v0.c0)||(vt0.c0))))) ASC  NULLS LAST;
SELECT * FROM vt0, v0 WHERE ((((v0.c0)) BETWEEN ((v0.c2)) AND (('-1081765039')))) ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c2 ELSE vt0.c0 END AS BLOB), (((~ (v0.c2))) NOTNULL);
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((v0.c2)) AND (('-1081765039')))) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c2 ELSE vt0.c0 END AS BLOB), (((~ (v0.c2))) NOTNULL));
SELECT * FROM vt0, v0 WHERE ((((v0.c0)) BETWEEN ((v0.c2)) AND (('-1081765039')))) ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c2 ELSE vt0.c0 END AS BLOB), (((~ (v0.c2))) NOTNULL);
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((v0.c2)) AND (('-1081765039')))) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c2 ELSE vt0.c0 END AS BLOB), (((~ (v0.c2))) NOTNULL));
SELECT * FROM vt0, v0 WHERE ((((v0.c0)) BETWEEN ((v0.c2)) AND (('-1081765039')))) ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c2 ELSE vt0.c0 END AS BLOB), (((~ (v0.c2))) NOTNULL);
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ (NULL))) ORDER BY ((json_patch(rt1.c1, rt1.c2)) BETWEEN (rt1.c2) AND (((rt1.c3)|(rt1.c1)))) DESC  NULLS FIRST, ((-76027986)&(((rt1.c5) BETWEEN (rt1.c1) AND (rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (NULL))) IS TRUE)  as count FROM rt1 ORDER BY ((json_patch(rt1.c1, rt1.c2)) BETWEEN (rt1.c2) AND (((rt1.c3)|(rt1.c1)))) DESC  NULLS FIRST, ((-76027986)&(((rt1.c5) BETWEEN (rt1.c1) AND (rt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ (NULL))) ORDER BY ((json_patch(rt1.c1, rt1.c2)) BETWEEN (rt1.c2) AND (((rt1.c3)|(rt1.c1)))) DESC  NULLS FIRST, ((-76027986)&(((rt1.c5) BETWEEN (rt1.c1) AND (rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (NULL))) IS TRUE)  as count FROM rt1 ORDER BY ((json_patch(rt1.c1, rt1.c2)) BETWEEN (rt1.c2) AND (((rt1.c3)|(rt1.c1)))) DESC  NULLS FIRST, ((-76027986)&(((rt1.c5) BETWEEN (rt1.c1) AND (rt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ (NULL))) ORDER BY ((json_patch(rt1.c1, rt1.c2)) BETWEEN (rt1.c2) AND (((rt1.c3)|(rt1.c1)))) DESC  NULLS FIRST, ((-76027986)&(((rt1.c5) BETWEEN (rt1.c1) AND (rt1.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT * FROM v0, rt1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN (('-970839618')) AND ((rt1.c5))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (('-970839618')) AND ((rt1.c5))) COLLATE BINARY) IS TRUE)  as count FROM v0, rt1, vt0);
SELECT * FROM v0, rt1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN (('-970839618')) AND ((rt1.c5))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (('-970839618')) AND ((rt1.c5))) COLLATE BINARY) IS TRUE)  as count FROM v0, rt1, vt0);
SELECT * FROM v0, rt1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN (('-970839618')) AND ((rt1.c5))) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, rt1 RIGHT OUTER JOIN v0 ON CAST((v0.c2 IN ()) AS BLOB) WHERE (json_extract(x'eb80', ((rt1.c0) NOT BETWEEN (v0.c1) AND (rt1.c3)))) ORDER BY 0Xffffffffc47e6ee6;
SELECT SUM(count) FROM (SELECT ALL ((json_extract(x'eb80', ((rt1.c0) NOT BETWEEN (v0.c1) AND (rt1.c3)))) IS TRUE)  as count FROM vt0, rt1 RIGHT OUTER JOIN v0 ON CAST((v0.c2 IN ()) AS BLOB) ORDER BY 0Xffffffffc47e6ee6);
SELECT COUNT(*) FROM vt0, rt1 RIGHT OUTER JOIN v0 ON CAST((v0.c2 IN ()) AS BLOB) WHERE (json_extract(x'eb80', ((rt1.c0) NOT BETWEEN (v0.c1) AND (rt1.c3)))) ORDER BY 0Xffffffffc47e6ee6;
SELECT SUM(count) FROM (SELECT ALL ((json_extract(x'eb80', ((rt1.c0) NOT BETWEEN (v0.c1) AND (rt1.c3)))) IS TRUE)  as count FROM vt0, rt1 RIGHT OUTER JOIN v0 ON CAST((v0.c2 IN ()) AS BLOB) ORDER BY 0Xffffffffc47e6ee6);
SELECT ALL COUNT(*) FROM vt0, rt1 INNER JOIN v0 ON UNLIKELY(v0.c0) COLLATE BINARY COLLATE RTRIM WHERE ((LIKELY(DISTINCT rt1.c4) IN ((v0.c1 IN (rt1.c4))))) ORDER BY ((((CASE v0.c0  WHEN rt1.c4 THEN rt1.c3 ELSE v0.c1 END)OR(((-1.79433443E9)||('0.4777875740187566')))))AND(((rt1.c5) NOTNULL)));
SELECT SUM(count) FROM (SELECT (((LIKELY(DISTINCT rt1.c4) IN ((v0.c1 IN (rt1.c4))))) IS TRUE)  as count FROM vt0, rt1 INNER JOIN v0 ON UNLIKELY(v0.c0) COLLATE BINARY COLLATE RTRIM ORDER BY ((((CASE v0.c0  WHEN rt1.c4 THEN rt1.c3 ELSE v0.c1 END)OR(((-1.79433443E9)||('0.4777875740187566')))))AND(((rt1.c5) NOTNULL))));
SELECT ALL COUNT(*) FROM vt0, rt1 INNER JOIN v0 ON UNLIKELY(v0.c0) COLLATE BINARY COLLATE RTRIM WHERE ((LIKELY(DISTINCT rt1.c4) IN ((v0.c1 IN (rt1.c4))))) ORDER BY ((((CASE v0.c0  WHEN rt1.c4 THEN rt1.c3 ELSE v0.c1 END)OR(((-1.79433443E9)||('0.4777875740187566')))))AND(((rt1.c5) NOTNULL)));
SELECT SUM(count) FROM (SELECT (((LIKELY(DISTINCT rt1.c4) IN ((v0.c1 IN (rt1.c4))))) IS TRUE)  as count FROM vt0, rt1 INNER JOIN v0 ON UNLIKELY(v0.c0) COLLATE BINARY COLLATE RTRIM ORDER BY ((((CASE v0.c0  WHEN rt1.c4 THEN rt1.c3 ELSE v0.c1 END)OR(((-1.79433443E9)||('0.4777875740187566')))))AND(((rt1.c5) NOTNULL))));
SELECT ALL COUNT(*) FROM vt0, rt1 INNER JOIN v0 ON UNLIKELY(v0.c0) COLLATE BINARY COLLATE RTRIM WHERE ((LIKELY(DISTINCT rt1.c4) IN ((v0.c1 IN (rt1.c4))))) ORDER BY ((((CASE v0.c0  WHEN rt1.c4 THEN rt1.c3 ELSE v0.c1 END)OR(((-1.79433443E9)||('0.4777875740187566')))))AND(((rt1.c5) NOTNULL)));
SELECT * FROM rt1 WHERE (LIKELY(DISTINCT rt1.c3 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT rt1.c3 COLLATE RTRIM)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (LIKELY(DISTINCT rt1.c3 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT rt1.c3 COLLATE RTRIM)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (LIKELY(DISTINCT rt1.c3 COLLATE RTRIM));
SELECT * FROM vt0, v0 WHERE (((((v0.c2) NOT BETWEEN (vt0.c0) AND (v0.c1))) NOTNULL)) ORDER BY (NOT (((v0.c1) ISNULL))), NULL DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c2) NOT BETWEEN (vt0.c0) AND (v0.c1))) NOTNULL)) IS TRUE)  as count FROM vt0, v0 ORDER BY (NOT (((v0.c1) ISNULL))), NULL DESC);
SELECT * FROM vt0, v0 WHERE (((((v0.c2) NOT BETWEEN (vt0.c0) AND (v0.c1))) NOTNULL)) ORDER BY (NOT (((v0.c1) ISNULL))), NULL DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c2) NOT BETWEEN (vt0.c0) AND (v0.c1))) NOTNULL)) IS TRUE)  as count FROM vt0, v0 ORDER BY (NOT (((v0.c1) ISNULL))), NULL DESC);
SELECT * FROM vt0, v0 WHERE (((((v0.c2) NOT BETWEEN (vt0.c0) AND (v0.c1))) NOTNULL)) ORDER BY (NOT (((v0.c1) ISNULL))), NULL DESC;
SELECT ALL * FROM rt1, vt0 WHERE (((rt1.c3 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt1.c3 IN ()) IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((rt1.c3 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt1.c3 IN ()) IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((rt1.c3 IN ()) IN ()));
SELECT * FROM vt0 WHERE ((NOT ((NOT (vt0.c0))))) ORDER BY 'r緇1ウ|㎜(', NULLIF(((vt0.c0) IS TRUE), (vt0.c0 IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY 'r緇1ウ|㎜(', NULLIF(((vt0.c0) IS TRUE), (vt0.c0 IN ()))  NULLS LAST);
SELECT * FROM vt0 WHERE ((NOT ((NOT (vt0.c0))))) ORDER BY 'r緇1ウ|㎜(', NULLIF(((vt0.c0) IS TRUE), (vt0.c0 IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY 'r緇1ウ|㎜(', NULLIF(((vt0.c0) IS TRUE), (vt0.c0 IN ()))  NULLS LAST);
SELECT * FROM vt0 WHERE ((NOT ((NOT (vt0.c0))))) ORDER BY 'r緇1ウ|㎜(', NULLIF(((vt0.c0) IS TRUE), (vt0.c0 IN ()))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'c0a8') NOT BETWEEN (vt0.c0) AND ((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((x'c0a8') NOT BETWEEN (vt0.c0) AND ((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'c0a8') NOT BETWEEN (vt0.c0) AND ((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((x'c0a8') NOT BETWEEN (vt0.c0) AND ((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'c0a8') NOT BETWEEN (vt0.c0) AND ((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))))));
SELECT COUNT(*) FROM vt0, v0, rt1 WHERE (CASE ((rt1.c0) IS TRUE)  WHEN ABS(DISTINCT rt1.c5) THEN json_insert(rt1.c4, rt1.c5, v0.c2, v0.c0, rt1.c2, NULL, rt1.c2) ELSE (((vt0.c0, rt1.c4, rt1.c4))>((rt1.c5, v0.c1, vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c0) IS TRUE)  WHEN ABS(DISTINCT rt1.c5) THEN json_insert(rt1.c4, rt1.c5, v0.c2, v0.c0, rt1.c2, NULL, rt1.c2) ELSE (((vt0.c0, rt1.c4, rt1.c4))>((rt1.c5, v0.c1, vt0.c0))) END) IS TRUE)  as count FROM vt0, v0, rt1);
SELECT COUNT(*) FROM vt0, v0, rt1 WHERE (CASE ((rt1.c0) IS TRUE)  WHEN ABS(DISTINCT rt1.c5) THEN json_insert(rt1.c4, rt1.c5, v0.c2, v0.c0, rt1.c2, NULL, rt1.c2) ELSE (((vt0.c0, rt1.c4, rt1.c4))>((rt1.c5, v0.c1, vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c0) IS TRUE)  WHEN ABS(DISTINCT rt1.c5) THEN json_insert(rt1.c4, rt1.c5, v0.c2, v0.c0, rt1.c2, NULL, rt1.c2) ELSE (((vt0.c0, rt1.c4, rt1.c4))>((rt1.c5, v0.c1, vt0.c0))) END) IS TRUE)  as count FROM vt0, v0, rt1);
SELECT ALL * FROM vt0, v0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c1)) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c1)) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c1)) IN ()));
SELECT ALL COUNT(*) FROM v0, vt0 CROSS JOIN rt1 ON (((rt1.c0 IN (v0.c0)))IS NOT((((''))=((v0.c2))))) WHERE (((CASE rt1.c2  WHEN v0.c2 THEN x'' WHEN vt0.c0 THEN rt1.c5 WHEN rt1.c5 THEN v0.c0 ELSE v0.c0 END)-(((rt1.c3) BETWEEN (v0.c0) AND (0.40838751818716423)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c2  WHEN v0.c2 THEN x'' WHEN vt0.c0 THEN rt1.c5 WHEN rt1.c5 THEN v0.c0 ELSE v0.c0 END)-(((rt1.c3) BETWEEN (v0.c0) AND (0.40838751818716423))))) IS TRUE)  as count FROM v0, vt0 CROSS JOIN rt1 ON (((rt1.c0 IN (v0.c0)))IS NOT((((''))==((v0.c2))))));
SELECT ALL COUNT(*) FROM v0, vt0 CROSS JOIN rt1 ON (((rt1.c0 IN (v0.c0)))IS NOT((((''))=((v0.c2))))) WHERE (((CASE rt1.c2  WHEN v0.c2 THEN x'' WHEN vt0.c0 THEN rt1.c5 WHEN rt1.c5 THEN v0.c0 ELSE v0.c0 END)-(((rt1.c3) BETWEEN (v0.c0) AND (0.40838751818716423)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c2  WHEN v0.c2 THEN x'' WHEN vt0.c0 THEN rt1.c5 WHEN rt1.c5 THEN v0.c0 ELSE v0.c0 END)-(((rt1.c3) BETWEEN (v0.c0) AND (0.40838751818716423))))) IS TRUE)  as count FROM v0, vt0 CROSS JOIN rt1 ON (((rt1.c0 IN (v0.c0)))IS NOT((((''))==((v0.c2))))));
SELECT ALL COUNT(*) FROM v0, vt0 CROSS JOIN rt1 ON (((rt1.c0 IN (v0.c0)))IS NOT((((''))=((v0.c2))))) WHERE (((CASE rt1.c2  WHEN v0.c2 THEN x'' WHEN vt0.c0 THEN rt1.c5 WHEN rt1.c5 THEN v0.c0 ELSE v0.c0 END)-(((rt1.c3) BETWEEN (v0.c0) AND (0.40838751818716423)))));
SELECT * FROM v0, rt1 WHERE (((((((((CASE WHEN v0.c1 THEN rt1.c0 ELSE rt1.c0 END)OR(COALESCE(rt1.c3, rt1.c1))))OR(((rt1.c0)<<(rt1.c1)))))OR('H.' COLLATE RTRIM)))OR(v0.c1 COLLATE RTRIM))) ORDER BY (((((rt1.c3)) BETWEEN ((rt1.c4)) AND ((rt1.c4)))) ISNULL) ASC, (+ ((((v0.c0))>((rt1.c3))))) DESC, ((NULLIF(rt1.c2, rt1.c2)) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN v0.c1 THEN rt1.c0 ELSE rt1.c0 END)OR(COALESCE(rt1.c3, rt1.c1))))OR(((rt1.c0)<<(rt1.c1)))))OR('H.' COLLATE RTRIM)))OR(v0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM v0, rt1 ORDER BY (((((rt1.c3)) BETWEEN ((rt1.c4)) AND ((rt1.c4)))) ISNULL) ASC, (+ ((((v0.c0))>((rt1.c3))))) DESC, ((NULLIF(rt1.c2, rt1.c2)) IS FALSE) DESC);
SELECT * FROM v0, rt1 WHERE (((((((((CASE WHEN v0.c1 THEN rt1.c0 ELSE rt1.c0 END)OR(COALESCE(rt1.c3, rt1.c1))))OR(((rt1.c0)<<(rt1.c1)))))OR('H.' COLLATE RTRIM)))OR(v0.c1 COLLATE RTRIM))) ORDER BY (((((rt1.c3)) BETWEEN ((rt1.c4)) AND ((rt1.c4)))) ISNULL) ASC, (+ ((((v0.c0))>((rt1.c3))))) DESC, ((NULLIF(rt1.c2, rt1.c2)) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN v0.c1 THEN rt1.c0 ELSE rt1.c0 END)OR(COALESCE(rt1.c3, rt1.c1))))OR(((rt1.c0)<<(rt1.c1)))))OR('H.' COLLATE RTRIM)))OR(v0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM v0, rt1 ORDER BY (((((rt1.c3)) BETWEEN ((rt1.c4)) AND ((rt1.c4)))) ISNULL) ASC, (+ ((((v0.c0))>((rt1.c3))))) DESC, ((NULLIF(rt1.c2, rt1.c2)) IS FALSE) DESC);
SELECT * FROM v0, rt1 WHERE (((((((((CASE WHEN v0.c1 THEN rt1.c0 ELSE rt1.c0 END)OR(COALESCE(rt1.c3, rt1.c1))))OR(((rt1.c0)<<(rt1.c1)))))OR('H.' COLLATE RTRIM)))OR(v0.c1 COLLATE RTRIM))) ORDER BY (((((rt1.c3)) BETWEEN ((rt1.c4)) AND ((rt1.c4)))) ISNULL) ASC, (+ ((((v0.c0))>((rt1.c3))))) DESC, ((NULLIF(rt1.c2, rt1.c2)) IS FALSE) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) IS FALSE), LIKELIHOOD(vt0.c0, 0.31931663640466734), ((vt0.c0)<(vt0.c0)))) AND ((((NULL) ISNULL), ((vt0.c0) IS FALSE), CAST(vt0.c0 AS TEXT))))) ORDER BY ''  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) IS FALSE), LIKELIHOOD(vt0.c0, 0.31931663640466734), ((vt0.c0)<(vt0.c0)))) AND ((((NULL) ISNULL), ((vt0.c0) IS FALSE), CAST(vt0.c0 AS TEXT))))) IS TRUE)  as count FROM vt0 ORDER BY ''  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) IS FALSE), LIKELIHOOD(vt0.c0, 0.31931663640466734), ((vt0.c0)<(vt0.c0)))) AND ((((NULL) ISNULL), ((vt0.c0) IS FALSE), CAST(vt0.c0 AS TEXT))))) ORDER BY ''  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) IS FALSE), LIKELIHOOD(vt0.c0, 0.31931663640466734), ((vt0.c0)<(vt0.c0)))) AND ((((NULL) ISNULL), ((vt0.c0) IS FALSE), CAST(vt0.c0 AS TEXT))))) IS TRUE)  as count FROM vt0 ORDER BY ''  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) IS FALSE), LIKELIHOOD(vt0.c0, 0.31931663640466734), ((vt0.c0)<(vt0.c0)))) AND ((((NULL) ISNULL), ((vt0.c0) IS FALSE), CAST(vt0.c0 AS TEXT))))) ORDER BY ''  NULLS LAST;
SELECT ALL * FROM v0, vt0, rt1 WHERE (((v0.c1) ISNULL)) ORDER BY (((v0.c1) BETWEEN (rt1.c5) AND (0.24378452563033381)) IN ());
SELECT SUM(count) FROM (SELECT ((((v0.c1) ISNULL)) IS TRUE)  as count FROM v0, vt0, rt1 ORDER BY (((v0.c1) BETWEEN (rt1.c5) AND (0.24378452563033381)) IN ()));
SELECT ALL * FROM v0, vt0, rt1 WHERE (((v0.c1) ISNULL)) ORDER BY (((v0.c1) BETWEEN (rt1.c5) AND (0.24378452563033381)) IN ());
SELECT SUM(count) FROM (SELECT ((((v0.c1) ISNULL)) IS TRUE)  as count FROM v0, vt0, rt1 ORDER BY (((v0.c1) BETWEEN (rt1.c5) AND (0.24378452563033381)) IN ()));
SELECT ALL * FROM v0, vt0, rt1 WHERE (((v0.c1) ISNULL)) ORDER BY (((v0.c1) BETWEEN (rt1.c5) AND (0.24378452563033381)) IN ());
SELECT ALL * FROM v0, vt0 WHERE (((load_extension(v0.c2))/((NOT (v0.c1))))) ORDER BY ((((~ (v0.c2))))=((0.1633631748667954))) DESC, (((((v0.c2) BETWEEN (v0.c1) AND (v0.c0))))<((((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c2))))) ASC  NULLS FIRST, TRIM(v0.c2 COLLATE NOCASE, CAST(v0.c1 AS TEXT))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((load_extension(v0.c2))/((NOT (v0.c1))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((~ (v0.c2))))==((0.1633631748667954))) DESC, (((((v0.c2) BETWEEN (v0.c1) AND (v0.c0))))<((((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c2))))) ASC  NULLS FIRST, TRIM(v0.c2 COLLATE NOCASE, CAST(v0.c1 AS TEXT))  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (((load_extension(v0.c2))/((NOT (v0.c1))))) ORDER BY ((((~ (v0.c2))))=((0.1633631748667954))) DESC, (((((v0.c2) BETWEEN (v0.c1) AND (v0.c0))))<((((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c2))))) ASC  NULLS FIRST, TRIM(v0.c2 COLLATE NOCASE, CAST(v0.c1 AS TEXT))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((load_extension(v0.c2))/((NOT (v0.c1))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((~ (v0.c2))))==((0.1633631748667954))) DESC, (((((v0.c2) BETWEEN (v0.c1) AND (v0.c0))))<((((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c2))))) ASC  NULLS FIRST, TRIM(v0.c2 COLLATE NOCASE, CAST(v0.c1 AS TEXT))  NULLS LAST);
SELECT * FROM v0, rt1 FULL OUTER JOIN vt0 ON NULL WHERE (((+ (rt1.c4)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (rt1.c4)) IN ())) IS TRUE)  as count FROM v0, rt1 FULL OUTER JOIN vt0 ON NULL);
SELECT * FROM v0, rt1 FULL OUTER JOIN vt0 ON NULL WHERE (((+ (rt1.c4)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (rt1.c4)) IN ())) IS TRUE)  as count FROM v0, rt1 FULL OUTER JOIN vt0 ON NULL);
SELECT * FROM v0, rt1 FULL OUTER JOIN vt0 ON NULL WHERE (((+ (rt1.c4)) IN ()));
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), vt0.c0 COLLATE NOCASE)) AND (((vt0.c0 IN (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))) ORDER BY (((-393004630)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), vt0.c0 COLLATE NOCASE)) AND (((vt0.c0 IN (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((-393004630)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((vt0.c0))));
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), vt0.c0 COLLATE NOCASE)) AND (((vt0.c0 IN (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))) ORDER BY (((-393004630)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), vt0.c0 COLLATE NOCASE)) AND (((vt0.c0 IN (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((-393004630)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((vt0.c0))));
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), vt0.c0 COLLATE NOCASE)) AND (((vt0.c0 IN (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))) ORDER BY (((-393004630)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((vt0.c0)));
SELECT COUNT(*) FROM vt0, rt1 WHERE (0Xffffffffb964e68f);
SELECT SUM(count) FROM (SELECT ((0xffffffffb964e68f) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (0Xffffffffb964e68f);
SELECT SUM(count) FROM (SELECT ((0xffffffffb964e68f) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (0Xffffffffb964e68f);
SELECT * FROM rt1 WHERE (rt1.c5) ORDER BY (((rt1.c5 COLLATE BINARY))>=(((rt1.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ((rt1.c5) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c5 COLLATE BINARY))>=(((rt1.c3 IN ())))));
SELECT * FROM rt1 WHERE (rt1.c5) ORDER BY (((rt1.c5 COLLATE BINARY))>=(((rt1.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ((rt1.c5) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c5 COLLATE BINARY))>=(((rt1.c3 IN ())))));
SELECT * FROM rt1 WHERE (rt1.c5) ORDER BY (((rt1.c5 COLLATE BINARY))>=(((rt1.c3 IN ()))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (rt1.c2);
SELECT ALL COUNT(*) FROM rt1, v0, vt0 WHERE (((-1110811138) BETWEEN (rt1.c1) AND (CAST(rt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((-1110811138) BETWEEN (rt1.c1) AND (CAST(rt1.c0 AS INTEGER)))) IS TRUE)  as count FROM rt1, v0, vt0);
SELECT ALL COUNT(*) FROM rt1, v0, vt0 WHERE (((-1110811138) BETWEEN (rt1.c1) AND (CAST(rt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((-1110811138) BETWEEN (rt1.c1) AND (CAST(rt1.c0 AS INTEGER)))) IS TRUE)  as count FROM rt1, v0, vt0);
SELECT ALL COUNT(*) FROM rt1, v0, vt0 WHERE (((-1110811138) BETWEEN (rt1.c1) AND (CAST(rt1.c0 AS INTEGER))));
SELECT ALL * FROM vt0, rt1 WHERE (LIKELIHOOD((rt1.c2 IN (rt1.c2, vt0.c0)), 0.24781031280763766));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((rt1.c2 IN (rt1.c2, vt0.c0)), 0.24781031280763766)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (LIKELIHOOD((rt1.c2 IN (rt1.c2, vt0.c0)), 0.24781031280763766));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((rt1.c2 IN (rt1.c2, vt0.c0)), 0.24781031280763766)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (LIKELIHOOD((rt1.c2 IN (rt1.c2, vt0.c0)), 0.24781031280763766));
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c4)&(x'')) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt1.c4)&(x'')) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c4)&(x'')) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt1.c4)&(x'')) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c4)&(x'')) COLLATE NOCASE COLLATE RTRIM);
SELECT ALL * FROM v0 NATURAL JOIN rt1 WHERE (CASE WHEN (~ (v0.c2)) THEN (~ (rt1.c2)) WHEN (v0.c0 IN ()) THEN ((v0.c2)||(NULL)) WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c1)) THEN (~ (rt1.c0)) ELSE 0.5429925143325065 END) ORDER BY ((((((((CASE WHEN v0.c0 THEN v0.c2 ELSE rt1.c0 END)AND(((rt1.c0)OR(rt1.c5)))))OR(CASE v0.c2  WHEN rt1.c0 THEN rt1.c5 WHEN v0.c0 THEN rt1.c4 WHEN rt1.c1 THEN v0.c1 WHEN rt1.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c2 ELSE 'A VY5i' END)))OR((((rt1.c3))==((rt1.c3))))))OR(v0.c2)) DESC, ((((v0.c1) ISNULL)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (v0.c2)) THEN (~ (rt1.c2)) WHEN (v0.c0 IN ()) THEN ((v0.c2)||(NULL)) WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c1)) THEN (~ (rt1.c0)) ELSE 0.5429925143325065 END) IS TRUE)  as count FROM v0 NATURAL JOIN rt1 ORDER BY ((((((((CASE WHEN v0.c0 THEN v0.c2 ELSE rt1.c0 END)AND(((rt1.c0)OR(rt1.c5)))))OR(CASE v0.c2  WHEN rt1.c0 THEN rt1.c5 WHEN v0.c0 THEN rt1.c4 WHEN rt1.c1 THEN v0.c1 WHEN rt1.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c2 ELSE 'A VY5i' END)))OR((((rt1.c3))==((rt1.c3))))))OR(v0.c2)) DESC, ((((v0.c1) ISNULL)) NOTNULL) ASC);
SELECT ALL * FROM v0 NATURAL JOIN rt1 WHERE (CASE WHEN (~ (v0.c2)) THEN (~ (rt1.c2)) WHEN (v0.c0 IN ()) THEN ((v0.c2)||(NULL)) WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c1)) THEN (~ (rt1.c0)) ELSE 0.5429925143325065 END) ORDER BY ((((((((CASE WHEN v0.c0 THEN v0.c2 ELSE rt1.c0 END)AND(((rt1.c0)OR(rt1.c5)))))OR(CASE v0.c2  WHEN rt1.c0 THEN rt1.c5 WHEN v0.c0 THEN rt1.c4 WHEN rt1.c1 THEN v0.c1 WHEN rt1.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c2 ELSE 'A VY5i' END)))OR((((rt1.c3))==((rt1.c3))))))OR(v0.c2)) DESC, ((((v0.c1) ISNULL)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (v0.c2)) THEN (~ (rt1.c2)) WHEN (v0.c0 IN ()) THEN ((v0.c2)||(NULL)) WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c1)) THEN (~ (rt1.c0)) ELSE 0.5429925143325065 END) IS TRUE)  as count FROM v0 NATURAL JOIN rt1 ORDER BY ((((((((CASE WHEN v0.c0 THEN v0.c2 ELSE rt1.c0 END)AND(((rt1.c0)OR(rt1.c5)))))OR(CASE v0.c2  WHEN rt1.c0 THEN rt1.c5 WHEN v0.c0 THEN rt1.c4 WHEN rt1.c1 THEN v0.c1 WHEN rt1.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c2 ELSE 'A VY5i' END)))OR((((rt1.c3))==((rt1.c3))))))OR(v0.c2)) DESC, ((((v0.c1) ISNULL)) NOTNULL) ASC);
SELECT ALL * FROM v0 NATURAL JOIN rt1 WHERE (CASE WHEN (~ (v0.c2)) THEN (~ (rt1.c2)) WHEN (v0.c0 IN ()) THEN ((v0.c2)||(NULL)) WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c1)) THEN (~ (rt1.c0)) ELSE 0.5429925143325065 END) ORDER BY ((((((((CASE WHEN v0.c0 THEN v0.c2 ELSE rt1.c0 END)AND(((rt1.c0)OR(rt1.c5)))))OR(CASE v0.c2  WHEN rt1.c0 THEN rt1.c5 WHEN v0.c0 THEN rt1.c4 WHEN rt1.c1 THEN v0.c1 WHEN rt1.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c2 ELSE 'A VY5i' END)))OR((((rt1.c3))==((rt1.c3))))))OR(v0.c2)) DESC, ((((v0.c1) ISNULL)) NOTNULL) ASC;
SELECT ALL * FROM rt1, v0 WHERE (((((((v0.c2)AND(v0.c2)))OR(rt1.c5)))OR(((rt1.c4) BETWEEN (v0.c0) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c2)AND(v0.c2)))OR(rt1.c5)))OR(((rt1.c4) BETWEEN (v0.c0) AND (rt1.c0))))) IS TRUE)  as count FROM rt1, v0);
SELECT ALL * FROM rt1, v0 WHERE (((((((v0.c2)AND(v0.c2)))OR(rt1.c5)))OR(((rt1.c4) BETWEEN (v0.c0) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c2)AND(v0.c2)))OR(rt1.c5)))OR(((rt1.c4) BETWEEN (v0.c0) AND (rt1.c0))))) IS TRUE)  as count FROM rt1, v0);
SELECT ALL * FROM rt1, v0 WHERE (((((((v0.c2)AND(v0.c2)))OR(rt1.c5)))OR(((rt1.c4) BETWEEN (v0.c0) AND (rt1.c0)))));
SELECT * FROM vt0, rt1 FULL OUTER JOIN v0 ON (rt1.c3 COLLATE BINARY IN ((~ (71147198)))) WHERE (rt1.c5 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c5 COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt1 FULL OUTER JOIN v0 ON (rt1.c3 COLLATE BINARY IN ((~ (71147198)))));
SELECT * FROM vt0, rt1 FULL OUTER JOIN v0 ON (rt1.c3 COLLATE BINARY IN ((~ (71147198)))) WHERE (rt1.c5 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c5 COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt1 FULL OUTER JOIN v0 ON (rt1.c3 COLLATE BINARY IN ((~ (71147198)))));
SELECT * FROM vt0, rt1 FULL OUTER JOIN v0 ON (rt1.c3 COLLATE BINARY IN ((~ (71147198)))) WHERE (rt1.c5 COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, v0, rt1 WHERE (((CAST(x'' AS INTEGER))<<(v0.c1 COLLATE NOCASE))) ORDER BY ((((v0.c2) ISNULL))&((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((rt1.c5)))))  NULLS FIRST, (vt0.c0 IN ()) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'' AS INTEGER))<<(v0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, v0, rt1 ORDER BY ((((v0.c2) ISNULL))&((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((rt1.c5)))))  NULLS FIRST, (vt0.c0 IN ()) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, v0, rt1 WHERE (((CAST(x'' AS INTEGER))<<(v0.c1 COLLATE NOCASE))) ORDER BY ((((v0.c2) ISNULL))&((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((rt1.c5)))))  NULLS FIRST, (vt0.c0 IN ()) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'' AS INTEGER))<<(v0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, v0, rt1 ORDER BY ((((v0.c2) ISNULL))&((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((rt1.c5)))))  NULLS FIRST, (vt0.c0 IN ()) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, v0, rt1 WHERE (((CAST(x'' AS INTEGER))<<(v0.c1 COLLATE NOCASE))) ORDER BY ((((v0.c2) ISNULL))&((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((rt1.c5)))))  NULLS FIRST, (vt0.c0 IN ()) COLLATE BINARY;
SELECT ALL * FROM rt1 WHERE ((rt1.c1 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((rt1.c1 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((rt1.c1 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((rt1.c1 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((rt1.c1 IN ()) COLLATE RTRIM);
SELECT ALL * FROM v0, rt1 RIGHT OUTER JOIN vt0 ON ((LOWER(DISTINCT rt1.c2))>=(CASE WHEN v0.c1 THEN vt0.c0 WHEN rt1.c1 THEN v0.c2 WHEN v0.c0 THEN -1.292230933E9 END)) WHERE ((+ (TRIM(DISTINCT rt1.c4, rt1.c5)))) ORDER BY -1164528082 COLLATE BINARY COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (TRIM(DISTINCT rt1.c4, rt1.c5)))) IS TRUE)  as count FROM v0, rt1 RIGHT OUTER JOIN vt0 ON ((LOWER(DISTINCT rt1.c2))>=(CASE WHEN v0.c1 THEN vt0.c0 WHEN rt1.c1 THEN v0.c2 WHEN v0.c0 THEN -1.292230933E9 END)) ORDER BY -1164528082 COLLATE BINARY COLLATE NOCASE DESC);
SELECT ALL * FROM v0, rt1 RIGHT OUTER JOIN vt0 ON ((LOWER(DISTINCT rt1.c2))>=(CASE WHEN v0.c1 THEN vt0.c0 WHEN rt1.c1 THEN v0.c2 WHEN v0.c0 THEN -1.292230933E9 END)) WHERE ((+ (TRIM(DISTINCT rt1.c4, rt1.c5)))) ORDER BY -1164528082 COLLATE BINARY COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (TRIM(DISTINCT rt1.c4, rt1.c5)))) IS TRUE)  as count FROM v0, rt1 RIGHT OUTER JOIN vt0 ON ((LOWER(DISTINCT rt1.c2))>=(CASE WHEN v0.c1 THEN vt0.c0 WHEN rt1.c1 THEN v0.c2 WHEN v0.c0 THEN -1.292230933E9 END)) ORDER BY -1164528082 COLLATE BINARY COLLATE NOCASE DESC);
SELECT ALL * FROM v0 WHERE ((((('1144726786') ISNULL))/(((v0.c0)AND(v0.c1)))));
SELECT SUM(count) FROM (SELECT (((((('1144726786') ISNULL))/(((v0.c0)AND(v0.c1))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((('1144726786') ISNULL))/(((v0.c0)AND(v0.c1)))));
SELECT SUM(count) FROM (SELECT (((((('1144726786') ISNULL))/(((v0.c0)AND(v0.c1))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((('1144726786') ISNULL))/(((v0.c0)AND(v0.c1)))));
SELECT * FROM vt0, v0, rt1 WHERE (CAST(((vt0.c0) NOT BETWEEN (rt1.c4) AND (rt1.c3)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (rt1.c4) AND (rt1.c3)) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0, rt1);
SELECT * FROM vt0, v0, rt1 WHERE (CAST(((vt0.c0) NOT BETWEEN (rt1.c4) AND (rt1.c3)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (rt1.c4) AND (rt1.c3)) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0, rt1);
SELECT * FROM vt0, v0, rt1 WHERE (CAST(((vt0.c0) NOT BETWEEN (rt1.c4) AND (rt1.c3)) AS NUMERIC));
SELECT * FROM vt0, v0 WHERE ((((((v0.c2, vt0.c0, v0.c1)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c1, v0.c1, v0.c0))))/(vt0.c0 COLLATE BINARY))) ORDER BY CAST(v0.c0 AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((v0.c2, vt0.c0, v0.c1)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c1, v0.c1, v0.c0))))/(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(v0.c0 AS TEXT) ASC  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE ((((((v0.c2, vt0.c0, v0.c1)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c1, v0.c1, v0.c0))))/(vt0.c0 COLLATE BINARY))) ORDER BY CAST(v0.c0 AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((v0.c2, vt0.c0, v0.c1)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c1, v0.c1, v0.c0))))/(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(v0.c0 AS TEXT) ASC  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE ((((((v0.c2, vt0.c0, v0.c1)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c1, v0.c1, v0.c0))))/(vt0.c0 COLLATE BINARY))) ORDER BY CAST(v0.c0 AS TEXT) ASC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (CASE ((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c2))  WHEN '1793414650' THEN (((rt1.c4, rt1.c3, rt1.c3))<=((rt1.c1, rt1.c4, rt1.c0))) WHEN (- (rt1.c1)) THEN rt1.c3 WHEN ((rt1.c0)>>(0xffffffff94a5581f)) THEN rt1.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c2))  WHEN '1793414650' THEN (((rt1.c4, rt1.c3, rt1.c3))<=((rt1.c1, rt1.c4, rt1.c0))) WHEN (- (rt1.c1)) THEN rt1.c3 WHEN ((rt1.c0)>>(0xffffffff94a5581f)) THEN rt1.c0 COLLATE NOCASE END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE ((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c2))  WHEN '1793414650' THEN (((rt1.c4, rt1.c3, rt1.c3))<=((rt1.c1, rt1.c4, rt1.c0))) WHEN (- (rt1.c1)) THEN rt1.c3 WHEN ((rt1.c0)>>(0xffffffff94a5581f)) THEN rt1.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c2))  WHEN '1793414650' THEN (((rt1.c4, rt1.c3, rt1.c3))<=((rt1.c1, rt1.c4, rt1.c0))) WHEN (- (rt1.c1)) THEN rt1.c3 WHEN ((rt1.c0)>>(0xffffffff94a5581f)) THEN rt1.c0 COLLATE NOCASE END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE ((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c2))  WHEN '1793414650' THEN (((rt1.c4, rt1.c3, rt1.c3))<=((rt1.c1, rt1.c4, rt1.c0))) WHEN (- (rt1.c1)) THEN rt1.c3 WHEN ((rt1.c0)>>(0xffffffff94a5581f)) THEN rt1.c0 COLLATE NOCASE END);
SELECT * FROM rt1, vt0, v0 WHERE ((((((rt1.c1, v0.c2, v0.c1))<((rt1.c3, v0.c1, v0.c1))))>=(LIKE(rt1.c4, rt1.c2)))) ORDER BY CASE rt1.c5  WHEN rt1.c5 THEN v0.c2 WHEN rt1.c1 THEN x'' WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c2 END COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c1, v0.c2, v0.c1))<((rt1.c3, v0.c1, v0.c1))))>=(LIKE(rt1.c4, rt1.c2)))) IS TRUE)  as count FROM rt1, vt0, v0 ORDER BY CASE rt1.c5  WHEN rt1.c5 THEN v0.c2 WHEN rt1.c1 THEN x'' WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c2 END COLLATE NOCASE DESC  NULLS FIRST);
SELECT * FROM rt1, vt0, v0 WHERE ((((((rt1.c1, v0.c2, v0.c1))<((rt1.c3, v0.c1, v0.c1))))>=(LIKE(rt1.c4, rt1.c2)))) ORDER BY CASE rt1.c5  WHEN rt1.c5 THEN v0.c2 WHEN rt1.c1 THEN x'' WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c2 END COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c1, v0.c2, v0.c1))<((rt1.c3, v0.c1, v0.c1))))>=(LIKE(rt1.c4, rt1.c2)))) IS TRUE)  as count FROM rt1, vt0, v0 ORDER BY CASE rt1.c5  WHEN rt1.c5 THEN v0.c2 WHEN rt1.c1 THEN x'' WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c2 END COLLATE NOCASE DESC  NULLS FIRST);
SELECT * FROM rt1, vt0, v0 WHERE ((((((rt1.c1, v0.c2, v0.c1))<((rt1.c3, v0.c1, v0.c1))))>=(LIKE(rt1.c4, rt1.c2)))) ORDER BY CASE rt1.c5  WHEN rt1.c5 THEN v0.c2 WHEN rt1.c1 THEN x'' WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c2 END COLLATE NOCASE DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON (NOT (rt1.c5)) WHERE (CASE WHEN ((vt0.c0)-(rt1.c4)) THEN (rt1.c4 IN ()) WHEN ((x'')<>(vt0.c0)) THEN (NULL IN ()) WHEN json_extract(vt0.c0, rt1.c5) THEN CAST(rt1.c5 AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)-(rt1.c4)) THEN (rt1.c4 IN ()) WHEN ((x'')!=(vt0.c0)) THEN (NULL IN ()) WHEN json_extract(vt0.c0, rt1.c5) THEN CAST(rt1.c5 AS REAL) END) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON (NOT (rt1.c5)));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON (NOT (rt1.c5)) WHERE (CASE WHEN ((vt0.c0)-(rt1.c4)) THEN (rt1.c4 IN ()) WHEN ((x'')<>(vt0.c0)) THEN (NULL IN ()) WHEN json_extract(vt0.c0, rt1.c5) THEN CAST(rt1.c5 AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)-(rt1.c4)) THEN (rt1.c4 IN ()) WHEN ((x'')!=(vt0.c0)) THEN (NULL IN ()) WHEN json_extract(vt0.c0, rt1.c5) THEN CAST(rt1.c5 AS REAL) END) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON (NOT (rt1.c5)));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON (NOT (rt1.c5)) WHERE (CASE WHEN ((vt0.c0)-(rt1.c4)) THEN (rt1.c4 IN ()) WHEN ((x'')<>(vt0.c0)) THEN (NULL IN ()) WHEN json_extract(vt0.c0, rt1.c5) THEN CAST(rt1.c5 AS REAL) END);
SELECT ALL * FROM rt1 WHERE ((((rt1.c5)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c4))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((rt1.c5)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c4))) COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c5)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c4))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((rt1.c5)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c4))) COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c5)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c4))) COLLATE NOCASE);
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt1 ON (((((v0.c1)) NOT BETWEEN ((rt1.c3)) AND ((v0.c0)))) NOT NULL) RIGHT OUTER JOIN vt0 ON CASE rt1.c5  WHEN rt1.c3 THEN v0.c2 WHEN rt1.c2 THEN rt1.c4 WHEN vt0.c0 THEN rt1.c5 WHEN rt1.c3 THEN rt1.c4 WHEN v0.c2 THEN '-1328533338' ELSE rt1.c4 END COLLATE RTRIM WHERE ((NOT (((vt0.c0)+(rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0)+(rt1.c4))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt1 ON (((((v0.c1)) NOT BETWEEN ((rt1.c3)) AND ((v0.c0)))) NOT NULL) RIGHT OUTER JOIN vt0 ON CASE rt1.c5  WHEN rt1.c3 THEN v0.c2 WHEN rt1.c2 THEN rt1.c4 WHEN vt0.c0 THEN rt1.c5 WHEN rt1.c3 THEN rt1.c4 WHEN v0.c2 THEN '-1328533338' ELSE rt1.c4 END COLLATE RTRIM);
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt1 ON (((((v0.c1)) NOT BETWEEN ((rt1.c3)) AND ((v0.c0)))) NOT NULL) RIGHT OUTER JOIN vt0 ON CASE rt1.c5  WHEN rt1.c3 THEN v0.c2 WHEN rt1.c2 THEN rt1.c4 WHEN vt0.c0 THEN rt1.c5 WHEN rt1.c3 THEN rt1.c4 WHEN v0.c2 THEN '-1328533338' ELSE rt1.c4 END COLLATE RTRIM WHERE ((NOT (((vt0.c0)+(rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0)+(rt1.c4))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt1 ON (((((v0.c1)) NOT BETWEEN ((rt1.c3)) AND ((v0.c0)))) NOT NULL) RIGHT OUTER JOIN vt0 ON CASE rt1.c5  WHEN rt1.c3 THEN v0.c2 WHEN rt1.c2 THEN rt1.c4 WHEN vt0.c0 THEN rt1.c5 WHEN rt1.c3 THEN rt1.c4 WHEN v0.c2 THEN '-1328533338' ELSE rt1.c4 END COLLATE RTRIM);
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt1 ON (((((v0.c1)) NOT BETWEEN ((rt1.c3)) AND ((v0.c0)))) NOT NULL) RIGHT OUTER JOIN vt0 ON CASE rt1.c5  WHEN rt1.c3 THEN v0.c2 WHEN rt1.c2 THEN rt1.c4 WHEN vt0.c0 THEN rt1.c5 WHEN rt1.c3 THEN rt1.c4 WHEN v0.c2 THEN '-1328533338' ELSE rt1.c4 END COLLATE RTRIM WHERE ((NOT (((vt0.c0)+(rt1.c4)))));
SELECT ALL COUNT(*) FROM vt0, rt1, v0 WHERE (CHAR(CASE rt1.c3  WHEN rt1.c0 THEN vt0.c0 WHEN v0.c2 THEN rt1.c5 WHEN rt1.c5 THEN vt0.c0 WHEN 0.5167628980718771 THEN rt1.c2 WHEN v0.c1 THEN rt1.c2 ELSE rt1.c5 END)) ORDER BY IFNULL((~ (rt1.c2)), rt1.c0), ((rt1.c5 COLLATE BINARY) BETWEEN (v0.c2 COLLATE NOCASE) AND (v0.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ((CHAR(CASE rt1.c3  WHEN rt1.c0 THEN vt0.c0 WHEN v0.c2 THEN rt1.c5 WHEN rt1.c5 THEN vt0.c0 WHEN 0.5167628980718771 THEN rt1.c2 WHEN v0.c1 THEN rt1.c2 ELSE rt1.c5 END)) IS TRUE)  as count FROM vt0, rt1, v0 ORDER BY IFNULL((~ (rt1.c2)), rt1.c0), ((rt1.c5 COLLATE BINARY) BETWEEN (v0.c2 COLLATE NOCASE) AND (v0.c0 COLLATE BINARY)) DESC);
SELECT ALL COUNT(*) FROM vt0, rt1, v0 WHERE (CHAR(CASE rt1.c3  WHEN rt1.c0 THEN vt0.c0 WHEN v0.c2 THEN rt1.c5 WHEN rt1.c5 THEN vt0.c0 WHEN 0.5167628980718771 THEN rt1.c2 WHEN v0.c1 THEN rt1.c2 ELSE rt1.c5 END)) ORDER BY IFNULL((~ (rt1.c2)), rt1.c0), ((rt1.c5 COLLATE BINARY) BETWEEN (v0.c2 COLLATE NOCASE) AND (v0.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ((CHAR(CASE rt1.c3  WHEN rt1.c0 THEN vt0.c0 WHEN v0.c2 THEN rt1.c5 WHEN rt1.c5 THEN vt0.c0 WHEN 0.5167628980718771 THEN rt1.c2 WHEN v0.c1 THEN rt1.c2 ELSE rt1.c5 END)) IS TRUE)  as count FROM vt0, rt1, v0 ORDER BY IFNULL((~ (rt1.c2)), rt1.c0), ((rt1.c5 COLLATE BINARY) BETWEEN (v0.c2 COLLATE NOCASE) AND (v0.c0 COLLATE BINARY)) DESC);
SELECT ALL COUNT(*) FROM vt0, rt1, v0 WHERE (CHAR(CASE rt1.c3  WHEN rt1.c0 THEN vt0.c0 WHEN v0.c2 THEN rt1.c5 WHEN rt1.c5 THEN vt0.c0 WHEN 0.5167628980718771 THEN rt1.c2 WHEN v0.c1 THEN rt1.c2 ELSE rt1.c5 END)) ORDER BY IFNULL((~ (rt1.c2)), rt1.c0), ((rt1.c5 COLLATE BINARY) BETWEEN (v0.c2 COLLATE NOCASE) AND (v0.c0 COLLATE BINARY)) DESC;
SELECT * FROM rt1 WHERE ('') ORDER BY ((rt1.c1)<>((((rt1.c5))<=((rt1.c3))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1)<>((((rt1.c5))<=((rt1.c3))))) DESC);
SELECT * FROM rt1 WHERE ('') ORDER BY ((rt1.c1)<>((((rt1.c5))<=((rt1.c3))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1)<>((((rt1.c5))<=((rt1.c3))))) DESC);
SELECT * FROM rt1 WHERE ('') ORDER BY ((rt1.c1)<>((((rt1.c5))<=((rt1.c3))))) DESC;
SELECT ALL COUNT(*) FROM rt1 WHERE ('48529558') ORDER BY ((((((rt1.c1) NOTNULL))AND(((rt1.c5) ISNULL))))OR((rt1.c4 IN (rt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('48529558') IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c1) NOTNULL))AND(((rt1.c5) ISNULL))))OR((rt1.c4 IN (rt1.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ('48529558') ORDER BY ((((((rt1.c1) NOTNULL))AND(((rt1.c5) ISNULL))))OR((rt1.c4 IN (rt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('48529558') IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c1) NOTNULL))AND(((rt1.c5) ISNULL))))OR((rt1.c4 IN (rt1.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ('48529558') ORDER BY ((((((rt1.c1) NOTNULL))AND(((rt1.c5) ISNULL))))OR((rt1.c4 IN (rt1.c0))))  NULLS LAST;
SELECT ALL * FROM v0, rt1, vt0 WHERE ((((((((((((((rt1.c3 IN (v0.c0)))AND(((rt1.c5) ISNULL))))AND((+ (vt0.c0)))))OR(v0.c0 COLLATE NOCASE)))OR(((((rt1.c3)AND(rt1.c0)))OR(rt1.c1)))))AND(rt1.c4 COLLATE BINARY)))OR(((rt1.c3)-(rt1.c3))))) ORDER BY rt1.c4 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((((((rt1.c3 IN (v0.c0)))AND(((rt1.c5) ISNULL))))AND((+ (vt0.c0)))))OR(v0.c0 COLLATE NOCASE)))OR(((((rt1.c3)AND(rt1.c0)))OR(rt1.c1)))))AND(rt1.c4 COLLATE BINARY)))OR(((rt1.c3)-(rt1.c3))))) IS TRUE)  as count FROM v0, rt1, vt0 ORDER BY rt1.c4 DESC  NULLS FIRST);
SELECT ALL * FROM v0, rt1, vt0 WHERE ((((((((((((((rt1.c3 IN (v0.c0)))AND(((rt1.c5) ISNULL))))AND((+ (vt0.c0)))))OR(v0.c0 COLLATE NOCASE)))OR(((((rt1.c3)AND(rt1.c0)))OR(rt1.c1)))))AND(rt1.c4 COLLATE BINARY)))OR(((rt1.c3)-(rt1.c3))))) ORDER BY rt1.c4 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((((((rt1.c3 IN (v0.c0)))AND(((rt1.c5) ISNULL))))AND((+ (vt0.c0)))))OR(v0.c0 COLLATE NOCASE)))OR(((((rt1.c3)AND(rt1.c0)))OR(rt1.c1)))))AND(rt1.c4 COLLATE BINARY)))OR(((rt1.c3)-(rt1.c3))))) IS TRUE)  as count FROM v0, rt1, vt0 ORDER BY rt1.c4 DESC  NULLS FIRST);
SELECT ALL * FROM v0, rt1, vt0 WHERE ((((((((((((((rt1.c3 IN (v0.c0)))AND(((rt1.c5) ISNULL))))AND((+ (vt0.c0)))))OR(v0.c0 COLLATE NOCASE)))OR(((((rt1.c3)AND(rt1.c0)))OR(rt1.c1)))))AND(rt1.c4 COLLATE BINARY)))OR(((rt1.c3)-(rt1.c3))))) ORDER BY rt1.c4 DESC  NULLS FIRST;
SELECT * FROM v0 LEFT OUTER JOIN rt1 ON ((CASE WHEN '1741192170' THEN rt1.c5 WHEN rt1.c3 THEN v0.c1 WHEN rt1.c5 THEN rt1.c2 END)AND(ABS(rt1.c2))) WHERE (((CAST(v0.c2 AS TEXT)) ISNULL)) ORDER BY rt1.c4 ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c2 AS TEXT)) ISNULL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON ((CASE WHEN '1741192170' THEN rt1.c5 WHEN rt1.c3 THEN v0.c1 WHEN rt1.c5 THEN rt1.c2 END)AND(ABS(rt1.c2))) ORDER BY rt1.c4 ASC);
SELECT * FROM v0 LEFT OUTER JOIN rt1 ON ((CASE WHEN '1741192170' THEN rt1.c5 WHEN rt1.c3 THEN v0.c1 WHEN rt1.c5 THEN rt1.c2 END)AND(ABS(rt1.c2))) WHERE (((CAST(v0.c2 AS TEXT)) ISNULL)) ORDER BY rt1.c4 ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c2 AS TEXT)) ISNULL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON ((CASE WHEN '1741192170' THEN rt1.c5 WHEN rt1.c3 THEN v0.c1 WHEN rt1.c5 THEN rt1.c2 END)AND(ABS(rt1.c2))) ORDER BY rt1.c4 ASC);
SELECT * FROM v0 LEFT OUTER JOIN rt1 ON ((CASE WHEN '1741192170' THEN rt1.c5 WHEN rt1.c3 THEN v0.c1 WHEN rt1.c5 THEN rt1.c2 END)AND(ABS(rt1.c2))) WHERE (((CAST(v0.c2 AS TEXT)) ISNULL)) ORDER BY rt1.c4 ASC;
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c2)GLOB(v0.c0)), v0.c2 COLLATE RTRIM, (~ (v0.c2))))>=((LIKELY(DISTINCT v0.c1), (('194379685') NOT BETWEEN (v0.c1) AND (v0.c2)), (((v0.c1, v0.c0, v0.c0, v0.c2, v0.c1))>((v0.c2, v0.c1, v0.c0, v0.c2, v0.c1)))))));
SELECT SUM(count) FROM (SELECT (((((((v0.c2)GLOB(v0.c0)), v0.c2 COLLATE RTRIM, (~ (v0.c2))))>=((LIKELY(DISTINCT v0.c1), (('194379685') NOT BETWEEN (v0.c1) AND (v0.c2)), (((v0.c1, v0.c0, v0.c0, v0.c2, v0.c1))>((v0.c2, v0.c1, v0.c0, v0.c2, v0.c1))))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c2)GLOB(v0.c0)), v0.c2 COLLATE RTRIM, (~ (v0.c2))))>=((LIKELY(DISTINCT v0.c1), (('194379685') NOT BETWEEN (v0.c1) AND (v0.c2)), (((v0.c1, v0.c0, v0.c0, v0.c2, v0.c1))>((v0.c2, v0.c1, v0.c0, v0.c2, v0.c1)))))));
SELECT SUM(count) FROM (SELECT (((((((v0.c2)GLOB(v0.c0)), v0.c2 COLLATE RTRIM, (~ (v0.c2))))>=((LIKELY(DISTINCT v0.c1), (('194379685') NOT BETWEEN (v0.c1) AND (v0.c2)), (((v0.c1, v0.c0, v0.c0, v0.c2, v0.c1))>((v0.c2, v0.c1, v0.c0, v0.c2, v0.c1))))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c2)GLOB(v0.c0)), v0.c2 COLLATE RTRIM, (~ (v0.c2))))>=((LIKELY(DISTINCT v0.c1), (('194379685') NOT BETWEEN (v0.c1) AND (v0.c2)), (((v0.c1, v0.c0, v0.c0, v0.c2, v0.c1))>((v0.c2, v0.c1, v0.c0, v0.c2, v0.c1)))))));
SELECT COUNT(*) FROM rt1 WHERE (((CASE rt1.c0  WHEN rt1.c5 THEN rt1.c2 END)>>(((rt1.c5)>(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c0  WHEN rt1.c5 THEN rt1.c2 END)>>(((rt1.c5)>(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((CASE rt1.c0  WHEN rt1.c5 THEN rt1.c2 END)>>(((rt1.c5)>(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c0  WHEN rt1.c5 THEN rt1.c2 END)>>(((rt1.c5)>(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((CASE rt1.c0  WHEN rt1.c5 THEN rt1.c2 END)>>(((rt1.c5)>(rt1.c2)))));
SELECT * FROM rt1 WHERE (1.74119217E9) ORDER BY CAST(((rt1.c4)%(rt1.c4)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((1.74119217E9) IS TRUE)  as count FROM rt1 ORDER BY CAST(((rt1.c4)%(rt1.c4)) AS REAL)  NULLS FIRST);
SELECT * FROM rt1 WHERE (1.74119217E9) ORDER BY CAST(((rt1.c4)%(rt1.c4)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((1.74119217E9) IS TRUE)  as count FROM rt1 ORDER BY CAST(((rt1.c4)%(rt1.c4)) AS REAL)  NULLS FIRST);
SELECT * FROM rt1 WHERE (1.74119217E9) ORDER BY CAST(((rt1.c4)%(rt1.c4)) AS REAL)  NULLS FIRST;
SELECT ALL * FROM v0, rt1 WHERE (((CASE rt1.c2  WHEN v0.c1 THEN rt1.c1 ELSE rt1.c1 END)GLOB(((rt1.c0)IS NOT(rt1.c1))))) ORDER BY ((((CAST(rt1.c0 AS REAL))AND(HEX(rt1.c4))))OR(((rt1.c0)<>(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c2  WHEN v0.c1 THEN rt1.c1 ELSE rt1.c1 END)GLOB(((rt1.c0)IS NOT(rt1.c1))))) IS TRUE)  as count FROM v0, rt1 ORDER BY ((((CAST(rt1.c0 AS REAL))AND(HEX(rt1.c4))))OR(((rt1.c0)!=(v0.c0)))));
SELECT ALL * FROM v0, rt1 WHERE (((CASE rt1.c2  WHEN v0.c1 THEN rt1.c1 ELSE rt1.c1 END)GLOB(((rt1.c0)IS NOT(rt1.c1))))) ORDER BY ((((CAST(rt1.c0 AS REAL))AND(HEX(rt1.c4))))OR(((rt1.c0)<>(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c2  WHEN v0.c1 THEN rt1.c1 ELSE rt1.c1 END)GLOB(((rt1.c0)IS NOT(rt1.c1))))) IS TRUE)  as count FROM v0, rt1 ORDER BY ((((CAST(rt1.c0 AS REAL))AND(HEX(rt1.c4))))OR(((rt1.c0)!=(v0.c0)))));
SELECT ALL * FROM v0, rt1 WHERE (((CASE rt1.c2  WHEN v0.c1 THEN rt1.c1 ELSE rt1.c1 END)GLOB(((rt1.c0)IS NOT(rt1.c1))))) ORDER BY ((((CAST(rt1.c0 AS REAL))AND(HEX(rt1.c4))))OR(((rt1.c0)<>(v0.c0))));
SELECT * FROM rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c3);
SELECT * FROM vt0, v0 WHERE ((((((0.2910382980066638 IN ()))AND(LIKELIHOOD(DISTINCT v0.c1, 0.9844065460043497))))AND(x'')));
SELECT SUM(count) FROM (SELECT ALL (((((((0.2910382980066638 IN ()))AND(LIKELIHOOD(DISTINCT v0.c1, 0.9844065460043497))))AND(x''))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((((0.2910382980066638 IN ()))AND(LIKELIHOOD(DISTINCT v0.c1, 0.9844065460043497))))AND(x'')));
SELECT SUM(count) FROM (SELECT ALL (((((((0.2910382980066638 IN ()))AND(LIKELIHOOD(DISTINCT v0.c1, 0.9844065460043497))))AND(x''))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((((0.2910382980066638 IN ()))AND(LIKELIHOOD(DISTINCT v0.c1, 0.9844065460043497))))AND(x'')));
SELECT ALL * FROM vt0, v0 WHERE (((((v0.c0)!=(v0.c0)))IS NOT(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)!=(v0.c0)))IS NOT(vt0.c0))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((((v0.c0)!=(v0.c0)))IS NOT(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)!=(v0.c0)))IS NOT(vt0.c0))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((((v0.c0)!=(v0.c0)))IS NOT(vt0.c0)));
SELECT * FROM v0 LEFT OUTER JOIN rt1 ON CAST(((rt1.c5) IS FALSE) AS BLOB) LEFT OUTER JOIN vt0 ON ((~ (rt1.c3)) IN (((rt1.c1)%(-1164528082)))) WHERE ((((rt1.c1 IN ()))||(CASE WHEN rt1.c0 THEN vt0.c0 ELSE v0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN ()))||(CASE WHEN rt1.c0 THEN vt0.c0 ELSE v0.c1 END))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON CAST(((rt1.c5) IS FALSE) AS BLOB) LEFT OUTER JOIN vt0 ON ((~ (rt1.c3)) IN (((rt1.c1)%(-1164528082)))));
SELECT * FROM v0 LEFT OUTER JOIN rt1 ON CAST(((rt1.c5) IS FALSE) AS BLOB) LEFT OUTER JOIN vt0 ON ((~ (rt1.c3)) IN (((rt1.c1)%(-1164528082)))) WHERE ((((rt1.c1 IN ()))||(CASE WHEN rt1.c0 THEN vt0.c0 ELSE v0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN ()))||(CASE WHEN rt1.c0 THEN vt0.c0 ELSE v0.c1 END))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON CAST(((rt1.c5) IS FALSE) AS BLOB) LEFT OUTER JOIN vt0 ON ((~ (rt1.c3)) IN (((rt1.c1)%(-1164528082)))));
SELECT * FROM v0 LEFT OUTER JOIN rt1 ON CAST(((rt1.c5) IS FALSE) AS BLOB) LEFT OUTER JOIN vt0 ON ((~ (rt1.c3)) IN (((rt1.c1)%(-1164528082)))) WHERE ((((rt1.c1 IN ()))||(CASE WHEN rt1.c0 THEN vt0.c0 ELSE v0.c1 END)));
SELECT ALL * FROM vt0, v0 WHERE ((((((v0.c2)) BETWEEN ((v0.c1)) AND ((NULL)))) BETWEEN (((v0.c2) NOT NULL)) AND (((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c2)) BETWEEN ((v0.c1)) AND ((NULL)))) BETWEEN (((v0.c2) NOT NULL)) AND (((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((((v0.c2)) BETWEEN ((v0.c1)) AND ((NULL)))) BETWEEN (((v0.c2) NOT NULL)) AND (((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c2)) BETWEEN ((v0.c1)) AND ((NULL)))) BETWEEN (((v0.c2) NOT NULL)) AND (((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((((v0.c2)) BETWEEN ((v0.c1)) AND ((NULL)))) BETWEEN (((v0.c2) NOT NULL)) AND (((vt0.c0) ISNULL))));
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON (((v0.c2, v0.c2, v0.c1)) BETWEEN ((((v0.c1)+('0.08446091233119346')), ((vt0.c0) NOTNULL), json_extract(v0.c0, v0.c1, v0.c1, v0.c2))) AND ((NULLIF(v0.c0, v0.c2), ((v0.c1) NOT NULL), (v0.c1 IN ())))) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON (((v0.c2, v0.c2, v0.c1)) BETWEEN ((((v0.c1)+('0.08446091233119346')), ((vt0.c0) NOTNULL), json_extract(v0.c0, v0.c1, v0.c1, v0.c2))) AND ((NULLIF(v0.c0, v0.c2), ((v0.c1) NOT NULL), (v0.c1 IN ())))));
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON (((v0.c2, v0.c2, v0.c1)) BETWEEN ((((v0.c1)+('0.08446091233119346')), ((vt0.c0) NOTNULL), json_extract(v0.c0, v0.c1, v0.c1, v0.c2))) AND ((NULLIF(v0.c0, v0.c2), ((v0.c1) NOT NULL), (v0.c1 IN ())))) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON (((v0.c2, v0.c2, v0.c1)) BETWEEN ((((v0.c1)+('0.08446091233119346')), ((vt0.c0) NOTNULL), json_extract(v0.c0, v0.c1, v0.c1, v0.c2))) AND ((NULLIF(v0.c0, v0.c2), ((v0.c1) NOT NULL), (v0.c1 IN ())))));
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON (((v0.c2, v0.c2, v0.c1)) BETWEEN ((((v0.c1)+('0.08446091233119346')), ((vt0.c0) NOTNULL), json_extract(v0.c0, v0.c1, v0.c1, v0.c2))) AND ((NULLIF(v0.c0, v0.c2), ((v0.c1) NOT NULL), (v0.c1 IN ())))) WHERE (v0.c0);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON 0.42086271446318935 WHERE (DATE(((v0.c1)>>(vt0.c0)), LIKELY(v0.c0), (NOT (v0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((DATE(((v0.c1)>>(vt0.c0)), LIKELY(v0.c0), (NOT (v0.c1)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON 0.42086271446318935);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON 0.42086271446318935 WHERE (DATE(((v0.c1)>>(vt0.c0)), LIKELY(v0.c0), (NOT (v0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((DATE(((v0.c1)>>(vt0.c0)), LIKELY(v0.c0), (NOT (v0.c1)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON 0.42086271446318935);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON 0.42086271446318935 WHERE (DATE(((v0.c1)>>(vt0.c0)), LIKELY(v0.c0), (NOT (v0.c1))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON ((((v0.c0)OR(vt0.c0))) NOT NULL) WHERE (((((((((((v0.c0)>(v0.c0)))OR(CASE vt0.c0  WHEN v0.c1 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c0 END)))AND(((v0.c2) NOTNULL))))OR((~ (vt0.c0)))))OR(v0.c2))) ORDER BY CASE ((((v0.c2)OR(v0.c2)))OR(vt0.c0))  WHEN (~ (v0.c2)) THEN ((v0.c1)&(v0.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)>(v0.c0)))OR(CASE vt0.c0  WHEN v0.c1 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c0 END)))AND(((v0.c2) NOTNULL))))OR((~ (vt0.c0)))))OR(v0.c2))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((v0.c0)OR(vt0.c0))) NOT NULL) ORDER BY CASE ((((v0.c2)OR(v0.c2)))OR(vt0.c0))  WHEN (~ (v0.c2)) THEN ((v0.c1)&(v0.c1)) END  NULLS LAST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON ((((v0.c0)OR(vt0.c0))) NOT NULL) WHERE (((((((((((v0.c0)>(v0.c0)))OR(CASE vt0.c0  WHEN v0.c1 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c0 END)))AND(((v0.c2) NOTNULL))))OR((~ (vt0.c0)))))OR(v0.c2))) ORDER BY CASE ((((v0.c2)OR(v0.c2)))OR(vt0.c0))  WHEN (~ (v0.c2)) THEN ((v0.c1)&(v0.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)>(v0.c0)))OR(CASE vt0.c0  WHEN v0.c1 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c0 END)))AND(((v0.c2) NOTNULL))))OR((~ (vt0.c0)))))OR(v0.c2))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((v0.c0)OR(vt0.c0))) NOT NULL) ORDER BY CASE ((((v0.c2)OR(v0.c2)))OR(vt0.c0))  WHEN (~ (v0.c2)) THEN ((v0.c1)&(v0.c1)) END  NULLS LAST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON ((((v0.c0)OR(vt0.c0))) NOT NULL) WHERE (((((((((((v0.c0)>(v0.c0)))OR(CASE vt0.c0  WHEN v0.c1 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c0 END)))AND(((v0.c2) NOTNULL))))OR((~ (vt0.c0)))))OR(v0.c2))) ORDER BY CASE ((((v0.c2)OR(v0.c2)))OR(vt0.c0))  WHEN (~ (v0.c2)) THEN ((v0.c1)&(v0.c1)) END  NULLS LAST;
SELECT * FROM rt1 LEFT OUTER JOIN v0 ON ((rt1.c0)GLOB(((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)))) RIGHT OUTER JOIN vt0 ON ((rt1.c5) ISNULL) COLLATE NOCASE WHERE ((+ (vt0.c0))) ORDER BY (((v0.c0) NOT BETWEEN (v0.c2) AND (rt1.c2)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON ((rt1.c0)GLOB(((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)))) RIGHT OUTER JOIN vt0 ON ((rt1.c5) ISNULL) COLLATE NOCASE ORDER BY (((v0.c0) NOT BETWEEN (v0.c2) AND (rt1.c2)) IN ())  NULLS LAST);
SELECT * FROM rt1 LEFT OUTER JOIN v0 ON ((rt1.c0)GLOB(((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)))) RIGHT OUTER JOIN vt0 ON ((rt1.c5) ISNULL) COLLATE NOCASE WHERE ((+ (vt0.c0))) ORDER BY (((v0.c0) NOT BETWEEN (v0.c2) AND (rt1.c2)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON ((rt1.c0)GLOB(((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)))) RIGHT OUTER JOIN vt0 ON ((rt1.c5) ISNULL) COLLATE NOCASE ORDER BY (((v0.c0) NOT BETWEEN (v0.c2) AND (rt1.c2)) IN ())  NULLS LAST);
SELECT * FROM rt1 LEFT OUTER JOIN v0 ON ((rt1.c0)GLOB(((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)))) RIGHT OUTER JOIN vt0 ON ((rt1.c5) ISNULL) COLLATE NOCASE WHERE ((+ (vt0.c0))) ORDER BY (((v0.c0) NOT BETWEEN (v0.c2) AND (rt1.c2)) IN ())  NULLS LAST;
SELECT * FROM v0 WHERE (((((v0.c0) ISNULL))-(v0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) ISNULL))-(v0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0) ISNULL))-(v0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) ISNULL))-(v0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0) ISNULL))-(v0.c1 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0, rt1, v0 WHERE (CASE WHEN rt1.c0 THEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)) ELSE (((rt1.c0, v0.c2, v0.c0)) NOT BETWEEN ((v0.c2, rt1.c5, v0.c1)) AND ((rt1.c3, NULL, rt1.c3))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c0 THEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)) ELSE (((rt1.c0, v0.c2, v0.c0)) NOT BETWEEN ((v0.c2, rt1.c5, v0.c1)) AND ((rt1.c3, NULL, rt1.c3))) END) IS TRUE)  as count FROM vt0, rt1, v0);
SELECT COUNT(*) FROM vt0, rt1, v0 WHERE (CASE WHEN rt1.c0 THEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)) ELSE (((rt1.c0, v0.c2, v0.c0)) NOT BETWEEN ((v0.c2, rt1.c5, v0.c1)) AND ((rt1.c3, NULL, rt1.c3))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c0 THEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)) ELSE (((rt1.c0, v0.c2, v0.c0)) NOT BETWEEN ((v0.c2, rt1.c5, v0.c1)) AND ((rt1.c3, NULL, rt1.c3))) END) IS TRUE)  as count FROM vt0, rt1, v0);
SELECT COUNT(*) FROM vt0, rt1, v0 WHERE (CASE WHEN rt1.c0 THEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)) ELSE (((rt1.c0, v0.c2, v0.c0)) NOT BETWEEN ((v0.c2, rt1.c5, v0.c1)) AND ((rt1.c3, NULL, rt1.c3))) END);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c1) NOTNULL))AND(json_object(v0.c0, v0.c1))))AND(((((v0.c0)OR(x'')))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c1) NOTNULL))AND(json_object(v0.c0, v0.c1))))AND(((((v0.c0)OR(x'')))AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c1) NOTNULL))AND(json_object(v0.c0, v0.c1))))AND(((((v0.c0)OR(x'')))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c1) NOTNULL))AND(json_object(v0.c0, v0.c1))))AND(((((v0.c0)OR(x'')))AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM vt0, rt1, v0 WHERE (((x'e409')<('J ')));
SELECT SUM(count) FROM (SELECT ALL ((((x'e409')<('J '))) IS TRUE)  as count FROM vt0, rt1, v0);
SELECT ALL * FROM vt0, rt1, v0 WHERE (((x'e409')<('J ')));
SELECT SUM(count) FROM (SELECT ALL ((((x'e409')<('J '))) IS TRUE)  as count FROM vt0, rt1, v0);
SELECT ALL * FROM vt0, rt1, v0 WHERE (((x'e409')<('J ')));
SELECT ALL * FROM vt0 INNER JOIN rt1 ON (((NOT (rt1.c4)))<>(((rt1.c4)GLOB(vt0.c0)))) WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (((NOT (rt1.c4)))!=(((rt1.c4)GLOB(vt0.c0)))));
SELECT ALL * FROM vt0 INNER JOIN rt1 ON (((NOT (rt1.c4)))<>(((rt1.c4)GLOB(vt0.c0)))) WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (((NOT (rt1.c4)))!=(((rt1.c4)GLOB(vt0.c0)))));
SELECT ALL * FROM vt0 INNER JOIN rt1 ON (((NOT (rt1.c4)))<>(((rt1.c4)GLOB(vt0.c0)))) WHERE (rt1.c4);
SELECT ALL * FROM rt1, vt0 WHERE ((-591909536 COLLATE BINARY IN ())) ORDER BY rt1.c3 COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((-591909536 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt1, vt0 ORDER BY rt1.c3 COLLATE NOCASE DESC);
SELECT ALL * FROM rt1, vt0 WHERE ((-591909536 COLLATE BINARY IN ())) ORDER BY rt1.c3 COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((-591909536 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt1, vt0 ORDER BY rt1.c3 COLLATE NOCASE DESC);
SELECT ALL * FROM rt1, vt0 WHERE ((-591909536 COLLATE BINARY IN ())) ORDER BY rt1.c3 COLLATE NOCASE DESC;
SELECT ALL * FROM v0 WHERE (v0.c1) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0 ORDER BY v0.c0);
SELECT ALL * FROM v0 WHERE (v0.c1) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0 ORDER BY v0.c0);
SELECT ALL * FROM v0 WHERE (v0.c1) ORDER BY v0.c0;
SELECT ALL COUNT(*) FROM vt0, v0 INNER JOIN rt1 ON LIKELY(DISTINCT MIN(rt1.c5, v0.c0, rt1.c2, rt1.c5)) WHERE (((NULL)LIKE(((v0.c0)<=(rt1.c4))))) ORDER BY ((((rt1.c1)%(v0.c2)))<(v0.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)LIKE(((v0.c0)<=(rt1.c4))))) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt1 ON LIKELY(DISTINCT MIN(rt1.c5, v0.c0, rt1.c2, rt1.c5)) ORDER BY ((((rt1.c1)%(v0.c2)))<(v0.c2 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0, v0 INNER JOIN rt1 ON LIKELY(DISTINCT MIN(rt1.c5, v0.c0, rt1.c2, rt1.c5)) WHERE (((NULL)LIKE(((v0.c0)<=(rt1.c4))))) ORDER BY ((((rt1.c1)%(v0.c2)))<(v0.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)LIKE(((v0.c0)<=(rt1.c4))))) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt1 ON LIKELY(DISTINCT MIN(rt1.c5, v0.c0, rt1.c2, rt1.c5)) ORDER BY ((((rt1.c1)%(v0.c2)))<(v0.c2 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0, v0 INNER JOIN rt1 ON LIKELY(DISTINCT MIN(rt1.c5, v0.c0, rt1.c2, rt1.c5)) WHERE (((NULL)LIKE(((v0.c0)<=(rt1.c4))))) ORDER BY ((((rt1.c1)%(v0.c2)))<(v0.c2 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM v0 WHERE (json_array_length((~ (v0.c2)), '739236048'));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length((~ (v0.c2)), '739236048')) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (json_array_length((~ (v0.c2)), '739236048'));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length((~ (v0.c2)), '739236048')) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON CASE ((0x141c4e03)>=(v0.c0))  WHEN x'e05a' COLLATE RTRIM THEN (+ (v0.c1)) WHEN vt0.c0 THEN ((v0.c0) BETWEEN (v0.c0) AND (x'')) WHEN (v0.c1 IN ()) THEN ((v0.c1)=(v0.c0)) ELSE '1338227756' END WHERE (((((CASE WHEN v0.c1 THEN v0.c2 END)AND(UNLIKELY(v0.c2))))OR('632932166')));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN v0.c1 THEN v0.c2 END)AND(UNLIKELY(v0.c2))))OR('632932166'))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON CASE ((0x141c4e03)>=(v0.c0))  WHEN x'e05a' COLLATE RTRIM THEN (+ (v0.c1)) WHEN vt0.c0 THEN ((v0.c0) BETWEEN (v0.c0) AND (x'')) WHEN (v0.c1 IN ()) THEN ((v0.c1)==(v0.c0)) ELSE '1338227756' END);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON CASE ((0x141c4e03)>=(v0.c0))  WHEN x'e05a' COLLATE RTRIM THEN (+ (v0.c1)) WHEN vt0.c0 THEN ((v0.c0) BETWEEN (v0.c0) AND (x'')) WHEN (v0.c1 IN ()) THEN ((v0.c1)=(v0.c0)) ELSE '1338227756' END WHERE (((((CASE WHEN v0.c1 THEN v0.c2 END)AND(UNLIKELY(v0.c2))))OR('632932166')));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN v0.c1 THEN v0.c2 END)AND(UNLIKELY(v0.c2))))OR('632932166'))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON CASE ((0x141c4e03)>=(v0.c0))  WHEN x'e05a' COLLATE RTRIM THEN (+ (v0.c1)) WHEN vt0.c0 THEN ((v0.c0) BETWEEN (v0.c0) AND (x'')) WHEN (v0.c1 IN ()) THEN ((v0.c1)==(v0.c0)) ELSE '1338227756' END);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON CASE ((0x141c4e03)>=(v0.c0))  WHEN x'e05a' COLLATE RTRIM THEN (+ (v0.c1)) WHEN vt0.c0 THEN ((v0.c0) BETWEEN (v0.c0) AND (x'')) WHEN (v0.c1 IN ()) THEN ((v0.c1)=(v0.c0)) ELSE '1338227756' END WHERE (((((CASE WHEN v0.c1 THEN v0.c2 END)AND(UNLIKELY(v0.c2))))OR('632932166')));
SELECT ALL * FROM rt1 WHERE ((((rt1.c3 IN ())) NOT NULL)) ORDER BY CAST(rt1.c4 COLLATE RTRIM AS BLOB);
SELECT SUM(count) FROM (SELECT (((((rt1.c3 IN ())) NOT NULL)) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c4 COLLATE RTRIM AS BLOB));
SELECT ALL * FROM rt1 WHERE ((((rt1.c3 IN ())) NOT NULL)) ORDER BY CAST(rt1.c4 COLLATE RTRIM AS BLOB);
SELECT SUM(count) FROM (SELECT (((((rt1.c3 IN ())) NOT NULL)) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c4 COLLATE RTRIM AS BLOB));
SELECT ALL * FROM rt1 WHERE ((((rt1.c3 IN ())) NOT NULL)) ORDER BY CAST(rt1.c4 COLLATE RTRIM AS BLOB);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c5 IN (rt1.c3, rt1.c4)))AND(rt1.c4 COLLATE BINARY)))OR(CAST(rt1.c3 AS REAL)))) ORDER BY json_insert(CAST(rt1.c4 AS TEXT), (((rt1.c2)) BETWEEN ((rt1.c5)) AND ((rt1.c2))), ((rt1.c0) NOTNULL)) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c5 IN (rt1.c3, rt1.c4)))AND(rt1.c4 COLLATE BINARY)))OR(CAST(rt1.c3 AS REAL)))) IS TRUE)  as count FROM rt1 ORDER BY json_insert(CAST(rt1.c4 AS TEXT), (((rt1.c2)) BETWEEN ((rt1.c5)) AND ((rt1.c2))), ((rt1.c0) NOTNULL)) ASC);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c5 IN (rt1.c3, rt1.c4)))AND(rt1.c4 COLLATE BINARY)))OR(CAST(rt1.c3 AS REAL)))) ORDER BY json_insert(CAST(rt1.c4 AS TEXT), (((rt1.c2)) BETWEEN ((rt1.c5)) AND ((rt1.c2))), ((rt1.c0) NOTNULL)) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c5 IN (rt1.c3, rt1.c4)))AND(rt1.c4 COLLATE BINARY)))OR(CAST(rt1.c3 AS REAL)))) IS TRUE)  as count FROM rt1 ORDER BY json_insert(CAST(rt1.c4 AS TEXT), (((rt1.c2)) BETWEEN ((rt1.c5)) AND ((rt1.c2))), ((rt1.c0) NOTNULL)) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) IS FALSE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) IS FALSE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) IS FALSE) COLLATE BINARY);
SELECT COUNT(*) FROM v0, vt0, rt1 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((v0.c1)-(rt1.c4))) AND (rt1.c5 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((v0.c1)-(rt1.c4))) AND (rt1.c5 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt0, rt1);
SELECT COUNT(*) FROM v0, vt0, rt1 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((v0.c1)-(rt1.c4))) AND (rt1.c5 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((v0.c1)-(rt1.c4))) AND (rt1.c5 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt0, rt1);
SELECT COUNT(*) FROM v0, vt0, rt1 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((v0.c1)-(rt1.c4))) AND (rt1.c5 COLLATE NOCASE)));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)&(vt0.c0)) IN (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)&(vt0.c0)) IN (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)&(vt0.c0)) IN (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)&(vt0.c0)) IN (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)&(vt0.c0)) IN (vt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0 WHERE ((+ ((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ ((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ ((NOT (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (v0.c0) ORDER BY ((NOT (vt0.c0)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY ((NOT (vt0.c0)) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (v0.c0) ORDER BY ((NOT (vt0.c0)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY ((NOT (vt0.c0)) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (v0.c0) ORDER BY ((NOT (vt0.c0)) IN ()) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, rt1 LEFT OUTER JOIN vt0 ON ((vt0.c0) BETWEEN ('cCWUbJ&R*') AND (rt1.c5)) COLLATE BINARY COLLATE RTRIM WHERE (((0.44974440035731866 COLLATE NOCASE) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((0.44974440035731866 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM v0, rt1 LEFT OUTER JOIN vt0 ON ((vt0.c0) BETWEEN ('cCWUbJ&R*') AND (rt1.c5)) COLLATE BINARY COLLATE RTRIM);
SELECT COUNT(*) FROM v0, rt1 LEFT OUTER JOIN vt0 ON ((vt0.c0) BETWEEN ('cCWUbJ&R*') AND (rt1.c5)) COLLATE BINARY COLLATE RTRIM WHERE (((0.44974440035731866 COLLATE NOCASE) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((0.44974440035731866 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM v0, rt1 LEFT OUTER JOIN vt0 ON ((vt0.c0) BETWEEN ('cCWUbJ&R*') AND (rt1.c5)) COLLATE BINARY COLLATE RTRIM);
SELECT COUNT(*) FROM v0, rt1 LEFT OUTER JOIN vt0 ON ((vt0.c0) BETWEEN ('cCWUbJ&R*') AND (rt1.c5)) COLLATE BINARY COLLATE RTRIM WHERE (((0.44974440035731866 COLLATE NOCASE) NOTNULL));
SELECT ALL * FROM v0, rt1 WHERE (LENGTH(TRIM(DISTINCT rt1.c5))) ORDER BY 'uS' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LENGTH(TRIM(DISTINCT rt1.c5))) IS TRUE)  as count FROM v0, rt1 ORDER BY 'uS' DESC  NULLS FIRST);
SELECT ALL * FROM v0, rt1 WHERE (LENGTH(TRIM(DISTINCT rt1.c5))) ORDER BY 'uS' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LENGTH(TRIM(DISTINCT rt1.c5))) IS TRUE)  as count FROM v0, rt1 ORDER BY 'uS' DESC  NULLS FIRST);
SELECT ALL * FROM v0, rt1 WHERE (LENGTH(TRIM(DISTINCT rt1.c5))) ORDER BY 'uS' DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0 WHERE (NULL) ORDER BY ((v0.c1) BETWEEN (v0.c2) AND (vt0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, vt0 ORDER BY ((v0.c1) BETWEEN (v0.c2) AND (vt0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM v0, vt0 WHERE (NULL) ORDER BY ((v0.c1) BETWEEN (v0.c2) AND (vt0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, vt0 ORDER BY ((v0.c1) BETWEEN (v0.c2) AND (vt0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM v0, vt0 WHERE (NULL) ORDER BY ((v0.c1) BETWEEN (v0.c2) AND (vt0.c0)) COLLATE NOCASE;
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON HEX(CAST(rt1.c4 AS BLOB)) RIGHT OUTER JOIN rt1 ON rt1.c2 WHERE (((LTRIM(rt1.c4, rt1.c1))>>((rt1.c1 IN ())))) ORDER BY NULL  NULLS LAST, (((((rt1.c3 IN (rt1.c3)))OR(rt1.c0)))AND(v0.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((((LTRIM(rt1.c4, rt1.c1))>>((rt1.c1 IN ())))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON HEX(CAST(rt1.c4 AS BLOB)) RIGHT OUTER JOIN rt1 ON rt1.c2 ORDER BY NULL  NULLS LAST, (((((rt1.c3 IN (rt1.c3)))OR(rt1.c0)))AND(v0.c0 COLLATE NOCASE)) ASC);
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON HEX(CAST(rt1.c4 AS BLOB)) RIGHT OUTER JOIN rt1 ON rt1.c2 WHERE (((LTRIM(rt1.c4, rt1.c1))>>((rt1.c1 IN ())))) ORDER BY NULL  NULLS LAST, (((((rt1.c3 IN (rt1.c3)))OR(rt1.c0)))AND(v0.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((((LTRIM(rt1.c4, rt1.c1))>>((rt1.c1 IN ())))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON HEX(CAST(rt1.c4 AS BLOB)) RIGHT OUTER JOIN rt1 ON rt1.c2 ORDER BY NULL  NULLS LAST, (((((rt1.c3 IN (rt1.c3)))OR(rt1.c0)))AND(v0.c0 COLLATE NOCASE)) ASC);
SELECT * FROM rt1 FULL OUTER JOIN vt0 ON COALESCE(DISTINCT NULL, CASE WHEN rt1.c2 THEN vt0.c0 END, CASE rt1.c2  WHEN rt1.c0 THEN rt1.c3 END, (~ (rt1.c2))) WHERE ((+ ((rt1.c5 IN (rt1.c3, rt1.c4, rt1.c0))))) ORDER BY ((((((rt1.c1)IS(NULL)))OR(CAST('764044036' AS TEXT))))AND(CASE WHEN vt0.c0 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c5 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ((rt1.c5 IN (rt1.c3, rt1.c4, rt1.c0))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON COALESCE(DISTINCT NULL, CASE WHEN rt1.c2 THEN vt0.c0 END, CASE rt1.c2  WHEN rt1.c0 THEN rt1.c3 END, (~ (rt1.c2))) ORDER BY ((((((rt1.c1)IS(NULL)))OR(CAST('764044036' AS TEXT))))AND(CASE WHEN vt0.c0 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c5 END)) DESC  NULLS FIRST);
SELECT * FROM rt1 FULL OUTER JOIN vt0 ON COALESCE(DISTINCT NULL, CASE WHEN rt1.c2 THEN vt0.c0 END, CASE rt1.c2  WHEN rt1.c0 THEN rt1.c3 END, (~ (rt1.c2))) WHERE ((+ ((rt1.c5 IN (rt1.c3, rt1.c4, rt1.c0))))) ORDER BY ((((((rt1.c1)IS(NULL)))OR(CAST('764044036' AS TEXT))))AND(CASE WHEN vt0.c0 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c5 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ((rt1.c5 IN (rt1.c3, rt1.c4, rt1.c0))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON COALESCE(DISTINCT NULL, CASE WHEN rt1.c2 THEN vt0.c0 END, CASE rt1.c2  WHEN rt1.c0 THEN rt1.c3 END, (~ (rt1.c2))) ORDER BY ((((((rt1.c1)IS(NULL)))OR(CAST('764044036' AS TEXT))))AND(CASE WHEN vt0.c0 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c5 END)) DESC  NULLS FIRST);
SELECT * FROM rt1 FULL OUTER JOIN vt0 ON COALESCE(DISTINCT NULL, CASE WHEN rt1.c2 THEN vt0.c0 END, CASE rt1.c2  WHEN rt1.c0 THEN rt1.c3 END, (~ (rt1.c2))) WHERE ((+ ((rt1.c5 IN (rt1.c3, rt1.c4, rt1.c0))))) ORDER BY ((((((rt1.c1)IS(NULL)))OR(CAST('764044036' AS TEXT))))AND(CASE WHEN vt0.c0 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c5 END)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((((v0.c2)) BETWEEN ((v0.c1)) AND ((x''))) IN (vt0.c0 COLLATE RTRIM, v0.c2 COLLATE NOCASE)) RIGHT OUTER JOIN rt1 ON CASE WHEN (NOT (v0.c0)) THEN (- (rt1.c0)) END WHERE (JULIANDAY(rt1.c2, rt1.c3, v0.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((JULIANDAY(rt1.c2, rt1.c3, v0.c0) COLLATE BINARY) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((((v0.c2)) BETWEEN ((v0.c1)) AND ((x''))) IN (vt0.c0 COLLATE RTRIM, v0.c2 COLLATE NOCASE)) RIGHT OUTER JOIN rt1 ON CASE WHEN (NOT (v0.c0)) THEN (- (rt1.c0)) END);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((((v0.c2)) BETWEEN ((v0.c1)) AND ((x''))) IN (vt0.c0 COLLATE RTRIM, v0.c2 COLLATE NOCASE)) RIGHT OUTER JOIN rt1 ON CASE WHEN (NOT (v0.c0)) THEN (- (rt1.c0)) END WHERE (JULIANDAY(rt1.c2, rt1.c3, v0.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((JULIANDAY(rt1.c2, rt1.c3, v0.c0) COLLATE BINARY) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((((v0.c2)) BETWEEN ((v0.c1)) AND ((x''))) IN (vt0.c0 COLLATE RTRIM, v0.c2 COLLATE NOCASE)) RIGHT OUTER JOIN rt1 ON CASE WHEN (NOT (v0.c0)) THEN (- (rt1.c0)) END);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((((v0.c2)) BETWEEN ((v0.c1)) AND ((x''))) IN (vt0.c0 COLLATE RTRIM, v0.c2 COLLATE NOCASE)) RIGHT OUTER JOIN rt1 ON CASE WHEN (NOT (v0.c0)) THEN (- (rt1.c0)) END WHERE (JULIANDAY(rt1.c2, rt1.c3, v0.c0) COLLATE BINARY);
SELECT * FROM vt0, v0 WHERE ((((v0.c0, v0.c1, v0.c2)) NOT BETWEEN ((CAST(v0.c0 AS BLOB), ((x'')<(NULL)), (v0.c1 IN (v0.c1, vt0.c0)))) AND (((((v0.c1))<>((vt0.c0))), v0.c0, CASE v0.c0  WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c2 END)))) ORDER BY CAST((vt0.c0 IN (x'')) AS INTEGER) DESC  NULLS FIRST, CAST((v0.c1 IN ()) AS REAL);
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c1, v0.c2)) NOT BETWEEN ((CAST(v0.c0 AS BLOB), ((x'')<(NULL)), (v0.c1 IN (v0.c1, vt0.c0)))) AND (((((v0.c1))<>((vt0.c0))), v0.c0, CASE v0.c0  WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c2 END)))) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST((vt0.c0 IN (x'')) AS INTEGER) DESC  NULLS FIRST, CAST((v0.c1 IN ()) AS REAL));
SELECT * FROM vt0, v0 WHERE ((((v0.c0, v0.c1, v0.c2)) NOT BETWEEN ((CAST(v0.c0 AS BLOB), ((x'')<(NULL)), (v0.c1 IN (v0.c1, vt0.c0)))) AND (((((v0.c1))<>((vt0.c0))), v0.c0, CASE v0.c0  WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c2 END)))) ORDER BY CAST((vt0.c0 IN (x'')) AS INTEGER) DESC  NULLS FIRST, CAST((v0.c1 IN ()) AS REAL);
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c1, v0.c2)) NOT BETWEEN ((CAST(v0.c0 AS BLOB), ((x'')<(NULL)), (v0.c1 IN (v0.c1, vt0.c0)))) AND (((((v0.c1))<>((vt0.c0))), v0.c0, CASE v0.c0  WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c2 END)))) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST((vt0.c0 IN (x'')) AS INTEGER) DESC  NULLS FIRST, CAST((v0.c1 IN ()) AS REAL));
SELECT * FROM vt0, v0 WHERE ((((v0.c0, v0.c1, v0.c2)) NOT BETWEEN ((CAST(v0.c0 AS BLOB), ((x'')<(NULL)), (v0.c1 IN (v0.c1, vt0.c0)))) AND (((((v0.c1))<>((vt0.c0))), v0.c0, CASE v0.c0  WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c2 END)))) ORDER BY CAST((vt0.c0 IN (x'')) AS INTEGER) DESC  NULLS FIRST, CAST((v0.c1 IN ()) AS REAL);
SELECT COUNT(*) FROM rt1 WHERE ((((0.3319117968951243))>((0.4176436580634656)))) ORDER BY ((CASE 0.9713985983204112  WHEN rt1.c5 THEN rt1.c3 ELSE rt1.c4 END) NOT BETWEEN (json_patch(rt1.c5, '8_k{')) AND ((x'' IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((0.3319117968951243))>((0.4176436580634656)))) IS TRUE)  as count FROM rt1 ORDER BY ((CASE 0.9713985983204112  WHEN rt1.c5 THEN rt1.c3 ELSE rt1.c4 END) NOT BETWEEN (json_patch(rt1.c5, '8_k{')) AND ((x'' IN ()))));
SELECT COUNT(*) FROM rt1 WHERE ((((0.3319117968951243))>((0.4176436580634656)))) ORDER BY ((CASE 0.9713985983204112  WHEN rt1.c5 THEN rt1.c3 ELSE rt1.c4 END) NOT BETWEEN (json_patch(rt1.c5, '8_k{')) AND ((x'' IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((0.3319117968951243))>((0.4176436580634656)))) IS TRUE)  as count FROM rt1 ORDER BY ((CASE 0.9713985983204112  WHEN rt1.c5 THEN rt1.c3 ELSE rt1.c4 END) NOT BETWEEN (json_patch(rt1.c5, '8_k{')) AND ((x'' IN ()))));
SELECT COUNT(*) FROM vt0 WHERE (CASE CAST(0.9272659439008997 AS INTEGER)  WHEN ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE NOCASE END) ORDER BY vt0.c0 DESC  NULLS LAST, CAST((((vt0.c0))<((vt0.c0))) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(0.9272659439008997 AS INTEGER)  WHEN ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS LAST, CAST((((vt0.c0))<((vt0.c0))) AS BLOB) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE CAST(0.9272659439008997 AS INTEGER)  WHEN ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE NOCASE END) ORDER BY vt0.c0 DESC  NULLS LAST, CAST((((vt0.c0))<((vt0.c0))) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(0.9272659439008997 AS INTEGER)  WHEN ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS LAST, CAST((((vt0.c0))<((vt0.c0))) AS BLOB) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE CAST(0.9272659439008997 AS INTEGER)  WHEN ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE NOCASE END) ORDER BY vt0.c0 DESC  NULLS LAST, CAST((((vt0.c0))<((vt0.c0))) AS BLOB) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(CASE vt0.c0  WHEN v0.c0 THEN NULL END AS BLOB)) ORDER BY CAST(((v0.c0)LIKE(vt0.c0)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c0  WHEN v0.c0 THEN NULL END AS BLOB)) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(((v0.c0)LIKE(vt0.c0)) AS NUMERIC) ASC);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(CASE vt0.c0  WHEN v0.c0 THEN NULL END AS BLOB)) ORDER BY CAST(((v0.c0)LIKE(vt0.c0)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c0  WHEN v0.c0 THEN NULL END AS BLOB)) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(((v0.c0)LIKE(vt0.c0)) AS NUMERIC) ASC);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(CASE vt0.c0  WHEN v0.c0 THEN NULL END AS BLOB)) ORDER BY CAST(((v0.c0)LIKE(vt0.c0)) AS NUMERIC) ASC;
SELECT ALL COUNT(*) FROM v0, vt0, rt1 WHERE (json_object(((v0.c2) ISNULL), rt1.c2 COLLATE RTRIM)) ORDER BY rt1.c3 DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_object(((v0.c2) ISNULL), rt1.c2 COLLATE RTRIM)) IS TRUE)  as count FROM v0, vt0, rt1 ORDER BY rt1.c3 DESC);
SELECT ALL COUNT(*) FROM v0, vt0, rt1 WHERE (json_object(((v0.c2) ISNULL), rt1.c2 COLLATE RTRIM)) ORDER BY rt1.c3 DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_object(((v0.c2) ISNULL), rt1.c2 COLLATE RTRIM)) IS TRUE)  as count FROM v0, vt0, rt1 ORDER BY rt1.c3 DESC);
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON CAST(NULL AS NUMERIC) WHERE (CAST(v0.c2 COLLATE RTRIM AS NUMERIC)) ORDER BY ((((vt0.c0)>=(v0.c1)))/(v0.c2)) DESC, ((v0.c1) IS TRUE) DESC, (((v0.c1, v0.c2, v0.c2)) NOT BETWEEN (((v0.c1 IN ()), CAST(v0.c0 AS REAL), (~ (v0.c0)))) AND ((v0.c2, ((v0.c2)-(v0.c1)), v0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c2 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON CAST(NULL AS NUMERIC) ORDER BY ((((vt0.c0)>=(v0.c1)))/(v0.c2)) DESC, ((v0.c1) IS TRUE) DESC, (((v0.c1, v0.c2, v0.c2)) NOT BETWEEN (((v0.c1 IN ()), CAST(v0.c0 AS REAL), (~ (v0.c0)))) AND ((v0.c2, ((v0.c2)-(v0.c1)), v0.c1))));
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON CAST(NULL AS NUMERIC) WHERE (CAST(v0.c2 COLLATE RTRIM AS NUMERIC)) ORDER BY ((((vt0.c0)>=(v0.c1)))/(v0.c2)) DESC, ((v0.c1) IS TRUE) DESC, (((v0.c1, v0.c2, v0.c2)) NOT BETWEEN (((v0.c1 IN ()), CAST(v0.c0 AS REAL), (~ (v0.c0)))) AND ((v0.c2, ((v0.c2)-(v0.c1)), v0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c2 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON CAST(NULL AS NUMERIC) ORDER BY ((((vt0.c0)>=(v0.c1)))/(v0.c2)) DESC, ((v0.c1) IS TRUE) DESC, (((v0.c1, v0.c2, v0.c2)) NOT BETWEEN (((v0.c1 IN ()), CAST(v0.c0 AS REAL), (~ (v0.c0)))) AND ((v0.c2, ((v0.c2)-(v0.c1)), v0.c1))));
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON CAST(NULL AS NUMERIC) WHERE (CAST(v0.c2 COLLATE RTRIM AS NUMERIC)) ORDER BY ((((vt0.c0)>=(v0.c1)))/(v0.c2)) DESC, ((v0.c1) IS TRUE) DESC, (((v0.c1, v0.c2, v0.c2)) NOT BETWEEN (((v0.c1 IN ()), CAST(v0.c0 AS REAL), (~ (v0.c0)))) AND ((v0.c2, ((v0.c2)-(v0.c1)), v0.c1)));
SELECT COUNT(*) FROM vt0, v0 CROSS JOIN rt1 ON rt1.c0 WHERE (((+ (rt1.c1)) IN ())) ORDER BY (((rt1.c2)) NOT BETWEEN ((((rt1.c3) IS TRUE))) AND ((((rt1.c5)||(rt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((+ (rt1.c1)) IN ())) IS TRUE)  as count FROM vt0, v0 CROSS JOIN rt1 ON rt1.c0 ORDER BY (((rt1.c2)) NOT BETWEEN ((((rt1.c3) IS TRUE))) AND ((((rt1.c5)||(rt1.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 CROSS JOIN rt1 ON rt1.c0 WHERE (((+ (rt1.c1)) IN ())) ORDER BY (((rt1.c2)) NOT BETWEEN ((((rt1.c3) IS TRUE))) AND ((((rt1.c5)||(rt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((+ (rt1.c1)) IN ())) IS TRUE)  as count FROM vt0, v0 CROSS JOIN rt1 ON rt1.c0 ORDER BY (((rt1.c2)) NOT BETWEEN ((((rt1.c3) IS TRUE))) AND ((((rt1.c5)||(rt1.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 CROSS JOIN rt1 ON rt1.c0 WHERE (((+ (rt1.c1)) IN ())) ORDER BY (((rt1.c2)) NOT BETWEEN ((((rt1.c3) IS TRUE))) AND ((((rt1.c5)||(rt1.c0)))))  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (((('842887335'))<((rt1.c3 COLLATE BINARY)))) ORDER BY rt1.c2 DESC  NULLS FIRST, (+ (((rt1.c0)/(rt1.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((('842887335'))<((rt1.c3 COLLATE BINARY)))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2 DESC  NULLS FIRST, (+ (((rt1.c0)/(rt1.c3))))  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((('842887335'))<((rt1.c3 COLLATE BINARY)))) ORDER BY rt1.c2 DESC  NULLS FIRST, (+ (((rt1.c0)/(rt1.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((('842887335'))<((rt1.c3 COLLATE BINARY)))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2 DESC  NULLS FIRST, (+ (((rt1.c0)/(rt1.c3))))  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((('842887335'))<((rt1.c3 COLLATE BINARY)))) ORDER BY rt1.c2 DESC  NULLS FIRST, (+ (((rt1.c0)/(rt1.c3))))  NULLS LAST;
SELECT ALL * FROM v0 CROSS JOIN vt0 ON ((((0.32246461853285024)<(v0.c1))) ISNULL) WHERE ((((((0.9784007217261317, v0.c0, NULL, v0.c0, v0.c0))>=((v0.c2, v0.c2, v0.c1, vt0.c0, v0.c1)))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((v0.c2)OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((0.9784007217261317, v0.c0, NULL, v0.c0, v0.c0))>=((v0.c2, v0.c2, v0.c1, vt0.c0, v0.c1)))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((v0.c2)OR(v0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((((0.32246461853285024)<(v0.c1))) ISNULL));
SELECT ALL * FROM v0 CROSS JOIN vt0 ON ((((0.32246461853285024)<(v0.c1))) ISNULL) WHERE ((((((0.9784007217261317, v0.c0, NULL, v0.c0, v0.c0))>=((v0.c2, v0.c2, v0.c1, vt0.c0, v0.c1)))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((v0.c2)OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((0.9784007217261317, v0.c0, NULL, v0.c0, v0.c0))>=((v0.c2, v0.c2, v0.c1, vt0.c0, v0.c1)))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((v0.c2)OR(v0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((((0.32246461853285024)<(v0.c1))) ISNULL));
SELECT ALL * FROM v0 CROSS JOIN vt0 ON ((((0.32246461853285024)<(v0.c1))) ISNULL) WHERE ((((((0.9784007217261317, v0.c0, NULL, v0.c0, v0.c0))>=((v0.c2, v0.c2, v0.c1, vt0.c0, v0.c1)))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((v0.c2)OR(v0.c0)))));
SELECT * FROM vt0 WHERE (((LIKELIHOOD(vt0.c0, 0.10974946778253902))/(((vt0.c0)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(vt0.c0, 0.10974946778253902))/(((vt0.c0)%(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((LIKELIHOOD(vt0.c0, 0.10974946778253902))/(((vt0.c0)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(vt0.c0, 0.10974946778253902))/(((vt0.c0)%(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((LIKELIHOOD(vt0.c0, 0.10974946778253902))/(((vt0.c0)%(vt0.c0)))));
SELECT COUNT(*) FROM v0, rt1, vt0 WHERE (((((((v0.c2)OR(v0.c1)))OR(rt1.c4))) IS TRUE)) ORDER BY CAST((NOT (rt1.c1)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c2)OR(v0.c1)))OR(rt1.c4))) IS TRUE)) IS TRUE)  as count FROM v0, rt1, vt0 ORDER BY CAST((NOT (rt1.c1)) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt1, vt0 WHERE (((((((v0.c2)OR(v0.c1)))OR(rt1.c4))) IS TRUE)) ORDER BY CAST((NOT (rt1.c1)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c2)OR(v0.c1)))OR(rt1.c4))) IS TRUE)) IS TRUE)  as count FROM v0, rt1, vt0 ORDER BY CAST((NOT (rt1.c1)) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt1, vt0 WHERE (((((((v0.c2)OR(v0.c1)))OR(rt1.c4))) IS TRUE)) ORDER BY CAST((NOT (rt1.c1)) AS NUMERIC)  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt1 WHERE (CAST(CASE WHEN rt1.c0 THEN vt0.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt1.c0 THEN vt0.c0 END AS TEXT)) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CAST(CASE WHEN rt1.c0 THEN vt0.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt1.c0 THEN vt0.c0 END AS TEXT)) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CAST(CASE WHEN rt1.c0 THEN vt0.c0 END AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE ((LTRIM(vt0.c0, vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((LTRIM(vt0.c0, vt0.c0) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((LTRIM(vt0.c0, vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((LTRIM(vt0.c0, vt0.c0) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((LTRIM(vt0.c0, vt0.c0) IN ()));
SELECT COUNT(*) FROM v0, rt1, vt0 WHERE ((((rt1.c5 IN ())) NOT BETWEEN (COALESCE(v0.c0, rt1.c4, 0X53bed9a0, rt1.c2)) AND (CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((rt1.c5 IN ())) NOT BETWEEN (COALESCE(v0.c0, rt1.c4, 0X53bed9a0, rt1.c2)) AND (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM v0, rt1, vt0);
SELECT COUNT(*) FROM v0, rt1, vt0 WHERE ((((rt1.c5 IN ())) NOT BETWEEN (COALESCE(v0.c0, rt1.c4, 0X53bed9a0, rt1.c2)) AND (CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((rt1.c5 IN ())) NOT BETWEEN (COALESCE(v0.c0, rt1.c4, 0X53bed9a0, rt1.c2)) AND (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM v0, rt1, vt0);
SELECT COUNT(*) FROM v0, rt1, vt0 WHERE ((((rt1.c5 IN ())) NOT BETWEEN (COALESCE(v0.c0, rt1.c4, 0X53bed9a0, rt1.c2)) AND (CAST(vt0.c0 AS REAL))));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, rt1 WHERE (((((((rt1.c3)OR(vt0.c0)))OR(rt1.c4)))>(rt1.c1))) ORDER BY CASE ((vt0.c0)<(rt1.c4))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN rt1.c2 END THEN rt1.c5 WHEN (((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((0.7263983994791771))) THEN rt1.c3 COLLATE RTRIM WHEN ((rt1.c3) NOTNULL) THEN (NOT (0.9886562770091248)) ELSE ((rt1.c4)|(rt1.c3)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c3)OR(vt0.c0)))OR(rt1.c4)))>(rt1.c1))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE ((vt0.c0)<(rt1.c4))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN rt1.c2 END THEN rt1.c5 WHEN (((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((0.7263983994791771))) THEN rt1.c3 COLLATE RTRIM WHEN ((rt1.c3) NOTNULL) THEN (NOT (0.9886562770091248)) ELSE ((rt1.c4)|(rt1.c3)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, rt1 WHERE (((((((rt1.c3)OR(vt0.c0)))OR(rt1.c4)))>(rt1.c1))) ORDER BY CASE ((vt0.c0)<(rt1.c4))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN rt1.c2 END THEN rt1.c5 WHEN (((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((0.7263983994791771))) THEN rt1.c3 COLLATE RTRIM WHEN ((rt1.c3) NOTNULL) THEN (NOT (0.9886562770091248)) ELSE ((rt1.c4)|(rt1.c3)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c3)OR(vt0.c0)))OR(rt1.c4)))>(rt1.c1))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE ((vt0.c0)<(rt1.c4))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN rt1.c2 END THEN rt1.c5 WHEN (((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((0.7263983994791771))) THEN rt1.c3 COLLATE RTRIM WHEN ((rt1.c3) NOTNULL) THEN (NOT (0.9886562770091248)) ELSE ((rt1.c4)|(rt1.c3)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, rt1 WHERE (((((((rt1.c3)OR(vt0.c0)))OR(rt1.c4)))>(rt1.c1))) ORDER BY CASE ((vt0.c0)<(rt1.c4))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN rt1.c2 END THEN rt1.c5 WHEN (((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((0.7263983994791771))) THEN rt1.c3 COLLATE RTRIM WHEN ((rt1.c3) NOTNULL) THEN (NOT (0.9886562770091248)) ELSE ((rt1.c4)|(rt1.c3)) END  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (0.1633631748667954) ORDER BY CAST(v0.c1 AS TEXT) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.1633631748667954) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c1 AS TEXT) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (0.1633631748667954) ORDER BY CAST(v0.c1 AS TEXT) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.1633631748667954) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c1 AS TEXT) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (0.1633631748667954) ORDER BY CAST(v0.c1 AS TEXT) COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)<<(vt0.c0)) COLLATE NOCASE) ORDER BY 0.22147453275150464 DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<<(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY 0.22147453275150464 DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)<<(vt0.c0)) COLLATE NOCASE) ORDER BY 0.22147453275150464 DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<<(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY 0.22147453275150464 DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)<<(vt0.c0)) COLLATE NOCASE) ORDER BY 0.22147453275150464 DESC;
SELECT * FROM vt0, v0, rt1 WHERE ((NOT (((((v0.c1)AND(rt1.c3)))OR(rt1.c3)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((v0.c1)AND(rt1.c3)))OR(rt1.c3))))) IS TRUE)  as count FROM vt0, v0, rt1);
SELECT * FROM vt0, v0, rt1 WHERE ((NOT (((((v0.c1)AND(rt1.c3)))OR(rt1.c3)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((v0.c1)AND(rt1.c3)))OR(rt1.c3))))) IS TRUE)  as count FROM vt0, v0, rt1);
SELECT * FROM vt0, v0, rt1 WHERE ((NOT (((((v0.c1)AND(rt1.c3)))OR(rt1.c3)))));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c1);
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON x'' RIGHT OUTER JOIN rt1 ON rt1.c4 WHERE (CAST(((rt1.c3)AND(v0.c0)) AS TEXT)) ORDER BY x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c3)AND(v0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON x'' RIGHT OUTER JOIN rt1 ON rt1.c4 ORDER BY x'' DESC  NULLS LAST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON x'' RIGHT OUTER JOIN rt1 ON rt1.c4 WHERE (CAST(((rt1.c3)AND(v0.c0)) AS TEXT)) ORDER BY x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c3)AND(v0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON x'' RIGHT OUTER JOIN rt1 ON rt1.c4 ORDER BY x'' DESC  NULLS LAST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON x'' RIGHT OUTER JOIN rt1 ON rt1.c4 WHERE (CAST(((rt1.c3)AND(v0.c0)) AS TEXT)) ORDER BY x'' DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE RTRIM)IS NOT(((((v0.c0)OR(v0.c0)))AND(v0.c2)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM)IS NOT(((((v0.c0)OR(v0.c0)))AND(v0.c2))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE RTRIM)IS NOT(((((v0.c0)OR(v0.c0)))AND(v0.c2)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM)IS NOT(((((v0.c0)OR(v0.c0)))AND(v0.c2))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE RTRIM)IS NOT(((((v0.c0)OR(v0.c0)))AND(v0.c2)))));
SELECT ALL * FROM v0, vt0, rt1 WHERE ((((((rt1.c5, v0.c2, v0.c2))>=(('x\rjj', rt1.c2, x'')))) NOT BETWEEN (((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt1.c2))) AND ((rt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c5, v0.c2, v0.c2))>=(('x\rjj', rt1.c2, x'')))) NOT BETWEEN (((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt1.c2))) AND ((rt1.c0 IN ())))) IS TRUE)  as count FROM v0, vt0, rt1);
SELECT ALL * FROM v0, vt0, rt1 WHERE ((((((rt1.c5, v0.c2, v0.c2))>=(('x\rjj', rt1.c2, x'')))) NOT BETWEEN (((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt1.c2))) AND ((rt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c5, v0.c2, v0.c2))>=(('x\rjj', rt1.c2, x'')))) NOT BETWEEN (((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt1.c2))) AND ((rt1.c0 IN ())))) IS TRUE)  as count FROM v0, vt0, rt1);
SELECT ALL * FROM v0, vt0, rt1 WHERE ((((((rt1.c5, v0.c2, v0.c2))>=(('x\rjj', rt1.c2, x'')))) NOT BETWEEN (((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt1.c2))) AND ((rt1.c0 IN ()))));
SELECT * FROM v0 RIGHT OUTER JOIN rt1 ON MIN(v0.c0, v0.c2, rt1.c0, rt1.c0) COLLATE BINARY WHERE (CHANGES()) ORDER BY x'5d7c' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt1 ON MIN(v0.c0, v0.c2, rt1.c0, rt1.c0) COLLATE BINARY ORDER BY x'5d7c' DESC  NULLS LAST);
SELECT * FROM v0 RIGHT OUTER JOIN rt1 ON MIN(v0.c0, v0.c2, rt1.c0, rt1.c0) COLLATE BINARY WHERE (CHANGES()) ORDER BY x'5d7c' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt1 ON MIN(v0.c0, v0.c2, rt1.c0, rt1.c0) COLLATE BINARY ORDER BY x'5d7c' DESC  NULLS LAST);
SELECT * FROM v0 RIGHT OUTER JOIN rt1 ON MIN(v0.c0, v0.c2, rt1.c0, rt1.c0) COLLATE BINARY WHERE (CHANGES()) ORDER BY x'5d7c' DESC  NULLS LAST;
SELECT * FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c2);
SELECT ALL COUNT(*) FROM v0, vt0, rt1 WHERE (CAST(TRIM(rt1.c3, rt1.c0) AS NUMERIC)) ORDER BY rt1.c5 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(TRIM(rt1.c3, rt1.c0) AS NUMERIC)) IS TRUE)  as count FROM v0, vt0, rt1 ORDER BY rt1.c5 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, rt1 WHERE (CAST(TRIM(rt1.c3, rt1.c0) AS NUMERIC)) ORDER BY rt1.c5 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(TRIM(rt1.c3, rt1.c0) AS NUMERIC)) IS TRUE)  as count FROM v0, vt0, rt1 ORDER BY rt1.c5 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, rt1 WHERE (CAST(TRIM(rt1.c3, rt1.c0) AS NUMERIC)) ORDER BY rt1.c5 DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CAST(((((vt0.c0)AND(NULL)))AND(vt0.c0)) AS TEXT)) ORDER BY ((vt0.c0)>((vt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)AND(NULL)))AND(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)>((vt0.c0 IN ()))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST(((((vt0.c0)AND(NULL)))AND(vt0.c0)) AS TEXT)) ORDER BY ((vt0.c0)>((vt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)AND(NULL)))AND(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)>((vt0.c0 IN ()))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST(((((vt0.c0)AND(NULL)))AND(vt0.c0)) AS TEXT)) ORDER BY ((vt0.c0)>((vt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((CAST(vt0.c0 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((CAST(vt0.c0 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((CAST(vt0.c0 AS NUMERIC) IN ()));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (rt1.c1) ORDER BY CASE WHEN CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c4 END THEN ((((rt1.c3)OR(rt1.c2)))AND(rt1.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE WHEN CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c4 END THEN ((((rt1.c3)OR(rt1.c2)))AND(rt1.c2)) END ASC);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (rt1.c1) ORDER BY CASE WHEN CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c4 END THEN ((((rt1.c3)OR(rt1.c2)))AND(rt1.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE WHEN CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c4 END THEN ((((rt1.c3)OR(rt1.c2)))AND(rt1.c2)) END ASC);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (rt1.c1) ORDER BY CASE WHEN CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c4 END THEN ((((rt1.c3)OR(rt1.c2)))AND(rt1.c2)) END ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN (rt1.c5 IN ()) THEN ((rt1.c0)>=(rt1.c0)) ELSE NULL COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt1.c5 IN ()) THEN ((rt1.c0)>=(rt1.c0)) ELSE NULL COLLATE BINARY END) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN (rt1.c5 IN ()) THEN ((rt1.c0)>=(rt1.c0)) ELSE NULL COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt1.c5 IN ()) THEN ((rt1.c0)>=(rt1.c0)) ELSE NULL COLLATE BINARY END) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN (rt1.c5 IN ()) THEN ((rt1.c0)>=(rt1.c0)) ELSE NULL COLLATE BINARY END);
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON ((rt1.c0 IN ()) IN ()) LEFT OUTER JOIN rt1 ON (((((rt1.c2 IN (rt1.c5)))AND(((((((((v0.c1)AND(v0.c2)))AND(rt1.c1)))AND(rt1.c1)))AND(v0.c1)))))OR(((v0.c1) BETWEEN (v0.c2) AND (rt1.c2)))) WHERE (((rt1.c4)IS NOT(((rt1.c1)<<(rt1.c0))))) ORDER BY SQLITE_COMPILEOPTION_USED(v0.c0 COLLATE NOCASE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c4)IS NOT(((rt1.c1)<<(rt1.c0))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((rt1.c0 IN ()) IN ()) LEFT OUTER JOIN rt1 ON (((((rt1.c2 IN (rt1.c5)))AND(((((((((v0.c1)AND(v0.c2)))AND(rt1.c1)))AND(rt1.c1)))AND(v0.c1)))))OR(((v0.c1) BETWEEN (v0.c2) AND (rt1.c2)))) ORDER BY SQLITE_COMPILEOPTION_USED(v0.c0 COLLATE NOCASE) DESC  NULLS FIRST);
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON ((rt1.c0 IN ()) IN ()) LEFT OUTER JOIN rt1 ON (((((rt1.c2 IN (rt1.c5)))AND(((((((((v0.c1)AND(v0.c2)))AND(rt1.c1)))AND(rt1.c1)))AND(v0.c1)))))OR(((v0.c1) BETWEEN (v0.c2) AND (rt1.c2)))) WHERE (((rt1.c4)IS NOT(((rt1.c1)<<(rt1.c0))))) ORDER BY SQLITE_COMPILEOPTION_USED(v0.c0 COLLATE NOCASE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c4)IS NOT(((rt1.c1)<<(rt1.c0))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((rt1.c0 IN ()) IN ()) LEFT OUTER JOIN rt1 ON (((((rt1.c2 IN (rt1.c5)))AND(((((((((v0.c1)AND(v0.c2)))AND(rt1.c1)))AND(rt1.c1)))AND(v0.c1)))))OR(((v0.c1) BETWEEN (v0.c2) AND (rt1.c2)))) ORDER BY SQLITE_COMPILEOPTION_USED(v0.c0 COLLATE NOCASE) DESC  NULLS FIRST);
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON ((rt1.c0 IN ()) IN ()) LEFT OUTER JOIN rt1 ON (((((rt1.c2 IN (rt1.c5)))AND(((((((((v0.c1)AND(v0.c2)))AND(rt1.c1)))AND(rt1.c1)))AND(v0.c1)))))OR(((v0.c1) BETWEEN (v0.c2) AND (rt1.c2)))) WHERE (((rt1.c4)IS NOT(((rt1.c1)<<(rt1.c0))))) ORDER BY SQLITE_COMPILEOPTION_USED(v0.c0 COLLATE NOCASE) DESC  NULLS FIRST;
SELECT * FROM v0, rt1, vt0 WHERE ((((((v0.c1, rt1.c3, v0.c2)) NOT BETWEEN ((v0.c1, v0.c2, vt0.c0)) AND ((rt1.c2, v0.c1, vt0.c0))))%(CAST(v0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c1, rt1.c3, v0.c2)) NOT BETWEEN ((v0.c1, v0.c2, vt0.c0)) AND ((rt1.c2, v0.c1, vt0.c0))))%(CAST(v0.c1 AS INTEGER)))) IS TRUE)  as count FROM v0, rt1, vt0);
SELECT * FROM v0, rt1, vt0 WHERE ((((((v0.c1, rt1.c3, v0.c2)) NOT BETWEEN ((v0.c1, v0.c2, vt0.c0)) AND ((rt1.c2, v0.c1, vt0.c0))))%(CAST(v0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c1, rt1.c3, v0.c2)) NOT BETWEEN ((v0.c1, v0.c2, vt0.c0)) AND ((rt1.c2, v0.c1, vt0.c0))))%(CAST(v0.c1 AS INTEGER)))) IS TRUE)  as count FROM v0, rt1, vt0);
SELECT * FROM v0, rt1, vt0 WHERE ((((((v0.c1, rt1.c3, v0.c2)) NOT BETWEEN ((v0.c1, v0.c2, vt0.c0)) AND ((rt1.c2, v0.c1, vt0.c0))))%(CAST(v0.c1 AS INTEGER))));
SELECT * FROM v0 WHERE (((v0.c2) ISNULL) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((v0.c2) ISNULL) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c2) ISNULL) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((v0.c2) ISNULL) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c2) ISNULL) COLLATE NOCASE COLLATE RTRIM);
SELECT * FROM v0 WHERE (IFNULL((((v0.c0, v0.c2, v0.c0)) BETWEEN ((v0.c1, v0.c1, v0.c0)) AND ((v0.c1, v0.c2, v0.c2))), ((1.74119217E9)<=(v0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((((v0.c0, v0.c2, v0.c0)) BETWEEN ((v0.c1, v0.c1, v0.c0)) AND ((v0.c1, v0.c2, v0.c2))), ((1.74119217E9)<=(v0.c2)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (IFNULL((((v0.c0, v0.c2, v0.c0)) BETWEEN ((v0.c1, v0.c1, v0.c0)) AND ((v0.c1, v0.c2, v0.c2))), ((1.74119217E9)<=(v0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((((v0.c0, v0.c2, v0.c0)) BETWEEN ((v0.c1, v0.c1, v0.c0)) AND ((v0.c1, v0.c2, v0.c2))), ((1.74119217E9)<=(v0.c2)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (IFNULL((((v0.c0, v0.c2, v0.c0)) BETWEEN ((v0.c1, v0.c1, v0.c0)) AND ((v0.c1, v0.c2, v0.c2))), ((1.74119217E9)<=(v0.c2))));
SELECT * FROM rt1, v0 WHERE ((((NOT (v0.c0))) BETWEEN (((v0.c0)+(rt1.c0))) AND (NULL))) ORDER BY rt1.c2, (NOT (CAST('-1164528082' AS REAL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c0))) BETWEEN (((v0.c0)+(rt1.c0))) AND (NULL))) IS TRUE)  as count FROM rt1, v0 ORDER BY rt1.c2, (NOT (CAST('-1164528082' AS REAL))) DESC  NULLS FIRST);
SELECT * FROM rt1, v0 WHERE ((((NOT (v0.c0))) BETWEEN (((v0.c0)+(rt1.c0))) AND (NULL))) ORDER BY rt1.c2, (NOT (CAST('-1164528082' AS REAL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c0))) BETWEEN (((v0.c0)+(rt1.c0))) AND (NULL))) IS TRUE)  as count FROM rt1, v0 ORDER BY rt1.c2, (NOT (CAST('-1164528082' AS REAL))) DESC  NULLS FIRST);
SELECT * FROM rt1, v0 WHERE ((((NOT (v0.c0))) BETWEEN (((v0.c0)+(rt1.c0))) AND (NULL))) ORDER BY rt1.c2, (NOT (CAST('-1164528082' AS REAL))) DESC  NULLS FIRST;
SELECT * FROM v0, vt0 WHERE ((~ (v0.c1))) ORDER BY ((v0.c2) NOT BETWEEN (v0.c1 COLLATE NOCASE) AND (CASE WHEN v0.c2 THEN v0.c0 END)) ASC  NULLS LAST, ((vt0.c0)<(((vt0.c0) NOT NULL))) ASC  NULLS LAST, v0.c2 DESC;
SELECT SUM(count) FROM (SELECT (((~ (v0.c1))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((v0.c2) NOT BETWEEN (v0.c1 COLLATE NOCASE) AND (CASE WHEN v0.c2 THEN v0.c0 END)) ASC  NULLS LAST, ((vt0.c0)<(((vt0.c0) NOT NULL))) ASC  NULLS LAST, v0.c2 DESC);
SELECT * FROM v0, vt0 WHERE ((~ (v0.c1))) ORDER BY ((v0.c2) NOT BETWEEN (v0.c1 COLLATE NOCASE) AND (CASE WHEN v0.c2 THEN v0.c0 END)) ASC  NULLS LAST, ((vt0.c0)<(((vt0.c0) NOT NULL))) ASC  NULLS LAST, v0.c2 DESC;
SELECT SUM(count) FROM (SELECT (((~ (v0.c1))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((v0.c2) NOT BETWEEN (v0.c1 COLLATE NOCASE) AND (CASE WHEN v0.c2 THEN v0.c0 END)) ASC  NULLS LAST, ((vt0.c0)<(((vt0.c0) NOT NULL))) ASC  NULLS LAST, v0.c2 DESC);
SELECT * FROM v0, vt0 WHERE ((~ (v0.c1))) ORDER BY ((v0.c2) NOT BETWEEN (v0.c1 COLLATE NOCASE) AND (CASE WHEN v0.c2 THEN v0.c0 END)) ASC  NULLS LAST, ((vt0.c0)<(((vt0.c0) NOT NULL))) ASC  NULLS LAST, v0.c2 DESC;
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM v0, rt1);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM v0, rt1);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (rt1.c4);
SELECT ALL * FROM rt1 WHERE (CASE WHEN (NOT (rt1.c4)) THEN (((rt1.c2, rt1.c0, rt1.c0))>=((rt1.c0, rt1.c1, rt1.c5))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (rt1.c4)) THEN (((rt1.c2, rt1.c0, rt1.c0))>=((rt1.c0, rt1.c1, rt1.c5))) END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE WHEN (NOT (rt1.c4)) THEN (((rt1.c2, rt1.c0, rt1.c0))>=((rt1.c0, rt1.c1, rt1.c5))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (rt1.c4)) THEN (((rt1.c2, rt1.c0, rt1.c0))>=((rt1.c0, rt1.c1, rt1.c5))) END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE WHEN (NOT (rt1.c4)) THEN (((rt1.c2, rt1.c0, rt1.c0))>=((rt1.c0, rt1.c1, rt1.c5))) END);
SELECT ALL * FROM rt1 WHERE ((- ((((rt1.c2))<>((rt1.c1)))))) ORDER BY TRIM(rt1.c5 COLLATE RTRIM)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((((rt1.c2))<>((rt1.c1)))))) IS TRUE)  as count FROM rt1 ORDER BY TRIM(rt1.c5 COLLATE RTRIM)  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((- ((((rt1.c2))<>((rt1.c1)))))) ORDER BY TRIM(rt1.c5 COLLATE RTRIM)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((((rt1.c2))<>((rt1.c1)))))) IS TRUE)  as count FROM rt1 ORDER BY TRIM(rt1.c5 COLLATE RTRIM)  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((- ((((rt1.c2))<>((rt1.c1)))))) ORDER BY TRIM(rt1.c5 COLLATE RTRIM)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON CAST(((((rt1.c5)OR(rt1.c4)))OR(rt1.c2)) AS TEXT) WHERE (rt1.c1) ORDER BY (((vt0.c0 IN ()))>>(CASE WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c3 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON CAST(((((rt1.c5)OR(rt1.c4)))OR(rt1.c2)) AS TEXT) ORDER BY (((vt0.c0 IN ()))>>(CASE WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c3 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON CAST(((((rt1.c5)OR(rt1.c4)))OR(rt1.c2)) AS TEXT) WHERE (rt1.c1) ORDER BY (((vt0.c0 IN ()))>>(CASE WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c3 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON CAST(((((rt1.c5)OR(rt1.c4)))OR(rt1.c2)) AS TEXT) ORDER BY (((vt0.c0 IN ()))>>(CASE WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c3 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON CAST(((((rt1.c5)OR(rt1.c4)))OR(rt1.c2)) AS TEXT) WHERE (rt1.c1) ORDER BY (((vt0.c0 IN ()))>>(CASE WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c3 END)) DESC  NULLS LAST;
SELECT ALL * FROM vt0 INNER JOIN v0 ON '-1120382949' WHERE (((CAST(v0.c2 AS REAL)) NOT BETWEEN (4.12632975E8) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN x'' ELSE vt0.c0 END))) ORDER BY LIKELY(CAST(v0.c0 AS TEXT)) DESC  NULLS FIRST, (((- (v0.c2)))>=(NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c2 AS REAL)) NOT BETWEEN (4.12632975E8) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN x'' ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON '-1120382949' ORDER BY LIKELY(CAST(v0.c0 AS TEXT)) DESC  NULLS FIRST, (((- (v0.c2)))>=(NULL)));
SELECT ALL * FROM vt0 INNER JOIN v0 ON '-1120382949' WHERE (((CAST(v0.c2 AS REAL)) NOT BETWEEN (4.12632975E8) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN x'' ELSE vt0.c0 END))) ORDER BY LIKELY(CAST(v0.c0 AS TEXT)) DESC  NULLS FIRST, (((- (v0.c2)))>=(NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c2 AS REAL)) NOT BETWEEN (4.12632975E8) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN x'' ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON '-1120382949' ORDER BY LIKELY(CAST(v0.c0 AS TEXT)) DESC  NULLS FIRST, (((- (v0.c2)))>=(NULL)));
SELECT ALL * FROM vt0 INNER JOIN v0 ON '-1120382949' WHERE (((CAST(v0.c2 AS REAL)) NOT BETWEEN (4.12632975E8) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN x'' ELSE vt0.c0 END))) ORDER BY LIKELY(CAST(v0.c0 AS TEXT)) DESC  NULLS FIRST, (((- (v0.c2)))>=(NULL));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN v0 ON CAST(((rt1.c3) BETWEEN (rt1.c0) AND ('uawe,1왝t')) AS NUMERIC) FULL OUTER JOIN vt0 ON ((CASE WHEN rt1.c1 THEN vt0.c0 END) BETWEEN ((((rt1.c1, rt1.c0, v0.c2)) NOT BETWEEN ((0.22147453275150464, rt1.c2, rt1.c4)) AND ((0x2c0fd8d0, v0.c0, rt1.c3)))) AND (((v0.c0)>(rt1.c5)))) WHERE (((CAST(rt1.c1 AS BLOB))AND(x''))) ORDER BY ((v0.c1) NOT BETWEEN (((rt1.c4) IS FALSE)) AND (LOWER(rt1.c1))) ASC  NULLS LAST, rt1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS BLOB))AND(x''))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON CAST(((rt1.c3) BETWEEN (rt1.c0) AND ('uawe,1왝t')) AS NUMERIC) FULL OUTER JOIN vt0 ON ((CASE WHEN rt1.c1 THEN vt0.c0 END) BETWEEN ((((rt1.c1, rt1.c0, v0.c2)) NOT BETWEEN ((0.22147453275150464, rt1.c2, rt1.c4)) AND ((0X2c0fd8d0, v0.c0, rt1.c3)))) AND (((v0.c0)>(rt1.c5)))) ORDER BY ((v0.c1) NOT BETWEEN (((rt1.c4) IS FALSE)) AND (LOWER(rt1.c1))) ASC  NULLS LAST, rt1.c2  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN v0 ON CAST(((rt1.c3) BETWEEN (rt1.c0) AND ('uawe,1왝t')) AS NUMERIC) FULL OUTER JOIN vt0 ON ((CASE WHEN rt1.c1 THEN vt0.c0 END) BETWEEN ((((rt1.c1, rt1.c0, v0.c2)) NOT BETWEEN ((0.22147453275150464, rt1.c2, rt1.c4)) AND ((0x2c0fd8d0, v0.c0, rt1.c3)))) AND (((v0.c0)>(rt1.c5)))) WHERE (((CAST(rt1.c1 AS BLOB))AND(x''))) ORDER BY ((v0.c1) NOT BETWEEN (((rt1.c4) IS FALSE)) AND (LOWER(rt1.c1))) ASC  NULLS LAST, rt1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS BLOB))AND(x''))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON CAST(((rt1.c3) BETWEEN (rt1.c0) AND ('uawe,1왝t')) AS NUMERIC) FULL OUTER JOIN vt0 ON ((CASE WHEN rt1.c1 THEN vt0.c0 END) BETWEEN ((((rt1.c1, rt1.c0, v0.c2)) NOT BETWEEN ((0.22147453275150464, rt1.c2, rt1.c4)) AND ((0X2c0fd8d0, v0.c0, rt1.c3)))) AND (((v0.c0)>(rt1.c5)))) ORDER BY ((v0.c1) NOT BETWEEN (((rt1.c4) IS FALSE)) AND (LOWER(rt1.c1))) ASC  NULLS LAST, rt1.c2  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN v0 ON CAST(((rt1.c3) BETWEEN (rt1.c0) AND ('uawe,1왝t')) AS NUMERIC) FULL OUTER JOIN vt0 ON ((CASE WHEN rt1.c1 THEN vt0.c0 END) BETWEEN ((((rt1.c1, rt1.c0, v0.c2)) NOT BETWEEN ((0.22147453275150464, rt1.c2, rt1.c4)) AND ((0x2c0fd8d0, v0.c0, rt1.c3)))) AND (((v0.c0)>(rt1.c5)))) WHERE (((CAST(rt1.c1 AS BLOB))AND(x''))) ORDER BY ((v0.c1) NOT BETWEEN (((rt1.c4) IS FALSE)) AND (LOWER(rt1.c1))) ASC  NULLS LAST, rt1.c2  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE ((((((rt1.c4)) BETWEEN (('-1599476084')) AND ((rt1.c4)))) NOT BETWEEN ((~ (rt1.c1))) AND (((rt1.c4)+(rt1.c5))))) ORDER BY (((((NULL)|(rt1.c3))))==((((rt1.c2)-(rt1.c4))))), ((((((rt1.c1)OR(rt1.c2)))OR(rt1.c5))) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c5) AND (rt1.c1))) AND (((rt1.c3)IS NOT(rt1.c5)))), (((rt1.c2 IN ()))=(rt1.c4 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c4)) BETWEEN (('-1599476084')) AND ((rt1.c4)))) NOT BETWEEN ((~ (rt1.c1))) AND (((rt1.c4)+(rt1.c5))))) IS TRUE)  as count FROM rt1 ORDER BY (((((NULL)|(rt1.c3))))==((((rt1.c2)-(rt1.c4))))), ((((((rt1.c1)OR(rt1.c2)))OR(rt1.c5))) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c5) AND (rt1.c1))) AND (((rt1.c3)IS NOT(rt1.c5)))), (((rt1.c2 IN ()))==(rt1.c4 COLLATE NOCASE)) ASC);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c4)) BETWEEN (('-1599476084')) AND ((rt1.c4)))) NOT BETWEEN ((~ (rt1.c1))) AND (((rt1.c4)+(rt1.c5))))) ORDER BY (((((NULL)|(rt1.c3))))==((((rt1.c2)-(rt1.c4))))), ((((((rt1.c1)OR(rt1.c2)))OR(rt1.c5))) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c5) AND (rt1.c1))) AND (((rt1.c3)IS NOT(rt1.c5)))), (((rt1.c2 IN ()))=(rt1.c4 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c4)) BETWEEN (('-1599476084')) AND ((rt1.c4)))) NOT BETWEEN ((~ (rt1.c1))) AND (((rt1.c4)+(rt1.c5))))) IS TRUE)  as count FROM rt1 ORDER BY (((((NULL)|(rt1.c3))))==((((rt1.c2)-(rt1.c4))))), ((((((rt1.c1)OR(rt1.c2)))OR(rt1.c5))) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c5) AND (rt1.c1))) AND (((rt1.c3)IS NOT(rt1.c5)))), (((rt1.c2 IN ()))==(rt1.c4 COLLATE NOCASE)) ASC);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c4)) BETWEEN (('-1599476084')) AND ((rt1.c4)))) NOT BETWEEN ((~ (rt1.c1))) AND (((rt1.c4)+(rt1.c5))))) ORDER BY (((((NULL)|(rt1.c3))))==((((rt1.c2)-(rt1.c4))))), ((((((rt1.c1)OR(rt1.c2)))OR(rt1.c5))) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c5) AND (rt1.c1))) AND (((rt1.c3)IS NOT(rt1.c5)))), (((rt1.c2 IN ()))=(rt1.c4 COLLATE NOCASE)) ASC;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(0.0639669457196983)))OR(vt0.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (vt0.c0))) ORDER BY ((vt0.c0) IS FALSE) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(0.0639669457196983)))OR(vt0.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) IS FALSE) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(0.0639669457196983)))OR(vt0.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (vt0.c0))) ORDER BY ((vt0.c0) IS FALSE) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(0.0639669457196983)))OR(vt0.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) IS FALSE) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(0.0639669457196983)))OR(vt0.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (vt0.c0))) ORDER BY ((vt0.c0) IS FALSE) COLLATE BINARY;
SELECT * FROM rt1, vt0 WHERE (((UNICODE(vt0.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((UNICODE(vt0.c0)) IS FALSE)) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((UNICODE(vt0.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((UNICODE(vt0.c0)) IS FALSE)) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((UNICODE(vt0.c0)) IS FALSE));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON v0.c2 WHERE ((- ((~ (v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((~ (v0.c2))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON v0.c2);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON v0.c2 WHERE ((- ((~ (v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((~ (v0.c2))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON v0.c2);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON v0.c2 WHERE ((- ((~ (v0.c2)))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON ((((UNLIKELY(DISTINCT rt1.c3))AND(CASE vt0.c0  WHEN v0.c2 THEN 0.0697242853407194 ELSE rt1.c2 END)))OR(((rt1.c2)>>(rt1.c3)))) INNER JOIN v0 ON ((((x'')||(NULL)))-(((((((((v0.c0)AND(rt1.c1)))AND(v0.c1)))OR(v0.c0)))AND(rt1.c4)))) WHERE ((((NOT (rt1.c3))) NOT NULL)) ORDER BY ((CAST(rt1.c2 AS NUMERIC))-(((v0.c0)==(rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt1.c3))) NOT NULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON ((((UNLIKELY(DISTINCT rt1.c3))AND(CASE vt0.c0  WHEN v0.c2 THEN 0.0697242853407194 ELSE rt1.c2 END)))OR(((rt1.c2)>>(rt1.c3)))) INNER JOIN v0 ON ((((x'')||(NULL)))-(((((((((v0.c0)AND(rt1.c1)))AND(v0.c1)))OR(v0.c0)))AND(rt1.c4)))) ORDER BY ((CAST(rt1.c2 AS NUMERIC))-(((v0.c0)==(rt1.c3)))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON ((((UNLIKELY(DISTINCT rt1.c3))AND(CASE vt0.c0  WHEN v0.c2 THEN 0.0697242853407194 ELSE rt1.c2 END)))OR(((rt1.c2)>>(rt1.c3)))) INNER JOIN v0 ON ((((x'')||(NULL)))-(((((((((v0.c0)AND(rt1.c1)))AND(v0.c1)))OR(v0.c0)))AND(rt1.c4)))) WHERE ((((NOT (rt1.c3))) NOT NULL)) ORDER BY ((CAST(rt1.c2 AS NUMERIC))-(((v0.c0)==(rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt1.c3))) NOT NULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON ((((UNLIKELY(DISTINCT rt1.c3))AND(CASE vt0.c0  WHEN v0.c2 THEN 0.0697242853407194 ELSE rt1.c2 END)))OR(((rt1.c2)>>(rt1.c3)))) INNER JOIN v0 ON ((((x'')||(NULL)))-(((((((((v0.c0)AND(rt1.c1)))AND(v0.c1)))OR(v0.c0)))AND(rt1.c4)))) ORDER BY ((CAST(rt1.c2 AS NUMERIC))-(((v0.c0)==(rt1.c3)))));
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE BINARY);
SELECT COUNT(*) FROM rt1, v0 RIGHT OUTER JOIN vt0 ON CASE WHEN CASE WHEN NULL THEN rt1.c4 ELSE rt1.c0 END THEN vt0.c0 WHEN ((v0.c1) BETWEEN (v0.c2) AND (v0.c0)) THEN ((((rt1.c0)OR(rt1.c2)))OR(rt1.c3)) WHEN CASE rt1.c4  WHEN rt1.c1 THEN rt1.c1 ELSE v0.c0 END THEN CASE WHEN v0.c0 THEN x'' ELSE v0.c2 END END WHERE (((((((((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c5)))AND(((((rt1.c0)AND(rt1.c4)))AND(rt1.c2)))))OR((('0.44974440035731866')*(vt0.c0)))))AND(((rt1.c1)<=(v0.c2)))))AND((~ (rt1.c5)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c5)))AND(((((rt1.c0)AND(rt1.c4)))AND(rt1.c2)))))OR((('0.44974440035731866')*(vt0.c0)))))AND(((rt1.c1)<=(v0.c2)))))AND((~ (rt1.c5))))) IS TRUE)  as count FROM rt1, v0 RIGHT OUTER JOIN vt0 ON CASE WHEN CASE WHEN NULL THEN rt1.c4 ELSE rt1.c0 END THEN vt0.c0 WHEN ((v0.c1) BETWEEN (v0.c2) AND (v0.c0)) THEN ((((rt1.c0)OR(rt1.c2)))OR(rt1.c3)) WHEN CASE rt1.c4  WHEN rt1.c1 THEN rt1.c1 ELSE v0.c0 END THEN CASE WHEN v0.c0 THEN x'' ELSE v0.c2 END END);
SELECT COUNT(*) FROM rt1, v0 RIGHT OUTER JOIN vt0 ON CASE WHEN CASE WHEN NULL THEN rt1.c4 ELSE rt1.c0 END THEN vt0.c0 WHEN ((v0.c1) BETWEEN (v0.c2) AND (v0.c0)) THEN ((((rt1.c0)OR(rt1.c2)))OR(rt1.c3)) WHEN CASE rt1.c4  WHEN rt1.c1 THEN rt1.c1 ELSE v0.c0 END THEN CASE WHEN v0.c0 THEN x'' ELSE v0.c2 END END WHERE (((((((((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c5)))AND(((((rt1.c0)AND(rt1.c4)))AND(rt1.c2)))))OR((('0.44974440035731866')*(vt0.c0)))))AND(((rt1.c1)<=(v0.c2)))))AND((~ (rt1.c5)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c5)))AND(((((rt1.c0)AND(rt1.c4)))AND(rt1.c2)))))OR((('0.44974440035731866')*(vt0.c0)))))AND(((rt1.c1)<=(v0.c2)))))AND((~ (rt1.c5))))) IS TRUE)  as count FROM rt1, v0 RIGHT OUTER JOIN vt0 ON CASE WHEN CASE WHEN NULL THEN rt1.c4 ELSE rt1.c0 END THEN vt0.c0 WHEN ((v0.c1) BETWEEN (v0.c2) AND (v0.c0)) THEN ((((rt1.c0)OR(rt1.c2)))OR(rt1.c3)) WHEN CASE rt1.c4  WHEN rt1.c1 THEN rt1.c1 ELSE v0.c0 END THEN CASE WHEN v0.c0 THEN x'' ELSE v0.c2 END END);
SELECT COUNT(*) FROM rt1, v0 RIGHT OUTER JOIN vt0 ON CASE WHEN CASE WHEN NULL THEN rt1.c4 ELSE rt1.c0 END THEN vt0.c0 WHEN ((v0.c1) BETWEEN (v0.c2) AND (v0.c0)) THEN ((((rt1.c0)OR(rt1.c2)))OR(rt1.c3)) WHEN CASE rt1.c4  WHEN rt1.c1 THEN rt1.c1 ELSE v0.c0 END THEN CASE WHEN v0.c0 THEN x'' ELSE v0.c2 END END WHERE (((((((((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c5)))AND(((((rt1.c0)AND(rt1.c4)))AND(rt1.c2)))))OR((('0.44974440035731866')*(vt0.c0)))))AND(((rt1.c1)<=(v0.c2)))))AND((~ (rt1.c5)))));
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON ABS(DISTINCT CASE WHEN v0.c0 THEN v0.c2 END) WHERE (HEX((+ (v0.c1)))) ORDER BY (((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c2)))) BETWEEN (((v0.c2)<<(v0.c2))) AND ((NOT (v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((HEX((+ (v0.c1)))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ABS(DISTINCT CASE WHEN v0.c0 THEN v0.c2 END) ORDER BY (((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c2)))) BETWEEN (((v0.c2)<<(v0.c2))) AND ((NOT (v0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON ABS(DISTINCT CASE WHEN v0.c0 THEN v0.c2 END) WHERE (HEX((+ (v0.c1)))) ORDER BY (((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c2)))) BETWEEN (((v0.c2)<<(v0.c2))) AND ((NOT (v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((HEX((+ (v0.c1)))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ABS(DISTINCT CASE WHEN v0.c0 THEN v0.c2 END) ORDER BY (((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c2)))) BETWEEN (((v0.c2)<<(v0.c2))) AND ((NOT (v0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON ABS(DISTINCT CASE WHEN v0.c0 THEN v0.c2 END) WHERE (HEX((+ (v0.c1)))) ORDER BY (((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c2)))) BETWEEN (((v0.c2)<<(v0.c2))) AND ((NOT (v0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE ('?8');
SELECT SUM(count) FROM (SELECT ALL (('?8') IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ('?8');
SELECT SUM(count) FROM (SELECT ALL (('?8') IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ('?8');
SELECT ALL * FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN (vt0.c0 IN ()) THEN '' ELSE CAST(vt0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c0 IN ())  WHEN (vt0.c0 IN ()) THEN '' ELSE CAST(vt0.c0 AS TEXT) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN (vt0.c0 IN ()) THEN '' ELSE CAST(vt0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c0 IN ())  WHEN (vt0.c0 IN ()) THEN '' ELSE CAST(vt0.c0 AS TEXT) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN (vt0.c0 IN ()) THEN '' ELSE CAST(vt0.c0 AS TEXT) END);
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON CAST(TRIM(DISTINCT rt1.c3, rt1.c0) AS INTEGER) WHERE (CASE WHEN CAST(x'' AS REAL) THEN rt1.c1 COLLATE RTRIM ELSE '' END) ORDER BY (+ (((vt0.c0)IS NOT(rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(x'' AS REAL) THEN rt1.c1 COLLATE RTRIM ELSE '' END) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON CAST(TRIM(DISTINCT rt1.c3, rt1.c0) AS INTEGER) ORDER BY (+ (((vt0.c0)IS NOT(rt1.c2)))) ASC);
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON CAST(TRIM(DISTINCT rt1.c3, rt1.c0) AS INTEGER) WHERE (CASE WHEN CAST(x'' AS REAL) THEN rt1.c1 COLLATE RTRIM ELSE '' END) ORDER BY (+ (((vt0.c0)IS NOT(rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(x'' AS REAL) THEN rt1.c1 COLLATE RTRIM ELSE '' END) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON CAST(TRIM(DISTINCT rt1.c3, rt1.c0) AS INTEGER) ORDER BY (+ (((vt0.c0)IS NOT(rt1.c2)))) ASC);
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON CAST(TRIM(DISTINCT rt1.c3, rt1.c0) AS INTEGER) WHERE (CASE WHEN CAST(x'' AS REAL) THEN rt1.c1 COLLATE RTRIM ELSE '' END) ORDER BY (+ (((vt0.c0)IS NOT(rt1.c2)))) ASC;
SELECT * FROM rt1 WHERE (((((x'')IS NOT(rt1.c5))) BETWEEN (CASE rt1.c2  WHEN rt1.c2 THEN '*迱' END) AND (((rt1.c3)<(rt1.c2))))) ORDER BY (((CASE rt1.c4  WHEN rt1.c4 THEN rt1.c0 END))<=((((((((((rt1.c5)OR(rt1.c5)))OR(rt1.c0)))AND(rt1.c0)))AND(rt1.c3))))), ((((rt1.c5)!=(rt1.c5)))<(CASE WHEN rt1.c0 THEN rt1.c5 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')IS NOT(rt1.c5))) BETWEEN (CASE rt1.c2  WHEN rt1.c2 THEN '*迱' END) AND (((rt1.c3)<(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY (((CASE rt1.c4  WHEN rt1.c4 THEN rt1.c0 END))<=((((((((((rt1.c5)OR(rt1.c5)))OR(rt1.c0)))AND(rt1.c0)))AND(rt1.c3))))), ((((rt1.c5)!=(rt1.c5)))<(CASE WHEN rt1.c0 THEN rt1.c5 END)) DESC);
SELECT * FROM rt1 WHERE (((((x'')IS NOT(rt1.c5))) BETWEEN (CASE rt1.c2  WHEN rt1.c2 THEN '*迱' END) AND (((rt1.c3)<(rt1.c2))))) ORDER BY (((CASE rt1.c4  WHEN rt1.c4 THEN rt1.c0 END))<=((((((((((rt1.c5)OR(rt1.c5)))OR(rt1.c0)))AND(rt1.c0)))AND(rt1.c3))))), ((((rt1.c5)!=(rt1.c5)))<(CASE WHEN rt1.c0 THEN rt1.c5 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')IS NOT(rt1.c5))) BETWEEN (CASE rt1.c2  WHEN rt1.c2 THEN '*迱' END) AND (((rt1.c3)<(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY (((CASE rt1.c4  WHEN rt1.c4 THEN rt1.c0 END))<=((((((((((rt1.c5)OR(rt1.c5)))OR(rt1.c0)))AND(rt1.c0)))AND(rt1.c3))))), ((((rt1.c5)!=(rt1.c5)))<(CASE WHEN rt1.c0 THEN rt1.c5 END)) DESC);
SELECT * FROM rt1 WHERE (((((x'')IS NOT(rt1.c5))) BETWEEN (CASE rt1.c2  WHEN rt1.c2 THEN '*迱' END) AND (((rt1.c3)<(rt1.c2))))) ORDER BY (((CASE rt1.c4  WHEN rt1.c4 THEN rt1.c0 END))<=((((((((((rt1.c5)OR(rt1.c5)))OR(rt1.c0)))AND(rt1.c0)))AND(rt1.c3))))), ((((rt1.c5)!=(rt1.c5)))<(CASE WHEN rt1.c0 THEN rt1.c5 END)) DESC;
SELECT * FROM v0, vt0, rt1 WHERE (((((((rt1.c5)%(rt1.c2)))OR(rt1.c5)))AND(x''))) ORDER BY ((CASE WHEN v0.c0 THEN rt1.c1 ELSE rt1.c4 END)LIKE((((rt1.c2, v0.c1, rt1.c4))>=((rt1.c4, rt1.c0, v0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c5)%(rt1.c2)))OR(rt1.c5)))AND(x''))) IS TRUE)  as count FROM v0, vt0, rt1 ORDER BY ((CASE WHEN v0.c0 THEN rt1.c1 ELSE rt1.c4 END)LIKE((((rt1.c2, v0.c1, rt1.c4))>=((rt1.c4, rt1.c0, v0.c0))))) ASC  NULLS LAST);
SELECT * FROM v0, vt0, rt1 WHERE (((((((rt1.c5)%(rt1.c2)))OR(rt1.c5)))AND(x''))) ORDER BY ((CASE WHEN v0.c0 THEN rt1.c1 ELSE rt1.c4 END)LIKE((((rt1.c2, v0.c1, rt1.c4))>=((rt1.c4, rt1.c0, v0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c5)%(rt1.c2)))OR(rt1.c5)))AND(x''))) IS TRUE)  as count FROM v0, vt0, rt1 ORDER BY ((CASE WHEN v0.c0 THEN rt1.c1 ELSE rt1.c4 END)LIKE((((rt1.c2, v0.c1, rt1.c4))>=((rt1.c4, rt1.c0, v0.c0))))) ASC  NULLS LAST);
SELECT * FROM v0, vt0, rt1 WHERE (((((((rt1.c5)%(rt1.c2)))OR(rt1.c5)))AND(x''))) ORDER BY ((CASE WHEN v0.c0 THEN rt1.c1 ELSE rt1.c4 END)LIKE((((rt1.c2, v0.c1, rt1.c4))>=((rt1.c4, rt1.c0, v0.c0))))) ASC  NULLS LAST;
SELECT * FROM rt1, vt0, v0 WHERE (((((((vt0.c0) IS FALSE))AND(x'2d7a')))OR(vt0.c0 COLLATE RTRIM))) ORDER BY CAST(rt1.c1 AS REAL) COLLATE BINARY DESC  NULLS FIRST, json_extract((+ (rt1.c2)), (((v0.c0))>=((v0.c1))), ((0.10329589436626863) BETWEEN (rt1.c2) AND (rt1.c1)), CASE WHEN x'' THEN rt1.c3 ELSE rt1.c0 END, vt0.c0, ((rt1.c1) NOT NULL)) ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) IS FALSE))AND(x'2d7a')))OR(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, vt0, v0 ORDER BY CAST(rt1.c1 AS REAL) COLLATE BINARY DESC  NULLS FIRST, json_extract((+ (rt1.c2)), (((v0.c0))>=((v0.c1))), ((0.10329589436626863) BETWEEN (rt1.c2) AND (rt1.c1)), CASE WHEN x'' THEN rt1.c3 ELSE rt1.c0 END, vt0.c0, ((rt1.c1) NOT NULL)) ASC);
SELECT * FROM rt1, vt0, v0 WHERE (((((((vt0.c0) IS FALSE))AND(x'2d7a')))OR(vt0.c0 COLLATE RTRIM))) ORDER BY CAST(rt1.c1 AS REAL) COLLATE BINARY DESC  NULLS FIRST, json_extract((+ (rt1.c2)), (((v0.c0))>=((v0.c1))), ((0.10329589436626863) BETWEEN (rt1.c2) AND (rt1.c1)), CASE WHEN x'' THEN rt1.c3 ELSE rt1.c0 END, vt0.c0, ((rt1.c1) NOT NULL)) ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) IS FALSE))AND(x'2d7a')))OR(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, vt0, v0 ORDER BY CAST(rt1.c1 AS REAL) COLLATE BINARY DESC  NULLS FIRST, json_extract((+ (rt1.c2)), (((v0.c0))>=((v0.c1))), ((0.10329589436626863) BETWEEN (rt1.c2) AND (rt1.c1)), CASE WHEN x'' THEN rt1.c3 ELSE rt1.c0 END, vt0.c0, ((rt1.c1) NOT NULL)) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(-1965606104 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(-1965606104 AS REAL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(-1965606104 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(-1965606104 AS REAL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(-1965606104 AS REAL));
SELECT COUNT(*) FROM rt1, v0 WHERE (UPPER(DISTINCT CAST(rt1.c2 AS REAL))) ORDER BY CASE WHEN x'5e4f' THEN TRIM(v0.c2, rt1.c1) WHEN UPPER(rt1.c3) THEN (rt1.c0 IN ()) WHEN CASE WHEN NULL THEN rt1.c4 END THEN CASE v0.c0  WHEN rt1.c0 THEN v0.c1 ELSE rt1.c2 END WHEN CAST(v0.c2 AS NUMERIC) THEN ((NULL)LIKE(rt1.c2)) WHEN SQLITE_VERSION() THEN ((((rt1.c2)AND(rt1.c3)))OR(rt1.c0)) ELSE CAST(v0.c1 AS TEXT) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT CAST(rt1.c2 AS REAL))) IS TRUE)  as count FROM rt1, v0 ORDER BY CASE WHEN x'5e4f' THEN TRIM(v0.c2, rt1.c1) WHEN UPPER(rt1.c3) THEN (rt1.c0 IN ()) WHEN CASE WHEN NULL THEN rt1.c4 END THEN CASE v0.c0  WHEN rt1.c0 THEN v0.c1 ELSE rt1.c2 END WHEN CAST(v0.c2 AS NUMERIC) THEN ((NULL)LIKE(rt1.c2)) WHEN SQLITE_VERSION() THEN ((((rt1.c2)AND(rt1.c3)))OR(rt1.c0)) ELSE CAST(v0.c1 AS TEXT) END  NULLS FIRST);
SELECT COUNT(*) FROM rt1, v0 WHERE (UPPER(DISTINCT CAST(rt1.c2 AS REAL))) ORDER BY CASE WHEN x'5e4f' THEN TRIM(v0.c2, rt1.c1) WHEN UPPER(rt1.c3) THEN (rt1.c0 IN ()) WHEN CASE WHEN NULL THEN rt1.c4 END THEN CASE v0.c0  WHEN rt1.c0 THEN v0.c1 ELSE rt1.c2 END WHEN CAST(v0.c2 AS NUMERIC) THEN ((NULL)LIKE(rt1.c2)) WHEN SQLITE_VERSION() THEN ((((rt1.c2)AND(rt1.c3)))OR(rt1.c0)) ELSE CAST(v0.c1 AS TEXT) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT CAST(rt1.c2 AS REAL))) IS TRUE)  as count FROM rt1, v0 ORDER BY CASE WHEN x'5e4f' THEN TRIM(v0.c2, rt1.c1) WHEN UPPER(rt1.c3) THEN (rt1.c0 IN ()) WHEN CASE WHEN NULL THEN rt1.c4 END THEN CASE v0.c0  WHEN rt1.c0 THEN v0.c1 ELSE rt1.c2 END WHEN CAST(v0.c2 AS NUMERIC) THEN ((NULL)LIKE(rt1.c2)) WHEN SQLITE_VERSION() THEN ((((rt1.c2)AND(rt1.c3)))OR(rt1.c0)) ELSE CAST(v0.c1 AS TEXT) END  NULLS FIRST);
SELECT COUNT(*) FROM rt1, v0 WHERE (UPPER(DISTINCT CAST(rt1.c2 AS REAL))) ORDER BY CASE WHEN x'5e4f' THEN TRIM(v0.c2, rt1.c1) WHEN UPPER(rt1.c3) THEN (rt1.c0 IN ()) WHEN CASE WHEN NULL THEN rt1.c4 END THEN CASE v0.c0  WHEN rt1.c0 THEN v0.c1 ELSE rt1.c2 END WHEN CAST(v0.c2 AS NUMERIC) THEN ((NULL)LIKE(rt1.c2)) WHEN SQLITE_VERSION() THEN ((((rt1.c2)AND(rt1.c3)))OR(rt1.c0)) ELSE CAST(v0.c1 AS TEXT) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c2 IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c2 IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c2 IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c2 IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c2 IN ()));
SELECT COUNT(*) FROM rt1, vt0, v0 NOT INDEXED WHERE (((((((rt1.c0)IS(rt1.c1)))OR(v0.c1 COLLATE RTRIM)))OR('O*'))) ORDER BY ((((rt1.c3) NOT BETWEEN (rt1.c0) AND (''))) BETWEEN (((((((((rt1.c4)OR(v0.c0)))OR(rt1.c4)))AND(v0.c2)))OR(rt1.c0))) AND (v0.c1 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)IS(rt1.c1)))OR(v0.c1 COLLATE RTRIM)))OR('O*'))) IS TRUE)  as count FROM rt1, vt0, v0 ORDER BY ((((rt1.c3) NOT BETWEEN (rt1.c0) AND (''))) BETWEEN (((((((((rt1.c4)OR(v0.c0)))OR(rt1.c4)))AND(v0.c2)))OR(rt1.c0))) AND (v0.c1 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0, v0 NOT INDEXED WHERE (((((((rt1.c0)IS(rt1.c1)))OR(v0.c1 COLLATE RTRIM)))OR('O*'))) ORDER BY ((((rt1.c3) NOT BETWEEN (rt1.c0) AND (''))) BETWEEN (((((((((rt1.c4)OR(v0.c0)))OR(rt1.c4)))AND(v0.c2)))OR(rt1.c0))) AND (v0.c1 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)IS(rt1.c1)))OR(v0.c1 COLLATE RTRIM)))OR('O*'))) IS TRUE)  as count FROM rt1, vt0, v0 ORDER BY ((((rt1.c3) NOT BETWEEN (rt1.c0) AND (''))) BETWEEN (((((((((rt1.c4)OR(v0.c0)))OR(rt1.c4)))AND(v0.c2)))OR(rt1.c0))) AND (v0.c1 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0, v0 NOT INDEXED WHERE (((((((rt1.c0)IS(rt1.c1)))OR(v0.c1 COLLATE RTRIM)))OR('O*'))) ORDER BY ((((rt1.c3) NOT BETWEEN (rt1.c0) AND (''))) BETWEEN (((((((((rt1.c4)OR(v0.c0)))OR(rt1.c4)))AND(v0.c2)))OR(rt1.c0))) AND (v0.c1 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (((rt1.c2) IS FALSE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c2) IS FALSE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c2) IS FALSE) COLLATE BINARY);
SELECT * FROM vt0, rt1, v0 WHERE (((CAST(rt1.c5 AS TEXT)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c5 AS TEXT)) ISNULL)) IS TRUE)  as count FROM vt0, rt1, v0);
SELECT * FROM vt0, rt1, v0 WHERE (((CAST(rt1.c5 AS TEXT)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c5 AS TEXT)) ISNULL)) IS TRUE)  as count FROM vt0, rt1, v0);
SELECT * FROM vt0, rt1, v0 WHERE (((CAST(rt1.c5 AS TEXT)) ISNULL));
SELECT * FROM v0, vt0 WHERE ((((vt0.c0 IN ()))==(((vt0.c0)/('Vw'))))) ORDER BY ((vt0.c0 IN ()) IN (((vt0.c0) NOT BETWEEN (v0.c2) AND (v0.c0)), v0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))=(((vt0.c0)/('Vw'))))) IS TRUE)  as count FROM v0, vt0 NOT INDEXED ORDER BY ((vt0.c0 IN ()) IN (((vt0.c0) NOT BETWEEN (v0.c2) AND (v0.c0)), v0.c1 COLLATE RTRIM)));
SELECT * FROM v0, vt0 WHERE ((((vt0.c0 IN ()))==(((vt0.c0)/('Vw'))))) ORDER BY ((vt0.c0 IN ()) IN (((vt0.c0) NOT BETWEEN (v0.c2) AND (v0.c0)), v0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))=(((vt0.c0)/('Vw'))))) IS TRUE)  as count FROM v0, vt0 NOT INDEXED ORDER BY ((vt0.c0 IN ()) IN (((vt0.c0) NOT BETWEEN (v0.c2) AND (v0.c0)), v0.c1 COLLATE RTRIM)));
SELECT * FROM v0, vt0 WHERE ((((vt0.c0 IN ()))==(((vt0.c0)/('Vw'))))) ORDER BY ((vt0.c0 IN ()) IN (((vt0.c0) NOT BETWEEN (v0.c2) AND (v0.c0)), v0.c1 COLLATE RTRIM));
SELECT ALL * FROM vt0 WHERE ('-11609348');
SELECT SUM(count) FROM (SELECT (('-11609348') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('-11609348');
SELECT SUM(count) FROM (SELECT (('-11609348') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('-11609348');
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'499a')IS((('b\bU6D9(W')*(x'')))));
SELECT SUM(count) FROM (SELECT ((((x'499a')IS((('b\bU6D9(W')*(x''))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'499a')IS((('b\bU6D9(W')*(x'')))));
SELECT SUM(count) FROM (SELECT ((((x'499a')IS((('b\bU6D9(W')*(x''))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'499a')IS((('b\bU6D9(W')*(x'')))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN 0.3254387174430544 THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c5))) END) ORDER BY ROUND(((0.8670375536079394) NOT NULL), load_extension(rt1.c2)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.3254387174430544 THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c5))) END) IS TRUE)  as count FROM rt1, vt0 ORDER BY ROUND(((0.8670375536079394) NOT NULL), load_extension(rt1.c2)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN 0.3254387174430544 THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c5))) END) ORDER BY ROUND(((0.8670375536079394) NOT NULL), load_extension(rt1.c2)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.3254387174430544 THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c5))) END) IS TRUE)  as count FROM rt1, vt0 ORDER BY ROUND(((0.8670375536079394) NOT NULL), load_extension(rt1.c2)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c4) BETWEEN (rt1.c4) AND (((rt1.c5)GLOB(rt1.c1))))) ORDER BY rt1.c3 DESC, ((((rt1.c0)==(rt1.c2)))%(((rt1.c1)LIKE(rt1.c5)))), CAST(((rt1.c2)>(rt1.c0)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c4) BETWEEN (rt1.c4) AND (((rt1.c5)GLOB(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c3 DESC, ((((rt1.c0)==(rt1.c2)))%(((rt1.c1)LIKE(rt1.c5)))), CAST(((rt1.c2)>(rt1.c0)) AS INTEGER) ASC);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c4) BETWEEN (rt1.c4) AND (((rt1.c5)GLOB(rt1.c1))))) ORDER BY rt1.c3 DESC, ((((rt1.c0)==(rt1.c2)))%(((rt1.c1)LIKE(rt1.c5)))), CAST(((rt1.c2)>(rt1.c0)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c4) BETWEEN (rt1.c4) AND (((rt1.c5)GLOB(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c3 DESC, ((((rt1.c0)==(rt1.c2)))%(((rt1.c1)LIKE(rt1.c5)))), CAST(((rt1.c2)>(rt1.c0)) AS INTEGER) ASC);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c4) BETWEEN (rt1.c4) AND (((rt1.c5)GLOB(rt1.c1))))) ORDER BY rt1.c3 DESC, ((((rt1.c0)==(rt1.c2)))%(((rt1.c1)LIKE(rt1.c5)))), CAST(((rt1.c2)>(rt1.c0)) AS INTEGER) ASC;
SELECT * FROM rt1, vt0 WHERE ((((((rt1.c3)>(rt1.c3))))<=((((rt1.c1) IS FALSE))))) ORDER BY (((((((rt1.c2)AND(rt1.c0)))OR(rt1.c2)), ((rt1.c3) BETWEEN (x'') AND (rt1.c5)), vt0.c0))!=((((rt1.c2) ISNULL), CASE WHEN rt1.c0 THEN rt1.c5 END, (((rt1.c3))>((rt1.c0))))))  NULLS FIRST, (+ (CASE WHEN rt1.c2 THEN rt1.c2 END)), (((((((((((rt1.c3)) BETWEEN ((-6.55368408E8)) AND ((rt1.c0))))OR((~ (rt1.c5)))))AND(((((((((x'')AND(rt1.c2)))AND(rt1.c5)))OR(rt1.c3)))OR('')))))OR(((((((((rt1.c2)AND(rt1.c5)))AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c5)))))OR((vt0.c0 IN (rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c3)>(rt1.c3))))<=((((rt1.c1) IS FALSE))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((((((rt1.c2)AND(rt1.c0)))OR(rt1.c2)), ((rt1.c3) BETWEEN (x'') AND (rt1.c5)), vt0.c0))!=((((rt1.c2) ISNULL), CASE WHEN rt1.c0 THEN rt1.c5 END, (((rt1.c3))>((rt1.c0))))))  NULLS FIRST, (+ (CASE WHEN rt1.c2 THEN rt1.c2 END)), (((((((((((rt1.c3)) BETWEEN ((-6.55368408E8)) AND ((rt1.c0))))OR((~ (rt1.c5)))))AND(((((((((x'')AND(rt1.c2)))AND(rt1.c5)))OR(rt1.c3)))OR('')))))OR(((((((((rt1.c2)AND(rt1.c5)))AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c5)))))OR((vt0.c0 IN (rt1.c1)))));
SELECT * FROM rt1, vt0 WHERE ((((((rt1.c3)>(rt1.c3))))<=((((rt1.c1) IS FALSE))))) ORDER BY (((((((rt1.c2)AND(rt1.c0)))OR(rt1.c2)), ((rt1.c3) BETWEEN (x'') AND (rt1.c5)), vt0.c0))!=((((rt1.c2) ISNULL), CASE WHEN rt1.c0 THEN rt1.c5 END, (((rt1.c3))>((rt1.c0))))))  NULLS FIRST, (+ (CASE WHEN rt1.c2 THEN rt1.c2 END)), (((((((((((rt1.c3)) BETWEEN ((-6.55368408E8)) AND ((rt1.c0))))OR((~ (rt1.c5)))))AND(((((((((x'')AND(rt1.c2)))AND(rt1.c5)))OR(rt1.c3)))OR('')))))OR(((((((((rt1.c2)AND(rt1.c5)))AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c5)))))OR((vt0.c0 IN (rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c3)>(rt1.c3))))<=((((rt1.c1) IS FALSE))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((((((rt1.c2)AND(rt1.c0)))OR(rt1.c2)), ((rt1.c3) BETWEEN (x'') AND (rt1.c5)), vt0.c0))!=((((rt1.c2) ISNULL), CASE WHEN rt1.c0 THEN rt1.c5 END, (((rt1.c3))>((rt1.c0))))))  NULLS FIRST, (+ (CASE WHEN rt1.c2 THEN rt1.c2 END)), (((((((((((rt1.c3)) BETWEEN ((-6.55368408E8)) AND ((rt1.c0))))OR((~ (rt1.c5)))))AND(((((((((x'')AND(rt1.c2)))AND(rt1.c5)))OR(rt1.c3)))OR('')))))OR(((((((((rt1.c2)AND(rt1.c5)))AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c5)))))OR((vt0.c0 IN (rt1.c1)))));
SELECT * FROM rt1, vt0 WHERE ((((((rt1.c3)>(rt1.c3))))<=((((rt1.c1) IS FALSE))))) ORDER BY (((((((rt1.c2)AND(rt1.c0)))OR(rt1.c2)), ((rt1.c3) BETWEEN (x'') AND (rt1.c5)), vt0.c0))!=((((rt1.c2) ISNULL), CASE WHEN rt1.c0 THEN rt1.c5 END, (((rt1.c3))>((rt1.c0))))))  NULLS FIRST, (+ (CASE WHEN rt1.c2 THEN rt1.c2 END)), (((((((((((rt1.c3)) BETWEEN ((-6.55368408E8)) AND ((rt1.c0))))OR((~ (rt1.c5)))))AND(((((((((x'')AND(rt1.c2)))AND(rt1.c5)))OR(rt1.c3)))OR('')))))OR(((((((((rt1.c2)AND(rt1.c5)))AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c5)))))OR((vt0.c0 IN (rt1.c1))));
SELECT * FROM vt0 CROSS JOIN rt1 ON ((('987377245'))>((((v0.c2) BETWEEN (rt1.c1) AND (v0.c1))))) INNER JOIN v0 ON ((rt1.c2) IS FALSE) COLLATE BINARY WHERE (((x'b190' IN ()) IN ())) ORDER BY (((((((v0.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c5))))OR(((v0.c0) BETWEEN (v0.c2) AND (rt1.c3)))))OR(rt1.c4 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'b190' IN ()) IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON ((('987377245'))>((((v0.c2) BETWEEN (rt1.c1) AND (v0.c1))))) INNER JOIN v0 ON ((rt1.c2) IS FALSE) COLLATE BINARY ORDER BY (((((((v0.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c5))))OR(((v0.c0) BETWEEN (v0.c2) AND (rt1.c3)))))OR(rt1.c4 COLLATE NOCASE))  NULLS LAST);
SELECT * FROM vt0 CROSS JOIN rt1 ON ((('987377245'))>((((v0.c2) BETWEEN (rt1.c1) AND (v0.c1))))) INNER JOIN v0 ON ((rt1.c2) IS FALSE) COLLATE BINARY WHERE (((x'b190' IN ()) IN ())) ORDER BY (((((((v0.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c5))))OR(((v0.c0) BETWEEN (v0.c2) AND (rt1.c3)))))OR(rt1.c4 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'b190' IN ()) IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON ((('987377245'))>((((v0.c2) BETWEEN (rt1.c1) AND (v0.c1))))) INNER JOIN v0 ON ((rt1.c2) IS FALSE) COLLATE BINARY ORDER BY (((((((v0.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c5))))OR(((v0.c0) BETWEEN (v0.c2) AND (rt1.c3)))))OR(rt1.c4 COLLATE NOCASE))  NULLS LAST);
SELECT * FROM vt0 CROSS JOIN rt1 ON ((('987377245'))>((((v0.c2) BETWEEN (rt1.c1) AND (v0.c1))))) INNER JOIN v0 ON ((rt1.c2) IS FALSE) COLLATE BINARY WHERE (((x'b190' IN ()) IN ())) ORDER BY (((((((v0.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c5))))OR(((v0.c0) BETWEEN (v0.c2) AND (rt1.c3)))))OR(rt1.c4 COLLATE NOCASE))  NULLS LAST;
SELECT COUNT(*) FROM rt1, vt0, v0 WHERE ((NOT (((vt0.c0) BETWEEN (rt1.c4) AND (rt1.c5)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0) BETWEEN (rt1.c4) AND (rt1.c5))))) IS TRUE)  as count FROM rt1, vt0, v0);
SELECT COUNT(*) FROM rt1, vt0, v0 WHERE ((NOT (((vt0.c0) BETWEEN (rt1.c4) AND (rt1.c5)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0) BETWEEN (rt1.c4) AND (rt1.c5))))) IS TRUE)  as count FROM rt1, vt0, v0);
SELECT COUNT(*) FROM rt1, vt0, v0 WHERE ((NOT (((vt0.c0) BETWEEN (rt1.c4) AND (rt1.c5)))));
SELECT ALL * FROM rt1, vt0 WHERE ((- (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((- (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE ((- (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((- (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE ((- (vt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM rt1 INNER JOIN vt0 ON rt1.c4 WHERE (((((((rt1.c5)AND(rt1.c0)))OR(rt1.c5)))<=(((('-lMv'))<=((vt0.c0)))))) ORDER BY CAST(UNLIKELY(DISTINCT rt1.c3) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c5)AND(rt1.c0)))OR(rt1.c5)))<=(((('-lMv'))<=((vt0.c0)))))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON rt1.c4 ORDER BY CAST(UNLIKELY(DISTINCT rt1.c3) AS NUMERIC));
SELECT COUNT(*) FROM rt1 INNER JOIN vt0 ON rt1.c4 WHERE (((((((rt1.c5)AND(rt1.c0)))OR(rt1.c5)))<=(((('-lMv'))<=((vt0.c0)))))) ORDER BY CAST(UNLIKELY(DISTINCT rt1.c3) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c5)AND(rt1.c0)))OR(rt1.c5)))<=(((('-lMv'))<=((vt0.c0)))))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON rt1.c4 ORDER BY CAST(UNLIKELY(DISTINCT rt1.c3) AS NUMERIC));
SELECT COUNT(*) FROM rt1 INNER JOIN vt0 ON rt1.c4 WHERE (((((((rt1.c5)AND(rt1.c0)))OR(rt1.c5)))<=(((('-lMv'))<=((vt0.c0)))))) ORDER BY CAST(UNLIKELY(DISTINCT rt1.c3) AS NUMERIC);
SELECT * FROM rt1 WHERE (TRIM(DISTINCT rt1.c2) COLLATE BINARY) ORDER BY CAST(((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c5)) AS TEXT)  NULLS LAST, CAST(((rt1.c2) IS TRUE) AS INTEGER) DESC, rt1.c5;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT rt1.c2) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY CAST(((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c5)) AS TEXT)  NULLS LAST, CAST(((rt1.c2) IS TRUE) AS INTEGER) DESC, rt1.c5);
SELECT * FROM rt1 WHERE (TRIM(DISTINCT rt1.c2) COLLATE BINARY) ORDER BY CAST(((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c5)) AS TEXT)  NULLS LAST, CAST(((rt1.c2) IS TRUE) AS INTEGER) DESC, rt1.c5;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT rt1.c2) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY CAST(((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c5)) AS TEXT)  NULLS LAST, CAST(((rt1.c2) IS TRUE) AS INTEGER) DESC, rt1.c5);
SELECT * FROM rt1 WHERE (TRIM(DISTINCT rt1.c2) COLLATE BINARY) ORDER BY CAST(((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c5)) AS TEXT)  NULLS LAST, CAST(((rt1.c2) IS TRUE) AS INTEGER) DESC, rt1.c5;
SELECT ALL * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ('-1544963156')));
SELECT SUM(count) FROM (SELECT (((NOT ('-1544963156'))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ('-1544963156')));
SELECT SUM(count) FROM (SELECT (((NOT ('-1544963156'))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ('-1544963156')));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS TEXT) COLLATE BINARY) ORDER BY (((NULL)*(v0.c0)) IN ((v0.c0 IN (v0.c2, v0.c0)))), (((((((v0.c0, v0.c0, v0.c1))<((v0.c2, v0.c0, v0.c1))))AND(v0.c2 COLLATE NOCASE)))AND(((((v0.c2)OR(v0.c1)))AND(v0.c0)))), v0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY (((NULL)*(v0.c0)) IN ((v0.c0 IN (v0.c2, v0.c0)))), (((((((v0.c0, v0.c0, v0.c1))<((v0.c2, v0.c0, v0.c1))))AND(v0.c2 COLLATE NOCASE)))AND(((((v0.c2)OR(v0.c1)))AND(v0.c0)))), v0.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS TEXT) COLLATE BINARY) ORDER BY (((NULL)*(v0.c0)) IN ((v0.c0 IN (v0.c2, v0.c0)))), (((((((v0.c0, v0.c0, v0.c1))<((v0.c2, v0.c0, v0.c1))))AND(v0.c2 COLLATE NOCASE)))AND(((((v0.c2)OR(v0.c1)))AND(v0.c0)))), v0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY (((NULL)*(v0.c0)) IN ((v0.c0 IN (v0.c2, v0.c0)))), (((((((v0.c0, v0.c0, v0.c1))<((v0.c2, v0.c0, v0.c1))))AND(v0.c2 COLLATE NOCASE)))AND(((((v0.c2)OR(v0.c1)))AND(v0.c0)))), v0.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS TEXT) COLLATE BINARY) ORDER BY (((NULL)*(v0.c0)) IN ((v0.c0 IN (v0.c2, v0.c0)))), (((((((v0.c0, v0.c0, v0.c1))<((v0.c2, v0.c0, v0.c1))))AND(v0.c2 COLLATE NOCASE)))AND(((((v0.c2)OR(v0.c1)))AND(v0.c0)))), v0.c1  NULLS LAST;
SELECT * FROM vt0, rt1 WHERE (((((((((CAST(rt1.c4 AS TEXT))OR(rt1.c4 COLLATE BINARY)))OR(CAST(vt0.c0 AS NUMERIC))))OR((NOT (rt1.c4)))))OR(CAST(rt1.c1 AS BLOB)))) ORDER BY rt1.c3  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt1.c4 AS TEXT))OR(rt1.c4 COLLATE BINARY)))OR(CAST(vt0.c0 AS NUMERIC))))OR((NOT (rt1.c4)))))OR(CAST(rt1.c1 AS BLOB)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c3  NULLS FIRST);
SELECT * FROM vt0, rt1 WHERE (((((((((CAST(rt1.c4 AS TEXT))OR(rt1.c4 COLLATE BINARY)))OR(CAST(vt0.c0 AS NUMERIC))))OR((NOT (rt1.c4)))))OR(CAST(rt1.c1 AS BLOB)))) ORDER BY rt1.c3  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt1.c4 AS TEXT))OR(rt1.c4 COLLATE BINARY)))OR(CAST(vt0.c0 AS NUMERIC))))OR((NOT (rt1.c4)))))OR(CAST(rt1.c1 AS BLOB)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c3  NULLS FIRST);
SELECT * FROM vt0, rt1 WHERE (((((((((CAST(rt1.c4 AS TEXT))OR(rt1.c4 COLLATE BINARY)))OR(CAST(vt0.c0 AS NUMERIC))))OR((NOT (rt1.c4)))))OR(CAST(rt1.c1 AS BLOB)))) ORDER BY rt1.c3  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(((vt0.c0)LIKE(vt0.c0))))) ORDER BY ((((vt0.c0) IS FALSE)) NOT BETWEEN (vt0.c0) AND (((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) IS FALSE)) NOT BETWEEN (vt0.c0) AND (((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))));
SELECT * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(((vt0.c0)LIKE(vt0.c0))))) ORDER BY ((((vt0.c0) IS FALSE)) NOT BETWEEN (vt0.c0) AND (((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) IS FALSE)) NOT BETWEEN (vt0.c0) AND (((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))));
SELECT * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(((vt0.c0)LIKE(vt0.c0))))) ORDER BY ((((vt0.c0) IS FALSE)) NOT BETWEEN (vt0.c0) AND (((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))));
SELECT * FROM v0, rt1 WHERE (((rt1.c2) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2) NOT NULL)) IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0, rt1 WHERE (((rt1.c2) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2) NOT NULL)) IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0, rt1 WHERE (((rt1.c2) NOT NULL));
SELECT * FROM rt1 WHERE ('1971167646' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (('1971167646' COLLATE RTRIM) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ('1971167646' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (('1971167646' COLLATE RTRIM) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ('1971167646' COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((NULL) IS TRUE)) ORDER BY CASE ((rt1.c4)IS(rt1.c1))  WHEN rt1.c0 THEN ((((((((rt1.c4)AND(rt1.c1)))AND(rt1.c2)))AND(0.6168387423037379)))AND(rt1.c2)) END, ((x'')>>(CAST(rt1.c1 AS TEXT))) DESC  NULLS LAST, (+ (CASE WHEN rt1.c5 THEN rt1.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS TRUE)) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE ((rt1.c4)IS(rt1.c1))  WHEN rt1.c0 THEN ((((((((rt1.c4)AND(rt1.c1)))AND(rt1.c2)))AND(0.6168387423037379)))AND(rt1.c2)) END, ((x'')>>(CAST(rt1.c1 AS TEXT))) DESC  NULLS LAST, (+ (CASE WHEN rt1.c5 THEN rt1.c1 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((NULL) IS TRUE)) ORDER BY CASE ((rt1.c4)IS(rt1.c1))  WHEN rt1.c0 THEN ((((((((rt1.c4)AND(rt1.c1)))AND(rt1.c2)))AND(0.6168387423037379)))AND(rt1.c2)) END, ((x'')>>(CAST(rt1.c1 AS TEXT))) DESC  NULLS LAST, (+ (CASE WHEN rt1.c5 THEN rt1.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS TRUE)) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE ((rt1.c4)IS(rt1.c1))  WHEN rt1.c0 THEN ((((((((rt1.c4)AND(rt1.c1)))AND(rt1.c2)))AND(0.6168387423037379)))AND(rt1.c2)) END, ((x'')>>(CAST(rt1.c1 AS TEXT))) DESC  NULLS LAST, (+ (CASE WHEN rt1.c5 THEN rt1.c1 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((NULL) IS TRUE)) ORDER BY CASE ((rt1.c4)IS(rt1.c1))  WHEN rt1.c0 THEN ((((((((rt1.c4)AND(rt1.c1)))AND(rt1.c2)))AND(0.6168387423037379)))AND(rt1.c2)) END, ((x'')>>(CAST(rt1.c1 AS TEXT))) DESC  NULLS LAST, (+ (CASE WHEN rt1.c5 THEN rt1.c1 END))  NULLS FIRST;
SELECT ALL * FROM vt0, rt1 FULL OUTER JOIN v0 ON RTRIM((((rt1.c5))=((v0.c2)))) WHERE (((CASE WHEN '1083947950' THEN '-616628064' END) NOTNULL)) ORDER BY CAST(((v0.c0) NOT BETWEEN (v0.c2) AND (rt1.c3)) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN '1083947950' THEN '-616628064' END) NOTNULL)) IS TRUE)  as count FROM vt0, rt1 FULL OUTER JOIN v0 ON RTRIM((((rt1.c5))=((v0.c2)))) ORDER BY CAST(((v0.c0) NOT BETWEEN (v0.c2) AND (rt1.c3)) AS NUMERIC) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 FULL OUTER JOIN v0 ON RTRIM((((rt1.c5))=((v0.c2)))) WHERE (((CASE WHEN '1083947950' THEN '-616628064' END) NOTNULL)) ORDER BY CAST(((v0.c0) NOT BETWEEN (v0.c2) AND (rt1.c3)) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN '1083947950' THEN '-616628064' END) NOTNULL)) IS TRUE)  as count FROM vt0, rt1 FULL OUTER JOIN v0 ON RTRIM((((rt1.c5))=((v0.c2)))) ORDER BY CAST(((v0.c0) NOT BETWEEN (v0.c2) AND (rt1.c3)) AS NUMERIC) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 FULL OUTER JOIN v0 ON RTRIM((((rt1.c5))=((v0.c2)))) WHERE (((CASE WHEN '1083947950' THEN '-616628064' END) NOTNULL)) ORDER BY CAST(((v0.c0) NOT BETWEEN (v0.c2) AND (rt1.c3)) AS NUMERIC) DESC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (((rt1.c4) NOT BETWEEN (rt1.c4) AND (rt1.c0)) COLLATE NOCASE) ORDER BY TRIM(DISTINCT ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1))) ASC, TOTAL_CHANGES() DESC, ((CAST(rt1.c5 AS REAL))&(rt1.c1 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c4) NOT BETWEEN (rt1.c4) AND (rt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY TRIM(DISTINCT ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1))) ASC, TOTAL_CHANGES() DESC, ((CAST(rt1.c5 AS REAL))&(rt1.c1 COLLATE BINARY))  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((rt1.c4) NOT BETWEEN (rt1.c4) AND (rt1.c0)) COLLATE NOCASE) ORDER BY TRIM(DISTINCT ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1))) ASC, TOTAL_CHANGES() DESC, ((CAST(rt1.c5 AS REAL))&(rt1.c1 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c4) NOT BETWEEN (rt1.c4) AND (rt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY TRIM(DISTINCT ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1))) ASC, TOTAL_CHANGES() DESC, ((CAST(rt1.c5 AS REAL))&(rt1.c1 COLLATE BINARY))  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((rt1.c4) NOT BETWEEN (rt1.c4) AND (rt1.c0)) COLLATE NOCASE) ORDER BY TRIM(DISTINCT ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1))) ASC, TOTAL_CHANGES() DESC, ((CAST(rt1.c5 AS REAL))&(rt1.c1 COLLATE BINARY))  NULLS LAST;
SELECT ALL * FROM v0, rt1 WHERE (CAST((NOT (v0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (v0.c0)) AS BLOB)) IS TRUE)  as count FROM v0, rt1);
SELECT ALL * FROM v0, rt1 WHERE (CAST((NOT (v0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (v0.c0)) AS BLOB)) IS TRUE)  as count FROM v0, rt1);
SELECT ALL * FROM v0, rt1 WHERE (CAST((NOT (v0.c0)) AS BLOB));
SELECT * FROM vt0 NOT INDEXED WHERE ((((((vt0.c0))==((vt0.c0)))) BETWEEN (((vt0.c0) NOT BETWEEN ('-1110811138') AND (vt0.c0))) AND (((vt0.c0)<>(vt0.c0))))) ORDER BY ((0.9901144977535417 COLLATE NOCASE) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))=((vt0.c0)))) BETWEEN (((vt0.c0) NOT BETWEEN ('-1110811138') AND (vt0.c0))) AND (((vt0.c0)!=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((0.9901144977535417 COLLATE NOCASE) ISNULL) ASC);
SELECT * FROM vt0 NOT INDEXED WHERE ((((((vt0.c0))==((vt0.c0)))) BETWEEN (((vt0.c0) NOT BETWEEN ('-1110811138') AND (vt0.c0))) AND (((vt0.c0)<>(vt0.c0))))) ORDER BY ((0.9901144977535417 COLLATE NOCASE) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))=((vt0.c0)))) BETWEEN (((vt0.c0) NOT BETWEEN ('-1110811138') AND (vt0.c0))) AND (((vt0.c0)!=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((0.9901144977535417 COLLATE NOCASE) ISNULL) ASC);
SELECT * FROM vt0 NOT INDEXED WHERE ((((((vt0.c0))==((vt0.c0)))) BETWEEN (((vt0.c0) NOT BETWEEN ('-1110811138') AND (vt0.c0))) AND (((vt0.c0)<>(vt0.c0))))) ORDER BY ((0.9901144977535417 COLLATE NOCASE) ISNULL) ASC;
SELECT ALL * FROM v0 WHERE ('J ') ORDER BY '1941530005' ASC, ((((((((CAST(v0.c2 AS REAL))AND(((v0.c1) NOTNULL))))OR(((v0.c2)+('')))))AND(CASE v0.c1  WHEN v0.c1 THEN NULL ELSE v0.c2 END)))AND(((v0.c1) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('J ') IS TRUE)  as count FROM v0 ORDER BY '1941530005' ASC, ((((((((CAST(v0.c2 AS REAL))AND(((v0.c1) NOTNULL))))OR(((v0.c2)+('')))))AND(CASE v0.c1  WHEN v0.c1 THEN NULL ELSE v0.c2 END)))AND(((v0.c1) IS FALSE)))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ('J ') ORDER BY '1941530005' ASC, ((((((((CAST(v0.c2 AS REAL))AND(((v0.c1) NOTNULL))))OR(((v0.c2)+('')))))AND(CASE v0.c1  WHEN v0.c1 THEN NULL ELSE v0.c2 END)))AND(((v0.c1) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('J ') IS TRUE)  as count FROM v0 ORDER BY '1941530005' ASC, ((((((((CAST(v0.c2 AS REAL))AND(((v0.c1) NOTNULL))))OR(((v0.c2)+('')))))AND(CASE v0.c1  WHEN v0.c1 THEN NULL ELSE v0.c2 END)))AND(((v0.c1) IS FALSE)))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ('J ') ORDER BY '1941530005' ASC, ((((((((CAST(v0.c2 AS REAL))AND(((v0.c1) NOTNULL))))OR(((v0.c2)+('')))))AND(CASE v0.c1  WHEN v0.c1 THEN NULL ELSE v0.c2 END)))AND(((v0.c1) IS FALSE)))  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt0 WHERE (((rt1.c1) NOTNULL) COLLATE RTRIM) ORDER BY CAST(((vt0.c0)!=(rt1.c5)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c1) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST(((vt0.c0)!=(rt1.c5)) AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((rt1.c1) NOTNULL) COLLATE RTRIM) ORDER BY CAST(((vt0.c0)!=(rt1.c5)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c1) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST(((vt0.c0)!=(rt1.c5)) AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((rt1.c1) NOTNULL) COLLATE RTRIM) ORDER BY CAST(((vt0.c0)!=(rt1.c5)) AS NUMERIC)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (HEX(DISTINCT ''));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT '')) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (HEX(DISTINCT ''));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT '')) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (HEX(DISTINCT ''));
SELECT ALL COUNT(*) FROM vt0, rt1, v0 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM vt0, rt1, v0);
SELECT ALL COUNT(*) FROM vt0, rt1, v0 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM vt0, rt1, v0);
SELECT ALL COUNT(*) FROM vt0, rt1, v0 WHERE (TOTAL_CHANGES());
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((('1906772208')AND((((vt0.c0))<>((rt1.c4)))))) ORDER BY 0.06844921405636073;
SELECT SUM(count) FROM (SELECT (((('1906772208')AND((((vt0.c0))!=((rt1.c4)))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY 0.06844921405636073);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((('1906772208')AND((((vt0.c0))<>((rt1.c4)))))) ORDER BY 0.06844921405636073;
SELECT SUM(count) FROM (SELECT (((('1906772208')AND((((vt0.c0))!=((rt1.c4)))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY 0.06844921405636073);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((('1906772208')AND((((vt0.c0))<>((rt1.c4)))))) ORDER BY 0.06844921405636073;
SELECT ALL * FROM vt0 WHERE (((0.8963171205042059)||((- (vt0.c0))))) ORDER BY (0Xffffffffc32eebc1 IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.8963171205042059)||((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (0xffffffffc32eebc1 IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((0.8963171205042059)||((- (vt0.c0))))) ORDER BY (0Xffffffffc32eebc1 IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.8963171205042059)||((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (0xffffffffc32eebc1 IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((0.8963171205042059)||((- (vt0.c0))))) ORDER BY (0Xffffffffc32eebc1 IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)IS NOT(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)IS NOT(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)IS NOT(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)IS NOT(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)IS NOT(vt0.c0)) COLLATE RTRIM);
SELECT * FROM v0, rt1, vt0 WHERE (CAST(CASE WHEN v0.c1 THEN rt1.c2 END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN v0.c1 THEN rt1.c2 END AS BLOB)) IS TRUE)  as count FROM v0, rt1, vt0);
SELECT * FROM v0, rt1, vt0 WHERE (CAST(CASE WHEN v0.c1 THEN rt1.c2 END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN v0.c1 THEN rt1.c2 END AS BLOB)) IS TRUE)  as count FROM v0, rt1, vt0);
SELECT * FROM v0, rt1, vt0 WHERE (CAST(CASE WHEN v0.c1 THEN rt1.c2 END AS BLOB));
SELECT * FROM vt0 NATURAL JOIN rt1 WHERE ((((rt1.c2)) NOT BETWEEN ((CAST(rt1.c3 AS BLOB))) AND ((x'')))) ORDER BY ((CAST(-1338015137 AS NUMERIC)) NOT BETWEEN ((+ (rt1.c2))) AND (CASE NULL  WHEN rt1.c5 THEN rt1.c0 WHEN rt1.c5 THEN rt1.c5 WHEN vt0.c0 THEN rt1.c5 END)) DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) NOT BETWEEN ((CAST(rt1.c3 AS BLOB))) AND ((x'')))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1 ORDER BY ((CAST(-1338015137 AS NUMERIC)) NOT BETWEEN ((+ (rt1.c2))) AND (CASE NULL  WHEN rt1.c5 THEN rt1.c0 WHEN rt1.c5 THEN rt1.c5 WHEN vt0.c0 THEN rt1.c5 END)) DESC);
SELECT * FROM vt0 NATURAL JOIN rt1 WHERE ((((rt1.c2)) NOT BETWEEN ((CAST(rt1.c3 AS BLOB))) AND ((x'')))) ORDER BY ((CAST(-1338015137 AS NUMERIC)) NOT BETWEEN ((+ (rt1.c2))) AND (CASE NULL  WHEN rt1.c5 THEN rt1.c0 WHEN rt1.c5 THEN rt1.c5 WHEN vt0.c0 THEN rt1.c5 END)) DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) NOT BETWEEN ((CAST(rt1.c3 AS BLOB))) AND ((x'')))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1 ORDER BY ((CAST(-1338015137 AS NUMERIC)) NOT BETWEEN ((+ (rt1.c2))) AND (CASE NULL  WHEN rt1.c5 THEN rt1.c0 WHEN rt1.c5 THEN rt1.c5 WHEN vt0.c0 THEN rt1.c5 END)) DESC);
SELECT * FROM vt0 NATURAL JOIN rt1 WHERE ((((rt1.c2)) NOT BETWEEN ((CAST(rt1.c3 AS BLOB))) AND ((x'')))) ORDER BY ((CAST(-1338015137 AS NUMERIC)) NOT BETWEEN ((+ (rt1.c2))) AND (CASE NULL  WHEN rt1.c5 THEN rt1.c0 WHEN rt1.c5 THEN rt1.c5 WHEN vt0.c0 THEN rt1.c5 END)) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((NULL) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((NULL) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((NULL) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((NULL) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((NULL) NOT NULL));
SELECT * FROM v0, vt0, rt1 WHERE (((((((((((((v0.c1)AND(rt1.c1)))AND(rt1.c2)))AND(v0.c1)))AND(v0.c2)))AND(v0.c1 COLLATE NOCASE)))AND(((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c3))))) ORDER BY CASE v0.c1 COLLATE BINARY  WHEN v0.c2 COLLATE BINARY THEN v0.c1 COLLATE NOCASE WHEN rt1.c2 THEN ((((v0.c0)AND(rt1.c0)))OR(rt1.c3)) WHEN ((((((((v0.c2)AND(rt1.c4)))OR(rt1.c4)))AND(v0.c1)))AND(rt1.c1)) THEN (~ (vt0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((v0.c1)AND(rt1.c1)))AND(rt1.c2)))AND(v0.c1)))AND(v0.c2)))AND(v0.c1 COLLATE NOCASE)))AND(((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c3))))) IS TRUE)  as count FROM v0, vt0, rt1 ORDER BY CASE v0.c1 COLLATE BINARY  WHEN v0.c2 COLLATE BINARY THEN v0.c1 COLLATE NOCASE WHEN rt1.c2 THEN ((((v0.c0)AND(rt1.c0)))OR(rt1.c3)) WHEN ((((((((v0.c2)AND(rt1.c4)))OR(rt1.c4)))AND(v0.c1)))AND(rt1.c1)) THEN (~ (vt0.c0)) END DESC  NULLS FIRST);
SELECT * FROM v0, vt0, rt1 WHERE (((((((((((((v0.c1)AND(rt1.c1)))AND(rt1.c2)))AND(v0.c1)))AND(v0.c2)))AND(v0.c1 COLLATE NOCASE)))AND(((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c3))))) ORDER BY CASE v0.c1 COLLATE BINARY  WHEN v0.c2 COLLATE BINARY THEN v0.c1 COLLATE NOCASE WHEN rt1.c2 THEN ((((v0.c0)AND(rt1.c0)))OR(rt1.c3)) WHEN ((((((((v0.c2)AND(rt1.c4)))OR(rt1.c4)))AND(v0.c1)))AND(rt1.c1)) THEN (~ (vt0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((v0.c1)AND(rt1.c1)))AND(rt1.c2)))AND(v0.c1)))AND(v0.c2)))AND(v0.c1 COLLATE NOCASE)))AND(((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c3))))) IS TRUE)  as count FROM v0, vt0, rt1 ORDER BY CASE v0.c1 COLLATE BINARY  WHEN v0.c2 COLLATE BINARY THEN v0.c1 COLLATE NOCASE WHEN rt1.c2 THEN ((((v0.c0)AND(rt1.c0)))OR(rt1.c3)) WHEN ((((((((v0.c2)AND(rt1.c4)))OR(rt1.c4)))AND(v0.c1)))AND(rt1.c1)) THEN (~ (vt0.c0)) END DESC  NULLS FIRST);
SELECT * FROM v0, vt0, rt1 WHERE (((((((((((((v0.c1)AND(rt1.c1)))AND(rt1.c2)))AND(v0.c1)))AND(v0.c2)))AND(v0.c1 COLLATE NOCASE)))AND(((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c3))))) ORDER BY CASE v0.c1 COLLATE BINARY  WHEN v0.c2 COLLATE BINARY THEN v0.c1 COLLATE NOCASE WHEN rt1.c2 THEN ((((v0.c0)AND(rt1.c0)))OR(rt1.c3)) WHEN ((((((((v0.c2)AND(rt1.c4)))OR(rt1.c4)))AND(v0.c1)))AND(rt1.c1)) THEN (~ (vt0.c0)) END DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((ROUND(v0.c0, v0.c0))>((v0.c1 IN (v0.c2))))) ORDER BY CAST((~ (2044584332)) AS TEXT), ((((v0.c1 COLLATE RTRIM)AND((~ (v0.c2)))))OR(((v0.c0)||(v0.c2)))) DESC  NULLS FIRST, 0.3268159267232865 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((ROUND(v0.c0, v0.c0))>((v0.c1 IN (v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY CAST((~ (2044584332)) AS TEXT), ((((v0.c1 COLLATE RTRIM)AND((~ (v0.c2)))))OR(((v0.c0)||(v0.c2)))) DESC  NULLS FIRST, 0.3268159267232865 DESC);
SELECT COUNT(*) FROM v0 WHERE (((ROUND(v0.c0, v0.c0))>((v0.c1 IN (v0.c2))))) ORDER BY CAST((~ (2044584332)) AS TEXT), ((((v0.c1 COLLATE RTRIM)AND((~ (v0.c2)))))OR(((v0.c0)||(v0.c2)))) DESC  NULLS FIRST, 0.3268159267232865 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((ROUND(v0.c0, v0.c0))>((v0.c1 IN (v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY CAST((~ (2044584332)) AS TEXT), ((((v0.c1 COLLATE RTRIM)AND((~ (v0.c2)))))OR(((v0.c0)||(v0.c2)))) DESC  NULLS FIRST, 0.3268159267232865 DESC);
SELECT COUNT(*) FROM v0 WHERE (((ROUND(v0.c0, v0.c0))>((v0.c1 IN (v0.c2))))) ORDER BY CAST((~ (2044584332)) AS TEXT), ((((v0.c1 COLLATE RTRIM)AND((~ (v0.c2)))))OR(((v0.c0)||(v0.c2)))) DESC  NULLS FIRST, 0.3268159267232865 DESC;
SELECT * FROM v0 WHERE ((((0.3319117968951243, v0.c0, v0.c0))=((v0.c1, v0.c2, NULL))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((0.3319117968951243, v0.c0, v0.c0))==((v0.c1, v0.c2, NULL))) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((0.3319117968951243, v0.c0, v0.c0))=((v0.c1, v0.c2, NULL))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((0.3319117968951243, v0.c0, v0.c0))==((v0.c1, v0.c2, NULL))) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((0.3319117968951243, v0.c0, v0.c0))=((v0.c1, v0.c2, NULL))) COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN '0.9490169184000555' THEN vt0.c0 ELSE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN '0.9490169184000555' THEN vt0.c0 ELSE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN '0.9490169184000555' THEN vt0.c0 ELSE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN '0.9490169184000555' THEN vt0.c0 ELSE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN '0.9490169184000555' THEN vt0.c0 ELSE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END);
SELECT * FROM v0, rt1, vt0 WHERE (CAST(((((rt1.c3)OR(rt1.c4)))OR(0.8331841189803657)) AS BLOB)) ORDER BY (- (((v0.c1)>(v0.c1)))) DESC  NULLS LAST, ((CAST(v0.c0 AS INTEGER))-(((((vt0.c0)OR(rt1.c4)))AND(v0.c2)))) DESC, CAST((- ('987377245')) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt1.c3)OR(rt1.c4)))OR(0.8331841189803657)) AS BLOB)) IS TRUE)  as count FROM v0, rt1, vt0 ORDER BY (- (((v0.c1)>(v0.c1)))) DESC  NULLS LAST, ((CAST(v0.c0 AS INTEGER))-(((((vt0.c0)OR(rt1.c4)))AND(v0.c2)))) DESC, CAST((- ('987377245')) AS NUMERIC)  NULLS LAST);
SELECT * FROM v0, rt1, vt0 WHERE (CAST(((((rt1.c3)OR(rt1.c4)))OR(0.8331841189803657)) AS BLOB)) ORDER BY (- (((v0.c1)>(v0.c1)))) DESC  NULLS LAST, ((CAST(v0.c0 AS INTEGER))-(((((vt0.c0)OR(rt1.c4)))AND(v0.c2)))) DESC, CAST((- ('987377245')) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt1.c3)OR(rt1.c4)))OR(0.8331841189803657)) AS BLOB)) IS TRUE)  as count FROM v0, rt1, vt0 ORDER BY (- (((v0.c1)>(v0.c1)))) DESC  NULLS LAST, ((CAST(v0.c0 AS INTEGER))-(((((vt0.c0)OR(rt1.c4)))AND(v0.c2)))) DESC, CAST((- ('987377245')) AS NUMERIC)  NULLS LAST);
SELECT * FROM v0, rt1, vt0 WHERE (CAST(((((rt1.c3)OR(rt1.c4)))OR(0.8331841189803657)) AS BLOB)) ORDER BY (- (((v0.c1)>(v0.c1)))) DESC  NULLS LAST, ((CAST(v0.c0 AS INTEGER))-(((((vt0.c0)OR(rt1.c4)))AND(v0.c2)))) DESC, CAST((- ('987377245')) AS NUMERIC)  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt1, vt0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM v0, rt1, vt0);
SELECT ALL COUNT(*) FROM v0, rt1, vt0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM v0, rt1, vt0);
SELECT ALL COUNT(*) FROM v0, rt1, vt0 WHERE (rt1.c0);
SELECT COUNT(*) FROM rt1 WHERE (CASE ((rt1.c1)%(rt1.c3))  WHEN ((rt1.c1)>=(rt1.c2)) THEN UNLIKELY(NULL) ELSE (((rt1.c3)) BETWEEN ((rt1.c2)) AND ((rt1.c5))) END) ORDER BY CAST(NULL COLLATE RTRIM AS TEXT) DESC, '-1989671212'  NULLS FIRST, (((((((((((((((((('-524559594')<<(rt1.c3)))OR((rt1.c1 IN ()))))OR(rt1.c3 COLLATE RTRIM)))AND(((rt1.c4) NOTNULL))))OR((+ (rt1.c4)))))OR((((NULL, rt1.c0, rt1.c3)) NOT BETWEEN (('1006600372', rt1.c1, rt1.c5)) AND ((rt1.c0, rt1.c1, rt1.c1))))))AND((~ (rt1.c3)))))OR(((((rt1.c4)AND(rt1.c0)))OR(rt1.c5)))))OR(((((rt1.c4)AND(rt1.c4)))OR(rt1.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c1)%(rt1.c3))  WHEN ((rt1.c1)>=(rt1.c2)) THEN UNLIKELY(NULL) ELSE (((rt1.c3)) BETWEEN ((rt1.c2)) AND ((rt1.c5))) END) IS TRUE)  as count FROM rt1 ORDER BY CAST(NULL COLLATE RTRIM AS TEXT) DESC, '-1989671212'  NULLS FIRST, (((((((((((((((((('-524559594')<<(rt1.c3)))OR((rt1.c1 IN ()))))OR(rt1.c3 COLLATE RTRIM)))AND(((rt1.c4) NOTNULL))))OR((+ (rt1.c4)))))OR((((NULL, rt1.c0, rt1.c3)) NOT BETWEEN (('1006600372', rt1.c1, rt1.c5)) AND ((rt1.c0, rt1.c1, rt1.c1))))))AND((~ (rt1.c3)))))OR(((((rt1.c4)AND(rt1.c0)))OR(rt1.c5)))))OR(((((rt1.c4)AND(rt1.c4)))OR(rt1.c2)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (CASE ((rt1.c1)%(rt1.c3))  WHEN ((rt1.c1)>=(rt1.c2)) THEN UNLIKELY(NULL) ELSE (((rt1.c3)) BETWEEN ((rt1.c2)) AND ((rt1.c5))) END) ORDER BY CAST(NULL COLLATE RTRIM AS TEXT) DESC, '-1989671212'  NULLS FIRST, (((((((((((((((((('-524559594')<<(rt1.c3)))OR((rt1.c1 IN ()))))OR(rt1.c3 COLLATE RTRIM)))AND(((rt1.c4) NOTNULL))))OR((+ (rt1.c4)))))OR((((NULL, rt1.c0, rt1.c3)) NOT BETWEEN (('1006600372', rt1.c1, rt1.c5)) AND ((rt1.c0, rt1.c1, rt1.c1))))))AND((~ (rt1.c3)))))OR(((((rt1.c4)AND(rt1.c0)))OR(rt1.c5)))))OR(((((rt1.c4)AND(rt1.c4)))OR(rt1.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c1)%(rt1.c3))  WHEN ((rt1.c1)>=(rt1.c2)) THEN UNLIKELY(NULL) ELSE (((rt1.c3)) BETWEEN ((rt1.c2)) AND ((rt1.c5))) END) IS TRUE)  as count FROM rt1 ORDER BY CAST(NULL COLLATE RTRIM AS TEXT) DESC, '-1989671212'  NULLS FIRST, (((((((((((((((((('-524559594')<<(rt1.c3)))OR((rt1.c1 IN ()))))OR(rt1.c3 COLLATE RTRIM)))AND(((rt1.c4) NOTNULL))))OR((+ (rt1.c4)))))OR((((NULL, rt1.c0, rt1.c3)) NOT BETWEEN (('1006600372', rt1.c1, rt1.c5)) AND ((rt1.c0, rt1.c1, rt1.c1))))))AND((~ (rt1.c3)))))OR(((((rt1.c4)AND(rt1.c0)))OR(rt1.c5)))))OR(((((rt1.c4)AND(rt1.c4)))OR(rt1.c2)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (CASE ((rt1.c1)%(rt1.c3))  WHEN ((rt1.c1)>=(rt1.c2)) THEN UNLIKELY(NULL) ELSE (((rt1.c3)) BETWEEN ((rt1.c2)) AND ((rt1.c5))) END) ORDER BY CAST(NULL COLLATE RTRIM AS TEXT) DESC, '-1989671212'  NULLS FIRST, (((((((((((((((((('-524559594')<<(rt1.c3)))OR((rt1.c1 IN ()))))OR(rt1.c3 COLLATE RTRIM)))AND(((rt1.c4) NOTNULL))))OR((+ (rt1.c4)))))OR((((NULL, rt1.c0, rt1.c3)) NOT BETWEEN (('1006600372', rt1.c1, rt1.c5)) AND ((rt1.c0, rt1.c1, rt1.c1))))))AND((~ (rt1.c3)))))OR(((((rt1.c4)AND(rt1.c0)))OR(rt1.c5)))))OR(((((rt1.c4)AND(rt1.c4)))OR(rt1.c2)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON CASE (NOT (rt1.c1))  WHEN CAST(',E,G' AS BLOB) THEN (v0.c0 IN (0.2079972632127517)) ELSE ((rt1.c1) NOT BETWEEN (x'') AND (rt1.c2)) END RIGHT OUTER JOIN v0 ON v0.c0 COLLATE BINARY WHERE (x'') ORDER BY (- (CHANGES())) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON CASE (NOT (rt1.c1))  WHEN CAST(',E,G' AS BLOB) THEN (v0.c0 IN (0.2079972632127517)) ELSE ((rt1.c1) NOT BETWEEN (x'') AND (rt1.c2)) END RIGHT OUTER JOIN v0 ON v0.c0 COLLATE BINARY ORDER BY (- (CHANGES())) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON CASE (NOT (rt1.c1))  WHEN CAST(',E,G' AS BLOB) THEN (v0.c0 IN (0.2079972632127517)) ELSE ((rt1.c1) NOT BETWEEN (x'') AND (rt1.c2)) END RIGHT OUTER JOIN v0 ON v0.c0 COLLATE BINARY WHERE (x'') ORDER BY (- (CHANGES())) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON CASE (NOT (rt1.c1))  WHEN CAST(',E,G' AS BLOB) THEN (v0.c0 IN (0.2079972632127517)) ELSE ((rt1.c1) NOT BETWEEN (x'') AND (rt1.c2)) END RIGHT OUTER JOIN v0 ON v0.c0 COLLATE BINARY ORDER BY (- (CHANGES())) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (CAST(ABS(rt1.c3) AS INTEGER)) ORDER BY ((((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)))!=(json_array_length(rt1.c2, rt1.c1))) ASC  NULLS LAST, ((((((((((rt1.c3) ISNULL))AND((rt1.c5 IN ()))))AND('M|CUn2\rD+')))OR(UPPER(rt1.c2))))OR((rt1.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((CAST(ABS(rt1.c3) AS INTEGER)) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)))<>(json_array_length(rt1.c2, rt1.c1))) ASC  NULLS LAST, ((((((((((rt1.c3) ISNULL))AND((rt1.c5 IN ()))))AND('M|CUn2\rD+')))OR(UPPER(rt1.c2))))OR((rt1.c1 IN ()))));
SELECT ALL * FROM rt1 WHERE (CAST(ABS(rt1.c3) AS INTEGER)) ORDER BY ((((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)))!=(json_array_length(rt1.c2, rt1.c1))) ASC  NULLS LAST, ((((((((((rt1.c3) ISNULL))AND((rt1.c5 IN ()))))AND('M|CUn2\rD+')))OR(UPPER(rt1.c2))))OR((rt1.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((CAST(ABS(rt1.c3) AS INTEGER)) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)))<>(json_array_length(rt1.c2, rt1.c1))) ASC  NULLS LAST, ((((((((((rt1.c3) ISNULL))AND((rt1.c5 IN ()))))AND('M|CUn2\rD+')))OR(UPPER(rt1.c2))))OR((rt1.c1 IN ()))));
SELECT COUNT(*) FROM vt0, rt1 WHERE (CAST(((rt1.c1) BETWEEN (rt1.c5) AND (rt1.c4)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c1) BETWEEN (rt1.c5) AND (rt1.c4)) AS REAL)) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CAST(((rt1.c1) BETWEEN (rt1.c5) AND (rt1.c4)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c1) BETWEEN (rt1.c5) AND (rt1.c4)) AS REAL)) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CAST(((rt1.c1) BETWEEN (rt1.c5) AND (rt1.c4)) AS REAL));
SELECT ALL * FROM rt1 WHERE (CAST(((0xffffffff90c9b543) NOT BETWEEN (rt1.c4) AND (rt1.c4)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((0Xffffffff90c9b543) NOT BETWEEN (rt1.c4) AND (rt1.c4)) AS REAL)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(((0xffffffff90c9b543) NOT BETWEEN (rt1.c4) AND (rt1.c4)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((0Xffffffff90c9b543) NOT BETWEEN (rt1.c4) AND (rt1.c4)) AS REAL)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(((0xffffffff90c9b543) NOT BETWEEN (rt1.c4) AND (rt1.c4)) AS REAL));
SELECT * FROM rt1 RIGHT OUTER JOIN vt0 ON CAST((((vt0.c0, rt1.c0, rt1.c5))<=((vt0.c0, v0.c1, v0.c1))) AS INTEGER) LEFT OUTER JOIN v0 ON (- (rt1.c3)) WHERE (CAST(CASE rt1.c4  WHEN v0.c0 THEN v0.c1 END AS TEXT)) ORDER BY (+ (v0.c0 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt1.c4  WHEN v0.c0 THEN v0.c1 END AS TEXT)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON CAST((((vt0.c0, rt1.c0, rt1.c5))<=((vt0.c0, v0.c1, v0.c1))) AS INTEGER) LEFT OUTER JOIN v0 ON (- (rt1.c3)) ORDER BY (+ (v0.c0 COLLATE BINARY)) ASC  NULLS FIRST);
SELECT * FROM rt1 RIGHT OUTER JOIN vt0 ON CAST((((vt0.c0, rt1.c0, rt1.c5))<=((vt0.c0, v0.c1, v0.c1))) AS INTEGER) LEFT OUTER JOIN v0 ON (- (rt1.c3)) WHERE (CAST(CASE rt1.c4  WHEN v0.c0 THEN v0.c1 END AS TEXT)) ORDER BY (+ (v0.c0 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt1.c4  WHEN v0.c0 THEN v0.c1 END AS TEXT)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON CAST((((vt0.c0, rt1.c0, rt1.c5))<=((vt0.c0, v0.c1, v0.c1))) AS INTEGER) LEFT OUTER JOIN v0 ON (- (rt1.c3)) ORDER BY (+ (v0.c0 COLLATE BINARY)) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 WHERE (ABS((((rt1.c2))<>((rt1.c4))))) ORDER BY (((rt1.c3)||(rt1.c1)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS((((rt1.c2))<>((rt1.c4))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((rt1.c3)||(rt1.c1)) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM rt1, vt0 WHERE (ABS((((rt1.c2))<>((rt1.c4))))) ORDER BY (((rt1.c3)||(rt1.c1)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS((((rt1.c2))<>((rt1.c4))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((rt1.c3)||(rt1.c1)) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM rt1, vt0 WHERE (ABS((((rt1.c2))<>((rt1.c4))))) ORDER BY (((rt1.c3)||(rt1.c1)) IN ()) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0, rt1 WHERE (((~ (v0.c2)) IN (v0.c0, TRIM(DISTINCT 4.8529558E7), rt1.c5 COLLATE NOCASE))) ORDER BY CAST(((rt1.c4)<<(rt1.c0)) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((~ (v0.c2)) IN (v0.c0, TRIM(DISTINCT 4.8529558E7), rt1.c5 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, v0, rt1 ORDER BY CAST(((rt1.c4)<<(rt1.c0)) AS TEXT) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0, rt1 WHERE (((~ (v0.c2)) IN (v0.c0, TRIM(DISTINCT 4.8529558E7), rt1.c5 COLLATE NOCASE))) ORDER BY CAST(((rt1.c4)<<(rt1.c0)) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((~ (v0.c2)) IN (v0.c0, TRIM(DISTINCT 4.8529558E7), rt1.c5 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, v0, rt1 ORDER BY CAST(((rt1.c4)<<(rt1.c0)) AS TEXT) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0, rt1 WHERE (((~ (v0.c2)) IN (v0.c0, TRIM(DISTINCT 4.8529558E7), rt1.c5 COLLATE NOCASE))) ORDER BY CAST(((rt1.c4)<<(rt1.c0)) AS TEXT) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (((CAST(x'888ac4ef' AS INTEGER))IS NOT(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY (((((vt0.c0, 0.09451716461609938, vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))>=(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(x'888ac4ef' AS INTEGER))IS NOT(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, 0.09451716461609938, vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))>=(vt0.c0)) ASC);
SELECT * FROM vt0 WHERE (((CAST(x'888ac4ef' AS INTEGER))IS NOT(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY (((((vt0.c0, 0.09451716461609938, vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))>=(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(x'888ac4ef' AS INTEGER))IS NOT(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, 0.09451716461609938, vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))>=(vt0.c0)) ASC);
SELECT * FROM vt0 WHERE (((CAST(x'888ac4ef' AS INTEGER))IS NOT(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY (((((vt0.c0, 0.09451716461609938, vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))>=(vt0.c0)) ASC;
SELECT COUNT(*) FROM v0 NATURAL JOIN rt1 WHERE (((((v0.c2) NOTNULL)) NOT BETWEEN ((+ (rt1.c2))) AND (CASE WHEN rt1.c5 THEN rt1.c1 ELSE v0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((v0.c2) NOTNULL)) NOT BETWEEN ((+ (rt1.c2))) AND (CASE WHEN rt1.c5 THEN rt1.c1 ELSE v0.c2 END))) IS TRUE)  as count FROM v0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM v0 NATURAL JOIN rt1 WHERE (((((v0.c2) NOTNULL)) NOT BETWEEN ((+ (rt1.c2))) AND (CASE WHEN rt1.c5 THEN rt1.c1 ELSE v0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((v0.c2) NOTNULL)) NOT BETWEEN ((+ (rt1.c2))) AND (CASE WHEN rt1.c5 THEN rt1.c1 ELSE v0.c2 END))) IS TRUE)  as count FROM v0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM v0 NATURAL JOIN rt1 WHERE (((((v0.c2) NOTNULL)) NOT BETWEEN ((+ (rt1.c2))) AND (CASE WHEN rt1.c5 THEN rt1.c1 ELSE v0.c2 END)));
SELECT ALL COUNT(*) FROM v0, rt1 WHERE ((((((('2082606460')IS NOT(rt1.c0)))AND((~ (rt1.c5)))))AND(NULLIF(DISTINCT rt1.c5, rt1.c0)))) ORDER BY ((((NULL)>(v0.c0)))<<((~ (rt1.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((('2082606460')IS NOT(rt1.c0)))AND((~ (rt1.c5)))))AND(NULLIF(DISTINCT rt1.c5, rt1.c0)))) IS TRUE)  as count FROM v0, rt1 ORDER BY ((((NULL)>(v0.c0)))<<((~ (rt1.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE ((((((('2082606460')IS NOT(rt1.c0)))AND((~ (rt1.c5)))))AND(NULLIF(DISTINCT rt1.c5, rt1.c0)))) ORDER BY ((((NULL)>(v0.c0)))<<((~ (rt1.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((('2082606460')IS NOT(rt1.c0)))AND((~ (rt1.c5)))))AND(NULLIF(DISTINCT rt1.c5, rt1.c0)))) IS TRUE)  as count FROM v0, rt1 ORDER BY ((((NULL)>(v0.c0)))<<((~ (rt1.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE ((((((('2082606460')IS NOT(rt1.c0)))AND((~ (rt1.c5)))))AND(NULLIF(DISTINCT rt1.c5, rt1.c0)))) ORDER BY ((((NULL)>(v0.c0)))<<((~ (rt1.c2)))) ASC  NULLS LAST;
SELECT ALL * FROM vt0, rt1 WHERE (CAST(CAST(rt1.c0 AS REAL) AS NUMERIC)) ORDER BY (((x'76e1' IN ())) IS FALSE);
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c0 AS REAL) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((x'76e1' IN ())) IS FALSE));
SELECT ALL * FROM vt0, rt1 WHERE (CAST(CAST(rt1.c0 AS REAL) AS NUMERIC)) ORDER BY (((x'76e1' IN ())) IS FALSE);
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c0 AS REAL) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((x'76e1' IN ())) IS FALSE));
SELECT ALL * FROM vt0, rt1 WHERE (CAST(CAST(rt1.c0 AS REAL) AS NUMERIC)) ORDER BY (((x'76e1' IN ())) IS FALSE);
SELECT ALL COUNT(*) FROM rt1, vt0, v0 WHERE ((CASE rt1.c0  WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c5 THEN v0.c0 WHEN rt1.c3 THEN v0.c0 ELSE v0.c1 END IN ())) ORDER BY rt1.c5 COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE rt1.c0  WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c5 THEN v0.c0 WHEN rt1.c3 THEN v0.c0 ELSE v0.c1 END IN ())) IS TRUE)  as count FROM rt1, vt0, v0 ORDER BY rt1.c5 COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0, v0 WHERE ((CASE rt1.c0  WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c5 THEN v0.c0 WHEN rt1.c3 THEN v0.c0 ELSE v0.c1 END IN ())) ORDER BY rt1.c5 COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE rt1.c0  WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c5 THEN v0.c0 WHEN rt1.c3 THEN v0.c0 ELSE v0.c1 END IN ())) IS TRUE)  as count FROM rt1, vt0, v0 ORDER BY rt1.c5 COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0, v0 WHERE ((CASE rt1.c0  WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c5 THEN v0.c0 WHEN rt1.c3 THEN v0.c0 ELSE v0.c1 END IN ())) ORDER BY rt1.c5 COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE ((+ (((rt1.c4)+(rt1.c1))))) ORDER BY rt1.c4 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c4)+(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c4 ASC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((+ (((rt1.c4)+(rt1.c1))))) ORDER BY rt1.c4 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c4)+(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c4 ASC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((+ (((rt1.c4)+(rt1.c1))))) ORDER BY rt1.c4 ASC  NULLS LAST;
SELECT * FROM v0, vt0 WHERE (((0X57730074) NOT BETWEEN (((v0.c2) ISNULL)) AND (((vt0.c0) BETWEEN (v0.c2) AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT ((((0x57730074) NOT BETWEEN (((v0.c2) ISNULL)) AND (((vt0.c0) BETWEEN (v0.c2) AND (v0.c1))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((0X57730074) NOT BETWEEN (((v0.c2) ISNULL)) AND (((vt0.c0) BETWEEN (v0.c2) AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT ((((0x57730074) NOT BETWEEN (((v0.c2) ISNULL)) AND (((vt0.c0) BETWEEN (v0.c2) AND (v0.c1))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((0X57730074) NOT BETWEEN (((v0.c2) ISNULL)) AND (((vt0.c0) BETWEEN (v0.c2) AND (v0.c1)))));
SELECT * FROM vt0 CROSS JOIN v0 ON v0.c1 WHERE (vt0.c0) ORDER BY ((((((((v0.c1)AND(vt0.c0)))OR(vt0.c0)))AND((((NULL))>((v0.c0))))))OR((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON v0.c1 ORDER BY ((((((((v0.c1)AND(vt0.c0)))OR(vt0.c0)))AND((((NULL))>((v0.c0))))))OR((v0.c0 IN ()))));
SELECT * FROM vt0 CROSS JOIN v0 ON v0.c1 WHERE (vt0.c0) ORDER BY ((((((((v0.c1)AND(vt0.c0)))OR(vt0.c0)))AND((((NULL))>((v0.c0))))))OR((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON v0.c1 ORDER BY ((((((((v0.c1)AND(vt0.c0)))OR(vt0.c0)))AND((((NULL))>((v0.c0))))))OR((v0.c0 IN ()))));
SELECT * FROM vt0 CROSS JOIN v0 ON v0.c1 WHERE (vt0.c0) ORDER BY ((((((((v0.c1)AND(vt0.c0)))OR(vt0.c0)))AND((((NULL))>((v0.c0))))))OR((v0.c0 IN ())));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON ((rt1.c0 COLLATE NOCASE) BETWEEN ('') AND (v0.c0 COLLATE BINARY)) INNER JOIN v0 ON CAST(v0.c1 AS TEXT) WHERE ((((rt1.c5) BETWEEN (rt1.c0) AND (rt1.c5)) IN (ABS(0.38359820962648805))));
SELECT SUM(count) FROM (SELECT (((((rt1.c5) BETWEEN (rt1.c0) AND (rt1.c5)) IN (ABS(0.38359820962648805)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON ((rt1.c0 COLLATE NOCASE) BETWEEN ('') AND (v0.c0 COLLATE BINARY)) INNER JOIN v0 ON CAST(v0.c1 AS TEXT));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON ((rt1.c0 COLLATE NOCASE) BETWEEN ('') AND (v0.c0 COLLATE BINARY)) INNER JOIN v0 ON CAST(v0.c1 AS TEXT) WHERE ((((rt1.c5) BETWEEN (rt1.c0) AND (rt1.c5)) IN (ABS(0.38359820962648805))));
SELECT SUM(count) FROM (SELECT (((((rt1.c5) BETWEEN (rt1.c0) AND (rt1.c5)) IN (ABS(0.38359820962648805)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON ((rt1.c0 COLLATE NOCASE) BETWEEN ('') AND (v0.c0 COLLATE BINARY)) INNER JOIN v0 ON CAST(v0.c1 AS TEXT));
SELECT COUNT(*) FROM vt0, rt1, v0 WHERE (((vt0.c0) NOT BETWEEN ((((v0.c0, x'', rt1.c1))<((v0.c0, x'', rt1.c3)))) AND ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN ((((v0.c0, x'', rt1.c1))<((v0.c0, x'', rt1.c3)))) AND ((v0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt1, v0);
SELECT COUNT(*) FROM vt0, rt1, v0 WHERE (((vt0.c0) NOT BETWEEN ((((v0.c0, x'', rt1.c1))<((v0.c0, x'', rt1.c3)))) AND ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN ((((v0.c0, x'', rt1.c1))<((v0.c0, x'', rt1.c3)))) AND ((v0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt1, v0);
SELECT COUNT(*) FROM vt0, rt1, v0 WHERE (((vt0.c0) NOT BETWEEN ((((v0.c0, x'', rt1.c1))<((v0.c0, x'', rt1.c3)))) AND ((v0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (((rt1.c1 IN ()))>=(rt1.c3)) CROSS JOIN rt1 ON CAST(((x'')IS NOT(rt1.c1)) AS REAL) WHERE (CASE (~ (v0.c1))  WHEN ((rt1.c2)+(rt1.c1)) THEN (rt1.c0 IN ()) ELSE (((vt0.c0)) BETWEEN ((0.9254578503530118)) AND ((rt1.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (v0.c1))  WHEN ((rt1.c2)+(rt1.c1)) THEN (rt1.c0 IN ()) ELSE (((vt0.c0)) BETWEEN ((0.9254578503530118)) AND ((rt1.c1))) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((rt1.c1 IN ()))>=(rt1.c3)) CROSS JOIN rt1 ON CAST(((x'')IS NOT(rt1.c1)) AS REAL));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (((rt1.c1 IN ()))>=(rt1.c3)) CROSS JOIN rt1 ON CAST(((x'')IS NOT(rt1.c1)) AS REAL) WHERE (CASE (~ (v0.c1))  WHEN ((rt1.c2)+(rt1.c1)) THEN (rt1.c0 IN ()) ELSE (((vt0.c0)) BETWEEN ((0.9254578503530118)) AND ((rt1.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (v0.c1))  WHEN ((rt1.c2)+(rt1.c1)) THEN (rt1.c0 IN ()) ELSE (((vt0.c0)) BETWEEN ((0.9254578503530118)) AND ((rt1.c1))) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((rt1.c1 IN ()))>=(rt1.c3)) CROSS JOIN rt1 ON CAST(((x'')IS NOT(rt1.c1)) AS REAL));
SELECT * FROM v0 WHERE (CASE (((v0.c0, v0.c0, v0.c1, v0.c2, v0.c2)) NOT BETWEEN ((v0.c2, v0.c0, v0.c2, v0.c1, v0.c1)) AND ((v0.c2, v0.c2, v0.c0, v0.c2, '507684882')))  WHEN CASE v0.c1  WHEN v0.c0 THEN v0.c2 WHEN '-1599476084' THEN v0.c1 WHEN v0.c1 THEN -1081765039 ELSE v0.c1 END THEN CASE v0.c1  WHEN v0.c2 THEN v0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE (((v0.c0, v0.c0, v0.c1, v0.c2, v0.c2)) NOT BETWEEN ((v0.c2, v0.c0, v0.c2, v0.c1, v0.c1)) AND ((v0.c2, v0.c2, v0.c0, v0.c2, '507684882')))  WHEN CASE v0.c1  WHEN v0.c0 THEN v0.c2 WHEN '-1599476084' THEN v0.c1 WHEN v0.c1 THEN -1081765039 ELSE v0.c1 END THEN CASE v0.c1  WHEN v0.c2 THEN v0.c0 END END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE (((v0.c0, v0.c0, v0.c1, v0.c2, v0.c2)) NOT BETWEEN ((v0.c2, v0.c0, v0.c2, v0.c1, v0.c1)) AND ((v0.c2, v0.c2, v0.c0, v0.c2, '507684882')))  WHEN CASE v0.c1  WHEN v0.c0 THEN v0.c2 WHEN '-1599476084' THEN v0.c1 WHEN v0.c1 THEN -1081765039 ELSE v0.c1 END THEN CASE v0.c1  WHEN v0.c2 THEN v0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE (((v0.c0, v0.c0, v0.c1, v0.c2, v0.c2)) NOT BETWEEN ((v0.c2, v0.c0, v0.c2, v0.c1, v0.c1)) AND ((v0.c2, v0.c2, v0.c0, v0.c2, '507684882')))  WHEN CASE v0.c1  WHEN v0.c0 THEN v0.c2 WHEN '-1599476084' THEN v0.c1 WHEN v0.c1 THEN -1081765039 ELSE v0.c1 END THEN CASE v0.c1  WHEN v0.c2 THEN v0.c0 END END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE (((v0.c0, v0.c0, v0.c1, v0.c2, v0.c2)) NOT BETWEEN ((v0.c2, v0.c0, v0.c2, v0.c1, v0.c1)) AND ((v0.c2, v0.c2, v0.c0, v0.c2, '507684882')))  WHEN CASE v0.c1  WHEN v0.c0 THEN v0.c2 WHEN '-1599476084' THEN v0.c1 WHEN v0.c1 THEN -1081765039 ELSE v0.c1 END THEN CASE v0.c1  WHEN v0.c2 THEN v0.c0 END END);
SELECT COUNT(*) FROM rt1, v0 WHERE (((CAST(v0.c1 AS INTEGER)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c1 AS INTEGER)) NOTNULL)) IS TRUE)  as count FROM rt1, v0);
SELECT COUNT(*) FROM rt1, v0 WHERE (((CAST(v0.c1 AS INTEGER)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c1 AS INTEGER)) NOTNULL)) IS TRUE)  as count FROM rt1, v0);
SELECT COUNT(*) FROM rt1, v0 WHERE (((CAST(v0.c1 AS INTEGER)) NOTNULL));
SELECT * FROM rt1 WHERE ((~ ((- (rt1.c0))))) ORDER BY rt1.c5 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((- (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c5 DESC  NULLS LAST);
SELECT * FROM rt1 WHERE ((~ ((- (rt1.c0))))) ORDER BY rt1.c5 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((- (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c5 DESC  NULLS LAST);
SELECT * FROM rt1 WHERE ((~ ((- (rt1.c0))))) ORDER BY rt1.c5 DESC  NULLS LAST;
SELECT * FROM v0, rt1 LEFT OUTER JOIN vt0 ON ((rt1.c4 COLLATE BINARY) BETWEEN ((((rt1.c0))>((rt1.c1)))) AND (((((rt1.c1)OR(0.6168387423037379)))AND(rt1.c3)))) WHERE (((((rt1.c3)&(rt1.c3))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)&(rt1.c3))) IS FALSE)) IS TRUE)  as count FROM v0, rt1 LEFT OUTER JOIN vt0 ON ((rt1.c4 COLLATE BINARY) BETWEEN ((((rt1.c0))>((rt1.c1)))) AND (((((rt1.c1)OR(0.6168387423037379)))AND(rt1.c3)))));
SELECT * FROM v0, rt1 LEFT OUTER JOIN vt0 ON ((rt1.c4 COLLATE BINARY) BETWEEN ((((rt1.c0))>((rt1.c1)))) AND (((((rt1.c1)OR(0.6168387423037379)))AND(rt1.c3)))) WHERE (((((rt1.c3)&(rt1.c3))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)&(rt1.c3))) IS FALSE)) IS TRUE)  as count FROM v0, rt1 LEFT OUTER JOIN vt0 ON ((rt1.c4 COLLATE BINARY) BETWEEN ((((rt1.c0))>((rt1.c1)))) AND (((((rt1.c1)OR(0.6168387423037379)))AND(rt1.c3)))));
SELECT * FROM v0, rt1 LEFT OUTER JOIN vt0 ON ((rt1.c4 COLLATE BINARY) BETWEEN ((((rt1.c0))>((rt1.c1)))) AND (((((rt1.c1)OR(0.6168387423037379)))AND(rt1.c3)))) WHERE (((((rt1.c3)&(rt1.c3))) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON ((((((v0.c0)OR(rt1.c0)))AND(x''))) ISNULL) CROSS JOIN v0 ON ((json(rt1.c1)) BETWEEN (((0.13302562066400292) NOT NULL)) AND (CASE rt1.c3  WHEN rt1.c2 THEN v0.c2 END)) WHERE (((CAST(rt1.c3 AS INTEGER))|(((rt1.c2)AND(0.5801646165797065))))) ORDER BY load_extension(((rt1.c3)GLOB(x'')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c3 AS INTEGER))|(((rt1.c2)AND(0.5801646165797065))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON ((((((v0.c0)OR(rt1.c0)))AND(x''))) ISNULL) CROSS JOIN v0 ON ((json(rt1.c1)) BETWEEN (((0.13302562066400292) NOT NULL)) AND (CASE rt1.c3  WHEN rt1.c2 THEN v0.c2 END)) ORDER BY load_extension(((rt1.c3)GLOB(x'')))  NULLS LAST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON ((((((v0.c0)OR(rt1.c0)))AND(x''))) ISNULL) CROSS JOIN v0 ON ((json(rt1.c1)) BETWEEN (((0.13302562066400292) NOT NULL)) AND (CASE rt1.c3  WHEN rt1.c2 THEN v0.c2 END)) WHERE (((CAST(rt1.c3 AS INTEGER))|(((rt1.c2)AND(0.5801646165797065))))) ORDER BY load_extension(((rt1.c3)GLOB(x'')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c3 AS INTEGER))|(((rt1.c2)AND(0.5801646165797065))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON ((((((v0.c0)OR(rt1.c0)))AND(x''))) ISNULL) CROSS JOIN v0 ON ((json(rt1.c1)) BETWEEN (((0.13302562066400292) NOT NULL)) AND (CASE rt1.c3  WHEN rt1.c2 THEN v0.c2 END)) ORDER BY load_extension(((rt1.c3)GLOB(x'')))  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (HEX(CASE WHEN rt1.c3 THEN rt1.c2 END)) ORDER BY (((rt1.c4)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c0))) COLLATE BINARY DESC  NULLS LAST, CASE json_patch(rt1.c4, rt1.c4)  WHEN ((((rt1.c4)OR(rt1.c4)))OR(rt1.c0)) THEN ((rt1.c5)*(x'')) WHEN ((rt1.c4) ISNULL) THEN CAST(rt1.c5 AS NUMERIC) WHEN 626410238 THEN ((((((((rt1.c0)OR(rt1.c4)))AND(0.8695146972717577)))OR('KR')))AND(rt1.c0)) ELSE rt1.c5 COLLATE NOCASE END;
SELECT SUM(count) FROM (SELECT ALL ((HEX(CASE WHEN rt1.c3 THEN rt1.c2 END)) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c4)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c0))) COLLATE BINARY DESC  NULLS LAST, CASE json_patch(rt1.c4, rt1.c4)  WHEN ((((rt1.c4)OR(rt1.c4)))OR(rt1.c0)) THEN ((rt1.c5)*(x'')) WHEN ((rt1.c4) ISNULL) THEN CAST(rt1.c5 AS NUMERIC) WHEN 626410238 THEN ((((((((rt1.c0)OR(rt1.c4)))AND(0.8695146972717577)))OR('KR')))AND(rt1.c0)) ELSE rt1.c5 COLLATE NOCASE END);
SELECT COUNT(*) FROM rt1 WHERE (HEX(CASE WHEN rt1.c3 THEN rt1.c2 END)) ORDER BY (((rt1.c4)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c0))) COLLATE BINARY DESC  NULLS LAST, CASE json_patch(rt1.c4, rt1.c4)  WHEN ((((rt1.c4)OR(rt1.c4)))OR(rt1.c0)) THEN ((rt1.c5)*(x'')) WHEN ((rt1.c4) ISNULL) THEN CAST(rt1.c5 AS NUMERIC) WHEN 626410238 THEN ((((((((rt1.c0)OR(rt1.c4)))AND(0.8695146972717577)))OR('KR')))AND(rt1.c0)) ELSE rt1.c5 COLLATE NOCASE END;
SELECT SUM(count) FROM (SELECT ALL ((HEX(CASE WHEN rt1.c3 THEN rt1.c2 END)) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c4)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c0))) COLLATE BINARY DESC  NULLS LAST, CASE json_patch(rt1.c4, rt1.c4)  WHEN ((((rt1.c4)OR(rt1.c4)))OR(rt1.c0)) THEN ((rt1.c5)*(x'')) WHEN ((rt1.c4) ISNULL) THEN CAST(rt1.c5 AS NUMERIC) WHEN 626410238 THEN ((((((((rt1.c0)OR(rt1.c4)))AND(0.8695146972717577)))OR('KR')))AND(rt1.c0)) ELSE rt1.c5 COLLATE NOCASE END);
SELECT COUNT(*) FROM rt1 WHERE (HEX(CASE WHEN rt1.c3 THEN rt1.c2 END)) ORDER BY (((rt1.c4)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c0))) COLLATE BINARY DESC  NULLS LAST, CASE json_patch(rt1.c4, rt1.c4)  WHEN ((((rt1.c4)OR(rt1.c4)))OR(rt1.c0)) THEN ((rt1.c5)*(x'')) WHEN ((rt1.c4) ISNULL) THEN CAST(rt1.c5 AS NUMERIC) WHEN 626410238 THEN ((((((((rt1.c0)OR(rt1.c4)))AND(0.8695146972717577)))OR('KR')))AND(rt1.c0)) ELSE rt1.c5 COLLATE NOCASE END;
SELECT * FROM rt1 WHERE ((((NOT (rt1.c4))) NOT BETWEEN (rt1.c1 COLLATE NOCASE) AND (NULL COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt1.c4))) NOT BETWEEN (rt1.c1 COLLATE NOCASE) AND (NULL COLLATE RTRIM))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((NOT (rt1.c4))) NOT BETWEEN (rt1.c1 COLLATE NOCASE) AND (NULL COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt1.c4))) NOT BETWEEN (rt1.c1 COLLATE NOCASE) AND (NULL COLLATE RTRIM))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((NOT (rt1.c4))) NOT BETWEEN (rt1.c1 COLLATE NOCASE) AND (NULL COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) ISNULL));
SELECT ALL * FROM v0 WHERE (((((v0.c2) IS FALSE))/(((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c2) IS FALSE))/(((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c2))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c2) IS FALSE))/(((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c2) IS FALSE))/(((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c2))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c2) IS FALSE))/(((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c2)))));
SELECT COUNT(*) FROM vt0, v0 WHERE (json_valid(((v0.c2)<=(v0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((json_valid(((v0.c2)<=(v0.c1)))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (json_valid(((v0.c2)<=(v0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((json_valid(((v0.c2)<=(v0.c1)))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (json_valid(((v0.c2)<=(v0.c1))));
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(((rt1.c2)OR(rt1.c1)) AS BLOB)) ORDER BY ((((rt1.c3)AND(rt1.c5)))AND((NOT (rt1.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2)OR(rt1.c1)) AS BLOB)) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c3)AND(rt1.c5)))AND((NOT (rt1.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(((rt1.c2)OR(rt1.c1)) AS BLOB)) ORDER BY ((((rt1.c3)AND(rt1.c5)))AND((NOT (rt1.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2)OR(rt1.c1)) AS BLOB)) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c3)AND(rt1.c5)))AND((NOT (rt1.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(((rt1.c2)OR(rt1.c1)) AS BLOB)) ORDER BY ((((rt1.c3)AND(rt1.c5)))AND((NOT (rt1.c2)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ (((rt1.c0)AND(rt1.c4))))) ORDER BY (((NOT (rt1.c3)))IS NOT(JULIANDAY(rt1.c4, rt1.c5, rt1.c4, rt1.c1, rt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt1.c0)AND(rt1.c4))))) IS TRUE)  as count FROM rt1 ORDER BY (((NOT (rt1.c3)))IS NOT(JULIANDAY(rt1.c4, rt1.c5, rt1.c4, rt1.c1, rt1.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ (((rt1.c0)AND(rt1.c4))))) ORDER BY (((NOT (rt1.c3)))IS NOT(JULIANDAY(rt1.c4, rt1.c5, rt1.c4, rt1.c1, rt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt1.c0)AND(rt1.c4))))) IS TRUE)  as count FROM rt1 ORDER BY (((NOT (rt1.c3)))IS NOT(JULIANDAY(rt1.c4, rt1.c5, rt1.c4, rt1.c1, rt1.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ (((rt1.c0)AND(rt1.c4))))) ORDER BY (((NOT (rt1.c3)))IS NOT(JULIANDAY(rt1.c4, rt1.c5, rt1.c4, rt1.c1, rt1.c0)))  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt1 WHERE (((rt1.c5) NOT BETWEEN (((rt1.c4)/(rt1.c2))) AND (((((rt1.c2)AND(vt0.c0)))AND(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c5) NOT BETWEEN (((rt1.c4)/(rt1.c2))) AND (((((rt1.c2)AND(vt0.c0)))AND(rt1.c1))))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((rt1.c5) NOT BETWEEN (((rt1.c4)/(rt1.c2))) AND (((((rt1.c2)AND(vt0.c0)))AND(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c5) NOT BETWEEN (((rt1.c4)/(rt1.c2))) AND (((((rt1.c2)AND(vt0.c0)))AND(rt1.c1))))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((rt1.c5) NOT BETWEEN (((rt1.c4)/(rt1.c2))) AND (((((rt1.c2)AND(vt0.c0)))AND(rt1.c1)))));
SELECT ALL * FROM v0, rt1 WHERE (((((((((((((rt1.c5)AND(v0.c1)))OR(v0.c2)))AND(((((((((rt1.c4)OR(v0.c0)))OR(v0.c0)))OR(rt1.c1)))AND(rt1.c1)))))OR(((((((((v0.c0)OR(rt1.c5)))OR(rt1.c2)))AND(rt1.c3)))AND(v0.c0)))))AND(((rt1.c5) NOT NULL))))AND(((v0.c0)LIKE(v0.c1))))) ORDER BY ((((((((((v0.c0)OR(rt1.c0)))OR(0.022665287020225633)))OR(v0.c2)))AND(v0.c2)))<>((NOT (v0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt1.c5)AND(v0.c1)))OR(v0.c2)))AND(((((((((rt1.c4)OR(v0.c0)))OR(v0.c0)))OR(rt1.c1)))AND(rt1.c1)))))OR(((((((((v0.c0)OR(rt1.c5)))OR(rt1.c2)))AND(rt1.c3)))AND(v0.c0)))))AND(((rt1.c5) NOT NULL))))AND(((v0.c0)LIKE(v0.c1))))) IS TRUE)  as count FROM v0, rt1 ORDER BY ((((((((((v0.c0)OR(rt1.c0)))OR(0.022665287020225633)))OR(v0.c2)))AND(v0.c2)))!=((NOT (v0.c2)))) DESC  NULLS LAST);
SELECT ALL * FROM v0, rt1 WHERE (((((((((((((rt1.c5)AND(v0.c1)))OR(v0.c2)))AND(((((((((rt1.c4)OR(v0.c0)))OR(v0.c0)))OR(rt1.c1)))AND(rt1.c1)))))OR(((((((((v0.c0)OR(rt1.c5)))OR(rt1.c2)))AND(rt1.c3)))AND(v0.c0)))))AND(((rt1.c5) NOT NULL))))AND(((v0.c0)LIKE(v0.c1))))) ORDER BY ((((((((((v0.c0)OR(rt1.c0)))OR(0.022665287020225633)))OR(v0.c2)))AND(v0.c2)))<>((NOT (v0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt1.c5)AND(v0.c1)))OR(v0.c2)))AND(((((((((rt1.c4)OR(v0.c0)))OR(v0.c0)))OR(rt1.c1)))AND(rt1.c1)))))OR(((((((((v0.c0)OR(rt1.c5)))OR(rt1.c2)))AND(rt1.c3)))AND(v0.c0)))))AND(((rt1.c5) NOT NULL))))AND(((v0.c0)LIKE(v0.c1))))) IS TRUE)  as count FROM v0, rt1 ORDER BY ((((((((((v0.c0)OR(rt1.c0)))OR(0.022665287020225633)))OR(v0.c2)))AND(v0.c2)))!=((NOT (v0.c2)))) DESC  NULLS LAST);
SELECT ALL * FROM v0, rt1 WHERE (((((((((((((rt1.c5)AND(v0.c1)))OR(v0.c2)))AND(((((((((rt1.c4)OR(v0.c0)))OR(v0.c0)))OR(rt1.c1)))AND(rt1.c1)))))OR(((((((((v0.c0)OR(rt1.c5)))OR(rt1.c2)))AND(rt1.c3)))AND(v0.c0)))))AND(((rt1.c5) NOT NULL))))AND(((v0.c0)LIKE(v0.c1))))) ORDER BY ((((((((((v0.c0)OR(rt1.c0)))OR(0.022665287020225633)))OR(v0.c2)))AND(v0.c2)))<>((NOT (v0.c2)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0, rt1 WHERE (rt1.c4) ORDER BY (((TRIM(rt1.c2)))<>((CAST(rt1.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM vt0, v0, rt1 ORDER BY (((TRIM(rt1.c2)))!=((CAST(rt1.c2 AS INTEGER)))));
SELECT ALL COUNT(*) FROM vt0, v0, rt1 WHERE (rt1.c4) ORDER BY (((TRIM(rt1.c2)))<>((CAST(rt1.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM vt0, v0, rt1 ORDER BY (((TRIM(rt1.c2)))!=((CAST(rt1.c2 AS INTEGER)))));
SELECT ALL COUNT(*) FROM vt0, v0, rt1 WHERE (rt1.c4) ORDER BY (((TRIM(rt1.c2)))<>((CAST(rt1.c2 AS INTEGER))));
SELECT ALL * FROM v0, rt1 WHERE (DATETIME(((rt1.c4)OR(v0.c0)), (+ (rt1.c1)), ((((rt1.c0)AND(rt1.c0)))OR(NULL)))) ORDER BY CASE WHEN NULL THEN v0.c1 END COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(((rt1.c4)OR(v0.c0)), (+ (rt1.c1)), ((((rt1.c0)AND(rt1.c0)))OR(NULL)))) IS TRUE)  as count FROM v0, rt1 ORDER BY CASE WHEN NULL THEN v0.c1 END COLLATE NOCASE DESC);
SELECT ALL * FROM v0, rt1 WHERE (DATETIME(((rt1.c4)OR(v0.c0)), (+ (rt1.c1)), ((((rt1.c0)AND(rt1.c0)))OR(NULL)))) ORDER BY CASE WHEN NULL THEN v0.c1 END COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(((rt1.c4)OR(v0.c0)), (+ (rt1.c1)), ((((rt1.c0)AND(rt1.c0)))OR(NULL)))) IS TRUE)  as count FROM v0, rt1 ORDER BY CASE WHEN NULL THEN v0.c1 END COLLATE NOCASE DESC);
SELECT ALL * FROM v0, rt1 WHERE (DATETIME(((rt1.c4)OR(v0.c0)), (+ (rt1.c1)), ((((rt1.c0)AND(rt1.c0)))OR(NULL)))) ORDER BY CASE WHEN NULL THEN v0.c1 END COLLATE NOCASE DESC;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((CAST(v0.c2 AS NUMERIC), CAST(v0.c1 AS NUMERIC), 0.8753517553626575, ((x'') ISNULL), CASE WHEN vt0.c0 THEN v0.c1 END))<>((CAST(v0.c1 AS REAL), ((v0.c1)>=(v0.c2)), v0.c1, ((vt0.c0) IS FALSE), ((((v0.c1)AND(v0.c0)))OR(v0.c2))))));
SELECT SUM(count) FROM (SELECT (((((CAST(v0.c2 AS NUMERIC), CAST(v0.c1 AS NUMERIC), 0.8753517553626575, ((x'') ISNULL), CASE WHEN vt0.c0 THEN v0.c1 END))!=((CAST(v0.c1 AS REAL), ((v0.c1)>=(v0.c2)), v0.c1, ((vt0.c0) IS FALSE), ((((v0.c1)AND(v0.c0)))OR(v0.c2)))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((CAST(v0.c2 AS NUMERIC), CAST(v0.c1 AS NUMERIC), 0.8753517553626575, ((x'') ISNULL), CASE WHEN vt0.c0 THEN v0.c1 END))<>((CAST(v0.c1 AS REAL), ((v0.c1)>=(v0.c2)), v0.c1, ((vt0.c0) IS FALSE), ((((v0.c1)AND(v0.c0)))OR(v0.c2))))));
SELECT SUM(count) FROM (SELECT (((((CAST(v0.c2 AS NUMERIC), CAST(v0.c1 AS NUMERIC), 0.8753517553626575, ((x'') ISNULL), CASE WHEN vt0.c0 THEN v0.c1 END))!=((CAST(v0.c1 AS REAL), ((v0.c1)>=(v0.c2)), v0.c1, ((vt0.c0) IS FALSE), ((((v0.c1)AND(v0.c0)))OR(v0.c2)))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((CAST(v0.c2 AS NUMERIC), CAST(v0.c1 AS NUMERIC), 0.8753517553626575, ((x'') ISNULL), CASE WHEN vt0.c0 THEN v0.c1 END))<>((CAST(v0.c1 AS REAL), ((v0.c1)>=(v0.c2)), v0.c1, ((vt0.c0) IS FALSE), ((((v0.c1)AND(v0.c0)))OR(v0.c2))))));
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)>=(((vt0.c0)&(vt0.c0))))) ORDER BY ((0.3448595175203635) IS TRUE) COLLATE BINARY, x'' ASC  NULLS FIRST, ((((vt0.c0)IS NOT(vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)>=(((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((0.3448595175203635) IS TRUE) COLLATE BINARY, x'' ASC  NULLS FIRST, ((((vt0.c0)IS NOT(vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)>=(((vt0.c0)&(vt0.c0))))) ORDER BY ((0.3448595175203635) IS TRUE) COLLATE BINARY, x'' ASC  NULLS FIRST, ((((vt0.c0)IS NOT(vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)>=(((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((0.3448595175203635) IS TRUE) COLLATE BINARY, x'' ASC  NULLS FIRST, ((((vt0.c0)IS NOT(vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)>=(((vt0.c0)&(vt0.c0))))) ORDER BY ((0.3448595175203635) IS TRUE) COLLATE BINARY, x'' ASC  NULLS FIRST, ((((vt0.c0)IS NOT(vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON (((~ (rt1.c1))) NOT BETWEEN ((((v0.c1, rt1.c1, rt1.c5)) BETWEEN ((rt1.c5, rt1.c3, rt1.c4)) AND ((v0.c2, rt1.c2, v0.c0)))) AND (((v0.c1) BETWEEN (vt0.c0) AND (rt1.c4)))) LEFT OUTER JOIN v0 ON ((((0.1292216727464206) NOT BETWEEN (v0.c1) AND (''))) NOT BETWEEN (((rt1.c3)>>(rt1.c5))) AND (((v0.c2)*(rt1.c3)))) WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON (((~ (rt1.c1))) NOT BETWEEN ((((v0.c1, rt1.c1, rt1.c5)) BETWEEN ((rt1.c5, rt1.c3, rt1.c4)) AND ((v0.c2, rt1.c2, v0.c0)))) AND (((v0.c1) BETWEEN (vt0.c0) AND (rt1.c4)))) LEFT OUTER JOIN v0 ON ((((0.1292216727464206) NOT BETWEEN (v0.c1) AND (''))) NOT BETWEEN (((rt1.c3)>>(rt1.c5))) AND (((v0.c2)*(rt1.c3)))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON (((~ (rt1.c1))) NOT BETWEEN ((((v0.c1, rt1.c1, rt1.c5)) BETWEEN ((rt1.c5, rt1.c3, rt1.c4)) AND ((v0.c2, rt1.c2, v0.c0)))) AND (((v0.c1) BETWEEN (vt0.c0) AND (rt1.c4)))) LEFT OUTER JOIN v0 ON ((((0.1292216727464206) NOT BETWEEN (v0.c1) AND (''))) NOT BETWEEN (((rt1.c3)>>(rt1.c5))) AND (((v0.c2)*(rt1.c3)))) WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON (((~ (rt1.c1))) NOT BETWEEN ((((v0.c1, rt1.c1, rt1.c5)) BETWEEN ((rt1.c5, rt1.c3, rt1.c4)) AND ((v0.c2, rt1.c2, v0.c0)))) AND (((v0.c1) BETWEEN (vt0.c0) AND (rt1.c4)))) LEFT OUTER JOIN v0 ON ((((0.1292216727464206) NOT BETWEEN (v0.c1) AND (''))) NOT BETWEEN (((rt1.c3)>>(rt1.c5))) AND (((v0.c2)*(rt1.c3)))));
SELECT * FROM v0 WHERE (((NULL) NOT BETWEEN (((((v0.c2)AND(v0.c1)))AND(v0.c1))) AND ((+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN (((((v0.c2)AND(v0.c1)))AND(v0.c1))) AND ((+ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((NULL) NOT BETWEEN (((((v0.c2)AND(v0.c1)))AND(v0.c1))) AND ((+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN (((((v0.c2)AND(v0.c1)))AND(v0.c1))) AND ((+ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((NULL) NOT BETWEEN (((((v0.c2)AND(v0.c1)))AND(v0.c1))) AND ((+ (v0.c0)))));
SELECT * FROM v0 WHERE (((((((((((v0.c0)+(v0.c1)))AND(v0.c1)))OR(CAST(v0.c2 AS BLOB))))OR(CAST(v0.c2 AS BLOB))))OR((+ (v0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)+(v0.c1)))AND(v0.c1)))OR(CAST(v0.c2 AS BLOB))))OR(CAST(v0.c2 AS BLOB))))OR((+ (v0.c2))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((((((v0.c0)+(v0.c1)))AND(v0.c1)))OR(CAST(v0.c2 AS BLOB))))OR(CAST(v0.c2 AS BLOB))))OR((+ (v0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)+(v0.c1)))AND(v0.c1)))OR(CAST(v0.c2 AS BLOB))))OR(CAST(v0.c2 AS BLOB))))OR((+ (v0.c2))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((((((v0.c0)+(v0.c1)))AND(v0.c1)))OR(CAST(v0.c2 AS BLOB))))OR(CAST(v0.c2 AS BLOB))))OR((+ (v0.c2)))));
SELECT ALL * FROM v0, rt1 WHERE (NULL) ORDER BY (~ ((rt1.c4 IN ()))) ASC  NULLS LAST, ((((rt1.c4 COLLATE NOCASE)AND(((x'bd2e')AND(rt1.c2)))))OR(((v0.c0) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, rt1 ORDER BY (~ ((rt1.c4 IN ()))) ASC  NULLS LAST, ((((rt1.c4 COLLATE NOCASE)AND(((x'bd2e')AND(rt1.c2)))))OR(((v0.c0) NOT NULL)))  NULLS FIRST);
SELECT ALL * FROM v0, rt1 WHERE (NULL) ORDER BY (~ ((rt1.c4 IN ()))) ASC  NULLS LAST, ((((rt1.c4 COLLATE NOCASE)AND(((x'bd2e')AND(rt1.c2)))))OR(((v0.c0) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, rt1 ORDER BY (~ ((rt1.c4 IN ()))) ASC  NULLS LAST, ((((rt1.c4 COLLATE NOCASE)AND(((x'bd2e')AND(rt1.c2)))))OR(((v0.c0) NOT NULL)))  NULLS FIRST);
SELECT ALL * FROM v0, rt1 WHERE (NULL) ORDER BY (~ ((rt1.c4 IN ()))) ASC  NULLS LAST, ((((rt1.c4 COLLATE NOCASE)AND(((x'bd2e')AND(rt1.c2)))))OR(((v0.c0) NOT NULL)))  NULLS FIRST;
SELECT * FROM v0, rt1 WHERE (rt1.c5 COLLATE BINARY) ORDER BY (('+#')|(0.44974440035731866)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c5 COLLATE BINARY) IS TRUE)  as count FROM v0, rt1 ORDER BY (('+#')|(0.44974440035731866)) DESC  NULLS LAST);
SELECT * FROM v0, rt1 WHERE (rt1.c5 COLLATE BINARY) ORDER BY (('+#')|(0.44974440035731866)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c5 COLLATE BINARY) IS TRUE)  as count FROM v0, rt1 ORDER BY (('+#')|(0.44974440035731866)) DESC  NULLS LAST);
SELECT * FROM v0, rt1 WHERE (rt1.c5 COLLATE BINARY) ORDER BY (('+#')|(0.44974440035731866)) DESC  NULLS LAST;
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON ((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c4))) NOT BETWEEN ((NOT (rt1.c0))) AND (((rt1.c0)>(rt1.c0)))) WHERE ((((((+ (rt1.c1)))AND(ABS(vt0.c0))))OR(((rt1.c3) ISNULL)))) ORDER BY rt1.c3 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((+ (rt1.c1)))AND(ABS(vt0.c0))))OR(((rt1.c3) ISNULL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON ((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c4))) NOT BETWEEN ((NOT (rt1.c0))) AND (((rt1.c0)>(rt1.c0)))) ORDER BY rt1.c3 DESC);
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON ((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c4))) NOT BETWEEN ((NOT (rt1.c0))) AND (((rt1.c0)>(rt1.c0)))) WHERE ((((((+ (rt1.c1)))AND(ABS(vt0.c0))))OR(((rt1.c3) ISNULL)))) ORDER BY rt1.c3 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((+ (rt1.c1)))AND(ABS(vt0.c0))))OR(((rt1.c3) ISNULL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON ((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c4))) NOT BETWEEN ((NOT (rt1.c0))) AND (((rt1.c0)>(rt1.c0)))) ORDER BY rt1.c3 DESC);
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON ((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c4))) NOT BETWEEN ((NOT (rt1.c0))) AND (((rt1.c0)>(rt1.c0)))) WHERE ((((((+ (rt1.c1)))AND(ABS(vt0.c0))))OR(((rt1.c3) ISNULL)))) ORDER BY rt1.c3 DESC;
SELECT COUNT(*) FROM v0, vt0 WHERE ((((v0.c2)) NOT BETWEEN ((((v0.c2) NOT NULL))) AND ((((v0.c2)IS(v0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)) NOT BETWEEN ((((v0.c2) NOT NULL))) AND ((((v0.c2)IS(v0.c1)))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((v0.c2)) NOT BETWEEN ((((v0.c2) NOT NULL))) AND ((((v0.c2)IS(v0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)) NOT BETWEEN ((((v0.c2) NOT NULL))) AND ((((v0.c2)IS(v0.c1)))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((v0.c2)) NOT BETWEEN ((((v0.c2) NOT NULL))) AND ((((v0.c2)IS(v0.c1))))));
SELECT * FROM vt0, v0 WHERE ('68ႁG(');
SELECT SUM(count) FROM (SELECT (('68ႁG(') IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ('68ႁG(');
SELECT SUM(count) FROM (SELECT (('68ႁG(') IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ('68ႁG(');
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ('(<');
SELECT SUM(count) FROM (SELECT (('(<') IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ('(<');
SELECT SUM(count) FROM (SELECT (('(<') IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ('(<');
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c4)<>(rt1.c5))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt1.c4)<>(rt1.c5))) IS FALSE)) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c4)<>(rt1.c5))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt1.c4)<>(rt1.c5))) IS FALSE)) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c4)<>(rt1.c5))) IS FALSE));
SELECT * FROM v0 WHERE (0.3826857615684004);
SELECT SUM(count) FROM (SELECT ALL ((0.3826857615684004) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (0.3826857615684004);
SELECT SUM(count) FROM (SELECT ALL ((0.3826857615684004) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (0.3826857615684004);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((v0.c0))>((((((vt0.c0)AND(v0.c1)))OR(v0.c2)))))) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN ((((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c2)))) AND (CASE WHEN vt0.c0 THEN v0.c1 WHEN vt0.c0 THEN v0.c1 WHEN x'' THEN v0.c0 END)), CASE vt0.c0  WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0))>((((((vt0.c0)AND(v0.c1)))OR(v0.c2)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((vt0.c0 IN ())) NOT BETWEEN ((((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c2)))) AND (CASE WHEN vt0.c0 THEN v0.c1 WHEN vt0.c0 THEN v0.c1 WHEN x'' THEN v0.c0 END)), CASE vt0.c0  WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((v0.c0))>((((((vt0.c0)AND(v0.c1)))OR(v0.c2)))))) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN ((((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c2)))) AND (CASE WHEN vt0.c0 THEN v0.c1 WHEN vt0.c0 THEN v0.c1 WHEN x'' THEN v0.c0 END)), CASE vt0.c0  WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0))>((((((vt0.c0)AND(v0.c1)))OR(v0.c2)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((vt0.c0 IN ())) NOT BETWEEN ((((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c2)))) AND (CASE WHEN vt0.c0 THEN v0.c1 WHEN vt0.c0 THEN v0.c1 WHEN x'' THEN v0.c0 END)), CASE vt0.c0  WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((v0.c0))>((((((vt0.c0)AND(v0.c1)))OR(v0.c2)))))) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN ((((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c2)))) AND (CASE WHEN vt0.c0 THEN v0.c1 WHEN vt0.c0 THEN v0.c1 WHEN x'' THEN v0.c0 END)), CASE vt0.c0  WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END COLLATE RTRIM;
SELECT * FROM v0 WHERE (5.48556527E8);
SELECT SUM(count) FROM (SELECT ALL ((5.48556527E8) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (5.48556527E8);
SELECT SUM(count) FROM (SELECT ALL ((5.48556527E8) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (5.48556527E8);
SELECT COUNT(*) FROM vt0, v0, rt1 WHERE ((vt0.c0 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0, rt1);
SELECT COUNT(*) FROM vt0, v0, rt1 WHERE ((vt0.c0 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0, rt1);
SELECT COUNT(*) FROM vt0, v0, rt1 WHERE ((vt0.c0 IN ()) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON ((((v0.c1)=(x''))) NOT NULL) WHERE ((NOT (v0.c2)) COLLATE BINARY COLLATE NOCASE) ORDER BY ((((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))<(((vt0.c0)AND(v0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (v0.c2)) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((((v0.c1)==(x''))) NOT NULL) ORDER BY ((((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))<(((vt0.c0)AND(v0.c2)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON ((((v0.c1)=(x''))) NOT NULL) WHERE ((NOT (v0.c2)) COLLATE BINARY COLLATE NOCASE) ORDER BY ((((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))<(((vt0.c0)AND(v0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (v0.c2)) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((((v0.c1)==(x''))) NOT NULL) ORDER BY ((((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))<(((vt0.c0)AND(v0.c2)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON ((((v0.c1)=(x''))) NOT NULL) WHERE ((NOT (v0.c2)) COLLATE BINARY COLLATE NOCASE) ORDER BY ((((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))<(((vt0.c0)AND(v0.c2))));
SELECT COUNT(*) FROM vt0, rt1, v0 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (rt1.c4) AND (v0.c2)) THEN ((rt1.c4)||(rt1.c2)) WHEN CAST(rt1.c1 AS NUMERIC) THEN TRIM(rt1.c1) WHEN rt1.c5 THEN (- (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) NOT BETWEEN (rt1.c4) AND (v0.c2)) THEN ((rt1.c4)||(rt1.c2)) WHEN CAST(rt1.c1 AS NUMERIC) THEN TRIM(rt1.c1) WHEN rt1.c5 THEN (- (v0.c0)) END) IS TRUE)  as count FROM vt0, rt1, v0);
SELECT COUNT(*) FROM vt0, rt1, v0 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (rt1.c4) AND (v0.c2)) THEN ((rt1.c4)||(rt1.c2)) WHEN CAST(rt1.c1 AS NUMERIC) THEN TRIM(rt1.c1) WHEN rt1.c5 THEN (- (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) NOT BETWEEN (rt1.c4) AND (v0.c2)) THEN ((rt1.c4)||(rt1.c2)) WHEN CAST(rt1.c1 AS NUMERIC) THEN TRIM(rt1.c1) WHEN rt1.c5 THEN (- (v0.c0)) END) IS TRUE)  as count FROM vt0, rt1, v0);
SELECT COUNT(*) FROM vt0, rt1, v0 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (rt1.c4) AND (v0.c2)) THEN ((rt1.c4)||(rt1.c2)) WHEN CAST(rt1.c1 AS NUMERIC) THEN TRIM(rt1.c1) WHEN rt1.c5 THEN (- (v0.c0)) END);
SELECT * FROM rt1, vt0 WHERE (CAST(((rt1.c5) IS TRUE) AS BLOB)) ORDER BY ((((((0.4438939230815737)AND(vt0.c0)))OR(vt0.c0)))/(vt0.c0)) DESC  NULLS FIRST, json(((rt1.c5) BETWEEN (rt1.c4) AND (rt1.c5))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c5) IS TRUE) AS BLOB)) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((0.4438939230815737)AND(vt0.c0)))OR(vt0.c0)))/(vt0.c0)) DESC  NULLS FIRST, json(((rt1.c5) BETWEEN (rt1.c4) AND (rt1.c5))) DESC);
SELECT * FROM rt1, vt0 WHERE (CAST(((rt1.c5) IS TRUE) AS BLOB)) ORDER BY ((((((0.4438939230815737)AND(vt0.c0)))OR(vt0.c0)))/(vt0.c0)) DESC  NULLS FIRST, json(((rt1.c5) BETWEEN (rt1.c4) AND (rt1.c5))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c5) IS TRUE) AS BLOB)) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((0.4438939230815737)AND(vt0.c0)))OR(vt0.c0)))/(vt0.c0)) DESC  NULLS FIRST, json(((rt1.c5) BETWEEN (rt1.c4) AND (rt1.c5))) DESC);
SELECT * FROM rt1, vt0 WHERE (CAST(((rt1.c5) IS TRUE) AS BLOB)) ORDER BY ((((((0.4438939230815737)AND(vt0.c0)))OR(vt0.c0)))/(vt0.c0)) DESC  NULLS FIRST, json(((rt1.c5) BETWEEN (rt1.c4) AND (rt1.c5))) DESC;
SELECT ALL * FROM rt1, v0 WHERE (v0.c1) ORDER BY (((rt1.c0, rt1.c3, v0.c0, rt1.c1, rt1.c3)) BETWEEN ((CAST(rt1.c1 AS NUMERIC), (((rt1.c4)) NOT BETWEEN ((v0.c1)) AND ((rt1.c0))), (((rt1.c1))<((rt1.c2))), (~ (rt1.c0)), -105573239)) AND ((v0.c0, (rt1.c4 IN ()), ((v0.c1)+(rt1.c2)), (((rt1.c1))<((v0.c2))), x'')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM rt1, v0 ORDER BY (((rt1.c0, rt1.c3, v0.c0, rt1.c1, rt1.c3)) BETWEEN ((CAST(rt1.c1 AS NUMERIC), (((rt1.c4)) NOT BETWEEN ((v0.c1)) AND ((rt1.c0))), (((rt1.c1))<((rt1.c2))), (~ (rt1.c0)), -105573239)) AND ((v0.c0, (rt1.c4 IN ()), ((v0.c1)+(rt1.c2)), (((rt1.c1))<((v0.c2))), x'')))  NULLS LAST);
SELECT ALL * FROM rt1, v0 WHERE (v0.c1) ORDER BY (((rt1.c0, rt1.c3, v0.c0, rt1.c1, rt1.c3)) BETWEEN ((CAST(rt1.c1 AS NUMERIC), (((rt1.c4)) NOT BETWEEN ((v0.c1)) AND ((rt1.c0))), (((rt1.c1))<((rt1.c2))), (~ (rt1.c0)), -105573239)) AND ((v0.c0, (rt1.c4 IN ()), ((v0.c1)+(rt1.c2)), (((rt1.c1))<((v0.c2))), x'')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM rt1, v0 ORDER BY (((rt1.c0, rt1.c3, v0.c0, rt1.c1, rt1.c3)) BETWEEN ((CAST(rt1.c1 AS NUMERIC), (((rt1.c4)) NOT BETWEEN ((v0.c1)) AND ((rt1.c0))), (((rt1.c1))<((rt1.c2))), (~ (rt1.c0)), -105573239)) AND ((v0.c0, (rt1.c4 IN ()), ((v0.c1)+(rt1.c2)), (((rt1.c1))<((v0.c2))), x'')))  NULLS LAST);
SELECT ALL * FROM rt1, v0 WHERE (v0.c1) ORDER BY (((rt1.c0, rt1.c3, v0.c0, rt1.c1, rt1.c3)) BETWEEN ((CAST(rt1.c1 AS NUMERIC), (((rt1.c4)) NOT BETWEEN ((v0.c1)) AND ((rt1.c0))), (((rt1.c1))<((rt1.c2))), (~ (rt1.c0)), -105573239)) AND ((v0.c0, (rt1.c4 IN ()), ((v0.c1)+(rt1.c2)), (((rt1.c1))<((v0.c2))), x'')))  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE ((NOT (v0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((NOT (v0.c1)) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((NOT (v0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((NOT (v0.c1)) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((NOT (v0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL)) IS FALSE));
SELECT * FROM vt0 CROSS JOIN rt1 ON ((0x610a114b COLLATE RTRIM) BETWEEN (((vt0.c0) IS TRUE)) AND (((-1946361322)IS NOT(rt1.c5)))) WHERE ((((rt1.c4)<=(rt1.c3)) IN ())) ORDER BY (+ (rt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c4)<=(rt1.c3)) IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON ((0x610a114b COLLATE RTRIM) BETWEEN (((vt0.c0) IS TRUE)) AND (((-1946361322)IS NOT(rt1.c5)))) ORDER BY (+ (rt1.c0)) ASC);
SELECT * FROM vt0 CROSS JOIN rt1 ON ((0x610a114b COLLATE RTRIM) BETWEEN (((vt0.c0) IS TRUE)) AND (((-1946361322)IS NOT(rt1.c5)))) WHERE ((((rt1.c4)<=(rt1.c3)) IN ())) ORDER BY (+ (rt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c4)<=(rt1.c3)) IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON ((0x610a114b COLLATE RTRIM) BETWEEN (((vt0.c0) IS TRUE)) AND (((-1946361322)IS NOT(rt1.c5)))) ORDER BY (+ (rt1.c0)) ASC);
SELECT * FROM vt0 CROSS JOIN rt1 ON ((0x610a114b COLLATE RTRIM) BETWEEN (((vt0.c0) IS TRUE)) AND (((-1946361322)IS NOT(rt1.c5)))) WHERE ((((rt1.c4)<=(rt1.c3)) IN ())) ORDER BY (+ (rt1.c0)) ASC;
SELECT * FROM rt1 WHERE ((((rt1.c5)) NOT BETWEEN ((((rt1.c0) ISNULL))) AND ((rt1.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c5)) NOT BETWEEN ((((rt1.c0) ISNULL))) AND ((rt1.c0 COLLATE BINARY)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c5)) NOT BETWEEN ((((rt1.c0) ISNULL))) AND ((rt1.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c5)) NOT BETWEEN ((((rt1.c0) ISNULL))) AND ((rt1.c0 COLLATE BINARY)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c5)) NOT BETWEEN ((((rt1.c0) ISNULL))) AND ((rt1.c0 COLLATE BINARY))));
SELECT * FROM rt1, vt0 WHERE (CASE WHEN ((((((((rt1.c2)AND(vt0.c0)))OR(rt1.c2)))AND(rt1.c3)))OR(rt1.c1)) THEN (((vt0.c0))>=((rt1.c4))) ELSE rt1.c5 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((rt1.c2)AND(vt0.c0)))OR(rt1.c2)))AND(rt1.c3)))OR(rt1.c1)) THEN (((vt0.c0))>=((rt1.c4))) ELSE rt1.c5 END) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (CASE WHEN ((((((((rt1.c2)AND(vt0.c0)))OR(rt1.c2)))AND(rt1.c3)))OR(rt1.c1)) THEN (((vt0.c0))>=((rt1.c4))) ELSE rt1.c5 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((rt1.c2)AND(vt0.c0)))OR(rt1.c2)))AND(rt1.c3)))OR(rt1.c1)) THEN (((vt0.c0))>=((rt1.c4))) ELSE rt1.c5 END) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (CASE WHEN ((((((((rt1.c2)AND(vt0.c0)))OR(rt1.c2)))AND(rt1.c3)))OR(rt1.c1)) THEN (((vt0.c0))>=((rt1.c4))) ELSE rt1.c5 END);
SELECT COUNT(*) FROM v0 WHERE ((('' COLLATE RTRIM) NOT BETWEEN (((v0.c2) ISNULL)) AND (LIKELY(v0.c0)))) ORDER BY ((x'')>=(7.59016174E8)) DESC;
SELECT SUM(count) FROM (SELECT (((('' COLLATE RTRIM) NOT BETWEEN (((v0.c2) ISNULL)) AND (LIKELY(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((x'')>=(7.59016174E8)) DESC);
SELECT COUNT(*) FROM v0 WHERE ((('' COLLATE RTRIM) NOT BETWEEN (((v0.c2) ISNULL)) AND (LIKELY(v0.c0)))) ORDER BY ((x'')>=(7.59016174E8)) DESC;
SELECT SUM(count) FROM (SELECT (((('' COLLATE RTRIM) NOT BETWEEN (((v0.c2) ISNULL)) AND (LIKELY(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((x'')>=(7.59016174E8)) DESC);
SELECT COUNT(*) FROM v0 WHERE ((('' COLLATE RTRIM) NOT BETWEEN (((v0.c2) ISNULL)) AND (LIKELY(v0.c0)))) ORDER BY ((x'')>=(7.59016174E8)) DESC;
SELECT COUNT(*) FROM rt1, v0 RIGHT OUTER JOIN vt0 ON CASE (rt1.c0 IN (rt1.c3, rt1.c4))  WHEN (((rt1.c1))==((rt1.c2))) THEN ((rt1.c5) BETWEEN (rt1.c2) AND (v0.c0)) END WHERE (((((((v0.c0)GLOB(rt1.c2)))OR(((v0.c2) NOT BETWEEN (rt1.c3) AND (v0.c1)))))AND(((rt1.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)GLOB(rt1.c2)))OR(((v0.c2) NOT BETWEEN (rt1.c3) AND (v0.c1)))))AND(((rt1.c1) NOT NULL)))) IS TRUE)  as count FROM rt1, v0 RIGHT OUTER JOIN vt0 ON CASE (rt1.c0 IN (rt1.c3, rt1.c4))  WHEN (((rt1.c1))=((rt1.c2))) THEN ((rt1.c5) BETWEEN (rt1.c2) AND (v0.c0)) END);
SELECT COUNT(*) FROM rt1, v0 RIGHT OUTER JOIN vt0 ON CASE (rt1.c0 IN (rt1.c3, rt1.c4))  WHEN (((rt1.c1))==((rt1.c2))) THEN ((rt1.c5) BETWEEN (rt1.c2) AND (v0.c0)) END WHERE (((((((v0.c0)GLOB(rt1.c2)))OR(((v0.c2) NOT BETWEEN (rt1.c3) AND (v0.c1)))))AND(((rt1.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)GLOB(rt1.c2)))OR(((v0.c2) NOT BETWEEN (rt1.c3) AND (v0.c1)))))AND(((rt1.c1) NOT NULL)))) IS TRUE)  as count FROM rt1, v0 RIGHT OUTER JOIN vt0 ON CASE (rt1.c0 IN (rt1.c3, rt1.c4))  WHEN (((rt1.c1))=((rt1.c2))) THEN ((rt1.c5) BETWEEN (rt1.c2) AND (v0.c0)) END);
SELECT COUNT(*) FROM rt1, v0 RIGHT OUTER JOIN vt0 ON CASE (rt1.c0 IN (rt1.c3, rt1.c4))  WHEN (((rt1.c1))==((rt1.c2))) THEN ((rt1.c5) BETWEEN (rt1.c2) AND (v0.c0)) END WHERE (((((((v0.c0)GLOB(rt1.c2)))OR(((v0.c2) NOT BETWEEN (rt1.c3) AND (v0.c1)))))AND(((rt1.c1) NOT NULL))));
SELECT * FROM vt0, rt1 WHERE ((~ (((rt1.c0)<<(rt1.c4))))) ORDER BY ((CAST(rt1.c2 AS INTEGER))<<(((vt0.c0)<>(NULL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt1.c0)<<(rt1.c4))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((CAST(rt1.c2 AS INTEGER))<<(((vt0.c0)!=(NULL)))) DESC  NULLS FIRST);
SELECT * FROM vt0, rt1 WHERE ((~ (((rt1.c0)<<(rt1.c4))))) ORDER BY ((CAST(rt1.c2 AS INTEGER))<<(((vt0.c0)<>(NULL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt1.c0)<<(rt1.c4))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((CAST(rt1.c2 AS INTEGER))<<(((vt0.c0)!=(NULL)))) DESC  NULLS FIRST);
SELECT * FROM vt0, rt1 WHERE ((~ (((rt1.c0)<<(rt1.c4))))) ORDER BY ((CAST(rt1.c2 AS INTEGER))<<(((vt0.c0)<>(NULL)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON (((((rt1.c4)) BETWEEN ((x'')) AND ((NULL)))) BETWEEN (CAST(rt1.c5 AS NUMERIC)) AND ((((rt1.c2, vt0.c0, rt1.c4))!=((rt1.c0, rt1.c5, x'c27c'))))) WHERE (CASE WHEN CASE WHEN rt1.c2 THEN rt1.c3 END THEN rt1.c0 ELSE ((vt0.c0)+(rt1.c0)) END) ORDER BY ((((CAST(rt1.c1 AS TEXT))OR(((((rt1.c0)AND(vt0.c0)))AND(rt1.c2)))))OR(((((rt1.c4)AND(x'')))AND(rt1.c4)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN rt1.c2 THEN rt1.c3 END THEN rt1.c0 ELSE ((vt0.c0)+(rt1.c0)) END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON (((((rt1.c4)) BETWEEN ((x'')) AND ((NULL)))) BETWEEN (CAST(rt1.c5 AS NUMERIC)) AND ((((rt1.c2, vt0.c0, rt1.c4))!=((rt1.c0, rt1.c5, x'c27c'))))) ORDER BY ((((CAST(rt1.c1 AS TEXT))OR(((((rt1.c0)AND(vt0.c0)))AND(rt1.c2)))))OR(((((rt1.c4)AND(x'')))AND(rt1.c4)))) DESC);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON (((((rt1.c4)) BETWEEN ((x'')) AND ((NULL)))) BETWEEN (CAST(rt1.c5 AS NUMERIC)) AND ((((rt1.c2, vt0.c0, rt1.c4))!=((rt1.c0, rt1.c5, x'c27c'))))) WHERE (CASE WHEN CASE WHEN rt1.c2 THEN rt1.c3 END THEN rt1.c0 ELSE ((vt0.c0)+(rt1.c0)) END) ORDER BY ((((CAST(rt1.c1 AS TEXT))OR(((((rt1.c0)AND(vt0.c0)))AND(rt1.c2)))))OR(((((rt1.c4)AND(x'')))AND(rt1.c4)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN rt1.c2 THEN rt1.c3 END THEN rt1.c0 ELSE ((vt0.c0)+(rt1.c0)) END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON (((((rt1.c4)) BETWEEN ((x'')) AND ((NULL)))) BETWEEN (CAST(rt1.c5 AS NUMERIC)) AND ((((rt1.c2, vt0.c0, rt1.c4))!=((rt1.c0, rt1.c5, x'c27c'))))) ORDER BY ((((CAST(rt1.c1 AS TEXT))OR(((((rt1.c0)AND(vt0.c0)))AND(rt1.c2)))))OR(((((rt1.c4)AND(x'')))AND(rt1.c4)))) DESC);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON (((((rt1.c4)) BETWEEN ((x'')) AND ((NULL)))) BETWEEN (CAST(rt1.c5 AS NUMERIC)) AND ((((rt1.c2, vt0.c0, rt1.c4))!=((rt1.c0, rt1.c5, x'c27c'))))) WHERE (CASE WHEN CASE WHEN rt1.c2 THEN rt1.c3 END THEN rt1.c0 ELSE ((vt0.c0)+(rt1.c0)) END) ORDER BY ((((CAST(rt1.c1 AS TEXT))OR(((((rt1.c0)AND(vt0.c0)))AND(rt1.c2)))))OR(((((rt1.c4)AND(x'')))AND(rt1.c4)))) DESC;
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN ((rt1.c5)!=(rt1.c0)) THEN CAST(rt1.c0 AS NUMERIC) ELSE CAST(rt1.c3 AS INTEGER) END) ORDER BY ((((((((TOTAL_CHANGES())AND(CAST(rt1.c4 AS TEXT))))OR(rt1.c3)))AND(((rt1.c4) NOT NULL))))OR(CASE rt1.c2  WHEN rt1.c5 THEN rt1.c1 WHEN '' THEN rt1.c3 WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c5)!=(rt1.c0)) THEN CAST(rt1.c0 AS NUMERIC) ELSE CAST(rt1.c3 AS INTEGER) END) IS TRUE)  as count FROM rt1 ORDER BY ((((((((TOTAL_CHANGES())AND(CAST(rt1.c4 AS TEXT))))OR(rt1.c3)))AND(((rt1.c4) NOT NULL))))OR(CASE rt1.c2  WHEN rt1.c5 THEN rt1.c1 WHEN '' THEN rt1.c3 WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c0 END)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN ((rt1.c5)!=(rt1.c0)) THEN CAST(rt1.c0 AS NUMERIC) ELSE CAST(rt1.c3 AS INTEGER) END) ORDER BY ((((((((TOTAL_CHANGES())AND(CAST(rt1.c4 AS TEXT))))OR(rt1.c3)))AND(((rt1.c4) NOT NULL))))OR(CASE rt1.c2  WHEN rt1.c5 THEN rt1.c1 WHEN '' THEN rt1.c3 WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c5)!=(rt1.c0)) THEN CAST(rt1.c0 AS NUMERIC) ELSE CAST(rt1.c3 AS INTEGER) END) IS TRUE)  as count FROM rt1 ORDER BY ((((((((TOTAL_CHANGES())AND(CAST(rt1.c4 AS TEXT))))OR(rt1.c3)))AND(((rt1.c4) NOT NULL))))OR(CASE rt1.c2  WHEN rt1.c5 THEN rt1.c1 WHEN '' THEN rt1.c3 WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c0 END)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN ((rt1.c5)!=(rt1.c0)) THEN CAST(rt1.c0 AS NUMERIC) ELSE CAST(rt1.c3 AS INTEGER) END) ORDER BY ((((((((TOTAL_CHANGES())AND(CAST(rt1.c4 AS TEXT))))OR(rt1.c3)))AND(((rt1.c4) NOT NULL))))OR(CASE rt1.c2  WHEN rt1.c5 THEN rt1.c1 WHEN '' THEN rt1.c3 WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c0 END)) DESC  NULLS LAST;
SELECT ALL * FROM rt1, vt0, v0 WHERE ((((v0.c1)) BETWEEN ((((rt1.c4)==(v0.c2)))) AND ((json_patch(rt1.c5, v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((v0.c1)) BETWEEN ((((rt1.c4)=(v0.c2)))) AND ((json_patch(rt1.c5, v0.c0))))) IS TRUE)  as count FROM rt1, vt0 NOT INDEXED, v0);
SELECT ALL * FROM rt1, vt0, v0 WHERE ((((v0.c1)) BETWEEN ((((rt1.c4)==(v0.c2)))) AND ((json_patch(rt1.c5, v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((v0.c1)) BETWEEN ((((rt1.c4)=(v0.c2)))) AND ((json_patch(rt1.c5, v0.c0))))) IS TRUE)  as count FROM rt1, vt0 NOT INDEXED, v0);
SELECT COUNT(*) FROM v0, vt0, rt1 WHERE ((((((('Ay9?-n')OR(rt1.c0)))OR(v0.c1)))||((((vt0.c0))<>((v0.c0)))))) ORDER BY ((((v0.c2) IS TRUE)) NOTNULL)  NULLS LAST, ((vt0.c0) NOT BETWEEN (x'') AND (rt1.c3)) COLLATE BINARY COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((((((('Ay9?-n')OR(rt1.c0)))OR(v0.c1)))||((((vt0.c0))<>((v0.c0)))))) IS TRUE)  as count FROM v0, vt0, rt1 ORDER BY ((((v0.c2) IS TRUE)) NOTNULL)  NULLS LAST, ((vt0.c0) NOT BETWEEN (x'') AND (rt1.c3)) COLLATE BINARY COLLATE NOCASE DESC);
SELECT COUNT(*) FROM v0, vt0, rt1 WHERE ((((((('Ay9?-n')OR(rt1.c0)))OR(v0.c1)))||((((vt0.c0))<>((v0.c0)))))) ORDER BY ((((v0.c2) IS TRUE)) NOTNULL)  NULLS LAST, ((vt0.c0) NOT BETWEEN (x'') AND (rt1.c3)) COLLATE BINARY COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((((((('Ay9?-n')OR(rt1.c0)))OR(v0.c1)))||((((vt0.c0))<>((v0.c0)))))) IS TRUE)  as count FROM v0, vt0, rt1 ORDER BY ((((v0.c2) IS TRUE)) NOTNULL)  NULLS LAST, ((vt0.c0) NOT BETWEEN (x'') AND (rt1.c3)) COLLATE BINARY COLLATE NOCASE DESC);
SELECT COUNT(*) FROM v0, vt0, rt1 WHERE ((((((('Ay9?-n')OR(rt1.c0)))OR(v0.c1)))||((((vt0.c0))<>((v0.c0)))))) ORDER BY ((((v0.c2) IS TRUE)) NOTNULL)  NULLS LAST, ((vt0.c0) NOT BETWEEN (x'') AND (rt1.c3)) COLLATE BINARY COLLATE NOCASE DESC;
SELECT * FROM vt0, rt1 WHERE ((((NULL, ((rt1.c0) IS FALSE), (((vt0.c0)) BETWEEN (('-434267102')) AND ((NULL)))))>((CASE rt1.c1  WHEN vt0.c0 THEN vt0.c0 END, (rt1.c3 IN ()), ((((rt1.c4)OR(rt1.c2)))OR(rt1.c4)))))) ORDER BY CASE WHEN rt1.c1 THEN -1509248742 WHEN rt1.c2 THEN 0.8798574488503939 WHEN rt1.c5 THEN rt1.c1 ELSE x'' END COLLATE NOCASE DESC  NULLS LAST, ((((rt1.c2)AND(vt0.c0))) NOTNULL), '-m*'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NULL, ((rt1.c0) IS FALSE), (((vt0.c0)) BETWEEN (('-434267102')) AND ((NULL)))))>((CASE rt1.c1  WHEN vt0.c0 THEN vt0.c0 END, (rt1.c3 IN ()), ((((rt1.c4)OR(rt1.c2)))OR(rt1.c4)))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE WHEN rt1.c1 THEN -1509248742 WHEN rt1.c2 THEN 0.8798574488503939 WHEN rt1.c5 THEN rt1.c1 ELSE x'' END COLLATE NOCASE DESC  NULLS LAST, ((((rt1.c2)AND(vt0.c0))) NOTNULL), '-m*'  NULLS FIRST);
SELECT * FROM vt0, rt1 WHERE ((((NULL, ((rt1.c0) IS FALSE), (((vt0.c0)) BETWEEN (('-434267102')) AND ((NULL)))))>((CASE rt1.c1  WHEN vt0.c0 THEN vt0.c0 END, (rt1.c3 IN ()), ((((rt1.c4)OR(rt1.c2)))OR(rt1.c4)))))) ORDER BY CASE WHEN rt1.c1 THEN -1509248742 WHEN rt1.c2 THEN 0.8798574488503939 WHEN rt1.c5 THEN rt1.c1 ELSE x'' END COLLATE NOCASE DESC  NULLS LAST, ((((rt1.c2)AND(vt0.c0))) NOTNULL), '-m*'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NULL, ((rt1.c0) IS FALSE), (((vt0.c0)) BETWEEN (('-434267102')) AND ((NULL)))))>((CASE rt1.c1  WHEN vt0.c0 THEN vt0.c0 END, (rt1.c3 IN ()), ((((rt1.c4)OR(rt1.c2)))OR(rt1.c4)))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE WHEN rt1.c1 THEN -1509248742 WHEN rt1.c2 THEN 0.8798574488503939 WHEN rt1.c5 THEN rt1.c1 ELSE x'' END COLLATE NOCASE DESC  NULLS LAST, ((((rt1.c2)AND(vt0.c0))) NOTNULL), '-m*'  NULLS FIRST);
SELECT * FROM vt0, rt1 WHERE ((((NULL, ((rt1.c0) IS FALSE), (((vt0.c0)) BETWEEN (('-434267102')) AND ((NULL)))))>((CASE rt1.c1  WHEN vt0.c0 THEN vt0.c0 END, (rt1.c3 IN ()), ((((rt1.c4)OR(rt1.c2)))OR(rt1.c4)))))) ORDER BY CASE WHEN rt1.c1 THEN -1509248742 WHEN rt1.c2 THEN 0.8798574488503939 WHEN rt1.c5 THEN rt1.c1 ELSE x'' END COLLATE NOCASE DESC  NULLS LAST, ((((rt1.c2)AND(vt0.c0))) NOTNULL), '-m*'  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (rt1.c2);
SELECT COUNT(*) FROM rt1, vt0 CROSS JOIN v0 ON CAST(((((((((((((v0.c1)AND(rt1.c1)))OR(rt1.c2)))OR(v0.c2)))AND(rt1.c2)))AND(0.7433663262723638)))AND(v0.c2)) AS REAL) WHERE (((rt1.c3) NOT BETWEEN (NULL) AND (rt1.c2))) ORDER BY ((INSTR(v0.c1, v0.c0))GLOB(load_extension(rt1.c1, rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3) NOT BETWEEN (NULL) AND (rt1.c2))) IS TRUE)  as count FROM rt1, vt0 CROSS JOIN v0 ON CAST(((((((((((((v0.c1)AND(rt1.c1)))OR(rt1.c2)))OR(v0.c2)))AND(rt1.c2)))AND(0.7433663262723638)))AND(v0.c2)) AS REAL) ORDER BY ((INSTR(v0.c1, v0.c0))GLOB(load_extension(rt1.c1, rt1.c2))));
SELECT COUNT(*) FROM rt1, vt0 CROSS JOIN v0 ON CAST(((((((((((((v0.c1)AND(rt1.c1)))OR(rt1.c2)))OR(v0.c2)))AND(rt1.c2)))AND(0.7433663262723638)))AND(v0.c2)) AS REAL) WHERE (((rt1.c3) NOT BETWEEN (NULL) AND (rt1.c2))) ORDER BY ((INSTR(v0.c1, v0.c0))GLOB(load_extension(rt1.c1, rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3) NOT BETWEEN (NULL) AND (rt1.c2))) IS TRUE)  as count FROM rt1, vt0 CROSS JOIN v0 ON CAST(((((((((((((v0.c1)AND(rt1.c1)))OR(rt1.c2)))OR(v0.c2)))AND(rt1.c2)))AND(0.7433663262723638)))AND(v0.c2)) AS REAL) ORDER BY ((INSTR(v0.c1, v0.c0))GLOB(load_extension(rt1.c1, rt1.c2))));
SELECT ALL * FROM v0 CROSS JOIN rt1 ON (((rt1.c1)) BETWEEN ((CAST(rt1.c3 AS TEXT))) AND ((v0.c2))) WHERE (((((0.8173198433720912)AND(rt1.c0))) NOT NULL)) ORDER BY ((rt1.c1) NOT NULL), ((v0.c1) NOT BETWEEN (rt1.c1) AND ('')) COLLATE NOCASE DESC  NULLS FIRST, ((((rt1.c2) NOT NULL))IS NOT(UNLIKELY(rt1.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.8173198433720912)AND(rt1.c0))) NOT NULL)) IS TRUE)  as count FROM v0 CROSS JOIN rt1 ON (((rt1.c1)) BETWEEN ((CAST(rt1.c3 AS TEXT))) AND ((v0.c2))) ORDER BY ((rt1.c1) NOT NULL), ((v0.c1) NOT BETWEEN (rt1.c1) AND ('')) COLLATE NOCASE DESC  NULLS FIRST, ((((rt1.c2) NOT NULL))IS NOT(UNLIKELY(rt1.c2))) ASC  NULLS LAST);
SELECT ALL * FROM v0 CROSS JOIN rt1 ON (((rt1.c1)) BETWEEN ((CAST(rt1.c3 AS TEXT))) AND ((v0.c2))) WHERE (((((0.8173198433720912)AND(rt1.c0))) NOT NULL)) ORDER BY ((rt1.c1) NOT NULL), ((v0.c1) NOT BETWEEN (rt1.c1) AND ('')) COLLATE NOCASE DESC  NULLS FIRST, ((((rt1.c2) NOT NULL))IS NOT(UNLIKELY(rt1.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.8173198433720912)AND(rt1.c0))) NOT NULL)) IS TRUE)  as count FROM v0 CROSS JOIN rt1 ON (((rt1.c1)) BETWEEN ((CAST(rt1.c3 AS TEXT))) AND ((v0.c2))) ORDER BY ((rt1.c1) NOT NULL), ((v0.c1) NOT BETWEEN (rt1.c1) AND ('')) COLLATE NOCASE DESC  NULLS FIRST, ((((rt1.c2) NOT NULL))IS NOT(UNLIKELY(rt1.c2))) ASC  NULLS LAST);
SELECT ALL * FROM v0 CROSS JOIN rt1 ON (((rt1.c1)) BETWEEN ((CAST(rt1.c3 AS TEXT))) AND ((v0.c2))) WHERE (((((0.8173198433720912)AND(rt1.c0))) NOT NULL)) ORDER BY ((rt1.c1) NOT NULL), ((v0.c1) NOT BETWEEN (rt1.c1) AND ('')) COLLATE NOCASE DESC  NULLS FIRST, ((((rt1.c2) NOT NULL))IS NOT(UNLIKELY(rt1.c2))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, vt0, v0 WHERE ((((~ (x''))) IS TRUE)) ORDER BY (vt0.c0 IN ());
SELECT SUM(count) FROM (SELECT ALL (((((~ (x''))) IS TRUE)) IS TRUE)  as count FROM rt1, vt0, v0 ORDER BY (vt0.c0 IN ()));
SELECT ALL COUNT(*) FROM rt1, vt0, v0 WHERE ((((~ (x''))) IS TRUE)) ORDER BY (vt0.c0 IN ());
SELECT SUM(count) FROM (SELECT ALL (((((~ (x''))) IS TRUE)) IS TRUE)  as count FROM rt1, vt0, v0 ORDER BY (vt0.c0 IN ()));
SELECT ALL COUNT(*) FROM rt1, vt0, v0 WHERE ((((~ (x''))) IS TRUE)) ORDER BY (vt0.c0 IN ());
SELECT ALL * FROM vt0, rt1 LEFT OUTER JOIN v0 ON ((vt0.c0) NOT NULL) WHERE (((CASE v0.c1  WHEN rt1.c2 THEN v0.c1 END)OR((((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))))) ORDER BY ((rt1.c4) ISNULL) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c1  WHEN rt1.c2 THEN v0.c1 END)OR((((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, rt1 LEFT OUTER JOIN v0 ON ((vt0.c0) NOT NULL) ORDER BY ((rt1.c4) ISNULL) COLLATE NOCASE DESC);
SELECT ALL * FROM vt0, rt1 LEFT OUTER JOIN v0 ON ((vt0.c0) NOT NULL) WHERE (((CASE v0.c1  WHEN rt1.c2 THEN v0.c1 END)OR((((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))))) ORDER BY ((rt1.c4) ISNULL) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c1  WHEN rt1.c2 THEN v0.c1 END)OR((((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, rt1 LEFT OUTER JOIN v0 ON ((vt0.c0) NOT NULL) ORDER BY ((rt1.c4) ISNULL) COLLATE NOCASE DESC);
SELECT ALL * FROM vt0, rt1 LEFT OUTER JOIN v0 ON ((vt0.c0) NOT NULL) WHERE (((CASE v0.c1  WHEN rt1.c2 THEN v0.c1 END)OR((((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))))) ORDER BY ((rt1.c4) ISNULL) COLLATE NOCASE DESC;
SELECT COUNT(*) FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (NULL);
SELECT ALL * FROM rt1, vt0 WHERE ((((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c5)) IN ((((rt1.c0)) NOT BETWEEN ((rt1.c3)) AND ((vt0.c0))), CASE rt1.c2  WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c4 THEN x'c755' WHEN rt1.c4 THEN x'' ELSE rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c5)) IN ((((rt1.c0)) NOT BETWEEN ((rt1.c3)) AND ((vt0.c0))), CASE rt1.c2  WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c4 THEN x'c755' WHEN rt1.c4 THEN x'' ELSE rt1.c0 END))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE ((((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c5)) IN ((((rt1.c0)) NOT BETWEEN ((rt1.c3)) AND ((vt0.c0))), CASE rt1.c2  WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c4 THEN x'c755' WHEN rt1.c4 THEN x'' ELSE rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c5)) IN ((((rt1.c0)) NOT BETWEEN ((rt1.c3)) AND ((vt0.c0))), CASE rt1.c2  WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c4 THEN x'c755' WHEN rt1.c4 THEN x'' ELSE rt1.c0 END))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE ((((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c5)) IN ((((rt1.c0)) NOT BETWEEN ((rt1.c3)) AND ((vt0.c0))), CASE rt1.c2  WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c4 THEN x'c755' WHEN rt1.c4 THEN x'' ELSE rt1.c0 END)));
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, vt0, rt1 WHERE ((+ (json_extract(v0.c0, rt1.c2, v0.c1, rt1.c2))));
SELECT SUM(count) FROM (SELECT (((+ (json_extract(v0.c0, rt1.c2, v0.c1, rt1.c2)))) IS TRUE)  as count FROM v0, vt0 NOT INDEXED, rt1);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, vt0, rt1 WHERE ((+ (json_extract(v0.c0, rt1.c2, v0.c1, rt1.c2))));
SELECT SUM(count) FROM (SELECT (((+ (json_extract(v0.c0, rt1.c2, v0.c1, rt1.c2)))) IS TRUE)  as count FROM v0, vt0 NOT INDEXED, rt1);
SELECT * FROM rt1 WHERE (CAST((((rt1.c0)) BETWEEN ((rt1.c5)) AND ((rt1.c5))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c0)) BETWEEN ((rt1.c5)) AND ((rt1.c5))) AS BLOB)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST((((rt1.c0)) BETWEEN ((rt1.c5)) AND ((rt1.c5))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c0)) BETWEEN ((rt1.c5)) AND ((rt1.c5))) AS BLOB)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST((((rt1.c0)) BETWEEN ((rt1.c5)) AND ((rt1.c5))) AS BLOB));
SELECT ALL COUNT(*) FROM rt1 WHERE (LTRIM((rt1.c4 IN ()))) ORDER BY (+ (LOWER(DISTINCT rt1.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LTRIM((rt1.c4 IN ()))) IS TRUE)  as count FROM rt1 ORDER BY (+ (LOWER(DISTINCT rt1.c2)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (LTRIM((rt1.c4 IN ()))) ORDER BY (+ (LOWER(DISTINCT rt1.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LTRIM((rt1.c4 IN ()))) IS TRUE)  as count FROM rt1 ORDER BY (+ (LOWER(DISTINCT rt1.c2)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (LTRIM((rt1.c4 IN ()))) ORDER BY (+ (LOWER(DISTINCT rt1.c2)))  NULLS LAST;
SELECT * FROM v0, rt1 WHERE (CAST(v0.c2 AS BLOB)) ORDER BY ((CASE WHEN v0.c2 THEN v0.c1 END) NOT BETWEEN (rt1.c1) AND (json_array(rt1.c5, v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c2 AS BLOB)) IS TRUE)  as count FROM v0, rt1 ORDER BY ((CASE WHEN v0.c2 THEN v0.c1 END) NOT BETWEEN (rt1.c1) AND (json_array(rt1.c5, v0.c0))) DESC);
SELECT * FROM v0, rt1 WHERE (CAST(v0.c2 AS BLOB)) ORDER BY ((CASE WHEN v0.c2 THEN v0.c1 END) NOT BETWEEN (rt1.c1) AND (json_array(rt1.c5, v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c2 AS BLOB)) IS TRUE)  as count FROM v0, rt1 ORDER BY ((CASE WHEN v0.c2 THEN v0.c1 END) NOT BETWEEN (rt1.c1) AND (json_array(rt1.c5, v0.c0))) DESC);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c5))  WHEN ((rt1.c0)>=(rt1.c5)) THEN (~ (rt1.c3)) END) ORDER BY COALESCE(DISTINCT (NOT (vt0.c0)), ((rt1.c2)<>(rt1.c4)));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c5))  WHEN ((rt1.c0)>=(rt1.c5)) THEN (~ (rt1.c3)) END) IS TRUE)  as count FROM rt1, vt0 ORDER BY COALESCE(DISTINCT (NOT (vt0.c0)), ((rt1.c2)!=(rt1.c4))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c5))  WHEN ((rt1.c0)>=(rt1.c5)) THEN (~ (rt1.c3)) END) ORDER BY COALESCE(DISTINCT (NOT (vt0.c0)), ((rt1.c2)<>(rt1.c4)));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c5))  WHEN ((rt1.c0)>=(rt1.c5)) THEN (~ (rt1.c3)) END) IS TRUE)  as count FROM rt1, vt0 ORDER BY COALESCE(DISTINCT (NOT (vt0.c0)), ((rt1.c2)!=(rt1.c4))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c5))  WHEN ((rt1.c0)>=(rt1.c5)) THEN (~ (rt1.c3)) END) ORDER BY COALESCE(DISTINCT (NOT (vt0.c0)), ((rt1.c2)<>(rt1.c4)));
SELECT COUNT(*) FROM rt1 WHERE (CAST(rt1.c4 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c4 AS BLOB)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CAST(rt1.c4 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c4 AS BLOB)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CAST(rt1.c4 AS BLOB));
SELECT ALL COUNT(*) FROM v0 WHERE ((((0.07415567944344625 IN ()))>=(((v0.c0)>=('1599252879')))));
SELECT SUM(count) FROM (SELECT ALL (((((0.07415567944344625 IN ()))>=(((v0.c0)>=('1599252879'))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((0.07415567944344625 IN ()))>=(((v0.c0)>=('1599252879')))));
SELECT SUM(count) FROM (SELECT ALL (((((0.07415567944344625 IN ()))>=(((v0.c0)>=('1599252879'))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((0.07415567944344625 IN ()))>=(((v0.c0)>=('1599252879')))));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt1 ON CAST(((rt1.c2)&(rt1.c0)) AS REAL) WHERE (((rt1.c2)IS NOT((~ (rt1.c4))))) ORDER BY ((((((rt1.c1) ISNULL))AND((~ (rt1.c3)))))OR(((rt1.c4) IS FALSE))) ASC  NULLS LAST, TRIM(CASE NULL  WHEN v0.c2 THEN rt1.c2 END);
SELECT SUM(count) FROM (SELECT ((((rt1.c2)IS NOT((~ (rt1.c4))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt1 ON CAST(((rt1.c2)&(rt1.c0)) AS REAL) ORDER BY ((((((rt1.c1) ISNULL))AND((~ (rt1.c3)))))OR(((rt1.c4) IS FALSE))) ASC  NULLS LAST, TRIM(CASE NULL  WHEN v0.c2 THEN rt1.c2 END));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt1 ON CAST(((rt1.c2)&(rt1.c0)) AS REAL) WHERE (((rt1.c2)IS NOT((~ (rt1.c4))))) ORDER BY ((((((rt1.c1) ISNULL))AND((~ (rt1.c3)))))OR(((rt1.c4) IS FALSE))) ASC  NULLS LAST, TRIM(CASE NULL  WHEN v0.c2 THEN rt1.c2 END);
SELECT SUM(count) FROM (SELECT ((((rt1.c2)IS NOT((~ (rt1.c4))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt1 ON CAST(((rt1.c2)&(rt1.c0)) AS REAL) ORDER BY ((((((rt1.c1) ISNULL))AND((~ (rt1.c3)))))OR(((rt1.c4) IS FALSE))) ASC  NULLS LAST, TRIM(CASE NULL  WHEN v0.c2 THEN rt1.c2 END));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt1 ON CAST(((rt1.c2)&(rt1.c0)) AS REAL) WHERE (((rt1.c2)IS NOT((~ (rt1.c4))))) ORDER BY ((((((rt1.c1) ISNULL))AND((~ (rt1.c3)))))OR(((rt1.c4) IS FALSE))) ASC  NULLS LAST, TRIM(CASE NULL  WHEN v0.c2 THEN rt1.c2 END);
SELECT ALL * FROM vt0, v0, rt1 WHERE ((+ (((v0.c2)<>(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((v0.c2)<>(rt1.c1))))) IS TRUE)  as count FROM vt0, v0, rt1);
SELECT ALL * FROM vt0, v0, rt1 WHERE ((+ (((v0.c2)<>(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((v0.c2)<>(rt1.c1))))) IS TRUE)  as count FROM vt0, v0, rt1);
SELECT ALL * FROM vt0, v0, rt1 WHERE ((+ (((v0.c2)<>(rt1.c1)))));
SELECT COUNT(*) FROM vt0, rt1, v0 WHERE ((((rt1.c3, vt0.c0, v0.c2)) NOT BETWEEN ((rt1.c1, ((rt1.c3)!=(v0.c1)), CAST(vt0.c0 AS NUMERIC))) AND ((CAST(NULL AS NUMERIC), CASE WHEN rt1.c4 THEN rt1.c3 END, ((0.8264162310460443) NOT BETWEEN (v0.c2) AND (rt1.c2)))))) ORDER BY (NOT (NULL)) ASC, (((NULL)) NOT BETWEEN (((rt1.c4 IN (rt1.c5)))) AND (((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c3, vt0.c0, v0.c2)) NOT BETWEEN ((rt1.c1, ((rt1.c3)!=(v0.c1)), CAST(vt0.c0 AS NUMERIC))) AND ((CAST(NULL AS NUMERIC), CASE WHEN rt1.c4 THEN rt1.c3 END, ((0.8264162310460443) NOT BETWEEN (v0.c2) AND (rt1.c2)))))) IS TRUE)  as count FROM vt0, rt1, v0 ORDER BY (NOT (NULL)) ASC, (((NULL)) NOT BETWEEN (((rt1.c4 IN (rt1.c5)))) AND (((- (v0.c0))))));
SELECT COUNT(*) FROM vt0, rt1, v0 WHERE ((((rt1.c3, vt0.c0, v0.c2)) NOT BETWEEN ((rt1.c1, ((rt1.c3)!=(v0.c1)), CAST(vt0.c0 AS NUMERIC))) AND ((CAST(NULL AS NUMERIC), CASE WHEN rt1.c4 THEN rt1.c3 END, ((0.8264162310460443) NOT BETWEEN (v0.c2) AND (rt1.c2)))))) ORDER BY (NOT (NULL)) ASC, (((NULL)) NOT BETWEEN (((rt1.c4 IN (rt1.c5)))) AND (((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c3, vt0.c0, v0.c2)) NOT BETWEEN ((rt1.c1, ((rt1.c3)!=(v0.c1)), CAST(vt0.c0 AS NUMERIC))) AND ((CAST(NULL AS NUMERIC), CASE WHEN rt1.c4 THEN rt1.c3 END, ((0.8264162310460443) NOT BETWEEN (v0.c2) AND (rt1.c2)))))) IS TRUE)  as count FROM vt0, rt1, v0 ORDER BY (NOT (NULL)) ASC, (((NULL)) NOT BETWEEN (((rt1.c4 IN (rt1.c5)))) AND (((- (v0.c0))))));
SELECT COUNT(*) FROM vt0, rt1, v0 WHERE ((((rt1.c3, vt0.c0, v0.c2)) NOT BETWEEN ((rt1.c1, ((rt1.c3)!=(v0.c1)), CAST(vt0.c0 AS NUMERIC))) AND ((CAST(NULL AS NUMERIC), CASE WHEN rt1.c4 THEN rt1.c3 END, ((0.8264162310460443) NOT BETWEEN (v0.c2) AND (rt1.c2)))))) ORDER BY (NOT (NULL)) ASC, (((NULL)) NOT BETWEEN (((rt1.c4 IN (rt1.c5)))) AND (((- (v0.c0)))));
SELECT ALL * FROM rt1 WHERE (CASE rt1.c0  WHEN rt1.c4 THEN (rt1.c1 IN ()) WHEN rt1.c2 COLLATE BINARY THEN NULL COLLATE BINARY WHEN SQLITE_COMPILEOPTION_GET(rt1.c5) THEN (-1.281191471E9 IN ()) ELSE 0x12fd8764 END);
SELECT SUM(count) FROM (SELECT ((CASE rt1.c0  WHEN rt1.c4 THEN (rt1.c1 IN ()) WHEN rt1.c2 COLLATE BINARY THEN NULL COLLATE BINARY WHEN SQLITE_COMPILEOPTION_GET(rt1.c5) THEN (-1.281191471E9 IN ()) ELSE 0X12fd8764 END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE rt1.c0  WHEN rt1.c4 THEN (rt1.c1 IN ()) WHEN rt1.c2 COLLATE BINARY THEN NULL COLLATE BINARY WHEN SQLITE_COMPILEOPTION_GET(rt1.c5) THEN (-1.281191471E9 IN ()) ELSE 0x12fd8764 END);
SELECT SUM(count) FROM (SELECT ((CASE rt1.c0  WHEN rt1.c4 THEN (rt1.c1 IN ()) WHEN rt1.c2 COLLATE BINARY THEN NULL COLLATE BINARY WHEN SQLITE_COMPILEOPTION_GET(rt1.c5) THEN (-1.281191471E9 IN ()) ELSE 0X12fd8764 END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE rt1.c0  WHEN rt1.c4 THEN (rt1.c1 IN ()) WHEN rt1.c2 COLLATE BINARY THEN NULL COLLATE BINARY WHEN SQLITE_COMPILEOPTION_GET(rt1.c5) THEN (-1.281191471E9 IN ()) ELSE 0x12fd8764 END);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)GLOB(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)GLOB(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)GLOB(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)GLOB(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)GLOB(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c3)LIKE(rt1.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)LIKE(rt1.c2))) NOTNULL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c3)LIKE(rt1.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)LIKE(rt1.c2))) NOTNULL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c3)LIKE(rt1.c2))) NOTNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (3.66678145E8)) IN ((vt0.c0 IN ())))) ORDER BY ((((((((((vt0.c0)<<(vt0.c0)))AND(((vt0.c0)|(vt0.c0)))))AND('䈧^8B+矑r')))OR((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))OR(0.4194450309163328)) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (3.66678145E8)) IN ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)<<(vt0.c0)))AND(((vt0.c0)|(vt0.c0)))))AND('䈧^8B+矑r')))OR((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))OR(0.4194450309163328)) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (3.66678145E8)) IN ((vt0.c0 IN ())))) ORDER BY ((((((((((vt0.c0)<<(vt0.c0)))AND(((vt0.c0)|(vt0.c0)))))AND('䈧^8B+矑r')))OR((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))OR(0.4194450309163328)) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (3.66678145E8)) IN ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)<<(vt0.c0)))AND(((vt0.c0)|(vt0.c0)))))AND('䈧^8B+矑r')))OR((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))OR(0.4194450309163328)) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (3.66678145E8)) IN ((vt0.c0 IN ())))) ORDER BY ((((((((((vt0.c0)<<(vt0.c0)))AND(((vt0.c0)|(vt0.c0)))))AND('䈧^8B+矑r')))OR((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))OR(0.4194450309163328)) ASC;
SELECT ALL * FROM v0 WHERE (CAST(v0.c0 AS INTEGER) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS INTEGER) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST(v0.c0 AS INTEGER) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS INTEGER) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST(v0.c0 AS INTEGER) COLLATE NOCASE COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt1, vt0 INNER JOIN v0 ON ((rt1.c1 COLLATE NOCASE) NOT BETWEEN (CAST(rt1.c3 AS NUMERIC)) AND (((x'') BETWEEN (rt1.c0) AND (rt1.c4)))) WHERE ((((((rt1.c1)OR(rt1.c4)))AND(rt1.c4)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((rt1.c1)OR(rt1.c4)))AND(rt1.c4)) IN ())) IS TRUE)  as count FROM rt1, vt0 INNER JOIN v0 ON ((rt1.c1 COLLATE NOCASE) NOT BETWEEN (CAST(rt1.c3 AS NUMERIC)) AND (((x'') BETWEEN (rt1.c0) AND (rt1.c4)))));
SELECT ALL COUNT(*) FROM rt1, vt0 INNER JOIN v0 ON ((rt1.c1 COLLATE NOCASE) NOT BETWEEN (CAST(rt1.c3 AS NUMERIC)) AND (((x'') BETWEEN (rt1.c0) AND (rt1.c4)))) WHERE ((((((rt1.c1)OR(rt1.c4)))AND(rt1.c4)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((rt1.c1)OR(rt1.c4)))AND(rt1.c4)) IN ())) IS TRUE)  as count FROM rt1, vt0 INNER JOIN v0 ON ((rt1.c1 COLLATE NOCASE) NOT BETWEEN (CAST(rt1.c3 AS NUMERIC)) AND (((x'') BETWEEN (rt1.c0) AND (rt1.c4)))));
SELECT ALL COUNT(*) FROM rt1, vt0 INNER JOIN v0 ON ((rt1.c1 COLLATE NOCASE) NOT BETWEEN (CAST(rt1.c3 AS NUMERIC)) AND (((x'') BETWEEN (rt1.c0) AND (rt1.c4)))) WHERE ((((((rt1.c1)OR(rt1.c4)))AND(rt1.c4)) IN ()));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON (+ ((((vt0.c0, rt1.c3, v0.c2))!=((v0.c1, vt0.c0, rt1.c5))))) LEFT OUTER JOIN rt1 ON x'' WHERE (((((((((json_remove(rt1.c4, v0.c2))AND(((v0.c1)|(rt1.c0)))))OR((- (vt0.c0)))))AND(LENGTH(v0.c1))))AND((- (0.1633631748667954))))) ORDER BY highlight(load_extension(vt0.c0), ((((vt0.c0)OR(v0.c0)))OR(rt1.c3)), v0.c1 COLLATE NOCASE, ((rt1.c4) NOT NULL)) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((json_remove(rt1.c4, v0.c2))AND(((v0.c1)|(rt1.c0)))))OR((- (vt0.c0)))))AND(LENGTH(v0.c1))))AND((- (0.1633631748667954))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (+ ((((vt0.c0, rt1.c3, v0.c2))!=((v0.c1, vt0.c0, rt1.c5))))) LEFT OUTER JOIN rt1 ON x'' ORDER BY highlight(load_extension(vt0.c0), ((((vt0.c0)OR(v0.c0)))OR(rt1.c3)), v0.c1 COLLATE NOCASE, ((rt1.c4) NOT NULL)) ASC);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON (+ ((((vt0.c0, rt1.c3, v0.c2))!=((v0.c1, vt0.c0, rt1.c5))))) LEFT OUTER JOIN rt1 ON x'' WHERE (((((((((json_remove(rt1.c4, v0.c2))AND(((v0.c1)|(rt1.c0)))))OR((- (vt0.c0)))))AND(LENGTH(v0.c1))))AND((- (0.1633631748667954))))) ORDER BY highlight(load_extension(vt0.c0), ((((vt0.c0)OR(v0.c0)))OR(rt1.c3)), v0.c1 COLLATE NOCASE, ((rt1.c4) NOT NULL)) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((json_remove(rt1.c4, v0.c2))AND(((v0.c1)|(rt1.c0)))))OR((- (vt0.c0)))))AND(LENGTH(v0.c1))))AND((- (0.1633631748667954))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (+ ((((vt0.c0, rt1.c3, v0.c2))!=((v0.c1, vt0.c0, rt1.c5))))) LEFT OUTER JOIN rt1 ON x'' ORDER BY highlight(load_extension(vt0.c0), ((((vt0.c0)OR(v0.c0)))OR(rt1.c3)), v0.c1 COLLATE NOCASE, ((rt1.c4) NOT NULL)) ASC);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON (+ ((((vt0.c0, rt1.c3, v0.c2))!=((v0.c1, vt0.c0, rt1.c5))))) LEFT OUTER JOIN rt1 ON x'' WHERE (((((((((json_remove(rt1.c4, v0.c2))AND(((v0.c1)|(rt1.c0)))))OR((- (vt0.c0)))))AND(LENGTH(v0.c1))))AND((- (0.1633631748667954))))) ORDER BY highlight(load_extension(vt0.c0), ((((vt0.c0)OR(v0.c0)))OR(rt1.c3)), v0.c1 COLLATE NOCASE, ((rt1.c4) NOT NULL)) ASC;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (LOWER(DISTINCT (+ (v0.c0)))) ORDER BY GLOB(IFNULL(v0.c1, v0.c2), (((v0.c0)) NOT BETWEEN ((1906772208)) AND ((v0.c2)))), (~ (((vt0.c0)-(x'')))) DESC;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT (+ (v0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY GLOB(IFNULL(v0.c1, v0.c2), (((v0.c0)) NOT BETWEEN ((1906772208)) AND ((v0.c2)))), (~ (((vt0.c0)-(x'')))) DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (LOWER(DISTINCT (+ (v0.c0)))) ORDER BY GLOB(IFNULL(v0.c1, v0.c2), (((v0.c0)) NOT BETWEEN ((1906772208)) AND ((v0.c2)))), (~ (((vt0.c0)-(x'')))) DESC;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT (+ (v0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY GLOB(IFNULL(v0.c1, v0.c2), (((v0.c0)) NOT BETWEEN ((1906772208)) AND ((v0.c2)))), (~ (((vt0.c0)-(x'')))) DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (LOWER(DISTINCT (+ (v0.c0)))) ORDER BY GLOB(IFNULL(v0.c1, v0.c2), (((v0.c0)) NOT BETWEEN ((1906772208)) AND ((v0.c2)))), (~ (((vt0.c0)-(x'')))) DESC;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON ((((CASE WHEN rt1.c3 THEN rt1.c1 END)OR((((vt0.c0))>=((v0.c2))))))OR((+ (rt1.c1)))) INNER JOIN v0 ON (+ ((0.5161973972710424 IN ()))) WHERE ((((((((((((rt1.c5, rt1.c2, rt1.c0))>=((rt1.c3, rt1.c1, rt1.c3))))OR((((0.6100351649147211)) BETWEEN ((v0.c2)) AND ((rt1.c5))))))AND(TRIM(rt1.c3, rt1.c5))))AND(((rt1.c4) BETWEEN (rt1.c5) AND (rt1.c4)))))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((((((((((rt1.c5, rt1.c2, rt1.c0))>=((rt1.c3, rt1.c1, rt1.c3))))OR((((0.6100351649147211)) BETWEEN ((v0.c2)) AND ((rt1.c5))))))AND(TRIM(rt1.c3, rt1.c5))))AND(((rt1.c4) BETWEEN (rt1.c5) AND (rt1.c4)))))OR(vt0.c0))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON ((((CASE WHEN rt1.c3 THEN rt1.c1 END)OR((((vt0.c0))>=((v0.c2))))))OR((+ (rt1.c1)))) INNER JOIN v0 ON (+ ((0.5161973972710424 IN ()))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON ((((CASE WHEN rt1.c3 THEN rt1.c1 END)OR((((vt0.c0))>=((v0.c2))))))OR((+ (rt1.c1)))) INNER JOIN v0 ON (+ ((0.5161973972710424 IN ()))) WHERE ((((((((((((rt1.c5, rt1.c2, rt1.c0))>=((rt1.c3, rt1.c1, rt1.c3))))OR((((0.6100351649147211)) BETWEEN ((v0.c2)) AND ((rt1.c5))))))AND(TRIM(rt1.c3, rt1.c5))))AND(((rt1.c4) BETWEEN (rt1.c5) AND (rt1.c4)))))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((((((((((rt1.c5, rt1.c2, rt1.c0))>=((rt1.c3, rt1.c1, rt1.c3))))OR((((0.6100351649147211)) BETWEEN ((v0.c2)) AND ((rt1.c5))))))AND(TRIM(rt1.c3, rt1.c5))))AND(((rt1.c4) BETWEEN (rt1.c5) AND (rt1.c4)))))OR(vt0.c0))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON ((((CASE WHEN rt1.c3 THEN rt1.c1 END)OR((((vt0.c0))>=((v0.c2))))))OR((+ (rt1.c1)))) INNER JOIN v0 ON (+ ((0.5161973972710424 IN ()))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON ((((CASE WHEN rt1.c3 THEN rt1.c1 END)OR((((vt0.c0))>=((v0.c2))))))OR((+ (rt1.c1)))) INNER JOIN v0 ON (+ ((0.5161973972710424 IN ()))) WHERE ((((((((((((rt1.c5, rt1.c2, rt1.c0))>=((rt1.c3, rt1.c1, rt1.c3))))OR((((0.6100351649147211)) BETWEEN ((v0.c2)) AND ((rt1.c5))))))AND(TRIM(rt1.c3, rt1.c5))))AND(((rt1.c4) BETWEEN (rt1.c5) AND (rt1.c4)))))OR(vt0.c0)));
SELECT ALL * FROM v0, rt1 WHERE ((((1633727042, rt1.c3, rt1.c2, '857103362', v0.c2)) BETWEEN ((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c5 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c5 END, rt1.c5, rt1.c4 COLLATE RTRIM, (('1750278656')>>(rt1.c3)), (rt1.c3 IN (v0.c0)))) AND ((CAST(rt1.c2 AS BLOB), ((rt1.c5) NOT BETWEEN (v0.c2) AND (v0.c0)), (87953444 IN (v0.c1)), ((((rt1.c1)AND(v0.c2)))OR(rt1.c2)), rt1.c5 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((1633727042, rt1.c3, rt1.c2, '857103362', v0.c2)) BETWEEN ((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c5 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c5 END, rt1.c5, rt1.c4 COLLATE RTRIM, (('1750278656')>>(rt1.c3)), (rt1.c3 IN (v0.c0)))) AND ((CAST(rt1.c2 AS BLOB), ((rt1.c5) NOT BETWEEN (v0.c2) AND (v0.c0)), (87953444 IN (v0.c1)), ((((rt1.c1)AND(v0.c2)))OR(rt1.c2)), rt1.c5 COLLATE BINARY)))) IS TRUE)  as count FROM v0, rt1);
SELECT ALL * FROM v0, rt1 WHERE ((((1633727042, rt1.c3, rt1.c2, '857103362', v0.c2)) BETWEEN ((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c5 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c5 END, rt1.c5, rt1.c4 COLLATE RTRIM, (('1750278656')>>(rt1.c3)), (rt1.c3 IN (v0.c0)))) AND ((CAST(rt1.c2 AS BLOB), ((rt1.c5) NOT BETWEEN (v0.c2) AND (v0.c0)), (87953444 IN (v0.c1)), ((((rt1.c1)AND(v0.c2)))OR(rt1.c2)), rt1.c5 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((1633727042, rt1.c3, rt1.c2, '857103362', v0.c2)) BETWEEN ((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c5 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c5 END, rt1.c5, rt1.c4 COLLATE RTRIM, (('1750278656')>>(rt1.c3)), (rt1.c3 IN (v0.c0)))) AND ((CAST(rt1.c2 AS BLOB), ((rt1.c5) NOT BETWEEN (v0.c2) AND (v0.c0)), (87953444 IN (v0.c1)), ((((rt1.c1)AND(v0.c2)))OR(rt1.c2)), rt1.c5 COLLATE BINARY)))) IS TRUE)  as count FROM v0, rt1);
SELECT ALL * FROM v0, rt1 WHERE ((((1633727042, rt1.c3, rt1.c2, '857103362', v0.c2)) BETWEEN ((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c5 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c5 END, rt1.c5, rt1.c4 COLLATE RTRIM, (('1750278656')>>(rt1.c3)), (rt1.c3 IN (v0.c0)))) AND ((CAST(rt1.c2 AS BLOB), ((rt1.c5) NOT BETWEEN (v0.c2) AND (v0.c0)), (87953444 IN (v0.c1)), ((((rt1.c1)AND(v0.c2)))OR(rt1.c2)), rt1.c5 COLLATE BINARY))));
SELECT ALL * FROM v0 WHERE ((((+ (v0.c1)))IS NOT((+ (v0.c1))))) ORDER BY (((((v0.c1) BETWEEN (v0.c2) AND (v0.c0))))!=((CAST(v0.c0 AS BLOB))))  NULLS LAST, ((((v0.c1)|(v0.c1)))/(((v0.c1)LIKE(v0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c1)))IS NOT((+ (v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c1) BETWEEN (v0.c2) AND (v0.c0))))!=((CAST(v0.c0 AS BLOB))))  NULLS LAST, ((((v0.c1)|(v0.c1)))/(((v0.c1)LIKE(v0.c2)))));
SELECT ALL * FROM v0 WHERE ((((+ (v0.c1)))IS NOT((+ (v0.c1))))) ORDER BY (((((v0.c1) BETWEEN (v0.c2) AND (v0.c0))))!=((CAST(v0.c0 AS BLOB))))  NULLS LAST, ((((v0.c1)|(v0.c1)))/(((v0.c1)LIKE(v0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c1)))IS NOT((+ (v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c1) BETWEEN (v0.c2) AND (v0.c0))))!=((CAST(v0.c0 AS BLOB))))  NULLS LAST, ((((v0.c1)|(v0.c1)))/(((v0.c1)LIKE(v0.c2)))));
SELECT ALL * FROM v0 WHERE ((((+ (v0.c1)))IS NOT((+ (v0.c1))))) ORDER BY (((((v0.c1) BETWEEN (v0.c2) AND (v0.c0))))!=((CAST(v0.c0 AS BLOB))))  NULLS LAST, ((((v0.c1)|(v0.c1)))/(((v0.c1)LIKE(v0.c2))));
SELECT COUNT(*) FROM rt1, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt1, v0);
SELECT COUNT(*) FROM rt1, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt1, v0);
SELECT COUNT(*) FROM rt1, v0 WHERE (v0.c0);
SELECT ALL * FROM rt1, vt0, v0 WHERE ((NOT (rt1.c0))) ORDER BY (((rt1.c2)>=(rt1.c4)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (rt1.c0))) IS TRUE)  as count FROM rt1, vt0, v0 ORDER BY (((rt1.c2)>=(rt1.c4)) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, vt0, v0 WHERE ((NOT (rt1.c0))) ORDER BY (((rt1.c2)>=(rt1.c4)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (rt1.c0))) IS TRUE)  as count FROM rt1, vt0, v0 ORDER BY (((rt1.c2)>=(rt1.c4)) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, vt0, v0 WHERE ((NOT (rt1.c0))) ORDER BY (((rt1.c2)>=(rt1.c4)) IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE ((((((NULL)AND(rt1.c0)))OR(rt1.c5)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL)AND(rt1.c0)))OR(rt1.c5)) IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((NULL)AND(rt1.c0)))OR(rt1.c5)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL)AND(rt1.c0)))OR(rt1.c5)) IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((NULL)AND(rt1.c0)))OR(rt1.c5)) IN ()));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((NOT (((vt0.c0) NOT NULL)))) ORDER BY (((rt1.c3)) NOT BETWEEN ((rt1.c4)) AND (((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((rt1.c3)) NOT BETWEEN ((rt1.c4)) AND (((rt1.c2 IN ())))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((NOT (((vt0.c0) NOT NULL)))) ORDER BY (((rt1.c3)) NOT BETWEEN ((rt1.c4)) AND (((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((rt1.c3)) NOT BETWEEN ((rt1.c4)) AND (((rt1.c2 IN ())))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((NOT (((vt0.c0) NOT NULL)))) ORDER BY (((rt1.c3)) NOT BETWEEN ((rt1.c4)) AND (((rt1.c2 IN ()))));
SELECT COUNT(*) FROM vt0, rt1, v0 WHERE ('0.2741371045457982');
SELECT SUM(count) FROM (SELECT (('0.2741371045457982') IS TRUE)  as count FROM vt0, rt1, v0);
SELECT COUNT(*) FROM vt0, rt1, v0 WHERE ('0.2741371045457982');
SELECT SUM(count) FROM (SELECT (('0.2741371045457982') IS TRUE)  as count FROM vt0, rt1, v0);
SELECT COUNT(*) FROM vt0, rt1, v0 WHERE ('0.2741371045457982');
SELECT COUNT(*) FROM v0 WHERE (CASE '-1780248591'  WHEN v0.c0 THEN v0.c0 END COLLATE BINARY) ORDER BY ((0.913021713150135)GLOB(0.03728795407704255)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE '-1780248591'  WHEN v0.c0 THEN v0.c0 END COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY ((0.913021713150135)GLOB(0.03728795407704255)) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CASE '-1780248591'  WHEN v0.c0 THEN v0.c0 END COLLATE BINARY) ORDER BY ((0.913021713150135)GLOB(0.03728795407704255)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE '-1780248591'  WHEN v0.c0 THEN v0.c0 END COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY ((0.913021713150135)GLOB(0.03728795407704255)) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CASE '-1780248591'  WHEN v0.c0 THEN v0.c0 END COLLATE BINARY) ORDER BY ((0.913021713150135)GLOB(0.03728795407704255)) COLLATE BINARY  NULLS LAST;
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY CAST((((vt0.c0))<((vt0.c0))) AS BLOB);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST((((vt0.c0))<((vt0.c0))) AS BLOB));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY CAST((((vt0.c0))<((vt0.c0))) AS BLOB);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST((((vt0.c0))<((vt0.c0))) AS BLOB));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY CAST((((vt0.c0))<((vt0.c0))) AS BLOB);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c1, v0.c1, v0.c0)) NOT BETWEEN ((v0.c1 COLLATE RTRIM, (v0.c2 IN ()), (v0.c2 IN ()))) AND (('{⹝pQ/8.At', (((('-1816068629')AND(v0.c2)))OR(v0.c0)), MIN(v0.c2, v0.c2))))) ORDER BY CASE ((NULL)IS(v0.c2))  WHEN '' THEN v0.c2 ELSE TRIM(v0.c1) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1, v0.c1, v0.c0)) NOT BETWEEN ((v0.c1 COLLATE RTRIM, (v0.c2 IN ()), (v0.c2 IN ()))) AND (('{⹝pQ/8.At', (((('-1816068629')AND(v0.c2)))OR(v0.c0)), MIN(v0.c2, v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY CASE ((NULL)IS(v0.c2))  WHEN '' THEN v0.c2 ELSE TRIM(v0.c1) END  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c1, v0.c1, v0.c0)) NOT BETWEEN ((v0.c1 COLLATE RTRIM, (v0.c2 IN ()), (v0.c2 IN ()))) AND (('{⹝pQ/8.At', (((('-1816068629')AND(v0.c2)))OR(v0.c0)), MIN(v0.c2, v0.c2))))) ORDER BY CASE ((NULL)IS(v0.c2))  WHEN '' THEN v0.c2 ELSE TRIM(v0.c1) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1, v0.c1, v0.c0)) NOT BETWEEN ((v0.c1 COLLATE RTRIM, (v0.c2 IN ()), (v0.c2 IN ()))) AND (('{⹝pQ/8.At', (((('-1816068629')AND(v0.c2)))OR(v0.c0)), MIN(v0.c2, v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY CASE ((NULL)IS(v0.c2))  WHEN '' THEN v0.c2 ELSE TRIM(v0.c1) END  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c1, v0.c1, v0.c0)) NOT BETWEEN ((v0.c1 COLLATE RTRIM, (v0.c2 IN ()), (v0.c2 IN ()))) AND (('{⹝pQ/8.At', (((('-1816068629')AND(v0.c2)))OR(v0.c0)), MIN(v0.c2, v0.c2))))) ORDER BY CASE ((NULL)IS(v0.c2))  WHEN '' THEN v0.c2 ELSE TRIM(v0.c1) END  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0, rt1 WHERE (((((((rt1.c4)AND(v0.c1)))AND(NULL)))AND(((rt1.c1)*(rt1.c4)))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c4)AND(v0.c1)))AND(NULL)))AND(((rt1.c1)*(rt1.c4))))) IS TRUE)  as count FROM v0, vt0, rt1);
SELECT COUNT(*) FROM v0, vt0, rt1 WHERE (((((((rt1.c4)AND(v0.c1)))AND(NULL)))AND(((rt1.c1)*(rt1.c4)))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c4)AND(v0.c1)))AND(NULL)))AND(((rt1.c1)*(rt1.c4))))) IS TRUE)  as count FROM v0, vt0, rt1);
SELECT COUNT(*) FROM v0, vt0, rt1 WHERE (((((((rt1.c4)AND(v0.c1)))AND(NULL)))AND(((rt1.c1)*(rt1.c4)))));
SELECT ALL * FROM v0 WHERE (0.9785714268739768);
SELECT SUM(count) FROM (SELECT ALL ((0.9785714268739768) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (0.9785714268739768);
SELECT SUM(count) FROM (SELECT ALL ((0.9785714268739768) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (0.9785714268739768);
SELECT ALL * FROM v0, rt1 CROSS JOIN vt0 ON (DATETIME(rt1.c1, v0.c1, vt0.c0, rt1.c5, rt1.c0) IN ()) WHERE (((((vt0.c0, NULL, vt0.c0))>=((rt1.c0, rt1.c2, rt1.c2))) IN ((('736765413') NOTNULL)))) ORDER BY TRIM(((((rt1.c0)AND(rt1.c3)))OR(rt1.c3))) ASC  NULLS FIRST, (((((((v0.c1)AND(rt1.c0)))OR(vt0.c0))))>((((vt0.c0) NOT NULL)))) ASC  NULLS LAST, v0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0, NULL, vt0.c0))>=((rt1.c0, rt1.c2, rt1.c2))) IN ((('736765413') NOTNULL)))) IS TRUE)  as count FROM v0, rt1 CROSS JOIN vt0 ON (DATETIME(rt1.c1, v0.c1, vt0.c0, rt1.c5, rt1.c0) IN ()) ORDER BY TRIM(((((rt1.c0)AND(rt1.c3)))OR(rt1.c3))) ASC  NULLS FIRST, (((((((v0.c1)AND(rt1.c0)))OR(vt0.c0))))>((((vt0.c0) NOT NULL)))) ASC  NULLS LAST, v0.c2  NULLS LAST);
SELECT ALL * FROM v0, rt1 CROSS JOIN vt0 ON (DATETIME(rt1.c1, v0.c1, vt0.c0, rt1.c5, rt1.c0) IN ()) WHERE (((((vt0.c0, NULL, vt0.c0))>=((rt1.c0, rt1.c2, rt1.c2))) IN ((('736765413') NOTNULL)))) ORDER BY TRIM(((((rt1.c0)AND(rt1.c3)))OR(rt1.c3))) ASC  NULLS FIRST, (((((((v0.c1)AND(rt1.c0)))OR(vt0.c0))))>((((vt0.c0) NOT NULL)))) ASC  NULLS LAST, v0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0, NULL, vt0.c0))>=((rt1.c0, rt1.c2, rt1.c2))) IN ((('736765413') NOTNULL)))) IS TRUE)  as count FROM v0, rt1 CROSS JOIN vt0 ON (DATETIME(rt1.c1, v0.c1, vt0.c0, rt1.c5, rt1.c0) IN ()) ORDER BY TRIM(((((rt1.c0)AND(rt1.c3)))OR(rt1.c3))) ASC  NULLS FIRST, (((((((v0.c1)AND(rt1.c0)))OR(vt0.c0))))>((((vt0.c0) NOT NULL)))) ASC  NULLS LAST, v0.c2  NULLS LAST);
SELECT ALL * FROM v0, rt1 CROSS JOIN vt0 ON (DATETIME(rt1.c1, v0.c1, vt0.c0, rt1.c5, rt1.c0) IN ()) WHERE (((((vt0.c0, NULL, vt0.c0))>=((rt1.c0, rt1.c2, rt1.c2))) IN ((('736765413') NOTNULL)))) ORDER BY TRIM(((((rt1.c0)AND(rt1.c3)))OR(rt1.c3))) ASC  NULLS FIRST, (((((((v0.c1)AND(rt1.c0)))OR(vt0.c0))))>((((vt0.c0) NOT NULL)))) ASC  NULLS LAST, v0.c2  NULLS LAST;
SELECT * FROM vt0 INNER JOIN rt1 ON (((((((((rt1.c3)AND(rt1.c1)))OR(rt1.c5)))OR(rt1.c4)))OR(vt0.c0)) IN ()) WHERE (((((((((CASE rt1.c4  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c5 END)OR(CASE WHEN rt1.c5 THEN 'Infinity' WHEN rt1.c5 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c3 ELSE rt1.c5 END)))AND(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)))))AND(((43098012) BETWEEN (vt0.c0) AND (rt1.c0)))))AND(CAST(rt1.c0 AS TEXT)))) ORDER BY (NOT (((((rt1.c0)OR(rt1.c5)))OR(rt1.c5))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE rt1.c4  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c5 END)OR(CASE WHEN rt1.c5 THEN 'Infinity' WHEN rt1.c5 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c3 ELSE rt1.c5 END)))AND(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)))))AND(((43098012) BETWEEN (vt0.c0) AND (rt1.c0)))))AND(CAST(rt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (((((((((rt1.c3)AND(rt1.c1)))OR(rt1.c5)))OR(rt1.c4)))OR(vt0.c0)) IN ()) ORDER BY (NOT (((((rt1.c0)OR(rt1.c5)))OR(rt1.c5))))  NULLS FIRST);
SELECT * FROM vt0 INNER JOIN rt1 ON (((((((((rt1.c3)AND(rt1.c1)))OR(rt1.c5)))OR(rt1.c4)))OR(vt0.c0)) IN ()) WHERE (((((((((CASE rt1.c4  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c5 END)OR(CASE WHEN rt1.c5 THEN 'Infinity' WHEN rt1.c5 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c3 ELSE rt1.c5 END)))AND(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)))))AND(((43098012) BETWEEN (vt0.c0) AND (rt1.c0)))))AND(CAST(rt1.c0 AS TEXT)))) ORDER BY (NOT (((((rt1.c0)OR(rt1.c5)))OR(rt1.c5))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE rt1.c4  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c5 END)OR(CASE WHEN rt1.c5 THEN 'Infinity' WHEN rt1.c5 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c3 ELSE rt1.c5 END)))AND(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)))))AND(((43098012) BETWEEN (vt0.c0) AND (rt1.c0)))))AND(CAST(rt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (((((((((rt1.c3)AND(rt1.c1)))OR(rt1.c5)))OR(rt1.c4)))OR(vt0.c0)) IN ()) ORDER BY (NOT (((((rt1.c0)OR(rt1.c5)))OR(rt1.c5))))  NULLS FIRST);
SELECT * FROM vt0 INNER JOIN rt1 ON (((((((((rt1.c3)AND(rt1.c1)))OR(rt1.c5)))OR(rt1.c4)))OR(vt0.c0)) IN ()) WHERE (((((((((CASE rt1.c4  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c5 END)OR(CASE WHEN rt1.c5 THEN 'Infinity' WHEN rt1.c5 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c3 ELSE rt1.c5 END)))AND(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)))))AND(((43098012) BETWEEN (vt0.c0) AND (rt1.c0)))))AND(CAST(rt1.c0 AS TEXT)))) ORDER BY (NOT (((((rt1.c0)OR(rt1.c5)))OR(rt1.c5))))  NULLS FIRST;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON (((((((v0.c0, vt0.c0, v0.c1)) BETWEEN ((vt0.c0, '_%,XRJ﹵', vt0.c0)) AND ((v0.c0, vt0.c0, vt0.c0))))AND(((((((((v0.c0)OR(v0.c2)))AND(v0.c2)))OR(vt0.c0)))AND(v0.c0)))))AND(((v0.c1)GLOB(v0.c0)))) WHERE (CASE WHEN 'ꋐừsꄆ' THEN ((v0.c1)&(v0.c2)) ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 'ꋐừsꄆ' THEN ((v0.c1)&(v0.c2)) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (((((((v0.c0, vt0.c0, v0.c1)) BETWEEN ((vt0.c0, '_%,XRJ﹵', vt0.c0)) AND ((v0.c0, vt0.c0, vt0.c0))))AND(((((((((v0.c0)OR(v0.c2)))AND(v0.c2)))OR(vt0.c0)))AND(v0.c0)))))AND(((v0.c1)GLOB(v0.c0)))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON (((((((v0.c0, vt0.c0, v0.c1)) BETWEEN ((vt0.c0, '_%,XRJ﹵', vt0.c0)) AND ((v0.c0, vt0.c0, vt0.c0))))AND(((((((((v0.c0)OR(v0.c2)))AND(v0.c2)))OR(vt0.c0)))AND(v0.c0)))))AND(((v0.c1)GLOB(v0.c0)))) WHERE (CASE WHEN 'ꋐừsꄆ' THEN ((v0.c1)&(v0.c2)) ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 'ꋐừsꄆ' THEN ((v0.c1)&(v0.c2)) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (((((((v0.c0, vt0.c0, v0.c1)) BETWEEN ((vt0.c0, '_%,XRJ﹵', vt0.c0)) AND ((v0.c0, vt0.c0, vt0.c0))))AND(((((((((v0.c0)OR(v0.c2)))AND(v0.c2)))OR(vt0.c0)))AND(v0.c0)))))AND(((v0.c1)GLOB(v0.c0)))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON (((((((v0.c0, vt0.c0, v0.c1)) BETWEEN ((vt0.c0, '_%,XRJ﹵', vt0.c0)) AND ((v0.c0, vt0.c0, vt0.c0))))AND(((((((((v0.c0)OR(v0.c2)))AND(v0.c2)))OR(vt0.c0)))AND(v0.c0)))))AND(((v0.c1)GLOB(v0.c0)))) WHERE (CASE WHEN 'ꋐừsꄆ' THEN ((v0.c1)&(v0.c2)) ELSE vt0.c0 END);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((- (vt0.c0)))))AND((~ (vt0.c0))))) ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) IS TRUE))) DESC, NULLIF(DISTINCT ((vt0.c0) NOTNULL), vt0.c0 COLLATE RTRIM) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((- (vt0.c0)))))AND((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) IS TRUE))) DESC, NULLIF(DISTINCT ((vt0.c0) NOTNULL), vt0.c0 COLLATE RTRIM) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((- (vt0.c0)))))AND((~ (vt0.c0))))) ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) IS TRUE))) DESC, NULLIF(DISTINCT ((vt0.c0) NOTNULL), vt0.c0 COLLATE RTRIM) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((- (vt0.c0)))))AND((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) IS TRUE))) DESC, NULLIF(DISTINCT ((vt0.c0) NOTNULL), vt0.c0 COLLATE RTRIM) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((- (vt0.c0)))))AND((~ (vt0.c0))))) ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) IS TRUE))) DESC, NULLIF(DISTINCT ((vt0.c0) NOTNULL), vt0.c0 COLLATE RTRIM) ASC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE ((((((rt1.c0)IS NOT(rt1.c2)), ((rt1.c3)IS(rt1.c0)), (((rt1.c4)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c5)))))>(((~ (rt1.c5)), (rt1.c1 IN ()), rt1.c4 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)IS NOT(rt1.c2)), ((rt1.c3)IS(rt1.c0)), (((rt1.c4)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c5)))))>(((~ (rt1.c5)), (rt1.c1 IN ()), rt1.c4 COLLATE RTRIM)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c0)IS NOT(rt1.c2)), ((rt1.c3)IS(rt1.c0)), (((rt1.c4)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c5)))))>(((~ (rt1.c5)), (rt1.c1 IN ()), rt1.c4 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)IS NOT(rt1.c2)), ((rt1.c3)IS(rt1.c0)), (((rt1.c4)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c5)))))>(((~ (rt1.c5)), (rt1.c1 IN ()), rt1.c4 COLLATE RTRIM)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c0)IS NOT(rt1.c2)), ((rt1.c3)IS(rt1.c0)), (((rt1.c4)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c5)))))>(((~ (rt1.c5)), (rt1.c1 IN ()), rt1.c4 COLLATE RTRIM))));
SELECT COUNT(*) FROM rt1, v0, vt0 WHERE ('529929678') ORDER BY (CASE rt1.c2  WHEN rt1.c1 THEN v0.c2 WHEN 'ri<VFv~ࣰ擻' THEN v0.c2 WHEN 2037733913 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c0 WHEN '' THEN -2.60099172E8 ELSE rt1.c4 END IN ());
SELECT SUM(count) FROM (SELECT ALL (('529929678') IS TRUE)  as count FROM rt1, v0, vt0 ORDER BY (CASE rt1.c2  WHEN rt1.c1 THEN v0.c2 WHEN 'ri<VFv~ࣰ擻' THEN v0.c2 WHEN 2037733913 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c0 WHEN '' THEN -2.60099172E8 ELSE rt1.c4 END IN ()));
SELECT COUNT(*) FROM rt1, v0, vt0 WHERE ('529929678') ORDER BY (CASE rt1.c2  WHEN rt1.c1 THEN v0.c2 WHEN 'ri<VFv~ࣰ擻' THEN v0.c2 WHEN 2037733913 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c0 WHEN '' THEN -2.60099172E8 ELSE rt1.c4 END IN ());
SELECT SUM(count) FROM (SELECT ALL (('529929678') IS TRUE)  as count FROM rt1, v0, vt0 ORDER BY (CASE rt1.c2  WHEN rt1.c1 THEN v0.c2 WHEN 'ri<VFv~ࣰ擻' THEN v0.c2 WHEN 2037733913 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c0 WHEN '' THEN -2.60099172E8 ELSE rt1.c4 END IN ()));
SELECT COUNT(*) FROM rt1, v0, vt0 WHERE ('529929678') ORDER BY (CASE rt1.c2  WHEN rt1.c1 THEN v0.c2 WHEN 'ri<VFv~ࣰ擻' THEN v0.c2 WHEN 2037733913 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c0 WHEN '' THEN -2.60099172E8 ELSE rt1.c4 END IN ());
SELECT ALL * FROM v0 WHERE ((((v0.c1 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1 IN ())) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c1 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1 IN ())) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c1 IN ())) NOTNULL));
SELECT ALL * FROM v0, vt0, rt1 WHERE ((((vt0.c0) NOT BETWEEN (rt1.c3) AND (rt1.c4)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT BETWEEN (rt1.c3) AND (rt1.c4)) IN ())) IS TRUE)  as count FROM v0, vt0, rt1);
SELECT ALL * FROM v0, vt0, rt1 WHERE ((((vt0.c0) NOT BETWEEN (rt1.c3) AND (rt1.c4)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT BETWEEN (rt1.c3) AND (rt1.c4)) IN ())) IS TRUE)  as count FROM v0, vt0, rt1);
SELECT ALL * FROM v0, vt0, rt1 WHERE ((((vt0.c0) NOT BETWEEN (rt1.c3) AND (rt1.c4)) IN ()));
SELECT COUNT(*) FROM vt0, rt1 WHERE (0X79dde18c COLLATE NOCASE) ORDER BY 0Xffffffff8eb1911d  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0X79dde18c COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt1 ORDER BY 0xffffffff8eb1911d  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (0X79dde18c COLLATE NOCASE) ORDER BY 0Xffffffff8eb1911d  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0X79dde18c COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt1 ORDER BY 0xffffffff8eb1911d  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (0X79dde18c COLLATE NOCASE) ORDER BY 0Xffffffff8eb1911d  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((v0.c1)OR(v0.c1)))AND(0X700578cd)) COLLATE BINARY) ORDER BY ((HEX(DISTINCT v0.c0))>(UPPER(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)OR(v0.c1)))AND(0X700578cd)) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0 NOT INDEXED ORDER BY ((HEX(DISTINCT v0.c0))>(UPPER(vt0.c0))) DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((v0.c1)OR(v0.c1)))AND(0X700578cd)) COLLATE BINARY) ORDER BY ((HEX(DISTINCT v0.c0))>(UPPER(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)OR(v0.c1)))AND(0X700578cd)) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0 NOT INDEXED ORDER BY ((HEX(DISTINCT v0.c0))>(UPPER(vt0.c0))) DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((v0.c1)OR(v0.c1)))AND(0X700578cd)) COLLATE BINARY) ORDER BY ((HEX(DISTINCT v0.c0))>(UPPER(vt0.c0))) DESC;
SELECT ALL * FROM vt0, rt1, v0 WHERE ((((rt1.c3))>(((rt1.c1 IN (rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3))>(((rt1.c1 IN (rt1.c1)))))) IS TRUE)  as count FROM vt0, rt1, v0);
SELECT ALL * FROM vt0, rt1, v0 WHERE ((((rt1.c3))>(((rt1.c1 IN (rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3))>(((rt1.c1 IN (rt1.c1)))))) IS TRUE)  as count FROM vt0, rt1, v0);
SELECT ALL * FROM vt0, rt1, v0 WHERE ((((rt1.c3))>(((rt1.c1 IN (rt1.c1))))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON ((v0.c2) NOT BETWEEN (x'') AND (v0.c1)) COLLATE BINARY COLLATE RTRIM LEFT OUTER JOIN v0 ON (((+ (rt1.c2)))+(json_patch(v0.c1, rt1.c4))) WHERE ((((rt1.c2) BETWEEN (v0.c2) AND (v0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2) BETWEEN (v0.c2) AND (v0.c2)) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON ((v0.c2) NOT BETWEEN (x'') AND (v0.c1)) COLLATE BINARY COLLATE RTRIM LEFT OUTER JOIN v0 ON (((+ (rt1.c2)))+(json_patch(v0.c1, rt1.c4))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON ((v0.c2) NOT BETWEEN (x'') AND (v0.c1)) COLLATE BINARY COLLATE RTRIM LEFT OUTER JOIN v0 ON (((+ (rt1.c2)))+(json_patch(v0.c1, rt1.c4))) WHERE ((((rt1.c2) BETWEEN (v0.c2) AND (v0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2) BETWEEN (v0.c2) AND (v0.c2)) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON ((v0.c2) NOT BETWEEN (x'') AND (v0.c1)) COLLATE BINARY COLLATE RTRIM LEFT OUTER JOIN v0 ON (((+ (rt1.c2)))+(json_patch(v0.c1, rt1.c4))));
SELECT * FROM v0, vt0, rt1 WHERE (CAST(((rt1.c2)>(rt1.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2)>(rt1.c1)) AS TEXT)) IS TRUE)  as count FROM v0, vt0, rt1);
SELECT * FROM v0, vt0, rt1 WHERE (CAST(((rt1.c2)>(rt1.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2)>(rt1.c1)) AS TEXT)) IS TRUE)  as count FROM v0, vt0, rt1);
SELECT * FROM v0, vt0, rt1 WHERE (CAST(((rt1.c2)>(rt1.c1)) AS TEXT));
SELECT ALL * FROM rt1, v0, vt0 WHERE ((CASE WHEN v0.c0 THEN 0.3070430357783389 WHEN v0.c2 THEN rt1.c0 WHEN rt1.c5 THEN v0.c1 ELSE rt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN v0.c0 THEN 0.3070430357783389 WHEN v0.c2 THEN rt1.c0 WHEN rt1.c5 THEN v0.c1 ELSE rt1.c0 END IN ())) IS TRUE)  as count FROM rt1, v0, vt0);
SELECT ALL * FROM rt1, v0, vt0 WHERE ((CASE WHEN v0.c0 THEN 0.3070430357783389 WHEN v0.c2 THEN rt1.c0 WHEN rt1.c5 THEN v0.c1 ELSE rt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN v0.c0 THEN 0.3070430357783389 WHEN v0.c2 THEN rt1.c0 WHEN rt1.c5 THEN v0.c1 ELSE rt1.c0 END IN ())) IS TRUE)  as count FROM rt1, v0, vt0);
SELECT ALL * FROM rt1, v0, vt0 WHERE ((CASE WHEN v0.c0 THEN 0.3070430357783389 WHEN v0.c2 THEN rt1.c0 WHEN rt1.c5 THEN v0.c1 ELSE rt1.c0 END IN ()));
SELECT * FROM vt0 WHERE (((((vt0.c0) ISNULL)) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ORDER BY ((((('-1363487470')||(vt0.c0))))!=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ASC  NULLS FIRST, (((0.2912014776590477) NOT NULL) IN (((vt0.c0)||(vt0.c0)))) ASC, (+ ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, 788359157)) AND ((vt0.c0, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL)) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((('-1363487470')||(vt0.c0))))!=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ASC  NULLS FIRST, (((0.2912014776590477) NOT NULL) IN (((vt0.c0)||(vt0.c0)))) ASC, (+ ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, 788359157)) AND ((vt0.c0, vt0.c0, vt0.c0))))));
SELECT * FROM vt0 WHERE (((((vt0.c0) ISNULL)) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ORDER BY ((((('-1363487470')||(vt0.c0))))!=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ASC  NULLS FIRST, (((0.2912014776590477) NOT NULL) IN (((vt0.c0)||(vt0.c0)))) ASC, (+ ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, 788359157)) AND ((vt0.c0, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL)) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((('-1363487470')||(vt0.c0))))!=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ASC  NULLS FIRST, (((0.2912014776590477) NOT NULL) IN (((vt0.c0)||(vt0.c0)))) ASC, (+ ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, 788359157)) AND ((vt0.c0, vt0.c0, vt0.c0))))));
SELECT * FROM vt0 WHERE (((((vt0.c0) ISNULL)) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ORDER BY ((((('-1363487470')||(vt0.c0))))!=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ASC  NULLS FIRST, (((0.2912014776590477) NOT NULL) IN (((vt0.c0)||(vt0.c0)))) ASC, (+ ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, 788359157)) AND ((vt0.c0, vt0.c0, vt0.c0)))));
SELECT COUNT(*) FROM rt1 CROSS JOIN v0 ON CAST(v0.c2 AS TEXT) WHERE (TRIM(rt1.c3));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(rt1.c3)) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON CAST(v0.c2 AS TEXT));
SELECT COUNT(*) FROM rt1 CROSS JOIN v0 ON CAST(v0.c2 AS TEXT) WHERE (TRIM(rt1.c3));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(rt1.c3)) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON CAST(v0.c2 AS TEXT));
SELECT COUNT(*) FROM rt1 CROSS JOIN v0 ON CAST(v0.c2 AS TEXT) WHERE (TRIM(rt1.c3));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN (('.땃*\nTRH')) AND ((vt0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (('.땃*\nTRH')) AND ((vt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN (('.땃*\nTRH')) AND ((vt0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (('.땃*\nTRH')) AND ((vt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN (('.땃*\nTRH')) AND ((vt0.c0))) COLLATE NOCASE);
SELECT ALL * FROM v0 WHERE (v0.c2) ORDER BY '\帼' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0 ORDER BY '\帼' DESC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (v0.c2) ORDER BY '\帼' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0 ORDER BY '\帼' DESC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (v0.c2) ORDER BY '\帼' DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c2);
SELECT * FROM vt0, rt1, v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM vt0, rt1, v0);
SELECT * FROM vt0, rt1, v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM vt0, rt1, v0);
SELECT * FROM vt0, rt1, v0 WHERE (v0.c1);
SELECT ALL COUNT(*) FROM v0 WHERE (2110845270);
SELECT SUM(count) FROM (SELECT ALL ((2110845270) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (2110845270);
SELECT SUM(count) FROM (SELECT ALL ((2110845270) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (2110845270);
SELECT ALL * FROM vt0, rt1, v0 WHERE (CASE TRIM(rt1.c4)  WHEN ((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c5)))OR(v0.c2)))OR(rt1.c3)) THEN json_object(NULL, rt1.c2, rt1.c0, v0.c1) END) ORDER BY CAST(((v0.c1)==(rt1.c3)) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE TRIM(rt1.c4)  WHEN ((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c5)))OR(v0.c2)))OR(rt1.c3)) THEN json_object(NULL, rt1.c2, rt1.c0, v0.c1) END) IS TRUE)  as count FROM vt0, rt1, v0 ORDER BY CAST(((v0.c1)=(rt1.c3)) AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt1, v0 WHERE (CASE TRIM(rt1.c4)  WHEN ((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c5)))OR(v0.c2)))OR(rt1.c3)) THEN json_object(NULL, rt1.c2, rt1.c0, v0.c1) END) ORDER BY CAST(((v0.c1)==(rt1.c3)) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE TRIM(rt1.c4)  WHEN ((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c5)))OR(v0.c2)))OR(rt1.c3)) THEN json_object(NULL, rt1.c2, rt1.c0, v0.c1) END) IS TRUE)  as count FROM vt0, rt1, v0 ORDER BY CAST(((v0.c1)=(rt1.c3)) AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt1, v0 WHERE (CASE TRIM(rt1.c4)  WHEN ((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c5)))OR(v0.c2)))OR(rt1.c3)) THEN json_object(NULL, rt1.c2, rt1.c0, v0.c1) END) ORDER BY CAST(((v0.c1)==(rt1.c3)) AS NUMERIC) ASC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE ((((- (rt1.c1)))%(('-998539996' IN ())))) ORDER BY (((rt1.c3)) NOT BETWEEN ((((rt1.c3) ISNULL))) AND ((CAST(rt1.c5 AS REAL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt1.c1)))%(('-998539996' IN ())))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c3)) NOT BETWEEN ((((rt1.c3) ISNULL))) AND ((CAST(rt1.c5 AS REAL))))  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((((- (rt1.c1)))%(('-998539996' IN ())))) ORDER BY (((rt1.c3)) NOT BETWEEN ((((rt1.c3) ISNULL))) AND ((CAST(rt1.c5 AS REAL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt1.c1)))%(('-998539996' IN ())))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c3)) NOT BETWEEN ((((rt1.c3) ISNULL))) AND ((CAST(rt1.c5 AS REAL))))  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((((- (rt1.c1)))%(('-998539996' IN ())))) ORDER BY (((rt1.c3)) NOT BETWEEN ((((rt1.c3) ISNULL))) AND ((CAST(rt1.c5 AS REAL))))  NULLS FIRST;
SELECT ALL * FROM vt0, v0, rt1 WHERE (((((((((vt0.c0 COLLATE NOCASE)AND(((x'048b') IS FALSE))))OR(((rt1.c4) NOT BETWEEN (rt1.c3) AND (vt0.c0)))))AND((((v0.c0)) NOT BETWEEN ((rt1.c0)) AND ((vt0.c0))))))OR(((rt1.c5)>=(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0 COLLATE NOCASE)AND(((x'048b') IS FALSE))))OR(((rt1.c4) NOT BETWEEN (rt1.c3) AND (vt0.c0)))))AND((((v0.c0)) NOT BETWEEN ((rt1.c0)) AND ((vt0.c0))))))OR(((rt1.c5)>=(rt1.c1))))) IS TRUE)  as count FROM vt0, v0, rt1);
SELECT ALL * FROM vt0, v0, rt1 WHERE (((((((((vt0.c0 COLLATE NOCASE)AND(((x'048b') IS FALSE))))OR(((rt1.c4) NOT BETWEEN (rt1.c3) AND (vt0.c0)))))AND((((v0.c0)) NOT BETWEEN ((rt1.c0)) AND ((vt0.c0))))))OR(((rt1.c5)>=(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0 COLLATE NOCASE)AND(((x'048b') IS FALSE))))OR(((rt1.c4) NOT BETWEEN (rt1.c3) AND (vt0.c0)))))AND((((v0.c0)) NOT BETWEEN ((rt1.c0)) AND ((vt0.c0))))))OR(((rt1.c5)>=(rt1.c1))))) IS TRUE)  as count FROM vt0, v0, rt1);
SELECT ALL * FROM vt0, v0, rt1 WHERE (((((((((vt0.c0 COLLATE NOCASE)AND(((x'048b') IS FALSE))))OR(((rt1.c4) NOT BETWEEN (rt1.c3) AND (vt0.c0)))))AND((((v0.c0)) NOT BETWEEN ((rt1.c0)) AND ((vt0.c0))))))OR(((rt1.c5)>=(rt1.c1)))));
SELECT ALL * FROM vt0 WHERE ((- (((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (((vt0.c0) IS TRUE))));
SELECT ALL * FROM v0, vt0, rt1 WHERE ((((v0.c0) NOTNULL) IN (rt1.c3 COLLATE NOCASE, ((rt1.c0)<=(rt1.c0))))) ORDER BY HEX(DISTINCT CASE v0.c1  WHEN v0.c2 THEN rt1.c3 WHEN vt0.c0 THEN v0.c2 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c5 THEN v0.c2 WHEN vt0.c0 THEN v0.c2 ELSE v0.c2 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) NOTNULL) IN (rt1.c3 COLLATE NOCASE, ((rt1.c0)<=(rt1.c0))))) IS TRUE)  as count FROM v0, vt0, rt1 ORDER BY HEX(DISTINCT CASE v0.c1  WHEN v0.c2 THEN rt1.c3 WHEN vt0.c0 THEN v0.c2 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c5 THEN v0.c2 WHEN vt0.c0 THEN v0.c2 ELSE v0.c2 END)  NULLS LAST);
SELECT ALL * FROM v0, vt0, rt1 WHERE ((((v0.c0) NOTNULL) IN (rt1.c3 COLLATE NOCASE, ((rt1.c0)<=(rt1.c0))))) ORDER BY HEX(DISTINCT CASE v0.c1  WHEN v0.c2 THEN rt1.c3 WHEN vt0.c0 THEN v0.c2 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c5 THEN v0.c2 WHEN vt0.c0 THEN v0.c2 ELSE v0.c2 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) NOTNULL) IN (rt1.c3 COLLATE NOCASE, ((rt1.c0)<=(rt1.c0))))) IS TRUE)  as count FROM v0, vt0, rt1 ORDER BY HEX(DISTINCT CASE v0.c1  WHEN v0.c2 THEN rt1.c3 WHEN vt0.c0 THEN v0.c2 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c5 THEN v0.c2 WHEN vt0.c0 THEN v0.c2 ELSE v0.c2 END)  NULLS LAST);
SELECT ALL * FROM v0, vt0, rt1 WHERE ((((v0.c0) NOTNULL) IN (rt1.c3 COLLATE NOCASE, ((rt1.c0)<=(rt1.c0))))) ORDER BY HEX(DISTINCT CASE v0.c1  WHEN v0.c2 THEN rt1.c3 WHEN vt0.c0 THEN v0.c2 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c5 THEN v0.c2 WHEN vt0.c0 THEN v0.c2 ELSE v0.c2 END)  NULLS LAST;
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON v0.c0 WHERE ((((v0.c0)) BETWEEN ((LIKELIHOOD(v0.c2, 0.958844420900512))) AND ((''))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((LIKELIHOOD(v0.c2, 0.958844420900512))) AND (('')))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON v0.c0);
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON v0.c0 WHERE ((((v0.c0)) BETWEEN ((LIKELIHOOD(v0.c2, 0.958844420900512))) AND ((''))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((LIKELIHOOD(v0.c2, 0.958844420900512))) AND (('')))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON v0.c0);
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON v0.c0 WHERE ((((v0.c0)) BETWEEN ((LIKELIHOOD(v0.c2, 0.958844420900512))) AND ((''))));
SELECT ALL * FROM v0 WHERE (CAST(v0.c1 AS REAL) COLLATE BINARY) ORDER BY (((+ (v0.c2)))-(((v0.c0)AND(v0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c1 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY (((+ (v0.c2)))-(((v0.c0)AND(v0.c1))))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (CAST(v0.c1 AS REAL) COLLATE BINARY) ORDER BY (((+ (v0.c2)))-(((v0.c0)AND(v0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c1 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY (((+ (v0.c2)))-(((v0.c0)AND(v0.c1))))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (CAST(v0.c1 AS REAL) COLLATE BINARY) ORDER BY (((+ (v0.c2)))-(((v0.c0)AND(v0.c1))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (NULL);
SELECT COUNT(*) FROM v0 WHERE ((- (((((((((v0.c0)OR(NULL)))OR(v0.c2)))AND(v0.c2)))OR(0xfffffffff9ac483e)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((((((v0.c0)OR(NULL)))OR(v0.c2)))AND(v0.c2)))OR(0Xfffffffff9ac483e))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((- (((((((((v0.c0)OR(NULL)))OR(v0.c2)))AND(v0.c2)))OR(0xfffffffff9ac483e)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((((((v0.c0)OR(NULL)))OR(v0.c2)))AND(v0.c2)))OR(0Xfffffffff9ac483e))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((- (((((((((v0.c0)OR(NULL)))OR(v0.c2)))AND(v0.c2)))OR(0xfffffffff9ac483e)))));
SELECT * FROM rt1 WHERE (((SUBSTR(rt1.c0, rt1.c5))IS NOT(((((rt1.c2)OR(0xffffffff85f3d017)))AND(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((SUBSTR(rt1.c0, rt1.c5))IS NOT(((((rt1.c2)OR(0xffffffff85f3d017)))AND(rt1.c3))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((SUBSTR(rt1.c0, rt1.c5))IS NOT(((((rt1.c2)OR(0xffffffff85f3d017)))AND(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((SUBSTR(rt1.c0, rt1.c5))IS NOT(((((rt1.c2)OR(0xffffffff85f3d017)))AND(rt1.c3))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((SUBSTR(rt1.c0, rt1.c5))IS NOT(((((rt1.c2)OR(0xffffffff85f3d017)))AND(rt1.c3)))));
SELECT ALL * FROM rt1 WHERE (rt1.c5);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c5) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (rt1.c5);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c5) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (rt1.c5);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN ('1963661883') AND (vt0.c0))) BETWEEN (((vt0.c0)==(vt0.c0))) AND (((vt0.c0)GLOB(vt0.c0))))) ORDER BY LIKELY(DISTINCT ((vt0.c0) IS FALSE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN ('1963661883') AND (vt0.c0))) BETWEEN (((vt0.c0)=(vt0.c0))) AND (((vt0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY LIKELY(DISTINCT ((vt0.c0) IS FALSE)) ASC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN ('1963661883') AND (vt0.c0))) BETWEEN (((vt0.c0)==(vt0.c0))) AND (((vt0.c0)GLOB(vt0.c0))))) ORDER BY LIKELY(DISTINCT ((vt0.c0) IS FALSE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN ('1963661883') AND (vt0.c0))) BETWEEN (((vt0.c0)=(vt0.c0))) AND (((vt0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY LIKELY(DISTINCT ((vt0.c0) IS FALSE)) ASC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN ('1963661883') AND (vt0.c0))) BETWEEN (((vt0.c0)==(vt0.c0))) AND (((vt0.c0)GLOB(vt0.c0))))) ORDER BY LIKELY(DISTINCT ((vt0.c0) IS FALSE)) ASC;
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((((((((rt1.c0)OR(((rt1.c0) NOT NULL))))AND(((rt1.c0)%(rt1.c5)))))AND(((v0.c0)GLOB(rt1.c3)))))OR(CASE 0.04624598584241024  WHEN NULL THEN x'' END)) INNER JOIN rt1 ON (((v0.c2) NOT BETWEEN (rt1.c5) AND (rt1.c5)) IN (((rt1.c5) BETWEEN (rt1.c3) AND (rt1.c1)))) WHERE (((v0.c2)LIKE(v0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c2)LIKE(v0.c2)) COLLATE BINARY) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((((((((rt1.c0)OR(((rt1.c0) NOT NULL))))AND(((rt1.c0)%(rt1.c5)))))AND(((v0.c0)GLOB(rt1.c3)))))OR(CASE 0.04624598584241024  WHEN NULL THEN x'' END)) INNER JOIN rt1 ON (((v0.c2) NOT BETWEEN (rt1.c5) AND (rt1.c5)) IN (((rt1.c5) BETWEEN (rt1.c3) AND (rt1.c1)))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((((((((rt1.c0)OR(((rt1.c0) NOT NULL))))AND(((rt1.c0)%(rt1.c5)))))AND(((v0.c0)GLOB(rt1.c3)))))OR(CASE 0.04624598584241024  WHEN NULL THEN x'' END)) INNER JOIN rt1 ON (((v0.c2) NOT BETWEEN (rt1.c5) AND (rt1.c5)) IN (((rt1.c5) BETWEEN (rt1.c3) AND (rt1.c1)))) WHERE (((v0.c2)LIKE(v0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c2)LIKE(v0.c2)) COLLATE BINARY) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((((((((rt1.c0)OR(((rt1.c0) NOT NULL))))AND(((rt1.c0)%(rt1.c5)))))AND(((v0.c0)GLOB(rt1.c3)))))OR(CASE 0.04624598584241024  WHEN NULL THEN x'' END)) INNER JOIN rt1 ON (((v0.c2) NOT BETWEEN (rt1.c5) AND (rt1.c5)) IN (((rt1.c5) BETWEEN (rt1.c3) AND (rt1.c1)))));
SELECT ALL COUNT(*) FROM rt1, vt0 FULL OUTER JOIN v0 ON ((CASE rt1.c1  WHEN v0.c2 THEN rt1.c5 WHEN rt1.c1 THEN rt1.c1 WHEN v0.c0 THEN v0.c2 ELSE 'fh' END) NOT NULL) WHERE ((((0.2833213545198311) BETWEEN (rt1.c5) AND (v0.c0)) IN ())) ORDER BY ((((rt1.c1)>=(v0.c2)))&(x'')) ASC;
SELECT SUM(count) FROM (SELECT (((((0.2833213545198311) BETWEEN (rt1.c5) AND (v0.c0)) IN ())) IS TRUE)  as count FROM rt1, vt0 FULL OUTER JOIN v0 ON ((CASE rt1.c1  WHEN v0.c2 THEN rt1.c5 WHEN rt1.c1 THEN rt1.c1 WHEN v0.c0 THEN v0.c2 ELSE 'fh' END) NOT NULL) ORDER BY ((((rt1.c1)>=(v0.c2)))&(x'')) ASC);
SELECT ALL COUNT(*) FROM rt1, vt0 FULL OUTER JOIN v0 ON ((CASE rt1.c1  WHEN v0.c2 THEN rt1.c5 WHEN rt1.c1 THEN rt1.c1 WHEN v0.c0 THEN v0.c2 ELSE 'fh' END) NOT NULL) WHERE ((((0.2833213545198311) BETWEEN (rt1.c5) AND (v0.c0)) IN ())) ORDER BY ((((rt1.c1)>=(v0.c2)))&(x'')) ASC;
SELECT SUM(count) FROM (SELECT (((((0.2833213545198311) BETWEEN (rt1.c5) AND (v0.c0)) IN ())) IS TRUE)  as count FROM rt1, vt0 FULL OUTER JOIN v0 ON ((CASE rt1.c1  WHEN v0.c2 THEN rt1.c5 WHEN rt1.c1 THEN rt1.c1 WHEN v0.c0 THEN v0.c2 ELSE 'fh' END) NOT NULL) ORDER BY ((((rt1.c1)>=(v0.c2)))&(x'')) ASC);
SELECT ALL COUNT(*) FROM rt1, vt0 FULL OUTER JOIN v0 ON ((CASE rt1.c1  WHEN v0.c2 THEN rt1.c5 WHEN rt1.c1 THEN rt1.c1 WHEN v0.c0 THEN v0.c2 ELSE 'fh' END) NOT NULL) WHERE ((((0.2833213545198311) BETWEEN (rt1.c5) AND (v0.c0)) IN ())) ORDER BY ((((rt1.c1)>=(v0.c2)))&(x'')) ASC;
SELECT COUNT(*) FROM rt1, v0, vt0 WHERE (((((v0.c2)&(rt1.c5)))IS NOT(((((v0.c0)OR(v0.c0)))OR(rt1.c2))))) ORDER BY HEX(CAST(rt1.c0 AS BLOB)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)&(rt1.c5)))IS NOT(((((v0.c0)OR(v0.c0)))OR(rt1.c2))))) IS TRUE)  as count FROM rt1, v0, vt0 ORDER BY HEX(CAST(rt1.c0 AS BLOB)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, v0, vt0 WHERE (((((v0.c2)&(rt1.c5)))IS NOT(((((v0.c0)OR(v0.c0)))OR(rt1.c2))))) ORDER BY HEX(CAST(rt1.c0 AS BLOB)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)&(rt1.c5)))IS NOT(((((v0.c0)OR(v0.c0)))OR(rt1.c2))))) IS TRUE)  as count FROM rt1, v0, vt0 ORDER BY HEX(CAST(rt1.c0 AS BLOB)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, v0, vt0 WHERE (((((v0.c2)&(rt1.c5)))IS NOT(((((v0.c0)OR(v0.c0)))OR(rt1.c2))))) ORDER BY HEX(CAST(rt1.c0 AS BLOB)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0, rt1 WHERE (NULL) ORDER BY (((rt1.c4, NULL, rt1.c1)) NOT BETWEEN ((((NULL)AND(rt1.c3)), (((rt1.c2)) NOT BETWEEN ((v0.c2)) AND ((vt0.c0))), ((v0.c1) NOT NULL))) AND ((IFNULL(DISTINCT rt1.c1, rt1.c1), (((rt1.c0))>=((rt1.c3))), rt1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt0, rt1 ORDER BY (((rt1.c4, NULL, rt1.c1)) NOT BETWEEN ((((NULL)AND(rt1.c3)), (((rt1.c2)) NOT BETWEEN ((v0.c2)) AND ((vt0.c0))), ((v0.c1) NOT NULL))) AND ((IFNULL(DISTINCT rt1.c1, rt1.c1), (((rt1.c0))>=((rt1.c3))), rt1.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0, rt1 WHERE (NULL) ORDER BY (((rt1.c4, NULL, rt1.c1)) NOT BETWEEN ((((NULL)AND(rt1.c3)), (((rt1.c2)) NOT BETWEEN ((v0.c2)) AND ((vt0.c0))), ((v0.c1) NOT NULL))) AND ((IFNULL(DISTINCT rt1.c1, rt1.c1), (((rt1.c0))>=((rt1.c3))), rt1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt0, rt1 ORDER BY (((rt1.c4, NULL, rt1.c1)) NOT BETWEEN ((((NULL)AND(rt1.c3)), (((rt1.c2)) NOT BETWEEN ((v0.c2)) AND ((vt0.c0))), ((v0.c1) NOT NULL))) AND ((IFNULL(DISTINCT rt1.c1, rt1.c1), (((rt1.c0))>=((rt1.c3))), rt1.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0, rt1 WHERE (NULL) ORDER BY (((rt1.c4, NULL, rt1.c1)) NOT BETWEEN ((((NULL)AND(rt1.c3)), (((rt1.c2)) NOT BETWEEN ((v0.c2)) AND ((vt0.c0))), ((v0.c1) NOT NULL))) AND ((IFNULL(DISTINCT rt1.c1, rt1.c1), (((rt1.c0))>=((rt1.c3))), rt1.c1)))  NULLS FIRST;
SELECT ALL * FROM v0 CROSS JOIN vt0 ON CAST(CASE rt1.c3  WHEN rt1.c5 THEN rt1.c3 WHEN rt1.c3 THEN v0.c0 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END AS BLOB) CROSS JOIN rt1 ON (vt0.c0 IN (rt1.c0)) COLLATE RTRIM WHERE ('48529558' COLLATE RTRIM) ORDER BY rt1.c2;
SELECT SUM(count) FROM (SELECT (('48529558' COLLATE RTRIM) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON CAST(CASE rt1.c3  WHEN rt1.c5 THEN rt1.c3 WHEN rt1.c3 THEN v0.c0 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END AS BLOB) CROSS JOIN rt1 ON (vt0.c0 IN (rt1.c0)) COLLATE RTRIM ORDER BY rt1.c2);
SELECT ALL * FROM v0 CROSS JOIN vt0 ON CAST(CASE rt1.c3  WHEN rt1.c5 THEN rt1.c3 WHEN rt1.c3 THEN v0.c0 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END AS BLOB) CROSS JOIN rt1 ON (vt0.c0 IN (rt1.c0)) COLLATE RTRIM WHERE ('48529558' COLLATE RTRIM) ORDER BY rt1.c2;
SELECT SUM(count) FROM (SELECT (('48529558' COLLATE RTRIM) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON CAST(CASE rt1.c3  WHEN rt1.c5 THEN rt1.c3 WHEN rt1.c3 THEN v0.c0 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END AS BLOB) CROSS JOIN rt1 ON (vt0.c0 IN (rt1.c0)) COLLATE RTRIM ORDER BY rt1.c2);
SELECT ALL * FROM v0 CROSS JOIN vt0 ON CAST(CASE rt1.c3  WHEN rt1.c5 THEN rt1.c3 WHEN rt1.c3 THEN v0.c0 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END AS BLOB) CROSS JOIN rt1 ON (vt0.c0 IN (rt1.c0)) COLLATE RTRIM WHERE ('48529558' COLLATE RTRIM) ORDER BY rt1.c2;
SELECT * FROM vt0, rt1 WHERE (rt1.c3) ORDER BY (((((rt1.c4))>((rt1.c0)))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((((rt1.c4))>((rt1.c0)))) ISNULL) ASC);
SELECT * FROM vt0, rt1 WHERE (rt1.c3) ORDER BY (((((rt1.c4))>((rt1.c0)))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((((rt1.c4))>((rt1.c0)))) ISNULL) ASC);
SELECT * FROM vt0, rt1 WHERE (rt1.c3) ORDER BY (((((rt1.c4))>((rt1.c0)))) ISNULL) ASC;
SELECT ALL * FROM v0, vt0 WHERE (x'') ORDER BY ((((+ (vt0.c0))))>=(((v0.c1 IN ()))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, vt0 ORDER BY ((((+ (vt0.c0))))>=(((v0.c1 IN ()))))  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (x'') ORDER BY ((((+ (vt0.c0))))>=(((v0.c1 IN ()))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, vt0 ORDER BY ((((+ (vt0.c0))))>=(((v0.c1 IN ()))))  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (x'') ORDER BY ((((+ (vt0.c0))))>=(((v0.c1 IN ()))))  NULLS LAST;
SELECT ALL * FROM v0, rt1, vt0 WHERE ((((v0.c1) BETWEEN (rt1.c5) AND ('-0.0')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1) BETWEEN (rt1.c5) AND ('-0.0')) IN ())) IS TRUE)  as count FROM v0, rt1, vt0);
SELECT ALL * FROM v0, rt1, vt0 WHERE ((((v0.c1) BETWEEN (rt1.c5) AND ('-0.0')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1) BETWEEN (rt1.c5) AND ('-0.0')) IN ())) IS TRUE)  as count FROM v0, rt1, vt0);
SELECT ALL * FROM v0, rt1, vt0 WHERE ((((v0.c1) BETWEEN (rt1.c5) AND ('-0.0')) IN ()));
SELECT * FROM rt1 CROSS JOIN v0 ON ((((((((((((((((rt1.c0)AND('Oᡙ4폘揈')))AND(rt1.c4)))OR((rt1.c5 IN (rt1.c1)))))AND(CASE WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c3 END)))AND(((((rt1.c1)AND(rt1.c3)))AND(rt1.c5)))))OR(LIKELY(rt1.c5))))AND(rt1.c2 COLLATE NOCASE)))OR((rt1.c3 IN (rt1.c4)))) RIGHT OUTER JOIN vt0 ON CASE WHEN ((NULL)|(rt1.c5)) THEN (v0.c0 IN ()) END WHERE (((((rt1.c4, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c1)) AND ((rt1.c4, rt1.c4, rt1.c5))) IN (LOWER(DISTINCT rt1.c3)))) ORDER BY ((rt1.c0 COLLATE NOCASE) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c1)) AND ((rt1.c4, rt1.c4, rt1.c5))) IN (LOWER(DISTINCT rt1.c3)))) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON ((((((((((((((((rt1.c0)AND('Oᡙ4폘揈')))AND(rt1.c4)))OR((rt1.c5 IN (rt1.c1)))))AND(CASE WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c3 END)))AND(((((rt1.c1)AND(rt1.c3)))AND(rt1.c5)))))OR(LIKELY(rt1.c5))))AND(rt1.c2 COLLATE NOCASE)))OR((rt1.c3 IN (rt1.c4)))) RIGHT OUTER JOIN vt0 ON CASE WHEN ((NULL)|(rt1.c5)) THEN (v0.c0 IN ()) END ORDER BY ((rt1.c0 COLLATE NOCASE) NOTNULL)  NULLS LAST);
SELECT * FROM rt1 CROSS JOIN v0 ON ((((((((((((((((rt1.c0)AND('Oᡙ4폘揈')))AND(rt1.c4)))OR((rt1.c5 IN (rt1.c1)))))AND(CASE WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c3 END)))AND(((((rt1.c1)AND(rt1.c3)))AND(rt1.c5)))))OR(LIKELY(rt1.c5))))AND(rt1.c2 COLLATE NOCASE)))OR((rt1.c3 IN (rt1.c4)))) RIGHT OUTER JOIN vt0 ON CASE WHEN ((NULL)|(rt1.c5)) THEN (v0.c0 IN ()) END WHERE (((((rt1.c4, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c1)) AND ((rt1.c4, rt1.c4, rt1.c5))) IN (LOWER(DISTINCT rt1.c3)))) ORDER BY ((rt1.c0 COLLATE NOCASE) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c1)) AND ((rt1.c4, rt1.c4, rt1.c5))) IN (LOWER(DISTINCT rt1.c3)))) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON ((((((((((((((((rt1.c0)AND('Oᡙ4폘揈')))AND(rt1.c4)))OR((rt1.c5 IN (rt1.c1)))))AND(CASE WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c3 END)))AND(((((rt1.c1)AND(rt1.c3)))AND(rt1.c5)))))OR(LIKELY(rt1.c5))))AND(rt1.c2 COLLATE NOCASE)))OR((rt1.c3 IN (rt1.c4)))) RIGHT OUTER JOIN vt0 ON CASE WHEN ((NULL)|(rt1.c5)) THEN (v0.c0 IN ()) END ORDER BY ((rt1.c0 COLLATE NOCASE) NOTNULL)  NULLS LAST);
SELECT * FROM rt1 CROSS JOIN v0 ON ((((((((((((((((rt1.c0)AND('Oᡙ4폘揈')))AND(rt1.c4)))OR((rt1.c5 IN (rt1.c1)))))AND(CASE WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c3 END)))AND(((((rt1.c1)AND(rt1.c3)))AND(rt1.c5)))))OR(LIKELY(rt1.c5))))AND(rt1.c2 COLLATE NOCASE)))OR((rt1.c3 IN (rt1.c4)))) RIGHT OUTER JOIN vt0 ON CASE WHEN ((NULL)|(rt1.c5)) THEN (v0.c0 IN ()) END WHERE (((((rt1.c4, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c1)) AND ((rt1.c4, rt1.c4, rt1.c5))) IN (LOWER(DISTINCT rt1.c3)))) ORDER BY ((rt1.c0 COLLATE NOCASE) NOTNULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt1, vt0 WHERE ((((((NULL, rt1.c5, rt1.c3)) NOT BETWEEN ((rt1.c5, rt1.c2, rt1.c2)) AND ((rt1.c1, rt1.c0, rt1.c3))))<=(((x'')=(rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL, rt1.c5, rt1.c3)) NOT BETWEEN ((rt1.c5, rt1.c2, rt1.c2)) AND ((rt1.c1, rt1.c0, rt1.c3))))<=(((x'')=(rt1.c4))))) IS TRUE)  as count FROM v0, rt1, vt0);
SELECT ALL COUNT(*) FROM v0, rt1, vt0 WHERE ((((((NULL, rt1.c5, rt1.c3)) NOT BETWEEN ((rt1.c5, rt1.c2, rt1.c2)) AND ((rt1.c1, rt1.c0, rt1.c3))))<=(((x'')=(rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL, rt1.c5, rt1.c3)) NOT BETWEEN ((rt1.c5, rt1.c2, rt1.c2)) AND ((rt1.c1, rt1.c0, rt1.c3))))<=(((x'')=(rt1.c4))))) IS TRUE)  as count FROM v0, rt1, vt0);
SELECT ALL COUNT(*) FROM v0, rt1, vt0 WHERE ((((((NULL, rt1.c5, rt1.c3)) NOT BETWEEN ((rt1.c5, rt1.c2, rt1.c2)) AND ((rt1.c1, rt1.c0, rt1.c3))))<=(((x'')=(rt1.c4)))));
SELECT ALL * FROM vt0, v0 NATURAL JOIN rt1 WHERE (CASE WHEN (- (rt1.c1)) THEN (v0.c0 IN ()) ELSE ((((rt1.c3)AND(rt1.c4)))AND(rt1.c1)) END) ORDER BY x'6e2d' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (rt1.c1)) THEN (v0.c0 IN ()) ELSE ((((rt1.c3)AND(rt1.c4)))AND(rt1.c1)) END) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN rt1 ORDER BY x'6e2d' DESC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 NATURAL JOIN rt1 WHERE (CASE WHEN (- (rt1.c1)) THEN (v0.c0 IN ()) ELSE ((((rt1.c3)AND(rt1.c4)))AND(rt1.c1)) END) ORDER BY x'6e2d' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (rt1.c1)) THEN (v0.c0 IN ()) ELSE ((((rt1.c3)AND(rt1.c4)))AND(rt1.c1)) END) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN rt1 ORDER BY x'6e2d' DESC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 NATURAL JOIN rt1 WHERE (CASE WHEN (- (rt1.c1)) THEN (v0.c0 IN ()) ELSE ((((rt1.c3)AND(rt1.c4)))AND(rt1.c1)) END) ORDER BY x'6e2d' DESC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (((((rt1.c4, rt1.c0, rt1.c1)) BETWEEN (('536437705', rt1.c5, NULL)) AND ((rt1.c1, rt1.c2, rt1.c5))) IN (CAST(rt1.c3 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c4, rt1.c0, rt1.c1)) BETWEEN (('536437705', rt1.c5, NULL)) AND ((rt1.c1, rt1.c2, rt1.c5))) IN (CAST(rt1.c3 AS REAL)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c4, rt1.c0, rt1.c1)) BETWEEN (('536437705', rt1.c5, NULL)) AND ((rt1.c1, rt1.c2, rt1.c5))) IN (CAST(rt1.c3 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c4, rt1.c0, rt1.c1)) BETWEEN (('536437705', rt1.c5, NULL)) AND ((rt1.c1, rt1.c2, rt1.c5))) IN (CAST(rt1.c3 AS REAL)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c4, rt1.c0, rt1.c1)) BETWEEN (('536437705', rt1.c5, NULL)) AND ((rt1.c1, rt1.c2, rt1.c5))) IN (CAST(rt1.c3 AS REAL))));
SELECT ALL * FROM v0 WHERE (CASE WHEN (('HE(')|(v0.c2)) THEN 7.39236048E8 ELSE (~ (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (('HE(')|(v0.c2)) THEN 7.39236048E8 ELSE (~ (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN (('HE(')|(v0.c2)) THEN 7.39236048E8 ELSE (~ (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (('HE(')|(v0.c2)) THEN 7.39236048E8 ELSE (~ (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN (('HE(')|(v0.c2)) THEN 7.39236048E8 ELSE (~ (v0.c0)) END);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)||(vt0.c0))) ISNULL)) ORDER BY ((CAST(vt0.c0 AS BLOB)) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)||(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS BLOB)) IS TRUE) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)||(vt0.c0))) ISNULL)) ORDER BY ((CAST(vt0.c0 AS BLOB)) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)||(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS BLOB)) IS TRUE) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)||(vt0.c0))) ISNULL)) ORDER BY ((CAST(vt0.c0 AS BLOB)) IS TRUE) DESC  NULLS LAST;
SELECT * FROM v0 WHERE (((((0.8660886801411071)<=(v0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((0.8660886801411071)<=(v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((0.8660886801411071)<=(v0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((0.8660886801411071)<=(v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((0.8660886801411071)<=(v0.c0))) IS TRUE));
SELECT ALL * FROM vt0, v0, rt1 WHERE ('1093421822');
SELECT SUM(count) FROM (SELECT ALL (('1093421822') IS TRUE)  as count FROM vt0, v0, rt1);
SELECT ALL * FROM vt0, v0, rt1 WHERE ('1093421822');
SELECT SUM(count) FROM (SELECT ALL (('1093421822') IS TRUE)  as count FROM vt0, v0, rt1);
SELECT ALL * FROM vt0, v0, rt1 WHERE ('1093421822');
SELECT * FROM rt1 WHERE ((~ (((rt1.c5) NOTNULL)))) ORDER BY ((CAST(rt1.c5 AS BLOB)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((rt1.c5) NOTNULL)))) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c5 AS BLOB)) NOTNULL)  NULLS FIRST);
SELECT * FROM rt1 WHERE ((~ (((rt1.c5) NOTNULL)))) ORDER BY ((CAST(rt1.c5 AS BLOB)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((rt1.c5) NOTNULL)))) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c5 AS BLOB)) NOTNULL)  NULLS FIRST);
SELECT * FROM rt1 WHERE ((~ (((rt1.c5) NOTNULL)))) ORDER BY ((CAST(rt1.c5 AS BLOB)) NOTNULL)  NULLS FIRST;
SELECT * FROM vt0 WHERE (CAST(((vt0.c0)>(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)>(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0)>(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)>(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0)>(vt0.c0)) AS NUMERIC));
SELECT COUNT(*) FROM rt1, v0, vt0 WHERE ((- (0.009894405815244811))) ORDER BY rt1.c3 ASC;
SELECT SUM(count) FROM (SELECT (((- (0.009894405815244811))) IS TRUE)  as count FROM rt1, v0, vt0 ORDER BY rt1.c3 ASC);
SELECT COUNT(*) FROM rt1, v0, vt0 WHERE ((- (0.009894405815244811))) ORDER BY rt1.c3 ASC;
SELECT SUM(count) FROM (SELECT (((- (0.009894405815244811))) IS TRUE)  as count FROM rt1, v0, vt0 ORDER BY rt1.c3 ASC);
SELECT COUNT(*) FROM rt1, v0, vt0 WHERE ((- (0.009894405815244811))) ORDER BY rt1.c3 ASC;
SELECT ALL COUNT(*) FROM v0, vt0, rt1 WHERE ((rt1.c1 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0, rt1);
SELECT ALL COUNT(*) FROM v0, vt0, rt1 WHERE ((rt1.c1 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0, rt1);
SELECT ALL COUNT(*) FROM v0, vt0, rt1 WHERE ((rt1.c1 IN ()) COLLATE NOCASE);
SELECT COUNT(*) FROM rt1 WHERE (LIKELIHOOD((rt1.c4 IN ()), 0.9190672164455805));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((rt1.c4 IN ()), 0.9190672164455805)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (LIKELIHOOD((rt1.c4 IN ()), 0.9190672164455805));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((rt1.c4 IN ()), 0.9190672164455805)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (LIKELIHOOD((rt1.c4 IN ()), 0.9190672164455805));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((((((rt1.c3)OR(rt1.c2)))OR(rt1.c0)))OR(((rt1.c0)+(rt1.c5)))))OR(((rt1.c5)>('潝\r'))))) ORDER BY (((CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END))<((CAST(rt1.c1 AS INTEGER))))  NULLS FIRST, ((((CASE rt1.c0  WHEN rt1.c4 THEN rt1.c1 END)OR(rt1.c1)))AND(((NULL) NOT NULL)))  NULLS LAST, json(rt1.c1)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c3)OR(rt1.c2)))OR(rt1.c0)))OR(((rt1.c0)+(rt1.c5)))))OR(((rt1.c5)>('潝\r'))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END))<((CAST(rt1.c1 AS INTEGER))))  NULLS FIRST, ((((CASE rt1.c0  WHEN rt1.c4 THEN rt1.c1 END)OR(rt1.c1)))AND(((NULL) NOT NULL)))  NULLS LAST, json(rt1.c1)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((((((rt1.c3)OR(rt1.c2)))OR(rt1.c0)))OR(((rt1.c0)+(rt1.c5)))))OR(((rt1.c5)>('潝\r'))))) ORDER BY (((CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END))<((CAST(rt1.c1 AS INTEGER))))  NULLS FIRST, ((((CASE rt1.c0  WHEN rt1.c4 THEN rt1.c1 END)OR(rt1.c1)))AND(((NULL) NOT NULL)))  NULLS LAST, json(rt1.c1)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c3)OR(rt1.c2)))OR(rt1.c0)))OR(((rt1.c0)+(rt1.c5)))))OR(((rt1.c5)>('潝\r'))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END))<((CAST(rt1.c1 AS INTEGER))))  NULLS FIRST, ((((CASE rt1.c0  WHEN rt1.c4 THEN rt1.c1 END)OR(rt1.c1)))AND(((NULL) NOT NULL)))  NULLS LAST, json(rt1.c1)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((((((rt1.c3)OR(rt1.c2)))OR(rt1.c0)))OR(((rt1.c0)+(rt1.c5)))))OR(((rt1.c5)>('潝\r'))))) ORDER BY (((CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END))<((CAST(rt1.c1 AS INTEGER))))  NULLS FIRST, ((((CASE rt1.c0  WHEN rt1.c4 THEN rt1.c1 END)OR(rt1.c1)))AND(((NULL) NOT NULL)))  NULLS LAST, json(rt1.c1)  NULLS LAST;
SELECT * FROM rt1 WHERE ((((rt1.c2)) NOT BETWEEN (('-1371650946')) AND ((((((rt1.c2)AND(rt1.c4)))OR(rt1.c5))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) NOT BETWEEN (('-1371650946')) AND ((((((rt1.c2)AND(rt1.c4)))OR(rt1.c5)))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c2)) NOT BETWEEN (('-1371650946')) AND ((((((rt1.c2)AND(rt1.c4)))OR(rt1.c5))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) NOT BETWEEN (('-1371650946')) AND ((((((rt1.c2)AND(rt1.c4)))OR(rt1.c5)))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c2)) NOT BETWEEN (('-1371650946')) AND ((((((rt1.c2)AND(rt1.c4)))OR(rt1.c5))))));
SELECT ALL * FROM vt0 WHERE ('-801084021');
SELECT SUM(count) FROM (SELECT ALL (('-801084021') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('-801084021');
SELECT SUM(count) FROM (SELECT ALL (('-801084021') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('-801084021');
SELECT ALL COUNT(*) FROM v0, vt0, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt0, rt1);
SELECT ALL COUNT(*) FROM v0, vt0, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt0, rt1);
SELECT ALL COUNT(*) FROM v0, vt0, rt1 WHERE (NULL);
SELECT COUNT(*) FROM vt0, rt1, v0 WHERE (CASE v0.c0  WHEN rt1.c4 COLLATE RTRIM THEN ((rt1.c3) NOT BETWEEN (v0.c1) AND (rt1.c2)) ELSE ((rt1.c0)>(rt1.c5)) END) ORDER BY ((((v0.c1))!=((v0.c0))) IN ()) ASC, (((('1945059209') NOT NULL))>(rt1.c1 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN rt1.c4 COLLATE RTRIM THEN ((rt1.c3) NOT BETWEEN (v0.c1) AND (rt1.c2)) ELSE ((rt1.c0)>(rt1.c5)) END) IS TRUE)  as count FROM vt0, rt1, v0 ORDER BY ((((v0.c1))!=((v0.c0))) IN ()) ASC, (((('1945059209') NOT NULL))>(rt1.c1 COLLATE BINARY)) ASC);
SELECT COUNT(*) FROM vt0, rt1, v0 WHERE (CASE v0.c0  WHEN rt1.c4 COLLATE RTRIM THEN ((rt1.c3) NOT BETWEEN (v0.c1) AND (rt1.c2)) ELSE ((rt1.c0)>(rt1.c5)) END) ORDER BY ((((v0.c1))!=((v0.c0))) IN ()) ASC, (((('1945059209') NOT NULL))>(rt1.c1 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN rt1.c4 COLLATE RTRIM THEN ((rt1.c3) NOT BETWEEN (v0.c1) AND (rt1.c2)) ELSE ((rt1.c0)>(rt1.c5)) END) IS TRUE)  as count FROM vt0, rt1, v0 ORDER BY ((((v0.c1))!=((v0.c0))) IN ()) ASC, (((('1945059209') NOT NULL))>(rt1.c1 COLLATE BINARY)) ASC);
SELECT COUNT(*) FROM vt0, rt1, v0 WHERE (CASE v0.c0  WHEN rt1.c4 COLLATE RTRIM THEN ((rt1.c3) NOT BETWEEN (v0.c1) AND (rt1.c2)) ELSE ((rt1.c0)>(rt1.c5)) END) ORDER BY ((((v0.c1))!=((v0.c0))) IN ()) ASC, (((('1945059209') NOT NULL))>(rt1.c1 COLLATE BINARY)) ASC;
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)IS NOT(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)IS NOT(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)IS NOT(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)IS NOT(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)IS NOT(vt0.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN v0 ON v0.c2 LEFT OUTER JOIN vt0 ON (((((v0.c2)LIKE(v0.c1)), rt1.c1 COLLATE NOCASE, LTRIM(rt1.c0, rt1.c5), ((rt1.c3)!=(v0.c0)), CAST(vt0.c0 AS REAL)))!=((rt1.c0 COLLATE NOCASE, CASE v0.c1  WHEN 0.1292216727464206 THEN vt0.c0 WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c5 THEN rt1.c4 END, (rt1.c2 IN (rt1.c3)), v0.c0, 0.6006262485185876))) WHERE (((((rt1.c1 IN ()), ((vt0.c0)>>(rt1.c1)), (NOT (rt1.c5))))<=((((v0.c2) NOT BETWEEN (rt1.c1) AND (v0.c1)), ((vt0.c0)IS(rt1.c5)), CAST(v0.c1 AS TEXT))))) ORDER BY COALESCE(((x'5933')%(rt1.c0)), ((v0.c2)<=(rt1.c2)), ((v0.c2)<=(rt1.c2)), ((((rt1.c5)OR(v0.c1)))AND(v0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1 IN ()), ((vt0.c0)>>(rt1.c1)), (NOT (rt1.c5))))<=((((v0.c2) NOT BETWEEN (rt1.c1) AND (v0.c1)), ((vt0.c0)IS(rt1.c5)), CAST(v0.c1 AS TEXT))))) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON v0.c2 LEFT OUTER JOIN vt0 ON (((((v0.c2)LIKE(v0.c1)), rt1.c1 COLLATE NOCASE, LTRIM(rt1.c0, rt1.c5), ((rt1.c3)<>(v0.c0)), CAST(vt0.c0 AS REAL)))!=((rt1.c0 COLLATE NOCASE, CASE v0.c1  WHEN 0.1292216727464206 THEN vt0.c0 WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c5 THEN rt1.c4 END, (rt1.c2 IN (rt1.c3)), v0.c0, 0.6006262485185876))) ORDER BY COALESCE(((x'5933')%(rt1.c0)), ((v0.c2)<=(rt1.c2)), ((v0.c2)<=(rt1.c2)), ((((rt1.c5)OR(v0.c1)))AND(v0.c0))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN v0 ON v0.c2 LEFT OUTER JOIN vt0 ON (((((v0.c2)LIKE(v0.c1)), rt1.c1 COLLATE NOCASE, LTRIM(rt1.c0, rt1.c5), ((rt1.c3)!=(v0.c0)), CAST(vt0.c0 AS REAL)))!=((rt1.c0 COLLATE NOCASE, CASE v0.c1  WHEN 0.1292216727464206 THEN vt0.c0 WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c5 THEN rt1.c4 END, (rt1.c2 IN (rt1.c3)), v0.c0, 0.6006262485185876))) WHERE (((((rt1.c1 IN ()), ((vt0.c0)>>(rt1.c1)), (NOT (rt1.c5))))<=((((v0.c2) NOT BETWEEN (rt1.c1) AND (v0.c1)), ((vt0.c0)IS(rt1.c5)), CAST(v0.c1 AS TEXT))))) ORDER BY COALESCE(((x'5933')%(rt1.c0)), ((v0.c2)<=(rt1.c2)), ((v0.c2)<=(rt1.c2)), ((((rt1.c5)OR(v0.c1)))AND(v0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1 IN ()), ((vt0.c0)>>(rt1.c1)), (NOT (rt1.c5))))<=((((v0.c2) NOT BETWEEN (rt1.c1) AND (v0.c1)), ((vt0.c0)IS(rt1.c5)), CAST(v0.c1 AS TEXT))))) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON v0.c2 LEFT OUTER JOIN vt0 ON (((((v0.c2)LIKE(v0.c1)), rt1.c1 COLLATE NOCASE, LTRIM(rt1.c0, rt1.c5), ((rt1.c3)<>(v0.c0)), CAST(vt0.c0 AS REAL)))!=((rt1.c0 COLLATE NOCASE, CASE v0.c1  WHEN 0.1292216727464206 THEN vt0.c0 WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c5 THEN rt1.c4 END, (rt1.c2 IN (rt1.c3)), v0.c0, 0.6006262485185876))) ORDER BY COALESCE(((x'5933')%(rt1.c0)), ((v0.c2)<=(rt1.c2)), ((v0.c2)<=(rt1.c2)), ((((rt1.c5)OR(v0.c1)))AND(v0.c0))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN v0 ON v0.c2 LEFT OUTER JOIN vt0 ON (((((v0.c2)LIKE(v0.c1)), rt1.c1 COLLATE NOCASE, LTRIM(rt1.c0, rt1.c5), ((rt1.c3)!=(v0.c0)), CAST(vt0.c0 AS REAL)))!=((rt1.c0 COLLATE NOCASE, CASE v0.c1  WHEN 0.1292216727464206 THEN vt0.c0 WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c5 THEN rt1.c4 END, (rt1.c2 IN (rt1.c3)), v0.c0, 0.6006262485185876))) WHERE (((((rt1.c1 IN ()), ((vt0.c0)>>(rt1.c1)), (NOT (rt1.c5))))<=((((v0.c2) NOT BETWEEN (rt1.c1) AND (v0.c1)), ((vt0.c0)IS(rt1.c5)), CAST(v0.c1 AS TEXT))))) ORDER BY COALESCE(((x'5933')%(rt1.c0)), ((v0.c2)<=(rt1.c2)), ((v0.c2)<=(rt1.c2)), ((((rt1.c5)OR(v0.c1)))AND(v0.c0))) DESC  NULLS LAST;
SELECT ALL * FROM vt0, rt1 WHERE (((UPPER(rt1.c1))*((((('87554338')OR(rt1.c2)))AND(rt1.c5)))));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(rt1.c1))*((((('87554338')OR(rt1.c2)))AND(rt1.c5))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((UPPER(rt1.c1))*((((('87554338')OR(rt1.c2)))AND(rt1.c5)))));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(rt1.c1))*((((('87554338')OR(rt1.c2)))AND(rt1.c5))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((UPPER(rt1.c1))*((((('87554338')OR(rt1.c2)))AND(rt1.c5)))));
SELECT COUNT(*) FROM rt1, vt0, v0 WHERE (CASE v0.c0  WHEN rt1.c0 THEN ((rt1.c3)-(rt1.c1)) WHEN TYPEOF(DISTINCT rt1.c4) THEN ((rt1.c2)%(rt1.c2)) WHEN 0.3805193217694608 THEN (v0.c2 IN ()) WHEN ((((((((v0.c1)OR(v0.c2)))OR(v0.c1)))OR(rt1.c5)))OR(rt1.c3)) THEN TRIM(rt1.c5, rt1.c1) WHEN SQLITE_COMPILEOPTION_USED(vt0.c0) THEN ((rt1.c5)>=(rt1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN rt1.c0 THEN ((rt1.c3)-(rt1.c1)) WHEN TYPEOF(DISTINCT rt1.c4) THEN ((rt1.c2)%(rt1.c2)) WHEN 0.3805193217694608 THEN (v0.c2 IN ()) WHEN ((((((((v0.c1)OR(v0.c2)))OR(v0.c1)))OR(rt1.c5)))OR(rt1.c3)) THEN TRIM(rt1.c5, rt1.c1) WHEN SQLITE_COMPILEOPTION_USED(vt0.c0) THEN ((rt1.c5)>=(rt1.c2)) END) IS TRUE)  as count FROM rt1, vt0, v0);
SELECT COUNT(*) FROM rt1, vt0, v0 WHERE (CASE v0.c0  WHEN rt1.c0 THEN ((rt1.c3)-(rt1.c1)) WHEN TYPEOF(DISTINCT rt1.c4) THEN ((rt1.c2)%(rt1.c2)) WHEN 0.3805193217694608 THEN (v0.c2 IN ()) WHEN ((((((((v0.c1)OR(v0.c2)))OR(v0.c1)))OR(rt1.c5)))OR(rt1.c3)) THEN TRIM(rt1.c5, rt1.c1) WHEN SQLITE_COMPILEOPTION_USED(vt0.c0) THEN ((rt1.c5)>=(rt1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN rt1.c0 THEN ((rt1.c3)-(rt1.c1)) WHEN TYPEOF(DISTINCT rt1.c4) THEN ((rt1.c2)%(rt1.c2)) WHEN 0.3805193217694608 THEN (v0.c2 IN ()) WHEN ((((((((v0.c1)OR(v0.c2)))OR(v0.c1)))OR(rt1.c5)))OR(rt1.c3)) THEN TRIM(rt1.c5, rt1.c1) WHEN SQLITE_COMPILEOPTION_USED(vt0.c0) THEN ((rt1.c5)>=(rt1.c2)) END) IS TRUE)  as count FROM rt1, vt0, v0);
SELECT COUNT(*) FROM rt1, vt0, v0 WHERE (CASE v0.c0  WHEN rt1.c0 THEN ((rt1.c3)-(rt1.c1)) WHEN TYPEOF(DISTINCT rt1.c4) THEN ((rt1.c2)%(rt1.c2)) WHEN 0.3805193217694608 THEN (v0.c2 IN ()) WHEN ((((((((v0.c1)OR(v0.c2)))OR(v0.c1)))OR(rt1.c5)))OR(rt1.c3)) THEN TRIM(rt1.c5, rt1.c1) WHEN SQLITE_COMPILEOPTION_USED(vt0.c0) THEN ((rt1.c5)>=(rt1.c2)) END);
SELECT COUNT(*) FROM rt1, v0, vt0 WHERE (CAST(0X6d1b1c84 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0x6d1b1c84 AS NUMERIC)) IS TRUE)  as count FROM rt1, v0, vt0);
SELECT COUNT(*) FROM rt1, v0, vt0 WHERE (CAST(0X6d1b1c84 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0x6d1b1c84 AS NUMERIC)) IS TRUE)  as count FROM rt1, v0, vt0);
SELECT COUNT(*) FROM rt1, v0, vt0 WHERE (CAST(0X6d1b1c84 AS NUMERIC));
SELECT ALL * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END) IS FALSE)) ORDER BY (((((v0.c0))>=(('1518577429')))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0))>=(('1518577429')))) NOTNULL)  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END) IS FALSE)) ORDER BY (((((v0.c0))>=(('1518577429')))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0))>=(('1518577429')))) NOTNULL)  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END) IS FALSE)) ORDER BY (((((v0.c0))>=(('1518577429')))) NOTNULL)  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ('') ORDER BY ((((vt0.c0)AND(CAST(vt0.c0 AS REAL))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)AND(CAST(vt0.c0 AS REAL))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE ('') ORDER BY ((((vt0.c0)AND(CAST(vt0.c0 AS REAL))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)AND(CAST(vt0.c0 AS REAL))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE ('') ORDER BY ((((vt0.c0)AND(CAST(vt0.c0 AS REAL))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) ASC;
SELECT COUNT(*) FROM v0, rt1, vt0 WHERE (((UPPER(rt1.c3)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(rt1.c3)) IS TRUE)) IS TRUE)  as count FROM v0, rt1, vt0);
SELECT COUNT(*) FROM v0, rt1, vt0 WHERE (((UPPER(rt1.c3)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(rt1.c3)) IS TRUE)) IS TRUE)  as count FROM v0, rt1, vt0);
SELECT COUNT(*) FROM v0, rt1, vt0 WHERE (((UPPER(rt1.c3)) IS TRUE));
SELECT COUNT(*) FROM vt0, rt1 WHERE (CAST(((rt1.c2)<>(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2)!=(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CAST(((rt1.c2)<>(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2)!=(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CAST(((rt1.c2)<>(vt0.c0)) AS NUMERIC));
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (0.02826634144362028) ORDER BY (((((v0.c2)) NOT BETWEEN ((vt0.c0)) AND ((v0.c2)))) BETWEEN (((((v0.c0)AND(v0.c2)))AND('yUaV涋'))) AND ((((v0.c2))<((v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.02826634144362028) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY (((((v0.c2)) NOT BETWEEN ((vt0.c0)) AND ((v0.c2)))) BETWEEN (((((v0.c0)AND(v0.c2)))AND('yUaV涋'))) AND ((((v0.c2))<((v0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (0.02826634144362028) ORDER BY (((((v0.c2)) NOT BETWEEN ((vt0.c0)) AND ((v0.c2)))) BETWEEN (((((v0.c0)AND(v0.c2)))AND('yUaV涋'))) AND ((((v0.c2))<((v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.02826634144362028) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY (((((v0.c2)) NOT BETWEEN ((vt0.c0)) AND ((v0.c2)))) BETWEEN (((((v0.c0)AND(v0.c2)))AND('yUaV涋'))) AND ((((v0.c2))<((v0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (0.02826634144362028) ORDER BY (((((v0.c2)) NOT BETWEEN ((vt0.c0)) AND ((v0.c2)))) BETWEEN (((((v0.c0)AND(v0.c2)))AND('yUaV涋'))) AND ((((v0.c2))<((v0.c0)))))  NULLS LAST;
SELECT * FROM v0, rt1, vt0 WHERE ((((((rt1.c5)>=(v0.c1)), ((v0.c0)&(rt1.c5)), (- (rt1.c4))))!=((0.16742324832198474, 0.5423115060107054, UNLIKELY(DISTINCT rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c5)>=(v0.c1)), ((v0.c0)&(rt1.c5)), (- (rt1.c4))))<>((0.16742324832198474, 0.5423115060107054, UNLIKELY(DISTINCT rt1.c0))))) IS TRUE)  as count FROM v0, rt1, vt0);
SELECT * FROM v0, rt1, vt0 WHERE ((((((rt1.c5)>=(v0.c1)), ((v0.c0)&(rt1.c5)), (- (rt1.c4))))!=((0.16742324832198474, 0.5423115060107054, UNLIKELY(DISTINCT rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c5)>=(v0.c1)), ((v0.c0)&(rt1.c5)), (- (rt1.c4))))<>((0.16742324832198474, 0.5423115060107054, UNLIKELY(DISTINCT rt1.c0))))) IS TRUE)  as count FROM v0, rt1, vt0);
SELECT * FROM v0, rt1, vt0 WHERE ((((((rt1.c5)>=(v0.c1)), ((v0.c0)&(rt1.c5)), (- (rt1.c4))))!=((0.16742324832198474, 0.5423115060107054, UNLIKELY(DISTINCT rt1.c0)))));
SELECT ALL * FROM vt0, rt1 WHERE (CASE CASE rt1.c0  WHEN rt1.c3 THEN vt0.c0 END  WHEN (((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c2))) THEN ((rt1.c2) ISNULL) WHEN -9223372036854775808 THEN ((((x'')OR(vt0.c0)))AND(rt1.c2)) WHEN ((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c5)) THEN ((rt1.c5)<(rt1.c4)) WHEN (~ (rt1.c3)) THEN rt1.c2 COLLATE NOCASE WHEN ((rt1.c5)>=(NULL)) THEN ((('0.42086271446318935'))<>((rt1.c4))) END) ORDER BY CAST(rt1.c5 AS REAL) DESC, (- ((+ (rt1.c4))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt1.c0  WHEN rt1.c3 THEN vt0.c0 END  WHEN (((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c2))) THEN ((rt1.c2) ISNULL) WHEN -9223372036854775808 THEN ((((x'')OR(vt0.c0)))AND(rt1.c2)) WHEN ((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c5)) THEN ((rt1.c5)<(rt1.c4)) WHEN (~ (rt1.c3)) THEN rt1.c2 COLLATE NOCASE WHEN ((rt1.c5)>=(NULL)) THEN ((('0.42086271446318935'))<>((rt1.c4))) END) IS TRUE)  as count FROM vt0, rt1 ORDER BY CAST(rt1.c5 AS REAL) DESC, (- ((+ (rt1.c4))))  NULLS LAST);
SELECT ALL * FROM vt0, rt1 WHERE (CASE CASE rt1.c0  WHEN rt1.c3 THEN vt0.c0 END  WHEN (((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c2))) THEN ((rt1.c2) ISNULL) WHEN -9223372036854775808 THEN ((((x'')OR(vt0.c0)))AND(rt1.c2)) WHEN ((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c5)) THEN ((rt1.c5)<(rt1.c4)) WHEN (~ (rt1.c3)) THEN rt1.c2 COLLATE NOCASE WHEN ((rt1.c5)>=(NULL)) THEN ((('0.42086271446318935'))<>((rt1.c4))) END) ORDER BY CAST(rt1.c5 AS REAL) DESC, (- ((+ (rt1.c4))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt1.c0  WHEN rt1.c3 THEN vt0.c0 END  WHEN (((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c2))) THEN ((rt1.c2) ISNULL) WHEN -9223372036854775808 THEN ((((x'')OR(vt0.c0)))AND(rt1.c2)) WHEN ((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c5)) THEN ((rt1.c5)<(rt1.c4)) WHEN (~ (rt1.c3)) THEN rt1.c2 COLLATE NOCASE WHEN ((rt1.c5)>=(NULL)) THEN ((('0.42086271446318935'))<>((rt1.c4))) END) IS TRUE)  as count FROM vt0, rt1 ORDER BY CAST(rt1.c5 AS REAL) DESC, (- ((+ (rt1.c4))))  NULLS LAST);
SELECT ALL * FROM vt0, rt1 WHERE (CASE CASE rt1.c0  WHEN rt1.c3 THEN vt0.c0 END  WHEN (((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c2))) THEN ((rt1.c2) ISNULL) WHEN -9223372036854775808 THEN ((((x'')OR(vt0.c0)))AND(rt1.c2)) WHEN ((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c5)) THEN ((rt1.c5)<(rt1.c4)) WHEN (~ (rt1.c3)) THEN rt1.c2 COLLATE NOCASE WHEN ((rt1.c5)>=(NULL)) THEN ((('0.42086271446318935'))<>((rt1.c4))) END) ORDER BY CAST(rt1.c5 AS REAL) DESC, (- ((+ (rt1.c4))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c0))) IS FALSE)) ORDER BY (~ (HEX(vt0.c0)))  NULLS FIRST, ((((vt0.c0)LIKE(vt0.c0))) BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(0xffffffffe89339aa))) AND (CAST(vt0.c0 AS INTEGER))) DESC, ((vt0.c0) IS TRUE);
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (~ (HEX(vt0.c0)))  NULLS FIRST, ((((vt0.c0)LIKE(vt0.c0))) BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(0Xffffffffe89339aa))) AND (CAST(vt0.c0 AS INTEGER))) DESC, ((vt0.c0) IS TRUE));
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c0))) IS FALSE)) ORDER BY (~ (HEX(vt0.c0)))  NULLS FIRST, ((((vt0.c0)LIKE(vt0.c0))) BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(0xffffffffe89339aa))) AND (CAST(vt0.c0 AS INTEGER))) DESC, ((vt0.c0) IS TRUE);
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (~ (HEX(vt0.c0)))  NULLS FIRST, ((((vt0.c0)LIKE(vt0.c0))) BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(0Xffffffffe89339aa))) AND (CAST(vt0.c0 AS INTEGER))) DESC, ((vt0.c0) IS TRUE));
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c0))) IS FALSE)) ORDER BY (~ (HEX(vt0.c0)))  NULLS FIRST, ((((vt0.c0)LIKE(vt0.c0))) BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(0xffffffffe89339aa))) AND (CAST(vt0.c0 AS INTEGER))) DESC, ((vt0.c0) IS TRUE);
SELECT * FROM v0, rt1 WHERE (CASE WHEN rt1.c2 THEN rt1.c1 COLLATE BINARY WHEN v0.c0 THEN 'sb#' WHEN CAST(v0.c0 AS TEXT) THEN rt1.c4 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c2 THEN rt1.c1 COLLATE BINARY WHEN v0.c0 THEN 'sb#' WHEN CAST(v0.c0 AS TEXT) THEN rt1.c4 COLLATE NOCASE END) IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0, rt1 WHERE (CASE WHEN rt1.c2 THEN rt1.c1 COLLATE BINARY WHEN v0.c0 THEN 'sb#' WHEN CAST(v0.c0 AS TEXT) THEN rt1.c4 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c2 THEN rt1.c1 COLLATE BINARY WHEN v0.c0 THEN 'sb#' WHEN CAST(v0.c0 AS TEXT) THEN rt1.c4 COLLATE NOCASE END) IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0, rt1 WHERE (CASE WHEN rt1.c2 THEN rt1.c1 COLLATE BINARY WHEN v0.c0 THEN 'sb#' WHEN CAST(v0.c0 AS TEXT) THEN rt1.c4 COLLATE NOCASE END);
SELECT COUNT(*) FROM rt1, vt0 RIGHT OUTER JOIN v0 ON ((((((v0.c0) BETWEEN (NULL) AND (v0.c2)))OR((vt0.c0 IN (v0.c2, rt1.c4)))))OR(((vt0.c0)<=(rt1.c5)))) WHERE (CASE CAST(rt1.c5 AS REAL)  WHEN ((vt0.c0)<=(v0.c1)) THEN CAST(v0.c0 AS INTEGER) ELSE (v0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt1.c5 AS REAL)  WHEN ((vt0.c0)<=(v0.c1)) THEN CAST(v0.c0 AS INTEGER) ELSE (v0.c1 IN ()) END) IS TRUE)  as count FROM rt1, vt0 RIGHT OUTER JOIN v0 ON ((((((v0.c0) BETWEEN (NULL) AND (v0.c2)))OR((vt0.c0 IN (v0.c2, rt1.c4)))))OR(((vt0.c0)<=(rt1.c5)))));
SELECT COUNT(*) FROM rt1, vt0 RIGHT OUTER JOIN v0 ON ((((((v0.c0) BETWEEN (NULL) AND (v0.c2)))OR((vt0.c0 IN (v0.c2, rt1.c4)))))OR(((vt0.c0)<=(rt1.c5)))) WHERE (CASE CAST(rt1.c5 AS REAL)  WHEN ((vt0.c0)<=(v0.c1)) THEN CAST(v0.c0 AS INTEGER) ELSE (v0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt1.c5 AS REAL)  WHEN ((vt0.c0)<=(v0.c1)) THEN CAST(v0.c0 AS INTEGER) ELSE (v0.c1 IN ()) END) IS TRUE)  as count FROM rt1, vt0 RIGHT OUTER JOIN v0 ON ((((((v0.c0) BETWEEN (NULL) AND (v0.c2)))OR((vt0.c0 IN (v0.c2, rt1.c4)))))OR(((vt0.c0)<=(rt1.c5)))));
SELECT COUNT(*) FROM rt1, vt0 RIGHT OUTER JOIN v0 ON ((((((v0.c0) BETWEEN (NULL) AND (v0.c2)))OR((vt0.c0 IN (v0.c2, rt1.c4)))))OR(((vt0.c0)<=(rt1.c5)))) WHERE (CASE CAST(rt1.c5 AS REAL)  WHEN ((vt0.c0)<=(v0.c1)) THEN CAST(v0.c0 AS INTEGER) ELSE (v0.c1 IN ()) END);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt1 ON -1034296216 WHERE (NULLIF(((rt1.c5)=(rt1.c4)), (((rt1.c1, rt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c3, v0.c1, rt1.c0)) AND ((rt1.c4, v0.c1, v0.c1))))) ORDER BY CAST(rt1.c4 COLLATE BINARY AS TEXT) DESC, (((v0.c0)) NOT BETWEEN ((rt1.c5)) AND ((v0.c1))) COLLATE RTRIM, rt1.c2;
SELECT SUM(count) FROM (SELECT ((NULLIF(((rt1.c5)==(rt1.c4)), (((rt1.c1, rt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c3, v0.c1, rt1.c0)) AND ((rt1.c4, v0.c1, v0.c1))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt1 ON -1034296216 ORDER BY CAST(rt1.c4 COLLATE BINARY AS TEXT) DESC, (((v0.c0)) NOT BETWEEN ((rt1.c5)) AND ((v0.c1))) COLLATE RTRIM, rt1.c2);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt1 ON -1034296216 WHERE (NULLIF(((rt1.c5)=(rt1.c4)), (((rt1.c1, rt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c3, v0.c1, rt1.c0)) AND ((rt1.c4, v0.c1, v0.c1))))) ORDER BY CAST(rt1.c4 COLLATE BINARY AS TEXT) DESC, (((v0.c0)) NOT BETWEEN ((rt1.c5)) AND ((v0.c1))) COLLATE RTRIM, rt1.c2;
SELECT SUM(count) FROM (SELECT ((NULLIF(((rt1.c5)==(rt1.c4)), (((rt1.c1, rt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c3, v0.c1, rt1.c0)) AND ((rt1.c4, v0.c1, v0.c1))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt1 ON -1034296216 ORDER BY CAST(rt1.c4 COLLATE BINARY AS TEXT) DESC, (((v0.c0)) NOT BETWEEN ((rt1.c5)) AND ((v0.c1))) COLLATE RTRIM, rt1.c2);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt1 ON -1034296216 WHERE (NULLIF(((rt1.c5)=(rt1.c4)), (((rt1.c1, rt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c3, v0.c1, rt1.c0)) AND ((rt1.c4, v0.c1, v0.c1))))) ORDER BY CAST(rt1.c4 COLLATE BINARY AS TEXT) DESC, (((v0.c0)) NOT BETWEEN ((rt1.c5)) AND ((v0.c1))) COLLATE RTRIM, rt1.c2;
SELECT COUNT(*) FROM vt0 INNER JOIN rt1 ON CAST(rt1.c0 COLLATE BINARY AS BLOB) WHERE (((HEX(rt1.c2))|(CAST(rt1.c3 AS BLOB)))) ORDER BY ((((((rt1.c5)OR(vt0.c0)))OR(rt1.c2))) NOT BETWEEN (((rt1.c3) IS FALSE)) AND ((NOT (rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((HEX(rt1.c2))|(CAST(rt1.c3 AS BLOB)))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON CAST(rt1.c0 COLLATE BINARY AS BLOB) ORDER BY ((((((rt1.c5)OR(vt0.c0)))OR(rt1.c2))) NOT BETWEEN (((rt1.c3) IS FALSE)) AND ((NOT (rt1.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INNER JOIN rt1 ON CAST(rt1.c0 COLLATE BINARY AS BLOB) WHERE (((HEX(rt1.c2))|(CAST(rt1.c3 AS BLOB)))) ORDER BY ((((((rt1.c5)OR(vt0.c0)))OR(rt1.c2))) NOT BETWEEN (((rt1.c3) IS FALSE)) AND ((NOT (rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((HEX(rt1.c2))|(CAST(rt1.c3 AS BLOB)))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON CAST(rt1.c0 COLLATE BINARY AS BLOB) ORDER BY ((((((rt1.c5)OR(vt0.c0)))OR(rt1.c2))) NOT BETWEEN (((rt1.c3) IS FALSE)) AND ((NOT (rt1.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INNER JOIN rt1 ON CAST(rt1.c0 COLLATE BINARY AS BLOB) WHERE (((HEX(rt1.c2))|(CAST(rt1.c3 AS BLOB)))) ORDER BY ((((((rt1.c5)OR(vt0.c0)))OR(rt1.c2))) NOT BETWEEN (((rt1.c3) IS FALSE)) AND ((NOT (rt1.c2))))  NULLS FIRST;
SELECT ALL * FROM v0, vt0, rt1 WHERE ((~ ((((v0.c0)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c5))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((v0.c0)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c5)))))) IS TRUE)  as count FROM v0, vt0, rt1);
SELECT ALL * FROM v0, vt0, rt1 WHERE ((~ ((((v0.c0)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c5))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((v0.c0)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c5)))))) IS TRUE)  as count FROM v0, vt0, rt1);
SELECT ALL * FROM v0, vt0, rt1 WHERE ((~ ((((v0.c0)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c5))))));
SELECT * FROM vt0 WHERE ((((+ (vt0.c0)))||(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))||(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((+ (vt0.c0)))||(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))||(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((+ (vt0.c0)))||(((vt0.c0) NOTNULL))));
SELECT ALL * FROM vt0, rt1 WHERE (x'') ORDER BY (~ ((~ (rt1.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt1 ORDER BY (~ ((~ (rt1.c3)))) DESC);
SELECT ALL * FROM vt0, rt1 WHERE (x'') ORDER BY (~ ((~ (rt1.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt1 ORDER BY (~ ((~ (rt1.c3)))) DESC);
SELECT ALL * FROM vt0, rt1 WHERE (x'') ORDER BY (~ ((~ (rt1.c3)))) DESC;
SELECT * FROM vt0, v0, rt1 WHERE (((((rt1.c5)AND(rt1.c1)))OR(rt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c5)AND(rt1.c1)))OR(rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, rt1);
SELECT * FROM vt0, v0, rt1 WHERE (((((rt1.c5)AND(rt1.c1)))OR(rt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c5)AND(rt1.c1)))OR(rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, rt1);
SELECT * FROM vt0, v0, rt1 WHERE (((((rt1.c5)AND(rt1.c1)))OR(rt1.c0)) COLLATE BINARY);
SELECT * FROM v0 FULL OUTER JOIN rt1 ON ((((rt1.c2)||(rt1.c0))) BETWEEN ((rt1.c5 IN ())) AND (x'')) WHERE ((((rt1.c2)) BETWEEN (((((rt1.c5)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))))) AND ((((rt1.c3) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) BETWEEN (((((rt1.c5)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))))) AND ((((rt1.c3) ISNULL))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt1 ON ((((rt1.c2)||(rt1.c0))) BETWEEN ((rt1.c5 IN ())) AND (x'')));
SELECT * FROM v0 FULL OUTER JOIN rt1 ON ((((rt1.c2)||(rt1.c0))) BETWEEN ((rt1.c5 IN ())) AND (x'')) WHERE ((((rt1.c2)) BETWEEN (((((rt1.c5)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))))) AND ((((rt1.c3) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) BETWEEN (((((rt1.c5)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))))) AND ((((rt1.c3) ISNULL))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt1 ON ((((rt1.c2)||(rt1.c0))) BETWEEN ((rt1.c5 IN ())) AND (x'')));
SELECT * FROM v0 FULL OUTER JOIN rt1 ON ((((rt1.c2)||(rt1.c0))) BETWEEN ((rt1.c5 IN ())) AND (x'')) WHERE ((((rt1.c2)) BETWEEN (((((rt1.c5)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))))) AND ((((rt1.c3) ISNULL)))));
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)>(x'')));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)>(x''))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)>(x'')));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)>(x''))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)>(x'')));
SELECT * FROM rt1 WHERE (CAST(CAST(rt1.c4 AS INTEGER) AS TEXT)) ORDER BY (~ (((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c5))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c4 AS INTEGER) AS TEXT)) IS TRUE)  as count FROM rt1 ORDER BY (~ (((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c5))))  NULLS LAST);
SELECT * FROM rt1 WHERE (CAST(CAST(rt1.c4 AS INTEGER) AS TEXT)) ORDER BY (~ (((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c5))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c4 AS INTEGER) AS TEXT)) IS TRUE)  as count FROM rt1 ORDER BY (~ (((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c5))))  NULLS LAST);
SELECT * FROM rt1 WHERE (CAST(CAST(rt1.c4 AS INTEGER) AS TEXT)) ORDER BY (~ (((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c5))))  NULLS LAST;
