-- Time: 2024/06/09 01:00:05
-- Database: database45
-- Database version: 3.40.0
-- seed value: 4128782345
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 1ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED, tokenize=porter); -- 1ms;
INSERT OR IGNORE INTO rt0(c1, c2) VALUES (NULL, 0.0587514516393286); -- 1ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (x'110953a8'); -- 1ms;
UPDATE OR REPLACE vt1 SET (c0)=(0.626081072031395); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=x'4ca23e48'; -- 0ms;
UPDATE OR FAIL rt0 SET c2='-820321308'; -- 0ms;
UPDATE OR ROLLBACK vt1 SET (c0)=(0.26737145968249254); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1) VALUES (0.1025161453717619); -- 0ms;
UPDATE rt0 SET c2='xb' WHERE ((rt0.c2 COLLATE BINARY) BETWEEN ((('-820321308') ISNULL)) AND (((rt0.c2)OR(rt0.c2)))); -- 0ms;
INSERT OR REPLACE INTO vt1(c0) VALUES ('[뜾>o,'); -- 1ms;
PRAGMA cache_size; -- 0ms;
END TRANSACTION; -- 1ms;
INSERT OR ABORT INTO vt1 VALUES ('E,Ge~'''); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -1795111047);\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 2114772126); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=-737205745,2');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1183476851); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 7); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -895043778);\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '41652'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '55373'); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=-1688499770,7');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 14ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (NULL); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0, c0, c0)=('-1688499770', NULL, x''); -- 1ms;
UPDATE OR IGNORE rt0 SET c2='[뜾>o,' WHERE (((~ ('-1795111047')))GLOB((((rt0.c0))==((rt0.c0))))); -- 0ms;
INSERT OR FAIL INTO vt1(c0) VALUES ('-820321308'); -- 0ms;
UPDATE OR IGNORE vt1 SET c0=x'' WHERE (('eX%}e|' COLLATE NOCASE)-(CASE vt1.c0  WHEN vt1.c0 THEN '-1688499770' ELSE vt1.c0 END)); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (x'5ea91bcd'); -- 1ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (x''); -- 0ms;
UPDATE OR IGNORE rt0 SET c0=x'' WHERE ((rt0.c0 COLLATE BINARY)<(0.2058934098835793 COLLATE RTRIM)); -- 0ms;
PRAGMA temp.journal_mode; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA main.journal_size_limit = -1129568458291192277; -- 0ms;
PRAGMA temp.secure_delete; -- 0ms;
REINDEX BINARY; -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (1890114422); -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 826949355);\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -895043778);\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '20918'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 256939303); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1854226442); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '50994'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=3'); -- 0ms;
INSERT OR FAIL INTO vt1 VALUES (x''); -- 0ms;
PRAGMA mmap_size; -- 0ms;
INSERT OR REPLACE INTO rt0(c0) VALUES (x''); -- 0ms;
COMMIT; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
UPDATE vt1 SET c0=NULL, c0=NULL WHERE (NOT ((('-820321308') NOT BETWEEN (0.5736798221535413) AND (vt1.c0)))); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE rt0 SET c1='?kft' WHERE ((rt0.c2)<(((rt0.c0)AND('H9')))); -- 1ms;
PRAGMA main.integrity_check; -- 0ms;
UPDATE rt0 SET c0=x'7dac39d5', c2='-1795111047' WHERE CAST((+ (rt0.c0)) AS INTEGER); -- 1ms;
UPDATE OR IGNORE rt0 SET c0=0.5162212064469653, c2=NULL; -- 0ms;
PRAGMA reverse_unordered_selects; -- 0ms;
END; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA main.cell_size_check = false; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES (0.7008916713952005); -- 0ms;
UPDATE vt1 SET (c0, c0, c0)=(x'', 0.977222982365177, x''); -- 1ms;
UPDATE vt1 SET c0='-1688499770'; -- 1ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES (NULL, '-1688499770'); -- 0ms;
ANALYZE rt0; -- 0ms;
UPDATE vt1 SET (c0, c0, c0)=(NULL, '1890114422', 'E,GE~'''); -- 1ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=x'' WHERE (((vt1.c0 COLLATE NOCASE))!=((((vt1.c0) NOTNULL)))); -- 1ms;
UPDATE rt0 SET c2='-1688499770'; -- 1ms;
UPDATE OR FAIL rt0 SET c0=0x333679dd WHERE ((((rt0.c2)!=(rt0.c0)))AND(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(NULL); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=672907935,4');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 2); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
PRAGMA default_cache_size = -820321308; -- 1ms;
REINDEX RTRIM; -- 0ms;
UPDATE rt0 SET c1=-7.37205745E8 WHERE ((GLOB(rt0.c2, rt0.c2))-((+ ('1913747535')))); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
DELETE FROM vt1 WHERE ((CAST('nkSP㻫[' AS INTEGER))AND(vt1.c0 COLLATE NOCASE)); -- 0ms;
UPDATE OR IGNORE vt1 SET c0=826949355 WHERE (('-820321308')<>((('!p') NOT NULL))); -- 0ms;
ANALYZE sqlite_master; -- 1ms;
ANALYZE; -- 0ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c2) VALUES ('/1*a''aW', NULL), (NULL, 0.909354891888468), (0.7008916713952005, ''); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1413890495); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '49159'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 7); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (NULL), (0.7192637398025287), ('-1105083425'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 2054388270); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=('0.7192637398025287') WHERE rt0.c2; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (x''); -- 0ms;
INSERT OR REPLACE INTO vt1(c0) VALUES ('-895043778'), (NULL), (NULL); -- 7ms;
INSERT OR ROLLBACK INTO rt0(c0, c1) VALUES (0.4247938875567875, 'J Lk~秝c~'), (x'', 0.013148777555723301), (0.4247938875567875, '-737205745'); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (0.1997338609679432); -- 0ms;
PRAGMA temp.cache_spill; -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, +c3 TEXT , +c4 BLOB ); -- 0ms;
UPDATE rt0 SET c1=-2070209636 WHERE rt0.c1; -- 0ms;
PRAGMA application_id; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0); -- 1ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET (c3, c2)=(-1105083425, x''); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (-1.795111047E9), (NULL), ('~7'); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1, c2) VALUES (NULL, NULL, NULL); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(0.2855493813157458); -- 1ms;
UPDATE vt0 SET (c0)=(''); -- 0ms;
PRAGMA main.secure_delete = true; -- 0ms;
INSERT OR FAIL INTO vt1(c0) VALUES (0.28176137447797867); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 12); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
DROP TABLE IF EXISTS vt0; -- 0ms;
UPDATE OR ABORT rt0 SET c1=x'0881'; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (NULL); -- 0ms;
PRAGMA temp.cache_size = 6634858262383049679; -- 0ms;
ROLLBACK TRANSACTION; -- 5ms;
UPDATE rt1 SET c0='g^', c3='nY'; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=0Xffffffff849b1b9c, c1=x''; -- 0ms;
INSERT OR ROLLBACK INTO rt1(c3) VALUES ('-737205745'), ('-264979651'), ('0.0'), (''), (''); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (0xffffffffbe21c3df), ('0.977222982365177'), (x''); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL COUNT(*) FROM rt1, vt1 LEFT OUTER JOIN rt0 ON ((((((rt1.c2)AND(rt0.c0)))AND(rt1.c1)))>=(rt1.c0)) WHERE (((((((((rt1.c2)AND(rt1.c3)))AND(rt0.c0)))OR(vt1.c0)))AND(rt1.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c2)AND(rt1.c3)))AND(rt0.c0)))OR(vt1.c0)))AND(rt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt1 LEFT OUTER JOIN rt0 ON ((((((rt1.c2)AND(rt0.c0)))AND(rt1.c1)))>=(rt1.c0)));
SELECT ALL COUNT(*) FROM rt1, vt1 LEFT OUTER JOIN rt0 ON ((((((rt1.c2)AND(rt0.c0)))AND(rt1.c1)))>=(rt1.c0)) WHERE (((((((((rt1.c2)AND(rt1.c3)))AND(rt0.c0)))OR(vt1.c0)))AND(rt1.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c2)AND(rt1.c3)))AND(rt0.c0)))OR(vt1.c0)))AND(rt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt1 LEFT OUTER JOIN rt0 ON ((((((rt1.c2)AND(rt0.c0)))AND(rt1.c1)))>=(rt1.c0)));
SELECT ALL COUNT(*) FROM rt1, vt1 LEFT OUTER JOIN rt0 ON ((((((rt1.c2)AND(rt0.c0)))AND(rt1.c1)))>=(rt1.c0)) WHERE (((((((((rt1.c2)AND(rt1.c3)))AND(rt0.c0)))OR(vt1.c0)))AND(rt1.c2)) COLLATE RTRIM);
SELECT * FROM rt1, rt0, vt0 WHERE (CAST(CASE rt0.c1  WHEN rt1.c1 THEN rt1.c3 ELSE '' END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c1  WHEN rt1.c1 THEN rt1.c3 ELSE '' END AS NUMERIC)) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT * FROM rt1, rt0, vt0 WHERE (CAST(CASE rt0.c1  WHEN rt1.c1 THEN rt1.c3 ELSE '' END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c1  WHEN rt1.c1 THEN rt1.c3 ELSE '' END AS NUMERIC)) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT * FROM rt1, rt0, vt0 WHERE (CAST(CASE rt0.c1  WHEN rt1.c1 THEN rt1.c3 ELSE '' END AS NUMERIC));
SELECT * FROM rt1, rt0, vt1 WHERE (775190003) ORDER BY (0Xffffffffbbe46ad6 IN ());
SELECT SUM(count) FROM (SELECT ((775190003) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY (0Xffffffffbbe46ad6 IN ()));
SELECT * FROM rt1, rt0, vt1 WHERE (775190003) ORDER BY (0Xffffffffbbe46ad6 IN ());
SELECT SUM(count) FROM (SELECT ((775190003) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY (0Xffffffffbbe46ad6 IN ()));
SELECT * FROM rt1, rt0, vt1 WHERE (775190003) ORDER BY (0Xffffffffbbe46ad6 IN ());
SELECT * FROM rt1, vt1 INNER JOIN rt0 ON ((LOWER(DISTINCT rt1.c2)) BETWEEN ((- (rt0.c1))) AND (CASE WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c4 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) INNER JOIN vt0 ON 0.977222982365177 WHERE ((NOT (((rt1.c3)=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt1.c3)==(vt0.c0))))) IS TRUE)  as count FROM rt1, vt1 INNER JOIN rt0 ON ((LOWER(DISTINCT rt1.c2)) BETWEEN ((- (rt0.c1))) AND (CASE WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c4 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) INNER JOIN vt0 ON 0.977222982365177);
SELECT * FROM rt1, vt1 INNER JOIN rt0 ON ((LOWER(DISTINCT rt1.c2)) BETWEEN ((- (rt0.c1))) AND (CASE WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c4 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) INNER JOIN vt0 ON 0.977222982365177 WHERE ((NOT (((rt1.c3)=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt1.c3)==(vt0.c0))))) IS TRUE)  as count FROM rt1, vt1 INNER JOIN rt0 ON ((LOWER(DISTINCT rt1.c2)) BETWEEN ((- (rt0.c1))) AND (CASE WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c4 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) INNER JOIN vt0 ON 0.977222982365177);
SELECT * FROM rt1, vt1 INNER JOIN rt0 ON ((LOWER(DISTINCT rt1.c2)) BETWEEN ((- (rt0.c1))) AND (CASE WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c4 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) INNER JOIN vt0 ON 0.977222982365177 WHERE ((NOT (((rt1.c3)=(vt0.c0)))));
SELECT * FROM vt0 WHERE (LOWER(CASE WHEN NULL THEN vt0.c0 END)) ORDER BY x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(CASE WHEN NULL THEN vt0.c0 END)) IS TRUE)  as count FROM vt0 ORDER BY x'' DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (LOWER(CASE WHEN NULL THEN vt0.c0 END)) ORDER BY x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(CASE WHEN NULL THEN vt0.c0 END)) IS TRUE)  as count FROM vt0 ORDER BY x'' DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (LOWER(CASE WHEN NULL THEN vt0.c0 END)) ORDER BY x'' DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (0.5290728155109088 COLLATE RTRIM) ORDER BY ((vt1.c0 COLLATE BINARY) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((0.5290728155109088 COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0 COLLATE BINARY) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (0.5290728155109088 COLLATE RTRIM) ORDER BY ((vt1.c0 COLLATE BINARY) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((0.5290728155109088 COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0 COLLATE BINARY) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (0.5290728155109088 COLLATE RTRIM) ORDER BY ((vt1.c0 COLLATE BINARY) NOT NULL) DESC;
SELECT COUNT(*) FROM vt0, rt1 RIGHT OUTER JOIN rt0 ON (vt0.c0 IN ()) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt1 RIGHT OUTER JOIN rt0 ON (vt0.c0 IN ()));
SELECT COUNT(*) FROM vt0, rt1 RIGHT OUTER JOIN rt0 ON (vt0.c0 IN ()) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt1 RIGHT OUTER JOIN rt0 ON (vt0.c0 IN ()));
SELECT COUNT(*) FROM vt0, rt1 RIGHT OUTER JOIN rt0 ON (vt0.c0 IN ()) WHERE (vt0.c0);
SELECT * FROM vt0 INNER JOIN vt1 ON IFNULL(DISTINCT ((((rt1.c1)OR(vt0.c0)))AND(rt1.c1)), rt1.c1) LEFT OUTER JOIN rt1 ON (((~ (rt1.c0))) IS TRUE) WHERE ((NOT (((0Xffffffffd96d3b27) NOT BETWEEN (rt1.c4) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((0Xffffffffd96d3b27) NOT BETWEEN (rt1.c4) AND (rt1.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON IFNULL(DISTINCT ((((rt1.c1)OR(vt0.c0)))AND(rt1.c1)), rt1.c1) LEFT OUTER JOIN rt1 ON (((~ (rt1.c0))) IS TRUE));
SELECT * FROM vt0 INNER JOIN vt1 ON IFNULL(DISTINCT ((((rt1.c1)OR(vt0.c0)))AND(rt1.c1)), rt1.c1) LEFT OUTER JOIN rt1 ON (((~ (rt1.c0))) IS TRUE) WHERE ((NOT (((0Xffffffffd96d3b27) NOT BETWEEN (rt1.c4) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((0Xffffffffd96d3b27) NOT BETWEEN (rt1.c4) AND (rt1.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON IFNULL(DISTINCT ((((rt1.c1)OR(vt0.c0)))AND(rt1.c1)), rt1.c1) LEFT OUTER JOIN rt1 ON (((~ (rt1.c0))) IS TRUE));
SELECT * FROM vt0 INNER JOIN vt1 ON IFNULL(DISTINCT ((((rt1.c1)OR(vt0.c0)))AND(rt1.c1)), rt1.c1) LEFT OUTER JOIN rt1 ON (((~ (rt1.c0))) IS TRUE) WHERE ((NOT (((0Xffffffffd96d3b27) NOT BETWEEN (rt1.c4) AND (rt1.c0)))));
SELECT ALL * FROM rt0 WHERE ((+ (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (rt0.c1)));
SELECT ALL * FROM vt0, rt1, rt0 FULL OUTER JOIN vt1 ON CASE WHEN IFNULL(rt1.c3, vt0.c0) THEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) WHEN ((rt1.c2) NOTNULL) THEN ((((((((rt0.c1)AND(rt0.c2)))OR(vt0.c0)))AND(rt1.c2)))AND(vt1.c0)) WHEN ((rt1.c1)>(rt1.c4)) THEN ((((((((x'341c')OR(rt1.c2)))AND(NULL)))AND(rt0.c0)))AND(rt1.c1)) ELSE rt0.c0 END WHERE ((((NOT (rt1.c2))) NOT BETWEEN (rt1.c0 COLLATE NOCASE) AND ((rt0.c0 IN ())))) ORDER BY ((0xffffffffbf019d22)OR(((rt1.c4)<(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt1.c2))) NOT BETWEEN (rt1.c0 COLLATE NOCASE) AND ((rt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt1, rt0 FULL OUTER JOIN vt1 ON CASE WHEN IFNULL(rt1.c3, vt0.c0) THEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) WHEN ((rt1.c2) NOTNULL) THEN ((((((((rt0.c1)AND(rt0.c2)))OR(vt0.c0)))AND(rt1.c2)))AND(vt1.c0)) WHEN ((rt1.c1)>(rt1.c4)) THEN ((((((((x'341c')OR(rt1.c2)))AND(NULL)))AND(rt0.c0)))AND(rt1.c1)) ELSE rt0.c0 END ORDER BY ((0Xffffffffbf019d22)OR(((rt1.c4)<(vt0.c0)))));
SELECT ALL * FROM vt0, rt1, rt0 FULL OUTER JOIN vt1 ON CASE WHEN IFNULL(rt1.c3, vt0.c0) THEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) WHEN ((rt1.c2) NOTNULL) THEN ((((((((rt0.c1)AND(rt0.c2)))OR(vt0.c0)))AND(rt1.c2)))AND(vt1.c0)) WHEN ((rt1.c1)>(rt1.c4)) THEN ((((((((x'341c')OR(rt1.c2)))AND(NULL)))AND(rt0.c0)))AND(rt1.c1)) ELSE rt0.c0 END WHERE ((((NOT (rt1.c2))) NOT BETWEEN (rt1.c0 COLLATE NOCASE) AND ((rt0.c0 IN ())))) ORDER BY ((0xffffffffbf019d22)OR(((rt1.c4)<(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt1.c2))) NOT BETWEEN (rt1.c0 COLLATE NOCASE) AND ((rt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt1, rt0 FULL OUTER JOIN vt1 ON CASE WHEN IFNULL(rt1.c3, vt0.c0) THEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) WHEN ((rt1.c2) NOTNULL) THEN ((((((((rt0.c1)AND(rt0.c2)))OR(vt0.c0)))AND(rt1.c2)))AND(vt1.c0)) WHEN ((rt1.c1)>(rt1.c4)) THEN ((((((((x'341c')OR(rt1.c2)))AND(NULL)))AND(rt0.c0)))AND(rt1.c1)) ELSE rt0.c0 END ORDER BY ((0Xffffffffbf019d22)OR(((rt1.c4)<(vt0.c0)))));
SELECT ALL * FROM vt0, rt1, rt0 FULL OUTER JOIN vt1 ON CASE WHEN IFNULL(rt1.c3, vt0.c0) THEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) WHEN ((rt1.c2) NOTNULL) THEN ((((((((rt0.c1)AND(rt0.c2)))OR(vt0.c0)))AND(rt1.c2)))AND(vt1.c0)) WHEN ((rt1.c1)>(rt1.c4)) THEN ((((((((x'341c')OR(rt1.c2)))AND(NULL)))AND(rt0.c0)))AND(rt1.c1)) ELSE rt0.c0 END WHERE ((((NOT (rt1.c2))) NOT BETWEEN (rt1.c0 COLLATE NOCASE) AND ((rt0.c0 IN ())))) ORDER BY ((0xffffffffbf019d22)OR(((rt1.c4)<(vt0.c0))));
SELECT * FROM rt1, rt0, vt1, vt0 WHERE (CAST(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END AS NUMERIC)) IS TRUE)  as count FROM rt1, rt0, vt1, vt0);
SELECT * FROM rt1, rt0, vt1, vt0 WHERE (CAST(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END AS NUMERIC)) IS TRUE)  as count FROM rt1, rt0, vt1, vt0);
SELECT * FROM rt1, rt0, vt1, vt0 WHERE (CAST(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END AS NUMERIC));
SELECT * FROM vt1, vt0, rt0, rt1 WHERE (CAST(COALESCE(0.5162212064469653, rt1.c0, rt1.c4, rt1.c0, rt0.c1, x'171a') AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(COALESCE(0.5162212064469653, rt1.c0, rt1.c4, rt1.c0, rt0.c1, x'171a') AS BLOB)) IS TRUE)  as count FROM vt1, vt0, rt0, rt1);
SELECT * FROM vt1, vt0, rt0, rt1 WHERE (CAST(COALESCE(0.5162212064469653, rt1.c0, rt1.c4, rt1.c0, rt0.c1, x'171a') AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(COALESCE(0.5162212064469653, rt1.c0, rt1.c4, rt1.c0, rt0.c1, x'171a') AS BLOB)) IS TRUE)  as count FROM vt1, vt0, rt0, rt1);
SELECT * FROM vt1, vt0, rt0, rt1 WHERE (CAST(COALESCE(0.5162212064469653, rt1.c0, rt1.c4, rt1.c0, rt0.c1, x'171a') AS BLOB));
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)) IN (NULLIF(DISTINCT '672907935', rt0.c2)))) ORDER BY (((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0))))!=((LOWER(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)) IN (NULLIF(DISTINCT '672907935', rt0.c2)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0))))!=((LOWER(rt0.c2)))));
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)) IN (NULLIF(DISTINCT '672907935', rt0.c2)))) ORDER BY (((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0))))!=((LOWER(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)) IN (NULLIF(DISTINCT '672907935', rt0.c2)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0))))!=((LOWER(rt0.c2)))));
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)) IN (NULLIF(DISTINCT '672907935', rt0.c2)))) ORDER BY (((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0))))!=((LOWER(rt0.c2))));
SELECT ALL COUNT(*) FROM vt0, rt1, rt0, vt1 WHERE (((((((((((rt0.c0)GLOB(rt1.c2)))OR(((rt1.c3)>=(vt1.c0)))))AND(672907935)))OR(vt1.c0 COLLATE RTRIM)))AND(vt0.c0))) ORDER BY ((CASE rt1.c0  WHEN vt1.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c3 THEN 0.49605523761080506 ELSE rt1.c0 END)%(((rt0.c0)<=(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)GLOB(rt1.c2)))OR(((rt1.c3)>=(vt1.c0)))))AND(672907935)))OR(vt1.c0 COLLATE RTRIM)))AND(vt0.c0))) IS TRUE)  as count FROM vt0, rt1, rt0, vt1 ORDER BY ((CASE rt1.c0  WHEN vt1.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c3 THEN 0.49605523761080506 ELSE rt1.c0 END)%(((rt0.c0)<=(rt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0, vt1 WHERE (((((((((((rt0.c0)GLOB(rt1.c2)))OR(((rt1.c3)>=(vt1.c0)))))AND(672907935)))OR(vt1.c0 COLLATE RTRIM)))AND(vt0.c0))) ORDER BY ((CASE rt1.c0  WHEN vt1.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c3 THEN 0.49605523761080506 ELSE rt1.c0 END)%(((rt0.c0)<=(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)GLOB(rt1.c2)))OR(((rt1.c3)>=(vt1.c0)))))AND(672907935)))OR(vt1.c0 COLLATE RTRIM)))AND(vt0.c0))) IS TRUE)  as count FROM vt0, rt1, rt0, vt1 ORDER BY ((CASE rt1.c0  WHEN vt1.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c3 THEN 0.49605523761080506 ELSE rt1.c0 END)%(((rt0.c0)<=(rt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0, vt1 WHERE (((((((((((rt0.c0)GLOB(rt1.c2)))OR(((rt1.c3)>=(vt1.c0)))))AND(672907935)))OR(vt1.c0 COLLATE RTRIM)))AND(vt0.c0))) ORDER BY ((CASE rt1.c0  WHEN vt1.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c3 THEN 0.49605523761080506 ELSE rt1.c0 END)%(((rt0.c0)<=(rt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((x'', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, (((0.31235332200656574)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)IS NOT(vt0.c0)))) AND ((CAST(vt0.c0 AS BLOB), COALESCE(vt0.c0, vt0.c0), (+ (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((x'', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, (((0.31235332200656574)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)IS NOT(vt0.c0)))) AND ((CAST(vt0.c0 AS BLOB), COALESCE(vt0.c0, vt0.c0), (+ (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((x'', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, (((0.31235332200656574)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)IS NOT(vt0.c0)))) AND ((CAST(vt0.c0 AS BLOB), COALESCE(vt0.c0, vt0.c0), (+ (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((x'', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, (((0.31235332200656574)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)IS NOT(vt0.c0)))) AND ((CAST(vt0.c0 AS BLOB), COALESCE(vt0.c0, vt0.c0), (+ (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((x'', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, (((0.31235332200656574)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)IS NOT(vt0.c0)))) AND ((CAST(vt0.c0 AS BLOB), COALESCE(vt0.c0, vt0.c0), (+ (vt0.c0))))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c2) IS FALSE)) BETWEEN (rt0.c0 COLLATE NOCASE) AND ((((rt0.c1)) BETWEEN ((152857212)) AND ((vt1.c0))))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c2) IS FALSE)) BETWEEN (rt0.c0 COLLATE NOCASE) AND ((((rt0.c1)) BETWEEN ((152857212)) AND ((vt1.c0))))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c2) IS FALSE)) BETWEEN (rt0.c0 COLLATE NOCASE) AND ((((rt0.c1)) BETWEEN ((152857212)) AND ((vt1.c0))))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c2) IS FALSE)) BETWEEN (rt0.c0 COLLATE NOCASE) AND ((((rt0.c1)) BETWEEN ((152857212)) AND ((vt1.c0))))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c2) IS FALSE)) BETWEEN (rt0.c0 COLLATE NOCASE) AND ((((rt0.c1)) BETWEEN ((152857212)) AND ((vt1.c0))))) WHERE (rt0.c1);
SELECT ALL * FROM rt1, rt0, vt0, vt1 WHERE ((NOT (((rt0.c2)<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c2)<(vt0.c0))))) IS TRUE)  as count FROM rt1, rt0, vt0, vt1);
SELECT ALL * FROM rt1, rt0, vt0, vt1 WHERE ((NOT (((rt0.c2)<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c2)<(vt0.c0))))) IS TRUE)  as count FROM rt1, rt0, vt0, vt1);
SELECT ALL * FROM rt1, rt0, vt0, vt1 WHERE ((NOT (((rt0.c2)<(vt0.c0)))));
SELECT ALL * FROM rt1, vt1, vt0, rt0 WHERE (CAST(0.19190517652676908 COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.19190517652676908 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM rt1, vt1, vt0, rt0);
SELECT ALL * FROM rt1, vt1, vt0, rt0 WHERE (CAST(0.19190517652676908 COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.19190517652676908 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM rt1, vt1, vt0, rt0);
SELECT ALL * FROM rt1, vt1, vt0, rt0 WHERE (CAST(0.19190517652676908 COLLATE NOCASE AS BLOB));
SELECT ALL * FROM rt1 WHERE (((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END) NOT BETWEEN (((rt1.c1)<(rt1.c1))) AND (QUOTE(rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END) NOT BETWEEN (((rt1.c1)<(rt1.c1))) AND (QUOTE(rt1.c3)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END) NOT BETWEEN (((rt1.c1)<(rt1.c1))) AND (QUOTE(rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END) NOT BETWEEN (((rt1.c1)<(rt1.c1))) AND (QUOTE(rt1.c3)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END) NOT BETWEEN (((rt1.c1)<(rt1.c1))) AND (QUOTE(rt1.c3))));
SELECT * FROM vt1, rt1, vt0 WHERE ((((vt1.c0)) BETWEEN (((- (rt1.c2)))) AND ((INSTR(rt1.c2, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN (((- (rt1.c2)))) AND ((INSTR(rt1.c2, vt0.c0))))) IS TRUE)  as count FROM vt1, rt1, vt0);
SELECT * FROM vt1, rt1, vt0 WHERE ((((vt1.c0)) BETWEEN (((- (rt1.c2)))) AND ((INSTR(rt1.c2, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN (((- (rt1.c2)))) AND ((INSTR(rt1.c2, vt0.c0))))) IS TRUE)  as count FROM vt1, rt1, vt0);
SELECT * FROM vt1, rt1, vt0 WHERE ((((vt1.c0)) BETWEEN (((- (rt1.c2)))) AND ((INSTR(rt1.c2, vt0.c0)))));
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY CAST(CAST(vt1.c0 AS TEXT) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY CAST(CAST(vt1.c0 AS TEXT) AS NUMERIC) DESC);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY CAST(CAST(vt1.c0 AS TEXT) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY CAST(CAST(vt1.c0 AS TEXT) AS NUMERIC) DESC);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY CAST(CAST(vt1.c0 AS TEXT) AS NUMERIC) DESC;
SELECT ALL * FROM vt1, vt0, rt1 WHERE (((CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c4 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c4 END) IS FALSE)) IS TRUE)  as count FROM vt1, vt0, rt1);
SELECT ALL * FROM vt1, vt0, rt1 WHERE (((CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c4 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c4 END) IS FALSE)) IS TRUE)  as count FROM vt1, vt0, rt1);
SELECT ALL * FROM vt1, vt0, rt1 WHERE (((CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c4 END) IS FALSE));
SELECT ALL COUNT(*) FROM rt1, rt0 LEFT OUTER JOIN vt1 ON ('ex%}e|' IN ()) WHERE (CASE WHEN (((rt1.c0))>=((vt1.c0))) THEN vt1.c0 COLLATE RTRIM WHEN NULLIF(rt1.c2, rt1.c2) THEN ((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c3)) WHEN NULL THEN ((((rt0.c2)AND(rt1.c1)))OR(rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt1.c0))>=((vt1.c0))) THEN vt1.c0 COLLATE RTRIM WHEN NULLIF(rt1.c2, rt1.c2) THEN ((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c3)) WHEN NULL THEN ((((rt0.c2)AND(rt1.c1)))OR(rt1.c1)) END) IS TRUE)  as count FROM rt1, rt0 LEFT OUTER JOIN vt1 ON ('ex%}e|' IN ()));
SELECT ALL COUNT(*) FROM rt1, rt0 LEFT OUTER JOIN vt1 ON ('ex%}e|' IN ()) WHERE (CASE WHEN (((rt1.c0))>=((vt1.c0))) THEN vt1.c0 COLLATE RTRIM WHEN NULLIF(rt1.c2, rt1.c2) THEN ((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c3)) WHEN NULL THEN ((((rt0.c2)AND(rt1.c1)))OR(rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt1.c0))>=((vt1.c0))) THEN vt1.c0 COLLATE RTRIM WHEN NULLIF(rt1.c2, rt1.c2) THEN ((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c3)) WHEN NULL THEN ((((rt0.c2)AND(rt1.c1)))OR(rt1.c1)) END) IS TRUE)  as count FROM rt1, rt0 LEFT OUTER JOIN vt1 ON ('ex%}e|' IN ()));
SELECT ALL COUNT(*) FROM rt1, rt0 LEFT OUTER JOIN vt1 ON ('ex%}e|' IN ()) WHERE (CASE WHEN (((rt1.c0))>=((vt1.c0))) THEN vt1.c0 COLLATE RTRIM WHEN NULLIF(rt1.c2, rt1.c2) THEN ((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c3)) WHEN NULL THEN ((((rt0.c2)AND(rt1.c1)))OR(rt1.c1)) END);
SELECT * FROM rt1, vt1, vt0 WHERE (((NOT (vt1.c0)) IN ())) ORDER BY ((((((((((rt1.c4) NOT NULL))OR(((vt0.c0) BETWEEN (rt1.c3) AND (rt1.c2)))))OR(((rt1.c4)-(rt1.c4)))))AND(((rt1.c0)>(rt1.c3)))))OR(((rt1.c4)<(rt1.c4))));
SELECT SUM(count) FROM (SELECT ((((NOT (vt1.c0)) IN ())) IS TRUE)  as count FROM rt1, vt1, vt0 ORDER BY ((((((((((rt1.c4) NOT NULL))OR(((vt0.c0) BETWEEN (rt1.c3) AND (rt1.c2)))))OR(((rt1.c4)-(rt1.c4)))))AND(((rt1.c0)>(rt1.c3)))))OR(((rt1.c4)<(rt1.c4)))));
SELECT * FROM rt1, vt1, vt0 WHERE (((NOT (vt1.c0)) IN ())) ORDER BY ((((((((((rt1.c4) NOT NULL))OR(((vt0.c0) BETWEEN (rt1.c3) AND (rt1.c2)))))OR(((rt1.c4)-(rt1.c4)))))AND(((rt1.c0)>(rt1.c3)))))OR(((rt1.c4)<(rt1.c4))));
SELECT SUM(count) FROM (SELECT ((((NOT (vt1.c0)) IN ())) IS TRUE)  as count FROM rt1, vt1, vt0 ORDER BY ((((((((((rt1.c4) NOT NULL))OR(((vt0.c0) BETWEEN (rt1.c3) AND (rt1.c2)))))OR(((rt1.c4)-(rt1.c4)))))AND(((rt1.c0)>(rt1.c3)))))OR(((rt1.c4)<(rt1.c4)))));
SELECT * FROM rt1, vt1, vt0 WHERE (((NOT (vt1.c0)) IN ())) ORDER BY ((((((((((rt1.c4) NOT NULL))OR(((vt0.c0) BETWEEN (rt1.c3) AND (rt1.c2)))))OR(((rt1.c4)-(rt1.c4)))))AND(((rt1.c0)>(rt1.c3)))))OR(((rt1.c4)<(rt1.c4))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (json_extract(vt0.c0, vt0.c0) COLLATE BINARY) ORDER BY (((rt0.c0, rt0.c0, vt0.c0)) BETWEEN ((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)), vt0.c0 COLLATE RTRIM, 0.4540132161259578 COLLATE RTRIM)) AND (((vt0.c0 IN (rt0.c0)), (rt0.c2 IN ()), vt0.c0 COLLATE BINARY))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_extract(vt0.c0, vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c0, rt0.c0, vt0.c0)) BETWEEN ((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)), vt0.c0 COLLATE RTRIM, 0.4540132161259578 COLLATE RTRIM)) AND (((vt0.c0 IN (rt0.c0)), (rt0.c2 IN ()), vt0.c0 COLLATE BINARY))) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (json_extract(vt0.c0, vt0.c0) COLLATE BINARY) ORDER BY (((rt0.c0, rt0.c0, vt0.c0)) BETWEEN ((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)), vt0.c0 COLLATE RTRIM, 0.4540132161259578 COLLATE RTRIM)) AND (((vt0.c0 IN (rt0.c0)), (rt0.c2 IN ()), vt0.c0 COLLATE BINARY))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_extract(vt0.c0, vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c0, rt0.c0, vt0.c0)) BETWEEN ((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)), vt0.c0 COLLATE RTRIM, 0.4540132161259578 COLLATE RTRIM)) AND (((vt0.c0 IN (rt0.c0)), (rt0.c2 IN ()), vt0.c0 COLLATE BINARY))) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (json_extract(vt0.c0, vt0.c0) COLLATE BINARY) ORDER BY (((rt0.c0, rt0.c0, vt0.c0)) BETWEEN ((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)), vt0.c0 COLLATE RTRIM, 0.4540132161259578 COLLATE RTRIM)) AND (((vt0.c0 IN (rt0.c0)), (rt0.c2 IN ()), vt0.c0 COLLATE BINARY))) ASC;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE ((rt1.c3)&(rt1.c2))  WHEN ((rt1.c3) NOTNULL) THEN ((rt1.c0)>>(rt1.c3)) END) ORDER BY (~ ((('-2070209636') NOT BETWEEN (rt1.c2) AND (rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c3)&(rt1.c2))  WHEN ((rt1.c3) NOTNULL) THEN ((rt1.c0)>>(rt1.c3)) END) IS TRUE)  as count FROM rt1, vt0 ORDER BY (~ ((('-2070209636') NOT BETWEEN (rt1.c2) AND (rt1.c1)))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE ((rt1.c3)&(rt1.c2))  WHEN ((rt1.c3) NOTNULL) THEN ((rt1.c0)>>(rt1.c3)) END) ORDER BY (~ ((('-2070209636') NOT BETWEEN (rt1.c2) AND (rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c3)&(rt1.c2))  WHEN ((rt1.c3) NOTNULL) THEN ((rt1.c0)>>(rt1.c3)) END) IS TRUE)  as count FROM rt1, vt0 ORDER BY (~ ((('-2070209636') NOT BETWEEN (rt1.c2) AND (rt1.c1)))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE ((rt1.c3)&(rt1.c2))  WHEN ((rt1.c3) NOTNULL) THEN ((rt1.c0)>>(rt1.c3)) END) ORDER BY (~ ((('-2070209636') NOT BETWEEN (rt1.c2) AND (rt1.c1))));
SELECT ALL * FROM rt1, vt1 WHERE (((UPPER(rt1.c2)) NOT NULL)) ORDER BY (((CASE vt1.c0  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN vt1.c0 WHEN rt1.c1 THEN rt1.c1 ELSE vt1.c0 END))<((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c3))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(rt1.c2)) NOT NULL)) IS TRUE)  as count FROM rt1, vt1 ORDER BY (((CASE vt1.c0  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN vt1.c0 WHEN rt1.c1 THEN rt1.c1 ELSE vt1.c0 END))<((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c3))))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, vt1 WHERE (((UPPER(rt1.c2)) NOT NULL)) ORDER BY (((CASE vt1.c0  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN vt1.c0 WHEN rt1.c1 THEN rt1.c1 ELSE vt1.c0 END))<((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c3))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(rt1.c2)) NOT NULL)) IS TRUE)  as count FROM rt1, vt1 ORDER BY (((CASE vt1.c0  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN vt1.c0 WHEN rt1.c1 THEN rt1.c1 ELSE vt1.c0 END))<((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c3))))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, vt1 WHERE (((UPPER(rt1.c2)) NOT NULL)) ORDER BY (((CASE vt1.c0  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN vt1.c0 WHEN rt1.c1 THEN rt1.c1 ELSE vt1.c0 END))<((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c3))))) DESC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (((((((((((((((((((((rt1.c4)AND(rt1.c1)))OR(0.1939361069328044)))AND(rt1.c3)))AND(rt1.c0)))AND(rt1.c2)))OR(rt1.c1)))OR((~ (rt1.c1)))))OR((rt1.c1 IN ()))))OR(((rt1.c4)*(rt1.c2)))))OR(rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((((((rt1.c4)AND(rt1.c1)))OR(0.1939361069328044)))AND(rt1.c3)))AND(rt1.c0)))AND(rt1.c2)))OR(rt1.c1)))OR((~ (rt1.c1)))))OR((rt1.c1 IN ()))))OR(((rt1.c4)*(rt1.c2)))))OR(rt1.c2))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((((((((((((((((((rt1.c4)AND(rt1.c1)))OR(0.1939361069328044)))AND(rt1.c3)))AND(rt1.c0)))AND(rt1.c2)))OR(rt1.c1)))OR((~ (rt1.c1)))))OR((rt1.c1 IN ()))))OR(((rt1.c4)*(rt1.c2)))))OR(rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((((((rt1.c4)AND(rt1.c1)))OR(0.1939361069328044)))AND(rt1.c3)))AND(rt1.c0)))AND(rt1.c2)))OR(rt1.c1)))OR((~ (rt1.c1)))))OR((rt1.c1 IN ()))))OR(((rt1.c4)*(rt1.c2)))))OR(rt1.c2))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((((((((((((((((((rt1.c4)AND(rt1.c1)))OR(0.1939361069328044)))AND(rt1.c3)))AND(rt1.c0)))AND(rt1.c2)))OR(rt1.c1)))OR((~ (rt1.c1)))))OR((rt1.c1 IN ()))))OR(((rt1.c4)*(rt1.c2)))))OR(rt1.c2)));
SELECT COUNT(*) FROM rt0, vt0 NOT INDEXED, vt1 WHERE ((((((rt0.c1)OR(vt0.c0)))OR(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)OR(vt0.c0)))OR(vt1.c0)) IN ())) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT COUNT(*) FROM rt0, vt0 NOT INDEXED, vt1 WHERE ((((((rt0.c1)OR(vt0.c0)))OR(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)OR(vt0.c0)))OR(vt1.c0)) IN ())) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT COUNT(*) FROM rt0, vt0 NOT INDEXED, vt1 WHERE ((((((rt0.c1)OR(vt0.c0)))OR(vt1.c0)) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELIHOOD(DISTINCT TYPEOF(rt0.c0), 0.6212202880882381));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT TYPEOF(rt0.c0), 0.6212202880882381)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELIHOOD(DISTINCT TYPEOF(rt0.c0), 0.6212202880882381));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT TYPEOF(rt0.c0), 0.6212202880882381)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELIHOOD(DISTINCT TYPEOF(rt0.c0), 0.6212202880882381));
SELECT ALL * FROM rt1, rt0, vt0 WHERE (((((((((rt1.c1)AND(rt1.c3)))OR(rt1.c1)))OR(((((rt0.c1)AND(rt1.c4)))OR(rt1.c1)))))OR(CASE rt0.c0  WHEN rt1.c2 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c1)AND(rt1.c3)))OR(rt1.c1)))OR(((((rt0.c1)AND(rt1.c4)))OR(rt1.c1)))))OR(CASE rt0.c0  WHEN rt1.c2 THEN vt0.c0 END))) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT ALL * FROM rt1, rt0, vt0 WHERE (((((((((rt1.c1)AND(rt1.c3)))OR(rt1.c1)))OR(((((rt0.c1)AND(rt1.c4)))OR(rt1.c1)))))OR(CASE rt0.c0  WHEN rt1.c2 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c1)AND(rt1.c3)))OR(rt1.c1)))OR(((((rt0.c1)AND(rt1.c4)))OR(rt1.c1)))))OR(CASE rt0.c0  WHEN rt1.c2 THEN vt0.c0 END))) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT ALL * FROM rt1, rt0, vt0 WHERE (((((((((rt1.c1)AND(rt1.c3)))OR(rt1.c1)))OR(((((rt0.c1)AND(rt1.c4)))OR(rt1.c1)))))OR(CASE rt0.c0  WHEN rt1.c2 THEN vt0.c0 END)));
SELECT ALL * FROM rt1 WHERE (((((((((((rt1.c3)AND(rt1.c1)))OR(rt1.c3)))OR(rt1.c3)))AND(rt1.c1)))||(PRINTF(0.24101667343591393))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c3)AND(rt1.c1)))OR(rt1.c3)))OR(rt1.c3)))AND(rt1.c1)))||(PRINTF(0.24101667343591393)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((((((((rt1.c3)AND(rt1.c1)))OR(rt1.c3)))OR(rt1.c3)))AND(rt1.c1)))||(PRINTF(0.24101667343591393))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c3)AND(rt1.c1)))OR(rt1.c3)))OR(rt1.c3)))AND(rt1.c1)))||(PRINTF(0.24101667343591393)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((((((((rt1.c3)AND(rt1.c1)))OR(rt1.c3)))OR(rt1.c3)))AND(rt1.c1)))||(PRINTF(0.24101667343591393))));
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (((CAST(rt1.c1 AS REAL)) BETWEEN (rt1.c4) AND (((rt1.c0)>(vt1.c0))))) ORDER BY ((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c2))) BETWEEN ((rt1.c4 IN ())) AND (0.5290728155109088)) ASC  NULLS FIRST, ((rt1.c1) ISNULL) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS REAL)) BETWEEN (rt1.c4) AND (((rt1.c0)>(vt1.c0))))) IS TRUE)  as count FROM vt1, rt1 ORDER BY ((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c2))) BETWEEN ((rt1.c4 IN ())) AND (0.5290728155109088)) ASC  NULLS FIRST, ((rt1.c1) ISNULL) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (((CAST(rt1.c1 AS REAL)) BETWEEN (rt1.c4) AND (((rt1.c0)>(vt1.c0))))) ORDER BY ((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c2))) BETWEEN ((rt1.c4 IN ())) AND (0.5290728155109088)) ASC  NULLS FIRST, ((rt1.c1) ISNULL) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS REAL)) BETWEEN (rt1.c4) AND (((rt1.c0)>(vt1.c0))))) IS TRUE)  as count FROM vt1, rt1 ORDER BY ((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c2))) BETWEEN ((rt1.c4 IN ())) AND (0.5290728155109088)) ASC  NULLS FIRST, ((rt1.c1) ISNULL) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (((CAST(rt1.c1 AS REAL)) BETWEEN (rt1.c4) AND (((rt1.c0)>(vt1.c0))))) ORDER BY ((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c2))) BETWEEN ((rt1.c4 IN ())) AND (0.5290728155109088)) ASC  NULLS FIRST, ((rt1.c1) ISNULL) COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM rt1, vt0 CROSS JOIN rt0 ON rt1.c1 WHERE ((rt0.c2 COLLATE RTRIM IN (NULLIF(DISTINCT rt1.c1, '-1795111047')))) ORDER BY LIKELIHOOD(DISTINCT ((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)), 0.5309640019122637) DESC;
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE RTRIM IN (NULLIF(DISTINCT rt1.c1, '-1795111047')))) IS TRUE)  as count FROM rt1, vt0 CROSS JOIN rt0 ON rt1.c1 ORDER BY LIKELIHOOD(DISTINCT ((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)), 0.5309640019122637) DESC);
SELECT ALL * FROM rt1, vt0 CROSS JOIN rt0 ON rt1.c1 WHERE ((rt0.c2 COLLATE RTRIM IN (NULLIF(DISTINCT rt1.c1, '-1795111047')))) ORDER BY LIKELIHOOD(DISTINCT ((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)), 0.5309640019122637) DESC;
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE RTRIM IN (NULLIF(DISTINCT rt1.c1, '-1795111047')))) IS TRUE)  as count FROM rt1, vt0 CROSS JOIN rt0 ON rt1.c1 ORDER BY LIKELIHOOD(DISTINCT ((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)), 0.5309640019122637) DESC);
SELECT ALL * FROM rt1, vt0 CROSS JOIN rt0 ON rt1.c1 WHERE ((rt0.c2 COLLATE RTRIM IN (NULLIF(DISTINCT rt1.c1, '-1795111047')))) ORDER BY LIKELIHOOD(DISTINCT ((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)), 0.5309640019122637) DESC;
SELECT * FROM vt0, vt1, rt0 WHERE (((((((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))OR('l.pi9偆W')))OR(rt0.c1)))OR(rt0.c1)))OR(vt0.c0))) ISNULL)) ORDER BY LOWER((((rt0.c1, vt0.c0, vt1.c0)) BETWEEN ((rt0.c0, rt0.c2, 0.7187542030379712)) AND ((rt0.c0, rt0.c0, rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))OR('l.pi9偆W')))OR(rt0.c1)))OR(rt0.c1)))OR(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY LOWER((((rt0.c1, vt0.c0, vt1.c0)) BETWEEN ((rt0.c0, rt0.c2, 0.7187542030379712)) AND ((rt0.c0, rt0.c0, rt0.c0)))) ASC);
SELECT * FROM vt0, vt1, rt0 WHERE (((((((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))OR('l.pi9偆W')))OR(rt0.c1)))OR(rt0.c1)))OR(vt0.c0))) ISNULL)) ORDER BY LOWER((((rt0.c1, vt0.c0, vt1.c0)) BETWEEN ((rt0.c0, rt0.c2, 0.7187542030379712)) AND ((rt0.c0, rt0.c0, rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))OR('l.pi9偆W')))OR(rt0.c1)))OR(rt0.c1)))OR(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY LOWER((((rt0.c1, vt0.c0, vt1.c0)) BETWEEN ((rt0.c0, rt0.c2, 0.7187542030379712)) AND ((rt0.c0, rt0.c0, rt0.c0)))) ASC);
SELECT * FROM vt0, vt1, rt0 WHERE (((((((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))OR('l.pi9偆W')))OR(rt0.c1)))OR(rt0.c1)))OR(vt0.c0))) ISNULL)) ORDER BY LOWER((((rt0.c1, vt0.c0, vt1.c0)) BETWEEN ((rt0.c0, rt0.c2, 0.7187542030379712)) AND ((rt0.c0, rt0.c0, rt0.c0)))) ASC;
SELECT * FROM vt1, rt0, vt0, rt1 WHERE (CASE rt1.c1  WHEN rt1.c0 THEN rt0.c1 WHEN NULL THEN vt1.c0 WHEN rt1.c2 THEN rt1.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE rt1.c1  WHEN rt1.c0 THEN rt0.c1 WHEN NULL THEN vt1.c0 WHEN rt1.c2 THEN rt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0, vt0, rt1);
SELECT * FROM vt1, rt0, vt0, rt1 WHERE (CASE rt1.c1  WHEN rt1.c0 THEN rt0.c1 WHEN NULL THEN vt1.c0 WHEN rt1.c2 THEN rt1.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE rt1.c1  WHEN rt1.c0 THEN rt0.c1 WHEN NULL THEN vt1.c0 WHEN rt1.c2 THEN rt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0, vt0, rt1);
SELECT * FROM vt1, rt0, vt0, rt1 WHERE (CASE rt1.c1  WHEN rt1.c0 THEN rt0.c1 WHEN NULL THEN vt1.c0 WHEN rt1.c2 THEN rt1.c0 END COLLATE NOCASE);
SELECT ALL * FROM vt1, rt1, vt0, rt0 WHERE (CASE WHEN vt1.c0 COLLATE NOCASE THEN rt0.c1 WHEN CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt1.c2 END THEN rt1.c1 WHEN UPPER(DISTINCT rt1.c0) THEN (+ (rt1.c4)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 COLLATE NOCASE THEN rt0.c1 WHEN CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt1.c2 END THEN rt1.c1 WHEN UPPER(DISTINCT rt1.c0) THEN (+ (rt1.c4)) END) IS TRUE)  as count FROM vt1, rt1, vt0, rt0);
SELECT ALL * FROM vt1, rt1, vt0, rt0 WHERE (CASE WHEN vt1.c0 COLLATE NOCASE THEN rt0.c1 WHEN CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt1.c2 END THEN rt1.c1 WHEN UPPER(DISTINCT rt1.c0) THEN (+ (rt1.c4)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 COLLATE NOCASE THEN rt0.c1 WHEN CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt1.c2 END THEN rt1.c1 WHEN UPPER(DISTINCT rt1.c0) THEN (+ (rt1.c4)) END) IS TRUE)  as count FROM vt1, rt1, vt0, rt0);
SELECT ALL * FROM vt1, rt1, vt0, rt0 WHERE (CASE WHEN vt1.c0 COLLATE NOCASE THEN rt0.c1 WHEN CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt1.c2 END THEN rt1.c1 WHEN UPPER(DISTINCT rt1.c0) THEN (+ (rt1.c4)) END);
SELECT * FROM rt0, rt1, vt0, vt1 NOT INDEXED WHERE (IFNULL(((0.0587514516393286) NOT BETWEEN (rt0.c1) AND (vt0.c0)), CAST(rt1.c0 AS BLOB))) ORDER BY rt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL(((0.0587514516393286) NOT BETWEEN (rt0.c1) AND (vt0.c0)), CAST(rt1.c0 AS BLOB))) IS TRUE)  as count FROM rt0, rt1, vt0, vt1 ORDER BY rt0.c0 DESC  NULLS LAST);
SELECT * FROM rt0, rt1, vt0, vt1 NOT INDEXED WHERE (IFNULL(((0.0587514516393286) NOT BETWEEN (rt0.c1) AND (vt0.c0)), CAST(rt1.c0 AS BLOB))) ORDER BY rt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL(((0.0587514516393286) NOT BETWEEN (rt0.c1) AND (vt0.c0)), CAST(rt1.c0 AS BLOB))) IS TRUE)  as count FROM rt0, rt1, vt0, vt1 ORDER BY rt0.c0 DESC  NULLS LAST);
SELECT * FROM rt0, rt1, vt0, vt1 NOT INDEXED WHERE (IFNULL(((0.0587514516393286) NOT BETWEEN (rt0.c1) AND (vt0.c0)), CAST(rt1.c0 AS BLOB))) ORDER BY rt0.c0 DESC  NULLS LAST;
SELECT ALL * FROM rt0, vt1, vt0, rt1 WHERE ((((load_extension(rt0.c0)))<((x'efa2'))));
SELECT SUM(count) FROM (SELECT (((((load_extension(rt0.c0)))<((x'efa2')))) IS TRUE)  as count FROM rt0, vt1, vt0, rt1 NOT INDEXED);
SELECT ALL * FROM rt0, vt1, vt0, rt1 WHERE ((((load_extension(rt0.c0)))<((x'efa2'))));
SELECT SUM(count) FROM (SELECT (((((load_extension(rt0.c0)))<((x'efa2')))) IS TRUE)  as count FROM rt0, vt1, vt0, rt1 NOT INDEXED);
SELECT ALL * FROM rt0, vt1, vt0, rt1 WHERE ((((load_extension(rt0.c0)))<((x'efa2'))));
SELECT COUNT(*) FROM rt1 WHERE (((((((rt1.c0) NOT NULL))OR((NOT (rt1.c3)))))OR(CAST(rt1.c0 AS INTEGER)))) ORDER BY CAST(CASE WHEN rt1.c4 THEN '-1688499770' END AS TEXT);
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0) NOT NULL))OR((NOT (rt1.c3)))))OR(CAST(rt1.c0 AS INTEGER)))) IS TRUE)  as count FROM rt1 ORDER BY CAST(CASE WHEN rt1.c4 THEN '-1688499770' END AS TEXT));
SELECT COUNT(*) FROM rt1 WHERE (((((((rt1.c0) NOT NULL))OR((NOT (rt1.c3)))))OR(CAST(rt1.c0 AS INTEGER)))) ORDER BY CAST(CASE WHEN rt1.c4 THEN '-1688499770' END AS TEXT);
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0) NOT NULL))OR((NOT (rt1.c3)))))OR(CAST(rt1.c0 AS INTEGER)))) IS TRUE)  as count FROM rt1 ORDER BY CAST(CASE WHEN rt1.c4 THEN '-1688499770' END AS TEXT));
SELECT COUNT(*) FROM rt1 WHERE (((((((rt1.c0) NOT NULL))OR((NOT (rt1.c3)))))OR(CAST(rt1.c0 AS INTEGER)))) ORDER BY CAST(CASE WHEN rt1.c4 THEN '-1688499770' END AS TEXT);
SELECT ALL COUNT(*) FROM rt1, rt0, vt1, vt0 WHERE ((((~ (rt1.c2)))<(((rt1.c2) IS TRUE)))) ORDER BY (((rt1.c1 IN ())) IS TRUE) ASC  NULLS LAST, rt1.c4  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt1.c2)))<(((rt1.c2) IS TRUE)))) IS TRUE)  as count FROM rt1, rt0, vt1, vt0 ORDER BY (((rt1.c1 IN ())) IS TRUE) ASC  NULLS LAST, rt1.c4  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0, vt1, vt0 WHERE ((((~ (rt1.c2)))<(((rt1.c2) IS TRUE)))) ORDER BY (((rt1.c1 IN ())) IS TRUE) ASC  NULLS LAST, rt1.c4  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt1.c2)))<(((rt1.c2) IS TRUE)))) IS TRUE)  as count FROM rt1, rt0, vt1, vt0 ORDER BY (((rt1.c1 IN ())) IS TRUE) ASC  NULLS LAST, rt1.c4  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0, vt1, vt0 WHERE ((((~ (rt1.c2)))<(((rt1.c2) IS TRUE)))) ORDER BY (((rt1.c1 IN ())) IS TRUE) ASC  NULLS LAST, rt1.c4  NULLS LAST;
SELECT * FROM vt0, rt1, rt0, vt1 WHERE (((((((((((((((vt0.c0)&(rt1.c0)))AND(rt1.c4 COLLATE NOCASE)))AND((((rt1.c4)) BETWEEN ((vt1.c0)) AND ((rt1.c2))))))AND(((rt0.c0) ISNULL))))AND(CASE WHEN vt0.c0 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c4 WHEN 0.3365540016183636 THEN vt1.c0 ELSE vt0.c0 END)))AND((('') NOT NULL))))OR(0.5131204547762458)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((vt0.c0)&(rt1.c0)))AND(rt1.c4 COLLATE NOCASE)))AND((((rt1.c4)) BETWEEN ((vt1.c0)) AND ((rt1.c2))))))AND(((rt0.c0) ISNULL))))AND(CASE WHEN vt0.c0 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c4 WHEN 0.3365540016183636 THEN vt1.c0 ELSE vt0.c0 END)))AND((('') NOT NULL))))OR(0.5131204547762458))) IS TRUE)  as count FROM vt0, rt1, rt0, vt1);
SELECT * FROM vt0, rt1, rt0, vt1 WHERE (((((((((((((((vt0.c0)&(rt1.c0)))AND(rt1.c4 COLLATE NOCASE)))AND((((rt1.c4)) BETWEEN ((vt1.c0)) AND ((rt1.c2))))))AND(((rt0.c0) ISNULL))))AND(CASE WHEN vt0.c0 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c4 WHEN 0.3365540016183636 THEN vt1.c0 ELSE vt0.c0 END)))AND((('') NOT NULL))))OR(0.5131204547762458)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((vt0.c0)&(rt1.c0)))AND(rt1.c4 COLLATE NOCASE)))AND((((rt1.c4)) BETWEEN ((vt1.c0)) AND ((rt1.c2))))))AND(((rt0.c0) ISNULL))))AND(CASE WHEN vt0.c0 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c4 WHEN 0.3365540016183636 THEN vt1.c0 ELSE vt0.c0 END)))AND((('') NOT NULL))))OR(0.5131204547762458))) IS TRUE)  as count FROM vt0, rt1, rt0, vt1);
SELECT * FROM vt0, rt1, rt0, vt1 WHERE (((((((((((((((vt0.c0)&(rt1.c0)))AND(rt1.c4 COLLATE NOCASE)))AND((((rt1.c4)) BETWEEN ((vt1.c0)) AND ((rt1.c2))))))AND(((rt0.c0) ISNULL))))AND(CASE WHEN vt0.c0 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c4 WHEN 0.3365540016183636 THEN vt1.c0 ELSE vt0.c0 END)))AND((('') NOT NULL))))OR(0.5131204547762458)));
SELECT ALL * FROM vt0, rt0 WHERE ((((CASE vt0.c0  WHEN rt0.c1 THEN 0.8298926841624232 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN '~7' END))>=((rt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE vt0.c0  WHEN rt0.c1 THEN 0.8298926841624232 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN '~7' END))>=((rt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((CASE vt0.c0  WHEN rt0.c1 THEN 0.8298926841624232 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN '~7' END))>=((rt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE vt0.c0  WHEN rt0.c1 THEN 0.8298926841624232 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN '~7' END))>=((rt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((CASE vt0.c0  WHEN rt0.c1 THEN 0.8298926841624232 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN '~7' END))>=((rt0.c0 COLLATE RTRIM))));
SELECT * FROM rt0, rt1, vt0 WHERE ((((- (rt1.c2))) BETWEEN ((+ (rt0.c2))) AND (((rt1.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt1.c2))) BETWEEN ((+ (rt0.c2))) AND (((rt1.c1) IS TRUE)))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT * FROM rt0, rt1, vt0 WHERE ((((- (rt1.c2))) BETWEEN ((+ (rt0.c2))) AND (((rt1.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt1.c2))) BETWEEN ((+ (rt0.c2))) AND (((rt1.c1) IS TRUE)))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT * FROM rt0, rt1, vt0 WHERE ((((- (rt1.c2))) BETWEEN ((+ (rt0.c2))) AND (((rt1.c1) IS TRUE))));
SELECT COUNT(*) FROM rt0, vt1, rt1, vt0 WHERE (SQLITE_SOURCE_ID()) ORDER BY ((((vt1.c0)LIKE(rt1.c1)))<=((~ (rt1.c3)))) ASC, (((x'')) NOT BETWEEN ((CAST(rt1.c0 AS REAL))) AND ((rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM rt0, vt1, rt1, vt0 ORDER BY ((((vt1.c0)LIKE(rt1.c1)))<=((~ (rt1.c3)))) ASC, (((x'')) NOT BETWEEN ((CAST(rt1.c0 AS REAL))) AND ((rt0.c1 COLLATE RTRIM))));
SELECT COUNT(*) FROM rt0, vt1, rt1, vt0 WHERE (SQLITE_SOURCE_ID()) ORDER BY ((((vt1.c0)LIKE(rt1.c1)))<=((~ (rt1.c3)))) ASC, (((x'')) NOT BETWEEN ((CAST(rt1.c0 AS REAL))) AND ((rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM rt0, vt1, rt1, vt0 ORDER BY ((((vt1.c0)LIKE(rt1.c1)))<=((~ (rt1.c3)))) ASC, (((x'')) NOT BETWEEN ((CAST(rt1.c0 AS REAL))) AND ((rt0.c1 COLLATE RTRIM))));
SELECT COUNT(*) FROM rt0, vt1, rt1, vt0 WHERE (SQLITE_SOURCE_ID()) ORDER BY ((((vt1.c0)LIKE(rt1.c1)))<=((~ (rt1.c3)))) ASC, (((x'')) NOT BETWEEN ((CAST(rt1.c0 AS REAL))) AND ((rt0.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt1 NOT INDEXED, vt1, rt0 WHERE ('sh?z{8E!1') ORDER BY (+ (((rt1.c3) ISNULL))), ((((((rt1.c3)AND(rt0.c2)))AND(NULL))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('sh?z{8E!1') IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY (+ (((rt1.c3) ISNULL))), ((((((rt1.c3)AND(rt0.c2)))AND(NULL))) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 NOT INDEXED, vt1, rt0 WHERE ('sh?z{8E!1') ORDER BY (+ (((rt1.c3) ISNULL))), ((((((rt1.c3)AND(rt0.c2)))AND(NULL))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('sh?z{8E!1') IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY (+ (((rt1.c3) ISNULL))), ((((((rt1.c3)AND(rt0.c2)))AND(NULL))) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 NOT INDEXED, vt1, rt0 WHERE ('sh?z{8E!1') ORDER BY (+ (((rt1.c3) ISNULL))), ((((((rt1.c3)AND(rt0.c2)))AND(NULL))) NOT NULL)  NULLS LAST;
SELECT * FROM rt0 WHERE (NULL) ORDER BY 0.1997338609679432 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY 0.1997338609679432 DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (NULL) ORDER BY 0.1997338609679432 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY 0.1997338609679432 DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (NULL) ORDER BY 0.1997338609679432 DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c0))==((vt0.c0))) THEN TOTAL_CHANGES() ELSE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0))==((vt0.c0))) THEN TOTAL_CHANGES() ELSE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c0))==((vt0.c0))) THEN TOTAL_CHANGES() ELSE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0))==((vt0.c0))) THEN TOTAL_CHANGES() ELSE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c0))==((vt0.c0))) THEN TOTAL_CHANGES() ELSE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END);
SELECT ALL * FROM vt1 WHERE ((NOT ((vt1.c0 IN ())))) ORDER BY ((vt1.c0)|(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)|(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((NOT ((vt1.c0 IN ())))) ORDER BY ((vt1.c0)|(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)|(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((NOT ((vt1.c0 IN ())))) ORDER BY ((vt1.c0)|(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))  NULLS LAST;
SELECT * FROM rt1, vt0 CROSS JOIN vt1 ON ((x'') BETWEEN (((rt1.c1)IS(rt1.c3))) AND (((rt1.c3)>>(rt1.c1)))) WHERE (CASE WHEN 0.03355002017514763 THEN (- (rt1.c2)) WHEN rt1.c2 THEN ((rt1.c1)<<(rt1.c4)) WHEN ((vt0.c0) IS FALSE) THEN (NOT (rt1.c3)) ELSE json_array(rt1.c4, vt1.c0, rt1.c4, rt1.c3) END) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.03355002017514763 THEN (- (rt1.c2)) WHEN rt1.c2 THEN ((rt1.c1)<<(rt1.c4)) WHEN ((vt0.c0) IS FALSE) THEN (NOT (rt1.c3)) ELSE json_array(rt1.c4, vt1.c0, rt1.c4, rt1.c3) END) IS TRUE)  as count FROM rt1, vt0 CROSS JOIN vt1 ON ((x'') BETWEEN (((rt1.c1)IS(rt1.c3))) AND (((rt1.c3)>>(rt1.c1)))) ORDER BY x''  NULLS LAST);
SELECT * FROM rt1, vt0 CROSS JOIN vt1 ON ((x'') BETWEEN (((rt1.c1)IS(rt1.c3))) AND (((rt1.c3)>>(rt1.c1)))) WHERE (CASE WHEN 0.03355002017514763 THEN (- (rt1.c2)) WHEN rt1.c2 THEN ((rt1.c1)<<(rt1.c4)) WHEN ((vt0.c0) IS FALSE) THEN (NOT (rt1.c3)) ELSE json_array(rt1.c4, vt1.c0, rt1.c4, rt1.c3) END) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.03355002017514763 THEN (- (rt1.c2)) WHEN rt1.c2 THEN ((rt1.c1)<<(rt1.c4)) WHEN ((vt0.c0) IS FALSE) THEN (NOT (rt1.c3)) ELSE json_array(rt1.c4, vt1.c0, rt1.c4, rt1.c3) END) IS TRUE)  as count FROM rt1, vt0 CROSS JOIN vt1 ON ((x'') BETWEEN (((rt1.c1)IS(rt1.c3))) AND (((rt1.c3)>>(rt1.c1)))) ORDER BY x''  NULLS LAST);
SELECT * FROM rt1, vt0 CROSS JOIN vt1 ON ((x'') BETWEEN (((rt1.c1)IS(rt1.c3))) AND (((rt1.c3)>>(rt1.c1)))) WHERE (CASE WHEN 0.03355002017514763 THEN (- (rt1.c2)) WHEN rt1.c2 THEN ((rt1.c1)<<(rt1.c4)) WHEN ((vt0.c0) IS FALSE) THEN (NOT (rt1.c3)) ELSE json_array(rt1.c4, vt1.c0, rt1.c4, rt1.c3) END) ORDER BY x''  NULLS LAST;
SELECT ALL * FROM rt1, vt1, rt0 WHERE (CASE CAST(rt1.c1 AS NUMERIC)  WHEN CAST(rt1.c0 AS NUMERIC) THEN (rt0.c2 IN ()) ELSE ((rt1.c1)/(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt1.c1 AS NUMERIC)  WHEN CAST(rt1.c0 AS NUMERIC) THEN (rt0.c2 IN ()) ELSE ((rt1.c1)/(vt1.c0)) END) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL * FROM rt1, vt1, rt0 WHERE (CASE CAST(rt1.c1 AS NUMERIC)  WHEN CAST(rt1.c0 AS NUMERIC) THEN (rt0.c2 IN ()) ELSE ((rt1.c1)/(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt1.c1 AS NUMERIC)  WHEN CAST(rt1.c0 AS NUMERIC) THEN (rt0.c2 IN ()) ELSE ((rt1.c1)/(vt1.c0)) END) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL * FROM rt1, vt1, rt0 WHERE (CASE CAST(rt1.c1 AS NUMERIC)  WHEN CAST(rt1.c0 AS NUMERIC) THEN (rt0.c2 IN ()) ELSE ((rt1.c1)/(vt1.c0)) END);
SELECT * FROM vt0 WHERE (CAST((((vt0.c0))!=((vt0.c0))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0))!=((vt0.c0))) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((((vt0.c0))!=((vt0.c0))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0))!=((vt0.c0))) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((((vt0.c0))!=((vt0.c0))) AS INTEGER));
SELECT * FROM vt0, rt1 WHERE ((((((rt1.c4) BETWEEN (vt0.c0) AND (vt0.c0))))!=((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 END)))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c4) BETWEEN (vt0.c0) AND (vt0.c0))))!=((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 END)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY NULL  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE ((((((rt1.c4) BETWEEN (vt0.c0) AND (vt0.c0))))!=((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 END)))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c4) BETWEEN (vt0.c0) AND (vt0.c0))))!=((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 END)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY NULL  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE ((((((rt1.c4) BETWEEN (vt0.c0) AND (vt0.c0))))!=((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 END)))) ORDER BY NULL  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt1.c0) ORDER BY 0.1025161453717619 COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY 0.1025161453717619 COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt1.c0) ORDER BY 0.1025161453717619 COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY 0.1025161453717619 COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt1.c0) ORDER BY 0.1025161453717619 COLLATE NOCASE  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((- (vt1.c0))) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY ((vt0.c0) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((- (vt1.c0))) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0) NOT NULL) DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((- (vt1.c0))) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY ((vt0.c0) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((- (vt1.c0))) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0) NOT NULL) DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((- (vt1.c0))) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY ((vt0.c0) NOT NULL) DESC;
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE ((+ ((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((~ (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE ((+ ((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((~ (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE ((+ ((~ (rt0.c1)))));
SELECT * FROM rt0, rt1 WHERE (((((((rt0.c0)AND(x'')))AND(rt0.c2)))LIKE((rt0.c0 IN ())))) ORDER BY CAST((- (rt0.c1)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(x'')))AND(rt0.c2)))LIKE((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, rt1 ORDER BY CAST((- (rt0.c1)) AS TEXT) DESC);
SELECT * FROM rt0, rt1 WHERE (((((((rt0.c0)AND(x'')))AND(rt0.c2)))LIKE((rt0.c0 IN ())))) ORDER BY CAST((- (rt0.c1)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(x'')))AND(rt0.c2)))LIKE((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, rt1 ORDER BY CAST((- (rt0.c1)) AS TEXT) DESC);
SELECT * FROM rt0, rt1 WHERE (((((((rt0.c0)AND(x'')))AND(rt0.c2)))LIKE((rt0.c0 IN ())))) ORDER BY CAST((- (rt0.c1)) AS TEXT) DESC;
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE (((CAST(rt0.c2 AS NUMERIC))GLOB(((rt0.c0) ISNULL)))) ORDER BY ((('-1142658346') NOTNULL) IN (rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS NUMERIC))GLOB(((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY ((('-1142658346') NOTNULL) IN (rt0.c0)) DESC);
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE (((CAST(rt0.c2 AS NUMERIC))GLOB(((rt0.c0) ISNULL)))) ORDER BY ((('-1142658346') NOTNULL) IN (rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS NUMERIC))GLOB(((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY ((('-1142658346') NOTNULL) IN (rt0.c0)) DESC);
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE (((CAST(rt0.c2 AS NUMERIC))GLOB(((rt0.c0) ISNULL)))) ORDER BY ((('-1142658346') NOTNULL) IN (rt0.c0)) DESC;
SELECT * FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))GLOB(((vt1.c0)|(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))GLOB(((vt1.c0)|(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))GLOB(((vt1.c0)|(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))GLOB(((vt1.c0)|(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))GLOB(((vt1.c0)|(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0, rt0, rt1 WHERE ((((rt1.c2 COLLATE NOCASE))<((CAST(rt1.c0 AS REAL))))) ORDER BY (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)) IN ((rt1.c0 IN (NULL))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2 COLLATE NOCASE))<((CAST(rt1.c0 AS REAL))))) IS TRUE)  as count FROM vt1, vt0, rt0, rt1 ORDER BY (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)) IN ((rt1.c0 IN (NULL)))));
SELECT ALL COUNT(*) FROM vt1, vt0, rt0, rt1 WHERE ((((rt1.c2 COLLATE NOCASE))<((CAST(rt1.c0 AS REAL))))) ORDER BY (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)) IN ((rt1.c0 IN (NULL))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2 COLLATE NOCASE))<((CAST(rt1.c0 AS REAL))))) IS TRUE)  as count FROM vt1, vt0, rt0, rt1 ORDER BY (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)) IN ((rt1.c0 IN (NULL)))));
SELECT ALL COUNT(*) FROM vt1, vt0, rt0, rt1 WHERE ((((rt1.c2 COLLATE NOCASE))<((CAST(rt1.c0 AS REAL))))) ORDER BY (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)) IN ((rt1.c0 IN (NULL))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)%(rt0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)%(rt0.c2))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)%(rt0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)%(rt0.c2))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)%(rt0.c2))) IS FALSE));
SELECT ALL COUNT(*) FROM rt0, vt1, rt1, vt0 WHERE (((((rt1.c0)>(vt0.c0))) NOTNULL)) ORDER BY ((rt1.c2 COLLATE NOCASE)IS(((rt1.c4)GLOB(NULL)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)>(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, vt1, rt1, vt0 ORDER BY ((rt1.c2 COLLATE NOCASE)IS(((rt1.c4)GLOB(NULL)))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt1, rt1, vt0 WHERE (((((rt1.c0)>(vt0.c0))) NOTNULL)) ORDER BY ((rt1.c2 COLLATE NOCASE)IS(((rt1.c4)GLOB(NULL)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)>(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, vt1, rt1, vt0 ORDER BY ((rt1.c2 COLLATE NOCASE)IS(((rt1.c4)GLOB(NULL)))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt1, rt1, vt0 WHERE (((((rt1.c0)>(vt0.c0))) NOTNULL)) ORDER BY ((rt1.c2 COLLATE NOCASE)IS(((rt1.c4)GLOB(NULL)))) ASC;
SELECT * FROM rt0 NOT INDEXED, rt1 WHERE (CAST((rt0.c0 IN ()) AS TEXT)) ORDER BY ((((rt0.c2)>=(rt1.c3)))OR((NOT (rt1.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt0.c2)>=(rt1.c3)))OR((NOT (rt1.c2)))) DESC  NULLS FIRST);
SELECT * FROM rt0 NOT INDEXED, rt1 WHERE (CAST((rt0.c0 IN ()) AS TEXT)) ORDER BY ((((rt0.c2)>=(rt1.c3)))OR((NOT (rt1.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt0.c2)>=(rt1.c3)))OR((NOT (rt1.c2)))) DESC  NULLS FIRST);
SELECT * FROM rt0 NOT INDEXED, rt1 WHERE (CAST((rt0.c0 IN ()) AS TEXT)) ORDER BY ((((rt0.c2)>=(rt1.c3)))OR((NOT (rt1.c2)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, rt1, rt0, vt1 WHERE (((((0.5296693686738018)/(rt1.c4))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((0.5296693686738018)/(rt1.c4))) NOTNULL)) IS TRUE)  as count FROM vt0, rt1, rt0, vt1);
SELECT ALL * FROM vt0, rt1, rt0, vt1 WHERE (((((0.5296693686738018)/(rt1.c4))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((0.5296693686738018)/(rt1.c4))) NOTNULL)) IS TRUE)  as count FROM vt0, rt1, rt0, vt1);
SELECT ALL * FROM vt0, rt1, rt0, vt1 WHERE (((((0.5296693686738018)/(rt1.c4))) NOTNULL));
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (CASE WHEN CAST(rt1.c4 AS TEXT) THEN ((rt0.c1) IS TRUE) WHEN rt1.c2 COLLATE BINARY THEN ((NULL)<>('1467740107')) WHEN (('-820321308')LIKE(rt1.c1)) THEN CASE WHEN rt1.c4 THEN rt0.c2 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt1.c4 AS TEXT) THEN ((rt0.c1) IS TRUE) WHEN rt1.c2 COLLATE BINARY THEN ((NULL)!=('1467740107')) WHEN (('-820321308')LIKE(rt1.c1)) THEN CASE WHEN rt1.c4 THEN rt0.c2 END END) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (CASE WHEN CAST(rt1.c4 AS TEXT) THEN ((rt0.c1) IS TRUE) WHEN rt1.c2 COLLATE BINARY THEN ((NULL)<>('1467740107')) WHEN (('-820321308')LIKE(rt1.c1)) THEN CASE WHEN rt1.c4 THEN rt0.c2 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt1.c4 AS TEXT) THEN ((rt0.c1) IS TRUE) WHEN rt1.c2 COLLATE BINARY THEN ((NULL)!=('1467740107')) WHEN (('-820321308')LIKE(rt1.c1)) THEN CASE WHEN rt1.c4 THEN rt0.c2 END END) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (CASE WHEN CAST(rt1.c4 AS TEXT) THEN ((rt0.c1) IS TRUE) WHEN rt1.c2 COLLATE BINARY THEN ((NULL)<>('1467740107')) WHEN (('-820321308')LIKE(rt1.c1)) THEN CASE WHEN rt1.c4 THEN rt0.c2 END END);
SELECT ALL * FROM rt0 INNER JOIN rt1 ON (((((rt0.c1) IS TRUE)))<(((rt0.c1 IN ())))) WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON (((((rt0.c1) IS TRUE)))<(((rt0.c1 IN ())))));
SELECT ALL * FROM rt0 INNER JOIN rt1 ON (((((rt0.c1) IS TRUE)))<(((rt0.c1 IN ())))) WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON (((((rt0.c1) IS TRUE)))<(((rt0.c1 IN ())))));
SELECT ALL * FROM rt0 INNER JOIN rt1 ON (((((rt0.c1) IS TRUE)))<(((rt0.c1 IN ())))) WHERE (rt1.c2);
SELECT COUNT(*) FROM rt0 WHERE (((-1105083425)-(((rt0.c2)||(0xffffffff8aaaeae9)))));
SELECT SUM(count) FROM (SELECT ALL ((((-1105083425)-(((rt0.c2)||(0Xffffffff8aaaeae9))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((-1105083425)-(((rt0.c2)||(0xffffffff8aaaeae9)))));
SELECT SUM(count) FROM (SELECT ALL ((((-1105083425)-(((rt0.c2)||(0Xffffffff8aaaeae9))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((-1105083425)-(((rt0.c2)||(0xffffffff8aaaeae9)))));
SELECT COUNT(*) FROM rt1, vt0 WHERE (((CAST(rt1.c1 AS REAL))OR(COALESCE(rt1.c3, vt0.c0)))) ORDER BY '' COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c1 AS REAL))OR(COALESCE(rt1.c3, vt0.c0)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY '' COLLATE RTRIM DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((CAST(rt1.c1 AS REAL))OR(COALESCE(rt1.c3, vt0.c0)))) ORDER BY '' COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c1 AS REAL))OR(COALESCE(rt1.c3, vt0.c0)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY '' COLLATE RTRIM DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((CAST(rt1.c1 AS REAL))OR(COALESCE(rt1.c3, vt0.c0)))) ORDER BY '' COLLATE RTRIM DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOTNULL)  NULLS FIRST;
SELECT ALL * FROM vt1, rt1, rt0 NOT INDEXED, vt0 WHERE (((rt1.c4 COLLATE RTRIM) IS FALSE)) ORDER BY CASE WHEN (NOT (rt1.c0)) THEN ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))OR('1467740107')) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c4 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM vt1, rt1, rt0, vt0 ORDER BY CASE WHEN (NOT (rt1.c0)) THEN ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))OR('1467740107')) END DESC  NULLS LAST);
SELECT ALL * FROM vt1, rt1, rt0 NOT INDEXED, vt0 WHERE (((rt1.c4 COLLATE RTRIM) IS FALSE)) ORDER BY CASE WHEN (NOT (rt1.c0)) THEN ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))OR('1467740107')) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c4 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM vt1, rt1, rt0, vt0 ORDER BY CASE WHEN (NOT (rt1.c0)) THEN ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))OR('1467740107')) END DESC  NULLS LAST);
SELECT ALL * FROM vt1, rt1, rt0 NOT INDEXED, vt0 WHERE (((rt1.c4 COLLATE RTRIM) IS FALSE)) ORDER BY CASE WHEN (NOT (rt1.c0)) THEN ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))OR('1467740107')) END DESC  NULLS LAST;
SELECT * FROM rt0 NOT INDEXED WHERE (NULL) ORDER BY (((0.0531917815854116)|(rt0.c2)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY (((0.0531917815854116)|(rt0.c2)) IN ()) DESC  NULLS LAST);
SELECT * FROM rt0 NOT INDEXED WHERE (NULL) ORDER BY (((0.0531917815854116)|(rt0.c2)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY (((0.0531917815854116)|(rt0.c2)) IN ()) DESC  NULLS LAST);
SELECT * FROM rt0 NOT INDEXED WHERE (NULL) ORDER BY (((0.0531917815854116)|(rt0.c2)) IN ()) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE ((((+ (vt0.c0)))IS NOT(((vt0.c0)*(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))IS NOT(((vt0.c0)*(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((+ (vt0.c0)))IS NOT(((vt0.c0)*(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))IS NOT(((vt0.c0)*(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((+ (vt0.c0)))IS NOT(((vt0.c0)*(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c1) BETWEEN (rt0.c2) AND (NULL))) BETWEEN (vt1.c0 COLLATE NOCASE) AND ((NOT (rt0.c1)))) WHERE (((((vt1.c0) ISNULL))IS NOT(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))))) ORDER BY (~ (((x'dce8')>(rt0.c1)))) DESC, CASE WHEN rt0.c0 THEN (rt0.c1 IN ()) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) ISNULL))IS NOT(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c1) BETWEEN (rt0.c2) AND (NULL))) BETWEEN (vt1.c0 COLLATE NOCASE) AND ((NOT (rt0.c1)))) ORDER BY (~ (((x'dce8')>(rt0.c1)))) DESC, CASE WHEN rt0.c0 THEN (rt0.c1 IN ()) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c1) BETWEEN (rt0.c2) AND (NULL))) BETWEEN (vt1.c0 COLLATE NOCASE) AND ((NOT (rt0.c1)))) WHERE (((((vt1.c0) ISNULL))IS NOT(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))))) ORDER BY (~ (((x'dce8')>(rt0.c1)))) DESC, CASE WHEN rt0.c0 THEN (rt0.c1 IN ()) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) ISNULL))IS NOT(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c1) BETWEEN (rt0.c2) AND (NULL))) BETWEEN (vt1.c0 COLLATE NOCASE) AND ((NOT (rt0.c1)))) ORDER BY (~ (((x'dce8')>(rt0.c1)))) DESC, CASE WHEN rt0.c0 THEN (rt0.c1 IN ()) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c1) BETWEEN (rt0.c2) AND (NULL))) BETWEEN (vt1.c0 COLLATE NOCASE) AND ((NOT (rt0.c1)))) WHERE (((((vt1.c0) ISNULL))IS NOT(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))))) ORDER BY (~ (((x'dce8')>(rt0.c1)))) DESC, CASE WHEN rt0.c0 THEN (rt0.c1 IN ()) END ASC  NULLS FIRST;
SELECT * FROM rt0 CROSS JOIN vt1 ON ((((((((((rt0.c1)IS NOT(vt1.c0)))AND((((rt1.c4))>=((rt1.c2))))))AND(UNLIKELY(rt0.c2))))OR(((vt1.c0) BETWEEN (rt1.c2) AND (rt0.c0)))))OR(vt1.c0)) FULL OUTER JOIN rt1 ON CASE (((rt0.c2))<>((vt1.c0)))  WHEN (('0.5736798221535413') NOTNULL) THEN NULL END CROSS JOIN vt0 ON (((+ (vt0.c0))) IS TRUE) WHERE (((((~ (rt1.c4))))<=((x''))));
SELECT SUM(count) FROM (SELECT ALL ((((((~ (rt1.c4))))<=((x'')))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((((((((((rt0.c1)IS NOT(vt1.c0)))AND((((rt1.c4))>=((rt1.c2))))))AND(UNLIKELY(rt0.c2))))OR(((vt1.c0) BETWEEN (rt1.c2) AND (rt0.c0)))))OR(vt1.c0)) FULL OUTER JOIN rt1 ON CASE (((rt0.c2))!=((vt1.c0)))  WHEN (('0.5736798221535413') NOTNULL) THEN NULL END CROSS JOIN vt0 ON (((+ (vt0.c0))) IS TRUE));
SELECT * FROM rt0 CROSS JOIN vt1 ON ((((((((((rt0.c1)IS NOT(vt1.c0)))AND((((rt1.c4))>=((rt1.c2))))))AND(UNLIKELY(rt0.c2))))OR(((vt1.c0) BETWEEN (rt1.c2) AND (rt0.c0)))))OR(vt1.c0)) FULL OUTER JOIN rt1 ON CASE (((rt0.c2))<>((vt1.c0)))  WHEN (('0.5736798221535413') NOTNULL) THEN NULL END CROSS JOIN vt0 ON (((+ (vt0.c0))) IS TRUE) WHERE (((((~ (rt1.c4))))<=((x''))));
SELECT SUM(count) FROM (SELECT ALL ((((((~ (rt1.c4))))<=((x'')))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((((((((((rt0.c1)IS NOT(vt1.c0)))AND((((rt1.c4))>=((rt1.c2))))))AND(UNLIKELY(rt0.c2))))OR(((vt1.c0) BETWEEN (rt1.c2) AND (rt0.c0)))))OR(vt1.c0)) FULL OUTER JOIN rt1 ON CASE (((rt0.c2))!=((vt1.c0)))  WHEN (('0.5736798221535413') NOTNULL) THEN NULL END CROSS JOIN vt0 ON (((+ (vt0.c0))) IS TRUE));
SELECT ALL * FROM vt0, rt0, vt1, rt1 WHERE (CAST(LIKELIHOOD(rt1.c4, 0.037599088940086456) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(LIKELIHOOD(rt1.c4, 0.037599088940086456) AS BLOB)) IS TRUE)  as count FROM vt0, rt0, vt1, rt1);
SELECT ALL * FROM vt0, rt0, vt1, rt1 WHERE (CAST(LIKELIHOOD(rt1.c4, 0.037599088940086456) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(LIKELIHOOD(rt1.c4, 0.037599088940086456) AS BLOB)) IS TRUE)  as count FROM vt0, rt0, vt1, rt1);
SELECT ALL * FROM vt0, rt0, vt1, rt1 WHERE (CAST(LIKELIHOOD(rt1.c4, 0.037599088940086456) AS BLOB));
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE (((((rt1.c1)OR(rt1.c0)))AND(rt1.c1)) COLLATE BINARY) ORDER BY GLOB(NULL, (rt1.c0 IN ())) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)OR(rt1.c0)))AND(rt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY GLOB(NULL, (rt1.c0 IN ())) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE (((((rt1.c1)OR(rt1.c0)))AND(rt1.c1)) COLLATE BINARY) ORDER BY GLOB(NULL, (rt1.c0 IN ())) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)OR(rt1.c0)))AND(rt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY GLOB(NULL, (rt1.c0 IN ())) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE (((((rt1.c1)OR(rt1.c0)))AND(rt1.c1)) COLLATE BINARY) ORDER BY GLOB(NULL, (rt1.c0 IN ())) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0) BETWEEN (((rt0.c1) BETWEEN ('-2070209636') AND (rt0.c1))) AND (COALESCE(rt0.c2, vt0.c0, rt0.c1, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (((rt0.c1) BETWEEN ('-2070209636') AND (rt0.c1))) AND (COALESCE(rt0.c2, vt0.c0, rt0.c1, rt0.c1)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0) BETWEEN (((rt0.c1) BETWEEN ('-2070209636') AND (rt0.c1))) AND (COALESCE(rt0.c2, vt0.c0, rt0.c1, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (((rt0.c1) BETWEEN ('-2070209636') AND (rt0.c1))) AND (COALESCE(rt0.c2, vt0.c0, rt0.c1, rt0.c1)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0) BETWEEN (((rt0.c1) BETWEEN ('-2070209636') AND (rt0.c1))) AND (COALESCE(rt0.c2, vt0.c0, rt0.c1, rt0.c1))));
SELECT ALL COUNT(*) FROM rt1, vt1, vt0, rt0 WHERE (((TIME(rt1.c2, rt1.c0, rt1.c0))==(((rt0.c2) BETWEEN (x'') AND (vt0.c0))))) ORDER BY ABS('0.24101667343591393') DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((TIME(rt1.c2, rt1.c0, rt1.c0))==(((rt0.c2) BETWEEN (x'') AND (vt0.c0))))) IS TRUE)  as count FROM rt1, vt1, vt0, rt0 ORDER BY ABS('0.24101667343591393') DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt1, vt0, rt0 WHERE (((TIME(rt1.c2, rt1.c0, rt1.c0))==(((rt0.c2) BETWEEN (x'') AND (vt0.c0))))) ORDER BY ABS('0.24101667343591393') DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((TIME(rt1.c2, rt1.c0, rt1.c0))==(((rt0.c2) BETWEEN (x'') AND (vt0.c0))))) IS TRUE)  as count FROM rt1, vt1, vt0, rt0 ORDER BY ABS('0.24101667343591393') DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt1, vt0, rt0 WHERE (((TIME(rt1.c2, rt1.c0, rt1.c0))==(((rt0.c2) BETWEEN (x'') AND (vt0.c0))))) ORDER BY ABS('0.24101667343591393') DESC  NULLS FIRST;
SELECT * FROM rt0 INNER JOIN rt1 ON CAST(((rt1.c3)IS(rt1.c1)) AS REAL) WHERE (rt0.c2) ORDER BY (NOT (rt0.c1 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON CAST(((rt1.c3)IS(rt1.c1)) AS REAL) ORDER BY (NOT (rt0.c1 COLLATE NOCASE)) ASC);
SELECT * FROM rt0 INNER JOIN rt1 ON CAST(((rt1.c3)IS(rt1.c1)) AS REAL) WHERE (rt0.c2) ORDER BY (NOT (rt0.c1 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON CAST(((rt1.c3)IS(rt1.c1)) AS REAL) ORDER BY (NOT (rt0.c1 COLLATE NOCASE)) ASC);
SELECT * FROM rt0 INNER JOIN rt1 ON CAST(((rt1.c3)IS(rt1.c1)) AS REAL) WHERE (rt0.c2) ORDER BY (NOT (rt0.c1 COLLATE NOCASE)) ASC;
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON (NOT (rt1.c2)) WHERE (rt1.c4) ORDER BY CASE WHEN vt0.c0 COLLATE NOCASE THEN ((rt1.c1)|(rt1.c3)) END DESC, ((rt1.c3)>=(vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON (NOT (rt1.c2)) ORDER BY CASE WHEN vt0.c0 COLLATE NOCASE THEN ((rt1.c1)|(rt1.c3)) END DESC, ((rt1.c3)>=(vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON (NOT (rt1.c2)) WHERE (rt1.c4) ORDER BY CASE WHEN vt0.c0 COLLATE NOCASE THEN ((rt1.c1)|(rt1.c3)) END DESC, ((rt1.c3)>=(vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON (NOT (rt1.c2)) ORDER BY CASE WHEN vt0.c0 COLLATE NOCASE THEN ((rt1.c1)|(rt1.c3)) END DESC, ((rt1.c3)>=(vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON (NOT (rt1.c2)) WHERE (rt1.c4) ORDER BY CASE WHEN vt0.c0 COLLATE NOCASE THEN ((rt1.c1)|(rt1.c3)) END DESC, ((rt1.c3)>=(vt0.c0 COLLATE RTRIM));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON ((SQLITE_COMPILEOPTION_GET(rt0.c0))>>(x'0fc0faa9' COLLATE NOCASE)) FULL OUTER JOIN vt0 ON ((((0.5296693686738018 COLLATE BINARY)AND(((vt0.c0) IS TRUE))))AND(CAST(rt1.c2 AS INTEGER))) WHERE ((- ((((rt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((rt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON ((SQLITE_COMPILEOPTION_GET(rt0.c0))>>(x'0fc0faa9' COLLATE NOCASE)) FULL OUTER JOIN vt0 ON ((((0.5296693686738018 COLLATE BINARY)AND(((vt0.c0) IS TRUE))))AND(CAST(rt1.c2 AS INTEGER))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON ((SQLITE_COMPILEOPTION_GET(rt0.c0))>>(x'0fc0faa9' COLLATE NOCASE)) FULL OUTER JOIN vt0 ON ((((0.5296693686738018 COLLATE BINARY)AND(((vt0.c0) IS TRUE))))AND(CAST(rt1.c2 AS INTEGER))) WHERE ((- ((((rt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((rt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON ((SQLITE_COMPILEOPTION_GET(rt0.c0))>>(x'0fc0faa9' COLLATE NOCASE)) FULL OUTER JOIN vt0 ON ((((0.5296693686738018 COLLATE BINARY)AND(((vt0.c0) IS TRUE))))AND(CAST(rt1.c2 AS INTEGER))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON ((SQLITE_COMPILEOPTION_GET(rt0.c0))>>(x'0fc0faa9' COLLATE NOCASE)) FULL OUTER JOIN vt0 ON ((((0.5296693686738018 COLLATE BINARY)AND(((vt0.c0) IS TRUE))))AND(CAST(rt1.c2 AS INTEGER))) WHERE ((- ((((rt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE ((((rt1.c4)) BETWEEN (((rt1.c3 IN ()))) AND ((((('', rt1.c4, rt0.c0)) NOT BETWEEN ((rt1.c4, vt0.c0, 0X77a2107e)) AND ((rt1.c0, rt0.c2, rt0.c2)))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c4)) BETWEEN (((rt1.c3 IN ()))) AND ((((('', rt1.c4, rt0.c0)) NOT BETWEEN ((rt1.c4, vt0.c0, 0x77a2107e)) AND ((rt1.c0, rt0.c2, rt0.c2))))))) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE ((((rt1.c4)) BETWEEN (((rt1.c3 IN ()))) AND ((((('', rt1.c4, rt0.c0)) NOT BETWEEN ((rt1.c4, vt0.c0, 0X77a2107e)) AND ((rt1.c0, rt0.c2, rt0.c2)))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c4)) BETWEEN (((rt1.c3 IN ()))) AND ((((('', rt1.c4, rt0.c0)) NOT BETWEEN ((rt1.c4, vt0.c0, 0x77a2107e)) AND ((rt1.c0, rt0.c2, rt0.c2))))))) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE ((((rt1.c4)) BETWEEN (((rt1.c3 IN ()))) AND ((((('', rt1.c4, rt0.c0)) NOT BETWEEN ((rt1.c4, vt0.c0, 0X77a2107e)) AND ((rt1.c0, rt0.c2, rt0.c2)))))));
SELECT * FROM rt1, vt1, vt0 NATURAL JOIN rt0 WHERE (x'') ORDER BY (1.52857212E8 COLLATE NOCASE IN ()) ASC, (- (CASE rt0.c1  WHEN rt0.c0 THEN rt1.c1 ELSE rt1.c2 END)), (((NOT (rt1.c2)))<(CASE rt1.c0  WHEN rt0.c2 THEN rt1.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1, vt1, vt0 NATURAL JOIN rt0 ORDER BY (1.52857212E8 COLLATE NOCASE IN ()) ASC, (- (CASE rt0.c1  WHEN rt0.c0 THEN rt1.c1 ELSE rt1.c2 END)), (((NOT (rt1.c2)))<(CASE rt1.c0  WHEN rt0.c2 THEN rt1.c2 END)) DESC);
SELECT * FROM rt1, vt1, vt0 NATURAL JOIN rt0 WHERE (x'') ORDER BY (1.52857212E8 COLLATE NOCASE IN ()) ASC, (- (CASE rt0.c1  WHEN rt0.c0 THEN rt1.c1 ELSE rt1.c2 END)), (((NOT (rt1.c2)))<(CASE rt1.c0  WHEN rt0.c2 THEN rt1.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1, vt1, vt0 NATURAL JOIN rt0 ORDER BY (1.52857212E8 COLLATE NOCASE IN ()) ASC, (- (CASE rt0.c1  WHEN rt0.c0 THEN rt1.c1 ELSE rt1.c2 END)), (((NOT (rt1.c2)))<(CASE rt1.c0  WHEN rt0.c2 THEN rt1.c2 END)) DESC);
SELECT * FROM rt1, vt1, vt0 NATURAL JOIN rt0 WHERE (x'') ORDER BY (1.52857212E8 COLLATE NOCASE IN ()) ASC, (- (CASE rt0.c1  WHEN rt0.c0 THEN rt1.c1 ELSE rt1.c2 END)), (((NOT (rt1.c2)))<(CASE rt1.c0  WHEN rt0.c2 THEN rt1.c2 END)) DESC;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((rt1.c2 IN ()))IS NOT(CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2 IN ()))IS NOT(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((rt1.c2 IN ()))IS NOT(CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2 IN ()))IS NOT(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((rt1.c2 IN ()))IS NOT(CAST(rt0.c1 AS TEXT))));
SELECT ALL * FROM vt1, vt0 WHERE (((((x'') NOT NULL)) NOT NULL)) ORDER BY (((((((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))OR(highlight(vt0.c0, x'', 1467740107, vt1.c0))))OR((((vt0.c0, vt1.c0, vt1.c0))!=((vt1.c0, vt0.c0, vt0.c0))))))OR(CAST(vt1.c0 AS NUMERIC))))AND((+ (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((x'') NOT NULL)) NOT NULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))OR(highlight(vt0.c0, x'', 1467740107, vt1.c0))))OR((((vt0.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt0.c0, vt0.c0))))))OR(CAST(vt1.c0 AS NUMERIC))))AND((+ (vt1.c0)))));
SELECT ALL * FROM vt1, vt0 WHERE (((((x'') NOT NULL)) NOT NULL)) ORDER BY (((((((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))OR(highlight(vt0.c0, x'', 1467740107, vt1.c0))))OR((((vt0.c0, vt1.c0, vt1.c0))!=((vt1.c0, vt0.c0, vt0.c0))))))OR(CAST(vt1.c0 AS NUMERIC))))AND((+ (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((x'') NOT NULL)) NOT NULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))OR(highlight(vt0.c0, x'', 1467740107, vt1.c0))))OR((((vt0.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt0.c0, vt0.c0))))))OR(CAST(vt1.c0 AS NUMERIC))))AND((+ (vt1.c0)))));
SELECT ALL * FROM vt1, vt0 WHERE (((((x'') NOT NULL)) NOT NULL)) ORDER BY (((((((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))OR(highlight(vt0.c0, x'', 1467740107, vt1.c0))))OR((((vt0.c0, vt1.c0, vt1.c0))!=((vt1.c0, vt0.c0, vt0.c0))))))OR(CAST(vt1.c0 AS NUMERIC))))AND((+ (vt1.c0))));
SELECT ALL * FROM rt0, rt1, vt0, vt1 WHERE (((((('Jt'))<=((vt0.c0))))|(CASE rt1.c0  WHEN vt1.c0 THEN rt1.c1 END))) ORDER BY ((((((rt0.c0) IS FALSE))AND(((rt0.c1) NOTNULL))))AND(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((('Jt'))<=((vt0.c0))))|(CASE rt1.c0  WHEN vt1.c0 THEN rt1.c1 END))) IS TRUE)  as count FROM rt0, rt1, vt0, vt1 ORDER BY ((((((rt0.c0) IS FALSE))AND(((rt0.c1) NOTNULL))))AND(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0, rt1, vt0, vt1 WHERE (((((('Jt'))<=((vt0.c0))))|(CASE rt1.c0  WHEN vt1.c0 THEN rt1.c1 END))) ORDER BY ((((((rt0.c0) IS FALSE))AND(((rt0.c1) NOTNULL))))AND(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((('Jt'))<=((vt0.c0))))|(CASE rt1.c0  WHEN vt1.c0 THEN rt1.c1 END))) IS TRUE)  as count FROM rt0, rt1, vt0, vt1 ORDER BY ((((((rt0.c0) IS FALSE))AND(((rt0.c1) NOTNULL))))AND(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0, rt1, vt0, vt1 WHERE (((((('Jt'))<=((vt0.c0))))|(CASE rt1.c0  WHEN vt1.c0 THEN rt1.c1 END))) ORDER BY ((((((rt0.c0) IS FALSE))AND(((rt0.c1) NOTNULL))))AND(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))) ASC  NULLS LAST;
SELECT ALL * FROM vt0, rt1 WHERE (vt0.c0) ORDER BY ((rt1.c1)>=(rt1.c4)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((rt1.c1)>=(rt1.c4)) COLLATE BINARY);
SELECT ALL * FROM vt0, rt1 WHERE (vt0.c0) ORDER BY ((rt1.c1)>=(rt1.c4)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((rt1.c1)>=(rt1.c4)) COLLATE BINARY);
SELECT ALL * FROM vt0, rt1 WHERE (vt0.c0) ORDER BY ((rt1.c1)>=(rt1.c4)) COLLATE BINARY;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((+ (((vt0.c0)>(rt0.c1))))) ORDER BY ((((vt0.c0)AND(rt0.c2))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)>(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c0)AND(rt0.c2))) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((+ (((vt0.c0)>(rt0.c1))))) ORDER BY ((((vt0.c0)AND(rt0.c2))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)>(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c0)AND(rt0.c2))) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((+ (((vt0.c0)>(rt0.c1))))) ORDER BY ((((vt0.c0)AND(rt0.c2))) ISNULL)  NULLS LAST;
SELECT ALL * FROM vt1, vt0, rt0 WHERE (((((rt0.c2)||(vt0.c0)))OR(CASE vt0.c0  WHEN rt0.c1 THEN NULL WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 END))) ORDER BY CASE WHEN (vt1.c0 IN ()) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END END;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)||(vt0.c0)))OR(CASE vt0.c0  WHEN rt0.c1 THEN NULL WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY CASE WHEN (vt1.c0 IN ()) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END END);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (((((rt0.c2)||(vt0.c0)))OR(CASE vt0.c0  WHEN rt0.c1 THEN NULL WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 END))) ORDER BY CASE WHEN (vt1.c0 IN ()) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END END;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)||(vt0.c0)))OR(CASE vt0.c0  WHEN rt0.c1 THEN NULL WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY CASE WHEN (vt1.c0 IN ()) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END END);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (((((rt0.c2)||(vt0.c0)))OR(CASE vt0.c0  WHEN rt0.c1 THEN NULL WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 END))) ORDER BY CASE WHEN (vt1.c0 IN ()) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END END;
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (((((vt0.c0)<>(vt1.c0)))%((((''))>((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<>(vt1.c0)))%((((''))>((rt0.c0)))))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (((((vt0.c0)<>(vt1.c0)))%((((''))>((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<>(vt1.c0)))%((((''))>((rt0.c0)))))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (((((vt0.c0)<>(vt1.c0)))%((((''))>((rt0.c0))))));
SELECT COUNT(*) FROM rt1 WHERE (CAST((((rt1.c4))>((rt1.c4))) AS TEXT)) ORDER BY CASE WHEN CASE WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END THEN ((rt1.c1)/(rt1.c1)) WHEN LIKELY(rt1.c1) THEN rt1.c4 COLLATE NOCASE WHEN ((((0.9372310493728168)OR(rt1.c0)))AND(rt1.c3)) THEN rt1.c2 ELSE ((((rt1.c0)OR(rt1.c1)))OR(rt1.c0)) END ASC  NULLS LAST, ((NULL)<(rt1.c4)) COLLATE NOCASE ASC, CAST((rt1.c3 IN (rt1.c4)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c4))>((rt1.c4))) AS TEXT)) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN CASE WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END THEN ((rt1.c1)/(rt1.c1)) WHEN LIKELY(rt1.c1) THEN rt1.c4 COLLATE NOCASE WHEN ((((0.9372310493728168)OR(rt1.c0)))AND(rt1.c3)) THEN rt1.c2 ELSE ((((rt1.c0)OR(rt1.c1)))OR(rt1.c0)) END ASC  NULLS LAST, ((NULL)<(rt1.c4)) COLLATE NOCASE ASC, CAST((rt1.c3 IN (rt1.c4)) AS BLOB) DESC);
SELECT COUNT(*) FROM rt1 WHERE (CAST((((rt1.c4))>((rt1.c4))) AS TEXT)) ORDER BY CASE WHEN CASE WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END THEN ((rt1.c1)/(rt1.c1)) WHEN LIKELY(rt1.c1) THEN rt1.c4 COLLATE NOCASE WHEN ((((0.9372310493728168)OR(rt1.c0)))AND(rt1.c3)) THEN rt1.c2 ELSE ((((rt1.c0)OR(rt1.c1)))OR(rt1.c0)) END ASC  NULLS LAST, ((NULL)<(rt1.c4)) COLLATE NOCASE ASC, CAST((rt1.c3 IN (rt1.c4)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c4))>((rt1.c4))) AS TEXT)) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN CASE WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END THEN ((rt1.c1)/(rt1.c1)) WHEN LIKELY(rt1.c1) THEN rt1.c4 COLLATE NOCASE WHEN ((((0.9372310493728168)OR(rt1.c0)))AND(rt1.c3)) THEN rt1.c2 ELSE ((((rt1.c0)OR(rt1.c1)))OR(rt1.c0)) END ASC  NULLS LAST, ((NULL)<(rt1.c4)) COLLATE NOCASE ASC, CAST((rt1.c3 IN (rt1.c4)) AS BLOB) DESC);
SELECT COUNT(*) FROM rt1 WHERE (CAST((((rt1.c4))>((rt1.c4))) AS TEXT)) ORDER BY CASE WHEN CASE WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END THEN ((rt1.c1)/(rt1.c1)) WHEN LIKELY(rt1.c1) THEN rt1.c4 COLLATE NOCASE WHEN ((((0.9372310493728168)OR(rt1.c0)))AND(rt1.c3)) THEN rt1.c2 ELSE ((((rt1.c0)OR(rt1.c1)))OR(rt1.c0)) END ASC  NULLS LAST, ((NULL)<(rt1.c4)) COLLATE NOCASE ASC, CAST((rt1.c3 IN (rt1.c4)) AS BLOB) DESC;
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON x'015b' INNER JOIN rt1 ON (((+ (x''))) IS TRUE) WHERE (((rt1.c1) IS TRUE)) ORDER BY CAST(CAST(rt1.c3 AS BLOB) AS BLOB) DESC  NULLS FIRST, ((NULL) ISNULL) ASC, '1890114422'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1) IS TRUE)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON x'015b' INNER JOIN rt1 ON (((+ (x''))) IS TRUE) ORDER BY CAST(CAST(rt1.c3 AS BLOB) AS BLOB) DESC  NULLS FIRST, ((NULL) ISNULL) ASC, '1890114422'  NULLS LAST);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON x'015b' INNER JOIN rt1 ON (((+ (x''))) IS TRUE) WHERE (((rt1.c1) IS TRUE)) ORDER BY CAST(CAST(rt1.c3 AS BLOB) AS BLOB) DESC  NULLS FIRST, ((NULL) ISNULL) ASC, '1890114422'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1) IS TRUE)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON x'015b' INNER JOIN rt1 ON (((+ (x''))) IS TRUE) ORDER BY CAST(CAST(rt1.c3 AS BLOB) AS BLOB) DESC  NULLS FIRST, ((NULL) ISNULL) ASC, '1890114422'  NULLS LAST);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON x'015b' INNER JOIN rt1 ON (((+ (x''))) IS TRUE) WHERE (((rt1.c1) IS TRUE)) ORDER BY CAST(CAST(rt1.c3 AS BLOB) AS BLOB) DESC  NULLS FIRST, ((NULL) ISNULL) ASC, '1890114422'  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (JULIANDAY(((vt0.c0)|(vt0.c0)), ((vt1.c0)>(vt0.c0)), CAST(vt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY(((vt0.c0)|(vt0.c0)), ((vt1.c0)>(vt0.c0)), CAST(vt0.c0 AS TEXT))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (JULIANDAY(((vt0.c0)|(vt0.c0)), ((vt1.c0)>(vt0.c0)), CAST(vt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY(((vt0.c0)|(vt0.c0)), ((vt1.c0)>(vt0.c0)), CAST(vt0.c0 AS TEXT))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (JULIANDAY(((vt0.c0)|(vt0.c0)), ((vt1.c0)>(vt0.c0)), CAST(vt0.c0 AS TEXT)));
SELECT COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON (+ (((((((((rt1.c3)AND(rt1.c2)))AND(vt1.c0)))AND(rt1.c0)))OR(rt1.c1)))) CROSS JOIN rt1 ON (((((rt1.c2))!=((rt1.c4))))>>(((((rt0.c0)OR(rt1.c1)))OR(rt0.c2)))) WHERE (((((0.28176137447797867) BETWEEN (rt1.c2) AND (vt1.c0)))<=(((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.28176137447797867) BETWEEN (rt1.c2) AND (vt1.c0)))<=(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON (+ (((((((((rt1.c3)AND(rt1.c2)))AND(vt1.c0)))AND(rt1.c0)))OR(rt1.c1)))) CROSS JOIN rt1 ON (((((rt1.c2))!=((rt1.c4))))>>(((((rt0.c0)OR(rt1.c1)))OR(rt0.c2)))));
SELECT COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON (+ (((((((((rt1.c3)AND(rt1.c2)))AND(vt1.c0)))AND(rt1.c0)))OR(rt1.c1)))) CROSS JOIN rt1 ON (((((rt1.c2))!=((rt1.c4))))>>(((((rt0.c0)OR(rt1.c1)))OR(rt0.c2)))) WHERE (((((0.28176137447797867) BETWEEN (rt1.c2) AND (vt1.c0)))<=(((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.28176137447797867) BETWEEN (rt1.c2) AND (vt1.c0)))<=(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON (+ (((((((((rt1.c3)AND(rt1.c2)))AND(vt1.c0)))AND(rt1.c0)))OR(rt1.c1)))) CROSS JOIN rt1 ON (((((rt1.c2))!=((rt1.c4))))>>(((((rt0.c0)OR(rt1.c1)))OR(rt0.c2)))));
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((x'8a49')OR(((vt1.c0) NOT BETWEEN (x'bfcd') AND (rt0.c1)))))AND(CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'8a49')OR(((vt1.c0) NOT BETWEEN (x'bfcd') AND (rt0.c1)))))AND(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((x'8a49')OR(((vt1.c0) NOT BETWEEN (x'bfcd') AND (rt0.c1)))))AND(CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'8a49')OR(((vt1.c0) NOT BETWEEN (x'bfcd') AND (rt0.c1)))))AND(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((x'8a49')OR(((vt1.c0) NOT BETWEEN (x'bfcd') AND (rt0.c1)))))AND(CAST(rt0.c1 AS TEXT))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (CAST(rt0.c0 AS BLOB) IN ()) WHERE (CAST(rt0.c1 COLLATE RTRIM AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (CAST(rt0.c0 AS BLOB) IN ()));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (CAST(rt0.c0 AS BLOB) IN ()) WHERE (CAST(rt0.c1 COLLATE RTRIM AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (CAST(rt0.c0 AS BLOB) IN ()));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (CAST(rt0.c0 AS BLOB) IN ()) WHERE (CAST(rt0.c1 COLLATE RTRIM AS TEXT));
SELECT ALL * FROM rt1, vt0, rt0, vt1 WHERE ((rt1.c3 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT (((rt1.c3 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt1, vt0, rt0, vt1);
SELECT ALL * FROM rt1, vt0, rt0, vt1 WHERE ((rt1.c3 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT (((rt1.c3 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt1, vt0, rt0, vt1);
SELECT ALL * FROM rt1, vt0, rt0, vt1 WHERE ((rt1.c3 COLLATE RTRIM IN ()));
SELECT * FROM vt0, vt1, rt1, rt0 WHERE (((((((rt1.c4)AND(rt1.c1)))AND('598146009')))<(((rt1.c2)<=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c4)AND(rt1.c1)))AND('598146009')))<(((rt1.c2)<=(rt0.c2))))) IS TRUE)  as count FROM vt0, vt1, rt1, rt0);
SELECT * FROM vt0, vt1, rt1, rt0 WHERE (((((((rt1.c4)AND(rt1.c1)))AND('598146009')))<(((rt1.c2)<=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c4)AND(rt1.c1)))AND('598146009')))<(((rt1.c2)<=(rt0.c2))))) IS TRUE)  as count FROM vt0, vt1, rt1, rt0);
SELECT * FROM vt0, vt1, rt1, rt0 WHERE (((((((rt1.c4)AND(rt1.c1)))AND('598146009')))<(((rt1.c2)<=(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt1, vt1, vt0 WHERE (((ABS(DISTINCT vt1.c0))>(UNLIKELY(DISTINCT rt1.c4))));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(DISTINCT vt1.c0))>(UNLIKELY(DISTINCT rt1.c4)))) IS TRUE)  as count FROM rt1, vt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt1, vt0 WHERE (((ABS(DISTINCT vt1.c0))>(UNLIKELY(DISTINCT rt1.c4))));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(DISTINCT vt1.c0))>(UNLIKELY(DISTINCT rt1.c4)))) IS TRUE)  as count FROM rt1, vt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt1, vt0 WHERE (((ABS(DISTINCT vt1.c0))>(UNLIKELY(DISTINCT rt1.c4))));
SELECT * FROM vt0, rt1, rt0, vt1 WHERE (CAST(vt0.c0 AS BLOB) COLLATE NOCASE) ORDER BY (((rt1.c1, 0.3728974885084221, rt1.c4)) BETWEEN ((LTRIM(rt1.c4, rt0.c2), ((vt1.c0) ISNULL), rt1.c3)) AND ((CASE WHEN NULL THEN rt1.c1 END, rt1.c2, rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt1, rt0, vt1 ORDER BY (((rt1.c1, 0.3728974885084221, rt1.c4)) BETWEEN ((LTRIM(rt1.c4, rt0.c2), ((vt1.c0) ISNULL), rt1.c3)) AND ((CASE WHEN NULL THEN rt1.c1 END, rt1.c2, rt0.c2 COLLATE RTRIM))));
SELECT * FROM vt0, rt1, rt0, vt1 WHERE (CAST(vt0.c0 AS BLOB) COLLATE NOCASE) ORDER BY (((rt1.c1, 0.3728974885084221, rt1.c4)) BETWEEN ((LTRIM(rt1.c4, rt0.c2), ((vt1.c0) ISNULL), rt1.c3)) AND ((CASE WHEN NULL THEN rt1.c1 END, rt1.c2, rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt1, rt0, vt1 ORDER BY (((rt1.c1, 0.3728974885084221, rt1.c4)) BETWEEN ((LTRIM(rt1.c4, rt0.c2), ((vt1.c0) ISNULL), rt1.c3)) AND ((CASE WHEN NULL THEN rt1.c1 END, rt1.c2, rt0.c2 COLLATE RTRIM))));
SELECT * FROM vt0, rt1, rt0, vt1 WHERE (CAST(vt0.c0 AS BLOB) COLLATE NOCASE) ORDER BY (((rt1.c1, 0.3728974885084221, rt1.c4)) BETWEEN ((LTRIM(rt1.c4, rt0.c2), ((vt1.c0) ISNULL), rt1.c3)) AND ((CASE WHEN NULL THEN rt1.c1 END, rt1.c2, rt0.c2 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0)<(rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0)<(rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0)<(rt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, vt1 CROSS JOIN vt0 ON ABS(DISTINCT json_array_length(vt1.c0, rt0.c0)) WHERE (((CAST(rt0.c0 AS BLOB)) BETWEEN (rt0.c0 COLLATE BINARY) AND (LIKELIHOOD(vt1.c0, 0.9729915860791937)))) ORDER BY (((rt0.c2)>(rt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS BLOB)) BETWEEN (rt0.c0 COLLATE BINARY) AND (LIKELIHOOD(vt1.c0, 0.9729915860791937)))) IS TRUE)  as count FROM rt0, vt1 CROSS JOIN vt0 ON ABS(DISTINCT json_array_length(vt1.c0, rt0.c0)) ORDER BY (((rt0.c2)>(rt0.c0)) IN ()) ASC);
SELECT ALL COUNT(*) FROM rt0, vt1 CROSS JOIN vt0 ON ABS(DISTINCT json_array_length(vt1.c0, rt0.c0)) WHERE (((CAST(rt0.c0 AS BLOB)) BETWEEN (rt0.c0 COLLATE BINARY) AND (LIKELIHOOD(vt1.c0, 0.9729915860791937)))) ORDER BY (((rt0.c2)>(rt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS BLOB)) BETWEEN (rt0.c0 COLLATE BINARY) AND (LIKELIHOOD(vt1.c0, 0.9729915860791937)))) IS TRUE)  as count FROM rt0, vt1 CROSS JOIN vt0 ON ABS(DISTINCT json_array_length(vt1.c0, rt0.c0)) ORDER BY (((rt0.c2)>(rt0.c0)) IN ()) ASC);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (-611563832);
SELECT SUM(count) FROM (SELECT ALL ((-611563832) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (-611563832);
SELECT SUM(count) FROM (SELECT ALL ((-611563832) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (-611563832);
SELECT COUNT(*) FROM rt1, vt0 RIGHT OUTER JOIN vt1 ON ((UNLIKELY(DISTINCT '859208157'))|((vt0.c0 IN ()))) WHERE (((vt1.c0) NOT NULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0 RIGHT OUTER JOIN vt1 ON ((UNLIKELY(DISTINCT '859208157'))|((vt0.c0 IN ()))));
SELECT COUNT(*) FROM rt1, vt0 RIGHT OUTER JOIN vt1 ON ((UNLIKELY(DISTINCT '859208157'))|((vt0.c0 IN ()))) WHERE (((vt1.c0) NOT NULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0 RIGHT OUTER JOIN vt1 ON ((UNLIKELY(DISTINCT '859208157'))|((vt0.c0 IN ()))));
SELECT COUNT(*) FROM rt1, vt0 RIGHT OUTER JOIN vt1 ON ((UNLIKELY(DISTINCT '859208157'))|((vt0.c0 IN ()))) WHERE (((vt1.c0) NOT NULL) COLLATE RTRIM);
SELECT ALL * FROM vt0, vt1, rt1, rt0 WHERE (x'') ORDER BY CAST((rt0.c0 IN (rt0.c0)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, vt1, rt1, rt0 ORDER BY CAST((rt0.c0 IN (rt0.c0)) AS BLOB) DESC);
SELECT ALL * FROM vt0, vt1, rt1, rt0 WHERE (x'') ORDER BY CAST((rt0.c0 IN (rt0.c0)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, vt1, rt1, rt0 ORDER BY CAST((rt0.c0 IN (rt0.c0)) AS BLOB) DESC);
SELECT ALL * FROM vt0, vt1, rt1, rt0 WHERE (x'') ORDER BY CAST((rt0.c0 IN (rt0.c0)) AS BLOB) DESC;
SELECT ALL * FROM vt0 WHERE (((((((((NULL)OR(TYPEOF(vt0.c0))))OR((((vt0.c0))!=((vt0.c0))))))OR((vt0.c0 IN (vt0.c0)))))OR(((vt0.c0)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULL)OR(TYPEOF(vt0.c0))))OR((((vt0.c0))!=((vt0.c0))))))OR((vt0.c0 IN (vt0.c0)))))OR(((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((NULL)OR(TYPEOF(vt0.c0))))OR((((vt0.c0))!=((vt0.c0))))))OR((vt0.c0 IN (vt0.c0)))))OR(((vt0.c0)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULL)OR(TYPEOF(vt0.c0))))OR((((vt0.c0))!=((vt0.c0))))))OR((vt0.c0 IN (vt0.c0)))))OR(((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((NULL)OR(TYPEOF(vt0.c0))))OR((((vt0.c0))!=((vt0.c0))))))OR((vt0.c0 IN (vt0.c0)))))OR(((vt0.c0)LIKE(vt0.c0)))));
SELECT * FROM vt0, rt0, rt1 WHERE (x'') ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY rt0.c1  NULLS FIRST);
SELECT * FROM vt0, rt0, rt1 WHERE (x'') ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY rt0.c1  NULLS FIRST);
SELECT * FROM vt0, rt0, rt1 WHERE (x'') ORDER BY rt0.c1  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (vt1.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0 COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c1, rt0.c1, vt0.c0)) NOT BETWEEN (((+ (rt0.c1)), rt0.c0, 0.8538782603609472)) AND ((rt0.c0 COLLATE NOCASE, rt0.c1, NULL))) WHERE (((vt0.c0)IS NOT(rt0.c0)) COLLATE BINARY) ORDER BY ((((rt0.c0) IS TRUE)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)IS NOT(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c1, rt0.c1, vt0.c0)) NOT BETWEEN (((+ (rt0.c1)), rt0.c0, 0.8538782603609472)) AND ((rt0.c0 COLLATE NOCASE, rt0.c1, NULL))) ORDER BY ((((rt0.c0) IS TRUE)) NOTNULL) DESC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c1, rt0.c1, vt0.c0)) NOT BETWEEN (((+ (rt0.c1)), rt0.c0, 0.8538782603609472)) AND ((rt0.c0 COLLATE NOCASE, rt0.c1, NULL))) WHERE (((vt0.c0)IS NOT(rt0.c0)) COLLATE BINARY) ORDER BY ((((rt0.c0) IS TRUE)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)IS NOT(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c1, rt0.c1, vt0.c0)) NOT BETWEEN (((+ (rt0.c1)), rt0.c0, 0.8538782603609472)) AND ((rt0.c0 COLLATE NOCASE, rt0.c1, NULL))) ORDER BY ((((rt0.c0) IS TRUE)) NOTNULL) DESC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c1, rt0.c1, vt0.c0)) NOT BETWEEN (((+ (rt0.c1)), rt0.c0, 0.8538782603609472)) AND ((rt0.c0 COLLATE NOCASE, rt0.c1, NULL))) WHERE (((vt0.c0)IS NOT(rt0.c0)) COLLATE BINARY) ORDER BY ((((rt0.c0) IS TRUE)) NOTNULL) DESC;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ()));
SELECT ALL * FROM rt1, vt1, vt0 WHERE (((json_patch(rt1.c2, x'ffa8')) NOT NULL)) ORDER BY (((((rt1.c2))==((rt1.c1)))) NOT BETWEEN (((((rt1.c4)AND('')))OR(rt1.c4))) AND ((rt1.c1 IN ()))) DESC  NULLS FIRST, COALESCE(vt1.c0, NULL), rt1.c4  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((json_patch(rt1.c2, x'ffa8')) NOT NULL)) IS TRUE)  as count FROM rt1, vt1, vt0 ORDER BY (((((rt1.c2))==((rt1.c1)))) NOT BETWEEN (((((rt1.c4)AND('')))OR(rt1.c4))) AND ((rt1.c1 IN ()))) DESC  NULLS FIRST, COALESCE(vt1.c0, NULL), rt1.c4  NULLS LAST);
SELECT ALL * FROM rt1, vt1, vt0 WHERE (((json_patch(rt1.c2, x'ffa8')) NOT NULL)) ORDER BY (((((rt1.c2))==((rt1.c1)))) NOT BETWEEN (((((rt1.c4)AND('')))OR(rt1.c4))) AND ((rt1.c1 IN ()))) DESC  NULLS FIRST, COALESCE(vt1.c0, NULL), rt1.c4  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((json_patch(rt1.c2, x'ffa8')) NOT NULL)) IS TRUE)  as count FROM rt1, vt1, vt0 ORDER BY (((((rt1.c2))==((rt1.c1)))) NOT BETWEEN (((((rt1.c4)AND('')))OR(rt1.c4))) AND ((rt1.c1 IN ()))) DESC  NULLS FIRST, COALESCE(vt1.c0, NULL), rt1.c4  NULLS LAST);
SELECT ALL * FROM rt1, vt1, vt0 WHERE (((json_patch(rt1.c2, x'ffa8')) NOT NULL)) ORDER BY (((((rt1.c2))==((rt1.c1)))) NOT BETWEEN (((((rt1.c4)AND('')))OR(rt1.c4))) AND ((rt1.c1 IN ()))) DESC  NULLS FIRST, COALESCE(vt1.c0, NULL), rt1.c4  NULLS LAST;
SELECT COUNT(*) FROM rt1, rt0 WHERE (NULLIF(DISTINCT '', rt0.c2) COLLATE BINARY) ORDER BY ((((0Xffffffff85535ff2)OR(((((((((rt1.c1)AND(rt1.c1)))OR(rt1.c3)))AND(rt0.c2)))AND(rt1.c4)))))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt1.c0 END));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT '', rt0.c2) COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((0xffffffff85535ff2)OR(((((((((rt1.c1)AND(rt1.c1)))OR(rt1.c3)))AND(rt0.c2)))AND(rt1.c4)))))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt1.c0 END)));
SELECT COUNT(*) FROM rt1, rt0 WHERE (NULLIF(DISTINCT '', rt0.c2) COLLATE BINARY) ORDER BY ((((0Xffffffff85535ff2)OR(((((((((rt1.c1)AND(rt1.c1)))OR(rt1.c3)))AND(rt0.c2)))AND(rt1.c4)))))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt1.c0 END));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT '', rt0.c2) COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((0xffffffff85535ff2)OR(((((((((rt1.c1)AND(rt1.c1)))OR(rt1.c3)))AND(rt0.c2)))AND(rt1.c4)))))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt1.c0 END)));
SELECT COUNT(*) FROM rt1, rt0 WHERE (NULLIF(DISTINCT '', rt0.c2) COLLATE BINARY) ORDER BY ((((0Xffffffff85535ff2)OR(((((((((rt1.c1)AND(rt1.c1)))OR(rt1.c3)))AND(rt0.c2)))AND(rt1.c4)))))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt1.c0 END));
SELECT ALL COUNT(*) FROM rt0 WHERE (x'fdba') ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL ((x'fdba') IS TRUE)  as count FROM rt0 ORDER BY rt0.c2);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'fdba') ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL ((x'fdba') IS TRUE)  as count FROM rt0 ORDER BY rt0.c2);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'fdba') ORDER BY rt0.c2;
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE (CASE WHEN (rt1.c4 IN ()) THEN x'' END) ORDER BY (('1411130210') NOT BETWEEN ((((rt0.c2))>=((rt1.c4)))) AND (NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt1.c4 IN ()) THEN x'' END) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY (('1411130210') NOT BETWEEN ((((rt0.c2))>=((rt1.c4)))) AND (NULL))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE (CASE WHEN (rt1.c4 IN ()) THEN x'' END) ORDER BY (('1411130210') NOT BETWEEN ((((rt0.c2))>=((rt1.c4)))) AND (NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt1.c4 IN ()) THEN x'' END) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY (('1411130210') NOT BETWEEN ((((rt0.c2))>=((rt1.c4)))) AND (NULL))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE (CASE WHEN (rt1.c4 IN ()) THEN x'' END) ORDER BY (('1411130210') NOT BETWEEN ((((rt0.c2))>=((rt1.c4)))) AND (NULL))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE (((((NULL)IS(NULL))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((NULL)IS(NULL))) NOTNULL)) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE (((((NULL)IS(NULL))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((NULL)IS(NULL))) NOTNULL)) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE (((((NULL)IS(NULL))) NOTNULL));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (((rt0.c2)) BETWEEN ((CAST(rt1.c0 AS BLOB))) AND ((((((rt1.c1)OR(rt0.c0)))OR(rt0.c0))))) FULL OUTER JOIN rt1 ON (((rt1.c0))>((CASE rt0.c1  WHEN rt1.c1 THEN 0.4250827665993806 END))) RIGHT OUTER JOIN vt1 ON (((vt1.c0 COLLATE RTRIM, rt1.c4 COLLATE RTRIM, (- (rt0.c0))))<=((rt1.c3 COLLATE RTRIM, rt0.c2, ((vt0.c0) NOT NULL)))) WHERE ((x'' IN ())) ORDER BY (NOT ((('1411130210') BETWEEN (rt1.c1) AND (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((rt0.c2)) BETWEEN ((CAST(rt1.c0 AS BLOB))) AND ((((((rt1.c1)OR(rt0.c0)))OR(rt0.c0))))) FULL OUTER JOIN rt1 ON (((rt1.c0))>((CASE rt0.c1  WHEN rt1.c1 THEN 0.4250827665993806 END))) RIGHT OUTER JOIN vt1 ON (((vt1.c0 COLLATE RTRIM, rt1.c4 COLLATE RTRIM, (- (rt0.c0))))<=((rt1.c3 COLLATE RTRIM, rt0.c2, ((vt0.c0) NOT NULL)))) ORDER BY (NOT ((('1411130210') BETWEEN (rt1.c1) AND (rt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (((rt0.c2)) BETWEEN ((CAST(rt1.c0 AS BLOB))) AND ((((((rt1.c1)OR(rt0.c0)))OR(rt0.c0))))) FULL OUTER JOIN rt1 ON (((rt1.c0))>((CASE rt0.c1  WHEN rt1.c1 THEN 0.4250827665993806 END))) RIGHT OUTER JOIN vt1 ON (((vt1.c0 COLLATE RTRIM, rt1.c4 COLLATE RTRIM, (- (rt0.c0))))<=((rt1.c3 COLLATE RTRIM, rt0.c2, ((vt0.c0) NOT NULL)))) WHERE ((x'' IN ())) ORDER BY (NOT ((('1411130210') BETWEEN (rt1.c1) AND (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((rt0.c2)) BETWEEN ((CAST(rt1.c0 AS BLOB))) AND ((((((rt1.c1)OR(rt0.c0)))OR(rt0.c0))))) FULL OUTER JOIN rt1 ON (((rt1.c0))>((CASE rt0.c1  WHEN rt1.c1 THEN 0.4250827665993806 END))) RIGHT OUTER JOIN vt1 ON (((vt1.c0 COLLATE RTRIM, rt1.c4 COLLATE RTRIM, (- (rt0.c0))))<=((rt1.c3 COLLATE RTRIM, rt0.c2, ((vt0.c0) NOT NULL)))) ORDER BY (NOT ((('1411130210') BETWEEN (rt1.c1) AND (rt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE ((((0.5264912727744306, CAST(rt1.c4 AS REAL), 1029419421))<(((('-1105083425')>=(rt0.c2)), ((((vt1.c0)AND(rt0.c2)))OR(rt1.c4)), (rt0.c0 IN ()))))) ORDER BY ((CAST(NULL AS NUMERIC))<<(rt1.c4 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL (((((0.5264912727744306, CAST(rt1.c4 AS REAL), 1029419421))<(((('-1105083425')>=(rt0.c2)), ((((vt1.c0)AND(rt0.c2)))OR(rt1.c4)), (rt0.c0 IN ()))))) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY ((CAST(NULL AS NUMERIC))<<(rt1.c4 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE ((((0.5264912727744306, CAST(rt1.c4 AS REAL), 1029419421))<(((('-1105083425')>=(rt0.c2)), ((((vt1.c0)AND(rt0.c2)))OR(rt1.c4)), (rt0.c0 IN ()))))) ORDER BY ((CAST(NULL AS NUMERIC))<<(rt1.c4 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL (((((0.5264912727744306, CAST(rt1.c4 AS REAL), 1029419421))<(((('-1105083425')>=(rt0.c2)), ((((vt1.c0)AND(rt0.c2)))OR(rt1.c4)), (rt0.c0 IN ()))))) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY ((CAST(NULL AS NUMERIC))<<(rt1.c4 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE ((((0.5264912727744306, CAST(rt1.c4 AS REAL), 1029419421))<(((('-1105083425')>=(rt0.c2)), ((((vt1.c0)AND(rt0.c2)))OR(rt1.c4)), (rt0.c0 IN ()))))) ORDER BY ((CAST(NULL AS NUMERIC))<<(rt1.c4 COLLATE RTRIM));
SELECT * FROM rt1, rt0, vt0, vt1 WHERE ((- ((((rt1.c4, rt0.c1, rt1.c0)) BETWEEN ((rt1.c2, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c2, vt0.c0)))))) ORDER BY ((((CASE WHEN rt1.c1 THEN rt1.c4 ELSE 0.9691352256741396 END)AND((((('J Lk~秝c~')AND(rt1.c1)))AND(vt0.c0)))))AND(((rt0.c2) BETWEEN (rt1.c0) AND (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT (((- ((((rt1.c4, rt0.c1, rt1.c0)) BETWEEN ((rt1.c2, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c2, vt0.c0)))))) IS TRUE)  as count FROM rt1 NOT INDEXED, rt0, vt0, vt1 ORDER BY ((((CASE WHEN rt1.c1 THEN rt1.c4 ELSE 0.9691352256741396 END)AND((((('J Lk~秝c~')AND(rt1.c1)))AND(vt0.c0)))))AND(((rt0.c2) BETWEEN (rt1.c0) AND (rt0.c2)))) DESC);
SELECT * FROM rt1, rt0, vt0, vt1 WHERE ((- ((((rt1.c4, rt0.c1, rt1.c0)) BETWEEN ((rt1.c2, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c2, vt0.c0)))))) ORDER BY ((((CASE WHEN rt1.c1 THEN rt1.c4 ELSE 0.9691352256741396 END)AND((((('J Lk~秝c~')AND(rt1.c1)))AND(vt0.c0)))))AND(((rt0.c2) BETWEEN (rt1.c0) AND (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT (((- ((((rt1.c4, rt0.c1, rt1.c0)) BETWEEN ((rt1.c2, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c2, vt0.c0)))))) IS TRUE)  as count FROM rt1 NOT INDEXED, rt0, vt0, vt1 ORDER BY ((((CASE WHEN rt1.c1 THEN rt1.c4 ELSE 0.9691352256741396 END)AND((((('J Lk~秝c~')AND(rt1.c1)))AND(vt0.c0)))))AND(((rt0.c2) BETWEEN (rt1.c0) AND (rt0.c2)))) DESC);
SELECT * FROM rt1, rt0, vt0, vt1 WHERE ((- ((((rt1.c4, rt0.c1, rt1.c0)) BETWEEN ((rt1.c2, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c2, vt0.c0)))))) ORDER BY ((((CASE WHEN rt1.c1 THEN rt1.c4 ELSE 0.9691352256741396 END)AND((((('J Lk~秝c~')AND(rt1.c1)))AND(vt0.c0)))))AND(((rt0.c2) BETWEEN (rt1.c0) AND (rt0.c2)))) DESC;
SELECT ALL * FROM rt1 WHERE (rt1.c0) ORDER BY '忲gE(BFt' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY '忲gE(BFt' ASC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (rt1.c0) ORDER BY '忲gE(BFt' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY '忲gE(BFt' ASC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (rt1.c0) ORDER BY '忲gE(BFt' ASC  NULLS FIRST;
SELECT * FROM vt0, rt1, vt1 WHERE (((((rt1.c2)>(rt1.c4)))>=(((0.8298926841624232)>(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)>(rt1.c4)))>=(((0.8298926841624232)>(rt1.c0))))) IS TRUE)  as count FROM vt0, rt1, vt1);
SELECT * FROM vt0, rt1, vt1 WHERE (((((rt1.c2)>(rt1.c4)))>=(((0.8298926841624232)>(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)>(rt1.c4)))>=(((0.8298926841624232)>(rt1.c0))))) IS TRUE)  as count FROM vt0, rt1, vt1);
SELECT * FROM vt0, rt1, vt1 WHERE (((((rt1.c2)>(rt1.c4)))>=(((0.8298926841624232)>(rt1.c0)))));
SELECT * FROM rt1, vt0 WHERE (CASE (('wi') BETWEEN (rt1.c2) AND (rt1.c3))  WHEN ((((rt1.c1)AND(rt1.c1)))AND(rt1.c1)) THEN ((rt1.c2) NOT NULL) END) ORDER BY (((((((rt1.c2))<=((rt1.c2))))AND(((rt1.c0) NOTNULL))))AND(QUOTE(x'')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (('wi') BETWEEN (rt1.c2) AND (rt1.c3))  WHEN ((((rt1.c1)AND(rt1.c1)))AND(rt1.c1)) THEN ((rt1.c2) NOT NULL) END) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((((((rt1.c2))<=((rt1.c2))))AND(((rt1.c0) NOTNULL))))AND(QUOTE(x'')))  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (CASE (('wi') BETWEEN (rt1.c2) AND (rt1.c3))  WHEN ((((rt1.c1)AND(rt1.c1)))AND(rt1.c1)) THEN ((rt1.c2) NOT NULL) END) ORDER BY (((((((rt1.c2))<=((rt1.c2))))AND(((rt1.c0) NOTNULL))))AND(QUOTE(x'')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (('wi') BETWEEN (rt1.c2) AND (rt1.c3))  WHEN ((((rt1.c1)AND(rt1.c1)))AND(rt1.c1)) THEN ((rt1.c2) NOT NULL) END) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((((((rt1.c2))<=((rt1.c2))))AND(((rt1.c0) NOTNULL))))AND(QUOTE(x'')))  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (CASE (('wi') BETWEEN (rt1.c2) AND (rt1.c3))  WHEN ((((rt1.c1)AND(rt1.c1)))AND(rt1.c1)) THEN ((rt1.c2) NOT NULL) END) ORDER BY (((((((rt1.c2))<=((rt1.c2))))AND(((rt1.c0) NOTNULL))))AND(QUOTE(x'')))  NULLS LAST;
SELECT * FROM vt1 WHERE ((NOT (x'')));
SELECT SUM(count) FROM (SELECT (((NOT (x''))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((NOT (x'')));
SELECT SUM(count) FROM (SELECT (((NOT (x''))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((NOT (x'')));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON LIKELIHOOD(((rt1.c4) NOTNULL), 0.3387840773122238) LEFT OUTER JOIN rt1 ON (+ (-1.795111047E9)) RIGHT OUTER JOIN vt1 ON rt0.c0 WHERE (((((((x'')OR(rt1.c2)))AND(rt1.c3)))<<((- (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((x'')OR(rt1.c2)))AND(rt1.c3)))<<((- (rt1.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON LIKELIHOOD(((rt1.c4) NOTNULL), 0.3387840773122238) LEFT OUTER JOIN rt1 ON (+ (-1.795111047E9)) RIGHT OUTER JOIN vt1 ON rt0.c0);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON LIKELIHOOD(((rt1.c4) NOTNULL), 0.3387840773122238) LEFT OUTER JOIN rt1 ON (+ (-1.795111047E9)) RIGHT OUTER JOIN vt1 ON rt0.c0 WHERE (((((((x'')OR(rt1.c2)))AND(rt1.c3)))<<((- (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((x'')OR(rt1.c2)))AND(rt1.c3)))<<((- (rt1.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON LIKELIHOOD(((rt1.c4) NOTNULL), 0.3387840773122238) LEFT OUTER JOIN rt1 ON (+ (-1.795111047E9)) RIGHT OUTER JOIN vt1 ON rt0.c0);
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON (((rt1.c3) NOT NULL) IN ()) CROSS JOIN rt0 ON json_object(rt1.c0 COLLATE NOCASE, '嫚旑Ac醩M~硏') RIGHT OUTER JOIN rt1 ON ((((('h-綔l\rj[ 9', rt1.c0, rt1.c3))>=((vt0.c0, NULL, rt0.c0)))) NOTNULL) WHERE (((((rt0.c1)IS(''))) ISNULL)) ORDER BY rt1.c4 COLLATE BINARY  NULLS LAST, CASE WHEN ((rt0.c1) BETWEEN (rt1.c4) AND (vt1.c0)) THEN (+ (rt1.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)IS(''))) ISNULL)) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (((rt1.c3) NOT NULL) IN ()) CROSS JOIN rt0 ON json_object(rt1.c0 COLLATE NOCASE, '嫚旑Ac醩M~硏') RIGHT OUTER JOIN rt1 ON ((((('h-綔l\rj[ 9', rt1.c0, rt1.c3))>=((vt0.c0, NULL, rt0.c0)))) NOTNULL) ORDER BY rt1.c4 COLLATE BINARY  NULLS LAST, CASE WHEN ((rt0.c1) BETWEEN (rt1.c4) AND (vt1.c0)) THEN (+ (rt1.c1)) END  NULLS LAST);
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON (((rt1.c3) NOT NULL) IN ()) CROSS JOIN rt0 ON json_object(rt1.c0 COLLATE NOCASE, '嫚旑Ac醩M~硏') RIGHT OUTER JOIN rt1 ON ((((('h-綔l\rj[ 9', rt1.c0, rt1.c3))>=((vt0.c0, NULL, rt0.c0)))) NOTNULL) WHERE (((((rt0.c1)IS(''))) ISNULL)) ORDER BY rt1.c4 COLLATE BINARY  NULLS LAST, CASE WHEN ((rt0.c1) BETWEEN (rt1.c4) AND (vt1.c0)) THEN (+ (rt1.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)IS(''))) ISNULL)) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (((rt1.c3) NOT NULL) IN ()) CROSS JOIN rt0 ON json_object(rt1.c0 COLLATE NOCASE, '嫚旑Ac醩M~硏') RIGHT OUTER JOIN rt1 ON ((((('h-綔l\rj[ 9', rt1.c0, rt1.c3))>=((vt0.c0, NULL, rt0.c0)))) NOTNULL) ORDER BY rt1.c4 COLLATE BINARY  NULLS LAST, CASE WHEN ((rt0.c1) BETWEEN (rt1.c4) AND (vt1.c0)) THEN (+ (rt1.c1)) END  NULLS LAST);
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON (((rt1.c3) NOT NULL) IN ()) CROSS JOIN rt0 ON json_object(rt1.c0 COLLATE NOCASE, '嫚旑Ac醩M~硏') RIGHT OUTER JOIN rt1 ON ((((('h-綔l\rj[ 9', rt1.c0, rt1.c3))>=((vt0.c0, NULL, rt0.c0)))) NOTNULL) WHERE (((((rt0.c1)IS(''))) ISNULL)) ORDER BY rt1.c4 COLLATE BINARY  NULLS LAST, CASE WHEN ((rt0.c1) BETWEEN (rt1.c4) AND (vt1.c0)) THEN (+ (rt1.c1)) END  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE ('Al#3') ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0))) BETWEEN (((rt0.c1)==(NULL))) AND (CAST(vt0.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('Al#3') IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0))) BETWEEN (((rt0.c1)==(NULL))) AND (CAST(vt0.c0 AS TEXT)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ('Al#3') ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0))) BETWEEN (((rt0.c1)==(NULL))) AND (CAST(vt0.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('Al#3') IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0))) BETWEEN (((rt0.c1)==(NULL))) AND (CAST(vt0.c0 AS TEXT)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ('Al#3') ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0))) BETWEEN (((rt0.c1)==(NULL))) AND (CAST(vt0.c0 AS TEXT)))  NULLS FIRST;
SELECT ALL * FROM rt1 INNER JOIN rt0 ON ((vt1.c0) BETWEEN (vt0.c0) AND (rt0.c1)) COLLATE RTRIM LEFT OUTER JOIN vt1 ON (((+ (rt0.c1))) ISNULL) LEFT OUTER JOIN vt0 ON CASE WHEN (((rt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((vt1.c0))) THEN ((vt1.c0)>=(rt1.c0)) ELSE ((rt1.c3)IS(x'')) END WHERE (((CASE WHEN rt0.c2 THEN rt1.c3 END)>>((rt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt1.c3 END)>>((rt1.c0 IN ())))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON ((vt1.c0) BETWEEN (vt0.c0) AND (rt0.c1)) COLLATE RTRIM LEFT OUTER JOIN vt1 ON (((+ (rt0.c1))) ISNULL) LEFT OUTER JOIN vt0 ON CASE WHEN (((rt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((vt1.c0))) THEN ((vt1.c0)>=(rt1.c0)) ELSE ((rt1.c3)IS(x'')) END);
SELECT ALL * FROM rt1 INNER JOIN rt0 ON ((vt1.c0) BETWEEN (vt0.c0) AND (rt0.c1)) COLLATE RTRIM LEFT OUTER JOIN vt1 ON (((+ (rt0.c1))) ISNULL) LEFT OUTER JOIN vt0 ON CASE WHEN (((rt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((vt1.c0))) THEN ((vt1.c0)>=(rt1.c0)) ELSE ((rt1.c3)IS(x'')) END WHERE (((CASE WHEN rt0.c2 THEN rt1.c3 END)>>((rt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt1.c3 END)>>((rt1.c0 IN ())))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON ((vt1.c0) BETWEEN (vt0.c0) AND (rt0.c1)) COLLATE RTRIM LEFT OUTER JOIN vt1 ON (((+ (rt0.c1))) ISNULL) LEFT OUTER JOIN vt0 ON CASE WHEN (((rt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((vt1.c0))) THEN ((vt1.c0)>=(rt1.c0)) ELSE ((rt1.c3)IS(x'')) END);
SELECT ALL * FROM rt1 INNER JOIN rt0 ON ((vt1.c0) BETWEEN (vt0.c0) AND (rt0.c1)) COLLATE RTRIM LEFT OUTER JOIN vt1 ON (((+ (rt0.c1))) ISNULL) LEFT OUTER JOIN vt0 ON CASE WHEN (((rt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((vt1.c0))) THEN ((vt1.c0)>=(rt1.c0)) ELSE ((rt1.c3)IS(x'')) END WHERE (((CASE WHEN rt0.c2 THEN rt1.c3 END)>>((rt1.c0 IN ()))));
SELECT * FROM vt0 WHERE (x'') ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND ((vt0.c0 IN ()))) DESC  NULLS FIRST, ((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, x''))) IN (((NULL) NOT NULL), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND ((vt0.c0 IN ()))) DESC  NULLS FIRST, ((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, x''))) IN (((NULL) NOT NULL), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE (x'') ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND ((vt0.c0 IN ()))) DESC  NULLS FIRST, ((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, x''))) IN (((NULL) NOT NULL), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND ((vt0.c0 IN ()))) DESC  NULLS FIRST, ((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, x''))) IN (((NULL) NOT NULL), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE (x'') ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND ((vt0.c0 IN ()))) DESC  NULLS FIRST, ((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, x''))) IN (((NULL) NOT NULL), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON rt0.c2 CROSS JOIN rt1 ON INSTR(CAST(rt1.c3 AS NUMERIC), ((vt0.c0)IS(vt0.c0))) CROSS JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((CASE rt1.c0  WHEN rt1.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END)) AND ((((rt0.c2) ISNULL)))) WHERE ((((rt0.c0 IN (0Xffffffffa841dbe5, rt0.c2))) BETWEEN (((rt1.c1)>>(rt1.c0))) AND (((((rt1.c2)OR(rt1.c1)))OR(rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN (0Xffffffffa841dbe5, rt0.c2))) BETWEEN (((rt1.c1)>>(rt1.c0))) AND (((((rt1.c2)OR(rt1.c1)))OR(rt1.c1))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON rt0.c2 CROSS JOIN rt1 ON INSTR(CAST(rt1.c3 AS NUMERIC), ((vt0.c0)IS(vt0.c0))) CROSS JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((CASE rt1.c0  WHEN rt1.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END)) AND ((((rt0.c2) ISNULL)))));
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON rt0.c2 CROSS JOIN rt1 ON INSTR(CAST(rt1.c3 AS NUMERIC), ((vt0.c0)IS(vt0.c0))) CROSS JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((CASE rt1.c0  WHEN rt1.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END)) AND ((((rt0.c2) ISNULL)))) WHERE ((((rt0.c0 IN (0Xffffffffa841dbe5, rt0.c2))) BETWEEN (((rt1.c1)>>(rt1.c0))) AND (((((rt1.c2)OR(rt1.c1)))OR(rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN (0Xffffffffa841dbe5, rt0.c2))) BETWEEN (((rt1.c1)>>(rt1.c0))) AND (((((rt1.c2)OR(rt1.c1)))OR(rt1.c1))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON rt0.c2 CROSS JOIN rt1 ON INSTR(CAST(rt1.c3 AS NUMERIC), ((vt0.c0)IS(vt0.c0))) CROSS JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((CASE rt1.c0  WHEN rt1.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END)) AND ((((rt0.c2) ISNULL)))));
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON rt0.c2 CROSS JOIN rt1 ON INSTR(CAST(rt1.c3 AS NUMERIC), ((vt0.c0)IS(vt0.c0))) CROSS JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((CASE rt1.c0  WHEN rt1.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END)) AND ((((rt0.c2) ISNULL)))) WHERE ((((rt0.c0 IN (0Xffffffffa841dbe5, rt0.c2))) BETWEEN (((rt1.c1)>>(rt1.c0))) AND (((((rt1.c2)OR(rt1.c1)))OR(rt1.c1)))));
SELECT * FROM vt0, rt1, rt0, vt1 WHERE (((-0.0)-(((rt1.c0)/(rt1.c4))))) ORDER BY SQLITE_COMPILEOPTION_USED(((vt0.c0)-(rt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((-0.0)-(((rt1.c0)/(rt1.c4))))) IS TRUE)  as count FROM vt0, rt1, rt0, vt1 ORDER BY SQLITE_COMPILEOPTION_USED(((vt0.c0)-(rt0.c1)))  NULLS LAST);
SELECT * FROM vt0, rt1, rt0, vt1 WHERE (((-0.0)-(((rt1.c0)/(rt1.c4))))) ORDER BY SQLITE_COMPILEOPTION_USED(((vt0.c0)-(rt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((-0.0)-(((rt1.c0)/(rt1.c4))))) IS TRUE)  as count FROM vt0, rt1, rt0, vt1 ORDER BY SQLITE_COMPILEOPTION_USED(((vt0.c0)-(rt0.c1)))  NULLS LAST);
SELECT * FROM vt0, rt1, rt0, vt1 WHERE (((-0.0)-(((rt1.c0)/(rt1.c4))))) ORDER BY SQLITE_COMPILEOPTION_USED(((vt0.c0)-(rt0.c1)))  NULLS LAST;
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (((((rt0.c1) NOTNULL))!=((rt0.c1 IN (NULL)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOTNULL))<>((rt0.c1 IN (NULL))))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (((((rt0.c1) NOTNULL))!=((rt0.c1 IN (NULL)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOTNULL))<>((rt0.c1 IN (NULL))))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (((((rt0.c1) NOTNULL))!=((rt0.c1 IN (NULL)))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON (~ (rt0.c2 COLLATE BINARY)) WHERE ((rt0.c2 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON (~ (rt0.c2 COLLATE BINARY)));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON (~ (rt0.c2 COLLATE BINARY)) WHERE ((rt0.c2 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON (~ (rt0.c2 COLLATE BINARY)));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON (~ (rt0.c2 COLLATE BINARY)) WHERE ((rt0.c2 COLLATE BINARY IN ()));
SELECT ALL * FROM vt0, rt0, vt1 WHERE ((((rt0.c1)) BETWEEN ((CAST(vt0.c0 AS TEXT))) AND (((- (vt0.c0)))))) ORDER BY (((rt0.c2)LIKE(rt0.c1)) IN ())  NULLS FIRST, (('1667893563') IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((CAST(vt0.c0 AS TEXT))) AND (((- (vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (((rt0.c2)LIKE(rt0.c1)) IN ())  NULLS FIRST, (('1667893563') IS FALSE)  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE ((((rt0.c1)) BETWEEN ((CAST(vt0.c0 AS TEXT))) AND (((- (vt0.c0)))))) ORDER BY (((rt0.c2)LIKE(rt0.c1)) IN ())  NULLS FIRST, (('1667893563') IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((CAST(vt0.c0 AS TEXT))) AND (((- (vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (((rt0.c2)LIKE(rt0.c1)) IN ())  NULLS FIRST, (('1667893563') IS FALSE)  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE ((((rt0.c1)) BETWEEN ((CAST(vt0.c0 AS TEXT))) AND (((- (vt0.c0)))))) ORDER BY (((rt0.c2)LIKE(rt0.c1)) IN ())  NULLS FIRST, (('1667893563') IS FALSE)  NULLS FIRST;
SELECT * FROM vt0, rt0 WHERE (((((CASE WHEN rt0.c1 THEN vt0.c0 END)AND(CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN x'' ELSE rt0.c1 END)))AND(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN rt0.c1 THEN vt0.c0 END)AND(CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN x'' ELSE rt0.c1 END)))AND(rt0.c0))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((CASE WHEN rt0.c1 THEN vt0.c0 END)AND(CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN x'' ELSE rt0.c1 END)))AND(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN rt0.c1 THEN vt0.c0 END)AND(CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN x'' ELSE rt0.c1 END)))AND(rt0.c0))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((CASE WHEN rt0.c1 THEN vt0.c0 END)AND(CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN x'' ELSE rt0.c1 END)))AND(rt0.c0)));
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (x'');
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((0.8040000979886188) NOT NULL) ELSE CASE WHEN x'' THEN vt1.c0 ELSE vt1.c0 END END) ORDER BY ((((vt1.c0)<<(vt1.c0))) NOTNULL) DESC  NULLS FIRST, ((NULL) BETWEEN (HEX(DISTINCT NULL)) AND (CASE WHEN vt1.c0 THEN 0.2058934098835793 END));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((0.8040000979886188) NOT NULL) ELSE CASE WHEN x'' THEN vt1.c0 ELSE vt1.c0 END END) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)<<(vt1.c0))) NOTNULL) DESC  NULLS FIRST, ((NULL) BETWEEN (HEX(DISTINCT NULL)) AND (CASE WHEN vt1.c0 THEN 0.2058934098835793 END)));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((0.8040000979886188) NOT NULL) ELSE CASE WHEN x'' THEN vt1.c0 ELSE vt1.c0 END END) ORDER BY ((((vt1.c0)<<(vt1.c0))) NOTNULL) DESC  NULLS FIRST, ((NULL) BETWEEN (HEX(DISTINCT NULL)) AND (CASE WHEN vt1.c0 THEN 0.2058934098835793 END));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((0.8040000979886188) NOT NULL) ELSE CASE WHEN x'' THEN vt1.c0 ELSE vt1.c0 END END) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)<<(vt1.c0))) NOTNULL) DESC  NULLS FIRST, ((NULL) BETWEEN (HEX(DISTINCT NULL)) AND (CASE WHEN vt1.c0 THEN 0.2058934098835793 END)));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((0.8040000979886188) NOT NULL) ELSE CASE WHEN x'' THEN vt1.c0 ELSE vt1.c0 END END) ORDER BY ((((vt1.c0)<<(vt1.c0))) NOTNULL) DESC  NULLS FIRST, ((NULL) BETWEEN (HEX(DISTINCT NULL)) AND (CASE WHEN vt1.c0 THEN 0.2058934098835793 END));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((NOT (vt0.c0)), (NULL IN ()), ((vt0.c0)+(vt0.c0)))) AND ((((vt0.c0)-(vt0.c0)), (+ (NULL)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY (~ (x'')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((NOT (vt0.c0)), (NULL IN ()), ((vt0.c0)+(vt0.c0)))) AND ((((vt0.c0)-(vt0.c0)), (+ (NULL)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (x'')) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((NOT (vt0.c0)), (NULL IN ()), ((vt0.c0)+(vt0.c0)))) AND ((((vt0.c0)-(vt0.c0)), (+ (NULL)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY (~ (x'')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((NOT (vt0.c0)), (NULL IN ()), ((vt0.c0)+(vt0.c0)))) AND ((((vt0.c0)-(vt0.c0)), (+ (NULL)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (x'')) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((NOT (vt0.c0)), (NULL IN ()), ((vt0.c0)+(vt0.c0)))) AND ((((vt0.c0)-(vt0.c0)), (+ (NULL)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY (~ (x'')) ASC  NULLS FIRST;
SELECT * FROM vt0, vt1, rt0, rt1 WHERE (CAST(((vt0.c0)IS NOT(rt1.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)IS NOT(rt1.c1)) AS BLOB)) IS TRUE)  as count FROM vt0, vt1, rt0, rt1);
SELECT * FROM vt0, vt1, rt0, rt1 WHERE (CAST(((vt0.c0)IS NOT(rt1.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)IS NOT(rt1.c1)) AS BLOB)) IS TRUE)  as count FROM vt0, vt1, rt0, rt1);
SELECT * FROM vt0, vt1, rt0, rt1 WHERE (CAST(((vt0.c0)IS NOT(rt1.c1)) AS BLOB));
SELECT COUNT(*) FROM rt1 NOT INDEXED WHERE (((((json_array_length(rt1.c2, rt1.c0))AND(0.803853532930949)))OR(((((((((((((-1968510231)AND(rt1.c3)))OR(rt1.c4)))AND(rt1.c4)))OR(rt1.c2)))AND(rt1.c1)))OR(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((json_array_length(rt1.c2, rt1.c0))AND(0.803853532930949)))OR(((((((((((((-1968510231)AND(rt1.c3)))OR(rt1.c4)))AND(rt1.c4)))OR(rt1.c2)))AND(rt1.c1)))OR(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 NOT INDEXED WHERE (((((json_array_length(rt1.c2, rt1.c0))AND(0.803853532930949)))OR(((((((((((((-1968510231)AND(rt1.c3)))OR(rt1.c4)))AND(rt1.c4)))OR(rt1.c2)))AND(rt1.c1)))OR(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((json_array_length(rt1.c2, rt1.c0))AND(0.803853532930949)))OR(((((((((((((-1968510231)AND(rt1.c3)))OR(rt1.c4)))AND(rt1.c4)))OR(rt1.c2)))AND(rt1.c1)))OR(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt0, rt1, vt0, vt1 WHERE ((NOT (CHANGES()))) ORDER BY (((((vt0.c0)AND(rt0.c1)))AND(rt1.c4)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CHANGES()))) IS TRUE)  as count FROM rt0, rt1, vt0, vt1 ORDER BY (((((vt0.c0)AND(rt0.c1)))AND(rt1.c4)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1, vt0, vt1 WHERE ((NOT (CHANGES()))) ORDER BY (((((vt0.c0)AND(rt0.c1)))AND(rt1.c4)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CHANGES()))) IS TRUE)  as count FROM rt0, rt1, vt0, vt1 ORDER BY (((((vt0.c0)AND(rt0.c1)))AND(rt1.c4)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1, vt0, vt1 WHERE ((NOT (CHANGES()))) ORDER BY (((((vt0.c0)AND(rt0.c1)))AND(rt1.c4)) IN ())  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0, vt1, rt1 WHERE ((+ (((rt1.c4)-(vt1.c0))))) ORDER BY (CASE WHEN rt1.c3 THEN vt0.c0 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c4)-(vt1.c0))))) IS TRUE)  as count FROM vt0, rt0, vt1, rt1 ORDER BY (CASE WHEN rt1.c3 THEN vt0.c0 END IN ()) DESC);
SELECT COUNT(*) FROM vt0, rt0, vt1, rt1 WHERE ((+ (((rt1.c4)-(vt1.c0))))) ORDER BY (CASE WHEN rt1.c3 THEN vt0.c0 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c4)-(vt1.c0))))) IS TRUE)  as count FROM vt0, rt0, vt1, rt1 ORDER BY (CASE WHEN rt1.c3 THEN vt0.c0 END IN ()) DESC);
SELECT COUNT(*) FROM vt0, rt0, vt1, rt1 WHERE ((+ (((rt1.c4)-(vt1.c0))))) ORDER BY (CASE WHEN rt1.c3 THEN vt0.c0 END IN ()) DESC;
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (((((rt0.c2)OR(rt0.c1 COLLATE NOCASE)))OR(CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)OR(rt0.c1 COLLATE NOCASE)))OR(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (((((rt0.c2)OR(rt0.c1 COLLATE NOCASE)))OR(CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)OR(rt0.c1 COLLATE NOCASE)))OR(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (((((rt0.c2)OR(rt0.c1 COLLATE NOCASE)))OR(CAST(rt0.c1 AS TEXT))));
SELECT COUNT(*) FROM rt0, rt1 INNER JOIN vt1 ON ((((((vt0.c0)AND(rt1.c2)))OR(-766962044))) NOT BETWEEN (((rt0.c0) BETWEEN (rt1.c2) AND (rt1.c1))) AND ((NOT (NULL)))) FULL OUTER JOIN vt0 ON ((vt1.c0 COLLATE NOCASE) NOT BETWEEN (((vt0.c0)GLOB(rt1.c0))) AND (((rt1.c3) NOT NULL))) WHERE ((((((rt1.c3)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c2)))) BETWEEN ((~ (vt0.c0))) AND ((+ (rt0.c2))))) ORDER BY (((rt1.c4 COLLATE NOCASE, CASE vt1.c0  WHEN rt1.c1 THEN rt0.c0 END, rt0.c0 COLLATE RTRIM))>((((rt0.c2) ISNULL), rt1.c3, (- (rt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c3)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c2)))) BETWEEN ((~ (vt0.c0))) AND ((+ (rt0.c2))))) IS TRUE)  as count FROM rt0, rt1 INNER JOIN vt1 ON ((((((vt0.c0)AND(rt1.c2)))OR(-766962044))) NOT BETWEEN (((rt0.c0) BETWEEN (rt1.c2) AND (rt1.c1))) AND ((NOT (NULL)))) FULL OUTER JOIN vt0 ON ((vt1.c0 COLLATE NOCASE) NOT BETWEEN (((vt0.c0)GLOB(rt1.c0))) AND (((rt1.c3) NOT NULL))) ORDER BY (((rt1.c4 COLLATE NOCASE, CASE vt1.c0  WHEN rt1.c1 THEN rt0.c0 END, rt0.c0 COLLATE RTRIM))>((((rt0.c2) ISNULL), rt1.c3, (- (rt1.c0))))) DESC);
SELECT COUNT(*) FROM rt0, rt1 INNER JOIN vt1 ON ((((((vt0.c0)AND(rt1.c2)))OR(-766962044))) NOT BETWEEN (((rt0.c0) BETWEEN (rt1.c2) AND (rt1.c1))) AND ((NOT (NULL)))) FULL OUTER JOIN vt0 ON ((vt1.c0 COLLATE NOCASE) NOT BETWEEN (((vt0.c0)GLOB(rt1.c0))) AND (((rt1.c3) NOT NULL))) WHERE ((((((rt1.c3)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c2)))) BETWEEN ((~ (vt0.c0))) AND ((+ (rt0.c2))))) ORDER BY (((rt1.c4 COLLATE NOCASE, CASE vt1.c0  WHEN rt1.c1 THEN rt0.c0 END, rt0.c0 COLLATE RTRIM))>((((rt0.c2) ISNULL), rt1.c3, (- (rt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c3)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c2)))) BETWEEN ((~ (vt0.c0))) AND ((+ (rt0.c2))))) IS TRUE)  as count FROM rt0, rt1 INNER JOIN vt1 ON ((((((vt0.c0)AND(rt1.c2)))OR(-766962044))) NOT BETWEEN (((rt0.c0) BETWEEN (rt1.c2) AND (rt1.c1))) AND ((NOT (NULL)))) FULL OUTER JOIN vt0 ON ((vt1.c0 COLLATE NOCASE) NOT BETWEEN (((vt0.c0)GLOB(rt1.c0))) AND (((rt1.c3) NOT NULL))) ORDER BY (((rt1.c4 COLLATE NOCASE, CASE vt1.c0  WHEN rt1.c1 THEN rt0.c0 END, rt0.c0 COLLATE RTRIM))>((((rt0.c2) ISNULL), rt1.c3, (- (rt1.c0))))) DESC);
SELECT ALL * FROM vt0, rt1, vt1 WHERE (HEX(((rt1.c1)IS(rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(((rt1.c1)IS(rt1.c3)))) IS TRUE)  as count FROM vt0, rt1, vt1);
SELECT ALL * FROM vt0, rt1, vt1 WHERE (HEX(((rt1.c1)IS(rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(((rt1.c1)IS(rt1.c3)))) IS TRUE)  as count FROM vt0, rt1, vt1);
SELECT ALL * FROM vt0, rt1, vt1 WHERE (HEX(((rt1.c1)IS(rt1.c3))));
SELECT ALL * FROM rt0 WHERE (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END COLLATE NOCASE);
SELECT ALL * FROM rt1, vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (x'') AND (rt1.c2)) AS REAL)) ORDER BY (NOT ((NOT (rt1.c4)))), ((RTRIM(rt1.c0))AND(CAST(rt1.c1 AS REAL))) ASC  NULLS LAST, rt1.c1;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT BETWEEN (x'') AND (rt1.c2)) AS REAL)) IS TRUE)  as count FROM rt1, vt0 ORDER BY (NOT ((NOT (rt1.c4)))), ((RTRIM(rt1.c0))AND(CAST(rt1.c1 AS REAL))) ASC  NULLS LAST, rt1.c1);
SELECT ALL * FROM rt1, vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (x'') AND (rt1.c2)) AS REAL)) ORDER BY (NOT ((NOT (rt1.c4)))), ((RTRIM(rt1.c0))AND(CAST(rt1.c1 AS REAL))) ASC  NULLS LAST, rt1.c1;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT BETWEEN (x'') AND (rt1.c2)) AS REAL)) IS TRUE)  as count FROM rt1, vt0 ORDER BY (NOT ((NOT (rt1.c4)))), ((RTRIM(rt1.c0))AND(CAST(rt1.c1 AS REAL))) ASC  NULLS LAST, rt1.c1);
SELECT ALL * FROM rt1, vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (x'') AND (rt1.c2)) AS REAL)) ORDER BY (NOT ((NOT (rt1.c4)))), ((RTRIM(rt1.c0))AND(CAST(rt1.c1 AS REAL))) ASC  NULLS LAST, rt1.c1;
SELECT ALL COUNT(*) FROM rt0, vt1, vt0, rt1 WHERE ((~ ((- (rt0.c0))))) ORDER BY ((CASE WHEN rt1.c4 THEN rt0.c1 WHEN rt1.c2 THEN rt0.c0 WHEN rt1.c4 THEN rt1.c2 ELSE rt0.c1 END)>>(rt0.c2)) ASC  NULLS FIRST, (((rt1.c2 IN ()))!=(((((rt1.c4)AND(vt0.c0)))OR(rt0.c2)))), CASE WHEN ((rt1.c1)<(rt1.c1)) THEN vt1.c0 COLLATE NOCASE ELSE ((rt1.c3) IS TRUE) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((- (rt0.c0))))) IS TRUE)  as count FROM rt0, vt1, vt0, rt1 ORDER BY ((CASE WHEN rt1.c4 THEN rt0.c1 WHEN rt1.c2 THEN rt0.c0 WHEN rt1.c4 THEN rt1.c2 ELSE rt0.c1 END)>>(rt0.c2)) ASC  NULLS FIRST, (((rt1.c2 IN ()))<>(((((rt1.c4)AND(vt0.c0)))OR(rt0.c2)))), CASE WHEN ((rt1.c1)<(rt1.c1)) THEN vt1.c0 COLLATE NOCASE ELSE ((rt1.c3) IS TRUE) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0, rt1 WHERE ((~ ((- (rt0.c0))))) ORDER BY ((CASE WHEN rt1.c4 THEN rt0.c1 WHEN rt1.c2 THEN rt0.c0 WHEN rt1.c4 THEN rt1.c2 ELSE rt0.c1 END)>>(rt0.c2)) ASC  NULLS FIRST, (((rt1.c2 IN ()))!=(((((rt1.c4)AND(vt0.c0)))OR(rt0.c2)))), CASE WHEN ((rt1.c1)<(rt1.c1)) THEN vt1.c0 COLLATE NOCASE ELSE ((rt1.c3) IS TRUE) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((- (rt0.c0))))) IS TRUE)  as count FROM rt0, vt1, vt0, rt1 ORDER BY ((CASE WHEN rt1.c4 THEN rt0.c1 WHEN rt1.c2 THEN rt0.c0 WHEN rt1.c4 THEN rt1.c2 ELSE rt0.c1 END)>>(rt0.c2)) ASC  NULLS FIRST, (((rt1.c2 IN ()))<>(((((rt1.c4)AND(vt0.c0)))OR(rt0.c2)))), CASE WHEN ((rt1.c1)<(rt1.c1)) THEN vt1.c0 COLLATE NOCASE ELSE ((rt1.c3) IS TRUE) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0, rt1 WHERE ((~ ((- (rt0.c0))))) ORDER BY ((CASE WHEN rt1.c4 THEN rt0.c1 WHEN rt1.c2 THEN rt0.c0 WHEN rt1.c4 THEN rt1.c2 ELSE rt0.c1 END)>>(rt0.c2)) ASC  NULLS FIRST, (((rt1.c2 IN ()))!=(((((rt1.c4)AND(vt0.c0)))OR(rt0.c2)))), CASE WHEN ((rt1.c1)<(rt1.c1)) THEN vt1.c0 COLLATE NOCASE ELSE ((rt1.c3) IS TRUE) END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (((((rt1.c1)-(rt1.c4))) BETWEEN (((rt1.c1)IS NOT(0.9479353126053705))) AND ((((rt1.c2))>((rt0.c2)))))) ORDER BY (rt1.c2 COLLATE BINARY IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)-(rt1.c4))) BETWEEN (((rt1.c1)IS NOT(0.9479353126053705))) AND ((((rt1.c2))>((rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY (rt1.c2 COLLATE BINARY IN ()) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (((((rt1.c1)-(rt1.c4))) BETWEEN (((rt1.c1)IS NOT(0.9479353126053705))) AND ((((rt1.c2))>((rt0.c2)))))) ORDER BY (rt1.c2 COLLATE BINARY IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)-(rt1.c4))) BETWEEN (((rt1.c1)IS NOT(0.9479353126053705))) AND ((((rt1.c2))>((rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY (rt1.c2 COLLATE BINARY IN ()) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (((((rt1.c1)-(rt1.c4))) BETWEEN (((rt1.c1)IS NOT(0.9479353126053705))) AND ((((rt1.c2))>((rt0.c2)))))) ORDER BY (rt1.c2 COLLATE BINARY IN ()) DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))/(((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))/(((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))/(((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))/(((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))/(((vt1.c0) NOT NULL))));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON ((CAST(rt0.c1 AS INTEGER)) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c1)<(rt0.c1)))) WHERE ((((rt0.c2)+(rt0.c2)) IN ())) ORDER BY 0.3606804232351799  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)+(rt0.c2)) IN ())) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((CAST(rt0.c1 AS INTEGER)) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c1)<(rt0.c1)))) ORDER BY 0.3606804232351799  NULLS LAST);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON ((CAST(rt0.c1 AS INTEGER)) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c1)<(rt0.c1)))) WHERE ((((rt0.c2)+(rt0.c2)) IN ())) ORDER BY 0.3606804232351799  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)+(rt0.c2)) IN ())) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((CAST(rt0.c1 AS INTEGER)) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c1)<(rt0.c1)))) ORDER BY 0.3606804232351799  NULLS LAST);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON ((CAST(rt0.c1 AS INTEGER)) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c1)<(rt0.c1)))) WHERE ((((rt0.c2)+(rt0.c2)) IN ())) ORDER BY 0.3606804232351799  NULLS LAST;
SELECT ALL * FROM rt1, vt1 WHERE (TRIM(((((rt1.c3)OR(rt1.c2)))OR(rt1.c3)), rt1.c3 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((TRIM(((((rt1.c3)OR(rt1.c2)))OR(rt1.c3)), rt1.c3 COLLATE BINARY)) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL * FROM rt1, vt1 WHERE (TRIM(((((rt1.c3)OR(rt1.c2)))OR(rt1.c3)), rt1.c3 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((TRIM(((((rt1.c3)OR(rt1.c2)))OR(rt1.c3)), rt1.c3 COLLATE BINARY)) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL * FROM rt1, vt1 WHERE (TRIM(((((rt1.c3)OR(rt1.c2)))OR(rt1.c3)), rt1.c3 COLLATE BINARY));
SELECT ALL * FROM rt0, rt1 WHERE (rt1.c4) ORDER BY (((((rt0.c1))<=((rt1.c2))))>(rt0.c0))  NULLS FIRST, json_quote(((((((((rt0.c0)AND(rt1.c2)))AND(rt0.c0)))AND(rt0.c1)))OR('1890114422'))) ASC;
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((((rt0.c1))<=((rt1.c2))))>(rt0.c0))  NULLS FIRST, json_quote(((((((((rt0.c0)AND(rt1.c2)))AND(rt0.c0)))AND(rt0.c1)))OR('1890114422'))) ASC);
SELECT ALL * FROM rt0, rt1 WHERE (rt1.c4) ORDER BY (((((rt0.c1))<=((rt1.c2))))>(rt0.c0))  NULLS FIRST, json_quote(((((((((rt0.c0)AND(rt1.c2)))AND(rt0.c0)))AND(rt0.c1)))OR('1890114422'))) ASC;
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((((rt0.c1))<=((rt1.c2))))>(rt0.c0))  NULLS FIRST, json_quote(((((((((rt0.c0)AND(rt1.c2)))AND(rt0.c0)))AND(rt0.c1)))OR('1890114422'))) ASC);
SELECT ALL * FROM rt0, rt1 WHERE (rt1.c4) ORDER BY (((((rt0.c1))<=((rt1.c2))))>(rt0.c0))  NULLS FIRST, json_quote(((((((((rt0.c0)AND(rt1.c2)))AND(rt0.c0)))AND(rt0.c1)))OR('1890114422'))) ASC;
SELECT ALL * FROM rt1, vt1, vt0 WHERE (((NULL)!=(((vt0.c0)>=(rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)<>(((vt0.c0)>=(rt1.c4))))) IS TRUE)  as count FROM rt1, vt1, vt0);
SELECT ALL * FROM rt1, vt1, vt0 WHERE (((NULL)!=(((vt0.c0)>=(rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)<>(((vt0.c0)>=(rt1.c4))))) IS TRUE)  as count FROM rt1, vt1, vt0);
SELECT ALL * FROM rt1, vt1, vt0 WHERE (((NULL)!=(((vt0.c0)>=(rt1.c4)))));
SELECT COUNT(*) FROM rt1 WHERE (((((CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c0 END)OR(((rt1.c4) IS TRUE))))OR(LIKELY(0x7057be5f)))) ORDER BY ((((rt1.c4) NOT NULL))<=(((rt1.c3)-(rt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c0 END)OR(((rt1.c4) IS TRUE))))OR(LIKELY(0x7057be5f)))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c4) NOT NULL))<=(((rt1.c3)-(rt1.c1)))));
SELECT COUNT(*) FROM rt1 WHERE (((((CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c0 END)OR(((rt1.c4) IS TRUE))))OR(LIKELY(0x7057be5f)))) ORDER BY ((((rt1.c4) NOT NULL))<=(((rt1.c3)-(rt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c0 END)OR(((rt1.c4) IS TRUE))))OR(LIKELY(0x7057be5f)))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c4) NOT NULL))<=(((rt1.c3)-(rt1.c1)))));
SELECT COUNT(*) FROM rt1 WHERE (((((CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c0 END)OR(((rt1.c4) IS TRUE))))OR(LIKELY(0x7057be5f)))) ORDER BY ((((rt1.c4) NOT NULL))<=(((rt1.c3)-(rt1.c1))));
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE (NULL) ORDER BY ((((rt0.c0)==(vt1.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY ((((rt0.c0)==(vt1.c0))) ISNULL));
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE (NULL) ORDER BY ((((rt0.c0)==(vt1.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY ((((rt0.c0)==(vt1.c0))) ISNULL));
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE (NULL) ORDER BY ((((rt0.c0)==(vt1.c0))) ISNULL);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CAST(rt0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS BLOB)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CAST(rt0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS BLOB)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CAST(rt0.c0 AS BLOB));
SELECT ALL * FROM rt0 NOT INDEXED WHERE (((rt0.c2)=(rt0.c2)) COLLATE RTRIM) ORDER BY ((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))>>(CAST(0x25181b9a AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)==(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))>>(CAST(0X25181b9a AS NUMERIC)))  NULLS FIRST);
SELECT ALL * FROM rt0 NOT INDEXED WHERE (((rt0.c2)=(rt0.c2)) COLLATE RTRIM) ORDER BY ((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))>>(CAST(0x25181b9a AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)==(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))>>(CAST(0X25181b9a AS NUMERIC)))  NULLS FIRST);
SELECT ALL * FROM rt0 NOT INDEXED WHERE (((rt0.c2)=(rt0.c2)) COLLATE RTRIM) ORDER BY ((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))>>(CAST(0x25181b9a AS NUMERIC)))  NULLS FIRST;
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(((0.7735342284123573) IS TRUE) AS REAL) INNER JOIN vt0 ON ((CASE rt0.c2  WHEN NULL THEN rt0.c0 ELSE vt0.c0 END)>>(((rt0.c2) NOT NULL))) WHERE (CAST(((rt0.c1) BETWEEN (rt0.c0) AND (vt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) BETWEEN (rt0.c0) AND (vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(((0.7735342284123573) IS TRUE) AS REAL) INNER JOIN vt0 ON ((CASE rt0.c2  WHEN NULL THEN rt0.c0 ELSE vt0.c0 END)>>(((rt0.c2) NOT NULL))));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(((0.7735342284123573) IS TRUE) AS REAL) INNER JOIN vt0 ON ((CASE rt0.c2  WHEN NULL THEN rt0.c0 ELSE vt0.c0 END)>>(((rt0.c2) NOT NULL))) WHERE (CAST(((rt0.c1) BETWEEN (rt0.c0) AND (vt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) BETWEEN (rt0.c0) AND (vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(((0.7735342284123573) IS TRUE) AS REAL) INNER JOIN vt0 ON ((CASE rt0.c2  WHEN NULL THEN rt0.c0 ELSE vt0.c0 END)>>(((rt0.c2) NOT NULL))));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(((0.7735342284123573) IS TRUE) AS REAL) INNER JOIN vt0 ON ((CASE rt0.c2  WHEN NULL THEN rt0.c0 ELSE vt0.c0 END)>>(((rt0.c2) NOT NULL))) WHERE (CAST(((rt0.c1) BETWEEN (rt0.c0) AND (vt1.c0)) AS REAL));
SELECT COUNT(*) FROM rt1, vt0, vt1, rt0 WHERE (((((((x'') NOT NULL))OR(rt1.c1 COLLATE NOCASE)))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((x'') NOT NULL))OR(rt1.c1 COLLATE NOCASE)))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt1.c2))))) IS TRUE)  as count FROM rt1, vt0, vt1, rt0);
SELECT COUNT(*) FROM rt1, vt0, vt1, rt0 WHERE (((((((x'') NOT NULL))OR(rt1.c1 COLLATE NOCASE)))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((x'') NOT NULL))OR(rt1.c1 COLLATE NOCASE)))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt1.c2))))) IS TRUE)  as count FROM rt1, vt0, vt1, rt0);
SELECT COUNT(*) FROM rt1, vt0, vt1, rt0 WHERE (((((((x'') NOT NULL))OR(rt1.c1 COLLATE NOCASE)))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt1.c2)))));
SELECT ALL * FROM vt0, rt0 INNER JOIN rt1 ON ((((rt1.c0)<(x'')))<(((rt0.c2)<(rt1.c0)))) WHERE ((((((rt1.c2)<<(rt1.c3))))>=((rt0.c1)))) ORDER BY LOWER(DISTINCT COALESCE(rt1.c3, rt0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c2)<<(rt1.c3))))>=((rt0.c1)))) IS TRUE)  as count FROM vt0, rt0 INNER JOIN rt1 ON ((((rt1.c0)<(x'')))<(((rt0.c2)<(rt1.c0)))) ORDER BY LOWER(DISTINCT COALESCE(rt1.c3, rt0.c1))  NULLS LAST);
SELECT ALL * FROM vt0, rt0 INNER JOIN rt1 ON ((((rt1.c0)<(x'')))<(((rt0.c2)<(rt1.c0)))) WHERE ((((((rt1.c2)<<(rt1.c3))))>=((rt0.c1)))) ORDER BY LOWER(DISTINCT COALESCE(rt1.c3, rt0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c2)<<(rt1.c3))))>=((rt0.c1)))) IS TRUE)  as count FROM vt0, rt0 INNER JOIN rt1 ON ((((rt1.c0)<(x'')))<(((rt0.c2)<(rt1.c0)))) ORDER BY LOWER(DISTINCT COALESCE(rt1.c3, rt0.c1))  NULLS LAST);
SELECT ALL * FROM vt0, rt0 INNER JOIN rt1 ON ((((rt1.c0)<(x'')))<(((rt0.c2)<(rt1.c0)))) WHERE ((((((rt1.c2)<<(rt1.c3))))>=((rt0.c1)))) ORDER BY LOWER(DISTINCT COALESCE(rt1.c3, rt0.c1))  NULLS LAST;
SELECT ALL * FROM vt0, rt0, vt1 WHERE (((((vt0.c0) ISNULL)) ISNULL)) ORDER BY ((rt0.c0) ISNULL) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL)) ISNULL)) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((rt0.c0) ISNULL) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE (((((vt0.c0) ISNULL)) ISNULL)) ORDER BY ((rt0.c0) ISNULL) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL)) ISNULL)) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((rt0.c0) ISNULL) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE (((((vt0.c0) ISNULL)) ISNULL)) ORDER BY ((rt0.c0) ISNULL) COLLATE NOCASE DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, rt0, rt1, vt0 WHERE ((NOT (''))) ORDER BY (((((~ (rt1.c0)))OR((~ (rt0.c1)))))OR(CAST(rt1.c2 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (''))) IS TRUE)  as count FROM vt1, rt0, rt1, vt0 ORDER BY (((((~ (rt1.c0)))OR((~ (rt0.c1)))))OR(CAST(rt1.c2 AS BLOB))) ASC);
SELECT COUNT(*) FROM vt1, rt0, rt1, vt0 WHERE ((NOT (''))) ORDER BY (((((~ (rt1.c0)))OR((~ (rt0.c1)))))OR(CAST(rt1.c2 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (''))) IS TRUE)  as count FROM vt1, rt0, rt1, vt0 ORDER BY (((((~ (rt1.c0)))OR((~ (rt0.c1)))))OR(CAST(rt1.c2 AS BLOB))) ASC);
SELECT COUNT(*) FROM vt1, rt0, rt1, vt0 WHERE ((NOT (''))) ORDER BY (((((~ (rt1.c0)))OR((~ (rt0.c1)))))OR(CAST(rt1.c2 AS BLOB))) ASC;
SELECT * FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON (((TRIM(rt1.c2, rt1.c2)))<=((((((((((((((vt0.c0)AND(rt1.c4)))AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)))OR(vt0.c0)))OR(rt1.c3))))) RIGHT OUTER JOIN rt1 ON CAST(rt0.c2 AS TEXT) WHERE (CAST(((0.034252470008168334)IS(rt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((0.034252470008168334)IS(rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON (((TRIM(rt1.c2, rt1.c2)))<=((((((((((((((vt0.c0)AND(rt1.c4)))AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)))OR(vt0.c0)))OR(rt1.c3))))) RIGHT OUTER JOIN rt1 ON CAST(rt0.c2 AS TEXT));
SELECT * FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON (((TRIM(rt1.c2, rt1.c2)))<=((((((((((((((vt0.c0)AND(rt1.c4)))AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)))OR(vt0.c0)))OR(rt1.c3))))) RIGHT OUTER JOIN rt1 ON CAST(rt0.c2 AS TEXT) WHERE (CAST(((0.034252470008168334)IS(rt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((0.034252470008168334)IS(rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON (((TRIM(rt1.c2, rt1.c2)))<=((((((((((((((vt0.c0)AND(rt1.c4)))AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)))OR(vt0.c0)))OR(rt1.c3))))) RIGHT OUTER JOIN rt1 ON CAST(rt0.c2 AS TEXT));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN ((rt1.c3) NOT NULL) THEN vt1.c0 COLLATE RTRIM ELSE LIKE(rt0.c1, vt0.c0) END LEFT OUTER JOIN rt0 ON (((rt1.c2 IN ())) NOT BETWEEN (rt1.c1) AND ('升a')) FULL OUTER JOIN rt1 ON rt1.c4 COLLATE NOCASE WHERE (((((rt1.c2)<(rt1.c2))) BETWEEN (((rt0.c0)+(vt1.c0))) AND (UNLIKELY(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)<(rt1.c2))) BETWEEN (((rt0.c0)+(vt1.c0))) AND (UNLIKELY(vt1.c0)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN ((rt1.c3) NOT NULL) THEN vt1.c0 COLLATE RTRIM ELSE LIKE(rt0.c1, vt0.c0) END LEFT OUTER JOIN rt0 ON (((rt1.c2 IN ())) NOT BETWEEN (rt1.c1) AND ('升a')) FULL OUTER JOIN rt1 ON rt1.c4 COLLATE NOCASE);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN ((rt1.c3) NOT NULL) THEN vt1.c0 COLLATE RTRIM ELSE LIKE(rt0.c1, vt0.c0) END LEFT OUTER JOIN rt0 ON (((rt1.c2 IN ())) NOT BETWEEN (rt1.c1) AND ('升a')) FULL OUTER JOIN rt1 ON rt1.c4 COLLATE NOCASE WHERE (((((rt1.c2)<(rt1.c2))) BETWEEN (((rt0.c0)+(vt1.c0))) AND (UNLIKELY(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)<(rt1.c2))) BETWEEN (((rt0.c0)+(vt1.c0))) AND (UNLIKELY(vt1.c0)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN ((rt1.c3) NOT NULL) THEN vt1.c0 COLLATE RTRIM ELSE LIKE(rt0.c1, vt0.c0) END LEFT OUTER JOIN rt0 ON (((rt1.c2 IN ())) NOT BETWEEN (rt1.c1) AND ('升a')) FULL OUTER JOIN rt1 ON rt1.c4 COLLATE NOCASE);
SELECT ALL * FROM rt1 INNER JOIN vt1 ON rt1.c2 WHERE (((((rt1.c1) BETWEEN (0X3a506bba) AND (rt1.c2))) IS TRUE)) ORDER BY ((rt1.c0) BETWEEN (vt1.c0 COLLATE NOCASE) AND (rt1.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) BETWEEN (0X3a506bba) AND (rt1.c2))) IS TRUE)) IS TRUE)  as count FROM rt1 INNER JOIN vt1 ON rt1.c2 ORDER BY ((rt1.c0) BETWEEN (vt1.c0 COLLATE NOCASE) AND (rt1.c1))  NULLS LAST);
SELECT ALL * FROM rt1 INNER JOIN vt1 ON rt1.c2 WHERE (((((rt1.c1) BETWEEN (0X3a506bba) AND (rt1.c2))) IS TRUE)) ORDER BY ((rt1.c0) BETWEEN (vt1.c0 COLLATE NOCASE) AND (rt1.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) BETWEEN (0X3a506bba) AND (rt1.c2))) IS TRUE)) IS TRUE)  as count FROM rt1 INNER JOIN vt1 ON rt1.c2 ORDER BY ((rt1.c0) BETWEEN (vt1.c0 COLLATE NOCASE) AND (rt1.c1))  NULLS LAST);
SELECT ALL * FROM rt1 INNER JOIN vt1 ON rt1.c2 WHERE (((((rt1.c1) BETWEEN (0X3a506bba) AND (rt1.c2))) IS TRUE)) ORDER BY ((rt1.c0) BETWEEN (vt1.c0 COLLATE NOCASE) AND (rt1.c1))  NULLS LAST;
SELECT COUNT(*) FROM rt1, vt1, vt0, rt0 WHERE (((rt1.c4 IN ()) IN ())) ORDER BY CAST((((rt1.c2, rt0.c1, rt0.c2))=((rt1.c4, rt1.c3, NULL))) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c4 IN ()) IN ())) IS TRUE)  as count FROM rt1, vt1, vt0, rt0 ORDER BY CAST((((rt1.c2, rt0.c1, rt0.c2))=((rt1.c4, rt1.c3, NULL))) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt1, vt0, rt0 WHERE (((rt1.c4 IN ()) IN ())) ORDER BY CAST((((rt1.c2, rt0.c1, rt0.c2))=((rt1.c4, rt1.c3, NULL))) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c4 IN ()) IN ())) IS TRUE)  as count FROM rt1, vt1, vt0, rt0 ORDER BY CAST((((rt1.c2, rt0.c1, rt0.c2))=((rt1.c4, rt1.c3, NULL))) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt1, vt0, rt0 WHERE (((rt1.c4 IN ()) IN ())) ORDER BY CAST((((rt1.c2, rt0.c1, rt0.c2))=((rt1.c4, rt1.c3, NULL))) AS NUMERIC)  NULLS FIRST;
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON ((((NULL) NOTNULL))%(rt0.c2 COLLATE NOCASE)) WHERE (rt1.c2) ORDER BY CASE ((rt1.c2) BETWEEN (rt1.c3) AND (rt0.c2))  WHEN TRIM(rt1.c2, rt1.c0) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt1.c0 ELSE rt1.c1 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON ((((NULL) NOTNULL))%(rt0.c2 COLLATE NOCASE)) ORDER BY CASE ((rt1.c2) BETWEEN (rt1.c3) AND (rt0.c2))  WHEN TRIM(rt1.c2, rt1.c0) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt1.c0 ELSE rt1.c1 END END  NULLS FIRST);
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON ((((NULL) NOTNULL))%(rt0.c2 COLLATE NOCASE)) WHERE (rt1.c2) ORDER BY CASE ((rt1.c2) BETWEEN (rt1.c3) AND (rt0.c2))  WHEN TRIM(rt1.c2, rt1.c0) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt1.c0 ELSE rt1.c1 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON ((((NULL) NOTNULL))%(rt0.c2 COLLATE NOCASE)) ORDER BY CASE ((rt1.c2) BETWEEN (rt1.c3) AND (rt0.c2))  WHEN TRIM(rt1.c2, rt1.c0) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt1.c0 ELSE rt1.c1 END END  NULLS FIRST);
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON ((((NULL) NOTNULL))%(rt0.c2 COLLATE NOCASE)) WHERE (rt1.c2) ORDER BY CASE ((rt1.c2) BETWEEN (rt1.c3) AND (rt0.c2))  WHEN TRIM(rt1.c2, rt1.c0) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt1.c0 ELSE rt1.c1 END END  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt1 NATURAL JOIN rt1 WHERE (((rt1.c4)/(rt1.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt1.c4)/(rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM rt0, vt1 NATURAL JOIN rt1 WHERE (((rt1.c4)/(rt1.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt1.c4)/(rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM rt0, vt1 NATURAL JOIN rt1 WHERE (((rt1.c4)/(rt1.c2)) COLLATE BINARY);
SELECT COUNT(*) FROM rt1, rt0, vt0 FULL OUTER JOIN vt1 ON ((rt1.c2 IN ()) IN (CASE WHEN vt0.c0 THEN rt0.c1 END)) WHERE ((((rt1.c1 IN ())) NOT BETWEEN (((((((((rt0.c2)OR(rt0.c2)))AND(vt0.c0)))AND(rt1.c4)))OR(rt1.c0))) AND ((rt0.c1 IN ())))) ORDER BY CAST((rt1.c0 IN (rt1.c3)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN ())) NOT BETWEEN (((((((((rt0.c2)OR(rt0.c2)))AND(vt0.c0)))AND(rt1.c4)))OR(rt1.c0))) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt1, rt0, vt0 FULL OUTER JOIN vt1 ON ((rt1.c2 IN ()) IN (CASE WHEN vt0.c0 THEN rt0.c1 END)) ORDER BY CAST((rt1.c0 IN (rt1.c3)) AS REAL));
SELECT COUNT(*) FROM rt1, rt0, vt0 FULL OUTER JOIN vt1 ON ((rt1.c2 IN ()) IN (CASE WHEN vt0.c0 THEN rt0.c1 END)) WHERE ((((rt1.c1 IN ())) NOT BETWEEN (((((((((rt0.c2)OR(rt0.c2)))AND(vt0.c0)))AND(rt1.c4)))OR(rt1.c0))) AND ((rt0.c1 IN ())))) ORDER BY CAST((rt1.c0 IN (rt1.c3)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN ())) NOT BETWEEN (((((((((rt0.c2)OR(rt0.c2)))AND(vt0.c0)))AND(rt1.c4)))OR(rt1.c0))) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt1, rt0, vt0 FULL OUTER JOIN vt1 ON ((rt1.c2 IN ()) IN (CASE WHEN vt0.c0 THEN rt0.c1 END)) ORDER BY CAST((rt1.c0 IN (rt1.c3)) AS REAL));
SELECT COUNT(*) FROM rt1, rt0, vt0 FULL OUTER JOIN vt1 ON ((rt1.c2 IN ()) IN (CASE WHEN vt0.c0 THEN rt0.c1 END)) WHERE ((((rt1.c1 IN ())) NOT BETWEEN (((((((((rt0.c2)OR(rt0.c2)))AND(vt0.c0)))AND(rt1.c4)))OR(rt1.c0))) AND ((rt0.c1 IN ())))) ORDER BY CAST((rt1.c0 IN (rt1.c3)) AS REAL);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c2)>>(rt0.c1)))) AND ((CAST(rt0.c2 AS TEXT))))) ORDER BY (NOT (NULL))  NULLS LAST, NULLIF(DISTINCT ((rt0.c2)LIKE(rt0.c2)), ((rt0.c2)/(rt0.c2))), NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((((rt0.c2)>>(rt0.c1)))) AND ((CAST(rt0.c2 AS TEXT))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT (NULL))  NULLS LAST, NULLIF(DISTINCT ((rt0.c2)LIKE(rt0.c2)), ((rt0.c2)/(rt0.c2))), NULL DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c2)>>(rt0.c1)))) AND ((CAST(rt0.c2 AS TEXT))))) ORDER BY (NOT (NULL))  NULLS LAST, NULLIF(DISTINCT ((rt0.c2)LIKE(rt0.c2)), ((rt0.c2)/(rt0.c2))), NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((((rt0.c2)>>(rt0.c1)))) AND ((CAST(rt0.c2 AS TEXT))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT (NULL))  NULLS LAST, NULLIF(DISTINCT ((rt0.c2)LIKE(rt0.c2)), ((rt0.c2)/(rt0.c2))), NULL DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c2)>>(rt0.c1)))) AND ((CAST(rt0.c2 AS TEXT))))) ORDER BY (NOT (NULL))  NULLS LAST, NULLIF(DISTINCT ((rt0.c2)LIKE(rt0.c2)), ((rt0.c2)/(rt0.c2))), NULL DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((CAST(rt1.c3 AS REAL))<<(((((((((rt1.c4)OR(rt1.c4)))OR(rt1.c1)))OR(rt1.c3)))OR(rt1.c2))))) ORDER BY (+ (ABS(DISTINCT rt1.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c3 AS REAL))<<(((((((((rt1.c4)OR(rt1.c4)))OR(rt1.c1)))OR(rt1.c3)))OR(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY (+ (ABS(DISTINCT rt1.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((CAST(rt1.c3 AS REAL))<<(((((((((rt1.c4)OR(rt1.c4)))OR(rt1.c1)))OR(rt1.c3)))OR(rt1.c2))))) ORDER BY (+ (ABS(DISTINCT rt1.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c3 AS REAL))<<(((((((((rt1.c4)OR(rt1.c4)))OR(rt1.c1)))OR(rt1.c3)))OR(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY (+ (ABS(DISTINCT rt1.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((CAST(rt1.c3 AS REAL))<<(((((((((rt1.c4)OR(rt1.c4)))OR(rt1.c1)))OR(rt1.c3)))OR(rt1.c2))))) ORDER BY (+ (ABS(DISTINCT rt1.c0))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((CAST(vt1.c0 AS INTEGER), ((vt1.c0)/('-1e500')), vt1.c0)) AND (((((vt1.c0))!=((vt1.c0))), ((vt1.c0)%(vt1.c0)), CAST(vt1.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((CAST(vt1.c0 AS INTEGER), ((vt1.c0)/('-1e500')), vt1.c0)) AND (((((vt1.c0))<>((vt1.c0))), ((vt1.c0)%(vt1.c0)), CAST(vt1.c0 AS REAL))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((CAST(vt1.c0 AS INTEGER), ((vt1.c0)/('-1e500')), vt1.c0)) AND (((((vt1.c0))!=((vt1.c0))), ((vt1.c0)%(vt1.c0)), CAST(vt1.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((CAST(vt1.c0 AS INTEGER), ((vt1.c0)/('-1e500')), vt1.c0)) AND (((((vt1.c0))<>((vt1.c0))), ((vt1.c0)%(vt1.c0)), CAST(vt1.c0 AS REAL))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((CAST(vt1.c0 AS INTEGER), ((vt1.c0)/('-1e500')), vt1.c0)) AND (((((vt1.c0))!=((vt1.c0))), ((vt1.c0)%(vt1.c0)), CAST(vt1.c0 AS REAL)))));
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((x'') ISNULL) THEN x'' END) ORDER BY ((((vt0.c0) IS TRUE)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((x'') ISNULL) THEN x'' END) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY ((((vt0.c0) IS TRUE)) NOTNULL) ASC);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((x'') ISNULL) THEN x'' END) ORDER BY ((((vt0.c0) IS TRUE)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((x'') ISNULL) THEN x'' END) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY ((((vt0.c0) IS TRUE)) NOTNULL) ASC);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((x'') ISNULL) THEN x'' END) ORDER BY ((((vt0.c0) IS TRUE)) NOTNULL) ASC;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST(CASE WHEN rt0.c2 THEN vt1.c0 END AS INTEGER)) ORDER BY -1.090413278E9 DESC  NULLS LAST, -7.66962044E8  NULLS LAST, (((CASE rt0.c2  WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c2 END, ((0X200377e3)%(vt1.c0)), (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((1.884798559E9)))))<((rt0.c0 COLLATE BINARY, LIKELY(DISTINCT NULL), ((((2.007109758E9)AND(rt0.c2)))OR(rt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c2 THEN vt1.c0 END AS INTEGER)) IS TRUE)  as count FROM rt0, vt1 ORDER BY -1.090413278E9 DESC  NULLS LAST, -7.66962044E8  NULLS LAST, (((CASE rt0.c2  WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c2 END, ((0x200377e3)%(vt1.c0)), (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((1.884798559E9)))))<((rt0.c0 COLLATE BINARY, LIKELY(DISTINCT NULL), ((((2.007109758E9)AND(rt0.c2)))OR(rt0.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST(CASE WHEN rt0.c2 THEN vt1.c0 END AS INTEGER)) ORDER BY -1.090413278E9 DESC  NULLS LAST, -7.66962044E8  NULLS LAST, (((CASE rt0.c2  WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c2 END, ((0X200377e3)%(vt1.c0)), (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((1.884798559E9)))))<((rt0.c0 COLLATE BINARY, LIKELY(DISTINCT NULL), ((((2.007109758E9)AND(rt0.c2)))OR(rt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c2 THEN vt1.c0 END AS INTEGER)) IS TRUE)  as count FROM rt0, vt1 ORDER BY -1.090413278E9 DESC  NULLS LAST, -7.66962044E8  NULLS LAST, (((CASE rt0.c2  WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c2 END, ((0x200377e3)%(vt1.c0)), (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((1.884798559E9)))))<((rt0.c0 COLLATE BINARY, LIKELY(DISTINCT NULL), ((((2.007109758E9)AND(rt0.c2)))OR(rt0.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST(CASE WHEN rt0.c2 THEN vt1.c0 END AS INTEGER)) ORDER BY -1.090413278E9 DESC  NULLS LAST, -7.66962044E8  NULLS LAST, (((CASE rt0.c2  WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c2 END, ((0X200377e3)%(vt1.c0)), (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((1.884798559E9)))))<((rt0.c0 COLLATE BINARY, LIKELY(DISTINCT NULL), ((((2.007109758E9)AND(rt0.c2)))OR(rt0.c0))))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 NOT INDEXED, vt0, vt1 WHERE (CAST(rt0.c1 COLLATE NOCASE AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL * FROM rt0 NOT INDEXED, vt0, vt1 WHERE (CAST(rt0.c1 COLLATE NOCASE AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL * FROM rt0 NOT INDEXED, vt0, vt1 WHERE (CAST(rt0.c1 COLLATE NOCASE AS REAL));
SELECT ALL COUNT(*) FROM rt1, vt0, vt1, rt0 WHERE (((((rt1.c3))>((rt1.c4))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3))>((rt1.c4))) IN ())) IS TRUE)  as count FROM rt1, vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM rt1, vt0, vt1, rt0 WHERE (((((rt1.c3))>((rt1.c4))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3))>((rt1.c4))) IN ())) IS TRUE)  as count FROM rt1, vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM rt1, vt0, vt1, rt0 WHERE (((((rt1.c3))>((rt1.c4))) IN ()));
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (CAST(((NULL)AND(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((NULL)AND(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (CAST(((NULL)AND(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((NULL)AND(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (CAST(((NULL)AND(vt0.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) ORDER BY (NOT (((vt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) ORDER BY (NOT (((vt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) ORDER BY (NOT (((vt0.c0) IS FALSE)));
SELECT * FROM rt1 WHERE ((rt1.c1 IN ())) ORDER BY x'';
SELECT SUM(count) FROM (SELECT (((rt1.c1 IN ())) IS TRUE)  as count FROM rt1 ORDER BY x'');
SELECT * FROM rt1 WHERE ((rt1.c1 IN ())) ORDER BY x'';
SELECT SUM(count) FROM (SELECT (((rt1.c1 IN ())) IS TRUE)  as count FROM rt1 ORDER BY x'');
SELECT * FROM rt1 WHERE ((rt1.c1 IN ())) ORDER BY x'';
SELECT COUNT(*) FROM vt1, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0, vt1 WHERE (((COALESCE(DISTINCT vt1.c0, x'')) BETWEEN (((((((((0.005519408521342806)OR(rt1.c0)))AND(vt0.c0)))OR(rt0.c0)))AND(rt1.c4))) AND (((((rt1.c1)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY ((CAST(rt1.c1 AS TEXT)) BETWEEN (CASE rt0.c2  WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c3 WHEN rt0.c1 THEN rt1.c1 END) AND (((((((((rt1.c1)AND(rt1.c2)))OR(rt0.c1)))AND(rt0.c0)))OR(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT vt1.c0, x'')) BETWEEN (((((((((0.005519408521342806)OR(rt1.c0)))AND(vt0.c0)))OR(rt0.c0)))AND(rt1.c4))) AND (((((rt1.c1)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM rt1, vt0, rt0, vt1 ORDER BY ((CAST(rt1.c1 AS TEXT)) BETWEEN (CASE rt0.c2  WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c3 WHEN rt0.c1 THEN rt1.c1 END) AND (((((((((rt1.c1)AND(rt1.c2)))OR(rt0.c1)))AND(rt0.c0)))OR(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0, vt1 WHERE (((COALESCE(DISTINCT vt1.c0, x'')) BETWEEN (((((((((0.005519408521342806)OR(rt1.c0)))AND(vt0.c0)))OR(rt0.c0)))AND(rt1.c4))) AND (((((rt1.c1)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY ((CAST(rt1.c1 AS TEXT)) BETWEEN (CASE rt0.c2  WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c3 WHEN rt0.c1 THEN rt1.c1 END) AND (((((((((rt1.c1)AND(rt1.c2)))OR(rt0.c1)))AND(rt0.c0)))OR(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT vt1.c0, x'')) BETWEEN (((((((((0.005519408521342806)OR(rt1.c0)))AND(vt0.c0)))OR(rt0.c0)))AND(rt1.c4))) AND (((((rt1.c1)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM rt1, vt0, rt0, vt1 ORDER BY ((CAST(rt1.c1 AS TEXT)) BETWEEN (CASE rt0.c2  WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c3 WHEN rt0.c1 THEN rt1.c1 END) AND (((((((((rt1.c1)AND(rt1.c2)))OR(rt0.c1)))AND(rt0.c0)))OR(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0, vt1 WHERE (((COALESCE(DISTINCT vt1.c0, x'')) BETWEEN (((((((((0.005519408521342806)OR(rt1.c0)))AND(vt0.c0)))OR(rt0.c0)))AND(rt1.c4))) AND (((((rt1.c1)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY ((CAST(rt1.c1 AS TEXT)) BETWEEN (CASE rt0.c2  WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c3 WHEN rt0.c1 THEN rt1.c1 END) AND (((((((((rt1.c1)AND(rt1.c2)))OR(rt0.c1)))AND(rt0.c0)))OR(vt0.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c2) NOT BETWEEN (-6.11563832E8) AND (vt0.c0)))IS((+ (rt1.c2))))) ORDER BY (NOT ((((vt0.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c3))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOT BETWEEN (-6.11563832E8) AND (vt0.c0)))IS((+ (rt1.c2))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (NOT ((((vt0.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c3))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c2) NOT BETWEEN (-6.11563832E8) AND (vt0.c0)))IS((+ (rt1.c2))))) ORDER BY (NOT ((((vt0.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c3))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOT BETWEEN (-6.11563832E8) AND (vt0.c0)))IS((+ (rt1.c2))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (NOT ((((vt0.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c3))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c2) NOT BETWEEN (-6.11563832E8) AND (vt0.c0)))IS((+ (rt1.c2))))) ORDER BY (NOT ((((vt0.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c3))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE ((rt1.c1 COLLATE RTRIM IN (rt1.c2, (((rt1.c1))<>((rt1.c1)))))) ORDER BY (((- (rt1.c1)))AND(((rt1.c3)<<(rt1.c0)))), ((((((rt1.c0)AND(rt1.c1)))AND(rt1.c1)))>((~ (rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 COLLATE RTRIM IN (rt1.c2, (((rt1.c1))<>((rt1.c1)))))) IS TRUE)  as count FROM rt1, vt1 ORDER BY (((- (rt1.c1)))AND(((rt1.c3)<<(rt1.c0)))), ((((((rt1.c0)AND(rt1.c1)))AND(rt1.c1)))>((~ (rt1.c0)))));
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE ((rt1.c1 COLLATE RTRIM IN (rt1.c2, (((rt1.c1))<>((rt1.c1)))))) ORDER BY (((- (rt1.c1)))AND(((rt1.c3)<<(rt1.c0)))), ((((((rt1.c0)AND(rt1.c1)))AND(rt1.c1)))>((~ (rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 COLLATE RTRIM IN (rt1.c2, (((rt1.c1))<>((rt1.c1)))))) IS TRUE)  as count FROM rt1, vt1 ORDER BY (((- (rt1.c1)))AND(((rt1.c3)<<(rt1.c0)))), ((((((rt1.c0)AND(rt1.c1)))AND(rt1.c1)))>((~ (rt1.c0)))));
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE ((rt1.c1 COLLATE RTRIM IN (rt1.c2, (((rt1.c1))<>((rt1.c1)))))) ORDER BY (((- (rt1.c1)))AND(((rt1.c3)<<(rt1.c0)))), ((((((rt1.c0)AND(rt1.c1)))AND(rt1.c1)))>((~ (rt1.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (RTRIM((~ (vt0.c0)))) ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('1029419421')));
SELECT SUM(count) FROM (SELECT ALL ((RTRIM((~ (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('1029419421'))));
SELECT ALL COUNT(*) FROM vt0 WHERE (RTRIM((~ (vt0.c0)))) ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('1029419421')));
SELECT SUM(count) FROM (SELECT ALL ((RTRIM((~ (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('1029419421'))));
SELECT ALL COUNT(*) FROM vt0 WHERE (RTRIM((~ (vt0.c0)))) ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('1029419421')));
SELECT ALL COUNT(*) FROM vt1 WHERE (((SQLITE_COMPILEOPTION_GET(vt1.c0))IS NOT(vt1.c0 COLLATE RTRIM))) ORDER BY ((((vt1.c0)AND(vt1.c0)))OR(-314321855)) COLLATE RTRIM ASC  NULLS FIRST, ((vt1.c0 COLLATE BINARY)LIKE(COALESCE(NULL, vt1.c0))) DESC  NULLS LAST, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))+(vt1.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_COMPILEOPTION_GET(vt1.c0))IS NOT(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)AND(vt1.c0)))OR(-314321855)) COLLATE RTRIM ASC  NULLS FIRST, ((vt1.c0 COLLATE BINARY)LIKE(COALESCE(NULL, vt1.c0))) DESC  NULLS LAST, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))+(vt1.c0 COLLATE BINARY)) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((SQLITE_COMPILEOPTION_GET(vt1.c0))IS NOT(vt1.c0 COLLATE RTRIM))) ORDER BY ((((vt1.c0)AND(vt1.c0)))OR(-314321855)) COLLATE RTRIM ASC  NULLS FIRST, ((vt1.c0 COLLATE BINARY)LIKE(COALESCE(NULL, vt1.c0))) DESC  NULLS LAST, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))+(vt1.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_COMPILEOPTION_GET(vt1.c0))IS NOT(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)AND(vt1.c0)))OR(-314321855)) COLLATE RTRIM ASC  NULLS FIRST, ((vt1.c0 COLLATE BINARY)LIKE(COALESCE(NULL, vt1.c0))) DESC  NULLS LAST, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))+(vt1.c0 COLLATE BINARY)) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((SQLITE_COMPILEOPTION_GET(vt1.c0))IS NOT(vt1.c0 COLLATE RTRIM))) ORDER BY ((((vt1.c0)AND(vt1.c0)))OR(-314321855)) COLLATE RTRIM ASC  NULLS FIRST, ((vt1.c0 COLLATE BINARY)LIKE(COALESCE(NULL, vt1.c0))) DESC  NULLS LAST, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))+(vt1.c0 COLLATE BINARY)) ASC;
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON SQLITE_VERSION() INNER JOIN vt0 ON (~ (((rt1.c1) NOT NULL))) WHERE ((- (((rt0.c1) BETWEEN (rt1.c2) AND (rt1.c4))))) ORDER BY ((('It\r')) BETWEEN ((((((rt0.c2)OR(vt0.c0)))AND(rt1.c1)))) AND (((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c1) BETWEEN (rt1.c2) AND (rt1.c4))))) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON SQLITE_VERSION() INNER JOIN vt0 ON (~ (((rt1.c1) NOT NULL))) ORDER BY ((('It\r')) BETWEEN ((((((rt0.c2)OR(vt0.c0)))AND(rt1.c1)))) AND (((rt0.c1 IN ())))));
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON SQLITE_VERSION() INNER JOIN vt0 ON (~ (((rt1.c1) NOT NULL))) WHERE ((- (((rt0.c1) BETWEEN (rt1.c2) AND (rt1.c4))))) ORDER BY ((('It\r')) BETWEEN ((((((rt0.c2)OR(vt0.c0)))AND(rt1.c1)))) AND (((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c1) BETWEEN (rt1.c2) AND (rt1.c4))))) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON SQLITE_VERSION() INNER JOIN vt0 ON (~ (((rt1.c1) NOT NULL))) ORDER BY ((('It\r')) BETWEEN ((((((rt0.c2)OR(vt0.c0)))AND(rt1.c1)))) AND (((rt0.c1 IN ())))));
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON SQLITE_VERSION() INNER JOIN vt0 ON (~ (((rt1.c1) NOT NULL))) WHERE ((- (((rt0.c1) BETWEEN (rt1.c2) AND (rt1.c4))))) ORDER BY ((('It\r')) BETWEEN ((((((rt0.c2)OR(vt0.c0)))AND(rt1.c1)))) AND (((rt0.c1 IN ()))));
SELECT COUNT(*) FROM rt1, vt0 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (rt1.c1);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (vt1.c0) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY vt1.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (vt1.c0) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY vt1.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (vt1.c0) ORDER BY vt1.c0  NULLS LAST;
SELECT COUNT(*) FROM vt1, rt0, rt1 WHERE (((((vt1.c0)AND(rt1.c0))) BETWEEN (((rt0.c2) NOT BETWEEN (x'') AND (rt0.c0))) AND (((((((((rt1.c4)AND(vt1.c0)))OR(rt0.c1)))OR(rt1.c0)))OR(x'd7da')))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)AND(rt1.c0))) BETWEEN (((rt0.c2) NOT BETWEEN (x'') AND (rt0.c0))) AND (((((((((rt1.c4)AND(vt1.c0)))OR(rt0.c1)))OR(rt1.c0)))OR(x'd7da'))))) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT COUNT(*) FROM vt1, rt0, rt1 WHERE (((((vt1.c0)AND(rt1.c0))) BETWEEN (((rt0.c2) NOT BETWEEN (x'') AND (rt0.c0))) AND (((((((((rt1.c4)AND(vt1.c0)))OR(rt0.c1)))OR(rt1.c0)))OR(x'd7da')))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)AND(rt1.c0))) BETWEEN (((rt0.c2) NOT BETWEEN (x'') AND (rt0.c0))) AND (((((((((rt1.c4)AND(vt1.c0)))OR(rt0.c1)))OR(rt1.c0)))OR(x'd7da'))))) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT COUNT(*) FROM vt1, rt0, rt1 WHERE (((((vt1.c0)AND(rt1.c0))) BETWEEN (((rt0.c2) NOT BETWEEN (x'') AND (rt0.c0))) AND (((((((((rt1.c4)AND(vt1.c0)))OR(rt0.c1)))OR(rt1.c0)))OR(x'd7da')))));
SELECT ALL * FROM vt1 WHERE (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE) ORDER BY (~ (vt1.c0)) COLLATE BINARY ASC, ((((vt1.c0)IS(vt1.c0)))%(((vt1.c0)LIKE(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY (~ (vt1.c0)) COLLATE BINARY ASC, ((((vt1.c0)IS(vt1.c0)))%(((vt1.c0)LIKE(vt1.c0)))) DESC);
SELECT ALL * FROM vt1 WHERE (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE) ORDER BY (~ (vt1.c0)) COLLATE BINARY ASC, ((((vt1.c0)IS(vt1.c0)))%(((vt1.c0)LIKE(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY (~ (vt1.c0)) COLLATE BINARY ASC, ((((vt1.c0)IS(vt1.c0)))%(((vt1.c0)LIKE(vt1.c0)))) DESC);
SELECT ALL * FROM vt1 WHERE (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE) ORDER BY (~ (vt1.c0)) COLLATE BINARY ASC, ((((vt1.c0)IS(vt1.c0)))%(((vt1.c0)LIKE(vt1.c0)))) DESC;
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c0))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (vt0.c0 COLLATE BINARY) AND (1467740107)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL)) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (vt0.c0 COLLATE BINARY) AND (1467740107)) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c0))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (vt0.c0 COLLATE BINARY) AND (1467740107)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL)) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (vt0.c0 COLLATE BINARY) AND (1467740107)) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c0))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (vt0.c0 COLLATE BINARY) AND (1467740107)) ASC  NULLS FIRST;
SELECT * FROM rt1, rt0, vt0, vt1 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM rt1, rt0, vt0, vt1);
SELECT * FROM rt1, rt0, vt0, vt1 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM rt1, rt0, vt0, vt1);
SELECT * FROM rt1, rt0, vt0, vt1 WHERE ((NULL IN ()));
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c1  WHEN '-848374811' THEN rt0.c0 ELSE rt0.c2 END)%(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN '-848374811' THEN rt0.c0 ELSE rt0.c2 END)%(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c1  WHEN '-848374811' THEN rt0.c0 ELSE rt0.c2 END)%(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN '-848374811' THEN rt0.c0 ELSE rt0.c2 END)%(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c1  WHEN '-848374811' THEN rt0.c0 ELSE rt0.c2 END)%(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)));
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((vt0.c0)IS NOT(vt0.c0)))))) ORDER BY ((((((((((vt0.c0)+(vt0.c0)))AND(0.7183575817836526)))OR((- (vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)IS(vt0.c0))))  NULLS LAST, 0.7766166437120268  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((vt0.c0)IS NOT(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)+(vt0.c0)))AND(0.7183575817836526)))OR((- (vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)IS(vt0.c0))))  NULLS LAST, 0.7766166437120268  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((vt0.c0)IS NOT(vt0.c0)))))) ORDER BY ((((((((((vt0.c0)+(vt0.c0)))AND(0.7183575817836526)))OR((- (vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)IS(vt0.c0))))  NULLS LAST, 0.7766166437120268  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((vt0.c0)IS NOT(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)+(vt0.c0)))AND(0.7183575817836526)))OR((- (vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)IS(vt0.c0))))  NULLS LAST, 0.7766166437120268  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((vt0.c0)IS NOT(vt0.c0)))))) ORDER BY ((((((((((vt0.c0)+(vt0.c0)))AND(0.7183575817836526)))OR((- (vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)IS(vt0.c0))))  NULLS LAST, 0.7766166437120268  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt1, vt1, rt0 WHERE ((((rt1.c2)) NOT BETWEEN (((+ (rt1.c4)))) AND (((+ (rt1.c0)))))) ORDER BY '826949355' DESC  NULLS LAST, (((rt1.c3 IN ()))<=(((vt0.c0)!=(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) NOT BETWEEN (((+ (rt1.c4)))) AND (((+ (rt1.c0)))))) IS TRUE)  as count FROM vt0, rt1, vt1, rt0 ORDER BY '826949355' DESC  NULLS LAST, (((rt1.c3 IN ()))<=(((vt0.c0)<>(rt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt1, vt1, rt0 WHERE ((((rt1.c2)) NOT BETWEEN (((+ (rt1.c4)))) AND (((+ (rt1.c0)))))) ORDER BY '826949355' DESC  NULLS LAST, (((rt1.c3 IN ()))<=(((vt0.c0)!=(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) NOT BETWEEN (((+ (rt1.c4)))) AND (((+ (rt1.c0)))))) IS TRUE)  as count FROM vt0, rt1, vt1, rt0 ORDER BY '826949355' DESC  NULLS LAST, (((rt1.c3 IN ()))<=(((vt0.c0)<>(rt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt1, vt1, rt0 WHERE ((((rt1.c2)) NOT BETWEEN (((+ (rt1.c4)))) AND (((+ (rt1.c0)))))) ORDER BY '826949355' DESC  NULLS LAST, (((rt1.c3 IN ()))<=(((vt0.c0)!=(rt0.c0)))) ASC;
SELECT * FROM rt1, rt0, vt0 WHERE (((((((0.08271731164276541)AND(rt0.c0)))OR(rt1.c4))) BETWEEN (((((rt1.c3)AND(rt1.c4)))AND(rt1.c1))) AND (0Xffffffffd7547582)));
SELECT SUM(count) FROM (SELECT ((((((((0.08271731164276541)AND(rt0.c0)))OR(rt1.c4))) BETWEEN (((((rt1.c3)AND(rt1.c4)))AND(rt1.c1))) AND (0Xffffffffd7547582))) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT * FROM rt1, rt0, vt0 WHERE (((((((0.08271731164276541)AND(rt0.c0)))OR(rt1.c4))) BETWEEN (((((rt1.c3)AND(rt1.c4)))AND(rt1.c1))) AND (0Xffffffffd7547582)));
SELECT SUM(count) FROM (SELECT ((((((((0.08271731164276541)AND(rt0.c0)))OR(rt1.c4))) BETWEEN (((((rt1.c3)AND(rt1.c4)))AND(rt1.c1))) AND (0Xffffffffd7547582))) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT * FROM rt1, rt0, vt0 WHERE (((((((0.08271731164276541)AND(rt0.c0)))OR(rt1.c4))) BETWEEN (((((rt1.c3)AND(rt1.c4)))AND(rt1.c1))) AND (0Xffffffffd7547582)));
SELECT ALL COUNT(*) FROM vt0, rt1, vt1 WHERE ((((rt1.c0, rt1.c2, vt0.c0)) NOT BETWEEN ((((((rt1.c3)OR(vt1.c0)))OR(rt1.c4)), ((((((((rt1.c0)OR(rt1.c0)))AND(vt1.c0)))OR(rt1.c3)))AND(rt1.c3)), vt1.c0)) AND ((rt1.c3, load_extension(rt1.c4, rt1.c0), -1353286252))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0, rt1.c2, vt0.c0)) NOT BETWEEN ((((((rt1.c3)OR(vt1.c0)))OR(rt1.c4)), ((((((((rt1.c0)OR(rt1.c0)))AND(vt1.c0)))OR(rt1.c3)))AND(rt1.c3)), vt1.c0)) AND ((rt1.c3, load_extension(rt1.c4, rt1.c0), -1353286252)))) IS TRUE)  as count FROM vt0, rt1, vt1);
SELECT ALL COUNT(*) FROM vt0, rt1, vt1 WHERE ((((rt1.c0, rt1.c2, vt0.c0)) NOT BETWEEN ((((((rt1.c3)OR(vt1.c0)))OR(rt1.c4)), ((((((((rt1.c0)OR(rt1.c0)))AND(vt1.c0)))OR(rt1.c3)))AND(rt1.c3)), vt1.c0)) AND ((rt1.c3, load_extension(rt1.c4, rt1.c0), -1353286252))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0, rt1.c2, vt0.c0)) NOT BETWEEN ((((((rt1.c3)OR(vt1.c0)))OR(rt1.c4)), ((((((((rt1.c0)OR(rt1.c0)))AND(vt1.c0)))OR(rt1.c3)))AND(rt1.c3)), vt1.c0)) AND ((rt1.c3, load_extension(rt1.c4, rt1.c0), -1353286252)))) IS TRUE)  as count FROM vt0, rt1, vt1);
SELECT ALL COUNT(*) FROM vt0, rt1, vt1 WHERE ((((rt1.c0, rt1.c2, vt0.c0)) NOT BETWEEN ((((((rt1.c3)OR(vt1.c0)))OR(rt1.c4)), ((((((((rt1.c0)OR(rt1.c0)))AND(vt1.c0)))OR(rt1.c3)))AND(rt1.c3)), vt1.c0)) AND ((rt1.c3, load_extension(rt1.c4, rt1.c0), -1353286252))));
SELECT COUNT(*) FROM rt1, vt1 WHERE (CAST(rt1.c1 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c1 AS REAL)) IS TRUE)  as count FROM rt1, vt1);
SELECT COUNT(*) FROM rt1, vt1 WHERE (CAST(rt1.c1 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c1 AS REAL)) IS TRUE)  as count FROM rt1, vt1);
SELECT COUNT(*) FROM rt1, vt1 WHERE (CAST(rt1.c1 AS REAL));
SELECT ALL * FROM rt1, rt0, vt1 WHERE (((((0.5931188231166673) BETWEEN (rt1.c4) AND (rt1.c3)))<>(NULL COLLATE RTRIM))) ORDER BY (((rt1.c1))<((json_array_length(rt0.c1)))) ASC, CAST(((rt1.c2)>>(rt1.c2)) AS REAL), (NOT ((((rt1.c1))<=((rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.5931188231166673) BETWEEN (rt1.c4) AND (rt1.c3)))!=(NULL COLLATE RTRIM))) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY (((rt1.c1))<((json_array_length(rt0.c1)))) ASC, CAST(((rt1.c2)>>(rt1.c2)) AS REAL), (NOT ((((rt1.c1))<=((rt0.c0))))) DESC);
SELECT ALL * FROM rt1, rt0, vt1 WHERE (((((0.5931188231166673) BETWEEN (rt1.c4) AND (rt1.c3)))<>(NULL COLLATE RTRIM))) ORDER BY (((rt1.c1))<((json_array_length(rt0.c1)))) ASC, CAST(((rt1.c2)>>(rt1.c2)) AS REAL), (NOT ((((rt1.c1))<=((rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.5931188231166673) BETWEEN (rt1.c4) AND (rt1.c3)))!=(NULL COLLATE RTRIM))) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY (((rt1.c1))<((json_array_length(rt0.c1)))) ASC, CAST(((rt1.c2)>>(rt1.c2)) AS REAL), (NOT ((((rt1.c1))<=((rt0.c0))))) DESC);
SELECT ALL * FROM rt1, rt0, vt1 WHERE (((((0.5931188231166673) BETWEEN (rt1.c4) AND (rt1.c3)))<>(NULL COLLATE RTRIM))) ORDER BY (((rt1.c1))<((json_array_length(rt0.c1)))) ASC, CAST(((rt1.c2)>>(rt1.c2)) AS REAL), (NOT ((((rt1.c1))<=((rt0.c0))))) DESC;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((((rt1.c1)AND(rt1.c1)))AND(rt1.c4)))OR(rt1.c1)))OR(rt1.c4))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c1)AND(rt1.c1)))AND(rt1.c4)))OR(rt1.c1)))OR(rt1.c4))) NOT NULL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((((rt1.c1)AND(rt1.c1)))AND(rt1.c4)))OR(rt1.c1)))OR(rt1.c4))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c1)AND(rt1.c1)))AND(rt1.c4)))OR(rt1.c1)))OR(rt1.c4))) NOT NULL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((((rt1.c1)AND(rt1.c1)))AND(rt1.c4)))OR(rt1.c1)))OR(rt1.c4))) NOT NULL));
SELECT ALL * FROM rt1, vt0, vt1 WHERE (((((vt1.c0) NOTNULL))||((((vt0.c0))<=((vt1.c0)))))) ORDER BY (NOT (rt1.c3)) COLLATE BINARY, (NOT (((rt1.c1)+('-1061811222'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOTNULL))||((((vt0.c0))<=((vt1.c0)))))) IS TRUE)  as count FROM rt1, vt0, vt1 ORDER BY (NOT (rt1.c3)) COLLATE BINARY, (NOT (((rt1.c1)+('-1061811222'))))  NULLS FIRST);
SELECT ALL * FROM rt1, vt0, vt1 WHERE (((((vt1.c0) NOTNULL))||((((vt0.c0))<=((vt1.c0)))))) ORDER BY (NOT (rt1.c3)) COLLATE BINARY, (NOT (((rt1.c1)+('-1061811222'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOTNULL))||((((vt0.c0))<=((vt1.c0)))))) IS TRUE)  as count FROM rt1, vt0, vt1 ORDER BY (NOT (rt1.c3)) COLLATE BINARY, (NOT (((rt1.c1)+('-1061811222'))))  NULLS FIRST);
SELECT ALL * FROM rt1, vt0, vt1 WHERE (((((vt1.c0) NOTNULL))||((((vt0.c0))<=((vt1.c0)))))) ORDER BY (NOT (rt1.c3)) COLLATE BINARY, (NOT (((rt1.c1)+('-1061811222'))))  NULLS FIRST;
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c0)+(rt1.c1)))AND(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)+(rt1.c1)))AND(x''))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c0)+(rt1.c1)))AND(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)+(rt1.c1)))AND(x''))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c0)+(rt1.c1)))AND(x'')));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN rt1 ON ((0.7097571534487711)<=(CASE WHEN rt0.c2 THEN rt1.c3 ELSE '-1142658346' END)) WHERE (CASE (+ (rt1.c3))  WHEN rt1.c2 THEN CAST(rt1.c1 AS BLOB) ELSE NULLIF(rt1.c4, rt1.c4) END);
SELECT SUM(count) FROM (SELECT ((CASE (+ (rt1.c3))  WHEN rt1.c2 THEN CAST(rt1.c1 AS BLOB) ELSE NULLIF(rt1.c4, rt1.c4) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON ((0.7097571534487711)<=(CASE WHEN rt0.c2 THEN rt1.c3 ELSE '-1142658346' END)));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN rt1 ON ((0.7097571534487711)<=(CASE WHEN rt0.c2 THEN rt1.c3 ELSE '-1142658346' END)) WHERE (CASE (+ (rt1.c3))  WHEN rt1.c2 THEN CAST(rt1.c1 AS BLOB) ELSE NULLIF(rt1.c4, rt1.c4) END);
SELECT SUM(count) FROM (SELECT ((CASE (+ (rt1.c3))  WHEN rt1.c2 THEN CAST(rt1.c1 AS BLOB) ELSE NULLIF(rt1.c4, rt1.c4) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON ((0.7097571534487711)<=(CASE WHEN rt0.c2 THEN rt1.c3 ELSE '-1142658346' END)));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN rt1 ON ((0.7097571534487711)<=(CASE WHEN rt0.c2 THEN rt1.c3 ELSE '-1142658346' END)) WHERE (CASE (+ (rt1.c3))  WHEN rt1.c2 THEN CAST(rt1.c1 AS BLOB) ELSE NULLIF(rt1.c4, rt1.c4) END);
SELECT ALL * FROM vt0, vt1, rt1 WHERE (((((rt1.c3)) NOT BETWEEN ((vt1.c0)) AND (('weekday0uLO'))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)) NOT BETWEEN ((vt1.c0)) AND (('weekday0uLO'))) IN ())) IS TRUE)  as count FROM vt0, vt1, rt1);
SELECT ALL * FROM vt0, vt1, rt1 WHERE (((((rt1.c3)) NOT BETWEEN ((vt1.c0)) AND (('weekday0uLO'))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)) NOT BETWEEN ((vt1.c0)) AND (('weekday0uLO'))) IN ())) IS TRUE)  as count FROM vt0, vt1, rt1);
SELECT ALL * FROM vt0, vt1, rt1 WHERE (((((rt1.c3)) NOT BETWEEN ((vt1.c0)) AND (('weekday0uLO'))) IN ()));
SELECT ALL * FROM vt1, rt0, vt0 WHERE (CAST(vt1.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS BLOB)) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 WHERE (CAST(vt1.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS BLOB)) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 WHERE (CAST(vt1.c0 AS BLOB));
SELECT ALL * FROM vt1 WHERE (((((((((vt1.c0 COLLATE RTRIM)AND((+ (vt1.c0)))))AND(CAST(vt1.c0 AS REAL))))OR(((vt1.c0)>('1278956359')))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY 5.98146009E8 DESC  NULLS LAST, CAST(vt1.c0 COLLATE NOCASE AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0 COLLATE RTRIM)AND((+ (vt1.c0)))))AND(CAST(vt1.c0 AS REAL))))OR(((vt1.c0)>('1278956359')))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY 5.98146009E8 DESC  NULLS LAST, CAST(vt1.c0 COLLATE NOCASE AS REAL)  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((((((vt1.c0 COLLATE RTRIM)AND((+ (vt1.c0)))))AND(CAST(vt1.c0 AS REAL))))OR(((vt1.c0)>('1278956359')))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY 5.98146009E8 DESC  NULLS LAST, CAST(vt1.c0 COLLATE NOCASE AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0 COLLATE RTRIM)AND((+ (vt1.c0)))))AND(CAST(vt1.c0 AS REAL))))OR(((vt1.c0)>('1278956359')))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY 5.98146009E8 DESC  NULLS LAST, CAST(vt1.c0 COLLATE NOCASE AS REAL)  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((((((vt1.c0 COLLATE RTRIM)AND((+ (vt1.c0)))))AND(CAST(vt1.c0 AS REAL))))OR(((vt1.c0)>('1278956359')))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY 5.98146009E8 DESC  NULLS LAST, CAST(vt1.c0 COLLATE NOCASE AS REAL)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE ((((NOT (rt0.c2)))<=(TOTAL_CHANGES()))) ORDER BY (CASE '.ၾjUfo'  WHEN rt0.c0 THEN rt1.c0 END IN ());
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c2)))<=(TOTAL_CHANGES()))) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY (CASE '.ၾjUfo'  WHEN rt0.c0 THEN rt1.c0 END IN ()));
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE ((((NOT (rt0.c2)))<=(TOTAL_CHANGES()))) ORDER BY (CASE '.ၾjUfo'  WHEN rt0.c0 THEN rt1.c0 END IN ());
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c2)))<=(TOTAL_CHANGES()))) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY (CASE '.ၾjUfo'  WHEN rt0.c0 THEN rt1.c0 END IN ()));
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE ((((NOT (rt0.c2)))<=(TOTAL_CHANGES()))) ORDER BY (CASE '.ၾjUfo'  WHEN rt0.c0 THEN rt1.c0 END IN ());
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((~ (SQLITE_SOURCE_ID())));
SELECT SUM(count) FROM (SELECT (((~ (SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((~ (SQLITE_SOURCE_ID())));
SELECT SUM(count) FROM (SELECT (((~ (SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((~ (SQLITE_SOURCE_ID())));
SELECT * FROM rt1, vt1, rt0, vt0 WHERE ((NOT (CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt1, vt1, rt0, vt0);
SELECT * FROM rt1, vt1, rt0, vt0 WHERE ((NOT (CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt1, vt1, rt0, vt0);
SELECT * FROM rt1, vt1, rt0, vt0 WHERE ((NOT (CAST(vt0.c0 AS BLOB))));
SELECT ALL * FROM rt0, rt1, vt1, vt0 WHERE ((NOT ((((rt1.c3)) BETWEEN ((rt0.c2)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((rt1.c3)) BETWEEN ((rt0.c2)) AND ((vt1.c0)))))) IS TRUE)  as count FROM rt0, rt1, vt1, vt0);
SELECT ALL * FROM rt0, rt1, vt1, vt0 WHERE ((NOT ((((rt1.c3)) BETWEEN ((rt0.c2)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((rt1.c3)) BETWEEN ((rt0.c2)) AND ((vt1.c0)))))) IS TRUE)  as count FROM rt0, rt1, vt1, vt0);
SELECT ALL * FROM rt0, rt1, vt1, vt0 WHERE ((NOT ((((rt1.c3)) BETWEEN ((rt0.c2)) AND ((vt1.c0))))));
SELECT COUNT(*) FROM vt0, rt0 NATURAL JOIN rt1 WHERE (((((((rt1.c4) NOTNULL))OR(rt0.c2 COLLATE NOCASE)))AND((rt0.c2 IN ())))) ORDER BY ((((rt0.c0)AND(((rt0.c1)||(rt1.c3)))))AND(0.11569180969752768)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c4) NOTNULL))OR(rt0.c2 COLLATE NOCASE)))AND((rt0.c2 IN ())))) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN rt1 ORDER BY ((((rt0.c0)AND(((rt0.c1)||(rt1.c3)))))AND(0.11569180969752768)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 NATURAL JOIN rt1 WHERE (((((((rt1.c4) NOTNULL))OR(rt0.c2 COLLATE NOCASE)))AND((rt0.c2 IN ())))) ORDER BY ((((rt0.c0)AND(((rt0.c1)||(rt1.c3)))))AND(0.11569180969752768)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c4) NOTNULL))OR(rt0.c2 COLLATE NOCASE)))AND((rt0.c2 IN ())))) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN rt1 ORDER BY ((((rt0.c0)AND(((rt0.c1)||(rt1.c3)))))AND(0.11569180969752768)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 NATURAL JOIN rt1 WHERE (((((((rt1.c4) NOTNULL))OR(rt0.c2 COLLATE NOCASE)))AND((rt0.c2 IN ())))) ORDER BY ((((rt0.c0)AND(((rt0.c1)||(rt1.c3)))))AND(0.11569180969752768)) ASC  NULLS FIRST;
SELECT * FROM vt1, rt1, rt0 WHERE ((+ (((vt1.c0)IS(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt1.c0)IS(rt1.c2))))) IS TRUE)  as count FROM vt1, rt1, rt0);
SELECT * FROM vt1, rt1, rt0 WHERE ((+ (((vt1.c0)IS(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt1.c0)IS(rt1.c2))))) IS TRUE)  as count FROM vt1, rt1, rt0);
SELECT * FROM vt1, rt1, rt0 WHERE ((+ (((vt1.c0)IS(rt1.c2)))));
SELECT ALL * FROM rt1 WHERE ((- ((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((NULL IN ())))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((- ((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((NULL IN ())))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((- ((NULL IN ()))));
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT * FROM rt1, rt0, vt0, vt1 WHERE (((((vt1.c0)=(0xffffffffbe21c3df))) BETWEEN (((('343422393', vt1.c0, vt0.c0)) BETWEEN ((vt0.c0, rt1.c1, rt0.c2)) AND ((vt0.c0, vt0.c0, vt1.c0)))) AND (((vt1.c0) NOT BETWEEN (0Xffffffffe11e1533) AND (rt1.c0))))) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)=(0Xffffffffbe21c3df))) BETWEEN (((('343422393', vt1.c0, vt0.c0)) BETWEEN ((vt0.c0, rt1.c1, rt0.c2)) AND ((vt0.c0, vt0.c0, vt1.c0)))) AND (((vt1.c0) NOT BETWEEN (0xffffffffe11e1533) AND (rt1.c0))))) IS TRUE)  as count FROM rt1, rt0, vt0, vt1 ORDER BY x'' ASC);
SELECT * FROM rt1, rt0, vt0, vt1 WHERE (((((vt1.c0)=(0xffffffffbe21c3df))) BETWEEN (((('343422393', vt1.c0, vt0.c0)) BETWEEN ((vt0.c0, rt1.c1, rt0.c2)) AND ((vt0.c0, vt0.c0, vt1.c0)))) AND (((vt1.c0) NOT BETWEEN (0Xffffffffe11e1533) AND (rt1.c0))))) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)=(0Xffffffffbe21c3df))) BETWEEN (((('343422393', vt1.c0, vt0.c0)) BETWEEN ((vt0.c0, rt1.c1, rt0.c2)) AND ((vt0.c0, vt0.c0, vt1.c0)))) AND (((vt1.c0) NOT BETWEEN (0xffffffffe11e1533) AND (rt1.c0))))) IS TRUE)  as count FROM rt1, rt0, vt0, vt1 ORDER BY x'' ASC);
SELECT * FROM rt1, rt0, vt0, vt1 WHERE (((((vt1.c0)=(0xffffffffbe21c3df))) BETWEEN (((('343422393', vt1.c0, vt0.c0)) BETWEEN ((vt0.c0, rt1.c1, rt0.c2)) AND ((vt0.c0, vt0.c0, vt1.c0)))) AND (((vt1.c0) NOT BETWEEN (0Xffffffffe11e1533) AND (rt1.c0))))) ORDER BY x'' ASC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) ORDER BY LIKELY(DISTINCT x''), (((vt1.c0 IN ())) NOT BETWEEN ((((vt1.c0, vt1.c0, 0.06281992015369875)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt0.c0)))) AND (((vt1.c0) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY LIKELY(DISTINCT x''), (((vt1.c0 IN ())) NOT BETWEEN ((((vt1.c0, vt1.c0, 0.06281992015369875)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt0.c0)))) AND (((vt1.c0) ISNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) ORDER BY LIKELY(DISTINCT x''), (((vt1.c0 IN ())) NOT BETWEEN ((((vt1.c0, vt1.c0, 0.06281992015369875)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt0.c0)))) AND (((vt1.c0) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY LIKELY(DISTINCT x''), (((vt1.c0 IN ())) NOT BETWEEN ((((vt1.c0, vt1.c0, 0.06281992015369875)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt0.c0)))) AND (((vt1.c0) ISNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) ORDER BY LIKELY(DISTINCT x''), (((vt1.c0 IN ())) NOT BETWEEN ((((vt1.c0, vt1.c0, 0.06281992015369875)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt0.c0)))) AND (((vt1.c0) ISNULL)))  NULLS LAST;
SELECT COUNT(*) FROM rt1, vt0, vt1, rt0 WHERE ((NULL IN ((rt1.c1 IN ()), ((rt1.c1)=(vt1.c0))))) ORDER BY CASE WHEN vt0.c0 THEN rt0.c0 END COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ((rt1.c1 IN ()), ((rt1.c1)=(vt1.c0))))) IS TRUE)  as count FROM rt1, vt0, vt1, rt0 ORDER BY CASE WHEN vt0.c0 THEN rt0.c0 END COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0, vt1, rt0 WHERE ((NULL IN ((rt1.c1 IN ()), ((rt1.c1)=(vt1.c0))))) ORDER BY CASE WHEN vt0.c0 THEN rt0.c0 END COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ((rt1.c1 IN ()), ((rt1.c1)=(vt1.c0))))) IS TRUE)  as count FROM rt1, vt0, vt1, rt0 ORDER BY CASE WHEN vt0.c0 THEN rt0.c0 END COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0, vt1, rt0 WHERE ((NULL IN ((rt1.c1 IN ()), ((rt1.c1)=(vt1.c0))))) ORDER BY CASE WHEN vt0.c0 THEN rt0.c0 END COLLATE BINARY  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0, rt1 WHERE ((((vt0.c0 IN ())) BETWEEN (((((vt1.c0)AND(rt1.c3)))OR(NULL))) AND (x'')));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) BETWEEN (((((vt1.c0)AND(rt1.c3)))OR(NULL))) AND (x''))) IS TRUE)  as count FROM vt1, vt0, rt1);
SELECT COUNT(*) FROM vt1, vt0, rt1 WHERE ((((vt0.c0 IN ())) BETWEEN (((((vt1.c0)AND(rt1.c3)))OR(NULL))) AND (x'')));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) BETWEEN (((((vt1.c0)AND(rt1.c3)))OR(NULL))) AND (x''))) IS TRUE)  as count FROM vt1, vt0, rt1);
SELECT COUNT(*) FROM vt1, vt0, rt1 WHERE ((((vt0.c0 IN ())) BETWEEN (((((vt1.c0)AND(rt1.c3)))OR(NULL))) AND (x'')));
SELECT * FROM vt0, rt1 FULL OUTER JOIN vt1 ON '' WHERE (((CAST(vt0.c0 AS BLOB))|(((rt1.c3)!=(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB))|(((rt1.c3)<>(rt1.c0))))) IS TRUE)  as count FROM vt0, rt1 FULL OUTER JOIN vt1 ON '');
SELECT * FROM vt0, rt1 FULL OUTER JOIN vt1 ON '' WHERE (((CAST(vt0.c0 AS BLOB))|(((rt1.c3)!=(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB))|(((rt1.c3)<>(rt1.c0))))) IS TRUE)  as count FROM vt0, rt1 FULL OUTER JOIN vt1 ON '');
SELECT * FROM vt0, rt1 FULL OUTER JOIN vt1 ON '' WHERE (((CAST(vt0.c0 AS BLOB))|(((rt1.c3)!=(rt1.c0)))));
SELECT ALL * FROM rt0, vt1, rt1 WHERE (((((rt1.c1) NOTNULL))>=(((vt1.c0)==(vt1.c0))))) ORDER BY ((((rt1.c4) BETWEEN (rt0.c2) AND (rt0.c2)))LIKE(((rt1.c3) ISNULL))), CAST(((rt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) NOTNULL))>=(((vt1.c0)==(vt1.c0))))) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY ((((rt1.c4) BETWEEN (rt0.c2) AND (rt0.c2)))LIKE(((rt1.c3) ISNULL))), CAST(((rt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)) AS NUMERIC)  NULLS LAST);
SELECT ALL * FROM rt0, vt1, rt1 WHERE (((((rt1.c1) NOTNULL))>=(((vt1.c0)==(vt1.c0))))) ORDER BY ((((rt1.c4) BETWEEN (rt0.c2) AND (rt0.c2)))LIKE(((rt1.c3) ISNULL))), CAST(((rt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) NOTNULL))>=(((vt1.c0)==(vt1.c0))))) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY ((((rt1.c4) BETWEEN (rt0.c2) AND (rt0.c2)))LIKE(((rt1.c3) ISNULL))), CAST(((rt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)) AS NUMERIC)  NULLS LAST);
SELECT ALL * FROM rt0, vt1, rt1 WHERE (((((rt1.c1) NOTNULL))>=(((vt1.c0)==(vt1.c0))))) ORDER BY ((((rt1.c4) BETWEEN (rt0.c2) AND (rt0.c2)))LIKE(((rt1.c3) ISNULL))), CAST(((rt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)) AS NUMERIC)  NULLS LAST;
SELECT ALL * FROM rt1, rt0, vt0 WHERE (LOWER(((rt1.c4) NOT NULL))) ORDER BY x'' ASC  NULLS LAST, ((((vt0.c0)-(rt0.c2)))%(rt1.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((rt1.c4) NOT NULL))) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY x'' ASC  NULLS LAST, ((((vt0.c0)-(rt0.c2)))%(rt1.c2)) DESC);
SELECT ALL * FROM rt1, rt0, vt0 WHERE (LOWER(((rt1.c4) NOT NULL))) ORDER BY x'' ASC  NULLS LAST, ((((vt0.c0)-(rt0.c2)))%(rt1.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((rt1.c4) NOT NULL))) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY x'' ASC  NULLS LAST, ((((vt0.c0)-(rt0.c2)))%(rt1.c2)) DESC);
SELECT ALL * FROM rt1, rt0, vt0 WHERE (LOWER(((rt1.c4) NOT NULL))) ORDER BY x'' ASC  NULLS LAST, ((((vt0.c0)-(rt0.c2)))%(rt1.c2)) DESC;
SELECT ALL * FROM rt1, vt0, vt1, rt0 WHERE ((((rt1.c0)) BETWEEN ((load_extension(rt1.c4, rt1.c3))) AND ((((('1771432943'))==((vt1.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) BETWEEN ((load_extension(rt1.c4, rt1.c3))) AND ((((('1771432943'))==((vt1.c0))))))) IS TRUE)  as count FROM rt1, vt0, vt1, rt0);
SELECT ALL * FROM rt1, vt0, vt1, rt0 WHERE ((((rt1.c0)) BETWEEN ((load_extension(rt1.c4, rt1.c3))) AND ((((('1771432943'))==((vt1.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) BETWEEN ((load_extension(rt1.c4, rt1.c3))) AND ((((('1771432943'))==((vt1.c0))))))) IS TRUE)  as count FROM rt1, vt0, vt1, rt0);
SELECT ALL * FROM rt1, vt0, vt1, rt0 WHERE ((((rt1.c0)) BETWEEN ((load_extension(rt1.c4, rt1.c3))) AND ((((('1771432943'))==((vt1.c0)))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0) IS FALSE))OR(IFNULL(vt0.c0, vt0.c0))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0)<<(vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY (((vt0.c0)<>(vt0.c0)) IN ()) DESC, CAST((- (vt0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) IS FALSE))OR(IFNULL(vt0.c0, vt0.c0))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0)<<(vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)<>(vt0.c0)) IN ()) DESC, CAST((- (vt0.c0)) AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0) IS FALSE))OR(IFNULL(vt0.c0, vt0.c0))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0)<<(vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY (((vt0.c0)<>(vt0.c0)) IN ()) DESC, CAST((- (vt0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) IS FALSE))OR(IFNULL(vt0.c0, vt0.c0))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0)<<(vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)<>(vt0.c0)) IN ()) DESC, CAST((- (vt0.c0)) AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0) IS FALSE))OR(IFNULL(vt0.c0, vt0.c0))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0)<<(vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY (((vt0.c0)<>(vt0.c0)) IN ()) DESC, CAST((- (vt0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (vt0.c0);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (((HEX(vt0.c0), ((rt0.c2) ISNULL), json_valid(rt0.c1)))>=((CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END, (((rt0.c2, rt0.c1, rt0.c2, rt0.c1, rt0.c2))=((vt0.c0, rt0.c0, rt0.c2, rt0.c0, rt0.c2))), ((rt0.c0)IS NOT(rt0.c0))))) WHERE ((((~ (rt0.c2)))&(((vt0.c0)OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c2)))&(((vt0.c0)OR(rt0.c1))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((HEX(vt0.c0), ((rt0.c2) ISNULL), json_valid(rt0.c1)))>=((CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END, (((rt0.c2, rt0.c1, rt0.c2, rt0.c1, rt0.c2))=((vt0.c0, rt0.c0, rt0.c2, rt0.c0, rt0.c2))), ((rt0.c0)IS NOT(rt0.c0))))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (((HEX(vt0.c0), ((rt0.c2) ISNULL), json_valid(rt0.c1)))>=((CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END, (((rt0.c2, rt0.c1, rt0.c2, rt0.c1, rt0.c2))=((vt0.c0, rt0.c0, rt0.c2, rt0.c0, rt0.c2))), ((rt0.c0)IS NOT(rt0.c0))))) WHERE ((((~ (rt0.c2)))&(((vt0.c0)OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c2)))&(((vt0.c0)OR(rt0.c1))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((HEX(vt0.c0), ((rt0.c2) ISNULL), json_valid(rt0.c1)))>=((CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END, (((rt0.c2, rt0.c1, rt0.c2, rt0.c1, rt0.c2))=((vt0.c0, rt0.c0, rt0.c2, rt0.c0, rt0.c2))), ((rt0.c0)IS NOT(rt0.c0))))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (((HEX(vt0.c0), ((rt0.c2) ISNULL), json_valid(rt0.c1)))>=((CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END, (((rt0.c2, rt0.c1, rt0.c2, rt0.c1, rt0.c2))=((vt0.c0, rt0.c0, rt0.c2, rt0.c0, rt0.c2))), ((rt0.c0)IS NOT(rt0.c0))))) WHERE ((((~ (rt0.c2)))&(((vt0.c0)OR(rt0.c1)))));
SELECT ALL * FROM vt1 WHERE (CAST(QUOTE(vt1.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(QUOTE(vt1.c0) AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(QUOTE(vt1.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(QUOTE(vt1.c0) AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(QUOTE(vt1.c0) AS BLOB));
SELECT * FROM vt0, rt1 INNER JOIN vt1 ON ((NULL) NOT BETWEEN (((vt1.c0) BETWEEN (rt1.c3) AND (0.8091635043964307))) AND (((((((((rt1.c1)OR(rt1.c2)))AND(rt1.c0)))AND(vt0.c0)))OR(rt1.c0)))) CROSS JOIN rt0 ON (('-517031740')<<(CASE rt0.c0  WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c4 END)) WHERE ((- (((rt1.c0)<(rt1.c4))))) ORDER BY UPPER(rt0.c2) COLLATE NOCASE  NULLS LAST, ((((((vt1.c0)AND(rt0.c0)))OR(rt0.c1)))LIKE(vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt1.c0)<(rt1.c4))))) IS TRUE)  as count FROM vt0, rt1 INNER JOIN vt1 ON ((NULL) NOT BETWEEN (((vt1.c0) BETWEEN (rt1.c3) AND (0.8091635043964307))) AND (((((((((rt1.c1)OR(rt1.c2)))AND(rt1.c0)))AND(vt0.c0)))OR(rt1.c0)))) CROSS JOIN rt0 ON (('-517031740')<<(CASE rt0.c0  WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c4 END)) ORDER BY UPPER(rt0.c2) COLLATE NOCASE  NULLS LAST, ((((((vt1.c0)AND(rt0.c0)))OR(rt0.c1)))LIKE(vt1.c0)) ASC);
SELECT * FROM vt0, rt1 INNER JOIN vt1 ON ((NULL) NOT BETWEEN (((vt1.c0) BETWEEN (rt1.c3) AND (0.8091635043964307))) AND (((((((((rt1.c1)OR(rt1.c2)))AND(rt1.c0)))AND(vt0.c0)))OR(rt1.c0)))) CROSS JOIN rt0 ON (('-517031740')<<(CASE rt0.c0  WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c4 END)) WHERE ((- (((rt1.c0)<(rt1.c4))))) ORDER BY UPPER(rt0.c2) COLLATE NOCASE  NULLS LAST, ((((((vt1.c0)AND(rt0.c0)))OR(rt0.c1)))LIKE(vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt1.c0)<(rt1.c4))))) IS TRUE)  as count FROM vt0, rt1 INNER JOIN vt1 ON ((NULL) NOT BETWEEN (((vt1.c0) BETWEEN (rt1.c3) AND (0.8091635043964307))) AND (((((((((rt1.c1)OR(rt1.c2)))AND(rt1.c0)))AND(vt0.c0)))OR(rt1.c0)))) CROSS JOIN rt0 ON (('-517031740')<<(CASE rt0.c0  WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c4 END)) ORDER BY UPPER(rt0.c2) COLLATE NOCASE  NULLS LAST, ((((((vt1.c0)AND(rt0.c0)))OR(rt0.c1)))LIKE(vt1.c0)) ASC);
SELECT * FROM vt0, rt1 INNER JOIN vt1 ON ((NULL) NOT BETWEEN (((vt1.c0) BETWEEN (rt1.c3) AND (0.8091635043964307))) AND (((((((((rt1.c1)OR(rt1.c2)))AND(rt1.c0)))AND(vt0.c0)))OR(rt1.c0)))) CROSS JOIN rt0 ON (('-517031740')<<(CASE rt0.c0  WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c4 END)) WHERE ((- (((rt1.c0)<(rt1.c4))))) ORDER BY UPPER(rt0.c2) COLLATE NOCASE  NULLS LAST, ((((((vt1.c0)AND(rt0.c0)))OR(rt0.c1)))LIKE(vt1.c0)) ASC;
SELECT * FROM vt0, vt1, rt1 WHERE (((TOTAL_CHANGES())IS(rt1.c4 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((TOTAL_CHANGES())IS(rt1.c4 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, vt1, rt1);
SELECT * FROM vt0, vt1, rt1 WHERE (((TOTAL_CHANGES())IS(rt1.c4 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((TOTAL_CHANGES())IS(rt1.c4 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, vt1, rt1);
SELECT * FROM vt0, vt1, rt1 WHERE (((TOTAL_CHANGES())IS(rt1.c4 COLLATE NOCASE)));
SELECT * FROM rt0 WHERE ((((((NOT (rt0.c2)))OR(rt0.c0 COLLATE RTRIM)))AND(((rt0.c0)+(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (rt0.c2)))OR(rt0.c0 COLLATE RTRIM)))AND(((rt0.c0)+(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((NOT (rt0.c2)))OR(rt0.c0 COLLATE RTRIM)))AND(((rt0.c0)+(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (rt0.c2)))OR(rt0.c0 COLLATE RTRIM)))AND(((rt0.c0)+(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((NOT (rt0.c2)))OR(rt0.c0 COLLATE RTRIM)))AND(((rt0.c0)+(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((- ((((rt0.c0)) BETWEEN ((1.884798559E9)) AND ((rt0.c0)))))) ORDER BY json_array_length(((rt0.c0)||(rt0.c0)), ((rt0.c1) NOTNULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((((rt0.c0)) BETWEEN ((1.884798559E9)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY json_array_length(((rt0.c0)||(rt0.c0)), ((rt0.c1) NOTNULL))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- ((((rt0.c0)) BETWEEN ((1.884798559E9)) AND ((rt0.c0)))))) ORDER BY json_array_length(((rt0.c0)||(rt0.c0)), ((rt0.c1) NOTNULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((((rt0.c0)) BETWEEN ((1.884798559E9)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY json_array_length(((rt0.c0)||(rt0.c0)), ((rt0.c1) NOTNULL))  NULLS LAST);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt1 ON (((((((rt1.c0)AND(rt1.c3)))AND(rt1.c3)), (~ (NULL)), ((((((((rt1.c4)AND(vt1.c0)))OR(-1.105083425E9)))AND(rt1.c3)))AND(vt1.c0)), ((rt1.c2)IS NOT(0.9265742043224032)), rt1.c3))>=(((((rt1.c4))<=((rt1.c0))), ((rt1.c4) NOT BETWEEN (vt1.c0) AND (rt1.c0)), ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c3)), ((rt1.c2)>(vt1.c0)), LTRIM(rt1.c0)))) WHERE (((rt1.c1 COLLATE BINARY)*(-8.20321308E8)));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE BINARY)*(-8.20321308E8))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt1 ON (((((((rt1.c0)AND(rt1.c3)))AND(rt1.c3)), (~ (NULL)), ((((((((rt1.c4)AND(vt1.c0)))OR(-1.105083425E9)))AND(rt1.c3)))AND(vt1.c0)), ((rt1.c2)IS NOT(0.9265742043224032)), rt1.c3))>=(((((rt1.c4))<=((rt1.c0))), ((rt1.c4) NOT BETWEEN (vt1.c0) AND (rt1.c0)), ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c3)), ((rt1.c2)>(vt1.c0)), LTRIM(rt1.c0)))));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt1 ON (((((((rt1.c0)AND(rt1.c3)))AND(rt1.c3)), (~ (NULL)), ((((((((rt1.c4)AND(vt1.c0)))OR(-1.105083425E9)))AND(rt1.c3)))AND(vt1.c0)), ((rt1.c2)IS NOT(0.9265742043224032)), rt1.c3))>=(((((rt1.c4))<=((rt1.c0))), ((rt1.c4) NOT BETWEEN (vt1.c0) AND (rt1.c0)), ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c3)), ((rt1.c2)>(vt1.c0)), LTRIM(rt1.c0)))) WHERE (((rt1.c1 COLLATE BINARY)*(-8.20321308E8)));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE BINARY)*(-8.20321308E8))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt1 ON (((((((rt1.c0)AND(rt1.c3)))AND(rt1.c3)), (~ (NULL)), ((((((((rt1.c4)AND(vt1.c0)))OR(-1.105083425E9)))AND(rt1.c3)))AND(vt1.c0)), ((rt1.c2)IS NOT(0.9265742043224032)), rt1.c3))>=(((((rt1.c4))<=((rt1.c0))), ((rt1.c4) NOT BETWEEN (vt1.c0) AND (rt1.c0)), ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c3)), ((rt1.c2)>(vt1.c0)), LTRIM(rt1.c0)))));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt1 ON (((((((rt1.c0)AND(rt1.c3)))AND(rt1.c3)), (~ (NULL)), ((((((((rt1.c4)AND(vt1.c0)))OR(-1.105083425E9)))AND(rt1.c3)))AND(vt1.c0)), ((rt1.c2)IS NOT(0.9265742043224032)), rt1.c3))>=(((((rt1.c4))<=((rt1.c0))), ((rt1.c4) NOT BETWEEN (vt1.c0) AND (rt1.c0)), ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c3)), ((rt1.c2)>(vt1.c0)), LTRIM(rt1.c0)))) WHERE (((rt1.c1 COLLATE BINARY)*(-8.20321308E8)));
SELECT ALL COUNT(*) FROM rt0, rt1, vt0, vt1 WHERE (HEX(DISTINCT ((rt0.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((rt0.c1) NOT NULL))) IS TRUE)  as count FROM rt0, rt1, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0, vt1 WHERE (HEX(DISTINCT ((rt0.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((rt0.c1) NOT NULL))) IS TRUE)  as count FROM rt0, rt1, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0, vt1 WHERE (HEX(DISTINCT ((rt0.c1) NOT NULL)));
SELECT * FROM rt1 RIGHT OUTER JOIN vt1 ON ((rt0.c1 IN (rt0.c1)) IN (((rt0.c1) BETWEEN (rt1.c4) AND (rt1.c3)))) LEFT OUTER JOIN vt0 ON (((((((rt0.c2))>((vt0.c0))))AND(CAST(vt0.c0 AS INTEGER))))OR(0xffffffff8aaaeae9)) CROSS JOIN rt0 ON ((((((((((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c2)))OR(((vt0.c0)-(rt1.c3)))))AND(((rt1.c4)||(-6.11563832E8)))))OR(rt0.c0)))AND((vt0.c0 IN ()))) WHERE ((('-603251837') IS FALSE)) ORDER BY CAST(0.5854139819024703 AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((('-603251837') IS FALSE)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt1 ON ((rt0.c1 IN (rt0.c1)) IN (((rt0.c1) BETWEEN (rt1.c4) AND (rt1.c3)))) LEFT OUTER JOIN vt0 ON (((((((rt0.c2))>((vt0.c0))))AND(CAST(vt0.c0 AS INTEGER))))OR(0Xffffffff8aaaeae9)) CROSS JOIN rt0 ON ((((((((((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c2)))OR(((vt0.c0)-(rt1.c3)))))AND(((rt1.c4)||(-6.11563832E8)))))OR(rt0.c0)))AND((vt0.c0 IN ()))) ORDER BY CAST(0.5854139819024703 AS BLOB));
SELECT * FROM rt1 RIGHT OUTER JOIN vt1 ON ((rt0.c1 IN (rt0.c1)) IN (((rt0.c1) BETWEEN (rt1.c4) AND (rt1.c3)))) LEFT OUTER JOIN vt0 ON (((((((rt0.c2))>((vt0.c0))))AND(CAST(vt0.c0 AS INTEGER))))OR(0xffffffff8aaaeae9)) CROSS JOIN rt0 ON ((((((((((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c2)))OR(((vt0.c0)-(rt1.c3)))))AND(((rt1.c4)||(-6.11563832E8)))))OR(rt0.c0)))AND((vt0.c0 IN ()))) WHERE ((('-603251837') IS FALSE)) ORDER BY CAST(0.5854139819024703 AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((('-603251837') IS FALSE)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt1 ON ((rt0.c1 IN (rt0.c1)) IN (((rt0.c1) BETWEEN (rt1.c4) AND (rt1.c3)))) LEFT OUTER JOIN vt0 ON (((((((rt0.c2))>((vt0.c0))))AND(CAST(vt0.c0 AS INTEGER))))OR(0Xffffffff8aaaeae9)) CROSS JOIN rt0 ON ((((((((((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c2)))OR(((vt0.c0)-(rt1.c3)))))AND(((rt1.c4)||(-6.11563832E8)))))OR(rt0.c0)))AND((vt0.c0 IN ()))) ORDER BY CAST(0.5854139819024703 AS BLOB));
SELECT * FROM rt1 RIGHT OUTER JOIN vt1 ON ((rt0.c1 IN (rt0.c1)) IN (((rt0.c1) BETWEEN (rt1.c4) AND (rt1.c3)))) LEFT OUTER JOIN vt0 ON (((((((rt0.c2))>((vt0.c0))))AND(CAST(vt0.c0 AS INTEGER))))OR(0xffffffff8aaaeae9)) CROSS JOIN rt0 ON ((((((((((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c2)))OR(((vt0.c0)-(rt1.c3)))))AND(((rt1.c4)||(-6.11563832E8)))))OR(rt0.c0)))AND((vt0.c0 IN ()))) WHERE ((('-603251837') IS FALSE)) ORDER BY CAST(0.5854139819024703 AS BLOB);
SELECT ALL * FROM vt1, rt0 WHERE ((NOT (CAST(rt0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((NOT (CAST(rt0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((NOT (CAST(rt0.c2 AS INTEGER))));
SELECT * FROM vt0, rt0, rt1, vt1 WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((rt1.c4) NOT BETWEEN (rt1.c4) AND (vt0.c0)), CAST(rt1.c0 AS REAL)))>=((CAST(rt1.c4 AS REAL), ((rt0.c2)%(rt1.c0)), CAST(rt1.c3 AS INTEGER))))) ORDER BY rt1.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((rt1.c4) NOT BETWEEN (rt1.c4) AND (vt0.c0)), CAST(rt1.c0 AS REAL)))>=((CAST(rt1.c4 AS REAL), ((rt0.c2)%(rt1.c0)), CAST(rt1.c3 AS INTEGER))))) IS TRUE)  as count FROM vt0, rt0, rt1, vt1 ORDER BY rt1.c1 DESC  NULLS LAST);
SELECT * FROM vt0, rt0, rt1, vt1 WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((rt1.c4) NOT BETWEEN (rt1.c4) AND (vt0.c0)), CAST(rt1.c0 AS REAL)))>=((CAST(rt1.c4 AS REAL), ((rt0.c2)%(rt1.c0)), CAST(rt1.c3 AS INTEGER))))) ORDER BY rt1.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((rt1.c4) NOT BETWEEN (rt1.c4) AND (vt0.c0)), CAST(rt1.c0 AS REAL)))>=((CAST(rt1.c4 AS REAL), ((rt0.c2)%(rt1.c0)), CAST(rt1.c3 AS INTEGER))))) IS TRUE)  as count FROM vt0, rt0, rt1, vt1 ORDER BY rt1.c1 DESC  NULLS LAST);
SELECT * FROM vt0, rt0, rt1, vt1 WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((rt1.c4) NOT BETWEEN (rt1.c4) AND (vt0.c0)), CAST(rt1.c0 AS REAL)))>=((CAST(rt1.c4 AS REAL), ((rt0.c2)%(rt1.c0)), CAST(rt1.c3 AS INTEGER))))) ORDER BY rt1.c1 DESC  NULLS LAST;
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON NULL CROSS JOIN vt0 ON TRIM((vt0.c0 IN ()), (((('735555130')OR(vt1.c0)))OR(vt1.c0))) INNER JOIN vt1 ON ((LOWER(rt1.c2))%(DATETIME(rt1.c2, vt1.c0, rt1.c1, vt1.c0, rt1.c0))) WHERE (((x'') IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((x'') IS TRUE)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON NULL CROSS JOIN vt0 ON TRIM((vt0.c0 IN ()), (((('735555130')OR(vt1.c0)))OR(vt1.c0))) INNER JOIN vt1 ON ((LOWER(rt1.c2))%(DATETIME(rt1.c2, vt1.c0, rt1.c1, vt1.c0, rt1.c0))));
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON NULL CROSS JOIN vt0 ON TRIM((vt0.c0 IN ()), (((('735555130')OR(vt1.c0)))OR(vt1.c0))) INNER JOIN vt1 ON ((LOWER(rt1.c2))%(DATETIME(rt1.c2, vt1.c0, rt1.c1, vt1.c0, rt1.c0))) WHERE (((x'') IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((x'') IS TRUE)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON NULL CROSS JOIN vt0 ON TRIM((vt0.c0 IN ()), (((('735555130')OR(vt1.c0)))OR(vt1.c0))) INNER JOIN vt1 ON ((LOWER(rt1.c2))%(DATETIME(rt1.c2, vt1.c0, rt1.c1, vt1.c0, rt1.c0))));
SELECT ALL COUNT(*) FROM vt0, rt1, vt1 WHERE (((((NULL)OR(((rt1.c0) IS FALSE))))OR(((rt1.c4) NOT NULL)))) ORDER BY (((((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c3)), UNLIKELY(0x333679dd), ((rt1.c3)LIKE(rt1.c4))))!=((CAST(rt1.c0 AS BLOB), -7.66962044E8 COLLATE NOCASE, ('-324433503' IN (rt1.c3, 987579631)))))  NULLS LAST, (NOT (vt1.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((NULL)OR(((rt1.c0) IS FALSE))))OR(((rt1.c4) NOT NULL)))) IS TRUE)  as count FROM vt0, rt1, vt1 ORDER BY (((((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c3)), UNLIKELY(0X333679dd), ((rt1.c3)LIKE(rt1.c4))))<>((CAST(rt1.c0 AS BLOB), -7.66962044E8 COLLATE NOCASE, ('-324433503' IN (rt1.c3, 987579631)))))  NULLS LAST, (NOT (vt1.c0 COLLATE BINARY))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1, vt1 WHERE (((((NULL)OR(((rt1.c0) IS FALSE))))OR(((rt1.c4) NOT NULL)))) ORDER BY (((((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c3)), UNLIKELY(0x333679dd), ((rt1.c3)LIKE(rt1.c4))))!=((CAST(rt1.c0 AS BLOB), -7.66962044E8 COLLATE NOCASE, ('-324433503' IN (rt1.c3, 987579631)))))  NULLS LAST, (NOT (vt1.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((NULL)OR(((rt1.c0) IS FALSE))))OR(((rt1.c4) NOT NULL)))) IS TRUE)  as count FROM vt0, rt1, vt1 ORDER BY (((((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c3)), UNLIKELY(0X333679dd), ((rt1.c3)LIKE(rt1.c4))))<>((CAST(rt1.c0 AS BLOB), -7.66962044E8 COLLATE NOCASE, ('-324433503' IN (rt1.c3, 987579631)))))  NULLS LAST, (NOT (vt1.c0 COLLATE BINARY))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1, vt1 WHERE (((((NULL)OR(((rt1.c0) IS FALSE))))OR(((rt1.c4) NOT NULL)))) ORDER BY (((((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c3)), UNLIKELY(0x333679dd), ((rt1.c3)LIKE(rt1.c4))))!=((CAST(rt1.c0 AS BLOB), -7.66962044E8 COLLATE NOCASE, ('-324433503' IN (rt1.c3, 987579631)))))  NULLS LAST, (NOT (vt1.c0 COLLATE BINARY))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, rt1, vt0, vt1 WHERE ((+ (CAST(rt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt1.c0 AS REAL)))) IS TRUE)  as count FROM rt0, rt1, vt0, vt1 NOT INDEXED);
SELECT COUNT(*) FROM rt0, rt1, vt0, vt1 WHERE ((+ (CAST(rt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt1.c0 AS REAL)))) IS TRUE)  as count FROM rt0, rt1, vt0, vt1 NOT INDEXED);
SELECT COUNT(*) FROM rt0, rt1, vt0, vt1 WHERE ((+ (CAST(rt1.c0 AS REAL))));
SELECT ALL * FROM rt1 LEFT OUTER JOIN vt1 ON ((((((rt0.c0) IS FALSE))AND(((((NULL)OR(rt0.c2)))OR(rt0.c2)))))AND((~ (vt1.c0)))) LEFT OUTER JOIN rt0 ON ((CAST(rt1.c0 AS INTEGER)) IS FALSE) WHERE (((((rt1.c1)/(rt1.c1)))>=(((rt1.c3)LIKE(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)/(rt1.c1)))>=(((rt1.c3)LIKE(rt1.c0))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt1 ON ((((((rt0.c0) IS FALSE))AND(((((NULL)OR(rt0.c2)))OR(rt0.c2)))))AND((~ (vt1.c0)))) LEFT OUTER JOIN rt0 ON ((CAST(rt1.c0 AS INTEGER)) IS FALSE));
SELECT ALL * FROM rt1 LEFT OUTER JOIN vt1 ON ((((((rt0.c0) IS FALSE))AND(((((NULL)OR(rt0.c2)))OR(rt0.c2)))))AND((~ (vt1.c0)))) LEFT OUTER JOIN rt0 ON ((CAST(rt1.c0 AS INTEGER)) IS FALSE) WHERE (((((rt1.c1)/(rt1.c1)))>=(((rt1.c3)LIKE(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)/(rt1.c1)))>=(((rt1.c3)LIKE(rt1.c0))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt1 ON ((((((rt0.c0) IS FALSE))AND(((((NULL)OR(rt0.c2)))OR(rt0.c2)))))AND((~ (vt1.c0)))) LEFT OUTER JOIN rt0 ON ((CAST(rt1.c0 AS INTEGER)) IS FALSE));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c4)OR(rt1.c2)))AND(rt1.c2))) IS TRUE)) ORDER BY ((rt1.c1)>=(rt1.c4))  NULLS FIRST, (~ (((((((((rt1.c2)OR(rt1.c3)))OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c4)OR(rt1.c2)))AND(rt1.c2))) IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1)>=(rt1.c4))  NULLS FIRST, (~ (((((((((rt1.c2)OR(rt1.c3)))OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c4)OR(rt1.c2)))AND(rt1.c2))) IS TRUE)) ORDER BY ((rt1.c1)>=(rt1.c4))  NULLS FIRST, (~ (((((((((rt1.c2)OR(rt1.c3)))OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c4)OR(rt1.c2)))AND(rt1.c2))) IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1)>=(rt1.c4))  NULLS FIRST, (~ (((((((((rt1.c2)OR(rt1.c3)))OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c4)OR(rt1.c2)))AND(rt1.c2))) IS TRUE)) ORDER BY ((rt1.c1)>=(rt1.c4))  NULLS FIRST, (~ (((((((((rt1.c2)OR(rt1.c3)))OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 RIGHT OUTER JOIN rt1 ON '537098211' WHERE ('152857212') ORDER BY (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (((((vt1.c0)) NOT BETWEEN ((x'')) AND ((rt1.c2))))))  NULLS FIRST, (((((NULL))!=((rt1.c1))))|(((((rt1.c4)AND(rt0.c1)))AND(rt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('152857212') IS TRUE)  as count FROM vt0, rt0, vt1 RIGHT OUTER JOIN rt1 ON '537098211' ORDER BY (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (((((vt1.c0)) NOT BETWEEN ((x'')) AND ((rt1.c2))))))  NULLS FIRST, (((((NULL))!=((rt1.c1))))|(((((rt1.c4)AND(rt0.c1)))AND(rt1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 RIGHT OUTER JOIN rt1 ON '537098211' WHERE ('152857212') ORDER BY (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (((((vt1.c0)) NOT BETWEEN ((x'')) AND ((rt1.c2))))))  NULLS FIRST, (((((NULL))!=((rt1.c1))))|(((((rt1.c4)AND(rt0.c1)))AND(rt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('152857212') IS TRUE)  as count FROM vt0, rt0, vt1 RIGHT OUTER JOIN rt1 ON '537098211' ORDER BY (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (((((vt1.c0)) NOT BETWEEN ((x'')) AND ((rt1.c2))))))  NULLS FIRST, (((((NULL))!=((rt1.c1))))|(((((rt1.c4)AND(rt0.c1)))AND(rt1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 RIGHT OUTER JOIN rt1 ON '537098211' WHERE ('152857212') ORDER BY (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (((((vt1.c0)) NOT BETWEEN ((x'')) AND ((rt1.c2))))))  NULLS FIRST, (((((NULL))!=((rt1.c1))))|(((((rt1.c4)AND(rt0.c1)))AND(rt1.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM vt1, vt0, rt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c1)) AS TEXT));
SELECT * FROM vt0, vt1 WHERE ((vt1.c0 IN ())) ORDER BY vt1.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c0 DESC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE ((vt1.c0 IN ())) ORDER BY vt1.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c0 DESC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE ((vt1.c0 IN ())) ORDER BY vt1.c0 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt1, vt0 WHERE ((((vt0.c0 IN (rt1.c2, rt1.c2)))||(rt1.c4))) ORDER BY (CAST(rt1.c4 AS NUMERIC) IN (CAST(rt1.c3 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (rt1.c2, rt1.c2)))||(rt1.c4))) IS TRUE)  as count FROM vt1, rt1, vt0 ORDER BY (CAST(rt1.c4 AS NUMERIC) IN (CAST(rt1.c3 AS INTEGER))) ASC);
SELECT ALL COUNT(*) FROM vt1, rt1, vt0 WHERE ((((vt0.c0 IN (rt1.c2, rt1.c2)))||(rt1.c4))) ORDER BY (CAST(rt1.c4 AS NUMERIC) IN (CAST(rt1.c3 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (rt1.c2, rt1.c2)))||(rt1.c4))) IS TRUE)  as count FROM vt1, rt1, vt0 ORDER BY (CAST(rt1.c4 AS NUMERIC) IN (CAST(rt1.c3 AS INTEGER))) ASC);
SELECT ALL COUNT(*) FROM vt1, rt1, vt0 WHERE ((((vt0.c0 IN (rt1.c2, rt1.c2)))||(rt1.c4))) ORDER BY (CAST(rt1.c4 AS NUMERIC) IN (CAST(rt1.c3 AS INTEGER))) ASC;
SELECT ALL * FROM vt1, vt0 WHERE ('' COLLATE RTRIM) ORDER BY ((((vt1.c0) NOT NULL)) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('' COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c0) NOT NULL)) ISNULL)  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE ('' COLLATE RTRIM) ORDER BY ((((vt1.c0) NOT NULL)) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('' COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c0) NOT NULL)) ISNULL)  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE ('' COLLATE RTRIM) ORDER BY ((((vt1.c0) NOT NULL)) ISNULL)  NULLS LAST;
SELECT ALL * FROM rt0, vt1 WHERE (((ABS(rt0.c2)) BETWEEN (vt1.c0) AND ((((rt0.c1, rt0.c1, rt0.c1))==((rt0.c2, rt0.c1, vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(rt0.c2)) BETWEEN (vt1.c0) AND ((((rt0.c1, rt0.c1, rt0.c1))=((rt0.c2, rt0.c1, vt1.c0)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((ABS(rt0.c2)) BETWEEN (vt1.c0) AND ((((rt0.c1, rt0.c1, rt0.c1))==((rt0.c2, rt0.c1, vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(rt0.c2)) BETWEEN (vt1.c0) AND ((((rt0.c1, rt0.c1, rt0.c1))=((rt0.c2, rt0.c1, vt1.c0)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((ABS(rt0.c2)) BETWEEN (vt1.c0) AND ((((rt0.c1, rt0.c1, rt0.c1))==((rt0.c2, rt0.c1, vt1.c0))))));
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE ((((rt0.c2 IN ()))IS(CASE WHEN rt1.c4 THEN rt0.c2 WHEN rt1.c4 THEN rt1.c2 WHEN rt0.c2 THEN rt0.c0 ELSE 'h-綔l\rj[ 9' END))) ORDER BY '516317190', (+ (((((rt1.c4)OR(rt0.c1)))OR(rt1.c3)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))IS(CASE WHEN rt1.c4 THEN rt0.c2 WHEN rt1.c4 THEN rt1.c2 WHEN rt0.c2 THEN rt0.c0 ELSE 'h-綔l\rj[ 9' END))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY '516317190', (+ (((((rt1.c4)OR(rt0.c1)))OR(rt1.c3)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE ((((rt0.c2 IN ()))IS(CASE WHEN rt1.c4 THEN rt0.c2 WHEN rt1.c4 THEN rt1.c2 WHEN rt0.c2 THEN rt0.c0 ELSE 'h-綔l\rj[ 9' END))) ORDER BY '516317190', (+ (((((rt1.c4)OR(rt0.c1)))OR(rt1.c3)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))IS(CASE WHEN rt1.c4 THEN rt0.c2 WHEN rt1.c4 THEN rt1.c2 WHEN rt0.c2 THEN rt0.c0 ELSE 'h-綔l\rj[ 9' END))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY '516317190', (+ (((((rt1.c4)OR(rt0.c1)))OR(rt1.c3)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE ((((rt0.c2 IN ()))IS(CASE WHEN rt1.c4 THEN rt0.c2 WHEN rt1.c4 THEN rt1.c2 WHEN rt0.c2 THEN rt0.c0 ELSE 'h-綔l\rj[ 9' END))) ORDER BY '516317190', (+ (((((rt1.c4)OR(rt0.c1)))OR(rt1.c3)))) DESC  NULLS LAST;
SELECT ALL * FROM rt0, vt0, vt1 WHERE (((NULL) ISNULL)) ORDER BY CASE rt0.c0 COLLATE BINARY  WHEN vt1.c0 COLLATE NOCASE THEN ((vt0.c0)-(rt0.c1)) WHEN ((((vt1.c0)AND(x'')))OR(rt0.c1)) THEN ((vt0.c0)!=(rt0.c2)) WHEN (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) THEN NULLIF(DISTINCT rt0.c0, vt1.c0) WHEN vt0.c0 COLLATE RTRIM THEN TYPEOF(DISTINCT vt1.c0) WHEN ((vt0.c0)LIKE(vt1.c0)) THEN CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c2 THEN vt0.c0 ELSE vt1.c0 END END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) ISNULL)) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY CASE rt0.c0 COLLATE BINARY  WHEN vt1.c0 COLLATE NOCASE THEN ((vt0.c0)-(rt0.c1)) WHEN ((((vt1.c0)AND(x'')))OR(rt0.c1)) THEN ((vt0.c0)!=(rt0.c2)) WHEN (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) THEN NULLIF(DISTINCT rt0.c0, vt1.c0) WHEN vt0.c0 COLLATE RTRIM THEN TYPEOF(DISTINCT vt1.c0) WHEN ((vt0.c0)LIKE(vt1.c0)) THEN CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c2 THEN vt0.c0 ELSE vt1.c0 END END ASC);
SELECT ALL * FROM rt0, vt0, vt1 WHERE (((NULL) ISNULL)) ORDER BY CASE rt0.c0 COLLATE BINARY  WHEN vt1.c0 COLLATE NOCASE THEN ((vt0.c0)-(rt0.c1)) WHEN ((((vt1.c0)AND(x'')))OR(rt0.c1)) THEN ((vt0.c0)!=(rt0.c2)) WHEN (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) THEN NULLIF(DISTINCT rt0.c0, vt1.c0) WHEN vt0.c0 COLLATE RTRIM THEN TYPEOF(DISTINCT vt1.c0) WHEN ((vt0.c0)LIKE(vt1.c0)) THEN CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c2 THEN vt0.c0 ELSE vt1.c0 END END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) ISNULL)) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY CASE rt0.c0 COLLATE BINARY  WHEN vt1.c0 COLLATE NOCASE THEN ((vt0.c0)-(rt0.c1)) WHEN ((((vt1.c0)AND(x'')))OR(rt0.c1)) THEN ((vt0.c0)!=(rt0.c2)) WHEN (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) THEN NULLIF(DISTINCT rt0.c0, vt1.c0) WHEN vt0.c0 COLLATE RTRIM THEN TYPEOF(DISTINCT vt1.c0) WHEN ((vt0.c0)LIKE(vt1.c0)) THEN CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c2 THEN vt0.c0 ELSE vt1.c0 END END ASC);
SELECT ALL * FROM rt0, vt0, vt1 WHERE (((NULL) ISNULL)) ORDER BY CASE rt0.c0 COLLATE BINARY  WHEN vt1.c0 COLLATE NOCASE THEN ((vt0.c0)-(rt0.c1)) WHEN ((((vt1.c0)AND(x'')))OR(rt0.c1)) THEN ((vt0.c0)!=(rt0.c2)) WHEN (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) THEN NULLIF(DISTINCT rt0.c0, vt1.c0) WHEN vt0.c0 COLLATE RTRIM THEN TYPEOF(DISTINCT vt1.c0) WHEN ((vt0.c0)LIKE(vt1.c0)) THEN CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c2 THEN vt0.c0 ELSE vt1.c0 END END ASC;
SELECT COUNT(*) FROM rt0, vt1, rt1 NATURAL JOIN vt0 WHERE (((DATE(rt1.c2, 0.22818457835288986, vt0.c0, rt1.c4, rt0.c2))<(((rt0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((DATE(rt1.c2, 0.22818457835288986, vt0.c0, rt1.c4, rt0.c2))<(((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0, vt1, rt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt0, vt1, rt1 NATURAL JOIN vt0 WHERE (((DATE(rt1.c2, 0.22818457835288986, vt0.c0, rt1.c4, rt0.c2))<(((rt0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((DATE(rt1.c2, 0.22818457835288986, vt0.c0, rt1.c4, rt0.c2))<(((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0, vt1, rt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt0, vt1, rt1 NATURAL JOIN vt0 WHERE (((DATE(rt1.c2, 0.22818457835288986, vt0.c0, rt1.c4, rt0.c2))<(((rt0.c2) IS FALSE))));
SELECT ALL * FROM vt0 WHERE (((((((NULL)AND(vt0.c0)))OR(vt0.c0)))||(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)AND(vt0.c0)))OR(vt0.c0)))||(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((NULL)AND(vt0.c0)))OR(vt0.c0)))||(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)AND(vt0.c0)))OR(vt0.c0)))||(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((NULL)AND(vt0.c0)))OR(vt0.c0)))||(vt0.c0)));
SELECT * FROM rt0 WHERE ((((((((((((rt0.c0, rt0.c0, rt0.c0))>=((rt0.c0, rt0.c0, -7.66962044E8))))OR((NOT (rt0.c2)))))OR((NOT (rt0.c0)))))AND(((rt0.c1) ISNULL))))OR(((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c0))))) ORDER BY (~ (rt0.c1)), CASE ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))  WHEN (rt0.c2 IN ()) THEN CAST(rt0.c0 AS NUMERIC) WHEN QUOTE(rt0.c0) THEN UNICODE(x'') WHEN ((((((((rt0.c2)AND(8.26949355E8)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)) THEN LTRIM(rt0.c0) ELSE ((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((((rt0.c0, rt0.c0, rt0.c0))>=((rt0.c0, rt0.c0, -7.66962044E8))))OR((NOT (rt0.c2)))))OR((NOT (rt0.c0)))))AND(((rt0.c1) ISNULL))))OR(((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (~ (rt0.c1)), CASE ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))  WHEN (rt0.c2 IN ()) THEN CAST(rt0.c0 AS NUMERIC) WHEN QUOTE(rt0.c0) THEN UNICODE(x'') WHEN ((((((((rt0.c2)AND(8.26949355E8)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)) THEN LTRIM(rt0.c0) ELSE ((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)) END DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((((((((((rt0.c0, rt0.c0, rt0.c0))>=((rt0.c0, rt0.c0, -7.66962044E8))))OR((NOT (rt0.c2)))))OR((NOT (rt0.c0)))))AND(((rt0.c1) ISNULL))))OR(((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c0))))) ORDER BY (~ (rt0.c1)), CASE ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))  WHEN (rt0.c2 IN ()) THEN CAST(rt0.c0 AS NUMERIC) WHEN QUOTE(rt0.c0) THEN UNICODE(x'') WHEN ((((((((rt0.c2)AND(8.26949355E8)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)) THEN LTRIM(rt0.c0) ELSE ((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((((rt0.c0, rt0.c0, rt0.c0))>=((rt0.c0, rt0.c0, -7.66962044E8))))OR((NOT (rt0.c2)))))OR((NOT (rt0.c0)))))AND(((rt0.c1) ISNULL))))OR(((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (~ (rt0.c1)), CASE ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))  WHEN (rt0.c2 IN ()) THEN CAST(rt0.c0 AS NUMERIC) WHEN QUOTE(rt0.c0) THEN UNICODE(x'') WHEN ((((((((rt0.c2)AND(8.26949355E8)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)) THEN LTRIM(rt0.c0) ELSE ((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)) END DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((((((((((rt0.c0, rt0.c0, rt0.c0))>=((rt0.c0, rt0.c0, -7.66962044E8))))OR((NOT (rt0.c2)))))OR((NOT (rt0.c0)))))AND(((rt0.c1) ISNULL))))OR(((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c0))))) ORDER BY (~ (rt0.c1)), CASE ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))  WHEN (rt0.c2 IN ()) THEN CAST(rt0.c0 AS NUMERIC) WHEN QUOTE(rt0.c0) THEN UNICODE(x'') WHEN ((((((((rt0.c2)AND(8.26949355E8)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)) THEN LTRIM(rt0.c0) ELSE ((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)) END DESC  NULLS FIRST;
SELECT ALL * FROM rt1, vt0, vt1, rt0 WHERE (((vt0.c0)<=(rt1.c4 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<=(rt1.c4 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, vt0, vt1, rt0);
SELECT ALL * FROM rt1, vt0, vt1, rt0 WHERE (((vt0.c0)<=(rt1.c4 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<=(rt1.c4 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, vt0, vt1, rt0);
SELECT ALL * FROM rt1, vt0, vt1, rt0 WHERE (((vt0.c0)<=(rt1.c4 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0, rt1, vt1 WHERE (CASE ((rt1.c3)==('826949355'))  WHEN ((((((((rt1.c4)OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c2)))OR(vt0.c0)) THEN (rt1.c1 IN ()) WHEN ((rt1.c2) BETWEEN (rt1.c4) AND (vt0.c0)) THEN ((((rt1.c0)OR(vt1.c0)))AND(vt1.c0)) WHEN ((rt1.c0)IS(vt1.c0)) THEN ((rt1.c4)>>(rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c3)=('826949355'))  WHEN ((((((((rt1.c4)OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c2)))OR(vt0.c0)) THEN (rt1.c1 IN ()) WHEN ((rt1.c2) BETWEEN (rt1.c4) AND (vt0.c0)) THEN ((((rt1.c0)OR(vt1.c0)))AND(vt1.c0)) WHEN ((rt1.c0)IS(vt1.c0)) THEN ((rt1.c4)>>(rt1.c0)) END) IS TRUE)  as count FROM vt0, rt1, vt1);
SELECT ALL COUNT(*) FROM vt0, rt1, vt1 WHERE (CASE ((rt1.c3)==('826949355'))  WHEN ((((((((rt1.c4)OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c2)))OR(vt0.c0)) THEN (rt1.c1 IN ()) WHEN ((rt1.c2) BETWEEN (rt1.c4) AND (vt0.c0)) THEN ((((rt1.c0)OR(vt1.c0)))AND(vt1.c0)) WHEN ((rt1.c0)IS(vt1.c0)) THEN ((rt1.c4)>>(rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c3)=('826949355'))  WHEN ((((((((rt1.c4)OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c2)))OR(vt0.c0)) THEN (rt1.c1 IN ()) WHEN ((rt1.c2) BETWEEN (rt1.c4) AND (vt0.c0)) THEN ((((rt1.c0)OR(vt1.c0)))AND(vt1.c0)) WHEN ((rt1.c0)IS(vt1.c0)) THEN ((rt1.c4)>>(rt1.c0)) END) IS TRUE)  as count FROM vt0, rt1, vt1);
SELECT ALL COUNT(*) FROM vt0, rt1, vt1 WHERE (CASE ((rt1.c3)==('826949355'))  WHEN ((((((((rt1.c4)OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c2)))OR(vt0.c0)) THEN (rt1.c1 IN ()) WHEN ((rt1.c2) BETWEEN (rt1.c4) AND (vt0.c0)) THEN ((((rt1.c0)OR(vt1.c0)))AND(vt1.c0)) WHEN ((rt1.c0)IS(vt1.c0)) THEN ((rt1.c4)>>(rt1.c0)) END);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt1 ON (~ (((rt1.c0) ISNULL))) CROSS JOIN vt0 ON DATETIME(((((vt1.c0)AND(rt1.c1)))OR(rt1.c0)), CAST(NULL AS INTEGER), CASE WHEN rt1.c0 THEN rt1.c2 ELSE vt0.c0 END) WHERE (((((vt1.c0) ISNULL))GLOB(((rt1.c2)-(rt1.c3))))) ORDER BY SQLITE_COMPILEOPTION_USED(x'') ASC, ((((CAST(rt1.c3 AS BLOB))OR(((((rt1.c4)AND(rt1.c0)))AND('')))))OR(rt1.c4 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) ISNULL))GLOB(((rt1.c2)-(rt1.c3))))) IS TRUE)  as count FROM rt1 CROSS JOIN vt1 ON (~ (((rt1.c0) ISNULL))) CROSS JOIN vt0 ON DATETIME(((((vt1.c0)AND(rt1.c1)))OR(rt1.c0)), CAST(NULL AS INTEGER), CASE WHEN rt1.c0 THEN rt1.c2 ELSE vt0.c0 END) ORDER BY SQLITE_COMPILEOPTION_USED(x'') ASC, ((((CAST(rt1.c3 AS BLOB))OR(((((rt1.c4)AND(rt1.c0)))AND('')))))OR(rt1.c4 COLLATE BINARY))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt1 ON (~ (((rt1.c0) ISNULL))) CROSS JOIN vt0 ON DATETIME(((((vt1.c0)AND(rt1.c1)))OR(rt1.c0)), CAST(NULL AS INTEGER), CASE WHEN rt1.c0 THEN rt1.c2 ELSE vt0.c0 END) WHERE (((((vt1.c0) ISNULL))GLOB(((rt1.c2)-(rt1.c3))))) ORDER BY SQLITE_COMPILEOPTION_USED(x'') ASC, ((((CAST(rt1.c3 AS BLOB))OR(((((rt1.c4)AND(rt1.c0)))AND('')))))OR(rt1.c4 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) ISNULL))GLOB(((rt1.c2)-(rt1.c3))))) IS TRUE)  as count FROM rt1 CROSS JOIN vt1 ON (~ (((rt1.c0) ISNULL))) CROSS JOIN vt0 ON DATETIME(((((vt1.c0)AND(rt1.c1)))OR(rt1.c0)), CAST(NULL AS INTEGER), CASE WHEN rt1.c0 THEN rt1.c2 ELSE vt0.c0 END) ORDER BY SQLITE_COMPILEOPTION_USED(x'') ASC, ((((CAST(rt1.c3 AS BLOB))OR(((((rt1.c4)AND(rt1.c0)))AND('')))))OR(rt1.c4 COLLATE BINARY))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt1 ON (~ (((rt1.c0) ISNULL))) CROSS JOIN vt0 ON DATETIME(((((vt1.c0)AND(rt1.c1)))OR(rt1.c0)), CAST(NULL AS INTEGER), CASE WHEN rt1.c0 THEN rt1.c2 ELSE vt0.c0 END) WHERE (((((vt1.c0) ISNULL))GLOB(((rt1.c2)-(rt1.c3))))) ORDER BY SQLITE_COMPILEOPTION_USED(x'') ASC, ((((CAST(rt1.c3 AS BLOB))OR(((((rt1.c4)AND(rt1.c0)))AND('')))))OR(rt1.c4 COLLATE BINARY))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt1 ON ((((rt1.c0)AND(rt1.c3)))AND(rt1.c1)) COLLATE NOCASE INNER JOIN vt0 ON CAST('0.7183575817836526' AS TEXT) WHERE (CASE WHEN (((vt1.c0, vt1.c0, rt1.c2, rt1.c2, vt0.c0))=((rt1.c0, vt0.c0, 'ἣ\n徬i', rt1.c4, rt1.c1))) THEN ((((vt1.c0)OR(rt1.c2)))AND(rt1.c0)) ELSE (- (rt1.c0)) END) ORDER BY CAST(((rt1.c1)OR(rt1.c1)) AS TEXT)  NULLS FIRST, (NOT ((rt1.c0 IN (rt1.c3)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt1.c0, vt1.c0, rt1.c2, rt1.c2, vt0.c0))==((rt1.c0, vt0.c0, 'ἣ\n徬i', rt1.c4, rt1.c1))) THEN ((((vt1.c0)OR(rt1.c2)))AND(rt1.c0)) ELSE (- (rt1.c0)) END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt1 ON ((((rt1.c0)AND(rt1.c3)))AND(rt1.c1)) COLLATE NOCASE INNER JOIN vt0 ON CAST('0.7183575817836526' AS TEXT) ORDER BY CAST(((rt1.c1)OR(rt1.c1)) AS TEXT)  NULLS FIRST, (NOT ((rt1.c0 IN (rt1.c3)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt1 ON ((((rt1.c0)AND(rt1.c3)))AND(rt1.c1)) COLLATE NOCASE INNER JOIN vt0 ON CAST('0.7183575817836526' AS TEXT) WHERE (CASE WHEN (((vt1.c0, vt1.c0, rt1.c2, rt1.c2, vt0.c0))=((rt1.c0, vt0.c0, 'ἣ\n徬i', rt1.c4, rt1.c1))) THEN ((((vt1.c0)OR(rt1.c2)))AND(rt1.c0)) ELSE (- (rt1.c0)) END) ORDER BY CAST(((rt1.c1)OR(rt1.c1)) AS TEXT)  NULLS FIRST, (NOT ((rt1.c0 IN (rt1.c3)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt1.c0, vt1.c0, rt1.c2, rt1.c2, vt0.c0))==((rt1.c0, vt0.c0, 'ἣ\n徬i', rt1.c4, rt1.c1))) THEN ((((vt1.c0)OR(rt1.c2)))AND(rt1.c0)) ELSE (- (rt1.c0)) END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt1 ON ((((rt1.c0)AND(rt1.c3)))AND(rt1.c1)) COLLATE NOCASE INNER JOIN vt0 ON CAST('0.7183575817836526' AS TEXT) ORDER BY CAST(((rt1.c1)OR(rt1.c1)) AS TEXT)  NULLS FIRST, (NOT ((rt1.c0 IN (rt1.c3)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt1 ON ((((rt1.c0)AND(rt1.c3)))AND(rt1.c1)) COLLATE NOCASE INNER JOIN vt0 ON CAST('0.7183575817836526' AS TEXT) WHERE (CASE WHEN (((vt1.c0, vt1.c0, rt1.c2, rt1.c2, vt0.c0))=((rt1.c0, vt0.c0, 'ἣ\n徬i', rt1.c4, rt1.c1))) THEN ((((vt1.c0)OR(rt1.c2)))AND(rt1.c0)) ELSE (- (rt1.c0)) END) ORDER BY CAST(((rt1.c1)OR(rt1.c1)) AS TEXT)  NULLS FIRST, (NOT ((rt1.c0 IN (rt1.c3)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c1)*(rt1.c3))) BETWEEN (((rt1.c0)&(rt1.c3))) AND (CASE WHEN rt1.c1 THEN rt1.c3 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)*(rt1.c3))) BETWEEN (((rt1.c0)&(rt1.c3))) AND (CASE WHEN rt1.c1 THEN rt1.c3 END))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c1)*(rt1.c3))) BETWEEN (((rt1.c0)&(rt1.c3))) AND (CASE WHEN rt1.c1 THEN rt1.c3 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)*(rt1.c3))) BETWEEN (((rt1.c0)&(rt1.c3))) AND (CASE WHEN rt1.c1 THEN rt1.c3 END))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c1)*(rt1.c3))) BETWEEN (((rt1.c0)&(rt1.c3))) AND (CASE WHEN rt1.c1 THEN rt1.c3 END)));
SELECT * FROM rt0, vt1, rt1, vt0 WHERE ((+ (((((x'')AND(rt0.c1)))AND(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((x'')AND(rt0.c1)))AND(rt1.c3))))) IS TRUE)  as count FROM rt0, vt1, rt1, vt0);
SELECT * FROM rt0, vt1, rt1, vt0 WHERE ((+ (((((x'')AND(rt0.c1)))AND(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((x'')AND(rt0.c1)))AND(rt1.c3))))) IS TRUE)  as count FROM rt0, vt1, rt1, vt0);
SELECT * FROM rt0, vt1, rt1, vt0 WHERE ((+ (((((x'')AND(rt0.c1)))AND(rt1.c3)))));
SELECT * FROM rt0, vt1 WHERE ((+ (rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((+ (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((+ (rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((+ (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((+ (rt0.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON (((vt0.c0)) BETWEEN ((CAST(rt0.c1 AS TEXT))) AND ((((((rt1.c0)AND(vt0.c0)))AND(vt0.c0))))) CROSS JOIN vt1 ON ((((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR('')))>=(((rt1.c4)>>(vt0.c0)))) INNER JOIN rt0 ON (- (((0.48015092031076245) NOTNULL))) WHERE ((((rt0.c0) ISNULL) IN ())) ORDER BY (~ (rt0.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0) ISNULL) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON (((vt0.c0)) BETWEEN ((CAST(rt0.c1 AS TEXT))) AND ((((((rt1.c0)AND(vt0.c0)))AND(vt0.c0))))) CROSS JOIN vt1 ON ((((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR('')))>=(((rt1.c4)>>(vt0.c0)))) INNER JOIN rt0 ON (- (((0.48015092031076245) NOTNULL))) ORDER BY (~ (rt0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON (((vt0.c0)) BETWEEN ((CAST(rt0.c1 AS TEXT))) AND ((((((rt1.c0)AND(vt0.c0)))AND(vt0.c0))))) CROSS JOIN vt1 ON ((((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR('')))>=(((rt1.c4)>>(vt0.c0)))) INNER JOIN rt0 ON (- (((0.48015092031076245) NOTNULL))) WHERE ((((rt0.c0) ISNULL) IN ())) ORDER BY (~ (rt0.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0) ISNULL) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON (((vt0.c0)) BETWEEN ((CAST(rt0.c1 AS TEXT))) AND ((((((rt1.c0)AND(vt0.c0)))AND(vt0.c0))))) CROSS JOIN vt1 ON ((((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR('')))>=(((rt1.c4)>>(vt0.c0)))) INNER JOIN rt0 ON (- (((0.48015092031076245) NOTNULL))) ORDER BY (~ (rt0.c1)) COLLATE BINARY);
SELECT * FROM vt1 WHERE (((((NOT (vt1.c0))))>=((((vt1.c0)GLOB(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((NOT (vt1.c0))))>=((((vt1.c0)GLOB(vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((NOT (vt1.c0))))>=((((vt1.c0)GLOB(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((NOT (vt1.c0))))>=((((vt1.c0)GLOB(vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((NOT (vt1.c0))))>=((((vt1.c0)GLOB(vt1.c0))))));
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c0))<=((rt1.c1)))) BETWEEN ((('')==(rt1.c0))) AND (((rt1.c4) NOT BETWEEN (rt1.c4) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0))<=((rt1.c1)))) BETWEEN ((('')==(rt1.c0))) AND (((rt1.c4) NOT BETWEEN (rt1.c4) AND (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c0))<=((rt1.c1)))) BETWEEN ((('')==(rt1.c0))) AND (((rt1.c4) NOT BETWEEN (rt1.c4) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0))<=((rt1.c1)))) BETWEEN ((('')==(rt1.c0))) AND (((rt1.c4) NOT BETWEEN (rt1.c4) AND (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c0))<=((rt1.c1)))) BETWEEN ((('')==(rt1.c0))) AND (((rt1.c4) NOT BETWEEN (rt1.c4) AND (rt1.c0)))));
SELECT * FROM vt1 WHERE (((((vt1.c0)&(vt1.c0)))<=(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY (~ ((- (vt1.c0)))) DESC  NULLS FIRST, vt1.c0 DESC, (((NULL)) NOT BETWEEN ((((vt1.c0)>>(vt1.c0)))) AND ((vt1.c0 COLLATE RTRIM))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)&(vt1.c0)))<=(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY (~ ((- (vt1.c0)))) DESC  NULLS FIRST, vt1.c0 DESC, (((NULL)) NOT BETWEEN ((((vt1.c0)>>(vt1.c0)))) AND ((vt1.c0 COLLATE RTRIM))) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((vt1.c0)&(vt1.c0)))<=(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY (~ ((- (vt1.c0)))) DESC  NULLS FIRST, vt1.c0 DESC, (((NULL)) NOT BETWEEN ((((vt1.c0)>>(vt1.c0)))) AND ((vt1.c0 COLLATE RTRIM))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)&(vt1.c0)))<=(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY (~ ((- (vt1.c0)))) DESC  NULLS FIRST, vt1.c0 DESC, (((NULL)) NOT BETWEEN ((((vt1.c0)>>(vt1.c0)))) AND ((vt1.c0 COLLATE RTRIM))) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((vt1.c0)&(vt1.c0)))<=(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY (~ ((- (vt1.c0)))) DESC  NULLS FIRST, vt1.c0 DESC, (((NULL)) NOT BETWEEN ((((vt1.c0)>>(vt1.c0)))) AND ((vt1.c0 COLLATE RTRIM))) ASC  NULLS FIRST;
SELECT * FROM vt0, rt0, rt1, vt1 WHERE (HEX(DISTINCT (((vt0.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))) ORDER BY ((rt0.c2) NOT NULL) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT (((vt0.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))) IS TRUE)  as count FROM vt0, rt0, rt1, vt1 ORDER BY ((rt0.c2) NOT NULL) COLLATE BINARY);
SELECT * FROM vt0, rt0, rt1, vt1 WHERE (HEX(DISTINCT (((vt0.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))) ORDER BY ((rt0.c2) NOT NULL) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT (((vt0.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))) IS TRUE)  as count FROM vt0, rt0, rt1, vt1 ORDER BY ((rt0.c2) NOT NULL) COLLATE BINARY);
SELECT * FROM vt0, rt0, rt1, vt1 WHERE (HEX(DISTINCT (((vt0.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))) ORDER BY ((rt0.c2) NOT NULL) COLLATE BINARY;
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) NOT BETWEEN (((vt1.c0) IS FALSE)) AND ((('~[ %j*rG')&(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) NOT BETWEEN (((vt1.c0) IS FALSE)) AND ((('~[ %j*rG')&(vt1.c0)))));
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) NOT BETWEEN (((vt1.c0) IS FALSE)) AND ((('~[ %j*rG')&(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) NOT BETWEEN (((vt1.c0) IS FALSE)) AND ((('~[ %j*rG')&(vt1.c0)))));
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) NOT BETWEEN (((vt1.c0) IS FALSE)) AND ((('~[ %j*rG')&(vt1.c0))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((rt1.c0)AND(CAST(rt1.c0 AS TEXT))) LEFT OUTER JOIN vt1 ON ((((((((((rt1.c2)/(rt1.c4)))OR(rt0.c0)))OR(rt1.c3 COLLATE BINARY)))OR(((vt1.c0)&(rt0.c2)))))AND((((rt1.c1, rt1.c4, rt1.c2)) BETWEEN ((rt1.c4, rt0.c1, rt1.c4)) AND ((rt0.c2, rt1.c4, 0.16805340429427607))))) FULL OUTER JOIN rt1 ON (((rt0.c2)AND(rt1.c2)) IN ()) WHERE (((NULL)<<(CASE WHEN vt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN rt1.c4 THEN rt0.c2 ELSE rt1.c3 END))) ORDER BY (- (((vt1.c0) NOT BETWEEN (rt1.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((NULL)<<(CASE WHEN vt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN rt1.c4 THEN rt0.c2 ELSE rt1.c3 END))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((rt1.c0)AND(CAST(rt1.c0 AS TEXT))) LEFT OUTER JOIN vt1 ON ((((((((((rt1.c2)/(rt1.c4)))OR(rt0.c0)))OR(rt1.c3 COLLATE BINARY)))OR(((vt1.c0)&(rt0.c2)))))AND((((rt1.c1, rt1.c4, rt1.c2)) BETWEEN ((rt1.c4, rt0.c1, rt1.c4)) AND ((rt0.c2, rt1.c4, 0.16805340429427607))))) FULL OUTER JOIN rt1 ON (((rt0.c2)AND(rt1.c2)) IN ()) ORDER BY (- (((vt1.c0) NOT BETWEEN (rt1.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((rt1.c0)AND(CAST(rt1.c0 AS TEXT))) LEFT OUTER JOIN vt1 ON ((((((((((rt1.c2)/(rt1.c4)))OR(rt0.c0)))OR(rt1.c3 COLLATE BINARY)))OR(((vt1.c0)&(rt0.c2)))))AND((((rt1.c1, rt1.c4, rt1.c2)) BETWEEN ((rt1.c4, rt0.c1, rt1.c4)) AND ((rt0.c2, rt1.c4, 0.16805340429427607))))) FULL OUTER JOIN rt1 ON (((rt0.c2)AND(rt1.c2)) IN ()) WHERE (((NULL)<<(CASE WHEN vt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN rt1.c4 THEN rt0.c2 ELSE rt1.c3 END))) ORDER BY (- (((vt1.c0) NOT BETWEEN (rt1.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((NULL)<<(CASE WHEN vt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN rt1.c4 THEN rt0.c2 ELSE rt1.c3 END))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((rt1.c0)AND(CAST(rt1.c0 AS TEXT))) LEFT OUTER JOIN vt1 ON ((((((((((rt1.c2)/(rt1.c4)))OR(rt0.c0)))OR(rt1.c3 COLLATE BINARY)))OR(((vt1.c0)&(rt0.c2)))))AND((((rt1.c1, rt1.c4, rt1.c2)) BETWEEN ((rt1.c4, rt0.c1, rt1.c4)) AND ((rt0.c2, rt1.c4, 0.16805340429427607))))) FULL OUTER JOIN rt1 ON (((rt0.c2)AND(rt1.c2)) IN ()) ORDER BY (- (((vt1.c0) NOT BETWEEN (rt1.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE (rt1.c1 IN (rt1.c2))  WHEN rt1.c1 COLLATE RTRIM THEN NULL ELSE rt1.c1 COLLATE RTRIM END) ORDER BY ((((((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c3 WHEN rt1.c1 THEN NULL END)OR(IFNULL(DISTINCT rt1.c4, '-1142658346'))))AND(CASE WHEN rt1.c0 THEN rt1.c0 END)))OR(((rt1.c2)*(rt1.c3)))))OR(((((((((vt0.c0)OR(rt1.c4)))AND(rt1.c2)))OR(rt1.c1)))AND(vt0.c0)))), '|eXZ[Yt}'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt1.c1 IN (rt1.c2))  WHEN rt1.c1 COLLATE RTRIM THEN NULL ELSE rt1.c1 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c3 WHEN rt1.c1 THEN NULL END)OR(IFNULL(DISTINCT rt1.c4, '-1142658346'))))AND(CASE WHEN rt1.c0 THEN rt1.c0 END)))OR(((rt1.c2)*(rt1.c3)))))OR(((((((((vt0.c0)OR(rt1.c4)))AND(rt1.c2)))OR(rt1.c1)))AND(vt0.c0)))), '|eXZ[Yt}'  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE (rt1.c1 IN (rt1.c2))  WHEN rt1.c1 COLLATE RTRIM THEN NULL ELSE rt1.c1 COLLATE RTRIM END) ORDER BY ((((((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c3 WHEN rt1.c1 THEN NULL END)OR(IFNULL(DISTINCT rt1.c4, '-1142658346'))))AND(CASE WHEN rt1.c0 THEN rt1.c0 END)))OR(((rt1.c2)*(rt1.c3)))))OR(((((((((vt0.c0)OR(rt1.c4)))AND(rt1.c2)))OR(rt1.c1)))AND(vt0.c0)))), '|eXZ[Yt}'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt1.c1 IN (rt1.c2))  WHEN rt1.c1 COLLATE RTRIM THEN NULL ELSE rt1.c1 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c3 WHEN rt1.c1 THEN NULL END)OR(IFNULL(DISTINCT rt1.c4, '-1142658346'))))AND(CASE WHEN rt1.c0 THEN rt1.c0 END)))OR(((rt1.c2)*(rt1.c3)))))OR(((((((((vt0.c0)OR(rt1.c4)))AND(rt1.c2)))OR(rt1.c1)))AND(vt0.c0)))), '|eXZ[Yt}'  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE (rt1.c1 IN (rt1.c2))  WHEN rt1.c1 COLLATE RTRIM THEN NULL ELSE rt1.c1 COLLATE RTRIM END) ORDER BY ((((((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c3 WHEN rt1.c1 THEN NULL END)OR(IFNULL(DISTINCT rt1.c4, '-1142658346'))))AND(CASE WHEN rt1.c0 THEN rt1.c0 END)))OR(((rt1.c2)*(rt1.c3)))))OR(((((((((vt0.c0)OR(rt1.c4)))AND(rt1.c2)))OR(rt1.c1)))AND(vt0.c0)))), '|eXZ[Yt}'  NULLS LAST;
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON 598146009 WHERE (((JULIANDAY(vt1.c0, vt0.c0, vt1.c0, vt1.c0, vt1.c0)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((JULIANDAY(vt1.c0, vt0.c0, vt1.c0, vt1.c0, vt1.c0)) ISNULL)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON 598146009);
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON 598146009 WHERE (((JULIANDAY(vt1.c0, vt0.c0, vt1.c0, vt1.c0, vt1.c0)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((JULIANDAY(vt1.c0, vt0.c0, vt1.c0, vt1.c0, vt1.c0)) ISNULL)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON 598146009);
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON 598146009 WHERE (((JULIANDAY(vt1.c0, vt0.c0, vt1.c0, vt1.c0, vt1.c0)) ISNULL));
SELECT ALL * FROM vt0, rt1, vt1 WHERE (((rt1.c1)*(((vt1.c0)LIKE(vt1.c0))))) ORDER BY (((((+ (rt1.c0)))OR(LTRIM(rt1.c4))))OR(rt1.c4))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)*(((vt1.c0)LIKE(vt1.c0))))) IS TRUE)  as count FROM vt0, rt1, vt1 ORDER BY (((((+ (rt1.c0)))OR(LTRIM(rt1.c4))))OR(rt1.c4))  NULLS FIRST);
SELECT ALL * FROM vt0, rt1, vt1 WHERE (((rt1.c1)*(((vt1.c0)LIKE(vt1.c0))))) ORDER BY (((((+ (rt1.c0)))OR(LTRIM(rt1.c4))))OR(rt1.c4))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)*(((vt1.c0)LIKE(vt1.c0))))) IS TRUE)  as count FROM vt0, rt1, vt1 ORDER BY (((((+ (rt1.c0)))OR(LTRIM(rt1.c4))))OR(rt1.c4))  NULLS FIRST);
SELECT ALL * FROM vt0, rt1, vt1 WHERE (((rt1.c1)*(((vt1.c0)LIKE(vt1.c0))))) ORDER BY (((((+ (rt1.c0)))OR(LTRIM(rt1.c4))))OR(rt1.c4))  NULLS FIRST;
SELECT * FROM vt1 WHERE (SQLITE_COMPILEOPTION_USED(vt1.c0 COLLATE BINARY)) ORDER BY (json(vt1.c0) IN (vt1.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(vt1.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt1 ORDER BY (json(vt1.c0) IN (vt1.c0 COLLATE RTRIM))  NULLS LAST);
SELECT * FROM vt1 WHERE (SQLITE_COMPILEOPTION_USED(vt1.c0 COLLATE BINARY)) ORDER BY (json(vt1.c0) IN (vt1.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(vt1.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt1 ORDER BY (json(vt1.c0) IN (vt1.c0 COLLATE RTRIM))  NULLS LAST);
SELECT ALL * FROM rt0, vt0, rt1, vt1 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0, rt1, vt1);
SELECT ALL * FROM rt0, vt0, rt1, vt1 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0, rt1, vt1);
SELECT ALL * FROM rt0, vt0, rt1, vt1 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC));
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM rt0, vt0, vt1, rt1 WHERE (CAST(1.872455121E9 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(1.872455121E9 AS REAL)) IS TRUE)  as count FROM rt0, vt0, vt1, rt1);
SELECT COUNT(*) FROM rt0, vt0, vt1, rt1 WHERE (CAST(1.872455121E9 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(1.872455121E9 AS REAL)) IS TRUE)  as count FROM rt0, vt0, vt1, rt1);
SELECT COUNT(*) FROM rt0, vt0, vt1, rt1 WHERE (CAST(1.872455121E9 AS REAL));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON HEX(DISTINCT rt1.c0 COLLATE RTRIM) WHERE ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c3)) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON HEX(DISTINCT rt1.c0 COLLATE RTRIM));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON HEX(DISTINCT rt1.c0 COLLATE RTRIM) WHERE ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c3)) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON HEX(DISTINCT rt1.c0 COLLATE RTRIM));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON HEX(DISTINCT rt1.c0 COLLATE RTRIM) WHERE ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c3)) IN ()));
SELECT COUNT(*) FROM vt1, rt1, vt0, rt0 WHERE ((+ (NULL)));
SELECT SUM(count) FROM (SELECT (((+ (NULL))) IS TRUE)  as count FROM vt1, rt1, vt0, rt0);
SELECT COUNT(*) FROM vt1, rt1, vt0, rt0 WHERE ((+ (NULL)));
SELECT SUM(count) FROM (SELECT (((+ (NULL))) IS TRUE)  as count FROM vt1, rt1, vt0, rt0);
SELECT COUNT(*) FROM vt1, rt1, vt0, rt0 WHERE ((+ (NULL)));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c0)>=(vt1.c0)) THEN ((vt1.c0) BETWEEN (x'') AND ('1')) ELSE vt1.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0)>=(vt1.c0)) THEN ((vt1.c0) BETWEEN (x'') AND ('1')) ELSE vt1.c0 END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c0)>=(vt1.c0)) THEN ((vt1.c0) BETWEEN (x'') AND ('1')) ELSE vt1.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0)>=(vt1.c0)) THEN ((vt1.c0) BETWEEN (x'') AND ('1')) ELSE vt1.c0 END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c0)>=(vt1.c0)) THEN ((vt1.c0) BETWEEN (x'') AND ('1')) ELSE vt1.c0 END);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((rt1.c3) NOTNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt1.c3) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((rt1.c3) NOTNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt1.c3) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((rt1.c3) NOTNULL) COLLATE RTRIM);
SELECT ALL * FROM vt0, rt1 INNER JOIN rt0 ON (CASE rt0.c0  WHEN rt1.c4 THEN rt1.c2 WHEN vt0.c0 THEN rt0.c0 WHEN rt1.c4 THEN rt0.c1 ELSE rt0.c1 END IN ()) WHERE ((NOT (((rt0.c0)+(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c0)+(rt0.c0))))) IS TRUE)  as count FROM vt0, rt1 INNER JOIN rt0 ON (CASE rt0.c0  WHEN rt1.c4 THEN rt1.c2 WHEN vt0.c0 THEN rt0.c0 WHEN rt1.c4 THEN rt0.c1 ELSE rt0.c1 END IN ()));
SELECT ALL * FROM vt0, rt1 INNER JOIN rt0 ON (CASE rt0.c0  WHEN rt1.c4 THEN rt1.c2 WHEN vt0.c0 THEN rt0.c0 WHEN rt1.c4 THEN rt0.c1 ELSE rt0.c1 END IN ()) WHERE ((NOT (((rt0.c0)+(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c0)+(rt0.c0))))) IS TRUE)  as count FROM vt0, rt1 INNER JOIN rt0 ON (CASE rt0.c0  WHEN rt1.c4 THEN rt1.c2 WHEN vt0.c0 THEN rt0.c0 WHEN rt1.c4 THEN rt0.c1 ELSE rt0.c1 END IN ()));
SELECT ALL * FROM vt0, rt1 INNER JOIN rt0 ON (CASE rt0.c0  WHEN rt1.c4 THEN rt1.c2 WHEN vt0.c0 THEN rt0.c0 WHEN rt1.c4 THEN rt0.c1 ELSE rt0.c1 END IN ()) WHERE ((NOT (((rt0.c0)+(rt0.c0)))));
SELECT ALL * FROM rt0, rt1, vt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, rt1, vt0, vt1);
SELECT ALL * FROM rt0, rt1, vt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, rt1, vt0, vt1);
SELECT ALL * FROM rt0, rt1, vt0, vt1 WHERE (NULL);
SELECT * FROM vt0, rt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE RTRIM) ORDER BY ((DATE(rt0.c0, vt0.c0, rt0.c0)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((DATE(rt0.c0, vt0.c0, rt0.c0)) IS TRUE) DESC);
SELECT * FROM vt0, rt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE RTRIM) ORDER BY ((DATE(rt0.c0, vt0.c0, rt0.c0)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((DATE(rt0.c0, vt0.c0, rt0.c0)) IS TRUE) DESC);
SELECT * FROM vt0, rt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE RTRIM) ORDER BY ((DATE(rt0.c0, vt0.c0, rt0.c0)) IS TRUE) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(LIKELIHOOD(vt0.c0, 0.6143811374176652) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELIHOOD(vt0.c0, 0.6143811374176652) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(LIKELIHOOD(vt0.c0, 0.6143811374176652) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELIHOOD(vt0.c0, 0.6143811374176652) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(LIKELIHOOD(vt0.c0, 0.6143811374176652) AS INTEGER));
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE vt0.c0  WHEN NULL THEN NULLIF(rt0.c1, vt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN NULL THEN NULLIF(rt0.c1, vt0.c0) END) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE vt0.c0  WHEN NULL THEN NULLIF(rt0.c1, vt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN NULL THEN NULLIF(rt0.c1, vt0.c0) END) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE vt0.c0  WHEN NULL THEN NULLIF(rt0.c1, vt0.c0) END);
SELECT ALL COUNT(*) FROM vt0, rt0 NATURAL JOIN rt1 WHERE (ROUND(NULL, ((rt1.c2) BETWEEN (rt0.c0) AND (rt0.c0)))) ORDER BY ((UPPER(vt0.c0)) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ROUND(NULL, ((rt1.c2) BETWEEN (rt0.c0) AND (rt0.c0)))) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN rt1 ORDER BY ((UPPER(vt0.c0)) NOTNULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 NATURAL JOIN rt1 WHERE (ROUND(NULL, ((rt1.c2) BETWEEN (rt0.c0) AND (rt0.c0)))) ORDER BY ((UPPER(vt0.c0)) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ROUND(NULL, ((rt1.c2) BETWEEN (rt0.c0) AND (rt0.c0)))) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN rt1 ORDER BY ((UPPER(vt0.c0)) NOTNULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 NATURAL JOIN rt1 WHERE (ROUND(NULL, ((rt1.c2) BETWEEN (rt0.c0) AND (rt0.c0)))) ORDER BY ((UPPER(vt0.c0)) NOTNULL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt1, vt0, rt1 WHERE (((rt1.c2)>(rt1.c0)) COLLATE RTRIM) ORDER BY CASE ((rt1.c1)LIKE('648013512'))  WHEN rt0.c2 COLLATE BINARY THEN rt1.c4 COLLATE BINARY ELSE ((vt0.c0) BETWEEN (rt1.c0) AND (9.87579631E8)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c2)>(rt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1, vt0, rt1 ORDER BY CASE ((rt1.c1)LIKE('648013512'))  WHEN rt0.c2 COLLATE BINARY THEN rt1.c4 COLLATE BINARY ELSE ((vt0.c0) BETWEEN (rt1.c0) AND (9.87579631E8)) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0, rt1 WHERE (((rt1.c2)>(rt1.c0)) COLLATE RTRIM) ORDER BY CASE ((rt1.c1)LIKE('648013512'))  WHEN rt0.c2 COLLATE BINARY THEN rt1.c4 COLLATE BINARY ELSE ((vt0.c0) BETWEEN (rt1.c0) AND (9.87579631E8)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c2)>(rt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1, vt0, rt1 ORDER BY CASE ((rt1.c1)LIKE('648013512'))  WHEN rt0.c2 COLLATE BINARY THEN rt1.c4 COLLATE BINARY ELSE ((vt0.c0) BETWEEN (rt1.c0) AND (9.87579631E8)) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0, rt1 WHERE (((rt1.c2)>(rt1.c0)) COLLATE RTRIM) ORDER BY CASE ((rt1.c1)LIKE('648013512'))  WHEN rt0.c2 COLLATE BINARY THEN rt1.c4 COLLATE BINARY ELSE ((vt0.c0) BETWEEN (rt1.c0) AND (9.87579631E8)) END DESC  NULLS LAST;
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (NOT (rt0.c2 COLLATE NOCASE)) INNER JOIN vt1 ON (~ ((NOT (vt1.c0)))) WHERE (CASE CASE vt1.c0  WHEN vt1.c0 THEN 0X525fbca6 END  WHEN CAST(rt0.c2 AS NUMERIC) THEN CAST(rt0.c1 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE vt1.c0  WHEN vt1.c0 THEN 0x525fbca6 END  WHEN CAST(rt0.c2 AS NUMERIC) THEN CAST(rt0.c1 AS TEXT) END) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (NOT (rt0.c2 COLLATE NOCASE)) INNER JOIN vt1 ON (~ ((NOT (vt1.c0)))));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (NOT (rt0.c2 COLLATE NOCASE)) INNER JOIN vt1 ON (~ ((NOT (vt1.c0)))) WHERE (CASE CASE vt1.c0  WHEN vt1.c0 THEN 0X525fbca6 END  WHEN CAST(rt0.c2 AS NUMERIC) THEN CAST(rt0.c1 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE vt1.c0  WHEN vt1.c0 THEN 0x525fbca6 END  WHEN CAST(rt0.c2 AS NUMERIC) THEN CAST(rt0.c1 AS TEXT) END) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (NOT (rt0.c2 COLLATE NOCASE)) INNER JOIN vt1 ON (~ ((NOT (vt1.c0)))));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (NOT (rt0.c2 COLLATE NOCASE)) INNER JOIN vt1 ON (~ ((NOT (vt1.c0)))) WHERE (CASE CASE vt1.c0  WHEN vt1.c0 THEN 0X525fbca6 END  WHEN CAST(rt0.c2 AS NUMERIC) THEN CAST(rt0.c1 AS TEXT) END);
SELECT ALL * FROM rt1, vt0, rt0, vt1 WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM rt1, vt0, rt0, vt1);
SELECT ALL * FROM rt1, vt0, rt0, vt1 WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM rt1, vt0, rt0, vt1);
SELECT ALL * FROM rt1, vt0, rt0, vt1 WHERE (rt1.c4);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON ((rt0.c1) IS FALSE) WHERE ((((rt0.c1)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((((vt1.c0)LIKE(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((((vt1.c0)LIKE(vt1.c0)))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((rt0.c1) IS FALSE));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON ((rt0.c1) IS FALSE) WHERE ((((rt0.c1)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((((vt1.c0)LIKE(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((((vt1.c0)LIKE(vt1.c0)))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((rt0.c1) IS FALSE));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON ((rt0.c1) IS FALSE) WHERE ((((rt0.c1)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((((vt1.c0)LIKE(vt1.c0))))));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (((rt1.c2)*(rt0.c2)) IN ()) RIGHT OUTER JOIN rt0 ON ((((rt1.c1)AND(rt0.c1)))OR(CASE WHEN vt1.c0 THEN rt0.c0 END)) CROSS JOIN rt1 ON x'' WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (((rt1.c2)*(rt0.c2)) IN ()) RIGHT OUTER JOIN rt0 ON ((((rt1.c1)AND(rt0.c1)))OR(CASE WHEN vt1.c0 THEN rt0.c0 END)) CROSS JOIN rt1 ON x'');
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (((rt1.c2)*(rt0.c2)) IN ()) RIGHT OUTER JOIN rt0 ON ((((rt1.c1)AND(rt0.c1)))OR(CASE WHEN vt1.c0 THEN rt0.c0 END)) CROSS JOIN rt1 ON x'' WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (((rt1.c2)*(rt0.c2)) IN ()) RIGHT OUTER JOIN rt0 ON ((((rt1.c1)AND(rt0.c1)))OR(CASE WHEN vt1.c0 THEN rt0.c0 END)) CROSS JOIN rt1 ON x'');
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt1 ON (((vt1.c0)) NOT BETWEEN (((('1302209752')>(rt1.c0)))) AND ((CASE WHEN rt1.c1 THEN '9Fn徬A' END))) WHERE (LOWER(UPPER(DISTINCT rt1.c1))) ORDER BY (rt1.c0 COLLATE RTRIM IN (CASE WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c4 THEN vt1.c0 WHEN rt1.c1 THEN -517031740 ELSE vt1.c0 END)) DESC  NULLS FIRST, (((rt1.c4, rt1.c4, vt1.c0)) NOT BETWEEN ((rt1.c4 COLLATE BINARY, CAST(rt1.c2 AS INTEGER), ((rt1.c3)-(rt1.c3)))) AND ((((((rt1.c0)AND(vt1.c0)))AND(rt1.c3)), LIKELY(DISTINCT rt1.c1), ((vt1.c0) BETWEEN (rt1.c0) AND (rt1.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(UPPER(DISTINCT rt1.c1))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt1 ON (((vt1.c0)) NOT BETWEEN (((('1302209752')>(rt1.c0)))) AND ((CASE WHEN rt1.c1 THEN '9Fn徬A' END))) ORDER BY (rt1.c0 COLLATE RTRIM IN (CASE WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c4 THEN vt1.c0 WHEN rt1.c1 THEN -517031740 ELSE vt1.c0 END)) DESC  NULLS FIRST, (((rt1.c4, rt1.c4, vt1.c0)) NOT BETWEEN ((rt1.c4 COLLATE BINARY, CAST(rt1.c2 AS INTEGER), ((rt1.c3)-(rt1.c3)))) AND ((((((rt1.c0)AND(vt1.c0)))AND(rt1.c3)), LIKELY(DISTINCT rt1.c1), ((vt1.c0) BETWEEN (rt1.c0) AND (rt1.c2))))) ASC);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt1 ON (((vt1.c0)) NOT BETWEEN (((('1302209752')>(rt1.c0)))) AND ((CASE WHEN rt1.c1 THEN '9Fn徬A' END))) WHERE (LOWER(UPPER(DISTINCT rt1.c1))) ORDER BY (rt1.c0 COLLATE RTRIM IN (CASE WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c4 THEN vt1.c0 WHEN rt1.c1 THEN -517031740 ELSE vt1.c0 END)) DESC  NULLS FIRST, (((rt1.c4, rt1.c4, vt1.c0)) NOT BETWEEN ((rt1.c4 COLLATE BINARY, CAST(rt1.c2 AS INTEGER), ((rt1.c3)-(rt1.c3)))) AND ((((((rt1.c0)AND(vt1.c0)))AND(rt1.c3)), LIKELY(DISTINCT rt1.c1), ((vt1.c0) BETWEEN (rt1.c0) AND (rt1.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(UPPER(DISTINCT rt1.c1))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt1 ON (((vt1.c0)) NOT BETWEEN (((('1302209752')>(rt1.c0)))) AND ((CASE WHEN rt1.c1 THEN '9Fn徬A' END))) ORDER BY (rt1.c0 COLLATE RTRIM IN (CASE WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c4 THEN vt1.c0 WHEN rt1.c1 THEN -517031740 ELSE vt1.c0 END)) DESC  NULLS FIRST, (((rt1.c4, rt1.c4, vt1.c0)) NOT BETWEEN ((rt1.c4 COLLATE BINARY, CAST(rt1.c2 AS INTEGER), ((rt1.c3)-(rt1.c3)))) AND ((((((rt1.c0)AND(vt1.c0)))AND(rt1.c3)), LIKELY(DISTINCT rt1.c1), ((vt1.c0) BETWEEN (rt1.c0) AND (rt1.c2))))) ASC);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt1 ON (((vt1.c0)) NOT BETWEEN (((('1302209752')>(rt1.c0)))) AND ((CASE WHEN rt1.c1 THEN '9Fn徬A' END))) WHERE (LOWER(UPPER(DISTINCT rt1.c1))) ORDER BY (rt1.c0 COLLATE RTRIM IN (CASE WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c4 THEN vt1.c0 WHEN rt1.c1 THEN -517031740 ELSE vt1.c0 END)) DESC  NULLS FIRST, (((rt1.c4, rt1.c4, vt1.c0)) NOT BETWEEN ((rt1.c4 COLLATE BINARY, CAST(rt1.c2 AS INTEGER), ((rt1.c3)-(rt1.c3)))) AND ((((((rt1.c0)AND(vt1.c0)))AND(rt1.c3)), LIKELY(DISTINCT rt1.c1), ((vt1.c0) BETWEEN (rt1.c0) AND (rt1.c2))))) ASC;
SELECT * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))) COLLATE NOCASE);
SELECT ALL * FROM rt1 INNER JOIN rt0 ON ((rt1.c4) NOT NULL) RIGHT OUTER JOIN vt0 ON (((((rt1.c0 IN ()))AND(((rt0.c2)IS NOT('1295632757')))))AND(x'')) WHERE (CASE ((rt1.c0)<(vt0.c0))  WHEN CAST(NULL AS INTEGER) THEN (NOT (rt1.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c0)<(vt0.c0))  WHEN CAST(NULL AS INTEGER) THEN (NOT (rt1.c3)) END) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON ((rt1.c4) NOT NULL) RIGHT OUTER JOIN vt0 ON (((((rt1.c0 IN ()))AND(((rt0.c2)IS NOT('1295632757')))))AND(x'')));
SELECT ALL * FROM rt1 INNER JOIN rt0 ON ((rt1.c4) NOT NULL) RIGHT OUTER JOIN vt0 ON (((((rt1.c0 IN ()))AND(((rt0.c2)IS NOT('1295632757')))))AND(x'')) WHERE (CASE ((rt1.c0)<(vt0.c0))  WHEN CAST(NULL AS INTEGER) THEN (NOT (rt1.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c0)<(vt0.c0))  WHEN CAST(NULL AS INTEGER) THEN (NOT (rt1.c3)) END) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON ((rt1.c4) NOT NULL) RIGHT OUTER JOIN vt0 ON (((((rt1.c0 IN ()))AND(((rt0.c2)IS NOT('1295632757')))))AND(x'')));
SELECT ALL * FROM rt1 INNER JOIN rt0 ON ((rt1.c4) NOT NULL) RIGHT OUTER JOIN vt0 ON (((((rt1.c0 IN ()))AND(((rt0.c2)IS NOT('1295632757')))))AND(x'')) WHERE (CASE ((rt1.c0)<(vt0.c0))  WHEN CAST(NULL AS INTEGER) THEN (NOT (rt1.c3)) END);
SELECT ALL * FROM rt1, vt1, rt0, vt0 WHERE (TRIM(DISTINCT NULL));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT NULL)) IS TRUE)  as count FROM rt1, vt1, rt0, vt0);
SELECT ALL * FROM rt1, vt1, rt0, vt0 WHERE (TRIM(DISTINCT NULL));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT NULL)) IS TRUE)  as count FROM rt1, vt1, rt0, vt0);
SELECT ALL * FROM rt1, vt1, rt0, vt0 WHERE (TRIM(DISTINCT NULL));
SELECT COUNT(*) FROM rt1, vt0, rt0, vt1 WHERE ((+ (((rt1.c3) IS FALSE)))) ORDER BY ((((((rt1.c0) ISNULL))OR(0.9272899944710631)))AND(CAST(rt1.c3 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c3) IS FALSE)))) IS TRUE)  as count FROM rt1, vt0, rt0, vt1 ORDER BY ((((((rt1.c0) ISNULL))OR(0.9272899944710631)))AND(CAST(rt1.c3 AS BLOB)))  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0, rt0, vt1 WHERE ((+ (((rt1.c3) IS FALSE)))) ORDER BY ((((((rt1.c0) ISNULL))OR(0.9272899944710631)))AND(CAST(rt1.c3 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c3) IS FALSE)))) IS TRUE)  as count FROM rt1, vt0, rt0, vt1 ORDER BY ((((((rt1.c0) ISNULL))OR(0.9272899944710631)))AND(CAST(rt1.c3 AS BLOB)))  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0, rt0, vt1 WHERE ((+ (((rt1.c3) IS FALSE)))) ORDER BY ((((((rt1.c0) ISNULL))OR(0.9272899944710631)))AND(CAST(rt1.c3 AS BLOB)))  NULLS LAST;
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON MAX(LAST_INSERT_ROWID(), ((rt0.c0)GLOB(rt0.c2))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON MAX(LAST_INSERT_ROWID(), ((rt0.c0)GLOB(rt0.c2))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON MAX(LAST_INSERT_ROWID(), ((rt0.c0)GLOB(rt0.c2))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON MAX(LAST_INSERT_ROWID(), ((rt0.c0)GLOB(rt0.c2))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON MAX(LAST_INSERT_ROWID(), ((rt0.c0)GLOB(rt0.c2))) WHERE (NULL);
SELECT COUNT(*) FROM rt0, vt0 CROSS JOIN rt1 ON ((LOWER(DISTINCT rt1.c4)) ISNULL) WHERE (STRFTIME((+ (x'')), ((0.7192637398025287) NOT BETWEEN (rt1.c1) AND (137105174)), ((((rt0.c1)OR(rt1.c4)))OR(rt1.c3))));
SELECT SUM(count) FROM (SELECT ((STRFTIME((+ (x'')), ((0.7192637398025287) NOT BETWEEN (rt1.c1) AND (137105174)), ((((rt0.c1)OR(rt1.c4)))OR(rt1.c3)))) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN rt1 ON ((LOWER(DISTINCT rt1.c4)) ISNULL));
SELECT COUNT(*) FROM rt0, vt0 CROSS JOIN rt1 ON ((LOWER(DISTINCT rt1.c4)) ISNULL) WHERE (STRFTIME((+ (x'')), ((0.7192637398025287) NOT BETWEEN (rt1.c1) AND (137105174)), ((((rt0.c1)OR(rt1.c4)))OR(rt1.c3))));
SELECT SUM(count) FROM (SELECT ((STRFTIME((+ (x'')), ((0.7192637398025287) NOT BETWEEN (rt1.c1) AND (137105174)), ((((rt0.c1)OR(rt1.c4)))OR(rt1.c3)))) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN rt1 ON ((LOWER(DISTINCT rt1.c4)) ISNULL));
SELECT COUNT(*) FROM rt0, vt0 CROSS JOIN rt1 ON ((LOWER(DISTINCT rt1.c4)) ISNULL) WHERE (STRFTIME((+ (x'')), ((0.7192637398025287) NOT BETWEEN (rt1.c1) AND (137105174)), ((((rt0.c1)OR(rt1.c4)))OR(rt1.c3))));
SELECT ALL COUNT(*) FROM rt1, vt0, vt1, rt0 WHERE (json_array_length(((((rt1.c4)OR('ퟙ38SM+')))AND(rt1.c3)), ((((((((rt1.c2)OR(rt1.c3)))OR(rt1.c0)))OR(rt0.c0)))OR(rt1.c0))));
SELECT SUM(count) FROM (SELECT ((json_array_length(((((rt1.c4)OR('ퟙ38SM+')))AND(rt1.c3)), ((((((((rt1.c2)OR(rt1.c3)))OR(rt1.c0)))OR(rt0.c0)))OR(rt1.c0)))) IS TRUE)  as count FROM rt1, vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM rt1, vt0, vt1, rt0 WHERE (json_array_length(((((rt1.c4)OR('ퟙ38SM+')))AND(rt1.c3)), ((((((((rt1.c2)OR(rt1.c3)))OR(rt1.c0)))OR(rt0.c0)))OR(rt1.c0))));
SELECT SUM(count) FROM (SELECT ((json_array_length(((((rt1.c4)OR('ퟙ38SM+')))AND(rt1.c3)), ((((((((rt1.c2)OR(rt1.c3)))OR(rt1.c0)))OR(rt0.c0)))OR(rt1.c0)))) IS TRUE)  as count FROM rt1, vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM rt1, vt0, vt1, rt0 WHERE (json_array_length(((((rt1.c4)OR('ퟙ38SM+')))AND(rt1.c3)), ((((((((rt1.c2)OR(rt1.c3)))OR(rt1.c0)))OR(rt0.c0)))OR(rt1.c0))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0) IS FALSE)) BETWEEN ((x'' IN ())) AND (((vt0.c0) NOTNULL)))) ORDER BY ((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))OR(CAST(vt1.c0 AS INTEGER))))OR(((vt0.c0)==(vt0.c0))))  NULLS FIRST, NULL  NULLS LAST, CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)OR(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS FALSE)) BETWEEN ((x'' IN ())) AND (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))OR(CAST(vt1.c0 AS INTEGER))))OR(((vt0.c0)==(vt0.c0))))  NULLS FIRST, NULL  NULLS LAST, CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)OR(vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0) IS FALSE)) BETWEEN ((x'' IN ())) AND (((vt0.c0) NOTNULL)))) ORDER BY ((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))OR(CAST(vt1.c0 AS INTEGER))))OR(((vt0.c0)==(vt0.c0))))  NULLS FIRST, NULL  NULLS LAST, CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)OR(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS FALSE)) BETWEEN ((x'' IN ())) AND (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))OR(CAST(vt1.c0 AS INTEGER))))OR(((vt0.c0)==(vt0.c0))))  NULLS FIRST, NULL  NULLS LAST, CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)OR(vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0) IS FALSE)) BETWEEN ((x'' IN ())) AND (((vt0.c0) NOTNULL)))) ORDER BY ((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))OR(CAST(vt1.c0 AS INTEGER))))OR(((vt0.c0)==(vt0.c0))))  NULLS FIRST, NULL  NULLS LAST, CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)OR(vt0.c0)) END;
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE ((NOT (CASE WHEN rt0.c0 THEN rt0.c2 ELSE vt0.c0 END))) ORDER BY CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN rt0.c1 ELSE ((rt0.c1)IS NOT('466952864')) END, x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN rt0.c0 THEN rt0.c2 ELSE vt0.c0 END))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN rt0.c1 ELSE ((rt0.c1)IS NOT('466952864')) END, x''  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE ((NOT (CASE WHEN rt0.c0 THEN rt0.c2 ELSE vt0.c0 END))) ORDER BY CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN rt0.c1 ELSE ((rt0.c1)IS NOT('466952864')) END, x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN rt0.c0 THEN rt0.c2 ELSE vt0.c0 END))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN rt0.c1 ELSE ((rt0.c1)IS NOT('466952864')) END, x''  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE ((NOT (CASE WHEN rt0.c0 THEN rt0.c2 ELSE vt0.c0 END))) ORDER BY CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN rt0.c1 ELSE ((rt0.c1)IS NOT('466952864')) END, x''  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2)<=(rt0.c0)))GLOB((rt0.c1 IN ())))) ORDER BY CASE WHEN (~ (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(rt0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)<=(rt0.c0)))GLOB((rt0.c1 IN ())))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN (~ (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(rt0.c1)) END);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2)<=(rt0.c0)))GLOB((rt0.c1 IN ())))) ORDER BY CASE WHEN (~ (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(rt0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)<=(rt0.c0)))GLOB((rt0.c1 IN ())))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN (~ (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(rt0.c1)) END);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2)<=(rt0.c0)))GLOB((rt0.c1 IN ())))) ORDER BY CASE WHEN (~ (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(rt0.c1)) END;
SELECT * FROM vt0, rt1, rt0 WHERE ((((rt1.c1 IN ()))&((- (rt0.c2))))) ORDER BY LOWER((~ (rt1.c4))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN ()))&((- (rt0.c2))))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY LOWER((~ (rt1.c4))) ASC  NULLS LAST);
SELECT * FROM vt0, rt1, rt0 WHERE ((((rt1.c1 IN ()))&((- (rt0.c2))))) ORDER BY LOWER((~ (rt1.c4))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN ()))&((- (rt0.c2))))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY LOWER((~ (rt1.c4))) ASC  NULLS LAST);
SELECT * FROM vt0, rt1, rt0 WHERE ((((rt1.c1 IN ()))&((- (rt0.c2))))) ORDER BY LOWER((~ (rt1.c4))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0, rt1 WHERE (((((((vt0.c0) NOT NULL))OR((((rt1.c1)) BETWEEN ((rt1.c4)) AND ((vt1.c0))))))AND((((rt1.c4, -862381020, vt0.c0, vt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c3, vt1.c0, rt1.c2, rt1.c2, rt1.c2)) AND ((rt1.c3, rt1.c0, vt1.c0, rt1.c2, rt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) NOT NULL))OR((((rt1.c1)) BETWEEN ((rt1.c4)) AND ((vt1.c0))))))AND((((rt1.c4, -862381020, vt0.c0, vt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c3, vt1.c0, rt1.c2, rt1.c2, rt1.c2)) AND ((rt1.c3, rt1.c0, vt1.c0, rt1.c2, rt1.c1)))))) IS TRUE)  as count FROM vt1, vt0, rt1);
SELECT ALL COUNT(*) FROM vt1, vt0, rt1 WHERE (((((((vt0.c0) NOT NULL))OR((((rt1.c1)) BETWEEN ((rt1.c4)) AND ((vt1.c0))))))AND((((rt1.c4, -862381020, vt0.c0, vt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c3, vt1.c0, rt1.c2, rt1.c2, rt1.c2)) AND ((rt1.c3, rt1.c0, vt1.c0, rt1.c2, rt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) NOT NULL))OR((((rt1.c1)) BETWEEN ((rt1.c4)) AND ((vt1.c0))))))AND((((rt1.c4, -862381020, vt0.c0, vt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c3, vt1.c0, rt1.c2, rt1.c2, rt1.c2)) AND ((rt1.c3, rt1.c0, vt1.c0, rt1.c2, rt1.c1)))))) IS TRUE)  as count FROM vt1, vt0, rt1);
SELECT ALL COUNT(*) FROM vt1, vt0, rt1 WHERE (((((((vt0.c0) NOT NULL))OR((((rt1.c1)) BETWEEN ((rt1.c4)) AND ((vt1.c0))))))AND((((rt1.c4, -862381020, vt0.c0, vt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c3, vt1.c0, rt1.c2, rt1.c2, rt1.c2)) AND ((rt1.c3, rt1.c0, vt1.c0, rt1.c2, rt1.c1))))));
SELECT * FROM vt0, vt1, rt0, rt1 WHERE (((((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt0.c0))) NOT BETWEEN (((rt0.c2)-(rt1.c2))) AND (((vt0.c0) NOT BETWEEN (rt1.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt0.c0))) NOT BETWEEN (((rt0.c2)-(rt1.c2))) AND (((vt0.c0) NOT BETWEEN (rt1.c2) AND (rt0.c0))))) IS TRUE)  as count FROM vt0, vt1, rt0, rt1);
SELECT * FROM vt0, vt1, rt0, rt1 WHERE (((((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt0.c0))) NOT BETWEEN (((rt0.c2)-(rt1.c2))) AND (((vt0.c0) NOT BETWEEN (rt1.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt0.c0))) NOT BETWEEN (((rt0.c2)-(rt1.c2))) AND (((vt0.c0) NOT BETWEEN (rt1.c2) AND (rt0.c0))))) IS TRUE)  as count FROM vt0, vt1, rt0, rt1);
SELECT * FROM vt0, vt1, rt0, rt1 WHERE (((((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt0.c0))) NOT BETWEEN (((rt0.c2)-(rt1.c2))) AND (((vt0.c0) NOT BETWEEN (rt1.c2) AND (rt0.c0)))));
SELECT COUNT(*) FROM vt1, vt0, rt1 WHERE (((CAST(vt1.c0 AS BLOB))+(((('')) NOT BETWEEN ((vt0.c0)) AND ((5.1631719E8)))))) ORDER BY CASE '>ꙃ'  WHEN ((rt1.c3)|(vt1.c0)) THEN ((((rt1.c2)AND(rt1.c2)))AND(0X314a3eeb)) ELSE CAST('-2039735714' AS BLOB) END;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB))+(((('')) NOT BETWEEN ((vt0.c0)) AND ((5.1631719E8)))))) IS TRUE)  as count FROM vt1, vt0, rt1 ORDER BY CASE '>ꙃ'  WHEN ((rt1.c3)|(vt1.c0)) THEN ((((rt1.c2)AND(rt1.c2)))AND(0x314a3eeb)) ELSE CAST('-2039735714' AS BLOB) END);
SELECT COUNT(*) FROM vt1, vt0, rt1 WHERE (((CAST(vt1.c0 AS BLOB))+(((('')) NOT BETWEEN ((vt0.c0)) AND ((5.1631719E8)))))) ORDER BY CASE '>ꙃ'  WHEN ((rt1.c3)|(vt1.c0)) THEN ((((rt1.c2)AND(rt1.c2)))AND(0X314a3eeb)) ELSE CAST('-2039735714' AS BLOB) END;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB))+(((('')) NOT BETWEEN ((vt0.c0)) AND ((5.1631719E8)))))) IS TRUE)  as count FROM vt1, vt0, rt1 ORDER BY CASE '>ꙃ'  WHEN ((rt1.c3)|(vt1.c0)) THEN ((((rt1.c2)AND(rt1.c2)))AND(0x314a3eeb)) ELSE CAST('-2039735714' AS BLOB) END);
SELECT COUNT(*) FROM vt1, vt0, rt1 WHERE (((CAST(vt1.c0 AS BLOB))+(((('')) NOT BETWEEN ((vt0.c0)) AND ((5.1631719E8)))))) ORDER BY CASE '>ꙃ'  WHEN ((rt1.c3)|(vt1.c0)) THEN ((((rt1.c2)AND(rt1.c2)))AND(0X314a3eeb)) ELSE CAST('-2039735714' AS BLOB) END;
SELECT * FROM vt0, rt1, vt1, rt0 WHERE (rt1.c3) ORDER BY ((((((((((rt0.c1)|(vt0.c0)))AND(CASE WHEN rt1.c2 THEN rt0.c1 END)))AND(CAST(rt0.c1 AS NUMERIC))))OR(0.8278143370866831 COLLATE BINARY)))OR(((rt1.c3)/(rt1.c4)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM vt0, rt1, vt1, rt0 ORDER BY ((((((((((rt0.c1)|(vt0.c0)))AND(CASE WHEN rt1.c2 THEN rt0.c1 END)))AND(CAST(rt0.c1 AS NUMERIC))))OR(0.8278143370866831 COLLATE BINARY)))OR(((rt1.c3)/(rt1.c4)))) ASC  NULLS FIRST);
SELECT * FROM vt0, rt1, vt1, rt0 WHERE (rt1.c3) ORDER BY ((((((((((rt0.c1)|(vt0.c0)))AND(CASE WHEN rt1.c2 THEN rt0.c1 END)))AND(CAST(rt0.c1 AS NUMERIC))))OR(0.8278143370866831 COLLATE BINARY)))OR(((rt1.c3)/(rt1.c4)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM vt0, rt1, vt1, rt0 ORDER BY ((((((((((rt0.c1)|(vt0.c0)))AND(CASE WHEN rt1.c2 THEN rt0.c1 END)))AND(CAST(rt0.c1 AS NUMERIC))))OR(0.8278143370866831 COLLATE BINARY)))OR(((rt1.c3)/(rt1.c4)))) ASC  NULLS FIRST);
SELECT * FROM vt0, rt1, vt1, rt0 WHERE (rt1.c3) ORDER BY ((((((((((rt0.c1)|(vt0.c0)))AND(CASE WHEN rt1.c2 THEN rt0.c1 END)))AND(CAST(rt0.c1 AS NUMERIC))))OR(0.8278143370866831 COLLATE BINARY)))OR(((rt1.c3)/(rt1.c4)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (- (CAST(rt0.c1 AS BLOB))) RIGHT OUTER JOIN rt1 ON ((((((rt1.c0)) NOT BETWEEN ((rt1.c3)) AND ((vt0.c0)))))!=(((((rt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c3)))))) CROSS JOIN rt0 ON CASE rt0.c0  WHEN rt0.c0 THEN vt0.c0 ELSE rt1.c4 END COLLATE RTRIM WHERE ((((vt0.c0)) BETWEEN ((((rt1.c0) IS TRUE))) AND ((UPPER(DISTINCT rt1.c4))))) ORDER BY CAST(CASE -355928865  WHEN rt0.c2 THEN rt0.c2 END AS TEXT), (- ('Y逈')), ((- (rt1.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((rt1.c0) IS TRUE))) AND ((UPPER(DISTINCT rt1.c4))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (- (CAST(rt0.c1 AS BLOB))) RIGHT OUTER JOIN rt1 ON ((((((rt1.c0)) NOT BETWEEN ((rt1.c3)) AND ((vt0.c0)))))<>(((((rt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c3)))))) CROSS JOIN rt0 ON CASE rt0.c0  WHEN rt0.c0 THEN vt0.c0 ELSE rt1.c4 END COLLATE RTRIM ORDER BY CAST(CASE -355928865  WHEN rt0.c2 THEN rt0.c2 END AS TEXT), (- ('Y逈')), ((- (rt1.c0)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (- (CAST(rt0.c1 AS BLOB))) RIGHT OUTER JOIN rt1 ON ((((((rt1.c0)) NOT BETWEEN ((rt1.c3)) AND ((vt0.c0)))))!=(((((rt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c3)))))) CROSS JOIN rt0 ON CASE rt0.c0  WHEN rt0.c0 THEN vt0.c0 ELSE rt1.c4 END COLLATE RTRIM WHERE ((((vt0.c0)) BETWEEN ((((rt1.c0) IS TRUE))) AND ((UPPER(DISTINCT rt1.c4))))) ORDER BY CAST(CASE -355928865  WHEN rt0.c2 THEN rt0.c2 END AS TEXT), (- ('Y逈')), ((- (rt1.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((rt1.c0) IS TRUE))) AND ((UPPER(DISTINCT rt1.c4))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (- (CAST(rt0.c1 AS BLOB))) RIGHT OUTER JOIN rt1 ON ((((((rt1.c0)) NOT BETWEEN ((rt1.c3)) AND ((vt0.c0)))))<>(((((rt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c3)))))) CROSS JOIN rt0 ON CASE rt0.c0  WHEN rt0.c0 THEN vt0.c0 ELSE rt1.c4 END COLLATE RTRIM ORDER BY CAST(CASE -355928865  WHEN rt0.c2 THEN rt0.c2 END AS TEXT), (- ('Y逈')), ((- (rt1.c0)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)>=(vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)>=(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)>=(vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)>=(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)>=(vt1.c0)) COLLATE BINARY);
SELECT * FROM vt1, rt1 WHERE (((CAST(NULL AS REAL)) IS TRUE)) ORDER BY ((vt1.c0)OR(rt1.c3)) COLLATE RTRIM ASC, CASE CAST(rt1.c4 AS TEXT)  WHEN (+ (rt1.c0)) THEN ((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt1.c4)) END ASC  NULLS FIRST, ((NULL)>>((- (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS REAL)) IS TRUE)) IS TRUE)  as count FROM vt1, rt1 ORDER BY ((vt1.c0)OR(rt1.c3)) COLLATE RTRIM ASC, CASE CAST(rt1.c4 AS TEXT)  WHEN (+ (rt1.c0)) THEN ((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt1.c4)) END ASC  NULLS FIRST, ((NULL)>>((- (vt1.c0))))  NULLS LAST);
SELECT * FROM vt1, rt1 WHERE (((CAST(NULL AS REAL)) IS TRUE)) ORDER BY ((vt1.c0)OR(rt1.c3)) COLLATE RTRIM ASC, CASE CAST(rt1.c4 AS TEXT)  WHEN (+ (rt1.c0)) THEN ((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt1.c4)) END ASC  NULLS FIRST, ((NULL)>>((- (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS REAL)) IS TRUE)) IS TRUE)  as count FROM vt1, rt1 ORDER BY ((vt1.c0)OR(rt1.c3)) COLLATE RTRIM ASC, CASE CAST(rt1.c4 AS TEXT)  WHEN (+ (rt1.c0)) THEN ((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt1.c4)) END ASC  NULLS FIRST, ((NULL)>>((- (vt1.c0))))  NULLS LAST);
SELECT * FROM vt1, rt1 WHERE (((CAST(NULL AS REAL)) IS TRUE)) ORDER BY ((vt1.c0)OR(rt1.c3)) COLLATE RTRIM ASC, CASE CAST(rt1.c4 AS TEXT)  WHEN (+ (rt1.c0)) THEN ((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt1.c4)) END ASC  NULLS FIRST, ((NULL)>>((- (vt1.c0))))  NULLS LAST;
SELECT * FROM vt0, vt1, rt0, rt1 WHERE (CASE (NOT (rt0.c0))  WHEN NULL THEN CAST(rt0.c0 AS NUMERIC) WHEN (((rt1.c4))<=((rt0.c0))) THEN TRIM(DISTINCT rt1.c0, vt1.c0) WHEN 1100566577 THEN rt1.c2 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE (NOT (rt0.c0))  WHEN NULL THEN CAST(rt0.c0 AS NUMERIC) WHEN (((rt1.c4))<=((rt0.c0))) THEN TRIM(DISTINCT rt1.c0, vt1.c0) WHEN 1100566577 THEN rt1.c2 COLLATE NOCASE END) IS TRUE)  as count FROM vt0, vt1, rt0, rt1);
SELECT * FROM vt0, vt1, rt0, rt1 WHERE (CASE (NOT (rt0.c0))  WHEN NULL THEN CAST(rt0.c0 AS NUMERIC) WHEN (((rt1.c4))<=((rt0.c0))) THEN TRIM(DISTINCT rt1.c0, vt1.c0) WHEN 1100566577 THEN rt1.c2 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE (NOT (rt0.c0))  WHEN NULL THEN CAST(rt0.c0 AS NUMERIC) WHEN (((rt1.c4))<=((rt0.c0))) THEN TRIM(DISTINCT rt1.c0, vt1.c0) WHEN 1100566577 THEN rt1.c2 COLLATE NOCASE END) IS TRUE)  as count FROM vt0, vt1, rt0, rt1);
SELECT * FROM vt0, vt1, rt0, rt1 WHERE (CASE (NOT (rt0.c0))  WHEN NULL THEN CAST(rt0.c0 AS NUMERIC) WHEN (((rt1.c4))<=((rt0.c0))) THEN TRIM(DISTINCT rt1.c0, vt1.c0) WHEN 1100566577 THEN rt1.c2 COLLATE NOCASE END);
SELECT * FROM rt0, rt1 FULL OUTER JOIN vt0 ON TRIM(CAST(vt1.c0 AS BLOB), ((rt1.c2) BETWEEN (vt1.c0) AND (rt1.c0))) RIGHT OUTER JOIN vt1 ON CASE WHEN ((rt1.c0) IS TRUE) THEN ((rt0.c2)*(vt0.c0)) ELSE ((rt1.c0) NOT BETWEEN (vt0.c0) AND (x'88a6')) END WHERE ((((rt1.c0, vt0.c0, rt1.c0))=((rt1.c0, vt1.c0, '-314321855'))) COLLATE RTRIM) ORDER BY json(rt1.c0);
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0, vt0.c0, rt1.c0))==((rt1.c0, vt1.c0, '-314321855'))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1 FULL OUTER JOIN vt0 ON TRIM(CAST(vt1.c0 AS BLOB), ((rt1.c2) BETWEEN (vt1.c0) AND (rt1.c0))) RIGHT OUTER JOIN vt1 ON CASE WHEN ((rt1.c0) IS TRUE) THEN ((rt0.c2)*(vt0.c0)) ELSE ((rt1.c0) NOT BETWEEN (vt0.c0) AND (x'88a6')) END ORDER BY json(rt1.c0));
SELECT * FROM rt0, rt1 FULL OUTER JOIN vt0 ON TRIM(CAST(vt1.c0 AS BLOB), ((rt1.c2) BETWEEN (vt1.c0) AND (rt1.c0))) RIGHT OUTER JOIN vt1 ON CASE WHEN ((rt1.c0) IS TRUE) THEN ((rt0.c2)*(vt0.c0)) ELSE ((rt1.c0) NOT BETWEEN (vt0.c0) AND (x'88a6')) END WHERE ((((rt1.c0, vt0.c0, rt1.c0))=((rt1.c0, vt1.c0, '-314321855'))) COLLATE RTRIM) ORDER BY json(rt1.c0);
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0, vt0.c0, rt1.c0))==((rt1.c0, vt1.c0, '-314321855'))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1 FULL OUTER JOIN vt0 ON TRIM(CAST(vt1.c0 AS BLOB), ((rt1.c2) BETWEEN (vt1.c0) AND (rt1.c0))) RIGHT OUTER JOIN vt1 ON CASE WHEN ((rt1.c0) IS TRUE) THEN ((rt0.c2)*(vt0.c0)) ELSE ((rt1.c0) NOT BETWEEN (vt0.c0) AND (x'88a6')) END ORDER BY json(rt1.c0));
SELECT COUNT(*) FROM vt1 WHERE ((((CAST(vt1.c0 AS BLOB)))>=((vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt1.c0 AS BLOB)))>=((vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((CAST(vt1.c0 AS BLOB)))>=((vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt1.c0 AS BLOB)))>=((vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((CAST(vt1.c0 AS BLOB)))>=((vt1.c0))));
SELECT ALL COUNT(*) FROM rt0, rt1 CROSS JOIN vt1 ON ((CAST(0.8153097388064152 AS REAL)) NOT BETWEEN (((rt1.c2) BETWEEN (vt0.c0) AND (rt0.c2))) AND ((~ (vt0.c0)))) RIGHT OUTER JOIN vt0 ON ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (rt1.c4)))>>(((vt0.c0)>>(vt1.c0)))) WHERE (json_quote(((((((((((((rt1.c1)OR(rt0.c1)))AND(rt0.c0)))OR(rt1.c3)))AND(1829472282)))AND(vt0.c0)))AND(vt0.c0)))) ORDER BY ((6.72907935E8) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_quote(((((((((((((rt1.c1)OR(rt0.c1)))AND(rt0.c0)))OR(rt1.c3)))AND(1829472282)))AND(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM rt0, rt1 CROSS JOIN vt1 ON ((CAST(0.8153097388064152 AS REAL)) NOT BETWEEN (((rt1.c2) BETWEEN (vt0.c0) AND (rt0.c2))) AND ((~ (vt0.c0)))) RIGHT OUTER JOIN vt0 ON ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (rt1.c4)))>>(((vt0.c0)>>(vt1.c0)))) ORDER BY ((6.72907935E8) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 CROSS JOIN vt1 ON ((CAST(0.8153097388064152 AS REAL)) NOT BETWEEN (((rt1.c2) BETWEEN (vt0.c0) AND (rt0.c2))) AND ((~ (vt0.c0)))) RIGHT OUTER JOIN vt0 ON ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (rt1.c4)))>>(((vt0.c0)>>(vt1.c0)))) WHERE (json_quote(((((((((((((rt1.c1)OR(rt0.c1)))AND(rt0.c0)))OR(rt1.c3)))AND(1829472282)))AND(vt0.c0)))AND(vt0.c0)))) ORDER BY ((6.72907935E8) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_quote(((((((((((((rt1.c1)OR(rt0.c1)))AND(rt0.c0)))OR(rt1.c3)))AND(1829472282)))AND(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM rt0, rt1 CROSS JOIN vt1 ON ((CAST(0.8153097388064152 AS REAL)) NOT BETWEEN (((rt1.c2) BETWEEN (vt0.c0) AND (rt0.c2))) AND ((~ (vt0.c0)))) RIGHT OUTER JOIN vt0 ON ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (rt1.c4)))>>(((vt0.c0)>>(vt1.c0)))) ORDER BY ((6.72907935E8) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt1 FULL OUTER JOIN vt0 ON UNLIKELY(DISTINCT ((vt0.c0)GLOB(vt1.c0))) WHERE (((((((((((((((rt1.c4)OR(rt1.c2)))OR(rt1.c0)))OR(rt1.c1)))AND(rt1.c4)))AND(rt1.c2)))AND(rt1.c0)))/(rt1.c4 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt1.c4)OR(rt1.c2)))OR(rt1.c0)))OR(rt1.c1)))AND(rt1.c4)))AND(rt1.c2)))AND(rt1.c0)))/(rt1.c4 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, vt1 FULL OUTER JOIN vt0 ON UNLIKELY(DISTINCT ((vt0.c0)GLOB(vt1.c0))));
SELECT ALL COUNT(*) FROM rt1, vt1 FULL OUTER JOIN vt0 ON UNLIKELY(DISTINCT ((vt0.c0)GLOB(vt1.c0))) WHERE (((((((((((((((rt1.c4)OR(rt1.c2)))OR(rt1.c0)))OR(rt1.c1)))AND(rt1.c4)))AND(rt1.c2)))AND(rt1.c0)))/(rt1.c4 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt1.c4)OR(rt1.c2)))OR(rt1.c0)))OR(rt1.c1)))AND(rt1.c4)))AND(rt1.c2)))AND(rt1.c0)))/(rt1.c4 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, vt1 FULL OUTER JOIN vt0 ON UNLIKELY(DISTINCT ((vt0.c0)GLOB(vt1.c0))));
SELECT ALL COUNT(*) FROM rt1, vt1 FULL OUTER JOIN vt0 ON UNLIKELY(DISTINCT ((vt0.c0)GLOB(vt1.c0))) WHERE (((((((((((((((rt1.c4)OR(rt1.c2)))OR(rt1.c0)))OR(rt1.c1)))AND(rt1.c4)))AND(rt1.c2)))AND(rt1.c0)))/(rt1.c4 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((vt0.c0 IN ('\r')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ('\r')) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((vt0.c0 IN ('\r')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ('\r')) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((vt0.c0 IN ('\r')) COLLATE NOCASE);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt1 ON CASE rt1.c1  WHEN ((((rt1.c0)OR(rt1.c3)))OR(rt1.c4)) THEN ((((rt1.c1)AND(rt1.c2)))AND(rt1.c3)) WHEN CAST(rt1.c3 AS REAL) THEN ((vt1.c0) ISNULL) WHEN ((rt1.c2)==(rt1.c2)) THEN ((rt1.c1)OR(NULL)) END WHERE (((((json_extract(vt1.c0, NULL))OR(((((rt1.c4)OR(vt1.c0)))AND(rt1.c2)))))OR(((rt1.c2)=(vt1.c0))))) ORDER BY (~ ((- (rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((json_extract(vt1.c0, NULL))OR(((((rt1.c4)OR(vt1.c0)))AND(rt1.c2)))))OR(((rt1.c2)=(vt1.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt1 ON CASE rt1.c1  WHEN ((((rt1.c0)OR(rt1.c3)))OR(rt1.c4)) THEN ((((rt1.c1)AND(rt1.c2)))AND(rt1.c3)) WHEN CAST(rt1.c3 AS REAL) THEN ((vt1.c0) ISNULL) WHEN ((rt1.c2)=(rt1.c2)) THEN ((rt1.c1)OR(NULL)) END ORDER BY (~ ((- (rt1.c2)))));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt1 ON CASE rt1.c1  WHEN ((((rt1.c0)OR(rt1.c3)))OR(rt1.c4)) THEN ((((rt1.c1)AND(rt1.c2)))AND(rt1.c3)) WHEN CAST(rt1.c3 AS REAL) THEN ((vt1.c0) ISNULL) WHEN ((rt1.c2)==(rt1.c2)) THEN ((rt1.c1)OR(NULL)) END WHERE (((((json_extract(vt1.c0, NULL))OR(((((rt1.c4)OR(vt1.c0)))AND(rt1.c2)))))OR(((rt1.c2)=(vt1.c0))))) ORDER BY (~ ((- (rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((json_extract(vt1.c0, NULL))OR(((((rt1.c4)OR(vt1.c0)))AND(rt1.c2)))))OR(((rt1.c2)=(vt1.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt1 ON CASE rt1.c1  WHEN ((((rt1.c0)OR(rt1.c3)))OR(rt1.c4)) THEN ((((rt1.c1)AND(rt1.c2)))AND(rt1.c3)) WHEN CAST(rt1.c3 AS REAL) THEN ((vt1.c0) ISNULL) WHEN ((rt1.c2)=(rt1.c2)) THEN ((rt1.c1)OR(NULL)) END ORDER BY (~ ((- (rt1.c2)))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON (((((vt0.c0))<>((NULL))))IS(((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))) WHERE (((((vt0.c0)&(vt0.c0)))*((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)&(vt0.c0)))*((~ (vt1.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (((((vt0.c0))!=((NULL))))IS(((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON (((((vt0.c0))<>((NULL))))IS(((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))) WHERE (((((vt0.c0)&(vt0.c0)))*((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)&(vt0.c0)))*((~ (vt1.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (((((vt0.c0))!=((NULL))))IS(((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON (((((vt0.c0))<>((NULL))))IS(((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))) WHERE (((((vt0.c0)&(vt0.c0)))*((~ (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)&(vt1.c0)) COLLATE BINARY) ORDER BY CASE vt1.c0  WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN CASE WHEN vt1.c0 THEN vt1.c0 END END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)&(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY CASE vt1.c0  WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN CASE WHEN vt1.c0 THEN vt1.c0 END END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)&(vt1.c0)) COLLATE BINARY) ORDER BY CASE vt1.c0  WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN CASE WHEN vt1.c0 THEN vt1.c0 END END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)&(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY CASE vt1.c0  WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN CASE WHEN vt1.c0 THEN vt1.c0 END END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)&(vt1.c0)) COLLATE BINARY) ORDER BY CASE vt1.c0  WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN CASE WHEN vt1.c0 THEN vt1.c0 END END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((((rt1.c0) NOTNULL))AND(vt0.c0)))OR(CASE rt1.c2  WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c3 END))) ORDER BY (rt1.c3 IN ()) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0) NOTNULL))AND(vt0.c0)))OR(CASE rt1.c2  WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c3 END))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (rt1.c3 IN ()) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((((rt1.c0) NOTNULL))AND(vt0.c0)))OR(CASE rt1.c2  WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c3 END))) ORDER BY (rt1.c3 IN ()) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0) NOTNULL))AND(vt0.c0)))OR(CASE rt1.c2  WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c3 END))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (rt1.c3 IN ()) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((((rt1.c0) NOTNULL))AND(vt0.c0)))OR(CASE rt1.c2  WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c3 END))) ORDER BY (rt1.c3 IN ()) COLLATE NOCASE  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (HEX(DISTINCT ((rt0.c0)=(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((rt0.c0)=(rt0.c1)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (HEX(DISTINCT ((rt0.c0)=(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((rt0.c0)=(rt0.c1)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (HEX(DISTINCT ((rt0.c0)=(rt0.c1))));
SELECT * FROM rt1, vt0 WHERE (((((CAST(rt1.c2 AS NUMERIC))OR((((rt1.c1, rt1.c2, rt1.c0))>((rt1.c3, rt1.c4, rt1.c4))))))OR(NULL))) ORDER BY ((CASE WHEN vt0.c0 THEN rt1.c3 ELSE rt1.c2 END)|((~ (rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((CAST(rt1.c2 AS NUMERIC))OR((((rt1.c1, rt1.c2, rt1.c0))>((rt1.c3, rt1.c4, rt1.c4))))))OR(NULL))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((CASE WHEN vt0.c0 THEN rt1.c3 ELSE rt1.c2 END)|((~ (rt1.c0)))) DESC);
SELECT * FROM rt1, vt0 WHERE (((((CAST(rt1.c2 AS NUMERIC))OR((((rt1.c1, rt1.c2, rt1.c0))>((rt1.c3, rt1.c4, rt1.c4))))))OR(NULL))) ORDER BY ((CASE WHEN vt0.c0 THEN rt1.c3 ELSE rt1.c2 END)|((~ (rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((CAST(rt1.c2 AS NUMERIC))OR((((rt1.c1, rt1.c2, rt1.c0))>((rt1.c3, rt1.c4, rt1.c4))))))OR(NULL))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((CASE WHEN vt0.c0 THEN rt1.c3 ELSE rt1.c2 END)|((~ (rt1.c0)))) DESC);
SELECT * FROM rt1, vt0 WHERE (((((CAST(rt1.c2 AS NUMERIC))OR((((rt1.c1, rt1.c2, rt1.c0))>((rt1.c3, rt1.c4, rt1.c4))))))OR(NULL))) ORDER BY ((CASE WHEN vt0.c0 THEN rt1.c3 ELSE rt1.c2 END)|((~ (rt1.c0)))) DESC;
SELECT COUNT(*) FROM vt0, rt0, vt1, rt1 WHERE (CAST((rt1.c4 IN (rt0.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((rt1.c4 IN (rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0, vt1, rt1 NOT INDEXED);
SELECT COUNT(*) FROM vt0, rt0, vt1, rt1 WHERE (CAST((rt1.c4 IN (rt0.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((rt1.c4 IN (rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0, vt1, rt1 NOT INDEXED);
SELECT COUNT(*) FROM vt0, rt0, vt1, rt1 WHERE (CAST((rt1.c4 IN (rt0.c2)) AS INTEGER));
SELECT * FROM vt0 WHERE (((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(NULL)))OR(vt0.c0))) IS TRUE)) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(NULL)))OR(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(NULL)))OR(vt0.c0))) IS TRUE)) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(NULL)))OR(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(NULL)))OR(vt0.c0))) IS TRUE)) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT * FROM rt1 WHERE ((((rt1.c0)) NOT BETWEEN (((rt1.c1 IN ()))) AND ((ABS(rt1.c4))))) ORDER BY ((((((rt1.c2)OR(NULL)))OR(rt1.c4)))>>(CASE WHEN rt1.c2 THEN rt1.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) NOT BETWEEN (((rt1.c1 IN ()))) AND ((ABS(rt1.c4))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c2)OR(NULL)))OR(rt1.c4)))>>(CASE WHEN rt1.c2 THEN rt1.c2 END))  NULLS FIRST);
SELECT * FROM rt1 WHERE ((((rt1.c0)) NOT BETWEEN (((rt1.c1 IN ()))) AND ((ABS(rt1.c4))))) ORDER BY ((((((rt1.c2)OR(NULL)))OR(rt1.c4)))>>(CASE WHEN rt1.c2 THEN rt1.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) NOT BETWEEN (((rt1.c1 IN ()))) AND ((ABS(rt1.c4))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c2)OR(NULL)))OR(rt1.c4)))>>(CASE WHEN rt1.c2 THEN rt1.c2 END))  NULLS FIRST);
SELECT * FROM rt1 WHERE ((((rt1.c0)) NOT BETWEEN (((rt1.c1 IN ()))) AND ((ABS(rt1.c4))))) ORDER BY ((((((rt1.c2)OR(NULL)))OR(rt1.c4)))>>(CASE WHEN rt1.c2 THEN rt1.c2 END))  NULLS FIRST;
SELECT * FROM vt0, rt1 LEFT OUTER JOIN rt0 ON ((ABS(rt1.c4))<>(rt0.c1 COLLATE BINARY)) CROSS JOIN vt1 ON ((PRINTF(rt1.c2))GLOB(((((rt1.c2)AND(rt0.c1)))AND(6.22336922E8)))) WHERE (((((0.7440666872007407, rt1.c2, rt1.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, vt0.c0)) AND ((rt1.c2, rt0.c2, rt0.c0))) IN ())) ORDER BY (('-2038816989') BETWEEN (((((rt0.c0)OR(rt1.c4)))OR(rt0.c2))) AND (SUBSTR(rt1.c2, 0X6995ebef))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.7440666872007407, rt1.c2, rt1.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, vt0.c0)) AND ((rt1.c2, rt0.c2, rt0.c0))) IN ())) IS TRUE)  as count FROM vt0, rt1 LEFT OUTER JOIN rt0 ON ((ABS(rt1.c4))!=(rt0.c1 COLLATE BINARY)) CROSS JOIN vt1 ON ((PRINTF(rt1.c2))GLOB(((((rt1.c2)AND(rt0.c1)))AND(6.22336922E8)))) ORDER BY (('-2038816989') BETWEEN (((((rt0.c0)OR(rt1.c4)))OR(rt0.c2))) AND (SUBSTR(rt1.c2, 0x6995ebef))) DESC);
SELECT * FROM vt0, rt1 LEFT OUTER JOIN rt0 ON ((ABS(rt1.c4))<>(rt0.c1 COLLATE BINARY)) CROSS JOIN vt1 ON ((PRINTF(rt1.c2))GLOB(((((rt1.c2)AND(rt0.c1)))AND(6.22336922E8)))) WHERE (((((0.7440666872007407, rt1.c2, rt1.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, vt0.c0)) AND ((rt1.c2, rt0.c2, rt0.c0))) IN ())) ORDER BY (('-2038816989') BETWEEN (((((rt0.c0)OR(rt1.c4)))OR(rt0.c2))) AND (SUBSTR(rt1.c2, 0X6995ebef))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.7440666872007407, rt1.c2, rt1.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, vt0.c0)) AND ((rt1.c2, rt0.c2, rt0.c0))) IN ())) IS TRUE)  as count FROM vt0, rt1 LEFT OUTER JOIN rt0 ON ((ABS(rt1.c4))!=(rt0.c1 COLLATE BINARY)) CROSS JOIN vt1 ON ((PRINTF(rt1.c2))GLOB(((((rt1.c2)AND(rt0.c1)))AND(6.22336922E8)))) ORDER BY (('-2038816989') BETWEEN (((((rt0.c0)OR(rt1.c4)))OR(rt0.c2))) AND (SUBSTR(rt1.c2, 0x6995ebef))) DESC);
SELECT * FROM vt0, rt1 LEFT OUTER JOIN rt0 ON ((ABS(rt1.c4))<>(rt0.c1 COLLATE BINARY)) CROSS JOIN vt1 ON ((PRINTF(rt1.c2))GLOB(((((rt1.c2)AND(rt0.c1)))AND(6.22336922E8)))) WHERE (((((0.7440666872007407, rt1.c2, rt1.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, vt0.c0)) AND ((rt1.c2, rt0.c2, rt0.c0))) IN ())) ORDER BY (('-2038816989') BETWEEN (((((rt0.c0)OR(rt1.c4)))OR(rt0.c2))) AND (SUBSTR(rt1.c2, 0X6995ebef))) DESC;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((NULL)||(rt1.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)||(rt1.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((NULL)||(rt1.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)||(rt1.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((NULL)||(rt1.c3 COLLATE BINARY)));
SELECT * FROM rt1 WHERE (((((((rt1.c4)AND(NULL)))OR(rt1.c1))) BETWEEN (rt1.c1 COLLATE BINARY) AND ((((rt1.c3, rt1.c0, rt1.c4, NULL, rt1.c3))=((rt1.c3, rt1.c2, rt1.c4, rt1.c0, rt1.c4)))))) ORDER BY rt1.c2 ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c4)AND(NULL)))OR(rt1.c1))) BETWEEN (rt1.c1 COLLATE BINARY) AND ((((rt1.c3, rt1.c0, rt1.c4, NULL, rt1.c3))==((rt1.c3, rt1.c2, rt1.c4, rt1.c0, rt1.c4)))))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2 ASC);
SELECT * FROM rt1 WHERE (((((((rt1.c4)AND(NULL)))OR(rt1.c1))) BETWEEN (rt1.c1 COLLATE BINARY) AND ((((rt1.c3, rt1.c0, rt1.c4, NULL, rt1.c3))=((rt1.c3, rt1.c2, rt1.c4, rt1.c0, rt1.c4)))))) ORDER BY rt1.c2 ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c4)AND(NULL)))OR(rt1.c1))) BETWEEN (rt1.c1 COLLATE BINARY) AND ((((rt1.c3, rt1.c0, rt1.c4, NULL, rt1.c3))==((rt1.c3, rt1.c2, rt1.c4, rt1.c0, rt1.c4)))))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2 ASC);
SELECT * FROM rt1 WHERE (((((((rt1.c4)AND(NULL)))OR(rt1.c1))) BETWEEN (rt1.c1 COLLATE BINARY) AND ((((rt1.c3, rt1.c0, rt1.c4, NULL, rt1.c3))=((rt1.c3, rt1.c2, rt1.c4, rt1.c0, rt1.c4)))))) ORDER BY rt1.c2 ASC;
SELECT ALL * FROM vt1, rt0, rt1, vt0 WHERE (x'') ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1)) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, rt0, rt1, vt0 ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1)) AS INTEGER) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, rt0, rt1, vt0 WHERE (x'') ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1)) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, rt0, rt1, vt0 ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1)) AS INTEGER) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, rt0, rt1, vt0 WHERE (x'') ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1)) AS INTEGER) DESC  NULLS FIRST;
SELECT * FROM vt1, vt0, rt0, rt1 WHERE (CASE WHEN ((rt0.c0) NOT BETWEEN (rt1.c4) AND (rt1.c3)) THEN NULLIF(DISTINCT rt0.c0, rt1.c4) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0) NOT BETWEEN (rt1.c4) AND (rt1.c3)) THEN NULLIF(DISTINCT rt0.c0, rt1.c4) END) IS TRUE)  as count FROM vt1, vt0, rt0, rt1);
SELECT * FROM vt1, vt0, rt0, rt1 WHERE (CASE WHEN ((rt0.c0) NOT BETWEEN (rt1.c4) AND (rt1.c3)) THEN NULLIF(DISTINCT rt0.c0, rt1.c4) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0) NOT BETWEEN (rt1.c4) AND (rt1.c3)) THEN NULLIF(DISTINCT rt0.c0, rt1.c4) END) IS TRUE)  as count FROM vt1, vt0, rt0, rt1);
SELECT * FROM vt1, vt0, rt0, rt1 WHERE (CASE WHEN ((rt0.c0) NOT BETWEEN (rt1.c4) AND (rt1.c3)) THEN NULLIF(DISTINCT rt0.c0, rt1.c4) END);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt1, rt1, vt0 WHERE (CASE rt1.c4 COLLATE NOCASE  WHEN x'a86c' THEN (rt1.c4 IN ()) ELSE (((rt1.c4)) BETWEEN ((vt1.c0)) AND ((rt1.c4))) END) ORDER BY ((((((((CAST(rt1.c4 AS REAL))OR(vt1.c0)))AND(rt1.c1)))AND(x'')))OR(((rt1.c4)<(rt1.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c4 COLLATE NOCASE  WHEN x'a86c' THEN (rt1.c4 IN ()) ELSE (((rt1.c4)) BETWEEN ((vt1.c0)) AND ((rt1.c4))) END) IS TRUE)  as count FROM vt1, rt1, vt0 ORDER BY ((((((((CAST(rt1.c4 AS REAL))OR(vt1.c0)))AND(rt1.c1)))AND(x'')))OR(((rt1.c4)<(rt1.c1)))) ASC  NULLS FIRST);
SELECT * FROM vt1, rt1, vt0 WHERE (CASE rt1.c4 COLLATE NOCASE  WHEN x'a86c' THEN (rt1.c4 IN ()) ELSE (((rt1.c4)) BETWEEN ((vt1.c0)) AND ((rt1.c4))) END) ORDER BY ((((((((CAST(rt1.c4 AS REAL))OR(vt1.c0)))AND(rt1.c1)))AND(x'')))OR(((rt1.c4)<(rt1.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c4 COLLATE NOCASE  WHEN x'a86c' THEN (rt1.c4 IN ()) ELSE (((rt1.c4)) BETWEEN ((vt1.c0)) AND ((rt1.c4))) END) IS TRUE)  as count FROM vt1, rt1, vt0 ORDER BY ((((((((CAST(rt1.c4 AS REAL))OR(vt1.c0)))AND(rt1.c1)))AND(x'')))OR(((rt1.c4)<(rt1.c1)))) ASC  NULLS FIRST);
SELECT * FROM vt1, rt1, vt0 WHERE (CASE rt1.c4 COLLATE NOCASE  WHEN x'a86c' THEN (rt1.c4 IN ()) ELSE (((rt1.c4)) BETWEEN ((vt1.c0)) AND ((rt1.c4))) END) ORDER BY ((((((((CAST(rt1.c4 AS REAL))OR(vt1.c0)))AND(rt1.c1)))AND(x'')))OR(((rt1.c4)<(rt1.c1)))) ASC  NULLS FIRST;
SELECT ALL * FROM rt1 CROSS JOIN vt1 ON vt0.c0 RIGHT OUTER JOIN vt0 ON rt0.c1 CROSS JOIN rt0 ON (((((rt0.c2)OR(rt0.c1))))<((((rt1.c3)<(vt0.c0))))) WHERE (CAST(((rt0.c2)=(rt1.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)==(rt1.c1)) AS TEXT)) IS TRUE)  as count FROM rt1 CROSS JOIN vt1 ON vt0.c0 RIGHT OUTER JOIN vt0 ON rt0.c1 CROSS JOIN rt0 ON (((((rt0.c2)OR(rt0.c1))))<((((rt1.c3)<(vt0.c0))))));
SELECT ALL * FROM rt1 CROSS JOIN vt1 ON vt0.c0 RIGHT OUTER JOIN vt0 ON rt0.c1 CROSS JOIN rt0 ON (((((rt0.c2)OR(rt0.c1))))<((((rt1.c3)<(vt0.c0))))) WHERE (CAST(((rt0.c2)=(rt1.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)==(rt1.c1)) AS TEXT)) IS TRUE)  as count FROM rt1 CROSS JOIN vt1 ON vt0.c0 RIGHT OUTER JOIN vt0 ON rt0.c1 CROSS JOIN rt0 ON (((((rt0.c2)OR(rt0.c1))))<((((rt1.c3)<(vt0.c0))))));
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY CASE WHEN (~ (vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN (~ (vt0.c0)) THEN ((vt0.c0)!=('137105174')) WHEN (((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0))) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END ELSE ((vt0.c0)>=(vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (~ (vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN (~ (vt0.c0)) THEN ((vt0.c0)!=('137105174')) WHEN (((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0))) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END ELSE ((vt0.c0)>=(vt0.c0)) END ASC);
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY CASE WHEN (~ (vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN (~ (vt0.c0)) THEN ((vt0.c0)!=('137105174')) WHEN (((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0))) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END ELSE ((vt0.c0)>=(vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (~ (vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN (~ (vt0.c0)) THEN ((vt0.c0)!=('137105174')) WHEN (((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0))) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END ELSE ((vt0.c0)>=(vt0.c0)) END ASC);
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY CASE WHEN (~ (vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN (~ (vt0.c0)) THEN ((vt0.c0)!=('137105174')) WHEN (((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0))) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END ELSE ((vt0.c0)>=(vt0.c0)) END ASC;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CASE WHEN TRIM(rt1.c3) THEN CAST(rt1.c3 AS REAL) WHEN SQLITE_VERSION() THEN (((rt0.c0, rt1.c0, rt1.c4)) NOT BETWEEN ((rt0.c1, rt1.c3, rt0.c2)) AND ((rt0.c1, rt0.c2, rt1.c3))) WHEN ((rt0.c1) BETWEEN (rt1.c2) AND (rt1.c2)) THEN ((rt1.c0)<=(rt0.c1)) END) ORDER BY ((LENGTH(rt0.c2))>(rt1.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((CASE WHEN TRIM(rt1.c3) THEN CAST(rt1.c3 AS REAL) WHEN SQLITE_VERSION() THEN (((rt0.c0, rt1.c0, rt1.c4)) NOT BETWEEN ((rt0.c1, rt1.c3, rt0.c2)) AND ((rt0.c1, rt0.c2, rt1.c3))) WHEN ((rt0.c1) BETWEEN (rt1.c2) AND (rt1.c2)) THEN ((rt1.c0)<=(rt0.c1)) END) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((LENGTH(rt0.c2))>(rt1.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CASE WHEN TRIM(rt1.c3) THEN CAST(rt1.c3 AS REAL) WHEN SQLITE_VERSION() THEN (((rt0.c0, rt1.c0, rt1.c4)) NOT BETWEEN ((rt0.c1, rt1.c3, rt0.c2)) AND ((rt0.c1, rt0.c2, rt1.c3))) WHEN ((rt0.c1) BETWEEN (rt1.c2) AND (rt1.c2)) THEN ((rt1.c0)<=(rt0.c1)) END) ORDER BY ((LENGTH(rt0.c2))>(rt1.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((CASE WHEN TRIM(rt1.c3) THEN CAST(rt1.c3 AS REAL) WHEN SQLITE_VERSION() THEN (((rt0.c0, rt1.c0, rt1.c4)) NOT BETWEEN ((rt0.c1, rt1.c3, rt0.c2)) AND ((rt0.c1, rt0.c2, rt1.c3))) WHEN ((rt0.c1) BETWEEN (rt1.c2) AND (rt1.c2)) THEN ((rt1.c0)<=(rt0.c1)) END) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((LENGTH(rt0.c2))>(rt1.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CASE WHEN TRIM(rt1.c3) THEN CAST(rt1.c3 AS REAL) WHEN SQLITE_VERSION() THEN (((rt0.c0, rt1.c0, rt1.c4)) NOT BETWEEN ((rt0.c1, rt1.c3, rt0.c2)) AND ((rt0.c1, rt0.c2, rt1.c3))) WHEN ((rt0.c1) BETWEEN (rt1.c2) AND (rt1.c2)) THEN ((rt1.c0)<=(rt0.c1)) END) ORDER BY ((LENGTH(rt0.c2))>(rt1.c0 COLLATE NOCASE));
SELECT * FROM rt0 WHERE ((rt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((rt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((rt0.c1 IN ()));
SELECT ALL * FROM rt1, rt0, vt0 WHERE ((((((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c4))))>(CAST(rt1.c3 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c4))))>(CAST(rt1.c3 AS REAL)))) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT ALL * FROM rt1, rt0, vt0 WHERE ((((((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c4))))>(CAST(rt1.c3 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c4))))>(CAST(rt1.c3 AS REAL)))) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT ALL * FROM rt1, rt0, vt0 WHERE ((((((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c4))))>(CAST(rt1.c3 AS REAL))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c2);
SELECT ALL * FROM vt0, rt0, vt1, rt1 WHERE (((rt1.c0 COLLATE RTRIM) ISNULL));
SELECT SUM(count) FROM (SELECT ((((rt1.c0 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM vt0, rt0, vt1, rt1);
SELECT ALL * FROM vt0, rt0, vt1, rt1 WHERE (((rt1.c0 COLLATE RTRIM) ISNULL));
SELECT SUM(count) FROM (SELECT ((((rt1.c0 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM vt0, rt0, vt1, rt1);
SELECT ALL * FROM vt0, rt0, vt1, rt1 WHERE (((rt1.c0 COLLATE RTRIM) ISNULL));
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON ((((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c0))) ISNULL) WHERE (json_array_length((~ (rt0.c0)), CASE 0.28865407613998784  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)) ORDER BY ((((((rt0.c0)OR(rt0.c2)))AND(vt1.c0))) IS FALSE) DESC  NULLS FIRST, ((((0.15595186048544585)AND(rt0.c0 COLLATE BINARY)))OR((rt0.c2 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_array_length((~ (rt0.c0)), CASE 0.28865407613998784  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c0))) ISNULL) ORDER BY ((((((rt0.c0)OR(rt0.c2)))AND(vt1.c0))) IS FALSE) DESC  NULLS FIRST, ((((0.15595186048544585)AND(rt0.c0 COLLATE BINARY)))OR((rt0.c2 IN ()))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON ((((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c0))) ISNULL) WHERE (json_array_length((~ (rt0.c0)), CASE 0.28865407613998784  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)) ORDER BY ((((((rt0.c0)OR(rt0.c2)))AND(vt1.c0))) IS FALSE) DESC  NULLS FIRST, ((((0.15595186048544585)AND(rt0.c0 COLLATE BINARY)))OR((rt0.c2 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_array_length((~ (rt0.c0)), CASE 0.28865407613998784  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c0))) ISNULL) ORDER BY ((((((rt0.c0)OR(rt0.c2)))AND(vt1.c0))) IS FALSE) DESC  NULLS FIRST, ((((0.15595186048544585)AND(rt0.c0 COLLATE BINARY)))OR((rt0.c2 IN ()))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON ((CASE WHEN '-1494782099' THEN vt1.c0 END)IS NOT(x'e6ac')) WHERE (0.7097571534487711);
SELECT SUM(count) FROM (SELECT ALL ((0.7097571534487711) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((CASE WHEN '-1494782099' THEN vt1.c0 END)IS NOT(x'e6ac')));
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON ((CASE WHEN '-1494782099' THEN vt1.c0 END)IS NOT(x'e6ac')) WHERE (0.7097571534487711);
SELECT SUM(count) FROM (SELECT ALL ((0.7097571534487711) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((CASE WHEN '-1494782099' THEN vt1.c0 END)IS NOT(x'e6ac')));
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON ((CASE WHEN '-1494782099' THEN vt1.c0 END)IS NOT(x'e6ac')) WHERE (0.7097571534487711);
SELECT ALL * FROM rt1, rt0 WHERE ((((((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN (('0.9372310493728168', rt1.c4, rt1.c3)) AND ((rt0.c2, rt1.c1, rt0.c1))))OR(((rt0.c0) NOT NULL))))AND((((rt1.c3))>((rt1.c3)))))) ORDER BY CAST((~ (rt1.c1)) AS TEXT);
SELECT SUM(count) FROM (SELECT (((((((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN (('0.9372310493728168', rt1.c4, rt1.c3)) AND ((rt0.c2, rt1.c1, rt0.c1))))OR(((rt0.c0) NOT NULL))))AND((((rt1.c3))>((rt1.c3)))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST((~ (rt1.c1)) AS TEXT));
SELECT ALL * FROM rt1, rt0 WHERE ((((((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN (('0.9372310493728168', rt1.c4, rt1.c3)) AND ((rt0.c2, rt1.c1, rt0.c1))))OR(((rt0.c0) NOT NULL))))AND((((rt1.c3))>((rt1.c3)))))) ORDER BY CAST((~ (rt1.c1)) AS TEXT);
SELECT SUM(count) FROM (SELECT (((((((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN (('0.9372310493728168', rt1.c4, rt1.c3)) AND ((rt0.c2, rt1.c1, rt0.c1))))OR(((rt0.c0) NOT NULL))))AND((((rt1.c3))>((rt1.c3)))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST((~ (rt1.c1)) AS TEXT));
SELECT ALL * FROM rt1, rt0 WHERE ((((((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN (('0.9372310493728168', rt1.c4, rt1.c3)) AND ((rt0.c2, rt1.c1, rt0.c1))))OR(((rt0.c0) NOT NULL))))AND((((rt1.c3))>((rt1.c3)))))) ORDER BY CAST((~ (rt1.c1)) AS TEXT);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (x'') AND (0x475bd7d9)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) NOT BETWEEN (x'') AND (0X475bd7d9)) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (x'') AND (0x475bd7d9)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) NOT BETWEEN (x'') AND (0X475bd7d9)) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (x'') AND (0x475bd7d9)) AS REAL));
SELECT * FROM vt0 WHERE (LIKELY(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY (((NULL)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((NULL)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((NULL))) ASC);
SELECT * FROM vt0 WHERE (LIKELY(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY (((NULL)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((NULL)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((NULL))) ASC);
SELECT * FROM vt0 WHERE (LIKELY(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY (((NULL)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((NULL))) ASC;
SELECT ALL * FROM vt0, rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (rt1.c3);
SELECT * FROM vt1 INNER JOIN rt1 ON HEX(DISTINCT ((((rt1.c4)OR(rt1.c2)))OR(rt1.c0))) WHERE (((rtreenode(rt1.c4, rt1.c4))>=(((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((rtreenode(rt1.c4, rt1.c4))>=(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1 INNER JOIN rt1 ON HEX(DISTINCT ((((rt1.c4)OR(rt1.c2)))OR(rt1.c0))));
SELECT * FROM vt1 INNER JOIN rt1 ON HEX(DISTINCT ((((rt1.c4)OR(rt1.c2)))OR(rt1.c0))) WHERE (((rtreenode(rt1.c4, rt1.c4))>=(((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((rtreenode(rt1.c4, rt1.c4))>=(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1 INNER JOIN rt1 ON HEX(DISTINCT ((((rt1.c4)OR(rt1.c2)))OR(rt1.c0))));
SELECT * FROM vt1 INNER JOIN rt1 ON HEX(DISTINCT ((((rt1.c4)OR(rt1.c2)))OR(rt1.c0))) WHERE (((rtreenode(rt1.c4, rt1.c4))>=(((vt1.c0) NOTNULL))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0))) BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (((vt0.c0)=('1903401704')))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c0))) BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (((vt0.c0)==('1903401704'))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0))) BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (((vt0.c0)=('1903401704')))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c0))) BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (((vt0.c0)==('1903401704'))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0))) BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (((vt0.c0)=('1903401704')))));
SELECT ALL * FROM vt0, rt1, rt0 WHERE (TRIM(((rt1.c0)=(rt1.c4)))) ORDER BY ((rt0.c1 COLLATE RTRIM) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((rt1.c0)==(rt1.c4)))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY ((rt0.c1 COLLATE RTRIM) IS TRUE) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt1, rt0 WHERE (TRIM(((rt1.c0)=(rt1.c4)))) ORDER BY ((rt0.c1 COLLATE RTRIM) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((rt1.c0)==(rt1.c4)))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY ((rt0.c1 COLLATE RTRIM) IS TRUE) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt1, rt0 WHERE (TRIM(((rt1.c0)=(rt1.c4)))) ORDER BY ((rt0.c1 COLLATE RTRIM) IS TRUE) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((+ (vt0.c0))) NOT NULL)) ORDER BY ((((((((vt0.c0 COLLATE BINARY)OR(vt0.c0 COLLATE NOCASE)))AND(vt0.c0)))AND(((vt0.c0)|(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)), CASE WHEN ((vt0.c0) NOT NULL) THEN CASE '1278956359'  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN UNLIKELY(vt0.c0) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END, (((vt0.c0, '5D⍢', '')) BETWEEN ((((vt0.c0) ISNULL), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0) ISNULL))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0)*(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0 COLLATE BINARY)OR(vt0.c0 COLLATE NOCASE)))AND(vt0.c0)))AND(((vt0.c0)|(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)), CASE WHEN ((vt0.c0) NOT NULL) THEN CASE '1278956359'  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN UNLIKELY(vt0.c0) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END, (((vt0.c0, '5D⍢', '')) BETWEEN ((((vt0.c0) ISNULL), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0) ISNULL))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0)*(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((+ (vt0.c0))) NOT NULL)) ORDER BY ((((((((vt0.c0 COLLATE BINARY)OR(vt0.c0 COLLATE NOCASE)))AND(vt0.c0)))AND(((vt0.c0)|(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)), CASE WHEN ((vt0.c0) NOT NULL) THEN CASE '1278956359'  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN UNLIKELY(vt0.c0) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END, (((vt0.c0, '5D⍢', '')) BETWEEN ((((vt0.c0) ISNULL), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0) ISNULL))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0)*(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0 COLLATE BINARY)OR(vt0.c0 COLLATE NOCASE)))AND(vt0.c0)))AND(((vt0.c0)|(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)), CASE WHEN ((vt0.c0) NOT NULL) THEN CASE '1278956359'  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN UNLIKELY(vt0.c0) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END, (((vt0.c0, '5D⍢', '')) BETWEEN ((((vt0.c0) ISNULL), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0) ISNULL))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0)*(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((+ (vt0.c0))) NOT NULL)) ORDER BY ((((((((vt0.c0 COLLATE BINARY)OR(vt0.c0 COLLATE NOCASE)))AND(vt0.c0)))AND(((vt0.c0)|(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)), CASE WHEN ((vt0.c0) NOT NULL) THEN CASE '1278956359'  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN UNLIKELY(vt0.c0) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END, (((vt0.c0, '5D⍢', '')) BETWEEN ((((vt0.c0) ISNULL), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0) ISNULL))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0)*(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt1, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt1, vt1);
SELECT ALL COUNT(*) FROM vt0, rt1, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt1, vt1);
SELECT ALL COUNT(*) FROM vt0, rt1, vt1 WHERE (vt0.c0);
SELECT * FROM rt1 WHERE (CAST(((rt1.c1)<=(rt1.c1)) AS BLOB)) ORDER BY ((rtreenode(rt1.c2, rt1.c2)) BETWEEN ((('-1795111047') NOT BETWEEN (rt1.c1) AND (rt1.c1))) AND (rt1.c4))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1)<=(rt1.c1)) AS BLOB)) IS TRUE)  as count FROM rt1 ORDER BY ((rtreenode(rt1.c2, rt1.c2)) BETWEEN ((('-1795111047') NOT BETWEEN (rt1.c1) AND (rt1.c1))) AND (rt1.c4))  NULLS LAST);
SELECT * FROM rt1 WHERE (CAST(((rt1.c1)<=(rt1.c1)) AS BLOB)) ORDER BY ((rtreenode(rt1.c2, rt1.c2)) BETWEEN ((('-1795111047') NOT BETWEEN (rt1.c1) AND (rt1.c1))) AND (rt1.c4))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1)<=(rt1.c1)) AS BLOB)) IS TRUE)  as count FROM rt1 ORDER BY ((rtreenode(rt1.c2, rt1.c2)) BETWEEN ((('-1795111047') NOT BETWEEN (rt1.c1) AND (rt1.c1))) AND (rt1.c4))  NULLS LAST);
SELECT * FROM rt1 WHERE (CAST(((rt1.c1)<=(rt1.c1)) AS BLOB)) ORDER BY ((rtreenode(rt1.c2, rt1.c2)) BETWEEN ((('-1795111047') NOT BETWEEN (rt1.c1) AND (rt1.c1))) AND (rt1.c4))  NULLS LAST;
SELECT ALL * FROM vt1, rt0 WHERE (((((CAST(rt0.c1 AS NUMERIC))AND(rt0.c0)))OR(CASE WHEN rt0.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c1 AS NUMERIC))AND(rt0.c0)))OR(CASE WHEN rt0.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((((CAST(rt0.c1 AS NUMERIC))AND(rt0.c0)))OR(CASE WHEN rt0.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c1 AS NUMERIC))AND(rt0.c0)))OR(CASE WHEN rt0.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((((CAST(rt0.c1 AS NUMERIC))AND(rt0.c0)))OR(CASE WHEN rt0.c0 THEN vt1.c0 END)));
SELECT COUNT(*) FROM rt1 INNER JOIN vt1 ON ((((rt1.c0) NOT NULL))>(((vt0.c0) NOTNULL))) FULL OUTER JOIN rt0 ON (+ (((((((((vt0.c0)OR(rt1.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(rt1.c4)))) INNER JOIN vt0 ON rt0.c0 WHERE (((rt0.c2) ISNULL) COLLATE NOCASE) ORDER BY (+ (((((rt1.c2)OR(rt1.c3)))OR(rt1.c4))))  NULLS LAST, (((- (rt1.c0)))||((NOT (rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt1 INNER JOIN vt1 ON ((((rt1.c0) NOT NULL))>(((vt0.c0) NOTNULL))) FULL OUTER JOIN rt0 ON (+ (((((((((vt0.c0)OR(rt1.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(rt1.c4)))) INNER JOIN vt0 ON rt0.c0 ORDER BY (+ (((((rt1.c2)OR(rt1.c3)))OR(rt1.c4))))  NULLS LAST, (((- (rt1.c0)))||((NOT (rt1.c1))))  NULLS LAST);
SELECT COUNT(*) FROM rt1 INNER JOIN vt1 ON ((((rt1.c0) NOT NULL))>(((vt0.c0) NOTNULL))) FULL OUTER JOIN rt0 ON (+ (((((((((vt0.c0)OR(rt1.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(rt1.c4)))) INNER JOIN vt0 ON rt0.c0 WHERE (((rt0.c2) ISNULL) COLLATE NOCASE) ORDER BY (+ (((((rt1.c2)OR(rt1.c3)))OR(rt1.c4))))  NULLS LAST, (((- (rt1.c0)))||((NOT (rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt1 INNER JOIN vt1 ON ((((rt1.c0) NOT NULL))>(((vt0.c0) NOTNULL))) FULL OUTER JOIN rt0 ON (+ (((((((((vt0.c0)OR(rt1.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(rt1.c4)))) INNER JOIN vt0 ON rt0.c0 ORDER BY (+ (((((rt1.c2)OR(rt1.c3)))OR(rt1.c4))))  NULLS LAST, (((- (rt1.c0)))||((NOT (rt1.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c0 AS INTEGER)  WHEN (vt0.c0 IN ()) THEN vt0.c0 ELSE COALESCE(DISTINCT vt0.c0, vt0.c0) END) ORDER BY (- (((vt0.c0) NOTNULL))) DESC, UNLIKELY(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ASC, ((((vt0.c0) IS TRUE))<>('1879415583')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS INTEGER)  WHEN (vt0.c0 IN ()) THEN vt0.c0 ELSE COALESCE(DISTINCT vt0.c0, vt0.c0) END) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0) NOTNULL))) DESC, UNLIKELY(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ASC, ((((vt0.c0) IS TRUE))!=('1879415583')) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c0 AS INTEGER)  WHEN (vt0.c0 IN ()) THEN vt0.c0 ELSE COALESCE(DISTINCT vt0.c0, vt0.c0) END) ORDER BY (- (((vt0.c0) NOTNULL))) DESC, UNLIKELY(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ASC, ((((vt0.c0) IS TRUE))<>('1879415583')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS INTEGER)  WHEN (vt0.c0 IN ()) THEN vt0.c0 ELSE COALESCE(DISTINCT vt0.c0, vt0.c0) END) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0) NOTNULL))) DESC, UNLIKELY(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ASC, ((((vt0.c0) IS TRUE))!=('1879415583')) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c0 AS INTEGER)  WHEN (vt0.c0 IN ()) THEN vt0.c0 ELSE COALESCE(DISTINCT vt0.c0, vt0.c0) END) ORDER BY (- (((vt0.c0) NOTNULL))) DESC, UNLIKELY(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ASC, ((((vt0.c0) IS TRUE))<>('1879415583')) DESC;
SELECT COUNT(*) FROM rt0, rt1 FULL OUTER JOIN vt1 ON ((((rt1.c0, rt0.c0, rt1.c0))<=((vt1.c0, rt1.c3, rt1.c1))) IN ((- (rt1.c3)))) WHERE ((0.4822842802098334 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0.4822842802098334 IN ())) IS TRUE)  as count FROM rt0, rt1 FULL OUTER JOIN vt1 ON ((((rt1.c0, rt0.c0, rt1.c0))<=((vt1.c0, rt1.c3, rt1.c1))) IN ((- (rt1.c3)))));
SELECT COUNT(*) FROM rt0, rt1 FULL OUTER JOIN vt1 ON ((((rt1.c0, rt0.c0, rt1.c0))<=((vt1.c0, rt1.c3, rt1.c1))) IN ((- (rt1.c3)))) WHERE ((0.4822842802098334 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0.4822842802098334 IN ())) IS TRUE)  as count FROM rt0, rt1 FULL OUTER JOIN vt1 ON ((((rt1.c0, rt0.c0, rt1.c0))<=((vt1.c0, rt1.c3, rt1.c1))) IN ((- (rt1.c3)))));
SELECT COUNT(*) FROM rt0, rt1 FULL OUTER JOIN vt1 ON ((((rt1.c0, rt0.c0, rt1.c0))<=((vt1.c0, rt1.c3, rt1.c1))) IN ((- (rt1.c3)))) WHERE ((0.4822842802098334 IN ()));
SELECT ALL COUNT(*) FROM vt1, vt0, rt0, rt1 NOT INDEXED WHERE (0.7564663256066751) ORDER BY CHANGES() DESC  NULLS LAST, ((rt1.c3) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((0.7564663256066751) IS TRUE)  as count FROM vt1, vt0, rt0, rt1 ORDER BY CHANGES() DESC  NULLS LAST, ((rt1.c3) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0, rt1 NOT INDEXED WHERE (0.7564663256066751) ORDER BY CHANGES() DESC  NULLS LAST, ((rt1.c3) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((0.7564663256066751) IS TRUE)  as count FROM vt1, vt0, rt0, rt1 ORDER BY CHANGES() DESC  NULLS LAST, ((rt1.c3) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0, rt1 NOT INDEXED WHERE (0.7564663256066751) ORDER BY CHANGES() DESC  NULLS LAST, ((rt1.c3) IS FALSE) ASC;
SELECT COUNT(*) FROM rt0, rt1, vt1 LEFT OUTER JOIN vt0 ON ((rt1.c4) NOTNULL) COLLATE BINARY WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM rt0, rt1, vt1 LEFT OUTER JOIN vt0 ON ((rt1.c4) NOTNULL) COLLATE BINARY);
SELECT COUNT(*) FROM rt0, rt1, vt1 LEFT OUTER JOIN vt0 ON ((rt1.c4) NOTNULL) COLLATE BINARY WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM rt0, rt1, vt1 LEFT OUTER JOIN vt0 ON ((rt1.c4) NOTNULL) COLLATE BINARY);
SELECT COUNT(*) FROM rt0, rt1, vt1 LEFT OUTER JOIN vt0 ON ((rt1.c4) NOTNULL) COLLATE BINARY WHERE (rt1.c4);
SELECT ALL * FROM vt1, rt0, rt1 WHERE (CASE WHEN (- (0.6852591297258173)) THEN ((rt0.c0) BETWEEN (vt1.c0) AND (NULL)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (0.6852591297258173)) THEN ((rt0.c0) BETWEEN (vt1.c0) AND (NULL)) END) IS TRUE)  as count FROM vt1, rt0 NOT INDEXED, rt1);
SELECT ALL * FROM vt1, rt0, rt1 WHERE (CASE WHEN (- (0.6852591297258173)) THEN ((rt0.c0) BETWEEN (vt1.c0) AND (NULL)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (0.6852591297258173)) THEN ((rt0.c0) BETWEEN (vt1.c0) AND (NULL)) END) IS TRUE)  as count FROM vt1, rt0 NOT INDEXED, rt1);
SELECT ALL * FROM vt1, rt0, rt1 WHERE (CASE WHEN (- (0.6852591297258173)) THEN ((rt0.c0) BETWEEN (vt1.c0) AND (NULL)) END);
SELECT * FROM vt1 WHERE (((((((vt1.c0) NOT BETWEEN ('0.06281992015369875') AND (vt1.c0)))AND((~ (vt1.c0)))))AND(LIKELIHOOD(vt1.c0, 0.20894800521914403))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) NOT BETWEEN ('0.06281992015369875') AND (vt1.c0)))AND((~ (vt1.c0)))))AND(LIKELIHOOD(vt1.c0, 0.20894800521914403)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((vt1.c0) NOT BETWEEN ('0.06281992015369875') AND (vt1.c0)))AND((~ (vt1.c0)))))AND(LIKELIHOOD(vt1.c0, 0.20894800521914403))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) NOT BETWEEN ('0.06281992015369875') AND (vt1.c0)))AND((~ (vt1.c0)))))AND(LIKELIHOOD(vt1.c0, 0.20894800521914403)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((vt1.c0) NOT BETWEEN ('0.06281992015369875') AND (vt1.c0)))AND((~ (vt1.c0)))))AND(LIKELIHOOD(vt1.c0, 0.20894800521914403))));
SELECT ALL * FROM rt1, rt0, vt1 WHERE (CAST(((rt1.c0) NOT NULL) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0) NOT NULL) AS REAL)) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT ALL * FROM rt1, rt0, vt1 WHERE (CAST(((rt1.c0) NOT NULL) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0) NOT NULL) AS REAL)) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT ALL * FROM rt1, rt0, vt1 WHERE (CAST(((rt1.c0) NOT NULL) AS REAL));
SELECT ALL * FROM vt1, vt0, rt0, rt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0, rt0, rt1);
SELECT ALL * FROM vt1, vt0, rt0, rt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0, rt0, rt1);
SELECT ALL * FROM vt1, vt0, rt0, rt1 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, rt1 WHERE (NULL);
SELECT ALL * FROM vt1, vt0, rt1 WHERE (((TYPEOF(rt1.c0)) BETWEEN (((((((((NULL)OR(rt1.c3)))AND(rt1.c3)))OR(vt1.c0)))OR(0.42528644158347884))) AND ((~ (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(rt1.c0)) BETWEEN (((((((((NULL)OR(rt1.c3)))AND(rt1.c3)))OR(vt1.c0)))OR(0.42528644158347884))) AND ((~ (rt1.c3))))) IS TRUE)  as count FROM vt1, vt0, rt1);
SELECT ALL * FROM vt1, vt0, rt1 WHERE (((TYPEOF(rt1.c0)) BETWEEN (((((((((NULL)OR(rt1.c3)))AND(rt1.c3)))OR(vt1.c0)))OR(0.42528644158347884))) AND ((~ (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(rt1.c0)) BETWEEN (((((((((NULL)OR(rt1.c3)))AND(rt1.c3)))OR(vt1.c0)))OR(0.42528644158347884))) AND ((~ (rt1.c3))))) IS TRUE)  as count FROM vt1, vt0, rt1);
SELECT ALL * FROM vt1, vt0, rt1 WHERE (((TYPEOF(rt1.c0)) BETWEEN (((((((((NULL)OR(rt1.c3)))AND(rt1.c3)))OR(vt1.c0)))OR(0.42528644158347884))) AND ((~ (rt1.c3)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((~ (vt1.c0)))*(((1913747535)AND(vt1.c0))))) ORDER BY (((CAST(vt1.c0 AS REAL)))<=((CAST(vt1.c0 AS BLOB)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c0)))*(((1913747535)AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((CAST(vt1.c0 AS REAL)))<=((CAST(vt1.c0 AS BLOB)))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((~ (vt1.c0)))*(((1913747535)AND(vt1.c0))))) ORDER BY (((CAST(vt1.c0 AS REAL)))<=((CAST(vt1.c0 AS BLOB)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c0)))*(((1913747535)AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((CAST(vt1.c0 AS REAL)))<=((CAST(vt1.c0 AS BLOB)))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((~ (vt1.c0)))*(((1913747535)AND(vt1.c0))))) ORDER BY (((CAST(vt1.c0 AS REAL)))<=((CAST(vt1.c0 AS BLOB)))) ASC;
SELECT ALL * FROM vt1, rt1, rt0 WHERE (((((((rt0.c1)AND(rt0.c2)))AND(rt1.c4))) NOT BETWEEN ((('1438306892') IS FALSE)) AND ((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)AND(rt0.c2)))AND(rt1.c4))) NOT BETWEEN ((('1438306892') IS FALSE)) AND ((rt1.c2 IN ())))) IS TRUE)  as count FROM vt1, rt1, rt0);
SELECT ALL * FROM vt1, rt1, rt0 WHERE (((((((rt0.c1)AND(rt0.c2)))AND(rt1.c4))) NOT BETWEEN ((('1438306892') IS FALSE)) AND ((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)AND(rt0.c2)))AND(rt1.c4))) NOT BETWEEN ((('1438306892') IS FALSE)) AND ((rt1.c2 IN ())))) IS TRUE)  as count FROM vt1, rt1, rt0);
SELECT ALL * FROM vt1, rt1, rt0 WHERE (((((((rt0.c1)AND(rt0.c2)))AND(rt1.c4))) NOT BETWEEN ((('1438306892') IS FALSE)) AND ((rt1.c2 IN ()))));
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (((((rt1.c3) NOTNULL)) BETWEEN ((- (rt1.c2))) AND (CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c2 WHEN vt1.c0 THEN rt1.c1 END))) ORDER BY CAST((- (rt1.c3)) AS INTEGER)  NULLS FIRST, (~ (((rt1.c1)>=(vt1.c0)))) DESC, ((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c4 END) NOT BETWEEN (((rt1.c4) NOT BETWEEN (rt1.c2) AND (NULL))) AND (json_patch(x'', rt1.c2))) ASC, COALESCE(((rt1.c4) NOT BETWEEN (rt1.c4) AND (x'00b3')), x'', ((rt1.c2) NOTNULL), json(rt1.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3) NOTNULL)) BETWEEN ((- (rt1.c2))) AND (CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c2 WHEN vt1.c0 THEN rt1.c1 END))) IS TRUE)  as count FROM rt1, vt1 ORDER BY CAST((- (rt1.c3)) AS INTEGER)  NULLS FIRST, (~ (((rt1.c1)>=(vt1.c0)))) DESC, ((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c4 END) NOT BETWEEN (((rt1.c4) NOT BETWEEN (rt1.c2) AND (NULL))) AND (json_patch(x'', rt1.c2))) ASC, COALESCE(((rt1.c4) NOT BETWEEN (rt1.c4) AND (x'00b3')), x'', ((rt1.c2) NOTNULL), json(rt1.c1))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (((((rt1.c3) NOTNULL)) BETWEEN ((- (rt1.c2))) AND (CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c2 WHEN vt1.c0 THEN rt1.c1 END))) ORDER BY CAST((- (rt1.c3)) AS INTEGER)  NULLS FIRST, (~ (((rt1.c1)>=(vt1.c0)))) DESC, ((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c4 END) NOT BETWEEN (((rt1.c4) NOT BETWEEN (rt1.c2) AND (NULL))) AND (json_patch(x'', rt1.c2))) ASC, COALESCE(((rt1.c4) NOT BETWEEN (rt1.c4) AND (x'00b3')), x'', ((rt1.c2) NOTNULL), json(rt1.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3) NOTNULL)) BETWEEN ((- (rt1.c2))) AND (CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c2 WHEN vt1.c0 THEN rt1.c1 END))) IS TRUE)  as count FROM rt1, vt1 ORDER BY CAST((- (rt1.c3)) AS INTEGER)  NULLS FIRST, (~ (((rt1.c1)>=(vt1.c0)))) DESC, ((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c4 END) NOT BETWEEN (((rt1.c4) NOT BETWEEN (rt1.c2) AND (NULL))) AND (json_patch(x'', rt1.c2))) ASC, COALESCE(((rt1.c4) NOT BETWEEN (rt1.c4) AND (x'00b3')), x'', ((rt1.c2) NOTNULL), json(rt1.c1))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt1, vt0 WHERE ((rt1.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((rt1.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt1, vt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt1, vt0 WHERE ((rt1.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((rt1.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt1, vt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt1, vt0 WHERE ((rt1.c0 IN ()) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1 WHERE ((('866225729')<=(((vt1.c0)|(vt1.c0))))) ORDER BY (((vt1.c0)AND(vt1.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('866225729')<=(((vt1.c0)|(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)AND(vt1.c0)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((('866225729')<=(((vt1.c0)|(vt1.c0))))) ORDER BY (((vt1.c0)AND(vt1.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('866225729')<=(((vt1.c0)|(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)AND(vt1.c0)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((('866225729')<=(((vt1.c0)|(vt1.c0))))) ORDER BY (((vt1.c0)AND(vt1.c0)) IN ())  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2)*(vt0.c0)))<((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)*(vt0.c0)))<((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2)*(vt0.c0)))<((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)*(vt0.c0)))<((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2)*(vt0.c0)))<((rt0.c2 IN ()))));
SELECT * FROM rt1 CROSS JOIN vt0 ON rt1.c0 RIGHT OUTER JOIN rt0 ON rt0.c0 LEFT OUTER JOIN vt1 ON CASE ((((((((rt1.c4)AND(rt1.c4)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0))  WHEN ((rt1.c3)<(rt0.c1)) THEN vt0.c0 COLLATE NOCASE WHEN x'50e7' THEN ((rt1.c4) ISNULL) WHEN ((rt0.c2)&(vt0.c0)) THEN CAST(rt1.c4 AS NUMERIC) ELSE ((((((((vt0.c0)OR(rt0.c2)))AND(x'')))AND(rt0.c0)))OR(rt1.c1)) END WHERE (((rt1.c2)>('xb')));
SELECT SUM(count) FROM (SELECT ((((rt1.c2)>('xb'))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON rt1.c0 RIGHT OUTER JOIN rt0 ON rt0.c0 LEFT OUTER JOIN vt1 ON CASE ((((((((rt1.c4)AND(rt1.c4)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0))  WHEN ((rt1.c3)<(rt0.c1)) THEN vt0.c0 COLLATE NOCASE WHEN x'50e7' THEN ((rt1.c4) ISNULL) WHEN ((rt0.c2)&(vt0.c0)) THEN CAST(rt1.c4 AS NUMERIC) ELSE ((((((((vt0.c0)OR(rt0.c2)))AND(x'')))AND(rt0.c0)))OR(rt1.c1)) END);
SELECT * FROM rt1 CROSS JOIN vt0 ON rt1.c0 RIGHT OUTER JOIN rt0 ON rt0.c0 LEFT OUTER JOIN vt1 ON CASE ((((((((rt1.c4)AND(rt1.c4)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0))  WHEN ((rt1.c3)<(rt0.c1)) THEN vt0.c0 COLLATE NOCASE WHEN x'50e7' THEN ((rt1.c4) ISNULL) WHEN ((rt0.c2)&(vt0.c0)) THEN CAST(rt1.c4 AS NUMERIC) ELSE ((((((((vt0.c0)OR(rt0.c2)))AND(x'')))AND(rt0.c0)))OR(rt1.c1)) END WHERE (((rt1.c2)>('xb')));
SELECT SUM(count) FROM (SELECT ((((rt1.c2)>('xb'))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON rt1.c0 RIGHT OUTER JOIN rt0 ON rt0.c0 LEFT OUTER JOIN vt1 ON CASE ((((((((rt1.c4)AND(rt1.c4)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0))  WHEN ((rt1.c3)<(rt0.c1)) THEN vt0.c0 COLLATE NOCASE WHEN x'50e7' THEN ((rt1.c4) ISNULL) WHEN ((rt0.c2)&(vt0.c0)) THEN CAST(rt1.c4 AS NUMERIC) ELSE ((((((((vt0.c0)OR(rt0.c2)))AND(x'')))AND(rt0.c0)))OR(rt1.c1)) END);
SELECT * FROM rt1 CROSS JOIN vt0 ON rt1.c0 RIGHT OUTER JOIN rt0 ON rt0.c0 LEFT OUTER JOIN vt1 ON CASE ((((((((rt1.c4)AND(rt1.c4)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0))  WHEN ((rt1.c3)<(rt0.c1)) THEN vt0.c0 COLLATE NOCASE WHEN x'50e7' THEN ((rt1.c4) ISNULL) WHEN ((rt0.c2)&(vt0.c0)) THEN CAST(rt1.c4 AS NUMERIC) ELSE ((((((((vt0.c0)OR(rt0.c2)))AND(x'')))AND(rt0.c0)))OR(rt1.c1)) END WHERE (((rt1.c2)>('xb')));
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((NULL) IS FALSE) IN ())) ORDER BY (((rt1.c2 IN ())) ISNULL)  NULLS LAST, (CASE WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c1 END IN (((0xffffffff911ab82f)<>(rt1.c4)), ((rt1.c4)<(rt1.c4))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NULL) IS FALSE) IN ())) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c2 IN ())) ISNULL)  NULLS LAST, (CASE WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c1 END IN (((0Xffffffff911ab82f)<>(rt1.c4)), ((rt1.c4)<(rt1.c4))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((NULL) IS FALSE) IN ())) ORDER BY (((rt1.c2 IN ())) ISNULL)  NULLS LAST, (CASE WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c1 END IN (((0xffffffff911ab82f)<>(rt1.c4)), ((rt1.c4)<(rt1.c4))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NULL) IS FALSE) IN ())) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c2 IN ())) ISNULL)  NULLS LAST, (CASE WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c1 END IN (((0Xffffffff911ab82f)<>(rt1.c4)), ((rt1.c4)<(rt1.c4))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((NULL) IS FALSE) IN ())) ORDER BY (((rt1.c2 IN ())) ISNULL)  NULLS LAST, (CASE WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c1 END IN (((0xffffffff911ab82f)<>(rt1.c4)), ((rt1.c4)<(rt1.c4))))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN rt0 ON CASE (rt1.c4 IN (rt0.c2))  WHEN ((775190003)IS(rt0.c0)) THEN 0.19733340208070915 ELSE ((rt0.c1) BETWEEN (rt0.c2) AND (rt1.c3)) END LEFT OUTER JOIN vt0 ON LIKELIHOOD(rt1.c0, 0.36824485083370695) CROSS JOIN vt1 ON (((NOT (rt0.c0))) BETWEEN (rt1.c3) AND (NULL)) WHERE ((((((rt0.c2))>((NULL))))<=((rt1.c3 IN (NULL))))) ORDER BY ROUND(rt0.c1, CAST(vt0.c0 AS NUMERIC)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))>((NULL))))<=((rt1.c3 IN (NULL))))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON CASE (rt1.c4 IN (rt0.c2))  WHEN ((775190003)IS(rt0.c0)) THEN 0.19733340208070915 ELSE ((rt0.c1) BETWEEN (rt0.c2) AND (rt1.c3)) END LEFT OUTER JOIN vt0 ON LIKELIHOOD(rt1.c0, 0.36824485083370695) CROSS JOIN vt1 ON (((NOT (rt0.c0))) BETWEEN (rt1.c3) AND (NULL)) ORDER BY ROUND(rt0.c1, CAST(vt0.c0 AS NUMERIC)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN rt0 ON CASE (rt1.c4 IN (rt0.c2))  WHEN ((775190003)IS(rt0.c0)) THEN 0.19733340208070915 ELSE ((rt0.c1) BETWEEN (rt0.c2) AND (rt1.c3)) END LEFT OUTER JOIN vt0 ON LIKELIHOOD(rt1.c0, 0.36824485083370695) CROSS JOIN vt1 ON (((NOT (rt0.c0))) BETWEEN (rt1.c3) AND (NULL)) WHERE ((((((rt0.c2))>((NULL))))<=((rt1.c3 IN (NULL))))) ORDER BY ROUND(rt0.c1, CAST(vt0.c0 AS NUMERIC)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))>((NULL))))<=((rt1.c3 IN (NULL))))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON CASE (rt1.c4 IN (rt0.c2))  WHEN ((775190003)IS(rt0.c0)) THEN 0.19733340208070915 ELSE ((rt0.c1) BETWEEN (rt0.c2) AND (rt1.c3)) END LEFT OUTER JOIN vt0 ON LIKELIHOOD(rt1.c0, 0.36824485083370695) CROSS JOIN vt1 ON (((NOT (rt0.c0))) BETWEEN (rt1.c3) AND (NULL)) ORDER BY ROUND(rt0.c1, CAST(vt0.c0 AS NUMERIC)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN rt0 ON CASE (rt1.c4 IN (rt0.c2))  WHEN ((775190003)IS(rt0.c0)) THEN 0.19733340208070915 ELSE ((rt0.c1) BETWEEN (rt0.c2) AND (rt1.c3)) END LEFT OUTER JOIN vt0 ON LIKELIHOOD(rt1.c0, 0.36824485083370695) CROSS JOIN vt1 ON (((NOT (rt0.c0))) BETWEEN (rt1.c3) AND (NULL)) WHERE ((((((rt0.c2))>((NULL))))<=((rt1.c3 IN (NULL))))) ORDER BY ROUND(rt0.c1, CAST(vt0.c0 AS NUMERIC)) ASC  NULLS LAST;
SELECT * FROM rt0, rt1, vt1, vt0 WHERE ((~ ((((vt1.c0, NULL, rt1.c1))>=((rt0.c0, rt0.c1, rt1.c3)))))) ORDER BY CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt1.c2)) AS REAL) DESC, ((((rt1.c1) NOT BETWEEN (vt1.c0) AND (rt1.c4))) NOT BETWEEN ('1467740107') AND (rt1.c3)) ASC;
SELECT SUM(count) FROM (SELECT (((~ ((((vt1.c0, NULL, rt1.c1))>=((rt0.c0, rt0.c1, rt1.c3)))))) IS TRUE)  as count FROM rt0, rt1, vt1, vt0 ORDER BY CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt1.c2)) AS REAL) DESC, ((((rt1.c1) NOT BETWEEN (vt1.c0) AND (rt1.c4))) NOT BETWEEN ('1467740107') AND (rt1.c3)) ASC);
SELECT * FROM rt0, rt1, vt1, vt0 WHERE ((~ ((((vt1.c0, NULL, rt1.c1))>=((rt0.c0, rt0.c1, rt1.c3)))))) ORDER BY CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt1.c2)) AS REAL) DESC, ((((rt1.c1) NOT BETWEEN (vt1.c0) AND (rt1.c4))) NOT BETWEEN ('1467740107') AND (rt1.c3)) ASC;
SELECT SUM(count) FROM (SELECT (((~ ((((vt1.c0, NULL, rt1.c1))>=((rt0.c0, rt0.c1, rt1.c3)))))) IS TRUE)  as count FROM rt0, rt1, vt1, vt0 ORDER BY CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt1.c2)) AS REAL) DESC, ((((rt1.c1) NOT BETWEEN (vt1.c0) AND (rt1.c4))) NOT BETWEEN ('1467740107') AND (rt1.c3)) ASC);
SELECT * FROM rt0, rt1, vt1, vt0 WHERE ((~ ((((vt1.c0, NULL, rt1.c1))>=((rt0.c0, rt0.c1, rt1.c3)))))) ORDER BY CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt1.c2)) AS REAL) DESC, ((((rt1.c1) NOT BETWEEN (vt1.c0) AND (rt1.c4))) NOT BETWEEN ('1467740107') AND (rt1.c3)) ASC;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c1)OR(rt0.c1)) COLLATE BINARY WHERE (((CAST(rt0.c2 AS INTEGER)) IS TRUE)) ORDER BY TRIM(DISTINCT rt0.c2) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c1)OR(rt0.c1)) COLLATE BINARY ORDER BY TRIM(DISTINCT rt0.c2) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c1)OR(rt0.c1)) COLLATE BINARY WHERE (((CAST(rt0.c2 AS INTEGER)) IS TRUE)) ORDER BY TRIM(DISTINCT rt0.c2) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c1)OR(rt0.c1)) COLLATE BINARY ORDER BY TRIM(DISTINCT rt0.c2) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c1)OR(rt0.c1)) COLLATE BINARY WHERE (((CAST(rt0.c2 AS INTEGER)) IS TRUE)) ORDER BY TRIM(DISTINCT rt0.c2) COLLATE NOCASE;
SELECT ALL * FROM rt0 WHERE ((- (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY x''  NULLS FIRST, UNLIKELY(((rt0.c1)IS(rt0.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY x''  NULLS FIRST, UNLIKELY(((rt0.c1)IS(rt0.c1))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((- (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY x''  NULLS FIRST, UNLIKELY(((rt0.c1)IS(rt0.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY x''  NULLS FIRST, UNLIKELY(((rt0.c1)IS(rt0.c1))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((- (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY x''  NULLS FIRST, UNLIKELY(((rt0.c1)IS(rt0.c1))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt1 WHERE (CASE WHEN ((vt1.c0)&(rt1.c2)) THEN ((((0.294784132344569)AND(x'83847f0e')))OR(rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0)&(rt1.c2)) THEN ((((0.294784132344569)AND(x'83847f0e')))OR(rt1.c1)) END) IS TRUE)  as count FROM rt1 NOT INDEXED, vt1);
SELECT COUNT(*) FROM rt1, vt1 WHERE (CASE WHEN ((vt1.c0)&(rt1.c2)) THEN ((((0.294784132344569)AND(x'83847f0e')))OR(rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0)&(rt1.c2)) THEN ((((0.294784132344569)AND(x'83847f0e')))OR(rt1.c1)) END) IS TRUE)  as count FROM rt1 NOT INDEXED, vt1);
SELECT COUNT(*) FROM rt1, vt1 WHERE (CASE WHEN ((vt1.c0)&(rt1.c2)) THEN ((((0.294784132344569)AND(x'83847f0e')))OR(rt1.c1)) END);
SELECT COUNT(*) FROM vt1, rt1 WHERE ((- ((((rt1.c4))<=((vt1.c0)))))) ORDER BY (~ ((('-820321308')AND(x'')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((((rt1.c4))<=((vt1.c0)))))) IS TRUE)  as count FROM vt1, rt1 ORDER BY (~ ((('-820321308')AND(x'')))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt1 WHERE ((- ((((rt1.c4))<=((vt1.c0)))))) ORDER BY (~ ((('-820321308')AND(x'')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((((rt1.c4))<=((vt1.c0)))))) IS TRUE)  as count FROM vt1, rt1 ORDER BY (~ ((('-820321308')AND(x'')))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt1 WHERE ((- ((((rt1.c4))<=((vt1.c0)))))) ORDER BY (~ ((('-820321308')AND(x'')))) DESC  NULLS FIRST;
SELECT * FROM rt1 WHERE (('_r' COLLATE RTRIM IN ())) ORDER BY (((0.08102828677627472))<>((DATETIME(rt1.c3, rt1.c2, rt1.c0, rt1.c1, rt1.c0, rt1.c3, rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL ((('_r' COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt1 ORDER BY (((0.08102828677627472))<>((DATETIME(rt1.c3, rt1.c2, rt1.c0, rt1.c1, rt1.c0, rt1.c3, rt1.c3)))));
SELECT * FROM rt1 WHERE (('_r' COLLATE RTRIM IN ())) ORDER BY (((0.08102828677627472))<>((DATETIME(rt1.c3, rt1.c2, rt1.c0, rt1.c1, rt1.c0, rt1.c3, rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL ((('_r' COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt1 ORDER BY (((0.08102828677627472))<>((DATETIME(rt1.c3, rt1.c2, rt1.c0, rt1.c1, rt1.c0, rt1.c3, rt1.c3)))));
SELECT * FROM rt1 WHERE (('_r' COLLATE RTRIM IN ())) ORDER BY (((0.08102828677627472))<>((DATETIME(rt1.c3, rt1.c2, rt1.c0, rt1.c1, rt1.c0, rt1.c3, rt1.c3))));
SELECT * FROM vt0, vt1, rt0 WHERE (CAST(LIKELIHOOD(DISTINCT vt1.c0, 0.5895099858467817) AS BLOB)) ORDER BY ((((((((0.2058934098835793)AND((+ (vt1.c0)))))OR(((rt0.c0)<(vt0.c0)))))OR(((rt0.c2)AND(vt1.c0)))))AND(((vt1.c0) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(LIKELIHOOD(DISTINCT vt1.c0, 0.5895099858467817) AS BLOB)) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((((((((0.2058934098835793)AND((+ (vt1.c0)))))OR(((rt0.c0)<(vt0.c0)))))OR(((rt0.c2)AND(vt1.c0)))))AND(((vt1.c0) NOT NULL)))  NULLS LAST);
SELECT * FROM vt0, vt1, rt0 WHERE (CAST(LIKELIHOOD(DISTINCT vt1.c0, 0.5895099858467817) AS BLOB)) ORDER BY ((((((((0.2058934098835793)AND((+ (vt1.c0)))))OR(((rt0.c0)<(vt0.c0)))))OR(((rt0.c2)AND(vt1.c0)))))AND(((vt1.c0) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(LIKELIHOOD(DISTINCT vt1.c0, 0.5895099858467817) AS BLOB)) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((((((((0.2058934098835793)AND((+ (vt1.c0)))))OR(((rt0.c0)<(vt0.c0)))))OR(((rt0.c2)AND(vt1.c0)))))AND(((vt1.c0) NOT NULL)))  NULLS LAST);
SELECT * FROM vt0, vt1, rt0 WHERE (CAST(LIKELIHOOD(DISTINCT vt1.c0, 0.5895099858467817) AS BLOB)) ORDER BY ((((((((0.2058934098835793)AND((+ (vt1.c0)))))OR(((rt0.c0)<(vt0.c0)))))OR(((rt0.c2)AND(vt1.c0)))))AND(((vt1.c0) NOT NULL)))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((rt0.c0) ISNULL)) ORDER BY ((((rt0.c2)OR((((rt0.c0))==((rt0.c2))))))OR(((rt0.c2)>=(NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)OR((((rt0.c0))==((rt0.c2))))))OR(((rt0.c2)>=(NULL)))));
SELECT ALL * FROM rt0 WHERE (((rt0.c0) ISNULL)) ORDER BY ((((rt0.c2)OR((((rt0.c0))==((rt0.c2))))))OR(((rt0.c2)>=(NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)OR((((rt0.c0))==((rt0.c2))))))OR(((rt0.c2)>=(NULL)))));
SELECT ALL * FROM rt0 WHERE (((rt0.c0) ISNULL)) ORDER BY ((((rt0.c2)OR((((rt0.c0))==((rt0.c2))))))OR(((rt0.c2)>=(NULL))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)OR(((vt1.c0)%(vt1.c0))))) ORDER BY NULLIF(DISTINCT (+ (vt1.c0)), ((vt1.c0)LIKE(vt1.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)OR(((vt1.c0)%(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY NULLIF(DISTINCT (+ (vt1.c0)), ((vt1.c0)LIKE(vt1.c0))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)OR(((vt1.c0)%(vt1.c0))))) ORDER BY NULLIF(DISTINCT (+ (vt1.c0)), ((vt1.c0)LIKE(vt1.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)OR(((vt1.c0)%(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY NULLIF(DISTINCT (+ (vt1.c0)), ((vt1.c0)LIKE(vt1.c0))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)OR(((vt1.c0)%(vt1.c0))))) ORDER BY NULLIF(DISTINCT (+ (vt1.c0)), ((vt1.c0)LIKE(vt1.c0))) DESC  NULLS LAST;
SELECT ALL * FROM vt0, rt0, rt1, vt1 WHERE (json_patch(NULLIF(DISTINCT vt1.c0, rt0.c0), UPPER(rt1.c4)));
SELECT SUM(count) FROM (SELECT ALL ((json_patch(NULLIF(DISTINCT vt1.c0, rt0.c0), UPPER(rt1.c4))) IS TRUE)  as count FROM vt0, rt0, rt1, vt1);
SELECT ALL * FROM vt0, rt0, rt1, vt1 WHERE (json_patch(NULLIF(DISTINCT vt1.c0, rt0.c0), UPPER(rt1.c4)));
SELECT SUM(count) FROM (SELECT ALL ((json_patch(NULLIF(DISTINCT vt1.c0, rt0.c0), UPPER(rt1.c4))) IS TRUE)  as count FROM vt0, rt0, rt1, vt1);
SELECT ALL * FROM vt0, rt0, rt1, vt1 WHERE (json_patch(NULLIF(DISTINCT vt1.c0, rt0.c0), UPPER(rt1.c4)));
SELECT * FROM rt1 WHERE ((((rt1.c0))<((((rt1.c1)<=(rt1.c4)))))) ORDER BY CASE CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c4 END  WHEN (((rt1.c3)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c1))) THEN ((rt1.c4)IS(rt1.c2)) ELSE ((((((((rt1.c1)AND(rt1.c2)))OR(rt1.c1)))AND(rt1.c4)))AND(rt1.c1)) END ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c0))<((((rt1.c1)<=(rt1.c4)))))) IS TRUE)  as count FROM rt1 ORDER BY CASE CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c4 END  WHEN (((rt1.c3)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c1))) THEN ((rt1.c4)IS(rt1.c2)) ELSE ((((((((rt1.c1)AND(rt1.c2)))OR(rt1.c1)))AND(rt1.c4)))AND(rt1.c1)) END ASC);
SELECT * FROM rt1 WHERE ((((rt1.c0))<((((rt1.c1)<=(rt1.c4)))))) ORDER BY CASE CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c4 END  WHEN (((rt1.c3)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c1))) THEN ((rt1.c4)IS(rt1.c2)) ELSE ((((((((rt1.c1)AND(rt1.c2)))OR(rt1.c1)))AND(rt1.c4)))AND(rt1.c1)) END ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c0))<((((rt1.c1)<=(rt1.c4)))))) IS TRUE)  as count FROM rt1 ORDER BY CASE CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c4 END  WHEN (((rt1.c3)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c1))) THEN ((rt1.c4)IS(rt1.c2)) ELSE ((((((((rt1.c1)AND(rt1.c2)))OR(rt1.c1)))AND(rt1.c4)))AND(rt1.c1)) END ASC);
SELECT * FROM rt1 WHERE ((((rt1.c0))<((((rt1.c1)<=(rt1.c4)))))) ORDER BY CASE CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c4 END  WHEN (((rt1.c3)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c1))) THEN ((rt1.c4)IS(rt1.c2)) ELSE ((((((((rt1.c1)AND(rt1.c2)))OR(rt1.c1)))AND(rt1.c4)))AND(rt1.c1)) END ASC;
SELECT ALL * FROM rt0 WHERE (CASE WHEN NULL COLLATE NOCASE THEN ABS(DISTINCT rt0.c0) WHEN NULL THEN CAST(rt0.c2 AS TEXT) WHEN ABS(x'c51d41c1') THEN CAST(rt0.c2 AS INTEGER) WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END THEN (~ (rt0.c0)) WHEN ((rt0.c2)AND(rt0.c1)) THEN ((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)) ELSE ((rt0.c1)*(rt0.c0)) END) ORDER BY CAST(LOWER(DISTINCT rt0.c2) AS TEXT);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL COLLATE NOCASE THEN ABS(DISTINCT rt0.c0) WHEN NULL THEN CAST(rt0.c2 AS TEXT) WHEN ABS(x'c51d41c1') THEN CAST(rt0.c2 AS INTEGER) WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END THEN (~ (rt0.c0)) WHEN ((rt0.c2)AND(rt0.c1)) THEN ((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)) ELSE ((rt0.c1)*(rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY CAST(LOWER(DISTINCT rt0.c2) AS TEXT));
SELECT ALL * FROM rt0 WHERE (CASE WHEN NULL COLLATE NOCASE THEN ABS(DISTINCT rt0.c0) WHEN NULL THEN CAST(rt0.c2 AS TEXT) WHEN ABS(x'c51d41c1') THEN CAST(rt0.c2 AS INTEGER) WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END THEN (~ (rt0.c0)) WHEN ((rt0.c2)AND(rt0.c1)) THEN ((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)) ELSE ((rt0.c1)*(rt0.c0)) END) ORDER BY CAST(LOWER(DISTINCT rt0.c2) AS TEXT);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL COLLATE NOCASE THEN ABS(DISTINCT rt0.c0) WHEN NULL THEN CAST(rt0.c2 AS TEXT) WHEN ABS(x'c51d41c1') THEN CAST(rt0.c2 AS INTEGER) WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END THEN (~ (rt0.c0)) WHEN ((rt0.c2)AND(rt0.c1)) THEN ((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)) ELSE ((rt0.c1)*(rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY CAST(LOWER(DISTINCT rt0.c2) AS TEXT));
SELECT ALL * FROM rt0 WHERE (CASE WHEN NULL COLLATE NOCASE THEN ABS(DISTINCT rt0.c0) WHEN NULL THEN CAST(rt0.c2 AS TEXT) WHEN ABS(x'c51d41c1') THEN CAST(rt0.c2 AS INTEGER) WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END THEN (~ (rt0.c0)) WHEN ((rt0.c2)AND(rt0.c1)) THEN ((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)) ELSE ((rt0.c1)*(rt0.c0)) END) ORDER BY CAST(LOWER(DISTINCT rt0.c2) AS TEXT);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c1))<=((CAST('-409862850' AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1))<=((CAST('-409862850' AS BLOB))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c1))<=((CAST('-409862850' AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1))<=((CAST('-409862850' AS BLOB))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c1))<=((CAST('-409862850' AS BLOB)))));
SELECT * FROM vt0, rt1, vt1 CROSS JOIN rt0 ON ((((((((('r&!7' IN ()))OR(((((rt0.c2)OR(rt0.c2)))OR(x'')))))OR(((((rt1.c3)AND(rt0.c1)))AND(vt1.c0)))))OR(((rt1.c1) NOTNULL))))AND(((((((((vt1.c0)AND(rt1.c0)))AND(rt0.c0)))OR(rt1.c0)))AND(rt1.c2)))) WHERE (((((rt1.c2) NOT NULL))>=(ABS(rt1.c1)))) ORDER BY rt1.c3, (((((vt1.c0, vt0.c0, rt1.c2))<((vt0.c0, '', vt1.c0)))) NOT BETWEEN (((rt0.c1)+(rt0.c0))) AND (x'6c91')) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOT NULL))>=(ABS(rt1.c1)))) IS TRUE)  as count FROM vt0, rt1, vt1 CROSS JOIN rt0 ON ((((((((('r&!7' IN ()))OR(((((rt0.c2)OR(rt0.c2)))OR(x'')))))OR(((((rt1.c3)AND(rt0.c1)))AND(vt1.c0)))))OR(((rt1.c1) NOTNULL))))AND(((((((((vt1.c0)AND(rt1.c0)))AND(rt0.c0)))OR(rt1.c0)))AND(rt1.c2)))) ORDER BY rt1.c3, (((((vt1.c0, vt0.c0, rt1.c2))<((vt0.c0, '', vt1.c0)))) NOT BETWEEN (((rt0.c1)+(rt0.c0))) AND (x'6c91')) ASC);
SELECT * FROM vt0, rt1, vt1 CROSS JOIN rt0 ON ((((((((('r&!7' IN ()))OR(((((rt0.c2)OR(rt0.c2)))OR(x'')))))OR(((((rt1.c3)AND(rt0.c1)))AND(vt1.c0)))))OR(((rt1.c1) NOTNULL))))AND(((((((((vt1.c0)AND(rt1.c0)))AND(rt0.c0)))OR(rt1.c0)))AND(rt1.c2)))) WHERE (((((rt1.c2) NOT NULL))>=(ABS(rt1.c1)))) ORDER BY rt1.c3, (((((vt1.c0, vt0.c0, rt1.c2))<((vt0.c0, '', vt1.c0)))) NOT BETWEEN (((rt0.c1)+(rt0.c0))) AND (x'6c91')) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOT NULL))>=(ABS(rt1.c1)))) IS TRUE)  as count FROM vt0, rt1, vt1 CROSS JOIN rt0 ON ((((((((('r&!7' IN ()))OR(((((rt0.c2)OR(rt0.c2)))OR(x'')))))OR(((((rt1.c3)AND(rt0.c1)))AND(vt1.c0)))))OR(((rt1.c1) NOTNULL))))AND(((((((((vt1.c0)AND(rt1.c0)))AND(rt0.c0)))OR(rt1.c0)))AND(rt1.c2)))) ORDER BY rt1.c3, (((((vt1.c0, vt0.c0, rt1.c2))<((vt0.c0, '', vt1.c0)))) NOT BETWEEN (((rt0.c1)+(rt0.c0))) AND (x'6c91')) ASC);
SELECT * FROM vt0, rt1, vt1 CROSS JOIN rt0 ON ((((((((('r&!7' IN ()))OR(((((rt0.c2)OR(rt0.c2)))OR(x'')))))OR(((((rt1.c3)AND(rt0.c1)))AND(vt1.c0)))))OR(((rt1.c1) NOTNULL))))AND(((((((((vt1.c0)AND(rt1.c0)))AND(rt0.c0)))OR(rt1.c0)))AND(rt1.c2)))) WHERE (((((rt1.c2) NOT NULL))>=(ABS(rt1.c1)))) ORDER BY rt1.c3, (((((vt1.c0, vt0.c0, rt1.c2))<((vt0.c0, '', vt1.c0)))) NOT BETWEEN (((rt0.c1)+(rt0.c0))) AND (x'6c91')) ASC;
SELECT ALL * FROM rt0, rt1, vt0 LEFT OUTER JOIN vt1 ON ((((((((((rt1.c2)IS NOT(vt1.c0)))AND(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c4 WHEN rt0.c1 THEN rt1.c0 ELSE rt1.c4 END)))OR((((rt1.c1))!=((rt1.c4))))))AND(((rt1.c3)>(vt0.c0)))))AND((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) WHERE ((((NOT (rt1.c2))) NOT BETWEEN ((((vt1.c0))<=((vt1.c0)))) AND (((rt1.c4) IS TRUE)))) ORDER BY (((((((((((rt0.c1)AND(vt1.c0)))AND(rt1.c2)))OR(rt1.c2)))AND(vt0.c0))))!=((((rt1.c2)IS(vt1.c0))))) DESC  NULLS FIRST, CAST(NULL AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c2))) NOT BETWEEN ((((vt1.c0))<=((vt1.c0)))) AND (((rt1.c4) IS TRUE)))) IS TRUE)  as count FROM rt0, rt1, vt0 LEFT OUTER JOIN vt1 ON ((((((((((rt1.c2)IS NOT(vt1.c0)))AND(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c4 WHEN rt0.c1 THEN rt1.c0 ELSE rt1.c4 END)))OR((((rt1.c1))<>((rt1.c4))))))AND(((rt1.c3)>(vt0.c0)))))AND((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ORDER BY (((((((((((rt0.c1)AND(vt1.c0)))AND(rt1.c2)))OR(rt1.c2)))AND(vt0.c0))))<>((((rt1.c2)IS(vt1.c0))))) DESC  NULLS FIRST, CAST(NULL AS BLOB) ASC  NULLS LAST);
SELECT ALL * FROM rt0, rt1, vt0 LEFT OUTER JOIN vt1 ON ((((((((((rt1.c2)IS NOT(vt1.c0)))AND(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c4 WHEN rt0.c1 THEN rt1.c0 ELSE rt1.c4 END)))OR((((rt1.c1))!=((rt1.c4))))))AND(((rt1.c3)>(vt0.c0)))))AND((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) WHERE ((((NOT (rt1.c2))) NOT BETWEEN ((((vt1.c0))<=((vt1.c0)))) AND (((rt1.c4) IS TRUE)))) ORDER BY (((((((((((rt0.c1)AND(vt1.c0)))AND(rt1.c2)))OR(rt1.c2)))AND(vt0.c0))))!=((((rt1.c2)IS(vt1.c0))))) DESC  NULLS FIRST, CAST(NULL AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c2))) NOT BETWEEN ((((vt1.c0))<=((vt1.c0)))) AND (((rt1.c4) IS TRUE)))) IS TRUE)  as count FROM rt0, rt1, vt0 LEFT OUTER JOIN vt1 ON ((((((((((rt1.c2)IS NOT(vt1.c0)))AND(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c4 WHEN rt0.c1 THEN rt1.c0 ELSE rt1.c4 END)))OR((((rt1.c1))<>((rt1.c4))))))AND(((rt1.c3)>(vt0.c0)))))AND((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ORDER BY (((((((((((rt0.c1)AND(vt1.c0)))AND(rt1.c2)))OR(rt1.c2)))AND(vt0.c0))))<>((((rt1.c2)IS(vt1.c0))))) DESC  NULLS FIRST, CAST(NULL AS BLOB) ASC  NULLS LAST);
SELECT ALL * FROM rt0, rt1, vt0 LEFT OUTER JOIN vt1 ON ((((((((((rt1.c2)IS NOT(vt1.c0)))AND(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c4 WHEN rt0.c1 THEN rt1.c0 ELSE rt1.c4 END)))OR((((rt1.c1))!=((rt1.c4))))))AND(((rt1.c3)>(vt0.c0)))))AND((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) WHERE ((((NOT (rt1.c2))) NOT BETWEEN ((((vt1.c0))<=((vt1.c0)))) AND (((rt1.c4) IS TRUE)))) ORDER BY (((((((((((rt0.c1)AND(vt1.c0)))AND(rt1.c2)))OR(rt1.c2)))AND(vt0.c0))))!=((((rt1.c2)IS(vt1.c0))))) DESC  NULLS FIRST, CAST(NULL AS BLOB) ASC  NULLS LAST;
SELECT * FROM rt1, vt1 WHERE ((+ (LIKELY(rt1.c1)))) ORDER BY x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (LIKELY(rt1.c1)))) IS TRUE)  as count FROM rt1 NOT INDEXED, vt1 ORDER BY x'' DESC  NULLS LAST);
SELECT * FROM rt1, vt1 WHERE ((+ (LIKELY(rt1.c1)))) ORDER BY x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (LIKELY(rt1.c1)))) IS TRUE)  as count FROM rt1 NOT INDEXED, vt1 ORDER BY x'' DESC  NULLS LAST);
SELECT * FROM rt1, vt1 WHERE ((+ (LIKELY(rt1.c1)))) ORDER BY x'' DESC  NULLS LAST;
SELECT * FROM rt0, vt1 WHERE (NULL) ORDER BY CASE WHEN (rt0.c0 IN ()) THEN vt1.c0 COLLATE NOCASE ELSE ((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2)) END;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE WHEN (rt0.c0 IN ()) THEN vt1.c0 COLLATE NOCASE ELSE ((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2)) END);
SELECT * FROM rt0, vt1 WHERE (NULL) ORDER BY CASE WHEN (rt0.c0 IN ()) THEN vt1.c0 COLLATE NOCASE ELSE ((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2)) END;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE WHEN (rt0.c0 IN ()) THEN vt1.c0 COLLATE NOCASE ELSE ((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2)) END);
SELECT * FROM rt0, vt1 WHERE (NULL) ORDER BY CASE WHEN (rt0.c0 IN ()) THEN vt1.c0 COLLATE NOCASE ELSE ((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2)) END;
SELECT * FROM vt1 WHERE ('-1164473299') ORDER BY 0Xffffffffeb0d9b42  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-1164473299') IS TRUE)  as count FROM vt1 ORDER BY 0Xffffffffeb0d9b42  NULLS LAST);
SELECT * FROM vt1 WHERE ('-1164473299') ORDER BY 0Xffffffffeb0d9b42  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-1164473299') IS TRUE)  as count FROM vt1 ORDER BY 0Xffffffffeb0d9b42  NULLS LAST);
SELECT * FROM vt1 WHERE ('-1164473299') ORDER BY 0Xffffffffeb0d9b42  NULLS LAST;
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT COUNT(*) FROM rt1, rt0, vt0 INNER JOIN vt1 ON ((('313596986'))>((rt1.c3))) WHERE (((rt0.c1 COLLATE BINARY)%(CAST(rt0.c1 AS INTEGER)))) ORDER BY ((rt0.c0 COLLATE NOCASE)|((- (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE BINARY)%(CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt1, rt0, vt0 INNER JOIN vt1 ON ((('313596986'))>((rt1.c3))) ORDER BY ((rt0.c0 COLLATE NOCASE)|((- (rt0.c2)))));
SELECT COUNT(*) FROM rt1, rt0, vt0 INNER JOIN vt1 ON ((('313596986'))>((rt1.c3))) WHERE (((rt0.c1 COLLATE BINARY)%(CAST(rt0.c1 AS INTEGER)))) ORDER BY ((rt0.c0 COLLATE NOCASE)|((- (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE BINARY)%(CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt1, rt0, vt0 INNER JOIN vt1 ON ((('313596986'))>((rt1.c3))) ORDER BY ((rt0.c0 COLLATE NOCASE)|((- (rt0.c2)))));
SELECT COUNT(*) FROM rt1, rt0, vt0 INNER JOIN vt1 ON ((('313596986'))>((rt1.c3))) WHERE (((rt0.c1 COLLATE BINARY)%(CAST(rt0.c1 AS INTEGER)))) ORDER BY ((rt0.c0 COLLATE NOCASE)|((- (rt0.c2))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((0.373292994972523) ISNULL)))<((((vt1.c0) IS FALSE))))) ORDER BY ((vt1.c0)=(CAST(vt1.c0 AS INTEGER))) DESC  NULLS FIRST, ((vt1.c0 COLLATE RTRIM)>(CAST(vt1.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((0.373292994972523) ISNULL)))<((((vt1.c0) IS FALSE))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)=(CAST(vt1.c0 AS INTEGER))) DESC  NULLS FIRST, ((vt1.c0 COLLATE RTRIM)>(CAST(vt1.c0 AS TEXT)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((0.373292994972523) ISNULL)))<((((vt1.c0) IS FALSE))))) ORDER BY ((vt1.c0)=(CAST(vt1.c0 AS INTEGER))) DESC  NULLS FIRST, ((vt1.c0 COLLATE RTRIM)>(CAST(vt1.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((0.373292994972523) ISNULL)))<((((vt1.c0) IS FALSE))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)=(CAST(vt1.c0 AS INTEGER))) DESC  NULLS FIRST, ((vt1.c0 COLLATE RTRIM)>(CAST(vt1.c0 AS TEXT)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((0.373292994972523) ISNULL)))<((((vt1.c0) IS FALSE))))) ORDER BY ((vt1.c0)=(CAST(vt1.c0 AS INTEGER))) DESC  NULLS FIRST, ((vt1.c0 COLLATE RTRIM)>(CAST(vt1.c0 AS TEXT)))  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0 IN ()))IS(((rt0.c0)/(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))IS(((rt0.c0)/(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0 IN ()))IS(((rt0.c0)/(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))IS(((rt0.c0)/(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0 IN ()))IS(((rt0.c0)/(rt0.c2)))));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON rt0.c1 WHERE ((((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((CAST(rt0.c1 AS REAL), (~ (vt0.c0)), CASE WHEN rt0.c0 THEN 0.5860904936582363 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)) AND ((vt0.c0 COLLATE NOCASE, ABS(NULL), rt0.c1 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((CAST(rt0.c1 AS REAL), (~ (vt0.c0)), CASE WHEN rt0.c0 THEN 0.5860904936582363 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)) AND ((vt0.c0 COLLATE NOCASE, ABS(NULL), rt0.c1 COLLATE BINARY)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON rt0.c1);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON rt0.c1 WHERE ((((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((CAST(rt0.c1 AS REAL), (~ (vt0.c0)), CASE WHEN rt0.c0 THEN 0.5860904936582363 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)) AND ((vt0.c0 COLLATE NOCASE, ABS(NULL), rt0.c1 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((CAST(rt0.c1 AS REAL), (~ (vt0.c0)), CASE WHEN rt0.c0 THEN 0.5860904936582363 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)) AND ((vt0.c0 COLLATE NOCASE, ABS(NULL), rt0.c1 COLLATE BINARY)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON rt0.c1);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON rt0.c1 WHERE ((((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((CAST(rt0.c1 AS REAL), (~ (vt0.c0)), CASE WHEN rt0.c0 THEN 0.5860904936582363 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)) AND ((vt0.c0 COLLATE NOCASE, ABS(NULL), rt0.c1 COLLATE BINARY))));
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0)) NOT BETWEEN (((((vt1.c0, vt0.c0, vt0.c0, NULL, vt1.c0))>=((vt0.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))))) AND ((((vt1.c0)IS(vt0.c0)))))) ORDER BY ((((vt0.c0)IS(vt0.c0))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((((vt1.c0, vt0.c0, vt0.c0, NULL, vt1.c0))>=((vt0.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))))) AND ((((vt1.c0)IS(vt0.c0)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0)IS(vt0.c0))) NOT NULL) ASC);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0)) NOT BETWEEN (((((vt1.c0, vt0.c0, vt0.c0, NULL, vt1.c0))>=((vt0.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))))) AND ((((vt1.c0)IS(vt0.c0)))))) ORDER BY ((((vt0.c0)IS(vt0.c0))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((((vt1.c0, vt0.c0, vt0.c0, NULL, vt1.c0))>=((vt0.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))))) AND ((((vt1.c0)IS(vt0.c0)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0)IS(vt0.c0))) NOT NULL) ASC);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0)) NOT BETWEEN (((((vt1.c0, vt0.c0, vt0.c0, NULL, vt1.c0))>=((vt0.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))))) AND ((((vt1.c0)IS(vt0.c0)))))) ORDER BY ((((vt0.c0)IS(vt0.c0))) NOT NULL) ASC;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((((vt1.c0)IS NOT(vt0.c0)))||(((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c0)))) LEFT OUTER JOIN vt1 ON (+ (((vt1.c0) NOTNULL))) WHERE ((CAST(rt0.c1 AS TEXT) IN ('-1703666896')));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c1 AS TEXT) IN ('-1703666896'))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((vt1.c0)IS NOT(vt0.c0)))||(((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c0)))) LEFT OUTER JOIN vt1 ON (+ (((vt1.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((((vt1.c0)IS NOT(vt0.c0)))||(((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c0)))) LEFT OUTER JOIN vt1 ON (+ (((vt1.c0) NOTNULL))) WHERE ((CAST(rt0.c1 AS TEXT) IN ('-1703666896')));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c1 AS TEXT) IN ('-1703666896'))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((vt1.c0)IS NOT(vt0.c0)))||(((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c0)))) LEFT OUTER JOIN vt1 ON (+ (((vt1.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((((vt1.c0)IS NOT(vt0.c0)))||(((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c0)))) LEFT OUTER JOIN vt1 ON (+ (((vt1.c0) NOTNULL))) WHERE ((CAST(rt0.c1 AS TEXT) IN ('-1703666896')));
SELECT * FROM vt1, rt0, rt1 WHERE (((((rt1.c1)OR(rt1.c3)))OR('1467740107')) COLLATE NOCASE) ORDER BY (((rt1.c2) NOT NULL) IN ())  NULLS LAST, ((CASE WHEN NULL THEN rt1.c2 WHEN vt1.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt1.c3 WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN rt0.c0 WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c1 END)*((~ (rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)OR(rt1.c3)))OR('1467740107')) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY (((rt1.c2) NOT NULL) IN ())  NULLS LAST, ((CASE WHEN NULL THEN rt1.c2 WHEN vt1.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt1.c3 WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN rt0.c0 WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c1 END)*((~ (rt1.c2)))) ASC);
SELECT * FROM vt1, rt0, rt1 WHERE (((((rt1.c1)OR(rt1.c3)))OR('1467740107')) COLLATE NOCASE) ORDER BY (((rt1.c2) NOT NULL) IN ())  NULLS LAST, ((CASE WHEN NULL THEN rt1.c2 WHEN vt1.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt1.c3 WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN rt0.c0 WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c1 END)*((~ (rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)OR(rt1.c3)))OR('1467740107')) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY (((rt1.c2) NOT NULL) IN ())  NULLS LAST, ((CASE WHEN NULL THEN rt1.c2 WHEN vt1.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt1.c3 WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN rt0.c0 WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c1 END)*((~ (rt1.c2)))) ASC);
SELECT * FROM vt1, rt0, rt1 WHERE (((((rt1.c1)OR(rt1.c3)))OR('1467740107')) COLLATE NOCASE) ORDER BY (((rt1.c2) NOT NULL) IN ())  NULLS LAST, ((CASE WHEN NULL THEN rt1.c2 WHEN vt1.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt1.c3 WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN rt0.c0 WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c1 END)*((~ (rt1.c2)))) ASC;
SELECT COUNT(*) FROM rt1 WHERE (((PRINTF(rt1.c0)) NOT BETWEEN (((((((((rt1.c4)OR(rt1.c0)))AND(rt1.c4)))OR(rt1.c1)))OR(rt1.c1))) AND (((rt1.c3) NOT NULL)))) ORDER BY (0x3c86db17 IN (rt1.c1, rt1.c2)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((PRINTF(rt1.c0)) NOT BETWEEN (((((((((rt1.c4)OR(rt1.c0)))AND(rt1.c4)))OR(rt1.c1)))OR(rt1.c1))) AND (((rt1.c3) NOT NULL)))) IS TRUE)  as count FROM rt1 ORDER BY (0x3c86db17 IN (rt1.c1, rt1.c2)) COLLATE BINARY DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((PRINTF(rt1.c0)) NOT BETWEEN (((((((((rt1.c4)OR(rt1.c0)))AND(rt1.c4)))OR(rt1.c1)))OR(rt1.c1))) AND (((rt1.c3) NOT NULL)))) ORDER BY (0x3c86db17 IN (rt1.c1, rt1.c2)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((PRINTF(rt1.c0)) NOT BETWEEN (((((((((rt1.c4)OR(rt1.c0)))AND(rt1.c4)))OR(rt1.c1)))OR(rt1.c1))) AND (((rt1.c3) NOT NULL)))) IS TRUE)  as count FROM rt1 ORDER BY (0x3c86db17 IN (rt1.c1, rt1.c2)) COLLATE BINARY DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((PRINTF(rt1.c0)) NOT BETWEEN (((((((((rt1.c4)OR(rt1.c0)))AND(rt1.c4)))OR(rt1.c1)))OR(rt1.c1))) AND (((rt1.c3) NOT NULL)))) ORDER BY (0x3c86db17 IN (rt1.c1, rt1.c2)) COLLATE BINARY DESC  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (((((CAST(vt1.c0 AS BLOB))OR(((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))))AND((- (vt0.c0))))) ORDER BY (vt0.c0 IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt1.c0 AS BLOB))OR(((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))))AND((- (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (vt0.c0 IN ()) ASC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (((((CAST(vt1.c0 AS BLOB))OR(((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))))AND((- (vt0.c0))))) ORDER BY (vt0.c0 IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt1.c0 AS BLOB))OR(((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))))AND((- (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (vt0.c0 IN ()) ASC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (((((CAST(vt1.c0 AS BLOB))OR(((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))))AND((- (vt0.c0))))) ORDER BY (vt0.c0 IN ()) ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt1 WHERE (((((0.025333660436253957) ISNULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((0.025333660436253957) ISNULL)) NOT NULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((((0.025333660436253957) ISNULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((0.025333660436253957) ISNULL)) NOT NULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((((0.025333660436253957) ISNULL)) NOT NULL));
SELECT ALL * FROM rt0 FULL OUTER JOIN rt1 ON ((CAST(rt1.c1 AS BLOB)) NOT NULL) CROSS JOIN vt0 ON (((- (vt1.c0)))GLOB((((rt1.c2)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) RIGHT OUTER JOIN vt1 ON rt0.c2 WHERE (((x'1cb7') BETWEEN (((rt0.c1)||(rt0.c0))) AND (((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0))))) ORDER BY CASE WHEN (((rt0.c0, vt1.c0, rt1.c2))<>((rt1.c2, rt1.c3, vt0.c0))) THEN vt0.c0 COLLATE BINARY ELSE (((NULL)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c4))) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'1cb7') BETWEEN (((rt0.c1)||(rt0.c0))) AND (((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON ((CAST(rt1.c1 AS BLOB)) NOT NULL) CROSS JOIN vt0 ON (((- (vt1.c0)))GLOB((((rt1.c2)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) RIGHT OUTER JOIN vt1 ON rt0.c2 ORDER BY CASE WHEN (((rt0.c0, vt1.c0, rt1.c2))<>((rt1.c2, rt1.c3, vt0.c0))) THEN vt0.c0 COLLATE BINARY ELSE (((NULL)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c4))) END DESC  NULLS FIRST);
SELECT ALL * FROM rt0 FULL OUTER JOIN rt1 ON ((CAST(rt1.c1 AS BLOB)) NOT NULL) CROSS JOIN vt0 ON (((- (vt1.c0)))GLOB((((rt1.c2)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) RIGHT OUTER JOIN vt1 ON rt0.c2 WHERE (((x'1cb7') BETWEEN (((rt0.c1)||(rt0.c0))) AND (((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0))))) ORDER BY CASE WHEN (((rt0.c0, vt1.c0, rt1.c2))<>((rt1.c2, rt1.c3, vt0.c0))) THEN vt0.c0 COLLATE BINARY ELSE (((NULL)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c4))) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'1cb7') BETWEEN (((rt0.c1)||(rt0.c0))) AND (((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON ((CAST(rt1.c1 AS BLOB)) NOT NULL) CROSS JOIN vt0 ON (((- (vt1.c0)))GLOB((((rt1.c2)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) RIGHT OUTER JOIN vt1 ON rt0.c2 ORDER BY CASE WHEN (((rt0.c0, vt1.c0, rt1.c2))<>((rt1.c2, rt1.c3, vt0.c0))) THEN vt0.c0 COLLATE BINARY ELSE (((NULL)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c4))) END DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (UNLIKELY(((rt1.c0)=(rt1.c0)))) ORDER BY LIKELY(((((rt1.c0)OR(rt1.c0)))OR(rt1.c0))) DESC  NULLS FIRST, (((rt1.c0 IN ())) NOT BETWEEN (((rt1.c1) IS TRUE)) AND (rt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((rt1.c0)=(rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY LIKELY(((((rt1.c0)OR(rt1.c0)))OR(rt1.c0))) DESC  NULLS FIRST, (((rt1.c0 IN ())) NOT BETWEEN (((rt1.c1) IS TRUE)) AND (rt1.c0))  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (UNLIKELY(((rt1.c0)=(rt1.c0)))) ORDER BY LIKELY(((((rt1.c0)OR(rt1.c0)))OR(rt1.c0))) DESC  NULLS FIRST, (((rt1.c0 IN ())) NOT BETWEEN (((rt1.c1) IS TRUE)) AND (rt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((rt1.c0)=(rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY LIKELY(((((rt1.c0)OR(rt1.c0)))OR(rt1.c0))) DESC  NULLS FIRST, (((rt1.c0 IN ())) NOT BETWEEN (((rt1.c1) IS TRUE)) AND (rt1.c0))  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (UNLIKELY(((rt1.c0)=(rt1.c0)))) ORDER BY LIKELY(((((rt1.c0)OR(rt1.c0)))OR(rt1.c0))) DESC  NULLS FIRST, (((rt1.c0 IN ())) NOT BETWEEN (((rt1.c1) IS TRUE)) AND (rt1.c0))  NULLS LAST;
SELECT ALL * FROM rt0, vt0, vt1, rt1 WHERE ((((NULL IN ()))<(vt0.c0 COLLATE NOCASE))) ORDER BY ((((rt1.c2) ISNULL)) NOTNULL) ASC, ((((vt1.c0) NOT NULL)) NOT BETWEEN ((NOT (rt1.c0))) AND (((0.4247938875567875) NOT NULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN ()))<(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0, vt1, rt1 ORDER BY ((((rt1.c2) ISNULL)) NOTNULL) ASC, ((((vt1.c0) NOT NULL)) NOT BETWEEN ((NOT (rt1.c0))) AND (((0.4247938875567875) NOT NULL))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt0, vt1, rt1 WHERE ((((NULL IN ()))<(vt0.c0 COLLATE NOCASE))) ORDER BY ((((rt1.c2) ISNULL)) NOTNULL) ASC, ((((vt1.c0) NOT NULL)) NOT BETWEEN ((NOT (rt1.c0))) AND (((0.4247938875567875) NOT NULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN ()))<(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0, vt1, rt1 ORDER BY ((((rt1.c2) ISNULL)) NOTNULL) ASC, ((((vt1.c0) NOT NULL)) NOT BETWEEN ((NOT (rt1.c0))) AND (((0.4247938875567875) NOT NULL))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt0, vt1, rt1 WHERE ((((NULL IN ()))<(vt0.c0 COLLATE NOCASE))) ORDER BY ((((rt1.c2) ISNULL)) NOTNULL) ASC, ((((vt1.c0) NOT NULL)) NOT BETWEEN ((NOT (rt1.c0))) AND (((0.4247938875567875) NOT NULL))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt1.c0 END)))AND((('忲gE(BFt')>>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt1.c0 END)))AND((('忲gE(BFt')>>(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt1.c0 END)))AND((('忲gE(BFt')>>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt1.c0 END)))AND((('忲gE(BFt')>>(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt1.c0 END)))AND((('忲gE(BFt')>>(vt1.c0)))));
SELECT COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c2)))|(NULL))) ORDER BY ((rt0.c0)&(rt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c2)))|(NULL))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0)&(rt0.c0)) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c2)))|(NULL))) ORDER BY ((rt0.c0)&(rt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c2)))|(NULL))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0)&(rt0.c0)) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c2)))|(NULL))) ORDER BY ((rt0.c0)&(rt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt1, rt0, vt0 WHERE (((NULL)+(rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((NULL)+(rt1.c1))) IS TRUE)  as count FROM rt1, vt1, rt0, vt0);
SELECT COUNT(*) FROM rt1, vt1, rt0, vt0 WHERE (((NULL)+(rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((NULL)+(rt1.c1))) IS TRUE)  as count FROM rt1, vt1, rt0, vt0);
SELECT COUNT(*) FROM rt1, vt1, rt0, vt0 WHERE (((NULL)+(rt1.c1)));
SELECT COUNT(*) FROM rt1, vt1 WHERE ((- (((rt1.c4)LIKE(vt1.c0))))) ORDER BY ((NULL)&(rt1.c4)) COLLATE BINARY ASC  NULLS FIRST, 0X70619c4e ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((rt1.c4)LIKE(vt1.c0))))) IS TRUE)  as count FROM rt1, vt1 ORDER BY ((NULL)&(rt1.c4)) COLLATE BINARY ASC  NULLS FIRST, 0X70619c4e ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt1 WHERE ((- (((rt1.c4)LIKE(vt1.c0))))) ORDER BY ((NULL)&(rt1.c4)) COLLATE BINARY ASC  NULLS FIRST, 0X70619c4e ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((rt1.c4)LIKE(vt1.c0))))) IS TRUE)  as count FROM rt1, vt1 ORDER BY ((NULL)&(rt1.c4)) COLLATE BINARY ASC  NULLS FIRST, 0X70619c4e ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt1, rt1, vt0 WHERE (((CAST(vt0.c0 AS REAL))<=(LAST_INSERT_ROWID())));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL))<=(LAST_INSERT_ROWID()))) IS TRUE)  as count FROM vt1, rt1, vt0);
SELECT ALL * FROM vt1, rt1, vt0 WHERE (((CAST(vt0.c0 AS REAL))<=(LAST_INSERT_ROWID())));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL))<=(LAST_INSERT_ROWID()))) IS TRUE)  as count FROM vt1, rt1, vt0);
SELECT ALL * FROM vt1, rt1, vt0 WHERE (((CAST(vt0.c0 AS REAL))<=(LAST_INSERT_ROWID())));
SELECT * FROM rt1, vt1, rt0 CROSS JOIN vt0 ON CASE WHEN highlight('-766962044', rt1.c3, rt0.c1, rt1.c3) THEN ((((rt1.c1)AND(rt1.c3)))AND(rt1.c4)) END WHERE (((LIKELIHOOD(rt0.c0, 0.1521105248303889)) NOT NULL)) ORDER BY (((((NOT (rt0.c2)))AND((rt1.c3 IN ()))))AND('516317190'));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(rt0.c0, 0.1521105248303889)) NOT NULL)) IS TRUE)  as count FROM rt1, vt1, rt0 CROSS JOIN vt0 ON CASE WHEN highlight('-766962044', rt1.c3, rt0.c1, rt1.c3) THEN ((((rt1.c1)AND(rt1.c3)))AND(rt1.c4)) END ORDER BY (((((NOT (rt0.c2)))AND((rt1.c3 IN ()))))AND('516317190')));
SELECT * FROM rt1, vt1, rt0 CROSS JOIN vt0 ON CASE WHEN highlight('-766962044', rt1.c3, rt0.c1, rt1.c3) THEN ((((rt1.c1)AND(rt1.c3)))AND(rt1.c4)) END WHERE (((LIKELIHOOD(rt0.c0, 0.1521105248303889)) NOT NULL)) ORDER BY (((((NOT (rt0.c2)))AND((rt1.c3 IN ()))))AND('516317190'));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(rt0.c0, 0.1521105248303889)) NOT NULL)) IS TRUE)  as count FROM rt1, vt1, rt0 CROSS JOIN vt0 ON CASE WHEN highlight('-766962044', rt1.c3, rt0.c1, rt1.c3) THEN ((((rt1.c1)AND(rt1.c3)))AND(rt1.c4)) END ORDER BY (((((NOT (rt0.c2)))AND((rt1.c3 IN ()))))AND('516317190')));
SELECT ALL * FROM vt0, rt0, vt1, rt1 WHERE (((((rt1.c0) IS TRUE))*((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) IS TRUE))*((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0, vt1, rt1);
SELECT ALL * FROM vt0, rt0, vt1, rt1 WHERE (((((rt1.c0) IS TRUE))*((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) IS TRUE))*((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0, vt1, rt1);
SELECT ALL * FROM vt0, rt0, vt1, rt1 WHERE (((((rt1.c0) IS TRUE))*((vt0.c0 IN ()))));
SELECT * FROM rt0, vt0 RIGHT OUTER JOIN rt1 ON 0.8479134920869313 INNER JOIN vt1 ON (((rt1.c0)>=(0.305485889413475)) IN (CASE WHEN rt1.c3 THEN rt0.c2 ELSE vt1.c0 END, (- (rt1.c0)))) WHERE (((((rt0.c1)>=(rt1.c1))) BETWEEN (1.879415583E9) AND (((rt1.c3)IS NOT(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)>=(rt1.c1))) BETWEEN (1.879415583E9) AND (((rt1.c3)IS NOT(vt1.c0))))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN rt1 ON 0.8479134920869313 INNER JOIN vt1 ON (((rt1.c0)>=(0.305485889413475)) IN (CASE WHEN rt1.c3 THEN rt0.c2 ELSE vt1.c0 END, (- (rt1.c0)))));
SELECT * FROM rt0, vt0 RIGHT OUTER JOIN rt1 ON 0.8479134920869313 INNER JOIN vt1 ON (((rt1.c0)>=(0.305485889413475)) IN (CASE WHEN rt1.c3 THEN rt0.c2 ELSE vt1.c0 END, (- (rt1.c0)))) WHERE (((((rt0.c1)>=(rt1.c1))) BETWEEN (1.879415583E9) AND (((rt1.c3)IS NOT(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)>=(rt1.c1))) BETWEEN (1.879415583E9) AND (((rt1.c3)IS NOT(vt1.c0))))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN rt1 ON 0.8479134920869313 INNER JOIN vt1 ON (((rt1.c0)>=(0.305485889413475)) IN (CASE WHEN rt1.c3 THEN rt0.c2 ELSE vt1.c0 END, (- (rt1.c0)))));
SELECT * FROM rt0, vt0 RIGHT OUTER JOIN rt1 ON 0.8479134920869313 INNER JOIN vt1 ON (((rt1.c0)>=(0.305485889413475)) IN (CASE WHEN rt1.c3 THEN rt0.c2 ELSE vt1.c0 END, (- (rt1.c0)))) WHERE (((((rt0.c1)>=(rt1.c1))) BETWEEN (1.879415583E9) AND (((rt1.c3)IS NOT(vt1.c0)))));
SELECT * FROM rt1 WHERE (CASE WHEN (+ (rt1.c4)) THEN ((rt1.c4) NOT BETWEEN (rt1.c0) AND (rt1.c2)) WHEN rt1.c1 COLLATE NOCASE THEN rt1.c2 WHEN rt1.c1 THEN CAST(rt1.c1 AS TEXT) ELSE (((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1))) END) ORDER BY 0Xffffffffb819a28c COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (rt1.c4)) THEN ((rt1.c4) NOT BETWEEN (rt1.c0) AND (rt1.c2)) WHEN rt1.c1 COLLATE NOCASE THEN rt1.c2 WHEN rt1.c1 THEN CAST(rt1.c1 AS TEXT) ELSE (((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1))) END) IS TRUE)  as count FROM rt1 ORDER BY 0xffffffffb819a28c COLLATE BINARY ASC);
SELECT * FROM rt1 WHERE (CASE WHEN (+ (rt1.c4)) THEN ((rt1.c4) NOT BETWEEN (rt1.c0) AND (rt1.c2)) WHEN rt1.c1 COLLATE NOCASE THEN rt1.c2 WHEN rt1.c1 THEN CAST(rt1.c1 AS TEXT) ELSE (((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1))) END) ORDER BY 0Xffffffffb819a28c COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (rt1.c4)) THEN ((rt1.c4) NOT BETWEEN (rt1.c0) AND (rt1.c2)) WHEN rt1.c1 COLLATE NOCASE THEN rt1.c2 WHEN rt1.c1 THEN CAST(rt1.c1 AS TEXT) ELSE (((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1))) END) IS TRUE)  as count FROM rt1 ORDER BY 0xffffffffb819a28c COLLATE BINARY ASC);
SELECT * FROM rt1 WHERE (CASE WHEN (+ (rt1.c4)) THEN ((rt1.c4) NOT BETWEEN (rt1.c0) AND (rt1.c2)) WHEN rt1.c1 COLLATE NOCASE THEN rt1.c2 WHEN rt1.c1 THEN CAST(rt1.c1 AS TEXT) ELSE (((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1))) END) ORDER BY 0Xffffffffb819a28c COLLATE BINARY ASC;
SELECT ALL * FROM vt1, rt1, vt0 WHERE ((~ (((rt1.c4) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((~ (((rt1.c4) NOTNULL)))) IS TRUE)  as count FROM vt1, rt1, vt0);
SELECT ALL * FROM vt1, rt1, vt0 WHERE ((~ (((rt1.c4) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((~ (((rt1.c4) NOTNULL)))) IS TRUE)  as count FROM vt1, rt1, vt0);
SELECT ALL * FROM vt1, rt1, vt0 WHERE ((~ (((rt1.c4) NOTNULL))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (1.015470871E9) ORDER BY ((NULL)<>(((((rt0.c0)AND(rt0.c1)))AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((1.015470871E9) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((NULL)<>(((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (1.015470871E9) ORDER BY ((NULL)<>(((((rt0.c0)AND(rt0.c1)))AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((1.015470871E9) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((NULL)<>(((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (1.015470871E9) ORDER BY ((NULL)<>(((((rt0.c0)AND(rt0.c1)))AND(rt0.c0))));
SELECT * FROM rt1, vt0 CROSS JOIN rt0 ON ((UNLIKELY(DISTINCT rt1.c3))>>(rt1.c4)) LEFT OUTER JOIN vt1 ON ((CASE WHEN vt1.c0 THEN rt1.c3 END) BETWEEN ((rt1.c3 IN (rt0.c2, rt0.c0))) AND (CASE rt0.c0  WHEN x'29dc' THEN rt1.c0 ELSE vt1.c0 END)) WHERE ((~ (CAST(rt1.c4 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt1.c4 AS TEXT)))) IS TRUE)  as count FROM rt1, vt0 CROSS JOIN rt0 ON ((UNLIKELY(DISTINCT rt1.c3))>>(rt1.c4)) LEFT OUTER JOIN vt1 ON ((CASE WHEN vt1.c0 THEN rt1.c3 END) BETWEEN ((rt1.c3 IN (rt0.c2, rt0.c0))) AND (CASE rt0.c0  WHEN x'29dc' THEN rt1.c0 ELSE vt1.c0 END)));
SELECT * FROM rt1, vt0 CROSS JOIN rt0 ON ((UNLIKELY(DISTINCT rt1.c3))>>(rt1.c4)) LEFT OUTER JOIN vt1 ON ((CASE WHEN vt1.c0 THEN rt1.c3 END) BETWEEN ((rt1.c3 IN (rt0.c2, rt0.c0))) AND (CASE rt0.c0  WHEN x'29dc' THEN rt1.c0 ELSE vt1.c0 END)) WHERE ((~ (CAST(rt1.c4 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt1.c4 AS TEXT)))) IS TRUE)  as count FROM rt1, vt0 CROSS JOIN rt0 ON ((UNLIKELY(DISTINCT rt1.c3))>>(rt1.c4)) LEFT OUTER JOIN vt1 ON ((CASE WHEN vt1.c0 THEN rt1.c3 END) BETWEEN ((rt1.c3 IN (rt0.c2, rt0.c0))) AND (CASE rt0.c0  WHEN x'29dc' THEN rt1.c0 ELSE vt1.c0 END)));
SELECT * FROM rt1, vt0 CROSS JOIN rt0 ON ((UNLIKELY(DISTINCT rt1.c3))>>(rt1.c4)) LEFT OUTER JOIN vt1 ON ((CASE WHEN vt1.c0 THEN rt1.c3 END) BETWEEN ((rt1.c3 IN (rt0.c2, rt0.c0))) AND (CASE rt0.c0  WHEN x'29dc' THEN rt1.c0 ELSE vt1.c0 END)) WHERE ((~ (CAST(rt1.c4 AS TEXT))));
SELECT ALL * FROM rt1 WHERE ((((((rt1.c0, rt1.c2, rt1.c0))<((rt1.c3, rt1.c2, rt1.c3))))|(((rt1.c3)%(rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0, rt1.c2, rt1.c0))<((rt1.c3, rt1.c2, rt1.c3))))|(((rt1.c3)%(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c0, rt1.c2, rt1.c0))<((rt1.c3, rt1.c2, rt1.c3))))|(((rt1.c3)%(rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0, rt1.c2, rt1.c0))<((rt1.c3, rt1.c2, rt1.c3))))|(((rt1.c3)%(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c0, rt1.c2, rt1.c0))<((rt1.c3, rt1.c2, rt1.c3))))|(((rt1.c3)%(rt1.c1)))));
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((((rt0.c2))>((rt0.c1)))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))>((rt0.c1)))) NOT NULL)) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((((rt0.c2))>((rt0.c1)))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))>((rt0.c1)))) NOT NULL)) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((((rt0.c2))>((rt0.c1)))) NOT NULL));
SELECT ALL * FROM vt0, vt1, rt0, rt1 WHERE (CAST(CAST(rt1.c1 AS BLOB) AS TEXT)) ORDER BY json_array(((rt1.c3)-(vt1.c0)), LIKELIHOOD(rt1.c2, 0.9306524151490294));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c1 AS BLOB) AS TEXT)) IS TRUE)  as count FROM vt0, vt1, rt0, rt1 ORDER BY json_array(((rt1.c3)-(vt1.c0)), LIKELIHOOD(rt1.c2, 0.9306524151490294)));
SELECT ALL * FROM vt0, vt1, rt0, rt1 WHERE (CAST(CAST(rt1.c1 AS BLOB) AS TEXT)) ORDER BY json_array(((rt1.c3)-(vt1.c0)), LIKELIHOOD(rt1.c2, 0.9306524151490294));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c1 AS BLOB) AS TEXT)) IS TRUE)  as count FROM vt0, vt1, rt0, rt1 ORDER BY json_array(((rt1.c3)-(vt1.c0)), LIKELIHOOD(rt1.c2, 0.9306524151490294)));
SELECT ALL * FROM vt0, vt1, rt0, rt1 WHERE (CAST(CAST(rt1.c1 AS BLOB) AS TEXT)) ORDER BY json_array(((rt1.c3)-(vt1.c0)), LIKELIHOOD(rt1.c2, 0.9306524151490294));
SELECT ALL * FROM vt1, rt1 INNER JOIN rt0 ON (((((387093936, rt1.c0, x''))>((0x7eeb484b, rt0.c1, x'5e39'))))*(vt1.c0 COLLATE NOCASE)) WHERE (CAST((+ (rt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt0.c2)) AS BLOB)) IS TRUE)  as count FROM vt1, rt1 INNER JOIN rt0 ON (((((387093936, rt1.c0, x''))>((0X7eeb484b, rt0.c1, x'5e39'))))*(vt1.c0 COLLATE NOCASE)));
SELECT ALL * FROM vt1, rt1 INNER JOIN rt0 ON (((((387093936, rt1.c0, x''))>((0x7eeb484b, rt0.c1, x'5e39'))))*(vt1.c0 COLLATE NOCASE)) WHERE (CAST((+ (rt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt0.c2)) AS BLOB)) IS TRUE)  as count FROM vt1, rt1 INNER JOIN rt0 ON (((((387093936, rt1.c0, x''))>((0X7eeb484b, rt0.c1, x'5e39'))))*(vt1.c0 COLLATE NOCASE)));
SELECT ALL * FROM vt1, rt1 INNER JOIN rt0 ON (((((387093936, rt1.c0, x''))>((0x7eeb484b, rt0.c1, x'5e39'))))*(vt1.c0 COLLATE NOCASE)) WHERE (CAST((+ (rt0.c2)) AS BLOB));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)<<(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)<<(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)<<(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)<<(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)<<(rt0.c2)) IN ()));
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((LIKELY(vt0.c0))|((+ (rt0.c0))))) ORDER BY TYPEOF('xb');
SELECT SUM(count) FROM (SELECT ((((LIKELY(vt0.c0))|((+ (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY TYPEOF('xb'));
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((LIKELY(vt0.c0))|((+ (rt0.c0))))) ORDER BY TYPEOF('xb');
SELECT SUM(count) FROM (SELECT ((((LIKELY(vt0.c0))|((+ (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY TYPEOF('xb'));
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((LIKELY(vt0.c0))|((+ (rt0.c0))))) ORDER BY TYPEOF('xb');
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))OR(LOWER(DISTINCT vt1.c0))))AND((- (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))OR(LOWER(DISTINCT vt1.c0))))AND((- (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))OR(LOWER(DISTINCT vt1.c0))))AND((- (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))OR(LOWER(DISTINCT vt1.c0))))AND((- (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))OR(LOWER(DISTINCT vt1.c0))))AND((- (vt1.c0)))));
SELECT ALL * FROM rt1 WHERE ((- (0.14965841612777053)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((- (0.14965841612777053)) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((- (0.14965841612777053)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((- (0.14965841612777053)) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((- (0.14965841612777053)) COLLATE BINARY);
SELECT ALL * FROM rt0, vt0, rt1 WHERE (CASE rt1.c0 COLLATE NOCASE  WHEN rt1.c2 COLLATE BINARY THEN (rt1.c1 IN ()) ELSE IFNULL(DISTINCT vt0.c0, rt1.c4) END) ORDER BY CASE CAST(rt0.c0 AS REAL)  WHEN rt0.c2 THEN rt0.c1 END DESC;
SELECT SUM(count) FROM (SELECT ((CASE rt1.c0 COLLATE NOCASE  WHEN rt1.c2 COLLATE BINARY THEN (rt1.c1 IN ()) ELSE IFNULL(DISTINCT vt0.c0, rt1.c4) END) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY CASE CAST(rt0.c0 AS REAL)  WHEN rt0.c2 THEN rt0.c1 END DESC);
SELECT ALL * FROM rt0, vt0, rt1 WHERE (CASE rt1.c0 COLLATE NOCASE  WHEN rt1.c2 COLLATE BINARY THEN (rt1.c1 IN ()) ELSE IFNULL(DISTINCT vt0.c0, rt1.c4) END) ORDER BY CASE CAST(rt0.c0 AS REAL)  WHEN rt0.c2 THEN rt0.c1 END DESC;
SELECT SUM(count) FROM (SELECT ((CASE rt1.c0 COLLATE NOCASE  WHEN rt1.c2 COLLATE BINARY THEN (rt1.c1 IN ()) ELSE IFNULL(DISTINCT vt0.c0, rt1.c4) END) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY CASE CAST(rt0.c0 AS REAL)  WHEN rt0.c2 THEN rt0.c1 END DESC);
SELECT ALL * FROM rt0, vt0, rt1 WHERE (CASE rt1.c0 COLLATE NOCASE  WHEN rt1.c2 COLLATE BINARY THEN (rt1.c1 IN ()) ELSE IFNULL(DISTINCT vt0.c0, rt1.c4) END) ORDER BY CASE CAST(rt0.c0 AS REAL)  WHEN rt0.c2 THEN rt0.c1 END DESC;
SELECT ALL * FROM rt0, vt1 WHERE ((((rt0.c0)IS(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)IS(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((((rt0.c0)IS(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)IS(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((((rt0.c0)IS(rt0.c0)) IN ()));
SELECT COUNT(*) FROM rt1, vt0, rt0, vt1 WHERE (NULL) ORDER BY CAST(((rt1.c1) BETWEEN (rt1.c0) AND ('873238953')) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, vt0, rt0, vt1 ORDER BY CAST(((rt1.c1) BETWEEN (rt1.c0) AND ('873238953')) AS BLOB) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0, rt0, vt1 WHERE (NULL) ORDER BY CAST(((rt1.c1) BETWEEN (rt1.c0) AND ('873238953')) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, vt0, rt0, vt1 ORDER BY CAST(((rt1.c1) BETWEEN (rt1.c0) AND ('873238953')) AS BLOB) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0, rt0, vt1 WHERE (NULL) ORDER BY CAST(((rt1.c1) BETWEEN (rt1.c0) AND ('873238953')) AS BLOB) ASC  NULLS FIRST;
SELECT * FROM vt1, rt1, rt0 INNER JOIN vt0 ON ABS(DISTINCT rt1.c3) COLLATE RTRIM WHERE (CAST(CASE rt1.c3  WHEN rt1.c2 THEN rt1.c4 WHEN vt1.c0 THEN rt0.c0 WHEN rt1.c3 THEN rt0.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt1.c3  WHEN rt1.c2 THEN rt1.c4 WHEN vt1.c0 THEN rt0.c0 WHEN rt1.c3 THEN rt0.c0 END AS REAL)) IS TRUE)  as count FROM vt1, rt1, rt0 INNER JOIN vt0 ON ABS(DISTINCT rt1.c3) COLLATE RTRIM);
SELECT * FROM vt1, rt1, rt0 INNER JOIN vt0 ON ABS(DISTINCT rt1.c3) COLLATE RTRIM WHERE (CAST(CASE rt1.c3  WHEN rt1.c2 THEN rt1.c4 WHEN vt1.c0 THEN rt0.c0 WHEN rt1.c3 THEN rt0.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt1.c3  WHEN rt1.c2 THEN rt1.c4 WHEN vt1.c0 THEN rt0.c0 WHEN rt1.c3 THEN rt0.c0 END AS REAL)) IS TRUE)  as count FROM vt1, rt1, rt0 INNER JOIN vt0 ON ABS(DISTINCT rt1.c3) COLLATE RTRIM);
SELECT * FROM vt1, rt1, rt0 INNER JOIN vt0 ON ABS(DISTINCT rt1.c3) COLLATE RTRIM WHERE (CAST(CASE rt1.c3  WHEN rt1.c2 THEN rt1.c4 WHEN vt1.c0 THEN rt0.c0 WHEN rt1.c3 THEN rt0.c0 END AS REAL));
SELECT * FROM rt0, rt1 WHERE (((((rt1.c1)%(rt0.c1)))||(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)%(rt0.c1)))||(NULL))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (((((rt1.c1)%(rt0.c1)))||(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)%(rt0.c1)))||(NULL))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (((((rt1.c1)%(rt0.c1)))||(NULL)));
SELECT ALL COUNT(*) FROM vt0, rt1, vt1, rt0 WHERE ((1689953084 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((1689953084 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, rt1, vt1, rt0 WHERE ((1689953084 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((1689953084 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, rt1, vt1, rt0 WHERE ((1689953084 IN ()) COLLATE BINARY);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (((rt0.c2) IS FALSE)) ORDER BY rt0.c1 DESC, LOWER(DISTINCT x'47a6');
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS FALSE)) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY rt0.c1 DESC, LOWER(DISTINCT x'47a6'));
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (((rt0.c2) IS FALSE)) ORDER BY rt0.c1 DESC, LOWER(DISTINCT x'47a6');
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS FALSE)) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY rt0.c1 DESC, LOWER(DISTINCT x'47a6'));
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (((rt0.c2) IS FALSE)) ORDER BY rt0.c1 DESC, LOWER(DISTINCT x'47a6');
SELECT * FROM rt0, rt1 WHERE (((rt1.c3)LIKE(rt1.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt1.c3)LIKE(rt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (((rt1.c3)LIKE(rt1.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt1.c3)LIKE(rt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (((rt1.c3)LIKE(rt1.c1)) COLLATE NOCASE);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (CASE WHEN (vt1.c0 IN ()) THEN ((vt0.c0)<<(rt0.c0)) ELSE '' END) ORDER BY ((((vt1.c0)+(vt1.c0))) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt1.c0 IN ()) THEN ((vt0.c0)<<(rt0.c0)) ELSE '' END) IS TRUE)  as count FROM vt1 NOT INDEXED, vt0, rt0 ORDER BY ((((vt1.c0)+(vt1.c0))) NOT NULL) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (CASE WHEN (vt1.c0 IN ()) THEN ((vt0.c0)<<(rt0.c0)) ELSE '' END) ORDER BY ((((vt1.c0)+(vt1.c0))) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt1.c0 IN ()) THEN ((vt0.c0)<<(rt0.c0)) ELSE '' END) IS TRUE)  as count FROM vt1 NOT INDEXED, vt0, rt0 ORDER BY ((((vt1.c0)+(vt1.c0))) NOT NULL) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (CASE WHEN (vt1.c0 IN ()) THEN ((vt0.c0)<<(rt0.c0)) ELSE '' END) ORDER BY ((((vt1.c0)+(vt1.c0))) NOT NULL) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, rt1, vt1 WHERE (((((((((NULL COLLATE NOCASE)AND(CASE vt1.c0  WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c0 THEN vt1.c0 WHEN rt1.c2 THEN rt1.c4 END)))AND(rt1.c2)))AND((((rt1.c1, rt1.c0, vt1.c0))==((rt1.c2, '774050009', rt1.c3))))))OR(CASE WHEN rt1.c1 THEN NULL END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULL COLLATE NOCASE)AND(CASE vt1.c0  WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c0 THEN vt1.c0 WHEN rt1.c2 THEN rt1.c4 END)))AND(rt1.c2)))AND((((rt1.c1, rt1.c0, vt1.c0))==((rt1.c2, '774050009', rt1.c3))))))OR(CASE WHEN rt1.c1 THEN NULL END))) IS TRUE)  as count FROM vt0, rt1, vt1);
SELECT ALL * FROM vt0, rt1, vt1 WHERE (((((((((NULL COLLATE NOCASE)AND(CASE vt1.c0  WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c0 THEN vt1.c0 WHEN rt1.c2 THEN rt1.c4 END)))AND(rt1.c2)))AND((((rt1.c1, rt1.c0, vt1.c0))==((rt1.c2, '774050009', rt1.c3))))))OR(CASE WHEN rt1.c1 THEN NULL END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULL COLLATE NOCASE)AND(CASE vt1.c0  WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c0 THEN vt1.c0 WHEN rt1.c2 THEN rt1.c4 END)))AND(rt1.c2)))AND((((rt1.c1, rt1.c0, vt1.c0))==((rt1.c2, '774050009', rt1.c3))))))OR(CASE WHEN rt1.c1 THEN NULL END))) IS TRUE)  as count FROM vt0, rt1, vt1);
SELECT ALL * FROM vt0, rt1, vt1 WHERE (((((((((NULL COLLATE NOCASE)AND(CASE vt1.c0  WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c0 THEN vt1.c0 WHEN rt1.c2 THEN rt1.c4 END)))AND(rt1.c2)))AND((((rt1.c1, rt1.c0, vt1.c0))==((rt1.c2, '774050009', rt1.c3))))))OR(CASE WHEN rt1.c1 THEN NULL END)));
SELECT * FROM vt1 WHERE (CAST(vt1.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(vt1.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(vt1.c0 AS INTEGER));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((((rt0.c1) IS TRUE))OR(((rt1.c0)<=(rt1.c0)))))OR(rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) IS TRUE))OR(((rt1.c0)<=(rt1.c0)))))OR(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((((rt0.c1) IS TRUE))OR(((rt1.c0)<=(rt1.c0)))))OR(rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) IS TRUE))OR(((rt1.c0)<=(rt1.c0)))))OR(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((((rt0.c1) IS TRUE))OR(((rt1.c0)<=(rt1.c0)))))OR(rt0.c1 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0, rt1, rt0, vt1 WHERE (CASE WHEN ((rt1.c2)>(rt1.c4)) THEN NULL ELSE ((rt1.c4)IS NOT(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c2)>(rt1.c4)) THEN NULL ELSE ((rt1.c4)IS NOT(vt0.c0)) END) IS TRUE)  as count FROM vt0, rt1, rt0, vt1);
SELECT COUNT(*) FROM vt0, rt1, rt0, vt1 WHERE (CASE WHEN ((rt1.c2)>(rt1.c4)) THEN NULL ELSE ((rt1.c4)IS NOT(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c2)>(rt1.c4)) THEN NULL ELSE ((rt1.c4)IS NOT(vt0.c0)) END) IS TRUE)  as count FROM vt0, rt1, rt0, vt1);
SELECT COUNT(*) FROM vt0, rt1, rt0, vt1 WHERE (CASE WHEN ((rt1.c2)>(rt1.c4)) THEN NULL ELSE ((rt1.c4)IS NOT(vt0.c0)) END);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON json_quote(LOWER(DISTINCT rt0.c1)) FULL OUTER JOIN vt0 ON (((rt0.c1, rt1.c1, rt1.c2, rt0.c1, rt1.c4)) NOT BETWEEN ((rt0.c0, rt0.c0, 0xffffffffa6e76f6d, rt1.c0, rt1.c0)) AND ((NULL, rt1.c1, NULL, rt0.c0, rt1.c1))) COLLATE RTRIM WHERE (IFNULL(DISTINCT ((rt0.c2) BETWEEN (rt1.c2) AND (rt0.c2)), ((rt1.c3)IS NOT(x'')))) ORDER BY ((LIKE(rt0.c1, rt0.c2, 'Y')) BETWEEN ((((rt0.c0, rt1.c2, rt0.c2))<=((rt1.c3, rt1.c0, rt0.c2)))) AND (rt1.c4 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT ((rt0.c2) BETWEEN (rt1.c2) AND (rt0.c2)), ((rt1.c3)IS NOT(x'')))) IS TRUE)  as count FROM rt0 NOT INDEXED FULL OUTER JOIN rt1 ON json_quote(LOWER(DISTINCT rt0.c1)) FULL OUTER JOIN vt0 ON (((rt0.c1, rt1.c1, rt1.c2, rt0.c1, rt1.c4)) NOT BETWEEN ((rt0.c0, rt0.c0, 0xffffffffa6e76f6d, rt1.c0, rt1.c0)) AND ((NULL, rt1.c1, NULL, rt0.c0, rt1.c1))) COLLATE RTRIM ORDER BY ((LIKE(rt0.c1, rt0.c2, 'Y')) BETWEEN ((((rt0.c0, rt1.c2, rt0.c2))<=((rt1.c3, rt1.c0, rt0.c2)))) AND (rt1.c4 COLLATE BINARY))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON json_quote(LOWER(DISTINCT rt0.c1)) FULL OUTER JOIN vt0 ON (((rt0.c1, rt1.c1, rt1.c2, rt0.c1, rt1.c4)) NOT BETWEEN ((rt0.c0, rt0.c0, 0xffffffffa6e76f6d, rt1.c0, rt1.c0)) AND ((NULL, rt1.c1, NULL, rt0.c0, rt1.c1))) COLLATE RTRIM WHERE (IFNULL(DISTINCT ((rt0.c2) BETWEEN (rt1.c2) AND (rt0.c2)), ((rt1.c3)IS NOT(x'')))) ORDER BY ((LIKE(rt0.c1, rt0.c2, 'Y')) BETWEEN ((((rt0.c0, rt1.c2, rt0.c2))<=((rt1.c3, rt1.c0, rt0.c2)))) AND (rt1.c4 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT ((rt0.c2) BETWEEN (rt1.c2) AND (rt0.c2)), ((rt1.c3)IS NOT(x'')))) IS TRUE)  as count FROM rt0 NOT INDEXED FULL OUTER JOIN rt1 ON json_quote(LOWER(DISTINCT rt0.c1)) FULL OUTER JOIN vt0 ON (((rt0.c1, rt1.c1, rt1.c2, rt0.c1, rt1.c4)) NOT BETWEEN ((rt0.c0, rt0.c0, 0xffffffffa6e76f6d, rt1.c0, rt1.c0)) AND ((NULL, rt1.c1, NULL, rt0.c0, rt1.c1))) COLLATE RTRIM ORDER BY ((LIKE(rt0.c1, rt0.c2, 'Y')) BETWEEN ((((rt0.c0, rt1.c2, rt0.c2))<=((rt1.c3, rt1.c0, rt0.c2)))) AND (rt1.c4 COLLATE BINARY))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON json_quote(LOWER(DISTINCT rt0.c1)) FULL OUTER JOIN vt0 ON (((rt0.c1, rt1.c1, rt1.c2, rt0.c1, rt1.c4)) NOT BETWEEN ((rt0.c0, rt0.c0, 0xffffffffa6e76f6d, rt1.c0, rt1.c0)) AND ((NULL, rt1.c1, NULL, rt0.c0, rt1.c1))) COLLATE RTRIM WHERE (IFNULL(DISTINCT ((rt0.c2) BETWEEN (rt1.c2) AND (rt0.c2)), ((rt1.c3)IS NOT(x'')))) ORDER BY ((LIKE(rt0.c1, rt0.c2, 'Y')) BETWEEN ((((rt0.c0, rt1.c2, rt0.c2))<=((rt1.c3, rt1.c0, rt0.c2)))) AND (rt1.c4 COLLATE BINARY))  NULLS LAST;
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON CASE CASE vt1.c0  WHEN vt1.c0 THEN x'' ELSE vt0.c0 END  WHEN CAST(vt0.c0 AS REAL) THEN ((vt1.c0) ISNULL) ELSE SQLITE_VERSION() END WHERE (x'fcb0');
SELECT SUM(count) FROM (SELECT ((x'fcb0') IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CASE CASE vt1.c0  WHEN vt1.c0 THEN x'' ELSE vt0.c0 END  WHEN CAST(vt0.c0 AS REAL) THEN ((vt1.c0) ISNULL) ELSE SQLITE_VERSION() END);
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON CASE CASE vt1.c0  WHEN vt1.c0 THEN x'' ELSE vt0.c0 END  WHEN CAST(vt0.c0 AS REAL) THEN ((vt1.c0) ISNULL) ELSE SQLITE_VERSION() END WHERE (x'fcb0');
SELECT SUM(count) FROM (SELECT ((x'fcb0') IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CASE CASE vt1.c0  WHEN vt1.c0 THEN x'' ELSE vt0.c0 END  WHEN CAST(vt0.c0 AS REAL) THEN ((vt1.c0) ISNULL) ELSE SQLITE_VERSION() END);
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON CASE CASE vt1.c0  WHEN vt1.c0 THEN x'' ELSE vt0.c0 END  WHEN CAST(vt0.c0 AS REAL) THEN ((vt1.c0) ISNULL) ELSE SQLITE_VERSION() END WHERE (x'fcb0');
SELECT COUNT(*) FROM vt0, vt1, rt0, rt1 WHERE ((((((rt1.c0)IS(rt1.c4))))>=(((rt1.c4 IN (rt1.c0, rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)IS(rt1.c4))))>=(((rt1.c4 IN (rt1.c0, rt0.c0)))))) IS TRUE)  as count FROM vt0, vt1, rt0, rt1);
SELECT COUNT(*) FROM vt0, vt1, rt0, rt1 WHERE ((((((rt1.c0)IS(rt1.c4))))>=(((rt1.c4 IN (rt1.c0, rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)IS(rt1.c4))))>=(((rt1.c4 IN (rt1.c0, rt0.c0)))))) IS TRUE)  as count FROM vt0, vt1, rt0, rt1);
SELECT COUNT(*) FROM vt0, vt1, rt0, rt1 WHERE ((((((rt1.c0)IS(rt1.c4))))>=(((rt1.c4 IN (rt1.c0, rt0.c0))))));
SELECT ALL * FROM rt1 INNER JOIN rt0 ON rt1.c1 INNER JOIN vt0 ON vt0.c0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON rt1.c1 INNER JOIN vt0 ON vt0.c0);
SELECT ALL * FROM rt1 INNER JOIN rt0 ON rt1.c1 INNER JOIN vt0 ON vt0.c0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON rt1.c1 INNER JOIN vt0 ON vt0.c0);
SELECT ALL * FROM rt1 INNER JOIN rt0 ON rt1.c1 INNER JOIN vt0 ON vt0.c0 WHERE (rt1.c2);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(LIKE(vt0.c0, vt0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKE(vt0.c0, vt0.c0) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(LIKE(vt0.c0, vt0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKE(vt0.c0, vt0.c0) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(LIKE(vt0.c0, vt0.c0) AS TEXT));
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0) ORDER BY ((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR(LIKELY(vt0.c0))))AND(vt0.c0 COLLATE BINARY)))OR(((vt0.c0) NOT NULL))))OR(((vt0.c0)/(vt1.c0)))) ASC  NULLS LAST, (((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt1.c0) NOT NULL), CAST(vt1.c0 AS INTEGER), ((0.8278143370866831) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((vt1.c0, TRIM(DISTINCT vt1.c0, vt1.c0), ((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR(LIKELY(vt0.c0))))AND(vt0.c0 COLLATE BINARY)))OR(((vt0.c0) NOT NULL))))OR(((vt0.c0)/(vt1.c0)))) ASC  NULLS LAST, (((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt1.c0) NOT NULL), CAST(vt1.c0 AS INTEGER), ((0.8278143370866831) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((vt1.c0, TRIM(DISTINCT vt1.c0, vt1.c0), ((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0))))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0) ORDER BY ((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR(LIKELY(vt0.c0))))AND(vt0.c0 COLLATE BINARY)))OR(((vt0.c0) NOT NULL))))OR(((vt0.c0)/(vt1.c0)))) ASC  NULLS LAST, (((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt1.c0) NOT NULL), CAST(vt1.c0 AS INTEGER), ((0.8278143370866831) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((vt1.c0, TRIM(DISTINCT vt1.c0, vt1.c0), ((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR(LIKELY(vt0.c0))))AND(vt0.c0 COLLATE BINARY)))OR(((vt0.c0) NOT NULL))))OR(((vt0.c0)/(vt1.c0)))) ASC  NULLS LAST, (((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt1.c0) NOT NULL), CAST(vt1.c0 AS INTEGER), ((0.8278143370866831) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((vt1.c0, TRIM(DISTINCT vt1.c0, vt1.c0), ((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0))))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0) ORDER BY ((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR(LIKELY(vt0.c0))))AND(vt0.c0 COLLATE BINARY)))OR(((vt0.c0) NOT NULL))))OR(((vt0.c0)/(vt1.c0)))) ASC  NULLS LAST, (((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt1.c0) NOT NULL), CAST(vt1.c0 AS INTEGER), ((0.8278143370866831) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((vt1.c0, TRIM(DISTINCT vt1.c0, vt1.c0), ((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0))))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0, vt1, rt1 WHERE (((((x'581e')AND(((((rt1.c3)OR(rt1.c1)))AND(rt1.c4)))))AND(((0.898557056286584)||(rt1.c4))))) ORDER BY ((rt0.c1 COLLATE RTRIM) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'581e')AND(((((rt1.c3)OR(rt1.c1)))AND(rt1.c4)))))AND(((0.898557056286584)||(rt1.c4))))) IS TRUE)  as count FROM rt0, vt0, vt1, rt1 ORDER BY ((rt0.c1 COLLATE RTRIM) ISNULL) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt0, vt1, rt1 WHERE (((((x'581e')AND(((((rt1.c3)OR(rt1.c1)))AND(rt1.c4)))))AND(((0.898557056286584)||(rt1.c4))))) ORDER BY ((rt0.c1 COLLATE RTRIM) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'581e')AND(((((rt1.c3)OR(rt1.c1)))AND(rt1.c4)))))AND(((0.898557056286584)||(rt1.c4))))) IS TRUE)  as count FROM rt0, vt0, vt1, rt1 ORDER BY ((rt0.c1 COLLATE RTRIM) ISNULL) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt0, vt1, rt1 WHERE (((((x'581e')AND(((((rt1.c3)OR(rt1.c1)))AND(rt1.c4)))))AND(((0.898557056286584)||(rt1.c4))))) ORDER BY ((rt0.c1 COLLATE RTRIM) ISNULL) DESC  NULLS LAST;
SELECT * FROM vt1 FULL OUTER JOIN rt1 ON ((rt0.c2)LIKE((((rt0.c0))!=((rt0.c0))))) LEFT OUTER JOIN rt0 ON ((x'')AND(((((vt1.c0)AND(rt0.c2)))AND(rt1.c1)))) WHERE ((NOT ((((vt1.c0))!=((-512088539)))))) ORDER BY (((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt1.c0))<>((-512088539)))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt1 ON ((rt0.c2)LIKE((((rt0.c0))!=((rt0.c0))))) LEFT OUTER JOIN rt0 ON ((x'')AND(((((vt1.c0)AND(rt0.c2)))AND(rt1.c1)))) ORDER BY (((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)) IN ()) ASC  NULLS FIRST);
SELECT * FROM vt1 FULL OUTER JOIN rt1 ON ((rt0.c2)LIKE((((rt0.c0))!=((rt0.c0))))) LEFT OUTER JOIN rt0 ON ((x'')AND(((((vt1.c0)AND(rt0.c2)))AND(rt1.c1)))) WHERE ((NOT ((((vt1.c0))!=((-512088539)))))) ORDER BY (((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt1.c0))<>((-512088539)))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt1 ON ((rt0.c2)LIKE((((rt0.c0))!=((rt0.c0))))) LEFT OUTER JOIN rt0 ON ((x'')AND(((((vt1.c0)AND(rt0.c2)))AND(rt1.c1)))) ORDER BY (((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)) IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE (CAST(((rt0.c1) IS FALSE) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) IS FALSE) AS BLOB)) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE (CAST(((rt0.c1) IS FALSE) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) IS FALSE) AS BLOB)) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE (CAST(((rt0.c1) IS FALSE) AS BLOB));
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE (CAST(CAST(rt0.c0 AS TEXT) AS INTEGER)) ORDER BY ((vt0.c0 IN ()) IN (rt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY ((vt0.c0 IN ()) IN (rt0.c0)));
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE (CAST(CAST(rt0.c0 AS TEXT) AS INTEGER)) ORDER BY ((vt0.c0 IN ()) IN (rt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY ((vt0.c0 IN ()) IN (rt0.c0)));
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE (CAST(CAST(rt0.c0 AS TEXT) AS INTEGER)) ORDER BY ((vt0.c0 IN ()) IN (rt0.c0));
SELECT ALL COUNT(*) FROM rt0, rt1, vt1, vt0 WHERE (ABS(DISTINCT ((rt1.c2) ISNULL))) ORDER BY 0.1025161453717619  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT ((rt1.c2) ISNULL))) IS TRUE)  as count FROM rt0, rt1, vt1, vt0 ORDER BY 0.1025161453717619  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1, vt1, vt0 WHERE (ABS(DISTINCT ((rt1.c2) ISNULL))) ORDER BY 0.1025161453717619  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT ((rt1.c2) ISNULL))) IS TRUE)  as count FROM rt0, rt1, vt1, vt0 ORDER BY 0.1025161453717619  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1, vt1, vt0 WHERE (ABS(DISTINCT ((rt1.c2) ISNULL))) ORDER BY 0.1025161453717619  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0, rt1 FULL OUTER JOIN vt1 ON (((NOT (vt0.c0)))<<(ABS(DISTINCT vt0.c0))) WHERE (((((rt0.c1) NOT NULL))==(((rt1.c0) NOTNULL)))) ORDER BY rt1.c4 ASC, ((rt0.c2)-(vt0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT NULL))==(((rt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, rt0, rt1 FULL OUTER JOIN vt1 ON (((NOT (vt0.c0)))<<(ABS(DISTINCT vt0.c0))) ORDER BY rt1.c4 ASC, ((rt0.c2)-(vt0.c0)) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM vt0, rt0, rt1 FULL OUTER JOIN vt1 ON (((NOT (vt0.c0)))<<(ABS(DISTINCT vt0.c0))) WHERE (((((rt0.c1) NOT NULL))==(((rt1.c0) NOTNULL)))) ORDER BY rt1.c4 ASC, ((rt0.c2)-(vt0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT NULL))==(((rt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, rt0, rt1 FULL OUTER JOIN vt1 ON (((NOT (vt0.c0)))<<(ABS(DISTINCT vt0.c0))) ORDER BY rt1.c4 ASC, ((rt0.c2)-(vt0.c0)) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM vt0, rt0, rt1 FULL OUTER JOIN vt1 ON (((NOT (vt0.c0)))<<(ABS(DISTINCT vt0.c0))) WHERE (((((rt0.c1) NOT NULL))==(((rt1.c0) NOTNULL)))) ORDER BY rt1.c4 ASC, ((rt0.c2)-(vt0.c0)) COLLATE NOCASE ASC;
SELECT ALL COUNT(*) FROM rt1, rt0 FULL OUTER JOIN vt1 ON ((CAST(rt1.c2 AS BLOB)) NOT BETWEEN (((vt0.c0)<(rt0.c2))) AND (rt1.c4)) RIGHT OUTER JOIN vt0 ON json_insert(((rt1.c0)IS(vt0.c0)), (((rt1.c0))<=((rt1.c2))), (- (rt0.c2))) WHERE ((((vt0.c0, rt1.c1, rt1.c2)) NOT BETWEEN ((json_quote(rt1.c3), CASE WHEN rt1.c0 THEN rt1.c0 ELSE NULL END, ((rt0.c2)<<(rt1.c0)))) AND ((((((rt1.c4)AND(rt1.c4)))AND(rt0.c0)), ((rt1.c2) NOT BETWEEN (vt0.c0) AND (vt1.c0)), ((rt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) ORDER BY rt1.c2;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, rt1.c1, rt1.c2)) NOT BETWEEN ((json_quote(rt1.c3), CASE WHEN rt1.c0 THEN rt1.c0 ELSE NULL END, ((rt0.c2)<<(rt1.c0)))) AND ((((((rt1.c4)AND(rt1.c4)))AND(rt0.c0)), ((rt1.c2) NOT BETWEEN (vt0.c0) AND (vt1.c0)), ((rt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM rt1, rt0 FULL OUTER JOIN vt1 ON ((CAST(rt1.c2 AS BLOB)) NOT BETWEEN (((vt0.c0)<(rt0.c2))) AND (rt1.c4)) RIGHT OUTER JOIN vt0 ON json_insert(((rt1.c0)IS(vt0.c0)), (((rt1.c0))<=((rt1.c2))), (- (rt0.c2))) ORDER BY rt1.c2);
SELECT ALL COUNT(*) FROM rt1, rt0 FULL OUTER JOIN vt1 ON ((CAST(rt1.c2 AS BLOB)) NOT BETWEEN (((vt0.c0)<(rt0.c2))) AND (rt1.c4)) RIGHT OUTER JOIN vt0 ON json_insert(((rt1.c0)IS(vt0.c0)), (((rt1.c0))<=((rt1.c2))), (- (rt0.c2))) WHERE ((((vt0.c0, rt1.c1, rt1.c2)) NOT BETWEEN ((json_quote(rt1.c3), CASE WHEN rt1.c0 THEN rt1.c0 ELSE NULL END, ((rt0.c2)<<(rt1.c0)))) AND ((((((rt1.c4)AND(rt1.c4)))AND(rt0.c0)), ((rt1.c2) NOT BETWEEN (vt0.c0) AND (vt1.c0)), ((rt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) ORDER BY rt1.c2;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, rt1.c1, rt1.c2)) NOT BETWEEN ((json_quote(rt1.c3), CASE WHEN rt1.c0 THEN rt1.c0 ELSE NULL END, ((rt0.c2)<<(rt1.c0)))) AND ((((((rt1.c4)AND(rt1.c4)))AND(rt0.c0)), ((rt1.c2) NOT BETWEEN (vt0.c0) AND (vt1.c0)), ((rt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM rt1, rt0 FULL OUTER JOIN vt1 ON ((CAST(rt1.c2 AS BLOB)) NOT BETWEEN (((vt0.c0)<(rt0.c2))) AND (rt1.c4)) RIGHT OUTER JOIN vt0 ON json_insert(((rt1.c0)IS(vt0.c0)), (((rt1.c0))<=((rt1.c2))), (- (rt0.c2))) ORDER BY rt1.c2);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0, vt1 NOT INDEXED WHERE (NULL) ORDER BY CAST(((rt1.c2)%(rt1.c4)) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt1, rt0, vt1 ORDER BY CAST(((rt1.c2)%(rt1.c4)) AS TEXT) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0, vt1 NOT INDEXED WHERE (NULL) ORDER BY CAST(((rt1.c2)%(rt1.c4)) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt1, rt0, vt1 ORDER BY CAST(((rt1.c2)%(rt1.c4)) AS TEXT) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0, vt1 NOT INDEXED WHERE (NULL) ORDER BY CAST(((rt1.c2)%(rt1.c4)) AS TEXT) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ('Q\P뎝hTy5');
SELECT SUM(count) FROM (SELECT (('Q\P뎝hTy5') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('Q\P뎝hTy5');
SELECT SUM(count) FROM (SELECT (('Q\P뎝hTy5') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('Q\P뎝hTy5');
SELECT COUNT(*) FROM vt1, rt1, rt0, vt0 WHERE (((rt1.c2 COLLATE RTRIM)GLOB(vt1.c0))) ORDER BY ((((((vt1.c0)AND(0Xffffffffd9e782e2)))AND(x'')))+(CASE rt0.c0  WHEN rt0.c1 THEN 0.44923022617751573 ELSE rt1.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE RTRIM)GLOB(vt1.c0))) IS TRUE)  as count FROM vt1, rt1, rt0, vt0 ORDER BY ((((((vt1.c0)AND(0xffffffffd9e782e2)))AND(x'')))+(CASE rt0.c0  WHEN rt0.c1 THEN 0.44923022617751573 ELSE rt1.c1 END)));
SELECT COUNT(*) FROM vt1, rt1, rt0, vt0 WHERE (((rt1.c2 COLLATE RTRIM)GLOB(vt1.c0))) ORDER BY ((((((vt1.c0)AND(0Xffffffffd9e782e2)))AND(x'')))+(CASE rt0.c0  WHEN rt0.c1 THEN 0.44923022617751573 ELSE rt1.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE RTRIM)GLOB(vt1.c0))) IS TRUE)  as count FROM vt1, rt1, rt0, vt0 ORDER BY ((((((vt1.c0)AND(0xffffffffd9e782e2)))AND(x'')))+(CASE rt0.c0  WHEN rt0.c1 THEN 0.44923022617751573 ELSE rt1.c1 END)));
SELECT COUNT(*) FROM vt1, rt1, rt0, vt0 WHERE (((rt1.c2 COLLATE RTRIM)GLOB(vt1.c0))) ORDER BY ((((((vt1.c0)AND(0Xffffffffd9e782e2)))AND(x'')))+(CASE rt0.c0  WHEN rt0.c1 THEN 0.44923022617751573 ELSE rt1.c1 END));
SELECT * FROM rt0, vt1 WHERE ((((NOT (rt0.c2)))/(rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c2)))/(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((((NOT (rt0.c2)))/(rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c2)))/(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((((NOT (rt0.c2)))/(rt0.c1 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON ((CASE WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c1 END) NOT BETWEEN (CASE vt1.c0  WHEN x'' THEN rt0.c2 END) AND (COALESCE(rt0.c1, 3.87093936E8))) WHERE ((((rt0.c1)=(rt0.c1)) IN ('', ((vt1.c0)*(rt0.c2)), rt0.c2)));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)=(rt0.c1)) IN ('', ((vt1.c0)*(rt0.c2)), rt0.c2))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((CASE WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c1 END) NOT BETWEEN (CASE vt1.c0  WHEN x'' THEN rt0.c2 END) AND (COALESCE(rt0.c1, 3.87093936E8))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON ((CASE WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c1 END) NOT BETWEEN (CASE vt1.c0  WHEN x'' THEN rt0.c2 END) AND (COALESCE(rt0.c1, 3.87093936E8))) WHERE ((((rt0.c1)=(rt0.c1)) IN ('', ((vt1.c0)*(rt0.c2)), rt0.c2)));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)=(rt0.c1)) IN ('', ((vt1.c0)*(rt0.c2)), rt0.c2))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((CASE WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c1 END) NOT BETWEEN (CASE vt1.c0  WHEN x'' THEN rt0.c2 END) AND (COALESCE(rt0.c1, 3.87093936E8))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON ((CASE WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c1 END) NOT BETWEEN (CASE vt1.c0  WHEN x'' THEN rt0.c2 END) AND (COALESCE(rt0.c1, 3.87093936E8))) WHERE ((((rt0.c1)=(rt0.c1)) IN ('', ((vt1.c0)*(rt0.c2)), rt0.c2)));
SELECT ALL COUNT(*) FROM rt0, vt1, vt0, rt1 WHERE (rt1.c4 COLLATE NOCASE) ORDER BY (((rt1.c2 IN ()))%(CASE rt1.c2  WHEN rt1.c2 THEN NULL ELSE vt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4 COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1, vt0, rt1 ORDER BY (((rt1.c2 IN ()))%(CASE rt1.c2  WHEN rt1.c2 THEN NULL ELSE vt0.c0 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0, rt1 WHERE (rt1.c4 COLLATE NOCASE) ORDER BY (((rt1.c2 IN ()))%(CASE rt1.c2  WHEN rt1.c2 THEN NULL ELSE vt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4 COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1, vt0, rt1 ORDER BY (((rt1.c2 IN ()))%(CASE rt1.c2  WHEN rt1.c2 THEN NULL ELSE vt0.c0 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0, rt1 WHERE (rt1.c4 COLLATE NOCASE) ORDER BY (((rt1.c2 IN ()))%(CASE rt1.c2  WHEN rt1.c2 THEN NULL ELSE vt0.c0 END)) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)AND(((vt0.c0) NOTNULL))))OR((((vt0.c0))==((vt0.c0)))))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE NOCASE)AND(((vt0.c0) NOTNULL))))OR((((vt0.c0))=((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)AND(((vt0.c0) NOTNULL))))OR((((vt0.c0))==((vt0.c0)))))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE NOCASE)AND(((vt0.c0) NOTNULL))))OR((((vt0.c0))=((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)AND(((vt0.c0) NOTNULL))))OR((((vt0.c0))==((vt0.c0)))))) ORDER BY vt0.c0  NULLS LAST;
SELECT * FROM rt1 WHERE ((~ (rt1.c3)));
SELECT SUM(count) FROM (SELECT (((~ (rt1.c3))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((~ (rt1.c3)));
SELECT SUM(count) FROM (SELECT (((~ (rt1.c3))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((~ (rt1.c3)));
SELECT COUNT(*) FROM rt0, vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ('');
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt1 ON ((((((x'f126') NOT BETWEEN (rt1.c4) AND (rt1.c4)))OR(0X24bf6a79)))OR(((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c1)))) WHERE (CAST(rt1.c1 AS BLOB)) ORDER BY ((CASE rt1.c4  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c2 END) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c1 AS BLOB)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt1 ON ((((((x'f126') NOT BETWEEN (rt1.c4) AND (rt1.c4)))OR(0X24bf6a79)))OR(((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c1)))) ORDER BY ((CASE rt1.c4  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c2 END) NOTNULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt1 ON ((((((x'f126') NOT BETWEEN (rt1.c4) AND (rt1.c4)))OR(0X24bf6a79)))OR(((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c1)))) WHERE (CAST(rt1.c1 AS BLOB)) ORDER BY ((CASE rt1.c4  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c2 END) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c1 AS BLOB)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt1 ON ((((((x'f126') NOT BETWEEN (rt1.c4) AND (rt1.c4)))OR(0X24bf6a79)))OR(((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c1)))) ORDER BY ((CASE rt1.c4  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c2 END) NOTNULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt1 ON ((((((x'f126') NOT BETWEEN (rt1.c4) AND (rt1.c4)))OR(0X24bf6a79)))OR(((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c1)))) WHERE (CAST(rt1.c1 AS BLOB)) ORDER BY ((CASE rt1.c4  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c2 END) NOTNULL) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, rt0, vt1 WHERE ('521716996') ORDER BY ((x'df6b' COLLATE NOCASE)LIKE((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('521716996') IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((x'df6b' COLLATE NOCASE)LIKE((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))  NULLS LAST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE ('521716996') ORDER BY ((x'df6b' COLLATE NOCASE)LIKE((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('521716996') IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((x'df6b' COLLATE NOCASE)LIKE((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))  NULLS LAST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE ('521716996') ORDER BY ((x'df6b' COLLATE NOCASE)LIKE((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 FULL OUTER JOIN vt1 ON (((vt0.c0, rt1.c3, 1142816121)) NOT BETWEEN ((((rt1.c1)LIKE(rt1.c0)), ((rt1.c0) BETWEEN (rt1.c2) AND (vt1.c0)), (((rt1.c3))>=((rt1.c4))))) AND ((((((((((rt0.c2)OR(rt1.c3)))OR(rt1.c3)))OR(rt0.c1)))AND(rt1.c1)), SUBSTR(rt1.c3, rt1.c2), ((rt1.c3) NOTNULL)))) FULL OUTER JOIN rt1 ON ((CAST(rt1.c2 AS TEXT)) ISNULL) WHERE (((((x'aaa2')<(rt1.c4)))&(NULL))) ORDER BY CASE vt1.c0  WHEN vt0.c0 THEN rt0.c2 WHEN '859208157' THEN x'' WHEN 0xffffffff9ee870d6 THEN rt1.c0 END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((x'aaa2')<(rt1.c4)))&(NULL))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN vt1 ON (((vt0.c0, rt1.c3, 1142816121)) NOT BETWEEN ((((rt1.c1)LIKE(rt1.c0)), ((rt1.c0) BETWEEN (rt1.c2) AND (vt1.c0)), (((rt1.c3))>=((rt1.c4))))) AND ((((((((((rt0.c2)OR(rt1.c3)))OR(rt1.c3)))OR(rt0.c1)))AND(rt1.c1)), SUBSTR(rt1.c3, rt1.c2), ((rt1.c3) NOTNULL)))) FULL OUTER JOIN rt1 ON ((CAST(rt1.c2 AS TEXT)) ISNULL) ORDER BY CASE vt1.c0  WHEN vt0.c0 THEN rt0.c2 WHEN '859208157' THEN x'' WHEN 0Xffffffff9ee870d6 THEN rt1.c0 END COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, vt0 FULL OUTER JOIN vt1 ON (((vt0.c0, rt1.c3, 1142816121)) NOT BETWEEN ((((rt1.c1)LIKE(rt1.c0)), ((rt1.c0) BETWEEN (rt1.c2) AND (vt1.c0)), (((rt1.c3))>=((rt1.c4))))) AND ((((((((((rt0.c2)OR(rt1.c3)))OR(rt1.c3)))OR(rt0.c1)))AND(rt1.c1)), SUBSTR(rt1.c3, rt1.c2), ((rt1.c3) NOTNULL)))) FULL OUTER JOIN rt1 ON ((CAST(rt1.c2 AS TEXT)) ISNULL) WHERE (((((x'aaa2')<(rt1.c4)))&(NULL))) ORDER BY CASE vt1.c0  WHEN vt0.c0 THEN rt0.c2 WHEN '859208157' THEN x'' WHEN 0xffffffff9ee870d6 THEN rt1.c0 END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((x'aaa2')<(rt1.c4)))&(NULL))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN vt1 ON (((vt0.c0, rt1.c3, 1142816121)) NOT BETWEEN ((((rt1.c1)LIKE(rt1.c0)), ((rt1.c0) BETWEEN (rt1.c2) AND (vt1.c0)), (((rt1.c3))>=((rt1.c4))))) AND ((((((((((rt0.c2)OR(rt1.c3)))OR(rt1.c3)))OR(rt0.c1)))AND(rt1.c1)), SUBSTR(rt1.c3, rt1.c2), ((rt1.c3) NOTNULL)))) FULL OUTER JOIN rt1 ON ((CAST(rt1.c2 AS TEXT)) ISNULL) ORDER BY CASE vt1.c0  WHEN vt0.c0 THEN rt0.c2 WHEN '859208157' THEN x'' WHEN 0Xffffffff9ee870d6 THEN rt1.c0 END COLLATE BINARY);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((+ (((((((((rt1.c3)AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c3)))AND(rt1.c2))))) ORDER BY (((((((((vt0.c0 IN ()))AND((((rt1.c2, rt1.c0, rt1.c2))>((rt1.c1, rt1.c3, rt1.c2))))))AND(rt1.c2)))AND(((rt1.c2)-(rt1.c4)))))AND(rt1.c4 COLLATE BINARY)) ASC  NULLS LAST, (+ ('0.11569180969752768')) COLLATE NOCASE DESC  NULLS FIRST, (((NULL, rt1.c1, rt1.c2)) BETWEEN ((x'', vt0.c0, ((rt1.c0)+(rt1.c2)))) AND (('qdWl', rt1.c4 COLLATE RTRIM, CASE WHEN 0x2e2310d9 THEN rt1.c1 END))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((rt1.c3)AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c3)))AND(rt1.c2))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((((((((vt0.c0 IN ()))AND((((rt1.c2, rt1.c0, rt1.c2))>((rt1.c1, rt1.c3, rt1.c2))))))AND(rt1.c2)))AND(((rt1.c2)-(rt1.c4)))))AND(rt1.c4 COLLATE BINARY)) ASC  NULLS LAST, (+ ('0.11569180969752768')) COLLATE NOCASE DESC  NULLS FIRST, (((NULL, rt1.c1, rt1.c2)) BETWEEN ((x'', vt0.c0, ((rt1.c0)+(rt1.c2)))) AND (('qdWl', rt1.c4 COLLATE RTRIM, CASE WHEN 0X2e2310d9 THEN rt1.c1 END))) ASC);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((+ (((((((((rt1.c3)AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c3)))AND(rt1.c2))))) ORDER BY (((((((((vt0.c0 IN ()))AND((((rt1.c2, rt1.c0, rt1.c2))>((rt1.c1, rt1.c3, rt1.c2))))))AND(rt1.c2)))AND(((rt1.c2)-(rt1.c4)))))AND(rt1.c4 COLLATE BINARY)) ASC  NULLS LAST, (+ ('0.11569180969752768')) COLLATE NOCASE DESC  NULLS FIRST, (((NULL, rt1.c1, rt1.c2)) BETWEEN ((x'', vt0.c0, ((rt1.c0)+(rt1.c2)))) AND (('qdWl', rt1.c4 COLLATE RTRIM, CASE WHEN 0x2e2310d9 THEN rt1.c1 END))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((rt1.c3)AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c3)))AND(rt1.c2))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((((((((vt0.c0 IN ()))AND((((rt1.c2, rt1.c0, rt1.c2))>((rt1.c1, rt1.c3, rt1.c2))))))AND(rt1.c2)))AND(((rt1.c2)-(rt1.c4)))))AND(rt1.c4 COLLATE BINARY)) ASC  NULLS LAST, (+ ('0.11569180969752768')) COLLATE NOCASE DESC  NULLS FIRST, (((NULL, rt1.c1, rt1.c2)) BETWEEN ((x'', vt0.c0, ((rt1.c0)+(rt1.c2)))) AND (('qdWl', rt1.c4 COLLATE RTRIM, CASE WHEN 0X2e2310d9 THEN rt1.c1 END))) ASC);
SELECT COUNT(*) FROM rt1, vt1 WHERE ((~ (CASE rt1.c4  WHEN vt1.c0 THEN rt1.c0 WHEN vt1.c0 THEN 'j旑' WHEN '873460009' THEN vt1.c0 ELSE rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE rt1.c4  WHEN vt1.c0 THEN rt1.c0 WHEN vt1.c0 THEN 'j旑' WHEN '873460009' THEN vt1.c0 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1, vt1);
SELECT COUNT(*) FROM rt1, vt1 WHERE ((~ (CASE rt1.c4  WHEN vt1.c0 THEN rt1.c0 WHEN vt1.c0 THEN 'j旑' WHEN '873460009' THEN vt1.c0 ELSE rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE rt1.c4  WHEN vt1.c0 THEN rt1.c0 WHEN vt1.c0 THEN 'j旑' WHEN '873460009' THEN vt1.c0 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1, vt1);
SELECT COUNT(*) FROM rt1, vt1 WHERE ((~ (CASE rt1.c4  WHEN vt1.c0 THEN rt1.c0 WHEN vt1.c0 THEN 'j旑' WHEN '873460009' THEN vt1.c0 ELSE rt1.c2 END)));
SELECT COUNT(*) FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON ((((rt0.c0)IS(rt1.c4)))>>((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))))) RIGHT OUTER JOIN rt1 ON (- (rt0.c1)) WHERE (((((rt0.c2 IN ())))<((0xffffffffcaa6b73e))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2 IN ())))<((0Xffffffffcaa6b73e)))) IS TRUE)  as count FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON ((((rt0.c0)IS(rt1.c4)))>>((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))))) RIGHT OUTER JOIN rt1 ON (- (rt0.c1)));
SELECT COUNT(*) FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON ((((rt0.c0)IS(rt1.c4)))>>((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))))) RIGHT OUTER JOIN rt1 ON (- (rt0.c1)) WHERE (((((rt0.c2 IN ())))<((0xffffffffcaa6b73e))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2 IN ())))<((0Xffffffffcaa6b73e)))) IS TRUE)  as count FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON ((((rt0.c0)IS(rt1.c4)))>>((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))))) RIGHT OUTER JOIN rt1 ON (- (rt0.c1)));
SELECT * FROM vt1, rt0, vt0, rt1 WHERE (CASE ((vt1.c0) ISNULL)  WHEN ((rt1.c0) IS FALSE) THEN ((rt1.c0)/(rt0.c0)) ELSE ((vt1.c0)<=(rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0) ISNULL)  WHEN ((rt1.c0) IS FALSE) THEN ((rt1.c0)/(rt0.c0)) ELSE ((vt1.c0)<=(rt1.c0)) END) IS TRUE)  as count FROM vt1, rt0, vt0, rt1);
SELECT * FROM vt1, rt0, vt0, rt1 WHERE (CASE ((vt1.c0) ISNULL)  WHEN ((rt1.c0) IS FALSE) THEN ((rt1.c0)/(rt0.c0)) ELSE ((vt1.c0)<=(rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0) ISNULL)  WHEN ((rt1.c0) IS FALSE) THEN ((rt1.c0)/(rt0.c0)) ELSE ((vt1.c0)<=(rt1.c0)) END) IS TRUE)  as count FROM vt1, rt0, vt0, rt1);
SELECT * FROM vt1, rt0, vt0, rt1 WHERE (CASE ((vt1.c0) ISNULL)  WHEN ((rt1.c0) IS FALSE) THEN ((rt1.c0)/(rt0.c0)) ELSE ((vt1.c0)<=(rt1.c0)) END);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt1 WHERE (rt1.c3) ORDER BY (((((rt1.c2, rt1.c2, vt1.c0)) BETWEEN ((rt1.c4, 0.6217181902945167, rt1.c2)) AND ((vt1.c0, rt1.c3, rt1.c0)))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM vt1 NATURAL JOIN rt1 ORDER BY (((((rt1.c2, rt1.c2, vt1.c0)) BETWEEN ((rt1.c4, 0.6217181902945167, rt1.c2)) AND ((vt1.c0, rt1.c3, rt1.c0)))) NOTNULL));
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt1 WHERE (rt1.c3) ORDER BY (((((rt1.c2, rt1.c2, vt1.c0)) BETWEEN ((rt1.c4, 0.6217181902945167, rt1.c2)) AND ((vt1.c0, rt1.c3, rt1.c0)))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM vt1 NATURAL JOIN rt1 ORDER BY (((((rt1.c2, rt1.c2, vt1.c0)) BETWEEN ((rt1.c4, 0.6217181902945167, rt1.c2)) AND ((vt1.c0, rt1.c3, rt1.c0)))) NOTNULL));
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt1 WHERE (rt1.c3) ORDER BY (((((rt1.c2, rt1.c2, vt1.c0)) BETWEEN ((rt1.c4, 0.6217181902945167, rt1.c2)) AND ((vt1.c0, rt1.c3, rt1.c0)))) NOTNULL);
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON (((rt0.c0, vt1.c0, rt0.c1)) BETWEEN (((((rt0.c0))>(('Jc#S讪XkX+'))), ((NULL)<(rt0.c1)), ((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c0)))) AND (((rt0.c2 IN ()), ((-3.55928865E8)<(NULL)), ((',]') IS FALSE)))) WHERE ((((((((((((rt0.c2))<>((vt1.c0))))OR((vt1.c0 IN ()))))OR(x'')))OR(json_object(rt0.c0, x'30c1', vt1.c0, rt0.c0))))OR((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((((((((rt0.c2))<>((vt1.c0))))OR((vt1.c0 IN ()))))OR(x'')))OR(json_object(rt0.c0, x'30c1', vt1.c0, rt0.c0))))OR((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON (((rt0.c0, vt1.c0, rt0.c1)) BETWEEN (((((rt0.c0))>(('Jc#S讪XkX+'))), ((NULL)<(rt0.c1)), ((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c0)))) AND (((rt0.c2 IN ()), ((-3.55928865E8)<(NULL)), ((',]') IS FALSE)))));
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON (((rt0.c0, vt1.c0, rt0.c1)) BETWEEN (((((rt0.c0))>(('Jc#S讪XkX+'))), ((NULL)<(rt0.c1)), ((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c0)))) AND (((rt0.c2 IN ()), ((-3.55928865E8)<(NULL)), ((',]') IS FALSE)))) WHERE ((((((((((((rt0.c2))<>((vt1.c0))))OR((vt1.c0 IN ()))))OR(x'')))OR(json_object(rt0.c0, x'30c1', vt1.c0, rt0.c0))))OR((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((((((((rt0.c2))<>((vt1.c0))))OR((vt1.c0 IN ()))))OR(x'')))OR(json_object(rt0.c0, x'30c1', vt1.c0, rt0.c0))))OR((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON (((rt0.c0, vt1.c0, rt0.c1)) BETWEEN (((((rt0.c0))>(('Jc#S讪XkX+'))), ((NULL)<(rt0.c1)), ((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c0)))) AND (((rt0.c2 IN ()), ((-3.55928865E8)<(NULL)), ((',]') IS FALSE)))));
SELECT * FROM vt0, rt0, vt1, rt1 WHERE ((((GLOB(rt1.c2, rt1.c0)))!=((rt1.c0)))) ORDER BY ((((((rt0.c1)OR(vt1.c0)))AND(vt1.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((((GLOB(rt1.c2, rt1.c0)))<>((rt1.c0)))) IS TRUE)  as count FROM vt0, rt0, vt1, rt1 ORDER BY ((((((rt0.c1)OR(vt1.c0)))AND(vt1.c0))) IS FALSE));
SELECT * FROM vt0, rt0, vt1, rt1 WHERE ((((GLOB(rt1.c2, rt1.c0)))!=((rt1.c0)))) ORDER BY ((((((rt0.c1)OR(vt1.c0)))AND(vt1.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((((GLOB(rt1.c2, rt1.c0)))<>((rt1.c0)))) IS TRUE)  as count FROM vt0, rt0, vt1, rt1 ORDER BY ((((((rt0.c1)OR(vt1.c0)))AND(vt1.c0))) IS FALSE));
SELECT * FROM vt0, rt0, vt1, rt1 WHERE ((((GLOB(rt1.c2, rt1.c0)))!=((rt1.c0)))) ORDER BY ((((((rt0.c1)OR(vt1.c0)))AND(vt1.c0))) IS FALSE);
SELECT ALL COUNT(*) FROM vt0, rt1, vt1, rt0 WHERE ((((rt1.c2)) NOT BETWEEN (((((rt0.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c0))))) AND ((LIKELIHOOD(vt1.c0, 0.15685522442998923))))) ORDER BY (((('')/(rt0.c2))) NOT BETWEEN (NULL COLLATE NOCASE) AND (((((vt0.c0)OR(NULL)))AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) NOT BETWEEN (((((rt0.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c0))))) AND ((LIKELIHOOD(vt1.c0, 0.15685522442998923))))) IS TRUE)  as count FROM vt0, rt1, vt1, rt0 ORDER BY (((('')/(rt0.c2))) NOT BETWEEN (NULL COLLATE NOCASE) AND (((((vt0.c0)OR(NULL)))AND(rt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt1, vt1, rt0 WHERE ((((rt1.c2)) NOT BETWEEN (((((rt0.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c0))))) AND ((LIKELIHOOD(vt1.c0, 0.15685522442998923))))) ORDER BY (((('')/(rt0.c2))) NOT BETWEEN (NULL COLLATE NOCASE) AND (((((vt0.c0)OR(NULL)))AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) NOT BETWEEN (((((rt0.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c0))))) AND ((LIKELIHOOD(vt1.c0, 0.15685522442998923))))) IS TRUE)  as count FROM vt0, rt1, vt1, rt0 ORDER BY (((('')/(rt0.c2))) NOT BETWEEN (NULL COLLATE NOCASE) AND (((((vt0.c0)OR(NULL)))AND(rt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt1, vt1, rt0 WHERE ((((rt1.c2)) NOT BETWEEN (((((rt0.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c0))))) AND ((LIKELIHOOD(vt1.c0, 0.15685522442998923))))) ORDER BY (((('')/(rt0.c2))) NOT BETWEEN (NULL COLLATE NOCASE) AND (((((vt0.c0)OR(NULL)))AND(rt0.c0))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON NULL COLLATE RTRIM LEFT OUTER JOIN rt1 ON ((((rt1.c3)<=(rt0.c1))) BETWEEN ((((rt0.c2))<((x'')))) AND (((vt1.c0)-(rt0.c2)))) RIGHT OUTER JOIN vt0 ON CASE WHEN (rt0.c1 IN ()) THEN ((((vt0.c0)OR(rt0.c2)))OR(vt1.c0)) ELSE (((rt0.c0, rt0.c1, rt1.c1, rt0.c2, vt1.c0)) BETWEEN ((vt0.c0, rt0.c1, rt1.c4, rt0.c2, vt1.c0)) AND ((rt1.c3, rt1.c1, vt1.c0, rt1.c0, rt0.c0))) END WHERE ((- ((rt1.c3 IN (rt1.c2))))) ORDER BY (+ (rt0.c1 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- ((rt1.c3 IN (rt1.c2))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON NULL COLLATE RTRIM LEFT OUTER JOIN rt1 ON ((((rt1.c3)<=(rt0.c1))) BETWEEN ((((rt0.c2))<((x'')))) AND (((vt1.c0)-(rt0.c2)))) RIGHT OUTER JOIN vt0 ON CASE WHEN (rt0.c1 IN ()) THEN ((((vt0.c0)OR(rt0.c2)))OR(vt1.c0)) ELSE (((rt0.c0, rt0.c1, rt1.c1, rt0.c2, vt1.c0)) BETWEEN ((vt0.c0, rt0.c1, rt1.c4, rt0.c2, vt1.c0)) AND ((rt1.c3, rt1.c1, vt1.c0, rt1.c0, rt0.c0))) END ORDER BY (+ (rt0.c1 COLLATE BINARY)) ASC);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON NULL COLLATE RTRIM LEFT OUTER JOIN rt1 ON ((((rt1.c3)<=(rt0.c1))) BETWEEN ((((rt0.c2))<((x'')))) AND (((vt1.c0)-(rt0.c2)))) RIGHT OUTER JOIN vt0 ON CASE WHEN (rt0.c1 IN ()) THEN ((((vt0.c0)OR(rt0.c2)))OR(vt1.c0)) ELSE (((rt0.c0, rt0.c1, rt1.c1, rt0.c2, vt1.c0)) BETWEEN ((vt0.c0, rt0.c1, rt1.c4, rt0.c2, vt1.c0)) AND ((rt1.c3, rt1.c1, vt1.c0, rt1.c0, rt0.c0))) END WHERE ((- ((rt1.c3 IN (rt1.c2))))) ORDER BY (+ (rt0.c1 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- ((rt1.c3 IN (rt1.c2))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON NULL COLLATE RTRIM LEFT OUTER JOIN rt1 ON ((((rt1.c3)<=(rt0.c1))) BETWEEN ((((rt0.c2))<((x'')))) AND (((vt1.c0)-(rt0.c2)))) RIGHT OUTER JOIN vt0 ON CASE WHEN (rt0.c1 IN ()) THEN ((((vt0.c0)OR(rt0.c2)))OR(vt1.c0)) ELSE (((rt0.c0, rt0.c1, rt1.c1, rt0.c2, vt1.c0)) BETWEEN ((vt0.c0, rt0.c1, rt1.c4, rt0.c2, vt1.c0)) AND ((rt1.c3, rt1.c1, vt1.c0, rt1.c0, rt0.c0))) END ORDER BY (+ (rt0.c1 COLLATE BINARY)) ASC);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON NULL COLLATE RTRIM LEFT OUTER JOIN rt1 ON ((((rt1.c3)<=(rt0.c1))) BETWEEN ((((rt0.c2))<((x'')))) AND (((vt1.c0)-(rt0.c2)))) RIGHT OUTER JOIN vt0 ON CASE WHEN (rt0.c1 IN ()) THEN ((((vt0.c0)OR(rt0.c2)))OR(vt1.c0)) ELSE (((rt0.c0, rt0.c1, rt1.c1, rt0.c2, vt1.c0)) BETWEEN ((vt0.c0, rt0.c1, rt1.c4, rt0.c2, vt1.c0)) AND ((rt1.c3, rt1.c1, vt1.c0, rt1.c0, rt0.c0))) END WHERE ((- ((rt1.c3 IN (rt1.c2))))) ORDER BY (+ (rt0.c1 COLLATE BINARY)) ASC;
SELECT * FROM rt1 WHERE (((ABS(rt1.c0)) NOT BETWEEN (rt1.c1 COLLATE NOCASE) AND ((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(rt1.c0)) NOT BETWEEN (rt1.c1 COLLATE NOCASE) AND ((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((ABS(rt1.c0)) NOT BETWEEN (rt1.c1 COLLATE NOCASE) AND ((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(rt1.c0)) NOT BETWEEN (rt1.c1 COLLATE NOCASE) AND ((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((ABS(rt1.c0)) NOT BETWEEN (rt1.c1 COLLATE NOCASE) AND ((rt1.c2 IN ()))));
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE (((COALESCE(DISTINCT rt0.c0, rt1.c4)) BETWEEN ((rt0.c1 IN ())) AND (CASE rt1.c3  WHEN rt0.c2 THEN rt1.c2 ELSE rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT rt0.c0, rt1.c4)) BETWEEN ((rt0.c1 IN ())) AND (CASE rt1.c3  WHEN rt0.c2 THEN rt1.c2 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE (((COALESCE(DISTINCT rt0.c0, rt1.c4)) BETWEEN ((rt0.c1 IN ())) AND (CASE rt1.c3  WHEN rt0.c2 THEN rt1.c2 ELSE rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT rt0.c0, rt1.c4)) BETWEEN ((rt0.c1 IN ())) AND (CASE rt1.c3  WHEN rt0.c2 THEN rt1.c2 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE (((COALESCE(DISTINCT rt0.c0, rt1.c4)) BETWEEN ((rt0.c1 IN ())) AND (CASE rt1.c3  WHEN rt0.c2 THEN rt1.c2 ELSE rt1.c2 END)));
SELECT COUNT(*) FROM rt0, rt1 WHERE ((~ (((rt1.c0)IS NOT(rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt1.c0)IS NOT(rt1.c4))))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((~ (((rt1.c0)IS NOT(rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt1.c0)IS NOT(rt1.c4))))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((~ (((rt1.c0)IS NOT(rt1.c4)))));
SELECT ALL * FROM rt1 WHERE (rt1.c3) ORDER BY (((((rt1.c2) NOT BETWEEN (rt1.c2) AND ('-848374811'))))<=((x'29d4')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c2) NOT BETWEEN (rt1.c2) AND ('-848374811'))))<=((x'29d4')))  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (rt1.c3) ORDER BY (((((rt1.c2) NOT BETWEEN (rt1.c2) AND ('-848374811'))))<=((x'29d4')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c2) NOT BETWEEN (rt1.c2) AND ('-848374811'))))<=((x'29d4')))  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (rt1.c3) ORDER BY (((((rt1.c2) NOT BETWEEN (rt1.c2) AND ('-848374811'))))<=((x'29d4')))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt1, vt1, rt0 WHERE (((x'5e3a')*(vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((x'5e3a')*(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1, vt1, rt0);
SELECT COUNT(*) FROM vt0, rt1, vt1, rt0 WHERE (((x'5e3a')*(vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((x'5e3a')*(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1, vt1, rt0);
SELECT COUNT(*) FROM vt0, rt1, vt1, rt0 WHERE (((x'5e3a')*(vt1.c0)) COLLATE BINARY);
SELECT ALL * FROM rt0, rt1, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT ALL * FROM rt0, rt1, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT ALL * FROM rt0, rt1, vt1 WHERE (x'');
SELECT COUNT(*) FROM vt1, rt1, vt0 WHERE (((CAST(vt1.c0 AS BLOB)) IS FALSE)) ORDER BY (((((vt1.c0) NOTNULL), ((rt1.c2)AND(rt1.c4)), (+ (rt1.c3))))==((rt1.c3, ((rt1.c2)%(rt1.c1)), NULL)))  NULLS LAST, ((NULLIF(DISTINCT rt1.c3, rt1.c2))AND(((vt1.c0) ISNULL))), COALESCE(rt1.c3 COLLATE RTRIM, CAST(rt1.c4 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS BLOB)) IS FALSE)) IS TRUE)  as count FROM vt1, rt1, vt0 ORDER BY (((((vt1.c0) NOTNULL), ((rt1.c2)AND(rt1.c4)), (+ (rt1.c3))))=((rt1.c3, ((rt1.c2)%(rt1.c1)), NULL)))  NULLS LAST, ((NULLIF(DISTINCT rt1.c3, rt1.c2))AND(((vt1.c0) ISNULL))), COALESCE(rt1.c3 COLLATE RTRIM, CAST(rt1.c4 AS NUMERIC)));
SELECT COUNT(*) FROM vt1, rt1, vt0 WHERE (((CAST(vt1.c0 AS BLOB)) IS FALSE)) ORDER BY (((((vt1.c0) NOTNULL), ((rt1.c2)AND(rt1.c4)), (+ (rt1.c3))))==((rt1.c3, ((rt1.c2)%(rt1.c1)), NULL)))  NULLS LAST, ((NULLIF(DISTINCT rt1.c3, rt1.c2))AND(((vt1.c0) ISNULL))), COALESCE(rt1.c3 COLLATE RTRIM, CAST(rt1.c4 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS BLOB)) IS FALSE)) IS TRUE)  as count FROM vt1, rt1, vt0 ORDER BY (((((vt1.c0) NOTNULL), ((rt1.c2)AND(rt1.c4)), (+ (rt1.c3))))=((rt1.c3, ((rt1.c2)%(rt1.c1)), NULL)))  NULLS LAST, ((NULLIF(DISTINCT rt1.c3, rt1.c2))AND(((vt1.c0) ISNULL))), COALESCE(rt1.c3 COLLATE RTRIM, CAST(rt1.c4 AS NUMERIC)));
SELECT COUNT(*) FROM vt1, rt1, vt0 WHERE (((CAST(vt1.c0 AS BLOB)) IS FALSE)) ORDER BY (((((vt1.c0) NOTNULL), ((rt1.c2)AND(rt1.c4)), (+ (rt1.c3))))==((rt1.c3, ((rt1.c2)%(rt1.c1)), NULL)))  NULLS LAST, ((NULLIF(DISTINCT rt1.c3, rt1.c2))AND(((vt1.c0) ISNULL))), COALESCE(rt1.c3 COLLATE RTRIM, CAST(rt1.c4 AS NUMERIC));
SELECT ALL * FROM rt0, rt1 NOT INDEXED WHERE (((((rt1.c2)&(rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)&(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 NOT INDEXED WHERE (((((rt1.c2)&(rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)&(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 NOT INDEXED WHERE (((((rt1.c2)&(rt0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((~ (((((rt1.c0)AND(rt1.c2)))OR(rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((((rt1.c0)AND(rt1.c2)))OR(rt1.c1))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((~ (((((rt1.c0)AND(rt1.c2)))OR(rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((((rt1.c0)AND(rt1.c2)))OR(rt1.c1))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((~ (((((rt1.c0)AND(rt1.c2)))OR(rt1.c1)))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON CASE WHEN rt0.c2 THEN rt1.c2 ELSE (NOT (rt0.c2)) END CROSS JOIN rt1 ON 0.0056132650188647215 WHERE ((+ ('9Fn徬A'))) ORDER BY (rt1.c1 IN (-1476065843)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ ('9Fn徬A'))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CASE WHEN rt0.c2 THEN rt1.c2 ELSE (NOT (rt0.c2)) END CROSS JOIN rt1 ON 0.0056132650188647215 ORDER BY (rt1.c1 IN (-1476065843)) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON CASE WHEN rt0.c2 THEN rt1.c2 ELSE (NOT (rt0.c2)) END CROSS JOIN rt1 ON 0.0056132650188647215 WHERE ((+ ('9Fn徬A'))) ORDER BY (rt1.c1 IN (-1476065843)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ ('9Fn徬A'))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CASE WHEN rt0.c2 THEN rt1.c2 ELSE (NOT (rt0.c2)) END CROSS JOIN rt1 ON 0.0056132650188647215 ORDER BY (rt1.c1 IN (-1476065843)) COLLATE BINARY  NULLS FIRST);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN TRIM(rt0.c1, rt0.c1) WHEN ((rt0.c0)&('-1860519889')) THEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END WHEN rt0.c0 THEN (- (rt0.c0)) END) ORDER BY CAST(((rt0.c1) NOT NULL) AS INTEGER)  NULLS LAST, ROUND((((rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((rt0.c1, rt0.c2, rt0.c2)) AND ((rt0.c2, rt0.c2, rt0.c1))), rt0.c1)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN TRIM(rt0.c1, rt0.c1) WHEN ((rt0.c0)&('-1860519889')) THEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END WHEN rt0.c0 THEN (- (rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c1) NOT NULL) AS INTEGER)  NULLS LAST, ROUND((((rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((rt0.c1, rt0.c2, rt0.c2)) AND ((rt0.c2, rt0.c2, rt0.c1))), rt0.c1)  NULLS LAST);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN TRIM(rt0.c1, rt0.c1) WHEN ((rt0.c0)&('-1860519889')) THEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END WHEN rt0.c0 THEN (- (rt0.c0)) END) ORDER BY CAST(((rt0.c1) NOT NULL) AS INTEGER)  NULLS LAST, ROUND((((rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((rt0.c1, rt0.c2, rt0.c2)) AND ((rt0.c2, rt0.c2, rt0.c1))), rt0.c1)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN TRIM(rt0.c1, rt0.c1) WHEN ((rt0.c0)&('-1860519889')) THEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END WHEN rt0.c0 THEN (- (rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c1) NOT NULL) AS INTEGER)  NULLS LAST, ROUND((((rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((rt0.c1, rt0.c2, rt0.c2)) AND ((rt0.c2, rt0.c2, rt0.c1))), rt0.c1)  NULLS LAST);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN TRIM(rt0.c1, rt0.c1) WHEN ((rt0.c0)&('-1860519889')) THEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END WHEN rt0.c0 THEN (- (rt0.c0)) END) ORDER BY CAST(((rt0.c1) NOT NULL) AS INTEGER)  NULLS LAST, ROUND((((rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((rt0.c1, rt0.c2, rt0.c2)) AND ((rt0.c2, rt0.c2, rt0.c1))), rt0.c1)  NULLS LAST;
SELECT * FROM rt1, vt0 WHERE (MIN(rt1.c0, ((rt1.c3) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((MIN(rt1.c0, ((rt1.c3) NOTNULL))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (MIN(rt1.c0, ((rt1.c3) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((MIN(rt1.c0, ((rt1.c3) NOTNULL))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (MIN(rt1.c0, ((rt1.c3) NOTNULL)));
SELECT * FROM rt1, vt1, rt0, vt0 WHERE ((- ((+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- ((+ (rt0.c1))))) IS TRUE)  as count FROM rt1, vt1, rt0, vt0);
SELECT * FROM rt1, vt1, rt0, vt0 WHERE ((- ((+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- ((+ (rt0.c1))))) IS TRUE)  as count FROM rt1, vt1, rt0, vt0);
SELECT * FROM rt1, vt1, rt0, vt0 WHERE ((- ((+ (rt0.c1)))));
SELECT * FROM rt1, vt0, rt0, vt1 WHERE ((- ((NOT (rt1.c3))))) ORDER BY (NOT ((((0x12900150, rt1.c3, vt0.c0)) BETWEEN ((rt0.c0, rt1.c3, rt0.c0)) AND ((rt1.c3, rt1.c3, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((NOT (rt1.c3))))) IS TRUE)  as count FROM rt1, vt0, rt0, vt1 ORDER BY (NOT ((((0x12900150, rt1.c3, vt0.c0)) BETWEEN ((rt0.c0, rt1.c3, rt0.c0)) AND ((rt1.c3, rt1.c3, vt0.c0))))));
SELECT * FROM rt1, vt0, rt0, vt1 WHERE ((- ((NOT (rt1.c3))))) ORDER BY (NOT ((((0x12900150, rt1.c3, vt0.c0)) BETWEEN ((rt0.c0, rt1.c3, rt0.c0)) AND ((rt1.c3, rt1.c3, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((NOT (rt1.c3))))) IS TRUE)  as count FROM rt1, vt0, rt0, vt1 ORDER BY (NOT ((((0x12900150, rt1.c3, vt0.c0)) BETWEEN ((rt0.c0, rt1.c3, rt0.c0)) AND ((rt1.c3, rt1.c3, vt0.c0))))));
SELECT * FROM rt1, vt0, rt0, vt1 WHERE ((- ((NOT (rt1.c3))))) ORDER BY (NOT ((((0x12900150, rt1.c3, vt0.c0)) BETWEEN ((rt0.c0, rt1.c3, rt0.c0)) AND ((rt1.c3, rt1.c3, vt0.c0)))));
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt0.c0))=((NULL))))OR((+ (vt1.c0))))) ORDER BY (+ ((((vt0.c0, vt1.c0, vt1.c0))<((vt0.c0, 0.4341074346000455, vt1.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))=((NULL))))OR((+ (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (+ ((((vt0.c0, vt1.c0, vt1.c0))<((vt0.c0, 0.4341074346000455, vt1.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt0.c0))=((NULL))))OR((+ (vt1.c0))))) ORDER BY (+ ((((vt0.c0, vt1.c0, vt1.c0))<((vt0.c0, 0.4341074346000455, vt1.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))=((NULL))))OR((+ (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (+ ((((vt0.c0, vt1.c0, vt1.c0))<((vt0.c0, 0.4341074346000455, vt1.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt0.c0))=((NULL))))OR((+ (vt1.c0))))) ORDER BY (+ ((((vt0.c0, vt1.c0, vt1.c0))<((vt0.c0, 0.4341074346000455, vt1.c0))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt1 WHERE ((rt0.c1 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((rt0.c1 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((rt0.c1 IN ()) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (vt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0 COLLATE NOCASE);
SELECT * FROM rt1, vt1 WHERE ((((rt1.c2)) NOT BETWEEN (((+ (rt1.c4)))) AND (((((rt1.c4))<>((rt1.c4))))))) ORDER BY rt1.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) NOT BETWEEN (((+ (rt1.c4)))) AND (((((rt1.c4))<>((rt1.c4))))))) IS TRUE)  as count FROM rt1, vt1 ORDER BY rt1.c1  NULLS LAST);
SELECT * FROM rt1, vt1 WHERE ((((rt1.c2)) NOT BETWEEN (((+ (rt1.c4)))) AND (((((rt1.c4))<>((rt1.c4))))))) ORDER BY rt1.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) NOT BETWEEN (((+ (rt1.c4)))) AND (((((rt1.c4))<>((rt1.c4))))))) IS TRUE)  as count FROM rt1, vt1 ORDER BY rt1.c1  NULLS LAST);
SELECT * FROM rt1, vt1 WHERE ((((rt1.c2)) NOT BETWEEN (((+ (rt1.c4)))) AND (((((rt1.c4))<>((rt1.c4))))))) ORDER BY rt1.c1  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE ((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((((rt1.c0) ISNULL), CAST(rt1.c4 AS NUMERIC), ((rt1.c4)!=(rt1.c3)))) AND ((NULL, ((NULL)OR(rt1.c4)), ((rt0.c2)||(0.7993800973355492))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((((rt1.c0) ISNULL), CAST(rt1.c4 AS NUMERIC), ((rt1.c4)!=(rt1.c3)))) AND ((NULL, ((NULL)OR(rt1.c4)), ((rt0.c2)||(0.7993800973355492)))))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE ((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((((rt1.c0) ISNULL), CAST(rt1.c4 AS NUMERIC), ((rt1.c4)!=(rt1.c3)))) AND ((NULL, ((NULL)OR(rt1.c4)), ((rt0.c2)||(0.7993800973355492))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((((rt1.c0) ISNULL), CAST(rt1.c4 AS NUMERIC), ((rt1.c4)!=(rt1.c3)))) AND ((NULL, ((NULL)OR(rt1.c4)), ((rt0.c2)||(0.7993800973355492)))))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE ((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((((rt1.c0) ISNULL), CAST(rt1.c4 AS NUMERIC), ((rt1.c4)!=(rt1.c3)))) AND ((NULL, ((NULL)OR(rt1.c4)), ((rt0.c2)||(0.7993800973355492))))));
SELECT COUNT(*) FROM vt1 WHERE (CAST(((x'')<<(vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((x'')<<(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((x'')<<(vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((x'')<<(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((x'')<<(vt1.c0)) AS NUMERIC));
SELECT * FROM vt1, rt0 WHERE (((rt0.c2)>>(-1.494782099E9)) COLLATE RTRIM) ORDER BY vt1.c0 COLLATE RTRIM COLLATE NOCASE, ((((rt0.c0)-('0.16805340429427607')))>=((('1944008631') IS TRUE))) DESC, ((((((((0.28638348285725024)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)>>(-1.494782099E9)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0 ORDER BY vt1.c0 COLLATE RTRIM COLLATE NOCASE, ((((rt0.c0)-('0.16805340429427607')))>=((('1944008631') IS TRUE))) DESC, ((((((((0.28638348285725024)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE (((rt0.c2)>>(-1.494782099E9)) COLLATE RTRIM) ORDER BY vt1.c0 COLLATE RTRIM COLLATE NOCASE, ((((rt0.c0)-('0.16805340429427607')))>=((('1944008631') IS TRUE))) DESC, ((((((((0.28638348285725024)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)>>(-1.494782099E9)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0 ORDER BY vt1.c0 COLLATE RTRIM COLLATE NOCASE, ((((rt0.c0)-('0.16805340429427607')))>=((('1944008631') IS TRUE))) DESC, ((((((((0.28638348285725024)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE (((rt0.c2)>>(-1.494782099E9)) COLLATE RTRIM) ORDER BY vt1.c0 COLLATE RTRIM COLLATE NOCASE, ((((rt0.c0)-('0.16805340429427607')))>=((('1944008631') IS TRUE))) DESC, ((((((((0.28638348285725024)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT * FROM rt0, rt1 NOT INDEXED, vt0, vt1 WHERE (((0.5065334802084385 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((0.5065334802084385 IN ()) IN ())) IS TRUE)  as count FROM rt0, rt1, vt0, vt1);
SELECT * FROM rt0, rt1 NOT INDEXED, vt0, vt1 WHERE (((0.5065334802084385 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((0.5065334802084385 IN ()) IN ())) IS TRUE)  as count FROM rt0, rt1, vt0, vt1);
SELECT * FROM rt0, rt1 NOT INDEXED, vt0, vt1 WHERE (((0.5065334802084385 IN ()) IN ()));
SELECT ALL * FROM rt0, rt1, vt0, vt1 WHERE (((CAST(rt1.c4 AS NUMERIC)) NOT BETWEEN ((rt1.c1 IN ())) AND (CAST(rt1.c4 AS REAL)))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c4 AS NUMERIC)) NOT BETWEEN ((rt1.c1 IN ())) AND (CAST(rt1.c4 AS REAL)))) IS TRUE)  as count FROM rt0, rt1, vt0, vt1 ORDER BY rt0.c0);
SELECT ALL * FROM rt0, rt1, vt0, vt1 WHERE (((CAST(rt1.c4 AS NUMERIC)) NOT BETWEEN ((rt1.c1 IN ())) AND (CAST(rt1.c4 AS REAL)))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c4 AS NUMERIC)) NOT BETWEEN ((rt1.c1 IN ())) AND (CAST(rt1.c4 AS REAL)))) IS TRUE)  as count FROM rt0, rt1, vt0, vt1 ORDER BY rt0.c0);
SELECT ALL * FROM rt0, rt1, vt0, vt1 WHERE (((CAST(rt1.c4 AS NUMERIC)) NOT BETWEEN ((rt1.c1 IN ())) AND (CAST(rt1.c4 AS REAL)))) ORDER BY rt0.c0;
SELECT COUNT(*) FROM rt0, rt1 NOT INDEXED, vt1 CROSS JOIN vt0 ON ((((vt1.c0)|(NULL)))/((NOT (rt1.c3)))) WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(rt0.c1)))OR(rt1.c2)))OR(rt0.c0)))||((+ (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(vt0.c0)))OR(rt0.c1)))OR(rt1.c2)))OR(rt0.c0)))||((+ (rt1.c2))))) IS TRUE)  as count FROM rt0, rt1, vt1 CROSS JOIN vt0 ON ((((vt1.c0)|(NULL)))/((NOT (rt1.c3)))));
SELECT COUNT(*) FROM rt0, rt1 NOT INDEXED, vt1 CROSS JOIN vt0 ON ((((vt1.c0)|(NULL)))/((NOT (rt1.c3)))) WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(rt0.c1)))OR(rt1.c2)))OR(rt0.c0)))||((+ (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(vt0.c0)))OR(rt0.c1)))OR(rt1.c2)))OR(rt0.c0)))||((+ (rt1.c2))))) IS TRUE)  as count FROM rt0, rt1, vt1 CROSS JOIN vt0 ON ((((vt1.c0)|(NULL)))/((NOT (rt1.c3)))));
SELECT COUNT(*) FROM rt0, rt1 NOT INDEXED, vt1 CROSS JOIN vt0 ON ((((vt1.c0)|(NULL)))/((NOT (rt1.c3)))) WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(rt0.c1)))OR(rt1.c2)))OR(rt0.c0)))||((+ (rt1.c2)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(((NULL) NOT NULL))))OR(((x'') ISNULL))) DESC, (((vt0.c0)IS(vt0.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(((NULL) NOT NULL))))OR(((x'') ISNULL))) DESC, (((vt0.c0)IS(vt0.c0)) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(((NULL) NOT NULL))))OR(((x'') ISNULL))) DESC, (((vt0.c0)IS(vt0.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(((NULL) NOT NULL))))OR(((x'') ISNULL))) DESC, (((vt0.c0)IS(vt0.c0)) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(((NULL) NOT NULL))))OR(((x'') ISNULL))) DESC, (((vt0.c0)IS(vt0.c0)) IN ()) DESC  NULLS FIRST;
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))) NOTNULL) WHERE (((((NULLIF(rt0.c2, vt0.c0))AND((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))OR(((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((NULLIF(rt0.c2, vt0.c0))AND((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))OR(((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))) NOTNULL));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))) NOTNULL) WHERE (((((NULLIF(rt0.c2, vt0.c0))AND((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))OR(((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((NULLIF(rt0.c2, vt0.c0))AND((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))OR(((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))) NOTNULL));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))) NOTNULL) WHERE (((((NULLIF(rt0.c2, vt0.c0))AND((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))OR(((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)))));
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (CASE ((rt0.c0)/(vt1.c0))  WHEN (rt0.c2 IN ()) THEN TRIM(DISTINCT vt1.c0) WHEN json_valid(x'') THEN CASE vt1.c0  WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END WHEN CAST(vt0.c0 AS TEXT) THEN rt0.c1 ELSE NULLIF(0.3365540016183636, rt0.c2) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0)/(vt1.c0))  WHEN (rt0.c2 IN ()) THEN TRIM(DISTINCT vt1.c0) WHEN json_valid(x'') THEN CASE vt1.c0  WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END WHEN CAST(vt0.c0 AS TEXT) THEN rt0.c1 ELSE NULLIF(0.3365540016183636, rt0.c2) END) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (CASE ((rt0.c0)/(vt1.c0))  WHEN (rt0.c2 IN ()) THEN TRIM(DISTINCT vt1.c0) WHEN json_valid(x'') THEN CASE vt1.c0  WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END WHEN CAST(vt0.c0 AS TEXT) THEN rt0.c1 ELSE NULLIF(0.3365540016183636, rt0.c2) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0)/(vt1.c0))  WHEN (rt0.c2 IN ()) THEN TRIM(DISTINCT vt1.c0) WHEN json_valid(x'') THEN CASE vt1.c0  WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END WHEN CAST(vt0.c0 AS TEXT) THEN rt0.c1 ELSE NULLIF(0.3365540016183636, rt0.c2) END) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (CASE ((rt0.c0)/(vt1.c0))  WHEN (rt0.c2 IN ()) THEN TRIM(DISTINCT vt1.c0) WHEN json_valid(x'') THEN CASE vt1.c0  WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END WHEN CAST(vt0.c0 AS TEXT) THEN rt0.c1 ELSE NULLIF(0.3365540016183636, rt0.c2) END);
SELECT COUNT(*) FROM vt1, vt0, rt0, rt1 WHERE ((((((((rt0.c0))<=((rt0.c1))))AND(rt1.c1)))OR(((((vt0.c0)OR(rt1.c4)))AND(rt1.c1))))) ORDER BY ((((vt0.c0)<>(rt0.c1))) NOT BETWEEN (((rt0.c1)IS(rt0.c0))) AND (LIKELY(vt0.c0)))  NULLS LAST, (((- (rt1.c1)))LIKE(x'268b')) ASC  NULLS FIRST, rt1.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c0))<=((rt0.c1))))AND(rt1.c1)))OR(((((vt0.c0)OR(rt1.c4)))AND(rt1.c1))))) IS TRUE)  as count FROM vt1, vt0, rt0, rt1 ORDER BY ((((vt0.c0)!=(rt0.c1))) NOT BETWEEN (((rt0.c1)IS(rt0.c0))) AND (LIKELY(vt0.c0)))  NULLS LAST, (((- (rt1.c1)))LIKE(x'268b')) ASC  NULLS FIRST, rt1.c1 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0, rt0, rt1 WHERE ((((((((rt0.c0))<=((rt0.c1))))AND(rt1.c1)))OR(((((vt0.c0)OR(rt1.c4)))AND(rt1.c1))))) ORDER BY ((((vt0.c0)<>(rt0.c1))) NOT BETWEEN (((rt0.c1)IS(rt0.c0))) AND (LIKELY(vt0.c0)))  NULLS LAST, (((- (rt1.c1)))LIKE(x'268b')) ASC  NULLS FIRST, rt1.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c0))<=((rt0.c1))))AND(rt1.c1)))OR(((((vt0.c0)OR(rt1.c4)))AND(rt1.c1))))) IS TRUE)  as count FROM vt1, vt0, rt0, rt1 ORDER BY ((((vt0.c0)!=(rt0.c1))) NOT BETWEEN (((rt0.c1)IS(rt0.c0))) AND (LIKELY(vt0.c0)))  NULLS LAST, (((- (rt1.c1)))LIKE(x'268b')) ASC  NULLS FIRST, rt1.c1 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0, rt0, rt1 WHERE ((((((((rt0.c0))<=((rt0.c1))))AND(rt1.c1)))OR(((((vt0.c0)OR(rt1.c4)))AND(rt1.c1))))) ORDER BY ((((vt0.c0)<>(rt0.c1))) NOT BETWEEN (((rt0.c1)IS(rt0.c0))) AND (LIKELY(vt0.c0)))  NULLS LAST, (((- (rt1.c1)))LIKE(x'268b')) ASC  NULLS FIRST, rt1.c1 DESC  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CHANGES());
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1))=((rt0.c1))))/(((rt0.c1) IS FALSE)))) ORDER BY (((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END))<(((((x'', rt0.c2, rt0.c1))<((rt0.c2, rt0.c2, rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))=((rt0.c1))))/(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0 ORDER BY (((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END))<(((((x'', rt0.c2, rt0.c1))<((rt0.c2, rt0.c2, rt0.c0)))))));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1))=((rt0.c1))))/(((rt0.c1) IS FALSE)))) ORDER BY (((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END))<(((((x'', rt0.c2, rt0.c1))<((rt0.c2, rt0.c2, rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))=((rt0.c1))))/(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0 ORDER BY (((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END))<(((((x'', rt0.c2, rt0.c1))<((rt0.c2, rt0.c2, rt0.c0)))))));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1))=((rt0.c1))))/(((rt0.c1) IS FALSE)))) ORDER BY (((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END))<(((((x'', rt0.c2, rt0.c1))<((rt0.c2, rt0.c2, rt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, rt0 INNER JOIN vt1 ON CASE ((vt0.c0) NOT BETWEEN (x'035c') AND (rt1.c3))  WHEN ((rt0.c0)LIKE(NULL)) THEN (vt0.c0 IN (rt1.c0, rt1.c1)) WHEN CASE WHEN vt1.c0 THEN rt1.c3 ELSE vt1.c0 END THEN rt1.c2 WHEN ((((rt1.c2)AND(rt0.c1)))OR(rt1.c4)) THEN (+ (rt1.c1)) ELSE rt0.c0 COLLATE RTRIM END FULL OUTER JOIN rt1 ON NULLIF(rt0.c2 COLLATE BINARY, CAST(rt0.c1 AS NUMERIC)) WHERE (((((rt1.c4)||(x'')))>=(HEX(rt0.c0)))) ORDER BY ((('-512088539' IN ())) BETWEEN (((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0))) AND (json_insert(rt1.c2, rt1.c4, NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c4)||(x'')))>=(HEX(rt0.c0)))) IS TRUE)  as count FROM vt0, rt0 INNER JOIN vt1 ON CASE ((vt0.c0) NOT BETWEEN (x'035c') AND (rt1.c3))  WHEN ((rt0.c0)LIKE(NULL)) THEN (vt0.c0 IN (rt1.c0, rt1.c1)) WHEN CASE WHEN vt1.c0 THEN rt1.c3 ELSE vt1.c0 END THEN rt1.c2 WHEN ((((rt1.c2)AND(rt0.c1)))OR(rt1.c4)) THEN (+ (rt1.c1)) ELSE rt0.c0 COLLATE RTRIM END FULL OUTER JOIN rt1 ON NULLIF(rt0.c2 COLLATE BINARY, CAST(rt0.c1 AS NUMERIC)) ORDER BY ((('-512088539' IN ())) BETWEEN (((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0))) AND (json_insert(rt1.c2, rt1.c4, NULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 INNER JOIN vt1 ON CASE ((vt0.c0) NOT BETWEEN (x'035c') AND (rt1.c3))  WHEN ((rt0.c0)LIKE(NULL)) THEN (vt0.c0 IN (rt1.c0, rt1.c1)) WHEN CASE WHEN vt1.c0 THEN rt1.c3 ELSE vt1.c0 END THEN rt1.c2 WHEN ((((rt1.c2)AND(rt0.c1)))OR(rt1.c4)) THEN (+ (rt1.c1)) ELSE rt0.c0 COLLATE RTRIM END FULL OUTER JOIN rt1 ON NULLIF(rt0.c2 COLLATE BINARY, CAST(rt0.c1 AS NUMERIC)) WHERE (((((rt1.c4)||(x'')))>=(HEX(rt0.c0)))) ORDER BY ((('-512088539' IN ())) BETWEEN (((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0))) AND (json_insert(rt1.c2, rt1.c4, NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c4)||(x'')))>=(HEX(rt0.c0)))) IS TRUE)  as count FROM vt0, rt0 INNER JOIN vt1 ON CASE ((vt0.c0) NOT BETWEEN (x'035c') AND (rt1.c3))  WHEN ((rt0.c0)LIKE(NULL)) THEN (vt0.c0 IN (rt1.c0, rt1.c1)) WHEN CASE WHEN vt1.c0 THEN rt1.c3 ELSE vt1.c0 END THEN rt1.c2 WHEN ((((rt1.c2)AND(rt0.c1)))OR(rt1.c4)) THEN (+ (rt1.c1)) ELSE rt0.c0 COLLATE RTRIM END FULL OUTER JOIN rt1 ON NULLIF(rt0.c2 COLLATE BINARY, CAST(rt0.c1 AS NUMERIC)) ORDER BY ((('-512088539' IN ())) BETWEEN (((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0))) AND (json_insert(rt1.c2, rt1.c4, NULL)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1, vt1, vt0 WHERE (((((((((((((NULL)AND(((((rt1.c2)AND(rt0.c1)))AND(rt0.c2)))))OR(0.9762994994269437)))OR(CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt0.c2 THEN vt0.c0 WHEN rt1.c1 THEN rt0.c0 ELSE rt1.c1 END)))AND(LENGTH(rt0.c1))))OR(TRIM(rt0.c1, vt0.c0))))OR(((rt0.c0) ISNULL)))) ORDER BY '' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((NULL)AND(((((rt1.c2)AND(rt0.c1)))AND(rt0.c2)))))OR(0.9762994994269437)))OR(CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt0.c2 THEN vt0.c0 WHEN rt1.c1 THEN rt0.c0 ELSE rt1.c1 END)))AND(LENGTH(rt0.c1))))OR(TRIM(rt0.c1, vt0.c0))))OR(((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0, rt1, vt1, vt0 ORDER BY '' ASC);
SELECT COUNT(*) FROM rt0, rt1, vt1, vt0 WHERE (((((((((((((NULL)AND(((((rt1.c2)AND(rt0.c1)))AND(rt0.c2)))))OR(0.9762994994269437)))OR(CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt0.c2 THEN vt0.c0 WHEN rt1.c1 THEN rt0.c0 ELSE rt1.c1 END)))AND(LENGTH(rt0.c1))))OR(TRIM(rt0.c1, vt0.c0))))OR(((rt0.c0) ISNULL)))) ORDER BY '' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((NULL)AND(((((rt1.c2)AND(rt0.c1)))AND(rt0.c2)))))OR(0.9762994994269437)))OR(CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt0.c2 THEN vt0.c0 WHEN rt1.c1 THEN rt0.c0 ELSE rt1.c1 END)))AND(LENGTH(rt0.c1))))OR(TRIM(rt0.c1, vt0.c0))))OR(((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0, rt1, vt1, vt0 ORDER BY '' ASC);
SELECT COUNT(*) FROM rt0, rt1, vt1, vt0 WHERE (((((((((((((NULL)AND(((((rt1.c2)AND(rt0.c1)))AND(rt0.c2)))))OR(0.9762994994269437)))OR(CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt0.c2 THEN vt0.c0 WHEN rt1.c1 THEN rt0.c0 ELSE rt1.c1 END)))AND(LENGTH(rt0.c1))))OR(TRIM(rt0.c1, vt0.c0))))OR(((rt0.c0) ISNULL)))) ORDER BY '' ASC;
SELECT COUNT(*) FROM rt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON CASE WHEN NULL THEN UNLIKELY(rt0.c1) END WHERE (CASE (NOT (vt0.c0))  WHEN '361901324' THEN (+ (vt0.c0)) WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN LOWER(vt0.c0) WHEN json_insert(vt0.c0, vt0.c0, rt0.c2) THEN rt0.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (vt0.c0))  WHEN '361901324' THEN (+ (vt0.c0)) WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN LOWER(vt0.c0) WHEN json_insert(vt0.c0, vt0.c0, rt0.c2) THEN rt0.c2 END) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON CASE WHEN NULL THEN UNLIKELY(rt0.c1) END);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON CASE WHEN NULL THEN UNLIKELY(rt0.c1) END WHERE (CASE (NOT (vt0.c0))  WHEN '361901324' THEN (+ (vt0.c0)) WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN LOWER(vt0.c0) WHEN json_insert(vt0.c0, vt0.c0, rt0.c2) THEN rt0.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (vt0.c0))  WHEN '361901324' THEN (+ (vt0.c0)) WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN LOWER(vt0.c0) WHEN json_insert(vt0.c0, vt0.c0, rt0.c2) THEN rt0.c2 END) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON CASE WHEN NULL THEN UNLIKELY(rt0.c1) END);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON CASE WHEN NULL THEN UNLIKELY(rt0.c1) END WHERE (CASE (NOT (vt0.c0))  WHEN '361901324' THEN (+ (vt0.c0)) WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN LOWER(vt0.c0) WHEN json_insert(vt0.c0, vt0.c0, rt0.c2) THEN rt0.c2 END);
SELECT * FROM rt0, vt0 RIGHT OUTER JOIN rt1 ON CAST((((rt0.c1))<>((rt1.c2))) AS REAL) WHERE (LIKELY(0x6ca15ada));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(0x6ca15ada)) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN rt1 ON CAST((((rt0.c1))!=((rt1.c2))) AS REAL));
SELECT * FROM rt0, vt0 RIGHT OUTER JOIN rt1 ON CAST((((rt0.c1))<>((rt1.c2))) AS REAL) WHERE (LIKELY(0x6ca15ada));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(0x6ca15ada)) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN rt1 ON CAST((((rt0.c1))!=((rt1.c2))) AS REAL));
SELECT * FROM rt0, vt0 RIGHT OUTER JOIN rt1 ON CAST((((rt0.c1))<>((rt1.c2))) AS REAL) WHERE (LIKELY(0x6ca15ada));
SELECT * FROM rt0, rt1 WHERE ((x'f8da' IN ((rt1.c2 IN (rt1.c2)), ((((rt1.c4)OR(rt1.c1)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((x'f8da' IN ((rt1.c2 IN (rt1.c2)), ((((rt1.c4)OR(rt1.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((x'f8da' IN ((rt1.c2 IN (rt1.c2)), ((((rt1.c4)OR(rt1.c1)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((x'f8da' IN ((rt1.c2 IN (rt1.c2)), ((((rt1.c4)OR(rt1.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((x'f8da' IN ((rt1.c2 IN (rt1.c2)), ((((rt1.c4)OR(rt1.c1)))AND(rt0.c0)))));
SELECT COUNT(*) FROM rt1, vt0, vt1, rt0 WHERE ((+ (rt1.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((+ (rt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0, vt1, rt0);
SELECT COUNT(*) FROM rt1, vt0, vt1, rt0 WHERE ((+ (rt1.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((+ (rt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0, vt1, rt0);
SELECT COUNT(*) FROM rt1, vt0, vt1, rt0 WHERE ((+ (rt1.c1)) COLLATE BINARY);
SELECT * FROM vt1 WHERE (((GLOB(vt1.c0, vt1.c0))GLOB(CASE vt1.c0  WHEN '-1245769143' THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((GLOB(vt1.c0, vt1.c0))GLOB(CASE vt1.c0  WHEN '-1245769143' THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((GLOB(vt1.c0, vt1.c0))GLOB(CASE vt1.c0  WHEN '-1245769143' THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((GLOB(vt1.c0, vt1.c0))GLOB(CASE vt1.c0  WHEN '-1245769143' THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((GLOB(vt1.c0, vt1.c0))GLOB(CASE vt1.c0  WHEN '-1245769143' THEN vt1.c0 END)));
SELECT * FROM vt1, rt0 WHERE (((((((vt1.c0)GLOB(rt0.c2)))OR(json_insert(vt1.c0, vt1.c0, rt0.c0))))OR(((((rt0.c0)AND(rt0.c2)))OR(rt0.c0))))) ORDER BY vt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)GLOB(rt0.c2)))OR(json_insert(vt1.c0, vt1.c0, rt0.c0))))OR(((((rt0.c0)AND(rt0.c2)))OR(rt0.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY vt1.c0 DESC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (((((((vt1.c0)GLOB(rt0.c2)))OR(json_insert(vt1.c0, vt1.c0, rt0.c0))))OR(((((rt0.c0)AND(rt0.c2)))OR(rt0.c0))))) ORDER BY vt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)GLOB(rt0.c2)))OR(json_insert(vt1.c0, vt1.c0, rt0.c0))))OR(((((rt0.c0)AND(rt0.c2)))OR(rt0.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY vt1.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1, vt1 WHERE ((~ (rt1.c2))) ORDER BY ((((NULL)AND((((rt0.c1))<((rt0.c2))))))AND(((((vt0.c0)AND(rt0.c0)))OR(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt1.c2))) IS TRUE)  as count FROM vt0, rt0, rt1, vt1 ORDER BY ((((NULL)AND((((rt0.c1))<((rt0.c2))))))AND(((((vt0.c0)AND(rt0.c0)))OR(vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1, vt1 WHERE ((~ (rt1.c2))) ORDER BY ((((NULL)AND((((rt0.c1))<((rt0.c2))))))AND(((((vt0.c0)AND(rt0.c0)))OR(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt1.c2))) IS TRUE)  as count FROM vt0, rt0, rt1, vt1 ORDER BY ((((NULL)AND((((rt0.c1))<((rt0.c2))))))AND(((((vt0.c0)AND(rt0.c0)))OR(vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1, vt1 WHERE ((~ (rt1.c2))) ORDER BY ((((NULL)AND((((rt0.c1))<((rt0.c2))))))AND(((((vt0.c0)AND(rt0.c0)))OR(vt0.c0)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt1, vt0 WHERE (CASE WHEN load_extension(rt1.c3, rt1.c1) THEN (rt1.c2 IN (rt1.c2)) WHEN (rt1.c0 IN (rt1.c0, rt1.c2)) THEN rt1.c3 WHEN (rt1.c0 IN ()) THEN rt1.c4 COLLATE BINARY ELSE ((vt1.c0) NOT BETWEEN ('Al#3') AND (rt1.c4)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN load_extension(rt1.c3, rt1.c1) THEN (rt1.c2 IN (rt1.c2)) WHEN (rt1.c0 IN (rt1.c0, rt1.c2)) THEN rt1.c3 WHEN (rt1.c0 IN ()) THEN rt1.c4 COLLATE BINARY ELSE ((vt1.c0) NOT BETWEEN ('Al#3') AND (rt1.c4)) END) IS TRUE)  as count FROM vt1, rt1, vt0);
SELECT COUNT(*) FROM vt1, rt1, vt0 WHERE (CASE WHEN load_extension(rt1.c3, rt1.c1) THEN (rt1.c2 IN (rt1.c2)) WHEN (rt1.c0 IN (rt1.c0, rt1.c2)) THEN rt1.c3 WHEN (rt1.c0 IN ()) THEN rt1.c4 COLLATE BINARY ELSE ((vt1.c0) NOT BETWEEN ('Al#3') AND (rt1.c4)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN load_extension(rt1.c3, rt1.c1) THEN (rt1.c2 IN (rt1.c2)) WHEN (rt1.c0 IN (rt1.c0, rt1.c2)) THEN rt1.c3 WHEN (rt1.c0 IN ()) THEN rt1.c4 COLLATE BINARY ELSE ((vt1.c0) NOT BETWEEN ('Al#3') AND (rt1.c4)) END) IS TRUE)  as count FROM vt1, rt1, vt0);
SELECT COUNT(*) FROM vt1, rt1, vt0 WHERE (CASE WHEN load_extension(rt1.c3, rt1.c1) THEN (rt1.c2 IN (rt1.c2)) WHEN (rt1.c0 IN (rt1.c0, rt1.c2)) THEN rt1.c3 WHEN (rt1.c0 IN ()) THEN rt1.c4 COLLATE BINARY ELSE ((vt1.c0) NOT BETWEEN ('Al#3') AND (rt1.c4)) END);
SELECT ALL COUNT(*) FROM rt0, vt1 INNER JOIN rt1 ON (((rt0.c0)) BETWEEN (((((rt0.c1))<((rt1.c0))))) AND (((rt1.c1 IN (rt0.c1))))) INNER JOIN vt0 ON (+ (((vt1.c0) NOT BETWEEN (rt1.c1) AND (vt1.c0)))) WHERE (((((rt0.c1) NOT BETWEEN (rt1.c3) AND (vt0.c0)))>(((((rt0.c1)AND(rt0.c0)))AND(rt1.c2))))) ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt1.c3) AND (vt0.c0)))>(((((rt0.c1)AND(rt0.c0)))AND(rt1.c2))))) IS TRUE)  as count FROM rt0, vt1 INNER JOIN rt1 ON (((rt0.c0)) BETWEEN (((((rt0.c1))<((rt1.c0))))) AND (((rt1.c1 IN (rt0.c1))))) INNER JOIN vt0 ON (+ (((vt1.c0) NOT BETWEEN (rt1.c1) AND (vt1.c0)))) ORDER BY vt1.c0 ASC);
SELECT ALL COUNT(*) FROM rt0, vt1 INNER JOIN rt1 ON (((rt0.c0)) BETWEEN (((((rt0.c1))<((rt1.c0))))) AND (((rt1.c1 IN (rt0.c1))))) INNER JOIN vt0 ON (+ (((vt1.c0) NOT BETWEEN (rt1.c1) AND (vt1.c0)))) WHERE (((((rt0.c1) NOT BETWEEN (rt1.c3) AND (vt0.c0)))>(((((rt0.c1)AND(rt0.c0)))AND(rt1.c2))))) ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt1.c3) AND (vt0.c0)))>(((((rt0.c1)AND(rt0.c0)))AND(rt1.c2))))) IS TRUE)  as count FROM rt0, vt1 INNER JOIN rt1 ON (((rt0.c0)) BETWEEN (((((rt0.c1))<((rt1.c0))))) AND (((rt1.c1 IN (rt0.c1))))) INNER JOIN vt0 ON (+ (((vt1.c0) NOT BETWEEN (rt1.c1) AND (vt1.c0)))) ORDER BY vt1.c0 ASC);
SELECT ALL COUNT(*) FROM rt0, vt1 INNER JOIN rt1 ON (((rt0.c0)) BETWEEN (((((rt0.c1))<((rt1.c0))))) AND (((rt1.c1 IN (rt0.c1))))) INNER JOIN vt0 ON (+ (((vt1.c0) NOT BETWEEN (rt1.c1) AND (vt1.c0)))) WHERE (((((rt0.c1) NOT BETWEEN (rt1.c3) AND (vt0.c0)))>(((((rt0.c1)AND(rt0.c0)))AND(rt1.c2))))) ORDER BY vt1.c0 ASC;
SELECT * FROM vt0 FULL OUTER JOIN rt1 ON ((CAST(rt1.c4 AS INTEGER))>=(TRIM(DISTINCT NULL))) FULL OUTER JOIN rt0 ON 1.302209752E9 CROSS JOIN vt1 ON TRIM(rt1.c1) WHERE (((((rt1.c3)==(rt1.c4))) NOT BETWEEN (((rt0.c0) BETWEEN (rt1.c4) AND (rt0.c0))) AND (rt1.c4 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)==(rt1.c4))) NOT BETWEEN (((rt0.c0) BETWEEN (rt1.c4) AND (rt0.c0))) AND (rt1.c4 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON ((CAST(rt1.c4 AS INTEGER))>=(TRIM(DISTINCT NULL))) FULL OUTER JOIN rt0 ON 1.302209752E9 CROSS JOIN vt1 ON TRIM(rt1.c1));
SELECT * FROM vt0 FULL OUTER JOIN rt1 ON ((CAST(rt1.c4 AS INTEGER))>=(TRIM(DISTINCT NULL))) FULL OUTER JOIN rt0 ON 1.302209752E9 CROSS JOIN vt1 ON TRIM(rt1.c1) WHERE (((((rt1.c3)==(rt1.c4))) NOT BETWEEN (((rt0.c0) BETWEEN (rt1.c4) AND (rt0.c0))) AND (rt1.c4 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)==(rt1.c4))) NOT BETWEEN (((rt0.c0) BETWEEN (rt1.c4) AND (rt0.c0))) AND (rt1.c4 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON ((CAST(rt1.c4 AS INTEGER))>=(TRIM(DISTINCT NULL))) FULL OUTER JOIN rt0 ON 1.302209752E9 CROSS JOIN vt1 ON TRIM(rt1.c1));
SELECT * FROM vt0 FULL OUTER JOIN rt1 ON ((CAST(rt1.c4 AS INTEGER))>=(TRIM(DISTINCT NULL))) FULL OUTER JOIN rt0 ON 1.302209752E9 CROSS JOIN vt1 ON TRIM(rt1.c1) WHERE (((((rt1.c3)==(rt1.c4))) NOT BETWEEN (((rt0.c0) BETWEEN (rt1.c4) AND (rt0.c0))) AND (rt1.c4 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))OR(CASE rt1.c2  WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))OR(CASE rt1.c2  WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))OR(CASE rt1.c2  WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))OR(CASE rt1.c2  WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))OR(CASE rt1.c2  WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c2 END)));
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (CAST(vt1.c0 COLLATE RTRIM AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (CAST(vt1.c0 COLLATE RTRIM AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (CAST(vt1.c0 COLLATE RTRIM AS REAL));
SELECT * FROM vt1, rt1 WHERE (TYPEOF(((((((((NULL)OR('152857212')))AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((((((((NULL)OR('152857212')))AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c1)))) IS TRUE)  as count FROM vt1, rt1);
SELECT * FROM vt1, rt1 WHERE (TYPEOF(((((((((NULL)OR('152857212')))AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((((((((NULL)OR('152857212')))AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c1)))) IS TRUE)  as count FROM vt1, rt1);
SELECT * FROM vt1, rt1 WHERE (TYPEOF(((((((((NULL)OR('152857212')))AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c1))));
SELECT * FROM rt1 WHERE (CASE ((rt1.c1) IS FALSE)  WHEN ((rt1.c1)>(NULL)) THEN CAST(rt1.c4 AS NUMERIC) ELSE (rt1.c1 IN (rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c1) IS FALSE)  WHEN ((rt1.c1)>(NULL)) THEN CAST(rt1.c4 AS NUMERIC) ELSE (rt1.c1 IN (rt1.c1)) END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE ((rt1.c1) IS FALSE)  WHEN ((rt1.c1)>(NULL)) THEN CAST(rt1.c4 AS NUMERIC) ELSE (rt1.c1 IN (rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c1) IS FALSE)  WHEN ((rt1.c1)>(NULL)) THEN CAST(rt1.c4 AS NUMERIC) ELSE (rt1.c1 IN (rt1.c1)) END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE ((rt1.c1) IS FALSE)  WHEN ((rt1.c1)>(NULL)) THEN CAST(rt1.c4 AS NUMERIC) ELSE (rt1.c1 IN (rt1.c1)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0) IS TRUE), (+ (rt0.c1)), TIME(rt0.c1, rt0.c1, rt0.c2)))>((((rt0.c0) NOT BETWEEN (x'') AND ('')), ((((((((rt0.c0)AND(NULL)))AND(NULL)))AND(rt0.c2)))AND(rt0.c2)), (~ (rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0) IS TRUE), (+ (rt0.c1)), TIME(rt0.c1, rt0.c1, rt0.c2)))>((((rt0.c0) NOT BETWEEN (x'') AND ('')), ((((((((rt0.c0)AND(NULL)))AND(NULL)))AND(rt0.c2)))AND(rt0.c2)), (~ (rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0) IS TRUE), (+ (rt0.c1)), TIME(rt0.c1, rt0.c1, rt0.c2)))>((((rt0.c0) NOT BETWEEN (x'') AND ('')), ((((((((rt0.c0)AND(NULL)))AND(NULL)))AND(rt0.c2)))AND(rt0.c2)), (~ (rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0) IS TRUE), (+ (rt0.c1)), TIME(rt0.c1, rt0.c1, rt0.c2)))>((((rt0.c0) NOT BETWEEN (x'') AND ('')), ((((((((rt0.c0)AND(NULL)))AND(NULL)))AND(rt0.c2)))AND(rt0.c2)), (~ (rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0) IS TRUE), (+ (rt0.c1)), TIME(rt0.c1, rt0.c1, rt0.c2)))>((((rt0.c0) NOT BETWEEN (x'') AND ('')), ((((((((rt0.c0)AND(NULL)))AND(NULL)))AND(rt0.c2)))AND(rt0.c2)), (~ (rt0.c0))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT ALL * FROM rt1 WHERE (NULL COLLATE NOCASE) ORDER BY (((rt1.c0, rt1.c1, rt1.c3)) NOT BETWEEN (((rt1.c4 IN ()), (('?vDt') IS TRUE), ((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c4)))) AND ((((rt1.c0) IS FALSE), CASE rt1.c0  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c0 END, '%哘48ⴌ')));
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0, rt1.c1, rt1.c3)) NOT BETWEEN (((rt1.c4 IN ()), (('?vDt') IS TRUE), ((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c4)))) AND ((((rt1.c0) IS FALSE), CASE rt1.c0  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c0 END, '%哘48ⴌ'))));
SELECT ALL * FROM rt1 WHERE (NULL COLLATE NOCASE) ORDER BY (((rt1.c0, rt1.c1, rt1.c3)) NOT BETWEEN (((rt1.c4 IN ()), (('?vDt') IS TRUE), ((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c4)))) AND ((((rt1.c0) IS FALSE), CASE rt1.c0  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c0 END, '%哘48ⴌ')));
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0, rt1.c1, rt1.c3)) NOT BETWEEN (((rt1.c4 IN ()), (('?vDt') IS TRUE), ((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c4)))) AND ((((rt1.c0) IS FALSE), CASE rt1.c0  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c0 END, '%哘48ⴌ'))));
SELECT ALL * FROM rt1 WHERE (NULL COLLATE NOCASE) ORDER BY (((rt1.c0, rt1.c1, rt1.c3)) NOT BETWEEN (((rt1.c4 IN ()), (('?vDt') IS TRUE), ((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c4)))) AND ((((rt1.c0) IS FALSE), CASE rt1.c0  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c0 END, '%哘48ⴌ')));
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 NATURAL JOIN rt1 WHERE (CASE WHEN rt1.c3 COLLATE BINARY THEN ((vt1.c0) NOT NULL) WHEN (+ (rt0.c0)) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt1.c3)) WHEN (rt0.c1 IN ()) THEN rt1.c1 COLLATE NOCASE ELSE CAST(rt0.c2 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c3 COLLATE BINARY THEN ((vt1.c0) NOT NULL) WHEN (+ (rt0.c0)) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt1.c3)) WHEN (rt0.c1 IN ()) THEN rt1.c1 COLLATE NOCASE ELSE CAST(rt0.c2 AS BLOB) END) IS TRUE)  as count FROM vt1, vt0, rt0 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 NATURAL JOIN rt1 WHERE (CASE WHEN rt1.c3 COLLATE BINARY THEN ((vt1.c0) NOT NULL) WHEN (+ (rt0.c0)) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt1.c3)) WHEN (rt0.c1 IN ()) THEN rt1.c1 COLLATE NOCASE ELSE CAST(rt0.c2 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c3 COLLATE BINARY THEN ((vt1.c0) NOT NULL) WHEN (+ (rt0.c0)) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt1.c3)) WHEN (rt0.c1 IN ()) THEN rt1.c1 COLLATE NOCASE ELSE CAST(rt0.c2 AS BLOB) END) IS TRUE)  as count FROM vt1, vt0, rt0 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 NATURAL JOIN rt1 WHERE (CASE WHEN rt1.c3 COLLATE BINARY THEN ((vt1.c0) NOT NULL) WHEN (+ (rt0.c0)) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt1.c3)) WHEN (rt0.c1 IN ()) THEN rt1.c1 COLLATE NOCASE ELSE CAST(rt0.c2 AS BLOB) END);
SELECT ALL * FROM vt0, rt0 WHERE (((CASE rt0.c2  WHEN 0.1730553946575949 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END)LIKE(((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0))))) ORDER BY ((CAST('}硣' AS NUMERIC)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 END) AND (json_remove(rt0.c0, rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN 0.1730553946575949 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END)LIKE(((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CAST('}硣' AS NUMERIC)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 END) AND (json_remove(rt0.c0, rt0.c1))));
SELECT ALL * FROM vt0, rt0 WHERE (((CASE rt0.c2  WHEN 0.1730553946575949 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END)LIKE(((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0))))) ORDER BY ((CAST('}硣' AS NUMERIC)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 END) AND (json_remove(rt0.c0, rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN 0.1730553946575949 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END)LIKE(((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CAST('}硣' AS NUMERIC)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 END) AND (json_remove(rt0.c0, rt0.c1))));
SELECT ALL * FROM vt0, rt0 WHERE (((CASE rt0.c2  WHEN 0.1730553946575949 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END)LIKE(((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0))))) ORDER BY ((CAST('}硣' AS NUMERIC)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 END) AND (json_remove(rt0.c0, rt0.c1)));
SELECT ALL * FROM rt0, vt1 RIGHT OUTER JOIN rt1 ON (((CASE rt1.c0  WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c3 END, '', (((vt1.c0))==((rt1.c3)))))>(((~ (vt1.c0)), ((x'')%(rt1.c3)), ABS('F3n''')))) WHERE (CASE WHEN ((((rt0.c0)AND(rt1.c3)))OR(rt0.c0)) THEN ((((((((rt1.c0)OR(rt1.c2)))AND(rt0.c2)))AND(0xffffffffb05c9a3c)))AND(rt0.c0)) END) ORDER BY UPPER(DISTINCT IFNULL(DISTINCT NULL, rt1.c4));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt0.c0)AND(rt1.c3)))OR(rt0.c0)) THEN ((((((((rt1.c0)OR(rt1.c2)))AND(rt0.c2)))AND(0Xffffffffb05c9a3c)))AND(rt0.c0)) END) IS TRUE)  as count FROM rt0, vt1 RIGHT OUTER JOIN rt1 ON (((CASE rt1.c0  WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c3 END, '', (((vt1.c0))=((rt1.c3)))))>(((~ (vt1.c0)), ((x'')%(rt1.c3)), ABS('F3n''')))) ORDER BY UPPER(DISTINCT IFNULL(DISTINCT NULL, rt1.c4)));
SELECT ALL * FROM rt0, vt1 RIGHT OUTER JOIN rt1 ON (((CASE rt1.c0  WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c3 END, '', (((vt1.c0))==((rt1.c3)))))>(((~ (vt1.c0)), ((x'')%(rt1.c3)), ABS('F3n''')))) WHERE (CASE WHEN ((((rt0.c0)AND(rt1.c3)))OR(rt0.c0)) THEN ((((((((rt1.c0)OR(rt1.c2)))AND(rt0.c2)))AND(0xffffffffb05c9a3c)))AND(rt0.c0)) END) ORDER BY UPPER(DISTINCT IFNULL(DISTINCT NULL, rt1.c4));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt0.c0)AND(rt1.c3)))OR(rt0.c0)) THEN ((((((((rt1.c0)OR(rt1.c2)))AND(rt0.c2)))AND(0Xffffffffb05c9a3c)))AND(rt0.c0)) END) IS TRUE)  as count FROM rt0, vt1 RIGHT OUTER JOIN rt1 ON (((CASE rt1.c0  WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c3 END, '', (((vt1.c0))=((rt1.c3)))))>(((~ (vt1.c0)), ((x'')%(rt1.c3)), ABS('F3n''')))) ORDER BY UPPER(DISTINCT IFNULL(DISTINCT NULL, rt1.c4)));
SELECT ALL * FROM rt0, vt1 RIGHT OUTER JOIN rt1 ON (((CASE rt1.c0  WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c3 END, '', (((vt1.c0))==((rt1.c3)))))>(((~ (vt1.c0)), ((x'')%(rt1.c3)), ABS('F3n''')))) WHERE (CASE WHEN ((((rt0.c0)AND(rt1.c3)))OR(rt0.c0)) THEN ((((((((rt1.c0)OR(rt1.c2)))AND(rt0.c2)))AND(0xffffffffb05c9a3c)))AND(rt0.c0)) END) ORDER BY UPPER(DISTINCT IFNULL(DISTINCT NULL, rt1.c4));
SELECT * FROM rt1, rt0, vt0, vt1 WHERE ((NOT (CAST(0X3bb7fe68 AS NUMERIC)))) ORDER BY ((vt0.c0 COLLATE BINARY) NOT BETWEEN (LIKE(vt1.c0, rt1.c0)) AND (CASE rt1.c3  WHEN vt0.c0 THEN vt1.c0 WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c2 THEN rt0.c2 END));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(0x3bb7fe68 AS NUMERIC)))) IS TRUE)  as count FROM rt1, rt0, vt0, vt1 ORDER BY ((vt0.c0 COLLATE BINARY) NOT BETWEEN (LIKE(vt1.c0, rt1.c0)) AND (CASE rt1.c3  WHEN vt0.c0 THEN vt1.c0 WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c2 THEN rt0.c2 END)));
SELECT * FROM rt1, rt0, vt0, vt1 WHERE ((NOT (CAST(0X3bb7fe68 AS NUMERIC)))) ORDER BY ((vt0.c0 COLLATE BINARY) NOT BETWEEN (LIKE(vt1.c0, rt1.c0)) AND (CASE rt1.c3  WHEN vt0.c0 THEN vt1.c0 WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c2 THEN rt0.c2 END));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(0x3bb7fe68 AS NUMERIC)))) IS TRUE)  as count FROM rt1, rt0, vt0, vt1 ORDER BY ((vt0.c0 COLLATE BINARY) NOT BETWEEN (LIKE(vt1.c0, rt1.c0)) AND (CASE rt1.c3  WHEN vt0.c0 THEN vt1.c0 WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c2 THEN rt0.c2 END)));
SELECT * FROM rt1, rt0, vt0, vt1 WHERE ((NOT (CAST(0X3bb7fe68 AS NUMERIC)))) ORDER BY ((vt0.c0 COLLATE BINARY) NOT BETWEEN (LIKE(vt1.c0, rt1.c0)) AND (CASE rt1.c3  WHEN vt0.c0 THEN vt1.c0 WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c2 THEN rt0.c2 END));
SELECT * FROM vt0, rt0, vt1 WHERE (COALESCE(((NULL)*(rt0.c1)), (rt0.c1 IN (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((NULL)*(rt0.c1)), (rt0.c1 IN (rt0.c0)))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT * FROM vt0, rt0, vt1 WHERE (COALESCE(((NULL)*(rt0.c1)), (rt0.c1 IN (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((NULL)*(rt0.c1)), (rt0.c1 IN (rt0.c0)))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT * FROM vt0, rt0, vt1 WHERE (COALESCE(((NULL)*(rt0.c1)), (rt0.c1 IN (rt0.c0))));
SELECT ALL * FROM vt0, rt0, vt1 WHERE ((~ (((((rt0.c1)OR(rt0.c2)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((((rt0.c1)OR(rt0.c2)))AND(vt1.c0))))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL * FROM vt0, rt0, vt1 WHERE ((~ (((((rt0.c1)OR(rt0.c2)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((((rt0.c1)OR(rt0.c2)))AND(vt1.c0))))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL * FROM vt0, rt0, vt1 WHERE ((~ (((((rt0.c1)OR(rt0.c2)))AND(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((('2129348683') IS TRUE)) NOT BETWEEN ((- (vt1.c0))) AND (((vt1.c0)IS(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((('2129348683') IS TRUE)) NOT BETWEEN ((- (vt1.c0))) AND (((vt1.c0)IS(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((('2129348683') IS TRUE)) NOT BETWEEN ((- (vt1.c0))) AND (((vt1.c0)IS(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((('2129348683') IS TRUE)) NOT BETWEEN ((- (vt1.c0))) AND (((vt1.c0)IS(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((('2129348683') IS TRUE)) NOT BETWEEN ((- (vt1.c0))) AND (((vt1.c0)IS(vt1.c0)))));
SELECT ALL * FROM vt1, rt0, rt1 WHERE ((((rt1.c0 IN ()))/((rt1.c1 IN (rt1.c4)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN ()))/((rt1.c1 IN (rt1.c4))))) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT ALL * FROM vt1, rt0, rt1 WHERE ((((rt1.c0 IN ()))/((rt1.c1 IN (rt1.c4)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN ()))/((rt1.c1 IN (rt1.c4))))) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT ALL * FROM vt1, rt0, rt1 WHERE ((((rt1.c0 IN ()))/((rt1.c1 IN (rt1.c4)))));
SELECT ALL COUNT(*) FROM rt0, rt1 INNER JOIN vt0 ON (((rt0.c0)==(rt1.c4)) IN ()) WHERE ((((- (rt0.c2))) BETWEEN ((- (rt1.c4))) AND ((+ (rt0.c2))))) ORDER BY ((vt0.c0) BETWEEN (x'0c51') AND ((NOT (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c2))) BETWEEN ((- (rt1.c4))) AND ((+ (rt0.c2))))) IS TRUE)  as count FROM rt0, rt1 INNER JOIN vt0 ON (((rt0.c0)==(rt1.c4)) IN ()) ORDER BY ((vt0.c0) BETWEEN (x'0c51') AND ((NOT (vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM rt0, rt1 INNER JOIN vt0 ON (((rt0.c0)==(rt1.c4)) IN ()) WHERE ((((- (rt0.c2))) BETWEEN ((- (rt1.c4))) AND ((+ (rt0.c2))))) ORDER BY ((vt0.c0) BETWEEN (x'0c51') AND ((NOT (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c2))) BETWEEN ((- (rt1.c4))) AND ((+ (rt0.c2))))) IS TRUE)  as count FROM rt0, rt1 INNER JOIN vt0 ON (((rt0.c0)==(rt1.c4)) IN ()) ORDER BY ((vt0.c0) BETWEEN (x'0c51') AND ((NOT (vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM rt0, rt1 INNER JOIN vt0 ON (((rt0.c0)==(rt1.c4)) IN ()) WHERE ((((- (rt0.c2))) BETWEEN ((- (rt1.c4))) AND ((+ (rt0.c2))))) ORDER BY ((vt0.c0) BETWEEN (x'0c51') AND ((NOT (vt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (LIKELIHOOD((- (rt0.c0)), 0.8188609929656397)) ORDER BY rt0.c2 ASC, (((rt1.c2 IN ()))IS NOT(((rt0.c2) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((- (rt0.c0)), 0.8188609929656397)) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY rt0.c2 ASC, (((rt1.c2 IN ()))IS NOT(((rt0.c2) IS TRUE))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (LIKELIHOOD((- (rt0.c0)), 0.8188609929656397)) ORDER BY rt0.c2 ASC, (((rt1.c2 IN ()))IS NOT(((rt0.c2) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((- (rt0.c0)), 0.8188609929656397)) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY rt0.c2 ASC, (((rt1.c2 IN ()))IS NOT(((rt0.c2) IS TRUE))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (LIKELIHOOD((- (rt0.c0)), 0.8188609929656397)) ORDER BY rt0.c2 ASC, (((rt1.c2 IN ()))IS NOT(((rt0.c2) IS TRUE))) DESC;
SELECT * FROM rt1 WHERE ((((rt1.c3, rt1.c0, rt1.c3)) BETWEEN (((rt1.c2 IN ()), CAST(rt1.c3 AS BLOB), ((((rt1.c2)AND(rt1.c2)))AND(rt1.c2)))) AND ((((rt1.c4)IS NOT(rt1.c4)), CAST(rt1.c1 AS NUMERIC), SUBSTR(rt1.c2, rt1.c1))))) ORDER BY LIKELY(UPPER(rt1.c3));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3, rt1.c0, rt1.c3)) BETWEEN (((rt1.c2 IN ()), CAST(rt1.c3 AS BLOB), ((((rt1.c2)AND(rt1.c2)))AND(rt1.c2)))) AND ((((rt1.c4)IS NOT(rt1.c4)), CAST(rt1.c1 AS NUMERIC), SUBSTR(rt1.c2, rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY LIKELY(UPPER(rt1.c3)));
SELECT * FROM rt1 WHERE ((((rt1.c3, rt1.c0, rt1.c3)) BETWEEN (((rt1.c2 IN ()), CAST(rt1.c3 AS BLOB), ((((rt1.c2)AND(rt1.c2)))AND(rt1.c2)))) AND ((((rt1.c4)IS NOT(rt1.c4)), CAST(rt1.c1 AS NUMERIC), SUBSTR(rt1.c2, rt1.c1))))) ORDER BY LIKELY(UPPER(rt1.c3));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3, rt1.c0, rt1.c3)) BETWEEN (((rt1.c2 IN ()), CAST(rt1.c3 AS BLOB), ((((rt1.c2)AND(rt1.c2)))AND(rt1.c2)))) AND ((((rt1.c4)IS NOT(rt1.c4)), CAST(rt1.c1 AS NUMERIC), SUBSTR(rt1.c2, rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY LIKELY(UPPER(rt1.c3)));
SELECT * FROM rt1 WHERE ((((rt1.c3, rt1.c0, rt1.c3)) BETWEEN (((rt1.c2 IN ()), CAST(rt1.c3 AS BLOB), ((((rt1.c2)AND(rt1.c2)))AND(rt1.c2)))) AND ((((rt1.c4)IS NOT(rt1.c4)), CAST(rt1.c1 AS NUMERIC), SUBSTR(rt1.c2, rt1.c1))))) ORDER BY LIKELY(UPPER(rt1.c3));
SELECT ALL COUNT(*) FROM vt0, rt1, vt1 WHERE (CAST(CAST(rt1.c2 AS TEXT) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c2 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM vt0, rt1, vt1);
SELECT ALL COUNT(*) FROM vt0, rt1, vt1 WHERE (CAST(CAST(rt1.c2 AS TEXT) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c2 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM vt0, rt1, vt1);
SELECT ALL COUNT(*) FROM vt0, rt1, vt1 WHERE (CAST(CAST(rt1.c2 AS TEXT) AS INTEGER));
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE ((((((0X23e084b2))<((rt1.c3))))GLOB(x'')));
SELECT SUM(count) FROM (SELECT (((((((0X23e084b2))<((rt1.c3))))GLOB(x''))) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE ((((((0X23e084b2))<((rt1.c3))))GLOB(x'')));
SELECT SUM(count) FROM (SELECT (((((((0X23e084b2))<((rt1.c3))))GLOB(x''))) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE ((((((0X23e084b2))<((rt1.c3))))GLOB(x'')));
SELECT * FROM rt0 INNER JOIN rt1 ON (~ (rt1.c0)) WHERE (((CAST(rt1.c1 AS NUMERIC)) BETWEEN ((- (rt0.c2))) AND (((rt0.c0)+(rt1.c4))))) ORDER BY (- (((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS NUMERIC)) BETWEEN ((- (rt0.c2))) AND (((rt0.c0)+(rt1.c4))))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON (~ (rt1.c0)) ORDER BY (- (((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c1)))) DESC);
SELECT * FROM rt0 INNER JOIN rt1 ON (~ (rt1.c0)) WHERE (((CAST(rt1.c1 AS NUMERIC)) BETWEEN ((- (rt0.c2))) AND (((rt0.c0)+(rt1.c4))))) ORDER BY (- (((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS NUMERIC)) BETWEEN ((- (rt0.c2))) AND (((rt0.c0)+(rt1.c4))))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON (~ (rt1.c0)) ORDER BY (- (((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c1)))) DESC);
SELECT * FROM rt0 INNER JOIN rt1 ON (~ (rt1.c0)) WHERE (((CAST(rt1.c1 AS NUMERIC)) BETWEEN ((- (rt0.c2))) AND (((rt0.c0)+(rt1.c4))))) ORDER BY (- (((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c1)))) DESC;
SELECT * FROM rt0 WHERE ((((((((('1543881162' COLLATE RTRIM)OR(((rt0.c1) IS FALSE))))AND(CAST(rt0.c1 AS REAL))))OR(((rt0.c2)*(rt0.c0)))))AND(UPPER(DISTINCT rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((((('1543881162' COLLATE RTRIM)OR(((rt0.c1) IS FALSE))))AND(CAST(rt0.c1 AS REAL))))OR(((rt0.c2)*(rt0.c0)))))AND(UPPER(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((((('1543881162' COLLATE RTRIM)OR(((rt0.c1) IS FALSE))))AND(CAST(rt0.c1 AS REAL))))OR(((rt0.c2)*(rt0.c0)))))AND(UPPER(DISTINCT rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((((('1543881162' COLLATE RTRIM)OR(((rt0.c1) IS FALSE))))AND(CAST(rt0.c1 AS REAL))))OR(((rt0.c2)*(rt0.c0)))))AND(UPPER(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((((('1543881162' COLLATE RTRIM)OR(((rt0.c1) IS FALSE))))AND(CAST(rt0.c1 AS REAL))))OR(((rt0.c2)*(rt0.c0)))))AND(UPPER(DISTINCT rt0.c0))));
SELECT * FROM vt1 WHERE (NULL) ORDER BY (((~ (vt1.c0)))%((+ ('lk')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1 ORDER BY (((~ (vt1.c0)))%((+ ('lk')))) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (NULL) ORDER BY (((~ (vt1.c0)))%((+ ('lk')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1 ORDER BY (((~ (vt1.c0)))%((+ ('lk')))) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (NULL) ORDER BY (((~ (vt1.c0)))%((+ ('lk')))) ASC  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (TYPEOF((((vt1.c0))==((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((((vt1.c0))==((vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (TYPEOF((((vt1.c0))==((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((((vt1.c0))==((vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (TYPEOF((((vt1.c0))==((vt0.c0)))));
