-- Time: 2024/06/11 15:06:29
-- Database: database77
-- Database version: 3.40.0
-- seed value: 1600965477
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0); -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2); -- 0ms;
UPDATE OR IGNORE rt1 SET c1=0.38775631962340584 WHERE ((((rt1.c1)<<(rt1.c0))) ISNULL); -- 0ms;
PRAGMA main.journal_mode; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=5'); -- 0ms;
PRAGMA temp.locking_mode; -- 0ms;
VACUUM; -- 2ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
REINDEX; -- 16ms;
SELECT rtreecheck('rt1'); -- 0ms;
INSERT OR ROLLBACK INTO rt1(c0) VALUES (0.5622698740006212); -- 11ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA main.mmap_size; -- 0ms;
INSERT OR FAIL INTO vt0 VALUES ('KY'); -- 2ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (x'e6aa32eb'); -- 0ms;
PRAGMA main.journal_mode; -- 0ms;
PRAGMA main.locking_mode; -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA recursive_triggers; -- 0ms;
COMMIT; -- 0ms;
UPDATE OR ABORT rt1 SET (c0)=(0Xffffffff9e69094d) WHERE rt1.c1; -- 0ms;
UPDATE OR IGNORE rt1 SET c1=NULL WHERE ((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)))GLOB((rt1.c1 IN (NULL, 842503428)))); -- 0ms;
UPDATE OR IGNORE rt1 SET (c0)=(x''); -- 0ms;
PRAGMA cache_spill; -- 0ms;
PRAGMA main.auto_vacuum = INCREMENTAL; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '59269'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '32037'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1521589036); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '55232'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1079153237);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1514485029);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 9); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 4ms;
INSERT OR IGNORE INTO vt0 VALUES (x'77f8'); -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET (c1)=(NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
CREATE VIEW v0(c0, c1, c2, c3, c4) AS SELECT DISTINCT TOTAL('') COLLATE RTRIM, ((((NULL) NOT NULL)) IS FALSE), LAG(((((rt1.c0)AND(rt1.c1)))-(((rt1.c2)>>(rt1.c0)))), (((rt1.c2) NOTNULL) IN (rt1.c0)), CAST(rt1.c1 AS NUMERIC)) OVER (), TOTAL(rt1.c0), json(vt0.c0) FROM rt1, vt0; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '2918'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
COMMIT; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -892838762);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
COMMIT; -- 0ms;
PRAGMA temp.mmap_size; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL); -- 1ms;
ANALYZE; -- 1ms;
INSERT OR FAIL INTO vt0 VALUES ('!J*Fr5&ÊèñO'); -- 0ms;
INSERT OR FAIL INTO rt1(c2) VALUES ('2018030776'); -- 0ms;
REINDEX; -- 0ms;
INSERT OR ROLLBACK INTO rt1(c1) VALUES (-2.13752874E8); -- 7ms;
UPDATE OR IGNORE rt1 SET c1=-213752874 WHERE CAST(((rt1.c1) BETWEEN (0.9782211610104448) AND (rt1.c2)) AS REAL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
UPDATE rt1 SET (c2, c2, c0)=('', x'', NULL) WHERE CAST(0.46613893263835426 AS REAL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1962885147); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '13272'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 7); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 907857498); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
END; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4); -- 1ms;
PRAGMA main.automatic_index = true; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.7505642543165205 WHERE vt0.c0; -- 0ms;
ANALYZE main; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 4ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1119809802); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -724218424);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=512858161,2');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE rt1 SET c1='' WHERE 0x6dfbfe5f; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1822494434); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1079153237);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 309742936); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -892838762);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1134207417); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
DROP TABLE rt0; -- 0ms;
PRAGMA busy_timeout = 10000; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (0.5756955854473226); -- 0ms;
REINDEX; -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 5ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED); -- 0ms;
ANALYZE; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '56324'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 922880126); -- 0ms;
UPDATE rt1 SET c0=NULL, c0=0.38775631962340584, c0='-7' WHERE json_array(((rt1.c2) NOT NULL), (NULL IN ())); -- 0ms;
PRAGMA mmap_size; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=671123915,3');\n; -- 0ms;
UPDATE vt1 SET (c0)=(0.38775631962340584) WHERE (NOT ((- (vt1.c0)))); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1(c0) VALUES (0.5316224406019278); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (6.71123915E8), (0xffffffffd269f11f), ('2018030776'), (''), ('1516279100'); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1661852469);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt1', ' sz=-1112234398 noskipscan'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
VACUUM main; -- 0ms;
VACUUM temp; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 COLLATE NOCASE AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 COLLATE NOCASE AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 COLLATE NOCASE AS INTEGER));
SELECT ALL * FROM v0 WHERE (x'ae82');
SELECT SUM(count) FROM (SELECT ALL ((x'ae82') IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (x'ae82');
SELECT SUM(count) FROM (SELECT ALL ((x'ae82') IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (x'ae82');
SELECT * FROM vt1, v0 RIGHT OUTER JOIN vt0 ON ((((x'') NOTNULL))+(CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c2 END)) WHERE (((((((((LIKELY(vt1.c0))AND(CASE vt1.c0  WHEN vt0.c0 THEN v0.c2 ELSE '0.9782211610104448' END)))AND(NULL)))AND(((vt1.c0)=(v0.c1)))))AND(v0.c1))) ORDER BY ((CASE v0.c2  WHEN v0.c0 THEN vt0.c0 ELSE NULL END)<=((NOT (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((LIKELY(vt1.c0))AND(CASE vt1.c0  WHEN vt0.c0 THEN v0.c2 ELSE '0.9782211610104448' END)))AND(NULL)))AND(((vt1.c0)==(v0.c1)))))AND(v0.c1))) IS TRUE)  as count FROM vt1, v0 RIGHT OUTER JOIN vt0 ON ((((x'') NOTNULL))+(CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c2 END)) ORDER BY ((CASE v0.c2  WHEN v0.c0 THEN vt0.c0 ELSE NULL END)<=((NOT (vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM vt1, v0 RIGHT OUTER JOIN vt0 ON ((((x'') NOTNULL))+(CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c2 END)) WHERE (((((((((LIKELY(vt1.c0))AND(CASE vt1.c0  WHEN vt0.c0 THEN v0.c2 ELSE '0.9782211610104448' END)))AND(NULL)))AND(((vt1.c0)=(v0.c1)))))AND(v0.c1))) ORDER BY ((CASE v0.c2  WHEN v0.c0 THEN vt0.c0 ELSE NULL END)<=((NOT (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((LIKELY(vt1.c0))AND(CASE vt1.c0  WHEN vt0.c0 THEN v0.c2 ELSE '0.9782211610104448' END)))AND(NULL)))AND(((vt1.c0)==(v0.c1)))))AND(v0.c1))) IS TRUE)  as count FROM vt1, v0 RIGHT OUTER JOIN vt0 ON ((((x'') NOTNULL))+(CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c2 END)) ORDER BY ((CASE v0.c2  WHEN v0.c0 THEN vt0.c0 ELSE NULL END)<=((NOT (vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM vt1, v0 RIGHT OUTER JOIN vt0 ON ((((x'') NOTNULL))+(CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c2 END)) WHERE (((((((((LIKELY(vt1.c0))AND(CASE vt1.c0  WHEN vt0.c0 THEN v0.c2 ELSE '0.9782211610104448' END)))AND(NULL)))AND(((vt1.c0)=(v0.c1)))))AND(v0.c1))) ORDER BY ((CASE v0.c2  WHEN v0.c0 THEN vt0.c0 ELSE NULL END)<=((NOT (vt0.c0)))) DESC  NULLS LAST;
SELECT * FROM v0, vt0, vt1, rt1 WHERE (TYPEOF(DISTINCT ((rt1.c2)<>(rt1.c2)))) ORDER BY (((v0.c2)) NOT BETWEEN ((LOWER(rt1.c2))) AND ((CASE WHEN vt1.c0 THEN vt0.c0 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((rt1.c2)!=(rt1.c2)))) IS TRUE)  as count FROM v0, vt0, vt1, rt1 ORDER BY (((v0.c2)) NOT BETWEEN ((LOWER(rt1.c2))) AND ((CASE WHEN vt1.c0 THEN vt0.c0 END)))  NULLS LAST);
SELECT * FROM v0, vt0, vt1, rt1 WHERE (TYPEOF(DISTINCT ((rt1.c2)<>(rt1.c2)))) ORDER BY (((v0.c2)) NOT BETWEEN ((LOWER(rt1.c2))) AND ((CASE WHEN vt1.c0 THEN vt0.c0 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((rt1.c2)!=(rt1.c2)))) IS TRUE)  as count FROM v0, vt0, vt1, rt1 ORDER BY (((v0.c2)) NOT BETWEEN ((LOWER(rt1.c2))) AND ((CASE WHEN vt1.c0 THEN vt0.c0 END)))  NULLS LAST);
SELECT * FROM v0, vt0, vt1, rt1 WHERE (TYPEOF(DISTINCT ((rt1.c2)<>(rt1.c2)))) ORDER BY (((v0.c2)) NOT BETWEEN ((LOWER(rt1.c2))) AND ((CASE WHEN vt1.c0 THEN vt0.c0 END)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt1, vt1 WHERE ((('-1637283507' COLLATE NOCASE) IS TRUE)) ORDER BY UPPER(((rt1.c0)<(vt0.c0)))  NULLS FIRST, ((CAST(vt0.c0 AS REAL)) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT (((('-1637283507' COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM vt0, rt1, vt1 ORDER BY UPPER(((rt1.c0)<(vt0.c0)))  NULLS FIRST, ((CAST(vt0.c0 AS REAL)) IS TRUE) ASC);
SELECT ALL COUNT(*) FROM vt0, rt1, vt1 WHERE ((('-1637283507' COLLATE NOCASE) IS TRUE)) ORDER BY UPPER(((rt1.c0)<(vt0.c0)))  NULLS FIRST, ((CAST(vt0.c0 AS REAL)) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT (((('-1637283507' COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM vt0, rt1, vt1 ORDER BY UPPER(((rt1.c0)<(vt0.c0)))  NULLS FIRST, ((CAST(vt0.c0 AS REAL)) IS TRUE) ASC);
SELECT ALL COUNT(*) FROM vt0, rt1, vt1 WHERE ((('-1637283507' COLLATE NOCASE) IS TRUE)) ORDER BY UPPER(((rt1.c0)<(vt0.c0)))  NULLS FIRST, ((CAST(vt0.c0 AS REAL)) IS TRUE) ASC;
SELECT COUNT(*) FROM vt1, v0, rt1 WHERE (v0.c3) ORDER BY CAST((NOT (rt1.c1)) AS REAL)  NULLS FIRST, '-1637283507' DESC  NULLS FIRST, (+ ((- (0.34054612487221125))));
SELECT SUM(count) FROM (SELECT ALL ((v0.c3) IS TRUE)  as count FROM vt1, v0, rt1 ORDER BY CAST((NOT (rt1.c1)) AS REAL)  NULLS FIRST, '-1637283507' DESC  NULLS FIRST, (+ ((- (0.34054612487221125)))));
SELECT COUNT(*) FROM vt1, v0, rt1 WHERE (v0.c3) ORDER BY CAST((NOT (rt1.c1)) AS REAL)  NULLS FIRST, '-1637283507' DESC  NULLS FIRST, (+ ((- (0.34054612487221125))));
SELECT SUM(count) FROM (SELECT ALL ((v0.c3) IS TRUE)  as count FROM vt1, v0, rt1 ORDER BY CAST((NOT (rt1.c1)) AS REAL)  NULLS FIRST, '-1637283507' DESC  NULLS FIRST, (+ ((- (0.34054612487221125)))));
SELECT COUNT(*) FROM vt1, v0, rt1 WHERE (v0.c3) ORDER BY CAST((NOT (rt1.c1)) AS REAL)  NULLS FIRST, '-1637283507' DESC  NULLS FIRST, (+ ((- (0.34054612487221125))));
SELECT ALL * FROM vt1 CROSS JOIN v0 ON CAST(UPPER(DISTINCT v0.c3) AS NUMERIC) FULL OUTER JOIN vt0 ON ((CASE v0.c4  WHEN rt1.c0 THEN rt1.c0 ELSE v0.c2 END)IS NOT(((rt1.c1)>(v0.c1)))) RIGHT OUTER JOIN rt1 ON ((((v0.c1) NOTNULL)) NOT BETWEEN ((((v0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND ((~ (v0.c3)))) WHERE (json_type(vt1.c0) COLLATE BINARY) ORDER BY rt1.c2, ((((((((((((vt0.c0)OR('206170278')))OR(v0.c3)))AND(rt1.c1)))AND(((rt1.c2)IS(rt1.c0)))))OR(CASE v0.c3  WHEN rt1.c2 THEN 0.0016851621737349332 END)))OR(CASE 0.9782211610104448  WHEN rt1.c0 THEN v0.c3 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_type(vt1.c0) COLLATE BINARY) IS TRUE)  as count FROM vt1 CROSS JOIN v0 ON CAST(UPPER(DISTINCT v0.c3) AS NUMERIC) FULL OUTER JOIN vt0 ON ((CASE v0.c4  WHEN rt1.c0 THEN rt1.c0 ELSE v0.c2 END)IS NOT(((rt1.c1)>(v0.c1)))) RIGHT OUTER JOIN rt1 ON ((((v0.c1) NOTNULL)) NOT BETWEEN ((((v0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND ((~ (v0.c3)))) ORDER BY rt1.c2, ((((((((((((vt0.c0)OR('206170278')))OR(v0.c3)))AND(rt1.c1)))AND(((rt1.c2)IS(rt1.c0)))))OR(CASE v0.c3  WHEN rt1.c2 THEN 0.0016851621737349332 END)))OR(CASE 0.9782211610104448  WHEN rt1.c0 THEN v0.c3 END)) ASC);
SELECT ALL * FROM vt1 CROSS JOIN v0 ON CAST(UPPER(DISTINCT v0.c3) AS NUMERIC) FULL OUTER JOIN vt0 ON ((CASE v0.c4  WHEN rt1.c0 THEN rt1.c0 ELSE v0.c2 END)IS NOT(((rt1.c1)>(v0.c1)))) RIGHT OUTER JOIN rt1 ON ((((v0.c1) NOTNULL)) NOT BETWEEN ((((v0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND ((~ (v0.c3)))) WHERE (json_type(vt1.c0) COLLATE BINARY) ORDER BY rt1.c2, ((((((((((((vt0.c0)OR('206170278')))OR(v0.c3)))AND(rt1.c1)))AND(((rt1.c2)IS(rt1.c0)))))OR(CASE v0.c3  WHEN rt1.c2 THEN 0.0016851621737349332 END)))OR(CASE 0.9782211610104448  WHEN rt1.c0 THEN v0.c3 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_type(vt1.c0) COLLATE BINARY) IS TRUE)  as count FROM vt1 CROSS JOIN v0 ON CAST(UPPER(DISTINCT v0.c3) AS NUMERIC) FULL OUTER JOIN vt0 ON ((CASE v0.c4  WHEN rt1.c0 THEN rt1.c0 ELSE v0.c2 END)IS NOT(((rt1.c1)>(v0.c1)))) RIGHT OUTER JOIN rt1 ON ((((v0.c1) NOTNULL)) NOT BETWEEN ((((v0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND ((~ (v0.c3)))) ORDER BY rt1.c2, ((((((((((((vt0.c0)OR('206170278')))OR(v0.c3)))AND(rt1.c1)))AND(((rt1.c2)IS(rt1.c0)))))OR(CASE v0.c3  WHEN rt1.c2 THEN 0.0016851621737349332 END)))OR(CASE 0.9782211610104448  WHEN rt1.c0 THEN v0.c3 END)) ASC);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM rt1, vt0 CROSS JOIN vt1 ON (((rt1.c1) BETWEEN (vt0.c0) AND (vt0.c0)) IN (rt1.c0 COLLATE RTRIM)) LEFT OUTER JOIN v0 ON ((((((((((((((((v0.c4)AND(v0.c3)))OR(vt1.c0)))AND(v0.c1)))AND(((v0.c4)!=(v0.c3)))))OR(((v0.c1) BETWEEN (rt1.c1) AND (v0.c3)))))AND((((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND (('-1166426837'))))))OR((((v0.c0, v0.c2, vt1.c0)) BETWEEN ((rt1.c0, vt1.c0, v0.c3)) AND ((rt1.c2, vt1.c0, rt1.c2))))))OR(v0.c0)) WHERE (((vt0.c0) BETWEEN ((((rt1.c0, v0.c4, v0.c0)) BETWEEN ((v0.c2, v0.c0, v0.c0)) AND ((rt1.c2, v0.c4, v0.c4)))) AND (((vt0.c0) NOTNULL)))) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN ((((rt1.c0, v0.c4, v0.c0)) BETWEEN ((v0.c2, v0.c0, v0.c0)) AND ((rt1.c2, v0.c4, v0.c4)))) AND (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt1, vt0 CROSS JOIN vt1 ON (((rt1.c1) BETWEEN (vt0.c0) AND (vt0.c0)) IN (rt1.c0 COLLATE RTRIM)) LEFT OUTER JOIN v0 ON ((((((((((((((((v0.c4)AND(v0.c3)))OR(vt1.c0)))AND(v0.c1)))AND(((v0.c4)<>(v0.c3)))))OR(((v0.c1) BETWEEN (rt1.c1) AND (v0.c3)))))AND((((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND (('-1166426837'))))))OR((((v0.c0, v0.c2, vt1.c0)) BETWEEN ((rt1.c0, vt1.c0, v0.c3)) AND ((rt1.c2, vt1.c0, rt1.c2))))))OR(v0.c0)) ORDER BY x'' ASC);
SELECT ALL * FROM rt1, vt0 CROSS JOIN vt1 ON (((rt1.c1) BETWEEN (vt0.c0) AND (vt0.c0)) IN (rt1.c0 COLLATE RTRIM)) LEFT OUTER JOIN v0 ON ((((((((((((((((v0.c4)AND(v0.c3)))OR(vt1.c0)))AND(v0.c1)))AND(((v0.c4)!=(v0.c3)))))OR(((v0.c1) BETWEEN (rt1.c1) AND (v0.c3)))))AND((((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND (('-1166426837'))))))OR((((v0.c0, v0.c2, vt1.c0)) BETWEEN ((rt1.c0, vt1.c0, v0.c3)) AND ((rt1.c2, vt1.c0, rt1.c2))))))OR(v0.c0)) WHERE (((vt0.c0) BETWEEN ((((rt1.c0, v0.c4, v0.c0)) BETWEEN ((v0.c2, v0.c0, v0.c0)) AND ((rt1.c2, v0.c4, v0.c4)))) AND (((vt0.c0) NOTNULL)))) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN ((((rt1.c0, v0.c4, v0.c0)) BETWEEN ((v0.c2, v0.c0, v0.c0)) AND ((rt1.c2, v0.c4, v0.c4)))) AND (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt1, vt0 CROSS JOIN vt1 ON (((rt1.c1) BETWEEN (vt0.c0) AND (vt0.c0)) IN (rt1.c0 COLLATE RTRIM)) LEFT OUTER JOIN v0 ON ((((((((((((((((v0.c4)AND(v0.c3)))OR(vt1.c0)))AND(v0.c1)))AND(((v0.c4)<>(v0.c3)))))OR(((v0.c1) BETWEEN (rt1.c1) AND (v0.c3)))))AND((((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND (('-1166426837'))))))OR((((v0.c0, v0.c2, vt1.c0)) BETWEEN ((rt1.c0, vt1.c0, v0.c3)) AND ((rt1.c2, vt1.c0, rt1.c2))))))OR(v0.c0)) ORDER BY x'' ASC);
SELECT ALL * FROM rt1, vt0 CROSS JOIN vt1 ON (((rt1.c1) BETWEEN (vt0.c0) AND (vt0.c0)) IN (rt1.c0 COLLATE RTRIM)) LEFT OUTER JOIN v0 ON ((((((((((((((((v0.c4)AND(v0.c3)))OR(vt1.c0)))AND(v0.c1)))AND(((v0.c4)!=(v0.c3)))))OR(((v0.c1) BETWEEN (rt1.c1) AND (v0.c3)))))AND((((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND (('-1166426837'))))))OR((((v0.c0, v0.c2, vt1.c0)) BETWEEN ((rt1.c0, vt1.c0, v0.c3)) AND ((rt1.c2, vt1.c0, rt1.c2))))))OR(v0.c0)) WHERE (((vt0.c0) BETWEEN ((((rt1.c0, v0.c4, v0.c0)) BETWEEN ((v0.c2, v0.c0, v0.c0)) AND ((rt1.c2, v0.c4, v0.c4)))) AND (((vt0.c0) NOTNULL)))) ORDER BY x'' ASC;
SELECT * FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c0);
SELECT ALL * FROM vt0, rt1, v0, vt1 NOT INDEXED WHERE ((+ (((((rt1.c2)OR(vt0.c0)))OR(rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((((rt1.c2)OR(vt0.c0)))OR(rt1.c1))))) IS TRUE)  as count FROM vt0, rt1, v0, vt1);
SELECT ALL * FROM vt0, rt1, v0, vt1 NOT INDEXED WHERE ((+ (((((rt1.c2)OR(vt0.c0)))OR(rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((((rt1.c2)OR(vt0.c0)))OR(rt1.c1))))) IS TRUE)  as count FROM vt0, rt1, v0, vt1);
SELECT ALL * FROM vt0, rt1, v0, vt1 NOT INDEXED WHERE ((+ (((((rt1.c2)OR(vt0.c0)))OR(rt1.c1)))));
SELECT * FROM vt0, v0, rt1, vt1 WHERE (((((rt1.c0)|('')))&((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)|('')))&((rt1.c1 IN ())))) IS TRUE)  as count FROM vt0, v0, rt1, vt1);
SELECT * FROM vt0, v0, rt1, vt1 WHERE (((((rt1.c0)|('')))&((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)|('')))&((rt1.c1 IN ())))) IS TRUE)  as count FROM vt0, v0, rt1, vt1);
SELECT * FROM vt0, v0, rt1, vt1 WHERE (((((rt1.c0)|('')))&((rt1.c1 IN ()))));
SELECT ALL COUNT(*) FROM vt1, v0 CROSS JOIN vt0 ON 1661852469 INNER JOIN rt1 ON ('1698350498' IN (CAST(vt1.c0 AS REAL))) WHERE (CASE WHEN (v0.c2 IN ()) THEN UPPER(DISTINCT v0.c3) END) ORDER BY (- (rt1.c1)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (v0.c2 IN ()) THEN UPPER(DISTINCT v0.c3) END) IS TRUE)  as count FROM vt1, v0 CROSS JOIN vt0 ON 1661852469 INNER JOIN rt1 ON ('1698350498' IN (CAST(vt1.c0 AS REAL))) ORDER BY (- (rt1.c1)) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM vt1, v0 CROSS JOIN vt0 ON 1661852469 INNER JOIN rt1 ON ('1698350498' IN (CAST(vt1.c0 AS REAL))) WHERE (CASE WHEN (v0.c2 IN ()) THEN UPPER(DISTINCT v0.c3) END) ORDER BY (- (rt1.c1)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (v0.c2 IN ()) THEN UPPER(DISTINCT v0.c3) END) IS TRUE)  as count FROM vt1, v0 CROSS JOIN vt0 ON 1661852469 INNER JOIN rt1 ON ('1698350498' IN (CAST(vt1.c0 AS REAL))) ORDER BY (- (rt1.c1)) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM vt1, v0 CROSS JOIN vt0 ON 1661852469 INNER JOIN rt1 ON ('1698350498' IN (CAST(vt1.c0 AS REAL))) WHERE (CASE WHEN (v0.c2 IN ()) THEN UPPER(DISTINCT v0.c3) END) ORDER BY (- (rt1.c1)) COLLATE RTRIM ASC;
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON CAST(((rt1.c0)AND(rt1.c2)) AS INTEGER) WHERE ((((('660772785') BETWEEN (vt0.c0) AND (rt1.c0))) NOT NULL)) ORDER BY (((((+ (rt1.c2)))OR((NOT (rt1.c0)))))AND(((vt0.c0) NOT BETWEEN (-764808929) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('660772785') BETWEEN (vt0.c0) AND (rt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON CAST(((rt1.c0)AND(rt1.c2)) AS INTEGER) ORDER BY (((((+ (rt1.c2)))OR((NOT (rt1.c0)))))AND(((vt0.c0) NOT BETWEEN (-764808929) AND (vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON CAST(((rt1.c0)AND(rt1.c2)) AS INTEGER) WHERE ((((('660772785') BETWEEN (vt0.c0) AND (rt1.c0))) NOT NULL)) ORDER BY (((((+ (rt1.c2)))OR((NOT (rt1.c0)))))AND(((vt0.c0) NOT BETWEEN (-764808929) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('660772785') BETWEEN (vt0.c0) AND (rt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON CAST(((rt1.c0)AND(rt1.c2)) AS INTEGER) ORDER BY (((((+ (rt1.c2)))OR((NOT (rt1.c0)))))AND(((vt0.c0) NOT BETWEEN (-764808929) AND (vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON CAST(((rt1.c0)AND(rt1.c2)) AS INTEGER) WHERE ((((('660772785') BETWEEN (vt0.c0) AND (rt1.c0))) NOT NULL)) ORDER BY (((((+ (rt1.c2)))OR((NOT (rt1.c0)))))AND(((vt0.c0) NOT BETWEEN (-764808929) AND (vt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)) ORDER BY vt0.c0 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c0 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)) ORDER BY vt0.c0 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c0 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)) ORDER BY vt0.c0 COLLATE NOCASE;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON CASE WHEN vt0.c0 THEN (((v0.c4)) BETWEEN ((rt1.c2)) AND ((v0.c4))) WHEN (((v0.c1)) BETWEEN ((vt1.c0)) AND ((rt1.c0))) THEN x'' WHEN LTRIM(vt0.c0) THEN v0.c4 ELSE (vt1.c0 IN ()) END INNER JOIN v0 ON CASE (((v0.c0))<((v0.c4)))  WHEN ((rt1.c2) NOTNULL) THEN v0.c3 WHEN x'3d36' THEN v0.c2 WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)) THEN (rt1.c2 IN (v0.c3, x'bd43')) ELSE ((((rt1.c0)AND(rt1.c1)))OR(v0.c3)) END FULL OUTER JOIN vt1 ON v0.c4 WHERE (((v0.c0 COLLATE BINARY)>>(TYPEOF(DISTINCT rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE BINARY)>>(TYPEOF(DISTINCT rt1.c2)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON CASE WHEN vt0.c0 THEN (((v0.c4)) BETWEEN ((rt1.c2)) AND ((v0.c4))) WHEN (((v0.c1)) BETWEEN ((vt1.c0)) AND ((rt1.c0))) THEN x'' WHEN LTRIM(vt0.c0) THEN v0.c4 ELSE (vt1.c0 IN ()) END INNER JOIN v0 ON CASE (((v0.c0))<((v0.c4)))  WHEN ((rt1.c2) NOTNULL) THEN v0.c3 WHEN x'3d36' THEN v0.c2 WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)) THEN (rt1.c2 IN (v0.c3, x'bd43')) ELSE ((((rt1.c0)AND(rt1.c1)))OR(v0.c3)) END FULL OUTER JOIN vt1 ON v0.c4);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON CASE WHEN vt0.c0 THEN (((v0.c4)) BETWEEN ((rt1.c2)) AND ((v0.c4))) WHEN (((v0.c1)) BETWEEN ((vt1.c0)) AND ((rt1.c0))) THEN x'' WHEN LTRIM(vt0.c0) THEN v0.c4 ELSE (vt1.c0 IN ()) END INNER JOIN v0 ON CASE (((v0.c0))<((v0.c4)))  WHEN ((rt1.c2) NOTNULL) THEN v0.c3 WHEN x'3d36' THEN v0.c2 WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)) THEN (rt1.c2 IN (v0.c3, x'bd43')) ELSE ((((rt1.c0)AND(rt1.c1)))OR(v0.c3)) END FULL OUTER JOIN vt1 ON v0.c4 WHERE (((v0.c0 COLLATE BINARY)>>(TYPEOF(DISTINCT rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE BINARY)>>(TYPEOF(DISTINCT rt1.c2)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON CASE WHEN vt0.c0 THEN (((v0.c4)) BETWEEN ((rt1.c2)) AND ((v0.c4))) WHEN (((v0.c1)) BETWEEN ((vt1.c0)) AND ((rt1.c0))) THEN x'' WHEN LTRIM(vt0.c0) THEN v0.c4 ELSE (vt1.c0 IN ()) END INNER JOIN v0 ON CASE (((v0.c0))<((v0.c4)))  WHEN ((rt1.c2) NOTNULL) THEN v0.c3 WHEN x'3d36' THEN v0.c2 WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)) THEN (rt1.c2 IN (v0.c3, x'bd43')) ELSE ((((rt1.c0)AND(rt1.c1)))OR(v0.c3)) END FULL OUTER JOIN vt1 ON v0.c4);
SELECT * FROM v0, vt0, vt1, rt1 WHERE (((LTRIM(v0.c4, rt1.c0)) BETWEEN ((NOT (vt0.c0))) AND (((v0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((LTRIM(v0.c4, rt1.c0)) BETWEEN ((NOT (vt0.c0))) AND (((v0.c1) NOTNULL)))) IS TRUE)  as count FROM v0, vt0, vt1, rt1);
SELECT * FROM v0, vt0, vt1, rt1 WHERE (((LTRIM(v0.c4, rt1.c0)) BETWEEN ((NOT (vt0.c0))) AND (((v0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((LTRIM(v0.c4, rt1.c0)) BETWEEN ((NOT (vt0.c0))) AND (((v0.c1) NOTNULL)))) IS TRUE)  as count FROM v0, vt0, vt1, rt1);
SELECT * FROM v0, vt0, vt1, rt1 WHERE (((LTRIM(v0.c4, rt1.c0)) BETWEEN ((NOT (vt0.c0))) AND (((v0.c1) NOTNULL))));
SELECT * FROM v0, vt0, rt1, vt1 WHERE (((((((((v0.c1 COLLATE NOCASE)OR(((v0.c2)LIKE(vt0.c0)))))OR(((((rt1.c1)OR(vt1.c0)))OR(v0.c4)))))AND((((v0.c4)) BETWEEN ((v0.c1)) AND ((v0.c1))))))AND(SUBSTR(rt1.c1, NULL)))) ORDER BY ((vt1.c0) NOT BETWEEN (vt0.c0) AND (v0.c2)) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((v0.c1 COLLATE NOCASE)OR(((v0.c2)LIKE(vt0.c0)))))OR(((((rt1.c1)OR(vt1.c0)))OR(v0.c4)))))AND((((v0.c4)) BETWEEN ((v0.c1)) AND ((v0.c1))))))AND(SUBSTR(rt1.c1, NULL)))) IS TRUE)  as count FROM v0, vt0, rt1, vt1 ORDER BY ((vt1.c0) NOT BETWEEN (vt0.c0) AND (v0.c2)) COLLATE BINARY DESC  NULLS LAST);
SELECT * FROM v0, vt0, rt1, vt1 WHERE (((((((((v0.c1 COLLATE NOCASE)OR(((v0.c2)LIKE(vt0.c0)))))OR(((((rt1.c1)OR(vt1.c0)))OR(v0.c4)))))AND((((v0.c4)) BETWEEN ((v0.c1)) AND ((v0.c1))))))AND(SUBSTR(rt1.c1, NULL)))) ORDER BY ((vt1.c0) NOT BETWEEN (vt0.c0) AND (v0.c2)) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((v0.c1 COLLATE NOCASE)OR(((v0.c2)LIKE(vt0.c0)))))OR(((((rt1.c1)OR(vt1.c0)))OR(v0.c4)))))AND((((v0.c4)) BETWEEN ((v0.c1)) AND ((v0.c1))))))AND(SUBSTR(rt1.c1, NULL)))) IS TRUE)  as count FROM v0, vt0, rt1, vt1 ORDER BY ((vt1.c0) NOT BETWEEN (vt0.c0) AND (v0.c2)) COLLATE BINARY DESC  NULLS LAST);
SELECT * FROM v0, vt0, rt1, vt1 WHERE (((((((((v0.c1 COLLATE NOCASE)OR(((v0.c2)LIKE(vt0.c0)))))OR(((((rt1.c1)OR(vt1.c0)))OR(v0.c4)))))AND((((v0.c4)) BETWEEN ((v0.c1)) AND ((v0.c1))))))AND(SUBSTR(rt1.c1, NULL)))) ORDER BY ((vt1.c0) NOT BETWEEN (vt0.c0) AND (v0.c2)) COLLATE BINARY DESC  NULLS LAST;
SELECT * FROM rt1 INNER JOIN vt1 ON ((((vt1.c0))!=((rt1.c2))) IN ()) WHERE (0.7265931769923348) ORDER BY (((CAST(rt1.c0 AS INTEGER)))<>((CASE WHEN rt1.c0 THEN rt1.c0 END))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.7265931769923348) IS TRUE)  as count FROM rt1 INNER JOIN vt1 ON ((((vt1.c0))<>((rt1.c2))) IN ()) ORDER BY (((CAST(rt1.c0 AS INTEGER)))<>((CASE WHEN rt1.c0 THEN rt1.c0 END))) ASC  NULLS FIRST);
SELECT * FROM rt1 INNER JOIN vt1 ON ((((vt1.c0))!=((rt1.c2))) IN ()) WHERE (0.7265931769923348) ORDER BY (((CAST(rt1.c0 AS INTEGER)))<>((CASE WHEN rt1.c0 THEN rt1.c0 END))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.7265931769923348) IS TRUE)  as count FROM rt1 INNER JOIN vt1 ON ((((vt1.c0))<>((rt1.c2))) IN ()) ORDER BY (((CAST(rt1.c0 AS INTEGER)))<>((CASE WHEN rt1.c0 THEN rt1.c0 END))) ASC  NULLS FIRST);
SELECT * FROM rt1 INNER JOIN vt1 ON ((((vt1.c0))!=((rt1.c2))) IN ()) WHERE (0.7265931769923348) ORDER BY (((CAST(rt1.c0 AS INTEGER)))<>((CASE WHEN rt1.c0 THEN rt1.c0 END))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, vt0, vt1, v0 WHERE ((('>w4') NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((('>w4') NOT NULL)) IS TRUE)  as count FROM rt1, vt0, vt1, v0);
SELECT ALL COUNT(*) FROM rt1, vt0, vt1, v0 WHERE ((('>w4') NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((('>w4') NOT NULL)) IS TRUE)  as count FROM rt1, vt0, vt1, v0);
SELECT ALL COUNT(*) FROM rt1, vt0, vt1, v0 WHERE ((('>w4') NOT NULL));
SELECT ALL COUNT(*) FROM rt1 WHERE (((CASE rt1.c2  WHEN rt1.c2 THEN 'FX' END)>=(rt1.c1 COLLATE NOCASE))) ORDER BY ((((rt1.c1) IS TRUE))-(CAST(rt1.c2 AS REAL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c2  WHEN rt1.c2 THEN 'FX' END)>=(rt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1) IS TRUE))-(CAST(rt1.c2 AS REAL))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((CASE rt1.c2  WHEN rt1.c2 THEN 'FX' END)>=(rt1.c1 COLLATE NOCASE))) ORDER BY ((((rt1.c1) IS TRUE))-(CAST(rt1.c2 AS REAL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c2  WHEN rt1.c2 THEN 'FX' END)>=(rt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1) IS TRUE))-(CAST(rt1.c2 AS REAL))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((CASE rt1.c2  WHEN rt1.c2 THEN 'FX' END)>=(rt1.c1 COLLATE NOCASE))) ORDER BY ((((rt1.c1) IS TRUE))-(CAST(rt1.c2 AS REAL))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0, rt1 WHERE (rt1.c2) ORDER BY (((((rt1.c2)>>(v0.c4))))<((-2.13752874E8))) DESC  NULLS LAST, (((v0.c4)) NOT BETWEEN ((((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))AND(rt1.c2)))AND(v0.c2)))) AND (((+ (v0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM vt0, v0, rt1 ORDER BY (((((rt1.c2)>>(v0.c4))))<((-2.13752874E8))) DESC  NULLS LAST, (((v0.c4)) NOT BETWEEN ((((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))AND(rt1.c2)))AND(v0.c2)))) AND (((+ (v0.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt0, v0, rt1 WHERE (rt1.c2) ORDER BY (((((rt1.c2)>>(v0.c4))))<((-2.13752874E8))) DESC  NULLS LAST, (((v0.c4)) NOT BETWEEN ((((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))AND(rt1.c2)))AND(v0.c2)))) AND (((+ (v0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM vt0, v0, rt1 ORDER BY (((((rt1.c2)>>(v0.c4))))<((-2.13752874E8))) DESC  NULLS LAST, (((v0.c4)) NOT BETWEEN ((((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))AND(rt1.c2)))AND(v0.c2)))) AND (((+ (v0.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt0, v0, rt1 WHERE (rt1.c2) ORDER BY (((((rt1.c2)>>(v0.c4))))<((-2.13752874E8))) DESC  NULLS LAST, (((v0.c4)) NOT BETWEEN ((((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))AND(rt1.c2)))AND(v0.c2)))) AND (((+ (v0.c0))))) ASC;
SELECT ALL * FROM vt1 WHERE (CAST((('FX')<(vt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((('FX')<(vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST((('FX')<(vt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((('FX')<(vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST((('FX')<(vt1.c0)) AS REAL));
SELECT * FROM v0 WHERE ((((- (v0.c4))) NOT BETWEEN (INSTR(NULL, v0.c4)) AND ((v0.c1 IN ())))) ORDER BY (+ (((v0.c0)IS NOT(v0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (v0.c4))) NOT BETWEEN (INSTR(NULL, v0.c4)) AND ((v0.c1 IN ())))) IS TRUE)  as count FROM v0 ORDER BY (+ (((v0.c0)IS NOT(v0.c2))))  NULLS LAST);
SELECT * FROM v0 WHERE ((((- (v0.c4))) NOT BETWEEN (INSTR(NULL, v0.c4)) AND ((v0.c1 IN ())))) ORDER BY (+ (((v0.c0)IS NOT(v0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (v0.c4))) NOT BETWEEN (INSTR(NULL, v0.c4)) AND ((v0.c1 IN ())))) IS TRUE)  as count FROM v0 ORDER BY (+ (((v0.c0)IS NOT(v0.c2))))  NULLS LAST);
SELECT * FROM v0 WHERE ((((- (v0.c4))) NOT BETWEEN (INSTR(NULL, v0.c4)) AND ((v0.c1 IN ())))) ORDER BY (+ (((v0.c0)IS NOT(v0.c2))))  NULLS LAST;
SELECT * FROM rt1, vt0 WHERE ((- (NULLIF(DISTINCT rt1.c1, rt1.c1)))) ORDER BY ((0Xffffffff9e69094d)!=((NOT (rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL (((- (NULLIF(DISTINCT rt1.c1, rt1.c1)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((0xffffffff9e69094d)<>((NOT (rt1.c2)))));
SELECT * FROM rt1, vt0 WHERE ((- (NULLIF(DISTINCT rt1.c1, rt1.c1)))) ORDER BY ((0Xffffffff9e69094d)!=((NOT (rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL (((- (NULLIF(DISTINCT rt1.c1, rt1.c1)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((0xffffffff9e69094d)<>((NOT (rt1.c2)))));
SELECT * FROM rt1, vt0 WHERE ((- (NULLIF(DISTINCT rt1.c1, rt1.c1)))) ORDER BY ((0Xffffffff9e69094d)!=((NOT (rt1.c2))));
SELECT COUNT(*) FROM vt0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))<=((((vt0.c0)%(1902527427))))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))<=((((vt0.c0)%(1902527427)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))<=((((vt0.c0)%(1902527427))))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))<=((((vt0.c0)%(1902527427)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))<=((((vt0.c0)%(1902527427))))));
SELECT COUNT(*) FROM rt1, vt1 WHERE (rt1.c2) ORDER BY '', (((((rt1.c2))>=((rt1.c1)))) IS FALSE), CAST(NULL AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1, vt1 ORDER BY '', (((((rt1.c2))>=((rt1.c1)))) IS FALSE), CAST(NULL AS REAL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt1 WHERE (rt1.c2) ORDER BY '', (((((rt1.c2))>=((rt1.c1)))) IS FALSE), CAST(NULL AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1, vt1 ORDER BY '', (((((rt1.c2))>=((rt1.c1)))) IS FALSE), CAST(NULL AS REAL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt1 WHERE (rt1.c2) ORDER BY '', (((((rt1.c2))>=((rt1.c1)))) IS FALSE), CAST(NULL AS REAL) ASC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0, v0, rt1 WHERE (((rt1.c0)>>(rt1.c0 COLLATE NOCASE))) ORDER BY ((((((v0.c2)>=(v0.c2)))OR(((v0.c4) NOTNULL))))OR(CAST(rt1.c1 AS INTEGER)))  NULLS LAST, rt1.c2;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0)>>(rt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt0, v0, rt1 ORDER BY ((((((v0.c2)>=(v0.c2)))OR(((v0.c4) NOTNULL))))OR(CAST(rt1.c1 AS INTEGER)))  NULLS LAST, rt1.c2);
SELECT ALL * FROM vt1, vt0, v0, rt1 WHERE (((rt1.c0)>>(rt1.c0 COLLATE NOCASE))) ORDER BY ((((((v0.c2)>=(v0.c2)))OR(((v0.c4) NOTNULL))))OR(CAST(rt1.c1 AS INTEGER)))  NULLS LAST, rt1.c2;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0)>>(rt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt0, v0, rt1 ORDER BY ((((((v0.c2)>=(v0.c2)))OR(((v0.c4) NOTNULL))))OR(CAST(rt1.c1 AS INTEGER)))  NULLS LAST, rt1.c2);
SELECT ALL * FROM vt1, vt0, v0, rt1 WHERE (((rt1.c0)>>(rt1.c0 COLLATE NOCASE))) ORDER BY ((((((v0.c2)>=(v0.c2)))OR(((v0.c4) NOTNULL))))OR(CAST(rt1.c1 AS INTEGER)))  NULLS LAST, rt1.c2;
SELECT * FROM vt1, rt1, vt0, v0 WHERE ((~ (((vt1.c0)+(v0.c0))))) ORDER BY TRIM(v0.c1) COLLATE RTRIM  NULLS LAST, NULLIF(CAST(rt1.c2 AS NUMERIC), (NOT (vt0.c0))) DESC  NULLS LAST, x'' COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0)+(v0.c0))))) IS TRUE)  as count FROM vt1, rt1, vt0, v0 ORDER BY TRIM(v0.c1) COLLATE RTRIM  NULLS LAST, NULLIF(CAST(rt1.c2 AS NUMERIC), (NOT (vt0.c0))) DESC  NULLS LAST, x'' COLLATE NOCASE);
SELECT * FROM vt1, rt1, vt0, v0 WHERE ((~ (((vt1.c0)+(v0.c0))))) ORDER BY TRIM(v0.c1) COLLATE RTRIM  NULLS LAST, NULLIF(CAST(rt1.c2 AS NUMERIC), (NOT (vt0.c0))) DESC  NULLS LAST, x'' COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0)+(v0.c0))))) IS TRUE)  as count FROM vt1, rt1, vt0, v0 ORDER BY TRIM(v0.c1) COLLATE RTRIM  NULLS LAST, NULLIF(CAST(rt1.c2 AS NUMERIC), (NOT (vt0.c0))) DESC  NULLS LAST, x'' COLLATE NOCASE);
SELECT * FROM vt1, rt1, vt0, v0 WHERE ((~ (((vt1.c0)+(v0.c0))))) ORDER BY TRIM(v0.c1) COLLATE RTRIM  NULLS LAST, NULLIF(CAST(rt1.c2 AS NUMERIC), (NOT (vt0.c0))) DESC  NULLS LAST, x'' COLLATE NOCASE;
SELECT ALL * FROM vt0, v0 WHERE (((((((((((v0.c4)&(v0.c1)))AND(((v0.c3)>(v0.c4)))))OR(CAST(vt0.c0 AS BLOB))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((+ (v0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c4)&(v0.c1)))AND(((v0.c3)>(v0.c4)))))OR(CAST(vt0.c0 AS BLOB))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((+ (v0.c3))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((((((((((v0.c4)&(v0.c1)))AND(((v0.c3)>(v0.c4)))))OR(CAST(vt0.c0 AS BLOB))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((+ (v0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c4)&(v0.c1)))AND(((v0.c3)>(v0.c4)))))OR(CAST(vt0.c0 AS BLOB))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((+ (v0.c3))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((((((((((v0.c4)&(v0.c1)))AND(((v0.c3)>(v0.c4)))))OR(CAST(vt0.c0 AS BLOB))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((+ (v0.c3)))));
SELECT * FROM vt0, rt1 WHERE (UPPER(NULLIF(rt1.c2, rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(NULLIF(rt1.c2, rt1.c0))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (UPPER(NULLIF(rt1.c2, rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(NULLIF(rt1.c2, rt1.c0))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (UPPER(NULLIF(rt1.c2, rt1.c0)));
SELECT ALL * FROM rt1 INNER JOIN v0 ON ((((((v0.c2)IS(v0.c2)))AND(((v0.c3)==(x'ea23')))))AND(((v0.c3)AND(vt1.c0)))) RIGHT OUTER JOIN vt1 ON CAST(((((v0.c1)OR(v0.c1)))AND(v0.c3)) AS INTEGER) WHERE ((((~ (v0.c1)))+(((((((((v0.c2)OR(rt1.c2)))AND(v0.c1)))OR(v0.c2)))OR(v0.c4))))) ORDER BY ((((rt1.c0) IS FALSE)) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c1)))+(((((((((v0.c2)OR(rt1.c2)))AND(v0.c1)))OR(v0.c2)))OR(v0.c4))))) IS TRUE)  as count FROM rt1 INNER JOIN v0 ON ((((((v0.c2)IS(v0.c2)))AND(((v0.c3)=(x'ea23')))))AND(((v0.c3)AND(vt1.c0)))) RIGHT OUTER JOIN vt1 ON CAST(((((v0.c1)OR(v0.c1)))AND(v0.c3)) AS INTEGER) ORDER BY ((((rt1.c0) IS FALSE)) ISNULL) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 INNER JOIN v0 ON ((((((v0.c2)IS(v0.c2)))AND(((v0.c3)==(x'ea23')))))AND(((v0.c3)AND(vt1.c0)))) RIGHT OUTER JOIN vt1 ON CAST(((((v0.c1)OR(v0.c1)))AND(v0.c3)) AS INTEGER) WHERE ((((~ (v0.c1)))+(((((((((v0.c2)OR(rt1.c2)))AND(v0.c1)))OR(v0.c2)))OR(v0.c4))))) ORDER BY ((((rt1.c0) IS FALSE)) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c1)))+(((((((((v0.c2)OR(rt1.c2)))AND(v0.c1)))OR(v0.c2)))OR(v0.c4))))) IS TRUE)  as count FROM rt1 INNER JOIN v0 ON ((((((v0.c2)IS(v0.c2)))AND(((v0.c3)=(x'ea23')))))AND(((v0.c3)AND(vt1.c0)))) RIGHT OUTER JOIN vt1 ON CAST(((((v0.c1)OR(v0.c1)))AND(v0.c3)) AS INTEGER) ORDER BY ((((rt1.c0) IS FALSE)) ISNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((CASE v0.c3  WHEN v0.c1 THEN v0.c2 END)) AND ((CHAR(v0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((CASE v0.c3  WHEN v0.c1 THEN v0.c2 END)) AND ((CHAR(v0.c4))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((CASE v0.c3  WHEN v0.c1 THEN v0.c2 END)) AND ((CHAR(v0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((CASE v0.c3  WHEN v0.c1 THEN v0.c2 END)) AND ((CHAR(v0.c4))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((CASE v0.c3  WHEN v0.c1 THEN v0.c2 END)) AND ((CHAR(v0.c4)))));
SELECT * FROM rt1, v0 WHERE (((TRIM(v0.c3, '-1112234398')) NOT BETWEEN (((NULL) ISNULL)) AND (((0.8482238727248985)LIKE(rt1.c1))))) ORDER BY CASE NULLIF(0.43272584948878845, rt1.c0)  WHEN (NOT (v0.c2)) THEN ((rt1.c1)GLOB(v0.c1)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TRIM(v0.c3, '-1112234398')) NOT BETWEEN (((NULL) ISNULL)) AND (((0.8482238727248985)LIKE(rt1.c1))))) IS TRUE)  as count FROM rt1, v0 ORDER BY CASE NULLIF(0.43272584948878845, rt1.c0)  WHEN (NOT (v0.c2)) THEN ((rt1.c1)GLOB(v0.c1)) END ASC  NULLS FIRST);
SELECT * FROM rt1, v0 WHERE (((TRIM(v0.c3, '-1112234398')) NOT BETWEEN (((NULL) ISNULL)) AND (((0.8482238727248985)LIKE(rt1.c1))))) ORDER BY CASE NULLIF(0.43272584948878845, rt1.c0)  WHEN (NOT (v0.c2)) THEN ((rt1.c1)GLOB(v0.c1)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TRIM(v0.c3, '-1112234398')) NOT BETWEEN (((NULL) ISNULL)) AND (((0.8482238727248985)LIKE(rt1.c1))))) IS TRUE)  as count FROM rt1, v0 ORDER BY CASE NULLIF(0.43272584948878845, rt1.c0)  WHEN (NOT (v0.c2)) THEN ((rt1.c1)GLOB(v0.c1)) END ASC  NULLS FIRST);
SELECT * FROM rt1, v0 WHERE (((TRIM(v0.c3, '-1112234398')) NOT BETWEEN (((NULL) ISNULL)) AND (((0.8482238727248985)LIKE(rt1.c1))))) ORDER BY CASE NULLIF(0.43272584948878845, rt1.c0)  WHEN (NOT (v0.c2)) THEN ((rt1.c1)GLOB(v0.c1)) END ASC  NULLS FIRST;
SELECT * FROM v0 WHERE (((((v0.c2)IS NOT(v0.c3))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((v0.c2)IS NOT(v0.c3))) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c2)IS NOT(v0.c3))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((v0.c2)IS NOT(v0.c3))) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c2)IS NOT(v0.c3))) IS FALSE));
SELECT ALL * FROM v0 INNER JOIN vt0 ON (((((vt0.c0, v0.c3, vt0.c0))>((v0.c4, v0.c2, v0.c3)))) IS TRUE) WHERE (LIKELIHOOD(((v0.c0)<=(v0.c3)), 0.17091473531780477)) ORDER BY (CAST(vt0.c0 AS INTEGER) IN (((0.7505642543165205) BETWEEN (v0.c3) AND (v0.c0)), ((vt0.c0) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((v0.c0)<=(v0.c3)), 0.17091473531780477)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (((((vt0.c0, v0.c3, vt0.c0))>((v0.c4, v0.c2, v0.c3)))) IS TRUE) ORDER BY (CAST(vt0.c0 AS INTEGER) IN (((0.7505642543165205) BETWEEN (v0.c3) AND (v0.c0)), ((vt0.c0) NOTNULL)))  NULLS FIRST);
SELECT ALL * FROM v0 INNER JOIN vt0 ON (((((vt0.c0, v0.c3, vt0.c0))>((v0.c4, v0.c2, v0.c3)))) IS TRUE) WHERE (LIKELIHOOD(((v0.c0)<=(v0.c3)), 0.17091473531780477)) ORDER BY (CAST(vt0.c0 AS INTEGER) IN (((0.7505642543165205) BETWEEN (v0.c3) AND (v0.c0)), ((vt0.c0) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((v0.c0)<=(v0.c3)), 0.17091473531780477)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (((((vt0.c0, v0.c3, vt0.c0))>((v0.c4, v0.c2, v0.c3)))) IS TRUE) ORDER BY (CAST(vt0.c0 AS INTEGER) IN (((0.7505642543165205) BETWEEN (v0.c3) AND (v0.c0)), ((vt0.c0) NOTNULL)))  NULLS FIRST);
SELECT ALL * FROM v0 INNER JOIN vt0 ON (((((vt0.c0, v0.c3, vt0.c0))>((v0.c4, v0.c2, v0.c3)))) IS TRUE) WHERE (LIKELIHOOD(((v0.c0)<=(v0.c3)), 0.17091473531780477)) ORDER BY (CAST(vt0.c0 AS INTEGER) IN (((0.7505642543165205) BETWEEN (v0.c3) AND (v0.c0)), ((vt0.c0) NOTNULL)))  NULLS FIRST;
SELECT * FROM rt1, vt0, v0, vt1 WHERE (((((rt1.c2) NOTNULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM rt1, vt0, v0, vt1);
SELECT * FROM rt1, vt0, v0, vt1 WHERE (((((rt1.c2) NOTNULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM rt1, vt0, v0, vt1);
SELECT * FROM rt1, vt0, v0, vt1 WHERE (((((rt1.c2) NOTNULL)) NOTNULL));
SELECT COUNT(*) FROM rt1, v0, vt1, vt0 WHERE (((((((NULL)<=(v0.c0)))AND(rt1.c0)))OR(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 WHEN v0.c1 THEN v0.c0 WHEN rt1.c1 THEN '531878437' ELSE rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((NULL)<=(v0.c0)))AND(rt1.c0)))OR(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 WHEN v0.c1 THEN v0.c0 WHEN rt1.c1 THEN '531878437' ELSE rt1.c0 END))) IS TRUE)  as count FROM rt1, v0, vt1, vt0);
SELECT COUNT(*) FROM rt1, v0, vt1, vt0 WHERE (((((((NULL)<=(v0.c0)))AND(rt1.c0)))OR(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 WHEN v0.c1 THEN v0.c0 WHEN rt1.c1 THEN '531878437' ELSE rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((NULL)<=(v0.c0)))AND(rt1.c0)))OR(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 WHEN v0.c1 THEN v0.c0 WHEN rt1.c1 THEN '531878437' ELSE rt1.c0 END))) IS TRUE)  as count FROM rt1, v0, vt1, vt0);
SELECT COUNT(*) FROM rt1, v0, vt1, vt0 WHERE (((((((NULL)<=(v0.c0)))AND(rt1.c0)))OR(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 WHEN v0.c1 THEN v0.c0 WHEN rt1.c1 THEN '531878437' ELSE rt1.c0 END)));
SELECT COUNT(*) FROM vt1, v0 WHERE (CASE CAST(v0.c4 AS TEXT)  WHEN v0.c3 COLLATE BINARY THEN x'' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(v0.c4 AS TEXT)  WHEN v0.c3 COLLATE BINARY THEN x'' END) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (CASE CAST(v0.c4 AS TEXT)  WHEN v0.c3 COLLATE BINARY THEN x'' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(v0.c4 AS TEXT)  WHEN v0.c3 COLLATE BINARY THEN x'' END) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (CASE CAST(v0.c4 AS TEXT)  WHEN v0.c3 COLLATE BINARY THEN x'' END);
SELECT ALL * FROM rt1, vt1, v0, vt0 WHERE (((CASE v0.c3  WHEN rt1.c0 THEN rt1.c0 ELSE v0.c1 END)<<(((rt1.c1)!=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c3  WHEN rt1.c0 THEN rt1.c0 ELSE v0.c1 END)<<(((rt1.c1)!=(vt1.c0))))) IS TRUE)  as count FROM rt1, vt1, v0, vt0);
SELECT ALL * FROM rt1, vt1, v0, vt0 WHERE (((CASE v0.c3  WHEN rt1.c0 THEN rt1.c0 ELSE v0.c1 END)<<(((rt1.c1)!=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c3  WHEN rt1.c0 THEN rt1.c0 ELSE v0.c1 END)<<(((rt1.c1)!=(vt1.c0))))) IS TRUE)  as count FROM rt1, vt1, v0, vt0);
SELECT ALL * FROM rt1, vt1, v0, vt0 WHERE (((CASE v0.c3  WHEN rt1.c0 THEN rt1.c0 ELSE v0.c1 END)<<(((rt1.c1)!=(vt1.c0)))));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt1 ON CASE WHEN ((v0.c4) NOTNULL) THEN rt1.c0 ELSE CASE v0.c2  WHEN rt1.c1 THEN vt0.c0 END END INNER JOIN v0 ON (((rt1.c2, v0.c2, v0.c4)) BETWEEN ((CASE x''  WHEN v0.c0 THEN 1.902527427E9 ELSE v0.c4 END, CAST(rt1.c1 AS TEXT), v0.c2 COLLATE RTRIM)) AND ((CASE rt1.c2  WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN v0.c1 ELSE vt0.c0 END, ((vt0.c0) NOTNULL), 0xfffffffff34263d6))) WHERE (0.34054612487221125) ORDER BY ((SQLITE_COMPILEOPTION_GET(rt1.c2))/(v0.c1 COLLATE BINARY))  NULLS FIRST, ((((((v0.c0)IS NOT(rt1.c2)))OR(CAST(vt0.c0 AS INTEGER))))OR(CAST(vt0.c0 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ((0.34054612487221125) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON CASE WHEN ((v0.c4) NOTNULL) THEN rt1.c0 ELSE CASE v0.c2  WHEN rt1.c1 THEN vt0.c0 END END INNER JOIN v0 ON (((rt1.c2, v0.c2, v0.c4)) BETWEEN ((CASE x''  WHEN v0.c0 THEN 1.902527427E9 ELSE v0.c4 END, CAST(rt1.c1 AS TEXT), v0.c2 COLLATE RTRIM)) AND ((CASE rt1.c2  WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN v0.c1 ELSE vt0.c0 END, ((vt0.c0) NOTNULL), 0xfffffffff34263d6))) ORDER BY ((SQLITE_COMPILEOPTION_GET(rt1.c2))/(v0.c1 COLLATE BINARY))  NULLS FIRST, ((((((v0.c0)IS NOT(rt1.c2)))OR(CAST(vt0.c0 AS INTEGER))))OR(CAST(vt0.c0 AS NUMERIC))) DESC);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt1 ON CASE WHEN ((v0.c4) NOTNULL) THEN rt1.c0 ELSE CASE v0.c2  WHEN rt1.c1 THEN vt0.c0 END END INNER JOIN v0 ON (((rt1.c2, v0.c2, v0.c4)) BETWEEN ((CASE x''  WHEN v0.c0 THEN 1.902527427E9 ELSE v0.c4 END, CAST(rt1.c1 AS TEXT), v0.c2 COLLATE RTRIM)) AND ((CASE rt1.c2  WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN v0.c1 ELSE vt0.c0 END, ((vt0.c0) NOTNULL), 0xfffffffff34263d6))) WHERE (0.34054612487221125) ORDER BY ((SQLITE_COMPILEOPTION_GET(rt1.c2))/(v0.c1 COLLATE BINARY))  NULLS FIRST, ((((((v0.c0)IS NOT(rt1.c2)))OR(CAST(vt0.c0 AS INTEGER))))OR(CAST(vt0.c0 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ((0.34054612487221125) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON CASE WHEN ((v0.c4) NOTNULL) THEN rt1.c0 ELSE CASE v0.c2  WHEN rt1.c1 THEN vt0.c0 END END INNER JOIN v0 ON (((rt1.c2, v0.c2, v0.c4)) BETWEEN ((CASE x''  WHEN v0.c0 THEN 1.902527427E9 ELSE v0.c4 END, CAST(rt1.c1 AS TEXT), v0.c2 COLLATE RTRIM)) AND ((CASE rt1.c2  WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN v0.c1 ELSE vt0.c0 END, ((vt0.c0) NOTNULL), 0xfffffffff34263d6))) ORDER BY ((SQLITE_COMPILEOPTION_GET(rt1.c2))/(v0.c1 COLLATE BINARY))  NULLS FIRST, ((((((v0.c0)IS NOT(rt1.c2)))OR(CAST(vt0.c0 AS INTEGER))))OR(CAST(vt0.c0 AS NUMERIC))) DESC);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt1 ON CASE WHEN ((v0.c4) NOTNULL) THEN rt1.c0 ELSE CASE v0.c2  WHEN rt1.c1 THEN vt0.c0 END END INNER JOIN v0 ON (((rt1.c2, v0.c2, v0.c4)) BETWEEN ((CASE x''  WHEN v0.c0 THEN 1.902527427E9 ELSE v0.c4 END, CAST(rt1.c1 AS TEXT), v0.c2 COLLATE RTRIM)) AND ((CASE rt1.c2  WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN v0.c1 ELSE vt0.c0 END, ((vt0.c0) NOTNULL), 0xfffffffff34263d6))) WHERE (0.34054612487221125) ORDER BY ((SQLITE_COMPILEOPTION_GET(rt1.c2))/(v0.c1 COLLATE BINARY))  NULLS FIRST, ((((((v0.c0)IS NOT(rt1.c2)))OR(CAST(vt0.c0 AS INTEGER))))OR(CAST(vt0.c0 AS NUMERIC))) DESC;
SELECT * FROM vt1, v0, rt1, vt0 WHERE (vt0.c0 COLLATE BINARY) ORDER BY TYPEOF(((v0.c3) NOTNULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM vt1, v0, rt1, vt0 ORDER BY TYPEOF(((v0.c3) NOTNULL)) DESC  NULLS LAST);
SELECT * FROM vt1, v0, rt1, vt0 WHERE (vt0.c0 COLLATE BINARY) ORDER BY TYPEOF(((v0.c3) NOTNULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM vt1, v0, rt1, vt0 ORDER BY TYPEOF(((v0.c3) NOTNULL)) DESC  NULLS LAST);
SELECT * FROM vt1, v0, rt1, vt0 WHERE (vt0.c0 COLLATE BINARY) ORDER BY TYPEOF(((v0.c3) NOTNULL)) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c1)>(rt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)>(rt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c1)>(rt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)>(rt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c1)>(rt1.c0))) NOTNULL));
SELECT ALL * FROM vt0, v0, vt1, rt1 NOT INDEXED WHERE (CASE v0.c4  WHEN x'678f' THEN rt1.c1 ELSE ((v0.c0)IS(v0.c3)) END) ORDER BY (CASE WHEN v0.c0 THEN rt1.c2 ELSE v0.c1 END IN ()) DESC  NULLS FIRST, (NOT (CAST(0X124832f1 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c4  WHEN x'678f' THEN rt1.c1 ELSE ((v0.c0)IS(v0.c3)) END) IS TRUE)  as count FROM vt0, v0, vt1, rt1 ORDER BY (CASE WHEN v0.c0 THEN rt1.c2 ELSE v0.c1 END IN ()) DESC  NULLS FIRST, (NOT (CAST(0X124832f1 AS TEXT))));
SELECT ALL * FROM vt0, v0, vt1, rt1 NOT INDEXED WHERE (CASE v0.c4  WHEN x'678f' THEN rt1.c1 ELSE ((v0.c0)IS(v0.c3)) END) ORDER BY (CASE WHEN v0.c0 THEN rt1.c2 ELSE v0.c1 END IN ()) DESC  NULLS FIRST, (NOT (CAST(0X124832f1 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c4  WHEN x'678f' THEN rt1.c1 ELSE ((v0.c0)IS(v0.c3)) END) IS TRUE)  as count FROM vt0, v0, vt1, rt1 ORDER BY (CASE WHEN v0.c0 THEN rt1.c2 ELSE v0.c1 END IN ()) DESC  NULLS FIRST, (NOT (CAST(0X124832f1 AS TEXT))));
SELECT ALL * FROM vt0, v0, vt1, rt1 NOT INDEXED WHERE (CASE v0.c4  WHEN x'678f' THEN rt1.c1 ELSE ((v0.c0)IS(v0.c3)) END) ORDER BY (CASE WHEN v0.c0 THEN rt1.c2 ELSE v0.c1 END IN ()) DESC  NULLS FIRST, (NOT (CAST(0X124832f1 AS TEXT)));
SELECT ALL COUNT(*) FROM vt1, vt0, rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM vt1, vt0, rt1);
SELECT ALL COUNT(*) FROM vt1, vt0, rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM vt1, vt0, rt1);
SELECT ALL COUNT(*) FROM vt1, vt0, rt1 WHERE (rt1.c0);
SELECT * FROM vt1, vt0, rt1 WHERE ((NULL IN ((vt1.c0 IN (rt1.c0, '206170278')), CAST(vt1.c0 AS TEXT)))) ORDER BY (((vt0.c0)>=(rt1.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((NULL IN ((vt1.c0 IN (rt1.c0, '206170278')), CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1, vt0, rt1 ORDER BY (((vt0.c0)>=(rt1.c0)) IN ()) ASC);
SELECT * FROM vt1, vt0, rt1 WHERE ((NULL IN ((vt1.c0 IN (rt1.c0, '206170278')), CAST(vt1.c0 AS TEXT)))) ORDER BY (((vt0.c0)>=(rt1.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((NULL IN ((vt1.c0 IN (rt1.c0, '206170278')), CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1, vt0, rt1 ORDER BY (((vt0.c0)>=(rt1.c0)) IN ()) ASC);
SELECT * FROM vt1, vt0, rt1 WHERE ((NULL IN ((vt1.c0 IN (rt1.c0, '206170278')), CAST(vt1.c0 AS TEXT)))) ORDER BY (((vt0.c0)>=(rt1.c0)) IN ()) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE ((((NOT (v0.c0))) BETWEEN ((((v0.c3)) NOT BETWEEN ((v0.c1)) AND ((v0.c3)))) AND (CASE WHEN v0.c2 THEN v0.c3 ELSE v0.c3 END)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c0))) BETWEEN ((((v0.c3)) NOT BETWEEN ((v0.c1)) AND ((v0.c3)))) AND (CASE WHEN v0.c2 THEN v0.c3 ELSE v0.c3 END))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((NOT (v0.c0))) BETWEEN ((((v0.c3)) NOT BETWEEN ((v0.c1)) AND ((v0.c3)))) AND (CASE WHEN v0.c2 THEN v0.c3 ELSE v0.c3 END)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c0))) BETWEEN ((((v0.c3)) NOT BETWEEN ((v0.c1)) AND ((v0.c3)))) AND (CASE WHEN v0.c2 THEN v0.c3 ELSE v0.c3 END))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((NOT (v0.c0))) BETWEEN ((((v0.c3)) NOT BETWEEN ((v0.c1)) AND ((v0.c3)))) AND (CASE WHEN v0.c2 THEN v0.c3 ELSE v0.c3 END)));
SELECT COUNT(*) FROM vt0, rt1, v0 WHERE (((-1.112234398E9)<<(CAST(v0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((-1.112234398E9)<<(CAST(v0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt1, v0);
SELECT COUNT(*) FROM vt0, rt1, v0 WHERE (((-1.112234398E9)<<(CAST(v0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((-1.112234398E9)<<(CAST(v0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt1, v0);
SELECT COUNT(*) FROM vt0, rt1, v0 WHERE (((-1.112234398E9)<<(CAST(v0.c1 AS NUMERIC))));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON ((((v0.c0) NOT NULL)) IS TRUE) RIGHT OUTER JOIN v0 ON CAST((+ (rt1.c0)) AS INTEGER) RIGHT OUTER JOIN rt1 ON (((vt1.c0, v0.c3, v0.c2)) BETWEEN (((- (vt1.c0)), '512858161', ((vt1.c0)<<(NULL)))) AND ((CASE v0.c2  WHEN rt1.c2 THEN v0.c3 END, vt1.c0, (~ (rt1.c0))))) WHERE ((0.46613893263835426 IN ()));
SELECT SUM(count) FROM (SELECT (((0.46613893263835426 IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((v0.c0) NOT NULL)) IS TRUE) RIGHT OUTER JOIN v0 ON CAST((+ (rt1.c0)) AS INTEGER) RIGHT OUTER JOIN rt1 ON (((vt1.c0, v0.c3, v0.c2)) BETWEEN (((- (vt1.c0)), '512858161', ((vt1.c0)<<(NULL)))) AND ((CASE v0.c2  WHEN rt1.c2 THEN v0.c3 END, vt1.c0, (~ (rt1.c0))))));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON ((((v0.c0) NOT NULL)) IS TRUE) RIGHT OUTER JOIN v0 ON CAST((+ (rt1.c0)) AS INTEGER) RIGHT OUTER JOIN rt1 ON (((vt1.c0, v0.c3, v0.c2)) BETWEEN (((- (vt1.c0)), '512858161', ((vt1.c0)<<(NULL)))) AND ((CASE v0.c2  WHEN rt1.c2 THEN v0.c3 END, vt1.c0, (~ (rt1.c0))))) WHERE ((0.46613893263835426 IN ()));
SELECT SUM(count) FROM (SELECT (((0.46613893263835426 IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((v0.c0) NOT NULL)) IS TRUE) RIGHT OUTER JOIN v0 ON CAST((+ (rt1.c0)) AS INTEGER) RIGHT OUTER JOIN rt1 ON (((vt1.c0, v0.c3, v0.c2)) BETWEEN (((- (vt1.c0)), '512858161', ((vt1.c0)<<(NULL)))) AND ((CASE v0.c2  WHEN rt1.c2 THEN v0.c3 END, vt1.c0, (~ (rt1.c0))))));
SELECT * FROM rt1 WHERE ((((((rt1.c2)||(rt1.c0)), (- (rt1.c2)), rt1.c0 COLLATE BINARY))>=((CAST('2018030776' AS REAL), ((rt1.c0)+(rt1.c2)), (((rt1.c1))!=((rt1.c2))))))) ORDER BY ((((rt1.c2)*(rt1.c0)))-(rt1.c0 COLLATE RTRIM)) DESC  NULLS LAST, ((((rt1.c2)OR(rt1.c2)))AND(rt1.c1)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((((rt1.c2)||(rt1.c0)), (- (rt1.c2)), rt1.c0 COLLATE BINARY))>=((CAST('2018030776' AS REAL), ((rt1.c0)+(rt1.c2)), (((rt1.c1))!=((rt1.c2))))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2)*(rt1.c0)))-(rt1.c0 COLLATE RTRIM)) DESC  NULLS LAST, ((((rt1.c2)OR(rt1.c2)))AND(rt1.c1)) COLLATE RTRIM);
SELECT * FROM rt1 WHERE ((((((rt1.c2)||(rt1.c0)), (- (rt1.c2)), rt1.c0 COLLATE BINARY))>=((CAST('2018030776' AS REAL), ((rt1.c0)+(rt1.c2)), (((rt1.c1))!=((rt1.c2))))))) ORDER BY ((((rt1.c2)*(rt1.c0)))-(rt1.c0 COLLATE RTRIM)) DESC  NULLS LAST, ((((rt1.c2)OR(rt1.c2)))AND(rt1.c1)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((((rt1.c2)||(rt1.c0)), (- (rt1.c2)), rt1.c0 COLLATE BINARY))>=((CAST('2018030776' AS REAL), ((rt1.c0)+(rt1.c2)), (((rt1.c1))!=((rt1.c2))))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2)*(rt1.c0)))-(rt1.c0 COLLATE RTRIM)) DESC  NULLS LAST, ((((rt1.c2)OR(rt1.c2)))AND(rt1.c1)) COLLATE RTRIM);
SELECT * FROM rt1 WHERE ((((((rt1.c2)||(rt1.c0)), (- (rt1.c2)), rt1.c0 COLLATE BINARY))>=((CAST('2018030776' AS REAL), ((rt1.c0)+(rt1.c2)), (((rt1.c1))!=((rt1.c2))))))) ORDER BY ((((rt1.c2)*(rt1.c0)))-(rt1.c0 COLLATE RTRIM)) DESC  NULLS LAST, ((((rt1.c2)OR(rt1.c2)))AND(rt1.c1)) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM v0, rt1, vt1 WHERE (((rt1.c2 COLLATE NOCASE) BETWEEN (CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END) AND ((NOT (v0.c3)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c2 COLLATE NOCASE) BETWEEN (CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END) AND ((NOT (v0.c3))))) IS TRUE)  as count FROM v0, rt1, vt1);
SELECT ALL COUNT(*) FROM v0, rt1, vt1 WHERE (((rt1.c2 COLLATE NOCASE) BETWEEN (CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END) AND ((NOT (v0.c3)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c2 COLLATE NOCASE) BETWEEN (CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END) AND ((NOT (v0.c3))))) IS TRUE)  as count FROM v0, rt1, vt1);
SELECT ALL COUNT(*) FROM v0, rt1, vt1 WHERE (((rt1.c2 COLLATE NOCASE) BETWEEN (CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END) AND ((NOT (v0.c3)))));
SELECT ALL COUNT(*) FROM rt1, v0, vt0 WHERE ((+ (TRIM(DISTINCT v0.c0)))) ORDER BY CASE ((rt1.c0)||(v0.c4))  WHEN CASE vt0.c0  WHEN x'' THEN v0.c0 ELSE rt1.c2 END THEN ((v0.c3)<(rt1.c0)) WHEN CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c1 THEN rt1.c1 WHEN vt0.c0 THEN x'' WHEN rt1.c1 THEN rt1.c1 WHEN v0.c1 THEN v0.c2 END THEN ((v0.c4)|(rt1.c0)) WHEN CAST('*\n' AS NUMERIC) THEN '-213752874' END;
SELECT SUM(count) FROM (SELECT (((+ (TRIM(DISTINCT v0.c0)))) IS TRUE)  as count FROM rt1, v0, vt0 ORDER BY CASE ((rt1.c0)||(v0.c4))  WHEN CASE vt0.c0  WHEN x'' THEN v0.c0 ELSE rt1.c2 END THEN ((v0.c3)<(rt1.c0)) WHEN CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c1 THEN rt1.c1 WHEN vt0.c0 THEN x'' WHEN rt1.c1 THEN rt1.c1 WHEN v0.c1 THEN v0.c2 END THEN ((v0.c4)|(rt1.c0)) WHEN CAST('*\n' AS NUMERIC) THEN '-213752874' END);
SELECT ALL COUNT(*) FROM rt1, v0, vt0 WHERE ((+ (TRIM(DISTINCT v0.c0)))) ORDER BY CASE ((rt1.c0)||(v0.c4))  WHEN CASE vt0.c0  WHEN x'' THEN v0.c0 ELSE rt1.c2 END THEN ((v0.c3)<(rt1.c0)) WHEN CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c1 THEN rt1.c1 WHEN vt0.c0 THEN x'' WHEN rt1.c1 THEN rt1.c1 WHEN v0.c1 THEN v0.c2 END THEN ((v0.c4)|(rt1.c0)) WHEN CAST('*\n' AS NUMERIC) THEN '-213752874' END;
SELECT SUM(count) FROM (SELECT (((+ (TRIM(DISTINCT v0.c0)))) IS TRUE)  as count FROM rt1, v0, vt0 ORDER BY CASE ((rt1.c0)||(v0.c4))  WHEN CASE vt0.c0  WHEN x'' THEN v0.c0 ELSE rt1.c2 END THEN ((v0.c3)<(rt1.c0)) WHEN CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c1 THEN rt1.c1 WHEN vt0.c0 THEN x'' WHEN rt1.c1 THEN rt1.c1 WHEN v0.c1 THEN v0.c2 END THEN ((v0.c4)|(rt1.c0)) WHEN CAST('*\n' AS NUMERIC) THEN '-213752874' END);
SELECT ALL COUNT(*) FROM rt1, v0, vt0 WHERE ((+ (TRIM(DISTINCT v0.c0)))) ORDER BY CASE ((rt1.c0)||(v0.c4))  WHEN CASE vt0.c0  WHEN x'' THEN v0.c0 ELSE rt1.c2 END THEN ((v0.c3)<(rt1.c0)) WHEN CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c1 THEN rt1.c1 WHEN vt0.c0 THEN x'' WHEN rt1.c1 THEN rt1.c1 WHEN v0.c1 THEN v0.c2 END THEN ((v0.c4)|(rt1.c0)) WHEN CAST('*\n' AS NUMERIC) THEN '-213752874' END;
SELECT COUNT(*) FROM rt1, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, vt1);
SELECT COUNT(*) FROM rt1, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, vt1);
SELECT COUNT(*) FROM rt1, vt1 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt1, rt1 RIGHT OUTER JOIN vt0 ON CASE ((rt1.c0) NOT BETWEEN (rt1.c2) AND (x''))  WHEN (((rt1.c1))>=((rt1.c0))) THEN ((rt1.c0)>(rt1.c0)) WHEN rt1.c2 COLLATE BINARY THEN '-1851712586' WHEN (((rt1.c1))<((rt1.c2))) THEN ((vt0.c0) NOTNULL) WHEN NULL THEN NULL WHEN ((rt1.c1) NOTNULL) THEN vt1.c0 END WHERE (CASE (~ (vt0.c0))  WHEN ((((vt0.c0)OR(vt1.c0)))AND(rt1.c0)) THEN ((0.8452106533673392) BETWEEN (rt1.c2) AND (rt1.c0)) WHEN ((rt1.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0)) WHEN x'' THEN rt1.c1 COLLATE RTRIM END) ORDER BY json_object(((rt1.c0)GLOB(rt1.c0)), 0x347923e4) ASC, ((rt1.c2)>=(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (vt0.c0))  WHEN ((((vt0.c0)OR(vt1.c0)))AND(rt1.c0)) THEN ((0.8452106533673392) BETWEEN (rt1.c2) AND (rt1.c0)) WHEN ((rt1.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0)) WHEN x'' THEN rt1.c1 COLLATE RTRIM END) IS TRUE)  as count FROM vt1, rt1 RIGHT OUTER JOIN vt0 ON CASE ((rt1.c0) NOT BETWEEN (rt1.c2) AND (x''))  WHEN (((rt1.c1))>=((rt1.c0))) THEN ((rt1.c0)>(rt1.c0)) WHEN rt1.c2 COLLATE BINARY THEN '-1851712586' WHEN (((rt1.c1))<((rt1.c2))) THEN ((vt0.c0) NOTNULL) WHEN NULL THEN NULL WHEN ((rt1.c1) NOTNULL) THEN vt1.c0 END ORDER BY json_object(((rt1.c0)GLOB(rt1.c0)), 0X347923e4) ASC, ((rt1.c2)>=(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt1 RIGHT OUTER JOIN vt0 ON CASE ((rt1.c0) NOT BETWEEN (rt1.c2) AND (x''))  WHEN (((rt1.c1))>=((rt1.c0))) THEN ((rt1.c0)>(rt1.c0)) WHEN rt1.c2 COLLATE BINARY THEN '-1851712586' WHEN (((rt1.c1))<((rt1.c2))) THEN ((vt0.c0) NOTNULL) WHEN NULL THEN NULL WHEN ((rt1.c1) NOTNULL) THEN vt1.c0 END WHERE (CASE (~ (vt0.c0))  WHEN ((((vt0.c0)OR(vt1.c0)))AND(rt1.c0)) THEN ((0.8452106533673392) BETWEEN (rt1.c2) AND (rt1.c0)) WHEN ((rt1.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0)) WHEN x'' THEN rt1.c1 COLLATE RTRIM END) ORDER BY json_object(((rt1.c0)GLOB(rt1.c0)), 0x347923e4) ASC, ((rt1.c2)>=(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (vt0.c0))  WHEN ((((vt0.c0)OR(vt1.c0)))AND(rt1.c0)) THEN ((0.8452106533673392) BETWEEN (rt1.c2) AND (rt1.c0)) WHEN ((rt1.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0)) WHEN x'' THEN rt1.c1 COLLATE RTRIM END) IS TRUE)  as count FROM vt1, rt1 RIGHT OUTER JOIN vt0 ON CASE ((rt1.c0) NOT BETWEEN (rt1.c2) AND (x''))  WHEN (((rt1.c1))>=((rt1.c0))) THEN ((rt1.c0)>(rt1.c0)) WHEN rt1.c2 COLLATE BINARY THEN '-1851712586' WHEN (((rt1.c1))<((rt1.c2))) THEN ((vt0.c0) NOTNULL) WHEN NULL THEN NULL WHEN ((rt1.c1) NOTNULL) THEN vt1.c0 END ORDER BY json_object(((rt1.c0)GLOB(rt1.c0)), 0X347923e4) ASC, ((rt1.c2)>=(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt1 ON rt1.c2 WHERE (((((((rt1.c2)OR(vt1.c0)))OR(rt1.c0))) BETWEEN (((0.38353538279384547) BETWEEN (rt1.c1) AND (rt1.c2))) AND (x''))) ORDER BY (((+ (x''))) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)OR(vt1.c0)))OR(rt1.c0))) BETWEEN (((0.38353538279384547) BETWEEN (rt1.c1) AND (rt1.c2))) AND (x''))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt1 ON rt1.c2 ORDER BY (((+ (x''))) NOT NULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt1 ON rt1.c2 WHERE (((((((rt1.c2)OR(vt1.c0)))OR(rt1.c0))) BETWEEN (((0.38353538279384547) BETWEEN (rt1.c1) AND (rt1.c2))) AND (x''))) ORDER BY (((+ (x''))) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)OR(vt1.c0)))OR(rt1.c0))) BETWEEN (((0.38353538279384547) BETWEEN (rt1.c1) AND (rt1.c2))) AND (x''))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt1 ON rt1.c2 ORDER BY (((+ (x''))) NOT NULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt1 ON rt1.c2 WHERE (((((((rt1.c2)OR(vt1.c0)))OR(rt1.c0))) BETWEEN (((0.38353538279384547) BETWEEN (rt1.c1) AND (rt1.c2))) AND (x''))) ORDER BY (((+ (x''))) NOT NULL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((-7.64808929E8 COLLATE RTRIM)) AND (((vt0.c0 IN (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((-7.64808929E8 COLLATE RTRIM)) AND (((vt0.c0 IN (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((-7.64808929E8 COLLATE RTRIM)) AND (((vt0.c0 IN (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((-7.64808929E8 COLLATE RTRIM)) AND (((vt0.c0 IN (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((-7.64808929E8 COLLATE RTRIM)) AND (((vt0.c0 IN (vt0.c0))))));
SELECT * FROM vt0 RIGHT OUTER JOIN rt1 ON ((((((v0.c2)OR(v0.c2)))OR(v0.c4)))LIKE(((v0.c2)/(rt1.c1)))) FULL OUTER JOIN v0 ON CASE CASE WHEN rt1.c1 THEN NULL ELSE v0.c0 END  WHEN (v0.c2 IN ()) THEN CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 WHEN v0.c1 THEN '' END WHEN CAST(v0.c1 AS BLOB) THEN CAST(x'' AS TEXT) WHEN ((vt0.c0)||(rt1.c2)) THEN PRINTF(v0.c3) ELSE ((vt0.c0) IS TRUE) END WHERE ((v0.c0 IN ()) COLLATE BINARY) ORDER BY (CAST(v0.c4 AS TEXT) IN ()) ASC, ((((rt1.c1 IN ())))!=((CAST(rt1.c0 AS BLOB)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON ((((((v0.c2)OR(v0.c2)))OR(v0.c4)))LIKE(((v0.c2)/(rt1.c1)))) FULL OUTER JOIN v0 ON CASE CASE WHEN rt1.c1 THEN NULL ELSE v0.c0 END  WHEN (v0.c2 IN ()) THEN CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 WHEN v0.c1 THEN '' END WHEN CAST(v0.c1 AS BLOB) THEN CAST(x'' AS TEXT) WHEN ((vt0.c0)||(rt1.c2)) THEN PRINTF(v0.c3) ELSE ((vt0.c0) IS TRUE) END ORDER BY (CAST(v0.c4 AS TEXT) IN ()) ASC, ((((rt1.c1 IN ())))!=((CAST(rt1.c0 AS BLOB)))) DESC  NULLS FIRST);
SELECT * FROM vt0 RIGHT OUTER JOIN rt1 ON ((((((v0.c2)OR(v0.c2)))OR(v0.c4)))LIKE(((v0.c2)/(rt1.c1)))) FULL OUTER JOIN v0 ON CASE CASE WHEN rt1.c1 THEN NULL ELSE v0.c0 END  WHEN (v0.c2 IN ()) THEN CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 WHEN v0.c1 THEN '' END WHEN CAST(v0.c1 AS BLOB) THEN CAST(x'' AS TEXT) WHEN ((vt0.c0)||(rt1.c2)) THEN PRINTF(v0.c3) ELSE ((vt0.c0) IS TRUE) END WHERE ((v0.c0 IN ()) COLLATE BINARY) ORDER BY (CAST(v0.c4 AS TEXT) IN ()) ASC, ((((rt1.c1 IN ())))!=((CAST(rt1.c0 AS BLOB)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON ((((((v0.c2)OR(v0.c2)))OR(v0.c4)))LIKE(((v0.c2)/(rt1.c1)))) FULL OUTER JOIN v0 ON CASE CASE WHEN rt1.c1 THEN NULL ELSE v0.c0 END  WHEN (v0.c2 IN ()) THEN CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 WHEN v0.c1 THEN '' END WHEN CAST(v0.c1 AS BLOB) THEN CAST(x'' AS TEXT) WHEN ((vt0.c0)||(rt1.c2)) THEN PRINTF(v0.c3) ELSE ((vt0.c0) IS TRUE) END ORDER BY (CAST(v0.c4 AS TEXT) IN ()) ASC, ((((rt1.c1 IN ())))!=((CAST(rt1.c0 AS BLOB)))) DESC  NULLS FIRST);
SELECT * FROM vt0, v0, rt1 WHERE (CAST(v0.c3 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c3 AS NUMERIC)) IS TRUE)  as count FROM vt0, v0, rt1);
SELECT * FROM vt0, v0, rt1 WHERE (CAST(v0.c3 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c3 AS NUMERIC)) IS TRUE)  as count FROM vt0, v0, rt1);
SELECT * FROM vt0, v0, rt1 WHERE (CAST(v0.c3 AS NUMERIC));
SELECT * FROM vt0 WHERE ((((vt0.c0) ISNULL) IN ())) ORDER BY (('') NOT BETWEEN (((vt0.c0)||(vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) ISNULL) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (('') NOT BETWEEN (((vt0.c0)||(vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT * FROM vt0 WHERE ((((vt0.c0) ISNULL) IN ())) ORDER BY (('') NOT BETWEEN (((vt0.c0)||(vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) ISNULL) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (('') NOT BETWEEN (((vt0.c0)||(vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT * FROM vt0 WHERE ((((vt0.c0) ISNULL) IN ())) ORDER BY (('') NOT BETWEEN (((vt0.c0)||(vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0)))<(0.38775631962340584 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>>(vt0.c0)))<(0.38775631962340584 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0)))<(0.38775631962340584 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>>(vt0.c0)))<(0.38775631962340584 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0)))<(0.38775631962340584 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE (vt1.c0) ORDER BY (('')IS NOT((NOT (v0.c4))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY (('')IS NOT((NOT (v0.c4))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE (vt1.c0) ORDER BY (('')IS NOT((NOT (v0.c4))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY (('')IS NOT((NOT (v0.c4))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE (vt1.c0) ORDER BY (('')IS NOT((NOT (v0.c4))))  NULLS LAST;
SELECT COUNT(*) FROM vt1, rt1 WHERE (CAST(CASE '0.5316224406019278'  WHEN 0.43272584948878845 THEN vt1.c0 ELSE rt1.c1 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE '0.5316224406019278'  WHEN 0.43272584948878845 THEN vt1.c0 ELSE rt1.c1 END AS NUMERIC)) IS TRUE)  as count FROM vt1, rt1);
SELECT COUNT(*) FROM vt1, rt1 WHERE (CAST(CASE '0.5316224406019278'  WHEN 0.43272584948878845 THEN vt1.c0 ELSE rt1.c1 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE '0.5316224406019278'  WHEN 0.43272584948878845 THEN vt1.c0 ELSE rt1.c1 END AS NUMERIC)) IS TRUE)  as count FROM vt1, rt1);
SELECT COUNT(*) FROM vt1, rt1 WHERE (CAST(CASE '0.5316224406019278'  WHEN 0.43272584948878845 THEN vt1.c0 ELSE rt1.c1 END AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1, v0, rt1 CROSS JOIN vt0 ON ((((CASE v0.c3  WHEN vt0.c0 THEN vt0.c0 END)AND(NULL)))OR(((x'42cb')IS(v0.c2)))) WHERE ((+ (v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((+ (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, v0, rt1 CROSS JOIN vt0 ON ((((CASE v0.c3  WHEN vt0.c0 THEN vt0.c0 END)AND(NULL)))OR(((x'42cb')IS(v0.c2)))));
SELECT ALL COUNT(*) FROM vt1, v0, rt1 CROSS JOIN vt0 ON ((((CASE v0.c3  WHEN vt0.c0 THEN vt0.c0 END)AND(NULL)))OR(((x'42cb')IS(v0.c2)))) WHERE ((+ (v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((+ (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, v0, rt1 CROSS JOIN vt0 ON ((((CASE v0.c3  WHEN vt0.c0 THEN vt0.c0 END)AND(NULL)))OR(((x'42cb')IS(v0.c2)))));
SELECT ALL COUNT(*) FROM vt1, v0, rt1 CROSS JOIN vt0 ON ((((CASE v0.c3  WHEN vt0.c0 THEN vt0.c0 END)AND(NULL)))OR(((x'42cb')IS(v0.c2)))) WHERE ((+ (v0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM vt1, v0 WHERE (CASE WHEN v0.c2 THEN ((v0.c2)||(v0.c1)) ELSE (- (v0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c2 THEN ((v0.c2)||(v0.c1)) ELSE (- (v0.c2)) END) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (CASE WHEN v0.c2 THEN ((v0.c2)||(v0.c1)) ELSE (- (v0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c2 THEN ((v0.c2)||(v0.c1)) ELSE (- (v0.c2)) END) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (CASE WHEN v0.c2 THEN ((v0.c2)||(v0.c1)) ELSE (- (v0.c2)) END);
SELECT ALL * FROM v0, rt1, vt1, vt0 WHERE (CAST(CASE rt1.c0  WHEN rt1.c1 THEN vt0.c0 ELSE -724218424 END AS REAL)) ORDER BY ((((vt1.c0)OR(v0.c4)))OR(rt1.c0)) COLLATE BINARY COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt1.c0  WHEN rt1.c1 THEN vt0.c0 ELSE -724218424 END AS REAL)) IS TRUE)  as count FROM v0, rt1, vt1, vt0 ORDER BY ((((vt1.c0)OR(v0.c4)))OR(rt1.c0)) COLLATE BINARY COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL * FROM v0, rt1, vt1, vt0 WHERE (CAST(CASE rt1.c0  WHEN rt1.c1 THEN vt0.c0 ELSE -724218424 END AS REAL)) ORDER BY ((((vt1.c0)OR(v0.c4)))OR(rt1.c0)) COLLATE BINARY COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt1.c0  WHEN rt1.c1 THEN vt0.c0 ELSE -724218424 END AS REAL)) IS TRUE)  as count FROM v0, rt1, vt1, vt0 ORDER BY ((((vt1.c0)OR(v0.c4)))OR(rt1.c0)) COLLATE BINARY COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL * FROM v0, rt1, vt1, vt0 WHERE (CAST(CASE rt1.c0  WHEN rt1.c1 THEN vt0.c0 ELSE -724218424 END AS REAL)) ORDER BY ((((vt1.c0)OR(v0.c4)))OR(rt1.c0)) COLLATE BINARY COLLATE RTRIM DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1, v0, rt1 WHERE ((((v0.c3 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((v0.c3 IN ())) NOTNULL)) IS TRUE)  as count FROM vt0, vt1, v0, rt1);
SELECT ALL COUNT(*) FROM vt0, vt1, v0, rt1 WHERE ((((v0.c3 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((v0.c3 IN ())) NOTNULL)) IS TRUE)  as count FROM vt0, vt1, v0, rt1);
SELECT ALL COUNT(*) FROM vt0, vt1, v0, rt1 WHERE ((((v0.c3 IN ())) NOTNULL));
SELECT COUNT(*) FROM rt1, vt1 WHERE ((((vt1.c0)/(rt1.c0)) IN ((vt1.c0 IN (vt1.c0)), CAST(rt1.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)/(rt1.c0)) IN ((vt1.c0 IN (vt1.c0)), CAST(rt1.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt1, vt1);
SELECT COUNT(*) FROM rt1, vt1 WHERE ((((vt1.c0)/(rt1.c0)) IN ((vt1.c0 IN (vt1.c0)), CAST(rt1.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)/(rt1.c0)) IN ((vt1.c0 IN (vt1.c0)), CAST(rt1.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt1, vt1);
SELECT COUNT(*) FROM rt1, vt1 WHERE ((((vt1.c0)/(rt1.c0)) IN ((vt1.c0 IN (vt1.c0)), CAST(rt1.c1 AS NUMERIC))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON CASE ((vt1.c0) ISNULL)  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN (NOT (vt1.c0)) ELSE ((vt0.c0)|(vt0.c0)) END WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) AS REAL)) ORDER BY (NOT (NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON CASE ((vt1.c0) ISNULL)  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN (NOT (vt1.c0)) ELSE ((vt0.c0)|(vt0.c0)) END ORDER BY (NOT (NULL))  NULLS LAST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON CASE ((vt1.c0) ISNULL)  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN (NOT (vt1.c0)) ELSE ((vt0.c0)|(vt0.c0)) END WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) AS REAL)) ORDER BY (NOT (NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON CASE ((vt1.c0) ISNULL)  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN (NOT (vt1.c0)) ELSE ((vt0.c0)|(vt0.c0)) END ORDER BY (NOT (NULL))  NULLS LAST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON CASE ((vt1.c0) ISNULL)  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN (NOT (vt1.c0)) ELSE ((vt0.c0)|(vt0.c0)) END WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) AS REAL)) ORDER BY (NOT (NULL))  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt1, vt1 WHERE (((((((((((vt0.c0)OR(vt1.c0)))OR(rt1.c1)))OR(rt1.c2)))AND(vt0.c0)))=((((rt1.c1)) NOT BETWEEN (('')) AND ((vt1.c0)))))) ORDER BY 'FX'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)OR(vt1.c0)))OR(rt1.c1)))OR(rt1.c2)))AND(vt0.c0)))=((((rt1.c1)) NOT BETWEEN (('')) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt0, rt1, vt1 ORDER BY 'FX'  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1, vt1 WHERE (((((((((((vt0.c0)OR(vt1.c0)))OR(rt1.c1)))OR(rt1.c2)))AND(vt0.c0)))=((((rt1.c1)) NOT BETWEEN (('')) AND ((vt1.c0)))))) ORDER BY 'FX'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)OR(vt1.c0)))OR(rt1.c1)))OR(rt1.c2)))AND(vt0.c0)))=((((rt1.c1)) NOT BETWEEN (('')) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt0, rt1, vt1 ORDER BY 'FX'  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1, vt1 WHERE (((((((((((vt0.c0)OR(vt1.c0)))OR(rt1.c1)))OR(rt1.c2)))AND(vt0.c0)))=((((rt1.c1)) NOT BETWEEN (('')) AND ((vt1.c0)))))) ORDER BY 'FX'  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((((NOT (vt0.c0)))AND(CHANGES())))AND(((vt0.c0)>(vt0.c0))))) ORDER BY CAST('-1637283507' AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((NOT (vt0.c0)))AND(CHANGES())))AND(((vt0.c0)>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST('-1637283507' AS BLOB) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((((NOT (vt0.c0)))AND(CHANGES())))AND(((vt0.c0)>(vt0.c0))))) ORDER BY CAST('-1637283507' AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((NOT (vt0.c0)))AND(CHANGES())))AND(((vt0.c0)>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST('-1637283507' AS BLOB) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((((NOT (vt0.c0)))AND(CHANGES())))AND(((vt0.c0)>(vt0.c0))))) ORDER BY CAST('-1637283507' AS BLOB) ASC  NULLS LAST;
SELECT * FROM vt1 WHERE (((((vt1.c0 COLLATE BINARY)OR(CASE vt1.c0  WHEN vt1.c0 THEN '0.5316224406019278' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (x'')))) ASC, (((vt1.c0, x'61e8', vt1.c0)) BETWEEN ((((vt1.c0) ISNULL), ((((((((x'')AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(0x5fa089bf)), (((vt1.c0))<((vt1.c0))))) AND ((vt1.c0 COLLATE RTRIM, ((vt1.c0)!=('j')), (vt1.c0 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 COLLATE BINARY)OR(CASE vt1.c0  WHEN vt1.c0 THEN '0.5316224406019278' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (x'')))) ASC, (((vt1.c0, x'61e8', vt1.c0)) BETWEEN ((((vt1.c0) ISNULL), ((((((((x'')AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(0x5fa089bf)), (((vt1.c0))<((vt1.c0))))) AND ((vt1.c0 COLLATE RTRIM, ((vt1.c0)<>('j')), (vt1.c0 IN ())))) ASC);
SELECT * FROM vt1 WHERE (((((vt1.c0 COLLATE BINARY)OR(CASE vt1.c0  WHEN vt1.c0 THEN '0.5316224406019278' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (x'')))) ASC, (((vt1.c0, x'61e8', vt1.c0)) BETWEEN ((((vt1.c0) ISNULL), ((((((((x'')AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(0x5fa089bf)), (((vt1.c0))<((vt1.c0))))) AND ((vt1.c0 COLLATE RTRIM, ((vt1.c0)!=('j')), (vt1.c0 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 COLLATE BINARY)OR(CASE vt1.c0  WHEN vt1.c0 THEN '0.5316224406019278' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (x'')))) ASC, (((vt1.c0, x'61e8', vt1.c0)) BETWEEN ((((vt1.c0) ISNULL), ((((((((x'')AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(0x5fa089bf)), (((vt1.c0))<((vt1.c0))))) AND ((vt1.c0 COLLATE RTRIM, ((vt1.c0)<>('j')), (vt1.c0 IN ())))) ASC);
SELECT * FROM vt1 WHERE (((((vt1.c0 COLLATE BINARY)OR(CASE vt1.c0  WHEN vt1.c0 THEN '0.5316224406019278' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (x'')))) ASC, (((vt1.c0, x'61e8', vt1.c0)) BETWEEN ((((vt1.c0) ISNULL), ((((((((x'')AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(0x5fa089bf)), (((vt1.c0))<((vt1.c0))))) AND ((vt1.c0 COLLATE RTRIM, ((vt1.c0)!=('j')), (vt1.c0 IN ())))) ASC;
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt1 ON (((((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c4)))) NOT BETWEEN (((vt1.c0)|(v0.c3))) AND (CAST(rt1.c0 AS INTEGER))) CROSS JOIN v0 ON NULL WHERE ((((vt1.c0)GLOB(rt1.c0)) IN (CAST(v0.c4 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)GLOB(rt1.c0)) IN (CAST(v0.c4 AS INTEGER)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt1 ON (((((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c4)))) NOT BETWEEN (((vt1.c0)|(v0.c3))) AND (CAST(rt1.c0 AS INTEGER))) CROSS JOIN v0 ON NULL);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt1 ON (((((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c4)))) NOT BETWEEN (((vt1.c0)|(v0.c3))) AND (CAST(rt1.c0 AS INTEGER))) CROSS JOIN v0 ON NULL WHERE ((((vt1.c0)GLOB(rt1.c0)) IN (CAST(v0.c4 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)GLOB(rt1.c0)) IN (CAST(v0.c4 AS INTEGER)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt1 ON (((((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c4)))) NOT BETWEEN (((vt1.c0)|(v0.c3))) AND (CAST(rt1.c0 AS INTEGER))) CROSS JOIN v0 ON NULL);
SELECT * FROM v0 NOT INDEXED, vt1 CROSS JOIN vt0 ON ((json_array(vt0.c0, v0.c2))AND(CAST(v0.c1 AS REAL))) FULL OUTER JOIN rt1 ON ((((vt0.c0)IS NOT(v0.c1)))>>((((rt1.c1))!=((rt1.c0))))) WHERE (CASE WHEN CAST(',' AS NUMERIC) THEN vt0.c0 END) ORDER BY LIKELIHOOD(DISTINCT ((((vt0.c0)AND(v0.c4)))AND(rt1.c1)), 0.854126541060928) ASC, (((((rt1.c0)) BETWEEN ((v0.c3)) AND ((rt1.c1)))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(',' AS NUMERIC) THEN vt0.c0 END) IS TRUE)  as count FROM v0, vt1 CROSS JOIN vt0 ON ((json_array(vt0.c0, v0.c2))AND(CAST(v0.c1 AS REAL))) FULL OUTER JOIN rt1 ON ((((vt0.c0)IS NOT(v0.c1)))>>((((rt1.c1))<>((rt1.c0))))) ORDER BY LIKELIHOOD(DISTINCT ((((vt0.c0)AND(v0.c4)))AND(rt1.c1)), 0.854126541060928) ASC, (((((rt1.c0)) BETWEEN ((v0.c3)) AND ((rt1.c1)))) ISNULL) ASC);
SELECT * FROM v0 NOT INDEXED, vt1 CROSS JOIN vt0 ON ((json_array(vt0.c0, v0.c2))AND(CAST(v0.c1 AS REAL))) FULL OUTER JOIN rt1 ON ((((vt0.c0)IS NOT(v0.c1)))>>((((rt1.c1))!=((rt1.c0))))) WHERE (CASE WHEN CAST(',' AS NUMERIC) THEN vt0.c0 END) ORDER BY LIKELIHOOD(DISTINCT ((((vt0.c0)AND(v0.c4)))AND(rt1.c1)), 0.854126541060928) ASC, (((((rt1.c0)) BETWEEN ((v0.c3)) AND ((rt1.c1)))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(',' AS NUMERIC) THEN vt0.c0 END) IS TRUE)  as count FROM v0, vt1 CROSS JOIN vt0 ON ((json_array(vt0.c0, v0.c2))AND(CAST(v0.c1 AS REAL))) FULL OUTER JOIN rt1 ON ((((vt0.c0)IS NOT(v0.c1)))>>((((rt1.c1))<>((rt1.c0))))) ORDER BY LIKELIHOOD(DISTINCT ((((vt0.c0)AND(v0.c4)))AND(rt1.c1)), 0.854126541060928) ASC, (((((rt1.c0)) BETWEEN ((v0.c3)) AND ((rt1.c1)))) ISNULL) ASC);
SELECT * FROM v0 NOT INDEXED, vt1 CROSS JOIN vt0 ON ((json_array(vt0.c0, v0.c2))AND(CAST(v0.c1 AS REAL))) FULL OUTER JOIN rt1 ON ((((vt0.c0)IS NOT(v0.c1)))>>((((rt1.c1))!=((rt1.c0))))) WHERE (CASE WHEN CAST(',' AS NUMERIC) THEN vt0.c0 END) ORDER BY LIKELIHOOD(DISTINCT ((((vt0.c0)AND(v0.c4)))AND(rt1.c1)), 0.854126541060928) ASC, (((((rt1.c0)) BETWEEN ((v0.c3)) AND ((rt1.c1)))) ISNULL) ASC;
SELECT ALL * FROM vt0, vt1, rt1, v0 WHERE (LIKE(((v0.c0)&(rt1.c0)), NULL)) ORDER BY ((((v0.c2) NOT BETWEEN (v0.c3) AND (vt1.c0)))+((rt1.c0 IN (v0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKE(((v0.c0)&(rt1.c0)), NULL)) IS TRUE)  as count FROM vt0, vt1, rt1, v0 ORDER BY ((((v0.c2) NOT BETWEEN (v0.c3) AND (vt1.c0)))+((rt1.c0 IN (v0.c3))))  NULLS LAST);
SELECT ALL * FROM vt0, vt1, rt1, v0 WHERE (LIKE(((v0.c0)&(rt1.c0)), NULL)) ORDER BY ((((v0.c2) NOT BETWEEN (v0.c3) AND (vt1.c0)))+((rt1.c0 IN (v0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKE(((v0.c0)&(rt1.c0)), NULL)) IS TRUE)  as count FROM vt0, vt1, rt1, v0 ORDER BY ((((v0.c2) NOT BETWEEN (v0.c3) AND (vt1.c0)))+((rt1.c0 IN (v0.c3))))  NULLS LAST);
SELECT ALL * FROM vt0, vt1, rt1, v0 WHERE (LIKE(((v0.c0)&(rt1.c0)), NULL)) ORDER BY ((((v0.c2) NOT BETWEEN (v0.c3) AND (vt1.c0)))+((rt1.c0 IN (v0.c3))))  NULLS LAST;
SELECT * FROM vt0 FULL OUTER JOIN rt1 ON (((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))&(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1)))) WHERE (((((vt0.c0)AND(vt0.c0)))AND(rt1.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(vt0.c0)))AND(rt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON (((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))&(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1)))));
SELECT * FROM vt0 FULL OUTER JOIN rt1 ON (((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))&(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1)))) WHERE (((((vt0.c0)AND(vt0.c0)))AND(rt1.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(vt0.c0)))AND(rt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON (((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))&(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1)))));
SELECT * FROM vt0 FULL OUTER JOIN rt1 ON (((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))&(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1)))) WHERE (((((vt0.c0)AND(vt0.c0)))AND(rt1.c1)) COLLATE BINARY);
SELECT ALL * FROM rt1, vt0, v0, vt1 WHERE (((((((rt1.c1)LIKE(v0.c2)))OR(LOWER(DISTINCT vt1.c0))))OR(TRIM(DISTINCT v0.c3, 0.38775631962340584))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1)LIKE(v0.c2)))OR(LOWER(DISTINCT vt1.c0))))OR(TRIM(DISTINCT v0.c3, 0.38775631962340584)))) IS TRUE)  as count FROM rt1, vt0, v0, vt1);
SELECT ALL * FROM rt1, vt0, v0, vt1 WHERE (((((((rt1.c1)LIKE(v0.c2)))OR(LOWER(DISTINCT vt1.c0))))OR(TRIM(DISTINCT v0.c3, 0.38775631962340584))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1)LIKE(v0.c2)))OR(LOWER(DISTINCT vt1.c0))))OR(TRIM(DISTINCT v0.c3, 0.38775631962340584)))) IS TRUE)  as count FROM rt1, vt0, v0, vt1);
SELECT ALL * FROM rt1, vt0, v0, vt1 WHERE (((((((rt1.c1)LIKE(v0.c2)))OR(LOWER(DISTINCT vt1.c0))))OR(TRIM(DISTINCT v0.c3, 0.38775631962340584))));
SELECT COUNT(*) FROM vt1 CROSS JOIN v0 ON CAST((x'' IN ()) AS TEXT) WHERE ((~ (((v0.c1)|(v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c1)|(v0.c2))))) IS TRUE)  as count FROM vt1 CROSS JOIN v0 ON CAST((x'' IN ()) AS TEXT));
SELECT COUNT(*) FROM vt1 CROSS JOIN v0 ON CAST((x'' IN ()) AS TEXT) WHERE ((~ (((v0.c1)|(v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c1)|(v0.c2))))) IS TRUE)  as count FROM vt1 CROSS JOIN v0 ON CAST((x'' IN ()) AS TEXT));
SELECT COUNT(*) FROM vt1 CROSS JOIN v0 ON CAST((x'' IN ()) AS TEXT) WHERE ((~ (((v0.c1)|(v0.c2)))));
SELECT ALL * FROM vt0 WHERE ('0.0016851621737349332');
SELECT SUM(count) FROM (SELECT (('0.0016851621737349332') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('0.0016851621737349332');
SELECT SUM(count) FROM (SELECT (('0.0016851621737349332') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('0.0016851621737349332');
SELECT ALL * FROM v0 INNER JOIN vt0 ON ((rt1.c1) NOT BETWEEN (rt1.c1) AND (v0.c0)) COLLATE RTRIM CROSS JOIN rt1 ON (((vt0.c0 IN ()))||(0xffffffff8c0a3283)) WHERE ((~ (v0.c0))) ORDER BY COALESCE(CAST(v0.c2 AS BLOB), ((v0.c1)GLOB(rt1.c2))) DESC;
SELECT SUM(count) FROM (SELECT (((~ (v0.c0))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((rt1.c1) NOT BETWEEN (rt1.c1) AND (v0.c0)) COLLATE RTRIM CROSS JOIN rt1 ON (((vt0.c0 IN ()))||(0Xffffffff8c0a3283)) ORDER BY COALESCE(CAST(v0.c2 AS BLOB), ((v0.c1)GLOB(rt1.c2))) DESC);
SELECT ALL * FROM v0 INNER JOIN vt0 ON ((rt1.c1) NOT BETWEEN (rt1.c1) AND (v0.c0)) COLLATE RTRIM CROSS JOIN rt1 ON (((vt0.c0 IN ()))||(0xffffffff8c0a3283)) WHERE ((~ (v0.c0))) ORDER BY COALESCE(CAST(v0.c2 AS BLOB), ((v0.c1)GLOB(rt1.c2))) DESC;
SELECT SUM(count) FROM (SELECT (((~ (v0.c0))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((rt1.c1) NOT BETWEEN (rt1.c1) AND (v0.c0)) COLLATE RTRIM CROSS JOIN rt1 ON (((vt0.c0 IN ()))||(0Xffffffff8c0a3283)) ORDER BY COALESCE(CAST(v0.c2 AS BLOB), ((v0.c1)GLOB(rt1.c2))) DESC);
SELECT ALL * FROM v0 INNER JOIN vt0 ON ((rt1.c1) NOT BETWEEN (rt1.c1) AND (v0.c0)) COLLATE RTRIM CROSS JOIN rt1 ON (((vt0.c0 IN ()))||(0xffffffff8c0a3283)) WHERE ((~ (v0.c0))) ORDER BY COALESCE(CAST(v0.c2 AS BLOB), ((v0.c1)GLOB(rt1.c2))) DESC;
SELECT ALL COUNT(*) FROM rt1 WHERE (IFNULL(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 END, ((rt1.c1)GLOB(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 END, ((rt1.c1)GLOB(rt1.c2)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (IFNULL(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 END, ((rt1.c1)GLOB(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 END, ((rt1.c1)GLOB(rt1.c2)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (IFNULL(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 END, ((rt1.c1)GLOB(rt1.c2))));
SELECT COUNT(*) FROM rt1, v0 RIGHT OUTER JOIN vt0 ON (((- (vt1.c0))) NOTNULL) FULL OUTER JOIN vt1 ON IFNULL(DISTINCT ((v0.c1)!=(v0.c3)), CASE WHEN vt1.c0 THEN NULL ELSE v0.c1 END) WHERE (UNLIKELY((v0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY((v0.c2 IN ()))) IS TRUE)  as count FROM rt1, v0 RIGHT OUTER JOIN vt0 ON (((- (vt1.c0))) NOTNULL) FULL OUTER JOIN vt1 ON IFNULL(DISTINCT ((v0.c1)!=(v0.c3)), CASE WHEN vt1.c0 THEN NULL ELSE v0.c1 END));
SELECT COUNT(*) FROM rt1, v0 RIGHT OUTER JOIN vt0 ON (((- (vt1.c0))) NOTNULL) FULL OUTER JOIN vt1 ON IFNULL(DISTINCT ((v0.c1)!=(v0.c3)), CASE WHEN vt1.c0 THEN NULL ELSE v0.c1 END) WHERE (UNLIKELY((v0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY((v0.c2 IN ()))) IS TRUE)  as count FROM rt1, v0 RIGHT OUTER JOIN vt0 ON (((- (vt1.c0))) NOTNULL) FULL OUTER JOIN vt1 ON IFNULL(DISTINCT ((v0.c1)!=(v0.c3)), CASE WHEN vt1.c0 THEN NULL ELSE v0.c1 END));
SELECT ALL * FROM vt0, rt1, vt1, v0 WHERE (((LOWER(DISTINCT x'7da5')) NOTNULL)) ORDER BY (NOT (((vt0.c0)!=(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT x'7da5')) NOTNULL)) IS TRUE)  as count FROM vt0, rt1, vt1, v0 ORDER BY (NOT (((vt0.c0)<>(v0.c0)))) DESC);
SELECT ALL * FROM vt0, rt1, vt1, v0 WHERE (((LOWER(DISTINCT x'7da5')) NOTNULL)) ORDER BY (NOT (((vt0.c0)!=(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT x'7da5')) NOTNULL)) IS TRUE)  as count FROM vt0, rt1, vt1, v0 ORDER BY (NOT (((vt0.c0)<>(v0.c0)))) DESC);
SELECT ALL * FROM vt0, rt1, vt1, v0 WHERE (((LOWER(DISTINCT x'7da5')) NOTNULL)) ORDER BY (NOT (((vt0.c0)!=(v0.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON CAST('lAIZ' AS NUMERIC) LEFT OUTER JOIN vt1 ON (~ (((v0.c3)/(v0.c1)))) WHERE ((((vt0.c0 IN ())) BETWEEN (v0.c2) AND (CASE WHEN v0.c3 THEN vt1.c0 ELSE x'edb8bca6' END))) ORDER BY (((vt1.c0)<(vt1.c0)) IN ()) DESC, vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) BETWEEN (v0.c2) AND (CASE WHEN v0.c3 THEN vt1.c0 ELSE x'edb8bca6' END))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON CAST('lAIZ' AS NUMERIC) LEFT OUTER JOIN vt1 ON (~ (((v0.c3)/(v0.c1)))) ORDER BY (((vt1.c0)<(vt1.c0)) IN ()) DESC, vt1.c0 DESC);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON CAST('lAIZ' AS NUMERIC) LEFT OUTER JOIN vt1 ON (~ (((v0.c3)/(v0.c1)))) WHERE ((((vt0.c0 IN ())) BETWEEN (v0.c2) AND (CASE WHEN v0.c3 THEN vt1.c0 ELSE x'edb8bca6' END))) ORDER BY (((vt1.c0)<(vt1.c0)) IN ()) DESC, vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) BETWEEN (v0.c2) AND (CASE WHEN v0.c3 THEN vt1.c0 ELSE x'edb8bca6' END))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON CAST('lAIZ' AS NUMERIC) LEFT OUTER JOIN vt1 ON (~ (((v0.c3)/(v0.c1)))) ORDER BY (((vt1.c0)<(vt1.c0)) IN ()) DESC, vt1.c0 DESC);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON CAST('lAIZ' AS NUMERIC) LEFT OUTER JOIN vt1 ON (~ (((v0.c3)/(v0.c1)))) WHERE ((((vt0.c0 IN ())) BETWEEN (v0.c2) AND (CASE WHEN v0.c3 THEN vt1.c0 ELSE x'edb8bca6' END))) ORDER BY (((vt1.c0)<(vt1.c0)) IN ()) DESC, vt1.c0 DESC;
SELECT COUNT(*) FROM vt0 WHERE (TRIM(((vt0.c0) NOT NULL))) ORDER BY ((((vt0.c0) NOTNULL)) ISNULL) DESC, (((('FALSE') BETWEEN (vt0.c0) AND (vt0.c0)))||(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((vt0.c0) NOT NULL))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOTNULL)) ISNULL) DESC, (((('FALSE') BETWEEN (vt0.c0) AND (vt0.c0)))||(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (TRIM(((vt0.c0) NOT NULL))) ORDER BY ((((vt0.c0) NOTNULL)) ISNULL) DESC, (((('FALSE') BETWEEN (vt0.c0) AND (vt0.c0)))||(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((vt0.c0) NOT NULL))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOTNULL)) ISNULL) DESC, (((('FALSE') BETWEEN (vt0.c0) AND (vt0.c0)))||(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (TRIM(((vt0.c0) NOT NULL))) ORDER BY ((((vt0.c0) NOTNULL)) ISNULL) DESC, (((('FALSE') BETWEEN (vt0.c0) AND (vt0.c0)))||(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt1, v0 FULL OUTER JOIN vt0 ON ((((0.5756955854473226)<(rt1.c0))) IS TRUE) WHERE (((rt1.c2 IN ()) IN ((+ (v0.c0))))) ORDER BY (+ (((v0.c0)>=(v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 IN ()) IN ((+ (v0.c0))))) IS TRUE)  as count FROM rt1, vt1, v0 FULL OUTER JOIN vt0 ON ((((0.5756955854473226)<(rt1.c0))) IS TRUE) ORDER BY (+ (((v0.c0)>=(v0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt1, v0 FULL OUTER JOIN vt0 ON ((((0.5756955854473226)<(rt1.c0))) IS TRUE) WHERE (((rt1.c2 IN ()) IN ((+ (v0.c0))))) ORDER BY (+ (((v0.c0)>=(v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 IN ()) IN ((+ (v0.c0))))) IS TRUE)  as count FROM rt1, vt1, v0 FULL OUTER JOIN vt0 ON ((((0.5756955854473226)<(rt1.c0))) IS TRUE) ORDER BY (+ (((v0.c0)>=(v0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt1, v0 FULL OUTER JOIN vt0 ON ((((0.5756955854473226)<(rt1.c0))) IS TRUE) WHERE (((rt1.c2 IN ()) IN ((+ (v0.c0))))) ORDER BY (+ (((v0.c0)>=(v0.c0)))) DESC  NULLS FIRST;
SELECT * FROM v0, vt1 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE (v0.c1);
SELECT * FROM v0, vt0, vt1, rt1 WHERE (((CASE x''  WHEN v0.c0 THEN vt1.c0 WHEN vt0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c2 ELSE rt1.c1 END)LIKE(CASE '1661852469'  WHEN rt1.c2 THEN rt1.c0 ELSE x'' END))) ORDER BY ((((((rt1.c2)OR(v0.c3)))OR(v0.c1))) NOT BETWEEN (rt1.c0) AND ((NOT (rt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE x''  WHEN v0.c0 THEN vt1.c0 WHEN vt0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c2 ELSE rt1.c1 END)LIKE(CASE '1661852469'  WHEN rt1.c2 THEN rt1.c0 ELSE x'' END))) IS TRUE)  as count FROM v0, vt0, vt1, rt1 ORDER BY ((((((rt1.c2)OR(v0.c3)))OR(v0.c1))) NOT BETWEEN (rt1.c0) AND ((NOT (rt1.c1)))) ASC);
SELECT * FROM v0, vt0, vt1, rt1 WHERE (((CASE x''  WHEN v0.c0 THEN vt1.c0 WHEN vt0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c2 ELSE rt1.c1 END)LIKE(CASE '1661852469'  WHEN rt1.c2 THEN rt1.c0 ELSE x'' END))) ORDER BY ((((((rt1.c2)OR(v0.c3)))OR(v0.c1))) NOT BETWEEN (rt1.c0) AND ((NOT (rt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE x''  WHEN v0.c0 THEN vt1.c0 WHEN vt0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c2 ELSE rt1.c1 END)LIKE(CASE '1661852469'  WHEN rt1.c2 THEN rt1.c0 ELSE x'' END))) IS TRUE)  as count FROM v0, vt0, vt1, rt1 ORDER BY ((((((rt1.c2)OR(v0.c3)))OR(v0.c1))) NOT BETWEEN (rt1.c0) AND ((NOT (rt1.c1)))) ASC);
SELECT * FROM v0, vt0, vt1, rt1 WHERE (((CASE x''  WHEN v0.c0 THEN vt1.c0 WHEN vt0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c2 ELSE rt1.c1 END)LIKE(CASE '1661852469'  WHEN rt1.c2 THEN rt1.c0 ELSE x'' END))) ORDER BY ((((((rt1.c2)OR(v0.c3)))OR(v0.c1))) NOT BETWEEN (rt1.c0) AND ((NOT (rt1.c1)))) ASC;
SELECT * FROM vt0, v0 WHERE (CAST(json_remove(v0.c4, v0.c4) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(json_remove(v0.c4, v0.c4) AS TEXT)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (CAST(json_remove(v0.c4, v0.c4) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(json_remove(v0.c4, v0.c4) AS TEXT)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (CAST(json_remove(v0.c4, v0.c4) AS TEXT));
SELECT * FROM vt0, vt1 LEFT OUTER JOIN rt1 ON (+ ((+ (rt1.c0)))) WHERE (CASE WHEN ((((((((rt1.c2)OR('-892838762')))OR(vt1.c0)))AND(vt0.c0)))OR(rt1.c0)) THEN ((rt1.c0)/(rt1.c1)) ELSE ((vt0.c0) BETWEEN (rt1.c2) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((rt1.c2)OR('-892838762')))OR(vt1.c0)))AND(vt0.c0)))OR(rt1.c0)) THEN ((rt1.c0)/(rt1.c1)) ELSE ((vt0.c0) BETWEEN (rt1.c2) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN rt1 ON (+ ((+ (rt1.c0)))));
SELECT * FROM vt0, vt1 LEFT OUTER JOIN rt1 ON (+ ((+ (rt1.c0)))) WHERE (CASE WHEN ((((((((rt1.c2)OR('-892838762')))OR(vt1.c0)))AND(vt0.c0)))OR(rt1.c0)) THEN ((rt1.c0)/(rt1.c1)) ELSE ((vt0.c0) BETWEEN (rt1.c2) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((rt1.c2)OR('-892838762')))OR(vt1.c0)))AND(vt0.c0)))OR(rt1.c0)) THEN ((rt1.c0)/(rt1.c1)) ELSE ((vt0.c0) BETWEEN (rt1.c2) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN rt1 ON (+ ((+ (rt1.c0)))));
SELECT * FROM vt0, vt1 LEFT OUTER JOIN rt1 ON (+ ((+ (rt1.c0)))) WHERE (CASE WHEN ((((((((rt1.c2)OR('-892838762')))OR(vt1.c0)))AND(vt0.c0)))OR(rt1.c0)) THEN ((rt1.c0)/(rt1.c1)) ELSE ((vt0.c0) BETWEEN (rt1.c2) AND (vt0.c0)) END);
SELECT ALL COUNT(*) FROM v0 WHERE ((NULL IN (v0.c3)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((NULL IN (v0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((NULL IN (v0.c3)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((NULL IN (v0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((NULL IN (v0.c3)) COLLATE RTRIM);
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON ((((((rt1.c0)==(rt1.c0)))AND(LOWER(DISTINCT vt0.c0))))OR(CASE 0.577612346815447  WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c1 END)) WHERE ((((((((((((NULL, vt0.c0, rt1.c1))<>((rt1.c2, vt0.c0, rt1.c0))))OR(CAST(vt0.c0 AS NUMERIC))))AND((((vt0.c0, vt0.c0, rt1.c1)) BETWEEN ((rt1.c1, vt0.c0, rt1.c1)) AND ((rt1.c1, rt1.c0, rt1.c2))))))AND(CAST(rt1.c0 AS REAL))))OR(((vt0.c0)>=(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((NULL, vt0.c0, rt1.c1))!=((rt1.c2, vt0.c0, rt1.c0))))OR(CAST(vt0.c0 AS NUMERIC))))AND((((vt0.c0, vt0.c0, rt1.c1)) BETWEEN ((rt1.c1, vt0.c0, rt1.c1)) AND ((rt1.c1, rt1.c0, rt1.c2))))))AND(CAST(rt1.c0 AS REAL))))OR(((vt0.c0)>=(rt1.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON ((((((rt1.c0)=(rt1.c0)))AND(LOWER(DISTINCT vt0.c0))))OR(CASE 0.577612346815447  WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c1 END)));
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON ((((((rt1.c0)==(rt1.c0)))AND(LOWER(DISTINCT vt0.c0))))OR(CASE 0.577612346815447  WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c1 END)) WHERE ((((((((((((NULL, vt0.c0, rt1.c1))<>((rt1.c2, vt0.c0, rt1.c0))))OR(CAST(vt0.c0 AS NUMERIC))))AND((((vt0.c0, vt0.c0, rt1.c1)) BETWEEN ((rt1.c1, vt0.c0, rt1.c1)) AND ((rt1.c1, rt1.c0, rt1.c2))))))AND(CAST(rt1.c0 AS REAL))))OR(((vt0.c0)>=(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((NULL, vt0.c0, rt1.c1))!=((rt1.c2, vt0.c0, rt1.c0))))OR(CAST(vt0.c0 AS NUMERIC))))AND((((vt0.c0, vt0.c0, rt1.c1)) BETWEEN ((rt1.c1, vt0.c0, rt1.c1)) AND ((rt1.c1, rt1.c0, rt1.c2))))))AND(CAST(rt1.c0 AS REAL))))OR(((vt0.c0)>=(rt1.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON ((((((rt1.c0)=(rt1.c0)))AND(LOWER(DISTINCT vt0.c0))))OR(CASE 0.577612346815447  WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c1 END)));
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON ((((((rt1.c0)==(rt1.c0)))AND(LOWER(DISTINCT vt0.c0))))OR(CASE 0.577612346815447  WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c1 END)) WHERE ((((((((((((NULL, vt0.c0, rt1.c1))<>((rt1.c2, vt0.c0, rt1.c0))))OR(CAST(vt0.c0 AS NUMERIC))))AND((((vt0.c0, vt0.c0, rt1.c1)) BETWEEN ((rt1.c1, vt0.c0, rt1.c1)) AND ((rt1.c1, rt1.c0, rt1.c2))))))AND(CAST(rt1.c0 AS REAL))))OR(((vt0.c0)>=(rt1.c0)))));
SELECT ALL * FROM rt1 WHERE (((((NOT (x'')), ('' IN ()), rt1.c0))<>((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0)), (+ (rt1.c1)), ((rt1.c2) ISNULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (x'')), ('' IN ()), rt1.c0))<>((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0)), (+ (rt1.c1)), ((rt1.c2) ISNULL))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((NOT (x'')), ('' IN ()), rt1.c0))<>((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0)), (+ (rt1.c1)), ((rt1.c2) ISNULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (x'')), ('' IN ()), rt1.c0))<>((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0)), (+ (rt1.c1)), ((rt1.c2) ISNULL))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((NOT (x'')), ('' IN ()), rt1.c0))<>((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0)), (+ (rt1.c1)), ((rt1.c2) ISNULL)))));
SELECT COUNT(*) FROM v0, rt1 WHERE (((((((((2.018030776E9 COLLATE RTRIM)AND(((v0.c1)*(rt1.c0)))))OR((((x'')) NOT BETWEEN ((rt1.c0)) AND ((x''))))))OR(CAST(rt1.c0 AS REAL))))OR((((((((('mN[]')AND(v0.c1)))AND(rt1.c1)))AND(v0.c2)))AND(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((2.018030776E9 COLLATE RTRIM)AND(((v0.c1)*(rt1.c0)))))OR((((x'')) NOT BETWEEN ((rt1.c0)) AND ((x''))))))OR(CAST(rt1.c0 AS REAL))))OR((((((((('mN[]')AND(v0.c1)))AND(rt1.c1)))AND(v0.c2)))AND(rt1.c0))))) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM v0, rt1 WHERE (((((((((2.018030776E9 COLLATE RTRIM)AND(((v0.c1)*(rt1.c0)))))OR((((x'')) NOT BETWEEN ((rt1.c0)) AND ((x''))))))OR(CAST(rt1.c0 AS REAL))))OR((((((((('mN[]')AND(v0.c1)))AND(rt1.c1)))AND(v0.c2)))AND(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((2.018030776E9 COLLATE RTRIM)AND(((v0.c1)*(rt1.c0)))))OR((((x'')) NOT BETWEEN ((rt1.c0)) AND ((x''))))))OR(CAST(rt1.c0 AS REAL))))OR((((((((('mN[]')AND(v0.c1)))AND(rt1.c1)))AND(v0.c2)))AND(rt1.c0))))) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM v0, rt1 WHERE (((((((((2.018030776E9 COLLATE RTRIM)AND(((v0.c1)*(rt1.c0)))))OR((((x'')) NOT BETWEEN ((rt1.c0)) AND ((x''))))))OR(CAST(rt1.c0 AS REAL))))OR((((((((('mN[]')AND(v0.c1)))AND(rt1.c1)))AND(v0.c2)))AND(rt1.c0)))));
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, vt0 WHERE (((((v0.c2)>=(v0.c2))) NOTNULL)) ORDER BY ((v0.c3)/(v0.c3)) COLLATE RTRIM  NULLS LAST, (((((v0.c4)-(v0.c1)), vt0.c0 COLLATE RTRIM, ((0Xffffffffe2b31e81)>>(v0.c4)), v0.c2 COLLATE RTRIM, NULL))<>((TRIM(vt0.c0), NULL, '0.8452106533673392', ((v0.c1)|(vt0.c0)), ((v0.c3)&(v0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c2)>=(v0.c2))) NOTNULL)) IS TRUE)  as count FROM v0, vt0 NOT INDEXED ORDER BY ((v0.c3)/(v0.c3)) COLLATE RTRIM  NULLS LAST, (((((v0.c4)-(v0.c1)), vt0.c0 COLLATE RTRIM, ((0xffffffffe2b31e81)>>(v0.c4)), v0.c2 COLLATE RTRIM, NULL))!=((TRIM(vt0.c0), NULL, '0.8452106533673392', ((v0.c1)|(vt0.c0)), ((v0.c3)&(v0.c2))))) DESC);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, vt0 WHERE (((((v0.c2)>=(v0.c2))) NOTNULL)) ORDER BY ((v0.c3)/(v0.c3)) COLLATE RTRIM  NULLS LAST, (((((v0.c4)-(v0.c1)), vt0.c0 COLLATE RTRIM, ((0Xffffffffe2b31e81)>>(v0.c4)), v0.c2 COLLATE RTRIM, NULL))<>((TRIM(vt0.c0), NULL, '0.8452106533673392', ((v0.c1)|(vt0.c0)), ((v0.c3)&(v0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c2)>=(v0.c2))) NOTNULL)) IS TRUE)  as count FROM v0, vt0 NOT INDEXED ORDER BY ((v0.c3)/(v0.c3)) COLLATE RTRIM  NULLS LAST, (((((v0.c4)-(v0.c1)), vt0.c0 COLLATE RTRIM, ((0xffffffffe2b31e81)>>(v0.c4)), v0.c2 COLLATE RTRIM, NULL))!=((TRIM(vt0.c0), NULL, '0.8452106533673392', ((v0.c1)|(vt0.c0)), ((v0.c3)&(v0.c2))))) DESC);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, vt0 WHERE (((((v0.c2)>=(v0.c2))) NOTNULL)) ORDER BY ((v0.c3)/(v0.c3)) COLLATE RTRIM  NULLS LAST, (((((v0.c4)-(v0.c1)), vt0.c0 COLLATE RTRIM, ((0Xffffffffe2b31e81)>>(v0.c4)), v0.c2 COLLATE RTRIM, NULL))<>((TRIM(vt0.c0), NULL, '0.8452106533673392', ((v0.c1)|(vt0.c0)), ((v0.c3)&(v0.c2))))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE BINARY COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE BINARY COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE BINARY COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE BINARY COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE BINARY COLLATE RTRIM COLLATE RTRIM);
SELECT ALL * FROM vt1, v0, rt1, vt0 WHERE ((~ (x'd94e'))) ORDER BY ((((rt1.c0) IS FALSE)) NOT BETWEEN (-1.166426837E9) AND ((vt1.c0 IN ()))) DESC  NULLS LAST, CASE WHEN ((((v0.c3)AND(v0.c0)))AND(vt0.c0)) THEN rt1.c2 ELSE ((v0.c4) BETWEEN (v0.c3) AND (v0.c1)) END;
SELECT SUM(count) FROM (SELECT (((~ (x'd94e'))) IS TRUE)  as count FROM vt1, v0, rt1, vt0 ORDER BY ((((rt1.c0) IS FALSE)) NOT BETWEEN (-1.166426837E9) AND ((vt1.c0 IN ()))) DESC  NULLS LAST, CASE WHEN ((((v0.c3)AND(v0.c0)))AND(vt0.c0)) THEN rt1.c2 ELSE ((v0.c4) BETWEEN (v0.c3) AND (v0.c1)) END);
SELECT ALL * FROM vt1, v0, rt1, vt0 WHERE ((~ (x'd94e'))) ORDER BY ((((rt1.c0) IS FALSE)) NOT BETWEEN (-1.166426837E9) AND ((vt1.c0 IN ()))) DESC  NULLS LAST, CASE WHEN ((((v0.c3)AND(v0.c0)))AND(vt0.c0)) THEN rt1.c2 ELSE ((v0.c4) BETWEEN (v0.c3) AND (v0.c1)) END;
SELECT SUM(count) FROM (SELECT (((~ (x'd94e'))) IS TRUE)  as count FROM vt1, v0, rt1, vt0 ORDER BY ((((rt1.c0) IS FALSE)) NOT BETWEEN (-1.166426837E9) AND ((vt1.c0 IN ()))) DESC  NULLS LAST, CASE WHEN ((((v0.c3)AND(v0.c0)))AND(vt0.c0)) THEN rt1.c2 ELSE ((v0.c4) BETWEEN (v0.c3) AND (v0.c1)) END);
SELECT ALL * FROM vt1, v0, rt1, vt0 WHERE ((~ (x'd94e'))) ORDER BY ((((rt1.c0) IS FALSE)) NOT BETWEEN (-1.166426837E9) AND ((vt1.c0 IN ()))) DESC  NULLS LAST, CASE WHEN ((((v0.c3)AND(v0.c0)))AND(vt0.c0)) THEN rt1.c2 ELSE ((v0.c4) BETWEEN (v0.c3) AND (v0.c1)) END;
SELECT ALL COUNT(*) FROM vt0, v0, rt1, vt1 WHERE (UNLIKELY(((v0.c0) NOT BETWEEN (v0.c3) AND (rt1.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((v0.c0) NOT BETWEEN (v0.c3) AND (rt1.c0)))) IS TRUE)  as count FROM vt0, v0, rt1, vt1);
SELECT ALL COUNT(*) FROM vt0, v0, rt1, vt1 WHERE (UNLIKELY(((v0.c0) NOT BETWEEN (v0.c3) AND (rt1.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((v0.c0) NOT BETWEEN (v0.c3) AND (rt1.c0)))) IS TRUE)  as count FROM vt0, v0, rt1, vt1);
SELECT ALL COUNT(*) FROM vt0, v0, rt1, vt1 WHERE (UNLIKELY(((v0.c0) NOT BETWEEN (v0.c3) AND (rt1.c0))));
SELECT COUNT(*) FROM v0 WHERE (TRIM(((8.42503428E8)-(v0.c1)), ((((v0.c1)AND(v0.c2)))OR(v0.c0)))) ORDER BY ((((x'79d7')AND(((v0.c3)IS(v0.c3)))))AND((((v0.c3)) NOT BETWEEN ((v0.c0)) AND ((v0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(((8.42503428E8)-(v0.c1)), ((((v0.c1)AND(v0.c2)))OR(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((((x'79d7')AND(((v0.c3)IS(v0.c3)))))AND((((v0.c3)) NOT BETWEEN ((v0.c0)) AND ((v0.c1))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (TRIM(((8.42503428E8)-(v0.c1)), ((((v0.c1)AND(v0.c2)))OR(v0.c0)))) ORDER BY ((((x'79d7')AND(((v0.c3)IS(v0.c3)))))AND((((v0.c3)) NOT BETWEEN ((v0.c0)) AND ((v0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(((8.42503428E8)-(v0.c1)), ((((v0.c1)AND(v0.c2)))OR(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((((x'79d7')AND(((v0.c3)IS(v0.c3)))))AND((((v0.c3)) NOT BETWEEN ((v0.c0)) AND ((v0.c1))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (TRIM(((8.42503428E8)-(v0.c1)), ((((v0.c1)AND(v0.c2)))OR(v0.c0)))) ORDER BY ((((x'79d7')AND(((v0.c3)IS(v0.c3)))))AND((((v0.c3)) NOT BETWEEN ((v0.c0)) AND ((v0.c1))))) DESC  NULLS FIRST;
SELECT * FROM rt1 LEFT OUTER JOIN v0 ON ((0.17794428853959) IS TRUE) COLLATE BINARY FULL OUTER JOIN vt0 ON CASE CAST(rt1.c2 AS TEXT)  WHEN (((v0.c2))<((rt1.c1))) THEN ((v0.c2)>=(0.2810894433121993)) ELSE UPPER(rt1.c1) END WHERE ((((v0.c2)) BETWEEN ((HEX(v0.c1))) AND ((((v0.c3) BETWEEN (v0.c1) AND (v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)) BETWEEN ((HEX(v0.c1))) AND ((((v0.c3) BETWEEN (v0.c1) AND (v0.c2)))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON ((0.17794428853959) IS TRUE) COLLATE BINARY FULL OUTER JOIN vt0 ON CASE CAST(rt1.c2 AS TEXT)  WHEN (((v0.c2))<((rt1.c1))) THEN ((v0.c2)>=(0.2810894433121993)) ELSE UPPER(rt1.c1) END);
SELECT * FROM rt1 LEFT OUTER JOIN v0 ON ((0.17794428853959) IS TRUE) COLLATE BINARY FULL OUTER JOIN vt0 ON CASE CAST(rt1.c2 AS TEXT)  WHEN (((v0.c2))<((rt1.c1))) THEN ((v0.c2)>=(0.2810894433121993)) ELSE UPPER(rt1.c1) END WHERE ((((v0.c2)) BETWEEN ((HEX(v0.c1))) AND ((((v0.c3) BETWEEN (v0.c1) AND (v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)) BETWEEN ((HEX(v0.c1))) AND ((((v0.c3) BETWEEN (v0.c1) AND (v0.c2)))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON ((0.17794428853959) IS TRUE) COLLATE BINARY FULL OUTER JOIN vt0 ON CASE CAST(rt1.c2 AS TEXT)  WHEN (((v0.c2))<((rt1.c1))) THEN ((v0.c2)>=(0.2810894433121993)) ELSE UPPER(rt1.c1) END);
SELECT * FROM rt1 LEFT OUTER JOIN v0 ON ((0.17794428853959) IS TRUE) COLLATE BINARY FULL OUTER JOIN vt0 ON CASE CAST(rt1.c2 AS TEXT)  WHEN (((v0.c2))<((rt1.c1))) THEN ((v0.c2)>=(0.2810894433121993)) ELSE UPPER(rt1.c1) END WHERE ((((v0.c2)) BETWEEN ((HEX(v0.c1))) AND ((((v0.c3) BETWEEN (v0.c1) AND (v0.c2))))));
SELECT COUNT(*) FROM v0, vt0 WHERE (((vt0.c0)<(v0.c0)) COLLATE RTRIM) ORDER BY '	}' DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0 ORDER BY '	}' DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE (((vt0.c0)<(v0.c0)) COLLATE RTRIM) ORDER BY '	}' DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0 ORDER BY '	}' DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE (((vt0.c0)<(v0.c0)) COLLATE RTRIM) ORDER BY '	}' DESC;
SELECT COUNT(*) FROM vt1, v0 RIGHT OUTER JOIN rt1 ON '-1637283507' WHERE (((((v0.c2) BETWEEN (rt1.c0) AND (v0.c0)))AND(((rt1.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((v0.c2) BETWEEN (rt1.c0) AND (v0.c0)))AND(((rt1.c1) NOTNULL)))) IS TRUE)  as count FROM vt1, v0 RIGHT OUTER JOIN rt1 ON '-1637283507');
SELECT COUNT(*) FROM vt1, v0 RIGHT OUTER JOIN rt1 ON '-1637283507' WHERE (((((v0.c2) BETWEEN (rt1.c0) AND (v0.c0)))AND(((rt1.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((v0.c2) BETWEEN (rt1.c0) AND (v0.c0)))AND(((rt1.c1) NOTNULL)))) IS TRUE)  as count FROM vt1, v0 RIGHT OUTER JOIN rt1 ON '-1637283507');
SELECT COUNT(*) FROM vt1, v0 RIGHT OUTER JOIN rt1 ON '-1637283507' WHERE (((((v0.c2) BETWEEN (rt1.c0) AND (v0.c0)))AND(((rt1.c1) NOTNULL))));
SELECT * FROM vt0 WHERE (TYPEOF(JULIANDAY(vt0.c0, x'', vt0.c0, vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(JULIANDAY(vt0.c0, x'', vt0.c0, vt0.c0, vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (TYPEOF(JULIANDAY(vt0.c0, x'', vt0.c0, vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(JULIANDAY(vt0.c0, x'', vt0.c0, vt0.c0, vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (TYPEOF(JULIANDAY(vt0.c0, x'', vt0.c0, vt0.c0, vt0.c0)));
SELECT ALL COUNT(*) FROM vt1, v0 CROSS JOIN rt1 ON ((((((rt1.c1)OR(v0.c1)))OR(rt1.c2))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (((v0.c4) NOTNULL))) WHERE (((CHAR(v0.c1)) NOT BETWEEN ((((v0.c0, rt1.c2, v0.c2))>=((v0.c0, v0.c3, rt1.c0)))) AND (((v0.c0)-(rt1.c2))))) ORDER BY ((((((((((v0.c4)OR(NULL)))OR(rt1.c0)))AND(v0.c2)))OR(v0.c2)))|(((((((((rt1.c2)AND(rt1.c2)))OR(vt1.c0)))OR(rt1.c0)))OR(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CHAR(v0.c1)) NOT BETWEEN ((((v0.c0, rt1.c2, v0.c2))>=((v0.c0, v0.c3, rt1.c0)))) AND (((v0.c0)-(rt1.c2))))) IS TRUE)  as count FROM vt1, v0 CROSS JOIN rt1 ON ((((((rt1.c1)OR(v0.c1)))OR(rt1.c2))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (((v0.c4) NOTNULL))) ORDER BY ((((((((((v0.c4)OR(NULL)))OR(rt1.c0)))AND(v0.c2)))OR(v0.c2)))|(((((((((rt1.c2)AND(rt1.c2)))OR(vt1.c0)))OR(rt1.c0)))OR(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, v0 CROSS JOIN rt1 ON ((((((rt1.c1)OR(v0.c1)))OR(rt1.c2))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (((v0.c4) NOTNULL))) WHERE (((CHAR(v0.c1)) NOT BETWEEN ((((v0.c0, rt1.c2, v0.c2))>=((v0.c0, v0.c3, rt1.c0)))) AND (((v0.c0)-(rt1.c2))))) ORDER BY ((((((((((v0.c4)OR(NULL)))OR(rt1.c0)))AND(v0.c2)))OR(v0.c2)))|(((((((((rt1.c2)AND(rt1.c2)))OR(vt1.c0)))OR(rt1.c0)))OR(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CHAR(v0.c1)) NOT BETWEEN ((((v0.c0, rt1.c2, v0.c2))>=((v0.c0, v0.c3, rt1.c0)))) AND (((v0.c0)-(rt1.c2))))) IS TRUE)  as count FROM vt1, v0 CROSS JOIN rt1 ON ((((((rt1.c1)OR(v0.c1)))OR(rt1.c2))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (((v0.c4) NOTNULL))) ORDER BY ((((((((((v0.c4)OR(NULL)))OR(rt1.c0)))AND(v0.c2)))OR(v0.c2)))|(((((((((rt1.c2)AND(rt1.c2)))OR(vt1.c0)))OR(rt1.c0)))OR(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, v0 CROSS JOIN rt1 ON ((((((rt1.c1)OR(v0.c1)))OR(rt1.c2))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (((v0.c4) NOTNULL))) WHERE (((CHAR(v0.c1)) NOT BETWEEN ((((v0.c0, rt1.c2, v0.c2))>=((v0.c0, v0.c3, rt1.c0)))) AND (((v0.c0)-(rt1.c2))))) ORDER BY ((((((((((v0.c4)OR(NULL)))OR(rt1.c0)))AND(v0.c2)))OR(v0.c2)))|(((((((((rt1.c2)AND(rt1.c2)))OR(vt1.c0)))OR(rt1.c0)))OR(vt1.c0))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt0.c0)&(((vt0.c0)AND(vt0.c0))))) ORDER BY '2018030776' ASC, 'o\r*oVB1x', ((((vt0.c0))<=((vt1.c0))) IN ());
SELECT SUM(count) FROM (SELECT ((((vt0.c0)&(((vt0.c0)AND(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY '2018030776' ASC, 'o\r*oVB1x', ((((vt0.c0))<=((vt1.c0))) IN ()));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt0.c0)&(((vt0.c0)AND(vt0.c0))))) ORDER BY '2018030776' ASC, 'o\r*oVB1x', ((((vt0.c0))<=((vt1.c0))) IN ());
SELECT SUM(count) FROM (SELECT ((((vt0.c0)&(((vt0.c0)AND(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY '2018030776' ASC, 'o\r*oVB1x', ((((vt0.c0))<=((vt1.c0))) IN ()));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt0.c0)&(((vt0.c0)AND(vt0.c0))))) ORDER BY '2018030776' ASC, 'o\r*oVB1x', ((((vt0.c0))<=((vt1.c0))) IN ());
SELECT COUNT(*) FROM vt1, vt0, rt1, v0 WHERE (CASE rt1.c0  WHEN ((v0.c1) IS TRUE) THEN vt0.c0 ELSE ((rt1.c1) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE rt1.c0  WHEN ((v0.c1) IS TRUE) THEN vt0.c0 ELSE ((rt1.c1) NOT NULL) END) IS TRUE)  as count FROM vt1, vt0, rt1, v0);
SELECT COUNT(*) FROM vt1, vt0, rt1, v0 WHERE (CASE rt1.c0  WHEN ((v0.c1) IS TRUE) THEN vt0.c0 ELSE ((rt1.c1) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE rt1.c0  WHEN ((v0.c1) IS TRUE) THEN vt0.c0 ELSE ((rt1.c1) NOT NULL) END) IS TRUE)  as count FROM vt1, vt0, rt1, v0);
SELECT COUNT(*) FROM vt1, vt0, rt1, v0 WHERE (CASE rt1.c0  WHEN ((v0.c1) IS TRUE) THEN vt0.c0 ELSE ((rt1.c1) NOT NULL) END);
SELECT COUNT(*) FROM rt1, vt0, v0 WHERE (((vt0.c0 COLLATE NOCASE)<(((v0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)<(((v0.c1) IS TRUE)))) IS TRUE)  as count FROM rt1, vt0, v0);
SELECT COUNT(*) FROM rt1, vt0, v0 WHERE (((vt0.c0 COLLATE NOCASE)<(((v0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)<(((v0.c1) IS TRUE)))) IS TRUE)  as count FROM rt1, vt0, v0);
SELECT COUNT(*) FROM rt1, vt0, v0 WHERE (((vt0.c0 COLLATE NOCASE)<(((v0.c1) IS TRUE))));
SELECT * FROM vt0 WHERE (((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(x'')))OR(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(x'')))OR(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(x'')))OR(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(x'')))OR(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(x'')))OR(vt0.c0))) NOTNULL));
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE ((((((v0.c0 IN ()))AND((((v0.c3))<>((v0.c4))))))AND((((v0.c4, v0.c1, v0.c1, x'08fd', v0.c3))==((x'f6dea672', vt0.c0, '-610680510', vt0.c0, vt1.c0)))))) ORDER BY (((((vt1.c0)|(v0.c2)), (v0.c3 IN ()), ((((vt1.c0)AND(v0.c0)))AND(v0.c0))))>=((((((v0.c0)OR(v0.c3)))AND(vt0.c0)), (((v0.c0, v0.c3, vt0.c0)) BETWEEN ((v0.c1, x'', v0.c0)) AND ((v0.c0, '4fa-+}', v0.c2))), HEX(v0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0 IN ()))AND((((v0.c3))<>((v0.c4))))))AND((((v0.c4, v0.c1, v0.c1, x'08fd', v0.c3))==((x'f6dea672', vt0.c0, '-610680510', vt0.c0, vt1.c0)))))) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY (((((vt1.c0)|(v0.c2)), (v0.c3 IN ()), ((((vt1.c0)AND(v0.c0)))AND(v0.c0))))>=((((((v0.c0)OR(v0.c3)))AND(vt0.c0)), (((v0.c0, v0.c3, vt0.c0)) BETWEEN ((v0.c1, x'', v0.c0)) AND ((v0.c0, '4fa-+}', v0.c2))), HEX(v0.c1)))));
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE ((((((v0.c0 IN ()))AND((((v0.c3))<>((v0.c4))))))AND((((v0.c4, v0.c1, v0.c1, x'08fd', v0.c3))==((x'f6dea672', vt0.c0, '-610680510', vt0.c0, vt1.c0)))))) ORDER BY (((((vt1.c0)|(v0.c2)), (v0.c3 IN ()), ((((vt1.c0)AND(v0.c0)))AND(v0.c0))))>=((((((v0.c0)OR(v0.c3)))AND(vt0.c0)), (((v0.c0, v0.c3, vt0.c0)) BETWEEN ((v0.c1, x'', v0.c0)) AND ((v0.c0, '4fa-+}', v0.c2))), HEX(v0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0 IN ()))AND((((v0.c3))<>((v0.c4))))))AND((((v0.c4, v0.c1, v0.c1, x'08fd', v0.c3))==((x'f6dea672', vt0.c0, '-610680510', vt0.c0, vt1.c0)))))) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY (((((vt1.c0)|(v0.c2)), (v0.c3 IN ()), ((((vt1.c0)AND(v0.c0)))AND(v0.c0))))>=((((((v0.c0)OR(v0.c3)))AND(vt0.c0)), (((v0.c0, v0.c3, vt0.c0)) BETWEEN ((v0.c1, x'', v0.c0)) AND ((v0.c0, '4fa-+}', v0.c2))), HEX(v0.c1)))));
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE ((((((v0.c0 IN ()))AND((((v0.c3))<>((v0.c4))))))AND((((v0.c4, v0.c1, v0.c1, x'08fd', v0.c3))==((x'f6dea672', vt0.c0, '-610680510', vt0.c0, vt1.c0)))))) ORDER BY (((((vt1.c0)|(v0.c2)), (v0.c3 IN ()), ((((vt1.c0)AND(v0.c0)))AND(v0.c0))))>=((((((v0.c0)OR(v0.c3)))AND(vt0.c0)), (((v0.c0, v0.c3, vt0.c0)) BETWEEN ((v0.c1, x'', v0.c0)) AND ((v0.c0, '4fa-+}', v0.c2))), HEX(v0.c1))));
SELECT ALL COUNT(*) FROM vt1, rt1, vt0 WHERE ((((- (rt1.c2)))>>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY rt1.c0, ((x'') BETWEEN (((vt0.c0)IS NOT(-1310004729))) AND (CASE WHEN rt1.c1 THEN rt1.c0 ELSE vt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt1.c2)))>>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, rt1, vt0 ORDER BY rt1.c0, ((x'') BETWEEN (((vt0.c0)IS NOT(-1310004729))) AND (CASE WHEN rt1.c1 THEN rt1.c0 ELSE vt0.c0 END)) ASC);
SELECT ALL COUNT(*) FROM vt1, rt1, vt0 WHERE ((((- (rt1.c2)))>>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY rt1.c0, ((x'') BETWEEN (((vt0.c0)IS NOT(-1310004729))) AND (CASE WHEN rt1.c1 THEN rt1.c0 ELSE vt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt1.c2)))>>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, rt1, vt0 ORDER BY rt1.c0, ((x'') BETWEEN (((vt0.c0)IS NOT(-1310004729))) AND (CASE WHEN rt1.c1 THEN rt1.c0 ELSE vt0.c0 END)) ASC);
SELECT ALL COUNT(*) FROM vt1, rt1, vt0 WHERE ((((- (rt1.c2)))>>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY rt1.c0, ((x'') BETWEEN (((vt0.c0)IS NOT(-1310004729))) AND (CASE WHEN rt1.c1 THEN rt1.c0 ELSE vt0.c0 END)) ASC;
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((NOT (CASE NULL  WHEN v0.c0 THEN v0.c0 END))) ORDER BY (2018030776 IN ()) DESC  NULLS FIRST, (- (QUOTE(vt1.c0))) ASC  NULLS FIRST, CAST((('0.9782211610104448') NOT BETWEEN (vt1.c0) AND ('')) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE NULL  WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM vt1, v0 ORDER BY (2018030776 IN ()) DESC  NULLS FIRST, (- (QUOTE(vt1.c0))) ASC  NULLS FIRST, CAST((('0.9782211610104448') NOT BETWEEN (vt1.c0) AND ('')) AS TEXT));
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((NOT (CASE NULL  WHEN v0.c0 THEN v0.c0 END))) ORDER BY (2018030776 IN ()) DESC  NULLS FIRST, (- (QUOTE(vt1.c0))) ASC  NULLS FIRST, CAST((('0.9782211610104448') NOT BETWEEN (vt1.c0) AND ('')) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE NULL  WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM vt1, v0 ORDER BY (2018030776 IN ()) DESC  NULLS FIRST, (- (QUOTE(vt1.c0))) ASC  NULLS FIRST, CAST((('0.9782211610104448') NOT BETWEEN (vt1.c0) AND ('')) AS TEXT));
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((NOT (CASE NULL  WHEN v0.c0 THEN v0.c0 END))) ORDER BY (2018030776 IN ()) DESC  NULLS FIRST, (- (QUOTE(vt1.c0))) ASC  NULLS FIRST, CAST((('0.9782211610104448') NOT BETWEEN (vt1.c0) AND ('')) AS TEXT);
SELECT COUNT(*) FROM vt1, v0 WHERE (json_quote((NOT (v0.c3))));
SELECT SUM(count) FROM (SELECT ((json_quote((NOT (v0.c3)))) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (json_quote((NOT (v0.c3))));
SELECT SUM(count) FROM (SELECT ((json_quote((NOT (v0.c3)))) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (json_quote((NOT (v0.c3))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON (+ (((vt0.c0)&(vt0.c0)))) WHERE (CASE CASE 'st„πª'  WHEN 0.17794428853959 THEN x'' ELSE vt1.c0 END  WHEN vt1.c0 THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE 'st„πª'  WHEN 0.17794428853959 THEN x'' ELSE vt1.c0 END  WHEN vt1.c0 THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (+ (((vt0.c0)&(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON (+ (((vt0.c0)&(vt0.c0)))) WHERE (CASE CASE 'st„πª'  WHEN 0.17794428853959 THEN x'' ELSE vt1.c0 END  WHEN vt1.c0 THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE 'st„πª'  WHEN 0.17794428853959 THEN x'' ELSE vt1.c0 END  WHEN vt1.c0 THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (+ (((vt0.c0)&(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON (+ (((vt0.c0)&(vt0.c0)))) WHERE (CASE CASE 'st„πª'  WHEN 0.17794428853959 THEN x'' ELSE vt1.c0 END  WHEN vt1.c0 THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) END);
SELECT * FROM rt1, vt1 WHERE ((((rt1.c1)) BETWEEN ((((NULL) BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((rt1.c1)))) ORDER BY ((((rt1.c0)*(vt1.c0))) BETWEEN (rt1.c0) AND (CASE x''  WHEN vt1.c0 THEN vt1.c0 ELSE rt1.c2 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) BETWEEN ((((NULL) BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((rt1.c1)))) IS TRUE)  as count FROM rt1, vt1 ORDER BY ((((rt1.c0)*(vt1.c0))) BETWEEN (rt1.c0) AND (CASE x''  WHEN vt1.c0 THEN vt1.c0 ELSE rt1.c2 END)) ASC  NULLS LAST);
SELECT * FROM rt1, vt1 WHERE ((((rt1.c1)) BETWEEN ((((NULL) BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((rt1.c1)))) ORDER BY ((((rt1.c0)*(vt1.c0))) BETWEEN (rt1.c0) AND (CASE x''  WHEN vt1.c0 THEN vt1.c0 ELSE rt1.c2 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) BETWEEN ((((NULL) BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((rt1.c1)))) IS TRUE)  as count FROM rt1, vt1 ORDER BY ((((rt1.c0)*(vt1.c0))) BETWEEN (rt1.c0) AND (CASE x''  WHEN vt1.c0 THEN vt1.c0 ELSE rt1.c2 END)) ASC  NULLS LAST);
SELECT * FROM rt1, vt1 WHERE ((((rt1.c1)) BETWEEN ((((NULL) BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((rt1.c1)))) ORDER BY ((((rt1.c0)*(vt1.c0))) BETWEEN (rt1.c0) AND (CASE x''  WHEN vt1.c0 THEN vt1.c0 ELSE rt1.c2 END)) ASC  NULLS LAST;
SELECT ALL * FROM rt1, vt0, v0, vt1 WHERE (CAST(CAST(rt1.c2 AS INTEGER) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c2 AS INTEGER) AS INTEGER)) IS TRUE)  as count FROM rt1, vt0, v0, vt1);
SELECT ALL * FROM rt1, vt0, v0, vt1 WHERE (CAST(CAST(rt1.c2 AS INTEGER) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c2 AS INTEGER) AS INTEGER)) IS TRUE)  as count FROM rt1, vt0, v0, vt1);
SELECT ALL * FROM rt1, vt0, v0, vt1 WHERE (CAST(CAST(rt1.c2 AS INTEGER) AS INTEGER));
SELECT * FROM vt1, vt0, rt1, v0 WHERE ((((rt1.c1 IN ())) BETWEEN ((((x'645da602')) BETWEEN ((x'')) AND ((v0.c4)))) AND (CAST(rt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN ())) BETWEEN ((((x'645da602')) BETWEEN ((x'')) AND ((v0.c4)))) AND (CAST(rt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1, vt0, rt1, v0);
SELECT * FROM vt1, vt0, rt1, v0 WHERE ((((rt1.c1 IN ())) BETWEEN ((((x'645da602')) BETWEEN ((x'')) AND ((v0.c4)))) AND (CAST(rt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN ())) BETWEEN ((((x'645da602')) BETWEEN ((x'')) AND ((v0.c4)))) AND (CAST(rt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1, vt0, rt1, v0);
SELECT * FROM vt1, vt0, rt1, v0 WHERE ((((rt1.c1 IN ())) BETWEEN ((((x'645da602')) BETWEEN ((x'')) AND ((v0.c4)))) AND (CAST(rt1.c0 AS TEXT))));
SELECT * FROM v0 NATURAL JOIN vt1 WHERE (v0.c4) ORDER BY ((((((((((v0.c3) IS FALSE))AND(v0.c4)))OR(v0.c2)))AND(((v0.c0)<=(v0.c1)))))AND(((v0.c4)&(v0.c2))))  NULLS LAST, (((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c1)))) BETWEEN (((v0.c1)IS NOT(v0.c1))) AND ((((v0.c1, v0.c1, v0.c2))>((v0.c2, vt1.c0, v0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ((v0.c4) IS TRUE)  as count FROM v0 NATURAL JOIN vt1 ORDER BY ((((((((((v0.c3) IS FALSE))AND(v0.c4)))OR(v0.c2)))AND(((v0.c0)<=(v0.c1)))))AND(((v0.c4)&(v0.c2))))  NULLS LAST, (((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c1)))) BETWEEN (((v0.c1)IS NOT(v0.c1))) AND ((((v0.c1, v0.c1, v0.c2))>((v0.c2, vt1.c0, v0.c1))))) ASC);
SELECT * FROM v0 NATURAL JOIN vt1 WHERE (v0.c4) ORDER BY ((((((((((v0.c3) IS FALSE))AND(v0.c4)))OR(v0.c2)))AND(((v0.c0)<=(v0.c1)))))AND(((v0.c4)&(v0.c2))))  NULLS LAST, (((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c1)))) BETWEEN (((v0.c1)IS NOT(v0.c1))) AND ((((v0.c1, v0.c1, v0.c2))>((v0.c2, vt1.c0, v0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ((v0.c4) IS TRUE)  as count FROM v0 NATURAL JOIN vt1 ORDER BY ((((((((((v0.c3) IS FALSE))AND(v0.c4)))OR(v0.c2)))AND(((v0.c0)<=(v0.c1)))))AND(((v0.c4)&(v0.c2))))  NULLS LAST, (((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c1)))) BETWEEN (((v0.c1)IS NOT(v0.c1))) AND ((((v0.c1, v0.c1, v0.c2))>((v0.c2, vt1.c0, v0.c1))))) ASC);
SELECT * FROM v0 NATURAL JOIN vt1 WHERE (v0.c4) ORDER BY ((((((((((v0.c3) IS FALSE))AND(v0.c4)))OR(v0.c2)))AND(((v0.c0)<=(v0.c1)))))AND(((v0.c4)&(v0.c2))))  NULLS LAST, (((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c1)))) BETWEEN (((v0.c1)IS NOT(v0.c1))) AND ((((v0.c1, v0.c1, v0.c2))>((v0.c2, vt1.c0, v0.c1))))) ASC;
SELECT ALL * FROM vt0, vt1 WHERE ((~ (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY 0.5027441360332724 DESC;
SELECT SUM(count) FROM (SELECT (((~ (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY 0.5027441360332724 DESC);
SELECT ALL * FROM vt0, vt1 WHERE ((~ (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY 0.5027441360332724 DESC;
SELECT SUM(count) FROM (SELECT (((~ (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY 0.5027441360332724 DESC);
SELECT ALL * FROM vt0, vt1 WHERE ((~ (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY 0.5027441360332724 DESC;
SELECT ALL COUNT(*) FROM v0 WHERE ((((NOT (v0.c3))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c3))) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((NOT (v0.c3))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c3))) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((NOT (v0.c3))) IS TRUE));
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN ((((NULL)OR('kcmN]*YJ')))AND(v0.c0)) THEN (NOT (v0.c3)) ELSE (NOT (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((NULL)OR('kcmN]*YJ')))AND(v0.c0)) THEN (NOT (v0.c3)) ELSE (NOT (v0.c0)) END) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN ((((NULL)OR('kcmN]*YJ')))AND(v0.c0)) THEN (NOT (v0.c3)) ELSE (NOT (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((NULL)OR('kcmN]*YJ')))AND(v0.c0)) THEN (NOT (v0.c3)) ELSE (NOT (v0.c0)) END) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN ((((NULL)OR('kcmN]*YJ')))AND(v0.c0)) THEN (NOT (v0.c3)) ELSE (NOT (v0.c0)) END);
SELECT ALL COUNT(*) FROM v0, vt0, rt1 WHERE ((CASE WHEN rt1.c0 THEN 'st„πª' ELSE -1851712586 END IN ())) ORDER BY ((((('V*')) BETWEEN ((v0.c3)) AND (('-1951613097'))))OR(CASE rt1.c0  WHEN v0.c3 THEN rt1.c1 END))  NULLS LAST, (((((((((((v0.c3)OR(v0.c4)))OR(rt1.c1)))AND(v0.c0)))AND(v0.c0))))!=((((v0.c4)IS(rt1.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt1.c0 THEN 'st„πª' ELSE -1851712586 END IN ())) IS TRUE)  as count FROM v0, vt0, rt1 ORDER BY ((((('V*')) BETWEEN ((v0.c3)) AND (('-1951613097'))))OR(CASE rt1.c0  WHEN v0.c3 THEN rt1.c1 END))  NULLS LAST, (((((((((((v0.c3)OR(v0.c4)))OR(rt1.c1)))AND(v0.c0)))AND(v0.c0))))!=((((v0.c4)IS(rt1.c1)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0, rt1 WHERE ((CASE WHEN rt1.c0 THEN 'st„πª' ELSE -1851712586 END IN ())) ORDER BY ((((('V*')) BETWEEN ((v0.c3)) AND (('-1951613097'))))OR(CASE rt1.c0  WHEN v0.c3 THEN rt1.c1 END))  NULLS LAST, (((((((((((v0.c3)OR(v0.c4)))OR(rt1.c1)))AND(v0.c0)))AND(v0.c0))))!=((((v0.c4)IS(rt1.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt1.c0 THEN 'st„πª' ELSE -1851712586 END IN ())) IS TRUE)  as count FROM v0, vt0, rt1 ORDER BY ((((('V*')) BETWEEN ((v0.c3)) AND (('-1951613097'))))OR(CASE rt1.c0  WHEN v0.c3 THEN rt1.c1 END))  NULLS LAST, (((((((((((v0.c3)OR(v0.c4)))OR(rt1.c1)))AND(v0.c0)))AND(v0.c0))))!=((((v0.c4)IS(rt1.c1)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0, rt1 WHERE ((CASE WHEN rt1.c0 THEN 'st„πª' ELSE -1851712586 END IN ())) ORDER BY ((((('V*')) BETWEEN ((v0.c3)) AND (('-1951613097'))))OR(CASE rt1.c0  WHEN v0.c3 THEN rt1.c1 END))  NULLS LAST, (((((((((((v0.c3)OR(v0.c4)))OR(rt1.c1)))AND(v0.c0)))AND(v0.c0))))!=((((v0.c4)IS(rt1.c1)))))  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c1)+(rt1.c0)))|(((rt1.c2)!=(rt1.c0))))) ORDER BY ((((((rt1.c2) IS FALSE))AND(CASE WHEN rt1.c0 THEN rt1.c2 ELSE 0X5a9db42c END)))OR(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN '671123915' THEN rt1.c2 END)), TYPEOF(DISTINCT CAST(rt1.c0 AS NUMERIC))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)+(rt1.c0)))|(((rt1.c2)!=(rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c2) IS FALSE))AND(CASE WHEN rt1.c0 THEN rt1.c2 ELSE 0X5a9db42c END)))OR(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN '671123915' THEN rt1.c2 END)), TYPEOF(DISTINCT CAST(rt1.c0 AS NUMERIC))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c1)+(rt1.c0)))|(((rt1.c2)!=(rt1.c0))))) ORDER BY ((((((rt1.c2) IS FALSE))AND(CASE WHEN rt1.c0 THEN rt1.c2 ELSE 0X5a9db42c END)))OR(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN '671123915' THEN rt1.c2 END)), TYPEOF(DISTINCT CAST(rt1.c0 AS NUMERIC))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)+(rt1.c0)))|(((rt1.c2)!=(rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c2) IS FALSE))AND(CASE WHEN rt1.c0 THEN rt1.c2 ELSE 0X5a9db42c END)))OR(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN '671123915' THEN rt1.c2 END)), TYPEOF(DISTINCT CAST(rt1.c0 AS NUMERIC))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c1)+(rt1.c0)))|(((rt1.c2)!=(rt1.c0))))) ORDER BY ((((((rt1.c2) IS FALSE))AND(CASE WHEN rt1.c0 THEN rt1.c2 ELSE 0X5a9db42c END)))OR(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN '671123915' THEN rt1.c2 END)), TYPEOF(DISTINCT CAST(rt1.c0 AS NUMERIC))  NULLS FIRST;
SELECT * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL), CAST(vt1.c0 AS TEXT), CAST(vt1.c0 AS BLOB))) AND (((- (vt1.c0)), ((vt1.c0) IS FALSE), ((vt1.c0)OR(vt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL), CAST(vt1.c0 AS TEXT), CAST(vt1.c0 AS BLOB))) AND (((- (vt1.c0)), ((vt1.c0) IS FALSE), ((vt1.c0)OR(vt1.c0)))))  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL), CAST(vt1.c0 AS TEXT), CAST(vt1.c0 AS BLOB))) AND (((- (vt1.c0)), ((vt1.c0) IS FALSE), ((vt1.c0)OR(vt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL), CAST(vt1.c0 AS TEXT), CAST(vt1.c0 AS BLOB))) AND (((- (vt1.c0)), ((vt1.c0) IS FALSE), ((vt1.c0)OR(vt1.c0)))))  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL), CAST(vt1.c0 AS TEXT), CAST(vt1.c0 AS BLOB))) AND (((- (vt1.c0)), ((vt1.c0) IS FALSE), ((vt1.c0)OR(vt1.c0)))))  NULLS FIRST;
SELECT * FROM rt1 INNER JOIN vt1 ON ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)) COLLATE NOCASE WHERE ('-1505664017');
SELECT SUM(count) FROM (SELECT ALL (('-1505664017') IS TRUE)  as count FROM rt1 INNER JOIN vt1 ON ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)) COLLATE NOCASE);
SELECT * FROM rt1 INNER JOIN vt1 ON ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)) COLLATE NOCASE WHERE ('-1505664017');
SELECT SUM(count) FROM (SELECT ALL (('-1505664017') IS TRUE)  as count FROM rt1 INNER JOIN vt1 ON ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)) COLLATE NOCASE);
SELECT * FROM rt1 INNER JOIN vt1 ON ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)) COLLATE NOCASE WHERE ('-1505664017');
SELECT * FROM v0, rt1 WHERE (((((-1.637283507E9)AND((((v0.c1)) BETWEEN ((v0.c1)) AND (('-1357514235'))))))OR(rt1.c0))) ORDER BY rt1.c2  NULLS FIRST, SUBSTR(LIKELIHOOD(v0.c4, 0.002687272166730148), (~ (v0.c4))), ((-610680510)OR((((v0.c1)) NOT BETWEEN ((v0.c3)) AND ((rt1.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((-1.637283507E9)AND((((v0.c1)) BETWEEN ((v0.c1)) AND (('-1357514235'))))))OR(rt1.c0))) IS TRUE)  as count FROM v0, rt1 ORDER BY rt1.c2  NULLS FIRST, SUBSTR(LIKELIHOOD(v0.c4, 0.002687272166730148), (~ (v0.c4))), ((-610680510)OR((((v0.c1)) NOT BETWEEN ((v0.c3)) AND ((rt1.c0))))) ASC  NULLS FIRST);
SELECT * FROM v0, rt1 WHERE (((((-1.637283507E9)AND((((v0.c1)) BETWEEN ((v0.c1)) AND (('-1357514235'))))))OR(rt1.c0))) ORDER BY rt1.c2  NULLS FIRST, SUBSTR(LIKELIHOOD(v0.c4, 0.002687272166730148), (~ (v0.c4))), ((-610680510)OR((((v0.c1)) NOT BETWEEN ((v0.c3)) AND ((rt1.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((-1.637283507E9)AND((((v0.c1)) BETWEEN ((v0.c1)) AND (('-1357514235'))))))OR(rt1.c0))) IS TRUE)  as count FROM v0, rt1 ORDER BY rt1.c2  NULLS FIRST, SUBSTR(LIKELIHOOD(v0.c4, 0.002687272166730148), (~ (v0.c4))), ((-610680510)OR((((v0.c1)) NOT BETWEEN ((v0.c3)) AND ((rt1.c0))))) ASC  NULLS FIRST);
SELECT * FROM v0, rt1 WHERE (((((-1.637283507E9)AND((((v0.c1)) BETWEEN ((v0.c1)) AND (('-1357514235'))))))OR(rt1.c0))) ORDER BY rt1.c2  NULLS FIRST, SUBSTR(LIKELIHOOD(v0.c4, 0.002687272166730148), (~ (v0.c4))), ((-610680510)OR((((v0.c1)) NOT BETWEEN ((v0.c3)) AND ((rt1.c0))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((NOT (vt1.c0)) IN ()) WHERE (TYPEOF((((vt0.c0, vt1.c0, x'a66a', vt1.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt0.c0, vt1.c0, vt0.c0))))) ORDER BY ((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)) COLLATE BINARY ASC, LIKELIHOOD(DISTINCT ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)), 0.8775905964639044) ASC, CAST(TRIM(vt0.c0) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((TYPEOF((((vt0.c0, vt1.c0, x'a66a', vt1.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt0.c0, vt1.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((NOT (vt1.c0)) IN ()) ORDER BY ((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)) COLLATE BINARY ASC, LIKELIHOOD(DISTINCT ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)), 0.8775905964639044) ASC, CAST(TRIM(vt0.c0) AS REAL) ASC);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((NOT (vt1.c0)) IN ()) WHERE (TYPEOF((((vt0.c0, vt1.c0, x'a66a', vt1.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt0.c0, vt1.c0, vt0.c0))))) ORDER BY ((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)) COLLATE BINARY ASC, LIKELIHOOD(DISTINCT ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)), 0.8775905964639044) ASC, CAST(TRIM(vt0.c0) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((TYPEOF((((vt0.c0, vt1.c0, x'a66a', vt1.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt0.c0, vt1.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((NOT (vt1.c0)) IN ()) ORDER BY ((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)) COLLATE BINARY ASC, LIKELIHOOD(DISTINCT ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)), 0.8775905964639044) ASC, CAST(TRIM(vt0.c0) AS REAL) ASC);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((NOT (vt1.c0)) IN ()) WHERE (TYPEOF((((vt0.c0, vt1.c0, x'a66a', vt1.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt0.c0, vt1.c0, vt0.c0))))) ORDER BY ((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)) COLLATE BINARY ASC, LIKELIHOOD(DISTINCT ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)), 0.8775905964639044) ASC, CAST(TRIM(vt0.c0) AS REAL) ASC;
SELECT ALL * FROM rt1, vt1, v0, vt0 WHERE (CAST(((rt1.c0)<=(v0.c4)) AS INTEGER)) ORDER BY (((((v0.c2)AND(v0.c0)))OR(v0.c3)) IN ((- (NULL))))  NULLS LAST, ((rt1.c2) ISNULL) COLLATE BINARY COLLATE NOCASE  NULLS FIRST, ((((((v0.c1, rt1.c0, v0.c2)) BETWEEN ((v0.c0, v0.c0, v0.c2)) AND ((rt1.c2, rt1.c2, v0.c4)))))==((((rt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0)<=(v0.c4)) AS INTEGER)) IS TRUE)  as count FROM rt1, vt1, v0, vt0 ORDER BY (((((v0.c2)AND(v0.c0)))OR(v0.c3)) IN ((- (NULL))))  NULLS LAST, ((rt1.c2) ISNULL) COLLATE BINARY COLLATE NOCASE  NULLS FIRST, ((((((v0.c1, rt1.c0, v0.c2)) BETWEEN ((v0.c0, v0.c0, v0.c2)) AND ((rt1.c2, rt1.c2, v0.c4)))))=((((rt1.c0) IS TRUE)))));
SELECT ALL * FROM rt1, vt1, v0, vt0 WHERE (CAST(((rt1.c0)<=(v0.c4)) AS INTEGER)) ORDER BY (((((v0.c2)AND(v0.c0)))OR(v0.c3)) IN ((- (NULL))))  NULLS LAST, ((rt1.c2) ISNULL) COLLATE BINARY COLLATE NOCASE  NULLS FIRST, ((((((v0.c1, rt1.c0, v0.c2)) BETWEEN ((v0.c0, v0.c0, v0.c2)) AND ((rt1.c2, rt1.c2, v0.c4)))))==((((rt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0)<=(v0.c4)) AS INTEGER)) IS TRUE)  as count FROM rt1, vt1, v0, vt0 ORDER BY (((((v0.c2)AND(v0.c0)))OR(v0.c3)) IN ((- (NULL))))  NULLS LAST, ((rt1.c2) ISNULL) COLLATE BINARY COLLATE NOCASE  NULLS FIRST, ((((((v0.c1, rt1.c0, v0.c2)) BETWEEN ((v0.c0, v0.c0, v0.c2)) AND ((rt1.c2, rt1.c2, v0.c4)))))=((((rt1.c0) IS TRUE)))));
SELECT ALL * FROM rt1, vt1, v0, vt0 WHERE (CAST(((rt1.c0)<=(v0.c4)) AS INTEGER)) ORDER BY (((((v0.c2)AND(v0.c0)))OR(v0.c3)) IN ((- (NULL))))  NULLS LAST, ((rt1.c2) ISNULL) COLLATE BINARY COLLATE NOCASE  NULLS FIRST, ((((((v0.c1, rt1.c0, v0.c2)) BETWEEN ((v0.c0, v0.c0, v0.c2)) AND ((rt1.c2, rt1.c2, v0.c4)))))==((((rt1.c0) IS TRUE))));
SELECT * FROM v0, vt1, vt0, rt1 WHERE (((v0.c2)IS NOT(CASE WHEN v0.c3 THEN v0.c2 WHEN '-1310004729' THEN 0.848028619121072 WHEN v0.c3 THEN v0.c0 END))) ORDER BY '1828840058';
SELECT SUM(count) FROM (SELECT ((((v0.c2)IS NOT(CASE WHEN v0.c3 THEN v0.c2 WHEN '-1310004729' THEN 0.848028619121072 WHEN v0.c3 THEN v0.c0 END))) IS TRUE)  as count FROM v0, vt1, vt0, rt1 ORDER BY '1828840058');
SELECT * FROM v0, vt1, vt0, rt1 WHERE (((v0.c2)IS NOT(CASE WHEN v0.c3 THEN v0.c2 WHEN '-1310004729' THEN 0.848028619121072 WHEN v0.c3 THEN v0.c0 END))) ORDER BY '1828840058';
SELECT SUM(count) FROM (SELECT ((((v0.c2)IS NOT(CASE WHEN v0.c3 THEN v0.c2 WHEN '-1310004729' THEN 0.848028619121072 WHEN v0.c3 THEN v0.c0 END))) IS TRUE)  as count FROM v0, vt1, vt0, rt1 ORDER BY '1828840058');
SELECT * FROM v0, vt1, vt0, rt1 WHERE (((v0.c2)IS NOT(CASE WHEN v0.c3 THEN v0.c2 WHEN '-1310004729' THEN 0.848028619121072 WHEN v0.c3 THEN v0.c0 END))) ORDER BY '1828840058';
SELECT COUNT(*) FROM rt1, v0 WHERE (CAST(NULL AS NUMERIC)) ORDER BY json(((((v0.c1)AND(rt1.c2)))OR(rt1.c0))) DESC  NULLS LAST, CAST((~ (v0.c3)) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM rt1, v0 ORDER BY json(((((v0.c1)AND(rt1.c2)))OR(rt1.c0))) DESC  NULLS LAST, CAST((~ (v0.c3)) AS REAL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, v0 WHERE (CAST(NULL AS NUMERIC)) ORDER BY json(((((v0.c1)AND(rt1.c2)))OR(rt1.c0))) DESC  NULLS LAST, CAST((~ (v0.c3)) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM rt1, v0 ORDER BY json(((((v0.c1)AND(rt1.c2)))OR(rt1.c0))) DESC  NULLS LAST, CAST((~ (v0.c3)) AS REAL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, v0 WHERE (CAST(NULL AS NUMERIC)) ORDER BY json(((((v0.c1)AND(rt1.c2)))OR(rt1.c0))) DESC  NULLS LAST, CAST((~ (v0.c3)) AS REAL) DESC  NULLS FIRST;
SELECT ALL * FROM rt1, v0, vt0, vt1 WHERE ((((v0.c4) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c4) NOTNULL) IN ())) IS TRUE)  as count FROM rt1, v0, vt0 NOT INDEXED, vt1);
SELECT ALL * FROM rt1, v0, vt0, vt1 WHERE ((((v0.c4) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c4) NOTNULL) IN ())) IS TRUE)  as count FROM rt1, v0, vt0 NOT INDEXED, vt1);
SELECT ALL * FROM rt1, v0, vt0, vt1 WHERE ((((v0.c4) NOTNULL) IN ()));
SELECT COUNT(*) FROM vt1, v0, vt0, rt1 WHERE ((+ ((((v0.c4))>=((v0.c0))))));
SELECT SUM(count) FROM (SELECT (((+ ((((v0.c4))>=((v0.c0)))))) IS TRUE)  as count FROM vt1, v0, vt0, rt1);
SELECT COUNT(*) FROM vt1, v0, vt0, rt1 WHERE ((+ ((((v0.c4))>=((v0.c0))))));
SELECT SUM(count) FROM (SELECT (((+ ((((v0.c4))>=((v0.c0)))))) IS TRUE)  as count FROM vt1, v0, vt0, rt1);
SELECT COUNT(*) FROM vt1, v0, vt0, rt1 WHERE ((+ ((((v0.c4))>=((v0.c0))))));
SELECT * FROM v0 NOT INDEXED, vt0, rt1 INNER JOIN vt1 ON ((x'')>=(COALESCE(vt1.c0, vt0.c0))) WHERE (((CASE v0.c4  WHEN vt1.c0 THEN v0.c3 ELSE rt1.c2 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c4  WHEN vt1.c0 THEN v0.c3 ELSE rt1.c2 END) IS TRUE)) IS TRUE)  as count FROM v0, vt0, rt1 INNER JOIN vt1 ON ((x'')>=(COALESCE(vt1.c0, vt0.c0))));
SELECT * FROM v0 NOT INDEXED, vt0, rt1 INNER JOIN vt1 ON ((x'')>=(COALESCE(vt1.c0, vt0.c0))) WHERE (((CASE v0.c4  WHEN vt1.c0 THEN v0.c3 ELSE rt1.c2 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c4  WHEN vt1.c0 THEN v0.c3 ELSE rt1.c2 END) IS TRUE)) IS TRUE)  as count FROM v0, vt0, rt1 INNER JOIN vt1 ON ((x'')>=(COALESCE(vt1.c0, vt0.c0))));
SELECT * FROM v0 NOT INDEXED, vt0, rt1 INNER JOIN vt1 ON ((x'')>=(COALESCE(vt1.c0, vt0.c0))) WHERE (((CASE v0.c4  WHEN vt1.c0 THEN v0.c3 ELSE rt1.c2 END) IS TRUE));
SELECT COUNT(*) FROM rt1, vt1 RIGHT OUTER JOIN v0 ON ((((NULL) NOT NULL))%((((v0.c4, 0.3080995058517948, rt1.c2)) NOT BETWEEN ((v0.c2, v0.c0, vt0.c0)) AND ((v0.c0, NULL, vt1.c0))))) RIGHT OUTER JOIN vt0 ON ((((v0.c0) NOTNULL))*(((((((((rt1.c1)AND(vt1.c0)))OR(v0.c1)))OR(vt1.c0)))OR(v0.c1)))) WHERE ((((((v0.c0)AND(rt1.c2))))>=((((v0.c0)<(v0.c0)))))) ORDER BY (((3.211039782331504E-4)) BETWEEN (((- (NULL)))) AND ((-250050237)));
SELECT SUM(count) FROM (SELECT (((((((v0.c0)AND(rt1.c2))))>=((((v0.c0)<(v0.c0)))))) IS TRUE)  as count FROM rt1, vt1 RIGHT OUTER JOIN v0 ON ((((NULL) NOT NULL))%((((v0.c4, 0.3080995058517948, rt1.c2)) NOT BETWEEN ((v0.c2, v0.c0, vt0.c0)) AND ((v0.c0, NULL, vt1.c0))))) RIGHT OUTER JOIN vt0 ON ((((v0.c0) NOTNULL))*(((((((((rt1.c1)AND(vt1.c0)))OR(v0.c1)))OR(vt1.c0)))OR(v0.c1)))) ORDER BY (((3.211039782331504E-4)) BETWEEN (((- (NULL)))) AND ((-250050237))));
SELECT COUNT(*) FROM rt1, vt1 RIGHT OUTER JOIN v0 ON ((((NULL) NOT NULL))%((((v0.c4, 0.3080995058517948, rt1.c2)) NOT BETWEEN ((v0.c2, v0.c0, vt0.c0)) AND ((v0.c0, NULL, vt1.c0))))) RIGHT OUTER JOIN vt0 ON ((((v0.c0) NOTNULL))*(((((((((rt1.c1)AND(vt1.c0)))OR(v0.c1)))OR(vt1.c0)))OR(v0.c1)))) WHERE ((((((v0.c0)AND(rt1.c2))))>=((((v0.c0)<(v0.c0)))))) ORDER BY (((3.211039782331504E-4)) BETWEEN (((- (NULL)))) AND ((-250050237)));
SELECT SUM(count) FROM (SELECT (((((((v0.c0)AND(rt1.c2))))>=((((v0.c0)<(v0.c0)))))) IS TRUE)  as count FROM rt1, vt1 RIGHT OUTER JOIN v0 ON ((((NULL) NOT NULL))%((((v0.c4, 0.3080995058517948, rt1.c2)) NOT BETWEEN ((v0.c2, v0.c0, vt0.c0)) AND ((v0.c0, NULL, vt1.c0))))) RIGHT OUTER JOIN vt0 ON ((((v0.c0) NOTNULL))*(((((((((rt1.c1)AND(vt1.c0)))OR(v0.c1)))OR(vt1.c0)))OR(v0.c1)))) ORDER BY (((3.211039782331504E-4)) BETWEEN (((- (NULL)))) AND ((-250050237))));
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE (v0.c3) ORDER BY (((0.5820594626122603 IN ())) NOT BETWEEN ('-1112234398') AND (CAST(vt1.c0 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c3) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY (((0.5820594626122603 IN ())) NOT BETWEEN ('-1112234398') AND (CAST(vt1.c0 AS BLOB)))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE (v0.c3) ORDER BY (((0.5820594626122603 IN ())) NOT BETWEEN ('-1112234398') AND (CAST(vt1.c0 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c3) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY (((0.5820594626122603 IN ())) NOT BETWEEN ('-1112234398') AND (CAST(vt1.c0 AS BLOB)))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE (v0.c3) ORDER BY (((0.5820594626122603 IN ())) NOT BETWEEN ('-1112234398') AND (CAST(vt1.c0 AS BLOB)))  NULLS LAST;
SELECT * FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN ('67595876') AND (0.5854883140592106))  WHEN ((vt0.c0)/(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) NOT BETWEEN ('67595876') AND (0.5854883140592106))  WHEN ((vt0.c0)/(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN ('67595876') AND (0.5854883140592106))  WHEN ((vt0.c0)/(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) NOT BETWEEN ('67595876') AND (0.5854883140592106))  WHEN ((vt0.c0)/(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN ('67595876') AND (0.5854883140592106))  WHEN ((vt0.c0)/(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)OR(0xffffffffd246e5a5)))AND(((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE BINARY)OR(0xffffffffd246e5a5)))AND(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)OR(0xffffffffd246e5a5)))AND(((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE BINARY)OR(0xffffffffd246e5a5)))AND(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)OR(0xffffffffd246e5a5)))AND(((vt0.c0) NOT NULL))));
SELECT COUNT(*) FROM vt0, v0, rt1 WHERE (((vt0.c0) BETWEEN (v0.c2) AND (rt1.c2)) COLLATE BINARY) ORDER BY '', (- (v0.c0)), CAST(UNLIKELY(DISTINCT v0.c1) AS BLOB);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (v0.c2) AND (rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, rt1 ORDER BY '', (- (v0.c0)), CAST(UNLIKELY(DISTINCT v0.c1) AS BLOB));
SELECT COUNT(*) FROM vt0, v0, rt1 WHERE (((vt0.c0) BETWEEN (v0.c2) AND (rt1.c2)) COLLATE BINARY) ORDER BY '', (- (v0.c0)), CAST(UNLIKELY(DISTINCT v0.c1) AS BLOB);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (v0.c2) AND (rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, rt1 ORDER BY '', (- (v0.c0)), CAST(UNLIKELY(DISTINCT v0.c1) AS BLOB));
SELECT COUNT(*) FROM vt0, v0, rt1 WHERE (((vt0.c0) BETWEEN (v0.c2) AND (rt1.c2)) COLLATE BINARY) ORDER BY '', (- (v0.c0)), CAST(UNLIKELY(DISTINCT v0.c1) AS BLOB);
SELECT * FROM v0, vt0 WHERE (CAST(v0.c4 COLLATE RTRIM AS BLOB)) ORDER BY ((((v0.c0)==(vt0.c0))) NOT BETWEEN ((((v0.c0))==((vt0.c0)))) AND (((v0.c3)!=(v0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c4 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c0)==(vt0.c0))) NOT BETWEEN ((((v0.c0))==((vt0.c0)))) AND (((v0.c3)!=(v0.c1)))));
SELECT * FROM v0, vt0 WHERE (CAST(v0.c4 COLLATE RTRIM AS BLOB)) ORDER BY ((((v0.c0)==(vt0.c0))) NOT BETWEEN ((((v0.c0))==((vt0.c0)))) AND (((v0.c3)!=(v0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c4 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c0)==(vt0.c0))) NOT BETWEEN ((((v0.c0))==((vt0.c0)))) AND (((v0.c3)!=(v0.c1)))));
SELECT * FROM v0, vt0 WHERE (CAST(v0.c4 COLLATE RTRIM AS BLOB)) ORDER BY ((((v0.c0)==(vt0.c0))) NOT BETWEEN ((((v0.c0))==((vt0.c0)))) AND (((v0.c3)!=(v0.c1))));
SELECT * FROM rt1, vt0, vt1 WHERE (((rt1.c2)>(rt1.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt1.c2)>(rt1.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0, vt1);
SELECT * FROM rt1, vt0, vt1 WHERE (((rt1.c2)>(rt1.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt1.c2)>(rt1.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0, vt1);
SELECT * FROM rt1, vt0, vt1 WHERE (((rt1.c2)>(rt1.c2)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (v0.c1);
SELECT * FROM vt1 WHERE (CAST((+ (vt1.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST((+ (vt1.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST((+ (vt1.c0)) AS TEXT));
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (CAST('K)' AS BLOB)) ORDER BY CAST((~ ('1604356543')) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('K)' AS BLOB)) IS TRUE)  as count FROM v0, vt1 ORDER BY CAST((~ ('1604356543')) AS BLOB) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (CAST('K)' AS BLOB)) ORDER BY CAST((~ ('1604356543')) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('K)' AS BLOB)) IS TRUE)  as count FROM v0, vt1 ORDER BY CAST((~ ('1604356543')) AS BLOB) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (CAST('K)' AS BLOB)) ORDER BY CAST((~ ('1604356543')) AS BLOB) DESC  NULLS FIRST;
SELECT * FROM rt1, vt1, v0 WHERE (((rt1.c2 COLLATE RTRIM) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (CAST(rt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((rt1.c2 COLLATE RTRIM) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (CAST(rt1.c0 AS REAL)))) IS TRUE)  as count FROM rt1, vt1, v0);
SELECT * FROM rt1, vt1, v0 WHERE (((rt1.c2 COLLATE RTRIM) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (CAST(rt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((rt1.c2 COLLATE RTRIM) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (CAST(rt1.c0 AS REAL)))) IS TRUE)  as count FROM rt1, vt1, v0);
SELECT * FROM rt1, vt1, v0 WHERE (((rt1.c2 COLLATE RTRIM) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (CAST(rt1.c0 AS REAL))));
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY LTRIM(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0 ORDER BY LTRIM(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) DESC);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY LTRIM(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0 ORDER BY LTRIM(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) DESC);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY LTRIM(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) DESC;
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE ((((v0.c0, v0.c0, NULL)) NOT BETWEEN ((TYPEOF(DISTINCT v0.c0), v0.c2, ((vt0.c0)||(v0.c0)))) AND ((LENGTH(0.9782211610104448), ((vt1.c0) NOT BETWEEN (v0.c4) AND (v0.c1)), vt1.c0)))) ORDER BY ((((((((x'')AND(v0.c0)))AND(v0.c2)))OR(vt0.c0)))OR(v0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c0, NULL)) NOT BETWEEN ((TYPEOF(DISTINCT v0.c0), v0.c2, ((vt0.c0)||(v0.c0)))) AND ((LENGTH(0.9782211610104448), ((vt1.c0) NOT BETWEEN (v0.c4) AND (v0.c1)), vt1.c0)))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY ((((((((x'')AND(v0.c0)))AND(v0.c2)))OR(vt0.c0)))OR(v0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE ((((v0.c0, v0.c0, NULL)) NOT BETWEEN ((TYPEOF(DISTINCT v0.c0), v0.c2, ((vt0.c0)||(v0.c0)))) AND ((LENGTH(0.9782211610104448), ((vt1.c0) NOT BETWEEN (v0.c4) AND (v0.c1)), vt1.c0)))) ORDER BY ((((((((x'')AND(v0.c0)))AND(v0.c2)))OR(vt0.c0)))OR(v0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c0, NULL)) NOT BETWEEN ((TYPEOF(DISTINCT v0.c0), v0.c2, ((vt0.c0)||(v0.c0)))) AND ((LENGTH(0.9782211610104448), ((vt1.c0) NOT BETWEEN (v0.c4) AND (v0.c1)), vt1.c0)))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY ((((((((x'')AND(v0.c0)))AND(v0.c2)))OR(vt0.c0)))OR(v0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE ((((v0.c0, v0.c0, NULL)) NOT BETWEEN ((TYPEOF(DISTINCT v0.c0), v0.c2, ((vt0.c0)||(v0.c0)))) AND ((LENGTH(0.9782211610104448), ((vt1.c0) NOT BETWEEN (v0.c4) AND (v0.c1)), vt1.c0)))) ORDER BY ((((((((x'')AND(v0.c0)))AND(v0.c2)))OR(vt0.c0)))OR(v0.c0)) COLLATE RTRIM;
SELECT * FROM vt1 LEFT OUTER JOIN rt1 ON (((vt0.c0))<>((IFNULL(vt0.c0, rt1.c0)))) LEFT OUTER JOIN vt0 ON (CASE vt1.c0  WHEN rt1.c1 THEN rt1.c1 WHEN vt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN vt1.c0 THEN rt1.c0 ELSE rt1.c2 END IN (((rt1.c1) NOT NULL))) WHERE (((((((rt1.c1)OR(vt0.c0)))OR(vt1.c0)))>((rt1.c0 IN (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1)OR(vt0.c0)))OR(vt1.c0)))>((rt1.c0 IN (rt1.c1))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt1 ON (((vt0.c0))!=((IFNULL(vt0.c0, rt1.c0)))) LEFT OUTER JOIN vt0 ON (CASE vt1.c0  WHEN rt1.c1 THEN rt1.c1 WHEN vt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN vt1.c0 THEN rt1.c0 ELSE rt1.c2 END IN (((rt1.c1) NOT NULL))));
SELECT * FROM vt1 LEFT OUTER JOIN rt1 ON (((vt0.c0))<>((IFNULL(vt0.c0, rt1.c0)))) LEFT OUTER JOIN vt0 ON (CASE vt1.c0  WHEN rt1.c1 THEN rt1.c1 WHEN vt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN vt1.c0 THEN rt1.c0 ELSE rt1.c2 END IN (((rt1.c1) NOT NULL))) WHERE (((((((rt1.c1)OR(vt0.c0)))OR(vt1.c0)))>((rt1.c0 IN (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1)OR(vt0.c0)))OR(vt1.c0)))>((rt1.c0 IN (rt1.c1))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt1 ON (((vt0.c0))!=((IFNULL(vt0.c0, rt1.c0)))) LEFT OUTER JOIN vt0 ON (CASE vt1.c0  WHEN rt1.c1 THEN rt1.c1 WHEN vt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN vt1.c0 THEN rt1.c0 ELSE rt1.c2 END IN (((rt1.c1) NOT NULL))));
SELECT * FROM v0 WHERE (((x'') NOT BETWEEN ((((v0.c4)) BETWEEN ((v0.c4)) AND ((v0.c2)))) AND (LENGTH(v0.c0)))) ORDER BY ((((v0.c0)AND(((((((((v0.c4)OR(v0.c1)))AND(NULL)))OR(v0.c1)))AND(v0.c4)))))AND(x'0cc8')) ASC;
SELECT SUM(count) FROM (SELECT ((((x'') NOT BETWEEN ((((v0.c4)) BETWEEN ((v0.c4)) AND ((v0.c2)))) AND (LENGTH(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)AND(((((((((v0.c4)OR(v0.c1)))AND(NULL)))OR(v0.c1)))AND(v0.c4)))))AND(x'0cc8')) ASC);
SELECT * FROM v0 WHERE (((x'') NOT BETWEEN ((((v0.c4)) BETWEEN ((v0.c4)) AND ((v0.c2)))) AND (LENGTH(v0.c0)))) ORDER BY ((((v0.c0)AND(((((((((v0.c4)OR(v0.c1)))AND(NULL)))OR(v0.c1)))AND(v0.c4)))))AND(x'0cc8')) ASC;
SELECT SUM(count) FROM (SELECT ((((x'') NOT BETWEEN ((((v0.c4)) BETWEEN ((v0.c4)) AND ((v0.c2)))) AND (LENGTH(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)AND(((((((((v0.c4)OR(v0.c1)))AND(NULL)))OR(v0.c1)))AND(v0.c4)))))AND(x'0cc8')) ASC);
SELECT * FROM v0 WHERE (((x'') NOT BETWEEN ((((v0.c4)) BETWEEN ((v0.c4)) AND ((v0.c2)))) AND (LENGTH(v0.c0)))) ORDER BY ((((v0.c0)AND(((((((((v0.c4)OR(v0.c1)))AND(NULL)))OR(v0.c1)))AND(v0.c4)))))AND(x'0cc8')) ASC;
SELECT ALL * FROM vt0, v0, rt1 WHERE (CAST(NULL AS INTEGER) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, rt1);
SELECT ALL * FROM vt0, v0, rt1 WHERE (CAST(NULL AS INTEGER) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, rt1);
SELECT ALL * FROM vt0, v0, rt1 WHERE (CAST(NULL AS INTEGER) COLLATE BINARY);
SELECT ALL * FROM vt1 NOT INDEXED WHERE ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 NOT INDEXED WHERE ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 NOT INDEXED WHERE ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ()));
SELECT ALL COUNT(*) FROM rt1, v0, vt1, vt0 WHERE ((((((v0.c4)) NOT BETWEEN ((v0.c4)) AND ((v0.c1))))<>(((rt1.c2)IS(v0.c3)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c4)) NOT BETWEEN ((v0.c4)) AND ((v0.c1))))<>(((rt1.c2)IS(v0.c3))))) IS TRUE)  as count FROM rt1, v0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt1, v0, vt1, vt0 WHERE ((((((v0.c4)) NOT BETWEEN ((v0.c4)) AND ((v0.c1))))<>(((rt1.c2)IS(v0.c3)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c4)) NOT BETWEEN ((v0.c4)) AND ((v0.c1))))<>(((rt1.c2)IS(v0.c3))))) IS TRUE)  as count FROM rt1, v0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt1, v0, vt1, vt0 WHERE ((((((v0.c4)) NOT BETWEEN ((v0.c4)) AND ((v0.c1))))<>(((rt1.c2)IS(v0.c3)))));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST('' AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST('' AS REAL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST('' AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST('' AS REAL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST('' AS REAL));
SELECT ALL COUNT(*) FROM rt1, vt0, vt1 WHERE ((ROUND(rt1.c0, vt0.c0) IN (((rt1.c0) BETWEEN (rt1.c1) AND (NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((ROUND(rt1.c0, vt0.c0) IN (((rt1.c0) BETWEEN (rt1.c1) AND (NULL))))) IS TRUE)  as count FROM rt1, vt0, vt1);
SELECT ALL COUNT(*) FROM rt1, vt0, vt1 WHERE ((ROUND(rt1.c0, vt0.c0) IN (((rt1.c0) BETWEEN (rt1.c1) AND (NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((ROUND(rt1.c0, vt0.c0) IN (((rt1.c0) BETWEEN (rt1.c1) AND (NULL))))) IS TRUE)  as count FROM rt1, vt0, vt1);
SELECT ALL COUNT(*) FROM rt1, vt0, vt1 WHERE ((ROUND(rt1.c0, vt0.c0) IN (((rt1.c0) BETWEEN (rt1.c1) AND (NULL)))));
SELECT * FROM vt1, rt1 WHERE ((+ (CAST(rt1.c0 AS BLOB)))) ORDER BY (((rt1.c1 IN ()))=(((rt1.c1)IS(vt1.c0)))), (((rt1.c0)) BETWEEN (((rt1.c2 IN ()))) AND ((vt1.c0)))  NULLS LAST, (((((NULL))>(('1828840058')))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (CAST(rt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1, rt1 ORDER BY (((rt1.c1 IN ()))=(((rt1.c1)IS(vt1.c0)))), (((rt1.c0)) BETWEEN (((rt1.c2 IN ()))) AND ((vt1.c0)))  NULLS LAST, (((((NULL))>(('1828840058')))) NOT NULL)  NULLS LAST);
SELECT * FROM vt1, rt1 WHERE ((+ (CAST(rt1.c0 AS BLOB)))) ORDER BY (((rt1.c1 IN ()))=(((rt1.c1)IS(vt1.c0)))), (((rt1.c0)) BETWEEN (((rt1.c2 IN ()))) AND ((vt1.c0)))  NULLS LAST, (((((NULL))>(('1828840058')))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (CAST(rt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1, rt1 ORDER BY (((rt1.c1 IN ()))=(((rt1.c1)IS(vt1.c0)))), (((rt1.c0)) BETWEEN (((rt1.c2 IN ()))) AND ((vt1.c0)))  NULLS LAST, (((((NULL))>(('1828840058')))) NOT NULL)  NULLS LAST);
SELECT * FROM vt1, rt1 WHERE ((+ (CAST(rt1.c0 AS BLOB)))) ORDER BY (((rt1.c1 IN ()))=(((rt1.c1)IS(vt1.c0)))), (((rt1.c0)) BETWEEN (((rt1.c2 IN ()))) AND ((vt1.c0)))  NULLS LAST, (((((NULL))>(('1828840058')))) NOT NULL)  NULLS LAST;
SELECT COUNT(*) FROM v0 INNER JOIN rt1 ON ((json_valid(v0.c1))+(TRIM(DISTINCT v0.c3, v0.c0))) WHERE ((~ (((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0 INNER JOIN rt1 ON ((json_valid(v0.c1))+(TRIM(DISTINCT v0.c3, v0.c0))));
SELECT COUNT(*) FROM v0 INNER JOIN rt1 ON ((json_valid(v0.c1))+(TRIM(DISTINCT v0.c3, v0.c0))) WHERE ((~ (((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0 INNER JOIN rt1 ON ((json_valid(v0.c1))+(TRIM(DISTINCT v0.c3, v0.c0))));
SELECT COUNT(*) FROM v0 INNER JOIN rt1 ON ((json_valid(v0.c1))+(TRIM(DISTINCT v0.c3, v0.c0))) WHERE ((~ (((v0.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM vt1, rt1 RIGHT OUTER JOIN vt0 ON ((CAST(v0.c2 AS TEXT)) NOT BETWEEN (CAST(rt1.c1 AS INTEGER)) AND (CASE WHEN v0.c2 THEN vt1.c0 ELSE rt1.c0 END)) INNER JOIN v0 ON ('-213752874' IN ()) WHERE ((+ ((v0.c3 IN ())))) ORDER BY 0.3198775524800078 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((v0.c3 IN ())))) IS TRUE)  as count FROM vt1, rt1 RIGHT OUTER JOIN vt0 ON ((CAST(v0.c2 AS TEXT)) NOT BETWEEN (CAST(rt1.c1 AS INTEGER)) AND (CASE WHEN v0.c2 THEN vt1.c0 ELSE rt1.c0 END)) INNER JOIN v0 ON ('-213752874' IN ()) ORDER BY 0.3198775524800078 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt1 RIGHT OUTER JOIN vt0 ON ((CAST(v0.c2 AS TEXT)) NOT BETWEEN (CAST(rt1.c1 AS INTEGER)) AND (CASE WHEN v0.c2 THEN vt1.c0 ELSE rt1.c0 END)) INNER JOIN v0 ON ('-213752874' IN ()) WHERE ((+ ((v0.c3 IN ())))) ORDER BY 0.3198775524800078 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((v0.c3 IN ())))) IS TRUE)  as count FROM vt1, rt1 RIGHT OUTER JOIN vt0 ON ((CAST(v0.c2 AS TEXT)) NOT BETWEEN (CAST(rt1.c1 AS INTEGER)) AND (CASE WHEN v0.c2 THEN vt1.c0 ELSE rt1.c0 END)) INNER JOIN v0 ON ('-213752874' IN ()) ORDER BY 0.3198775524800078 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt1 RIGHT OUTER JOIN vt0 ON ((CAST(v0.c2 AS TEXT)) NOT BETWEEN (CAST(rt1.c1 AS INTEGER)) AND (CASE WHEN v0.c2 THEN vt1.c0 ELSE rt1.c0 END)) INNER JOIN v0 ON ('-213752874' IN ()) WHERE ((+ ((v0.c3 IN ())))) ORDER BY 0.3198775524800078 ASC  NULLS FIRST;
SELECT ALL * FROM v0, rt1 FULL OUTER JOIN vt1 ON (((((((('NE')OR((((vt1.c0, v0.c3, v0.c2)) NOT BETWEEN ((vt1.c0, v0.c2, v0.c3)) AND ((v0.c2, rt1.c1, x'c4ae'))))))AND(v0.c1)))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))OR(rt1.c1)))OR(rt1.c2)))))OR(v0.c0 COLLATE NOCASE)) LEFT OUTER JOIN vt0 ON CAST(CAST(v0.c4 AS REAL) AS REAL) WHERE (584140837);
SELECT SUM(count) FROM (SELECT ((584140837) IS TRUE)  as count FROM v0, rt1 FULL OUTER JOIN vt1 ON (((((((('NE')OR((((vt1.c0, v0.c3, v0.c2)) NOT BETWEEN ((vt1.c0, v0.c2, v0.c3)) AND ((v0.c2, rt1.c1, x'c4ae'))))))AND(v0.c1)))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))OR(rt1.c1)))OR(rt1.c2)))))OR(v0.c0 COLLATE NOCASE)) LEFT OUTER JOIN vt0 ON CAST(CAST(v0.c4 AS REAL) AS REAL));
SELECT ALL * FROM v0, rt1 FULL OUTER JOIN vt1 ON (((((((('NE')OR((((vt1.c0, v0.c3, v0.c2)) NOT BETWEEN ((vt1.c0, v0.c2, v0.c3)) AND ((v0.c2, rt1.c1, x'c4ae'))))))AND(v0.c1)))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))OR(rt1.c1)))OR(rt1.c2)))))OR(v0.c0 COLLATE NOCASE)) LEFT OUTER JOIN vt0 ON CAST(CAST(v0.c4 AS REAL) AS REAL) WHERE (584140837);
SELECT SUM(count) FROM (SELECT ((584140837) IS TRUE)  as count FROM v0, rt1 FULL OUTER JOIN vt1 ON (((((((('NE')OR((((vt1.c0, v0.c3, v0.c2)) NOT BETWEEN ((vt1.c0, v0.c2, v0.c3)) AND ((v0.c2, rt1.c1, x'c4ae'))))))AND(v0.c1)))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))OR(rt1.c1)))OR(rt1.c2)))))OR(v0.c0 COLLATE NOCASE)) LEFT OUTER JOIN vt0 ON CAST(CAST(v0.c4 AS REAL) AS REAL));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON (((+ (''))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (CAST(rt1.c1 AS INTEGER))) INNER JOIN v0 ON ((((((((rt1.c1)OR(v0.c3)))OR(vt0.c0)))OR((((v0.c4))=((rt1.c0))))))AND(((((rt1.c2)OR(vt0.c0)))OR(rt1.c0)))) LEFT OUTER JOIN vt1 ON CASE WHEN v0.c3 THEN rt1.c0 ELSE rt1.c0 END COLLATE BINARY WHERE (TRIM(((rt1.c2)-(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM(((rt1.c2)-(vt1.c0)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON (((+ (''))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (CAST(rt1.c1 AS INTEGER))) INNER JOIN v0 ON ((((((((rt1.c1)OR(v0.c3)))OR(vt0.c0)))OR((((v0.c4))==((rt1.c0))))))AND(((((rt1.c2)OR(vt0.c0)))OR(rt1.c0)))) LEFT OUTER JOIN vt1 ON CASE WHEN v0.c3 THEN rt1.c0 ELSE rt1.c0 END COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON (((+ (''))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (CAST(rt1.c1 AS INTEGER))) INNER JOIN v0 ON ((((((((rt1.c1)OR(v0.c3)))OR(vt0.c0)))OR((((v0.c4))=((rt1.c0))))))AND(((((rt1.c2)OR(vt0.c0)))OR(rt1.c0)))) LEFT OUTER JOIN vt1 ON CASE WHEN v0.c3 THEN rt1.c0 ELSE rt1.c0 END COLLATE BINARY WHERE (TRIM(((rt1.c2)-(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM(((rt1.c2)-(vt1.c0)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON (((+ (''))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (CAST(rt1.c1 AS INTEGER))) INNER JOIN v0 ON ((((((((rt1.c1)OR(v0.c3)))OR(vt0.c0)))OR((((v0.c4))==((rt1.c0))))))AND(((((rt1.c2)OR(vt0.c0)))OR(rt1.c0)))) LEFT OUTER JOIN vt1 ON CASE WHEN v0.c3 THEN rt1.c0 ELSE rt1.c0 END COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON (((+ (''))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (CAST(rt1.c1 AS INTEGER))) INNER JOIN v0 ON ((((((((rt1.c1)OR(v0.c3)))OR(vt0.c0)))OR((((v0.c4))=((rt1.c0))))))AND(((((rt1.c2)OR(vt0.c0)))OR(rt1.c0)))) LEFT OUTER JOIN vt1 ON CASE WHEN v0.c3 THEN rt1.c0 ELSE rt1.c0 END COLLATE BINARY WHERE (TRIM(((rt1.c2)-(vt1.c0))));
SELECT ALL * FROM vt0 WHERE (LIKELY(DISTINCT vt0.c0) COLLATE RTRIM) ORDER BY (SQLITE_SOURCE_ID() IN ())  NULLS LAST, x'1d8b'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT vt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (SQLITE_SOURCE_ID() IN ())  NULLS LAST, x'1d8b'  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (LIKELY(DISTINCT vt0.c0) COLLATE RTRIM) ORDER BY (SQLITE_SOURCE_ID() IN ())  NULLS LAST, x'1d8b'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT vt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (SQLITE_SOURCE_ID() IN ())  NULLS LAST, x'1d8b'  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (LIKELY(DISTINCT vt0.c0) COLLATE RTRIM) ORDER BY (SQLITE_SOURCE_ID() IN ())  NULLS LAST, x'1d8b'  NULLS FIRST;
SELECT * FROM vt1 WHERE (((((((vt1.c0)IS NOT(x'')))AND((vt1.c0 IN ()))))OR((((((((('-832815493')AND(0.17460480815319568)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))))) ORDER BY ((MIN(vt1.c0, vt1.c0))IS(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)IS NOT(x'')))AND((vt1.c0 IN ()))))OR((((((((('-832815493')AND(0.17460480815319568)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((MIN(vt1.c0, vt1.c0))IS(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC);
SELECT * FROM vt1 WHERE (((((((vt1.c0)IS NOT(x'')))AND((vt1.c0 IN ()))))OR((((((((('-832815493')AND(0.17460480815319568)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))))) ORDER BY ((MIN(vt1.c0, vt1.c0))IS(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)IS NOT(x'')))AND((vt1.c0 IN ()))))OR((((((((('-832815493')AND(0.17460480815319568)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((MIN(vt1.c0, vt1.c0))IS(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC);
SELECT * FROM vt1 WHERE (((((((vt1.c0)IS NOT(x'')))AND((vt1.c0 IN ()))))OR((((((((('-832815493')AND(0.17460480815319568)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))))) ORDER BY ((MIN(vt1.c0, vt1.c0))IS(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC;
SELECT * FROM vt1, v0, vt0, rt1 WHERE (((HEX(v0.c1)) BETWEEN (CASE v0.c3  WHEN rt1.c2 THEN vt1.c0 END) AND (CAST(rt1.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((HEX(v0.c1)) BETWEEN (CASE v0.c3  WHEN rt1.c2 THEN vt1.c0 END) AND (CAST(rt1.c2 AS INTEGER)))) IS TRUE)  as count FROM vt1, v0, vt0, rt1);
SELECT * FROM vt1, v0, vt0, rt1 WHERE (((HEX(v0.c1)) BETWEEN (CASE v0.c3  WHEN rt1.c2 THEN vt1.c0 END) AND (CAST(rt1.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((HEX(v0.c1)) BETWEEN (CASE v0.c3  WHEN rt1.c2 THEN vt1.c0 END) AND (CAST(rt1.c2 AS INTEGER)))) IS TRUE)  as count FROM vt1, v0, vt0, rt1);
SELECT * FROM vt1, v0, vt0, rt1 WHERE (((HEX(v0.c1)) BETWEEN (CASE v0.c3  WHEN rt1.c2 THEN vt1.c0 END) AND (CAST(rt1.c2 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt1, rt1, vt0 WHERE (TRIM(rt1.c1, vt1.c0) COLLATE NOCASE) ORDER BY (((NULL)) NOT BETWEEN ((CAST(rt1.c2 AS TEXT))) AND (((+ (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((TRIM(rt1.c1, vt1.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt1, vt0 ORDER BY (((NULL)) NOT BETWEEN ((CAST(rt1.c2 AS TEXT))) AND (((+ (rt1.c2))))));
SELECT ALL COUNT(*) FROM vt1, rt1, vt0 WHERE (TRIM(rt1.c1, vt1.c0) COLLATE NOCASE) ORDER BY (((NULL)) NOT BETWEEN ((CAST(rt1.c2 AS TEXT))) AND (((+ (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((TRIM(rt1.c1, vt1.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt1, vt0 ORDER BY (((NULL)) NOT BETWEEN ((CAST(rt1.c2 AS TEXT))) AND (((+ (rt1.c2))))));
SELECT ALL COUNT(*) FROM vt1, rt1, vt0 WHERE (TRIM(rt1.c1, vt1.c0) COLLATE NOCASE) ORDER BY (((NULL)) NOT BETWEEN ((CAST(rt1.c2 AS TEXT))) AND (((+ (rt1.c2)))));
SELECT * FROM vt0, rt1, vt1 WHERE (((((rt1.c1)>=(vt1.c0)))LIKE((rt1.c2 IN ())))) ORDER BY ((((rt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((rt1.c2)<(x''))) AND (CAST(rt1.c2 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)>=(vt1.c0)))LIKE((rt1.c2 IN ())))) IS TRUE)  as count FROM vt0, rt1, vt1 ORDER BY ((((rt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((rt1.c2)<(x''))) AND (CAST(rt1.c2 AS BLOB)))  NULLS FIRST);
SELECT * FROM vt0, rt1, vt1 WHERE (((((rt1.c1)>=(vt1.c0)))LIKE((rt1.c2 IN ())))) ORDER BY ((((rt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((rt1.c2)<(x''))) AND (CAST(rt1.c2 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)>=(vt1.c0)))LIKE((rt1.c2 IN ())))) IS TRUE)  as count FROM vt0, rt1, vt1 ORDER BY ((((rt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((rt1.c2)<(x''))) AND (CAST(rt1.c2 AS BLOB)))  NULLS FIRST);
SELECT * FROM vt0, rt1, vt1 WHERE (((((rt1.c1)>=(vt1.c0)))LIKE((rt1.c2 IN ())))) ORDER BY ((((rt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((rt1.c2)<(x''))) AND (CAST(rt1.c2 AS BLOB)))  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (0.5103908562877212);
SELECT SUM(count) FROM (SELECT ((0.5103908562877212) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (0.5103908562877212);
SELECT SUM(count) FROM (SELECT ((0.5103908562877212) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (0.5103908562877212);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (NULL) ORDER BY CAST(LIKELY(DISTINCT v0.c3) AS TEXT) DESC  NULLS LAST, (x'' IN (v0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt1 ORDER BY CAST(LIKELY(DISTINCT v0.c3) AS TEXT) DESC  NULLS LAST, (x'' IN (v0.c0)) ASC);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (NULL) ORDER BY CAST(LIKELY(DISTINCT v0.c3) AS TEXT) DESC  NULLS LAST, (x'' IN (v0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt1 ORDER BY CAST(LIKELY(DISTINCT v0.c3) AS TEXT) DESC  NULLS LAST, (x'' IN (v0.c0)) ASC);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (NULL) ORDER BY CAST(LIKELY(DISTINCT v0.c3) AS TEXT) DESC  NULLS LAST, (x'' IN (v0.c0)) ASC;
SELECT COUNT(*) FROM vt1, vt0, v0, rt1 WHERE ((((((rt1.c1))!=((v0.c4)))) BETWEEN (v0.c4) AND (((rt1.c0) ISNULL)))) ORDER BY (vt0.c0 IN ()) COLLATE NOCASE COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1))<>((v0.c4)))) BETWEEN (v0.c4) AND (((rt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1, vt0, v0, rt1 ORDER BY (vt0.c0 IN ()) COLLATE NOCASE COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt1, vt0, v0, rt1 WHERE ((((((rt1.c1))!=((v0.c4)))) BETWEEN (v0.c4) AND (((rt1.c0) ISNULL)))) ORDER BY (vt0.c0 IN ()) COLLATE NOCASE COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1))<>((v0.c4)))) BETWEEN (v0.c4) AND (((rt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1, vt0, v0, rt1 ORDER BY (vt0.c0 IN ()) COLLATE NOCASE COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt1, vt0, v0, rt1 WHERE ((((((rt1.c1))!=((v0.c4)))) BETWEEN (v0.c4) AND (((rt1.c0) ISNULL)))) ORDER BY (vt0.c0 IN ()) COLLATE NOCASE COLLATE RTRIM DESC;
SELECT ALL COUNT(*) FROM vt0, v0 FULL OUTER JOIN rt1 ON ((rt1.c2)*(rt1.c1)) COLLATE RTRIM WHERE (CAST(((1.079153237E9) IS TRUE) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((1.079153237E9) IS TRUE) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN rt1 ON ((rt1.c2)*(rt1.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, v0 FULL OUTER JOIN rt1 ON ((rt1.c2)*(rt1.c1)) COLLATE RTRIM WHERE (CAST(((1.079153237E9) IS TRUE) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((1.079153237E9) IS TRUE) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN rt1 ON ((rt1.c2)*(rt1.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, v0 FULL OUTER JOIN rt1 ON ((rt1.c2)*(rt1.c1)) COLLATE RTRIM WHERE (CAST(((1.079153237E9) IS TRUE) AS NUMERIC));
SELECT ALL * FROM rt1, vt1 WHERE (((x'e1647654') BETWEEN (rt1.c0 COLLATE NOCASE) AND (LIKELIHOOD(rt1.c0, 0.12634378832402315))));
SELECT SUM(count) FROM (SELECT ((((x'e1647654') BETWEEN (rt1.c0 COLLATE NOCASE) AND (LIKELIHOOD(rt1.c0, 0.12634378832402315)))) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL * FROM rt1, vt1 WHERE (((x'e1647654') BETWEEN (rt1.c0 COLLATE NOCASE) AND (LIKELIHOOD(rt1.c0, 0.12634378832402315))));
SELECT SUM(count) FROM (SELECT ((((x'e1647654') BETWEEN (rt1.c0 COLLATE NOCASE) AND (LIKELIHOOD(rt1.c0, 0.12634378832402315)))) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL * FROM rt1, vt1 WHERE (((x'e1647654') BETWEEN (rt1.c0 COLLATE NOCASE) AND (LIKELIHOOD(rt1.c0, 0.12634378832402315))));
SELECT * FROM v0, vt0, rt1, vt1 WHERE (((((((((CASE v0.c2  WHEN v0.c2 THEN v0.c2 ELSE vt0.c0 END)AND(rt1.c2)))AND(vt0.c0)))OR((v0.c4 IN ()))))AND(CAST(vt1.c0 AS BLOB)))) ORDER BY v0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE v0.c2  WHEN v0.c2 THEN v0.c2 ELSE vt0.c0 END)AND(rt1.c2)))AND(vt0.c0)))OR((v0.c4 IN ()))))AND(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM v0, vt0, rt1, vt1 ORDER BY v0.c1  NULLS LAST);
SELECT * FROM v0, vt0, rt1, vt1 WHERE (((((((((CASE v0.c2  WHEN v0.c2 THEN v0.c2 ELSE vt0.c0 END)AND(rt1.c2)))AND(vt0.c0)))OR((v0.c4 IN ()))))AND(CAST(vt1.c0 AS BLOB)))) ORDER BY v0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE v0.c2  WHEN v0.c2 THEN v0.c2 ELSE vt0.c0 END)AND(rt1.c2)))AND(vt0.c0)))OR((v0.c4 IN ()))))AND(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM v0, vt0, rt1, vt1 ORDER BY v0.c1  NULLS LAST);
SELECT * FROM v0, vt0, rt1, vt1 WHERE (((((((((CASE v0.c2  WHEN v0.c2 THEN v0.c2 ELSE vt0.c0 END)AND(rt1.c2)))AND(vt0.c0)))OR((v0.c4 IN ()))))AND(CAST(vt1.c0 AS BLOB)))) ORDER BY v0.c1  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt1 ON 0.3198775524800078 INNER JOIN vt0 ON (((-745538227, (((vt1.c0, v0.c4, v0.c3)) BETWEEN ((v0.c0, vt0.c0, v0.c1)) AND ((v0.c1, rt1.c1, vt1.c0))), rt1.c1 COLLATE BINARY))<=(('›úË∑°JWU_L', '0.34054612487221125', 0.2810894433121993))) CROSS JOIN rt1 ON ((CASE WHEN 'E\n' THEN vt1.c0 WHEN v0.c2 THEN v0.c3 WHEN v0.c4 THEN vt0.c0 END) NOT BETWEEN (TRIM(DISTINCT v0.c0)) AND ((((rt1.c0))<((rt1.c2))))) WHERE (CASE WHEN ((((vt0.c0)AND(v0.c3)))AND(v0.c1)) THEN rt1.c1 WHEN CAST(v0.c1 AS REAL) THEN (((rt1.c1, v0.c2, vt1.c0)) NOT BETWEEN ((x'011c', rt1.c0, v0.c0)) AND ((v0.c2, rt1.c2, vt0.c0))) WHEN (+ (rt1.c2)) THEN rt1.c0 ELSE x'' END) ORDER BY 0xffffffffd2472890;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt0.c0)AND(v0.c3)))AND(v0.c1)) THEN rt1.c1 WHEN CAST(v0.c1 AS REAL) THEN (((rt1.c1, v0.c2, vt1.c0)) NOT BETWEEN ((x'011c', rt1.c0, v0.c0)) AND ((v0.c2, rt1.c2, vt0.c0))) WHEN (+ (rt1.c2)) THEN rt1.c0 ELSE x'' END) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON 0.3198775524800078 INNER JOIN vt0 ON (((-745538227, (((vt1.c0, v0.c4, v0.c3)) BETWEEN ((v0.c0, vt0.c0, v0.c1)) AND ((v0.c1, rt1.c1, vt1.c0))), rt1.c1 COLLATE BINARY))<=(('›úË∑°JWU_L', '0.34054612487221125', 0.2810894433121993))) CROSS JOIN rt1 ON ((CASE WHEN 'E\n' THEN vt1.c0 WHEN v0.c2 THEN v0.c3 WHEN v0.c4 THEN vt0.c0 END) NOT BETWEEN (TRIM(DISTINCT v0.c0)) AND ((((rt1.c0))<((rt1.c2))))) ORDER BY 0Xffffffffd2472890);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt1 ON 0.3198775524800078 INNER JOIN vt0 ON (((-745538227, (((vt1.c0, v0.c4, v0.c3)) BETWEEN ((v0.c0, vt0.c0, v0.c1)) AND ((v0.c1, rt1.c1, vt1.c0))), rt1.c1 COLLATE BINARY))<=(('›úË∑°JWU_L', '0.34054612487221125', 0.2810894433121993))) CROSS JOIN rt1 ON ((CASE WHEN 'E\n' THEN vt1.c0 WHEN v0.c2 THEN v0.c3 WHEN v0.c4 THEN vt0.c0 END) NOT BETWEEN (TRIM(DISTINCT v0.c0)) AND ((((rt1.c0))<((rt1.c2))))) WHERE (CASE WHEN ((((vt0.c0)AND(v0.c3)))AND(v0.c1)) THEN rt1.c1 WHEN CAST(v0.c1 AS REAL) THEN (((rt1.c1, v0.c2, vt1.c0)) NOT BETWEEN ((x'011c', rt1.c0, v0.c0)) AND ((v0.c2, rt1.c2, vt0.c0))) WHEN (+ (rt1.c2)) THEN rt1.c0 ELSE x'' END) ORDER BY 0xffffffffd2472890;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt0.c0)AND(v0.c3)))AND(v0.c1)) THEN rt1.c1 WHEN CAST(v0.c1 AS REAL) THEN (((rt1.c1, v0.c2, vt1.c0)) NOT BETWEEN ((x'011c', rt1.c0, v0.c0)) AND ((v0.c2, rt1.c2, vt0.c0))) WHEN (+ (rt1.c2)) THEN rt1.c0 ELSE x'' END) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON 0.3198775524800078 INNER JOIN vt0 ON (((-745538227, (((vt1.c0, v0.c4, v0.c3)) BETWEEN ((v0.c0, vt0.c0, v0.c1)) AND ((v0.c1, rt1.c1, vt1.c0))), rt1.c1 COLLATE BINARY))<=(('›úË∑°JWU_L', '0.34054612487221125', 0.2810894433121993))) CROSS JOIN rt1 ON ((CASE WHEN 'E\n' THEN vt1.c0 WHEN v0.c2 THEN v0.c3 WHEN v0.c4 THEN vt0.c0 END) NOT BETWEEN (TRIM(DISTINCT v0.c0)) AND ((((rt1.c0))<((rt1.c2))))) ORDER BY 0Xffffffffd2472890);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt1 ON 0.3198775524800078 INNER JOIN vt0 ON (((-745538227, (((vt1.c0, v0.c4, v0.c3)) BETWEEN ((v0.c0, vt0.c0, v0.c1)) AND ((v0.c1, rt1.c1, vt1.c0))), rt1.c1 COLLATE BINARY))<=(('›úË∑°JWU_L', '0.34054612487221125', 0.2810894433121993))) CROSS JOIN rt1 ON ((CASE WHEN 'E\n' THEN vt1.c0 WHEN v0.c2 THEN v0.c3 WHEN v0.c4 THEN vt0.c0 END) NOT BETWEEN (TRIM(DISTINCT v0.c0)) AND ((((rt1.c0))<((rt1.c2))))) WHERE (CASE WHEN ((((vt0.c0)AND(v0.c3)))AND(v0.c1)) THEN rt1.c1 WHEN CAST(v0.c1 AS REAL) THEN (((rt1.c1, v0.c2, vt1.c0)) NOT BETWEEN ((x'011c', rt1.c0, v0.c0)) AND ((v0.c2, rt1.c2, vt0.c0))) WHEN (+ (rt1.c2)) THEN rt1.c0 ELSE x'' END) ORDER BY 0xffffffffd2472890;
SELECT COUNT(*) FROM vt1, rt1, vt0 WHERE (((((rt1.c2) ISNULL)) BETWEEN ((rt1.c0 IN ())) AND (((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c0)))AND(vt0.c0)))AND(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) ISNULL)) BETWEEN ((rt1.c0 IN ())) AND (((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c0)))AND(vt0.c0)))AND(rt1.c0))))) IS TRUE)  as count FROM vt1, rt1, vt0);
SELECT COUNT(*) FROM vt1, rt1, vt0 WHERE (((((rt1.c2) ISNULL)) BETWEEN ((rt1.c0 IN ())) AND (((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c0)))AND(vt0.c0)))AND(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) ISNULL)) BETWEEN ((rt1.c0 IN ())) AND (((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c0)))AND(vt0.c0)))AND(rt1.c0))))) IS TRUE)  as count FROM vt1, rt1, vt0);
SELECT COUNT(*) FROM vt1, rt1, vt0 WHERE (((((rt1.c2) ISNULL)) BETWEEN ((rt1.c0 IN ())) AND (((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c0)))AND(vt0.c0)))AND(rt1.c0)))));
SELECT COUNT(*) FROM vt0, rt1, vt1 WHERE (vt1.c0) ORDER BY (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, rt1, vt1 ORDER BY (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1, vt1 WHERE (vt1.c0) ORDER BY (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, rt1, vt1 ORDER BY (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1, vt1 WHERE (vt1.c0) ORDER BY (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE BINARY  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON ((((v0.c2)<('')))<(('-54310968' IN ()))) WHERE ((((v0.c0 IN ())) NOT BETWEEN (((v0.c4) BETWEEN (v0.c3) AND (v0.c3))) AND (((v0.c3) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ())) NOT BETWEEN (((v0.c4) BETWEEN (v0.c3) AND (v0.c3))) AND (((v0.c3) ISNULL)))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((((v0.c2)<('')))<(('-54310968' IN ()))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON ((((v0.c2)<('')))<(('-54310968' IN ()))) WHERE ((((v0.c0 IN ())) NOT BETWEEN (((v0.c4) BETWEEN (v0.c3) AND (v0.c3))) AND (((v0.c3) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ())) NOT BETWEEN (((v0.c4) BETWEEN (v0.c3) AND (v0.c3))) AND (((v0.c3) ISNULL)))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((((v0.c2)<('')))<(('-54310968' IN ()))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON ((((v0.c2)<('')))<(('-54310968' IN ()))) WHERE ((((v0.c0 IN ())) NOT BETWEEN (((v0.c4) BETWEEN (v0.c3) AND (v0.c3))) AND (((v0.c3) ISNULL))));
SELECT COUNT(*) FROM v0, vt1, vt0 INNER JOIN rt1 ON (((vt1.c0) NOTNULL) IN (CAST(vt0.c0 AS NUMERIC), (v0.c0 IN ()), (v0.c4 IN ()))) WHERE (((((rt1.c2) ISNULL)) NOTNULL)) ORDER BY (((((NULL))<((rt1.c0)))) BETWEEN (vt1.c0 COLLATE RTRIM) AND (((((v0.c1)OR(v0.c2)))OR(1.828840058E9)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) ISNULL)) NOTNULL)) IS TRUE)  as count FROM v0, vt1 NOT INDEXED, vt0 INNER JOIN rt1 ON (((vt1.c0) NOTNULL) IN (CAST(vt0.c0 AS NUMERIC), (v0.c0 IN ()), (v0.c4 IN ()))) ORDER BY (((((NULL))<((rt1.c0)))) BETWEEN (vt1.c0 COLLATE RTRIM) AND (((((v0.c1)OR(v0.c2)))OR(1.828840058E9)))) ASC);
SELECT COUNT(*) FROM v0, vt1, vt0 INNER JOIN rt1 ON (((vt1.c0) NOTNULL) IN (CAST(vt0.c0 AS NUMERIC), (v0.c0 IN ()), (v0.c4 IN ()))) WHERE (((((rt1.c2) ISNULL)) NOTNULL)) ORDER BY (((((NULL))<((rt1.c0)))) BETWEEN (vt1.c0 COLLATE RTRIM) AND (((((v0.c1)OR(v0.c2)))OR(1.828840058E9)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) ISNULL)) NOTNULL)) IS TRUE)  as count FROM v0, vt1 NOT INDEXED, vt0 INNER JOIN rt1 ON (((vt1.c0) NOTNULL) IN (CAST(vt0.c0 AS NUMERIC), (v0.c0 IN ()), (v0.c4 IN ()))) ORDER BY (((((NULL))<((rt1.c0)))) BETWEEN (vt1.c0 COLLATE RTRIM) AND (((((v0.c1)OR(v0.c2)))OR(1.828840058E9)))) ASC);
SELECT COUNT(*) FROM v0, vt1, vt0 INNER JOIN rt1 ON (((vt1.c0) NOTNULL) IN (CAST(vt0.c0 AS NUMERIC), (v0.c0 IN ()), (v0.c4 IN ()))) WHERE (((((rt1.c2) ISNULL)) NOTNULL)) ORDER BY (((((NULL))<((rt1.c0)))) BETWEEN (vt1.c0 COLLATE RTRIM) AND (((((v0.c1)OR(v0.c2)))OR(1.828840058E9)))) ASC;
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON ((((((v0.c1)<=(v0.c1)))OR(((rt1.c2)/(0.700497183457149)))))AND(((rt1.c2) BETWEEN (v0.c3) AND (vt0.c0)))) CROSS JOIN rt1 ON (((NULL))>((rt1.c1))) COLLATE RTRIM WHERE ((~ (((v0.c4)GLOB(v0.c3)))));
SELECT SUM(count) FROM (SELECT (((~ (((v0.c4)GLOB(v0.c3))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((((((v0.c1)<=(v0.c1)))OR(((rt1.c2)/(0.700497183457149)))))AND(((rt1.c2) BETWEEN (v0.c3) AND (vt0.c0)))) CROSS JOIN rt1 ON (((NULL))>((rt1.c1))) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON ((((((v0.c1)<=(v0.c1)))OR(((rt1.c2)/(0.700497183457149)))))AND(((rt1.c2) BETWEEN (v0.c3) AND (vt0.c0)))) CROSS JOIN rt1 ON (((NULL))>((rt1.c1))) COLLATE RTRIM WHERE ((~ (((v0.c4)GLOB(v0.c3)))));
SELECT SUM(count) FROM (SELECT (((~ (((v0.c4)GLOB(v0.c3))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((((((v0.c1)<=(v0.c1)))OR(((rt1.c2)/(0.700497183457149)))))AND(((rt1.c2) BETWEEN (v0.c3) AND (vt0.c0)))) CROSS JOIN rt1 ON (((NULL))>((rt1.c1))) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON ((((((v0.c1)<=(v0.c1)))OR(((rt1.c2)/(0.700497183457149)))))AND(((rt1.c2) BETWEEN (v0.c3) AND (vt0.c0)))) CROSS JOIN rt1 ON (((NULL))>((rt1.c1))) COLLATE RTRIM WHERE ((~ (((v0.c4)GLOB(v0.c3)))));
SELECT COUNT(*) FROM vt1, vt0, v0 NATURAL JOIN rt1 WHERE (CAST(rt1.c0 AS TEXT) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c0 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, v0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM vt1, vt0, v0 NATURAL JOIN rt1 WHERE (CAST(rt1.c0 AS TEXT) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c0 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, v0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM vt1, vt0, v0 NATURAL JOIN rt1 WHERE (CAST(rt1.c0 AS TEXT) COLLATE RTRIM);
SELECT * FROM v0, vt0, vt1 WHERE ((((v0.c0)) NOT BETWEEN (((v0.c3 IN (v0.c1)))) AND ((vt0.c0 COLLATE BINARY)))) ORDER BY ((((((vt1.c0)AND(v0.c0)))OR(vt1.c0)))&(TRIM(vt1.c0)))  NULLS FIRST, CAST(((v0.c0) NOT NULL) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN (((v0.c3 IN (v0.c1)))) AND ((vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY ((((((vt1.c0)AND(v0.c0)))OR(vt1.c0)))&(TRIM(vt1.c0)))  NULLS FIRST, CAST(((v0.c0) NOT NULL) AS NUMERIC));
SELECT * FROM v0, vt0, vt1 WHERE ((((v0.c0)) NOT BETWEEN (((v0.c3 IN (v0.c1)))) AND ((vt0.c0 COLLATE BINARY)))) ORDER BY ((((((vt1.c0)AND(v0.c0)))OR(vt1.c0)))&(TRIM(vt1.c0)))  NULLS FIRST, CAST(((v0.c0) NOT NULL) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN (((v0.c3 IN (v0.c1)))) AND ((vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY ((((((vt1.c0)AND(v0.c0)))OR(vt1.c0)))&(TRIM(vt1.c0)))  NULLS FIRST, CAST(((v0.c0) NOT NULL) AS NUMERIC));
SELECT * FROM v0, vt0, vt1 WHERE ((((v0.c0)) NOT BETWEEN (((v0.c3 IN (v0.c1)))) AND ((vt0.c0 COLLATE BINARY)))) ORDER BY ((((((vt1.c0)AND(v0.c0)))OR(vt1.c0)))&(TRIM(vt1.c0)))  NULLS FIRST, CAST(((v0.c0) NOT NULL) AS NUMERIC);
SELECT ALL * FROM vt1, vt0 WHERE (CASE CAST(vt1.c0 AS INTEGER)  WHEN ((vt1.c0)AND(vt1.c0)) THEN vt1.c0 COLLATE NOCASE END) ORDER BY (((((vt0.c0)AND(vt1.c0)))OR('|')) IN ()) ASC, ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))OR(((vt0.c0)<(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt1.c0 AS INTEGER)  WHEN ((vt1.c0)AND(vt1.c0)) THEN vt1.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt0.c0)AND(vt1.c0)))OR('|')) IN ()) ASC, ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))OR(((vt0.c0)<(vt0.c0)))));
SELECT ALL * FROM vt1, vt0 WHERE (CASE CAST(vt1.c0 AS INTEGER)  WHEN ((vt1.c0)AND(vt1.c0)) THEN vt1.c0 COLLATE NOCASE END) ORDER BY (((((vt0.c0)AND(vt1.c0)))OR('|')) IN ()) ASC, ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))OR(((vt0.c0)<(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt1.c0 AS INTEGER)  WHEN ((vt1.c0)AND(vt1.c0)) THEN vt1.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt0.c0)AND(vt1.c0)))OR('|')) IN ()) ASC, ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))OR(((vt0.c0)<(vt0.c0)))));
SELECT ALL * FROM vt1, vt0 WHERE (CASE CAST(vt1.c0 AS INTEGER)  WHEN ((vt1.c0)AND(vt1.c0)) THEN vt1.c0 COLLATE NOCASE END) ORDER BY (((((vt0.c0)AND(vt1.c0)))OR('|')) IN ()) ASC, ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))OR(((vt0.c0)<(vt0.c0))));
SELECT ALL COUNT(*) FROM v0, rt1 WHERE ((+ (v0.c4)));
SELECT SUM(count) FROM (SELECT ALL (((+ (v0.c4))) IS TRUE)  as count FROM v0, rt1);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE ((+ (v0.c4)));
SELECT SUM(count) FROM (SELECT ALL (((+ (v0.c4))) IS TRUE)  as count FROM v0, rt1);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE ((+ (v0.c4)));
SELECT * FROM rt1 WHERE ((+ ((((rt1.c0, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c2)) AND ((rt1.c0, rt1.c0, rt1.c1)))))) ORDER BY ((((((rt1.c2) NOT NULL))AND((~ (rt1.c2)))))OR((+ (rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((((rt1.c0, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c2)) AND ((rt1.c0, rt1.c0, rt1.c1)))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c2) NOT NULL))AND((~ (rt1.c2)))))OR((+ (rt1.c1))))  NULLS LAST);
SELECT * FROM rt1 WHERE ((+ ((((rt1.c0, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c2)) AND ((rt1.c0, rt1.c0, rt1.c1)))))) ORDER BY ((((((rt1.c2) NOT NULL))AND((~ (rt1.c2)))))OR((+ (rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((((rt1.c0, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c2)) AND ((rt1.c0, rt1.c0, rt1.c1)))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c2) NOT NULL))AND((~ (rt1.c2)))))OR((+ (rt1.c1))))  NULLS LAST);
SELECT * FROM rt1 WHERE ((+ ((((rt1.c0, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c2)) AND ((rt1.c0, rt1.c0, rt1.c1)))))) ORDER BY ((((((rt1.c2) NOT NULL))AND((~ (rt1.c2)))))OR((+ (rt1.c1))))  NULLS LAST;
SELECT COUNT(*) FROM rt1, vt1, v0 WHERE (((v0.c4) IS TRUE)) ORDER BY CAST(((v0.c2) BETWEEN (rt1.c0) AND (rt1.c1)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((((v0.c4) IS TRUE)) IS TRUE)  as count FROM rt1, vt1, v0 ORDER BY CAST(((v0.c2) BETWEEN (rt1.c0) AND (rt1.c1)) AS TEXT) DESC);
SELECT COUNT(*) FROM rt1, vt1, v0 WHERE (((v0.c4) IS TRUE)) ORDER BY CAST(((v0.c2) BETWEEN (rt1.c0) AND (rt1.c1)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((((v0.c4) IS TRUE)) IS TRUE)  as count FROM rt1, vt1, v0 ORDER BY CAST(((v0.c2) BETWEEN (rt1.c0) AND (rt1.c1)) AS TEXT) DESC);
SELECT COUNT(*) FROM rt1, vt1, v0 WHERE (((v0.c4) IS TRUE)) ORDER BY CAST(((v0.c2) BETWEEN (rt1.c0) AND (rt1.c1)) AS TEXT) DESC;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN CASE WHEN v0.c4 THEN v0.c0 ELSE v0.c4 END THEN (v0.c3 IN ()) ELSE NULLIF(DISTINCT v0.c0, x'') END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN v0.c4 THEN v0.c0 ELSE v0.c4 END THEN (v0.c3 IN ()) ELSE NULLIF(DISTINCT v0.c0, x'') END) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN CASE WHEN v0.c4 THEN v0.c0 ELSE v0.c4 END THEN (v0.c3 IN ()) ELSE NULLIF(DISTINCT v0.c0, x'') END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN v0.c4 THEN v0.c0 ELSE v0.c4 END THEN (v0.c3 IN ()) ELSE NULLIF(DISTINCT v0.c0, x'') END) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN CASE WHEN v0.c4 THEN v0.c0 ELSE v0.c4 END THEN (v0.c3 IN ()) ELSE NULLIF(DISTINCT v0.c0, x'') END);
SELECT * FROM vt1, rt1, v0 WHERE (CAST((v0.c4 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((v0.c4 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt1, rt1, v0);
SELECT * FROM vt1, rt1, v0 WHERE (CAST((v0.c4 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((v0.c4 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt1, rt1, v0);
SELECT * FROM vt1, rt1, v0 WHERE (CAST((v0.c4 IN ()) AS INTEGER));
SELECT ALL COUNT(*) FROM rt1, vt0, vt1 WHERE ((- ((((rt1.c2)) NOT BETWEEN ((0X45173a63)) AND ((rt1.c2))))));
SELECT SUM(count) FROM (SELECT (((- ((((rt1.c2)) NOT BETWEEN ((0x45173a63)) AND ((rt1.c2)))))) IS TRUE)  as count FROM rt1, vt0, vt1);
SELECT ALL COUNT(*) FROM rt1, vt0, vt1 WHERE ((- ((((rt1.c2)) NOT BETWEEN ((0X45173a63)) AND ((rt1.c2))))));
SELECT SUM(count) FROM (SELECT (((- ((((rt1.c2)) NOT BETWEEN ((0x45173a63)) AND ((rt1.c2)))))) IS TRUE)  as count FROM rt1, vt0, vt1);
SELECT ALL COUNT(*) FROM rt1, vt0, vt1 WHERE ((- ((((rt1.c2)) NOT BETWEEN ((0X45173a63)) AND ((rt1.c2))))));
SELECT COUNT(*) FROM vt0, v0, rt1, vt1 WHERE (IFNULL(((v0.c0)AND(v0.c2)), CAST(vt0.c0 AS BLOB))) ORDER BY CAST(CAST(v0.c1 AS TEXT) AS NUMERIC), 'Í•ª2‰§åH' ASC  NULLS FIRST, ((CAST(v0.c2 AS TEXT)) BETWEEN (UNLIKELY(DISTINCT v0.c4)) AND (((vt1.c0)AND(v0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((v0.c0)AND(v0.c2)), CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM vt0, v0, rt1, vt1 ORDER BY CAST(CAST(v0.c1 AS TEXT) AS NUMERIC), 'Í•ª2‰§åH' ASC  NULLS FIRST, ((CAST(v0.c2 AS TEXT)) BETWEEN (UNLIKELY(DISTINCT v0.c4)) AND (((vt1.c0)AND(v0.c1)))));
SELECT COUNT(*) FROM vt0, v0, rt1, vt1 WHERE (IFNULL(((v0.c0)AND(v0.c2)), CAST(vt0.c0 AS BLOB))) ORDER BY CAST(CAST(v0.c1 AS TEXT) AS NUMERIC), 'Í•ª2‰§åH' ASC  NULLS FIRST, ((CAST(v0.c2 AS TEXT)) BETWEEN (UNLIKELY(DISTINCT v0.c4)) AND (((vt1.c0)AND(v0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((v0.c0)AND(v0.c2)), CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM vt0, v0, rt1, vt1 ORDER BY CAST(CAST(v0.c1 AS TEXT) AS NUMERIC), 'Í•ª2‰§åH' ASC  NULLS FIRST, ((CAST(v0.c2 AS TEXT)) BETWEEN (UNLIKELY(DISTINCT v0.c4)) AND (((vt1.c0)AND(v0.c1)))));
SELECT COUNT(*) FROM vt0, v0, rt1, vt1 WHERE (IFNULL(((v0.c0)AND(v0.c2)), CAST(vt0.c0 AS BLOB))) ORDER BY CAST(CAST(v0.c1 AS TEXT) AS NUMERIC), 'Í•ª2‰§åH' ASC  NULLS FIRST, ((CAST(v0.c2 AS TEXT)) BETWEEN (UNLIKELY(DISTINCT v0.c4)) AND (((vt1.c0)AND(v0.c1))));
SELECT * FROM vt1, vt0, rt1, v0 WHERE (((((NULL) BETWEEN (v0.c1) AND (v0.c3))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((NULL) BETWEEN (v0.c1) AND (v0.c3))) NOT NULL)) IS TRUE)  as count FROM vt1, vt0, rt1, v0);
SELECT * FROM vt1, vt0, rt1, v0 WHERE (((((NULL) BETWEEN (v0.c1) AND (v0.c3))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((NULL) BETWEEN (v0.c1) AND (v0.c3))) NOT NULL)) IS TRUE)  as count FROM vt1, vt0, rt1, v0);
SELECT * FROM vt1, vt0, rt1, v0 WHERE (((((NULL) BETWEEN (v0.c1) AND (v0.c3))) NOT NULL));
SELECT COUNT(*) FROM vt0, rt1, v0, vt1 WHERE (((vt1.c0 IN (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 IN (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt1, v0, vt1);
SELECT COUNT(*) FROM vt0, rt1, v0, vt1 WHERE (((vt1.c0 IN (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 IN (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt1, v0, vt1);
SELECT COUNT(*) FROM vt0, rt1, v0, vt1 WHERE (((vt1.c0 IN (vt0.c0)) IN ()));
SELECT COUNT(*) FROM vt1, v0 RIGHT OUTER JOIN rt1 ON ((((rt1.c1) NOT BETWEEN (v0.c0) AND (v0.c3)))!=(((v0.c1)IS(rt1.c0)))) WHERE ((- (v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((- (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, v0 RIGHT OUTER JOIN rt1 ON ((((rt1.c1) NOT BETWEEN (v0.c0) AND (v0.c3)))<>(((v0.c1)IS(rt1.c0)))));
SELECT COUNT(*) FROM vt1, v0 RIGHT OUTER JOIN rt1 ON ((((rt1.c1) NOT BETWEEN (v0.c0) AND (v0.c3)))!=(((v0.c1)IS(rt1.c0)))) WHERE ((- (v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((- (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, v0 RIGHT OUTER JOIN rt1 ON ((((rt1.c1) NOT BETWEEN (v0.c0) AND (v0.c3)))<>(((v0.c1)IS(rt1.c0)))));
SELECT COUNT(*) FROM vt1, v0 RIGHT OUTER JOIN rt1 ON ((((rt1.c1) NOT BETWEEN (v0.c0) AND (v0.c3)))!=(((v0.c1)IS(rt1.c0)))) WHERE ((- (v0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt1, v0, vt1, vt0 WHERE ((NOT (((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c0) IS TRUE)))) IS TRUE)  as count FROM rt1, v0, vt1 NOT INDEXED, vt0);
SELECT ALL COUNT(*) FROM rt1, v0, vt1, vt0 WHERE ((NOT (((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c0) IS TRUE)))) IS TRUE)  as count FROM rt1, v0, vt1 NOT INDEXED, vt0);
SELECT ALL COUNT(*) FROM rt1, v0, vt1, vt0 WHERE ((NOT (((v0.c0) IS TRUE))));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt1 ON (((((NOT ('')))OR(((v0.c3)*(v0.c0)))))OR((~ (vt1.c0)))) RIGHT OUTER JOIN v0 ON CAST((v0.c0 IN (v0.c0)) AS NUMERIC) WHERE (((NULL) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((NULL) IS FALSE)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt1 ON (((((NOT ('')))OR(((v0.c3)*(v0.c0)))))OR((~ (vt1.c0)))) RIGHT OUTER JOIN v0 ON CAST((v0.c0 IN (v0.c0)) AS NUMERIC));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt1 ON (((((NOT ('')))OR(((v0.c3)*(v0.c0)))))OR((~ (vt1.c0)))) RIGHT OUTER JOIN v0 ON CAST((v0.c0 IN (v0.c0)) AS NUMERIC) WHERE (((NULL) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((NULL) IS FALSE)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt1 ON (((((NOT ('')))OR(((v0.c3)*(v0.c0)))))OR((~ (vt1.c0)))) RIGHT OUTER JOIN v0 ON CAST((v0.c0 IN (v0.c0)) AS NUMERIC));
SELECT ALL * FROM v0, vt0 WHERE ((((v0.c1 IN (v0.c1, vt0.c0)))+(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((v0.c1 IN (v0.c1, vt0.c0)))+(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((v0.c1 IN (v0.c1, vt0.c0)))+(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((v0.c1 IN (v0.c1, vt0.c0)))+(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((v0.c1 IN (v0.c1, vt0.c0)))+(vt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM v0, rt1, vt0 WHERE (CAST(((rt1.c2)>=(rt1.c0)) AS INTEGER)) ORDER BY vt0.c0 ASC  NULLS FIRST, ((CAST(rt1.c0 AS INTEGER))<<((~ (v0.c3)))), CAST((v0.c2 IN ()) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2)>=(rt1.c0)) AS INTEGER)) IS TRUE)  as count FROM v0, rt1, vt0 ORDER BY vt0.c0 ASC  NULLS FIRST, ((CAST(rt1.c0 AS INTEGER))<<((~ (v0.c3)))), CAST((v0.c2 IN ()) AS NUMERIC)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt1, vt0 WHERE (CAST(((rt1.c2)>=(rt1.c0)) AS INTEGER)) ORDER BY vt0.c0 ASC  NULLS FIRST, ((CAST(rt1.c0 AS INTEGER))<<((~ (v0.c3)))), CAST((v0.c2 IN ()) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2)>=(rt1.c0)) AS INTEGER)) IS TRUE)  as count FROM v0, rt1, vt0 ORDER BY vt0.c0 ASC  NULLS FIRST, ((CAST(rt1.c0 AS INTEGER))<<((~ (v0.c3)))), CAST((v0.c2 IN ()) AS NUMERIC)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt1, vt0 WHERE (CAST(((rt1.c2)>=(rt1.c0)) AS INTEGER)) ORDER BY vt0.c0 ASC  NULLS FIRST, ((CAST(rt1.c0 AS INTEGER))<<((~ (v0.c3)))), CAST((v0.c2 IN ()) AS NUMERIC)  NULLS LAST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((((((vt1.c0) NOT BETWEEN (rt1.c2) AND (x'7555')))OR(CAST(vt1.c0 AS INTEGER))))AND(vt1.c0 COLLATE NOCASE)) INNER JOIN rt1 ON ((LIKELY(rt1.c0)) IS TRUE) WHERE (INSTR(rt1.c0 COLLATE RTRIM, (((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c1))))) ORDER BY ((CASE WHEN rt1.c1 THEN vt1.c0 END)>=(0.44079728508564364 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((INSTR(rt1.c0 COLLATE RTRIM, (((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c1))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((((((vt1.c0) NOT BETWEEN (rt1.c2) AND (x'7555')))OR(CAST(vt1.c0 AS INTEGER))))AND(vt1.c0 COLLATE NOCASE)) INNER JOIN rt1 ON ((LIKELY(rt1.c0)) IS TRUE) ORDER BY ((CASE WHEN rt1.c1 THEN vt1.c0 END)>=(0.44079728508564364 COLLATE BINARY)));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((((((vt1.c0) NOT BETWEEN (rt1.c2) AND (x'7555')))OR(CAST(vt1.c0 AS INTEGER))))AND(vt1.c0 COLLATE NOCASE)) INNER JOIN rt1 ON ((LIKELY(rt1.c0)) IS TRUE) WHERE (INSTR(rt1.c0 COLLATE RTRIM, (((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c1))))) ORDER BY ((CASE WHEN rt1.c1 THEN vt1.c0 END)>=(0.44079728508564364 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((INSTR(rt1.c0 COLLATE RTRIM, (((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c1))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((((((vt1.c0) NOT BETWEEN (rt1.c2) AND (x'7555')))OR(CAST(vt1.c0 AS INTEGER))))AND(vt1.c0 COLLATE NOCASE)) INNER JOIN rt1 ON ((LIKELY(rt1.c0)) IS TRUE) ORDER BY ((CASE WHEN rt1.c1 THEN vt1.c0 END)>=(0.44079728508564364 COLLATE BINARY)));
SELECT * FROM v0 WHERE (((CAST(v0.c4 AS REAL))>=(((v0.c4)>>(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c4 AS REAL))>=(((v0.c4)>>(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((CAST(v0.c4 AS REAL))>=(((v0.c4)>>(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c4 AS REAL))>=(((v0.c4)>>(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((CAST(v0.c4 AS REAL))>=(((v0.c4)>>(v0.c0)))));
SELECT ALL * FROM vt0, vt1 WHERE ((NOT ((+ (vt1.c0))))) ORDER BY CASE WHEN CAST(vt0.c0 AS REAL) THEN vt1.c0 WHEN ((vt0.c0) NOTNULL) THEN IFNULL(vt0.c0, vt1.c0) WHEN CAST(vt1.c0 AS BLOB) THEN (((vt0.c0))>((vt1.c0))) END ASC;
SELECT SUM(count) FROM (SELECT (((NOT ((+ (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN CAST(vt0.c0 AS REAL) THEN vt1.c0 WHEN ((vt0.c0) NOTNULL) THEN IFNULL(vt0.c0, vt1.c0) WHEN CAST(vt1.c0 AS BLOB) THEN (((vt0.c0))>((vt1.c0))) END ASC);
SELECT ALL * FROM vt0, vt1 WHERE ((NOT ((+ (vt1.c0))))) ORDER BY CASE WHEN CAST(vt0.c0 AS REAL) THEN vt1.c0 WHEN ((vt0.c0) NOTNULL) THEN IFNULL(vt0.c0, vt1.c0) WHEN CAST(vt1.c0 AS BLOB) THEN (((vt0.c0))>((vt1.c0))) END ASC;
SELECT SUM(count) FROM (SELECT (((NOT ((+ (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN CAST(vt0.c0 AS REAL) THEN vt1.c0 WHEN ((vt0.c0) NOTNULL) THEN IFNULL(vt0.c0, vt1.c0) WHEN CAST(vt1.c0 AS BLOB) THEN (((vt0.c0))>((vt1.c0))) END ASC);
SELECT ALL * FROM vt0, vt1 WHERE ((NOT ((+ (vt1.c0))))) ORDER BY CASE WHEN CAST(vt0.c0 AS REAL) THEN vt1.c0 WHEN ((vt0.c0) NOTNULL) THEN IFNULL(vt0.c0, vt1.c0) WHEN CAST(vt1.c0 AS BLOB) THEN (((vt0.c0))>((vt1.c0))) END ASC;
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON rt1.c2 WHERE (CASE WHEN ((((rt1.c1)AND(rt1.c2)))AND('0.8452106533673392')) THEN (((rt1.c2, vt1.c0, '1t+Êπ§x3?'))<((rt1.c1, rt1.c2, rt1.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt1.c1)AND(rt1.c2)))AND('0.8452106533673392')) THEN (((rt1.c2, vt1.c0, '1t+Êπ§x3?'))<((rt1.c1, rt1.c2, rt1.c0))) END) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON rt1.c2);
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON rt1.c2 WHERE (CASE WHEN ((((rt1.c1)AND(rt1.c2)))AND('0.8452106533673392')) THEN (((rt1.c2, vt1.c0, '1t+Êπ§x3?'))<((rt1.c1, rt1.c2, rt1.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt1.c1)AND(rt1.c2)))AND('0.8452106533673392')) THEN (((rt1.c2, vt1.c0, '1t+Êπ§x3?'))<((rt1.c1, rt1.c2, rt1.c0))) END) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON rt1.c2);
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON rt1.c2 WHERE (CASE WHEN ((((rt1.c1)AND(rt1.c2)))AND('0.8452106533673392')) THEN (((rt1.c2, vt1.c0, '1t+Êπ§x3?'))<((rt1.c1, rt1.c2, rt1.c0))) END);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c4) NOTNULL)) ORDER BY json(CASE v0.c2  WHEN v0.c4 THEN v0.c1 ELSE v0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c4) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY json(CASE v0.c2  WHEN v0.c4 THEN v0.c1 ELSE v0.c0 END));
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c4) NOTNULL)) ORDER BY json(CASE v0.c2  WHEN v0.c4 THEN v0.c1 ELSE v0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c4) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY json(CASE v0.c2  WHEN v0.c4 THEN v0.c1 ELSE v0.c0 END));
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c4) NOTNULL)) ORDER BY json(CASE v0.c2  WHEN v0.c4 THEN v0.c1 ELSE v0.c0 END);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN v0 ON ((CASE WHEN v0.c3 THEN rt1.c2 ELSE v0.c3 END) NOT NULL) RIGHT OUTER JOIN vt1 ON CASE WHEN CASE WHEN v0.c1 THEN v0.c3 ELSE NULL END THEN CASE WHEN rt1.c2 THEN v0.c1 END ELSE ((vt1.c0) NOT NULL) END RIGHT OUTER JOIN vt0 ON (((v0.c4 COLLATE BINARY))>((LIKELY(vt0.c0)))) WHERE ((((((((v0.c2, v0.c4, v0.c3))>=((vt1.c0, '1079153237', v0.c4))))OR(((((rt1.c1)AND(v0.c2)))OR(v0.c0)))))OR(RTRIM(0.48358635049513654)))) ORDER BY ((CAST(rt1.c2 AS REAL)) ISNULL), '„πª%jB<o\f|'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c2, v0.c4, v0.c3))>=((vt1.c0, '1079153237', v0.c4))))OR(((((rt1.c1)AND(v0.c2)))OR(v0.c0)))))OR(RTRIM(0.48358635049513654)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON ((CASE WHEN v0.c3 THEN rt1.c2 ELSE v0.c3 END) NOT NULL) RIGHT OUTER JOIN vt1 ON CASE WHEN CASE WHEN v0.c1 THEN v0.c3 ELSE NULL END THEN CASE WHEN rt1.c2 THEN v0.c1 END ELSE ((vt1.c0) NOT NULL) END RIGHT OUTER JOIN vt0 ON (((v0.c4 COLLATE BINARY))>((LIKELY(vt0.c0)))) ORDER BY ((CAST(rt1.c2 AS REAL)) ISNULL), '„πª%jB<o\f|'  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN v0 ON ((CASE WHEN v0.c3 THEN rt1.c2 ELSE v0.c3 END) NOT NULL) RIGHT OUTER JOIN vt1 ON CASE WHEN CASE WHEN v0.c1 THEN v0.c3 ELSE NULL END THEN CASE WHEN rt1.c2 THEN v0.c1 END ELSE ((vt1.c0) NOT NULL) END RIGHT OUTER JOIN vt0 ON (((v0.c4 COLLATE BINARY))>((LIKELY(vt0.c0)))) WHERE ((((((((v0.c2, v0.c4, v0.c3))>=((vt1.c0, '1079153237', v0.c4))))OR(((((rt1.c1)AND(v0.c2)))OR(v0.c0)))))OR(RTRIM(0.48358635049513654)))) ORDER BY ((CAST(rt1.c2 AS REAL)) ISNULL), '„πª%jB<o\f|'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c2, v0.c4, v0.c3))>=((vt1.c0, '1079153237', v0.c4))))OR(((((rt1.c1)AND(v0.c2)))OR(v0.c0)))))OR(RTRIM(0.48358635049513654)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON ((CASE WHEN v0.c3 THEN rt1.c2 ELSE v0.c3 END) NOT NULL) RIGHT OUTER JOIN vt1 ON CASE WHEN CASE WHEN v0.c1 THEN v0.c3 ELSE NULL END THEN CASE WHEN rt1.c2 THEN v0.c1 END ELSE ((vt1.c0) NOT NULL) END RIGHT OUTER JOIN vt0 ON (((v0.c4 COLLATE BINARY))>((LIKELY(vt0.c0)))) ORDER BY ((CAST(rt1.c2 AS REAL)) ISNULL), '„πª%jB<o\f|'  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN v0 ON ((CASE WHEN v0.c3 THEN rt1.c2 ELSE v0.c3 END) NOT NULL) RIGHT OUTER JOIN vt1 ON CASE WHEN CASE WHEN v0.c1 THEN v0.c3 ELSE NULL END THEN CASE WHEN rt1.c2 THEN v0.c1 END ELSE ((vt1.c0) NOT NULL) END RIGHT OUTER JOIN vt0 ON (((v0.c4 COLLATE BINARY))>((LIKELY(vt0.c0)))) WHERE ((((((((v0.c2, v0.c4, v0.c3))>=((vt1.c0, '1079153237', v0.c4))))OR(((((rt1.c1)AND(v0.c2)))OR(v0.c0)))))OR(RTRIM(0.48358635049513654)))) ORDER BY ((CAST(rt1.c2 AS REAL)) ISNULL), '„πª%jB<o\f|'  NULLS FIRST;
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c0))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (CAST(vt1.c0 AS REAL))) WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c0))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (CAST(vt1.c0 AS REAL))));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c0))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (CAST(vt1.c0 AS REAL))) WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c0))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (CAST(vt1.c0 AS REAL))));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c0))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (CAST(vt1.c0 AS REAL))) WHERE ((vt0.c0 IN ()));
SELECT * FROM rt1, vt0 LEFT OUTER JOIN vt1 ON ((((0.11665360582756867)>>(rt1.c0)))LIKE(CAST(0.26933133206150206 AS INTEGER))) INNER JOIN v0 ON (((vt0.c0)) BETWEEN (('lhg	jÎê¨')) AND ((CAST(rt1.c0 AS BLOB)))) WHERE (((v0.c3)>=(((v0.c4) NOT NULL)))) ORDER BY ((vt0.c0)-(((rt1.c2)OR(v0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ((((v0.c3)>=(((v0.c4) NOT NULL)))) IS TRUE)  as count FROM rt1, vt0 LEFT OUTER JOIN vt1 ON ((((0.11665360582756867)>>(rt1.c0)))LIKE(CAST(0.26933133206150206 AS INTEGER))) INNER JOIN v0 ON (((vt0.c0)) BETWEEN (('lhg	jÎê¨')) AND ((CAST(rt1.c0 AS BLOB)))) ORDER BY ((vt0.c0)-(((rt1.c2)OR(v0.c3)))) DESC);
SELECT * FROM rt1, vt0 LEFT OUTER JOIN vt1 ON ((((0.11665360582756867)>>(rt1.c0)))LIKE(CAST(0.26933133206150206 AS INTEGER))) INNER JOIN v0 ON (((vt0.c0)) BETWEEN (('lhg	jÎê¨')) AND ((CAST(rt1.c0 AS BLOB)))) WHERE (((v0.c3)>=(((v0.c4) NOT NULL)))) ORDER BY ((vt0.c0)-(((rt1.c2)OR(v0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ((((v0.c3)>=(((v0.c4) NOT NULL)))) IS TRUE)  as count FROM rt1, vt0 LEFT OUTER JOIN vt1 ON ((((0.11665360582756867)>>(rt1.c0)))LIKE(CAST(0.26933133206150206 AS INTEGER))) INNER JOIN v0 ON (((vt0.c0)) BETWEEN (('lhg	jÎê¨')) AND ((CAST(rt1.c0 AS BLOB)))) ORDER BY ((vt0.c0)-(((rt1.c2)OR(v0.c3)))) DESC);
SELECT * FROM rt1, vt0 LEFT OUTER JOIN vt1 ON ((((0.11665360582756867)>>(rt1.c0)))LIKE(CAST(0.26933133206150206 AS INTEGER))) INNER JOIN v0 ON (((vt0.c0)) BETWEEN (('lhg	jÎê¨')) AND ((CAST(rt1.c0 AS BLOB)))) WHERE (((v0.c3)>=(((v0.c4) NOT NULL)))) ORDER BY ((vt0.c0)-(((rt1.c2)OR(v0.c3)))) DESC;
SELECT ALL * FROM rt1 WHERE ((((((rt1.c1) IS TRUE)))>=((rt1.c2 COLLATE BINARY)))) ORDER BY CASE WHEN ((rt1.c2)&(rt1.c1)) THEN (rt1.c0 IN (rt1.c1)) WHEN ((rt1.c1) ISNULL) THEN (- (rt1.c0)) WHEN CASE WHEN rt1.c0 THEN '' ELSE rt1.c1 END THEN ((rt1.c2)IS(rt1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1) IS TRUE)))>=((rt1.c2 COLLATE BINARY)))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN ((rt1.c2)&(rt1.c1)) THEN (rt1.c0 IN (rt1.c1)) WHEN ((rt1.c1) ISNULL) THEN (- (rt1.c0)) WHEN CASE WHEN rt1.c0 THEN '' ELSE rt1.c1 END THEN ((rt1.c2)IS(rt1.c0)) END  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c1) IS TRUE)))>=((rt1.c2 COLLATE BINARY)))) ORDER BY CASE WHEN ((rt1.c2)&(rt1.c1)) THEN (rt1.c0 IN (rt1.c1)) WHEN ((rt1.c1) ISNULL) THEN (- (rt1.c0)) WHEN CASE WHEN rt1.c0 THEN '' ELSE rt1.c1 END THEN ((rt1.c2)IS(rt1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1) IS TRUE)))>=((rt1.c2 COLLATE BINARY)))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN ((rt1.c2)&(rt1.c1)) THEN (rt1.c0 IN (rt1.c1)) WHEN ((rt1.c1) ISNULL) THEN (- (rt1.c0)) WHEN CASE WHEN rt1.c0 THEN '' ELSE rt1.c1 END THEN ((rt1.c2)IS(rt1.c0)) END  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c1) IS TRUE)))>=((rt1.c2 COLLATE BINARY)))) ORDER BY CASE WHEN ((rt1.c2)&(rt1.c1)) THEN (rt1.c0 IN (rt1.c1)) WHEN ((rt1.c1) ISNULL) THEN (- (rt1.c0)) WHEN CASE WHEN rt1.c0 THEN '' ELSE rt1.c1 END THEN ((rt1.c2)IS(rt1.c0)) END  NULLS LAST;
SELECT COUNT(*) FROM vt1, v0 WHERE (CAST((v0.c1 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((v0.c1 IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (CAST((v0.c1 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((v0.c1 IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (CAST((v0.c1 IN ()) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0, v0 INNER JOIN rt1 ON CAST(((v0.c3) BETWEEN (rt1.c2) AND (v0.c2)) AS INTEGER) WHERE (((((((((((v0.c3)AND(v0.c2)))OR(vt0.c0)))OR(v0.c4)))AND(v0.c0))) BETWEEN (((x'62dc') NOT BETWEEN (v0.c2) AND (v0.c3))) AND (((v0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c3)AND(v0.c2)))OR(vt0.c0)))OR(v0.c4)))AND(v0.c0))) BETWEEN (((x'62dc') NOT BETWEEN (v0.c2) AND (v0.c3))) AND (((v0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt1 ON CAST(((v0.c3) BETWEEN (rt1.c2) AND (v0.c2)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0, v0 INNER JOIN rt1 ON CAST(((v0.c3) BETWEEN (rt1.c2) AND (v0.c2)) AS INTEGER) WHERE (((((((((((v0.c3)AND(v0.c2)))OR(vt0.c0)))OR(v0.c4)))AND(v0.c0))) BETWEEN (((x'62dc') NOT BETWEEN (v0.c2) AND (v0.c3))) AND (((v0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c3)AND(v0.c2)))OR(vt0.c0)))OR(v0.c4)))AND(v0.c0))) BETWEEN (((x'62dc') NOT BETWEEN (v0.c2) AND (v0.c3))) AND (((v0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt1 ON CAST(((v0.c3) BETWEEN (rt1.c2) AND (v0.c2)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0, v0 INNER JOIN rt1 ON CAST(((v0.c3) BETWEEN (rt1.c2) AND (v0.c2)) AS INTEGER) WHERE (((((((((((v0.c3)AND(v0.c2)))OR(vt0.c0)))OR(v0.c4)))AND(v0.c0))) BETWEEN (((x'62dc') NOT BETWEEN (v0.c2) AND (v0.c3))) AND (((v0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON ((((CAST(vt0.c0 AS TEXT))AND((NOT (v0.c1)))))OR(((v0.c2)AND(rt1.c1)))) FULL OUTER JOIN v0 ON v0.c2 WHERE (LOWER((rt1.c0 IN ()))) ORDER BY (v0.c2 COLLATE NOCASE IN ((v0.c3 IN ()), ((rt1.c0) IS TRUE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LOWER((rt1.c0 IN ()))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON ((((CAST(vt0.c0 AS TEXT))AND((NOT (v0.c1)))))OR(((v0.c2)AND(rt1.c1)))) FULL OUTER JOIN v0 ON v0.c2 ORDER BY (v0.c2 COLLATE NOCASE IN ((v0.c3 IN ()), ((rt1.c0) IS TRUE))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON ((((CAST(vt0.c0 AS TEXT))AND((NOT (v0.c1)))))OR(((v0.c2)AND(rt1.c1)))) FULL OUTER JOIN v0 ON v0.c2 WHERE (LOWER((rt1.c0 IN ()))) ORDER BY (v0.c2 COLLATE NOCASE IN ((v0.c3 IN ()), ((rt1.c0) IS TRUE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LOWER((rt1.c0 IN ()))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON ((((CAST(vt0.c0 AS TEXT))AND((NOT (v0.c1)))))OR(((v0.c2)AND(rt1.c1)))) FULL OUTER JOIN v0 ON v0.c2 ORDER BY (v0.c2 COLLATE NOCASE IN ((v0.c3 IN ()), ((rt1.c0) IS TRUE))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt1, v0 WHERE (CASE CAST(vt1.c0 AS TEXT)  WHEN ((rt1.c0)<=(rt1.c1)) THEN CASE v0.c4  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END ELSE ((v0.c2) BETWEEN (v0.c3) AND (v0.c3)) END) ORDER BY ((((CASE vt1.c0  WHEN NULL THEN rt1.c0 WHEN rt1.c1 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 ELSE 0x19d36326 END)OR(((rt1.c0) BETWEEN (rt1.c2) AND (v0.c2)))))AND(LIKELIHOOD(v0.c2, 0.6384218766904146))) ASC, ((((v0.c3)GLOB(v0.c2))) BETWEEN (((rt1.c2)-(rt1.c0))) AND ((+ (v0.c1))))  NULLS FIRST, (((NULL)) NOT BETWEEN (((~ (v0.c1)))) AND ((((v0.c3)&('1390127483')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt1.c0 AS TEXT)  WHEN ((rt1.c0)<=(rt1.c1)) THEN CASE v0.c4  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END ELSE ((v0.c2) BETWEEN (v0.c3) AND (v0.c3)) END) IS TRUE)  as count FROM vt1, rt1, v0 ORDER BY ((((CASE vt1.c0  WHEN NULL THEN rt1.c0 WHEN rt1.c1 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 ELSE 0X19d36326 END)OR(((rt1.c0) BETWEEN (rt1.c2) AND (v0.c2)))))AND(LIKELIHOOD(v0.c2, 0.6384218766904146))) ASC, ((((v0.c3)GLOB(v0.c2))) BETWEEN (((rt1.c2)-(rt1.c0))) AND ((+ (v0.c1))))  NULLS FIRST, (((NULL)) NOT BETWEEN (((~ (v0.c1)))) AND ((((v0.c3)&('1390127483')))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt1, v0 WHERE (CASE CAST(vt1.c0 AS TEXT)  WHEN ((rt1.c0)<=(rt1.c1)) THEN CASE v0.c4  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END ELSE ((v0.c2) BETWEEN (v0.c3) AND (v0.c3)) END) ORDER BY ((((CASE vt1.c0  WHEN NULL THEN rt1.c0 WHEN rt1.c1 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 ELSE 0x19d36326 END)OR(((rt1.c0) BETWEEN (rt1.c2) AND (v0.c2)))))AND(LIKELIHOOD(v0.c2, 0.6384218766904146))) ASC, ((((v0.c3)GLOB(v0.c2))) BETWEEN (((rt1.c2)-(rt1.c0))) AND ((+ (v0.c1))))  NULLS FIRST, (((NULL)) NOT BETWEEN (((~ (v0.c1)))) AND ((((v0.c3)&('1390127483')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt1.c0 AS TEXT)  WHEN ((rt1.c0)<=(rt1.c1)) THEN CASE v0.c4  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END ELSE ((v0.c2) BETWEEN (v0.c3) AND (v0.c3)) END) IS TRUE)  as count FROM vt1, rt1, v0 ORDER BY ((((CASE vt1.c0  WHEN NULL THEN rt1.c0 WHEN rt1.c1 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 ELSE 0X19d36326 END)OR(((rt1.c0) BETWEEN (rt1.c2) AND (v0.c2)))))AND(LIKELIHOOD(v0.c2, 0.6384218766904146))) ASC, ((((v0.c3)GLOB(v0.c2))) BETWEEN (((rt1.c2)-(rt1.c0))) AND ((+ (v0.c1))))  NULLS FIRST, (((NULL)) NOT BETWEEN (((~ (v0.c1)))) AND ((((v0.c3)&('1390127483')))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt1, v0 WHERE (CASE CAST(vt1.c0 AS TEXT)  WHEN ((rt1.c0)<=(rt1.c1)) THEN CASE v0.c4  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END ELSE ((v0.c2) BETWEEN (v0.c3) AND (v0.c3)) END) ORDER BY ((((CASE vt1.c0  WHEN NULL THEN rt1.c0 WHEN rt1.c1 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 ELSE 0x19d36326 END)OR(((rt1.c0) BETWEEN (rt1.c2) AND (v0.c2)))))AND(LIKELIHOOD(v0.c2, 0.6384218766904146))) ASC, ((((v0.c3)GLOB(v0.c2))) BETWEEN (((rt1.c2)-(rt1.c0))) AND ((+ (v0.c1))))  NULLS FIRST, (((NULL)) NOT BETWEEN (((~ (v0.c1)))) AND ((((v0.c3)&('1390127483')))))  NULLS LAST;
SELECT ALL * FROM vt1 CROSS JOIN rt1 ON ((((0.3166230839771995) BETWEEN (rt1.c2) AND (rt1.c1)))*(((vt1.c0)/(rt1.c2)))) INNER JOIN v0 ON json_array_length(vt0.c0 COLLATE BINARY, highlight(v0.c4, v0.c0, v0.c3, v0.c4)) INNER JOIN vt0 ON (NOT (((((((((((((((((vt0.c0)AND(v0.c1)))AND(vt1.c0)))OR(rt1.c2)))OR(rt1.c0)))OR(rt1.c1)))AND(v0.c1)))AND(v0.c1)))OR(v0.c0)))) WHERE ((((v0.c4)) BETWEEN (((((v0.c4)) BETWEEN ((v0.c0)) AND ((v0.c1))))) AND ((((((v0.c4)AND(v0.c1)))AND(v0.c0)))))) ORDER BY (+ (CAST(NULL AS INTEGER)));
SELECT SUM(count) FROM (SELECT (((((v0.c4)) BETWEEN (((((v0.c4)) BETWEEN ((v0.c0)) AND ((v0.c1))))) AND ((((((v0.c4)AND(v0.c1)))AND(v0.c0)))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt1 ON ((((0.3166230839771995) BETWEEN (rt1.c2) AND (rt1.c1)))*(((vt1.c0)/(rt1.c2)))) INNER JOIN v0 ON json_array_length(vt0.c0 COLLATE BINARY, highlight(v0.c4, v0.c0, v0.c3, v0.c4)) INNER JOIN vt0 ON (NOT (((((((((((((((((vt0.c0)AND(v0.c1)))AND(vt1.c0)))OR(rt1.c2)))OR(rt1.c0)))OR(rt1.c1)))AND(v0.c1)))AND(v0.c1)))OR(v0.c0)))) ORDER BY (+ (CAST(NULL AS INTEGER))));
SELECT ALL * FROM vt1 CROSS JOIN rt1 ON ((((0.3166230839771995) BETWEEN (rt1.c2) AND (rt1.c1)))*(((vt1.c0)/(rt1.c2)))) INNER JOIN v0 ON json_array_length(vt0.c0 COLLATE BINARY, highlight(v0.c4, v0.c0, v0.c3, v0.c4)) INNER JOIN vt0 ON (NOT (((((((((((((((((vt0.c0)AND(v0.c1)))AND(vt1.c0)))OR(rt1.c2)))OR(rt1.c0)))OR(rt1.c1)))AND(v0.c1)))AND(v0.c1)))OR(v0.c0)))) WHERE ((((v0.c4)) BETWEEN (((((v0.c4)) BETWEEN ((v0.c0)) AND ((v0.c1))))) AND ((((((v0.c4)AND(v0.c1)))AND(v0.c0)))))) ORDER BY (+ (CAST(NULL AS INTEGER)));
SELECT SUM(count) FROM (SELECT (((((v0.c4)) BETWEEN (((((v0.c4)) BETWEEN ((v0.c0)) AND ((v0.c1))))) AND ((((((v0.c4)AND(v0.c1)))AND(v0.c0)))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt1 ON ((((0.3166230839771995) BETWEEN (rt1.c2) AND (rt1.c1)))*(((vt1.c0)/(rt1.c2)))) INNER JOIN v0 ON json_array_length(vt0.c0 COLLATE BINARY, highlight(v0.c4, v0.c0, v0.c3, v0.c4)) INNER JOIN vt0 ON (NOT (((((((((((((((((vt0.c0)AND(v0.c1)))AND(vt1.c0)))OR(rt1.c2)))OR(rt1.c0)))OR(rt1.c1)))AND(v0.c1)))AND(v0.c1)))OR(v0.c0)))) ORDER BY (+ (CAST(NULL AS INTEGER))));
SELECT COUNT(*) FROM vt0, vt1, v0 WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN (((v0.c4)|(0.5756955854473226))) AND (((v0.c2)>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) BETWEEN (((v0.c4)|(0.5756955854473226))) AND (((v0.c2)>(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT COUNT(*) FROM vt0, vt1, v0 WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN (((v0.c4)|(0.5756955854473226))) AND (((v0.c2)>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) BETWEEN (((v0.c4)|(0.5756955854473226))) AND (((v0.c2)>(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT COUNT(*) FROM vt0, vt1, v0 WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN (((v0.c4)|(0.5756955854473226))) AND (((v0.c2)>(vt1.c0)))));
SELECT ALL * FROM v0 WHERE (CASE WHEN (('xw')!=(v0.c0)) THEN v0.c3 WHEN CAST(v0.c0 AS BLOB) THEN (0.05956418376448536 IN ()) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c2 END THEN CASE WHEN v0.c4 THEN v0.c2 ELSE v0.c2 END ELSE ((((v0.c1)AND(v0.c0)))OR(0X669eeae9)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (('xw')!=(v0.c0)) THEN v0.c3 WHEN CAST(v0.c0 AS BLOB) THEN (0.05956418376448536 IN ()) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c2 END THEN CASE WHEN v0.c4 THEN v0.c2 ELSE v0.c2 END ELSE ((((v0.c1)AND(v0.c0)))OR(0X669eeae9)) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN (('xw')!=(v0.c0)) THEN v0.c3 WHEN CAST(v0.c0 AS BLOB) THEN (0.05956418376448536 IN ()) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c2 END THEN CASE WHEN v0.c4 THEN v0.c2 ELSE v0.c2 END ELSE ((((v0.c1)AND(v0.c0)))OR(0X669eeae9)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (('xw')!=(v0.c0)) THEN v0.c3 WHEN CAST(v0.c0 AS BLOB) THEN (0.05956418376448536 IN ()) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c2 END THEN CASE WHEN v0.c4 THEN v0.c2 ELSE v0.c2 END ELSE ((((v0.c1)AND(v0.c0)))OR(0X669eeae9)) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN (('xw')!=(v0.c0)) THEN v0.c3 WHEN CAST(v0.c0 AS BLOB) THEN (0.05956418376448536 IN ()) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c2 END THEN CASE WHEN v0.c4 THEN v0.c2 ELSE v0.c2 END ELSE ((((v0.c1)AND(v0.c0)))OR(0X669eeae9)) END);
SELECT * FROM vt1, rt1 CROSS JOIN vt0 ON rt1.c2 WHERE ('{}+');
SELECT SUM(count) FROM (SELECT (('{}+') IS TRUE)  as count FROM vt1, rt1 CROSS JOIN vt0 ON rt1.c2);
SELECT * FROM vt1, rt1 CROSS JOIN vt0 ON rt1.c2 WHERE ('{}+');
SELECT SUM(count) FROM (SELECT (('{}+') IS TRUE)  as count FROM vt1, rt1 CROSS JOIN vt0 ON rt1.c2);
SELECT * FROM vt1, rt1 CROSS JOIN vt0 ON rt1.c2 WHERE ('{}+');
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE (((CASE WHEN v0.c3 THEN v0.c4 ELSE vt0.c0 END)=(((v0.c4) BETWEEN (v0.c3) AND (vt0.c0))))) ORDER BY CAST((v0.c2 IN (NULL, v0.c2)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c3 THEN v0.c4 ELSE vt0.c0 END)==(((v0.c4) BETWEEN (v0.c3) AND (vt0.c0))))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY CAST((v0.c2 IN (NULL, v0.c2)) AS TEXT)  NULLS LAST);
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE (((CASE WHEN v0.c3 THEN v0.c4 ELSE vt0.c0 END)=(((v0.c4) BETWEEN (v0.c3) AND (vt0.c0))))) ORDER BY CAST((v0.c2 IN (NULL, v0.c2)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c3 THEN v0.c4 ELSE vt0.c0 END)==(((v0.c4) BETWEEN (v0.c3) AND (vt0.c0))))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY CAST((v0.c2 IN (NULL, v0.c2)) AS TEXT)  NULLS LAST);
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE (((CASE WHEN v0.c3 THEN v0.c4 ELSE vt0.c0 END)=(((v0.c4) BETWEEN (v0.c3) AND (vt0.c0))))) ORDER BY CAST((v0.c2 IN (NULL, v0.c2)) AS TEXT)  NULLS LAST;
SELECT ALL * FROM vt1, vt0 NOT INDEXED, v0, rt1 WHERE (JULIANDAY(x'', TYPEOF('0.580371054359907'), CASE WHEN v0.c2 THEN vt0.c0 ELSE rt1.c2 END)) ORDER BY NULL DESC, ((v0.c0) NOTNULL) COLLATE BINARY ASC, ((rt1.c0) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY(x'', TYPEOF('0.580371054359907'), CASE WHEN v0.c2 THEN vt0.c0 ELSE rt1.c2 END)) IS TRUE)  as count FROM vt1, vt0, v0, rt1 ORDER BY NULL DESC, ((v0.c0) NOTNULL) COLLATE BINARY ASC, ((rt1.c0) NOTNULL) ASC);
SELECT ALL * FROM vt1, vt0 NOT INDEXED, v0, rt1 WHERE (JULIANDAY(x'', TYPEOF('0.580371054359907'), CASE WHEN v0.c2 THEN vt0.c0 ELSE rt1.c2 END)) ORDER BY NULL DESC, ((v0.c0) NOTNULL) COLLATE BINARY ASC, ((rt1.c0) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY(x'', TYPEOF('0.580371054359907'), CASE WHEN v0.c2 THEN vt0.c0 ELSE rt1.c2 END)) IS TRUE)  as count FROM vt1, vt0, v0, rt1 ORDER BY NULL DESC, ((v0.c0) NOTNULL) COLLATE BINARY ASC, ((rt1.c0) NOTNULL) ASC);
SELECT ALL * FROM vt1, vt0 NOT INDEXED, v0, rt1 WHERE (JULIANDAY(x'', TYPEOF('0.580371054359907'), CASE WHEN v0.c2 THEN vt0.c0 ELSE rt1.c2 END)) ORDER BY NULL DESC, ((v0.c0) NOTNULL) COLLATE BINARY ASC, ((rt1.c0) NOTNULL) ASC;
SELECT ALL * FROM rt1 WHERE (((((0.7555089879879741) BETWEEN (rt1.c1) AND (x'')))|(((((rt1.c0)OR(rt1.c0)))AND(rt1.c1))))) ORDER BY (rt1.c0 IN (NULL, rt1.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((0.7555089879879741) BETWEEN (rt1.c1) AND (x'')))|(((((rt1.c0)OR(rt1.c0)))AND(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY (rt1.c0 IN (NULL, rt1.c0)) COLLATE NOCASE);
SELECT ALL * FROM rt1 WHERE (((((0.7555089879879741) BETWEEN (rt1.c1) AND (x'')))|(((((rt1.c0)OR(rt1.c0)))AND(rt1.c1))))) ORDER BY (rt1.c0 IN (NULL, rt1.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((0.7555089879879741) BETWEEN (rt1.c1) AND (x'')))|(((((rt1.c0)OR(rt1.c0)))AND(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY (rt1.c0 IN (NULL, rt1.c0)) COLLATE NOCASE);
SELECT ALL * FROM rt1 WHERE (((((0.7555089879879741) BETWEEN (rt1.c1) AND (x'')))|(((((rt1.c0)OR(rt1.c0)))AND(rt1.c1))))) ORDER BY (rt1.c0 IN (NULL, rt1.c0)) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((v0.c4) IS FALSE) IN ())) ORDER BY CAST(v0.c4 AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((((v0.c4) IS FALSE) IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(v0.c4 AS BLOB));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((v0.c4) IS FALSE) IN ())) ORDER BY CAST(v0.c4 AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((((v0.c4) IS FALSE) IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(v0.c4 AS BLOB));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((v0.c4) IS FALSE) IN ())) ORDER BY CAST(v0.c4 AS BLOB);
SELECT COUNT(*) FROM rt1, vt0, vt1 WHERE (CAST(((((((((rt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND('2092344805')))OR(rt1.c1)) AS INTEGER)) ORDER BY ((((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c1)))OR(rt1.c1)))OR(0X5d856dd7)))>=(((rt1.c1) BETWEEN ('') AND (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND('2092344805')))OR(rt1.c1)) AS INTEGER)) IS TRUE)  as count FROM rt1, vt0, vt1 ORDER BY ((((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c1)))OR(rt1.c1)))OR(0x5d856dd7)))>=(((rt1.c1) BETWEEN ('') AND (vt1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0, vt1 WHERE (CAST(((((((((rt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND('2092344805')))OR(rt1.c1)) AS INTEGER)) ORDER BY ((((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c1)))OR(rt1.c1)))OR(0X5d856dd7)))>=(((rt1.c1) BETWEEN ('') AND (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND('2092344805')))OR(rt1.c1)) AS INTEGER)) IS TRUE)  as count FROM rt1, vt0, vt1 ORDER BY ((((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c1)))OR(rt1.c1)))OR(0x5d856dd7)))>=(((rt1.c1) BETWEEN ('') AND (vt1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0, vt1 WHERE (CAST(((((((((rt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND('2092344805')))OR(rt1.c1)) AS INTEGER)) ORDER BY ((((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c1)))OR(rt1.c1)))OR(0X5d856dd7)))>=(((rt1.c1) BETWEEN ('') AND (vt1.c0))))  NULLS FIRST;
SELECT * FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))AND(v0.c2))) ISNULL)) ORDER BY (((NULL))==(((((v0.c2))<=((v0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND(v0.c0)))AND(v0.c2))) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY (((NULL))=(((((v0.c2))<=((v0.c1)))))));
SELECT * FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))AND(v0.c2))) ISNULL)) ORDER BY (((NULL))==(((((v0.c2))<=((v0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND(v0.c0)))AND(v0.c2))) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY (((NULL))=(((((v0.c2))<=((v0.c1)))))));
SELECT * FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))AND(v0.c2))) ISNULL)) ORDER BY (((NULL))==(((((v0.c2))<=((v0.c1))))));
SELECT ALL * FROM vt0 WHERE (CASE 0.17460480815319568 COLLATE NOCASE  WHEN (- (vt0.c0)) THEN ((vt0.c0)=(vt0.c0)) WHEN (vt0.c0 IN ()) THEN vt0.c0 COLLATE RTRIM WHEN (vt0.c0 IN ()) THEN 0.5622698740006212 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.17460480815319568 COLLATE NOCASE  WHEN (- (vt0.c0)) THEN ((vt0.c0)=(vt0.c0)) WHEN (vt0.c0 IN ()) THEN vt0.c0 COLLATE RTRIM WHEN (vt0.c0 IN ()) THEN 0.5622698740006212 END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE 0.17460480815319568 COLLATE NOCASE  WHEN (- (vt0.c0)) THEN ((vt0.c0)=(vt0.c0)) WHEN (vt0.c0 IN ()) THEN vt0.c0 COLLATE RTRIM WHEN (vt0.c0 IN ()) THEN 0.5622698740006212 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.17460480815319568 COLLATE NOCASE  WHEN (- (vt0.c0)) THEN ((vt0.c0)=(vt0.c0)) WHEN (vt0.c0 IN ()) THEN vt0.c0 COLLATE RTRIM WHEN (vt0.c0 IN ()) THEN 0.5622698740006212 END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE 0.17460480815319568 COLLATE NOCASE  WHEN (- (vt0.c0)) THEN ((vt0.c0)=(vt0.c0)) WHEN (vt0.c0 IN ()) THEN vt0.c0 COLLATE RTRIM WHEN (vt0.c0 IN ()) THEN 0.5622698740006212 END);
SELECT * FROM v0 RIGHT OUTER JOIN rt1 ON ((((rt1.c0) BETWEEN (v0.c0) AND (0.34596904099987125))) IS FALSE) FULL OUTER JOIN vt0 ON (((rt1.c1)) NOT BETWEEN ((v0.c0 COLLATE BINARY)) AND ((((((rt1.c1)AND(v0.c3)))OR(rt1.c0))))) WHERE ((((~ (v0.c2)))OR(v0.c1))) ORDER BY ((((v0.c1) NOTNULL)) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT (((((~ (v0.c2)))OR(v0.c1))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt1 ON ((((rt1.c0) BETWEEN (v0.c0) AND (0.34596904099987125))) IS FALSE) FULL OUTER JOIN vt0 ON (((rt1.c1)) NOT BETWEEN ((v0.c0 COLLATE BINARY)) AND ((((((rt1.c1)AND(v0.c3)))OR(rt1.c0))))) ORDER BY ((((v0.c1) NOTNULL)) IS TRUE) ASC);
SELECT * FROM v0 RIGHT OUTER JOIN rt1 ON ((((rt1.c0) BETWEEN (v0.c0) AND (0.34596904099987125))) IS FALSE) FULL OUTER JOIN vt0 ON (((rt1.c1)) NOT BETWEEN ((v0.c0 COLLATE BINARY)) AND ((((((rt1.c1)AND(v0.c3)))OR(rt1.c0))))) WHERE ((((~ (v0.c2)))OR(v0.c1))) ORDER BY ((((v0.c1) NOTNULL)) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT (((((~ (v0.c2)))OR(v0.c1))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt1 ON ((((rt1.c0) BETWEEN (v0.c0) AND (0.34596904099987125))) IS FALSE) FULL OUTER JOIN vt0 ON (((rt1.c1)) NOT BETWEEN ((v0.c0 COLLATE BINARY)) AND ((((((rt1.c1)AND(v0.c3)))OR(rt1.c0))))) ORDER BY ((((v0.c1) NOTNULL)) IS TRUE) ASC);
SELECT * FROM v0 RIGHT OUTER JOIN rt1 ON ((((rt1.c0) BETWEEN (v0.c0) AND (0.34596904099987125))) IS FALSE) FULL OUTER JOIN vt0 ON (((rt1.c1)) NOT BETWEEN ((v0.c0 COLLATE BINARY)) AND ((((((rt1.c1)AND(v0.c3)))OR(rt1.c0))))) WHERE ((((~ (v0.c2)))OR(v0.c1))) ORDER BY ((((v0.c1) NOTNULL)) IS TRUE) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c4 COLLATE BINARY AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c4 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c4 COLLATE BINARY AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c4 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c4 COLLATE BINARY AS NUMERIC));
SELECT ALL * FROM vt1 WHERE ((vt1.c0 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((vt1.c0 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((vt1.c0 IN ()) COLLATE NOCASE);
SELECT COUNT(*) FROM vt1, rt1, vt0, v0 WHERE ((((((((((v0.c3)OR(v0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((v0.c3)OR(v0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(rt1.c1)) IN ())) IS TRUE)  as count FROM vt1, rt1, vt0, v0);
SELECT COUNT(*) FROM vt1, rt1, vt0, v0 WHERE ((((((((((v0.c3)OR(v0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((v0.c3)OR(v0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(rt1.c1)) IN ())) IS TRUE)  as count FROM vt1, rt1, vt0, v0);
SELECT COUNT(*) FROM vt1, rt1, vt0, v0 WHERE ((((((((((v0.c3)OR(v0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(rt1.c1)) IN ()));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON vt0.c0 WHERE (CAST(rt1.c1 COLLATE RTRIM AS REAL)) ORDER BY rt1.c0, (('187321226')!=(rt1.c2)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c1 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON vt0.c0 ORDER BY rt1.c0, (('187321226')<>(rt1.c2)) COLLATE NOCASE ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON vt0.c0 WHERE (CAST(rt1.c1 COLLATE RTRIM AS REAL)) ORDER BY rt1.c0, (('187321226')!=(rt1.c2)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c1 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON vt0.c0 ORDER BY rt1.c0, (('187321226')<>(rt1.c2)) COLLATE NOCASE ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON vt0.c0 WHERE (CAST(rt1.c1 COLLATE RTRIM AS REAL)) ORDER BY rt1.c0, (('187321226')!=(rt1.c2)) COLLATE NOCASE ASC  NULLS LAST;
SELECT ALL * FROM vt1, v0, vt0 WHERE ((((NOT (vt1.c0)))AND((v0.c2 IN ())))) ORDER BY CAST(((v0.c4) IS FALSE) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0)))AND((v0.c2 IN ())))) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY CAST(((v0.c4) IS FALSE) AS BLOB) DESC  NULLS LAST);
SELECT ALL * FROM vt1, v0, vt0 WHERE ((((NOT (vt1.c0)))AND((v0.c2 IN ())))) ORDER BY CAST(((v0.c4) IS FALSE) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0)))AND((v0.c2 IN ())))) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY CAST(((v0.c4) IS FALSE) AS BLOB) DESC  NULLS LAST);
SELECT ALL * FROM vt1, v0, vt0 WHERE ((((NOT (vt1.c0)))AND((v0.c2 IN ())))) ORDER BY CAST(((v0.c4) IS FALSE) AS BLOB) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((CAST(x'' AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(x'' AS NUMERIC) IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((CAST(x'' AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(x'' AS NUMERIC) IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((CAST(x'' AS NUMERIC) IN ()));
SELECT COUNT(*) FROM vt0, v0 WHERE ((~ ((((v0.c2, x'', v0.c4, v0.c2, v0.c2)) NOT BETWEEN ((v0.c3, v0.c2, v0.c4, vt0.c0, v0.c1)) AND ((v0.c4, x'', v0.c1, v0.c0, v0.c4)))))) ORDER BY HEX(((v0.c2) IS FALSE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((((v0.c2, x'', v0.c4, v0.c2, v0.c2)) NOT BETWEEN ((v0.c3, v0.c2, v0.c4, vt0.c0, v0.c1)) AND ((v0.c4, x'', v0.c1, v0.c0, v0.c4)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY HEX(((v0.c2) IS FALSE))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE ((~ ((((v0.c2, x'', v0.c4, v0.c2, v0.c2)) NOT BETWEEN ((v0.c3, v0.c2, v0.c4, vt0.c0, v0.c1)) AND ((v0.c4, x'', v0.c1, v0.c0, v0.c4)))))) ORDER BY HEX(((v0.c2) IS FALSE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((((v0.c2, x'', v0.c4, v0.c2, v0.c2)) NOT BETWEEN ((v0.c3, v0.c2, v0.c4, vt0.c0, v0.c1)) AND ((v0.c4, x'', v0.c1, v0.c0, v0.c4)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY HEX(((v0.c2) IS FALSE))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE ((~ ((((v0.c2, x'', v0.c4, v0.c2, v0.c2)) NOT BETWEEN ((v0.c3, v0.c2, v0.c4, vt0.c0, v0.c1)) AND ((v0.c4, x'', v0.c1, v0.c0, v0.c4)))))) ORDER BY HEX(((v0.c2) IS FALSE))  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt0, vt1, v0 WHERE (((((((((vt1.c0)OR((((8.42503428E8, vt0.c0, v0.c2)) NOT BETWEEN ((vt1.c0, v0.c0, v0.c4)) AND ((rt1.c1, v0.c2, '-976581970'))))))OR(CASE v0.c0  WHEN NULL THEN x'' END)))OR(v0.c0)))OR(CASE WHEN v0.c0 THEN rt1.c2 ELSE v0.c2 END))) ORDER BY LTRIM(((((v0.c0)AND(v0.c0)))AND(0.10117811771631369)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0)OR((((8.42503428E8, vt0.c0, v0.c2)) NOT BETWEEN ((vt1.c0, v0.c0, v0.c4)) AND ((rt1.c1, v0.c2, '-976581970'))))))OR(CASE v0.c0  WHEN NULL THEN x'' END)))OR(v0.c0)))OR(CASE WHEN v0.c0 THEN rt1.c2 ELSE v0.c2 END))) IS TRUE)  as count FROM rt1, vt0, vt1, v0 ORDER BY LTRIM(((((v0.c0)AND(v0.c0)))AND(0.10117811771631369)))  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0, vt1, v0 WHERE (((((((((vt1.c0)OR((((8.42503428E8, vt0.c0, v0.c2)) NOT BETWEEN ((vt1.c0, v0.c0, v0.c4)) AND ((rt1.c1, v0.c2, '-976581970'))))))OR(CASE v0.c0  WHEN NULL THEN x'' END)))OR(v0.c0)))OR(CASE WHEN v0.c0 THEN rt1.c2 ELSE v0.c2 END))) ORDER BY LTRIM(((((v0.c0)AND(v0.c0)))AND(0.10117811771631369)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0)OR((((8.42503428E8, vt0.c0, v0.c2)) NOT BETWEEN ((vt1.c0, v0.c0, v0.c4)) AND ((rt1.c1, v0.c2, '-976581970'))))))OR(CASE v0.c0  WHEN NULL THEN x'' END)))OR(v0.c0)))OR(CASE WHEN v0.c0 THEN rt1.c2 ELSE v0.c2 END))) IS TRUE)  as count FROM rt1, vt0, vt1, v0 ORDER BY LTRIM(((((v0.c0)AND(v0.c0)))AND(0.10117811771631369)))  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0, vt1, v0 WHERE (((((((((vt1.c0)OR((((8.42503428E8, vt0.c0, v0.c2)) NOT BETWEEN ((vt1.c0, v0.c0, v0.c4)) AND ((rt1.c1, v0.c2, '-976581970'))))))OR(CASE v0.c0  WHEN NULL THEN x'' END)))OR(v0.c0)))OR(CASE WHEN v0.c0 THEN rt1.c2 ELSE v0.c2 END))) ORDER BY LTRIM(((((v0.c0)AND(v0.c0)))AND(0.10117811771631369)))  NULLS LAST;
SELECT * FROM rt1, v0, vt0 WHERE (CASE WHEN ((v0.c2)+(rt1.c2)) THEN ((rt1.c0) NOTNULL) ELSE ((((v0.c3)AND(rt1.c2)))AND(vt0.c0)) END) ORDER BY CASE WHEN ((v0.c2)%(rt1.c1)) THEN v0.c2 ELSE ((((v0.c2)AND(v0.c0)))AND(x'4b1d')) END  NULLS LAST, (((CASE v0.c2  WHEN v0.c4 THEN rt1.c1 ELSE v0.c0 END))==(((rt1.c0 IN ()))))  NULLS LAST, ((v0.c4)%(rt1.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c2)+(rt1.c2)) THEN ((rt1.c0) NOTNULL) ELSE ((((v0.c3)AND(rt1.c2)))AND(vt0.c0)) END) IS TRUE)  as count FROM rt1, v0, vt0 ORDER BY CASE WHEN ((v0.c2)%(rt1.c1)) THEN v0.c2 ELSE ((((v0.c2)AND(v0.c0)))AND(x'4b1d')) END  NULLS LAST, (((CASE v0.c2  WHEN v0.c4 THEN rt1.c1 ELSE v0.c0 END))=(((rt1.c0 IN ()))))  NULLS LAST, ((v0.c4)%(rt1.c0)) COLLATE NOCASE);
SELECT * FROM rt1, v0, vt0 WHERE (CASE WHEN ((v0.c2)+(rt1.c2)) THEN ((rt1.c0) NOTNULL) ELSE ((((v0.c3)AND(rt1.c2)))AND(vt0.c0)) END) ORDER BY CASE WHEN ((v0.c2)%(rt1.c1)) THEN v0.c2 ELSE ((((v0.c2)AND(v0.c0)))AND(x'4b1d')) END  NULLS LAST, (((CASE v0.c2  WHEN v0.c4 THEN rt1.c1 ELSE v0.c0 END))==(((rt1.c0 IN ()))))  NULLS LAST, ((v0.c4)%(rt1.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c2)+(rt1.c2)) THEN ((rt1.c0) NOTNULL) ELSE ((((v0.c3)AND(rt1.c2)))AND(vt0.c0)) END) IS TRUE)  as count FROM rt1, v0, vt0 ORDER BY CASE WHEN ((v0.c2)%(rt1.c1)) THEN v0.c2 ELSE ((((v0.c2)AND(v0.c0)))AND(x'4b1d')) END  NULLS LAST, (((CASE v0.c2  WHEN v0.c4 THEN rt1.c1 ELSE v0.c0 END))=(((rt1.c0 IN ()))))  NULLS LAST, ((v0.c4)%(rt1.c0)) COLLATE NOCASE);
SELECT * FROM rt1, v0, vt0 WHERE (CASE WHEN ((v0.c2)+(rt1.c2)) THEN ((rt1.c0) NOTNULL) ELSE ((((v0.c3)AND(rt1.c2)))AND(vt0.c0)) END) ORDER BY CASE WHEN ((v0.c2)%(rt1.c1)) THEN v0.c2 ELSE ((((v0.c2)AND(v0.c0)))AND(x'4b1d')) END  NULLS LAST, (((CASE v0.c2  WHEN v0.c4 THEN rt1.c1 ELSE v0.c0 END))==(((rt1.c0 IN ()))))  NULLS LAST, ((v0.c4)%(rt1.c0)) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2 COLLATE RTRIM)OR((((v0.c1, '-1765515949', v0.c4))!=((v0.c1, v0.c4, v0.c2))))))OR('1612175085'))) ORDER BY ((v0.c4)=(((((v0.c0)AND(v0.c0)))AND(v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c2 COLLATE RTRIM)OR((((v0.c1, '-1765515949', v0.c4))<>((v0.c1, v0.c4, v0.c2))))))OR('1612175085'))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c4)=(((((v0.c0)AND(v0.c0)))AND(v0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2 COLLATE RTRIM)OR((((v0.c1, '-1765515949', v0.c4))!=((v0.c1, v0.c4, v0.c2))))))OR('1612175085'))) ORDER BY ((v0.c4)=(((((v0.c0)AND(v0.c0)))AND(v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c2 COLLATE RTRIM)OR((((v0.c1, '-1765515949', v0.c4))<>((v0.c1, v0.c4, v0.c2))))))OR('1612175085'))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c4)=(((((v0.c0)AND(v0.c0)))AND(v0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2 COLLATE RTRIM)OR((((v0.c1, '-1765515949', v0.c4))!=((v0.c1, v0.c4, v0.c2))))))OR('1612175085'))) ORDER BY ((v0.c4)=(((((v0.c0)AND(v0.c0)))AND(v0.c0)))) DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE (((RTRIM(vt1.c0)) ISNULL)) ORDER BY ((((vt1.c0) IS TRUE))OR(((vt1.c0)<<(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((RTRIM(vt1.c0)) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) IS TRUE))OR(((vt1.c0)<<(vt1.c0)))));
SELECT * FROM vt1 WHERE (((RTRIM(vt1.c0)) ISNULL)) ORDER BY ((((vt1.c0) IS TRUE))OR(((vt1.c0)<<(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((RTRIM(vt1.c0)) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) IS TRUE))OR(((vt1.c0)<<(vt1.c0)))));
SELECT * FROM vt1 WHERE (((RTRIM(vt1.c0)) ISNULL)) ORDER BY ((((vt1.c0) IS TRUE))OR(((vt1.c0)<<(vt1.c0))));
SELECT * FROM vt0, vt1, v0, rt1 WHERE (v0.c2) ORDER BY ((((rt1.c1)<(0xffffffffe3577a03)))OR(0.26311691996561226)) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM vt0, vt1, v0, rt1 ORDER BY ((((rt1.c1)<(0xffffffffe3577a03)))OR(0.26311691996561226)) DESC);
SELECT * FROM vt0, vt1, v0, rt1 WHERE (v0.c2) ORDER BY ((((rt1.c1)<(0xffffffffe3577a03)))OR(0.26311691996561226)) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM vt0, vt1, v0, rt1 ORDER BY ((((rt1.c1)<(0xffffffffe3577a03)))OR(0.26311691996561226)) DESC);
SELECT * FROM vt0, vt1, v0, rt1 WHERE (v0.c2) ORDER BY ((((rt1.c1)<(0xffffffffe3577a03)))OR(0.26311691996561226)) DESC;
SELECT ALL COUNT(*) FROM vt1, rt1 INNER JOIN v0 ON ((((v0.c1)<<(v0.c3)))*(CAST(v0.c4 AS TEXT))) WHERE (((((((v0.c1) NOT BETWEEN (v0.c1) AND (rt1.c0)))AND(rt1.c0)))AND(CASE v0.c0  WHEN vt1.c0 THEN v0.c4 WHEN rt1.c0 THEN rt1.c1 WHEN -7.24218424E8 THEN rt1.c0 ELSE rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((v0.c1) NOT BETWEEN (v0.c1) AND (rt1.c0)))AND(rt1.c0)))AND(CASE v0.c0  WHEN vt1.c0 THEN v0.c4 WHEN rt1.c0 THEN rt1.c1 WHEN -7.24218424E8 THEN rt1.c0 ELSE rt1.c0 END))) IS TRUE)  as count FROM vt1, rt1 INNER JOIN v0 ON ((((v0.c1)<<(v0.c3)))*(CAST(v0.c4 AS TEXT))));
SELECT ALL COUNT(*) FROM vt1, rt1 INNER JOIN v0 ON ((((v0.c1)<<(v0.c3)))*(CAST(v0.c4 AS TEXT))) WHERE (((((((v0.c1) NOT BETWEEN (v0.c1) AND (rt1.c0)))AND(rt1.c0)))AND(CASE v0.c0  WHEN vt1.c0 THEN v0.c4 WHEN rt1.c0 THEN rt1.c1 WHEN -7.24218424E8 THEN rt1.c0 ELSE rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((v0.c1) NOT BETWEEN (v0.c1) AND (rt1.c0)))AND(rt1.c0)))AND(CASE v0.c0  WHEN vt1.c0 THEN v0.c4 WHEN rt1.c0 THEN rt1.c1 WHEN -7.24218424E8 THEN rt1.c0 ELSE rt1.c0 END))) IS TRUE)  as count FROM vt1, rt1 INNER JOIN v0 ON ((((v0.c1)<<(v0.c3)))*(CAST(v0.c4 AS TEXT))));
SELECT ALL COUNT(*) FROM vt1, rt1 INNER JOIN v0 ON ((((v0.c1)<<(v0.c3)))*(CAST(v0.c4 AS TEXT))) WHERE (((((((v0.c1) NOT BETWEEN (v0.c1) AND (rt1.c0)))AND(rt1.c0)))AND(CASE v0.c0  WHEN vt1.c0 THEN v0.c4 WHEN rt1.c0 THEN rt1.c1 WHEN -7.24218424E8 THEN rt1.c0 ELSE rt1.c0 END)));
SELECT ALL * FROM vt1 WHERE ((((CASE WHEN vt1.c0 THEN vt1.c0 END, (vt1.c0 IN ()), 0.38353538279384547))>(((vt1.c0 IN ()), UPPER(DISTINCT vt1.c0), CASE WHEN vt1.c0 THEN vt1.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN vt1.c0 THEN vt1.c0 END, (vt1.c0 IN ()), 0.38353538279384547))>(((vt1.c0 IN ()), UPPER(DISTINCT vt1.c0), CASE WHEN vt1.c0 THEN vt1.c0 END)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((CASE WHEN vt1.c0 THEN vt1.c0 END, (vt1.c0 IN ()), 0.38353538279384547))>(((vt1.c0 IN ()), UPPER(DISTINCT vt1.c0), CASE WHEN vt1.c0 THEN vt1.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN vt1.c0 THEN vt1.c0 END, (vt1.c0 IN ()), 0.38353538279384547))>(((vt1.c0 IN ()), UPPER(DISTINCT vt1.c0), CASE WHEN vt1.c0 THEN vt1.c0 END)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((CASE WHEN vt1.c0 THEN vt1.c0 END, (vt1.c0 IN ()), 0.38353538279384547))>(((vt1.c0 IN ()), UPPER(DISTINCT vt1.c0), CASE WHEN vt1.c0 THEN vt1.c0 END))));
SELECT * FROM vt0, vt1 CROSS JOIN v0 ON (((~ (NULL))) NOT NULL) WHERE (((((((v0.c4)+(vt0.c0)))AND(LIKELIHOOD(v0.c4, 0.12120354841179837))))AND((vt1.c0 IN (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c4)+(vt0.c0)))AND(LIKELIHOOD(v0.c4, 0.12120354841179837))))AND((vt1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN v0 ON (((~ (NULL))) NOT NULL));
SELECT * FROM vt0, vt1 CROSS JOIN v0 ON (((~ (NULL))) NOT NULL) WHERE (((((((v0.c4)+(vt0.c0)))AND(LIKELIHOOD(v0.c4, 0.12120354841179837))))AND((vt1.c0 IN (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c4)+(vt0.c0)))AND(LIKELIHOOD(v0.c4, 0.12120354841179837))))AND((vt1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN v0 ON (((~ (NULL))) NOT NULL));
SELECT * FROM vt0, vt1 CROSS JOIN v0 ON (((~ (NULL))) NOT NULL) WHERE (((((((v0.c4)+(vt0.c0)))AND(LIKELIHOOD(v0.c4, 0.12120354841179837))))AND((vt1.c0 IN (vt1.c0)))));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN v0 ON (((v0.c3 IN ()))<<(((rt1.c2) NOT BETWEEN (rt1.c0) AND (v0.c1)))) WHERE (v0.c4);
SELECT SUM(count) FROM (SELECT ALL ((v0.c4) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON (((v0.c3 IN ()))<<(((rt1.c2) NOT BETWEEN (rt1.c0) AND (v0.c1)))));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN v0 ON (((v0.c3 IN ()))<<(((rt1.c2) NOT BETWEEN (rt1.c0) AND (v0.c1)))) WHERE (v0.c4);
SELECT SUM(count) FROM (SELECT ALL ((v0.c4) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON (((v0.c3 IN ()))<<(((rt1.c2) NOT BETWEEN (rt1.c0) AND (v0.c1)))));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN v0 ON (((v0.c3 IN ()))<<(((rt1.c2) NOT BETWEEN (rt1.c0) AND (v0.c1)))) WHERE (v0.c4);
SELECT ALL COUNT(*) FROM vt0, v0 FULL OUTER JOIN vt1 ON CASE WHEN (v0.c3 IN ()) THEN (('3.211039782331504E-4')<=(vt0.c0)) ELSE (v0.c4 IN ()) END WHERE (((CAST(v0.c3 AS TEXT))<<((v0.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c3 AS TEXT))<<((v0.c3 IN ())))) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN vt1 ON CASE WHEN (v0.c3 IN ()) THEN (('3.211039782331504E-4')<=(vt0.c0)) ELSE (v0.c4 IN ()) END);
SELECT ALL COUNT(*) FROM vt0, v0 FULL OUTER JOIN vt1 ON CASE WHEN (v0.c3 IN ()) THEN (('3.211039782331504E-4')<=(vt0.c0)) ELSE (v0.c4 IN ()) END WHERE (((CAST(v0.c3 AS TEXT))<<((v0.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c3 AS TEXT))<<((v0.c3 IN ())))) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN vt1 ON CASE WHEN (v0.c3 IN ()) THEN (('3.211039782331504E-4')<=(vt0.c0)) ELSE (v0.c4 IN ()) END);
SELECT ALL COUNT(*) FROM vt0, v0 FULL OUTER JOIN vt1 ON CASE WHEN (v0.c3 IN ()) THEN (('3.211039782331504E-4')<=(vt0.c0)) ELSE (v0.c4 IN ()) END WHERE (((CAST(v0.c3 AS TEXT))<<((v0.c3 IN ()))));
SELECT ALL * FROM rt1, vt0 WHERE ((((((((((NULL IN (0.3287709670027381)))OR(rt1.c1)))OR((((rt1.c1, x'fa6c92bb', rt1.c2, rt1.c1, rt1.c2))>=((rt1.c1, vt0.c0, rt1.c0, rt1.c2, rt1.c2))))))OR(CAST('553977884' AS REAL))))AND((rt1.c0 IN ())))) ORDER BY LOWER(((rt1.c1)>(rt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((NULL IN (0.3287709670027381)))OR(rt1.c1)))OR((((rt1.c1, x'fa6c92bb', rt1.c2, rt1.c1, rt1.c2))>=((rt1.c1, vt0.c0, rt1.c0, rt1.c2, rt1.c2))))))OR(CAST('553977884' AS REAL))))AND((rt1.c0 IN ())))) IS TRUE)  as count FROM rt1, vt0 ORDER BY LOWER(((rt1.c1)>(rt1.c0)))  NULLS LAST);
SELECT ALL * FROM rt1, vt0 WHERE ((((((((((NULL IN (0.3287709670027381)))OR(rt1.c1)))OR((((rt1.c1, x'fa6c92bb', rt1.c2, rt1.c1, rt1.c2))>=((rt1.c1, vt0.c0, rt1.c0, rt1.c2, rt1.c2))))))OR(CAST('553977884' AS REAL))))AND((rt1.c0 IN ())))) ORDER BY LOWER(((rt1.c1)>(rt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((NULL IN (0.3287709670027381)))OR(rt1.c1)))OR((((rt1.c1, x'fa6c92bb', rt1.c2, rt1.c1, rt1.c2))>=((rt1.c1, vt0.c0, rt1.c0, rt1.c2, rt1.c2))))))OR(CAST('553977884' AS REAL))))AND((rt1.c0 IN ())))) IS TRUE)  as count FROM rt1, vt0 ORDER BY LOWER(((rt1.c1)>(rt1.c0)))  NULLS LAST);
SELECT ALL * FROM rt1, vt0 WHERE ((((((((((NULL IN (0.3287709670027381)))OR(rt1.c1)))OR((((rt1.c1, x'fa6c92bb', rt1.c2, rt1.c1, rt1.c2))>=((rt1.c1, vt0.c0, rt1.c0, rt1.c2, rt1.c2))))))OR(CAST('553977884' AS REAL))))AND((rt1.c0 IN ())))) ORDER BY LOWER(((rt1.c1)>(rt1.c0)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0, vt1, rt1 WHERE (0x19d36326);
SELECT SUM(count) FROM (SELECT ((0X19d36326) IS TRUE)  as count FROM vt0, v0, vt1, rt1);
SELECT ALL COUNT(*) FROM vt0, v0, vt1, rt1 WHERE (0x19d36326);
SELECT SUM(count) FROM (SELECT ((0X19d36326) IS TRUE)  as count FROM vt0, v0, vt1, rt1);
SELECT ALL COUNT(*) FROM vt0, v0, vt1, rt1 WHERE (0x19d36326);
SELECT ALL * FROM vt0, vt1 WHERE ((~ (CASE WHEN vt1.c0 THEN vt0.c0 END))) ORDER BY ((((vt0.c0) IS FALSE)) IS FALSE)  NULLS FIRST, (CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE WHEN vt1.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0) IS FALSE)) IS FALSE)  NULLS FIRST, (CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE ((~ (CASE WHEN vt1.c0 THEN vt0.c0 END))) ORDER BY ((((vt0.c0) IS FALSE)) IS FALSE)  NULLS FIRST, (CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE WHEN vt1.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0) IS FALSE)) IS FALSE)  NULLS FIRST, (CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE ((~ (CASE WHEN vt1.c0 THEN vt0.c0 END))) ORDER BY ((((vt0.c0) IS FALSE)) IS FALSE)  NULLS FIRST, (CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM rt1, v0, vt0, vt1 WHERE (CAST(CASE rt1.c2  WHEN v0.c0 THEN v0.c4 WHEN vt0.c0 THEN rt1.c2 WHEN v0.c1 THEN -887116844 END AS BLOB)) ORDER BY (+ (rt1.c2)), rt1.c0;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt1.c2  WHEN v0.c0 THEN v0.c4 WHEN vt0.c0 THEN rt1.c2 WHEN v0.c1 THEN -887116844 END AS BLOB)) IS TRUE)  as count FROM rt1, v0, vt0, vt1 ORDER BY (+ (rt1.c2)), rt1.c0);
SELECT ALL * FROM rt1, v0, vt0, vt1 WHERE (CAST(CASE rt1.c2  WHEN v0.c0 THEN v0.c4 WHEN vt0.c0 THEN rt1.c2 WHEN v0.c1 THEN -887116844 END AS BLOB)) ORDER BY (+ (rt1.c2)), rt1.c0;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt1.c2  WHEN v0.c0 THEN v0.c4 WHEN vt0.c0 THEN rt1.c2 WHEN v0.c1 THEN -887116844 END AS BLOB)) IS TRUE)  as count FROM rt1, v0, vt0, vt1 ORDER BY (+ (rt1.c2)), rt1.c0);
SELECT ALL * FROM rt1, v0, vt0, vt1 WHERE (CAST(CASE rt1.c2  WHEN v0.c0 THEN v0.c4 WHEN vt0.c0 THEN rt1.c2 WHEN v0.c1 THEN -887116844 END AS BLOB)) ORDER BY (+ (rt1.c2)), rt1.c0;
SELECT COUNT(*) FROM rt1, vt1, v0 WHERE ((+ (v0.c2)) COLLATE NOCASE) ORDER BY ((NULL)<<(((((rt1.c0)OR(v0.c1)))OR(v0.c0)))), x''  NULLS LAST, (((((vt1.c0))<((v0.c2))))OR(((v0.c2)-(v0.c4))));
SELECT SUM(count) FROM (SELECT (((+ (v0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt1, v0 ORDER BY ((NULL)<<(((((rt1.c0)OR(v0.c1)))OR(v0.c0)))), x''  NULLS LAST, (((((vt1.c0))<((v0.c2))))OR(((v0.c2)-(v0.c4)))));
SELECT COUNT(*) FROM rt1, vt1, v0 WHERE ((+ (v0.c2)) COLLATE NOCASE) ORDER BY ((NULL)<<(((((rt1.c0)OR(v0.c1)))OR(v0.c0)))), x''  NULLS LAST, (((((vt1.c0))<((v0.c2))))OR(((v0.c2)-(v0.c4))));
SELECT SUM(count) FROM (SELECT (((+ (v0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt1, v0 ORDER BY ((NULL)<<(((((rt1.c0)OR(v0.c1)))OR(v0.c0)))), x''  NULLS LAST, (((((vt1.c0))<((v0.c2))))OR(((v0.c2)-(v0.c4)))));
SELECT COUNT(*) FROM rt1, vt1, v0 WHERE ((+ (v0.c2)) COLLATE NOCASE) ORDER BY ((NULL)<<(((((rt1.c0)OR(v0.c1)))OR(v0.c0)))), x''  NULLS LAST, (((((vt1.c0))<((v0.c2))))OR(((v0.c2)-(v0.c4))));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN v0 ON v0.c3 WHERE (v0.c1) ORDER BY (~ (((v0.c3)|(v0.c3)))) ASC  NULLS LAST, (((v0.c4)) BETWEEN ((((v0.c1)<=(v0.c4)))) AND (((+ (v0.c3))))) DESC  NULLS LAST, -887116844;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM vt1 FULL OUTER JOIN v0 ON v0.c3 ORDER BY (~ (((v0.c3)|(v0.c3)))) ASC  NULLS LAST, (((v0.c4)) BETWEEN ((((v0.c1)<=(v0.c4)))) AND (((+ (v0.c3))))) DESC  NULLS LAST, -887116844);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN v0 ON v0.c3 WHERE (v0.c1) ORDER BY (~ (((v0.c3)|(v0.c3)))) ASC  NULLS LAST, (((v0.c4)) BETWEEN ((((v0.c1)<=(v0.c4)))) AND (((+ (v0.c3))))) DESC  NULLS LAST, -887116844;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM vt1 FULL OUTER JOIN v0 ON v0.c3 ORDER BY (~ (((v0.c3)|(v0.c3)))) ASC  NULLS LAST, (((v0.c4)) BETWEEN ((((v0.c1)<=(v0.c4)))) AND (((+ (v0.c3))))) DESC  NULLS LAST, -887116844);
SELECT * FROM vt1 WHERE ((~ ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((~ ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((~ ((vt1.c0 IN ()))));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((((vt1.c0) IS TRUE))))) ORDER BY CASE WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0)<=(vt1.c0)) ELSE ((0.7872023302453359) BETWEEN (vt1.c0) AND (vt1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((((vt1.c0) IS TRUE))))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0)<=(vt1.c0)) ELSE ((0.7872023302453359) BETWEEN (vt1.c0) AND (vt1.c0)) END ASC);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((((vt1.c0) IS TRUE))))) ORDER BY CASE WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0)<=(vt1.c0)) ELSE ((0.7872023302453359) BETWEEN (vt1.c0) AND (vt1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((((vt1.c0) IS TRUE))))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0)<=(vt1.c0)) ELSE ((0.7872023302453359) BETWEEN (vt1.c0) AND (vt1.c0)) END ASC);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((((vt1.c0) IS TRUE))))) ORDER BY CASE WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0)<=(vt1.c0)) ELSE ((0.7872023302453359) BETWEEN (vt1.c0) AND (vt1.c0)) END ASC;
SELECT COUNT(*) FROM vt1, rt1 WHERE (CASE ((rt1.c0)<(rt1.c2))  WHEN rt1.c1 COLLATE BINARY THEN (((rt1.c0))>((vt1.c0))) WHEN (vt1.c0 IN (rt1.c0, rt1.c0)) THEN rt1.c1 COLLATE BINARY WHEN ((rt1.c1)<<(0.3198775524800078)) THEN vt1.c0 COLLATE BINARY ELSE ((rt1.c1) IS TRUE) END) ORDER BY CASE CASE WHEN vt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN vt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN -533766521 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END  WHEN (((rt1.c1))==((rt1.c0))) THEN (((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c0))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c0)<(rt1.c2))  WHEN rt1.c1 COLLATE BINARY THEN (((rt1.c0))>((vt1.c0))) WHEN (vt1.c0 IN (rt1.c0, rt1.c0)) THEN rt1.c1 COLLATE BINARY WHEN ((rt1.c1)<<(0.3198775524800078)) THEN vt1.c0 COLLATE BINARY ELSE ((rt1.c1) IS TRUE) END) IS TRUE)  as count FROM vt1, rt1 ORDER BY CASE CASE WHEN vt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN vt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN -533766521 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END  WHEN (((rt1.c1))=((rt1.c0))) THEN (((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c0))) END  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt1 WHERE (CASE ((rt1.c0)<(rt1.c2))  WHEN rt1.c1 COLLATE BINARY THEN (((rt1.c0))>((vt1.c0))) WHEN (vt1.c0 IN (rt1.c0, rt1.c0)) THEN rt1.c1 COLLATE BINARY WHEN ((rt1.c1)<<(0.3198775524800078)) THEN vt1.c0 COLLATE BINARY ELSE ((rt1.c1) IS TRUE) END) ORDER BY CASE CASE WHEN vt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN vt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN -533766521 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END  WHEN (((rt1.c1))==((rt1.c0))) THEN (((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c0))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c0)<(rt1.c2))  WHEN rt1.c1 COLLATE BINARY THEN (((rt1.c0))>((vt1.c0))) WHEN (vt1.c0 IN (rt1.c0, rt1.c0)) THEN rt1.c1 COLLATE BINARY WHEN ((rt1.c1)<<(0.3198775524800078)) THEN vt1.c0 COLLATE BINARY ELSE ((rt1.c1) IS TRUE) END) IS TRUE)  as count FROM vt1, rt1 ORDER BY CASE CASE WHEN vt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN vt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN -533766521 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END  WHEN (((rt1.c1))=((rt1.c0))) THEN (((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c0))) END  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt1 WHERE (CASE ((rt1.c0)<(rt1.c2))  WHEN rt1.c1 COLLATE BINARY THEN (((rt1.c0))>((vt1.c0))) WHEN (vt1.c0 IN (rt1.c0, rt1.c0)) THEN rt1.c1 COLLATE BINARY WHEN ((rt1.c1)<<(0.3198775524800078)) THEN vt1.c0 COLLATE BINARY ELSE ((rt1.c1) IS TRUE) END) ORDER BY CASE CASE WHEN vt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN vt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN -533766521 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END  WHEN (((rt1.c1))==((rt1.c0))) THEN (((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c0))) END  NULLS LAST;
SELECT * FROM rt1, v0 WHERE (((x'0c90')<=((((v0.c4))>((v0.c3)))))) ORDER BY ((((v0.c2)-(rt1.c0))) NOT NULL), ((CASE WHEN 0.07387994214103588 THEN rt1.c0 ELSE v0.c1 END)LIKE(HEX(DISTINCT v0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'0c90')<=((((v0.c4))>((v0.c3)))))) IS TRUE)  as count FROM rt1, v0 ORDER BY ((((v0.c2)-(rt1.c0))) NOT NULL), ((CASE WHEN 0.07387994214103588 THEN rt1.c0 ELSE v0.c1 END)LIKE(HEX(DISTINCT v0.c0)))  NULLS LAST);
SELECT * FROM rt1, v0 WHERE (((x'0c90')<=((((v0.c4))>((v0.c3)))))) ORDER BY ((((v0.c2)-(rt1.c0))) NOT NULL), ((CASE WHEN 0.07387994214103588 THEN rt1.c0 ELSE v0.c1 END)LIKE(HEX(DISTINCT v0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'0c90')<=((((v0.c4))>((v0.c3)))))) IS TRUE)  as count FROM rt1, v0 ORDER BY ((((v0.c2)-(rt1.c0))) NOT NULL), ((CASE WHEN 0.07387994214103588 THEN rt1.c0 ELSE v0.c1 END)LIKE(HEX(DISTINCT v0.c0)))  NULLS LAST);
SELECT * FROM rt1, v0 WHERE (((x'0c90')<=((((v0.c4))>((v0.c3)))))) ORDER BY ((((v0.c2)-(rt1.c0))) NOT NULL), ((CASE WHEN 0.07387994214103588 THEN rt1.c0 ELSE v0.c1 END)LIKE(HEX(DISTINCT v0.c0)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt1, vt1 WHERE ((((rt1.c1)GLOB(rt1.c0)) IN ())) ORDER BY (- (((rt1.c0) BETWEEN (vt1.c0) AND (4.33283878E8)))), 'lhg	jÎê¨'  NULLS LAST, vt1.c0 COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1)GLOB(rt1.c0)) IN ())) IS TRUE)  as count FROM vt0, rt1, vt1 ORDER BY (- (((rt1.c0) BETWEEN (vt1.c0) AND (4.33283878E8)))), 'lhg	jÎê¨'  NULLS LAST, vt1.c0 COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1, vt1 WHERE ((((rt1.c1)GLOB(rt1.c0)) IN ())) ORDER BY (- (((rt1.c0) BETWEEN (vt1.c0) AND (4.33283878E8)))), 'lhg	jÎê¨'  NULLS LAST, vt1.c0 COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1)GLOB(rt1.c0)) IN ())) IS TRUE)  as count FROM vt0, rt1, vt1 ORDER BY (- (((rt1.c0) BETWEEN (vt1.c0) AND (4.33283878E8)))), 'lhg	jÎê¨'  NULLS LAST, vt1.c0 COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1, vt1 WHERE ((((rt1.c1)GLOB(rt1.c0)) IN ())) ORDER BY (- (((rt1.c0) BETWEEN (vt1.c0) AND (4.33283878E8)))), 'lhg	jÎê¨'  NULLS LAST, vt1.c0 COLLATE RTRIM  NULLS LAST;
SELECT * FROM v0 WHERE (TRIM(DISTINCT CASE WHEN v0.c3 THEN v0.c4 ELSE v0.c4 END, v0.c3 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT CASE WHEN v0.c3 THEN v0.c4 ELSE v0.c4 END, v0.c3 COLLATE BINARY)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (TRIM(DISTINCT CASE WHEN v0.c3 THEN v0.c4 ELSE v0.c4 END, v0.c3 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT CASE WHEN v0.c3 THEN v0.c4 ELSE v0.c4 END, v0.c3 COLLATE BINARY)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (TRIM(DISTINCT CASE WHEN v0.c3 THEN v0.c4 ELSE v0.c4 END, v0.c3 COLLATE BINARY));
SELECT ALL * FROM rt1 NATURAL JOIN vt0 WHERE (CAST((rt1.c1 IN ()) AS INTEGER)) ORDER BY ((((rt1.c0) NOT NULL))>(((0Xffffffff9cd9a418)=(rt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt1.c1 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0 ORDER BY ((((rt1.c0) NOT NULL))>(((0xffffffff9cd9a418)==(rt1.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM rt1 NATURAL JOIN vt0 WHERE (CAST((rt1.c1 IN ()) AS INTEGER)) ORDER BY ((((rt1.c0) NOT NULL))>(((0Xffffffff9cd9a418)=(rt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt1.c1 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0 ORDER BY ((((rt1.c0) NOT NULL))>(((0xffffffff9cd9a418)==(rt1.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM rt1 NATURAL JOIN vt0 WHERE (CAST((rt1.c1 IN ()) AS INTEGER)) ORDER BY ((((rt1.c0) NOT NULL))>(((0Xffffffff9cd9a418)=(rt1.c0)))) ASC  NULLS LAST;
SELECT * FROM vt1, vt0 INNER JOIN rt1 ON CASE WHEN CASE WHEN vt0.c0 THEN rt1.c2 END THEN ((rt1.c2)IS NOT(v0.c4)) END FULL OUTER JOIN v0 ON CASE vt1.c0  WHEN ((rt1.c1)>=(rt1.c2)) THEN CASE v0.c2  WHEN vt1.c0 THEN vt1.c0 END WHEN ((v0.c2)*(rt1.c1)) THEN (+ (v0.c2)) WHEN ((vt1.c0) BETWEEN (v0.c4) AND (v0.c0)) THEN (+ (vt1.c0)) ELSE v0.c2 COLLATE NOCASE END WHERE ('') ORDER BY ((((('-2057298540')) NOT BETWEEN ((v0.c4)) AND ((v0.c1))))+(rt1.c0 COLLATE NOCASE)) ASC  NULLS LAST, ((((v0.c0))>((rt1.c2))) IN (vt1.c0, ((rt1.c1) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1, vt0 INNER JOIN rt1 ON CASE WHEN CASE WHEN vt0.c0 THEN rt1.c2 END THEN ((rt1.c2)IS NOT(v0.c4)) END FULL OUTER JOIN v0 ON CASE vt1.c0  WHEN ((rt1.c1)>=(rt1.c2)) THEN CASE v0.c2  WHEN vt1.c0 THEN vt1.c0 END WHEN ((v0.c2)*(rt1.c1)) THEN (+ (v0.c2)) WHEN ((vt1.c0) BETWEEN (v0.c4) AND (v0.c0)) THEN (+ (vt1.c0)) ELSE v0.c2 COLLATE NOCASE END ORDER BY ((((('-2057298540')) NOT BETWEEN ((v0.c4)) AND ((v0.c1))))+(rt1.c0 COLLATE NOCASE)) ASC  NULLS LAST, ((((v0.c0))>((rt1.c2))) IN (vt1.c0, ((rt1.c1) ISNULL))) DESC);
SELECT * FROM vt1, vt0 INNER JOIN rt1 ON CASE WHEN CASE WHEN vt0.c0 THEN rt1.c2 END THEN ((rt1.c2)IS NOT(v0.c4)) END FULL OUTER JOIN v0 ON CASE vt1.c0  WHEN ((rt1.c1)>=(rt1.c2)) THEN CASE v0.c2  WHEN vt1.c0 THEN vt1.c0 END WHEN ((v0.c2)*(rt1.c1)) THEN (+ (v0.c2)) WHEN ((vt1.c0) BETWEEN (v0.c4) AND (v0.c0)) THEN (+ (vt1.c0)) ELSE v0.c2 COLLATE NOCASE END WHERE ('') ORDER BY ((((('-2057298540')) NOT BETWEEN ((v0.c4)) AND ((v0.c1))))+(rt1.c0 COLLATE NOCASE)) ASC  NULLS LAST, ((((v0.c0))>((rt1.c2))) IN (vt1.c0, ((rt1.c1) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1, vt0 INNER JOIN rt1 ON CASE WHEN CASE WHEN vt0.c0 THEN rt1.c2 END THEN ((rt1.c2)IS NOT(v0.c4)) END FULL OUTER JOIN v0 ON CASE vt1.c0  WHEN ((rt1.c1)>=(rt1.c2)) THEN CASE v0.c2  WHEN vt1.c0 THEN vt1.c0 END WHEN ((v0.c2)*(rt1.c1)) THEN (+ (v0.c2)) WHEN ((vt1.c0) BETWEEN (v0.c4) AND (v0.c0)) THEN (+ (vt1.c0)) ELSE v0.c2 COLLATE NOCASE END ORDER BY ((((('-2057298540')) NOT BETWEEN ((v0.c4)) AND ((v0.c1))))+(rt1.c0 COLLATE NOCASE)) ASC  NULLS LAST, ((((v0.c0))>((rt1.c2))) IN (vt1.c0, ((rt1.c1) ISNULL))) DESC);
SELECT ALL * FROM rt1, vt1, v0 WHERE (json_type(((rt1.c2) BETWEEN (vt1.c0) AND (v0.c1)))) ORDER BY CAST(0.4235929836962534 AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_type(((rt1.c2) BETWEEN (vt1.c0) AND (v0.c1)))) IS TRUE)  as count FROM rt1, vt1, v0 ORDER BY CAST(0.4235929836962534 AS BLOB) ASC  NULLS LAST);
SELECT ALL * FROM rt1, vt1, v0 WHERE (json_type(((rt1.c2) BETWEEN (vt1.c0) AND (v0.c1)))) ORDER BY CAST(0.4235929836962534 AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_type(((rt1.c2) BETWEEN (vt1.c0) AND (v0.c1)))) IS TRUE)  as count FROM rt1, vt1, v0 ORDER BY CAST(0.4235929836962534 AS BLOB) ASC  NULLS LAST);
SELECT ALL * FROM rt1, vt1, v0 WHERE (json_type(((rt1.c2) BETWEEN (vt1.c0) AND (v0.c1)))) ORDER BY CAST(0.4235929836962534 AS BLOB) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (((json_remove(v0.c2, rt1.c2, v0.c3, rt1.c2)) NOT BETWEEN (((((v0.c0)AND(v0.c1)))OR(rt1.c1))) AND (((rt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((json_remove(v0.c2, rt1.c2, v0.c3, rt1.c2)) NOT BETWEEN (((((v0.c0)AND(v0.c1)))OR(rt1.c1))) AND (((rt1.c0) NOTNULL)))) IS TRUE)  as count FROM rt1, v0);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (((json_remove(v0.c2, rt1.c2, v0.c3, rt1.c2)) NOT BETWEEN (((((v0.c0)AND(v0.c1)))OR(rt1.c1))) AND (((rt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((json_remove(v0.c2, rt1.c2, v0.c3, rt1.c2)) NOT BETWEEN (((((v0.c0)AND(v0.c1)))OR(rt1.c1))) AND (((rt1.c0) NOTNULL)))) IS TRUE)  as count FROM rt1, v0);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt1 ON ((((vt1.c0)IS NOT(vt1.c0)))-(LIKELY(rt1.c0))) RIGHT OUTER JOIN vt0 ON CAST((((rt1.c0))==((vt1.c0))) AS REAL) WHERE (((((vt0.c0) BETWEEN (rt1.c1) AND (vt1.c0))) BETWEEN (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) AND (((((vt1.c0)OR('„πª%jb<o\f|')))AND(rt1.c0))))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (rt1.c1) AND (vt1.c0))) BETWEEN (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) AND (((((vt1.c0)OR('„πª%jb<o\f|')))AND(rt1.c0))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt1 ON ((((vt1.c0)IS NOT(vt1.c0)))-(LIKELY(rt1.c0))) RIGHT OUTER JOIN vt0 ON CAST((((rt1.c0))=((vt1.c0))) AS REAL) ORDER BY vt1.c0);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt1 ON ((((vt1.c0)IS NOT(vt1.c0)))-(LIKELY(rt1.c0))) RIGHT OUTER JOIN vt0 ON CAST((((rt1.c0))==((vt1.c0))) AS REAL) WHERE (((((vt0.c0) BETWEEN (rt1.c1) AND (vt1.c0))) BETWEEN (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) AND (((((vt1.c0)OR('„πª%jb<o\f|')))AND(rt1.c0))))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (rt1.c1) AND (vt1.c0))) BETWEEN (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) AND (((((vt1.c0)OR('„πª%jb<o\f|')))AND(rt1.c0))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt1 ON ((((vt1.c0)IS NOT(vt1.c0)))-(LIKELY(rt1.c0))) RIGHT OUTER JOIN vt0 ON CAST((((rt1.c0))=((vt1.c0))) AS REAL) ORDER BY vt1.c0);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt1 ON ((((vt1.c0)IS NOT(vt1.c0)))-(LIKELY(rt1.c0))) RIGHT OUTER JOIN vt0 ON CAST((((rt1.c0))==((vt1.c0))) AS REAL) WHERE (((((vt0.c0) BETWEEN (rt1.c1) AND (vt1.c0))) BETWEEN (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) AND (((((vt1.c0)OR('„πª%jb<o\f|')))AND(rt1.c0))))) ORDER BY vt1.c0;
SELECT ALL * FROM v0, vt1, vt0 FULL OUTER JOIN rt1 ON (+ (v0.c4)) WHERE (((JULIANDAY(v0.c1, NULL, '188268947')) NOT BETWEEN ((((rt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((v0.c1)))) AND ((((rt1.c1, v0.c0, rt1.c0)) BETWEEN ((v0.c2, v0.c0, rt1.c1)) AND ((v0.c1, v0.c2, rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((JULIANDAY(v0.c1, NULL, '188268947')) NOT BETWEEN ((((rt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((v0.c1)))) AND ((((rt1.c1, v0.c0, rt1.c0)) BETWEEN ((v0.c2, v0.c0, rt1.c1)) AND ((v0.c1, v0.c2, rt1.c1)))))) IS TRUE)  as count FROM v0, vt1, vt0 FULL OUTER JOIN rt1 ON (+ (v0.c4)));
SELECT ALL * FROM v0, vt1, vt0 FULL OUTER JOIN rt1 ON (+ (v0.c4)) WHERE (((JULIANDAY(v0.c1, NULL, '188268947')) NOT BETWEEN ((((rt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((v0.c1)))) AND ((((rt1.c1, v0.c0, rt1.c0)) BETWEEN ((v0.c2, v0.c0, rt1.c1)) AND ((v0.c1, v0.c2, rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((JULIANDAY(v0.c1, NULL, '188268947')) NOT BETWEEN ((((rt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((v0.c1)))) AND ((((rt1.c1, v0.c0, rt1.c0)) BETWEEN ((v0.c2, v0.c0, rt1.c1)) AND ((v0.c1, v0.c2, rt1.c1)))))) IS TRUE)  as count FROM v0, vt1, vt0 FULL OUTER JOIN rt1 ON (+ (v0.c4)));
SELECT ALL * FROM v0, vt1, vt0 FULL OUTER JOIN rt1 ON (+ (v0.c4)) WHERE (((JULIANDAY(v0.c1, NULL, '188268947')) NOT BETWEEN ((((rt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((v0.c1)))) AND ((((rt1.c1, v0.c0, rt1.c0)) BETWEEN ((v0.c2, v0.c0, rt1.c1)) AND ((v0.c1, v0.c2, rt1.c1))))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((x'1804') NOT BETWEEN (rt1.c0) AND (rt1.c2)))/((+ (rt1.c0))))) ORDER BY ((((rt1.c1) BETWEEN (0Xfffffffff357a4a6) AND (rt1.c2))) IS TRUE) DESC  NULLS LAST, ((TRIM(DISTINCT rt1.c0)) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'1804') NOT BETWEEN (rt1.c0) AND (rt1.c2)))/((+ (rt1.c0))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c1) BETWEEN (0Xfffffffff357a4a6) AND (rt1.c2))) IS TRUE) DESC  NULLS LAST, ((TRIM(DISTINCT rt1.c0)) NOT NULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((x'1804') NOT BETWEEN (rt1.c0) AND (rt1.c2)))/((+ (rt1.c0))))) ORDER BY ((((rt1.c1) BETWEEN (0Xfffffffff357a4a6) AND (rt1.c2))) IS TRUE) DESC  NULLS LAST, ((TRIM(DISTINCT rt1.c0)) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'1804') NOT BETWEEN (rt1.c0) AND (rt1.c2)))/((+ (rt1.c0))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c1) BETWEEN (0Xfffffffff357a4a6) AND (rt1.c2))) IS TRUE) DESC  NULLS LAST, ((TRIM(DISTINCT rt1.c0)) NOT NULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((x'1804') NOT BETWEEN (rt1.c0) AND (rt1.c2)))/((+ (rt1.c0))))) ORDER BY ((((rt1.c1) BETWEEN (0Xfffffffff357a4a6) AND (rt1.c2))) IS TRUE) DESC  NULLS LAST, ((TRIM(DISTINCT rt1.c0)) NOT NULL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt1 ON CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((rt1.c1) BETWEEN (rt1.c1) AND (vt1.c0)) WHEN CASE rt1.c0  WHEN 0.843431077023023 THEN vt1.c0 END THEN CAST(rt1.c0 AS NUMERIC) WHEN rt1.c1 THEN (((rt1.c0, x'f586', rt1.c1)) BETWEEN ((rt1.c0, rt1.c0, rt1.c2)) AND ((rt1.c0, rt1.c0, rt1.c2))) END WHERE (CASE WHEN json_patch(rt1.c1, rt1.c2) THEN ((((rt1.c2)AND(rt1.c0)))AND(rt1.c1)) WHEN ((rt1.c0) NOTNULL) THEN (rt1.c0 IN ()) WHEN ((((vt1.c0)AND(rt1.c1)))AND(rt1.c2)) THEN ((rt1.c0)!=(rt1.c2)) ELSE ((((((((vt1.c0)OR(rt1.c2)))AND(vt1.c0)))OR(rt1.c2)))AND(rt1.c1)) END) ORDER BY CASE ((rt1.c1) NOT BETWEEN (rt1.c0) AND (1612175085))  WHEN CASE rt1.c1  WHEN vt1.c0 THEN rt1.c2 END THEN ((rt1.c2)=('1569025495')) ELSE ((rt1.c2)<>(vt1.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN json_patch(rt1.c1, rt1.c2) THEN ((((rt1.c2)AND(rt1.c0)))AND(rt1.c1)) WHEN ((rt1.c0) NOTNULL) THEN (rt1.c0 IN ()) WHEN ((((vt1.c0)AND(rt1.c1)))AND(rt1.c2)) THEN ((rt1.c0)<>(rt1.c2)) ELSE ((((((((vt1.c0)OR(rt1.c2)))AND(vt1.c0)))OR(rt1.c2)))AND(rt1.c1)) END) IS TRUE)  as count FROM rt1 NOT INDEXED LEFT OUTER JOIN vt1 ON CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((rt1.c1) BETWEEN (rt1.c1) AND (vt1.c0)) WHEN CASE rt1.c0  WHEN 0.843431077023023 THEN vt1.c0 END THEN CAST(rt1.c0 AS NUMERIC) WHEN rt1.c1 THEN (((rt1.c0, x'f586', rt1.c1)) BETWEEN ((rt1.c0, rt1.c0, rt1.c2)) AND ((rt1.c0, rt1.c0, rt1.c2))) END ORDER BY CASE ((rt1.c1) NOT BETWEEN (rt1.c0) AND (1612175085))  WHEN CASE rt1.c1  WHEN vt1.c0 THEN rt1.c2 END THEN ((rt1.c2)=('1569025495')) ELSE ((rt1.c2)<>(vt1.c0)) END DESC);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt1 ON CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((rt1.c1) BETWEEN (rt1.c1) AND (vt1.c0)) WHEN CASE rt1.c0  WHEN 0.843431077023023 THEN vt1.c0 END THEN CAST(rt1.c0 AS NUMERIC) WHEN rt1.c1 THEN (((rt1.c0, x'f586', rt1.c1)) BETWEEN ((rt1.c0, rt1.c0, rt1.c2)) AND ((rt1.c0, rt1.c0, rt1.c2))) END WHERE (CASE WHEN json_patch(rt1.c1, rt1.c2) THEN ((((rt1.c2)AND(rt1.c0)))AND(rt1.c1)) WHEN ((rt1.c0) NOTNULL) THEN (rt1.c0 IN ()) WHEN ((((vt1.c0)AND(rt1.c1)))AND(rt1.c2)) THEN ((rt1.c0)!=(rt1.c2)) ELSE ((((((((vt1.c0)OR(rt1.c2)))AND(vt1.c0)))OR(rt1.c2)))AND(rt1.c1)) END) ORDER BY CASE ((rt1.c1) NOT BETWEEN (rt1.c0) AND (1612175085))  WHEN CASE rt1.c1  WHEN vt1.c0 THEN rt1.c2 END THEN ((rt1.c2)=('1569025495')) ELSE ((rt1.c2)<>(vt1.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN json_patch(rt1.c1, rt1.c2) THEN ((((rt1.c2)AND(rt1.c0)))AND(rt1.c1)) WHEN ((rt1.c0) NOTNULL) THEN (rt1.c0 IN ()) WHEN ((((vt1.c0)AND(rt1.c1)))AND(rt1.c2)) THEN ((rt1.c0)<>(rt1.c2)) ELSE ((((((((vt1.c0)OR(rt1.c2)))AND(vt1.c0)))OR(rt1.c2)))AND(rt1.c1)) END) IS TRUE)  as count FROM rt1 NOT INDEXED LEFT OUTER JOIN vt1 ON CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((rt1.c1) BETWEEN (rt1.c1) AND (vt1.c0)) WHEN CASE rt1.c0  WHEN 0.843431077023023 THEN vt1.c0 END THEN CAST(rt1.c0 AS NUMERIC) WHEN rt1.c1 THEN (((rt1.c0, x'f586', rt1.c1)) BETWEEN ((rt1.c0, rt1.c0, rt1.c2)) AND ((rt1.c0, rt1.c0, rt1.c2))) END ORDER BY CASE ((rt1.c1) NOT BETWEEN (rt1.c0) AND (1612175085))  WHEN CASE rt1.c1  WHEN vt1.c0 THEN rt1.c2 END THEN ((rt1.c2)=('1569025495')) ELSE ((rt1.c2)<>(vt1.c0)) END DESC);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt1 ON CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((rt1.c1) BETWEEN (rt1.c1) AND (vt1.c0)) WHEN CASE rt1.c0  WHEN 0.843431077023023 THEN vt1.c0 END THEN CAST(rt1.c0 AS NUMERIC) WHEN rt1.c1 THEN (((rt1.c0, x'f586', rt1.c1)) BETWEEN ((rt1.c0, rt1.c0, rt1.c2)) AND ((rt1.c0, rt1.c0, rt1.c2))) END WHERE (CASE WHEN json_patch(rt1.c1, rt1.c2) THEN ((((rt1.c2)AND(rt1.c0)))AND(rt1.c1)) WHEN ((rt1.c0) NOTNULL) THEN (rt1.c0 IN ()) WHEN ((((vt1.c0)AND(rt1.c1)))AND(rt1.c2)) THEN ((rt1.c0)!=(rt1.c2)) ELSE ((((((((vt1.c0)OR(rt1.c2)))AND(vt1.c0)))OR(rt1.c2)))AND(rt1.c1)) END) ORDER BY CASE ((rt1.c1) NOT BETWEEN (rt1.c0) AND (1612175085))  WHEN CASE rt1.c1  WHEN vt1.c0 THEN rt1.c2 END THEN ((rt1.c2)=('1569025495')) ELSE ((rt1.c2)<>(vt1.c0)) END DESC;
SELECT * FROM v0, vt1 CROSS JOIN vt0 ON ((v0.c3)IS NOT(((v0.c4) BETWEEN (rt1.c1) AND (rt1.c2)))) LEFT OUTER JOIN rt1 ON (((((v0.c2)) BETWEEN ((v0.c4)) AND (('')))) IS TRUE) WHERE ((~ (((v0.c0)>>(rt1.c1))))) ORDER BY ((((rt1.c2)OR(x'')))AND(vt1.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((~ (((v0.c0)>>(rt1.c1))))) IS TRUE)  as count FROM v0 NOT INDEXED, vt1 CROSS JOIN vt0 ON ((v0.c3)IS NOT(((v0.c4) BETWEEN (rt1.c1) AND (rt1.c2)))) LEFT OUTER JOIN rt1 ON (((((v0.c2)) BETWEEN ((v0.c4)) AND (('')))) IS TRUE) ORDER BY ((((rt1.c2)OR(x'')))AND(vt1.c0)) COLLATE BINARY ASC);
SELECT * FROM v0, vt1 CROSS JOIN vt0 ON ((v0.c3)IS NOT(((v0.c4) BETWEEN (rt1.c1) AND (rt1.c2)))) LEFT OUTER JOIN rt1 ON (((((v0.c2)) BETWEEN ((v0.c4)) AND (('')))) IS TRUE) WHERE ((~ (((v0.c0)>>(rt1.c1))))) ORDER BY ((((rt1.c2)OR(x'')))AND(vt1.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((~ (((v0.c0)>>(rt1.c1))))) IS TRUE)  as count FROM v0 NOT INDEXED, vt1 CROSS JOIN vt0 ON ((v0.c3)IS NOT(((v0.c4) BETWEEN (rt1.c1) AND (rt1.c2)))) LEFT OUTER JOIN rt1 ON (((((v0.c2)) BETWEEN ((v0.c4)) AND (('')))) IS TRUE) ORDER BY ((((rt1.c2)OR(x'')))AND(vt1.c0)) COLLATE BINARY ASC);
SELECT * FROM v0, vt1 CROSS JOIN vt0 ON ((v0.c3)IS NOT(((v0.c4) BETWEEN (rt1.c1) AND (rt1.c2)))) LEFT OUTER JOIN rt1 ON (((((v0.c2)) BETWEEN ((v0.c4)) AND (('')))) IS TRUE) WHERE ((~ (((v0.c0)>>(rt1.c1))))) ORDER BY ((((rt1.c2)OR(x'')))AND(vt1.c0)) COLLATE BINARY ASC;
SELECT ALL * FROM v0 LEFT OUTER JOIN vt1 ON ((((CASE vt1.c0  WHEN v0.c0 THEN 0.339498729249608 END)AND(CAST(v0.c1 AS TEXT))))AND((- (vt0.c0)))) INNER JOIN vt0 ON UPPER(((rt1.c1)AND(rt1.c1))) FULL OUTER JOIN rt1 ON ((rt1.c0 IN ()) IN ()) WHERE (((v0.c2) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((v0.c2) IS FALSE)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON ((((CASE vt1.c0  WHEN v0.c0 THEN 0.339498729249608 END)AND(CAST(v0.c1 AS TEXT))))AND((- (vt0.c0)))) INNER JOIN vt0 ON UPPER(((rt1.c1)AND(rt1.c1))) FULL OUTER JOIN rt1 ON ((rt1.c0 IN ()) IN ()));
SELECT ALL * FROM v0 LEFT OUTER JOIN vt1 ON ((((CASE vt1.c0  WHEN v0.c0 THEN 0.339498729249608 END)AND(CAST(v0.c1 AS TEXT))))AND((- (vt0.c0)))) INNER JOIN vt0 ON UPPER(((rt1.c1)AND(rt1.c1))) FULL OUTER JOIN rt1 ON ((rt1.c0 IN ()) IN ()) WHERE (((v0.c2) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((v0.c2) IS FALSE)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON ((((CASE vt1.c0  WHEN v0.c0 THEN 0.339498729249608 END)AND(CAST(v0.c1 AS TEXT))))AND((- (vt0.c0)))) INNER JOIN vt0 ON UPPER(((rt1.c1)AND(rt1.c1))) FULL OUTER JOIN rt1 ON ((rt1.c0 IN ()) IN ()));
SELECT COUNT(*) FROM vt0, rt1 WHERE (((LOWER(0.5027441360332724)) BETWEEN (((rt1.c0) BETWEEN (rt1.c1) AND (vt0.c0))) AND (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 WHEN vt0.c0 THEN NULL WHEN 'lz' THEN '' ELSE rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((LOWER(0.5027441360332724)) BETWEEN (((rt1.c0) BETWEEN (rt1.c1) AND (vt0.c0))) AND (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 WHEN vt0.c0 THEN NULL WHEN 'lz' THEN '' ELSE rt1.c0 END))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((LOWER(0.5027441360332724)) BETWEEN (((rt1.c0) BETWEEN (rt1.c1) AND (vt0.c0))) AND (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 WHEN vt0.c0 THEN NULL WHEN 'lz' THEN '' ELSE rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((LOWER(0.5027441360332724)) BETWEEN (((rt1.c0) BETWEEN (rt1.c1) AND (vt0.c0))) AND (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 WHEN vt0.c0 THEN NULL WHEN 'lz' THEN '' ELSE rt1.c0 END))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((LOWER(0.5027441360332724)) BETWEEN (((rt1.c0) BETWEEN (rt1.c1) AND (vt0.c0))) AND (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 WHEN vt0.c0 THEN NULL WHEN 'lz' THEN '' ELSE rt1.c0 END)));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (NOT (((v0.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (NOT (((v0.c1) NOTNULL))));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (NOT (((v0.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (NOT (((v0.c1) NOTNULL))));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (NOT (((v0.c1) NOTNULL)));
SELECT COUNT(*) FROM v0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt1);
SELECT COUNT(*) FROM v0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt1);
SELECT COUNT(*) FROM v0, vt1 WHERE (NULL);
SELECT * FROM v0, vt1, vt0 WHERE (((v0.c3) NOT BETWEEN (v0.c0) AND (v0.c2)) COLLATE NOCASE) ORDER BY ((x'')+(v0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c3) NOT BETWEEN (v0.c0) AND (v0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM v0 NOT INDEXED, vt1, vt0 ORDER BY ((x'')+(v0.c0)) DESC);
SELECT * FROM v0, vt1, vt0 WHERE (((v0.c3) NOT BETWEEN (v0.c0) AND (v0.c2)) COLLATE NOCASE) ORDER BY ((x'')+(v0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c3) NOT BETWEEN (v0.c0) AND (v0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM v0 NOT INDEXED, vt1, vt0 ORDER BY ((x'')+(v0.c0)) DESC);
SELECT * FROM v0, vt1, vt0 WHERE (((v0.c3) NOT BETWEEN (v0.c0) AND (v0.c2)) COLLATE NOCASE) ORDER BY ((x'')+(v0.c0)) DESC;
SELECT ALL * FROM v0, rt1 NATURAL JOIN vt0 WHERE ((- (NULLIF(rt1.c0, vt0.c0)))) ORDER BY rt1.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (NULLIF(rt1.c0, vt0.c0)))) IS TRUE)  as count FROM v0, rt1 NOT INDEXED NATURAL JOIN vt0 ORDER BY rt1.c1 DESC);
SELECT ALL * FROM v0, rt1 NATURAL JOIN vt0 WHERE ((- (NULLIF(rt1.c0, vt0.c0)))) ORDER BY rt1.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (NULLIF(rt1.c0, vt0.c0)))) IS TRUE)  as count FROM v0, rt1 NOT INDEXED NATURAL JOIN vt0 ORDER BY rt1.c1 DESC);
SELECT ALL * FROM v0, rt1 NATURAL JOIN vt0 WHERE ((- (NULLIF(rt1.c0, vt0.c0)))) ORDER BY rt1.c1 DESC;
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0)<<(vt1.c0))) BETWEEN (((vt0.c0)|(vt1.c0))) AND (CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<<(vt1.c0))) BETWEEN (((vt0.c0)|(vt1.c0))) AND (CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0)<<(vt1.c0))) BETWEEN (((vt0.c0)|(vt1.c0))) AND (CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<<(vt1.c0))) BETWEEN (((vt0.c0)|(vt1.c0))) AND (CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0)<<(vt1.c0))) BETWEEN (((vt0.c0)|(vt1.c0))) AND (CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)));
SELECT * FROM vt0, v0, vt1, rt1 WHERE (vt1.c0) ORDER BY (((rt1.c2)>>(v0.c3)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, v0, vt1, rt1 ORDER BY (((rt1.c2)>>(v0.c3)) IN ()) DESC  NULLS FIRST);
SELECT * FROM vt0, v0, vt1, rt1 WHERE (vt1.c0) ORDER BY (((rt1.c2)>>(v0.c3)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, v0, vt1, rt1 ORDER BY (((rt1.c2)>>(v0.c3)) IN ()) DESC  NULLS FIRST);
SELECT * FROM vt0, v0, vt1, rt1 WHERE (vt1.c0) ORDER BY (((rt1.c2)>>(v0.c3)) IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM v0, rt1 WHERE (CASE (rt1.c2 IN ())  WHEN ((rt1.c2)GLOB(v0.c1)) THEN ((v0.c1)>=(v0.c1)) WHEN ((rt1.c2)|(v0.c1)) THEN (((v0.c3))>((v0.c3))) WHEN v0.c4 COLLATE NOCASE THEN v0.c0 COLLATE BINARY END) ORDER BY ((((CASE rt1.c0  WHEN v0.c1 THEN v0.c2 WHEN v0.c3 THEN v0.c0 WHEN v0.c1 THEN NULL ELSE v0.c1 END)OR(rt1.c1)))AND(((v0.c3) IS TRUE)))  NULLS LAST, CAST((+ (rt1.c2)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((CASE (rt1.c2 IN ())  WHEN ((rt1.c2)GLOB(v0.c1)) THEN ((v0.c1)>=(v0.c1)) WHEN ((rt1.c2)|(v0.c1)) THEN (((v0.c3))>((v0.c3))) WHEN v0.c4 COLLATE NOCASE THEN v0.c0 COLLATE BINARY END) IS TRUE)  as count FROM v0, rt1 ORDER BY ((((CASE rt1.c0  WHEN v0.c1 THEN v0.c2 WHEN v0.c3 THEN v0.c0 WHEN v0.c1 THEN NULL ELSE v0.c1 END)OR(rt1.c1)))AND(((v0.c3) IS TRUE)))  NULLS LAST, CAST((+ (rt1.c2)) AS INTEGER) ASC);
SELECT ALL * FROM v0, rt1 WHERE (CASE (rt1.c2 IN ())  WHEN ((rt1.c2)GLOB(v0.c1)) THEN ((v0.c1)>=(v0.c1)) WHEN ((rt1.c2)|(v0.c1)) THEN (((v0.c3))>((v0.c3))) WHEN v0.c4 COLLATE NOCASE THEN v0.c0 COLLATE BINARY END) ORDER BY ((((CASE rt1.c0  WHEN v0.c1 THEN v0.c2 WHEN v0.c3 THEN v0.c0 WHEN v0.c1 THEN NULL ELSE v0.c1 END)OR(rt1.c1)))AND(((v0.c3) IS TRUE)))  NULLS LAST, CAST((+ (rt1.c2)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((CASE (rt1.c2 IN ())  WHEN ((rt1.c2)GLOB(v0.c1)) THEN ((v0.c1)>=(v0.c1)) WHEN ((rt1.c2)|(v0.c1)) THEN (((v0.c3))>((v0.c3))) WHEN v0.c4 COLLATE NOCASE THEN v0.c0 COLLATE BINARY END) IS TRUE)  as count FROM v0, rt1 ORDER BY ((((CASE rt1.c0  WHEN v0.c1 THEN v0.c2 WHEN v0.c3 THEN v0.c0 WHEN v0.c1 THEN NULL ELSE v0.c1 END)OR(rt1.c1)))AND(((v0.c3) IS TRUE)))  NULLS LAST, CAST((+ (rt1.c2)) AS INTEGER) ASC);
SELECT ALL * FROM v0, rt1 WHERE (CASE (rt1.c2 IN ())  WHEN ((rt1.c2)GLOB(v0.c1)) THEN ((v0.c1)>=(v0.c1)) WHEN ((rt1.c2)|(v0.c1)) THEN (((v0.c3))>((v0.c3))) WHEN v0.c4 COLLATE NOCASE THEN v0.c0 COLLATE BINARY END) ORDER BY ((((CASE rt1.c0  WHEN v0.c1 THEN v0.c2 WHEN v0.c3 THEN v0.c0 WHEN v0.c1 THEN NULL ELSE v0.c1 END)OR(rt1.c1)))AND(((v0.c3) IS TRUE)))  NULLS LAST, CAST((+ (rt1.c2)) AS INTEGER) ASC;
SELECT * FROM rt1, vt1, vt0 WHERE (((rt1.c1)<=(rt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)<=(rt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt1, vt0);
SELECT * FROM rt1, vt1, vt0 WHERE (((rt1.c1)<=(rt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)<=(rt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt1, vt0);
SELECT * FROM rt1, vt1, vt0 WHERE (((rt1.c1)<=(rt1.c0)) COLLATE RTRIM);
SELECT * FROM rt1, vt0, vt1, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, vt0, vt1, v0);
SELECT * FROM rt1, vt0, vt1, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, vt0, vt1, v0);
SELECT * FROM rt1, vt0, vt1, v0 WHERE (NULL);
SELECT * FROM v0, vt1 WHERE (((CASE v0.c4  WHEN v0.c2 THEN v0.c3 ELSE v0.c2 END) IS FALSE)) ORDER BY 0.8986540865162633 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c4  WHEN v0.c2 THEN v0.c3 ELSE v0.c2 END) IS FALSE)) IS TRUE)  as count FROM v0, vt1 ORDER BY 0.8986540865162633 DESC  NULLS FIRST);
SELECT * FROM v0, vt1 WHERE (((CASE v0.c4  WHEN v0.c2 THEN v0.c3 ELSE v0.c2 END) IS FALSE)) ORDER BY 0.8986540865162633 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c4  WHEN v0.c2 THEN v0.c3 ELSE v0.c2 END) IS FALSE)) IS TRUE)  as count FROM v0, vt1 ORDER BY 0.8986540865162633 DESC  NULLS FIRST);
SELECT * FROM v0, vt1 WHERE (((CASE v0.c4  WHEN v0.c2 THEN v0.c3 ELSE v0.c2 END) IS FALSE)) ORDER BY 0.8986540865162633 DESC  NULLS FIRST;
SELECT * FROM vt1, v0 WHERE (x'6d0807f4');
SELECT SUM(count) FROM (SELECT ALL ((x'6d0807f4') IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE (x'6d0807f4');
SELECT SUM(count) FROM (SELECT ALL ((x'6d0807f4') IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE (x'6d0807f4');
SELECT COUNT(*) FROM v0, vt1 WHERE (0.33528971124127316) ORDER BY (((v0.c0 IN (v0.c1, vt1.c0))) NOT BETWEEN (v0.c4) AND (v0.c3 COLLATE BINARY)) DESC, CAST(vt1.c0 AS INTEGER) ASC, (NOT (v0.c4 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((0.33528971124127316) IS TRUE)  as count FROM v0, vt1 ORDER BY (((v0.c0 IN (v0.c1, vt1.c0))) NOT BETWEEN (v0.c4) AND (v0.c3 COLLATE BINARY)) DESC, CAST(vt1.c0 AS INTEGER) ASC, (NOT (v0.c4 COLLATE BINARY)));
SELECT COUNT(*) FROM v0, vt1 WHERE (0.33528971124127316) ORDER BY (((v0.c0 IN (v0.c1, vt1.c0))) NOT BETWEEN (v0.c4) AND (v0.c3 COLLATE BINARY)) DESC, CAST(vt1.c0 AS INTEGER) ASC, (NOT (v0.c4 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((0.33528971124127316) IS TRUE)  as count FROM v0, vt1 ORDER BY (((v0.c0 IN (v0.c1, vt1.c0))) NOT BETWEEN (v0.c4) AND (v0.c3 COLLATE BINARY)) DESC, CAST(vt1.c0 AS INTEGER) ASC, (NOT (v0.c4 COLLATE BINARY)));
SELECT COUNT(*) FROM v0, vt1 WHERE (0.33528971124127316) ORDER BY (((v0.c0 IN (v0.c1, vt1.c0))) NOT BETWEEN (v0.c4) AND (v0.c3 COLLATE BINARY)) DESC, CAST(vt1.c0 AS INTEGER) ASC, (NOT (v0.c4 COLLATE BINARY));
SELECT ALL COUNT(*) FROM vt1, vt0, v0, rt1 WHERE (((((v0.c1) NOT BETWEEN (v0.c1) AND (rt1.c2)))-(x''))) ORDER BY LTRIM(((rt1.c0)/(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) NOT BETWEEN (v0.c1) AND (rt1.c2)))-(x''))) IS TRUE)  as count FROM vt1, vt0, v0, rt1 ORDER BY LTRIM(((rt1.c0)/(vt0.c0))));
SELECT ALL COUNT(*) FROM vt1, vt0, v0, rt1 WHERE (((((v0.c1) NOT BETWEEN (v0.c1) AND (rt1.c2)))-(x''))) ORDER BY LTRIM(((rt1.c0)/(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) NOT BETWEEN (v0.c1) AND (rt1.c2)))-(x''))) IS TRUE)  as count FROM vt1, vt0, v0, rt1 ORDER BY LTRIM(((rt1.c0)/(vt0.c0))));
SELECT ALL COUNT(*) FROM vt1, vt0, v0, rt1 WHERE (((((v0.c1) NOT BETWEEN (v0.c1) AND (rt1.c2)))-(x''))) ORDER BY LTRIM(((rt1.c0)/(vt0.c0)));
SELECT COUNT(*) FROM vt1, v0, rt1, vt0 WHERE ('-1112234398') ORDER BY 'F+', rt1.c2, ((v0.c4) NOTNULL) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (('-1112234398') IS TRUE)  as count FROM vt1, v0, rt1, vt0 ORDER BY 'F+', rt1.c2, ((v0.c4) NOTNULL) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM vt1, v0, rt1, vt0 WHERE ('-1112234398') ORDER BY 'F+', rt1.c2, ((v0.c4) NOTNULL) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (('-1112234398') IS TRUE)  as count FROM vt1, v0, rt1, vt0 ORDER BY 'F+', rt1.c2, ((v0.c4) NOTNULL) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM vt1, v0, rt1, vt0 WHERE ('-1112234398') ORDER BY 'F+', rt1.c2, ((v0.c4) NOTNULL) COLLATE NOCASE ASC;
SELECT ALL * FROM vt0 WHERE ((('lhg	jÎê¨')IS NOT((vt0.c0 IN ())))) ORDER BY (((vt0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((('lhg	jÎê¨')IS NOT((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((vt0.c0))) DESC);
SELECT ALL * FROM vt0 WHERE ((('lhg	jÎê¨')IS NOT((vt0.c0 IN ())))) ORDER BY (((vt0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((('lhg	jÎê¨')IS NOT((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((vt0.c0))) DESC);
SELECT ALL * FROM vt0 WHERE ((('lhg	jÎê¨')IS NOT((vt0.c0 IN ())))) ORDER BY (((vt0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((vt0.c0))) DESC;
SELECT ALL * FROM vt1 LEFT OUTER JOIN v0 ON (((((v0.c4)AND(v0.c2)))AND(vt1.c0)) IN ()) FULL OUTER JOIN vt0 ON (((('A&')OR(rt1.c0)))AND(((v0.c1) ISNULL))) CROSS JOIN rt1 ON ((v0.c1)LIKE(((rt1.c0)<=(v0.c3)))) WHERE ((((rt1.c2, v0.c0, v0.c0)) NOT BETWEEN (((+ (rt1.c0)), ((v0.c4) NOTNULL), (+ (v0.c4)))) AND ((((v0.c0)LIKE(rt1.c2)), CASE WHEN vt1.c0 THEN v0.c0 END, ((v0.c1)IS(rt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2, v0.c0, v0.c0)) NOT BETWEEN (((+ (rt1.c0)), ((v0.c4) NOTNULL), (+ (v0.c4)))) AND ((((v0.c0)LIKE(rt1.c2)), CASE WHEN vt1.c0 THEN v0.c0 END, ((v0.c1)IS(rt1.c1)))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN v0 ON (((((v0.c4)AND(v0.c2)))AND(vt1.c0)) IN ()) FULL OUTER JOIN vt0 ON (((('A&')OR(rt1.c0)))AND(((v0.c1) ISNULL))) CROSS JOIN rt1 ON ((v0.c1)LIKE(((rt1.c0)<=(v0.c3)))));
SELECT ALL * FROM vt1 LEFT OUTER JOIN v0 ON (((((v0.c4)AND(v0.c2)))AND(vt1.c0)) IN ()) FULL OUTER JOIN vt0 ON (((('A&')OR(rt1.c0)))AND(((v0.c1) ISNULL))) CROSS JOIN rt1 ON ((v0.c1)LIKE(((rt1.c0)<=(v0.c3)))) WHERE ((((rt1.c2, v0.c0, v0.c0)) NOT BETWEEN (((+ (rt1.c0)), ((v0.c4) NOTNULL), (+ (v0.c4)))) AND ((((v0.c0)LIKE(rt1.c2)), CASE WHEN vt1.c0 THEN v0.c0 END, ((v0.c1)IS(rt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2, v0.c0, v0.c0)) NOT BETWEEN (((+ (rt1.c0)), ((v0.c4) NOTNULL), (+ (v0.c4)))) AND ((((v0.c0)LIKE(rt1.c2)), CASE WHEN vt1.c0 THEN v0.c0 END, ((v0.c1)IS(rt1.c1)))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN v0 ON (((((v0.c4)AND(v0.c2)))AND(vt1.c0)) IN ()) FULL OUTER JOIN vt0 ON (((('A&')OR(rt1.c0)))AND(((v0.c1) ISNULL))) CROSS JOIN rt1 ON ((v0.c1)LIKE(((rt1.c0)<=(v0.c3)))));
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((json_valid(vt0.c0), UNLIKELY(rt1.c1), ((rt1.c1) IS FALSE), (+ (rt1.c1)), rt1.c1))==(((rt1.c1 IN ()), UPPER(vt0.c0), CASE WHEN rt1.c2 THEN rt1.c0 END, (rt1.c2 IN ()), rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((json_valid(vt0.c0), UNLIKELY(rt1.c1), ((rt1.c1) IS FALSE), (+ (rt1.c1)), rt1.c1))==(((rt1.c1 IN ()), UPPER(vt0.c0), CASE WHEN rt1.c2 THEN rt1.c0 END, (rt1.c2 IN ()), rt1.c0)))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((json_valid(vt0.c0), UNLIKELY(rt1.c1), ((rt1.c1) IS FALSE), (+ (rt1.c1)), rt1.c1))==(((rt1.c1 IN ()), UPPER(vt0.c0), CASE WHEN rt1.c2 THEN rt1.c0 END, (rt1.c2 IN ()), rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((json_valid(vt0.c0), UNLIKELY(rt1.c1), ((rt1.c1) IS FALSE), (+ (rt1.c1)), rt1.c1))==(((rt1.c1 IN ()), UPPER(vt0.c0), CASE WHEN rt1.c2 THEN rt1.c0 END, (rt1.c2 IN ()), rt1.c0)))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((json_valid(vt0.c0), UNLIKELY(rt1.c1), ((rt1.c1) IS FALSE), (+ (rt1.c1)), rt1.c1))==(((rt1.c1 IN ()), UPPER(vt0.c0), CASE WHEN rt1.c2 THEN rt1.c0 END, (rt1.c2 IN ()), rt1.c0))));
SELECT ALL * FROM vt0, v0, vt1, rt1 WHERE (((((v0.c2) ISNULL))LIKE(0.2716828992440672 COLLATE RTRIM))) ORDER BY (((vt1.c0)) BETWEEN (((v0.c0 IN (rt1.c2, rt1.c0)))) AND (((NOT (''))))) DESC  NULLS FIRST, ((((((v0.c2)AND(vt1.c0)))AND(rt1.c1))) NOTNULL)  NULLS FIRST, ((((v0.c0)||(rt1.c0)))OR(CAST(v0.c3 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((((((v0.c2) ISNULL))LIKE(0.2716828992440672 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0, vt1, rt1 ORDER BY (((vt1.c0)) BETWEEN (((v0.c0 IN (rt1.c2, rt1.c0)))) AND (((NOT (''))))) DESC  NULLS FIRST, ((((((v0.c2)AND(vt1.c0)))AND(rt1.c1))) NOTNULL)  NULLS FIRST, ((((v0.c0)||(rt1.c0)))OR(CAST(v0.c3 AS TEXT))));
SELECT ALL * FROM vt0, v0, vt1, rt1 WHERE (((((v0.c2) ISNULL))LIKE(0.2716828992440672 COLLATE RTRIM))) ORDER BY (((vt1.c0)) BETWEEN (((v0.c0 IN (rt1.c2, rt1.c0)))) AND (((NOT (''))))) DESC  NULLS FIRST, ((((((v0.c2)AND(vt1.c0)))AND(rt1.c1))) NOTNULL)  NULLS FIRST, ((((v0.c0)||(rt1.c0)))OR(CAST(v0.c3 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((((((v0.c2) ISNULL))LIKE(0.2716828992440672 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0, vt1, rt1 ORDER BY (((vt1.c0)) BETWEEN (((v0.c0 IN (rt1.c2, rt1.c0)))) AND (((NOT (''))))) DESC  NULLS FIRST, ((((((v0.c2)AND(vt1.c0)))AND(rt1.c1))) NOTNULL)  NULLS FIRST, ((((v0.c0)||(rt1.c0)))OR(CAST(v0.c3 AS TEXT))));
SELECT ALL * FROM vt0, v0, vt1, rt1 WHERE (((((v0.c2) ISNULL))LIKE(0.2716828992440672 COLLATE RTRIM))) ORDER BY (((vt1.c0)) BETWEEN (((v0.c0 IN (rt1.c2, rt1.c0)))) AND (((NOT (''))))) DESC  NULLS FIRST, ((((((v0.c2)AND(vt1.c0)))AND(rt1.c1))) NOTNULL)  NULLS FIRST, ((((v0.c0)||(rt1.c0)))OR(CAST(v0.c3 AS TEXT)));
SELECT * FROM v0 WHERE (CAST('' COLLATE RTRIM AS NUMERIC)) ORDER BY CAST(v0.c2 COLLATE RTRIM AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST('' COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c2 COLLATE RTRIM AS INTEGER) ASC);
SELECT * FROM v0 WHERE (CAST('' COLLATE RTRIM AS NUMERIC)) ORDER BY CAST(v0.c2 COLLATE RTRIM AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST('' COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c2 COLLATE RTRIM AS INTEGER) ASC);
SELECT * FROM v0 WHERE (CAST('' COLLATE RTRIM AS NUMERIC)) ORDER BY CAST(v0.c2 COLLATE RTRIM AS INTEGER) ASC;
SELECT ALL * FROM v0, vt0 WHERE ((((((vt0.c0))<>((v0.c0))))*(TRIM(DISTINCT v0.c3))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))!=((v0.c0))))*(TRIM(DISTINCT v0.c3)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((((vt0.c0))<>((v0.c0))))*(TRIM(DISTINCT v0.c3))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))!=((v0.c0))))*(TRIM(DISTINCT v0.c3)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((((vt0.c0))<>((v0.c0))))*(TRIM(DISTINCT v0.c3))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) BETWEEN (vt0.c0 COLLATE RTRIM) AND ((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) BETWEEN (vt0.c0 COLLATE RTRIM) AND ((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) BETWEEN (vt0.c0 COLLATE RTRIM) AND ((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) BETWEEN (vt0.c0 COLLATE RTRIM) AND ((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) BETWEEN (vt0.c0 COLLATE RTRIM) AND ((vt0.c0 IN (vt0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c4) NOTNULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c4) NOTNULL)) ISNULL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c4) NOTNULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c4) NOTNULL)) ISNULL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c4) NOTNULL)) ISNULL));
SELECT ALL * FROM rt1 WHERE (CASE WHEN rt1.c1 THEN CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN '1520284716' WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END WHEN 'T^ 	*Ëâ°4' THEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)) WHEN rt1.c2 THEN ((rt1.c0) NOT BETWEEN (0.5213131045545325) AND (rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c1 THEN CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN '1520284716' WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END WHEN 'T^ 	*Ëâ°4' THEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)) WHEN rt1.c2 THEN ((rt1.c0) NOT BETWEEN (0.5213131045545325) AND (rt1.c1)) END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE WHEN rt1.c1 THEN CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN '1520284716' WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END WHEN 'T^ 	*Ëâ°4' THEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)) WHEN rt1.c2 THEN ((rt1.c0) NOT BETWEEN (0.5213131045545325) AND (rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c1 THEN CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN '1520284716' WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END WHEN 'T^ 	*Ëâ°4' THEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)) WHEN rt1.c2 THEN ((rt1.c0) NOT BETWEEN (0.5213131045545325) AND (rt1.c1)) END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE WHEN rt1.c1 THEN CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN '1520284716' WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END WHEN 'T^ 	*Ëâ°4' THEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)) WHEN rt1.c2 THEN ((rt1.c0) NOT BETWEEN (0.5213131045545325) AND (rt1.c1)) END);
SELECT ALL * FROM v0, vt1, vt0 CROSS JOIN rt1 ON '671123915' WHERE ((- (CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM v0, vt1, vt0 CROSS JOIN rt1 ON '671123915');
SELECT ALL * FROM v0, vt1, vt0 CROSS JOIN rt1 ON '671123915' WHERE ((- (CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM v0, vt1, vt0 CROSS JOIN rt1 ON '671123915');
SELECT ALL * FROM v0, vt1, vt0 CROSS JOIN rt1 ON '671123915' WHERE ((- (CAST(vt1.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM vt1, v0 RIGHT OUTER JOIN rt1 ON (((((v0.c3, vt1.c0, rt1.c1))<>((v0.c2, v0.c0, rt1.c2))))|('mM')) WHERE (CAST(CAST(v0.c1 AS INTEGER) AS REAL)) ORDER BY (v0.c3 COLLATE NOCASE IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(v0.c1 AS INTEGER) AS REAL)) IS TRUE)  as count FROM vt1, v0 RIGHT OUTER JOIN rt1 ON (((((v0.c3, vt1.c0, rt1.c1))!=((v0.c2, v0.c0, rt1.c2))))|('mM')) ORDER BY (v0.c3 COLLATE NOCASE IN ()) ASC);
SELECT ALL COUNT(*) FROM vt1, v0 RIGHT OUTER JOIN rt1 ON (((((v0.c3, vt1.c0, rt1.c1))<>((v0.c2, v0.c0, rt1.c2))))|('mM')) WHERE (CAST(CAST(v0.c1 AS INTEGER) AS REAL)) ORDER BY (v0.c3 COLLATE NOCASE IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(v0.c1 AS INTEGER) AS REAL)) IS TRUE)  as count FROM vt1, v0 RIGHT OUTER JOIN rt1 ON (((((v0.c3, vt1.c0, rt1.c1))!=((v0.c2, v0.c0, rt1.c2))))|('mM')) ORDER BY (v0.c3 COLLATE NOCASE IN ()) ASC);
SELECT ALL COUNT(*) FROM vt1, v0 RIGHT OUTER JOIN rt1 ON (((((v0.c3, vt1.c0, rt1.c1))<>((v0.c2, v0.c0, rt1.c2))))|('mM')) WHERE (CAST(CAST(v0.c1 AS INTEGER) AS REAL)) ORDER BY (v0.c3 COLLATE NOCASE IN ()) ASC;
SELECT COUNT(*) FROM rt1 WHERE (TRIM(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (TRIM(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (TRIM(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2))));
SELECT ALL COUNT(*) FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (x'');
SELECT * FROM rt1 INNER JOIN vt1 ON ((((rt1.c0 IN ())))==((rt1.c2))) WHERE (((rt1.c0 IN ()) IN (NULL, (((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((vt1.c0)))))) ORDER BY (((vt1.c0, rt1.c2, vt1.c0)) NOT BETWEEN ((((rt1.c2) NOT NULL), (((vt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c2))), rt1.c1 COLLATE NOCASE)) AND ((rt1.c1, (('')>=(vt1.c0)), CASE WHEN vt1.c0 THEN rt1.c0 ELSE vt1.c0 END))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 IN ()) IN (NULL, (((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((vt1.c0)))))) IS TRUE)  as count FROM rt1 INNER JOIN vt1 ON ((((rt1.c0 IN ())))=((rt1.c2))) ORDER BY (((vt1.c0, rt1.c2, vt1.c0)) NOT BETWEEN ((((rt1.c2) NOT NULL), (((vt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c2))), rt1.c1 COLLATE NOCASE)) AND ((rt1.c1, (('')>=(vt1.c0)), CASE WHEN vt1.c0 THEN rt1.c0 ELSE vt1.c0 END))) ASC);
SELECT * FROM rt1 INNER JOIN vt1 ON ((((rt1.c0 IN ())))==((rt1.c2))) WHERE (((rt1.c0 IN ()) IN (NULL, (((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((vt1.c0)))))) ORDER BY (((vt1.c0, rt1.c2, vt1.c0)) NOT BETWEEN ((((rt1.c2) NOT NULL), (((vt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c2))), rt1.c1 COLLATE NOCASE)) AND ((rt1.c1, (('')>=(vt1.c0)), CASE WHEN vt1.c0 THEN rt1.c0 ELSE vt1.c0 END))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 IN ()) IN (NULL, (((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((vt1.c0)))))) IS TRUE)  as count FROM rt1 INNER JOIN vt1 ON ((((rt1.c0 IN ())))=((rt1.c2))) ORDER BY (((vt1.c0, rt1.c2, vt1.c0)) NOT BETWEEN ((((rt1.c2) NOT NULL), (((vt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c2))), rt1.c1 COLLATE NOCASE)) AND ((rt1.c1, (('')>=(vt1.c0)), CASE WHEN vt1.c0 THEN rt1.c0 ELSE vt1.c0 END))) ASC);
SELECT * FROM rt1 INNER JOIN vt1 ON ((((rt1.c0 IN ())))==((rt1.c2))) WHERE (((rt1.c0 IN ()) IN (NULL, (((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((vt1.c0)))))) ORDER BY (((vt1.c0, rt1.c2, vt1.c0)) NOT BETWEEN ((((rt1.c2) NOT NULL), (((vt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c2))), rt1.c1 COLLATE NOCASE)) AND ((rt1.c1, (('')>=(vt1.c0)), CASE WHEN vt1.c0 THEN rt1.c0 ELSE vt1.c0 END))) ASC;
SELECT COUNT(*) FROM v0, rt1 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM v0, rt1 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM v0, rt1 WHERE ((NULL IN ()));
SELECT * FROM vt1, rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM vt1, rt1);
SELECT * FROM vt1, rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM vt1, rt1);
SELECT * FROM vt1, rt1 WHERE (rt1.c1);
SELECT * FROM rt1, v0, vt0, vt1 WHERE (CAST((((vt0.c0))==((rt1.c0))) AS NUMERIC)) ORDER BY (((rt1.c0 IN ()))GLOB(v0.c3 COLLATE NOCASE))  NULLS FIRST, ((CAST(v0.c3 AS REAL)) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0))=((rt1.c0))) AS NUMERIC)) IS TRUE)  as count FROM rt1, v0, vt0, vt1 ORDER BY (((rt1.c0 IN ()))GLOB(v0.c3 COLLATE NOCASE))  NULLS FIRST, ((CAST(v0.c3 AS REAL)) IS FALSE) ASC  NULLS LAST);
SELECT * FROM rt1, v0, vt0, vt1 WHERE (CAST((((vt0.c0))==((rt1.c0))) AS NUMERIC)) ORDER BY (((rt1.c0 IN ()))GLOB(v0.c3 COLLATE NOCASE))  NULLS FIRST, ((CAST(v0.c3 AS REAL)) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0))=((rt1.c0))) AS NUMERIC)) IS TRUE)  as count FROM rt1, v0, vt0, vt1 ORDER BY (((rt1.c0 IN ()))GLOB(v0.c3 COLLATE NOCASE))  NULLS FIRST, ((CAST(v0.c3 AS REAL)) IS FALSE) ASC  NULLS LAST);
SELECT * FROM rt1, v0, vt0, vt1 WHERE (CAST((((vt0.c0))==((rt1.c0))) AS NUMERIC)) ORDER BY (((rt1.c0 IN ()))GLOB(v0.c3 COLLATE NOCASE))  NULLS FIRST, ((CAST(v0.c3 AS REAL)) IS FALSE) ASC  NULLS LAST;
SELECT ALL * FROM vt1, rt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, rt1, vt0);
SELECT ALL * FROM vt1, rt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, rt1, vt0);
SELECT ALL * FROM vt1, rt1, vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN x'' THEN ('-610680510' IN (vt0.c0, vt0.c0, vt0.c0)) ELSE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END) ORDER BY CAST((vt0.c0 IN ()) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN x'' THEN ('-610680510' IN (vt0.c0, vt0.c0, vt0.c0)) ELSE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c0 IN ()) AS TEXT));
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN x'' THEN ('-610680510' IN (vt0.c0, vt0.c0, vt0.c0)) ELSE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END) ORDER BY CAST((vt0.c0 IN ()) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN x'' THEN ('-610680510' IN (vt0.c0, vt0.c0, vt0.c0)) ELSE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c0 IN ()) AS TEXT));
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN x'' THEN ('-610680510' IN (vt0.c0, vt0.c0, vt0.c0)) ELSE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END) ORDER BY CAST((vt0.c0 IN ()) AS TEXT);
SELECT ALL COUNT(*) FROM vt1, rt1 NOT INDEXED LEFT OUTER JOIN vt0 ON (+ (((vt1.c0)=(vt0.c0)))) WHERE (((rt1.c1)<=(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1)<=(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1))))) IS TRUE)  as count FROM vt1, rt1 LEFT OUTER JOIN vt0 ON (+ (((vt1.c0)==(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1, rt1 NOT INDEXED LEFT OUTER JOIN vt0 ON (+ (((vt1.c0)=(vt0.c0)))) WHERE (((rt1.c1)<=(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1)<=(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1))))) IS TRUE)  as count FROM vt1, rt1 LEFT OUTER JOIN vt0 ON (+ (((vt1.c0)==(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1, rt1 NOT INDEXED LEFT OUTER JOIN vt0 ON (+ (((vt1.c0)=(vt0.c0)))) WHERE (((rt1.c1)<=(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)))));
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, vt1, vt0, rt1 WHERE (CASE ((rt1.c2) NOT BETWEEN (rt1.c2) AND (0.6505390261878519))  WHEN '' THEN ((x'') BETWEEN (vt1.c0) AND (v0.c1)) WHEN ((v0.c0)<<(v0.c0)) THEN v0.c2 WHEN (((v0.c1))<>((v0.c1))) THEN ((v0.c0) ISNULL) ELSE (+ (rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c2) NOT BETWEEN (rt1.c2) AND (0.6505390261878519))  WHEN '' THEN ((x'') BETWEEN (vt1.c0) AND (v0.c1)) WHEN ((v0.c0)<<(v0.c0)) THEN v0.c2 WHEN (((v0.c1))<>((v0.c1))) THEN ((v0.c0) ISNULL) ELSE (+ (rt1.c1)) END) IS TRUE)  as count FROM v0, vt1, vt0, rt1);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, vt1, vt0, rt1 WHERE (CASE ((rt1.c2) NOT BETWEEN (rt1.c2) AND (0.6505390261878519))  WHEN '' THEN ((x'') BETWEEN (vt1.c0) AND (v0.c1)) WHEN ((v0.c0)<<(v0.c0)) THEN v0.c2 WHEN (((v0.c1))<>((v0.c1))) THEN ((v0.c0) ISNULL) ELSE (+ (rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c2) NOT BETWEEN (rt1.c2) AND (0.6505390261878519))  WHEN '' THEN ((x'') BETWEEN (vt1.c0) AND (v0.c1)) WHEN ((v0.c0)<<(v0.c0)) THEN v0.c2 WHEN (((v0.c1))<>((v0.c1))) THEN ((v0.c0) ISNULL) ELSE (+ (rt1.c1)) END) IS TRUE)  as count FROM v0, vt1, vt0, rt1);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, vt1, vt0, rt1 WHERE (CASE ((rt1.c2) NOT BETWEEN (rt1.c2) AND (0.6505390261878519))  WHEN '' THEN ((x'') BETWEEN (vt1.c0) AND (v0.c1)) WHEN ((v0.c0)<<(v0.c0)) THEN v0.c2 WHEN (((v0.c1))<>((v0.c1))) THEN ((v0.c0) ISNULL) ELSE (+ (rt1.c1)) END);
SELECT COUNT(*) FROM rt1, vt0, vt1, v0 WHERE ((CAST(v0.c1 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c1 AS TEXT) IN ())) IS TRUE)  as count FROM rt1, vt0, vt1, v0);
SELECT COUNT(*) FROM rt1, vt0, vt1, v0 WHERE ((CAST(v0.c1 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c1 AS TEXT) IN ())) IS TRUE)  as count FROM rt1, vt0, vt1, v0);
SELECT COUNT(*) FROM rt1, vt0, vt1, v0 WHERE ((CAST(v0.c1 AS TEXT) IN ()));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((- (CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((- (CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((- (CAST(vt1.c0 AS BLOB))));
SELECT * FROM v0, vt1, vt0, rt1 WHERE ((NOT (CASE v0.c0  WHEN 0.028444652817991356 THEN rt1.c2 WHEN vt1.c0 THEN vt0.c0 WHEN v0.c3 THEN 0.8097273513254161 ELSE v0.c4 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE v0.c0  WHEN 0.028444652817991356 THEN rt1.c2 WHEN vt1.c0 THEN vt0.c0 WHEN v0.c3 THEN 0.8097273513254161 ELSE v0.c4 END))) IS TRUE)  as count FROM v0, vt1, vt0, rt1);
SELECT * FROM v0, vt1, vt0, rt1 WHERE ((NOT (CASE v0.c0  WHEN 0.028444652817991356 THEN rt1.c2 WHEN vt1.c0 THEN vt0.c0 WHEN v0.c3 THEN 0.8097273513254161 ELSE v0.c4 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE v0.c0  WHEN 0.028444652817991356 THEN rt1.c2 WHEN vt1.c0 THEN vt0.c0 WHEN v0.c3 THEN 0.8097273513254161 ELSE v0.c4 END))) IS TRUE)  as count FROM v0, vt1, vt0, rt1);
SELECT * FROM v0, vt1, vt0, rt1 WHERE ((NOT (CASE v0.c0  WHEN 0.028444652817991356 THEN rt1.c2 WHEN vt1.c0 THEN vt0.c0 WHEN v0.c3 THEN 0.8097273513254161 ELSE v0.c4 END)));
SELECT * FROM vt1, rt1 WHERE (((((LOWER(vt1.c0))OR(CASE rt1.c1  WHEN '671123915' THEN rt1.c2 WHEN vt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 END)))AND(((rt1.c1) NOT BETWEEN (rt1.c1) AND (vt1.c0))))) ORDER BY CAST(vt1.c0 AS INTEGER) COLLATE BINARY DESC  NULLS LAST, CASE (((rt1.c1))>=((rt1.c2)))  WHEN (NULL IN ()) THEN x'' WHEN (((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))) THEN (((0X3b0b2f8b))<=((rt1.c0))) WHEN ((((rt1.c0)AND(-1712467807)))AND(rt1.c1)) THEN CASE WHEN rt1.c1 THEN rt1.c2 ELSE 0.5469414285466423 END ELSE (NOT (rt1.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((LOWER(vt1.c0))OR(CASE rt1.c1  WHEN '671123915' THEN rt1.c2 WHEN vt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 END)))AND(((rt1.c1) NOT BETWEEN (rt1.c1) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, rt1 ORDER BY CAST(vt1.c0 AS INTEGER) COLLATE BINARY DESC  NULLS LAST, CASE (((rt1.c1))>=((rt1.c2)))  WHEN (NULL IN ()) THEN x'' WHEN (((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))) THEN (((0X3b0b2f8b))<=((rt1.c0))) WHEN ((((rt1.c0)AND(-1712467807)))AND(rt1.c1)) THEN CASE WHEN rt1.c1 THEN rt1.c2 ELSE 0.5469414285466423 END ELSE (NOT (rt1.c2)) END  NULLS FIRST);
SELECT * FROM vt1, rt1 WHERE (((((LOWER(vt1.c0))OR(CASE rt1.c1  WHEN '671123915' THEN rt1.c2 WHEN vt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 END)))AND(((rt1.c1) NOT BETWEEN (rt1.c1) AND (vt1.c0))))) ORDER BY CAST(vt1.c0 AS INTEGER) COLLATE BINARY DESC  NULLS LAST, CASE (((rt1.c1))>=((rt1.c2)))  WHEN (NULL IN ()) THEN x'' WHEN (((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))) THEN (((0X3b0b2f8b))<=((rt1.c0))) WHEN ((((rt1.c0)AND(-1712467807)))AND(rt1.c1)) THEN CASE WHEN rt1.c1 THEN rt1.c2 ELSE 0.5469414285466423 END ELSE (NOT (rt1.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((LOWER(vt1.c0))OR(CASE rt1.c1  WHEN '671123915' THEN rt1.c2 WHEN vt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 END)))AND(((rt1.c1) NOT BETWEEN (rt1.c1) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, rt1 ORDER BY CAST(vt1.c0 AS INTEGER) COLLATE BINARY DESC  NULLS LAST, CASE (((rt1.c1))>=((rt1.c2)))  WHEN (NULL IN ()) THEN x'' WHEN (((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))) THEN (((0X3b0b2f8b))<=((rt1.c0))) WHEN ((((rt1.c0)AND(-1712467807)))AND(rt1.c1)) THEN CASE WHEN rt1.c1 THEN rt1.c2 ELSE 0.5469414285466423 END ELSE (NOT (rt1.c2)) END  NULLS FIRST);
SELECT * FROM vt1, rt1 WHERE (((((LOWER(vt1.c0))OR(CASE rt1.c1  WHEN '671123915' THEN rt1.c2 WHEN vt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 END)))AND(((rt1.c1) NOT BETWEEN (rt1.c1) AND (vt1.c0))))) ORDER BY CAST(vt1.c0 AS INTEGER) COLLATE BINARY DESC  NULLS LAST, CASE (((rt1.c1))>=((rt1.c2)))  WHEN (NULL IN ()) THEN x'' WHEN (((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))) THEN (((0X3b0b2f8b))<=((rt1.c0))) WHEN ((((rt1.c0)AND(-1712467807)))AND(rt1.c1)) THEN CASE WHEN rt1.c1 THEN rt1.c2 ELSE 0.5469414285466423 END ELSE (NOT (rt1.c2)) END  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (json_array_length(CAST(v0.c4 AS TEXT))) ORDER BY (((((((((('1119230529')AND(v0.c3)))AND(v0.c0)))OR(v0.c3)))AND(NULL))) BETWEEN (CASE v0.c3  WHEN -2.12360026E8 THEN v0.c0 ELSE v0.c1 END) AND (CASE v0.c1  WHEN v0.c2 THEN v0.c2 ELSE v0.c2 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(CAST(v0.c4 AS TEXT))) IS TRUE)  as count FROM v0 ORDER BY (((((((((('1119230529')AND(v0.c3)))AND(v0.c0)))OR(v0.c3)))AND(NULL))) BETWEEN (CASE v0.c3  WHEN -2.12360026E8 THEN v0.c0 ELSE v0.c1 END) AND (CASE v0.c1  WHEN v0.c2 THEN v0.c2 ELSE v0.c2 END)) DESC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (json_array_length(CAST(v0.c4 AS TEXT))) ORDER BY (((((((((('1119230529')AND(v0.c3)))AND(v0.c0)))OR(v0.c3)))AND(NULL))) BETWEEN (CASE v0.c3  WHEN -2.12360026E8 THEN v0.c0 ELSE v0.c1 END) AND (CASE v0.c1  WHEN v0.c2 THEN v0.c2 ELSE v0.c2 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(CAST(v0.c4 AS TEXT))) IS TRUE)  as count FROM v0 ORDER BY (((((((((('1119230529')AND(v0.c3)))AND(v0.c0)))OR(v0.c3)))AND(NULL))) BETWEEN (CASE v0.c3  WHEN -2.12360026E8 THEN v0.c0 ELSE v0.c1 END) AND (CASE v0.c1  WHEN v0.c2 THEN v0.c2 ELSE v0.c2 END)) DESC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (json_array_length(CAST(v0.c4 AS TEXT))) ORDER BY (((((((((('1119230529')AND(v0.c3)))AND(v0.c0)))OR(v0.c3)))AND(NULL))) BETWEEN (CASE v0.c3  WHEN -2.12360026E8 THEN v0.c0 ELSE v0.c1 END) AND (CASE v0.c1  WHEN v0.c2 THEN v0.c2 ELSE v0.c2 END)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0Xffffffff84a7f615))))OR((vt0.c0 IN ()))))OR(((vt0.c0)<=(vt0.c0))))) ORDER BY ((vt0.c0)AND(vt0.c0)) COLLATE RTRIM COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0Xffffffff84a7f615))))OR((vt0.c0 IN ()))))OR(((vt0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)AND(vt0.c0)) COLLATE RTRIM COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0Xffffffff84a7f615))))OR((vt0.c0 IN ()))))OR(((vt0.c0)<=(vt0.c0))))) ORDER BY ((vt0.c0)AND(vt0.c0)) COLLATE RTRIM COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0Xffffffff84a7f615))))OR((vt0.c0 IN ()))))OR(((vt0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)AND(vt0.c0)) COLLATE RTRIM COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0Xffffffff84a7f615))))OR((vt0.c0 IN ()))))OR(((vt0.c0)<=(vt0.c0))))) ORDER BY ((vt0.c0)AND(vt0.c0)) COLLATE RTRIM COLLATE BINARY  NULLS FIRST;
SELECT COUNT(*) FROM vt1, v0 NOT INDEXED, vt0, rt1 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM vt1, v0, vt0, rt1);
SELECT COUNT(*) FROM vt1, v0 NOT INDEXED, vt0, rt1 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM vt1, v0, vt0, rt1);
SELECT COUNT(*) FROM vt1, v0 NOT INDEXED, vt0, rt1 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE BINARY);
SELECT ALL * FROM v0, vt0 RIGHT OUTER JOIN vt1 ON x'' WHERE ((((vt0.c0))==((vt1.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((vt0.c0))=((vt1.c0))) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN vt1 ON x'');
SELECT ALL * FROM v0, vt0 RIGHT OUTER JOIN vt1 ON x'' WHERE ((((vt0.c0))==((vt1.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((vt0.c0))=((vt1.c0))) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN vt1 ON x'');
SELECT ALL * FROM v0, vt0 RIGHT OUTER JOIN vt1 ON x'' WHERE ((((vt0.c0))==((vt1.c0))) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON IFNULL(json_array_length(vt0.c0), (NOT (vt0.c0))) LEFT OUTER JOIN rt1 ON ((v0.c2) ISNULL) COLLATE BINARY INNER JOIN vt1 ON (((rt1.c2 IN (rt1.c1, v0.c4))) BETWEEN ((+ (v0.c4))) AND (((((vt0.c0)AND(NULL)))AND(rt1.c1)))) WHERE ((+ ((~ (v0.c3)))));
SELECT SUM(count) FROM (SELECT (((+ ((~ (v0.c3))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON IFNULL(json_array_length(vt0.c0), (NOT (vt0.c0))) LEFT OUTER JOIN rt1 ON ((v0.c2) ISNULL) COLLATE BINARY INNER JOIN vt1 ON (((rt1.c2 IN (rt1.c1, v0.c4))) BETWEEN ((+ (v0.c4))) AND (((((vt0.c0)AND(NULL)))AND(rt1.c1)))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON IFNULL(json_array_length(vt0.c0), (NOT (vt0.c0))) LEFT OUTER JOIN rt1 ON ((v0.c2) ISNULL) COLLATE BINARY INNER JOIN vt1 ON (((rt1.c2 IN (rt1.c1, v0.c4))) BETWEEN ((+ (v0.c4))) AND (((((vt0.c0)AND(NULL)))AND(rt1.c1)))) WHERE ((+ ((~ (v0.c3)))));
SELECT SUM(count) FROM (SELECT (((+ ((~ (v0.c3))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON IFNULL(json_array_length(vt0.c0), (NOT (vt0.c0))) LEFT OUTER JOIN rt1 ON ((v0.c2) ISNULL) COLLATE BINARY INNER JOIN vt1 ON (((rt1.c2 IN (rt1.c1, v0.c4))) BETWEEN ((+ (v0.c4))) AND (((((vt0.c0)AND(NULL)))AND(rt1.c1)))));
SELECT COUNT(*) FROM vt0, rt1 RIGHT OUTER JOIN vt1 ON ((((((rt1.c1)|(rt1.c0)))OR(vt1.c0)))OR((rt1.c2 IN (vt0.c0)))) WHERE ((vt0.c0 IN ()) COLLATE NOCASE) ORDER BY x''  NULLS LAST, ((NULL)LIKE(vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt1 RIGHT OUTER JOIN vt1 ON ((((((rt1.c1)|(rt1.c0)))OR(vt1.c0)))OR((rt1.c2 IN (vt0.c0)))) ORDER BY x''  NULLS LAST, ((NULL)LIKE(vt1.c0))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1 RIGHT OUTER JOIN vt1 ON ((((((rt1.c1)|(rt1.c0)))OR(vt1.c0)))OR((rt1.c2 IN (vt0.c0)))) WHERE ((vt0.c0 IN ()) COLLATE NOCASE) ORDER BY x''  NULLS LAST, ((NULL)LIKE(vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt1 RIGHT OUTER JOIN vt1 ON ((((((rt1.c1)|(rt1.c0)))OR(vt1.c0)))OR((rt1.c2 IN (vt0.c0)))) ORDER BY x''  NULLS LAST, ((NULL)LIKE(vt1.c0))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1 RIGHT OUTER JOIN vt1 ON ((((((rt1.c1)|(rt1.c0)))OR(vt1.c0)))OR((rt1.c2 IN (vt0.c0)))) WHERE ((vt0.c0 IN ()) COLLATE NOCASE) ORDER BY x''  NULLS LAST, ((NULL)LIKE(vt1.c0))  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (CASE WHEN ((rt1.c0)LIKE(rt1.c1)) THEN CASE WHEN 'Vh' THEN rt1.c1 ELSE rt1.c1 END ELSE ((rt1.c0)!=(rt1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c0)LIKE(rt1.c1)) THEN CASE WHEN 'Vh' THEN rt1.c1 ELSE rt1.c1 END ELSE ((rt1.c0)!=(rt1.c2)) END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE WHEN ((rt1.c0)LIKE(rt1.c1)) THEN CASE WHEN 'Vh' THEN rt1.c1 ELSE rt1.c1 END ELSE ((rt1.c0)!=(rt1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c0)LIKE(rt1.c1)) THEN CASE WHEN 'Vh' THEN rt1.c1 ELSE rt1.c1 END ELSE ((rt1.c0)!=(rt1.c2)) END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE WHEN ((rt1.c0)LIKE(rt1.c1)) THEN CASE WHEN 'Vh' THEN rt1.c1 ELSE rt1.c1 END ELSE ((rt1.c0)!=(rt1.c2)) END);
SELECT ALL COUNT(*) FROM vt1 WHERE (ABS(((vt1.c0)OR(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(((vt1.c0)OR(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (ABS(((vt1.c0)OR(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(((vt1.c0)OR(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (ABS(((vt1.c0)OR(vt1.c0))));
SELECT COUNT(*) FROM vt0, rt1, vt1 WHERE (CAST(((rt1.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, rt1, vt1);
SELECT COUNT(*) FROM vt0, rt1, vt1 WHERE (CAST(((rt1.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, rt1, vt1);
SELECT COUNT(*) FROM vt0, rt1, vt1 WHERE (CAST(((rt1.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS TEXT));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt1 ON (((x'1715')) NOT BETWEEN ((((v0.c3)GLOB(rt1.c0)))) AND ((((v0.c1) NOT BETWEEN (rt1.c2) AND (v0.c2))))) WHERE (v0.c3);
SELECT SUM(count) FROM (SELECT ALL ((v0.c3) IS TRUE)  as count FROM v0 CROSS JOIN rt1 ON (((x'1715')) NOT BETWEEN ((((v0.c3)GLOB(rt1.c0)))) AND ((((v0.c1) NOT BETWEEN (rt1.c2) AND (v0.c2))))));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt1 ON (((x'1715')) NOT BETWEEN ((((v0.c3)GLOB(rt1.c0)))) AND ((((v0.c1) NOT BETWEEN (rt1.c2) AND (v0.c2))))) WHERE (v0.c3);
SELECT SUM(count) FROM (SELECT ALL ((v0.c3) IS TRUE)  as count FROM v0 CROSS JOIN rt1 ON (((x'1715')) NOT BETWEEN ((((v0.c3)GLOB(rt1.c0)))) AND ((((v0.c1) NOT BETWEEN (rt1.c2) AND (v0.c2))))));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt1 ON (((x'1715')) NOT BETWEEN ((((v0.c3)GLOB(rt1.c0)))) AND ((((v0.c1) NOT BETWEEN (rt1.c2) AND (v0.c2))))) WHERE (v0.c3);
SELECT ALL * FROM vt0, vt1, v0 WHERE (((((((v0.c1)AND(v0.c3)))OR(''))) NOT BETWEEN (((((((((v0.c3)AND(vt0.c0)))AND(v0.c4)))AND(vt1.c0)))OR(vt0.c0))) AND (v0.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c1)AND(v0.c3)))OR(''))) NOT BETWEEN (((((((((v0.c3)AND(vt0.c0)))AND(v0.c4)))AND(vt1.c0)))OR(vt0.c0))) AND (v0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL * FROM vt0, vt1, v0 WHERE (((((((v0.c1)AND(v0.c3)))OR(''))) NOT BETWEEN (((((((((v0.c3)AND(vt0.c0)))AND(v0.c4)))AND(vt1.c0)))OR(vt0.c0))) AND (v0.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c1)AND(v0.c3)))OR(''))) NOT BETWEEN (((((((((v0.c3)AND(vt0.c0)))AND(v0.c4)))AND(vt1.c0)))OR(vt0.c0))) AND (v0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL * FROM vt0, vt1, v0 WHERE (((((((v0.c1)AND(v0.c3)))OR(''))) NOT BETWEEN (((((((((v0.c3)AND(vt0.c0)))AND(v0.c4)))AND(vt1.c0)))OR(vt0.c0))) AND (v0.c3 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0) NOT NULL) ELSE ((vt0.c0)>=(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0) NOT NULL) ELSE ((vt0.c0)>=(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0) NOT NULL) ELSE ((vt0.c0)>=(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0) NOT NULL) ELSE ((vt0.c0)>=(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0) NOT NULL) ELSE ((vt0.c0)>=(vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0, rt1, v0, vt1 WHERE ((~ (((vt0.c0)<(v0.c0))))) ORDER BY CAST(CASE v0.c4  WHEN rt1.c0 THEN vt1.c0 ELSE 0.9596548972373401 END AS TEXT)  NULLS FIRST, ((((v0.c2)>(rt1.c0)))<=(((rt1.c1) ISNULL))) DESC  NULLS FIRST, ((((v0.c1)OR(rt1.c0)))IS(CAST(rt1.c1 AS BLOB))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0)<(v0.c0))))) IS TRUE)  as count FROM vt0, rt1, v0, vt1 ORDER BY CAST(CASE v0.c4  WHEN rt1.c0 THEN vt1.c0 ELSE 0.9596548972373401 END AS TEXT)  NULLS FIRST, ((((v0.c2)>(rt1.c0)))<=(((rt1.c1) ISNULL))) DESC  NULLS FIRST, ((((v0.c1)OR(rt1.c0)))IS(CAST(rt1.c1 AS BLOB))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1, v0, vt1 WHERE ((~ (((vt0.c0)<(v0.c0))))) ORDER BY CAST(CASE v0.c4  WHEN rt1.c0 THEN vt1.c0 ELSE 0.9596548972373401 END AS TEXT)  NULLS FIRST, ((((v0.c2)>(rt1.c0)))<=(((rt1.c1) ISNULL))) DESC  NULLS FIRST, ((((v0.c1)OR(rt1.c0)))IS(CAST(rt1.c1 AS BLOB))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0)<(v0.c0))))) IS TRUE)  as count FROM vt0, rt1, v0, vt1 ORDER BY CAST(CASE v0.c4  WHEN rt1.c0 THEN vt1.c0 ELSE 0.9596548972373401 END AS TEXT)  NULLS FIRST, ((((v0.c2)>(rt1.c0)))<=(((rt1.c1) ISNULL))) DESC  NULLS FIRST, ((((v0.c1)OR(rt1.c0)))IS(CAST(rt1.c1 AS BLOB))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1, v0, vt1 WHERE ((~ (((vt0.c0)<(v0.c0))))) ORDER BY CAST(CASE v0.c4  WHEN rt1.c0 THEN vt1.c0 ELSE 0.9596548972373401 END AS TEXT)  NULLS FIRST, ((((v0.c2)>(rt1.c0)))<=(((rt1.c1) ISNULL))) DESC  NULLS FIRST, ((((v0.c1)OR(rt1.c0)))IS(CAST(rt1.c1 AS BLOB))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1 INNER JOIN v0 ON -4.91577727E8 COLLATE BINARY RIGHT OUTER JOIN vt0 ON CAST(((v0.c1) BETWEEN (vt1.c0) AND (v0.c0)) AS BLOB) WHERE (((((v0.c3)<(v0.c3)))GLOB(''))) ORDER BY CAST(CAST(v0.c3 AS TEXT) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c3)<(v0.c3)))GLOB(''))) IS TRUE)  as count FROM vt1 INNER JOIN v0 ON -4.91577727E8 COLLATE BINARY RIGHT OUTER JOIN vt0 ON CAST(((v0.c1) BETWEEN (vt1.c0) AND (v0.c0)) AS BLOB) ORDER BY CAST(CAST(v0.c3 AS TEXT) AS NUMERIC));
SELECT COUNT(*) FROM vt1 INNER JOIN v0 ON -4.91577727E8 COLLATE BINARY RIGHT OUTER JOIN vt0 ON CAST(((v0.c1) BETWEEN (vt1.c0) AND (v0.c0)) AS BLOB) WHERE (((((v0.c3)<(v0.c3)))GLOB(''))) ORDER BY CAST(CAST(v0.c3 AS TEXT) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c3)<(v0.c3)))GLOB(''))) IS TRUE)  as count FROM vt1 INNER JOIN v0 ON -4.91577727E8 COLLATE BINARY RIGHT OUTER JOIN vt0 ON CAST(((v0.c1) BETWEEN (vt1.c0) AND (v0.c0)) AS BLOB) ORDER BY CAST(CAST(v0.c3 AS TEXT) AS NUMERIC));
SELECT COUNT(*) FROM vt1 INNER JOIN v0 ON -4.91577727E8 COLLATE BINARY RIGHT OUTER JOIN vt0 ON CAST(((v0.c1) BETWEEN (vt1.c0) AND (v0.c0)) AS BLOB) WHERE (((((v0.c3)<(v0.c3)))GLOB(''))) ORDER BY CAST(CAST(v0.c3 AS TEXT) AS NUMERIC);
SELECT ALL * FROM vt1, v0 WHERE ((((+ (v0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c2))) IS TRUE)) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE ((((+ (v0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c2))) IS TRUE)) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE ((((+ (v0.c2))) IS TRUE));
SELECT COUNT(*) FROM rt1, vt1, v0 WHERE ((NOT (json_valid(v0.c3))));
SELECT SUM(count) FROM (SELECT (((NOT (json_valid(v0.c3)))) IS TRUE)  as count FROM rt1, vt1, v0);
SELECT COUNT(*) FROM rt1, vt1, v0 WHERE ((NOT (json_valid(v0.c3))));
SELECT SUM(count) FROM (SELECT (((NOT (json_valid(v0.c3)))) IS TRUE)  as count FROM rt1, vt1, v0);
SELECT COUNT(*) FROM rt1, vt1, v0 WHERE ((NOT (json_valid(v0.c3))));
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt1 WHERE ((- (rtreenode(x'76e2', vt1.c0)))) ORDER BY ((UPPER(rt1.c0))/(vt1.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (rtreenode(x'76e2', vt1.c0)))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt1 ORDER BY ((UPPER(rt1.c0))/(vt1.c0 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt1 WHERE ((- (rtreenode(x'76e2', vt1.c0)))) ORDER BY ((UPPER(rt1.c0))/(vt1.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (rtreenode(x'76e2', vt1.c0)))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt1 ORDER BY ((UPPER(rt1.c0))/(vt1.c0 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt1 WHERE ((- (rtreenode(x'76e2', vt1.c0)))) ORDER BY ((UPPER(rt1.c0))/(vt1.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, vt1, vt0 NOT INDEXED WHERE (((((vt0.c0 COLLATE NOCASE)OR(rtreenode(NULL, vt1.c0))))OR(CAST(vt0.c0 AS NUMERIC)))) ORDER BY (((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((NULL))) COLLATE RTRIM DESC, ABS(CAST('|' AS BLOB)), LTRIM(((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c0)), NULLIF(vt1.c0, vt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE NOCASE)OR(rtreenode(NULL, vt1.c0))))OR(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt1, vt1, vt0 ORDER BY (((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((NULL))) COLLATE RTRIM DESC, ABS(CAST('|' AS BLOB)), LTRIM(((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c0)), NULLIF(vt1.c0, vt1.c0)) DESC);
SELECT ALL COUNT(*) FROM rt1, vt1, vt0 NOT INDEXED WHERE (((((vt0.c0 COLLATE NOCASE)OR(rtreenode(NULL, vt1.c0))))OR(CAST(vt0.c0 AS NUMERIC)))) ORDER BY (((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((NULL))) COLLATE RTRIM DESC, ABS(CAST('|' AS BLOB)), LTRIM(((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c0)), NULLIF(vt1.c0, vt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE NOCASE)OR(rtreenode(NULL, vt1.c0))))OR(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt1, vt1, vt0 ORDER BY (((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((NULL))) COLLATE RTRIM DESC, ABS(CAST('|' AS BLOB)), LTRIM(((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c0)), NULLIF(vt1.c0, vt1.c0)) DESC);
SELECT ALL COUNT(*) FROM rt1, vt1, vt0 NOT INDEXED WHERE (((((vt0.c0 COLLATE NOCASE)OR(rtreenode(NULL, vt1.c0))))OR(CAST(vt0.c0 AS NUMERIC)))) ORDER BY (((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((NULL))) COLLATE RTRIM DESC, ABS(CAST('|' AS BLOB)), LTRIM(((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c0)), NULLIF(vt1.c0, vt1.c0)) DESC;
SELECT ALL * FROM rt1, vt0, vt1 WHERE ((((vt0.c0)) BETWEEN ((((vt1.c0)%(x'')))) AND ((((vt0.c0)OR(x'')))))) ORDER BY (((rt1.c0) ISNULL) IN ()) ASC  NULLS FIRST, CAST((NOT (rt1.c1)) AS REAL), (((NOT (rt1.c1))) BETWEEN (json_object(rt1.c0, rt1.c2, vt1.c0, rt1.c1)) AND ((NOT (rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((vt1.c0)%(x'')))) AND ((((vt0.c0)OR(x'')))))) IS TRUE)  as count FROM rt1, vt0, vt1 ORDER BY (((rt1.c0) ISNULL) IN ()) ASC  NULLS FIRST, CAST((NOT (rt1.c1)) AS REAL), (((NOT (rt1.c1))) BETWEEN (json_object(rt1.c0, rt1.c2, vt1.c0, rt1.c1)) AND ((NOT (rt1.c1))))  NULLS LAST);
SELECT ALL * FROM rt1, vt0, vt1 WHERE ((((vt0.c0)) BETWEEN ((((vt1.c0)%(x'')))) AND ((((vt0.c0)OR(x'')))))) ORDER BY (((rt1.c0) ISNULL) IN ()) ASC  NULLS FIRST, CAST((NOT (rt1.c1)) AS REAL), (((NOT (rt1.c1))) BETWEEN (json_object(rt1.c0, rt1.c2, vt1.c0, rt1.c1)) AND ((NOT (rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((vt1.c0)%(x'')))) AND ((((vt0.c0)OR(x'')))))) IS TRUE)  as count FROM rt1, vt0, vt1 ORDER BY (((rt1.c0) ISNULL) IN ()) ASC  NULLS FIRST, CAST((NOT (rt1.c1)) AS REAL), (((NOT (rt1.c1))) BETWEEN (json_object(rt1.c0, rt1.c2, vt1.c0, rt1.c1)) AND ((NOT (rt1.c1))))  NULLS LAST);
SELECT ALL * FROM rt1, vt0, vt1 WHERE ((((vt0.c0)) BETWEEN ((((vt1.c0)%(x'')))) AND ((((vt0.c0)OR(x'')))))) ORDER BY (((rt1.c0) ISNULL) IN ()) ASC  NULLS FIRST, CAST((NOT (rt1.c1)) AS REAL), (((NOT (rt1.c1))) BETWEEN (json_object(rt1.c0, rt1.c2, vt1.c0, rt1.c1)) AND ((NOT (rt1.c1))))  NULLS LAST;
SELECT ALL * FROM rt1, vt1, v0 LEFT OUTER JOIN vt0 ON CASE (NOT (v0.c1))  WHEN (v0.c1 IN (v0.c1)) THEN CASE vt1.c0  WHEN rt1.c0 THEN v0.c4 WHEN v0.c2 THEN rt1.c2 WHEN rt1.c0 THEN v0.c2 WHEN vt1.c0 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c2 ELSE v0.c1 END WHEN ((('', rt1.c1, v0.c1)) NOT BETWEEN ((rt1.c0, vt0.c0, v0.c4)) AND ((rt1.c1, rt1.c2, vt1.c0))) THEN (rt1.c1 IN ()) WHEN vt0.c0 COLLATE BINARY THEN '' END WHERE (((((((vt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1)))))>=((((rt1.c0)<=(vt0.c0)))))) ORDER BY CAST(((((vt1.c0)AND(v0.c2)))AND(v0.c1)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1)))))>=((((rt1.c0)<=(vt0.c0)))))) IS TRUE)  as count FROM rt1, vt1, v0 LEFT OUTER JOIN vt0 ON CASE (NOT (v0.c1))  WHEN (v0.c1 IN (v0.c1)) THEN CASE vt1.c0  WHEN rt1.c0 THEN v0.c4 WHEN v0.c2 THEN rt1.c2 WHEN rt1.c0 THEN v0.c2 WHEN vt1.c0 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c2 ELSE v0.c1 END WHEN ((('', rt1.c1, v0.c1)) NOT BETWEEN ((rt1.c0, vt0.c0, v0.c4)) AND ((rt1.c1, rt1.c2, vt1.c0))) THEN (rt1.c1 IN ()) WHEN vt0.c0 COLLATE BINARY THEN '' END ORDER BY CAST(((((vt1.c0)AND(v0.c2)))AND(v0.c1)) AS REAL) ASC);
SELECT ALL * FROM rt1, vt1, v0 LEFT OUTER JOIN vt0 ON CASE (NOT (v0.c1))  WHEN (v0.c1 IN (v0.c1)) THEN CASE vt1.c0  WHEN rt1.c0 THEN v0.c4 WHEN v0.c2 THEN rt1.c2 WHEN rt1.c0 THEN v0.c2 WHEN vt1.c0 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c2 ELSE v0.c1 END WHEN ((('', rt1.c1, v0.c1)) NOT BETWEEN ((rt1.c0, vt0.c0, v0.c4)) AND ((rt1.c1, rt1.c2, vt1.c0))) THEN (rt1.c1 IN ()) WHEN vt0.c0 COLLATE BINARY THEN '' END WHERE (((((((vt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1)))))>=((((rt1.c0)<=(vt0.c0)))))) ORDER BY CAST(((((vt1.c0)AND(v0.c2)))AND(v0.c1)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1)))))>=((((rt1.c0)<=(vt0.c0)))))) IS TRUE)  as count FROM rt1, vt1, v0 LEFT OUTER JOIN vt0 ON CASE (NOT (v0.c1))  WHEN (v0.c1 IN (v0.c1)) THEN CASE vt1.c0  WHEN rt1.c0 THEN v0.c4 WHEN v0.c2 THEN rt1.c2 WHEN rt1.c0 THEN v0.c2 WHEN vt1.c0 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c2 ELSE v0.c1 END WHEN ((('', rt1.c1, v0.c1)) NOT BETWEEN ((rt1.c0, vt0.c0, v0.c4)) AND ((rt1.c1, rt1.c2, vt1.c0))) THEN (rt1.c1 IN ()) WHEN vt0.c0 COLLATE BINARY THEN '' END ORDER BY CAST(((((vt1.c0)AND(v0.c2)))AND(v0.c1)) AS REAL) ASC);
SELECT ALL * FROM rt1, vt1, v0 LEFT OUTER JOIN vt0 ON CASE (NOT (v0.c1))  WHEN (v0.c1 IN (v0.c1)) THEN CASE vt1.c0  WHEN rt1.c0 THEN v0.c4 WHEN v0.c2 THEN rt1.c2 WHEN rt1.c0 THEN v0.c2 WHEN vt1.c0 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c2 ELSE v0.c1 END WHEN ((('', rt1.c1, v0.c1)) NOT BETWEEN ((rt1.c0, vt0.c0, v0.c4)) AND ((rt1.c1, rt1.c2, vt1.c0))) THEN (rt1.c1 IN ()) WHEN vt0.c0 COLLATE BINARY THEN '' END WHERE (((((((vt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1)))))>=((((rt1.c0)<=(vt0.c0)))))) ORDER BY CAST(((((vt1.c0)AND(v0.c2)))AND(v0.c1)) AS REAL) ASC;
SELECT COUNT(*) FROM vt1, rt1 WHERE (((((rt1.c2)>=(vt1.c0))) NOT BETWEEN (UNLIKELY(DISTINCT x'')) AND (((rt1.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)>=(vt1.c0))) NOT BETWEEN (UNLIKELY(DISTINCT x'')) AND (((rt1.c2) ISNULL)))) IS TRUE)  as count FROM vt1, rt1);
SELECT COUNT(*) FROM vt1, rt1 WHERE (((((rt1.c2)>=(vt1.c0))) NOT BETWEEN (UNLIKELY(DISTINCT x'')) AND (((rt1.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)>=(vt1.c0))) NOT BETWEEN (UNLIKELY(DISTINCT x'')) AND (((rt1.c2) ISNULL)))) IS TRUE)  as count FROM vt1, rt1);
SELECT COUNT(*) FROM vt1, rt1 WHERE (((((rt1.c2)>=(vt1.c0))) NOT BETWEEN (UNLIKELY(DISTINCT x'')) AND (((rt1.c2) ISNULL))));
SELECT * FROM vt0, vt1 WHERE (CAST((((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((NULL, vt1.c0, vt0.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((NULL, vt1.c0, vt0.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CAST((((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((NULL, vt1.c0, vt0.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((NULL, vt1.c0, vt0.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CAST((((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((NULL, vt1.c0, vt0.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) AS INTEGER));
SELECT ALL COUNT(*) FROM rt1, vt1, vt0, v0 WHERE (v0.c1) ORDER BY ((((rt1.c2)<<(v0.c2)))*(((v0.c0) NOT BETWEEN (v0.c2) AND (rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM rt1, vt1, vt0, v0 ORDER BY ((((rt1.c2)<<(v0.c2)))*(((v0.c0) NOT BETWEEN (v0.c2) AND (rt1.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt1, vt0, v0 WHERE (v0.c1) ORDER BY ((((rt1.c2)<<(v0.c2)))*(((v0.c0) NOT BETWEEN (v0.c2) AND (rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM rt1, vt1, vt0, v0 ORDER BY ((((rt1.c2)<<(v0.c2)))*(((v0.c0) NOT BETWEEN (v0.c2) AND (rt1.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt1, vt0, v0 WHERE (v0.c1) ORDER BY ((((rt1.c2)<<(v0.c2)))*(((v0.c0) NOT BETWEEN (v0.c2) AND (rt1.c1))))  NULLS LAST;
SELECT COUNT(*) FROM vt1, v0, rt1 NOT INDEXED WHERE ((((((((((v0.c2 IN ()))OR(rt1.c2 COLLATE NOCASE)))AND(((v0.c4) IS FALSE))))OR(TYPEOF(x''))))OR((v0.c4 IN ())))) ORDER BY 0.042211930531874775, '';
SELECT SUM(count) FROM (SELECT ALL (((((((((((v0.c2 IN ()))OR(rt1.c2 COLLATE NOCASE)))AND(((v0.c4) IS FALSE))))OR(TYPEOF(x''))))OR((v0.c4 IN ())))) IS TRUE)  as count FROM vt1, v0, rt1 ORDER BY 0.042211930531874775, '');
SELECT COUNT(*) FROM vt1, v0, rt1 NOT INDEXED WHERE ((((((((((v0.c2 IN ()))OR(rt1.c2 COLLATE NOCASE)))AND(((v0.c4) IS FALSE))))OR(TYPEOF(x''))))OR((v0.c4 IN ())))) ORDER BY 0.042211930531874775, '';
SELECT SUM(count) FROM (SELECT ALL (((((((((((v0.c2 IN ()))OR(rt1.c2 COLLATE NOCASE)))AND(((v0.c4) IS FALSE))))OR(TYPEOF(x''))))OR((v0.c4 IN ())))) IS TRUE)  as count FROM vt1, v0, rt1 ORDER BY 0.042211930531874775, '');
SELECT COUNT(*) FROM vt1, v0, rt1 NOT INDEXED WHERE ((((((((((v0.c2 IN ()))OR(rt1.c2 COLLATE NOCASE)))AND(((v0.c4) IS FALSE))))OR(TYPEOF(x''))))OR((v0.c4 IN ())))) ORDER BY 0.042211930531874775, '';
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt1 WHERE (((ABS(rt1.c2)) ISNULL)) ORDER BY UPPER(DISTINCT ((-9.7658197E8)/(rt1.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((ABS(rt1.c2)) ISNULL)) IS TRUE)  as count FROM vt1 NATURAL JOIN rt1 ORDER BY UPPER(DISTINCT ((-9.7658197E8)/(rt1.c2))) ASC);
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt1 WHERE (((ABS(rt1.c2)) ISNULL)) ORDER BY UPPER(DISTINCT ((-9.7658197E8)/(rt1.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((ABS(rt1.c2)) ISNULL)) IS TRUE)  as count FROM vt1 NATURAL JOIN rt1 ORDER BY UPPER(DISTINCT ((-9.7658197E8)/(rt1.c2))) ASC);
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt1 WHERE (((ABS(rt1.c2)) ISNULL)) ORDER BY UPPER(DISTINCT ((-9.7658197E8)/(rt1.c2))) ASC;
SELECT * FROM rt1, vt1 WHERE (vt1.c0) ORDER BY (CASE vt1.c0  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END IN ()) DESC  NULLS FIRST, (- (((rt1.c2) NOTNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM rt1, vt1 ORDER BY (CASE vt1.c0  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END IN ()) DESC  NULLS FIRST, (- (((rt1.c2) NOTNULL))) ASC  NULLS LAST);
SELECT * FROM rt1, vt1 WHERE (vt1.c0) ORDER BY (CASE vt1.c0  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END IN ()) DESC  NULLS FIRST, (- (((rt1.c2) NOTNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM rt1, vt1 ORDER BY (CASE vt1.c0  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END IN ()) DESC  NULLS FIRST, (- (((rt1.c2) NOTNULL))) ASC  NULLS LAST);
SELECT * FROM rt1, vt1 WHERE (vt1.c0) ORDER BY (CASE vt1.c0  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END IN ()) DESC  NULLS FIRST, (- (((rt1.c2) NOTNULL))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt1, vt0, rt1 WHERE (LOWER(DISTINCT ((((v0.c0)OR(v0.c2)))OR(v0.c2)))) ORDER BY (NOT (((v0.c0) BETWEEN (rt1.c1) AND (rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((((v0.c0)OR(v0.c2)))OR(v0.c2)))) IS TRUE)  as count FROM v0, vt1, vt0, rt1 ORDER BY (NOT (((v0.c0) BETWEEN (rt1.c1) AND (rt1.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt1, vt0, rt1 WHERE (LOWER(DISTINCT ((((v0.c0)OR(v0.c2)))OR(v0.c2)))) ORDER BY (NOT (((v0.c0) BETWEEN (rt1.c1) AND (rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((((v0.c0)OR(v0.c2)))OR(v0.c2)))) IS TRUE)  as count FROM v0, vt1, vt0, rt1 ORDER BY (NOT (((v0.c0) BETWEEN (rt1.c1) AND (rt1.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt1, vt0, rt1 WHERE (LOWER(DISTINCT ((((v0.c0)OR(v0.c2)))OR(v0.c2)))) ORDER BY (NOT (((v0.c0) BETWEEN (rt1.c1) AND (rt1.c2))))  NULLS FIRST;
SELECT * FROM vt1 WHERE (CAST(((vt1.c0)>=(vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)>=(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(((vt1.c0)>=(vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)>=(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(((vt1.c0)>=(vt1.c0)) AS INTEGER));
SELECT ALL * FROM vt1, vt0 RIGHT OUTER JOIN v0 ON CASE (((vt1.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c1)))  WHEN ((((v0.c3)OR(vt0.c0)))AND(v0.c3)) THEN ((v0.c0) IS FALSE) ELSE (v0.c3 IN ()) END WHERE (CAST((v0.c3 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((v0.c3 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN v0 ON CASE (((vt1.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c1)))  WHEN ((((v0.c3)OR(vt0.c0)))AND(v0.c3)) THEN ((v0.c0) IS FALSE) ELSE (v0.c3 IN ()) END);
SELECT ALL * FROM vt1, vt0 RIGHT OUTER JOIN v0 ON CASE (((vt1.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c1)))  WHEN ((((v0.c3)OR(vt0.c0)))AND(v0.c3)) THEN ((v0.c0) IS FALSE) ELSE (v0.c3 IN ()) END WHERE (CAST((v0.c3 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((v0.c3 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN v0 ON CASE (((vt1.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c1)))  WHEN ((((v0.c3)OR(vt0.c0)))AND(v0.c3)) THEN ((v0.c0) IS FALSE) ELSE (v0.c3 IN ()) END);
SELECT ALL * FROM vt1, vt0 RIGHT OUTER JOIN v0 ON CASE (((vt1.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c1)))  WHEN ((((v0.c3)OR(vt0.c0)))AND(v0.c3)) THEN ((v0.c0) IS FALSE) ELSE (v0.c3 IN ()) END WHERE (CAST((v0.c3 IN ()) AS INTEGER));
SELECT COUNT(*) FROM v0 NATURAL JOIN vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM v0 NATURAL JOIN vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM v0 NATURAL JOIN vt1 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt1, v0, rt1 WHERE (rt1.c0) ORDER BY ((((((((vt1.c0)AND(v0.c1)))OR(v0.c1)))OR((((vt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((0.26156460941722415))))))AND(CAST(NULL AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM vt1, v0, rt1 ORDER BY ((((((((vt1.c0)AND(v0.c1)))OR(v0.c1)))OR((((vt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((0.26156460941722415))))))AND(CAST(NULL AS REAL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, v0, rt1 WHERE (rt1.c0) ORDER BY ((((((((vt1.c0)AND(v0.c1)))OR(v0.c1)))OR((((vt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((0.26156460941722415))))))AND(CAST(NULL AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM vt1, v0, rt1 ORDER BY ((((((((vt1.c0)AND(v0.c1)))OR(v0.c1)))OR((((vt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((0.26156460941722415))))))AND(CAST(NULL AS REAL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, v0, rt1 WHERE (rt1.c0) ORDER BY ((((((((vt1.c0)AND(v0.c1)))OR(v0.c1)))OR((((vt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((0.26156460941722415))))))AND(CAST(NULL AS REAL)))  NULLS FIRST;
SELECT ALL * FROM vt1, v0 WHERE ((((~ ('ÂØªfq'))) NOT NULL)) ORDER BY ((((v0.c1)%(v0.c4))) BETWEEN (((v0.c1) NOT BETWEEN (v0.c3) AND (v0.c0))) AND (((v0.c3) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((~ ('ÂØªfq'))) NOT NULL)) IS TRUE)  as count FROM vt1, v0 ORDER BY ((((v0.c1)%(v0.c4))) BETWEEN (((v0.c1) NOT BETWEEN (v0.c3) AND (v0.c0))) AND (((v0.c3) IS FALSE))) ASC);
SELECT ALL * FROM vt1, v0 WHERE ((((~ ('ÂØªfq'))) NOT NULL)) ORDER BY ((((v0.c1)%(v0.c4))) BETWEEN (((v0.c1) NOT BETWEEN (v0.c3) AND (v0.c0))) AND (((v0.c3) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((~ ('ÂØªfq'))) NOT NULL)) IS TRUE)  as count FROM vt1, v0 ORDER BY ((((v0.c1)%(v0.c4))) BETWEEN (((v0.c1) NOT BETWEEN (v0.c3) AND (v0.c0))) AND (((v0.c3) IS FALSE))) ASC);
SELECT ALL * FROM vt1, v0 WHERE ((((~ ('ÂØªfq'))) NOT NULL)) ORDER BY ((((v0.c1)%(v0.c4))) BETWEEN (((v0.c1) NOT BETWEEN (v0.c3) AND (v0.c0))) AND (((v0.c3) IS FALSE))) ASC;
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((vt0.c0) ISNULL))&(((vt0.c0)!=(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL))&(((vt0.c0)<>(rt1.c1))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((vt0.c0) ISNULL))&(((vt0.c0)!=(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL))&(((vt0.c0)<>(rt1.c1))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((vt0.c0) ISNULL))&(((vt0.c0)!=(rt1.c1)))));
SELECT COUNT(*) FROM v0 INNER JOIN rt1 ON CASE WHEN '}w\Ôºë‚æ≤|' THEN CAST(rt1.c2 AS INTEGER) WHEN ((v0.c4)==(rt1.c1)) THEN ((((v0.c1)OR(vt0.c0)))AND(v0.c1)) WHEN ((((v0.c0)OR(rt1.c0)))OR(v0.c0)) THEN ((v0.c1)||(vt1.c0)) END LEFT OUTER JOIN vt1 ON IFNULL(((rt1.c0)IS NOT(v0.c3)), ((((v0.c1)AND('971238343')))OR(v0.c2))) CROSS JOIN vt0 ON NULL WHERE ((((vt0.c0)) NOT BETWEEN ((((rt1.c2) BETWEEN (rt1.c1) AND (v0.c2)))) AND ((CASE v0.c0  WHEN rt1.c2 THEN v0.c0 ELSE vt0.c0 END)))) ORDER BY ((((vt1.c0)/(vt0.c0)))IS(((v0.c4) BETWEEN (v0.c1) AND (v0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((rt1.c2) BETWEEN (rt1.c1) AND (v0.c2)))) AND ((CASE v0.c0  WHEN rt1.c2 THEN v0.c0 ELSE vt0.c0 END)))) IS TRUE)  as count FROM v0 INNER JOIN rt1 ON CASE WHEN '}w\Ôºë‚æ≤|' THEN CAST(rt1.c2 AS INTEGER) WHEN ((v0.c4)==(rt1.c1)) THEN ((((v0.c1)OR(vt0.c0)))AND(v0.c1)) WHEN ((((v0.c0)OR(rt1.c0)))OR(v0.c0)) THEN ((v0.c1)||(vt1.c0)) END LEFT OUTER JOIN vt1 ON IFNULL(((rt1.c0)IS NOT(v0.c3)), ((((v0.c1)AND('971238343')))OR(v0.c2))) CROSS JOIN vt0 ON NULL ORDER BY ((((vt1.c0)/(vt0.c0)))IS(((v0.c4) BETWEEN (v0.c1) AND (v0.c2)))) ASC);
SELECT COUNT(*) FROM v0 INNER JOIN rt1 ON CASE WHEN '}w\Ôºë‚æ≤|' THEN CAST(rt1.c2 AS INTEGER) WHEN ((v0.c4)==(rt1.c1)) THEN ((((v0.c1)OR(vt0.c0)))AND(v0.c1)) WHEN ((((v0.c0)OR(rt1.c0)))OR(v0.c0)) THEN ((v0.c1)||(vt1.c0)) END LEFT OUTER JOIN vt1 ON IFNULL(((rt1.c0)IS NOT(v0.c3)), ((((v0.c1)AND('971238343')))OR(v0.c2))) CROSS JOIN vt0 ON NULL WHERE ((((vt0.c0)) NOT BETWEEN ((((rt1.c2) BETWEEN (rt1.c1) AND (v0.c2)))) AND ((CASE v0.c0  WHEN rt1.c2 THEN v0.c0 ELSE vt0.c0 END)))) ORDER BY ((((vt1.c0)/(vt0.c0)))IS(((v0.c4) BETWEEN (v0.c1) AND (v0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((rt1.c2) BETWEEN (rt1.c1) AND (v0.c2)))) AND ((CASE v0.c0  WHEN rt1.c2 THEN v0.c0 ELSE vt0.c0 END)))) IS TRUE)  as count FROM v0 INNER JOIN rt1 ON CASE WHEN '}w\Ôºë‚æ≤|' THEN CAST(rt1.c2 AS INTEGER) WHEN ((v0.c4)==(rt1.c1)) THEN ((((v0.c1)OR(vt0.c0)))AND(v0.c1)) WHEN ((((v0.c0)OR(rt1.c0)))OR(v0.c0)) THEN ((v0.c1)||(vt1.c0)) END LEFT OUTER JOIN vt1 ON IFNULL(((rt1.c0)IS NOT(v0.c3)), ((((v0.c1)AND('971238343')))OR(v0.c2))) CROSS JOIN vt0 ON NULL ORDER BY ((((vt1.c0)/(vt0.c0)))IS(((v0.c4) BETWEEN (v0.c1) AND (v0.c2)))) ASC);
SELECT COUNT(*) FROM v0 INNER JOIN rt1 ON CASE WHEN '}w\Ôºë‚æ≤|' THEN CAST(rt1.c2 AS INTEGER) WHEN ((v0.c4)==(rt1.c1)) THEN ((((v0.c1)OR(vt0.c0)))AND(v0.c1)) WHEN ((((v0.c0)OR(rt1.c0)))OR(v0.c0)) THEN ((v0.c1)||(vt1.c0)) END LEFT OUTER JOIN vt1 ON IFNULL(((rt1.c0)IS NOT(v0.c3)), ((((v0.c1)AND('971238343')))OR(v0.c2))) CROSS JOIN vt0 ON NULL WHERE ((((vt0.c0)) NOT BETWEEN ((((rt1.c2) BETWEEN (rt1.c1) AND (v0.c2)))) AND ((CASE v0.c0  WHEN rt1.c2 THEN v0.c0 ELSE vt0.c0 END)))) ORDER BY ((((vt1.c0)/(vt0.c0)))IS(((v0.c4) BETWEEN (v0.c1) AND (v0.c2)))) ASC;
SELECT COUNT(*) FROM vt1, vt0, v0, rt1 WHERE ((((v0.c4)) BETWEEN ((vt0.c0 COLLATE BINARY)) AND (('-1711683435'))));
SELECT SUM(count) FROM (SELECT (((((v0.c4)) BETWEEN ((vt0.c0 COLLATE BINARY)) AND (('-1711683435')))) IS TRUE)  as count FROM vt1, vt0, v0, rt1);
SELECT COUNT(*) FROM vt1, vt0, v0, rt1 WHERE ((((v0.c4)) BETWEEN ((vt0.c0 COLLATE BINARY)) AND (('-1711683435'))));
SELECT SUM(count) FROM (SELECT (((((v0.c4)) BETWEEN ((vt0.c0 COLLATE BINARY)) AND (('-1711683435')))) IS TRUE)  as count FROM vt1, vt0, v0, rt1);
SELECT COUNT(*) FROM vt1, vt0, v0, rt1 WHERE ((((v0.c4)) BETWEEN ((vt0.c0 COLLATE BINARY)) AND (('-1711683435'))));
SELECT ALL COUNT(*) FROM vt0, v0 NOT INDEXED WHERE (((((v0.c4)-(v0.c3)))<=(((((v0.c3)OR(v0.c1)))OR(v0.c0))))) ORDER BY ((((((((((NULL) NOT BETWEEN (v0.c2) AND (v0.c2)))AND(((v0.c0) BETWEEN (vt0.c0) AND (v0.c1)))))AND(v0.c4 COLLATE RTRIM)))AND(v0.c1 COLLATE BINARY)))AND(v0.c4))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c4)-(v0.c3)))<=(((((v0.c3)OR(v0.c1)))OR(v0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((((((NULL) NOT BETWEEN (v0.c2) AND (v0.c2)))AND(((v0.c0) BETWEEN (vt0.c0) AND (v0.c1)))))AND(v0.c4 COLLATE RTRIM)))AND(v0.c1 COLLATE BINARY)))AND(v0.c4))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 NOT INDEXED WHERE (((((v0.c4)-(v0.c3)))<=(((((v0.c3)OR(v0.c1)))OR(v0.c0))))) ORDER BY ((((((((((NULL) NOT BETWEEN (v0.c2) AND (v0.c2)))AND(((v0.c0) BETWEEN (vt0.c0) AND (v0.c1)))))AND(v0.c4 COLLATE RTRIM)))AND(v0.c1 COLLATE BINARY)))AND(v0.c4))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c4)-(v0.c3)))<=(((((v0.c3)OR(v0.c1)))OR(v0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((((((NULL) NOT BETWEEN (v0.c2) AND (v0.c2)))AND(((v0.c0) BETWEEN (vt0.c0) AND (v0.c1)))))AND(v0.c4 COLLATE RTRIM)))AND(v0.c1 COLLATE BINARY)))AND(v0.c4))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 NOT INDEXED WHERE (((((v0.c4)-(v0.c3)))<=(((((v0.c3)OR(v0.c1)))OR(v0.c0))))) ORDER BY ((((((((((NULL) NOT BETWEEN (v0.c2) AND (v0.c2)))AND(((v0.c0) BETWEEN (vt0.c0) AND (v0.c1)))))AND(v0.c4 COLLATE RTRIM)))AND(v0.c1 COLLATE BINARY)))AND(v0.c4))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON rt1.c1 WHERE ((((vt1.c0 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) ISNULL)) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON rt1.c1);
SELECT ALL COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON rt1.c1 WHERE ((((vt1.c0 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) ISNULL)) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON rt1.c1);
SELECT ALL COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON rt1.c1 WHERE ((((vt1.c0 IN ())) ISNULL));
SELECT COUNT(*) FROM v0, vt0 INNER JOIN vt1 ON CAST(CASE WHEN v0.c3 THEN v0.c0 WHEN v0.c4 THEN v0.c2 WHEN rt1.c2 THEN vt1.c0 END AS INTEGER) FULL OUTER JOIN rt1 ON ((v0.c0)LIKE(((v0.c1)!=(x'')))) WHERE ((((rt1.c2))<((rt1.c2))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2))<((rt1.c2))) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0 INNER JOIN vt1 ON CAST(CASE WHEN v0.c3 THEN v0.c0 WHEN v0.c4 THEN v0.c2 WHEN rt1.c2 THEN vt1.c0 END AS INTEGER) FULL OUTER JOIN rt1 ON ((v0.c0)LIKE(((v0.c1)<>(x'')))));
SELECT COUNT(*) FROM v0, vt0 INNER JOIN vt1 ON CAST(CASE WHEN v0.c3 THEN v0.c0 WHEN v0.c4 THEN v0.c2 WHEN rt1.c2 THEN vt1.c0 END AS INTEGER) FULL OUTER JOIN rt1 ON ((v0.c0)LIKE(((v0.c1)!=(x'')))) WHERE ((((rt1.c2))<((rt1.c2))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2))<((rt1.c2))) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0 INNER JOIN vt1 ON CAST(CASE WHEN v0.c3 THEN v0.c0 WHEN v0.c4 THEN v0.c2 WHEN rt1.c2 THEN vt1.c0 END AS INTEGER) FULL OUTER JOIN rt1 ON ((v0.c0)LIKE(((v0.c1)<>(x'')))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((x'')=(vt1.c0))) ORDER BY ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR((((vt1.c0)) NOT BETWEEN (('8637665938875070696 902T2-1835T6974971507610245554:66-1497T7264279846753186840 ')) AND ((x''))))))OR(vt1.c0));
SELECT SUM(count) FROM (SELECT ((((x'')==(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR((((vt1.c0)) NOT BETWEEN (('8637665938875070696 902T2-1835T6974971507610245554:66-1497T7264279846753186840 ')) AND ((x''))))))OR(vt1.c0)));
SELECT ALL COUNT(*) FROM vt1 WHERE (((x'')=(vt1.c0))) ORDER BY ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR((((vt1.c0)) NOT BETWEEN (('8637665938875070696 902T2-1835T6974971507610245554:66-1497T7264279846753186840 ')) AND ((x''))))))OR(vt1.c0));
SELECT SUM(count) FROM (SELECT ((((x'')==(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR((((vt1.c0)) NOT BETWEEN (('8637665938875070696 902T2-1835T6974971507610245554:66-1497T7264279846753186840 ')) AND ((x''))))))OR(vt1.c0)));
SELECT ALL COUNT(*) FROM vt1 WHERE (((x'')=(vt1.c0))) ORDER BY ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR((((vt1.c0)) NOT BETWEEN (('8637665938875070696 902T2-1835T6974971507610245554:66-1497T7264279846753186840 ')) AND ((x''))))))OR(vt1.c0));
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (((rt1.c2) NOT BETWEEN (((rt1.c2) NOTNULL)) AND (v0.c0))) ORDER BY (((rt1.c0)>>(v0.c2)) IN (((NULL) IS FALSE), ((((((((v0.c2)AND(v0.c0)))OR(v0.c1)))AND(v0.c0)))OR(v0.c1)))) DESC, CASE rt1.c0  WHEN ((rt1.c0)>=(v0.c2)) THEN CAST(x'' AS REAL) ELSE rt1.c2 END, CASE WHEN ((rt1.c1)<(v0.c2)) THEN CAST(v0.c2 AS INTEGER) ELSE ((v0.c4)/(rt1.c0)) END;
SELECT SUM(count) FROM (SELECT ((((rt1.c2) NOT BETWEEN (((rt1.c2) NOTNULL)) AND (v0.c0))) IS TRUE)  as count FROM rt1, v0 ORDER BY (((rt1.c0)>>(v0.c2)) IN (((NULL) IS FALSE), ((((((((v0.c2)AND(v0.c0)))OR(v0.c1)))AND(v0.c0)))OR(v0.c1)))) DESC, CASE rt1.c0  WHEN ((rt1.c0)>=(v0.c2)) THEN CAST(x'' AS REAL) ELSE rt1.c2 END, CASE WHEN ((rt1.c1)<(v0.c2)) THEN CAST(v0.c2 AS INTEGER) ELSE ((v0.c4)/(rt1.c0)) END);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (((rt1.c2) NOT BETWEEN (((rt1.c2) NOTNULL)) AND (v0.c0))) ORDER BY (((rt1.c0)>>(v0.c2)) IN (((NULL) IS FALSE), ((((((((v0.c2)AND(v0.c0)))OR(v0.c1)))AND(v0.c0)))OR(v0.c1)))) DESC, CASE rt1.c0  WHEN ((rt1.c0)>=(v0.c2)) THEN CAST(x'' AS REAL) ELSE rt1.c2 END, CASE WHEN ((rt1.c1)<(v0.c2)) THEN CAST(v0.c2 AS INTEGER) ELSE ((v0.c4)/(rt1.c0)) END;
SELECT SUM(count) FROM (SELECT ((((rt1.c2) NOT BETWEEN (((rt1.c2) NOTNULL)) AND (v0.c0))) IS TRUE)  as count FROM rt1, v0 ORDER BY (((rt1.c0)>>(v0.c2)) IN (((NULL) IS FALSE), ((((((((v0.c2)AND(v0.c0)))OR(v0.c1)))AND(v0.c0)))OR(v0.c1)))) DESC, CASE rt1.c0  WHEN ((rt1.c0)>=(v0.c2)) THEN CAST(x'' AS REAL) ELSE rt1.c2 END, CASE WHEN ((rt1.c1)<(v0.c2)) THEN CAST(v0.c2 AS INTEGER) ELSE ((v0.c4)/(rt1.c0)) END);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (((rt1.c2) NOT BETWEEN (((rt1.c2) NOTNULL)) AND (v0.c0))) ORDER BY (((rt1.c0)>>(v0.c2)) IN (((NULL) IS FALSE), ((((((((v0.c2)AND(v0.c0)))OR(v0.c1)))AND(v0.c0)))OR(v0.c1)))) DESC, CASE rt1.c0  WHEN ((rt1.c0)>=(v0.c2)) THEN CAST(x'' AS REAL) ELSE rt1.c2 END, CASE WHEN ((rt1.c1)<(v0.c2)) THEN CAST(v0.c2 AS INTEGER) ELSE ((v0.c4)/(rt1.c0)) END;
SELECT ALL * FROM vt1 WHERE ('2018030776');
SELECT SUM(count) FROM (SELECT ALL (('2018030776') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ('2018030776');
SELECT SUM(count) FROM (SELECT ALL (('2018030776') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ('2018030776');
SELECT COUNT(*) FROM vt0, vt1, rt1 LEFT OUTER JOIN v0 ON (('0.8097273513254161')<=(((((v0.c2)OR(v0.c1)))AND(vt1.c0)))) WHERE (0.16949914230096308);
SELECT SUM(count) FROM (SELECT ALL ((0.16949914230096308) IS TRUE)  as count FROM vt0, vt1, rt1 LEFT OUTER JOIN v0 ON (('0.8097273513254161')<=(((((v0.c2)OR(v0.c1)))AND(vt1.c0)))));
SELECT COUNT(*) FROM vt0, vt1, rt1 LEFT OUTER JOIN v0 ON (('0.8097273513254161')<=(((((v0.c2)OR(v0.c1)))AND(vt1.c0)))) WHERE (0.16949914230096308);
SELECT SUM(count) FROM (SELECT ALL ((0.16949914230096308) IS TRUE)  as count FROM vt0, vt1, rt1 LEFT OUTER JOIN v0 ON (('0.8097273513254161')<=(((((v0.c2)OR(v0.c1)))AND(vt1.c0)))));
SELECT COUNT(*) FROM vt0, vt1, rt1 LEFT OUTER JOIN v0 ON (('0.8097273513254161')<=(((((v0.c2)OR(v0.c1)))AND(vt1.c0)))) WHERE (0.16949914230096308);
SELECT COUNT(*) FROM v0 WHERE (0.2544927789031557);
SELECT SUM(count) FROM (SELECT ((0.2544927789031557) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (0.2544927789031557);
SELECT SUM(count) FROM (SELECT ((0.2544927789031557) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (0.2544927789031557);
SELECT COUNT(*) FROM rt1, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, v0);
SELECT COUNT(*) FROM rt1, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, v0);
SELECT COUNT(*) FROM rt1, v0 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt1, v0, rt1 WHERE (((((TYPEOF(v0.c4))AND(UNLIKELY(DISTINCT rt1.c1))))AND(((vt1.c0) IS FALSE)))) ORDER BY CAST(NULLIF(v0.c3, v0.c1) AS BLOB), (NOT ((((v0.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((TYPEOF(v0.c4))AND(UNLIKELY(DISTINCT rt1.c1))))AND(((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt1, v0, rt1 ORDER BY CAST(NULLIF(v0.c3, v0.c1) AS BLOB), (NOT ((((v0.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c2)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, v0, rt1 WHERE (((((TYPEOF(v0.c4))AND(UNLIKELY(DISTINCT rt1.c1))))AND(((vt1.c0) IS FALSE)))) ORDER BY CAST(NULLIF(v0.c3, v0.c1) AS BLOB), (NOT ((((v0.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((TYPEOF(v0.c4))AND(UNLIKELY(DISTINCT rt1.c1))))AND(((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt1, v0, rt1 ORDER BY CAST(NULLIF(v0.c3, v0.c1) AS BLOB), (NOT ((((v0.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c2)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, v0, rt1 WHERE (((((TYPEOF(v0.c4))AND(UNLIKELY(DISTINCT rt1.c1))))AND(((vt1.c0) IS FALSE)))) ORDER BY CAST(NULLIF(v0.c3, v0.c1) AS BLOB), (NOT ((((v0.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c2)))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1, rt1 WHERE ('0.38353538279384547') ORDER BY CASE WHEN ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)) THEN ((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (('0.38353538279384547') IS TRUE)  as count FROM vt0, vt1, rt1 ORDER BY CASE WHEN ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)) THEN ((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)) END);
SELECT COUNT(*) FROM vt0, vt1, rt1 WHERE ('0.38353538279384547') ORDER BY CASE WHEN ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)) THEN ((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (('0.38353538279384547') IS TRUE)  as count FROM vt0, vt1, rt1 ORDER BY CASE WHEN ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)) THEN ((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)) END);
SELECT COUNT(*) FROM vt0, vt1, rt1 WHERE ('0.38353538279384547') ORDER BY CASE WHEN ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)) THEN ((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)) END;
SELECT ALL * FROM v0 FULL OUTER JOIN rt1 ON (((v0.c4))<=((TRIM(DISTINCT v0.c0, rt1.c1)))) WHERE ((UPPER(v0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((UPPER(v0.c0) IN ())) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt1 ON (((v0.c4))<=((TRIM(DISTINCT v0.c0, rt1.c1)))));
SELECT ALL * FROM v0 FULL OUTER JOIN rt1 ON (((v0.c4))<=((TRIM(DISTINCT v0.c0, rt1.c1)))) WHERE ((UPPER(v0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((UPPER(v0.c0) IN ())) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt1 ON (((v0.c4))<=((TRIM(DISTINCT v0.c0, rt1.c1)))));
SELECT ALL * FROM v0 FULL OUTER JOIN rt1 ON (((v0.c4))<=((TRIM(DISTINCT v0.c0, rt1.c1)))) WHERE ((UPPER(v0.c0) IN ()));
SELECT * FROM rt1 WHERE (x'') ORDER BY x'' ASC  NULLS LAST, (~ ((((rt1.c0, rt1.c0, rt1.c2))>=((rt1.c0, rt1.c0, rt1.c2))))) DESC  NULLS FIRST, ((MAX(rt1.c1, rt1.c1)) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1 ORDER BY x'' ASC  NULLS LAST, (~ ((((rt1.c0, rt1.c0, rt1.c2))>=((rt1.c0, rt1.c0, rt1.c2))))) DESC  NULLS FIRST, ((MAX(rt1.c1, rt1.c1)) NOTNULL) ASC  NULLS LAST);
SELECT * FROM rt1 WHERE (x'') ORDER BY x'' ASC  NULLS LAST, (~ ((((rt1.c0, rt1.c0, rt1.c2))>=((rt1.c0, rt1.c0, rt1.c2))))) DESC  NULLS FIRST, ((MAX(rt1.c1, rt1.c1)) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1 ORDER BY x'' ASC  NULLS LAST, (~ ((((rt1.c0, rt1.c0, rt1.c2))>=((rt1.c0, rt1.c0, rt1.c2))))) DESC  NULLS FIRST, ((MAX(rt1.c1, rt1.c1)) NOTNULL) ASC  NULLS LAST);
SELECT * FROM rt1 WHERE (x'') ORDER BY x'' ASC  NULLS LAST, (~ ((((rt1.c0, rt1.c0, rt1.c2))>=((rt1.c0, rt1.c0, rt1.c2))))) DESC  NULLS FIRST, ((MAX(rt1.c1, rt1.c1)) NOTNULL) ASC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (((LIKELY(rt1.c2))|((rt1.c2 IN ())))) ORDER BY ((((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)))AND(((rt1.c1)LIKE(rt1.c1)))))OR(JULIANDAY(rt1.c1, rt1.c1, rt1.c1, rt1.c0, rt1.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(rt1.c2))|((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)))AND(((rt1.c1)LIKE(rt1.c1)))))OR(JULIANDAY(rt1.c1, rt1.c1, rt1.c1, rt1.c0, rt1.c1))) DESC);
SELECT ALL * FROM rt1 WHERE (((LIKELY(rt1.c2))|((rt1.c2 IN ())))) ORDER BY ((((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)))AND(((rt1.c1)LIKE(rt1.c1)))))OR(JULIANDAY(rt1.c1, rt1.c1, rt1.c1, rt1.c0, rt1.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(rt1.c2))|((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)))AND(((rt1.c1)LIKE(rt1.c1)))))OR(JULIANDAY(rt1.c1, rt1.c1, rt1.c1, rt1.c0, rt1.c1))) DESC);
SELECT ALL * FROM rt1 WHERE (((LIKELY(rt1.c2))|((rt1.c2 IN ())))) ORDER BY ((((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)))AND(((rt1.c1)LIKE(rt1.c1)))))OR(JULIANDAY(rt1.c1, rt1.c1, rt1.c1, rt1.c0, rt1.c1))) DESC;
SELECT ALL COUNT(*) FROM rt1, vt0, v0, vt1 WHERE (((((((((((rt1.c2)AND(vt1.c0)))OR(vt0.c0)))OR(v0.c1)))OR(v0.c2)))|(((((vt1.c0)OR(x'')))AND(v0.c0))))) ORDER BY CASE ((rt1.c0)==(rt1.c2))  WHEN json_patch(vt1.c0, v0.c2) THEN ((v0.c0)GLOB(v0.c2)) ELSE ((rt1.c1)-(v0.c4)) END  NULLS LAST, (rt1.c0 IN ()) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c2)AND(vt1.c0)))OR(vt0.c0)))OR(v0.c1)))OR(v0.c2)))|(((((vt1.c0)OR(x'')))AND(v0.c0))))) IS TRUE)  as count FROM rt1, vt0, v0, vt1 ORDER BY CASE ((rt1.c0)==(rt1.c2))  WHEN json_patch(vt1.c0, v0.c2) THEN ((v0.c0)GLOB(v0.c2)) ELSE ((rt1.c1)-(v0.c4)) END  NULLS LAST, (rt1.c0 IN ()) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt1, vt0, v0, vt1 WHERE (((((((((((rt1.c2)AND(vt1.c0)))OR(vt0.c0)))OR(v0.c1)))OR(v0.c2)))|(((((vt1.c0)OR(x'')))AND(v0.c0))))) ORDER BY CASE ((rt1.c0)==(rt1.c2))  WHEN json_patch(vt1.c0, v0.c2) THEN ((v0.c0)GLOB(v0.c2)) ELSE ((rt1.c1)-(v0.c4)) END  NULLS LAST, (rt1.c0 IN ()) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c2)AND(vt1.c0)))OR(vt0.c0)))OR(v0.c1)))OR(v0.c2)))|(((((vt1.c0)OR(x'')))AND(v0.c0))))) IS TRUE)  as count FROM rt1, vt0, v0, vt1 ORDER BY CASE ((rt1.c0)==(rt1.c2))  WHEN json_patch(vt1.c0, v0.c2) THEN ((v0.c0)GLOB(v0.c2)) ELSE ((rt1.c1)-(v0.c4)) END  NULLS LAST, (rt1.c0 IN ()) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt1, vt0, v0, vt1 WHERE (((((((((((rt1.c2)AND(vt1.c0)))OR(vt0.c0)))OR(v0.c1)))OR(v0.c2)))|(((((vt1.c0)OR(x'')))AND(v0.c0))))) ORDER BY CASE ((rt1.c0)==(rt1.c2))  WHEN json_patch(vt1.c0, v0.c2) THEN ((v0.c0)GLOB(v0.c2)) ELSE ((rt1.c1)-(v0.c4)) END  NULLS LAST, (rt1.c0 IN ()) COLLATE BINARY;
SELECT * FROM vt1, v0 WHERE (((((((((((((v0.c1)OR(vt1.c0)))AND(v0.c1)))OR(vt1.c0)))OR(v0.c0)))AND(vt1.c0)))AND(vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((v0.c1)OR(vt1.c0)))AND(v0.c1)))OR(vt1.c0)))OR(v0.c0)))AND(vt1.c0)))AND(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE (((((((((((((v0.c1)OR(vt1.c0)))AND(v0.c1)))OR(vt1.c0)))OR(v0.c0)))AND(vt1.c0)))AND(vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((v0.c1)OR(vt1.c0)))AND(v0.c1)))OR(vt1.c0)))OR(v0.c0)))AND(vt1.c0)))AND(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE (((((((((((((v0.c1)OR(vt1.c0)))AND(v0.c1)))OR(vt1.c0)))OR(v0.c0)))AND(vt1.c0)))AND(vt1.c0)) COLLATE RTRIM);
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER))AND(((vt1.c0)LIKE(vt1.c0))))) ORDER BY ((0.11665360582756867)GLOB(vt1.c0)) COLLATE RTRIM  NULLS LAST, CAST(vt1.c0 AS NUMERIC) ASC  NULLS FIRST, ((((vt1.c0)>=(vt1.c0))) BETWEEN (TRIM(DISTINCT vt1.c0)) AND (NULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS INTEGER))AND(((vt1.c0)LIKE(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((0.11665360582756867)GLOB(vt1.c0)) COLLATE RTRIM  NULLS LAST, CAST(vt1.c0 AS NUMERIC) ASC  NULLS FIRST, ((((vt1.c0)>=(vt1.c0))) BETWEEN (TRIM(DISTINCT vt1.c0)) AND (NULL)) ASC);
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER))AND(((vt1.c0)LIKE(vt1.c0))))) ORDER BY ((0.11665360582756867)GLOB(vt1.c0)) COLLATE RTRIM  NULLS LAST, CAST(vt1.c0 AS NUMERIC) ASC  NULLS FIRST, ((((vt1.c0)>=(vt1.c0))) BETWEEN (TRIM(DISTINCT vt1.c0)) AND (NULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS INTEGER))AND(((vt1.c0)LIKE(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((0.11665360582756867)GLOB(vt1.c0)) COLLATE RTRIM  NULLS LAST, CAST(vt1.c0 AS NUMERIC) ASC  NULLS FIRST, ((((vt1.c0)>=(vt1.c0))) BETWEEN (TRIM(DISTINCT vt1.c0)) AND (NULL)) ASC);
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER))AND(((vt1.c0)LIKE(vt1.c0))))) ORDER BY ((0.11665360582756867)GLOB(vt1.c0)) COLLATE RTRIM  NULLS LAST, CAST(vt1.c0 AS NUMERIC) ASC  NULLS FIRST, ((((vt1.c0)>=(vt1.c0))) BETWEEN (TRIM(DISTINCT vt1.c0)) AND (NULL)) ASC;
SELECT ALL * FROM vt0, v0, rt1, vt1 WHERE (CASE (~ (rt1.c0))  WHEN ((vt0.c0) IS TRUE) THEN 0Xca5e118 ELSE CASE rt1.c0  WHEN '549777885' THEN v0.c3 ELSE v0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (rt1.c0))  WHEN ((vt0.c0) IS TRUE) THEN 0xca5e118 ELSE CASE rt1.c0  WHEN '549777885' THEN v0.c3 ELSE v0.c0 END END) IS TRUE)  as count FROM vt0, v0, rt1, vt1);
SELECT ALL * FROM vt0, v0, rt1, vt1 WHERE (CASE (~ (rt1.c0))  WHEN ((vt0.c0) IS TRUE) THEN 0Xca5e118 ELSE CASE rt1.c0  WHEN '549777885' THEN v0.c3 ELSE v0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (rt1.c0))  WHEN ((vt0.c0) IS TRUE) THEN 0xca5e118 ELSE CASE rt1.c0  WHEN '549777885' THEN v0.c3 ELSE v0.c0 END END) IS TRUE)  as count FROM vt0, v0, rt1, vt1);
SELECT ALL * FROM vt0, v0, rt1, vt1 WHERE (CASE (~ (rt1.c0))  WHEN ((vt0.c0) IS TRUE) THEN 0Xca5e118 ELSE CASE rt1.c0  WHEN '549777885' THEN v0.c3 ELSE v0.c0 END END);
SELECT * FROM rt1, vt1 WHERE (((LIKELY(rt1.c0)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((LIKELY(rt1.c0)) NOTNULL)) IS TRUE)  as count FROM rt1, vt1);
SELECT * FROM rt1, vt1 WHERE (((LIKELY(rt1.c0)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((LIKELY(rt1.c0)) NOTNULL)) IS TRUE)  as count FROM rt1, vt1);
SELECT * FROM rt1, vt1 WHERE (((LIKELY(rt1.c0)) NOTNULL));
SELECT ALL * FROM rt1, vt1, vt0, v0 WHERE (v0.c0) ORDER BY (((rt1.c1)OR(rt1.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt1, vt1, vt0, v0 ORDER BY (((rt1.c1)OR(rt1.c1)) IN ()) ASC);
SELECT ALL * FROM rt1, vt1, vt0, v0 WHERE (v0.c0) ORDER BY (((rt1.c1)OR(rt1.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt1, vt1, vt0, v0 ORDER BY (((rt1.c1)OR(rt1.c1)) IN ()) ASC);
SELECT ALL * FROM rt1, vt1, vt0, v0 WHERE (v0.c0) ORDER BY (((rt1.c1)OR(rt1.c1)) IN ()) ASC;
SELECT ALL * FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (x'');
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (((((((((((((v0.c0)OR(v0.c3)))OR(v0.c0)))AND(v0.c4)))OR(v0.c4)))AND(((0Xffffffffe47d3195)<=(x'')))))AND((NOT (v0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((v0.c0)OR(v0.c3)))OR(v0.c0)))AND(v0.c4)))OR(v0.c4)))AND(((0Xffffffffe47d3195)<=(x'')))))AND((NOT (v0.c1))))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (((((((((((((v0.c0)OR(v0.c3)))OR(v0.c0)))AND(v0.c4)))OR(v0.c4)))AND(((0Xffffffffe47d3195)<=(x'')))))AND((NOT (v0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((v0.c0)OR(v0.c3)))OR(v0.c0)))AND(v0.c4)))OR(v0.c4)))AND(((0Xffffffffe47d3195)<=(x'')))))AND((NOT (v0.c1))))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (((((((((((((v0.c0)OR(v0.c3)))OR(v0.c0)))AND(v0.c4)))OR(v0.c4)))AND(((0Xffffffffe47d3195)<=(x'')))))AND((NOT (v0.c1)))));
SELECT ALL * FROM vt0, v0, vt1 RIGHT OUTER JOIN rt1 ON rt1.c1 WHERE (((v0.c0 COLLATE RTRIM)/((((v0.c1, v0.c3, v0.c4))<=((v0.c0, NULL, v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM)/((((v0.c1, v0.c3, v0.c4))<=((v0.c0, NULL, v0.c0)))))) IS TRUE)  as count FROM vt0, v0, vt1 RIGHT OUTER JOIN rt1 ON rt1.c1);
SELECT ALL * FROM vt0, v0, vt1 RIGHT OUTER JOIN rt1 ON rt1.c1 WHERE (((v0.c0 COLLATE RTRIM)/((((v0.c1, v0.c3, v0.c4))<=((v0.c0, NULL, v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM)/((((v0.c1, v0.c3, v0.c4))<=((v0.c0, NULL, v0.c0)))))) IS TRUE)  as count FROM vt0, v0, vt1 RIGHT OUTER JOIN rt1 ON rt1.c1);
SELECT ALL * FROM vt0, v0, vt1 RIGHT OUTER JOIN rt1 ON rt1.c1 WHERE (((v0.c0 COLLATE RTRIM)/((((v0.c1, v0.c3, v0.c4))<=((v0.c0, NULL, v0.c0))))));
SELECT COUNT(*) FROM rt1 WHERE ((- (0.40718409302795944)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((- (0.40718409302795944)) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((- (0.40718409302795944)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((- (0.40718409302795944)) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((- (0.40718409302795944)) COLLATE BINARY);
SELECT ALL * FROM vt1, v0 WHERE ((NOT ('_^r I7*sF' COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((NOT ('_^r I7*sF' COLLATE BINARY))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE ((NOT ('_^r I7*sF' COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((NOT ('_^r I7*sF' COLLATE BINARY))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE ((NOT ('_^r I7*sF' COLLATE BINARY)));
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((((x''))<=((rt1.c2))))IS((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((x''))<=((rt1.c2))))IS((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((((x''))<=((rt1.c2))))IS((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((x''))<=((rt1.c2))))IS((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((((x''))<=((rt1.c2))))IS((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT * FROM v0, vt0, rt1 WHERE (((((json_quote(v0.c1))OR(LIKE(NULL, rt1.c0, 'l'))))AND(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((json_quote(v0.c1))OR(LIKE(NULL, rt1.c0, 'l'))))AND(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0))))) IS TRUE)  as count FROM v0, vt0 NOT INDEXED, rt1);
SELECT * FROM v0, vt0, rt1 WHERE (((((json_quote(v0.c1))OR(LIKE(NULL, rt1.c0, 'l'))))AND(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((json_quote(v0.c1))OR(LIKE(NULL, rt1.c0, 'l'))))AND(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0))))) IS TRUE)  as count FROM v0, vt0 NOT INDEXED, rt1);
SELECT * FROM v0, vt0, rt1 WHERE (((((json_quote(v0.c1))OR(LIKE(NULL, rt1.c0, 'l'))))AND(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0)))));
SELECT * FROM vt0 WHERE (((((((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND (('_^r i7*sf', vt0.c0, vt0.c0)))))) ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(0.5971368983788196)))OR(vt0.c0))) BETWEEN (((vt0.c0)&(vt0.c0))) AND ((- (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND (('_^r i7*sf', vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(0.5971368983788196)))OR(vt0.c0))) BETWEEN (((vt0.c0)&(vt0.c0))) AND ((- (vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND (('_^r i7*sf', vt0.c0, vt0.c0)))))) ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(0.5971368983788196)))OR(vt0.c0))) BETWEEN (((vt0.c0)&(vt0.c0))) AND ((- (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND (('_^r i7*sf', vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(0.5971368983788196)))OR(vt0.c0))) BETWEEN (((vt0.c0)&(vt0.c0))) AND ((- (vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND (('_^r i7*sf', vt0.c0, vt0.c0)))))) ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(0.5971368983788196)))OR(vt0.c0))) BETWEEN (((vt0.c0)&(vt0.c0))) AND ((- (vt0.c0))))  NULLS FIRST;
SELECT * FROM v0, vt0, rt1 WHERE (LIKELIHOOD((+ (rt1.c2)), 0.3729300035618256)) ORDER BY ((((rt1.c2) NOT BETWEEN (vt0.c0) AND (v0.c1)))<>(0.6370232691637616))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((+ (rt1.c2)), 0.3729300035618256)) IS TRUE)  as count FROM v0, vt0, rt1 ORDER BY ((((rt1.c2) NOT BETWEEN (vt0.c0) AND (v0.c1)))!=(0.6370232691637616))  NULLS LAST);
SELECT * FROM v0, vt0, rt1 WHERE (LIKELIHOOD((+ (rt1.c2)), 0.3729300035618256)) ORDER BY ((((rt1.c2) NOT BETWEEN (vt0.c0) AND (v0.c1)))<>(0.6370232691637616))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((+ (rt1.c2)), 0.3729300035618256)) IS TRUE)  as count FROM v0, vt0, rt1 ORDER BY ((((rt1.c2) NOT BETWEEN (vt0.c0) AND (v0.c1)))!=(0.6370232691637616))  NULLS LAST);
SELECT * FROM v0, vt0, rt1 WHERE (LIKELIHOOD((+ (rt1.c2)), 0.3729300035618256)) ORDER BY ((((rt1.c2) NOT BETWEEN (vt0.c0) AND (v0.c1)))<>(0.6370232691637616))  NULLS LAST;
SELECT * FROM v0 WHERE ((v0.c2 IN ())) ORDER BY LENGTH(CAST(v0.c0 AS BLOB)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((v0.c2 IN ())) IS TRUE)  as count FROM v0 ORDER BY LENGTH(CAST(v0.c0 AS BLOB)) ASC  NULLS LAST);
SELECT * FROM v0 WHERE ((v0.c2 IN ())) ORDER BY LENGTH(CAST(v0.c0 AS BLOB)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((v0.c2 IN ())) IS TRUE)  as count FROM v0 ORDER BY LENGTH(CAST(v0.c0 AS BLOB)) ASC  NULLS LAST);
SELECT * FROM v0 WHERE ((v0.c2 IN ())) ORDER BY LENGTH(CAST(v0.c0 AS BLOB)) ASC  NULLS LAST;
SELECT ALL * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c4) AND (v0.c2))) NOT BETWEEN (((v0.c3) IS FALSE)) AND (v0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (v0.c4) AND (v0.c2))) NOT BETWEEN (((v0.c3) IS FALSE)) AND (v0.c2 COLLATE BINARY))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c4) AND (v0.c2))) NOT BETWEEN (((v0.c3) IS FALSE)) AND (v0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (v0.c4) AND (v0.c2))) NOT BETWEEN (((v0.c3) IS FALSE)) AND (v0.c2 COLLATE BINARY))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c4) AND (v0.c2))) NOT BETWEEN (((v0.c3) IS FALSE)) AND (v0.c2 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt1, vt0, rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM vt1, vt0, rt1);
SELECT ALL COUNT(*) FROM vt1, vt0, rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM vt1, vt0, rt1);
SELECT ALL COUNT(*) FROM vt1, vt0, rt1 WHERE (rt1.c0);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE WHEN SQLITE_VERSION() THEN rt1.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN SQLITE_VERSION() THEN rt1.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE WHEN SQLITE_VERSION() THEN rt1.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN SQLITE_VERSION() THEN rt1.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE WHEN SQLITE_VERSION() THEN rt1.c0 COLLATE BINARY END);
SELECT ALL * FROM rt1 WHERE ((((((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c0)))AND(rt1.c0)))OR(rt1.c0))))<((x'' COLLATE RTRIM)))) ORDER BY 0X1ec79cf1;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c0)))AND(rt1.c0)))OR(rt1.c0))))<((x'' COLLATE RTRIM)))) IS TRUE)  as count FROM rt1 ORDER BY 0X1ec79cf1);
SELECT ALL * FROM rt1 WHERE ((((((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c0)))AND(rt1.c0)))OR(rt1.c0))))<((x'' COLLATE RTRIM)))) ORDER BY 0X1ec79cf1;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c0)))AND(rt1.c0)))OR(rt1.c0))))<((x'' COLLATE RTRIM)))) IS TRUE)  as count FROM rt1 ORDER BY 0X1ec79cf1);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt1.c0);
SELECT * FROM vt1, vt0 NATURAL JOIN rt1 WHERE (((CAST(rt1.c2 AS INTEGER)) BETWEEN (CASE NULL  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN NULL THEN rt1.c1 ELSE rt1.c1 END) AND (x'')));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c2 AS INTEGER)) BETWEEN (CASE NULL  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN NULL THEN rt1.c1 ELSE rt1.c1 END) AND (x''))) IS TRUE)  as count FROM vt1, vt0 NATURAL JOIN rt1);
SELECT * FROM vt1, vt0 NATURAL JOIN rt1 WHERE (((CAST(rt1.c2 AS INTEGER)) BETWEEN (CASE NULL  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN NULL THEN rt1.c1 ELSE rt1.c1 END) AND (x'')));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c2 AS INTEGER)) BETWEEN (CASE NULL  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN NULL THEN rt1.c1 ELSE rt1.c1 END) AND (x''))) IS TRUE)  as count FROM vt1, vt0 NATURAL JOIN rt1);
SELECT * FROM vt1, vt0 NATURAL JOIN rt1 WHERE (((CAST(rt1.c2 AS INTEGER)) BETWEEN (CASE NULL  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN NULL THEN rt1.c1 ELSE rt1.c1 END) AND (x'')));
SELECT COUNT(*) FROM v0, rt1, vt1 WHERE (CASE WHEN ((v0.c3) BETWEEN (v0.c2) AND (0.11665360582756867)) THEN ((((rt1.c2)AND(v0.c0)))OR(v0.c4)) END) ORDER BY ((((((v0.c2)OR(0.20844835076710844)))AND(rt1.c0))) BETWEEN (((((vt1.c0)AND('-745538227')))AND(vt1.c0))) AND ('1966587825')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c3) BETWEEN (v0.c2) AND (0.11665360582756867)) THEN ((((rt1.c2)AND(v0.c0)))OR(v0.c4)) END) IS TRUE)  as count FROM v0, rt1, vt1 ORDER BY ((((((v0.c2)OR(0.20844835076710844)))AND(rt1.c0))) BETWEEN (((((vt1.c0)AND('-745538227')))AND(vt1.c0))) AND ('1966587825')) ASC);
SELECT COUNT(*) FROM v0, rt1, vt1 WHERE (CASE WHEN ((v0.c3) BETWEEN (v0.c2) AND (0.11665360582756867)) THEN ((((rt1.c2)AND(v0.c0)))OR(v0.c4)) END) ORDER BY ((((((v0.c2)OR(0.20844835076710844)))AND(rt1.c0))) BETWEEN (((((vt1.c0)AND('-745538227')))AND(vt1.c0))) AND ('1966587825')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c3) BETWEEN (v0.c2) AND (0.11665360582756867)) THEN ((((rt1.c2)AND(v0.c0)))OR(v0.c4)) END) IS TRUE)  as count FROM v0, rt1, vt1 ORDER BY ((((((v0.c2)OR(0.20844835076710844)))AND(rt1.c0))) BETWEEN (((((vt1.c0)AND('-745538227')))AND(vt1.c0))) AND ('1966587825')) ASC);
SELECT COUNT(*) FROM v0, rt1, vt1 WHERE (CASE WHEN ((v0.c3) BETWEEN (v0.c2) AND (0.11665360582756867)) THEN ((((rt1.c2)AND(v0.c0)))OR(v0.c4)) END) ORDER BY ((((((v0.c2)OR(0.20844835076710844)))AND(rt1.c0))) BETWEEN (((((vt1.c0)AND('-745538227')))AND(vt1.c0))) AND ('1966587825')) ASC;
SELECT ALL COUNT(*) FROM v0, vt0, rt1, vt1 WHERE ((((v0.c2, v0.c0, 0.9674810284842802)) NOT BETWEEN ((((v0.c0) NOT NULL), ((vt0.c0)&(rt1.c2)), (((v0.c3))>((v0.c0))))) AND ((v0.c2 COLLATE NOCASE, (((v0.c4, rt1.c1, v0.c2)) NOT BETWEEN ((v0.c1, rt1.c1, v0.c1)) AND (('Ëêº', rt1.c2, 0.5684859858802984))), ((('-1951613097', v0.c4, vt0.c0)) BETWEEN ((v0.c4, v0.c2, vt0.c0)) AND ((v0.c0, rt1.c2, v0.c2)))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2, v0.c0, 0.9674810284842802)) NOT BETWEEN ((((v0.c0) NOT NULL), ((vt0.c0)&(rt1.c2)), (((v0.c3))>((v0.c0))))) AND ((v0.c2 COLLATE NOCASE, (((v0.c4, rt1.c1, v0.c2)) NOT BETWEEN ((v0.c1, rt1.c1, v0.c1)) AND (('Ëêº', rt1.c2, 0.5684859858802984))), ((('-1951613097', v0.c4, vt0.c0)) BETWEEN ((v0.c4, v0.c2, vt0.c0)) AND ((v0.c0, rt1.c2, v0.c2))))))) IS TRUE)  as count FROM v0, vt0, rt1, vt1);
SELECT ALL COUNT(*) FROM v0, vt0, rt1, vt1 WHERE ((((v0.c2, v0.c0, 0.9674810284842802)) NOT BETWEEN ((((v0.c0) NOT NULL), ((vt0.c0)&(rt1.c2)), (((v0.c3))>((v0.c0))))) AND ((v0.c2 COLLATE NOCASE, (((v0.c4, rt1.c1, v0.c2)) NOT BETWEEN ((v0.c1, rt1.c1, v0.c1)) AND (('Ëêº', rt1.c2, 0.5684859858802984))), ((('-1951613097', v0.c4, vt0.c0)) BETWEEN ((v0.c4, v0.c2, vt0.c0)) AND ((v0.c0, rt1.c2, v0.c2)))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2, v0.c0, 0.9674810284842802)) NOT BETWEEN ((((v0.c0) NOT NULL), ((vt0.c0)&(rt1.c2)), (((v0.c3))>((v0.c0))))) AND ((v0.c2 COLLATE NOCASE, (((v0.c4, rt1.c1, v0.c2)) NOT BETWEEN ((v0.c1, rt1.c1, v0.c1)) AND (('Ëêº', rt1.c2, 0.5684859858802984))), ((('-1951613097', v0.c4, vt0.c0)) BETWEEN ((v0.c4, v0.c2, vt0.c0)) AND ((v0.c0, rt1.c2, v0.c2))))))) IS TRUE)  as count FROM v0, vt0, rt1, vt1);
SELECT ALL COUNT(*) FROM v0, vt0, rt1, vt1 WHERE ((((v0.c2, v0.c0, 0.9674810284842802)) NOT BETWEEN ((((v0.c0) NOT NULL), ((vt0.c0)&(rt1.c2)), (((v0.c3))>((v0.c0))))) AND ((v0.c2 COLLATE NOCASE, (((v0.c4, rt1.c1, v0.c2)) NOT BETWEEN ((v0.c1, rt1.c1, v0.c1)) AND (('Ëêº', rt1.c2, 0.5684859858802984))), ((('-1951613097', v0.c4, vt0.c0)) BETWEEN ((v0.c4, v0.c2, vt0.c0)) AND ((v0.c0, rt1.c2, v0.c2)))))));
SELECT * FROM v0, vt0 WHERE (CASE WHEN v0.c0 THEN v0.c3 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 THEN v0.c3 END COLLATE BINARY) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (CASE WHEN v0.c0 THEN v0.c3 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 THEN v0.c3 END COLLATE BINARY) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (CASE WHEN v0.c0 THEN v0.c3 END COLLATE BINARY);
SELECT ALL * FROM rt1 WHERE (0.69682090517629) ORDER BY CASE CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END  WHEN (((rt1.c0, 0.2041532708632291, rt1.c1))!=((rt1.c1, rt1.c0, rt1.c0))) THEN ((rt1.c2)/(rt1.c0)) WHEN ((((rt1.c0)OR(rt1.c1)))AND(rt1.c0)) THEN ((rt1.c0)GLOB(rt1.c2)) WHEN ((((((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c0)))OR(rt1.c2)))AND(rt1.c2)) THEN CAST(rt1.c0 AS BLOB) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.69682090517629) IS TRUE)  as count FROM rt1 ORDER BY CASE CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END  WHEN (((rt1.c0, 0.2041532708632291, rt1.c1))!=((rt1.c1, rt1.c0, rt1.c0))) THEN ((rt1.c2)/(rt1.c0)) WHEN ((((rt1.c0)OR(rt1.c1)))AND(rt1.c0)) THEN ((rt1.c0)GLOB(rt1.c2)) WHEN ((((((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c0)))OR(rt1.c2)))AND(rt1.c2)) THEN CAST(rt1.c0 AS BLOB) END DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (0.69682090517629) ORDER BY CASE CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END  WHEN (((rt1.c0, 0.2041532708632291, rt1.c1))!=((rt1.c1, rt1.c0, rt1.c0))) THEN ((rt1.c2)/(rt1.c0)) WHEN ((((rt1.c0)OR(rt1.c1)))AND(rt1.c0)) THEN ((rt1.c0)GLOB(rt1.c2)) WHEN ((((((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c0)))OR(rt1.c2)))AND(rt1.c2)) THEN CAST(rt1.c0 AS BLOB) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.69682090517629) IS TRUE)  as count FROM rt1 ORDER BY CASE CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END  WHEN (((rt1.c0, 0.2041532708632291, rt1.c1))!=((rt1.c1, rt1.c0, rt1.c0))) THEN ((rt1.c2)/(rt1.c0)) WHEN ((((rt1.c0)OR(rt1.c1)))AND(rt1.c0)) THEN ((rt1.c0)GLOB(rt1.c2)) WHEN ((((((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c0)))OR(rt1.c2)))AND(rt1.c2)) THEN CAST(rt1.c0 AS BLOB) END DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (0.69682090517629) ORDER BY CASE CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END  WHEN (((rt1.c0, 0.2041532708632291, rt1.c1))!=((rt1.c1, rt1.c0, rt1.c0))) THEN ((rt1.c2)/(rt1.c0)) WHEN ((((rt1.c0)OR(rt1.c1)))AND(rt1.c0)) THEN ((rt1.c0)GLOB(rt1.c2)) WHEN ((((((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c0)))OR(rt1.c2)))AND(rt1.c2)) THEN CAST(rt1.c0 AS BLOB) END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)|(vt0.c0))  WHEN COALESCE(DISTINCT vt0.c0, vt0.c0) THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN NULL THEN (~ ('-2069367275')) WHEN (~ (vt0.c0)) THEN 0.5953107382271453 WHEN ((x'34eb4051') IS TRUE) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0) NOT NULL) ELSE ((0.8308696047633078)*(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)|(vt0.c0))  WHEN COALESCE(DISTINCT vt0.c0, vt0.c0) THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN NULL THEN (~ ('-2069367275')) WHEN (~ (vt0.c0)) THEN 0.5953107382271453 WHEN ((x'34eb4051') IS TRUE) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0) NOT NULL) ELSE ((0.8308696047633078)*(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)|(vt0.c0))  WHEN COALESCE(DISTINCT vt0.c0, vt0.c0) THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN NULL THEN (~ ('-2069367275')) WHEN (~ (vt0.c0)) THEN 0.5953107382271453 WHEN ((x'34eb4051') IS TRUE) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0) NOT NULL) ELSE ((0.8308696047633078)*(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)|(vt0.c0))  WHEN COALESCE(DISTINCT vt0.c0, vt0.c0) THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN NULL THEN (~ ('-2069367275')) WHEN (~ (vt0.c0)) THEN 0.5953107382271453 WHEN ((x'34eb4051') IS TRUE) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0) NOT NULL) ELSE ((0.8308696047633078)*(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)|(vt0.c0))  WHEN COALESCE(DISTINCT vt0.c0, vt0.c0) THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN NULL THEN (~ ('-2069367275')) WHEN (~ (vt0.c0)) THEN 0.5953107382271453 WHEN ((x'34eb4051') IS TRUE) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0) NOT NULL) ELSE ((0.8308696047633078)*(vt0.c0)) END);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (rt1.c1);
SELECT COUNT(*) FROM v0, vt1, rt1 WHERE (((((rt1.c2 COLLATE RTRIM)AND(CAST(vt1.c0 AS BLOB))))AND(v0.c1 COLLATE NOCASE))) ORDER BY ((((((rt1.c0)AND(rt1.c1)))AND('e\QS.C')))%((((rt1.c1, v0.c3, NULL))>((v0.c2, v0.c0, v0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2 COLLATE RTRIM)AND(CAST(vt1.c0 AS BLOB))))AND(v0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt1, rt1 ORDER BY ((((((rt1.c0)AND(rt1.c1)))AND('e\QS.C')))%((((rt1.c1, v0.c3, NULL))>((v0.c2, v0.c0, v0.c2))))) ASC);
SELECT COUNT(*) FROM v0, vt1, rt1 WHERE (((((rt1.c2 COLLATE RTRIM)AND(CAST(vt1.c0 AS BLOB))))AND(v0.c1 COLLATE NOCASE))) ORDER BY ((((((rt1.c0)AND(rt1.c1)))AND('e\QS.C')))%((((rt1.c1, v0.c3, NULL))>((v0.c2, v0.c0, v0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2 COLLATE RTRIM)AND(CAST(vt1.c0 AS BLOB))))AND(v0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt1, rt1 ORDER BY ((((((rt1.c0)AND(rt1.c1)))AND('e\QS.C')))%((((rt1.c1, v0.c3, NULL))>((v0.c2, v0.c0, v0.c2))))) ASC);
SELECT COUNT(*) FROM v0, vt1, rt1 WHERE (((((rt1.c2 COLLATE RTRIM)AND(CAST(vt1.c0 AS BLOB))))AND(v0.c1 COLLATE NOCASE))) ORDER BY ((((((rt1.c0)AND(rt1.c1)))AND('e\QS.C')))%((((rt1.c1, v0.c3, NULL))>((v0.c2, v0.c0, v0.c2))))) ASC;
SELECT COUNT(*) FROM vt1, vt0, v0, rt1 WHERE (CASE WHEN x'5329' THEN UPPER(DISTINCT rt1.c0) ELSE ((rt1.c1) BETWEEN (rt1.c2) AND (NULL)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'5329' THEN UPPER(DISTINCT rt1.c0) ELSE ((rt1.c1) BETWEEN (rt1.c2) AND (NULL)) END) IS TRUE)  as count FROM vt1, vt0, v0, rt1);
SELECT COUNT(*) FROM vt1, vt0, v0, rt1 WHERE (CASE WHEN x'5329' THEN UPPER(DISTINCT rt1.c0) ELSE ((rt1.c1) BETWEEN (rt1.c2) AND (NULL)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'5329' THEN UPPER(DISTINCT rt1.c0) ELSE ((rt1.c1) BETWEEN (rt1.c2) AND (NULL)) END) IS TRUE)  as count FROM vt1, vt0, v0, rt1);
SELECT COUNT(*) FROM vt1, vt0, v0, rt1 WHERE (CASE WHEN x'5329' THEN UPPER(DISTINCT rt1.c0) ELSE ((rt1.c1) BETWEEN (rt1.c2) AND (NULL)) END);
SELECT ALL COUNT(*) FROM vt1, v0, rt1 WHERE (CASE WHEN CASE WHEN v0.c4 THEN v0.c4 END THEN vt1.c0 COLLATE BINARY WHEN CASE WHEN v0.c1 THEN v0.c4 END THEN ((('549777885'))<=((rt1.c0))) WHEN ((v0.c4)-(v0.c4)) THEN ((((v0.c2)AND(v0.c0)))OR(x'')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN v0.c4 THEN v0.c4 END THEN vt1.c0 COLLATE BINARY WHEN CASE WHEN v0.c1 THEN v0.c4 END THEN ((('549777885'))<=((rt1.c0))) WHEN ((v0.c4)-(v0.c4)) THEN ((((v0.c2)AND(v0.c0)))OR(x'')) END) IS TRUE)  as count FROM vt1, v0, rt1);
SELECT ALL COUNT(*) FROM vt1, v0, rt1 WHERE (CASE WHEN CASE WHEN v0.c4 THEN v0.c4 END THEN vt1.c0 COLLATE BINARY WHEN CASE WHEN v0.c1 THEN v0.c4 END THEN ((('549777885'))<=((rt1.c0))) WHEN ((v0.c4)-(v0.c4)) THEN ((((v0.c2)AND(v0.c0)))OR(x'')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN v0.c4 THEN v0.c4 END THEN vt1.c0 COLLATE BINARY WHEN CASE WHEN v0.c1 THEN v0.c4 END THEN ((('549777885'))<=((rt1.c0))) WHEN ((v0.c4)-(v0.c4)) THEN ((((v0.c2)AND(v0.c0)))OR(x'')) END) IS TRUE)  as count FROM vt1, v0, rt1);
SELECT ALL COUNT(*) FROM vt1, v0, rt1 WHERE (CASE WHEN CASE WHEN v0.c4 THEN v0.c4 END THEN vt1.c0 COLLATE BINARY WHEN CASE WHEN v0.c1 THEN v0.c4 END THEN ((('549777885'))<=((rt1.c0))) WHEN ((v0.c4)-(v0.c4)) THEN ((((v0.c2)AND(v0.c0)))OR(x'')) END);
SELECT * FROM rt1, vt0, vt1 WHERE (rt1.c0) ORDER BY ABS((rt1.c2 IN (vt0.c0))) ASC, (+ (((((rt1.c0)OR(vt1.c0)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1, vt0, vt1 ORDER BY ABS((rt1.c2 IN (vt0.c0))) ASC, (+ (((((rt1.c0)OR(vt1.c0)))AND(vt1.c0)))));
SELECT * FROM rt1, vt0, vt1 WHERE (rt1.c0) ORDER BY ABS((rt1.c2 IN (vt0.c0))) ASC, (+ (((((rt1.c0)OR(vt1.c0)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1, vt0, vt1 ORDER BY ABS((rt1.c2 IN (vt0.c0))) ASC, (+ (((((rt1.c0)OR(vt1.c0)))AND(vt1.c0)))));
SELECT * FROM rt1, vt0, vt1 WHERE (rt1.c0) ORDER BY ABS((rt1.c2 IN (vt0.c0))) ASC, (+ (((((rt1.c0)OR(vt1.c0)))AND(vt1.c0))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((~ (0X2c4b409c)));
SELECT SUM(count) FROM (SELECT ALL (((~ (0x2c4b409c))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((~ (0X2c4b409c)));
SELECT SUM(count) FROM (SELECT ALL (((~ (0x2c4b409c))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((~ (0X2c4b409c)));
SELECT ALL COUNT(*) FROM vt1, rt1, vt0 INNER JOIN v0 ON CAST(NULL AS NUMERIC) WHERE (v0.c0) ORDER BY ((CAST(NULL AS INTEGER)) BETWEEN ('-1711683435') AND (((vt1.c0) BETWEEN (rt1.c2) AND (516398321)))) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt1, rt1, vt0 INNER JOIN v0 ON CAST(NULL AS NUMERIC) ORDER BY ((CAST(NULL AS INTEGER)) BETWEEN ('-1711683435') AND (((vt1.c0) BETWEEN (rt1.c2) AND (516398321)))) DESC);
SELECT ALL COUNT(*) FROM vt1, rt1, vt0 INNER JOIN v0 ON CAST(NULL AS NUMERIC) WHERE (v0.c0) ORDER BY ((CAST(NULL AS INTEGER)) BETWEEN ('-1711683435') AND (((vt1.c0) BETWEEN (rt1.c2) AND (516398321)))) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt1, rt1, vt0 INNER JOIN v0 ON CAST(NULL AS NUMERIC) ORDER BY ((CAST(NULL AS INTEGER)) BETWEEN ('-1711683435') AND (((vt1.c0) BETWEEN (rt1.c2) AND (516398321)))) DESC);
SELECT ALL COUNT(*) FROM vt1, rt1, vt0 INNER JOIN v0 ON CAST(NULL AS NUMERIC) WHERE (v0.c0) ORDER BY ((CAST(NULL AS INTEGER)) BETWEEN ('-1711683435') AND (((vt1.c0) BETWEEN (rt1.c2) AND (516398321)))) DESC;
SELECT COUNT(*) FROM vt1, rt1 WHERE ((+ (NULL))) ORDER BY ((x'') IS TRUE)  NULLS FIRST, TYPEOF((vt1.c0 IN ())) DESC;
SELECT SUM(count) FROM (SELECT (((+ (NULL))) IS TRUE)  as count FROM vt1, rt1 ORDER BY ((x'') IS TRUE)  NULLS FIRST, TYPEOF((vt1.c0 IN ())) DESC);
SELECT COUNT(*) FROM vt1, rt1 WHERE ((+ (NULL))) ORDER BY ((x'') IS TRUE)  NULLS FIRST, TYPEOF((vt1.c0 IN ())) DESC;
SELECT SUM(count) FROM (SELECT (((+ (NULL))) IS TRUE)  as count FROM vt1, rt1 ORDER BY ((x'') IS TRUE)  NULLS FIRST, TYPEOF((vt1.c0 IN ())) DESC);
SELECT COUNT(*) FROM vt1, rt1 WHERE ((+ (NULL))) ORDER BY ((x'') IS TRUE)  NULLS FIRST, TYPEOF((vt1.c0 IN ())) DESC;
SELECT * FROM rt1, v0, vt1 RIGHT OUTER JOIN vt0 ON (CASE WHEN v0.c2 THEN rt1.c2 ELSE v0.c3 END IN ()) WHERE (TYPEOF(DISTINCT CASE rt1.c1  WHEN vt0.c0 THEN v0.c2 ELSE v0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT CASE rt1.c1  WHEN vt0.c0 THEN v0.c2 ELSE v0.c1 END)) IS TRUE)  as count FROM rt1, v0, vt1 RIGHT OUTER JOIN vt0 ON (CASE WHEN v0.c2 THEN rt1.c2 ELSE v0.c3 END IN ()));
SELECT * FROM rt1, v0, vt1 RIGHT OUTER JOIN vt0 ON (CASE WHEN v0.c2 THEN rt1.c2 ELSE v0.c3 END IN ()) WHERE (TYPEOF(DISTINCT CASE rt1.c1  WHEN vt0.c0 THEN v0.c2 ELSE v0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT CASE rt1.c1  WHEN vt0.c0 THEN v0.c2 ELSE v0.c1 END)) IS TRUE)  as count FROM rt1, v0, vt1 RIGHT OUTER JOIN vt0 ON (CASE WHEN v0.c2 THEN rt1.c2 ELSE v0.c3 END IN ()));
SELECT * FROM rt1, v0, vt1 RIGHT OUTER JOIN vt0 ON (CASE WHEN v0.c2 THEN rt1.c2 ELSE v0.c3 END IN ()) WHERE (TYPEOF(DISTINCT CASE rt1.c1  WHEN vt0.c0 THEN v0.c2 ELSE v0.c1 END));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN v0 ON ((CAST(v0.c2 AS NUMERIC))&(((rt1.c2)|(rt1.c1)))) LEFT OUTER JOIN rt1 ON (((v0.c3, rt1.c2, v0.c2, rt1.c1, rt1.c1)) BETWEEN ((CASE WHEN v0.c4 THEN rt1.c0 END, ((v0.c0) ISNULL), (((rt1.c0)) BETWEEN ((rt1.c0)) AND ((vt1.c0))), ((((v0.c2)OR(v0.c1)))OR('')), (((v0.c4))>((rt1.c0))))) AND ((vt1.c0 COLLATE BINARY, (rt1.c2 IN ()), ((((vt0.c0)OR(v0.c3)))AND(v0.c0)), 0.8874338781798456, ABS(v0.c1)))) INNER JOIN vt0 ON ((vt0.c0) NOTNULL) WHERE (((((vt1.c0) IS FALSE))/((NOT (rt1.c1))))) ORDER BY CASE rt1.c0  WHEN CASE v0.c3  WHEN v0.c2 THEN v0.c4 END THEN NULL END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS FALSE))/((NOT (rt1.c1))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN v0 ON ((CAST(v0.c2 AS NUMERIC))&(((rt1.c2)|(rt1.c1)))) LEFT OUTER JOIN rt1 ON (((v0.c3, rt1.c2, v0.c2, rt1.c1, rt1.c1)) BETWEEN ((CASE WHEN v0.c4 THEN rt1.c0 END, ((v0.c0) ISNULL), (((rt1.c0)) BETWEEN ((rt1.c0)) AND ((vt1.c0))), ((((v0.c2)OR(v0.c1)))OR('')), (((v0.c4))>((rt1.c0))))) AND ((vt1.c0 COLLATE BINARY, (rt1.c2 IN ()), ((((vt0.c0)OR(v0.c3)))AND(v0.c0)), 0.8874338781798456, ABS(v0.c1)))) INNER JOIN vt0 ON ((vt0.c0) NOTNULL) ORDER BY CASE rt1.c0  WHEN CASE v0.c3  WHEN v0.c2 THEN v0.c4 END THEN NULL END  NULLS FIRST);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN v0 ON ((CAST(v0.c2 AS NUMERIC))&(((rt1.c2)|(rt1.c1)))) LEFT OUTER JOIN rt1 ON (((v0.c3, rt1.c2, v0.c2, rt1.c1, rt1.c1)) BETWEEN ((CASE WHEN v0.c4 THEN rt1.c0 END, ((v0.c0) ISNULL), (((rt1.c0)) BETWEEN ((rt1.c0)) AND ((vt1.c0))), ((((v0.c2)OR(v0.c1)))OR('')), (((v0.c4))>((rt1.c0))))) AND ((vt1.c0 COLLATE BINARY, (rt1.c2 IN ()), ((((vt0.c0)OR(v0.c3)))AND(v0.c0)), 0.8874338781798456, ABS(v0.c1)))) INNER JOIN vt0 ON ((vt0.c0) NOTNULL) WHERE (((((vt1.c0) IS FALSE))/((NOT (rt1.c1))))) ORDER BY CASE rt1.c0  WHEN CASE v0.c3  WHEN v0.c2 THEN v0.c4 END THEN NULL END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS FALSE))/((NOT (rt1.c1))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN v0 ON ((CAST(v0.c2 AS NUMERIC))&(((rt1.c2)|(rt1.c1)))) LEFT OUTER JOIN rt1 ON (((v0.c3, rt1.c2, v0.c2, rt1.c1, rt1.c1)) BETWEEN ((CASE WHEN v0.c4 THEN rt1.c0 END, ((v0.c0) ISNULL), (((rt1.c0)) BETWEEN ((rt1.c0)) AND ((vt1.c0))), ((((v0.c2)OR(v0.c1)))OR('')), (((v0.c4))>((rt1.c0))))) AND ((vt1.c0 COLLATE BINARY, (rt1.c2 IN ()), ((((vt0.c0)OR(v0.c3)))AND(v0.c0)), 0.8874338781798456, ABS(v0.c1)))) INNER JOIN vt0 ON ((vt0.c0) NOTNULL) ORDER BY CASE rt1.c0  WHEN CASE v0.c3  WHEN v0.c2 THEN v0.c4 END THEN NULL END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0, v0, vt1 WHERE (SQLITE_COMPILEOPTION_USED((((v0.c1))<((NULL))))) ORDER BY ((((((v0.c2)&(rt1.c2)))AND((~ (vt1.c0)))))AND(vt1.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED((((v0.c1))<((NULL))))) IS TRUE)  as count FROM rt1, vt0, v0, vt1 ORDER BY ((((((v0.c2)&(rt1.c2)))AND((~ (vt1.c0)))))AND(vt1.c0 COLLATE BINARY)) DESC);
SELECT ALL COUNT(*) FROM rt1, vt0, v0, vt1 WHERE (SQLITE_COMPILEOPTION_USED((((v0.c1))<((NULL))))) ORDER BY ((((((v0.c2)&(rt1.c2)))AND((~ (vt1.c0)))))AND(vt1.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED((((v0.c1))<((NULL))))) IS TRUE)  as count FROM rt1, vt0, v0, vt1 ORDER BY ((((((v0.c2)&(rt1.c2)))AND((~ (vt1.c0)))))AND(vt1.c0 COLLATE BINARY)) DESC);
SELECT ALL COUNT(*) FROM rt1, vt0, v0, vt1 WHERE (SQLITE_COMPILEOPTION_USED((((v0.c1))<((NULL))))) ORDER BY ((((((v0.c2)&(rt1.c2)))AND((~ (vt1.c0)))))AND(vt1.c0 COLLATE BINARY)) DESC;
SELECT * FROM vt1, vt0 WHERE ((NOT (((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((NOT (((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((NOT (((vt1.c0) NOTNULL))));
SELECT * FROM v0, rt1 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0, rt1 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0, rt1 WHERE (v0.c0);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((v0.c2) NOT BETWEEN (v0.c0) AND (-1765515949)) THEN (- (v0.c2)) ELSE ((((v0.c3)AND(v0.c3)))OR(v0.c2)) END LEFT OUTER JOIN vt1 ON '-533766521' WHERE ((((((vt1.c0) BETWEEN (-4.61557355E8) AND (v0.c4)), ((v0.c2) BETWEEN (v0.c1) AND (v0.c0)), NULL))<((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)), (v0.c2 IN ()), v0.c3 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0) BETWEEN (-4.61557355E8) AND (v0.c4)), ((v0.c2) BETWEEN (v0.c1) AND (v0.c0)), NULL))<((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)), (v0.c2 IN ()), v0.c3 COLLATE RTRIM)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((v0.c2) NOT BETWEEN (v0.c0) AND (-1765515949)) THEN (- (v0.c2)) ELSE ((((v0.c3)AND(v0.c3)))OR(v0.c2)) END LEFT OUTER JOIN vt1 ON '-533766521');
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((v0.c2) NOT BETWEEN (v0.c0) AND (-1765515949)) THEN (- (v0.c2)) ELSE ((((v0.c3)AND(v0.c3)))OR(v0.c2)) END LEFT OUTER JOIN vt1 ON '-533766521' WHERE ((((((vt1.c0) BETWEEN (-4.61557355E8) AND (v0.c4)), ((v0.c2) BETWEEN (v0.c1) AND (v0.c0)), NULL))<((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)), (v0.c2 IN ()), v0.c3 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0) BETWEEN (-4.61557355E8) AND (v0.c4)), ((v0.c2) BETWEEN (v0.c1) AND (v0.c0)), NULL))<((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)), (v0.c2 IN ()), v0.c3 COLLATE RTRIM)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((v0.c2) NOT BETWEEN (v0.c0) AND (-1765515949)) THEN (- (v0.c2)) ELSE ((((v0.c3)AND(v0.c3)))OR(v0.c2)) END LEFT OUTER JOIN vt1 ON '-533766521');
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((v0.c2) NOT BETWEEN (v0.c0) AND (-1765515949)) THEN (- (v0.c2)) ELSE ((((v0.c3)AND(v0.c3)))OR(v0.c2)) END LEFT OUTER JOIN vt1 ON '-533766521' WHERE ((((((vt1.c0) BETWEEN (-4.61557355E8) AND (v0.c4)), ((v0.c2) BETWEEN (v0.c1) AND (v0.c0)), NULL))<((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)), (v0.c2 IN ()), v0.c3 COLLATE RTRIM))));
SELECT * FROM v0, vt0, rt1 WHERE ((((v0.c0))=((v0.c4))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0))==((v0.c4))) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0, rt1);
SELECT * FROM v0, vt0, rt1 WHERE ((((v0.c0))=((v0.c4))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0))==((v0.c4))) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0, rt1);
SELECT * FROM v0, vt0, rt1 WHERE ((((v0.c0))=((v0.c4))) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0, rt1 INNER JOIN vt1 ON json_remove(CAST(vt1.c0 AS INTEGER), CAST(rt1.c1 AS REAL)) WHERE (CASE WHEN (v0.c1 IN (v0.c0)) THEN x'5ebd' WHEN ABS(v0.c2) THEN rt1.c2 WHEN CAST(v0.c2 AS REAL) THEN ((v0.c0)>(rt1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (v0.c1 IN (v0.c0)) THEN x'5ebd' WHEN ABS(v0.c2) THEN rt1.c2 WHEN CAST(v0.c2 AS REAL) THEN ((v0.c0)>(rt1.c2)) END) IS TRUE)  as count FROM v0, rt1 INNER JOIN vt1 ON json_remove(CAST(vt1.c0 AS INTEGER), CAST(rt1.c1 AS REAL)));
SELECT ALL COUNT(*) FROM v0, rt1 INNER JOIN vt1 ON json_remove(CAST(vt1.c0 AS INTEGER), CAST(rt1.c1 AS REAL)) WHERE (CASE WHEN (v0.c1 IN (v0.c0)) THEN x'5ebd' WHEN ABS(v0.c2) THEN rt1.c2 WHEN CAST(v0.c2 AS REAL) THEN ((v0.c0)>(rt1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (v0.c1 IN (v0.c0)) THEN x'5ebd' WHEN ABS(v0.c2) THEN rt1.c2 WHEN CAST(v0.c2 AS REAL) THEN ((v0.c0)>(rt1.c2)) END) IS TRUE)  as count FROM v0, rt1 INNER JOIN vt1 ON json_remove(CAST(vt1.c0 AS INTEGER), CAST(rt1.c1 AS REAL)));
SELECT ALL COUNT(*) FROM v0, rt1 INNER JOIN vt1 ON json_remove(CAST(vt1.c0 AS INTEGER), CAST(rt1.c1 AS REAL)) WHERE (CASE WHEN (v0.c1 IN (v0.c0)) THEN x'5ebd' WHEN ABS(v0.c2) THEN rt1.c2 WHEN CAST(v0.c2 AS REAL) THEN ((v0.c0)>(rt1.c2)) END);
SELECT ALL * FROM rt1 WHERE (rt1.c1) ORDER BY (((((NOT (rt1.c2)))AND(CAST(rt1.c1 AS BLOB))))AND(rt1.c2 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY (((((NOT (rt1.c2)))AND(CAST(rt1.c1 AS BLOB))))AND(rt1.c2 COLLATE BINARY))  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (rt1.c1) ORDER BY (((((NOT (rt1.c2)))AND(CAST(rt1.c1 AS BLOB))))AND(rt1.c2 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY (((((NOT (rt1.c2)))AND(CAST(rt1.c1 AS BLOB))))AND(rt1.c2 COLLATE BINARY))  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (rt1.c1) ORDER BY (((((NOT (rt1.c2)))AND(CAST(rt1.c1 AS BLOB))))AND(rt1.c2 COLLATE BINARY))  NULLS LAST;
SELECT ALL * FROM vt1, rt1 RIGHT OUTER JOIN vt0 ON ((((vt1.c0) NOTNULL))<<(CAST(vt0.c0 AS INTEGER))) RIGHT OUTER JOIN v0 ON (((rt1.c1)LIKE(v0.c2)) IN ()) WHERE (x'745e');
SELECT SUM(count) FROM (SELECT ALL ((x'745e') IS TRUE)  as count FROM vt1, rt1 RIGHT OUTER JOIN vt0 ON ((((vt1.c0) NOTNULL))<<(CAST(vt0.c0 AS INTEGER))) RIGHT OUTER JOIN v0 ON (((rt1.c1)LIKE(v0.c2)) IN ()));
SELECT ALL * FROM vt1, rt1 RIGHT OUTER JOIN vt0 ON ((((vt1.c0) NOTNULL))<<(CAST(vt0.c0 AS INTEGER))) RIGHT OUTER JOIN v0 ON (((rt1.c1)LIKE(v0.c2)) IN ()) WHERE (x'745e');
SELECT SUM(count) FROM (SELECT ALL ((x'745e') IS TRUE)  as count FROM vt1, rt1 RIGHT OUTER JOIN vt0 ON ((((vt1.c0) NOTNULL))<<(CAST(vt0.c0 AS INTEGER))) RIGHT OUTER JOIN v0 ON (((rt1.c1)LIKE(v0.c2)) IN ()));
SELECT ALL * FROM vt1, rt1 RIGHT OUTER JOIN vt0 ON ((((vt1.c0) NOTNULL))<<(CAST(vt0.c0 AS INTEGER))) RIGHT OUTER JOIN v0 ON (((rt1.c1)LIKE(v0.c2)) IN ()) WHERE (x'745e');
SELECT COUNT(*) FROM v0, vt0 WHERE (json_array_length(NULL));
SELECT SUM(count) FROM (SELECT ((json_array_length(NULL)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (json_array_length(NULL));
SELECT SUM(count) FROM (SELECT ((json_array_length(NULL)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (json_array_length(NULL));
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE (((v0.c0) ISNULL)) ORDER BY (((vt0.c0 IN (vt1.c0)))>=((((v0.c3))==((vt1.c0))))) DESC  NULLS LAST, '0.26311691996561226' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) ISNULL)) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY (((vt0.c0 IN (vt1.c0)))>=((((v0.c3))==((vt1.c0))))) DESC  NULLS LAST, '0.26311691996561226' DESC);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE (((v0.c0) ISNULL)) ORDER BY (((vt0.c0 IN (vt1.c0)))>=((((v0.c3))==((vt1.c0))))) DESC  NULLS LAST, '0.26311691996561226' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) ISNULL)) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY (((vt0.c0 IN (vt1.c0)))>=((((v0.c3))==((vt1.c0))))) DESC  NULLS LAST, '0.26311691996561226' DESC);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE (((v0.c0) ISNULL)) ORDER BY (((vt0.c0 IN (vt1.c0)))>=((((v0.c3))==((vt1.c0))))) DESC  NULLS LAST, '0.26311691996561226' DESC;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON ((highlight(vt1.c0, v0.c3, v0.c1, vt0.c0))<<(COALESCE(DISTINCT v0.c4, v0.c3))) FULL OUTER JOIN vt1 ON vt1.c0 WHERE ((((v0.c2)) BETWEEN ((((v0.c2) IS TRUE))) AND ((((vt0.c0)<<(v0.c2))))));
SELECT SUM(count) FROM (SELECT (((((v0.c2)) BETWEEN ((((v0.c2) IS TRUE))) AND ((((vt0.c0)<<(v0.c2)))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((highlight(vt1.c0, v0.c3, v0.c1, vt0.c0))<<(COALESCE(DISTINCT v0.c4, v0.c3))) FULL OUTER JOIN vt1 ON vt1.c0);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON ((highlight(vt1.c0, v0.c3, v0.c1, vt0.c0))<<(COALESCE(DISTINCT v0.c4, v0.c3))) FULL OUTER JOIN vt1 ON vt1.c0 WHERE ((((v0.c2)) BETWEEN ((((v0.c2) IS TRUE))) AND ((((vt0.c0)<<(v0.c2))))));
SELECT SUM(count) FROM (SELECT (((((v0.c2)) BETWEEN ((((v0.c2) IS TRUE))) AND ((((vt0.c0)<<(v0.c2)))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((highlight(vt1.c0, v0.c3, v0.c1, vt0.c0))<<(COALESCE(DISTINCT v0.c4, v0.c3))) FULL OUTER JOIN vt1 ON vt1.c0);
SELECT COUNT(*) FROM vt1, rt1 CROSS JOIN vt0 ON NULL WHERE (vt0.c0 COLLATE BINARY) ORDER BY ((CAST(rt1.c1 AS INTEGER)) NOT BETWEEN (((rt1.c0)>(vt0.c0))) AND (((rt1.c1) BETWEEN (vt1.c0) AND (vt0.c0))))  NULLS FIRST, ((rt1.c1)<=((vt1.c0 IN (rt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM vt1, rt1 CROSS JOIN vt0 ON NULL ORDER BY ((CAST(rt1.c1 AS INTEGER)) NOT BETWEEN (((rt1.c0)>(vt0.c0))) AND (((rt1.c1) BETWEEN (vt1.c0) AND (vt0.c0))))  NULLS FIRST, ((rt1.c1)<=((vt1.c0 IN (rt1.c2))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt1 CROSS JOIN vt0 ON NULL WHERE (vt0.c0 COLLATE BINARY) ORDER BY ((CAST(rt1.c1 AS INTEGER)) NOT BETWEEN (((rt1.c0)>(vt0.c0))) AND (((rt1.c1) BETWEEN (vt1.c0) AND (vt0.c0))))  NULLS FIRST, ((rt1.c1)<=((vt1.c0 IN (rt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM vt1, rt1 CROSS JOIN vt0 ON NULL ORDER BY ((CAST(rt1.c1 AS INTEGER)) NOT BETWEEN (((rt1.c0)>(vt0.c0))) AND (((rt1.c1) BETWEEN (vt1.c0) AND (vt0.c0))))  NULLS FIRST, ((rt1.c1)<=((vt1.c0 IN (rt1.c2))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt1 CROSS JOIN vt0 ON NULL WHERE (vt0.c0 COLLATE BINARY) ORDER BY ((CAST(rt1.c1 AS INTEGER)) NOT BETWEEN (((rt1.c0)>(vt0.c0))) AND (((rt1.c1) BETWEEN (vt1.c0) AND (vt0.c0))))  NULLS FIRST, ((rt1.c1)<=((vt1.c0 IN (rt1.c2))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(LIKELY(1.514485029E9) AS TEXT)) ORDER BY CASE WHEN SQLITE_COMPILEOPTION_GET(v0.c1) THEN (+ (v0.c4)) ELSE ((v0.c4) BETWEEN (v0.c1) AND (vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELY(1.514485029E9) AS TEXT)) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE WHEN SQLITE_COMPILEOPTION_GET(v0.c1) THEN (+ (v0.c4)) ELSE ((v0.c4) BETWEEN (v0.c1) AND (vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(LIKELY(1.514485029E9) AS TEXT)) ORDER BY CASE WHEN SQLITE_COMPILEOPTION_GET(v0.c1) THEN (+ (v0.c4)) ELSE ((v0.c4) BETWEEN (v0.c1) AND (vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELY(1.514485029E9) AS TEXT)) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE WHEN SQLITE_COMPILEOPTION_GET(v0.c1) THEN (+ (v0.c4)) ELSE ((v0.c4) BETWEEN (v0.c1) AND (vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(LIKELY(1.514485029E9) AS TEXT)) ORDER BY CASE WHEN SQLITE_COMPILEOPTION_GET(v0.c1) THEN (+ (v0.c4)) ELSE ((v0.c4) BETWEEN (v0.c1) AND (vt0.c0)) END;
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE WHEN ((v0.c3) BETWEEN (v0.c1) AND (v0.c4)) THEN (- (v0.c0)) ELSE ((vt0.c0)>>(v0.c4)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c3) BETWEEN (v0.c1) AND (v0.c4)) THEN (- (v0.c0)) ELSE ((vt0.c0)>>(v0.c4)) END) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE WHEN ((v0.c3) BETWEEN (v0.c1) AND (v0.c4)) THEN (- (v0.c0)) ELSE ((vt0.c0)>>(v0.c4)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c3) BETWEEN (v0.c1) AND (v0.c4)) THEN (- (v0.c0)) ELSE ((vt0.c0)>>(v0.c4)) END) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE WHEN ((v0.c3) BETWEEN (v0.c1) AND (v0.c4)) THEN (- (v0.c0)) ELSE ((vt0.c0)>>(v0.c4)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((((((((vt0.c0)OR((((NULL))>=((vt0.c0))))))OR(CAST(vt0.c0 AS INTEGER))))OR((- (vt0.c0)))))OR(((vt0.c0)%(vt0.c0)))))AND(((vt0.c0) ISNULL))))AND(((vt0.c0) NOT NULL))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CAST(vt0.c0 AS NUMERIC)))) ORDER BY (((- (vt0.c0)))+(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((vt0.c0)OR((((NULL))>=((vt0.c0))))))OR(CAST(vt0.c0 AS INTEGER))))OR((- (vt0.c0)))))OR(((vt0.c0)%(vt0.c0)))))AND(((vt0.c0) ISNULL))))AND(((vt0.c0) NOT NULL))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0)))+(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((((((((vt0.c0)OR((((NULL))>=((vt0.c0))))))OR(CAST(vt0.c0 AS INTEGER))))OR((- (vt0.c0)))))OR(((vt0.c0)%(vt0.c0)))))AND(((vt0.c0) ISNULL))))AND(((vt0.c0) NOT NULL))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CAST(vt0.c0 AS NUMERIC)))) ORDER BY (((- (vt0.c0)))+(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((vt0.c0)OR((((NULL))>=((vt0.c0))))))OR(CAST(vt0.c0 AS INTEGER))))OR((- (vt0.c0)))))OR(((vt0.c0)%(vt0.c0)))))AND(((vt0.c0) ISNULL))))AND(((vt0.c0) NOT NULL))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0)))+(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((((((((vt0.c0)OR((((NULL))>=((vt0.c0))))))OR(CAST(vt0.c0 AS INTEGER))))OR((- (vt0.c0)))))OR(((vt0.c0)%(vt0.c0)))))AND(((vt0.c0) ISNULL))))AND(((vt0.c0) NOT NULL))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CAST(vt0.c0 AS NUMERIC)))) ORDER BY (((- (vt0.c0)))+(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (0.8597765894867504) ORDER BY (NOT (CASE WHEN v0.c3 THEN v0.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT ((0.8597765894867504) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY (NOT (CASE WHEN v0.c3 THEN v0.c2 END)) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (0.8597765894867504) ORDER BY (NOT (CASE WHEN v0.c3 THEN v0.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT ((0.8597765894867504) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY (NOT (CASE WHEN v0.c3 THEN v0.c2 END)) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (0.8597765894867504) ORDER BY (NOT (CASE WHEN v0.c3 THEN v0.c2 END)) DESC;
SELECT COUNT(*) FROM v0, vt0, rt1, vt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM v0, vt0, rt1, vt1);
SELECT COUNT(*) FROM v0, vt0, rt1, vt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM v0, vt0, rt1, vt1);
SELECT COUNT(*) FROM v0, vt0, rt1, vt1 WHERE (rt1.c1);
SELECT * FROM v0 WHERE ((~ (CASE WHEN v0.c3 THEN v0.c1 WHEN v0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) ORDER BY ((((v0.c1) BETWEEN (v0.c0) AND (v0.c1))) IS TRUE), (((((v0.c1, v0.c0, v0.c3)) NOT BETWEEN ((x'', v0.c0, v0.c4)) AND ((v0.c1, v0.c4, x'')))) NOT NULL);
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN v0.c3 THEN v0.c1 WHEN v0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c1) BETWEEN (v0.c0) AND (v0.c1))) IS TRUE), (((((v0.c1, v0.c0, v0.c3)) NOT BETWEEN ((x'', v0.c0, v0.c4)) AND ((v0.c1, v0.c4, x'')))) NOT NULL));
SELECT * FROM v0 WHERE ((~ (CASE WHEN v0.c3 THEN v0.c1 WHEN v0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) ORDER BY ((((v0.c1) BETWEEN (v0.c0) AND (v0.c1))) IS TRUE), (((((v0.c1, v0.c0, v0.c3)) NOT BETWEEN ((x'', v0.c0, v0.c4)) AND ((v0.c1, v0.c4, x'')))) NOT NULL);
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN v0.c3 THEN v0.c1 WHEN v0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c1) BETWEEN (v0.c0) AND (v0.c1))) IS TRUE), (((((v0.c1, v0.c0, v0.c3)) NOT BETWEEN ((x'', v0.c0, v0.c4)) AND ((v0.c1, v0.c4, x'')))) NOT NULL));
SELECT * FROM v0 WHERE ((~ (CASE WHEN v0.c3 THEN v0.c1 WHEN v0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) ORDER BY ((((v0.c1) BETWEEN (v0.c0) AND (v0.c1))) IS TRUE), (((((v0.c1, v0.c0, v0.c3)) NOT BETWEEN ((x'', v0.c0, v0.c4)) AND ((v0.c1, v0.c4, x'')))) NOT NULL);
SELECT ALL COUNT(*) FROM vt0, v0, rt1, vt1 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM vt0, v0, rt1, vt1);
SELECT ALL COUNT(*) FROM vt0, v0, rt1, vt1 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM vt0, v0, rt1, vt1);
SELECT ALL COUNT(*) FROM vt0, v0, rt1, vt1 WHERE (v0.c2);
SELECT ALL COUNT(*) FROM vt0, vt1, v0, rt1 WHERE ((((v0.c1)LIKE(rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1)LIKE(rt1.c2)) IN ())) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1, v0, rt1);
SELECT ALL COUNT(*) FROM vt0, vt1, v0, rt1 WHERE ((((v0.c1)LIKE(rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1)LIKE(rt1.c2)) IN ())) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1, v0, rt1);
SELECT ALL COUNT(*) FROM vt0, vt1, v0, rt1 WHERE ((((v0.c1)LIKE(rt1.c2)) IN ()));
SELECT ALL COUNT(*) FROM v0 WHERE ((CAST(v0.c2 AS INTEGER) IN (v0.c4))) ORDER BY (((('~Íó•‰§åW')OR(CAST(v0.c2 AS REAL))))OR((v0.c2 IN ()))), (~ ((v0.c3 IN ())))  NULLS LAST, x'' COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(v0.c2 AS INTEGER) IN (v0.c4))) IS TRUE)  as count FROM v0 ORDER BY (((('~Íó•‰§åW')OR(CAST(v0.c2 AS REAL))))OR((v0.c2 IN ()))), (~ ((v0.c3 IN ())))  NULLS LAST, x'' COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((CAST(v0.c2 AS INTEGER) IN (v0.c4))) ORDER BY (((('~Íó•‰§åW')OR(CAST(v0.c2 AS REAL))))OR((v0.c2 IN ()))), (~ ((v0.c3 IN ())))  NULLS LAST, x'' COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(v0.c2 AS INTEGER) IN (v0.c4))) IS TRUE)  as count FROM v0 ORDER BY (((('~Íó•‰§åW')OR(CAST(v0.c2 AS REAL))))OR((v0.c2 IN ()))), (~ ((v0.c3 IN ())))  NULLS LAST, x'' COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((CAST(v0.c2 AS INTEGER) IN (v0.c4))) ORDER BY (((('~Íó•‰§åW')OR(CAST(v0.c2 AS REAL))))OR((v0.c2 IN ()))), (~ ((v0.c3 IN ())))  NULLS LAST, x'' COLLATE BINARY DESC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (('1598514956' IN (((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((('1598514956' IN (((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (('1598514956' IN (((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((('1598514956' IN (((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (('1598514956' IN (((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)))));
SELECT * FROM rt1, vt1, v0 WHERE ((- (rt1.c1)) COLLATE BINARY) ORDER BY (MAX(vt1.c0, v0.c1, v0.c0, '') IN (((vt1.c0)>>(rt1.c2)), CAST(v0.c1 AS REAL))) ASC  NULLS LAST, -610680510 ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (rt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt1, vt1, v0 ORDER BY (MAX(vt1.c0, v0.c1, v0.c0, '') IN (((vt1.c0)>>(rt1.c2)), CAST(v0.c1 AS REAL))) ASC  NULLS LAST, -610680510 ASC);
SELECT * FROM rt1, vt1, v0 WHERE ((- (rt1.c1)) COLLATE BINARY) ORDER BY (MAX(vt1.c0, v0.c1, v0.c0, '') IN (((vt1.c0)>>(rt1.c2)), CAST(v0.c1 AS REAL))) ASC  NULLS LAST, -610680510 ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (rt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt1, vt1, v0 ORDER BY (MAX(vt1.c0, v0.c1, v0.c0, '') IN (((vt1.c0)>>(rt1.c2)), CAST(v0.c1 AS REAL))) ASC  NULLS LAST, -610680510 ASC);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (((((vt0.c0 COLLATE RTRIM)OR(((((((((v0.c4)OR(v0.c3)))AND(v0.c1)))OR(v0.c2)))OR(vt1.c0)))))AND(((((v0.c2)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE RTRIM)OR(((((((((v0.c4)OR(v0.c3)))AND(v0.c1)))OR(v0.c2)))OR(vt1.c0)))))AND(((((v0.c2)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, v0 NOT INDEXED);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (((((vt0.c0 COLLATE RTRIM)OR(((((((((v0.c4)OR(v0.c3)))AND(v0.c1)))OR(v0.c2)))OR(vt1.c0)))))AND(((((v0.c2)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE RTRIM)OR(((((((((v0.c4)OR(v0.c3)))AND(v0.c1)))OR(v0.c2)))OR(vt1.c0)))))AND(((((v0.c2)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, v0 NOT INDEXED);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (((((vt0.c0 COLLATE RTRIM)OR(((((((((v0.c4)OR(v0.c3)))AND(v0.c1)))OR(v0.c2)))OR(vt1.c0)))))AND(((((v0.c2)OR(vt0.c0)))OR(vt0.c0)))));
SELECT * FROM rt1, vt0, v0 WHERE ((-700046119 IN ())) ORDER BY (- (CAST(rt1.c2 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((-700046119 IN ())) IS TRUE)  as count FROM rt1, vt0, v0 ORDER BY (- (CAST(rt1.c2 AS TEXT)))  NULLS LAST);
SELECT * FROM rt1, vt0, v0 WHERE ((-700046119 IN ())) ORDER BY (- (CAST(rt1.c2 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((-700046119 IN ())) IS TRUE)  as count FROM rt1, vt0, v0 ORDER BY (- (CAST(rt1.c2 AS TEXT)))  NULLS LAST);
SELECT * FROM rt1, vt0, v0 WHERE ((-700046119 IN ())) ORDER BY (- (CAST(rt1.c2 AS TEXT)))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (CASE ((v0.c1) IS TRUE)  WHEN (NOT (v0.c0)) THEN 'm9‚è§uÂΩ¢iR3h' ELSE x'' END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c1) IS TRUE)  WHEN (NOT (v0.c0)) THEN 'm9‚è§uÂΩ¢iR3h' ELSE x'' END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE ((v0.c1) IS TRUE)  WHEN (NOT (v0.c0)) THEN 'm9‚è§uÂΩ¢iR3h' ELSE x'' END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c1) IS TRUE)  WHEN (NOT (v0.c0)) THEN 'm9‚è§uÂΩ¢iR3h' ELSE x'' END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE ((v0.c1) IS TRUE)  WHEN (NOT (v0.c0)) THEN 'm9‚è§uÂΩ¢iR3h' ELSE x'' END);
SELECT * FROM vt0, rt1 WHERE (((CAST(rt1.c0 AS INTEGER))%(TRIM(1094173254)))) ORDER BY TRIM(0.7363235436652155)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c0 AS INTEGER))%(TRIM(1094173254)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY TRIM(0.7363235436652155)  NULLS FIRST);
SELECT * FROM vt0, rt1 WHERE (((CAST(rt1.c0 AS INTEGER))%(TRIM(1094173254)))) ORDER BY TRIM(0.7363235436652155)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c0 AS INTEGER))%(TRIM(1094173254)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY TRIM(0.7363235436652155)  NULLS FIRST);
SELECT * FROM vt0, rt1 WHERE (((CAST(rt1.c0 AS INTEGER))%(TRIM(1094173254)))) ORDER BY TRIM(0.7363235436652155)  NULLS FIRST;
SELECT ALL * FROM vt1 NOT INDEXED, vt0, v0 WHERE (((CAST(vt1.c0 AS NUMERIC))>=(((vt0.c0)>=(v0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS NUMERIC))>=(((vt0.c0)>=(v0.c3))))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT ALL * FROM vt1 NOT INDEXED, vt0, v0 WHERE (((CAST(vt1.c0 AS NUMERIC))>=(((vt0.c0)>=(v0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS NUMERIC))>=(((vt0.c0)>=(v0.c3))))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT ALL * FROM vt1 NOT INDEXED, vt0, v0 WHERE (((CAST(vt1.c0 AS NUMERIC))>=(((vt0.c0)>=(v0.c3)))));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN v0 ON '-1562975416' WHERE ((+ ((v0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((+ ((v0.c2 IN ())))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON '-1562975416');
SELECT ALL * FROM rt1 RIGHT OUTER JOIN v0 ON '-1562975416' WHERE ((+ ((v0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((+ ((v0.c2 IN ())))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON '-1562975416');
SELECT ALL * FROM rt1 RIGHT OUTER JOIN v0 ON '-1562975416' WHERE ((+ ((v0.c2 IN ()))));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT ALL * FROM vt0, rt1, v0, vt1 WHERE ((((v0.c4 IN (v0.c2))) NOT BETWEEN (x'') AND (rt1.c0))) ORDER BY CAST((NOT (v0.c0)) AS REAL)  NULLS LAST, ((CAST(vt1.c0 AS BLOB)) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c4 IN (v0.c2))) NOT BETWEEN (x'') AND (rt1.c0))) IS TRUE)  as count FROM vt0, rt1, v0, vt1 ORDER BY CAST((NOT (v0.c0)) AS REAL)  NULLS LAST, ((CAST(vt1.c0 AS BLOB)) IS FALSE)  NULLS LAST);
SELECT ALL * FROM vt0, rt1, v0, vt1 WHERE ((((v0.c4 IN (v0.c2))) NOT BETWEEN (x'') AND (rt1.c0))) ORDER BY CAST((NOT (v0.c0)) AS REAL)  NULLS LAST, ((CAST(vt1.c0 AS BLOB)) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c4 IN (v0.c2))) NOT BETWEEN (x'') AND (rt1.c0))) IS TRUE)  as count FROM vt0, rt1, v0, vt1 ORDER BY CAST((NOT (v0.c0)) AS REAL)  NULLS LAST, ((CAST(vt1.c0 AS BLOB)) IS FALSE)  NULLS LAST);
SELECT ALL * FROM vt0, rt1, v0, vt1 WHERE ((((v0.c4 IN (v0.c2))) NOT BETWEEN (x'') AND (rt1.c0))) ORDER BY CAST((NOT (v0.c0)) AS REAL)  NULLS LAST, ((CAST(vt1.c0 AS BLOB)) IS FALSE)  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)AND((v0.c4 IN ()))))AND(((v0.c0) IS FALSE)))) ORDER BY ((CAST(v0.c3 AS NUMERIC)) NOT BETWEEN (((v0.c4) ISNULL)) AND ((((v0.c3)) BETWEEN ((v0.c0)) AND ((v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)AND((v0.c4 IN ()))))AND(((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c3 AS NUMERIC)) NOT BETWEEN (((v0.c4) ISNULL)) AND ((((v0.c3)) BETWEEN ((v0.c0)) AND ((v0.c1))))));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)AND((v0.c4 IN ()))))AND(((v0.c0) IS FALSE)))) ORDER BY ((CAST(v0.c3 AS NUMERIC)) NOT BETWEEN (((v0.c4) ISNULL)) AND ((((v0.c3)) BETWEEN ((v0.c0)) AND ((v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)AND((v0.c4 IN ()))))AND(((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c3 AS NUMERIC)) NOT BETWEEN (((v0.c4) ISNULL)) AND ((((v0.c3)) BETWEEN ((v0.c0)) AND ((v0.c1))))));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)AND((v0.c4 IN ()))))AND(((v0.c0) IS FALSE)))) ORDER BY ((CAST(v0.c3 AS NUMERIC)) NOT BETWEEN (((v0.c4) ISNULL)) AND ((((v0.c3)) BETWEEN ((v0.c0)) AND ((v0.c1)))));
SELECT ALL * FROM vt0, v0, vt1, rt1 WHERE ((((CAST(v0.c3 AS NUMERIC)))>=((CAST(rt1.c2 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(v0.c3 AS NUMERIC)))>=((CAST(rt1.c2 AS INTEGER))))) IS TRUE)  as count FROM vt0, v0, vt1, rt1);
SELECT ALL * FROM vt0, v0, vt1, rt1 WHERE ((((CAST(v0.c3 AS NUMERIC)))>=((CAST(rt1.c2 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(v0.c3 AS NUMERIC)))>=((CAST(rt1.c2 AS INTEGER))))) IS TRUE)  as count FROM vt0, v0, vt1, rt1);
SELECT ALL * FROM vt0, v0, vt1, rt1 WHERE ((((CAST(v0.c3 AS NUMERIC)))>=((CAST(rt1.c2 AS INTEGER)))));
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2)) BETWEEN ((SQLITE_VERSION())) AND ((TRIM(DISTINCT rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) BETWEEN ((SQLITE_VERSION())) AND ((TRIM(DISTINCT rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2)) BETWEEN ((SQLITE_VERSION())) AND ((TRIM(DISTINCT rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) BETWEEN ((SQLITE_VERSION())) AND ((TRIM(DISTINCT rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2)) BETWEEN ((SQLITE_VERSION())) AND ((TRIM(DISTINCT rt1.c2)))));
SELECT COUNT(*) FROM vt1, rt1, v0, vt0 WHERE ((- (((vt0.c0)=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0)==(vt1.c0))))) IS TRUE)  as count FROM vt1, rt1, v0, vt0);
SELECT COUNT(*) FROM vt1, rt1, v0, vt0 WHERE ((- (((vt0.c0)=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0)==(vt1.c0))))) IS TRUE)  as count FROM vt1, rt1, v0, vt0);
SELECT COUNT(*) FROM vt1, rt1, v0, vt0 WHERE ((- (((vt0.c0)=(vt1.c0)))));
SELECT ALL * FROM rt1, vt0 WHERE (((CASE rt1.c1  WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c1  WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c0 END) IS TRUE)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((CASE rt1.c1  WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c1  WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c0 END) IS TRUE)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((CASE rt1.c1  WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c0 END) IS TRUE));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN v0 ON ((CAST(v0.c0 AS BLOB)) BETWEEN (((v0.c2) NOT BETWEEN (rt1.c0) AND (v0.c3))) AND ('X*A(')) INNER JOIN rt1 ON ((x'' COLLATE RTRIM) NOT BETWEEN ((~ (v0.c0))) AND (((((rt1.c1)AND(v0.c4)))AND(rt1.c2)))) WHERE (((CAST(rt1.c1 AS REAL))IS NOT(0.37702241136767767)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c1 AS REAL))IS NOT(0.37702241136767767))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN v0 ON ((CAST(v0.c0 AS BLOB)) BETWEEN (((v0.c2) NOT BETWEEN (rt1.c0) AND (v0.c3))) AND ('X*A(')) INNER JOIN rt1 ON ((x'' COLLATE RTRIM) NOT BETWEEN ((~ (v0.c0))) AND (((((rt1.c1)AND(v0.c4)))AND(rt1.c2)))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN v0 ON ((CAST(v0.c0 AS BLOB)) BETWEEN (((v0.c2) NOT BETWEEN (rt1.c0) AND (v0.c3))) AND ('X*A(')) INNER JOIN rt1 ON ((x'' COLLATE RTRIM) NOT BETWEEN ((~ (v0.c0))) AND (((((rt1.c1)AND(v0.c4)))AND(rt1.c2)))) WHERE (((CAST(rt1.c1 AS REAL))IS NOT(0.37702241136767767)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c1 AS REAL))IS NOT(0.37702241136767767))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN v0 ON ((CAST(v0.c0 AS BLOB)) BETWEEN (((v0.c2) NOT BETWEEN (rt1.c0) AND (v0.c3))) AND ('X*A(')) INNER JOIN rt1 ON ((x'' COLLATE RTRIM) NOT BETWEEN ((~ (v0.c0))) AND (((((rt1.c1)AND(v0.c4)))AND(rt1.c2)))));
SELECT * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT ALL * FROM vt0, v0 WHERE (CAST(CASE v0.c0  WHEN 0.6435344626780372 THEN ',x<' ELSE v0.c0 END AS TEXT)) ORDER BY LOWER(HEX('')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE v0.c0  WHEN 0.6435344626780372 THEN ',x<' ELSE v0.c0 END AS TEXT)) IS TRUE)  as count FROM vt0, v0 ORDER BY LOWER(HEX('')) DESC);
SELECT ALL * FROM vt0, v0 WHERE (CAST(CASE v0.c0  WHEN 0.6435344626780372 THEN ',x<' ELSE v0.c0 END AS TEXT)) ORDER BY LOWER(HEX('')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE v0.c0  WHEN 0.6435344626780372 THEN ',x<' ELSE v0.c0 END AS TEXT)) IS TRUE)  as count FROM vt0, v0 ORDER BY LOWER(HEX('')) DESC);
SELECT ALL * FROM vt0, v0 WHERE (CAST(CASE v0.c0  WHEN 0.6435344626780372 THEN ',x<' ELSE v0.c0 END AS TEXT)) ORDER BY LOWER(HEX('')) DESC;
SELECT ALL * FROM rt1, vt0, v0, vt1 WHERE (((((rt1.c1) BETWEEN (vt1.c0) AND (v0.c4)))LIKE((~ (vt1.c0))))) ORDER BY CAST(((v0.c4)<>(v0.c1)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) BETWEEN (vt1.c0) AND (v0.c4)))LIKE((~ (vt1.c0))))) IS TRUE)  as count FROM rt1, vt0, v0, vt1 ORDER BY CAST(((v0.c4)<>(v0.c1)) AS NUMERIC)  NULLS LAST);
SELECT ALL * FROM rt1, vt0, v0, vt1 WHERE (((((rt1.c1) BETWEEN (vt1.c0) AND (v0.c4)))LIKE((~ (vt1.c0))))) ORDER BY CAST(((v0.c4)<>(v0.c1)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) BETWEEN (vt1.c0) AND (v0.c4)))LIKE((~ (vt1.c0))))) IS TRUE)  as count FROM rt1, vt0, v0, vt1 ORDER BY CAST(((v0.c4)<>(v0.c1)) AS NUMERIC)  NULLS LAST);
SELECT ALL * FROM rt1, vt0, v0, vt1 WHERE (((((rt1.c1) BETWEEN (vt1.c0) AND (v0.c4)))LIKE((~ (vt1.c0))))) ORDER BY CAST(((v0.c4)<>(v0.c1)) AS NUMERIC)  NULLS LAST;
SELECT COUNT(*) FROM rt1, vt1, v0 WHERE (((LIKELY(rt1.c2))>>(0.21405796223617468))) ORDER BY ((((2129467847) NOTNULL)) NOT BETWEEN ((v0.c4 IN ())) AND ((v0.c1 IN (v0.c2)))) ASC  NULLS FIRST, ((((v0.c0)>>(v0.c1))) BETWEEN ((v0.c1 IN ())) AND (((v0.c4)<=(v0.c4))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(rt1.c2))>>(0.21405796223617468))) IS TRUE)  as count FROM rt1, vt1, v0 ORDER BY ((((2129467847) NOTNULL)) NOT BETWEEN ((v0.c4 IN ())) AND ((v0.c1 IN (v0.c2)))) ASC  NULLS FIRST, ((((v0.c0)>>(v0.c1))) BETWEEN ((v0.c1 IN ())) AND (((v0.c4)<=(v0.c4))))  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt1, v0 WHERE (((LIKELY(rt1.c2))>>(0.21405796223617468))) ORDER BY ((((2129467847) NOTNULL)) NOT BETWEEN ((v0.c4 IN ())) AND ((v0.c1 IN (v0.c2)))) ASC  NULLS FIRST, ((((v0.c0)>>(v0.c1))) BETWEEN ((v0.c1 IN ())) AND (((v0.c4)<=(v0.c4))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(rt1.c2))>>(0.21405796223617468))) IS TRUE)  as count FROM rt1, vt1, v0 ORDER BY ((((2129467847) NOTNULL)) NOT BETWEEN ((v0.c4 IN ())) AND ((v0.c1 IN (v0.c2)))) ASC  NULLS FIRST, ((((v0.c0)>>(v0.c1))) BETWEEN ((v0.c1 IN ())) AND (((v0.c4)<=(v0.c4))))  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt1, v0 WHERE (((LIKELY(rt1.c2))>>(0.21405796223617468))) ORDER BY ((((2129467847) NOTNULL)) NOT BETWEEN ((v0.c4 IN ())) AND ((v0.c1 IN (v0.c2)))) ASC  NULLS FIRST, ((((v0.c0)>>(v0.c1))) BETWEEN ((v0.c1 IN ())) AND (((v0.c4)<=(v0.c4))))  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 INNER JOIN vt1 ON ((((0.9552263666612391)<<(v0.c3))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (v0.c4) AND (0.574441138262473))) AND ('TF!a\r1!a')) INNER JOIN rt1 ON ((v0.c2 COLLATE NOCASE) NOTNULL) WHERE ((rt1.c2 IN (rt1.c0, v0.c3)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((rt1.c2 IN (rt1.c0, v0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0 INNER JOIN vt1 ON ((((0.9552263666612391)<<(v0.c3))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (v0.c4) AND (0.574441138262473))) AND ('TF!a\r1!a')) INNER JOIN rt1 ON ((v0.c2 COLLATE NOCASE) NOTNULL));
SELECT COUNT(*) FROM v0, vt0 INNER JOIN vt1 ON ((((0.9552263666612391)<<(v0.c3))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (v0.c4) AND (0.574441138262473))) AND ('TF!a\r1!a')) INNER JOIN rt1 ON ((v0.c2 COLLATE NOCASE) NOTNULL) WHERE ((rt1.c2 IN (rt1.c0, v0.c3)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((rt1.c2 IN (rt1.c0, v0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0 INNER JOIN vt1 ON ((((0.9552263666612391)<<(v0.c3))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (v0.c4) AND (0.574441138262473))) AND ('TF!a\r1!a')) INNER JOIN rt1 ON ((v0.c2 COLLATE NOCASE) NOTNULL));
SELECT COUNT(*) FROM v0, vt0 INNER JOIN vt1 ON ((((0.9552263666612391)<<(v0.c3))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (v0.c4) AND (0.574441138262473))) AND ('TF!a\r1!a')) INNER JOIN rt1 ON ((v0.c2 COLLATE NOCASE) NOTNULL) WHERE ((rt1.c2 IN (rt1.c0, v0.c3)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 INNER JOIN rt1 ON (NOT (((rt1.c2)<=(rt1.c1)))) WHERE (((((rt1.c1) NOT BETWEEN (vt1.c0) AND (rt1.c1))) IS FALSE)) ORDER BY CASE ((((((((rt1.c1)AND(rt1.c1)))OR(rt1.c0)))OR(vt1.c0)))OR(rt1.c2))  WHEN rt1.c1 COLLATE RTRIM THEN ((vt1.c0)*(vt1.c0)) ELSE ((rt1.c2) NOT NULL) END ASC, rt1.c0 DESC, LOWER('')  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) NOT BETWEEN (vt1.c0) AND (rt1.c1))) IS FALSE)) IS TRUE)  as count FROM vt1 INNER JOIN rt1 ON (NOT (((rt1.c2)<=(rt1.c1)))) ORDER BY CASE ((((((((rt1.c1)AND(rt1.c1)))OR(rt1.c0)))OR(vt1.c0)))OR(rt1.c2))  WHEN rt1.c1 COLLATE RTRIM THEN ((vt1.c0)*(vt1.c0)) ELSE ((rt1.c2) NOT NULL) END ASC, rt1.c0 DESC, LOWER('')  NULLS LAST);
SELECT COUNT(*) FROM vt1 INNER JOIN rt1 ON (NOT (((rt1.c2)<=(rt1.c1)))) WHERE (((((rt1.c1) NOT BETWEEN (vt1.c0) AND (rt1.c1))) IS FALSE)) ORDER BY CASE ((((((((rt1.c1)AND(rt1.c1)))OR(rt1.c0)))OR(vt1.c0)))OR(rt1.c2))  WHEN rt1.c1 COLLATE RTRIM THEN ((vt1.c0)*(vt1.c0)) ELSE ((rt1.c2) NOT NULL) END ASC, rt1.c0 DESC, LOWER('')  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) NOT BETWEEN (vt1.c0) AND (rt1.c1))) IS FALSE)) IS TRUE)  as count FROM vt1 INNER JOIN rt1 ON (NOT (((rt1.c2)<=(rt1.c1)))) ORDER BY CASE ((((((((rt1.c1)AND(rt1.c1)))OR(rt1.c0)))OR(vt1.c0)))OR(rt1.c2))  WHEN rt1.c1 COLLATE RTRIM THEN ((vt1.c0)*(vt1.c0)) ELSE ((rt1.c2) NOT NULL) END ASC, rt1.c0 DESC, LOWER('')  NULLS LAST);
SELECT COUNT(*) FROM vt1 INNER JOIN rt1 ON (NOT (((rt1.c2)<=(rt1.c1)))) WHERE (((((rt1.c1) NOT BETWEEN (vt1.c0) AND (rt1.c1))) IS FALSE)) ORDER BY CASE ((((((((rt1.c1)AND(rt1.c1)))OR(rt1.c0)))OR(vt1.c0)))OR(rt1.c2))  WHEN rt1.c1 COLLATE RTRIM THEN ((vt1.c0)*(vt1.c0)) ELSE ((rt1.c2) NOT NULL) END ASC, rt1.c0 DESC, LOWER('')  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0 WHERE (((((v0.c2)<(vt0.c0)))<(CASE v0.c2  WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c0 WHEN vt0.c0 THEN v0.c2 END))) ORDER BY (v0.c1 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c2)<(vt0.c0)))<(CASE v0.c2  WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c0 WHEN vt0.c0 THEN v0.c2 END))) IS TRUE)  as count FROM vt0, v0 ORDER BY (v0.c1 IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((v0.c2)<(vt0.c0)))<(CASE v0.c2  WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c0 WHEN vt0.c0 THEN v0.c2 END))) ORDER BY (v0.c1 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c2)<(vt0.c0)))<(CASE v0.c2  WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c0 WHEN vt0.c0 THEN v0.c2 END))) IS TRUE)  as count FROM vt0, v0 ORDER BY (v0.c1 IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((v0.c2)<(vt0.c0)))<(CASE v0.c2  WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c0 WHEN vt0.c0 THEN v0.c2 END))) ORDER BY (v0.c1 IN ())  NULLS FIRST;
SELECT COUNT(*) FROM rt1 NOT INDEXED FULL OUTER JOIN v0 ON x'' INNER JOIN vt0 ON v0.c4 WHERE ((('')>((NOT (v0.c4))))) ORDER BY (((((vt0.c0))>=((v0.c3))))!=(rt1.c2 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('')>((NOT (v0.c4))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON x'' INNER JOIN vt0 ON v0.c4 ORDER BY (((((vt0.c0))>=((v0.c3))))!=(rt1.c2 COLLATE BINARY)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 NOT INDEXED FULL OUTER JOIN v0 ON x'' INNER JOIN vt0 ON v0.c4 WHERE ((('')>((NOT (v0.c4))))) ORDER BY (((((vt0.c0))>=((v0.c3))))!=(rt1.c2 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('')>((NOT (v0.c4))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON x'' INNER JOIN vt0 ON v0.c4 ORDER BY (((((vt0.c0))>=((v0.c3))))!=(rt1.c2 COLLATE BINARY)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 NOT INDEXED FULL OUTER JOIN v0 ON x'' INNER JOIN vt0 ON v0.c4 WHERE ((('')>((NOT (v0.c4))))) ORDER BY (((((vt0.c0))>=((v0.c3))))!=(rt1.c2 COLLATE BINARY)) ASC  NULLS LAST;
SELECT ALL * FROM vt1, vt0, v0 CROSS JOIN rt1 ON x'' WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt1, vt0, v0 CROSS JOIN rt1 ON x'');
SELECT ALL * FROM vt1, vt0, v0 CROSS JOIN rt1 ON x'' WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt1, vt0, v0 CROSS JOIN rt1 ON x'');
SELECT ALL * FROM vt1, vt0, v0 CROSS JOIN rt1 ON x'' WHERE (v0.c0);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN v0 ON CAST(CAST(v0.c3 AS INTEGER) AS TEXT) LEFT OUTER JOIN vt0 ON rt1.c1 WHERE (((((v0.c2)||(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)||(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON CAST(CAST(v0.c3 AS INTEGER) AS TEXT) LEFT OUTER JOIN vt0 ON rt1.c1);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN v0 ON CAST(CAST(v0.c3 AS INTEGER) AS TEXT) LEFT OUTER JOIN vt0 ON rt1.c1 WHERE (((((v0.c2)||(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)||(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON CAST(CAST(v0.c3 AS INTEGER) AS TEXT) LEFT OUTER JOIN vt0 ON rt1.c1);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN v0 ON CAST(CAST(v0.c3 AS INTEGER) AS TEXT) LEFT OUTER JOIN vt0 ON rt1.c1 WHERE (((((v0.c2)||(vt0.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL);
SELECT * FROM vt0, rt1 LEFT OUTER JOIN vt1 ON (- (CASE x''  WHEN rt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 END)) WHERE ((((((rt1.c0))<=((rt1.c2))))<=(DATETIME(vt1.c0, vt0.c0, rt1.c0)))) ORDER BY CAST(rt1.c0 AS INTEGER) COLLATE NOCASE COLLATE RTRIM  NULLS LAST, CASE ((rt1.c2)%(rt1.c2))  WHEN (rt1.c2 IN ()) THEN CASE rt1.c0  WHEN x'' THEN rt1.c0 ELSE rt1.c1 END ELSE ((vt1.c0) ISNULL) END  NULLS FIRST, ((((((((((vt0.c0)AND(0.7490622883324547)))AND(rt1.c1)))OR(vt0.c0)))AND(vt1.c0)))>(((vt1.c0)*(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c0))<=((rt1.c2))))<=(DATETIME(vt1.c0, vt0.c0, rt1.c0)))) IS TRUE)  as count FROM vt0, rt1 LEFT OUTER JOIN vt1 ON (- (CASE x''  WHEN rt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 END)) ORDER BY CAST(rt1.c0 AS INTEGER) COLLATE NOCASE COLLATE RTRIM  NULLS LAST, CASE ((rt1.c2)%(rt1.c2))  WHEN (rt1.c2 IN ()) THEN CASE rt1.c0  WHEN x'' THEN rt1.c0 ELSE rt1.c1 END ELSE ((vt1.c0) ISNULL) END  NULLS FIRST, ((((((((((vt0.c0)AND(0.7490622883324547)))AND(rt1.c1)))OR(vt0.c0)))AND(vt1.c0)))>(((vt1.c0)*(vt0.c0)))) DESC);
SELECT * FROM vt0, rt1 LEFT OUTER JOIN vt1 ON (- (CASE x''  WHEN rt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 END)) WHERE ((((((rt1.c0))<=((rt1.c2))))<=(DATETIME(vt1.c0, vt0.c0, rt1.c0)))) ORDER BY CAST(rt1.c0 AS INTEGER) COLLATE NOCASE COLLATE RTRIM  NULLS LAST, CASE ((rt1.c2)%(rt1.c2))  WHEN (rt1.c2 IN ()) THEN CASE rt1.c0  WHEN x'' THEN rt1.c0 ELSE rt1.c1 END ELSE ((vt1.c0) ISNULL) END  NULLS FIRST, ((((((((((vt0.c0)AND(0.7490622883324547)))AND(rt1.c1)))OR(vt0.c0)))AND(vt1.c0)))>(((vt1.c0)*(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c0))<=((rt1.c2))))<=(DATETIME(vt1.c0, vt0.c0, rt1.c0)))) IS TRUE)  as count FROM vt0, rt1 LEFT OUTER JOIN vt1 ON (- (CASE x''  WHEN rt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 END)) ORDER BY CAST(rt1.c0 AS INTEGER) COLLATE NOCASE COLLATE RTRIM  NULLS LAST, CASE ((rt1.c2)%(rt1.c2))  WHEN (rt1.c2 IN ()) THEN CASE rt1.c0  WHEN x'' THEN rt1.c0 ELSE rt1.c1 END ELSE ((vt1.c0) ISNULL) END  NULLS FIRST, ((((((((((vt0.c0)AND(0.7490622883324547)))AND(rt1.c1)))OR(vt0.c0)))AND(vt1.c0)))>(((vt1.c0)*(vt0.c0)))) DESC);
SELECT * FROM vt0, rt1 LEFT OUTER JOIN vt1 ON (- (CASE x''  WHEN rt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 END)) WHERE ((((((rt1.c0))<=((rt1.c2))))<=(DATETIME(vt1.c0, vt0.c0, rt1.c0)))) ORDER BY CAST(rt1.c0 AS INTEGER) COLLATE NOCASE COLLATE RTRIM  NULLS LAST, CASE ((rt1.c2)%(rt1.c2))  WHEN (rt1.c2 IN ()) THEN CASE rt1.c0  WHEN x'' THEN rt1.c0 ELSE rt1.c1 END ELSE ((vt1.c0) ISNULL) END  NULLS FIRST, ((((((((((vt0.c0)AND(0.7490622883324547)))AND(rt1.c1)))OR(vt0.c0)))AND(vt1.c0)))>(((vt1.c0)*(vt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM rt1, v0, vt1 WHERE (v0.c4);
SELECT SUM(count) FROM (SELECT ((v0.c4) IS TRUE)  as count FROM rt1, v0, vt1);
SELECT ALL COUNT(*) FROM rt1, v0, vt1 WHERE (v0.c4);
SELECT SUM(count) FROM (SELECT ((v0.c4) IS TRUE)  as count FROM rt1, v0, vt1);
SELECT ALL COUNT(*) FROM rt1, v0, vt1 WHERE (v0.c4);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (((vt1.c0)IS NOT(vt1.c0))))) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND('1119230529')))AND(vt1.c0))) AND (CAST(vt1.c0 AS NUMERIC))) DESC  NULLS LAST, LIKELY(DISTINCT ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt1.c0)IS NOT(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND('1119230529')))AND(vt1.c0))) AND (CAST(vt1.c0 AS NUMERIC))) DESC  NULLS LAST, LIKELY(DISTINCT ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (((vt1.c0)IS NOT(vt1.c0))))) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND('1119230529')))AND(vt1.c0))) AND (CAST(vt1.c0 AS NUMERIC))) DESC  NULLS LAST, LIKELY(DISTINCT ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt1.c0)IS NOT(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND('1119230529')))AND(vt1.c0))) AND (CAST(vt1.c0 AS NUMERIC))) DESC  NULLS LAST, LIKELY(DISTINCT ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (((vt1.c0)IS NOT(vt1.c0))))) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND('1119230529')))AND(vt1.c0))) AND (CAST(vt1.c0 AS NUMERIC))) DESC  NULLS LAST, LIKELY(DISTINCT ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (CAST(CAST(vt1.c0 AS REAL) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c0 AS REAL) AS REAL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(CAST(vt1.c0 AS REAL) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c0 AS REAL) AS REAL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(CAST(vt1.c0 AS REAL) AS REAL));
SELECT * FROM vt0 RIGHT OUTER JOIN rt1 ON ((CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END)/(x'')) WHERE (((((((((0.19699490297308708)OR(CASE 0.2801938229593123  WHEN rt1.c1 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c2 WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c2 END)))AND(((rt1.c1) BETWEEN (rt1.c2) AND (vt0.c0)))))OR(NULLIF(vt0.c0, rt1.c2))))OR(((vt0.c0)<<(rt1.c1))))) ORDER BY rt1.c2 COLLATE BINARY COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((((((((0.19699490297308708)OR(CASE 0.2801938229593123  WHEN rt1.c1 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c2 WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c2 END)))AND(((rt1.c1) BETWEEN (rt1.c2) AND (vt0.c0)))))OR(NULLIF(vt0.c0, rt1.c2))))OR(((vt0.c0)<<(rt1.c1))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON ((CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END)/(x'')) ORDER BY rt1.c2 COLLATE BINARY COLLATE NOCASE ASC);
SELECT * FROM vt0 RIGHT OUTER JOIN rt1 ON ((CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END)/(x'')) WHERE (((((((((0.19699490297308708)OR(CASE 0.2801938229593123  WHEN rt1.c1 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c2 WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c2 END)))AND(((rt1.c1) BETWEEN (rt1.c2) AND (vt0.c0)))))OR(NULLIF(vt0.c0, rt1.c2))))OR(((vt0.c0)<<(rt1.c1))))) ORDER BY rt1.c2 COLLATE BINARY COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((((((((0.19699490297308708)OR(CASE 0.2801938229593123  WHEN rt1.c1 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c2 WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c2 END)))AND(((rt1.c1) BETWEEN (rt1.c2) AND (vt0.c0)))))OR(NULLIF(vt0.c0, rt1.c2))))OR(((vt0.c0)<<(rt1.c1))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON ((CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END)/(x'')) ORDER BY rt1.c2 COLLATE BINARY COLLATE NOCASE ASC);
SELECT * FROM vt0 RIGHT OUTER JOIN rt1 ON ((CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END)/(x'')) WHERE (((((((((0.19699490297308708)OR(CASE 0.2801938229593123  WHEN rt1.c1 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c2 WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c2 END)))AND(((rt1.c1) BETWEEN (rt1.c2) AND (vt0.c0)))))OR(NULLIF(vt0.c0, rt1.c2))))OR(((vt0.c0)<<(rt1.c1))))) ORDER BY rt1.c2 COLLATE BINARY COLLATE NOCASE ASC;
SELECT * FROM vt1, vt0, rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM vt1, vt0, rt1);
SELECT * FROM vt1, vt0, rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM vt1, vt0, rt1);
SELECT * FROM vt1, vt0, rt1 WHERE (rt1.c1);
SELECT * FROM vt0, v0, rt1 FULL OUTER JOIN vt1 ON x'' WHERE ((((((vt0.c0)>(v0.c4))))<=((CASE v0.c3  WHEN x'' THEN vt0.c0 WHEN v0.c2 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c0 ELSE '-745538227' END))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)>(v0.c4))))<=((CASE v0.c3  WHEN x'' THEN vt0.c0 WHEN v0.c2 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c0 ELSE '-745538227' END)))) IS TRUE)  as count FROM vt0, v0, rt1 FULL OUTER JOIN vt1 ON x'');
SELECT * FROM vt0, v0, rt1 FULL OUTER JOIN vt1 ON x'' WHERE ((((((vt0.c0)>(v0.c4))))<=((CASE v0.c3  WHEN x'' THEN vt0.c0 WHEN v0.c2 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c0 ELSE '-745538227' END))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)>(v0.c4))))<=((CASE v0.c3  WHEN x'' THEN vt0.c0 WHEN v0.c2 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c0 ELSE '-745538227' END)))) IS TRUE)  as count FROM vt0, v0, rt1 FULL OUTER JOIN vt1 ON x'');
SELECT * FROM vt0, v0, rt1 FULL OUTER JOIN vt1 ON x'' WHERE ((((((vt0.c0)>(v0.c4))))<=((CASE v0.c3  WHEN x'' THEN vt0.c0 WHEN v0.c2 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c0 ELSE '-745538227' END))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((CAST(0.8085302015929231 AS REAL))OR(CASE WHEN '-1328352749' THEN v0.c1 ELSE v0.c4 END)))OR((NOT (v0.c1))))) ORDER BY ((CASE v0.c4  WHEN NULL THEN v0.c4 WHEN v0.c2 THEN v0.c3 WHEN v0.c0 THEN v0.c0 END)+(((v0.c2)<<(-300666958)))) DESC  NULLS LAST, CAST(v0.c4 COLLATE RTRIM AS BLOB), NULL;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(0.8085302015929231 AS REAL))OR(CASE WHEN '-1328352749' THEN v0.c1 ELSE v0.c4 END)))OR((NOT (v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY ((CASE v0.c4  WHEN NULL THEN v0.c4 WHEN v0.c2 THEN v0.c3 WHEN v0.c0 THEN v0.c0 END)+(((v0.c2)<<(-300666958)))) DESC  NULLS LAST, CAST(v0.c4 COLLATE RTRIM AS BLOB), NULL);
SELECT ALL COUNT(*) FROM v0 WHERE (((((CAST(0.8085302015929231 AS REAL))OR(CASE WHEN '-1328352749' THEN v0.c1 ELSE v0.c4 END)))OR((NOT (v0.c1))))) ORDER BY ((CASE v0.c4  WHEN NULL THEN v0.c4 WHEN v0.c2 THEN v0.c3 WHEN v0.c0 THEN v0.c0 END)+(((v0.c2)<<(-300666958)))) DESC  NULLS LAST, CAST(v0.c4 COLLATE RTRIM AS BLOB), NULL;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(0.8085302015929231 AS REAL))OR(CASE WHEN '-1328352749' THEN v0.c1 ELSE v0.c4 END)))OR((NOT (v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY ((CASE v0.c4  WHEN NULL THEN v0.c4 WHEN v0.c2 THEN v0.c3 WHEN v0.c0 THEN v0.c0 END)+(((v0.c2)<<(-300666958)))) DESC  NULLS LAST, CAST(v0.c4 COLLATE RTRIM AS BLOB), NULL);
SELECT ALL COUNT(*) FROM v0 WHERE (((((CAST(0.8085302015929231 AS REAL))OR(CASE WHEN '-1328352749' THEN v0.c1 ELSE v0.c4 END)))OR((NOT (v0.c1))))) ORDER BY ((CASE v0.c4  WHEN NULL THEN v0.c4 WHEN v0.c2 THEN v0.c3 WHEN v0.c0 THEN v0.c0 END)+(((v0.c2)<<(-300666958)))) DESC  NULLS LAST, CAST(v0.c4 COLLATE RTRIM AS BLOB), NULL;
SELECT * FROM rt1, vt1, vt0 LEFT OUTER JOIN v0 ON LIKELIHOOD((v0.c1 IN ()), 0.6580169066908395) WHERE ((+ ((((rt1.c2)) NOT BETWEEN ((v0.c2)) AND ((vt0.c0)))))) ORDER BY (- (v0.c2)) COLLATE NOCASE ASC, v0.c4 ASC  NULLS LAST, (((rt1.c1)) BETWEEN ((v0.c1)) AND ((NULL COLLATE NOCASE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ((((rt1.c2)) NOT BETWEEN ((v0.c2)) AND ((vt0.c0)))))) IS TRUE)  as count FROM rt1, vt1, vt0 LEFT OUTER JOIN v0 ON LIKELIHOOD((v0.c1 IN ()), 0.6580169066908395) ORDER BY (- (v0.c2)) COLLATE NOCASE ASC, v0.c4 ASC  NULLS LAST, (((rt1.c1)) BETWEEN ((v0.c1)) AND ((NULL COLLATE NOCASE))) ASC  NULLS FIRST);
SELECT * FROM rt1, vt1, vt0 LEFT OUTER JOIN v0 ON LIKELIHOOD((v0.c1 IN ()), 0.6580169066908395) WHERE ((+ ((((rt1.c2)) NOT BETWEEN ((v0.c2)) AND ((vt0.c0)))))) ORDER BY (- (v0.c2)) COLLATE NOCASE ASC, v0.c4 ASC  NULLS LAST, (((rt1.c1)) BETWEEN ((v0.c1)) AND ((NULL COLLATE NOCASE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ((((rt1.c2)) NOT BETWEEN ((v0.c2)) AND ((vt0.c0)))))) IS TRUE)  as count FROM rt1, vt1, vt0 LEFT OUTER JOIN v0 ON LIKELIHOOD((v0.c1 IN ()), 0.6580169066908395) ORDER BY (- (v0.c2)) COLLATE NOCASE ASC, v0.c4 ASC  NULLS LAST, (((rt1.c1)) BETWEEN ((v0.c1)) AND ((NULL COLLATE NOCASE))) ASC  NULLS FIRST);
SELECT * FROM rt1, vt1, vt0 LEFT OUTER JOIN v0 ON LIKELIHOOD((v0.c1 IN ()), 0.6580169066908395) WHERE ((+ ((((rt1.c2)) NOT BETWEEN ((v0.c2)) AND ((vt0.c0)))))) ORDER BY (- (v0.c2)) COLLATE NOCASE ASC, v0.c4 ASC  NULLS LAST, (((rt1.c1)) BETWEEN ((v0.c1)) AND ((NULL COLLATE NOCASE))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, v0, vt1 WHERE (((((highlight(vt0.c0, v0.c4, '6F3Á≠øNX‡µπ-d', v0.c4))AND(((((v0.c2)OR(v0.c1)))AND(v0.c1)))))OR((v0.c0 IN (v0.c4, v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((highlight(vt0.c0, v0.c4, '6F3Á≠øNX‡µπ-d', v0.c4))AND(((((v0.c2)OR(v0.c1)))AND(v0.c1)))))OR((v0.c0 IN (v0.c4, v0.c1))))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT ALL * FROM vt0, v0, vt1 WHERE (((((highlight(vt0.c0, v0.c4, '6F3Á≠øNX‡µπ-d', v0.c4))AND(((((v0.c2)OR(v0.c1)))AND(v0.c1)))))OR((v0.c0 IN (v0.c4, v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((highlight(vt0.c0, v0.c4, '6F3Á≠øNX‡µπ-d', v0.c4))AND(((((v0.c2)OR(v0.c1)))AND(v0.c1)))))OR((v0.c0 IN (v0.c4, v0.c1))))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON TYPEOF(DISTINCT ((v0.c3)<=(v0.c3))) RIGHT OUTER JOIN v0 ON ((((v0.c2)&(v0.c1))) IS FALSE) WHERE ((((0.30046077926762416, v0.c4 COLLATE NOCASE, COALESCE(DISTINCT vt1.c0, v0.c1, v0.c2, v0.c3)))==((v0.c0 COLLATE NOCASE, (((vt0.c0))!=((x''))), (NOT (v0.c1))))));
SELECT SUM(count) FROM (SELECT (((((0.30046077926762416, v0.c4 COLLATE NOCASE, COALESCE(DISTINCT vt1.c0, v0.c1, v0.c2, v0.c3)))=((v0.c0 COLLATE NOCASE, (((vt0.c0))<>((x''))), (NOT (v0.c1)))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON TYPEOF(DISTINCT ((v0.c3)<=(v0.c3))) RIGHT OUTER JOIN v0 ON ((((v0.c2)&(v0.c1))) IS FALSE));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON TYPEOF(DISTINCT ((v0.c3)<=(v0.c3))) RIGHT OUTER JOIN v0 ON ((((v0.c2)&(v0.c1))) IS FALSE) WHERE ((((0.30046077926762416, v0.c4 COLLATE NOCASE, COALESCE(DISTINCT vt1.c0, v0.c1, v0.c2, v0.c3)))==((v0.c0 COLLATE NOCASE, (((vt0.c0))!=((x''))), (NOT (v0.c1))))));
SELECT SUM(count) FROM (SELECT (((((0.30046077926762416, v0.c4 COLLATE NOCASE, COALESCE(DISTINCT vt1.c0, v0.c1, v0.c2, v0.c3)))=((v0.c0 COLLATE NOCASE, (((vt0.c0))<>((x''))), (NOT (v0.c1)))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON TYPEOF(DISTINCT ((v0.c3)<=(v0.c3))) RIGHT OUTER JOIN v0 ON ((((v0.c2)&(v0.c1))) IS FALSE));
SELECT COUNT(*) FROM rt1 WHERE ((rt1.c1 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 IN ())) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((rt1.c1 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 IN ())) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((rt1.c1 IN ()));
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON ((CASE WHEN vt0.c0 THEN 0xffffffffc49f8028 END)=(((rt1.c2)AND(rt1.c2)))) WHERE (json_extract((vt0.c0 IN ()), (rt1.c0 IN (rt1.c2, rt1.c2)), (rt1.c0 IN (rt1.c2)), CASE '5F3'  WHEN vt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((json_extract((vt0.c0 IN ()), (rt1.c0 IN (rt1.c2, rt1.c2)), (rt1.c0 IN (rt1.c2)), CASE '5F3'  WHEN vt0.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ((CASE WHEN vt0.c0 THEN 0Xffffffffc49f8028 END)==(((rt1.c2)AND(rt1.c2)))));
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON ((CASE WHEN vt0.c0 THEN 0xffffffffc49f8028 END)=(((rt1.c2)AND(rt1.c2)))) WHERE (json_extract((vt0.c0 IN ()), (rt1.c0 IN (rt1.c2, rt1.c2)), (rt1.c0 IN (rt1.c2)), CASE '5F3'  WHEN vt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((json_extract((vt0.c0 IN ()), (rt1.c0 IN (rt1.c2, rt1.c2)), (rt1.c0 IN (rt1.c2)), CASE '5F3'  WHEN vt0.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ((CASE WHEN vt0.c0 THEN 0Xffffffffc49f8028 END)==(((rt1.c2)AND(rt1.c2)))));
SELECT ALL COUNT(*) FROM rt1, v0, vt1 CROSS JOIN vt0 ON ((v0.c2) IS TRUE) COLLATE NOCASE WHERE ((NOT (((((v0.c4)OR(vt0.c0)))OR(rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((v0.c4)OR(vt0.c0)))OR(rt1.c1))))) IS TRUE)  as count FROM rt1, v0, vt1 CROSS JOIN vt0 ON ((v0.c2) IS TRUE) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1, v0, vt1 CROSS JOIN vt0 ON ((v0.c2) IS TRUE) COLLATE NOCASE WHERE ((NOT (((((v0.c4)OR(vt0.c0)))OR(rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((v0.c4)OR(vt0.c0)))OR(rt1.c1))))) IS TRUE)  as count FROM rt1, v0, vt1 CROSS JOIN vt0 ON ((v0.c2) IS TRUE) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1, v0, vt1 CROSS JOIN vt0 ON ((v0.c2) IS TRUE) COLLATE NOCASE WHERE ((NOT (((((v0.c4)OR(vt0.c0)))OR(rt1.c1)))));
SELECT * FROM v0 WHERE ((((v0.c4) NOT BETWEEN (v0.c1) AND (v0.c3)) IN (SQLITE_VERSION()))) ORDER BY v0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c4) NOT BETWEEN (v0.c1) AND (v0.c3)) IN (SQLITE_VERSION()))) IS TRUE)  as count FROM v0 ORDER BY v0.c1 DESC  NULLS LAST);
SELECT * FROM v0 WHERE ((((v0.c4) NOT BETWEEN (v0.c1) AND (v0.c3)) IN (SQLITE_VERSION()))) ORDER BY v0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c4) NOT BETWEEN (v0.c1) AND (v0.c3)) IN (SQLITE_VERSION()))) IS TRUE)  as count FROM v0 ORDER BY v0.c1 DESC  NULLS LAST);
SELECT * FROM v0 WHERE ((((v0.c4) NOT BETWEEN (v0.c1) AND (v0.c3)) IN (SQLITE_VERSION()))) ORDER BY v0.c1 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT NULL))AND(vt1.c0))) ORDER BY (((~ (vt1.c0))) BETWEEN (((vt1.c0)+(vt1.c0))) AND (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))))  NULLS FIRST, vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT NULL))AND(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY (((~ (vt1.c0))) BETWEEN (((vt1.c0)+(vt1.c0))) AND (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))))  NULLS FIRST, vt1.c0);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT NULL))AND(vt1.c0))) ORDER BY (((~ (vt1.c0))) BETWEEN (((vt1.c0)+(vt1.c0))) AND (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))))  NULLS FIRST, vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT NULL))AND(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY (((~ (vt1.c0))) BETWEEN (((vt1.c0)+(vt1.c0))) AND (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))))  NULLS FIRST, vt1.c0);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT NULL))AND(vt1.c0))) ORDER BY (((~ (vt1.c0))) BETWEEN (((vt1.c0)+(vt1.c0))) AND (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))))  NULLS FIRST, vt1.c0;
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON ((((v0.c1) NOT NULL)) NOT NULL) WHERE (NULLIF(v0.c3 COLLATE BINARY, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c1)))));
SELECT SUM(count) FROM (SELECT ((NULLIF(v0.c3 COLLATE BINARY, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c1))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((((v0.c1) NOT NULL)) NOT NULL));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON ((((v0.c1) NOT NULL)) NOT NULL) WHERE (NULLIF(v0.c3 COLLATE BINARY, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c1)))));
SELECT SUM(count) FROM (SELECT ((NULLIF(v0.c3 COLLATE BINARY, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c1))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((((v0.c1) NOT NULL)) NOT NULL));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON ((((v0.c1) NOT NULL)) NOT NULL) WHERE (NULLIF(v0.c3 COLLATE BINARY, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c1)))));
SELECT COUNT(*) FROM vt0, vt1, v0 WHERE ((x'' IN ())) ORDER BY v0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY v0.c1 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, v0 WHERE ((x'' IN ())) ORDER BY v0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY v0.c1 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, v0 WHERE ((x'' IN ())) ORDER BY v0.c1 DESC  NULLS LAST;
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON rt1.c2 WHERE (CAST(x'168a' AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'168a' AS BLOB)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON rt1.c2);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON rt1.c2 WHERE (CAST(x'168a' AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'168a' AS BLOB)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON rt1.c2);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON rt1.c2 WHERE (CAST(x'168a' AS BLOB));
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (((('-200806090')/(v0.c4)) IN ()));
SELECT SUM(count) FROM (SELECT ((((('-200806090')/(v0.c4)) IN ())) IS TRUE)  as count FROM rt1, v0);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (((('-200806090')/(v0.c4)) IN ()));
SELECT SUM(count) FROM (SELECT ((((('-200806090')/(v0.c4)) IN ())) IS TRUE)  as count FROM rt1, v0);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (((('-200806090')/(v0.c4)) IN ()));
SELECT ALL * FROM vt1 NATURAL JOIN v0 WHERE (((((((((UPPER(DISTINCT v0.c0))AND(v0.c4 COLLATE NOCASE)))OR(CAST(v0.c0 AS BLOB))))AND(vt1.c0 COLLATE NOCASE)))OR(CAST(v0.c3 AS INTEGER)))) ORDER BY v0.c4  NULLS FIRST, ((((vt1.c0)AND(v0.c2)))|(CASE v0.c2  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)), CASE WHEN ((v0.c1) ISNULL) THEN ((v0.c2)<=(v0.c3)) ELSE NULL COLLATE BINARY END;
SELECT SUM(count) FROM (SELECT ALL ((((((((((UPPER(DISTINCT v0.c0))AND(v0.c4 COLLATE NOCASE)))OR(CAST(v0.c0 AS BLOB))))AND(vt1.c0 COLLATE NOCASE)))OR(CAST(v0.c3 AS INTEGER)))) IS TRUE)  as count FROM vt1 NATURAL JOIN v0 ORDER BY v0.c4  NULLS FIRST, ((((vt1.c0)AND(v0.c2)))|(CASE v0.c2  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)), CASE WHEN ((v0.c1) ISNULL) THEN ((v0.c2)<=(v0.c3)) ELSE NULL COLLATE BINARY END);
SELECT ALL * FROM vt1 NATURAL JOIN v0 WHERE (((((((((UPPER(DISTINCT v0.c0))AND(v0.c4 COLLATE NOCASE)))OR(CAST(v0.c0 AS BLOB))))AND(vt1.c0 COLLATE NOCASE)))OR(CAST(v0.c3 AS INTEGER)))) ORDER BY v0.c4  NULLS FIRST, ((((vt1.c0)AND(v0.c2)))|(CASE v0.c2  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)), CASE WHEN ((v0.c1) ISNULL) THEN ((v0.c2)<=(v0.c3)) ELSE NULL COLLATE BINARY END;
SELECT SUM(count) FROM (SELECT ALL ((((((((((UPPER(DISTINCT v0.c0))AND(v0.c4 COLLATE NOCASE)))OR(CAST(v0.c0 AS BLOB))))AND(vt1.c0 COLLATE NOCASE)))OR(CAST(v0.c3 AS INTEGER)))) IS TRUE)  as count FROM vt1 NATURAL JOIN v0 ORDER BY v0.c4  NULLS FIRST, ((((vt1.c0)AND(v0.c2)))|(CASE v0.c2  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)), CASE WHEN ((v0.c1) ISNULL) THEN ((v0.c2)<=(v0.c3)) ELSE NULL COLLATE BINARY END);
SELECT ALL * FROM vt1 NATURAL JOIN v0 WHERE (((((((((UPPER(DISTINCT v0.c0))AND(v0.c4 COLLATE NOCASE)))OR(CAST(v0.c0 AS BLOB))))AND(vt1.c0 COLLATE NOCASE)))OR(CAST(v0.c3 AS INTEGER)))) ORDER BY v0.c4  NULLS FIRST, ((((vt1.c0)AND(v0.c2)))|(CASE v0.c2  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)), CASE WHEN ((v0.c1) ISNULL) THEN ((v0.c2)<=(v0.c3)) ELSE NULL COLLATE BINARY END;
SELECT * FROM vt1, rt1, vt0 WHERE (CAST(((rt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS REAL)) ORDER BY NULL, CAST(rt1.c2 COLLATE NOCASE AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt1, rt1, vt0 ORDER BY NULL, CAST(rt1.c2 COLLATE NOCASE AS BLOB) ASC);
SELECT * FROM vt1, rt1, vt0 WHERE (CAST(((rt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS REAL)) ORDER BY NULL, CAST(rt1.c2 COLLATE NOCASE AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt1, rt1, vt0 ORDER BY NULL, CAST(rt1.c2 COLLATE NOCASE AS BLOB) ASC);
SELECT * FROM vt1, rt1, vt0 WHERE (CAST(((rt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS REAL)) ORDER BY NULL, CAST(rt1.c2 COLLATE NOCASE AS BLOB) ASC;
SELECT ALL COUNT(*) FROM vt1, v0 FULL OUTER JOIN rt1 ON COALESCE(v0.c0 COLLATE RTRIM, (vt1.c0 IN ())) WHERE (((rt1.c0)/(rt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0)/(rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, v0 FULL OUTER JOIN rt1 ON COALESCE(v0.c0 COLLATE RTRIM, (vt1.c0 IN ())));
SELECT ALL COUNT(*) FROM vt1, v0 FULL OUTER JOIN rt1 ON COALESCE(v0.c0 COLLATE RTRIM, (vt1.c0 IN ())) WHERE (((rt1.c0)/(rt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0)/(rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, v0 FULL OUTER JOIN rt1 ON COALESCE(v0.c0 COLLATE RTRIM, (vt1.c0 IN ())));
SELECT ALL COUNT(*) FROM vt1, v0 FULL OUTER JOIN rt1 ON COALESCE(v0.c0 COLLATE RTRIM, (vt1.c0 IN ())) WHERE (((rt1.c0)/(rt1.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM vt1 WHERE (((IFNULL(DISTINCT vt1.c0, vt1.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((IFNULL(DISTINCT vt1.c0, vt1.c0)) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((IFNULL(DISTINCT vt1.c0, vt1.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((IFNULL(DISTINCT vt1.c0, vt1.c0)) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((IFNULL(DISTINCT vt1.c0, vt1.c0)) IS FALSE));
SELECT ALL * FROM v0 WHERE (CAST(CAST(v0.c0 AS INTEGER) AS INTEGER)) ORDER BY ((((v0.c4)<>(v0.c2))) NOT BETWEEN ((((v0.c2, v0.c3, NULL))<((NULL, v0.c3, v0.c3)))) AND (((v0.c3) IS FALSE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(v0.c0 AS INTEGER) AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c4)<>(v0.c2))) NOT BETWEEN ((((v0.c2, v0.c3, NULL))<((NULL, v0.c3, v0.c3)))) AND (((v0.c3) IS FALSE))) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CAST(CAST(v0.c0 AS INTEGER) AS INTEGER)) ORDER BY ((((v0.c4)<>(v0.c2))) NOT BETWEEN ((((v0.c2, v0.c3, NULL))<((NULL, v0.c3, v0.c3)))) AND (((v0.c3) IS FALSE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(v0.c0 AS INTEGER) AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c4)<>(v0.c2))) NOT BETWEEN ((((v0.c2, v0.c3, NULL))<((NULL, v0.c3, v0.c3)))) AND (((v0.c3) IS FALSE))) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CAST(CAST(v0.c0 AS INTEGER) AS INTEGER)) ORDER BY ((((v0.c4)<>(v0.c2))) NOT BETWEEN ((((v0.c2, v0.c3, NULL))<((NULL, v0.c3, v0.c3)))) AND (((v0.c3) IS FALSE))) DESC  NULLS LAST;
SELECT * FROM vt1, v0 WHERE (CASE WHEN ((vt1.c0) BETWEEN (v0.c3) AND (v0.c3)) THEN ((v0.c4)!=(v0.c3)) END) ORDER BY ((((v0.c3)>=(v0.c2))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0) BETWEEN (v0.c3) AND (v0.c3)) THEN ((v0.c4)!=(v0.c3)) END) IS TRUE)  as count FROM vt1, v0 ORDER BY ((((v0.c3)>=(v0.c2))) NOTNULL));
SELECT * FROM vt1, v0 WHERE (CASE WHEN ((vt1.c0) BETWEEN (v0.c3) AND (v0.c3)) THEN ((v0.c4)!=(v0.c3)) END) ORDER BY ((((v0.c3)>=(v0.c2))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0) BETWEEN (v0.c3) AND (v0.c3)) THEN ((v0.c4)!=(v0.c3)) END) IS TRUE)  as count FROM vt1, v0 ORDER BY ((((v0.c3)>=(v0.c2))) NOTNULL));
SELECT * FROM vt1, v0 WHERE (CASE WHEN ((vt1.c0) BETWEEN (v0.c3) AND (v0.c3)) THEN ((v0.c4)!=(v0.c3)) END) ORDER BY ((((v0.c3)>=(v0.c2))) NOTNULL);
SELECT COUNT(*) FROM rt1, v0 INNER JOIN vt1 ON ((CAST(x'' AS INTEGER))>((v0.c2 IN ()))) WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (NULL) AND (x'')))) AND (((('0.26311691996561226')IS(v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (NULL) AND (x'')))) AND (((('0.26311691996561226')IS(v0.c2)))))) IS TRUE)  as count FROM rt1, v0 INNER JOIN vt1 ON ((CAST(x'' AS INTEGER))>((v0.c2 IN ()))));
SELECT COUNT(*) FROM rt1, v0 INNER JOIN vt1 ON ((CAST(x'' AS INTEGER))>((v0.c2 IN ()))) WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (NULL) AND (x'')))) AND (((('0.26311691996561226')IS(v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (NULL) AND (x'')))) AND (((('0.26311691996561226')IS(v0.c2)))))) IS TRUE)  as count FROM rt1, v0 INNER JOIN vt1 ON ((CAST(x'' AS INTEGER))>((v0.c2 IN ()))));
SELECT COUNT(*) FROM rt1, v0 INNER JOIN vt1 ON ((CAST(x'' AS INTEGER))>((v0.c2 IN ()))) WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (NULL) AND (x'')))) AND (((('0.26311691996561226')IS(v0.c2))))));
SELECT COUNT(*) FROM v0, rt1 WHERE (CAST(CAST(v0.c1 AS BLOB) AS REAL)) ORDER BY -1867285633, ((((v0.c0 IN ()), ((0.34054612487221125)+(v0.c0)), (((v0.c4)) NOT BETWEEN ((v0.c2)) AND ((v0.c4)))))>=((v0.c4 COLLATE NOCASE, LIKELIHOOD(DISTINCT v0.c1, 0.2859140659181748), (((v0.c0))<((v0.c4)))))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(v0.c1 AS BLOB) AS REAL)) IS TRUE)  as count FROM v0, rt1 ORDER BY -1867285633, ((((v0.c0 IN ()), ((0.34054612487221125)+(v0.c0)), (((v0.c4)) NOT BETWEEN ((v0.c2)) AND ((v0.c4)))))>=((v0.c4 COLLATE NOCASE, LIKELIHOOD(DISTINCT v0.c1, 0.2859140659181748), (((v0.c0))<((v0.c4)))))) ASC);
SELECT COUNT(*) FROM v0, rt1 WHERE (CAST(CAST(v0.c1 AS BLOB) AS REAL)) ORDER BY -1867285633, ((((v0.c0 IN ()), ((0.34054612487221125)+(v0.c0)), (((v0.c4)) NOT BETWEEN ((v0.c2)) AND ((v0.c4)))))>=((v0.c4 COLLATE NOCASE, LIKELIHOOD(DISTINCT v0.c1, 0.2859140659181748), (((v0.c0))<((v0.c4)))))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(v0.c1 AS BLOB) AS REAL)) IS TRUE)  as count FROM v0, rt1 ORDER BY -1867285633, ((((v0.c0 IN ()), ((0.34054612487221125)+(v0.c0)), (((v0.c4)) NOT BETWEEN ((v0.c2)) AND ((v0.c4)))))>=((v0.c4 COLLATE NOCASE, LIKELIHOOD(DISTINCT v0.c1, 0.2859140659181748), (((v0.c0))<((v0.c4)))))) ASC);
SELECT COUNT(*) FROM rt1, v0, vt0, vt1 WHERE ((- (((rt1.c2) NOTNULL)))) ORDER BY ((v0.c3)LIKE(v0.c1)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt1.c2) NOTNULL)))) IS TRUE)  as count FROM rt1, v0, vt0, vt1 ORDER BY ((v0.c3)LIKE(v0.c1)) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM rt1, v0, vt0, vt1 WHERE ((- (((rt1.c2) NOTNULL)))) ORDER BY ((v0.c3)LIKE(v0.c1)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt1.c2) NOTNULL)))) IS TRUE)  as count FROM rt1, v0, vt0, vt1 ORDER BY ((v0.c3)LIKE(v0.c1)) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM rt1, v0, vt0, vt1 WHERE ((- (((rt1.c2) NOTNULL)))) ORDER BY ((v0.c3)LIKE(v0.c1)) COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM vt1 NOT INDEXED WHERE ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))>=((NULLIF(vt1.c0, vt1.c0), vt1.c0 COLLATE BINARY, CASE WHEN vt1.c0 THEN vt1.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))>=((NULLIF(vt1.c0, vt1.c0), vt1.c0 COLLATE BINARY, CASE WHEN vt1.c0 THEN vt1.c0 END)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 NOT INDEXED WHERE ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))>=((NULLIF(vt1.c0, vt1.c0), vt1.c0 COLLATE BINARY, CASE WHEN vt1.c0 THEN vt1.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))>=((NULLIF(vt1.c0, vt1.c0), vt1.c0 COLLATE BINARY, CASE WHEN vt1.c0 THEN vt1.c0 END)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 NOT INDEXED WHERE ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))>=((NULLIF(vt1.c0, vt1.c0), vt1.c0 COLLATE BINARY, CASE WHEN vt1.c0 THEN vt1.c0 END))));
SELECT * FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))/(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))/(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))/(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))/(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))/(vt1.c0)));
SELECT ALL * FROM rt1, vt1 WHERE (CAST(((0.4638046441822784)<<('Y	>xfÏ®±24')) AS REAL)) ORDER BY LIKE(594941666, vt1.c0, '-') COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((0.4638046441822784)<<('Y	>xfÏ®±24')) AS REAL)) IS TRUE)  as count FROM rt1, vt1 ORDER BY LIKE(594941666, vt1.c0, '-') COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM rt1, vt1 WHERE (CAST(((0.4638046441822784)<<('Y	>xfÏ®±24')) AS REAL)) ORDER BY LIKE(594941666, vt1.c0, '-') COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((0.4638046441822784)<<('Y	>xfÏ®±24')) AS REAL)) IS TRUE)  as count FROM rt1, vt1 ORDER BY LIKE(594941666, vt1.c0, '-') COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM rt1, vt1 WHERE (CAST(((0.4638046441822784)<<('Y	>xfÏ®±24')) AS REAL)) ORDER BY LIKE(594941666, vt1.c0, '-') COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, v0 CROSS JOIN rt1 ON CASE (((v0.c3)) NOT BETWEEN ((rt1.c1)) AND ((v0.c2)))  WHEN ((v0.c1) ISNULL) THEN v0.c0 WHEN CASE WHEN v0.c0 THEN v0.c4 END THEN CAST(vt1.c0 AS BLOB) WHEN '1845231199' THEN ((v0.c3)%(rt1.c0)) ELSE ((((((((v0.c1)AND(0Xffffffffadcf5875)))AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c1)) END WHERE ((((+ (v0.c0)))>((((v0.c3)) BETWEEN (('-200806090')) AND ((rt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((+ (v0.c0)))>((((v0.c3)) BETWEEN (('-200806090')) AND ((rt1.c1)))))) IS TRUE)  as count FROM vt1, v0 CROSS JOIN rt1 ON CASE (((v0.c3)) NOT BETWEEN ((rt1.c1)) AND ((v0.c2)))  WHEN ((v0.c1) ISNULL) THEN v0.c0 WHEN CASE WHEN v0.c0 THEN v0.c4 END THEN CAST(vt1.c0 AS BLOB) WHEN '1845231199' THEN ((v0.c3)%(rt1.c0)) ELSE ((((((((v0.c1)AND(0Xffffffffadcf5875)))AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c1)) END);
SELECT ALL COUNT(*) FROM vt1, v0 CROSS JOIN rt1 ON CASE (((v0.c3)) NOT BETWEEN ((rt1.c1)) AND ((v0.c2)))  WHEN ((v0.c1) ISNULL) THEN v0.c0 WHEN CASE WHEN v0.c0 THEN v0.c4 END THEN CAST(vt1.c0 AS BLOB) WHEN '1845231199' THEN ((v0.c3)%(rt1.c0)) ELSE ((((((((v0.c1)AND(0Xffffffffadcf5875)))AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c1)) END WHERE ((((+ (v0.c0)))>((((v0.c3)) BETWEEN (('-200806090')) AND ((rt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((+ (v0.c0)))>((((v0.c3)) BETWEEN (('-200806090')) AND ((rt1.c1)))))) IS TRUE)  as count FROM vt1, v0 CROSS JOIN rt1 ON CASE (((v0.c3)) NOT BETWEEN ((rt1.c1)) AND ((v0.c2)))  WHEN ((v0.c1) ISNULL) THEN v0.c0 WHEN CASE WHEN v0.c0 THEN v0.c4 END THEN CAST(vt1.c0 AS BLOB) WHEN '1845231199' THEN ((v0.c3)%(rt1.c0)) ELSE ((((((((v0.c1)AND(0Xffffffffadcf5875)))AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c1)) END);
SELECT ALL COUNT(*) FROM vt1, v0 CROSS JOIN rt1 ON CASE (((v0.c3)) NOT BETWEEN ((rt1.c1)) AND ((v0.c2)))  WHEN ((v0.c1) ISNULL) THEN v0.c0 WHEN CASE WHEN v0.c0 THEN v0.c4 END THEN CAST(vt1.c0 AS BLOB) WHEN '1845231199' THEN ((v0.c3)%(rt1.c0)) ELSE ((((((((v0.c1)AND(0Xffffffffadcf5875)))AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c1)) END WHERE ((((+ (v0.c0)))>((((v0.c3)) BETWEEN (('-200806090')) AND ((rt1.c1))))));
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1);
SELECT COUNT(*) FROM vt1 INNER JOIN rt1 ON '' WHERE (((((rt1.c2)<(vt1.c0)))>(((rt1.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)<(vt1.c0)))>(((rt1.c2) NOT NULL)))) IS TRUE)  as count FROM vt1 INNER JOIN rt1 ON '');
SELECT COUNT(*) FROM vt1 INNER JOIN rt1 ON '' WHERE (((((rt1.c2)<(vt1.c0)))>(((rt1.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)<(vt1.c0)))>(((rt1.c2) NOT NULL)))) IS TRUE)  as count FROM vt1 INNER JOIN rt1 ON '');
SELECT COUNT(*) FROM vt1 INNER JOIN rt1 ON '' WHERE (((((rt1.c2)<(vt1.c0)))>(((rt1.c2) NOT NULL))));
SELECT COUNT(*) FROM vt0, v0, rt1, vt1 WHERE ((+ ((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((+ (vt1.c0))))) IS TRUE)  as count FROM vt0, v0, rt1, vt1);
SELECT COUNT(*) FROM vt0, v0, rt1, vt1 WHERE ((+ ((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((+ (vt1.c0))))) IS TRUE)  as count FROM vt0, v0, rt1, vt1);
SELECT COUNT(*) FROM vt0, v0, rt1, vt1 WHERE ((+ ((+ (vt1.c0)))));
SELECT ALL * FROM v0 WHERE ((CAST(v0.c0 AS BLOB) IN ())) ORDER BY (((((v0.c4)GLOB(v0.c0))))<((CASE v0.c0  WHEN v0.c2 THEN v0.c1 END))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c4)GLOB(v0.c0))))<((CASE v0.c0  WHEN v0.c2 THEN v0.c1 END))) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((CAST(v0.c0 AS BLOB) IN ())) ORDER BY (((((v0.c4)GLOB(v0.c0))))<((CASE v0.c0  WHEN v0.c2 THEN v0.c1 END))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c4)GLOB(v0.c0))))<((CASE v0.c0  WHEN v0.c2 THEN v0.c1 END))) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((CAST(v0.c0 AS BLOB) IN ())) ORDER BY (((((v0.c4)GLOB(v0.c0))))<((CASE v0.c0  WHEN v0.c2 THEN v0.c1 END))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1, rt1, v0 WHERE ((NOT (((rt1.c0) ISNULL)))) ORDER BY LIKELY((((rt1.c2))>((rt1.c2))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c0) ISNULL)))) IS TRUE)  as count FROM vt0, vt1, rt1, v0 ORDER BY LIKELY((((rt1.c2))>((rt1.c2)))));
SELECT ALL COUNT(*) FROM vt0, vt1, rt1, v0 WHERE ((NOT (((rt1.c0) ISNULL)))) ORDER BY LIKELY((((rt1.c2))>((rt1.c2))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c0) ISNULL)))) IS TRUE)  as count FROM vt0, vt1, rt1, v0 ORDER BY LIKELY((((rt1.c2))>((rt1.c2)))));
SELECT ALL COUNT(*) FROM vt0, vt1, rt1, v0 WHERE ((NOT (((rt1.c0) ISNULL)))) ORDER BY LIKELY((((rt1.c2))>((rt1.c2))));
SELECT ALL * FROM vt1, v0, vt0 WHERE (2104354444) ORDER BY CASE ((v0.c1) NOTNULL)  WHEN LTRIM(v0.c2, vt0.c0) THEN CAST(v0.c0 AS REAL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((2104354444) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY CASE ((v0.c1) NOTNULL)  WHEN LTRIM(v0.c2, vt0.c0) THEN CAST(v0.c0 AS REAL) END  NULLS LAST);
SELECT ALL * FROM vt1, v0, vt0 WHERE (2104354444) ORDER BY CASE ((v0.c1) NOTNULL)  WHEN LTRIM(v0.c2, vt0.c0) THEN CAST(v0.c0 AS REAL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((2104354444) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY CASE ((v0.c1) NOTNULL)  WHEN LTRIM(v0.c2, vt0.c0) THEN CAST(v0.c0 AS REAL) END  NULLS LAST);
SELECT ALL * FROM vt1, v0, vt0 WHERE (2104354444) ORDER BY CASE ((v0.c1) NOTNULL)  WHEN LTRIM(v0.c2, vt0.c0) THEN CAST(v0.c0 AS REAL) END  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CASE (+ (rt1.c1))  WHEN (~ (rt1.c0)) THEN rt1.c2 WHEN MAX(rt1.c2, rt1.c2) THEN (((rt1.c2))>((rt1.c1))) WHEN (((rt1.c1))>((vt0.c0))) THEN rt1.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (rt1.c1))  WHEN (~ (rt1.c0)) THEN rt1.c2 WHEN MAX(rt1.c2, rt1.c2) THEN (((rt1.c2))>((rt1.c1))) WHEN (((rt1.c1))>((vt0.c0))) THEN rt1.c0 END) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CASE (+ (rt1.c1))  WHEN (~ (rt1.c0)) THEN rt1.c2 WHEN MAX(rt1.c2, rt1.c2) THEN (((rt1.c2))>((rt1.c1))) WHEN (((rt1.c1))>((vt0.c0))) THEN rt1.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (rt1.c1))  WHEN (~ (rt1.c0)) THEN rt1.c2 WHEN MAX(rt1.c2, rt1.c2) THEN (((rt1.c2))>((rt1.c1))) WHEN (((rt1.c1))>((vt0.c0))) THEN rt1.c0 END) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CASE (+ (rt1.c1))  WHEN (~ (rt1.c0)) THEN rt1.c2 WHEN MAX(rt1.c2, rt1.c2) THEN (((rt1.c2))>((rt1.c1))) WHEN (((rt1.c1))>((vt0.c0))) THEN rt1.c0 END);
SELECT ALL COUNT(*) FROM v0, vt0, vt1 NOT INDEXED, rt1 WHERE (CASE CASE v0.c3  WHEN v0.c2 THEN rt1.c1 WHEN v0.c4 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 ELSE v0.c4 END  WHEN (((v0.c1))<((v0.c1))) THEN ((v0.c3)IS NOT(rt1.c2)) ELSE rt1.c0 END) ORDER BY (x'' IN (((v0.c4) NOT BETWEEN (rt1.c2) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE v0.c3  WHEN v0.c2 THEN rt1.c1 WHEN v0.c4 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 ELSE v0.c4 END  WHEN (((v0.c1))<((v0.c1))) THEN ((v0.c3)IS NOT(rt1.c2)) ELSE rt1.c0 END) IS TRUE)  as count FROM v0, vt0 NOT INDEXED, vt1, rt1 ORDER BY (x'' IN (((v0.c4) NOT BETWEEN (rt1.c2) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM v0, vt0, vt1 NOT INDEXED, rt1 WHERE (CASE CASE v0.c3  WHEN v0.c2 THEN rt1.c1 WHEN v0.c4 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 ELSE v0.c4 END  WHEN (((v0.c1))<((v0.c1))) THEN ((v0.c3)IS NOT(rt1.c2)) ELSE rt1.c0 END) ORDER BY (x'' IN (((v0.c4) NOT BETWEEN (rt1.c2) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE v0.c3  WHEN v0.c2 THEN rt1.c1 WHEN v0.c4 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 ELSE v0.c4 END  WHEN (((v0.c1))<((v0.c1))) THEN ((v0.c3)IS NOT(rt1.c2)) ELSE rt1.c0 END) IS TRUE)  as count FROM v0, vt0 NOT INDEXED, vt1, rt1 ORDER BY (x'' IN (((v0.c4) NOT BETWEEN (rt1.c2) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM v0, vt0, vt1 NOT INDEXED, rt1 WHERE (CASE CASE v0.c3  WHEN v0.c2 THEN rt1.c1 WHEN v0.c4 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 ELSE v0.c4 END  WHEN (((v0.c1))<((v0.c1))) THEN ((v0.c3)IS NOT(rt1.c2)) ELSE rt1.c0 END) ORDER BY (x'' IN (((v0.c4) NOT BETWEEN (rt1.c2) AND (vt1.c0))));
SELECT COUNT(*) FROM v0, vt0 WHERE (((v0.c1)>>(v0.c4)) COLLATE NOCASE) ORDER BY v0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1)>>(v0.c4)) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c2  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((v0.c1)>>(v0.c4)) COLLATE NOCASE) ORDER BY v0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1)>>(v0.c4)) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c2  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((v0.c1)>>(v0.c4)) COLLATE NOCASE) ORDER BY v0.c2  NULLS LAST;
SELECT * FROM rt1, vt1, vt0 WHERE (((HEX(vt1.c0))+(((vt1.c0)LIKE(rt1.c2))))) ORDER BY ((((vt1.c0)<(rt1.c0)))OR((((rt1.c1))>=((rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((HEX(vt1.c0))+(((vt1.c0)LIKE(rt1.c2))))) IS TRUE)  as count FROM rt1, vt1, vt0 ORDER BY ((((vt1.c0)<(rt1.c0)))OR((((rt1.c1))>=((rt1.c1))))));
SELECT * FROM rt1, vt1, vt0 WHERE (((HEX(vt1.c0))+(((vt1.c0)LIKE(rt1.c2))))) ORDER BY ((((vt1.c0)<(rt1.c0)))OR((((rt1.c1))>=((rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((HEX(vt1.c0))+(((vt1.c0)LIKE(rt1.c2))))) IS TRUE)  as count FROM rt1, vt1, vt0 ORDER BY ((((vt1.c0)<(rt1.c0)))OR((((rt1.c1))>=((rt1.c1))))));
SELECT * FROM rt1, vt1, vt0 WHERE (((HEX(vt1.c0))+(((vt1.c0)LIKE(rt1.c2))))) ORDER BY ((((vt1.c0)<(rt1.c0)))OR((((rt1.c1))>=((rt1.c1)))));
SELECT ALL * FROM vt1, rt1, vt0 INNER JOIN v0 ON DATE(((v0.c1) IS TRUE), CAST(rt1.c0 AS TEXT), ((v0.c0) NOT BETWEEN (rt1.c0) AND (v0.c1))) WHERE (((v0.c4) NOTNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((v0.c4) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt1, vt0 INNER JOIN v0 ON DATE(((v0.c1) IS TRUE), CAST(rt1.c0 AS TEXT), ((v0.c0) NOT BETWEEN (rt1.c0) AND (v0.c1))));
SELECT ALL * FROM vt1, rt1, vt0 INNER JOIN v0 ON DATE(((v0.c1) IS TRUE), CAST(rt1.c0 AS TEXT), ((v0.c0) NOT BETWEEN (rt1.c0) AND (v0.c1))) WHERE (((v0.c4) NOTNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((v0.c4) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt1, vt0 INNER JOIN v0 ON DATE(((v0.c1) IS TRUE), CAST(rt1.c0 AS TEXT), ((v0.c0) NOT BETWEEN (rt1.c0) AND (v0.c1))));
SELECT ALL * FROM vt1, rt1, vt0 INNER JOIN v0 ON DATE(((v0.c1) IS TRUE), CAST(rt1.c0 AS TEXT), ((v0.c0) NOT BETWEEN (rt1.c0) AND (v0.c1))) WHERE (((v0.c4) NOTNULL) COLLATE RTRIM);
SELECT * FROM vt1 RIGHT OUTER JOIN rt1 ON ((CASE vt0.c0  WHEN rt1.c1 THEN rt1.c2 END)IS(((NULL)AND(vt0.c0)))) INNER JOIN vt0 ON TRIM(HEX(vt1.c0)) WHERE ((CASE WHEN rt1.c0 THEN '531878437' END IN (((rt1.c2)-(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt1.c0 THEN '531878437' END IN (((rt1.c2)-(vt1.c0))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt1 ON ((CASE vt0.c0  WHEN rt1.c1 THEN rt1.c2 END)IS(((NULL)AND(vt0.c0)))) INNER JOIN vt0 ON TRIM(HEX(vt1.c0)));
SELECT * FROM vt1 RIGHT OUTER JOIN rt1 ON ((CASE vt0.c0  WHEN rt1.c1 THEN rt1.c2 END)IS(((NULL)AND(vt0.c0)))) INNER JOIN vt0 ON TRIM(HEX(vt1.c0)) WHERE ((CASE WHEN rt1.c0 THEN '531878437' END IN (((rt1.c2)-(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt1.c0 THEN '531878437' END IN (((rt1.c2)-(vt1.c0))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt1 ON ((CASE vt0.c0  WHEN rt1.c1 THEN rt1.c2 END)IS(((NULL)AND(vt0.c0)))) INNER JOIN vt0 ON TRIM(HEX(vt1.c0)));
SELECT ALL COUNT(*) FROM rt1, vt1, v0, vt0 WHERE ((~ (((v0.c2)LIKE(v0.c4))))) ORDER BY (- (v0.c2 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c2)LIKE(v0.c4))))) IS TRUE)  as count FROM rt1, vt1, v0, vt0 ORDER BY (- (v0.c2 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt1, v0, vt0 WHERE ((~ (((v0.c2)LIKE(v0.c4))))) ORDER BY (- (v0.c2 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c2)LIKE(v0.c4))))) IS TRUE)  as count FROM rt1, vt1, v0, vt0 ORDER BY (- (v0.c2 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt1, v0, vt0 WHERE ((~ (((v0.c2)LIKE(v0.c4))))) ORDER BY (- (v0.c2 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt1 ON CAST((- (rt1.c1)) AS TEXT) INNER JOIN vt0 ON COALESCE(((vt1.c0) NOTNULL), ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt1 ON CAST((- (rt1.c1)) AS TEXT) INNER JOIN vt0 ON COALESCE(((vt1.c0) NOTNULL), ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2))));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt1 ON CAST((- (rt1.c1)) AS TEXT) INNER JOIN vt0 ON COALESCE(((vt1.c0) NOTNULL), ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt1 ON CAST((- (rt1.c1)) AS TEXT) INNER JOIN vt0 ON COALESCE(((vt1.c0) NOTNULL), ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2))));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt1 ON CAST((- (rt1.c1)) AS TEXT) INNER JOIN vt0 ON COALESCE(((vt1.c0) NOTNULL), ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2))) WHERE (NULL);
SELECT ALL * FROM rt1, vt0, v0 RIGHT OUTER JOIN vt1 ON (- (x'45ce0964')) WHERE (v0.c2) ORDER BY 'mWÎßñ''F', CHAR(((rt1.c2) NOT BETWEEN (v0.c1) AND (rt1.c0))), '5f3'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM rt1, vt0, v0 RIGHT OUTER JOIN vt1 ON (- (x'45ce0964')) ORDER BY 'mWÎßñ''F', CHAR(((rt1.c2) NOT BETWEEN (v0.c1) AND (rt1.c0))), '5f3'  NULLS FIRST);
SELECT ALL * FROM rt1, vt0, v0 RIGHT OUTER JOIN vt1 ON (- (x'45ce0964')) WHERE (v0.c2) ORDER BY 'mWÎßñ''F', CHAR(((rt1.c2) NOT BETWEEN (v0.c1) AND (rt1.c0))), '5f3'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM rt1, vt0, v0 RIGHT OUTER JOIN vt1 ON (- (x'45ce0964')) ORDER BY 'mWÎßñ''F', CHAR(((rt1.c2) NOT BETWEEN (v0.c1) AND (rt1.c0))), '5f3'  NULLS FIRST);
SELECT ALL * FROM rt1, vt0, v0 RIGHT OUTER JOIN vt1 ON (- (x'45ce0964')) WHERE (v0.c2) ORDER BY 'mWÎßñ''F', CHAR(((rt1.c2) NOT BETWEEN (v0.c1) AND (rt1.c0))), '5f3'  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0, rt1 NATURAL JOIN vt1 WHERE ((((- (v0.c1)))-(((rt1.c0) BETWEEN (v0.c2) AND (v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c1)))-(((rt1.c0) BETWEEN (v0.c2) AND (v0.c2))))) IS TRUE)  as count FROM vt0, v0, rt1 NATURAL JOIN vt1);
SELECT COUNT(*) FROM vt0, v0, rt1 NATURAL JOIN vt1 WHERE ((((- (v0.c1)))-(((rt1.c0) BETWEEN (v0.c2) AND (v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c1)))-(((rt1.c0) BETWEEN (v0.c2) AND (v0.c2))))) IS TRUE)  as count FROM vt0, v0, rt1 NATURAL JOIN vt1);
SELECT COUNT(*) FROM vt0, v0, rt1 NATURAL JOIN vt1 WHERE ((((- (v0.c1)))-(((rt1.c0) BETWEEN (v0.c2) AND (v0.c2)))));
SELECT COUNT(*) FROM vt0, v0, vt1, rt1 WHERE (((((rt1.c0) NOT NULL))>>((((vt0.c0))>((rt1.c1)))))) ORDER BY (((v0.c2 IN ()))LIKE(((vt1.c0)&(v0.c2)))) ASC, ((ROUND(rt1.c2, vt0.c0))OR('1661852469')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) NOT NULL))>>((((vt0.c0))>((rt1.c1)))))) IS TRUE)  as count FROM vt0, v0, vt1, rt1 ORDER BY (((v0.c2 IN ()))LIKE(((vt1.c0)&(v0.c2)))) ASC, ((ROUND(rt1.c2, vt0.c0))OR('1661852469')) ASC);
SELECT COUNT(*) FROM vt0, v0, vt1, rt1 WHERE (((((rt1.c0) NOT NULL))>>((((vt0.c0))>((rt1.c1)))))) ORDER BY (((v0.c2 IN ()))LIKE(((vt1.c0)&(v0.c2)))) ASC, ((ROUND(rt1.c2, vt0.c0))OR('1661852469')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) NOT NULL))>>((((vt0.c0))>((rt1.c1)))))) IS TRUE)  as count FROM vt0, v0, vt1, rt1 ORDER BY (((v0.c2 IN ()))LIKE(((vt1.c0)&(v0.c2)))) ASC, ((ROUND(rt1.c2, vt0.c0))OR('1661852469')) ASC);
SELECT COUNT(*) FROM vt0, v0, vt1, rt1 WHERE (((((rt1.c0) NOT NULL))>>((((vt0.c0))>((rt1.c1)))))) ORDER BY (((v0.c2 IN ()))LIKE(((vt1.c0)&(v0.c2)))) ASC, ((ROUND(rt1.c2, vt0.c0))OR('1661852469')) ASC;
SELECT * FROM v0, vt0, rt1 WHERE ((- (LIKELY(DISTINCT vt0.c0)))) ORDER BY ((((x'') BETWEEN (vt0.c0) AND (v0.c3)))GLOB(CAST(v0.c2 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL (((- (LIKELY(DISTINCT vt0.c0)))) IS TRUE)  as count FROM v0, vt0, rt1 ORDER BY ((((x'') BETWEEN (vt0.c0) AND (v0.c3)))GLOB(CAST(v0.c2 AS INTEGER))));
SELECT * FROM v0, vt0, rt1 WHERE ((- (LIKELY(DISTINCT vt0.c0)))) ORDER BY ((((x'') BETWEEN (vt0.c0) AND (v0.c3)))GLOB(CAST(v0.c2 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL (((- (LIKELY(DISTINCT vt0.c0)))) IS TRUE)  as count FROM v0, vt0, rt1 ORDER BY ((((x'') BETWEEN (vt0.c0) AND (v0.c3)))GLOB(CAST(v0.c2 AS INTEGER))));
SELECT * FROM v0, vt0, rt1 WHERE ((- (LIKELY(DISTINCT vt0.c0)))) ORDER BY ((((x'') BETWEEN (vt0.c0) AND (v0.c3)))GLOB(CAST(v0.c2 AS INTEGER)));
SELECT ALL * FROM vt0, vt1, rt1, v0 WHERE (((CASE WHEN vt0.c0 THEN rt1.c1 ELSE v0.c0 END)+(CASE WHEN rt1.c2 THEN v0.c4 ELSE v0.c4 END)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN rt1.c1 ELSE v0.c0 END)+(CASE WHEN rt1.c2 THEN v0.c4 ELSE v0.c4 END))) IS TRUE)  as count FROM vt0, vt1, rt1, v0);
SELECT ALL * FROM vt0, vt1, rt1, v0 WHERE (((CASE WHEN vt0.c0 THEN rt1.c1 ELSE v0.c0 END)+(CASE WHEN rt1.c2 THEN v0.c4 ELSE v0.c4 END)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN rt1.c1 ELSE v0.c0 END)+(CASE WHEN rt1.c2 THEN v0.c4 ELSE v0.c4 END))) IS TRUE)  as count FROM vt0, vt1, rt1, v0);
SELECT ALL * FROM vt0, vt1, rt1, v0 WHERE (((CASE WHEN vt0.c0 THEN rt1.c1 ELSE v0.c0 END)+(CASE WHEN rt1.c2 THEN v0.c4 ELSE v0.c4 END)));
SELECT ALL * FROM vt0, rt1 WHERE (CASE CAST(vt0.c0 AS REAL)  WHEN ((x'6a6b') NOT BETWEEN (rt1.c2) AND ('-0.0')) THEN TRIM(rt1.c1) END) ORDER BY ((((')UM	>Ï¢ï') NOT BETWEEN (rt1.c2) AND (rt1.c1)))/(((vt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c0 AS REAL)  WHEN ((x'6a6b') NOT BETWEEN (rt1.c2) AND ('-0.0')) THEN TRIM(rt1.c1) END) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((')UM	>Ï¢ï') NOT BETWEEN (rt1.c2) AND (rt1.c1)))/(((vt0.c0) NOTNULL))));
SELECT ALL * FROM vt0, rt1 WHERE (CASE CAST(vt0.c0 AS REAL)  WHEN ((x'6a6b') NOT BETWEEN (rt1.c2) AND ('-0.0')) THEN TRIM(rt1.c1) END) ORDER BY ((((')UM	>Ï¢ï') NOT BETWEEN (rt1.c2) AND (rt1.c1)))/(((vt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c0 AS REAL)  WHEN ((x'6a6b') NOT BETWEEN (rt1.c2) AND ('-0.0')) THEN TRIM(rt1.c1) END) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((')UM	>Ï¢ï') NOT BETWEEN (rt1.c2) AND (rt1.c1)))/(((vt0.c0) NOTNULL))));
SELECT ALL * FROM vt0, rt1 WHERE (CASE CAST(vt0.c0 AS REAL)  WHEN ((x'6a6b') NOT BETWEEN (rt1.c2) AND ('-0.0')) THEN TRIM(rt1.c1) END) ORDER BY ((((')UM	>Ï¢ï') NOT BETWEEN (rt1.c2) AND (rt1.c1)))/(((vt0.c0) NOTNULL)));
SELECT * FROM vt0, vt1 WHERE (TRIM((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((vt1.c0 IN ()))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (TRIM((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((vt1.c0 IN ()))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (TRIM((vt1.c0 IN ())));
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (CASE WHEN json_valid(v0.c2) THEN CASE rt1.c0  WHEN rt1.c0 THEN v0.c2 WHEN rt1.c1 THEN v0.c1 WHEN rt1.c1 THEN v0.c0 ELSE rt1.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json_valid(v0.c2) THEN CASE rt1.c0  WHEN rt1.c0 THEN v0.c2 WHEN rt1.c1 THEN v0.c1 WHEN rt1.c1 THEN v0.c0 ELSE rt1.c0 END END) IS TRUE)  as count FROM v0, rt1);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (CASE WHEN json_valid(v0.c2) THEN CASE rt1.c0  WHEN rt1.c0 THEN v0.c2 WHEN rt1.c1 THEN v0.c1 WHEN rt1.c1 THEN v0.c0 ELSE rt1.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json_valid(v0.c2) THEN CASE rt1.c0  WHEN rt1.c0 THEN v0.c2 WHEN rt1.c1 THEN v0.c1 WHEN rt1.c1 THEN v0.c0 ELSE rt1.c0 END END) IS TRUE)  as count FROM v0, rt1);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (CASE WHEN json_valid(v0.c2) THEN CASE rt1.c0  WHEN rt1.c0 THEN v0.c2 WHEN rt1.c1 THEN v0.c1 WHEN rt1.c1 THEN v0.c0 ELSE rt1.c0 END END);
SELECT COUNT(*) FROM vt1, rt1 WHERE (((((rt1.c1) NOT NULL))%(((rt1.c1)IS NOT(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) NOT NULL))%(((rt1.c1)IS NOT(rt1.c1))))) IS TRUE)  as count FROM vt1, rt1);
SELECT COUNT(*) FROM vt1, rt1 WHERE (((((rt1.c1) NOT NULL))%(((rt1.c1)IS NOT(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) NOT NULL))%(((rt1.c1)IS NOT(rt1.c1))))) IS TRUE)  as count FROM vt1, rt1);
SELECT COUNT(*) FROM vt1, rt1 WHERE (((((rt1.c1) NOT NULL))%(((rt1.c1)IS NOT(rt1.c1)))));
SELECT * FROM rt1 INNER JOIN vt1 ON (((vt1.c0 IN ())) BETWEEN ((((vt1.c0, rt1.c0, vt0.c0)) NOT BETWEEN ((rt1.c2, vt0.c0, rt1.c1)) AND ((x'', '-1875008789', rt1.c2)))) AND ((- (rt1.c2)))) FULL OUTER JOIN vt0 ON ((vt0.c0 COLLATE BINARY) IS FALSE) WHERE ((((rt1.c0, 0.2041532708632291, rt1.c2, rt1.c0, vt1.c0)) BETWEEN (((~ (vt0.c0)), (- (rt1.c1)), CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 WHEN vt1.c0 THEN vt1.c0 WHEN rt1.c1 THEN -461557355 ELSE rt1.c1 END, IFNULL(rt1.c2, rt1.c1), (~ (vt1.c0)))) AND ((TYPEOF(vt0.c0), (~ (vt0.c0)), ((vt0.c0)%(rt1.c2)), TOTAL_CHANGES(), rt1.c1)))) ORDER BY LENGTH((((vt1.c0, rt1.c2, vt0.c0)) BETWEEN ((rt1.c0, rt1.c0, rt1.c2)) AND ((vt0.c0, rt1.c1, vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c0, 0.2041532708632291, rt1.c2, rt1.c0, vt1.c0)) BETWEEN (((~ (vt0.c0)), (- (rt1.c1)), CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 WHEN vt1.c0 THEN vt1.c0 WHEN rt1.c1 THEN -461557355 ELSE rt1.c1 END, IFNULL(rt1.c2, rt1.c1), (~ (vt1.c0)))) AND ((TYPEOF(vt0.c0), (~ (vt0.c0)), ((vt0.c0)%(rt1.c2)), TOTAL_CHANGES(), rt1.c1)))) IS TRUE)  as count FROM rt1 INNER JOIN vt1 ON (((vt1.c0 IN ())) BETWEEN ((((vt1.c0, rt1.c0, vt0.c0)) NOT BETWEEN ((rt1.c2, vt0.c0, rt1.c1)) AND ((x'', '-1875008789', rt1.c2)))) AND ((- (rt1.c2)))) FULL OUTER JOIN vt0 ON ((vt0.c0 COLLATE BINARY) IS FALSE) ORDER BY LENGTH((((vt1.c0, rt1.c2, vt0.c0)) BETWEEN ((rt1.c0, rt1.c0, rt1.c2)) AND ((vt0.c0, rt1.c1, vt0.c0)))) DESC);
SELECT * FROM rt1 INNER JOIN vt1 ON (((vt1.c0 IN ())) BETWEEN ((((vt1.c0, rt1.c0, vt0.c0)) NOT BETWEEN ((rt1.c2, vt0.c0, rt1.c1)) AND ((x'', '-1875008789', rt1.c2)))) AND ((- (rt1.c2)))) FULL OUTER JOIN vt0 ON ((vt0.c0 COLLATE BINARY) IS FALSE) WHERE ((((rt1.c0, 0.2041532708632291, rt1.c2, rt1.c0, vt1.c0)) BETWEEN (((~ (vt0.c0)), (- (rt1.c1)), CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 WHEN vt1.c0 THEN vt1.c0 WHEN rt1.c1 THEN -461557355 ELSE rt1.c1 END, IFNULL(rt1.c2, rt1.c1), (~ (vt1.c0)))) AND ((TYPEOF(vt0.c0), (~ (vt0.c0)), ((vt0.c0)%(rt1.c2)), TOTAL_CHANGES(), rt1.c1)))) ORDER BY LENGTH((((vt1.c0, rt1.c2, vt0.c0)) BETWEEN ((rt1.c0, rt1.c0, rt1.c2)) AND ((vt0.c0, rt1.c1, vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c0, 0.2041532708632291, rt1.c2, rt1.c0, vt1.c0)) BETWEEN (((~ (vt0.c0)), (- (rt1.c1)), CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 WHEN vt1.c0 THEN vt1.c0 WHEN rt1.c1 THEN -461557355 ELSE rt1.c1 END, IFNULL(rt1.c2, rt1.c1), (~ (vt1.c0)))) AND ((TYPEOF(vt0.c0), (~ (vt0.c0)), ((vt0.c0)%(rt1.c2)), TOTAL_CHANGES(), rt1.c1)))) IS TRUE)  as count FROM rt1 INNER JOIN vt1 ON (((vt1.c0 IN ())) BETWEEN ((((vt1.c0, rt1.c0, vt0.c0)) NOT BETWEEN ((rt1.c2, vt0.c0, rt1.c1)) AND ((x'', '-1875008789', rt1.c2)))) AND ((- (rt1.c2)))) FULL OUTER JOIN vt0 ON ((vt0.c0 COLLATE BINARY) IS FALSE) ORDER BY LENGTH((((vt1.c0, rt1.c2, vt0.c0)) BETWEEN ((rt1.c0, rt1.c0, rt1.c2)) AND ((vt0.c0, rt1.c1, vt0.c0)))) DESC);
SELECT * FROM v0, vt1, vt0 WHERE (CASE PRINTF(v0.c2, v0.c0, vt1.c0)  WHEN '#Ë∫à' THEN ((v0.c4)||(vt0.c0)) WHEN (NOT (-86138862)) THEN (((v0.c2)) NOT BETWEEN ((v0.c4)) AND ((v0.c0))) WHEN (v0.c1 IN ()) THEN (((vt1.c0, vt0.c0, v0.c4)) BETWEEN ((v0.c4, v0.c1, v0.c4)) AND ((v0.c2, v0.c4, v0.c1))) ELSE TYPEOF(v0.c3) END) ORDER BY ((((x'')OR(v0.c0)))AND((((v0.c4)) BETWEEN ((vt0.c0)) AND ((v0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE PRINTF(v0.c2, v0.c0, vt1.c0)  WHEN '#Ë∫à' THEN ((v0.c4)||(vt0.c0)) WHEN (NOT (-86138862)) THEN (((v0.c2)) NOT BETWEEN ((v0.c4)) AND ((v0.c0))) WHEN (v0.c1 IN ()) THEN (((vt1.c0, vt0.c0, v0.c4)) BETWEEN ((v0.c4, v0.c1, v0.c4)) AND ((v0.c2, v0.c4, v0.c1))) ELSE TYPEOF(v0.c3) END) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY ((((x'')OR(v0.c0)))AND((((v0.c4)) BETWEEN ((vt0.c0)) AND ((v0.c1))))) ASC);
SELECT * FROM v0, vt1, vt0 WHERE (CASE PRINTF(v0.c2, v0.c0, vt1.c0)  WHEN '#Ë∫à' THEN ((v0.c4)||(vt0.c0)) WHEN (NOT (-86138862)) THEN (((v0.c2)) NOT BETWEEN ((v0.c4)) AND ((v0.c0))) WHEN (v0.c1 IN ()) THEN (((vt1.c0, vt0.c0, v0.c4)) BETWEEN ((v0.c4, v0.c1, v0.c4)) AND ((v0.c2, v0.c4, v0.c1))) ELSE TYPEOF(v0.c3) END) ORDER BY ((((x'')OR(v0.c0)))AND((((v0.c4)) BETWEEN ((vt0.c0)) AND ((v0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE PRINTF(v0.c2, v0.c0, vt1.c0)  WHEN '#Ë∫à' THEN ((v0.c4)||(vt0.c0)) WHEN (NOT (-86138862)) THEN (((v0.c2)) NOT BETWEEN ((v0.c4)) AND ((v0.c0))) WHEN (v0.c1 IN ()) THEN (((vt1.c0, vt0.c0, v0.c4)) BETWEEN ((v0.c4, v0.c1, v0.c4)) AND ((v0.c2, v0.c4, v0.c1))) ELSE TYPEOF(v0.c3) END) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY ((((x'')OR(v0.c0)))AND((((v0.c4)) BETWEEN ((vt0.c0)) AND ((v0.c1))))) ASC);
SELECT * FROM v0, vt1, vt0 WHERE (CASE PRINTF(v0.c2, v0.c0, vt1.c0)  WHEN '#Ë∫à' THEN ((v0.c4)||(vt0.c0)) WHEN (NOT (-86138862)) THEN (((v0.c2)) NOT BETWEEN ((v0.c4)) AND ((v0.c0))) WHEN (v0.c1 IN ()) THEN (((vt1.c0, vt0.c0, v0.c4)) BETWEEN ((v0.c4, v0.c1, v0.c4)) AND ((v0.c2, v0.c4, v0.c1))) ELSE TYPEOF(v0.c3) END) ORDER BY ((((x'')OR(v0.c0)))AND((((v0.c4)) BETWEEN ((vt0.c0)) AND ((v0.c1))))) ASC;
SELECT COUNT(*) FROM vt1, vt0, v0 RIGHT OUTER JOIN rt1 ON (((((rt1.c0)) BETWEEN ((v0.c4)) AND ((vt0.c0)))) BETWEEN (LIKELIHOOD(990588811, 0.4080214044811379)) AND (rt1.c0)) WHERE ((((vt1.c0) ISNULL) IN (((rt1.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) ISNULL) IN (((rt1.c2) ISNULL)))) IS TRUE)  as count FROM vt1, vt0, v0 RIGHT OUTER JOIN rt1 ON (((((rt1.c0)) BETWEEN ((v0.c4)) AND ((vt0.c0)))) BETWEEN (LIKELIHOOD(990588811, 0.4080214044811379)) AND (rt1.c0)));
SELECT COUNT(*) FROM vt1, vt0, v0 RIGHT OUTER JOIN rt1 ON (((((rt1.c0)) BETWEEN ((v0.c4)) AND ((vt0.c0)))) BETWEEN (LIKELIHOOD(990588811, 0.4080214044811379)) AND (rt1.c0)) WHERE ((((vt1.c0) ISNULL) IN (((rt1.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) ISNULL) IN (((rt1.c2) ISNULL)))) IS TRUE)  as count FROM vt1, vt0, v0 RIGHT OUTER JOIN rt1 ON (((((rt1.c0)) BETWEEN ((v0.c4)) AND ((vt0.c0)))) BETWEEN (LIKELIHOOD(990588811, 0.4080214044811379)) AND (rt1.c0)));
SELECT COUNT(*) FROM vt1, vt0, v0 RIGHT OUTER JOIN rt1 ON (((((rt1.c0)) BETWEEN ((v0.c4)) AND ((vt0.c0)))) BETWEEN (LIKELIHOOD(990588811, 0.4080214044811379)) AND (rt1.c0)) WHERE ((((vt1.c0) ISNULL) IN (((rt1.c2) ISNULL))));
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)GLOB(((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((NOT (vt0.c0)))<(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-700046119' ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)GLOB(((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0)))<(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-700046119' ELSE vt0.c0 END)));
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)GLOB(((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((NOT (vt0.c0)))<(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-700046119' ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)GLOB(((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0)))<(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-700046119' ELSE vt0.c0 END)));
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)GLOB(((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((NOT (vt0.c0)))<(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-700046119' ELSE vt0.c0 END));
SELECT ALL COUNT(*) FROM rt1 WHERE (ABS(DISTINCT rt1.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT rt1.c1 COLLATE NOCASE)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (ABS(DISTINCT rt1.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT rt1.c1 COLLATE NOCASE)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (ABS(DISTINCT rt1.c1 COLLATE NOCASE));
SELECT COUNT(*) FROM v0 WHERE ((DATETIME(v0.c4, v0.c4, v0.c1) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((DATETIME(v0.c4, v0.c4, v0.c1) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((DATETIME(v0.c4, v0.c4, v0.c1) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((DATETIME(v0.c4, v0.c4, v0.c1) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((DATETIME(v0.c4, v0.c4, v0.c1) IN ()));
SELECT ALL COUNT(*) FROM vt0, vt1, v0, rt1 WHERE (CASE LIKELIHOOD(vt0.c0, 0.3297850759730153)  WHEN (((vt0.c0, v0.c0, v0.c3))>((v0.c4, v0.c0, 0.8389404207122512))) THEN (((rt1.c2, vt0.c0, vt1.c0))<=((rt1.c0, v0.c1, v0.c0))) WHEN (vt0.c0 IN ()) THEN ((rt1.c1)&(v0.c0)) WHEN CASE WHEN v0.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 END THEN (('949380026')IS NOT(v0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE LIKELIHOOD(vt0.c0, 0.3297850759730153)  WHEN (((vt0.c0, v0.c0, v0.c3))>((v0.c4, v0.c0, 0.8389404207122512))) THEN (((rt1.c2, vt0.c0, vt1.c0))<=((rt1.c0, v0.c1, v0.c0))) WHEN (vt0.c0 IN ()) THEN ((rt1.c1)&(v0.c0)) WHEN CASE WHEN v0.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 END THEN (('949380026')IS NOT(v0.c1)) END) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1, v0, rt1);
SELECT ALL COUNT(*) FROM vt0, vt1, v0, rt1 WHERE (CASE LIKELIHOOD(vt0.c0, 0.3297850759730153)  WHEN (((vt0.c0, v0.c0, v0.c3))>((v0.c4, v0.c0, 0.8389404207122512))) THEN (((rt1.c2, vt0.c0, vt1.c0))<=((rt1.c0, v0.c1, v0.c0))) WHEN (vt0.c0 IN ()) THEN ((rt1.c1)&(v0.c0)) WHEN CASE WHEN v0.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 END THEN (('949380026')IS NOT(v0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE LIKELIHOOD(vt0.c0, 0.3297850759730153)  WHEN (((vt0.c0, v0.c0, v0.c3))>((v0.c4, v0.c0, 0.8389404207122512))) THEN (((rt1.c2, vt0.c0, vt1.c0))<=((rt1.c0, v0.c1, v0.c0))) WHEN (vt0.c0 IN ()) THEN ((rt1.c1)&(v0.c0)) WHEN CASE WHEN v0.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 END THEN (('949380026')IS NOT(v0.c1)) END) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1, v0, rt1);
SELECT ALL COUNT(*) FROM vt0, vt1, v0, rt1 WHERE (CASE LIKELIHOOD(vt0.c0, 0.3297850759730153)  WHEN (((vt0.c0, v0.c0, v0.c3))>((v0.c4, v0.c0, 0.8389404207122512))) THEN (((rt1.c2, vt0.c0, vt1.c0))<=((rt1.c0, v0.c1, v0.c0))) WHEN (vt0.c0 IN ()) THEN ((rt1.c1)&(v0.c0)) WHEN CASE WHEN v0.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 END THEN (('949380026')IS NOT(v0.c1)) END);
SELECT * FROM rt1, vt1, vt0, v0 WHERE (((json_valid(vt1.c0))>>(((v0.c1) BETWEEN (x'4db8') AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((json_valid(vt1.c0))>>(((v0.c1) BETWEEN (x'4db8') AND (vt0.c0))))) IS TRUE)  as count FROM rt1, vt1, vt0, v0);
SELECT * FROM rt1, vt1, vt0, v0 WHERE (((json_valid(vt1.c0))>>(((v0.c1) BETWEEN (x'4db8') AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((json_valid(vt1.c0))>>(((v0.c1) BETWEEN (x'4db8') AND (vt0.c0))))) IS TRUE)  as count FROM rt1, vt1, vt0, v0);
SELECT * FROM rt1, vt1, vt0, v0 WHERE (((json_valid(vt1.c0))>>(((v0.c1) BETWEEN (x'4db8') AND (vt0.c0)))));
SELECT * FROM rt1 WHERE (CAST(rt1.c2 AS REAL)) ORDER BY ((CASE rt1.c1  WHEN x'546c' THEN rt1.c0 END)*(rt1.c2))  NULLS FIRST, ((+ (rt1.c0)) IN ((rt1.c0 IN ()), CAST(rt1.c1 AS INTEGER))) ASC  NULLS LAST, ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c2 AS REAL)) IS TRUE)  as count FROM rt1 ORDER BY ((CASE rt1.c1  WHEN x'546c' THEN rt1.c0 END)*(rt1.c2))  NULLS FIRST, ((+ (rt1.c0)) IN ((rt1.c0 IN ()), CAST(rt1.c1 AS INTEGER))) ASC  NULLS LAST, ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)) COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM rt1 WHERE (CAST(rt1.c2 AS REAL)) ORDER BY ((CASE rt1.c1  WHEN x'546c' THEN rt1.c0 END)*(rt1.c2))  NULLS FIRST, ((+ (rt1.c0)) IN ((rt1.c0 IN ()), CAST(rt1.c1 AS INTEGER))) ASC  NULLS LAST, ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c2 AS REAL)) IS TRUE)  as count FROM rt1 ORDER BY ((CASE rt1.c1  WHEN x'546c' THEN rt1.c0 END)*(rt1.c2))  NULLS FIRST, ((+ (rt1.c0)) IN ((rt1.c0 IN ()), CAST(rt1.c1 AS INTEGER))) ASC  NULLS LAST, ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)) COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM rt1 WHERE (CAST(rt1.c2 AS REAL)) ORDER BY ((CASE rt1.c1  WHEN x'546c' THEN rt1.c0 END)*(rt1.c2))  NULLS FIRST, ((+ (rt1.c0)) IN ((rt1.c0 IN ()), CAST(rt1.c1 AS INTEGER))) ASC  NULLS LAST, ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)) COLLATE RTRIM ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (rtreenode(HEX(rt1.c0), CAST(rt1.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((rtreenode(HEX(rt1.c0), CAST(rt1.c1 AS INTEGER))) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (rtreenode(HEX(rt1.c0), CAST(rt1.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((rtreenode(HEX(rt1.c0), CAST(rt1.c1 AS INTEGER))) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (rtreenode(HEX(rt1.c0), CAST(rt1.c1 AS INTEGER)));
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON ((((vt1.c0)GLOB(rt1.c0))) NOTNULL) RIGHT OUTER JOIN vt1 ON ((CASE WHEN v0.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN v0.c1 THEN v0.c0 END)==((+ (v0.c1)))) RIGHT OUTER JOIN v0 ON LIKELIHOOD((+ (rt1.c2)), 0.0333345753268518) WHERE (((((TYPEOF(v0.c0))AND(CASE rt1.c0  WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c2 WHEN v0.c2 THEN '1396088074' END)))OR(((v0.c2)>=(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((TYPEOF(v0.c0))AND(CASE rt1.c0  WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c2 WHEN v0.c2 THEN '1396088074' END)))OR(((v0.c2)>=(v0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON ((((vt1.c0)GLOB(rt1.c0))) NOTNULL) RIGHT OUTER JOIN vt1 ON ((CASE WHEN v0.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN v0.c1 THEN v0.c0 END)=((+ (v0.c1)))) RIGHT OUTER JOIN v0 ON LIKELIHOOD((+ (rt1.c2)), 0.0333345753268518));
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON ((((vt1.c0)GLOB(rt1.c0))) NOTNULL) RIGHT OUTER JOIN vt1 ON ((CASE WHEN v0.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN v0.c1 THEN v0.c0 END)==((+ (v0.c1)))) RIGHT OUTER JOIN v0 ON LIKELIHOOD((+ (rt1.c2)), 0.0333345753268518) WHERE (((((TYPEOF(v0.c0))AND(CASE rt1.c0  WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c2 WHEN v0.c2 THEN '1396088074' END)))OR(((v0.c2)>=(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((TYPEOF(v0.c0))AND(CASE rt1.c0  WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c2 WHEN v0.c2 THEN '1396088074' END)))OR(((v0.c2)>=(v0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON ((((vt1.c0)GLOB(rt1.c0))) NOTNULL) RIGHT OUTER JOIN vt1 ON ((CASE WHEN v0.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN v0.c1 THEN v0.c0 END)=((+ (v0.c1)))) RIGHT OUTER JOIN v0 ON LIKELIHOOD((+ (rt1.c2)), 0.0333345753268518));
SELECT ALL * FROM v0 WHERE (v0.c3);
SELECT SUM(count) FROM (SELECT ALL ((v0.c3) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c3);
SELECT SUM(count) FROM (SELECT ALL ((v0.c3) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c3);
SELECT COUNT(*) FROM vt0 WHERE (0.4243271716269631);
SELECT SUM(count) FROM (SELECT ALL ((0.4243271716269631) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0.4243271716269631);
SELECT SUM(count) FROM (SELECT ALL ((0.4243271716269631) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0.4243271716269631);
SELECT COUNT(*) FROM vt0, vt1 CROSS JOIN v0 ON ((v0.c1 COLLATE BINARY)&(CAST(vt0.c0 AS INTEGER))) WHERE (((((vt0.c0)>(v0.c3))) NOT BETWEEN (CAST(v0.c4 AS BLOB)) AND (((vt1.c0) NOT BETWEEN (v0.c1) AND (v0.c2))))) ORDER BY rtreenode(((v0.c1)OR(v0.c4)), vt0.c0)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>(v0.c3))) NOT BETWEEN (CAST(v0.c4 AS BLOB)) AND (((vt1.c0) NOT BETWEEN (v0.c1) AND (v0.c2))))) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN v0 ON ((v0.c1 COLLATE BINARY)&(CAST(vt0.c0 AS INTEGER))) ORDER BY rtreenode(((v0.c1)OR(v0.c4)), vt0.c0)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 CROSS JOIN v0 ON ((v0.c1 COLLATE BINARY)&(CAST(vt0.c0 AS INTEGER))) WHERE (((((vt0.c0)>(v0.c3))) NOT BETWEEN (CAST(v0.c4 AS BLOB)) AND (((vt1.c0) NOT BETWEEN (v0.c1) AND (v0.c2))))) ORDER BY rtreenode(((v0.c1)OR(v0.c4)), vt0.c0)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>(v0.c3))) NOT BETWEEN (CAST(v0.c4 AS BLOB)) AND (((vt1.c0) NOT BETWEEN (v0.c1) AND (v0.c2))))) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN v0 ON ((v0.c1 COLLATE BINARY)&(CAST(vt0.c0 AS INTEGER))) ORDER BY rtreenode(((v0.c1)OR(v0.c4)), vt0.c0)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 CROSS JOIN v0 ON ((v0.c1 COLLATE BINARY)&(CAST(vt0.c0 AS INTEGER))) WHERE (((((vt0.c0)>(v0.c3))) NOT BETWEEN (CAST(v0.c4 AS BLOB)) AND (((vt1.c0) NOT BETWEEN (v0.c1) AND (v0.c2))))) ORDER BY rtreenode(((v0.c1)OR(v0.c4)), vt0.c0)  NULLS FIRST;
SELECT * FROM vt1 WHERE (((TRIM(vt1.c0)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(vt1.c0)) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((TRIM(vt1.c0)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(vt1.c0)) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((TRIM(vt1.c0)) ISNULL));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON ((((v0.c3) BETWEEN (vt1.c0) AND (v0.c2)))||(((vt0.c0)&(v0.c2)))) LEFT OUTER JOIN v0 ON CASE ((rt1.c2) IS TRUE)  WHEN ((rt1.c1) BETWEEN (v0.c3) AND (v0.c0)) THEN JULIANDAY(rt1.c2, x'8621', rt1.c0, rt1.c1, v0.c1) WHEN ((rt1.c1) IS TRUE) THEN ((vt1.c0)+(rt1.c0)) WHEN (((rt1.c1))<>((rt1.c0))) THEN rt1.c2 COLLATE NOCASE END CROSS JOIN vt1 ON ((((v0.c2) NOT BETWEEN (v0.c0) AND (vt1.c0)))GLOB(v0.c1)) WHERE ((((NOT (v0.c2)))OR((+ (v0.c4)))));
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c2)))OR((+ (v0.c4))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON ((((v0.c3) BETWEEN (vt1.c0) AND (v0.c2)))||(((vt0.c0)&(v0.c2)))) LEFT OUTER JOIN v0 ON CASE ((rt1.c2) IS TRUE)  WHEN ((rt1.c1) BETWEEN (v0.c3) AND (v0.c0)) THEN JULIANDAY(rt1.c2, x'8621', rt1.c0, rt1.c1, v0.c1) WHEN ((rt1.c1) IS TRUE) THEN ((vt1.c0)+(rt1.c0)) WHEN (((rt1.c1))!=((rt1.c0))) THEN rt1.c2 COLLATE NOCASE END CROSS JOIN vt1 ON ((((v0.c2) NOT BETWEEN (v0.c0) AND (vt1.c0)))GLOB(v0.c1)));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON ((((v0.c3) BETWEEN (vt1.c0) AND (v0.c2)))||(((vt0.c0)&(v0.c2)))) LEFT OUTER JOIN v0 ON CASE ((rt1.c2) IS TRUE)  WHEN ((rt1.c1) BETWEEN (v0.c3) AND (v0.c0)) THEN JULIANDAY(rt1.c2, x'8621', rt1.c0, rt1.c1, v0.c1) WHEN ((rt1.c1) IS TRUE) THEN ((vt1.c0)+(rt1.c0)) WHEN (((rt1.c1))<>((rt1.c0))) THEN rt1.c2 COLLATE NOCASE END CROSS JOIN vt1 ON ((((v0.c2) NOT BETWEEN (v0.c0) AND (vt1.c0)))GLOB(v0.c1)) WHERE ((((NOT (v0.c2)))OR((+ (v0.c4)))));
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c2)))OR((+ (v0.c4))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON ((((v0.c3) BETWEEN (vt1.c0) AND (v0.c2)))||(((vt0.c0)&(v0.c2)))) LEFT OUTER JOIN v0 ON CASE ((rt1.c2) IS TRUE)  WHEN ((rt1.c1) BETWEEN (v0.c3) AND (v0.c0)) THEN JULIANDAY(rt1.c2, x'8621', rt1.c0, rt1.c1, v0.c1) WHEN ((rt1.c1) IS TRUE) THEN ((vt1.c0)+(rt1.c0)) WHEN (((rt1.c1))!=((rt1.c0))) THEN rt1.c2 COLLATE NOCASE END CROSS JOIN vt1 ON ((((v0.c2) NOT BETWEEN (v0.c0) AND (vt1.c0)))GLOB(v0.c1)));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (((NOT (v0.c2)))>>(v0.c2)) FULL OUTER JOIN vt1 ON ((CAST(v0.c3 AS TEXT)) BETWEEN (((vt1.c0) NOTNULL)) AND (((v0.c1) ISNULL))) WHERE (v0.c3) ORDER BY (((+ (vt0.c0)))<=(((v0.c4) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((v0.c3) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((NOT (v0.c2)))>>(v0.c2)) FULL OUTER JOIN vt1 ON ((CAST(v0.c3 AS TEXT)) BETWEEN (((vt1.c0) NOTNULL)) AND (((v0.c1) ISNULL))) ORDER BY (((+ (vt0.c0)))<=(((v0.c4) IS TRUE))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (((NOT (v0.c2)))>>(v0.c2)) FULL OUTER JOIN vt1 ON ((CAST(v0.c3 AS TEXT)) BETWEEN (((vt1.c0) NOTNULL)) AND (((v0.c1) ISNULL))) WHERE (v0.c3) ORDER BY (((+ (vt0.c0)))<=(((v0.c4) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((v0.c3) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((NOT (v0.c2)))>>(v0.c2)) FULL OUTER JOIN vt1 ON ((CAST(v0.c3 AS TEXT)) BETWEEN (((vt1.c0) NOTNULL)) AND (((v0.c1) ISNULL))) ORDER BY (((+ (vt0.c0)))<=(((v0.c4) IS TRUE))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (((NOT (v0.c2)))>>(v0.c2)) FULL OUTER JOIN vt1 ON ((CAST(v0.c3 AS TEXT)) BETWEEN (((vt1.c0) NOTNULL)) AND (((v0.c1) ISNULL))) WHERE (v0.c3) ORDER BY (((+ (vt0.c0)))<=(((v0.c4) IS TRUE)));
SELECT * FROM v0, vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT * FROM v0, vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT * FROM v0, vt1, vt0 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE (((((v0.c2)%(vt1.c0)))LIKE(CAST(v0.c3 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((v0.c2)%(vt1.c0)))LIKE(CAST(v0.c3 AS TEXT)))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE (((((v0.c2)%(vt1.c0)))LIKE(CAST(v0.c3 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((v0.c2)%(vt1.c0)))LIKE(CAST(v0.c3 AS TEXT)))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE (((((v0.c2)%(vt1.c0)))LIKE(CAST(v0.c3 AS TEXT))));
SELECT COUNT(*) FROM rt1, v0 CROSS JOIN vt1 ON ((((v0.c3) NOT BETWEEN (vt0.c0) AND (vt1.c0)))>>((~ (v0.c4)))) CROSS JOIN vt0 ON (+ (vt0.c0)) WHERE (CAST(LIKE(vt0.c0, -1034784541, 'D') AS BLOB)) ORDER BY CAST((NOT (vt0.c0)) AS REAL)  NULLS FIRST, x'' DESC;
SELECT SUM(count) FROM (SELECT ((CAST(LIKE(vt0.c0, -1034784541, 'D') AS BLOB)) IS TRUE)  as count FROM rt1, v0 CROSS JOIN vt1 ON ((((v0.c3) NOT BETWEEN (vt0.c0) AND (vt1.c0)))>>((~ (v0.c4)))) CROSS JOIN vt0 ON (+ (vt0.c0)) ORDER BY CAST((NOT (vt0.c0)) AS REAL)  NULLS FIRST, x'' DESC);
SELECT COUNT(*) FROM rt1, v0 CROSS JOIN vt1 ON ((((v0.c3) NOT BETWEEN (vt0.c0) AND (vt1.c0)))>>((~ (v0.c4)))) CROSS JOIN vt0 ON (+ (vt0.c0)) WHERE (CAST(LIKE(vt0.c0, -1034784541, 'D') AS BLOB)) ORDER BY CAST((NOT (vt0.c0)) AS REAL)  NULLS FIRST, x'' DESC;
SELECT SUM(count) FROM (SELECT ((CAST(LIKE(vt0.c0, -1034784541, 'D') AS BLOB)) IS TRUE)  as count FROM rt1, v0 CROSS JOIN vt1 ON ((((v0.c3) NOT BETWEEN (vt0.c0) AND (vt1.c0)))>>((~ (v0.c4)))) CROSS JOIN vt0 ON (+ (vt0.c0)) ORDER BY CAST((NOT (vt0.c0)) AS REAL)  NULLS FIRST, x'' DESC);
SELECT COUNT(*) FROM rt1, v0 CROSS JOIN vt1 ON ((((v0.c3) NOT BETWEEN (vt0.c0) AND (vt1.c0)))>>((~ (v0.c4)))) CROSS JOIN vt0 ON (+ (vt0.c0)) WHERE (CAST(LIKE(vt0.c0, -1034784541, 'D') AS BLOB)) ORDER BY CAST((NOT (vt0.c0)) AS REAL)  NULLS FIRST, x'' DESC;
SELECT ALL * FROM rt1, v0, vt1 WHERE (CAST(((v0.c2)GLOB(vt1.c0)) AS INTEGER)) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c2)GLOB(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM rt1, v0, vt1 ORDER BY vt1.c0  NULLS FIRST);
SELECT ALL * FROM rt1, v0, vt1 WHERE (CAST(((v0.c2)GLOB(vt1.c0)) AS INTEGER)) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c2)GLOB(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM rt1, v0, vt1 ORDER BY vt1.c0  NULLS FIRST);
SELECT ALL * FROM rt1, v0, vt1 WHERE (CAST(((v0.c2)GLOB(vt1.c0)) AS INTEGER)) ORDER BY vt1.c0  NULLS FIRST;
SELECT * FROM vt0 CROSS JOIN vt1 ON ((((vt1.c0)OR((vt0.c0 IN (',')))))AND(vt1.c0 COLLATE NOCASE)) WHERE ((CAST(vt0.c0 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((((vt1.c0)OR((vt0.c0 IN (',')))))AND(vt1.c0 COLLATE NOCASE)));
SELECT * FROM vt0 CROSS JOIN vt1 ON ((((vt1.c0)OR((vt0.c0 IN (',')))))AND(vt1.c0 COLLATE NOCASE)) WHERE ((CAST(vt0.c0 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((((vt1.c0)OR((vt0.c0 IN (',')))))AND(vt1.c0 COLLATE NOCASE)));
SELECT * FROM vt0 CROSS JOIN vt1 ON ((((vt1.c0)OR((vt0.c0 IN (',')))))AND(vt1.c0 COLLATE NOCASE)) WHERE ((CAST(vt0.c0 AS BLOB) IN ()));
SELECT ALL COUNT(*) FROM v0, vt0 LEFT OUTER JOIN rt1 ON x'' INNER JOIN vt1 ON rt1.c2 WHERE (((((v0.c2)IS(rt1.c0)))|(LTRIM(v0.c1)))) ORDER BY CASE WHEN LIKE(v0.c0, v0.c3, 's') THEN CAST(0Xffffffffba72d289 AS TEXT) END DESC  NULLS FIRST, ((((((((CAST(v0.c1 AS BLOB))AND(UNLIKELY(DISTINCT vt0.c0))))OR(((vt0.c0) IS FALSE))))OR(rt1.c1)))AND(rt1.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c2)IS(rt1.c0)))|(LTRIM(v0.c1)))) IS TRUE)  as count FROM v0, vt0 LEFT OUTER JOIN rt1 ON x'' INNER JOIN vt1 ON rt1.c2 ORDER BY CASE WHEN LIKE(v0.c0, v0.c3, 's') THEN CAST(0xffffffffba72d289 AS TEXT) END DESC  NULLS FIRST, ((((((((CAST(v0.c1 AS BLOB))AND(UNLIKELY(DISTINCT vt0.c0))))OR(((vt0.c0) IS FALSE))))OR(rt1.c1)))AND(rt1.c0 COLLATE RTRIM)) ASC);
SELECT ALL COUNT(*) FROM v0, vt0 LEFT OUTER JOIN rt1 ON x'' INNER JOIN vt1 ON rt1.c2 WHERE (((((v0.c2)IS(rt1.c0)))|(LTRIM(v0.c1)))) ORDER BY CASE WHEN LIKE(v0.c0, v0.c3, 's') THEN CAST(0Xffffffffba72d289 AS TEXT) END DESC  NULLS FIRST, ((((((((CAST(v0.c1 AS BLOB))AND(UNLIKELY(DISTINCT vt0.c0))))OR(((vt0.c0) IS FALSE))))OR(rt1.c1)))AND(rt1.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c2)IS(rt1.c0)))|(LTRIM(v0.c1)))) IS TRUE)  as count FROM v0, vt0 LEFT OUTER JOIN rt1 ON x'' INNER JOIN vt1 ON rt1.c2 ORDER BY CASE WHEN LIKE(v0.c0, v0.c3, 's') THEN CAST(0xffffffffba72d289 AS TEXT) END DESC  NULLS FIRST, ((((((((CAST(v0.c1 AS BLOB))AND(UNLIKELY(DISTINCT vt0.c0))))OR(((vt0.c0) IS FALSE))))OR(rt1.c1)))AND(rt1.c0 COLLATE RTRIM)) ASC);
SELECT ALL COUNT(*) FROM v0, vt0 LEFT OUTER JOIN rt1 ON x'' INNER JOIN vt1 ON rt1.c2 WHERE (((((v0.c2)IS(rt1.c0)))|(LTRIM(v0.c1)))) ORDER BY CASE WHEN LIKE(v0.c0, v0.c3, 's') THEN CAST(0Xffffffffba72d289 AS TEXT) END DESC  NULLS FIRST, ((((((((CAST(v0.c1 AS BLOB))AND(UNLIKELY(DISTINCT vt0.c0))))OR(((vt0.c0) IS FALSE))))OR(rt1.c1)))AND(rt1.c0 COLLATE RTRIM)) ASC;
SELECT COUNT(*) FROM vt1, rt1, v0 WHERE (v0.c0) ORDER BY ((json_array_length(vt1.c0, v0.c1)) IS FALSE) DESC, v0.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt1, rt1, v0 ORDER BY ((json_array_length(vt1.c0, v0.c1)) IS FALSE) DESC, v0.c3  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt1, v0 WHERE (v0.c0) ORDER BY ((json_array_length(vt1.c0, v0.c1)) IS FALSE) DESC, v0.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt1, rt1, v0 ORDER BY ((json_array_length(vt1.c0, v0.c1)) IS FALSE) DESC, v0.c3  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt1, v0 WHERE (v0.c0) ORDER BY ((json_array_length(vt1.c0, v0.c1)) IS FALSE) DESC, v0.c3  NULLS LAST;
SELECT COUNT(*) FROM v0, vt1, rt1 WHERE ((('-59058345' COLLATE BINARY)+(CAST(rt1.c2 AS REAL)))) ORDER BY ((CAST(v0.c1 AS TEXT)) NOT NULL) DESC  NULLS FIRST, v0.c1, ((((vt1.c0)&(v0.c2))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT (((('-59058345' COLLATE BINARY)+(CAST(rt1.c2 AS REAL)))) IS TRUE)  as count FROM v0, vt1, rt1 ORDER BY ((CAST(v0.c1 AS TEXT)) NOT NULL) DESC  NULLS FIRST, v0.c1, ((((vt1.c0)&(v0.c2))) NOTNULL) ASC);
SELECT COUNT(*) FROM v0, vt1, rt1 WHERE ((('-59058345' COLLATE BINARY)+(CAST(rt1.c2 AS REAL)))) ORDER BY ((CAST(v0.c1 AS TEXT)) NOT NULL) DESC  NULLS FIRST, v0.c1, ((((vt1.c0)&(v0.c2))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT (((('-59058345' COLLATE BINARY)+(CAST(rt1.c2 AS REAL)))) IS TRUE)  as count FROM v0, vt1, rt1 ORDER BY ((CAST(v0.c1 AS TEXT)) NOT NULL) DESC  NULLS FIRST, v0.c1, ((((vt1.c0)&(v0.c2))) NOTNULL) ASC);
SELECT COUNT(*) FROM v0, vt1, rt1 WHERE ((('-59058345' COLLATE BINARY)+(CAST(rt1.c2 AS REAL)))) ORDER BY ((CAST(v0.c1 AS TEXT)) NOT NULL) DESC  NULLS FIRST, v0.c1, ((((vt1.c0)&(v0.c2))) NOTNULL) ASC;
SELECT ALL * FROM v0, rt1 INNER JOIN vt0 ON UPPER(LOWER(DISTINCT v0.c0)) WHERE (((CASE v0.c2  WHEN x'' THEN v0.c4 WHEN v0.c1 THEN v0.c0 WHEN rt1.c2 THEN v0.c4 ELSE vt0.c0 END)/(((v0.c1) NOT BETWEEN (vt0.c0) AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c2  WHEN x'' THEN v0.c4 WHEN v0.c1 THEN v0.c0 WHEN rt1.c2 THEN v0.c4 ELSE vt0.c0 END)/(((v0.c1) NOT BETWEEN (vt0.c0) AND (v0.c1))))) IS TRUE)  as count FROM v0, rt1 INNER JOIN vt0 ON UPPER(LOWER(DISTINCT v0.c0)));
SELECT ALL * FROM v0, rt1 INNER JOIN vt0 ON UPPER(LOWER(DISTINCT v0.c0)) WHERE (((CASE v0.c2  WHEN x'' THEN v0.c4 WHEN v0.c1 THEN v0.c0 WHEN rt1.c2 THEN v0.c4 ELSE vt0.c0 END)/(((v0.c1) NOT BETWEEN (vt0.c0) AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c2  WHEN x'' THEN v0.c4 WHEN v0.c1 THEN v0.c0 WHEN rt1.c2 THEN v0.c4 ELSE vt0.c0 END)/(((v0.c1) NOT BETWEEN (vt0.c0) AND (v0.c1))))) IS TRUE)  as count FROM v0, rt1 INNER JOIN vt0 ON UPPER(LOWER(DISTINCT v0.c0)));
SELECT ALL * FROM v0, rt1 INNER JOIN vt0 ON UPPER(LOWER(DISTINCT v0.c0)) WHERE (((CASE v0.c2  WHEN x'' THEN v0.c4 WHEN v0.c1 THEN v0.c0 WHEN rt1.c2 THEN v0.c4 ELSE vt0.c0 END)/(((v0.c1) NOT BETWEEN (vt0.c0) AND (v0.c1)))));
SELECT * FROM v0, rt1 WHERE ((((x'')) BETWEEN (('0.7505642543165205')) AND ((rt1.c1 COLLATE BINARY)))) ORDER BY ('MK V)' IN (ABS(rt1.c1))) ASC  NULLS FIRST, ('4.Âô°&' IN ()), ((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((x'')) BETWEEN (('0.7505642543165205')) AND ((rt1.c1 COLLATE BINARY)))) IS TRUE)  as count FROM v0, rt1 ORDER BY ('MK V)' IN (ABS(rt1.c1))) ASC  NULLS FIRST, ('4.Âô°&' IN ()), ((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1))) IS FALSE)  NULLS LAST);
SELECT * FROM v0, rt1 WHERE ((((x'')) BETWEEN (('0.7505642543165205')) AND ((rt1.c1 COLLATE BINARY)))) ORDER BY ('MK V)' IN (ABS(rt1.c1))) ASC  NULLS FIRST, ('4.Âô°&' IN ()), ((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((x'')) BETWEEN (('0.7505642543165205')) AND ((rt1.c1 COLLATE BINARY)))) IS TRUE)  as count FROM v0, rt1 ORDER BY ('MK V)' IN (ABS(rt1.c1))) ASC  NULLS FIRST, ('4.Âô°&' IN ()), ((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1))) IS FALSE)  NULLS LAST);
SELECT * FROM v0, rt1 WHERE ((((x'')) BETWEEN (('0.7505642543165205')) AND ((rt1.c1 COLLATE BINARY)))) ORDER BY ('MK V)' IN (ABS(rt1.c1))) ASC  NULLS FIRST, ('4.Âô°&' IN ()), ((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1))) IS FALSE)  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0, rt1, vt1 WHERE ((((((v0.c0)) BETWEEN ((v0.c4)) AND ((v0.c1))))*(CASE WHEN v0.c2 THEN v0.c4 END))) ORDER BY ((CASE WHEN v0.c3 THEN v0.c0 ELSE vt1.c0 END)>(((v0.c1) IS FALSE)))  NULLS LAST, ((((NULL COLLATE RTRIM)AND((v0.c1 IN (vt1.c0)))))OR(((vt0.c0)=(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0)) BETWEEN ((v0.c4)) AND ((v0.c1))))*(CASE WHEN v0.c2 THEN v0.c4 END))) IS TRUE)  as count FROM v0, vt0, rt1, vt1 ORDER BY ((CASE WHEN v0.c3 THEN v0.c0 ELSE vt1.c0 END)>(((v0.c1) IS FALSE)))  NULLS LAST, ((((NULL COLLATE RTRIM)AND((v0.c1 IN (vt1.c0)))))OR(((vt0.c0)==(vt1.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, rt1, vt1 WHERE ((((((v0.c0)) BETWEEN ((v0.c4)) AND ((v0.c1))))*(CASE WHEN v0.c2 THEN v0.c4 END))) ORDER BY ((CASE WHEN v0.c3 THEN v0.c0 ELSE vt1.c0 END)>(((v0.c1) IS FALSE)))  NULLS LAST, ((((NULL COLLATE RTRIM)AND((v0.c1 IN (vt1.c0)))))OR(((vt0.c0)=(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0)) BETWEEN ((v0.c4)) AND ((v0.c1))))*(CASE WHEN v0.c2 THEN v0.c4 END))) IS TRUE)  as count FROM v0, vt0, rt1, vt1 ORDER BY ((CASE WHEN v0.c3 THEN v0.c0 ELSE vt1.c0 END)>(((v0.c1) IS FALSE)))  NULLS LAST, ((((NULL COLLATE RTRIM)AND((v0.c1 IN (vt1.c0)))))OR(((vt0.c0)==(vt1.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, rt1, vt1 WHERE ((((((v0.c0)) BETWEEN ((v0.c4)) AND ((v0.c1))))*(CASE WHEN v0.c2 THEN v0.c4 END))) ORDER BY ((CASE WHEN v0.c3 THEN v0.c0 ELSE vt1.c0 END)>(((v0.c1) IS FALSE)))  NULLS LAST, ((((NULL COLLATE RTRIM)AND((v0.c1 IN (vt1.c0)))))OR(((vt0.c0)=(vt1.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((x'4ddedfee') NOTNULL) FULL OUTER JOIN vt1 ON (((vt0.c0)IS NOT(v0.c1)) IN (CASE v0.c4  WHEN v0.c1 THEN v0.c4 ELSE vt0.c0 END)) WHERE (CAST(((((v0.c1)OR(v0.c0)))AND(v0.c4)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((v0.c1)OR(v0.c0)))AND(v0.c4)) AS TEXT)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((x'4ddedfee') NOTNULL) FULL OUTER JOIN vt1 ON (((vt0.c0)IS NOT(v0.c1)) IN (CASE v0.c4  WHEN v0.c1 THEN v0.c4 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((x'4ddedfee') NOTNULL) FULL OUTER JOIN vt1 ON (((vt0.c0)IS NOT(v0.c1)) IN (CASE v0.c4  WHEN v0.c1 THEN v0.c4 ELSE vt0.c0 END)) WHERE (CAST(((((v0.c1)OR(v0.c0)))AND(v0.c4)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((v0.c1)OR(v0.c0)))AND(v0.c4)) AS TEXT)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((x'4ddedfee') NOTNULL) FULL OUTER JOIN vt1 ON (((vt0.c0)IS NOT(v0.c1)) IN (CASE v0.c4  WHEN v0.c1 THEN v0.c4 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((x'4ddedfee') NOTNULL) FULL OUTER JOIN vt1 ON (((vt0.c0)IS NOT(v0.c1)) IN (CASE v0.c4  WHEN v0.c1 THEN v0.c4 ELSE vt0.c0 END)) WHERE (CAST(((((v0.c1)OR(v0.c0)))AND(v0.c4)) AS TEXT));
SELECT ALL * FROM rt1 WHERE (-1378920331);
SELECT SUM(count) FROM (SELECT ((-1378920331) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (-1378920331);
SELECT SUM(count) FROM (SELECT ((-1378920331) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (-1378920331);
SELECT COUNT(*) FROM vt0, v0, rt1, vt1 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0, rt1, vt1);
SELECT COUNT(*) FROM vt0, v0, rt1, vt1 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0, rt1, vt1);
SELECT COUNT(*) FROM vt0, v0, rt1, vt1 WHERE (v0.c0);
SELECT COUNT(*) FROM rt1, v0, vt1, vt0 WHERE (-4.80806397E8) ORDER BY ((((rt1.c0 COLLATE NOCASE)AND(0.5459083607285888 COLLATE RTRIM)))OR(rt1.c1 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((-4.80806397E8) IS TRUE)  as count FROM rt1, v0, vt1, vt0 ORDER BY ((((rt1.c0 COLLATE NOCASE)AND(0.5459083607285888 COLLATE RTRIM)))OR(rt1.c1 COLLATE BINARY)) ASC);
SELECT COUNT(*) FROM rt1, v0, vt1, vt0 WHERE (-4.80806397E8) ORDER BY ((((rt1.c0 COLLATE NOCASE)AND(0.5459083607285888 COLLATE RTRIM)))OR(rt1.c1 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((-4.80806397E8) IS TRUE)  as count FROM rt1, v0, vt1, vt0 ORDER BY ((((rt1.c0 COLLATE NOCASE)AND(0.5459083607285888 COLLATE RTRIM)))OR(rt1.c1 COLLATE BINARY)) ASC);
SELECT COUNT(*) FROM rt1, v0, vt1, vt0 WHERE (-4.80806397E8) ORDER BY ((((rt1.c0 COLLATE NOCASE)AND(0.5459083607285888 COLLATE RTRIM)))OR(rt1.c1 COLLATE BINARY)) ASC;
SELECT COUNT(*) FROM vt0 WHERE ((~ ((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((~ ((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((~ ((vt0.c0 IN (vt0.c0)))));
SELECT * FROM vt0, rt1 FULL OUTER JOIN v0 ON CAST(CAST(v0.c3 AS NUMERIC) AS REAL) WHERE (((((((v0.c3)||(rt1.c1)))AND((((vt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((v0.c2))))))OR(v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((v0.c3)||(rt1.c1)))AND((((vt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((v0.c2))))))OR(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 NOT INDEXED, rt1 FULL OUTER JOIN v0 ON CAST(CAST(v0.c3 AS NUMERIC) AS REAL));
SELECT * FROM vt0, rt1 FULL OUTER JOIN v0 ON CAST(CAST(v0.c3 AS NUMERIC) AS REAL) WHERE (((((((v0.c3)||(rt1.c1)))AND((((vt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((v0.c2))))))OR(v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((v0.c3)||(rt1.c1)))AND((((vt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((v0.c2))))))OR(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 NOT INDEXED, rt1 FULL OUTER JOIN v0 ON CAST(CAST(v0.c3 AS NUMERIC) AS REAL));
SELECT * FROM vt0, rt1 FULL OUTER JOIN v0 ON CAST(CAST(v0.c3 AS NUMERIC) AS REAL) WHERE (((((((v0.c3)||(rt1.c1)))AND((((vt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((v0.c2))))))OR(v0.c0 COLLATE BINARY)));
SELECT ALL * FROM v0 LEFT OUTER JOIN vt1 ON (~ (CASE WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN v0.c3 ELSE rt1.c0 END)) INNER JOIN vt0 ON vt0.c0 RIGHT OUTER JOIN rt1 ON '1079153237' WHERE (CASE WHEN ((rt1.c1)LIKE(vt0.c0)) THEN vt1.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c1)LIKE(vt0.c0)) THEN vt1.c0 END) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON (~ (CASE WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN v0.c3 ELSE rt1.c0 END)) INNER JOIN vt0 ON vt0.c0 RIGHT OUTER JOIN rt1 ON '1079153237');
SELECT ALL * FROM v0 LEFT OUTER JOIN vt1 ON (~ (CASE WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN v0.c3 ELSE rt1.c0 END)) INNER JOIN vt0 ON vt0.c0 RIGHT OUTER JOIN rt1 ON '1079153237' WHERE (CASE WHEN ((rt1.c1)LIKE(vt0.c0)) THEN vt1.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c1)LIKE(vt0.c0)) THEN vt1.c0 END) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON (~ (CASE WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN v0.c3 ELSE rt1.c0 END)) INNER JOIN vt0 ON vt0.c0 RIGHT OUTER JOIN rt1 ON '1079153237');
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT * FROM vt0 CROSS JOIN v0 ON (((NULLIF(v0.c4, v0.c2)))<=((v0.c4 COLLATE NOCASE))) WHERE ((((v0.c0 IN (v0.c0))) ISNULL)) ORDER BY ((990588811) NOT BETWEEN ((((v0.c2))>=((v0.c1)))) AND ((((((((('-1505664017')AND(v0.c4)))AND(v0.c2)))OR(v0.c0)))AND(v0.c3))))  NULLS FIRST, (v0.c2 IN ()) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (v0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (((NULLIF(v0.c4, v0.c2)))<=((v0.c4 COLLATE NOCASE))) ORDER BY ((990588811) NOT BETWEEN ((((v0.c2))>=((v0.c1)))) AND ((((((((('-1505664017')AND(v0.c4)))AND(v0.c2)))OR(v0.c0)))AND(v0.c3))))  NULLS FIRST, (v0.c2 IN ()) COLLATE RTRIM ASC);
SELECT * FROM vt0 CROSS JOIN v0 ON (((NULLIF(v0.c4, v0.c2)))<=((v0.c4 COLLATE NOCASE))) WHERE ((((v0.c0 IN (v0.c0))) ISNULL)) ORDER BY ((990588811) NOT BETWEEN ((((v0.c2))>=((v0.c1)))) AND ((((((((('-1505664017')AND(v0.c4)))AND(v0.c2)))OR(v0.c0)))AND(v0.c3))))  NULLS FIRST, (v0.c2 IN ()) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (v0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (((NULLIF(v0.c4, v0.c2)))<=((v0.c4 COLLATE NOCASE))) ORDER BY ((990588811) NOT BETWEEN ((((v0.c2))>=((v0.c1)))) AND ((((((((('-1505664017')AND(v0.c4)))AND(v0.c2)))OR(v0.c0)))AND(v0.c3))))  NULLS FIRST, (v0.c2 IN ()) COLLATE RTRIM ASC);
SELECT * FROM vt0 CROSS JOIN v0 ON (((NULLIF(v0.c4, v0.c2)))<=((v0.c4 COLLATE NOCASE))) WHERE ((((v0.c0 IN (v0.c0))) ISNULL)) ORDER BY ((990588811) NOT BETWEEN ((((v0.c2))>=((v0.c1)))) AND ((((((((('-1505664017')AND(v0.c4)))AND(v0.c2)))OR(v0.c0)))AND(v0.c3))))  NULLS FIRST, (v0.c2 IN ()) COLLATE RTRIM ASC;
SELECT ALL COUNT(*) FROM vt1, rt1, v0 WHERE (CASE WHEN ((v0.c1)*(rt1.c1)) THEN ((((((((v0.c3)AND(x'')))OR(v0.c0)))AND(v0.c1)))AND(v0.c0)) ELSE v0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c1)*(rt1.c1)) THEN ((((((((v0.c3)AND(x'')))OR(v0.c0)))AND(v0.c1)))AND(v0.c0)) ELSE v0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt1, rt1, v0);
SELECT ALL COUNT(*) FROM vt1, rt1, v0 WHERE (CASE WHEN ((v0.c1)*(rt1.c1)) THEN ((((((((v0.c3)AND(x'')))OR(v0.c0)))AND(v0.c1)))AND(v0.c0)) ELSE v0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c1)*(rt1.c1)) THEN ((((((((v0.c3)AND(x'')))OR(v0.c0)))AND(v0.c1)))AND(v0.c0)) ELSE v0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt1, rt1, v0);
SELECT ALL COUNT(*) FROM vt1, rt1, v0 WHERE (CASE WHEN ((v0.c1)*(rt1.c1)) THEN ((((((((v0.c3)AND(x'')))OR(v0.c0)))AND(v0.c1)))AND(v0.c0)) ELSE v0.c0 COLLATE RTRIM END);
SELECT * FROM rt1, vt0, vt1 WHERE (SQLITE_COMPILEOPTION_USED((rt1.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED((rt1.c1 IN ()))) IS TRUE)  as count FROM rt1, vt0, vt1);
SELECT * FROM rt1, vt0, vt1 WHERE (SQLITE_COMPILEOPTION_USED((rt1.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED((rt1.c1 IN ()))) IS TRUE)  as count FROM rt1, vt0, vt1);
SELECT * FROM rt1, vt0, vt1 WHERE (SQLITE_COMPILEOPTION_USED((rt1.c1 IN ())));
SELECT * FROM vt0, v0, vt1 WHERE (((((0.11449645250426432)AND(vt0.c0)))AND(json_array(v0.c0, v0.c3))));
SELECT SUM(count) FROM (SELECT ((((((0.11449645250426432)AND(vt0.c0)))AND(json_array(v0.c0, v0.c3)))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT * FROM vt0, v0, vt1 WHERE (((((0.11449645250426432)AND(vt0.c0)))AND(json_array(v0.c0, v0.c3))));
SELECT SUM(count) FROM (SELECT ((((((0.11449645250426432)AND(vt0.c0)))AND(json_array(v0.c0, v0.c3)))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT * FROM vt0, v0, vt1 WHERE (((((0.11449645250426432)AND(vt0.c0)))AND(json_array(v0.c0, v0.c3))));
SELECT COUNT(*) FROM vt0, v0 NOT INDEXED, vt1, rt1 WHERE ((((v0.c4)) BETWEEN ((vt0.c0)) AND ((rt1.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((v0.c4)) BETWEEN ((vt0.c0)) AND ((rt1.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, vt1, rt1);
SELECT COUNT(*) FROM vt0, v0 NOT INDEXED, vt1, rt1 WHERE ((((v0.c4)) BETWEEN ((vt0.c0)) AND ((rt1.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((v0.c4)) BETWEEN ((vt0.c0)) AND ((rt1.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, vt1, rt1);
SELECT COUNT(*) FROM vt0, v0 NOT INDEXED, vt1, rt1 WHERE ((((v0.c4)) BETWEEN ((vt0.c0)) AND ((rt1.c0))) COLLATE BINARY);
SELECT * FROM rt1 WHERE ((((rt1.c2)) BETWEEN ((CAST(rt1.c1 AS INTEGER))) AND (((((rt1.c2)) NOT BETWEEN ((NULL)) AND ((rt1.c2))))))) ORDER BY ((rt1.c2 COLLATE BINARY)IS(NULL)), rt1.c0;
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) BETWEEN ((CAST(rt1.c1 AS INTEGER))) AND (((((rt1.c2)) NOT BETWEEN ((NULL)) AND ((rt1.c2))))))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2 COLLATE BINARY)IS(NULL)), rt1.c0);
SELECT * FROM rt1 WHERE ((((rt1.c2)) BETWEEN ((CAST(rt1.c1 AS INTEGER))) AND (((((rt1.c2)) NOT BETWEEN ((NULL)) AND ((rt1.c2))))))) ORDER BY ((rt1.c2 COLLATE BINARY)IS(NULL)), rt1.c0;
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) BETWEEN ((CAST(rt1.c1 AS INTEGER))) AND (((((rt1.c2)) NOT BETWEEN ((NULL)) AND ((rt1.c2))))))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2 COLLATE BINARY)IS(NULL)), rt1.c0);
SELECT * FROM rt1 WHERE ((((rt1.c2)) BETWEEN ((CAST(rt1.c1 AS INTEGER))) AND (((((rt1.c2)) NOT BETWEEN ((NULL)) AND ((rt1.c2))))))) ORDER BY ((rt1.c2 COLLATE BINARY)IS(NULL)), rt1.c0;
SELECT COUNT(*) FROM v0, vt1 WHERE (((v0.c3)LIKE(vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c3)LIKE(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt1);
SELECT COUNT(*) FROM v0, vt1 WHERE (((v0.c3)LIKE(vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c3)LIKE(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt1);
SELECT COUNT(*) FROM v0, vt1 WHERE (((v0.c3)LIKE(vt1.c0)) COLLATE RTRIM);
SELECT * FROM rt1 FULL OUTER JOIN vt0 ON TYPEOF(vt0.c0) WHERE (NULL) ORDER BY ((CAST(rt1.c0 AS INTEGER))>=(((rt1.c1) NOTNULL))) DESC  NULLS FIRST, (((((((rt1.c0))<>((rt1.c0))))OR((vt0.c0 IN (rt1.c1, vt0.c0)))))AND((((rt1.c1))>((vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON TYPEOF(vt0.c0) ORDER BY ((CAST(rt1.c0 AS INTEGER))>=(((rt1.c1) NOTNULL))) DESC  NULLS FIRST, (((((((rt1.c0))!=((rt1.c0))))OR((vt0.c0 IN (rt1.c1, vt0.c0)))))AND((((rt1.c1))>((vt0.c0))))) DESC  NULLS FIRST);
SELECT * FROM rt1 FULL OUTER JOIN vt0 ON TYPEOF(vt0.c0) WHERE (NULL) ORDER BY ((CAST(rt1.c0 AS INTEGER))>=(((rt1.c1) NOTNULL))) DESC  NULLS FIRST, (((((((rt1.c0))<>((rt1.c0))))OR((vt0.c0 IN (rt1.c1, vt0.c0)))))AND((((rt1.c1))>((vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON TYPEOF(vt0.c0) ORDER BY ((CAST(rt1.c0 AS INTEGER))>=(((rt1.c1) NOTNULL))) DESC  NULLS FIRST, (((((((rt1.c0))!=((rt1.c0))))OR((vt0.c0 IN (rt1.c1, vt0.c0)))))AND((((rt1.c1))>((vt0.c0))))) DESC  NULLS FIRST);
SELECT * FROM rt1 FULL OUTER JOIN vt0 ON TYPEOF(vt0.c0) WHERE (NULL) ORDER BY ((CAST(rt1.c0 AS INTEGER))>=(((rt1.c1) NOTNULL))) DESC  NULLS FIRST, (((((((rt1.c0))<>((rt1.c0))))OR((vt0.c0 IN (rt1.c1, vt0.c0)))))AND((((rt1.c1))>((vt0.c0))))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (CAST(TRIM(vt0.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(vt0.c0) AS BLOB)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(TRIM(vt0.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(vt0.c0) AS BLOB)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(TRIM(vt0.c0) AS BLOB));
SELECT COUNT(*) FROM rt1, vt0 WHERE (NULL COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (NULL COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (NULL COLLATE RTRIM);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2 IN ()))LIKE((~ (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN ()))LIKE((~ (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2 IN ()))LIKE((~ (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN ()))LIKE((~ (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2 IN ()))LIKE((~ (rt1.c0)))));
SELECT * FROM rt1, vt1, v0 WHERE (((((0x7390adef) NOT NULL))>(((v0.c2)<>(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((0X7390adef) NOT NULL))>(((v0.c2)<>(rt1.c2))))) IS TRUE)  as count FROM rt1, vt1, v0);
SELECT * FROM rt1, vt1, v0 WHERE (((((0x7390adef) NOT NULL))>(((v0.c2)<>(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((0X7390adef) NOT NULL))>(((v0.c2)<>(rt1.c2))))) IS TRUE)  as count FROM rt1, vt1, v0);
SELECT * FROM rt1, vt1, v0 WHERE (((((0x7390adef) NOT NULL))>(((v0.c2)<>(rt1.c2)))));
SELECT * FROM rt1, vt1 WHERE ((((NULL)AND(rt1.c2)) IN ((('0W{')AND(0X669eeae9)), ((vt1.c0) BETWEEN (rt1.c1) AND (vt1.c0))))) ORDER BY (((+ (vt1.c0))) BETWEEN (rt1.c0) AND ((rt1.c1 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT (((((NULL)AND(rt1.c2)) IN ((('0W{')AND(0X669eeae9)), ((vt1.c0) BETWEEN (rt1.c1) AND (vt1.c0))))) IS TRUE)  as count FROM rt1, vt1 ORDER BY (((+ (vt1.c0))) BETWEEN (rt1.c0) AND ((rt1.c1 IN ()))) DESC);
SELECT * FROM rt1, vt1 WHERE ((((NULL)AND(rt1.c2)) IN ((('0W{')AND(0X669eeae9)), ((vt1.c0) BETWEEN (rt1.c1) AND (vt1.c0))))) ORDER BY (((+ (vt1.c0))) BETWEEN (rt1.c0) AND ((rt1.c1 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT (((((NULL)AND(rt1.c2)) IN ((('0W{')AND(0X669eeae9)), ((vt1.c0) BETWEEN (rt1.c1) AND (vt1.c0))))) IS TRUE)  as count FROM rt1, vt1 ORDER BY (((+ (vt1.c0))) BETWEEN (rt1.c0) AND ((rt1.c1 IN ()))) DESC);
SELECT * FROM rt1, vt1 WHERE ((((NULL)AND(rt1.c2)) IN ((('0W{')AND(0X669eeae9)), ((vt1.c0) BETWEEN (rt1.c1) AND (vt1.c0))))) ORDER BY (((+ (vt1.c0))) BETWEEN (rt1.c0) AND ((rt1.c1 IN ()))) DESC;
