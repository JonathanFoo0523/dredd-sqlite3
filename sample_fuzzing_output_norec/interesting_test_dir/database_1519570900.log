-- Time: 2024/06/09 03:49:08
-- Database: database0
-- Database version: 3.40.0
-- seed value: 1519570900
PRAGMA cache_size = 50000; -- 3ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 1ms;
CREATE TEMPORARY TABLE t1 (c0 INT ); -- 0ms;
PRAGMA temp.automatic_index; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
ALTER TABLE t1 ADD COLUMN c14 INTEGER COLLATE RTRIM; -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
COMMIT; -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1897537404);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 0); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL  WHEN 'XY' COLLATE NOCASE THEN (- ('-1897537404')) ELSE CAST(NULL AS INTEGER) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=1999635006 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1999635006 sz=509871954 unordered noskipscan'); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=509871954'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '0 0 sz=1523338832 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '1523338832 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (NULL COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '0 -332988186 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=509871954 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=509871954 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1993200064 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '2 -1805816586 sz=-379774207 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '1930329736 sz=1692450096 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '4 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 0 sz=-1993200064 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '947970457'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=-1261411975'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '-1261411975 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2019440123 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)AND(0.1494399000083091)))AND(NULL))) NOT BETWEEN (((-332988186)IS NOT(NULL))) AND (CASE 1523338832  WHEN NULL THEN NULL WHEN '0.1494399000083091' THEN 0.030969973148367247 WHEN 0.6576388411006014 THEN NULL ELSE 0.6576388411006014 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 1523338832 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=388347133 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((0.030969973148367247))<(('o땣jd⫫1\r'))) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1757540119 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1805816586'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE DATETIME(CAST(x'' AS INTEGER), ((NULL) NOT NULL), CASE WHEN x'' THEN x'1972' ELSE 2.019440123E9 END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=820350607 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CHANGES())AND(((0.06848005861786421)GLOB(NULL)))))OR(NULL COLLATE RTRIM)))OR(((((NULL)OR('73C᠏땣\r~紷')))AND(x'')))))OR((NOT ('vS')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1805816586 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) BETWEEN (NULL) AND (x'0560')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((('m ᠏(e')OR('539800931')))AND(NULL)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-800636 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'80b3')/(547893506)), LIKELIHOOD(DISTINCT NULL, 0.05001917803806699), (NOT (-1.261411975E9))))<=(((('w\n')<(NULL)), ((((((((2.35739151E8)AND('b|)Gyh^')))AND(NULL)))AND(NULL)))OR(x'89ba')), ((x'43ec')IS(NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('73C᠏땣\r~紷' COLLATE RTRIM))<=((CASE 'v1'  WHEN 1.692450096E9 THEN 0Xfffffffffc1203a9 ELSE '-65928279' END))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('()years}L}X')>=('p<gC'))) NOT BETWEEN (((NULL)AND(x''))) AND (((NULL)<<(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=832267853'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (0xffffffffe8102102))) IS TRUE); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-777326719 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)GLOB(x'')) IN (LAST_INSERT_ROWID(), CASE WHEN 0.1494399000083091 THEN 0.9325756018649041 ELSE 'Be9MfE\%2' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN x'' WHEN 0.07064912447249105 THEN 0.6971062783807228 WHEN x'dc81' THEN x'' END)<<('0.')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=936985878 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('')AND(0.9171246513025304)))OR('2019440123')))AND('ꍞ7')))OR(NULL))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((~ (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-9223372036854775808'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '1717923151 sz=509871954 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=632563714 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=618482632 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')<=('388347133'))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN '-910732675' THEN 0.1494399000083091 END)OR(json_object(x'18f3', '258374967'))))OR(0.7190978152398217)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN 'N.1-' THEN 1072724912 ELSE NULL END)AND(CASE WHEN 0.777032624846723 THEN '' WHEN '224410638' THEN 'm ᠏(e' WHEN '^sTᩄ41' THEN x'b5f4' ELSE 258374967 END)))OR(CASE '-1488544884'  WHEN 1.072724912E9 THEN '-379774207' ELSE NULL END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) BETWEEN (-6.5928279E7) AND (0.5604704041355721)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('*훐W_') NOT BETWEEN (0.1582621205745286) AND (0.8685179102884862)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1523338832 sz=48916279 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (x'e9ee')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.9325756018649041) BETWEEN (x'3379') AND (x'c71e')) THEN ((('860005513'))!=((0.1582621205745286))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=-218846251 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((x'c8cc', -908392713, NULL))==((0x2b22c9f3, NULL, x'e553'))) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '4 sz=-2008624892 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=-1897537404'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(-7.77326719E8 AS NUMERIC) THEN (NOT ('ḩLCnZy8')) WHEN -4.01596158E8 THEN NULL WHEN ((('xh듽僸Q7t''N', '1267442526', NULL)) NOT BETWEEN (('303897156', 0xd603c0e, '-910732675')) AND ((x'', '0.1494399000083091', x''))) THEN ((((((((0.18938029536213774)OR(228288549)))OR(x'')))OR(-908392713)))AND(0.47525414821960943)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '-1205588766'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.2774653064782515)%(x'')) THEN ((((NULL)AND(NULL)))AND('-1128552714')) WHEN TIME(0.3357027068346815, '-964163312', 1.692450096E9) THEN (NOT ('3d')) WHEN ((0x77b51524)IS NOT('.\G~')) THEN ((x'')-(424679637)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1442038480 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=303897156'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-196356676 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS TRUE))<<(((((((((NULL)AND(x'b1f1')))AND('832267853')))OR(0.6811276522336739)))AND(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 0 sz=820350607'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '-1692210139 -649430886'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1835022977 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '346100149 -363742572 sz=-1757540119'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '936985878 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.143270429968961, '0.', NULL, '', NULL, x'', NULL)) BETWEEN ((((((NULL)AND(x'576b')))OR(NULL)), CASE WHEN -9.08392713E8 THEN 'p}C{Wukd(' WHEN 'w\n' THEN '' WHEN x'20e8' THEN NULL ELSE NULL END, (('o-74') NOT NULL), CAST(x'' AS NUMERIC), (('509871954') ISNULL), (('-984466748') IS TRUE), CAST(0.29002933826467747 AS REAL))) AND ((NULL COLLATE NOCASE, ((x'9d36')/(NULL)), NULL, (('\rGO')>>('-363742572')), CAST(0Xffffffff8d42f358 AS TEXT), (('*훐W_')|(NULL)), ((x'') BETWEEN (0.20339420210914072) AND (NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-944410480 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=543507782'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=-1498266477 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(((x'') IS TRUE), x'' COLLATE NOCASE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '845319895 sz=-1076693296 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=-1805816586 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1307107294 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((1972032519) BETWEEN (0Xffffffffb276ee80) AND (-1993211205)) THEN ((0.6966044594403106)||(NULL)) WHEN '927948778' THEN (x'8f3d' IN ()) WHEN ((x'') NOTNULL) THEN ((((NULL)AND('&+')))OR(x'')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS TRUE)) BETWEEN ((((0.4489526022082221)) NOT BETWEEN (('AH')) AND ((NULL)))) AND ((('0.2774653064782515')>(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN (x'')))<<(((('-1692210139')) BETWEEN (('1594045505')) AND (('56'))))); -- 1ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '1980901433 481902044 sz=645093747 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-148060124 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=1594045505'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=1930329736'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1250728621 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (0.29002933826467747)))<>(((0.818436650413057)+(1.375346217E9)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '0 sz=-493619509 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-93893505 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.5781790129541498)<(0.32080161486578096)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=1492267025 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '-797252666 -332988186 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.43665467991807716)) BETWEEN ((-349567425)) AND (('1375346217')))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '-2116883817 sz=702333857'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '1492267025'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('')+(x'')), ((5.09871954E8)-('539800931')), CAST(NULL AS NUMERIC)))>((NULL COLLATE BINARY, ((NULL) BETWEEN ('0.6811276522336739') AND (0.8025245469327309)), CASE '1594045505'  WHEN '-1993211205' THEN NULL END))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '226533562 sz=-1719301403'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1984315896 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=-800304268 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TYPEOF(''))<<(((x'') BETWEEN (0.5535431815698283) AND ('2090375987')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=665049778 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-379774207'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2080747078 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=947970457 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '492150677 -1730335145 sz=-602713567 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '0 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1839031661 sz=-411791495 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '-1993200064 sz=-1042304361 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM)>('' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((('-2044027575')AND(NULL)))OR(0.4548524310969586)))AND(x'')))OR(0X6c3a66c5)))OR(((x'365ecee4') IS TRUE))))AND((((NULL))>((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')AND(618482632)))OR(0.6458578780898521)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-777326719 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '0 1350702151'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('4b})Ip')IS NOT(-9.64163312E8))  WHEN ((0.6576388411006014)!=(0.9674179618336955)) THEN '*' COLLATE BINARY WHEN ((0X7730023e)>=(-1897537404)) THEN (NOT ('242191742')) WHEN ((0.18938012269505233) IS FALSE) THEN '1284719648' COLLATE NOCASE WHEN 0.5343567503872582 COLLATE BINARY THEN ((x'6af0')<(7.572333087118022E-4)) WHEN ((0.6763251463712006)||('')) THEN JULIANDAY('', -1.042304361E9, 0.5958217973635376) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=1350702151'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CASE WHEN x'' THEN 0.6976985506017694 WHEN '913555366' THEN x'5a8c' WHEN NULL THEN -695063366 ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '0 0 sz=-1307107294 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '-1050828824'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1797099583 2 sz=-1325501202'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=235739151 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOT BETWEEN (((((NULL)AND('9hbm<.')))OR(NULL))) AND ((+ (0.2774653064782515)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=-1262763013 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')<=(NULL)) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=1 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1871913881 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0xffffffffee83ae36)/(NULL)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '-1993200064 1427628425'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1730335145'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)GLOB('17368607'))) NOT BETWEEN ((('IpPR')IS NOT(x''))) AND (CAST(x'' AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '242191742 -1307107294 sz=-561593612 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((1e500)GLOB('987353395')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('-344752018') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2050968482'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=424679637 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=1835022977'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.3003492519991381, -1808441720, NULL)) BETWEEN ((('-401596158' IN ()), (0.1341666847641957 IN ()), ((x'') ISNULL))) AND ((SQLITE_VERSION(), ((((((((NULL)AND(0.8571689729850882)))AND(0.18938012269505233)))OR(0xffffffffb276ee80)))AND(-2129001052)), NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '0 -1261411975 sz=242191742 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-602713567 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1291618520 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=-364817809'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-65928279 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '-1897537404 sz=1835022977 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL) NOT BETWEEN (x'') AND (x'')) THEN (~ (0.28953434106623344)) WHEN (((0.59397906688507))=((NULL))) THEN NULL WHEN (('b1')LIKE(NULL)) THEN (x'' IN ()) ELSE ((((-1.307107294E9)AND('-1468780217')))AND(0.11900381555772022)) END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(0.9395558123990894 AS REAL)  WHEN (0.11900381555772022 IN ()) THEN 0.4575250127110574 END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('' IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN NULL THEN x'' ELSE 0.462824454429119 END)*(x'' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((x'') IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '-1811759990 -635567944 sz=-401596158 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(ABS(NULL) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=258374967 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN -363742572 THEN '70971885' ELSE '-2008624892' END COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (0.2744847785885143) AND (0.20611210346611508))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SUBSTR(0.22387170933764544, (((NULL, NULL, NULL, '', NULL))=(('1483537873', '', 1992858783, '-902898486', '723700211')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=1666568485'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 4'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '2093563558'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=1059601212 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-1757540119') ISNULL))OR((('p') NOT BETWEEN (NULL) AND ('CI^P9/')))))OR((('-1502853338')=(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('DGIPW') BETWEEN ('1439986078') AND ('673178189')))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=492150677 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=886906637 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '0 sz=242191742'); -- 4ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.9206681596654829)OR(x'46a8')))OR(NULL)))OR(x'')))OR(-1.692210139E9))) NOT BETWEEN (HEX(0.8579295526316505)) AND ((0.1582621205745286 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xfffffffff67b8835) BETWEEN (NULL) AND (x'8a91'))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(LOWER(DISTINCT NULL) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '-1076693296'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '924492401 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '760360429 sz=2092162020'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-602713567 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '2043624516 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1990606203 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS TEXT)) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-86652339') NOT BETWEEN ('-401596158') AND (''))) BETWEEN (((x'')IS(-8.5302712E8))) AND (((NULL) NOT BETWEEN (NULL) AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1564914723'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '0 sz=-935550734'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('g') NOT BETWEEN (0Xffffffff8d42f358) AND ('-1120935299')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CHANGES())OR(((x'a54a')GLOB(x'ea574a194aba')))))OR(CAST('' AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=677364529 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1405326225 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('')<=(((NULL) BETWEEN ('-1205588766') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '-1993211205 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=338578040 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=1826091893 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((-8.00304268E8))<=(('')))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '208112264 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(((x'') NOT BETWEEN ('') AND (x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 347476734 sz=-1420960928 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)AND('R')))AND(0x1c38e748)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=258374967 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 4 sz=-1472804629 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1080098691'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('1350702151' AS REAL))>>(((-3.79774207E8) NOT BETWEEN (1.884826347E9) AND ('!K')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json(CAST('IC' AS REAL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE (0.1494399000083091 IN ())  WHEN ((NULL)*(NULL)) THEN ((('\n!*')) BETWEEN (('1788713083')) AND ((NULL))) ELSE json_object(0.17913032033243725, '0.8571689729850882') END; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((2122744550)IS(NULL)))LIKE((~ (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)/(0Xffffffffd24a8c92))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=-1117312705 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=927948778 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS FALSE)) BETWEEN ((((1895336947)) BETWEEN (('')) AND ((x'')))) AND (((NULL)<=(0.10033653441423784)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=-1757540119 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')>('-158657448')), CASE 1.594045505E9  WHEN 'ippr' THEN 'W5' END, (- (NULL))))>((((NULL) IS FALSE), (((((((('-641312733')OR('0.3003492519991381')))OR(x'')))AND('V''')))AND(NULL)), QUOTE(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'')|(7.572333087118022E-4)))OR(((x'6294') BETWEEN ('') AND (x'5c04')))))AND((('547893506') BETWEEN (NULL) AND (NULL)))))OR(x'')))OR(UPPER(DISTINCT x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '295946199'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-168318692 2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-9.4441048E8)GLOB(NULL)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '1839031661 sz=-175645126 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('388347133') BETWEEN (x'7f519557') AND (0xf15f6e7)))OR('\n!*' COLLATE BINARY)))AND(((0.6480071702896689)*(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(x'') COLLATE NOCASE COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE RTRIM)==(CAST(-1300094151 AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1757540119 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=1807950616 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=224410638 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('b?')AND(0.9136499227097304)))OR(NULL)))*(CASE -439562264  WHEN '-1570373719' THEN NULL ELSE x'' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1730335145 sz=1635758701 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '-1757540119 sz=-1459437186 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '0 sz=541013045 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1984315896 2 sz=424679637 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=927948778 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1523338832')<<(NULL))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1705395078 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1594045505 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=2019440123'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '2 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.6962032170503725)) NOT BETWEEN ((NULL)) AND ((''))))<=(((x'') BETWEEN ('541963412') AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=-1279921014'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TOTAL_CHANGES() COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1537596370 sz=-1249388710 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1458209801') IS TRUE)) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=-1681390652'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '-910732675 1542683845 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=59985502 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NULL IN ()) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '0 89662215'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=-148060124'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1184731944 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1630746688 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-13209454 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (0Xffffffffd2d1a5b5) AND (x''))) BETWEEN ('-1986787951' COLLATE RTRIM) AND ((('now!') BETWEEN (1.884826347E9) AND (0.24106706807798162)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (x'')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1042304361'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 0 sz=-602713567 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-504924805 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ('o땣jd⫫1\r')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((- ('226533562')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1924992168 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=1971244466 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((-1924992168) NOT BETWEEN (0.5950533025853522) AND (2.008356132E9)), ((x'')IS NOT(0.8397314836888559)), (('b1')+(0Xffffffffbf1f98c4))))>((((x'')GLOB(0x45421376)), CAST(x'361b' AS INTEGER), 0.2550078869033787 COLLATE BINARY))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=1999635006 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE WHEN 4.24679637E8 THEN x'e8c1' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((-1.46386696E8))!=((''))))OR(x'8f67378b' COLLATE RTRIM)))AND(((-691942001)IS(x'c7d7')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2090375987 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '951241450 sz=-1078208801 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '' THEN '#fU}龕v4' WHEN x'a1e94013' THEN NULL WHEN 0.9674179618336955 THEN x'67d5' END) NOT BETWEEN (((x'')*(0.17969033613487162))) AND (NULL COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1492267025 sz=998884660 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '789840464'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=190419616'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((390552379) NOTNULL) THEN CAST(-1.692210139E9 AS NUMERIC) ELSE x'5f40' COLLATE NOCASE END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (+ ((((('0.9674179618336955')AND('-1026710513')))OR(1.984315896E9)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=2037472113'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '820350607 sz=1490726858 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=152482062'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.4354254411556898)) BETWEEN ((((('')) NOT BETWEEN ((0xfffffffffd286ba8)) AND ((0Xffffffff945d6cf6))))) AND ((((((')B8D')OR(NULL)))OR(0Xffffffffcf6c395e))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(((x'59b2') BETWEEN ('-621923802') AND (0.2683808678392322)), CASE NULL  WHEN x'' THEN NULL WHEN 'W\n' THEN '1702469589' WHEN 0.32080161486578096 THEN x'' WHEN -1.307107294E9 THEN 0.038011234987929354 WHEN x'' THEN '{R>]}r' WHEN x'dfe8' THEN 1072724912 WHEN 0Xffffffffb09c2257 THEN 0.9867043942170558 ELSE '543507782' END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1717923151 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2137584975 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1654773220 2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1724581368'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' unordered'); -- 3ms;
DELETE FROM sqlite_stat1 WHERE CASE (x'178b' IN ())  WHEN ((x'') NOT BETWEEN ('-984466748') AND (0.17969033613487162)) THEN (x'' IN (x'')) WHEN ((NULL)==('-400653687')) THEN (('0.28953434106623344') BETWEEN ('-1463049479') AND (x'')) WHEN ((0.967774712940882) NOTNULL) THEN (NULL IN ()) ELSE ((NULL) NOT BETWEEN (0.3003492519991381) AND (0.4927831345305622)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)GLOB(NULL))))>=(((((NULL)) BETWEEN (('Fx')) AND (('-719935497')))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1935190771 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.030969973148367247)>>(x'1091')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2099833419'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=-1488544884 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE -316831294  WHEN x'' THEN 0x6d603a81 WHEN -1.498266477E9 THEN -6.02713567E8 WHEN NULL THEN 0.07769549594632841 ELSE NULL END AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1598869797'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1261411975 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1498900645 sz=-951769124 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '674058839 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=481191800'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1546573140'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-345018389'; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '723700211 0 sz=-486437397 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('', 0X207cab1e, x'')) NOT BETWEEN (('723700211', '', x'')) AND ((NULL, NULL, '-1042304361'))) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=1692450096 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)>=('Be9MfE\%2'))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 'Gn\rF' THEN x'' WHEN x'' THEN NULL WHEN 0.4175121272128678 THEN NULL END) NOT BETWEEN ((NOT (NULL))) AND (NULL COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (HEX('1375346217') IN (CASE WHEN 0.9974658247916135 THEN 0.17969033613487162 ELSE x'' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=121836932'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '258374967 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(0.5689931522893553 COLLATE NOCASE, 0.4927831345305622 COLLATE NOCASE); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CHAR(0Xffffffffe1d87c99) IN (((0.9340813790499244) NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('骭R')+(0.12974176706047857)) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-943043423 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '-1897537404 sz=722894219 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 2 sz=369237259 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-2008624892 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('jY' COLLATE RTRIM)AND(((x'') IS FALSE))))OR(((0.12461195128877522)<=(0x2b302aa8)))))OR((('')AND('547893506')))))OR((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1157524957 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((COALESCE(x'', 1.523338832E9)))>=((((('~B')) BETWEEN ((1e500)) AND ((0.2609274798442588)))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'') NOTNULL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '-802331072 -1993200064 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x''))>=(('0.9867043942170558'))) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((((x'')AND('-1205588766')))AND('-411791495')))AND('813652')))OR(-1.128552714E9)))AND(((-218846251) NOT BETWEEN (NULL) AND (x'a1737603')))))AND(0.6198180578826952 COLLATE NOCASE)))AND(((NULL) BETWEEN ('0.8579295526316505') AND ('1578421957')))))OR(((NULL) IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-910732675 575735414'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (x'' IN ())  WHEN CASE NULL  WHEN 0.5517955673193498 THEN '' WHEN 0.333866412449477 THEN 0.05854152627960929 WHEN x'' THEN x'' END THEN (((1.815766725E9))!=((1488925408))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-744179415'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.8503524748985316 IN (-6.02713567E8))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-363742572 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '1311990120'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN '0.8025245469327309' THEN 0x19c07d73 END) BETWEEN (x'b7f2' COLLATE BINARY) AND (CAST(0.6838235509274015 AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-968660443 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=1462040339 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=-1325205836'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(((x'')|(0.1567903309485842)), TOTAL_CHANGES()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL  WHEN '-146003305' THEN '-1985311885' WHEN x'94bb' THEN x'8952' WHEN '-1855669168' THEN 0.11639035302812595 ELSE 7.572333087118022E-4 END COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN (('')) AND (('0.4575250127110574'))) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=668969387'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '2 sz=1333052 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-2083507800 0 sz=1470477760 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (''))) NOT BETWEEN ((((('W\n')AND(x'')))OR(NULL))) AND ((NOT (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '2 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')>>((((NULL))!=((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1267442526 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=-853027120 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TYPEOF(0.7337332215642356))|(((x'')&(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.7604250544093838; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOT NULL) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '4\r3hd'; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((0.15476216293327516)GLOB(0.07483451142652375))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'3193')>=(x'')) AS REAL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1073616734 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-850947543)LIKE((('(<&O')||(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('1350702151' AS BLOB) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NULL IN (0.21681645931536642, x'')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (0.9171246513025304 COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((('', NULL, NULL, NULL, NULL)) NOT BETWEEN ((0.333866412449477, 'ah', x'', 'nu2', NULL)) AND (('0.8571689729850882', '1375346217', -1511097977, 0.4014971307849895, x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '1492267025 sz=1375346217 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 -901840735 sz=-230832014'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 0 sz=303897156'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=1725404233 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1847597146 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-347878722'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-515849947 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL))>(('-379774207'))))<=(((x'') NOT BETWEEN ('-379774207') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1808371356 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=522435594'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1475190108'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '970883038 sz=1796688678 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-913616056 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1288218061'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=260560310 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('5b')))IS((((-1053289591)) BETWEEN (('NOW!')) AND ((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 4ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1267442526'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=2008356132'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (- ((NOT (0.14338605602597865)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE LIKELY(NULL)  WHEN (('') BETWEEN (NULL) AND (0X7730023e)) THEN CAST(x'' AS BLOB) WHEN '-307466275' COLLATE BINARY THEN ((0.7575658194138979) ISNULL) WHEN ((NULL) NOTNULL) THEN 'n*L>L7U|1' COLLATE BINARY ELSE ((((0.2744847785885143)AND(x'')))AND('1037789419')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((NOT (x'b715')))AND(((NULL) NOT BETWEEN ('') AND ('573197826')))))AND(((x'') NOTNULL))))OR(CASE 0xffffffffea51ba94  WHEN x'' THEN 0.12960268702568434 ELSE 0.8025245469327309 END)))AND(('346100149' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '-491487134 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=1597067103 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1980901433 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1052082602 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=303897156'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.1066841817256644 IN ()); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1579029262 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('#J%j7+!+3')LIKE(x'')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'ddcaeb37')|(4.8916279E7)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '1350114094 sz=27029562'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '9223372036854775807 sz=392387440'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('>4B', 0x20654546, NULL)) BETWEEN ((x'', NULL, 0.88534248298443)) AND (('-413886088', '', '-1805816586'))))>>(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '-1169056765 sz=-1498266477 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '-953804049 sz=-1498393549 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('-493619509')*('-1')))AND((0.2676721444523642 IN (x'', 'FALSE')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1072724912'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0X1fe8c88b) BETWEEN (x'') AND (x'')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX((- ('HJ_R,smR㍷'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '-1877063811 694212217 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '891137962'  WHEN '242191742' THEN x'232d' END) BETWEEN (('oGa_.>J' IN ())) AND ((((NULL)) BETWEEN ((0X2b22c9f3)) AND ((0.12035787149091581))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-649430886 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '-307210118'  WHEN NULL THEN NULL END) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=588574401 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-120276978 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=702333857 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '-861433016 sz=226533562'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)GLOB(458386888))) BETWEEN ((x'' IN ())) AND (CAST(1986768922 AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '-1279825066 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '226533562'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1072724912'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT IFNULL(DISTINCT 1991196059, ''), (((-1261411975)) BETWEEN ((NULL)) AND (('-791783098'))), ((('0.07769549594632841'))<=((0.9318926986441962))), (+ (NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '1835022977 sz=433781634'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=1000738645 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((((x'', x'', ''))>((x'7d63', '618482632', '-1897537404'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '932981999 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-379774207'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-938846968 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0.6691502582785012)OR(NULL)))OR('-148060124')))OR(SQLITE_SOURCE_ID())))OR(CAST('' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1009536717'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1072724912'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((0.5689931522893553)AND(1987731281)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-233940558 sz=882777304 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1930329736 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-363742572'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-797252666 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((TRIM(NULL, '0.9318926986441962'))OR((x'' IN ('R+')))))AND(((x'f66a')AND(x'')))))AND((((('-1076693296')OR('?2kyw艃N')))OR('845319895')))))OR(CAST('&PY4\ri]' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNICODE(NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1653193759 sz=-1181567900 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN (0.32080161486578096)))>>(((((0Xffffffff86275ed7)AND('I}쎘fH*K')))OR(x'353a4586')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '-1444737997 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-110798715 sz=1454085920'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '-1237607340 -1612424403'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1442038480') BETWEEN ('Q-*') AND ('-1805816586')))<<((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-559497485 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('%SLr]Eix' COLLATE BINARY AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL  WHEN -9.64163312E8 THEN 2.42191742E8 ELSE 'YV>J㵪on' END COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=1600355069 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-13811390 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((NULL)==('9223372036854775807')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1498266477 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE MAX(((((((((NULL)OR(x'')))AND('-1757540119')))AND('')))AND('I}쎘fH*K')), (NULL IN ())); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(ABS('-614408345') AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=-593548756 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1.261411975E9)OR((x'2eb377b3' IN ()))))OR((x'e15b' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=1176689042 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.6493155550168238 COLLATE BINARY) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.7859865098705197) NOT BETWEEN (0Xffffffffb253a30e) AND ('0.8685179102884862')))OR((0.1456104420130825 IN ()))))OR((('!GR')>(-7.77326719E8)))))AND((('Fn8P') IS TRUE))))OR(((x'99b784b9')IS(x'50b6')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((x'') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NOT ('')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '0 sz=-286185936 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=-411791495 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE x'49a78566'  WHEN NULL THEN 0.3209382140999266 END AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=1681931058 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1138649948 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1984315896'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '2 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=-1205588766 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '30218312 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=-1143618848'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.4945436641834484)||(NULL))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'bc066bfa')|('-2029769136')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1')||(x'')))AND(((((0.9074310469401091)AND(x'')))AND(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array_length((((NULL)) BETWEEN (('~GfTM]Ǘ')) AND ((0.9403471491546453))), CASE '-1757540119'  WHEN '-1205588766' THEN x'4843' ELSE 0.8381391018895847 END); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_quote((((NULL)) BETWEEN (('226533562')) AND ((0.5362715980476989)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=210511903 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '523167436 2 sz=1087836987 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((((0.6102069926671041) NOT BETWEEN ('2102870889') AND (NULL)))) AND ((CASE WHEN 'q5(퐇' THEN 0.13961618249744456 ELSE '' END))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((x'19e3'))!=(('-1734450379'))) THEN ((0.07483451142652375) NOT BETWEEN (x'') AND (x'')) ELSE (-1168971713 IN ()) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((~ (x'ddca')) AS TEXT); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '-2044027575 sz=-1930568515 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json(x'1d7d')) BETWEEN (NULL) AND ((('ah') NOT NULL))); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1070461445 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-713709788 sz=-65928279'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ (NULL)) IN (((0.30152524735262676) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1144193814 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE BINARY)|(LTRIM(NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((((NULL)OR(x'')))AND(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '1112680706 2023748806 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((COALESCE(DISTINCT '', 1209215176, 0.17248529993668138, 'hꐕI#	D')) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-27878350 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('723700211') IS TRUE) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_type((('0.818436650413057') BETWEEN (8.20350607E8) AND (0.09749255719661953))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((~ (x'd7e7')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '1267442526 sz=-382992086'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '-1597241405 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 'p'  WHEN NULL THEN 0.6329471265481621 ELSE 'X.\nT.zv' END)AND((-1.48060124E8 IN ()))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=1300686842 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.9544382426789467)|('0廫^{')))AND((((-1281859890)) BETWEEN ((NULL)) AND ((NULL))))))OR((('Xp') NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1730304748')) NOT BETWEEN (('-1513444406')) AND ((-800636))))-(CASE 0.8870238364129157  WHEN '235739151' THEN '*' ELSE x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-925405919 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('b|)Gyh^')>('(aᣕLo.~_V')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1764818906'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1054035363' COLLATE RTRIM)-(TRIM(DISTINCT 0x58f23011, x'bc00'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '235739151 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=944528961'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '543507782 sz=258374967 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'')||('1925158550')) THEN CAST(NULL AS REAL) WHEN ((0x714e32ca)AND(0.6691502582785012)) THEN (+ ('-349567425')) WHEN ((x'd5a2')>=('YwES')) THEN (((x'aa4f', '', 0.4478853686097024))>=((-217789489, '#j%j7+!+3', 0.6962032170503725))) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1655141733 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE GLOB(((NULL)GLOB('')), ((0.9340813790499244) BETWEEN (NULL) AND (''))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-200325581 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-666142885'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0X121d1a44 AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '0 -523325784 sz=456139089 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-542783928 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-22044070 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)%(NULL)))AND(((0.7569499295490072) NOT BETWEEN (x'') AND (x'4c30e627')))))OR(665049778)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(x'' AS INTEGER) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-984466748 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1664453928 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '547893506 2 sz=1122582637 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '1975076596 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-354619511 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE NULL  WHEN '947970457' THEN NULL WHEN x'' THEN '' WHEN x'' THEN '' ELSE x'' END IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN 0.668616690130653 THEN -1.924992168E9 WHEN 1.972032519E9 THEN 8.60005513E8 WHEN -1.44203848E9 THEN 0.030969973148367247 ELSE x'eb74' END THEN ((x'1bd7be52') BETWEEN (x'') AND (1627189052)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-382432534'))>((0.3489540435961225))))<=(((NULL)GLOB(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1621746043'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=867227602'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT ((-363742572)<=(x'')), CAST('-599702923' AS REAL)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1702248018 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=543507782 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('1594045505') NOT BETWEEN ('-148060124') AND (0.17877626789828527))  WHEN (('-2008624892')AND(NULL)) THEN ((0.32075660477176393) BETWEEN (NULL) AND (0.2010417319234833)) WHEN ((x'073d')AND(x'937b')) THEN ((((x'')OR(NULL)))AND(x'')) WHEN ((0.6618034705888752)OR(x'')) THEN (('0.5689931522893553')!=('aS')) ELSE ((x'')&('')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1707891233 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1156890003 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=266587472'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(x'' AS TEXT) THEN (0x7730023e IN ()) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.4611669859041829)AND(0.5204072766094446)) IN (((NULL) BETWEEN (NULL) AND (-1128552714)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((NULL) BETWEEN (0.8831337607383744) AND (0.5971902496294331)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1181501879 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '4 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=928777678 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('1835022977')))||(((0.27930364126022533) NOT BETWEEN ('-1484797777') AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NOT (x'29b6')) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(ABS('1627275755') AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-935524516'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array_length(('' IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-196356676 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (x'')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')|('947970457'))) NOT BETWEEN ((('-600673055') NOT BETWEEN (0.249963387230967) AND (NULL))) AND (((0.5448101865133447)==('-2080747078')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=-493619509 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN NULL THEN x'65f4' END THEN (((''))>=((NULL))) ELSE ((((((((x'1eda')OR(-1933308945)))OR('72638471')))AND(x'68bd')))AND(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6827764373041862)|('Z ')))>(('1492267025' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CHANGES()) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '-2035457783 sz=-807053398 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (x'')))<=(0.17913032033243725 COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ ('-2105740120'))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=1170000'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '0 sz=561186570 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1800503307 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(NULL AS BLOB) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '-1527027477 2 sz=674517674 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD((NOT (x'')), 0.2094308851734894); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1390610431'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((('')AND(0.7992893053015929)))AND(x'')) THEN ((NULL) IS TRUE) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=226533562 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=228288549 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((LIKELIHOOD(x'', 0.13809677522736497))AND((NOT ('-790076747')))))OR('poR&Nj|\n#')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1924992168 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=-2080747078'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE NOCASE) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 'ꂫ' THEN 0.2744847785885143 WHEN '-1924992168' THEN 0.2541468097075462 WHEN 0.40606651267790084 THEN 'N|' END) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(ABS(DISTINCT 'x(') AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-401596158 sz=-800636 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-821204171 2 -1205055275'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2016013803 sz=683130705'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-895337840 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-1730335145 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-458096214'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1496828023 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1692210139 sz=901521818 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=702333857 noskipscan'); -- 0ms;
PRAGMA main.short_column_names = true; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (NULL); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA application_id = -8994266127470918401; -- 0ms;
REINDEX; -- 0ms;
PRAGMA ignore_check_constraints; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (x''), ('n|'), (0.20413434508322037); -- 0ms;
UPDATE OR ABORT t0 SET c14=NULL, c0=NULL WHERE JULIANDAY((((t0.c14, t0.c0, t0.c14))>((t0.c0, t0.c0, t0.c0))), ((t0.c0)<=(t0.c14)), LIKELIHOOD(DISTINCT t0.c0, 0.4800908195649386), ((t0.c0) NOT NULL), CAST(t0.c0 AS BLOB)); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c41; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR ABORT t0 SET c14=1e500; -- 0ms;
UPDATE vt0 SET (c0)=(x'2a4966b0') WHERE CASE WHEN (((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END; -- 1ms;
UPDATE vt0 SET c0='#J%j7+!+3', c0='qu', c0='TRUE' WHERE vt0.c0; -- 0ms;
PRAGMA optimize; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
VACUUM; -- 1ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM temp; -- 0ms;
PRAGMA soft_heap_limit = 0; -- 0ms;
COMMIT; -- 0ms;
PRAGMA temp.threads = -6947877525746469939; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c14 TO c81; -- 0ms;
UPDATE OR IGNORE t0 SET c81='Ks', c41='BPl/v}' WHERE ((GLOB(t0.c81, t0.c41)) NOT BETWEEN (((t0.c81)IS(t0.c81))) AND (((t0.c41)-(t0.c41)))); -- 0ms;
ROLLBACK TRANSACTION; -- 2ms;
REINDEX; -- 8ms;
UPDATE OR ROLLBACK t0 SET (c81)=(1.594045505E9) WHERE CAST(CAST(t0.c41 AS TEXT) AS NUMERIC); -- 0ms;
PRAGMA main.auto_vacuum = FULL; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (1.999635006E9); -- 1ms;
UPDATE OR IGNORE t0 SET (c41, c41)=(0.5648259140460788, NULL) WHERE (~ (((t0.c81)IS NOT(t0.c81)))); -- 0ms;
INSERT OR ABORT INTO t0(c41) VALUES (0x70582aeb); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY('-800304268'); -- 1ms;
COMMIT; -- 0ms;
ALTER TABLE t0 ADD COLUMN c48 REAL; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 9ms;
CREATE UNIQUE INDEX IF NOT EXISTS i32 ON t0(((CAST(c81 AS REAL)) IS FALSE) DESC,(((((c48)OR(c48)))AND(c81)) IN (((c81) NOT BETWEEN (c81) AND (c81)))),((((c41)<=(c81))) ISNULL) COLLATE NOCASE) WHERE 0.051087772066905845; -- 0ms;
ANALYZE i32; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 30ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA foreign_keys = true; -- 0ms;
UPDATE t0 SET c48=NULL WHERE ((((t0.c41)OR((((t0.c81))>=((t0.c48))))))OR(NULL)); -- 0ms;
UPDATE vt0 SET (c0)=(0.01924480162390363) WHERE vt0.c0; -- 12ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('qu'); -- 9ms;
INSERT INTO vt0(vt0) VALUES('automerge=7'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 17ms;
UPDATE OR IGNORE vt0 SET c0=-800304268; -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('-432106303'); -- 10ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1992719927); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT OR ROLLBACK INTO t0(c48, c81) VALUES ('-910732675', NULL), (0xffffffff9db9dde5, x''), (0xffffffffe95d1b01, NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '49701'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE t0 SET (c41, c41)=(0.31480030320735464, 0.4586025393253258) WHERE (((t0.c81)||(t0.c48)) IN ()); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR ABORT vt0 SET c0=x'5d0768dd' WHERE 0.21681645931536642; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1714503803);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1306886253);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 8); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '14356'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA main.short_column_names; -- 0ms;
CREATE TEMPORARY TABLE t1 (c0 REAL , c1 TEXT , c2 TEXT ); -- 0ms;
INSERT OR ABORT INTO t0(c48, c41, c81) VALUES (0.7947515590267966, NULL, NULL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET c81=''; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('418737806'); -- 0ms;
INSERT OR IGNORE INTO t1(c1, c2) VALUES (NULL, NULL); -- 0ms;
REINDEX; -- 0ms;
PRAGMA optimize; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
CREATE TEMP TRIGGER IF NOT EXISTS tr0 BEFORE UPDATE OF c1, c2 ON t1 FOR EACH ROW  WHEN (~ (((t1.c1) ISNULL))) BEGIN SELECT RAISE(ABORT, 'asdf');SELECT RAISE(IGNORE);END; -- 0ms;
END TRANSACTION; -- 2ms;
REINDEX BINARY; -- 16ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA temp.shrink_memory; -- 0ms;
ALTER TABLE t1 RENAME COLUMN c1 TO c87; -- 1ms;
ALTER TABLE t0 ADD COLUMN c52 REAL; -- 1ms;
REINDEX; -- 16ms;
PRAGMA auto_vacuum = NONE; -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0); -- 0ms;
REINDEX i32; -- 0ms;
REINDEX; -- 4ms;
REINDEX i32; -- 0ms;
REINDEX; -- 0ms;
INSERT OR REPLACE INTO vt1 VALUES (NULL); -- 1ms;
REINDEX; -- 0ms;
ALTER TABLE t0 ADD COLUMN c84 INT; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -57293337);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1080784384); -- 0ms;
VACUUM temp; -- 0ms;
END; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM vt0, t0 WHERE ((((((t0.c41)AND(t0.c84)))OR(t0.c84)) IN (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((((t0.c41)AND(t0.c84)))OR(t0.c84)) IN (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((((t0.c41)AND(t0.c84)))OR(t0.c84)) IN (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((((t0.c41)AND(t0.c84)))OR(t0.c84)) IN (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((((t0.c41)AND(t0.c84)))OR(t0.c84)) IN (((vt0.c0) NOT NULL))));
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE (CAST(t1.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c0 AS REAL)) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE (CAST(t1.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c0 AS REAL)) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE (CAST(t1.c0 AS REAL));
SELECT ALL COUNT(*) FROM t0, t1, vt1, vt0 WHERE (((t1.c2)&(t0.c81)) COLLATE NOCASE) ORDER BY ABS(DISTINCT ((t1.c0) NOT BETWEEN (t1.c2) AND (t0.c41)));
SELECT SUM(count) FROM (SELECT ((((t1.c2)&(t0.c81)) COLLATE NOCASE) IS TRUE)  as count FROM t0, t1, vt1, vt0 ORDER BY ABS(DISTINCT ((t1.c0) NOT BETWEEN (t1.c2) AND (t0.c41))));
SELECT ALL COUNT(*) FROM t0, t1, vt1, vt0 WHERE (((t1.c2)&(t0.c81)) COLLATE NOCASE) ORDER BY ABS(DISTINCT ((t1.c0) NOT BETWEEN (t1.c2) AND (t0.c41)));
SELECT SUM(count) FROM (SELECT ((((t1.c2)&(t0.c81)) COLLATE NOCASE) IS TRUE)  as count FROM t0, t1, vt1, vt0 ORDER BY ABS(DISTINCT ((t1.c0) NOT BETWEEN (t1.c2) AND (t0.c41))));
SELECT ALL COUNT(*) FROM t0, t1, vt1, vt0 WHERE (((t1.c2)&(t0.c81)) COLLATE NOCASE) ORDER BY ABS(DISTINCT ((t1.c0) NOT BETWEEN (t1.c2) AND (t0.c41)));
SELECT * FROM t0, vt0, t1, vt1 WHERE (((((((t0.c81)/(t1.c2)))AND(IFNULL(t1.c0, t0.c81))))AND(CASE WHEN vt1.c0 THEN t1.c0 ELSE t0.c81 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c81)/(t1.c2)))AND(IFNULL(t1.c0, t0.c81))))AND(CASE WHEN vt1.c0 THEN t1.c0 ELSE t0.c81 END))) IS TRUE)  as count FROM t0, vt0, t1, vt1);
SELECT * FROM t0, vt0, t1, vt1 WHERE (((((((t0.c81)/(t1.c2)))AND(IFNULL(t1.c0, t0.c81))))AND(CASE WHEN vt1.c0 THEN t1.c0 ELSE t0.c81 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c81)/(t1.c2)))AND(IFNULL(t1.c0, t0.c81))))AND(CASE WHEN vt1.c0 THEN t1.c0 ELSE t0.c81 END))) IS TRUE)  as count FROM t0, vt0, t1, vt1);
SELECT * FROM t0, vt0, t1, vt1 WHERE (((((((t0.c81)/(t1.c2)))AND(IFNULL(t1.c0, t0.c81))))AND(CASE WHEN vt1.c0 THEN t1.c0 ELSE t0.c81 END)));
SELECT * FROM vt0, t1, t0 WHERE (CASE (t0.c48 IN (t0.c41))  WHEN (t0.c84 IN ()) THEN '-2080747078' WHEN CAST(t0.c84 AS INTEGER) THEN CASE WHEN t0.c41 THEN t0.c41 END WHEN ((((t0.c41)AND(t1.c1)))OR(t0.c41)) THEN (NOT (t0.c81)) ELSE t1.c1 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (t0.c48 IN (t0.c41))  WHEN (t0.c84 IN ()) THEN '-2080747078' WHEN CAST(t0.c84 AS INTEGER) THEN CASE WHEN t0.c41 THEN t0.c41 END WHEN ((((t0.c41)AND(t1.c1)))OR(t0.c41)) THEN (NOT (t0.c81)) ELSE t1.c1 COLLATE NOCASE END) IS TRUE)  as count FROM vt0, t1, t0);
SELECT * FROM vt0, t1, t0 WHERE (CASE (t0.c48 IN (t0.c41))  WHEN (t0.c84 IN ()) THEN '-2080747078' WHEN CAST(t0.c84 AS INTEGER) THEN CASE WHEN t0.c41 THEN t0.c41 END WHEN ((((t0.c41)AND(t1.c1)))OR(t0.c41)) THEN (NOT (t0.c81)) ELSE t1.c1 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (t0.c48 IN (t0.c41))  WHEN (t0.c84 IN ()) THEN '-2080747078' WHEN CAST(t0.c84 AS INTEGER) THEN CASE WHEN t0.c41 THEN t0.c41 END WHEN ((((t0.c41)AND(t1.c1)))OR(t0.c41)) THEN (NOT (t0.c81)) ELSE t1.c1 COLLATE NOCASE END) IS TRUE)  as count FROM vt0, t1, t0);
SELECT * FROM vt0, t1, t0 WHERE (CASE (t0.c48 IN (t0.c41))  WHEN (t0.c84 IN ()) THEN '-2080747078' WHEN CAST(t0.c84 AS INTEGER) THEN CASE WHEN t0.c41 THEN t0.c41 END WHEN ((((t0.c41)AND(t1.c1)))OR(t0.c41)) THEN (NOT (t0.c81)) ELSE t1.c1 COLLATE NOCASE END);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON (((((t0.c81)>(t0.c81)), json_object(t0.c41, t0.c48, vt0.c0, t0.c52), (+ (t0.c52))))>(((((t0.c81))==((t0.c81))), 0.17969033613487162, CAST(t0.c48 AS REAL)))) WHERE (CASE WHEN (+ (t0.c52)) THEN ((t0.c84)OR(t0.c81)) ELSE ((t0.c48) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (t0.c52)) THEN ((t0.c84)OR(t0.c81)) ELSE ((t0.c48) NOT NULL) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (((((t0.c81)>(t0.c81)), json_object(t0.c41, t0.c48, vt0.c0, t0.c52), (+ (t0.c52))))>(((((t0.c81))==((t0.c81))), 0.17969033613487162, CAST(t0.c48 AS REAL)))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON (((((t0.c81)>(t0.c81)), json_object(t0.c41, t0.c48, vt0.c0, t0.c52), (+ (t0.c52))))>(((((t0.c81))==((t0.c81))), 0.17969033613487162, CAST(t0.c48 AS REAL)))) WHERE (CASE WHEN (+ (t0.c52)) THEN ((t0.c84)OR(t0.c81)) ELSE ((t0.c48) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (t0.c52)) THEN ((t0.c84)OR(t0.c81)) ELSE ((t0.c48) NOT NULL) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (((((t0.c81)>(t0.c81)), json_object(t0.c41, t0.c48, vt0.c0, t0.c52), (+ (t0.c52))))>(((((t0.c81))==((t0.c81))), 0.17969033613487162, CAST(t0.c48 AS REAL)))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON (((((t0.c81)>(t0.c81)), json_object(t0.c41, t0.c48, vt0.c0, t0.c52), (+ (t0.c52))))>(((((t0.c81))==((t0.c81))), 0.17969033613487162, CAST(t0.c48 AS REAL)))) WHERE (CASE WHEN (+ (t0.c52)) THEN ((t0.c84)OR(t0.c81)) ELSE ((t0.c48) NOT NULL) END);
SELECT * FROM vt1, t0, vt0, t1 WHERE ((TYPEOF(t1.c0) IN ((t0.c52 IN ()), (- ('-1300828544')))));
SELECT SUM(count) FROM (SELECT ALL (((TYPEOF(t1.c0) IN ((t0.c52 IN ()), (- ('-1300828544'))))) IS TRUE)  as count FROM vt1, t0, vt0, t1);
SELECT * FROM vt1, t0, vt0, t1 WHERE ((TYPEOF(t1.c0) IN ((t0.c52 IN ()), (- ('-1300828544')))));
SELECT SUM(count) FROM (SELECT ALL (((TYPEOF(t1.c0) IN ((t0.c52 IN ()), (- ('-1300828544'))))) IS TRUE)  as count FROM vt1, t0, vt0, t1);
SELECT * FROM vt1, t0, vt0, t1 WHERE ((TYPEOF(t1.c0) IN ((t0.c52 IN ()), (- ('-1300828544')))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (x'');
SELECT COUNT(*) FROM t1, t0, vt0 WHERE ((((vt0.c0) NOT NULL) IN ())) ORDER BY ((CASE WHEN t0.c52 THEN t1.c2 ELSE t1.c2 END) NOT NULL);
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM t1, t0, vt0 ORDER BY ((CASE WHEN t0.c52 THEN t1.c2 ELSE t1.c2 END) NOT NULL));
SELECT COUNT(*) FROM t1, t0, vt0 WHERE ((((vt0.c0) NOT NULL) IN ())) ORDER BY ((CASE WHEN t0.c52 THEN t1.c2 ELSE t1.c2 END) NOT NULL);
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM t1, t0, vt0 ORDER BY ((CASE WHEN t0.c52 THEN t1.c2 ELSE t1.c2 END) NOT NULL));
SELECT COUNT(*) FROM t1, t0, vt0 WHERE ((((vt0.c0) NOT NULL) IN ())) ORDER BY ((CASE WHEN t0.c52 THEN t1.c2 ELSE t1.c2 END) NOT NULL);
SELECT ALL * FROM vt0, vt1 WHERE (COALESCE(vt1.c0, (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((COALESCE(vt1.c0, (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (COALESCE(vt1.c0, (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((COALESCE(vt1.c0, (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (COALESCE(vt1.c0, (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))));
SELECT ALL * FROM vt1 FULL OUTER JOIN t1 ON (((vt0.c0, t0.c81, t0.c52)) NOT BETWEEN ((((t0.c52) IS TRUE), CASE t0.c52  WHEN t1.c0 THEN t0.c81 ELSE t0.c84 END, ((vt0.c0) NOTNULL))) AND ((CAST(t0.c52 AS BLOB), (vt0.c0 IN ()), (((t0.c84))==((t0.c81)))))) LEFT OUTER JOIN t0 ON ((((x'')-(t1.c0))) IS TRUE) INNER JOIN vt0 ON (((('1385147660')AND((((vt1.c0))<=((t0.c81))))))AND(((((((((t1.c0)AND(t1.c2)))OR(t1.c0)))AND(NULL)))AND(t1.c0)))) WHERE (0.48547145278104953);
SELECT SUM(count) FROM (SELECT ALL ((0.48547145278104953) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t1 ON (((vt0.c0, t0.c81, t0.c52)) NOT BETWEEN ((((t0.c52) IS TRUE), CASE t0.c52  WHEN t1.c0 THEN t0.c81 ELSE t0.c84 END, ((vt0.c0) NOTNULL))) AND ((CAST(t0.c52 AS BLOB), (vt0.c0 IN ()), (((t0.c84))==((t0.c81)))))) LEFT OUTER JOIN t0 ON ((((x'')-(t1.c0))) IS TRUE) INNER JOIN vt0 ON (((('1385147660')AND((((vt1.c0))<=((t0.c81))))))AND(((((((((t1.c0)AND(t1.c2)))OR(t1.c0)))AND(NULL)))AND(t1.c0)))));
SELECT ALL * FROM vt1 FULL OUTER JOIN t1 ON (((vt0.c0, t0.c81, t0.c52)) NOT BETWEEN ((((t0.c52) IS TRUE), CASE t0.c52  WHEN t1.c0 THEN t0.c81 ELSE t0.c84 END, ((vt0.c0) NOTNULL))) AND ((CAST(t0.c52 AS BLOB), (vt0.c0 IN ()), (((t0.c84))==((t0.c81)))))) LEFT OUTER JOIN t0 ON ((((x'')-(t1.c0))) IS TRUE) INNER JOIN vt0 ON (((('1385147660')AND((((vt1.c0))<=((t0.c81))))))AND(((((((((t1.c0)AND(t1.c2)))OR(t1.c0)))AND(NULL)))AND(t1.c0)))) WHERE (0.48547145278104953);
SELECT SUM(count) FROM (SELECT ALL ((0.48547145278104953) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t1 ON (((vt0.c0, t0.c81, t0.c52)) NOT BETWEEN ((((t0.c52) IS TRUE), CASE t0.c52  WHEN t1.c0 THEN t0.c81 ELSE t0.c84 END, ((vt0.c0) NOTNULL))) AND ((CAST(t0.c52 AS BLOB), (vt0.c0 IN ()), (((t0.c84))==((t0.c81)))))) LEFT OUTER JOIN t0 ON ((((x'')-(t1.c0))) IS TRUE) INNER JOIN vt0 ON (((('1385147660')AND((((vt1.c0))<=((t0.c81))))))AND(((((((((t1.c0)AND(t1.c2)))OR(t1.c0)))AND(NULL)))AND(t1.c0)))));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN t0 ON CAST(t0.c52 AS INTEGER) WHERE (((0Xffffffffdc135221)AND(t0.c48 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((0Xffffffffdc135221)AND(t0.c48 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON CAST(t0.c52 AS INTEGER));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN t0 ON CAST(t0.c52 AS INTEGER) WHERE (((0Xffffffffdc135221)AND(t0.c48 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((0Xffffffffdc135221)AND(t0.c48 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON CAST(t0.c52 AS INTEGER));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN t0 ON CAST(t0.c52 AS INTEGER) WHERE (((0Xffffffffdc135221)AND(t0.c48 COLLATE NOCASE)));
SELECT COUNT(*) FROM t1, t0, vt0 WHERE (CASE CASE t0.c41  WHEN t0.c41 THEN t0.c84 WHEN t1.c0 THEN t0.c84 WHEN t0.c81 THEN NULL END  WHEN (- (vt0.c0)) THEN ((t0.c41) NOT NULL) WHEN ((t0.c81) NOTNULL) THEN ((t1.c2) NOT BETWEEN (t0.c48) AND (t1.c2)) WHEN HEX(DISTINCT t0.c84) THEN t0.c52 END) ORDER BY ((UNLIKELY(t0.c81))%(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE CASE t0.c41  WHEN t0.c41 THEN t0.c84 WHEN t1.c0 THEN t0.c84 WHEN t0.c81 THEN NULL END  WHEN (- (vt0.c0)) THEN ((t0.c41) NOT NULL) WHEN ((t0.c81) NOTNULL) THEN ((t1.c2) NOT BETWEEN (t0.c48) AND (t1.c2)) WHEN HEX(DISTINCT t0.c84) THEN t0.c52 END) IS TRUE)  as count FROM t1, t0, vt0 ORDER BY ((UNLIKELY(t0.c81))%(vt0.c0)) ASC);
SELECT COUNT(*) FROM t1, t0, vt0 WHERE (CASE CASE t0.c41  WHEN t0.c41 THEN t0.c84 WHEN t1.c0 THEN t0.c84 WHEN t0.c81 THEN NULL END  WHEN (- (vt0.c0)) THEN ((t0.c41) NOT NULL) WHEN ((t0.c81) NOTNULL) THEN ((t1.c2) NOT BETWEEN (t0.c48) AND (t1.c2)) WHEN HEX(DISTINCT t0.c84) THEN t0.c52 END) ORDER BY ((UNLIKELY(t0.c81))%(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE CASE t0.c41  WHEN t0.c41 THEN t0.c84 WHEN t1.c0 THEN t0.c84 WHEN t0.c81 THEN NULL END  WHEN (- (vt0.c0)) THEN ((t0.c41) NOT NULL) WHEN ((t0.c81) NOTNULL) THEN ((t1.c2) NOT BETWEEN (t0.c48) AND (t1.c2)) WHEN HEX(DISTINCT t0.c84) THEN t0.c52 END) IS TRUE)  as count FROM t1, t0, vt0 ORDER BY ((UNLIKELY(t0.c81))%(vt0.c0)) ASC);
SELECT COUNT(*) FROM t1, t0, vt0 WHERE (CASE CASE t0.c41  WHEN t0.c41 THEN t0.c84 WHEN t1.c0 THEN t0.c84 WHEN t0.c81 THEN NULL END  WHEN (- (vt0.c0)) THEN ((t0.c41) NOT NULL) WHEN ((t0.c81) NOTNULL) THEN ((t1.c2) NOT BETWEEN (t0.c48) AND (t1.c2)) WHEN HEX(DISTINCT t0.c84) THEN t0.c52 END) ORDER BY ((UNLIKELY(t0.c81))%(vt0.c0)) ASC;
SELECT ALL * FROM t0, vt1 WHERE (CAST((t0.c52 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((t0.c52 IN ()) AS INTEGER)) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (CAST((t0.c52 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((t0.c52 IN ()) AS INTEGER)) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (CAST((t0.c52 IN ()) AS INTEGER));
SELECT * FROM t1 CROSS JOIN vt1 ON ((((t1.c2 COLLATE RTRIM)AND((t0.c84 IN ()))))OR(CAST(t1.c2 AS BLOB))) CROSS JOIN t0 ON (((((t1.c1 IN ()))AND((t0.c48 IN ()))))OR(UPPER(t0.c52))) WHERE (((CASE t0.c84  WHEN t0.c48 THEN t1.c2 ELSE t1.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c84  WHEN t0.c48 THEN t1.c2 ELSE t1.c0 END) IS FALSE)) IS TRUE)  as count FROM t1 CROSS JOIN vt1 ON ((((t1.c2 COLLATE RTRIM)AND((t0.c84 IN ()))))OR(CAST(t1.c2 AS BLOB))) CROSS JOIN t0 ON (((((t1.c1 IN ()))AND((t0.c48 IN ()))))OR(UPPER(t0.c52))));
SELECT * FROM t1 CROSS JOIN vt1 ON ((((t1.c2 COLLATE RTRIM)AND((t0.c84 IN ()))))OR(CAST(t1.c2 AS BLOB))) CROSS JOIN t0 ON (((((t1.c1 IN ()))AND((t0.c48 IN ()))))OR(UPPER(t0.c52))) WHERE (((CASE t0.c84  WHEN t0.c48 THEN t1.c2 ELSE t1.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c84  WHEN t0.c48 THEN t1.c2 ELSE t1.c0 END) IS FALSE)) IS TRUE)  as count FROM t1 CROSS JOIN vt1 ON ((((t1.c2 COLLATE RTRIM)AND((t0.c84 IN ()))))OR(CAST(t1.c2 AS BLOB))) CROSS JOIN t0 ON (((((t1.c1 IN ()))AND((t0.c48 IN ()))))OR(UPPER(t0.c52))));
SELECT * FROM t1 CROSS JOIN vt1 ON ((((t1.c2 COLLATE RTRIM)AND((t0.c84 IN ()))))OR(CAST(t1.c2 AS BLOB))) CROSS JOIN t0 ON (((((t1.c1 IN ()))AND((t0.c48 IN ()))))OR(UPPER(t0.c52))) WHERE (((CASE t0.c84  WHEN t0.c48 THEN t1.c2 ELSE t1.c0 END) IS FALSE));
SELECT ALL * FROM t1 WHERE (((((((((t1.c1)OR(((((t1.c2)OR(t1.c1)))OR(t1.c2)))))AND(CASE WHEN t1.c2 THEN x'c54c' WHEN t1.c0 THEN '0.0' WHEN '*4' THEN t1.c1 END)))AND(t1.c2 COLLATE BINARY)))AND(t1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((((t1.c1)OR(((((t1.c2)OR(t1.c1)))OR(t1.c2)))))AND(CASE WHEN t1.c2 THEN x'c54c' WHEN t1.c0 THEN '0.0' WHEN '*4' THEN t1.c1 END)))AND(t1.c2 COLLATE BINARY)))AND(t1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((((((t1.c1)OR(((((t1.c2)OR(t1.c1)))OR(t1.c2)))))AND(CASE WHEN t1.c2 THEN x'c54c' WHEN t1.c0 THEN '0.0' WHEN '*4' THEN t1.c1 END)))AND(t1.c2 COLLATE BINARY)))AND(t1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((((t1.c1)OR(((((t1.c2)OR(t1.c1)))OR(t1.c2)))))AND(CASE WHEN t1.c2 THEN x'c54c' WHEN t1.c0 THEN '0.0' WHEN '*4' THEN t1.c1 END)))AND(t1.c2 COLLATE BINARY)))AND(t1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((((((t1.c1)OR(((((t1.c2)OR(t1.c1)))OR(t1.c2)))))AND(CASE WHEN t1.c2 THEN x'c54c' WHEN t1.c0 THEN '0.0' WHEN '*4' THEN t1.c1 END)))AND(t1.c2 COLLATE BINARY)))AND(t1.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c52)>>(t0.c41)))==(json_patch(t0.c41, t0.c41))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c52)>>(t0.c41)))=(json_patch(t0.c41, t0.c41)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c52)>>(t0.c41)))==(json_patch(t0.c41, t0.c41))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c52)>>(t0.c41)))=(json_patch(t0.c41, t0.c41)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c52)>>(t0.c41)))==(json_patch(t0.c41, t0.c41))));
SELECT ALL COUNT(*) FROM t0, t1 WHERE (((CAST('211121356' AS INTEGER)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST('211121356' AS INTEGER)) ISNULL)) IS TRUE)  as count FROM t0, t1);
SELECT ALL COUNT(*) FROM t0, t1 WHERE (((CAST('211121356' AS INTEGER)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST('211121356' AS INTEGER)) ISNULL)) IS TRUE)  as count FROM t0, t1);
SELECT ALL COUNT(*) FROM t0, t1 WHERE (((CAST('211121356' AS INTEGER)) ISNULL));
SELECT COUNT(*) FROM t1, vt0 WHERE ((((((((vt0.c0))>=((t1.c1))))AND(((((t1.c1)AND(vt0.c0)))AND(t1.c1)))))AND(((t1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0))>=((t1.c1))))AND(((((t1.c1)AND(vt0.c0)))AND(t1.c1)))))AND(((t1.c0) IS TRUE)))) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE ((((((((vt0.c0))>=((t1.c1))))AND(((((t1.c1)AND(vt0.c0)))AND(t1.c1)))))AND(((t1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0))>=((t1.c1))))AND(((((t1.c1)AND(vt0.c0)))AND(t1.c1)))))AND(((t1.c0) IS TRUE)))) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE ((((((((vt0.c0))>=((t1.c1))))AND(((((t1.c1)AND(vt0.c0)))AND(t1.c1)))))AND(((t1.c0) IS TRUE))));
SELECT * FROM t0, vt0, t1 WHERE ((((((t0.c52)&(t1.c0)), t0.c84, ((t0.c81) BETWEEN (t0.c84) AND (t0.c81)), ((t0.c81)IS NOT(t0.c84)), CAST(vt0.c0 AS BLOB)))<=((CASE WHEN t0.c41 THEN t1.c0 ELSE t1.c1 END, (t0.c48 IN ()), x'0141' COLLATE RTRIM, (+ (1681587928)), (t1.c1 IN (t1.c0)))))) ORDER BY CAST(NULL AS TEXT) ASC, '-1578765703' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c52)&(t1.c0)), t0.c84, ((t0.c81) BETWEEN (t0.c84) AND (t0.c81)), ((t0.c81)IS NOT(t0.c84)), CAST(vt0.c0 AS BLOB)))<=((CASE WHEN t0.c41 THEN t1.c0 ELSE t1.c1 END, (t0.c48 IN ()), x'0141' COLLATE RTRIM, (+ (1681587928)), (t1.c1 IN (t1.c0)))))) IS TRUE)  as count FROM t0, vt0, t1 ORDER BY CAST(NULL AS TEXT) ASC, '-1578765703' DESC  NULLS FIRST);
SELECT * FROM t0, vt0, t1 WHERE ((((((t0.c52)&(t1.c0)), t0.c84, ((t0.c81) BETWEEN (t0.c84) AND (t0.c81)), ((t0.c81)IS NOT(t0.c84)), CAST(vt0.c0 AS BLOB)))<=((CASE WHEN t0.c41 THEN t1.c0 ELSE t1.c1 END, (t0.c48 IN ()), x'0141' COLLATE RTRIM, (+ (1681587928)), (t1.c1 IN (t1.c0)))))) ORDER BY CAST(NULL AS TEXT) ASC, '-1578765703' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c52)&(t1.c0)), t0.c84, ((t0.c81) BETWEEN (t0.c84) AND (t0.c81)), ((t0.c81)IS NOT(t0.c84)), CAST(vt0.c0 AS BLOB)))<=((CASE WHEN t0.c41 THEN t1.c0 ELSE t1.c1 END, (t0.c48 IN ()), x'0141' COLLATE RTRIM, (+ (1681587928)), (t1.c1 IN (t1.c0)))))) IS TRUE)  as count FROM t0, vt0, t1 ORDER BY CAST(NULL AS TEXT) ASC, '-1578765703' DESC  NULLS FIRST);
SELECT * FROM t0, vt0, t1 WHERE ((((((t0.c52)&(t1.c0)), t0.c84, ((t0.c81) BETWEEN (t0.c84) AND (t0.c81)), ((t0.c81)IS NOT(t0.c84)), CAST(vt0.c0 AS BLOB)))<=((CASE WHEN t0.c41 THEN t1.c0 ELSE t1.c1 END, (t0.c48 IN ()), x'0141' COLLATE RTRIM, (+ (1681587928)), (t1.c1 IN (t1.c0)))))) ORDER BY CAST(NULL AS TEXT) ASC, '-1578765703' DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0, t1 NATURAL JOIN vt1 WHERE (t1.c1) ORDER BY t1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c1) IS TRUE)  as count FROM t0, vt0, t1 NATURAL JOIN vt1 ORDER BY t1.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0, t1 NATURAL JOIN vt1 WHERE (t1.c1) ORDER BY t1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c1) IS TRUE)  as count FROM t0, vt0, t1 NATURAL JOIN vt1 ORDER BY t1.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0, t1 NATURAL JOIN vt1 WHERE (t1.c1) ORDER BY t1.c0 ASC  NULLS LAST;
SELECT ALL * FROM vt0, t0, t1, vt1 WHERE (CASE WHEN ((x'fb6c3829') BETWEEN (t0.c52) AND (t0.c84)) THEN ((0.6684854318260082) BETWEEN (t0.c52) AND (t1.c2)) WHEN ((((t0.c84)OR(vt1.c0)))OR(t0.c84)) THEN t0.c52 COLLATE RTRIM WHEN ((t1.c0) ISNULL) THEN ((t0.c52)>=(t0.c52)) ELSE CASE t0.c41  WHEN t0.c41 THEN t1.c0 ELSE t0.c81 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((x'fb6c3829') BETWEEN (t0.c52) AND (t0.c84)) THEN ((0.6684854318260082) BETWEEN (t0.c52) AND (t1.c2)) WHEN ((((t0.c84)OR(vt1.c0)))OR(t0.c84)) THEN t0.c52 COLLATE RTRIM WHEN ((t1.c0) ISNULL) THEN ((t0.c52)>=(t0.c52)) ELSE CASE t0.c41  WHEN t0.c41 THEN t1.c0 ELSE t0.c81 END END) IS TRUE)  as count FROM vt0, t0, t1, vt1);
SELECT ALL * FROM vt0, t0, t1, vt1 WHERE (CASE WHEN ((x'fb6c3829') BETWEEN (t0.c52) AND (t0.c84)) THEN ((0.6684854318260082) BETWEEN (t0.c52) AND (t1.c2)) WHEN ((((t0.c84)OR(vt1.c0)))OR(t0.c84)) THEN t0.c52 COLLATE RTRIM WHEN ((t1.c0) ISNULL) THEN ((t0.c52)>=(t0.c52)) ELSE CASE t0.c41  WHEN t0.c41 THEN t1.c0 ELSE t0.c81 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((x'fb6c3829') BETWEEN (t0.c52) AND (t0.c84)) THEN ((0.6684854318260082) BETWEEN (t0.c52) AND (t1.c2)) WHEN ((((t0.c84)OR(vt1.c0)))OR(t0.c84)) THEN t0.c52 COLLATE RTRIM WHEN ((t1.c0) ISNULL) THEN ((t0.c52)>=(t0.c52)) ELSE CASE t0.c41  WHEN t0.c41 THEN t1.c0 ELSE t0.c81 END END) IS TRUE)  as count FROM vt0, t0, t1, vt1);
SELECT ALL * FROM vt0, t0, t1, vt1 WHERE (CASE WHEN ((x'fb6c3829') BETWEEN (t0.c52) AND (t0.c84)) THEN ((0.6684854318260082) BETWEEN (t0.c52) AND (t1.c2)) WHEN ((((t0.c84)OR(vt1.c0)))OR(t0.c84)) THEN t0.c52 COLLATE RTRIM WHEN ((t1.c0) ISNULL) THEN ((t0.c52)>=(t0.c52)) ELSE CASE t0.c41  WHEN t0.c41 THEN t1.c0 ELSE t0.c81 END END);
SELECT * FROM t1, t0 WHERE ((((t0.c81 IN ())) NOT BETWEEN ((t0.c84 IN (t0.c41))) AND (CAST(t1.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c81 IN ())) NOT BETWEEN ((t0.c84 IN (t0.c41))) AND (CAST(t1.c1 AS INTEGER)))) IS TRUE)  as count FROM t1, t0);
SELECT * FROM t1, t0 WHERE ((((t0.c81 IN ())) NOT BETWEEN ((t0.c84 IN (t0.c41))) AND (CAST(t1.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c81 IN ())) NOT BETWEEN ((t0.c84 IN (t0.c41))) AND (CAST(t1.c1 AS INTEGER)))) IS TRUE)  as count FROM t1, t0);
SELECT * FROM t1, t0 WHERE ((((t0.c81 IN ())) NOT BETWEEN ((t0.c84 IN (t0.c41))) AND (CAST(t1.c1 AS INTEGER))));
SELECT * FROM vt1, t1 WHERE (CASE t1.c1  WHEN (t1.c0 IN (t1.c2)) THEN ((t1.c2)|(t1.c2)) END) ORDER BY (((('1807557056') NOTNULL))GLOB(CASE WHEN vt1.c0 THEN t1.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE t1.c1  WHEN (t1.c0 IN (t1.c2)) THEN ((t1.c2)|(t1.c2)) END) IS TRUE)  as count FROM vt1, t1 ORDER BY (((('1807557056') NOTNULL))GLOB(CASE WHEN vt1.c0 THEN t1.c1 END)) DESC  NULLS FIRST);
SELECT * FROM vt1, t1 WHERE (CASE t1.c1  WHEN (t1.c0 IN (t1.c2)) THEN ((t1.c2)|(t1.c2)) END) ORDER BY (((('1807557056') NOTNULL))GLOB(CASE WHEN vt1.c0 THEN t1.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE t1.c1  WHEN (t1.c0 IN (t1.c2)) THEN ((t1.c2)|(t1.c2)) END) IS TRUE)  as count FROM vt1, t1 ORDER BY (((('1807557056') NOTNULL))GLOB(CASE WHEN vt1.c0 THEN t1.c1 END)) DESC  NULLS FIRST);
SELECT * FROM vt1, t1 WHERE (CASE t1.c1  WHEN (t1.c0 IN (t1.c2)) THEN ((t1.c2)|(t1.c2)) END) ORDER BY (((('1807557056') NOTNULL))GLOB(CASE WHEN vt1.c0 THEN t1.c1 END)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, t0, vt0, vt1 WHERE ('1\n3''O*') ORDER BY CAST(((t1.c1)<<(t0.c48)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('1\n3''O*') IS TRUE)  as count FROM t1, t0, vt0, vt1 ORDER BY CAST(((t1.c1)<<(t0.c48)) AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, t0, vt0, vt1 WHERE ('1\n3''O*') ORDER BY CAST(((t1.c1)<<(t0.c48)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('1\n3''O*') IS TRUE)  as count FROM t1, t0, vt0, vt1 ORDER BY CAST(((t1.c1)<<(t0.c48)) AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, t0, vt0, vt1 WHERE ('1\n3''O*') ORDER BY CAST(((t1.c1)<<(t0.c48)) AS INTEGER)  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 LEFT OUTER JOIN t1 ON ((((((((((t0.c48)OR(t0.c81)))OR(t0.c41)))OR(t1.c1)))OR(vt0.c0)))IS NOT((((t0.c81))>((t0.c48))))) WHERE (x'c8a6');
SELECT SUM(count) FROM (SELECT ((x'c8a6') IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN t1 ON ((((((((((t0.c48)OR(t0.c81)))OR(t0.c41)))OR(t1.c1)))OR(vt0.c0)))IS NOT((((t0.c81))>((t0.c48))))));
SELECT COUNT(*) FROM t0, vt0 LEFT OUTER JOIN t1 ON ((((((((((t0.c48)OR(t0.c81)))OR(t0.c41)))OR(t1.c1)))OR(vt0.c0)))IS NOT((((t0.c81))>((t0.c48))))) WHERE (x'c8a6');
SELECT SUM(count) FROM (SELECT ((x'c8a6') IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN t1 ON ((((((((((t0.c48)OR(t0.c81)))OR(t0.c41)))OR(t1.c1)))OR(vt0.c0)))IS NOT((((t0.c81))>((t0.c48))))));
SELECT COUNT(*) FROM t0, vt0 LEFT OUTER JOIN t1 ON ((((((((((t0.c48)OR(t0.c81)))OR(t0.c41)))OR(t1.c1)))OR(vt0.c0)))IS NOT((((t0.c81))>((t0.c48))))) WHERE (x'c8a6');
SELECT ALL * FROM vt0 NATURAL JOIN t1 WHERE (((CASE WHEN t1.c2 THEN t1.c2 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c2 END) BETWEEN (((t1.c2)LIKE(t1.c2))) AND (CAST(t1.c1 AS REAL)))) ORDER BY CASE json_array_length(vt0.c0)  WHEN CAST(t1.c0 AS BLOB) THEN x'bb94' ELSE vt0.c0 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t1.c2 THEN t1.c2 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c2 END) BETWEEN (((t1.c2)LIKE(t1.c2))) AND (CAST(t1.c1 AS REAL)))) IS TRUE)  as count FROM vt0 NATURAL JOIN t1 ORDER BY CASE json_array_length(vt0.c0)  WHEN CAST(t1.c0 AS BLOB) THEN x'bb94' ELSE vt0.c0 END DESC  NULLS LAST);
SELECT ALL * FROM vt0 NATURAL JOIN t1 WHERE (((CASE WHEN t1.c2 THEN t1.c2 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c2 END) BETWEEN (((t1.c2)LIKE(t1.c2))) AND (CAST(t1.c1 AS REAL)))) ORDER BY CASE json_array_length(vt0.c0)  WHEN CAST(t1.c0 AS BLOB) THEN x'bb94' ELSE vt0.c0 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t1.c2 THEN t1.c2 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c2 END) BETWEEN (((t1.c2)LIKE(t1.c2))) AND (CAST(t1.c1 AS REAL)))) IS TRUE)  as count FROM vt0 NATURAL JOIN t1 ORDER BY CASE json_array_length(vt0.c0)  WHEN CAST(t1.c0 AS BLOB) THEN x'bb94' ELSE vt0.c0 END DESC  NULLS LAST);
SELECT ALL * FROM vt0 NATURAL JOIN t1 WHERE (((CASE WHEN t1.c2 THEN t1.c2 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c2 END) BETWEEN (((t1.c2)LIKE(t1.c2))) AND (CAST(t1.c1 AS REAL)))) ORDER BY CASE json_array_length(vt0.c0)  WHEN CAST(t1.c0 AS BLOB) THEN x'bb94' ELSE vt0.c0 END DESC  NULLS LAST;
SELECT COUNT(*) FROM t1, vt1 WHERE (((((vt1.c0) NOTNULL)) IS FALSE)) ORDER BY CAST((((t1.c0)) BETWEEN ((vt1.c0)) AND ((6.45093747E8))) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM t1, vt1 ORDER BY CAST((((t1.c0)) BETWEEN ((vt1.c0)) AND ((6.45093747E8))) AS TEXT) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt1 WHERE (((((vt1.c0) NOTNULL)) IS FALSE)) ORDER BY CAST((((t1.c0)) BETWEEN ((vt1.c0)) AND ((6.45093747E8))) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM t1, vt1 ORDER BY CAST((((t1.c0)) BETWEEN ((vt1.c0)) AND ((6.45093747E8))) AS TEXT) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt1 WHERE (((((vt1.c0) NOTNULL)) IS FALSE)) ORDER BY CAST((((t1.c0)) BETWEEN ((vt1.c0)) AND ((6.45093747E8))) AS TEXT) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1, t0, t1 WHERE (((CAST(vt0.c0 AS REAL))LIKE((NOT (t1.c0))))) ORDER BY ((vt0.c0)IS NOT(t0.c84)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL))LIKE((NOT (t1.c0))))) IS TRUE)  as count FROM vt0, vt1, t0, t1 ORDER BY ((vt0.c0)IS NOT(t0.c84)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1, t0, t1 WHERE (((CAST(vt0.c0 AS REAL))LIKE((NOT (t1.c0))))) ORDER BY ((vt0.c0)IS NOT(t0.c84)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL))LIKE((NOT (t1.c0))))) IS TRUE)  as count FROM vt0, vt1, t0, t1 ORDER BY ((vt0.c0)IS NOT(t0.c84)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1, t0, t1 WHERE (((CAST(vt0.c0 AS REAL))LIKE((NOT (t1.c0))))) ORDER BY ((vt0.c0)IS NOT(t0.c84)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE (((LENGTH(vt1.c0))&(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((LENGTH(vt1.c0))&(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((LENGTH(vt1.c0))&(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((LENGTH(vt1.c0))&(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((LENGTH(vt1.c0))&(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0, t1, t0, vt1 WHERE ((((t0.c48)) BETWEEN ((((((x'0813')AND(t0.c48)))AND(vt1.c0)))) AND ((((t1.c2) NOT BETWEEN (t0.c84) AND (vt1.c0)))))) ORDER BY 0.8647321612675734 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c48)) BETWEEN ((((((x'0813')AND(t0.c48)))AND(vt1.c0)))) AND ((((t1.c2) NOT BETWEEN (t0.c84) AND (vt1.c0)))))) IS TRUE)  as count FROM vt0, t1, t0, vt1 ORDER BY 0.8647321612675734 ASC);
SELECT COUNT(*) FROM vt0, t1, t0, vt1 WHERE ((((t0.c48)) BETWEEN ((((((x'0813')AND(t0.c48)))AND(vt1.c0)))) AND ((((t1.c2) NOT BETWEEN (t0.c84) AND (vt1.c0)))))) ORDER BY 0.8647321612675734 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c48)) BETWEEN ((((((x'0813')AND(t0.c48)))AND(vt1.c0)))) AND ((((t1.c2) NOT BETWEEN (t0.c84) AND (vt1.c0)))))) IS TRUE)  as count FROM vt0, t1, t0, vt1 ORDER BY 0.8647321612675734 ASC);
SELECT COUNT(*) FROM vt0, t1, t0, vt1 WHERE ((((t0.c48)) BETWEEN ((((((x'0813')AND(t0.c48)))AND(vt1.c0)))) AND ((((t1.c2) NOT BETWEEN (t0.c84) AND (vt1.c0)))))) ORDER BY 0.8647321612675734 ASC;
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN vt0 ON CASE WHEN CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c2 END THEN ((vt0.c0)+(t1.c0)) ELSE ((vt0.c0)*(vt0.c0)) END WHERE (t1.c2);
SELECT SUM(count) FROM (SELECT ((t1.c2) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON CASE WHEN CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c2 END THEN ((vt0.c0)+(t1.c0)) ELSE ((vt0.c0)*(vt0.c0)) END);
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN vt0 ON CASE WHEN CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c2 END THEN ((vt0.c0)+(t1.c0)) ELSE ((vt0.c0)*(vt0.c0)) END WHERE (t1.c2);
SELECT SUM(count) FROM (SELECT ((t1.c2) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON CASE WHEN CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c2 END THEN ((vt0.c0)+(t1.c0)) ELSE ((vt0.c0)*(vt0.c0)) END);
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN vt0 ON CASE WHEN CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c2 END THEN ((vt0.c0)+(t1.c0)) ELSE ((vt0.c0)*(vt0.c0)) END WHERE (t1.c2);
SELECT ALL * FROM t0, vt0 WHERE (t0.c81);
SELECT SUM(count) FROM (SELECT ((t0.c81) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (t0.c81);
SELECT SUM(count) FROM (SELECT ((t0.c81) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (t0.c81);
SELECT ALL * FROM t0, vt0 WHERE (t0.c84) ORDER BY (- ((NOT (t0.c52))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c84) IS TRUE)  as count FROM t0, vt0 ORDER BY (- ((NOT (t0.c52))))  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (t0.c84) ORDER BY (- ((NOT (t0.c52))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c84) IS TRUE)  as count FROM t0, vt0 ORDER BY (- ((NOT (t0.c52))))  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (t0.c84) ORDER BY (- ((NOT (t0.c52))))  NULLS LAST;
SELECT COUNT(*) FROM t1 NOT INDEXED, vt0, vt1, t0 WHERE ((vt0.c0 COLLATE NOCASE IN ())) ORDER BY CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c2))  WHEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE t1.c1 END THEN vt0.c0 COLLATE NOCASE ELSE ((t0.c48)<=(t0.c41)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM t1, vt0, vt1, t0 ORDER BY CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c2))  WHEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE t1.c1 END THEN vt0.c0 COLLATE NOCASE ELSE ((t0.c48)<=(t0.c41)) END DESC);
SELECT COUNT(*) FROM t1 NOT INDEXED, vt0, vt1, t0 WHERE ((vt0.c0 COLLATE NOCASE IN ())) ORDER BY CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c2))  WHEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE t1.c1 END THEN vt0.c0 COLLATE NOCASE ELSE ((t0.c48)<=(t0.c41)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM t1, vt0, vt1, t0 ORDER BY CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c2))  WHEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE t1.c1 END THEN vt0.c0 COLLATE NOCASE ELSE ((t0.c48)<=(t0.c41)) END DESC);
SELECT COUNT(*) FROM t1 NOT INDEXED, vt0, vt1, t0 WHERE ((vt0.c0 COLLATE NOCASE IN ())) ORDER BY CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c2))  WHEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE t1.c1 END THEN vt0.c0 COLLATE NOCASE ELSE ((t0.c48)<=(t0.c41)) END DESC;
SELECT * FROM vt0 WHERE (CAST(((vt0.c0)IS(vt0.c0)) AS TEXT)) ORDER BY (((vt0.c0)AND(vt0.c0)) IN (((vt0.c0)IS(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)IS(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)AND(vt0.c0)) IN (((vt0.c0)IS(vt0.c0)))));
SELECT * FROM vt0 WHERE (CAST(((vt0.c0)IS(vt0.c0)) AS TEXT)) ORDER BY (((vt0.c0)AND(vt0.c0)) IN (((vt0.c0)IS(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)IS(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)AND(vt0.c0)) IN (((vt0.c0)IS(vt0.c0)))));
SELECT * FROM vt0 WHERE (CAST(((vt0.c0)IS(vt0.c0)) AS TEXT)) ORDER BY (((vt0.c0)AND(vt0.c0)) IN (((vt0.c0)IS(vt0.c0))));
SELECT * FROM t1, vt0, vt1 WHERE (((((t1.c2) BETWEEN (t1.c2) AND (t1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c2) BETWEEN (t1.c2) AND (t1.c0))) ISNULL)) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT * FROM t1, vt0, vt1 WHERE (((((t1.c2) BETWEEN (t1.c2) AND (t1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c2) BETWEEN (t1.c2) AND (t1.c0))) ISNULL)) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT * FROM t1, vt0, vt1 WHERE (((((t1.c2) BETWEEN (t1.c2) AND (t1.c0))) ISNULL));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((((((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c2)))OR(((((t1.c1)OR(vt0.c0)))OR(t1.c0)))))OR(((0.559796253353628)IS(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c2)))OR(((((t1.c1)OR(vt0.c0)))OR(t1.c0)))))OR(((0.559796253353628)IS(NULL))))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((((((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c2)))OR(((((t1.c1)OR(vt0.c0)))OR(t1.c0)))))OR(((0.559796253353628)IS(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c2)))OR(((((t1.c1)OR(vt0.c0)))OR(t1.c0)))))OR(((0.559796253353628)IS(NULL))))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((((((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c2)))OR(((((t1.c1)OR(vt0.c0)))OR(t1.c0)))))OR(((0.559796253353628)IS(NULL)))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN t1 ON (((((((t1.c1))>((t0.c84))))AND(t1.c2)))OR(((t0.c48) BETWEEN (t1.c1) AND (t0.c81)))) WHERE (((((((t0.c84)AND(t1.c0)))AND(t0.c52)))+((t0.c52 IN (x'', t1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c84)AND(t1.c0)))AND(t0.c52)))+((t0.c52 IN (x'', t1.c2))))) IS TRUE)  as count FROM t0 INNER JOIN t1 ON (((((((t1.c1))>((t0.c84))))AND(t1.c2)))OR(((t0.c48) BETWEEN (t1.c1) AND (t0.c81)))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN t1 ON (((((((t1.c1))>((t0.c84))))AND(t1.c2)))OR(((t0.c48) BETWEEN (t1.c1) AND (t0.c81)))) WHERE (((((((t0.c84)AND(t1.c0)))AND(t0.c52)))+((t0.c52 IN (x'', t1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c84)AND(t1.c0)))AND(t0.c52)))+((t0.c52 IN (x'', t1.c2))))) IS TRUE)  as count FROM t0 INNER JOIN t1 ON (((((((t1.c1))>((t0.c84))))AND(t1.c2)))OR(((t0.c48) BETWEEN (t1.c1) AND (t0.c81)))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN t1 ON (((((((t1.c1))>((t0.c84))))AND(t1.c2)))OR(((t0.c48) BETWEEN (t1.c1) AND (t0.c81)))) WHERE (((((((t0.c84)AND(t1.c0)))AND(t0.c52)))+((t0.c52 IN (x'', t1.c2)))));
SELECT * FROM t0, t1 WHERE (JULIANDAY(((t1.c2) NOT BETWEEN (t0.c41) AND (t0.c81)), ((t0.c84) IS FALSE), (0.20145145610915272 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY(((t1.c2) NOT BETWEEN (t0.c41) AND (t0.c81)), ((t0.c84) IS FALSE), (0.20145145610915272 IN ()))) IS TRUE)  as count FROM t0, t1);
SELECT * FROM t0, t1 WHERE (JULIANDAY(((t1.c2) NOT BETWEEN (t0.c41) AND (t0.c81)), ((t0.c84) IS FALSE), (0.20145145610915272 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY(((t1.c2) NOT BETWEEN (t0.c41) AND (t0.c81)), ((t0.c84) IS FALSE), (0.20145145610915272 IN ()))) IS TRUE)  as count FROM t0, t1);
SELECT * FROM t0, t1 WHERE (JULIANDAY(((t1.c2) NOT BETWEEN (t0.c41) AND (t0.c81)), ((t0.c84) IS FALSE), (0.20145145610915272 IN ())));
SELECT COUNT(*) FROM vt0, vt1 WHERE ('N.1-');
SELECT SUM(count) FROM (SELECT ALL (('N.1-') IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ('N.1-');
SELECT SUM(count) FROM (SELECT ALL (('N.1-') IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ('N.1-');
SELECT ALL * FROM vt1, t1, vt0 WHERE ((((t1.c0 IN ()))>=(t1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0 IN ()))>=(t1.c0))) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL * FROM vt1, t1, vt0 WHERE ((((t1.c0 IN ()))>=(t1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0 IN ()))>=(t1.c0))) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL * FROM vt1, t1, vt0 WHERE ((((t1.c0 IN ()))>=(t1.c0)));
SELECT ALL * FROM t1, vt0, vt1, t0 WHERE ((((((vt0.c0 IN (t0.c52)))OR(((((t1.c0)AND(t0.c52)))AND(t0.c81)))))OR((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c52)))))) ORDER BY ((((t1.c2)IS(t0.c81)))IS(t0.c84 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0 IN (t0.c52)))OR(((((t1.c0)AND(t0.c52)))AND(t0.c81)))))OR((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c52)))))) IS TRUE)  as count FROM t1, vt0, vt1, t0 ORDER BY ((((t1.c2)IS(t0.c81)))IS(t0.c84 COLLATE NOCASE)));
SELECT ALL * FROM t1, vt0, vt1, t0 WHERE ((((((vt0.c0 IN (t0.c52)))OR(((((t1.c0)AND(t0.c52)))AND(t0.c81)))))OR((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c52)))))) ORDER BY ((((t1.c2)IS(t0.c81)))IS(t0.c84 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0 IN (t0.c52)))OR(((((t1.c0)AND(t0.c52)))AND(t0.c81)))))OR((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c52)))))) IS TRUE)  as count FROM t1, vt0, vt1, t0 ORDER BY ((((t1.c2)IS(t0.c81)))IS(t0.c84 COLLATE NOCASE)));
SELECT ALL * FROM t1, vt0, vt1, t0 WHERE ((((((vt0.c0 IN (t0.c52)))OR(((((t1.c0)AND(t0.c52)))AND(t0.c81)))))OR((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c52)))))) ORDER BY ((((t1.c2)IS(t0.c81)))IS(t0.c84 COLLATE NOCASE));
SELECT ALL * FROM vt0, t1, t0 INNER JOIN vt1 ON CASE WHEN (+ (t0.c84)) THEN ((t0.c41)=(t0.c81)) ELSE (~ (t0.c48)) END WHERE ((((((((((((((((((t1.c2)AND('0.4175121272128678')))AND(t0.c81)))AND(vt1.c0)))OR(t0.c52)))OR(vt1.c0)))OR(t0.c84)))AND(t0.c48)))AND(vt0.c0)) IN ())) ORDER BY ((CAST(t1.c1 AS BLOB)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT (((((((((((((((((((t1.c2)AND('0.4175121272128678')))AND(t0.c81)))AND(vt1.c0)))OR(t0.c52)))OR(vt1.c0)))OR(t0.c84)))AND(t0.c48)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, t1, t0 INNER JOIN vt1 ON CASE WHEN (+ (t0.c84)) THEN ((t0.c41)=(t0.c81)) ELSE (~ (t0.c48)) END ORDER BY ((CAST(t1.c1 AS BLOB)) NOTNULL) DESC);
SELECT ALL * FROM vt0, t1, t0 INNER JOIN vt1 ON CASE WHEN (+ (t0.c84)) THEN ((t0.c41)=(t0.c81)) ELSE (~ (t0.c48)) END WHERE ((((((((((((((((((t1.c2)AND('0.4175121272128678')))AND(t0.c81)))AND(vt1.c0)))OR(t0.c52)))OR(vt1.c0)))OR(t0.c84)))AND(t0.c48)))AND(vt0.c0)) IN ())) ORDER BY ((CAST(t1.c1 AS BLOB)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT (((((((((((((((((((t1.c2)AND('0.4175121272128678')))AND(t0.c81)))AND(vt1.c0)))OR(t0.c52)))OR(vt1.c0)))OR(t0.c84)))AND(t0.c48)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, t1, t0 INNER JOIN vt1 ON CASE WHEN (+ (t0.c84)) THEN ((t0.c41)=(t0.c81)) ELSE (~ (t0.c48)) END ORDER BY ((CAST(t1.c1 AS BLOB)) NOTNULL) DESC);
SELECT ALL * FROM vt0, t1, t0 INNER JOIN vt1 ON CASE WHEN (+ (t0.c84)) THEN ((t0.c41)=(t0.c81)) ELSE (~ (t0.c48)) END WHERE ((((((((((((((((((t1.c2)AND('0.4175121272128678')))AND(t0.c81)))AND(vt1.c0)))OR(t0.c52)))OR(vt1.c0)))OR(t0.c84)))AND(t0.c48)))AND(vt0.c0)) IN ())) ORDER BY ((CAST(t1.c1 AS BLOB)) NOTNULL) DESC;
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (vt1.c0) ORDER BY CAST(t1.c0 AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY CAST(t1.c0 AS BLOB) ASC);
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (vt1.c0) ORDER BY CAST(t1.c0 AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY CAST(t1.c0 AS BLOB) ASC);
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (vt1.c0) ORDER BY CAST(t1.c0 AS BLOB) ASC;
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c52)AND(t0.c41)))OR(t0.c41)))AND(t0.c52)))AND(t0.c52))) BETWEEN ((t0.c81 IN (t0.c48))) AND (LAST_INSERT_ROWID()))) ORDER BY t0.c52 DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c52)AND(t0.c41)))OR(t0.c41)))AND(t0.c52)))AND(t0.c52))) BETWEEN ((t0.c81 IN (t0.c48))) AND (LAST_INSERT_ROWID()))) IS TRUE)  as count FROM t0 ORDER BY t0.c52 DESC);
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c52)AND(t0.c41)))OR(t0.c41)))AND(t0.c52)))AND(t0.c52))) BETWEEN ((t0.c81 IN (t0.c48))) AND (LAST_INSERT_ROWID()))) ORDER BY t0.c52 DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c52)AND(t0.c41)))OR(t0.c41)))AND(t0.c52)))AND(t0.c52))) BETWEEN ((t0.c81 IN (t0.c48))) AND (LAST_INSERT_ROWID()))) IS TRUE)  as count FROM t0 ORDER BY t0.c52 DESC);
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c52)AND(t0.c41)))OR(t0.c41)))AND(t0.c52)))AND(t0.c52))) BETWEEN ((t0.c81 IN (t0.c48))) AND (LAST_INSERT_ROWID()))) ORDER BY t0.c52 DESC;
SELECT ALL COUNT(*) FROM t1, t0, vt1 WHERE (((t0.c81)OR(t1.c1)) COLLATE RTRIM) ORDER BY t0.c52;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c81)OR(t1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t1, t0, vt1 ORDER BY t0.c52);
SELECT ALL COUNT(*) FROM t1, t0, vt1 WHERE (((t0.c81)OR(t1.c1)) COLLATE RTRIM) ORDER BY t0.c52;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c81)OR(t1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t1, t0, vt1 ORDER BY t0.c52);
SELECT ALL COUNT(*) FROM t1, t0, vt1 WHERE (((t0.c81)OR(t1.c1)) COLLATE RTRIM) ORDER BY t0.c52;
SELECT ALL * FROM vt0 INDEXED BY i32, vt1 WHERE (((((vt0.c0) BETWEEN ('') AND (vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN ('') AND (vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 INDEXED BY i32, vt1);
SELECT ALL * FROM vt0 INDEXED BY i32, vt1 WHERE (((((vt0.c0) BETWEEN ('') AND (vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN ('') AND (vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 INDEXED BY i32, vt1);
SELECT ALL * FROM vt0, t1 WHERE (((t1.c1)*(t1.c2))) ORDER BY x'1a51' DESC, load_extension((((t1.c2))>((vt0.c0)))) ASC, (+ (((t1.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((t1.c1)*(t1.c2))) IS TRUE)  as count FROM vt0, t1 ORDER BY x'1a51' DESC, load_extension((((t1.c2))>((vt0.c0)))) ASC, (+ (((t1.c0) NOT NULL))) ASC);
SELECT ALL * FROM vt0, t1 WHERE (((t1.c1)*(t1.c2))) ORDER BY x'1a51' DESC, load_extension((((t1.c2))>((vt0.c0)))) ASC, (+ (((t1.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((t1.c1)*(t1.c2))) IS TRUE)  as count FROM vt0, t1 ORDER BY x'1a51' DESC, load_extension((((t1.c2))>((vt0.c0)))) ASC, (+ (((t1.c0) NOT NULL))) ASC);
SELECT ALL * FROM vt1, t0 WHERE (((((t0.c81 IN (t0.c41)), t0.c52, vt1.c0))!=((TYPEOF(t0.c81), '1092517694', ((t0.c48) ISNULL)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c81 IN (t0.c41)), t0.c52, vt1.c0))!=((TYPEOF(t0.c81), '1092517694', ((t0.c48) ISNULL))))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (((((t0.c81 IN (t0.c41)), t0.c52, vt1.c0))!=((TYPEOF(t0.c81), '1092517694', ((t0.c48) ISNULL)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c81 IN (t0.c41)), t0.c52, vt1.c0))!=((TYPEOF(t0.c81), '1092517694', ((t0.c48) ISNULL))))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (((((t0.c81 IN (t0.c41)), t0.c52, vt1.c0))!=((TYPEOF(t0.c81), '1092517694', ((t0.c48) ISNULL)))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN t1 ON (((NOT (vt1.c0)))<=(CAST(t0.c41 AS NUMERIC))) CROSS JOIN vt0 ON ((t0.c52) NOT BETWEEN (t0.c48) AND (t1.c2)) COLLATE NOCASE FULL OUTER JOIN vt1 ON (CASE NULL  WHEN t0.c52 THEN t1.c1 WHEN t0.c41 THEN t1.c0 WHEN 0xffffffffd92b944c THEN t0.c52 END IN ((((t0.c81)) BETWEEN ((t0.c52)) AND ((t0.c81))))) WHERE ('Sd_F') ORDER BY 0.5730328162834593  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('Sd_F') IS TRUE)  as count FROM t0 INNER JOIN t1 ON (((NOT (vt1.c0)))<=(CAST(t0.c41 AS NUMERIC))) CROSS JOIN vt0 ON ((t0.c52) NOT BETWEEN (t0.c48) AND (t1.c2)) COLLATE NOCASE FULL OUTER JOIN vt1 ON (CASE NULL  WHEN t0.c52 THEN t1.c1 WHEN t0.c41 THEN t1.c0 WHEN 0xffffffffd92b944c THEN t0.c52 END IN ((((t0.c81)) BETWEEN ((t0.c52)) AND ((t0.c81))))) ORDER BY 0.5730328162834593  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN t1 ON (((NOT (vt1.c0)))<=(CAST(t0.c41 AS NUMERIC))) CROSS JOIN vt0 ON ((t0.c52) NOT BETWEEN (t0.c48) AND (t1.c2)) COLLATE NOCASE FULL OUTER JOIN vt1 ON (CASE NULL  WHEN t0.c52 THEN t1.c1 WHEN t0.c41 THEN t1.c0 WHEN 0xffffffffd92b944c THEN t0.c52 END IN ((((t0.c81)) BETWEEN ((t0.c52)) AND ((t0.c81))))) WHERE ('Sd_F') ORDER BY 0.5730328162834593  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('Sd_F') IS TRUE)  as count FROM t0 INNER JOIN t1 ON (((NOT (vt1.c0)))<=(CAST(t0.c41 AS NUMERIC))) CROSS JOIN vt0 ON ((t0.c52) NOT BETWEEN (t0.c48) AND (t1.c2)) COLLATE NOCASE FULL OUTER JOIN vt1 ON (CASE NULL  WHEN t0.c52 THEN t1.c1 WHEN t0.c41 THEN t1.c0 WHEN 0xffffffffd92b944c THEN t0.c52 END IN ((((t0.c81)) BETWEEN ((t0.c52)) AND ((t0.c81))))) ORDER BY 0.5730328162834593  NULLS FIRST);
SELECT * FROM t0 CROSS JOIN t1 ON ((((((((NULL)AND(ROUND(t0.c41, ''))))AND(((t0.c84) IS FALSE))))OR(((t0.c52) BETWEEN (t1.c1) AND (t1.c0)))))OR('VBxZa')) WHERE ((((((t0.c84 IN ()))AND(CAST(t0.c84 AS TEXT))))AND(COALESCE(t0.c48, t0.c48)))) ORDER BY ((((((t0.c81)AND(t1.c1)))OR(')X%M[')))%(((t0.c84) NOT NULL))) DESC, TRIM(((((t1.c2)AND(t0.c81)))AND(t0.c84)), ((((((((t1.c0)AND(t0.c41)))AND('')))OR(t1.c1)))OR(t0.c81))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c84 IN ()))AND(CAST(t0.c84 AS TEXT))))AND(COALESCE(t0.c48, t0.c48)))) IS TRUE)  as count FROM t0 CROSS JOIN t1 ON ((((((((NULL)AND(ROUND(t0.c41, ''))))AND(((t0.c84) IS FALSE))))OR(((t0.c52) BETWEEN (t1.c1) AND (t1.c0)))))OR('VBxZa')) ORDER BY ((((((t0.c81)AND(t1.c1)))OR(')X%M[')))%(((t0.c84) NOT NULL))) DESC, TRIM(((((t1.c2)AND(t0.c81)))AND(t0.c84)), ((((((((t1.c0)AND(t0.c41)))AND('')))OR(t1.c1)))OR(t0.c81))) DESC  NULLS LAST);
SELECT * FROM t0 CROSS JOIN t1 ON ((((((((NULL)AND(ROUND(t0.c41, ''))))AND(((t0.c84) IS FALSE))))OR(((t0.c52) BETWEEN (t1.c1) AND (t1.c0)))))OR('VBxZa')) WHERE ((((((t0.c84 IN ()))AND(CAST(t0.c84 AS TEXT))))AND(COALESCE(t0.c48, t0.c48)))) ORDER BY ((((((t0.c81)AND(t1.c1)))OR(')X%M[')))%(((t0.c84) NOT NULL))) DESC, TRIM(((((t1.c2)AND(t0.c81)))AND(t0.c84)), ((((((((t1.c0)AND(t0.c41)))AND('')))OR(t1.c1)))OR(t0.c81))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c84 IN ()))AND(CAST(t0.c84 AS TEXT))))AND(COALESCE(t0.c48, t0.c48)))) IS TRUE)  as count FROM t0 CROSS JOIN t1 ON ((((((((NULL)AND(ROUND(t0.c41, ''))))AND(((t0.c84) IS FALSE))))OR(((t0.c52) BETWEEN (t1.c1) AND (t1.c0)))))OR('VBxZa')) ORDER BY ((((((t0.c81)AND(t1.c1)))OR(')X%M[')))%(((t0.c84) NOT NULL))) DESC, TRIM(((((t1.c2)AND(t0.c81)))AND(t0.c84)), ((((((((t1.c0)AND(t0.c41)))AND('')))OR(t1.c1)))OR(t0.c81))) DESC  NULLS LAST);
SELECT * FROM t0 CROSS JOIN t1 ON ((((((((NULL)AND(ROUND(t0.c41, ''))))AND(((t0.c84) IS FALSE))))OR(((t0.c52) BETWEEN (t1.c1) AND (t1.c0)))))OR('VBxZa')) WHERE ((((((t0.c84 IN ()))AND(CAST(t0.c84 AS TEXT))))AND(COALESCE(t0.c48, t0.c48)))) ORDER BY ((((((t0.c81)AND(t1.c1)))OR(')X%M[')))%(((t0.c84) NOT NULL))) DESC, TRIM(((((t1.c2)AND(t0.c81)))AND(t0.c84)), ((((((((t1.c0)AND(t0.c41)))AND('')))OR(t1.c1)))OR(t0.c81))) DESC  NULLS LAST;
SELECT ALL * FROM t1, t0, vt0, vt1 WHERE ((NOT (((vt1.c0) NOT NULL)))) ORDER BY '-1734481244' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM t1, t0, vt0, vt1 ORDER BY '-1734481244' ASC  NULLS FIRST);
SELECT ALL * FROM t1, t0, vt0, vt1 WHERE ((NOT (((vt1.c0) NOT NULL)))) ORDER BY '-1734481244' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM t1, t0, vt0, vt1 ORDER BY '-1734481244' ASC  NULLS FIRST);
SELECT ALL * FROM t1, t0, vt0, vt1 WHERE ((NOT (((vt1.c0) NOT NULL)))) ORDER BY '-1734481244' ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((t1.c0 IN ())) ISNULL)) ORDER BY IFNULL(LIKELIHOOD(DISTINCT t1.c2, 0.03591784658078023), ((t1.c2) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0 IN ())) ISNULL)) IS TRUE)  as count FROM t1 ORDER BY IFNULL(LIKELIHOOD(DISTINCT t1.c2, 0.03591784658078023), ((t1.c2) NOT NULL)));
SELECT ALL * FROM t1 WHERE ((((t1.c0 IN ())) ISNULL)) ORDER BY IFNULL(LIKELIHOOD(DISTINCT t1.c2, 0.03591784658078023), ((t1.c2) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0 IN ())) ISNULL)) IS TRUE)  as count FROM t1 ORDER BY IFNULL(LIKELIHOOD(DISTINCT t1.c2, 0.03591784658078023), ((t1.c2) NOT NULL)));
SELECT ALL * FROM t1 WHERE ((((t1.c0 IN ())) ISNULL)) ORDER BY IFNULL(LIKELIHOOD(DISTINCT t1.c2, 0.03591784658078023), ((t1.c2) NOT NULL));
SELECT * FROM vt0, t0 WHERE ((((t0.c52, t0.c41, t0.c81)) BETWEEN (((((vt0.c0))<((t0.c52))), ABS(DISTINCT vt0.c0), CAST(t0.c84 AS INTEGER))) AND ((UPPER(t0.c41), ((t0.c48) ISNULL), (~ (t0.c84)))))) ORDER BY ((t0.c84) NOTNULL) COLLATE BINARY, ((CAST(t0.c52 AS REAL)) BETWEEN (((t0.c52) BETWEEN (t0.c84) AND (vt0.c0))) AND (((t0.c48) BETWEEN (t0.c52) AND (t0.c52))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c52, t0.c41, t0.c81)) BETWEEN (((((vt0.c0))<((t0.c52))), ABS(DISTINCT vt0.c0), CAST(t0.c84 AS INTEGER))) AND ((UPPER(t0.c41), ((t0.c48) ISNULL), (~ (t0.c84)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c84) NOTNULL) COLLATE BINARY, ((CAST(t0.c52 AS REAL)) BETWEEN (((t0.c52) BETWEEN (t0.c84) AND (vt0.c0))) AND (((t0.c48) BETWEEN (t0.c52) AND (t0.c52))))  NULLS LAST);
SELECT * FROM vt0, t0 WHERE ((((t0.c52, t0.c41, t0.c81)) BETWEEN (((((vt0.c0))<((t0.c52))), ABS(DISTINCT vt0.c0), CAST(t0.c84 AS INTEGER))) AND ((UPPER(t0.c41), ((t0.c48) ISNULL), (~ (t0.c84)))))) ORDER BY ((t0.c84) NOTNULL) COLLATE BINARY, ((CAST(t0.c52 AS REAL)) BETWEEN (((t0.c52) BETWEEN (t0.c84) AND (vt0.c0))) AND (((t0.c48) BETWEEN (t0.c52) AND (t0.c52))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c52, t0.c41, t0.c81)) BETWEEN (((((vt0.c0))<((t0.c52))), ABS(DISTINCT vt0.c0), CAST(t0.c84 AS INTEGER))) AND ((UPPER(t0.c41), ((t0.c48) ISNULL), (~ (t0.c84)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c84) NOTNULL) COLLATE BINARY, ((CAST(t0.c52 AS REAL)) BETWEEN (((t0.c52) BETWEEN (t0.c84) AND (vt0.c0))) AND (((t0.c48) BETWEEN (t0.c52) AND (t0.c52))))  NULLS LAST);
SELECT * FROM vt0, t0 WHERE ((((t0.c52, t0.c41, t0.c81)) BETWEEN (((((vt0.c0))<((t0.c52))), ABS(DISTINCT vt0.c0), CAST(t0.c84 AS INTEGER))) AND ((UPPER(t0.c41), ((t0.c48) ISNULL), (~ (t0.c84)))))) ORDER BY ((t0.c84) NOTNULL) COLLATE BINARY, ((CAST(t0.c52 AS REAL)) BETWEEN (((t0.c52) BETWEEN (t0.c84) AND (vt0.c0))) AND (((t0.c48) BETWEEN (t0.c52) AND (t0.c52))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((((((((((- (t0.c48)))OR(((((((((t0.c84)OR(t0.c48)))OR(t0.c84)))OR(t0.c48)))OR(t0.c52)))))AND(((t0.c52) IS FALSE))))AND(((((t0.c52)OR(t0.c81)))AND(t0.c52)))))AND(t0.c52 COLLATE RTRIM)))AND(t0.c84)))OR((- (t0.c41)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((- (t0.c48)))OR(((((((((t0.c84)OR(t0.c48)))OR(t0.c84)))OR(t0.c48)))OR(t0.c52)))))AND(((t0.c52) IS FALSE))))AND(((((t0.c52)OR(t0.c81)))AND(t0.c52)))))AND(t0.c52 COLLATE RTRIM)))AND(t0.c84)))OR((- (t0.c41))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((((((((((- (t0.c48)))OR(((((((((t0.c84)OR(t0.c48)))OR(t0.c84)))OR(t0.c48)))OR(t0.c52)))))AND(((t0.c52) IS FALSE))))AND(((((t0.c52)OR(t0.c81)))AND(t0.c52)))))AND(t0.c52 COLLATE RTRIM)))AND(t0.c84)))OR((- (t0.c41)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((- (t0.c48)))OR(((((((((t0.c84)OR(t0.c48)))OR(t0.c84)))OR(t0.c48)))OR(t0.c52)))))AND(((t0.c52) IS FALSE))))AND(((((t0.c52)OR(t0.c81)))AND(t0.c52)))))AND(t0.c52 COLLATE RTRIM)))AND(t0.c84)))OR((- (t0.c41))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((((((((((- (t0.c48)))OR(((((((((t0.c84)OR(t0.c48)))OR(t0.c84)))OR(t0.c48)))OR(t0.c52)))))AND(((t0.c52) IS FALSE))))AND(((((t0.c52)OR(t0.c81)))AND(t0.c52)))))AND(t0.c52 COLLATE RTRIM)))AND(t0.c84)))OR((- (t0.c41)))));
SELECT COUNT(*) FROM t0, t1, vt1 WHERE (json_array_length(t0.c52 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(t0.c52 COLLATE NOCASE)) IS TRUE)  as count FROM t0, t1, vt1);
SELECT COUNT(*) FROM t0, t1, vt1 WHERE (json_array_length(t0.c52 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(t0.c52 COLLATE NOCASE)) IS TRUE)  as count FROM t0, t1, vt1);
SELECT COUNT(*) FROM t0, t1, vt1 WHERE (json_array_length(t0.c52 COLLATE NOCASE));
SELECT * FROM vt1, vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0))) NOT NULL));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM t1, vt0 WHERE (((((vt0.c0)GLOB(t1.c2)))>=(t1.c2))) ORDER BY ((x'')GLOB(GLOB(vt0.c0, vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)GLOB(t1.c2)))>=(t1.c2))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((x'')GLOB(GLOB(vt0.c0, vt0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM t1, vt0 WHERE (((((vt0.c0)GLOB(t1.c2)))>=(t1.c2))) ORDER BY ((x'')GLOB(GLOB(vt0.c0, vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)GLOB(t1.c2)))>=(t1.c2))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((x'')GLOB(GLOB(vt0.c0, vt0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM t1, vt0 WHERE (((((vt0.c0)GLOB(t1.c2)))>=(t1.c2))) ORDER BY ((x'')GLOB(GLOB(vt0.c0, vt0.c0)))  NULLS LAST;
SELECT COUNT(*) FROM t1, vt0 WHERE ((((t1.c1 IN ())) BETWEEN ((((t1.c0, t1.c0, x''))=((t1.c1, t1.c0, t1.c1)))) AND (CAST(t1.c2 AS BLOB)))) ORDER BY UNLIKELY(DISTINCT (~ (t1.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t1.c1 IN ())) BETWEEN ((((t1.c0, t1.c0, x''))=((t1.c1, t1.c0, t1.c1)))) AND (CAST(t1.c2 AS BLOB)))) IS TRUE)  as count FROM t1, vt0 ORDER BY UNLIKELY(DISTINCT (~ (t1.c1))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, vt0 WHERE ((((t1.c1 IN ())) BETWEEN ((((t1.c0, t1.c0, x''))=((t1.c1, t1.c0, t1.c1)))) AND (CAST(t1.c2 AS BLOB)))) ORDER BY UNLIKELY(DISTINCT (~ (t1.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t1.c1 IN ())) BETWEEN ((((t1.c0, t1.c0, x''))=((t1.c1, t1.c0, t1.c1)))) AND (CAST(t1.c2 AS BLOB)))) IS TRUE)  as count FROM t1, vt0 ORDER BY UNLIKELY(DISTINCT (~ (t1.c1))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, vt0 WHERE ((((t1.c1 IN ())) BETWEEN ((((t1.c0, t1.c0, x''))=((t1.c1, t1.c0, t1.c1)))) AND (CAST(t1.c2 AS BLOB)))) ORDER BY UNLIKELY(DISTINCT (~ (t1.c1))) DESC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE BINARY)<=(((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY)<=(((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE BINARY)<=(((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY)<=(((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE BINARY)<=(((vt1.c0) NOT NULL))));
SELECT ALL * FROM t1 WHERE ((CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c2 END IN ())) ORDER BY ((((((((((t1.c2)/(t1.c1)))OR((((t1.c1, t1.c1, t1.c2, NULL, t1.c1))<>((t1.c0, 0.524032450068277, t1.c2, t1.c2, t1.c2))))))OR((((t1.c2))<=((t1.c1))))))OR(CAST(t1.c1 AS REAL))))AND(((t1.c0)OR(t1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c2 END IN ())) IS TRUE)  as count FROM t1 ORDER BY ((((((((((t1.c2)/(t1.c1)))OR((((t1.c1, t1.c1, t1.c2, NULL, t1.c1))!=((t1.c0, 0.524032450068277, t1.c2, t1.c2, t1.c2))))))OR((((t1.c2))<=((t1.c1))))))OR(CAST(t1.c1 AS REAL))))AND(((t1.c0)OR(t1.c0)))));
SELECT ALL * FROM t1 WHERE ((CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c2 END IN ())) ORDER BY ((((((((((t1.c2)/(t1.c1)))OR((((t1.c1, t1.c1, t1.c2, NULL, t1.c1))<>((t1.c0, 0.524032450068277, t1.c2, t1.c2, t1.c2))))))OR((((t1.c2))<=((t1.c1))))))OR(CAST(t1.c1 AS REAL))))AND(((t1.c0)OR(t1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c2 END IN ())) IS TRUE)  as count FROM t1 ORDER BY ((((((((((t1.c2)/(t1.c1)))OR((((t1.c1, t1.c1, t1.c2, NULL, t1.c1))!=((t1.c0, 0.524032450068277, t1.c2, t1.c2, t1.c2))))))OR((((t1.c2))<=((t1.c1))))))OR(CAST(t1.c1 AS REAL))))AND(((t1.c0)OR(t1.c0)))));
SELECT ALL * FROM t1 WHERE ((CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c2 END IN ())) ORDER BY ((((((((((t1.c2)/(t1.c1)))OR((((t1.c1, t1.c1, t1.c2, NULL, t1.c1))<>((t1.c0, 0.524032450068277, t1.c2, t1.c2, t1.c2))))))OR((((t1.c2))<=((t1.c1))))))OR(CAST(t1.c1 AS REAL))))AND(((t1.c0)OR(t1.c0))));
SELECT * FROM vt0 INNER JOIN vt1 ON 0.22387170933764544 CROSS JOIN t0 ON ((t0.c48)LIKE(t0.c81)) COLLATE BINARY WHERE ((NOT (((t0.c84)AND(t0.c81)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c84)AND(t0.c81))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON 0.22387170933764544 CROSS JOIN t0 ON ((t0.c48)LIKE(t0.c81)) COLLATE BINARY);
SELECT * FROM vt0 INNER JOIN vt1 ON 0.22387170933764544 CROSS JOIN t0 ON ((t0.c48)LIKE(t0.c81)) COLLATE BINARY WHERE ((NOT (((t0.c84)AND(t0.c81)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c84)AND(t0.c81))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON 0.22387170933764544 CROSS JOIN t0 ON ((t0.c48)LIKE(t0.c81)) COLLATE BINARY);
SELECT * FROM vt0 INNER JOIN vt1 ON 0.22387170933764544 CROSS JOIN t0 ON ((t0.c48)LIKE(t0.c81)) COLLATE BINARY WHERE ((NOT (((t0.c84)AND(t0.c81)))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON ((NULL) NOT BETWEEN (CASE t0.c84  WHEN t0.c52 THEN t0.c41 ELSE vt0.c0 END) AND (((t0.c81)&(t0.c52)))) WHERE (CASE (t0.c84 IN ())  WHEN '' THEN (NOT (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (t0.c84 IN ())  WHEN '' THEN (NOT (vt0.c0)) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((NULL) NOT BETWEEN (CASE t0.c84  WHEN t0.c52 THEN t0.c41 ELSE vt0.c0 END) AND (((t0.c81)&(t0.c52)))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON ((NULL) NOT BETWEEN (CASE t0.c84  WHEN t0.c52 THEN t0.c41 ELSE vt0.c0 END) AND (((t0.c81)&(t0.c52)))) WHERE (CASE (t0.c84 IN ())  WHEN '' THEN (NOT (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (t0.c84 IN ())  WHEN '' THEN (NOT (vt0.c0)) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((NULL) NOT BETWEEN (CASE t0.c84  WHEN t0.c52 THEN t0.c41 ELSE vt0.c0 END) AND (((t0.c81)&(t0.c52)))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON ((NULL) NOT BETWEEN (CASE t0.c84  WHEN t0.c52 THEN t0.c41 ELSE vt0.c0 END) AND (((t0.c81)&(t0.c52)))) WHERE (CASE (t0.c84 IN ())  WHEN '' THEN (NOT (vt0.c0)) END);
SELECT ALL COUNT(*) FROM t1 CROSS JOIN t0 ON ((((t0.c81) NOT NULL)) BETWEEN (((NULL)&(t0.c48))) AND (UNLIKELY(t0.c48))) RIGHT OUTER JOIN vt1 ON ((CASE t0.c41  WHEN t0.c52 THEN t0.c81 END)OR(t0.c41 COLLATE RTRIM)) WHERE ((((((t0.c81)AND(t0.c48)))AND(t0.c48)) IN ())) ORDER BY 0.5958217973635376  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c81)AND(t0.c48)))AND(t0.c48)) IN ())) IS TRUE)  as count FROM t1 CROSS JOIN t0 ON ((((t0.c81) NOT NULL)) BETWEEN (((NULL)&(t0.c48))) AND (UNLIKELY(t0.c48))) RIGHT OUTER JOIN vt1 ON ((CASE t0.c41  WHEN t0.c52 THEN t0.c81 END)OR(t0.c41 COLLATE RTRIM)) ORDER BY 0.5958217973635376  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 CROSS JOIN t0 ON ((((t0.c81) NOT NULL)) BETWEEN (((NULL)&(t0.c48))) AND (UNLIKELY(t0.c48))) RIGHT OUTER JOIN vt1 ON ((CASE t0.c41  WHEN t0.c52 THEN t0.c81 END)OR(t0.c41 COLLATE RTRIM)) WHERE ((((((t0.c81)AND(t0.c48)))AND(t0.c48)) IN ())) ORDER BY 0.5958217973635376  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c81)AND(t0.c48)))AND(t0.c48)) IN ())) IS TRUE)  as count FROM t1 CROSS JOIN t0 ON ((((t0.c81) NOT NULL)) BETWEEN (((NULL)&(t0.c48))) AND (UNLIKELY(t0.c48))) RIGHT OUTER JOIN vt1 ON ((CASE t0.c41  WHEN t0.c52 THEN t0.c81 END)OR(t0.c41 COLLATE RTRIM)) ORDER BY 0.5958217973635376  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 CROSS JOIN t0 ON ((((t0.c81) NOT NULL)) BETWEEN (((NULL)&(t0.c48))) AND (UNLIKELY(t0.c48))) RIGHT OUTER JOIN vt1 ON ((CASE t0.c41  WHEN t0.c52 THEN t0.c81 END)OR(t0.c41 COLLATE RTRIM)) WHERE ((((((t0.c81)AND(t0.c48)))AND(t0.c48)) IN ())) ORDER BY 0.5958217973635376  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))>((vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))>((vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))>((vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))>((vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))>((vt0.c0))));
SELECT * FROM vt1, t1, t0 WHERE (0.8641135390168501);
SELECT SUM(count) FROM (SELECT ALL ((0.8641135390168501) IS TRUE)  as count FROM vt1, t1, t0);
SELECT * FROM vt1, t1, t0 WHERE (0.8641135390168501);
SELECT SUM(count) FROM (SELECT ALL ((0.8641135390168501) IS TRUE)  as count FROM vt1, t1, t0);
SELECT * FROM vt1, t1, t0 WHERE (0.8641135390168501);
SELECT ALL * FROM t0, vt0, t1, vt1 WHERE ((((t1.c1) IS TRUE) IN ())) ORDER BY CASE TRIM(t0.c48, t0.c41)  WHEN 0X2c6446f6 THEN LOWER(DISTINCT t0.c52) ELSE t1.c0 COLLATE BINARY END  NULLS LAST, (+ (((t1.c2)||(t1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c1) IS TRUE) IN ())) IS TRUE)  as count FROM t0, vt0, t1, vt1 ORDER BY CASE TRIM(t0.c48, t0.c41)  WHEN 0X2c6446f6 THEN LOWER(DISTINCT t0.c52) ELSE t1.c0 COLLATE BINARY END  NULLS LAST, (+ (((t1.c2)||(t1.c2))))  NULLS FIRST);
SELECT ALL * FROM t0, vt0, t1, vt1 WHERE ((((t1.c1) IS TRUE) IN ())) ORDER BY CASE TRIM(t0.c48, t0.c41)  WHEN 0X2c6446f6 THEN LOWER(DISTINCT t0.c52) ELSE t1.c0 COLLATE BINARY END  NULLS LAST, (+ (((t1.c2)||(t1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c1) IS TRUE) IN ())) IS TRUE)  as count FROM t0, vt0, t1, vt1 ORDER BY CASE TRIM(t0.c48, t0.c41)  WHEN 0X2c6446f6 THEN LOWER(DISTINCT t0.c52) ELSE t1.c0 COLLATE BINARY END  NULLS LAST, (+ (((t1.c2)||(t1.c2))))  NULLS FIRST);
SELECT ALL * FROM t0, vt0, t1, vt1 WHERE ((((t1.c1) IS TRUE) IN ())) ORDER BY CASE TRIM(t0.c48, t0.c41)  WHEN 0X2c6446f6 THEN LOWER(DISTINCT t0.c52) ELSE t1.c0 COLLATE BINARY END  NULLS LAST, (+ (((t1.c2)||(t1.c2))))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((vt0.c0)<(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)<(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)<(vt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM vt1 WHERE ((~ (CAST(vt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((~ (CAST(vt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((~ (CAST(vt1.c0 AS REAL))));
SELECT ALL * FROM t0, t1, vt1 LEFT OUTER JOIN vt0 ON 'I館' COLLATE RTRIM WHERE ((- ((t0.c84 IN ())))) ORDER BY ((0.10084318147326177)=(t0.c48)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((t0.c84 IN ())))) IS TRUE)  as count FROM t0, t1, vt1 LEFT OUTER JOIN vt0 ON 'I館' COLLATE RTRIM ORDER BY ((0.10084318147326177)=(t0.c48)) DESC  NULLS FIRST);
SELECT ALL * FROM t0, t1, vt1 LEFT OUTER JOIN vt0 ON 'I館' COLLATE RTRIM WHERE ((- ((t0.c84 IN ())))) ORDER BY ((0.10084318147326177)=(t0.c48)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((t0.c84 IN ())))) IS TRUE)  as count FROM t0, t1, vt1 LEFT OUTER JOIN vt0 ON 'I館' COLLATE RTRIM ORDER BY ((0.10084318147326177)=(t0.c48)) DESC  NULLS FIRST);
SELECT ALL * FROM t0, t1, vt1 LEFT OUTER JOIN vt0 ON 'I館' COLLATE RTRIM WHERE ((- ((t0.c84 IN ())))) ORDER BY ((0.10084318147326177)=(t0.c48)) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(NULL))) ISNULL)  NULLS FIRST, (((NOT (vt0.c0)))<=(DATE(vt0.c0, vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(NULL))) ISNULL)  NULLS FIRST, (((NOT (vt0.c0)))<=(DATE(vt0.c0, vt0.c0, vt0.c0))));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(NULL))) ISNULL)  NULLS FIRST, (((NOT (vt0.c0)))<=(DATE(vt0.c0, vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(NULL))) ISNULL)  NULLS FIRST, (((NOT (vt0.c0)))<=(DATE(vt0.c0, vt0.c0, vt0.c0))));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(NULL))) ISNULL)  NULLS FIRST, (((NOT (vt0.c0)))<=(DATE(vt0.c0, vt0.c0, vt0.c0)));
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN t1 WHERE (((LIKE(t0.c52, t0.c48, '0'))+(json(t1.c0)))) ORDER BY NULLIF(DISTINCT CAST(t0.c48 AS REAL), (((t1.c1))<=((t0.c48))));
SELECT SUM(count) FROM (SELECT ((((LIKE(t0.c52, t0.c48, '0'))+(json(t1.c0)))) IS TRUE)  as count FROM t0 NATURAL JOIN t1 ORDER BY NULLIF(DISTINCT CAST(t0.c48 AS REAL), (((t1.c1))<=((t0.c48)))));
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN t1 WHERE (((LIKE(t0.c52, t0.c48, '0'))+(json(t1.c0)))) ORDER BY NULLIF(DISTINCT CAST(t0.c48 AS REAL), (((t1.c1))<=((t0.c48))));
SELECT SUM(count) FROM (SELECT ((((LIKE(t0.c52, t0.c48, '0'))+(json(t1.c0)))) IS TRUE)  as count FROM t0 NATURAL JOIN t1 ORDER BY NULLIF(DISTINCT CAST(t0.c48 AS REAL), (((t1.c1))<=((t0.c48)))));
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN t1 WHERE (((LIKE(t0.c52, t0.c48, '0'))+(json(t1.c0)))) ORDER BY NULLIF(DISTINCT CAST(t0.c48 AS REAL), (((t1.c1))<=((t0.c48))));
SELECT ALL * FROM vt1 WHERE (vt1.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0 COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((x'')))) ORDER BY ((((vt0.c0 COLLATE RTRIM)AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(((vt0.c0) ISNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((x'')))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 COLLATE RTRIM)AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(((vt0.c0) ISNULL))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((x'')))) ORDER BY ((((vt0.c0 COLLATE RTRIM)AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(((vt0.c0) ISNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((x'')))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 COLLATE RTRIM)AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(((vt0.c0) ISNULL))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((x'')))) ORDER BY ((((vt0.c0 COLLATE RTRIM)AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(((vt0.c0) ISNULL))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (TRIM(DISTINCT t0.c41, ((t0.c48)LIKE(t0.c84))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT t0.c41, ((t0.c48)LIKE(t0.c84)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (TRIM(DISTINCT t0.c41, ((t0.c48)LIKE(t0.c84))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT t0.c41, ((t0.c48)LIKE(t0.c84)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (TRIM(DISTINCT t0.c41, ((t0.c48)LIKE(t0.c84))));
SELECT ALL * FROM vt1, vt0, t1, t0 WHERE (CASE t1.c1  WHEN t1.c1 THEN t0.c52 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE t1.c1  WHEN t1.c1 THEN t0.c52 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0, t1, t0);
SELECT ALL * FROM vt1, vt0, t1, t0 WHERE (CASE t1.c1  WHEN t1.c1 THEN t0.c52 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE t1.c1  WHEN t1.c1 THEN t0.c52 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0, t1, t0);
SELECT ALL * FROM vt1, vt0, t1, t0 WHERE (CASE t1.c1  WHEN t1.c1 THEN t0.c52 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END COLLATE NOCASE);
SELECT * FROM vt0 WHERE (LIKELY(((vt0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((LIKELY(((vt0.c0) IS TRUE))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (LIKELY(((vt0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((LIKELY(((vt0.c0) IS TRUE))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (LIKELY(((vt0.c0) IS TRUE)));
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE ((~ ((t1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((t1.c1 IN ())))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE ((~ ((t1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((t1.c1 IN ())))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE ((~ ((t1.c1 IN ()))));
SELECT COUNT(*) FROM t1 WHERE ((- (((0.8932434954330084) NOT NULL)))) ORDER BY (((NOT (NULL)))>=((NOT (t1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (((0.8932434954330084) NOT NULL)))) IS TRUE)  as count FROM t1 ORDER BY (((NOT (NULL)))>=((NOT (t1.c0)))));
SELECT COUNT(*) FROM t1 WHERE ((- (((0.8932434954330084) NOT NULL)))) ORDER BY (((NOT (NULL)))>=((NOT (t1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (((0.8932434954330084) NOT NULL)))) IS TRUE)  as count FROM t1 ORDER BY (((NOT (NULL)))>=((NOT (t1.c0)))));
SELECT COUNT(*) FROM t1 WHERE ((- (((0.8932434954330084) NOT NULL)))) ORDER BY (((NOT (NULL)))>=((NOT (t1.c0))));
SELECT ALL COUNT(*) FROM t0, t1, vt1 WHERE (0xffffffffe8102102);
SELECT SUM(count) FROM (SELECT ((0xffffffffe8102102) IS TRUE)  as count FROM t0, t1, vt1);
SELECT ALL COUNT(*) FROM t0, t1, vt1 WHERE (0xffffffffe8102102);
SELECT SUM(count) FROM (SELECT ((0xffffffffe8102102) IS TRUE)  as count FROM t0, t1, vt1);
SELECT ALL COUNT(*) FROM t0, t1, vt1 WHERE (0xffffffffe8102102);
SELECT ALL * FROM t0 INNER JOIN vt1 ON ((((t0.c48) NOT BETWEEN (t1.c2) AND (t0.c41))) NOT BETWEEN (((t0.c84) NOT NULL)) AND (')EY')) CROSS JOIN vt0 ON '-232180753' LEFT OUTER JOIN t1 ON ((t1.c2)||(t0.c52)) COLLATE BINARY WHERE ('808507576');
SELECT SUM(count) FROM (SELECT (('808507576') IS TRUE)  as count FROM t0 INNER JOIN vt1 ON ((((t0.c48) NOT BETWEEN (t1.c2) AND (t0.c41))) NOT BETWEEN (((t0.c84) NOT NULL)) AND (')EY')) CROSS JOIN vt0 ON '-232180753' LEFT OUTER JOIN t1 ON ((t1.c2)||(t0.c52)) COLLATE BINARY);
SELECT ALL * FROM t0 INNER JOIN vt1 ON ((((t0.c48) NOT BETWEEN (t1.c2) AND (t0.c41))) NOT BETWEEN (((t0.c84) NOT NULL)) AND (')EY')) CROSS JOIN vt0 ON '-232180753' LEFT OUTER JOIN t1 ON ((t1.c2)||(t0.c52)) COLLATE BINARY WHERE ('808507576');
SELECT SUM(count) FROM (SELECT (('808507576') IS TRUE)  as count FROM t0 INNER JOIN vt1 ON ((((t0.c48) NOT BETWEEN (t1.c2) AND (t0.c41))) NOT BETWEEN (((t0.c84) NOT NULL)) AND (')EY')) CROSS JOIN vt0 ON '-232180753' LEFT OUTER JOIN t1 ON ((t1.c2)||(t0.c52)) COLLATE BINARY);
SELECT ALL * FROM t0 INNER JOIN vt1 ON ((((t0.c48) NOT BETWEEN (t1.c2) AND (t0.c41))) NOT BETWEEN (((t0.c84) NOT NULL)) AND (')EY')) CROSS JOIN vt0 ON '-232180753' LEFT OUTER JOIN t1 ON ((t1.c2)||(t0.c52)) COLLATE BINARY WHERE ('808507576');
SELECT * FROM vt1, t1, t0, vt0 WHERE (CASE WHEN MAX(0xffffffffec2700e6, t1.c2) THEN t1.c1 END) ORDER BY ((((((((t1.c1)OR(t0.c84)))AND(t1.c1)))OR(t0.c41)))AND(vt1.c0)) COLLATE BINARY  NULLS FIRST, x'9b07' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN MAX(0Xffffffffec2700e6, t1.c2) THEN t1.c1 END) IS TRUE)  as count FROM vt1, t1, t0, vt0 ORDER BY ((((((((t1.c1)OR(t0.c84)))AND(t1.c1)))OR(t0.c41)))AND(vt1.c0)) COLLATE BINARY  NULLS FIRST, x'9b07' ASC  NULLS FIRST);
SELECT * FROM vt1, t1, t0, vt0 WHERE (CASE WHEN MAX(0xffffffffec2700e6, t1.c2) THEN t1.c1 END) ORDER BY ((((((((t1.c1)OR(t0.c84)))AND(t1.c1)))OR(t0.c41)))AND(vt1.c0)) COLLATE BINARY  NULLS FIRST, x'9b07' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN MAX(0Xffffffffec2700e6, t1.c2) THEN t1.c1 END) IS TRUE)  as count FROM vt1, t1, t0, vt0 ORDER BY ((((((((t1.c1)OR(t0.c84)))AND(t1.c1)))OR(t0.c41)))AND(vt1.c0)) COLLATE BINARY  NULLS FIRST, x'9b07' ASC  NULLS FIRST);
SELECT * FROM vt1, t1, t0, vt0 WHERE (CASE WHEN MAX(0xffffffffec2700e6, t1.c2) THEN t1.c1 END) ORDER BY ((((((((t1.c1)OR(t0.c84)))AND(t1.c1)))OR(t0.c41)))AND(vt1.c0)) COLLATE BINARY  NULLS FIRST, x'9b07' ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, t0, t1, vt0 WHERE ('3<' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (('3<' COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0, t1, vt0);
SELECT COUNT(*) FROM vt1, t0, t1, vt0 WHERE ('3<' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (('3<' COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0, t1, vt0);
SELECT COUNT(*) FROM vt1, t0, t1, vt0 WHERE ('3<' COLLATE RTRIM);
SELECT ALL * FROM t0 WHERE (CAST(((t0.c41)>>(t0.c84)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c41)>>(t0.c84)) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(((t0.c41)>>(t0.c84)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c41)>>(t0.c84)) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(((t0.c41)>>(t0.c84)) AS BLOB));
SELECT ALL * FROM t0 WHERE ((- ((((t0.c84))>=((t0.c52)))))) ORDER BY ((((0X112e75f1)+(t0.c84))) NOT NULL) ASC, CAST((x'' IN ()) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((((t0.c84))>=((t0.c52)))))) IS TRUE)  as count FROM t0 ORDER BY ((((0x112e75f1)+(t0.c84))) NOT NULL) ASC, CAST((x'' IN ()) AS BLOB) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((- ((((t0.c84))>=((t0.c52)))))) ORDER BY ((((0X112e75f1)+(t0.c84))) NOT NULL) ASC, CAST((x'' IN ()) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((((t0.c84))>=((t0.c52)))))) IS TRUE)  as count FROM t0 ORDER BY ((((0x112e75f1)+(t0.c84))) NOT NULL) ASC, CAST((x'' IN ()) AS BLOB) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((- ((((t0.c84))>=((t0.c52)))))) ORDER BY ((((0X112e75f1)+(t0.c84))) NOT NULL) ASC, CAST((x'' IN ()) AS BLOB) ASC  NULLS LAST;
SELECT * FROM vt0, t0, t1, vt1 WHERE ((((t0.c81))>((((((t0.c41)AND(t1.c2)))AND(0.7400224152694346)))))) ORDER BY CAST(((t1.c1)GLOB(t1.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c81))>((((((t0.c41)AND(t1.c2)))AND(0.7400224152694346)))))) IS TRUE)  as count FROM vt0, t0, t1, vt1 ORDER BY CAST(((t1.c1)GLOB(t1.c0)) AS TEXT)  NULLS LAST);
SELECT * FROM vt0, t0, t1, vt1 WHERE ((((t0.c81))>((((((t0.c41)AND(t1.c2)))AND(0.7400224152694346)))))) ORDER BY CAST(((t1.c1)GLOB(t1.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c81))>((((((t0.c41)AND(t1.c2)))AND(0.7400224152694346)))))) IS TRUE)  as count FROM vt0, t0, t1, vt1 ORDER BY CAST(((t1.c1)GLOB(t1.c0)) AS TEXT)  NULLS LAST);
SELECT * FROM vt0, t0, t1, vt1 WHERE ((((t0.c81))>((((((t0.c41)AND(t1.c2)))AND(0.7400224152694346)))))) ORDER BY CAST(((t1.c1)GLOB(t1.c0)) AS TEXT)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE ((- (CASE vt0.c0  WHEN t1.c1 THEN t1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE vt0.c0  WHEN t1.c1 THEN t1.c2 END))) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE ((- (CASE vt0.c0  WHEN t1.c1 THEN t1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE vt0.c0  WHEN t1.c1 THEN t1.c2 END))) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE ((- (CASE vt0.c0  WHEN t1.c1 THEN t1.c2 END)));
SELECT * FROM vt1, vt0 INNER JOIN t0 ON ((((((t1.c1, t1.c1, vt1.c0)) BETWEEN ((t0.c84, t0.c52, t0.c41)) AND ((t0.c48, t1.c2, t0.c41)))))>=((t1.c2))) FULL OUTER JOIN t1 ON (+ (((t0.c52)!=(t0.c81)))) WHERE (((((vt1.c0) ISNULL))<>(t1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) ISNULL))<>(t1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt0 INNER JOIN t0 ON ((((((t1.c1, t1.c1, vt1.c0)) BETWEEN ((t0.c84, t0.c52, t0.c41)) AND ((t0.c48, t1.c2, t0.c41)))))>=((t1.c2))) FULL OUTER JOIN t1 ON (+ (((t0.c52)!=(t0.c81)))));
SELECT * FROM vt1, vt0 INNER JOIN t0 ON ((((((t1.c1, t1.c1, vt1.c0)) BETWEEN ((t0.c84, t0.c52, t0.c41)) AND ((t0.c48, t1.c2, t0.c41)))))>=((t1.c2))) FULL OUTER JOIN t1 ON (+ (((t0.c52)!=(t0.c81)))) WHERE (((((vt1.c0) ISNULL))<>(t1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) ISNULL))<>(t1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt0 INNER JOIN t0 ON ((((((t1.c1, t1.c1, vt1.c0)) BETWEEN ((t0.c84, t0.c52, t0.c41)) AND ((t0.c48, t1.c2, t0.c41)))))>=((t1.c2))) FULL OUTER JOIN t1 ON (+ (((t0.c52)!=(t0.c81)))));
SELECT * FROM t0 RIGHT OUTER JOIN t1 ON (- (vt1.c0)) COLLATE RTRIM FULL OUTER JOIN vt1 ON (((t0.c48))>((t0.c48))) COLLATE BINARY WHERE ((((t1.c0)+(t0.c48)) IN ())) ORDER BY (((t1.c1 IN (t1.c1))) NOT BETWEEN (((t0.c48)+(t0.c41))) AND (CASE WHEN t0.c52 THEN t1.c1 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0)+(t0.c48)) IN ())) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN t1 ON (- (vt1.c0)) COLLATE RTRIM FULL OUTER JOIN vt1 ON (((t0.c48))>((t0.c48))) COLLATE BINARY ORDER BY (((t1.c1 IN (t1.c1))) NOT BETWEEN (((t0.c48)+(t0.c41))) AND (CASE WHEN t0.c52 THEN t1.c1 END)) ASC  NULLS LAST);
SELECT * FROM t0 RIGHT OUTER JOIN t1 ON (- (vt1.c0)) COLLATE RTRIM FULL OUTER JOIN vt1 ON (((t0.c48))>((t0.c48))) COLLATE BINARY WHERE ((((t1.c0)+(t0.c48)) IN ())) ORDER BY (((t1.c1 IN (t1.c1))) NOT BETWEEN (((t0.c48)+(t0.c41))) AND (CASE WHEN t0.c52 THEN t1.c1 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0)+(t0.c48)) IN ())) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN t1 ON (- (vt1.c0)) COLLATE RTRIM FULL OUTER JOIN vt1 ON (((t0.c48))>((t0.c48))) COLLATE BINARY ORDER BY (((t1.c1 IN (t1.c1))) NOT BETWEEN (((t0.c48)+(t0.c41))) AND (CASE WHEN t0.c52 THEN t1.c1 END)) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c41)OR(t0.c48))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c41)OR(t0.c48))) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c41)OR(t0.c48))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c41)OR(t0.c48))) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c41)OR(t0.c48))) IS FALSE));
SELECT ALL COUNT(*) FROM t0, vt1, t1, vt0 WHERE (CASE ((t0.c41)<=(vt1.c0))  WHEN LTRIM(vt0.c0) THEN t0.c48 COLLATE RTRIM ELSE ((t0.c48)<<(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c41)<=(vt1.c0))  WHEN LTRIM(vt0.c0) THEN t0.c48 COLLATE RTRIM ELSE ((t0.c48)<<(vt0.c0)) END) IS TRUE)  as count FROM t0, vt1, t1, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, t1, vt0 WHERE (CASE ((t0.c41)<=(vt1.c0))  WHEN LTRIM(vt0.c0) THEN t0.c48 COLLATE RTRIM ELSE ((t0.c48)<<(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c41)<=(vt1.c0))  WHEN LTRIM(vt0.c0) THEN t0.c48 COLLATE RTRIM ELSE ((t0.c48)<<(vt0.c0)) END) IS TRUE)  as count FROM t0, vt1, t1, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, t1, vt0 WHERE (CASE ((t0.c41)<=(vt1.c0))  WHEN LTRIM(vt0.c0) THEN t0.c48 COLLATE RTRIM ELSE ((t0.c48)<<(vt0.c0)) END);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c1 IN ()))!=(DATETIME(t1.c0, t1.c1, NULL)))) ORDER BY t1.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t1.c1 IN ()))<>(DATETIME(t1.c0, t1.c1, NULL)))) IS TRUE)  as count FROM t1 ORDER BY t1.c2 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c1 IN ()))!=(DATETIME(t1.c0, t1.c1, NULL)))) ORDER BY t1.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t1.c1 IN ()))<>(DATETIME(t1.c0, t1.c1, NULL)))) IS TRUE)  as count FROM t1 ORDER BY t1.c2 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c1 IN ()))!=(DATETIME(t1.c0, t1.c1, NULL)))) ORDER BY t1.c2 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ('');
SELECT ALL * FROM vt0, vt1 CROSS JOIN t0 ON t1.c1 INNER JOIN t1 ON CAST((((t1.c1)) BETWEEN ((t0.c81)) AND ((t0.c41))) AS REAL) WHERE ((((t1.c0) NOT BETWEEN (t0.c48) AND (t0.c84)) IN (((t0.c84)IS(NULL)))));
SELECT SUM(count) FROM (SELECT (((((t1.c0) NOT BETWEEN (t0.c48) AND (t0.c84)) IN (((t0.c84)IS(NULL))))) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN t0 ON t1.c1 INNER JOIN t1 ON CAST((((t1.c1)) BETWEEN ((t0.c81)) AND ((t0.c41))) AS REAL));
SELECT ALL * FROM vt0, vt1 CROSS JOIN t0 ON t1.c1 INNER JOIN t1 ON CAST((((t1.c1)) BETWEEN ((t0.c81)) AND ((t0.c41))) AS REAL) WHERE ((((t1.c0) NOT BETWEEN (t0.c48) AND (t0.c84)) IN (((t0.c84)IS(NULL)))));
SELECT SUM(count) FROM (SELECT (((((t1.c0) NOT BETWEEN (t0.c48) AND (t0.c84)) IN (((t0.c84)IS(NULL))))) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN t0 ON t1.c1 INNER JOIN t1 ON CAST((((t1.c1)) BETWEEN ((t0.c81)) AND ((t0.c41))) AS REAL));
SELECT ALL * FROM vt0, vt1 CROSS JOIN t0 ON t1.c1 INNER JOIN t1 ON CAST((((t1.c1)) BETWEEN ((t0.c81)) AND ((t0.c41))) AS REAL) WHERE ((((t1.c0) NOT BETWEEN (t0.c48) AND (t0.c84)) IN (((t0.c84)IS(NULL)))));
SELECT * FROM vt0 WHERE (((vt0.c0) NOT NULL) COLLATE RTRIM) ORDER BY ((x'') BETWEEN (TRIM(DISTINCT vt0.c0, vt0.c0)) AND (IFNULL(vt0.c0, vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((x'') BETWEEN (TRIM(DISTINCT vt0.c0, vt0.c0)) AND (IFNULL(vt0.c0, vt0.c0))) DESC);
SELECT * FROM vt0 WHERE (((vt0.c0) NOT NULL) COLLATE RTRIM) ORDER BY ((x'') BETWEEN (TRIM(DISTINCT vt0.c0, vt0.c0)) AND (IFNULL(vt0.c0, vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((x'') BETWEEN (TRIM(DISTINCT vt0.c0, vt0.c0)) AND (IFNULL(vt0.c0, vt0.c0))) DESC);
SELECT * FROM vt0 WHERE (((vt0.c0) NOT NULL) COLLATE RTRIM) ORDER BY ((x'') BETWEEN (TRIM(DISTINCT vt0.c0, vt0.c0)) AND (IFNULL(vt0.c0, vt0.c0))) DESC;
SELECT ALL * FROM t1, vt0, t0 WHERE (((t0.c52)IS(34991995)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c52)IS(34991995))) IS TRUE)  as count FROM t1, vt0, t0);
SELECT ALL * FROM t1, vt0, t0 WHERE (((t0.c52)IS(34991995)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c52)IS(34991995))) IS TRUE)  as count FROM t1, vt0, t0);
SELECT ALL * FROM t1, vt0, t0 WHERE (((t0.c52)IS(34991995)));
SELECT * FROM t1, vt1 LEFT OUTER JOIN t0 ON (((0.7243539725251821)>=(t1.c1)) IN ()) CROSS JOIN vt0 ON CAST(t1.c1 AS TEXT) COLLATE RTRIM COLLATE RTRIM WHERE ((((((((t0.c48, t1.c1, vt0.c0)) NOT BETWEEN ((t1.c2, vt1.c0, t0.c41)) AND ((t0.c81, t0.c48, x''))))AND(t1.c0)))OR(0xffffffffbcbba6f6)));
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c48, t1.c1, vt0.c0)) NOT BETWEEN ((t1.c2, vt1.c0, t0.c41)) AND ((t0.c81, t0.c48, x''))))AND(t1.c0)))OR(0Xffffffffbcbba6f6))) IS TRUE)  as count FROM t1, vt1 LEFT OUTER JOIN t0 ON (((0.7243539725251821)>=(t1.c1)) IN ()) CROSS JOIN vt0 ON CAST(t1.c1 AS TEXT) COLLATE RTRIM COLLATE RTRIM);
SELECT * FROM t1, vt1 LEFT OUTER JOIN t0 ON (((0.7243539725251821)>=(t1.c1)) IN ()) CROSS JOIN vt0 ON CAST(t1.c1 AS TEXT) COLLATE RTRIM COLLATE RTRIM WHERE ((((((((t0.c48, t1.c1, vt0.c0)) NOT BETWEEN ((t1.c2, vt1.c0, t0.c41)) AND ((t0.c81, t0.c48, x''))))AND(t1.c0)))OR(0xffffffffbcbba6f6)));
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c48, t1.c1, vt0.c0)) NOT BETWEEN ((t1.c2, vt1.c0, t0.c41)) AND ((t0.c81, t0.c48, x''))))AND(t1.c0)))OR(0Xffffffffbcbba6f6))) IS TRUE)  as count FROM t1, vt1 LEFT OUTER JOIN t0 ON (((0.7243539725251821)>=(t1.c1)) IN ()) CROSS JOIN vt0 ON CAST(t1.c1 AS TEXT) COLLATE RTRIM COLLATE RTRIM);
SELECT * FROM t1, vt1 LEFT OUTER JOIN t0 ON (((0.7243539725251821)>=(t1.c1)) IN ()) CROSS JOIN vt0 ON CAST(t1.c1 AS TEXT) COLLATE RTRIM COLLATE RTRIM WHERE ((((((((t0.c48, t1.c1, vt0.c0)) NOT BETWEEN ((t1.c2, vt1.c0, t0.c41)) AND ((t0.c81, t0.c48, x''))))AND(t1.c0)))OR(0xffffffffbcbba6f6)));
SELECT COUNT(*) FROM t0, vt1, t1 WHERE (CAST(0X5adae6ee COLLATE BINARY AS NUMERIC)) ORDER BY ((CAST(t0.c81 AS NUMERIC))||((((t0.c41))>((t1.c1))))) DESC, (NOT (t1.c2))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0X5adae6ee COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM t0, vt1, t1 ORDER BY ((CAST(t0.c81 AS NUMERIC))||((((t0.c41))>((t1.c1))))) DESC, (NOT (t1.c2))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1, t1 WHERE (CAST(0X5adae6ee COLLATE BINARY AS NUMERIC)) ORDER BY ((CAST(t0.c81 AS NUMERIC))||((((t0.c41))>((t1.c1))))) DESC, (NOT (t1.c2))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0X5adae6ee COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM t0, vt1, t1 ORDER BY ((CAST(t0.c81 AS NUMERIC))||((((t0.c41))>((t1.c1))))) DESC, (NOT (t1.c2))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1, t1 WHERE (CAST(0X5adae6ee COLLATE BINARY AS NUMERIC)) ORDER BY ((CAST(t0.c81 AS NUMERIC))||((((t0.c41))>((t1.c1))))) DESC, (NOT (t1.c2))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, t1, vt0, vt1 WHERE (((DATETIME(t0.c81, t1.c2, t0.c81))*(INSTR(t0.c41, vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((DATETIME(t0.c81, t1.c2, t0.c81))*(INSTR(t0.c41, vt1.c0)))) IS TRUE)  as count FROM t0, t1, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, t1, vt0, vt1 WHERE (((DATETIME(t0.c81, t1.c2, t0.c81))*(INSTR(t0.c41, vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((DATETIME(t0.c81, t1.c2, t0.c81))*(INSTR(t0.c41, vt1.c0)))) IS TRUE)  as count FROM t0, t1, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, t1, vt0, vt1 WHERE (((DATETIME(t0.c81, t1.c2, t0.c81))*(INSTR(t0.c41, vt1.c0))));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (NOT ((+ (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (NOT ((+ (vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (NOT ((+ (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (NOT ((+ (vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (NOT ((+ (vt0.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0, vt1, t1 WHERE ('6>B	? (') ORDER BY CASE CAST(t1.c2 AS NUMERIC)  WHEN ((t0.c41)>=(t0.c52)) THEN x'643a9dd1' WHEN (- (vt1.c0)) THEN (- (t0.c48)) WHEN (((t0.c41, t1.c1, t1.c1)) NOT BETWEEN ((t0.c84, t1.c0, t0.c48)) AND ((t0.c81, t1.c1, t0.c41))) THEN ((578524930)/(t1.c2)) ELSE TYPEOF(t0.c48) END DESC, (CASE WHEN vt0.c0 THEN t0.c81 END IN ()) ASC  NULLS FIRST, t1.c0;
SELECT SUM(count) FROM (SELECT ALL (('6>B	? (') IS TRUE)  as count FROM t0, vt0, vt1, t1 ORDER BY CASE CAST(t1.c2 AS NUMERIC)  WHEN ((t0.c41)>=(t0.c52)) THEN x'643a9dd1' WHEN (- (vt1.c0)) THEN (- (t0.c48)) WHEN (((t0.c41, t1.c1, t1.c1)) NOT BETWEEN ((t0.c84, t1.c0, t0.c48)) AND ((t0.c81, t1.c1, t0.c41))) THEN ((578524930)/(t1.c2)) ELSE TYPEOF(t0.c48) END DESC, (CASE WHEN vt0.c0 THEN t0.c81 END IN ()) ASC  NULLS FIRST, t1.c0);
SELECT ALL COUNT(*) FROM t0, vt0, vt1, t1 WHERE ('6>B	? (') ORDER BY CASE CAST(t1.c2 AS NUMERIC)  WHEN ((t0.c41)>=(t0.c52)) THEN x'643a9dd1' WHEN (- (vt1.c0)) THEN (- (t0.c48)) WHEN (((t0.c41, t1.c1, t1.c1)) NOT BETWEEN ((t0.c84, t1.c0, t0.c48)) AND ((t0.c81, t1.c1, t0.c41))) THEN ((578524930)/(t1.c2)) ELSE TYPEOF(t0.c48) END DESC, (CASE WHEN vt0.c0 THEN t0.c81 END IN ()) ASC  NULLS FIRST, t1.c0;
SELECT SUM(count) FROM (SELECT ALL (('6>B	? (') IS TRUE)  as count FROM t0, vt0, vt1, t1 ORDER BY CASE CAST(t1.c2 AS NUMERIC)  WHEN ((t0.c41)>=(t0.c52)) THEN x'643a9dd1' WHEN (- (vt1.c0)) THEN (- (t0.c48)) WHEN (((t0.c41, t1.c1, t1.c1)) NOT BETWEEN ((t0.c84, t1.c0, t0.c48)) AND ((t0.c81, t1.c1, t0.c41))) THEN ((578524930)/(t1.c2)) ELSE TYPEOF(t0.c48) END DESC, (CASE WHEN vt0.c0 THEN t0.c81 END IN ()) ASC  NULLS FIRST, t1.c0);
SELECT ALL COUNT(*) FROM t0, vt0, vt1, t1 WHERE ('6>B	? (') ORDER BY CASE CAST(t1.c2 AS NUMERIC)  WHEN ((t0.c41)>=(t0.c52)) THEN x'643a9dd1' WHEN (- (vt1.c0)) THEN (- (t0.c48)) WHEN (((t0.c41, t1.c1, t1.c1)) NOT BETWEEN ((t0.c84, t1.c0, t0.c48)) AND ((t0.c81, t1.c1, t0.c41))) THEN ((578524930)/(t1.c2)) ELSE TYPEOF(t0.c48) END DESC, (CASE WHEN vt0.c0 THEN t0.c81 END IN ()) ASC  NULLS FIRST, t1.c0;
SELECT * FROM vt0, t0, t1 WHERE (TYPEOF(PRINTF('1180378311'))) ORDER BY (((+ (t0.c41))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(PRINTF('1180378311'))) IS TRUE)  as count FROM vt0, t0, t1 ORDER BY (((+ (t0.c41))) IS FALSE)  NULLS FIRST);
SELECT * FROM vt0, t0, t1 WHERE (TYPEOF(PRINTF('1180378311'))) ORDER BY (((+ (t0.c41))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(PRINTF('1180378311'))) IS TRUE)  as count FROM vt0, t0, t1 ORDER BY (((+ (t0.c41))) IS FALSE)  NULLS FIRST);
SELECT * FROM vt0, t0, t1 WHERE (TYPEOF(PRINTF('1180378311'))) ORDER BY (((+ (t0.c41))) IS FALSE)  NULLS FIRST;
SELECT ALL * FROM t0, vt1 INNER JOIN vt0 ON ((t0.c81 COLLATE RTRIM)>(CAST(t0.c48 AS INTEGER))) CROSS JOIN t1 ON (NULL IN ()) WHERE (((((t0.c41)OR(t0.c41)))OR(t0.c84)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((t0.c41)OR(t0.c41)))OR(t0.c84)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1 INNER JOIN vt0 ON ((t0.c81 COLLATE RTRIM)>(CAST(t0.c48 AS INTEGER))) CROSS JOIN t1 ON (NULL IN ()));
SELECT ALL * FROM t0, vt1 INNER JOIN vt0 ON ((t0.c81 COLLATE RTRIM)>(CAST(t0.c48 AS INTEGER))) CROSS JOIN t1 ON (NULL IN ()) WHERE (((((t0.c41)OR(t0.c41)))OR(t0.c84)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((t0.c41)OR(t0.c41)))OR(t0.c84)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1 INNER JOIN vt0 ON ((t0.c81 COLLATE RTRIM)>(CAST(t0.c48 AS INTEGER))) CROSS JOIN t1 ON (NULL IN ()));
SELECT ALL * FROM t0, vt1 INNER JOIN vt0 ON ((t0.c81 COLLATE RTRIM)>(CAST(t0.c48 AS INTEGER))) CROSS JOIN t1 ON (NULL IN ()) WHERE (((((t0.c41)OR(t0.c41)))OR(t0.c84)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t1, vt0, vt1, t0 WHERE (CASE ((((t0.c84)OR(vt1.c0)))AND(-1725562731))  WHEN (t0.c52 IN ()) THEN '' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((t0.c84)OR(vt1.c0)))AND(-1725562731))  WHEN (t0.c52 IN ()) THEN '' END) IS TRUE)  as count FROM t1, vt0, vt1, t0);
SELECT ALL COUNT(*) FROM t1, vt0, vt1, t0 WHERE (CASE ((((t0.c84)OR(vt1.c0)))AND(-1725562731))  WHEN (t0.c52 IN ()) THEN '' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((t0.c84)OR(vt1.c0)))AND(-1725562731))  WHEN (t0.c52 IN ()) THEN '' END) IS TRUE)  as count FROM t1, vt0, vt1, t0);
SELECT ALL COUNT(*) FROM t1, vt0, vt1, t0 WHERE (CASE ((((t0.c84)OR(vt1.c0)))AND(-1725562731))  WHEN (t0.c52 IN ()) THEN '' END);
SELECT COUNT(*) FROM vt1, t1 RIGHT OUTER JOIN t0 ON 0.739556783744336 RIGHT OUTER JOIN vt0 ON (NOT (((t1.c1)==(t0.c84)))) WHERE (CAST(((vt1.c0) NOT BETWEEN (t1.c0) AND (t0.c84)) AS INTEGER)) ORDER BY ((((vt0.c0)*(t1.c2))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) NOT BETWEEN (t1.c0) AND (t0.c84)) AS INTEGER)) IS TRUE)  as count FROM vt1, t1 RIGHT OUTER JOIN t0 ON 0.739556783744336 RIGHT OUTER JOIN vt0 ON (NOT (((t1.c1)=(t0.c84)))) ORDER BY ((((vt0.c0)*(t1.c2))) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt1, t1 RIGHT OUTER JOIN t0 ON 0.739556783744336 RIGHT OUTER JOIN vt0 ON (NOT (((t1.c1)==(t0.c84)))) WHERE (CAST(((vt1.c0) NOT BETWEEN (t1.c0) AND (t0.c84)) AS INTEGER)) ORDER BY ((((vt0.c0)*(t1.c2))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) NOT BETWEEN (t1.c0) AND (t0.c84)) AS INTEGER)) IS TRUE)  as count FROM vt1, t1 RIGHT OUTER JOIN t0 ON 0.739556783744336 RIGHT OUTER JOIN vt0 ON (NOT (((t1.c1)=(t0.c84)))) ORDER BY ((((vt0.c0)*(t1.c2))) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt1, t1 RIGHT OUTER JOIN t0 ON 0.739556783744336 RIGHT OUTER JOIN vt0 ON (NOT (((t1.c1)==(t0.c84)))) WHERE (CAST(((vt1.c0) NOT BETWEEN (t1.c0) AND (t0.c84)) AS INTEGER)) ORDER BY ((((vt0.c0)*(t1.c2))) ISNULL)  NULLS LAST;
SELECT * FROM vt0, t0 RIGHT OUTER JOIN t1 ON (- (((0X7e31e241)<<(t1.c0)))) CROSS JOIN vt1 ON CAST((((vt0.c0, t0.c81, NULL))>=((vt0.c0, t1.c2, t0.c81))) AS NUMERIC) WHERE (((((UPPER(DISTINCT t1.c0))AND((NOT (t0.c41)))))OR(CAST(t0.c81 AS BLOB)))) ORDER BY json_array((((t1.c1)) BETWEEN ((t0.c84)) AND ((t1.c0))), NULLIF(t1.c0, t0.c52), ((t1.c0) NOT BETWEEN (t0.c48) AND (t0.c84)), ((((t0.c81)OR(0.08040009168819418)))OR(t1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((UPPER(DISTINCT t1.c0))AND((NOT (t0.c41)))))OR(CAST(t0.c81 AS BLOB)))) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN t1 ON (- (((0x7e31e241)<<(t1.c0)))) CROSS JOIN vt1 ON CAST((((vt0.c0, t0.c81, NULL))>=((vt0.c0, t1.c2, t0.c81))) AS NUMERIC) ORDER BY json_array((((t1.c1)) BETWEEN ((t0.c84)) AND ((t1.c0))), NULLIF(t1.c0, t0.c52), ((t1.c0) NOT BETWEEN (t0.c48) AND (t0.c84)), ((((t0.c81)OR(0.08040009168819418)))OR(t1.c1))));
SELECT * FROM vt0, t0 RIGHT OUTER JOIN t1 ON (- (((0X7e31e241)<<(t1.c0)))) CROSS JOIN vt1 ON CAST((((vt0.c0, t0.c81, NULL))>=((vt0.c0, t1.c2, t0.c81))) AS NUMERIC) WHERE (((((UPPER(DISTINCT t1.c0))AND((NOT (t0.c41)))))OR(CAST(t0.c81 AS BLOB)))) ORDER BY json_array((((t1.c1)) BETWEEN ((t0.c84)) AND ((t1.c0))), NULLIF(t1.c0, t0.c52), ((t1.c0) NOT BETWEEN (t0.c48) AND (t0.c84)), ((((t0.c81)OR(0.08040009168819418)))OR(t1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((UPPER(DISTINCT t1.c0))AND((NOT (t0.c41)))))OR(CAST(t0.c81 AS BLOB)))) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN t1 ON (- (((0x7e31e241)<<(t1.c0)))) CROSS JOIN vt1 ON CAST((((vt0.c0, t0.c81, NULL))>=((vt0.c0, t1.c2, t0.c81))) AS NUMERIC) ORDER BY json_array((((t1.c1)) BETWEEN ((t0.c84)) AND ((t1.c0))), NULLIF(t1.c0, t0.c52), ((t1.c0) NOT BETWEEN (t0.c48) AND (t0.c84)), ((((t0.c81)OR(0.08040009168819418)))OR(t1.c1))));
SELECT * FROM vt0, t0 RIGHT OUTER JOIN t1 ON (- (((0X7e31e241)<<(t1.c0)))) CROSS JOIN vt1 ON CAST((((vt0.c0, t0.c81, NULL))>=((vt0.c0, t1.c2, t0.c81))) AS NUMERIC) WHERE (((((UPPER(DISTINCT t1.c0))AND((NOT (t0.c41)))))OR(CAST(t0.c81 AS BLOB)))) ORDER BY json_array((((t1.c1)) BETWEEN ((t0.c84)) AND ((t1.c0))), NULLIF(t1.c0, t0.c52), ((t1.c0) NOT BETWEEN (t0.c48) AND (t0.c84)), ((((t0.c81)OR(0.08040009168819418)))OR(t1.c1)));
SELECT ALL * FROM vt0, vt1, t1 WHERE (CAST(((vt1.c0) NOTNULL) AS INTEGER)) ORDER BY STRFTIME('153450132', ((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)), (NOT (x'')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) NOTNULL) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY STRFTIME('153450132', ((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)), (NOT (x'')))  NULLS LAST);
SELECT ALL * FROM vt0, vt1, t1 WHERE (CAST(((vt1.c0) NOTNULL) AS INTEGER)) ORDER BY STRFTIME('153450132', ((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)), (NOT (x'')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) NOTNULL) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY STRFTIME('153450132', ((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)), (NOT (x'')))  NULLS LAST);
SELECT ALL * FROM vt0, vt1, t1 WHERE (CAST(((vt1.c0) NOTNULL) AS INTEGER)) ORDER BY STRFTIME('153450132', ((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)), (NOT (x'')))  NULLS LAST;
SELECT ALL * FROM t0, t1 INNER JOIN vt0 ON ((t0.c48) NOT NULL) COLLATE RTRIM WHERE (CASE t1.c2  WHEN ((t1.c0)IS(t0.c41)) THEN CAST(t0.c48 AS BLOB) WHEN CASE WHEN t0.c48 THEN t0.c48 WHEN t1.c0 THEN t0.c48 WHEN 0.24610385774793364 THEN t0.c41 ELSE t0.c52 END THEN (((t1.c1)) BETWEEN ((t1.c2)) AND ((t0.c41))) WHEN CASE WHEN t0.c84 THEN t1.c0 WHEN t0.c84 THEN t0.c52 WHEN t0.c81 THEN t1.c1 ELSE t0.c81 END THEN x'e95b' END) ORDER BY LIKELY((~ (vt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE t1.c2  WHEN ((t1.c0)IS(t0.c41)) THEN CAST(t0.c48 AS BLOB) WHEN CASE WHEN t0.c48 THEN t0.c48 WHEN t1.c0 THEN t0.c48 WHEN 0.24610385774793364 THEN t0.c41 ELSE t0.c52 END THEN (((t1.c1)) BETWEEN ((t1.c2)) AND ((t0.c41))) WHEN CASE WHEN t0.c84 THEN t1.c0 WHEN t0.c84 THEN t0.c52 WHEN t0.c81 THEN t1.c1 ELSE t0.c81 END THEN x'e95b' END) IS TRUE)  as count FROM t0, t1 INNER JOIN vt0 ON ((t0.c48) NOT NULL) COLLATE RTRIM ORDER BY LIKELY((~ (vt0.c0))) DESC  NULLS LAST);
SELECT ALL * FROM t0, t1 INNER JOIN vt0 ON ((t0.c48) NOT NULL) COLLATE RTRIM WHERE (CASE t1.c2  WHEN ((t1.c0)IS(t0.c41)) THEN CAST(t0.c48 AS BLOB) WHEN CASE WHEN t0.c48 THEN t0.c48 WHEN t1.c0 THEN t0.c48 WHEN 0.24610385774793364 THEN t0.c41 ELSE t0.c52 END THEN (((t1.c1)) BETWEEN ((t1.c2)) AND ((t0.c41))) WHEN CASE WHEN t0.c84 THEN t1.c0 WHEN t0.c84 THEN t0.c52 WHEN t0.c81 THEN t1.c1 ELSE t0.c81 END THEN x'e95b' END) ORDER BY LIKELY((~ (vt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE t1.c2  WHEN ((t1.c0)IS(t0.c41)) THEN CAST(t0.c48 AS BLOB) WHEN CASE WHEN t0.c48 THEN t0.c48 WHEN t1.c0 THEN t0.c48 WHEN 0.24610385774793364 THEN t0.c41 ELSE t0.c52 END THEN (((t1.c1)) BETWEEN ((t1.c2)) AND ((t0.c41))) WHEN CASE WHEN t0.c84 THEN t1.c0 WHEN t0.c84 THEN t0.c52 WHEN t0.c81 THEN t1.c1 ELSE t0.c81 END THEN x'e95b' END) IS TRUE)  as count FROM t0, t1 INNER JOIN vt0 ON ((t0.c48) NOT NULL) COLLATE RTRIM ORDER BY LIKELY((~ (vt0.c0))) DESC  NULLS LAST);
SELECT ALL * FROM t0, t1 INNER JOIN vt0 ON ((t0.c48) NOT NULL) COLLATE RTRIM WHERE (CASE t1.c2  WHEN ((t1.c0)IS(t0.c41)) THEN CAST(t0.c48 AS BLOB) WHEN CASE WHEN t0.c48 THEN t0.c48 WHEN t1.c0 THEN t0.c48 WHEN 0.24610385774793364 THEN t0.c41 ELSE t0.c52 END THEN (((t1.c1)) BETWEEN ((t1.c2)) AND ((t0.c41))) WHEN CASE WHEN t0.c84 THEN t1.c0 WHEN t0.c84 THEN t0.c52 WHEN t0.c81 THEN t1.c1 ELSE t0.c81 END THEN x'e95b' END) ORDER BY LIKELY((~ (vt0.c0))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t1, t0 WHERE (CASE (vt0.c0 IN ())  WHEN (((t1.c2, t1.c1, t0.c41))>((vt0.c0, vt0.c0, t1.c1))) THEN ((((-650478910)OR(t1.c0)))AND(t0.c52)) END) ORDER BY t0.c41 DESC  NULLS FIRST, (~ (((t0.c81) NOT BETWEEN (t1.c1) AND (t0.c48)))), ((CAST(t0.c41 AS INTEGER))IS NOT(((x'26bb852c')GLOB(t0.c84))));
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c0 IN ())  WHEN (((t1.c2, t1.c1, t0.c41))>((vt0.c0, vt0.c0, t1.c1))) THEN ((((-650478910)OR(t1.c0)))AND(t0.c52)) END) IS TRUE)  as count FROM vt0, t1, t0 ORDER BY t0.c41 DESC  NULLS FIRST, (~ (((t0.c81) NOT BETWEEN (t1.c1) AND (t0.c48)))), ((CAST(t0.c41 AS INTEGER))IS NOT(((x'26bb852c')GLOB(t0.c84)))));
SELECT COUNT(*) FROM vt0, t1, t0 WHERE (CASE (vt0.c0 IN ())  WHEN (((t1.c2, t1.c1, t0.c41))>((vt0.c0, vt0.c0, t1.c1))) THEN ((((-650478910)OR(t1.c0)))AND(t0.c52)) END) ORDER BY t0.c41 DESC  NULLS FIRST, (~ (((t0.c81) NOT BETWEEN (t1.c1) AND (t0.c48)))), ((CAST(t0.c41 AS INTEGER))IS NOT(((x'26bb852c')GLOB(t0.c84))));
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c0 IN ())  WHEN (((t1.c2, t1.c1, t0.c41))>((vt0.c0, vt0.c0, t1.c1))) THEN ((((-650478910)OR(t1.c0)))AND(t0.c52)) END) IS TRUE)  as count FROM vt0, t1, t0 ORDER BY t0.c41 DESC  NULLS FIRST, (~ (((t0.c81) NOT BETWEEN (t1.c1) AND (t0.c48)))), ((CAST(t0.c41 AS INTEGER))IS NOT(((x'26bb852c')GLOB(t0.c84)))));
SELECT COUNT(*) FROM vt0, t1, t0 WHERE (CASE (vt0.c0 IN ())  WHEN (((t1.c2, t1.c1, t0.c41))>((vt0.c0, vt0.c0, t1.c1))) THEN ((((-650478910)OR(t1.c0)))AND(t0.c52)) END) ORDER BY t0.c41 DESC  NULLS FIRST, (~ (((t0.c81) NOT BETWEEN (t1.c1) AND (t0.c48)))), ((CAST(t0.c41 AS INTEGER))IS NOT(((x'26bb852c')GLOB(t0.c84))));
SELECT ALL COUNT(*) FROM vt0, vt1 CROSS JOIN t0 ON t0.c84 WHERE (TRIM(((t0.c41) NOT BETWEEN (t0.c81) AND (vt1.c0)), ((vt1.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((TRIM(((t0.c41) NOT BETWEEN (t0.c81) AND (vt1.c0)), ((vt1.c0) IS FALSE))) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN t0 ON t0.c84);
SELECT ALL COUNT(*) FROM vt0, vt1 CROSS JOIN t0 ON t0.c84 WHERE (TRIM(((t0.c41) NOT BETWEEN (t0.c81) AND (vt1.c0)), ((vt1.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((TRIM(((t0.c41) NOT BETWEEN (t0.c81) AND (vt1.c0)), ((vt1.c0) IS FALSE))) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN t0 ON t0.c84);
SELECT ALL COUNT(*) FROM vt0, vt1 CROSS JOIN t0 ON t0.c84 WHERE (TRIM(((t0.c41) NOT BETWEEN (t0.c81) AND (vt1.c0)), ((vt1.c0) IS FALSE)));
SELECT * FROM t0, t1, vt0 WHERE (((t1.c0 COLLATE NOCASE)||(json_remove(t1.c1, t0.c48)))) ORDER BY CAST(((((t0.c41)OR(t0.c52)))OR(t0.c48)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0 COLLATE NOCASE)||(json_remove(t1.c1, t0.c48)))) IS TRUE)  as count FROM t0, t1, vt0 ORDER BY CAST(((((t0.c41)OR(t0.c52)))OR(t0.c48)) AS NUMERIC));
SELECT * FROM t0, t1, vt0 WHERE (((t1.c0 COLLATE NOCASE)||(json_remove(t1.c1, t0.c48)))) ORDER BY CAST(((((t0.c41)OR(t0.c52)))OR(t0.c48)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0 COLLATE NOCASE)||(json_remove(t1.c1, t0.c48)))) IS TRUE)  as count FROM t0, t1, vt0 ORDER BY CAST(((((t0.c41)OR(t0.c52)))OR(t0.c48)) AS NUMERIC));
SELECT * FROM t0, t1, vt0 WHERE (((t1.c0 COLLATE NOCASE)||(json_remove(t1.c1, t0.c48)))) ORDER BY CAST(((((t0.c41)OR(t0.c52)))OR(t0.c48)) AS NUMERIC);
SELECT ALL * FROM t0 INDEXED BY i32 WHERE ((((((t0.c48 IN ()))AND((((t0.c48))==((t0.c48))))))AND(2.008356132E9)));
SELECT SUM(count) FROM (SELECT (((((((t0.c48 IN ()))AND((((t0.c48))=((t0.c48))))))AND(2.008356132E9))) IS TRUE)  as count FROM t0 INDEXED BY i32);
SELECT ALL * FROM t0 INDEXED BY i32 WHERE ((((((t0.c48 IN ()))AND((((t0.c48))==((t0.c48))))))AND(2.008356132E9)));
SELECT SUM(count) FROM (SELECT (((((((t0.c48 IN ()))AND((((t0.c48))=((t0.c48))))))AND(2.008356132E9))) IS TRUE)  as count FROM t0 INDEXED BY i32);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON '2090375987' COLLATE NOCASE LEFT OUTER JOIN vt1 ON ((vt1.c0)>(((t0.c41)||(vt0.c0)))) CROSS JOIN t1 ON NULL WHERE ((- (UNLIKELY(DISTINCT t0.c84))));
SELECT SUM(count) FROM (SELECT ALL (((- (UNLIKELY(DISTINCT t0.c84)))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON '2090375987' COLLATE NOCASE LEFT OUTER JOIN vt1 ON ((vt1.c0)>(((t0.c41)||(vt0.c0)))) CROSS JOIN t1 ON NULL);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON '2090375987' COLLATE NOCASE LEFT OUTER JOIN vt1 ON ((vt1.c0)>(((t0.c41)||(vt0.c0)))) CROSS JOIN t1 ON NULL WHERE ((- (UNLIKELY(DISTINCT t0.c84))));
SELECT SUM(count) FROM (SELECT ALL (((- (UNLIKELY(DISTINCT t0.c84)))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON '2090375987' COLLATE NOCASE LEFT OUTER JOIN vt1 ON ((vt1.c0)>(((t0.c41)||(vt0.c0)))) CROSS JOIN t1 ON NULL);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON '2090375987' COLLATE NOCASE LEFT OUTER JOIN vt1 ON ((vt1.c0)>(((t0.c41)||(vt0.c0)))) CROSS JOIN t1 ON NULL WHERE ((- (UNLIKELY(DISTINCT t0.c84))));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON ((CAST(t0.c52 AS INTEGER))OR(((t0.c41)&(t0.c41)))) RIGHT OUTER JOIN vt1 ON ((((t0.c52))<>((vt0.c0))) IN (x'')) WHERE ((~ (((t0.c52) NOTNULL)))) ORDER BY CASE WHEN CASE vt1.c0  WHEN t0.c41 THEN vt0.c0 WHEN t0.c52 THEN vt1.c0 WHEN t0.c52 THEN 0.1066841817256644 WHEN t0.c52 THEN '' WHEN vt1.c0 THEN t0.c81 END THEN ((((t0.c52)AND(t0.c48)))OR(t0.c48)) WHEN (t0.c41 IN ()) THEN (('-818194732')>=(t0.c41)) WHEN (('-908392713')||(vt0.c0)) THEN ((t0.c41) ISNULL) END  NULLS FIRST, CAST((+ (t0.c41)) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((t0.c52) NOTNULL)))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((CAST(t0.c52 AS INTEGER))OR(((t0.c41)&(t0.c41)))) RIGHT OUTER JOIN vt1 ON ((((t0.c52))!=((vt0.c0))) IN (x'')) ORDER BY CASE WHEN CASE vt1.c0  WHEN t0.c41 THEN vt0.c0 WHEN t0.c52 THEN vt1.c0 WHEN t0.c52 THEN 0.1066841817256644 WHEN t0.c52 THEN '' WHEN vt1.c0 THEN t0.c81 END THEN ((((t0.c52)AND(t0.c48)))OR(t0.c48)) WHEN (t0.c41 IN ()) THEN (('-818194732')>=(t0.c41)) WHEN (('-908392713')||(vt0.c0)) THEN ((t0.c41) ISNULL) END  NULLS FIRST, CAST((+ (t0.c41)) AS INTEGER) DESC  NULLS LAST);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON ((CAST(t0.c52 AS INTEGER))OR(((t0.c41)&(t0.c41)))) RIGHT OUTER JOIN vt1 ON ((((t0.c52))<>((vt0.c0))) IN (x'')) WHERE ((~ (((t0.c52) NOTNULL)))) ORDER BY CASE WHEN CASE vt1.c0  WHEN t0.c41 THEN vt0.c0 WHEN t0.c52 THEN vt1.c0 WHEN t0.c52 THEN 0.1066841817256644 WHEN t0.c52 THEN '' WHEN vt1.c0 THEN t0.c81 END THEN ((((t0.c52)AND(t0.c48)))OR(t0.c48)) WHEN (t0.c41 IN ()) THEN (('-818194732')>=(t0.c41)) WHEN (('-908392713')||(vt0.c0)) THEN ((t0.c41) ISNULL) END  NULLS FIRST, CAST((+ (t0.c41)) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((t0.c52) NOTNULL)))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((CAST(t0.c52 AS INTEGER))OR(((t0.c41)&(t0.c41)))) RIGHT OUTER JOIN vt1 ON ((((t0.c52))!=((vt0.c0))) IN (x'')) ORDER BY CASE WHEN CASE vt1.c0  WHEN t0.c41 THEN vt0.c0 WHEN t0.c52 THEN vt1.c0 WHEN t0.c52 THEN 0.1066841817256644 WHEN t0.c52 THEN '' WHEN vt1.c0 THEN t0.c81 END THEN ((((t0.c52)AND(t0.c48)))OR(t0.c48)) WHEN (t0.c41 IN ()) THEN (('-818194732')>=(t0.c41)) WHEN (('-908392713')||(vt0.c0)) THEN ((t0.c41) ISNULL) END  NULLS FIRST, CAST((+ (t0.c41)) AS INTEGER) DESC  NULLS LAST);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON ((CAST(t0.c52 AS INTEGER))OR(((t0.c41)&(t0.c41)))) RIGHT OUTER JOIN vt1 ON ((((t0.c52))<>((vt0.c0))) IN (x'')) WHERE ((~ (((t0.c52) NOTNULL)))) ORDER BY CASE WHEN CASE vt1.c0  WHEN t0.c41 THEN vt0.c0 WHEN t0.c52 THEN vt1.c0 WHEN t0.c52 THEN 0.1066841817256644 WHEN t0.c52 THEN '' WHEN vt1.c0 THEN t0.c81 END THEN ((((t0.c52)AND(t0.c48)))OR(t0.c48)) WHEN (t0.c41 IN ()) THEN (('-818194732')>=(t0.c41)) WHEN (('-908392713')||(vt0.c0)) THEN ((t0.c41) ISNULL) END  NULLS FIRST, CAST((+ (t0.c41)) AS INTEGER) DESC  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE (1740735457);
SELECT SUM(count) FROM (SELECT ((1740735457) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (1740735457);
SELECT SUM(count) FROM (SELECT ((1740735457) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (1740735457);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END IN ())) ORDER BY CASE ((((vt1.c0)AND(NULL)))OR(vt0.c0))  WHEN NULL THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE (- (vt1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY CASE ((((vt1.c0)AND(NULL)))OR(vt0.c0))  WHEN NULL THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE (- (vt1.c0)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END IN ())) ORDER BY CASE ((((vt1.c0)AND(NULL)))OR(vt0.c0))  WHEN NULL THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE (- (vt1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY CASE ((((vt1.c0)AND(NULL)))OR(vt0.c0))  WHEN NULL THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE (- (vt1.c0)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END IN ())) ORDER BY CASE ((((vt1.c0)AND(NULL)))OR(vt0.c0))  WHEN NULL THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE (- (vt1.c0)) END  NULLS LAST;
SELECT ALL * FROM vt1, t0, vt0 WHERE (CAST(((((((((t0.c52)AND(t0.c41)))AND(t0.c41)))AND(vt0.c0)))OR(NULL)) AS REAL)) ORDER BY ((((((((t0.c48 COLLATE NOCASE)AND(((((t0.c84)OR(t0.c48)))AND(vt1.c0)))))OR((NOT (t0.c41)))))OR((t0.c48 IN (t0.c52, t0.c52)))))AND(((vt0.c0) IS FALSE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((t0.c52)AND(t0.c41)))AND(t0.c41)))AND(vt0.c0)))OR(NULL)) AS REAL)) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((((((((t0.c48 COLLATE NOCASE)AND(((((t0.c84)OR(t0.c48)))AND(vt1.c0)))))OR((NOT (t0.c41)))))OR((t0.c48 IN (t0.c52, t0.c52)))))AND(((vt0.c0) IS FALSE))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, t0, vt0 WHERE (CAST(((((((((t0.c52)AND(t0.c41)))AND(t0.c41)))AND(vt0.c0)))OR(NULL)) AS REAL)) ORDER BY ((((((((t0.c48 COLLATE NOCASE)AND(((((t0.c84)OR(t0.c48)))AND(vt1.c0)))))OR((NOT (t0.c41)))))OR((t0.c48 IN (t0.c52, t0.c52)))))AND(((vt0.c0) IS FALSE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((t0.c52)AND(t0.c41)))AND(t0.c41)))AND(vt0.c0)))OR(NULL)) AS REAL)) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((((((((t0.c48 COLLATE NOCASE)AND(((((t0.c84)OR(t0.c48)))AND(vt1.c0)))))OR((NOT (t0.c41)))))OR((t0.c48 IN (t0.c52, t0.c52)))))AND(((vt0.c0) IS FALSE))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, t0, vt0 WHERE (CAST(((((((((t0.c52)AND(t0.c41)))AND(t0.c41)))AND(vt0.c0)))OR(NULL)) AS REAL)) ORDER BY ((((((((t0.c48 COLLATE NOCASE)AND(((((t0.c84)OR(t0.c48)))AND(vt1.c0)))))OR((NOT (t0.c41)))))OR((t0.c48 IN (t0.c52, t0.c52)))))AND(((vt0.c0) IS FALSE))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (LIKELY(((0.9136499227097304)IS NOT(0.3204737175202108)))) ORDER BY (((((((((t0.c48 IN ()))OR(((t0.c41) NOTNULL))))AND(TYPEOF(vt0.c0))))OR(CAST(vt1.c0 AS BLOB))))AND(((t0.c41) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((0.9136499227097304)IS NOT(0.3204737175202108)))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (((((((((t0.c48 IN ()))OR(((t0.c41) NOTNULL))))AND(TYPEOF(vt0.c0))))OR(CAST(vt1.c0 AS BLOB))))AND(((t0.c41) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (LIKELY(((0.9136499227097304)IS NOT(0.3204737175202108)))) ORDER BY (((((((((t0.c48 IN ()))OR(((t0.c41) NOTNULL))))AND(TYPEOF(vt0.c0))))OR(CAST(vt1.c0 AS BLOB))))AND(((t0.c41) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((0.9136499227097304)IS NOT(0.3204737175202108)))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (((((((((t0.c48 IN ()))OR(((t0.c41) NOTNULL))))AND(TYPEOF(vt0.c0))))OR(CAST(vt1.c0 AS BLOB))))AND(((t0.c41) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (LIKELY(((0.9136499227097304)IS NOT(0.3204737175202108)))) ORDER BY (((((((((t0.c48 IN ()))OR(((t0.c41) NOTNULL))))AND(TYPEOF(vt0.c0))))OR(CAST(vt1.c0 AS BLOB))))AND(((t0.c41) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT * FROM vt0, vt1, t0 WHERE (((CASE t0.c48  WHEN t0.c81 THEN t0.c84 WHEN t0.c41 THEN t0.c81 WHEN t0.c41 THEN x'2a1c' END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c48  WHEN t0.c81 THEN t0.c84 WHEN t0.c41 THEN t0.c81 WHEN t0.c41 THEN x'2a1c' END) NOTNULL)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE (((CASE t0.c48  WHEN t0.c81 THEN t0.c84 WHEN t0.c41 THEN t0.c81 WHEN t0.c41 THEN x'2a1c' END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c48  WHEN t0.c81 THEN t0.c84 WHEN t0.c41 THEN t0.c81 WHEN t0.c41 THEN x'2a1c' END) NOTNULL)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE (((CASE t0.c48  WHEN t0.c81 THEN t0.c84 WHEN t0.c41 THEN t0.c81 WHEN t0.c41 THEN x'2a1c' END) NOTNULL));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((t0.c81 IN (vt0.c0, t0.c48)) IN ())) ORDER BY CASE WHEN (- (t0.c48)) THEN IFNULL(vt0.c0, t0.c84) WHEN t0.c52 COLLATE NOCASE THEN HEX(vt0.c0) WHEN CAST(t0.c81 AS TEXT) THEN ((t0.c81)<<(t0.c81)) ELSE LOWER(DISTINCT 0.45535956854419524) END  NULLS LAST, ((CAST(vt0.c0 AS REAL)) BETWEEN (((t0.c48)GLOB(t0.c84))) AND (((t0.c81)<(t0.c84)))) DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c81 IN (vt0.c0, t0.c48)) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN (- (t0.c48)) THEN IFNULL(vt0.c0, t0.c84) WHEN t0.c52 COLLATE NOCASE THEN HEX(vt0.c0) WHEN CAST(t0.c81 AS TEXT) THEN ((t0.c81)<<(t0.c81)) ELSE LOWER(DISTINCT 0.45535956854419524) END  NULLS LAST, ((CAST(vt0.c0 AS REAL)) BETWEEN (((t0.c48)GLOB(t0.c84))) AND (((t0.c81)<(t0.c84)))) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((t0.c81 IN (vt0.c0, t0.c48)) IN ())) ORDER BY CASE WHEN (- (t0.c48)) THEN IFNULL(vt0.c0, t0.c84) WHEN t0.c52 COLLATE NOCASE THEN HEX(vt0.c0) WHEN CAST(t0.c81 AS TEXT) THEN ((t0.c81)<<(t0.c81)) ELSE LOWER(DISTINCT 0.45535956854419524) END  NULLS LAST, ((CAST(vt0.c0 AS REAL)) BETWEEN (((t0.c48)GLOB(t0.c84))) AND (((t0.c81)<(t0.c84)))) DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c81 IN (vt0.c0, t0.c48)) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN (- (t0.c48)) THEN IFNULL(vt0.c0, t0.c84) WHEN t0.c52 COLLATE NOCASE THEN HEX(vt0.c0) WHEN CAST(t0.c81 AS TEXT) THEN ((t0.c81)<<(t0.c81)) ELSE LOWER(DISTINCT 0.45535956854419524) END  NULLS LAST, ((CAST(vt0.c0 AS REAL)) BETWEEN (((t0.c48)GLOB(t0.c84))) AND (((t0.c81)<(t0.c84)))) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((t0.c81 IN (vt0.c0, t0.c48)) IN ())) ORDER BY CASE WHEN (- (t0.c48)) THEN IFNULL(vt0.c0, t0.c84) WHEN t0.c52 COLLATE NOCASE THEN HEX(vt0.c0) WHEN CAST(t0.c81 AS TEXT) THEN ((t0.c81)<<(t0.c81)) ELSE LOWER(DISTINCT 0.45535956854419524) END  NULLS LAST, ((CAST(vt0.c0 AS REAL)) BETWEEN (((t0.c48)GLOB(t0.c84))) AND (((t0.c81)<(t0.c84)))) DESC;
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (-800636.0);
SELECT SUM(count) FROM (SELECT ALL ((-800636.0) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (-800636.0);
SELECT SUM(count) FROM (SELECT ALL ((-800636.0) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (-800636.0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c52 AS BLOB)) IS TRUE)) ORDER BY t0.c81 ASC  NULLS LAST, ((((TRIM(t0.c84))OR(((t0.c41)IS NOT(t0.c84)))))OR(x'' COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c52 AS BLOB)) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY t0.c81 ASC  NULLS LAST, ((((TRIM(t0.c84))OR(((t0.c41)IS NOT(t0.c84)))))OR(x'' COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c52 AS BLOB)) IS TRUE)) ORDER BY t0.c81 ASC  NULLS LAST, ((((TRIM(t0.c84))OR(((t0.c41)IS NOT(t0.c84)))))OR(x'' COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c52 AS BLOB)) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY t0.c81 ASC  NULLS LAST, ((((TRIM(t0.c84))OR(((t0.c41)IS NOT(t0.c84)))))OR(x'' COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c52 AS BLOB)) IS TRUE)) ORDER BY t0.c81 ASC  NULLS LAST, ((((TRIM(t0.c84))OR(((t0.c41)IS NOT(t0.c84)))))OR(x'' COLLATE NOCASE));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (NOT (vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '-910732675' END THEN ((vt0.c0)<=(vt0.c0)) ELSE CAST(vt0.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE (NOT (vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '-910732675' END THEN ((vt0.c0)<=(vt0.c0)) ELSE CAST(vt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (NOT (vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '-910732675' END THEN ((vt0.c0)<=(vt0.c0)) ELSE CAST(vt0.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE (NOT (vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '-910732675' END THEN ((vt0.c0)<=(vt0.c0)) ELSE CAST(vt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (NOT (vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '-910732675' END THEN ((vt0.c0)<=(vt0.c0)) ELSE CAST(vt0.c0 AS NUMERIC) END);
SELECT COUNT(*) FROM vt0, t1, vt1 INNER JOIN t0 ON vt1.c0 WHERE (t1.c1) ORDER BY ((((t0.c41)/(vt1.c0))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t1.c1) IS TRUE)  as count FROM vt0, t1, vt1 INNER JOIN t0 ON vt1.c0 ORDER BY ((((t0.c41)/(vt1.c0))) IS FALSE) ASC);
SELECT COUNT(*) FROM vt0, t1, vt1 INNER JOIN t0 ON vt1.c0 WHERE (t1.c1) ORDER BY ((((t0.c41)/(vt1.c0))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t1.c1) IS TRUE)  as count FROM vt0, t1, vt1 INNER JOIN t0 ON vt1.c0 ORDER BY ((((t0.c41)/(vt1.c0))) IS FALSE) ASC);
SELECT COUNT(*) FROM vt0, t1, vt1 INNER JOIN t0 ON vt1.c0 WHERE (t1.c1) ORDER BY ((((t0.c41)/(vt1.c0))) IS FALSE) ASC;
SELECT ALL * FROM t1, t0, vt1 WHERE (((((UNLIKELY(vt1.c0))OR(x'')))OR(CASE -2002020304  WHEN t0.c52 THEN vt1.c0 ELSE t0.c81 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((UNLIKELY(vt1.c0))OR(x'')))OR(CASE -2002020304  WHEN t0.c52 THEN vt1.c0 ELSE t0.c81 END))) IS TRUE)  as count FROM t1, t0, vt1);
SELECT ALL * FROM t1, t0, vt1 WHERE (((((UNLIKELY(vt1.c0))OR(x'')))OR(CASE -2002020304  WHEN t0.c52 THEN vt1.c0 ELSE t0.c81 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((UNLIKELY(vt1.c0))OR(x'')))OR(CASE -2002020304  WHEN t0.c52 THEN vt1.c0 ELSE t0.c81 END))) IS TRUE)  as count FROM t1, t0, vt1);
SELECT ALL * FROM t1, t0, vt1 WHERE (((((UNLIKELY(vt1.c0))OR(x'')))OR(CASE -2002020304  WHEN t0.c52 THEN vt1.c0 ELSE t0.c81 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0))>=((vt0.c0)))))>=(('-343471021'))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0))>=((vt0.c0)))))>=(('-343471021')))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0))>=((vt0.c0)))))>=(('-343471021'))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0))>=((vt0.c0)))))>=(('-343471021')))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0))>=((vt0.c0)))))>=(('-343471021'))));
SELECT * FROM vt1, vt0 WHERE (((+ (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((+ (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((+ (vt1.c0)) IN ()));
SELECT ALL COUNT(*) FROM t1, t0, vt1 INNER JOIN vt0 ON (((t0.c52, t1.c1, t0.c41)) NOT BETWEEN (((vt0.c0 IN ('㷜5')), ((t0.c41)<(t1.c0)), (((((((('o8')AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(t1.c2)))) AND ((CASE t0.c52  WHEN '' THEN t0.c41 END, (((t0.c41, t1.c0, t0.c52))!=((vt1.c0, t1.c2, '1250728621'))), t0.c41 COLLATE NOCASE))) WHERE ((((((t0.c81, '', t0.c41))>=((t1.c1, t1.c1, t0.c48)))) BETWEEN ((t1.c2 IN ())) AND (CASE WHEN t1.c0 THEN t0.c48 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c81, '', t0.c41))>=((t1.c1, t1.c1, t0.c48)))) BETWEEN ((t1.c2 IN ())) AND (CASE WHEN t1.c0 THEN t0.c48 END))) IS TRUE)  as count FROM t1, t0, vt1 INNER JOIN vt0 ON (((t0.c52, t1.c1, t0.c41)) NOT BETWEEN (((vt0.c0 IN ('㷜5')), ((t0.c41)<(t1.c0)), (((((((('o8')AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(t1.c2)))) AND ((CASE t0.c52  WHEN '' THEN t0.c41 END, (((t0.c41, t1.c0, t0.c52))<>((vt1.c0, t1.c2, '1250728621'))), t0.c41 COLLATE NOCASE))));
SELECT ALL COUNT(*) FROM t1, t0, vt1 INNER JOIN vt0 ON (((t0.c52, t1.c1, t0.c41)) NOT BETWEEN (((vt0.c0 IN ('㷜5')), ((t0.c41)<(t1.c0)), (((((((('o8')AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(t1.c2)))) AND ((CASE t0.c52  WHEN '' THEN t0.c41 END, (((t0.c41, t1.c0, t0.c52))!=((vt1.c0, t1.c2, '1250728621'))), t0.c41 COLLATE NOCASE))) WHERE ((((((t0.c81, '', t0.c41))>=((t1.c1, t1.c1, t0.c48)))) BETWEEN ((t1.c2 IN ())) AND (CASE WHEN t1.c0 THEN t0.c48 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c81, '', t0.c41))>=((t1.c1, t1.c1, t0.c48)))) BETWEEN ((t1.c2 IN ())) AND (CASE WHEN t1.c0 THEN t0.c48 END))) IS TRUE)  as count FROM t1, t0, vt1 INNER JOIN vt0 ON (((t0.c52, t1.c1, t0.c41)) NOT BETWEEN (((vt0.c0 IN ('㷜5')), ((t0.c41)<(t1.c0)), (((((((('o8')AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(t1.c2)))) AND ((CASE t0.c52  WHEN '' THEN t0.c41 END, (((t0.c41, t1.c0, t0.c52))<>((vt1.c0, t1.c2, '1250728621'))), t0.c41 COLLATE NOCASE))));
SELECT ALL COUNT(*) FROM t1, t0, vt1 INNER JOIN vt0 ON (((t0.c52, t1.c1, t0.c41)) NOT BETWEEN (((vt0.c0 IN ('㷜5')), ((t0.c41)<(t1.c0)), (((((((('o8')AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(t1.c2)))) AND ((CASE t0.c52  WHEN '' THEN t0.c41 END, (((t0.c41, t1.c0, t0.c52))!=((vt1.c0, t1.c2, '1250728621'))), t0.c41 COLLATE NOCASE))) WHERE ((((((t0.c81, '', t0.c41))>=((t1.c1, t1.c1, t0.c48)))) BETWEEN ((t1.c2 IN ())) AND (CASE WHEN t1.c0 THEN t0.c48 END)));
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((NULL)GLOB('539800931')));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)GLOB('539800931'))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((NULL)GLOB('539800931')));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)GLOB('539800931'))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((NULL)GLOB('539800931')));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON vt1.c0 WHERE (vt0.c0) ORDER BY (- (HEX(vt0.c0))), CAST((((vt1.c0))<=((vt1.c0))) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON vt1.c0 ORDER BY (- (HEX(vt0.c0))), CAST((((vt1.c0))<=((vt1.c0))) AS INTEGER) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON vt1.c0 WHERE (vt0.c0) ORDER BY (- (HEX(vt0.c0))), CAST((((vt1.c0))<=((vt1.c0))) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON vt1.c0 ORDER BY (- (HEX(vt0.c0))), CAST((((vt1.c0))<=((vt1.c0))) AS INTEGER) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON vt1.c0 WHERE (vt0.c0) ORDER BY (- (HEX(vt0.c0))), CAST((((vt1.c0))<=((vt1.c0))) AS INTEGER) ASC  NULLS FIRST;
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (NULLIF(((vt1.c0) NOT NULL), vt0.c0)) ORDER BY (NOT (((vt1.c0) IS FALSE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULLIF(((vt1.c0) NOT NULL), vt0.c0)) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY (NOT (((vt1.c0) IS FALSE))) ASC  NULLS FIRST);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (NULLIF(((vt1.c0) NOT NULL), vt0.c0)) ORDER BY (NOT (((vt1.c0) IS FALSE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULLIF(((vt1.c0) NOT NULL), vt0.c0)) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY (NOT (((vt1.c0) IS FALSE))) ASC  NULLS FIRST);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (NULLIF(((vt1.c0) NOT NULL), vt0.c0)) ORDER BY (NOT (((vt1.c0) IS FALSE))) ASC  NULLS FIRST;
SELECT * FROM t0, t1 LEFT OUTER JOIN vt0 ON (((CASE t0.c81  WHEN t0.c41 THEN t1.c1 END, ((t0.c81) BETWEEN (t0.c84) AND (t0.c81)), CASE WHEN t0.c84 THEN vt1.c0 END))>((json_array(t1.c1, t1.c0), ((t0.c84)||(x'')), CAST(t0.c48 AS INTEGER)))) LEFT OUTER JOIN vt1 ON ((1.350702151E9)*(IFNULL(DISTINCT t0.c84, vt0.c0))) WHERE (((IFNULL(t1.c2, t1.c0)) NOT NULL)) ORDER BY json_insert(t1.c0 COLLATE RTRIM, ((((t1.c2)AND(t0.c48)))AND(-1913120222)), ((t0.c84)&(vt1.c0))) ASC  NULLS FIRST, ((((t0.c81)OR(t0.c41)))LIKE(TYPEOF(DISTINCT t0.c41))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(t1.c2, t1.c0)) NOT NULL)) IS TRUE)  as count FROM t0, t1 LEFT OUTER JOIN vt0 ON (((CASE t0.c81  WHEN t0.c41 THEN t1.c1 END, ((t0.c81) BETWEEN (t0.c84) AND (t0.c81)), CASE WHEN t0.c84 THEN vt1.c0 END))>((json_array(t1.c1, t1.c0), ((t0.c84)||(x'')), CAST(t0.c48 AS INTEGER)))) LEFT OUTER JOIN vt1 ON ((1.350702151E9)*(IFNULL(DISTINCT t0.c84, vt0.c0))) ORDER BY json_insert(t1.c0 COLLATE RTRIM, ((((t1.c2)AND(t0.c48)))AND(-1913120222)), ((t0.c84)&(vt1.c0))) ASC  NULLS FIRST, ((((t0.c81)OR(t0.c41)))LIKE(TYPEOF(DISTINCT t0.c41))) DESC);
SELECT * FROM t0, t1 LEFT OUTER JOIN vt0 ON (((CASE t0.c81  WHEN t0.c41 THEN t1.c1 END, ((t0.c81) BETWEEN (t0.c84) AND (t0.c81)), CASE WHEN t0.c84 THEN vt1.c0 END))>((json_array(t1.c1, t1.c0), ((t0.c84)||(x'')), CAST(t0.c48 AS INTEGER)))) LEFT OUTER JOIN vt1 ON ((1.350702151E9)*(IFNULL(DISTINCT t0.c84, vt0.c0))) WHERE (((IFNULL(t1.c2, t1.c0)) NOT NULL)) ORDER BY json_insert(t1.c0 COLLATE RTRIM, ((((t1.c2)AND(t0.c48)))AND(-1913120222)), ((t0.c84)&(vt1.c0))) ASC  NULLS FIRST, ((((t0.c81)OR(t0.c41)))LIKE(TYPEOF(DISTINCT t0.c41))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(t1.c2, t1.c0)) NOT NULL)) IS TRUE)  as count FROM t0, t1 LEFT OUTER JOIN vt0 ON (((CASE t0.c81  WHEN t0.c41 THEN t1.c1 END, ((t0.c81) BETWEEN (t0.c84) AND (t0.c81)), CASE WHEN t0.c84 THEN vt1.c0 END))>((json_array(t1.c1, t1.c0), ((t0.c84)||(x'')), CAST(t0.c48 AS INTEGER)))) LEFT OUTER JOIN vt1 ON ((1.350702151E9)*(IFNULL(DISTINCT t0.c84, vt0.c0))) ORDER BY json_insert(t1.c0 COLLATE RTRIM, ((((t1.c2)AND(t0.c48)))AND(-1913120222)), ((t0.c84)&(vt1.c0))) ASC  NULLS FIRST, ((((t0.c81)OR(t0.c41)))LIKE(TYPEOF(DISTINCT t0.c41))) DESC);
SELECT ALL * FROM vt0, vt1, t0, t1 WHERE (HEX(DISTINCT CASE WHEN t1.c2 THEN t0.c52 ELSE t0.c84 END)) ORDER BY (((vt1.c0)) BETWEEN ((((t0.c41) BETWEEN (t0.c81) AND (vt1.c0)))) AND ((((t1.c1) NOT BETWEEN (t0.c84) AND (vt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT CASE WHEN t1.c2 THEN t0.c52 ELSE t0.c84 END)) IS TRUE)  as count FROM vt0, vt1, t0, t1 ORDER BY (((vt1.c0)) BETWEEN ((((t0.c41) BETWEEN (t0.c81) AND (vt1.c0)))) AND ((((t1.c1) NOT BETWEEN (t0.c84) AND (vt1.c0)))))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, t0, t1 WHERE (HEX(DISTINCT CASE WHEN t1.c2 THEN t0.c52 ELSE t0.c84 END)) ORDER BY (((vt1.c0)) BETWEEN ((((t0.c41) BETWEEN (t0.c81) AND (vt1.c0)))) AND ((((t1.c1) NOT BETWEEN (t0.c84) AND (vt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT CASE WHEN t1.c2 THEN t0.c52 ELSE t0.c84 END)) IS TRUE)  as count FROM vt0, vt1, t0, t1 ORDER BY (((vt1.c0)) BETWEEN ((((t0.c41) BETWEEN (t0.c81) AND (vt1.c0)))) AND ((((t1.c1) NOT BETWEEN (t0.c84) AND (vt1.c0)))))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, t0, t1 WHERE (HEX(DISTINCT CASE WHEN t1.c2 THEN t0.c52 ELSE t0.c84 END)) ORDER BY (((vt1.c0)) BETWEEN ((((t0.c41) BETWEEN (t0.c81) AND (vt1.c0)))) AND ((((t1.c1) NOT BETWEEN (t0.c84) AND (vt1.c0)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((t0.c52)&(t0.c81)) IN ())) ORDER BY ((((((t0.c48)OR(t0.c41)))OR(t0.c84)))<=(CAST(t0.c84 AS INTEGER))) ASC  NULLS FIRST, ((((((((t0.c84)OR(t0.c48)))OR(vt1.c0)))OR(t0.c52)))AND(t0.c81)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c52)&(t0.c81)) IN ())) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((((t0.c48)OR(t0.c41)))OR(t0.c84)))<=(CAST(t0.c84 AS INTEGER))) ASC  NULLS FIRST, ((((((((t0.c84)OR(t0.c48)))OR(vt1.c0)))OR(t0.c52)))AND(t0.c81)) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((t0.c52)&(t0.c81)) IN ())) ORDER BY ((((((t0.c48)OR(t0.c41)))OR(t0.c84)))<=(CAST(t0.c84 AS INTEGER))) ASC  NULLS FIRST, ((((((((t0.c84)OR(t0.c48)))OR(vt1.c0)))OR(t0.c52)))AND(t0.c81)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c52)&(t0.c81)) IN ())) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((((t0.c48)OR(t0.c41)))OR(t0.c84)))<=(CAST(t0.c84 AS INTEGER))) ASC  NULLS FIRST, ((((((((t0.c84)OR(t0.c48)))OR(vt1.c0)))OR(t0.c52)))AND(t0.c81)) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((t0.c52)&(t0.c81)) IN ())) ORDER BY ((((((t0.c48)OR(t0.c41)))OR(t0.c84)))<=(CAST(t0.c84 AS INTEGER))) ASC  NULLS FIRST, ((((((((t0.c84)OR(t0.c48)))OR(vt1.c0)))OR(t0.c52)))AND(t0.c81)) COLLATE RTRIM ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, vt0, t0 WHERE ((((t0.c48)LIKE(t1.c2)) IN ())) ORDER BY (~ (t0.c48)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c48)LIKE(t1.c2)) IN ())) IS TRUE)  as count FROM t1, vt0, t0 ORDER BY (~ (t0.c48)) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM t1, vt0, t0 WHERE ((((t0.c48)LIKE(t1.c2)) IN ())) ORDER BY (~ (t0.c48)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c48)LIKE(t1.c2)) IN ())) IS TRUE)  as count FROM t1, vt0, t0 ORDER BY (~ (t0.c48)) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM t1, vt0, t0 WHERE ((((t0.c48)LIKE(t1.c2)) IN ())) ORDER BY (~ (t0.c48)) COLLATE NOCASE DESC;
SELECT ALL * FROM vt0, t0 WHERE (((NULL) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((NULL) NOTNULL)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((NULL) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((NULL) NOTNULL)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((NULL) NOTNULL));
SELECT ALL * FROM t1, t0, vt1 WHERE (CAST(t0.c81 COLLATE NOCASE AS REAL)) ORDER BY ((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t0.c81 THEN t0.c41 END) NOTNULL)  NULLS LAST, CAST(((t0.c52) NOT BETWEEN (t0.c48) AND (t0.c41)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c81 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM t1, t0, vt1 ORDER BY ((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t0.c81 THEN t0.c41 END) NOTNULL)  NULLS LAST, CAST(((t0.c52) NOT BETWEEN (t0.c48) AND (t0.c41)) AS REAL) DESC);
SELECT ALL * FROM t1, t0, vt1 WHERE (CAST(t0.c81 COLLATE NOCASE AS REAL)) ORDER BY ((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t0.c81 THEN t0.c41 END) NOTNULL)  NULLS LAST, CAST(((t0.c52) NOT BETWEEN (t0.c48) AND (t0.c41)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c81 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM t1, t0, vt1 ORDER BY ((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t0.c81 THEN t0.c41 END) NOTNULL)  NULLS LAST, CAST(((t0.c52) NOT BETWEEN (t0.c48) AND (t0.c41)) AS REAL) DESC);
SELECT ALL * FROM t1, t0, vt1 WHERE (CAST(t0.c81 COLLATE NOCASE AS REAL)) ORDER BY ((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t0.c81 THEN t0.c41 END) NOTNULL)  NULLS LAST, CAST(((t0.c52) NOT BETWEEN (t0.c48) AND (t0.c41)) AS REAL) DESC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((CAST(vt0.c0 AS BLOB))AND(((vt1.c0)%(vt1.c0)))))AND(CAST(vt0.c0 AS BLOB)))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((vt0.c0)|(vt0.c0))) AND (((vt0.c0) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS BLOB))AND(((vt1.c0)%(vt1.c0)))))AND(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((vt0.c0)|(vt0.c0))) AND (((vt0.c0) NOTNULL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((CAST(vt0.c0 AS BLOB))AND(((vt1.c0)%(vt1.c0)))))AND(CAST(vt0.c0 AS BLOB)))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((vt0.c0)|(vt0.c0))) AND (((vt0.c0) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS BLOB))AND(((vt1.c0)%(vt1.c0)))))AND(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((vt0.c0)|(vt0.c0))) AND (((vt0.c0) NOTNULL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((CAST(vt0.c0 AS BLOB))AND(((vt1.c0)%(vt1.c0)))))AND(CAST(vt0.c0 AS BLOB)))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((vt0.c0)|(vt0.c0))) AND (((vt0.c0) NOTNULL))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (346100149)) THEN (vt1.c0 IN ()) WHEN NULL THEN ((vt1.c0) NOTNULL) WHEN ((-908392713)%(vt1.c0)) THEN NULL ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (346100149)) THEN (vt1.c0 IN ()) WHEN NULL THEN ((vt1.c0) NOTNULL) WHEN ((-908392713)%(vt1.c0)) THEN NULL ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (346100149)) THEN (vt1.c0 IN ()) WHEN NULL THEN ((vt1.c0) NOTNULL) WHEN ((-908392713)%(vt1.c0)) THEN NULL ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (346100149)) THEN (vt1.c0 IN ()) WHEN NULL THEN ((vt1.c0) NOTNULL) WHEN ((-908392713)%(vt1.c0)) THEN NULL ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (346100149)) THEN (vt1.c0 IN ()) WHEN NULL THEN ((vt1.c0) NOTNULL) WHEN ((-908392713)%(vt1.c0)) THEN NULL ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END);
SELECT * FROM vt0, vt1, t0 WHERE ((- ((((vt1.c0))>((t0.c41)))))) ORDER BY CAST('' AS TEXT);
SELECT SUM(count) FROM (SELECT ALL (((- ((((vt1.c0))>((t0.c41)))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY CAST('' AS TEXT));
SELECT * FROM vt0, vt1, t0 WHERE ((- ((((vt1.c0))>((t0.c41)))))) ORDER BY CAST('' AS TEXT);
SELECT SUM(count) FROM (SELECT ALL (((- ((((vt1.c0))>((t0.c41)))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY CAST('' AS TEXT));
SELECT * FROM vt0, vt1, t0 WHERE ((- ((((vt1.c0))>((t0.c41)))))) ORDER BY CAST('' AS TEXT);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))<<(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))<<(vt1.c0))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))<<(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))<<(vt1.c0))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))<<(vt1.c0)));
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN vt0 ON UNLIKELY(LENGTH(vt0.c0)) LEFT OUTER JOIN t0 ON (((t0.c41)) BETWEEN ((LIKELY(t0.c41))) AND ((COALESCE(DISTINCT x'', t0.c48, 0.2550078869033787, t1.c1)))) WHERE ((~ (((t0.c52) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c52) IS TRUE)))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON UNLIKELY(LENGTH(vt0.c0)) LEFT OUTER JOIN t0 ON (((t0.c41)) BETWEEN ((LIKELY(t0.c41))) AND ((COALESCE(DISTINCT x'', t0.c48, 0.2550078869033787, t1.c1)))));
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN vt0 ON UNLIKELY(LENGTH(vt0.c0)) LEFT OUTER JOIN t0 ON (((t0.c41)) BETWEEN ((LIKELY(t0.c41))) AND ((COALESCE(DISTINCT x'', t0.c48, 0.2550078869033787, t1.c1)))) WHERE ((~ (((t0.c52) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c52) IS TRUE)))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON UNLIKELY(LENGTH(vt0.c0)) LEFT OUTER JOIN t0 ON (((t0.c41)) BETWEEN ((LIKELY(t0.c41))) AND ((COALESCE(DISTINCT x'', t0.c48, 0.2550078869033787, t1.c1)))));
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN vt0 ON UNLIKELY(LENGTH(vt0.c0)) LEFT OUTER JOIN t0 ON (((t0.c41)) BETWEEN ((LIKELY(t0.c41))) AND ((COALESCE(DISTINCT x'', t0.c48, 0.2550078869033787, t1.c1)))) WHERE ((~ (((t0.c52) IS TRUE))));
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0)-(vt1.c0))))<(('1451566780'))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)-(vt1.c0))))<(('1451566780')))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0)-(vt1.c0))))<(('1451566780'))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)-(vt1.c0))))<(('1451566780')))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0)-(vt1.c0))))<(('1451566780'))));
SELECT ALL COUNT(*) FROM vt1, t0, t1 WHERE (((((t0.c81) NOT NULL)) NOTNULL)) ORDER BY CASE ABS(x'')  WHEN NULL THEN ((t0.c48) BETWEEN (vt1.c0) AND (vt1.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c81) NOT NULL)) NOTNULL)) IS TRUE)  as count FROM vt1, t0, t1 ORDER BY CASE ABS(x'')  WHEN NULL THEN ((t0.c48) BETWEEN (vt1.c0) AND (vt1.c0)) END DESC);
SELECT ALL COUNT(*) FROM vt1, t0, t1 WHERE (((((t0.c81) NOT NULL)) NOTNULL)) ORDER BY CASE ABS(x'')  WHEN NULL THEN ((t0.c48) BETWEEN (vt1.c0) AND (vt1.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c81) NOT NULL)) NOTNULL)) IS TRUE)  as count FROM vt1, t0, t1 ORDER BY CASE ABS(x'')  WHEN NULL THEN ((t0.c48) BETWEEN (vt1.c0) AND (vt1.c0)) END DESC);
SELECT ALL COUNT(*) FROM vt1, t0, t1 WHERE (((((t0.c81) NOT NULL)) NOTNULL)) ORDER BY CASE ABS(x'')  WHEN NULL THEN ((t0.c48) BETWEEN (vt1.c0) AND (vt1.c0)) END DESC;
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON (((((((((('yN\rL~')OR(t0.c41)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) BETWEEN (INSTR(t0.c52, t1.c0)) AND (CAST(t1.c1 AS TEXT))) RIGHT OUTER JOIN t1 ON (~ ((((t0.c81))<=((vt1.c0))))) INNER JOIN vt1 ON ((CASE t1.c1  WHEN vt0.c0 THEN t0.c84 END) NOT NULL) WHERE ((~ ((+ (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (t1.c0))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((((((((('yN\rL~')OR(t0.c41)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) BETWEEN (INSTR(t0.c52, t1.c0)) AND (CAST(t1.c1 AS TEXT))) RIGHT OUTER JOIN t1 ON (~ ((((t0.c81))<=((vt1.c0))))) INNER JOIN vt1 ON ((CASE t1.c1  WHEN vt0.c0 THEN t0.c84 END) NOT NULL));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON (((((((((('yN\rL~')OR(t0.c41)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) BETWEEN (INSTR(t0.c52, t1.c0)) AND (CAST(t1.c1 AS TEXT))) RIGHT OUTER JOIN t1 ON (~ ((((t0.c81))<=((vt1.c0))))) INNER JOIN vt1 ON ((CASE t1.c1  WHEN vt0.c0 THEN t0.c84 END) NOT NULL) WHERE ((~ ((+ (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (t1.c0))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((((((((('yN\rL~')OR(t0.c41)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) BETWEEN (INSTR(t0.c52, t1.c0)) AND (CAST(t1.c1 AS TEXT))) RIGHT OUTER JOIN t1 ON (~ ((((t0.c81))<=((vt1.c0))))) INNER JOIN vt1 ON ((CASE t1.c1  WHEN vt0.c0 THEN t0.c84 END) NOT NULL));
SELECT ALL * FROM vt1 LEFT OUTER JOIN t0 ON t1.c2 RIGHT OUTER JOIN t1 ON (((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t0.c48)))) BETWEEN (CAST(vt1.c0 AS REAL)) AND (t0.c41 COLLATE RTRIM)) WHERE (((((t1.c0) BETWEEN (t0.c52) AND (t1.c0))) NOT NULL)) ORDER BY '<⺀';
SELECT SUM(count) FROM (SELECT ((((((t1.c0) BETWEEN (t0.c52) AND (t1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON t1.c2 RIGHT OUTER JOIN t1 ON (((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t0.c48)))) BETWEEN (CAST(vt1.c0 AS REAL)) AND (t0.c41 COLLATE RTRIM)) ORDER BY '<⺀');
SELECT ALL * FROM vt1 LEFT OUTER JOIN t0 ON t1.c2 RIGHT OUTER JOIN t1 ON (((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t0.c48)))) BETWEEN (CAST(vt1.c0 AS REAL)) AND (t0.c41 COLLATE RTRIM)) WHERE (((((t1.c0) BETWEEN (t0.c52) AND (t1.c0))) NOT NULL)) ORDER BY '<⺀';
SELECT SUM(count) FROM (SELECT ((((((t1.c0) BETWEEN (t0.c52) AND (t1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON t1.c2 RIGHT OUTER JOIN t1 ON (((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t0.c48)))) BETWEEN (CAST(vt1.c0 AS REAL)) AND (t0.c41 COLLATE RTRIM)) ORDER BY '<⺀');
SELECT ALL COUNT(*) FROM t0, vt0 INNER JOIN vt1 ON t1.c1 FULL OUTER JOIN t1 ON (((((+ (x'')))OR(((t0.c41) NOT BETWEEN (-800636.0) AND (t1.c2)))))OR((~ (t1.c0)))) WHERE (LIKELY(DISTINCT x'')) ORDER BY highlight((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))), ((t1.c2)/(t1.c0)), '-652956547', t0.c48) DESC;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT x'')) IS TRUE)  as count FROM t0, vt0 INNER JOIN vt1 ON t1.c1 FULL OUTER JOIN t1 ON (((((+ (x'')))OR(((t0.c41) NOT BETWEEN (-800636.0) AND (t1.c2)))))OR((~ (t1.c0)))) ORDER BY highlight((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))), ((t1.c2)/(t1.c0)), '-652956547', t0.c48) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 INNER JOIN vt1 ON t1.c1 FULL OUTER JOIN t1 ON (((((+ (x'')))OR(((t0.c41) NOT BETWEEN (-800636.0) AND (t1.c2)))))OR((~ (t1.c0)))) WHERE (LIKELY(DISTINCT x'')) ORDER BY highlight((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))), ((t1.c2)/(t1.c0)), '-652956547', t0.c48) DESC;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT x'')) IS TRUE)  as count FROM t0, vt0 INNER JOIN vt1 ON t1.c1 FULL OUTER JOIN t1 ON (((((+ (x'')))OR(((t0.c41) NOT BETWEEN (-800636.0) AND (t1.c2)))))OR((~ (t1.c0)))) ORDER BY highlight((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))), ((t1.c2)/(t1.c0)), '-652956547', t0.c48) DESC);
SELECT ALL * FROM t1, t0, vt1, vt0 WHERE (((rtreenode(t0.c48, t0.c52))IS NOT(((t0.c52)+(t0.c41))))) ORDER BY (((t1.c2) BETWEEN (vt1.c0) AND (t0.c52)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rtreenode(t0.c48, t0.c52))IS NOT(((t0.c52)+(t0.c41))))) IS TRUE)  as count FROM t1, t0, vt1, vt0 ORDER BY (((t1.c2) BETWEEN (vt1.c0) AND (t0.c52)) IN ())  NULLS FIRST);
SELECT ALL * FROM t1, t0, vt1, vt0 WHERE (((rtreenode(t0.c48, t0.c52))IS NOT(((t0.c52)+(t0.c41))))) ORDER BY (((t1.c2) BETWEEN (vt1.c0) AND (t0.c52)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rtreenode(t0.c48, t0.c52))IS NOT(((t0.c52)+(t0.c41))))) IS TRUE)  as count FROM t1, t0, vt1, vt0 ORDER BY (((t1.c2) BETWEEN (vt1.c0) AND (t0.c52)) IN ())  NULLS FIRST);
SELECT ALL * FROM t1, t0, vt1, vt0 WHERE (((rtreenode(t0.c48, t0.c52))IS NOT(((t0.c52)+(t0.c41))))) ORDER BY (((t1.c2) BETWEEN (vt1.c0) AND (t0.c52)) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (t0.c84) ORDER BY ((((vt0.c0)>=(x'2ce0')))-((('9碚v''9\w') NOT BETWEEN (t0.c41) AND (x''))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c84) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((((vt0.c0)>=(x'2ce0')))-((('9碚v''9\w') NOT BETWEEN (t0.c41) AND (x''))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (t0.c84) ORDER BY ((((vt0.c0)>=(x'2ce0')))-((('9碚v''9\w') NOT BETWEEN (t0.c41) AND (x''))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c84) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((((vt0.c0)>=(x'2ce0')))-((('9碚v''9\w') NOT BETWEEN (t0.c41) AND (x''))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (t0.c84) ORDER BY ((((vt0.c0)>=(x'2ce0')))-((('9碚v''9\w') NOT BETWEEN (t0.c41) AND (x''))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((~ ((('-1264917770')&(t1.c1)))));
SELECT SUM(count) FROM (SELECT (((~ ((('-1264917770')&(t1.c1))))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((~ ((('-1264917770')&(t1.c1)))));
SELECT SUM(count) FROM (SELECT (((~ ((('-1264917770')&(t1.c1))))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((~ ((('-1264917770')&(t1.c1)))));
SELECT * FROM vt0, t1 WHERE ((((vt0.c0)) NOT BETWEEN (((((t1.c2, vt0.c0, t1.c1)) BETWEEN ((t1.c0, vt0.c0, t1.c1)) AND ((t1.c1, x'', t1.c0))))) AND ((CAST(t1.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (((((t1.c2, vt0.c0, t1.c1)) BETWEEN ((t1.c0, vt0.c0, t1.c1)) AND ((t1.c1, x'', t1.c0))))) AND ((CAST(t1.c0 AS REAL))))) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE ((((vt0.c0)) NOT BETWEEN (((((t1.c2, vt0.c0, t1.c1)) BETWEEN ((t1.c0, vt0.c0, t1.c1)) AND ((t1.c1, x'', t1.c0))))) AND ((CAST(t1.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (((((t1.c2, vt0.c0, t1.c1)) BETWEEN ((t1.c0, vt0.c0, t1.c1)) AND ((t1.c1, x'', t1.c0))))) AND ((CAST(t1.c0 AS REAL))))) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE ((((vt0.c0)) NOT BETWEEN (((((t1.c2, vt0.c0, t1.c1)) BETWEEN ((t1.c0, vt0.c0, t1.c1)) AND ((t1.c1, x'', t1.c0))))) AND ((CAST(t1.c0 AS REAL)))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0) ORDER BY CAST(LAST_INSERT_ROWID() AS INTEGER) ASC, ((((vt0.c0)||(vt1.c0)))OR(((((NULL)OR(vt1.c0)))OR(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(LAST_INSERT_ROWID() AS INTEGER) ASC, ((((vt0.c0)||(vt1.c0)))OR(((((NULL)OR(vt1.c0)))OR(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0) ORDER BY CAST(LAST_INSERT_ROWID() AS INTEGER) ASC, ((((vt0.c0)||(vt1.c0)))OR(((((NULL)OR(vt1.c0)))OR(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(LAST_INSERT_ROWID() AS INTEGER) ASC, ((((vt0.c0)||(vt1.c0)))OR(((((NULL)OR(vt1.c0)))OR(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0) ORDER BY CAST(LAST_INSERT_ROWID() AS INTEGER) ASC, ((((vt0.c0)||(vt1.c0)))OR(((((NULL)OR(vt1.c0)))OR(vt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON CAST(((t1.c0)||(t0.c48)) AS REAL) RIGHT OUTER JOIN t1 ON (+ (((t0.c41) NOT BETWEEN (t0.c48) AND (t0.c81)))) INNER JOIN vt1 ON CAST(((t1.c1)GLOB(x'')) AS REAL) WHERE (((t0.c81) NOT BETWEEN (t0.c48) AND (t0.c84)) COLLATE BINARY) ORDER BY t0.c81 DESC, CASE WHEN LIKELIHOOD(t0.c41, 0.5297889193879768) THEN ((t0.c41)<=(t0.c41)) END;
SELECT SUM(count) FROM (SELECT ((((t0.c81) NOT BETWEEN (t0.c48) AND (t0.c84)) COLLATE BINARY) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON CAST(((t1.c0)||(t0.c48)) AS REAL) RIGHT OUTER JOIN t1 ON (+ (((t0.c41) NOT BETWEEN (t0.c48) AND (t0.c81)))) INNER JOIN vt1 ON CAST(((t1.c1)GLOB(x'')) AS REAL) ORDER BY t0.c81 DESC, CASE WHEN LIKELIHOOD(t0.c41, 0.5297889193879768) THEN ((t0.c41)<=(t0.c41)) END);
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON CAST(((t1.c0)||(t0.c48)) AS REAL) RIGHT OUTER JOIN t1 ON (+ (((t0.c41) NOT BETWEEN (t0.c48) AND (t0.c81)))) INNER JOIN vt1 ON CAST(((t1.c1)GLOB(x'')) AS REAL) WHERE (((t0.c81) NOT BETWEEN (t0.c48) AND (t0.c84)) COLLATE BINARY) ORDER BY t0.c81 DESC, CASE WHEN LIKELIHOOD(t0.c41, 0.5297889193879768) THEN ((t0.c41)<=(t0.c41)) END;
SELECT SUM(count) FROM (SELECT ((((t0.c81) NOT BETWEEN (t0.c48) AND (t0.c84)) COLLATE BINARY) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON CAST(((t1.c0)||(t0.c48)) AS REAL) RIGHT OUTER JOIN t1 ON (+ (((t0.c41) NOT BETWEEN (t0.c48) AND (t0.c81)))) INNER JOIN vt1 ON CAST(((t1.c1)GLOB(x'')) AS REAL) ORDER BY t0.c81 DESC, CASE WHEN LIKELIHOOD(t0.c41, 0.5297889193879768) THEN ((t0.c41)<=(t0.c41)) END);
SELECT ALL COUNT(*) FROM vt1, t1, vt0 FULL OUTER JOIN t0 ON '1967184442' WHERE (((((t0.c81)+(t0.c52)))*((((vt1.c0, t1.c2, t0.c84)) NOT BETWEEN ((t0.c41, t1.c2, t0.c81)) AND ((NULL, vt0.c0, t0.c81)))))) ORDER BY ((((t0.c48) BETWEEN (t1.c0) AND (t0.c41))) BETWEEN (((0.21158035318010815) BETWEEN (t0.c48) AND (t1.c2))) AND (CASE t1.c1  WHEN vt0.c0 THEN 0xffffffffca3037cb END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c81)+(t0.c52)))*((((vt1.c0, t1.c2, t0.c84)) NOT BETWEEN ((t0.c41, t1.c2, t0.c81)) AND ((NULL, vt0.c0, t0.c81)))))) IS TRUE)  as count FROM vt1, t1, vt0 FULL OUTER JOIN t0 ON '1967184442' ORDER BY ((((t0.c48) BETWEEN (t1.c0) AND (t0.c41))) BETWEEN (((0.21158035318010815) BETWEEN (t0.c48) AND (t1.c2))) AND (CASE t1.c1  WHEN vt0.c0 THEN 0Xffffffffca3037cb END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t1, vt0 FULL OUTER JOIN t0 ON '1967184442' WHERE (((((t0.c81)+(t0.c52)))*((((vt1.c0, t1.c2, t0.c84)) NOT BETWEEN ((t0.c41, t1.c2, t0.c81)) AND ((NULL, vt0.c0, t0.c81)))))) ORDER BY ((((t0.c48) BETWEEN (t1.c0) AND (t0.c41))) BETWEEN (((0.21158035318010815) BETWEEN (t0.c48) AND (t1.c2))) AND (CASE t1.c1  WHEN vt0.c0 THEN 0xffffffffca3037cb END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c81)+(t0.c52)))*((((vt1.c0, t1.c2, t0.c84)) NOT BETWEEN ((t0.c41, t1.c2, t0.c81)) AND ((NULL, vt0.c0, t0.c81)))))) IS TRUE)  as count FROM vt1, t1, vt0 FULL OUTER JOIN t0 ON '1967184442' ORDER BY ((((t0.c48) BETWEEN (t1.c0) AND (t0.c41))) BETWEEN (((0.21158035318010815) BETWEEN (t0.c48) AND (t1.c2))) AND (CASE t1.c1  WHEN vt0.c0 THEN 0Xffffffffca3037cb END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t1, vt0 FULL OUTER JOIN t0 ON '1967184442' WHERE (((((t0.c81)+(t0.c52)))*((((vt1.c0, t1.c2, t0.c84)) NOT BETWEEN ((t0.c41, t1.c2, t0.c81)) AND ((NULL, vt0.c0, t0.c81)))))) ORDER BY ((((t0.c48) BETWEEN (t1.c0) AND (t0.c41))) BETWEEN (((0.21158035318010815) BETWEEN (t0.c48) AND (t1.c2))) AND (CASE t1.c1  WHEN vt0.c0 THEN 0xffffffffca3037cb END)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE (~ (t0.c52))  WHEN vt0.c0 THEN t0.c81 END);
SELECT SUM(count) FROM (SELECT ((CASE (~ (t0.c52))  WHEN vt0.c0 THEN t0.c81 END) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE (~ (t0.c52))  WHEN vt0.c0 THEN t0.c81 END);
SELECT SUM(count) FROM (SELECT ((CASE (~ (t0.c52))  WHEN vt0.c0 THEN t0.c81 END) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE (~ (t0.c52))  WHEN vt0.c0 THEN t0.c81 END);
SELECT ALL * FROM t1, vt1 NOT INDEXED, t0 WHERE (CAST((((t0.c81)) BETWEEN ((t0.c84)) AND ((t1.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c81)) BETWEEN ((t0.c84)) AND ((t1.c0))) AS BLOB)) IS TRUE)  as count FROM t1, vt1, t0);
SELECT ALL * FROM t1, vt1 NOT INDEXED, t0 WHERE (CAST((((t0.c81)) BETWEEN ((t0.c84)) AND ((t1.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c81)) BETWEEN ((t0.c84)) AND ((t1.c0))) AS BLOB)) IS TRUE)  as count FROM t1, vt1, t0);
SELECT ALL * FROM t1, vt1 NOT INDEXED, t0 WHERE (CAST((((t0.c81)) BETWEEN ((t0.c84)) AND ((t1.c0))) AS BLOB));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON ((NOT (t1.c2)) IN ()) FULL OUTER JOIN t1 ON ((CAST(t0.c48 AS NUMERIC)) BETWEEN ((((t1.c2))==((t1.c0)))) AND (((t0.c81)>>(t1.c1)))) INNER JOIN t0 ON ((((((t0.c52)OR(t1.c1)))OR(vt1.c0)))IS(((t0.c41) NOT NULL))) WHERE (TRIM(DISTINCT (+ (t1.c2)), ((t0.c81) BETWEEN (vt0.c0) AND (x''))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (+ (t1.c2)), ((t0.c81) BETWEEN (vt0.c0) AND (x'')))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((NOT (t1.c2)) IN ()) FULL OUTER JOIN t1 ON ((CAST(t0.c48 AS NUMERIC)) BETWEEN ((((t1.c2))==((t1.c0)))) AND (((t0.c81)>>(t1.c1)))) INNER JOIN t0 ON ((((((t0.c52)OR(t1.c1)))OR(vt1.c0)))IS(((t0.c41) NOT NULL))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON ((NOT (t1.c2)) IN ()) FULL OUTER JOIN t1 ON ((CAST(t0.c48 AS NUMERIC)) BETWEEN ((((t1.c2))==((t1.c0)))) AND (((t0.c81)>>(t1.c1)))) INNER JOIN t0 ON ((((((t0.c52)OR(t1.c1)))OR(vt1.c0)))IS(((t0.c41) NOT NULL))) WHERE (TRIM(DISTINCT (+ (t1.c2)), ((t0.c81) BETWEEN (vt0.c0) AND (x''))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (+ (t1.c2)), ((t0.c81) BETWEEN (vt0.c0) AND (x'')))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((NOT (t1.c2)) IN ()) FULL OUTER JOIN t1 ON ((CAST(t0.c48 AS NUMERIC)) BETWEEN ((((t1.c2))==((t1.c0)))) AND (((t0.c81)>>(t1.c1)))) INNER JOIN t0 ON ((((((t0.c52)OR(t1.c1)))OR(vt1.c0)))IS(((t0.c41) NOT NULL))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON ((NOT (t1.c2)) IN ()) FULL OUTER JOIN t1 ON ((CAST(t0.c48 AS NUMERIC)) BETWEEN ((((t1.c2))==((t1.c0)))) AND (((t0.c81)>>(t1.c1)))) INNER JOIN t0 ON ((((((t0.c52)OR(t1.c1)))OR(vt1.c0)))IS(((t0.c41) NOT NULL))) WHERE (TRIM(DISTINCT (+ (t1.c2)), ((t0.c81) BETWEEN (vt0.c0) AND (x''))));
SELECT * FROM vt0, t0 WHERE (CAST((~ (t0.c52)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((~ (t0.c52)) AS BLOB)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (CAST((~ (t0.c52)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((~ (t0.c52)) AS BLOB)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (CAST((~ (t0.c52)) AS BLOB));
SELECT * FROM vt1, t1, t0, vt0 WHERE (TRIM(DISTINCT (~ (t0.c41)), (((vt0.c0, t0.c84, 0.5163306216824746, t0.c81, t0.c52)) BETWEEN ((t1.c1, vt1.c0, NULL, t1.c2, t1.c0)) AND ((0Xffffffffff8077b1, t1.c2, 0.9302601239283816, t0.c84, t1.c0)))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (~ (t0.c41)), (((vt0.c0, t0.c84, 0.5163306216824746, t0.c81, t0.c52)) BETWEEN ((t1.c1, vt1.c0, NULL, t1.c2, t1.c0)) AND ((0xffffffffff8077b1, t1.c2, 0.9302601239283816, t0.c84, t1.c0))))) IS TRUE)  as count FROM vt1, t1, t0, vt0);
SELECT * FROM vt1, t1, t0, vt0 WHERE (TRIM(DISTINCT (~ (t0.c41)), (((vt0.c0, t0.c84, 0.5163306216824746, t0.c81, t0.c52)) BETWEEN ((t1.c1, vt1.c0, NULL, t1.c2, t1.c0)) AND ((0Xffffffffff8077b1, t1.c2, 0.9302601239283816, t0.c84, t1.c0)))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (~ (t0.c41)), (((vt0.c0, t0.c84, 0.5163306216824746, t0.c81, t0.c52)) BETWEEN ((t1.c1, vt1.c0, NULL, t1.c2, t1.c0)) AND ((0xffffffffff8077b1, t1.c2, 0.9302601239283816, t0.c84, t1.c0))))) IS TRUE)  as count FROM vt1, t1, t0, vt0);
SELECT * FROM vt1, t1, t0, vt0 WHERE (TRIM(DISTINCT (~ (t0.c41)), (((vt0.c0, t0.c84, 0.5163306216824746, t0.c81, t0.c52)) BETWEEN ((t1.c1, vt1.c0, NULL, t1.c2, t1.c0)) AND ((0Xffffffffff8077b1, t1.c2, 0.9302601239283816, t0.c84, t1.c0)))));
SELECT COUNT(*) FROM t1 CROSS JOIN vt0 ON ((((LTRIM(t1.c2, t1.c2))AND((~ (t1.c0)))))OR(((t1.c2)GLOB(t1.c1)))) WHERE (((CAST(t1.c2 AS REAL))&((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c2 AS REAL))&((- (vt0.c0))))) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON ((((LTRIM(t1.c2, t1.c2))AND((~ (t1.c0)))))OR(((t1.c2)GLOB(t1.c1)))));
SELECT COUNT(*) FROM t1 CROSS JOIN vt0 ON ((((LTRIM(t1.c2, t1.c2))AND((~ (t1.c0)))))OR(((t1.c2)GLOB(t1.c1)))) WHERE (((CAST(t1.c2 AS REAL))&((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c2 AS REAL))&((- (vt0.c0))))) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON ((((LTRIM(t1.c2, t1.c2))AND((~ (t1.c0)))))OR(((t1.c2)GLOB(t1.c1)))));
SELECT COUNT(*) FROM t1 CROSS JOIN vt0 ON ((((LTRIM(t1.c2, t1.c2))AND((~ (t1.c0)))))OR(((t1.c2)GLOB(t1.c1)))) WHERE (((CAST(t1.c2 AS REAL))&((- (vt0.c0)))));
SELECT * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (NULL);
SELECT * FROM vt0, t0, vt1 WHERE ((((NOT (t0.c48))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c48))) NOT NULL)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT * FROM vt0, t0, vt1 WHERE ((((NOT (t0.c48))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c48))) NOT NULL)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT * FROM vt0, t0, vt1 WHERE ((((NOT (t0.c48))) NOT NULL));
SELECT * FROM t1, vt0, vt1, t0 WHERE (((((t0.c84)OR(t1.c1))) BETWEEN (vt0.c0) AND ('-1788736086'))) ORDER BY PRINTF((('5cM5>V%t')+(t1.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c84)OR(t1.c1))) BETWEEN (vt0.c0) AND ('-1788736086'))) IS TRUE)  as count FROM t1, vt0, vt1, t0 ORDER BY PRINTF((('5cM5>V%t')+(t1.c1))) DESC);
SELECT * FROM t1, vt0, vt1, t0 WHERE (((((t0.c84)OR(t1.c1))) BETWEEN (vt0.c0) AND ('-1788736086'))) ORDER BY PRINTF((('5cM5>V%t')+(t1.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c84)OR(t1.c1))) BETWEEN (vt0.c0) AND ('-1788736086'))) IS TRUE)  as count FROM t1, vt0, vt1, t0 ORDER BY PRINTF((('5cM5>V%t')+(t1.c1))) DESC);
SELECT * FROM t1, vt0, vt1, t0 WHERE (((((t0.c84)OR(t1.c1))) BETWEEN (vt0.c0) AND ('-1788736086'))) ORDER BY PRINTF((('5cM5>V%t')+(t1.c1))) DESC;
SELECT ALL * FROM vt1 INDEXED BY i32 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))IS(((vt1.c0)-(3.88347133E8)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))IS(((vt1.c0)-(3.88347133E8))))) IS TRUE)  as count FROM vt1 INDEXED BY i32);
SELECT ALL * FROM vt1 INDEXED BY i32 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))IS(((vt1.c0)-(3.88347133E8)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))IS(((vt1.c0)-(3.88347133E8))))) IS TRUE)  as count FROM vt1 INDEXED BY i32);
SELECT * FROM vt1, t0, vt0 WHERE ((((NULL, t0.c81, t0.c48)) BETWEEN ((CASE vt0.c0  WHEN t0.c52 THEN vt0.c0 WHEN NULL THEN vt1.c0 WHEN t0.c84 THEN t0.c48 ELSE t0.c52 END, (t0.c81 IN (t0.c41, t0.c48)), (((vt1.c0))>=((t0.c48))))) AND ((t0.c52 COLLATE NOCASE, ((t0.c84) BETWEEN (0.49756929228604707) AND (t0.c84)), CASE NULL  WHEN vt1.c0 THEN t0.c41 END)))) ORDER BY t0.c84  NULLS LAST, ((INSTR(t0.c52, t0.c52))&(CASE WHEN vt0.c0 THEN t0.c84 WHEN t0.c52 THEN t0.c52 WHEN vt1.c0 THEN vt1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NULL, t0.c81, t0.c48)) BETWEEN ((CASE vt0.c0  WHEN t0.c52 THEN vt0.c0 WHEN NULL THEN vt1.c0 WHEN t0.c84 THEN t0.c48 ELSE t0.c52 END, (t0.c81 IN (t0.c41, t0.c48)), (((vt1.c0))>=((t0.c48))))) AND ((t0.c52 COLLATE NOCASE, ((t0.c84) BETWEEN (0.49756929228604707) AND (t0.c84)), CASE NULL  WHEN vt1.c0 THEN t0.c41 END)))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY t0.c84  NULLS LAST, ((INSTR(t0.c52, t0.c52))&(CASE WHEN vt0.c0 THEN t0.c84 WHEN t0.c52 THEN t0.c52 WHEN vt1.c0 THEN vt1.c0 END))  NULLS LAST);
SELECT * FROM vt1, t0, vt0 WHERE ((((NULL, t0.c81, t0.c48)) BETWEEN ((CASE vt0.c0  WHEN t0.c52 THEN vt0.c0 WHEN NULL THEN vt1.c0 WHEN t0.c84 THEN t0.c48 ELSE t0.c52 END, (t0.c81 IN (t0.c41, t0.c48)), (((vt1.c0))>=((t0.c48))))) AND ((t0.c52 COLLATE NOCASE, ((t0.c84) BETWEEN (0.49756929228604707) AND (t0.c84)), CASE NULL  WHEN vt1.c0 THEN t0.c41 END)))) ORDER BY t0.c84  NULLS LAST, ((INSTR(t0.c52, t0.c52))&(CASE WHEN vt0.c0 THEN t0.c84 WHEN t0.c52 THEN t0.c52 WHEN vt1.c0 THEN vt1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NULL, t0.c81, t0.c48)) BETWEEN ((CASE vt0.c0  WHEN t0.c52 THEN vt0.c0 WHEN NULL THEN vt1.c0 WHEN t0.c84 THEN t0.c48 ELSE t0.c52 END, (t0.c81 IN (t0.c41, t0.c48)), (((vt1.c0))>=((t0.c48))))) AND ((t0.c52 COLLATE NOCASE, ((t0.c84) BETWEEN (0.49756929228604707) AND (t0.c84)), CASE NULL  WHEN vt1.c0 THEN t0.c41 END)))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY t0.c84  NULLS LAST, ((INSTR(t0.c52, t0.c52))&(CASE WHEN vt0.c0 THEN t0.c84 WHEN t0.c52 THEN t0.c52 WHEN vt1.c0 THEN vt1.c0 END))  NULLS LAST);
SELECT * FROM vt1, t0, vt0 WHERE ((((NULL, t0.c81, t0.c48)) BETWEEN ((CASE vt0.c0  WHEN t0.c52 THEN vt0.c0 WHEN NULL THEN vt1.c0 WHEN t0.c84 THEN t0.c48 ELSE t0.c52 END, (t0.c81 IN (t0.c41, t0.c48)), (((vt1.c0))>=((t0.c48))))) AND ((t0.c52 COLLATE NOCASE, ((t0.c84) BETWEEN (0.49756929228604707) AND (t0.c84)), CASE NULL  WHEN vt1.c0 THEN t0.c41 END)))) ORDER BY t0.c84  NULLS LAST, ((INSTR(t0.c52, t0.c52))&(CASE WHEN vt0.c0 THEN t0.c84 WHEN t0.c52 THEN t0.c52 WHEN vt1.c0 THEN vt1.c0 END))  NULLS LAST;
SELECT ALL * FROM vt0, t0, vt1 WHERE (((((((t0.c81)AND(t0.c84)))AND(NULL))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c81)AND(t0.c84)))AND(NULL))) IS TRUE)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE (((((((t0.c81)AND(t0.c84)))AND(NULL))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c81)AND(t0.c84)))AND(NULL))) IS TRUE)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE (((((((t0.c81)AND(t0.c84)))AND(NULL))) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST('5b' AS BLOB) COLLATE RTRIM) ORDER BY UPPER(DISTINCT DATETIME(vt0.c0, vt0.c0, vt0.c0)) ASC  NULLS LAST, ((((vt0.c0) NOT NULL)) IS FALSE);
SELECT SUM(count) FROM (SELECT ((CAST('5b' AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY UPPER(DISTINCT DATETIME(vt0.c0, vt0.c0, vt0.c0)) ASC  NULLS LAST, ((((vt0.c0) NOT NULL)) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST('5b' AS BLOB) COLLATE RTRIM) ORDER BY UPPER(DISTINCT DATETIME(vt0.c0, vt0.c0, vt0.c0)) ASC  NULLS LAST, ((((vt0.c0) NOT NULL)) IS FALSE);
SELECT SUM(count) FROM (SELECT ((CAST('5b' AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY UPPER(DISTINCT DATETIME(vt0.c0, vt0.c0, vt0.c0)) ASC  NULLS LAST, ((((vt0.c0) NOT NULL)) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST('5b' AS BLOB) COLLATE RTRIM) ORDER BY UPPER(DISTINCT DATETIME(vt0.c0, vt0.c0, vt0.c0)) ASC  NULLS LAST, ((((vt0.c0) NOT NULL)) IS FALSE);
SELECT ALL * FROM vt0, t0 WHERE ((((~ (t0.c41)))>=(CAST(t0.c84 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c41)))>=(CAST(t0.c84 AS NUMERIC)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((~ (t0.c41)))>=(CAST(t0.c84 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c41)))>=(CAST(t0.c84 AS NUMERIC)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((~ (t0.c41)))>=(CAST(t0.c84 AS NUMERIC))));
SELECT ALL * FROM t1 WHERE (CAST(((((((((t1.c1)OR(t1.c2)))OR(t1.c0)))AND(t1.c0)))AND(t1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((t1.c1)OR(t1.c2)))OR(t1.c0)))AND(t1.c0)))AND(t1.c0)) AS INTEGER)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CAST(((((((((t1.c1)OR(t1.c2)))OR(t1.c0)))AND(t1.c0)))AND(t1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((t1.c1)OR(t1.c2)))OR(t1.c0)))AND(t1.c0)))AND(t1.c0)) AS INTEGER)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CAST(((((((((t1.c1)OR(t1.c2)))OR(t1.c0)))AND(t1.c0)))AND(t1.c0)) AS INTEGER));
SELECT COUNT(*) FROM t1, vt0, vt1, t0 WHERE (t0.c84);
SELECT SUM(count) FROM (SELECT ALL ((t0.c84) IS TRUE)  as count FROM t1, vt0, vt1, t0);
SELECT COUNT(*) FROM t1, vt0, vt1, t0 WHERE (t0.c84);
SELECT SUM(count) FROM (SELECT ALL ((t0.c84) IS TRUE)  as count FROM t1, vt0, vt1, t0);
SELECT COUNT(*) FROM t1, vt0, vt1, t0 WHERE (t0.c84);
SELECT ALL COUNT(*) FROM t0 WHERE (-7.97252666E8);
SELECT SUM(count) FROM (SELECT ((-7.97252666E8) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (-7.97252666E8);
SELECT SUM(count) FROM (SELECT ((-7.97252666E8) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (-7.97252666E8);
SELECT ALL * FROM t0, vt0 WHERE ((((((NOT (t0.c84)))OR((((t0.c41)) NOT BETWEEN ((0.462824454429119)) AND ((NULL))))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (t0.c84)))OR((((t0.c41)) NOT BETWEEN ((0.462824454429119)) AND ((NULL))))))AND(NULL))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((((NOT (t0.c84)))OR((((t0.c41)) NOT BETWEEN ((0.462824454429119)) AND ((NULL))))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (t0.c84)))OR((((t0.c41)) NOT BETWEEN ((0.462824454429119)) AND ((NULL))))))AND(NULL))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((((NOT (t0.c84)))OR((((t0.c41)) NOT BETWEEN ((0.462824454429119)) AND ((NULL))))))AND(NULL)));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN (highlight(vt1.c0, vt1.c0, vt0.c0, '1835022977'), json_remove(vt1.c0, vt0.c0, vt1.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN (highlight(vt1.c0, vt1.c0, vt0.c0, '1835022977'), json_remove(vt1.c0, vt0.c0, vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN (highlight(vt1.c0, vt1.c0, vt0.c0, '1835022977'), json_remove(vt1.c0, vt0.c0, vt1.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN (highlight(vt1.c0, vt1.c0, vt0.c0, '1835022977'), json_remove(vt1.c0, vt0.c0, vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM t1, t0 WHERE ((NOT (t0.c84))) ORDER BY t1.c0;
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c84))) IS TRUE)  as count FROM t1, t0 ORDER BY t1.c0);
SELECT ALL * FROM t1, t0 WHERE ((NOT (t0.c84))) ORDER BY t1.c0;
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c84))) IS TRUE)  as count FROM t1, t0 ORDER BY t1.c0);
SELECT ALL * FROM t1, t0 WHERE ((NOT (t0.c84))) ORDER BY t1.c0;
SELECT ALL * FROM t0 WHERE ((((t0.c81 IN ('', t0.c52))) IS FALSE)) ORDER BY CASE WHEN CAST(t0.c48 AS NUMERIC) THEN ((t0.c48) NOT NULL) WHEN CAST(t0.c41 AS NUMERIC) THEN (('')AND(t0.c84)) WHEN (((NULL)) NOT BETWEEN ((t0.c48)) AND ((t0.c52))) THEN t0.c41 ELSE ((t0.c81)|(t0.c48)) END;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c81 IN ('', t0.c52))) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN CAST(t0.c48 AS NUMERIC) THEN ((t0.c48) NOT NULL) WHEN CAST(t0.c41 AS NUMERIC) THEN (('')AND(t0.c84)) WHEN (((NULL)) NOT BETWEEN ((t0.c48)) AND ((t0.c52))) THEN t0.c41 ELSE ((t0.c81)|(t0.c48)) END);
SELECT ALL * FROM t0 WHERE ((((t0.c81 IN ('', t0.c52))) IS FALSE)) ORDER BY CASE WHEN CAST(t0.c48 AS NUMERIC) THEN ((t0.c48) NOT NULL) WHEN CAST(t0.c41 AS NUMERIC) THEN (('')AND(t0.c84)) WHEN (((NULL)) NOT BETWEEN ((t0.c48)) AND ((t0.c52))) THEN t0.c41 ELSE ((t0.c81)|(t0.c48)) END;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c81 IN ('', t0.c52))) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN CAST(t0.c48 AS NUMERIC) THEN ((t0.c48) NOT NULL) WHEN CAST(t0.c41 AS NUMERIC) THEN (('')AND(t0.c84)) WHEN (((NULL)) NOT BETWEEN ((t0.c48)) AND ((t0.c52))) THEN t0.c41 ELSE ((t0.c81)|(t0.c48)) END);
SELECT ALL * FROM t0 WHERE ((((t0.c81 IN ('', t0.c52))) IS FALSE)) ORDER BY CASE WHEN CAST(t0.c48 AS NUMERIC) THEN ((t0.c48) NOT NULL) WHEN CAST(t0.c41 AS NUMERIC) THEN (('')AND(t0.c84)) WHEN (((NULL)) NOT BETWEEN ((t0.c48)) AND ((t0.c52))) THEN t0.c41 ELSE ((t0.c81)|(t0.c48)) END;
SELECT * FROM vt1 CROSS JOIN t0 ON (NOT (COALESCE(vt0.c0, t0.c48, vt1.c0, t1.c1))) RIGHT OUTER JOIN vt0 ON ((((x'e9e1bb5c')OR((- (vt1.c0)))))OR(t1.c0)) CROSS JOIN t1 ON 0.9418296757256327 WHERE ((((+ (t0.c84))) NOT NULL)) ORDER BY (((((t0.c52 IN (vt0.c0)))AND(((vt1.c0)GLOB('2024066956')))))AND(((((t0.c84)OR(t0.c84)))AND(t1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((((+ (t0.c84))) NOT NULL)) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON (NOT (COALESCE(vt0.c0, t0.c48, vt1.c0, t1.c1))) RIGHT OUTER JOIN vt0 ON ((((x'e9e1bb5c')OR((- (vt1.c0)))))OR(t1.c0)) CROSS JOIN t1 ON 0.9418296757256327 ORDER BY (((((t0.c52 IN (vt0.c0)))AND(((vt1.c0)GLOB('2024066956')))))AND(((((t0.c84)OR(t0.c84)))AND(t1.c1)))) DESC);
SELECT * FROM vt1 CROSS JOIN t0 ON (NOT (COALESCE(vt0.c0, t0.c48, vt1.c0, t1.c1))) RIGHT OUTER JOIN vt0 ON ((((x'e9e1bb5c')OR((- (vt1.c0)))))OR(t1.c0)) CROSS JOIN t1 ON 0.9418296757256327 WHERE ((((+ (t0.c84))) NOT NULL)) ORDER BY (((((t0.c52 IN (vt0.c0)))AND(((vt1.c0)GLOB('2024066956')))))AND(((((t0.c84)OR(t0.c84)))AND(t1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((((+ (t0.c84))) NOT NULL)) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON (NOT (COALESCE(vt0.c0, t0.c48, vt1.c0, t1.c1))) RIGHT OUTER JOIN vt0 ON ((((x'e9e1bb5c')OR((- (vt1.c0)))))OR(t1.c0)) CROSS JOIN t1 ON 0.9418296757256327 ORDER BY (((((t0.c52 IN (vt0.c0)))AND(((vt1.c0)GLOB('2024066956')))))AND(((((t0.c84)OR(t0.c84)))AND(t1.c1)))) DESC);
SELECT COUNT(*) FROM vt1, vt0, t1, t0 WHERE (0x70714c56) ORDER BY (NOT (CAST(t0.c48 AS REAL)))  NULLS FIRST, (((t1.c2 IN ()))<(t0.c52));
SELECT SUM(count) FROM (SELECT ALL ((0x70714c56) IS TRUE)  as count FROM vt1, vt0, t1, t0 ORDER BY (NOT (CAST(t0.c48 AS REAL)))  NULLS FIRST, (((t1.c2 IN ()))<(t0.c52)));
SELECT COUNT(*) FROM vt1, vt0, t1, t0 WHERE (0x70714c56) ORDER BY (NOT (CAST(t0.c48 AS REAL)))  NULLS FIRST, (((t1.c2 IN ()))<(t0.c52));
SELECT SUM(count) FROM (SELECT ALL ((0x70714c56) IS TRUE)  as count FROM vt1, vt0, t1, t0 ORDER BY (NOT (CAST(t0.c48 AS REAL)))  NULLS FIRST, (((t1.c2 IN ()))<(t0.c52)));
SELECT COUNT(*) FROM vt1, vt0, t1, t0 WHERE (0x70714c56) ORDER BY (NOT (CAST(t0.c48 AS REAL)))  NULLS FIRST, (((t1.c2 IN ()))<(t0.c52));
SELECT * FROM t1, t0, vt0, vt1 WHERE ((- (352869521))) ORDER BY CASE WHEN t0.c81 COLLATE RTRIM THEN ((t0.c48) ISNULL) ELSE (((vt0.c0)) BETWEEN ((t0.c52)) AND ((t0.c81))) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (352869521))) IS TRUE)  as count FROM t1, t0, vt0, vt1 ORDER BY CASE WHEN t0.c81 COLLATE RTRIM THEN ((t0.c48) ISNULL) ELSE (((vt0.c0)) BETWEEN ((t0.c52)) AND ((t0.c81))) END DESC  NULLS LAST);
SELECT * FROM t1, t0, vt0, vt1 WHERE ((- (352869521))) ORDER BY CASE WHEN t0.c81 COLLATE RTRIM THEN ((t0.c48) ISNULL) ELSE (((vt0.c0)) BETWEEN ((t0.c52)) AND ((t0.c81))) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (352869521))) IS TRUE)  as count FROM t1, t0, vt0, vt1 ORDER BY CASE WHEN t0.c81 COLLATE RTRIM THEN ((t0.c48) ISNULL) ELSE (((vt0.c0)) BETWEEN ((t0.c52)) AND ((t0.c81))) END DESC  NULLS LAST);
SELECT * FROM t1, t0, vt0, vt1 WHERE ((- (352869521))) ORDER BY CASE WHEN t0.c81 COLLATE RTRIM THEN ((t0.c48) ISNULL) ELSE (((vt0.c0)) BETWEEN ((t0.c52)) AND ((t0.c81))) END DESC  NULLS LAST;
SELECT ALL * FROM t1 NATURAL JOIN t0 WHERE (((((CAST(t0.c41 AS TEXT))OR(((t0.c81)/(t1.c0)))))AND(t0.c52 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c41 AS TEXT))OR(((t0.c81)/(t1.c0)))))AND(t0.c52 COLLATE BINARY))) IS TRUE)  as count FROM t1 NATURAL JOIN t0);
SELECT ALL * FROM t1 NATURAL JOIN t0 WHERE (((((CAST(t0.c41 AS TEXT))OR(((t0.c81)/(t1.c0)))))AND(t0.c52 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c41 AS TEXT))OR(((t0.c81)/(t1.c0)))))AND(t0.c52 COLLATE BINARY))) IS TRUE)  as count FROM t1 NATURAL JOIN t0);
SELECT ALL * FROM t1 NATURAL JOIN t0 WHERE (((((CAST(t0.c41 AS TEXT))OR(((t0.c81)/(t1.c0)))))AND(t0.c52 COLLATE BINARY)));
SELECT ALL * FROM vt1, t1 RIGHT OUTER JOIN vt0 ON (~ (((t1.c2)AND(t1.c0)))) LEFT OUTER JOIN t0 ON (((t0.c84 IN ())) NOT BETWEEN ((~ (t1.c2))) AND (((((((((t0.c84)OR(t0.c84)))OR(t1.c2)))OR(vt1.c0)))AND('fy⫫A')))) WHERE (((((((t0.c84)<(t1.c2)))AND((t0.c84 IN ()))))AND(((t1.c1)LIKE(t0.c48))))) ORDER BY CASE WHEN (((t0.c52)) NOT BETWEEN ((t0.c52)) AND ((t1.c1))) THEN '1093561755' COLLATE RTRIM WHEN (~ (t1.c1)) THEN DATETIME(x'', t0.c52, t0.c81) WHEN CASE WHEN t0.c84 THEN 0.0979479754021716 ELSE t0.c41 END THEN vt0.c0 COLLATE BINARY ELSE ((((vt1.c0)OR(t1.c1)))OR(-1.993211205E9)) END;
SELECT SUM(count) FROM (SELECT ((((((((t0.c84)<(t1.c2)))AND((t0.c84 IN ()))))AND(((t1.c1)LIKE(t0.c48))))) IS TRUE)  as count FROM vt1, t1 RIGHT OUTER JOIN vt0 ON (~ (((t1.c2)AND(t1.c0)))) LEFT OUTER JOIN t0 ON (((t0.c84 IN ())) NOT BETWEEN ((~ (t1.c2))) AND (((((((((t0.c84)OR(t0.c84)))OR(t1.c2)))OR(vt1.c0)))AND('fy⫫A')))) ORDER BY CASE WHEN (((t0.c52)) NOT BETWEEN ((t0.c52)) AND ((t1.c1))) THEN '1093561755' COLLATE RTRIM WHEN (~ (t1.c1)) THEN DATETIME(x'', t0.c52, t0.c81) WHEN CASE WHEN t0.c84 THEN 0.0979479754021716 ELSE t0.c41 END THEN vt0.c0 COLLATE BINARY ELSE ((((vt1.c0)OR(t1.c1)))OR(-1.993211205E9)) END);
SELECT ALL * FROM vt1, t1 RIGHT OUTER JOIN vt0 ON (~ (((t1.c2)AND(t1.c0)))) LEFT OUTER JOIN t0 ON (((t0.c84 IN ())) NOT BETWEEN ((~ (t1.c2))) AND (((((((((t0.c84)OR(t0.c84)))OR(t1.c2)))OR(vt1.c0)))AND('fy⫫A')))) WHERE (((((((t0.c84)<(t1.c2)))AND((t0.c84 IN ()))))AND(((t1.c1)LIKE(t0.c48))))) ORDER BY CASE WHEN (((t0.c52)) NOT BETWEEN ((t0.c52)) AND ((t1.c1))) THEN '1093561755' COLLATE RTRIM WHEN (~ (t1.c1)) THEN DATETIME(x'', t0.c52, t0.c81) WHEN CASE WHEN t0.c84 THEN 0.0979479754021716 ELSE t0.c41 END THEN vt0.c0 COLLATE BINARY ELSE ((((vt1.c0)OR(t1.c1)))OR(-1.993211205E9)) END;
SELECT SUM(count) FROM (SELECT ((((((((t0.c84)<(t1.c2)))AND((t0.c84 IN ()))))AND(((t1.c1)LIKE(t0.c48))))) IS TRUE)  as count FROM vt1, t1 RIGHT OUTER JOIN vt0 ON (~ (((t1.c2)AND(t1.c0)))) LEFT OUTER JOIN t0 ON (((t0.c84 IN ())) NOT BETWEEN ((~ (t1.c2))) AND (((((((((t0.c84)OR(t0.c84)))OR(t1.c2)))OR(vt1.c0)))AND('fy⫫A')))) ORDER BY CASE WHEN (((t0.c52)) NOT BETWEEN ((t0.c52)) AND ((t1.c1))) THEN '1093561755' COLLATE RTRIM WHEN (~ (t1.c1)) THEN DATETIME(x'', t0.c52, t0.c81) WHEN CASE WHEN t0.c84 THEN 0.0979479754021716 ELSE t0.c41 END THEN vt0.c0 COLLATE BINARY ELSE ((((vt1.c0)OR(t1.c1)))OR(-1.993211205E9)) END);
SELECT ALL * FROM vt1, t1 RIGHT OUTER JOIN vt0 ON (~ (((t1.c2)AND(t1.c0)))) LEFT OUTER JOIN t0 ON (((t0.c84 IN ())) NOT BETWEEN ((~ (t1.c2))) AND (((((((((t0.c84)OR(t0.c84)))OR(t1.c2)))OR(vt1.c0)))AND('fy⫫A')))) WHERE (((((((t0.c84)<(t1.c2)))AND((t0.c84 IN ()))))AND(((t1.c1)LIKE(t0.c48))))) ORDER BY CASE WHEN (((t0.c52)) NOT BETWEEN ((t0.c52)) AND ((t1.c1))) THEN '1093561755' COLLATE RTRIM WHEN (~ (t1.c1)) THEN DATETIME(x'', t0.c52, t0.c81) WHEN CASE WHEN t0.c84 THEN 0.0979479754021716 ELSE t0.c41 END THEN vt0.c0 COLLATE BINARY ELSE ((((vt1.c0)OR(t1.c1)))OR(-1.993211205E9)) END;
SELECT ALL COUNT(*) FROM t1, t0 WHERE ((t1.c2 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t1.c2 COLLATE BINARY IN ())) IS TRUE)  as count FROM t1, t0);
SELECT ALL COUNT(*) FROM t1, t0 WHERE ((t1.c2 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t1.c2 COLLATE BINARY IN ())) IS TRUE)  as count FROM t1, t0);
SELECT ALL COUNT(*) FROM t1, t0 WHERE ((t1.c2 COLLATE BINARY IN ()));
SELECT ALL * FROM vt1, t0 WHERE (((t0.c41 COLLATE RTRIM) BETWEEN ((((t0.c52)) NOT BETWEEN ((t0.c41)) AND ((vt1.c0)))) AND (((t0.c52)=(t0.c52))))) ORDER BY '_''7' COLLATE BINARY  NULLS FIRST, (((t0.c81, vt1.c0, vt1.c0)) BETWEEN ((((t0.c52) ISNULL), ((((((((t0.c48)OR(t0.c52)))OR(t0.c48)))OR(t0.c52)))OR(t0.c84)), (NOT (t0.c48)))) AND ((t0.c84, (vt1.c0 IN ()), t0.c48 COLLATE RTRIM)))  NULLS LAST, x'02c9' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c41 COLLATE RTRIM) BETWEEN ((((t0.c52)) NOT BETWEEN ((t0.c41)) AND ((vt1.c0)))) AND (((t0.c52)=(t0.c52))))) IS TRUE)  as count FROM vt1, t0 ORDER BY '_''7' COLLATE BINARY  NULLS FIRST, (((t0.c81, vt1.c0, vt1.c0)) BETWEEN ((((t0.c52) ISNULL), ((((((((t0.c48)OR(t0.c52)))OR(t0.c48)))OR(t0.c52)))OR(t0.c84)), (NOT (t0.c48)))) AND ((t0.c84, (vt1.c0 IN ()), t0.c48 COLLATE RTRIM)))  NULLS LAST, x'02c9' ASC  NULLS FIRST);
SELECT ALL * FROM vt1, t0 WHERE (((t0.c41 COLLATE RTRIM) BETWEEN ((((t0.c52)) NOT BETWEEN ((t0.c41)) AND ((vt1.c0)))) AND (((t0.c52)=(t0.c52))))) ORDER BY '_''7' COLLATE BINARY  NULLS FIRST, (((t0.c81, vt1.c0, vt1.c0)) BETWEEN ((((t0.c52) ISNULL), ((((((((t0.c48)OR(t0.c52)))OR(t0.c48)))OR(t0.c52)))OR(t0.c84)), (NOT (t0.c48)))) AND ((t0.c84, (vt1.c0 IN ()), t0.c48 COLLATE RTRIM)))  NULLS LAST, x'02c9' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c41 COLLATE RTRIM) BETWEEN ((((t0.c52)) NOT BETWEEN ((t0.c41)) AND ((vt1.c0)))) AND (((t0.c52)=(t0.c52))))) IS TRUE)  as count FROM vt1, t0 ORDER BY '_''7' COLLATE BINARY  NULLS FIRST, (((t0.c81, vt1.c0, vt1.c0)) BETWEEN ((((t0.c52) ISNULL), ((((((((t0.c48)OR(t0.c52)))OR(t0.c48)))OR(t0.c52)))OR(t0.c84)), (NOT (t0.c48)))) AND ((t0.c84, (vt1.c0 IN ()), t0.c48 COLLATE RTRIM)))  NULLS LAST, x'02c9' ASC  NULLS FIRST);
SELECT ALL * FROM vt1, t0 WHERE (((t0.c41 COLLATE RTRIM) BETWEEN ((((t0.c52)) NOT BETWEEN ((t0.c41)) AND ((vt1.c0)))) AND (((t0.c52)=(t0.c52))))) ORDER BY '_''7' COLLATE BINARY  NULLS FIRST, (((t0.c81, vt1.c0, vt1.c0)) BETWEEN ((((t0.c52) ISNULL), ((((((((t0.c48)OR(t0.c52)))OR(t0.c48)))OR(t0.c52)))OR(t0.c84)), (NOT (t0.c48)))) AND ((t0.c84, (vt1.c0 IN ()), t0.c48 COLLATE RTRIM)))  NULLS LAST, x'02c9' ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt1, t1 INDEXED BY i32 INNER JOIN vt0 ON CAST(((t0.c48) NOT NULL) AS INTEGER) WHERE (((((vt0.c0) NOT NULL)) IS FALSE)) ORDER BY ((CAST(t1.c0 AS INTEGER))GLOB(vt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM t0, vt1, t1 INDEXED BY i32 INNER JOIN vt0 ON CAST(((t0.c48) NOT NULL) AS INTEGER) ORDER BY ((CAST(t1.c0 AS INTEGER))GLOB(vt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM t0, vt1, t1 INDEXED BY i32 INNER JOIN vt0 ON CAST(((t0.c48) NOT NULL) AS INTEGER) WHERE (((((vt0.c0) NOT NULL)) IS FALSE)) ORDER BY ((CAST(t1.c0 AS INTEGER))GLOB(vt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM t0, vt1, t1 INDEXED BY i32 INNER JOIN vt0 ON CAST(((t0.c48) NOT NULL) AS INTEGER) ORDER BY ((CAST(t1.c0 AS INTEGER))GLOB(vt0.c0 COLLATE NOCASE)));
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (vt0.c0) AND ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) BETWEEN (vt0.c0) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (vt0.c0) AND ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) BETWEEN (vt0.c0) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (vt0.c0) AND ((vt0.c0 IN ()))));
SELECT ALL * FROM vt0 INDEXED BY i32, t0 RIGHT OUTER JOIN vt1 ON ((((((((CASE t0.c81  WHEN t0.c41 THEN vt0.c0 WHEN t0.c84 THEN t0.c48 WHEN t0.c52 THEN t0.c84 WHEN t0.c52 THEN t0.c84 WHEN t0.c41 THEN t0.c48 WHEN 0.2569004147793986 THEN t0.c52 WHEN vt1.c0 THEN t0.c41 ELSE vt1.c0 END)AND((((vt0.c0, vt1.c0, vt1.c0, t0.c48, vt0.c0)) NOT BETWEEN ((t0.c41, t0.c41, t0.c84, '7.572333087118022E-4', vt1.c0)) AND ((t0.c48, vt0.c0, vt1.c0, t0.c52, t0.c48))))))AND(((0.9491961868694129)+(vt1.c0)))))OR((+ (t0.c81)))))OR(t0.c84 COLLATE RTRIM)) WHERE ((((t0.c48) ISNULL) IN ())) ORDER BY (NOT (NULL));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c48) ISNULL) IN ())) IS TRUE)  as count FROM vt0 INDEXED BY i32, t0 RIGHT OUTER JOIN vt1 ON ((((((((CASE t0.c81  WHEN t0.c41 THEN vt0.c0 WHEN t0.c84 THEN t0.c48 WHEN t0.c52 THEN t0.c84 WHEN t0.c52 THEN t0.c84 WHEN t0.c41 THEN t0.c48 WHEN 0.2569004147793986 THEN t0.c52 WHEN vt1.c0 THEN t0.c41 ELSE vt1.c0 END)AND((((vt0.c0, vt1.c0, vt1.c0, t0.c48, vt0.c0)) NOT BETWEEN ((t0.c41, t0.c41, t0.c84, '7.572333087118022E-4', vt1.c0)) AND ((t0.c48, vt0.c0, vt1.c0, t0.c52, t0.c48))))))AND(((0.9491961868694129)+(vt1.c0)))))OR((+ (t0.c81)))))OR(t0.c84 COLLATE RTRIM)) ORDER BY (NOT (NULL)));
SELECT ALL * FROM vt0 INDEXED BY i32, t0 RIGHT OUTER JOIN vt1 ON ((((((((CASE t0.c81  WHEN t0.c41 THEN vt0.c0 WHEN t0.c84 THEN t0.c48 WHEN t0.c52 THEN t0.c84 WHEN t0.c52 THEN t0.c84 WHEN t0.c41 THEN t0.c48 WHEN 0.2569004147793986 THEN t0.c52 WHEN vt1.c0 THEN t0.c41 ELSE vt1.c0 END)AND((((vt0.c0, vt1.c0, vt1.c0, t0.c48, vt0.c0)) NOT BETWEEN ((t0.c41, t0.c41, t0.c84, '7.572333087118022E-4', vt1.c0)) AND ((t0.c48, vt0.c0, vt1.c0, t0.c52, t0.c48))))))AND(((0.9491961868694129)+(vt1.c0)))))OR((+ (t0.c81)))))OR(t0.c84 COLLATE RTRIM)) WHERE ((((t0.c48) ISNULL) IN ())) ORDER BY (NOT (NULL));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c48) ISNULL) IN ())) IS TRUE)  as count FROM vt0 INDEXED BY i32, t0 RIGHT OUTER JOIN vt1 ON ((((((((CASE t0.c81  WHEN t0.c41 THEN vt0.c0 WHEN t0.c84 THEN t0.c48 WHEN t0.c52 THEN t0.c84 WHEN t0.c52 THEN t0.c84 WHEN t0.c41 THEN t0.c48 WHEN 0.2569004147793986 THEN t0.c52 WHEN vt1.c0 THEN t0.c41 ELSE vt1.c0 END)AND((((vt0.c0, vt1.c0, vt1.c0, t0.c48, vt0.c0)) NOT BETWEEN ((t0.c41, t0.c41, t0.c84, '7.572333087118022E-4', vt1.c0)) AND ((t0.c48, vt0.c0, vt1.c0, t0.c52, t0.c48))))))AND(((0.9491961868694129)+(vt1.c0)))))OR((+ (t0.c81)))))OR(t0.c84 COLLATE RTRIM)) ORDER BY (NOT (NULL)));
SELECT COUNT(*) FROM vt1, t1 WHERE (((((t1.c2) IS FALSE))>(((t1.c0)OR(t1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c2) IS FALSE))>(((t1.c0)OR(t1.c2))))) IS TRUE)  as count FROM vt1, t1);
SELECT COUNT(*) FROM vt1, t1 WHERE (((((t1.c2) IS FALSE))>(((t1.c0)OR(t1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c2) IS FALSE))>(((t1.c0)OR(t1.c2))))) IS TRUE)  as count FROM vt1, t1);
SELECT COUNT(*) FROM vt1, t1 WHERE (((((t1.c2) IS FALSE))>(((t1.c0)OR(t1.c2)))));
SELECT * FROM t0, t1, vt0 WHERE (((((t0.c48)%(t1.c1)))||((((t1.c2)) BETWEEN ((t1.c1)) AND ((t0.c48)))))) ORDER BY COALESCE(t0.c41 COLLATE NOCASE, t1.c1)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c48)%(t1.c1)))||((((t1.c2)) BETWEEN ((t1.c1)) AND ((t0.c48)))))) IS TRUE)  as count FROM t0, t1, vt0 ORDER BY COALESCE(t0.c41 COLLATE NOCASE, t1.c1)  NULLS LAST);
SELECT * FROM t0, t1, vt0 WHERE (((((t0.c48)%(t1.c1)))||((((t1.c2)) BETWEEN ((t1.c1)) AND ((t0.c48)))))) ORDER BY COALESCE(t0.c41 COLLATE NOCASE, t1.c1)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c48)%(t1.c1)))||((((t1.c2)) BETWEEN ((t1.c1)) AND ((t0.c48)))))) IS TRUE)  as count FROM t0, t1, vt0 ORDER BY COALESCE(t0.c41 COLLATE NOCASE, t1.c1)  NULLS LAST);
SELECT * FROM t0, t1, vt0 WHERE (((((t0.c48)%(t1.c1)))||((((t1.c2)) BETWEEN ((t1.c1)) AND ((t0.c48)))))) ORDER BY COALESCE(t0.c41 COLLATE NOCASE, t1.c1)  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((t1.c1 COLLATE RTRIM IN (((((((((t1.c1)OR('628349134')))AND(t1.c0)))OR(t1.c1)))AND(t1.c1)))));
SELECT SUM(count) FROM (SELECT (((t1.c1 COLLATE RTRIM IN (((((((((t1.c1)OR('628349134')))AND(t1.c0)))OR(t1.c1)))AND(t1.c1))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((t1.c1 COLLATE RTRIM IN (((((((((t1.c1)OR('628349134')))AND(t1.c0)))OR(t1.c1)))AND(t1.c1)))));
SELECT SUM(count) FROM (SELECT (((t1.c1 COLLATE RTRIM IN (((((((((t1.c1)OR('628349134')))AND(t1.c0)))OR(t1.c1)))AND(t1.c1))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((t1.c1 COLLATE RTRIM IN (((((((((t1.c1)OR('628349134')))AND(t1.c0)))OR(t1.c1)))AND(t1.c1)))));
SELECT COUNT(*) FROM t1 WHERE (((((t1.c1) BETWEEN (t1.c0) AND (NULL))) IS TRUE)) ORDER BY (((((t1.c1, t1.c2, -2.116883817E9)) NOT BETWEEN ((t1.c1, t1.c2, t1.c0)) AND ((t1.c0, t1.c2, t1.c1)))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c1) BETWEEN (t1.c0) AND (NULL))) IS TRUE)) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c1, t1.c2, -2.116883817E9)) NOT BETWEEN ((t1.c1, t1.c2, t1.c0)) AND ((t1.c0, t1.c2, t1.c1)))) NOT NULL)  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c1) BETWEEN (t1.c0) AND (NULL))) IS TRUE)) ORDER BY (((((t1.c1, t1.c2, -2.116883817E9)) NOT BETWEEN ((t1.c1, t1.c2, t1.c0)) AND ((t1.c0, t1.c2, t1.c1)))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c1) BETWEEN (t1.c0) AND (NULL))) IS TRUE)) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c1, t1.c2, -2.116883817E9)) NOT BETWEEN ((t1.c1, t1.c2, t1.c0)) AND ((t1.c0, t1.c2, t1.c1)))) NOT NULL)  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c1) BETWEEN (t1.c0) AND (NULL))) IS TRUE)) ORDER BY (((((t1.c1, t1.c2, -2.116883817E9)) NOT BETWEEN ((t1.c1, t1.c2, t1.c0)) AND ((t1.c0, t1.c2, t1.c1)))) NOT NULL)  NULLS LAST;
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON (json_patch(t0.c84, t0.c81) IN ((t0.c81 IN ()))) WHERE (CASE WHEN t0.c41 THEN t0.c81 WHEN NULLIF(DISTINCT t0.c84, vt1.c0) THEN ((t0.c81) BETWEEN (t0.c41) AND (vt1.c0)) WHEN t0.c52 THEN ((t0.c84) BETWEEN (t0.c52) AND (t0.c84)) ELSE LIKELIHOOD(DISTINCT t0.c48, 0.44032569355102547) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c41 THEN t0.c81 WHEN NULLIF(DISTINCT t0.c84, vt1.c0) THEN ((t0.c81) BETWEEN (t0.c41) AND (vt1.c0)) WHEN t0.c52 THEN ((t0.c84) BETWEEN (t0.c52) AND (t0.c84)) ELSE LIKELIHOOD(DISTINCT t0.c48, 0.44032569355102547) END) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON (json_patch(t0.c84, t0.c81) IN ((t0.c81 IN ()))));
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON (json_patch(t0.c84, t0.c81) IN ((t0.c81 IN ()))) WHERE (CASE WHEN t0.c41 THEN t0.c81 WHEN NULLIF(DISTINCT t0.c84, vt1.c0) THEN ((t0.c81) BETWEEN (t0.c41) AND (vt1.c0)) WHEN t0.c52 THEN ((t0.c84) BETWEEN (t0.c52) AND (t0.c84)) ELSE LIKELIHOOD(DISTINCT t0.c48, 0.44032569355102547) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c41 THEN t0.c81 WHEN NULLIF(DISTINCT t0.c84, vt1.c0) THEN ((t0.c81) BETWEEN (t0.c41) AND (vt1.c0)) WHEN t0.c52 THEN ((t0.c84) BETWEEN (t0.c52) AND (t0.c84)) ELSE LIKELIHOOD(DISTINCT t0.c48, 0.44032569355102547) END) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON (json_patch(t0.c84, t0.c81) IN ((t0.c81 IN ()))));
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON (json_patch(t0.c84, t0.c81) IN ((t0.c81 IN ()))) WHERE (CASE WHEN t0.c41 THEN t0.c81 WHEN NULLIF(DISTINCT t0.c84, vt1.c0) THEN ((t0.c81) BETWEEN (t0.c41) AND (vt1.c0)) WHEN t0.c52 THEN ((t0.c84) BETWEEN (t0.c52) AND (t0.c84)) ELSE LIKELIHOOD(DISTINCT t0.c48, 0.44032569355102547) END);
SELECT COUNT(*) FROM t1, t0 WHERE (((t0.c81 COLLATE NOCASE)<>(((t0.c41)OR(0.3106906850722989)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c81 COLLATE NOCASE)!=(((t0.c41)OR(0.3106906850722989))))) IS TRUE)  as count FROM t1, t0);
SELECT COUNT(*) FROM t1, t0 WHERE (((t0.c81 COLLATE NOCASE)<>(((t0.c41)OR(0.3106906850722989)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c81 COLLATE NOCASE)!=(((t0.c41)OR(0.3106906850722989))))) IS TRUE)  as count FROM t1, t0);
SELECT COUNT(*) FROM t1, t0 WHERE (((t0.c81 COLLATE NOCASE)<>(((t0.c41)OR(0.3106906850722989)))));
SELECT * FROM vt0 NATURAL JOIN t1 WHERE (((CAST(t1.c0 AS REAL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS REAL)) NOTNULL)) IS TRUE)  as count FROM vt0 NATURAL JOIN t1);
SELECT * FROM vt0 NATURAL JOIN t1 WHERE (((CAST(t1.c0 AS REAL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS REAL)) NOTNULL)) IS TRUE)  as count FROM vt0 NATURAL JOIN t1);
SELECT * FROM vt0 NATURAL JOIN t1 WHERE (((CAST(t1.c0 AS REAL)) NOTNULL));
SELECT ALL * FROM vt1, t1 RIGHT OUTER JOIN vt0 ON ((vt1.c0) BETWEEN ((~ (vt0.c0))) AND (TRIM(DISTINCT vt1.c0, vt0.c0))) WHERE ((((- (t1.c2))) NOT BETWEEN (COALESCE(DISTINCT t1.c1, t1.c0)) AND (TOTAL_CHANGES()))) ORDER BY (INSTR(t1.c2, vt1.c0) IN (((t1.c0) BETWEEN (t1.c2) AND (vt0.c0)), CAST(t1.c2 AS NUMERIC))) ASC  NULLS FIRST, t1.c2;
SELECT SUM(count) FROM (SELECT ALL (((((- (t1.c2))) NOT BETWEEN (COALESCE(DISTINCT t1.c1, t1.c0)) AND (TOTAL_CHANGES()))) IS TRUE)  as count FROM vt1, t1 RIGHT OUTER JOIN vt0 ON ((vt1.c0) BETWEEN ((~ (vt0.c0))) AND (TRIM(DISTINCT vt1.c0, vt0.c0))) ORDER BY (INSTR(t1.c2, vt1.c0) IN (((t1.c0) BETWEEN (t1.c2) AND (vt0.c0)), CAST(t1.c2 AS NUMERIC))) ASC  NULLS FIRST, t1.c2);
SELECT ALL * FROM vt1, t1 RIGHT OUTER JOIN vt0 ON ((vt1.c0) BETWEEN ((~ (vt0.c0))) AND (TRIM(DISTINCT vt1.c0, vt0.c0))) WHERE ((((- (t1.c2))) NOT BETWEEN (COALESCE(DISTINCT t1.c1, t1.c0)) AND (TOTAL_CHANGES()))) ORDER BY (INSTR(t1.c2, vt1.c0) IN (((t1.c0) BETWEEN (t1.c2) AND (vt0.c0)), CAST(t1.c2 AS NUMERIC))) ASC  NULLS FIRST, t1.c2;
SELECT SUM(count) FROM (SELECT ALL (((((- (t1.c2))) NOT BETWEEN (COALESCE(DISTINCT t1.c1, t1.c0)) AND (TOTAL_CHANGES()))) IS TRUE)  as count FROM vt1, t1 RIGHT OUTER JOIN vt0 ON ((vt1.c0) BETWEEN ((~ (vt0.c0))) AND (TRIM(DISTINCT vt1.c0, vt0.c0))) ORDER BY (INSTR(t1.c2, vt1.c0) IN (((t1.c0) BETWEEN (t1.c2) AND (vt0.c0)), CAST(t1.c2 AS NUMERIC))) ASC  NULLS FIRST, t1.c2);
SELECT ALL * FROM vt1, t1 RIGHT OUTER JOIN vt0 ON ((vt1.c0) BETWEEN ((~ (vt0.c0))) AND (TRIM(DISTINCT vt1.c0, vt0.c0))) WHERE ((((- (t1.c2))) NOT BETWEEN (COALESCE(DISTINCT t1.c1, t1.c0)) AND (TOTAL_CHANGES()))) ORDER BY (INSTR(t1.c2, vt1.c0) IN (((t1.c0) BETWEEN (t1.c2) AND (vt0.c0)), CAST(t1.c2 AS NUMERIC))) ASC  NULLS FIRST, t1.c2;
SELECT COUNT(*) FROM t1, vt1, t0 WHERE ((((t0.c41)) BETWEEN ((CAST('' AS INTEGER))) AND ((((t1.c1)+(NULL)))))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c41)) BETWEEN ((CAST('' AS INTEGER))) AND ((((t1.c1)+(NULL)))))) IS TRUE)  as count FROM t1, vt1, t0 ORDER BY NULL ASC);
SELECT COUNT(*) FROM t1, vt1, t0 WHERE ((((t0.c41)) BETWEEN ((CAST('' AS INTEGER))) AND ((((t1.c1)+(NULL)))))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c41)) BETWEEN ((CAST('' AS INTEGER))) AND ((((t1.c1)+(NULL)))))) IS TRUE)  as count FROM t1, vt1, t0 ORDER BY NULL ASC);
SELECT COUNT(*) FROM t1, vt1, t0 WHERE ((((t0.c41)) BETWEEN ((CAST('' AS INTEGER))) AND ((((t1.c1)+(NULL)))))) ORDER BY NULL ASC;
SELECT ALL COUNT(*) FROM vt1, vt0, t1 LEFT OUTER JOIN t0 ON vt0.c0 WHERE ('C䲻');
SELECT SUM(count) FROM (SELECT (('C䲻') IS TRUE)  as count FROM vt1, vt0, t1 LEFT OUTER JOIN t0 ON vt0.c0);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 LEFT OUTER JOIN t0 ON vt0.c0 WHERE ('C䲻');
SELECT SUM(count) FROM (SELECT (('C䲻') IS TRUE)  as count FROM vt1, vt0, t1 LEFT OUTER JOIN t0 ON vt0.c0);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 LEFT OUTER JOIN t0 ON vt0.c0 WHERE ('C䲻');
SELECT ALL * FROM vt0, t1, vt1, t0 WHERE (vt1.c0) ORDER BY ((CAST(vt1.c0 AS INTEGER))<=('1972032519')) DESC  NULLS FIRST, ((((((((t0.c81)OR(t0.c81)))AND(t0.c41)))OR(t1.c2 COLLATE RTRIM)))OR(((t1.c2)>>(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, t1, vt1, t0 ORDER BY ((CAST(vt1.c0 AS INTEGER))<=('1972032519')) DESC  NULLS FIRST, ((((((((t0.c81)OR(t0.c81)))AND(t0.c41)))OR(t1.c2 COLLATE RTRIM)))OR(((t1.c2)>>(vt1.c0))))  NULLS LAST);
SELECT ALL * FROM vt0, t1, vt1, t0 WHERE (vt1.c0) ORDER BY ((CAST(vt1.c0 AS INTEGER))<=('1972032519')) DESC  NULLS FIRST, ((((((((t0.c81)OR(t0.c81)))AND(t0.c41)))OR(t1.c2 COLLATE RTRIM)))OR(((t1.c2)>>(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, t1, vt1, t0 ORDER BY ((CAST(vt1.c0 AS INTEGER))<=('1972032519')) DESC  NULLS FIRST, ((((((((t0.c81)OR(t0.c81)))AND(t0.c41)))OR(t1.c2 COLLATE RTRIM)))OR(((t1.c2)>>(vt1.c0))))  NULLS LAST);
SELECT ALL * FROM vt0, t1, vt1, t0 WHERE (vt1.c0) ORDER BY ((CAST(vt1.c0 AS INTEGER))<=('1972032519')) DESC  NULLS FIRST, ((((((((t0.c81)OR(t0.c81)))AND(t0.c41)))OR(t1.c2 COLLATE RTRIM)))OR(((t1.c2)>>(vt1.c0))))  NULLS LAST;
SELECT * FROM vt0 WHERE (CAST((vt0.c0 IN (vt0.c0, 0.7186589685612421)) AS TEXT)) ORDER BY ((((((vt0.c0) IS FALSE))AND((+ (vt0.c0)))))OR((~ (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN (vt0.c0, 0.7186589685612421)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) IS FALSE))AND((+ (vt0.c0)))))OR((~ (vt0.c0)))) ASC);
SELECT * FROM vt0 WHERE (CAST((vt0.c0 IN (vt0.c0, 0.7186589685612421)) AS TEXT)) ORDER BY ((((((vt0.c0) IS FALSE))AND((+ (vt0.c0)))))OR((~ (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN (vt0.c0, 0.7186589685612421)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) IS FALSE))AND((+ (vt0.c0)))))OR((~ (vt0.c0)))) ASC);
SELECT * FROM vt0 WHERE (CAST((vt0.c0 IN (vt0.c0, 0.7186589685612421)) AS TEXT)) ORDER BY ((((((vt0.c0) IS FALSE))AND((+ (vt0.c0)))))OR((~ (vt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (((((t1.c2) BETWEEN (vt1.c0) AND (t1.c0))) NOT BETWEEN (LOWER(t1.c1)) AND ((((vt1.c0, t1.c0, t1.c2)) NOT BETWEEN ((t1.c2, 0xfffffffff7d5909b, t1.c1)) AND ((vt1.c0, t1.c2, t1.c1))))));
SELECT SUM(count) FROM (SELECT ((((((t1.c2) BETWEEN (vt1.c0) AND (t1.c0))) NOT BETWEEN (LOWER(t1.c1)) AND ((((vt1.c0, t1.c0, t1.c2)) NOT BETWEEN ((t1.c2, 0Xfffffffff7d5909b, t1.c1)) AND ((vt1.c0, t1.c2, t1.c1)))))) IS TRUE)  as count FROM vt1, t1);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (((((t1.c2) BETWEEN (vt1.c0) AND (t1.c0))) NOT BETWEEN (LOWER(t1.c1)) AND ((((vt1.c0, t1.c0, t1.c2)) NOT BETWEEN ((t1.c2, 0xfffffffff7d5909b, t1.c1)) AND ((vt1.c0, t1.c2, t1.c1))))));
SELECT SUM(count) FROM (SELECT ((((((t1.c2) BETWEEN (vt1.c0) AND (t1.c0))) NOT BETWEEN (LOWER(t1.c1)) AND ((((vt1.c0, t1.c0, t1.c2)) NOT BETWEEN ((t1.c2, 0Xfffffffff7d5909b, t1.c1)) AND ((vt1.c0, t1.c2, t1.c1)))))) IS TRUE)  as count FROM vt1, t1);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (((((t1.c2) BETWEEN (vt1.c0) AND (t1.c0))) NOT BETWEEN (LOWER(t1.c1)) AND ((((vt1.c0, t1.c0, t1.c2)) NOT BETWEEN ((t1.c2, 0xfffffffff7d5909b, t1.c1)) AND ((vt1.c0, t1.c2, t1.c1))))));
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) NOT BETWEEN (((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR('228288549')))OR(vt1.c0))) AND (((vt1.c0)GLOB(NULL)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) NOT BETWEEN (((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR('228288549')))OR(vt1.c0))) AND (((vt1.c0)GLOB(NULL))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) NOT BETWEEN (((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR('228288549')))OR(vt1.c0))) AND (((vt1.c0)GLOB(NULL)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) NOT BETWEEN (((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR('228288549')))OR(vt1.c0))) AND (((vt1.c0)GLOB(NULL))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) NOT BETWEEN (((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR('228288549')))OR(vt1.c0))) AND (((vt1.c0)GLOB(NULL)))));
SELECT * FROM t0 CROSS JOIN t1 ON CASE WHEN NULL THEN ((vt1.c0) ISNULL) ELSE CASE WHEN t0.c81 THEN '' END END LEFT OUTER JOIN vt1 ON (+ ((~ (vt1.c0)))) WHERE (CASE WHEN (((-1.44203848E9))<>((t0.c41))) THEN ((vt1.c0)IS NOT(NULL)) ELSE SQLITE_SOURCE_ID() END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((-1.44203848E9))<>((t0.c41))) THEN ((vt1.c0)IS NOT(NULL)) ELSE SQLITE_SOURCE_ID() END) IS TRUE)  as count FROM t0 CROSS JOIN t1 ON CASE WHEN NULL THEN ((vt1.c0) ISNULL) ELSE CASE WHEN t0.c81 THEN '' END END LEFT OUTER JOIN vt1 ON (+ ((~ (vt1.c0)))));
SELECT * FROM t0 CROSS JOIN t1 ON CASE WHEN NULL THEN ((vt1.c0) ISNULL) ELSE CASE WHEN t0.c81 THEN '' END END LEFT OUTER JOIN vt1 ON (+ ((~ (vt1.c0)))) WHERE (CASE WHEN (((-1.44203848E9))<>((t0.c41))) THEN ((vt1.c0)IS NOT(NULL)) ELSE SQLITE_SOURCE_ID() END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((-1.44203848E9))<>((t0.c41))) THEN ((vt1.c0)IS NOT(NULL)) ELSE SQLITE_SOURCE_ID() END) IS TRUE)  as count FROM t0 CROSS JOIN t1 ON CASE WHEN NULL THEN ((vt1.c0) ISNULL) ELSE CASE WHEN t0.c81 THEN '' END END LEFT OUTER JOIN vt1 ON (+ ((~ (vt1.c0)))));
SELECT * FROM t0 CROSS JOIN t1 ON CASE WHEN NULL THEN ((vt1.c0) ISNULL) ELSE CASE WHEN t0.c81 THEN '' END END LEFT OUTER JOIN vt1 ON (+ ((~ (vt1.c0)))) WHERE (CASE WHEN (((-1.44203848E9))<>((t0.c41))) THEN ((vt1.c0)IS NOT(NULL)) ELSE SQLITE_SOURCE_ID() END);
SELECT ALL * FROM t0, t1 INDEXED BY i32, vt0, vt1 WHERE (((t1.c2 COLLATE RTRIM)|(((t0.c84)IS NOT(t0.c48))))) ORDER BY ((0Xfffffffff1872512)<=(CAST(vt1.c0 AS REAL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t1.c2 COLLATE RTRIM)|(((t0.c84)IS NOT(t0.c48))))) IS TRUE)  as count FROM t0, t1 INDEXED BY i32, vt0, vt1 ORDER BY ((0xfffffffff1872512)<=(CAST(vt1.c0 AS REAL))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, t1 INDEXED BY i32, vt0, vt1 WHERE (((t1.c2 COLLATE RTRIM)|(((t0.c84)IS NOT(t0.c48))))) ORDER BY ((0Xfffffffff1872512)<=(CAST(vt1.c0 AS REAL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t1.c2 COLLATE RTRIM)|(((t0.c84)IS NOT(t0.c48))))) IS TRUE)  as count FROM t0, t1 INDEXED BY i32, vt0, vt1 ORDER BY ((0xfffffffff1872512)<=(CAST(vt1.c0 AS REAL))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, t0, t1, vt0 WHERE (x'5b4a');
SELECT SUM(count) FROM (SELECT ALL ((x'5b4a') IS TRUE)  as count FROM vt1, t0, t1, vt0);
SELECT ALL * FROM vt1, t0, t1, vt0 WHERE (x'5b4a');
SELECT SUM(count) FROM (SELECT ALL ((x'5b4a') IS TRUE)  as count FROM vt1, t0, t1, vt0);
SELECT ALL * FROM vt1, t0, t1, vt0 WHERE (x'5b4a');
SELECT * FROM vt1 LEFT OUTER JOIN t0 ON (((('-1324812814')AND((t0.c84 IN (t0.c48)))))AND(((t0.c81)>>(t0.c84)))) WHERE (((((vt1.c0) BETWEEN (t0.c41) AND (t0.c52))) BETWEEN ((('-853027120')>>(t0.c48))) AND ('-808085062')));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (t0.c41) AND (t0.c52))) BETWEEN ((('-853027120')>>(t0.c48))) AND ('-808085062'))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON (((('-1324812814')AND((t0.c84 IN (t0.c48)))))AND(((t0.c81)>>(t0.c84)))));
SELECT * FROM vt1 LEFT OUTER JOIN t0 ON (((('-1324812814')AND((t0.c84 IN (t0.c48)))))AND(((t0.c81)>>(t0.c84)))) WHERE (((((vt1.c0) BETWEEN (t0.c41) AND (t0.c52))) BETWEEN ((('-853027120')>>(t0.c48))) AND ('-808085062')));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (t0.c41) AND (t0.c52))) BETWEEN ((('-853027120')>>(t0.c48))) AND ('-808085062'))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON (((('-1324812814')AND((t0.c84 IN (t0.c48)))))AND(((t0.c81)>>(t0.c84)))));
SELECT * FROM vt1 LEFT OUTER JOIN t0 ON (((('-1324812814')AND((t0.c84 IN (t0.c48)))))AND(((t0.c81)>>(t0.c84)))) WHERE (((((vt1.c0) BETWEEN (t0.c41) AND (t0.c52))) BETWEEN ((('-853027120')>>(t0.c48))) AND ('-808085062')));
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)<=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)<=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)<=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)<=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)<=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT * FROM t1, vt0, t0 WHERE (0.2550078869033787);
SELECT SUM(count) FROM (SELECT ALL ((0.2550078869033787) IS TRUE)  as count FROM t1, vt0, t0);
SELECT * FROM t1, vt0, t0 WHERE (0.2550078869033787);
SELECT SUM(count) FROM (SELECT ALL ((0.2550078869033787) IS TRUE)  as count FROM t1, vt0, t0);
SELECT * FROM t1, vt0, t0 WHERE (0.2550078869033787);
SELECT * FROM t1, t0, vt1 WHERE (CAST(t0.c48 AS REAL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c48 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM t1, t0, vt1);
SELECT * FROM t1, t0, vt1 WHERE (CAST(t0.c48 AS REAL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c48 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM t1, t0, vt1);
SELECT * FROM t1, t0, vt1 WHERE (CAST(t0.c48 AS REAL) COLLATE BINARY);
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON (((((((((((((vt0.c0 IN ()))AND(((vt0.c0) ISNULL))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('iM')))))AND(x'')))OR(x'9d75')))AND(NULL)))AND(((NULL) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) WHERE (((NOT (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((NOT (vt0.c0)) IN ())) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (((((((((((((vt0.c0 IN ()))AND(((vt0.c0) ISNULL))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('iM')))))AND(x'')))OR(x'9d75')))AND(NULL)))AND(((NULL) NOT BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON (((((((((((((vt0.c0 IN ()))AND(((vt0.c0) ISNULL))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('iM')))))AND(x'')))OR(x'9d75')))AND(NULL)))AND(((NULL) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) WHERE (((NOT (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((NOT (vt0.c0)) IN ())) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (((((((((((((vt0.c0 IN ()))AND(((vt0.c0) ISNULL))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('iM')))))AND(x'')))OR(x'9d75')))AND(NULL)))AND(((NULL) NOT BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON (((((((((((((vt0.c0 IN ()))AND(((vt0.c0) ISNULL))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('iM')))))AND(x'')))OR(x'9d75')))AND(NULL)))AND(((NULL) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) WHERE (((NOT (vt0.c0)) IN ()));
SELECT * FROM vt0, t1 WHERE (((HEX(vt0.c0)) NOT BETWEEN ((t1.c0 IN ())) AND (t1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(vt0.c0)) NOT BETWEEN ((t1.c0 IN ())) AND (t1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE (((HEX(vt0.c0)) NOT BETWEEN ((t1.c0 IN ())) AND (t1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(vt0.c0)) NOT BETWEEN ((t1.c0 IN ())) AND (t1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE (((HEX(vt0.c0)) NOT BETWEEN ((t1.c0 IN ())) AND (t1.c2 COLLATE RTRIM)));
SELECT * FROM t0 WHERE (((((t0.c41 COLLATE RTRIM)AND((NOT (t0.c52)))))OR((((t0.c52)) BETWEEN ((t0.c48)) AND ((t0.c48)))))) ORDER BY ((((t0.c48)<=(t0.c52))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c41 COLLATE RTRIM)AND((NOT (t0.c52)))))OR((((t0.c52)) BETWEEN ((t0.c48)) AND ((t0.c48)))))) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY ((((t0.c48)<=(t0.c52))) NOT NULL) ASC);
SELECT * FROM t0 WHERE (((((t0.c41 COLLATE RTRIM)AND((NOT (t0.c52)))))OR((((t0.c52)) BETWEEN ((t0.c48)) AND ((t0.c48)))))) ORDER BY ((((t0.c48)<=(t0.c52))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c41 COLLATE RTRIM)AND((NOT (t0.c52)))))OR((((t0.c52)) BETWEEN ((t0.c48)) AND ((t0.c48)))))) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY ((((t0.c48)<=(t0.c52))) NOT NULL) ASC);
SELECT * FROM t0 WHERE (((((t0.c41 COLLATE RTRIM)AND((NOT (t0.c52)))))OR((((t0.c52)) BETWEEN ((t0.c48)) AND ((t0.c48)))))) ORDER BY ((((t0.c48)<=(t0.c52))) NOT NULL) ASC;
SELECT * FROM vt0, t0 WHERE ((((((t0.c81))=((t0.c48)))) NOT NULL)) ORDER BY ((t0.c84) NOT NULL) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c81))=((t0.c48)))) NOT NULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c84) NOT NULL) COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE ((((((t0.c81))=((t0.c48)))) NOT NULL)) ORDER BY ((t0.c84) NOT NULL) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c81))=((t0.c48)))) NOT NULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c84) NOT NULL) COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE ((((((t0.c81))=((t0.c48)))) NOT NULL)) ORDER BY ((t0.c84) NOT NULL) COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((~ (((((((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(x'319b')))));
SELECT SUM(count) FROM (SELECT (((~ (((((((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(x'319b'))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((~ (((((((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(x'319b')))));
SELECT SUM(count) FROM (SELECT (((~ (((((((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(x'319b'))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((~ (((((((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(x'319b')))));
SELECT ALL * FROM vt0, vt1, t0, t1 WHERE (((((t0.c81)AND(CASE WHEN t1.c0 THEN vt0.c0 ELSE t1.c1 END)))OR(CAST(t1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c81)AND(CASE WHEN t1.c0 THEN vt0.c0 ELSE t1.c1 END)))OR(CAST(t1.c0 AS REAL)))) IS TRUE)  as count FROM vt0, vt1, t0, t1);
SELECT ALL * FROM vt0, vt1, t0, t1 WHERE (((((t0.c81)AND(CASE WHEN t1.c0 THEN vt0.c0 ELSE t1.c1 END)))OR(CAST(t1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c81)AND(CASE WHEN t1.c0 THEN vt0.c0 ELSE t1.c1 END)))OR(CAST(t1.c0 AS REAL)))) IS TRUE)  as count FROM vt0, vt1, t0, t1);
SELECT ALL * FROM vt0, vt1, t0, t1 WHERE (((((t0.c81)AND(CASE WHEN t1.c0 THEN vt0.c0 ELSE t1.c1 END)))OR(CAST(t1.c0 AS REAL))));
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((- (NULL))) ORDER BY (NOT (CASE WHEN 4.24679637E8 THEN t0.c48 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL (((- (NULL))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (NOT (CASE WHEN 4.24679637E8 THEN t0.c48 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((- (NULL))) ORDER BY (NOT (CASE WHEN 4.24679637E8 THEN t0.c48 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL (((- (NULL))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (NOT (CASE WHEN 4.24679637E8 THEN t0.c48 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((- (NULL))) ORDER BY (NOT (CASE WHEN 4.24679637E8 THEN t0.c48 ELSE vt0.c0 END));
SELECT ALL * FROM t1, vt1, vt0 WHERE (LOWER(((vt1.c0)%(x''))));
SELECT SUM(count) FROM (SELECT ((LOWER(((vt1.c0)%(x'')))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT ALL * FROM t1, vt1, vt0 WHERE (LOWER(((vt1.c0)%(x''))));
SELECT SUM(count) FROM (SELECT ((LOWER(((vt1.c0)%(x'')))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT ALL * FROM t1, vt1, vt0 WHERE (LOWER(((vt1.c0)%(x''))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM vt1, t1, t0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, t1, t0);
SELECT ALL COUNT(*) FROM vt1, t1, t0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, t1, t0);
SELECT ALL COUNT(*) FROM vt1, t1, t0 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)<(vt0.c0)))=(UPPER(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<(vt0.c0)))==(UPPER(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)<(vt0.c0)))=(UPPER(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<(vt0.c0)))==(UPPER(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)<(vt0.c0)))=(UPPER(vt0.c0))));
SELECT ALL * FROM vt1, vt0 WHERE ((~ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (vt0.c0 IN ()) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (vt0.c0 IN ()) COLLATE BINARY ASC);
SELECT ALL * FROM vt1, vt0 WHERE ((~ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (vt0.c0 IN ()) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (vt0.c0 IN ()) COLLATE BINARY ASC);
SELECT ALL * FROM vt1, vt0 WHERE ((~ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (vt0.c0 IN ()) COLLATE BINARY ASC;
SELECT * FROM t0, t1 WHERE (((t0.c84 COLLATE BINARY)-(t0.c84 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((t0.c84 COLLATE BINARY)-(t0.c84 COLLATE BINARY))) IS TRUE)  as count FROM t0, t1);
SELECT * FROM t0, t1 WHERE (((t0.c84 COLLATE BINARY)-(t0.c84 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((t0.c84 COLLATE BINARY)-(t0.c84 COLLATE BINARY))) IS TRUE)  as count FROM t0, t1);
SELECT * FROM t0, t1 WHERE (((t0.c84 COLLATE BINARY)-(t0.c84 COLLATE BINARY)));
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON ((((t0.c84)*(t0.c84)))+(((t0.c52) NOT NULL))) WHERE (TYPEOF((((vt0.c0))==((t0.c84))))) ORDER BY ((((t0.c48))>((t0.c48))) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF((((vt0.c0))==((t0.c84))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((t0.c84)*(t0.c84)))+(((t0.c52) NOT NULL))) ORDER BY ((((t0.c48))>((t0.c48))) IN ()) ASC  NULLS LAST);
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON ((((t0.c84)*(t0.c84)))+(((t0.c52) NOT NULL))) WHERE (TYPEOF((((vt0.c0))==((t0.c84))))) ORDER BY ((((t0.c48))>((t0.c48))) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF((((vt0.c0))==((t0.c84))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((t0.c84)*(t0.c84)))+(((t0.c52) NOT NULL))) ORDER BY ((((t0.c48))>((t0.c48))) IN ()) ASC  NULLS LAST);
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON ((((t0.c84)*(t0.c84)))+(((t0.c52) NOT NULL))) WHERE (TYPEOF((((vt0.c0))==((t0.c84))))) ORDER BY ((((t0.c48))>((t0.c48))) IN ()) ASC  NULLS LAST;
SELECT COUNT(*) FROM t1, t0 WHERE (((t1.c1)>=(UPPER(DISTINCT t0.c52))));
SELECT SUM(count) FROM (SELECT ((((t1.c1)>=(UPPER(DISTINCT t0.c52)))) IS TRUE)  as count FROM t1, t0);
SELECT COUNT(*) FROM t1, t0 WHERE (((t1.c1)>=(UPPER(DISTINCT t0.c52))));
SELECT SUM(count) FROM (SELECT ((((t1.c1)>=(UPPER(DISTINCT t0.c52)))) IS TRUE)  as count FROM t1, t0);
SELECT COUNT(*) FROM t1, t0 WHERE (((t1.c1)>=(UPPER(DISTINCT t0.c52))));
SELECT ALL COUNT(*) FROM t0, vt1 CROSS JOIN t1 ON ((t0.c41 COLLATE BINARY) BETWEEN ('') AND ((((t1.c1)) BETWEEN ((t0.c48)) AND ((t1.c2))))) FULL OUTER JOIN vt0 ON CAST(((t0.c41)>=(t0.c84)) AS REAL) WHERE ((('') ISNULL)) ORDER BY LOWER(((vt0.c0) ISNULL)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('') ISNULL)) IS TRUE)  as count FROM t0, vt1 CROSS JOIN t1 ON ((t0.c41 COLLATE BINARY) BETWEEN ('') AND ((((t1.c1)) BETWEEN ((t0.c48)) AND ((t1.c2))))) FULL OUTER JOIN vt0 ON CAST(((t0.c41)>=(t0.c84)) AS REAL) ORDER BY LOWER(((vt0.c0) ISNULL)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1 CROSS JOIN t1 ON ((t0.c41 COLLATE BINARY) BETWEEN ('') AND ((((t1.c1)) BETWEEN ((t0.c48)) AND ((t1.c2))))) FULL OUTER JOIN vt0 ON CAST(((t0.c41)>=(t0.c84)) AS REAL) WHERE ((('') ISNULL)) ORDER BY LOWER(((vt0.c0) ISNULL)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('') ISNULL)) IS TRUE)  as count FROM t0, vt1 CROSS JOIN t1 ON ((t0.c41 COLLATE BINARY) BETWEEN ('') AND ((((t1.c1)) BETWEEN ((t0.c48)) AND ((t1.c2))))) FULL OUTER JOIN vt0 ON CAST(((t0.c41)>=(t0.c84)) AS REAL) ORDER BY LOWER(((vt0.c0) ISNULL)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1 CROSS JOIN t1 ON ((t0.c41 COLLATE BINARY) BETWEEN ('') AND ((((t1.c1)) BETWEEN ((t0.c48)) AND ((t1.c2))))) FULL OUTER JOIN vt0 ON CAST(((t0.c41)>=(t0.c84)) AS REAL) WHERE ((('') ISNULL)) ORDER BY LOWER(((vt0.c0) ISNULL)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, t1, vt1 WHERE (((((+ (t1.c2))))>((t0.c84 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ((((((+ (t1.c2))))>((t0.c84 COLLATE BINARY)))) IS TRUE)  as count FROM t0, t1, vt1);
SELECT COUNT(*) FROM t0, t1, vt1 WHERE (((((+ (t1.c2))))>((t0.c84 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ((((((+ (t1.c2))))>((t0.c84 COLLATE BINARY)))) IS TRUE)  as count FROM t0, t1, vt1);
SELECT COUNT(*) FROM t0, t1, vt1 WHERE (((((+ (t1.c2))))>((t0.c84 COLLATE BINARY))));
SELECT ALL COUNT(*) FROM vt1 INDEXED BY i32 CROSS JOIN vt0 ON (((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)), ((vt1.c0)IS(vt1.c0)), CAST(vt1.c0 AS NUMERIC))) AND ((((vt0.c0)==(vt0.c0)), vt1.c0, CAST(vt0.c0 AS REAL)))) WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END)<<(vt1.c0 COLLATE BINARY))) ORDER BY (((LIKELY(NULL)))<((vt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END)<<(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1 INDEXED BY i32 CROSS JOIN vt0 ON (((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)), ((vt1.c0)IS(vt1.c0)), CAST(vt1.c0 AS NUMERIC))) AND ((((vt0.c0)=(vt0.c0)), vt1.c0, CAST(vt0.c0 AS REAL)))) ORDER BY (((LIKELY(NULL)))<((vt1.c0))) DESC);
SELECT ALL COUNT(*) FROM vt1 INDEXED BY i32 CROSS JOIN vt0 ON (((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)), ((vt1.c0)IS(vt1.c0)), CAST(vt1.c0 AS NUMERIC))) AND ((((vt0.c0)==(vt0.c0)), vt1.c0, CAST(vt0.c0 AS REAL)))) WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END)<<(vt1.c0 COLLATE BINARY))) ORDER BY (((LIKELY(NULL)))<((vt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END)<<(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1 INDEXED BY i32 CROSS JOIN vt0 ON (((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)), ((vt1.c0)IS(vt1.c0)), CAST(vt1.c0 AS NUMERIC))) AND ((((vt0.c0)=(vt0.c0)), vt1.c0, CAST(vt0.c0 AS REAL)))) ORDER BY (((LIKELY(NULL)))<((vt1.c0))) DESC);
SELECT * FROM t1 CROSS JOIN vt0 ON ((((t0.c52)-(t0.c81))) IS FALSE) RIGHT OUTER JOIN t0 ON t0.c48 WHERE ((- (((t1.c2) BETWEEN (t0.c84) AND (t0.c84)))));
SELECT SUM(count) FROM (SELECT (((- (((t1.c2) BETWEEN (t0.c84) AND (t0.c84))))) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON ((((t0.c52)-(t0.c81))) IS FALSE) RIGHT OUTER JOIN t0 ON t0.c48);
SELECT * FROM t1 CROSS JOIN vt0 ON ((((t0.c52)-(t0.c81))) IS FALSE) RIGHT OUTER JOIN t0 ON t0.c48 WHERE ((- (((t1.c2) BETWEEN (t0.c84) AND (t0.c84)))));
SELECT SUM(count) FROM (SELECT (((- (((t1.c2) BETWEEN (t0.c84) AND (t0.c84))))) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON ((((t0.c52)-(t0.c81))) IS FALSE) RIGHT OUTER JOIN t0 ON t0.c48);
SELECT ALL * FROM vt1, vt0 WHERE (CASE WHEN ((vt0.c0)=(vt0.c0)) THEN '-944410480' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)=(vt0.c0)) THEN '-944410480' END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CASE WHEN ((vt0.c0)=(vt0.c0)) THEN '-944410480' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)=(vt0.c0)) THEN '-944410480' END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CASE WHEN ((vt0.c0)=(vt0.c0)) THEN '-944410480' END);
SELECT COUNT(*) FROM t0, vt1 WHERE ((- (t0.c52)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((- (t0.c52)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1 NOT INDEXED);
SELECT COUNT(*) FROM t0, vt1 WHERE ((- (t0.c52)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((- (t0.c52)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1 NOT INDEXED);
SELECT COUNT(*) FROM t0, vt1 WHERE ((- (t0.c52)) COLLATE NOCASE);
SELECT * FROM t1, vt1, vt0 WHERE (CASE ((t1.c0) IS FALSE)  WHEN '' THEN (((vt0.c0))>=((t1.c1))) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c0) IS FALSE)  WHEN '' THEN (((vt0.c0))>=((t1.c1))) END) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT * FROM t1, vt1, vt0 WHERE (CASE ((t1.c0) IS FALSE)  WHEN '' THEN (((vt0.c0))>=((t1.c1))) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c0) IS FALSE)  WHEN '' THEN (((vt0.c0))>=((t1.c1))) END) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT * FROM t1, vt1, vt0 WHERE (CASE ((t1.c0) IS FALSE)  WHEN '' THEN (((vt0.c0))>=((t1.c1))) END);
SELECT ALL COUNT(*) FROM t1 INNER JOIN vt1 ON ((t1.c0)<=((((t1.c0))!=((t1.c0))))) WHERE ((((+ (t1.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((+ (t1.c2))) IS TRUE)) IS TRUE)  as count FROM t1 INNER JOIN vt1 ON ((t1.c0)<=((((t1.c0))!=((t1.c0))))));
SELECT ALL COUNT(*) FROM t1 INNER JOIN vt1 ON ((t1.c0)<=((((t1.c0))!=((t1.c0))))) WHERE ((((+ (t1.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((+ (t1.c2))) IS TRUE)) IS TRUE)  as count FROM t1 INNER JOIN vt1 ON ((t1.c0)<=((((t1.c0))!=((t1.c0))))));
SELECT ALL COUNT(*) FROM t1 INNER JOIN vt1 ON ((t1.c0)<=((((t1.c0))!=((t1.c0))))) WHERE ((((+ (t1.c2))) IS TRUE));
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c2)=(t1.c1)), -4.11791495E8, GLOB(t1.c2, t1.c0), ((t1.c2)GLOB(t1.c2)), HEX(t1.c2)))>(((- (t1.c1)), ((t1.c1)/(t1.c2)), t1.c0 COLLATE RTRIM, ((x'') NOT BETWEEN (t1.c0) AND (t1.c2)), (('-984466748')&(t1.c1))))));
SELECT SUM(count) FROM (SELECT (((((((t1.c2)==(t1.c1)), -4.11791495E8, GLOB(t1.c2, t1.c0), ((t1.c2)GLOB(t1.c2)), HEX(t1.c2)))>(((- (t1.c1)), ((t1.c1)/(t1.c2)), t1.c0 COLLATE RTRIM, ((x'') NOT BETWEEN (t1.c0) AND (t1.c2)), (('-984466748')&(t1.c1)))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c2)=(t1.c1)), -4.11791495E8, GLOB(t1.c2, t1.c0), ((t1.c2)GLOB(t1.c2)), HEX(t1.c2)))>(((- (t1.c1)), ((t1.c1)/(t1.c2)), t1.c0 COLLATE RTRIM, ((x'') NOT BETWEEN (t1.c0) AND (t1.c2)), (('-984466748')&(t1.c1))))));
SELECT SUM(count) FROM (SELECT (((((((t1.c2)==(t1.c1)), -4.11791495E8, GLOB(t1.c2, t1.c0), ((t1.c2)GLOB(t1.c2)), HEX(t1.c2)))>(((- (t1.c1)), ((t1.c1)/(t1.c2)), t1.c0 COLLATE RTRIM, ((x'') NOT BETWEEN (t1.c0) AND (t1.c2)), (('-984466748')&(t1.c1)))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c2)=(t1.c1)), -4.11791495E8, GLOB(t1.c2, t1.c0), ((t1.c2)GLOB(t1.c2)), HEX(t1.c2)))>(((- (t1.c1)), ((t1.c1)/(t1.c2)), t1.c0 COLLATE RTRIM, ((x'') NOT BETWEEN (t1.c0) AND (t1.c2)), (('-984466748')&(t1.c1))))));
SELECT * FROM t0 RIGHT OUTER JOIN t1 ON (+ ((('0.24106706807798162') BETWEEN (t0.c81) AND (t0.c52)))) WHERE (CAST(((t0.c48)AND(t0.c81)) AS REAL)) ORDER BY (((t0.c48) IS TRUE) IN ((((t1.c1, t1.c2, t1.c2)) NOT BETWEEN ((t1.c2, t0.c52, t0.c84)) AND ((t1.c1, t1.c0, t0.c84))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c48)AND(t0.c81)) AS REAL)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN t1 ON (+ ((('0.24106706807798162') BETWEEN (t0.c81) AND (t0.c52)))) ORDER BY (((t0.c48) IS TRUE) IN ((((t1.c1, t1.c2, t1.c2)) NOT BETWEEN ((t1.c2, t0.c52, t0.c84)) AND ((t1.c1, t1.c0, t0.c84))))) ASC  NULLS FIRST);
SELECT * FROM t0 RIGHT OUTER JOIN t1 ON (+ ((('0.24106706807798162') BETWEEN (t0.c81) AND (t0.c52)))) WHERE (CAST(((t0.c48)AND(t0.c81)) AS REAL)) ORDER BY (((t0.c48) IS TRUE) IN ((((t1.c1, t1.c2, t1.c2)) NOT BETWEEN ((t1.c2, t0.c52, t0.c84)) AND ((t1.c1, t1.c0, t0.c84))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c48)AND(t0.c81)) AS REAL)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN t1 ON (+ ((('0.24106706807798162') BETWEEN (t0.c81) AND (t0.c52)))) ORDER BY (((t0.c48) IS TRUE) IN ((((t1.c1, t1.c2, t1.c2)) NOT BETWEEN ((t1.c2, t0.c52, t0.c84)) AND ((t1.c1, t1.c0, t0.c84))))) ASC  NULLS FIRST);
SELECT * FROM t0 RIGHT OUTER JOIN t1 ON (+ ((('0.24106706807798162') BETWEEN (t0.c81) AND (t0.c52)))) WHERE (CAST(((t0.c48)AND(t0.c81)) AS REAL)) ORDER BY (((t0.c48) IS TRUE) IN ((((t1.c1, t1.c2, t1.c2)) NOT BETWEEN ((t1.c2, t0.c52, t0.c84)) AND ((t1.c1, t1.c0, t0.c84))))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((~ (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ (vt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN vt0 ON ((CASE t1.c1  WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN t1.c2 WHEN vt0.c0 THEN t1.c1 ELSE t1.c2 END) NOT BETWEEN ((t1.c2 IN ())) AND ((+ (t1.c1)))) WHERE (CAST(((vt0.c0)IS(t1.c1)) AS TEXT)) ORDER BY (+ (((t1.c1)%(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)IS(t1.c1)) AS TEXT)) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON ((CASE t1.c1  WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN t1.c2 WHEN vt0.c0 THEN t1.c1 ELSE t1.c2 END) NOT BETWEEN ((t1.c2 IN ())) AND ((+ (t1.c1)))) ORDER BY (+ (((t1.c1)%(vt0.c0)))) DESC);
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN vt0 ON ((CASE t1.c1  WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN t1.c2 WHEN vt0.c0 THEN t1.c1 ELSE t1.c2 END) NOT BETWEEN ((t1.c2 IN ())) AND ((+ (t1.c1)))) WHERE (CAST(((vt0.c0)IS(t1.c1)) AS TEXT)) ORDER BY (+ (((t1.c1)%(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)IS(t1.c1)) AS TEXT)) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON ((CASE t1.c1  WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN t1.c2 WHEN vt0.c0 THEN t1.c1 ELSE t1.c2 END) NOT BETWEEN ((t1.c2 IN ())) AND ((+ (t1.c1)))) ORDER BY (+ (((t1.c1)%(vt0.c0)))) DESC);
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN vt0 ON ((CASE t1.c1  WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN t1.c2 WHEN vt0.c0 THEN t1.c1 ELSE t1.c2 END) NOT BETWEEN ((t1.c2 IN ())) AND ((+ (t1.c1)))) WHERE (CAST(((vt0.c0)IS(t1.c1)) AS TEXT)) ORDER BY (+ (((t1.c1)%(vt0.c0)))) DESC;
SELECT COUNT(*) FROM t1, vt1, t0, vt0 WHERE ((((LIKE(t0.c52, t1.c0, '-')))=(((~ (t1.c1))))));
SELECT SUM(count) FROM (SELECT (((((LIKE(t0.c52, t1.c0, '-')))==(((~ (t1.c1)))))) IS TRUE)  as count FROM t1, vt1, t0, vt0);
SELECT COUNT(*) FROM t1, vt1, t0, vt0 WHERE ((((LIKE(t0.c52, t1.c0, '-')))=(((~ (t1.c1))))));
SELECT SUM(count) FROM (SELECT (((((LIKE(t0.c52, t1.c0, '-')))==(((~ (t1.c1)))))) IS TRUE)  as count FROM t1, vt1, t0, vt0);
SELECT COUNT(*) FROM t1, vt1, t0, vt0 WHERE ((((LIKE(t0.c52, t1.c0, '-')))=(((~ (t1.c1))))));
SELECT ALL * FROM t0, t1, vt1, vt0 WHERE ((((t0.c52)) NOT BETWEEN ((((t1.c1)<=(t0.c52)))) AND ((t1.c0)))) ORDER BY CAST((t0.c48 IN (t0.c52, t0.c41)) AS INTEGER)  NULLS FIRST, ((((vt1.c0)*(t0.c81))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c52)) NOT BETWEEN ((((t1.c1)<=(t0.c52)))) AND ((t1.c0)))) IS TRUE)  as count FROM t0, t1, vt1, vt0 ORDER BY CAST((t0.c48 IN (t0.c52, t0.c41)) AS INTEGER)  NULLS FIRST, ((((vt1.c0)*(t0.c81))) ISNULL)  NULLS FIRST);
SELECT ALL * FROM t0, t1, vt1, vt0 WHERE ((((t0.c52)) NOT BETWEEN ((((t1.c1)<=(t0.c52)))) AND ((t1.c0)))) ORDER BY CAST((t0.c48 IN (t0.c52, t0.c41)) AS INTEGER)  NULLS FIRST, ((((vt1.c0)*(t0.c81))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c52)) NOT BETWEEN ((((t1.c1)<=(t0.c52)))) AND ((t1.c0)))) IS TRUE)  as count FROM t0, t1, vt1, vt0 ORDER BY CAST((t0.c48 IN (t0.c52, t0.c41)) AS INTEGER)  NULLS FIRST, ((((vt1.c0)*(t0.c81))) ISNULL)  NULLS FIRST);
SELECT ALL * FROM t0, t1, vt1, vt0 WHERE ((((t0.c52)) NOT BETWEEN ((((t1.c1)<=(t0.c52)))) AND ((t1.c0)))) ORDER BY CAST((t0.c48 IN (t0.c52, t0.c41)) AS INTEGER)  NULLS FIRST, ((((vt1.c0)*(t0.c81))) ISNULL)  NULLS FIRST;
SELECT * FROM t1, vt1 WHERE ((((t1.c2)) NOT BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((((t1.c0)OR(t1.c0)))AND(t1.c0)))))) ORDER BY LOWER(((t1.c2)<=(t1.c1))), ((t1.c2)AND(((t1.c1)AND(t1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((((t1.c2)) NOT BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((((t1.c0)OR(t1.c0)))AND(t1.c0)))))) IS TRUE)  as count FROM t1, vt1 ORDER BY LOWER(((t1.c2)<=(t1.c1))), ((t1.c2)AND(((t1.c1)AND(t1.c1)))) ASC);
SELECT * FROM t1, vt1 WHERE ((((t1.c2)) NOT BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((((t1.c0)OR(t1.c0)))AND(t1.c0)))))) ORDER BY LOWER(((t1.c2)<=(t1.c1))), ((t1.c2)AND(((t1.c1)AND(t1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((((t1.c2)) NOT BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((((t1.c0)OR(t1.c0)))AND(t1.c0)))))) IS TRUE)  as count FROM t1, vt1 ORDER BY LOWER(((t1.c2)<=(t1.c1))), ((t1.c2)AND(((t1.c1)AND(t1.c1)))) ASC);
SELECT * FROM t1, vt1 WHERE ((((t1.c2)) NOT BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((((t1.c0)OR(t1.c0)))AND(t1.c0)))))) ORDER BY LOWER(((t1.c2)<=(t1.c1))), ((t1.c2)AND(((t1.c1)AND(t1.c1)))) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c81, t0.c84, t0.c81)) BETWEEN (((+ (t0.c52)), (t0.c48 IN ()), (NOT (t0.c81)))) AND ((((t0.c41)AND(t0.c48)), t0.c41 COLLATE RTRIM, (((t0.c41)) BETWEEN ((t0.c48)) AND ((t0.c52)))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c81, t0.c84, t0.c81)) BETWEEN (((+ (t0.c52)), (t0.c48 IN ()), (NOT (t0.c81)))) AND ((((t0.c41)AND(t0.c48)), t0.c41 COLLATE RTRIM, (((t0.c41)) BETWEEN ((t0.c48)) AND ((t0.c52))))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c81, t0.c84, t0.c81)) BETWEEN (((+ (t0.c52)), (t0.c48 IN ()), (NOT (t0.c81)))) AND ((((t0.c41)AND(t0.c48)), t0.c41 COLLATE RTRIM, (((t0.c41)) BETWEEN ((t0.c48)) AND ((t0.c52)))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c81, t0.c84, t0.c81)) BETWEEN (((+ (t0.c52)), (t0.c48 IN ()), (NOT (t0.c81)))) AND ((((t0.c41)AND(t0.c48)), t0.c41 COLLATE RTRIM, (((t0.c41)) BETWEEN ((t0.c48)) AND ((t0.c52))))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c81, t0.c84, t0.c81)) BETWEEN (((+ (t0.c52)), (t0.c48 IN ()), (NOT (t0.c81)))) AND ((((t0.c41)AND(t0.c48)), t0.c41 COLLATE RTRIM, (((t0.c41)) BETWEEN ((t0.c48)) AND ((t0.c52)))))));
SELECT ALL COUNT(*) FROM t0, t1, vt0 WHERE (((((t0.c41) NOT BETWEEN (t1.c2) AND (vt0.c0)))IS NOT(t0.c81))) ORDER BY '2128236902' DESC  NULLS FIRST, CASE t1.c0 COLLATE NOCASE  WHEN (- (t1.c2)) THEN t0.c84 COLLATE RTRIM ELSE ((((t1.c0)OR(vt0.c0)))AND(t1.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c41) NOT BETWEEN (t1.c2) AND (vt0.c0)))IS NOT(t0.c81))) IS TRUE)  as count FROM t0, t1, vt0 ORDER BY '2128236902' DESC  NULLS FIRST, CASE t1.c0 COLLATE NOCASE  WHEN (- (t1.c2)) THEN t0.c84 COLLATE RTRIM ELSE ((((t1.c0)OR(vt0.c0)))AND(t1.c1)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, t1, vt0 WHERE (((((t0.c41) NOT BETWEEN (t1.c2) AND (vt0.c0)))IS NOT(t0.c81))) ORDER BY '2128236902' DESC  NULLS FIRST, CASE t1.c0 COLLATE NOCASE  WHEN (- (t1.c2)) THEN t0.c84 COLLATE RTRIM ELSE ((((t1.c0)OR(vt0.c0)))AND(t1.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c41) NOT BETWEEN (t1.c2) AND (vt0.c0)))IS NOT(t0.c81))) IS TRUE)  as count FROM t0, t1, vt0 ORDER BY '2128236902' DESC  NULLS FIRST, CASE t1.c0 COLLATE NOCASE  WHEN (- (t1.c2)) THEN t0.c84 COLLATE RTRIM ELSE ((((t1.c0)OR(vt0.c0)))AND(t1.c1)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, t1, vt0 WHERE (((((t0.c41) NOT BETWEEN (t1.c2) AND (vt0.c0)))IS NOT(t0.c81))) ORDER BY '2128236902' DESC  NULLS FIRST, CASE t1.c0 COLLATE NOCASE  WHEN (- (t1.c2)) THEN t0.c84 COLLATE RTRIM ELSE ((((t1.c0)OR(vt0.c0)))AND(t1.c1)) END  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (NULL COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (NULL COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (NULL COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt1 WHERE ('') ORDER BY t0.c52 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0 NATURAL JOIN vt1 ORDER BY t0.c52 COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt1 WHERE ('') ORDER BY t0.c52 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0 NATURAL JOIN vt1 ORDER BY t0.c52 COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt1 WHERE ('') ORDER BY t0.c52 COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM vt1, vt0, t1 WHERE (((((t1.c1)|(t1.c1))) BETWEEN ((vt1.c0 IN ())) AND (IFNULL(t1.c0, vt0.c0)))) ORDER BY ((SQLITE_COMPILEOPTION_GET(t1.c1)) BETWEEN (CASE t1.c2  WHEN vt0.c0 THEN t1.c1 END) AND (((vt0.c0)GLOB(vt0.c0))))  NULLS LAST, CASE ((vt0.c0) NOT BETWEEN (t1.c1) AND (t1.c1))  WHEN (((t1.c2, t1.c0, t1.c1)) BETWEEN ((vt0.c0, t1.c2, vt1.c0)) AND ((t1.c2, vt1.c0, t1.c1))) THEN '539800931' END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c1)|(t1.c1))) BETWEEN ((vt1.c0 IN ())) AND (IFNULL(t1.c0, vt0.c0)))) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY ((SQLITE_COMPILEOPTION_GET(t1.c1)) BETWEEN (CASE t1.c2  WHEN vt0.c0 THEN t1.c1 END) AND (((vt0.c0)GLOB(vt0.c0))))  NULLS LAST, CASE ((vt0.c0) NOT BETWEEN (t1.c1) AND (t1.c1))  WHEN (((t1.c2, t1.c0, t1.c1)) BETWEEN ((vt0.c0, t1.c2, vt1.c0)) AND ((t1.c2, vt1.c0, t1.c1))) THEN '539800931' END ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, t1 WHERE (((((t1.c1)|(t1.c1))) BETWEEN ((vt1.c0 IN ())) AND (IFNULL(t1.c0, vt0.c0)))) ORDER BY ((SQLITE_COMPILEOPTION_GET(t1.c1)) BETWEEN (CASE t1.c2  WHEN vt0.c0 THEN t1.c1 END) AND (((vt0.c0)GLOB(vt0.c0))))  NULLS LAST, CASE ((vt0.c0) NOT BETWEEN (t1.c1) AND (t1.c1))  WHEN (((t1.c2, t1.c0, t1.c1)) BETWEEN ((vt0.c0, t1.c2, vt1.c0)) AND ((t1.c2, vt1.c0, t1.c1))) THEN '539800931' END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c1)|(t1.c1))) BETWEEN ((vt1.c0 IN ())) AND (IFNULL(t1.c0, vt0.c0)))) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY ((SQLITE_COMPILEOPTION_GET(t1.c1)) BETWEEN (CASE t1.c2  WHEN vt0.c0 THEN t1.c1 END) AND (((vt0.c0)GLOB(vt0.c0))))  NULLS LAST, CASE ((vt0.c0) NOT BETWEEN (t1.c1) AND (t1.c1))  WHEN (((t1.c2, t1.c0, t1.c1)) BETWEEN ((vt0.c0, t1.c2, vt1.c0)) AND ((t1.c2, vt1.c0, t1.c1))) THEN '539800931' END ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, t1 WHERE (((((t1.c1)|(t1.c1))) BETWEEN ((vt1.c0 IN ())) AND (IFNULL(t1.c0, vt0.c0)))) ORDER BY ((SQLITE_COMPILEOPTION_GET(t1.c1)) BETWEEN (CASE t1.c2  WHEN vt0.c0 THEN t1.c1 END) AND (((vt0.c0)GLOB(vt0.c0))))  NULLS LAST, CASE ((vt0.c0) NOT BETWEEN (t1.c1) AND (t1.c1))  WHEN (((t1.c2, t1.c0, t1.c1)) BETWEEN ((vt0.c0, t1.c2, vt1.c0)) AND ((t1.c2, vt1.c0, t1.c1))) THEN '539800931' END ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0, t1 CROSS JOIN vt1 ON t0.c81 WHERE (t1.c1);
SELECT SUM(count) FROM (SELECT ALL ((t1.c1) IS TRUE)  as count FROM t0, vt0, t1 CROSS JOIN vt1 ON t0.c81);
SELECT COUNT(*) FROM t0, vt0, t1 CROSS JOIN vt1 ON t0.c81 WHERE (t1.c1);
SELECT SUM(count) FROM (SELECT ALL ((t1.c1) IS TRUE)  as count FROM t0, vt0, t1 CROSS JOIN vt1 ON t0.c81);
SELECT COUNT(*) FROM t0, vt0, t1 CROSS JOIN vt1 ON t0.c81 WHERE (t1.c1);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)>(vt0.c0)) AS TEXT)) ORDER BY (~ (vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)>(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c0))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)>(vt0.c0)) AS TEXT)) ORDER BY (~ (vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)>(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c0))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)>(vt0.c0)) AS TEXT)) ORDER BY (~ (vt0.c0))  NULLS LAST;
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (((((vt1.c0) NOTNULL)) NOT BETWEEN (((((0x3ff07bb0)AND(t1.c1)))AND(t1.c1))) AND ((((vt1.c0, vt0.c0, t1.c2))>((vt1.c0, vt0.c0, t1.c1))))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOTNULL)) NOT BETWEEN (((((0X3ff07bb0)AND(t1.c1)))AND(t1.c1))) AND ((((vt1.c0, vt0.c0, t1.c2))>((vt1.c0, vt0.c0, t1.c1)))))) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (((((vt1.c0) NOTNULL)) NOT BETWEEN (((((0x3ff07bb0)AND(t1.c1)))AND(t1.c1))) AND ((((vt1.c0, vt0.c0, t1.c2))>((vt1.c0, vt0.c0, t1.c1))))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOTNULL)) NOT BETWEEN (((((0X3ff07bb0)AND(t1.c1)))AND(t1.c1))) AND ((((vt1.c0, vt0.c0, t1.c2))>((vt1.c0, vt0.c0, t1.c1)))))) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (((((vt1.c0) NOTNULL)) NOT BETWEEN (((((0x3ff07bb0)AND(t1.c1)))AND(t1.c1))) AND ((((vt1.c0, vt0.c0, t1.c2))>((vt1.c0, vt0.c0, t1.c1))))));
SELECT * FROM t1 CROSS JOIN vt1 ON ((((t1.c0)/(vt1.c0)))=((((t1.c2))>=((vt1.c0))))) WHERE (((((t1.c1) NOTNULL)) IS FALSE)) ORDER BY ((((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c2))) BETWEEN ((t1.c2 IN (t1.c0, t1.c1))) AND (CAST(t1.c1 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c1) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM t1 CROSS JOIN vt1 ON ((((t1.c0)/(vt1.c0)))==((((t1.c2))>=((vt1.c0))))) ORDER BY ((((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c2))) BETWEEN ((t1.c2 IN (t1.c0, t1.c1))) AND (CAST(t1.c1 AS TEXT))));
SELECT * FROM t1 CROSS JOIN vt1 ON ((((t1.c0)/(vt1.c0)))=((((t1.c2))>=((vt1.c0))))) WHERE (((((t1.c1) NOTNULL)) IS FALSE)) ORDER BY ((((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c2))) BETWEEN ((t1.c2 IN (t1.c0, t1.c1))) AND (CAST(t1.c1 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c1) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM t1 CROSS JOIN vt1 ON ((((t1.c0)/(vt1.c0)))==((((t1.c2))>=((vt1.c0))))) ORDER BY ((((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c2))) BETWEEN ((t1.c2 IN (t1.c0, t1.c1))) AND (CAST(t1.c1 AS TEXT))));
SELECT * FROM t1 CROSS JOIN vt1 ON ((((t1.c0)/(vt1.c0)))=((((t1.c2))>=((vt1.c0))))) WHERE (((((t1.c1) NOTNULL)) IS FALSE)) ORDER BY ((((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c2))) BETWEEN ((t1.c2 IN (t1.c0, t1.c1))) AND (CAST(t1.c1 AS TEXT)));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON UPPER(DISTINCT (~ (vt0.c0))) WHERE (((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE '-118396075' END)>>((+ (vt0.c0))))) ORDER BY vt1.c0, (((((vt0.c0))!=((vt1.c0))))>=(((vt1.c0)%(vt1.c0)))), (((vt0.c0 IN ())) BETWEEN (vt0.c0) AND (vt1.c0 COLLATE RTRIM)), CAST(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE '-118396075' END)>>((+ (vt0.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON UPPER(DISTINCT (~ (vt0.c0))) ORDER BY vt1.c0, (((((vt0.c0))<>((vt1.c0))))>=(((vt1.c0)%(vt1.c0)))), (((vt0.c0 IN ())) BETWEEN (vt0.c0) AND (vt1.c0 COLLATE RTRIM)), CAST(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END AS NUMERIC) DESC);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON UPPER(DISTINCT (~ (vt0.c0))) WHERE (((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE '-118396075' END)>>((+ (vt0.c0))))) ORDER BY vt1.c0, (((((vt0.c0))!=((vt1.c0))))>=(((vt1.c0)%(vt1.c0)))), (((vt0.c0 IN ())) BETWEEN (vt0.c0) AND (vt1.c0 COLLATE RTRIM)), CAST(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE '-118396075' END)>>((+ (vt0.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON UPPER(DISTINCT (~ (vt0.c0))) ORDER BY vt1.c0, (((((vt0.c0))<>((vt1.c0))))>=(((vt1.c0)%(vt1.c0)))), (((vt0.c0 IN ())) BETWEEN (vt0.c0) AND (vt1.c0 COLLATE RTRIM)), CAST(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END AS NUMERIC) DESC);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON UPPER(DISTINCT (~ (vt0.c0))) WHERE (((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE '-118396075' END)>>((+ (vt0.c0))))) ORDER BY vt1.c0, (((((vt0.c0))!=((vt1.c0))))>=(((vt1.c0)%(vt1.c0)))), (((vt0.c0 IN ())) BETWEEN (vt0.c0) AND (vt1.c0 COLLATE RTRIM)), CAST(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END AS NUMERIC) DESC;
SELECT COUNT(*) FROM vt1, t0 WHERE ((((((((((t0.c84 IN ()))OR(((t0.c81)>(t0.c48)))))OR((vt1.c0 IN ()))))OR(((t0.c84) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((t0.c52) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((((((((t0.c84 IN ()))OR(((t0.c81)>(t0.c48)))))OR((vt1.c0 IN ()))))OR(((t0.c84) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((t0.c52) ISNULL)))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE ((((((((((t0.c84 IN ()))OR(((t0.c81)>(t0.c48)))))OR((vt1.c0 IN ()))))OR(((t0.c84) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((t0.c52) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((((((((t0.c84 IN ()))OR(((t0.c81)>(t0.c48)))))OR((vt1.c0 IN ()))))OR(((t0.c84) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((t0.c52) ISNULL)))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE ((((((((((t0.c84 IN ()))OR(((t0.c81)>(t0.c48)))))OR((vt1.c0 IN ()))))OR(((t0.c84) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((t0.c52) ISNULL))));
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c2 THEN t1.c0 WHEN t1.c1 THEN t1.c2 END)AND('0.05854152627960929')));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c2 THEN t1.c0 WHEN t1.c1 THEN t1.c2 END)AND('0.05854152627960929'))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c2 THEN t1.c0 WHEN t1.c1 THEN t1.c2 END)AND('0.05854152627960929')));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c2 THEN t1.c0 WHEN t1.c1 THEN t1.c2 END)AND('0.05854152627960929'))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c2 THEN t1.c0 WHEN t1.c1 THEN t1.c2 END)AND('0.05854152627960929')));
SELECT COUNT(*) FROM t1 WHERE (((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c1))) IN ((t1.c1 IN ())))) ORDER BY ((QUOTE(t1.c0)) NOTNULL) ASC, (((CAST(t1.c2 AS BLOB)))>=((((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c1))) IN ((t1.c1 IN ())))) IS TRUE)  as count FROM t1 ORDER BY ((QUOTE(t1.c0)) NOTNULL) ASC, (((CAST(t1.c2 AS BLOB)))>=((((t1.c1) BETWEEN (t1.c0) AND (t1.c0))))));
SELECT COUNT(*) FROM t1 WHERE (((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c1))) IN ((t1.c1 IN ())))) ORDER BY ((QUOTE(t1.c0)) NOTNULL) ASC, (((CAST(t1.c2 AS BLOB)))>=((((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c1))) IN ((t1.c1 IN ())))) IS TRUE)  as count FROM t1 ORDER BY ((QUOTE(t1.c0)) NOTNULL) ASC, (((CAST(t1.c2 AS BLOB)))>=((((t1.c1) BETWEEN (t1.c0) AND (t1.c0))))));
SELECT COUNT(*) FROM t1 WHERE (((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c1))) IN ((t1.c1 IN ())))) ORDER BY ((QUOTE(t1.c0)) NOTNULL) ASC, (((CAST(t1.c2 AS BLOB)))>=((((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (CAST(CASE WHEN t1.c0 THEN t1.c1 END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t1.c0 THEN t1.c1 END AS BLOB)) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (CAST(CASE WHEN t1.c0 THEN t1.c1 END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t1.c0 THEN t1.c1 END AS BLOB)) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (CAST(CASE WHEN t1.c0 THEN t1.c1 END AS BLOB));
SELECT COUNT(*) FROM vt1, t1 WHERE (json(HEX(DISTINCT t1.c2)));
SELECT SUM(count) FROM (SELECT ((json(HEX(DISTINCT t1.c2))) IS TRUE)  as count FROM vt1, t1);
SELECT COUNT(*) FROM vt1, t1 WHERE (json(HEX(DISTINCT t1.c2)));
SELECT SUM(count) FROM (SELECT ((json(HEX(DISTINCT t1.c2))) IS TRUE)  as count FROM vt1, t1);
SELECT ALL COUNT(*) FROM t0, vt1, vt0, t1 WHERE (t1.c0) ORDER BY (+ ((vt1.c0 IN ()))) ASC, t0.c41  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t0, vt1, vt0, t1 ORDER BY (+ ((vt1.c0 IN ()))) ASC, t0.c41  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0, t1 WHERE (t1.c0) ORDER BY (+ ((vt1.c0 IN ()))) ASC, t0.c41  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t0, vt1, vt0, t1 ORDER BY (+ ((vt1.c0 IN ()))) ASC, t0.c41  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0, t1 WHERE (t1.c0) ORDER BY (+ ((vt1.c0 IN ()))) ASC, t0.c41  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((x'')AND(t0.c81)))OR(t0.c52)), (((t0.c84)) BETWEEN ((t0.c52)) AND ((t0.c52))), ((((((((t0.c84)OR(t0.c81)))OR(t0.c48)))AND(t0.c52)))AND(t0.c84))))>=(((- (t0.c52)), CAST(t0.c41 AS TEXT), t0.c81))));
SELECT SUM(count) FROM (SELECT (((((((((x'')AND(t0.c81)))OR(t0.c52)), (((t0.c84)) BETWEEN ((t0.c52)) AND ((t0.c52))), ((((((((t0.c84)OR(t0.c81)))OR(t0.c48)))AND(t0.c52)))AND(t0.c84))))>=(((- (t0.c52)), CAST(t0.c41 AS TEXT), t0.c81)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((x'')AND(t0.c81)))OR(t0.c52)), (((t0.c84)) BETWEEN ((t0.c52)) AND ((t0.c52))), ((((((((t0.c84)OR(t0.c81)))OR(t0.c48)))AND(t0.c52)))AND(t0.c84))))>=(((- (t0.c52)), CAST(t0.c41 AS TEXT), t0.c81))));
SELECT SUM(count) FROM (SELECT (((((((((x'')AND(t0.c81)))OR(t0.c52)), (((t0.c84)) BETWEEN ((t0.c52)) AND ((t0.c52))), ((((((((t0.c84)OR(t0.c81)))OR(t0.c48)))AND(t0.c52)))AND(t0.c84))))>=(((- (t0.c52)), CAST(t0.c41 AS TEXT), t0.c81)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((x'')AND(t0.c81)))OR(t0.c52)), (((t0.c84)) BETWEEN ((t0.c52)) AND ((t0.c52))), ((((((((t0.c84)OR(t0.c81)))OR(t0.c48)))AND(t0.c52)))AND(t0.c84))))>=(((- (t0.c52)), CAST(t0.c41 AS TEXT), t0.c81))));
SELECT COUNT(*) FROM t1, t0, vt0, vt1 WHERE (CAST(((t0.c52) NOT NULL) AS INTEGER)) ORDER BY ((t1.c1)IS NOT(t0.c81)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c52) NOT NULL) AS INTEGER)) IS TRUE)  as count FROM t1, t0, vt0, vt1 ORDER BY ((t1.c1)IS NOT(t0.c81)) COLLATE RTRIM DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, t0, vt0, vt1 WHERE (CAST(((t0.c52) NOT NULL) AS INTEGER)) ORDER BY ((t1.c1)IS NOT(t0.c81)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c52) NOT NULL) AS INTEGER)) IS TRUE)  as count FROM t1, t0, vt0, vt1 ORDER BY ((t1.c1)IS NOT(t0.c81)) COLLATE RTRIM DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, t0, vt0, vt1 WHERE (CAST(((t0.c52) NOT NULL) AS INTEGER)) ORDER BY ((t1.c1)IS NOT(t0.c81)) COLLATE RTRIM DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, t0 WHERE (((((t0.c48 COLLATE NOCASE)OR((('') NOTNULL))))AND(0Xffffffffc262b2a6)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c48 COLLATE NOCASE)OR((('') NOTNULL))))AND(0xffffffffc262b2a6))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((t0.c48 COLLATE NOCASE)OR((('') NOTNULL))))AND(0Xffffffffc262b2a6)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c48 COLLATE NOCASE)OR((('') NOTNULL))))AND(0xffffffffc262b2a6))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((t0.c48 COLLATE NOCASE)OR((('') NOTNULL))))AND(0Xffffffffc262b2a6)));
SELECT * FROM t0 WHERE ((((((t0.c84)OR(t0.c52)))OR(0.88534248298443)) IN ())) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c84)OR(t0.c52)))OR(0.88534248298443)) IN ())) IS TRUE)  as count FROM t0 ORDER BY x'' ASC  NULLS FIRST);
SELECT * FROM t0 WHERE ((((((t0.c84)OR(t0.c52)))OR(0.88534248298443)) IN ())) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c84)OR(t0.c52)))OR(0.88534248298443)) IN ())) IS TRUE)  as count FROM t0 ORDER BY x'' ASC  NULLS FIRST);
SELECT * FROM t0 WHERE ((((((t0.c84)OR(t0.c52)))OR(0.88534248298443)) IN ())) ORDER BY x'' ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (CAST(NULL AS INTEGER)) ORDER BY LIKELY(DISTINCT ((t0.c41) ISNULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY LIKELY(DISTINCT ((t0.c41) ISNULL)) DESC);
SELECT ALL * FROM t0 WHERE (CAST(NULL AS INTEGER)) ORDER BY LIKELY(DISTINCT ((t0.c41) ISNULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY LIKELY(DISTINCT ((t0.c41) ISNULL)) DESC);
SELECT ALL * FROM t0 WHERE (CAST(NULL AS INTEGER)) ORDER BY LIKELY(DISTINCT ((t0.c41) ISNULL)) DESC;
SELECT ALL * FROM t0, vt1, vt0, t1 WHERE (CAST(((0.32012594873342515) NOT BETWEEN (vt0.c0) AND (t0.c81)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((0.32012594873342515) NOT BETWEEN (vt0.c0) AND (t0.c81)) AS REAL)) IS TRUE)  as count FROM t0, vt1, vt0, t1);
SELECT ALL * FROM t0, vt1, vt0, t1 WHERE (CAST(((0.32012594873342515) NOT BETWEEN (vt0.c0) AND (t0.c81)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((0.32012594873342515) NOT BETWEEN (vt0.c0) AND (t0.c81)) AS REAL)) IS TRUE)  as count FROM t0, vt1, vt0, t1);
SELECT ALL * FROM t0, vt1, vt0, t1 WHERE (CAST(((0.32012594873342515) NOT BETWEEN (vt0.c0) AND (t0.c81)) AS REAL));
SELECT COUNT(*) FROM vt1, t0 WHERE ((CAST(t0.c81 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(t0.c81 AS REAL) IN ())) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE ((CAST(t0.c81 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(t0.c81 AS REAL) IN ())) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE ((CAST(t0.c81 AS REAL) IN ()));
SELECT * FROM t0, vt1 WHERE (((((t0.c41 COLLATE BINARY)AND(CAST(x'e044' AS REAL))))OR(((t0.c81)AND(t0.c84))))) ORDER BY CASE ((t0.c48) NOT BETWEEN (t0.c81) AND (t0.c84))  WHEN (((t0.c84))>((t0.c41))) THEN t0.c52 COLLATE RTRIM END  NULLS LAST, (- (CASE t0.c52  WHEN t0.c48 THEN t0.c52 END)), -1.993211205E9;
SELECT SUM(count) FROM (SELECT ((((((t0.c41 COLLATE BINARY)AND(CAST(x'e044' AS REAL))))OR(((t0.c81)AND(t0.c84))))) IS TRUE)  as count FROM t0, vt1 ORDER BY CASE ((t0.c48) NOT BETWEEN (t0.c81) AND (t0.c84))  WHEN (((t0.c84))>((t0.c41))) THEN t0.c52 COLLATE RTRIM END  NULLS LAST, (- (CASE t0.c52  WHEN t0.c48 THEN t0.c52 END)), -1.993211205E9);
SELECT * FROM t0, vt1 WHERE (((((t0.c41 COLLATE BINARY)AND(CAST(x'e044' AS REAL))))OR(((t0.c81)AND(t0.c84))))) ORDER BY CASE ((t0.c48) NOT BETWEEN (t0.c81) AND (t0.c84))  WHEN (((t0.c84))>((t0.c41))) THEN t0.c52 COLLATE RTRIM END  NULLS LAST, (- (CASE t0.c52  WHEN t0.c48 THEN t0.c52 END)), -1.993211205E9;
SELECT SUM(count) FROM (SELECT ((((((t0.c41 COLLATE BINARY)AND(CAST(x'e044' AS REAL))))OR(((t0.c81)AND(t0.c84))))) IS TRUE)  as count FROM t0, vt1 ORDER BY CASE ((t0.c48) NOT BETWEEN (t0.c81) AND (t0.c84))  WHEN (((t0.c84))>((t0.c41))) THEN t0.c52 COLLATE RTRIM END  NULLS LAST, (- (CASE t0.c52  WHEN t0.c48 THEN t0.c52 END)), -1.993211205E9);
SELECT * FROM t0, vt1 WHERE (((((t0.c41 COLLATE BINARY)AND(CAST(x'e044' AS REAL))))OR(((t0.c81)AND(t0.c84))))) ORDER BY CASE ((t0.c48) NOT BETWEEN (t0.c81) AND (t0.c84))  WHEN (((t0.c84))>((t0.c41))) THEN t0.c52 COLLATE RTRIM END  NULLS LAST, (- (CASE t0.c52  WHEN t0.c48 THEN t0.c52 END)), -1.993211205E9;
SELECT COUNT(*) FROM t0 WHERE (((((0X2ea6737)AND((t0.c41 IN ()))))OR(((t0.c84)>(t0.c41)))));
SELECT SUM(count) FROM (SELECT ALL ((((((0x2ea6737)AND((t0.c41 IN ()))))OR(((t0.c84)>(t0.c41))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((0X2ea6737)AND((t0.c41 IN ()))))OR(((t0.c84)>(t0.c41)))));
SELECT SUM(count) FROM (SELECT ALL ((((((0x2ea6737)AND((t0.c41 IN ()))))OR(((t0.c84)>(t0.c41))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((0X2ea6737)AND((t0.c41 IN ()))))OR(((t0.c84)>(t0.c41)))));
SELECT ALL * FROM vt1, t0, vt0 NOT INDEXED WHERE (CASE WHEN CAST(t0.c41 AS REAL) THEN (t0.c84 IN ()) WHEN CASE WHEN 0.9063208534108188 THEN t0.c84 ELSE t0.c52 END THEN (0.4438910088207261 IN ()) WHEN ((t0.c48)AND(t0.c52)) THEN ((t0.c84)<=(vt0.c0)) END) ORDER BY CASE WHEN SQLITE_VERSION() THEN t0.c41 COLLATE BINARY END;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(t0.c41 AS REAL) THEN (t0.c84 IN ()) WHEN CASE WHEN 0.9063208534108188 THEN t0.c84 ELSE t0.c52 END THEN (0.4438910088207261 IN ()) WHEN ((t0.c48)AND(t0.c52)) THEN ((t0.c84)<=(vt0.c0)) END) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY CASE WHEN SQLITE_VERSION() THEN t0.c41 COLLATE BINARY END);
SELECT ALL * FROM vt1, t0, vt0 NOT INDEXED WHERE (CASE WHEN CAST(t0.c41 AS REAL) THEN (t0.c84 IN ()) WHEN CASE WHEN 0.9063208534108188 THEN t0.c84 ELSE t0.c52 END THEN (0.4438910088207261 IN ()) WHEN ((t0.c48)AND(t0.c52)) THEN ((t0.c84)<=(vt0.c0)) END) ORDER BY CASE WHEN SQLITE_VERSION() THEN t0.c41 COLLATE BINARY END;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(t0.c41 AS REAL) THEN (t0.c84 IN ()) WHEN CASE WHEN 0.9063208534108188 THEN t0.c84 ELSE t0.c52 END THEN (0.4438910088207261 IN ()) WHEN ((t0.c48)AND(t0.c52)) THEN ((t0.c84)<=(vt0.c0)) END) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY CASE WHEN SQLITE_VERSION() THEN t0.c41 COLLATE BINARY END);
SELECT ALL * FROM vt1, t0, vt0 NOT INDEXED WHERE (CASE WHEN CAST(t0.c41 AS REAL) THEN (t0.c84 IN ()) WHEN CASE WHEN 0.9063208534108188 THEN t0.c84 ELSE t0.c52 END THEN (0.4438910088207261 IN ()) WHEN ((t0.c48)AND(t0.c52)) THEN ((t0.c84)<=(vt0.c0)) END) ORDER BY CASE WHEN SQLITE_VERSION() THEN t0.c41 COLLATE BINARY END;
SELECT ALL COUNT(*) FROM t1, vt0 FULL OUTER JOIN t0 ON ((x'')AND(((((t0.c81)AND(t0.c81)))OR(t1.c2)))) INNER JOIN vt1 ON json_type(((t1.c1) NOTNULL)) WHERE (((((x'')>=(t0.c81))) BETWEEN ((((t0.c81))>=((t1.c1)))) AND (((((t1.c0)OR(t0.c41)))AND(t0.c81))))) ORDER BY (((((('')|(t0.c48)))AND(((t0.c84)/(t0.c81)))))AND(((((t0.c41)OR(0.6271765037083576)))OR(t0.c52))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')>=(t0.c81))) BETWEEN ((((t0.c81))>=((t1.c1)))) AND (((((t1.c0)OR(t0.c41)))AND(t0.c81))))) IS TRUE)  as count FROM t1, vt0 FULL OUTER JOIN t0 ON ((x'')AND(((((t0.c81)AND(t0.c81)))OR(t1.c2)))) INNER JOIN vt1 ON json_type(((t1.c1) NOTNULL)) ORDER BY (((((('')|(t0.c48)))AND(((t0.c84)/(t0.c81)))))AND(((((t0.c41)OR(0.6271765037083576)))OR(t0.c52))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt0 FULL OUTER JOIN t0 ON ((x'')AND(((((t0.c81)AND(t0.c81)))OR(t1.c2)))) INNER JOIN vt1 ON json_type(((t1.c1) NOTNULL)) WHERE (((((x'')>=(t0.c81))) BETWEEN ((((t0.c81))>=((t1.c1)))) AND (((((t1.c0)OR(t0.c41)))AND(t0.c81))))) ORDER BY (((((('')|(t0.c48)))AND(((t0.c84)/(t0.c81)))))AND(((((t0.c41)OR(0.6271765037083576)))OR(t0.c52))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')>=(t0.c81))) BETWEEN ((((t0.c81))>=((t1.c1)))) AND (((((t1.c0)OR(t0.c41)))AND(t0.c81))))) IS TRUE)  as count FROM t1, vt0 FULL OUTER JOIN t0 ON ((x'')AND(((((t0.c81)AND(t0.c81)))OR(t1.c2)))) INNER JOIN vt1 ON json_type(((t1.c1) NOTNULL)) ORDER BY (((((('')|(t0.c48)))AND(((t0.c84)/(t0.c81)))))AND(((((t0.c41)OR(0.6271765037083576)))OR(t0.c52))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt0 FULL OUTER JOIN t0 ON ((x'')AND(((((t0.c81)AND(t0.c81)))OR(t1.c2)))) INNER JOIN vt1 ON json_type(((t1.c1) NOTNULL)) WHERE (((((x'')>=(t0.c81))) BETWEEN ((((t0.c81))>=((t1.c1)))) AND (((((t1.c0)OR(t0.c41)))AND(t0.c81))))) ORDER BY (((((('')|(t0.c48)))AND(((t0.c84)/(t0.c81)))))AND(((((t0.c41)OR(0.6271765037083576)))OR(t0.c52))))  NULLS FIRST;
SELECT * FROM t1 INNER JOIN vt0 ON CASE WHEN LIKELIHOOD(t0.c48, 0.39061385335348264) THEN CASE WHEN t0.c52 THEN t1.c1 ELSE t1.c0 END ELSE x'e5ba' END LEFT OUTER JOIN t0 ON (NOT (((t1.c0) ISNULL))) WHERE (((((((t0.c81)||(t0.c84)))AND(((t1.c1)IS NOT(t0.c81)))))OR(((t1.c1)IS NOT('-800636')))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c81)||(t0.c84)))AND(((t1.c1)IS NOT(t0.c81)))))OR(((t1.c1)IS NOT('-800636'))))) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON CASE WHEN LIKELIHOOD(t0.c48, 0.39061385335348264) THEN CASE WHEN t0.c52 THEN t1.c1 ELSE t1.c0 END ELSE x'e5ba' END LEFT OUTER JOIN t0 ON (NOT (((t1.c0) ISNULL))));
SELECT * FROM t1 INNER JOIN vt0 ON CASE WHEN LIKELIHOOD(t0.c48, 0.39061385335348264) THEN CASE WHEN t0.c52 THEN t1.c1 ELSE t1.c0 END ELSE x'e5ba' END LEFT OUTER JOIN t0 ON (NOT (((t1.c0) ISNULL))) WHERE (((((((t0.c81)||(t0.c84)))AND(((t1.c1)IS NOT(t0.c81)))))OR(((t1.c1)IS NOT('-800636')))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c81)||(t0.c84)))AND(((t1.c1)IS NOT(t0.c81)))))OR(((t1.c1)IS NOT('-800636'))))) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON CASE WHEN LIKELIHOOD(t0.c48, 0.39061385335348264) THEN CASE WHEN t0.c52 THEN t1.c1 ELSE t1.c0 END ELSE x'e5ba' END LEFT OUTER JOIN t0 ON (NOT (((t1.c0) ISNULL))));
SELECT * FROM t1 INNER JOIN vt0 ON CASE WHEN LIKELIHOOD(t0.c48, 0.39061385335348264) THEN CASE WHEN t0.c52 THEN t1.c1 ELSE t1.c0 END ELSE x'e5ba' END LEFT OUTER JOIN t0 ON (NOT (((t1.c0) ISNULL))) WHERE (((((((t0.c81)||(t0.c84)))AND(((t1.c1)IS NOT(t0.c81)))))OR(((t1.c1)IS NOT('-800636')))));
SELECT COUNT(*) FROM vt1 WHERE (((((NULL) NOT BETWEEN (vt1.c0) AND ('-1993121308'))) BETWEEN (vt1.c0 COLLATE BINARY) AND (((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) NOT BETWEEN (vt1.c0) AND ('-1993121308'))) BETWEEN (vt1.c0 COLLATE BINARY) AND (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((NULL) NOT BETWEEN (vt1.c0) AND ('-1993121308'))) BETWEEN (vt1.c0 COLLATE BINARY) AND (((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) NOT BETWEEN (vt1.c0) AND ('-1993121308'))) BETWEEN (vt1.c0 COLLATE BINARY) AND (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((NULL) NOT BETWEEN (vt1.c0) AND ('-1993121308'))) BETWEEN (vt1.c0 COLLATE BINARY) AND (((vt1.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM vt0, t1, t0, vt1 WHERE (CAST(CAST(t1.c0 AS NUMERIC) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t1.c0 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM vt0, t1, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t1, t0, vt1 WHERE (CAST(CAST(t1.c0 AS NUMERIC) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t1.c0 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM vt0, t1, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t1, t0, vt1 WHERE (CAST(CAST(t1.c0 AS NUMERIC) AS TEXT));
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (NULLIF(DISTINCT ((vt1.c0)<=(vt1.c0)), CAST(t1.c2 AS TEXT))) ORDER BY (NOT ((((x''))<=((t1.c1))))) ASC, ((((t1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((t1.c1) NOTNULL)) AND (CAST('' AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((vt1.c0)<=(vt1.c0)), CAST(t1.c2 AS TEXT))) IS TRUE)  as count FROM vt1, t1 ORDER BY (NOT ((((x''))<=((t1.c1))))) ASC, ((((t1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((t1.c1) NOTNULL)) AND (CAST('' AS INTEGER)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (NULLIF(DISTINCT ((vt1.c0)<=(vt1.c0)), CAST(t1.c2 AS TEXT))) ORDER BY (NOT ((((x''))<=((t1.c1))))) ASC, ((((t1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((t1.c1) NOTNULL)) AND (CAST('' AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((vt1.c0)<=(vt1.c0)), CAST(t1.c2 AS TEXT))) IS TRUE)  as count FROM vt1, t1 ORDER BY (NOT ((((x''))<=((t1.c1))))) ASC, ((((t1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((t1.c1) NOTNULL)) AND (CAST('' AS INTEGER)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (NULLIF(DISTINCT ((vt1.c0)<=(vt1.c0)), CAST(t1.c2 AS TEXT))) ORDER BY (NOT ((((x''))<=((t1.c1))))) ASC, ((((t1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((t1.c1) NOTNULL)) AND (CAST('' AS INTEGER)))  NULLS FIRST;
SELECT COUNT(*) FROM t1 CROSS JOIN vt1 ON ((t0.c48)|(t0.c84)) COLLATE RTRIM FULL OUTER JOIN t0 ON ((((-9.84466748E8) BETWEEN (t0.c52) AND (t0.c84)))%((t0.c81 IN ()))) LEFT OUTER JOIN vt0 ON (((t1.c0)LIKE(vt0.c0)) IN ()) WHERE (((((t0.c48)%(vt1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c48)%(vt1.c0))) IS TRUE)) IS TRUE)  as count FROM t1 CROSS JOIN vt1 ON ((t0.c48)|(t0.c84)) COLLATE RTRIM FULL OUTER JOIN t0 ON ((((-9.84466748E8) BETWEEN (t0.c52) AND (t0.c84)))%((t0.c81 IN ()))) LEFT OUTER JOIN vt0 ON (((t1.c0)LIKE(vt0.c0)) IN ()));
SELECT COUNT(*) FROM t1 CROSS JOIN vt1 ON ((t0.c48)|(t0.c84)) COLLATE RTRIM FULL OUTER JOIN t0 ON ((((-9.84466748E8) BETWEEN (t0.c52) AND (t0.c84)))%((t0.c81 IN ()))) LEFT OUTER JOIN vt0 ON (((t1.c0)LIKE(vt0.c0)) IN ()) WHERE (((((t0.c48)%(vt1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c48)%(vt1.c0))) IS TRUE)) IS TRUE)  as count FROM t1 CROSS JOIN vt1 ON ((t0.c48)|(t0.c84)) COLLATE RTRIM FULL OUTER JOIN t0 ON ((((-9.84466748E8) BETWEEN (t0.c52) AND (t0.c84)))%((t0.c81 IN ()))) LEFT OUTER JOIN vt0 ON (((t1.c0)LIKE(vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE (x'b308d37e');
SELECT SUM(count) FROM (SELECT ALL ((x'b308d37e') IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (x'b308d37e');
SELECT SUM(count) FROM (SELECT ALL ((x'b308d37e') IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (x'b308d37e');
SELECT ALL * FROM vt1, vt0 LEFT OUTER JOIN t1 ON ((t0.c84) BETWEEN ('') AND ('Ks')) COLLATE RTRIM RIGHT OUTER JOIN t0 ON (((t0.c41)) BETWEEN ((ABS(t0.c48))) AND ((t1.c2))) WHERE ((+ (CASE ''  WHEN '0.8397314836888559' THEN t1.c0 ELSE t0.c81 END))) ORDER BY CASE WHEN ((t0.c84)>(t0.c81)) THEN ((((((((vt1.c0)OR(t0.c48)))OR(vt1.c0)))AND(t0.c84)))OR(t0.c41)) ELSE (t0.c48 IN ()) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE ''  WHEN '0.8397314836888559' THEN t1.c0 ELSE t0.c81 END))) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN t1 ON ((t0.c84) BETWEEN ('') AND ('Ks')) COLLATE RTRIM RIGHT OUTER JOIN t0 ON (((t0.c41)) BETWEEN ((ABS(t0.c48))) AND ((t1.c2))) ORDER BY CASE WHEN ((t0.c84)>(t0.c81)) THEN ((((((((vt1.c0)OR(t0.c48)))OR(vt1.c0)))AND(t0.c84)))OR(t0.c41)) ELSE (t0.c48 IN ()) END ASC  NULLS LAST);
SELECT ALL * FROM vt1, vt0 LEFT OUTER JOIN t1 ON ((t0.c84) BETWEEN ('') AND ('Ks')) COLLATE RTRIM RIGHT OUTER JOIN t0 ON (((t0.c41)) BETWEEN ((ABS(t0.c48))) AND ((t1.c2))) WHERE ((+ (CASE ''  WHEN '0.8397314836888559' THEN t1.c0 ELSE t0.c81 END))) ORDER BY CASE WHEN ((t0.c84)>(t0.c81)) THEN ((((((((vt1.c0)OR(t0.c48)))OR(vt1.c0)))AND(t0.c84)))OR(t0.c41)) ELSE (t0.c48 IN ()) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE ''  WHEN '0.8397314836888559' THEN t1.c0 ELSE t0.c81 END))) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN t1 ON ((t0.c84) BETWEEN ('') AND ('Ks')) COLLATE RTRIM RIGHT OUTER JOIN t0 ON (((t0.c41)) BETWEEN ((ABS(t0.c48))) AND ((t1.c2))) ORDER BY CASE WHEN ((t0.c84)>(t0.c81)) THEN ((((((((vt1.c0)OR(t0.c48)))OR(vt1.c0)))AND(t0.c84)))OR(t0.c41)) ELSE (t0.c48 IN ()) END ASC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (CAST((((-535985936, vt1.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))) AS TEXT)) ORDER BY CASE WHEN vt1.c0 THEN 0.37875023047294876 WHEN (((vt1.c0, vt0.c0, 1935452978, vt0.c0, vt0.c0))<=((vt1.c0, vt1.c0, vt0.c0, vt0.c0, vt0.c0))) THEN (((vt1.c0))==((vt1.c0))) WHEN 0xffffffffe597514e THEN ((vt1.c0)<=(vt1.c0)) ELSE CAST(vt0.c0 AS TEXT) END;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((-535985936, vt1.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0))) AS TEXT)) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN vt1.c0 THEN 0.37875023047294876 WHEN (((vt1.c0, vt0.c0, 1935452978, vt0.c0, vt0.c0))<=((vt1.c0, vt1.c0, vt0.c0, vt0.c0, vt0.c0))) THEN (((vt1.c0))=((vt1.c0))) WHEN 0xffffffffe597514e THEN ((vt1.c0)<=(vt1.c0)) ELSE CAST(vt0.c0 AS TEXT) END);
SELECT * FROM vt1, vt0 WHERE (CAST((((-535985936, vt1.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))) AS TEXT)) ORDER BY CASE WHEN vt1.c0 THEN 0.37875023047294876 WHEN (((vt1.c0, vt0.c0, 1935452978, vt0.c0, vt0.c0))<=((vt1.c0, vt1.c0, vt0.c0, vt0.c0, vt0.c0))) THEN (((vt1.c0))==((vt1.c0))) WHEN 0xffffffffe597514e THEN ((vt1.c0)<=(vt1.c0)) ELSE CAST(vt0.c0 AS TEXT) END;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((-535985936, vt1.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0))) AS TEXT)) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN vt1.c0 THEN 0.37875023047294876 WHEN (((vt1.c0, vt0.c0, 1935452978, vt0.c0, vt0.c0))<=((vt1.c0, vt1.c0, vt0.c0, vt0.c0, vt0.c0))) THEN (((vt1.c0))=((vt1.c0))) WHEN 0xffffffffe597514e THEN ((vt1.c0)<=(vt1.c0)) ELSE CAST(vt0.c0 AS TEXT) END);
SELECT * FROM vt1, vt0 WHERE (CAST((((-535985936, vt1.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))) AS TEXT)) ORDER BY CASE WHEN vt1.c0 THEN 0.37875023047294876 WHEN (((vt1.c0, vt0.c0, 1935452978, vt0.c0, vt0.c0))<=((vt1.c0, vt1.c0, vt0.c0, vt0.c0, vt0.c0))) THEN (((vt1.c0))==((vt1.c0))) WHEN 0xffffffffe597514e THEN ((vt1.c0)<=(vt1.c0)) ELSE CAST(vt0.c0 AS TEXT) END;
SELECT COUNT(*) FROM t0, t1, vt0 WHERE ((((0.6847409943210296 IN ()))<<(((vt0.c0)/(t1.c1))))) ORDER BY ((CASE WHEN 2.26533562E8 THEN t1.c1 END) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((t1.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL (((((0.6847409943210296 IN ()))<<(((vt0.c0)/(t1.c1))))) IS TRUE)  as count FROM t0, t1, vt0 ORDER BY ((CASE WHEN 2.26533562E8 THEN t1.c1 END) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((t1.c1) NOTNULL))));
SELECT COUNT(*) FROM t0, t1, vt0 WHERE ((((0.6847409943210296 IN ()))<<(((vt0.c0)/(t1.c1))))) ORDER BY ((CASE WHEN 2.26533562E8 THEN t1.c1 END) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((t1.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL (((((0.6847409943210296 IN ()))<<(((vt0.c0)/(t1.c1))))) IS TRUE)  as count FROM t0, t1, vt0 ORDER BY ((CASE WHEN 2.26533562E8 THEN t1.c1 END) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((t1.c1) NOTNULL))));
SELECT COUNT(*) FROM t0, t1, vt0 WHERE ((((0.6847409943210296 IN ()))<<(((vt0.c0)/(t1.c1))))) ORDER BY ((CASE WHEN 2.26533562E8 THEN t1.c1 END) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((t1.c1) NOTNULL)));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((((t0.c48)!=(t0.c41)))IS NOT(((t1.c2) NOT NULL))) INNER JOIN vt1 ON HEX((- (t0.c52))) RIGHT OUTER JOIN t1 ON (json_object(t0.c52, t0.c48, vt1.c0, t0.c52) IN (t0.c52)) WHERE (rtreenode(json(t1.c0), (('-1300828544') NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(json(t1.c0), (('-1300828544') NOT NULL))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((((t0.c48)!=(t0.c41)))IS NOT(((t1.c2) NOT NULL))) INNER JOIN vt1 ON HEX((- (t0.c52))) RIGHT OUTER JOIN t1 ON (json_object(t0.c52, t0.c48, vt1.c0, t0.c52) IN (t0.c52)));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((((t0.c48)!=(t0.c41)))IS NOT(((t1.c2) NOT NULL))) INNER JOIN vt1 ON HEX((- (t0.c52))) RIGHT OUTER JOIN t1 ON (json_object(t0.c52, t0.c48, vt1.c0, t0.c52) IN (t0.c52)) WHERE (rtreenode(json(t1.c0), (('-1300828544') NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(json(t1.c0), (('-1300828544') NOT NULL))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((((t0.c48)!=(t0.c41)))IS NOT(((t1.c2) NOT NULL))) INNER JOIN vt1 ON HEX((- (t0.c52))) RIGHT OUTER JOIN t1 ON (json_object(t0.c52, t0.c48, vt1.c0, t0.c52) IN (t0.c52)));
SELECT * FROM t0, t1, vt1 WHERE (((((((t0.c81)LIKE(t0.c41)))OR((t1.c0 IN (t1.c2)))))AND(CASE WHEN t0.c48 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c81)LIKE(t0.c41)))OR((t1.c0 IN (t1.c2)))))AND(CASE WHEN t0.c48 THEN vt1.c0 END))) IS TRUE)  as count FROM t0, t1, vt1);
SELECT * FROM t0, t1, vt1 WHERE (((((((t0.c81)LIKE(t0.c41)))OR((t1.c0 IN (t1.c2)))))AND(CASE WHEN t0.c48 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c81)LIKE(t0.c41)))OR((t1.c0 IN (t1.c2)))))AND(CASE WHEN t0.c48 THEN vt1.c0 END))) IS TRUE)  as count FROM t0, t1, vt1);
SELECT * FROM t0, t1, vt1 WHERE (((((((t0.c81)LIKE(t0.c41)))OR((t1.c0 IN (t1.c2)))))AND(CASE WHEN t0.c48 THEN vt1.c0 END)));
SELECT COUNT(*) FROM vt1 INDEXED BY i32 WHERE ((((CASE vt1.c0  WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))<>((HEX(DISTINCT vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE vt1.c0  WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))!=((HEX(DISTINCT vt1.c0))))) IS TRUE)  as count FROM vt1 INDEXED BY i32);
SELECT COUNT(*) FROM vt1 INDEXED BY i32 WHERE ((((CASE vt1.c0  WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))<>((HEX(DISTINCT vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE vt1.c0  WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))!=((HEX(DISTINCT vt1.c0))))) IS TRUE)  as count FROM vt1 INDEXED BY i32);
SELECT ALL * FROM vt1, t1, vt0, t0 WHERE (CASE CASE vt1.c0  WHEN '808442372' THEN t0.c84 WHEN vt1.c0 THEN t1.c0 WHEN t0.c48 THEN t0.c84 ELSE t0.c84 END  WHEN ((t1.c0) BETWEEN (t1.c1) AND (t0.c48)) THEN t0.c41 COLLATE NOCASE ELSE ((t0.c84) IS FALSE) END) ORDER BY ((((t1.c0)*(t1.c0)))AND(CASE WHEN t0.c84 THEN t0.c84 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt1.c0  WHEN '808442372' THEN t0.c84 WHEN vt1.c0 THEN t1.c0 WHEN t0.c48 THEN t0.c84 ELSE t0.c84 END  WHEN ((t1.c0) BETWEEN (t1.c1) AND (t0.c48)) THEN t0.c41 COLLATE NOCASE ELSE ((t0.c84) IS FALSE) END) IS TRUE)  as count FROM vt1, t1, vt0, t0 ORDER BY ((((t1.c0)*(t1.c0)))AND(CASE WHEN t0.c84 THEN t0.c84 END))  NULLS FIRST);
SELECT ALL * FROM vt1, t1, vt0, t0 WHERE (CASE CASE vt1.c0  WHEN '808442372' THEN t0.c84 WHEN vt1.c0 THEN t1.c0 WHEN t0.c48 THEN t0.c84 ELSE t0.c84 END  WHEN ((t1.c0) BETWEEN (t1.c1) AND (t0.c48)) THEN t0.c41 COLLATE NOCASE ELSE ((t0.c84) IS FALSE) END) ORDER BY ((((t1.c0)*(t1.c0)))AND(CASE WHEN t0.c84 THEN t0.c84 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt1.c0  WHEN '808442372' THEN t0.c84 WHEN vt1.c0 THEN t1.c0 WHEN t0.c48 THEN t0.c84 ELSE t0.c84 END  WHEN ((t1.c0) BETWEEN (t1.c1) AND (t0.c48)) THEN t0.c41 COLLATE NOCASE ELSE ((t0.c84) IS FALSE) END) IS TRUE)  as count FROM vt1, t1, vt0, t0 ORDER BY ((((t1.c0)*(t1.c0)))AND(CASE WHEN t0.c84 THEN t0.c84 END))  NULLS FIRST);
SELECT ALL * FROM vt1, t1, vt0, t0 WHERE (CASE CASE vt1.c0  WHEN '808442372' THEN t0.c84 WHEN vt1.c0 THEN t1.c0 WHEN t0.c48 THEN t0.c84 ELSE t0.c84 END  WHEN ((t1.c0) BETWEEN (t1.c1) AND (t0.c48)) THEN t0.c41 COLLATE NOCASE ELSE ((t0.c84) IS FALSE) END) ORDER BY ((((t1.c0)*(t1.c0)))AND(CASE WHEN t0.c84 THEN t0.c84 END))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, vt0 NOT INDEXED WHERE (((t1.c1 COLLATE BINARY) NOT BETWEEN (CASE '2020511679'  WHEN t1.c2 THEN vt0.c0 ELSE vt0.c0 END) AND (json_patch(t1.c1, t1.c1)))) ORDER BY (~ (((t1.c0) NOT BETWEEN (t1.c0) AND (-671779826)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t1.c1 COLLATE BINARY) NOT BETWEEN (CASE '2020511679'  WHEN t1.c2 THEN vt0.c0 ELSE vt0.c0 END) AND (json_patch(t1.c1, t1.c1)))) IS TRUE)  as count FROM t1, vt0 NOT INDEXED ORDER BY (~ (((t1.c0) NOT BETWEEN (t1.c0) AND (-671779826)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt0 NOT INDEXED WHERE (((t1.c1 COLLATE BINARY) NOT BETWEEN (CASE '2020511679'  WHEN t1.c2 THEN vt0.c0 ELSE vt0.c0 END) AND (json_patch(t1.c1, t1.c1)))) ORDER BY (~ (((t1.c0) NOT BETWEEN (t1.c0) AND (-671779826)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t1.c1 COLLATE BINARY) NOT BETWEEN (CASE '2020511679'  WHEN t1.c2 THEN vt0.c0 ELSE vt0.c0 END) AND (json_patch(t1.c1, t1.c1)))) IS TRUE)  as count FROM t1, vt0 NOT INDEXED ORDER BY (~ (((t1.c0) NOT BETWEEN (t1.c0) AND (-671779826)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt0 NOT INDEXED WHERE (((t1.c1 COLLATE BINARY) NOT BETWEEN (CASE '2020511679'  WHEN t1.c2 THEN vt0.c0 ELSE vt0.c0 END) AND (json_patch(t1.c1, t1.c1)))) ORDER BY (~ (((t1.c0) NOT BETWEEN (t1.c0) AND (-671779826)))) DESC  NULLS FIRST;
SELECT * FROM vt1, t0, t1 CROSS JOIN vt0 ON (((((t0.c48)) NOT BETWEEN ((vt1.c0)) AND ((t0.c41))))%(CASE WHEN t0.c52 THEN t0.c84 ELSE t0.c81 END)) WHERE (CASE WHEN ((t0.c84)AND(t0.c41)) THEN t0.c41 ELSE CAST(vt1.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c84)AND(t0.c41)) THEN t0.c41 ELSE CAST(vt1.c0 AS TEXT) END) IS TRUE)  as count FROM vt1, t0, t1 CROSS JOIN vt0 ON (((((t0.c48)) NOT BETWEEN ((vt1.c0)) AND ((t0.c41))))%(CASE WHEN t0.c52 THEN t0.c84 ELSE t0.c81 END)));
SELECT * FROM vt1, t0, t1 CROSS JOIN vt0 ON (((((t0.c48)) NOT BETWEEN ((vt1.c0)) AND ((t0.c41))))%(CASE WHEN t0.c52 THEN t0.c84 ELSE t0.c81 END)) WHERE (CASE WHEN ((t0.c84)AND(t0.c41)) THEN t0.c41 ELSE CAST(vt1.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c84)AND(t0.c41)) THEN t0.c41 ELSE CAST(vt1.c0 AS TEXT) END) IS TRUE)  as count FROM vt1, t0, t1 CROSS JOIN vt0 ON (((((t0.c48)) NOT BETWEEN ((vt1.c0)) AND ((t0.c41))))%(CASE WHEN t0.c52 THEN t0.c84 ELSE t0.c81 END)));
SELECT * FROM vt1, t0, t1 CROSS JOIN vt0 ON (((((t0.c48)) NOT BETWEEN ((vt1.c0)) AND ((t0.c41))))%(CASE WHEN t0.c52 THEN t0.c84 ELSE t0.c81 END)) WHERE (CASE WHEN ((t0.c84)AND(t0.c41)) THEN t0.c41 ELSE CAST(vt1.c0 AS TEXT) END);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (CAST((((t1.c1))>=((t1.c2))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t1.c1))>=((t1.c2))) AS REAL)) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (CAST((((t1.c1))>=((t1.c2))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t1.c1))>=((t1.c2))) AS REAL)) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (CAST((((t1.c1))>=((t1.c2))) AS REAL));
SELECT * FROM vt0 WHERE ('927948778') ORDER BY (CASE WHEN vt0.c0 THEN NULL END IN ((+ (vt0.c0)), CAST(vt0.c0 AS REAL))), (NOT (CAST(vt0.c0 AS REAL))), CASE WHEN ((vt0.c0) NOTNULL) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) WHEN vt0.c0 THEN CAST(vt0.c0 AS INTEGER) WHEN (((vt0.c0))!=((vt0.c0))) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END;
SELECT SUM(count) FROM (SELECT (('927948778') IS TRUE)  as count FROM vt0 ORDER BY (CASE WHEN vt0.c0 THEN NULL END IN ((+ (vt0.c0)), CAST(vt0.c0 AS REAL))), (NOT (CAST(vt0.c0 AS REAL))), CASE WHEN ((vt0.c0) NOTNULL) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) WHEN vt0.c0 THEN CAST(vt0.c0 AS INTEGER) WHEN (((vt0.c0))!=((vt0.c0))) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT * FROM vt0 WHERE ('927948778') ORDER BY (CASE WHEN vt0.c0 THEN NULL END IN ((+ (vt0.c0)), CAST(vt0.c0 AS REAL))), (NOT (CAST(vt0.c0 AS REAL))), CASE WHEN ((vt0.c0) NOTNULL) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) WHEN vt0.c0 THEN CAST(vt0.c0 AS INTEGER) WHEN (((vt0.c0))!=((vt0.c0))) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END;
SELECT SUM(count) FROM (SELECT (('927948778') IS TRUE)  as count FROM vt0 ORDER BY (CASE WHEN vt0.c0 THEN NULL END IN ((+ (vt0.c0)), CAST(vt0.c0 AS REAL))), (NOT (CAST(vt0.c0 AS REAL))), CASE WHEN ((vt0.c0) NOTNULL) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) WHEN vt0.c0 THEN CAST(vt0.c0 AS INTEGER) WHEN (((vt0.c0))!=((vt0.c0))) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT * FROM vt0 WHERE ('927948778') ORDER BY (CASE WHEN vt0.c0 THEN NULL END IN ((+ (vt0.c0)), CAST(vt0.c0 AS REAL))), (NOT (CAST(vt0.c0 AS REAL))), CASE WHEN ((vt0.c0) NOTNULL) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) WHEN vt0.c0 THEN CAST(vt0.c0 AS INTEGER) WHEN (((vt0.c0))!=((vt0.c0))) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END;
SELECT ALL * FROM vt0 WHERE (CAST(((((((((x'')OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((x'')OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((((((((x'')OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((x'')OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((((((((x'')OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) AS TEXT));
SELECT ALL * FROM t1 WHERE ((((- (t1.c1)))|(load_extension(t1.c1)))) ORDER BY ((t1.c0 COLLATE BINARY)=(t1.c0));
SELECT SUM(count) FROM (SELECT (((((- (t1.c1)))|(load_extension(t1.c1)))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c0 COLLATE BINARY)==(t1.c0)));
SELECT ALL * FROM t1 WHERE ((((- (t1.c1)))|(load_extension(t1.c1)))) ORDER BY ((t1.c0 COLLATE BINARY)=(t1.c0));
SELECT SUM(count) FROM (SELECT (((((- (t1.c1)))|(load_extension(t1.c1)))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c0 COLLATE BINARY)==(t1.c0)));
SELECT * FROM t1, vt0 WHERE (((((t1.c2)|(t1.c2)))/((((t1.c1)) BETWEEN ((t1.c2)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((t1.c2)|(t1.c2)))/((((t1.c1)) BETWEEN ((t1.c2)) AND ((vt0.c0)))))) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (((((t1.c2)|(t1.c2)))/((((t1.c1)) BETWEEN ((t1.c2)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((t1.c2)|(t1.c2)))/((((t1.c1)) BETWEEN ((t1.c2)) AND ((vt0.c0)))))) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (((((t1.c2)|(t1.c2)))/((((t1.c1)) BETWEEN ((t1.c2)) AND ((vt0.c0))))));
SELECT COUNT(*) FROM t0 WHERE ((- ((t0.c52 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((t0.c52 IN ())))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((- ((t0.c52 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((t0.c52 IN ())))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((- ((t0.c52 IN ()))));
SELECT ALL * FROM vt0 WHERE (CASE (- (''))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (''))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE (- (''))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (''))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE (- (''))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END);
SELECT COUNT(*) FROM vt1, t1, t0 WHERE (((((t0.c48)<<(t0.c48))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t0.c48)<<(t0.c48))) IS TRUE)) IS TRUE)  as count FROM vt1, t1, t0);
SELECT COUNT(*) FROM vt1, t1, t0 WHERE (((((t0.c48)<<(t0.c48))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t0.c48)<<(t0.c48))) IS TRUE)) IS TRUE)  as count FROM vt1, t1, t0);
SELECT COUNT(*) FROM vt1, t1, t0 WHERE (((((t0.c48)<<(t0.c48))) IS TRUE));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c84) BETWEEN (t0.c41) AND (t0.c84))) NOT BETWEEN ((t0.c84 IN ())) AND (LIKELY(DISTINCT t0.c48))) WHERE ((- (((t0.c52)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c52)IS(vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c84) BETWEEN (t0.c41) AND (t0.c84))) NOT BETWEEN ((t0.c84 IN ())) AND (LIKELY(DISTINCT t0.c48))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c84) BETWEEN (t0.c41) AND (t0.c84))) NOT BETWEEN ((t0.c84 IN ())) AND (LIKELY(DISTINCT t0.c48))) WHERE ((- (((t0.c52)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c52)IS(vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c84) BETWEEN (t0.c41) AND (t0.c84))) NOT BETWEEN ((t0.c84 IN ())) AND (LIKELY(DISTINCT t0.c48))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c84) BETWEEN (t0.c41) AND (t0.c84))) NOT BETWEEN ((t0.c84 IN ())) AND (LIKELY(DISTINCT t0.c48))) WHERE ((- (((t0.c52)IS(vt0.c0)))));
SELECT * FROM vt0, t0, t1 NATURAL JOIN vt1 WHERE (CAST(UNLIKELY(DISTINCT vt0.c0) AS REAL)) ORDER BY ((((t1.c2) BETWEEN (t0.c84) AND (t0.c84)))-((NULL IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(UNLIKELY(DISTINCT vt0.c0) AS REAL)) IS TRUE)  as count FROM vt0, t0, t1 NATURAL JOIN vt1 ORDER BY ((((t1.c2) BETWEEN (t0.c84) AND (t0.c84)))-((NULL IN ()))) ASC  NULLS FIRST);
SELECT * FROM vt0, t0, t1 NATURAL JOIN vt1 WHERE (CAST(UNLIKELY(DISTINCT vt0.c0) AS REAL)) ORDER BY ((((t1.c2) BETWEEN (t0.c84) AND (t0.c84)))-((NULL IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(UNLIKELY(DISTINCT vt0.c0) AS REAL)) IS TRUE)  as count FROM vt0, t0, t1 NATURAL JOIN vt1 ORDER BY ((((t1.c2) BETWEEN (t0.c84) AND (t0.c84)))-((NULL IN ()))) ASC  NULLS FIRST);
SELECT * FROM vt0, t0, t1 NATURAL JOIN vt1 WHERE (CAST(UNLIKELY(DISTINCT vt0.c0) AS REAL)) ORDER BY ((((t1.c2) BETWEEN (t0.c84) AND (t0.c84)))-((NULL IN ()))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((7.572333087118022E-4)AND(vt0.c0)))OR(vt0.c0)) AS TEXT)) ORDER BY CAST(((vt0.c0)>(vt0.c0)) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((7.572333087118022E-4)AND(vt0.c0)))OR(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)>(vt0.c0)) AS NUMERIC) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((7.572333087118022E-4)AND(vt0.c0)))OR(vt0.c0)) AS TEXT)) ORDER BY CAST(((vt0.c0)>(vt0.c0)) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((7.572333087118022E-4)AND(vt0.c0)))OR(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)>(vt0.c0)) AS NUMERIC) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((7.572333087118022E-4)AND(vt0.c0)))OR(vt0.c0)) AS TEXT)) ORDER BY CAST(((vt0.c0)>(vt0.c0)) AS NUMERIC) DESC  NULLS LAST;
SELECT ALL * FROM t1, t0 WHERE (((((((((((((((((t0.c84)AND(t0.c84)))OR(t1.c0)))OR(t0.c84)))OR(t1.c2)))AND((((t0.c84, t0.c52, t1.c1)) BETWEEN ((t0.c52, t0.c52, '')) AND ((t0.c84, NULL, t0.c52))))))AND((((t1.c1, t1.c0, t0.c48))<=((t0.c41, t0.c84, t0.c41))))))AND(CASE WHEN t1.c1 THEN t0.c84 END)))AND((+ (t1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((t0.c84)AND(t0.c84)))OR(t1.c0)))OR(t0.c84)))OR(t1.c2)))AND((((t0.c84, t0.c52, t1.c1)) BETWEEN ((t0.c52, t0.c52, '')) AND ((t0.c84, NULL, t0.c52))))))AND((((t1.c1, t1.c0, t0.c48))<=((t0.c41, t0.c84, t0.c41))))))AND(CASE WHEN t1.c1 THEN t0.c84 END)))AND((+ (t1.c1))))) IS TRUE)  as count FROM t1, t0);
SELECT ALL * FROM t1, t0 WHERE (((((((((((((((((t0.c84)AND(t0.c84)))OR(t1.c0)))OR(t0.c84)))OR(t1.c2)))AND((((t0.c84, t0.c52, t1.c1)) BETWEEN ((t0.c52, t0.c52, '')) AND ((t0.c84, NULL, t0.c52))))))AND((((t1.c1, t1.c0, t0.c48))<=((t0.c41, t0.c84, t0.c41))))))AND(CASE WHEN t1.c1 THEN t0.c84 END)))AND((+ (t1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((t0.c84)AND(t0.c84)))OR(t1.c0)))OR(t0.c84)))OR(t1.c2)))AND((((t0.c84, t0.c52, t1.c1)) BETWEEN ((t0.c52, t0.c52, '')) AND ((t0.c84, NULL, t0.c52))))))AND((((t1.c1, t1.c0, t0.c48))<=((t0.c41, t0.c84, t0.c41))))))AND(CASE WHEN t1.c1 THEN t0.c84 END)))AND((+ (t1.c1))))) IS TRUE)  as count FROM t1, t0);
SELECT ALL * FROM t1, t0 WHERE (((((((((((((((((t0.c84)AND(t0.c84)))OR(t1.c0)))OR(t0.c84)))OR(t1.c2)))AND((((t0.c84, t0.c52, t1.c1)) BETWEEN ((t0.c52, t0.c52, '')) AND ((t0.c84, NULL, t0.c52))))))AND((((t1.c1, t1.c0, t0.c48))<=((t0.c41, t0.c84, t0.c41))))))AND(CASE WHEN t1.c1 THEN t0.c84 END)))AND((+ (t1.c1)))));
SELECT COUNT(*) FROM vt0, t0, vt1 RIGHT OUTER JOIN t1 ON 0Xffffffffaae1f7fe WHERE (LIKELY(((x'391b') BETWEEN (NULL) AND (vt1.c0)))) ORDER BY ((((((t0.c41)OR(t0.c81)))AND(t1.c1))) BETWEEN (CASE WHEN t0.c81 THEN t0.c48 END) AND (t0.c41)), (((t0.c52, t0.c48, t0.c81)) NOT BETWEEN ((((((t1.c1)AND(t0.c84)))OR(t0.c48)), CASE t1.c2  WHEN t1.c1 THEN t0.c84 END, ((((t1.c2)AND(vt0.c0)))AND(t1.c2)))) AND ((t0.c52 COLLATE RTRIM, CAST(t1.c0 AS INTEGER), CAST(t1.c2 AS INTEGER))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(((x'391b') BETWEEN (NULL) AND (vt1.c0)))) IS TRUE)  as count FROM vt0, t0, vt1 RIGHT OUTER JOIN t1 ON 0Xffffffffaae1f7fe ORDER BY ((((((t0.c41)OR(t0.c81)))AND(t1.c1))) BETWEEN (CASE WHEN t0.c81 THEN t0.c48 END) AND (t0.c41)), (((t0.c52, t0.c48, t0.c81)) NOT BETWEEN ((((((t1.c1)AND(t0.c84)))OR(t0.c48)), CASE t1.c2  WHEN t1.c1 THEN t0.c84 END, ((((t1.c2)AND(vt0.c0)))AND(t1.c2)))) AND ((t0.c52 COLLATE RTRIM, CAST(t1.c0 AS INTEGER), CAST(t1.c2 AS INTEGER))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, vt1 RIGHT OUTER JOIN t1 ON 0Xffffffffaae1f7fe WHERE (LIKELY(((x'391b') BETWEEN (NULL) AND (vt1.c0)))) ORDER BY ((((((t0.c41)OR(t0.c81)))AND(t1.c1))) BETWEEN (CASE WHEN t0.c81 THEN t0.c48 END) AND (t0.c41)), (((t0.c52, t0.c48, t0.c81)) NOT BETWEEN ((((((t1.c1)AND(t0.c84)))OR(t0.c48)), CASE t1.c2  WHEN t1.c1 THEN t0.c84 END, ((((t1.c2)AND(vt0.c0)))AND(t1.c2)))) AND ((t0.c52 COLLATE RTRIM, CAST(t1.c0 AS INTEGER), CAST(t1.c2 AS INTEGER))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(((x'391b') BETWEEN (NULL) AND (vt1.c0)))) IS TRUE)  as count FROM vt0, t0, vt1 RIGHT OUTER JOIN t1 ON 0Xffffffffaae1f7fe ORDER BY ((((((t0.c41)OR(t0.c81)))AND(t1.c1))) BETWEEN (CASE WHEN t0.c81 THEN t0.c48 END) AND (t0.c41)), (((t0.c52, t0.c48, t0.c81)) NOT BETWEEN ((((((t1.c1)AND(t0.c84)))OR(t0.c48)), CASE t1.c2  WHEN t1.c1 THEN t0.c84 END, ((((t1.c2)AND(vt0.c0)))AND(t1.c2)))) AND ((t0.c52 COLLATE RTRIM, CAST(t1.c0 AS INTEGER), CAST(t1.c2 AS INTEGER))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, vt1 RIGHT OUTER JOIN t1 ON 0Xffffffffaae1f7fe WHERE (LIKELY(((x'391b') BETWEEN (NULL) AND (vt1.c0)))) ORDER BY ((((((t0.c41)OR(t0.c81)))AND(t1.c1))) BETWEEN (CASE WHEN t0.c81 THEN t0.c48 END) AND (t0.c41)), (((t0.c52, t0.c48, t0.c81)) NOT BETWEEN ((((((t1.c1)AND(t0.c84)))OR(t0.c48)), CASE t1.c2  WHEN t1.c1 THEN t0.c84 END, ((((t1.c2)AND(vt0.c0)))AND(t1.c2)))) AND ((t0.c52 COLLATE RTRIM, CAST(t1.c0 AS INTEGER), CAST(t1.c2 AS INTEGER))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((0.6811276522336739) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0) IS FALSE))))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((0.6811276522336739) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0) IS FALSE))))AND(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((0.6811276522336739) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0) IS FALSE))))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((0.6811276522336739) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0) IS FALSE))))AND(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((0.6811276522336739) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0) IS FALSE))))AND(vt0.c0)));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)IS NOT(vt0.c0)))AND(CAST(vt0.c0 AS BLOB))))OR(((vt0.c0)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)IS NOT(vt0.c0)))AND(CAST(vt0.c0 AS BLOB))))OR(((vt0.c0)%(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)IS NOT(vt0.c0)))AND(CAST(vt0.c0 AS BLOB))))OR(((vt0.c0)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)IS NOT(vt0.c0)))AND(CAST(vt0.c0 AS BLOB))))OR(((vt0.c0)%(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)IS NOT(vt0.c0)))AND(CAST(vt0.c0 AS BLOB))))OR(((vt0.c0)%(vt0.c0)))));
SELECT COUNT(*) FROM vt1 INDEXED BY i32 WHERE (json_quote((vt1.c0 IN (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_quote((vt1.c0 IN (vt1.c0)))) IS TRUE)  as count FROM vt1 INDEXED BY i32);
SELECT COUNT(*) FROM vt1 INDEXED BY i32 WHERE (json_quote((vt1.c0 IN (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_quote((vt1.c0 IN (vt1.c0)))) IS TRUE)  as count FROM vt1 INDEXED BY i32);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN t1 ON 0.818436650413057 WHERE ('i&*瞳zi*t') ORDER BY '-1805816586'  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('i&*瞳zi*t') IS TRUE)  as count FROM t0 RIGHT OUTER JOIN t1 ON 0.818436650413057 ORDER BY '-1805816586'  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN t1 ON 0.818436650413057 WHERE ('i&*瞳zi*t') ORDER BY '-1805816586'  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('i&*瞳zi*t') IS TRUE)  as count FROM t0 RIGHT OUTER JOIN t1 ON 0.818436650413057 ORDER BY '-1805816586'  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN t1 ON 0.818436650413057 WHERE ('i&*瞳zi*t') ORDER BY '-1805816586'  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t1, vt1, t0 WHERE (((json(vt1.c0))>=(0.46670354188421037))) ORDER BY t0.c52  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((json(vt1.c0))>=(0.46670354188421037))) IS TRUE)  as count FROM vt0, t1, vt1, t0 ORDER BY t0.c52  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1, vt1, t0 WHERE (((json(vt1.c0))>=(0.46670354188421037))) ORDER BY t0.c52  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((json(vt1.c0))>=(0.46670354188421037))) IS TRUE)  as count FROM vt0, t1, vt1, t0 ORDER BY t0.c52  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1, vt1, t0 WHERE (((json(vt1.c0))>=(0.46670354188421037))) ORDER BY t0.c52  NULLS LAST;
SELECT * FROM vt1, t0 WHERE (((t0.c84 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c84 IN ()) IN ())) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (((t0.c84 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c84 IN ()) IN ())) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (((t0.c84 IN ()) IN ()));
SELECT COUNT(*) FROM t1 WHERE ((~ (((t1.c0)||(t1.c1))))) ORDER BY ((- (t1.c1)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((t1.c0)||(t1.c1))))) IS TRUE)  as count FROM t1 ORDER BY ((- (t1.c1)) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE ((~ (((t1.c0)||(t1.c1))))) ORDER BY ((- (t1.c1)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((t1.c0)||(t1.c1))))) IS TRUE)  as count FROM t1 ORDER BY ((- (t1.c1)) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE ((~ (((t1.c0)||(t1.c1))))) ORDER BY ((- (t1.c1)) IN ()) DESC  NULLS LAST;
SELECT COUNT(*) FROM t1, vt1 WHERE (((((0Xffffffffe8dcd952)>=(vt1.c0)))+(((t1.c2) BETWEEN (t1.c1) AND (t1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((0xffffffffe8dcd952)>=(vt1.c0)))+(((t1.c2) BETWEEN (t1.c1) AND (t1.c1))))) IS TRUE)  as count FROM t1, vt1);
SELECT COUNT(*) FROM t1, vt1 WHERE (((((0Xffffffffe8dcd952)>=(vt1.c0)))+(((t1.c2) BETWEEN (t1.c1) AND (t1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((0xffffffffe8dcd952)>=(vt1.c0)))+(((t1.c2) BETWEEN (t1.c1) AND (t1.c1))))) IS TRUE)  as count FROM t1, vt1);
SELECT COUNT(*) FROM t1, vt1 WHERE (((((0Xffffffffe8dcd952)>=(vt1.c0)))+(((t1.c2) BETWEEN (t1.c1) AND (t1.c1)))));
SELECT COUNT(*) FROM t1 INNER JOIN vt0 ON CASE WHEN (t1.c2 IN ()) THEN CAST(vt0.c0 AS NUMERIC) WHEN vt0.c0 THEN (('FH 鵉0kvf+') BETWEEN (vt1.c0) AND (t1.c2)) WHEN (('492150677') BETWEEN (t1.c2) AND (t1.c1)) THEN (t1.c0 IN ()) END CROSS JOIN vt1 ON TOTAL_CHANGES() WHERE (((NULL)OR(((((t1.c1)OR(t1.c1)))OR(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)OR(((((t1.c1)OR(t1.c1)))OR(t1.c0))))) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON CASE WHEN (t1.c2 IN ()) THEN CAST(vt0.c0 AS NUMERIC) WHEN vt0.c0 THEN (('FH 鵉0kvf+') BETWEEN (vt1.c0) AND (t1.c2)) WHEN (('492150677') BETWEEN (t1.c2) AND (t1.c1)) THEN (t1.c0 IN ()) END CROSS JOIN vt1 ON TOTAL_CHANGES());
SELECT COUNT(*) FROM t1 INNER JOIN vt0 ON CASE WHEN (t1.c2 IN ()) THEN CAST(vt0.c0 AS NUMERIC) WHEN vt0.c0 THEN (('FH 鵉0kvf+') BETWEEN (vt1.c0) AND (t1.c2)) WHEN (('492150677') BETWEEN (t1.c2) AND (t1.c1)) THEN (t1.c0 IN ()) END CROSS JOIN vt1 ON TOTAL_CHANGES() WHERE (((NULL)OR(((((t1.c1)OR(t1.c1)))OR(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)OR(((((t1.c1)OR(t1.c1)))OR(t1.c0))))) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON CASE WHEN (t1.c2 IN ()) THEN CAST(vt0.c0 AS NUMERIC) WHEN vt0.c0 THEN (('FH 鵉0kvf+') BETWEEN (vt1.c0) AND (t1.c2)) WHEN (('492150677') BETWEEN (t1.c2) AND (t1.c1)) THEN (t1.c0 IN ()) END CROSS JOIN vt1 ON TOTAL_CHANGES());
SELECT COUNT(*) FROM t1 INNER JOIN vt0 ON CASE WHEN (t1.c2 IN ()) THEN CAST(vt0.c0 AS NUMERIC) WHEN vt0.c0 THEN (('FH 鵉0kvf+') BETWEEN (vt1.c0) AND (t1.c2)) WHEN (('492150677') BETWEEN (t1.c2) AND (t1.c1)) THEN (t1.c0 IN ()) END CROSS JOIN vt1 ON TOTAL_CHANGES() WHERE (((NULL)OR(((((t1.c1)OR(t1.c1)))OR(t1.c0)))));
SELECT ALL COUNT(*) FROM vt1 INDEXED BY i32, t1, t0 WHERE (((((vt1.c0)>=(t0.c52))) BETWEEN (load_extension(t0.c81, t0.c52)) AND (t0.c81 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>=(t0.c52))) BETWEEN (load_extension(t0.c81, t0.c52)) AND (t0.c81 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 INDEXED BY i32, t1, t0);
SELECT ALL COUNT(*) FROM vt1 INDEXED BY i32, t1, t0 WHERE (((((vt1.c0)>=(t0.c52))) BETWEEN (load_extension(t0.c81, t0.c52)) AND (t0.c81 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>=(t0.c52))) BETWEEN (load_extension(t0.c81, t0.c52)) AND (t0.c81 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 INDEXED BY i32, t1, t0);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) BETWEEN (vt0.c0 COLLATE RTRIM) AND ((vt1.c0 IN (vt1.c0)))) WHERE ((+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0X65beb07e ELSE vt0.c0 END))) ORDER BY (((((vt0.c0)|(vt1.c0))))>=((((vt0.c0)<>(vt0.c0)))))  NULLS LAST, CASE ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))  WHEN (- (vt1.c0)) THEN 0x1725b4fd ELSE CAST(vt1.c0 AS REAL) END DESC, NULL;
SELECT SUM(count) FROM (SELECT (((+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0X65beb07e ELSE vt0.c0 END))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) BETWEEN (vt0.c0 COLLATE RTRIM) AND ((vt1.c0 IN (vt1.c0)))) ORDER BY (((((vt0.c0)|(vt1.c0))))>=((((vt0.c0)!=(vt0.c0)))))  NULLS LAST, CASE ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))  WHEN (- (vt1.c0)) THEN 0x1725b4fd ELSE CAST(vt1.c0 AS REAL) END DESC, NULL);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) BETWEEN (vt0.c0 COLLATE RTRIM) AND ((vt1.c0 IN (vt1.c0)))) WHERE ((+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0X65beb07e ELSE vt0.c0 END))) ORDER BY (((((vt0.c0)|(vt1.c0))))>=((((vt0.c0)<>(vt0.c0)))))  NULLS LAST, CASE ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))  WHEN (- (vt1.c0)) THEN 0x1725b4fd ELSE CAST(vt1.c0 AS REAL) END DESC, NULL;
SELECT SUM(count) FROM (SELECT (((+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0X65beb07e ELSE vt0.c0 END))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) BETWEEN (vt0.c0 COLLATE RTRIM) AND ((vt1.c0 IN (vt1.c0)))) ORDER BY (((((vt0.c0)|(vt1.c0))))>=((((vt0.c0)!=(vt0.c0)))))  NULLS LAST, CASE ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))  WHEN (- (vt1.c0)) THEN 0x1725b4fd ELSE CAST(vt1.c0 AS REAL) END DESC, NULL);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) BETWEEN (vt0.c0 COLLATE RTRIM) AND ((vt1.c0 IN (vt1.c0)))) WHERE ((+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0X65beb07e ELSE vt0.c0 END))) ORDER BY (((((vt0.c0)|(vt1.c0))))>=((((vt0.c0)<>(vt0.c0)))))  NULLS LAST, CASE ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))  WHEN (- (vt1.c0)) THEN 0x1725b4fd ELSE CAST(vt1.c0 AS REAL) END DESC, NULL;
SELECT * FROM vt1 FULL OUTER JOIN t1 ON (+ (((t1.c1) BETWEEN (t1.c2) AND (t1.c2)))) WHERE (LOWER(((vt1.c0) NOT BETWEEN (t1.c2) AND (0.2720894961439896))));
SELECT SUM(count) FROM (SELECT ((LOWER(((vt1.c0) NOT BETWEEN (t1.c2) AND (0.2720894961439896)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t1 ON (+ (((t1.c1) BETWEEN (t1.c2) AND (t1.c2)))));
SELECT * FROM vt1 FULL OUTER JOIN t1 ON (+ (((t1.c1) BETWEEN (t1.c2) AND (t1.c2)))) WHERE (LOWER(((vt1.c0) NOT BETWEEN (t1.c2) AND (0.2720894961439896))));
SELECT SUM(count) FROM (SELECT ((LOWER(((vt1.c0) NOT BETWEEN (t1.c2) AND (0.2720894961439896)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t1 ON (+ (((t1.c1) BETWEEN (t1.c2) AND (t1.c2)))));
SELECT * FROM vt1 FULL OUTER JOIN t1 ON (+ (((t1.c1) BETWEEN (t1.c2) AND (t1.c2)))) WHERE (LOWER(((vt1.c0) NOT BETWEEN (t1.c2) AND (0.2720894961439896))));
SELECT COUNT(*) FROM vt1, t0 WHERE ((- (LIKELY(NULL))));
SELECT SUM(count) FROM (SELECT ALL (((- (LIKELY(NULL)))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE ((- (LIKELY(NULL))));
SELECT SUM(count) FROM (SELECT ALL (((- (LIKELY(NULL)))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE ((- (LIKELY(NULL))));
SELECT * FROM t1, t0 WHERE ((((t0.c84 IN (t0.c81))) IS FALSE)) ORDER BY CASE WHEN t1.c1 COLLATE RTRIM THEN ((t0.c41)/(t0.c41)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c84 IN (t0.c81))) IS FALSE)) IS TRUE)  as count FROM t1, t0 ORDER BY CASE WHEN t1.c1 COLLATE RTRIM THEN ((t0.c41)/(t0.c41)) END DESC  NULLS FIRST);
SELECT * FROM t1, t0 WHERE ((((t0.c84 IN (t0.c81))) IS FALSE)) ORDER BY CASE WHEN t1.c1 COLLATE RTRIM THEN ((t0.c41)/(t0.c41)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c84 IN (t0.c81))) IS FALSE)) IS TRUE)  as count FROM t1, t0 ORDER BY CASE WHEN t1.c1 COLLATE RTRIM THEN ((t0.c41)/(t0.c41)) END DESC  NULLS FIRST);
SELECT * FROM t1, t0 WHERE ((((t0.c84 IN (t0.c81))) IS FALSE)) ORDER BY CASE WHEN t1.c1 COLLATE RTRIM THEN ((t0.c41)/(t0.c41)) END DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt1 WHERE (CAST(((t0.c52)==(vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c52)==(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (CAST(((t0.c52)==(vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c52)==(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (CAST(((t0.c52)==(vt1.c0)) AS INTEGER));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<<(((vt0.c0) ISNULL)))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<<(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<<(((vt0.c0) ISNULL)))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<<(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<<(((vt0.c0) ISNULL)))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL);
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0)AND(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)))OR(UPPER(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0)AND(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)))OR(UPPER(vt1.c0))));
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0)AND(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)))OR(UPPER(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0)AND(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)))OR(UPPER(vt1.c0))));
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0)AND(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)))OR(UPPER(vt1.c0)));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (+ (NULLIF(DISTINCT vt1.c0, vt0.c0))) WHERE (((((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)))<(CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)))<(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (+ (NULLIF(DISTINCT vt1.c0, vt0.c0))));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (+ (NULLIF(DISTINCT vt1.c0, vt0.c0))) WHERE (((((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)))<(CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)))<(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (+ (NULLIF(DISTINCT vt1.c0, vt0.c0))));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (+ (NULLIF(DISTINCT vt1.c0, vt0.c0))) WHERE (((((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)))<(CAST(vt1.c0 AS INTEGER))));
SELECT COUNT(*) FROM vt1, t0, vt0, t1 WHERE ((((+ (t0.c48))) BETWEEN ((- (vt1.c0))) AND (((vt0.c0)IS(t1.c0))))) ORDER BY CAST(((((t0.c81)OR(t0.c48)))AND(t1.c1)) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (t0.c48))) BETWEEN ((- (vt1.c0))) AND (((vt0.c0)IS(t1.c0))))) IS TRUE)  as count FROM vt1, t0, vt0, t1 ORDER BY CAST(((((t0.c81)OR(t0.c48)))AND(t1.c1)) AS NUMERIC) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0, vt0, t1 WHERE ((((+ (t0.c48))) BETWEEN ((- (vt1.c0))) AND (((vt0.c0)IS(t1.c0))))) ORDER BY CAST(((((t0.c81)OR(t0.c48)))AND(t1.c1)) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (t0.c48))) BETWEEN ((- (vt1.c0))) AND (((vt0.c0)IS(t1.c0))))) IS TRUE)  as count FROM vt1, t0, vt0, t1 ORDER BY CAST(((((t0.c81)OR(t0.c48)))AND(t1.c1)) AS NUMERIC) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0, vt0, t1 WHERE ((((+ (t0.c48))) BETWEEN ((- (vt1.c0))) AND (((vt0.c0)IS(t1.c0))))) ORDER BY CAST(((((t0.c81)OR(t0.c48)))AND(t1.c1)) AS NUMERIC) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(t1.c1 AS TEXT) COLLATE NOCASE INNER JOIN t0 ON CASE CAST(vt1.c0 AS NUMERIC)  WHEN CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t0.c48 THEN t1.c2 WHEN t1.c2 THEN NULL ELSE vt0.c0 END THEN t1.c1 END FULL OUTER JOIN t1 ON LTRIM(t0.c84 COLLATE NOCASE, t1.c2) WHERE (((vt1.c0 COLLATE BINARY)>((((t1.c0)) BETWEEN ((t0.c84)) AND ((vt0.c0)))))) ORDER BY (- (((t1.c1) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY)>((((t1.c0)) BETWEEN ((t0.c84)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(t1.c1 AS TEXT) COLLATE NOCASE INNER JOIN t0 ON CASE CAST(vt1.c0 AS NUMERIC)  WHEN CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t0.c48 THEN t1.c2 WHEN t1.c2 THEN NULL ELSE vt0.c0 END THEN t1.c1 END FULL OUTER JOIN t1 ON LTRIM(t0.c84 COLLATE NOCASE, t1.c2) ORDER BY (- (((t1.c1) ISNULL))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(t1.c1 AS TEXT) COLLATE NOCASE INNER JOIN t0 ON CASE CAST(vt1.c0 AS NUMERIC)  WHEN CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t0.c48 THEN t1.c2 WHEN t1.c2 THEN NULL ELSE vt0.c0 END THEN t1.c1 END FULL OUTER JOIN t1 ON LTRIM(t0.c84 COLLATE NOCASE, t1.c2) WHERE (((vt1.c0 COLLATE BINARY)>((((t1.c0)) BETWEEN ((t0.c84)) AND ((vt0.c0)))))) ORDER BY (- (((t1.c1) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY)>((((t1.c0)) BETWEEN ((t0.c84)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(t1.c1 AS TEXT) COLLATE NOCASE INNER JOIN t0 ON CASE CAST(vt1.c0 AS NUMERIC)  WHEN CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t0.c48 THEN t1.c2 WHEN t1.c2 THEN NULL ELSE vt0.c0 END THEN t1.c1 END FULL OUTER JOIN t1 ON LTRIM(t0.c84 COLLATE NOCASE, t1.c2) ORDER BY (- (((t1.c1) ISNULL))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1 WHERE (CASE WHEN vt0.c0 THEN t1.c1 END COLLATE NOCASE) ORDER BY t1.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN t1.c1 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, t1 ORDER BY t1.c1 ASC);
SELECT COUNT(*) FROM vt0, t1 WHERE (CASE WHEN vt0.c0 THEN t1.c1 END COLLATE NOCASE) ORDER BY t1.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN t1.c1 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, t1 ORDER BY t1.c1 ASC);
SELECT COUNT(*) FROM vt0, t1 WHERE (CASE WHEN vt0.c0 THEN t1.c1 END COLLATE NOCASE) ORDER BY t1.c1 ASC;
SELECT ALL * FROM t1, t0, vt0, vt1 WHERE (vt1.c0) ORDER BY '0.17969033613487162' DESC, (((((t0.c81)%(t0.c48))))<=((((((t0.c48)OR(vt1.c0)))OR(t1.c0))))), ((((((t1.c1)AND(t1.c1)))AND(vt0.c0)))>>(CASE WHEN t1.c1 THEN t1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM t1, t0, vt0, vt1 ORDER BY '0.17969033613487162' DESC, (((((t0.c81)%(t0.c48))))<=((((((t0.c48)OR(vt1.c0)))OR(t1.c0))))), ((((((t1.c1)AND(t1.c1)))AND(vt0.c0)))>>(CASE WHEN t1.c1 THEN t1.c0 END)));
SELECT ALL * FROM t1, t0, vt0, vt1 WHERE (vt1.c0) ORDER BY '0.17969033613487162' DESC, (((((t0.c81)%(t0.c48))))<=((((((t0.c48)OR(vt1.c0)))OR(t1.c0))))), ((((((t1.c1)AND(t1.c1)))AND(vt0.c0)))>>(CASE WHEN t1.c1 THEN t1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM t1, t0, vt0, vt1 ORDER BY '0.17969033613487162' DESC, (((((t0.c81)%(t0.c48))))<=((((((t0.c48)OR(vt1.c0)))OR(t1.c0))))), ((((((t1.c1)AND(t1.c1)))AND(vt0.c0)))>>(CASE WHEN t1.c1 THEN t1.c0 END)));
SELECT ALL * FROM t1, t0, vt0, vt1 WHERE (vt1.c0) ORDER BY '0.17969033613487162' DESC, (((((t0.c81)%(t0.c48))))<=((((((t0.c48)OR(vt1.c0)))OR(t1.c0))))), ((((((t1.c1)AND(t1.c1)))AND(vt0.c0)))>>(CASE WHEN t1.c1 THEN t1.c0 END));
SELECT * FROM vt0, t0 WHERE (((((CHANGES())OR(CAST(t0.c81 AS TEXT))))OR(((t0.c84) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((CHANGES())OR(CAST(t0.c81 AS TEXT))))OR(((t0.c84) IS FALSE)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((CHANGES())OR(CAST(t0.c81 AS TEXT))))OR(((t0.c84) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((CHANGES())OR(CAST(t0.c81 AS TEXT))))OR(((t0.c84) IS FALSE)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((CHANGES())OR(CAST(t0.c81 AS TEXT))))OR(((t0.c84) IS FALSE))));
SELECT COUNT(*) FROM t1 NATURAL JOIN vt0 WHERE ((- (CAST(t1.c2 AS BLOB)))) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (t1.c2) AND (t1.c0)) THEN TYPEOF(vt0.c0) ELSE TRIM(DISTINCT t1.c1, t1.c2) END ASC  NULLS FIRST, (((t1.c2)) BETWEEN ((t1.c2)) AND ((TIME(t1.c1, t1.c1, x'', vt0.c0, vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(t1.c2 AS BLOB)))) IS TRUE)  as count FROM t1 NATURAL JOIN vt0 ORDER BY CASE WHEN ((vt0.c0) BETWEEN (t1.c2) AND (t1.c0)) THEN TYPEOF(vt0.c0) ELSE TRIM(DISTINCT t1.c1, t1.c2) END ASC  NULLS FIRST, (((t1.c2)) BETWEEN ((t1.c2)) AND ((TIME(t1.c1, t1.c1, x'', vt0.c0, vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM t1 NATURAL JOIN vt0 WHERE ((- (CAST(t1.c2 AS BLOB)))) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (t1.c2) AND (t1.c0)) THEN TYPEOF(vt0.c0) ELSE TRIM(DISTINCT t1.c1, t1.c2) END ASC  NULLS FIRST, (((t1.c2)) BETWEEN ((t1.c2)) AND ((TIME(t1.c1, t1.c1, x'', vt0.c0, vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(t1.c2 AS BLOB)))) IS TRUE)  as count FROM t1 NATURAL JOIN vt0 ORDER BY CASE WHEN ((vt0.c0) BETWEEN (t1.c2) AND (t1.c0)) THEN TYPEOF(vt0.c0) ELSE TRIM(DISTINCT t1.c1, t1.c2) END ASC  NULLS FIRST, (((t1.c2)) BETWEEN ((t1.c2)) AND ((TIME(t1.c1, t1.c1, x'', vt0.c0, vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM t1 NATURAL JOIN vt0 WHERE ((- (CAST(t1.c2 AS BLOB)))) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (t1.c2) AND (t1.c0)) THEN TYPEOF(vt0.c0) ELSE TRIM(DISTINCT t1.c1, t1.c2) END ASC  NULLS FIRST, (((t1.c2)) BETWEEN ((t1.c2)) AND ((TIME(t1.c1, t1.c1, x'', vt0.c0, vt0.c0))))  NULLS LAST;
SELECT ALL * FROM t0, t1, vt1 WHERE (CASE WHEN ((t0.c41) ISNULL) THEN ((NULL) NOT BETWEEN (t1.c1) AND (t0.c81)) WHEN ((t0.c41) NOT NULL) THEN CASE vt1.c0  WHEN t1.c1 THEN t0.c41 WHEN t0.c52 THEN t0.c84 WHEN t1.c0 THEN t0.c41 WHEN NULL THEN t0.c84 WHEN t0.c41 THEN t0.c41 END WHEN CAST(t1.c2 AS NUMERIC) THEN 0.995334459575902 WHEN (NOT (t0.c84)) THEN ((t1.c0) NOT BETWEEN (t0.c48) AND (t1.c2)) WHEN (t1.c2 IN ()) THEN ((t0.c81) NOT NULL) END) ORDER BY CAST(((t1.c1)+(t0.c52)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c41) ISNULL) THEN ((NULL) NOT BETWEEN (t1.c1) AND (t0.c81)) WHEN ((t0.c41) NOT NULL) THEN CASE vt1.c0  WHEN t1.c1 THEN t0.c41 WHEN t0.c52 THEN t0.c84 WHEN t1.c0 THEN t0.c41 WHEN NULL THEN t0.c84 WHEN t0.c41 THEN t0.c41 END WHEN CAST(t1.c2 AS NUMERIC) THEN 0.995334459575902 WHEN (NOT (t0.c84)) THEN ((t1.c0) NOT BETWEEN (t0.c48) AND (t1.c2)) WHEN (t1.c2 IN ()) THEN ((t0.c81) NOT NULL) END) IS TRUE)  as count FROM t0, t1, vt1 ORDER BY CAST(((t1.c1)+(t0.c52)) AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM t0, t1, vt1 WHERE (CASE WHEN ((t0.c41) ISNULL) THEN ((NULL) NOT BETWEEN (t1.c1) AND (t0.c81)) WHEN ((t0.c41) NOT NULL) THEN CASE vt1.c0  WHEN t1.c1 THEN t0.c41 WHEN t0.c52 THEN t0.c84 WHEN t1.c0 THEN t0.c41 WHEN NULL THEN t0.c84 WHEN t0.c41 THEN t0.c41 END WHEN CAST(t1.c2 AS NUMERIC) THEN 0.995334459575902 WHEN (NOT (t0.c84)) THEN ((t1.c0) NOT BETWEEN (t0.c48) AND (t1.c2)) WHEN (t1.c2 IN ()) THEN ((t0.c81) NOT NULL) END) ORDER BY CAST(((t1.c1)+(t0.c52)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c41) ISNULL) THEN ((NULL) NOT BETWEEN (t1.c1) AND (t0.c81)) WHEN ((t0.c41) NOT NULL) THEN CASE vt1.c0  WHEN t1.c1 THEN t0.c41 WHEN t0.c52 THEN t0.c84 WHEN t1.c0 THEN t0.c41 WHEN NULL THEN t0.c84 WHEN t0.c41 THEN t0.c41 END WHEN CAST(t1.c2 AS NUMERIC) THEN 0.995334459575902 WHEN (NOT (t0.c84)) THEN ((t1.c0) NOT BETWEEN (t0.c48) AND (t1.c2)) WHEN (t1.c2 IN ()) THEN ((t0.c81) NOT NULL) END) IS TRUE)  as count FROM t0, t1, vt1 ORDER BY CAST(((t1.c1)+(t0.c52)) AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM t0, t1, vt1 WHERE (CASE WHEN ((t0.c41) ISNULL) THEN ((NULL) NOT BETWEEN (t1.c1) AND (t0.c81)) WHEN ((t0.c41) NOT NULL) THEN CASE vt1.c0  WHEN t1.c1 THEN t0.c41 WHEN t0.c52 THEN t0.c84 WHEN t1.c0 THEN t0.c41 WHEN NULL THEN t0.c84 WHEN t0.c41 THEN t0.c41 END WHEN CAST(t1.c2 AS NUMERIC) THEN 0.995334459575902 WHEN (NOT (t0.c84)) THEN ((t1.c0) NOT BETWEEN (t0.c48) AND (t1.c2)) WHEN (t1.c2 IN ()) THEN ((t0.c81) NOT NULL) END) ORDER BY CAST(((t1.c1)+(t0.c52)) AS NUMERIC)  NULLS FIRST;
SELECT ALL * FROM t1, vt0, t0 FULL OUTER JOIN vt1 ON (((((t0.c81)) BETWEEN ((0.4650610223318955)) AND ((t0.c48))))IS NOT(((vt0.c0) NOT BETWEEN (t0.c84) AND (vt1.c0)))) WHERE (INSTR((NOT (vt1.c0)), ((t1.c2)&(t0.c41)))) ORDER BY CASE WHEN '303897156' COLLATE RTRIM THEN t1.c2 ELSE t0.c84 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((INSTR((NOT (vt1.c0)), ((t1.c2)&(t0.c41)))) IS TRUE)  as count FROM t1, vt0, t0 FULL OUTER JOIN vt1 ON (((((t0.c81)) BETWEEN ((0.4650610223318955)) AND ((t0.c48))))IS NOT(((vt0.c0) NOT BETWEEN (t0.c84) AND (vt1.c0)))) ORDER BY CASE WHEN '303897156' COLLATE RTRIM THEN t1.c2 ELSE t0.c84 END  NULLS FIRST);
SELECT ALL * FROM t1, vt0, t0 FULL OUTER JOIN vt1 ON (((((t0.c81)) BETWEEN ((0.4650610223318955)) AND ((t0.c48))))IS NOT(((vt0.c0) NOT BETWEEN (t0.c84) AND (vt1.c0)))) WHERE (INSTR((NOT (vt1.c0)), ((t1.c2)&(t0.c41)))) ORDER BY CASE WHEN '303897156' COLLATE RTRIM THEN t1.c2 ELSE t0.c84 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((INSTR((NOT (vt1.c0)), ((t1.c2)&(t0.c41)))) IS TRUE)  as count FROM t1, vt0, t0 FULL OUTER JOIN vt1 ON (((((t0.c81)) BETWEEN ((0.4650610223318955)) AND ((t0.c48))))IS NOT(((vt0.c0) NOT BETWEEN (t0.c84) AND (vt1.c0)))) ORDER BY CASE WHEN '303897156' COLLATE RTRIM THEN t1.c2 ELSE t0.c84 END  NULLS FIRST);
SELECT ALL * FROM t1, vt0, t0 FULL OUTER JOIN vt1 ON (((((t0.c81)) BETWEEN ((0.4650610223318955)) AND ((t0.c48))))IS NOT(((vt0.c0) NOT BETWEEN (t0.c84) AND (vt1.c0)))) WHERE (INSTR((NOT (vt1.c0)), ((t1.c2)&(t0.c41)))) ORDER BY CASE WHEN '303897156' COLLATE RTRIM THEN t1.c2 ELSE t0.c84 END  NULLS FIRST;
SELECT ALL * FROM t0 RIGHT OUTER JOIN t1 ON (((((t1.c0)) BETWEEN ((t1.c1)) AND ((t0.c48))))&(((t0.c48)>(t1.c1)))) FULL OUTER JOIN vt1 ON ((((((((((t0.c41)AND(t1.c1)))AND(t0.c41)))AND(t1.c1)))OR(t1.c1)))AND(((vt0.c0) IS FALSE))) LEFT OUTER JOIN vt0 ON CASE (t1.c1 IN ())  WHEN CAST(t0.c84 AS NUMERIC) THEN ((t0.c41)>(vt1.c0)) WHEN CASE WHEN '2019440123' THEN 0.7047615370557175 ELSE t1.c0 END THEN ((vt1.c0)GLOB('3')) WHEN ((t0.c52)%(t0.c41)) THEN CAST(x'f460' AS NUMERIC) ELSE ((((((((t1.c1)AND(t0.c41)))AND(t1.c0)))AND(t0.c48)))OR(vt0.c0)) END WHERE (CAST((((t0.c41))<=((vt1.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c41))<=((vt1.c0))) AS TEXT)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN t1 ON (((((t1.c0)) BETWEEN ((t1.c1)) AND ((t0.c48))))&(((t0.c48)>(t1.c1)))) FULL OUTER JOIN vt1 ON ((((((((((t0.c41)AND(t1.c1)))AND(t0.c41)))AND(t1.c1)))OR(t1.c1)))AND(((vt0.c0) IS FALSE))) LEFT OUTER JOIN vt0 ON CASE (t1.c1 IN ())  WHEN CAST(t0.c84 AS NUMERIC) THEN ((t0.c41)>(vt1.c0)) WHEN CASE WHEN '2019440123' THEN 0.7047615370557175 ELSE t1.c0 END THEN ((vt1.c0)GLOB('3')) WHEN ((t0.c52)%(t0.c41)) THEN CAST(x'f460' AS NUMERIC) ELSE ((((((((t1.c1)AND(t0.c41)))AND(t1.c0)))AND(t0.c48)))OR(vt0.c0)) END);
SELECT ALL * FROM t0 RIGHT OUTER JOIN t1 ON (((((t1.c0)) BETWEEN ((t1.c1)) AND ((t0.c48))))&(((t0.c48)>(t1.c1)))) FULL OUTER JOIN vt1 ON ((((((((((t0.c41)AND(t1.c1)))AND(t0.c41)))AND(t1.c1)))OR(t1.c1)))AND(((vt0.c0) IS FALSE))) LEFT OUTER JOIN vt0 ON CASE (t1.c1 IN ())  WHEN CAST(t0.c84 AS NUMERIC) THEN ((t0.c41)>(vt1.c0)) WHEN CASE WHEN '2019440123' THEN 0.7047615370557175 ELSE t1.c0 END THEN ((vt1.c0)GLOB('3')) WHEN ((t0.c52)%(t0.c41)) THEN CAST(x'f460' AS NUMERIC) ELSE ((((((((t1.c1)AND(t0.c41)))AND(t1.c0)))AND(t0.c48)))OR(vt0.c0)) END WHERE (CAST((((t0.c41))<=((vt1.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c41))<=((vt1.c0))) AS TEXT)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN t1 ON (((((t1.c0)) BETWEEN ((t1.c1)) AND ((t0.c48))))&(((t0.c48)>(t1.c1)))) FULL OUTER JOIN vt1 ON ((((((((((t0.c41)AND(t1.c1)))AND(t0.c41)))AND(t1.c1)))OR(t1.c1)))AND(((vt0.c0) IS FALSE))) LEFT OUTER JOIN vt0 ON CASE (t1.c1 IN ())  WHEN CAST(t0.c84 AS NUMERIC) THEN ((t0.c41)>(vt1.c0)) WHEN CASE WHEN '2019440123' THEN 0.7047615370557175 ELSE t1.c0 END THEN ((vt1.c0)GLOB('3')) WHEN ((t0.c52)%(t0.c41)) THEN CAST(x'f460' AS NUMERIC) ELSE ((((((((t1.c1)AND(t0.c41)))AND(t1.c0)))AND(t0.c48)))OR(vt0.c0)) END);
SELECT COUNT(*) FROM t0 INNER JOIN vt1 ON ((UNLIKELY(DISTINCT t0.c52)) BETWEEN (((t0.c52)LIKE('390192607'))) AND (t0.c48)) FULL OUTER JOIN vt0 ON ((NOT (t0.c81)) IN ()) INNER JOIN t1 ON (((0Xffffffffcd27d6d0, x'', ((t1.c2) NOT BETWEEN (t1.c0) AND (t0.c52))))<((QUOTE(NULL), ((t0.c48)IS NOT(t0.c41)), ((vt0.c0)||(t1.c1))))) WHERE (((LIKE(t0.c41, vt0.c0, '2')) BETWEEN (((t0.c41)<>(vt1.c0))) AND (0xffffffffa500a6b0)));
SELECT SUM(count) FROM (SELECT ALL ((((LIKE(t0.c41, vt0.c0, '2')) BETWEEN (((t0.c41)<>(vt1.c0))) AND (0xffffffffa500a6b0))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON ((UNLIKELY(DISTINCT t0.c52)) BETWEEN (((t0.c52)LIKE('390192607'))) AND (t0.c48)) FULL OUTER JOIN vt0 ON ((NOT (t0.c81)) IN ()) INNER JOIN t1 ON (((0Xffffffffcd27d6d0, x'', ((t1.c2) NOT BETWEEN (t1.c0) AND (t0.c52))))<((QUOTE(NULL), ((t0.c48)IS NOT(t0.c41)), ((vt0.c0)||(t1.c1))))));
SELECT COUNT(*) FROM t0 INNER JOIN vt1 ON ((UNLIKELY(DISTINCT t0.c52)) BETWEEN (((t0.c52)LIKE('390192607'))) AND (t0.c48)) FULL OUTER JOIN vt0 ON ((NOT (t0.c81)) IN ()) INNER JOIN t1 ON (((0Xffffffffcd27d6d0, x'', ((t1.c2) NOT BETWEEN (t1.c0) AND (t0.c52))))<((QUOTE(NULL), ((t0.c48)IS NOT(t0.c41)), ((vt0.c0)||(t1.c1))))) WHERE (((LIKE(t0.c41, vt0.c0, '2')) BETWEEN (((t0.c41)<>(vt1.c0))) AND (0xffffffffa500a6b0)));
SELECT SUM(count) FROM (SELECT ALL ((((LIKE(t0.c41, vt0.c0, '2')) BETWEEN (((t0.c41)<>(vt1.c0))) AND (0xffffffffa500a6b0))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON ((UNLIKELY(DISTINCT t0.c52)) BETWEEN (((t0.c52)LIKE('390192607'))) AND (t0.c48)) FULL OUTER JOIN vt0 ON ((NOT (t0.c81)) IN ()) INNER JOIN t1 ON (((0Xffffffffcd27d6d0, x'', ((t1.c2) NOT BETWEEN (t1.c0) AND (t0.c52))))<((QUOTE(NULL), ((t0.c48)IS NOT(t0.c41)), ((vt0.c0)||(t1.c1))))));
SELECT COUNT(*) FROM t0 INNER JOIN vt1 ON ((UNLIKELY(DISTINCT t0.c52)) BETWEEN (((t0.c52)LIKE('390192607'))) AND (t0.c48)) FULL OUTER JOIN vt0 ON ((NOT (t0.c81)) IN ()) INNER JOIN t1 ON (((0Xffffffffcd27d6d0, x'', ((t1.c2) NOT BETWEEN (t1.c0) AND (t0.c52))))<((QUOTE(NULL), ((t0.c48)IS NOT(t0.c41)), ((vt0.c0)||(t1.c1))))) WHERE (((LIKE(t0.c41, vt0.c0, '2')) BETWEEN (((t0.c41)<>(vt1.c0))) AND (0xffffffffa500a6b0)));
SELECT COUNT(*) FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (t1.c0);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))-(LIKELIHOOD(DISTINCT vt1.c0, 0.31000360679063843))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))-(LIKELIHOOD(DISTINCT vt1.c0, 0.31000360679063843)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))-(LIKELIHOOD(DISTINCT vt1.c0, 0.31000360679063843))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))-(LIKELIHOOD(DISTINCT vt1.c0, 0.31000360679063843)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))-(LIKELIHOOD(DISTINCT vt1.c0, 0.31000360679063843))));
SELECT * FROM vt0, t1, vt1, t0 WHERE ((((t1.c2, t0.c48, t1.c2)) NOT BETWEEN ((t0.c81, UPPER(DISTINCT t0.c48), (((t1.c0))=((t0.c52))))) AND ((((t0.c48) BETWEEN (vt0.c0) AND (t1.c0)), NULL, json_quote(t1.c0))))) ORDER BY CAST(t0.c48 AS NUMERIC) ASC, ((((((((((t0.c48)IS NOT(t1.c2)))AND((+ (vt0.c0)))))OR(CASE WHEN t1.c0 THEN t0.c84 WHEN t0.c84 THEN vt1.c0 WHEN t0.c41 THEN t1.c1 ELSE t1.c1 END)))AND((~ (NULL)))))AND(((t1.c0)|(t1.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t1.c2, t0.c48, t1.c2)) NOT BETWEEN ((t0.c81, UPPER(DISTINCT t0.c48), (((t1.c0))==((t0.c52))))) AND ((((t0.c48) BETWEEN (vt0.c0) AND (t1.c0)), NULL, json_quote(t1.c0))))) IS TRUE)  as count FROM vt0, t1, vt1, t0 ORDER BY CAST(t0.c48 AS NUMERIC) ASC, ((((((((((t0.c48)IS NOT(t1.c2)))AND((+ (vt0.c0)))))OR(CASE WHEN t1.c0 THEN t0.c84 WHEN t0.c84 THEN vt1.c0 WHEN t0.c41 THEN t1.c1 ELSE t1.c1 END)))AND((~ (NULL)))))AND(((t1.c0)|(t1.c2)))) DESC  NULLS LAST);
SELECT * FROM vt0, t1, vt1, t0 WHERE ((((t1.c2, t0.c48, t1.c2)) NOT BETWEEN ((t0.c81, UPPER(DISTINCT t0.c48), (((t1.c0))=((t0.c52))))) AND ((((t0.c48) BETWEEN (vt0.c0) AND (t1.c0)), NULL, json_quote(t1.c0))))) ORDER BY CAST(t0.c48 AS NUMERIC) ASC, ((((((((((t0.c48)IS NOT(t1.c2)))AND((+ (vt0.c0)))))OR(CASE WHEN t1.c0 THEN t0.c84 WHEN t0.c84 THEN vt1.c0 WHEN t0.c41 THEN t1.c1 ELSE t1.c1 END)))AND((~ (NULL)))))AND(((t1.c0)|(t1.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t1.c2, t0.c48, t1.c2)) NOT BETWEEN ((t0.c81, UPPER(DISTINCT t0.c48), (((t1.c0))==((t0.c52))))) AND ((((t0.c48) BETWEEN (vt0.c0) AND (t1.c0)), NULL, json_quote(t1.c0))))) IS TRUE)  as count FROM vt0, t1, vt1, t0 ORDER BY CAST(t0.c48 AS NUMERIC) ASC, ((((((((((t0.c48)IS NOT(t1.c2)))AND((+ (vt0.c0)))))OR(CASE WHEN t1.c0 THEN t0.c84 WHEN t0.c84 THEN vt1.c0 WHEN t0.c41 THEN t1.c1 ELSE t1.c1 END)))AND((~ (NULL)))))AND(((t1.c0)|(t1.c2)))) DESC  NULLS LAST);
SELECT * FROM vt0, t1, vt1, t0 WHERE ((((t1.c2, t0.c48, t1.c2)) NOT BETWEEN ((t0.c81, UPPER(DISTINCT t0.c48), (((t1.c0))=((t0.c52))))) AND ((((t0.c48) BETWEEN (vt0.c0) AND (t1.c0)), NULL, json_quote(t1.c0))))) ORDER BY CAST(t0.c48 AS NUMERIC) ASC, ((((((((((t0.c48)IS NOT(t1.c2)))AND((+ (vt0.c0)))))OR(CASE WHEN t1.c0 THEN t0.c84 WHEN t0.c84 THEN vt1.c0 WHEN t0.c41 THEN t1.c1 ELSE t1.c1 END)))AND((~ (NULL)))))AND(((t1.c0)|(t1.c2)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt1, t1 RIGHT OUTER JOIN vt0 ON 0.2904246835036889 WHERE (NULLIF(DISTINCT UPPER(t1.c1), (+ (t1.c2))));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT UPPER(t1.c1), (+ (t1.c2)))) IS TRUE)  as count FROM vt1, t1 RIGHT OUTER JOIN vt0 ON 0.2904246835036889);
SELECT COUNT(*) FROM vt1, t1 RIGHT OUTER JOIN vt0 ON 0.2904246835036889 WHERE (NULLIF(DISTINCT UPPER(t1.c1), (+ (t1.c2))));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT UPPER(t1.c1), (+ (t1.c2)))) IS TRUE)  as count FROM vt1, t1 RIGHT OUTER JOIN vt0 ON 0.2904246835036889);
SELECT COUNT(*) FROM vt1, t1 RIGHT OUTER JOIN vt0 ON 0.2904246835036889 WHERE (NULLIF(DISTINCT UPPER(t1.c1), (+ (t1.c2))));
SELECT COUNT(*) FROM vt0, t0, t1 WHERE (((((vt0.c0) ISNULL)) BETWEEN (LIKELY(t0.c41)) AND (CASE WHEN t0.c52 THEN t0.c81 WHEN t0.c52 THEN t0.c41 WHEN t0.c52 THEN t1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL)) BETWEEN (LIKELY(t0.c41)) AND (CASE WHEN t0.c52 THEN t0.c81 WHEN t0.c52 THEN t0.c41 WHEN t0.c52 THEN t1.c0 END))) IS TRUE)  as count FROM vt0, t0, t1);
SELECT COUNT(*) FROM vt0, t0, t1 WHERE (((((vt0.c0) ISNULL)) BETWEEN (LIKELY(t0.c41)) AND (CASE WHEN t0.c52 THEN t0.c81 WHEN t0.c52 THEN t0.c41 WHEN t0.c52 THEN t1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL)) BETWEEN (LIKELY(t0.c41)) AND (CASE WHEN t0.c52 THEN t0.c81 WHEN t0.c52 THEN t0.c41 WHEN t0.c52 THEN t1.c0 END))) IS TRUE)  as count FROM vt0, t0, t1);
SELECT COUNT(*) FROM vt0, t0, t1 WHERE (((((vt0.c0) ISNULL)) BETWEEN (LIKELY(t0.c41)) AND (CASE WHEN t0.c52 THEN t0.c81 WHEN t0.c52 THEN t0.c41 WHEN t0.c52 THEN t1.c0 END)));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((CAST(t0.c48 AS NUMERIC)) NOTNULL) WHERE (CAST(((t0.c81)||(t0.c48)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c81)||(t0.c48)) AS INTEGER)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((CAST(t0.c48 AS NUMERIC)) NOTNULL));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((CAST(t0.c48 AS NUMERIC)) NOTNULL) WHERE (CAST(((t0.c81)||(t0.c48)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c81)||(t0.c48)) AS INTEGER)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((CAST(t0.c48 AS NUMERIC)) NOTNULL));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((CAST(t0.c48 AS NUMERIC)) NOTNULL) WHERE (CAST(((t0.c81)||(t0.c48)) AS INTEGER));
SELECT ALL * FROM vt0, t1 WHERE (((((vt0.c0) IS FALSE)) NOT NULL)) ORDER BY ((CAST(t1.c1 AS TEXT))/(LIKELY(t1.c0))), (((((t1.c2))=((vt0.c0)))) NOT BETWEEN (GLOB(t1.c0, t1.c0)) AND (((((t1.c0)AND(t1.c2)))AND(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS FALSE)) NOT NULL)) IS TRUE)  as count FROM vt0, t1 ORDER BY ((CAST(t1.c1 AS TEXT))/(LIKELY(t1.c0))), (((((t1.c2))==((vt0.c0)))) NOT BETWEEN (GLOB(t1.c0, t1.c0)) AND (((((t1.c0)AND(t1.c2)))AND(vt0.c0)))) ASC);
SELECT ALL * FROM vt0, t1 WHERE (((((vt0.c0) IS FALSE)) NOT NULL)) ORDER BY ((CAST(t1.c1 AS TEXT))/(LIKELY(t1.c0))), (((((t1.c2))=((vt0.c0)))) NOT BETWEEN (GLOB(t1.c0, t1.c0)) AND (((((t1.c0)AND(t1.c2)))AND(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS FALSE)) NOT NULL)) IS TRUE)  as count FROM vt0, t1 ORDER BY ((CAST(t1.c1 AS TEXT))/(LIKELY(t1.c0))), (((((t1.c2))==((vt0.c0)))) NOT BETWEEN (GLOB(t1.c0, t1.c0)) AND (((((t1.c0)AND(t1.c2)))AND(vt0.c0)))) ASC);
SELECT ALL * FROM vt0, t1 WHERE (((((vt0.c0) IS FALSE)) NOT NULL)) ORDER BY ((CAST(t1.c1 AS TEXT))/(LIKELY(t1.c0))), (((((t1.c2))=((vt0.c0)))) NOT BETWEEN (GLOB(t1.c0, t1.c0)) AND (((((t1.c0)AND(t1.c2)))AND(vt0.c0)))) ASC;
SELECT ALL * FROM vt0, vt1 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(json_quote(vt0.c0))))AND(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(json_quote(vt0.c0))))AND(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(json_quote(vt0.c0))))AND(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(json_quote(vt0.c0))))AND(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM t1 FULL OUTER JOIN vt1 ON COALESCE(((t1.c0) BETWEEN (t1.c1) AND (t1.c0)), (((t1.c1)) BETWEEN ((t1.c1)) AND ((vt1.c0)))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t1 FULL OUTER JOIN vt1 ON COALESCE(((t1.c0) BETWEEN (t1.c1) AND (t1.c0)), (((t1.c1)) BETWEEN ((t1.c1)) AND ((vt1.c0)))));
SELECT * FROM t1 FULL OUTER JOIN vt1 ON COALESCE(((t1.c0) BETWEEN (t1.c1) AND (t1.c0)), (((t1.c1)) BETWEEN ((t1.c1)) AND ((vt1.c0)))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t1 FULL OUTER JOIN vt1 ON COALESCE(((t1.c0) BETWEEN (t1.c1) AND (t1.c0)), (((t1.c1)) BETWEEN ((t1.c1)) AND ((vt1.c0)))));
SELECT * FROM t1 FULL OUTER JOIN vt1 ON COALESCE(((t1.c0) BETWEEN (t1.c1) AND (t1.c0)), (((t1.c1)) BETWEEN ((t1.c1)) AND ((vt1.c0)))) WHERE (x'');
SELECT * FROM vt0, vt1, t1, t0 WHERE ((t0.c41 IN ()) COLLATE RTRIM) ORDER BY ((((t1.c0) BETWEEN (t1.c2) AND (t1.c2)))OR(x'0546' COLLATE NOCASE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c41 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1, t1, t0 ORDER BY ((((t1.c0) BETWEEN (t1.c2) AND (t1.c2)))OR(x'0546' COLLATE NOCASE)) ASC  NULLS LAST);
SELECT * FROM vt0, vt1, t1, t0 WHERE ((t0.c41 IN ()) COLLATE RTRIM) ORDER BY ((((t1.c0) BETWEEN (t1.c2) AND (t1.c2)))OR(x'0546' COLLATE NOCASE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c41 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1, t1, t0 ORDER BY ((((t1.c0) BETWEEN (t1.c2) AND (t1.c2)))OR(x'0546' COLLATE NOCASE)) ASC  NULLS LAST);
SELECT * FROM vt0, vt1, t1, t0 WHERE ((t0.c41 IN ()) COLLATE RTRIM) ORDER BY ((((t1.c0) BETWEEN (t1.c2) AND (t1.c2)))OR(x'0546' COLLATE NOCASE)) ASC  NULLS LAST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON (((((t0.c52)||(x'2d86'))))<=((((((((((vt0.c0)OR(t0.c81)))OR(vt1.c0)))OR(x'2212')))OR(t0.c41))))) FULL OUTER JOIN vt1 ON (+ (t0.c48)) WHERE ((((((((((NOT (t0.c41)))OR(((vt0.c0)<<(vt1.c0)))))OR(t0.c84)))AND((((t0.c41))!=((t0.c52))))))OR(json_extract(t0.c81, t0.c81, t0.c48, t0.c84))));
SELECT SUM(count) FROM (SELECT (((((((((((NOT (t0.c41)))OR(((vt0.c0)<<(vt1.c0)))))OR(t0.c84)))AND((((t0.c41))!=((t0.c52))))))OR(json_extract(t0.c81, t0.c81, t0.c48, t0.c84)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (((((t0.c52)||(x'2d86'))))<=((((((((((vt0.c0)OR(t0.c81)))OR(vt1.c0)))OR(x'2212')))OR(t0.c41))))) FULL OUTER JOIN vt1 ON (+ (t0.c48)));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON (((((t0.c52)||(x'2d86'))))<=((((((((((vt0.c0)OR(t0.c81)))OR(vt1.c0)))OR(x'2212')))OR(t0.c41))))) FULL OUTER JOIN vt1 ON (+ (t0.c48)) WHERE ((((((((((NOT (t0.c41)))OR(((vt0.c0)<<(vt1.c0)))))OR(t0.c84)))AND((((t0.c41))!=((t0.c52))))))OR(json_extract(t0.c81, t0.c81, t0.c48, t0.c84))));
SELECT SUM(count) FROM (SELECT (((((((((((NOT (t0.c41)))OR(((vt0.c0)<<(vt1.c0)))))OR(t0.c84)))AND((((t0.c41))!=((t0.c52))))))OR(json_extract(t0.c81, t0.c81, t0.c48, t0.c84)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (((((t0.c52)||(x'2d86'))))<=((((((((((vt0.c0)OR(t0.c81)))OR(vt1.c0)))OR(x'2212')))OR(t0.c41))))) FULL OUTER JOIN vt1 ON (+ (t0.c48)));
SELECT ALL COUNT(*) FROM vt1, t1, t0 WHERE ((((t1.c1, t1.c1, t0.c84)) NOT BETWEEN ((((t1.c2) NOTNULL), 0.30131375421687334, (vt1.c0 IN ()))) AND ((((t0.c84)/(vt1.c0)), CHANGES(), NULL COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((t1.c1, t1.c1, t0.c84)) NOT BETWEEN ((((t1.c2) NOTNULL), 0.30131375421687334, (vt1.c0 IN ()))) AND ((((t0.c84)/(vt1.c0)), CHANGES(), NULL COLLATE NOCASE)))) IS TRUE)  as count FROM vt1, t1, t0);
SELECT ALL COUNT(*) FROM vt1, t1, t0 WHERE ((((t1.c1, t1.c1, t0.c84)) NOT BETWEEN ((((t1.c2) NOTNULL), 0.30131375421687334, (vt1.c0 IN ()))) AND ((((t0.c84)/(vt1.c0)), CHANGES(), NULL COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((t1.c1, t1.c1, t0.c84)) NOT BETWEEN ((((t1.c2) NOTNULL), 0.30131375421687334, (vt1.c0 IN ()))) AND ((((t0.c84)/(vt1.c0)), CHANGES(), NULL COLLATE NOCASE)))) IS TRUE)  as count FROM vt1, t1, t0);
SELECT ALL COUNT(*) FROM vt1, t1, t0 WHERE ((((t1.c1, t1.c1, t0.c84)) NOT BETWEEN ((((t1.c2) NOTNULL), 0.30131375421687334, (vt1.c0 IN ()))) AND ((((t0.c84)/(vt1.c0)), CHANGES(), NULL COLLATE NOCASE))));
SELECT ALL * FROM t1, t0 WHERE ((NOT (CAST(t1.c1 AS REAL)))) ORDER BY t0.c84 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(t1.c1 AS REAL)))) IS TRUE)  as count FROM t1, t0 ORDER BY t0.c84 DESC  NULLS FIRST);
SELECT ALL * FROM t1, t0 WHERE ((NOT (CAST(t1.c1 AS REAL)))) ORDER BY t0.c84 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(t1.c1 AS REAL)))) IS TRUE)  as count FROM t1, t0 ORDER BY t0.c84 DESC  NULLS FIRST);
SELECT ALL * FROM t1, t0 WHERE ((NOT (CAST(t1.c1 AS REAL)))) ORDER BY t0.c84 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 INNER JOIN t0 ON ((UPPER(t0.c48))|('c乐us?Jg]')) WHERE (((((vt1.c0) NOT BETWEEN (vt0.c0) AND (t0.c81))) NOT BETWEEN (CASE t0.c52  WHEN vt1.c0 THEN t0.c52 ELSE t0.c48 END) AND (vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (t0.c81))) NOT BETWEEN (CASE t0.c52  WHEN vt1.c0 THEN t0.c52 ELSE t0.c48 END) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, vt1 INNER JOIN t0 ON ((UPPER(t0.c48))|('c乐us?Jg]')));
SELECT ALL COUNT(*) FROM vt0, vt1 INNER JOIN t0 ON ((UPPER(t0.c48))|('c乐us?Jg]')) WHERE (((((vt1.c0) NOT BETWEEN (vt0.c0) AND (t0.c81))) NOT BETWEEN (CASE t0.c52  WHEN vt1.c0 THEN t0.c52 ELSE t0.c48 END) AND (vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (t0.c81))) NOT BETWEEN (CASE t0.c52  WHEN vt1.c0 THEN t0.c52 ELSE t0.c48 END) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, vt1 INNER JOIN t0 ON ((UPPER(t0.c48))|('c乐us?Jg]')));
SELECT ALL COUNT(*) FROM vt0, vt1 INNER JOIN t0 ON ((UPPER(t0.c48))|('c乐us?Jg]')) WHERE (((((vt1.c0) NOT BETWEEN (vt0.c0) AND (t0.c81))) NOT BETWEEN (CASE t0.c52  WHEN vt1.c0 THEN t0.c52 ELSE t0.c48 END) AND (vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM vt0, vt1 RIGHT OUTER JOIN t1 ON ((t0.c81)<(NULL)) COLLATE RTRIM INNER JOIN t0 ON (((((t1.c2 IN ()))OR((NOT (t1.c2)))))AND((x'' IN ()))) WHERE ((~ (((NULL) NOT BETWEEN (t0.c81) AND (t0.c48)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((NULL) NOT BETWEEN (t0.c81) AND (t0.c48))))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t1 ON ((t0.c81)<(NULL)) COLLATE RTRIM INNER JOIN t0 ON (((((t1.c2 IN ()))OR((NOT (t1.c2)))))AND((x'' IN ()))));
SELECT ALL * FROM vt0, vt1 RIGHT OUTER JOIN t1 ON ((t0.c81)<(NULL)) COLLATE RTRIM INNER JOIN t0 ON (((((t1.c2 IN ()))OR((NOT (t1.c2)))))AND((x'' IN ()))) WHERE ((~ (((NULL) NOT BETWEEN (t0.c81) AND (t0.c48)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((NULL) NOT BETWEEN (t0.c81) AND (t0.c48))))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t1 ON ((t0.c81)<(NULL)) COLLATE RTRIM INNER JOIN t0 ON (((((t1.c2 IN ()))OR((NOT (t1.c2)))))AND((x'' IN ()))));
SELECT ALL * FROM vt0, vt1 RIGHT OUTER JOIN t1 ON ((t0.c81)<(NULL)) COLLATE RTRIM INNER JOIN t0 ON (((((t1.c2 IN ()))OR((NOT (t1.c2)))))AND((x'' IN ()))) WHERE ((~ (((NULL) NOT BETWEEN (t0.c81) AND (t0.c48)))));
SELECT COUNT(*) FROM vt1, t0 WHERE (CAST(((((t0.c81)OR(t0.c41)))OR(t0.c48)) AS REAL)) ORDER BY CASE 9.36985878E8  WHEN '0.9395558123990894' THEN ((t0.c81)/(t0.c48)) WHEN t0.c84 THEN ((t0.c84) BETWEEN (vt1.c0) AND (t0.c48)) WHEN ((t0.c52) BETWEEN (t0.c52) AND (0xffffffffc5f2da5c)) THEN TYPEOF(DISTINCT t0.c81) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c81)OR(t0.c41)))OR(t0.c48)) AS REAL)) IS TRUE)  as count FROM vt1, t0 ORDER BY CASE 9.36985878E8  WHEN '0.9395558123990894' THEN ((t0.c81)/(t0.c48)) WHEN t0.c84 THEN ((t0.c84) BETWEEN (vt1.c0) AND (t0.c48)) WHEN ((t0.c52) BETWEEN (t0.c52) AND (0xffffffffc5f2da5c)) THEN TYPEOF(DISTINCT t0.c81) END ASC);
SELECT COUNT(*) FROM vt1, t0 WHERE (CAST(((((t0.c81)OR(t0.c41)))OR(t0.c48)) AS REAL)) ORDER BY CASE 9.36985878E8  WHEN '0.9395558123990894' THEN ((t0.c81)/(t0.c48)) WHEN t0.c84 THEN ((t0.c84) BETWEEN (vt1.c0) AND (t0.c48)) WHEN ((t0.c52) BETWEEN (t0.c52) AND (0xffffffffc5f2da5c)) THEN TYPEOF(DISTINCT t0.c81) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c81)OR(t0.c41)))OR(t0.c48)) AS REAL)) IS TRUE)  as count FROM vt1, t0 ORDER BY CASE 9.36985878E8  WHEN '0.9395558123990894' THEN ((t0.c81)/(t0.c48)) WHEN t0.c84 THEN ((t0.c84) BETWEEN (vt1.c0) AND (t0.c48)) WHEN ((t0.c52) BETWEEN (t0.c52) AND (0xffffffffc5f2da5c)) THEN TYPEOF(DISTINCT t0.c81) END ASC);
SELECT COUNT(*) FROM vt1, t0 WHERE (CAST(((((t0.c81)OR(t0.c41)))OR(t0.c48)) AS REAL)) ORDER BY CASE 9.36985878E8  WHEN '0.9395558123990894' THEN ((t0.c81)/(t0.c48)) WHEN t0.c84 THEN ((t0.c84) BETWEEN (vt1.c0) AND (t0.c48)) WHEN ((t0.c52) BETWEEN (t0.c52) AND (0xffffffffc5f2da5c)) THEN TYPEOF(DISTINCT t0.c81) END ASC;
SELECT ALL * FROM t0, vt0 WHERE (((0.5114420522823038) NOTNULL)) ORDER BY ((((t0.c41) NOT NULL))LIKE(t0.c48)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.5114420522823038) NOTNULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c41) NOT NULL))LIKE(t0.c48)) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (((0.5114420522823038) NOTNULL)) ORDER BY ((((t0.c41) NOT NULL))LIKE(t0.c48)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.5114420522823038) NOTNULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c41) NOT NULL))LIKE(t0.c48)) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (((0.5114420522823038) NOTNULL)) ORDER BY ((((t0.c41) NOT NULL))LIKE(t0.c48)) ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (CASE WHEN CASE 0.4108088630140193  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END THEN CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END WHEN ((t1.c1)*(t1.c2)) THEN ((t1.c1)IS(t1.c0)) WHEN (t1.c1 IN ()) THEN (((t1.c1)) BETWEEN ((t1.c2)) AND ((t1.c1))) END) ORDER BY ((t1.c1 IN (t1.c2, t1.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE 0.4108088630140193  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END THEN CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END WHEN ((t1.c1)*(t1.c2)) THEN ((t1.c1)IS(t1.c0)) WHEN (t1.c1 IN ()) THEN (((t1.c1)) BETWEEN ((t1.c2)) AND ((t1.c1))) END) IS TRUE)  as count FROM t1 ORDER BY ((t1.c1 IN (t1.c2, t1.c0)) IN ())  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (CASE WHEN CASE 0.4108088630140193  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END THEN CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END WHEN ((t1.c1)*(t1.c2)) THEN ((t1.c1)IS(t1.c0)) WHEN (t1.c1 IN ()) THEN (((t1.c1)) BETWEEN ((t1.c2)) AND ((t1.c1))) END) ORDER BY ((t1.c1 IN (t1.c2, t1.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE 0.4108088630140193  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END THEN CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END WHEN ((t1.c1)*(t1.c2)) THEN ((t1.c1)IS(t1.c0)) WHEN (t1.c1 IN ()) THEN (((t1.c1)) BETWEEN ((t1.c2)) AND ((t1.c1))) END) IS TRUE)  as count FROM t1 ORDER BY ((t1.c1 IN (t1.c2, t1.c0)) IN ())  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (CASE WHEN CASE 0.4108088630140193  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END THEN CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END WHEN ((t1.c1)*(t1.c2)) THEN ((t1.c1)IS(t1.c0)) WHEN (t1.c1 IN ()) THEN (((t1.c1)) BETWEEN ((t1.c2)) AND ((t1.c1))) END) ORDER BY ((t1.c1 IN (t1.c2, t1.c0)) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)) ORDER BY CAST((vt0.c0 IN ()) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c0 IN ()) AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)) ORDER BY CAST((vt0.c0 IN ()) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c0 IN ()) AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)) ORDER BY CAST((vt0.c0 IN ()) AS REAL)  NULLS FIRST;
SELECT * FROM vt0, vt1, t0, t1 WHERE (((t0.c81)!=(t0.c48)) COLLATE NOCASE) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c2) AND (t0.c48))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c81)<>(t0.c48)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1, t0, t1 ORDER BY ((((t1.c0) NOT BETWEEN (t1.c2) AND (t0.c48))) ISNULL) ASC  NULLS FIRST);
SELECT * FROM vt0, vt1, t0, t1 WHERE (((t0.c81)!=(t0.c48)) COLLATE NOCASE) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c2) AND (t0.c48))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c81)<>(t0.c48)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1, t0, t1 ORDER BY ((((t1.c0) NOT BETWEEN (t1.c2) AND (t0.c48))) ISNULL) ASC  NULLS FIRST);
SELECT * FROM vt0, vt1, t0, t1 WHERE (((t0.c81)!=(t0.c48)) COLLATE NOCASE) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c2) AND (t0.c48))) ISNULL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t1, vt1, t0 WHERE ((((vt1.c0, t0.c52, t0.c52, t0.c84, t1.c1)) NOT BETWEEN ((((t0.c41) BETWEEN (t0.c84) AND (t1.c0)), LENGTH(NULL), ((t0.c81) NOT BETWEEN (vt1.c0) AND (t0.c81)), ((t0.c48) ISNULL), (+ (t0.c84)))) AND ((CAST(t1.c1 AS INTEGER), vt1.c0, (t0.c41 IN ()), ((t1.c0)IS NOT(vt1.c0)), t0.c52 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, t0.c52, t0.c52, t0.c84, t1.c1)) NOT BETWEEN ((((t0.c41) BETWEEN (t0.c84) AND (t1.c0)), LENGTH(NULL), ((t0.c81) NOT BETWEEN (vt1.c0) AND (t0.c81)), ((t0.c48) ISNULL), (+ (t0.c84)))) AND ((CAST(t1.c1 AS INTEGER), vt1.c0, (t0.c41 IN ()), ((t1.c0)IS NOT(vt1.c0)), t0.c52 COLLATE NOCASE)))) IS TRUE)  as count FROM t1, vt1, t0);
SELECT COUNT(*) FROM t1, vt1, t0 WHERE ((((vt1.c0, t0.c52, t0.c52, t0.c84, t1.c1)) NOT BETWEEN ((((t0.c41) BETWEEN (t0.c84) AND (t1.c0)), LENGTH(NULL), ((t0.c81) NOT BETWEEN (vt1.c0) AND (t0.c81)), ((t0.c48) ISNULL), (+ (t0.c84)))) AND ((CAST(t1.c1 AS INTEGER), vt1.c0, (t0.c41 IN ()), ((t1.c0)IS NOT(vt1.c0)), t0.c52 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, t0.c52, t0.c52, t0.c84, t1.c1)) NOT BETWEEN ((((t0.c41) BETWEEN (t0.c84) AND (t1.c0)), LENGTH(NULL), ((t0.c81) NOT BETWEEN (vt1.c0) AND (t0.c81)), ((t0.c48) ISNULL), (+ (t0.c84)))) AND ((CAST(t1.c1 AS INTEGER), vt1.c0, (t0.c41 IN ()), ((t1.c0)IS NOT(vt1.c0)), t0.c52 COLLATE NOCASE)))) IS TRUE)  as count FROM t1, vt1, t0);
SELECT COUNT(*) FROM t1, vt1, t0 WHERE ((((vt1.c0, t0.c52, t0.c52, t0.c84, t1.c1)) NOT BETWEEN ((((t0.c41) BETWEEN (t0.c84) AND (t1.c0)), LENGTH(NULL), ((t0.c81) NOT BETWEEN (vt1.c0) AND (t0.c81)), ((t0.c48) ISNULL), (+ (t0.c84)))) AND ((CAST(t1.c1 AS INTEGER), vt1.c0, (t0.c41 IN ()), ((t1.c0)IS NOT(vt1.c0)), t0.c52 COLLATE NOCASE))));
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((vt0.c0) NOTNULL) COLLATE BINARY) ORDER BY (((((x'' IN ()))AND(CAST(t0.c52 AS NUMERIC))))AND(CAST(t0.c84 AS REAL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (((((x'' IN ()))AND(CAST(t0.c52 AS NUMERIC))))AND(CAST(t0.c84 AS REAL))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((vt0.c0) NOTNULL) COLLATE BINARY) ORDER BY (((((x'' IN ()))AND(CAST(t0.c52 AS NUMERIC))))AND(CAST(t0.c84 AS REAL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (((((x'' IN ()))AND(CAST(t0.c52 AS NUMERIC))))AND(CAST(t0.c84 AS REAL))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((t1.c2)) BETWEEN ((TIME(t1.c0, t1.c1, t1.c1))) AND (((((t1.c2)) NOT BETWEEN ((0x9257784)) AND ((t1.c2)))))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c2)) BETWEEN ((TIME(t1.c0, t1.c1, t1.c1))) AND (((((t1.c2)) NOT BETWEEN ((0x9257784)) AND ((t1.c2))))))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((t1.c2)) BETWEEN ((TIME(t1.c0, t1.c1, t1.c1))) AND (((((t1.c2)) NOT BETWEEN ((0x9257784)) AND ((t1.c2)))))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c2)) BETWEEN ((TIME(t1.c0, t1.c1, t1.c1))) AND (((((t1.c2)) NOT BETWEEN ((0x9257784)) AND ((t1.c2))))))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((t1.c2)) BETWEEN ((TIME(t1.c0, t1.c1, t1.c1))) AND (((((t1.c2)) NOT BETWEEN ((0x9257784)) AND ((t1.c2)))))));
SELECT * FROM t1 NOT INDEXED, vt1, t0, vt0 WHERE (CAST(CASE WHEN vt1.c0 THEN vt0.c0 ELSE t0.c48 END AS NUMERIC)) ORDER BY ((((t1.c1)<<(t0.c52)))AND(((t0.c41)-(t0.c81)))) DESC  NULLS FIRST, 0xffffffffeb2a063f  NULLS FIRST, ((((t1.c1) NOTNULL)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt1.c0 THEN vt0.c0 ELSE t0.c48 END AS NUMERIC)) IS TRUE)  as count FROM t1, vt1, t0, vt0 ORDER BY ((((t1.c1)<<(t0.c52)))AND(((t0.c41)-(t0.c81)))) DESC  NULLS FIRST, 0Xffffffffeb2a063f  NULLS FIRST, ((((t1.c1) NOTNULL)) NOTNULL) DESC);
SELECT * FROM t1 NOT INDEXED, vt1, t0, vt0 WHERE (CAST(CASE WHEN vt1.c0 THEN vt0.c0 ELSE t0.c48 END AS NUMERIC)) ORDER BY ((((t1.c1)<<(t0.c52)))AND(((t0.c41)-(t0.c81)))) DESC  NULLS FIRST, 0xffffffffeb2a063f  NULLS FIRST, ((((t1.c1) NOTNULL)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt1.c0 THEN vt0.c0 ELSE t0.c48 END AS NUMERIC)) IS TRUE)  as count FROM t1, vt1, t0, vt0 ORDER BY ((((t1.c1)<<(t0.c52)))AND(((t0.c41)-(t0.c81)))) DESC  NULLS FIRST, 0Xffffffffeb2a063f  NULLS FIRST, ((((t1.c1) NOTNULL)) NOTNULL) DESC);
SELECT * FROM t1 NOT INDEXED, vt1, t0, vt0 WHERE (CAST(CASE WHEN vt1.c0 THEN vt0.c0 ELSE t0.c48 END AS NUMERIC)) ORDER BY ((((t1.c1)<<(t0.c52)))AND(((t0.c41)-(t0.c81)))) DESC  NULLS FIRST, 0xffffffffeb2a063f  NULLS FIRST, ((((t1.c1) NOTNULL)) NOTNULL) DESC;
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN t1 ON CAST(CAST(t1.c0 AS TEXT) AS REAL) RIGHT OUTER JOIN vt1 ON ((((((((vt1.c0)OR(x'')))OR(t1.c0)))OR(t0.c41)))OR(vt1.c0)) COLLATE BINARY WHERE ((((NOT (t1.c0)))/(((t1.c0) NOTNULL)))) ORDER BY ((((t1.c0)AND(LOWER(DISTINCT t0.c84))))OR(t0.c84 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t1.c0)))/(((t1.c0) NOTNULL)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN t1 ON CAST(CAST(t1.c0 AS TEXT) AS REAL) RIGHT OUTER JOIN vt1 ON ((((((((vt1.c0)OR(x'')))OR(t1.c0)))OR(t0.c41)))OR(vt1.c0)) COLLATE BINARY ORDER BY ((((t1.c0)AND(LOWER(DISTINCT t0.c84))))OR(t0.c84 COLLATE NOCASE)) ASC);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN t1 ON CAST(CAST(t1.c0 AS TEXT) AS REAL) RIGHT OUTER JOIN vt1 ON ((((((((vt1.c0)OR(x'')))OR(t1.c0)))OR(t0.c41)))OR(vt1.c0)) COLLATE BINARY WHERE ((((NOT (t1.c0)))/(((t1.c0) NOTNULL)))) ORDER BY ((((t1.c0)AND(LOWER(DISTINCT t0.c84))))OR(t0.c84 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t1.c0)))/(((t1.c0) NOTNULL)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN t1 ON CAST(CAST(t1.c0 AS TEXT) AS REAL) RIGHT OUTER JOIN vt1 ON ((((((((vt1.c0)OR(x'')))OR(t1.c0)))OR(t0.c41)))OR(vt1.c0)) COLLATE BINARY ORDER BY ((((t1.c0)AND(LOWER(DISTINCT t0.c84))))OR(t0.c84 COLLATE NOCASE)) ASC);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN t1 ON CAST(CAST(t1.c0 AS TEXT) AS REAL) RIGHT OUTER JOIN vt1 ON ((((((((vt1.c0)OR(x'')))OR(t1.c0)))OR(t0.c41)))OR(vt1.c0)) COLLATE BINARY WHERE ((((NOT (t1.c0)))/(((t1.c0) NOTNULL)))) ORDER BY ((((t1.c0)AND(LOWER(DISTINCT t0.c84))))OR(t0.c84 COLLATE NOCASE)) ASC;
SELECT ALL * FROM vt0, vt1, t1, t0 WHERE (((TYPEOF(t0.c52)) BETWEEN (CAST(NULL AS TEXT)) AND (0.2034700546598739))) ORDER BY ((LENGTH(t0.c81))OR((t0.c84 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(t0.c52)) BETWEEN (CAST(NULL AS TEXT)) AND (0.2034700546598739))) IS TRUE)  as count FROM vt0, vt1, t1, t0 ORDER BY ((LENGTH(t0.c81))OR((t0.c84 IN ())))  NULLS LAST);
SELECT ALL * FROM vt0, vt1, t1, t0 WHERE (((TYPEOF(t0.c52)) BETWEEN (CAST(NULL AS TEXT)) AND (0.2034700546598739))) ORDER BY ((LENGTH(t0.c81))OR((t0.c84 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(t0.c52)) BETWEEN (CAST(NULL AS TEXT)) AND (0.2034700546598739))) IS TRUE)  as count FROM vt0, vt1, t1, t0 ORDER BY ((LENGTH(t0.c81))OR((t0.c84 IN ())))  NULLS LAST);
SELECT ALL * FROM vt0, vt1, t1, t0 WHERE (((TYPEOF(t0.c52)) BETWEEN (CAST(NULL AS TEXT)) AND (0.2034700546598739))) ORDER BY ((LENGTH(t0.c81))OR((t0.c84 IN ())))  NULLS LAST;
SELECT COUNT(*) FROM t1, t0 WHERE ((((t1.c1 IN ()))/((((t0.c84, t1.c0, t0.c84))>((t0.c84, t0.c52, t1.c1)))))) ORDER BY (((((0X6d9d656d)IS NOT(t0.c84)), ((t0.c84)GLOB(t1.c0)), t0.c52))=((((t1.c0)>=(t0.c81)), ((t1.c2)>=(t0.c81)), t1.c0))) ASC, UNICODE(t0.c81) COLLATE RTRIM, NULL;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c1 IN ()))/((((t0.c84, t1.c0, t0.c84))>((t0.c84, t0.c52, t1.c1)))))) IS TRUE)  as count FROM t1, t0 ORDER BY (((((0x6d9d656d)IS NOT(t0.c84)), ((t0.c84)GLOB(t1.c0)), t0.c52))=((((t1.c0)>=(t0.c81)), ((t1.c2)>=(t0.c81)), t1.c0))) ASC, UNICODE(t0.c81) COLLATE RTRIM, NULL);
SELECT COUNT(*) FROM t1, t0 WHERE ((((t1.c1 IN ()))/((((t0.c84, t1.c0, t0.c84))>((t0.c84, t0.c52, t1.c1)))))) ORDER BY (((((0X6d9d656d)IS NOT(t0.c84)), ((t0.c84)GLOB(t1.c0)), t0.c52))=((((t1.c0)>=(t0.c81)), ((t1.c2)>=(t0.c81)), t1.c0))) ASC, UNICODE(t0.c81) COLLATE RTRIM, NULL;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c1 IN ()))/((((t0.c84, t1.c0, t0.c84))>((t0.c84, t0.c52, t1.c1)))))) IS TRUE)  as count FROM t1, t0 ORDER BY (((((0x6d9d656d)IS NOT(t0.c84)), ((t0.c84)GLOB(t1.c0)), t0.c52))=((((t1.c0)>=(t0.c81)), ((t1.c2)>=(t0.c81)), t1.c0))) ASC, UNICODE(t0.c81) COLLATE RTRIM, NULL);
SELECT COUNT(*) FROM t1, t0 WHERE ((((t1.c1 IN ()))/((((t0.c84, t1.c0, t0.c84))>((t0.c84, t0.c52, t1.c1)))))) ORDER BY (((((0X6d9d656d)IS NOT(t0.c84)), ((t0.c84)GLOB(t1.c0)), t0.c52))=((((t1.c0)>=(t0.c81)), ((t1.c2)>=(t0.c81)), t1.c0))) ASC, UNICODE(t0.c81) COLLATE RTRIM, NULL;
SELECT * FROM t1, t0 RIGHT OUTER JOIN vt0 ON ((t0.c81 COLLATE RTRIM) NOTNULL) WHERE (((t0.c81)<<(((t0.c41) BETWEEN (t1.c1) AND (t0.c81)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c81)<<(((t0.c41) BETWEEN (t1.c1) AND (t0.c81))))) IS TRUE)  as count FROM t1, t0 RIGHT OUTER JOIN vt0 ON ((t0.c81 COLLATE RTRIM) NOTNULL));
SELECT * FROM t1, t0 RIGHT OUTER JOIN vt0 ON ((t0.c81 COLLATE RTRIM) NOTNULL) WHERE (((t0.c81)<<(((t0.c41) BETWEEN (t1.c1) AND (t0.c81)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c81)<<(((t0.c41) BETWEEN (t1.c1) AND (t0.c81))))) IS TRUE)  as count FROM t1, t0 RIGHT OUTER JOIN vt0 ON ((t0.c81 COLLATE RTRIM) NOTNULL));
SELECT * FROM t1, t0 RIGHT OUTER JOIN vt0 ON ((t0.c81 COLLATE RTRIM) NOTNULL) WHERE (((t0.c81)<<(((t0.c41) BETWEEN (t1.c1) AND (t0.c81)))));
SELECT ALL COUNT(*) FROM vt1, vt0, t1, t0 WHERE (t1.c0) ORDER BY (((t0.c52))==((t1.c1))) COLLATE NOCASE ASC  NULLS FIRST, CASE WHEN (t0.c84 IN ()) THEN ((t0.c81)OR(t0.c84)) ELSE CASE WHEN t1.c0 THEN t1.c0 END END DESC;
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM vt1, vt0, t1, t0 ORDER BY (((t0.c52))==((t1.c1))) COLLATE NOCASE ASC  NULLS FIRST, CASE WHEN (t0.c84 IN ()) THEN ((t0.c81)OR(t0.c84)) ELSE CASE WHEN t1.c0 THEN t1.c0 END END DESC);
SELECT ALL COUNT(*) FROM vt1, vt0, t1, t0 WHERE (t1.c0) ORDER BY (((t0.c52))==((t1.c1))) COLLATE NOCASE ASC  NULLS FIRST, CASE WHEN (t0.c84 IN ()) THEN ((t0.c81)OR(t0.c84)) ELSE CASE WHEN t1.c0 THEN t1.c0 END END DESC;
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM vt1, vt0, t1, t0 ORDER BY (((t0.c52))==((t1.c1))) COLLATE NOCASE ASC  NULLS FIRST, CASE WHEN (t0.c84 IN ()) THEN ((t0.c81)OR(t0.c84)) ELSE CASE WHEN t1.c0 THEN t1.c0 END END DESC);
SELECT ALL COUNT(*) FROM vt1, vt0, t1, t0 WHERE (t1.c0) ORDER BY (((t0.c52))==((t1.c1))) COLLATE NOCASE ASC  NULLS FIRST, CASE WHEN (t0.c84 IN ()) THEN ((t0.c81)OR(t0.c84)) ELSE CASE WHEN t1.c0 THEN t1.c0 END END DESC;
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ('''Z4Mt䙃')))<=((NOT (vt1.c0))))) ORDER BY CAST(vt1.c0 AS REAL), ((((TYPEOF(DISTINCT vt1.c0))OR((((vt1.c0))>=((vt1.c0))))))OR(TRIM(DISTINCT vt1.c0, vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ('''Z4Mt䙃')))<=((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c0 AS REAL), ((((TYPEOF(DISTINCT vt1.c0))OR((((vt1.c0))>=((vt1.c0))))))OR(TRIM(DISTINCT vt1.c0, vt1.c0))));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ('''Z4Mt䙃')))<=((NOT (vt1.c0))))) ORDER BY CAST(vt1.c0 AS REAL), ((((TYPEOF(DISTINCT vt1.c0))OR((((vt1.c0))>=((vt1.c0))))))OR(TRIM(DISTINCT vt1.c0, vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ('''Z4Mt䙃')))<=((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c0 AS REAL), ((((TYPEOF(DISTINCT vt1.c0))OR((((vt1.c0))>=((vt1.c0))))))OR(TRIM(DISTINCT vt1.c0, vt1.c0))));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ('''Z4Mt䙃')))<=((NOT (vt1.c0))))) ORDER BY CAST(vt1.c0 AS REAL), ((((TYPEOF(DISTINCT vt1.c0))OR((((vt1.c0))>=((vt1.c0))))))OR(TRIM(DISTINCT vt1.c0, vt1.c0)));
SELECT COUNT(*) FROM vt1, t1 RIGHT OUTER JOIN t0 ON ((CASE WHEN t0.c52 THEN t1.c2 END)>>(0x202cb563)) INNER JOIN vt0 ON ABS(DISTINCT CAST(t0.c48 AS NUMERIC)) WHERE (t1.c2);
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM vt1, t1 RIGHT OUTER JOIN t0 ON ((CASE WHEN t0.c52 THEN t1.c2 END)>>(0x202cb563)) INNER JOIN vt0 ON ABS(DISTINCT CAST(t0.c48 AS NUMERIC)));
SELECT COUNT(*) FROM vt1, t1 RIGHT OUTER JOIN t0 ON ((CASE WHEN t0.c52 THEN t1.c2 END)>>(0x202cb563)) INNER JOIN vt0 ON ABS(DISTINCT CAST(t0.c48 AS NUMERIC)) WHERE (t1.c2);
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM vt1, t1 RIGHT OUTER JOIN t0 ON ((CASE WHEN t0.c52 THEN t1.c2 END)>>(0x202cb563)) INNER JOIN vt0 ON ABS(DISTINCT CAST(t0.c48 AS NUMERIC)));
SELECT COUNT(*) FROM vt1, t1 RIGHT OUTER JOIN t0 ON ((CASE WHEN t0.c52 THEN t1.c2 END)>>(0x202cb563)) INNER JOIN vt0 ON ABS(DISTINCT CAST(t0.c48 AS NUMERIC)) WHERE (t1.c2);
SELECT * FROM vt0, t1, vt1 WHERE (CASE WHEN ((((vt1.c0)OR(0.9136499227097304)))AND(t1.c0)) THEN ((t1.c2) NOTNULL) ELSE ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt1.c0)OR(0.9136499227097304)))AND(t1.c0)) THEN ((t1.c2) NOTNULL) ELSE ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c2)) END) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT * FROM vt0, t1, vt1 WHERE (CASE WHEN ((((vt1.c0)OR(0.9136499227097304)))AND(t1.c0)) THEN ((t1.c2) NOTNULL) ELSE ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt1.c0)OR(0.9136499227097304)))AND(t1.c0)) THEN ((t1.c2) NOTNULL) ELSE ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c2)) END) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT * FROM vt0, t1, vt1 WHERE (CASE WHEN ((((vt1.c0)OR(0.9136499227097304)))AND(t1.c0)) THEN ((t1.c2) NOTNULL) ELSE ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c2)) END);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((t0.c81)OR(t0.c81)))AND(vt0.c0))) NOT BETWEEN (((vt0.c0) ISNULL)) AND ((~ (t0.c84)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c81)OR(t0.c81)))AND(vt0.c0))) NOT BETWEEN (((vt0.c0) ISNULL)) AND ((~ (t0.c84))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((t0.c81)OR(t0.c81)))AND(vt0.c0))) NOT BETWEEN (((vt0.c0) ISNULL)) AND ((~ (t0.c84)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c81)OR(t0.c81)))AND(vt0.c0))) NOT BETWEEN (((vt0.c0) ISNULL)) AND ((~ (t0.c84))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((t0.c81)OR(t0.c81)))AND(vt0.c0))) NOT BETWEEN (((vt0.c0) ISNULL)) AND ((~ (t0.c84)))));
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((t0.c84)|(t0.c84)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c84)|(t0.c84)) COLLATE BINARY) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((t0.c84)|(t0.c84)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c84)|(t0.c84)) COLLATE BINARY) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((t0.c84)|(t0.c84)) COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)<(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)<(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)<(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)<(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)<(vt0.c0)) AS INTEGER));
SELECT ALL * FROM t0, vt1, t1 WHERE (((((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c0))) ISNULL)) IS TRUE)  as count FROM t0, vt1, t1);
SELECT ALL * FROM t0, vt1, t1 WHERE (((((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c0))) ISNULL)) IS TRUE)  as count FROM t0, vt1, t1);
SELECT ALL * FROM t0, vt1, t1 WHERE (((((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c0))) ISNULL));
SELECT COUNT(*) FROM vt0, vt1 WHERE (LOWER(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) ORDER BY (CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (LOWER(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) ORDER BY (CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (LOWER(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) ORDER BY (CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END IN ()) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0 FULL OUTER JOIN t1 ON ((CASE 0Xfffffffff488b94a  WHEN vt0.c0 THEN t1.c1 END)%(((((t1.c1)OR(t1.c2)))OR(t1.c0)))) WHERE ((NOT ((NOT (t1.c1))))) ORDER BY ((((t0.c48)AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((NOT (t1.c1))))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN t1 ON ((CASE 0xfffffffff488b94a  WHEN vt0.c0 THEN t1.c1 END)%(((((t1.c1)OR(t1.c2)))OR(t1.c0)))) ORDER BY ((((t0.c48)AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, t0 FULL OUTER JOIN t1 ON ((CASE 0Xfffffffff488b94a  WHEN vt0.c0 THEN t1.c1 END)%(((((t1.c1)OR(t1.c2)))OR(t1.c0)))) WHERE ((NOT ((NOT (t1.c1))))) ORDER BY ((((t0.c48)AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((NOT (t1.c1))))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN t1 ON ((CASE 0xfffffffff488b94a  WHEN vt0.c0 THEN t1.c1 END)%(((((t1.c1)OR(t1.c2)))OR(t1.c0)))) ORDER BY ((((t0.c48)AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, t0 FULL OUTER JOIN t1 ON ((CASE 0Xfffffffff488b94a  WHEN vt0.c0 THEN t1.c1 END)%(((((t1.c1)OR(t1.c2)))OR(t1.c0)))) WHERE ((NOT ((NOT (t1.c1))))) ORDER BY ((((t0.c48)AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE;
SELECT * FROM vt0, t0, t1 WHERE (((((t0.c81) NOT BETWEEN (t0.c81) AND (t1.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c81) NOT BETWEEN (t0.c81) AND (t1.c1))) NOTNULL)) IS TRUE)  as count FROM vt0, t0, t1);
SELECT * FROM vt0, t0, t1 WHERE (((((t0.c81) NOT BETWEEN (t0.c81) AND (t1.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c81) NOT BETWEEN (t0.c81) AND (t1.c1))) NOTNULL)) IS TRUE)  as count FROM vt0, t0, t1);
SELECT * FROM vt0, t0, t1 WHERE (((((t0.c81) NOT BETWEEN (t0.c81) AND (t1.c1))) NOTNULL));
SELECT COUNT(*) FROM t0, t1, vt1, vt0 WHERE (NULL) ORDER BY x'' COLLATE NOCASE DESC  NULLS LAST, t1.c1;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, t1, vt1, vt0 ORDER BY x'' COLLATE NOCASE DESC  NULLS LAST, t1.c1);
SELECT COUNT(*) FROM t0, t1, vt1, vt0 WHERE (NULL) ORDER BY x'' COLLATE NOCASE DESC  NULLS LAST, t1.c1;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, t1, vt1, vt0 ORDER BY x'' COLLATE NOCASE DESC  NULLS LAST, t1.c1);
SELECT COUNT(*) FROM t0, t1, vt1, vt0 WHERE (NULL) ORDER BY x'' COLLATE NOCASE DESC  NULLS LAST, t1.c1;
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE (t1.c2);
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE (t1.c2);
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE (t1.c2);
SELECT ALL * FROM t1, t0 WHERE (((((t0.c48) BETWEEN ('-817854629') AND (0.06544684062132711)))!=(((t0.c81) BETWEEN (t1.c0) AND (t0.c52))))) ORDER BY t1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c48) BETWEEN ('-817854629') AND (0.06544684062132711)))<>(((t0.c81) BETWEEN (t1.c0) AND (t0.c52))))) IS TRUE)  as count FROM t1, t0 ORDER BY t1.c0 DESC  NULLS LAST);
SELECT ALL * FROM t1, t0 WHERE (((((t0.c48) BETWEEN ('-817854629') AND (0.06544684062132711)))!=(((t0.c81) BETWEEN (t1.c0) AND (t0.c52))))) ORDER BY t1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c48) BETWEEN ('-817854629') AND (0.06544684062132711)))<>(((t0.c81) BETWEEN (t1.c0) AND (t0.c52))))) IS TRUE)  as count FROM t1, t0 ORDER BY t1.c0 DESC  NULLS LAST);
SELECT ALL * FROM t1, t0 WHERE (((((t0.c48) BETWEEN ('-817854629') AND (0.06544684062132711)))!=(((t0.c81) BETWEEN (t1.c0) AND (t0.c52))))) ORDER BY t1.c0 DESC  NULLS LAST;
SELECT * FROM t1, vt1, t0 WHERE (GLOB(((t0.c84)<=(t0.c84)), ((t0.c81) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((GLOB(((t0.c84)<=(t0.c84)), ((t0.c81) IS FALSE))) IS TRUE)  as count FROM t1, vt1, t0);
SELECT * FROM t1, vt1, t0 WHERE (GLOB(((t0.c84)<=(t0.c84)), ((t0.c81) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((GLOB(((t0.c84)<=(t0.c84)), ((t0.c81) IS FALSE))) IS TRUE)  as count FROM t1, vt1, t0);
SELECT * FROM t1, vt1, t0 WHERE (GLOB(((t0.c84)<=(t0.c84)), ((t0.c81) IS FALSE)));
SELECT * FROM vt0, t0, vt1, t1 WHERE ((- ('-1421974497')));
SELECT SUM(count) FROM (SELECT ALL (((- ('-1421974497'))) IS TRUE)  as count FROM vt0, t0, vt1, t1);
SELECT * FROM vt0, t0, vt1, t1 WHERE ((- ('-1421974497')));
SELECT SUM(count) FROM (SELECT ALL (((- ('-1421974497'))) IS TRUE)  as count FROM vt0, t0, vt1, t1);
SELECT * FROM vt0, t0, vt1, t1 WHERE ((- ('-1421974497')));
SELECT COUNT(*) FROM t0, vt1, vt0, t1 WHERE ((~ (CAST('0.2774653064782515' AS REAL))));
SELECT SUM(count) FROM (SELECT (((~ (CAST('0.2774653064782515' AS REAL)))) IS TRUE)  as count FROM t0, vt1, vt0, t1);
SELECT COUNT(*) FROM t0, vt1, vt0, t1 WHERE ((~ (CAST('0.2774653064782515' AS REAL))));
SELECT SUM(count) FROM (SELECT (((~ (CAST('0.2774653064782515' AS REAL)))) IS TRUE)  as count FROM t0, vt1, vt0, t1);
SELECT COUNT(*) FROM t0, vt1, vt0, t1 WHERE ((~ (CAST('0.2774653064782515' AS REAL))));
SELECT COUNT(*) FROM t0, vt1 WHERE ((((~ (t0.c84))) IS TRUE)) ORDER BY ((CAST(vt1.c0 AS TEXT)) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (t0.c84))) IS TRUE)) IS TRUE)  as count FROM t0, vt1 ORDER BY ((CAST(vt1.c0 AS TEXT)) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1 WHERE ((((~ (t0.c84))) IS TRUE)) ORDER BY ((CAST(vt1.c0 AS TEXT)) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (t0.c84))) IS TRUE)) IS TRUE)  as count FROM t0, vt1 ORDER BY ((CAST(vt1.c0 AS TEXT)) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1 WHERE ((((~ (t0.c84))) IS TRUE)) ORDER BY ((CAST(vt1.c0 AS TEXT)) ISNULL)  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (GLOB((((vt1.c0))>=((x''))), vt1.c0 COLLATE RTRIM)) ORDER BY ((((vt1.c0) ISNULL)) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((GLOB((((vt1.c0))>=((x''))), vt1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) ISNULL)) NOT NULL));
SELECT ALL * FROM vt1 WHERE (GLOB((((vt1.c0))>=((x''))), vt1.c0 COLLATE RTRIM)) ORDER BY ((((vt1.c0) ISNULL)) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((GLOB((((vt1.c0))>=((x''))), vt1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) ISNULL)) NOT NULL));
SELECT ALL * FROM vt1 WHERE (GLOB((((vt1.c0))>=((x''))), vt1.c0 COLLATE RTRIM)) ORDER BY ((((vt1.c0) ISNULL)) NOT NULL);
SELECT COUNT(*) FROM t1, vt0 WHERE (TRIM(((NULL)-(t1.c0)), (t1.c2 IN (t1.c0, t1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((NULL)-(t1.c0)), (t1.c2 IN (t1.c0, t1.c1)))) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (TRIM(((NULL)-(t1.c0)), (t1.c2 IN (t1.c0, t1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((NULL)-(t1.c0)), (t1.c2 IN (t1.c0, t1.c1)))) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (TRIM(((NULL)-(t1.c0)), (t1.c2 IN (t1.c0, t1.c1))));
SELECT COUNT(*) FROM vt1, t0 LEFT OUTER JOIN vt0 ON (NOT (CAST(t0.c84 AS INTEGER))) LEFT OUTER JOIN t1 ON ((((((((t0.c52)AND(t1.c0)))AND(vt1.c0)))AND(t0.c48)))OR(((t1.c2) ISNULL))) WHERE ((t0.c41 IN (0.035024753027726674))) ORDER BY (((t1.c2, vt1.c0, t0.c84)) NOT BETWEEN (((((vt0.c0, t0.c52, t1.c2))>((t0.c81, '1980901433', t0.c41))), '&緃.5Noퟨ(', '')) AND (((t0.c52 IN ()), TYPEOF(DISTINCT vt0.c0), ((vt0.c0) NOT BETWEEN (t1.c2) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((t0.c41 IN (0.035024753027726674))) IS TRUE)  as count FROM vt1, t0 LEFT OUTER JOIN vt0 ON (NOT (CAST(t0.c84 AS INTEGER))) LEFT OUTER JOIN t1 ON ((((((((t0.c52)AND(t1.c0)))AND(vt1.c0)))AND(t0.c48)))OR(((t1.c2) ISNULL))) ORDER BY (((t1.c2, vt1.c0, t0.c84)) NOT BETWEEN (((((vt0.c0, t0.c52, t1.c2))>((t0.c81, '1980901433', t0.c41))), '&緃.5Noퟨ(', '')) AND (((t0.c52 IN ()), TYPEOF(DISTINCT vt0.c0), ((vt0.c0) NOT BETWEEN (t1.c2) AND (vt0.c0))))));
SELECT COUNT(*) FROM vt1, t0 LEFT OUTER JOIN vt0 ON (NOT (CAST(t0.c84 AS INTEGER))) LEFT OUTER JOIN t1 ON ((((((((t0.c52)AND(t1.c0)))AND(vt1.c0)))AND(t0.c48)))OR(((t1.c2) ISNULL))) WHERE ((t0.c41 IN (0.035024753027726674))) ORDER BY (((t1.c2, vt1.c0, t0.c84)) NOT BETWEEN (((((vt0.c0, t0.c52, t1.c2))>((t0.c81, '1980901433', t0.c41))), '&緃.5Noퟨ(', '')) AND (((t0.c52 IN ()), TYPEOF(DISTINCT vt0.c0), ((vt0.c0) NOT BETWEEN (t1.c2) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((t0.c41 IN (0.035024753027726674))) IS TRUE)  as count FROM vt1, t0 LEFT OUTER JOIN vt0 ON (NOT (CAST(t0.c84 AS INTEGER))) LEFT OUTER JOIN t1 ON ((((((((t0.c52)AND(t1.c0)))AND(vt1.c0)))AND(t0.c48)))OR(((t1.c2) ISNULL))) ORDER BY (((t1.c2, vt1.c0, t0.c84)) NOT BETWEEN (((((vt0.c0, t0.c52, t1.c2))>((t0.c81, '1980901433', t0.c41))), '&緃.5Noퟨ(', '')) AND (((t0.c52 IN ()), TYPEOF(DISTINCT vt0.c0), ((vt0.c0) NOT BETWEEN (t1.c2) AND (vt0.c0))))));
SELECT COUNT(*) FROM vt1, t0 LEFT OUTER JOIN vt0 ON (NOT (CAST(t0.c84 AS INTEGER))) LEFT OUTER JOIN t1 ON ((((((((t0.c52)AND(t1.c0)))AND(vt1.c0)))AND(t0.c48)))OR(((t1.c2) ISNULL))) WHERE ((t0.c41 IN (0.035024753027726674))) ORDER BY (((t1.c2, vt1.c0, t0.c84)) NOT BETWEEN (((((vt0.c0, t0.c52, t1.c2))>((t0.c81, '1980901433', t0.c41))), '&緃.5Noퟨ(', '')) AND (((t0.c52 IN ()), TYPEOF(DISTINCT vt0.c0), ((vt0.c0) NOT BETWEEN (t1.c2) AND (vt0.c0)))));
SELECT ALL * FROM vt1, t0 WHERE (((NULL) BETWEEN (((-1261411975) NOT NULL)) AND (((((((((t0.c84)OR(t0.c41)))AND('''*')))AND(t0.c41)))OR(t0.c52))))) ORDER BY CAST(vt1.c0 AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (((-1261411975) NOT NULL)) AND (((((((((t0.c84)OR(t0.c41)))AND('''*')))AND(t0.c41)))OR(t0.c52))))) IS TRUE)  as count FROM vt1, t0 ORDER BY CAST(vt1.c0 AS INTEGER));
SELECT ALL * FROM vt1, t0 WHERE (((NULL) BETWEEN (((-1261411975) NOT NULL)) AND (((((((((t0.c84)OR(t0.c41)))AND('''*')))AND(t0.c41)))OR(t0.c52))))) ORDER BY CAST(vt1.c0 AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (((-1261411975) NOT NULL)) AND (((((((((t0.c84)OR(t0.c41)))AND('''*')))AND(t0.c41)))OR(t0.c52))))) IS TRUE)  as count FROM vt1, t0 ORDER BY CAST(vt1.c0 AS INTEGER));
SELECT ALL * FROM vt1, t0 WHERE (((NULL) BETWEEN (((-1261411975) NOT NULL)) AND (((((((((t0.c84)OR(t0.c41)))AND('''*')))AND(t0.c41)))OR(t0.c52))))) ORDER BY CAST(vt1.c0 AS INTEGER);
SELECT COUNT(*) FROM vt0, t1 WHERE (LOWER(DISTINCT ((t1.c0)=(t1.c0)))) ORDER BY '\i';
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((t1.c0)=(t1.c0)))) IS TRUE)  as count FROM vt0, t1 ORDER BY '\i');
SELECT COUNT(*) FROM vt0, t1 WHERE (LOWER(DISTINCT ((t1.c0)=(t1.c0)))) ORDER BY '\i';
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((t1.c0)=(t1.c0)))) IS TRUE)  as count FROM vt0, t1 ORDER BY '\i');
SELECT COUNT(*) FROM vt0, t1 WHERE (LOWER(DISTINCT ((t1.c0)=(t1.c0)))) ORDER BY '\i';
SELECT * FROM vt1 WHERE (((((((vt1.c0) IS FALSE))OR(((vt1.c0) IS TRUE))))OR(((vt1.c0)|(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) IS FALSE))OR(((vt1.c0) IS TRUE))))OR(((vt1.c0)|(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((vt1.c0) IS FALSE))OR(((vt1.c0) IS TRUE))))OR(((vt1.c0)|(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) IS FALSE))OR(((vt1.c0) IS TRUE))))OR(((vt1.c0)|(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((vt1.c0) IS FALSE))OR(((vt1.c0) IS TRUE))))OR(((vt1.c0)|(vt1.c0)))));
SELECT COUNT(*) FROM t1, t0 INDEXED BY i32 WHERE ((- (t0.c81))) ORDER BY ((((t0.c81)+(t0.c48))) NOT BETWEEN (((t0.c84) BETWEEN (t1.c0) AND (t0.c41))) AND (x''))  NULLS FIRST, '1e500' ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c81))) IS TRUE)  as count FROM t1, t0 INDEXED BY i32 ORDER BY ((((t0.c81)+(t0.c48))) NOT BETWEEN (((t0.c84) BETWEEN (t1.c0) AND (t0.c41))) AND (x''))  NULLS FIRST, '1e500' ASC);
SELECT COUNT(*) FROM t1, t0 INDEXED BY i32 WHERE ((- (t0.c81))) ORDER BY ((((t0.c81)+(t0.c48))) NOT BETWEEN (((t0.c84) BETWEEN (t1.c0) AND (t0.c41))) AND (x''))  NULLS FIRST, '1e500' ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c81))) IS TRUE)  as count FROM t1, t0 INDEXED BY i32 ORDER BY ((((t0.c81)+(t0.c48))) NOT BETWEEN (((t0.c84) BETWEEN (t1.c0) AND (t0.c41))) AND (x''))  NULLS FIRST, '1e500' ASC);
SELECT COUNT(*) FROM vt0, t1 WHERE (((((vt0.c0) ISNULL))>(((((t1.c2)OR(t1.c0)))OR(t1.c0))))) ORDER BY ((((vt0.c0) IS FALSE))/(t1.c1));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))>(((((t1.c2)OR(t1.c0)))OR(t1.c0))))) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((vt0.c0) IS FALSE))/(t1.c1)));
SELECT COUNT(*) FROM vt0, t1 WHERE (((((vt0.c0) ISNULL))>(((((t1.c2)OR(t1.c0)))OR(t1.c0))))) ORDER BY ((((vt0.c0) IS FALSE))/(t1.c1));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))>(((((t1.c2)OR(t1.c0)))OR(t1.c0))))) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((vt0.c0) IS FALSE))/(t1.c1)));
SELECT COUNT(*) FROM vt0, t1 WHERE (((((vt0.c0) ISNULL))>(((((t1.c2)OR(t1.c0)))OR(t1.c0))))) ORDER BY ((((vt0.c0) IS FALSE))/(t1.c1));
SELECT ALL COUNT(*) FROM t1 NATURAL JOIN vt1 WHERE ((+ (((t1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t1.c0) IS FALSE)))) IS TRUE)  as count FROM t1 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM t1 NATURAL JOIN vt1 WHERE ((+ (((t1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t1.c0) IS FALSE)))) IS TRUE)  as count FROM t1 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM t1 NATURAL JOIN vt1 WHERE ((+ (((t1.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELIHOOD(LTRIM(vt0.c0), 0.9074165027050239)) ORDER BY ((((vt0.c0)<>(vt0.c0)))>(NULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(LTRIM(vt0.c0), 0.9074165027050239)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<>(vt0.c0)))>(NULL)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELIHOOD(LTRIM(vt0.c0), 0.9074165027050239)) ORDER BY ((((vt0.c0)<>(vt0.c0)))>(NULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(LTRIM(vt0.c0), 0.9074165027050239)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<>(vt0.c0)))>(NULL)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELIHOOD(LTRIM(vt0.c0), 0.9074165027050239)) ORDER BY ((((vt0.c0)<>(vt0.c0)))>(NULL)) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, t1 WHERE (vt0.c0) ORDER BY CAST(((t1.c2)|(t1.c1)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, t1 ORDER BY CAST(((t1.c2)|(t1.c1)) AS REAL)  NULLS LAST);
SELECT ALL * FROM vt0, t1 WHERE (vt0.c0) ORDER BY CAST(((t1.c2)|(t1.c1)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, t1 ORDER BY CAST(((t1.c2)|(t1.c1)) AS REAL)  NULLS LAST);
SELECT ALL * FROM vt0, t1 WHERE (vt0.c0) ORDER BY CAST(((t1.c2)|(t1.c1)) AS REAL)  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, t0, vt0, vt1 WHERE (CASE WHEN ((t1.c0) NOT NULL) THEN '#館' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t1.c0) NOT NULL) THEN '#館' END) IS TRUE)  as count FROM t1, t0, vt0, vt1);
SELECT ALL COUNT(*) FROM t1, t0, vt0, vt1 WHERE (CASE WHEN ((t1.c0) NOT NULL) THEN '#館' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t1.c0) NOT NULL) THEN '#館' END) IS TRUE)  as count FROM t1, t0, vt0, vt1);
SELECT ALL COUNT(*) FROM t1, t0, vt0, vt1 WHERE (CASE WHEN ((t1.c0) NOT NULL) THEN '#館' END);
SELECT COUNT(*) FROM vt1, vt0, t0 RIGHT OUTER JOIN t1 ON ((t1.c1 COLLATE BINARY) ISNULL) WHERE (((t0.c52) NOT BETWEEN (t0.c48) AND ('')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c52) NOT BETWEEN (t0.c48) AND ('')) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0, t0 RIGHT OUTER JOIN t1 ON ((t1.c1 COLLATE BINARY) ISNULL));
SELECT COUNT(*) FROM vt1, vt0, t0 RIGHT OUTER JOIN t1 ON ((t1.c1 COLLATE BINARY) ISNULL) WHERE (((t0.c52) NOT BETWEEN (t0.c48) AND ('')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c52) NOT BETWEEN (t0.c48) AND ('')) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0, t0 RIGHT OUTER JOIN t1 ON ((t1.c1 COLLATE BINARY) ISNULL));
SELECT COUNT(*) FROM vt1, vt0, t0 RIGHT OUTER JOIN t1 ON ((t1.c1 COLLATE BINARY) ISNULL) WHERE (((t0.c52) NOT BETWEEN (t0.c48) AND ('')) COLLATE NOCASE);
SELECT COUNT(*) FROM t1, vt0 WHERE ((((t1.c1)) NOT BETWEEN ((((NULL)IS NOT(t1.c1)))) AND (((t1.c1 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c1)) NOT BETWEEN ((((NULL)IS NOT(t1.c1)))) AND (((t1.c1 IN ()))))) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE ((((t1.c1)) NOT BETWEEN ((((NULL)IS NOT(t1.c1)))) AND (((t1.c1 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c1)) NOT BETWEEN ((((NULL)IS NOT(t1.c1)))) AND (((t1.c1 IN ()))))) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE ((((t1.c1)) NOT BETWEEN ((((NULL)IS NOT(t1.c1)))) AND (((t1.c1 IN ())))));
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t1 ON ((((((((((t1.c1)|(t1.c1)))OR(((t1.c1)==(t1.c2)))))OR((+ (vt0.c0)))))AND(CASE t1.c2  WHEN t1.c0 THEN vt1.c0 WHEN t1.c2 THEN '-148060124' WHEN t1.c2 THEN vt1.c0 END)))OR(JULIANDAY(NULL, vt1.c0, vt0.c0))) RIGHT OUTER JOIN vt1 ON t1.c1 WHERE (rtreenode(((x'') ISNULL), COALESCE(t1.c1, ''))) ORDER BY CAST(vt1.c0 AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(((x'') ISNULL), COALESCE(t1.c1, ''))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t1 ON ((((((((((t1.c1)|(t1.c1)))OR(((t1.c1)=(t1.c2)))))OR((+ (vt0.c0)))))AND(CASE t1.c2  WHEN t1.c0 THEN vt1.c0 WHEN t1.c2 THEN '-148060124' WHEN t1.c2 THEN vt1.c0 END)))OR(JULIANDAY(NULL, vt1.c0, vt0.c0))) RIGHT OUTER JOIN vt1 ON t1.c1 ORDER BY CAST(vt1.c0 AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t1 ON ((((((((((t1.c1)|(t1.c1)))OR(((t1.c1)==(t1.c2)))))OR((+ (vt0.c0)))))AND(CASE t1.c2  WHEN t1.c0 THEN vt1.c0 WHEN t1.c2 THEN '-148060124' WHEN t1.c2 THEN vt1.c0 END)))OR(JULIANDAY(NULL, vt1.c0, vt0.c0))) RIGHT OUTER JOIN vt1 ON t1.c1 WHERE (rtreenode(((x'') ISNULL), COALESCE(t1.c1, ''))) ORDER BY CAST(vt1.c0 AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(((x'') ISNULL), COALESCE(t1.c1, ''))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t1 ON ((((((((((t1.c1)|(t1.c1)))OR(((t1.c1)=(t1.c2)))))OR((+ (vt0.c0)))))AND(CASE t1.c2  WHEN t1.c0 THEN vt1.c0 WHEN t1.c2 THEN '-148060124' WHEN t1.c2 THEN vt1.c0 END)))OR(JULIANDAY(NULL, vt1.c0, vt0.c0))) RIGHT OUTER JOIN vt1 ON t1.c1 ORDER BY CAST(vt1.c0 AS REAL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt1, vt0 INDEXED BY i32, t0 WHERE (((t0.c52 COLLATE NOCASE)&((((t0.c84))>=(('7xbF<pT''g'))))));
SELECT SUM(count) FROM (SELECT ((((t0.c52 COLLATE NOCASE)&((((t0.c84))>=(('7xbF<pT''g')))))) IS TRUE)  as count FROM t1, vt1, vt0 INDEXED BY i32, t0);
SELECT ALL COUNT(*) FROM t1, vt1, vt0 INDEXED BY i32, t0 WHERE (((t0.c52 COLLATE NOCASE)&((((t0.c84))>=(('7xbF<pT''g'))))));
SELECT SUM(count) FROM (SELECT ((((t0.c52 COLLATE NOCASE)&((((t0.c84))>=(('7xbF<pT''g')))))) IS TRUE)  as count FROM t1, vt1, vt0 INDEXED BY i32, t0);
SELECT ALL * FROM t1, t0 INNER JOIN vt0 ON (- (((('%,5La^y,')) NOT BETWEEN ((t1.c2)) AND ((t1.c1))))) INNER JOIN vt1 ON -93893505 WHERE ((NOT (t1.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (t1.c1 COLLATE BINARY))) IS TRUE)  as count FROM t1, t0 INNER JOIN vt0 ON (- (((('%,5La^y,')) NOT BETWEEN ((t1.c2)) AND ((t1.c1))))) INNER JOIN vt1 ON -93893505);
SELECT ALL * FROM t1, t0 INNER JOIN vt0 ON (- (((('%,5La^y,')) NOT BETWEEN ((t1.c2)) AND ((t1.c1))))) INNER JOIN vt1 ON -93893505 WHERE ((NOT (t1.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (t1.c1 COLLATE BINARY))) IS TRUE)  as count FROM t1, t0 INNER JOIN vt0 ON (- (((('%,5La^y,')) NOT BETWEEN ((t1.c2)) AND ((t1.c1))))) INNER JOIN vt1 ON -93893505);
SELECT ALL * FROM t1, t0 INNER JOIN vt0 ON (- (((('%,5La^y,')) NOT BETWEEN ((t1.c2)) AND ((t1.c1))))) INNER JOIN vt1 ON -93893505 WHERE ((NOT (t1.c1 COLLATE BINARY)));
SELECT ALL * FROM t1, t0, vt1, vt0 WHERE (((((((t1.c2)OR(t0.c81)))OR(t0.c48)))+(x'e022'))) ORDER BY t0.c41;
SELECT SUM(count) FROM (SELECT ((((((((t1.c2)OR(t0.c81)))OR(t0.c48)))+(x'e022'))) IS TRUE)  as count FROM t1, t0, vt1, vt0 ORDER BY t0.c41);
SELECT ALL * FROM t1, t0, vt1, vt0 WHERE (((((((t1.c2)OR(t0.c81)))OR(t0.c48)))+(x'e022'))) ORDER BY t0.c41;
SELECT SUM(count) FROM (SELECT ((((((((t1.c2)OR(t0.c81)))OR(t0.c48)))+(x'e022'))) IS TRUE)  as count FROM t1, t0, vt1, vt0 ORDER BY t0.c41);
SELECT ALL * FROM t1, t0, vt1, vt0 WHERE (((((((t1.c2)OR(t0.c81)))OR(t0.c48)))+(x'e022'))) ORDER BY t0.c41;
SELECT ALL COUNT(*) FROM vt1, t1, t0 WHERE ('[]*p\r{j' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (('[]*p\r{j' COLLATE BINARY) IS TRUE)  as count FROM vt1, t1, t0);
SELECT ALL COUNT(*) FROM vt1, t1, t0 WHERE ('[]*p\r{j' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (('[]*p\r{j' COLLATE BINARY) IS TRUE)  as count FROM vt1, t1, t0);
SELECT ALL COUNT(*) FROM vt1, t1, t0 WHERE ('[]*p\r{j' COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c52) NOT BETWEEN (t0.c41) AND (t0.c41)) THEN CASE x''  WHEN t0.c84 THEN 0xffffffffdd5389cf WHEN t0.c81 THEN t0.c52 WHEN t0.c41 THEN t0.c52 ELSE t0.c48 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c52) NOT BETWEEN (t0.c41) AND (t0.c41)) THEN CASE x''  WHEN t0.c84 THEN 0Xffffffffdd5389cf WHEN t0.c81 THEN t0.c52 WHEN t0.c41 THEN t0.c52 ELSE t0.c48 END END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c52) NOT BETWEEN (t0.c41) AND (t0.c41)) THEN CASE x''  WHEN t0.c84 THEN 0xffffffffdd5389cf WHEN t0.c81 THEN t0.c52 WHEN t0.c41 THEN t0.c52 ELSE t0.c48 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c52) NOT BETWEEN (t0.c41) AND (t0.c41)) THEN CASE x''  WHEN t0.c84 THEN 0Xffffffffdd5389cf WHEN t0.c81 THEN t0.c52 WHEN t0.c41 THEN t0.c52 ELSE t0.c48 END END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c52) NOT BETWEEN (t0.c41) AND (t0.c41)) THEN CASE x''  WHEN t0.c84 THEN 0xffffffffdd5389cf WHEN t0.c81 THEN t0.c52 WHEN t0.c41 THEN t0.c52 ELSE t0.c48 END END);
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON (((t0.c52)&(t0.c84)) IN ()) RIGHT OUTER JOIN vt0 ON CAST(x'' COLLATE RTRIM AS BLOB) WHERE (((((((vt0.c0)AND(t0.c48)))OR(t0.c48))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (t0.c81) AND (t0.c52))) AND (json_object(t0.c81, vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(t0.c48)))OR(t0.c48))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (t0.c81) AND (t0.c52))) AND (json_object(t0.c81, vt1.c0)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON (((t0.c52)&(t0.c84)) IN ()) RIGHT OUTER JOIN vt0 ON CAST(x'' COLLATE RTRIM AS BLOB));
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON (((t0.c52)&(t0.c84)) IN ()) RIGHT OUTER JOIN vt0 ON CAST(x'' COLLATE RTRIM AS BLOB) WHERE (((((((vt0.c0)AND(t0.c48)))OR(t0.c48))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (t0.c81) AND (t0.c52))) AND (json_object(t0.c81, vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(t0.c48)))OR(t0.c48))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (t0.c81) AND (t0.c52))) AND (json_object(t0.c81, vt1.c0)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON (((t0.c52)&(t0.c84)) IN ()) RIGHT OUTER JOIN vt0 ON CAST(x'' COLLATE RTRIM AS BLOB));
SELECT * FROM vt1 WHERE ((+ (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY LTRIM(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY LTRIM(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) DESC  NULLS LAST);
SELECT * FROM vt1 WHERE ((+ (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY LTRIM(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY LTRIM(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) DESC  NULLS LAST);
SELECT * FROM vt1 WHERE ((+ (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY LTRIM(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) DESC  NULLS LAST;
SELECT * FROM vt1, t0 NOT INDEXED, t1 WHERE (t0.c41);
SELECT SUM(count) FROM (SELECT ALL ((t0.c41) IS TRUE)  as count FROM vt1, t0, t1);
SELECT * FROM vt1, t0 NOT INDEXED, t1 WHERE (t0.c41);
SELECT SUM(count) FROM (SELECT ALL ((t0.c41) IS TRUE)  as count FROM vt1, t0, t1);
SELECT * FROM vt1, t0 NOT INDEXED, t1 WHERE (t0.c41);
SELECT ALL * FROM t0 WHERE (((((t0.c84)>(t0.c48))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c84)>(t0.c48))) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c84)>(t0.c48))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c84)>(t0.c48))) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c84)>(t0.c48))) ISNULL));
SELECT * FROM t1, vt1, vt0, t0 WHERE (TRIM((- (t1.c2)), ((t0.c84) ISNULL))) ORDER BY ((t0.c48) IS TRUE) ASC, ((((t0.c84)>=(t0.c48)))LIKE((((NULL)) BETWEEN ((t0.c41)) AND ((0Xffffffffe95d1b01)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM((- (t1.c2)), ((t0.c84) ISNULL))) IS TRUE)  as count FROM t1, vt1, vt0, t0 ORDER BY ((t0.c48) IS TRUE) ASC, ((((t0.c84)>=(t0.c48)))LIKE((((NULL)) BETWEEN ((t0.c41)) AND ((0xffffffffe95d1b01)))))  NULLS LAST);
SELECT * FROM t1, vt1, vt0, t0 WHERE (TRIM((- (t1.c2)), ((t0.c84) ISNULL))) ORDER BY ((t0.c48) IS TRUE) ASC, ((((t0.c84)>=(t0.c48)))LIKE((((NULL)) BETWEEN ((t0.c41)) AND ((0Xffffffffe95d1b01)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM((- (t1.c2)), ((t0.c84) ISNULL))) IS TRUE)  as count FROM t1, vt1, vt0, t0 ORDER BY ((t0.c48) IS TRUE) ASC, ((((t0.c84)>=(t0.c48)))LIKE((((NULL)) BETWEEN ((t0.c41)) AND ((0xffffffffe95d1b01)))))  NULLS LAST);
SELECT * FROM t1, vt1, vt0, t0 WHERE (TRIM((- (t1.c2)), ((t0.c84) ISNULL))) ORDER BY ((t0.c48) IS TRUE) ASC, ((((t0.c84)>=(t0.c48)))LIKE((((NULL)) BETWEEN ((t0.c41)) AND ((0Xffffffffe95d1b01)))))  NULLS LAST;
SELECT ALL * FROM t1 INNER JOIN t0 ON ((t1.c1 IN (t0.c41)) IN ()) RIGHT OUTER JOIN vt0 ON ((((((t0.c84)AND(t1.c2)))OR(t1.c2))) BETWEEN ('-2086499754' COLLATE BINARY) AND ((t0.c41 IN (t0.c84)))) WHERE (((NULL) IS FALSE)) ORDER BY LIKELIHOOD(DISTINCT (~ (vt0.c0)), 0.9638488568159836)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL) IS FALSE)) IS TRUE)  as count FROM t1 INNER JOIN t0 ON ((t1.c1 IN (t0.c41)) IN ()) RIGHT OUTER JOIN vt0 ON ((((((t0.c84)AND(t1.c2)))OR(t1.c2))) BETWEEN ('-2086499754' COLLATE BINARY) AND ((t0.c41 IN (t0.c84)))) ORDER BY LIKELIHOOD(DISTINCT (~ (vt0.c0)), 0.9638488568159836)  NULLS FIRST);
SELECT ALL * FROM t1 INNER JOIN t0 ON ((t1.c1 IN (t0.c41)) IN ()) RIGHT OUTER JOIN vt0 ON ((((((t0.c84)AND(t1.c2)))OR(t1.c2))) BETWEEN ('-2086499754' COLLATE BINARY) AND ((t0.c41 IN (t0.c84)))) WHERE (((NULL) IS FALSE)) ORDER BY LIKELIHOOD(DISTINCT (~ (vt0.c0)), 0.9638488568159836)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL) IS FALSE)) IS TRUE)  as count FROM t1 INNER JOIN t0 ON ((t1.c1 IN (t0.c41)) IN ()) RIGHT OUTER JOIN vt0 ON ((((((t0.c84)AND(t1.c2)))OR(t1.c2))) BETWEEN ('-2086499754' COLLATE BINARY) AND ((t0.c41 IN (t0.c84)))) ORDER BY LIKELIHOOD(DISTINCT (~ (vt0.c0)), 0.9638488568159836)  NULLS FIRST);
SELECT ALL * FROM t1 INNER JOIN t0 ON ((t1.c1 IN (t0.c41)) IN ()) RIGHT OUTER JOIN vt0 ON ((((((t0.c84)AND(t1.c2)))OR(t1.c2))) BETWEEN ('-2086499754' COLLATE BINARY) AND ((t0.c41 IN (t0.c84)))) WHERE (((NULL) IS FALSE)) ORDER BY LIKELIHOOD(DISTINCT (~ (vt0.c0)), 0.9638488568159836)  NULLS FIRST;
SELECT ALL * FROM t1, vt1 WHERE (CASE CAST(t1.c2 AS TEXT)  WHEN ((((t1.c2)AND(t1.c2)))OR(t1.c0)) THEN ((t1.c2)-(t1.c0)) ELSE ((t1.c2) BETWEEN (t1.c1) AND (t1.c0)) END) ORDER BY ABS(DISTINCT (((t1.c0)) NOT BETWEEN ((vt1.c0)) AND ((NULL))));
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t1.c2 AS TEXT)  WHEN ((((t1.c2)AND(t1.c2)))OR(t1.c0)) THEN ((t1.c2)-(t1.c0)) ELSE ((t1.c2) BETWEEN (t1.c1) AND (t1.c0)) END) IS TRUE)  as count FROM t1, vt1 ORDER BY ABS(DISTINCT (((t1.c0)) NOT BETWEEN ((vt1.c0)) AND ((NULL)))));
SELECT ALL * FROM t1, vt1 WHERE (CASE CAST(t1.c2 AS TEXT)  WHEN ((((t1.c2)AND(t1.c2)))OR(t1.c0)) THEN ((t1.c2)-(t1.c0)) ELSE ((t1.c2) BETWEEN (t1.c1) AND (t1.c0)) END) ORDER BY ABS(DISTINCT (((t1.c0)) NOT BETWEEN ((vt1.c0)) AND ((NULL))));
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t1.c2 AS TEXT)  WHEN ((((t1.c2)AND(t1.c2)))OR(t1.c0)) THEN ((t1.c2)-(t1.c0)) ELSE ((t1.c2) BETWEEN (t1.c1) AND (t1.c0)) END) IS TRUE)  as count FROM t1, vt1 ORDER BY ABS(DISTINCT (((t1.c0)) NOT BETWEEN ((vt1.c0)) AND ((NULL)))));
SELECT ALL * FROM t1, vt1 WHERE (CASE CAST(t1.c2 AS TEXT)  WHEN ((((t1.c2)AND(t1.c2)))OR(t1.c0)) THEN ((t1.c2)-(t1.c0)) ELSE ((t1.c2) BETWEEN (t1.c1) AND (t1.c0)) END) ORDER BY ABS(DISTINCT (((t1.c0)) NOT BETWEEN ((vt1.c0)) AND ((NULL))));
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((((- (vt0.c0)))-(CASE vt1.c0  WHEN '947970457' THEN t0.c41 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))-(CASE vt1.c0  WHEN '947970457' THEN t0.c41 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((((- (vt0.c0)))-(CASE vt1.c0  WHEN '947970457' THEN t0.c41 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))-(CASE vt1.c0  WHEN '947970457' THEN t0.c41 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((((- (vt0.c0)))-(CASE vt1.c0  WHEN '947970457' THEN t0.c41 ELSE vt1.c0 END)));
SELECT ALL * FROM vt1, t0, t1, vt0 NOT INDEXED WHERE ((((t0.c81)||(vt0.c0)) IN ())) ORDER BY x'0a50'  NULLS FIRST, t0.c48, (- (UPPER(vt1.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c81)||(vt0.c0)) IN ())) IS TRUE)  as count FROM vt1, t0, t1, vt0 ORDER BY x'0a50'  NULLS FIRST, t0.c48, (- (UPPER(vt1.c0))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, t0, t1, vt0 NOT INDEXED WHERE ((((t0.c81)||(vt0.c0)) IN ())) ORDER BY x'0a50'  NULLS FIRST, t0.c48, (- (UPPER(vt1.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c81)||(vt0.c0)) IN ())) IS TRUE)  as count FROM vt1, t0, t1, vt0 ORDER BY x'0a50'  NULLS FIRST, t0.c48, (- (UPPER(vt1.c0))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, t0, t1, vt0 NOT INDEXED WHERE ((((t0.c81)||(vt0.c0)) IN ())) ORDER BY x'0a50'  NULLS FIRST, t0.c48, (- (UPPER(vt1.c0))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)&(vt0.c0))) BETWEEN (((vt0.c0)>>(vt0.c0))) AND (((((vt0.c0)OR('*CZ徥N\r[')))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)&(vt0.c0))) BETWEEN (((vt0.c0)>>(vt0.c0))) AND (((((vt0.c0)OR('*CZ徥N\r[')))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)&(vt0.c0))) BETWEEN (((vt0.c0)>>(vt0.c0))) AND (((((vt0.c0)OR('*CZ徥N\r[')))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)&(vt0.c0))) BETWEEN (((vt0.c0)>>(vt0.c0))) AND (((((vt0.c0)OR('*CZ徥N\r[')))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)&(vt0.c0))) BETWEEN (((vt0.c0)>>(vt0.c0))) AND (((((vt0.c0)OR('*CZ徥N\r[')))OR(vt0.c0)))));
SELECT ALL * FROM vt0, t0, vt1, t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM vt0, t0, vt1, t1);
SELECT ALL * FROM vt0, t0, vt1, t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM vt0, t0, vt1, t1);
SELECT ALL * FROM vt0, t0, vt1, t1 WHERE (t1.c0);
SELECT ALL * FROM t0 WHERE (STRFTIME((t0.c52 IN ()), (((t0.c52, 0X2b22c9f3, t0.c81)) NOT BETWEEN ((t0.c48, t0.c52, t0.c41)) AND ((t0.c48, t0.c81, t0.c48))), (((t0.c84)) BETWEEN ((t0.c84)) AND ((t0.c52))), json_insert('U掊', t0.c48, t0.c41), IFNULL(DISTINCT x'', t0.c48))) ORDER BY CAST((t0.c81 IN (t0.c41, t0.c48)) AS INTEGER), LIKELIHOOD(DISTINCT ((t0.c52) BETWEEN (t0.c48) AND (t0.c48)), 0.38920897029756896)  NULLS FIRST, (~ (((t0.c84)OR(t0.c41)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME((t0.c52 IN ()), (((t0.c52, 0x2b22c9f3, t0.c81)) NOT BETWEEN ((t0.c48, t0.c52, t0.c41)) AND ((t0.c48, t0.c81, t0.c48))), (((t0.c84)) BETWEEN ((t0.c84)) AND ((t0.c52))), json_insert('U掊', t0.c48, t0.c41), IFNULL(DISTINCT x'', t0.c48))) IS TRUE)  as count FROM t0 ORDER BY CAST((t0.c81 IN (t0.c41, t0.c48)) AS INTEGER), LIKELIHOOD(DISTINCT ((t0.c52) BETWEEN (t0.c48) AND (t0.c48)), 0.38920897029756896)  NULLS FIRST, (~ (((t0.c84)OR(t0.c41)))) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (STRFTIME((t0.c52 IN ()), (((t0.c52, 0X2b22c9f3, t0.c81)) NOT BETWEEN ((t0.c48, t0.c52, t0.c41)) AND ((t0.c48, t0.c81, t0.c48))), (((t0.c84)) BETWEEN ((t0.c84)) AND ((t0.c52))), json_insert('U掊', t0.c48, t0.c41), IFNULL(DISTINCT x'', t0.c48))) ORDER BY CAST((t0.c81 IN (t0.c41, t0.c48)) AS INTEGER), LIKELIHOOD(DISTINCT ((t0.c52) BETWEEN (t0.c48) AND (t0.c48)), 0.38920897029756896)  NULLS FIRST, (~ (((t0.c84)OR(t0.c41)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME((t0.c52 IN ()), (((t0.c52, 0x2b22c9f3, t0.c81)) NOT BETWEEN ((t0.c48, t0.c52, t0.c41)) AND ((t0.c48, t0.c81, t0.c48))), (((t0.c84)) BETWEEN ((t0.c84)) AND ((t0.c52))), json_insert('U掊', t0.c48, t0.c41), IFNULL(DISTINCT x'', t0.c48))) IS TRUE)  as count FROM t0 ORDER BY CAST((t0.c81 IN (t0.c41, t0.c48)) AS INTEGER), LIKELIHOOD(DISTINCT ((t0.c52) BETWEEN (t0.c48) AND (t0.c48)), 0.38920897029756896)  NULLS FIRST, (~ (((t0.c84)OR(t0.c41)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) BETWEEN (((vt1.c0 IN ()))) AND ((CASE NULL  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN (((vt1.c0 IN ()))) AND ((CASE NULL  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) BETWEEN (((vt1.c0 IN ()))) AND ((CASE NULL  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN (((vt1.c0 IN ()))) AND ((CASE NULL  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) BETWEEN (((vt1.c0 IN ()))) AND ((CASE NULL  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))));
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (((NULL)>>((~ (t1.c1))))) ORDER BY (((t1.c0 IN (t1.c2, t1.c0))) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>>((~ (t1.c1))))) IS TRUE)  as count FROM vt1, t1 ORDER BY (((t1.c0 IN (t1.c2, t1.c0))) IS FALSE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (((NULL)>>((~ (t1.c1))))) ORDER BY (((t1.c0 IN (t1.c2, t1.c0))) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>>((~ (t1.c1))))) IS TRUE)  as count FROM vt1, t1 ORDER BY (((t1.c0 IN (t1.c2, t1.c0))) IS FALSE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (((NULL)>>((~ (t1.c1))))) ORDER BY (((t1.c0 IN (t1.c2, t1.c0))) IS FALSE) DESC  NULLS FIRST;
SELECT * FROM vt1, t1, vt0, t0 WHERE (((1417121493)GLOB(CASE x''  WHEN t1.c2 THEN t1.c2 END))) ORDER BY ((load_extension(t1.c1))<<(UNLIKELY(t1.c1))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((1417121493)GLOB(CASE x''  WHEN t1.c2 THEN t1.c2 END))) IS TRUE)  as count FROM vt1, t1, vt0, t0 ORDER BY ((load_extension(t1.c1))<<(UNLIKELY(t1.c1))) DESC  NULLS FIRST);
SELECT * FROM vt1, t1, vt0, t0 WHERE (((1417121493)GLOB(CASE x''  WHEN t1.c2 THEN t1.c2 END))) ORDER BY ((load_extension(t1.c1))<<(UNLIKELY(t1.c1))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((1417121493)GLOB(CASE x''  WHEN t1.c2 THEN t1.c2 END))) IS TRUE)  as count FROM vt1, t1, vt0, t0 ORDER BY ((load_extension(t1.c1))<<(UNLIKELY(t1.c1))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1 CROSS JOIN vt1 ON CAST(CASE WHEN t1.c0 THEN vt0.c0 WHEN 0.6971062783807228 THEN vt0.c0 WHEN t1.c2 THEN t1.c0 ELSE t1.c1 END AS REAL) WHERE ((+ (t1.c2)) COLLATE BINARY) ORDER BY t1.c0, (- (t1.c1)) ASC  NULLS LAST, ((t1.c1 COLLATE NOCASE)<=(((t1.c1)&(t1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (t1.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t1 CROSS JOIN vt1 ON CAST(CASE WHEN t1.c0 THEN vt0.c0 WHEN 0.6971062783807228 THEN vt0.c0 WHEN t1.c2 THEN t1.c0 ELSE t1.c1 END AS REAL) ORDER BY t1.c0, (- (t1.c1)) ASC  NULLS LAST, ((t1.c1 COLLATE NOCASE)<=(((t1.c1)&(t1.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1 CROSS JOIN vt1 ON CAST(CASE WHEN t1.c0 THEN vt0.c0 WHEN 0.6971062783807228 THEN vt0.c0 WHEN t1.c2 THEN t1.c0 ELSE t1.c1 END AS REAL) WHERE ((+ (t1.c2)) COLLATE BINARY) ORDER BY t1.c0, (- (t1.c1)) ASC  NULLS LAST, ((t1.c1 COLLATE NOCASE)<=(((t1.c1)&(t1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (t1.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t1 CROSS JOIN vt1 ON CAST(CASE WHEN t1.c0 THEN vt0.c0 WHEN 0.6971062783807228 THEN vt0.c0 WHEN t1.c2 THEN t1.c0 ELSE t1.c1 END AS REAL) ORDER BY t1.c0, (- (t1.c1)) ASC  NULLS LAST, ((t1.c1 COLLATE NOCASE)<=(((t1.c1)&(t1.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1 CROSS JOIN vt1 ON CAST(CASE WHEN t1.c0 THEN vt0.c0 WHEN 0.6971062783807228 THEN vt0.c0 WHEN t1.c2 THEN t1.c0 ELSE t1.c1 END AS REAL) WHERE ((+ (t1.c2)) COLLATE BINARY) ORDER BY t1.c0, (- (t1.c1)) ASC  NULLS LAST, ((t1.c1 COLLATE NOCASE)<=(((t1.c1)&(t1.c0)))) DESC  NULLS FIRST;
SELECT * FROM t0, vt1, vt0, t1 WHERE (((x'4fe0')%(((t0.c48) NOT BETWEEN (t0.c52) AND (vt0.c0))))) ORDER BY ((((CASE WHEN vt0.c0 THEN 9.36985878E8 WHEN vt0.c0 THEN vt1.c0 WHEN t0.c41 THEN t0.c81 ELSE t0.c41 END)OR(CAST(-411791495 AS BLOB))))AND(((0.3798449401260121) IS FALSE))) DESC  NULLS LAST, ((CASE WHEN vt0.c0 THEN t0.c52 END)AND(((NULL)+(t0.c52)))) ASC;
SELECT SUM(count) FROM (SELECT ((((x'4fe0')%(((t0.c48) NOT BETWEEN (t0.c52) AND (vt0.c0))))) IS TRUE)  as count FROM t0, vt1, vt0, t1 ORDER BY ((((CASE WHEN vt0.c0 THEN 9.36985878E8 WHEN vt0.c0 THEN vt1.c0 WHEN t0.c41 THEN t0.c81 ELSE t0.c41 END)OR(CAST(-411791495 AS BLOB))))AND(((0.3798449401260121) IS FALSE))) DESC  NULLS LAST, ((CASE WHEN vt0.c0 THEN t0.c52 END)AND(((NULL)+(t0.c52)))) ASC);
SELECT * FROM t0, vt1, vt0, t1 WHERE (((x'4fe0')%(((t0.c48) NOT BETWEEN (t0.c52) AND (vt0.c0))))) ORDER BY ((((CASE WHEN vt0.c0 THEN 9.36985878E8 WHEN vt0.c0 THEN vt1.c0 WHEN t0.c41 THEN t0.c81 ELSE t0.c41 END)OR(CAST(-411791495 AS BLOB))))AND(((0.3798449401260121) IS FALSE))) DESC  NULLS LAST, ((CASE WHEN vt0.c0 THEN t0.c52 END)AND(((NULL)+(t0.c52)))) ASC;
SELECT SUM(count) FROM (SELECT ((((x'4fe0')%(((t0.c48) NOT BETWEEN (t0.c52) AND (vt0.c0))))) IS TRUE)  as count FROM t0, vt1, vt0, t1 ORDER BY ((((CASE WHEN vt0.c0 THEN 9.36985878E8 WHEN vt0.c0 THEN vt1.c0 WHEN t0.c41 THEN t0.c81 ELSE t0.c41 END)OR(CAST(-411791495 AS BLOB))))AND(((0.3798449401260121) IS FALSE))) DESC  NULLS LAST, ((CASE WHEN vt0.c0 THEN t0.c52 END)AND(((NULL)+(t0.c52)))) ASC);
SELECT * FROM t0, vt1, vt0, t1 WHERE (((x'4fe0')%(((t0.c48) NOT BETWEEN (t0.c52) AND (vt0.c0))))) ORDER BY ((((CASE WHEN vt0.c0 THEN 9.36985878E8 WHEN vt0.c0 THEN vt1.c0 WHEN t0.c41 THEN t0.c81 ELSE t0.c41 END)OR(CAST(-411791495 AS BLOB))))AND(((0.3798449401260121) IS FALSE))) DESC  NULLS LAST, ((CASE WHEN vt0.c0 THEN t0.c52 END)AND(((NULL)+(t0.c52)))) ASC;
SELECT ALL * FROM t0 CROSS JOIN vt1 ON ((((t0.c48)/(0.38908459317336697)))-(t0.c52)) LEFT OUTER JOIN t1 ON ABS(CAST(t0.c81 AS REAL)) WHERE ((NOT (t1.c1)) COLLATE NOCASE) ORDER BY (CAST(t1.c1 AS BLOB) IN ((((t0.c48, t1.c0, t0.c84)) NOT BETWEEN ((NULL, t0.c52, '')) AND ((t0.c84, vt1.c0, t1.c1))), CAST(t1.c2 AS BLOB)));
SELECT SUM(count) FROM (SELECT (((NOT (t1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON ((((t0.c48)/(0.38908459317336697)))-(t0.c52)) LEFT OUTER JOIN t1 ON ABS(CAST(t0.c81 AS REAL)) ORDER BY (CAST(t1.c1 AS BLOB) IN ((((t0.c48, t1.c0, t0.c84)) NOT BETWEEN ((NULL, t0.c52, '')) AND ((t0.c84, vt1.c0, t1.c1))), CAST(t1.c2 AS BLOB))));
SELECT ALL * FROM t0 CROSS JOIN vt1 ON ((((t0.c48)/(0.38908459317336697)))-(t0.c52)) LEFT OUTER JOIN t1 ON ABS(CAST(t0.c81 AS REAL)) WHERE ((NOT (t1.c1)) COLLATE NOCASE) ORDER BY (CAST(t1.c1 AS BLOB) IN ((((t0.c48, t1.c0, t0.c84)) NOT BETWEEN ((NULL, t0.c52, '')) AND ((t0.c84, vt1.c0, t1.c1))), CAST(t1.c2 AS BLOB)));
SELECT SUM(count) FROM (SELECT (((NOT (t1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON ((((t0.c48)/(0.38908459317336697)))-(t0.c52)) LEFT OUTER JOIN t1 ON ABS(CAST(t0.c81 AS REAL)) ORDER BY (CAST(t1.c1 AS BLOB) IN ((((t0.c48, t1.c0, t0.c84)) NOT BETWEEN ((NULL, t0.c52, '')) AND ((t0.c84, vt1.c0, t1.c1))), CAST(t1.c2 AS BLOB))));
SELECT ALL * FROM t0 CROSS JOIN vt1 ON ((((t0.c48)/(0.38908459317336697)))-(t0.c52)) LEFT OUTER JOIN t1 ON ABS(CAST(t0.c81 AS REAL)) WHERE ((NOT (t1.c1)) COLLATE NOCASE) ORDER BY (CAST(t1.c1 AS BLOB) IN ((((t0.c48, t1.c0, t0.c84)) NOT BETWEEN ((NULL, t0.c52, '')) AND ((t0.c84, vt1.c0, t1.c1))), CAST(t1.c2 AS BLOB)));
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ('q') ORDER BY (((vt0.c0)<(t0.c84)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('q') IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (((vt0.c0)<(t0.c84)) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ('q') ORDER BY (((vt0.c0)<(t0.c84)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('q') IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (((vt0.c0)<(t0.c84)) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ('q') ORDER BY (((vt0.c0)<(t0.c84)) IN ()) ASC  NULLS LAST;
SELECT * FROM t0, t1 FULL OUTER JOIN vt0 ON (((((t1.c1))<=((t0.c52))))*(((t0.c48)!=(t0.c84)))) RIGHT OUTER JOIN vt1 ON (+ (((((vt0.c0)AND(vt0.c0)))OR(t0.c84)))) WHERE ((- (CASE t1.c0  WHEN t1.c0 THEN t0.c48 WHEN t1.c0 THEN vt0.c0 WHEN t1.c2 THEN t1.c1 ELSE x'23e9' END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE t1.c0  WHEN t1.c0 THEN t0.c48 WHEN t1.c0 THEN vt0.c0 WHEN t1.c2 THEN t1.c1 ELSE x'23e9' END))) IS TRUE)  as count FROM t0, t1 FULL OUTER JOIN vt0 ON (((((t1.c1))<=((t0.c52))))*(((t0.c48)!=(t0.c84)))) RIGHT OUTER JOIN vt1 ON (+ (((((vt0.c0)AND(vt0.c0)))OR(t0.c84)))));
SELECT * FROM t0, t1 FULL OUTER JOIN vt0 ON (((((t1.c1))<=((t0.c52))))*(((t0.c48)!=(t0.c84)))) RIGHT OUTER JOIN vt1 ON (+ (((((vt0.c0)AND(vt0.c0)))OR(t0.c84)))) WHERE ((- (CASE t1.c0  WHEN t1.c0 THEN t0.c48 WHEN t1.c0 THEN vt0.c0 WHEN t1.c2 THEN t1.c1 ELSE x'23e9' END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE t1.c0  WHEN t1.c0 THEN t0.c48 WHEN t1.c0 THEN vt0.c0 WHEN t1.c2 THEN t1.c1 ELSE x'23e9' END))) IS TRUE)  as count FROM t0, t1 FULL OUTER JOIN vt0 ON (((((t1.c1))<=((t0.c52))))*(((t0.c48)!=(t0.c84)))) RIGHT OUTER JOIN vt1 ON (+ (((((vt0.c0)AND(vt0.c0)))OR(t0.c84)))));
SELECT * FROM t0, t1 FULL OUTER JOIN vt0 ON (((((t1.c1))<=((t0.c52))))*(((t0.c48)!=(t0.c84)))) RIGHT OUTER JOIN vt1 ON (+ (((((vt0.c0)AND(vt0.c0)))OR(t0.c84)))) WHERE ((- (CASE t1.c0  WHEN t1.c0 THEN t0.c48 WHEN t1.c0 THEN vt0.c0 WHEN t1.c2 THEN t1.c1 ELSE x'23e9' END)));
SELECT ALL COUNT(*) FROM vt1, t1, t0 WHERE (((((t0.c48) ISNULL))=(((t0.c81) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((t0.c48) ISNULL))==(((t0.c81) IS TRUE)))) IS TRUE)  as count FROM vt1, t1, t0);
SELECT ALL COUNT(*) FROM vt1, t1, t0 WHERE (((((t0.c48) ISNULL))=(((t0.c81) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((t0.c48) ISNULL))==(((t0.c81) IS TRUE)))) IS TRUE)  as count FROM vt1, t1, t0);
SELECT ALL COUNT(*) FROM vt1, t1, t0 WHERE (((((t0.c48) ISNULL))=(((t0.c81) IS TRUE))));
SELECT * FROM vt1, vt0, t0 WHERE (((((((((((vt0.c0)AND(t0.c81)))AND(t0.c41)))OR(vt0.c0)))OR(t0.c41)))|((NOT (t0.c48))))) ORDER BY CASE CAST(vt0.c0 AS NUMERIC)  WHEN CAST(t0.c81 AS TEXT) THEN ((x'9f3ecbec')*(t0.c41)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(t0.c81)))AND(t0.c41)))OR(vt0.c0)))OR(t0.c41)))|((NOT (t0.c48))))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY CASE CAST(vt0.c0 AS NUMERIC)  WHEN CAST(t0.c81 AS TEXT) THEN ((x'9f3ecbec')*(t0.c41)) END DESC  NULLS LAST);
SELECT * FROM vt1, vt0, t0 WHERE (((((((((((vt0.c0)AND(t0.c81)))AND(t0.c41)))OR(vt0.c0)))OR(t0.c41)))|((NOT (t0.c48))))) ORDER BY CASE CAST(vt0.c0 AS NUMERIC)  WHEN CAST(t0.c81 AS TEXT) THEN ((x'9f3ecbec')*(t0.c41)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(t0.c81)))AND(t0.c41)))OR(vt0.c0)))OR(t0.c41)))|((NOT (t0.c48))))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY CASE CAST(vt0.c0 AS NUMERIC)  WHEN CAST(t0.c81 AS TEXT) THEN ((x'9f3ecbec')*(t0.c41)) END DESC  NULLS LAST);
SELECT * FROM vt1, vt0, t0 WHERE (((((((((((vt0.c0)AND(t0.c81)))AND(t0.c41)))OR(vt0.c0)))OR(t0.c41)))|((NOT (t0.c48))))) ORDER BY CASE CAST(vt0.c0 AS NUMERIC)  WHEN CAST(t0.c81 AS TEXT) THEN ((x'9f3ecbec')*(t0.c41)) END DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN t0 ON t0.c84 WHERE (((((t0.c81) BETWEEN (t0.c48) AND (vt1.c0)))>(CASE vt0.c0  WHEN t0.c84 THEN t0.c84 ELSE vt1.c0 END))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((((((t0.c81) BETWEEN (t0.c48) AND (vt1.c0)))>(CASE vt0.c0  WHEN t0.c84 THEN t0.c84 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t0 ON t0.c84 ORDER BY x'');
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN t0 ON t0.c84 WHERE (((((t0.c81) BETWEEN (t0.c48) AND (vt1.c0)))>(CASE vt0.c0  WHEN t0.c84 THEN t0.c84 ELSE vt1.c0 END))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((((((t0.c81) BETWEEN (t0.c48) AND (vt1.c0)))>(CASE vt0.c0  WHEN t0.c84 THEN t0.c84 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t0 ON t0.c84 ORDER BY x'');
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN t0 ON t0.c84 WHERE (((((t0.c81) BETWEEN (t0.c48) AND (vt1.c0)))>(CASE vt0.c0  WHEN t0.c84 THEN t0.c84 ELSE vt1.c0 END))) ORDER BY x'';
SELECT * FROM t1 WHERE ((+ ((NOT (t1.c0))))) ORDER BY (((t1.c0)) NOT BETWEEN ((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c2)))) AND (((~ (t1.c2))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((NOT (t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0)) NOT BETWEEN ((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c2)))) AND (((~ (t1.c2))))) DESC  NULLS FIRST);
SELECT * FROM t1 WHERE ((+ ((NOT (t1.c0))))) ORDER BY (((t1.c0)) NOT BETWEEN ((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c2)))) AND (((~ (t1.c2))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((NOT (t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0)) NOT BETWEEN ((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c2)))) AND (((~ (t1.c2))))) DESC  NULLS FIRST);
SELECT * FROM t1 WHERE ((+ ((NOT (t1.c0))))) ORDER BY (((t1.c0)) NOT BETWEEN ((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c2)))) AND (((~ (t1.c2))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0, vt1, t1 WHERE (PRINTF((t0.c41 IN ()), ((vt1.c0)GLOB(t1.c0)), t0.c52 COLLATE NOCASE, ((x'37e4')-(t1.c1)), (t0.c84 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((PRINTF((t0.c41 IN ()), ((vt1.c0)GLOB(t1.c0)), t0.c52 COLLATE NOCASE, ((x'37e4')-(t1.c1)), (t0.c84 IN ()))) IS TRUE)  as count FROM t0, vt0, vt1, t1);
SELECT COUNT(*) FROM t0, vt0, vt1, t1 WHERE (PRINTF((t0.c41 IN ()), ((vt1.c0)GLOB(t1.c0)), t0.c52 COLLATE NOCASE, ((x'37e4')-(t1.c1)), (t0.c84 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((PRINTF((t0.c41 IN ()), ((vt1.c0)GLOB(t1.c0)), t0.c52 COLLATE NOCASE, ((x'37e4')-(t1.c1)), (t0.c84 IN ()))) IS TRUE)  as count FROM t0, vt0, vt1, t1);
SELECT COUNT(*) FROM t0, vt0, vt1, t1 WHERE (PRINTF((t0.c41 IN ()), ((vt1.c0)GLOB(t1.c0)), t0.c52 COLLATE NOCASE, ((x'37e4')-(t1.c1)), (t0.c84 IN ())));
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE ((LOWER(DISTINCT '') IN ()));
SELECT SUM(count) FROM (SELECT (((LOWER(DISTINCT '') IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE ((LOWER(DISTINCT '') IN ()));
SELECT SUM(count) FROM (SELECT (((LOWER(DISTINCT '') IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE ((LOWER(DISTINCT '') IN ()));
SELECT COUNT(*) FROM vt0, vt1, t0, t1 WHERE (((t0.c81 COLLATE RTRIM) NOT BETWEEN (((t0.c52)||(vt0.c0))) AND (((t1.c0) IS TRUE)))) ORDER BY (((((t0.c41, t0.c81, t0.c52)) NOT BETWEEN ((t1.c0, t0.c48, t0.c52)) AND ((t0.c81, NULL, t1.c1)))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c81 COLLATE RTRIM) NOT BETWEEN (((t0.c52)||(vt0.c0))) AND (((t1.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, vt1, t0, t1 ORDER BY (((((t0.c41, t0.c81, t0.c52)) NOT BETWEEN ((t1.c0, t0.c48, t0.c52)) AND ((t0.c81, NULL, t1.c1)))) IS TRUE) DESC);
SELECT COUNT(*) FROM vt0, vt1, t0, t1 WHERE (((t0.c81 COLLATE RTRIM) NOT BETWEEN (((t0.c52)||(vt0.c0))) AND (((t1.c0) IS TRUE)))) ORDER BY (((((t0.c41, t0.c81, t0.c52)) NOT BETWEEN ((t1.c0, t0.c48, t0.c52)) AND ((t0.c81, NULL, t1.c1)))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c81 COLLATE RTRIM) NOT BETWEEN (((t0.c52)||(vt0.c0))) AND (((t1.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, vt1, t0, t1 ORDER BY (((((t0.c41, t0.c81, t0.c52)) NOT BETWEEN ((t1.c0, t0.c48, t0.c52)) AND ((t0.c81, NULL, t1.c1)))) IS TRUE) DESC);
SELECT COUNT(*) FROM vt0, vt1, t0, t1 WHERE (((t0.c81 COLLATE RTRIM) NOT BETWEEN (((t0.c52)||(vt0.c0))) AND (((t1.c0) IS TRUE)))) ORDER BY (((((t0.c41, t0.c81, t0.c52)) NOT BETWEEN ((t1.c0, t0.c48, t0.c52)) AND ((t0.c81, NULL, t1.c1)))) IS TRUE) DESC;
SELECT ALL * FROM vt1, t0, t1 WHERE (((- (t0.c48)) IN ()));
SELECT SUM(count) FROM (SELECT ((((- (t0.c48)) IN ())) IS TRUE)  as count FROM vt1, t0, t1);
SELECT ALL * FROM vt1, t0, t1 WHERE (((- (t0.c48)) IN ()));
SELECT SUM(count) FROM (SELECT ((((- (t0.c48)) IN ())) IS TRUE)  as count FROM vt1, t0, t1);
SELECT ALL * FROM vt1, t0, t1 WHERE (((- (t0.c48)) IN ()));
SELECT COUNT(*) FROM t1, t0 WHERE ('-908392713') ORDER BY (~ (((t1.c1) NOT BETWEEN (t1.c1) AND (x'e20e')))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('-908392713') IS TRUE)  as count FROM t1, t0 ORDER BY (~ (((t1.c1) NOT BETWEEN (t1.c1) AND (x'e20e')))) ASC);
SELECT COUNT(*) FROM t1, t0 WHERE ('-908392713') ORDER BY (~ (((t1.c1) NOT BETWEEN (t1.c1) AND (x'e20e')))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('-908392713') IS TRUE)  as count FROM t1, t0 ORDER BY (~ (((t1.c1) NOT BETWEEN (t1.c1) AND (x'e20e')))) ASC);
SELECT COUNT(*) FROM t1, t0 WHERE ('-908392713') ORDER BY (~ (((t1.c1) NOT BETWEEN (t1.c1) AND (x'e20e')))) ASC;
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (LIKELIHOOD(vt0.c0 COLLATE RTRIM, 0.14603367441204973)) ORDER BY CAST(CASE t1.c0  WHEN t1.c1 THEN t1.c2 ELSE t1.c0 END AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(vt0.c0 COLLATE RTRIM, 0.14603367441204973)) IS TRUE)  as count FROM vt0, t1 ORDER BY CAST(CASE t1.c0  WHEN t1.c1 THEN t1.c2 ELSE t1.c0 END AS INTEGER) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (LIKELIHOOD(vt0.c0 COLLATE RTRIM, 0.14603367441204973)) ORDER BY CAST(CASE t1.c0  WHEN t1.c1 THEN t1.c2 ELSE t1.c0 END AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(vt0.c0 COLLATE RTRIM, 0.14603367441204973)) IS TRUE)  as count FROM vt0, t1 ORDER BY CAST(CASE t1.c0  WHEN t1.c1 THEN t1.c2 ELSE t1.c0 END AS INTEGER) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (LIKELIHOOD(vt0.c0 COLLATE RTRIM, 0.14603367441204973)) ORDER BY CAST(CASE t1.c0  WHEN t1.c1 THEN t1.c2 ELSE t1.c0 END AS INTEGER) DESC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (1078141456) ORDER BY (- (CASE WHEN '膔q' THEN vt1.c0 ELSE vt1.c0 END)) ASC  NULLS FIRST, ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)*(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ASC  NULLS FIRST, ((CASE WHEN vt1.c0 THEN vt1.c0 END)/(vt1.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((1078141456) IS TRUE)  as count FROM vt1 ORDER BY (- (CASE WHEN '膔q' THEN vt1.c0 ELSE vt1.c0 END)) ASC  NULLS FIRST, ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)*(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ASC  NULLS FIRST, ((CASE WHEN vt1.c0 THEN vt1.c0 END)/(vt1.c0)) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (1078141456) ORDER BY (- (CASE WHEN '膔q' THEN vt1.c0 ELSE vt1.c0 END)) ASC  NULLS FIRST, ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)*(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ASC  NULLS FIRST, ((CASE WHEN vt1.c0 THEN vt1.c0 END)/(vt1.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((1078141456) IS TRUE)  as count FROM vt1 ORDER BY (- (CASE WHEN '膔q' THEN vt1.c0 ELSE vt1.c0 END)) ASC  NULLS FIRST, ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)*(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ASC  NULLS FIRST, ((CASE WHEN vt1.c0 THEN vt1.c0 END)/(vt1.c0)) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (1078141456) ORDER BY (- (CASE WHEN '膔q' THEN vt1.c0 ELSE vt1.c0 END)) ASC  NULLS FIRST, ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)*(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ASC  NULLS FIRST, ((CASE WHEN vt1.c0 THEN vt1.c0 END)/(vt1.c0)) DESC  NULLS FIRST;
SELECT * FROM t1 WHERE ((NOT (t1.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((NOT (t1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((NOT (t1.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((NOT (t1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((NOT (t1.c1)) COLLATE NOCASE);
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE (((1.972032519E9)AND(((vt1.c0)||(vt0.c0))))) ORDER BY '-1548472363' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((1.972032519E9)AND(((vt1.c0)||(vt0.c0))))) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY '-1548472363' DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE (((1.972032519E9)AND(((vt1.c0)||(vt0.c0))))) ORDER BY '-1548472363' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((1.972032519E9)AND(((vt1.c0)||(vt0.c0))))) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY '-1548472363' DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE (((1.972032519E9)AND(((vt1.c0)||(vt0.c0))))) ORDER BY '-1548472363' DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1, t0, t1 WHERE (((CASE WHEN t1.c0 THEN t1.c1 END)<(CASE WHEN t1.c2 THEN t0.c81 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t1.c0 THEN t1.c1 END)<(CASE WHEN t1.c2 THEN t0.c81 END))) IS TRUE)  as count FROM vt0, vt1, t0, t1);
SELECT ALL COUNT(*) FROM vt0, vt1, t0, t1 WHERE (((CASE WHEN t1.c0 THEN t1.c1 END)<(CASE WHEN t1.c2 THEN t0.c81 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t1.c0 THEN t1.c1 END)<(CASE WHEN t1.c2 THEN t0.c81 END))) IS TRUE)  as count FROM vt0, vt1, t0, t1);
SELECT ALL COUNT(*) FROM vt0, vt1, t0, t1 WHERE (((CASE WHEN t1.c0 THEN t1.c1 END)<(CASE WHEN t1.c2 THEN t0.c81 END)));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c41) ORDER BY t0.c41 DESC  NULLS LAST, (- (t0.c84)) COLLATE RTRIM  NULLS LAST, ((TRIM(t0.c41))<('-9223372036854775808')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c41) IS TRUE)  as count FROM t0 ORDER BY t0.c41 DESC  NULLS LAST, (- (t0.c84)) COLLATE RTRIM  NULLS LAST, ((TRIM(t0.c41))<('-9223372036854775808')) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c41) ORDER BY t0.c41 DESC  NULLS LAST, (- (t0.c84)) COLLATE RTRIM  NULLS LAST, ((TRIM(t0.c41))<('-9223372036854775808')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c41) IS TRUE)  as count FROM t0 ORDER BY t0.c41 DESC  NULLS LAST, (- (t0.c84)) COLLATE RTRIM  NULLS LAST, ((TRIM(t0.c41))<('-9223372036854775808')) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c41) ORDER BY t0.c41 DESC  NULLS LAST, (- (t0.c84)) COLLATE RTRIM  NULLS LAST, ((TRIM(t0.c41))<('-9223372036854775808')) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, t1 WHERE (CAST(((0.18938012269505233)IS(t0.c81)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((0.18938012269505233)IS(t0.c81)) AS BLOB)) IS TRUE)  as count FROM t0, t1);
SELECT ALL COUNT(*) FROM t0, t1 WHERE (CAST(((0.18938012269505233)IS(t0.c81)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((0.18938012269505233)IS(t0.c81)) AS BLOB)) IS TRUE)  as count FROM t0, t1);
SELECT ALL COUNT(*) FROM t0, t1 WHERE (CAST(((0.18938012269505233)IS(t0.c81)) AS BLOB));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (LIKELIHOOD('M┆Gj', 0.9671032025551997)) ORDER BY ((CASE WHEN t0.c84 THEN t0.c84 END)|(CASE t0.c81  WHEN t0.c84 THEN t0.c81 END)) DESC, ((((((((((t0.c41)OR(vt0.c0)))AND(t0.c81)))AND(vt0.c0)))AND(t0.c84))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD('M┆Gj', 0.9671032025551997)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CASE WHEN t0.c84 THEN t0.c84 END)|(CASE t0.c81  WHEN t0.c84 THEN t0.c81 END)) DESC, ((((((((((t0.c41)OR(vt0.c0)))AND(t0.c81)))AND(vt0.c0)))AND(t0.c84))) ISNULL) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (LIKELIHOOD('M┆Gj', 0.9671032025551997)) ORDER BY ((CASE WHEN t0.c84 THEN t0.c84 END)|(CASE t0.c81  WHEN t0.c84 THEN t0.c81 END)) DESC, ((((((((((t0.c41)OR(vt0.c0)))AND(t0.c81)))AND(vt0.c0)))AND(t0.c84))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD('M┆Gj', 0.9671032025551997)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CASE WHEN t0.c84 THEN t0.c84 END)|(CASE t0.c81  WHEN t0.c84 THEN t0.c81 END)) DESC, ((((((((((t0.c41)OR(vt0.c0)))AND(t0.c81)))AND(vt0.c0)))AND(t0.c84))) ISNULL) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (LIKELIHOOD('M┆Gj', 0.9671032025551997)) ORDER BY ((CASE WHEN t0.c84 THEN t0.c84 END)|(CASE t0.c81  WHEN t0.c84 THEN t0.c81 END)) DESC, ((((((((((t0.c41)OR(vt0.c0)))AND(t0.c81)))AND(vt0.c0)))AND(t0.c84))) ISNULL) ASC;
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((CASE t0.c41  WHEN t1.c0 THEN t0.c84 ELSE t0.c52 END)|(t1.c2)) LEFT OUTER JOIN vt1 ON CAST((((t1.c2)) BETWEEN ((t0.c41)) AND ((t1.c0))) AS TEXT) LEFT OUTER JOIN t1 ON (t1.c0 COLLATE RTRIM IN ()) WHERE ((((((t0.c84)) NOT BETWEEN ((NULL)) AND ((vt0.c0)))) BETWEEN (CASE WHEN t0.c81 THEN t0.c81 ELSE t0.c52 END) AND (((t1.c2)||(0.7285137383067549)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c84)) NOT BETWEEN ((NULL)) AND ((vt0.c0)))) BETWEEN (CASE WHEN t0.c81 THEN t0.c81 ELSE t0.c52 END) AND (((t1.c2)||(0.7285137383067549))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((CASE t0.c41  WHEN t1.c0 THEN t0.c84 ELSE t0.c52 END)|(t1.c2)) LEFT OUTER JOIN vt1 ON CAST((((t1.c2)) BETWEEN ((t0.c41)) AND ((t1.c0))) AS TEXT) LEFT OUTER JOIN t1 ON (t1.c0 COLLATE RTRIM IN ()));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((CASE t0.c41  WHEN t1.c0 THEN t0.c84 ELSE t0.c52 END)|(t1.c2)) LEFT OUTER JOIN vt1 ON CAST((((t1.c2)) BETWEEN ((t0.c41)) AND ((t1.c0))) AS TEXT) LEFT OUTER JOIN t1 ON (t1.c0 COLLATE RTRIM IN ()) WHERE ((((((t0.c84)) NOT BETWEEN ((NULL)) AND ((vt0.c0)))) BETWEEN (CASE WHEN t0.c81 THEN t0.c81 ELSE t0.c52 END) AND (((t1.c2)||(0.7285137383067549)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c84)) NOT BETWEEN ((NULL)) AND ((vt0.c0)))) BETWEEN (CASE WHEN t0.c81 THEN t0.c81 ELSE t0.c52 END) AND (((t1.c2)||(0.7285137383067549))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((CASE t0.c41  WHEN t1.c0 THEN t0.c84 ELSE t0.c52 END)|(t1.c2)) LEFT OUTER JOIN vt1 ON CAST((((t1.c2)) BETWEEN ((t0.c41)) AND ((t1.c0))) AS TEXT) LEFT OUTER JOIN t1 ON (t1.c0 COLLATE RTRIM IN ()));
SELECT ALL * FROM t0 LEFT OUTER JOIN t1 ON NULL CROSS JOIN vt0 ON t0.c41 WHERE ((((t0.c41)) NOT BETWEEN (((t0.c48 IN (t0.c48, t0.c52)))) AND (((((vt0.c0)) NOT BETWEEN ((t1.c1)) AND ((t0.c84))))))) ORDER BY CAST(NULL AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c41)) NOT BETWEEN (((t0.c48 IN (t0.c48, t0.c52)))) AND (((((vt0.c0)) NOT BETWEEN ((t1.c1)) AND ((t0.c84))))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN t1 ON NULL CROSS JOIN vt0 ON t0.c41 ORDER BY CAST(NULL AS BLOB) DESC);
SELECT ALL * FROM t0 LEFT OUTER JOIN t1 ON NULL CROSS JOIN vt0 ON t0.c41 WHERE ((((t0.c41)) NOT BETWEEN (((t0.c48 IN (t0.c48, t0.c52)))) AND (((((vt0.c0)) NOT BETWEEN ((t1.c1)) AND ((t0.c84))))))) ORDER BY CAST(NULL AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c41)) NOT BETWEEN (((t0.c48 IN (t0.c48, t0.c52)))) AND (((((vt0.c0)) NOT BETWEEN ((t1.c1)) AND ((t0.c84))))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN t1 ON NULL CROSS JOIN vt0 ON t0.c41 ORDER BY CAST(NULL AS BLOB) DESC);
SELECT ALL * FROM t0 LEFT OUTER JOIN t1 ON NULL CROSS JOIN vt0 ON t0.c41 WHERE ((((t0.c41)) NOT BETWEEN (((t0.c48 IN (t0.c48, t0.c52)))) AND (((((vt0.c0)) NOT BETWEEN ((t1.c1)) AND ((t0.c84))))))) ORDER BY CAST(NULL AS BLOB) DESC;
SELECT ALL * FROM vt0, t1, vt1, t0 INDEXED BY i32 WHERE (CAST((- (vt0.c0)) AS BLOB)) ORDER BY t0.c84 ASC  NULLS LAST, ((t0.c41 COLLATE NOCASE)-(LENGTH(t1.c1))) DESC, NULLIF(DISTINCT (((t1.c2)) BETWEEN ((t0.c52)) AND (('-1899496766'))), ((t0.c84)IS NOT(t0.c52))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, t1, vt1, t0 INDEXED BY i32 ORDER BY t0.c84 ASC  NULLS LAST, ((t0.c41 COLLATE NOCASE)-(LENGTH(t1.c1))) DESC, NULLIF(DISTINCT (((t1.c2)) BETWEEN ((t0.c52)) AND (('-1899496766'))), ((t0.c84)IS NOT(t0.c52))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t1, vt1, t0 INDEXED BY i32 WHERE (CAST((- (vt0.c0)) AS BLOB)) ORDER BY t0.c84 ASC  NULLS LAST, ((t0.c41 COLLATE NOCASE)-(LENGTH(t1.c1))) DESC, NULLIF(DISTINCT (((t1.c2)) BETWEEN ((t0.c52)) AND (('-1899496766'))), ((t0.c84)IS NOT(t0.c52))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, t1, vt1, t0 INDEXED BY i32 ORDER BY t0.c84 ASC  NULLS LAST, ((t0.c41 COLLATE NOCASE)-(LENGTH(t1.c1))) DESC, NULLIF(DISTINCT (((t1.c2)) BETWEEN ((t0.c52)) AND (('-1899496766'))), ((t0.c84)IS NOT(t0.c52))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt1 WHERE (0.22008075439854868);
SELECT SUM(count) FROM (SELECT ALL ((0.22008075439854868) IS TRUE)  as count FROM t1, vt1);
SELECT COUNT(*) FROM t1, vt1 WHERE (0.22008075439854868);
SELECT SUM(count) FROM (SELECT ALL ((0.22008075439854868) IS TRUE)  as count FROM t1, vt1);
SELECT COUNT(*) FROM t1, vt1 WHERE (0.22008075439854868);
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON CASE x''  WHEN ((((t1.c0)AND(t0.c81)))OR(t1.c0)) THEN ((t1.c2) IS TRUE) WHEN t0.c41 COLLATE BINARY THEN vt0.c0 COLLATE RTRIM WHEN (t0.c41 IN ()) THEN t0.c84 END LEFT OUTER JOIN t0 ON ((((t0.c52) IS FALSE))IS NOT(((t1.c1) ISNULL))) RIGHT OUTER JOIN t1 ON (((((t0.c81)) BETWEEN ((vt1.c0)) AND ((0.15577968240818718))))<((t0.c41 IN ()))) WHERE ((((- (t0.c81))) BETWEEN (((vt1.c0) NOT BETWEEN (0.8682872918418819) AND ('0.32080161486578096'))) AND ((- (vt0.c0))))) ORDER BY ((CASE t0.c41  WHEN t0.c52 THEN t0.c48 END) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c81))) BETWEEN (((vt1.c0) NOT BETWEEN (0.8682872918418819) AND ('0.32080161486578096'))) AND ((- (vt0.c0))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CASE x''  WHEN ((((t1.c0)AND(t0.c81)))OR(t1.c0)) THEN ((t1.c2) IS TRUE) WHEN t0.c41 COLLATE BINARY THEN vt0.c0 COLLATE RTRIM WHEN (t0.c41 IN ()) THEN t0.c84 END LEFT OUTER JOIN t0 ON ((((t0.c52) IS FALSE))IS NOT(((t1.c1) ISNULL))) RIGHT OUTER JOIN t1 ON (((((t0.c81)) BETWEEN ((vt1.c0)) AND ((0.15577968240818718))))<((t0.c41 IN ()))) ORDER BY ((CASE t0.c41  WHEN t0.c52 THEN t0.c48 END) IS FALSE) ASC);
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON CASE x''  WHEN ((((t1.c0)AND(t0.c81)))OR(t1.c0)) THEN ((t1.c2) IS TRUE) WHEN t0.c41 COLLATE BINARY THEN vt0.c0 COLLATE RTRIM WHEN (t0.c41 IN ()) THEN t0.c84 END LEFT OUTER JOIN t0 ON ((((t0.c52) IS FALSE))IS NOT(((t1.c1) ISNULL))) RIGHT OUTER JOIN t1 ON (((((t0.c81)) BETWEEN ((vt1.c0)) AND ((0.15577968240818718))))<((t0.c41 IN ()))) WHERE ((((- (t0.c81))) BETWEEN (((vt1.c0) NOT BETWEEN (0.8682872918418819) AND ('0.32080161486578096'))) AND ((- (vt0.c0))))) ORDER BY ((CASE t0.c41  WHEN t0.c52 THEN t0.c48 END) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c81))) BETWEEN (((vt1.c0) NOT BETWEEN (0.8682872918418819) AND ('0.32080161486578096'))) AND ((- (vt0.c0))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CASE x''  WHEN ((((t1.c0)AND(t0.c81)))OR(t1.c0)) THEN ((t1.c2) IS TRUE) WHEN t0.c41 COLLATE BINARY THEN vt0.c0 COLLATE RTRIM WHEN (t0.c41 IN ()) THEN t0.c84 END LEFT OUTER JOIN t0 ON ((((t0.c52) IS FALSE))IS NOT(((t1.c1) ISNULL))) RIGHT OUTER JOIN t1 ON (((((t0.c81)) BETWEEN ((vt1.c0)) AND ((0.15577968240818718))))<((t0.c41 IN ()))) ORDER BY ((CASE t0.c41  WHEN t0.c52 THEN t0.c48 END) IS FALSE) ASC);
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON CASE ((vt0.c0)*(vt0.c0))  WHEN '-411130217' THEN (NOT (t0.c52)) ELSE CASE '224410638'  WHEN t0.c81 THEN t0.c48 ELSE t0.c41 END END WHERE (((t0.c48) NOTNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t0.c48) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON CASE ((vt0.c0)*(vt0.c0))  WHEN '-411130217' THEN (NOT (t0.c52)) ELSE CASE '224410638'  WHEN t0.c81 THEN t0.c48 ELSE t0.c41 END END);
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON CASE ((vt0.c0)*(vt0.c0))  WHEN '-411130217' THEN (NOT (t0.c52)) ELSE CASE '224410638'  WHEN t0.c81 THEN t0.c48 ELSE t0.c41 END END WHERE (((t0.c48) NOTNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t0.c48) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON CASE ((vt0.c0)*(vt0.c0))  WHEN '-411130217' THEN (NOT (t0.c52)) ELSE CASE '224410638'  WHEN t0.c81 THEN t0.c48 ELSE t0.c41 END END);
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON CASE ((vt0.c0)*(vt0.c0))  WHEN '-411130217' THEN (NOT (t0.c52)) ELSE CASE '224410638'  WHEN t0.c81 THEN t0.c48 ELSE t0.c41 END END WHERE (((t0.c48) NOTNULL) COLLATE RTRIM);
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN t0 ON UNLIKELY(DISTINCT t0.c52) WHERE ((((NOT (t0.c48))) NOT NULL)) ORDER BY SQLITE_COMPILEOPTION_USED(CASE t1.c2  WHEN 'GS掗ꂺSl' THEN t1.c2 WHEN t0.c84 THEN t1.c0 WHEN t1.c0 THEN t0.c41 WHEN t1.c2 THEN t0.c48 WHEN t0.c84 THEN t0.c81 ELSE t0.c84 END), LOWER(t0.c48), CAST(((t1.c1)%(t1.c2)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c48))) NOT NULL)) IS TRUE)  as count FROM t1 LEFT OUTER JOIN t0 ON UNLIKELY(DISTINCT t0.c52) ORDER BY SQLITE_COMPILEOPTION_USED(CASE t1.c2  WHEN 'GS掗ꂺSl' THEN t1.c2 WHEN t0.c84 THEN t1.c0 WHEN t1.c0 THEN t0.c41 WHEN t1.c2 THEN t0.c48 WHEN t0.c84 THEN t0.c81 ELSE t0.c84 END), LOWER(t0.c48), CAST(((t1.c1)%(t1.c2)) AS NUMERIC));
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN t0 ON UNLIKELY(DISTINCT t0.c52) WHERE ((((NOT (t0.c48))) NOT NULL)) ORDER BY SQLITE_COMPILEOPTION_USED(CASE t1.c2  WHEN 'GS掗ꂺSl' THEN t1.c2 WHEN t0.c84 THEN t1.c0 WHEN t1.c0 THEN t0.c41 WHEN t1.c2 THEN t0.c48 WHEN t0.c84 THEN t0.c81 ELSE t0.c84 END), LOWER(t0.c48), CAST(((t1.c1)%(t1.c2)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c48))) NOT NULL)) IS TRUE)  as count FROM t1 LEFT OUTER JOIN t0 ON UNLIKELY(DISTINCT t0.c52) ORDER BY SQLITE_COMPILEOPTION_USED(CASE t1.c2  WHEN 'GS掗ꂺSl' THEN t1.c2 WHEN t0.c84 THEN t1.c0 WHEN t1.c0 THEN t0.c41 WHEN t1.c2 THEN t0.c48 WHEN t0.c84 THEN t0.c81 ELSE t0.c84 END), LOWER(t0.c48), CAST(((t1.c1)%(t1.c2)) AS NUMERIC));
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN t0 ON UNLIKELY(DISTINCT t0.c52) WHERE ((((NOT (t0.c48))) NOT NULL)) ORDER BY SQLITE_COMPILEOPTION_USED(CASE t1.c2  WHEN 'GS掗ꂺSl' THEN t1.c2 WHEN t0.c84 THEN t1.c0 WHEN t1.c0 THEN t0.c41 WHEN t1.c2 THEN t0.c48 WHEN t0.c84 THEN t0.c81 ELSE t0.c84 END), LOWER(t0.c48), CAST(((t1.c1)%(t1.c2)) AS NUMERIC);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON (- (CASE vt0.c0  WHEN vt1.c0 THEN NULL ELSE x'' END)) WHERE (INSTR(CASE WHEN vt1.c0 THEN 1476878850 ELSE vt0.c0 END, ((vt0.c0)<=(vt1.c0)))) ORDER BY ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((INSTR(CASE WHEN vt1.c0 THEN 1476878850 ELSE vt0.c0 END, ((vt0.c0)<=(vt1.c0)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (- (CASE vt0.c0  WHEN vt1.c0 THEN NULL ELSE x'' END)) ORDER BY ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM ASC);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON (- (CASE vt0.c0  WHEN vt1.c0 THEN NULL ELSE x'' END)) WHERE (INSTR(CASE WHEN vt1.c0 THEN 1476878850 ELSE vt0.c0 END, ((vt0.c0)<=(vt1.c0)))) ORDER BY ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((INSTR(CASE WHEN vt1.c0 THEN 1476878850 ELSE vt0.c0 END, ((vt0.c0)<=(vt1.c0)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (- (CASE vt0.c0  WHEN vt1.c0 THEN NULL ELSE x'' END)) ORDER BY ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM ASC);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON (- (CASE vt0.c0  WHEN vt1.c0 THEN NULL ELSE x'' END)) WHERE (INSTR(CASE WHEN vt1.c0 THEN 1476878850 ELSE vt0.c0 END, ((vt0.c0)<=(vt1.c0)))) ORDER BY ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (DATE(((vt1.c0)||(vt1.c0)), ((0.4372548672103247) IS TRUE), (((vt1.c0))>=((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((DATE(((vt1.c0)||(vt1.c0)), ((0.4372548672103247) IS TRUE), (((vt1.c0))>=((vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (DATE(((vt1.c0)||(vt1.c0)), ((0.4372548672103247) IS TRUE), (((vt1.c0))>=((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((DATE(((vt1.c0)||(vt1.c0)), ((0.4372548672103247) IS TRUE), (((vt1.c0))>=((vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (DATE(((vt1.c0)||(vt1.c0)), ((0.4372548672103247) IS TRUE), (((vt1.c0))>=((vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0 INDEXED BY i32 RIGHT OUTER JOIN t1 ON CAST(SQLITE_SOURCE_ID() AS INTEGER) RIGHT OUTER JOIN vt1 ON ((((t0.c41) IS FALSE))!=((((t1.c1))<=((vt0.c0))))) WHERE (((((((t1.c0) NOT BETWEEN (t0.c52) AND (t1.c0)))OR(((t0.c52) NOTNULL))))OR((t0.c41 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c0) NOT BETWEEN (t0.c52) AND (t1.c0)))OR(((t0.c52) NOTNULL))))OR((t0.c41 IN ())))) IS TRUE)  as count FROM vt0, t0 INDEXED BY i32 RIGHT OUTER JOIN t1 ON CAST(SQLITE_SOURCE_ID() AS INTEGER) RIGHT OUTER JOIN vt1 ON ((((t0.c41) IS FALSE))!=((((t1.c1))<=((vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, t0 INDEXED BY i32 RIGHT OUTER JOIN t1 ON CAST(SQLITE_SOURCE_ID() AS INTEGER) RIGHT OUTER JOIN vt1 ON ((((t0.c41) IS FALSE))!=((((t1.c1))<=((vt0.c0))))) WHERE (((((((t1.c0) NOT BETWEEN (t0.c52) AND (t1.c0)))OR(((t0.c52) NOTNULL))))OR((t0.c41 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c0) NOT BETWEEN (t0.c52) AND (t1.c0)))OR(((t0.c52) NOTNULL))))OR((t0.c41 IN ())))) IS TRUE)  as count FROM vt0, t0 INDEXED BY i32 RIGHT OUTER JOIN t1 ON CAST(SQLITE_SOURCE_ID() AS INTEGER) RIGHT OUTER JOIN vt1 ON ((((t0.c41) IS FALSE))!=((((t1.c1))<=((vt0.c0))))));
SELECT * FROM t0 WHERE (((((((((((-9.64163312E8)<(x'')))OR(CASE t0.c84  WHEN t0.c81 THEN t0.c41 WHEN t0.c81 THEN t0.c41 WHEN t0.c84 THEN t0.c52 END)))AND(((t0.c48)&(t0.c41)))))OR(t0.c41)))AND((t0.c41 IN ())))) ORDER BY ((((t0.c41)AND(t0.c48))) NOT BETWEEN (((t0.c84)>(t0.c84))) AND (t0.c84 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((-9.64163312E8)<(x'')))OR(CASE t0.c84  WHEN t0.c81 THEN t0.c41 WHEN t0.c81 THEN t0.c41 WHEN t0.c84 THEN t0.c52 END)))AND(((t0.c48)&(t0.c41)))))OR(t0.c41)))AND((t0.c41 IN ())))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c41)AND(t0.c48))) NOT BETWEEN (((t0.c84)>(t0.c84))) AND (t0.c84 COLLATE RTRIM)) DESC);
SELECT * FROM t0 WHERE (((((((((((-9.64163312E8)<(x'')))OR(CASE t0.c84  WHEN t0.c81 THEN t0.c41 WHEN t0.c81 THEN t0.c41 WHEN t0.c84 THEN t0.c52 END)))AND(((t0.c48)&(t0.c41)))))OR(t0.c41)))AND((t0.c41 IN ())))) ORDER BY ((((t0.c41)AND(t0.c48))) NOT BETWEEN (((t0.c84)>(t0.c84))) AND (t0.c84 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((-9.64163312E8)<(x'')))OR(CASE t0.c84  WHEN t0.c81 THEN t0.c41 WHEN t0.c81 THEN t0.c41 WHEN t0.c84 THEN t0.c52 END)))AND(((t0.c48)&(t0.c41)))))OR(t0.c41)))AND((t0.c41 IN ())))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c41)AND(t0.c48))) NOT BETWEEN (((t0.c84)>(t0.c84))) AND (t0.c84 COLLATE RTRIM)) DESC);
SELECT * FROM t0 WHERE (((((((((((-9.64163312E8)<(x'')))OR(CASE t0.c84  WHEN t0.c81 THEN t0.c41 WHEN t0.c81 THEN t0.c41 WHEN t0.c84 THEN t0.c52 END)))AND(((t0.c48)&(t0.c41)))))OR(t0.c41)))AND((t0.c41 IN ())))) ORDER BY ((((t0.c41)AND(t0.c48))) NOT BETWEEN (((t0.c84)>(t0.c84))) AND (t0.c84 COLLATE RTRIM)) DESC;
SELECT ALL COUNT(*) FROM vt1, t1, vt0 INDEXED BY i32, t0 WHERE (((((t0.c48) ISNULL))%((t0.c41 IN ())))) ORDER BY CASE (t0.c81 IN (vt0.c0))  WHEN ((t0.c81) NOT BETWEEN (vt1.c0) AND (t0.c41)) THEN ((t0.c52)<(t0.c52)) ELSE t0.c52 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c48) ISNULL))%((t0.c41 IN ())))) IS TRUE)  as count FROM vt1, t1, vt0 INDEXED BY i32, t0 ORDER BY CASE (t0.c81 IN (vt0.c0))  WHEN ((t0.c81) NOT BETWEEN (vt1.c0) AND (t0.c41)) THEN ((t0.c52)<(t0.c52)) ELSE t0.c52 END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t1, vt0 INDEXED BY i32, t0 WHERE (((((t0.c48) ISNULL))%((t0.c41 IN ())))) ORDER BY CASE (t0.c81 IN (vt0.c0))  WHEN ((t0.c81) NOT BETWEEN (vt1.c0) AND (t0.c41)) THEN ((t0.c52)<(t0.c52)) ELSE t0.c52 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c48) ISNULL))%((t0.c41 IN ())))) IS TRUE)  as count FROM vt1, t1, vt0 INDEXED BY i32, t0 ORDER BY CASE (t0.c81 IN (vt0.c0))  WHEN ((t0.c81) NOT BETWEEN (vt1.c0) AND (t0.c41)) THEN ((t0.c52)<(t0.c52)) ELSE t0.c52 END DESC  NULLS LAST);
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON ((SUBSTR(t0.c48, t0.c81))>=(((t0.c84)OR(vt1.c0)))) LEFT OUTER JOIN t1 ON ((t0.c84 COLLATE BINARY)IS(load_extension(vt0.c0))) FULL OUTER JOIN vt0 ON NULLIF(t1.c1, t0.c84) WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON ((SUBSTR(t0.c48, t0.c81))>=(((t0.c84)OR(vt1.c0)))) LEFT OUTER JOIN t1 ON ((t0.c84 COLLATE BINARY)IS(load_extension(vt0.c0))) FULL OUTER JOIN vt0 ON NULLIF(t1.c1, t0.c84));
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON ((SUBSTR(t0.c48, t0.c81))>=(((t0.c84)OR(vt1.c0)))) LEFT OUTER JOIN t1 ON ((t0.c84 COLLATE BINARY)IS(load_extension(vt0.c0))) FULL OUTER JOIN vt0 ON NULLIF(t1.c1, t0.c84) WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON ((SUBSTR(t0.c48, t0.c81))>=(((t0.c84)OR(vt1.c0)))) LEFT OUTER JOIN t1 ON ((t0.c84 COLLATE BINARY)IS(load_extension(vt0.c0))) FULL OUTER JOIN vt0 ON NULLIF(t1.c1, t0.c84));
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c0);
SELECT COUNT(*) FROM t1 WHERE (((CAST(x'' AS REAL))!=(CAST(t1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((CAST(x'' AS REAL))<>(CAST(t1.c0 AS NUMERIC)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((CAST(x'' AS REAL))!=(CAST(t1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((CAST(x'' AS REAL))<>(CAST(t1.c0 AS NUMERIC)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((CAST(x'' AS REAL))!=(CAST(t1.c0 AS NUMERIC))));
SELECT COUNT(*) FROM t1 WHERE (0.12035787149091581);
SELECT SUM(count) FROM (SELECT ((0.12035787149091581) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (0.12035787149091581);
SELECT SUM(count) FROM (SELECT ((0.12035787149091581) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (0.12035787149091581);
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (CASE ((vt0.c0)<<(t1.c0))  WHEN CASE WHEN t1.c1 THEN t1.c2 ELSE vt0.c0 END THEN ((vt0.c0)+(t1.c2)) END) ORDER BY (~ ((vt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)<<(t1.c0))  WHEN CASE WHEN t1.c1 THEN t1.c2 ELSE vt0.c0 END THEN ((vt0.c0)+(t1.c2)) END) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY (~ ((vt0.c0 IN ()))) ASC);
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (CASE ((vt0.c0)<<(t1.c0))  WHEN CASE WHEN t1.c1 THEN t1.c2 ELSE vt0.c0 END THEN ((vt0.c0)+(t1.c2)) END) ORDER BY (~ ((vt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)<<(t1.c0))  WHEN CASE WHEN t1.c1 THEN t1.c2 ELSE vt0.c0 END THEN ((vt0.c0)+(t1.c2)) END) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY (~ ((vt0.c0 IN ()))) ASC);
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (CASE ((vt0.c0)<<(t1.c0))  WHEN CASE WHEN t1.c1 THEN t1.c2 ELSE vt0.c0 END THEN ((vt0.c0)+(t1.c2)) END) ORDER BY (~ ((vt0.c0 IN ()))) ASC;
SELECT * FROM vt0, vt1 WHERE ((((((vt0.c0 IN (vt0.c0)))AND(NULL)))OR(CASE NULL  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY CASE WHEN vt0.c0 THEN ((vt1.c0)||(vt1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN (vt0.c0)))AND(NULL)))OR(CASE NULL  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN vt0.c0 THEN ((vt1.c0)||(vt1.c0)) END  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE ((((((vt0.c0 IN (vt0.c0)))AND(NULL)))OR(CASE NULL  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY CASE WHEN vt0.c0 THEN ((vt1.c0)||(vt1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN (vt0.c0)))AND(NULL)))OR(CASE NULL  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN vt0.c0 THEN ((vt1.c0)||(vt1.c0)) END  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE ((((((vt0.c0 IN (vt0.c0)))AND(NULL)))OR(CASE NULL  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY CASE WHEN vt0.c0 THEN ((vt1.c0)||(vt1.c0)) END  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (((t1.c0 COLLATE BINARY) BETWEEN (((t1.c0)IS NOT(t1.c0))) AND (CAST(t1.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((t1.c0 COLLATE BINARY) BETWEEN (((t1.c0)IS NOT(t1.c0))) AND (CAST(t1.c1 AS INTEGER)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((t1.c0 COLLATE BINARY) BETWEEN (((t1.c0)IS NOT(t1.c0))) AND (CAST(t1.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((t1.c0 COLLATE BINARY) BETWEEN (((t1.c0)IS NOT(t1.c0))) AND (CAST(t1.c1 AS INTEGER)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((t1.c0 COLLATE BINARY) BETWEEN (((t1.c0)IS NOT(t1.c0))) AND (CAST(t1.c1 AS INTEGER))));
SELECT * FROM vt0, vt1, t0 INNER JOIN t1 ON x'' WHERE (t0.c81 COLLATE BINARY) ORDER BY CASE WHEN ((vt0.c0) IS FALSE) THEN ((t0.c48)%(vt1.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c81 COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED, t0 INNER JOIN t1 ON x'' ORDER BY CASE WHEN ((vt0.c0) IS FALSE) THEN ((t0.c48)%(vt1.c0)) END  NULLS FIRST);
SELECT * FROM vt0, vt1, t0 INNER JOIN t1 ON x'' WHERE (t0.c81 COLLATE BINARY) ORDER BY CASE WHEN ((vt0.c0) IS FALSE) THEN ((t0.c48)%(vt1.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c81 COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED, t0 INNER JOIN t1 ON x'' ORDER BY CASE WHEN ((vt0.c0) IS FALSE) THEN ((t0.c48)%(vt1.c0)) END  NULLS FIRST);
SELECT * FROM vt0, vt1, t0 INNER JOIN t1 ON x'' WHERE (t0.c81 COLLATE BINARY) ORDER BY CASE WHEN ((vt0.c0) IS FALSE) THEN ((t0.c48)%(vt1.c0)) END  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (-9.4441048E8);
SELECT SUM(count) FROM (SELECT ALL ((-9.4441048E8) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (-9.4441048E8);
SELECT SUM(count) FROM (SELECT ALL ((-9.4441048E8) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (-9.4441048E8);
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT (((t0.c84)>(t0.c48))))) ORDER BY (((- (t0.c48)))/((t0.c84 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c84)>(t0.c48))))) IS TRUE)  as count FROM t0 ORDER BY (((- (t0.c48)))/((t0.c84 IN ()))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT (((t0.c84)>(t0.c48))))) ORDER BY (((- (t0.c48)))/((t0.c84 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c84)>(t0.c48))))) IS TRUE)  as count FROM t0 ORDER BY (((- (t0.c48)))/((t0.c84 IN ()))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT (((t0.c84)>(t0.c48))))) ORDER BY (((- (t0.c48)))/((t0.c84 IN ()))) DESC;
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t1 ON ((((t0.c48) BETWEEN (t0.c84) AND (t0.c52))) NOTNULL) INNER JOIN t0 ON t0.c81 INNER JOIN vt0 ON ((((t0.c41) NOT BETWEEN (vt1.c0) AND (t0.c81)))>(((((t0.c48)OR(vt1.c0)))OR(t1.c0)))) WHERE (((CAST(t1.c2 AS TEXT))=(t0.c81))) ORDER BY (((vt0.c0 IN ()))>>(((((t0.c81)OR(t1.c0)))AND(t0.c41))))  NULLS FIRST, (+ (CAST(6.45093747E8 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c2 AS TEXT))=(t0.c81))) IS TRUE)  as count FROM vt1 CROSS JOIN t1 ON ((((t0.c48) BETWEEN (t0.c84) AND (t0.c52))) NOTNULL) INNER JOIN t0 ON t0.c81 INNER JOIN vt0 ON ((((t0.c41) NOT BETWEEN (vt1.c0) AND (t0.c81)))>(((((t0.c48)OR(vt1.c0)))OR(t1.c0)))) ORDER BY (((vt0.c0 IN ()))>>(((((t0.c81)OR(t1.c0)))AND(t0.c41))))  NULLS FIRST, (+ (CAST(6.45093747E8 AS REAL))) ASC);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t1 ON ((((t0.c48) BETWEEN (t0.c84) AND (t0.c52))) NOTNULL) INNER JOIN t0 ON t0.c81 INNER JOIN vt0 ON ((((t0.c41) NOT BETWEEN (vt1.c0) AND (t0.c81)))>(((((t0.c48)OR(vt1.c0)))OR(t1.c0)))) WHERE (((CAST(t1.c2 AS TEXT))=(t0.c81))) ORDER BY (((vt0.c0 IN ()))>>(((((t0.c81)OR(t1.c0)))AND(t0.c41))))  NULLS FIRST, (+ (CAST(6.45093747E8 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c2 AS TEXT))=(t0.c81))) IS TRUE)  as count FROM vt1 CROSS JOIN t1 ON ((((t0.c48) BETWEEN (t0.c84) AND (t0.c52))) NOTNULL) INNER JOIN t0 ON t0.c81 INNER JOIN vt0 ON ((((t0.c41) NOT BETWEEN (vt1.c0) AND (t0.c81)))>(((((t0.c48)OR(vt1.c0)))OR(t1.c0)))) ORDER BY (((vt0.c0 IN ()))>>(((((t0.c81)OR(t1.c0)))AND(t0.c41))))  NULLS FIRST, (+ (CAST(6.45093747E8 AS REAL))) ASC);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t1 ON ((((t0.c48) BETWEEN (t0.c84) AND (t0.c52))) NOTNULL) INNER JOIN t0 ON t0.c81 INNER JOIN vt0 ON ((((t0.c41) NOT BETWEEN (vt1.c0) AND (t0.c81)))>(((((t0.c48)OR(vt1.c0)))OR(t1.c0)))) WHERE (((CAST(t1.c2 AS TEXT))=(t0.c81))) ORDER BY (((vt0.c0 IN ()))>>(((((t0.c81)OR(t1.c0)))AND(t0.c41))))  NULLS FIRST, (+ (CAST(6.45093747E8 AS REAL))) ASC;
SELECT COUNT(*) FROM t1, vt0, vt1, t0 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE RTRIM) ORDER BY (t0.c84 IN ())  NULLS LAST, ((((vt0.c0) BETWEEN (t1.c0) AND (t1.c1))) NOT BETWEEN ((((t1.c1)) BETWEEN (('!汻웢&Fpe/')) AND ((t0.c48)))) AND (((t1.c1) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM t1, vt0, vt1, t0 ORDER BY (t0.c84 IN ())  NULLS LAST, ((((vt0.c0) BETWEEN (t1.c0) AND (t1.c1))) NOT BETWEEN ((((t1.c1)) BETWEEN (('!汻웢&Fpe/')) AND ((t0.c48)))) AND (((t1.c1) NOTNULL)))  NULLS LAST);
SELECT COUNT(*) FROM t1, vt0, vt1, t0 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE RTRIM) ORDER BY (t0.c84 IN ())  NULLS LAST, ((((vt0.c0) BETWEEN (t1.c0) AND (t1.c1))) NOT BETWEEN ((((t1.c1)) BETWEEN (('!汻웢&Fpe/')) AND ((t0.c48)))) AND (((t1.c1) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM t1, vt0, vt1, t0 ORDER BY (t0.c84 IN ())  NULLS LAST, ((((vt0.c0) BETWEEN (t1.c0) AND (t1.c1))) NOT BETWEEN ((((t1.c1)) BETWEEN (('!汻웢&Fpe/')) AND ((t0.c48)))) AND (((t1.c1) NOTNULL)))  NULLS LAST);
SELECT COUNT(*) FROM t1, vt0, vt1, t0 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE RTRIM) ORDER BY (t0.c84 IN ())  NULLS LAST, ((((vt0.c0) BETWEEN (t1.c0) AND (t1.c1))) NOT BETWEEN ((((t1.c1)) BETWEEN (('!汻웢&Fpe/')) AND ((t0.c48)))) AND (((t1.c1) NOTNULL)))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, t1, vt1, vt0 WHERE (UNLIKELY((NOT (t0.c41)))) ORDER BY (~ (((((((((t0.c84)AND(t1.c0)))OR(t0.c52)))OR(t0.c52)))OR(NULL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY((NOT (t0.c41)))) IS TRUE)  as count FROM t0, t1, vt1, vt0 ORDER BY (~ (((((((((t0.c84)AND(t1.c0)))OR(t0.c52)))OR(t0.c52)))OR(NULL)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, t1, vt1, vt0 WHERE (UNLIKELY((NOT (t0.c41)))) ORDER BY (~ (((((((((t0.c84)AND(t1.c0)))OR(t0.c52)))OR(t0.c52)))OR(NULL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY((NOT (t0.c41)))) IS TRUE)  as count FROM t0, t1, vt1, vt0 ORDER BY (~ (((((((((t0.c84)AND(t1.c0)))OR(t0.c52)))OR(t0.c52)))OR(NULL)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, t1, vt1, vt0 WHERE (UNLIKELY((NOT (t0.c41)))) ORDER BY (~ (((((((((t0.c84)AND(t1.c0)))OR(t0.c52)))OR(t0.c52)))OR(NULL)))) DESC  NULLS LAST;
SELECT * FROM vt0, t1 CROSS JOIN vt1 ON 1.350702151E9 WHERE ((((((t1.c0))>=((vt1.c0)))) BETWEEN (COALESCE(vt0.c0, vt0.c0, t1.c0, t1.c2)) AND ((+ (t1.c1)))));
SELECT SUM(count) FROM (SELECT (((((((t1.c0))>=((vt1.c0)))) BETWEEN (COALESCE(vt0.c0, vt0.c0, t1.c0, t1.c2)) AND ((+ (t1.c1))))) IS TRUE)  as count FROM vt0, t1 CROSS JOIN vt1 ON 1.350702151E9);
SELECT * FROM vt0, t1 CROSS JOIN vt1 ON 1.350702151E9 WHERE ((((((t1.c0))>=((vt1.c0)))) BETWEEN (COALESCE(vt0.c0, vt0.c0, t1.c0, t1.c2)) AND ((+ (t1.c1)))));
SELECT SUM(count) FROM (SELECT (((((((t1.c0))>=((vt1.c0)))) BETWEEN (COALESCE(vt0.c0, vt0.c0, t1.c0, t1.c2)) AND ((+ (t1.c1))))) IS TRUE)  as count FROM vt0, t1 CROSS JOIN vt1 ON 1.350702151E9);
SELECT * FROM vt0, t1 CROSS JOIN vt1 ON 1.350702151E9 WHERE ((((((t1.c0))>=((vt1.c0)))) BETWEEN (COALESCE(vt0.c0, vt0.c0, t1.c0, t1.c2)) AND ((+ (t1.c1)))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON (((t0.c84, t0.c48, t0.c81)) NOT BETWEEN ((CAST('' AS NUMERIC), NULL, ((t0.c81) NOT NULL))) AND (((vt1.c0 IN (vt1.c0, t0.c81)), ((t0.c41) NOT BETWEEN (vt1.c0) AND (t0.c48)), ((vt1.c0)=(t0.c84))))) WHERE ((NOT (CASE t0.c84  WHEN t0.c52 THEN vt1.c0 ELSE t0.c48 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE t0.c84  WHEN t0.c52 THEN vt1.c0 ELSE t0.c48 END))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON (((t0.c84, t0.c48, t0.c81)) NOT BETWEEN ((CAST('' AS NUMERIC), NULL, ((t0.c81) NOT NULL))) AND (((vt1.c0 IN (vt1.c0, t0.c81)), ((t0.c41) NOT BETWEEN (vt1.c0) AND (t0.c48)), ((vt1.c0)=(t0.c84))))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON (((t0.c84, t0.c48, t0.c81)) NOT BETWEEN ((CAST('' AS NUMERIC), NULL, ((t0.c81) NOT NULL))) AND (((vt1.c0 IN (vt1.c0, t0.c81)), ((t0.c41) NOT BETWEEN (vt1.c0) AND (t0.c48)), ((vt1.c0)=(t0.c84))))) WHERE ((NOT (CASE t0.c84  WHEN t0.c52 THEN vt1.c0 ELSE t0.c48 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE t0.c84  WHEN t0.c52 THEN vt1.c0 ELSE t0.c48 END))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON (((t0.c84, t0.c48, t0.c81)) NOT BETWEEN ((CAST('' AS NUMERIC), NULL, ((t0.c81) NOT NULL))) AND (((vt1.c0 IN (vt1.c0, t0.c81)), ((t0.c41) NOT BETWEEN (vt1.c0) AND (t0.c48)), ((vt1.c0)=(t0.c84))))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON (((t0.c84, t0.c48, t0.c81)) NOT BETWEEN ((CAST('' AS NUMERIC), NULL, ((t0.c81) NOT NULL))) AND (((vt1.c0 IN (vt1.c0, t0.c81)), ((t0.c41) NOT BETWEEN (vt1.c0) AND (t0.c48)), ((vt1.c0)=(t0.c84))))) WHERE ((NOT (CASE t0.c84  WHEN t0.c52 THEN vt1.c0 ELSE t0.c48 END)));
SELECT ALL * FROM t0, t1 CROSS JOIN vt1 ON ((((t1.c2) NOTNULL))GLOB(t1.c2 COLLATE RTRIM)) WHERE (((CASE t1.c1  WHEN t1.c0 THEN t0.c48 END) BETWEEN (CAST(t0.c81 AS TEXT)) AND (0.10078293277736783)));
SELECT SUM(count) FROM (SELECT ((((CASE t1.c1  WHEN t1.c0 THEN t0.c48 END) BETWEEN (CAST(t0.c81 AS TEXT)) AND (0.10078293277736783))) IS TRUE)  as count FROM t0, t1 CROSS JOIN vt1 ON ((((t1.c2) NOTNULL))GLOB(t1.c2 COLLATE RTRIM)));
SELECT ALL * FROM t0, t1 CROSS JOIN vt1 ON ((((t1.c2) NOTNULL))GLOB(t1.c2 COLLATE RTRIM)) WHERE (((CASE t1.c1  WHEN t1.c0 THEN t0.c48 END) BETWEEN (CAST(t0.c81 AS TEXT)) AND (0.10078293277736783)));
SELECT SUM(count) FROM (SELECT ((((CASE t1.c1  WHEN t1.c0 THEN t0.c48 END) BETWEEN (CAST(t0.c81 AS TEXT)) AND (0.10078293277736783))) IS TRUE)  as count FROM t0, t1 CROSS JOIN vt1 ON ((((t1.c2) NOTNULL))GLOB(t1.c2 COLLATE RTRIM)));
SELECT ALL * FROM t0, t1 CROSS JOIN vt1 ON ((((t1.c2) NOTNULL))GLOB(t1.c2 COLLATE RTRIM)) WHERE (((CASE t1.c1  WHEN t1.c0 THEN t0.c48 END) BETWEEN (CAST(t0.c81 AS TEXT)) AND (0.10078293277736783)));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (NULLIF(DISTINCT CASE WHEN t0.c52 THEN t0.c84 WHEN t0.c41 THEN t0.c52 WHEN t0.c81 THEN t0.c81 END, DATE(vt0.c0, 0.6763251463712006, t0.c84)));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT CASE WHEN t0.c52 THEN t0.c84 WHEN t0.c41 THEN t0.c52 WHEN t0.c81 THEN t0.c81 END, DATE(vt0.c0, 0.6763251463712006, t0.c84))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (NULLIF(DISTINCT CASE WHEN t0.c52 THEN t0.c84 WHEN t0.c41 THEN t0.c52 WHEN t0.c81 THEN t0.c81 END, DATE(vt0.c0, 0.6763251463712006, t0.c84)));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT CASE WHEN t0.c52 THEN t0.c84 WHEN t0.c41 THEN t0.c52 WHEN t0.c81 THEN t0.c81 END, DATE(vt0.c0, 0.6763251463712006, t0.c84))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (NULLIF(DISTINCT CASE WHEN t0.c52 THEN t0.c84 WHEN t0.c41 THEN t0.c52 WHEN t0.c81 THEN t0.c81 END, DATE(vt0.c0, 0.6763251463712006, t0.c84)));
SELECT ALL * FROM t1, vt1, vt0, t0 WHERE ((((~ (t0.c41)))%((((vt1.c0)) NOT BETWEEN ((t1.c0)) AND ((t0.c52))))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c41)))%((((vt1.c0)) NOT BETWEEN ((t1.c0)) AND ((t0.c52)))))) IS TRUE)  as count FROM t1, vt1, vt0, t0);
SELECT ALL * FROM t1, vt1, vt0, t0 WHERE ((((~ (t0.c41)))%((((vt1.c0)) NOT BETWEEN ((t1.c0)) AND ((t0.c52))))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c41)))%((((vt1.c0)) NOT BETWEEN ((t1.c0)) AND ((t0.c52)))))) IS TRUE)  as count FROM t1, vt1, vt0, t0);
SELECT ALL * FROM t1, vt1, vt0, t0 WHERE ((((~ (t0.c41)))%((((vt1.c0)) NOT BETWEEN ((t1.c0)) AND ((t0.c52))))));
SELECT COUNT(*) FROM vt0 WHERE (CAST(0.27452435262926256 AS BLOB) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.27452435262926256 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(0.27452435262926256 AS BLOB) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.27452435262926256 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(0.27452435262926256 AS BLOB) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, t0 CROSS JOIN vt1 ON x'0d63' CROSS JOIN t1 ON ((t0.c84 IN (t1.c0, t0.c84)) IN (LIKELIHOOD(t0.c81, 0.001273960537694685))) WHERE (ABS(vt1.c0) COLLATE RTRIM) ORDER BY '0.06848005861786421'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(vt1.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 CROSS JOIN vt1 ON x'0d63' CROSS JOIN t1 ON ((t0.c84 IN (t1.c0, t0.c84)) IN (LIKELIHOOD(t0.c81, 0.001273960537694685))) ORDER BY '0.06848005861786421'  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 CROSS JOIN vt1 ON x'0d63' CROSS JOIN t1 ON ((t0.c84 IN (t1.c0, t0.c84)) IN (LIKELIHOOD(t0.c81, 0.001273960537694685))) WHERE (ABS(vt1.c0) COLLATE RTRIM) ORDER BY '0.06848005861786421'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(vt1.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 CROSS JOIN vt1 ON x'0d63' CROSS JOIN t1 ON ((t0.c84 IN (t1.c0, t0.c84)) IN (LIKELIHOOD(t0.c81, 0.001273960537694685))) ORDER BY '0.06848005861786421'  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 CROSS JOIN vt1 ON x'0d63' CROSS JOIN t1 ON ((t0.c84 IN (t1.c0, t0.c84)) IN (LIKELIHOOD(t0.c81, 0.001273960537694685))) WHERE (ABS(vt1.c0) COLLATE RTRIM) ORDER BY '0.06848005861786421'  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN t1 ON MIN(CASE t0.c41  WHEN 0.9824893104770315 THEN vt0.c0 END, CAST(t1.c1 AS REAL)) RIGHT OUTER JOIN vt0 ON LIKELY(CASE WHEN t1.c1 THEN x'a14a' WHEN vt1.c0 THEN t1.c2 WHEN t0.c41 THEN x'8548' ELSE t0.c41 END) FULL OUTER JOIN vt1 ON ((t0.c84)GLOB(t0.c48)) COLLATE NOCASE WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 FULL OUTER JOIN t1 ON MIN(CASE t0.c41  WHEN 0.9824893104770315 THEN vt0.c0 END, CAST(t1.c1 AS REAL)) RIGHT OUTER JOIN vt0 ON LIKELY(CASE WHEN t1.c1 THEN x'a14a' WHEN vt1.c0 THEN t1.c2 WHEN t0.c41 THEN x'8548' ELSE t0.c41 END) FULL OUTER JOIN vt1 ON ((t0.c84)GLOB(t0.c48)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN t1 ON MIN(CASE t0.c41  WHEN 0.9824893104770315 THEN vt0.c0 END, CAST(t1.c1 AS REAL)) RIGHT OUTER JOIN vt0 ON LIKELY(CASE WHEN t1.c1 THEN x'a14a' WHEN vt1.c0 THEN t1.c2 WHEN t0.c41 THEN x'8548' ELSE t0.c41 END) FULL OUTER JOIN vt1 ON ((t0.c84)GLOB(t0.c48)) COLLATE NOCASE WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 FULL OUTER JOIN t1 ON MIN(CASE t0.c41  WHEN 0.9824893104770315 THEN vt0.c0 END, CAST(t1.c1 AS REAL)) RIGHT OUTER JOIN vt0 ON LIKELY(CASE WHEN t1.c1 THEN x'a14a' WHEN vt1.c0 THEN t1.c2 WHEN t0.c41 THEN x'8548' ELSE t0.c41 END) FULL OUTER JOIN vt1 ON ((t0.c84)GLOB(t0.c48)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t1, vt0, t0 WHERE (CASE t0.c81  WHEN t0.c52 THEN t0.c41 WHEN t1.c1 THEN t0.c41 WHEN vt0.c0 THEN t1.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c81  WHEN t0.c52 THEN t0.c41 WHEN t1.c1 THEN t0.c41 WHEN vt0.c0 THEN t1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM t1, vt0, t0);
SELECT ALL COUNT(*) FROM t1, vt0, t0 WHERE (CASE t0.c81  WHEN t0.c52 THEN t0.c41 WHEN t1.c1 THEN t0.c41 WHEN vt0.c0 THEN t1.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c81  WHEN t0.c52 THEN t0.c41 WHEN t1.c1 THEN t0.c41 WHEN vt0.c0 THEN t1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM t1, vt0, t0);
SELECT ALL COUNT(*) FROM t1, vt0, t0 WHERE (CASE t0.c81  WHEN t0.c52 THEN t0.c41 WHEN t1.c1 THEN t0.c41 WHEN vt0.c0 THEN t1.c0 END COLLATE RTRIM);
SELECT ALL * FROM t0, vt0, t1 WHERE (((CAST(t0.c52 AS TEXT)) NOT BETWEEN (CASE t1.c2  WHEN t0.c48 THEN t0.c84 ELSE t1.c0 END) AND (x''))) ORDER BY (t1.c1 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c52 AS TEXT)) NOT BETWEEN (CASE t1.c2  WHEN t0.c48 THEN t0.c84 ELSE t1.c0 END) AND (x''))) IS TRUE)  as count FROM t0, vt0, t1 ORDER BY (t1.c1 IN ())  NULLS FIRST);
SELECT ALL * FROM t0, vt0, t1 WHERE (((CAST(t0.c52 AS TEXT)) NOT BETWEEN (CASE t1.c2  WHEN t0.c48 THEN t0.c84 ELSE t1.c0 END) AND (x''))) ORDER BY (t1.c1 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c52 AS TEXT)) NOT BETWEEN (CASE t1.c2  WHEN t0.c48 THEN t0.c84 ELSE t1.c0 END) AND (x''))) IS TRUE)  as count FROM t0, vt0, t1 ORDER BY (t1.c1 IN ())  NULLS FIRST);
SELECT ALL * FROM t0, vt0, t1 WHERE (((CAST(t0.c52 AS TEXT)) NOT BETWEEN (CASE t1.c2  WHEN t0.c48 THEN t0.c84 ELSE t1.c0 END) AND (x''))) ORDER BY (t1.c1 IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (vt0.c0) ORDER BY (~ ((('702333857')<<(t0.c48))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (~ ((('702333857')<<(t0.c48))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (vt0.c0) ORDER BY (~ ((('702333857')<<(t0.c48))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (~ ((('702333857')<<(t0.c48))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (vt0.c0) ORDER BY (~ ((('702333857')<<(t0.c48))))  NULLS FIRST;
SELECT * FROM t1, vt0, t0, vt1 WHERE (t0.c84);
SELECT SUM(count) FROM (SELECT ((t0.c84) IS TRUE)  as count FROM t1, vt0, t0, vt1);
SELECT * FROM t1, vt0, t0, vt1 WHERE (t0.c84);
SELECT SUM(count) FROM (SELECT ((t0.c84) IS TRUE)  as count FROM t1, vt0, t0, vt1);
SELECT * FROM t1, vt0, t0, vt1 WHERE (t0.c84);
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE ((((((vt0.c0))==((t1.c2))))>=(t1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))=((t1.c2))))>=(t1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE ((((((vt0.c0))==((t1.c2))))>=(t1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))=((t1.c2))))>=(t1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE ((((((vt0.c0))==((t1.c2))))>=(t1.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM t1, t0, vt0, vt1 WHERE (((+ (t0.c41)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (t0.c41)) IN ())) IS TRUE)  as count FROM t1, t0, vt0, vt1);
SELECT ALL COUNT(*) FROM t1, t0, vt0, vt1 WHERE (((+ (t0.c41)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (t0.c41)) IN ())) IS TRUE)  as count FROM t1, t0, vt0, vt1);
SELECT ALL COUNT(*) FROM t1, t0, vt0, vt1 WHERE (((+ (t0.c41)) IN ()));
SELECT COUNT(*) FROM t1 WHERE ((((t1.c1)) BETWEEN ((t1.c1)) AND ((CAST(t1.c0 AS BLOB)))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c1)) BETWEEN ((t1.c1)) AND ((CAST(t1.c0 AS BLOB))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c1)) BETWEEN ((t1.c1)) AND ((CAST(t1.c0 AS BLOB)))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c1)) BETWEEN ((t1.c1)) AND ((CAST(t1.c0 AS BLOB))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c1)) BETWEEN ((t1.c1)) AND ((CAST(t1.c0 AS BLOB)))));
SELECT ALL * FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (((~ (t1.c1)))+(CAST(t0.c81 AS INTEGER))) CROSS JOIN t1 ON (((t0.c84))>=((t0.c41))) COLLATE RTRIM WHERE (x'4afb8366');
SELECT SUM(count) FROM (SELECT ((x'4afb8366') IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (((~ (t1.c1)))+(CAST(t0.c81 AS INTEGER))) CROSS JOIN t1 ON (((t0.c84))>=((t0.c41))) COLLATE RTRIM);
SELECT ALL * FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (((~ (t1.c1)))+(CAST(t0.c81 AS INTEGER))) CROSS JOIN t1 ON (((t0.c84))>=((t0.c41))) COLLATE RTRIM WHERE (x'4afb8366');
SELECT SUM(count) FROM (SELECT ((x'4afb8366') IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (((~ (t1.c1)))+(CAST(t0.c81 AS INTEGER))) CROSS JOIN t1 ON (((t0.c84))>=((t0.c41))) COLLATE RTRIM);
SELECT COUNT(*) FROM t0, vt1, t1 WHERE (((IFNULL(t1.c1, t0.c81))>(0.6576388411006014)));
SELECT SUM(count) FROM (SELECT ((((IFNULL(t1.c1, t0.c81))>(0.6576388411006014))) IS TRUE)  as count FROM t0, vt1, t1);
SELECT COUNT(*) FROM t0, vt1, t1 WHERE (((IFNULL(t1.c1, t0.c81))>(0.6576388411006014)));
SELECT SUM(count) FROM (SELECT ((((IFNULL(t1.c1, t0.c81))>(0.6576388411006014))) IS TRUE)  as count FROM t0, vt1, t1);
SELECT COUNT(*) FROM t0, vt1, t1 WHERE (((IFNULL(t1.c1, t0.c81))>(0.6576388411006014)));
SELECT ALL * FROM vt0, vt1 WHERE (((((SQLITE_COMPILEOPTION_GET(vt0.c0))OR(vt1.c0)))OR((- (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((SQLITE_COMPILEOPTION_GET(vt0.c0))OR(vt1.c0)))OR((- (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((SQLITE_COMPILEOPTION_GET(vt0.c0))OR(vt1.c0)))OR((- (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((SQLITE_COMPILEOPTION_GET(vt0.c0))OR(vt1.c0)))OR((- (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((SQLITE_COMPILEOPTION_GET(vt0.c0))OR(vt1.c0)))OR((- (vt1.c0)))));
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE ((~ (t1.c2)));
SELECT SUM(count) FROM (SELECT ALL (((~ (t1.c2))) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE ((~ (t1.c2)));
SELECT SUM(count) FROM (SELECT ALL (((~ (t1.c2))) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE ((~ (t1.c2)));
SELECT * FROM vt1, t0, vt0, t1 WHERE (((t0.c84) IS TRUE)) ORDER BY (((t1.c0)) BETWEEN (((('-1118671470')OR(t0.c52)))) AND ((((t1.c2)<>(t1.c2))))), CASE WHEN QUOTE(t1.c2) THEN ((t1.c2)<(t0.c48)) WHEN CAST(t0.c52 AS INTEGER) THEN ((((((((t0.c84)OR(t0.c52)))AND(t1.c1)))OR(t0.c52)))OR(t0.c41)) WHEN t0.c84 COLLATE NOCASE THEN (((t0.c52))!=((t1.c1))) END;
SELECT SUM(count) FROM (SELECT ((((t0.c84) IS TRUE)) IS TRUE)  as count FROM vt1, t0, vt0, t1 ORDER BY (((t1.c0)) BETWEEN (((('-1118671470')OR(t0.c52)))) AND ((((t1.c2)!=(t1.c2))))), CASE WHEN QUOTE(t1.c2) THEN ((t1.c2)<(t0.c48)) WHEN CAST(t0.c52 AS INTEGER) THEN ((((((((t0.c84)OR(t0.c52)))AND(t1.c1)))OR(t0.c52)))OR(t0.c41)) WHEN t0.c84 COLLATE NOCASE THEN (((t0.c52))<>((t1.c1))) END);
SELECT * FROM vt1, t0, vt0, t1 WHERE (((t0.c84) IS TRUE)) ORDER BY (((t1.c0)) BETWEEN (((('-1118671470')OR(t0.c52)))) AND ((((t1.c2)<>(t1.c2))))), CASE WHEN QUOTE(t1.c2) THEN ((t1.c2)<(t0.c48)) WHEN CAST(t0.c52 AS INTEGER) THEN ((((((((t0.c84)OR(t0.c52)))AND(t1.c1)))OR(t0.c52)))OR(t0.c41)) WHEN t0.c84 COLLATE NOCASE THEN (((t0.c52))!=((t1.c1))) END;
SELECT SUM(count) FROM (SELECT ((((t0.c84) IS TRUE)) IS TRUE)  as count FROM vt1, t0, vt0, t1 ORDER BY (((t1.c0)) BETWEEN (((('-1118671470')OR(t0.c52)))) AND ((((t1.c2)!=(t1.c2))))), CASE WHEN QUOTE(t1.c2) THEN ((t1.c2)<(t0.c48)) WHEN CAST(t0.c52 AS INTEGER) THEN ((((((((t0.c84)OR(t0.c52)))AND(t1.c1)))OR(t0.c52)))OR(t0.c41)) WHEN t0.c84 COLLATE NOCASE THEN (((t0.c52))<>((t1.c1))) END);
SELECT * FROM vt1, t0, vt0, t1 WHERE (((t0.c84) IS TRUE)) ORDER BY (((t1.c0)) BETWEEN (((('-1118671470')OR(t0.c52)))) AND ((((t1.c2)<>(t1.c2))))), CASE WHEN QUOTE(t1.c2) THEN ((t1.c2)<(t0.c48)) WHEN CAST(t0.c52 AS INTEGER) THEN ((((((((t0.c84)OR(t0.c52)))AND(t1.c1)))OR(t0.c52)))OR(t0.c41)) WHEN t0.c84 COLLATE NOCASE THEN (((t0.c52))!=((t1.c1))) END;
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (CASE WHEN ((t1.c0)OR(x'')) THEN vt1.c0 END) ORDER BY (((t1.c2) ISNULL) IN ())  NULLS FIRST, CAST(vt0.c0 AS INTEGER) COLLATE RTRIM, ((((CAST(vt1.c0 AS BLOB))OR(((vt1.c0)+(t1.c1)))))AND(t1.c1 COLLATE RTRIM))  NULLS FIRST, ((vt1.c0) BETWEEN (vt1.c0) AND (t1.c1)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t1.c0)OR(x'')) THEN vt1.c0 END) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY (((t1.c2) ISNULL) IN ())  NULLS FIRST, CAST(vt0.c0 AS INTEGER) COLLATE RTRIM, ((((CAST(vt1.c0 AS BLOB))OR(((vt1.c0)+(t1.c1)))))AND(t1.c1 COLLATE RTRIM))  NULLS FIRST, ((vt1.c0) BETWEEN (vt1.c0) AND (t1.c1)) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (CASE WHEN ((t1.c0)OR(x'')) THEN vt1.c0 END) ORDER BY (((t1.c2) ISNULL) IN ())  NULLS FIRST, CAST(vt0.c0 AS INTEGER) COLLATE RTRIM, ((((CAST(vt1.c0 AS BLOB))OR(((vt1.c0)+(t1.c1)))))AND(t1.c1 COLLATE RTRIM))  NULLS FIRST, ((vt1.c0) BETWEEN (vt1.c0) AND (t1.c1)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t1.c0)OR(x'')) THEN vt1.c0 END) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY (((t1.c2) ISNULL) IN ())  NULLS FIRST, CAST(vt0.c0 AS INTEGER) COLLATE RTRIM, ((((CAST(vt1.c0 AS BLOB))OR(((vt1.c0)+(t1.c1)))))AND(t1.c1 COLLATE RTRIM))  NULLS FIRST, ((vt1.c0) BETWEEN (vt1.c0) AND (t1.c1)) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (CASE WHEN ((t1.c0)OR(x'')) THEN vt1.c0 END) ORDER BY (((t1.c2) ISNULL) IN ())  NULLS FIRST, CAST(vt0.c0 AS INTEGER) COLLATE RTRIM, ((((CAST(vt1.c0 AS BLOB))OR(((vt1.c0)+(t1.c1)))))AND(t1.c1 COLLATE RTRIM))  NULLS FIRST, ((vt1.c0) BETWEEN (vt1.c0) AND (t1.c1)) COLLATE RTRIM DESC;
SELECT ALL * FROM t1, vt1, t0, vt0 WHERE ((~ (((((((((vt0.c0)OR(t0.c41)))OR(t1.c0)))AND(t0.c52)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((((((vt0.c0)OR(t0.c41)))OR(t1.c0)))AND(t0.c52)))OR(vt0.c0))))) IS TRUE)  as count FROM t1, vt1, t0, vt0);
SELECT ALL * FROM t1, vt1, t0, vt0 WHERE ((~ (((((((((vt0.c0)OR(t0.c41)))OR(t1.c0)))AND(t0.c52)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((((((vt0.c0)OR(t0.c41)))OR(t1.c0)))AND(t0.c52)))OR(vt0.c0))))) IS TRUE)  as count FROM t1, vt1, t0, vt0);
SELECT ALL * FROM t1, vt1, t0, vt0 WHERE ((~ (((((((((vt0.c0)OR(t0.c41)))OR(t1.c0)))AND(t0.c52)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS NUMERIC)) ORDER BY CAST(((vt1.c0) NOTNULL) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY CAST(((vt1.c0) NOTNULL) AS INTEGER));
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS NUMERIC)) ORDER BY CAST(((vt1.c0) NOTNULL) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY CAST(((vt1.c0) NOTNULL) AS INTEGER));
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS NUMERIC)) ORDER BY CAST(((vt1.c0) NOTNULL) AS INTEGER);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))%(((vt1.c0) NOTNULL)))) ORDER BY CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND ('2001756813'))  WHEN ((vt1.c0)<=(vt1.c0)) THEN vt1.c0 COLLATE BINARY ELSE (- (vt1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))%(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1 NOT INDEXED ORDER BY CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND ('2001756813'))  WHEN ((vt1.c0)<=(vt1.c0)) THEN vt1.c0 COLLATE BINARY ELSE (- (vt1.c0)) END ASC);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))%(((vt1.c0) NOTNULL)))) ORDER BY CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND ('2001756813'))  WHEN ((vt1.c0)<=(vt1.c0)) THEN vt1.c0 COLLATE BINARY ELSE (- (vt1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))%(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1 NOT INDEXED ORDER BY CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND ('2001756813'))  WHEN ((vt1.c0)<=(vt1.c0)) THEN vt1.c0 COLLATE BINARY ELSE (- (vt1.c0)) END ASC);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))%(((vt1.c0) NOTNULL)))) ORDER BY CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND ('2001756813'))  WHEN ((vt1.c0)<=(vt1.c0)) THEN vt1.c0 COLLATE BINARY ELSE (- (vt1.c0)) END ASC;
SELECT COUNT(*) FROM vt0, t1 WHERE ((((+ (NULL))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((+ (NULL))) NOT NULL)) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE ((((+ (NULL))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((+ (NULL))) NOT NULL)) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE ((((+ (NULL))) NOT NULL));
SELECT ALL * FROM vt1, t0, t1 WHERE (((((t0.c81)>>(t0.c48)))=(((t0.c52) BETWEEN (t0.c48) AND (vt1.c0))))) ORDER BY ((((t0.c84) IS TRUE)) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c81)>>(t0.c48)))=(((t0.c52) BETWEEN (t0.c48) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, t0, t1 ORDER BY ((((t0.c84) IS TRUE)) ISNULL) ASC);
SELECT ALL * FROM vt1, t0, t1 WHERE (((((t0.c81)>>(t0.c48)))=(((t0.c52) BETWEEN (t0.c48) AND (vt1.c0))))) ORDER BY ((((t0.c84) IS TRUE)) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c81)>>(t0.c48)))=(((t0.c52) BETWEEN (t0.c48) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, t0, t1 ORDER BY ((((t0.c84) IS TRUE)) ISNULL) ASC);
SELECT ALL * FROM vt1, t0, t1 WHERE (((((t0.c81)>>(t0.c48)))=(((t0.c52) BETWEEN (t0.c48) AND (vt1.c0))))) ORDER BY ((((t0.c84) IS TRUE)) ISNULL) ASC;
SELECT * FROM vt0, vt1, t1 WHERE (((t1.c2) NOTNULL) COLLATE NOCASE) ORDER BY (+ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c1 WHEN vt1.c0 THEN vt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c2) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY (+ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c1 WHEN vt1.c0 THEN vt0.c0 END)) ASC  NULLS FIRST);
SELECT * FROM vt0, vt1, t1 WHERE (((t1.c2) NOTNULL) COLLATE NOCASE) ORDER BY (+ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c1 WHEN vt1.c0 THEN vt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c2) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY (+ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c1 WHEN vt1.c0 THEN vt0.c0 END)) ASC  NULLS FIRST);
SELECT * FROM vt0, vt1, t1 WHERE (((t1.c2) NOTNULL) COLLATE NOCASE) ORDER BY (+ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c1 WHEN vt1.c0 THEN vt0.c0 END)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0, vt1, t1 WHERE ((((t0.c41)||(t0.c52)) IN ())) ORDER BY ((((t0.c81) ISNULL))LIKE(((((vt1.c0)AND(t0.c81)))OR(t1.c1)))) DESC  NULLS LAST, ((((((t0.c41)<=(t0.c48)))OR(((vt1.c0) IS FALSE))))AND(TRIM('3<'))), ((((t1.c0)!=('')))<((((t0.c48))<((vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c41)||(t0.c52)) IN ())) IS TRUE)  as count FROM t0, vt0, vt1, t1 ORDER BY ((((t0.c81) ISNULL))LIKE(((((vt1.c0)AND(t0.c81)))OR(t1.c1)))) DESC  NULLS LAST, ((((((t0.c41)<=(t0.c48)))OR(((vt1.c0) IS FALSE))))AND(TRIM('3<'))), ((((t1.c0)!=('')))<((((t0.c48))<((vt0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0, vt1, t1 WHERE ((((t0.c41)||(t0.c52)) IN ())) ORDER BY ((((t0.c81) ISNULL))LIKE(((((vt1.c0)AND(t0.c81)))OR(t1.c1)))) DESC  NULLS LAST, ((((((t0.c41)<=(t0.c48)))OR(((vt1.c0) IS FALSE))))AND(TRIM('3<'))), ((((t1.c0)!=('')))<((((t0.c48))<((vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c41)||(t0.c52)) IN ())) IS TRUE)  as count FROM t0, vt0, vt1, t1 ORDER BY ((((t0.c81) ISNULL))LIKE(((((vt1.c0)AND(t0.c81)))OR(t1.c1)))) DESC  NULLS LAST, ((((((t0.c41)<=(t0.c48)))OR(((vt1.c0) IS FALSE))))AND(TRIM('3<'))), ((((t1.c0)!=('')))<((((t0.c48))<((vt0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0, vt1, t1 WHERE ((((t0.c41)||(t0.c52)) IN ())) ORDER BY ((((t0.c81) ISNULL))LIKE(((((vt1.c0)AND(t0.c81)))OR(t1.c1)))) DESC  NULLS LAST, ((((((t0.c41)<=(t0.c48)))OR(((vt1.c0) IS FALSE))))AND(TRIM('3<'))), ((((t1.c0)!=('')))<((((t0.c48))<((vt0.c0)))))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((t0.c84)OR('')) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c84)OR('')) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c84)OR('')) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c84)OR('')) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c84)OR('')) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, t0 WHERE (((CASE WHEN t0.c52 THEN t0.c41 END) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (CAST(t0.c84 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c52 THEN t0.c41 END) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (CAST(t0.c84 AS NUMERIC)))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((CASE WHEN t0.c52 THEN t0.c41 END) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (CAST(t0.c84 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c52 THEN t0.c41 END) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (CAST(t0.c84 AS NUMERIC)))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((CASE WHEN t0.c52 THEN t0.c41 END) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (CAST(t0.c84 AS NUMERIC))));
SELECT ALL * FROM t1 WHERE (((((((t1.c2)||(t1.c0)))AND(((t1.c0)IS NOT(t1.c1)))))AND(CAST(t1.c0 AS BLOB)))) ORDER BY CASE WHEN ((((t1.c0)OR(t1.c1)))AND(t1.c1)) THEN (((0.3941569534967465)) NOT BETWEEN ((t1.c2)) AND ((t1.c1))) ELSE LTRIM(0.9867043942170558) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c2)||(t1.c0)))AND(((t1.c0)IS NOT(t1.c1)))))AND(CAST(t1.c0 AS BLOB)))) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN ((((t1.c0)OR(t1.c1)))AND(t1.c1)) THEN (((0.3941569534967465)) NOT BETWEEN ((t1.c2)) AND ((t1.c1))) ELSE LTRIM(0.9867043942170558) END DESC  NULLS LAST);
SELECT ALL * FROM t1 WHERE (((((((t1.c2)||(t1.c0)))AND(((t1.c0)IS NOT(t1.c1)))))AND(CAST(t1.c0 AS BLOB)))) ORDER BY CASE WHEN ((((t1.c0)OR(t1.c1)))AND(t1.c1)) THEN (((0.3941569534967465)) NOT BETWEEN ((t1.c2)) AND ((t1.c1))) ELSE LTRIM(0.9867043942170558) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c2)||(t1.c0)))AND(((t1.c0)IS NOT(t1.c1)))))AND(CAST(t1.c0 AS BLOB)))) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN ((((t1.c0)OR(t1.c1)))AND(t1.c1)) THEN (((0.3941569534967465)) NOT BETWEEN ((t1.c2)) AND ((t1.c1))) ELSE LTRIM(0.9867043942170558) END DESC  NULLS LAST);
SELECT ALL * FROM t1 WHERE (((((((t1.c2)||(t1.c0)))AND(((t1.c0)IS NOT(t1.c1)))))AND(CAST(t1.c0 AS BLOB)))) ORDER BY CASE WHEN ((((t1.c0)OR(t1.c1)))AND(t1.c1)) THEN (((0.3941569534967465)) NOT BETWEEN ((t1.c2)) AND ((t1.c1))) ELSE LTRIM(0.9867043942170558) END DESC  NULLS LAST;
SELECT ALL * FROM t1 CROSS JOIN vt0 ON (((t0.c41, t0.c81, x'')) BETWEEN ((t1.c1, t0.c41, t0.c81)) AND (('/1', t1.c1, t1.c2))) COLLATE BINARY CROSS JOIN t0 ON t1.c0 WHERE (((((NULL)&(t0.c48)))OR((NOT (t0.c48))))) ORDER BY ((((CASE t0.c84  WHEN t0.c81 THEN t1.c0 ELSE t0.c52 END)AND((((t1.c1)) BETWEEN ((t1.c1)) AND ((t0.c52))))))OR(((vt0.c0)>=(t0.c48)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)&(t0.c48)))OR((NOT (t0.c48))))) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON (((t0.c41, t0.c81, x'')) BETWEEN ((t1.c1, t0.c41, t0.c81)) AND (('/1', t1.c1, t1.c2))) COLLATE BINARY CROSS JOIN t0 ON t1.c0 ORDER BY ((((CASE t0.c84  WHEN t0.c81 THEN t1.c0 ELSE t0.c52 END)AND((((t1.c1)) BETWEEN ((t1.c1)) AND ((t0.c52))))))OR(((vt0.c0)>=(t0.c48)))) DESC  NULLS FIRST);
SELECT ALL * FROM t1 CROSS JOIN vt0 ON (((t0.c41, t0.c81, x'')) BETWEEN ((t1.c1, t0.c41, t0.c81)) AND (('/1', t1.c1, t1.c2))) COLLATE BINARY CROSS JOIN t0 ON t1.c0 WHERE (((((NULL)&(t0.c48)))OR((NOT (t0.c48))))) ORDER BY ((((CASE t0.c84  WHEN t0.c81 THEN t1.c0 ELSE t0.c52 END)AND((((t1.c1)) BETWEEN ((t1.c1)) AND ((t0.c52))))))OR(((vt0.c0)>=(t0.c48)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)&(t0.c48)))OR((NOT (t0.c48))))) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON (((t0.c41, t0.c81, x'')) BETWEEN ((t1.c1, t0.c41, t0.c81)) AND (('/1', t1.c1, t1.c2))) COLLATE BINARY CROSS JOIN t0 ON t1.c0 ORDER BY ((((CASE t0.c84  WHEN t0.c81 THEN t1.c0 ELSE t0.c52 END)AND((((t1.c1)) BETWEEN ((t1.c1)) AND ((t0.c52))))))OR(((vt0.c0)>=(t0.c48)))) DESC  NULLS FIRST);
SELECT ALL * FROM t1 CROSS JOIN vt0 ON (((t0.c41, t0.c81, x'')) BETWEEN ((t1.c1, t0.c41, t0.c81)) AND (('/1', t1.c1, t1.c2))) COLLATE BINARY CROSS JOIN t0 ON t1.c0 WHERE (((((NULL)&(t0.c48)))OR((NOT (t0.c48))))) ORDER BY ((((CASE t0.c84  WHEN t0.c81 THEN t1.c0 ELSE t0.c52 END)AND((((t1.c1)) BETWEEN ((t1.c1)) AND ((t0.c52))))))OR(((vt0.c0)>=(t0.c48)))) DESC  NULLS FIRST;
SELECT * FROM t0 FULL OUTER JOIN t1 ON CAST(((t1.c0) ISNULL) AS NUMERIC) RIGHT OUTER JOIN vt0 ON (CASE WHEN vt1.c0 THEN t0.c48 WHEN t0.c84 THEN vt1.c0 WHEN t0.c84 THEN t0.c81 END IN ()) FULL OUTER JOIN vt1 ON x'e8f4' WHERE (CAST(((t0.c41)||(t0.c48)) AS REAL)) ORDER BY ((((((((((0.749613836546521) NOTNULL))OR(t0.c52)))AND((0Xffffffffcce811f5 IN ()))))OR(((vt1.c0) IS TRUE))))OR(((0.2773935338329304) IS TRUE))) ASC  NULLS LAST, ((((t0.c84)||(t1.c0)))>>((((t1.c0, t1.c2, t0.c41)) BETWEEN ((vt1.c0, t1.c2, t0.c52)) AND ((vt1.c0, '9W', t0.c84))))), ((((((t1.c0) NOT NULL))AND(((t0.c41) IS TRUE))))OR(t0.c84 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c41)||(t0.c48)) AS REAL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN t1 ON CAST(((t1.c0) ISNULL) AS NUMERIC) RIGHT OUTER JOIN vt0 ON (CASE WHEN vt1.c0 THEN t0.c48 WHEN t0.c84 THEN vt1.c0 WHEN t0.c84 THEN t0.c81 END IN ()) FULL OUTER JOIN vt1 ON x'e8f4' ORDER BY ((((((((((0.749613836546521) NOTNULL))OR(t0.c52)))AND((0Xffffffffcce811f5 IN ()))))OR(((vt1.c0) IS TRUE))))OR(((0.2773935338329304) IS TRUE))) ASC  NULLS LAST, ((((t0.c84)||(t1.c0)))>>((((t1.c0, t1.c2, t0.c41)) BETWEEN ((vt1.c0, t1.c2, t0.c52)) AND ((vt1.c0, '9W', t0.c84))))), ((((((t1.c0) NOT NULL))AND(((t0.c41) IS TRUE))))OR(t0.c84 COLLATE NOCASE))  NULLS LAST);
SELECT * FROM t0 FULL OUTER JOIN t1 ON CAST(((t1.c0) ISNULL) AS NUMERIC) RIGHT OUTER JOIN vt0 ON (CASE WHEN vt1.c0 THEN t0.c48 WHEN t0.c84 THEN vt1.c0 WHEN t0.c84 THEN t0.c81 END IN ()) FULL OUTER JOIN vt1 ON x'e8f4' WHERE (CAST(((t0.c41)||(t0.c48)) AS REAL)) ORDER BY ((((((((((0.749613836546521) NOTNULL))OR(t0.c52)))AND((0Xffffffffcce811f5 IN ()))))OR(((vt1.c0) IS TRUE))))OR(((0.2773935338329304) IS TRUE))) ASC  NULLS LAST, ((((t0.c84)||(t1.c0)))>>((((t1.c0, t1.c2, t0.c41)) BETWEEN ((vt1.c0, t1.c2, t0.c52)) AND ((vt1.c0, '9W', t0.c84))))), ((((((t1.c0) NOT NULL))AND(((t0.c41) IS TRUE))))OR(t0.c84 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c41)||(t0.c48)) AS REAL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN t1 ON CAST(((t1.c0) ISNULL) AS NUMERIC) RIGHT OUTER JOIN vt0 ON (CASE WHEN vt1.c0 THEN t0.c48 WHEN t0.c84 THEN vt1.c0 WHEN t0.c84 THEN t0.c81 END IN ()) FULL OUTER JOIN vt1 ON x'e8f4' ORDER BY ((((((((((0.749613836546521) NOTNULL))OR(t0.c52)))AND((0Xffffffffcce811f5 IN ()))))OR(((vt1.c0) IS TRUE))))OR(((0.2773935338329304) IS TRUE))) ASC  NULLS LAST, ((((t0.c84)||(t1.c0)))>>((((t1.c0, t1.c2, t0.c41)) BETWEEN ((vt1.c0, t1.c2, t0.c52)) AND ((vt1.c0, '9W', t0.c84))))), ((((((t1.c0) NOT NULL))AND(((t0.c41) IS TRUE))))OR(t0.c84 COLLATE NOCASE))  NULLS LAST);
SELECT * FROM t0 FULL OUTER JOIN t1 ON CAST(((t1.c0) ISNULL) AS NUMERIC) RIGHT OUTER JOIN vt0 ON (CASE WHEN vt1.c0 THEN t0.c48 WHEN t0.c84 THEN vt1.c0 WHEN t0.c84 THEN t0.c81 END IN ()) FULL OUTER JOIN vt1 ON x'e8f4' WHERE (CAST(((t0.c41)||(t0.c48)) AS REAL)) ORDER BY ((((((((((0.749613836546521) NOTNULL))OR(t0.c52)))AND((0Xffffffffcce811f5 IN ()))))OR(((vt1.c0) IS TRUE))))OR(((0.2773935338329304) IS TRUE))) ASC  NULLS LAST, ((((t0.c84)||(t1.c0)))>>((((t1.c0, t1.c2, t0.c41)) BETWEEN ((vt1.c0, t1.c2, t0.c52)) AND ((vt1.c0, '9W', t0.c84))))), ((((((t1.c0) NOT NULL))AND(((t0.c41) IS TRUE))))OR(t0.c84 COLLATE NOCASE))  NULLS LAST;
SELECT COUNT(*) FROM t1, t0, vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t1, t0, vt1, vt0);
SELECT COUNT(*) FROM t1, t0, vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t1, t0, vt1, vt0);
SELECT COUNT(*) FROM t1, t0, vt1, vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN t1 ON (((~ (t1.c1))) NOTNULL) LEFT OUTER JOIN vt0 ON (((0.5104669853385118)) NOT BETWEEN ((((((vt1.c0)AND(t0.c52)))AND(0.7808811926892488)))) AND (((((t1.c1))<((t1.c1)))))) LEFT OUTER JOIN vt1 ON ((CAST(t0.c84 AS BLOB)) NOT BETWEEN (vt1.c0) AND (CASE t0.c41  WHEN t1.c0 THEN t0.c81 ELSE t1.c0 END)) WHERE ((((- (vt1.c0)))>=(((vt1.c0) BETWEEN (vt0.c0) AND (0.1341666847641957))))) ORDER BY t1.c0 ASC  NULLS FIRST, (((((((t0.c48)AND('?2kyw艃N')))AND(t0.c48))))<((LIKELIHOOD(t0.c81, 0.7021973204706055))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c0)))>=(((vt1.c0) BETWEEN (vt0.c0) AND (0.1341666847641957))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN t1 ON (((~ (t1.c1))) NOTNULL) LEFT OUTER JOIN vt0 ON (((0.5104669853385118)) NOT BETWEEN ((((((vt1.c0)AND(t0.c52)))AND(0.7808811926892488)))) AND (((((t1.c1))<((t1.c1)))))) LEFT OUTER JOIN vt1 ON ((CAST(t0.c84 AS BLOB)) NOT BETWEEN (vt1.c0) AND (CASE t0.c41  WHEN t1.c0 THEN t0.c81 ELSE t1.c0 END)) ORDER BY t1.c0 ASC  NULLS FIRST, (((((((t0.c48)AND('?2kyw艃N')))AND(t0.c48))))<((LIKELIHOOD(t0.c81, 0.7021973204706055))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN t1 ON (((~ (t1.c1))) NOTNULL) LEFT OUTER JOIN vt0 ON (((0.5104669853385118)) NOT BETWEEN ((((((vt1.c0)AND(t0.c52)))AND(0.7808811926892488)))) AND (((((t1.c1))<((t1.c1)))))) LEFT OUTER JOIN vt1 ON ((CAST(t0.c84 AS BLOB)) NOT BETWEEN (vt1.c0) AND (CASE t0.c41  WHEN t1.c0 THEN t0.c81 ELSE t1.c0 END)) WHERE ((((- (vt1.c0)))>=(((vt1.c0) BETWEEN (vt0.c0) AND (0.1341666847641957))))) ORDER BY t1.c0 ASC  NULLS FIRST, (((((((t0.c48)AND('?2kyw艃N')))AND(t0.c48))))<((LIKELIHOOD(t0.c81, 0.7021973204706055))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c0)))>=(((vt1.c0) BETWEEN (vt0.c0) AND (0.1341666847641957))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN t1 ON (((~ (t1.c1))) NOTNULL) LEFT OUTER JOIN vt0 ON (((0.5104669853385118)) NOT BETWEEN ((((((vt1.c0)AND(t0.c52)))AND(0.7808811926892488)))) AND (((((t1.c1))<((t1.c1)))))) LEFT OUTER JOIN vt1 ON ((CAST(t0.c84 AS BLOB)) NOT BETWEEN (vt1.c0) AND (CASE t0.c41  WHEN t1.c0 THEN t0.c81 ELSE t1.c0 END)) ORDER BY t1.c0 ASC  NULLS FIRST, (((((((t0.c48)AND('?2kyw艃N')))AND(t0.c48))))<((LIKELIHOOD(t0.c81, 0.7021973204706055))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((((((RTRIM(vt0.c0))AND(((vt0.c0) NOTNULL))))OR(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(LIKELY(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((RTRIM(vt0.c0))AND(((vt0.c0) NOTNULL))))OR(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(LIKELY(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((RTRIM(vt0.c0))AND(((vt0.c0) NOTNULL))))OR(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(LIKELY(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((RTRIM(vt0.c0))AND(((vt0.c0) NOTNULL))))OR(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(LIKELY(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((RTRIM(vt0.c0))AND(((vt0.c0) NOTNULL))))OR(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(LIKELY(vt0.c0))));
SELECT COUNT(*) FROM vt1, t1 RIGHT OUTER JOIN vt0 ON t1.c0 WHERE (x'fbea');
SELECT SUM(count) FROM (SELECT ((x'fbea') IS TRUE)  as count FROM vt1, t1 RIGHT OUTER JOIN vt0 ON t1.c0);
SELECT COUNT(*) FROM vt1, t1 RIGHT OUTER JOIN vt0 ON t1.c0 WHERE (x'fbea');
SELECT SUM(count) FROM (SELECT ((x'fbea') IS TRUE)  as count FROM vt1, t1 RIGHT OUTER JOIN vt0 ON t1.c0);
SELECT COUNT(*) FROM vt1, t1 RIGHT OUTER JOIN vt0 ON t1.c0 WHERE (x'fbea');
SELECT ALL * FROM vt1 WHERE ('1350702151') ORDER BY x''  NULLS FIRST, ((LIKELIHOOD(NULL, 0.7077663235953591)) BETWEEN (((vt1.c0) ISNULL)) AND (((vt1.c0)||(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('1350702151') IS TRUE)  as count FROM vt1 ORDER BY x''  NULLS FIRST, ((LIKELIHOOD(NULL, 0.7077663235953591)) BETWEEN (((vt1.c0) ISNULL)) AND (((vt1.c0)||(vt1.c0)))) DESC);
SELECT ALL * FROM vt1 WHERE ('1350702151') ORDER BY x''  NULLS FIRST, ((LIKELIHOOD(NULL, 0.7077663235953591)) BETWEEN (((vt1.c0) ISNULL)) AND (((vt1.c0)||(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('1350702151') IS TRUE)  as count FROM vt1 ORDER BY x''  NULLS FIRST, ((LIKELIHOOD(NULL, 0.7077663235953591)) BETWEEN (((vt1.c0) ISNULL)) AND (((vt1.c0)||(vt1.c0)))) DESC);
SELECT ALL * FROM vt1 WHERE ('1350702151') ORDER BY x''  NULLS FIRST, ((LIKELIHOOD(NULL, 0.7077663235953591)) BETWEEN (((vt1.c0) ISNULL)) AND (((vt1.c0)||(vt1.c0)))) DESC;
SELECT ALL * FROM t1 WHERE (((CASE WHEN t1.c2 THEN x'' WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c2 END)OR(TYPEOF(NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t1.c2 THEN x'' WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c2 END)OR(TYPEOF(NULL)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((CASE WHEN t1.c2 THEN x'' WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c2 END)OR(TYPEOF(NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t1.c2 THEN x'' WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c2 END)OR(TYPEOF(NULL)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((CASE WHEN t1.c2 THEN x'' WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c2 END)OR(TYPEOF(NULL))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (~ (vt0.c0)) THEN ((vt0.c0) IS FALSE) ELSE ((vt0.c0)&(vt0.c0)) END) ORDER BY (NOT (HEX(vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (vt0.c0)) THEN ((vt0.c0) IS FALSE) ELSE ((vt0.c0)&(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (NOT (HEX(vt0.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (~ (vt0.c0)) THEN ((vt0.c0) IS FALSE) ELSE ((vt0.c0)&(vt0.c0)) END) ORDER BY (NOT (HEX(vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (vt0.c0)) THEN ((vt0.c0) IS FALSE) ELSE ((vt0.c0)&(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (NOT (HEX(vt0.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (~ (vt0.c0)) THEN ((vt0.c0) IS FALSE) ELSE ((vt0.c0)&(vt0.c0)) END) ORDER BY (NOT (HEX(vt0.c0))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY x'');
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY x'');
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) ORDER BY x'';
SELECT * FROM vt0 WHERE ((+ (((vt0.c0)*('835657674')))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)*('835657674'))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ (((vt0.c0)*('835657674')))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)*('835657674'))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ (((vt0.c0)*('835657674')))));
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(((((t0.c48)OR(t0.c84)))AND(t0.c81)) AS BLOB)) ORDER BY (((t0.c48 IN ()))==((((t0.c84)) BETWEEN ((t0.c84)) AND ((t0.c84)))));
SELECT SUM(count) FROM (SELECT ((CAST(((((t0.c48)OR(t0.c84)))AND(t0.c81)) AS BLOB)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c48 IN ()))==((((t0.c84)) BETWEEN ((t0.c84)) AND ((t0.c84))))));
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(((((t0.c48)OR(t0.c84)))AND(t0.c81)) AS BLOB)) ORDER BY (((t0.c48 IN ()))==((((t0.c84)) BETWEEN ((t0.c84)) AND ((t0.c84)))));
SELECT SUM(count) FROM (SELECT ((CAST(((((t0.c48)OR(t0.c84)))AND(t0.c81)) AS BLOB)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c48 IN ()))==((((t0.c84)) BETWEEN ((t0.c84)) AND ((t0.c84))))));
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(((((t0.c48)OR(t0.c84)))AND(t0.c81)) AS BLOB)) ORDER BY (((t0.c48 IN ()))==((((t0.c84)) BETWEEN ((t0.c84)) AND ((t0.c84)))));
SELECT ALL COUNT(*) FROM vt0, t0, t1, vt1 WHERE (1898936088) ORDER BY ((SQLITE_COMPILEOPTION_USED(t1.c2))==((((t1.c0, t0.c84, vt1.c0)) NOT BETWEEN ((t0.c84, t1.c0, vt1.c0)) AND ((vt1.c0, t0.c84, t0.c52)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((1898936088) IS TRUE)  as count FROM vt0, t0, t1, vt1 ORDER BY ((SQLITE_COMPILEOPTION_USED(t1.c2))=((((t1.c0, t0.c84, vt1.c0)) NOT BETWEEN ((t0.c84, t1.c0, vt1.c0)) AND ((vt1.c0, t0.c84, t0.c52)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, t1, vt1 WHERE (1898936088) ORDER BY ((SQLITE_COMPILEOPTION_USED(t1.c2))==((((t1.c0, t0.c84, vt1.c0)) NOT BETWEEN ((t0.c84, t1.c0, vt1.c0)) AND ((vt1.c0, t0.c84, t0.c52)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((1898936088) IS TRUE)  as count FROM vt0, t0, t1, vt1 ORDER BY ((SQLITE_COMPILEOPTION_USED(t1.c2))=((((t1.c0, t0.c84, vt1.c0)) NOT BETWEEN ((t0.c84, t1.c0, vt1.c0)) AND ((vt1.c0, t0.c84, t0.c52)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, t1, vt1 WHERE (1898936088) ORDER BY ((SQLITE_COMPILEOPTION_USED(t1.c2))==((((t1.c0, t0.c84, vt1.c0)) NOT BETWEEN ((t0.c84, t1.c0, vt1.c0)) AND ((vt1.c0, t0.c84, t0.c52)))))  NULLS FIRST;
SELECT * FROM t0, t1, vt1, vt0 WHERE (((LAST_INSERT_ROWID())&(((((vt0.c0)AND(vt0.c0)))OR(t1.c0))))) ORDER BY CAST(CAST(t0.c41 AS INTEGER) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((LAST_INSERT_ROWID())&(((((vt0.c0)AND(vt0.c0)))OR(t1.c0))))) IS TRUE)  as count FROM t0, t1, vt1, vt0 ORDER BY CAST(CAST(t0.c41 AS INTEGER) AS BLOB));
SELECT * FROM t0, t1, vt1, vt0 WHERE (((LAST_INSERT_ROWID())&(((((vt0.c0)AND(vt0.c0)))OR(t1.c0))))) ORDER BY CAST(CAST(t0.c41 AS INTEGER) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((LAST_INSERT_ROWID())&(((((vt0.c0)AND(vt0.c0)))OR(t1.c0))))) IS TRUE)  as count FROM t0, t1, vt1, vt0 ORDER BY CAST(CAST(t0.c41 AS INTEGER) AS BLOB));
SELECT * FROM t0, t1, vt1, vt0 WHERE (((LAST_INSERT_ROWID())&(((((vt0.c0)AND(vt0.c0)))OR(t1.c0))))) ORDER BY CAST(CAST(t0.c41 AS INTEGER) AS BLOB);
SELECT * FROM vt1, t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, t1);
SELECT * FROM vt1, t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, t1);
SELECT * FROM vt1, t1 WHERE (NULL);
SELECT * FROM t1 FULL OUTER JOIN vt1 ON (+ ((NOT (t0.c52)))) FULL OUTER JOIN t0 ON ((t0.c48) IS TRUE) COLLATE BINARY CROSS JOIN vt0 ON t0.c52 WHERE ((- (((t0.c84)AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c84)AND(vt0.c0))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt1 ON (+ ((NOT (t0.c52)))) FULL OUTER JOIN t0 ON ((t0.c48) IS TRUE) COLLATE BINARY CROSS JOIN vt0 ON t0.c52);
SELECT * FROM t1 FULL OUTER JOIN vt1 ON (+ ((NOT (t0.c52)))) FULL OUTER JOIN t0 ON ((t0.c48) IS TRUE) COLLATE BINARY CROSS JOIN vt0 ON t0.c52 WHERE ((- (((t0.c84)AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c84)AND(vt0.c0))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt1 ON (+ ((NOT (t0.c52)))) FULL OUTER JOIN t0 ON ((t0.c48) IS TRUE) COLLATE BINARY CROSS JOIN vt0 ON t0.c52);
SELECT ALL * FROM vt1, t0 WHERE (((IFNULL(DISTINCT t0.c48, t0.c84))AND((((vt1.c0)) BETWEEN ((t0.c41)) AND ((t0.c81))))));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT t0.c48, t0.c84))AND((((vt1.c0)) BETWEEN ((t0.c41)) AND ((t0.c81)))))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (((IFNULL(DISTINCT t0.c48, t0.c84))AND((((vt1.c0)) BETWEEN ((t0.c41)) AND ((t0.c81))))));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT t0.c48, t0.c84))AND((((vt1.c0)) BETWEEN ((t0.c41)) AND ((t0.c81)))))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (((IFNULL(DISTINCT t0.c48, t0.c84))AND((((vt1.c0)) BETWEEN ((t0.c41)) AND ((t0.c81))))));
SELECT * FROM vt1, t1, vt0 WHERE (CASE ((((t1.c2)AND(t1.c0)))OR(vt0.c0))  WHEN (((t1.c2, t1.c0, 0xffffffffd1aaef81)) NOT BETWEEN ((t1.c0, t1.c1, t1.c2)) AND ((vt0.c0, t1.c1, vt1.c0))) THEN vt0.c0 ELSE vt0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE ((((t1.c2)AND(t1.c0)))OR(vt0.c0))  WHEN (((t1.c2, t1.c0, 0xffffffffd1aaef81)) NOT BETWEEN ((t1.c0, t1.c1, t1.c2)) AND ((vt0.c0, t1.c1, vt1.c0))) THEN vt0.c0 ELSE vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT * FROM vt1, t1, vt0 WHERE (CASE ((((t1.c2)AND(t1.c0)))OR(vt0.c0))  WHEN (((t1.c2, t1.c0, 0xffffffffd1aaef81)) NOT BETWEEN ((t1.c0, t1.c1, t1.c2)) AND ((vt0.c0, t1.c1, vt1.c0))) THEN vt0.c0 ELSE vt0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE ((((t1.c2)AND(t1.c0)))OR(vt0.c0))  WHEN (((t1.c2, t1.c0, 0xffffffffd1aaef81)) NOT BETWEEN ((t1.c0, t1.c1, t1.c2)) AND ((vt0.c0, t1.c1, vt1.c0))) THEN vt0.c0 ELSE vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT * FROM vt1, t1, vt0 WHERE (CASE ((((t1.c2)AND(t1.c0)))OR(vt0.c0))  WHEN (((t1.c2, t1.c0, 0xffffffffd1aaef81)) NOT BETWEEN ((t1.c0, t1.c1, t1.c2)) AND ((vt0.c0, t1.c1, vt1.c0))) THEN vt0.c0 ELSE vt0.c0 COLLATE NOCASE END);
SELECT * FROM vt0 INDEXED BY i32 WHERE (((vt0.c0 COLLATE RTRIM)>>((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)>>((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 INDEXED BY i32);
SELECT * FROM vt0 INDEXED BY i32 WHERE (((vt0.c0 COLLATE RTRIM)>>((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)>>((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 INDEXED BY i32);
SELECT ALL * FROM vt0, t1, vt1, t0 WHERE (((ABS(vt0.c0)) NOT BETWEEN (((t0.c41) IS TRUE)) AND (((t1.c0) BETWEEN (vt0.c0) AND (t0.c81)))));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(vt0.c0)) NOT BETWEEN (((t0.c41) IS TRUE)) AND (((t1.c0) BETWEEN (vt0.c0) AND (t0.c81))))) IS TRUE)  as count FROM vt0, t1, vt1, t0);
SELECT ALL * FROM vt0, t1, vt1, t0 WHERE (((ABS(vt0.c0)) NOT BETWEEN (((t0.c41) IS TRUE)) AND (((t1.c0) BETWEEN (vt0.c0) AND (t0.c81)))));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(vt0.c0)) NOT BETWEEN (((t0.c41) IS TRUE)) AND (((t1.c0) BETWEEN (vt0.c0) AND (t0.c81))))) IS TRUE)  as count FROM vt0, t1, vt1, t0);
SELECT ALL * FROM vt0, t1, vt1, t0 WHERE (((ABS(vt0.c0)) NOT BETWEEN (((t0.c41) IS TRUE)) AND (((t1.c0) BETWEEN (vt0.c0) AND (t0.c81)))));
SELECT ALL COUNT(*) FROM t0 WHERE ((SQLITE_COMPILEOPTION_USED(t0.c84) IN ())) ORDER BY t0.c81 DESC;
SELECT SUM(count) FROM (SELECT ALL (((SQLITE_COMPILEOPTION_USED(t0.c84) IN ())) IS TRUE)  as count FROM t0 ORDER BY t0.c81 DESC);
SELECT ALL COUNT(*) FROM t0 WHERE ((SQLITE_COMPILEOPTION_USED(t0.c84) IN ())) ORDER BY t0.c81 DESC;
SELECT SUM(count) FROM (SELECT ALL (((SQLITE_COMPILEOPTION_USED(t0.c84) IN ())) IS TRUE)  as count FROM t0 ORDER BY t0.c81 DESC);
SELECT ALL COUNT(*) FROM t0 WHERE ((SQLITE_COMPILEOPTION_USED(t0.c84) IN ())) ORDER BY t0.c81 DESC;
SELECT * FROM vt0, t1 WHERE (((((vt0.c0, vt0.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0, t1.c2)) AND ((t1.c0, x'', t1.c2))) IN ((('yn\rl~')<(t1.c2))))) ORDER BY (((CAST(t1.c2 AS BLOB)))<>(((NOT (t1.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0, vt0.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0, t1.c2)) AND ((t1.c0, x'', t1.c2))) IN ((('yn\rl~')<(t1.c2))))) IS TRUE)  as count FROM vt0, t1 ORDER BY (((CAST(t1.c2 AS BLOB)))<>(((NOT (t1.c1))))) ASC);
SELECT * FROM vt0, t1 WHERE (((((vt0.c0, vt0.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0, t1.c2)) AND ((t1.c0, x'', t1.c2))) IN ((('yn\rl~')<(t1.c2))))) ORDER BY (((CAST(t1.c2 AS BLOB)))<>(((NOT (t1.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0, vt0.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0, t1.c2)) AND ((t1.c0, x'', t1.c2))) IN ((('yn\rl~')<(t1.c2))))) IS TRUE)  as count FROM vt0, t1 ORDER BY (((CAST(t1.c2 AS BLOB)))<>(((NOT (t1.c1))))) ASC);
SELECT * FROM vt0, t1 WHERE (((((vt0.c0, vt0.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0, t1.c2)) AND ((t1.c0, x'', t1.c2))) IN ((('yn\rl~')<(t1.c2))))) ORDER BY (((CAST(t1.c2 AS BLOB)))<>(((NOT (t1.c1))))) ASC;
SELECT COUNT(*) FROM t1 CROSS JOIN vt1 ON ((((((vt1.c0)IS(vt1.c0)))AND((- (vt1.c0)))))OR(((NULL)>(vt1.c0)))) WHERE (((((t1.c2))<((t1.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((t1.c2))<((t1.c1))) IN ())) IS TRUE)  as count FROM t1 CROSS JOIN vt1 ON ((((((vt1.c0)IS(vt1.c0)))AND((- (vt1.c0)))))OR(((NULL)>(vt1.c0)))));
SELECT COUNT(*) FROM t1 CROSS JOIN vt1 ON ((((((vt1.c0)IS(vt1.c0)))AND((- (vt1.c0)))))OR(((NULL)>(vt1.c0)))) WHERE (((((t1.c2))<((t1.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((t1.c2))<((t1.c1))) IN ())) IS TRUE)  as count FROM t1 CROSS JOIN vt1 ON ((((((vt1.c0)IS(vt1.c0)))AND((- (vt1.c0)))))OR(((NULL)>(vt1.c0)))));
SELECT COUNT(*) FROM t1 CROSS JOIN vt1 ON ((((((vt1.c0)IS(vt1.c0)))AND((- (vt1.c0)))))OR(((NULL)>(vt1.c0)))) WHERE (((((t1.c2))<((t1.c1))) IN ()));
SELECT ALL * FROM vt1, t0, vt0 WHERE (x'e330');
SELECT SUM(count) FROM (SELECT ((x'e330') IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE (x'e330');
SELECT SUM(count) FROM (SELECT ((x'e330') IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE (x'e330');
SELECT * FROM vt0, t1, t0 NATURAL JOIN vt1 WHERE ('-2051657316' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (('-2051657316' COLLATE BINARY) IS TRUE)  as count FROM vt0, t1, t0 NATURAL JOIN vt1);
SELECT * FROM vt0, t1, t0 NATURAL JOIN vt1 WHERE ('-2051657316' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (('-2051657316' COLLATE BINARY) IS TRUE)  as count FROM vt0, t1, t0 NATURAL JOIN vt1);
SELECT * FROM vt0, t1, t0 NATURAL JOIN vt1 WHERE ('-2051657316' COLLATE BINARY);
SELECT ALL * FROM t1 CROSS JOIN vt0 ON (((t1.c0)) BETWEEN ((x'ae01')) AND ((0.3551319992747598))) WHERE (((vt0.c0)*(vt0.c0)) COLLATE BINARY) ORDER BY (((((t1.c2) NOT NULL), ((t1.c1)<=(t1.c1)), t1.c1 COLLATE BINARY))>=((CASE NULL  WHEN t1.c1 THEN t1.c0 END, (t1.c1 IN ()), ((t1.c1)IS(vt0.c0)))))  NULLS LAST, ((((vt0.c0) IS TRUE)) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)*(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON (((t1.c0)) BETWEEN ((x'ae01')) AND ((0.3551319992747598))) ORDER BY (((((t1.c2) NOT NULL), ((t1.c1)<=(t1.c1)), t1.c1 COLLATE BINARY))>=((CASE NULL  WHEN t1.c1 THEN t1.c0 END, (t1.c1 IN ()), ((t1.c1)IS(vt0.c0)))))  NULLS LAST, ((((vt0.c0) IS TRUE)) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM t1 CROSS JOIN vt0 ON (((t1.c0)) BETWEEN ((x'ae01')) AND ((0.3551319992747598))) WHERE (((vt0.c0)*(vt0.c0)) COLLATE BINARY) ORDER BY (((((t1.c2) NOT NULL), ((t1.c1)<=(t1.c1)), t1.c1 COLLATE BINARY))>=((CASE NULL  WHEN t1.c1 THEN t1.c0 END, (t1.c1 IN ()), ((t1.c1)IS(vt0.c0)))))  NULLS LAST, ((((vt0.c0) IS TRUE)) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)*(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON (((t1.c0)) BETWEEN ((x'ae01')) AND ((0.3551319992747598))) ORDER BY (((((t1.c2) NOT NULL), ((t1.c1)<=(t1.c1)), t1.c1 COLLATE BINARY))>=((CASE NULL  WHEN t1.c1 THEN t1.c0 END, (t1.c1 IN ()), ((t1.c1)IS(vt0.c0)))))  NULLS LAST, ((((vt0.c0) IS TRUE)) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM t1 CROSS JOIN vt0 ON (((t1.c0)) BETWEEN ((x'ae01')) AND ((0.3551319992747598))) WHERE (((vt0.c0)*(vt0.c0)) COLLATE BINARY) ORDER BY (((((t1.c2) NOT NULL), ((t1.c1)<=(t1.c1)), t1.c1 COLLATE BINARY))>=((CASE NULL  WHEN t1.c1 THEN t1.c0 END, (t1.c1 IN ()), ((t1.c1)IS(vt0.c0)))))  NULLS LAST, ((((vt0.c0) IS TRUE)) IS FALSE)  NULLS FIRST;
SELECT * FROM t1, t0, vt0 WHERE (-1.128552714E9) ORDER BY ((t1.c2)=(((t1.c1) BETWEEN (t0.c41) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((-1.128552714E9) IS TRUE)  as count FROM t1, t0, vt0 ORDER BY ((t1.c2)=(((t1.c1) BETWEEN (t0.c41) AND (vt0.c0)))));
SELECT * FROM t1, t0, vt0 WHERE (-1.128552714E9) ORDER BY ((t1.c2)=(((t1.c1) BETWEEN (t0.c41) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((-1.128552714E9) IS TRUE)  as count FROM t1, t0, vt0 ORDER BY ((t1.c2)=(((t1.c1) BETWEEN (t0.c41) AND (vt0.c0)))));
SELECT * FROM t1, t0, vt0 WHERE (-1.128552714E9) ORDER BY ((t1.c2)=(((t1.c1) BETWEEN (t0.c41) AND (vt0.c0))));
SELECT ALL * FROM vt0, t0, t1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, t0, t1);
SELECT ALL * FROM vt0, t0, t1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, t0, t1);
SELECT ALL * FROM vt0, t0, t1 WHERE (x'');
SELECT ALL COUNT(*) FROM t1 WHERE (((CASE WHEN 6.65049778E8 THEN t1.c2 ELSE t1.c1 END)AND((NOT (t1.c0))))) ORDER BY (- ((- (t1.c2)))), (((((t1.c2) NOT BETWEEN (t1.c1) AND (''))))<>(((((0.3199600943202081))=((t1.c0)))))) DESC  NULLS LAST, UPPER(CASE WHEN t1.c2 THEN t1.c1 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN 6.65049778E8 THEN t1.c2 ELSE t1.c1 END)AND((NOT (t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY (- ((- (t1.c2)))), (((((t1.c2) NOT BETWEEN (t1.c1) AND (''))))!=(((((0.3199600943202081))=((t1.c0)))))) DESC  NULLS LAST, UPPER(CASE WHEN t1.c2 THEN t1.c1 END)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (((CASE WHEN 6.65049778E8 THEN t1.c2 ELSE t1.c1 END)AND((NOT (t1.c0))))) ORDER BY (- ((- (t1.c2)))), (((((t1.c2) NOT BETWEEN (t1.c1) AND (''))))<>(((((0.3199600943202081))=((t1.c0)))))) DESC  NULLS LAST, UPPER(CASE WHEN t1.c2 THEN t1.c1 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN 6.65049778E8 THEN t1.c2 ELSE t1.c1 END)AND((NOT (t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY (- ((- (t1.c2)))), (((((t1.c2) NOT BETWEEN (t1.c1) AND (''))))!=(((((0.3199600943202081))=((t1.c0)))))) DESC  NULLS LAST, UPPER(CASE WHEN t1.c2 THEN t1.c1 END)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (((CASE WHEN 6.65049778E8 THEN t1.c2 ELSE t1.c1 END)AND((NOT (t1.c0))))) ORDER BY (- ((- (t1.c2)))), (((((t1.c2) NOT BETWEEN (t1.c1) AND (''))))<>(((((0.3199600943202081))=((t1.c0)))))) DESC  NULLS LAST, UPPER(CASE WHEN t1.c2 THEN t1.c1 END)  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)<>(vt1.c0)))<<(CAST(-1067678420 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)!=(vt1.c0)))<<(CAST(-1067678420 AS BLOB)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)<>(vt1.c0)))<<(CAST(-1067678420 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)!=(vt1.c0)))<<(CAST(-1067678420 AS BLOB)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)<>(vt1.c0)))<<(CAST(-1067678420 AS BLOB))));
SELECT COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN t1 ON ((((((((((t1.c1)OR(t0.c48)))AND(t1.c2)))AND(-9.3893505E7)))OR(t0.c52))) NOT BETWEEN (t1.c1 COLLATE RTRIM) AND (t0.c84)) WHERE (CASE WHEN CASE WHEN t0.c48 THEN t0.c81 WHEN '424679637' THEN t1.c1 WHEN t0.c41 THEN x'' END THEN (((t0.c48, t0.c48, t1.c2)) NOT BETWEEN ((t0.c41, t1.c0, t1.c2)) AND ((t1.c0, t1.c1, t0.c52))) WHEN ((t1.c0)>(t0.c84)) THEN 0X5f033441 WHEN DATETIME(t1.c1, t0.c48, '-963597281') THEN vt0.c0 COLLATE BINARY WHEN ((t0.c84)%(t1.c2)) THEN ((t1.c2) BETWEEN (t1.c2) AND (t1.c2)) WHEN (((t0.c48, t0.c41, vt0.c0))=((t1.c1, t0.c52, t0.c52))) THEN ((t0.c41)%(t0.c48)) ELSE ((((t0.c52)OR(vt0.c0)))AND(t0.c52)) END) ORDER BY ((((t0.c48) NOT NULL))*(CAST(t0.c52 AS TEXT))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN t0.c48 THEN t0.c81 WHEN '424679637' THEN t1.c1 WHEN t0.c41 THEN x'' END THEN (((t0.c48, t0.c48, t1.c2)) NOT BETWEEN ((t0.c41, t1.c0, t1.c2)) AND ((t1.c0, t1.c1, t0.c52))) WHEN ((t1.c0)>(t0.c84)) THEN 0X5f033441 WHEN DATETIME(t1.c1, t0.c48, '-963597281') THEN vt0.c0 COLLATE BINARY WHEN ((t0.c84)%(t1.c2)) THEN ((t1.c2) BETWEEN (t1.c2) AND (t1.c2)) WHEN (((t0.c48, t0.c41, vt0.c0))==((t1.c1, t0.c52, t0.c52))) THEN ((t0.c41)%(t0.c48)) ELSE ((((t0.c52)OR(vt0.c0)))AND(t0.c52)) END) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN t1 ON ((((((((((t1.c1)OR(t0.c48)))AND(t1.c2)))AND(-9.3893505E7)))OR(t0.c52))) NOT BETWEEN (t1.c1 COLLATE RTRIM) AND (t0.c84)) ORDER BY ((((t0.c48) NOT NULL))*(CAST(t0.c52 AS TEXT))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN t1 ON ((((((((((t1.c1)OR(t0.c48)))AND(t1.c2)))AND(-9.3893505E7)))OR(t0.c52))) NOT BETWEEN (t1.c1 COLLATE RTRIM) AND (t0.c84)) WHERE (CASE WHEN CASE WHEN t0.c48 THEN t0.c81 WHEN '424679637' THEN t1.c1 WHEN t0.c41 THEN x'' END THEN (((t0.c48, t0.c48, t1.c2)) NOT BETWEEN ((t0.c41, t1.c0, t1.c2)) AND ((t1.c0, t1.c1, t0.c52))) WHEN ((t1.c0)>(t0.c84)) THEN 0X5f033441 WHEN DATETIME(t1.c1, t0.c48, '-963597281') THEN vt0.c0 COLLATE BINARY WHEN ((t0.c84)%(t1.c2)) THEN ((t1.c2) BETWEEN (t1.c2) AND (t1.c2)) WHEN (((t0.c48, t0.c41, vt0.c0))=((t1.c1, t0.c52, t0.c52))) THEN ((t0.c41)%(t0.c48)) ELSE ((((t0.c52)OR(vt0.c0)))AND(t0.c52)) END) ORDER BY ((((t0.c48) NOT NULL))*(CAST(t0.c52 AS TEXT))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN t0.c48 THEN t0.c81 WHEN '424679637' THEN t1.c1 WHEN t0.c41 THEN x'' END THEN (((t0.c48, t0.c48, t1.c2)) NOT BETWEEN ((t0.c41, t1.c0, t1.c2)) AND ((t1.c0, t1.c1, t0.c52))) WHEN ((t1.c0)>(t0.c84)) THEN 0X5f033441 WHEN DATETIME(t1.c1, t0.c48, '-963597281') THEN vt0.c0 COLLATE BINARY WHEN ((t0.c84)%(t1.c2)) THEN ((t1.c2) BETWEEN (t1.c2) AND (t1.c2)) WHEN (((t0.c48, t0.c41, vt0.c0))==((t1.c1, t0.c52, t0.c52))) THEN ((t0.c41)%(t0.c48)) ELSE ((((t0.c52)OR(vt0.c0)))AND(t0.c52)) END) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN t1 ON ((((((((((t1.c1)OR(t0.c48)))AND(t1.c2)))AND(-9.3893505E7)))OR(t0.c52))) NOT BETWEEN (t1.c1 COLLATE RTRIM) AND (t0.c84)) ORDER BY ((((t0.c48) NOT NULL))*(CAST(t0.c52 AS TEXT))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN t1 ON ((((((((((t1.c1)OR(t0.c48)))AND(t1.c2)))AND(-9.3893505E7)))OR(t0.c52))) NOT BETWEEN (t1.c1 COLLATE RTRIM) AND (t0.c84)) WHERE (CASE WHEN CASE WHEN t0.c48 THEN t0.c81 WHEN '424679637' THEN t1.c1 WHEN t0.c41 THEN x'' END THEN (((t0.c48, t0.c48, t1.c2)) NOT BETWEEN ((t0.c41, t1.c0, t1.c2)) AND ((t1.c0, t1.c1, t0.c52))) WHEN ((t1.c0)>(t0.c84)) THEN 0X5f033441 WHEN DATETIME(t1.c1, t0.c48, '-963597281') THEN vt0.c0 COLLATE BINARY WHEN ((t0.c84)%(t1.c2)) THEN ((t1.c2) BETWEEN (t1.c2) AND (t1.c2)) WHEN (((t0.c48, t0.c41, vt0.c0))=((t1.c1, t0.c52, t0.c52))) THEN ((t0.c41)%(t0.c48)) ELSE ((((t0.c52)OR(vt0.c0)))AND(t0.c52)) END) ORDER BY ((((t0.c48) NOT NULL))*(CAST(t0.c52 AS TEXT))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 NATURAL JOIN t0 WHERE (CAST(t0.c41 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c41 AS REAL)) IS TRUE)  as count FROM vt1, vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt1, vt0 NATURAL JOIN t0 WHERE (CAST(t0.c41 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c41 AS REAL)) IS TRUE)  as count FROM vt1, vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt1, vt0 NATURAL JOIN t0 WHERE (CAST(t0.c41 AS REAL));
SELECT COUNT(*) FROM vt0, t0 WHERE (((0.7926675694336577)GLOB(CASE t0.c41  WHEN 'Z ' THEN x'' END))) ORDER BY ((((((((((t0.c84) NOT BETWEEN (vt0.c0) AND (t0.c81)))OR(t0.c81 COLLATE RTRIM)))AND(((t0.c84) NOTNULL))))OR(CASE t0.c52  WHEN t0.c48 THEN t0.c81 END)))AND('-1897537404'))  NULLS LAST, (((t0.c84))!=((t0.c48))) COLLATE BINARY ASC  NULLS FIRST, ((t0.c52)=(((((NULL)AND(t0.c41)))AND(t0.c41)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.7926675694336577)GLOB(CASE t0.c41  WHEN 'Z ' THEN x'' END))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((((((t0.c84) NOT BETWEEN (vt0.c0) AND (t0.c81)))OR(t0.c81 COLLATE RTRIM)))AND(((t0.c84) NOTNULL))))OR(CASE t0.c52  WHEN t0.c48 THEN t0.c81 END)))AND('-1897537404'))  NULLS LAST, (((t0.c84))<>((t0.c48))) COLLATE BINARY ASC  NULLS FIRST, ((t0.c52)==(((((NULL)AND(t0.c41)))AND(t0.c41)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((0.7926675694336577)GLOB(CASE t0.c41  WHEN 'Z ' THEN x'' END))) ORDER BY ((((((((((t0.c84) NOT BETWEEN (vt0.c0) AND (t0.c81)))OR(t0.c81 COLLATE RTRIM)))AND(((t0.c84) NOTNULL))))OR(CASE t0.c52  WHEN t0.c48 THEN t0.c81 END)))AND('-1897537404'))  NULLS LAST, (((t0.c84))!=((t0.c48))) COLLATE BINARY ASC  NULLS FIRST, ((t0.c52)=(((((NULL)AND(t0.c41)))AND(t0.c41)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.7926675694336577)GLOB(CASE t0.c41  WHEN 'Z ' THEN x'' END))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((((((t0.c84) NOT BETWEEN (vt0.c0) AND (t0.c81)))OR(t0.c81 COLLATE RTRIM)))AND(((t0.c84) NOTNULL))))OR(CASE t0.c52  WHEN t0.c48 THEN t0.c81 END)))AND('-1897537404'))  NULLS LAST, (((t0.c84))<>((t0.c48))) COLLATE BINARY ASC  NULLS FIRST, ((t0.c52)==(((((NULL)AND(t0.c41)))AND(t0.c41)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((0.7926675694336577)GLOB(CASE t0.c41  WHEN 'Z ' THEN x'' END))) ORDER BY ((((((((((t0.c84) NOT BETWEEN (vt0.c0) AND (t0.c81)))OR(t0.c81 COLLATE RTRIM)))AND(((t0.c84) NOTNULL))))OR(CASE t0.c52  WHEN t0.c48 THEN t0.c81 END)))AND('-1897537404'))  NULLS LAST, (((t0.c84))!=((t0.c48))) COLLATE BINARY ASC  NULLS FIRST, ((t0.c52)=(((((NULL)AND(t0.c41)))AND(t0.c41)))) DESC  NULLS LAST;
SELECT ALL * FROM vt0, t1, vt1, t0 WHERE ((('2119528317') BETWEEN (((t0.c41) NOT NULL)) AND (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((('2119528317') BETWEEN (((t0.c41) NOT NULL)) AND (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, t1, vt1, t0);
SELECT ALL * FROM vt0, t1, vt1, t0 WHERE ((('2119528317') BETWEEN (((t0.c41) NOT NULL)) AND (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((('2119528317') BETWEEN (((t0.c41) NOT NULL)) AND (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, t1, vt1, t0);
SELECT ALL * FROM vt0, t1, vt1, t0 WHERE ((('2119528317') BETWEEN (((t0.c41) NOT NULL)) AND (CAST(vt0.c0 AS NUMERIC))));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((~ (vt0.c0 COLLATE BINARY))) ORDER BY (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(0.21275018912667631)))OR(vt1.c0)) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOT NULL))), vt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(0.21275018912667631)))OR(vt1.c0)) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOT NULL))), vt1.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((~ (vt0.c0 COLLATE BINARY))) ORDER BY (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(0.21275018912667631)))OR(vt1.c0)) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOT NULL))), vt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(0.21275018912667631)))OR(vt1.c0)) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOT NULL))), vt1.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((~ (vt0.c0 COLLATE BINARY))) ORDER BY (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(0.21275018912667631)))OR(vt1.c0)) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOT NULL))), vt1.c0 ASC  NULLS FIRST;
SELECT ALL * FROM vt0, t1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (x'');
SELECT * FROM t1 WHERE (CAST(((t1.c2)>>(t1.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c2)>>(t1.c2)) AS REAL)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CAST(((t1.c2)>>(t1.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c2)>>(t1.c2)) AS REAL)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CAST(((t1.c2)>>(t1.c2)) AS REAL));
SELECT COUNT(*) FROM t0, vt1, t1 RIGHT OUTER JOIN vt0 ON (((((t0.c41, t1.c1, t1.c0, vt0.c0, t0.c84))==((t0.c52, t0.c52, t1.c1, t0.c52, t0.c84)))) BETWEEN (((x'') BETWEEN (t0.c81) AND (t1.c1))) AND (5.39800931E8)) WHERE (CASE ((t1.c1) NOT BETWEEN (t0.c41) AND (t0.c41))  WHEN HEX(vt0.c0) THEN ((vt1.c0)>=(t1.c1)) WHEN ((((t0.c41)AND(t0.c52)))AND(t0.c41)) THEN ((t0.c52)-(t0.c81)) WHEN ((vt1.c0)<>(t1.c0)) THEN (~ (vt0.c0)) ELSE ((((t0.c84)AND(t1.c0)))OR(t0.c52)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c1) NOT BETWEEN (t0.c41) AND (t0.c41))  WHEN HEX(vt0.c0) THEN ((vt1.c0)>=(t1.c1)) WHEN ((((t0.c41)AND(t0.c52)))AND(t0.c41)) THEN ((t0.c52)-(t0.c81)) WHEN ((vt1.c0)!=(t1.c0)) THEN (~ (vt0.c0)) ELSE ((((t0.c84)AND(t1.c0)))OR(t0.c52)) END) IS TRUE)  as count FROM t0, vt1, t1 RIGHT OUTER JOIN vt0 ON (((((t0.c41, t1.c1, t1.c0, vt0.c0, t0.c84))=((t0.c52, t0.c52, t1.c1, t0.c52, t0.c84)))) BETWEEN (((x'') BETWEEN (t0.c81) AND (t1.c1))) AND (5.39800931E8)));
SELECT COUNT(*) FROM t0, vt1, t1 RIGHT OUTER JOIN vt0 ON (((((t0.c41, t1.c1, t1.c0, vt0.c0, t0.c84))==((t0.c52, t0.c52, t1.c1, t0.c52, t0.c84)))) BETWEEN (((x'') BETWEEN (t0.c81) AND (t1.c1))) AND (5.39800931E8)) WHERE (CASE ((t1.c1) NOT BETWEEN (t0.c41) AND (t0.c41))  WHEN HEX(vt0.c0) THEN ((vt1.c0)>=(t1.c1)) WHEN ((((t0.c41)AND(t0.c52)))AND(t0.c41)) THEN ((t0.c52)-(t0.c81)) WHEN ((vt1.c0)<>(t1.c0)) THEN (~ (vt0.c0)) ELSE ((((t0.c84)AND(t1.c0)))OR(t0.c52)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c1) NOT BETWEEN (t0.c41) AND (t0.c41))  WHEN HEX(vt0.c0) THEN ((vt1.c0)>=(t1.c1)) WHEN ((((t0.c41)AND(t0.c52)))AND(t0.c41)) THEN ((t0.c52)-(t0.c81)) WHEN ((vt1.c0)!=(t1.c0)) THEN (~ (vt0.c0)) ELSE ((((t0.c84)AND(t1.c0)))OR(t0.c52)) END) IS TRUE)  as count FROM t0, vt1, t1 RIGHT OUTER JOIN vt0 ON (((((t0.c41, t1.c1, t1.c0, vt0.c0, t0.c84))=((t0.c52, t0.c52, t1.c1, t0.c52, t0.c84)))) BETWEEN (((x'') BETWEEN (t0.c81) AND (t1.c1))) AND (5.39800931E8)));
SELECT COUNT(*) FROM t0, vt1, t1 RIGHT OUTER JOIN vt0 ON (((((t0.c41, t1.c1, t1.c0, vt0.c0, t0.c84))==((t0.c52, t0.c52, t1.c1, t0.c52, t0.c84)))) BETWEEN (((x'') BETWEEN (t0.c81) AND (t1.c1))) AND (5.39800931E8)) WHERE (CASE ((t1.c1) NOT BETWEEN (t0.c41) AND (t0.c41))  WHEN HEX(vt0.c0) THEN ((vt1.c0)>=(t1.c1)) WHEN ((((t0.c41)AND(t0.c52)))AND(t0.c41)) THEN ((t0.c52)-(t0.c81)) WHEN ((vt1.c0)<>(t1.c0)) THEN (~ (vt0.c0)) ELSE ((((t0.c84)AND(t1.c0)))OR(t0.c52)) END);
SELECT * FROM t1, vt1 WHERE (((TRIM(DISTINCT t1.c2, x''))<=(((vt1.c0)GLOB(NULL)))));
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT t1.c2, x''))<=(((vt1.c0)GLOB(NULL))))) IS TRUE)  as count FROM t1, vt1);
SELECT * FROM t1, vt1 WHERE (((TRIM(DISTINCT t1.c2, x''))<=(((vt1.c0)GLOB(NULL)))));
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT t1.c2, x''))<=(((vt1.c0)GLOB(NULL))))) IS TRUE)  as count FROM t1, vt1);
SELECT * FROM t1, vt1 WHERE (((TRIM(DISTINCT t1.c2, x''))<=(((vt1.c0)GLOB(NULL)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c41)IS NOT(t0.c41)));
SELECT SUM(count) FROM (SELECT ((((t0.c41)IS NOT(t0.c41))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c41)IS NOT(t0.c41)));
SELECT SUM(count) FROM (SELECT ((((t0.c41)IS NOT(t0.c41))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c41)IS NOT(t0.c41)));
SELECT COUNT(*) FROM t1, t0, vt1 RIGHT OUTER JOIN vt0 ON ((t1.c0)IS NOT(t1.c1)) COLLATE RTRIM WHERE ((~ ((((t0.c84, vt0.c0, t0.c84)) BETWEEN ((t0.c48, vt1.c0, t0.c81)) AND ((vt0.c0, t0.c84, NULL)))))) ORDER BY (((2.019440123E9 IN ())) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL (((~ ((((t0.c84, vt0.c0, t0.c84)) BETWEEN ((t0.c48, vt1.c0, t0.c81)) AND ((vt0.c0, t0.c84, NULL)))))) IS TRUE)  as count FROM t1, t0, vt1 RIGHT OUTER JOIN vt0 ON ((t1.c0)IS NOT(t1.c1)) COLLATE RTRIM ORDER BY (((2.019440123E9 IN ())) NOTNULL));
SELECT COUNT(*) FROM t1, t0, vt1 RIGHT OUTER JOIN vt0 ON ((t1.c0)IS NOT(t1.c1)) COLLATE RTRIM WHERE ((~ ((((t0.c84, vt0.c0, t0.c84)) BETWEEN ((t0.c48, vt1.c0, t0.c81)) AND ((vt0.c0, t0.c84, NULL)))))) ORDER BY (((2.019440123E9 IN ())) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL (((~ ((((t0.c84, vt0.c0, t0.c84)) BETWEEN ((t0.c48, vt1.c0, t0.c81)) AND ((vt0.c0, t0.c84, NULL)))))) IS TRUE)  as count FROM t1, t0, vt1 RIGHT OUTER JOIN vt0 ON ((t1.c0)IS NOT(t1.c1)) COLLATE RTRIM ORDER BY (((2.019440123E9 IN ())) NOTNULL));
SELECT COUNT(*) FROM t1, t0, vt1 RIGHT OUTER JOIN vt0 ON ((t1.c0)IS NOT(t1.c1)) COLLATE RTRIM WHERE ((~ ((((t0.c84, vt0.c0, t0.c84)) BETWEEN ((t0.c48, vt1.c0, t0.c81)) AND ((vt0.c0, t0.c84, NULL)))))) ORDER BY (((2.019440123E9 IN ())) NOTNULL);
SELECT * FROM vt0, t0 WHERE (0.9797340387687857);
SELECT SUM(count) FROM (SELECT ((0.9797340387687857) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (0.9797340387687857);
SELECT SUM(count) FROM (SELECT ((0.9797340387687857) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (0.9797340387687857);
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN vt0 ON LIKELY(DISTINCT 0.17268903478131092) WHERE ((~ (((t1.c0) BETWEEN (t1.c2) AND (t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t1.c0) BETWEEN (t1.c2) AND (t1.c2))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt0 ON LIKELY(DISTINCT 0.17268903478131092));
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN vt0 ON LIKELY(DISTINCT 0.17268903478131092) WHERE ((~ (((t1.c0) BETWEEN (t1.c2) AND (t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t1.c0) BETWEEN (t1.c2) AND (t1.c2))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt0 ON LIKELY(DISTINCT 0.17268903478131092));
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN vt0 ON LIKELY(DISTINCT 0.17268903478131092) WHERE ((~ (((t1.c0) BETWEEN (t1.c2) AND (t1.c2)))));
SELECT * FROM vt0 CROSS JOIN t1 ON x'' WHERE ((t1.c1 IN (t1.c1, ((0.9262266167563872) BETWEEN (vt0.c0) AND (t1.c1))))) ORDER BY ((vt0.c0) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL (((t1.c1 IN (t1.c1, ((0.9262266167563872) BETWEEN (vt0.c0) AND (t1.c1))))) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON x'' ORDER BY ((vt0.c0) NOTNULL));
SELECT * FROM vt0 CROSS JOIN t1 ON x'' WHERE ((t1.c1 IN (t1.c1, ((0.9262266167563872) BETWEEN (vt0.c0) AND (t1.c1))))) ORDER BY ((vt0.c0) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL (((t1.c1 IN (t1.c1, ((0.9262266167563872) BETWEEN (vt0.c0) AND (t1.c1))))) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON x'' ORDER BY ((vt0.c0) NOTNULL));
SELECT * FROM vt0 CROSS JOIN t1 ON x'' WHERE ((t1.c1 IN (t1.c1, ((0.9262266167563872) BETWEEN (vt0.c0) AND (t1.c1))))) ORDER BY ((vt0.c0) NOTNULL);
SELECT ALL COUNT(*) FROM vt0, vt1 CROSS JOIN t0 ON ((vt1.c0)!=(vt0.c0)) COLLATE NOCASE WHERE (CASE WHEN ((vt0.c0) IS TRUE) THEN vt0.c0 COLLATE BINARY WHEN ((t0.c52)LIKE(vt1.c0)) THEN (t0.c84 IN ()) WHEN ((t0.c41)<=(x'36bb')) THEN ((t0.c81) BETWEEN (t0.c41) AND (t0.c41)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) IS TRUE) THEN vt0.c0 COLLATE BINARY WHEN ((t0.c52)LIKE(vt1.c0)) THEN (t0.c84 IN ()) WHEN ((t0.c41)<=(x'36bb')) THEN ((t0.c81) BETWEEN (t0.c41) AND (t0.c41)) END) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN t0 ON ((vt1.c0)<>(vt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, vt1 CROSS JOIN t0 ON ((vt1.c0)!=(vt0.c0)) COLLATE NOCASE WHERE (CASE WHEN ((vt0.c0) IS TRUE) THEN vt0.c0 COLLATE BINARY WHEN ((t0.c52)LIKE(vt1.c0)) THEN (t0.c84 IN ()) WHEN ((t0.c41)<=(x'36bb')) THEN ((t0.c81) BETWEEN (t0.c41) AND (t0.c41)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) IS TRUE) THEN vt0.c0 COLLATE BINARY WHEN ((t0.c52)LIKE(vt1.c0)) THEN (t0.c84 IN ()) WHEN ((t0.c41)<=(x'36bb')) THEN ((t0.c81) BETWEEN (t0.c41) AND (t0.c41)) END) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN t0 ON ((vt1.c0)<>(vt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, vt1 CROSS JOIN t0 ON ((vt1.c0)!=(vt0.c0)) COLLATE NOCASE WHERE (CASE WHEN ((vt0.c0) IS TRUE) THEN vt0.c0 COLLATE BINARY WHEN ((t0.c52)LIKE(vt1.c0)) THEN (t0.c84 IN ()) WHEN ((t0.c41)<=(x'36bb')) THEN ((t0.c81) BETWEEN (t0.c41) AND (t0.c41)) END);
SELECT COUNT(*) FROM t0 WHERE ((+ (((((((((((((t0.c48)AND(t0.c52)))OR(t0.c52)))OR(t0.c84)))AND(t0.c48)))OR(t0.c48)))AND(t0.c84))))) ORDER BY COALESCE(DISTINCT (((t0.c81))!=((t0.c84))), ((t0.c84)&(x'')), t0.c81 COLLATE BINARY, CASE WHEN t0.c48 THEN t0.c81 END) ASC  NULLS FIRST, CASE WHEN (((('-1416496277')AND(NULL)))AND(t0.c41)) THEN ((t0.c48) IS FALSE) ELSE t0.c81 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((((((t0.c48)AND(t0.c52)))OR(t0.c52)))OR(t0.c84)))AND(t0.c48)))OR(t0.c48)))AND(t0.c84))))) IS TRUE)  as count FROM t0 ORDER BY COALESCE(DISTINCT (((t0.c81))<>((t0.c84))), ((t0.c84)&(x'')), t0.c81 COLLATE BINARY, CASE WHEN t0.c48 THEN t0.c81 END) ASC  NULLS FIRST, CASE WHEN (((('-1416496277')AND(NULL)))AND(t0.c41)) THEN ((t0.c48) IS FALSE) ELSE t0.c81 COLLATE RTRIM END);
SELECT COUNT(*) FROM t0 WHERE ((+ (((((((((((((t0.c48)AND(t0.c52)))OR(t0.c52)))OR(t0.c84)))AND(t0.c48)))OR(t0.c48)))AND(t0.c84))))) ORDER BY COALESCE(DISTINCT (((t0.c81))!=((t0.c84))), ((t0.c84)&(x'')), t0.c81 COLLATE BINARY, CASE WHEN t0.c48 THEN t0.c81 END) ASC  NULLS FIRST, CASE WHEN (((('-1416496277')AND(NULL)))AND(t0.c41)) THEN ((t0.c48) IS FALSE) ELSE t0.c81 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((((((t0.c48)AND(t0.c52)))OR(t0.c52)))OR(t0.c84)))AND(t0.c48)))OR(t0.c48)))AND(t0.c84))))) IS TRUE)  as count FROM t0 ORDER BY COALESCE(DISTINCT (((t0.c81))<>((t0.c84))), ((t0.c84)&(x'')), t0.c81 COLLATE BINARY, CASE WHEN t0.c48 THEN t0.c81 END) ASC  NULLS FIRST, CASE WHEN (((('-1416496277')AND(NULL)))AND(t0.c41)) THEN ((t0.c48) IS FALSE) ELSE t0.c81 COLLATE RTRIM END);
SELECT COUNT(*) FROM t0 WHERE ((+ (((((((((((((t0.c48)AND(t0.c52)))OR(t0.c52)))OR(t0.c84)))AND(t0.c48)))OR(t0.c48)))AND(t0.c84))))) ORDER BY COALESCE(DISTINCT (((t0.c81))!=((t0.c84))), ((t0.c84)&(x'')), t0.c81 COLLATE BINARY, CASE WHEN t0.c48 THEN t0.c81 END) ASC  NULLS FIRST, CASE WHEN (((('-1416496277')AND(NULL)))AND(t0.c41)) THEN ((t0.c48) IS FALSE) ELSE t0.c81 COLLATE RTRIM END;
SELECT COUNT(*) FROM t0, vt1 WHERE (((((t0.c84)AND(t0.c41)))<(((t0.c41)AND(t0.c41)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c84)AND(t0.c41)))<(((t0.c41)AND(t0.c41))))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (((((t0.c84)AND(t0.c41)))<(((t0.c41)AND(t0.c41)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c84)AND(t0.c41)))<(((t0.c41)AND(t0.c41))))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (((((t0.c84)AND(t0.c41)))<(((t0.c41)AND(t0.c41)))));
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS TEXT)) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (ABS(vt0.c0)) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (ABS(vt0.c0)) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS TEXT)) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (ABS(vt0.c0)) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (ABS(vt0.c0)) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS TEXT)) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (ABS(vt0.c0)) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM t1, vt1 WHERE (((((t1.c0)IS NOT(vt1.c0))) ISNULL)) ORDER BY (((t1.c0)) NOT BETWEEN ((((vt1.c0)*(t1.c2)))) AND ((((t1.c0)!=(t1.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)IS NOT(vt1.c0))) ISNULL)) IS TRUE)  as count FROM t1, vt1 ORDER BY (((t1.c0)) NOT BETWEEN ((((vt1.c0)*(t1.c2)))) AND ((((t1.c0)!=(t1.c2)))))  NULLS LAST);
SELECT ALL * FROM t1, vt1 WHERE (((((t1.c0)IS NOT(vt1.c0))) ISNULL)) ORDER BY (((t1.c0)) NOT BETWEEN ((((vt1.c0)*(t1.c2)))) AND ((((t1.c0)!=(t1.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)IS NOT(vt1.c0))) ISNULL)) IS TRUE)  as count FROM t1, vt1 ORDER BY (((t1.c0)) NOT BETWEEN ((((vt1.c0)*(t1.c2)))) AND ((((t1.c0)!=(t1.c2)))))  NULLS LAST);
SELECT ALL * FROM t1, vt1 WHERE (((((t1.c0)IS NOT(vt1.c0))) ISNULL)) ORDER BY (((t1.c0)) NOT BETWEEN ((((vt1.c0)*(t1.c2)))) AND ((((t1.c0)!=(t1.c2)))))  NULLS LAST;
SELECT * FROM t1, vt0, t0 INDEXED BY i32 WHERE (((((t1.c0) BETWEEN (t0.c48) AND (t0.c41))) NOT BETWEEN (CASE WHEN t0.c81 THEN t1.c2 END) AND (((t0.c52)%(t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) BETWEEN (t0.c48) AND (t0.c41))) NOT BETWEEN (CASE WHEN t0.c81 THEN t1.c2 END) AND (((t0.c52)%(t1.c2))))) IS TRUE)  as count FROM t1, vt0, t0 INDEXED BY i32);
SELECT * FROM t1, vt0, t0 INDEXED BY i32 WHERE (((((t1.c0) BETWEEN (t0.c48) AND (t0.c41))) NOT BETWEEN (CASE WHEN t0.c81 THEN t1.c2 END) AND (((t0.c52)%(t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) BETWEEN (t0.c48) AND (t0.c41))) NOT BETWEEN (CASE WHEN t0.c81 THEN t1.c2 END) AND (((t0.c52)%(t1.c2))))) IS TRUE)  as count FROM t1, vt0, t0 INDEXED BY i32);
SELECT ALL * FROM t0 CROSS JOIN vt1 ON ((((t0.c41)GLOB(vt1.c0))) NOT NULL) WHERE ((((+ (t0.c81)))OR(((t0.c84)LIKE(t0.c48))))) ORDER BY (((CASE WHEN vt1.c0 THEN t0.c41 WHEN t0.c41 THEN NULL WHEN t0.c84 THEN t0.c52 END))>(('')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c81)))OR(((t0.c84)LIKE(t0.c48))))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON ((((t0.c41)GLOB(vt1.c0))) NOT NULL) ORDER BY (((CASE WHEN vt1.c0 THEN t0.c41 WHEN t0.c41 THEN NULL WHEN t0.c84 THEN t0.c52 END))>(('')))  NULLS FIRST);
SELECT ALL * FROM t0 CROSS JOIN vt1 ON ((((t0.c41)GLOB(vt1.c0))) NOT NULL) WHERE ((((+ (t0.c81)))OR(((t0.c84)LIKE(t0.c48))))) ORDER BY (((CASE WHEN vt1.c0 THEN t0.c41 WHEN t0.c41 THEN NULL WHEN t0.c84 THEN t0.c52 END))>(('')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c81)))OR(((t0.c84)LIKE(t0.c48))))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON ((((t0.c41)GLOB(vt1.c0))) NOT NULL) ORDER BY (((CASE WHEN vt1.c0 THEN t0.c41 WHEN t0.c41 THEN NULL WHEN t0.c84 THEN t0.c52 END))>(('')))  NULLS FIRST);
SELECT ALL * FROM t0 CROSS JOIN vt1 ON ((((t0.c41)GLOB(vt1.c0))) NOT NULL) WHERE ((((+ (t0.c81)))OR(((t0.c84)LIKE(t0.c48))))) ORDER BY (((CASE WHEN vt1.c0 THEN t0.c41 WHEN t0.c41 THEN NULL WHEN t0.c84 THEN t0.c52 END))>(('')))  NULLS FIRST;
SELECT ALL * FROM t1, vt0 WHERE (1.375346217E9);
SELECT SUM(count) FROM (SELECT ((1.375346217E9) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (1.375346217E9);
SELECT SUM(count) FROM (SELECT ((1.375346217E9) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (1.375346217E9);
SELECT * FROM vt0 WHERE ((NOT (STRFTIME(vt0.c0, vt0.c0, vt0.c0)))) ORDER BY ((LIKELY(vt0.c0))||(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (STRFTIME(vt0.c0, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((LIKELY(vt0.c0))||(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT * FROM vt0 WHERE ((NOT (STRFTIME(vt0.c0, vt0.c0, vt0.c0)))) ORDER BY ((LIKELY(vt0.c0))||(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (STRFTIME(vt0.c0, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((LIKELY(vt0.c0))||(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT * FROM vt0 WHERE ((NOT (STRFTIME(vt0.c0, vt0.c0, vt0.c0)))) ORDER BY ((LIKELY(vt0.c0))||(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT ALL COUNT(*) FROM t0, vt1, t1 WHERE (CAST(((t1.c0) NOT BETWEEN (t1.c2) AND (t0.c48)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c0) NOT BETWEEN (t1.c2) AND (t0.c48)) AS TEXT)) IS TRUE)  as count FROM t0, vt1, t1);
SELECT ALL COUNT(*) FROM t0, vt1, t1 WHERE (CAST(((t1.c0) NOT BETWEEN (t1.c2) AND (t0.c48)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c0) NOT BETWEEN (t1.c2) AND (t0.c48)) AS TEXT)) IS TRUE)  as count FROM t0, vt1, t1);
SELECT ALL COUNT(*) FROM t0, vt1, t1 WHERE (CAST(((t1.c0) NOT BETWEEN (t1.c2) AND (t0.c48)) AS TEXT));
SELECT ALL * FROM t1, vt0 NATURAL JOIN vt1 WHERE (((((((vt1.c0)+(vt0.c0)))OR(CASE t1.c1  WHEN t1.c2 THEN vt1.c0 END)))AND(DATE(t1.c1, t1.c2, vt0.c0)))) ORDER BY -1846797071 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)+(vt0.c0)))OR(CASE t1.c1  WHEN t1.c2 THEN vt1.c0 END)))AND(DATE(t1.c1, t1.c2, vt0.c0)))) IS TRUE)  as count FROM t1, vt0 NATURAL JOIN vt1 ORDER BY -1846797071 ASC);
SELECT ALL * FROM t1, vt0 NATURAL JOIN vt1 WHERE (((((((vt1.c0)+(vt0.c0)))OR(CASE t1.c1  WHEN t1.c2 THEN vt1.c0 END)))AND(DATE(t1.c1, t1.c2, vt0.c0)))) ORDER BY -1846797071 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)+(vt0.c0)))OR(CASE t1.c1  WHEN t1.c2 THEN vt1.c0 END)))AND(DATE(t1.c1, t1.c2, vt0.c0)))) IS TRUE)  as count FROM t1, vt0 NATURAL JOIN vt1 ORDER BY -1846797071 ASC);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (((((t0.c81)==(vt1.c0)))*(TYPEOF(DISTINCT t0.c81))));
SELECT SUM(count) FROM (SELECT ((((((t0.c81)==(vt1.c0)))*(TYPEOF(DISTINCT t0.c81)))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (((((t0.c81)==(vt1.c0)))*(TYPEOF(DISTINCT t0.c81))));
SELECT SUM(count) FROM (SELECT ((((((t0.c81)==(vt1.c0)))*(TYPEOF(DISTINCT t0.c81)))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (((((t0.c81)==(vt1.c0)))*(TYPEOF(DISTINCT t0.c81))));
SELECT * FROM vt0, t0 WHERE ((((vt0.c0 COLLATE NOCASE, (~ (vt0.c0)), ((t0.c84)|(t0.c41))))>=((LIKELIHOOD(DISTINCT t0.c48, 0.6737079514968035), STRFTIME(t0.c52, t0.c52, t0.c81), t0.c48)))) ORDER BY ((((-3.63742572E8)IS(t0.c84))) NOT BETWEEN (CAST(t0.c48 AS TEXT)) AND ((((t0.c41)) BETWEEN ((vt0.c0)) AND ((0.7800330242708714)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 COLLATE NOCASE, (~ (vt0.c0)), ((t0.c84)|(t0.c41))))>=((LIKELIHOOD(DISTINCT t0.c48, 0.6737079514968035), STRFTIME(t0.c52, t0.c52, t0.c81), t0.c48)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((-3.63742572E8)IS(t0.c84))) NOT BETWEEN (CAST(t0.c48 AS TEXT)) AND ((((t0.c41)) BETWEEN ((vt0.c0)) AND ((0.7800330242708714)))))  NULLS LAST);
SELECT * FROM vt0, t0 WHERE ((((vt0.c0 COLLATE NOCASE, (~ (vt0.c0)), ((t0.c84)|(t0.c41))))>=((LIKELIHOOD(DISTINCT t0.c48, 0.6737079514968035), STRFTIME(t0.c52, t0.c52, t0.c81), t0.c48)))) ORDER BY ((((-3.63742572E8)IS(t0.c84))) NOT BETWEEN (CAST(t0.c48 AS TEXT)) AND ((((t0.c41)) BETWEEN ((vt0.c0)) AND ((0.7800330242708714)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 COLLATE NOCASE, (~ (vt0.c0)), ((t0.c84)|(t0.c41))))>=((LIKELIHOOD(DISTINCT t0.c48, 0.6737079514968035), STRFTIME(t0.c52, t0.c52, t0.c81), t0.c48)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((-3.63742572E8)IS(t0.c84))) NOT BETWEEN (CAST(t0.c48 AS TEXT)) AND ((((t0.c41)) BETWEEN ((vt0.c0)) AND ((0.7800330242708714)))))  NULLS LAST);
SELECT * FROM vt0, t0 WHERE ((((vt0.c0 COLLATE NOCASE, (~ (vt0.c0)), ((t0.c84)|(t0.c41))))>=((LIKELIHOOD(DISTINCT t0.c48, 0.6737079514968035), STRFTIME(t0.c52, t0.c52, t0.c81), t0.c48)))) ORDER BY ((((-3.63742572E8)IS(t0.c84))) NOT BETWEEN (CAST(t0.c48 AS TEXT)) AND ((((t0.c41)) BETWEEN ((vt0.c0)) AND ((0.7800330242708714)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 INNER JOIN t1 ON CASE ((t1.c1) IS TRUE)  WHEN CAST(t0.c81 AS INTEGER) THEN ((t0.c81) NOT BETWEEN (vt0.c0) AND (t0.c81)) WHEN CAST(t0.c84 AS REAL) THEN 0.5344586419492691 WHEN (((t1.c2))<=((t1.c0))) THEN t1.c1 COLLATE BINARY END FULL OUTER JOIN t0 ON CASE t0.c41  WHEN json_extract(t1.c2, t0.c41, t1.c0, t0.c52) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c52)) END WHERE (((HEX(t1.c1)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(t1.c1)) IS FALSE)) IS TRUE)  as count FROM vt1, vt0 INNER JOIN t1 ON CASE ((t1.c1) IS TRUE)  WHEN CAST(t0.c81 AS INTEGER) THEN ((t0.c81) NOT BETWEEN (vt0.c0) AND (t0.c81)) WHEN CAST(t0.c84 AS REAL) THEN 0.5344586419492691 WHEN (((t1.c2))<=((t1.c0))) THEN t1.c1 COLLATE BINARY END FULL OUTER JOIN t0 ON CASE t0.c41  WHEN json_extract(t1.c2, t0.c41, t1.c0, t0.c52) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c52)) END);
SELECT ALL COUNT(*) FROM vt1, vt0 INNER JOIN t1 ON CASE ((t1.c1) IS TRUE)  WHEN CAST(t0.c81 AS INTEGER) THEN ((t0.c81) NOT BETWEEN (vt0.c0) AND (t0.c81)) WHEN CAST(t0.c84 AS REAL) THEN 0.5344586419492691 WHEN (((t1.c2))<=((t1.c0))) THEN t1.c1 COLLATE BINARY END FULL OUTER JOIN t0 ON CASE t0.c41  WHEN json_extract(t1.c2, t0.c41, t1.c0, t0.c52) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c52)) END WHERE (((HEX(t1.c1)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(t1.c1)) IS FALSE)) IS TRUE)  as count FROM vt1, vt0 INNER JOIN t1 ON CASE ((t1.c1) IS TRUE)  WHEN CAST(t0.c81 AS INTEGER) THEN ((t0.c81) NOT BETWEEN (vt0.c0) AND (t0.c81)) WHEN CAST(t0.c84 AS REAL) THEN 0.5344586419492691 WHEN (((t1.c2))<=((t1.c0))) THEN t1.c1 COLLATE BINARY END FULL OUTER JOIN t0 ON CASE t0.c41  WHEN json_extract(t1.c2, t0.c41, t1.c0, t0.c52) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c52)) END);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON (((((((((((t0.c48))!=((t0.c41))))OR((- (0.9318926986441962)))))AND(CASE t0.c81  WHEN x'' THEN t1.c1 END)))AND(((t0.c81)=(t0.c84)))))AND(t1.c0)) FULL OUTER JOIN t1 ON (NOT ((t1.c0 IN ()))) WHERE (((t1.c1) NOT NULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c1) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((((((((((t0.c48))<>((t0.c41))))OR((- (0.9318926986441962)))))AND(CASE t0.c81  WHEN x'' THEN t1.c1 END)))AND(((t0.c81)==(t0.c84)))))AND(t1.c0)) FULL OUTER JOIN t1 ON (NOT ((t1.c0 IN ()))));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON (((((((((((t0.c48))!=((t0.c41))))OR((- (0.9318926986441962)))))AND(CASE t0.c81  WHEN x'' THEN t1.c1 END)))AND(((t0.c81)=(t0.c84)))))AND(t1.c0)) FULL OUTER JOIN t1 ON (NOT ((t1.c0 IN ()))) WHERE (((t1.c1) NOT NULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c1) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((((((((((t0.c48))<>((t0.c41))))OR((- (0.9318926986441962)))))AND(CASE t0.c81  WHEN x'' THEN t1.c1 END)))AND(((t0.c81)==(t0.c84)))))AND(t1.c0)) FULL OUTER JOIN t1 ON (NOT ((t1.c0 IN ()))));
SELECT * FROM t1 FULL OUTER JOIN t0 ON t1.c2 WHERE (CASE (t1.c0 IN ())  WHEN ((t0.c81)!=(t1.c2)) THEN (((t1.c2, t1.c1, t0.c41)) NOT BETWEEN (('R', t0.c48, t0.c81)) AND ((t1.c2, '318417981', t0.c84))) ELSE ((t0.c52) NOT NULL) END) ORDER BY (((- (t0.c41)))<=(((t0.c84) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (t1.c0 IN ())  WHEN ((t0.c81)<>(t1.c2)) THEN (((t1.c2, t1.c1, t0.c41)) NOT BETWEEN (('R', t0.c48, t0.c81)) AND ((t1.c2, '318417981', t0.c84))) ELSE ((t0.c52) NOT NULL) END) IS TRUE)  as count FROM t1 FULL OUTER JOIN t0 ON t1.c2 ORDER BY (((- (t0.c41)))<=(((t0.c84) NOT NULL))) DESC);
SELECT * FROM t1 FULL OUTER JOIN t0 ON t1.c2 WHERE (CASE (t1.c0 IN ())  WHEN ((t0.c81)!=(t1.c2)) THEN (((t1.c2, t1.c1, t0.c41)) NOT BETWEEN (('R', t0.c48, t0.c81)) AND ((t1.c2, '318417981', t0.c84))) ELSE ((t0.c52) NOT NULL) END) ORDER BY (((- (t0.c41)))<=(((t0.c84) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (t1.c0 IN ())  WHEN ((t0.c81)<>(t1.c2)) THEN (((t1.c2, t1.c1, t0.c41)) NOT BETWEEN (('R', t0.c48, t0.c81)) AND ((t1.c2, '318417981', t0.c84))) ELSE ((t0.c52) NOT NULL) END) IS TRUE)  as count FROM t1 FULL OUTER JOIN t0 ON t1.c2 ORDER BY (((- (t0.c41)))<=(((t0.c84) NOT NULL))) DESC);
SELECT * FROM t1 FULL OUTER JOIN t0 ON t1.c2 WHERE (CASE (t1.c0 IN ())  WHEN ((t0.c81)!=(t1.c2)) THEN (((t1.c2, t1.c1, t0.c41)) NOT BETWEEN (('R', t0.c48, t0.c81)) AND ((t1.c2, '318417981', t0.c84))) ELSE ((t0.c52) NOT NULL) END) ORDER BY (((- (t0.c41)))<=(((t0.c84) NOT NULL))) DESC;
SELECT * FROM t1, vt0, vt1 WHERE ((- (t1.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((- (t1.c1 COLLATE BINARY))) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT * FROM t1, vt0, vt1 WHERE ((- (t1.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((- (t1.c1 COLLATE BINARY))) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT * FROM t1, vt0, vt1 WHERE ((- (t1.c1 COLLATE BINARY)));
SELECT ALL * FROM vt0, vt1, t1 WHERE ((((t1.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT ALL * FROM vt0, vt1, t1 WHERE ((((t1.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT ALL * FROM vt0, vt1, t1 WHERE ((((t1.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0 COLLATE BINARY))));
SELECT ALL COUNT(*) FROM vt0, t0 NATURAL JOIN t1 WHERE ((((CAST(vt0.c0 AS REAL), ((t0.c84) BETWEEN (NULL) AND (t0.c52)), t1.c0 COLLATE BINARY, ((t0.c41) NOT NULL), t0.c81 COLLATE BINARY, ((((t0.c52)OR(t0.c84)))OR(t1.c1)), ((((((((t0.c41)AND(t0.c48)))AND(t1.c2)))OR(t1.c2)))AND(t0.c81))))!=((x'b939f39f', IFNULL(t1.c1, t0.c52), ABS(t0.c52), (((vt0.c0, t0.c81, t1.c1))<=((t0.c84, t0.c41, t1.c2))), t0.c48, ((t1.c2)GLOB(t0.c84)), CAST(t1.c0 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS REAL), ((t0.c84) BETWEEN (NULL) AND (t0.c52)), t1.c0 COLLATE BINARY, ((t0.c41) NOT NULL), t0.c81 COLLATE BINARY, ((((t0.c52)OR(t0.c84)))OR(t1.c1)), ((((((((t0.c41)AND(t0.c48)))AND(t1.c2)))OR(t1.c2)))AND(t0.c81))))!=((x'b939f39f', IFNULL(t1.c1, t0.c52), ABS(t0.c52), (((vt0.c0, t0.c81, t1.c1))<=((t0.c84, t0.c41, t1.c2))), t0.c48, ((t1.c2)GLOB(t0.c84)), CAST(t1.c0 AS BLOB))))) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN t1);
SELECT ALL COUNT(*) FROM vt0, t0 NATURAL JOIN t1 WHERE ((((CAST(vt0.c0 AS REAL), ((t0.c84) BETWEEN (NULL) AND (t0.c52)), t1.c0 COLLATE BINARY, ((t0.c41) NOT NULL), t0.c81 COLLATE BINARY, ((((t0.c52)OR(t0.c84)))OR(t1.c1)), ((((((((t0.c41)AND(t0.c48)))AND(t1.c2)))OR(t1.c2)))AND(t0.c81))))!=((x'b939f39f', IFNULL(t1.c1, t0.c52), ABS(t0.c52), (((vt0.c0, t0.c81, t1.c1))<=((t0.c84, t0.c41, t1.c2))), t0.c48, ((t1.c2)GLOB(t0.c84)), CAST(t1.c0 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS REAL), ((t0.c84) BETWEEN (NULL) AND (t0.c52)), t1.c0 COLLATE BINARY, ((t0.c41) NOT NULL), t0.c81 COLLATE BINARY, ((((t0.c52)OR(t0.c84)))OR(t1.c1)), ((((((((t0.c41)AND(t0.c48)))AND(t1.c2)))OR(t1.c2)))AND(t0.c81))))!=((x'b939f39f', IFNULL(t1.c1, t0.c52), ABS(t0.c52), (((vt0.c0, t0.c81, t1.c1))<=((t0.c84, t0.c41, t1.c2))), t0.c48, ((t1.c2)GLOB(t0.c84)), CAST(t1.c0 AS BLOB))))) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN t1);
SELECT ALL COUNT(*) FROM vt0, t0 NATURAL JOIN t1 WHERE ((((CAST(vt0.c0 AS REAL), ((t0.c84) BETWEEN (NULL) AND (t0.c52)), t1.c0 COLLATE BINARY, ((t0.c41) NOT NULL), t0.c81 COLLATE BINARY, ((((t0.c52)OR(t0.c84)))OR(t1.c1)), ((((((((t0.c41)AND(t0.c48)))AND(t1.c2)))OR(t1.c2)))AND(t0.c81))))!=((x'b939f39f', IFNULL(t1.c1, t0.c52), ABS(t0.c52), (((vt0.c0, t0.c81, t1.c1))<=((t0.c84, t0.c41, t1.c2))), t0.c48, ((t1.c2)GLOB(t0.c84)), CAST(t1.c0 AS BLOB)))));
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0);
SELECT * FROM vt0, vt1, t1, t0 WHERE (((t1.c0 COLLATE BINARY)%(((t0.c84) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0 COLLATE BINARY)%(((t0.c84) IS FALSE)))) IS TRUE)  as count FROM vt0, vt1, t1, t0);
SELECT * FROM vt0, vt1, t1, t0 WHERE (((t1.c0 COLLATE BINARY)%(((t0.c84) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0 COLLATE BINARY)%(((t0.c84) IS FALSE)))) IS TRUE)  as count FROM vt0, vt1, t1, t0);
SELECT * FROM vt0, vt1, t1, t0 WHERE (((t1.c0 COLLATE BINARY)%(((t0.c84) IS FALSE))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(HEX(vt0.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(HEX(vt0.c0) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(HEX(vt0.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(HEX(vt0.c0) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(HEX(vt0.c0) AS BLOB));
SELECT * FROM vt0, t0, t1 INNER JOIN vt1 ON CAST(((((((((((((t1.c0)OR(vt1.c0)))OR(t0.c41)))AND(t1.c2)))OR(t0.c84)))AND(t1.c1)))AND(vt1.c0)) AS BLOB) WHERE (CASE t0.c52 COLLATE BINARY  WHEN (~ (t0.c41)) THEN (t0.c41 IN (t1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE t0.c52 COLLATE BINARY  WHEN (~ (t0.c41)) THEN (t0.c41 IN (t1.c1)) END) IS TRUE)  as count FROM vt0, t0, t1 INNER JOIN vt1 ON CAST(((((((((((((t1.c0)OR(vt1.c0)))OR(t0.c41)))AND(t1.c2)))OR(t0.c84)))AND(t1.c1)))AND(vt1.c0)) AS BLOB));
SELECT * FROM vt0, t0, t1 INNER JOIN vt1 ON CAST(((((((((((((t1.c0)OR(vt1.c0)))OR(t0.c41)))AND(t1.c2)))OR(t0.c84)))AND(t1.c1)))AND(vt1.c0)) AS BLOB) WHERE (CASE t0.c52 COLLATE BINARY  WHEN (~ (t0.c41)) THEN (t0.c41 IN (t1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE t0.c52 COLLATE BINARY  WHEN (~ (t0.c41)) THEN (t0.c41 IN (t1.c1)) END) IS TRUE)  as count FROM vt0, t0, t1 INNER JOIN vt1 ON CAST(((((((((((((t1.c0)OR(vt1.c0)))OR(t0.c41)))AND(t1.c2)))OR(t0.c84)))AND(t1.c1)))AND(vt1.c0)) AS BLOB));
SELECT * FROM vt0, t0, t1 INNER JOIN vt1 ON CAST(((((((((((((t1.c0)OR(vt1.c0)))OR(t0.c41)))AND(t1.c2)))OR(t0.c84)))AND(t1.c1)))AND(vt1.c0)) AS BLOB) WHERE (CASE t0.c52 COLLATE BINARY  WHEN (~ (t0.c41)) THEN (t0.c41 IN (t1.c1)) END);
SELECT COUNT(*) FROM vt1 WHERE (CASE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN ((vt1.c0)!=(vt1.c0)) THEN ((vt1.c0)IS NOT(vt1.c0)) END) ORDER BY CASE ((vt1.c0) IS FALSE)  WHEN vt1.c0 THEN vt1.c0 COLLATE NOCASE ELSE '-2044027575' END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN ((vt1.c0)!=(vt1.c0)) THEN ((vt1.c0)IS NOT(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY CASE ((vt1.c0) IS FALSE)  WHEN vt1.c0 THEN vt1.c0 COLLATE NOCASE ELSE '-2044027575' END  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (CASE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN ((vt1.c0)!=(vt1.c0)) THEN ((vt1.c0)IS NOT(vt1.c0)) END) ORDER BY CASE ((vt1.c0) IS FALSE)  WHEN vt1.c0 THEN vt1.c0 COLLATE NOCASE ELSE '-2044027575' END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN ((vt1.c0)!=(vt1.c0)) THEN ((vt1.c0)IS NOT(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY CASE ((vt1.c0) IS FALSE)  WHEN vt1.c0 THEN vt1.c0 COLLATE NOCASE ELSE '-2044027575' END  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (CASE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN ((vt1.c0)!=(vt1.c0)) THEN ((vt1.c0)IS NOT(vt1.c0)) END) ORDER BY CASE ((vt1.c0) IS FALSE)  WHEN vt1.c0 THEN vt1.c0 COLLATE NOCASE ELSE '-2044027575' END  NULLS LAST;
SELECT ALL * FROM t0, vt0, t1, vt1 WHERE (((((t0.c48) BETWEEN (t0.c81) AND (t1.c0))) BETWEEN (vt0.c0) AND (t0.c52 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((t0.c48) BETWEEN (t0.c81) AND (t1.c0))) BETWEEN (vt0.c0) AND (t0.c52 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0, t1, vt1);
SELECT ALL * FROM t0, vt0, t1, vt1 WHERE (((((t0.c48) BETWEEN (t0.c81) AND (t1.c0))) BETWEEN (vt0.c0) AND (t0.c52 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((t0.c48) BETWEEN (t0.c81) AND (t1.c0))) BETWEEN (vt0.c0) AND (t0.c52 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0, t1, vt1);
SELECT ALL * FROM t0, vt0, t1, vt1 WHERE (((((t0.c48) BETWEEN (t0.c81) AND (t1.c0))) BETWEEN (vt0.c0) AND (t0.c52 COLLATE NOCASE)));
SELECT COUNT(*) FROM t0 NOT INDEXED, vt0 WHERE ((-1261411975 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((-1261411975 IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0 NOT INDEXED, vt0 WHERE ((-1261411975 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((-1261411975 IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0 NOT INDEXED, vt0 WHERE ((-1261411975 IN ()));
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
