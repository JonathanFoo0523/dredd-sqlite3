-- Time: 2024/06/09 23:54:48
-- Database: database52
-- Database version: 3.40.0
-- seed value: 4207558852
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE TABLE t0 (c0 INTEGER , c1 INT , c2 BLOB ); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=576569197'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE 1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1356301753'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1356301753 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CAST(0.926619503128454 AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1994748575 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-371732257 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('576569197', NULL, 0X775a1379))>((x'', '\j', x''))))-((('\J') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=576569197'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE NULL COLLATE RTRIM COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1356301753 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1507524399 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1356301753 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((LOWER('\j')))>((((x'') IS FALSE)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1228833740 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'')>=('576569197')) THEN ((0.3323637410196425)LIKE(0.36390172210913363)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1994748575 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE BINARY AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-2111811024 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1092576549'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1994748575'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-2111811024'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((NULL)OR(0.3484205014657452)))AND('x_Ko')))AND((('2021102374') NOTNULL))))OR((((x'74cc', -2.111811024E9, ''))>((0.647989173544062, x'', 576569197))))))AND(NULL COLLATE RTRIM)))AND(((NULL) NOT BETWEEN ('-1351856649') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 sz=-497065649 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT NULL)) NOT BETWEEN (LOWER(DISTINCT '-1351856649')) AND (CAST('0.3323637410196425' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1994748575'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=600812800 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE -2.111811024E9; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.852252604436831, 0.35898133112098995, x'd35f')) NOT BETWEEN ((((0.9700264759207895)>(0.5065636917774953)), (0X7580c08b IN ('>l')), ((NULL) NOT BETWEEN ('') AND (x'')))) AND (((((('')OR(NULL)))OR(0.926619503128454)), 1228833740, ((NULL) ISNULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=1416700989'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'a1ab')>(0.7000347976491876)) THEN x'c25e' COLLATE RTRIM WHEN CASE WHEN NULL THEN '?B' ELSE '-589704368' END THEN CAST(NULL AS BLOB) WHEN ('2021102374' IN ()) THEN (-2023964095 IN ()) ELSE ((('-2133135676')) BETWEEN (('WQ')) AND ((0.9700264759207895))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1522834311') NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xfffffffff2c6e727) IS FALSE)) NOT BETWEEN ((('-1356301753')<=('}L'))) AND ((((('568180407')OR(NULL)))OR(0.019042327275179405)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=1216140701 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1535771349 sz=-221845721 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((0.5951510016259334 COLLATE NOCASE)AND(((x'cc50')IS NOT('\u')))))AND((- (x'c56d0b17')))))AND(((NULL)!=(NULL)))))OR(((NULL)<<('1522834311')))))AND(CAST(0.35898133112098995 AS NUMERIC))))AND((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 993906944 sz=-1337019682 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1416700989 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')-('568180407'))) BETWEEN (('1971372171' IN (x''))) AND (CAST(-1.356301753E9 AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('1595759855')AND('4bc(T^q]')))OR(0.3323637410196425)))OR(-1708412268)))OR(0xffffffff82205230))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1079060113 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((x''))>((NULL))))OR(((((((((x'')OR(1281841273)))OR(x'c632')))OR(0.852252604436831)))OR(NULL)))))OR((NOT (-2.023964095E9)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1595759855 sz=1745604719 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (0.4237370281685001)))IS NOT(x'')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-777193327) ISNULL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '2 sz=1228833740'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1481349372')+(x'9f46')))/(((x'') NOT BETWEEN (NULL) AND (x'7b4a')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)||('')) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-1793644665 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')IS NOT(9.93906944E8))) NOT BETWEEN (CAST(1232144894 AS BLOB)) AND (CASE WHEN 'EPO?' THEN 0.2198352227966407 WHEN NULL THEN '856219897' WHEN x'6b48ddbf' THEN NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-113858496 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1522834311 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)IS(0.03936652050435385)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '555836366'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-497065649 sz=600812800'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1267587534 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.02964001376773262) NOT BETWEEN (0.03936652050435385) AND (NULL)))&(''',(%Hî©¯' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((('0.926619503128454')) BETWEEN ((NULL)) AND ((8.56219897E8)))  WHEN NULLIF(0xffffffffb8cec4f9, 0.6273805674697867) THEN '' END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-777193327 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE WHEN 1814324508 THEN '-221845721' ELSE 0.6273805674697867 END))<=(((('o/oQ0') IS FALSE)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((9.93906944E8)IS('')))-((~ (NULL)))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(CAST('0.9700264759207895' AS REAL)); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)IS NOT(0.7237577849181783))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1507524399 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '849726183 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 4 sz=318791258 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-1604547005 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.2941531958931567))<>(('-1384171324'))))LIKE((((0.5065636917774953, '-283027304', x''))=(('EPO?', 0Xffffffffe5a0d266, ''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '0 sz=355994807 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 1082584287 sz=568180407 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=312877973 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.7840500573299297)!=(x'2e62')) IN (('1482554100' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1277507737 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('0.6273805674697867' AS BLOB))OR(LOWER(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-199496167 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1146915834 2 sz=-1448433331 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'6ff3'))=(('nA'))) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (NULL)))OR((NOT (-1584212563)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((x'0910') BETWEEN (x'') AND (0.6797747195197914)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-1421569220'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'') BETWEEN (NULL) AND ('WQ')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 6 sz=2142483509 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE 0.39912970124943237; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL))<=((CAST(x'' AS TEXT)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '856219897 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')<(NULL))))<>(((x'61c9' IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=491591856 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1922375325'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=90533431 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-199496167', 'Tæ¸·', x'')) NOT BETWEEN ((((NULL) IS FALSE), (('')+(NULL)), (NULL IN ()))) AND ((((2019598442) NOTNULL), (~ (NULL)), SQLITE_SOURCE_ID()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=272894131 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1545436116 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' COLLATE BINARY AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=555836366 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((0.39912970124943237)IS(0X3f736064)))IS(CAST(0.4976058009348998 AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 4'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1609485410'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN LIKELIHOOD(x'', 0.5983743570146002) THEN (~ (879857329)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1064525924'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '4 sz=-664081675 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-2.21845721E8)<<('-665037754')))-((((((((('0.852252604436831')AND(x'fffd')))AND(x'')))OR(x'f467')))OR('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-2022929578'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1416700989 0 sz=-1604547005 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LENGTH(((0.33307420117164355)AND(x'399b'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((530676640))>(('')))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=900967324 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL))<=(('1955758603'))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELY('hêªN\nsN6x'))AND(((0.2487854257101263)*(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=1609621121'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1507524399 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1184445402 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')<>(840706541)) IN (HEX(x''), ((x'dfc6') BETWEEN ('nN\ï°s?') AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-665037754'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'ce7c' AS TEXT)) BETWEEN (((1694538339)+('900967324'))) AND ('-1079060113')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-1859771433 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '0 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((((0.10563930002789812)AND('ã¸¦~')))AND(x'')))OR(x'')))OR(x'')))OR(0.8943698679353526)))OR('')))OR('{a>')))OR('v~5')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1793644665 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=533651308 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1332551909'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((CAST(',W' AS NUMERIC))) AND ((((x'c713') BETWEEN (0X7fd7010d) AND (x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '2 sz=525559006 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=623008604 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '146526567'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '335829004 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-2022929578 2 sz=780426840'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '-2115025352 849726183 -1587313477 sz=-857678542'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=825346515'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-118123446'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE DATETIME((((x''))>((x'df88'))), CAST(0x38cb698 AS TEXT), 0.1586671917231972, (((x'', 'nN\ï°s?', NULL)) NOT BETWEEN ((x'', NULL, 0.42478533638654803)) AND (('', NULL, x''))), (- (NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((~ (0.3979065745713857)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '623008604 0 sz=-530631695 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((('-34420710' IN ()))<=(CASE '137169555'  WHEN NULL THEN NULL ELSE x'24a2' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=1416700989 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=-221845721'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((',G')>=(NULL))) NOT BETWEEN (((x'')>=(''))) AND (((('1464059583', x'', '\,')) BETWEEN ((NULL, '{8', x'')) AND (('-1859771433', '', 5.68180407E8))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1673053569 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.02660434439048276 IN ())) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-1162052710 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1092576549 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''',(%Hî©¯'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 1416700989 sz=54555201 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1442849119'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'' THEN '0.647989173544062' ELSE 0.876932526111732 END COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS BLOB) COLLATE NOCASE COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '1664099730 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=1387909931 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1641610692 sz=517585488 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '-1994748575 981644864 sz=-1364772061 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '26991318 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'6bb7') IS FALSE) IN (CAST('-588508770' AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=1297439760 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '-1602561700'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN 0X5f3b5f6e THEN NULL WHEN '1526191726' THEN '-1779698395' WHEN NULL THEN '1498224734' ELSE 406569837 END AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((1.609621121E9) NOT BETWEEN (0x264a7838) AND (0.041806845450862995)))OR((((((((('0.3484205014657452')AND('v~5')))AND(0.852252604436831)))OR('1033990913')))OR('L|	ê¥*')))))AND(((0.6556827058720223) IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('2144796941', x'', 0.4732416369451864)) NOT BETWEEN (((x'' IN ()), ((0x48c28a13)|('1609621121')), (('-2078799570') IS TRUE))) AND (((('2142483509')/(NULL)), ((((((((NULL)OR(0.504975510513661)))AND(NULL)))OR(0.48897362687336376)))AND(0x40ccb5fa)), CAST(NULL AS NUMERIC)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1440779978 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=2019575768 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(908082737 AS BLOB)) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1196409331 0 sz=-1025713360 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.6083961010396022)) BETWEEN ((CAST(x'' AS TEXT))) AND ((((((0.11200778062434502)OR('à·µ!f')))AND(x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-485259839)/(NULL)))+(RTRIM('Ee'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '-1211320890 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((-2074745124)OR(-497065649)))AND(-1421569220)))AND(x'')))AND(x'')))OR((0X55161511 IN (0X754876b1, x'd97d')))))OR(((NULL) BETWEEN (0X7492820b) AND (940778597)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=840624656 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 6ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '375480641 sz=-1453219904 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 0 sz=1867623545 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0x4247b665) NOT BETWEEN (0.16339388386407905) AND (x'')))<=(CASE WHEN 0.8618636869061393 THEN x'63fd' WHEN '2019598442' THEN NULL WHEN 0.6977181212247198 THEN x'' ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-199496167 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('&ä··') NOTNULL)) NOT BETWEEN (x'') AND (LIKELY(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1064706784 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (x'bd0d' IN (0.8642553657778256)) THEN (((NULL)) NOT BETWEEN ((NULL)) AND ((x'de33'))) WHEN CASE NULL  WHEN 0.6141941402659226 THEN 0X33ff06ab WHEN 0.11200778062434502 THEN '' WHEN x'' THEN NULL WHEN 0.876932526111732 THEN x'' WHEN 0.20262913197577492 THEN '-281250365' END THEN ('' IN ()) WHEN ((1232144894)IS('')) THEN CASE -755966504  WHEN 'y0?' THEN 0.2941531958931567 WHEN NULL THEN NULL WHEN x'' THEN x'' ELSE '' END END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-558798646 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 1922375325 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (- ('è¬')) THEN (((x'', '1609621121', x'4bef')) NOT BETWEEN ((NULL, NULL, '788303392')) AND ((x'', 0x72e2dbbf, x''))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('453272895') NOT BETWEEN ('%\r') AND ('c1')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 -1989517417 973700506 sz=1146915834'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, '-2075935495', NULL, 0xffffffffb0e9fc40, 1.092576549E9)) NOT BETWEEN ((STRFTIME(x'', 0.43559492821033996, x''), (NULL IN ()), NULL COLLATE BINARY, (0x23cfad00 IN ()), ((x'')GLOB('1447733760')))) AND ((((NULL) NOT BETWEEN (x'') AND (x'b95a')), ((NULL) NOT BETWEEN (x'') AND (NULL)), (('\	~\nH,3m7') BETWEEN (NULL) AND ('592120164')), ((1.46526567E8)<<(0Xffffffffdcd9d350)), (0.041806845450862995 IN (x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=879857329 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=665361065 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '-992462107 -1793644665 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CHAR(x'')) NOT BETWEEN ((x'' IN (x''))) AND ((x'' IN ()))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1854401543 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-1609485410 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '1990653097 sz=-735302761 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '237401024 879857329 sz=1482554100 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=146526567 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=555836366 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(x'' COLLATE RTRIM); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=9223372036854775807 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-1102074935 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1357948936 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ('')))OR(((0Xffffffffa544fc06)|(x'8034')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((0.67004099617619)AND(0.4237370281685001)))AND('1922375325')) THEN (('-1587313477') NOT NULL) WHEN 1635226555 THEN (+ (0X1404580c)) WHEN (('535130256')&(4.91591856E8)) THEN ((0xffffffffd1acf891)<(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '0 sz=-460193296 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1921347647'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(DISTINCT (~ (''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0x5de15ffd) NOT BETWEEN (x'') AND ('-987786513')) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=645285262 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 sz=-1724234707 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'5257f7c4' AS INTEGER))>=(('825346515' IN (8.79857329E8, x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (5.68180407E8) AND (x'b8db'))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1587313477 sz=1122417065 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('-532905900')AND('1595759855')))OR('p9#VMeYv_')))OR(x'')))AND(0.8234368892954704))) BETWEEN ((('262232236') NOT BETWEEN (0.4209533175073671) AND (x''))) AND (NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((ABS(x'706e'))IS NOT(((('-2115025352'))>((x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE BINARY) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
DELETE FROM sqlite_stat1 WHERE load_extension(0x650b047f COLLATE RTRIM, (('-900593012')IS NOT('à·µ!f'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (HEX(DISTINCT 'RTP'))); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 sz=335829004 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=555836366 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL, 1.694538339E9, x'')) NOT BETWEEN ((0.1586671917231972, '59553432', x'')) AND ((0.9659131199729348, 0xffffffff875cc241, '-880657990')))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1840011706 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-11898219'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 0 sz=355994807'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')+('Tæ¸·')))<<((((('	')AND(0.5343074081661419)))OR(-1.859771433E9)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(x'298b' AS REAL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 2 sz=-2133135676 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)<<('780426840')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1447321343 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-166961798 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.0264835134229362; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((('')) BETWEEN ((NULL)) AND ((NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=1027423469 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1351856649 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(x'' COLLATE RTRIM); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1232144894 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2078377399 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=1702756511'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE x'7ded'  WHEN '355994807' THEN 0.6004595978379397 ELSE 1416700989 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 sz=525559006 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('{S44l')LIKE(-1257019402)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((NULL) IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN (((((((((('go2[ |n')AND(0.13784967311112095)))OR(0.03885639391591833)))OR(NULL)))OR(0.48416373082501607)))) AND ((CASE '-1184445402'  WHEN NULL THEN '-684103125' END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) ISNULL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1560304412 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'3538'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (0.854659017169996 COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-1593572631 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1527201561 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1489760171 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1584212563 sz=-262368827 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('q9w5d') BETWEEN ('') AND (0.28987173769541374)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-974899424 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.9978157671006695)OR(0.8451117143042778)))AND(x'')))<<(-0.0 COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-34420710'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-589704368 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) BETWEEN (0.08355874095791893) AND (NULL)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-607910014 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 312877973 0 sz=39719380 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (0.9215728327801007) AND (NULL))) BETWEEN (LIKELY(x'2850')) AND ((('318791258')OR('2142483509')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=-2051650963'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'jè»[4'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 -1177385221 sz=-407014195 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-544293477 sz=-1277507737 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN LOWER(0.504975510513661) THEN x'' END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('\/')%('* 7O.7Z, ')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=1092576549 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.5951510016259334; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1337019682 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=530676640'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER('|O' COLLATE NOCASE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-2145106075 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST('TRUE' AS REAL))OR(x'')))AND((0Xfffffffff2e837cc IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-965962848'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1082584287 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST((NOT (x'')) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '1309486357 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1971372171'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1349101842 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '2 -1903222856 sz=1622765649 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)=(0X708d239e))) NOT BETWEEN ((((x''))<((0xffffffffa05c8e43)))) AND ('59553432')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 sz=1566970159 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('1609621121'))>((0xffffffffa05c8e43))))IS NOT((('0.5951510016259334')||(x'')))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1506719478 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('') ISNULL) IN (((x'') BETWEEN ('-34420710') AND (NULL)), (+ ('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-696149781 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-262592738'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((~ (-664081675)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1100190327 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE ''  WHEN 'æ|ç²*rHU]a' THEN '-2135571965' WHEN 0.8927112335747649 THEN '-34420710' WHEN '-615093791' THEN 0Xffffffffb405e7c3 WHEN 0.549496552710489 THEN '' WHEN 0.679466746651072 THEN '-65302863' END  WHEN ((((NULL)AND(NULL)))OR('1500730118')) THEN (0.33881950217550805 IN ()) ELSE CAST(-1.793644665E9 AS REAL) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '879082873 528393915 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (NOT (LIKELIHOOD(DISTINCT '', 0.7574609423849679))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=525559006 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.6515773423486719)*(-1421569220)))OR(TRIM(-1.448433331E9, -1.793644665E9))))AND(((('0.6797747195197914')) NOT BETWEEN ((x'')) AND (('|ä¬awVO>'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=548924015 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('1859501722')AND(NULL)))OR(x''))) NOT BETWEEN ((('-60586266') IS FALSE)) AND (NULLIF(NULL, NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '1745604719' THEN 0X305045a ELSE 0.011053318563937764 END) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('9223372036854775807')AND(x'')))AND(0.049406939120631876)))AND(((NULL)LIKE(x'')))))AND(CASE x''  WHEN 0.6003816852306632 THEN '1694538339' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (''))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.4049372976133554)IS(x'')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (-1742128833 COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 3ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('' AS TEXT)) BETWEEN ((NULL IN ())) AND (((x'') NOT BETWEEN (0.7233955439971075) AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=21379032 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'6df9' AS BLOB))<(((NULL)/('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CHANGES(); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('T6')<(x'6b43')) COLLATE BINARY COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 sz=1349895651'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1953887699 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((('-1194408711') IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'147a' COLLATE NOCASE, (('') BETWEEN (0x5743c6bf) AND (x'6c79')), TYPEOF(0x78779326), ((NULL) BETWEEN ('0æ®\.h6') AND ('-163401886')), NULLIF(DISTINCT NULL, 'é¦¿\r')))>=((((('-1584212563')) NOT BETWEEN ((x'')) AND ((0.7663273829133603))), ((((NULL)OR(NULL)))OR(NULL)), ((x'')AND('')), ((('2009968812', x'', NULL)) BETWEEN ((0X5f1d5cef, 0.5823107010807589, NULL)) AND ((0xffffffffaa482764, '', -1.7976931348623157E308))), (('-1584212563')<=(x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((('')OR('1507437444')))AND(NULL)) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-596765545 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-970182969'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)<=(0.30737833577877904))) NOT BETWEEN (CASE WHEN 0.7305963434136523 THEN -1.356301753E9 WHEN '' THEN 0.6898694759199857 WHEN 0.4064744520287481 THEN 3.18791258E8 ELSE '-199496167' END) AND (((0.1885774877246008)AND(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'') IS TRUE) THEN 0.2693065689412655 ELSE ((856219897) IS FALSE) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=1530893100 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1216140701 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=540623335'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)|('318791258')) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1337019682') NOT BETWEEN (x'') AND (0.8508893910450086)))IS((~ ('-530631695')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=840706541 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '-1604547005'  WHEN (((((((('-969262494')AND(NULL)))OR(x'')))OR(0.7233955439971075)))AND(x'a628')) THEN ((x'') BETWEEN ('?V\n') AND (x'')) ELSE (x'2c38' IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1873254696 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1064525924 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-1107899145 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1785098042 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('h3/M' IN ()))IS(CAST(NULL AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1922375325 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=426108646 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-391706248 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT json_insert(0.16975510003257077, '/(/1y[tv', NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1253524851 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')*('')) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=-1130252580 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 8.49726183E8; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-459840371'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ('2,' IN (NULL, 'a3]î¬6pP n'))  WHEN (('') NOT BETWEEN (-1.337019682E9) AND (0.38694733470821163)) THEN CAST(-2123601885 AS REAL) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('l_') NOT BETWEEN (x'c3de') AND (x'')) THEN NULL WHEN ((((x'')OR('G~V*I/}')))OR(x'dedb')) THEN ((((((((x'')AND(x'9ead')))AND(0xdcbb494)))OR(0.05511722746709147)))AND('aj\nQ')) WHEN (('849726183') BETWEEN (x'') AND (NULL)) THEN NULL COLLATE BINARY ELSE CAST(0.6666016061530919 AS BLOB) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-56354864 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1356301753 2 sz=-2023964095 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CHAR((~ ('993906944')), json_valid('2019598442'), ((((((((x'7d1b')AND(x'')))OR('Tæ¸·')))AND(0X3fabde7c)))OR(0.5518830534311753))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1838519675 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1245979701 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2004833927 sz=1717272958'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '1924534508 sz=825346515 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1522834311 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.2198352227966407) NOT NULL) IN ((0.2726291618627643 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.8927112335747649)GLOB('oí7')) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('HK') NOT NULL)) BETWEEN (((0.9672188151996365)=(9.0533431E7))) AND ((-1332551909 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'772d'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-1272898924'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1089627937 sz=805914025 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '4 576569197 sz=-1793644665 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1284937839 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (('1595759855' IN (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((('')) BETWEEN ((0x26567bf8)) AND ((NULL)))  WHEN (+ (600812800)) THEN (((((((('-2085379969')AND(NULL)))OR(0.8436450923981347)))OR('592822595')))OR(856219897)) ELSE ((((((((((((NULL)OR(x'b5c0')))AND('555836366')))AND(NULL)))AND('-1351856649')))AND(',ab\rì èu\')))OR(x'')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL) NOT NULL)  WHEN ((NULL)AND(NULL)) THEN CAST(0xffffffffd059ed98 AS REAL) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.23258937532157042)) BETWEEN (((((((((((((('1416700989')OR('w3')))OR(x'ea29')))AND(0x3f736064)))AND('1164506968')))OR(x'')))AND(1318223649)))) AND ((((((x'')OR(0Xffffffffc3c3dd5b)))OR('1922375325'))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=2019598442'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '200855461 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1044473577 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.3265642365536515 IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1337019682 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 840706541 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2007631922 sz=-1535771349 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)AND(' &G')))OR(0.9246213332224421)))&(((0.5824768144906719)<('-1708412268')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((('NW*R')) NOT BETWEEN ((NULL)) AND (('+y'))) THEN ('TRUE' IN (x'95e3', 1.481349372E9)) ELSE CAST(326644964 AS NUMERIC) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-9223372036854775808 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1079060113'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-313090861 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-1337019682 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1522834311 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (INSTR('', '568180407') IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1e500', '-1982333140', 0.39907765964204933)) BETWEEN ((((NULL)||(0.23608541796772986)), 0xffffffffdabf6568 COLLATE BINARY, CAST('1955758603' AS INTEGER))) AND (('' COLLATE BINARY, json_object(NULL, '2140063373', x'', NULL, NULL, '	5-.p6N2'), '<v-]tëÎQH'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.8193661133217168) BETWEEN ('') AND ('-371732257')) THEN 0x59daff2f WHEN (('jJé¼U')<>('')) THEN ((((((((x'a5a5')AND(-978651171)))OR(NULL)))AND('y%?+^1')))AND('+y')) WHEN CAST(NULL AS REAL) THEN ((NULL)GLOB('-1429022820')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '-1232823704 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-595873800 sz=1456718204 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((('')OR(0.13628780342667102)))AND('{+îr'))))!=((((x'') NOT BETWEEN (NULL) AND (-1.604547005E9))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-1205339593 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((0.9543894990896833)) NOT BETWEEN ((0.5768936049436627)) AND ((NULL))))OR(((((NULL)AND(x'')))OR(0Xfffffffff8f5944a)))))OR(((('|ä¬awVO>')) BETWEEN ((NULL)) AND ((0x63193e26))))))OR((- (x'')))))AND(((((0.5824768144906719)OR(0.3979065745713857)))OR('119604797')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (('-1421569220' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-225050653 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-970039568 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-113858496 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-281234769'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '1920553470 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (~ (0X7fd7010d)) THEN '' COLLATE NOCASE WHEN (((1971372171, 0.6239201417287742, x'', 0x7492820b, '-1162052710')) BETWEEN ((NULL, '0.8451117143042778', NULL, 0xffffffff847d92f6, x'')) AND ((x'', x'', NULL, '-1420213800', 'Im,6ItTu!'))) THEN 0.11361269497763038 COLLATE RTRIM WHEN (((NULL))>=((1.694538339E9))) THEN 0.4641610030949611 COLLATE BINARY WHEN 'Ê2n&î³²05' THEN '-1162052710' COLLATE RTRIM WHEN ((x'')LIKE(0.026875032728434944)) THEN x'156d030d' ELSE ((0.8087594985333286)LIKE(x'')) END; -- 7ms;
DELETE FROM sqlite_stat1 WHERE json_valid((NULL IN ())); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=485160156 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('') NOT NULL))AND(((((NULL)OR(2.144796941E9)))AND(0.09036850283414488)))))AND((+ (x'eb15')))))AND(((x'')IS NOT(NULL)))))AND(((0xffffffffbe4503f9) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1146468640'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1194909250 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.5343074081661419)AND(0.5629234780461159)))OR('.pBqL->')))OR(NULL)))OR(x''))) BETWEEN (((x'') NOT NULL)) AND (((0.9215728327801007) BETWEEN (0.830587996037861) AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UPPER(DISTINCT x'')) BETWEEN (CAST(x'' AS BLOB)) AND ((('1481649785')&('G6d!')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)||('~\rVGTïºfr\')))LIKE(CAST(x'' AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((x'290d')OR('1055640514')))AND(0.3978395127440352)))OR(0.9964217511208311)))OR(x'')))OR(NULL)))OR(993906944))) NOT BETWEEN (((0.6621232291091886) ISNULL)) AND (TIME(0.23649616434347698, -1.584212563E9, '180261184'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1106578226'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=2046690152 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-2095123621 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '-774070715 sz=1'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '312631194 sz=-257770098 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)%('9v+oï´¾\nA')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((- (NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 -721218174 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1673053569'; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.33029433476464376 AS TEXT))>>('0.5823107010807589')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=1789167614 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0x148c4568)OR(0xffffffffb04eb2de))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL, x'922a', x'c5f2')) NOT BETWEEN ((x'9654', 0.6898694759199857, '300773240')) AND ((0.8943698679353526, NULL, NULL))))GLOB((('0.02964001376773262')LIKE(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '0 -274675230 sz=100256911 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-272481299 sz=272894131 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL) NOT NULL), 0.05511722746709147, ((0.41652935531693425)*(x''))))>=(((0x2fcb88c2 IN (0.3961704857816284)), (('-1793644665')|(x'')), ((NULL)*(1097828707))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((3.35829004E8)AND(0.6879772353933558)))AND(0.6940000323062916)))AND(0x1b253c11)))OR(NULL)))%((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=568180407 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((0.14100085899492565)) BETWEEN (('<>')) AND ((0.14394701411985233))) THEN (('') IS TRUE) WHEN ABS('rS'',IQ S') THEN ((0.8810116480579536)&(x'')) WHEN (((0.33307420117164355, NULL, 'ê·²?}Bc', '-1184445402', 0.20262913197577492))<=(('1231605645', NULL, NULL, NULL, NULL))) THEN ((0.9290182293034321) BETWEEN ('13\s\r') AND ('8D.Eæ«v,')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '-530631695 2 sz=1662598694 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-2006223544'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1422679186 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL) BETWEEN ('552827399') AND (NULL)))OR(UNLIKELY(DISTINCT 0.7483437163835334))))OR((((1626793219))<=(('P_I*eoj	'))))))AND(x'05d5')))OR(((-1255320323) NOT BETWEEN (1978789730) AND ('408033995')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN x'' THEN 0.8177033686338305 ELSE NULL END) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((CASE WHEN -2.115025352E9 THEN 0X2e396791 ELSE -3.71732257E8 END)AND('ZE[7+A+*' COLLATE RTRIM)))OR('-283027304')))AND(json_array_length(0Xffffffffb092df1b))))OR(((x'') ISNULL))))OR(((0.5078606017811096) NOT NULL))))OR((((('â§G')OR(0Xffffffff8a995c23)))OR('L\+GO\r1''')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=7038627'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1875059400 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-76463918 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('?2?)[dd')-(x'f800')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'ba93') NOT NULL))+('272894131')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '-2022929578' THEN 1175027282 WHEN x'46df' THEN 0X21ddbeb7 WHEN x'' THEN 0.5823107010807589 ELSE x'' END)IS(((((((((x'')AND(NULL)))OR('~\rVGTïºfr\')))OR('z)H*TSèµ¡ì«§''')))AND(0.8080391332125689)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 sz=1146915834 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('-2022929578') BETWEEN (NULL) AND (0.4479333668440405)))OR(((0.33881950217550805)>>('Yéª+J\}[q')))))AND(CHAR(' y'))))OR(((0.3323637410196425) NOT NULL))))OR(CAST(NULL AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((SQLITE_COMPILEOPTION_GET('sL1&')) BETWEEN (CAST(NULL AS TEXT)) AND ((+ (0.11787414090595827)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.23951998291796217) BETWEEN (x'') AND (0.05942230490296607)))<<(((0.6003816852306632)|(2021102374)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-118123446 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ()) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 2 sz=-664081675 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=1228187937 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=613335351 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '530676640 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)/(x'11a2')))AND('-U' COLLATE NOCASE)))OR((('90533431') IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 sz=-1234186607 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1320846839 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-442445210 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((']A' COLLATE NOCASE) NOT BETWEEN ((('å¢eIï¼¯') BETWEEN (0.9276650120241829) AND (x''))) AND (('525559006' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')*(NULL)))-(CASE NULL  WHEN 0.5040180742266182 THEN NULL ELSE 0.434217775348698 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1421569220 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0.4712168530457681)OR(x'')))AND('a')))AND(QUOTE(0.3071403619003984))))AND(((((((((0.04393336740039233)AND(0X2e5f4320)))OR(x'')))OR('-1184445402')))AND(0X7860a06a)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x'c622'  WHEN -2094920106 THEN 3.18791258E8 WHEN NULL THEN x'' WHEN x'cf27' THEN NULL ELSE -1037090105 END COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM)<=((NULL IN (0xffffffffe9d7d0df, -642762029)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '-799848347'  WHEN '-1356301753' THEN NULL END) BETWEEN (TRIM(DISTINCT '840706541', 0.8485916779306046)) AND (((NULL)>>(0.3866243404912101)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1780302735 -131602254 sz=1694538339 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '555836366' COLLATE NOCASE THEN NULLIF('1406978238', '(!\r!') END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1449085591'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1356301753 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('LB') NOT BETWEEN (x'4db3') AND ('572221035'))) BETWEEN (((('w3', NULL, '0.13628780342667102')) BETWEEN ((x'', '-221845721', 0.8397493197585993)) AND ((x'', NULL, '*/')))) AND ((((('0.35898133112098995')OR(1.745604719E9)))AND(0.11966888495559613)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-767364604 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((-6.64081675E8) NOTNULL) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1833303389'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1612769060 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))<(((NULL) NOT BETWEEN ('?4') AND (0Xffffffffeb416cc7)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '0 sz=239598016'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=2004117508 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 -986471048 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=1216140701 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE 0.03885639391591833  WHEN x'' THEN NULL ELSE x'' END AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0Xfffffffff1e1d342 THEN -589704368 WHEN NULL THEN 1.955758603E9 WHEN -1.535771349E9 THEN 825346515 ELSE -332919592 END COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1509954111'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (NULL COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-1565215218 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((((((((NULL)OR(x'')))OR(NULL)))OR(NULL)))AND(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 431631269 THEN NULL ELSE 0.5457145533618799 END COLLATE RTRIM; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-1196996696'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 -221845721 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '983028279 sz=-1351856649 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '491591856' THEN ((0.4062875498975005)OR(x'')) ELSE '0.6977181212247198' COLLATE BINARY END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL COLLATE RTRIM IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '57628139'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=900967324'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1408639644 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1337019682 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 sz=1092576549 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE MAX(NULL, ((x'')%('g9'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 -153361326 sz=-2068362518 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('525559006' IN ('', '')))>>(NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((('')) BETWEEN (('>Jfî¹D')) AND ((0xffffffffad7f38c4))))AND((NULL IN ()))))AND(((((NULL)AND(x'dff8')))AND(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '533651308 2 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE NULL  WHEN NULL THEN '1733770047' ELSE 0xffffffffb86f2528 END AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CAST('-1535771349' AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (SQLITE_COMPILEOPTION_GET('-1184445402'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.03885639391591833)*(x'edf4'))  WHEN (('-1041797355')IS NOT(x'')) THEN '0.3979065745713857' WHEN (((x'', '-2068172725', NULL, 0.9422238345770875, '1971372171'))<((3.35829004E8, x'', NULL, 0.7674093635888181, 0X104408b3))) THEN ((x'') IS FALSE) WHEN (NOT (NULL)) THEN (((x'ee42')) NOT BETWEEN ((0.5900225685242261)) AND ((NULL))) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 4 sz=1194313676 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1747887256 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'ce8a66c8') BETWEEN (0.20274080971120478) AND (NULL)))>>(TYPEOF(DISTINCT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE NULL  WHEN '1668832763' THEN '1662598694' END AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '-1148646815 -2025146573 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 2142483509 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ABS(DISTINCT '|ãLX~clWu') THEN NULL COLLATE NOCASE END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(('p	' IN ()) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(('(lUl ''HzH' IN ())); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('') IS TRUE)  WHEN (0X3e4d783d IN ()) THEN CASE WHEN x'' THEN NULL WHEN '1444168867' THEN x'1ab3' WHEN '-1522205690' THEN NULL ELSE NULL END END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((((((((((((('(lUl ''HzH')OR(0.9102363172220884)))OR(x'3511')))OR(0xffffffffd2f6f111)))OR('Nu~p')))AND(x'')))OR('7T')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 1745604719 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULLIF(DISTINCT '0.0264835134229362', 0x445c8bfa))<=((0.37789407031942523 IN (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE HEX(IFNULL(DISTINCT 0.1815634984660075, '-1245839684')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL COLLATE BINARY  WHEN CAST(0X72951e9d AS INTEGER) THEN (((('')AND(NULL)))OR(NULL)) ELSE ((x'f07ecbe7') NOT BETWEEN (2.144796941E9) AND (NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('y')IS NOT(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=156754237 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN ('9W>') AND (0.32292158371624013)))=((-2092146819 IN (1481349372)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('DbZE&2}4')OR('')))AND(x'')))AND((('887727944') ISNULL))))AND(((NULL)=('-1708412268')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 753667359 sz=183264224 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((COALESCE(DISTINCT NULL, 0.9831244837705321, '', 0.8225968765983608))<=(CASE NULL  WHEN 1082584287 THEN NULL ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((((((((272894131)AND(0.4830254753635932)))OR(NULL)))OR(NULL)))OR('0.6141941402659226')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL, NULL, NULL)) NOT BETWEEN ((x'0c70', 0.7673039269559293, '-406527304')) AND ((x'', '1232144894', '')))) BETWEEN (((NULL)&(0.2730823459699905))) AND (((0x493e83cc) IS FALSE))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 sz=-113858496'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((',/')AND((- (0.5343074081661419)))))OR((+ (x'0723')))))AND('aj\nQ' COLLATE RTRIM)))OR(CASE WHEN NULL THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (LOWER(x'') IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((x'')>('aj\nq')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '-388186602 -1211289385 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-1421569220 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-1793644665 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-349971485'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1257005659 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TYPEOF(0xffffffffeb2a67c4)) NOT BETWEEN (IFNULL(DISTINCT 'Wî­', 1.662598694E9)) AND ('1275453636' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM('1850221906' COLLATE RTRIM); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=2019598442 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-497065649'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(((0xffffffffd7016941)<<(NULL)), (+ (x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.40990927505451424 COLLATE RTRIM AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=2142483509 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE MIN((- ('~%l[')), ((0xffffffffffffffff)-('1098658266')), ((9.93906944E8) NOTNULL), ABS(0X1ba6297f)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'7c0d'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=2043158753'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((x''))<(('baATlz+'))) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'8d8a' AS INTEGER)) BETWEEN ((- ('59553432'))) AND (('' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('l_') NOT BETWEEN (0.8868346524297539) AND (0Xffffffffb306d262)))||(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL COLLATE BINARY THEN (((NULL, NULL, NULL, NULL, NULL))<=(('272894131', NULL, 323406057, '780426840', 0.854659017169996))) END; -- 0ms;
UPDATE OR REPLACE vt1 SET c0=NULL WHERE vt1.c0; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 2 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (('nf!3ï«9_T') IS FALSE) COLLATE NOCASE COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=250079286 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((0xffffffffa16384bb, 0.6093059160004369, NULL))>((-655661301, '-707049594', x'5b14'))) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1974578045 -1184445402 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0Xffffffffa296bcb8)>>(-396060181))  WHEN ((NULL) BETWEEN (x'') AND (0.0579864496100051)) THEN (~ ('x^\')) WHEN (((('')AND(x'3e97')))OR('')) THEN (NULL IN ()) WHEN COALESCE(DISTINCT x'', NULL) THEN ((('å»5fbUt', NULL, 'Ç·'))>=((NULL, '0.2693065689412655', x''))) ELSE CASE WHEN '' THEN '-651125179' ELSE NULL END END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((x'') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-311226617 sz=-749419997 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1718241264 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1054766790 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0x175158a9) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'') ISNULL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1998569211'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=272894131 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL) NOT NULL))AND(((x'')>=(NULL)))))AND(CASE -1426134687  WHEN NULL THEN 'K[' ELSE x'' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'34be')%(NULL))) BETWEEN (CASE x''  WHEN NULL THEN x'23f2' ELSE '' END) AND ((('1082584287') NOT BETWEEN (x'') AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 sz=600812800 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-105204098 -1609485410'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-2069715237 sz=483253232 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-44985873 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-857678542 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('_ã¸¦&	ï¯')) NOT BETWEEN ((((('-589704368')) BETWEEN ((0.42478533638654803)) AND (('-1174939137'))))) AND ((0Xffffffffa475fd2b))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=793737682 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((x'')<(1507524399)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LTRIM(0Xffffffffbb2bfe41, '754160338') COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'8051')AND(9.00967324E8)))<=((((0.5744812068915883)) BETWEEN (('4v/\nOì~j')) AND ((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1241553687 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1681998321 sz=-184554634 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((3.35829004E8 COLLATE RTRIM) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=2021649254 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(ABS(NULL) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-432945142 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-777193327'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1102129089 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN x'' THEN '|O(%KoSZ' ELSE x'fe91' END IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=555836366 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((0Xffffffff9187b01a)AND(x'')))OR(NULL)), ((NULL) BETWEEN (x'afb0') AND ('-1793644665')), ((x'') NOTNULL)))<((CAST(NULL AS BLOB), ((x'') NOT NULL), (0.4597789267808994 IN ())))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (+ ('-1947260282'))  WHEN -1.994748575E9 THEN (NULL IN ()) WHEN (((((((('0.3323637410196425')AND('-1859771433')))AND(0.006522780326090882)))AND(1039128530)))OR(x'')) THEN ((0.46697626949704807)>(0.3323637410196425)) WHEN -1.079060113E9 THEN CHAR(NULL) WHEN CAST(2.144796941E9 AS INTEGER) THEN (((NULL, 0.8156399388775015, NULL)) BETWEEN (('0.6797747195197914', NULL, '600812800')) AND ((x'', 0.3227054594119162, x'b038'))) WHEN ((0.9946132634378635)IS NOT(NULL)) THEN (((NULL))<=((NULL))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (x''))) NOT BETWEEN (x'0cfb') AND (((((x'')OR(NULL)))AND(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=879857329 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN 0.6302013831502462 ELSE 0.5518830534311753 END) NOTNULL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'a871' COLLATE RTRIM) NOT BETWEEN ((((NULL)) BETWEEN ((0.24532103926980808)) AND (('0.5768936049436627')))) AND (1464059583)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('pL')&(2142483509))) BETWEEN (('vE\n' IN ())) AND (TYPEOF(DISTINCT -1241561901))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-922147312 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '237552445 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=585093436 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x''))=((0.3202880700647679))))|(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((((((x'')OR('EM')))AND(0.7391238051925132)))) AND (((((7.8042684E8, NULL, '1745604719')) BETWEEN ((NULL, 0.9507738389277485, -1187484687)) AND (('v~5', NULL, NULL)))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT CAST(NULL AS REAL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL))>(('è¬')))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-358362369 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 0 sz=1082584287 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x''))<>((x''))))*((((x'4732', x'', ')&d,'))<>((NULL, 0x5743c6bf, NULL))))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((((NULL)AND('-496091206')))OR(NULL)))OR(x'')))OR(((x'99de11b6')<<(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN -1.793644665E9 THEN 0.6083961010396022 END)=((~ ('1092576549')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1079060113 sz=1430669294 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 sz=825346515'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.21386055883778077; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((568180407, 0xffffffff87bafc61, NULL))<>((NULL, 0Xffffffffb092df1b, 0.3827727806425819)))  WHEN CASE WHEN NULL THEN '-1976202452' END THEN ((0.05274071903802258) NOT BETWEEN (x'') AND (x'9ca753ca')) WHEN (((('')AND('-1708412268')))OR('1805057559')) THEN (((((((('-1325992301')OR(-1708412268)))AND('2006153123')))OR(NULL)))OR(0.2487854257101263)) WHEN ('1673053569' IN ()) THEN CAST('^.P&ï' AS TEXT) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((NULL)AND('')))OR(0.7254107874461977)) THEN 0.3394259642908002 END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-2068194134'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=262613378 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' COLLATE NOCASE IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 sz=840706541 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1522834311 sz=190499588 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-582395168' COLLATE RTRIM) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0.6212876828080952 COLLATE NOCASE)OR(((0x1c21a76b)>=(0.21871110330989973)))))OR(CAST(0.8479647018004121 AS TEXT))))OR(((x'')==(NULL)))))AND((('240297513')|(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-858585641 sz=1662103326 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(-1.708412268E9 AS NUMERIC)) BETWEEN ('2085746318') AND (((x'') ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL COLLATE RTRIM IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('' AS NUMERIC))!=(((NULL) IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE '0'  WHEN NULL THEN NULL ELSE NULL END AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=182291297 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '-653523017 sz=681738380 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=-1349070817 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1822868183 1145770718 -1297105185 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((((((((x'')OR(NULL)))OR('1481349372')))OR((('-1421569220')%(x'')))))OR('L*ë')))AND(IFNULL(0.7504651107318133, x''))))AND((('')%('-1344564508')))))AND('-2017921746')))OR(LIKELIHOOD(DISTINCT x'', 0.9335514842312967))))AND(('235204438' IN ()))))AND(((NULL)>(-0.0)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1258407168 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(((('-1356301753')) BETWEEN ((NULL)) AND (('96876695'))), (NOT ('&ä··'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ()))+(((((((((0.28930437684461996)AND(NULL)))AND(NULL)))AND('623008604')))AND(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=87746832'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=917077952 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-381783510 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 0 sz=489032480 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=146526567 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=2040773828 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-13620523 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '%9prY\r'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL) BETWEEN ('FAHi') AND ('|0')))OR(((NULL) IS TRUE))))AND(NULL COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1647826887 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=2123869567 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '4 sz=754765977 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('?') NOT BETWEEN ('-934677551') AND ('123809360')))LIKE((('1439237260') ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((1087112534)OR(1849020709))))!=(((('441181979')OR(x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=261397908 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-34420710'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1082584287')) NOT BETWEEN ((CASE 'cX/*xp'  WHEN '' THEN 0.9712863793938459 ELSE x'' END)) AND ((CASE WHEN NULL THEN 'm>' ELSE '337433161' END))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-2002353089 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1232989380 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1522205690 sz=-390896598 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('hTì')AND((((('')AND(-1.184445402E9)))AND('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) ISNULL))IS(((-619358331) NOT BETWEEN (NULL) AND (x'')))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')GLOB(NULL))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'9ddd') IS FALSE)) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE x''  WHEN '\nI' THEN '849726183' WHEN NULL THEN x'' WHEN NULL THEN 0.16856805136621544 END, ((x'fe9d') NOT BETWEEN (x'') AND (x'')), CAST(0.5727970571323129 AS INTEGER)))<>(((+ (0.357556454578434)), (((1530749970))=((x''))), (NOT (NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=249915587 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)AND(1.922375325E9)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1421441199 sz=-991668205 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN 0xffffffffea17c9ef THEN 0.2782514614614533 END)GLOB((~ (0.703842214722741)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-34580161 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0xffffffffef5f2fec; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1522205690 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '\/'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-1337019682 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1395085034'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((2099482773)AND(0X35b3ab9c)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7388552123711318) NOTNULL))>=('+y')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('930573877' IN ()))%((~ (0Xffffffffa4822b67)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1696798602 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '961923214 sz=1405580769'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'bff3')) NOT BETWEEN ((NULL)) AND ((COALESCE(NULL, '\nwm')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=1442826623 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1093228534 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 2 sz=137169555'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xffffffffeb793bb8)+(0.03661702522819499))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.9700264759207895))<((NULL))))OR(-1.16205271E9)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((x'6592')) NOT BETWEEN ((1.694538339E9)) AND ((x''))) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1.595759855E9)=(0Xffffffff848b453e))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 'æ¯H'  WHEN x'8041' THEN x'' ELSE '{q' END)GLOB(((x'c1b2')+(x'2ddd')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1263982010 sz=101550866 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((x'0a6f', 1818712696, 'LM0F''')) BETWEEN ((NULL, 0.932329132269371, x'')) AND ((NULL, 0.836011459204083, '-41983471'))) THEN (('') BETWEEN ('') AND ('533601716')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.9162857217384028) NOTNULL) THEN (+ ('-1878629003')) ELSE CASE WHEN -630609196 THEN 0.5085615104550678 ELSE x'' END END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0Xffffffffc1f70766)>=(x'cdae')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('868068131') NOT NULL)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=335829004 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-2022929578'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1064525924 2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 -2679093 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((9.0533431E7) IS FALSE)) NOT BETWEEN (((((((((((((0x7fd7010d)OR(x'')))AND('hT)')))OR(x'')))AND(x'8937')))OR('ï¼¯HO/')))OR(x'd07f'))) AND (((NULL)%(0.42361673312548465)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-1987566138'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1772003662 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(UPPER(DISTINCT 0.09739480062809691) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE rtreenode(((NULL) NOTNULL), ((NULL) BETWEEN (x'') AND (x'8386'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((0xe01dcfc) IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE MAX((~ ('g6d!')), 0.9297611151717431); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '1545408562'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((+ ('0.02660434439048276')), (+ (0X1fa17ba0)), PRINTF('-2115025352', x'502b', 0X5743c6bf, 'AaL|2{49S', -1081518724)))<((((((0.28799352070390316)OR(x'443b')))OR(0xffffffffc166d117)), CHAR(x'10ba'), (~ (0.7836848126018563))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN '' THEN 0x3308e0f9 ELSE '' END) NOT BETWEEN ('1578768599') AND ((('Ce')>>(0.2637776906174947)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((COALESCE(NULL, 0.18684843474587032)) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(0.7684768514800495 AS BLOB)  WHEN (NULL IN ()) THEN CASE WHEN x'5cb3' THEN x'' WHEN '1922375325' THEN NULL WHEN NULL THEN NULL ELSE '-2111811024' END WHEN (~ (x'93a6')) THEN CASE 0.5934504880357258  WHEN NULL THEN x'' END WHEN x'9a3e' THEN CAST(NULL AS BLOB) ELSE ((0.25241843386411966) NOT BETWEEN (0.9392508679288968) AND (NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (0.9814629701527385)))/(CAST(0X343ff532 AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=-1441552728'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 137169555 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1694538339 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-185101989 446991430 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1325144012 sz=-1812835150 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (UNLIKELY(DISTINCT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM('-1184445402')) IS TRUE); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '0 1668980425 sz=1270325744 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-2115025352' AS REAL)) BETWEEN (json_array(x'', NULL)) AND (CAST(NULL AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1843892946 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=2129060524'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 -1616499558 sz=600812800 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'd69f')||(0Xffffffffa3c6b79c))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1332551909 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-780970958 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '426422748'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-371732257 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=312877973 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN 0.8096554286839205 THEN x'' END THEN (- (NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-9412232 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=849726183 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('857989190')) BETWEEN ((((('-2111811024')) NOT BETWEEN ((1211576659)) AND ((NULL))))) AND ((CASE NULL  WHEN '*X3-' THEN '1578544127' ELSE 0.5152098516278395 END))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=836624253 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=724972925 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=1482554100 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 0 sz=1232144894'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '729529583'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN ('-aWw') AND (0.28267621225751505))) NOT BETWEEN ((((('T')OR(0.31840717392112716)))AND(NULL))) AND ((('780426840')AND('1507524399')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((('2144796941')AND('?')))OR(0Xa19a3c1))  WHEN ((0Xffffffffab44933c) BETWEEN (0x2959356a) AND ('2050827924')) THEN CASE 0.14777273189406637  WHEN 0.3893025579590077 THEN 0.8112546516626037 END ELSE (~ ('-1181660296')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((((('æ|ç²*rHU]a')) NOT BETWEEN (('')) AND ((0.5711372162018125))))) AND (((~ (0xffffffffb5fcf6a7))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=525559006 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1373633516 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-530631695 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '-221845721 sz=1223541561 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.5812536577858493)) NOT BETWEEN ((0.1586671917231972)) AND ((-9223372036854775808)))) NOT BETWEEN (CASE WHEN NULL THEN '555836366' WHEN 0.38830386114535953 THEN NULL WHEN 0Xffffffffb1183f42 THEN 0.9069582901604635 ELSE x'' END) AND (CAST(0.1711599020343726 AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=281022531 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('568180407') IS FALSE) THEN NULL END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-862574913 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'9e28' COLLATE RTRIM AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ()) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1089563817 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=199744900 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '0 sz=-221845721 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((NULL)OR(-1266871332)))AND(x'')))AND(0Xffffffffcba52a40)))OR(0.8860957745501226)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=487333731 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=2103484360 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-404567141 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (x'367b') AND (NULL))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0x585dfaf4; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1040948821 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '327233342 646747206 sz=1216140701 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((('0.9659131199729348')OR('-764761092')))OR(-1.384171324E9))  WHEN (NULL IN ()) THEN 0.9351325924766233 END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('p9#VMeYv_')AND('2021102374')))AND(NULL)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 sz=-1994748575'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-943736396 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('*#fb9xdBÇ¨')+('')) AS NUMERIC); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NULL IN (-1663068624)) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1673053569 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((((((((((NULL)OR(x'a3323e62')))AND('_Z')))AND(0.8927112335747649)))AND(x'fd39')))AND(NULL)))OR(-1.604547005E9)) THEN ((((((((NULL)OR(NULL)))AND(0.8361639243294281)))AND('-991259284')))AND(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-223456384'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=67943113 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-219109754 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '2 1922375325 sz=-2105779909'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 sz=1136625457 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1146915834 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((0.22138328607390445)) BETWEEN ((NULL)) AND ((1.064525924E9))) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((HEX(DISTINCT -1.356301753E9))<(((((x'')AND(1.955758603E9)))OR(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=2002391929 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)LIKE(0.11200778062434502))) BETWEEN ((((x'')) BETWEEN ((x'9b59')) AND (('j5')))) AND ((0.7182524751164259 IN (0.43559492821033996)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((((0.3119176101483525)) BETWEEN ((-1.351856649E9)) AND ((0.977684860509965))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1327715080 sz=535677502'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1337019682'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1146915834 0 sz=-493790333'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-283027304 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 0 sz=1745604719 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1454212440 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1153617983 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_array_length(-1268199138)) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '-1356301753 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.07388001297082314)) BETWEEN ((('' IN ()))) AND ((((x'af49') BETWEEN ('-1384171324') AND (NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1343830841 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE WHEN '&*#-' THEN '?4' END))>((((NULL)/('WRî§.'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE JULIANDAY((((((((('FALSE')OR(x'')))AND(NULL)))OR(x'')))OR('soy)J\')), ((0.484249790345485) IS FALSE), ((0.5231995709105073)AND(0.5302867539563981))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '1452506505 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1922375325 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=318791258'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS NUMERIC))IS(CASE x''  WHEN 0Xffffffffa9aaa94d THEN 'ã¸¦~' WHEN '-104831992' THEN NULL WHEN '0.33881950217550805' THEN NULL ELSE '1481349372' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=879857329 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 sz=1246324934'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1599426259 sz=-1 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '-1689812893 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.24324950159033032) NOTNULL) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('í 5Qg'))>=((-2098541760))))IS(CAST('-1545436116' AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-670328469 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 'hêªN\nsN6x' COLLATE RTRIM  WHEN LTRIM(2125871418, 2019598442) THEN 0.08355874095791893 END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=2026685138 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '890565437 0 sz=392427791 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 461330558 1522834311 sz=1099257965 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (0.9269400940462654)))<(MAX(-1604547005, x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-26351447'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1588426853'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '-1458522760 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_insert(0X558aa023, x'', NULL)) BETWEEN (CASE WHEN NULL THEN '-1851165979' END) AND ((~ (0xfffffffff3f33cf7)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((x'b827')OR('M[6S%O')))AND(1.064525924E9)))OR((((((((((((('')OR('-1994748575')))AND('1319833593')))OR(x'')))OR(x'')))AND(NULL)))AND('0.549496552710489')))))AND(CAST('' AS NUMERIC))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((json_array_length('312877973', 0.8713183866380813), ((x'')OR(2059548918)), (~ (NULL)), CASE NULL  WHEN '' THEN '-2111811024' WHEN '0.9978157671006695' THEN 1.7976931348623157E308 WHEN '1416700989' THEN -1421569220 WHEN '-9223372036854775808' THEN 528186468 WHEN 1955758603 THEN x'' END, (((NULL)) BETWEEN ((x'')) AND (('900967324')))))>((CASE WHEN x'' THEN x'cd6e' ELSE '568180407' END, CASE WHEN 0.4064744520287481 THEN NULL ELSE '576569197' END, -1.16205271E9, NULL COLLATE BINARY, json_array_length('-1601527570')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-2111811024'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (+ (x'18ec'))  WHEN (('Z4\n 4?*') NOT NULL) THEN (('1958439191')<<('1146915834')) WHEN ((0.24490650176122042) NOT BETWEEN ('(lUl ''HzH') AND (NULL)) THEN 0.456357944617487 COLLATE RTRIM WHEN (NOT (0.1101296170923155)) THEN (((('-0.0')AND(0.8778964695796044)))OR(0.7582951306863291)) ELSE (NOT ('T6')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-176332876 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.7663273829133603 COLLATE RTRIM IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=-1727505376 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1692465954 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-294370977 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=1744653417 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CAST('Y_y_' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((-497065649)OR('\r.ic')))OR('1216140701')))LIKE(x'819e' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1310693260 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(CASE 0.4064744520287481  WHEN '!txY' THEN 0x6585dc33 WHEN '600812800' THEN NULL WHEN ''']|tL{ê®	' THEN '-429372013' ELSE NULL END); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('[ZH?]#g')=(NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1148673543 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1339288339 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '548924015 4 sz=-1167767533 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1950052814 sz=-952902548 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1633795848 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL) BETWEEN ('s(r') AND (2.019598442E9)) THEN x'' END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.7770257464214191; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 5.48924015E8 COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=-1604547005'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-2133135676 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1448433331 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-732528922 sz=-9223372036854775808'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=1064525924 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('WD')IS NOT(0.8200018496369228))))<=(((5.48924015E8 IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=134055318 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '2 0 sz=1146915834 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '856219897 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1455798212'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=312877973 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('825346515') ISNULL))OR(UPPER('146526567'))))OR(((((x'2875')AND(-1145960128)))AND(0.38806278381861037)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('1e500') NOT BETWEEN ('-1287139692') AND (x'')) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)-(''))) NOT NULL); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-664081675 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1460354817'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-497065649') ISNULL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-2115025352 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((json_quote('1522834311'))AND((((('9v+oï´¾\nA')OR(-1958918682)))AND('PW')))))OR(((x'5a3d')LIKE(0.6916490801020552)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1356301753')) NOT BETWEEN ((CAST(0.3312056346047597 AS BLOB))) AND (((('1507524399') IS TRUE)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))<=(((NULL)>=(-5.30631695E8)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 856219897 sz=955259869'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=576569197'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-199496167 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1584212563'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.09167381529046015 COLLATE BINARY) BETWEEN (CAST(NULL AS NUMERIC)) AND (UPPER('-2022929578'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '312877973'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1822940911 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=991309203 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0X6c6a4308 IN ('0.679466746651072')))AND(CASE WHEN 0.03587345245744977 THEN x'' ELSE '0.2726291618627643' END)))OR(TRIM(DISTINCT '0.8927112335747649', 0.08203615261808528))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((NULL)) NOT BETWEEN ((NULL)) AND ((0xffffffffbfaed96f))) AS NUMERIC); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)<<(x''))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1018587979 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-750776875 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-376830929'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.4049372976133554)<(NULL)))<>(CAST('-313479545' AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=991395569 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-2047883448 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (0.9361590865668795))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'')LIKE('')) THEN ((x'')-(0.24216863389026688)) ELSE ((0.5235941268136328) BETWEEN (NULL) AND (x'860f9cdd')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 sz=1092576549 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=1620552011 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN RTRIM(0.8482935654022522) THEN 0X7580c08b COLLATE RTRIM ELSE (('-857678542') NOT BETWEEN ('900967324') AND (1507762377)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('871507889')%('k\â')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=758828629 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((NULL) NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=403217920 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR(0.24247965347373845)))<((+ (x'')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=436609355 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((-371732257)>=(0.374671546592658)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1542551836 0 sz=-204394873 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (IFNULL('736067605', 's|') IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-164121874 sz=1922375325 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (0.4713828478011839)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1248100702'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=299778908 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1814324508 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELY(x'')) BETWEEN (DATE(x'2bbc', 0xffffffffaf287a47, 0.6507652227972566, '\w*é¹>l', 0.23123245048583996)) AND (0.12160272046211906)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-1609485410 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1130677986 -1192711753 sz=1315337916 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0X64ce774a IN ()) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-764216094 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=-9223372036854775808 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'ç«Oà³µyrTUY'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 -283027304'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(NULL AS REAL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '525559006 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)IS NOT(0.22944177818642464)))%('')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0x7f31cf7b)>=(NULL))))<(((('0.926619503128454')<<(x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-321850864'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=692389526 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TYPEOF('láª©Gç®441T567:2737200587837212067:1534T1249:1389-966T-1547008180646859711:|')) BETWEEN (json_valid(0.5518830534311753)) AND (CASE '-777193327'  WHEN NULL THEN NULL ELSE NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_insert('1205187810', x'', x'')) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-589704368 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('w1N') NOT BETWEEN ('') AND (',W')) THEN CAST(NULL AS INTEGER) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=98640532 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((highlight(-392515342, x'', NULL, 817446657))-(((0X117a1be)LIKE('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1189912681'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-1332551909 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1405420424 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((NOT (0.459765965693266)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 1323266115 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (~ ('F\r')) THEN (+ ('~AWK{')) ELSE (('1248715693') BETWEEN (NULL) AND ('-1448433331')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, x'', 0.8093181862502228)) BETWEEN (((('Oå§') ISNULL), CAST(NULL AS INTEGER), (0.15576014305942665 IN (x'', '-859421119')))) AND ((CAST('1669005973' AS INTEGER), 9.00967324E8, (('[?')GLOB(0.22321135412081583))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST(x'' AS TEXT))OR(((x'') BETWEEN (x'd314') AND (-1994748575)))))OR((+ ('137169555')))))AND(('0.5768936049436627' IN (x'')))))AND(((0.1586671917231972)==(x'37a4')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.3384853377985777)<=(-1.18123446E8)))OR(TYPEOF(2.002391929E9))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1632502367 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=548924015 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1305957459 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('-1238736862' AS REAL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7713847109949152)||(x''))) BETWEEN (((-1587313477)<=('2056422957'))) AND (((NULL)!=('1013960067')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 -678854375 sz=-1130509799'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.02052039136798145; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=852488970 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.6033651689463124)=(0.9738672814568938)))OR(LIKELIHOOD(x'22a5', 0.2705628558177303))))OR(('1955758603' IN ()))))OR(0X19fa0636)))OR(((((0.27161127353007253)AND('-405349409')))AND(x'62d1')))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((0.37369135624444283 IN ()) IN ((('2i{o#äµo''')>('994958225')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 1481349372 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1359973068'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '(!\r!' THEN NULL ELSE NULL END) NOT BETWEEN ((('1227694213') ISNULL)) AND (((0x401e2ac1)<(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('312877973' COLLATE BINARY)GLOB(x'')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (0.008940379359826722 IN ()) THEN -1.584212563E9 COLLATE BINARY END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1584212563'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM('-1140473062'))<(json_remove(1840392412, -1.337019682E9))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((('6~')) BETWEEN ((NULL)) AND ((892175583))) THEN CAST('-221845721' AS REAL) ELSE ((x'')<(0Xffffffffe9d7d0df)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((0.9450628491903909) BETWEEN ('d') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-1248809640 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=555836366 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 1922375325'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1527852321 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1896228398'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-36568788 sz=-1356301753'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '0 sz=-1421462923'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('opn' COLLATE RTRIM AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1384171324 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.9721508652541728 AS INTEGER)) NOT BETWEEN (((((0.8937137219984559)OR(NULL)))OR(NULL))) AND (((((x'')OR('V')))AND('-589704368')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 8ms;
DELETE FROM sqlite_stat1 WHERE (((- ('1971372171'))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=10990110 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=555836366 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.019042327275179405 COLLATE RTRIM)>>(((0.15947660031108424)>>(x'b22d')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-173328135'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '' COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('' IN ()) IN (((x'563e') NOT BETWEEN ('upkSWtfg,') AND ('825346515')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '-198961889 sz=144581832 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.48897362687336376)) BETWEEN (((NOT ('-557129839')))) AND (('318791258'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-1190779781 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LOWER(DISTINCT NULL)) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1082584287 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.5768936049436627 AS REAL)) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NULL IN ()) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=1522834311 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=34016559 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((-2.111811024E9))==((''))))<=((- (0.07803669769455568)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (TRIM(NULL, NULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE 'y%?+^1'  WHEN NULL THEN 0.504975510513661 WHEN 0x255ab1d8 THEN x'' WHEN 0.019042327275179405 THEN -4.4244521E8 ELSE x'01a0' END))<((NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1277507737 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1988099493 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-372177617 2048199804 sz=-954475717 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1745604719')>(NULL)))<>(CAST('å¹èO[6' AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1228833740'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-777193327 11464822 sz=-783851309'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((((('nZ')AND(x'')))AND(0.6255187106624668)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')) NOT BETWEEN ((UPPER(0x78f91f3d))) AND ((json_insert(5.25559006E8, 0.42936242290763305, x'', NULL, x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((~ (0.9689408544213646)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1723727798 sz=65220724 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '9223372036854775807 sz=-664081675 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 -1048041708 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1808194937; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-895641881 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-790071463 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=258749347'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'd998')*(''))) NOT BETWEEN ((((('1697177078')AND(6.008128E8)))OR(0.5788179777650839))) AND (json_object(NULL, x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('I7[\r')AND(((NULL)<(x'04e8')))))AND(((((x'')AND(0xffffffffd50bb00c)))AND(0xffffffffaf287a47)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=993906944 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=355994807 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '-549606150 sz=879857329'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1407798816 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1025043273 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1711164509')GLOB(9.00967324E8)))GLOB(((x'')AND(0.41781699386696636)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 sz=-156257937 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE WHEN '<>' THEN -1792692776 WHEN NULL THEN 0.9825732418602302 WHEN 0.5022646402596945 THEN 0X6d66ca4a END  WHEN UPPER(NULL) THEN x'' WHEN CASE NULL  WHEN 'ã½+Oâ­' THEN '-665037754' WHEN x'bd22' THEN NULL WHEN 2072296005 THEN x'' ELSE 5.25559006E8 END THEN ((0.5601835308411843)>=(NULL)) WHEN ((('-1545436116')) BETWEEN ((NULL)) AND ((0.7025203164547378))) THEN CAST(NULL AS TEXT) ELSE NULLIF('', '%Oç£ªvd') END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1074097209 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('X5') IS TRUE) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-113858496 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '0 sz=1976614242 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '	'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '-722425900 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('0thv)T?')) NOT BETWEEN ((((NULL)IS NOT('1955758603')))) AND ((CASE WHEN '' THEN 704927285 END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1604547005 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1694538339 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.45955880122412873 COLLATE RTRIM)|((- (0.45320549714524716)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE MAX('|O', x'', '-530631695', '1609621121', NULL, NULL) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1793644665; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '272894131 0 sz=1387517237 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '1595759855 sz=-2022929578 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-861392127'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '355994807 0 sz=545134284 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=-665037754 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE -1522205690  WHEN x'a732' THEN '3AUqq' WHEN 1634025563 THEN NULL WHEN 0.6427579581995391 THEN x'' ELSE 0.7702783245342446 END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '2 sz=-530631695'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5588159414403515)+(NULL)))>>(((x'') BETWEEN (2058261989) AND (x'002b')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('q]') NOT BETWEEN (0.1866577545578323) AND (0.1705165475494017)))IS(((NULL)<(0X30e1a51d)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=1068038056 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '840289209 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-283027304 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1814324508'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((RTRIM(''))&(((NULL) BETWEEN ('-415496330') AND ('éM')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=780426840 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (0.5332204316352942))) BETWEEN ('146526567') AND (NULL COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-497065649 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (1.216140701E9 IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('?{6y<>' COLLATE RTRIM IN ((((''))==(('(&&Nâ¦j'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-243259685 sz=-1650210536 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('511861348')) BETWEEN ((-1.545436116E9)) AND (('533651308'))))<((+ (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1668128237 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((0Xffffffffcf9cc009) NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-14242619 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 'æ¼L\rZï¿¿Ps' COLLATE BINARY THEN CASE NULL  WHEN '-1030023600' THEN 0.8301199322202505 WHEN 'å¬Zckuï¢	' THEN x'' WHEN NULL THEN NULL WHEN '0.2941531958931567' THEN x'' WHEN 0xffffffff8dd4af2b THEN '576569197' ELSE NULL END WHEN ((NULL)LIKE(x'a4a0')) THEN LIKELY('826022552') WHEN ((0.726188228056935) BETWEEN (0.16975510003257077) AND (NULL)) THEN 1595759855 ELSE (x'' IN (x'bcc6')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(DISTINCT 0.876932526111732, x'2e6c')) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=2021102374 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=2019598442 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 0 sz=24252866'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1357791349 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 sz=1267587534'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1708412268'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0.049406939120631876'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-744837448 sz=-419691467 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (('-1620468715')AND(0.5711815683277018)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0.6656394948553384 THEN '1507524399' END COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOTNULL))>(((((((((NULL)AND('-1168080784')))OR(0.3788558412026898)))AND('568180407')))OR(0.4064744520287481)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.013608143617656165 COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((('ayg/A')) BETWEEN (('-1337019682')) AND ((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '1232144894 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1082584287 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN 0X5892aaea THEN 0.7469930454884177 END) NOT BETWEEN (TOTAL_CHANGES()) AND (((x'') BETWEEN ('') AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=840706541 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((0xffffffff9a2bb294) NOT BETWEEN (0.4130618002775649) AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN 1.481349372E9 THEN NULL WHEN x'' THEN '8<V\r' WHEN 0.4064744520287481 THEN x'a02e' ELSE '.s' END AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '1312435143 830514871 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1169742043 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=944156651 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('879857329') BETWEEN (0.43896595326585675) AND (NULL)), ((0.2676129121314371) BETWEEN ('-1789526516') AND (NULL)), (('F(2QVrn	m')+(NULL))))<((((x'') BETWEEN (NULL) AND (x'dd0d')), CASE WHEN NULL THEN x'' ELSE 0.04983488761267507 END, ((x'1ad3') NOT NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.9332104190101832)OR(90533431)))OR(0.16339388386407905 COLLATE NOCASE)))OR((NULL IN (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1082584287 sz=1492915366'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '-2023964095 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR(((NULL) BETWEEN ('>vm<') AND (0.02797028101693322)))))OR(CAST('-1607209203' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((((0.452542645629744)AND(' &G')))AND('-1356301753')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-1609485410 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1673053569'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((0.9702552913610744)AND(-1089662337)))AND(NULL)))AND(0xffffffffab44933c)))AND('1595759855'))))==((CAST(1581016869 AS BLOB)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=164440394 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1746097520 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1110933470 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1033907101 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '852027097 2055476141 sz=-1039518396'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-2058695226'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=2142483509 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-497065649 0 sz=1154412200 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=312877973'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('j-e') NOT BETWEEN ('å©Y') AND ('899116184')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (('7b' COLLATE RTRIM)IS NOT((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=850571476 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE ''  WHEN 0.9873126737201653 THEN NULL WHEN '1673053569' THEN '-1535771349' WHEN 0.021082482549074077 THEN NULL ELSE '146526567' END, LIKELY(0.4109060195807235), (((NULL)) BETWEEN ((NULL)) AND (('?V\n')))))<=((CASE WHEN '856219897' THEN x'8893' ELSE 1.416700989E9 END, (x'344a' IN ()), (((NULL)) BETWEEN ((1.662598694E9)) AND ((-1.793644665E9)))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)>=(0.6020728421060232)) IN ('0.67004099617619' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CAST(NULL AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '96641791'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '0 sz=-205906086 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '482981181 1971372171 sz=-221845721 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-405914231 0 sz=-1535771349 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS BLOB)) BETWEEN (NULL) AND (CAST(-1.859771433E9 AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=85512065 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1922375325 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-463318532 -1168768195 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1913887886' COLLATE RTRIM)>((('')>>(0X7dd4ae66)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1617860040 sz=107266184 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-498243008 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1351856649 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.7480170838510549 AS REAL))OR((+ (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '-1255110311 -152462141 sz=2133462554 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '807978352 sz=-113858496 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=623008604 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') BETWEEN ('-1307718822') AND (0.6141941402659226))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((('1267587534')) NOT BETWEEN ((0.02964001376773262)) AND (('z1'))))AND(x'44cc' COLLATE BINARY)))AND(TRIM(DISTINCT x'', NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((1.955758603E9))==((x''))))!=((('1481349372')!=(x'c70c')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1880942864 2 sz=-512433464 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1749358484 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('1662598694')<=(478771038))))<((0.10563930002789812))); -- 0ms;
ALTER TABLE t0 ADD COLUMN c34 INT; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('59553432'), (x''), (0.3981687316748367); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (NULL), (x''), ('871415862'); -- 0ms;
CREATE INDEX IF NOT EXISTS i41 ON t0(((c1 COLLATE RTRIM)&(c34)) DESC,CASE WHEN c0 THEN c2 ELSE c1 END COLLATE RTRIM COLLATE RTRIM,((c0) NOT BETWEEN ((('1575015759') IS TRUE)) AND ((c34 IN (c2)))),((((c1) NOTNULL))||(((c1)%(c2)))) COLLATE BINARY) WHERE ((((((c2)OR(c2)))AND(c0)))LIKE((~ (c1)))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE t0 SET (c34)=(0.5315696823062788) WHERE (((t0.c34)) BETWEEN ((t0.c1)) AND ((UNLIKELY(t0.c0)))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL, c1=x'' WHERE (NOT (CASE t0.c34  WHEN 1654336128 THEN t0.c1 ELSE t0.c0 END)); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -1421569220);\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 8); -- 1ms;
INSERT OR IGNORE INTO vt1 VALUES ('-1337019682'); -- 0ms;
REINDEX i41; -- 0ms;
UPDATE OR ROLLBACK vt1 SET c0=x'f763', c0=x'dcedd347' WHERE ((((((vt1.c0)*(vt1.c0)))AND(-1.99496167E8)))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'f595b0bf' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 END)); -- 0ms;
INSERT OR ABORT INTO vt1(c0) VALUES ('ì¹a'), (NULL), (''); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 13); -- 0ms;
REINDEX  t0; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(-2.115025352E9) WHERE CHAR(((x'') NOTNULL), CAST(t0.c2 AS BLOB), (+ (t0.c34))); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('1955758603'); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (''); -- 0ms;
INSERT OR IGNORE INTO t0(c2, c1) VALUES ('>', '-1592253677'); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (0.967515071839466), (NULL), ('-1876447632'); -- 0ms;
INSERT OR ABORT INTO vt1 VALUES (x'0c8a'), (((((-1355354602) IS TRUE))LIKE(((NULL) NOT BETWEEN (NULL) AND (0.33693846995013166))))), (NULL); -- 0ms;
REINDEX BINARY; -- 0ms;
DELETE FROM t0 WHERE ((CAST(t0.c1 AS BLOB)) NOT BETWEEN (((t0.c2) NOT BETWEEN (t0.c34) AND (t0.c0))) AND ((((t0.c34))<((t0.c2))))); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
UPDATE OR FAIL vt1 SET (c0)=(x'') WHERE IFNULL(DISTINCT LIKELIHOOD(DISTINCT vt1.c0, 0.15264778893037023), CASE ''  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
PRAGMA journal_size_limit = 0; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES ('LO'), ('-1211285345'), (NULL); -- 0ms;
UPDATE OR ABORT t0 SET c0='592566169'; -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.3322500735042866; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0, c2, c1) VALUES (NULL, NULL, 0.7000347976491876); -- 0ms;
VACUUM temp; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
UPDATE vt1 SET (c0)=('æ&rvDLd'); -- 0ms;
END TRANSACTION; -- 0ms;
REINDEX RTRIM; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 0ms;
INSERT OR IGNORE INTO t0(c1) VALUES ('0.4209533175073671'); -- 0ms;
UPDATE vt1 SET (c0, c0)=(x'edbb', x'') WHERE (((((0.9075384843469194, vt1.c0, NULL))>((vt1.c0, vt1.c0, vt1.c0)))) ISNULL); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 5); -- 1ms;
INSERT OR REPLACE INTO vt1(c0) VALUES (0.7525226465583036); -- 0ms;
REINDEX BINARY; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.defer_foreign_keys; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('1595759855'), (NULL), (NULL); -- 0ms;
UPDATE OR IGNORE vt1 SET c0='900967324', c0='ê·²?}Bc'; -- 0ms;
UPDATE OR IGNORE t0 SET (c34)=('.Dj#DQ^<,'); -- 0ms;
UPDATE OR IGNORE rt0 SET c2='0.9246213332224421', c0=2061889432; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('0pll'); -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '12043'); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2) VALUES (NULL, x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.optimize; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 4); -- 0ms;
UPDATE OR ABORT t0 SET (c1, c34)=('|^\nuS795-', '1641420680'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (0.6683091052277814, 1670195607, x'd0d1'); -- 0ms;
PRAGMA main.threads = 542817046630808520; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0, c0, c0)=(x'', ',ab\rì èu\', NULL) WHERE ((QUOTE(vt1.c0)) NOTNULL); -- 1ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
ANALYZE; -- 0ms;
VACUUM main; -- 1ms;
PRAGMA main.foreign_keys; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO t0(c2, c0, c1) VALUES (x'b203', NULL, NULL); -- 0ms;
CREATE INDEX IF NOT EXISTS i54 ON t0((((((c0))>((c2))))>=(((c34)||(c0)))) COLLATE NOCASE ASC,(((c34)==(c0)) IN (CAST(c0 AS NUMERIC), 0.28190734011426877)) COLLATE BINARY,((CAST(c0 AS INTEGER)) NOT BETWEEN ((((c2)) BETWEEN ((c34)) AND ((c0)))) AND (((c0) IS FALSE))) COLLATE BINARY,CAST(((c0)<>(c2)) AS TEXT)) WHERE (CAST(c0 AS REAL) IN ()); -- 1ms;
REINDEX NOCASE; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 10); -- 1ms;
UPDATE OR IGNORE vt1 SET c0=NULL, c0=x'cb7b' WHERE (((((((0.6036454393140647)AND(vt1.c0)))AND(vt1.c0))))>=((CAST(vt1.c0 AS TEXT)))); -- 1ms;
PRAGMA secure_delete = FAST; -- 0ms;
PRAGMA main.application_id = 1242970384267287418; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1017760178); -- 0ms;
REINDEX  t0; -- 0ms;
UPDATE OR ABORT t0 SET c2='1024641548', c34='-1793644665' WHERE ((+ (t0.c2)) IN ()); -- 0ms;
PRAGMA temp.automatic_index; -- 0ms;
ANALYZE main; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1627840665); -- 1ms;
INSERT OR IGNORE INTO t0 VALUES ('530676640', x'', NULL, 'EL5)'); -- 0ms;
INSERT OR REPLACE INTO t0(c1, c0, c2) VALUES (0.8889391928790632, x'', '1416700989'); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0); -- 1ms;
CREATE TRIGGER IF NOT EXISTS tr0 AFTER DELETE ON t0 FOR EACH ROW  BEGIN SELECT RAISE(FAIL, 'asdf');SELECT RAISE(ABORT, 'asdf');END; -- 0ms;
INSERT OR IGNORE INTO t0(c2, c34) VALUES (NULL, 0Xffffffffa19075f8); -- 1ms;
INSERT INTO vt0(vt0) VALUES('merge=-1859771433,10');\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 10); -- 3ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
UPDATE OR FAIL vt1 SET c0=-2111811024 WHERE ((vt1.c0) IS TRUE) COLLATE RTRIM; -- 0ms;
PRAGMA main.auto_vacuum = INCREMENTAL; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=x'315b'; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0, c0)=(NULL, 0.12341242288984744) WHERE (((((vt1.c0 IN ()))OR(((vt1.c0) IS FALSE))))AND(((vt1.c0)-(x'')))); -- 0ms;
PRAGMA temp.journal_mode = TRUNCATE; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR ROLLBACK INTO rt0 VALUES (x'e4bf', ']~WRpT--r', 0.7617230352100492), (1703055770, '-1162052710', 0.4893151812040647), (NULL, NULL, 0.8951096894768977); -- 0ms;
PRAGMA main.auto_vacuum = NONE; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(x'') WHERE ((CASE '-1351856649'  WHEN rt0.c1 THEN rt0.c2 WHEN -2.83027304E8 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END) IS FALSE); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
ANALYZE; -- 0ms;
ALTER TABLE t1 RENAME COLUMN c2 TO c43; -- 2ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0, c2) VALUES (x'', x'', x''); -- 0ms;
PRAGMA automatic_index; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM rt0 WHERE ((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END))>=((COALESCE(DISTINCT rt0.c2, rt0.c1, rt0.c2, rt0.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END))>=((COALESCE(DISTINCT rt0.c2, rt0.c1, rt0.c2, rt0.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END))>=((COALESCE(DISTINCT rt0.c2, rt0.c1, rt0.c2, rt0.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END))>=((COALESCE(DISTINCT rt0.c2, rt0.c1, rt0.c2, rt0.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END))>=((COALESCE(DISTINCT rt0.c2, rt0.c1, rt0.c2, rt0.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c2)))));
SELECT COUNT(*) FROM t1, vt1 WHERE (NULLIF(DISTINCT ((t1.c34)%(vt1.c0)), ((''',(%Hî©¯')IS NOT(t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((t1.c34)%(vt1.c0)), ((''',(%Hî©¯')IS NOT(t1.c0)))) IS TRUE)  as count FROM t1, vt1);
SELECT COUNT(*) FROM t1, vt1 WHERE (NULLIF(DISTINCT ((t1.c34)%(vt1.c0)), ((''',(%Hî©¯')IS NOT(t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((t1.c34)%(vt1.c0)), ((''',(%Hî©¯')IS NOT(t1.c0)))) IS TRUE)  as count FROM t1, vt1);
SELECT COUNT(*) FROM t1, vt1 WHERE (NULLIF(DISTINCT ((t1.c34)%(vt1.c0)), ((''',(%Hî©¯')IS NOT(t1.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2)AND(rt0.c0)))AND('849726183')))OR(rt0.c1)))AND(rt0.c1)))==((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)AND(rt0.c0)))AND('849726183')))OR(rt0.c1)))AND(rt0.c1)))==((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2)AND(rt0.c0)))AND('849726183')))OR(rt0.c1)))AND(rt0.c1)))==((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)AND(rt0.c0)))AND('849726183')))OR(rt0.c1)))AND(rt0.c1)))==((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2)AND(rt0.c0)))AND('849726183')))OR(rt0.c1)))AND(rt0.c1)))==((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))));
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN vt1 ON (((vt1.c0)IS(t1.c43)) IN (t1.c34 COLLATE RTRIM)) LEFT OUTER JOIN rt0 ON ((NULL) NOT BETWEEN (((((vt1.c0)OR(rt0.c2)))OR(vt1.c0))) AND (((rt0.c2)>=(t1.c0)))) FULL OUTER JOIN vt0 ON ((((rt0.c2) NOT NULL))/(MIN(rt0.c1, t1.c0))) WHERE (CASE WHEN rt0.c2 THEN (NOT (t1.c43)) ELSE CASE WHEN t1.c43 THEN t1.c0 WHEN rt0.c1 THEN rt0.c2 WHEN t1.c34 THEN t1.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN (NOT (t1.c43)) ELSE CASE WHEN t1.c43 THEN t1.c0 WHEN rt0.c1 THEN rt0.c2 WHEN t1.c34 THEN t1.c0 END END) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt1 ON (((vt1.c0)IS(t1.c43)) IN (t1.c34 COLLATE RTRIM)) LEFT OUTER JOIN rt0 ON ((NULL) NOT BETWEEN (((((vt1.c0)OR(rt0.c2)))OR(vt1.c0))) AND (((rt0.c2)>=(t1.c0)))) FULL OUTER JOIN vt0 ON ((((rt0.c2) NOT NULL))/(MIN(rt0.c1, t1.c0))));
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN vt1 ON (((vt1.c0)IS(t1.c43)) IN (t1.c34 COLLATE RTRIM)) LEFT OUTER JOIN rt0 ON ((NULL) NOT BETWEEN (((((vt1.c0)OR(rt0.c2)))OR(vt1.c0))) AND (((rt0.c2)>=(t1.c0)))) FULL OUTER JOIN vt0 ON ((((rt0.c2) NOT NULL))/(MIN(rt0.c1, t1.c0))) WHERE (CASE WHEN rt0.c2 THEN (NOT (t1.c43)) ELSE CASE WHEN t1.c43 THEN t1.c0 WHEN rt0.c1 THEN rt0.c2 WHEN t1.c34 THEN t1.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN (NOT (t1.c43)) ELSE CASE WHEN t1.c43 THEN t1.c0 WHEN rt0.c1 THEN rt0.c2 WHEN t1.c34 THEN t1.c0 END END) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt1 ON (((vt1.c0)IS(t1.c43)) IN (t1.c34 COLLATE RTRIM)) LEFT OUTER JOIN rt0 ON ((NULL) NOT BETWEEN (((((vt1.c0)OR(rt0.c2)))OR(vt1.c0))) AND (((rt0.c2)>=(t1.c0)))) FULL OUTER JOIN vt0 ON ((((rt0.c2) NOT NULL))/(MIN(rt0.c1, t1.c0))));
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN vt1 ON (((vt1.c0)IS(t1.c43)) IN (t1.c34 COLLATE RTRIM)) LEFT OUTER JOIN rt0 ON ((NULL) NOT BETWEEN (((((vt1.c0)OR(rt0.c2)))OR(vt1.c0))) AND (((rt0.c2)>=(t1.c0)))) FULL OUTER JOIN vt0 ON ((((rt0.c2) NOT NULL))/(MIN(rt0.c1, t1.c0))) WHERE (CASE WHEN rt0.c2 THEN (NOT (t1.c43)) ELSE CASE WHEN t1.c43 THEN t1.c0 WHEN rt0.c1 THEN rt0.c2 WHEN t1.c34 THEN t1.c0 END END);
SELECT * FROM vt0, t1, rt0, vt1 WHERE ('-499908500') ORDER BY (((((((rt0.c2)AND(t1.c1)))OR('y&*O2]T'))))>((CASE rt0.c2  WHEN 0.4754917199000791 THEN '' END)));
SELECT SUM(count) FROM (SELECT ALL (('-499908500') IS TRUE)  as count FROM vt0, t1, rt0, vt1 ORDER BY (((((((rt0.c2)AND(t1.c1)))OR('y&*O2]T'))))>((CASE rt0.c2  WHEN 0.4754917199000791 THEN '' END))));
SELECT * FROM vt0, t1, rt0, vt1 WHERE ('-499908500') ORDER BY (((((((rt0.c2)AND(t1.c1)))OR('y&*O2]T'))))>((CASE rt0.c2  WHEN 0.4754917199000791 THEN '' END)));
SELECT SUM(count) FROM (SELECT ALL (('-499908500') IS TRUE)  as count FROM vt0, t1, rt0, vt1 ORDER BY (((((((rt0.c2)AND(t1.c1)))OR('y&*O2]T'))))>((CASE rt0.c2  WHEN 0.4754917199000791 THEN '' END))));
SELECT * FROM vt0, t1, rt0, vt1 WHERE ('-499908500') ORDER BY (((((((rt0.c2)AND(t1.c1)))OR('y&*O2]T'))))>((CASE rt0.c2  WHEN 0.4754917199000791 THEN '' END)));
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((- (CAST(rt0.c2 AS REAL)))) ORDER BY (('/d+')<=(((rt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT (((- (CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt0, t1 ORDER BY (('/d+')<=(((rt0.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((- (CAST(rt0.c2 AS REAL)))) ORDER BY (('/d+')<=(((rt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT (((- (CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt0, t1 ORDER BY (('/d+')<=(((rt0.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((- (CAST(rt0.c2 AS REAL)))) ORDER BY (('/d+')<=(((rt0.c0) NOTNULL)));
SELECT * FROM vt0, t1, vt1 LEFT OUTER JOIN rt0 ON (((NOT (t1.c0))) NOTNULL) WHERE (((((((rt0.c1, rt0.c0, t1.c1))<=((vt0.c0, rt0.c2, t1.c0)))))>=((((((rt0.c0)AND(vt0.c0)))OR(t1.c34)))))) ORDER BY (((rt0.c2 IN ()))IS((('1216140701') NOT BETWEEN (rt0.c2) AND (t1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1, rt0.c0, t1.c1))<=((vt0.c0, rt0.c2, t1.c0)))))>=((((((rt0.c0)AND(vt0.c0)))OR(t1.c34)))))) IS TRUE)  as count FROM vt0, t1, vt1 LEFT OUTER JOIN rt0 ON (((NOT (t1.c0))) NOTNULL) ORDER BY (((rt0.c2 IN ()))IS((('1216140701') NOT BETWEEN (rt0.c2) AND (t1.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt0, t1, vt1 LEFT OUTER JOIN rt0 ON (((NOT (t1.c0))) NOTNULL) WHERE (((((((rt0.c1, rt0.c0, t1.c1))<=((vt0.c0, rt0.c2, t1.c0)))))>=((((((rt0.c0)AND(vt0.c0)))OR(t1.c34)))))) ORDER BY (((rt0.c2 IN ()))IS((('1216140701') NOT BETWEEN (rt0.c2) AND (t1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1, rt0.c0, t1.c1))<=((vt0.c0, rt0.c2, t1.c0)))))>=((((((rt0.c0)AND(vt0.c0)))OR(t1.c34)))))) IS TRUE)  as count FROM vt0, t1, vt1 LEFT OUTER JOIN rt0 ON (((NOT (t1.c0))) NOTNULL) ORDER BY (((rt0.c2 IN ()))IS((('1216140701') NOT BETWEEN (rt0.c2) AND (t1.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt0, t1, vt1 LEFT OUTER JOIN rt0 ON (((NOT (t1.c0))) NOTNULL) WHERE (((((((rt0.c1, rt0.c0, t1.c1))<=((vt0.c0, rt0.c2, t1.c0)))))>=((((((rt0.c0)AND(vt0.c0)))OR(t1.c34)))))) ORDER BY (((rt0.c2 IN ()))IS((('1216140701') NOT BETWEEN (rt0.c2) AND (t1.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE ((((((vt0.c0, rt0.c1, NULL)) BETWEEN ((0.4049372976133554, vt1.c0, rt0.c0)) AND ((vt1.c0, rt0.c1, NULL))))|(((rt0.c0) NOT BETWEEN (0.26148251356350993) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, rt0.c1, NULL)) BETWEEN ((0.4049372976133554, vt1.c0, rt0.c0)) AND ((vt1.c0, rt0.c1, NULL))))|(((rt0.c0) NOT BETWEEN (0.26148251356350993) AND (vt0.c0))))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE ((((((vt0.c0, rt0.c1, NULL)) BETWEEN ((0.4049372976133554, vt1.c0, rt0.c0)) AND ((vt1.c0, rt0.c1, NULL))))|(((rt0.c0) NOT BETWEEN (0.26148251356350993) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, rt0.c1, NULL)) BETWEEN ((0.4049372976133554, vt1.c0, rt0.c0)) AND ((vt1.c0, rt0.c1, NULL))))|(((rt0.c0) NOT BETWEEN (0.26148251356350993) AND (vt0.c0))))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE ((((((vt0.c0, rt0.c1, NULL)) BETWEEN ((0.4049372976133554, vt1.c0, rt0.c0)) AND ((vt1.c0, rt0.c1, NULL))))|(((rt0.c0) NOT BETWEEN (0.26148251356350993) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt0, t1 WHERE (CAST(rt0.c0 AS TEXT) COLLATE BINARY) ORDER BY (((((t1.c34)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0))))OR(CAST(x'' AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, t1 ORDER BY (((((t1.c34)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0))))OR(CAST(x'' AS TEXT)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, t1 WHERE (CAST(rt0.c0 AS TEXT) COLLATE BINARY) ORDER BY (((((t1.c34)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0))))OR(CAST(x'' AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, t1 ORDER BY (((((t1.c34)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0))))OR(CAST(x'' AS TEXT)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, t1 WHERE (CAST(rt0.c0 AS TEXT) COLLATE BINARY) ORDER BY (((((t1.c34)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0))))OR(CAST(x'' AS TEXT)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((((((t1.c43)AND(vt0.c0)))OR(t1.c43))) IS TRUE)) ORDER BY (('533651308' IN (t1.c1)) IN (NULL, QUOTE(vt0.c0))) ASC, NULL  NULLS LAST, (((NULL))<((CASE WHEN t1.c0 THEN t1.c34 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c43)AND(vt0.c0)))OR(t1.c43))) IS TRUE)) IS TRUE)  as count FROM vt0, t1 ORDER BY (('533651308' IN (t1.c1)) IN (NULL, QUOTE(vt0.c0))) ASC, NULL  NULLS LAST, (((NULL))<((CASE WHEN t1.c0 THEN t1.c34 END))));
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((((((t1.c43)AND(vt0.c0)))OR(t1.c43))) IS TRUE)) ORDER BY (('533651308' IN (t1.c1)) IN (NULL, QUOTE(vt0.c0))) ASC, NULL  NULLS LAST, (((NULL))<((CASE WHEN t1.c0 THEN t1.c34 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c43)AND(vt0.c0)))OR(t1.c43))) IS TRUE)) IS TRUE)  as count FROM vt0, t1 ORDER BY (('533651308' IN (t1.c1)) IN (NULL, QUOTE(vt0.c0))) ASC, NULL  NULLS LAST, (((NULL))<((CASE WHEN t1.c0 THEN t1.c34 END))));
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((((((t1.c43)AND(vt0.c0)))OR(t1.c43))) IS TRUE)) ORDER BY (('533651308' IN (t1.c1)) IN (NULL, QUOTE(vt0.c0))) ASC, NULL  NULLS LAST, (((NULL))<((CASE WHEN t1.c0 THEN t1.c34 END)));
SELECT * FROM vt1, vt0, t1, rt0 WHERE (((~ (rt0.c2)) IN (CAST(rt0.c2 AS REAL), ((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((~ (rt0.c2)) IN (CAST(rt0.c2 AS REAL), ((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, vt0, t1, rt0);
SELECT * FROM vt1, vt0, t1, rt0 WHERE (((~ (rt0.c2)) IN (CAST(rt0.c2 AS REAL), ((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((~ (rt0.c2)) IN (CAST(rt0.c2 AS REAL), ((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, vt0, t1, rt0);
SELECT * FROM vt1, vt0, t1, rt0 WHERE (((~ (rt0.c2)) IN (CAST(rt0.c2 AS REAL), ((vt0.c0) IS TRUE))));
SELECT ALL * FROM rt0, vt1, t1, vt0 WHERE (CAST(CASE WHEN t1.c1 THEN vt0.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN NULL END AS BLOB)) ORDER BY LIKELY(GLOB('993906944', vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN t1.c1 THEN vt0.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN NULL END AS BLOB)) IS TRUE)  as count FROM rt0, vt1, t1, vt0 ORDER BY LIKELY(GLOB('993906944', vt0.c0))  NULLS LAST);
SELECT ALL * FROM rt0, vt1, t1, vt0 WHERE (CAST(CASE WHEN t1.c1 THEN vt0.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN NULL END AS BLOB)) ORDER BY LIKELY(GLOB('993906944', vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN t1.c1 THEN vt0.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN NULL END AS BLOB)) IS TRUE)  as count FROM rt0, vt1, t1, vt0 ORDER BY LIKELY(GLOB('993906944', vt0.c0))  NULLS LAST);
SELECT ALL * FROM rt0, vt1, t1, vt0 WHERE (CAST(CASE WHEN t1.c1 THEN vt0.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN NULL END AS BLOB)) ORDER BY LIKELY(GLOB('993906944', vt0.c0))  NULLS LAST;
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON (('') NOT BETWEEN (((t1.c0)&(t1.c34))) AND ((((t1.c34)) BETWEEN ((t1.c0)) AND ((t1.c43))))) CROSS JOIN t1 ON CAST(((vt1.c0)*(t1.c0)) AS TEXT) WHERE (((((+ (t1.c1))))>((vt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ((((((+ (t1.c1))))>((vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (('') NOT BETWEEN (((t1.c0)&(t1.c34))) AND ((((t1.c34)) BETWEEN ((t1.c0)) AND ((t1.c43))))) CROSS JOIN t1 ON CAST(((vt1.c0)*(t1.c0)) AS TEXT));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON (('') NOT BETWEEN (((t1.c0)&(t1.c34))) AND ((((t1.c34)) BETWEEN ((t1.c0)) AND ((t1.c43))))) CROSS JOIN t1 ON CAST(((vt1.c0)*(t1.c0)) AS TEXT) WHERE (((((+ (t1.c1))))>((vt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ((((((+ (t1.c1))))>((vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (('') NOT BETWEEN (((t1.c0)&(t1.c34))) AND ((((t1.c34)) BETWEEN ((t1.c0)) AND ((t1.c43))))) CROSS JOIN t1 ON CAST(((vt1.c0)*(t1.c0)) AS TEXT));
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (CASE (x'' IN ())  WHEN rt0.c1 THEN (((rt0.c1))==((rt0.c2))) WHEN ((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)) THEN ((600812800)-(rt0.c0)) WHEN ((vt1.c0)<=(NULL)) THEN UNLIKELY(vt1.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE (x'' IN ())  WHEN rt0.c1 THEN (((rt0.c1))==((rt0.c2))) WHEN ((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)) THEN ((600812800)-(rt0.c0)) WHEN ((vt1.c0)<=(NULL)) THEN UNLIKELY(vt1.c0) END) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (CASE (x'' IN ())  WHEN rt0.c1 THEN (((rt0.c1))==((rt0.c2))) WHEN ((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)) THEN ((600812800)-(rt0.c0)) WHEN ((vt1.c0)<=(NULL)) THEN UNLIKELY(vt1.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE (x'' IN ())  WHEN rt0.c1 THEN (((rt0.c1))==((rt0.c2))) WHEN ((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)) THEN ((600812800)-(rt0.c0)) WHEN ((vt1.c0)<=(NULL)) THEN UNLIKELY(vt1.c0) END) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (CASE (x'' IN ())  WHEN rt0.c1 THEN (((rt0.c1))==((rt0.c2))) WHEN ((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)) THEN ((600812800)-(rt0.c0)) WHEN ((vt1.c0)<=(NULL)) THEN UNLIKELY(vt1.c0) END);
SELECT COUNT(*) FROM t1 WHERE (MAX(NULL, ((t1.c1)AND(t1.c43)), ((x'')=(t1.c34)), ((t1.c43) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((MAX(NULL, ((t1.c1)AND(t1.c43)), ((x'')=(t1.c34)), ((t1.c43) NOT NULL))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (MAX(NULL, ((t1.c1)AND(t1.c43)), ((x'')=(t1.c34)), ((t1.c43) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((MAX(NULL, ((t1.c1)AND(t1.c43)), ((x'')=(t1.c34)), ((t1.c43) NOT NULL))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (MAX(NULL, ((t1.c1)AND(t1.c43)), ((x'')=(t1.c34)), ((t1.c43) NOT NULL)));
SELECT ALL * FROM rt0, vt1, vt0, t1 WHERE (CAST(vt1.c0 AS TEXT) COLLATE BINARY) ORDER BY ((((vt0.c0) NOTNULL))IS(json_insert(t1.c1, 0.8331043571228389, t1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1, vt0, t1 ORDER BY ((((vt0.c0) NOTNULL))IS(json_insert(t1.c1, 0.8331043571228389, t1.c0))) ASC);
SELECT ALL * FROM rt0, vt1, vt0, t1 WHERE (CAST(vt1.c0 AS TEXT) COLLATE BINARY) ORDER BY ((((vt0.c0) NOTNULL))IS(json_insert(t1.c1, 0.8331043571228389, t1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1, vt0, t1 ORDER BY ((((vt0.c0) NOTNULL))IS(json_insert(t1.c1, 0.8331043571228389, t1.c0))) ASC);
SELECT ALL * FROM rt0, vt1, vt0, t1 WHERE (CAST(vt1.c0 AS TEXT) COLLATE BINARY) ORDER BY ((((vt0.c0) NOTNULL))IS(json_insert(t1.c1, 0.8331043571228389, t1.c0))) ASC;
SELECT ALL COUNT(*) FROM vt0, rt0, t1, vt1 WHERE (((rt0.c0)>(t1.c0)) COLLATE BINARY) ORDER BY CAST(0.6027375416172225 AS NUMERIC), (((rt0.c0 COLLATE NOCASE, ABS(DISTINCT rt0.c0), ((x'') NOTNULL)))<=((((rt0.c0)*(rt0.c2)), ((((rt0.c0)OR(t1.c0)))AND('445401270')), t1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)>(t1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0, t1, vt1 ORDER BY CAST(0.6027375416172225 AS NUMERIC), (((rt0.c0 COLLATE NOCASE, ABS(DISTINCT rt0.c0), ((x'') NOTNULL)))<=((((rt0.c0)*(rt0.c2)), ((((rt0.c0)OR(t1.c0)))AND('445401270')), t1.c0))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, t1, vt1 WHERE (((rt0.c0)>(t1.c0)) COLLATE BINARY) ORDER BY CAST(0.6027375416172225 AS NUMERIC), (((rt0.c0 COLLATE NOCASE, ABS(DISTINCT rt0.c0), ((x'') NOTNULL)))<=((((rt0.c0)*(rt0.c2)), ((((rt0.c0)OR(t1.c0)))AND('445401270')), t1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)>(t1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0, t1, vt1 ORDER BY CAST(0.6027375416172225 AS NUMERIC), (((rt0.c0 COLLATE NOCASE, ABS(DISTINCT rt0.c0), ((x'') NOTNULL)))<=((((rt0.c0)*(rt0.c2)), ((((rt0.c0)OR(t1.c0)))AND('445401270')), t1.c0))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, t1, vt1 WHERE (((rt0.c0)>(t1.c0)) COLLATE BINARY) ORDER BY CAST(0.6027375416172225 AS NUMERIC), (((rt0.c0 COLLATE NOCASE, ABS(DISTINCT rt0.c0), ((x'') NOTNULL)))<=((((rt0.c0)*(rt0.c2)), ((((rt0.c0)OR(t1.c0)))AND('445401270')), t1.c0))) ASC;
SELECT ALL * FROM rt0, vt1, t1 WHERE ('-750502727') ORDER BY CAST(rt0.c2 AS INTEGER) COLLATE RTRIM  NULLS FIRST, (NOT (vt1.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-750502727') IS TRUE)  as count FROM rt0, vt1, t1 ORDER BY CAST(rt0.c2 AS INTEGER) COLLATE RTRIM  NULLS FIRST, (NOT (vt1.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM rt0, vt1, t1 WHERE ('-750502727') ORDER BY CAST(rt0.c2 AS INTEGER) COLLATE RTRIM  NULLS FIRST, (NOT (vt1.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-750502727') IS TRUE)  as count FROM rt0, vt1, t1 ORDER BY CAST(rt0.c2 AS INTEGER) COLLATE RTRIM  NULLS FIRST, (NOT (vt1.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM rt0, vt1, t1 WHERE ('-750502727') ORDER BY CAST(rt0.c2 AS INTEGER) COLLATE RTRIM  NULLS FIRST, (NOT (vt1.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0, vt1, t1 WHERE ((((((t1.c34))==((t1.c1))))<<(LOWER(t1.c0)))) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c34))==((t1.c1))))<<(LOWER(t1.c0)))) IS TRUE)  as count FROM rt0, vt0, vt1, t1 ORDER BY rt0.c2 DESC);
SELECT COUNT(*) FROM rt0, vt0, vt1, t1 WHERE ((((((t1.c34))==((t1.c1))))<<(LOWER(t1.c0)))) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c34))==((t1.c1))))<<(LOWER(t1.c0)))) IS TRUE)  as count FROM rt0, vt0, vt1, t1 ORDER BY rt0.c2 DESC);
SELECT COUNT(*) FROM rt0, vt0, vt1, t1 WHERE ((((((t1.c34))==((t1.c1))))<<(LOWER(t1.c0)))) ORDER BY rt0.c2 DESC;
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE ((((((((((t1.c1)OR(vt1.c0)))OR(t1.c0)))AND(t1.c43)))OR(t1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((t1.c1)OR(vt1.c0)))OR(t1.c0)))AND(t1.c43)))OR(t1.c1)) IN ())) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE ((((((((((t1.c1)OR(vt1.c0)))OR(t1.c0)))AND(t1.c43)))OR(t1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((t1.c1)OR(vt1.c0)))OR(t1.c0)))AND(t1.c43)))OR(t1.c1)) IN ())) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE ((((((((((t1.c1)OR(vt1.c0)))OR(t1.c0)))AND(t1.c43)))OR(t1.c1)) IN ()));
SELECT ALL * FROM t1, rt0, vt0 WHERE (((rt0.c2)>('2146166239' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((rt0.c2)>('2146166239' COLLATE RTRIM))) IS TRUE)  as count FROM t1, rt0, vt0);
SELECT ALL * FROM t1, rt0, vt0 WHERE (((rt0.c2)>('2146166239' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((rt0.c2)>('2146166239' COLLATE RTRIM))) IS TRUE)  as count FROM t1, rt0, vt0);
SELECT ALL * FROM t1, rt0, vt0 WHERE (((rt0.c2)>('2146166239' COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 INNER JOIN t1 ON (((rt0.c2 IN (t1.c1))) BETWEEN (((rt0.c1) BETWEEN (t1.c1) AND (t1.c0))) AND (CAST(NULL AS REAL))) WHERE (((x'f46a')IS NOT(((rt0.c0)LIKE(vt0.c0))))) ORDER BY ((CAST(t1.c0 AS BLOB))<>(((t1.c43) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'f46a')IS NOT(((rt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM rt0, vt1, vt0 INNER JOIN t1 ON (((rt0.c2 IN (t1.c1))) BETWEEN (((rt0.c1) BETWEEN (t1.c1) AND (t1.c0))) AND (CAST(NULL AS REAL))) ORDER BY ((CAST(t1.c0 AS BLOB))!=(((t1.c43) IS FALSE)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 INNER JOIN t1 ON (((rt0.c2 IN (t1.c1))) BETWEEN (((rt0.c1) BETWEEN (t1.c1) AND (t1.c0))) AND (CAST(NULL AS REAL))) WHERE (((x'f46a')IS NOT(((rt0.c0)LIKE(vt0.c0))))) ORDER BY ((CAST(t1.c0 AS BLOB))<>(((t1.c43) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'f46a')IS NOT(((rt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM rt0, vt1, vt0 INNER JOIN t1 ON (((rt0.c2 IN (t1.c1))) BETWEEN (((rt0.c1) BETWEEN (t1.c1) AND (t1.c0))) AND (CAST(NULL AS REAL))) ORDER BY ((CAST(t1.c0 AS BLOB))!=(((t1.c43) IS FALSE)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 INNER JOIN t1 ON (((rt0.c2 IN (t1.c1))) BETWEEN (((rt0.c1) BETWEEN (t1.c1) AND (t1.c0))) AND (CAST(NULL AS REAL))) WHERE (((x'f46a')IS NOT(((rt0.c0)LIKE(vt0.c0))))) ORDER BY ((CAST(t1.c0 AS BLOB))<>(((t1.c43) IS FALSE)))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (((((((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(highlight(vt1.c0, vt1.c0, vt1.c0, vt1.c0))))AND(CASE WHEN vt1.c0 THEN '35v+' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 WHEN '[é¿ex' THEN vt1.c0 ELSE vt1.c0 END)))OR(((vt1.c0)%(vt1.c0))))) ORDER BY (((vt1.c0) IS FALSE) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(highlight(vt1.c0, vt1.c0, vt1.c0, vt1.c0))))AND(CASE WHEN vt1.c0 THEN '35v+' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 WHEN '[é¿ex' THEN vt1.c0 ELSE vt1.c0 END)))OR(((vt1.c0)%(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0) IS FALSE) IN ()) DESC);
SELECT COUNT(*) FROM vt1 WHERE (((((((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(highlight(vt1.c0, vt1.c0, vt1.c0, vt1.c0))))AND(CASE WHEN vt1.c0 THEN '35v+' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 WHEN '[é¿ex' THEN vt1.c0 ELSE vt1.c0 END)))OR(((vt1.c0)%(vt1.c0))))) ORDER BY (((vt1.c0) IS FALSE) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(highlight(vt1.c0, vt1.c0, vt1.c0, vt1.c0))))AND(CASE WHEN vt1.c0 THEN '35v+' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 WHEN '[é¿ex' THEN vt1.c0 ELSE vt1.c0 END)))OR(((vt1.c0)%(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0) IS FALSE) IN ()) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((HEX(vt1.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((HEX(vt1.c0) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((HEX(vt1.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((HEX(vt1.c0) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((HEX(vt1.c0) IN ()));
SELECT COUNT(*) FROM t1 FULL OUTER JOIN vt0 ON LIKELY(DISTINCT ((t1.c34)OR(t1.c1))) CROSS JOIN vt1 ON (((vt1.c0)<<(t1.c1)) IN ()) WHERE (((t1.c0)-(t1.c0)) COLLATE RTRIM) ORDER BY (((('')||(t1.c34))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)-(t1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt0 ON LIKELY(DISTINCT ((t1.c34)OR(t1.c1))) CROSS JOIN vt1 ON (((vt1.c0)<<(t1.c1)) IN ()) ORDER BY (((('')||(t1.c34))) IS FALSE) DESC);
SELECT COUNT(*) FROM t1 FULL OUTER JOIN vt0 ON LIKELY(DISTINCT ((t1.c34)OR(t1.c1))) CROSS JOIN vt1 ON (((vt1.c0)<<(t1.c1)) IN ()) WHERE (((t1.c0)-(t1.c0)) COLLATE RTRIM) ORDER BY (((('')||(t1.c34))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)-(t1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt0 ON LIKELY(DISTINCT ((t1.c34)OR(t1.c1))) CROSS JOIN vt1 ON (((vt1.c0)<<(t1.c1)) IN ()) ORDER BY (((('')||(t1.c34))) IS FALSE) DESC);
SELECT COUNT(*) FROM t1 FULL OUTER JOIN vt0 ON LIKELY(DISTINCT ((t1.c34)OR(t1.c1))) CROSS JOIN vt1 ON (((vt1.c0)<<(t1.c1)) IN ()) WHERE (((t1.c0)-(t1.c0)) COLLATE RTRIM) ORDER BY (((('')||(t1.c34))) IS FALSE) DESC;
SELECT ALL * FROM rt0, vt1 WHERE ((((~ (rt0.c1)))<<(rt0.c0 COLLATE BINARY))) ORDER BY (((rt0.c1)<(rt0.c0)) IN (IFNULL(x'4a9a', vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c1)))<<(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c1)<(rt0.c0)) IN (IFNULL(x'4a9a', vt1.c0)))  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE ((((~ (rt0.c1)))<<(rt0.c0 COLLATE BINARY))) ORDER BY (((rt0.c1)<(rt0.c0)) IN (IFNULL(x'4a9a', vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c1)))<<(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c1)<(rt0.c0)) IN (IFNULL(x'4a9a', vt1.c0)))  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE ((((~ (rt0.c1)))<<(rt0.c0 COLLATE BINARY))) ORDER BY (((rt0.c1)<(rt0.c0)) IN (IFNULL(x'4a9a', vt1.c0)))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE ((((((((((vt1.c0 IN (vt1.c0, vt1.c0)))OR((~ (vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND((~ (x'20a3')))))OR(NULL))) ORDER BY ((vt1.c0)<=(TYPEOF('0.39912970124943237'))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((vt1.c0 IN (vt1.c0, vt1.c0)))OR((~ (vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND((~ (x'20a3')))))OR(NULL))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)<=(TYPEOF('0.39912970124943237'))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((((((((vt1.c0 IN (vt1.c0, vt1.c0)))OR((~ (vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND((~ (x'20a3')))))OR(NULL))) ORDER BY ((vt1.c0)<=(TYPEOF('0.39912970124943237'))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((vt1.c0 IN (vt1.c0, vt1.c0)))OR((~ (vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND((~ (x'20a3')))))OR(NULL))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)<=(TYPEOF('0.39912970124943237'))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((((((((vt1.c0 IN (vt1.c0, vt1.c0)))OR((~ (vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND((~ (x'20a3')))))OR(NULL))) ORDER BY ((vt1.c0)<=(TYPEOF('0.39912970124943237'))) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((NULL IN (vt0.c0, NULL)))OR(json_extract(vt0.c0, vt0.c0, vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN (vt0.c0, NULL)))OR(json_extract(vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((NULL IN (vt0.c0, NULL)))OR(json_extract(vt0.c0, vt0.c0, vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN (vt0.c0, NULL)))OR(json_extract(vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((NULL IN (vt0.c0, NULL)))OR(json_extract(vt0.c0, vt0.c0, vt0.c0, vt0.c0))));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON (NOT (((1045479840) NOT BETWEEN (NULL) AND (rt0.c2)))) WHERE (x'a409');
SELECT SUM(count) FROM (SELECT ALL ((x'a409') IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (NOT (((1045479840) NOT BETWEEN (NULL) AND (rt0.c2)))));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON (NOT (((1045479840) NOT BETWEEN (NULL) AND (rt0.c2)))) WHERE (x'a409');
SELECT SUM(count) FROM (SELECT ALL ((x'a409') IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (NOT (((1045479840) NOT BETWEEN (NULL) AND (rt0.c2)))));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON (NOT (((1045479840) NOT BETWEEN (NULL) AND (rt0.c2)))) WHERE (x'a409');
SELECT ALL * FROM vt1 WHERE (0.470510160563379);
SELECT SUM(count) FROM (SELECT ((0.470510160563379) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (0.470510160563379);
SELECT SUM(count) FROM (SELECT ((0.470510160563379) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (0.470510160563379);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (CAST(((vt0.c0)<=(rt0.c0)) AS NUMERIC)) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN rt0.c2 WHEN vt0.c0 THEN x'eedf' END) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 END) AND (vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)<=(rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN rt0.c2 WHEN vt0.c0 THEN x'eedf' END) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 END) AND (vt0.c0)) DESC);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (CAST(((vt0.c0)<=(rt0.c0)) AS NUMERIC)) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN rt0.c2 WHEN vt0.c0 THEN x'eedf' END) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 END) AND (vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)<=(rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN rt0.c2 WHEN vt0.c0 THEN x'eedf' END) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 END) AND (vt0.c0)) DESC);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (CAST(((vt0.c0)<=(rt0.c0)) AS NUMERIC)) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN rt0.c2 WHEN vt0.c0 THEN x'eedf' END) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 END) AND (vt0.c0)) DESC;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c2 AS BLOB)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS BLOB)) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c2 AS BLOB)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS BLOB)) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c2 AS BLOB)) NOTNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL) ORDER BY CASE WHEN ((rt0.c0) IS FALSE) THEN ((rt0.c0)>>(rt0.c1)) WHEN (rt0.c1 IN ()) THEN json_type(rt0.c0) WHEN ((rt0.c2) NOTNULL) THEN UPPER(rt0.c1) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c0) IS FALSE) THEN ((rt0.c0)>>(rt0.c1)) WHEN (rt0.c1 IN ()) THEN json_type(rt0.c0) WHEN ((rt0.c2) NOTNULL) THEN UPPER(rt0.c1) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL) ORDER BY CASE WHEN ((rt0.c0) IS FALSE) THEN ((rt0.c0)>>(rt0.c1)) WHEN (rt0.c1 IN ()) THEN json_type(rt0.c0) WHEN ((rt0.c2) NOTNULL) THEN UPPER(rt0.c1) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c0) IS FALSE) THEN ((rt0.c0)>>(rt0.c1)) WHEN (rt0.c1 IN ()) THEN json_type(rt0.c0) WHEN ((rt0.c2) NOTNULL) THEN UPPER(rt0.c1) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL) ORDER BY CASE WHEN ((rt0.c0) IS FALSE) THEN ((rt0.c0)>>(rt0.c1)) WHEN (rt0.c1 IN ()) THEN json_type(rt0.c0) WHEN ((rt0.c2) NOTNULL) THEN UPPER(rt0.c1) END  NULLS LAST;
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE (rt0.c2 IN ())  WHEN CAST('1781859984' AS INTEGER) THEN rtreenode(rt0.c0, rt0.c1) END) ORDER BY CAST(CASE WHEN rt0.c2 THEN 0.2198352227966407 END AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c2 IN ())  WHEN CAST('1781859984' AS INTEGER) THEN rtreenode(rt0.c0, rt0.c1) END) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(CASE WHEN rt0.c2 THEN 0.2198352227966407 END AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE (rt0.c2 IN ())  WHEN CAST('1781859984' AS INTEGER) THEN rtreenode(rt0.c0, rt0.c1) END) ORDER BY CAST(CASE WHEN rt0.c2 THEN 0.2198352227966407 END AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c2 IN ())  WHEN CAST('1781859984' AS INTEGER) THEN rtreenode(rt0.c0, rt0.c1) END) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(CASE WHEN rt0.c2 THEN 0.2198352227966407 END AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE (rt0.c2 IN ())  WHEN CAST('1781859984' AS INTEGER) THEN rtreenode(rt0.c0, rt0.c1) END) ORDER BY CAST(CASE WHEN rt0.c2 THEN 0.2198352227966407 END AS BLOB)  NULLS LAST;
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ('-1648972660');
SELECT SUM(count) FROM (SELECT ALL (('-1648972660') IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ('-1648972660');
SELECT SUM(count) FROM (SELECT ALL (('-1648972660') IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ('-1648972660');
SELECT * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (0.6143038630035013) AND (vt1.c0)))>(vt1.c0))) ORDER BY 0.6900992583090226 ASC, (((vt1.c0 IN (vt1.c0, vt1.c0))) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND ((+ (vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (0.6143038630035013) AND (vt1.c0)))>(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY 0.6900992583090226 ASC, (((vt1.c0 IN (vt1.c0, vt1.c0))) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND ((+ (vt1.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (0.6143038630035013) AND (vt1.c0)))>(vt1.c0))) ORDER BY 0.6900992583090226 ASC, (((vt1.c0 IN (vt1.c0, vt1.c0))) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND ((+ (vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (0.6143038630035013) AND (vt1.c0)))>(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY 0.6900992583090226 ASC, (((vt1.c0 IN (vt1.c0, vt1.c0))) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND ((+ (vt1.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (0.6143038630035013) AND (vt1.c0)))>(vt1.c0))) ORDER BY 0.6900992583090226 ASC, (((vt1.c0 IN (vt1.c0, vt1.c0))) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND ((+ (vt1.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, rt0, t1, vt1 WHERE (((((((t1.c0)OR(t1.c34)))OR(t1.c34))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((t1.c0)OR(t1.c34)))OR(t1.c34))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0, t1, vt1);
SELECT ALL * FROM vt0, rt0, t1, vt1 WHERE (((((((t1.c0)OR(t1.c34)))OR(t1.c34))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((t1.c0)OR(t1.c34)))OR(t1.c34))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0, t1, vt1);
SELECT ALL * FROM vt0, rt0, t1, vt1 WHERE (((((((t1.c0)OR(t1.c34)))OR(t1.c34))) NOTNULL));
SELECT * FROM rt0 WHERE (((((~ (rt0.c2))))<>((((rt0.c1)<<(rt0.c1)))))) ORDER BY (((rt0.c1 IN (rt0.c2)))IS NOT(CAST(rt0.c1 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((~ (rt0.c2))))!=((((rt0.c1)<<(rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1 IN (rt0.c2)))IS NOT(CAST(rt0.c1 AS REAL)))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((~ (rt0.c2))))<>((((rt0.c1)<<(rt0.c1)))))) ORDER BY (((rt0.c1 IN (rt0.c2)))IS NOT(CAST(rt0.c1 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((~ (rt0.c2))))!=((((rt0.c1)<<(rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1 IN (rt0.c2)))IS NOT(CAST(rt0.c1 AS REAL)))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((~ (rt0.c2))))<>((((rt0.c1)<<(rt0.c1)))))) ORDER BY (((rt0.c1 IN (rt0.c2)))IS NOT(CAST(rt0.c1 AS REAL)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t1, vt1 WHERE ((((vt1.c0, CASE WHEN t1.c34 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN t1.c1 ELSE t1.c1 END, t1.c34 COLLATE RTRIM))=((CASE WHEN t1.c1 THEN rt0.c1 WHEN rt0.c0 THEN t1.c1 WHEN rt0.c2 THEN t1.c0 END, TOTAL_CHANGES(), ((rt0.c2)||(t1.c0)))))) ORDER BY CASE (((rt0.c1, t1.c34, NULL))<>((vt1.c0, t1.c1, rt0.c1)))  WHEN '-2022929578' COLLATE NOCASE THEN (((t1.c0)) BETWEEN (('1922456091')) AND ((rt0.c1))) END ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, CASE WHEN t1.c34 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN t1.c1 ELSE t1.c1 END, t1.c34 COLLATE RTRIM))==((CASE WHEN t1.c1 THEN rt0.c1 WHEN rt0.c0 THEN t1.c1 WHEN rt0.c2 THEN t1.c0 END, TOTAL_CHANGES(), ((rt0.c2)||(t1.c0)))))) IS TRUE)  as count FROM rt0, t1, vt1 ORDER BY CASE (((rt0.c1, t1.c34, NULL))!=((vt1.c0, t1.c1, rt0.c1)))  WHEN '-2022929578' COLLATE NOCASE THEN (((t1.c0)) BETWEEN (('1922456091')) AND ((rt0.c1))) END ASC);
SELECT ALL COUNT(*) FROM rt0, t1, vt1 WHERE ((((vt1.c0, CASE WHEN t1.c34 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN t1.c1 ELSE t1.c1 END, t1.c34 COLLATE RTRIM))=((CASE WHEN t1.c1 THEN rt0.c1 WHEN rt0.c0 THEN t1.c1 WHEN rt0.c2 THEN t1.c0 END, TOTAL_CHANGES(), ((rt0.c2)||(t1.c0)))))) ORDER BY CASE (((rt0.c1, t1.c34, NULL))<>((vt1.c0, t1.c1, rt0.c1)))  WHEN '-2022929578' COLLATE NOCASE THEN (((t1.c0)) BETWEEN (('1922456091')) AND ((rt0.c1))) END ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, CASE WHEN t1.c34 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN t1.c1 ELSE t1.c1 END, t1.c34 COLLATE RTRIM))==((CASE WHEN t1.c1 THEN rt0.c1 WHEN rt0.c0 THEN t1.c1 WHEN rt0.c2 THEN t1.c0 END, TOTAL_CHANGES(), ((rt0.c2)||(t1.c0)))))) IS TRUE)  as count FROM rt0, t1, vt1 ORDER BY CASE (((rt0.c1, t1.c34, NULL))!=((vt1.c0, t1.c1, rt0.c1)))  WHEN '-2022929578' COLLATE NOCASE THEN (((t1.c0)) BETWEEN (('1922456091')) AND ((rt0.c1))) END ASC);
SELECT ALL COUNT(*) FROM rt0, t1, vt1 WHERE ((((vt1.c0, CASE WHEN t1.c34 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN t1.c1 ELSE t1.c1 END, t1.c34 COLLATE RTRIM))=((CASE WHEN t1.c1 THEN rt0.c1 WHEN rt0.c0 THEN t1.c1 WHEN rt0.c2 THEN t1.c0 END, TOTAL_CHANGES(), ((rt0.c2)||(t1.c0)))))) ORDER BY CASE (((rt0.c1, t1.c34, NULL))<>((vt1.c0, t1.c1, rt0.c1)))  WHEN '-2022929578' COLLATE NOCASE THEN (((t1.c0)) BETWEEN (('1922456091')) AND ((rt0.c1))) END ASC;
SELECT ALL COUNT(*) FROM vt0, rt0, t1 WHERE (((5.48924015E8) NOT BETWEEN (((t1.c34) NOT BETWEEN (t1.c0) AND (t1.c0))) AND (((t1.c1) BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY CASE t1.c1  WHEN 'ê´¸,s>æ¢r' THEN t1.c0 ELSE rt0.c1 END COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((5.48924015E8) NOT BETWEEN (((t1.c34) NOT BETWEEN (t1.c0) AND (t1.c0))) AND (((t1.c1) BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY CASE t1.c1  WHEN 'ê´¸,s>æ¢r' THEN t1.c0 ELSE rt0.c1 END COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, t1 WHERE (((5.48924015E8) NOT BETWEEN (((t1.c34) NOT BETWEEN (t1.c0) AND (t1.c0))) AND (((t1.c1) BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY CASE t1.c1  WHEN 'ê´¸,s>æ¢r' THEN t1.c0 ELSE rt0.c1 END COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((5.48924015E8) NOT BETWEEN (((t1.c34) NOT BETWEEN (t1.c0) AND (t1.c0))) AND (((t1.c1) BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY CASE t1.c1  WHEN 'ê´¸,s>æ¢r' THEN t1.c0 ELSE rt0.c1 END COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, t1 WHERE (((5.48924015E8) NOT BETWEEN (((t1.c34) NOT BETWEEN (t1.c0) AND (t1.c0))) AND (((t1.c1) BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY CASE t1.c1  WHEN 'ê´¸,s>æ¢r' THEN t1.c0 ELSE rt0.c1 END COLLATE BINARY ASC;
SELECT ALL * FROM t1, rt0 WHERE (CAST(-626300840 COLLATE RTRIM AS TEXT)) ORDER BY ((((((((CASE t1.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END)AND(((rt0.c0)IS NOT(t1.c43)))))OR(((((t1.c1)AND(t1.c0)))AND(rt0.c1)))))OR(CAST(NULL AS TEXT))))AND(TOTAL_CHANGES()));
SELECT SUM(count) FROM (SELECT ALL ((CAST(-626300840 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM t1, rt0 ORDER BY ((((((((CASE t1.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END)AND(((rt0.c0)IS NOT(t1.c43)))))OR(((((t1.c1)AND(t1.c0)))AND(rt0.c1)))))OR(CAST(NULL AS TEXT))))AND(TOTAL_CHANGES())));
SELECT ALL * FROM t1, rt0 WHERE (CAST(-626300840 COLLATE RTRIM AS TEXT)) ORDER BY ((((((((CASE t1.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END)AND(((rt0.c0)IS NOT(t1.c43)))))OR(((((t1.c1)AND(t1.c0)))AND(rt0.c1)))))OR(CAST(NULL AS TEXT))))AND(TOTAL_CHANGES()));
SELECT SUM(count) FROM (SELECT ALL ((CAST(-626300840 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM t1, rt0 ORDER BY ((((((((CASE t1.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END)AND(((rt0.c0)IS NOT(t1.c43)))))OR(((((t1.c1)AND(t1.c0)))AND(rt0.c1)))))OR(CAST(NULL AS TEXT))))AND(TOTAL_CHANGES())));
SELECT ALL * FROM t1, rt0 WHERE (CAST(-626300840 COLLATE RTRIM AS TEXT)) ORDER BY ((((((((CASE t1.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END)AND(((rt0.c0)IS NOT(t1.c43)))))OR(((((t1.c1)AND(t1.c0)))AND(rt0.c1)))))OR(CAST(NULL AS TEXT))))AND(TOTAL_CHANGES()));
SELECT ALL COUNT(*) FROM vt0, vt1, t1 FULL OUTER JOIN rt0 ON CASE WHEN ((vt0.c0) NOTNULL) THEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((t1.c34))) ELSE ((t1.c0)/(t1.c1)) END WHERE ((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 END IN ())) IS TRUE)  as count FROM vt0, vt1, t1 FULL OUTER JOIN rt0 ON CASE WHEN ((vt0.c0) NOTNULL) THEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((t1.c34))) ELSE ((t1.c0)/(t1.c1)) END);
SELECT ALL COUNT(*) FROM vt0, vt1, t1 FULL OUTER JOIN rt0 ON CASE WHEN ((vt0.c0) NOTNULL) THEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((t1.c34))) ELSE ((t1.c0)/(t1.c1)) END WHERE ((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 END IN ())) IS TRUE)  as count FROM vt0, vt1, t1 FULL OUTER JOIN rt0 ON CASE WHEN ((vt0.c0) NOTNULL) THEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((t1.c34))) ELSE ((t1.c0)/(t1.c1)) END);
SELECT ALL COUNT(*) FROM vt0, vt1, t1 FULL OUTER JOIN rt0 ON CASE WHEN ((vt0.c0) NOTNULL) THEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((t1.c34))) ELSE ((t1.c0)/(t1.c1)) END WHERE ((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 END IN ()));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((CAST(x'' AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(x'' AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((CAST(x'' AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(x'' AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((CAST(x'' AS NUMERIC) IN ()));
SELECT * FROM vt1 INNER JOIN t1 ON CAST(t1.c1 AS REAL) WHERE (((((((vt1.c0)AND(t1.c0)))OR(vt1.c0)))|(CAST(vt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(t1.c0)))OR(vt1.c0)))|(CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1 INNER JOIN t1 ON CAST(t1.c1 AS REAL));
SELECT * FROM vt1 INNER JOIN t1 ON CAST(t1.c1 AS REAL) WHERE (((((((vt1.c0)AND(t1.c0)))OR(vt1.c0)))|(CAST(vt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(t1.c0)))OR(vt1.c0)))|(CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1 INNER JOIN t1 ON CAST(t1.c1 AS REAL));
SELECT * FROM vt1 INNER JOIN t1 ON CAST(t1.c1 AS REAL) WHERE (((((((vt1.c0)AND(t1.c0)))OR(vt1.c0)))|(CAST(vt1.c0 AS REAL))));
SELECT ALL COUNT(*) FROM t1, rt0 CROSS JOIN vt1 ON ((vt1.c0)GLOB(vt1.c0)) COLLATE NOCASE COLLATE NOCASE LEFT OUTER JOIN vt0 ON ((NULL) NOTNULL) WHERE (CASE WHEN ((((rt0.c1)AND(t1.c43)))OR(x'f20b8414')) THEN NULL ELSE ((t1.c1) NOT BETWEEN (t1.c43) AND (t1.c34)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c1)AND(t1.c43)))OR(x'f20b8414')) THEN NULL ELSE ((t1.c1) NOT BETWEEN (t1.c43) AND (t1.c34)) END) IS TRUE)  as count FROM t1, rt0 CROSS JOIN vt1 ON ((vt1.c0)GLOB(vt1.c0)) COLLATE NOCASE COLLATE NOCASE LEFT OUTER JOIN vt0 ON ((NULL) NOTNULL));
SELECT ALL COUNT(*) FROM t1, rt0 CROSS JOIN vt1 ON ((vt1.c0)GLOB(vt1.c0)) COLLATE NOCASE COLLATE NOCASE LEFT OUTER JOIN vt0 ON ((NULL) NOTNULL) WHERE (CASE WHEN ((((rt0.c1)AND(t1.c43)))OR(x'f20b8414')) THEN NULL ELSE ((t1.c1) NOT BETWEEN (t1.c43) AND (t1.c34)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c1)AND(t1.c43)))OR(x'f20b8414')) THEN NULL ELSE ((t1.c1) NOT BETWEEN (t1.c43) AND (t1.c34)) END) IS TRUE)  as count FROM t1, rt0 CROSS JOIN vt1 ON ((vt1.c0)GLOB(vt1.c0)) COLLATE NOCASE COLLATE NOCASE LEFT OUTER JOIN vt0 ON ((NULL) NOTNULL));
SELECT ALL COUNT(*) FROM t1, rt0 CROSS JOIN vt1 ON ((vt1.c0)GLOB(vt1.c0)) COLLATE NOCASE COLLATE NOCASE LEFT OUTER JOIN vt0 ON ((NULL) NOTNULL) WHERE (CASE WHEN ((((rt0.c1)AND(t1.c43)))OR(x'f20b8414')) THEN NULL ELSE ((t1.c1) NOT BETWEEN (t1.c43) AND (t1.c34)) END);
SELECT ALL COUNT(*) FROM vt1, t1, rt0 WHERE (((((((0X2292dcab)AND(t1.c43)))OR(rt0.c2)))*(LOWER(x'')))) ORDER BY ((t1.c43)>=((t1.c1 IN (t1.c0, t1.c1))));
SELECT SUM(count) FROM (SELECT ((((((((0x2292dcab)AND(t1.c43)))OR(rt0.c2)))*(LOWER(x'')))) IS TRUE)  as count FROM vt1, t1, rt0 ORDER BY ((t1.c43)>=((t1.c1 IN (t1.c0, t1.c1)))));
SELECT ALL COUNT(*) FROM vt1, t1, rt0 WHERE (((((((0X2292dcab)AND(t1.c43)))OR(rt0.c2)))*(LOWER(x'')))) ORDER BY ((t1.c43)>=((t1.c1 IN (t1.c0, t1.c1))));
SELECT SUM(count) FROM (SELECT ((((((((0x2292dcab)AND(t1.c43)))OR(rt0.c2)))*(LOWER(x'')))) IS TRUE)  as count FROM vt1, t1, rt0 ORDER BY ((t1.c43)>=((t1.c1 IN (t1.c0, t1.c1)))));
SELECT ALL COUNT(*) FROM vt1, t1, rt0 WHERE (((((((0X2292dcab)AND(t1.c43)))OR(rt0.c2)))*(LOWER(x'')))) ORDER BY ((t1.c43)>=((t1.c1 IN (t1.c0, t1.c1))));
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE (((((CASE WHEN t1.c34 THEN rt0.c1 ELSE vt0.c0 END)AND(CASE rt0.c1  WHEN t1.c34 THEN vt0.c0 WHEN rt0.c0 THEN NULL WHEN t1.c43 THEN t1.c34 ELSE vt0.c0 END)))AND(rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN t1.c34 THEN rt0.c1 ELSE vt0.c0 END)AND(CASE rt0.c1  WHEN t1.c34 THEN vt0.c0 WHEN rt0.c0 THEN NULL WHEN t1.c43 THEN t1.c34 ELSE vt0.c0 END)))AND(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t1, rt0);
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE (((((CASE WHEN t1.c34 THEN rt0.c1 ELSE vt0.c0 END)AND(CASE rt0.c1  WHEN t1.c34 THEN vt0.c0 WHEN rt0.c0 THEN NULL WHEN t1.c43 THEN t1.c34 ELSE vt0.c0 END)))AND(rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN t1.c34 THEN rt0.c1 ELSE vt0.c0 END)AND(CASE rt0.c1  WHEN t1.c34 THEN vt0.c0 WHEN rt0.c0 THEN NULL WHEN t1.c43 THEN t1.c34 ELSE vt0.c0 END)))AND(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t1, rt0);
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE (((((CASE WHEN t1.c34 THEN rt0.c1 ELSE vt0.c0 END)AND(CASE rt0.c1  WHEN t1.c34 THEN vt0.c0 WHEN rt0.c0 THEN NULL WHEN t1.c43 THEN t1.c34 ELSE vt0.c0 END)))AND(rt0.c0 COLLATE BINARY)));
SELECT ALL * FROM t1, vt0 WHERE (UPPER(DISTINCT ((((((((vt0.c0)AND(vt0.c0)))AND(t1.c1)))OR(vt0.c0)))AND(t1.c34)))) ORDER BY ((highlight(vt0.c0, t1.c1, t1.c43, 0.9312130014705963))>=(CAST(t1.c34 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT ((((((((vt0.c0)AND(vt0.c0)))AND(t1.c1)))OR(vt0.c0)))AND(t1.c34)))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((highlight(vt0.c0, t1.c1, t1.c43, 0.9312130014705963))>=(CAST(t1.c34 AS INTEGER))));
SELECT ALL * FROM t1, vt0 WHERE (UPPER(DISTINCT ((((((((vt0.c0)AND(vt0.c0)))AND(t1.c1)))OR(vt0.c0)))AND(t1.c34)))) ORDER BY ((highlight(vt0.c0, t1.c1, t1.c43, 0.9312130014705963))>=(CAST(t1.c34 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT ((((((((vt0.c0)AND(vt0.c0)))AND(t1.c1)))OR(vt0.c0)))AND(t1.c34)))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((highlight(vt0.c0, t1.c1, t1.c43, 0.9312130014705963))>=(CAST(t1.c34 AS INTEGER))));
SELECT ALL * FROM t1, vt0 WHERE (UPPER(DISTINCT ((((((((vt0.c0)AND(vt0.c0)))AND(t1.c1)))OR(vt0.c0)))AND(t1.c34)))) ORDER BY ((highlight(vt0.c0, t1.c1, t1.c43, 0.9312130014705963))>=(CAST(t1.c34 AS INTEGER)));
SELECT COUNT(*) FROM vt0, t1 FULL OUTER JOIN rt0 ON (((t1.c43)+(t1.c43)) IN ()) INNER JOIN vt1 ON (+ (CASE WHEN t1.c1 THEN t1.c43 WHEN t1.c34 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END)) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, t1 FULL OUTER JOIN rt0 ON (((t1.c43)+(t1.c43)) IN ()) INNER JOIN vt1 ON (+ (CASE WHEN t1.c1 THEN t1.c43 WHEN t1.c34 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END)));
SELECT COUNT(*) FROM vt0, t1 FULL OUTER JOIN rt0 ON (((t1.c43)+(t1.c43)) IN ()) INNER JOIN vt1 ON (+ (CASE WHEN t1.c1 THEN t1.c43 WHEN t1.c34 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END)) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, t1 FULL OUTER JOIN rt0 ON (((t1.c43)+(t1.c43)) IN ()) INNER JOIN vt1 ON (+ (CASE WHEN t1.c1 THEN t1.c43 WHEN t1.c34 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END)));
SELECT COUNT(*) FROM vt0, t1 FULL OUTER JOIN rt0 ON (((t1.c43)+(t1.c43)) IN ()) INNER JOIN vt1 ON (+ (CASE WHEN t1.c1 THEN t1.c43 WHEN t1.c34 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END)) WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM t1 WHERE (((~ ('?&\n1&6')) IN (CASE WHEN t1.c0 THEN t1.c43 ELSE t1.c43 END))) ORDER BY t1.c34 DESC  NULLS LAST, t1.c34  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((~ ('?&\n1&6')) IN (CASE WHEN t1.c0 THEN t1.c43 ELSE t1.c43 END))) IS TRUE)  as count FROM t1 ORDER BY t1.c34 DESC  NULLS LAST, t1.c34  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (((~ ('?&\n1&6')) IN (CASE WHEN t1.c0 THEN t1.c43 ELSE t1.c43 END))) ORDER BY t1.c34 DESC  NULLS LAST, t1.c34  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((~ ('?&\n1&6')) IN (CASE WHEN t1.c0 THEN t1.c43 ELSE t1.c43 END))) IS TRUE)  as count FROM t1 ORDER BY t1.c34 DESC  NULLS LAST, t1.c34  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (((~ ('?&\n1&6')) IN (CASE WHEN t1.c0 THEN t1.c43 ELSE t1.c43 END))) ORDER BY t1.c34 DESC  NULLS LAST, t1.c34  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((((t1.c1 IN (t1.c34)))AND((~ (vt0.c0)))))OR((((t1.c0))>=(('')))))) ORDER BY ((((((t1.c1) NOTNULL))OR(((t1.c1) ISNULL))))OR((((t1.c43, t1.c0, t1.c43))<=((vt0.c0, vt0.c0, t1.c34))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c1 IN (t1.c34)))AND((~ (vt0.c0)))))OR((((t1.c0))>=(('')))))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((((t1.c1) NOTNULL))OR(((t1.c1) ISNULL))))OR((((t1.c43, t1.c0, t1.c43))<=((vt0.c0, vt0.c0, t1.c34))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((((t1.c1 IN (t1.c34)))AND((~ (vt0.c0)))))OR((((t1.c0))>=(('')))))) ORDER BY ((((((t1.c1) NOTNULL))OR(((t1.c1) ISNULL))))OR((((t1.c43, t1.c0, t1.c43))<=((vt0.c0, vt0.c0, t1.c34))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c1 IN (t1.c34)))AND((~ (vt0.c0)))))OR((((t1.c0))>=(('')))))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((((t1.c1) NOTNULL))OR(((t1.c1) ISNULL))))OR((((t1.c43, t1.c0, t1.c43))<=((vt0.c0, vt0.c0, t1.c34))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((((t1.c1 IN (t1.c34)))AND((~ (vt0.c0)))))OR((((t1.c0))>=(('')))))) ORDER BY ((((((t1.c1) NOTNULL))OR(((t1.c1) ISNULL))))OR((((t1.c43, t1.c0, t1.c43))<=((vt0.c0, vt0.c0, t1.c34))))) DESC  NULLS FIRST;
SELECT ALL * FROM vt1, t1 WHERE (((((t1.c0)|(t1.c43)))>=(((((((((t1.c43)AND(t1.c34)))AND(t1.c34)))OR(vt1.c0)))AND('9&zpw~W(w'))))) ORDER BY HEX(DISTINCT (NOT (t1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)|(t1.c43)))>=(((((((((t1.c43)AND(t1.c34)))AND(t1.c34)))OR(vt1.c0)))AND('9&zpw~W(w'))))) IS TRUE)  as count FROM vt1, t1 ORDER BY HEX(DISTINCT (NOT (t1.c0)))  NULLS FIRST);
SELECT ALL * FROM vt1, t1 WHERE (((((t1.c0)|(t1.c43)))>=(((((((((t1.c43)AND(t1.c34)))AND(t1.c34)))OR(vt1.c0)))AND('9&zpw~W(w'))))) ORDER BY HEX(DISTINCT (NOT (t1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)|(t1.c43)))>=(((((((((t1.c43)AND(t1.c34)))AND(t1.c34)))OR(vt1.c0)))AND('9&zpw~W(w'))))) IS TRUE)  as count FROM vt1, t1 ORDER BY HEX(DISTINCT (NOT (t1.c0)))  NULLS FIRST);
SELECT ALL * FROM vt1, t1 WHERE (((((t1.c0)|(t1.c43)))>=(((((((((t1.c43)AND(t1.c34)))AND(t1.c34)))OR(vt1.c0)))AND('9&zpw~W(w'))))) ORDER BY HEX(DISTINCT (NOT (t1.c0)))  NULLS FIRST;
SELECT ALL * FROM t1 INNER JOIN rt0 ON ((((CASE rt0.c2  WHEN t1.c43 THEN rt0.c2 ELSE rt0.c2 END)AND(((t1.c34) NOT BETWEEN (NULL) AND (t1.c34)))))OR(t1.c1)) WHERE (((((t1.c1)<=(t1.c34))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c1)<=(t1.c34))) NOT NULL)) IS TRUE)  as count FROM t1 NOT INDEXED INNER JOIN rt0 ON ((((CASE rt0.c2  WHEN t1.c43 THEN rt0.c2 ELSE rt0.c2 END)AND(((t1.c34) NOT BETWEEN (NULL) AND (t1.c34)))))OR(t1.c1)));
SELECT ALL * FROM t1 INNER JOIN rt0 ON ((((CASE rt0.c2  WHEN t1.c43 THEN rt0.c2 ELSE rt0.c2 END)AND(((t1.c34) NOT BETWEEN (NULL) AND (t1.c34)))))OR(t1.c1)) WHERE (((((t1.c1)<=(t1.c34))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c1)<=(t1.c34))) NOT NULL)) IS TRUE)  as count FROM t1 NOT INDEXED INNER JOIN rt0 ON ((((CASE rt0.c2  WHEN t1.c43 THEN rt0.c2 ELSE rt0.c2 END)AND(((t1.c34) NOT BETWEEN (NULL) AND (t1.c34)))))OR(t1.c1)));
SELECT ALL * FROM t1 INNER JOIN rt0 ON ((((CASE rt0.c2  WHEN t1.c43 THEN rt0.c2 ELSE rt0.c2 END)AND(((t1.c34) NOT BETWEEN (NULL) AND (t1.c34)))))OR(t1.c1)) WHERE (((((t1.c1)<=(t1.c34))) NOT NULL));
SELECT * FROM t1, vt0 WHERE (((((((t1.c43)LIKE(t1.c34)))OR(((t1.c1) NOT BETWEEN (NULL) AND (vt0.c0)))))OR(vt0.c0))) ORDER BY ((NULL)LIKE(t1.c1 COLLATE NOCASE)) ASC  NULLS LAST, RTRIM((((t1.c1)) NOT BETWEEN ((t1.c43)) AND ((NULL))))  NULLS FIRST, (((t1.c34 IN ())) NOT BETWEEN ((((t1.c43))>((vt0.c0)))) AND (CAST(t1.c1 AS REAL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t1.c43)LIKE(t1.c34)))OR(((t1.c1) NOT BETWEEN (NULL) AND (vt0.c0)))))OR(vt0.c0))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((NULL)LIKE(t1.c1 COLLATE NOCASE)) ASC  NULLS LAST, RTRIM((((t1.c1)) NOT BETWEEN ((t1.c43)) AND ((NULL))))  NULLS FIRST, (((t1.c34 IN ())) NOT BETWEEN ((((t1.c43))>((vt0.c0)))) AND (CAST(t1.c1 AS REAL))) ASC  NULLS LAST);
SELECT * FROM t1, vt0 WHERE (((((((t1.c43)LIKE(t1.c34)))OR(((t1.c1) NOT BETWEEN (NULL) AND (vt0.c0)))))OR(vt0.c0))) ORDER BY ((NULL)LIKE(t1.c1 COLLATE NOCASE)) ASC  NULLS LAST, RTRIM((((t1.c1)) NOT BETWEEN ((t1.c43)) AND ((NULL))))  NULLS FIRST, (((t1.c34 IN ())) NOT BETWEEN ((((t1.c43))>((vt0.c0)))) AND (CAST(t1.c1 AS REAL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t1.c43)LIKE(t1.c34)))OR(((t1.c1) NOT BETWEEN (NULL) AND (vt0.c0)))))OR(vt0.c0))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((NULL)LIKE(t1.c1 COLLATE NOCASE)) ASC  NULLS LAST, RTRIM((((t1.c1)) NOT BETWEEN ((t1.c43)) AND ((NULL))))  NULLS FIRST, (((t1.c34 IN ())) NOT BETWEEN ((((t1.c43))>((vt0.c0)))) AND (CAST(t1.c1 AS REAL))) ASC  NULLS LAST);
SELECT * FROM t1, vt0 WHERE (((((((t1.c43)LIKE(t1.c34)))OR(((t1.c1) NOT BETWEEN (NULL) AND (vt0.c0)))))OR(vt0.c0))) ORDER BY ((NULL)LIKE(t1.c1 COLLATE NOCASE)) ASC  NULLS LAST, RTRIM((((t1.c1)) NOT BETWEEN ((t1.c43)) AND ((NULL))))  NULLS FIRST, (((t1.c34 IN ())) NOT BETWEEN ((((t1.c43))>((vt0.c0)))) AND (CAST(t1.c1 AS REAL))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, t1 WHERE (((((t1.c34))>=(('-1328294548'))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c34))>=(('-1328294548'))) IN ())) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE (((((t1.c34))>=(('-1328294548'))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c34))>=(('-1328294548'))) IN ())) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE (((((t1.c34))>=(('-1328294548'))) IN ()));
SELECT COUNT(*) FROM t1 WHERE (((((((t1.c0)OR(t1.c1)))AND(0.3195638487702288)))IS NOT(CASE t1.c34  WHEN t1.c1 THEN t1.c1 ELSE t1.c43 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c0)OR(t1.c1)))AND(0.3195638487702288)))IS NOT(CASE t1.c34  WHEN t1.c1 THEN t1.c1 ELSE t1.c43 END))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((((t1.c0)OR(t1.c1)))AND(0.3195638487702288)))IS NOT(CASE t1.c34  WHEN t1.c1 THEN t1.c1 ELSE t1.c43 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c0)OR(t1.c1)))AND(0.3195638487702288)))IS NOT(CASE t1.c34  WHEN t1.c1 THEN t1.c1 ELSE t1.c43 END))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((((t1.c0)OR(t1.c1)))AND(0.3195638487702288)))IS NOT(CASE t1.c34  WHEN t1.c1 THEN t1.c1 ELSE t1.c43 END)));
SELECT * FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(NULL)))))OR(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(NULL)))))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(NULL)))))OR(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(NULL)))))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(NULL)))))OR(vt0.c0 COLLATE BINARY)));
SELECT * FROM t1 INNER JOIN rt0 ON (('')IS NOT(((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c1)))) FULL OUTER JOIN vt1 ON rt0.c2 WHERE (x'') ORDER BY (((ABS(DISTINCT t1.c43)))>(((rt0.c1 IN (rt0.c1, t1.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t1 INNER JOIN rt0 ON (('')IS NOT(((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c1)))) FULL OUTER JOIN vt1 ON rt0.c2 ORDER BY (((ABS(DISTINCT t1.c43)))>(((rt0.c1 IN (rt0.c1, t1.c0))))) ASC  NULLS FIRST);
SELECT * FROM t1 INNER JOIN rt0 ON (('')IS NOT(((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c1)))) FULL OUTER JOIN vt1 ON rt0.c2 WHERE (x'') ORDER BY (((ABS(DISTINCT t1.c43)))>(((rt0.c1 IN (rt0.c1, t1.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t1 INNER JOIN rt0 ON (('')IS NOT(((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c1)))) FULL OUTER JOIN vt1 ON rt0.c2 ORDER BY (((ABS(DISTINCT t1.c43)))>(((rt0.c1 IN (rt0.c1, t1.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE (((((rt0.c0)GLOB(rt0.c0)))LIKE((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)GLOB(rt0.c0)))LIKE((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE (((((rt0.c0)GLOB(rt0.c0)))LIKE((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)GLOB(rt0.c0)))LIKE((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE (((((rt0.c0)GLOB(rt0.c0)))LIKE((rt0.c1 IN ()))));
SELECT * FROM rt0, vt1, vt0, t1 WHERE (((0xffffffffe298e11f) IS TRUE)) ORDER BY LTRIM(CAST(rt0.c0 AS BLOB), ((0.6779214302400819) NOT BETWEEN (vt1.c0) AND (t1.c0)));
SELECT SUM(count) FROM (SELECT ((((0Xffffffffe298e11f) IS TRUE)) IS TRUE)  as count FROM rt0, vt1, vt0, t1 ORDER BY LTRIM(CAST(rt0.c0 AS BLOB), ((0.6779214302400819) NOT BETWEEN (vt1.c0) AND (t1.c0))));
SELECT * FROM rt0, vt1, vt0, t1 WHERE (((0xffffffffe298e11f) IS TRUE)) ORDER BY LTRIM(CAST(rt0.c0 AS BLOB), ((0.6779214302400819) NOT BETWEEN (vt1.c0) AND (t1.c0)));
SELECT SUM(count) FROM (SELECT ((((0Xffffffffe298e11f) IS TRUE)) IS TRUE)  as count FROM rt0, vt1, vt0, t1 ORDER BY LTRIM(CAST(rt0.c0 AS BLOB), ((0.6779214302400819) NOT BETWEEN (vt1.c0) AND (t1.c0))));
SELECT * FROM rt0, vt1, vt0, t1 WHERE (((0xffffffffe298e11f) IS TRUE)) ORDER BY LTRIM(CAST(rt0.c0 AS BLOB), ((0.6779214302400819) NOT BETWEEN (vt1.c0) AND (t1.c0)));
SELECT ALL * FROM t1 WHERE ((~ (t1.c43)));
SELECT SUM(count) FROM (SELECT ALL (((~ (t1.c43))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((~ (t1.c43)));
SELECT SUM(count) FROM (SELECT ALL (((~ (t1.c43))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((~ (t1.c43)));
SELECT ALL COUNT(*) FROM t1, vt1, vt0, rt0 WHERE ((((vt1.c0 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM t1, vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM t1, vt1, vt0, rt0 WHERE ((((vt1.c0 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM t1, vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM t1, vt1, vt0, rt0 WHERE ((((vt1.c0 IN ())) NOT NULL));
SELECT COUNT(*) FROM rt0 WHERE ((~ (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY (((('-34420710')LIKE(rt0.c0))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((('-34420710')LIKE(rt0.c0))) NOT NULL) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((~ (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY (((('-34420710')LIKE(rt0.c0))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((('-34420710')LIKE(rt0.c0))) NOT NULL) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((~ (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY (((('-34420710')LIKE(rt0.c0))) NOT NULL) ASC;
SELECT ALL * FROM vt1 WHERE ((vt1.c0 IN ())) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ())) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT ALL * FROM vt1 WHERE ((vt1.c0 IN ())) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ())) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT ALL * FROM vt1 WHERE ((vt1.c0 IN ())) ORDER BY vt1.c0;
SELECT * FROM vt0, t1 WHERE (((((((((((((vt0.c0 COLLATE BINARY)AND(((t1.c1)LIKE(vt0.c0)))))AND(((vt0.c0) NOT NULL))))OR(((NULL)GLOB(x'')))))OR(((t1.c1) IS FALSE))))OR(t1.c1 COLLATE NOCASE)))AND((t1.c1 IN ())))) ORDER BY ((CASE vt0.c0  WHEN t1.c34 THEN t1.c0 WHEN t1.c1 THEN 0.6530790511396378 WHEN t1.c43 THEN t1.c43 WHEN t1.c1 THEN t1.c0 WHEN t1.c43 THEN t1.c34 END) NOT BETWEEN (ABS(t1.c1)) AND ((+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt0.c0 COLLATE BINARY)AND(((t1.c1)LIKE(vt0.c0)))))AND(((vt0.c0) NOT NULL))))OR(((NULL)GLOB(x'')))))OR(((t1.c1) IS FALSE))))OR(t1.c1 COLLATE NOCASE)))AND((t1.c1 IN ())))) IS TRUE)  as count FROM vt0, t1 ORDER BY ((CASE vt0.c0  WHEN t1.c34 THEN t1.c0 WHEN t1.c1 THEN 0.6530790511396378 WHEN t1.c43 THEN t1.c43 WHEN t1.c1 THEN t1.c0 WHEN t1.c43 THEN t1.c34 END) NOT BETWEEN (ABS(t1.c1)) AND ((+ (vt0.c0)))));
SELECT * FROM vt0, t1 WHERE (((((((((((((vt0.c0 COLLATE BINARY)AND(((t1.c1)LIKE(vt0.c0)))))AND(((vt0.c0) NOT NULL))))OR(((NULL)GLOB(x'')))))OR(((t1.c1) IS FALSE))))OR(t1.c1 COLLATE NOCASE)))AND((t1.c1 IN ())))) ORDER BY ((CASE vt0.c0  WHEN t1.c34 THEN t1.c0 WHEN t1.c1 THEN 0.6530790511396378 WHEN t1.c43 THEN t1.c43 WHEN t1.c1 THEN t1.c0 WHEN t1.c43 THEN t1.c34 END) NOT BETWEEN (ABS(t1.c1)) AND ((+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt0.c0 COLLATE BINARY)AND(((t1.c1)LIKE(vt0.c0)))))AND(((vt0.c0) NOT NULL))))OR(((NULL)GLOB(x'')))))OR(((t1.c1) IS FALSE))))OR(t1.c1 COLLATE NOCASE)))AND((t1.c1 IN ())))) IS TRUE)  as count FROM vt0, t1 ORDER BY ((CASE vt0.c0  WHEN t1.c34 THEN t1.c0 WHEN t1.c1 THEN 0.6530790511396378 WHEN t1.c43 THEN t1.c43 WHEN t1.c1 THEN t1.c0 WHEN t1.c43 THEN t1.c34 END) NOT BETWEEN (ABS(t1.c1)) AND ((+ (vt0.c0)))));
SELECT * FROM vt0, t1 WHERE (((((((((((((vt0.c0 COLLATE BINARY)AND(((t1.c1)LIKE(vt0.c0)))))AND(((vt0.c0) NOT NULL))))OR(((NULL)GLOB(x'')))))OR(((t1.c1) IS FALSE))))OR(t1.c1 COLLATE NOCASE)))AND((t1.c1 IN ())))) ORDER BY ((CASE vt0.c0  WHEN t1.c34 THEN t1.c0 WHEN t1.c1 THEN 0.6530790511396378 WHEN t1.c43 THEN t1.c43 WHEN t1.c1 THEN t1.c0 WHEN t1.c43 THEN t1.c34 END) NOT BETWEEN (ABS(t1.c1)) AND ((+ (vt0.c0))));
SELECT COUNT(*) FROM t1, vt1 WHERE (highlight(CASE WHEN t1.c0 THEN t1.c34 END, (~ (vt1.c0)), (((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c34))), LIKELY(t1.c43)));
SELECT SUM(count) FROM (SELECT ((highlight(CASE WHEN t1.c0 THEN t1.c34 END, (~ (vt1.c0)), (((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c34))), LIKELY(t1.c43))) IS TRUE)  as count FROM t1, vt1);
SELECT COUNT(*) FROM t1, vt1 WHERE (highlight(CASE WHEN t1.c0 THEN t1.c34 END, (~ (vt1.c0)), (((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c34))), LIKELY(t1.c43)));
SELECT SUM(count) FROM (SELECT ((highlight(CASE WHEN t1.c0 THEN t1.c34 END, (~ (vt1.c0)), (((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c34))), LIKELY(t1.c43))) IS TRUE)  as count FROM t1, vt1);
SELECT COUNT(*) FROM rt0 WHERE ('#UCé®P') ORDER BY ((((((((((((((rt0.c2)AND(NULL)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))|((+ (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('#UCé®P') IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY ((((((((((((((rt0.c2)AND(NULL)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))|((+ (rt0.c2)))) DESC);
SELECT COUNT(*) FROM rt0 WHERE ('#UCé®P') ORDER BY ((((((((((((((rt0.c2)AND(NULL)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))|((+ (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('#UCé®P') IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY ((((((((((((((rt0.c2)AND(NULL)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))|((+ (rt0.c2)))) DESC);
SELECT COUNT(*) FROM rt0 WHERE ('#UCé®P') ORDER BY ((((((((((((((rt0.c2)AND(NULL)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))|((+ (rt0.c2)))) DESC;
SELECT ALL * FROM t1 RIGHT OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN t1.c1 WHEN x'' THEN t1.c34 END) BETWEEN (NULL) AND (((((((((0.5897047361243455)AND(t1.c1)))OR(x'')))AND(t1.c43)))OR(t1.c43)))) WHERE ((NOT ((+ (t1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((+ (t1.c0))))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN t1.c1 WHEN x'' THEN t1.c34 END) BETWEEN (NULL) AND (((((((((0.5897047361243455)AND(t1.c1)))OR(x'')))AND(t1.c43)))OR(t1.c43)))));
SELECT ALL * FROM t1 RIGHT OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN t1.c1 WHEN x'' THEN t1.c34 END) BETWEEN (NULL) AND (((((((((0.5897047361243455)AND(t1.c1)))OR(x'')))AND(t1.c43)))OR(t1.c43)))) WHERE ((NOT ((+ (t1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((+ (t1.c0))))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN t1.c1 WHEN x'' THEN t1.c34 END) BETWEEN (NULL) AND (((((((((0.5897047361243455)AND(t1.c1)))OR(x'')))AND(t1.c43)))OR(t1.c43)))));
SELECT ALL * FROM t1 RIGHT OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN t1.c1 WHEN x'' THEN t1.c34 END) BETWEEN (NULL) AND (((((((((0.5897047361243455)AND(t1.c1)))OR(x'')))AND(t1.c43)))OR(t1.c43)))) WHERE ((NOT ((+ (t1.c0)))));
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((t1.c43)*(t1.c43)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c43)*(t1.c43)) COLLATE NOCASE) IS TRUE)  as count FROM t1, rt0);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((t1.c43)*(t1.c43)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c43)*(t1.c43)) COLLATE NOCASE) IS TRUE)  as count FROM t1, rt0);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((t1.c43)*(t1.c43)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt1 WHERE ((NOT (LIKELIHOOD(DISTINCT vt1.c0, 0.8943949354510898)))) ORDER BY ((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL ELSE vt1.c0 END)OR(NULL)))AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ASC  NULLS LAST, (((((vt1.c0 IN ()))AND(0.9299901733515265)))AND(((vt1.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT (((NOT (LIKELIHOOD(DISTINCT vt1.c0, 0.8943949354510898)))) IS TRUE)  as count FROM vt1 ORDER BY ((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL ELSE vt1.c0 END)OR(NULL)))AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ASC  NULLS LAST, (((((vt1.c0 IN ()))AND(0.9299901733515265)))AND(((vt1.c0) NOTNULL))));
SELECT COUNT(*) FROM vt1 WHERE ((NOT (LIKELIHOOD(DISTINCT vt1.c0, 0.8943949354510898)))) ORDER BY ((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL ELSE vt1.c0 END)OR(NULL)))AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ASC  NULLS LAST, (((((vt1.c0 IN ()))AND(0.9299901733515265)))AND(((vt1.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT (((NOT (LIKELIHOOD(DISTINCT vt1.c0, 0.8943949354510898)))) IS TRUE)  as count FROM vt1 ORDER BY ((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL ELSE vt1.c0 END)OR(NULL)))AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ASC  NULLS LAST, (((((vt1.c0 IN ()))AND(0.9299901733515265)))AND(((vt1.c0) NOTNULL))));
SELECT COUNT(*) FROM vt1 WHERE (((LAST_INSERT_ROWID())OR(CAST(x'dfb5' AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((LAST_INSERT_ROWID())OR(CAST(x'dfb5' AS NUMERIC)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((LAST_INSERT_ROWID())OR(CAST(x'dfb5' AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((LAST_INSERT_ROWID())OR(CAST(x'dfb5' AS NUMERIC)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((LAST_INSERT_ROWID())OR(CAST(x'dfb5' AS NUMERIC))));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY '-1859771433' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY '-1859771433' DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY '-1859771433' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY '-1859771433' DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY '-1859771433' DESC  NULLS FIRST;
SELECT * FROM vt1, t1 WHERE (((((((NULL)OR(t1.c34)))OR(t1.c34))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)OR(t1.c34)))OR(t1.c34))) NOTNULL)) IS TRUE)  as count FROM vt1, t1);
SELECT * FROM vt1, t1 WHERE (((((((NULL)OR(t1.c34)))OR(t1.c34))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)OR(t1.c34)))OR(t1.c34))) NOTNULL)) IS TRUE)  as count FROM vt1, t1);
SELECT * FROM vt1, t1 WHERE (((((((NULL)OR(t1.c34)))OR(t1.c34))) NOTNULL));
SELECT ALL * FROM t1, vt1 LEFT OUTER JOIN vt0 ON ((load_extension(rt0.c1, vt1.c0))<(((t1.c34) BETWEEN (rt0.c0) AND (rt0.c1)))) CROSS JOIN rt0 ON (((((t1.c34)) NOT BETWEEN ((rt0.c2)) AND ((t1.c34)))) NOTNULL) WHERE (((((vt0.c0) IS TRUE)) BETWEEN (((rt0.c2)<=(vt1.c0))) AND ((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE)) BETWEEN (((rt0.c2)<=(vt1.c0))) AND ((~ (vt0.c0))))) IS TRUE)  as count FROM t1, vt1 LEFT OUTER JOIN vt0 ON ((load_extension(rt0.c1, vt1.c0))<(((t1.c34) BETWEEN (rt0.c0) AND (rt0.c1)))) CROSS JOIN rt0 ON (((((t1.c34)) NOT BETWEEN ((rt0.c2)) AND ((t1.c34)))) NOTNULL));
SELECT ALL * FROM t1, vt1 LEFT OUTER JOIN vt0 ON ((load_extension(rt0.c1, vt1.c0))<(((t1.c34) BETWEEN (rt0.c0) AND (rt0.c1)))) CROSS JOIN rt0 ON (((((t1.c34)) NOT BETWEEN ((rt0.c2)) AND ((t1.c34)))) NOTNULL) WHERE (((((vt0.c0) IS TRUE)) BETWEEN (((rt0.c2)<=(vt1.c0))) AND ((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE)) BETWEEN (((rt0.c2)<=(vt1.c0))) AND ((~ (vt0.c0))))) IS TRUE)  as count FROM t1, vt1 LEFT OUTER JOIN vt0 ON ((load_extension(rt0.c1, vt1.c0))<(((t1.c34) BETWEEN (rt0.c0) AND (rt0.c1)))) CROSS JOIN rt0 ON (((((t1.c34)) NOT BETWEEN ((rt0.c2)) AND ((t1.c34)))) NOTNULL));
SELECT COUNT(*) FROM t1, rt0 WHERE ((((((0xfffffffff92c6d3d)|(NULL))))<>(('j{Z&'))));
SELECT SUM(count) FROM (SELECT ALL (((((((0xfffffffff92c6d3d)|(NULL))))<>(('j{Z&')))) IS TRUE)  as count FROM t1, rt0);
SELECT COUNT(*) FROM t1, rt0 WHERE ((((((0xfffffffff92c6d3d)|(NULL))))<>(('j{Z&'))));
SELECT SUM(count) FROM (SELECT ALL (((((((0xfffffffff92c6d3d)|(NULL))))<>(('j{Z&')))) IS TRUE)  as count FROM t1, rt0);
SELECT COUNT(*) FROM t1, rt0 WHERE ((((((0xfffffffff92c6d3d)|(NULL))))<>(('j{Z&'))));
SELECT COUNT(*) FROM vt1 NATURAL JOIN t1 WHERE (CASE CAST(t1.c1 AS BLOB)  WHEN (vt1.c0 IN ()) THEN CAST(x'' AS INTEGER) ELSE ((t1.c43) BETWEEN (t1.c34) AND (t1.c43)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(t1.c1 AS BLOB)  WHEN (vt1.c0 IN ()) THEN CAST(x'' AS INTEGER) ELSE ((t1.c43) BETWEEN (t1.c34) AND (t1.c43)) END) IS TRUE)  as count FROM vt1 NATURAL JOIN t1);
SELECT COUNT(*) FROM vt1 NATURAL JOIN t1 WHERE (CASE CAST(t1.c1 AS BLOB)  WHEN (vt1.c0 IN ()) THEN CAST(x'' AS INTEGER) ELSE ((t1.c43) BETWEEN (t1.c34) AND (t1.c43)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(t1.c1 AS BLOB)  WHEN (vt1.c0 IN ()) THEN CAST(x'' AS INTEGER) ELSE ((t1.c43) BETWEEN (t1.c34) AND (t1.c43)) END) IS TRUE)  as count FROM vt1 NATURAL JOIN t1);
SELECT COUNT(*) FROM vt1 NATURAL JOIN t1 WHERE (CASE CAST(t1.c1 AS BLOB)  WHEN (vt1.c0 IN ()) THEN CAST(x'' AS INTEGER) ELSE ((t1.c43) BETWEEN (t1.c34) AND (t1.c43)) END);
SELECT * FROM vt1, vt0, t1, rt0 WHERE (CASE WHEN vt1.c0 THEN ((NULL)LIKE('0.39907765964204933')) ELSE CASE WHEN vt0.c0 THEN 0.7663273829133603 WHEN rt0.c0 THEN t1.c1 WHEN rt0.c2 THEN rt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c0 THEN ((NULL)LIKE('0.39907765964204933')) ELSE CASE WHEN vt0.c0 THEN 0.7663273829133603 WHEN rt0.c0 THEN t1.c1 WHEN rt0.c2 THEN rt0.c0 END END) IS TRUE)  as count FROM vt1, vt0, t1, rt0);
SELECT * FROM vt1, vt0, t1, rt0 WHERE (CASE WHEN vt1.c0 THEN ((NULL)LIKE('0.39907765964204933')) ELSE CASE WHEN vt0.c0 THEN 0.7663273829133603 WHEN rt0.c0 THEN t1.c1 WHEN rt0.c2 THEN rt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c0 THEN ((NULL)LIKE('0.39907765964204933')) ELSE CASE WHEN vt0.c0 THEN 0.7663273829133603 WHEN rt0.c0 THEN t1.c1 WHEN rt0.c2 THEN rt0.c0 END END) IS TRUE)  as count FROM vt1, vt0, t1, rt0);
SELECT * FROM vt1, vt0, t1, rt0 WHERE (CASE WHEN vt1.c0 THEN ((NULL)LIKE('0.39907765964204933')) ELSE CASE WHEN vt0.c0 THEN 0.7663273829133603 WHEN rt0.c0 THEN t1.c1 WHEN rt0.c2 THEN rt0.c0 END END);
SELECT ALL * FROM vt1, t1, rt0 FULL OUTER JOIN vt0 ON (NOT (t1.c1)) COLLATE NOCASE WHERE (UNLIKELY(DISTINCT COALESCE(DISTINCT vt0.c0, rt0.c0, t1.c43, rt0.c2))) ORDER BY CASE WHEN ((((((((rt0.c1)AND(t1.c1)))AND(vt1.c0)))OR(t1.c43)))OR(rt0.c0)) THEN ((t1.c1)>=(vt1.c0)) WHEN (((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((t1.c34))) THEN ((((((((t1.c0)OR(t1.c0)))OR(vt1.c0)))AND(vt0.c0)))AND(x'')) WHEN t1.c0 COLLATE RTRIM THEN '1408790873' END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT COALESCE(DISTINCT vt0.c0, rt0.c0, t1.c43, rt0.c2))) IS TRUE)  as count FROM vt1, t1, rt0 FULL OUTER JOIN vt0 ON (NOT (t1.c1)) COLLATE NOCASE ORDER BY CASE WHEN ((((((((rt0.c1)AND(t1.c1)))AND(vt1.c0)))OR(t1.c43)))OR(rt0.c0)) THEN ((t1.c1)>=(vt1.c0)) WHEN (((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((t1.c34))) THEN ((((((((t1.c0)OR(t1.c0)))OR(vt1.c0)))AND(vt0.c0)))AND(x'')) WHEN t1.c0 COLLATE RTRIM THEN '1408790873' END  NULLS FIRST);
SELECT ALL * FROM vt1, t1, rt0 FULL OUTER JOIN vt0 ON (NOT (t1.c1)) COLLATE NOCASE WHERE (UNLIKELY(DISTINCT COALESCE(DISTINCT vt0.c0, rt0.c0, t1.c43, rt0.c2))) ORDER BY CASE WHEN ((((((((rt0.c1)AND(t1.c1)))AND(vt1.c0)))OR(t1.c43)))OR(rt0.c0)) THEN ((t1.c1)>=(vt1.c0)) WHEN (((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((t1.c34))) THEN ((((((((t1.c0)OR(t1.c0)))OR(vt1.c0)))AND(vt0.c0)))AND(x'')) WHEN t1.c0 COLLATE RTRIM THEN '1408790873' END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT COALESCE(DISTINCT vt0.c0, rt0.c0, t1.c43, rt0.c2))) IS TRUE)  as count FROM vt1, t1, rt0 FULL OUTER JOIN vt0 ON (NOT (t1.c1)) COLLATE NOCASE ORDER BY CASE WHEN ((((((((rt0.c1)AND(t1.c1)))AND(vt1.c0)))OR(t1.c43)))OR(rt0.c0)) THEN ((t1.c1)>=(vt1.c0)) WHEN (((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((t1.c34))) THEN ((((((((t1.c0)OR(t1.c0)))OR(vt1.c0)))AND(vt0.c0)))AND(x'')) WHEN t1.c0 COLLATE RTRIM THEN '1408790873' END  NULLS FIRST);
SELECT ALL * FROM vt1, t1, rt0 FULL OUTER JOIN vt0 ON (NOT (t1.c1)) COLLATE NOCASE WHERE (UNLIKELY(DISTINCT COALESCE(DISTINCT vt0.c0, rt0.c0, t1.c43, rt0.c2))) ORDER BY CASE WHEN ((((((((rt0.c1)AND(t1.c1)))AND(vt1.c0)))OR(t1.c43)))OR(rt0.c0)) THEN ((t1.c1)>=(vt1.c0)) WHEN (((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((t1.c34))) THEN ((((((((t1.c0)OR(t1.c0)))OR(vt1.c0)))AND(vt0.c0)))AND(x'')) WHEN t1.c0 COLLATE RTRIM THEN '1408790873' END  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE (((t1.c43)<>(rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c43)!=(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE (((t1.c43)<>(rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c43)!=(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE (((t1.c43)<>(rt0.c1)) COLLATE NOCASE);
SELECT * FROM t1 WHERE (((x'')||(CASE t1.c1  WHEN t1.c1 THEN t1.c43 ELSE t1.c34 END)));
SELECT SUM(count) FROM (SELECT ((((x'')||(CASE t1.c1  WHEN t1.c1 THEN t1.c43 ELSE t1.c34 END))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((x'')||(CASE t1.c1  WHEN t1.c1 THEN t1.c43 ELSE t1.c34 END)));
SELECT SUM(count) FROM (SELECT ((((x'')||(CASE t1.c1  WHEN t1.c1 THEN t1.c43 ELSE t1.c34 END))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((x'')||(CASE t1.c1  WHEN t1.c1 THEN t1.c43 ELSE t1.c34 END)));
SELECT ALL * FROM vt1 WHERE ((- (0.11704409939633853 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((- (0.11704409939633853 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((- (0.11704409939633853 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((- (0.11704409939633853 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((- (0.11704409939633853 COLLATE NOCASE)));
SELECT * FROM vt0, rt0 WHERE ((((- (rt0.c1))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND (CAST(rt0.c2 AS REAL)))) ORDER BY CAST(rt0.c1 AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c1))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND (CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(rt0.c1 AS TEXT) ASC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE ((((- (rt0.c1))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND (CAST(rt0.c2 AS REAL)))) ORDER BY CAST(rt0.c1 AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c1))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND (CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(rt0.c1 AS TEXT) ASC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE ((((- (rt0.c1))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND (CAST(rt0.c2 AS REAL)))) ORDER BY CAST(rt0.c1 AS TEXT) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (NULL COLLATE BINARY) ORDER BY 0.08821745870997921;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY 0.08821745870997921);
SELECT COUNT(*) FROM vt0 WHERE (NULL COLLATE BINARY) ORDER BY 0.08821745870997921;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY 0.08821745870997921);
SELECT COUNT(*) FROM vt0 WHERE (NULL COLLATE BINARY) ORDER BY 0.08821745870997921;
SELECT ALL * FROM t1 LEFT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS BLOB)) IS TRUE) WHERE ((((~ ('')))IS NOT(x'')));
SELECT SUM(count) FROM (SELECT (((((~ ('')))IS NOT(x''))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS BLOB)) IS TRUE));
SELECT ALL * FROM t1 LEFT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS BLOB)) IS TRUE) WHERE ((((~ ('')))IS NOT(x'')));
SELECT SUM(count) FROM (SELECT (((((~ ('')))IS NOT(x''))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS BLOB)) IS TRUE));
SELECT ALL * FROM t1 LEFT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS BLOB)) IS TRUE) WHERE ((((~ ('')))IS NOT(x'')));
SELECT COUNT(*) FROM vt0 WHERE ((NOT ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT ((+ (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON (NOT (rt0.c0 COLLATE RTRIM)) LEFT OUTER JOIN t1 ON (t1.c34 IN ()) COLLATE BINARY LEFT OUTER JOIN vt0 ON ((rt0.c2)-(t1.c1)) COLLATE BINARY WHERE (((((((rt0.c0) BETWEEN (t1.c34) AND (rt0.c2)))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))AND(vt1.c0))) ORDER BY ((((t1.c34)AND(((t1.c0)&(t1.c34)))))OR(CASE WHEN vt0.c0 THEN NULL WHEN rt0.c1 THEN 675653690 WHEN t1.c34 THEN rt0.c0 ELSE vt1.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) BETWEEN (t1.c34) AND (rt0.c2)))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))AND(vt1.c0))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON (NOT (rt0.c0 COLLATE RTRIM)) LEFT OUTER JOIN t1 ON (t1.c34 IN ()) COLLATE BINARY LEFT OUTER JOIN vt0 ON ((rt0.c2)-(t1.c1)) COLLATE BINARY ORDER BY ((((t1.c34)AND(((t1.c0)&(t1.c34)))))OR(CASE WHEN vt0.c0 THEN NULL WHEN rt0.c1 THEN 675653690 WHEN t1.c34 THEN rt0.c0 ELSE vt1.c0 END)) ASC);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON (NOT (rt0.c0 COLLATE RTRIM)) LEFT OUTER JOIN t1 ON (t1.c34 IN ()) COLLATE BINARY LEFT OUTER JOIN vt0 ON ((rt0.c2)-(t1.c1)) COLLATE BINARY WHERE (((((((rt0.c0) BETWEEN (t1.c34) AND (rt0.c2)))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))AND(vt1.c0))) ORDER BY ((((t1.c34)AND(((t1.c0)&(t1.c34)))))OR(CASE WHEN vt0.c0 THEN NULL WHEN rt0.c1 THEN 675653690 WHEN t1.c34 THEN rt0.c0 ELSE vt1.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) BETWEEN (t1.c34) AND (rt0.c2)))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))AND(vt1.c0))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON (NOT (rt0.c0 COLLATE RTRIM)) LEFT OUTER JOIN t1 ON (t1.c34 IN ()) COLLATE BINARY LEFT OUTER JOIN vt0 ON ((rt0.c2)-(t1.c1)) COLLATE BINARY ORDER BY ((((t1.c34)AND(((t1.c0)&(t1.c34)))))OR(CASE WHEN vt0.c0 THEN NULL WHEN rt0.c1 THEN 675653690 WHEN t1.c34 THEN rt0.c0 ELSE vt1.c0 END)) ASC);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON (NOT (rt0.c0 COLLATE RTRIM)) LEFT OUTER JOIN t1 ON (t1.c34 IN ()) COLLATE BINARY LEFT OUTER JOIN vt0 ON ((rt0.c2)-(t1.c1)) COLLATE BINARY WHERE (((((((rt0.c0) BETWEEN (t1.c34) AND (rt0.c2)))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))AND(vt1.c0))) ORDER BY ((((t1.c34)AND(((t1.c0)&(t1.c34)))))OR(CASE WHEN vt0.c0 THEN NULL WHEN rt0.c1 THEN 675653690 WHEN t1.c34 THEN rt0.c0 ELSE vt1.c0 END)) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY (((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c1))))<>((rt0.c1 COLLATE RTRIM))) DESC, ((((+ (rt0.c0)), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)), CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END))==((x'', (~ (rt0.c2)), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))))  NULLS LAST, ABS((rt0.c1 IN (rt0.c1, NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY (((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c1))))!=((rt0.c1 COLLATE RTRIM))) DESC, ((((+ (rt0.c0)), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)), CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END))=((x'', (~ (rt0.c2)), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))))  NULLS LAST, ABS((rt0.c1 IN (rt0.c1, NULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY (((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c1))))<>((rt0.c1 COLLATE RTRIM))) DESC, ((((+ (rt0.c0)), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)), CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END))==((x'', (~ (rt0.c2)), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))))  NULLS LAST, ABS((rt0.c1 IN (rt0.c1, NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY (((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c1))))!=((rt0.c1 COLLATE RTRIM))) DESC, ((((+ (rt0.c0)), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)), CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END))=((x'', (~ (rt0.c2)), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))))  NULLS LAST, ABS((rt0.c1 IN (rt0.c1, NULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY (((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c1))))<>((rt0.c1 COLLATE RTRIM))) DESC, ((((+ (rt0.c0)), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)), CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END))==((x'', (~ (rt0.c2)), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))))  NULLS LAST, ABS((rt0.c1 IN (rt0.c1, NULL)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t1 INNER JOIN vt1 ON ((CAST(rt0.c0 AS BLOB)) NOT NULL) CROSS JOIN vt0 ON ((SQLITE_COMPILEOPTION_USED(vt1.c0))||(((t1.c1)GLOB(t1.c34)))) WHERE (CASE WHEN CAST(t1.c43 AS REAL) THEN ((((((((rt0.c1)OR(rt0.c1)))OR(t1.c34)))OR(vt0.c0)))AND(vt1.c0)) END) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(t1.c43 AS REAL) THEN ((((((((rt0.c1)OR(rt0.c1)))OR(t1.c34)))OR(vt0.c0)))AND(vt1.c0)) END) IS TRUE)  as count FROM rt0, t1 INNER JOIN vt1 ON ((CAST(rt0.c0 AS BLOB)) NOT NULL) CROSS JOIN vt0 ON ((SQLITE_COMPILEOPTION_USED(vt1.c0))||(((t1.c1)GLOB(t1.c34)))) ORDER BY NULL  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t1 INNER JOIN vt1 ON ((CAST(rt0.c0 AS BLOB)) NOT NULL) CROSS JOIN vt0 ON ((SQLITE_COMPILEOPTION_USED(vt1.c0))||(((t1.c1)GLOB(t1.c34)))) WHERE (CASE WHEN CAST(t1.c43 AS REAL) THEN ((((((((rt0.c1)OR(rt0.c1)))OR(t1.c34)))OR(vt0.c0)))AND(vt1.c0)) END) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(t1.c43 AS REAL) THEN ((((((((rt0.c1)OR(rt0.c1)))OR(t1.c34)))OR(vt0.c0)))AND(vt1.c0)) END) IS TRUE)  as count FROM rt0, t1 INNER JOIN vt1 ON ((CAST(rt0.c0 AS BLOB)) NOT NULL) CROSS JOIN vt0 ON ((SQLITE_COMPILEOPTION_USED(vt1.c0))||(((t1.c1)GLOB(t1.c34)))) ORDER BY NULL  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t1 INNER JOIN vt1 ON ((CAST(rt0.c0 AS BLOB)) NOT NULL) CROSS JOIN vt0 ON ((SQLITE_COMPILEOPTION_USED(vt1.c0))||(((t1.c1)GLOB(t1.c34)))) WHERE (CASE WHEN CAST(t1.c43 AS REAL) THEN ((((((((rt0.c1)OR(rt0.c1)))OR(t1.c34)))OR(vt0.c0)))AND(vt1.c0)) END) ORDER BY NULL  NULLS LAST;
SELECT ALL * FROM vt1, vt0, t1 WHERE (CASE NULL  WHEN CAST(t1.c43 AS NUMERIC) THEN (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c34))) ELSE ((t1.c43)LIKE(0.6746255810505296)) END) ORDER BY ((0.8347085538881988 COLLATE BINARY) BETWEEN (((vt1.c0) NOT BETWEEN (t1.c1) AND (t1.c1))) AND ((t1.c34 IN (t1.c1, t1.c1)))) ASC  NULLS FIRST, ((((t1.c43))!=((t1.c1))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN CAST(t1.c43 AS NUMERIC) THEN (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c34))) ELSE ((t1.c43)LIKE(0.6746255810505296)) END) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY ((0.8347085538881988 COLLATE BINARY) BETWEEN (((vt1.c0) NOT BETWEEN (t1.c1) AND (t1.c1))) AND ((t1.c34 IN (t1.c1, t1.c1)))) ASC  NULLS FIRST, ((((t1.c43))<>((t1.c1))) IN ())  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, t1 WHERE (CASE NULL  WHEN CAST(t1.c43 AS NUMERIC) THEN (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c34))) ELSE ((t1.c43)LIKE(0.6746255810505296)) END) ORDER BY ((0.8347085538881988 COLLATE BINARY) BETWEEN (((vt1.c0) NOT BETWEEN (t1.c1) AND (t1.c1))) AND ((t1.c34 IN (t1.c1, t1.c1)))) ASC  NULLS FIRST, ((((t1.c43))!=((t1.c1))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN CAST(t1.c43 AS NUMERIC) THEN (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c34))) ELSE ((t1.c43)LIKE(0.6746255810505296)) END) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY ((0.8347085538881988 COLLATE BINARY) BETWEEN (((vt1.c0) NOT BETWEEN (t1.c1) AND (t1.c1))) AND ((t1.c34 IN (t1.c1, t1.c1)))) ASC  NULLS FIRST, ((((t1.c43))<>((t1.c1))) IN ())  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, t1 WHERE (CASE NULL  WHEN CAST(t1.c43 AS NUMERIC) THEN (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c34))) ELSE ((t1.c43)LIKE(0.6746255810505296)) END) ORDER BY ((0.8347085538881988 COLLATE BINARY) BETWEEN (((vt1.c0) NOT BETWEEN (t1.c1) AND (t1.c1))) AND ((t1.c34 IN (t1.c1, t1.c1)))) ASC  NULLS FIRST, ((((t1.c43))!=((t1.c1))) IN ())  NULLS FIRST;
SELECT * FROM rt0 CROSS JOIN vt0 ON (((x''))=(((((t1.c43)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) FULL OUTER JOIN t1 ON ((vt0.c0)&(((t1.c1)<(rt0.c2)))) FULL OUTER JOIN vt1 ON ((0Xffffffffe295ddf8)IS((~ (t1.c43)))) WHERE (((t1.c34) IS FALSE) COLLATE RTRIM) ORDER BY CASE TRIM(DISTINCT '-', vt1.c0)  WHEN CASE rt0.c0  WHEN rt0.c2 THEN t1.c43 END THEN ((-195576287)IS(rt0.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c34) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((x''))=(((((t1.c43)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) FULL OUTER JOIN t1 ON ((vt0.c0)&(((t1.c1)<(rt0.c2)))) FULL OUTER JOIN vt1 ON ((0xffffffffe295ddf8)IS((~ (t1.c43)))) ORDER BY CASE TRIM(DISTINCT '-', vt1.c0)  WHEN CASE rt0.c0  WHEN rt0.c2 THEN t1.c43 END THEN ((-195576287)IS(rt0.c1)) END DESC  NULLS LAST);
SELECT * FROM rt0 CROSS JOIN vt0 ON (((x''))=(((((t1.c43)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) FULL OUTER JOIN t1 ON ((vt0.c0)&(((t1.c1)<(rt0.c2)))) FULL OUTER JOIN vt1 ON ((0Xffffffffe295ddf8)IS((~ (t1.c43)))) WHERE (((t1.c34) IS FALSE) COLLATE RTRIM) ORDER BY CASE TRIM(DISTINCT '-', vt1.c0)  WHEN CASE rt0.c0  WHEN rt0.c2 THEN t1.c43 END THEN ((-195576287)IS(rt0.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c34) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((x''))=(((((t1.c43)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) FULL OUTER JOIN t1 ON ((vt0.c0)&(((t1.c1)<(rt0.c2)))) FULL OUTER JOIN vt1 ON ((0xffffffffe295ddf8)IS((~ (t1.c43)))) ORDER BY CASE TRIM(DISTINCT '-', vt1.c0)  WHEN CASE rt0.c0  WHEN rt0.c2 THEN t1.c43 END THEN ((-195576287)IS(rt0.c1)) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, t1, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0, t1, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, t1, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0, t1, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, t1, vt1 WHERE (NULL);
SELECT * FROM vt0, rt0, vt1, t1 WHERE ((((((vt0.c0))>((t1.c43))))>(((((rt0.c0)OR(rt0.c0)))OR(rt0.c0))))) ORDER BY rt0.c0 ASC  NULLS LAST, ((((vt1.c0)/(t1.c0)))GLOB(rt0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))>((t1.c43))))>(((((rt0.c0)OR(rt0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, vt1, t1 ORDER BY rt0.c0 ASC  NULLS LAST, ((((vt1.c0)/(t1.c0)))GLOB(rt0.c0)) ASC  NULLS LAST);
SELECT * FROM vt0, rt0, vt1, t1 WHERE ((((((vt0.c0))>((t1.c43))))>(((((rt0.c0)OR(rt0.c0)))OR(rt0.c0))))) ORDER BY rt0.c0 ASC  NULLS LAST, ((((vt1.c0)/(t1.c0)))GLOB(rt0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))>((t1.c43))))>(((((rt0.c0)OR(rt0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, vt1, t1 ORDER BY rt0.c0 ASC  NULLS LAST, ((((vt1.c0)/(t1.c0)))GLOB(rt0.c0)) ASC  NULLS LAST);
SELECT * FROM vt0, rt0, vt1, t1 WHERE ((((((vt0.c0))>((t1.c43))))>(((((rt0.c0)OR(rt0.c0)))OR(rt0.c0))))) ORDER BY rt0.c0 ASC  NULLS LAST, ((((vt1.c0)/(t1.c0)))GLOB(rt0.c0)) ASC  NULLS LAST;
SELECT * FROM t1, rt0 NOT INDEXED INNER JOIN vt1 ON ((json_object(rt0.c0, rt0.c1))IS NOT(((vt1.c0)>=(rt0.c1)))) WHERE ((NOT (rt0.c0 COLLATE BINARY))) ORDER BY (((t1.c34)) NOT BETWEEN ((CAST(t1.c43 AS REAL))) AND ((x''))) ASC  NULLS LAST, rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t1, rt0 INNER JOIN vt1 ON ((json_object(rt0.c0, rt0.c1))IS NOT(((vt1.c0)>=(rt0.c1)))) ORDER BY (((t1.c34)) NOT BETWEEN ((CAST(t1.c43 AS REAL))) AND ((x''))) ASC  NULLS LAST, rt0.c0 ASC);
SELECT * FROM t1, rt0 NOT INDEXED INNER JOIN vt1 ON ((json_object(rt0.c0, rt0.c1))IS NOT(((vt1.c0)>=(rt0.c1)))) WHERE ((NOT (rt0.c0 COLLATE BINARY))) ORDER BY (((t1.c34)) NOT BETWEEN ((CAST(t1.c43 AS REAL))) AND ((x''))) ASC  NULLS LAST, rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t1, rt0 INNER JOIN vt1 ON ((json_object(rt0.c0, rt0.c1))IS NOT(((vt1.c0)>=(rt0.c1)))) ORDER BY (((t1.c34)) NOT BETWEEN ((CAST(t1.c43 AS REAL))) AND ((x''))) ASC  NULLS LAST, rt0.c0 ASC);
SELECT * FROM t1, rt0, vt0 WHERE (((t1.c43 COLLATE NOCASE)|((- (0.2296984150225463))))) ORDER BY (((rt0.c1 COLLATE BINARY, ((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)), rt0.c1 COLLATE NOCASE))<=((rt0.c2, t1.c1 COLLATE RTRIM, CASE WHEN '-1245446196' THEN t1.c0 WHEN t1.c0 THEN '0.0264835134229362' WHEN rt0.c2 THEN 0.13784967311112095 END))), (LIKE(t1.c34, rt0.c1, 'ê¡') IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t1.c43 COLLATE NOCASE)|((- (0.2296984150225463))))) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY (((rt0.c1 COLLATE BINARY, ((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)), rt0.c1 COLLATE NOCASE))<=((rt0.c2, t1.c1 COLLATE RTRIM, CASE WHEN '-1245446196' THEN t1.c0 WHEN t1.c0 THEN '0.0264835134229362' WHEN rt0.c2 THEN 0.13784967311112095 END))), (LIKE(t1.c34, rt0.c1, 'ê¡') IN ()) ASC  NULLS FIRST);
SELECT * FROM t1, rt0, vt0 WHERE (((t1.c43 COLLATE NOCASE)|((- (0.2296984150225463))))) ORDER BY (((rt0.c1 COLLATE BINARY, ((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)), rt0.c1 COLLATE NOCASE))<=((rt0.c2, t1.c1 COLLATE RTRIM, CASE WHEN '-1245446196' THEN t1.c0 WHEN t1.c0 THEN '0.0264835134229362' WHEN rt0.c2 THEN 0.13784967311112095 END))), (LIKE(t1.c34, rt0.c1, 'ê¡') IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t1.c43 COLLATE NOCASE)|((- (0.2296984150225463))))) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY (((rt0.c1 COLLATE BINARY, ((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)), rt0.c1 COLLATE NOCASE))<=((rt0.c2, t1.c1 COLLATE RTRIM, CASE WHEN '-1245446196' THEN t1.c0 WHEN t1.c0 THEN '0.0264835134229362' WHEN rt0.c2 THEN 0.13784967311112095 END))), (LIKE(t1.c34, rt0.c1, 'ê¡') IN ()) ASC  NULLS FIRST);
SELECT * FROM t1, rt0, vt0 WHERE (((t1.c43 COLLATE NOCASE)|((- (0.2296984150225463))))) ORDER BY (((rt0.c1 COLLATE BINARY, ((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)), rt0.c1 COLLATE NOCASE))<=((rt0.c2, t1.c1 COLLATE RTRIM, CASE WHEN '-1245446196' THEN t1.c0 WHEN t1.c0 THEN '0.0264835134229362' WHEN rt0.c2 THEN 0.13784967311112095 END))), (LIKE(t1.c34, rt0.c1, 'ê¡') IN ()) ASC  NULLS FIRST;
SELECT * FROM t1 INNER JOIN rt0 ON rt0.c0 FULL OUTER JOIN vt1 ON 0.16339388386407905 INNER JOIN vt0 ON CAST((vt0.c0 IN (vt1.c0, t1.c1)) AS TEXT) WHERE (NULL) ORDER BY (- (((rt0.c2)OR(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1 INNER JOIN rt0 ON rt0.c0 FULL OUTER JOIN vt1 ON 0.16339388386407905 INNER JOIN vt0 ON CAST((vt0.c0 IN (vt1.c0, t1.c1)) AS TEXT) ORDER BY (- (((rt0.c2)OR(rt0.c2)))));
SELECT * FROM t1 INNER JOIN rt0 ON rt0.c0 FULL OUTER JOIN vt1 ON 0.16339388386407905 INNER JOIN vt0 ON CAST((vt0.c0 IN (vt1.c0, t1.c1)) AS TEXT) WHERE (NULL) ORDER BY (- (((rt0.c2)OR(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1 INNER JOIN rt0 ON rt0.c0 FULL OUTER JOIN vt1 ON 0.16339388386407905 INNER JOIN vt0 ON CAST((vt0.c0 IN (vt1.c0, t1.c1)) AS TEXT) ORDER BY (- (((rt0.c2)OR(rt0.c2)))));
SELECT * FROM t1 INNER JOIN rt0 ON rt0.c0 FULL OUTER JOIN vt1 ON 0.16339388386407905 INNER JOIN vt0 ON CAST((vt0.c0 IN (vt1.c0, t1.c1)) AS TEXT) WHERE (NULL) ORDER BY (- (((rt0.c2)OR(rt0.c2))));
SELECT COUNT(*) FROM rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ('');
SELECT ALL * FROM t1, vt0, vt1 LEFT OUTER JOIN rt0 ON (((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((t1.c43)))) IS FALSE) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM t1, vt0, vt1 LEFT OUTER JOIN rt0 ON (((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((t1.c43)))) IS FALSE));
SELECT ALL * FROM t1, vt0, vt1 LEFT OUTER JOIN rt0 ON (((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((t1.c43)))) IS FALSE) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM t1, vt0, vt1 LEFT OUTER JOIN rt0 ON (((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((t1.c43)))) IS FALSE));
SELECT ALL * FROM t1, vt0, vt1 LEFT OUTER JOIN rt0 ON (((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((t1.c43)))) IS FALSE) WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE (((((rt0.c0)OR(vt0.c0))) NOT BETWEEN (t1.c1) AND ((- (t1.c34)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)OR(vt0.c0))) NOT BETWEEN (t1.c1) AND ((- (t1.c34))))) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE (((((rt0.c0)OR(vt0.c0))) NOT BETWEEN (t1.c1) AND ((- (t1.c34)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)OR(vt0.c0))) NOT BETWEEN (t1.c1) AND ((- (t1.c34))))) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE (((((rt0.c0)OR(vt0.c0))) NOT BETWEEN (t1.c1) AND ((- (t1.c34)))));
SELECT * FROM rt0 WHERE (((- (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((- (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((- (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((- (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((- (rt0.c0)) IN ()));
SELECT * FROM vt0, t1, vt1 WHERE ((CAST('1172705000' AS NUMERIC) IN ())) ORDER BY ((((t1.c43) NOT BETWEEN (vt1.c0) AND (vt1.c0)))IS(t1.c34));
SELECT SUM(count) FROM (SELECT ALL (((CAST('1172705000' AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY ((((t1.c43) NOT BETWEEN (vt1.c0) AND (vt1.c0)))IS(t1.c34)));
SELECT * FROM vt0, t1, vt1 WHERE ((CAST('1172705000' AS NUMERIC) IN ())) ORDER BY ((((t1.c43) NOT BETWEEN (vt1.c0) AND (vt1.c0)))IS(t1.c34));
SELECT SUM(count) FROM (SELECT ALL (((CAST('1172705000' AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY ((((t1.c43) NOT BETWEEN (vt1.c0) AND (vt1.c0)))IS(t1.c34)));
SELECT * FROM vt0, t1, vt1 WHERE ((CAST('1172705000' AS NUMERIC) IN ())) ORDER BY ((((t1.c43) NOT BETWEEN (vt1.c0) AND (vt1.c0)))IS(t1.c34));
SELECT ALL COUNT(*) FROM t1 WHERE ((CASE t1.c34  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN x'' THEN t1.c43 ELSE t1.c43 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE t1.c34  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN x'' THEN t1.c43 ELSE t1.c43 END IN ())) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((CASE t1.c34  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN x'' THEN t1.c43 ELSE t1.c43 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE t1.c34  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN x'' THEN t1.c43 ELSE t1.c43 END IN ())) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((CASE t1.c34  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN x'' THEN t1.c43 ELSE t1.c43 END IN ()));
SELECT ALL * FROM t1 WHERE (((t1.c1)%((((t1.c43))<((t1.c0)))))) ORDER BY CAST((t1.c0 IN ()) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t1.c1)%((((t1.c43))<((t1.c0)))))) IS TRUE)  as count FROM t1 ORDER BY CAST((t1.c0 IN ()) AS REAL) ASC  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (((t1.c1)%((((t1.c43))<((t1.c0)))))) ORDER BY CAST((t1.c0 IN ()) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t1.c1)%((((t1.c43))<((t1.c0)))))) IS TRUE)  as count FROM t1 ORDER BY CAST((t1.c0 IN ()) AS REAL) ASC  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (((t1.c1)%((((t1.c43))<((t1.c0)))))) ORDER BY CAST((t1.c0 IN ()) AS REAL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE ((((+ (rt0.c2))) BETWEEN (((vt1.c0)IS NOT(0X584b98fc))) AND (((rt0.c0) BETWEEN (NULL) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c2))) BETWEEN (((vt1.c0)IS NOT(0X584b98fc))) AND (((rt0.c0) BETWEEN (NULL) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE ((((+ (rt0.c2))) BETWEEN (((vt1.c0)IS NOT(0X584b98fc))) AND (((rt0.c0) BETWEEN (NULL) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c2))) BETWEEN (((vt1.c0)IS NOT(0X584b98fc))) AND (((rt0.c0) BETWEEN (NULL) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE ((((+ (rt0.c2))) BETWEEN (((vt1.c0)IS NOT(0X584b98fc))) AND (((rt0.c0) BETWEEN (NULL) AND (vt0.c0)))));
SELECT COUNT(*) FROM rt0, vt1, vt0 LEFT OUTER JOIN t1 ON (NOT (((vt0.c0) NOT BETWEEN ('') AND (t1.c34)))) WHERE (((((t1.c1)&(rt0.c1))) ISNULL)) ORDER BY (((((t1.c34) IS TRUE)))<>((CAST(t1.c0 AS TEXT)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t1.c1)&(rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0, vt1, vt0 LEFT OUTER JOIN t1 ON (NOT (((vt0.c0) NOT BETWEEN ('') AND (t1.c34)))) ORDER BY (((((t1.c34) IS TRUE)))<>((CAST(t1.c0 AS TEXT)))) DESC);
SELECT COUNT(*) FROM rt0, vt1, vt0 LEFT OUTER JOIN t1 ON (NOT (((vt0.c0) NOT BETWEEN ('') AND (t1.c34)))) WHERE (((((t1.c1)&(rt0.c1))) ISNULL)) ORDER BY (((((t1.c34) IS TRUE)))<>((CAST(t1.c0 AS TEXT)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t1.c1)&(rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0, vt1, vt0 LEFT OUTER JOIN t1 ON (NOT (((vt0.c0) NOT BETWEEN ('') AND (t1.c34)))) ORDER BY (((((t1.c34) IS TRUE)))<>((CAST(t1.c0 AS TEXT)))) DESC);
SELECT COUNT(*) FROM rt0, vt1, vt0 LEFT OUTER JOIN t1 ON (NOT (((vt0.c0) NOT BETWEEN ('') AND (t1.c34)))) WHERE (((((t1.c1)&(rt0.c1))) ISNULL)) ORDER BY (((((t1.c34) IS TRUE)))<>((CAST(t1.c0 AS TEXT)))) DESC;
SELECT ALL * FROM vt0, t1 NATURAL JOIN rt0 WHERE (((((((t1.c0)OR(rt0.c2)))OR(t1.c43)))*(t1.c34 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c0)OR(rt0.c2)))OR(t1.c43)))*(t1.c34 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t1 NATURAL JOIN rt0);
SELECT ALL * FROM vt0, t1 NATURAL JOIN rt0 WHERE (((((((t1.c0)OR(rt0.c2)))OR(t1.c43)))*(t1.c34 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c0)OR(rt0.c2)))OR(t1.c43)))*(t1.c34 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t1 NATURAL JOIN rt0);
SELECT ALL * FROM vt0, t1 NATURAL JOIN rt0 WHERE (((((((t1.c0)OR(rt0.c2)))OR(t1.c43)))*(t1.c34 COLLATE NOCASE)));
SELECT COUNT(*) FROM t1, rt0 WHERE (CAST((rt0.c1 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c1 IN ()) AS REAL)) IS TRUE)  as count FROM t1, rt0);
SELECT COUNT(*) FROM t1, rt0 WHERE (CAST((rt0.c1 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c1 IN ()) AS REAL)) IS TRUE)  as count FROM t1, rt0);
SELECT COUNT(*) FROM t1, rt0 WHERE (CAST((rt0.c1 IN ()) AS REAL));
SELECT COUNT(*) FROM rt0, vt0, vt1, t1 WHERE (1.064525924E9);
SELECT SUM(count) FROM (SELECT ((1.064525924E9) IS TRUE)  as count FROM rt0, vt0, vt1, t1);
SELECT COUNT(*) FROM rt0, vt0, vt1, t1 WHERE (1.064525924E9);
SELECT SUM(count) FROM (SELECT ((1.064525924E9) IS TRUE)  as count FROM rt0, vt0, vt1, t1);
SELECT COUNT(*) FROM rt0, vt0, vt1, t1 WHERE (1.064525924E9);
SELECT COUNT(*) FROM t1, rt0 RIGHT OUTER JOIN vt1 ON 0.36752704124950475 WHERE (CAST(vt1.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS BLOB)) IS TRUE)  as count FROM t1, rt0 RIGHT OUTER JOIN vt1 ON 0.36752704124950475);
SELECT COUNT(*) FROM t1, rt0 RIGHT OUTER JOIN vt1 ON 0.36752704124950475 WHERE (CAST(vt1.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS BLOB)) IS TRUE)  as count FROM t1, rt0 RIGHT OUTER JOIN vt1 ON 0.36752704124950475);
SELECT COUNT(*) FROM t1, rt0 RIGHT OUTER JOIN vt1 ON 0.36752704124950475 WHERE (CAST(vt1.c0 AS BLOB));
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (((NULL COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((NULL COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (((NULL COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((NULL COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (((NULL COLLATE NOCASE) IS FALSE));
SELECT ALL * FROM t1 WHERE (((((t1.c43)<>(t1.c34))) BETWEEN (((((t1.c34)AND(t1.c0)))OR(t1.c43))) AND (t1.c43)));
SELECT SUM(count) FROM (SELECT ((((((t1.c43)!=(t1.c34))) BETWEEN (((((t1.c34)AND(t1.c0)))OR(t1.c43))) AND (t1.c43))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((t1.c43)<>(t1.c34))) BETWEEN (((((t1.c34)AND(t1.c0)))OR(t1.c43))) AND (t1.c43)));
SELECT SUM(count) FROM (SELECT ((((((t1.c43)!=(t1.c34))) BETWEEN (((((t1.c34)AND(t1.c0)))OR(t1.c43))) AND (t1.c43))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((t1.c43)<>(t1.c34))) BETWEEN (((((t1.c34)AND(t1.c0)))OR(t1.c43))) AND (t1.c43)));
SELECT ALL COUNT(*) FROM vt0 WHERE (0.23258937532157042);
SELECT SUM(count) FROM (SELECT ((0.23258937532157042) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.23258937532157042);
SELECT SUM(count) FROM (SELECT ((0.23258937532157042) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.23258937532157042);
SELECT COUNT(*) FROM t1, vt1, rt0 RIGHT OUTER JOIN vt0 ON (~ (vt1.c0)) WHERE ((ABS(DISTINCT '') IN ())) ORDER BY (((t1.c0, t1.c0, t1.c34)) NOT BETWEEN ((vt1.c0 COLLATE RTRIM, ((t1.c34)|(rt0.c2)), t1.c0 COLLATE NOCASE)) AND ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (t1.c34)), ((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)), NULL)));
SELECT SUM(count) FROM (SELECT (((ABS(DISTINCT '') IN ())) IS TRUE)  as count FROM t1, vt1, rt0 RIGHT OUTER JOIN vt0 ON (~ (vt1.c0)) ORDER BY (((t1.c0, t1.c0, t1.c34)) NOT BETWEEN ((vt1.c0 COLLATE RTRIM, ((t1.c34)|(rt0.c2)), t1.c0 COLLATE NOCASE)) AND ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (t1.c34)), ((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)), NULL))));
SELECT COUNT(*) FROM t1, vt1, rt0 RIGHT OUTER JOIN vt0 ON (~ (vt1.c0)) WHERE ((ABS(DISTINCT '') IN ())) ORDER BY (((t1.c0, t1.c0, t1.c34)) NOT BETWEEN ((vt1.c0 COLLATE RTRIM, ((t1.c34)|(rt0.c2)), t1.c0 COLLATE NOCASE)) AND ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (t1.c34)), ((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)), NULL)));
SELECT SUM(count) FROM (SELECT (((ABS(DISTINCT '') IN ())) IS TRUE)  as count FROM t1, vt1, rt0 RIGHT OUTER JOIN vt0 ON (~ (vt1.c0)) ORDER BY (((t1.c0, t1.c0, t1.c34)) NOT BETWEEN ((vt1.c0 COLLATE RTRIM, ((t1.c34)|(rt0.c2)), t1.c0 COLLATE NOCASE)) AND ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (t1.c34)), ((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)), NULL))));
SELECT COUNT(*) FROM t1, vt1, rt0 RIGHT OUTER JOIN vt0 ON (~ (vt1.c0)) WHERE ((ABS(DISTINCT '') IN ())) ORDER BY (((t1.c0, t1.c0, t1.c34)) NOT BETWEEN ((vt1.c0 COLLATE RTRIM, ((t1.c34)|(rt0.c2)), t1.c0 COLLATE NOCASE)) AND ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (t1.c34)), ((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)), NULL)));
SELECT * FROM rt0, vt0 LEFT OUTER JOIN vt1 ON rt0.c1 WHERE ((((rt0.c1, vt0.c0, vt1.c0)) NOT BETWEEN ((SQLITE_VERSION(), rt0.c2, ((((rt0.c1)OR(vt0.c0)))OR(vt1.c0)))) AND (((vt0.c0 IN ()), ((vt1.c0) IS TRUE), rt0.c1))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, vt0.c0, vt1.c0)) NOT BETWEEN ((SQLITE_VERSION(), rt0.c2, ((((rt0.c1)OR(vt0.c0)))OR(vt1.c0)))) AND (((vt0.c0 IN ()), ((vt1.c0) IS TRUE), rt0.c1)))) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN vt1 ON rt0.c1);
SELECT * FROM rt0, vt0 LEFT OUTER JOIN vt1 ON rt0.c1 WHERE ((((rt0.c1, vt0.c0, vt1.c0)) NOT BETWEEN ((SQLITE_VERSION(), rt0.c2, ((((rt0.c1)OR(vt0.c0)))OR(vt1.c0)))) AND (((vt0.c0 IN ()), ((vt1.c0) IS TRUE), rt0.c1))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, vt0.c0, vt1.c0)) NOT BETWEEN ((SQLITE_VERSION(), rt0.c2, ((((rt0.c1)OR(vt0.c0)))OR(vt1.c0)))) AND (((vt0.c0 IN ()), ((vt1.c0) IS TRUE), rt0.c1)))) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN vt1 ON rt0.c1);
SELECT * FROM rt0, vt0 LEFT OUTER JOIN vt1 ON rt0.c1 WHERE ((((rt0.c1, vt0.c0, vt1.c0)) NOT BETWEEN ((SQLITE_VERSION(), rt0.c2, ((((rt0.c1)OR(vt0.c0)))OR(vt1.c0)))) AND (((vt0.c0 IN ()), ((vt1.c0) IS TRUE), rt0.c1))));
SELECT ALL * FROM rt0 INNER JOIN vt1 ON IFNULL(((t1.c1) NOTNULL), CAST(rt0.c2 AS INTEGER)) CROSS JOIN t1 ON TOTAL_CHANGES() COLLATE NOCASE WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 ELSE t1.c34 END) BETWEEN (((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND (rt0.c1))) ORDER BY IFNULL(DISTINCT ((t1.c34) BETWEEN (t1.c0) AND (rt0.c1)), ((x'1b3e') NOT BETWEEN (t1.c0) AND (rt0.c1))), (((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, t1.c43)) AND ((rt0.c1, t1.c34, t1.c1)))) NOT BETWEEN (UPPER(vt1.c0)) AND (t1.c34))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN rt0.c2 ELSE t1.c34 END) BETWEEN (((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND (rt0.c1))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON IFNULL(((t1.c1) NOTNULL), CAST(rt0.c2 AS INTEGER)) CROSS JOIN t1 ON TOTAL_CHANGES() COLLATE NOCASE ORDER BY IFNULL(DISTINCT ((t1.c34) BETWEEN (t1.c0) AND (rt0.c1)), ((x'1b3e') NOT BETWEEN (t1.c0) AND (rt0.c1))), (((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, t1.c43)) AND ((rt0.c1, t1.c34, t1.c1)))) NOT BETWEEN (UPPER(vt1.c0)) AND (t1.c34))  NULLS FIRST);
SELECT ALL * FROM rt0 INNER JOIN vt1 ON IFNULL(((t1.c1) NOTNULL), CAST(rt0.c2 AS INTEGER)) CROSS JOIN t1 ON TOTAL_CHANGES() COLLATE NOCASE WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 ELSE t1.c34 END) BETWEEN (((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND (rt0.c1))) ORDER BY IFNULL(DISTINCT ((t1.c34) BETWEEN (t1.c0) AND (rt0.c1)), ((x'1b3e') NOT BETWEEN (t1.c0) AND (rt0.c1))), (((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, t1.c43)) AND ((rt0.c1, t1.c34, t1.c1)))) NOT BETWEEN (UPPER(vt1.c0)) AND (t1.c34))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN rt0.c2 ELSE t1.c34 END) BETWEEN (((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND (rt0.c1))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON IFNULL(((t1.c1) NOTNULL), CAST(rt0.c2 AS INTEGER)) CROSS JOIN t1 ON TOTAL_CHANGES() COLLATE NOCASE ORDER BY IFNULL(DISTINCT ((t1.c34) BETWEEN (t1.c0) AND (rt0.c1)), ((x'1b3e') NOT BETWEEN (t1.c0) AND (rt0.c1))), (((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, t1.c43)) AND ((rt0.c1, t1.c34, t1.c1)))) NOT BETWEEN (UPPER(vt1.c0)) AND (t1.c34))  NULLS FIRST);
SELECT ALL * FROM rt0 INNER JOIN vt1 ON IFNULL(((t1.c1) NOTNULL), CAST(rt0.c2 AS INTEGER)) CROSS JOIN t1 ON TOTAL_CHANGES() COLLATE NOCASE WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 ELSE t1.c34 END) BETWEEN (((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND (rt0.c1))) ORDER BY IFNULL(DISTINCT ((t1.c34) BETWEEN (t1.c0) AND (rt0.c1)), ((x'1b3e') NOT BETWEEN (t1.c0) AND (rt0.c1))), (((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, t1.c43)) AND ((rt0.c1, t1.c34, t1.c1)))) NOT BETWEEN (UPPER(vt1.c0)) AND (t1.c34))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS NUMERIC)) ORDER BY vt0.c0, (vt0.c0 IN (vt0.c0, '5M')) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, (vt0.c0 IN (vt0.c0, '5M')) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS NUMERIC)) ORDER BY vt0.c0, (vt0.c0 IN (vt0.c0, '5M')) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, (vt0.c0 IN (vt0.c0, '5M')) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS NUMERIC)) ORDER BY vt0.c0, (vt0.c0 IN (vt0.c0, '5M')) COLLATE NOCASE;
SELECT COUNT(*) FROM rt0, t1, vt0 WHERE (t1.c34 COLLATE NOCASE) ORDER BY HEX(DISTINCT ((t1.c43)OR(t1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t1.c34 COLLATE NOCASE) IS TRUE)  as count FROM rt0, t1, vt0 ORDER BY HEX(DISTINCT ((t1.c43)OR(t1.c0))) ASC);
SELECT COUNT(*) FROM rt0, t1, vt0 WHERE (t1.c34 COLLATE NOCASE) ORDER BY HEX(DISTINCT ((t1.c43)OR(t1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t1.c34 COLLATE NOCASE) IS TRUE)  as count FROM rt0, t1, vt0 ORDER BY HEX(DISTINCT ((t1.c43)OR(t1.c0))) ASC);
SELECT COUNT(*) FROM rt0, t1, vt0 WHERE (t1.c34 COLLATE NOCASE) ORDER BY HEX(DISTINCT ((t1.c43)OR(t1.c0))) ASC;
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON 0.43434476456460025 WHERE (CASE vt1.c0 COLLATE RTRIM  WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM ELSE (vt1.c0 IN ()) END) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0 COLLATE RTRIM  WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM ELSE (vt1.c0 IN ()) END) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON 0.43434476456460025 ORDER BY vt1.c0  NULLS LAST);
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON 0.43434476456460025 WHERE (CASE vt1.c0 COLLATE RTRIM  WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM ELSE (vt1.c0 IN ()) END) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0 COLLATE RTRIM  WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM ELSE (vt1.c0 IN ()) END) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON 0.43434476456460025 ORDER BY vt1.c0  NULLS LAST);
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON 0.43434476456460025 WHERE (CASE vt1.c0 COLLATE RTRIM  WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM ELSE (vt1.c0 IN ()) END) ORDER BY vt1.c0  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (((CASE WHEN NULL THEN t1.c1 WHEN t1.c0 THEN t1.c34 WHEN t1.c0 THEN t1.c1 END)=(((t1.c34)>(t1.c1))))) ORDER BY ((CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c34 THEN 0.9613392164066091 WHEN t1.c0 THEN t1.c34 END) NOT BETWEEN (((t1.c0) NOTNULL)) AND (((t1.c0)>=(t1.c43)))), ((CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c34 THEN t1.c34 WHEN t1.c0 THEN t1.c0 ELSE t1.c34 END) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN NULL THEN t1.c1 WHEN t1.c0 THEN t1.c34 WHEN t1.c0 THEN t1.c1 END)==(((t1.c34)>(t1.c1))))) IS TRUE)  as count FROM t1 ORDER BY ((CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c34 THEN 0.9613392164066091 WHEN t1.c0 THEN t1.c34 END) NOT BETWEEN (((t1.c0) NOTNULL)) AND (((t1.c0)>=(t1.c43)))), ((CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c34 THEN t1.c34 WHEN t1.c0 THEN t1.c0 ELSE t1.c34 END) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (((CASE WHEN NULL THEN t1.c1 WHEN t1.c0 THEN t1.c34 WHEN t1.c0 THEN t1.c1 END)=(((t1.c34)>(t1.c1))))) ORDER BY ((CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c34 THEN 0.9613392164066091 WHEN t1.c0 THEN t1.c34 END) NOT BETWEEN (((t1.c0) NOTNULL)) AND (((t1.c0)>=(t1.c43)))), ((CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c34 THEN t1.c34 WHEN t1.c0 THEN t1.c0 ELSE t1.c34 END) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN NULL THEN t1.c1 WHEN t1.c0 THEN t1.c34 WHEN t1.c0 THEN t1.c1 END)==(((t1.c34)>(t1.c1))))) IS TRUE)  as count FROM t1 ORDER BY ((CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c34 THEN 0.9613392164066091 WHEN t1.c0 THEN t1.c34 END) NOT BETWEEN (((t1.c0) NOTNULL)) AND (((t1.c0)>=(t1.c43)))), ((CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c34 THEN t1.c34 WHEN t1.c0 THEN t1.c0 ELSE t1.c34 END) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (((CASE WHEN NULL THEN t1.c1 WHEN t1.c0 THEN t1.c34 WHEN t1.c0 THEN t1.c1 END)=(((t1.c34)>(t1.c1))))) ORDER BY ((CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c34 THEN 0.9613392164066091 WHEN t1.c0 THEN t1.c34 END) NOT BETWEEN (((t1.c0) NOTNULL)) AND (((t1.c0)>=(t1.c43)))), ((CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c34 THEN t1.c34 WHEN t1.c0 THEN t1.c0 ELSE t1.c34 END) ISNULL)  NULLS LAST;
SELECT * FROM vt0 WHERE ((((('-1345951992')AND(vt0.c0)))OR((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((('-1345951992')AND(vt0.c0)))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((('-1345951992')AND(vt0.c0)))OR((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((('-1345951992')AND(vt0.c0)))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((('-1345951992')AND(vt0.c0)))OR((vt0.c0 IN ()))));
SELECT ALL * FROM t1 WHERE (CAST(t1.c34 COLLATE RTRIM AS INTEGER)) ORDER BY CAST(x'' COLLATE NOCASE AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c34 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM t1 ORDER BY CAST(x'' COLLATE NOCASE AS REAL) DESC);
SELECT ALL * FROM t1 WHERE (CAST(t1.c34 COLLATE RTRIM AS INTEGER)) ORDER BY CAST(x'' COLLATE NOCASE AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c34 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM t1 ORDER BY CAST(x'' COLLATE NOCASE AS REAL) DESC);
SELECT ALL * FROM t1 WHERE (CAST(t1.c34 COLLATE RTRIM AS INTEGER)) ORDER BY CAST(x'' COLLATE NOCASE AS REAL) DESC;
SELECT COUNT(*) FROM t1 CROSS JOIN vt0 ON '-1337019682' LEFT OUTER JOIN vt1 ON ((((vt1.c0) NOTNULL)) BETWEEN (CASE WHEN t1.c0 THEN vt0.c0 ELSE x'' END) AND (QUOTE(vt0.c0))) WHERE (COALESCE((((vt0.c0))<((vt0.c0))), ((((((((t1.c34)OR(t1.c1)))OR(t1.c1)))AND(vt0.c0)))OR(vt1.c0)), CASE t1.c1  WHEN t1.c1 THEN vt0.c0 ELSE 1493032185 END, (vt1.c0 IN ()))) ORDER BY (((((t1.c1) BETWEEN (t1.c1) AND (t1.c1))))<((x''))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE((((vt0.c0))<((vt0.c0))), ((((((((t1.c34)OR(t1.c1)))OR(t1.c1)))AND(vt0.c0)))OR(vt1.c0)), CASE t1.c1  WHEN t1.c1 THEN vt0.c0 ELSE 1493032185 END, (vt1.c0 IN ()))) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON '-1337019682' LEFT OUTER JOIN vt1 ON ((((vt1.c0) NOTNULL)) BETWEEN (CASE WHEN t1.c0 THEN vt0.c0 ELSE x'' END) AND (QUOTE(vt0.c0))) ORDER BY (((((t1.c1) BETWEEN (t1.c1) AND (t1.c1))))<((x''))) ASC);
SELECT COUNT(*) FROM t1 CROSS JOIN vt0 ON '-1337019682' LEFT OUTER JOIN vt1 ON ((((vt1.c0) NOTNULL)) BETWEEN (CASE WHEN t1.c0 THEN vt0.c0 ELSE x'' END) AND (QUOTE(vt0.c0))) WHERE (COALESCE((((vt0.c0))<((vt0.c0))), ((((((((t1.c34)OR(t1.c1)))OR(t1.c1)))AND(vt0.c0)))OR(vt1.c0)), CASE t1.c1  WHEN t1.c1 THEN vt0.c0 ELSE 1493032185 END, (vt1.c0 IN ()))) ORDER BY (((((t1.c1) BETWEEN (t1.c1) AND (t1.c1))))<((x''))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE((((vt0.c0))<((vt0.c0))), ((((((((t1.c34)OR(t1.c1)))OR(t1.c1)))AND(vt0.c0)))OR(vt1.c0)), CASE t1.c1  WHEN t1.c1 THEN vt0.c0 ELSE 1493032185 END, (vt1.c0 IN ()))) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON '-1337019682' LEFT OUTER JOIN vt1 ON ((((vt1.c0) NOTNULL)) BETWEEN (CASE WHEN t1.c0 THEN vt0.c0 ELSE x'' END) AND (QUOTE(vt0.c0))) ORDER BY (((((t1.c1) BETWEEN (t1.c1) AND (t1.c1))))<((x''))) ASC);
SELECT COUNT(*) FROM t1 CROSS JOIN vt0 ON '-1337019682' LEFT OUTER JOIN vt1 ON ((((vt1.c0) NOTNULL)) BETWEEN (CASE WHEN t1.c0 THEN vt0.c0 ELSE x'' END) AND (QUOTE(vt0.c0))) WHERE (COALESCE((((vt0.c0))<((vt0.c0))), ((((((((t1.c34)OR(t1.c1)))OR(t1.c1)))AND(vt0.c0)))OR(vt1.c0)), CASE t1.c1  WHEN t1.c1 THEN vt0.c0 ELSE 1493032185 END, (vt1.c0 IN ()))) ORDER BY (((((t1.c1) BETWEEN (t1.c1) AND (t1.c1))))<((x''))) ASC;
SELECT * FROM t1 WHERE (UPPER(DISTINCT t1.c34)) ORDER BY '137169555'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT t1.c34)) IS TRUE)  as count FROM t1 ORDER BY '137169555'  NULLS LAST);
SELECT * FROM t1 WHERE (UPPER(DISTINCT t1.c34)) ORDER BY '137169555'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT t1.c34)) IS TRUE)  as count FROM t1 ORDER BY '137169555'  NULLS LAST);
SELECT * FROM t1 WHERE (UPPER(DISTINCT t1.c34)) ORDER BY '137169555'  NULLS LAST;
SELECT COUNT(*) FROM t1, rt0, vt1, vt0 WHERE ((((NOT (rt0.c0)))||(((t1.c1)<<(vt0.c0))))) ORDER BY (((((- (vt0.c0)))AND(t1.c34)))OR((NOT (rt0.c1))))  NULLS FIRST, ((((rt0.c1)>=(t1.c43))) NOT NULL);
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c0)))||(((t1.c1)<<(vt0.c0))))) IS TRUE)  as count FROM t1, rt0, vt1, vt0 ORDER BY (((((- (vt0.c0)))AND(t1.c34)))OR((NOT (rt0.c1))))  NULLS FIRST, ((((rt0.c1)>=(t1.c43))) NOT NULL));
SELECT COUNT(*) FROM t1, rt0, vt1, vt0 WHERE ((((NOT (rt0.c0)))||(((t1.c1)<<(vt0.c0))))) ORDER BY (((((- (vt0.c0)))AND(t1.c34)))OR((NOT (rt0.c1))))  NULLS FIRST, ((((rt0.c1)>=(t1.c43))) NOT NULL);
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c0)))||(((t1.c1)<<(vt0.c0))))) IS TRUE)  as count FROM t1, rt0, vt1, vt0 ORDER BY (((((- (vt0.c0)))AND(t1.c34)))OR((NOT (rt0.c1))))  NULLS FIRST, ((((rt0.c1)>=(t1.c43))) NOT NULL));
SELECT COUNT(*) FROM t1, rt0, vt1, vt0 WHERE ((((NOT (rt0.c0)))||(((t1.c1)<<(vt0.c0))))) ORDER BY (((((- (vt0.c0)))AND(t1.c34)))OR((NOT (rt0.c1))))  NULLS FIRST, ((((rt0.c1)>=(t1.c43))) NOT NULL);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) NOT NULL)) ORDER BY NULL ASC, (+ (((vt0.c0)+(vt0.c0)))), (((- (vt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC, (+ (((vt0.c0)+(vt0.c0)))), (((- (vt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) NOT NULL)) ORDER BY NULL ASC, (+ (((vt0.c0)+(vt0.c0)))), (((- (vt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC, (+ (((vt0.c0)+(vt0.c0)))), (((- (vt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) NOT NULL)) ORDER BY NULL ASC, (+ (((vt0.c0)+(vt0.c0)))), (((- (vt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS LAST;
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON (((t1.c43, t1.c0, t1.c43)) BETWEEN ((((((rt0.c0)AND(t1.c0)))OR(vt1.c0)), ((t1.c1) NOTNULL), (t1.c1 IN ()))) AND ((CAST(rt0.c0 AS TEXT), CAST(rt0.c1 AS INTEGER), CAST(rt0.c0 AS TEXT)))) INNER JOIN t1 ON x'' WHERE (LOWER((((vt1.c0, t1.c0, t1.c1, rt0.c2, t1.c43)) NOT BETWEEN ((t1.c1, rt0.c1, rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c2, vt1.c0, rt0.c0, rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER((((vt1.c0, t1.c0, t1.c1, rt0.c2, t1.c43)) NOT BETWEEN ((t1.c1, rt0.c1, rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c2, vt1.c0, rt0.c0, rt0.c1))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON (((t1.c43, t1.c0, t1.c43)) BETWEEN ((((((rt0.c0)AND(t1.c0)))OR(vt1.c0)), ((t1.c1) NOTNULL), (t1.c1 IN ()))) AND ((CAST(rt0.c0 AS TEXT), CAST(rt0.c1 AS INTEGER), CAST(rt0.c0 AS TEXT)))) INNER JOIN t1 ON x'');
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON (((t1.c43, t1.c0, t1.c43)) BETWEEN ((((((rt0.c0)AND(t1.c0)))OR(vt1.c0)), ((t1.c1) NOTNULL), (t1.c1 IN ()))) AND ((CAST(rt0.c0 AS TEXT), CAST(rt0.c1 AS INTEGER), CAST(rt0.c0 AS TEXT)))) INNER JOIN t1 ON x'' WHERE (LOWER((((vt1.c0, t1.c0, t1.c1, rt0.c2, t1.c43)) NOT BETWEEN ((t1.c1, rt0.c1, rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c2, vt1.c0, rt0.c0, rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER((((vt1.c0, t1.c0, t1.c1, rt0.c2, t1.c43)) NOT BETWEEN ((t1.c1, rt0.c1, rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c2, vt1.c0, rt0.c0, rt0.c1))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON (((t1.c43, t1.c0, t1.c43)) BETWEEN ((((((rt0.c0)AND(t1.c0)))OR(vt1.c0)), ((t1.c1) NOTNULL), (t1.c1 IN ()))) AND ((CAST(rt0.c0 AS TEXT), CAST(rt0.c1 AS INTEGER), CAST(rt0.c0 AS TEXT)))) INNER JOIN t1 ON x'');
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE BINARY) ORDER BY (((vt0.c0 IN ()))/(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))/(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE BINARY) ORDER BY (((vt0.c0 IN ()))/(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))/(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE BINARY) ORDER BY (((vt0.c0 IN ()))/(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT ALL COUNT(*) FROM vt1, t1, vt0, rt0 WHERE (((x'6046') ISNULL)) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'6046') ISNULL)) IS TRUE)  as count FROM vt1, t1, vt0, rt0 ORDER BY x'' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t1, vt0, rt0 WHERE (((x'6046') ISNULL)) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'6046') ISNULL)) IS TRUE)  as count FROM vt1, t1, vt0, rt0 ORDER BY x'' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t1, vt0, rt0 WHERE (((x'6046') ISNULL)) ORDER BY x'' ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((rt0.c0, rt0.c0, rt0.c2)) BETWEEN (((- (rt0.c2)), CASE -266333854  WHEN rt0.c1 THEN rt0.c2 END, rt0.c2)) AND ((rt0.c1 COLLATE BINARY, ((rt0.c0) BETWEEN (rt0.c0) AND (NULL)), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c0, rt0.c2)) BETWEEN (((- (rt0.c2)), CASE -266333854  WHEN rt0.c1 THEN rt0.c2 END, rt0.c2)) AND ((rt0.c1 COLLATE BINARY, ((rt0.c0) BETWEEN (rt0.c0) AND (NULL)), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c0, rt0.c0, rt0.c2)) BETWEEN (((- (rt0.c2)), CASE -266333854  WHEN rt0.c1 THEN rt0.c2 END, rt0.c2)) AND ((rt0.c1 COLLATE BINARY, ((rt0.c0) BETWEEN (rt0.c0) AND (NULL)), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c0, rt0.c2)) BETWEEN (((- (rt0.c2)), CASE -266333854  WHEN rt0.c1 THEN rt0.c2 END, rt0.c2)) AND ((rt0.c1 COLLATE BINARY, ((rt0.c0) BETWEEN (rt0.c0) AND (NULL)), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c0, rt0.c0, rt0.c2)) BETWEEN (((- (rt0.c2)), CASE -266333854  WHEN rt0.c1 THEN rt0.c2 END, rt0.c2)) AND ((rt0.c1 COLLATE BINARY, ((rt0.c0) BETWEEN (rt0.c0) AND (NULL)), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END))));
SELECT ALL * FROM vt1 WHERE (((UNICODE(vt1.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((UNICODE(vt1.c0)) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((UNICODE(vt1.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((UNICODE(vt1.c0)) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((UNICODE(vt1.c0)) IS TRUE));
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((t1.c43))))OR((((t1.c43)) NOT BETWEEN ((t1.c43)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((t1.c43))))OR((((t1.c43)) NOT BETWEEN ((t1.c43)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((t1.c43))))OR((((t1.c43)) NOT BETWEEN ((t1.c43)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((t1.c43))))OR((((t1.c43)) NOT BETWEEN ((t1.c43)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((t1.c43))))OR((((t1.c43)) NOT BETWEEN ((t1.c43)) AND ((rt0.c2))))));
SELECT * FROM vt1, rt0, t1 WHERE (CAST((t1.c34 IN ()) AS REAL)) ORDER BY (- (((t1.c34) BETWEEN (t1.c1) AND (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((t1.c34 IN ()) AS REAL)) IS TRUE)  as count FROM vt1, rt0, t1 ORDER BY (- (((t1.c34) BETWEEN (t1.c1) AND (rt0.c0)))) ASC);
SELECT * FROM vt1, rt0, t1 WHERE (CAST((t1.c34 IN ()) AS REAL)) ORDER BY (- (((t1.c34) BETWEEN (t1.c1) AND (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((t1.c34 IN ()) AS REAL)) IS TRUE)  as count FROM vt1, rt0, t1 ORDER BY (- (((t1.c34) BETWEEN (t1.c1) AND (rt0.c0)))) ASC);
SELECT * FROM vt1, rt0, t1 WHERE (CAST((t1.c34 IN ()) AS REAL)) ORDER BY (- (((t1.c34) BETWEEN (t1.c1) AND (rt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 FULL OUTER JOIN t1 ON CASE ((((((((t1.c43)AND(vt0.c0)))AND(vt1.c0)))AND(t1.c34)))OR(t1.c0))  WHEN (rt0.c2 IN ()) THEN (- (vt0.c0)) ELSE DATETIME(rt0.c0, rt0.c0, x'') END WHERE ((~ (((t1.c34) NOT BETWEEN (NULL) AND (vt1.c0))))) ORDER BY t1.c0;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t1.c34) NOT BETWEEN (NULL) AND (vt1.c0))))) IS TRUE)  as count FROM rt0, vt0, vt1 FULL OUTER JOIN t1 ON CASE ((((((((t1.c43)AND(vt0.c0)))AND(vt1.c0)))AND(t1.c34)))OR(t1.c0))  WHEN (rt0.c2 IN ()) THEN (- (vt0.c0)) ELSE DATETIME(rt0.c0, rt0.c0, x'') END ORDER BY t1.c0);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 FULL OUTER JOIN t1 ON CASE ((((((((t1.c43)AND(vt0.c0)))AND(vt1.c0)))AND(t1.c34)))OR(t1.c0))  WHEN (rt0.c2 IN ()) THEN (- (vt0.c0)) ELSE DATETIME(rt0.c0, rt0.c0, x'') END WHERE ((~ (((t1.c34) NOT BETWEEN (NULL) AND (vt1.c0))))) ORDER BY t1.c0;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t1.c34) NOT BETWEEN (NULL) AND (vt1.c0))))) IS TRUE)  as count FROM rt0, vt0, vt1 FULL OUTER JOIN t1 ON CASE ((((((((t1.c43)AND(vt0.c0)))AND(vt1.c0)))AND(t1.c34)))OR(t1.c0))  WHEN (rt0.c2 IN ()) THEN (- (vt0.c0)) ELSE DATETIME(rt0.c0, rt0.c0, x'') END ORDER BY t1.c0);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 FULL OUTER JOIN t1 ON CASE ((((((((t1.c43)AND(vt0.c0)))AND(vt1.c0)))AND(t1.c34)))OR(t1.c0))  WHEN (rt0.c2 IN ()) THEN (- (vt0.c0)) ELSE DATETIME(rt0.c0, rt0.c0, x'') END WHERE ((~ (((t1.c34) NOT BETWEEN (NULL) AND (vt1.c0))))) ORDER BY t1.c0;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((json_array_length(rt0.c2))>=(((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((json_array_length(rt0.c2))>=(((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((json_array_length(rt0.c2))>=(((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((json_array_length(rt0.c2))>=(((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((json_array_length(rt0.c2))>=(((rt0.c1) IS TRUE))));
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (((((((((((t1.c1)OR(t1.c1)))AND(t1.c34)))OR(t1.c43)))OR(t1.c0)))GLOB(((t1.c34) NOT BETWEEN (t1.c43) AND (t1.c43)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c1)OR(t1.c1)))AND(t1.c34)))OR(t1.c43)))OR(t1.c0)))GLOB(((t1.c34) NOT BETWEEN (t1.c43) AND (t1.c43))))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (((((((((((t1.c1)OR(t1.c1)))AND(t1.c34)))OR(t1.c43)))OR(t1.c0)))GLOB(((t1.c34) NOT BETWEEN (t1.c43) AND (t1.c43)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c1)OR(t1.c1)))AND(t1.c34)))OR(t1.c43)))OR(t1.c0)))GLOB(((t1.c34) NOT BETWEEN (t1.c43) AND (t1.c43))))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (((((((((((t1.c1)OR(t1.c1)))AND(t1.c34)))OR(t1.c43)))OR(t1.c0)))GLOB(((t1.c34) NOT BETWEEN (t1.c43) AND (t1.c43)))));
SELECT ALL * FROM t1 WHERE (((((0.25227757315915567)OR(((t1.c43) BETWEEN (t1.c1) AND (t1.c0)))))AND(((t1.c1) BETWEEN (t1.c34) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.25227757315915567)OR(((t1.c43) BETWEEN (t1.c1) AND (t1.c0)))))AND(((t1.c1) BETWEEN (t1.c34) AND (t1.c0))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((0.25227757315915567)OR(((t1.c43) BETWEEN (t1.c1) AND (t1.c0)))))AND(((t1.c1) BETWEEN (t1.c34) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.25227757315915567)OR(((t1.c43) BETWEEN (t1.c1) AND (t1.c0)))))AND(((t1.c1) BETWEEN (t1.c34) AND (t1.c0))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((0.25227757315915567)OR(((t1.c43) BETWEEN (t1.c1) AND (t1.c0)))))AND(((t1.c1) BETWEEN (t1.c34) AND (t1.c0)))));
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN (((+ (rt0.c2)))) AND ((NULL)))) ORDER BY (~ (CASE WHEN rt0.c0 THEN rt0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN (((+ (rt0.c2)))) AND ((NULL)))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY (~ (CASE WHEN rt0.c0 THEN rt0.c1 END))  NULLS LAST);
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN (((+ (rt0.c2)))) AND ((NULL)))) ORDER BY (~ (CASE WHEN rt0.c0 THEN rt0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN (((+ (rt0.c2)))) AND ((NULL)))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY (~ (CASE WHEN rt0.c0 THEN rt0.c1 END))  NULLS LAST);
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN (((+ (rt0.c2)))) AND ((NULL)))) ORDER BY (~ (CASE WHEN rt0.c0 THEN rt0.c1 END))  NULLS LAST;
SELECT * FROM vt1, t1 WHERE (t1.c1) ORDER BY TRIM(vt1.c0, t1.c1) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c1) IS TRUE)  as count FROM vt1, t1 ORDER BY TRIM(vt1.c0, t1.c1) COLLATE NOCASE  NULLS FIRST);
SELECT * FROM vt1, t1 WHERE (t1.c1) ORDER BY TRIM(vt1.c0, t1.c1) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c1) IS TRUE)  as count FROM vt1, t1 ORDER BY TRIM(vt1.c0, t1.c1) COLLATE NOCASE  NULLS FIRST);
SELECT * FROM vt1, t1 WHERE (t1.c1) ORDER BY TRIM(vt1.c0, t1.c1) COLLATE NOCASE  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE (rt0.c0) ORDER BY LAST_INSERT_ROWID() COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY LAST_INSERT_ROWID() COLLATE BINARY DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE (rt0.c0) ORDER BY LAST_INSERT_ROWID() COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY LAST_INSERT_ROWID() COLLATE BINARY DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE (rt0.c0) ORDER BY LAST_INSERT_ROWID() COLLATE BINARY DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (LIKELY(vt1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((LIKELY(vt1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (LIKELY(vt1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((LIKELY(vt1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (LIKELY(vt1.c0 COLLATE RTRIM));
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (x'a65a');
SELECT SUM(count) FROM (SELECT ((x'a65a') IS TRUE)  as count FROM vt1, vt0, t1);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (x'a65a');
SELECT SUM(count) FROM (SELECT ((x'a65a') IS TRUE)  as count FROM vt1, vt0, t1);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (x'a65a');
SELECT ALL * FROM t1, vt1, rt0 WHERE (((vt1.c0) ISNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM t1, vt1, rt0);
SELECT ALL * FROM t1, vt1, rt0 WHERE (((vt1.c0) ISNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM t1, vt1, rt0);
SELECT ALL * FROM t1, vt1, rt0 WHERE (((vt1.c0) ISNULL) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, t1, rt0, vt1 WHERE ((rt0.c1 IN ((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, t1, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, t1, rt0, vt1 WHERE ((rt0.c1 IN ((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, t1, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, t1, rt0, vt1 WHERE ((rt0.c1 IN ((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))));
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (SQLITE_COMPILEOPTION_USED(((0.530107059069165)||(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(((0.530107059069165)||(rt0.c2)))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (SQLITE_COMPILEOPTION_USED(((0.530107059069165)||(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(((0.530107059069165)||(rt0.c2)))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (SQLITE_COMPILEOPTION_USED(((0.530107059069165)||(rt0.c2))));
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (INSTR(((vt1.c0)||(vt1.c0)), (((t1.c0, vt1.c0, t1.c1))=((vt1.c0, vt1.c0, 0.9338685988370975))))) ORDER BY SQLITE_VERSION() ASC;
SELECT SUM(count) FROM (SELECT ALL ((INSTR(((vt1.c0)||(vt1.c0)), (((t1.c0, vt1.c0, t1.c1))==((vt1.c0, vt1.c0, 0.9338685988370975))))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY SQLITE_VERSION() ASC);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (INSTR(((vt1.c0)||(vt1.c0)), (((t1.c0, vt1.c0, t1.c1))=((vt1.c0, vt1.c0, 0.9338685988370975))))) ORDER BY SQLITE_VERSION() ASC;
SELECT SUM(count) FROM (SELECT ALL ((INSTR(((vt1.c0)||(vt1.c0)), (((t1.c0, vt1.c0, t1.c1))==((vt1.c0, vt1.c0, 0.9338685988370975))))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY SQLITE_VERSION() ASC);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (INSTR(((vt1.c0)||(vt1.c0)), (((t1.c0, vt1.c0, t1.c1))=((vt1.c0, vt1.c0, 0.9338685988370975))))) ORDER BY SQLITE_VERSION() ASC;
SELECT ALL COUNT(*) FROM rt0, t1 INNER JOIN vt0 ON NULL WHERE ((((rt0.c0, t1.c0, t1.c43)) BETWEEN ((CAST(rt0.c0 AS INTEGER), SQLITE_SOURCE_ID(), ((((t1.c43)AND(t1.c43)))AND('96530446')))) AND (((+ (t1.c43)), ((rt0.c1) NOTNULL), NULL)))) ORDER BY ((CAST(t1.c43 AS BLOB)) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, t1.c0, t1.c43)) BETWEEN ((CAST(rt0.c0 AS INTEGER), SQLITE_SOURCE_ID(), ((((t1.c43)AND(t1.c43)))AND('96530446')))) AND (((+ (t1.c43)), ((rt0.c1) NOTNULL), NULL)))) IS TRUE)  as count FROM rt0, t1 INNER JOIN vt0 ON NULL ORDER BY ((CAST(t1.c43 AS BLOB)) NOT NULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t1 INNER JOIN vt0 ON NULL WHERE ((((rt0.c0, t1.c0, t1.c43)) BETWEEN ((CAST(rt0.c0 AS INTEGER), SQLITE_SOURCE_ID(), ((((t1.c43)AND(t1.c43)))AND('96530446')))) AND (((+ (t1.c43)), ((rt0.c1) NOTNULL), NULL)))) ORDER BY ((CAST(t1.c43 AS BLOB)) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, t1.c0, t1.c43)) BETWEEN ((CAST(rt0.c0 AS INTEGER), SQLITE_SOURCE_ID(), ((((t1.c43)AND(t1.c43)))AND('96530446')))) AND (((+ (t1.c43)), ((rt0.c1) NOTNULL), NULL)))) IS TRUE)  as count FROM rt0, t1 INNER JOIN vt0 ON NULL ORDER BY ((CAST(t1.c43 AS BLOB)) NOT NULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t1 INNER JOIN vt0 ON NULL WHERE ((((rt0.c0, t1.c0, t1.c43)) BETWEEN ((CAST(rt0.c0 AS INTEGER), SQLITE_SOURCE_ID(), ((((t1.c43)AND(t1.c43)))AND('96530446')))) AND (((+ (t1.c43)), ((rt0.c1) NOTNULL), NULL)))) ORDER BY ((CAST(t1.c43 AS BLOB)) NOT NULL) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t1, vt1 WHERE ('-2029147758') ORDER BY (~ (0.1226800653232647))  NULLS LAST, (+ (0.24257409999257518));
SELECT SUM(count) FROM (SELECT ALL (('-2029147758') IS TRUE)  as count FROM t1, vt1 ORDER BY (~ (0.1226800653232647))  NULLS LAST, (+ (0.24257409999257518)));
SELECT COUNT(*) FROM t1, vt1 WHERE ('-2029147758') ORDER BY (~ (0.1226800653232647))  NULLS LAST, (+ (0.24257409999257518));
SELECT SUM(count) FROM (SELECT ALL (('-2029147758') IS TRUE)  as count FROM t1, vt1 ORDER BY (~ (0.1226800653232647))  NULLS LAST, (+ (0.24257409999257518)));
SELECT COUNT(*) FROM t1, vt1 WHERE ('-2029147758') ORDER BY (~ (0.1226800653232647))  NULLS LAST, (+ (0.24257409999257518));
SELECT COUNT(*) FROM vt1, vt0, rt0 CROSS JOIN t1 ON (((t1.c1)) BETWEEN ((((t1.c43)OR(t1.c34)))) AND ((((t1.c0) IS FALSE)))) WHERE ((~ (t1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((~ (t1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0, rt0 CROSS JOIN t1 ON (((t1.c1)) BETWEEN ((((t1.c43)OR(t1.c34)))) AND ((((t1.c0) IS FALSE)))));
SELECT COUNT(*) FROM vt1, vt0, rt0 CROSS JOIN t1 ON (((t1.c1)) BETWEEN ((((t1.c43)OR(t1.c34)))) AND ((((t1.c0) IS FALSE)))) WHERE ((~ (t1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((~ (t1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0, rt0 CROSS JOIN t1 ON (((t1.c1)) BETWEEN ((((t1.c43)OR(t1.c34)))) AND ((((t1.c0) IS FALSE)))));
SELECT COUNT(*) FROM vt1, vt0, rt0 CROSS JOIN t1 ON (((t1.c1)) BETWEEN ((((t1.c43)OR(t1.c34)))) AND ((((t1.c0) IS FALSE)))) WHERE ((~ (t1.c0)) COLLATE NOCASE);
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((CAST(vt0.c0 AS INTEGER))>>(LIKELY(vt1.c0))) WHERE ((((vt1.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((CAST(vt1.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((CAST(vt1.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((CAST(vt0.c0 AS INTEGER))>>(LIKELY(vt1.c0))));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((CAST(vt0.c0 AS INTEGER))>>(LIKELY(vt1.c0))) WHERE ((((vt1.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((CAST(vt1.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((CAST(vt1.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((CAST(vt0.c0 AS INTEGER))>>(LIKELY(vt1.c0))));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((CAST(vt0.c0 AS INTEGER))>>(LIKELY(vt1.c0))) WHERE ((((vt1.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((CAST(vt1.c0 AS NUMERIC)))));
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 NATURAL JOIN t1 WHERE (((rt0.c1) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOTNULL)) IS TRUE)  as count FROM vt1, rt0, vt0 NATURAL JOIN t1);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 NATURAL JOIN t1 WHERE (((rt0.c1) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOTNULL)) IS TRUE)  as count FROM vt1, rt0, vt0 NATURAL JOIN t1);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 NATURAL JOIN t1 WHERE (((rt0.c1) NOTNULL));
SELECT ALL * FROM rt0 NATURAL JOIN t1 WHERE (((((NOT ('')), CAST(rt0.c1 AS NUMERIC), ((((t1.c1)AND(rt0.c0)))AND(rt0.c2)), NULL, (((rt0.c0)) BETWEEN ((t1.c34)) AND ((NULL)))))>((((rt0.c1)OR(780426840)), (- (t1.c1)), LOWER(t1.c0), json_object(t1.c34, rt0.c1), NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((NOT ('')), CAST(rt0.c1 AS NUMERIC), ((((t1.c1)AND(rt0.c0)))AND(rt0.c2)), NULL, (((rt0.c0)) BETWEEN ((t1.c34)) AND ((NULL)))))>((((rt0.c1)OR(780426840)), (- (t1.c1)), LOWER(t1.c0), json_object(t1.c34, rt0.c1), NULL)))) IS TRUE)  as count FROM rt0 NATURAL JOIN t1);
SELECT ALL * FROM rt0 NATURAL JOIN t1 WHERE (((((NOT ('')), CAST(rt0.c1 AS NUMERIC), ((((t1.c1)AND(rt0.c0)))AND(rt0.c2)), NULL, (((rt0.c0)) BETWEEN ((t1.c34)) AND ((NULL)))))>((((rt0.c1)OR(780426840)), (- (t1.c1)), LOWER(t1.c0), json_object(t1.c34, rt0.c1), NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((NOT ('')), CAST(rt0.c1 AS NUMERIC), ((((t1.c1)AND(rt0.c0)))AND(rt0.c2)), NULL, (((rt0.c0)) BETWEEN ((t1.c34)) AND ((NULL)))))>((((rt0.c1)OR(780426840)), (- (t1.c1)), LOWER(t1.c0), json_object(t1.c34, rt0.c1), NULL)))) IS TRUE)  as count FROM rt0 NATURAL JOIN t1);
SELECT ALL * FROM rt0 NATURAL JOIN t1 WHERE (((((NOT ('')), CAST(rt0.c1 AS NUMERIC), ((((t1.c1)AND(rt0.c0)))AND(rt0.c2)), NULL, (((rt0.c0)) BETWEEN ((t1.c34)) AND ((NULL)))))>((((rt0.c1)OR(780426840)), (- (t1.c1)), LOWER(t1.c0), json_object(t1.c34, rt0.c1), NULL))));
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (IFNULL(((t1.c0) NOTNULL), '-547455844')) ORDER BY ((CAST(t1.c0 AS NUMERIC))<<(CASE t1.c43  WHEN t1.c1 THEN t1.c43 ELSE t1.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ((IFNULL(((t1.c0) NOTNULL), '-547455844')) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY ((CAST(t1.c0 AS NUMERIC))<<(CASE t1.c43  WHEN t1.c1 THEN t1.c43 ELSE t1.c0 END)) ASC);
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (IFNULL(((t1.c0) NOTNULL), '-547455844')) ORDER BY ((CAST(t1.c0 AS NUMERIC))<<(CASE t1.c43  WHEN t1.c1 THEN t1.c43 ELSE t1.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ((IFNULL(((t1.c0) NOTNULL), '-547455844')) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY ((CAST(t1.c0 AS NUMERIC))<<(CASE t1.c43  WHEN t1.c1 THEN t1.c43 ELSE t1.c0 END)) ASC);
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (IFNULL(((t1.c0) NOTNULL), '-547455844')) ORDER BY ((CAST(t1.c0 AS NUMERIC))<<(CASE t1.c43  WHEN t1.c1 THEN t1.c43 ELSE t1.c0 END)) ASC;
SELECT ALL * FROM rt0, vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL * FROM rt0, vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL * FROM rt0, vt0, vt1 WHERE (vt0.c0);
SELECT * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((- ('0.8193661133217168')));
SELECT SUM(count) FROM (SELECT (((- ('0.8193661133217168'))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- ('0.8193661133217168')));
SELECT SUM(count) FROM (SELECT (((- ('0.8193661133217168'))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- ('0.8193661133217168')));
SELECT ALL * FROM vt1, rt0, t1, vt0 WHERE (CASE LIKELY(rt0.c0)  WHEN (((x'')) BETWEEN ((rt0.c0)) AND ((t1.c34))) THEN ((t1.c43) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE LIKELY(rt0.c0)  WHEN (((x'')) BETWEEN ((rt0.c0)) AND ((t1.c34))) THEN ((t1.c43) NOTNULL) END) IS TRUE)  as count FROM vt1, rt0, t1, vt0);
SELECT ALL * FROM vt1, rt0, t1, vt0 WHERE (CASE LIKELY(rt0.c0)  WHEN (((x'')) BETWEEN ((rt0.c0)) AND ((t1.c34))) THEN ((t1.c43) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE LIKELY(rt0.c0)  WHEN (((x'')) BETWEEN ((rt0.c0)) AND ((t1.c34))) THEN ((t1.c43) NOTNULL) END) IS TRUE)  as count FROM vt1, rt0, t1, vt0);
SELECT ALL * FROM vt1, rt0, t1, vt0 WHERE (CASE LIKELY(rt0.c0)  WHEN (((x'')) BETWEEN ((rt0.c0)) AND ((t1.c34))) THEN ((t1.c43) NOTNULL) END);
SELECT * FROM vt0, vt1 WHERE (CAST(0.808263632985479 AS BLOB)) ORDER BY TRIM(DISTINCT ((vt1.c0) NOT BETWEEN (0.3584874525040448) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ((CAST(0.808263632985479 AS BLOB)) IS TRUE)  as count FROM vt0, vt1 ORDER BY TRIM(DISTINCT ((vt1.c0) NOT BETWEEN (0.3584874525040448) AND (vt1.c0))));
SELECT * FROM vt0, vt1 WHERE (CAST(0.808263632985479 AS BLOB)) ORDER BY TRIM(DISTINCT ((vt1.c0) NOT BETWEEN (0.3584874525040448) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ((CAST(0.808263632985479 AS BLOB)) IS TRUE)  as count FROM vt0, vt1 ORDER BY TRIM(DISTINCT ((vt1.c0) NOT BETWEEN (0.3584874525040448) AND (vt1.c0))));
SELECT * FROM vt0, vt1 WHERE (CAST(0.808263632985479 AS BLOB)) ORDER BY TRIM(DISTINCT ((vt1.c0) NOT BETWEEN (0.3584874525040448) AND (vt1.c0)));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (IFNULL((~ ('623008604')), ((((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))) ORDER BY ((vt1.c0 COLLATE RTRIM)>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC, ((((vt0.c0)IS(vt0.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((IFNULL((~ ('623008604')), ((((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c0 COLLATE RTRIM)>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC, ((((vt0.c0)IS(vt0.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (IFNULL((~ ('623008604')), ((((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))) ORDER BY ((vt1.c0 COLLATE RTRIM)>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC, ((((vt0.c0)IS(vt0.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((IFNULL((~ ('623008604')), ((((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c0 COLLATE RTRIM)>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC, ((((vt0.c0)IS(vt0.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (IFNULL((~ ('623008604')), ((((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))) ORDER BY ((vt1.c0 COLLATE RTRIM)>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC, ((((vt0.c0)IS(vt0.c0))) NOTNULL);
SELECT COUNT(*) FROM vt0, t1 RIGHT OUTER JOIN rt0 ON CASE ((t1.c0)/(rt0.c0))  WHEN ((((rt0.c1)AND(vt0.c0)))OR(vt1.c0)) THEN vt1.c0 END RIGHT OUTER JOIN vt1 ON (NOT (CASE WHEN '-1630808384' THEN t1.c1 WHEN x'' THEN '' WHEN rt0.c0 THEN t1.c0 ELSE t1.c34 END)) WHERE (TRIM(DISTINCT CASE WHEN t1.c0 THEN t1.c43 END));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT CASE WHEN t1.c0 THEN t1.c43 END)) IS TRUE)  as count FROM vt0, t1 RIGHT OUTER JOIN rt0 ON CASE ((t1.c0)/(rt0.c0))  WHEN ((((rt0.c1)AND(vt0.c0)))OR(vt1.c0)) THEN vt1.c0 END RIGHT OUTER JOIN vt1 ON (NOT (CASE WHEN '-1630808384' THEN t1.c1 WHEN x'' THEN '' WHEN rt0.c0 THEN t1.c0 ELSE t1.c34 END)));
SELECT COUNT(*) FROM vt0, t1 RIGHT OUTER JOIN rt0 ON CASE ((t1.c0)/(rt0.c0))  WHEN ((((rt0.c1)AND(vt0.c0)))OR(vt1.c0)) THEN vt1.c0 END RIGHT OUTER JOIN vt1 ON (NOT (CASE WHEN '-1630808384' THEN t1.c1 WHEN x'' THEN '' WHEN rt0.c0 THEN t1.c0 ELSE t1.c34 END)) WHERE (TRIM(DISTINCT CASE WHEN t1.c0 THEN t1.c43 END));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT CASE WHEN t1.c0 THEN t1.c43 END)) IS TRUE)  as count FROM vt0, t1 RIGHT OUTER JOIN rt0 ON CASE ((t1.c0)/(rt0.c0))  WHEN ((((rt0.c1)AND(vt0.c0)))OR(vt1.c0)) THEN vt1.c0 END RIGHT OUTER JOIN vt1 ON (NOT (CASE WHEN '-1630808384' THEN t1.c1 WHEN x'' THEN '' WHEN rt0.c0 THEN t1.c0 ELSE t1.c34 END)));
SELECT ALL COUNT(*) FROM vt0, vt1, t1 WHERE (('1493327801' IN (((((t1.c43)AND(t1.c34)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((('1493327801' IN (((((t1.c43)AND(t1.c34)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT ALL COUNT(*) FROM vt0, vt1, t1 WHERE (('1493327801' IN (((((t1.c43)AND(t1.c34)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((('1493327801' IN (((((t1.c43)AND(t1.c34)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT ALL COUNT(*) FROM vt0, vt1, t1 WHERE (('1493327801' IN (((((t1.c43)AND(t1.c34)))AND(vt0.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) IS TRUE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) IS TRUE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) IS TRUE) COLLATE RTRIM);
SELECT * FROM vt1, rt0 NATURAL JOIN vt0 WHERE (((((json_quote(vt1.c0))OR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)))AND(rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((json_quote(vt1.c0))OR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)))AND(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, rt0 NATURAL JOIN vt0);
SELECT * FROM vt1, rt0 NATURAL JOIN vt0 WHERE (((((json_quote(vt1.c0))OR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)))AND(rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((json_quote(vt1.c0))OR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)))AND(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, rt0 NATURAL JOIN vt0);
SELECT * FROM vt1, rt0 NATURAL JOIN vt0 WHERE (((((json_quote(vt1.c0))OR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)))AND(rt0.c1 COLLATE NOCASE)));
SELECT ALL * FROM vt1, rt0, vt0, t1 WHERE ((((rt0.c2, t1.c34, NULL, vt1.c0, t1.c1)) NOT BETWEEN (((- (vt0.c0)), vt1.c0 COLLATE NOCASE, '146526567', ((((((((vt1.c0)OR(t1.c1)))OR(rt0.c1)))AND(rt0.c2)))AND(t1.c0)), CAST(t1.c34 AS BLOB))) AND ((((t1.c0) IS FALSE), t1.c0 COLLATE NOCASE, ((t1.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0)), t1.c0, rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, t1.c34, NULL, vt1.c0, t1.c1)) NOT BETWEEN (((- (vt0.c0)), vt1.c0 COLLATE NOCASE, '146526567', ((((((((vt1.c0)OR(t1.c1)))OR(rt0.c1)))AND(rt0.c2)))AND(t1.c0)), CAST(t1.c34 AS BLOB))) AND ((((t1.c0) IS FALSE), t1.c0 COLLATE NOCASE, ((t1.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0)), t1.c0, rt0.c2)))) IS TRUE)  as count FROM vt1, rt0, vt0, t1);
SELECT ALL * FROM vt1, rt0, vt0, t1 WHERE ((((rt0.c2, t1.c34, NULL, vt1.c0, t1.c1)) NOT BETWEEN (((- (vt0.c0)), vt1.c0 COLLATE NOCASE, '146526567', ((((((((vt1.c0)OR(t1.c1)))OR(rt0.c1)))AND(rt0.c2)))AND(t1.c0)), CAST(t1.c34 AS BLOB))) AND ((((t1.c0) IS FALSE), t1.c0 COLLATE NOCASE, ((t1.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0)), t1.c0, rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, t1.c34, NULL, vt1.c0, t1.c1)) NOT BETWEEN (((- (vt0.c0)), vt1.c0 COLLATE NOCASE, '146526567', ((((((((vt1.c0)OR(t1.c1)))OR(rt0.c1)))AND(rt0.c2)))AND(t1.c0)), CAST(t1.c34 AS BLOB))) AND ((((t1.c0) IS FALSE), t1.c0 COLLATE NOCASE, ((t1.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0)), t1.c0, rt0.c2)))) IS TRUE)  as count FROM vt1, rt0, vt0, t1);
SELECT ALL * FROM vt1, rt0, vt0, t1 WHERE ((((rt0.c2, t1.c34, NULL, vt1.c0, t1.c1)) NOT BETWEEN (((- (vt0.c0)), vt1.c0 COLLATE NOCASE, '146526567', ((((((((vt1.c0)OR(t1.c1)))OR(rt0.c1)))AND(rt0.c2)))AND(t1.c0)), CAST(t1.c34 AS BLOB))) AND ((((t1.c0) IS FALSE), t1.c0 COLLATE NOCASE, ((t1.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0)), t1.c0, rt0.c2))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)/(vt1.c0))) NOT NULL)) ORDER BY (((vt1.c0, 0xffffffffa963e392, NULL)) NOT BETWEEN ((((vt1.c0) IS FALSE), CAST(vt1.c0 AS INTEGER), CAST(vt1.c0 AS NUMERIC))) AND ((NULLIF(vt1.c0, vt1.c0), (('Lo_') NOT BETWEEN (vt1.c0) AND (vt1.c0)), (vt1.c0 IN ('-2022929578', vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)/(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, 0xffffffffa963e392, NULL)) NOT BETWEEN ((((vt1.c0) IS FALSE), CAST(vt1.c0 AS INTEGER), CAST(vt1.c0 AS NUMERIC))) AND ((NULLIF(vt1.c0, vt1.c0), (('Lo_') NOT BETWEEN (vt1.c0) AND (vt1.c0)), (vt1.c0 IN ('-2022929578', vt1.c0))))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)/(vt1.c0))) NOT NULL)) ORDER BY (((vt1.c0, 0xffffffffa963e392, NULL)) NOT BETWEEN ((((vt1.c0) IS FALSE), CAST(vt1.c0 AS INTEGER), CAST(vt1.c0 AS NUMERIC))) AND ((NULLIF(vt1.c0, vt1.c0), (('Lo_') NOT BETWEEN (vt1.c0) AND (vt1.c0)), (vt1.c0 IN ('-2022929578', vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)/(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, 0xffffffffa963e392, NULL)) NOT BETWEEN ((((vt1.c0) IS FALSE), CAST(vt1.c0 AS INTEGER), CAST(vt1.c0 AS NUMERIC))) AND ((NULLIF(vt1.c0, vt1.c0), (('Lo_') NOT BETWEEN (vt1.c0) AND (vt1.c0)), (vt1.c0 IN ('-2022929578', vt1.c0))))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)/(vt1.c0))) NOT NULL)) ORDER BY (((vt1.c0, 0xffffffffa963e392, NULL)) NOT BETWEEN ((((vt1.c0) IS FALSE), CAST(vt1.c0 AS INTEGER), CAST(vt1.c0 AS NUMERIC))) AND ((NULLIF(vt1.c0, vt1.c0), (('Lo_') NOT BETWEEN (vt1.c0) AND (vt1.c0)), (vt1.c0 IN ('-2022929578', vt1.c0)))));
SELECT ALL * FROM vt0, vt1 WHERE ('0.36390172210913363');
SELECT SUM(count) FROM (SELECT ALL (('0.36390172210913363') IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ('0.36390172210913363');
SELECT SUM(count) FROM (SELECT ALL (('0.36390172210913363') IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ('0.36390172210913363');
SELECT COUNT(*) FROM vt0, rt0, vt1, t1 WHERE ((((rt0.c1, vt0.c0, vt0.c0)) BETWEEN ((((rt0.c0)||(vt0.c0)), (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))), CAST(t1.c34 AS REAL))) AND (((((t1.c1))!=((rt0.c1))), ((t1.c34) IS TRUE), (~ (vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, vt0.c0, vt0.c0)) BETWEEN ((((rt0.c0)||(vt0.c0)), (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))), CAST(t1.c34 AS REAL))) AND (((((t1.c1))!=((rt0.c1))), ((t1.c34) IS TRUE), (~ (vt1.c0)))))) IS TRUE)  as count FROM vt0, rt0, vt1, t1);
SELECT COUNT(*) FROM vt0, rt0, vt1, t1 WHERE ((((rt0.c1, vt0.c0, vt0.c0)) BETWEEN ((((rt0.c0)||(vt0.c0)), (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))), CAST(t1.c34 AS REAL))) AND (((((t1.c1))!=((rt0.c1))), ((t1.c34) IS TRUE), (~ (vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, vt0.c0, vt0.c0)) BETWEEN ((((rt0.c0)||(vt0.c0)), (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))), CAST(t1.c34 AS REAL))) AND (((((t1.c1))!=((rt0.c1))), ((t1.c34) IS TRUE), (~ (vt1.c0)))))) IS TRUE)  as count FROM vt0, rt0, vt1, t1);
SELECT COUNT(*) FROM vt0, rt0, vt1, t1 WHERE ((((rt0.c1, vt0.c0, vt0.c0)) BETWEEN ((((rt0.c0)||(vt0.c0)), (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))), CAST(t1.c34 AS REAL))) AND (((((t1.c1))!=((rt0.c1))), ((t1.c34) IS TRUE), (~ (vt1.c0))))));
SELECT * FROM rt0, vt1, vt0 WHERE ((CAST(vt1.c0 AS BLOB) IN ())) ORDER BY json_patch(CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN '*|' THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END, ((rt0.c0)<=(vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS BLOB) IN ())) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY json_patch(CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN '*|' THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END, ((rt0.c0)<=(vt0.c0))) DESC  NULLS FIRST);
SELECT * FROM rt0, vt1, vt0 WHERE ((CAST(vt1.c0 AS BLOB) IN ())) ORDER BY json_patch(CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN '*|' THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END, ((rt0.c0)<=(vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS BLOB) IN ())) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY json_patch(CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN '*|' THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END, ((rt0.c0)<=(vt0.c0))) DESC  NULLS FIRST);
SELECT * FROM rt0, vt1, vt0 WHERE ((CAST(vt1.c0 AS BLOB) IN ())) ORDER BY json_patch(CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN '*|' THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END, ((rt0.c0)<=(vt0.c0))) DESC  NULLS FIRST;
SELECT * FROM vt1, rt0, t1 WHERE ((NOT (((vt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt1, rt0, t1);
SELECT * FROM vt1, rt0, t1 WHERE ((NOT (((vt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt1, rt0, t1);
SELECT * FROM vt1, rt0, t1 WHERE ((NOT (((vt1.c0) IS FALSE))));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((+ (((((((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0))))) ORDER BY LIKELY(vt0.c0 COLLATE NOCASE) DESC, CAST(0.36833984278489373 AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY LIKELY(vt0.c0 COLLATE NOCASE) DESC, CAST(0.36833984278489373 AS BLOB) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((+ (((((((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0))))) ORDER BY LIKELY(vt0.c0 COLLATE NOCASE) DESC, CAST(0.36833984278489373 AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY LIKELY(vt0.c0 COLLATE NOCASE) DESC, CAST(0.36833984278489373 AS BLOB) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((+ (((((((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0))))) ORDER BY LIKELY(vt0.c0 COLLATE NOCASE) DESC, CAST(0.36833984278489373 AS BLOB) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (CAST(DATE(rt0.c0, rt0.c0, rt0.c2) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(DATE(rt0.c0, rt0.c0, rt0.c2) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(DATE(rt0.c0, rt0.c0, rt0.c2) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(DATE(rt0.c0, rt0.c0, rt0.c2) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(DATE(rt0.c0, rt0.c0, rt0.c2) AS INTEGER));
SELECT * FROM vt1, t1 LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (t1.c1) AND (rt0.c0))) NOTNULL) INNER JOIN rt0 ON CAST(vt1.c0 AS TEXT) WHERE (t1.c34);
SELECT SUM(count) FROM (SELECT ((t1.c34) IS TRUE)  as count FROM vt1, t1 LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (t1.c1) AND (rt0.c0))) NOTNULL) INNER JOIN rt0 ON CAST(vt1.c0 AS TEXT));
SELECT * FROM vt1, t1 LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (t1.c1) AND (rt0.c0))) NOTNULL) INNER JOIN rt0 ON CAST(vt1.c0 AS TEXT) WHERE (t1.c34);
SELECT SUM(count) FROM (SELECT ((t1.c34) IS TRUE)  as count FROM vt1, t1 LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (t1.c1) AND (rt0.c0))) NOTNULL) INNER JOIN rt0 ON CAST(vt1.c0 AS TEXT));
SELECT COUNT(*) FROM t1 WHERE (((((((((((t1.c34)>=(t1.c0)))OR((x'' IN ()))))AND((((t1.c34, t1.c1, t1.c43)) BETWEEN ((NULL, t1.c1, t1.c34)) AND ((t1.c1, t1.c43, t1.c43))))))AND(((t1.c43) NOTNULL))))AND(((t1.c34)|(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c34)>=(t1.c0)))OR((x'' IN ()))))AND((((t1.c34, t1.c1, t1.c43)) BETWEEN ((NULL, t1.c1, t1.c34)) AND ((t1.c1, t1.c43, t1.c43))))))AND(((t1.c43) NOTNULL))))AND(((t1.c34)|(t1.c0))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((((((((t1.c34)>=(t1.c0)))OR((x'' IN ()))))AND((((t1.c34, t1.c1, t1.c43)) BETWEEN ((NULL, t1.c1, t1.c34)) AND ((t1.c1, t1.c43, t1.c43))))))AND(((t1.c43) NOTNULL))))AND(((t1.c34)|(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c34)>=(t1.c0)))OR((x'' IN ()))))AND((((t1.c34, t1.c1, t1.c43)) BETWEEN ((NULL, t1.c1, t1.c34)) AND ((t1.c1, t1.c43, t1.c43))))))AND(((t1.c43) NOTNULL))))AND(((t1.c34)|(t1.c0))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((((((((t1.c34)>=(t1.c0)))OR((x'' IN ()))))AND((((t1.c34, t1.c1, t1.c43)) BETWEEN ((NULL, t1.c1, t1.c34)) AND ((t1.c1, t1.c43, t1.c43))))))AND(((t1.c43) NOTNULL))))AND(((t1.c34)|(t1.c0)))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON ((t1.c43) BETWEEN (vt0.c0) AND (t1.c43)) COLLATE RTRIM RIGHT OUTER JOIN t1 ON (((('-280154878')||(vt0.c0)))IS((t1.c0 IN ()))) CROSS JOIN vt0 ON ((((-449021372)OR(((t1.c34) NOT BETWEEN (rt0.c1) AND (vt1.c0)))))AND(t1.c0 COLLATE BINARY)) WHERE (((((x'')OR(((vt1.c0)LIKE(vt1.c0)))))OR(NULL))) ORDER BY ((UNLIKELY(t1.c0)) NOT BETWEEN (NULL) AND (((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))) ASC, ((((t1.c34) NOTNULL)) BETWEEN (vt1.c0 COLLATE RTRIM) AND (((0.20171174570896222) IS FALSE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')OR(((vt1.c0)LIKE(vt1.c0)))))OR(NULL))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((t1.c43) BETWEEN (vt0.c0) AND (t1.c43)) COLLATE RTRIM RIGHT OUTER JOIN t1 ON (((('-280154878')||(vt0.c0)))IS((t1.c0 IN ()))) CROSS JOIN vt0 ON ((((-449021372)OR(((t1.c34) NOT BETWEEN (rt0.c1) AND (vt1.c0)))))AND(t1.c0 COLLATE BINARY)) ORDER BY ((UNLIKELY(t1.c0)) NOT BETWEEN (NULL) AND (((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))) ASC, ((((t1.c34) NOTNULL)) BETWEEN (vt1.c0 COLLATE RTRIM) AND (((0.20171174570896222) IS FALSE))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON ((t1.c43) BETWEEN (vt0.c0) AND (t1.c43)) COLLATE RTRIM RIGHT OUTER JOIN t1 ON (((('-280154878')||(vt0.c0)))IS((t1.c0 IN ()))) CROSS JOIN vt0 ON ((((-449021372)OR(((t1.c34) NOT BETWEEN (rt0.c1) AND (vt1.c0)))))AND(t1.c0 COLLATE BINARY)) WHERE (((((x'')OR(((vt1.c0)LIKE(vt1.c0)))))OR(NULL))) ORDER BY ((UNLIKELY(t1.c0)) NOT BETWEEN (NULL) AND (((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))) ASC, ((((t1.c34) NOTNULL)) BETWEEN (vt1.c0 COLLATE RTRIM) AND (((0.20171174570896222) IS FALSE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')OR(((vt1.c0)LIKE(vt1.c0)))))OR(NULL))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((t1.c43) BETWEEN (vt0.c0) AND (t1.c43)) COLLATE RTRIM RIGHT OUTER JOIN t1 ON (((('-280154878')||(vt0.c0)))IS((t1.c0 IN ()))) CROSS JOIN vt0 ON ((((-449021372)OR(((t1.c34) NOT BETWEEN (rt0.c1) AND (vt1.c0)))))AND(t1.c0 COLLATE BINARY)) ORDER BY ((UNLIKELY(t1.c0)) NOT BETWEEN (NULL) AND (((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))) ASC, ((((t1.c34) NOTNULL)) BETWEEN (vt1.c0 COLLATE RTRIM) AND (((0.20171174570896222) IS FALSE))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0, t1 WHERE (CASE (((t1.c0))>((t1.c0)))  WHEN ((vt0.c0) NOTNULL) THEN CAST(t1.c1 AS REAL) ELSE ((rt0.c0)GLOB(t1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE (((t1.c0))>((t1.c0)))  WHEN ((vt0.c0) NOTNULL) THEN CAST(t1.c1 AS REAL) ELSE ((rt0.c0)GLOB(t1.c1)) END) IS TRUE)  as count FROM rt0, vt1, vt0, t1);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0, t1 WHERE (CASE (((t1.c0))>((t1.c0)))  WHEN ((vt0.c0) NOTNULL) THEN CAST(t1.c1 AS REAL) ELSE ((rt0.c0)GLOB(t1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE (((t1.c0))>((t1.c0)))  WHEN ((vt0.c0) NOTNULL) THEN CAST(t1.c1 AS REAL) ELSE ((rt0.c0)GLOB(t1.c1)) END) IS TRUE)  as count FROM rt0, vt1, vt0, t1);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0, t1 WHERE (CASE (((t1.c0))>((t1.c0)))  WHEN ((vt0.c0) NOTNULL) THEN CAST(t1.c1 AS REAL) ELSE ((rt0.c0)GLOB(t1.c1)) END);
SELECT COUNT(*) FROM rt0, vt0 NOT INDEXED, t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c43) AND (rt0.c0))) BETWEEN (CASE t1.c43  WHEN rt0.c2 THEN rt0.c1 WHEN t1.c0 THEN t1.c34 WHEN '0.6003816852306632' THEN rt0.c2 ELSE rt0.c1 END) AND (CAST(t1.c1 AS REAL)))) ORDER BY CASE t1.c34  WHEN rt0.c2 THEN t1.c0 ELSE rt0.c0 END COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c1) NOT BETWEEN (t1.c43) AND (rt0.c0))) BETWEEN (CASE t1.c43  WHEN rt0.c2 THEN rt0.c1 WHEN t1.c0 THEN t1.c34 WHEN '0.6003816852306632' THEN rt0.c2 ELSE rt0.c1 END) AND (CAST(t1.c1 AS REAL)))) IS TRUE)  as count FROM rt0, vt0, t1 ORDER BY CASE t1.c34  WHEN rt0.c2 THEN t1.c0 ELSE rt0.c0 END COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 NOT INDEXED, t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c43) AND (rt0.c0))) BETWEEN (CASE t1.c43  WHEN rt0.c2 THEN rt0.c1 WHEN t1.c0 THEN t1.c34 WHEN '0.6003816852306632' THEN rt0.c2 ELSE rt0.c1 END) AND (CAST(t1.c1 AS REAL)))) ORDER BY CASE t1.c34  WHEN rt0.c2 THEN t1.c0 ELSE rt0.c0 END COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c1) NOT BETWEEN (t1.c43) AND (rt0.c0))) BETWEEN (CASE t1.c43  WHEN rt0.c2 THEN rt0.c1 WHEN t1.c0 THEN t1.c34 WHEN '0.6003816852306632' THEN rt0.c2 ELSE rt0.c1 END) AND (CAST(t1.c1 AS REAL)))) IS TRUE)  as count FROM rt0, vt0, t1 ORDER BY CASE t1.c34  WHEN rt0.c2 THEN t1.c0 ELSE rt0.c0 END COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 NOT INDEXED, t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c43) AND (rt0.c0))) BETWEEN (CASE t1.c43  WHEN rt0.c2 THEN rt0.c1 WHEN t1.c0 THEN t1.c34 WHEN '0.6003816852306632' THEN rt0.c2 ELSE rt0.c1 END) AND (CAST(t1.c1 AS REAL)))) ORDER BY CASE t1.c34  WHEN rt0.c2 THEN t1.c0 ELSE rt0.c0 END COLLATE NOCASE  NULLS LAST;
SELECT ALL * FROM t1 WHERE (CAST(((t1.c0) ISNULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c0) ISNULL) AS NUMERIC)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CAST(((t1.c0) ISNULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c0) ISNULL) AS NUMERIC)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CAST(((t1.c0) ISNULL) AS NUMERIC));
SELECT COUNT(*) FROM t1 WHERE ((((t1.c34)) NOT BETWEEN ((t1.c34)) AND ((t1.c43))) COLLATE RTRIM) ORDER BY (((((- (t1.c0)))OR(CASE WHEN x'' THEN t1.c34 ELSE t1.c34 END)))AND(((t1.c1)>=(t1.c43)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c34)) NOT BETWEEN ((t1.c34)) AND ((t1.c43))) COLLATE RTRIM) IS TRUE)  as count FROM t1 ORDER BY (((((- (t1.c0)))OR(CASE WHEN x'' THEN t1.c34 ELSE t1.c34 END)))AND(((t1.c1)>=(t1.c43)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c34)) NOT BETWEEN ((t1.c34)) AND ((t1.c43))) COLLATE RTRIM) ORDER BY (((((- (t1.c0)))OR(CASE WHEN x'' THEN t1.c34 ELSE t1.c34 END)))AND(((t1.c1)>=(t1.c43)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c34)) NOT BETWEEN ((t1.c34)) AND ((t1.c43))) COLLATE RTRIM) IS TRUE)  as count FROM t1 ORDER BY (((((- (t1.c0)))OR(CASE WHEN x'' THEN t1.c34 ELSE t1.c34 END)))AND(((t1.c1)>=(t1.c43)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c34)) NOT BETWEEN ((t1.c34)) AND ((t1.c43))) COLLATE RTRIM) ORDER BY (((((- (t1.c0)))OR(CASE WHEN x'' THEN t1.c34 ELSE t1.c34 END)))AND(((t1.c1)>=(t1.c43)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM)/(rt0.c1))) ORDER BY '385656518' COLLATE RTRIM COLLATE NOCASE, CAST((rt0.c2 IN ()) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM)/(rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY '385656518' COLLATE RTRIM COLLATE NOCASE, CAST((rt0.c2 IN ()) AS INTEGER)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM)/(rt0.c1))) ORDER BY '385656518' COLLATE RTRIM COLLATE NOCASE, CAST((rt0.c2 IN ()) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM)/(rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY '385656518' COLLATE RTRIM COLLATE NOCASE, CAST((rt0.c2 IN ()) AS INTEGER)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM)/(rt0.c1))) ORDER BY '385656518' COLLATE RTRIM COLLATE NOCASE, CAST((rt0.c2 IN ()) AS INTEGER)  NULLS LAST;
SELECT * FROM t1, rt0 WHERE (CAST(rt0.c1 AS TEXT) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE (CAST(rt0.c1 AS TEXT) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE (CAST(rt0.c1 AS TEXT) COLLATE BINARY);
SELECT COUNT(*) FROM t1 WHERE (((((CAST(t1.c34 AS NUMERIC))AND(t1.c0 COLLATE RTRIM)))OR(CASE WHEN '-371732257' THEN NULL WHEN t1.c43 THEN t1.c1 WHEN t1.c0 THEN t1.c43 WHEN t1.c0 THEN t1.c34 WHEN t1.c0 THEN 0.16774244931988702 ELSE t1.c43 END)));
SELECT SUM(count) FROM (SELECT ((((((CAST(t1.c34 AS NUMERIC))AND(t1.c0 COLLATE RTRIM)))OR(CASE WHEN '-371732257' THEN NULL WHEN t1.c43 THEN t1.c1 WHEN t1.c0 THEN t1.c43 WHEN t1.c0 THEN t1.c34 WHEN t1.c0 THEN 0.16774244931988702 ELSE t1.c43 END))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((CAST(t1.c34 AS NUMERIC))AND(t1.c0 COLLATE RTRIM)))OR(CASE WHEN '-371732257' THEN NULL WHEN t1.c43 THEN t1.c1 WHEN t1.c0 THEN t1.c43 WHEN t1.c0 THEN t1.c34 WHEN t1.c0 THEN 0.16774244931988702 ELSE t1.c43 END)));
SELECT SUM(count) FROM (SELECT ((((((CAST(t1.c34 AS NUMERIC))AND(t1.c0 COLLATE RTRIM)))OR(CASE WHEN '-371732257' THEN NULL WHEN t1.c43 THEN t1.c1 WHEN t1.c0 THEN t1.c43 WHEN t1.c0 THEN t1.c34 WHEN t1.c0 THEN 0.16774244931988702 ELSE t1.c43 END))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((CAST(t1.c34 AS NUMERIC))AND(t1.c0 COLLATE RTRIM)))OR(CASE WHEN '-371732257' THEN NULL WHEN t1.c43 THEN t1.c1 WHEN t1.c0 THEN t1.c43 WHEN t1.c0 THEN t1.c34 WHEN t1.c0 THEN 0.16774244931988702 ELSE t1.c43 END)));
SELECT ALL * FROM rt0 WHERE (UPPER('1814324508'));
SELECT SUM(count) FROM (SELECT ALL ((UPPER('1814324508')) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (UPPER('1814324508'));
SELECT SUM(count) FROM (SELECT ALL ((UPPER('1814324508')) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (UPPER('1814324508'));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((rt0.c2 IN ()) COLLATE RTRIM) ORDER BY CASE json_array(x'', rt0.c1)  WHEN ((rt0.c1) ISNULL) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) ELSE (((rt0.c0)) BETWEEN ((NULL)) AND ((rt0.c2))) END  NULLS FIRST, ((((((((((rt0.c1) NOT NULL))AND(rt0.c2 COLLATE NOCASE)))OR(highlight(rt0.c1, rt0.c2, rt0.c0, rt0.c2))))OR(((((vt1.c0)AND(vt1.c0)))OR(rt0.c1)))))AND(rt0.c1)) ASC  NULLS LAST, CAST(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN vt1.c0 WHEN '0.3484205014657452' THEN rt0.c0 END AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE json_array(x'', rt0.c1)  WHEN ((rt0.c1) ISNULL) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) ELSE (((rt0.c0)) BETWEEN ((NULL)) AND ((rt0.c2))) END  NULLS FIRST, ((((((((((rt0.c1) NOT NULL))AND(rt0.c2 COLLATE NOCASE)))OR(highlight(rt0.c1, rt0.c2, rt0.c0, rt0.c2))))OR(((((vt1.c0)AND(vt1.c0)))OR(rt0.c1)))))AND(rt0.c1)) ASC  NULLS LAST, CAST(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN vt1.c0 WHEN '0.3484205014657452' THEN rt0.c0 END AS TEXT) ASC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((rt0.c2 IN ()) COLLATE RTRIM) ORDER BY CASE json_array(x'', rt0.c1)  WHEN ((rt0.c1) ISNULL) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) ELSE (((rt0.c0)) BETWEEN ((NULL)) AND ((rt0.c2))) END  NULLS FIRST, ((((((((((rt0.c1) NOT NULL))AND(rt0.c2 COLLATE NOCASE)))OR(highlight(rt0.c1, rt0.c2, rt0.c0, rt0.c2))))OR(((((vt1.c0)AND(vt1.c0)))OR(rt0.c1)))))AND(rt0.c1)) ASC  NULLS LAST, CAST(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN vt1.c0 WHEN '0.3484205014657452' THEN rt0.c0 END AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE json_array(x'', rt0.c1)  WHEN ((rt0.c1) ISNULL) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) ELSE (((rt0.c0)) BETWEEN ((NULL)) AND ((rt0.c2))) END  NULLS FIRST, ((((((((((rt0.c1) NOT NULL))AND(rt0.c2 COLLATE NOCASE)))OR(highlight(rt0.c1, rt0.c2, rt0.c0, rt0.c2))))OR(((((vt1.c0)AND(vt1.c0)))OR(rt0.c1)))))AND(rt0.c1)) ASC  NULLS LAST, CAST(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN vt1.c0 WHEN '0.3484205014657452' THEN rt0.c0 END AS TEXT) ASC);
SELECT * FROM t1, vt0 WHERE (CASE (((t1.c1))<=((t1.c0)))  WHEN ((((((((t1.c43)AND(t1.c34)))OR(t1.c43)))OR(t1.c0)))AND(t1.c0)) THEN ((t1.c43)!=(t1.c34)) WHEN ((t1.c43) NOT NULL) THEN ((((0.04795913170712518)AND(t1.c43)))OR(t1.c34)) WHEN NULL THEN ((((((((t1.c43)OR(t1.c0)))AND(t1.c1)))AND(t1.c34)))OR(t1.c43)) END) ORDER BY (NOT (((t1.c0)>=(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t1.c1))<=((t1.c0)))  WHEN ((((((((t1.c43)AND(t1.c34)))OR(t1.c43)))OR(t1.c0)))AND(t1.c0)) THEN ((t1.c43)<>(t1.c34)) WHEN ((t1.c43) NOT NULL) THEN ((((0.04795913170712518)AND(t1.c43)))OR(t1.c34)) WHEN NULL THEN ((((((((t1.c43)OR(t1.c0)))AND(t1.c1)))AND(t1.c34)))OR(t1.c43)) END) IS TRUE)  as count FROM t1, vt0 ORDER BY (NOT (((t1.c0)>=(vt0.c0)))) DESC);
SELECT * FROM t1, vt0 WHERE (CASE (((t1.c1))<=((t1.c0)))  WHEN ((((((((t1.c43)AND(t1.c34)))OR(t1.c43)))OR(t1.c0)))AND(t1.c0)) THEN ((t1.c43)!=(t1.c34)) WHEN ((t1.c43) NOT NULL) THEN ((((0.04795913170712518)AND(t1.c43)))OR(t1.c34)) WHEN NULL THEN ((((((((t1.c43)OR(t1.c0)))AND(t1.c1)))AND(t1.c34)))OR(t1.c43)) END) ORDER BY (NOT (((t1.c0)>=(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t1.c1))<=((t1.c0)))  WHEN ((((((((t1.c43)AND(t1.c34)))OR(t1.c43)))OR(t1.c0)))AND(t1.c0)) THEN ((t1.c43)<>(t1.c34)) WHEN ((t1.c43) NOT NULL) THEN ((((0.04795913170712518)AND(t1.c43)))OR(t1.c34)) WHEN NULL THEN ((((((((t1.c43)OR(t1.c0)))AND(t1.c1)))AND(t1.c34)))OR(t1.c43)) END) IS TRUE)  as count FROM t1, vt0 ORDER BY (NOT (((t1.c0)>=(vt0.c0)))) DESC);
SELECT * FROM t1, vt0 WHERE (CASE (((t1.c1))<=((t1.c0)))  WHEN ((((((((t1.c43)AND(t1.c34)))OR(t1.c43)))OR(t1.c0)))AND(t1.c0)) THEN ((t1.c43)!=(t1.c34)) WHEN ((t1.c43) NOT NULL) THEN ((((0.04795913170712518)AND(t1.c43)))OR(t1.c34)) WHEN NULL THEN ((((((((t1.c43)OR(t1.c0)))AND(t1.c1)))AND(t1.c34)))OR(t1.c43)) END) ORDER BY (NOT (((t1.c0)>=(vt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt1, t1 WHERE ((((('')|(t1.c34))) BETWEEN (('1766594415' IN (t1.c34))) AND (t1.c34 COLLATE NOCASE))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((('')|(t1.c34))) BETWEEN (('1766594415' IN (t1.c34))) AND (t1.c34 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, t1 ORDER BY x'' DESC);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE ((((('')|(t1.c34))) BETWEEN (('1766594415' IN (t1.c34))) AND (t1.c34 COLLATE NOCASE))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((('')|(t1.c34))) BETWEEN (('1766594415' IN (t1.c34))) AND (t1.c34 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, t1 ORDER BY x'' DESC);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE ((((('')|(t1.c34))) BETWEEN (('1766594415' IN (t1.c34))) AND (t1.c34 COLLATE NOCASE))) ORDER BY x'' DESC;
SELECT COUNT(*) FROM rt0 CROSS JOIN t1 ON ((((t1.c43) NOT NULL)) NOT BETWEEN ((((t1.c43))>=((t1.c1)))) AND (((rt0.c1) ISNULL))) LEFT OUTER JOIN vt1 ON (t1.c34 COLLATE NOCASE IN ()) LEFT OUTER JOIN vt0 ON SQLITE_COMPILEOPTION_USED((t1.c0 IN ())) WHERE ((((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t1.c43))))OR((~ (vt0.c0)))))AND('{?'))) ORDER BY (~ (vt1.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t1.c43))))OR((~ (vt0.c0)))))AND('{?'))) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON ((((t1.c43) NOT NULL)) NOT BETWEEN ((((t1.c43))>=((t1.c1)))) AND (((rt0.c1) ISNULL))) LEFT OUTER JOIN vt1 ON (t1.c34 COLLATE NOCASE IN ()) LEFT OUTER JOIN vt0 ON SQLITE_COMPILEOPTION_USED((t1.c0 IN ())) ORDER BY (~ (vt1.c0)) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM rt0 CROSS JOIN t1 ON ((((t1.c43) NOT NULL)) NOT BETWEEN ((((t1.c43))>=((t1.c1)))) AND (((rt0.c1) ISNULL))) LEFT OUTER JOIN vt1 ON (t1.c34 COLLATE NOCASE IN ()) LEFT OUTER JOIN vt0 ON SQLITE_COMPILEOPTION_USED((t1.c0 IN ())) WHERE ((((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t1.c43))))OR((~ (vt0.c0)))))AND('{?'))) ORDER BY (~ (vt1.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t1.c43))))OR((~ (vt0.c0)))))AND('{?'))) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON ((((t1.c43) NOT NULL)) NOT BETWEEN ((((t1.c43))>=((t1.c1)))) AND (((rt0.c1) ISNULL))) LEFT OUTER JOIN vt1 ON (t1.c34 COLLATE NOCASE IN ()) LEFT OUTER JOIN vt0 ON SQLITE_COMPILEOPTION_USED((t1.c0 IN ())) ORDER BY (~ (vt1.c0)) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM rt0 CROSS JOIN t1 ON ((((t1.c43) NOT NULL)) NOT BETWEEN ((((t1.c43))>=((t1.c1)))) AND (((rt0.c1) ISNULL))) LEFT OUTER JOIN vt1 ON (t1.c34 COLLATE NOCASE IN ()) LEFT OUTER JOIN vt0 ON SQLITE_COMPILEOPTION_USED((t1.c0 IN ())) WHERE ((((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t1.c43))))OR((~ (vt0.c0)))))AND('{?'))) ORDER BY (~ (vt1.c0)) COLLATE RTRIM ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)>(vt1.c0))))<=((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))) ORDER BY vt1.c0 DESC  NULLS LAST, ((vt1.c0) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)>(vt1.c0))))<=((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC  NULLS LAST, ((vt1.c0) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)>(vt1.c0))))<=((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))) ORDER BY vt1.c0 DESC  NULLS LAST, ((vt1.c0) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)>(vt1.c0))))<=((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC  NULLS LAST, ((vt1.c0) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)>(vt1.c0))))<=((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))) ORDER BY vt1.c0 DESC  NULLS LAST, ((vt1.c0) NOTNULL) DESC;
SELECT * FROM t1 RIGHT OUTER JOIN vt1 ON ((((0.20886516300362268)/(t1.c34))) BETWEEN (t1.c1 COLLATE RTRIM) AND (NULL)) WHERE (TYPEOF(t1.c43) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(t1.c43) COLLATE RTRIM) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt1 ON ((((0.20886516300362268)/(t1.c34))) BETWEEN (t1.c1 COLLATE RTRIM) AND (NULL)));
SELECT * FROM t1 RIGHT OUTER JOIN vt1 ON ((((0.20886516300362268)/(t1.c34))) BETWEEN (t1.c1 COLLATE RTRIM) AND (NULL)) WHERE (TYPEOF(t1.c43) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(t1.c43) COLLATE RTRIM) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt1 ON ((((0.20886516300362268)/(t1.c34))) BETWEEN (t1.c1 COLLATE RTRIM) AND (NULL)));
SELECT * FROM t1 RIGHT OUTER JOIN vt1 ON ((((0.20886516300362268)/(t1.c34))) BETWEEN (t1.c1 COLLATE RTRIM) AND (NULL)) WHERE (TYPEOF(t1.c43) COLLATE RTRIM);
SELECT * FROM t1, vt0, rt0, vt1 WHERE (((CASE WHEN t1.c43 THEN t1.c1 END)/((~ (t1.c34))))) ORDER BY ((UPPER(DISTINCT vt0.c0))GLOB((((t1.c34)) NOT BETWEEN ((t1.c34)) AND ((t1.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t1.c43 THEN t1.c1 END)/((~ (t1.c34))))) IS TRUE)  as count FROM t1 NOT INDEXED, vt0, rt0, vt1 ORDER BY ((UPPER(DISTINCT vt0.c0))GLOB((((t1.c34)) NOT BETWEEN ((t1.c34)) AND ((t1.c1))))));
SELECT * FROM t1, vt0, rt0, vt1 WHERE (((CASE WHEN t1.c43 THEN t1.c1 END)/((~ (t1.c34))))) ORDER BY ((UPPER(DISTINCT vt0.c0))GLOB((((t1.c34)) NOT BETWEEN ((t1.c34)) AND ((t1.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t1.c43 THEN t1.c1 END)/((~ (t1.c34))))) IS TRUE)  as count FROM t1 NOT INDEXED, vt0, rt0, vt1 ORDER BY ((UPPER(DISTINCT vt0.c0))GLOB((((t1.c34)) NOT BETWEEN ((t1.c34)) AND ((t1.c1))))));
SELECT * FROM t1, vt0, rt0, vt1 WHERE (((CASE WHEN t1.c43 THEN t1.c1 END)/((~ (t1.c34))))) ORDER BY ((UPPER(DISTINCT vt0.c0))GLOB((((t1.c34)) NOT BETWEEN ((t1.c34)) AND ((t1.c1)))));
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE)IS(UNLIKELY(vt1.c0)))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE)IS(UNLIKELY(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY x'');
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE)IS(UNLIKELY(vt1.c0)))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE)IS(UNLIKELY(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY x'');
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE)IS(UNLIKELY(vt1.c0)))) ORDER BY x'';
SELECT * FROM rt0 WHERE ((((((((rt0.c0))<((rt0.c1))))AND(((((((((rt0.c2)AND('8d.eæ«v,')))AND(x'e791')))AND(rt0.c0)))AND(rt0.c0)))))OR(((rt0.c2)/(rt0.c2))))) ORDER BY ((rt0.c2 COLLATE NOCASE) IS FALSE) ASC  NULLS LAST, (((((~ (rt0.c0)))OR(ABS(DISTINCT x''))))AND(JULIANDAY(-5.30631695E8, rt0.c2, rt0.c2, rt0.c1, rt0.c1))), ((((rt0.c2)>>(rt0.c1)))>((- (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c0))<((rt0.c1))))AND(((((((((rt0.c2)AND('8d.eæ«v,')))AND(x'e791')))AND(rt0.c0)))AND(rt0.c0)))))OR(((rt0.c2)/(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2 COLLATE NOCASE) IS FALSE) ASC  NULLS LAST, (((((~ (rt0.c0)))OR(ABS(DISTINCT x''))))AND(JULIANDAY(-5.30631695E8, rt0.c2, rt0.c2, rt0.c1, rt0.c1))), ((((rt0.c2)>>(rt0.c1)))>((- (rt0.c1)))) ASC);
SELECT * FROM rt0 WHERE ((((((((rt0.c0))<((rt0.c1))))AND(((((((((rt0.c2)AND('8d.eæ«v,')))AND(x'e791')))AND(rt0.c0)))AND(rt0.c0)))))OR(((rt0.c2)/(rt0.c2))))) ORDER BY ((rt0.c2 COLLATE NOCASE) IS FALSE) ASC  NULLS LAST, (((((~ (rt0.c0)))OR(ABS(DISTINCT x''))))AND(JULIANDAY(-5.30631695E8, rt0.c2, rt0.c2, rt0.c1, rt0.c1))), ((((rt0.c2)>>(rt0.c1)))>((- (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c0))<((rt0.c1))))AND(((((((((rt0.c2)AND('8d.eæ«v,')))AND(x'e791')))AND(rt0.c0)))AND(rt0.c0)))))OR(((rt0.c2)/(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2 COLLATE NOCASE) IS FALSE) ASC  NULLS LAST, (((((~ (rt0.c0)))OR(ABS(DISTINCT x''))))AND(JULIANDAY(-5.30631695E8, rt0.c2, rt0.c2, rt0.c1, rt0.c1))), ((((rt0.c2)>>(rt0.c1)))>((- (rt0.c1)))) ASC);
SELECT * FROM rt0 WHERE ((((((((rt0.c0))<((rt0.c1))))AND(((((((((rt0.c2)AND('8d.eæ«v,')))AND(x'e791')))AND(rt0.c0)))AND(rt0.c0)))))OR(((rt0.c2)/(rt0.c2))))) ORDER BY ((rt0.c2 COLLATE NOCASE) IS FALSE) ASC  NULLS LAST, (((((~ (rt0.c0)))OR(ABS(DISTINCT x''))))AND(JULIANDAY(-5.30631695E8, rt0.c2, rt0.c2, rt0.c1, rt0.c1))), ((((rt0.c2)>>(rt0.c1)))>((- (rt0.c1)))) ASC;
SELECT * FROM t1, rt0, vt0, vt1 WHERE (t1.c1) ORDER BY (((((- (t1.c34)))AND((t1.c0 IN (vt0.c0)))))AND(t1.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c1) IS TRUE)  as count FROM t1, rt0, vt0, vt1 ORDER BY (((((- (t1.c34)))AND((t1.c0 IN (vt0.c0)))))AND(t1.c1)) DESC  NULLS FIRST);
SELECT * FROM t1, rt0, vt0, vt1 WHERE (t1.c1) ORDER BY (((((- (t1.c34)))AND((t1.c0 IN (vt0.c0)))))AND(t1.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c1) IS TRUE)  as count FROM t1, rt0, vt0, vt1 ORDER BY (((((- (t1.c34)))AND((t1.c0 IN (vt0.c0)))))AND(t1.c1)) DESC  NULLS FIRST);
SELECT * FROM t1, rt0, vt0, vt1 WHERE (t1.c1) ORDER BY (((((- (t1.c34)))AND((t1.c0 IN (vt0.c0)))))AND(t1.c1)) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (json_patch(vt0.c0, vt0.c0) COLLATE BINARY) ORDER BY vt0.c0 COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_patch(vt0.c0, vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE NOCASE ASC);
SELECT ALL * FROM vt0 WHERE (json_patch(vt0.c0, vt0.c0) COLLATE BINARY) ORDER BY vt0.c0 COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_patch(vt0.c0, vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE NOCASE ASC);
SELECT ALL * FROM vt0 WHERE (json_patch(vt0.c0, vt0.c0) COLLATE BINARY) ORDER BY vt0.c0 COLLATE NOCASE ASC;
SELECT * FROM t1, rt0, vt0, vt1 WHERE (0.6299766133675184);
SELECT SUM(count) FROM (SELECT ((0.6299766133675184) IS TRUE)  as count FROM t1, rt0, vt0, vt1);
SELECT * FROM t1, rt0, vt0, vt1 WHERE (0.6299766133675184);
SELECT SUM(count) FROM (SELECT ((0.6299766133675184) IS TRUE)  as count FROM t1, rt0, vt0, vt1);
SELECT * FROM t1, rt0, vt0, vt1 WHERE (0.6299766133675184);
SELECT COUNT(*) FROM vt0, rt0 NATURAL JOIN vt1 WHERE (((((((rt0.c0) NOTNULL))AND(((vt1.c0)>(rt0.c2)))))AND(((rt0.c1)IS NOT('0.42478533638654803'))))) ORDER BY (rt0.c1 IN ()) COLLATE BINARY, ((((vt1.c0)OR(vt0.c0)))AND(rt0.c2)) COLLATE BINARY ASC  NULLS LAST, (- (((rt0.c2)<(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) NOTNULL))AND(((vt1.c0)>(rt0.c2)))))AND(((rt0.c1)IS NOT('0.42478533638654803'))))) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN vt1 ORDER BY (rt0.c1 IN ()) COLLATE BINARY, ((((vt1.c0)OR(vt0.c0)))AND(rt0.c2)) COLLATE BINARY ASC  NULLS LAST, (- (((rt0.c2)<(vt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 NATURAL JOIN vt1 WHERE (((((((rt0.c0) NOTNULL))AND(((vt1.c0)>(rt0.c2)))))AND(((rt0.c1)IS NOT('0.42478533638654803'))))) ORDER BY (rt0.c1 IN ()) COLLATE BINARY, ((((vt1.c0)OR(vt0.c0)))AND(rt0.c2)) COLLATE BINARY ASC  NULLS LAST, (- (((rt0.c2)<(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) NOTNULL))AND(((vt1.c0)>(rt0.c2)))))AND(((rt0.c1)IS NOT('0.42478533638654803'))))) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN vt1 ORDER BY (rt0.c1 IN ()) COLLATE BINARY, ((((vt1.c0)OR(vt0.c0)))AND(rt0.c2)) COLLATE BINARY ASC  NULLS LAST, (- (((rt0.c2)<(vt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 NATURAL JOIN vt1 WHERE (((((((rt0.c0) NOTNULL))AND(((vt1.c0)>(rt0.c2)))))AND(((rt0.c1)IS NOT('0.42478533638654803'))))) ORDER BY (rt0.c1 IN ()) COLLATE BINARY, ((((vt1.c0)OR(vt0.c0)))AND(rt0.c2)) COLLATE BINARY ASC  NULLS LAST, (- (((rt0.c2)<(vt0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOT NULL));
SELECT * FROM vt0 WHERE (CASE ((vt0.c0)*(vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ('' IN ()) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN TYPEOF(vt0.c0) WHEN ((vt0.c0) NOTNULL) THEN vt0.c0 ELSE vt0.c0 END) ORDER BY ((((CAST(vt0.c0 AS NUMERIC))AND(vt0.c0)))OR(json_array(vt0.c0, vt0.c0, vt0.c0, 0.6948048284840782)));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)*(vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ('' IN ()) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN TYPEOF(vt0.c0) WHEN ((vt0.c0) NOTNULL) THEN vt0.c0 ELSE vt0.c0 END) IS TRUE)  as count FROM vt0 ORDER BY ((((CAST(vt0.c0 AS NUMERIC))AND(vt0.c0)))OR(json_array(vt0.c0, vt0.c0, vt0.c0, 0.6948048284840782))));
SELECT * FROM vt0 WHERE (CASE ((vt0.c0)*(vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ('' IN ()) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN TYPEOF(vt0.c0) WHEN ((vt0.c0) NOTNULL) THEN vt0.c0 ELSE vt0.c0 END) ORDER BY ((((CAST(vt0.c0 AS NUMERIC))AND(vt0.c0)))OR(json_array(vt0.c0, vt0.c0, vt0.c0, 0.6948048284840782)));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)*(vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ('' IN ()) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN TYPEOF(vt0.c0) WHEN ((vt0.c0) NOTNULL) THEN vt0.c0 ELSE vt0.c0 END) IS TRUE)  as count FROM vt0 ORDER BY ((((CAST(vt0.c0 AS NUMERIC))AND(vt0.c0)))OR(json_array(vt0.c0, vt0.c0, vt0.c0, 0.6948048284840782))));
SELECT * FROM vt0 WHERE (CASE ((vt0.c0)*(vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ('' IN ()) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN TYPEOF(vt0.c0) WHEN ((vt0.c0) NOTNULL) THEN vt0.c0 ELSE vt0.c0 END) ORDER BY ((((CAST(vt0.c0 AS NUMERIC))AND(vt0.c0)))OR(json_array(vt0.c0, vt0.c0, vt0.c0, 0.6948048284840782)));
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (CAST(t1.c1 AS TEXT)) AND (t1.c34 COLLATE NOCASE))) ORDER BY ((((t1.c34)<('C')))>>((((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((t1.c1, t1.c0, t1.c1)) AND ((t1.c34, t1.c0, t1.c43)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (CAST(t1.c1 AS TEXT)) AND (t1.c34 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY ((((t1.c34)<('C')))>>((((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((t1.c1, t1.c0, t1.c1)) AND ((t1.c34, t1.c0, t1.c43))))));
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (CAST(t1.c1 AS TEXT)) AND (t1.c34 COLLATE NOCASE))) ORDER BY ((((t1.c34)<('C')))>>((((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((t1.c1, t1.c0, t1.c1)) AND ((t1.c34, t1.c0, t1.c43)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (CAST(t1.c1 AS TEXT)) AND (t1.c34 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY ((((t1.c34)<('C')))>>((((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((t1.c1, t1.c0, t1.c1)) AND ((t1.c34, t1.c0, t1.c43))))));
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (CAST(t1.c1 AS TEXT)) AND (t1.c34 COLLATE NOCASE))) ORDER BY ((((t1.c34)<('C')))>>((((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((t1.c1, t1.c0, t1.c1)) AND ((t1.c34, t1.c0, t1.c43)))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON (((((0.7483237027338099)==(rt0.c1))))<((vt0.c0))) INNER JOIN vt1 ON (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0))))) WHERE ((((IFNULL(DISTINCT vt1.c0, vt1.c0), (~ (rt0.c0)), CAST(rt0.c0 AS BLOB)))<>((((rt0.c1)LIKE(0.67004099617619)), ((rt0.c1)/(rt0.c1)), ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))))) ORDER BY ((((((((((((vt1.c0)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))AND(((rt0.c2) NOT NULL))))AND((+ (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((IFNULL(DISTINCT vt1.c0, vt1.c0), (~ (rt0.c0)), CAST(rt0.c0 AS BLOB)))!=((((rt0.c1)LIKE(0.67004099617619)), ((rt0.c1)/(rt0.c1)), ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((((0.7483237027338099)==(rt0.c1))))<((vt0.c0))) INNER JOIN vt1 ON (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0))))) ORDER BY ((((((((((((vt1.c0)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))AND(((rt0.c2) NOT NULL))))AND((+ (vt0.c0)))) ASC);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON (((((0.7483237027338099)==(rt0.c1))))<((vt0.c0))) INNER JOIN vt1 ON (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0))))) WHERE ((((IFNULL(DISTINCT vt1.c0, vt1.c0), (~ (rt0.c0)), CAST(rt0.c0 AS BLOB)))<>((((rt0.c1)LIKE(0.67004099617619)), ((rt0.c1)/(rt0.c1)), ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))))) ORDER BY ((((((((((((vt1.c0)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))AND(((rt0.c2) NOT NULL))))AND((+ (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((IFNULL(DISTINCT vt1.c0, vt1.c0), (~ (rt0.c0)), CAST(rt0.c0 AS BLOB)))!=((((rt0.c1)LIKE(0.67004099617619)), ((rt0.c1)/(rt0.c1)), ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((((0.7483237027338099)==(rt0.c1))))<((vt0.c0))) INNER JOIN vt1 ON (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0))))) ORDER BY ((((((((((((vt1.c0)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))AND(((rt0.c2) NOT NULL))))AND((+ (vt0.c0)))) ASC);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON (((((0.7483237027338099)==(rt0.c1))))<((vt0.c0))) INNER JOIN vt1 ON (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0))))) WHERE ((((IFNULL(DISTINCT vt1.c0, vt1.c0), (~ (rt0.c0)), CAST(rt0.c0 AS BLOB)))<>((((rt0.c1)LIKE(0.67004099617619)), ((rt0.c1)/(rt0.c1)), ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))))) ORDER BY ((((((((((((vt1.c0)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))AND(((rt0.c2) NOT NULL))))AND((+ (vt0.c0)))) ASC;
SELECT * FROM vt0, t1, vt1, rt0 WHERE (((((t1.c34)OR(NULLIF(rt0.c2, rt0.c1))))AND((- (t1.c34))))) ORDER BY CASE t1.c34  WHEN CASE WHEN 0.658748341620163 THEN t1.c0 END THEN rt0.c1 WHEN 0x1d4d18b0 THEN rt0.c1 COLLATE RTRIM WHEN IFNULL(DISTINCT rt0.c0, vt0.c0) THEN json(rt0.c0) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c34)OR(NULLIF(rt0.c2, rt0.c1))))AND((- (t1.c34))))) IS TRUE)  as count FROM vt0, t1, vt1, rt0 ORDER BY CASE t1.c34  WHEN CASE WHEN 0.658748341620163 THEN t1.c0 END THEN rt0.c1 WHEN 0X1d4d18b0 THEN rt0.c1 COLLATE RTRIM WHEN IFNULL(DISTINCT rt0.c0, vt0.c0) THEN json(rt0.c0) END ASC  NULLS FIRST);
SELECT * FROM vt0, t1, vt1, rt0 WHERE (((((t1.c34)OR(NULLIF(rt0.c2, rt0.c1))))AND((- (t1.c34))))) ORDER BY CASE t1.c34  WHEN CASE WHEN 0.658748341620163 THEN t1.c0 END THEN rt0.c1 WHEN 0x1d4d18b0 THEN rt0.c1 COLLATE RTRIM WHEN IFNULL(DISTINCT rt0.c0, vt0.c0) THEN json(rt0.c0) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c34)OR(NULLIF(rt0.c2, rt0.c1))))AND((- (t1.c34))))) IS TRUE)  as count FROM vt0, t1, vt1, rt0 ORDER BY CASE t1.c34  WHEN CASE WHEN 0.658748341620163 THEN t1.c0 END THEN rt0.c1 WHEN 0X1d4d18b0 THEN rt0.c1 COLLATE RTRIM WHEN IFNULL(DISTINCT rt0.c0, vt0.c0) THEN json(rt0.c0) END ASC  NULLS FIRST);
SELECT * FROM vt0, t1, vt1, rt0 WHERE (((((t1.c34)OR(NULLIF(rt0.c2, rt0.c1))))AND((- (t1.c34))))) ORDER BY CASE t1.c34  WHEN CASE WHEN 0.658748341620163 THEN t1.c0 END THEN rt0.c1 WHEN 0x1d4d18b0 THEN rt0.c1 COLLATE RTRIM WHEN IFNULL(DISTINCT rt0.c0, vt0.c0) THEN json(rt0.c0) END ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT ALL * FROM rt0 WHERE (CAST(NULL AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(NULL AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(NULL AS REAL));
SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt1 ON ((((t1.c1) ISNULL)) IS TRUE) CROSS JOIN vt0 ON vt1.c0 FULL OUTER JOIN rt0 ON (('0.67004099617619') NOT BETWEEN ((((((((('-1384171324')AND(t1.c43)))AND(t1.c1)))AND(t1.c1)))OR(t1.c34))) AND (json_patch(t1.c34, x''))) WHERE (((rt0.c2) NOT BETWEEN (t1.c43) AND (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOT BETWEEN (t1.c43) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t1 NOT INDEXED CROSS JOIN vt1 ON ((((t1.c1) ISNULL)) IS TRUE) CROSS JOIN vt0 ON vt1.c0 FULL OUTER JOIN rt0 ON (('0.67004099617619') NOT BETWEEN ((((((((('-1384171324')AND(t1.c43)))AND(t1.c1)))AND(t1.c1)))OR(t1.c34))) AND (json_patch(t1.c34, x''))));
SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt1 ON ((((t1.c1) ISNULL)) IS TRUE) CROSS JOIN vt0 ON vt1.c0 FULL OUTER JOIN rt0 ON (('0.67004099617619') NOT BETWEEN ((((((((('-1384171324')AND(t1.c43)))AND(t1.c1)))AND(t1.c1)))OR(t1.c34))) AND (json_patch(t1.c34, x''))) WHERE (((rt0.c2) NOT BETWEEN (t1.c43) AND (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOT BETWEEN (t1.c43) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t1 NOT INDEXED CROSS JOIN vt1 ON ((((t1.c1) ISNULL)) IS TRUE) CROSS JOIN vt0 ON vt1.c0 FULL OUTER JOIN rt0 ON (('0.67004099617619') NOT BETWEEN ((((((((('-1384171324')AND(t1.c43)))AND(t1.c1)))AND(t1.c1)))OR(t1.c34))) AND (json_patch(t1.c34, x''))));
SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt1 ON ((((t1.c1) ISNULL)) IS TRUE) CROSS JOIN vt0 ON vt1.c0 FULL OUTER JOIN rt0 ON (('0.67004099617619') NOT BETWEEN ((((((((('-1384171324')AND(t1.c43)))AND(t1.c1)))AND(t1.c1)))OR(t1.c34))) AND (json_patch(t1.c34, x''))) WHERE (((rt0.c2) NOT BETWEEN (t1.c43) AND (vt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0, t1 RIGHT OUTER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((((rt0.c1) BETWEEN (t1.c43) AND (vt0.c0)))) AND ((t1.c34 COLLATE NOCASE))) FULL OUTER JOIN vt1 ON CASE (((t1.c0, t1.c0, vt0.c0))<>((t1.c1, vt1.c0, vt1.c0)))  WHEN t1.c1 COLLATE NOCASE THEN (((vt0.c0)) NOT BETWEEN ((t1.c34)) AND ((t1.c0))) ELSE ((((vt1.c0)OR(rt0.c2)))OR(vt0.c0)) END WHERE (((CASE WHEN rt0.c2 THEN x'bde0' ELSE vt1.c0 END)==(((vt1.c0)-('B0'))))) ORDER BY (((vt1.c0) IS FALSE) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN x'bde0' ELSE vt1.c0 END)==(((vt1.c0)-('B0'))))) IS TRUE)  as count FROM rt0, t1 RIGHT OUTER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((((rt0.c1) BETWEEN (t1.c43) AND (vt0.c0)))) AND ((t1.c34 COLLATE NOCASE))) FULL OUTER JOIN vt1 ON CASE (((t1.c0, t1.c0, vt0.c0))!=((t1.c1, vt1.c0, vt1.c0)))  WHEN t1.c1 COLLATE NOCASE THEN (((vt0.c0)) NOT BETWEEN ((t1.c34)) AND ((t1.c0))) ELSE ((((vt1.c0)OR(rt0.c2)))OR(vt0.c0)) END ORDER BY (((vt1.c0) IS FALSE) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t1 RIGHT OUTER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((((rt0.c1) BETWEEN (t1.c43) AND (vt0.c0)))) AND ((t1.c34 COLLATE NOCASE))) FULL OUTER JOIN vt1 ON CASE (((t1.c0, t1.c0, vt0.c0))<>((t1.c1, vt1.c0, vt1.c0)))  WHEN t1.c1 COLLATE NOCASE THEN (((vt0.c0)) NOT BETWEEN ((t1.c34)) AND ((t1.c0))) ELSE ((((vt1.c0)OR(rt0.c2)))OR(vt0.c0)) END WHERE (((CASE WHEN rt0.c2 THEN x'bde0' ELSE vt1.c0 END)==(((vt1.c0)-('B0'))))) ORDER BY (((vt1.c0) IS FALSE) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN x'bde0' ELSE vt1.c0 END)==(((vt1.c0)-('B0'))))) IS TRUE)  as count FROM rt0, t1 RIGHT OUTER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((((rt0.c1) BETWEEN (t1.c43) AND (vt0.c0)))) AND ((t1.c34 COLLATE NOCASE))) FULL OUTER JOIN vt1 ON CASE (((t1.c0, t1.c0, vt0.c0))!=((t1.c1, vt1.c0, vt1.c0)))  WHEN t1.c1 COLLATE NOCASE THEN (((vt0.c0)) NOT BETWEEN ((t1.c34)) AND ((t1.c0))) ELSE ((((vt1.c0)OR(rt0.c2)))OR(vt0.c0)) END ORDER BY (((vt1.c0) IS FALSE) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t1 RIGHT OUTER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((((rt0.c1) BETWEEN (t1.c43) AND (vt0.c0)))) AND ((t1.c34 COLLATE NOCASE))) FULL OUTER JOIN vt1 ON CASE (((t1.c0, t1.c0, vt0.c0))<>((t1.c1, vt1.c0, vt1.c0)))  WHEN t1.c1 COLLATE NOCASE THEN (((vt0.c0)) NOT BETWEEN ((t1.c34)) AND ((t1.c0))) ELSE ((((vt1.c0)OR(rt0.c2)))OR(vt0.c0)) END WHERE (((CASE WHEN rt0.c2 THEN x'bde0' ELSE vt1.c0 END)==(((vt1.c0)-('B0'))))) ORDER BY (((vt1.c0) IS FALSE) IN ()) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (load_extension((NOT (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((load_extension((NOT (rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (load_extension((NOT (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((load_extension((NOT (rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((NOT (rt0.c2)))LIKE(((rt0.c2)<(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c2)))LIKE(((rt0.c2)<(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((NOT (rt0.c2)))LIKE(((rt0.c2)<(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c2)))LIKE(((rt0.c2)<(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((NOT (rt0.c2)))LIKE(((rt0.c2)<(rt0.c0)))));
SELECT * FROM vt1, t1, vt0 RIGHT OUTER JOIN rt0 ON ((((CAST(t1.c1 AS TEXT))OR(vt1.c0 COLLATE NOCASE)))AND(((rt0.c0) BETWEEN (rt0.c0) AND (t1.c43)))) WHERE (CAST('' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST('' AS NUMERIC)) IS TRUE)  as count FROM vt1, t1, vt0 RIGHT OUTER JOIN rt0 ON ((((CAST(t1.c1 AS TEXT))OR(vt1.c0 COLLATE NOCASE)))AND(((rt0.c0) BETWEEN (rt0.c0) AND (t1.c43)))));
SELECT * FROM vt1, t1, vt0 RIGHT OUTER JOIN rt0 ON ((((CAST(t1.c1 AS TEXT))OR(vt1.c0 COLLATE NOCASE)))AND(((rt0.c0) BETWEEN (rt0.c0) AND (t1.c43)))) WHERE (CAST('' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST('' AS NUMERIC)) IS TRUE)  as count FROM vt1, t1, vt0 RIGHT OUTER JOIN rt0 ON ((((CAST(t1.c1 AS TEXT))OR(vt1.c0 COLLATE NOCASE)))AND(((rt0.c0) BETWEEN (rt0.c0) AND (t1.c43)))));
SELECT * FROM vt1, t1, vt0 RIGHT OUTER JOIN rt0 ON ((((CAST(t1.c1 AS TEXT))OR(vt1.c0 COLLATE NOCASE)))AND(((rt0.c0) BETWEEN (rt0.c0) AND (t1.c43)))) WHERE (CAST('' AS NUMERIC));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((((vt0.c0) IS FALSE))IS NOT(UPPER(t1.c0))) RIGHT OUTER JOIN t1 ON TYPEOF(DISTINCT (- (rt0.c1))) WHERE (((((((((t1.c0)AND((rt0.c0 IN (t1.c0)))))AND(CASE rt0.c1  WHEN t1.c34 THEN vt0.c0 ELSE t1.c0 END)))AND('å¢eIï¼¯')))OR((t1.c34 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t1.c0)AND((rt0.c0 IN (t1.c0)))))AND(CASE rt0.c1  WHEN t1.c34 THEN vt0.c0 ELSE t1.c0 END)))AND('å¢eIï¼¯')))OR((t1.c34 IN (rt0.c0))))) IS TRUE)  as count FROM rt0 NOT INDEXED FULL OUTER JOIN vt0 ON ((((vt0.c0) IS FALSE))IS NOT(UPPER(t1.c0))) RIGHT OUTER JOIN t1 ON TYPEOF(DISTINCT (- (rt0.c1))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((((vt0.c0) IS FALSE))IS NOT(UPPER(t1.c0))) RIGHT OUTER JOIN t1 ON TYPEOF(DISTINCT (- (rt0.c1))) WHERE (((((((((t1.c0)AND((rt0.c0 IN (t1.c0)))))AND(CASE rt0.c1  WHEN t1.c34 THEN vt0.c0 ELSE t1.c0 END)))AND('å¢eIï¼¯')))OR((t1.c34 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t1.c0)AND((rt0.c0 IN (t1.c0)))))AND(CASE rt0.c1  WHEN t1.c34 THEN vt0.c0 ELSE t1.c0 END)))AND('å¢eIï¼¯')))OR((t1.c34 IN (rt0.c0))))) IS TRUE)  as count FROM rt0 NOT INDEXED FULL OUTER JOIN vt0 ON ((((vt0.c0) IS FALSE))IS NOT(UPPER(t1.c0))) RIGHT OUTER JOIN t1 ON TYPEOF(DISTINCT (- (rt0.c1))));
SELECT * FROM rt0, t1, vt1, vt0 WHERE ((((t1.c1)) NOT BETWEEN ((((t1.c1) IS TRUE))) AND ((((((rt0.c1)AND(rt0.c1)))AND(t1.c0))))));
SELECT SUM(count) FROM (SELECT (((((t1.c1)) NOT BETWEEN ((((t1.c1) IS TRUE))) AND ((((((rt0.c1)AND(rt0.c1)))AND(t1.c0)))))) IS TRUE)  as count FROM rt0, t1, vt1, vt0);
SELECT * FROM rt0, t1, vt1, vt0 WHERE ((((t1.c1)) NOT BETWEEN ((((t1.c1) IS TRUE))) AND ((((((rt0.c1)AND(rt0.c1)))AND(t1.c0))))));
SELECT SUM(count) FROM (SELECT (((((t1.c1)) NOT BETWEEN ((((t1.c1) IS TRUE))) AND ((((((rt0.c1)AND(rt0.c1)))AND(t1.c0)))))) IS TRUE)  as count FROM rt0, t1, vt1, vt0);
SELECT * FROM rt0, t1, vt1, vt0 WHERE ((((t1.c1)) NOT BETWEEN ((((t1.c1) IS TRUE))) AND ((((((rt0.c1)AND(rt0.c1)))AND(t1.c0))))));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON CAST(((t1.c0)>(t1.c0)) AS NUMERIC) FULL OUTER JOIN t1 ON ((CAST(t1.c1 AS BLOB)) NOT BETWEEN ((~ (vt0.c0))) AND (CASE WHEN t1.c0 THEN vt1.c0 ELSE vt0.c0 END)) WHERE ((NOT (0.057153674887568395)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (0.057153674887568395))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON CAST(((t1.c0)>(t1.c0)) AS NUMERIC) FULL OUTER JOIN t1 ON ((CAST(t1.c1 AS BLOB)) NOT BETWEEN ((~ (vt0.c0))) AND (CASE WHEN t1.c0 THEN vt1.c0 ELSE vt0.c0 END)));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON CAST(((t1.c0)>(t1.c0)) AS NUMERIC) FULL OUTER JOIN t1 ON ((CAST(t1.c1 AS BLOB)) NOT BETWEEN ((~ (vt0.c0))) AND (CASE WHEN t1.c0 THEN vt1.c0 ELSE vt0.c0 END)) WHERE ((NOT (0.057153674887568395)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (0.057153674887568395))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON CAST(((t1.c0)>(t1.c0)) AS NUMERIC) FULL OUTER JOIN t1 ON ((CAST(t1.c1 AS BLOB)) NOT BETWEEN ((~ (vt0.c0))) AND (CASE WHEN t1.c0 THEN vt1.c0 ELSE vt0.c0 END)));
SELECT * FROM vt0, t1 WHERE ((((vt0.c0)) BETWEEN ((t1.c0 COLLATE NOCASE)) AND ((((('', t1.c0, t1.c0)) BETWEEN ((t1.c1, t1.c1, t1.c0)) AND ((NULL, vt0.c0, t1.c1)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((t1.c0 COLLATE NOCASE)) AND ((((('', t1.c0, t1.c0)) BETWEEN ((t1.c1, t1.c1, t1.c0)) AND ((NULL, vt0.c0, t1.c1))))))) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE ((((vt0.c0)) BETWEEN ((t1.c0 COLLATE NOCASE)) AND ((((('', t1.c0, t1.c0)) BETWEEN ((t1.c1, t1.c1, t1.c0)) AND ((NULL, vt0.c0, t1.c1)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((t1.c0 COLLATE NOCASE)) AND ((((('', t1.c0, t1.c0)) BETWEEN ((t1.c1, t1.c1, t1.c0)) AND ((NULL, vt0.c0, t1.c1))))))) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE ((((vt0.c0)) BETWEEN ((t1.c0 COLLATE NOCASE)) AND ((((('', t1.c0, t1.c0)) BETWEEN ((t1.c1, t1.c1, t1.c0)) AND ((NULL, vt0.c0, t1.c1)))))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON ((x'') NOT NULL) RIGHT OUTER JOIN t1 ON CASE vt1.c0  WHEN (t1.c1 IN ()) THEN ((t1.c34)IS NOT(rt0.c0)) END RIGHT OUTER JOIN vt0 ON (((vt1.c0)) BETWEEN ((t1.c34 COLLATE RTRIM)) AND ((((t1.c34)%(rt0.c1))))) WHERE (((t1.c34) IS FALSE) COLLATE BINARY) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((((t1.c34) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ((x'') NOT NULL) RIGHT OUTER JOIN t1 ON CASE vt1.c0  WHEN (t1.c1 IN ()) THEN ((t1.c34)IS NOT(rt0.c0)) END RIGHT OUTER JOIN vt0 ON (((vt1.c0)) BETWEEN ((t1.c34 COLLATE RTRIM)) AND ((((t1.c34)%(rt0.c1))))) ORDER BY NULL);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON ((x'') NOT NULL) RIGHT OUTER JOIN t1 ON CASE vt1.c0  WHEN (t1.c1 IN ()) THEN ((t1.c34)IS NOT(rt0.c0)) END RIGHT OUTER JOIN vt0 ON (((vt1.c0)) BETWEEN ((t1.c34 COLLATE RTRIM)) AND ((((t1.c34)%(rt0.c1))))) WHERE (((t1.c34) IS FALSE) COLLATE BINARY) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((((t1.c34) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ((x'') NOT NULL) RIGHT OUTER JOIN t1 ON CASE vt1.c0  WHEN (t1.c1 IN ()) THEN ((t1.c34)IS NOT(rt0.c0)) END RIGHT OUTER JOIN vt0 ON (((vt1.c0)) BETWEEN ((t1.c34 COLLATE RTRIM)) AND ((((t1.c34)%(rt0.c1))))) ORDER BY NULL);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON ((x'') NOT NULL) RIGHT OUTER JOIN t1 ON CASE vt1.c0  WHEN (t1.c1 IN ()) THEN ((t1.c34)IS NOT(rt0.c0)) END RIGHT OUTER JOIN vt0 ON (((vt1.c0)) BETWEEN ((t1.c34 COLLATE RTRIM)) AND ((((t1.c34)%(rt0.c1))))) WHERE (((t1.c34) IS FALSE) COLLATE BINARY) ORDER BY NULL;
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE ((((((rt0.c2, vt1.c0, rt0.c0))<=((rt0.c0, rt0.c0, rt0.c0))))%(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY (- (CASE rt0.c0  WHEN rt0.c1 THEN vt1.c0 END));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2, vt1.c0, rt0.c0))<=((rt0.c0, rt0.c0, rt0.c0))))%(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (- (CASE rt0.c0  WHEN rt0.c1 THEN vt1.c0 END)));
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE ((((((rt0.c2, vt1.c0, rt0.c0))<=((rt0.c0, rt0.c0, rt0.c0))))%(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY (- (CASE rt0.c0  WHEN rt0.c1 THEN vt1.c0 END));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2, vt1.c0, rt0.c0))<=((rt0.c0, rt0.c0, rt0.c0))))%(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (- (CASE rt0.c0  WHEN rt0.c1 THEN vt1.c0 END)));
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE ((((((rt0.c2, vt1.c0, rt0.c0))<=((rt0.c0, rt0.c0, rt0.c0))))%(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY (- (CASE rt0.c0  WHEN rt0.c1 THEN vt1.c0 END));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON LOWER(DISTINCT t1.c1 COLLATE RTRIM) CROSS JOIN t1 ON CAST(CAST(rt0.c2 AS INTEGER) AS NUMERIC) FULL OUTER JOIN vt0 ON ((t1.c1 COLLATE BINARY) ISNULL) WHERE ((((((NOT (rt0.c1)))AND(((rt0.c2) IS FALSE))))AND(((vt0.c0)>(t1.c1)))));
SELECT SUM(count) FROM (SELECT (((((((NOT (rt0.c1)))AND(((rt0.c2) IS FALSE))))AND(((vt0.c0)>(t1.c1))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON LOWER(DISTINCT t1.c1 COLLATE RTRIM) CROSS JOIN t1 ON CAST(CAST(rt0.c2 AS INTEGER) AS NUMERIC) FULL OUTER JOIN vt0 ON ((t1.c1 COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON LOWER(DISTINCT t1.c1 COLLATE RTRIM) CROSS JOIN t1 ON CAST(CAST(rt0.c2 AS INTEGER) AS NUMERIC) FULL OUTER JOIN vt0 ON ((t1.c1 COLLATE BINARY) ISNULL) WHERE ((((((NOT (rt0.c1)))AND(((rt0.c2) IS FALSE))))AND(((vt0.c0)>(t1.c1)))));
SELECT SUM(count) FROM (SELECT (((((((NOT (rt0.c1)))AND(((rt0.c2) IS FALSE))))AND(((vt0.c0)>(t1.c1))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON LOWER(DISTINCT t1.c1 COLLATE RTRIM) CROSS JOIN t1 ON CAST(CAST(rt0.c2 AS INTEGER) AS NUMERIC) FULL OUTER JOIN vt0 ON ((t1.c1 COLLATE BINARY) ISNULL));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN t1 ON ((((CASE t1.c43  WHEN t1.c1 THEN t1.c43 END)OR(CASE WHEN t1.c43 THEN vt1.c0 WHEN t1.c0 THEN t1.c43 WHEN '' THEN t1.c34 ELSE t1.c1 END)))OR(((t1.c43)/('1609108521')))) WHERE (((((t1.c34) NOT BETWEEN (NULL) AND (vt1.c0))) NOTNULL)) ORDER BY (NOT (t1.c0))  NULLS FIRST, (+ (((0X15a9d80f)-(t1.c0)))) DESC, (+ (CAST(0.23608541796772986 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c34) NOT BETWEEN (NULL) AND (vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t1 ON ((((CASE t1.c43  WHEN t1.c1 THEN t1.c43 END)OR(CASE WHEN t1.c43 THEN vt1.c0 WHEN t1.c0 THEN t1.c43 WHEN '' THEN t1.c34 ELSE t1.c1 END)))OR(((t1.c43)/('1609108521')))) ORDER BY (NOT (t1.c0))  NULLS FIRST, (+ (((0x15a9d80f)-(t1.c0)))) DESC, (+ (CAST(0.23608541796772986 AS TEXT))) ASC);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN t1 ON ((((CASE t1.c43  WHEN t1.c1 THEN t1.c43 END)OR(CASE WHEN t1.c43 THEN vt1.c0 WHEN t1.c0 THEN t1.c43 WHEN '' THEN t1.c34 ELSE t1.c1 END)))OR(((t1.c43)/('1609108521')))) WHERE (((((t1.c34) NOT BETWEEN (NULL) AND (vt1.c0))) NOTNULL)) ORDER BY (NOT (t1.c0))  NULLS FIRST, (+ (((0X15a9d80f)-(t1.c0)))) DESC, (+ (CAST(0.23608541796772986 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c34) NOT BETWEEN (NULL) AND (vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t1 ON ((((CASE t1.c43  WHEN t1.c1 THEN t1.c43 END)OR(CASE WHEN t1.c43 THEN vt1.c0 WHEN t1.c0 THEN t1.c43 WHEN '' THEN t1.c34 ELSE t1.c1 END)))OR(((t1.c43)/('1609108521')))) ORDER BY (NOT (t1.c0))  NULLS FIRST, (+ (((0x15a9d80f)-(t1.c0)))) DESC, (+ (CAST(0.23608541796772986 AS TEXT))) ASC);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN t1 ON ((((CASE t1.c43  WHEN t1.c1 THEN t1.c43 END)OR(CASE WHEN t1.c43 THEN vt1.c0 WHEN t1.c0 THEN t1.c43 WHEN '' THEN t1.c34 ELSE t1.c1 END)))OR(((t1.c43)/('1609108521')))) WHERE (((((t1.c34) NOT BETWEEN (NULL) AND (vt1.c0))) NOTNULL)) ORDER BY (NOT (t1.c0))  NULLS FIRST, (+ (((0X15a9d80f)-(t1.c0)))) DESC, (+ (CAST(0.23608541796772986 AS TEXT))) ASC;
SELECT * FROM vt1, rt0 WHERE (CAST(((rt0.c1) ISNULL) AS TEXT)) ORDER BY UNLIKELY(DISTINCT ((vt1.c0)*(rt0.c2)))  NULLS LAST, ((SQLITE_COMPILEOPTION_USED('')) BETWEEN (HEX(vt1.c0)) AND (highlight(rt0.c2, vt1.c0, rt0.c2, rt0.c0))), CAST('1955758603' AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) ISNULL) AS TEXT)) IS TRUE)  as count FROM vt1, rt0 ORDER BY UNLIKELY(DISTINCT ((vt1.c0)*(rt0.c2)))  NULLS LAST, ((SQLITE_COMPILEOPTION_USED('')) BETWEEN (HEX(vt1.c0)) AND (highlight(rt0.c2, vt1.c0, rt0.c2, rt0.c0))), CAST('1955758603' AS INTEGER)  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (CAST(((rt0.c1) ISNULL) AS TEXT)) ORDER BY UNLIKELY(DISTINCT ((vt1.c0)*(rt0.c2)))  NULLS LAST, ((SQLITE_COMPILEOPTION_USED('')) BETWEEN (HEX(vt1.c0)) AND (highlight(rt0.c2, vt1.c0, rt0.c2, rt0.c0))), CAST('1955758603' AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) ISNULL) AS TEXT)) IS TRUE)  as count FROM vt1, rt0 ORDER BY UNLIKELY(DISTINCT ((vt1.c0)*(rt0.c2)))  NULLS LAST, ((SQLITE_COMPILEOPTION_USED('')) BETWEEN (HEX(vt1.c0)) AND (highlight(rt0.c2, vt1.c0, rt0.c2, rt0.c0))), CAST('1955758603' AS INTEGER)  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (vt1.c0) ORDER BY CAST(((vt1.c0) NOT BETWEEN (0xfffffffff8f5944a) AND (vt0.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(((vt1.c0) NOT BETWEEN (0xfffffffff8f5944a) AND (vt0.c0)) AS TEXT)  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (vt1.c0) ORDER BY CAST(((vt1.c0) NOT BETWEEN (0xfffffffff8f5944a) AND (vt0.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(((vt1.c0) NOT BETWEEN (0xfffffffff8f5944a) AND (vt0.c0)) AS TEXT)  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (vt1.c0) ORDER BY CAST(((vt1.c0) NOT BETWEEN (0xfffffffff8f5944a) AND (vt0.c0)) AS TEXT)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE (t1.c0) ORDER BY CASE CAST(t1.c0 AS TEXT)  WHEN ((NULL) BETWEEN (t1.c0) AND (rt0.c0)) THEN ((rt0.c2)>=(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM vt0, t1, rt0 ORDER BY CASE CAST(t1.c0 AS TEXT)  WHEN ((NULL) BETWEEN (t1.c0) AND (rt0.c0)) THEN ((rt0.c2)>=(vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE (t1.c0) ORDER BY CASE CAST(t1.c0 AS TEXT)  WHEN ((NULL) BETWEEN (t1.c0) AND (rt0.c0)) THEN ((rt0.c2)>=(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM vt0, t1, rt0 ORDER BY CASE CAST(t1.c0 AS TEXT)  WHEN ((NULL) BETWEEN (t1.c0) AND (rt0.c0)) THEN ((rt0.c2)>=(vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE (t1.c0) ORDER BY CASE CAST(t1.c0 AS TEXT)  WHEN ((NULL) BETWEEN (t1.c0) AND (rt0.c0)) THEN ((rt0.c2)>=(vt0.c0)) END;
SELECT ALL * FROM t1, rt0, vt0 INNER JOIN vt1 ON CHAR((((((((('58ä¾£Ay[|l\r')OR(t1.c0)))OR(t1.c0)))OR(t1.c34)))OR(t1.c0)), 0.7750194125568298, CASE vt1.c0  WHEN vt0.c0 THEN t1.c43 ELSE t1.c0 END) WHERE (((((((((vt1.c0)AND(CASE WHEN vt0.c0 THEN rt0.c1 WHEN '7uAã±' THEN vt1.c0 WHEN vt1.c0 THEN t1.c1 END)))OR(CAST(vt1.c0 AS INTEGER))))OR(((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c2)))))OR((NOT (t1.c34)))));
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0)AND(CASE WHEN vt0.c0 THEN rt0.c1 WHEN '7uAã±' THEN vt1.c0 WHEN vt1.c0 THEN t1.c1 END)))OR(CAST(vt1.c0 AS INTEGER))))OR(((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c2)))))OR((NOT (t1.c34))))) IS TRUE)  as count FROM t1, rt0, vt0 INNER JOIN vt1 ON CHAR((((((((('58ä¾£Ay[|l\r')OR(t1.c0)))OR(t1.c0)))OR(t1.c34)))OR(t1.c0)), 0.7750194125568298, CASE vt1.c0  WHEN vt0.c0 THEN t1.c43 ELSE t1.c0 END));
SELECT ALL * FROM t1, rt0, vt0 INNER JOIN vt1 ON CHAR((((((((('58ä¾£Ay[|l\r')OR(t1.c0)))OR(t1.c0)))OR(t1.c34)))OR(t1.c0)), 0.7750194125568298, CASE vt1.c0  WHEN vt0.c0 THEN t1.c43 ELSE t1.c0 END) WHERE (((((((((vt1.c0)AND(CASE WHEN vt0.c0 THEN rt0.c1 WHEN '7uAã±' THEN vt1.c0 WHEN vt1.c0 THEN t1.c1 END)))OR(CAST(vt1.c0 AS INTEGER))))OR(((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c2)))))OR((NOT (t1.c34)))));
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0)AND(CASE WHEN vt0.c0 THEN rt0.c1 WHEN '7uAã±' THEN vt1.c0 WHEN vt1.c0 THEN t1.c1 END)))OR(CAST(vt1.c0 AS INTEGER))))OR(((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c2)))))OR((NOT (t1.c34))))) IS TRUE)  as count FROM t1, rt0, vt0 INNER JOIN vt1 ON CHAR((((((((('58ä¾£Ay[|l\r')OR(t1.c0)))OR(t1.c0)))OR(t1.c34)))OR(t1.c0)), 0.7750194125568298, CASE vt1.c0  WHEN vt0.c0 THEN t1.c43 ELSE t1.c0 END));
SELECT ALL * FROM t1, rt0, vt0 INNER JOIN vt1 ON CHAR((((((((('58ä¾£Ay[|l\r')OR(t1.c0)))OR(t1.c0)))OR(t1.c34)))OR(t1.c0)), 0.7750194125568298, CASE vt1.c0  WHEN vt0.c0 THEN t1.c43 ELSE t1.c0 END) WHERE (((((((((vt1.c0)AND(CASE WHEN vt0.c0 THEN rt0.c1 WHEN '7uAã±' THEN vt1.c0 WHEN vt1.c0 THEN t1.c1 END)))OR(CAST(vt1.c0 AS INTEGER))))OR(((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c2)))))OR((NOT (t1.c34)))));
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT * FROM t1, vt1, vt0 WHERE ((((((t1.c1))<((t1.c43))))OR(((((((((t1.c0)AND(t1.c1)))OR(vt0.c0)))OR('0.8193661133217168')))AND(vt1.c0))))) ORDER BY CASE (((t1.c1, 0.18829547328311946, t1.c0))<=((t1.c0, t1.c34, t1.c43)))  WHEN (((t1.c0, t1.c1, t1.c0)) BETWEEN ((vt0.c0, 0.7347741399597587, vt0.c0)) AND ((t1.c34, t1.c0, t1.c0))) THEN ((t1.c0)<=(t1.c34)) ELSE 'yB]2' END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c1))<((t1.c43))))OR(((((((((t1.c0)AND(t1.c1)))OR(vt0.c0)))OR('0.8193661133217168')))AND(vt1.c0))))) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY CASE (((t1.c1, 0.18829547328311946, t1.c0))<=((t1.c0, t1.c34, t1.c43)))  WHEN (((t1.c0, t1.c1, t1.c0)) BETWEEN ((vt0.c0, 0.7347741399597587, vt0.c0)) AND ((t1.c34, t1.c0, t1.c0))) THEN ((t1.c0)<=(t1.c34)) ELSE 'yB]2' END DESC);
SELECT * FROM t1, vt1, vt0 WHERE ((((((t1.c1))<((t1.c43))))OR(((((((((t1.c0)AND(t1.c1)))OR(vt0.c0)))OR('0.8193661133217168')))AND(vt1.c0))))) ORDER BY CASE (((t1.c1, 0.18829547328311946, t1.c0))<=((t1.c0, t1.c34, t1.c43)))  WHEN (((t1.c0, t1.c1, t1.c0)) BETWEEN ((vt0.c0, 0.7347741399597587, vt0.c0)) AND ((t1.c34, t1.c0, t1.c0))) THEN ((t1.c0)<=(t1.c34)) ELSE 'yB]2' END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c1))<((t1.c43))))OR(((((((((t1.c0)AND(t1.c1)))OR(vt0.c0)))OR('0.8193661133217168')))AND(vt1.c0))))) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY CASE (((t1.c1, 0.18829547328311946, t1.c0))<=((t1.c0, t1.c34, t1.c43)))  WHEN (((t1.c0, t1.c1, t1.c0)) BETWEEN ((vt0.c0, 0.7347741399597587, vt0.c0)) AND ((t1.c34, t1.c0, t1.c0))) THEN ((t1.c0)<=(t1.c34)) ELSE 'yB]2' END DESC);
SELECT * FROM t1, vt1, vt0 WHERE ((((((t1.c1))<((t1.c43))))OR(((((((((t1.c0)AND(t1.c1)))OR(vt0.c0)))OR('0.8193661133217168')))AND(vt1.c0))))) ORDER BY CASE (((t1.c1, 0.18829547328311946, t1.c0))<=((t1.c0, t1.c34, t1.c43)))  WHEN (((t1.c0, t1.c1, t1.c0)) BETWEEN ((vt0.c0, 0.7347741399597587, vt0.c0)) AND ((t1.c34, t1.c0, t1.c0))) THEN ((t1.c0)<=(t1.c34)) ELSE 'yB]2' END DESC;
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((((NOT (NULL))) NOT BETWEEN (((0.4469734025902048) IS FALSE)) AND ((t1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((NOT (NULL))) NOT BETWEEN (((0.4469734025902048) IS FALSE)) AND ((t1.c1 IN ())))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((((NOT (NULL))) NOT BETWEEN (((0.4469734025902048) IS FALSE)) AND ((t1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((NOT (NULL))) NOT BETWEEN (((0.4469734025902048) IS FALSE)) AND ((t1.c1 IN ())))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((((NOT (NULL))) NOT BETWEEN (((0.4469734025902048) IS FALSE)) AND ((t1.c1 IN ()))));
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0)IS NOT(vt1.c0)) AS TEXT)) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)IS NOT(vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0)IS NOT(vt1.c0)) AS TEXT)) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)IS NOT(vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0)IS NOT(vt1.c0)) AS TEXT)) ORDER BY vt1.c0  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((((((((+ (vt0.c0)))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))AND(LAST_INSERT_ROWID())))OR(((vt0.c0)<(NULL)))))AND(NULL))) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((+ (vt0.c0)))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))AND(LAST_INSERT_ROWID())))OR(((vt0.c0)<(NULL)))))AND(NULL))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) IS FALSE)  NULLS LAST);
SELECT * FROM vt0 WHERE ((((((((((+ (vt0.c0)))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))AND(LAST_INSERT_ROWID())))OR(((vt0.c0)<(NULL)))))AND(NULL))) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((+ (vt0.c0)))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))AND(LAST_INSERT_ROWID())))OR(((vt0.c0)<(NULL)))))AND(NULL))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) IS FALSE)  NULLS LAST);
SELECT * FROM vt0 WHERE ((((((((((+ (vt0.c0)))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))AND(LAST_INSERT_ROWID())))OR(((vt0.c0)<(NULL)))))AND(NULL))) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) IS FALSE)  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (((JULIANDAY(x'', vt1.c0, vt1.c0))+(vt1.c0 COLLATE RTRIM))) ORDER BY (NOT (vt1.c0)) COLLATE BINARY ASC, ((((vt1.c0)<<(vt1.c0)))GLOB(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))), (x'' IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((JULIANDAY(x'', vt1.c0, vt1.c0))+(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 ORDER BY (NOT (vt1.c0)) COLLATE BINARY ASC, ((((vt1.c0)<<(vt1.c0)))GLOB(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))), (x'' IN ()) ASC);
SELECT COUNT(*) FROM vt1 WHERE (((JULIANDAY(x'', vt1.c0, vt1.c0))+(vt1.c0 COLLATE RTRIM))) ORDER BY (NOT (vt1.c0)) COLLATE BINARY ASC, ((((vt1.c0)<<(vt1.c0)))GLOB(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))), (x'' IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((JULIANDAY(x'', vt1.c0, vt1.c0))+(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 ORDER BY (NOT (vt1.c0)) COLLATE BINARY ASC, ((((vt1.c0)<<(vt1.c0)))GLOB(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))), (x'' IN ()) ASC);
SELECT COUNT(*) FROM vt1 WHERE (((JULIANDAY(x'', vt1.c0, vt1.c0))+(vt1.c0 COLLATE RTRIM))) ORDER BY (NOT (vt1.c0)) COLLATE BINARY ASC, ((((vt1.c0)<<(vt1.c0)))GLOB(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))), (x'' IN ()) ASC;
SELECT ALL * FROM rt0 INNER JOIN vt1 ON vt1.c0 WHERE (PRINTF(NULLIF(rt0.c0, vt1.c0), ((rt0.c2) BETWEEN (rt0.c0) AND (NULL)), (rt0.c0 IN (NULL))));
SELECT SUM(count) FROM (SELECT ((PRINTF(NULLIF(rt0.c0, vt1.c0), ((rt0.c2) BETWEEN (rt0.c0) AND (NULL)), (rt0.c0 IN (NULL)))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON vt1.c0);
SELECT ALL * FROM rt0 INNER JOIN vt1 ON vt1.c0 WHERE (PRINTF(NULLIF(rt0.c0, vt1.c0), ((rt0.c2) BETWEEN (rt0.c0) AND (NULL)), (rt0.c0 IN (NULL))));
SELECT SUM(count) FROM (SELECT ((PRINTF(NULLIF(rt0.c0, vt1.c0), ((rt0.c2) BETWEEN (rt0.c0) AND (NULL)), (rt0.c0 IN (NULL)))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON vt1.c0);
SELECT ALL * FROM rt0 INNER JOIN vt1 ON vt1.c0 WHERE (PRINTF(NULLIF(rt0.c0, vt1.c0), ((rt0.c2) BETWEEN (rt0.c0) AND (NULL)), (rt0.c0 IN (NULL))));
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE ((((t1.c1, rt0.c1, t1.c1)) NOT BETWEEN ((rt0.c1 COLLATE BINARY, (rt0.c1 IN ()), CASE WHEN vt0.c0 THEN rt0.c1 ELSE t1.c43 END)) AND ((((-1.99496167E8)!=(t1.c0)), (NULL IN ()), (vt0.c0 IN ()))))) ORDER BY (((rt0.c2 COLLATE RTRIM))>=((CAST(vt0.c0 AS NUMERIC))))  NULLS FIRST, CAST((~ (t1.c34)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((((t1.c1, rt0.c1, t1.c1)) NOT BETWEEN ((rt0.c1 COLLATE BINARY, (rt0.c1 IN ()), CASE WHEN vt0.c0 THEN rt0.c1 ELSE t1.c43 END)) AND ((((-1.99496167E8)!=(t1.c0)), (NULL IN ()), (vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY (((rt0.c2 COLLATE RTRIM))>=((CAST(vt0.c0 AS NUMERIC))))  NULLS FIRST, CAST((~ (t1.c34)) AS NUMERIC));
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE ((((t1.c1, rt0.c1, t1.c1)) NOT BETWEEN ((rt0.c1 COLLATE BINARY, (rt0.c1 IN ()), CASE WHEN vt0.c0 THEN rt0.c1 ELSE t1.c43 END)) AND ((((-1.99496167E8)!=(t1.c0)), (NULL IN ()), (vt0.c0 IN ()))))) ORDER BY (((rt0.c2 COLLATE RTRIM))>=((CAST(vt0.c0 AS NUMERIC))))  NULLS FIRST, CAST((~ (t1.c34)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((((t1.c1, rt0.c1, t1.c1)) NOT BETWEEN ((rt0.c1 COLLATE BINARY, (rt0.c1 IN ()), CASE WHEN vt0.c0 THEN rt0.c1 ELSE t1.c43 END)) AND ((((-1.99496167E8)!=(t1.c0)), (NULL IN ()), (vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY (((rt0.c2 COLLATE RTRIM))>=((CAST(vt0.c0 AS NUMERIC))))  NULLS FIRST, CAST((~ (t1.c34)) AS NUMERIC));
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE ((((t1.c1, rt0.c1, t1.c1)) NOT BETWEEN ((rt0.c1 COLLATE BINARY, (rt0.c1 IN ()), CASE WHEN vt0.c0 THEN rt0.c1 ELSE t1.c43 END)) AND ((((-1.99496167E8)!=(t1.c0)), (NULL IN ()), (vt0.c0 IN ()))))) ORDER BY (((rt0.c2 COLLATE RTRIM))>=((CAST(vt0.c0 AS NUMERIC))))  NULLS FIRST, CAST((~ (t1.c34)) AS NUMERIC);
SELECT * FROM vt1, t1, vt0, rt0 INDEXED BY i54 WHERE (CAST(((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) AS REAL)) ORDER BY ((((rt0.c0 COLLATE NOCASE)OR(rt0.c0)))AND(2.72894131E8)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1, t1, vt0, rt0 INDEXED BY i54 ORDER BY ((((rt0.c0 COLLATE NOCASE)OR(rt0.c0)))AND(2.72894131E8)) DESC);
SELECT * FROM vt1, t1, vt0, rt0 INDEXED BY i54 WHERE (CAST(((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) AS REAL)) ORDER BY ((((rt0.c0 COLLATE NOCASE)OR(rt0.c0)))AND(2.72894131E8)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1, t1, vt0, rt0 INDEXED BY i54 ORDER BY ((((rt0.c0 COLLATE NOCASE)OR(rt0.c0)))AND(2.72894131E8)) DESC);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t1 ON (((((((t1.c0))!=((t1.c34))))OR(x'0a9e')))AND(((t1.c0)LIKE(rt0.c1)))) FULL OUTER JOIN rt0 ON (CASE WHEN rt0.c2 THEN rt0.c2 END IN (CASE WHEN t1.c1 THEN rt0.c2 WHEN '4+Â£_\rqY#' THEN rt0.c1 WHEN 0Xffffffffbcd724bf THEN t1.c1 ELSE rt0.c1 END, (- (rt0.c2)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON (((((((t1.c0))!=((t1.c34))))OR(x'0a9e')))AND(((t1.c0)LIKE(rt0.c1)))) FULL OUTER JOIN rt0 ON (CASE WHEN rt0.c2 THEN rt0.c2 END IN (CASE WHEN t1.c1 THEN rt0.c2 WHEN '4+Â£_\rqY#' THEN rt0.c1 WHEN 0Xffffffffbcd724bf THEN t1.c1 ELSE rt0.c1 END, (- (rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t1 ON (((((((t1.c0))!=((t1.c34))))OR(x'0a9e')))AND(((t1.c0)LIKE(rt0.c1)))) FULL OUTER JOIN rt0 ON (CASE WHEN rt0.c2 THEN rt0.c2 END IN (CASE WHEN t1.c1 THEN rt0.c2 WHEN '4+Â£_\rqY#' THEN rt0.c1 WHEN 0Xffffffffbcd724bf THEN t1.c1 ELSE rt0.c1 END, (- (rt0.c2)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON (((((((t1.c0))!=((t1.c34))))OR(x'0a9e')))AND(((t1.c0)LIKE(rt0.c1)))) FULL OUTER JOIN rt0 ON (CASE WHEN rt0.c2 THEN rt0.c2 END IN (CASE WHEN t1.c1 THEN rt0.c2 WHEN '4+Â£_\rqY#' THEN rt0.c1 WHEN 0Xffffffffbcd724bf THEN t1.c1 ELSE rt0.c1 END, (- (rt0.c2)))));
SELECT ALL * FROM t1, rt0, vt0 WHERE (((t1.c1)==(rt0.c0)) COLLATE NOCASE COLLATE NOCASE) ORDER BY rt0.c1, ((CAST(t1.c1 AS TEXT)) BETWEEN (((((t1.c0)OR(t1.c43)))OR(NULL))) AND (((t1.c34) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t1.c1)=(rt0.c0)) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY rt0.c1, ((CAST(t1.c1 AS TEXT)) BETWEEN (((((t1.c0)OR(t1.c43)))OR(NULL))) AND (((t1.c34) NOTNULL)))  NULLS FIRST);
SELECT ALL * FROM t1, rt0, vt0 WHERE (((t1.c1)==(rt0.c0)) COLLATE NOCASE COLLATE NOCASE) ORDER BY rt0.c1, ((CAST(t1.c1 AS TEXT)) BETWEEN (((((t1.c0)OR(t1.c43)))OR(NULL))) AND (((t1.c34) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t1.c1)=(rt0.c0)) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY rt0.c1, ((CAST(t1.c1 AS TEXT)) BETWEEN (((((t1.c0)OR(t1.c43)))OR(NULL))) AND (((t1.c34) NOTNULL)))  NULLS FIRST);
SELECT ALL * FROM t1, rt0, vt0 WHERE (((t1.c1)==(rt0.c0)) COLLATE NOCASE COLLATE NOCASE) ORDER BY rt0.c1, ((CAST(t1.c1 AS TEXT)) BETWEEN (((((t1.c0)OR(t1.c43)))OR(NULL))) AND (((t1.c34) NOTNULL)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE ((- (x'6b9d1171'))) ORDER BY ((rt0.c1)OR(t1.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((- (x'6b9d1171'))) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY ((rt0.c1)OR(t1.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE ((- (x'6b9d1171'))) ORDER BY ((rt0.c1)OR(t1.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((- (x'6b9d1171'))) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY ((rt0.c1)OR(t1.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE ((- (x'6b9d1171'))) ORDER BY ((rt0.c1)OR(t1.c0)) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM vt0, vt1 INNER JOIN t1 ON ((((t1.c0) ISNULL))>>(((((t1.c34)AND(vt1.c0)))OR(vt1.c0)))) WHERE (0.8618636869061393) ORDER BY (~ ((t1.c43 IN (t1.c34)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.8618636869061393) IS TRUE)  as count FROM vt0, vt1 INNER JOIN t1 ON ((((t1.c0) ISNULL))>>(((((t1.c34)AND(vt1.c0)))OR(vt1.c0)))) ORDER BY (~ ((t1.c43 IN (t1.c34)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 INNER JOIN t1 ON ((((t1.c0) ISNULL))>>(((((t1.c34)AND(vt1.c0)))OR(vt1.c0)))) WHERE (0.8618636869061393) ORDER BY (~ ((t1.c43 IN (t1.c34)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.8618636869061393) IS TRUE)  as count FROM vt0, vt1 INNER JOIN t1 ON ((((t1.c0) ISNULL))>>(((((t1.c34)AND(vt1.c0)))OR(vt1.c0)))) ORDER BY (~ ((t1.c43 IN (t1.c34)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 INNER JOIN t1 ON ((((t1.c0) ISNULL))>>(((((t1.c34)AND(vt1.c0)))OR(vt1.c0)))) WHERE (0.8618636869061393) ORDER BY (~ ((t1.c43 IN (t1.c34)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1, t1 WHERE ((((CASE WHEN t1.c34 THEN t1.c1 END, t1.c34, t1.c43 COLLATE NOCASE))<=((((t1.c0) BETWEEN (vt1.c0) AND (NULL)), (t1.c1 IN (t1.c1)), ((t1.c0) ISNULL))))) ORDER BY ((t1.c34 COLLATE NOCASE) NOT BETWEEN (NULL) AND (((t1.c0) NOT BETWEEN (t1.c43) AND (NULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t1.c34 THEN t1.c1 END, t1.c34, t1.c43 COLLATE NOCASE))<=((((t1.c0) BETWEEN (vt1.c0) AND (NULL)), (t1.c1 IN (t1.c1)), ((t1.c0) ISNULL))))) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY ((t1.c34 COLLATE NOCASE) NOT BETWEEN (NULL) AND (((t1.c0) NOT BETWEEN (t1.c43) AND (NULL))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, t1 WHERE ((((CASE WHEN t1.c34 THEN t1.c1 END, t1.c34, t1.c43 COLLATE NOCASE))<=((((t1.c0) BETWEEN (vt1.c0) AND (NULL)), (t1.c1 IN (t1.c1)), ((t1.c0) ISNULL))))) ORDER BY ((t1.c34 COLLATE NOCASE) NOT BETWEEN (NULL) AND (((t1.c0) NOT BETWEEN (t1.c43) AND (NULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t1.c34 THEN t1.c1 END, t1.c34, t1.c43 COLLATE NOCASE))<=((((t1.c0) BETWEEN (vt1.c0) AND (NULL)), (t1.c1 IN (t1.c1)), ((t1.c0) ISNULL))))) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY ((t1.c34 COLLATE NOCASE) NOT BETWEEN (NULL) AND (((t1.c0) NOT BETWEEN (t1.c43) AND (NULL))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, t1 WHERE ((((CASE WHEN t1.c34 THEN t1.c1 END, t1.c34, t1.c43 COLLATE NOCASE))<=((((t1.c0) BETWEEN (vt1.c0) AND (NULL)), (t1.c1 IN (t1.c1)), ((t1.c0) ISNULL))))) ORDER BY ((t1.c34 COLLATE NOCASE) NOT BETWEEN (NULL) AND (((t1.c0) NOT BETWEEN (t1.c43) AND (NULL))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (0.43559492821033996) ORDER BY ((CAST(vt0.c0 AS INTEGER))GLOB(0.38705270842131645)) ASC  NULLS LAST, CAST(NULL AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.43559492821033996) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER))GLOB(0.38705270842131645)) ASC  NULLS LAST, CAST(NULL AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (0.43559492821033996) ORDER BY ((CAST(vt0.c0 AS INTEGER))GLOB(0.38705270842131645)) ASC  NULLS LAST, CAST(NULL AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.43559492821033996) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER))GLOB(0.38705270842131645)) ASC  NULLS LAST, CAST(NULL AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (0.43559492821033996) ORDER BY ((CAST(vt0.c0 AS INTEGER))GLOB(0.38705270842131645)) ASC  NULLS LAST, CAST(NULL AS NUMERIC)  NULLS LAST;
SELECT COUNT(*) FROM vt1, rt0 WHERE (0.4045099938459863);
SELECT SUM(count) FROM (SELECT ALL ((0.4045099938459863) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (0.4045099938459863);
SELECT SUM(count) FROM (SELECT ALL ((0.4045099938459863) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (0.4045099938459863);
SELECT ALL * FROM vt1, rt0, vt0, t1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, rt0, vt0, t1);
SELECT ALL * FROM vt1, rt0, vt0, t1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, rt0, vt0, t1);
SELECT ALL * FROM vt1, rt0, vt0, t1 WHERE (x'');
SELECT COUNT(*) FROM rt0, t1 WHERE ((((rt0.c0 IN (rt0.c0)))LIKE(x'')));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN (rt0.c0)))LIKE(x''))) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE ((((rt0.c0 IN (rt0.c0)))LIKE(x'')));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN (rt0.c0)))LIKE(x''))) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE ((((rt0.c0 IN (rt0.c0)))LIKE(x'')));
SELECT ALL COUNT(*) FROM rt0, vt1 FULL OUTER JOIN vt0 ON (CAST(0.058217285750311376 AS REAL) IN ()) RIGHT OUTER JOIN t1 ON (((t1.c34)) NOT BETWEEN (((((t1.c34)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))) AND ((((rt0.c1)>>(rt0.c2))))) WHERE ((((~ (rt0.c2))) NOT NULL)) ORDER BY CASE (((0.4020324665182434, t1.c0, t1.c34))>((rt0.c2, vt0.c0, t1.c43)))  WHEN CAST(rt0.c0 AS BLOB) THEN CAST(t1.c43 AS NUMERIC) ELSE (- (0.9877940232485107)) END ASC;
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0, vt1 FULL OUTER JOIN vt0 ON (CAST(0.058217285750311376 AS REAL) IN ()) RIGHT OUTER JOIN t1 ON (((t1.c34)) NOT BETWEEN (((((t1.c34)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))) AND ((((rt0.c1)>>(rt0.c2))))) ORDER BY CASE (((0.4020324665182434, t1.c0, t1.c34))>((rt0.c2, vt0.c0, t1.c43)))  WHEN CAST(rt0.c0 AS BLOB) THEN CAST(t1.c43 AS NUMERIC) ELSE (- (0.9877940232485107)) END ASC);
SELECT ALL COUNT(*) FROM rt0, vt1 FULL OUTER JOIN vt0 ON (CAST(0.058217285750311376 AS REAL) IN ()) RIGHT OUTER JOIN t1 ON (((t1.c34)) NOT BETWEEN (((((t1.c34)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))) AND ((((rt0.c1)>>(rt0.c2))))) WHERE ((((~ (rt0.c2))) NOT NULL)) ORDER BY CASE (((0.4020324665182434, t1.c0, t1.c34))>((rt0.c2, vt0.c0, t1.c43)))  WHEN CAST(rt0.c0 AS BLOB) THEN CAST(t1.c43 AS NUMERIC) ELSE (- (0.9877940232485107)) END ASC;
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0, vt1 FULL OUTER JOIN vt0 ON (CAST(0.058217285750311376 AS REAL) IN ()) RIGHT OUTER JOIN t1 ON (((t1.c34)) NOT BETWEEN (((((t1.c34)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))) AND ((((rt0.c1)>>(rt0.c2))))) ORDER BY CASE (((0.4020324665182434, t1.c0, t1.c34))>((rt0.c2, vt0.c0, t1.c43)))  WHEN CAST(rt0.c0 AS BLOB) THEN CAST(t1.c43 AS NUMERIC) ELSE (- (0.9877940232485107)) END ASC);
SELECT ALL COUNT(*) FROM rt0, vt1 FULL OUTER JOIN vt0 ON (CAST(0.058217285750311376 AS REAL) IN ()) RIGHT OUTER JOIN t1 ON (((t1.c34)) NOT BETWEEN (((((t1.c34)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))) AND ((((rt0.c1)>>(rt0.c2))))) WHERE ((((~ (rt0.c2))) NOT NULL)) ORDER BY CASE (((0.4020324665182434, t1.c0, t1.c34))>((rt0.c2, vt0.c0, t1.c43)))  WHEN CAST(rt0.c0 AS BLOB) THEN CAST(t1.c43 AS NUMERIC) ELSE (- (0.9877940232485107)) END ASC;
SELECT * FROM vt1, rt0 NATURAL JOIN t1 WHERE (((((rt0.c2))<=((t1.c34))) IN ())) ORDER BY ((((rt0.c1 IN ())))!=(((t1.c0 IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2))<=((t1.c34))) IN ())) IS TRUE)  as count FROM vt1, rt0 NATURAL JOIN t1 ORDER BY ((((rt0.c1 IN ())))!=(((t1.c0 IN ()))))  NULLS FIRST);
SELECT * FROM vt1, rt0 NATURAL JOIN t1 WHERE (((((rt0.c2))<=((t1.c34))) IN ())) ORDER BY ((((rt0.c1 IN ())))!=(((t1.c0 IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2))<=((t1.c34))) IN ())) IS TRUE)  as count FROM vt1, rt0 NATURAL JOIN t1 ORDER BY ((((rt0.c1 IN ())))!=(((t1.c0 IN ()))))  NULLS FIRST);
SELECT * FROM vt1, rt0 NATURAL JOIN t1 WHERE (((((rt0.c2))<=((t1.c34))) IN ())) ORDER BY ((((rt0.c1 IN ())))!=(((t1.c0 IN ()))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((((((vt0.c0)OR(vt0.c0)))OR(rt0.c0)))OR(vt0.c0)))OR(vt0.c0)))GLOB(vt0.c0 COLLATE BINARY)) WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))) AND (((rt0.c2 IN ()))))) ORDER BY rt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))) AND (((rt0.c2 IN ()))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((((((vt0.c0)OR(vt0.c0)))OR(rt0.c0)))OR(vt0.c0)))OR(vt0.c0)))GLOB(vt0.c0 COLLATE BINARY)) ORDER BY rt0.c1 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((((((vt0.c0)OR(vt0.c0)))OR(rt0.c0)))OR(vt0.c0)))OR(vt0.c0)))GLOB(vt0.c0 COLLATE BINARY)) WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))) AND (((rt0.c2 IN ()))))) ORDER BY rt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))) AND (((rt0.c2 IN ()))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((((((vt0.c0)OR(vt0.c0)))OR(rt0.c0)))OR(vt0.c0)))OR(vt0.c0)))GLOB(vt0.c0 COLLATE BINARY)) ORDER BY rt0.c1 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((((((vt0.c0)OR(vt0.c0)))OR(rt0.c0)))OR(vt0.c0)))OR(vt0.c0)))GLOB(vt0.c0 COLLATE BINARY)) WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))) AND (((rt0.c2 IN ()))))) ORDER BY rt0.c1 ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt1, t1 INDEXED BY i41 WHERE (((rt0.c1 COLLATE BINARY) NOT BETWEEN ((('-1162052710') BETWEEN (rt0.c0) AND (t1.c1))) AND (vt1.c0 COLLATE NOCASE))) ORDER BY (rt0.c2 IN (((rt0.c1)-(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE BINARY) NOT BETWEEN ((('-1162052710') BETWEEN (rt0.c0) AND (t1.c1))) AND (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt1, t1 INDEXED BY i41 ORDER BY (rt0.c2 IN (((rt0.c1)-(rt0.c0)))) DESC);
SELECT COUNT(*) FROM rt0, vt1, t1 INDEXED BY i41 WHERE (((rt0.c1 COLLATE BINARY) NOT BETWEEN ((('-1162052710') BETWEEN (rt0.c0) AND (t1.c1))) AND (vt1.c0 COLLATE NOCASE))) ORDER BY (rt0.c2 IN (((rt0.c1)-(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE BINARY) NOT BETWEEN ((('-1162052710') BETWEEN (rt0.c0) AND (t1.c1))) AND (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt1, t1 INDEXED BY i41 ORDER BY (rt0.c2 IN (((rt0.c1)-(rt0.c0)))) DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (LOWER(DISTINCT ((rt0.c1) NOTNULL))) ORDER BY (+ ('F1#ã­\\ra')) ASC, (+ (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((rt0.c1) NOTNULL))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (+ ('F1#ã­\\ra')) ASC, (+ (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (LOWER(DISTINCT ((rt0.c1) NOTNULL))) ORDER BY (+ ('F1#ã­\\ra')) ASC, (+ (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((rt0.c1) NOTNULL))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (+ ('F1#ã­\\ra')) ASC, (+ (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (LOWER(DISTINCT ((rt0.c1) NOTNULL))) ORDER BY (+ ('F1#ã­\\ra')) ASC, (+ (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0, t1, vt1 WHERE ((((((((rt0.c1)) BETWEEN ((0.4209533175073671)) AND ((vt1.c0))))AND(((rt0.c2)>=(t1.c1)))))AND(((vt1.c0)<<(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c1)) BETWEEN ((0.4209533175073671)) AND ((vt1.c0))))AND(((rt0.c2)>=(t1.c1)))))AND(((vt1.c0)<<(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0, t1, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, t1, vt1 WHERE ((((((((rt0.c1)) BETWEEN ((0.4209533175073671)) AND ((vt1.c0))))AND(((rt0.c2)>=(t1.c1)))))AND(((vt1.c0)<<(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c1)) BETWEEN ((0.4209533175073671)) AND ((vt1.c0))))AND(((rt0.c2)>=(t1.c1)))))AND(((vt1.c0)<<(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0, t1, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, t1, vt1 WHERE ((((((((rt0.c1)) BETWEEN ((0.4209533175073671)) AND ((vt1.c0))))AND(((rt0.c2)>=(t1.c1)))))AND(((vt1.c0)<<(rt0.c0)))));
SELECT ALL * FROM t1 CROSS JOIN vt0 ON NULLIF(CAST(vt1.c0 AS NUMERIC), ((((t1.c43)OR(t1.c43)))AND(rt0.c1))) RIGHT OUTER JOIN vt1 ON x'a3f4' INNER JOIN rt0 ON ((NULLIF(t1.c0, t1.c0)) BETWEEN (CAST(NULL AS REAL)) AND (((t1.c34) NOTNULL))) WHERE (((CASE WHEN t1.c43 THEN rt0.c0 ELSE rt0.c1 END)<=((NOT ('	\r\((.')))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t1.c43 THEN rt0.c0 ELSE rt0.c1 END)<=((NOT ('	\r\((.'))))) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON NULLIF(CAST(vt1.c0 AS NUMERIC), ((((t1.c43)OR(t1.c43)))AND(rt0.c1))) RIGHT OUTER JOIN vt1 ON x'a3f4' INNER JOIN rt0 ON ((NULLIF(t1.c0, t1.c0)) BETWEEN (CAST(NULL AS REAL)) AND (((t1.c34) NOTNULL))));
SELECT ALL * FROM t1 CROSS JOIN vt0 ON NULLIF(CAST(vt1.c0 AS NUMERIC), ((((t1.c43)OR(t1.c43)))AND(rt0.c1))) RIGHT OUTER JOIN vt1 ON x'a3f4' INNER JOIN rt0 ON ((NULLIF(t1.c0, t1.c0)) BETWEEN (CAST(NULL AS REAL)) AND (((t1.c34) NOTNULL))) WHERE (((CASE WHEN t1.c43 THEN rt0.c0 ELSE rt0.c1 END)<=((NOT ('	\r\((.')))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t1.c43 THEN rt0.c0 ELSE rt0.c1 END)<=((NOT ('	\r\((.'))))) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON NULLIF(CAST(vt1.c0 AS NUMERIC), ((((t1.c43)OR(t1.c43)))AND(rt0.c1))) RIGHT OUTER JOIN vt1 ON x'a3f4' INNER JOIN rt0 ON ((NULLIF(t1.c0, t1.c0)) BETWEEN (CAST(NULL AS REAL)) AND (((t1.c34) NOTNULL))));
SELECT COUNT(*) FROM vt0, rt0, vt1, t1 WHERE (CASE WHEN ((((vt0.c0)AND(t1.c1)))AND(t1.c0)) THEN rt0.c2 COLLATE RTRIM WHEN ((vt0.c0) IS TRUE) THEN t1.c0 COLLATE NOCASE WHEN (vt0.c0 IN (vt0.c0)) THEN ((rt0.c0)+(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt0.c0)AND(t1.c1)))AND(t1.c0)) THEN rt0.c2 COLLATE RTRIM WHEN ((vt0.c0) IS TRUE) THEN t1.c0 COLLATE NOCASE WHEN (vt0.c0 IN (vt0.c0)) THEN ((rt0.c0)+(rt0.c1)) END) IS TRUE)  as count FROM vt0, rt0, vt1, t1);
SELECT COUNT(*) FROM vt0, rt0, vt1, t1 WHERE (CASE WHEN ((((vt0.c0)AND(t1.c1)))AND(t1.c0)) THEN rt0.c2 COLLATE RTRIM WHEN ((vt0.c0) IS TRUE) THEN t1.c0 COLLATE NOCASE WHEN (vt0.c0 IN (vt0.c0)) THEN ((rt0.c0)+(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt0.c0)AND(t1.c1)))AND(t1.c0)) THEN rt0.c2 COLLATE RTRIM WHEN ((vt0.c0) IS TRUE) THEN t1.c0 COLLATE NOCASE WHEN (vt0.c0 IN (vt0.c0)) THEN ((rt0.c0)+(rt0.c1)) END) IS TRUE)  as count FROM vt0, rt0, vt1, t1);
SELECT COUNT(*) FROM vt0, rt0, vt1, t1 WHERE (CASE WHEN ((((vt0.c0)AND(t1.c1)))AND(t1.c0)) THEN rt0.c2 COLLATE RTRIM WHEN ((vt0.c0) IS TRUE) THEN t1.c0 COLLATE NOCASE WHEN (vt0.c0 IN (vt0.c0)) THEN ((rt0.c0)+(rt0.c1)) END);
SELECT * FROM rt0, vt0, vt1 WHERE (((rt0.c1) IS FALSE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT * FROM rt0, vt0, vt1 WHERE (((rt0.c1) IS FALSE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT * FROM rt0, vt0, vt1 WHERE (((rt0.c1) IS FALSE) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON (('' COLLATE RTRIM) BETWEEN (vt1.c0) AND (LOWER(rt0.c0))) WHERE ('') ORDER BY ((((rt0.c1)OR(rt0.c0))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0, vt1 NOT INDEXED RIGHT OUTER JOIN vt0 ON (('' COLLATE RTRIM) BETWEEN (vt1.c0) AND (LOWER(rt0.c0))) ORDER BY ((((rt0.c1)OR(rt0.c0))) IS FALSE) ASC);
SELECT COUNT(*) FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON (('' COLLATE RTRIM) BETWEEN (vt1.c0) AND (LOWER(rt0.c0))) WHERE ('') ORDER BY ((((rt0.c1)OR(rt0.c0))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0, vt1 NOT INDEXED RIGHT OUTER JOIN vt0 ON (('' COLLATE RTRIM) BETWEEN (vt1.c0) AND (LOWER(rt0.c0))) ORDER BY ((((rt0.c1)OR(rt0.c0))) IS FALSE) ASC);
SELECT COUNT(*) FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON (('' COLLATE RTRIM) BETWEEN (vt1.c0) AND (LOWER(rt0.c0))) WHERE ('') ORDER BY ((((rt0.c1)OR(rt0.c0))) IS FALSE) ASC;
SELECT ALL * FROM vt0, t1 WHERE ((~ (CAST(t1.c43 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(t1.c43 AS BLOB)))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE ((~ (CAST(t1.c43 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(t1.c43 AS BLOB)))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE ((~ (CAST(t1.c43 AS BLOB))));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((t1.c1)<<(CASE t1.c0  WHEN t1.c1 THEN t1.c0 END))) ORDER BY (((((((((((t1.c1, vt0.c0, t1.c43)) BETWEEN ((t1.c0, vt0.c0, t1.c34)) AND ((0.4181714345743027, t1.c43, t1.c0))))AND(((((t1.c34)OR(t1.c43)))OR(t1.c34)))))OR(0.699095301602513 COLLATE BINARY)))AND((~ (t1.c0)))))OR(vt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c1)<<(CASE t1.c0  WHEN t1.c1 THEN t1.c0 END))) IS TRUE)  as count FROM t1, vt0 ORDER BY (((((((((((t1.c1, vt0.c0, t1.c43)) BETWEEN ((t1.c0, vt0.c0, t1.c34)) AND ((0.4181714345743027, t1.c43, t1.c0))))AND(((((t1.c34)OR(t1.c43)))OR(t1.c34)))))OR(0.699095301602513 COLLATE BINARY)))AND((~ (t1.c0)))))OR(vt0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((t1.c1)<<(CASE t1.c0  WHEN t1.c1 THEN t1.c0 END))) ORDER BY (((((((((((t1.c1, vt0.c0, t1.c43)) BETWEEN ((t1.c0, vt0.c0, t1.c34)) AND ((0.4181714345743027, t1.c43, t1.c0))))AND(((((t1.c34)OR(t1.c43)))OR(t1.c34)))))OR(0.699095301602513 COLLATE BINARY)))AND((~ (t1.c0)))))OR(vt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c1)<<(CASE t1.c0  WHEN t1.c1 THEN t1.c0 END))) IS TRUE)  as count FROM t1, vt0 ORDER BY (((((((((((t1.c1, vt0.c0, t1.c43)) BETWEEN ((t1.c0, vt0.c0, t1.c34)) AND ((0.4181714345743027, t1.c43, t1.c0))))AND(((((t1.c34)OR(t1.c43)))OR(t1.c34)))))OR(0.699095301602513 COLLATE BINARY)))AND((~ (t1.c0)))))OR(vt0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((t1.c1)<<(CASE t1.c0  WHEN t1.c1 THEN t1.c0 END))) ORDER BY (((((((((((t1.c1, vt0.c0, t1.c43)) BETWEEN ((t1.c0, vt0.c0, t1.c34)) AND ((0.4181714345743027, t1.c43, t1.c0))))AND(((((t1.c34)OR(t1.c43)))OR(t1.c34)))))OR(0.699095301602513 COLLATE BINARY)))AND((~ (t1.c0)))))OR(vt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT * FROM vt0 WHERE (vt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0 COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((('Vï¿¿0-q')<(NULL)) IN ()) WHERE ('L');
SELECT SUM(count) FROM (SELECT (('L') IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((('Vï¿¿0-q')<(NULL)) IN ()));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((('Vï¿¿0-q')<(NULL)) IN ()) WHERE ('L');
SELECT SUM(count) FROM (SELECT (('L') IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((('Vï¿¿0-q')<(NULL)) IN ()));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((('Vï¿¿0-q')<(NULL)) IN ()) WHERE ('L');
SELECT ALL COUNT(*) FROM rt0, t1 NATURAL JOIN vt1 WHERE ((((rt0.c2, t1.c34, rt0.c1, t1.c1, t1.c43)) BETWEEN ((x'', (((((((((((('\rn')AND(rt0.c0)))AND(t1.c43)))AND(t1.c0)))AND(vt1.c0)))OR(t1.c34)))AND(0X37e6434c)), CASE rt0.c1  WHEN t1.c34 THEN rt0.c1 END, ((((vt1.c0)OR(vt1.c0)))AND(t1.c1)), t1.c43 COLLATE BINARY)) AND (((t1.c1 IN ()), x'', (t1.c1 IN ()), rt0.c0 COLLATE NOCASE, (((rt0.c0))!=((vt1.c0)))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, t1.c34, rt0.c1, t1.c1, t1.c43)) BETWEEN ((x'', (((((((((((('\rn')AND(rt0.c0)))AND(t1.c43)))AND(t1.c0)))AND(vt1.c0)))OR(t1.c34)))AND(0x37e6434c)), CASE rt0.c1  WHEN t1.c34 THEN rt0.c1 END, ((((vt1.c0)OR(vt1.c0)))AND(t1.c1)), t1.c43 COLLATE BINARY)) AND (((t1.c1 IN ()), x'', (t1.c1 IN ()), rt0.c0 COLLATE NOCASE, (((rt0.c0))<>((vt1.c0))))))) IS TRUE)  as count FROM rt0, t1 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM rt0, t1 NATURAL JOIN vt1 WHERE ((((rt0.c2, t1.c34, rt0.c1, t1.c1, t1.c43)) BETWEEN ((x'', (((((((((((('\rn')AND(rt0.c0)))AND(t1.c43)))AND(t1.c0)))AND(vt1.c0)))OR(t1.c34)))AND(0X37e6434c)), CASE rt0.c1  WHEN t1.c34 THEN rt0.c1 END, ((((vt1.c0)OR(vt1.c0)))AND(t1.c1)), t1.c43 COLLATE BINARY)) AND (((t1.c1 IN ()), x'', (t1.c1 IN ()), rt0.c0 COLLATE NOCASE, (((rt0.c0))!=((vt1.c0)))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, t1.c34, rt0.c1, t1.c1, t1.c43)) BETWEEN ((x'', (((((((((((('\rn')AND(rt0.c0)))AND(t1.c43)))AND(t1.c0)))AND(vt1.c0)))OR(t1.c34)))AND(0x37e6434c)), CASE rt0.c1  WHEN t1.c34 THEN rt0.c1 END, ((((vt1.c0)OR(vt1.c0)))AND(t1.c1)), t1.c43 COLLATE BINARY)) AND (((t1.c1 IN ()), x'', (t1.c1 IN ()), rt0.c0 COLLATE NOCASE, (((rt0.c0))<>((vt1.c0))))))) IS TRUE)  as count FROM rt0, t1 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM rt0, t1 NATURAL JOIN vt1 WHERE ((((rt0.c2, t1.c34, rt0.c1, t1.c1, t1.c43)) BETWEEN ((x'', (((((((((((('\rn')AND(rt0.c0)))AND(t1.c43)))AND(t1.c0)))AND(vt1.c0)))OR(t1.c34)))AND(0X37e6434c)), CASE rt0.c1  WHEN t1.c34 THEN rt0.c1 END, ((((vt1.c0)OR(vt1.c0)))AND(t1.c1)), t1.c43 COLLATE BINARY)) AND (((t1.c1 IN ()), x'', (t1.c1 IN ()), rt0.c0 COLLATE NOCASE, (((rt0.c0))!=((vt1.c0)))))));
SELECT * FROM t1, vt1 WHERE (LOWER(DISTINCT ((t1.c34) IS TRUE))) ORDER BY ((vt1.c0 IN (0X39be8d23)) IN ())  NULLS LAST, (((('2002391929')OR(CASE vt1.c0  WHEN vt1.c0 THEN t1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t1.c43 THEN t1.c1 ELSE t1.c0 END)))OR(((t1.c0)<=(t1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((t1.c34) IS TRUE))) IS TRUE)  as count FROM t1, vt1 ORDER BY ((vt1.c0 IN (0x39be8d23)) IN ())  NULLS LAST, (((('2002391929')OR(CASE vt1.c0  WHEN vt1.c0 THEN t1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t1.c43 THEN t1.c1 ELSE t1.c0 END)))OR(((t1.c0)<=(t1.c1)))) ASC);
SELECT * FROM t1, vt1 WHERE (LOWER(DISTINCT ((t1.c34) IS TRUE))) ORDER BY ((vt1.c0 IN (0X39be8d23)) IN ())  NULLS LAST, (((('2002391929')OR(CASE vt1.c0  WHEN vt1.c0 THEN t1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t1.c43 THEN t1.c1 ELSE t1.c0 END)))OR(((t1.c0)<=(t1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((t1.c34) IS TRUE))) IS TRUE)  as count FROM t1, vt1 ORDER BY ((vt1.c0 IN (0x39be8d23)) IN ())  NULLS LAST, (((('2002391929')OR(CASE vt1.c0  WHEN vt1.c0 THEN t1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t1.c43 THEN t1.c1 ELSE t1.c0 END)))OR(((t1.c0)<=(t1.c1)))) ASC);
SELECT * FROM t1, vt1 WHERE (LOWER(DISTINCT ((t1.c34) IS TRUE))) ORDER BY ((vt1.c0 IN (0X39be8d23)) IN ())  NULLS LAST, (((('2002391929')OR(CASE vt1.c0  WHEN vt1.c0 THEN t1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t1.c43 THEN t1.c1 ELSE t1.c0 END)))OR(((t1.c0)<=(t1.c1)))) ASC;
SELECT * FROM vt0 WHERE ((((0.422557724852484))<=((CAST(vt0.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT (((((0.422557724852484))<=((CAST(vt0.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((0.422557724852484))<=((CAST(vt0.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT (((((0.422557724852484))<=((CAST(vt0.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((0.422557724852484))<=((CAST(vt0.c0 AS NUMERIC)))));
SELECT * FROM vt1 WHERE (((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0))) IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0))) IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0))) IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0))) IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0))) IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0))=((rt0.c0))))LIKE(((rt0.c0)==(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0))=((rt0.c0))))LIKE(((rt0.c0)=(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0))=((rt0.c0))))LIKE(((rt0.c0)==(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0))=((rt0.c0))))LIKE(((rt0.c0)=(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0))=((rt0.c0))))LIKE(((rt0.c0)==(rt0.c0)))));
SELECT ALL COUNT(*) FROM t1, vt1 NATURAL JOIN vt0 WHERE (((((((((((vt0.c0) BETWEEN (t1.c1) AND (t1.c43)))OR(t1.c43)))OR(CAST(t1.c1 AS BLOB))))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (t1.c34)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) BETWEEN (t1.c1) AND (t1.c43)))OR(t1.c43)))OR(CAST(t1.c1 AS BLOB))))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (t1.c34))))) IS TRUE)  as count FROM t1, vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM t1, vt1 NATURAL JOIN vt0 WHERE (((((((((((vt0.c0) BETWEEN (t1.c1) AND (t1.c43)))OR(t1.c43)))OR(CAST(t1.c1 AS BLOB))))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (t1.c34)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) BETWEEN (t1.c1) AND (t1.c43)))OR(t1.c43)))OR(CAST(t1.c1 AS BLOB))))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (t1.c34))))) IS TRUE)  as count FROM t1, vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM t1, vt1 NATURAL JOIN vt0 WHERE (((((((((((vt0.c0) BETWEEN (t1.c1) AND (t1.c43)))OR(t1.c43)))OR(CAST(t1.c1 AS BLOB))))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (t1.c34)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ('1447915411');
SELECT SUM(count) FROM (SELECT (('1447915411') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('1447915411');
SELECT SUM(count) FROM (SELECT (('1447915411') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('1447915411');
SELECT * FROM vt1, t1 WHERE (CAST((((vt1.c0, t1.c0, t1.c34)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((vt1.c0, vt1.c0, t1.c0))) AS NUMERIC)) ORDER BY ((json_array_length(t1.c34)) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c0, t1.c0, t1.c34)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((vt1.c0, vt1.c0, t1.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt1, t1 ORDER BY ((json_array_length(t1.c34)) IS TRUE) ASC  NULLS LAST);
SELECT * FROM vt1, t1 WHERE (CAST((((vt1.c0, t1.c0, t1.c34)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((vt1.c0, vt1.c0, t1.c0))) AS NUMERIC)) ORDER BY ((json_array_length(t1.c34)) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c0, t1.c0, t1.c34)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((vt1.c0, vt1.c0, t1.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt1, t1 ORDER BY ((json_array_length(t1.c34)) IS TRUE) ASC  NULLS LAST);
SELECT * FROM t1 RIGHT OUTER JOIN rt0 ON (((rt0.c0)<>(rt0.c2)) IN (((t1.c34)/(rt0.c1)), (t1.c34 IN ()))) INNER JOIN vt0 ON LTRIM(t1.c43) COLLATE BINARY FULL OUTER JOIN vt1 ON CASE ((t1.c34) NOT BETWEEN (t1.c34) AND (t1.c43))  WHEN '-1994748575' THEN 0x6ebe840b WHEN (((vt0.c0)) BETWEEN ((t1.c1)) AND ((vt0.c0))) THEN ((rt0.c1) BETWEEN ('') AND (t1.c43)) WHEN ((((rt0.c1)AND(rt0.c2)))OR(t1.c0)) THEN (NOT (rt0.c1)) ELSE (NOT (t1.c0)) END WHERE (((CASE WHEN x'' THEN t1.c43 END) BETWEEN ((rt0.c2 IN ())) AND (CAST(vt0.c0 AS NUMERIC)))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN x'' THEN t1.c43 END) BETWEEN ((rt0.c2 IN ())) AND (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON (((rt0.c0)<>(rt0.c2)) IN (((t1.c34)/(rt0.c1)), (t1.c34 IN ()))) INNER JOIN vt0 ON LTRIM(t1.c43) COLLATE BINARY FULL OUTER JOIN vt1 ON CASE ((t1.c34) NOT BETWEEN (t1.c34) AND (t1.c43))  WHEN '-1994748575' THEN 0x6ebe840b WHEN (((vt0.c0)) BETWEEN ((t1.c1)) AND ((vt0.c0))) THEN ((rt0.c1) BETWEEN ('') AND (t1.c43)) WHEN ((((rt0.c1)AND(rt0.c2)))OR(t1.c0)) THEN (NOT (rt0.c1)) ELSE (NOT (t1.c0)) END ORDER BY rt0.c1);
SELECT * FROM t1 RIGHT OUTER JOIN rt0 ON (((rt0.c0)<>(rt0.c2)) IN (((t1.c34)/(rt0.c1)), (t1.c34 IN ()))) INNER JOIN vt0 ON LTRIM(t1.c43) COLLATE BINARY FULL OUTER JOIN vt1 ON CASE ((t1.c34) NOT BETWEEN (t1.c34) AND (t1.c43))  WHEN '-1994748575' THEN 0x6ebe840b WHEN (((vt0.c0)) BETWEEN ((t1.c1)) AND ((vt0.c0))) THEN ((rt0.c1) BETWEEN ('') AND (t1.c43)) WHEN ((((rt0.c1)AND(rt0.c2)))OR(t1.c0)) THEN (NOT (rt0.c1)) ELSE (NOT (t1.c0)) END WHERE (((CASE WHEN x'' THEN t1.c43 END) BETWEEN ((rt0.c2 IN ())) AND (CAST(vt0.c0 AS NUMERIC)))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN x'' THEN t1.c43 END) BETWEEN ((rt0.c2 IN ())) AND (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON (((rt0.c0)<>(rt0.c2)) IN (((t1.c34)/(rt0.c1)), (t1.c34 IN ()))) INNER JOIN vt0 ON LTRIM(t1.c43) COLLATE BINARY FULL OUTER JOIN vt1 ON CASE ((t1.c34) NOT BETWEEN (t1.c34) AND (t1.c43))  WHEN '-1994748575' THEN 0x6ebe840b WHEN (((vt0.c0)) BETWEEN ((t1.c1)) AND ((vt0.c0))) THEN ((rt0.c1) BETWEEN ('') AND (t1.c43)) WHEN ((((rt0.c1)AND(rt0.c2)))OR(t1.c0)) THEN (NOT (rt0.c1)) ELSE (NOT (t1.c0)) END ORDER BY rt0.c1);
SELECT * FROM t1 RIGHT OUTER JOIN rt0 ON (((rt0.c0)<>(rt0.c2)) IN (((t1.c34)/(rt0.c1)), (t1.c34 IN ()))) INNER JOIN vt0 ON LTRIM(t1.c43) COLLATE BINARY FULL OUTER JOIN vt1 ON CASE ((t1.c34) NOT BETWEEN (t1.c34) AND (t1.c43))  WHEN '-1994748575' THEN 0x6ebe840b WHEN (((vt0.c0)) BETWEEN ((t1.c1)) AND ((vt0.c0))) THEN ((rt0.c1) BETWEEN ('') AND (t1.c43)) WHEN ((((rt0.c1)AND(rt0.c2)))OR(t1.c0)) THEN (NOT (rt0.c1)) ELSE (NOT (t1.c0)) END WHERE (((CASE WHEN x'' THEN t1.c43 END) BETWEEN ((rt0.c2 IN ())) AND (CAST(vt0.c0 AS NUMERIC)))) ORDER BY rt0.c1;
SELECT ALL * FROM t1 WHERE (CASE ((((t1.c43)OR(t1.c43)))OR(t1.c1))  WHEN t1.c43 COLLATE RTRIM THEN (t1.c34 IN ()) ELSE (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c34))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((t1.c43)OR(t1.c43)))OR(t1.c1))  WHEN t1.c43 COLLATE RTRIM THEN (t1.c34 IN ()) ELSE (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c34))) END) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CASE ((((t1.c43)OR(t1.c43)))OR(t1.c1))  WHEN t1.c43 COLLATE RTRIM THEN (t1.c34 IN ()) ELSE (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c34))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((t1.c43)OR(t1.c43)))OR(t1.c1))  WHEN t1.c43 COLLATE RTRIM THEN (t1.c34 IN ()) ELSE (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c34))) END) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CASE ((((t1.c43)OR(t1.c43)))OR(t1.c1))  WHEN t1.c43 COLLATE RTRIM THEN (t1.c34 IN ()) ELSE (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c34))) END);
SELECT ALL * FROM t1 INDEXED BY i41 NATURAL JOIN vt1 WHERE (CASE CAST(t1.c43 AS TEXT)  WHEN ((t1.c0)>>(vt1.c0)) THEN ((t1.c43) NOT NULL) END) ORDER BY '' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(t1.c43 AS TEXT)  WHEN ((t1.c0)>>(vt1.c0)) THEN ((t1.c43) NOT NULL) END) IS TRUE)  as count FROM t1 INDEXED BY i41 NATURAL JOIN vt1 ORDER BY '' DESC  NULLS FIRST);
SELECT ALL * FROM t1 INDEXED BY i41 NATURAL JOIN vt1 WHERE (CASE CAST(t1.c43 AS TEXT)  WHEN ((t1.c0)>>(vt1.c0)) THEN ((t1.c43) NOT NULL) END) ORDER BY '' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(t1.c43 AS TEXT)  WHEN ((t1.c0)>>(vt1.c0)) THEN ((t1.c43) NOT NULL) END) IS TRUE)  as count FROM t1 INDEXED BY i41 NATURAL JOIN vt1 ORDER BY '' DESC  NULLS FIRST);
SELECT ALL * FROM vt0, t1, vt1, rt0 WHERE (CASE WHEN ((t1.c43) NOT BETWEEN (t1.c34) AND (rt0.c2)) THEN t1.c0 WHEN ((rt0.c0)*(rt0.c1)) THEN ((t1.c34) IS FALSE) WHEN (+ (t1.c43)) THEN ((rt0.c1) NOT BETWEEN (t1.c43) AND (rt0.c0)) ELSE ((((t1.c0)AND(vt1.c0)))AND(rt0.c0)) END) ORDER BY (((t1.c43) BETWEEN (rt0.c1) AND (rt0.c2)) IN ((t1.c43 IN ()), (~ (t1.c43)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t1.c43) NOT BETWEEN (t1.c34) AND (rt0.c2)) THEN t1.c0 WHEN ((rt0.c0)*(rt0.c1)) THEN ((t1.c34) IS FALSE) WHEN (+ (t1.c43)) THEN ((rt0.c1) NOT BETWEEN (t1.c43) AND (rt0.c0)) ELSE ((((t1.c0)AND(vt1.c0)))AND(rt0.c0)) END) IS TRUE)  as count FROM vt0, t1, vt1, rt0 ORDER BY (((t1.c43) BETWEEN (rt0.c1) AND (rt0.c2)) IN ((t1.c43 IN ()), (~ (t1.c43)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, t1, vt1, rt0 WHERE (CASE WHEN ((t1.c43) NOT BETWEEN (t1.c34) AND (rt0.c2)) THEN t1.c0 WHEN ((rt0.c0)*(rt0.c1)) THEN ((t1.c34) IS FALSE) WHEN (+ (t1.c43)) THEN ((rt0.c1) NOT BETWEEN (t1.c43) AND (rt0.c0)) ELSE ((((t1.c0)AND(vt1.c0)))AND(rt0.c0)) END) ORDER BY (((t1.c43) BETWEEN (rt0.c1) AND (rt0.c2)) IN ((t1.c43 IN ()), (~ (t1.c43)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t1.c43) NOT BETWEEN (t1.c34) AND (rt0.c2)) THEN t1.c0 WHEN ((rt0.c0)*(rt0.c1)) THEN ((t1.c34) IS FALSE) WHEN (+ (t1.c43)) THEN ((rt0.c1) NOT BETWEEN (t1.c43) AND (rt0.c0)) ELSE ((((t1.c0)AND(vt1.c0)))AND(rt0.c0)) END) IS TRUE)  as count FROM vt0, t1, vt1, rt0 ORDER BY (((t1.c43) BETWEEN (rt0.c1) AND (rt0.c2)) IN ((t1.c43 IN ()), (~ (t1.c43)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, t1, vt1, rt0 WHERE (CASE WHEN ((t1.c43) NOT BETWEEN (t1.c34) AND (rt0.c2)) THEN t1.c0 WHEN ((rt0.c0)*(rt0.c1)) THEN ((t1.c34) IS FALSE) WHEN (+ (t1.c43)) THEN ((rt0.c1) NOT BETWEEN (t1.c43) AND (rt0.c0)) ELSE ((((t1.c0)AND(vt1.c0)))AND(rt0.c0)) END) ORDER BY (((t1.c43) BETWEEN (rt0.c1) AND (rt0.c2)) IN ((t1.c43 IN ()), (~ (t1.c43)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((((+ (vt1.c0))) ISNULL)) ORDER BY ((((vt1.c0)IS NOT(vt1.c0))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)IS NOT(vt1.c0))) NOTNULL) DESC);
SELECT ALL * FROM vt1 WHERE ((((+ (vt1.c0))) ISNULL)) ORDER BY ((((vt1.c0)IS NOT(vt1.c0))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)IS NOT(vt1.c0))) NOTNULL) DESC);
SELECT ALL * FROM vt1 WHERE ((((+ (vt1.c0))) ISNULL)) ORDER BY ((((vt1.c0)IS NOT(vt1.c0))) NOTNULL) DESC;
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE (((((vt1.c0)>=(vt0.c0))) NOT BETWEEN (((t1.c43)<>(t1.c1))) AND ((((t1.c1, t1.c34, vt0.c0))>=((t1.c0, t1.c34, vt1.c0)))))) ORDER BY 0.8193661133217168 ASC, (((((NOT (t1.c34)))AND(((vt0.c0)<>(t1.c43)))))AND(((((((((t1.c0)OR(t1.c1)))OR(vt1.c0)))OR(t1.c0)))AND(t1.c43)))), ((((((t1.c43)AND(t1.c43)))OR(t1.c0)))|(((vt0.c0) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>=(vt0.c0))) NOT BETWEEN (((t1.c43)!=(t1.c1))) AND ((((t1.c1, t1.c34, vt0.c0))>=((t1.c0, t1.c34, vt1.c0)))))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY 0.8193661133217168 ASC, (((((NOT (t1.c34)))AND(((vt0.c0)<>(t1.c43)))))AND(((((((((t1.c0)OR(t1.c1)))OR(vt1.c0)))OR(t1.c0)))AND(t1.c43)))), ((((((t1.c43)AND(t1.c43)))OR(t1.c0)))|(((vt0.c0) IS FALSE)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE (((((vt1.c0)>=(vt0.c0))) NOT BETWEEN (((t1.c43)<>(t1.c1))) AND ((((t1.c1, t1.c34, vt0.c0))>=((t1.c0, t1.c34, vt1.c0)))))) ORDER BY 0.8193661133217168 ASC, (((((NOT (t1.c34)))AND(((vt0.c0)<>(t1.c43)))))AND(((((((((t1.c0)OR(t1.c1)))OR(vt1.c0)))OR(t1.c0)))AND(t1.c43)))), ((((((t1.c43)AND(t1.c43)))OR(t1.c0)))|(((vt0.c0) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>=(vt0.c0))) NOT BETWEEN (((t1.c43)!=(t1.c1))) AND ((((t1.c1, t1.c34, vt0.c0))>=((t1.c0, t1.c34, vt1.c0)))))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY 0.8193661133217168 ASC, (((((NOT (t1.c34)))AND(((vt0.c0)<>(t1.c43)))))AND(((((((((t1.c0)OR(t1.c1)))OR(vt1.c0)))OR(t1.c0)))AND(t1.c43)))), ((((((t1.c43)AND(t1.c43)))OR(t1.c0)))|(((vt0.c0) IS FALSE)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE (((((vt1.c0)>=(vt0.c0))) NOT BETWEEN (((t1.c43)<>(t1.c1))) AND ((((t1.c1, t1.c34, vt0.c0))>=((t1.c0, t1.c34, vt1.c0)))))) ORDER BY 0.8193661133217168 ASC, (((((NOT (t1.c34)))AND(((vt0.c0)<>(t1.c43)))))AND(((((((((t1.c0)OR(t1.c1)))OR(vt1.c0)))OR(t1.c0)))AND(t1.c43)))), ((((((t1.c43)AND(t1.c43)))OR(t1.c0)))|(((vt0.c0) IS FALSE)))  NULLS LAST;
SELECT * FROM rt0, vt1, t1, vt0 WHERE (((((0.7724957786247737)AND(rt0.c0 COLLATE NOCASE)))OR((((rt0.c1))==((t1.c43)))))) ORDER BY (((- (t1.c43))) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.7724957786247737)AND(rt0.c0 COLLATE NOCASE)))OR((((rt0.c1))==((t1.c43)))))) IS TRUE)  as count FROM rt0, vt1, t1, vt0 ORDER BY (((- (t1.c43))) IS FALSE) ASC  NULLS LAST);
SELECT * FROM rt0, vt1, t1, vt0 WHERE (((((0.7724957786247737)AND(rt0.c0 COLLATE NOCASE)))OR((((rt0.c1))==((t1.c43)))))) ORDER BY (((- (t1.c43))) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.7724957786247737)AND(rt0.c0 COLLATE NOCASE)))OR((((rt0.c1))==((t1.c43)))))) IS TRUE)  as count FROM rt0, vt1, t1, vt0 ORDER BY (((- (t1.c43))) IS FALSE) ASC  NULLS LAST);
SELECT * FROM rt0, vt1, t1, vt0 WHERE (((((0.7724957786247737)AND(rt0.c0 COLLATE NOCASE)))OR((((rt0.c1))==((t1.c43)))))) ORDER BY (((- (t1.c43))) IS FALSE) ASC  NULLS LAST;
SELECT * FROM t1, vt1, vt0 WHERE ((((- (t1.c0)))<=(((vt0.c0) BETWEEN (vt1.c0) AND (NULL)))));
SELECT SUM(count) FROM (SELECT (((((- (t1.c0)))<=(((vt0.c0) BETWEEN (vt1.c0) AND (NULL))))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT * FROM t1, vt1, vt0 WHERE ((((- (t1.c0)))<=(((vt0.c0) BETWEEN (vt1.c0) AND (NULL)))));
SELECT SUM(count) FROM (SELECT (((((- (t1.c0)))<=(((vt0.c0) BETWEEN (vt1.c0) AND (NULL))))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT * FROM t1, vt1, vt0 WHERE ((((- (t1.c0)))<=(((vt0.c0) BETWEEN (vt1.c0) AND (NULL)))));
SELECT COUNT(*) FROM t1, vt0, rt0, vt1 WHERE (COALESCE(vt1.c0, vt1.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(vt1.c0, vt1.c0) COLLATE BINARY) IS TRUE)  as count FROM t1, vt0, rt0 NOT INDEXED, vt1);
SELECT COUNT(*) FROM t1, vt0, rt0, vt1 WHERE (COALESCE(vt1.c0, vt1.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(vt1.c0, vt1.c0) COLLATE BINARY) IS TRUE)  as count FROM t1, vt0, rt0 NOT INDEXED, vt1);
SELECT COUNT(*) FROM t1, vt0, rt0, vt1 WHERE (COALESCE(vt1.c0, vt1.c0) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (CAST((~ ('')) AS REAL)) ORDER BY TRIM(DISTINCT (((t1.c34, '1064525924', t1.c1)) NOT BETWEEN ((t1.c34, t1.c34, t1.c1)) AND ((t1.c34, t1.c1, t1.c43))), t1.c43 COLLATE NOCASE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((~ ('')) AS REAL)) IS TRUE)  as count FROM vt0, t1 ORDER BY TRIM(DISTINCT (((t1.c34, '1064525924', t1.c1)) NOT BETWEEN ((t1.c34, t1.c34, t1.c1)) AND ((t1.c34, t1.c1, t1.c43))), t1.c43 COLLATE NOCASE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (CAST((~ ('')) AS REAL)) ORDER BY TRIM(DISTINCT (((t1.c34, '1064525924', t1.c1)) NOT BETWEEN ((t1.c34, t1.c34, t1.c1)) AND ((t1.c34, t1.c1, t1.c43))), t1.c43 COLLATE NOCASE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((~ ('')) AS REAL)) IS TRUE)  as count FROM vt0, t1 ORDER BY TRIM(DISTINCT (((t1.c34, '1064525924', t1.c1)) NOT BETWEEN ((t1.c34, t1.c34, t1.c1)) AND ((t1.c34, t1.c1, t1.c43))), t1.c43 COLLATE NOCASE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (CAST((~ ('')) AS REAL)) ORDER BY TRIM(DISTINCT (((t1.c34, '1064525924', t1.c1)) NOT BETWEEN ((t1.c34, t1.c34, t1.c1)) AND ((t1.c34, t1.c1, t1.c43))), t1.c43 COLLATE NOCASE) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (0.504975510513661) ORDER BY CAST((((rt0.c0))>=((vt1.c0))) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((0.504975510513661) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY CAST((((rt0.c0))>=((vt1.c0))) AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (0.504975510513661) ORDER BY CAST((((rt0.c0))>=((vt1.c0))) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((0.504975510513661) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY CAST((((rt0.c0))>=((vt1.c0))) AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (0.504975510513661) ORDER BY CAST((((rt0.c0))>=((vt1.c0))) AS INTEGER) ASC;
SELECT COUNT(*) FROM rt0, vt0, t1, vt1 WHERE (TRIM(DISTINCT (~ (t1.c43))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (~ (t1.c43)))) IS TRUE)  as count FROM rt0, vt0, t1, vt1);
SELECT COUNT(*) FROM rt0, vt0, t1, vt1 WHERE (TRIM(DISTINCT (~ (t1.c43))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (~ (t1.c43)))) IS TRUE)  as count FROM rt0, vt0, t1, vt1);
SELECT COUNT(*) FROM rt0, vt0, t1, vt1 WHERE (TRIM(DISTINCT (~ (t1.c43))));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT * FROM rt0 WHERE (((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))), ((rt0.c2)>>(rt0.c2)), ((rt0.c1) IS FALSE), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END, CASE WHEN rt0.c2 THEN rt0.c0 WHEN 0.7256630174298403 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END))!=((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)), CAST(x'048d' AS BLOB), (~ (rt0.c1)), (((rt0.c2))>((rt0.c1))), ((rt0.c1)IS(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))), ((rt0.c2)>>(rt0.c2)), ((rt0.c1) IS FALSE), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END, CASE WHEN rt0.c2 THEN rt0.c0 WHEN 0.7256630174298403 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END))<>((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)), CAST(x'048d' AS BLOB), (~ (rt0.c1)), (((rt0.c2))>((rt0.c1))), ((rt0.c1)IS(rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))), ((rt0.c2)>>(rt0.c2)), ((rt0.c1) IS FALSE), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END, CASE WHEN rt0.c2 THEN rt0.c0 WHEN 0.7256630174298403 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END))!=((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)), CAST(x'048d' AS BLOB), (~ (rt0.c1)), (((rt0.c2))>((rt0.c1))), ((rt0.c1)IS(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))), ((rt0.c2)>>(rt0.c2)), ((rt0.c1) IS FALSE), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END, CASE WHEN rt0.c2 THEN rt0.c0 WHEN 0.7256630174298403 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END))<>((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)), CAST(x'048d' AS BLOB), (~ (rt0.c1)), (((rt0.c2))>((rt0.c1))), ((rt0.c1)IS(rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))), ((rt0.c2)>>(rt0.c2)), ((rt0.c1) IS FALSE), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END, CASE WHEN rt0.c2 THEN rt0.c0 WHEN 0.7256630174298403 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END))!=((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)), CAST(x'048d' AS BLOB), (~ (rt0.c1)), (((rt0.c2))>((rt0.c1))), ((rt0.c1)IS(rt0.c2))))));
SELECT ALL * FROM rt0, t1 LEFT OUTER JOIN vt0 ON ((COALESCE(rt0.c1, vt1.c0))||(vt0.c0)) LEFT OUTER JOIN vt1 ON NULL WHERE ((rt0.c0 IN ())) ORDER BY ((((vt1.c0) NOTNULL)) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ())) IS TRUE)  as count FROM rt0, t1 LEFT OUTER JOIN vt0 ON ((COALESCE(rt0.c1, vt1.c0))||(vt0.c0)) LEFT OUTER JOIN vt1 ON NULL ORDER BY ((((vt1.c0) NOTNULL)) IS FALSE) DESC);
SELECT ALL * FROM rt0, t1 LEFT OUTER JOIN vt0 ON ((COALESCE(rt0.c1, vt1.c0))||(vt0.c0)) LEFT OUTER JOIN vt1 ON NULL WHERE ((rt0.c0 IN ())) ORDER BY ((((vt1.c0) NOTNULL)) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ())) IS TRUE)  as count FROM rt0, t1 LEFT OUTER JOIN vt0 ON ((COALESCE(rt0.c1, vt1.c0))||(vt0.c0)) LEFT OUTER JOIN vt1 ON NULL ORDER BY ((((vt1.c0) NOTNULL)) IS FALSE) DESC);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (CAST((~ (t1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((~ (t1.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (CAST((~ (t1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((~ (t1.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (CAST((~ (t1.c0)) AS BLOB));
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (LENGTH('\n7tuj'));
SELECT SUM(count) FROM (SELECT ((LENGTH('\n7tuj')) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (LENGTH('\n7tuj'));
SELECT SUM(count) FROM (SELECT ((LENGTH('\n7tuj')) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (LENGTH('\n7tuj'));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))LIKE((NOT (rt0.c1))))) ORDER BY ((((((((x'f477')OR(CASE WHEN 1.507524399E9 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN -1953450277 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)))OR((rt0.c2 IN ()))))OR(((((vt0.c0)OR(rt0.c1)))AND(rt0.c1)))))OR((((rt0.c0, vt0.c0, vt0.c0, vt0.c0, rt0.c2))>=((rt0.c0, vt0.c0, rt0.c1, rt0.c0, rt0.c1))))) ASC  NULLS FIRST, CAST(((rt0.c1)+(vt0.c0)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))LIKE((NOT (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((x'f477')OR(CASE WHEN 1.507524399E9 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN -1953450277 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)))OR((rt0.c2 IN ()))))OR(((((vt0.c0)OR(rt0.c1)))AND(rt0.c1)))))OR((((rt0.c0, vt0.c0, vt0.c0, vt0.c0, rt0.c2))>=((rt0.c0, vt0.c0, rt0.c1, rt0.c0, rt0.c1))))) ASC  NULLS FIRST, CAST(((rt0.c1)+(vt0.c0)) AS INTEGER) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))LIKE((NOT (rt0.c1))))) ORDER BY ((((((((x'f477')OR(CASE WHEN 1.507524399E9 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN -1953450277 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)))OR((rt0.c2 IN ()))))OR(((((vt0.c0)OR(rt0.c1)))AND(rt0.c1)))))OR((((rt0.c0, vt0.c0, vt0.c0, vt0.c0, rt0.c2))>=((rt0.c0, vt0.c0, rt0.c1, rt0.c0, rt0.c1))))) ASC  NULLS FIRST, CAST(((rt0.c1)+(vt0.c0)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))LIKE((NOT (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((x'f477')OR(CASE WHEN 1.507524399E9 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN -1953450277 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)))OR((rt0.c2 IN ()))))OR(((((vt0.c0)OR(rt0.c1)))AND(rt0.c1)))))OR((((rt0.c0, vt0.c0, vt0.c0, vt0.c0, rt0.c2))>=((rt0.c0, vt0.c0, rt0.c1, rt0.c0, rt0.c1))))) ASC  NULLS FIRST, CAST(((rt0.c1)+(vt0.c0)) AS INTEGER) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))LIKE((NOT (rt0.c1))))) ORDER BY ((((((((x'f477')OR(CASE WHEN 1.507524399E9 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN -1953450277 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)))OR((rt0.c2 IN ()))))OR(((((vt0.c0)OR(rt0.c1)))AND(rt0.c1)))))OR((((rt0.c0, vt0.c0, vt0.c0, vt0.c0, rt0.c2))>=((rt0.c0, vt0.c0, rt0.c1, rt0.c0, rt0.c1))))) ASC  NULLS FIRST, CAST(((rt0.c1)+(vt0.c0)) AS INTEGER) ASC;
SELECT * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM rt0, vt0 CROSS JOIN t1 ON (((t1.c43 IN ()))==('1419982427')) WHERE (ABS(DISTINCT t1.c43 COLLATE BINARY)) ORDER BY ((((rt0.c0) NOT BETWEEN (t1.c0) AND (t1.c34))) BETWEEN (vt0.c0) AND ((+ (t1.c43))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT t1.c43 COLLATE BINARY)) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN t1 ON (((t1.c43 IN ()))=('1419982427')) ORDER BY ((((rt0.c0) NOT BETWEEN (t1.c0) AND (t1.c34))) BETWEEN (vt0.c0) AND ((+ (t1.c43))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 CROSS JOIN t1 ON (((t1.c43 IN ()))==('1419982427')) WHERE (ABS(DISTINCT t1.c43 COLLATE BINARY)) ORDER BY ((((rt0.c0) NOT BETWEEN (t1.c0) AND (t1.c34))) BETWEEN (vt0.c0) AND ((+ (t1.c43))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT t1.c43 COLLATE BINARY)) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN t1 ON (((t1.c43 IN ()))=('1419982427')) ORDER BY ((((rt0.c0) NOT BETWEEN (t1.c0) AND (t1.c34))) BETWEEN (vt0.c0) AND ((+ (t1.c43))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 CROSS JOIN t1 ON (((t1.c43 IN ()))==('1419982427')) WHERE (ABS(DISTINCT t1.c43 COLLATE BINARY)) ORDER BY ((((rt0.c0) NOT BETWEEN (t1.c0) AND (t1.c34))) BETWEEN (vt0.c0) AND ((+ (t1.c43))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t1 NATURAL JOIN vt1 WHERE ((((t1.c0)) NOT BETWEEN ((((vt1.c0) NOTNULL))) AND ((((vt1.c0)LIKE(t1.c34))))));
SELECT SUM(count) FROM (SELECT (((((t1.c0)) NOT BETWEEN ((((vt1.c0) NOTNULL))) AND ((((vt1.c0)LIKE(t1.c34)))))) IS TRUE)  as count FROM rt0, t1 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM rt0, t1 NATURAL JOIN vt1 WHERE ((((t1.c0)) NOT BETWEEN ((((vt1.c0) NOTNULL))) AND ((((vt1.c0)LIKE(t1.c34))))));
SELECT SUM(count) FROM (SELECT (((((t1.c0)) NOT BETWEEN ((((vt1.c0) NOTNULL))) AND ((((vt1.c0)LIKE(t1.c34)))))) IS TRUE)  as count FROM rt0, t1 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM rt0, t1 NATURAL JOIN vt1 WHERE ((((t1.c0)) NOT BETWEEN ((((vt1.c0) NOTNULL))) AND ((((vt1.c0)LIKE(t1.c34))))));
SELECT * FROM rt0 WHERE (((rt0.c0)<<(CAST(0.9766575755504151 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)<<(CAST(0.9766575755504151 AS NUMERIC)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c0)<<(CAST(0.9766575755504151 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)<<(CAST(0.9766575755504151 AS NUMERIC)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c0)<<(CAST(0.9766575755504151 AS NUMERIC))));
SELECT COUNT(*) FROM vt0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LAST_INSERT_ROWID());
SELECT ALL COUNT(*) FROM rt0 WHERE (TRIM((((rt0.c0, 0.4196570364919797, rt0.c2))!=((rt0.c1, rt0.c0, rt0.c1))))) ORDER BY NULLIF(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c2)>(rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((TRIM((((rt0.c0, 0.4196570364919797, rt0.c2))<>((rt0.c1, rt0.c0, rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY NULLIF(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c2)>(rt0.c0))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (TRIM((((rt0.c0, 0.4196570364919797, rt0.c2))!=((rt0.c1, rt0.c0, rt0.c1))))) ORDER BY NULLIF(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c2)>(rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((TRIM((((rt0.c0, 0.4196570364919797, rt0.c2))<>((rt0.c1, rt0.c0, rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY NULLIF(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c2)>(rt0.c0))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (TRIM((((rt0.c0, 0.4196570364919797, rt0.c2))!=((rt0.c1, rt0.c0, rt0.c1))))) ORDER BY NULLIF(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c2)>(rt0.c0))) DESC;
SELECT COUNT(*) FROM rt0, vt1, t1 WHERE (CAST(t1.c0 COLLATE NOCASE AS INTEGER)) ORDER BY ((-5.30631695E8) NOT NULL), (((+ (NULL))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(t1.c0 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM rt0, vt1, t1 ORDER BY ((-5.30631695E8) NOT NULL), (((+ (NULL))) NOT NULL)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1, t1 WHERE (CAST(t1.c0 COLLATE NOCASE AS INTEGER)) ORDER BY ((-5.30631695E8) NOT NULL), (((+ (NULL))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(t1.c0 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM rt0, vt1, t1 ORDER BY ((-5.30631695E8) NOT NULL), (((+ (NULL))) NOT NULL)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1, t1 WHERE (CAST(t1.c0 COLLATE NOCASE AS INTEGER)) ORDER BY ((-5.30631695E8) NOT NULL), (((+ (NULL))) NOT NULL)  NULLS FIRST;
SELECT ALL * FROM vt1 CROSS JOIN t1 ON ((((t1.c34)>=(vt1.c0)))IS NOT(CASE WHEN rt0.c1 THEN t1.c0 ELSE 'Uä' END)) FULL OUTER JOIN vt0 ON 0.8931389346075028 INNER JOIN rt0 ON CAST(((rt0.c1)GLOB(t1.c43)) AS NUMERIC) WHERE ((+ ((((t1.c34, vt1.c0, t1.c34)) NOT BETWEEN ((t1.c34, t1.c43, rt0.c1)) AND ((rt0.c0, rt0.c1, t1.c34))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((t1.c34, vt1.c0, t1.c34)) NOT BETWEEN ((t1.c34, t1.c43, rt0.c1)) AND ((rt0.c0, rt0.c1, t1.c34)))))) IS TRUE)  as count FROM vt1 CROSS JOIN t1 ON ((((t1.c34)>=(vt1.c0)))IS NOT(CASE WHEN rt0.c1 THEN t1.c0 ELSE 'Uä' END)) FULL OUTER JOIN vt0 ON 0.8931389346075028 INNER JOIN rt0 ON CAST(((rt0.c1)GLOB(t1.c43)) AS NUMERIC));
SELECT ALL * FROM vt1 CROSS JOIN t1 ON ((((t1.c34)>=(vt1.c0)))IS NOT(CASE WHEN rt0.c1 THEN t1.c0 ELSE 'Uä' END)) FULL OUTER JOIN vt0 ON 0.8931389346075028 INNER JOIN rt0 ON CAST(((rt0.c1)GLOB(t1.c43)) AS NUMERIC) WHERE ((+ ((((t1.c34, vt1.c0, t1.c34)) NOT BETWEEN ((t1.c34, t1.c43, rt0.c1)) AND ((rt0.c0, rt0.c1, t1.c34))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((t1.c34, vt1.c0, t1.c34)) NOT BETWEEN ((t1.c34, t1.c43, rt0.c1)) AND ((rt0.c0, rt0.c1, t1.c34)))))) IS TRUE)  as count FROM vt1 CROSS JOIN t1 ON ((((t1.c34)>=(vt1.c0)))IS NOT(CASE WHEN rt0.c1 THEN t1.c0 ELSE 'Uä' END)) FULL OUTER JOIN vt0 ON 0.8931389346075028 INNER JOIN rt0 ON CAST(((rt0.c1)GLOB(t1.c43)) AS NUMERIC));
SELECT COUNT(*) FROM vt1, rt0, t1, vt0 WHERE (((('.l', rt0.c2, rt0.c2)) NOT BETWEEN (((NOT (t1.c34)), (+ (rt0.c2)), ((vt0.c0)IS NOT(NULL)))) AND ((CASE WHEN rt0.c0 THEN rt0.c0 WHEN '0.2726291618627643' THEN t1.c0 WHEN '-777193327' THEN vt1.c0 ELSE t1.c1 END, t1.c34, CAST(t1.c43 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ((((('.l', rt0.c2, rt0.c2)) NOT BETWEEN (((NOT (t1.c34)), (+ (rt0.c2)), ((vt0.c0)IS NOT(NULL)))) AND ((CASE WHEN rt0.c0 THEN rt0.c0 WHEN '0.2726291618627643' THEN t1.c0 WHEN '-777193327' THEN vt1.c0 ELSE t1.c1 END, t1.c34, CAST(t1.c43 AS TEXT))))) IS TRUE)  as count FROM vt1, rt0, t1, vt0);
SELECT COUNT(*) FROM vt1, rt0, t1, vt0 WHERE (((('.l', rt0.c2, rt0.c2)) NOT BETWEEN (((NOT (t1.c34)), (+ (rt0.c2)), ((vt0.c0)IS NOT(NULL)))) AND ((CASE WHEN rt0.c0 THEN rt0.c0 WHEN '0.2726291618627643' THEN t1.c0 WHEN '-777193327' THEN vt1.c0 ELSE t1.c1 END, t1.c34, CAST(t1.c43 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ((((('.l', rt0.c2, rt0.c2)) NOT BETWEEN (((NOT (t1.c34)), (+ (rt0.c2)), ((vt0.c0)IS NOT(NULL)))) AND ((CASE WHEN rt0.c0 THEN rt0.c0 WHEN '0.2726291618627643' THEN t1.c0 WHEN '-777193327' THEN vt1.c0 ELSE t1.c1 END, t1.c34, CAST(t1.c43 AS TEXT))))) IS TRUE)  as count FROM vt1, rt0, t1, vt0);
SELECT COUNT(*) FROM vt1, rt0, t1, vt0 WHERE (((('.l', rt0.c2, rt0.c2)) NOT BETWEEN (((NOT (t1.c34)), (+ (rt0.c2)), ((vt0.c0)IS NOT(NULL)))) AND ((CASE WHEN rt0.c0 THEN rt0.c0 WHEN '0.2726291618627643' THEN t1.c0 WHEN '-777193327' THEN vt1.c0 ELSE t1.c1 END, t1.c34, CAST(t1.c43 AS TEXT)))));
SELECT * FROM vt1, vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN (NOT (vt1.c0)) THEN '0.2487854257101263' ELSE vt1.c0 END) ORDER BY (((+ (vt0.c0)))+(NULLIF(vt1.c0, vt0.c0))), ((CAST(vt1.c0 AS BLOB))||((NOT ('-1377298200')))) ASC  NULLS FIRST, (vt0.c0 IN ()) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN (NOT (vt1.c0)) THEN '0.2487854257101263' ELSE vt1.c0 END) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((+ (vt0.c0)))+(NULLIF(vt1.c0, vt0.c0))), ((CAST(vt1.c0 AS BLOB))||((NOT ('-1377298200')))) ASC  NULLS FIRST, (vt0.c0 IN ()) COLLATE BINARY ASC);
SELECT * FROM vt1, vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN (NOT (vt1.c0)) THEN '0.2487854257101263' ELSE vt1.c0 END) ORDER BY (((+ (vt0.c0)))+(NULLIF(vt1.c0, vt0.c0))), ((CAST(vt1.c0 AS BLOB))||((NOT ('-1377298200')))) ASC  NULLS FIRST, (vt0.c0 IN ()) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN (NOT (vt1.c0)) THEN '0.2487854257101263' ELSE vt1.c0 END) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((+ (vt0.c0)))+(NULLIF(vt1.c0, vt0.c0))), ((CAST(vt1.c0 AS BLOB))||((NOT ('-1377298200')))) ASC  NULLS FIRST, (vt0.c0 IN ()) COLLATE BINARY ASC);
SELECT * FROM vt1, vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN (NOT (vt1.c0)) THEN '0.2487854257101263' ELSE vt1.c0 END) ORDER BY (((+ (vt0.c0)))+(NULLIF(vt1.c0, vt0.c0))), ((CAST(vt1.c0 AS BLOB))||((NOT ('-1377298200')))) ASC  NULLS FIRST, (vt0.c0 IN ()) COLLATE BINARY ASC;
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON CASE (rt0.c1 IN ())  WHEN SUBSTR(rt0.c1, t1.c43) THEN (('8h_)')!=(t1.c43)) END CROSS JOIN rt0 ON CAST(vt1.c0 AS TEXT) CROSS JOIN t1 ON (((CAST(vt1.c0 AS INTEGER)))<=((json_insert(rt0.c1, rt0.c2, rt0.c0)))) WHERE ((((NULL, CASE WHEN rt0.c2 THEN t1.c34 ELSE NULL END, ((((NULL)OR(t1.c34)))OR(t1.c43))))<((((((t1.c1)AND(rt0.c1)))AND(t1.c0)), ((((vt0.c0)OR(t1.c34)))OR(rt0.c1)), (~ (t1.c34)))))) ORDER BY (((- (rt0.c0)))!=((vt1.c0 IN ()))), CASE LIKELY(DISTINCT vt1.c0)  WHEN ((rt0.c1) BETWEEN (t1.c1) AND (rt0.c2)) THEN (- (vt0.c0)) WHEN DATETIME(t1.c43, t1.c34, t1.c0) THEN CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c0 THEN t1.c34 WHEN NULL THEN rt0.c2 END WHEN '-9667515' COLLATE NOCASE THEN (((rt0.c1))<=((t1.c34))) ELSE DATETIME(rt0.c0, t1.c34, t1.c0, vt0.c0, vt0.c0) END DESC, (((((((((NOT (t1.c1)))OR((((t1.c43, rt0.c2, t1.c34)) NOT BETWEEN ((rt0.c1, vt1.c0, rt0.c2)) AND ((vt1.c0, vt0.c0, t1.c1))))))OR(CAST('[A' AS REAL))))AND(((t1.c34)=(vt1.c0)))))OR(CAST(x'411a' AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NULL, CASE WHEN rt0.c2 THEN t1.c34 ELSE NULL END, ((((NULL)OR(t1.c34)))OR(t1.c43))))<((((((t1.c1)AND(rt0.c1)))AND(t1.c0)), ((((vt0.c0)OR(t1.c34)))OR(rt0.c1)), (~ (t1.c34)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON CASE (rt0.c1 IN ())  WHEN SUBSTR(rt0.c1, t1.c43) THEN (('8h_)')<>(t1.c43)) END CROSS JOIN rt0 ON CAST(vt1.c0 AS TEXT) CROSS JOIN t1 ON (((CAST(vt1.c0 AS INTEGER)))<=((json_insert(rt0.c1, rt0.c2, rt0.c0)))) ORDER BY (((- (rt0.c0)))<>((vt1.c0 IN ()))), CASE LIKELY(DISTINCT vt1.c0)  WHEN ((rt0.c1) BETWEEN (t1.c1) AND (rt0.c2)) THEN (- (vt0.c0)) WHEN DATETIME(t1.c43, t1.c34, t1.c0) THEN CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c0 THEN t1.c34 WHEN NULL THEN rt0.c2 END WHEN '-9667515' COLLATE NOCASE THEN (((rt0.c1))<=((t1.c34))) ELSE DATETIME(rt0.c0, t1.c34, t1.c0, vt0.c0, vt0.c0) END DESC, (((((((((NOT (t1.c1)))OR((((t1.c43, rt0.c2, t1.c34)) NOT BETWEEN ((rt0.c1, vt1.c0, rt0.c2)) AND ((vt1.c0, vt0.c0, t1.c1))))))OR(CAST('[A' AS REAL))))AND(((t1.c34)=(vt1.c0)))))OR(CAST(x'411a' AS TEXT)))  NULLS LAST);
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON CASE (rt0.c1 IN ())  WHEN SUBSTR(rt0.c1, t1.c43) THEN (('8h_)')!=(t1.c43)) END CROSS JOIN rt0 ON CAST(vt1.c0 AS TEXT) CROSS JOIN t1 ON (((CAST(vt1.c0 AS INTEGER)))<=((json_insert(rt0.c1, rt0.c2, rt0.c0)))) WHERE ((((NULL, CASE WHEN rt0.c2 THEN t1.c34 ELSE NULL END, ((((NULL)OR(t1.c34)))OR(t1.c43))))<((((((t1.c1)AND(rt0.c1)))AND(t1.c0)), ((((vt0.c0)OR(t1.c34)))OR(rt0.c1)), (~ (t1.c34)))))) ORDER BY (((- (rt0.c0)))!=((vt1.c0 IN ()))), CASE LIKELY(DISTINCT vt1.c0)  WHEN ((rt0.c1) BETWEEN (t1.c1) AND (rt0.c2)) THEN (- (vt0.c0)) WHEN DATETIME(t1.c43, t1.c34, t1.c0) THEN CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c0 THEN t1.c34 WHEN NULL THEN rt0.c2 END WHEN '-9667515' COLLATE NOCASE THEN (((rt0.c1))<=((t1.c34))) ELSE DATETIME(rt0.c0, t1.c34, t1.c0, vt0.c0, vt0.c0) END DESC, (((((((((NOT (t1.c1)))OR((((t1.c43, rt0.c2, t1.c34)) NOT BETWEEN ((rt0.c1, vt1.c0, rt0.c2)) AND ((vt1.c0, vt0.c0, t1.c1))))))OR(CAST('[A' AS REAL))))AND(((t1.c34)=(vt1.c0)))))OR(CAST(x'411a' AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NULL, CASE WHEN rt0.c2 THEN t1.c34 ELSE NULL END, ((((NULL)OR(t1.c34)))OR(t1.c43))))<((((((t1.c1)AND(rt0.c1)))AND(t1.c0)), ((((vt0.c0)OR(t1.c34)))OR(rt0.c1)), (~ (t1.c34)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON CASE (rt0.c1 IN ())  WHEN SUBSTR(rt0.c1, t1.c43) THEN (('8h_)')<>(t1.c43)) END CROSS JOIN rt0 ON CAST(vt1.c0 AS TEXT) CROSS JOIN t1 ON (((CAST(vt1.c0 AS INTEGER)))<=((json_insert(rt0.c1, rt0.c2, rt0.c0)))) ORDER BY (((- (rt0.c0)))<>((vt1.c0 IN ()))), CASE LIKELY(DISTINCT vt1.c0)  WHEN ((rt0.c1) BETWEEN (t1.c1) AND (rt0.c2)) THEN (- (vt0.c0)) WHEN DATETIME(t1.c43, t1.c34, t1.c0) THEN CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c0 THEN t1.c34 WHEN NULL THEN rt0.c2 END WHEN '-9667515' COLLATE NOCASE THEN (((rt0.c1))<=((t1.c34))) ELSE DATETIME(rt0.c0, t1.c34, t1.c0, vt0.c0, vt0.c0) END DESC, (((((((((NOT (t1.c1)))OR((((t1.c43, rt0.c2, t1.c34)) NOT BETWEEN ((rt0.c1, vt1.c0, rt0.c2)) AND ((vt1.c0, vt0.c0, t1.c1))))))OR(CAST('[A' AS REAL))))AND(((t1.c34)=(vt1.c0)))))OR(CAST(x'411a' AS TEXT)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1, vt1, rt0 WHERE ((NOT (t1.c1)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (t1.c1))) IS TRUE)  as count FROM vt0, t1, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, t1, vt1, rt0 WHERE ((NOT (t1.c1)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (t1.c1))) IS TRUE)  as count FROM vt0, t1, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, t1, vt1, rt0 WHERE ((NOT (t1.c1)));
SELECT ALL * FROM vt0, rt0 WHERE ((NOT (3.35829004E8))) ORDER BY CAST(((((rt0.c0)AND('0.48416373082501607')))OR(rt0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((NOT (3.35829004E8))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((((rt0.c0)AND('0.48416373082501607')))OR(rt0.c0)) AS REAL));
SELECT ALL * FROM vt0, rt0 WHERE ((NOT (3.35829004E8))) ORDER BY CAST(((((rt0.c0)AND('0.48416373082501607')))OR(rt0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((NOT (3.35829004E8))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((((rt0.c0)AND('0.48416373082501607')))OR(rt0.c0)) AS REAL));
SELECT ALL * FROM vt0, rt0 WHERE ((NOT (3.35829004E8))) ORDER BY CAST(((((rt0.c0)AND('0.48416373082501607')))OR(rt0.c0)) AS REAL);
SELECT * FROM rt0, t1 WHERE (CASE WHEN (((rt0.c2)) NOT BETWEEN ((t1.c0)) AND ((t1.c43))) THEN ((rt0.c2) NOT BETWEEN (t1.c0) AND (t1.c1)) ELSE IFNULL(DISTINCT t1.c43, rt0.c2) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c2)) NOT BETWEEN ((t1.c0)) AND ((t1.c43))) THEN ((rt0.c2) NOT BETWEEN (t1.c0) AND (t1.c1)) ELSE IFNULL(DISTINCT t1.c43, rt0.c2) END) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE (CASE WHEN (((rt0.c2)) NOT BETWEEN ((t1.c0)) AND ((t1.c43))) THEN ((rt0.c2) NOT BETWEEN (t1.c0) AND (t1.c1)) ELSE IFNULL(DISTINCT t1.c43, rt0.c2) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c2)) NOT BETWEEN ((t1.c0)) AND ((t1.c43))) THEN ((rt0.c2) NOT BETWEEN (t1.c0) AND (t1.c1)) ELSE IFNULL(DISTINCT t1.c43, rt0.c2) END) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE (CASE WHEN (((rt0.c2)) NOT BETWEEN ((t1.c0)) AND ((t1.c43))) THEN ((rt0.c2) NOT BETWEEN (t1.c0) AND (t1.c1)) ELSE IFNULL(DISTINCT t1.c43, rt0.c2) END);
SELECT COUNT(*) FROM rt0, vt0 INNER JOIN t1 ON t1.c43 WHERE (((rt0.c1)OR(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN t1 ON t1.c43);
SELECT COUNT(*) FROM rt0, vt0 INNER JOIN t1 ON t1.c43 WHERE (((rt0.c1)OR(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN t1 ON t1.c43);
SELECT COUNT(*) FROM rt0, vt0 INNER JOIN t1 ON t1.c43 WHERE (((rt0.c1)OR(vt0.c0 COLLATE BINARY)));
SELECT ALL * FROM rt0 INNER JOIN vt1 ON (NOT (vt1.c0)) CROSS JOIN vt0 ON ((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c1)))OR(vt1.c0 COLLATE RTRIM)))AND((NOT (rt0.c1)))) WHERE (((((((((((rt0.c0)AND(rt0.c1)))AND(vt0.c0)))AND(rt0.c1)))OR(vt1.c0))) BETWEEN ((vt1.c0 IN (rt0.c0))) AND (((rt0.c2) BETWEEN (0.46995695116226543) AND (vt1.c0))))) ORDER BY ((((((((((rt0.c1)AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(-2.111811024E9))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)AND(rt0.c1)))AND(vt0.c0)))AND(rt0.c1)))OR(vt1.c0))) BETWEEN ((vt1.c0 IN (rt0.c0))) AND (((rt0.c2) BETWEEN (0.46995695116226543) AND (vt1.c0))))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON (NOT (vt1.c0)) CROSS JOIN vt0 ON ((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c1)))OR(vt1.c0 COLLATE RTRIM)))AND((NOT (rt0.c1)))) ORDER BY ((((((((((rt0.c1)AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(-2.111811024E9))) NOT NULL) ASC  NULLS LAST);
SELECT ALL * FROM rt0 INNER JOIN vt1 ON (NOT (vt1.c0)) CROSS JOIN vt0 ON ((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c1)))OR(vt1.c0 COLLATE RTRIM)))AND((NOT (rt0.c1)))) WHERE (((((((((((rt0.c0)AND(rt0.c1)))AND(vt0.c0)))AND(rt0.c1)))OR(vt1.c0))) BETWEEN ((vt1.c0 IN (rt0.c0))) AND (((rt0.c2) BETWEEN (0.46995695116226543) AND (vt1.c0))))) ORDER BY ((((((((((rt0.c1)AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(-2.111811024E9))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)AND(rt0.c1)))AND(vt0.c0)))AND(rt0.c1)))OR(vt1.c0))) BETWEEN ((vt1.c0 IN (rt0.c0))) AND (((rt0.c2) BETWEEN (0.46995695116226543) AND (vt1.c0))))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON (NOT (vt1.c0)) CROSS JOIN vt0 ON ((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c1)))OR(vt1.c0 COLLATE RTRIM)))AND((NOT (rt0.c1)))) ORDER BY ((((((((((rt0.c1)AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(-2.111811024E9))) NOT NULL) ASC  NULLS LAST);
SELECT ALL * FROM rt0 INNER JOIN vt1 ON (NOT (vt1.c0)) CROSS JOIN vt0 ON ((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c1)))OR(vt1.c0 COLLATE RTRIM)))AND((NOT (rt0.c1)))) WHERE (((((((((((rt0.c0)AND(rt0.c1)))AND(vt0.c0)))AND(rt0.c1)))OR(vt1.c0))) BETWEEN ((vt1.c0 IN (rt0.c0))) AND (((rt0.c2) BETWEEN (0.46995695116226543) AND (vt1.c0))))) ORDER BY ((((((((((rt0.c1)AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(-2.111811024E9))) NOT NULL) ASC  NULLS LAST;
SELECT ALL * FROM vt0, vt1, rt0, t1 WHERE ((- (vt0.c0)) COLLATE NOCASE) ORDER BY ((((t1.c1)OR(CASE WHEN '1092576549' THEN rt0.c0 ELSE t1.c1 END)))OR(TRIM(t1.c0, rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1, rt0, t1 ORDER BY ((((t1.c1)OR(CASE WHEN '1092576549' THEN rt0.c0 ELSE t1.c1 END)))OR(TRIM(t1.c0, rt0.c2))));
SELECT ALL * FROM vt0, vt1, rt0, t1 WHERE ((- (vt0.c0)) COLLATE NOCASE) ORDER BY ((((t1.c1)OR(CASE WHEN '1092576549' THEN rt0.c0 ELSE t1.c1 END)))OR(TRIM(t1.c0, rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1, rt0, t1 ORDER BY ((((t1.c1)OR(CASE WHEN '1092576549' THEN rt0.c0 ELSE t1.c1 END)))OR(TRIM(t1.c0, rt0.c2))));
SELECT ALL * FROM vt0, vt1, rt0, t1 WHERE ((- (vt0.c0)) COLLATE NOCASE) ORDER BY ((((t1.c1)OR(CASE WHEN '1092576549' THEN rt0.c0 ELSE t1.c1 END)))OR(TRIM(t1.c0, rt0.c2)));
SELECT * FROM vt0 WHERE ((((((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS FALSE)) ORDER BY ((((0.44712109978086567) NOT NULL))<=(((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))), ((((vt0.c0)%(vt0.c0))) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (x''))  NULLS LAST, vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY ((((0.44712109978086567) NOT NULL))<=(((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))), ((((vt0.c0)%(vt0.c0))) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (x''))  NULLS LAST, vt0.c0 ASC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS FALSE)) ORDER BY ((((0.44712109978086567) NOT NULL))<=(((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))), ((((vt0.c0)%(vt0.c0))) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (x''))  NULLS LAST, vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY ((((0.44712109978086567) NOT NULL))<=(((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))), ((((vt0.c0)%(vt0.c0))) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (x''))  NULLS LAST, vt0.c0 ASC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS FALSE)) ORDER BY ((((0.44712109978086567) NOT NULL))<=(((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))), ((((vt0.c0)%(vt0.c0))) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (x''))  NULLS LAST, vt0.c0 ASC  NULLS LAST;
SELECT * FROM vt1, vt0, t1, rt0 WHERE (((((x'') NOT BETWEEN ('2021102374') AND (rt0.c0))) NOT BETWEEN (((((rt0.c0)OR(rt0.c1)))AND(NULL))) AND (((NULL) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'') NOT BETWEEN ('2021102374') AND (rt0.c0))) NOT BETWEEN (((((rt0.c0)OR(rt0.c1)))AND(NULL))) AND (((NULL) IS FALSE)))) IS TRUE)  as count FROM vt1, vt0, t1, rt0);
SELECT * FROM vt1, vt0, t1, rt0 WHERE (((((x'') NOT BETWEEN ('2021102374') AND (rt0.c0))) NOT BETWEEN (((((rt0.c0)OR(rt0.c1)))AND(NULL))) AND (((NULL) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'') NOT BETWEEN ('2021102374') AND (rt0.c0))) NOT BETWEEN (((((rt0.c0)OR(rt0.c1)))AND(NULL))) AND (((NULL) IS FALSE)))) IS TRUE)  as count FROM vt1, vt0, t1, rt0);
SELECT * FROM vt1, vt0, t1, rt0 WHERE (((((x'') NOT BETWEEN ('2021102374') AND (rt0.c0))) NOT BETWEEN (((((rt0.c0)OR(rt0.c1)))AND(NULL))) AND (((NULL) IS FALSE))));
SELECT ALL * FROM vt0 CROSS JOIN t1 ON ']' WHERE (CASE WHEN ((t1.c34) NOT BETWEEN (vt0.c0) AND (t1.c43)) THEN 'VAf[pi' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t1.c34) NOT BETWEEN (vt0.c0) AND (t1.c43)) THEN 'VAf[pi' END) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON ']');
SELECT ALL * FROM vt0 CROSS JOIN t1 ON ']' WHERE (CASE WHEN ((t1.c34) NOT BETWEEN (vt0.c0) AND (t1.c43)) THEN 'VAf[pi' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t1.c34) NOT BETWEEN (vt0.c0) AND (t1.c43)) THEN 'VAf[pi' END) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON ']');
SELECT ALL * FROM vt0 CROSS JOIN t1 ON ']' WHERE (CASE WHEN ((t1.c34) NOT BETWEEN (vt0.c0) AND (t1.c43)) THEN 'VAf[pi' END);
SELECT COUNT(*) FROM vt1, t1 WHERE (((((((t1.c34) BETWEEN (vt1.c0) AND (vt1.c0)))AND(((((t1.c43)AND(vt1.c0)))OR(t1.c34)))))OR(((t1.c34)*(t1.c43))))) ORDER BY '-0.0'  NULLS LAST, (((((((t1.c0, t1.c0, t1.c0))<=((0.47762237768063087, t1.c34, t1.c1))))AND(NULL)))AND(vt1.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c34) BETWEEN (vt1.c0) AND (vt1.c0)))AND(((((t1.c43)AND(vt1.c0)))OR(t1.c34)))))OR(((t1.c34)*(t1.c43))))) IS TRUE)  as count FROM vt1, t1 ORDER BY '-0.0'  NULLS LAST, (((((((t1.c0, t1.c0, t1.c0))<=((0.47762237768063087, t1.c34, t1.c1))))AND(NULL)))AND(vt1.c0 COLLATE NOCASE))  NULLS LAST);
SELECT COUNT(*) FROM vt1, t1 WHERE (((((((t1.c34) BETWEEN (vt1.c0) AND (vt1.c0)))AND(((((t1.c43)AND(vt1.c0)))OR(t1.c34)))))OR(((t1.c34)*(t1.c43))))) ORDER BY '-0.0'  NULLS LAST, (((((((t1.c0, t1.c0, t1.c0))<=((0.47762237768063087, t1.c34, t1.c1))))AND(NULL)))AND(vt1.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c34) BETWEEN (vt1.c0) AND (vt1.c0)))AND(((((t1.c43)AND(vt1.c0)))OR(t1.c34)))))OR(((t1.c34)*(t1.c43))))) IS TRUE)  as count FROM vt1, t1 ORDER BY '-0.0'  NULLS LAST, (((((((t1.c0, t1.c0, t1.c0))<=((0.47762237768063087, t1.c34, t1.c1))))AND(NULL)))AND(vt1.c0 COLLATE NOCASE))  NULLS LAST);
SELECT COUNT(*) FROM vt1, t1 WHERE (((((((t1.c34) BETWEEN (vt1.c0) AND (vt1.c0)))AND(((((t1.c43)AND(vt1.c0)))OR(t1.c34)))))OR(((t1.c34)*(t1.c43))))) ORDER BY '-0.0'  NULLS LAST, (((((((t1.c0, t1.c0, t1.c0))<=((0.47762237768063087, t1.c34, t1.c1))))AND(NULL)))AND(vt1.c0 COLLATE NOCASE))  NULLS LAST;
SELECT COUNT(*) FROM rt0, t1, vt1, vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 WHEN t1.c1 THEN rt0.c2 WHEN rt0.c2 THEN t1.c34 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 WHEN t1.c1 THEN rt0.c2 WHEN rt0.c2 THEN t1.c34 END AS TEXT)) IS TRUE)  as count FROM rt0, t1, vt1, vt0);
SELECT COUNT(*) FROM rt0, t1, vt1, vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 WHEN t1.c1 THEN rt0.c2 WHEN rt0.c2 THEN t1.c34 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 WHEN t1.c1 THEN rt0.c2 WHEN rt0.c2 THEN t1.c34 END AS TEXT)) IS TRUE)  as count FROM rt0, t1, vt1, vt0);
SELECT COUNT(*) FROM rt0, t1, vt1, vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 WHEN t1.c1 THEN rt0.c2 WHEN rt0.c2 THEN t1.c34 END AS TEXT));
SELECT ALL COUNT(*) FROM t1, vt0, vt1 NOT INDEXED WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND(t1.c0)))OR(t1.c0)))AND(vt0.c0))) BETWEEN (t1.c1) AND (t1.c43)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(vt0.c0)))AND(t1.c0)))OR(t1.c0)))AND(vt0.c0))) BETWEEN (t1.c1) AND (t1.c43))) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT ALL COUNT(*) FROM t1, vt0, vt1 NOT INDEXED WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND(t1.c0)))OR(t1.c0)))AND(vt0.c0))) BETWEEN (t1.c1) AND (t1.c43)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(vt0.c0)))AND(t1.c0)))OR(t1.c0)))AND(vt0.c0))) BETWEEN (t1.c1) AND (t1.c43))) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT ALL COUNT(*) FROM t1, vt0, vt1 NOT INDEXED WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND(t1.c0)))OR(t1.c0)))AND(vt0.c0))) BETWEEN (t1.c1) AND (t1.c43)));
SELECT * FROM vt0 INNER JOIN vt1 ON ((((vt0.c0)OR(vt1.c0))) BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))) AND (CAST(vt0.c0 AS BLOB))) WHERE (((vt0.c0)>(((vt0.c0)LIKE(-1194408711))))) ORDER BY ((((((vt1.c0) NOT BETWEEN (0.09799852516440966) AND (vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>(((vt0.c0)LIKE(-1194408711))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((vt0.c0)OR(vt1.c0))) BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))) AND (CAST(vt0.c0 AS BLOB))) ORDER BY ((((((vt1.c0) NOT BETWEEN (0.09799852516440966) AND (vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END)) DESC  NULLS LAST);
SELECT * FROM vt0 INNER JOIN vt1 ON ((((vt0.c0)OR(vt1.c0))) BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))) AND (CAST(vt0.c0 AS BLOB))) WHERE (((vt0.c0)>(((vt0.c0)LIKE(-1194408711))))) ORDER BY ((((((vt1.c0) NOT BETWEEN (0.09799852516440966) AND (vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>(((vt0.c0)LIKE(-1194408711))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((vt0.c0)OR(vt1.c0))) BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))) AND (CAST(vt0.c0 AS BLOB))) ORDER BY ((((((vt1.c0) NOT BETWEEN (0.09799852516440966) AND (vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END)) DESC  NULLS LAST);
SELECT * FROM vt0 INNER JOIN vt1 ON ((((vt0.c0)OR(vt1.c0))) BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))) AND (CAST(vt0.c0 AS BLOB))) WHERE (((vt0.c0)>(((vt0.c0)LIKE(-1194408711))))) ORDER BY ((((((vt1.c0) NOT BETWEEN (0.09799852516440966) AND (vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END)) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, t1, vt0 FULL OUTER JOIN rt0 ON (~ (CAST(rt0.c2 AS TEXT))) WHERE ((NOT (x''))) ORDER BY CAST(x'bae1' AS REAL) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (x''))) IS TRUE)  as count FROM vt1, t1, vt0 FULL OUTER JOIN rt0 ON (~ (CAST(rt0.c2 AS TEXT))) ORDER BY CAST(x'bae1' AS REAL) DESC);
SELECT COUNT(*) FROM vt1, t1, vt0 FULL OUTER JOIN rt0 ON (~ (CAST(rt0.c2 AS TEXT))) WHERE ((NOT (x''))) ORDER BY CAST(x'bae1' AS REAL) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (x''))) IS TRUE)  as count FROM vt1, t1, vt0 FULL OUTER JOIN rt0 ON (~ (CAST(rt0.c2 AS TEXT))) ORDER BY CAST(x'bae1' AS REAL) DESC);
SELECT COUNT(*) FROM vt1, t1, vt0 FULL OUTER JOIN rt0 ON (~ (CAST(rt0.c2 AS TEXT))) WHERE ((NOT (x''))) ORDER BY CAST(x'bae1' AS REAL) DESC;
SELECT COUNT(*) FROM vt0 INDEXED BY i54, vt1, rt0 WHERE (SQLITE_COMPILEOPTION_USED((- (rt0.c2)))) ORDER BY CAST(CASE WHEN rt0.c0 THEN vt0.c0 END AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED((- (rt0.c2)))) IS TRUE)  as count FROM vt0 INDEXED BY i54, vt1, rt0 ORDER BY CAST(CASE WHEN rt0.c0 THEN vt0.c0 END AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM vt0 INDEXED BY i54, vt1, rt0 WHERE (SQLITE_COMPILEOPTION_USED((- (rt0.c2)))) ORDER BY CAST(CASE WHEN rt0.c0 THEN vt0.c0 END AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED((- (rt0.c2)))) IS TRUE)  as count FROM vt0 INDEXED BY i54, vt1, rt0 ORDER BY CAST(CASE WHEN rt0.c0 THEN vt0.c0 END AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM vt0, t1, rt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, t1, rt0, vt1);
SELECT COUNT(*) FROM vt0, t1, rt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, t1, rt0, vt1);
SELECT COUNT(*) FROM vt0, t1, rt0, vt1 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt1 NATURAL JOIN t1 WHERE (vt1.c0) ORDER BY ((((vt1.c0 COLLATE BINARY)OR(NULL)))OR(((t1.c0)GLOB(t1.c0))))  NULLS FIRST, '-40566286' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 NATURAL JOIN t1 ORDER BY ((((vt1.c0 COLLATE BINARY)OR(NULL)))OR(((t1.c0)GLOB(t1.c0))))  NULLS FIRST, '-40566286' ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 NATURAL JOIN t1 WHERE (vt1.c0) ORDER BY ((((vt1.c0 COLLATE BINARY)OR(NULL)))OR(((t1.c0)GLOB(t1.c0))))  NULLS FIRST, '-40566286' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 NATURAL JOIN t1 ORDER BY ((((vt1.c0 COLLATE BINARY)OR(NULL)))OR(((t1.c0)GLOB(t1.c0))))  NULLS FIRST, '-40566286' ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 NATURAL JOIN t1 WHERE (vt1.c0) ORDER BY ((((vt1.c0 COLLATE BINARY)OR(NULL)))OR(((t1.c0)GLOB(t1.c0))))  NULLS FIRST, '-40566286' ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0) NOTNULL)) ORDER BY (((((rt0.c0)<<(rt0.c0))))==(((~ (rt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0)<<(rt0.c0))))=(((~ (rt0.c2)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0) NOTNULL)) ORDER BY (((((rt0.c0)<<(rt0.c0))))==(((~ (rt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0)<<(rt0.c0))))=(((~ (rt0.c2)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0) NOTNULL)) ORDER BY (((((rt0.c0)<<(rt0.c0))))==(((~ (rt0.c2)))))  NULLS LAST;
SELECT ALL * FROM t1, vt1 WHERE (((t1.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((t1.c0) NOTNULL)) IS TRUE)  as count FROM t1, vt1);
SELECT ALL * FROM t1, vt1 WHERE (((t1.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((t1.c0) NOTNULL)) IS TRUE)  as count FROM t1, vt1);
SELECT ALL * FROM t1, vt1 WHERE (((t1.c0) NOTNULL));
SELECT ALL * FROM vt1, t1, rt0, vt0 WHERE (LOWER(CAST(t1.c1 AS REAL))) ORDER BY JULIANDAY(t1.c43, (vt1.c0 IN (0Xffffffffd2a4a67e, rt0.c1)), ((NULL)|(rt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LOWER(CAST(t1.c1 AS REAL))) IS TRUE)  as count FROM vt1, t1, rt0, vt0 ORDER BY JULIANDAY(t1.c43, (vt1.c0 IN (0Xffffffffd2a4a67e, rt0.c1)), ((NULL)|(rt0.c1))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, t1, rt0, vt0 WHERE (LOWER(CAST(t1.c1 AS REAL))) ORDER BY JULIANDAY(t1.c43, (vt1.c0 IN (0Xffffffffd2a4a67e, rt0.c1)), ((NULL)|(rt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LOWER(CAST(t1.c1 AS REAL))) IS TRUE)  as count FROM vt1, t1, rt0, vt0 ORDER BY JULIANDAY(t1.c43, (vt1.c0 IN (0Xffffffffd2a4a67e, rt0.c1)), ((NULL)|(rt0.c1))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, t1, rt0, vt0 WHERE (LOWER(CAST(t1.c1 AS REAL))) ORDER BY JULIANDAY(t1.c43, (vt1.c0 IN (0Xffffffffd2a4a67e, rt0.c1)), ((NULL)|(rt0.c1))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t1, vt0, rt0 WHERE (LIKELIHOOD(DISTINCT 1642333287, 0.6777118015868113)) ORDER BY (((((t1.c43)) NOT BETWEEN ((t1.c1)) AND ((t1.c1)))) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT 1642333287, 0.6777118015868113)) IS TRUE)  as count FROM t1, vt0, rt0 NOT INDEXED ORDER BY (((((t1.c43)) NOT BETWEEN ((t1.c1)) AND ((t1.c1)))) IS FALSE) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, vt0, rt0 WHERE (LIKELIHOOD(DISTINCT 1642333287, 0.6777118015868113)) ORDER BY (((((t1.c43)) NOT BETWEEN ((t1.c1)) AND ((t1.c1)))) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT 1642333287, 0.6777118015868113)) IS TRUE)  as count FROM t1, vt0, rt0 NOT INDEXED ORDER BY (((((t1.c43)) NOT BETWEEN ((t1.c1)) AND ((t1.c1)))) IS FALSE) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, vt0, rt0 WHERE (LIKELIHOOD(DISTINCT 1642333287, 0.6777118015868113)) ORDER BY (((((t1.c43)) NOT BETWEEN ((t1.c1)) AND ((t1.c1)))) IS FALSE) DESC  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE ('-2029632736');
SELECT SUM(count) FROM (SELECT (('-2029632736') IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ('-2029632736');
SELECT SUM(count) FROM (SELECT (('-2029632736') IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ('-2029632736');
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE (((CAST(t1.c34 AS REAL)) IS TRUE)) ORDER BY NULLIF(((rt0.c2) NOT NULL), (~ (t1.c34))), TYPEOF(DISTINCT (((t1.c43, t1.c0, rt0.c1)) BETWEEN ((rt0.c1, t1.c1, t1.c1)) AND ((t1.c34, rt0.c0, t1.c34))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c34 AS REAL)) IS TRUE)) IS TRUE)  as count FROM vt0, t1, rt0 ORDER BY NULLIF(((rt0.c2) NOT NULL), (~ (t1.c34))), TYPEOF(DISTINCT (((t1.c43, t1.c0, rt0.c1)) BETWEEN ((rt0.c1, t1.c1, t1.c1)) AND ((t1.c34, rt0.c0, t1.c34)))));
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE (((CAST(t1.c34 AS REAL)) IS TRUE)) ORDER BY NULLIF(((rt0.c2) NOT NULL), (~ (t1.c34))), TYPEOF(DISTINCT (((t1.c43, t1.c0, rt0.c1)) BETWEEN ((rt0.c1, t1.c1, t1.c1)) AND ((t1.c34, rt0.c0, t1.c34))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c34 AS REAL)) IS TRUE)) IS TRUE)  as count FROM vt0, t1, rt0 ORDER BY NULLIF(((rt0.c2) NOT NULL), (~ (t1.c34))), TYPEOF(DISTINCT (((t1.c43, t1.c0, rt0.c1)) BETWEEN ((rt0.c1, t1.c1, t1.c1)) AND ((t1.c34, rt0.c0, t1.c34)))));
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE (((CAST(t1.c34 AS REAL)) IS TRUE)) ORDER BY NULLIF(((rt0.c2) NOT NULL), (~ (t1.c34))), TYPEOF(DISTINCT (((t1.c43, t1.c0, rt0.c1)) BETWEEN ((rt0.c1, t1.c1, t1.c1)) AND ((t1.c34, rt0.c0, t1.c34))));
SELECT ALL COUNT(*) FROM t1, vt1 WHERE ((((((t1.c34))!=((t1.c0)))) IS FALSE)) ORDER BY ((NULL)*(x'8175')) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c34))!=((t1.c0)))) IS FALSE)) IS TRUE)  as count FROM t1, vt1 ORDER BY ((NULL)*(x'8175')) ASC);
SELECT ALL COUNT(*) FROM t1, vt1 WHERE ((((((t1.c34))!=((t1.c0)))) IS FALSE)) ORDER BY ((NULL)*(x'8175')) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c34))!=((t1.c0)))) IS FALSE)) IS TRUE)  as count FROM t1, vt1 ORDER BY ((NULL)*(x'8175')) ASC);
SELECT ALL COUNT(*) FROM t1, vt1 WHERE ((((((t1.c34))!=((t1.c0)))) IS FALSE)) ORDER BY ((NULL)*(x'8175')) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 NATURAL JOIN t1 WHERE (((CAST(t1.c43 AS REAL)) BETWEEN ((vt0.c0 IN ())) AND ((rt0.c2 IN (t1.c1, rt0.c2))))) ORDER BY (CASE vt0.c0  WHEN rt0.c0 THEN t1.c0 ELSE t1.c43 END IN (CASE WHEN t1.c1 THEN rt0.c0 ELSE rt0.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c43 AS REAL)) BETWEEN ((vt0.c0 IN ())) AND ((rt0.c2 IN (t1.c1, rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN t1 ORDER BY (CASE vt0.c0  WHEN rt0.c0 THEN t1.c0 ELSE t1.c43 END IN (CASE WHEN t1.c1 THEN rt0.c0 ELSE rt0.c2 END)) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 NATURAL JOIN t1 WHERE (((CAST(t1.c43 AS REAL)) BETWEEN ((vt0.c0 IN ())) AND ((rt0.c2 IN (t1.c1, rt0.c2))))) ORDER BY (CASE vt0.c0  WHEN rt0.c0 THEN t1.c0 ELSE t1.c43 END IN (CASE WHEN t1.c1 THEN rt0.c0 ELSE rt0.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c43 AS REAL)) BETWEEN ((vt0.c0 IN ())) AND ((rt0.c2 IN (t1.c1, rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN t1 ORDER BY (CASE vt0.c0  WHEN rt0.c0 THEN t1.c0 ELSE t1.c43 END IN (CASE WHEN t1.c1 THEN rt0.c0 ELSE rt0.c2 END)) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 NATURAL JOIN t1 WHERE (((CAST(t1.c43 AS REAL)) BETWEEN ((vt0.c0 IN ())) AND ((rt0.c2 IN (t1.c1, rt0.c2))))) ORDER BY (CASE vt0.c0  WHEN rt0.c0 THEN t1.c0 ELSE t1.c43 END IN (CASE WHEN t1.c1 THEN rt0.c0 ELSE rt0.c2 END)) ASC;
SELECT COUNT(*) FROM vt0 WHERE (NULLIF((+ (vt0.c0)), vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((NULLIF((+ (vt0.c0)), vt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULLIF((+ (vt0.c0)), vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((NULLIF((+ (vt0.c0)), vt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULLIF((+ (vt0.c0)), vt0.c0 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM vt1 WHERE (TRIM(DISTINCT (- (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (- (vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (TRIM(DISTINCT (- (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (- (vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (TRIM(DISTINCT (- (vt1.c0))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t1 ON (+ (t1.c0 COLLATE BINARY)) INNER JOIN vt1 ON (((rt0.c1 COLLATE NOCASE))<((((t1.c1)-(t1.c1))))) FULL OUTER JOIN rt0 ON t1.c0 WHERE (CAST((vt0.c0 IN (t1.c0)) AS INTEGER)) ORDER BY (NOT (CAST(t1.c34 AS REAL))) DESC, (((+ (vt0.c0))) BETWEEN (rt0.c1) AND ((((t1.c1)) BETWEEN ((t1.c43)) AND ((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN (t1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON (+ (t1.c0 COLLATE BINARY)) INNER JOIN vt1 ON (((rt0.c1 COLLATE NOCASE))<((((t1.c1)-(t1.c1))))) FULL OUTER JOIN rt0 ON t1.c0 ORDER BY (NOT (CAST(t1.c34 AS REAL))) DESC, (((+ (vt0.c0))) BETWEEN (rt0.c1) AND ((((t1.c1)) BETWEEN ((t1.c43)) AND ((rt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t1 ON (+ (t1.c0 COLLATE BINARY)) INNER JOIN vt1 ON (((rt0.c1 COLLATE NOCASE))<((((t1.c1)-(t1.c1))))) FULL OUTER JOIN rt0 ON t1.c0 WHERE (CAST((vt0.c0 IN (t1.c0)) AS INTEGER)) ORDER BY (NOT (CAST(t1.c34 AS REAL))) DESC, (((+ (vt0.c0))) BETWEEN (rt0.c1) AND ((((t1.c1)) BETWEEN ((t1.c43)) AND ((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN (t1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON (+ (t1.c0 COLLATE BINARY)) INNER JOIN vt1 ON (((rt0.c1 COLLATE NOCASE))<((((t1.c1)-(t1.c1))))) FULL OUTER JOIN rt0 ON t1.c0 ORDER BY (NOT (CAST(t1.c34 AS REAL))) DESC, (((+ (vt0.c0))) BETWEEN (rt0.c1) AND ((((t1.c1)) BETWEEN ((t1.c43)) AND ((rt0.c0))))));
SELECT ALL COUNT(*) FROM vt1, rt0 LEFT OUTER JOIN vt0 ON '' CROSS JOIN t1 ON '548924015' WHERE (vt0.c0) ORDER BY UPPER(DISTINCT ((t1.c43) NOT BETWEEN (vt0.c0) AND (t1.c0))) ASC  NULLS FIRST, x'94bf' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, rt0 LEFT OUTER JOIN vt0 ON '' CROSS JOIN t1 ON '548924015' ORDER BY UPPER(DISTINCT ((t1.c43) NOT BETWEEN (vt0.c0) AND (t1.c0))) ASC  NULLS FIRST, x'94bf' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 LEFT OUTER JOIN vt0 ON '' CROSS JOIN t1 ON '548924015' WHERE (vt0.c0) ORDER BY UPPER(DISTINCT ((t1.c43) NOT BETWEEN (vt0.c0) AND (t1.c0))) ASC  NULLS FIRST, x'94bf' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, rt0 LEFT OUTER JOIN vt0 ON '' CROSS JOIN t1 ON '548924015' ORDER BY UPPER(DISTINCT ((t1.c43) NOT BETWEEN (vt0.c0) AND (t1.c0))) ASC  NULLS FIRST, x'94bf' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 LEFT OUTER JOIN vt0 ON '' CROSS JOIN t1 ON '548924015' WHERE (vt0.c0) ORDER BY UPPER(DISTINCT ((t1.c43) NOT BETWEEN (vt0.c0) AND (t1.c0))) ASC  NULLS FIRST, x'94bf' DESC  NULLS FIRST;
SELECT COUNT(*) FROM t1, vt0 WHERE (((((t1.c34)|(t1.c1)))<=((t1.c0 IN (t1.c1))))) ORDER BY (((t1.c0, vt0.c0, t1.c34, t1.c0, t1.c34)) BETWEEN ((((t1.c43) BETWEEN (t1.c43) AND (t1.c0)), json_type(t1.c0), t1.c34, CAST(t1.c0 AS INTEGER), (vt0.c0 IN ()))) AND ((CAST(t1.c1 AS NUMERIC), ((((vt0.c0)AND(vt0.c0)))OR(t1.c43)), (NOT (t1.c43)), ((t1.c1)IS NOT(t1.c0)), MAX(t1.c1, t1.c34))))  NULLS FIRST, (~ (t1.c34 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c34)|(t1.c1)))<=((t1.c0 IN (t1.c1))))) IS TRUE)  as count FROM t1, vt0 ORDER BY (((t1.c0, vt0.c0, t1.c34, t1.c0, t1.c34)) BETWEEN ((((t1.c43) BETWEEN (t1.c43) AND (t1.c0)), json_type(t1.c0), t1.c34, CAST(t1.c0 AS INTEGER), (vt0.c0 IN ()))) AND ((CAST(t1.c1 AS NUMERIC), ((((vt0.c0)AND(vt0.c0)))OR(t1.c43)), (NOT (t1.c43)), ((t1.c1)IS NOT(t1.c0)), MAX(t1.c1, t1.c34))))  NULLS FIRST, (~ (t1.c34 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt0 WHERE (((((t1.c34)|(t1.c1)))<=((t1.c0 IN (t1.c1))))) ORDER BY (((t1.c0, vt0.c0, t1.c34, t1.c0, t1.c34)) BETWEEN ((((t1.c43) BETWEEN (t1.c43) AND (t1.c0)), json_type(t1.c0), t1.c34, CAST(t1.c0 AS INTEGER), (vt0.c0 IN ()))) AND ((CAST(t1.c1 AS NUMERIC), ((((vt0.c0)AND(vt0.c0)))OR(t1.c43)), (NOT (t1.c43)), ((t1.c1)IS NOT(t1.c0)), MAX(t1.c1, t1.c34))))  NULLS FIRST, (~ (t1.c34 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c34)|(t1.c1)))<=((t1.c0 IN (t1.c1))))) IS TRUE)  as count FROM t1, vt0 ORDER BY (((t1.c0, vt0.c0, t1.c34, t1.c0, t1.c34)) BETWEEN ((((t1.c43) BETWEEN (t1.c43) AND (t1.c0)), json_type(t1.c0), t1.c34, CAST(t1.c0 AS INTEGER), (vt0.c0 IN ()))) AND ((CAST(t1.c1 AS NUMERIC), ((((vt0.c0)AND(vt0.c0)))OR(t1.c43)), (NOT (t1.c43)), ((t1.c1)IS NOT(t1.c0)), MAX(t1.c1, t1.c34))))  NULLS FIRST, (~ (t1.c34 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt0 WHERE (((((t1.c34)|(t1.c1)))<=((t1.c0 IN (t1.c1))))) ORDER BY (((t1.c0, vt0.c0, t1.c34, t1.c0, t1.c34)) BETWEEN ((((t1.c43) BETWEEN (t1.c43) AND (t1.c0)), json_type(t1.c0), t1.c34, CAST(t1.c0 AS INTEGER), (vt0.c0 IN ()))) AND ((CAST(t1.c1 AS NUMERIC), ((((vt0.c0)AND(vt0.c0)))OR(t1.c43)), (NOT (t1.c43)), ((t1.c1)IS NOT(t1.c0)), MAX(t1.c1, t1.c34))))  NULLS FIRST, (~ (t1.c34 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (TIME(((vt0.c0) NOT NULL), HEX(DISTINCT vt0.c0), ((vt0.c0) IS FALSE))) ORDER BY CASE ((vt0.c0) ISNULL)  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TIME(((vt0.c0) NOT NULL), HEX(DISTINCT vt0.c0), ((vt0.c0) IS FALSE))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0) ISNULL)  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (TIME(((vt0.c0) NOT NULL), HEX(DISTINCT vt0.c0), ((vt0.c0) IS FALSE))) ORDER BY CASE ((vt0.c0) ISNULL)  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TIME(((vt0.c0) NOT NULL), HEX(DISTINCT vt0.c0), ((vt0.c0) IS FALSE))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0) ISNULL)  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (TIME(((vt0.c0) NOT NULL), HEX(DISTINCT vt0.c0), ((vt0.c0) IS FALSE))) ORDER BY CASE ((vt0.c0) ISNULL)  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END DESC  NULLS LAST;
SELECT * FROM vt0, rt0, t1, vt1 WHERE ((+ (rt0.c0))) ORDER BY 0.9872562289094067 ASC  NULLS LAST, t1.c34 ASC;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c0))) IS TRUE)  as count FROM vt0, rt0, t1, vt1 ORDER BY 0.9872562289094067 ASC  NULLS LAST, t1.c34 ASC);
SELECT * FROM vt0, rt0, t1, vt1 WHERE ((+ (rt0.c0))) ORDER BY 0.9872562289094067 ASC  NULLS LAST, t1.c34 ASC;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c0))) IS TRUE)  as count FROM vt0, rt0, t1, vt1 ORDER BY 0.9872562289094067 ASC  NULLS LAST, t1.c34 ASC);
SELECT * FROM vt0, rt0, t1, vt1 WHERE ((+ (rt0.c0))) ORDER BY 0.9872562289094067 ASC  NULLS LAST, t1.c34 ASC;
SELECT COUNT(*) FROM rt0, vt1 WHERE ((('0.13628780342667102') NOTNULL)) ORDER BY vt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('0.13628780342667102') NOTNULL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY vt1.c0 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((('0.13628780342667102') NOTNULL)) ORDER BY vt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('0.13628780342667102') NOTNULL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY vt1.c0 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((('0.13628780342667102') NOTNULL)) ORDER BY vt1.c0 DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, t1 CROSS JOIN vt0 ON ((rt0.c1 COLLATE BINARY)/(CASE WHEN rt0.c2 THEN rt0.c1 WHEN t1.c0 THEN t1.c0 WHEN 1.694538339E9 THEN '1853173562' ELSE '?B' END)) INNER JOIN vt1 ON t1.c0 WHERE (TRIM(UNICODE(rt0.c1))) ORDER BY t1.c0;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(UNICODE(rt0.c1))) IS TRUE)  as count FROM rt0, t1 CROSS JOIN vt0 ON ((rt0.c1 COLLATE BINARY)/(CASE WHEN rt0.c2 THEN rt0.c1 WHEN t1.c0 THEN t1.c0 WHEN 1.694538339E9 THEN '1853173562' ELSE '?B' END)) INNER JOIN vt1 ON t1.c0 ORDER BY t1.c0);
SELECT COUNT(*) FROM rt0, t1 CROSS JOIN vt0 ON ((rt0.c1 COLLATE BINARY)/(CASE WHEN rt0.c2 THEN rt0.c1 WHEN t1.c0 THEN t1.c0 WHEN 1.694538339E9 THEN '1853173562' ELSE '?B' END)) INNER JOIN vt1 ON t1.c0 WHERE (TRIM(UNICODE(rt0.c1))) ORDER BY t1.c0;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(UNICODE(rt0.c1))) IS TRUE)  as count FROM rt0, t1 CROSS JOIN vt0 ON ((rt0.c1 COLLATE BINARY)/(CASE WHEN rt0.c2 THEN rt0.c1 WHEN t1.c0 THEN t1.c0 WHEN 1.694538339E9 THEN '1853173562' ELSE '?B' END)) INNER JOIN vt1 ON t1.c0 ORDER BY t1.c0);
SELECT COUNT(*) FROM rt0, t1 CROSS JOIN vt0 ON ((rt0.c1 COLLATE BINARY)/(CASE WHEN rt0.c2 THEN rt0.c1 WHEN t1.c0 THEN t1.c0 WHEN 1.694538339E9 THEN '1853173562' ELSE '?B' END)) INNER JOIN vt1 ON t1.c0 WHERE (TRIM(UNICODE(rt0.c1))) ORDER BY t1.c0;
SELECT * FROM vt1 WHERE (((((vt1.c0)<=(vt1.c0)))|(vt1.c0))) ORDER BY (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))||('dé¦¸')), CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER) DESC  NULLS LAST, ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)<=(vt1.c0)))|(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))||('dé¦¸')), CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER) DESC  NULLS LAST, ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) IN ()));
SELECT * FROM vt1 WHERE (((((vt1.c0)<=(vt1.c0)))|(vt1.c0))) ORDER BY (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))||('dé¦¸')), CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER) DESC  NULLS LAST, ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)<=(vt1.c0)))|(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))||('dé¦¸')), CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER) DESC  NULLS LAST, ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) IN ()));
SELECT * FROM vt1 WHERE (((((vt1.c0)<=(vt1.c0)))|(vt1.c0))) ORDER BY (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))||('dé¦¸')), CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER) DESC  NULLS LAST, ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) IN ());
SELECT COUNT(*) FROM vt1 WHERE (UPPER('<v-]tëÎQH'));
SELECT SUM(count) FROM (SELECT ALL ((UPPER('<v-]tëÎQH')) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (UPPER('<v-]tëÎQH'));
SELECT SUM(count) FROM (SELECT ALL ((UPPER('<v-]tëÎQH')) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (UPPER('<v-]tëÎQH'));
SELECT ALL * FROM vt0, rt0, vt1 NATURAL JOIN t1 WHERE (((((((((vt1.c0)AND(t1.c43)))OR(t1.c43)))OR(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND(((rt0.c1)==(t1.c1))))) ORDER BY ((((vt1.c0)AND(t1.c34)))AND(rt0.c0)) COLLATE BINARY DESC  NULLS LAST, CASE WHEN t1.c1 COLLATE RTRIM THEN x'b338' COLLATE BINARY WHEN ((t1.c1)IS NOT(t1.c43)) THEN CASE t1.c0  WHEN vt0.c0 THEN rt0.c0 ELSE vt1.c0 END WHEN (~ (rt0.c2)) THEN ((vt1.c0) NOT BETWEEN (t1.c0) AND (rt0.c2)) ELSE t1.c34 COLLATE RTRIM END ASC  NULLS LAST, ((HEX(rt0.c0))*(-113858496))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0)AND(t1.c43)))OR(t1.c43)))OR(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND(((rt0.c1)=(t1.c1))))) IS TRUE)  as count FROM vt0, rt0, vt1 NATURAL JOIN t1 ORDER BY ((((vt1.c0)AND(t1.c34)))AND(rt0.c0)) COLLATE BINARY DESC  NULLS LAST, CASE WHEN t1.c1 COLLATE RTRIM THEN x'b338' COLLATE BINARY WHEN ((t1.c1)IS NOT(t1.c43)) THEN CASE t1.c0  WHEN vt0.c0 THEN rt0.c0 ELSE vt1.c0 END WHEN (~ (rt0.c2)) THEN ((vt1.c0) NOT BETWEEN (t1.c0) AND (rt0.c2)) ELSE t1.c34 COLLATE RTRIM END ASC  NULLS LAST, ((HEX(rt0.c0))*(-113858496))  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, vt1 NATURAL JOIN t1 WHERE (((((((((vt1.c0)AND(t1.c43)))OR(t1.c43)))OR(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND(((rt0.c1)==(t1.c1))))) ORDER BY ((((vt1.c0)AND(t1.c34)))AND(rt0.c0)) COLLATE BINARY DESC  NULLS LAST, CASE WHEN t1.c1 COLLATE RTRIM THEN x'b338' COLLATE BINARY WHEN ((t1.c1)IS NOT(t1.c43)) THEN CASE t1.c0  WHEN vt0.c0 THEN rt0.c0 ELSE vt1.c0 END WHEN (~ (rt0.c2)) THEN ((vt1.c0) NOT BETWEEN (t1.c0) AND (rt0.c2)) ELSE t1.c34 COLLATE RTRIM END ASC  NULLS LAST, ((HEX(rt0.c0))*(-113858496))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0)AND(t1.c43)))OR(t1.c43)))OR(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND(((rt0.c1)=(t1.c1))))) IS TRUE)  as count FROM vt0, rt0, vt1 NATURAL JOIN t1 ORDER BY ((((vt1.c0)AND(t1.c34)))AND(rt0.c0)) COLLATE BINARY DESC  NULLS LAST, CASE WHEN t1.c1 COLLATE RTRIM THEN x'b338' COLLATE BINARY WHEN ((t1.c1)IS NOT(t1.c43)) THEN CASE t1.c0  WHEN vt0.c0 THEN rt0.c0 ELSE vt1.c0 END WHEN (~ (rt0.c2)) THEN ((vt1.c0) NOT BETWEEN (t1.c0) AND (rt0.c2)) ELSE t1.c34 COLLATE RTRIM END ASC  NULLS LAST, ((HEX(rt0.c0))*(-113858496))  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, vt1 NATURAL JOIN t1 WHERE (((((((((vt1.c0)AND(t1.c43)))OR(t1.c43)))OR(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND(((rt0.c1)==(t1.c1))))) ORDER BY ((((vt1.c0)AND(t1.c34)))AND(rt0.c0)) COLLATE BINARY DESC  NULLS LAST, CASE WHEN t1.c1 COLLATE RTRIM THEN x'b338' COLLATE BINARY WHEN ((t1.c1)IS NOT(t1.c43)) THEN CASE t1.c0  WHEN vt0.c0 THEN rt0.c0 ELSE vt1.c0 END WHEN (~ (rt0.c2)) THEN ((vt1.c0) NOT BETWEEN (t1.c0) AND (rt0.c2)) ELSE t1.c34 COLLATE RTRIM END ASC  NULLS LAST, ((HEX(rt0.c0))*(-113858496))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, vt0, vt1 WHERE (((CASE t1.c0  WHEN t1.c43 THEN t1.c34 ELSE t1.c43 END) NOT BETWEEN (((((vt0.c0)AND(t1.c43)))AND(x''))) AND (((t1.c34) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((CASE t1.c0  WHEN t1.c43 THEN t1.c34 ELSE t1.c43 END) NOT BETWEEN (((((vt0.c0)AND(t1.c43)))AND(x''))) AND (((t1.c34) NOTNULL)))) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT ALL COUNT(*) FROM t1, vt0, vt1 WHERE (((CASE t1.c0  WHEN t1.c43 THEN t1.c34 ELSE t1.c43 END) NOT BETWEEN (((((vt0.c0)AND(t1.c43)))AND(x''))) AND (((t1.c34) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((CASE t1.c0  WHEN t1.c43 THEN t1.c34 ELSE t1.c43 END) NOT BETWEEN (((((vt0.c0)AND(t1.c43)))AND(x''))) AND (((t1.c34) NOTNULL)))) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT ALL COUNT(*) FROM t1, vt0, vt1 WHERE (((CASE t1.c0  WHEN t1.c43 THEN t1.c34 ELSE t1.c43 END) NOT BETWEEN (((((vt0.c0)AND(t1.c43)))AND(x''))) AND (((t1.c34) NOTNULL))));
SELECT ALL * FROM vt0, t1, rt0, vt1 WHERE (LIKELY(DISTINCT ((t1.c1)!=(rt0.c1)))) ORDER BY (((t1.c1 IN (vt0.c0)))&((((t1.c43))<=((x''))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((t1.c1)<>(rt0.c1)))) IS TRUE)  as count FROM vt0, t1, rt0, vt1 ORDER BY (((t1.c1 IN (vt0.c0)))&((((t1.c43))<=((x''))))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t1, rt0, vt1 WHERE (LIKELY(DISTINCT ((t1.c1)!=(rt0.c1)))) ORDER BY (((t1.c1 IN (vt0.c0)))&((((t1.c43))<=((x''))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((t1.c1)<>(rt0.c1)))) IS TRUE)  as count FROM vt0, t1, rt0, vt1 ORDER BY (((t1.c1 IN (vt0.c0)))&((((t1.c43))<=((x''))))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t1, rt0, vt1 WHERE (LIKELY(DISTINCT ((t1.c1)!=(rt0.c1)))) ORDER BY (((t1.c1 IN (vt0.c0)))&((((t1.c43))<=((x''))))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1, t1 WHERE (((CAST(0.17002376049073809 AS NUMERIC)) IS FALSE)) ORDER BY t1.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.17002376049073809 AS NUMERIC)) IS FALSE)) IS TRUE)  as count FROM vt1, t1 ORDER BY t1.c1 ASC);
SELECT COUNT(*) FROM vt1, t1 WHERE (((CAST(0.17002376049073809 AS NUMERIC)) IS FALSE)) ORDER BY t1.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.17002376049073809 AS NUMERIC)) IS FALSE)) IS TRUE)  as count FROM vt1, t1 ORDER BY t1.c1 ASC);
SELECT COUNT(*) FROM vt1, t1 WHERE (((CAST(0.17002376049073809 AS NUMERIC)) IS FALSE)) ORDER BY t1.c1 ASC;
SELECT COUNT(*) FROM t1, rt0, vt0, vt1 WHERE (CASE ((rt0.c1)*(t1.c34))  WHEN rt0.c1 COLLATE BINARY THEN ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1)) ELSE ((t1.c1)-(rt0.c2)) END) ORDER BY ((((((t1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))OR((NOT (rt0.c0)))))OR(TYPEOF(t1.c0))) ASC, ((((t1.c43) NOT BETWEEN (t1.c0) AND (vt1.c0))) NOT BETWEEN (((t1.c43)=(rt0.c2))) AND (CASE '0.7233955439971075'  WHEN rt0.c2 THEN rt0.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1)*(t1.c34))  WHEN rt0.c1 COLLATE BINARY THEN ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1)) ELSE ((t1.c1)-(rt0.c2)) END) IS TRUE)  as count FROM t1, rt0, vt0, vt1 ORDER BY ((((((t1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))OR((NOT (rt0.c0)))))OR(TYPEOF(t1.c0))) ASC, ((((t1.c43) NOT BETWEEN (t1.c0) AND (vt1.c0))) NOT BETWEEN (((t1.c43)==(rt0.c2))) AND (CASE '0.7233955439971075'  WHEN rt0.c2 THEN rt0.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END))  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt0, vt0, vt1 WHERE (CASE ((rt0.c1)*(t1.c34))  WHEN rt0.c1 COLLATE BINARY THEN ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1)) ELSE ((t1.c1)-(rt0.c2)) END) ORDER BY ((((((t1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))OR((NOT (rt0.c0)))))OR(TYPEOF(t1.c0))) ASC, ((((t1.c43) NOT BETWEEN (t1.c0) AND (vt1.c0))) NOT BETWEEN (((t1.c43)=(rt0.c2))) AND (CASE '0.7233955439971075'  WHEN rt0.c2 THEN rt0.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1)*(t1.c34))  WHEN rt0.c1 COLLATE BINARY THEN ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1)) ELSE ((t1.c1)-(rt0.c2)) END) IS TRUE)  as count FROM t1, rt0, vt0, vt1 ORDER BY ((((((t1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))OR((NOT (rt0.c0)))))OR(TYPEOF(t1.c0))) ASC, ((((t1.c43) NOT BETWEEN (t1.c0) AND (vt1.c0))) NOT BETWEEN (((t1.c43)==(rt0.c2))) AND (CASE '0.7233955439971075'  WHEN rt0.c2 THEN rt0.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END))  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt0, vt0, vt1 WHERE (CASE ((rt0.c1)*(t1.c34))  WHEN rt0.c1 COLLATE BINARY THEN ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1)) ELSE ((t1.c1)-(rt0.c2)) END) ORDER BY ((((((t1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))OR((NOT (rt0.c0)))))OR(TYPEOF(t1.c0))) ASC, ((((t1.c43) NOT BETWEEN (t1.c0) AND (vt1.c0))) NOT BETWEEN (((t1.c43)=(rt0.c2))) AND (CASE '0.7233955439971075'  WHEN rt0.c2 THEN rt0.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t1 LEFT OUTER JOIN rt0 ON ((rt0.c1 IN ()) IN ()) CROSS JOIN vt1 ON CAST(((vt1.c0)IS NOT(vt1.c0)) AS INTEGER) WHERE (CAST(0.22505497422044196 AS INTEGER)) ORDER BY ((((((vt0.c0)OR(t1.c1)))OR(rt0.c0))) IS TRUE) DESC  NULLS LAST, ((t1.c43) BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.22505497422044196 AS INTEGER)) IS TRUE)  as count FROM vt0, t1 LEFT OUTER JOIN rt0 ON ((rt0.c1 IN ()) IN ()) CROSS JOIN vt1 ON CAST(((vt1.c0)IS NOT(vt1.c0)) AS INTEGER) ORDER BY ((((((vt0.c0)OR(t1.c1)))OR(rt0.c0))) IS TRUE) DESC  NULLS LAST, ((t1.c43) BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1 LEFT OUTER JOIN rt0 ON ((rt0.c1 IN ()) IN ()) CROSS JOIN vt1 ON CAST(((vt1.c0)IS NOT(vt1.c0)) AS INTEGER) WHERE (CAST(0.22505497422044196 AS INTEGER)) ORDER BY ((((((vt0.c0)OR(t1.c1)))OR(rt0.c0))) IS TRUE) DESC  NULLS LAST, ((t1.c43) BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.22505497422044196 AS INTEGER)) IS TRUE)  as count FROM vt0, t1 LEFT OUTER JOIN rt0 ON ((rt0.c1 IN ()) IN ()) CROSS JOIN vt1 ON CAST(((vt1.c0)IS NOT(vt1.c0)) AS INTEGER) ORDER BY ((((((vt0.c0)OR(t1.c1)))OR(rt0.c0))) IS TRUE) DESC  NULLS LAST, ((t1.c43) BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1 LEFT OUTER JOIN rt0 ON ((rt0.c1 IN ()) IN ()) CROSS JOIN vt1 ON CAST(((vt1.c0)IS NOT(vt1.c0)) AS INTEGER) WHERE (CAST(0.22505497422044196 AS INTEGER)) ORDER BY ((((((vt0.c0)OR(t1.c1)))OR(rt0.c0))) IS TRUE) DESC  NULLS LAST, ((t1.c43) BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1, t1, rt0 WHERE (((((rt0.c2)+(vt1.c0)))&(CHAR(t1.c0, vt0.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)+(vt1.c0)))&(CHAR(t1.c0, vt0.c0, vt1.c0)))) IS TRUE)  as count FROM vt0, vt1, t1, rt0);
SELECT COUNT(*) FROM vt0, vt1, t1, rt0 WHERE (((((rt0.c2)+(vt1.c0)))&(CHAR(t1.c0, vt0.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)+(vt1.c0)))&(CHAR(t1.c0, vt0.c0, vt1.c0)))) IS TRUE)  as count FROM vt0, vt1, t1, rt0);
SELECT COUNT(*) FROM vt0, vt1, t1, rt0 WHERE (((((rt0.c2)+(vt1.c0)))&(CHAR(t1.c0, vt0.c0, vt1.c0))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN ((((rt0.c2)OR(vt1.c0)))OR(rt0.c1)) WHEN ((vt1.c0)%(rt0.c0)) THEN rt0.c2 WHEN rt0.c1 COLLATE NOCASE THEN CAST(vt1.c0 AS REAL) ELSE (rt0.c0 IN (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN ((((rt0.c2)OR(vt1.c0)))OR(rt0.c1)) WHEN ((vt1.c0)%(rt0.c0)) THEN rt0.c2 WHEN rt0.c1 COLLATE NOCASE THEN CAST(vt1.c0 AS REAL) ELSE (rt0.c0 IN (rt0.c2)) END) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN ((((rt0.c2)OR(vt1.c0)))OR(rt0.c1)) WHEN ((vt1.c0)%(rt0.c0)) THEN rt0.c2 WHEN rt0.c1 COLLATE NOCASE THEN CAST(vt1.c0 AS REAL) ELSE (rt0.c0 IN (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN ((((rt0.c2)OR(vt1.c0)))OR(rt0.c1)) WHEN ((vt1.c0)%(rt0.c0)) THEN rt0.c2 WHEN rt0.c1 COLLATE NOCASE THEN CAST(vt1.c0 AS REAL) ELSE (rt0.c0 IN (rt0.c2)) END) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN ((((rt0.c2)OR(vt1.c0)))OR(rt0.c1)) WHEN ((vt1.c0)%(rt0.c0)) THEN rt0.c2 WHEN rt0.c1 COLLATE NOCASE THEN CAST(vt1.c0 AS REAL) ELSE (rt0.c0 IN (rt0.c2)) END);
SELECT COUNT(*) FROM t1, vt0, vt1, rt0 WHERE (((t1.c43 COLLATE NOCASE) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((t1.c43 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM t1, vt0, vt1, rt0);
SELECT COUNT(*) FROM t1, vt0, vt1, rt0 WHERE (((t1.c43 COLLATE NOCASE) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((t1.c43 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM t1, vt0, vt1, rt0);
SELECT COUNT(*) FROM t1, vt0, vt1, rt0 WHERE (((t1.c43 COLLATE NOCASE) IS TRUE));
SELECT ALL * FROM vt0, rt0 WHERE (1.673053569E9) ORDER BY ((((((rt0.c2)AND(rt0.c1)))OR(vt0.c0)))<=(rt0.c2 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((1.673053569E9) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c2)AND(rt0.c1)))OR(vt0.c0)))<=(rt0.c2 COLLATE BINARY)) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (1.673053569E9) ORDER BY ((((((rt0.c2)AND(rt0.c1)))OR(vt0.c0)))<=(rt0.c2 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((1.673053569E9) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c2)AND(rt0.c1)))OR(vt0.c0)))<=(rt0.c2 COLLATE BINARY)) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (1.673053569E9) ORDER BY ((((((rt0.c2)AND(rt0.c1)))OR(vt0.c0)))<=(rt0.c2 COLLATE BINARY)) DESC;
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE ((~ ((- (rt0.c2))))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT (((~ ((- (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY rt0.c1);
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE ((~ ((- (rt0.c2))))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT (((~ ((- (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY rt0.c1);
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE ((~ ((- (rt0.c2))))) ORDER BY rt0.c1;
SELECT COUNT(*) FROM vt1, vt0, t1, rt0 WHERE (((CAST(vt0.c0 AS INTEGER))-(vt0.c0))) ORDER BY (x'' IN (json_remove(t1.c43, t1.c1), ((t1.c0) BETWEEN (rt0.c1) AND (t1.c43))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER))-(vt0.c0))) IS TRUE)  as count FROM vt1, vt0, t1, rt0 ORDER BY (x'' IN (json_remove(t1.c43, t1.c1), ((t1.c0) BETWEEN (rt0.c1) AND (t1.c43))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0, t1, rt0 WHERE (((CAST(vt0.c0 AS INTEGER))-(vt0.c0))) ORDER BY (x'' IN (json_remove(t1.c43, t1.c1), ((t1.c0) BETWEEN (rt0.c1) AND (t1.c43))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER))-(vt0.c0))) IS TRUE)  as count FROM vt1, vt0, t1, rt0 ORDER BY (x'' IN (json_remove(t1.c43, t1.c1), ((t1.c0) BETWEEN (rt0.c1) AND (t1.c43))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0, t1, rt0 WHERE (((CAST(vt0.c0 AS INTEGER))-(vt0.c0))) ORDER BY (x'' IN (json_remove(t1.c43, t1.c1), ((t1.c0) BETWEEN (rt0.c1) AND (t1.c43))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (- (CAST(x'6b3412a1' AS NUMERIC))) WHERE ((CAST(vt1.c0 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (- (CAST(x'6b3412a1' AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (- (CAST(x'6b3412a1' AS NUMERIC))) WHERE ((CAST(vt1.c0 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (- (CAST(x'6b3412a1' AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (- (CAST(x'6b3412a1' AS NUMERIC))) WHERE ((CAST(vt1.c0 AS INTEGER) IN ()));
SELECT COUNT(*) FROM vt1, rt0, vt0, t1 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt1, rt0, vt0, t1);
SELECT COUNT(*) FROM vt1, rt0, vt0, t1 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt1, rt0, vt0, t1);
SELECT COUNT(*) FROM vt1, rt0, vt0, t1 WHERE (LAST_INSERT_ROWID());
SELECT * FROM vt0 WHERE (x'') ORDER BY ((((vt0.c0)>>(vt0.c0))) NOT BETWEEN (vt0.c0) AND (((vt0.c0)<=(vt0.c0)))) DESC, (((vt0.c0)) BETWEEN ((((vt0.c0)+('1092576549')))) AND (((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0)))))) DESC  NULLS LAST, CAST(vt0.c0 AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>>(vt0.c0))) NOT BETWEEN (vt0.c0) AND (((vt0.c0)<=(vt0.c0)))) DESC, (((vt0.c0)) BETWEEN ((((vt0.c0)+('1092576549')))) AND (((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0)))))) DESC  NULLS LAST, CAST(vt0.c0 AS INTEGER));
SELECT * FROM vt0 WHERE (x'') ORDER BY ((((vt0.c0)>>(vt0.c0))) NOT BETWEEN (vt0.c0) AND (((vt0.c0)<=(vt0.c0)))) DESC, (((vt0.c0)) BETWEEN ((((vt0.c0)+('1092576549')))) AND (((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0)))))) DESC  NULLS LAST, CAST(vt0.c0 AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>>(vt0.c0))) NOT BETWEEN (vt0.c0) AND (((vt0.c0)<=(vt0.c0)))) DESC, (((vt0.c0)) BETWEEN ((((vt0.c0)+('1092576549')))) AND (((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0)))))) DESC  NULLS LAST, CAST(vt0.c0 AS INTEGER));
SELECT * FROM vt0 WHERE (x'') ORDER BY ((((vt0.c0)>>(vt0.c0))) NOT BETWEEN (vt0.c0) AND (((vt0.c0)<=(vt0.c0)))) DESC, (((vt0.c0)) BETWEEN ((((vt0.c0)+('1092576549')))) AND (((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0)))))) DESC  NULLS LAST, CAST(vt0.c0 AS INTEGER);
SELECT * FROM vt0, rt0, t1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT * FROM vt0, rt0, t1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT * FROM vt0, rt0, t1 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0, t1 RIGHT OUTER JOIN rt0 ON NULL WHERE (MAX(((t1.c0)!=(rt0.c0)), NULL));
SELECT SUM(count) FROM (SELECT ((MAX(((t1.c0)!=(rt0.c0)), NULL)) IS TRUE)  as count FROM vt0, t1 RIGHT OUTER JOIN rt0 ON NULL);
SELECT COUNT(*) FROM vt0, t1 RIGHT OUTER JOIN rt0 ON NULL WHERE (MAX(((t1.c0)!=(rt0.c0)), NULL));
SELECT SUM(count) FROM (SELECT ((MAX(((t1.c0)!=(rt0.c0)), NULL)) IS TRUE)  as count FROM vt0, t1 RIGHT OUTER JOIN rt0 ON NULL);
SELECT COUNT(*) FROM vt0, t1 RIGHT OUTER JOIN rt0 ON NULL WHERE (MAX(((t1.c0)!=(rt0.c0)), NULL));
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((((rt0.c2)AND(vt1.c0)))AND(vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)AND(vt1.c0)))AND(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((((rt0.c2)AND(vt1.c0)))AND(vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)AND(vt1.c0)))AND(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((((rt0.c2)AND(vt1.c0)))AND(vt1.c0)) COLLATE BINARY);
SELECT * FROM t1, rt0, vt1, vt0 WHERE (t1.c43) ORDER BY t1.c34 DESC;
SELECT SUM(count) FROM (SELECT ALL ((t1.c43) IS TRUE)  as count FROM t1, rt0, vt1, vt0 ORDER BY t1.c34 DESC);
SELECT * FROM t1, rt0, vt1, vt0 WHERE (t1.c43) ORDER BY t1.c34 DESC;
SELECT SUM(count) FROM (SELECT ALL ((t1.c43) IS TRUE)  as count FROM t1, rt0, vt1, vt0 ORDER BY t1.c34 DESC);
SELECT * FROM t1, rt0, vt1, vt0 WHERE (t1.c43) ORDER BY t1.c34 DESC;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON vt1.c0 RIGHT OUTER JOIN vt0 ON CAST(((rt0.c1) NOTNULL) AS REAL) WHERE (vt1.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE BINARY) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON vt1.c0 RIGHT OUTER JOIN vt0 ON CAST(((rt0.c1) NOTNULL) AS REAL));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON vt1.c0 RIGHT OUTER JOIN vt0 ON CAST(((rt0.c1) NOTNULL) AS REAL) WHERE (vt1.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE BINARY) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON vt1.c0 RIGHT OUTER JOIN vt0 ON CAST(((rt0.c1) NOTNULL) AS REAL));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON vt1.c0 RIGHT OUTER JOIN vt0 ON CAST(((rt0.c1) NOTNULL) AS REAL) WHERE (vt1.c0 COLLATE BINARY);
SELECT COUNT(*) FROM vt1, t1 INNER JOIN rt0 ON t1.c43 WHERE (x'') ORDER BY CASE WHEN CAST(t1.c34 AS BLOB) THEN ((t1.c43) BETWEEN (rt0.c2) AND (t1.c43)) END;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, t1 INNER JOIN rt0 ON t1.c43 ORDER BY CASE WHEN CAST(t1.c34 AS BLOB) THEN ((t1.c43) BETWEEN (rt0.c2) AND (t1.c43)) END);
SELECT COUNT(*) FROM vt1, t1 INNER JOIN rt0 ON t1.c43 WHERE (x'') ORDER BY CASE WHEN CAST(t1.c34 AS BLOB) THEN ((t1.c43) BETWEEN (rt0.c2) AND (t1.c43)) END;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, t1 INNER JOIN rt0 ON t1.c43 ORDER BY CASE WHEN CAST(t1.c34 AS BLOB) THEN ((t1.c43) BETWEEN (rt0.c2) AND (t1.c43)) END);
SELECT COUNT(*) FROM vt1, t1 INNER JOIN rt0 ON t1.c43 WHERE (x'') ORDER BY CASE WHEN CAST(t1.c34 AS BLOB) THEN ((t1.c43) BETWEEN (rt0.c2) AND (t1.c43)) END;
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (((((((((((vt0.c0) NOTNULL))AND(((vt1.c0) ISNULL))))OR(8.56219897E8)))AND(TRIM(vt1.c0))))AND(0.5343074081661419)));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) NOTNULL))AND(((vt1.c0) ISNULL))))OR(8.56219897E8)))AND(TRIM(vt1.c0))))AND(0.5343074081661419))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (((((((((((vt0.c0) NOTNULL))AND(((vt1.c0) ISNULL))))OR(8.56219897E8)))AND(TRIM(vt1.c0))))AND(0.5343074081661419)));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) NOTNULL))AND(((vt1.c0) ISNULL))))OR(8.56219897E8)))AND(TRIM(vt1.c0))))AND(0.5343074081661419))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (((((((((((vt0.c0) NOTNULL))AND(((vt1.c0) ISNULL))))OR(8.56219897E8)))AND(TRIM(vt1.c0))))AND(0.5343074081661419)));
SELECT ALL * FROM t1, vt0 WHERE (((t1.c0 COLLATE RTRIM)&((('MA/{}.ní§') ISNULL))));
SELECT SUM(count) FROM (SELECT ((((t1.c0 COLLATE RTRIM)&((('MA/{}.ní§') ISNULL)))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (((t1.c0 COLLATE RTRIM)&((('MA/{}.ní§') ISNULL))));
SELECT SUM(count) FROM (SELECT ((((t1.c0 COLLATE RTRIM)&((('MA/{}.ní§') ISNULL)))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (((t1.c0 COLLATE RTRIM)&((('MA/{}.ní§') ISNULL))));
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c0) IS FALSE))<<(CAST(vt1.c0 AS INTEGER)))) ORDER BY ((vt0.c0)%(vt0.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS FALSE))<<(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0)%(vt0.c0)) COLLATE BINARY DESC);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c0) IS FALSE))<<(CAST(vt1.c0 AS INTEGER)))) ORDER BY ((vt0.c0)%(vt0.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS FALSE))<<(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0)%(vt0.c0)) COLLATE BINARY DESC);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c0) IS FALSE))<<(CAST(vt1.c0 AS INTEGER)))) ORDER BY ((vt0.c0)%(vt0.c0)) COLLATE BINARY DESC;
SELECT * FROM vt0, rt0 WHERE (((((NULL)AND(rt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)AND(rt0.c1))) NOT NULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((NULL)AND(rt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)AND(rt0.c1))) NOT NULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((NULL)AND(rt0.c1))) NOT NULL));
SELECT ALL * FROM rt0 NOT INDEXED, vt0 WHERE (((((rt0.c1)-(rt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)-(rt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0 NOT INDEXED, vt0 WHERE (((((rt0.c1)-(rt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)-(rt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0 NOT INDEXED, vt0 WHERE (((((rt0.c1)-(rt0.c1))) NOTNULL));
SELECT ALL * FROM vt0, rt0, vt1, t1 WHERE ((((((vt0.c0, rt0.c1, rt0.c1))<>((t1.c1, t1.c0, rt0.c1))))GLOB(((t1.c43)+(rt0.c1))))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, rt0.c1, rt0.c1))!=((t1.c1, t1.c0, rt0.c1))))GLOB(((t1.c43)+(rt0.c1))))) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0, vt1, t1 ORDER BY vt1.c0);
SELECT ALL * FROM vt0, rt0, vt1, t1 WHERE ((((((vt0.c0, rt0.c1, rt0.c1))<>((t1.c1, t1.c0, rt0.c1))))GLOB(((t1.c43)+(rt0.c1))))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, rt0.c1, rt0.c1))!=((t1.c1, t1.c0, rt0.c1))))GLOB(((t1.c43)+(rt0.c1))))) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0, vt1, t1 ORDER BY vt1.c0);
SELECT ALL * FROM vt0, rt0, vt1, t1 WHERE ((((((vt0.c0, rt0.c1, rt0.c1))<>((t1.c1, t1.c0, rt0.c1))))GLOB(((t1.c43)+(rt0.c1))))) ORDER BY vt1.c0;
SELECT ALL * FROM vt1, rt0, vt0 WHERE (CASE ((vt0.c0)<>(rt0.c0))  WHEN ((vt0.c0) BETWEEN (rt0.c1) AND (0.405390270597661)) THEN ((vt1.c0)*(vt0.c0)) ELSE rt0.c2 COLLATE RTRIM END) ORDER BY CAST(vt1.c0 AS BLOB) COLLATE NOCASE, ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1))) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (((rt0.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)<>(rt0.c0))  WHEN ((vt0.c0) BETWEEN (rt0.c1) AND (0.405390270597661)) THEN ((vt1.c0)*(vt0.c0)) ELSE rt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM vt1 NOT INDEXED, rt0, vt0 ORDER BY CAST(vt1.c0 AS BLOB) COLLATE NOCASE, ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1))) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (((rt0.c1) NOT NULL))));
SELECT ALL * FROM vt1, rt0, vt0 WHERE (CASE ((vt0.c0)<>(rt0.c0))  WHEN ((vt0.c0) BETWEEN (rt0.c1) AND (0.405390270597661)) THEN ((vt1.c0)*(vt0.c0)) ELSE rt0.c2 COLLATE RTRIM END) ORDER BY CAST(vt1.c0 AS BLOB) COLLATE NOCASE, ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1))) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (((rt0.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)<>(rt0.c0))  WHEN ((vt0.c0) BETWEEN (rt0.c1) AND (0.405390270597661)) THEN ((vt1.c0)*(vt0.c0)) ELSE rt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM vt1 NOT INDEXED, rt0, vt0 ORDER BY CAST(vt1.c0 AS BLOB) COLLATE NOCASE, ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1))) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (((rt0.c1) NOT NULL))));
SELECT ALL * FROM vt1, rt0, vt0 WHERE (CASE ((vt0.c0)<>(rt0.c0))  WHEN ((vt0.c0) BETWEEN (rt0.c1) AND (0.405390270597661)) THEN ((vt1.c0)*(vt0.c0)) ELSE rt0.c2 COLLATE RTRIM END) ORDER BY CAST(vt1.c0 AS BLOB) COLLATE NOCASE, ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1))) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (((rt0.c1) NOT NULL)));
SELECT * FROM vt0 WHERE (((vt0.c0)!=(vt0.c0)) COLLATE NOCASE) ORDER BY ((vt0.c0) BETWEEN ('MeJ\nè» ') AND (CASE vt0.c0  WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)) DESC, (~ (((vt0.c0) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<>(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN ('MeJ\nè» ') AND (CASE vt0.c0  WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)) DESC, (~ (((vt0.c0) NOT NULL))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c0)!=(vt0.c0)) COLLATE NOCASE) ORDER BY ((vt0.c0) BETWEEN ('MeJ\nè» ') AND (CASE vt0.c0  WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)) DESC, (~ (((vt0.c0) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<>(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN ('MeJ\nè» ') AND (CASE vt0.c0  WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)) DESC, (~ (((vt0.c0) NOT NULL))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c0)!=(vt0.c0)) COLLATE NOCASE) ORDER BY ((vt0.c0) BETWEEN ('MeJ\nè» ') AND (CASE vt0.c0  WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)) DESC, (~ (((vt0.c0) NOT NULL))) ASC  NULLS FIRST;
SELECT * FROM t1, rt0, vt0 WHERE (((((rt0.c0) ISNULL))>=('!^X_' COLLATE BINARY))) ORDER BY vt0.c0 DESC  NULLS FIRST, ((((t1.c43) BETWEEN (rt0.c0) AND (vt0.c0))) BETWEEN (((t1.c34) NOT NULL)) AND (vt0.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) ISNULL))>=('!^X_' COLLATE BINARY))) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY vt0.c0 DESC  NULLS FIRST, ((((t1.c43) BETWEEN (rt0.c0) AND (vt0.c0))) BETWEEN (((t1.c34) NOT NULL)) AND (vt0.c0 COLLATE BINARY))  NULLS LAST);
SELECT * FROM t1, rt0, vt0 WHERE (((((rt0.c0) ISNULL))>=('!^X_' COLLATE BINARY))) ORDER BY vt0.c0 DESC  NULLS FIRST, ((((t1.c43) BETWEEN (rt0.c0) AND (vt0.c0))) BETWEEN (((t1.c34) NOT NULL)) AND (vt0.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) ISNULL))>=('!^X_' COLLATE BINARY))) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY vt0.c0 DESC  NULLS FIRST, ((((t1.c43) BETWEEN (rt0.c0) AND (vt0.c0))) BETWEEN (((t1.c34) NOT NULL)) AND (vt0.c0 COLLATE BINARY))  NULLS LAST);
SELECT * FROM t1, rt0, vt0 WHERE (((((rt0.c0) ISNULL))>=('!^X_' COLLATE BINARY))) ORDER BY vt0.c0 DESC  NULLS FIRST, ((((t1.c43) BETWEEN (rt0.c0) AND (vt0.c0))) BETWEEN (((t1.c34) NOT NULL)) AND (vt0.c0 COLLATE BINARY))  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (DATE(NULL, (vt0.c0 IN ()), CAST(rt0.c0 AS NUMERIC))) ORDER BY CASE WHEN rt0.c1 THEN ((rt0.c0)>(rt0.c1)) ELSE ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) END DESC, ((((TYPEOF(DISTINCT rt0.c0))AND((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))AND(((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((DATE(NULL, (vt0.c0 IN ()), CAST(rt0.c0 AS NUMERIC))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN rt0.c1 THEN ((rt0.c0)>(rt0.c1)) ELSE ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) END DESC, ((((TYPEOF(DISTINCT rt0.c0))AND((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))AND(((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (DATE(NULL, (vt0.c0 IN ()), CAST(rt0.c0 AS NUMERIC))) ORDER BY CASE WHEN rt0.c1 THEN ((rt0.c0)>(rt0.c1)) ELSE ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) END DESC, ((((TYPEOF(DISTINCT rt0.c0))AND((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))AND(((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((DATE(NULL, (vt0.c0 IN ()), CAST(rt0.c0 AS NUMERIC))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN rt0.c1 THEN ((rt0.c0)>(rt0.c1)) ELSE ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) END DESC, ((((TYPEOF(DISTINCT rt0.c0))AND((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))AND(((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (DATE(NULL, (vt0.c0 IN ()), CAST(rt0.c0 AS NUMERIC))) ORDER BY CASE WHEN rt0.c1 THEN ((rt0.c0)>(rt0.c1)) ELSE ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) END DESC, ((((TYPEOF(DISTINCT rt0.c0))AND((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))AND(((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt0 INDEXED BY i41 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 INDEXED BY i41);
SELECT ALL COUNT(*) FROM vt0 INDEXED BY i41 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 INDEXED BY i41);
SELECT * FROM t1 WHERE ((((t1.c0) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((t1.c0) NOTNULL) IN ())) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((t1.c0) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((t1.c0) NOTNULL) IN ())) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((t1.c0) NOTNULL) IN ()));
SELECT COUNT(*) FROM vt1, t1 RIGHT OUTER JOIN rt0 ON IFNULL(((rt0.c2) BETWEEN (rt0.c0) AND (t1.c34)), ((t1.c1)<=(t1.c34))) WHERE (((((rt0.c1) BETWEEN (t1.c0) AND (t1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (t1.c0) AND (t1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1, t1 RIGHT OUTER JOIN rt0 ON IFNULL(((rt0.c2) BETWEEN (rt0.c0) AND (t1.c34)), ((t1.c1)<=(t1.c34))));
SELECT COUNT(*) FROM vt1, t1 RIGHT OUTER JOIN rt0 ON IFNULL(((rt0.c2) BETWEEN (rt0.c0) AND (t1.c34)), ((t1.c1)<=(t1.c34))) WHERE (((((rt0.c1) BETWEEN (t1.c0) AND (t1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (t1.c0) AND (t1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1, t1 RIGHT OUTER JOIN rt0 ON IFNULL(((rt0.c2) BETWEEN (rt0.c0) AND (t1.c34)), ((t1.c1)<=(t1.c34))));
SELECT COUNT(*) FROM vt1, t1 RIGHT OUTER JOIN rt0 ON IFNULL(((rt0.c2) BETWEEN (rt0.c0) AND (t1.c34)), ((t1.c1)<=(t1.c34))) WHERE (((((rt0.c1) BETWEEN (t1.c0) AND (t1.c0))) NOTNULL));
SELECT COUNT(*) FROM t1 WHERE ((((((('')AND(x'')))OR(t1.c1)))>>((t1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((('')AND(x'')))OR(t1.c1)))>>((t1.c1 IN ())))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((((('')AND(x'')))OR(t1.c1)))>>((t1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((('')AND(x'')))OR(t1.c1)))>>((t1.c1 IN ())))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((((('')AND(x'')))OR(t1.c1)))>>((t1.c1 IN ()))));
SELECT COUNT(*) FROM vt1, t1, vt0 RIGHT OUTER JOIN rt0 ON json(CAST(vt0.c0 AS NUMERIC)) WHERE ((t1.c34 IN (0.8063503806954395)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((t1.c34 IN (0.8063503806954395)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t1, vt0 RIGHT OUTER JOIN rt0 ON json(CAST(vt0.c0 AS NUMERIC)));
SELECT COUNT(*) FROM vt1, t1, vt0 RIGHT OUTER JOIN rt0 ON json(CAST(vt0.c0 AS NUMERIC)) WHERE ((t1.c34 IN (0.8063503806954395)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((t1.c34 IN (0.8063503806954395)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t1, vt0 RIGHT OUTER JOIN rt0 ON json(CAST(vt0.c0 AS NUMERIC)));
SELECT COUNT(*) FROM vt1, t1, vt0 RIGHT OUTER JOIN rt0 ON json(CAST(vt0.c0 AS NUMERIC)) WHERE ((t1.c34 IN (0.8063503806954395)) COLLATE NOCASE);
SELECT * FROM vt0, vt1, t1 WHERE ((NOT (((NULL) NOT BETWEEN (t1.c0) AND (NULL))))) ORDER BY (~ (t1.c1)) ASC  NULLS FIRST, vt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((NULL) NOT BETWEEN (t1.c0) AND (NULL))))) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY (~ (t1.c1)) ASC  NULLS FIRST, vt1.c0 ASC  NULLS FIRST);
SELECT * FROM vt0, vt1, t1 WHERE ((NOT (((NULL) NOT BETWEEN (t1.c0) AND (NULL))))) ORDER BY (~ (t1.c1)) ASC  NULLS FIRST, vt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((NULL) NOT BETWEEN (t1.c0) AND (NULL))))) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY (~ (t1.c1)) ASC  NULLS FIRST, vt1.c0 ASC  NULLS FIRST);
SELECT * FROM vt0, vt1, t1 WHERE ((NOT (((NULL) NOT BETWEEN (t1.c0) AND (NULL))))) ORDER BY (~ (t1.c1)) ASC  NULLS FIRST, vt1.c0 ASC  NULLS FIRST;
SELECT COUNT(*) FROM t1, vt0, vt1, rt0 WHERE ((((+ (x''))) ISNULL)) ORDER BY ((rt0.c1)/(((rt0.c1)<>(t1.c43))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (x''))) ISNULL)) IS TRUE)  as count FROM t1, vt0, vt1, rt0 ORDER BY ((rt0.c1)/(((rt0.c1)<>(t1.c43))))  NULLS LAST);
SELECT COUNT(*) FROM t1, vt0, vt1, rt0 WHERE ((((+ (x''))) ISNULL)) ORDER BY ((rt0.c1)/(((rt0.c1)<>(t1.c43))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (x''))) ISNULL)) IS TRUE)  as count FROM t1, vt0, vt1, rt0 ORDER BY ((rt0.c1)/(((rt0.c1)<>(t1.c43))))  NULLS LAST);
SELECT COUNT(*) FROM t1, vt0, vt1, rt0 WHERE ((((+ (x''))) ISNULL)) ORDER BY ((rt0.c1)/(((rt0.c1)<>(t1.c43))))  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 FULL OUTER JOIN t1 ON (+ (CAST(t1.c43 AS NUMERIC))) WHERE ((- (t1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((- (t1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN t1 ON (+ (CAST(t1.c43 AS NUMERIC))));
SELECT COUNT(*) FROM rt0, vt0 FULL OUTER JOIN t1 ON (+ (CAST(t1.c43 AS NUMERIC))) WHERE ((- (t1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((- (t1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN t1 ON (+ (CAST(t1.c43 AS NUMERIC))));
SELECT COUNT(*) FROM rt0, vt0 FULL OUTER JOIN t1 ON (+ (CAST(t1.c43 AS NUMERIC))) WHERE ((- (t1.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (((t1.c34) IS TRUE) IN (((rt0.c1) NOT NULL))) FULL OUTER JOIN t1 ON (t1.c0 IN ()) LEFT OUTER JOIN rt0 ON (((vt1.c0 IN ())) ISNULL) WHERE (((x'')>=(CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((x'')>=(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (((t1.c34) IS TRUE) IN (((rt0.c1) NOT NULL))) FULL OUTER JOIN t1 ON (t1.c0 IN ()) LEFT OUTER JOIN rt0 ON (((vt1.c0 IN ())) ISNULL));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (((t1.c34) IS TRUE) IN (((rt0.c1) NOT NULL))) FULL OUTER JOIN t1 ON (t1.c0 IN ()) LEFT OUTER JOIN rt0 ON (((vt1.c0 IN ())) ISNULL) WHERE (((x'')>=(CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((x'')>=(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (((t1.c34) IS TRUE) IN (((rt0.c1) NOT NULL))) FULL OUTER JOIN t1 ON (t1.c0 IN ()) LEFT OUTER JOIN rt0 ON (((vt1.c0 IN ())) ISNULL));
SELECT ALL * FROM t1, vt1, vt0, rt0 WHERE (rt0.c2) ORDER BY ABS(((t1.c1)<=(t1.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM t1, vt1, vt0, rt0 ORDER BY ABS(((t1.c1)<=(t1.c1))) ASC  NULLS FIRST);
SELECT ALL * FROM t1, vt1, vt0, rt0 WHERE (rt0.c2) ORDER BY ABS(((t1.c1)<=(t1.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM t1, vt1, vt0, rt0 ORDER BY ABS(((t1.c1)<=(t1.c1))) ASC  NULLS FIRST);
SELECT ALL * FROM t1, vt1, vt0, rt0 WHERE (rt0.c2) ORDER BY ABS(((t1.c1)<=(t1.c1))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT (- (vt0.c0)), ((vt0.c0)*(vt0.c0)))) ORDER BY 1261014002 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (- (vt0.c0)), ((vt0.c0)*(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY 1261014002 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT (- (vt0.c0)), ((vt0.c0)*(vt0.c0)))) ORDER BY 1261014002 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (- (vt0.c0)), ((vt0.c0)*(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY 1261014002 DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt1, vt0 WHERE (0.4671703104064243) ORDER BY '-1609485410' DESC, (((((vt0.c0)AND(vt0.c0)))AND(x'')) IN ());
SELECT SUM(count) FROM (SELECT ((0.4671703104064243) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY '-1609485410' DESC, (((((vt0.c0)AND(vt0.c0)))AND(x'')) IN ()));
SELECT ALL * FROM rt0, vt1, vt0 WHERE (0.4671703104064243) ORDER BY '-1609485410' DESC, (((((vt0.c0)AND(vt0.c0)))AND(x'')) IN ());
SELECT SUM(count) FROM (SELECT ((0.4671703104064243) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY '-1609485410' DESC, (((((vt0.c0)AND(vt0.c0)))AND(x'')) IN ()));
SELECT ALL * FROM rt0, vt1, vt0 WHERE (0.4671703104064243) ORDER BY '-1609485410' DESC, (((((vt0.c0)AND(vt0.c0)))AND(x'')) IN ());
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c2) ORDER BY ((((((rt0.c2)GLOB(rt0.c0)))OR(rt0.c2)))OR(((vt1.c0) ISNULL))) ASC, CASE WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))) THEN (~ (rt0.c0)) WHEN rt0.c1 COLLATE NOCASE THEN (+ (vt1.c0)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN rt0.c1 COLLATE BINARY ELSE CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END END DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((rt0.c2)GLOB(rt0.c0)))OR(rt0.c2)))OR(((vt1.c0) ISNULL))) ASC, CASE WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))) THEN (~ (rt0.c0)) WHEN rt0.c1 COLLATE NOCASE THEN (+ (vt1.c0)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN rt0.c1 COLLATE BINARY ELSE CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END END DESC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c2) ORDER BY ((((((rt0.c2)GLOB(rt0.c0)))OR(rt0.c2)))OR(((vt1.c0) ISNULL))) ASC, CASE WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))) THEN (~ (rt0.c0)) WHEN rt0.c1 COLLATE NOCASE THEN (+ (vt1.c0)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN rt0.c1 COLLATE BINARY ELSE CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END END DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((rt0.c2)GLOB(rt0.c0)))OR(rt0.c2)))OR(((vt1.c0) ISNULL))) ASC, CASE WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))) THEN (~ (rt0.c0)) WHEN rt0.c1 COLLATE NOCASE THEN (+ (vt1.c0)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN rt0.c1 COLLATE BINARY ELSE CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END END DESC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c2) ORDER BY ((((((rt0.c2)GLOB(rt0.c0)))OR(rt0.c2)))OR(((vt1.c0) ISNULL))) ASC, CASE WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))) THEN (~ (rt0.c0)) WHEN rt0.c1 COLLATE NOCASE THEN (+ (vt1.c0)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN rt0.c1 COLLATE BINARY ELSE CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END END DESC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c2)))OR(vt0.c0)))OR(rt0.c0))) IS FALSE)) ORDER BY CHANGES() DESC, ((((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0)>>(rt0.c2))) AND (x'00c9')), CASE 0.11200778062434502  WHEN rt0.c0 THEN ((x'60d2')>(rt0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c2)))OR(vt0.c0)))OR(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY CHANGES() DESC, ((((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0)>>(rt0.c2))) AND (x'00c9')), CASE 0.11200778062434502  WHEN rt0.c0 THEN ((x'60d2')>(rt0.c0)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c2)))OR(vt0.c0)))OR(rt0.c0))) IS FALSE)) ORDER BY CHANGES() DESC, ((((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0)>>(rt0.c2))) AND (x'00c9')), CASE 0.11200778062434502  WHEN rt0.c0 THEN ((x'60d2')>(rt0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c2)))OR(vt0.c0)))OR(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY CHANGES() DESC, ((((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0)>>(rt0.c2))) AND (x'00c9')), CASE 0.11200778062434502  WHEN rt0.c0 THEN ((x'60d2')>(rt0.c0)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c2)))OR(vt0.c0)))OR(rt0.c0))) IS FALSE)) ORDER BY CHANGES() DESC, ((((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0)>>(rt0.c2))) AND (x'00c9')), CASE 0.11200778062434502  WHEN rt0.c0 THEN ((x'60d2')>(rt0.c0)) END ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, t1, rt0);
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, t1, rt0);
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE (x'');
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c2)||(rt0.c0)) IN ()) WHERE (TRIM(((vt0.c0)GLOB(x'70c0')))) ORDER BY ((vt0.c0 COLLATE RTRIM)%(rt0.c1 COLLATE NOCASE)) DESC, vt1.c0;
SELECT SUM(count) FROM (SELECT ((TRIM(((vt0.c0)GLOB(x'70c0')))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c2)||(rt0.c0)) IN ()) ORDER BY ((vt0.c0 COLLATE RTRIM)%(rt0.c1 COLLATE NOCASE)) DESC, vt1.c0);
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c2)||(rt0.c0)) IN ()) WHERE (TRIM(((vt0.c0)GLOB(x'70c0')))) ORDER BY ((vt0.c0 COLLATE RTRIM)%(rt0.c1 COLLATE NOCASE)) DESC, vt1.c0;
SELECT SUM(count) FROM (SELECT ((TRIM(((vt0.c0)GLOB(x'70c0')))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c2)||(rt0.c0)) IN ()) ORDER BY ((vt0.c0 COLLATE RTRIM)%(rt0.c1 COLLATE NOCASE)) DESC, vt1.c0);
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c2)||(rt0.c0)) IN ()) WHERE (TRIM(((vt0.c0)GLOB(x'70c0')))) ORDER BY ((vt0.c0 COLLATE RTRIM)%(rt0.c1 COLLATE NOCASE)) DESC, vt1.c0;
SELECT * FROM rt0, vt1, t1 WHERE (0.1406872535304271);
SELECT SUM(count) FROM (SELECT ALL ((0.1406872535304271) IS TRUE)  as count FROM rt0, vt1, t1);
SELECT * FROM rt0, vt1, t1 WHERE (0.1406872535304271);
SELECT SUM(count) FROM (SELECT ALL ((0.1406872535304271) IS TRUE)  as count FROM rt0, vt1, t1);
SELECT * FROM rt0, vt1, t1 WHERE (0.1406872535304271);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) IN ())) ORDER BY ((((vt1.c0) NOT NULL))&(((0xffffffffd2d86d6c)*(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((vt1.c0) NOT NULL))&(((0xffffffffd2d86d6c)*(rt0.c1)))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) IN ())) ORDER BY ((((vt1.c0) NOT NULL))&(((0xffffffffd2d86d6c)*(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((vt1.c0) NOT NULL))&(((0xffffffffd2d86d6c)*(rt0.c1)))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) IN ())) ORDER BY ((((vt1.c0) NOT NULL))&(((0xffffffffd2d86d6c)*(rt0.c1))));
SELECT COUNT(*) FROM t1, vt0 CROSS JOIN rt0 ON (((rt0.c0 IN ()))=((0xffffffffba957270 IN ()))) WHERE ('-1175797232' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (('-1175797232' COLLATE RTRIM) IS TRUE)  as count FROM t1, vt0 CROSS JOIN rt0 ON (((rt0.c0 IN ()))=((0Xffffffffba957270 IN ()))));
SELECT COUNT(*) FROM t1, vt0 CROSS JOIN rt0 ON (((rt0.c0 IN ()))=((0xffffffffba957270 IN ()))) WHERE ('-1175797232' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (('-1175797232' COLLATE RTRIM) IS TRUE)  as count FROM t1, vt0 CROSS JOIN rt0 ON (((rt0.c0 IN ()))=((0Xffffffffba957270 IN ()))));
SELECT COUNT(*) FROM t1, vt0 CROSS JOIN rt0 ON (((rt0.c0 IN ()))=((0xffffffffba957270 IN ()))) WHERE ('-1175797232' COLLATE RTRIM);
SELECT ALL * FROM vt1, vt0 INDEXED BY i54 WHERE ((((- (vt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt1, vt0 INDEXED BY i54);
SELECT ALL * FROM vt1, vt0 INDEXED BY i54 WHERE ((((- (vt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt1, vt0 INDEXED BY i54);
SELECT ALL * FROM vt0 WHERE ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) IN ())) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY x'' ASC);
SELECT ALL * FROM vt0 WHERE ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) IN ())) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY x'' ASC);
SELECT ALL * FROM vt0 WHERE ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) IN ())) ORDER BY x'' ASC;
SELECT ALL * FROM t1, vt0, rt0 WHERE (CASE ((t1.c34)!=(t1.c0))  WHEN t1.c1 THEN ((vt0.c0)<(vt0.c0)) WHEN t1.c43 COLLATE NOCASE THEN (- (t1.c1)) WHEN rt0.c1 THEN CAST(t1.c0 AS REAL) END) ORDER BY rt0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t1.c34)<>(t1.c0))  WHEN t1.c1 THEN ((vt0.c0)<(vt0.c0)) WHEN t1.c43 COLLATE NOCASE THEN (- (t1.c1)) WHEN rt0.c1 THEN CAST(t1.c0 AS REAL) END) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY rt0.c2 ASC  NULLS LAST);
SELECT ALL * FROM t1, vt0, rt0 WHERE (CASE ((t1.c34)!=(t1.c0))  WHEN t1.c1 THEN ((vt0.c0)<(vt0.c0)) WHEN t1.c43 COLLATE NOCASE THEN (- (t1.c1)) WHEN rt0.c1 THEN CAST(t1.c0 AS REAL) END) ORDER BY rt0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t1.c34)<>(t1.c0))  WHEN t1.c1 THEN ((vt0.c0)<(vt0.c0)) WHEN t1.c43 COLLATE NOCASE THEN (- (t1.c1)) WHEN rt0.c1 THEN CAST(t1.c0 AS REAL) END) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY rt0.c2 ASC  NULLS LAST);
SELECT ALL * FROM t1, vt0, rt0 WHERE (CASE ((t1.c34)!=(t1.c0))  WHEN t1.c1 THEN ((vt0.c0)<(vt0.c0)) WHEN t1.c43 COLLATE NOCASE THEN (- (t1.c1)) WHEN rt0.c1 THEN CAST(t1.c0 AS REAL) END) ORDER BY rt0.c2 ASC  NULLS LAST;
SELECT ALL * FROM vt0 NOT INDEXED, rt0, t1 WHERE ((((t1.c43, t1.c0, vt0.c0)) NOT BETWEEN (((((t1.c0)) NOT BETWEEN ((rt0.c2)) AND ((t1.c34))), vt0.c0 COLLATE RTRIM, (t1.c0 IN ()))) AND (((rt0.c0 IN ()), 0Xffffffff891a8d61, ((((rt0.c2)OR(rt0.c2)))OR(t1.c1))))));
SELECT SUM(count) FROM (SELECT (((((t1.c43, t1.c0, vt0.c0)) NOT BETWEEN (((((t1.c0)) NOT BETWEEN ((rt0.c2)) AND ((t1.c34))), vt0.c0 COLLATE RTRIM, (t1.c0 IN ()))) AND (((rt0.c0 IN ()), 0Xffffffff891a8d61, ((((rt0.c2)OR(rt0.c2)))OR(t1.c1)))))) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT ALL * FROM vt0 NOT INDEXED, rt0, t1 WHERE ((((t1.c43, t1.c0, vt0.c0)) NOT BETWEEN (((((t1.c0)) NOT BETWEEN ((rt0.c2)) AND ((t1.c34))), vt0.c0 COLLATE RTRIM, (t1.c0 IN ()))) AND (((rt0.c0 IN ()), 0Xffffffff891a8d61, ((((rt0.c2)OR(rt0.c2)))OR(t1.c1))))));
SELECT SUM(count) FROM (SELECT (((((t1.c43, t1.c0, vt0.c0)) NOT BETWEEN (((((t1.c0)) NOT BETWEEN ((rt0.c2)) AND ((t1.c34))), vt0.c0 COLLATE RTRIM, (t1.c0 IN ()))) AND (((rt0.c0 IN ()), 0Xffffffff891a8d61, ((((rt0.c2)OR(rt0.c2)))OR(t1.c1)))))) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT ALL * FROM vt0 NOT INDEXED, rt0, t1 WHERE ((((t1.c43, t1.c0, vt0.c0)) NOT BETWEEN (((((t1.c0)) NOT BETWEEN ((rt0.c2)) AND ((t1.c34))), vt0.c0 COLLATE RTRIM, (t1.c0 IN ()))) AND (((rt0.c0 IN ()), 0Xffffffff891a8d61, ((((rt0.c2)OR(rt0.c2)))OR(t1.c1))))));
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (CASE t1.c43 COLLATE NOCASE  WHEN NULL THEN CASE 0.9006784255193312  WHEN vt1.c0 THEN vt0.c0 ELSE NULL END END) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE t1.c43 COLLATE NOCASE  WHEN NULL THEN CASE 0.9006784255193312  WHEN vt1.c0 THEN vt0.c0 ELSE NULL END END) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY vt1.c0  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (CASE t1.c43 COLLATE NOCASE  WHEN NULL THEN CASE 0.9006784255193312  WHEN vt1.c0 THEN vt0.c0 ELSE NULL END END) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE t1.c43 COLLATE NOCASE  WHEN NULL THEN CASE 0.9006784255193312  WHEN vt1.c0 THEN vt0.c0 ELSE NULL END END) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY vt1.c0  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (CASE t1.c43 COLLATE NOCASE  WHEN NULL THEN CASE 0.9006784255193312  WHEN vt1.c0 THEN vt0.c0 ELSE NULL END END) ORDER BY vt1.c0  NULLS LAST;
SELECT ALL * FROM rt0, t1, vt0, vt1 INDEXED BY i41 WHERE ((((rt0.c0) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM rt0, t1, vt0, vt1 INDEXED BY i41);
SELECT ALL * FROM rt0, t1, vt0, vt1 INDEXED BY i41 WHERE ((((rt0.c0) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM rt0, t1, vt0, vt1 INDEXED BY i41);
SELECT ALL COUNT(*) FROM t1 NATURAL JOIN vt0 WHERE ((+ (IFNULL(t1.c1, t1.c34))));
SELECT SUM(count) FROM (SELECT ALL (((+ (IFNULL(t1.c1, t1.c34)))) IS TRUE)  as count FROM t1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM t1 NATURAL JOIN vt0 WHERE ((+ (IFNULL(t1.c1, t1.c34))));
SELECT SUM(count) FROM (SELECT ALL (((+ (IFNULL(t1.c1, t1.c34)))) IS TRUE)  as count FROM t1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM t1 NATURAL JOIN vt0 WHERE ((+ (IFNULL(t1.c1, t1.c34))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0 IN ()))AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))AND(vt1.c0 COLLATE NOCASE))) ORDER BY (((~ (vt1.c0))) NOT BETWEEN (((vt1.c0)<<(-283027304))) AND (((vt1.c0)/(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0 IN ()))AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))AND(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY (((~ (vt1.c0))) NOT BETWEEN (((vt1.c0)<<(-283027304))) AND (((vt1.c0)/(vt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0 IN ()))AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))AND(vt1.c0 COLLATE NOCASE))) ORDER BY (((~ (vt1.c0))) NOT BETWEEN (((vt1.c0)<<(-283027304))) AND (((vt1.c0)/(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0 IN ()))AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))AND(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY (((~ (vt1.c0))) NOT BETWEEN (((vt1.c0)<<(-283027304))) AND (((vt1.c0)/(vt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0 IN ()))AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))AND(vt1.c0 COLLATE NOCASE))) ORDER BY (((~ (vt1.c0))) NOT BETWEEN (((vt1.c0)<<(-283027304))) AND (((vt1.c0)/(vt1.c0)))) ASC;
SELECT ALL COUNT(*) FROM t1, vt1, rt0 WHERE (CAST(x'' AS REAL)) ORDER BY (((CASE WHEN vt1.c0 THEN t1.c43 END))<=((CAST(t1.c0 AS REAL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS REAL)) IS TRUE)  as count FROM t1, vt1, rt0 ORDER BY (((CASE WHEN vt1.c0 THEN t1.c43 END))<=((CAST(t1.c0 AS REAL))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt1, rt0 WHERE (CAST(x'' AS REAL)) ORDER BY (((CASE WHEN vt1.c0 THEN t1.c43 END))<=((CAST(t1.c0 AS REAL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS REAL)) IS TRUE)  as count FROM t1, vt1, rt0 ORDER BY (((CASE WHEN vt1.c0 THEN t1.c43 END))<=((CAST(t1.c0 AS REAL))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt1, rt0 WHERE (CAST(x'' AS REAL)) ORDER BY (((CASE WHEN vt1.c0 THEN t1.c43 END))<=((CAST(t1.c0 AS REAL))))  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((t1.c0)AND(t1.c43 COLLATE BINARY)))AND(((((0.6586509890259523)OR(t1.c34)))OR(t1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)AND(t1.c43 COLLATE BINARY)))AND(((((0.6586509890259523)OR(t1.c34)))OR(t1.c1))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((t1.c0)AND(t1.c43 COLLATE BINARY)))AND(((((0.6586509890259523)OR(t1.c34)))OR(t1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)AND(t1.c43 COLLATE BINARY)))AND(((((0.6586509890259523)OR(t1.c34)))OR(t1.c1))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((t1.c0)AND(t1.c43 COLLATE BINARY)))AND(((((0.6586509890259523)OR(t1.c34)))OR(t1.c1)))));
SELECT ALL * FROM vt0, rt0, t1 NOT INDEXED WHERE (((CAST(rt0.c2 AS TEXT))>=((((rt0.c1))<((t1.c43))))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS TEXT))>=((((rt0.c1))<((t1.c43)))))) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT ALL * FROM vt0, rt0, t1 NOT INDEXED WHERE (((CAST(rt0.c2 AS TEXT))>=((((rt0.c1))<((t1.c43))))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS TEXT))>=((((rt0.c1))<((t1.c43)))))) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT ALL * FROM vt0, rt0, t1 NOT INDEXED WHERE (((CAST(rt0.c2 AS TEXT))>=((((rt0.c1))<((t1.c43))))));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((t1.c34)<<(((t1.c34)<=(t1.c0))))) ORDER BY ((((((((((t1.c43)AND(t1.c34)))AND(CAST(vt0.c0 AS REAL))))AND(CASE WHEN t1.c0 THEN t1.c0 WHEN vt0.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c43 ELSE vt0.c0 END)))AND(((vt0.c0)AND(t1.c34)))))OR(NULL));
SELECT SUM(count) FROM (SELECT ((((t1.c34)<<(((t1.c34)<=(t1.c0))))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((((((((t1.c43)AND(t1.c34)))AND(CAST(vt0.c0 AS REAL))))AND(CASE WHEN t1.c0 THEN t1.c0 WHEN vt0.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c43 ELSE vt0.c0 END)))AND(((vt0.c0)AND(t1.c34)))))OR(NULL)));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((t1.c34)<<(((t1.c34)<=(t1.c0))))) ORDER BY ((((((((((t1.c43)AND(t1.c34)))AND(CAST(vt0.c0 AS REAL))))AND(CASE WHEN t1.c0 THEN t1.c0 WHEN vt0.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c43 ELSE vt0.c0 END)))AND(((vt0.c0)AND(t1.c34)))))OR(NULL));
SELECT SUM(count) FROM (SELECT ((((t1.c34)<<(((t1.c34)<=(t1.c0))))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((((((((t1.c43)AND(t1.c34)))AND(CAST(vt0.c0 AS REAL))))AND(CASE WHEN t1.c0 THEN t1.c0 WHEN vt0.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c43 ELSE vt0.c0 END)))AND(((vt0.c0)AND(t1.c34)))))OR(NULL)));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((t1.c34)<<(((t1.c34)<=(t1.c0))))) ORDER BY ((((((((((t1.c43)AND(t1.c34)))AND(CAST(vt0.c0 AS REAL))))AND(CASE WHEN t1.c0 THEN t1.c0 WHEN vt0.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c43 ELSE vt0.c0 END)))AND(((vt0.c0)AND(t1.c34)))))OR(NULL));
SELECT ALL * FROM vt1 WHERE ((~ (vt1.c0))) ORDER BY ((json_patch(vt1.c0, vt1.c0)) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((vt1.c0)/(x'')))) DESC;
SELECT SUM(count) FROM (SELECT (((~ (vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY ((json_patch(vt1.c0, vt1.c0)) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((vt1.c0)/(x'')))) DESC);
SELECT ALL * FROM vt1 WHERE ((~ (vt1.c0))) ORDER BY ((json_patch(vt1.c0, vt1.c0)) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((vt1.c0)/(x'')))) DESC;
SELECT SUM(count) FROM (SELECT (((~ (vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY ((json_patch(vt1.c0, vt1.c0)) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((vt1.c0)/(x'')))) DESC);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (((((t1.c1)=(t1.c1))) NOT NULL)) ORDER BY ((((t1.c1 COLLATE NOCASE)OR((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c1))))))OR(vt1.c0 COLLATE RTRIM)), 0.223699117144603 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c1)=(t1.c1))) NOT NULL)) IS TRUE)  as count FROM vt1, t1 ORDER BY ((((t1.c1 COLLATE NOCASE)OR((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c1))))))OR(vt1.c0 COLLATE RTRIM)), 0.223699117144603 ASC);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (((((t1.c1)=(t1.c1))) NOT NULL)) ORDER BY ((((t1.c1 COLLATE NOCASE)OR((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c1))))))OR(vt1.c0 COLLATE RTRIM)), 0.223699117144603 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c1)=(t1.c1))) NOT NULL)) IS TRUE)  as count FROM vt1, t1 ORDER BY ((((t1.c1 COLLATE NOCASE)OR((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c1))))))OR(vt1.c0 COLLATE RTRIM)), 0.223699117144603 ASC);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (((((t1.c1)=(t1.c1))) NOT NULL)) ORDER BY ((((t1.c1 COLLATE NOCASE)OR((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c1))))))OR(vt1.c0 COLLATE RTRIM)), 0.223699117144603 ASC;
SELECT * FROM rt0, vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT * FROM rt0, vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT * FROM rt0, vt0, vt1 WHERE (vt0.c0);
SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c1) NOTNULL)))) ORDER BY (('\/') IS FALSE) COLLATE NOCASE DESC  NULLS FIRST, CAST(0.22430709518952652 COLLATE BINARY AS BLOB) ASC, CAST(rt0.c2 COLLATE BINARY AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY (('\/') IS FALSE) COLLATE NOCASE DESC  NULLS FIRST, CAST(0.22430709518952652 COLLATE BINARY AS BLOB) ASC, CAST(rt0.c2 COLLATE BINARY AS BLOB) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c1) NOTNULL)))) ORDER BY (('\/') IS FALSE) COLLATE NOCASE DESC  NULLS FIRST, CAST(0.22430709518952652 COLLATE BINARY AS BLOB) ASC, CAST(rt0.c2 COLLATE BINARY AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY (('\/') IS FALSE) COLLATE NOCASE DESC  NULLS FIRST, CAST(0.22430709518952652 COLLATE BINARY AS BLOB) ASC, CAST(rt0.c2 COLLATE BINARY AS BLOB) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c1) NOTNULL)))) ORDER BY (('\/') IS FALSE) COLLATE NOCASE DESC  NULLS FIRST, CAST(0.22430709518952652 COLLATE BINARY AS BLOB) ASC, CAST(rt0.c2 COLLATE BINARY AS BLOB) ASC  NULLS LAST;
SELECT COUNT(*) FROM t1, vt0 NOT INDEXED, vt1, rt0 NOT INDEXED WHERE (DATE(CASE WHEN rt0.c1 THEN rt0.c1 END, (~ (rt0.c0)), (((vt0.c0))>=((vt0.c0))))) ORDER BY (~ (highlight(rt0.c1, t1.c1, NULL, t1.c1))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((DATE(CASE WHEN rt0.c1 THEN rt0.c1 END, (~ (rt0.c0)), (((vt0.c0))>=((vt0.c0))))) IS TRUE)  as count FROM t1, vt0, vt1, rt0 ORDER BY (~ (highlight(rt0.c1, t1.c1, NULL, t1.c1))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt0 NOT INDEXED, vt1, rt0 NOT INDEXED WHERE (DATE(CASE WHEN rt0.c1 THEN rt0.c1 END, (~ (rt0.c0)), (((vt0.c0))>=((vt0.c0))))) ORDER BY (~ (highlight(rt0.c1, t1.c1, NULL, t1.c1))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((DATE(CASE WHEN rt0.c1 THEN rt0.c1 END, (~ (rt0.c0)), (((vt0.c0))>=((vt0.c0))))) IS TRUE)  as count FROM t1, vt0, vt1, rt0 ORDER BY (~ (highlight(rt0.c1, t1.c1, NULL, t1.c1))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt0 NOT INDEXED, vt1, rt0 NOT INDEXED WHERE (DATE(CASE WHEN rt0.c1 THEN rt0.c1 END, (~ (rt0.c0)), (((vt0.c0))>=((vt0.c0))))) ORDER BY (~ (highlight(rt0.c1, t1.c1, NULL, t1.c1))) DESC  NULLS FIRST;
SELECT ALL * FROM vt1, t1 FULL OUTER JOIN vt0 ON vt0.c0 WHERE ((((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c43)))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c43)))) NOTNULL)) IS TRUE)  as count FROM vt1, t1 FULL OUTER JOIN vt0 ON vt0.c0);
SELECT ALL * FROM vt1, t1 FULL OUTER JOIN vt0 ON vt0.c0 WHERE ((((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c43)))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c43)))) NOTNULL)) IS TRUE)  as count FROM vt1, t1 FULL OUTER JOIN vt0 ON vt0.c0);
SELECT ALL * FROM vt1, t1 FULL OUTER JOIN vt0 ON vt0.c0 WHERE ((((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c43)))) NOTNULL));
SELECT * FROM t1, rt0, vt1, vt0 WHERE (x'3dca') ORDER BY (((~ (t1.c0))) BETWEEN (CAST('0.6898694759199857' AS NUMERIC)) AND ((((rt0.c1, vt1.c0, t1.c43)) BETWEEN ((rt0.c2, t1.c0, vt1.c0)) AND ((t1.c43, vt1.c0, rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((x'3dca') IS TRUE)  as count FROM t1, rt0, vt1, vt0 ORDER BY (((~ (t1.c0))) BETWEEN (CAST('0.6898694759199857' AS NUMERIC)) AND ((((rt0.c1, vt1.c0, t1.c43)) BETWEEN ((rt0.c2, t1.c0, vt1.c0)) AND ((t1.c43, vt1.c0, rt0.c0))))) ASC);
SELECT * FROM t1, rt0, vt1, vt0 WHERE (x'3dca') ORDER BY (((~ (t1.c0))) BETWEEN (CAST('0.6898694759199857' AS NUMERIC)) AND ((((rt0.c1, vt1.c0, t1.c43)) BETWEEN ((rt0.c2, t1.c0, vt1.c0)) AND ((t1.c43, vt1.c0, rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((x'3dca') IS TRUE)  as count FROM t1, rt0, vt1, vt0 ORDER BY (((~ (t1.c0))) BETWEEN (CAST('0.6898694759199857' AS NUMERIC)) AND ((((rt0.c1, vt1.c0, t1.c43)) BETWEEN ((rt0.c2, t1.c0, vt1.c0)) AND ((t1.c43, vt1.c0, rt0.c0))))) ASC);
SELECT * FROM t1, rt0, vt1, vt0 WHERE (x'3dca') ORDER BY (((~ (t1.c0))) BETWEEN (CAST('0.6898694759199857' AS NUMERIC)) AND ((((rt0.c1, vt1.c0, t1.c43)) BETWEEN ((rt0.c2, t1.c0, vt1.c0)) AND ((t1.c43, vt1.c0, rt0.c0))))) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((((NULL)IS(rt0.c0)))IS(CAST(rt0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((((NULL)IS(rt0.c0)))IS(CAST(rt0.c0 AS INTEGER))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((((NULL)IS(rt0.c0)))IS(CAST(rt0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((((NULL)IS(rt0.c0)))IS(CAST(rt0.c0 AS INTEGER))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((((NULL)IS(rt0.c0)))IS(CAST(rt0.c0 AS INTEGER))) ASC;
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON ((NOT (rt0.c2)) IN (0xffffffffbb3a543c COLLATE BINARY)) CROSS JOIN rt0 ON ('' IN ((((rt0.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c1))))) WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND (((NOT (rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND (((NOT (rt0.c2)))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((NOT (rt0.c2)) IN (0xffffffffbb3a543c COLLATE BINARY)) CROSS JOIN rt0 ON ('' IN ((((rt0.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c1))))));
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON ((NOT (rt0.c2)) IN (0xffffffffbb3a543c COLLATE BINARY)) CROSS JOIN rt0 ON ('' IN ((((rt0.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c1))))) WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND (((NOT (rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND (((NOT (rt0.c2)))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((NOT (rt0.c2)) IN (0xffffffffbb3a543c COLLATE BINARY)) CROSS JOIN rt0 ON ('' IN ((((rt0.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c1))))));
SELECT COUNT(*) FROM rt0, t1, vt0, vt1 WHERE ((((vt0.c0) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM rt0, t1, vt0, vt1);
SELECT COUNT(*) FROM rt0, t1, vt0, vt1 WHERE ((((vt0.c0) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM rt0, t1, vt0, vt1);
SELECT COUNT(*) FROM rt0, t1, vt0, vt1 WHERE ((((vt0.c0) NOTNULL) IN ()));
SELECT COUNT(*) FROM t1 WHERE (((CAST(t1.c43 AS REAL)) NOT NULL)) ORDER BY ((~ (t1.c34)) IN ());
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c43 AS REAL)) NOT NULL)) IS TRUE)  as count FROM t1 ORDER BY ((~ (t1.c34)) IN ()));
SELECT COUNT(*) FROM t1 WHERE (((CAST(t1.c43 AS REAL)) NOT NULL)) ORDER BY ((~ (t1.c34)) IN ());
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c43 AS REAL)) NOT NULL)) IS TRUE)  as count FROM t1 ORDER BY ((~ (t1.c34)) IN ()));
SELECT COUNT(*) FROM t1 WHERE (((CAST(t1.c43 AS REAL)) NOT NULL)) ORDER BY ((~ (t1.c34)) IN ());
SELECT COUNT(*) FROM rt0, t1 WHERE (NULL) ORDER BY CAST(rt0.c2 AS NUMERIC) ASC  NULLS LAST, ((((rt0.c2)LIKE(rt0.c1))) NOT BETWEEN (rt0.c2) AND (((rt0.c0) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t1 ORDER BY CAST(rt0.c2 AS NUMERIC) ASC  NULLS LAST, ((((rt0.c2)LIKE(rt0.c1))) NOT BETWEEN (rt0.c2) AND (((rt0.c0) NOTNULL)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t1 WHERE (NULL) ORDER BY CAST(rt0.c2 AS NUMERIC) ASC  NULLS LAST, ((((rt0.c2)LIKE(rt0.c1))) NOT BETWEEN (rt0.c2) AND (((rt0.c0) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t1 ORDER BY CAST(rt0.c2 AS NUMERIC) ASC  NULLS LAST, ((((rt0.c2)LIKE(rt0.c1))) NOT BETWEEN (rt0.c2) AND (((rt0.c0) NOTNULL)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t1 WHERE (NULL) ORDER BY CAST(rt0.c2 AS NUMERIC) ASC  NULLS LAST, ((((rt0.c2)LIKE(rt0.c1))) NOT BETWEEN (rt0.c2) AND (((rt0.c0) NOTNULL)))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE (CAST((~ (rt0.c1)) AS NUMERIC)) ORDER BY ((((rt0.c1)==(vt1.c0))) BETWEEN ('neä¸M') AND (((rt0.c1) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY ((((rt0.c1)==(vt1.c0))) BETWEEN ('neä¸M') AND (((rt0.c1) IS FALSE)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE (CAST((~ (rt0.c1)) AS NUMERIC)) ORDER BY ((((rt0.c1)==(vt1.c0))) BETWEEN ('neä¸M') AND (((rt0.c1) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY ((((rt0.c1)==(vt1.c0))) BETWEEN ('neä¸M') AND (((rt0.c1) IS FALSE)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE (CAST((~ (rt0.c1)) AS NUMERIC)) ORDER BY ((((rt0.c1)==(vt1.c0))) BETWEEN ('neä¸M') AND (((rt0.c1) IS FALSE)))  NULLS FIRST;
SELECT * FROM vt0, vt1, rt0 INNER JOIN t1 ON (((((t1.c1)IS(vt1.c0)), 8.25346515E8, t1.c43, rt0.c0 COLLATE NOCASE, UNLIKELY(t1.c43)))<>(((vt1.c0 IN (rt0.c1, t1.c1)), ((t1.c34)%(rt0.c2)), t1.c34, ((((t1.c43)OR(rt0.c2)))AND(t1.c34)), CASE rt0.c1  WHEN rt0.c1 THEN vt1.c0 END))) WHERE (LIKELY((((t1.c0))<((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((((t1.c0))<((rt0.c1))))) IS TRUE)  as count FROM vt0, vt1, rt0 INNER JOIN t1 ON (((((t1.c1)IS(vt1.c0)), 8.25346515E8, t1.c43, rt0.c0 COLLATE NOCASE, UNLIKELY(t1.c43)))!=(((vt1.c0 IN (rt0.c1, t1.c1)), ((t1.c34)%(rt0.c2)), t1.c34, ((((t1.c43)OR(rt0.c2)))AND(t1.c34)), CASE rt0.c1  WHEN rt0.c1 THEN vt1.c0 END))));
SELECT * FROM vt0, vt1, rt0 INNER JOIN t1 ON (((((t1.c1)IS(vt1.c0)), 8.25346515E8, t1.c43, rt0.c0 COLLATE NOCASE, UNLIKELY(t1.c43)))<>(((vt1.c0 IN (rt0.c1, t1.c1)), ((t1.c34)%(rt0.c2)), t1.c34, ((((t1.c43)OR(rt0.c2)))AND(t1.c34)), CASE rt0.c1  WHEN rt0.c1 THEN vt1.c0 END))) WHERE (LIKELY((((t1.c0))<((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((((t1.c0))<((rt0.c1))))) IS TRUE)  as count FROM vt0, vt1, rt0 INNER JOIN t1 ON (((((t1.c1)IS(vt1.c0)), 8.25346515E8, t1.c43, rt0.c0 COLLATE NOCASE, UNLIKELY(t1.c43)))!=(((vt1.c0 IN (rt0.c1, t1.c1)), ((t1.c34)%(rt0.c2)), t1.c34, ((((t1.c43)OR(rt0.c2)))AND(t1.c34)), CASE rt0.c1  WHEN rt0.c1 THEN vt1.c0 END))));
SELECT * FROM vt0, vt1, rt0 INNER JOIN t1 ON (((((t1.c1)IS(vt1.c0)), 8.25346515E8, t1.c43, rt0.c0 COLLATE NOCASE, UNLIKELY(t1.c43)))<>(((vt1.c0 IN (rt0.c1, t1.c1)), ((t1.c34)%(rt0.c2)), t1.c34, ((((t1.c43)OR(rt0.c2)))AND(t1.c34)), CASE rt0.c1  WHEN rt0.c1 THEN vt1.c0 END))) WHERE (LIKELY((((t1.c0))<((rt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (((((rt0.c2)OR((- (rt0.c0)))))OR(TRIM(DISTINCT vt0.c0, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)OR((- (rt0.c0)))))OR(TRIM(DISTINCT vt0.c0, rt0.c1)))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (((((rt0.c2)OR((- (rt0.c0)))))OR(TRIM(DISTINCT vt0.c0, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)OR((- (rt0.c0)))))OR(TRIM(DISTINCT vt0.c0, rt0.c1)))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (((((rt0.c2)OR((- (rt0.c0)))))OR(TRIM(DISTINCT vt0.c0, rt0.c1))));
SELECT ALL * FROM vt1, t1, vt0 WHERE ((((t1.c1, t1.c0, t1.c0, vt1.c0, t1.c34)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t1.c0 END, 'H9', (t1.c0 IN ()), TRIM(t1.c1, t1.c34), (('-1e500')AND(vt0.c0)))) AND ((SQLITE_COMPILEOPTION_GET(vt1.c0), (- (vt0.c0)), t1.c34 COLLATE RTRIM, CAST(t1.c43 AS BLOB), ((((t1.c43)OR(t1.c34)))AND(vt0.c0)))))) ORDER BY vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT (((((t1.c1, t1.c0, t1.c0, vt1.c0, t1.c34)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t1.c0 END, 'H9', (t1.c0 IN ()), TRIM(t1.c1, t1.c34), (('-1e500')AND(vt0.c0)))) AND ((SQLITE_COMPILEOPTION_GET(vt1.c0), (- (vt0.c0)), t1.c34 COLLATE RTRIM, CAST(t1.c43 AS BLOB), ((((t1.c43)OR(t1.c34)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY vt1.c0 DESC);
SELECT ALL * FROM vt1, t1, vt0 WHERE ((((t1.c1, t1.c0, t1.c0, vt1.c0, t1.c34)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t1.c0 END, 'H9', (t1.c0 IN ()), TRIM(t1.c1, t1.c34), (('-1e500')AND(vt0.c0)))) AND ((SQLITE_COMPILEOPTION_GET(vt1.c0), (- (vt0.c0)), t1.c34 COLLATE RTRIM, CAST(t1.c43 AS BLOB), ((((t1.c43)OR(t1.c34)))AND(vt0.c0)))))) ORDER BY vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT (((((t1.c1, t1.c0, t1.c0, vt1.c0, t1.c34)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t1.c0 END, 'H9', (t1.c0 IN ()), TRIM(t1.c1, t1.c34), (('-1e500')AND(vt0.c0)))) AND ((SQLITE_COMPILEOPTION_GET(vt1.c0), (- (vt0.c0)), t1.c34 COLLATE RTRIM, CAST(t1.c43 AS BLOB), ((((t1.c43)OR(t1.c34)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY vt1.c0 DESC);
SELECT ALL * FROM vt1, t1, vt0 WHERE ((((t1.c1, t1.c0, t1.c0, vt1.c0, t1.c34)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t1.c0 END, 'H9', (t1.c0 IN ()), TRIM(t1.c1, t1.c34), (('-1e500')AND(vt0.c0)))) AND ((SQLITE_COMPILEOPTION_GET(vt1.c0), (- (vt0.c0)), t1.c34 COLLATE RTRIM, CAST(t1.c43 AS BLOB), ((((t1.c43)OR(t1.c34)))AND(vt0.c0)))))) ORDER BY vt1.c0 DESC;
SELECT COUNT(*) FROM rt0, vt0, vt1, t1 WHERE ((((((~ (t1.c0)))OR(((rt0.c2)%(rt0.c0)))))AND(rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((((~ (t1.c0)))OR(((rt0.c2)%(rt0.c0)))))AND(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0, vt1, t1);
SELECT COUNT(*) FROM rt0, vt0, vt1, t1 WHERE ((((((~ (t1.c0)))OR(((rt0.c2)%(rt0.c0)))))AND(rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((((~ (t1.c0)))OR(((rt0.c2)%(rt0.c0)))))AND(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0, vt1, t1);
SELECT COUNT(*) FROM rt0, vt0, vt1, t1 WHERE ((((((~ (t1.c0)))OR(((rt0.c2)%(rt0.c0)))))AND(rt0.c1 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((~ (rt0.c0)))<(((rt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY ((((rt0.c1) NOTNULL)) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (json_quote(rt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c0)))<(((rt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c1) NOTNULL)) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (json_quote(rt0.c1))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((~ (rt0.c0)))<(((rt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY ((((rt0.c1) NOTNULL)) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (json_quote(rt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c0)))<(((rt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c1) NOTNULL)) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (json_quote(rt0.c1))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((~ (rt0.c0)))<(((rt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY ((((rt0.c1) NOTNULL)) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (json_quote(rt0.c1))) DESC  NULLS LAST;
SELECT * FROM rt0, vt0 RIGHT OUTER JOIN t1 ON ((((((NULL)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))))==((((t1.c34)-(rt0.c2))))) INNER JOIN vt1 ON rt0.c2 WHERE ((t1.c0 IN ()) COLLATE RTRIM) ORDER BY CAST(((((rt0.c1)AND(t1.c0)))AND(t1.c0)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((t1.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN t1 ON ((((((NULL)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))))=((((t1.c34)-(rt0.c2))))) INNER JOIN vt1 ON rt0.c2 ORDER BY CAST(((((rt0.c1)AND(t1.c0)))AND(t1.c0)) AS BLOB)  NULLS LAST);
SELECT * FROM rt0, vt0 RIGHT OUTER JOIN t1 ON ((((((NULL)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))))==((((t1.c34)-(rt0.c2))))) INNER JOIN vt1 ON rt0.c2 WHERE ((t1.c0 IN ()) COLLATE RTRIM) ORDER BY CAST(((((rt0.c1)AND(t1.c0)))AND(t1.c0)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((t1.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN t1 ON ((((((NULL)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))))=((((t1.c34)-(rt0.c2))))) INNER JOIN vt1 ON rt0.c2 ORDER BY CAST(((((rt0.c1)AND(t1.c0)))AND(t1.c0)) AS BLOB)  NULLS LAST);
SELECT * FROM rt0, vt0 RIGHT OUTER JOIN t1 ON ((((((NULL)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))))==((((t1.c34)-(rt0.c2))))) INNER JOIN vt1 ON rt0.c2 WHERE ((t1.c0 IN ()) COLLATE RTRIM) ORDER BY CAST(((((rt0.c1)AND(t1.c0)))AND(t1.c0)) AS BLOB)  NULLS LAST;
SELECT * FROM t1, vt1, rt0, vt0 WHERE (0.6472857701463269) ORDER BY ((((CAST(vt1.c0 AS REAL))AND(CASE rt0.c0  WHEN t1.c0 THEN vt1.c0 WHEN t1.c0 THEN rt0.c0 WHEN t1.c1 THEN x'' ELSE t1.c0 END)))OR(((t1.c1)-(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.6472857701463269) IS TRUE)  as count FROM t1, vt1, rt0, vt0 ORDER BY ((((CAST(vt1.c0 AS REAL))AND(CASE rt0.c0  WHEN t1.c0 THEN vt1.c0 WHEN t1.c0 THEN rt0.c0 WHEN t1.c1 THEN x'' ELSE t1.c0 END)))OR(((t1.c1)-(rt0.c0)))) DESC  NULLS FIRST);
SELECT * FROM t1, vt1, rt0, vt0 WHERE (0.6472857701463269) ORDER BY ((((CAST(vt1.c0 AS REAL))AND(CASE rt0.c0  WHEN t1.c0 THEN vt1.c0 WHEN t1.c0 THEN rt0.c0 WHEN t1.c1 THEN x'' ELSE t1.c0 END)))OR(((t1.c1)-(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.6472857701463269) IS TRUE)  as count FROM t1, vt1, rt0, vt0 ORDER BY ((((CAST(vt1.c0 AS REAL))AND(CASE rt0.c0  WHEN t1.c0 THEN vt1.c0 WHEN t1.c0 THEN rt0.c0 WHEN t1.c1 THEN x'' ELSE t1.c0 END)))OR(((t1.c1)-(rt0.c0)))) DESC  NULLS FIRST);
SELECT * FROM t1, vt1, rt0, vt0 WHERE (0.6472857701463269) ORDER BY ((((CAST(vt1.c0 AS REAL))AND(CASE rt0.c0  WHEN t1.c0 THEN vt1.c0 WHEN t1.c0 THEN rt0.c0 WHEN t1.c1 THEN x'' ELSE t1.c0 END)))OR(((t1.c1)-(rt0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (LIKELIHOOD(((t1.c0)/(t1.c43)), 0.5686658031730629));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((t1.c0)/(t1.c43)), 0.5686658031730629)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (LIKELIHOOD(((t1.c0)/(t1.c43)), 0.5686658031730629));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((t1.c0)/(t1.c43)), 0.5686658031730629)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (LIKELIHOOD(((t1.c0)/(t1.c43)), 0.5686658031730629));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (+ ((NOT (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (+ ((NOT (vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (+ ((NOT (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (+ ((NOT (vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (+ ((NOT (vt0.c0))))  NULLS LAST;
SELECT * FROM vt0 WHERE ((((((vt0.c0))>=((vt0.c0))))<<((- (vt0.c0))))) ORDER BY ((((vt0.c0) IS FALSE))GLOB(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))>=((vt0.c0))))<<((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) IS FALSE))GLOB(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((((vt0.c0))>=((vt0.c0))))<<((- (vt0.c0))))) ORDER BY ((((vt0.c0) IS FALSE))GLOB(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))>=((vt0.c0))))<<((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) IS FALSE))GLOB(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((((vt0.c0))>=((vt0.c0))))<<((- (vt0.c0))))) ORDER BY ((((vt0.c0) IS FALSE))GLOB(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt1, t1, vt0 WHERE ((((vt0.c0) BETWEEN (rt0.c2) AND (t1.c1)) IN ())) ORDER BY ((((rtreenode(t1.c1, t1.c0))OR(CAST(vt1.c0 AS BLOB))))OR(((rt0.c2) BETWEEN ('JJé¼U') AND (t1.c34)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (rt0.c2) AND (t1.c1)) IN ())) IS TRUE)  as count FROM rt0, vt1, t1, vt0 ORDER BY ((((rtreenode(t1.c1, t1.c0))OR(CAST(vt1.c0 AS BLOB))))OR(((rt0.c2) BETWEEN ('JJé¼U') AND (t1.c34)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1, t1, vt0 WHERE ((((vt0.c0) BETWEEN (rt0.c2) AND (t1.c1)) IN ())) ORDER BY ((((rtreenode(t1.c1, t1.c0))OR(CAST(vt1.c0 AS BLOB))))OR(((rt0.c2) BETWEEN ('JJé¼U') AND (t1.c34)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (rt0.c2) AND (t1.c1)) IN ())) IS TRUE)  as count FROM rt0, vt1, t1, vt0 ORDER BY ((((rtreenode(t1.c1, t1.c0))OR(CAST(vt1.c0 AS BLOB))))OR(((rt0.c2) BETWEEN ('JJé¼U') AND (t1.c34)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1, t1, vt0 WHERE ((((vt0.c0) BETWEEN (rt0.c2) AND (t1.c1)) IN ())) ORDER BY ((((rtreenode(t1.c1, t1.c0))OR(CAST(vt1.c0 AS BLOB))))OR(((rt0.c2) BETWEEN ('JJé¼U') AND (t1.c34)))) ASC  NULLS LAST;
SELECT ALL * FROM t1, vt1, rt0 LEFT OUTER JOIN vt0 ON CAST(((t1.c1) IS TRUE) AS NUMERIC) WHERE ((- (rt0.c2))) ORDER BY ((IFNULL(rt0.c2, t1.c34))IS NOT(((rt0.c1)GLOB(x''))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c2))) IS TRUE)  as count FROM t1, vt1, rt0 LEFT OUTER JOIN vt0 ON CAST(((t1.c1) IS TRUE) AS NUMERIC) ORDER BY ((IFNULL(rt0.c2, t1.c34))IS NOT(((rt0.c1)GLOB(x''))))  NULLS FIRST);
SELECT ALL * FROM t1, vt1, rt0 LEFT OUTER JOIN vt0 ON CAST(((t1.c1) IS TRUE) AS NUMERIC) WHERE ((- (rt0.c2))) ORDER BY ((IFNULL(rt0.c2, t1.c34))IS NOT(((rt0.c1)GLOB(x''))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c2))) IS TRUE)  as count FROM t1, vt1, rt0 LEFT OUTER JOIN vt0 ON CAST(((t1.c1) IS TRUE) AS NUMERIC) ORDER BY ((IFNULL(rt0.c2, t1.c34))IS NOT(((rt0.c1)GLOB(x''))))  NULLS FIRST);
SELECT ALL * FROM t1, vt1, rt0 LEFT OUTER JOIN vt0 ON CAST(((t1.c1) IS TRUE) AS NUMERIC) WHERE ((- (rt0.c2))) ORDER BY ((IFNULL(rt0.c2, t1.c34))IS NOT(((rt0.c1)GLOB(x''))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((((((((((rt0.c2)AND(rt0.c2)))AND(vt1.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(((((((((vt1.c0)AND(vt1.c0)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c2)))))OR(((x'') BETWEEN (vt1.c0) AND (rt0.c0))))) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c2)AND(rt0.c2)))AND(vt1.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(((((((((vt1.c0)AND(vt1.c0)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c2)))))OR(((x'') BETWEEN (vt1.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c2);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((((((((((rt0.c2)AND(rt0.c2)))AND(vt1.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(((((((((vt1.c0)AND(vt1.c0)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c2)))))OR(((x'') BETWEEN (vt1.c0) AND (rt0.c0))))) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c2)AND(rt0.c2)))AND(vt1.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(((((((((vt1.c0)AND(vt1.c0)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c2)))))OR(((x'') BETWEEN (vt1.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c2);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((((((((((rt0.c2)AND(rt0.c2)))AND(vt1.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(((((((((vt1.c0)AND(vt1.c0)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c2)))))OR(((x'') BETWEEN (vt1.c0) AND (rt0.c0))))) ORDER BY rt0.c2;
SELECT COUNT(*) FROM vt0 WHERE (CAST(((x'')GLOB(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'')GLOB(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((x'')GLOB(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'')GLOB(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((x'')GLOB(vt0.c0)) AS NUMERIC));
SELECT ALL * FROM t1, vt1, vt0, rt0 WHERE (((((t1.c34)+('-1587313477')))OR((('-1609485410') BETWEEN (rt0.c1) AND (rt0.c1))))) ORDER BY (((rt0.c0 IN ()))|(((t1.c0) IS FALSE)))  NULLS LAST, MIN(((rt0.c1)>(rt0.c2)), ((0.8909425185611418) BETWEEN (rt0.c1) AND (vt0.c0)), rt0.c0 COLLATE RTRIM, ((vt1.c0) IS TRUE)) ASC  NULLS LAST, (NOT (rt0.c1));
SELECT SUM(count) FROM (SELECT ((((((t1.c34)+('-1587313477')))OR((('-1609485410') BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM t1, vt1, vt0, rt0 ORDER BY (((rt0.c0 IN ()))|(((t1.c0) IS FALSE)))  NULLS LAST, MIN(((rt0.c1)>(rt0.c2)), ((0.8909425185611418) BETWEEN (rt0.c1) AND (vt0.c0)), rt0.c0 COLLATE RTRIM, ((vt1.c0) IS TRUE)) ASC  NULLS LAST, (NOT (rt0.c1)));
SELECT ALL * FROM t1, vt1, vt0, rt0 WHERE (((((t1.c34)+('-1587313477')))OR((('-1609485410') BETWEEN (rt0.c1) AND (rt0.c1))))) ORDER BY (((rt0.c0 IN ()))|(((t1.c0) IS FALSE)))  NULLS LAST, MIN(((rt0.c1)>(rt0.c2)), ((0.8909425185611418) BETWEEN (rt0.c1) AND (vt0.c0)), rt0.c0 COLLATE RTRIM, ((vt1.c0) IS TRUE)) ASC  NULLS LAST, (NOT (rt0.c1));
SELECT SUM(count) FROM (SELECT ((((((t1.c34)+('-1587313477')))OR((('-1609485410') BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM t1, vt1, vt0, rt0 ORDER BY (((rt0.c0 IN ()))|(((t1.c0) IS FALSE)))  NULLS LAST, MIN(((rt0.c1)>(rt0.c2)), ((0.8909425185611418) BETWEEN (rt0.c1) AND (vt0.c0)), rt0.c0 COLLATE RTRIM, ((vt1.c0) IS TRUE)) ASC  NULLS LAST, (NOT (rt0.c1)));
SELECT ALL * FROM t1, vt1, vt0, rt0 WHERE (((((t1.c34)+('-1587313477')))OR((('-1609485410') BETWEEN (rt0.c1) AND (rt0.c1))))) ORDER BY (((rt0.c0 IN ()))|(((t1.c0) IS FALSE)))  NULLS LAST, MIN(((rt0.c1)>(rt0.c2)), ((0.8909425185611418) BETWEEN (rt0.c1) AND (vt0.c0)), rt0.c0 COLLATE RTRIM, ((vt1.c0) IS TRUE)) ASC  NULLS LAST, (NOT (rt0.c1));
SELECT ALL * FROM t1, vt0, rt0 WHERE (((CAST(t1.c1 AS NUMERIC))OR(CASE WHEN vt0.c0 THEN rt0.c0 END))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c1 AS NUMERIC))OR(CASE WHEN vt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY rt0.c1);
SELECT ALL * FROM t1, vt0, rt0 WHERE (((CAST(t1.c1 AS NUMERIC))OR(CASE WHEN vt0.c0 THEN rt0.c0 END))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c1 AS NUMERIC))OR(CASE WHEN vt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY rt0.c1);
SELECT ALL * FROM t1, vt0, rt0 WHERE (((CAST(t1.c1 AS NUMERIC))OR(CASE WHEN vt0.c0 THEN rt0.c0 END))) ORDER BY rt0.c1;
SELECT * FROM vt0 WHERE (((LIKELY(vt0.c0))&(((vt0.c0)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((LIKELY(vt0.c0))&(((vt0.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((LIKELY(vt0.c0))&(((vt0.c0)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((LIKELY(vt0.c0))&(((vt0.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((LIKELY(vt0.c0))&(((vt0.c0)/(vt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT * FROM vt1, t1, rt0 NATURAL JOIN vt0 WHERE ((((vt1.c0 IN ())) NOT BETWEEN ('1522834311') AND (CASE WHEN t1.c0 THEN t1.c1 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) NOT BETWEEN ('1522834311') AND (CASE WHEN t1.c0 THEN t1.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt1, t1, rt0 NATURAL JOIN vt0);
SELECT * FROM vt1, t1, rt0 NATURAL JOIN vt0 WHERE ((((vt1.c0 IN ())) NOT BETWEEN ('1522834311') AND (CASE WHEN t1.c0 THEN t1.c1 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) NOT BETWEEN ('1522834311') AND (CASE WHEN t1.c0 THEN t1.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt1, t1, rt0 NATURAL JOIN vt0);
SELECT * FROM vt1, t1, rt0 NATURAL JOIN vt0 WHERE ((((vt1.c0 IN ())) NOT BETWEEN ('1522834311') AND (CASE WHEN t1.c0 THEN t1.c1 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN vt1.c0 COLLATE BINARY THEN vt0.c0 ELSE ((2.021102374E9)<(vt0.c0)) END) ORDER BY CASE ((vt0.c0)&(vt1.c0))  WHEN ((vt1.c0) NOTNULL) THEN ((vt0.c0)LIKE(vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 COLLATE BINARY THEN vt0.c0 ELSE ((2.021102374E9)<(vt0.c0)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE ((vt0.c0)&(vt1.c0))  WHEN ((vt1.c0) NOTNULL) THEN ((vt0.c0)LIKE(vt0.c0)) END DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN vt1.c0 COLLATE BINARY THEN vt0.c0 ELSE ((2.021102374E9)<(vt0.c0)) END) ORDER BY CASE ((vt0.c0)&(vt1.c0))  WHEN ((vt1.c0) NOTNULL) THEN ((vt0.c0)LIKE(vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 COLLATE BINARY THEN vt0.c0 ELSE ((2.021102374E9)<(vt0.c0)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE ((vt0.c0)&(vt1.c0))  WHEN ((vt1.c0) NOTNULL) THEN ((vt0.c0)LIKE(vt0.c0)) END DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN vt1.c0 COLLATE BINARY THEN vt0.c0 ELSE ((2.021102374E9)<(vt0.c0)) END) ORDER BY CASE ((vt0.c0)&(vt1.c0))  WHEN ((vt1.c0) NOTNULL) THEN ((vt0.c0)LIKE(vt0.c0)) END DESC;
SELECT * FROM t1 FULL OUTER JOIN vt1 ON CASE WHEN CAST(t1.c34 AS TEXT) THEN ((t1.c34) BETWEEN (t1.c0) AND (t1.c34)) ELSE ((0.36700066871159864)<(t1.c0)) END WHERE (CAST(t1.c34 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c34 AS TEXT)) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt1 ON CASE WHEN CAST(t1.c34 AS TEXT) THEN ((t1.c34) BETWEEN (t1.c0) AND (t1.c34)) ELSE ((0.36700066871159864)<(t1.c0)) END);
SELECT * FROM t1 FULL OUTER JOIN vt1 ON CASE WHEN CAST(t1.c34 AS TEXT) THEN ((t1.c34) BETWEEN (t1.c0) AND (t1.c34)) ELSE ((0.36700066871159864)<(t1.c0)) END WHERE (CAST(t1.c34 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c34 AS TEXT)) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt1 ON CASE WHEN CAST(t1.c34 AS TEXT) THEN ((t1.c34) BETWEEN (t1.c0) AND (t1.c34)) ELSE ((0.36700066871159864)<(t1.c0)) END);
SELECT * FROM t1 FULL OUTER JOIN vt1 ON CASE WHEN CAST(t1.c34 AS TEXT) THEN ((t1.c34) BETWEEN (t1.c0) AND (t1.c34)) ELSE ((0.36700066871159864)<(t1.c0)) END WHERE (CAST(t1.c34 AS TEXT));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)) END) ORDER BY (('ZhE#1æ¸·d' COLLATE BINARY)%((~ (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (('ZhE#1æ¸·d' COLLATE BINARY)%((~ (vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)) END) ORDER BY (('ZhE#1æ¸·d' COLLATE BINARY)%((~ (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (('ZhE#1æ¸·d' COLLATE BINARY)%((~ (vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)) END) ORDER BY (('ZhE#1æ¸·d' COLLATE BINARY)%((~ (vt0.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE (((((t1.c0)LIKE(rt0.c2))) BETWEEN (CAST(t1.c34 AS REAL)) AND (((((rt0.c0)OR(t1.c0)))AND(t1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)LIKE(rt0.c2))) BETWEEN (CAST(t1.c34 AS REAL)) AND (((((rt0.c0)OR(t1.c0)))AND(t1.c1))))) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE (((((t1.c0)LIKE(rt0.c2))) BETWEEN (CAST(t1.c34 AS REAL)) AND (((((rt0.c0)OR(t1.c0)))AND(t1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)LIKE(rt0.c2))) BETWEEN (CAST(t1.c34 AS REAL)) AND (((((rt0.c0)OR(t1.c0)))AND(t1.c1))))) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE (((((t1.c0)LIKE(rt0.c2))) BETWEEN (CAST(t1.c34 AS REAL)) AND (((((rt0.c0)OR(t1.c0)))AND(t1.c1)))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)>=(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)>=(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)>=(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)>=(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)>=(vt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE ('-2066398618');
SELECT SUM(count) FROM (SELECT ALL (('-2066398618') IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE ('-2066398618');
SELECT SUM(count) FROM (SELECT ALL (('-2066398618') IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE ('-2066398618');
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((CAST(t1.c0 AS INTEGER)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS INTEGER)) NOT NULL)) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((CAST(t1.c0 AS INTEGER)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS INTEGER)) NOT NULL)) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((CAST(t1.c0 AS INTEGER)) NOT NULL));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(((vt0.c0)AND(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)AND(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(((vt0.c0)AND(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)AND(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(((vt0.c0)AND(vt0.c0)) AS INTEGER));
SELECT * FROM t1, rt0 WHERE ((((rt0.c2)OR(0x72951e9d)) IN (CAST(t1.c34 AS INTEGER), rt0.c0))) ORDER BY ((NULLIF(DISTINCT rt0.c0, rt0.c1))>=(rt0.c1 COLLATE BINARY)), CAST((NOT (rt0.c0)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)OR(0X72951e9d)) IN (CAST(t1.c34 AS INTEGER), rt0.c0))) IS TRUE)  as count FROM t1, rt0 ORDER BY ((NULLIF(DISTINCT rt0.c0, rt0.c1))>=(rt0.c1 COLLATE BINARY)), CAST((NOT (rt0.c0)) AS INTEGER) DESC);
SELECT * FROM t1, rt0 WHERE ((((rt0.c2)OR(0x72951e9d)) IN (CAST(t1.c34 AS INTEGER), rt0.c0))) ORDER BY ((NULLIF(DISTINCT rt0.c0, rt0.c1))>=(rt0.c1 COLLATE BINARY)), CAST((NOT (rt0.c0)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)OR(0X72951e9d)) IN (CAST(t1.c34 AS INTEGER), rt0.c0))) IS TRUE)  as count FROM t1, rt0 ORDER BY ((NULLIF(DISTINCT rt0.c0, rt0.c1))>=(rt0.c1 COLLATE BINARY)), CAST((NOT (rt0.c0)) AS INTEGER) DESC);
SELECT * FROM t1, rt0 WHERE ((((rt0.c2)OR(0x72951e9d)) IN (CAST(t1.c34 AS INTEGER), rt0.c0))) ORDER BY ((NULLIF(DISTINCT rt0.c0, rt0.c1))>=(rt0.c1 COLLATE BINARY)), CAST((NOT (rt0.c0)) AS INTEGER) DESC;
SELECT ALL * FROM vt0, rt0, vt1, t1 WHERE (((CAST(t1.c34 AS TEXT)) ISNULL)) ORDER BY x'7a9c3fe0' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c34 AS TEXT)) ISNULL)) IS TRUE)  as count FROM vt0, rt0, vt1, t1 ORDER BY x'7a9c3fe0' ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, vt1, t1 WHERE (((CAST(t1.c34 AS TEXT)) ISNULL)) ORDER BY x'7a9c3fe0' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c34 AS TEXT)) ISNULL)) IS TRUE)  as count FROM vt0, rt0, vt1, t1 ORDER BY x'7a9c3fe0' ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, vt1, t1 WHERE (((CAST(t1.c34 AS TEXT)) ISNULL)) ORDER BY x'7a9c3fe0' ASC  NULLS FIRST;
SELECT * FROM t1, vt0 WHERE (((((t1.c1)IS(0.6273805674697867)))LIKE(((vt0.c0)-(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c1)IS(0.6273805674697867)))LIKE(((vt0.c0)-(vt0.c0))))) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (((((t1.c1)IS(0.6273805674697867)))LIKE(((vt0.c0)-(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c1)IS(0.6273805674697867)))LIKE(((vt0.c0)-(vt0.c0))))) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (((((t1.c1)IS(0.6273805674697867)))LIKE(((vt0.c0)-(vt0.c0)))));
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((((vt0.c0))<((vt0.c0))), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (- (vt0.c0)))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (- (vt0.c0)), CAST(vt0.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((((vt0.c0))<((vt0.c0))), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (- (vt0.c0)))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (- (vt0.c0)), CAST(vt0.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((((vt0.c0))<((vt0.c0))), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (- (vt0.c0)))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (- (vt0.c0)), CAST(vt0.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((((vt0.c0))<((vt0.c0))), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (- (vt0.c0)))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (- (vt0.c0)), CAST(vt0.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((((vt0.c0))<((vt0.c0))), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (- (vt0.c0)))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (- (vt0.c0)), CAST(vt0.c0 AS NUMERIC)))));
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)AND(0Xffffffffa69a9c2c)))OR(vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (x'1e9b'))) ORDER BY (((((((('-688165945')AND(CAST(vt1.c0 AS BLOB))))OR(vt1.c0)))OR(vt1.c0 COLLATE NOCASE)))AND(CASE vt1.c0  WHEN 0Xffffffffc18cdf9d THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) DESC  NULLS FIRST, (((vt1.c0)<>(vt1.c0)) IN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(0Xffffffffa69a9c2c)))OR(vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (x'1e9b'))) IS TRUE)  as count FROM vt1 ORDER BY (((((((('-688165945')AND(CAST(vt1.c0 AS BLOB))))OR(vt1.c0)))OR(vt1.c0 COLLATE NOCASE)))AND(CASE vt1.c0  WHEN 0Xffffffffc18cdf9d THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) DESC  NULLS FIRST, (((vt1.c0)!=(vt1.c0)) IN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)AND(0Xffffffffa69a9c2c)))OR(vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (x'1e9b'))) ORDER BY (((((((('-688165945')AND(CAST(vt1.c0 AS BLOB))))OR(vt1.c0)))OR(vt1.c0 COLLATE NOCASE)))AND(CASE vt1.c0  WHEN 0Xffffffffc18cdf9d THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) DESC  NULLS FIRST, (((vt1.c0)<>(vt1.c0)) IN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(0Xffffffffa69a9c2c)))OR(vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (x'1e9b'))) IS TRUE)  as count FROM vt1 ORDER BY (((((((('-688165945')AND(CAST(vt1.c0 AS BLOB))))OR(vt1.c0)))OR(vt1.c0 COLLATE NOCASE)))AND(CASE vt1.c0  WHEN 0Xffffffffc18cdf9d THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) DESC  NULLS FIRST, (((vt1.c0)!=(vt1.c0)) IN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)AND(0Xffffffffa69a9c2c)))OR(vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (x'1e9b'))) ORDER BY (((((((('-688165945')AND(CAST(vt1.c0 AS BLOB))))OR(vt1.c0)))OR(vt1.c0 COLLATE NOCASE)))AND(CASE vt1.c0  WHEN 0Xffffffffc18cdf9d THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) DESC  NULLS FIRST, (((vt1.c0)<>(vt1.c0)) IN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))  NULLS LAST;
SELECT * FROM rt0 WHERE (((TRIM(DISTINCT rt0.c0, rt0.c2))<>(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT rt0.c0, rt0.c2))!=(NULL))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((TRIM(DISTINCT rt0.c0, rt0.c2))<>(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT rt0.c0, rt0.c2))!=(NULL))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((TRIM(DISTINCT rt0.c0, rt0.c2))<>(NULL)));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOTNULL)) ORDER BY vt0.c0 DESC  NULLS LAST, '1955418805'  NULLS FIRST, ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS LAST, '1955418805'  NULLS FIRST, ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOTNULL)) ORDER BY vt0.c0 DESC  NULLS LAST, '1955418805'  NULLS FIRST, ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS LAST, '1955418805'  NULLS FIRST, ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOTNULL)) ORDER BY vt0.c0 DESC  NULLS LAST, '1955418805'  NULLS FIRST, ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (LIKELY(vt1.c0 COLLATE BINARY)) ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))AND(TRIM(DISTINCT vt1.c0, vt1.c0))))OR(((vt1.c0)%(vt1.c0)))))AND(vt1.c0 COLLATE BINARY)))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)), ((((((vt1.c0)>(vt1.c0)))OR((('')<<(vt1.c0)))))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(vt1.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))AND(TRIM(DISTINCT vt1.c0, vt1.c0))))OR(((vt1.c0)%(vt1.c0)))))AND(vt1.c0 COLLATE BINARY)))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)), ((((((vt1.c0)>(vt1.c0)))OR((('')<<(vt1.c0)))))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)));
SELECT ALL COUNT(*) FROM vt1 WHERE (LIKELY(vt1.c0 COLLATE BINARY)) ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))AND(TRIM(DISTINCT vt1.c0, vt1.c0))))OR(((vt1.c0)%(vt1.c0)))))AND(vt1.c0 COLLATE BINARY)))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)), ((((((vt1.c0)>(vt1.c0)))OR((('')<<(vt1.c0)))))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(vt1.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))AND(TRIM(DISTINCT vt1.c0, vt1.c0))))OR(((vt1.c0)%(vt1.c0)))))AND(vt1.c0 COLLATE BINARY)))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)), ((((((vt1.c0)>(vt1.c0)))OR((('')<<(vt1.c0)))))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)));
SELECT ALL COUNT(*) FROM vt1 WHERE (LIKELY(vt1.c0 COLLATE BINARY)) ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))AND(TRIM(DISTINCT vt1.c0, vt1.c0))))OR(((vt1.c0)%(vt1.c0)))))AND(vt1.c0 COLLATE BINARY)))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)), ((((((vt1.c0)>(vt1.c0)))OR((('')<<(vt1.c0)))))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END));
SELECT COUNT(*) FROM t1 WHERE (CASE (~ (t1.c34))  WHEN CAST(t1.c43 AS INTEGER) THEN (t1.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE (~ (t1.c34))  WHEN CAST(t1.c43 AS INTEGER) THEN (t1.c0 IN ()) END) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CASE (~ (t1.c34))  WHEN CAST(t1.c43 AS INTEGER) THEN (t1.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE (~ (t1.c34))  WHEN CAST(t1.c43 AS INTEGER) THEN (t1.c0 IN ()) END) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CASE (~ (t1.c34))  WHEN CAST(t1.c43 AS INTEGER) THEN (t1.c0 IN ()) END);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (((((rt0.c1, rt0.c2, vt0.c0))<((rt0.c2, rt0.c0, rt0.c2)))) IS TRUE) WHERE (TOTAL_CHANGES()) ORDER BY JULIANDAY(TYPEOF(rt0.c1), (((rt0.c2, '-1584212563', rt0.c1, vt0.c0, rt0.c2))>=((vt0.c0, vt0.c0, rt0.c2, 0X4c675879, rt0.c1))), (((rt0.c0, rt0.c2, vt0.c0))==((vt0.c0, rt0.c0, vt0.c0)))), (-1091611137 IN (rt0.c2)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((((rt0.c1, rt0.c2, vt0.c0))<((rt0.c2, rt0.c0, rt0.c2)))) IS TRUE) ORDER BY JULIANDAY(TYPEOF(rt0.c1), (((rt0.c2, '-1584212563', rt0.c1, vt0.c0, rt0.c2))>=((vt0.c0, vt0.c0, rt0.c2, 0X4c675879, rt0.c1))), (((rt0.c0, rt0.c2, vt0.c0))=((vt0.c0, rt0.c0, vt0.c0)))), (-1091611137 IN (rt0.c2)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (((((rt0.c1, rt0.c2, vt0.c0))<((rt0.c2, rt0.c0, rt0.c2)))) IS TRUE) WHERE (TOTAL_CHANGES()) ORDER BY JULIANDAY(TYPEOF(rt0.c1), (((rt0.c2, '-1584212563', rt0.c1, vt0.c0, rt0.c2))>=((vt0.c0, vt0.c0, rt0.c2, 0X4c675879, rt0.c1))), (((rt0.c0, rt0.c2, vt0.c0))==((vt0.c0, rt0.c0, vt0.c0)))), (-1091611137 IN (rt0.c2)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((((rt0.c1, rt0.c2, vt0.c0))<((rt0.c2, rt0.c0, rt0.c2)))) IS TRUE) ORDER BY JULIANDAY(TYPEOF(rt0.c1), (((rt0.c2, '-1584212563', rt0.c1, vt0.c0, rt0.c2))>=((vt0.c0, vt0.c0, rt0.c2, 0X4c675879, rt0.c1))), (((rt0.c0, rt0.c2, vt0.c0))=((vt0.c0, rt0.c0, vt0.c0)))), (-1091611137 IN (rt0.c2)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (((((rt0.c1, rt0.c2, vt0.c0))<((rt0.c2, rt0.c0, rt0.c2)))) IS TRUE) WHERE (TOTAL_CHANGES()) ORDER BY JULIANDAY(TYPEOF(rt0.c1), (((rt0.c2, '-1584212563', rt0.c1, vt0.c0, rt0.c2))>=((vt0.c0, vt0.c0, rt0.c2, 0X4c675879, rt0.c1))), (((rt0.c0, rt0.c2, vt0.c0))==((vt0.c0, rt0.c0, vt0.c0)))), (-1091611137 IN (rt0.c2)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ('-1148491485');
SELECT SUM(count) FROM (SELECT ALL (('-1148491485') IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ('-1148491485');
SELECT SUM(count) FROM (SELECT ALL (('-1148491485') IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ('-1148491485');
SELECT COUNT(*) FROM vt1, t1, rt0 WHERE (((((((((((vt1.c0)OR(t1.c1)))OR(t1.c0)))OR(rt0.c1)))OR(t1.c1)))GLOB(((rt0.c1) BETWEEN (t1.c43) AND (t1.c34))))) ORDER BY CAST('AÃ²j' AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)OR(t1.c1)))OR(t1.c0)))OR(rt0.c1)))OR(t1.c1)))GLOB(((rt0.c1) BETWEEN (t1.c43) AND (t1.c34))))) IS TRUE)  as count FROM vt1, t1, rt0 ORDER BY CAST('AÃ²j' AS BLOB) DESC);
SELECT COUNT(*) FROM vt1, t1, rt0 WHERE (((((((((((vt1.c0)OR(t1.c1)))OR(t1.c0)))OR(rt0.c1)))OR(t1.c1)))GLOB(((rt0.c1) BETWEEN (t1.c43) AND (t1.c34))))) ORDER BY CAST('AÃ²j' AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)OR(t1.c1)))OR(t1.c0)))OR(rt0.c1)))OR(t1.c1)))GLOB(((rt0.c1) BETWEEN (t1.c43) AND (t1.c34))))) IS TRUE)  as count FROM vt1, t1, rt0 ORDER BY CAST('AÃ²j' AS BLOB) DESC);
SELECT COUNT(*) FROM vt1, t1, rt0 WHERE (((((((((((vt1.c0)OR(t1.c1)))OR(t1.c0)))OR(rt0.c1)))OR(t1.c1)))GLOB(((rt0.c1) BETWEEN (t1.c43) AND (t1.c34))))) ORDER BY CAST('AÃ²j' AS BLOB) DESC;
SELECT COUNT(*) FROM t1, vt1, rt0 WHERE ((- (CASE WHEN t1.c43 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c0 THEN vt1.c0 ELSE 0.8381363532470774 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN t1.c43 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c0 THEN vt1.c0 ELSE 0.8381363532470774 END))) IS TRUE)  as count FROM t1, vt1, rt0);
SELECT COUNT(*) FROM t1, vt1, rt0 WHERE ((- (CASE WHEN t1.c43 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c0 THEN vt1.c0 ELSE 0.8381363532470774 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN t1.c43 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c0 THEN vt1.c0 ELSE 0.8381363532470774 END))) IS TRUE)  as count FROM t1, vt1, rt0);
SELECT COUNT(*) FROM t1, vt1, rt0 WHERE ((- (CASE WHEN t1.c43 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c0 THEN vt1.c0 ELSE 0.8381363532470774 END)));
SELECT * FROM vt0 WHERE (CASE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))  WHEN CAST(vt0.c0 AS REAL) THEN vt0.c0 COLLATE BINARY ELSE (vt0.c0 IN ()) END) ORDER BY (((vt0.c0)IS NOT(vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))  WHEN CAST(vt0.c0 AS REAL) THEN vt0.c0 COLLATE BINARY ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)IS NOT(vt0.c0)) IN ()) DESC);
SELECT * FROM vt0 WHERE (CASE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))  WHEN CAST(vt0.c0 AS REAL) THEN vt0.c0 COLLATE BINARY ELSE (vt0.c0 IN ()) END) ORDER BY (((vt0.c0)IS NOT(vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))  WHEN CAST(vt0.c0 AS REAL) THEN vt0.c0 COLLATE BINARY ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)IS NOT(vt0.c0)) IN ()) DESC);
SELECT * FROM vt0 WHERE (CASE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))  WHEN CAST(vt0.c0 AS REAL) THEN vt0.c0 COLLATE BINARY ELSE (vt0.c0 IN ()) END) ORDER BY (((vt0.c0)IS NOT(vt0.c0)) IN ()) DESC;
SELECT ALL * FROM vt1, rt0 WHERE (ABS(rt0.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((ABS(rt0.c2 COLLATE NOCASE)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (ABS(rt0.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((ABS(rt0.c2 COLLATE NOCASE)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (ABS(rt0.c2 COLLATE NOCASE));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t1 ON ((((((t1.c34) NOT NULL))AND(json_valid(t1.c34))))AND(t1.c1)) LEFT OUTER JOIN vt0 ON (((NOT (rt0.c0)))<=((+ (t1.c1)))) WHERE (((((rt0.c0)LIKE(t1.c34)))-(((rt0.c2)IS NOT(t1.c1))))) ORDER BY rt0.c0 COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)LIKE(t1.c34)))-(((rt0.c2)IS NOT(t1.c1))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON ((((((t1.c34) NOT NULL))AND(json_valid(t1.c34))))AND(t1.c1)) LEFT OUTER JOIN vt0 ON (((NOT (rt0.c0)))<=((+ (t1.c1)))) ORDER BY rt0.c0 COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t1 ON ((((((t1.c34) NOT NULL))AND(json_valid(t1.c34))))AND(t1.c1)) LEFT OUTER JOIN vt0 ON (((NOT (rt0.c0)))<=((+ (t1.c1)))) WHERE (((((rt0.c0)LIKE(t1.c34)))-(((rt0.c2)IS NOT(t1.c1))))) ORDER BY rt0.c0 COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)LIKE(t1.c34)))-(((rt0.c2)IS NOT(t1.c1))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON ((((((t1.c34) NOT NULL))AND(json_valid(t1.c34))))AND(t1.c1)) LEFT OUTER JOIN vt0 ON (((NOT (rt0.c0)))<=((+ (t1.c1)))) ORDER BY rt0.c0 COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t1 ON ((((((t1.c34) NOT NULL))AND(json_valid(t1.c34))))AND(t1.c1)) LEFT OUTER JOIN vt0 ON (((NOT (rt0.c0)))<=((+ (t1.c1)))) WHERE (((((rt0.c0)LIKE(t1.c34)))-(((rt0.c2)IS NOT(t1.c1))))) ORDER BY rt0.c0 COLLATE RTRIM  NULLS FIRST;
SELECT * FROM vt0, vt1, t1 WHERE (((((x''))!=((567452645))) IN ())) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ((((((x''))!=((567452645))) IN ())) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY x'' ASC);
SELECT * FROM vt0, vt1, t1 WHERE (((((x''))!=((567452645))) IN ())) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ((((((x''))!=((567452645))) IN ())) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY x'' ASC);
SELECT * FROM vt0, vt1, t1 WHERE (((((x''))!=((567452645))) IN ())) ORDER BY x'' ASC;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t1 ON ((t1.c1) BETWEEN (((rt0.c1)*(t1.c1))) AND (json(x'9db1'))) INNER JOIN vt1 ON ((((((((rt0.c1)OR(rt0.c2)))AND(t1.c34)))OR((- (rt0.c2)))))AND(UNLIKELY(t1.c0))) WHERE (json(((((((((vt1.c0)OR(rt0.c1)))OR(vt1.c0)))OR(t1.c43)))AND(NULL))));
SELECT SUM(count) FROM (SELECT ALL ((json(((((((((vt1.c0)OR(rt0.c1)))OR(vt1.c0)))OR(t1.c43)))AND(NULL)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON ((t1.c1) BETWEEN (((rt0.c1)*(t1.c1))) AND (json(x'9db1'))) INNER JOIN vt1 ON ((((((((rt0.c1)OR(rt0.c2)))AND(t1.c34)))OR((- (rt0.c2)))))AND(UNLIKELY(t1.c0))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t1 ON ((t1.c1) BETWEEN (((rt0.c1)*(t1.c1))) AND (json(x'9db1'))) INNER JOIN vt1 ON ((((((((rt0.c1)OR(rt0.c2)))AND(t1.c34)))OR((- (rt0.c2)))))AND(UNLIKELY(t1.c0))) WHERE (json(((((((((vt1.c0)OR(rt0.c1)))OR(vt1.c0)))OR(t1.c43)))AND(NULL))));
SELECT SUM(count) FROM (SELECT ALL ((json(((((((((vt1.c0)OR(rt0.c1)))OR(vt1.c0)))OR(t1.c43)))AND(NULL)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON ((t1.c1) BETWEEN (((rt0.c1)*(t1.c1))) AND (json(x'9db1'))) INNER JOIN vt1 ON ((((((((rt0.c1)OR(rt0.c2)))AND(t1.c34)))OR((- (rt0.c2)))))AND(UNLIKELY(t1.c0))));
SELECT ALL COUNT(*) FROM t1, vt1, rt0 WHERE (CAST(((t1.c0) BETWEEN (t1.c43) AND (vt1.c0)) AS TEXT)) ORDER BY (~ (UPPER(DISTINCT vt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c0) BETWEEN (t1.c43) AND (vt1.c0)) AS TEXT)) IS TRUE)  as count FROM t1, vt1, rt0 ORDER BY (~ (UPPER(DISTINCT vt1.c0))) ASC);
SELECT ALL COUNT(*) FROM t1, vt1, rt0 WHERE (CAST(((t1.c0) BETWEEN (t1.c43) AND (vt1.c0)) AS TEXT)) ORDER BY (~ (UPPER(DISTINCT vt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c0) BETWEEN (t1.c43) AND (vt1.c0)) AS TEXT)) IS TRUE)  as count FROM t1, vt1, rt0 ORDER BY (~ (UPPER(DISTINCT vt1.c0))) ASC);
SELECT ALL COUNT(*) FROM t1, vt1, rt0 WHERE (CAST(((t1.c0) BETWEEN (t1.c43) AND (vt1.c0)) AS TEXT)) ORDER BY (~ (UPPER(DISTINCT vt1.c0))) ASC;
SELECT ALL * FROM t1, vt1, vt0, rt0 WHERE (NULLIF(vt0.c0, ((t1.c0) NOT BETWEEN (0.8088406427408177) AND (-2100584896)))) ORDER BY ((CAST(rt0.c2 AS REAL))<=(((rt0.c1) NOT BETWEEN (vt0.c0) AND (t1.c43))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(vt0.c0, ((t1.c0) NOT BETWEEN (0.8088406427408177) AND (-2100584896)))) IS TRUE)  as count FROM t1, vt1, vt0, rt0 ORDER BY ((CAST(rt0.c2 AS REAL))<=(((rt0.c1) NOT BETWEEN (vt0.c0) AND (t1.c43))))  NULLS LAST);
SELECT ALL * FROM t1, vt1, vt0, rt0 WHERE (NULLIF(vt0.c0, ((t1.c0) NOT BETWEEN (0.8088406427408177) AND (-2100584896)))) ORDER BY ((CAST(rt0.c2 AS REAL))<=(((rt0.c1) NOT BETWEEN (vt0.c0) AND (t1.c43))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(vt0.c0, ((t1.c0) NOT BETWEEN (0.8088406427408177) AND (-2100584896)))) IS TRUE)  as count FROM t1, vt1, vt0, rt0 ORDER BY ((CAST(rt0.c2 AS REAL))<=(((rt0.c1) NOT BETWEEN (vt0.c0) AND (t1.c43))))  NULLS LAST);
SELECT ALL * FROM t1, vt1, vt0, rt0 WHERE (NULLIF(vt0.c0, ((t1.c0) NOT BETWEEN (0.8088406427408177) AND (-2100584896)))) ORDER BY ((CAST(rt0.c2 AS REAL))<=(((rt0.c1) NOT BETWEEN (vt0.c0) AND (t1.c43))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ('900967324') ORDER BY x''  NULLS LAST, (((('~o9)æ¥Vc')AND((NOT (vt0.c0)))))OR(x''));
SELECT SUM(count) FROM (SELECT ALL (('900967324') IS TRUE)  as count FROM rt0, vt0 ORDER BY x''  NULLS LAST, (((('~o9)æ¥Vc')AND((NOT (vt0.c0)))))OR(x'')));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ('900967324') ORDER BY x''  NULLS LAST, (((('~o9)æ¥Vc')AND((NOT (vt0.c0)))))OR(x''));
SELECT SUM(count) FROM (SELECT ALL (('900967324') IS TRUE)  as count FROM rt0, vt0 ORDER BY x''  NULLS LAST, (((('~o9)æ¥Vc')AND((NOT (vt0.c0)))))OR(x'')));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ('900967324') ORDER BY x''  NULLS LAST, (((('~o9)æ¥Vc')AND((NOT (vt0.c0)))))OR(x''));
SELECT * FROM vt0 INNER JOIN rt0 ON ((((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0))) IS TRUE) WHERE ((- (((rt0.c1) BETWEEN (rt0.c2) AND (712313053)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c1) BETWEEN (rt0.c2) AND (712313053))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0))) IS TRUE));
SELECT * FROM vt0 INNER JOIN rt0 ON ((((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0))) IS TRUE) WHERE ((- (((rt0.c1) BETWEEN (rt0.c2) AND (712313053)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c1) BETWEEN (rt0.c2) AND (712313053))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0))) IS TRUE));
SELECT * FROM vt0 INNER JOIN rt0 ON ((((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0))) IS TRUE) WHERE ((- (((rt0.c1) BETWEEN (rt0.c2) AND (712313053)))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t1 ON TRIM(DISTINCT ((rt0.c0) BETWEEN (t1.c34) AND (t1.c0)), NULLIF(DISTINCT rt0.c0, vt0.c0)) FULL OUTER JOIN rt0 ON (((t1.c1, t1.c0, t1.c34)) NOT BETWEEN (('-1559276650', ((vt0.c0)||(t1.c34)), t1.c43)) AND ((rt0.c0, (+ (t1.c1)), (~ (t1.c34))))) WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t1 ON TRIM(DISTINCT ((rt0.c0) BETWEEN (t1.c34) AND (t1.c0)), NULLIF(DISTINCT rt0.c0, vt0.c0)) FULL OUTER JOIN rt0 ON (((t1.c1, t1.c0, t1.c34)) NOT BETWEEN (('-1559276650', ((vt0.c0)||(t1.c34)), t1.c43)) AND ((rt0.c0, (+ (t1.c1)), (~ (t1.c34))))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t1 ON TRIM(DISTINCT ((rt0.c0) BETWEEN (t1.c34) AND (t1.c0)), NULLIF(DISTINCT rt0.c0, vt0.c0)) FULL OUTER JOIN rt0 ON (((t1.c1, t1.c0, t1.c34)) NOT BETWEEN (('-1559276650', ((vt0.c0)||(t1.c34)), t1.c43)) AND ((rt0.c0, (+ (t1.c1)), (~ (t1.c34))))) WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t1 ON TRIM(DISTINCT ((rt0.c0) BETWEEN (t1.c34) AND (t1.c0)), NULLIF(DISTINCT rt0.c0, vt0.c0)) FULL OUTER JOIN rt0 ON (((t1.c1, t1.c0, t1.c34)) NOT BETWEEN (('-1559276650', ((vt0.c0)||(t1.c34)), t1.c43)) AND ((rt0.c0, (+ (t1.c1)), (~ (t1.c34))))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON CAST(((((vt0.c0)AND(rt0.c2)))AND(vt0.c0)) AS TEXT) FULL OUTER JOIN rt0 ON rt0.c0 WHERE (((((((vt0.c0)OR(1825505776)))AND(rt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(1825505776)))AND(rt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON CAST(((((vt0.c0)AND(rt0.c2)))AND(vt0.c0)) AS TEXT) FULL OUTER JOIN rt0 ON rt0.c0);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON CAST(((((vt0.c0)AND(rt0.c2)))AND(vt0.c0)) AS TEXT) FULL OUTER JOIN rt0 ON rt0.c0 WHERE (((((((vt0.c0)OR(1825505776)))AND(rt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(1825505776)))AND(rt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON CAST(((((vt0.c0)AND(rt0.c2)))AND(vt0.c0)) AS TEXT) FULL OUTER JOIN rt0 ON rt0.c0);
SELECT * FROM t1, vt1, rt0 NOT INDEXED, vt0 WHERE (((CAST('-445233605' AS TEXT))/(rt0.c2))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((CAST('-445233605' AS TEXT))/(rt0.c2))) IS TRUE)  as count FROM t1, vt1, rt0, vt0 ORDER BY vt0.c0);
SELECT * FROM t1, vt1, rt0 NOT INDEXED, vt0 WHERE (((CAST('-445233605' AS TEXT))/(rt0.c2))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((CAST('-445233605' AS TEXT))/(rt0.c2))) IS TRUE)  as count FROM t1, vt1, rt0, vt0 ORDER BY vt0.c0);
SELECT * FROM t1, vt1, rt0 NOT INDEXED, vt0 WHERE (((CAST('-445233605' AS TEXT))/(rt0.c2))) ORDER BY vt0.c0;
SELECT COUNT(*) FROM rt0, vt1, t1 WHERE (LIKELY(t1.c1)) ORDER BY CAST(-1780113942 COLLATE RTRIM AS REAL) ASC  NULLS LAST, t1.c43 ASC, ((t1.c43 COLLATE BINARY)GLOB((((t1.c43))!=((t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(t1.c1)) IS TRUE)  as count FROM rt0, vt1, t1 ORDER BY CAST(-1780113942 COLLATE RTRIM AS REAL) ASC  NULLS LAST, t1.c43 ASC, ((t1.c43 COLLATE BINARY)GLOB((((t1.c43))<>((t1.c0))))));
SELECT COUNT(*) FROM rt0, vt1, t1 WHERE (LIKELY(t1.c1)) ORDER BY CAST(-1780113942 COLLATE RTRIM AS REAL) ASC  NULLS LAST, t1.c43 ASC, ((t1.c43 COLLATE BINARY)GLOB((((t1.c43))!=((t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(t1.c1)) IS TRUE)  as count FROM rt0, vt1, t1 ORDER BY CAST(-1780113942 COLLATE RTRIM AS REAL) ASC  NULLS LAST, t1.c43 ASC, ((t1.c43 COLLATE BINARY)GLOB((((t1.c43))<>((t1.c0))))));
SELECT COUNT(*) FROM rt0, vt1, t1 WHERE (LIKELY(t1.c1)) ORDER BY CAST(-1780113942 COLLATE RTRIM AS REAL) ASC  NULLS LAST, t1.c43 ASC, ((t1.c43 COLLATE BINARY)GLOB((((t1.c43))!=((t1.c0)))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t1 ON ((((rt0.c1) IS TRUE))>((((t1.c1)) BETWEEN (('')) AND ((t1.c34))))) WHERE ((CAST(t1.c1 AS BLOB) IN (CASE WHEN rt0.c1 THEN t1.c43 END))) ORDER BY (NOT (((((rt0.c1)OR(t1.c34)))AND(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(t1.c1 AS BLOB) IN (CASE WHEN rt0.c1 THEN t1.c43 END))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON ((((rt0.c1) IS TRUE))>((((t1.c1)) BETWEEN (('')) AND ((t1.c34))))) ORDER BY (NOT (((((rt0.c1)OR(t1.c34)))AND(rt0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t1 ON ((((rt0.c1) IS TRUE))>((((t1.c1)) BETWEEN (('')) AND ((t1.c34))))) WHERE ((CAST(t1.c1 AS BLOB) IN (CASE WHEN rt0.c1 THEN t1.c43 END))) ORDER BY (NOT (((((rt0.c1)OR(t1.c34)))AND(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(t1.c1 AS BLOB) IN (CASE WHEN rt0.c1 THEN t1.c43 END))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON ((((rt0.c1) IS TRUE))>((((t1.c1)) BETWEEN (('')) AND ((t1.c34))))) ORDER BY (NOT (((((rt0.c1)OR(t1.c34)))AND(rt0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t1 ON ((((rt0.c1) IS TRUE))>((((t1.c1)) BETWEEN (('')) AND ((t1.c34))))) WHERE ((CAST(t1.c1 AS BLOB) IN (CASE WHEN rt0.c1 THEN t1.c43 END))) ORDER BY (NOT (((((rt0.c1)OR(t1.c34)))AND(rt0.c2))))  NULLS FIRST;
SELECT COUNT(*) FROM t1 FULL OUTER JOIN rt0 ON (((CASE t1.c0  WHEN t1.c1 THEN rt0.c0 WHEN rt0.c1 THEN t1.c1 WHEN rt0.c2 THEN t1.c34 ELSE t1.c1 END))<((CAST(rt0.c2 AS BLOB)))) CROSS JOIN vt0 ON ((((t1.c34) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((rt0.c0)OR(rt0.c0)))AND(0.29272826971536436)))) FULL OUTER JOIN vt1 ON rt0.c2 WHERE (((t1.c1 COLLATE RTRIM) NOT BETWEEN ((((t1.c34, t1.c0, t1.c43))==((rt0.c1, rt0.c1, vt1.c0)))) AND ((~ (t1.c34))))) ORDER BY (- (rt0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c1 COLLATE RTRIM) NOT BETWEEN ((((t1.c34, t1.c0, t1.c43))==((rt0.c1, rt0.c1, vt1.c0)))) AND ((~ (t1.c34))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON (((CASE t1.c0  WHEN t1.c1 THEN rt0.c0 WHEN rt0.c1 THEN t1.c1 WHEN rt0.c2 THEN t1.c34 ELSE t1.c1 END))<((CAST(rt0.c2 AS BLOB)))) CROSS JOIN vt0 ON ((((t1.c34) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((rt0.c0)OR(rt0.c0)))AND(0.29272826971536436)))) FULL OUTER JOIN vt1 ON rt0.c2 ORDER BY (- (rt0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM t1 FULL OUTER JOIN rt0 ON (((CASE t1.c0  WHEN t1.c1 THEN rt0.c0 WHEN rt0.c1 THEN t1.c1 WHEN rt0.c2 THEN t1.c34 ELSE t1.c1 END))<((CAST(rt0.c2 AS BLOB)))) CROSS JOIN vt0 ON ((((t1.c34) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((rt0.c0)OR(rt0.c0)))AND(0.29272826971536436)))) FULL OUTER JOIN vt1 ON rt0.c2 WHERE (((t1.c1 COLLATE RTRIM) NOT BETWEEN ((((t1.c34, t1.c0, t1.c43))==((rt0.c1, rt0.c1, vt1.c0)))) AND ((~ (t1.c34))))) ORDER BY (- (rt0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c1 COLLATE RTRIM) NOT BETWEEN ((((t1.c34, t1.c0, t1.c43))==((rt0.c1, rt0.c1, vt1.c0)))) AND ((~ (t1.c34))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON (((CASE t1.c0  WHEN t1.c1 THEN rt0.c0 WHEN rt0.c1 THEN t1.c1 WHEN rt0.c2 THEN t1.c34 ELSE t1.c1 END))<((CAST(rt0.c2 AS BLOB)))) CROSS JOIN vt0 ON ((((t1.c34) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((rt0.c0)OR(rt0.c0)))AND(0.29272826971536436)))) FULL OUTER JOIN vt1 ON rt0.c2 ORDER BY (- (rt0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE ((CAST(t1.c1 AS TEXT) IN (((t1.c1)<=(t1.c0))))) ORDER BY LIKELY(DISTINCT ((t1.c34) NOT BETWEEN (t1.c0) AND (t1.c0))) ASC, CASE ((t1.c43) NOT BETWEEN (t1.c1) AND (t1.c34))  WHEN ((t1.c0)==(x'')) THEN ((t1.c34)<(t1.c34)) ELSE ((t1.c1)>=(t1.c0)) END;
SELECT SUM(count) FROM (SELECT (((CAST(t1.c1 AS TEXT) IN (((t1.c1)<=(t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY LIKELY(DISTINCT ((t1.c34) NOT BETWEEN (t1.c0) AND (t1.c0))) ASC, CASE ((t1.c43) NOT BETWEEN (t1.c1) AND (t1.c34))  WHEN ((t1.c0)==(x'')) THEN ((t1.c34)<(t1.c34)) ELSE ((t1.c1)>=(t1.c0)) END);
SELECT COUNT(*) FROM t1 WHERE ((CAST(t1.c1 AS TEXT) IN (((t1.c1)<=(t1.c0))))) ORDER BY LIKELY(DISTINCT ((t1.c34) NOT BETWEEN (t1.c0) AND (t1.c0))) ASC, CASE ((t1.c43) NOT BETWEEN (t1.c1) AND (t1.c34))  WHEN ((t1.c0)==(x'')) THEN ((t1.c34)<(t1.c34)) ELSE ((t1.c1)>=(t1.c0)) END;
SELECT SUM(count) FROM (SELECT (((CAST(t1.c1 AS TEXT) IN (((t1.c1)<=(t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY LIKELY(DISTINCT ((t1.c34) NOT BETWEEN (t1.c0) AND (t1.c0))) ASC, CASE ((t1.c43) NOT BETWEEN (t1.c1) AND (t1.c34))  WHEN ((t1.c0)==(x'')) THEN ((t1.c34)<(t1.c34)) ELSE ((t1.c1)>=(t1.c0)) END);
SELECT COUNT(*) FROM t1 WHERE ((CAST(t1.c1 AS TEXT) IN (((t1.c1)<=(t1.c0))))) ORDER BY LIKELY(DISTINCT ((t1.c34) NOT BETWEEN (t1.c0) AND (t1.c0))) ASC, CASE ((t1.c43) NOT BETWEEN (t1.c1) AND (t1.c34))  WHEN ((t1.c0)==(x'')) THEN ((t1.c34)<(t1.c34)) ELSE ((t1.c1)>=(t1.c0)) END;
SELECT * FROM vt0, t1, vt1, rt0 WHERE ((+ (((t1.c43)LIKE(t1.c0))))) ORDER BY t1.c34  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((t1.c43)LIKE(t1.c0))))) IS TRUE)  as count FROM vt0, t1, vt1, rt0 ORDER BY t1.c34  NULLS FIRST);
SELECT * FROM vt0, t1, vt1, rt0 WHERE ((+ (((t1.c43)LIKE(t1.c0))))) ORDER BY t1.c34  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((t1.c43)LIKE(t1.c0))))) IS TRUE)  as count FROM vt0, t1, vt1, rt0 ORDER BY t1.c34  NULLS FIRST);
SELECT * FROM vt0, t1, vt1, rt0 WHERE ((+ (((t1.c43)LIKE(t1.c0))))) ORDER BY t1.c34  NULLS FIRST;
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((UPPER(DISTINCT vt1.c0)) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (UPPER(DISTINCT rt0.c1))) LEFT OUTER JOIN t1 ON (((vt0.c0) IS TRUE) IN ()) INNER JOIN vt1 ON (((t1.c34)) NOT BETWEEN ((CAST(t1.c43 AS TEXT))) AND ((rt0.c1))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((UPPER(DISTINCT vt1.c0)) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (UPPER(DISTINCT rt0.c1))) LEFT OUTER JOIN t1 ON (((vt0.c0) IS TRUE) IN ()) INNER JOIN vt1 ON (((t1.c34)) NOT BETWEEN ((CAST(t1.c43 AS TEXT))) AND ((rt0.c1))));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((UPPER(DISTINCT vt1.c0)) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (UPPER(DISTINCT rt0.c1))) LEFT OUTER JOIN t1 ON (((vt0.c0) IS TRUE) IN ()) INNER JOIN vt1 ON (((t1.c34)) NOT BETWEEN ((CAST(t1.c43 AS TEXT))) AND ((rt0.c1))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((UPPER(DISTINCT vt1.c0)) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (UPPER(DISTINCT rt0.c1))) LEFT OUTER JOIN t1 ON (((vt0.c0) IS TRUE) IN ()) INNER JOIN vt1 ON (((t1.c34)) NOT BETWEEN ((CAST(t1.c43 AS TEXT))) AND ((rt0.c1))));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((UPPER(DISTINCT vt1.c0)) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (UPPER(DISTINCT rt0.c1))) LEFT OUTER JOIN t1 ON (((vt0.c0) IS TRUE) IN ()) INNER JOIN vt1 ON (((t1.c34)) NOT BETWEEN ((CAST(t1.c43 AS TEXT))) AND ((rt0.c1))) WHERE (vt0.c0);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0) BETWEEN ('') AND (vt1.c0)) AS BLOB)) ORDER BY ((((vt1.c0) NOTNULL))AND(json_remove(vt1.c0, vt1.c0, vt1.c0, vt1.c0))), (((vt1.c0 IN ())) IS TRUE);
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) BETWEEN ('') AND (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOTNULL))AND(json_remove(vt1.c0, vt1.c0, vt1.c0, vt1.c0))), (((vt1.c0 IN ())) IS TRUE));
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0) BETWEEN ('') AND (vt1.c0)) AS BLOB)) ORDER BY ((((vt1.c0) NOTNULL))AND(json_remove(vt1.c0, vt1.c0, vt1.c0, vt1.c0))), (((vt1.c0 IN ())) IS TRUE);
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) BETWEEN ('') AND (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOTNULL))AND(json_remove(vt1.c0, vt1.c0, vt1.c0, vt1.c0))), (((vt1.c0 IN ())) IS TRUE));
SELECT ALL * FROM vt1 WHERE ((+ (((vt1.c0)*(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt1.c0)*(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((+ (((vt1.c0)*(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt1.c0)*(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((+ (((vt1.c0)*(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t1 ON CASE WHEN ((((((((vt0.c0)AND(t1.c43)))AND(vt0.c0)))OR(t1.c34)))AND(t1.c43)) THEN NULL ELSE ((x'')+(t1.c0)) END WHERE (((((t1.c34) BETWEEN (vt0.c0) AND (t1.c34))) IS TRUE)) ORDER BY ((NULLIF(NULL, t1.c0)) IS TRUE), (((((t1.c34)<(t1.c34)), t1.c34, CAST(t1.c0 AS NUMERIC)))<(((((t1.c43)) BETWEEN ((vt0.c0)) AND ((t1.c34))), t1.c34 COLLATE RTRIM, ((((((((t1.c0)OR(vt0.c0)))OR(vt0.c0)))AND(t1.c43)))OR(t1.c1))))) DESC  NULLS FIRST, IFNULL(DISTINCT vt0.c0, t1.c1) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c34) BETWEEN (vt0.c0) AND (t1.c34))) IS TRUE)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON CASE WHEN ((((((((vt0.c0)AND(t1.c43)))AND(vt0.c0)))OR(t1.c34)))AND(t1.c43)) THEN NULL ELSE ((x'')+(t1.c0)) END ORDER BY ((NULLIF(NULL, t1.c0)) IS TRUE), (((((t1.c34)<(t1.c34)), t1.c34, CAST(t1.c0 AS NUMERIC)))<(((((t1.c43)) BETWEEN ((vt0.c0)) AND ((t1.c34))), t1.c34 COLLATE RTRIM, ((((((((t1.c0)OR(vt0.c0)))OR(vt0.c0)))AND(t1.c43)))OR(t1.c1))))) DESC  NULLS FIRST, IFNULL(DISTINCT vt0.c0, t1.c1) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t1 ON CASE WHEN ((((((((vt0.c0)AND(t1.c43)))AND(vt0.c0)))OR(t1.c34)))AND(t1.c43)) THEN NULL ELSE ((x'')+(t1.c0)) END WHERE (((((t1.c34) BETWEEN (vt0.c0) AND (t1.c34))) IS TRUE)) ORDER BY ((NULLIF(NULL, t1.c0)) IS TRUE), (((((t1.c34)<(t1.c34)), t1.c34, CAST(t1.c0 AS NUMERIC)))<(((((t1.c43)) BETWEEN ((vt0.c0)) AND ((t1.c34))), t1.c34 COLLATE RTRIM, ((((((((t1.c0)OR(vt0.c0)))OR(vt0.c0)))AND(t1.c43)))OR(t1.c1))))) DESC  NULLS FIRST, IFNULL(DISTINCT vt0.c0, t1.c1) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c34) BETWEEN (vt0.c0) AND (t1.c34))) IS TRUE)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON CASE WHEN ((((((((vt0.c0)AND(t1.c43)))AND(vt0.c0)))OR(t1.c34)))AND(t1.c43)) THEN NULL ELSE ((x'')+(t1.c0)) END ORDER BY ((NULLIF(NULL, t1.c0)) IS TRUE), (((((t1.c34)<(t1.c34)), t1.c34, CAST(t1.c0 AS NUMERIC)))<(((((t1.c43)) BETWEEN ((vt0.c0)) AND ((t1.c34))), t1.c34 COLLATE RTRIM, ((((((((t1.c0)OR(vt0.c0)))OR(vt0.c0)))AND(t1.c43)))OR(t1.c1))))) DESC  NULLS FIRST, IFNULL(DISTINCT vt0.c0, t1.c1) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t1 ON CASE WHEN ((((((((vt0.c0)AND(t1.c43)))AND(vt0.c0)))OR(t1.c34)))AND(t1.c43)) THEN NULL ELSE ((x'')+(t1.c0)) END WHERE (((((t1.c34) BETWEEN (vt0.c0) AND (t1.c34))) IS TRUE)) ORDER BY ((NULLIF(NULL, t1.c0)) IS TRUE), (((((t1.c34)<(t1.c34)), t1.c34, CAST(t1.c0 AS NUMERIC)))<(((((t1.c43)) BETWEEN ((vt0.c0)) AND ((t1.c34))), t1.c34 COLLATE RTRIM, ((((((((t1.c0)OR(vt0.c0)))OR(vt0.c0)))AND(t1.c43)))OR(t1.c1))))) DESC  NULLS FIRST, IFNULL(DISTINCT vt0.c0, t1.c1) COLLATE RTRIM ASC  NULLS LAST;
SELECT * FROM t1 RIGHT OUTER JOIN vt1 ON LIKELY(t1.c1 COLLATE NOCASE) CROSS JOIN rt0 ON CAST(((NULL) BETWEEN (rt0.c1) AND (rt0.c2)) AS BLOB) WHERE ((NOT ((NOT (x''))))) ORDER BY (((CAST(rt0.c1 AS NUMERIC)))<((rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT ((NOT (x''))))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt1 ON LIKELY(t1.c1 COLLATE NOCASE) CROSS JOIN rt0 ON CAST(((NULL) BETWEEN (rt0.c1) AND (rt0.c2)) AS BLOB) ORDER BY (((CAST(rt0.c1 AS NUMERIC)))<((rt0.c1))) ASC);
SELECT * FROM t1 RIGHT OUTER JOIN vt1 ON LIKELY(t1.c1 COLLATE NOCASE) CROSS JOIN rt0 ON CAST(((NULL) BETWEEN (rt0.c1) AND (rt0.c2)) AS BLOB) WHERE ((NOT ((NOT (x''))))) ORDER BY (((CAST(rt0.c1 AS NUMERIC)))<((rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT ((NOT (x''))))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt1 ON LIKELY(t1.c1 COLLATE NOCASE) CROSS JOIN rt0 ON CAST(((NULL) BETWEEN (rt0.c1) AND (rt0.c2)) AS BLOB) ORDER BY (((CAST(rt0.c1 AS NUMERIC)))<((rt0.c1))) ASC);
SELECT * FROM t1 RIGHT OUTER JOIN vt1 ON LIKELY(t1.c1 COLLATE NOCASE) CROSS JOIN rt0 ON CAST(((NULL) BETWEEN (rt0.c1) AND (rt0.c2)) AS BLOB) WHERE ((NOT ((NOT (x''))))) ORDER BY (((CAST(rt0.c1 AS NUMERIC)))<((rt0.c1))) ASC;
SELECT ALL COUNT(*) FROM vt1, vt0 NATURAL JOIN rt0 WHERE (((((rt0.c0)<=(rt0.c2)))IS((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)<=(rt0.c2)))IS((NULL IN ())))) IS TRUE)  as count FROM vt1, vt0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM vt1, vt0 NATURAL JOIN rt0 WHERE (((((rt0.c0)<=(rt0.c2)))IS((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)<=(rt0.c2)))IS((NULL IN ())))) IS TRUE)  as count FROM vt1, vt0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM vt1, vt0 NATURAL JOIN rt0 WHERE (((((rt0.c0)<=(rt0.c2)))IS((NULL IN ()))));
SELECT * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) ISNULL)) ORDER BY ((((vt1.c0 COLLATE NOCASE)AND(vt1.c0 COLLATE RTRIM)))AND(((vt1.c0) ISNULL)))  NULLS FIRST, ((x'1cbd')OR(json_array_length(vt1.c0, vt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0 COLLATE NOCASE)AND(vt1.c0 COLLATE RTRIM)))AND(((vt1.c0) ISNULL)))  NULLS FIRST, ((x'1cbd')OR(json_array_length(vt1.c0, vt1.c0))) DESC);
SELECT * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) ISNULL)) ORDER BY ((((vt1.c0 COLLATE NOCASE)AND(vt1.c0 COLLATE RTRIM)))AND(((vt1.c0) ISNULL)))  NULLS FIRST, ((x'1cbd')OR(json_array_length(vt1.c0, vt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0 COLLATE NOCASE)AND(vt1.c0 COLLATE RTRIM)))AND(((vt1.c0) ISNULL)))  NULLS FIRST, ((x'1cbd')OR(json_array_length(vt1.c0, vt1.c0))) DESC);
SELECT * FROM vt1, rt0, vt0, t1 WHERE (CAST(((t1.c1)-(rt0.c0)) AS REAL)) ORDER BY CASE vt0.c0 COLLATE RTRIM  WHEN CAST(t1.c34 AS BLOB) THEN t1.c0 WHEN (((rt0.c1))<((t1.c34))) THEN CASE WHEN vt0.c0 THEN rt0.c1 WHEN t1.c43 THEN t1.c0 WHEN '2019598442' THEN rt0.c1 END WHEN (((vt0.c0))=((rt0.c1))) THEN CASE WHEN t1.c34 THEN rt0.c1 ELSE rt0.c2 END ELSE TYPEOF(DISTINCT vt0.c0) END DESC  NULLS FIRST, CASE WHEN '0.0' THEN json_patch(vt1.c0, t1.c0) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c1)-(rt0.c0)) AS REAL)) IS TRUE)  as count FROM vt1, rt0, vt0, t1 ORDER BY CASE vt0.c0 COLLATE RTRIM  WHEN CAST(t1.c34 AS BLOB) THEN t1.c0 WHEN (((rt0.c1))<((t1.c34))) THEN CASE WHEN vt0.c0 THEN rt0.c1 WHEN t1.c43 THEN t1.c0 WHEN '2019598442' THEN rt0.c1 END WHEN (((vt0.c0))==((rt0.c1))) THEN CASE WHEN t1.c34 THEN rt0.c1 ELSE rt0.c2 END ELSE TYPEOF(DISTINCT vt0.c0) END DESC  NULLS FIRST, CASE WHEN '0.0' THEN json_patch(vt1.c0, t1.c0) END DESC  NULLS LAST);
SELECT * FROM vt1, rt0, vt0, t1 WHERE (CAST(((t1.c1)-(rt0.c0)) AS REAL)) ORDER BY CASE vt0.c0 COLLATE RTRIM  WHEN CAST(t1.c34 AS BLOB) THEN t1.c0 WHEN (((rt0.c1))<((t1.c34))) THEN CASE WHEN vt0.c0 THEN rt0.c1 WHEN t1.c43 THEN t1.c0 WHEN '2019598442' THEN rt0.c1 END WHEN (((vt0.c0))=((rt0.c1))) THEN CASE WHEN t1.c34 THEN rt0.c1 ELSE rt0.c2 END ELSE TYPEOF(DISTINCT vt0.c0) END DESC  NULLS FIRST, CASE WHEN '0.0' THEN json_patch(vt1.c0, t1.c0) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c1)-(rt0.c0)) AS REAL)) IS TRUE)  as count FROM vt1, rt0, vt0, t1 ORDER BY CASE vt0.c0 COLLATE RTRIM  WHEN CAST(t1.c34 AS BLOB) THEN t1.c0 WHEN (((rt0.c1))<((t1.c34))) THEN CASE WHEN vt0.c0 THEN rt0.c1 WHEN t1.c43 THEN t1.c0 WHEN '2019598442' THEN rt0.c1 END WHEN (((vt0.c0))==((rt0.c1))) THEN CASE WHEN t1.c34 THEN rt0.c1 ELSE rt0.c2 END ELSE TYPEOF(DISTINCT vt0.c0) END DESC  NULLS FIRST, CASE WHEN '0.0' THEN json_patch(vt1.c0, t1.c0) END DESC  NULLS LAST);
SELECT * FROM vt1, rt0, vt0, t1 WHERE (CAST(((t1.c1)-(rt0.c0)) AS REAL)) ORDER BY CASE vt0.c0 COLLATE RTRIM  WHEN CAST(t1.c34 AS BLOB) THEN t1.c0 WHEN (((rt0.c1))<((t1.c34))) THEN CASE WHEN vt0.c0 THEN rt0.c1 WHEN t1.c43 THEN t1.c0 WHEN '2019598442' THEN rt0.c1 END WHEN (((vt0.c0))=((rt0.c1))) THEN CASE WHEN t1.c34 THEN rt0.c1 ELSE rt0.c2 END ELSE TYPEOF(DISTINCT vt0.c0) END DESC  NULLS FIRST, CASE WHEN '0.0' THEN json_patch(vt1.c0, t1.c0) END DESC  NULLS LAST;
SELECT * FROM t1 NATURAL JOIN rt0 WHERE (LIKELIHOOD((t1.c1 IN ()), 0.935635558072899));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((t1.c1 IN ()), 0.935635558072899)) IS TRUE)  as count FROM t1 NATURAL JOIN rt0);
SELECT * FROM t1 NATURAL JOIN rt0 WHERE (LIKELIHOOD((t1.c1 IN ()), 0.935635558072899));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((t1.c1 IN ()), 0.935635558072899)) IS TRUE)  as count FROM t1 NATURAL JOIN rt0);
SELECT * FROM t1 NATURAL JOIN rt0 WHERE (LIKELIHOOD((t1.c1 IN ()), 0.935635558072899));
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE WHEN 'P''f' THEN vt0.c0 ELSE vt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN 'P''f' THEN vt0.c0 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE WHEN 'P''f' THEN vt0.c0 ELSE vt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN 'P''f' THEN vt0.c0 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE WHEN 'P''f' THEN vt0.c0 ELSE vt0.c0 END IN ()));
SELECT ALL * FROM vt1, t1 WHERE ((((t1.c34)) BETWEEN ((((vt1.c0)IS NOT(t1.c0)))) AND ((((vt1.c0)>=(t1.c34))))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c34)) BETWEEN ((((vt1.c0)IS NOT(t1.c0)))) AND ((((vt1.c0)>=(t1.c34)))))) IS TRUE)  as count FROM vt1, t1);
SELECT ALL * FROM vt1, t1 WHERE ((((t1.c34)) BETWEEN ((((vt1.c0)IS NOT(t1.c0)))) AND ((((vt1.c0)>=(t1.c34))))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c34)) BETWEEN ((((vt1.c0)IS NOT(t1.c0)))) AND ((((vt1.c0)>=(t1.c34)))))) IS TRUE)  as count FROM vt1, t1);
SELECT ALL * FROM vt1, t1 WHERE ((((t1.c34)) BETWEEN ((((vt1.c0)IS NOT(t1.c0)))) AND ((((vt1.c0)>=(t1.c34))))));
SELECT COUNT(*) FROM vt1 WHERE (CAST(CAST(vt1.c0 AS REAL) AS REAL)) ORDER BY vt1.c0 ASC, ((0.48416373082501607)LIKE((((vt1.c0))>((vt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c0 AS REAL) AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC, ((0.48416373082501607)LIKE((((vt1.c0))>((vt1.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (CAST(CAST(vt1.c0 AS REAL) AS REAL)) ORDER BY vt1.c0 ASC, ((0.48416373082501607)LIKE((((vt1.c0))>((vt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c0 AS REAL) AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC, ((0.48416373082501607)LIKE((((vt1.c0))>((vt1.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (CAST(CAST(vt1.c0 AS REAL) AS REAL)) ORDER BY vt1.c0 ASC, ((0.48416373082501607)LIKE((((vt1.c0))>((vt1.c0)))))  NULLS FIRST;
SELECT ALL * FROM t1 INNER JOIN vt1 ON ((t1.c1 COLLATE RTRIM) NOT BETWEEN (t1.c0 COLLATE RTRIM) AND (((vt0.c0)/(t1.c43)))) LEFT OUTER JOIN vt0 ON ((vt0.c0) ISNULL) COLLATE BINARY WHERE (CASE CAST(t1.c34 AS TEXT)  WHEN ((0.2198352227966407) NOT NULL) THEN CASE t1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE NULL END WHEN CAST(NULL AS INTEGER) THEN (vt0.c0 IN (t1.c1)) WHEN CASE WHEN t1.c0 THEN 0.688682720170074 ELSE t1.c43 END THEN ((((vt1.c0)AND(vt1.c0)))OR(t1.c1)) END) ORDER BY (((t1.c0) NOT NULL) IN ()) ASC  NULLS LAST, rtreenode((t1.c43 IN (vt0.c0)), ((vt1.c0)=(t1.c34)));
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t1.c34 AS TEXT)  WHEN ((0.2198352227966407) NOT NULL) THEN CASE t1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE NULL END WHEN CAST(NULL AS INTEGER) THEN (vt0.c0 IN (t1.c1)) WHEN CASE WHEN t1.c0 THEN 0.688682720170074 ELSE t1.c43 END THEN ((((vt1.c0)AND(vt1.c0)))OR(t1.c1)) END) IS TRUE)  as count FROM t1 INNER JOIN vt1 ON ((t1.c1 COLLATE RTRIM) NOT BETWEEN (t1.c0 COLLATE RTRIM) AND (((vt0.c0)/(t1.c43)))) LEFT OUTER JOIN vt0 ON ((vt0.c0) ISNULL) COLLATE BINARY ORDER BY (((t1.c0) NOT NULL) IN ()) ASC  NULLS LAST, rtreenode((t1.c43 IN (vt0.c0)), ((vt1.c0)=(t1.c34))));
SELECT ALL * FROM t1 INNER JOIN vt1 ON ((t1.c1 COLLATE RTRIM) NOT BETWEEN (t1.c0 COLLATE RTRIM) AND (((vt0.c0)/(t1.c43)))) LEFT OUTER JOIN vt0 ON ((vt0.c0) ISNULL) COLLATE BINARY WHERE (CASE CAST(t1.c34 AS TEXT)  WHEN ((0.2198352227966407) NOT NULL) THEN CASE t1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE NULL END WHEN CAST(NULL AS INTEGER) THEN (vt0.c0 IN (t1.c1)) WHEN CASE WHEN t1.c0 THEN 0.688682720170074 ELSE t1.c43 END THEN ((((vt1.c0)AND(vt1.c0)))OR(t1.c1)) END) ORDER BY (((t1.c0) NOT NULL) IN ()) ASC  NULLS LAST, rtreenode((t1.c43 IN (vt0.c0)), ((vt1.c0)=(t1.c34)));
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t1.c34 AS TEXT)  WHEN ((0.2198352227966407) NOT NULL) THEN CASE t1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE NULL END WHEN CAST(NULL AS INTEGER) THEN (vt0.c0 IN (t1.c1)) WHEN CASE WHEN t1.c0 THEN 0.688682720170074 ELSE t1.c43 END THEN ((((vt1.c0)AND(vt1.c0)))OR(t1.c1)) END) IS TRUE)  as count FROM t1 INNER JOIN vt1 ON ((t1.c1 COLLATE RTRIM) NOT BETWEEN (t1.c0 COLLATE RTRIM) AND (((vt0.c0)/(t1.c43)))) LEFT OUTER JOIN vt0 ON ((vt0.c0) ISNULL) COLLATE BINARY ORDER BY (((t1.c0) NOT NULL) IN ()) ASC  NULLS LAST, rtreenode((t1.c43 IN (vt0.c0)), ((vt1.c0)=(t1.c34))));
SELECT ALL * FROM t1 INNER JOIN vt1 ON ((t1.c1 COLLATE RTRIM) NOT BETWEEN (t1.c0 COLLATE RTRIM) AND (((vt0.c0)/(t1.c43)))) LEFT OUTER JOIN vt0 ON ((vt0.c0) ISNULL) COLLATE BINARY WHERE (CASE CAST(t1.c34 AS TEXT)  WHEN ((0.2198352227966407) NOT NULL) THEN CASE t1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE NULL END WHEN CAST(NULL AS INTEGER) THEN (vt0.c0 IN (t1.c1)) WHEN CASE WHEN t1.c0 THEN 0.688682720170074 ELSE t1.c43 END THEN ((((vt1.c0)AND(vt1.c0)))OR(t1.c1)) END) ORDER BY (((t1.c0) NOT NULL) IN ()) ASC  NULLS LAST, rtreenode((t1.c43 IN (vt0.c0)), ((vt1.c0)=(t1.c34)));
SELECT * FROM vt1 WHERE (((((vt1.c0)<>(vt1.c0))) NOT BETWEEN ((- (vt1.c0))) AND (vt1.c0))) ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<>(vt1.c0))) NOT BETWEEN ((- (vt1.c0))) AND (vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC);
SELECT * FROM vt1 WHERE (((((vt1.c0)<>(vt1.c0))) NOT BETWEEN ((- (vt1.c0))) AND (vt1.c0))) ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<>(vt1.c0))) NOT BETWEEN ((- (vt1.c0))) AND (vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC);
SELECT * FROM vt1 WHERE (((((vt1.c0)<>(vt1.c0))) NOT BETWEEN ((- (vt1.c0))) AND (vt1.c0))) ORDER BY vt1.c0 ASC;
SELECT COUNT(*) FROM vt1, vt0, t1 LEFT OUTER JOIN rt0 ON (((t1.c0)) BETWEEN (((((t1.c34))<=((rt0.c2))))) AND (((t1.c43 IN (t1.c0))))) WHERE ((- (CASE WHEN t1.c43 THEN t1.c1 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN t1.c43 THEN t1.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM vt1, vt0, t1 LEFT OUTER JOIN rt0 ON (((t1.c0)) BETWEEN (((((t1.c34))<=((rt0.c2))))) AND (((t1.c43 IN (t1.c0))))));
SELECT COUNT(*) FROM vt1, vt0, t1 LEFT OUTER JOIN rt0 ON (((t1.c0)) BETWEEN (((((t1.c34))<=((rt0.c2))))) AND (((t1.c43 IN (t1.c0))))) WHERE ((- (CASE WHEN t1.c43 THEN t1.c1 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN t1.c43 THEN t1.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM vt1, vt0, t1 LEFT OUTER JOIN rt0 ON (((t1.c0)) BETWEEN (((((t1.c34))<=((rt0.c2))))) AND (((t1.c43 IN (t1.c0))))));
SELECT COUNT(*) FROM vt1, vt0, t1 LEFT OUTER JOIN rt0 ON (((t1.c0)) BETWEEN (((((t1.c34))<=((rt0.c2))))) AND (((t1.c43 IN (t1.c0))))) WHERE ((- (CASE WHEN t1.c43 THEN t1.c1 ELSE rt0.c0 END)));
SELECT * FROM vt0, rt0, t1 WHERE ((((vt0.c0 IN (rt0.c2))) NOT NULL)) ORDER BY (((((t1.c34) NOTNULL), CASE rt0.c1  WHEN vt0.c0 THEN t1.c43 WHEN t1.c34 THEN rt0.c0 WHEN t1.c34 THEN rt0.c1 END, CAST(rt0.c2 AS INTEGER)))=((((rt0.c1) NOT BETWEEN (t1.c34) AND (rt0.c1)), CASE WHEN rt0.c1 THEN t1.c43 WHEN t1.c43 THEN t1.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END, ((((NULL)AND(vt0.c0)))AND(rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (rt0.c2))) NOT NULL)) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY (((((t1.c34) NOTNULL), CASE rt0.c1  WHEN vt0.c0 THEN t1.c43 WHEN t1.c34 THEN rt0.c0 WHEN t1.c34 THEN rt0.c1 END, CAST(rt0.c2 AS INTEGER)))==((((rt0.c1) NOT BETWEEN (t1.c34) AND (rt0.c1)), CASE WHEN rt0.c1 THEN t1.c43 WHEN t1.c43 THEN t1.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END, ((((NULL)AND(vt0.c0)))AND(rt0.c0))))) ASC);
SELECT * FROM vt0, rt0, t1 WHERE ((((vt0.c0 IN (rt0.c2))) NOT NULL)) ORDER BY (((((t1.c34) NOTNULL), CASE rt0.c1  WHEN vt0.c0 THEN t1.c43 WHEN t1.c34 THEN rt0.c0 WHEN t1.c34 THEN rt0.c1 END, CAST(rt0.c2 AS INTEGER)))=((((rt0.c1) NOT BETWEEN (t1.c34) AND (rt0.c1)), CASE WHEN rt0.c1 THEN t1.c43 WHEN t1.c43 THEN t1.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END, ((((NULL)AND(vt0.c0)))AND(rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (rt0.c2))) NOT NULL)) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY (((((t1.c34) NOTNULL), CASE rt0.c1  WHEN vt0.c0 THEN t1.c43 WHEN t1.c34 THEN rt0.c0 WHEN t1.c34 THEN rt0.c1 END, CAST(rt0.c2 AS INTEGER)))==((((rt0.c1) NOT BETWEEN (t1.c34) AND (rt0.c1)), CASE WHEN rt0.c1 THEN t1.c43 WHEN t1.c43 THEN t1.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END, ((((NULL)AND(vt0.c0)))AND(rt0.c0))))) ASC);
SELECT * FROM vt0, rt0, t1 WHERE ((((vt0.c0 IN (rt0.c2))) NOT NULL)) ORDER BY (((((t1.c34) NOTNULL), CASE rt0.c1  WHEN vt0.c0 THEN t1.c43 WHEN t1.c34 THEN rt0.c0 WHEN t1.c34 THEN rt0.c1 END, CAST(rt0.c2 AS INTEGER)))=((((rt0.c1) NOT BETWEEN (t1.c34) AND (rt0.c1)), CASE WHEN rt0.c1 THEN t1.c43 WHEN t1.c43 THEN t1.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END, ((((NULL)AND(vt0.c0)))AND(rt0.c0))))) ASC;
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN vt1 ON ((((t1.c34)==(t1.c1)))<=((('U')>=(t1.c0)))) RIGHT OUTER JOIN vt0 ON ((((t1.c0)*(t1.c0)))>>(LIKELIHOOD(t1.c1, 0.10188025697049008))) WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) BETWEEN (((t1.c0)*(vt0.c0))) AND (t1.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) BETWEEN (((t1.c0)*(vt0.c0))) AND (t1.c0))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt1 ON ((((t1.c34)=(t1.c1)))<=((('U')>=(t1.c0)))) RIGHT OUTER JOIN vt0 ON ((((t1.c0)*(t1.c0)))>>(LIKELIHOOD(t1.c1, 0.10188025697049008))));
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN vt1 ON ((((t1.c34)==(t1.c1)))<=((('U')>=(t1.c0)))) RIGHT OUTER JOIN vt0 ON ((((t1.c0)*(t1.c0)))>>(LIKELIHOOD(t1.c1, 0.10188025697049008))) WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) BETWEEN (((t1.c0)*(vt0.c0))) AND (t1.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) BETWEEN (((t1.c0)*(vt0.c0))) AND (t1.c0))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt1 ON ((((t1.c34)=(t1.c1)))<=((('U')>=(t1.c0)))) RIGHT OUTER JOIN vt0 ON ((((t1.c0)*(t1.c0)))>>(LIKELIHOOD(t1.c1, 0.10188025697049008))));
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN vt1 ON ((((t1.c34)==(t1.c1)))<=((('U')>=(t1.c0)))) RIGHT OUTER JOIN vt0 ON ((((t1.c0)*(t1.c0)))>>(LIKELIHOOD(t1.c1, 0.10188025697049008))) WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) BETWEEN (((t1.c0)*(vt0.c0))) AND (t1.c0)));
SELECT * FROM rt0, t1, vt0 WHERE ((((t1.c1)LIKE('ki')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c1)LIKE('ki')) IN ())) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT * FROM rt0, t1, vt0 WHERE ((((t1.c1)LIKE('ki')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c1)LIKE('ki')) IN ())) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT * FROM rt0, t1, vt0 WHERE ((((t1.c1)LIKE('ki')) IN ()));
SELECT ALL * FROM rt0 WHERE ((- (CAST(rt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((- (CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((- (CAST(rt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((- (CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((- (CAST(rt0.c1 AS INTEGER))));
SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c1)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0, t1, vt1 WHERE (CASE vt1.c0  WHEN rt0.c0 THEN t1.c43 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0  WHEN rt0.c0 THEN t1.c43 END COLLATE BINARY) IS TRUE)  as count FROM rt0, t1, vt1);
SELECT COUNT(*) FROM rt0, t1, vt1 WHERE (CASE vt1.c0  WHEN rt0.c0 THEN t1.c43 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0  WHEN rt0.c0 THEN t1.c43 END COLLATE BINARY) IS TRUE)  as count FROM rt0, t1, vt1);
SELECT COUNT(*) FROM rt0, t1, vt1 WHERE (CASE vt1.c0  WHEN rt0.c0 THEN t1.c43 END COLLATE BINARY);
SELECT ALL * FROM vt0, t1, vt1 WHERE ((((((t1.c1)OR(t1.c1)))AND(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((t1.c1)OR(t1.c1)))AND(vt1.c0)) IN ())) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT ALL * FROM vt0, t1, vt1 WHERE ((((((t1.c1)OR(t1.c1)))AND(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((t1.c1)OR(t1.c1)))AND(vt1.c0)) IN ())) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT ALL * FROM vt0, t1, vt1 WHERE ((((((t1.c1)OR(t1.c1)))AND(vt1.c0)) IN ()));
SELECT ALL * FROM vt1, vt0, t1 WHERE (x'1012');
SELECT SUM(count) FROM (SELECT ((x'1012') IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL * FROM vt1, vt0, t1 WHERE (x'1012');
SELECT SUM(count) FROM (SELECT ((x'1012') IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL * FROM vt1, vt0, t1 WHERE (x'1012');
SELECT ALL COUNT(*) FROM t1, rt0, vt1, vt0 WHERE ((rt0.c0 IN ())) ORDER BY ((CASE rt0.c2  WHEN vt1.c0 THEN t1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN t1.c1 WHEN t1.c1 THEN rt0.c2 WHEN t1.c0 THEN 0x64e2cfd0 END) NOT BETWEEN (((((t1.c34)OR(vt0.c0)))OR(rt0.c0))) AND ((t1.c1 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ())) IS TRUE)  as count FROM t1, rt0, vt1, vt0 ORDER BY ((CASE rt0.c2  WHEN vt1.c0 THEN t1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN t1.c1 WHEN t1.c1 THEN rt0.c2 WHEN t1.c0 THEN 0x64e2cfd0 END) NOT BETWEEN (((((t1.c34)OR(vt0.c0)))OR(rt0.c0))) AND ((t1.c1 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt0, vt1, vt0 WHERE ((rt0.c0 IN ())) ORDER BY ((CASE rt0.c2  WHEN vt1.c0 THEN t1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN t1.c1 WHEN t1.c1 THEN rt0.c2 WHEN t1.c0 THEN 0x64e2cfd0 END) NOT BETWEEN (((((t1.c34)OR(vt0.c0)))OR(rt0.c0))) AND ((t1.c1 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ())) IS TRUE)  as count FROM t1, rt0, vt1, vt0 ORDER BY ((CASE rt0.c2  WHEN vt1.c0 THEN t1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN t1.c1 WHEN t1.c1 THEN rt0.c2 WHEN t1.c0 THEN 0x64e2cfd0 END) NOT BETWEEN (((((t1.c34)OR(vt0.c0)))OR(rt0.c0))) AND ((t1.c1 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt0, vt1, vt0 WHERE ((rt0.c0 IN ())) ORDER BY ((CASE rt0.c2  WHEN vt1.c0 THEN t1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN t1.c1 WHEN t1.c1 THEN rt0.c2 WHEN t1.c0 THEN 0x64e2cfd0 END) NOT BETWEEN (((((t1.c34)OR(vt0.c0)))OR(rt0.c0))) AND ((t1.c1 IN ())))  NULLS LAST;
SELECT ALL * FROM t1, vt1, vt0, rt0 WHERE (((((t1.c1) BETWEEN (t1.c1) AND (t1.c0))) BETWEEN (((((rt0.c1)AND(t1.c43)))OR(t1.c1))) AND (rt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c1) BETWEEN (t1.c1) AND (t1.c0))) BETWEEN (((((rt0.c1)AND(t1.c43)))OR(t1.c1))) AND (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM t1, vt1, vt0, rt0);
SELECT ALL * FROM t1, vt1, vt0, rt0 WHERE (((((t1.c1) BETWEEN (t1.c1) AND (t1.c0))) BETWEEN (((((rt0.c1)AND(t1.c43)))OR(t1.c1))) AND (rt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c1) BETWEEN (t1.c1) AND (t1.c0))) BETWEEN (((((rt0.c1)AND(t1.c43)))OR(t1.c1))) AND (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM t1, vt1, vt0, rt0);
SELECT ALL * FROM t1, vt1, vt0, rt0 WHERE (((((t1.c1) BETWEEN (t1.c1) AND (t1.c0))) BETWEEN (((((rt0.c1)AND(t1.c43)))OR(t1.c1))) AND (rt0.c2 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0 CROSS JOIN t1 ON (((rt0.c2))<=((t1.c34))) COLLATE NOCASE FULL OUTER JOIN rt0 ON (((((- (vt0.c0)))AND(CAST(rt0.c0 AS NUMERIC))))OR(0.5272606232475878)) WHERE (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (t1.c34) AND (((((0.034444153639898056)AND(t1.c43)))OR(rt0.c1))))) ORDER BY (x'' IN (CASE WHEN t1.c1 THEN t1.c43 END));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (t1.c34) AND (((((0.034444153639898056)AND(t1.c43)))OR(rt0.c1))))) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON (((rt0.c2))<=((t1.c34))) COLLATE NOCASE FULL OUTER JOIN rt0 ON (((((- (vt0.c0)))AND(CAST(rt0.c0 AS NUMERIC))))OR(0.5272606232475878)) ORDER BY (x'' IN (CASE WHEN t1.c1 THEN t1.c43 END)));
SELECT COUNT(*) FROM vt0 CROSS JOIN t1 ON (((rt0.c2))<=((t1.c34))) COLLATE NOCASE FULL OUTER JOIN rt0 ON (((((- (vt0.c0)))AND(CAST(rt0.c0 AS NUMERIC))))OR(0.5272606232475878)) WHERE (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (t1.c34) AND (((((0.034444153639898056)AND(t1.c43)))OR(rt0.c1))))) ORDER BY (x'' IN (CASE WHEN t1.c1 THEN t1.c43 END));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (t1.c34) AND (((((0.034444153639898056)AND(t1.c43)))OR(rt0.c1))))) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON (((rt0.c2))<=((t1.c34))) COLLATE NOCASE FULL OUTER JOIN rt0 ON (((((- (vt0.c0)))AND(CAST(rt0.c0 AS NUMERIC))))OR(0.5272606232475878)) ORDER BY (x'' IN (CASE WHEN t1.c1 THEN t1.c43 END)));
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))=(x'c5be'))) ORDER BY CASE WHEN NULL THEN ((vt0.c0)==(vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))==(x'c5be'))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN NULL THEN ((vt0.c0)=(vt0.c0)) END  NULLS LAST);
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))=(x'c5be'))) ORDER BY CASE WHEN NULL THEN ((vt0.c0)==(vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))==(x'c5be'))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN NULL THEN ((vt0.c0)=(vt0.c0)) END  NULLS LAST);
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))=(x'c5be'))) ORDER BY CASE WHEN NULL THEN ((vt0.c0)==(vt0.c0)) END  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((NOT (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((NOT (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((NOT (rt0.c0)) IN ()));
SELECT COUNT(*) FROM t1 WHERE ((((CAST(t1.c43 AS NUMERIC), (('-370106279')<>(t1.c34)), ((t1.c1) NOTNULL), ((t1.c43) NOT BETWEEN (t1.c1) AND (t1.c0)), UNLIKELY(t1.c43)))<((CASE t1.c0  WHEN 0.23608541796772986 THEN NULL ELSE t1.c0 END, NULL, t1.c1, (- (t1.c0)), (t1.c0 IN ()))))) ORDER BY (((t1.c34)) NOT BETWEEN ((((((t1.c43)OR(t1.c1)))OR(t1.c43)))) AND ((t1.c0 COLLATE RTRIM))) ASC, ((((((((((t1.c1)AND('?4')))AND(t1.c0)))AND(t1.c43)))AND(t1.c1))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(t1.c43 AS NUMERIC), (('-370106279')!=(t1.c34)), ((t1.c1) NOTNULL), ((t1.c43) NOT BETWEEN (t1.c1) AND (t1.c0)), UNLIKELY(t1.c43)))<((CASE t1.c0  WHEN 0.23608541796772986 THEN NULL ELSE t1.c0 END, NULL, t1.c1, (- (t1.c0)), (t1.c0 IN ()))))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c34)) NOT BETWEEN ((((((t1.c43)OR(t1.c1)))OR(t1.c43)))) AND ((t1.c0 COLLATE RTRIM))) ASC, ((((((((((t1.c1)AND('?4')))AND(t1.c0)))AND(t1.c43)))AND(t1.c1))) ISNULL)  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((((CAST(t1.c43 AS NUMERIC), (('-370106279')<>(t1.c34)), ((t1.c1) NOTNULL), ((t1.c43) NOT BETWEEN (t1.c1) AND (t1.c0)), UNLIKELY(t1.c43)))<((CASE t1.c0  WHEN 0.23608541796772986 THEN NULL ELSE t1.c0 END, NULL, t1.c1, (- (t1.c0)), (t1.c0 IN ()))))) ORDER BY (((t1.c34)) NOT BETWEEN ((((((t1.c43)OR(t1.c1)))OR(t1.c43)))) AND ((t1.c0 COLLATE RTRIM))) ASC, ((((((((((t1.c1)AND('?4')))AND(t1.c0)))AND(t1.c43)))AND(t1.c1))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(t1.c43 AS NUMERIC), (('-370106279')!=(t1.c34)), ((t1.c1) NOTNULL), ((t1.c43) NOT BETWEEN (t1.c1) AND (t1.c0)), UNLIKELY(t1.c43)))<((CASE t1.c0  WHEN 0.23608541796772986 THEN NULL ELSE t1.c0 END, NULL, t1.c1, (- (t1.c0)), (t1.c0 IN ()))))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c34)) NOT BETWEEN ((((((t1.c43)OR(t1.c1)))OR(t1.c43)))) AND ((t1.c0 COLLATE RTRIM))) ASC, ((((((((((t1.c1)AND('?4')))AND(t1.c0)))AND(t1.c43)))AND(t1.c1))) ISNULL)  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((((CAST(t1.c43 AS NUMERIC), (('-370106279')<>(t1.c34)), ((t1.c1) NOTNULL), ((t1.c43) NOT BETWEEN (t1.c1) AND (t1.c0)), UNLIKELY(t1.c43)))<((CASE t1.c0  WHEN 0.23608541796772986 THEN NULL ELSE t1.c0 END, NULL, t1.c1, (- (t1.c0)), (t1.c0 IN ()))))) ORDER BY (((t1.c34)) NOT BETWEEN ((((((t1.c43)OR(t1.c1)))OR(t1.c43)))) AND ((t1.c0 COLLATE RTRIM))) ASC, ((((((((((t1.c1)AND('?4')))AND(t1.c0)))AND(t1.c43)))AND(t1.c1))) ISNULL)  NULLS FIRST;
SELECT ALL * FROM vt1, t1, vt0, rt0 WHERE (((((t1.c43)>>(t1.c43)))/((- (vt1.c0))))) ORDER BY (((t1.c1 IN ()))IS NOT(((vt1.c0) IS FALSE))) ASC  NULLS FIRST, MIN((- (vt1.c0)), CAST(vt0.c0 AS TEXT), '-1504482478', ((rt0.c2)<=(vt1.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c43)>>(t1.c43)))/((- (vt1.c0))))) IS TRUE)  as count FROM vt1, t1, vt0, rt0 ORDER BY (((t1.c1 IN ()))IS NOT(((vt1.c0) IS FALSE))) ASC  NULLS FIRST, MIN((- (vt1.c0)), CAST(vt0.c0 AS TEXT), '-1504482478', ((rt0.c2)<=(vt1.c0))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, t1, vt0, rt0 WHERE (((((t1.c43)>>(t1.c43)))/((- (vt1.c0))))) ORDER BY (((t1.c1 IN ()))IS NOT(((vt1.c0) IS FALSE))) ASC  NULLS FIRST, MIN((- (vt1.c0)), CAST(vt0.c0 AS TEXT), '-1504482478', ((rt0.c2)<=(vt1.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c43)>>(t1.c43)))/((- (vt1.c0))))) IS TRUE)  as count FROM vt1, t1, vt0, rt0 ORDER BY (((t1.c1 IN ()))IS NOT(((vt1.c0) IS FALSE))) ASC  NULLS FIRST, MIN((- (vt1.c0)), CAST(vt0.c0 AS TEXT), '-1504482478', ((rt0.c2)<=(vt1.c0))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, t1, vt0, rt0 WHERE (((((t1.c43)>>(t1.c43)))/((- (vt1.c0))))) ORDER BY (((t1.c1 IN ()))IS NOT(((vt1.c0) IS FALSE))) ASC  NULLS FIRST, MIN((- (vt1.c0)), CAST(vt0.c0 AS TEXT), '-1504482478', ((rt0.c2)<=(vt1.c0))) DESC  NULLS LAST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON (('~å°Pimj' COLLATE BINARY)&(((vt0.c0) ISNULL))) WHERE ((('1588030260') IS FALSE)) ORDER BY CAST('' AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((('1588030260') IS FALSE)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (('~å°Pimj' COLLATE BINARY)&(((vt0.c0) ISNULL))) ORDER BY CAST('' AS BLOB));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON (('~å°Pimj' COLLATE BINARY)&(((vt0.c0) ISNULL))) WHERE ((('1588030260') IS FALSE)) ORDER BY CAST('' AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((('1588030260') IS FALSE)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (('~å°Pimj' COLLATE BINARY)&(((vt0.c0) ISNULL))) ORDER BY CAST('' AS BLOB));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON (('~å°Pimj' COLLATE BINARY)&(((vt0.c0) ISNULL))) WHERE ((('1588030260') IS FALSE)) ORDER BY CAST('' AS BLOB);
SELECT ALL * FROM t1 FULL OUTER JOIN rt0 ON (CASE WHEN rt0.c2 THEN t1.c0 ELSE rt0.c0 END IN ()) LEFT OUTER JOIN vt0 ON ((((((((((rt0.c0) ISNULL))OR(rt0.c1 COLLATE RTRIM)))AND(json_type(rt0.c2))))AND(((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(rt0.c0 COLLATE NOCASE)) FULL OUTER JOIN vt1 ON ((CAST(rt0.c0 AS REAL)) BETWEEN ((- (rt0.c0))) AND (CAST(t1.c1 AS NUMERIC))) WHERE (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON (CASE WHEN rt0.c2 THEN t1.c0 ELSE rt0.c0 END IN ()) LEFT OUTER JOIN vt0 ON ((((((((((rt0.c0) ISNULL))OR(rt0.c1 COLLATE RTRIM)))AND(json_type(rt0.c2))))AND(((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(rt0.c0 COLLATE NOCASE)) FULL OUTER JOIN vt1 ON ((CAST(rt0.c0 AS REAL)) BETWEEN ((- (rt0.c0))) AND (CAST(t1.c1 AS NUMERIC))));
SELECT ALL * FROM t1 FULL OUTER JOIN rt0 ON (CASE WHEN rt0.c2 THEN t1.c0 ELSE rt0.c0 END IN ()) LEFT OUTER JOIN vt0 ON ((((((((((rt0.c0) ISNULL))OR(rt0.c1 COLLATE RTRIM)))AND(json_type(rt0.c2))))AND(((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(rt0.c0 COLLATE NOCASE)) FULL OUTER JOIN vt1 ON ((CAST(rt0.c0 AS REAL)) BETWEEN ((- (rt0.c0))) AND (CAST(t1.c1 AS NUMERIC))) WHERE (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON (CASE WHEN rt0.c2 THEN t1.c0 ELSE rt0.c0 END IN ()) LEFT OUTER JOIN vt0 ON ((((((((((rt0.c0) ISNULL))OR(rt0.c1 COLLATE RTRIM)))AND(json_type(rt0.c2))))AND(((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(rt0.c0 COLLATE NOCASE)) FULL OUTER JOIN vt1 ON ((CAST(rt0.c0 AS REAL)) BETWEEN ((- (rt0.c0))) AND (CAST(t1.c1 AS NUMERIC))));
SELECT * FROM vt0 NOT INDEXED, vt1, t1 WHERE ((((((vt1.c0) NOT BETWEEN (t1.c34) AND (vt0.c0)), ((vt0.c0)%(t1.c1)), 272130907))>=((((((t1.c34)AND(vt1.c0)))OR(vt0.c0)), TRIM(t1.c0), CAST(t1.c0 AS INTEGER))))) ORDER BY CAST(((t1.c43)IS(t1.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT (((((((vt1.c0) NOT BETWEEN (t1.c34) AND (vt0.c0)), ((vt0.c0)%(t1.c1)), 272130907))>=((((((t1.c34)AND(vt1.c0)))OR(vt0.c0)), TRIM(t1.c0), CAST(t1.c0 AS INTEGER))))) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY CAST(((t1.c43)IS(t1.c0)) AS BLOB));
SELECT * FROM vt0 NOT INDEXED, vt1, t1 WHERE ((((((vt1.c0) NOT BETWEEN (t1.c34) AND (vt0.c0)), ((vt0.c0)%(t1.c1)), 272130907))>=((((((t1.c34)AND(vt1.c0)))OR(vt0.c0)), TRIM(t1.c0), CAST(t1.c0 AS INTEGER))))) ORDER BY CAST(((t1.c43)IS(t1.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT (((((((vt1.c0) NOT BETWEEN (t1.c34) AND (vt0.c0)), ((vt0.c0)%(t1.c1)), 272130907))>=((((((t1.c34)AND(vt1.c0)))OR(vt0.c0)), TRIM(t1.c0), CAST(t1.c0 AS INTEGER))))) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY CAST(((t1.c43)IS(t1.c0)) AS BLOB));
SELECT * FROM vt0 NOT INDEXED, vt1, t1 WHERE ((((((vt1.c0) NOT BETWEEN (t1.c34) AND (vt0.c0)), ((vt0.c0)%(t1.c1)), 272130907))>=((((((t1.c34)AND(vt1.c0)))OR(vt0.c0)), TRIM(t1.c0), CAST(t1.c0 AS INTEGER))))) ORDER BY CAST(((t1.c43)IS(t1.c0)) AS BLOB);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON CASE t1.c43 COLLATE NOCASE  WHEN -857678542 THEN (((t1.c1))>=((rt0.c1))) WHEN ((t1.c0)<=(rt0.c2)) THEN ((t1.c1) NOT BETWEEN (rt0.c1) AND (t1.c1)) WHEN ((((0.3507860224221693)AND(t1.c1)))OR(t1.c34)) THEN (('600812800')<=(t1.c0)) END LEFT OUTER JOIN t1 ON ((((((t1.c1)*(t1.c34)))OR(vt0.c0)))AND((+ (rt0.c2)))) WHERE (CAST(((t1.c34) NOT NULL) AS INTEGER)) ORDER BY ((CASE t1.c34  WHEN rt0.c0 THEN t1.c43 ELSE t1.c34 END) NOT BETWEEN (((NULL)!=(t1.c43))) AND (((vt0.c0)+(t1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c34) NOT NULL) AS INTEGER)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON CASE t1.c43 COLLATE NOCASE  WHEN -857678542 THEN (((t1.c1))>=((rt0.c1))) WHEN ((t1.c0)<=(rt0.c2)) THEN ((t1.c1) NOT BETWEEN (rt0.c1) AND (t1.c1)) WHEN ((((0.3507860224221693)AND(t1.c1)))OR(t1.c34)) THEN (('600812800')<=(t1.c0)) END LEFT OUTER JOIN t1 ON ((((((t1.c1)*(t1.c34)))OR(vt0.c0)))AND((+ (rt0.c2)))) ORDER BY ((CASE t1.c34  WHEN rt0.c0 THEN t1.c43 ELSE t1.c34 END) NOT BETWEEN (((NULL)<>(t1.c43))) AND (((vt0.c0)+(t1.c1)))) DESC);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON CASE t1.c43 COLLATE NOCASE  WHEN -857678542 THEN (((t1.c1))>=((rt0.c1))) WHEN ((t1.c0)<=(rt0.c2)) THEN ((t1.c1) NOT BETWEEN (rt0.c1) AND (t1.c1)) WHEN ((((0.3507860224221693)AND(t1.c1)))OR(t1.c34)) THEN (('600812800')<=(t1.c0)) END LEFT OUTER JOIN t1 ON ((((((t1.c1)*(t1.c34)))OR(vt0.c0)))AND((+ (rt0.c2)))) WHERE (CAST(((t1.c34) NOT NULL) AS INTEGER)) ORDER BY ((CASE t1.c34  WHEN rt0.c0 THEN t1.c43 ELSE t1.c34 END) NOT BETWEEN (((NULL)!=(t1.c43))) AND (((vt0.c0)+(t1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c34) NOT NULL) AS INTEGER)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON CASE t1.c43 COLLATE NOCASE  WHEN -857678542 THEN (((t1.c1))>=((rt0.c1))) WHEN ((t1.c0)<=(rt0.c2)) THEN ((t1.c1) NOT BETWEEN (rt0.c1) AND (t1.c1)) WHEN ((((0.3507860224221693)AND(t1.c1)))OR(t1.c34)) THEN (('600812800')<=(t1.c0)) END LEFT OUTER JOIN t1 ON ((((((t1.c1)*(t1.c34)))OR(vt0.c0)))AND((+ (rt0.c2)))) ORDER BY ((CASE t1.c34  WHEN rt0.c0 THEN t1.c43 ELSE t1.c34 END) NOT BETWEEN (((NULL)<>(t1.c43))) AND (((vt0.c0)+(t1.c1)))) DESC);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON CASE t1.c43 COLLATE NOCASE  WHEN -857678542 THEN (((t1.c1))>=((rt0.c1))) WHEN ((t1.c0)<=(rt0.c2)) THEN ((t1.c1) NOT BETWEEN (rt0.c1) AND (t1.c1)) WHEN ((((0.3507860224221693)AND(t1.c1)))OR(t1.c34)) THEN (('600812800')<=(t1.c0)) END LEFT OUTER JOIN t1 ON ((((((t1.c1)*(t1.c34)))OR(vt0.c0)))AND((+ (rt0.c2)))) WHERE (CAST(((t1.c34) NOT NULL) AS INTEGER)) ORDER BY ((CASE t1.c34  WHEN rt0.c0 THEN t1.c43 ELSE t1.c34 END) NOT BETWEEN (((NULL)!=(t1.c43))) AND (((vt0.c0)+(t1.c1)))) DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS NUMERIC)) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS NUMERIC)) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) ISNULL));
SELECT ALL * FROM rt0, t1 RIGHT OUTER JOIN vt1 ON TIME(vt0.c0, (((t1.c1))<((t1.c1))), (((vt1.c0))<=((rt0.c2)))) CROSS JOIN vt0 ON x'' WHERE (((((((t1.c43)>=(vt0.c0)))OR(((t1.c34)<<(vt1.c0)))))AND((((rt0.c1))<((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c43)>=(vt0.c0)))OR(((t1.c34)<<(vt1.c0)))))AND((((rt0.c1))<((rt0.c2)))))) IS TRUE)  as count FROM rt0, t1 RIGHT OUTER JOIN vt1 ON TIME(vt0.c0, (((t1.c1))<((t1.c1))), (((vt1.c0))<=((rt0.c2)))) CROSS JOIN vt0 ON x'');
SELECT ALL * FROM rt0, t1 RIGHT OUTER JOIN vt1 ON TIME(vt0.c0, (((t1.c1))<((t1.c1))), (((vt1.c0))<=((rt0.c2)))) CROSS JOIN vt0 ON x'' WHERE (((((((t1.c43)>=(vt0.c0)))OR(((t1.c34)<<(vt1.c0)))))AND((((rt0.c1))<((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c43)>=(vt0.c0)))OR(((t1.c34)<<(vt1.c0)))))AND((((rt0.c1))<((rt0.c2)))))) IS TRUE)  as count FROM rt0, t1 RIGHT OUTER JOIN vt1 ON TIME(vt0.c0, (((t1.c1))<((t1.c1))), (((vt1.c0))<=((rt0.c2)))) CROSS JOIN vt0 ON x'');
SELECT COUNT(*) FROM rt0, vt0, t1, vt1 WHERE (((((vt0.c0)<=(rt0.c0)))>=((+ (vt1.c0))))) ORDER BY CAST(355994807 AS TEXT)  NULLS FIRST, CASE WHEN (NOT (t1.c34)) THEN ((t1.c0) ISNULL) WHEN ((((t1.c34)OR(rt0.c0)))AND(t1.c1)) THEN (((vt0.c0)) NOT BETWEEN ((t1.c34)) AND ((vt1.c0))) WHEN CASE WHEN rt0.c2 THEN x'04be' END THEN ROUND(t1.c43, t1.c34) WHEN t1.c43 COLLATE BINARY THEN ((0.05194979989662063)||(rt0.c1)) WHEN (rt0.c2 IN ()) THEN t1.c43 END;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<=(rt0.c0)))>=((+ (vt1.c0))))) IS TRUE)  as count FROM rt0, vt0, t1, vt1 ORDER BY CAST(355994807 AS TEXT)  NULLS FIRST, CASE WHEN (NOT (t1.c34)) THEN ((t1.c0) ISNULL) WHEN ((((t1.c34)OR(rt0.c0)))AND(t1.c1)) THEN (((vt0.c0)) NOT BETWEEN ((t1.c34)) AND ((vt1.c0))) WHEN CASE WHEN rt0.c2 THEN x'04be' END THEN ROUND(t1.c43, t1.c34) WHEN t1.c43 COLLATE BINARY THEN ((0.05194979989662063)||(rt0.c1)) WHEN (rt0.c2 IN ()) THEN t1.c43 END);
SELECT COUNT(*) FROM rt0, vt0, t1, vt1 WHERE (((((vt0.c0)<=(rt0.c0)))>=((+ (vt1.c0))))) ORDER BY CAST(355994807 AS TEXT)  NULLS FIRST, CASE WHEN (NOT (t1.c34)) THEN ((t1.c0) ISNULL) WHEN ((((t1.c34)OR(rt0.c0)))AND(t1.c1)) THEN (((vt0.c0)) NOT BETWEEN ((t1.c34)) AND ((vt1.c0))) WHEN CASE WHEN rt0.c2 THEN x'04be' END THEN ROUND(t1.c43, t1.c34) WHEN t1.c43 COLLATE BINARY THEN ((0.05194979989662063)||(rt0.c1)) WHEN (rt0.c2 IN ()) THEN t1.c43 END;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<=(rt0.c0)))>=((+ (vt1.c0))))) IS TRUE)  as count FROM rt0, vt0, t1, vt1 ORDER BY CAST(355994807 AS TEXT)  NULLS FIRST, CASE WHEN (NOT (t1.c34)) THEN ((t1.c0) ISNULL) WHEN ((((t1.c34)OR(rt0.c0)))AND(t1.c1)) THEN (((vt0.c0)) NOT BETWEEN ((t1.c34)) AND ((vt1.c0))) WHEN CASE WHEN rt0.c2 THEN x'04be' END THEN ROUND(t1.c43, t1.c34) WHEN t1.c43 COLLATE BINARY THEN ((0.05194979989662063)||(rt0.c1)) WHEN (rt0.c2 IN ()) THEN t1.c43 END);
SELECT COUNT(*) FROM rt0, vt0, t1, vt1 WHERE (((((vt0.c0)<=(rt0.c0)))>=((+ (vt1.c0))))) ORDER BY CAST(355994807 AS TEXT)  NULLS FIRST, CASE WHEN (NOT (t1.c34)) THEN ((t1.c0) ISNULL) WHEN ((((t1.c34)OR(rt0.c0)))AND(t1.c1)) THEN (((vt0.c0)) NOT BETWEEN ((t1.c34)) AND ((vt1.c0))) WHEN CASE WHEN rt0.c2 THEN x'04be' END THEN ROUND(t1.c43, t1.c34) WHEN t1.c43 COLLATE BINARY THEN ((0.05194979989662063)||(rt0.c1)) WHEN (rt0.c2 IN ()) THEN t1.c43 END;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((- ((('581405879')GLOB(vt1.c0))))) ORDER BY QUOTE((+ (vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- ((('581405879')GLOB(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY QUOTE((+ (vt0.c0))) ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((- ((('581405879')GLOB(vt1.c0))))) ORDER BY QUOTE((+ (vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- ((('581405879')GLOB(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY QUOTE((+ (vt0.c0))) ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((- ((('581405879')GLOB(vt1.c0))))) ORDER BY QUOTE((+ (vt0.c0))) ASC;
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt1 ON (- (json_object(rt0.c0, rt0.c1))) FULL OUTER JOIN t1 ON CAST(((t1.c0)<<(t1.c34)) AS TEXT) WHERE (1.281841273E9);
SELECT SUM(count) FROM (SELECT ALL ((1.281841273E9) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON (- (json_object(rt0.c0, rt0.c1))) FULL OUTER JOIN t1 ON CAST(((t1.c0)<<(t1.c34)) AS TEXT));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt1 ON (- (json_object(rt0.c0, rt0.c1))) FULL OUTER JOIN t1 ON CAST(((t1.c0)<<(t1.c34)) AS TEXT) WHERE (1.281841273E9);
SELECT SUM(count) FROM (SELECT ALL ((1.281841273E9) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON (- (json_object(rt0.c0, rt0.c1))) FULL OUTER JOIN t1 ON CAST(((t1.c0)<<(t1.c34)) AS TEXT));
SELECT * FROM vt1 FULL OUTER JOIN t1 ON (((((((0.16805645162172766, t1.c1, t1.c1)) NOT BETWEEN ((rt0.c0, t1.c43, rt0.c1)) AND ((t1.c1, vt0.c0, t1.c1))))OR(json_type(rt0.c1))))AND(((vt1.c0)*(x'37c48593')))) LEFT OUTER JOIN rt0 ON ((CAST(t1.c1 AS TEXT)) ISNULL) RIGHT OUTER JOIN vt0 ON ((((t1.c0) BETWEEN (vt0.c0) AND (rt0.c1))) NOT NULL) WHERE ((((vt1.c0)|(t1.c34)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)|(t1.c34)) IN ())) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t1 ON (((((((0.16805645162172766, t1.c1, t1.c1)) NOT BETWEEN ((rt0.c0, t1.c43, rt0.c1)) AND ((t1.c1, vt0.c0, t1.c1))))OR(json_type(rt0.c1))))AND(((vt1.c0)*(x'37c48593')))) LEFT OUTER JOIN rt0 ON ((CAST(t1.c1 AS TEXT)) ISNULL) RIGHT OUTER JOIN vt0 ON ((((t1.c0) BETWEEN (vt0.c0) AND (rt0.c1))) NOT NULL));
SELECT * FROM vt1 FULL OUTER JOIN t1 ON (((((((0.16805645162172766, t1.c1, t1.c1)) NOT BETWEEN ((rt0.c0, t1.c43, rt0.c1)) AND ((t1.c1, vt0.c0, t1.c1))))OR(json_type(rt0.c1))))AND(((vt1.c0)*(x'37c48593')))) LEFT OUTER JOIN rt0 ON ((CAST(t1.c1 AS TEXT)) ISNULL) RIGHT OUTER JOIN vt0 ON ((((t1.c0) BETWEEN (vt0.c0) AND (rt0.c1))) NOT NULL) WHERE ((((vt1.c0)|(t1.c34)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)|(t1.c34)) IN ())) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t1 ON (((((((0.16805645162172766, t1.c1, t1.c1)) NOT BETWEEN ((rt0.c0, t1.c43, rt0.c1)) AND ((t1.c1, vt0.c0, t1.c1))))OR(json_type(rt0.c1))))AND(((vt1.c0)*(x'37c48593')))) LEFT OUTER JOIN rt0 ON ((CAST(t1.c1 AS TEXT)) ISNULL) RIGHT OUTER JOIN vt0 ON ((((t1.c0) BETWEEN (vt0.c0) AND (rt0.c1))) NOT NULL));
SELECT ALL * FROM vt0 WHERE ((vt0.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 COLLATE RTRIM IN ()));
SELECT COUNT(*) FROM vt0, rt0 NOT INDEXED WHERE (GLOB((- (vt0.c0)), x'')) ORDER BY ((rt0.c0) NOT NULL) COLLATE RTRIM DESC  NULLS FIRST, CASE WHEN ((rt0.c1)<<(rt0.c0)) THEN ((rt0.c1)IS(rt0.c1)) WHEN ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN (+ (rt0.c2)) WHEN (vt0.c0 IN ()) THEN ((rt0.c0) NOT NULL) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((GLOB((- (vt0.c0)), x'')) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c0) NOT NULL) COLLATE RTRIM DESC  NULLS FIRST, CASE WHEN ((rt0.c1)<<(rt0.c0)) THEN ((rt0.c1)IS(rt0.c1)) WHEN ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN (+ (rt0.c2)) WHEN (vt0.c0 IN ()) THEN ((rt0.c0) NOT NULL) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 NOT INDEXED WHERE (GLOB((- (vt0.c0)), x'')) ORDER BY ((rt0.c0) NOT NULL) COLLATE RTRIM DESC  NULLS FIRST, CASE WHEN ((rt0.c1)<<(rt0.c0)) THEN ((rt0.c1)IS(rt0.c1)) WHEN ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN (+ (rt0.c2)) WHEN (vt0.c0 IN ()) THEN ((rt0.c0) NOT NULL) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((GLOB((- (vt0.c0)), x'')) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c0) NOT NULL) COLLATE RTRIM DESC  NULLS FIRST, CASE WHEN ((rt0.c1)<<(rt0.c0)) THEN ((rt0.c1)IS(rt0.c1)) WHEN ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN (+ (rt0.c2)) WHEN (vt0.c0 IN ()) THEN ((rt0.c0) NOT NULL) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 NOT INDEXED WHERE (GLOB((- (vt0.c0)), x'')) ORDER BY ((rt0.c0) NOT NULL) COLLATE RTRIM DESC  NULLS FIRST, CASE WHEN ((rt0.c1)<<(rt0.c0)) THEN ((rt0.c1)IS(rt0.c1)) WHEN ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN (+ (rt0.c2)) WHEN (vt0.c0 IN ()) THEN ((rt0.c0) NOT NULL) END ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) ISNULL)) ORDER BY CASE (~ (x''))  WHEN CASE vt0.c0  WHEN '-1859771433' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN (vt0.c0 IN ()) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0)<=(vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN (vt0.c0 IN ()) ELSE (vt0.c0 IN (vt0.c0, vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL)) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY CASE (~ (x''))  WHEN CASE vt0.c0  WHEN '-1859771433' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN (vt0.c0 IN ()) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0)<=(vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN (vt0.c0 IN ()) ELSE (vt0.c0 IN (vt0.c0, vt0.c0)) END ASC);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) ISNULL)) ORDER BY CASE (~ (x''))  WHEN CASE vt0.c0  WHEN '-1859771433' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN (vt0.c0 IN ()) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0)<=(vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN (vt0.c0 IN ()) ELSE (vt0.c0 IN (vt0.c0, vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL)) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY CASE (~ (x''))  WHEN CASE vt0.c0  WHEN '-1859771433' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN (vt0.c0 IN ()) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0)<=(vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN (vt0.c0 IN ()) ELSE (vt0.c0 IN (vt0.c0, vt0.c0)) END ASC);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) ISNULL)) ORDER BY CASE (~ (x''))  WHEN CASE vt0.c0  WHEN '-1859771433' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN (vt0.c0 IN ()) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0)<=(vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN (vt0.c0 IN ()) ELSE (vt0.c0 IN (vt0.c0, vt0.c0)) END ASC;
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (((((rt0.c2)OR(rt0.c1)))AND(vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)OR(rt0.c1)))AND(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (((((rt0.c2)OR(rt0.c1)))AND(vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)OR(rt0.c1)))AND(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (((((rt0.c2)OR(rt0.c1)))AND(vt1.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE ((((~ (vt0.c0)))LIKE((vt0.c0 IN (vt0.c0))))) ORDER BY CASE WHEN ((t1.c43) BETWEEN (t1.c43) AND (t1.c1)) THEN ((t1.c1)AND(vt1.c0)) WHEN ((t1.c34) NOT BETWEEN (vt0.c0) AND (t1.c1)) THEN CASE NULL  WHEN vt1.c0 THEN vt1.c0 ELSE t1.c1 END WHEN LOWER(vt0.c0) THEN LAST_INSERT_ROWID() END, ((((t1.c43) NOT BETWEEN (t1.c1) AND (vt0.c0)))<(((vt0.c0)*(t1.c1)))) ASC, (((('yéª+j\}[q') NOT NULL)) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))LIKE((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY CASE WHEN ((t1.c43) BETWEEN (t1.c43) AND (t1.c1)) THEN ((t1.c1)AND(vt1.c0)) WHEN ((t1.c34) NOT BETWEEN (vt0.c0) AND (t1.c1)) THEN CASE NULL  WHEN vt1.c0 THEN vt1.c0 ELSE t1.c1 END WHEN LOWER(vt0.c0) THEN LAST_INSERT_ROWID() END, ((((t1.c43) NOT BETWEEN (t1.c1) AND (vt0.c0)))<(((vt0.c0)*(t1.c1)))) ASC, (((('yéª+j\}[q') NOT NULL)) IS TRUE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE ((((~ (vt0.c0)))LIKE((vt0.c0 IN (vt0.c0))))) ORDER BY CASE WHEN ((t1.c43) BETWEEN (t1.c43) AND (t1.c1)) THEN ((t1.c1)AND(vt1.c0)) WHEN ((t1.c34) NOT BETWEEN (vt0.c0) AND (t1.c1)) THEN CASE NULL  WHEN vt1.c0 THEN vt1.c0 ELSE t1.c1 END WHEN LOWER(vt0.c0) THEN LAST_INSERT_ROWID() END, ((((t1.c43) NOT BETWEEN (t1.c1) AND (vt0.c0)))<(((vt0.c0)*(t1.c1)))) ASC, (((('yéª+j\}[q') NOT NULL)) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))LIKE((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY CASE WHEN ((t1.c43) BETWEEN (t1.c43) AND (t1.c1)) THEN ((t1.c1)AND(vt1.c0)) WHEN ((t1.c34) NOT BETWEEN (vt0.c0) AND (t1.c1)) THEN CASE NULL  WHEN vt1.c0 THEN vt1.c0 ELSE t1.c1 END WHEN LOWER(vt0.c0) THEN LAST_INSERT_ROWID() END, ((((t1.c43) NOT BETWEEN (t1.c1) AND (vt0.c0)))<(((vt0.c0)*(t1.c1)))) ASC, (((('yéª+j\}[q') NOT NULL)) IS TRUE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE ((((~ (vt0.c0)))LIKE((vt0.c0 IN (vt0.c0))))) ORDER BY CASE WHEN ((t1.c43) BETWEEN (t1.c43) AND (t1.c1)) THEN ((t1.c1)AND(vt1.c0)) WHEN ((t1.c34) NOT BETWEEN (vt0.c0) AND (t1.c1)) THEN CASE NULL  WHEN vt1.c0 THEN vt1.c0 ELSE t1.c1 END WHEN LOWER(vt0.c0) THEN LAST_INSERT_ROWID() END, ((((t1.c43) NOT BETWEEN (t1.c1) AND (vt0.c0)))<(((vt0.c0)*(t1.c1)))) ASC, (((('yéª+j\}[q') NOT NULL)) IS TRUE)  NULLS FIRST;
SELECT * FROM vt0 RIGHT OUTER JOIN t1 ON (((t1.c43 IN ()))GLOB((t1.c43 IN (vt0.c0)))) WHERE (((((vt0.c0) IS FALSE)) NOT NULL)) ORDER BY t1.c34  NULLS FIRST, ((((vt0.c0)*(NULL)))&(((0.2240257054821302) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) NOT NULL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t1 ON (((t1.c43 IN ()))GLOB((t1.c43 IN (vt0.c0)))) ORDER BY t1.c34  NULLS FIRST, ((((vt0.c0)*(NULL)))&(((0.2240257054821302) NOT NULL))) ASC);
SELECT * FROM vt0 RIGHT OUTER JOIN t1 ON (((t1.c43 IN ()))GLOB((t1.c43 IN (vt0.c0)))) WHERE (((((vt0.c0) IS FALSE)) NOT NULL)) ORDER BY t1.c34  NULLS FIRST, ((((vt0.c0)*(NULL)))&(((0.2240257054821302) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) NOT NULL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t1 ON (((t1.c43 IN ()))GLOB((t1.c43 IN (vt0.c0)))) ORDER BY t1.c34  NULLS FIRST, ((((vt0.c0)*(NULL)))&(((0.2240257054821302) NOT NULL))) ASC);
SELECT * FROM vt0 RIGHT OUTER JOIN t1 ON (((t1.c43 IN ()))GLOB((t1.c43 IN (vt0.c0)))) WHERE (((((vt0.c0) IS FALSE)) NOT NULL)) ORDER BY t1.c34  NULLS FIRST, ((((vt0.c0)*(NULL)))&(((0.2240257054821302) NOT NULL))) ASC;
SELECT ALL * FROM vt1 INNER JOIN rt0 ON CAST((NOT (vt1.c0)) AS TEXT) WHERE (x'd3da5d71') ORDER BY CASE WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'd3da5d71') IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON CAST((NOT (vt1.c0)) AS TEXT) ORDER BY CASE WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL * FROM vt1 INNER JOIN rt0 ON CAST((NOT (vt1.c0)) AS TEXT) WHERE (x'd3da5d71') ORDER BY CASE WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'd3da5d71') IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON CAST((NOT (vt1.c0)) AS TEXT) ORDER BY CASE WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL * FROM vt1 INNER JOIN rt0 ON CAST((NOT (vt1.c0)) AS TEXT) WHERE (x'd3da5d71') ORDER BY CASE WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END COLLATE RTRIM DESC  NULLS LAST;
SELECT * FROM rt0, vt1, t1 INNER JOIN vt0 ON vt1.c0 WHERE (((((rt0.c2) ISNULL))*(((0.4732416369451864)IS NOT(rt0.c1))))) ORDER BY CASE ((rt0.c0)/(x''))  WHEN ((((((((t1.c34)AND(t1.c43)))OR(rt0.c1)))OR(t1.c0)))OR(rt0.c1)) THEN (vt1.c0 IN ()) WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c1)/(vt1.c0)) WHEN (rt0.c2 IN (t1.c43, rt0.c2)) THEN SQLITE_SOURCE_ID() END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) ISNULL))*(((0.4732416369451864)IS NOT(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1, t1 INNER JOIN vt0 ON vt1.c0 ORDER BY CASE ((rt0.c0)/(x''))  WHEN ((((((((t1.c34)AND(t1.c43)))OR(rt0.c1)))OR(t1.c0)))OR(rt0.c1)) THEN (vt1.c0 IN ()) WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c1)/(vt1.c0)) WHEN (rt0.c2 IN (t1.c43, rt0.c2)) THEN SQLITE_SOURCE_ID() END  NULLS LAST);
SELECT * FROM rt0, vt1, t1 INNER JOIN vt0 ON vt1.c0 WHERE (((((rt0.c2) ISNULL))*(((0.4732416369451864)IS NOT(rt0.c1))))) ORDER BY CASE ((rt0.c0)/(x''))  WHEN ((((((((t1.c34)AND(t1.c43)))OR(rt0.c1)))OR(t1.c0)))OR(rt0.c1)) THEN (vt1.c0 IN ()) WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c1)/(vt1.c0)) WHEN (rt0.c2 IN (t1.c43, rt0.c2)) THEN SQLITE_SOURCE_ID() END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) ISNULL))*(((0.4732416369451864)IS NOT(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1, t1 INNER JOIN vt0 ON vt1.c0 ORDER BY CASE ((rt0.c0)/(x''))  WHEN ((((((((t1.c34)AND(t1.c43)))OR(rt0.c1)))OR(t1.c0)))OR(rt0.c1)) THEN (vt1.c0 IN ()) WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c1)/(vt1.c0)) WHEN (rt0.c2 IN (t1.c43, rt0.c2)) THEN SQLITE_SOURCE_ID() END  NULLS LAST);
SELECT * FROM rt0, vt1, t1 INNER JOIN vt0 ON vt1.c0 WHERE (((((rt0.c2) ISNULL))*(((0.4732416369451864)IS NOT(rt0.c1))))) ORDER BY CASE ((rt0.c0)/(x''))  WHEN ((((((((t1.c34)AND(t1.c43)))OR(rt0.c1)))OR(t1.c0)))OR(rt0.c1)) THEN (vt1.c0 IN ()) WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c1)/(vt1.c0)) WHEN (rt0.c2 IN (t1.c43, rt0.c2)) THEN SQLITE_SOURCE_ID() END  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((rt0.c2)&(x'f9e8')) COLLATE BINARY) ORDER BY ((((rt0.c2)/(rt0.c1)))<>(((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))OR(NULL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)&(x'f9e8')) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)/(rt0.c1)))<>(((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))OR(NULL)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((rt0.c2)&(x'f9e8')) COLLATE BINARY) ORDER BY ((((rt0.c2)/(rt0.c1)))<>(((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))OR(NULL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)&(x'f9e8')) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)/(rt0.c1)))<>(((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))OR(NULL)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((rt0.c2)&(x'f9e8')) COLLATE BINARY) ORDER BY ((((rt0.c2)/(rt0.c1)))<>(((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))OR(NULL)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2)IS(rt0.c1)) COLLATE RTRIM) ORDER BY ((5.33651308E8) NOT NULL) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)IS(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((5.33651308E8) NOT NULL) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2)IS(rt0.c1)) COLLATE RTRIM) ORDER BY ((5.33651308E8) NOT NULL) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)IS(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((5.33651308E8) NOT NULL) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2)IS(rt0.c1)) COLLATE RTRIM) ORDER BY ((5.33651308E8) NOT NULL) COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL * FROM vt0, rt0, t1, vt1 WHERE ((((((NULL, t1.c43, 0x20b7ea6f)) BETWEEN ((t1.c34, vt1.c0, t1.c43)) AND ((vt0.c0, rt0.c1, rt0.c0))))IS('-2130220733')));
SELECT SUM(count) FROM (SELECT (((((((NULL, t1.c43, 0X20b7ea6f)) BETWEEN ((t1.c34, vt1.c0, t1.c43)) AND ((vt0.c0, rt0.c1, rt0.c0))))IS('-2130220733'))) IS TRUE)  as count FROM vt0, rt0, t1, vt1);
SELECT ALL * FROM vt0, rt0, t1, vt1 WHERE ((((((NULL, t1.c43, 0x20b7ea6f)) BETWEEN ((t1.c34, vt1.c0, t1.c43)) AND ((vt0.c0, rt0.c1, rt0.c0))))IS('-2130220733')));
SELECT SUM(count) FROM (SELECT (((((((NULL, t1.c43, 0X20b7ea6f)) BETWEEN ((t1.c34, vt1.c0, t1.c43)) AND ((vt0.c0, rt0.c1, rt0.c0))))IS('-2130220733'))) IS TRUE)  as count FROM vt0, rt0, t1, vt1);
SELECT ALL * FROM vt0, rt0, t1, vt1 WHERE ((((((NULL, t1.c43, 0x20b7ea6f)) BETWEEN ((t1.c34, vt1.c0, t1.c43)) AND ((vt0.c0, rt0.c1, rt0.c0))))IS('-2130220733')));
SELECT * FROM rt0, vt1, vt0 WHERE (((rt0.c2 COLLATE BINARY) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT * FROM rt0, vt1, vt0 WHERE (((rt0.c2 COLLATE BINARY) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT * FROM rt0, vt1, vt0 WHERE (((rt0.c2 COLLATE BINARY) IS TRUE));
SELECT * FROM vt1, rt0, vt0, t1 WHERE (NULL COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0, vt0, t1 NOT INDEXED);
SELECT * FROM vt1, rt0, vt0, t1 WHERE (NULL COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0, vt0, t1 NOT INDEXED);
SELECT * FROM vt1, rt0, vt0, t1 WHERE (NULL COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, vt0 LEFT OUTER JOIN t1 ON '993906944' WHERE ('Zh');
SELECT SUM(count) FROM (SELECT ALL (('Zh') IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN t1 ON '993906944');
SELECT ALL COUNT(*) FROM rt0, vt0 LEFT OUTER JOIN t1 ON '993906944' WHERE ('Zh');
SELECT SUM(count) FROM (SELECT ALL (('Zh') IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN t1 ON '993906944');
SELECT ALL COUNT(*) FROM rt0, vt0 LEFT OUTER JOIN t1 ON '993906944' WHERE ('Zh');
SELECT * FROM vt1, vt0, t1, rt0 WHERE ((((vt1.c0 COLLATE BINARY))<((CAST(0.13027417569235 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 COLLATE BINARY))<((CAST(0.13027417569235 AS BLOB))))) IS TRUE)  as count FROM vt1, vt0, t1, rt0);
SELECT * FROM vt1, vt0, t1, rt0 WHERE ((((vt1.c0 COLLATE BINARY))<((CAST(0.13027417569235 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 COLLATE BINARY))<((CAST(0.13027417569235 AS BLOB))))) IS TRUE)  as count FROM vt1, vt0, t1, rt0);
SELECT * FROM vt1, vt0, t1, rt0 WHERE ((((vt1.c0 COLLATE BINARY))<((CAST(0.13027417569235 AS BLOB)))));
SELECT COUNT(*) FROM vt1, rt0, t1 WHERE (CAST(rt0.c1 AS REAL)) ORDER BY ((rtreenode(rt0.c1, vt1.c0)) NOTNULL)  NULLS FIRST, ((((((((((((t1.c0)AND(t1.c0)))OR('0.0264835134229362')))OR(((t1.c43)&(t1.c34)))))OR((rt0.c0 IN ()))))OR(t1.c0 COLLATE RTRIM)))AND(TRIM(t1.c43))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS REAL)) IS TRUE)  as count FROM vt1, rt0, t1 ORDER BY ((rtreenode(rt0.c1, vt1.c0)) NOTNULL)  NULLS FIRST, ((((((((((((t1.c0)AND(t1.c0)))OR('0.0264835134229362')))OR(((t1.c43)&(t1.c34)))))OR((rt0.c0 IN ()))))OR(t1.c0 COLLATE RTRIM)))AND(TRIM(t1.c43))) DESC);
SELECT COUNT(*) FROM vt1, rt0, t1 WHERE (CAST(rt0.c1 AS REAL)) ORDER BY ((rtreenode(rt0.c1, vt1.c0)) NOTNULL)  NULLS FIRST, ((((((((((((t1.c0)AND(t1.c0)))OR('0.0264835134229362')))OR(((t1.c43)&(t1.c34)))))OR((rt0.c0 IN ()))))OR(t1.c0 COLLATE RTRIM)))AND(TRIM(t1.c43))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS REAL)) IS TRUE)  as count FROM vt1, rt0, t1 ORDER BY ((rtreenode(rt0.c1, vt1.c0)) NOTNULL)  NULLS FIRST, ((((((((((((t1.c0)AND(t1.c0)))OR('0.0264835134229362')))OR(((t1.c43)&(t1.c34)))))OR((rt0.c0 IN ()))))OR(t1.c0 COLLATE RTRIM)))AND(TRIM(t1.c43))) DESC);
SELECT COUNT(*) FROM vt1, rt0, t1 WHERE (CAST(rt0.c1 AS REAL)) ORDER BY ((rtreenode(rt0.c1, vt1.c0)) NOTNULL)  NULLS FIRST, ((((((((((((t1.c0)AND(t1.c0)))OR('0.0264835134229362')))OR(((t1.c43)&(t1.c34)))))OR((rt0.c0 IN ()))))OR(t1.c0 COLLATE RTRIM)))AND(TRIM(t1.c43))) DESC;
SELECT * FROM vt0, t1 WHERE (t1.c34) ORDER BY (((t1.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN t1.c43 ELSE t1.c43 END)) AND (((((t1.c34))<=((x'1d12')))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c34) IS TRUE)  as count FROM vt0, t1 ORDER BY (((t1.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN t1.c43 ELSE t1.c43 END)) AND (((((t1.c34))<=((x'1d12')))))) DESC  NULLS FIRST);
SELECT * FROM vt0, t1 WHERE (t1.c34) ORDER BY (((t1.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN t1.c43 ELSE t1.c43 END)) AND (((((t1.c34))<=((x'1d12')))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c34) IS TRUE)  as count FROM vt0, t1 ORDER BY (((t1.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN t1.c43 ELSE t1.c43 END)) AND (((((t1.c34))<=((x'1d12')))))) DESC  NULLS FIRST);
SELECT * FROM vt0, t1 WHERE (t1.c34) ORDER BY (((t1.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN t1.c43 ELSE t1.c43 END)) AND (((((t1.c34))<=((x'1d12')))))) DESC  NULLS FIRST;
SELECT ALL * FROM t1, vt0, vt1, rt0 WHERE (CAST((+ (NULL)) AS NUMERIC)) ORDER BY (((~ (t1.c0)))>(((t1.c1) NOTNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (NULL)) AS NUMERIC)) IS TRUE)  as count FROM t1, vt0, vt1, rt0 ORDER BY (((~ (t1.c0)))>(((t1.c1) NOTNULL))) ASC  NULLS LAST);
SELECT ALL * FROM t1, vt0, vt1, rt0 WHERE (CAST((+ (NULL)) AS NUMERIC)) ORDER BY (((~ (t1.c0)))>(((t1.c1) NOTNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (NULL)) AS NUMERIC)) IS TRUE)  as count FROM t1, vt0, vt1, rt0 ORDER BY (((~ (t1.c0)))>(((t1.c1) NOTNULL))) ASC  NULLS LAST);
SELECT ALL * FROM t1, vt0, vt1, rt0 WHERE (CAST((+ (NULL)) AS NUMERIC)) ORDER BY (((~ (t1.c0)))>(((t1.c1) NOTNULL))) ASC  NULLS LAST;
SELECT * FROM vt1 INNER JOIN t1 ON CASE WHEN (t1.c34 IN ()) THEN CASE WHEN t1.c1 THEN vt1.c0 ELSE vt1.c0 END END WHERE (TIME((((t1.c1)) BETWEEN ((t1.c43)) AND ((t1.c43))), ((((t1.c0)OR(t1.c34)))AND(t1.c1)), ((t1.c34) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((TIME((((t1.c1)) BETWEEN ((t1.c43)) AND ((t1.c43))), ((((t1.c0)OR(t1.c34)))AND(t1.c1)), ((t1.c34) IS TRUE))) IS TRUE)  as count FROM vt1 INNER JOIN t1 ON CASE WHEN (t1.c34 IN ()) THEN CASE WHEN t1.c1 THEN vt1.c0 ELSE vt1.c0 END END);
SELECT * FROM vt1 INNER JOIN t1 ON CASE WHEN (t1.c34 IN ()) THEN CASE WHEN t1.c1 THEN vt1.c0 ELSE vt1.c0 END END WHERE (TIME((((t1.c1)) BETWEEN ((t1.c43)) AND ((t1.c43))), ((((t1.c0)OR(t1.c34)))AND(t1.c1)), ((t1.c34) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((TIME((((t1.c1)) BETWEEN ((t1.c43)) AND ((t1.c43))), ((((t1.c0)OR(t1.c34)))AND(t1.c1)), ((t1.c34) IS TRUE))) IS TRUE)  as count FROM vt1 INNER JOIN t1 ON CASE WHEN (t1.c34 IN ()) THEN CASE WHEN t1.c1 THEN vt1.c0 ELSE vt1.c0 END END);
SELECT * FROM vt1 INNER JOIN t1 ON CASE WHEN (t1.c34 IN ()) THEN CASE WHEN t1.c1 THEN vt1.c0 ELSE vt1.c0 END END WHERE (TIME((((t1.c1)) BETWEEN ((t1.c43)) AND ((t1.c43))), ((((t1.c0)OR(t1.c34)))AND(t1.c1)), ((t1.c34) IS TRUE)));
SELECT * FROM rt0, vt0, t1 WHERE ((rt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ())) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT * FROM rt0, vt0, t1 WHERE ((rt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ())) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT * FROM rt0, vt0, t1 WHERE ((rt0.c0 IN ()));
SELECT COUNT(*) FROM t1, vt0 WHERE (((0.12275458725897781) NOTNULL)) ORDER BY ((t1.c1)==(t1.c0)) COLLATE NOCASE DESC  NULLS FIRST, (((t1.c34)/('A6nä··')) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((0.12275458725897781) NOTNULL)) IS TRUE)  as count FROM t1, vt0 ORDER BY ((t1.c1)=(t1.c0)) COLLATE NOCASE DESC  NULLS FIRST, (((t1.c34)/('A6nä··')) IN ()) DESC);
SELECT COUNT(*) FROM t1, vt0 WHERE (((0.12275458725897781) NOTNULL)) ORDER BY ((t1.c1)==(t1.c0)) COLLATE NOCASE DESC  NULLS FIRST, (((t1.c34)/('A6nä··')) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((0.12275458725897781) NOTNULL)) IS TRUE)  as count FROM t1, vt0 ORDER BY ((t1.c1)=(t1.c0)) COLLATE NOCASE DESC  NULLS FIRST, (((t1.c34)/('A6nä··')) IN ()) DESC);
SELECT COUNT(*) FROM t1, vt0 WHERE (((0.12275458725897781) NOTNULL)) ORDER BY ((t1.c1)==(t1.c0)) COLLATE NOCASE DESC  NULLS FIRST, (((t1.c34)/('A6nä··')) IN ()) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CAST(vt0.c0 AS BLOB) THEN (x'' IN ()) ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CAST(vt0.c0 AS BLOB) THEN (x'' IN ()) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CAST(vt0.c0 AS BLOB) THEN (x'' IN ()) ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CAST(vt0.c0 AS BLOB) THEN (x'' IN ()) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CAST(vt0.c0 AS BLOB) THEN (x'' IN ()) ELSE vt0.c0 END);
SELECT * FROM rt0, vt1, vt0 WHERE (CASE CAST(rt0.c0 AS REAL)  WHEN '138021932' COLLATE BINARY THEN (rt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c0 AS REAL)  WHEN '138021932' COLLATE BINARY THEN (rt0.c1 IN ()) END) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT * FROM rt0, vt1, vt0 WHERE (CASE CAST(rt0.c0 AS REAL)  WHEN '138021932' COLLATE BINARY THEN (rt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c0 AS REAL)  WHEN '138021932' COLLATE BINARY THEN (rt0.c1 IN ()) END) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT * FROM rt0, vt1, vt0 WHERE (CASE CAST(rt0.c0 AS REAL)  WHEN '138021932' COLLATE BINARY THEN (rt0.c1 IN ()) END);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((rt0.c1)>=(rt0.c1)))) AND ((rt0.c0))) WHERE (((((8.56219897E8) NOT NULL))=(((rt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((8.56219897E8) NOT NULL))=(((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((rt0.c1)>=(rt0.c1)))) AND ((rt0.c0))));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((rt0.c1)>=(rt0.c1)))) AND ((rt0.c0))) WHERE (((((8.56219897E8) NOT NULL))=(((rt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((8.56219897E8) NOT NULL))=(((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((rt0.c1)>=(rt0.c1)))) AND ((rt0.c0))));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((rt0.c1)>=(rt0.c1)))) AND ((rt0.c0))) WHERE (((((8.56219897E8) NOT NULL))=(((rt0.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (((x'')<>(1.662598694E9)));
SELECT SUM(count) FROM (SELECT ((((x'')<>(1.662598694E9))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (((x'')<>(1.662598694E9)));
SELECT SUM(count) FROM (SELECT ((((x'')<>(1.662598694E9))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (((x'')<>(1.662598694E9)));
SELECT ALL * FROM rt0, vt1 WHERE (CASE (~ (rt0.c2))  WHEN (0.2079529198194353 IN ()) THEN (rt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE (~ (rt0.c2))  WHEN (0.2079529198194353 IN ()) THEN (rt0.c1 IN ()) END) IS TRUE)  as count FROM rt0 NOT INDEXED, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (CASE (~ (rt0.c2))  WHEN (0.2079529198194353 IN ()) THEN (rt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE (~ (rt0.c2))  WHEN (0.2079529198194353 IN ()) THEN (rt0.c1 IN ()) END) IS TRUE)  as count FROM rt0 NOT INDEXED, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (CASE (~ (rt0.c2))  WHEN (0.2079529198194353 IN ()) THEN (rt0.c1 IN ()) END);
SELECT * FROM vt0, vt1 RIGHT OUTER JOIN t1 ON ((((((t1.c1)OR(t1.c1)))AND(vt0.c0)))>=(((vt0.c0)<<(x'cdca')))) RIGHT OUTER JOIN rt0 ON (((t1.c1)<>(vt1.c0)) IN ()) WHERE (CAST(((((vt1.c0)AND(-1764435032)))OR(rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.c0)AND(-1764435032)))OR(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t1 ON ((((((t1.c1)OR(t1.c1)))AND(vt0.c0)))>=(((vt0.c0)<<(x'cdca')))) RIGHT OUTER JOIN rt0 ON (((t1.c1)!=(vt1.c0)) IN ()));
SELECT * FROM vt0, vt1 RIGHT OUTER JOIN t1 ON ((((((t1.c1)OR(t1.c1)))AND(vt0.c0)))>=(((vt0.c0)<<(x'cdca')))) RIGHT OUTER JOIN rt0 ON (((t1.c1)<>(vt1.c0)) IN ()) WHERE (CAST(((((vt1.c0)AND(-1764435032)))OR(rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.c0)AND(-1764435032)))OR(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t1 ON ((((((t1.c1)OR(t1.c1)))AND(vt0.c0)))>=(((vt0.c0)<<(x'cdca')))) RIGHT OUTER JOIN rt0 ON (((t1.c1)!=(vt1.c0)) IN ()));
SELECT * FROM vt0, vt1 RIGHT OUTER JOIN t1 ON ((((((t1.c1)OR(t1.c1)))AND(vt0.c0)))>=(((vt0.c0)<<(x'cdca')))) RIGHT OUTER JOIN rt0 ON (((t1.c1)<>(vt1.c0)) IN ()) WHERE (CAST(((((vt1.c0)AND(-1764435032)))OR(rt0.c2)) AS TEXT));
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c2) ORDER BY -572635535;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 ORDER BY -572635535);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c2) ORDER BY -572635535;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 ORDER BY -572635535);
SELECT COUNT(*) FROM vt1, vt0 FULL OUTER JOIN t1 ON (NULLIF(DISTINCT t1.c34, NULL) IN ()) FULL OUTER JOIN rt0 ON (CASE t1.c1  WHEN t1.c1 THEN t1.c34 WHEN t1.c43 THEN rt0.c1 WHEN t1.c0 THEN t1.c34 END IN (TRIM(t1.c0))) WHERE (ABS(DISTINCT highlight(t1.c34, rt0.c2, rt0.c0, t1.c1)));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT highlight(t1.c34, rt0.c2, rt0.c0, t1.c1))) IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN t1 ON (NULLIF(DISTINCT t1.c34, NULL) IN ()) FULL OUTER JOIN rt0 ON (CASE t1.c1  WHEN t1.c1 THEN t1.c34 WHEN t1.c43 THEN rt0.c1 WHEN t1.c0 THEN t1.c34 END IN (TRIM(t1.c0))));
SELECT COUNT(*) FROM vt1, vt0 FULL OUTER JOIN t1 ON (NULLIF(DISTINCT t1.c34, NULL) IN ()) FULL OUTER JOIN rt0 ON (CASE t1.c1  WHEN t1.c1 THEN t1.c34 WHEN t1.c43 THEN rt0.c1 WHEN t1.c0 THEN t1.c34 END IN (TRIM(t1.c0))) WHERE (ABS(DISTINCT highlight(t1.c34, rt0.c2, rt0.c0, t1.c1)));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT highlight(t1.c34, rt0.c2, rt0.c0, t1.c1))) IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN t1 ON (NULLIF(DISTINCT t1.c34, NULL) IN ()) FULL OUTER JOIN rt0 ON (CASE t1.c1  WHEN t1.c1 THEN t1.c34 WHEN t1.c43 THEN rt0.c1 WHEN t1.c0 THEN t1.c34 END IN (TRIM(t1.c0))));
SELECT ALL COUNT(*) FROM rt0, t1, vt0 NOT INDEXED, vt1 WHERE ((((rt0.c0, rt0.c1, rt0.c0))=(('1352227272', vt1.c0, 'Jh'))) COLLATE BINARY) ORDER BY vt0.c0, DATE(rt0.c2, ABS(DISTINCT vt1.c0), ((rt0.c0)AND(rt0.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c1, rt0.c0))==(('1352227272', vt1.c0, 'Jh'))) COLLATE BINARY) IS TRUE)  as count FROM rt0, t1, vt0, vt1 ORDER BY vt0.c0, DATE(rt0.c2, ABS(DISTINCT vt1.c0), ((rt0.c0)AND(rt0.c2))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t1, vt0 NOT INDEXED, vt1 WHERE ((((rt0.c0, rt0.c1, rt0.c0))=(('1352227272', vt1.c0, 'Jh'))) COLLATE BINARY) ORDER BY vt0.c0, DATE(rt0.c2, ABS(DISTINCT vt1.c0), ((rt0.c0)AND(rt0.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c1, rt0.c0))==(('1352227272', vt1.c0, 'Jh'))) COLLATE BINARY) IS TRUE)  as count FROM rt0, t1, vt0, vt1 ORDER BY vt0.c0, DATE(rt0.c2, ABS(DISTINCT vt1.c0), ((rt0.c0)AND(rt0.c2))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t1, vt0 NOT INDEXED, vt1 WHERE ((((rt0.c0, rt0.c1, rt0.c0))=(('1352227272', vt1.c0, 'Jh'))) COLLATE BINARY) ORDER BY vt0.c0, DATE(rt0.c2, ABS(DISTINCT vt1.c0), ((rt0.c0)AND(rt0.c2))) DESC  NULLS LAST;
SELECT * FROM t1, rt0, vt1, vt0 WHERE (CASE ((t1.c43) ISNULL)  WHEN ((t1.c0) NOTNULL) THEN ((((t1.c0)AND(vt1.c0)))OR(vt1.c0)) ELSE ((rt0.c1)|(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t1.c43) ISNULL)  WHEN ((t1.c0) NOTNULL) THEN ((((t1.c0)AND(vt1.c0)))OR(vt1.c0)) ELSE ((rt0.c1)|(vt0.c0)) END) IS TRUE)  as count FROM t1, rt0, vt1, vt0);
SELECT * FROM t1, rt0, vt1, vt0 WHERE (CASE ((t1.c43) ISNULL)  WHEN ((t1.c0) NOTNULL) THEN ((((t1.c0)AND(vt1.c0)))OR(vt1.c0)) ELSE ((rt0.c1)|(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t1.c43) ISNULL)  WHEN ((t1.c0) NOTNULL) THEN ((((t1.c0)AND(vt1.c0)))OR(vt1.c0)) ELSE ((rt0.c1)|(vt0.c0)) END) IS TRUE)  as count FROM t1, rt0, vt1, vt0);
SELECT * FROM t1, rt0, vt1, vt0 WHERE (CASE ((t1.c43) ISNULL)  WHEN ((t1.c0) NOTNULL) THEN ((((t1.c0)AND(vt1.c0)))OR(vt1.c0)) ELSE ((rt0.c1)|(vt0.c0)) END);
SELECT * FROM vt1 WHERE (((((vt1.c0)||(vt1.c0)))>=((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)||(vt1.c0)))>=((~ (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0)||(vt1.c0)))>=((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)||(vt1.c0)))>=((~ (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0)||(vt1.c0)))>=((~ (vt1.c0)))));
SELECT ALL * FROM t1 WHERE (((NULLIF(DISTINCT NULL, t1.c34)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(DISTINCT NULL, t1.c34)) NOT NULL)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((NULLIF(DISTINCT NULL, t1.c34)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(DISTINCT NULL, t1.c34)) NOT NULL)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((NULLIF(DISTINCT NULL, t1.c34)) NOT NULL));
SELECT COUNT(*) FROM rt0, vt0, vt1, t1 WHERE ((NOT (0.11136078426469465)));
SELECT SUM(count) FROM (SELECT (((NOT (0.11136078426469465))) IS TRUE)  as count FROM rt0, vt0, vt1, t1);
SELECT COUNT(*) FROM rt0, vt0, vt1, t1 WHERE ((NOT (0.11136078426469465)));
SELECT SUM(count) FROM (SELECT (((NOT (0.11136078426469465))) IS TRUE)  as count FROM rt0, vt0, vt1, t1);
SELECT COUNT(*) FROM rt0, vt0, vt1, t1 WHERE ((NOT (0.11136078426469465)));
SELECT COUNT(*) FROM vt1, rt0 WHERE ((rt0.c2 COLLATE BINARY IN (((((rt0.c1)AND(0xffffffffd5731c2d)))OR(rt0.c0)), (~ (rt0.c1))))) ORDER BY ((((rt0.c2) NOT NULL))/(x'')), (CASE rt0.c1  WHEN vt1.c0 THEN vt1.c0 END IN ());
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 COLLATE BINARY IN (((((rt0.c1)AND(0Xffffffffd5731c2d)))OR(rt0.c0)), (~ (rt0.c1))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c2) NOT NULL))/(x'')), (CASE rt0.c1  WHEN vt1.c0 THEN vt1.c0 END IN ()));
SELECT COUNT(*) FROM vt1, rt0 WHERE ((rt0.c2 COLLATE BINARY IN (((((rt0.c1)AND(0xffffffffd5731c2d)))OR(rt0.c0)), (~ (rt0.c1))))) ORDER BY ((((rt0.c2) NOT NULL))/(x'')), (CASE rt0.c1  WHEN vt1.c0 THEN vt1.c0 END IN ());
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 COLLATE BINARY IN (((((rt0.c1)AND(0Xffffffffd5731c2d)))OR(rt0.c0)), (~ (rt0.c1))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c2) NOT NULL))/(x'')), (CASE rt0.c1  WHEN vt1.c0 THEN vt1.c0 END IN ()));
SELECT COUNT(*) FROM vt1, rt0 WHERE ((rt0.c2 COLLATE BINARY IN (((((rt0.c1)AND(0xffffffffd5731c2d)))OR(rt0.c0)), (~ (rt0.c1))))) ORDER BY ((((rt0.c2) NOT NULL))/(x'')), (CASE rt0.c1  WHEN vt1.c0 THEN vt1.c0 END IN ());
SELECT * FROM rt0, t1 NATURAL JOIN vt1 WHERE ((((t1.c0, t1.c34, rt0.c0))<((t1.c34, t1.c1, rt0.c1))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0, t1.c34, rt0.c0))<((t1.c34, t1.c1, rt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t1 NATURAL JOIN vt1);
SELECT * FROM rt0, t1 NATURAL JOIN vt1 WHERE ((((t1.c0, t1.c34, rt0.c0))<((t1.c34, t1.c1, rt0.c1))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0, t1.c34, rt0.c0))<((t1.c34, t1.c1, rt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t1 NATURAL JOIN vt1);
SELECT * FROM rt0, t1 NATURAL JOIN vt1 WHERE ((((t1.c0, t1.c34, rt0.c0))<((t1.c34, t1.c1, rt0.c1))) COLLATE RTRIM);
SELECT ALL * FROM t1, rt0 WHERE (LIKELY(DISTINCT ((((t1.c1)OR(rt0.c1)))OR(t1.c0)))) ORDER BY CAST((('-1990928614')>>(0.9246213332224421)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((((t1.c1)OR(rt0.c1)))OR(t1.c0)))) IS TRUE)  as count FROM t1, rt0 ORDER BY CAST((('-1990928614')>>(0.9246213332224421)) AS BLOB) ASC);
SELECT ALL * FROM t1, rt0 WHERE (LIKELY(DISTINCT ((((t1.c1)OR(rt0.c1)))OR(t1.c0)))) ORDER BY CAST((('-1990928614')>>(0.9246213332224421)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((((t1.c1)OR(rt0.c1)))OR(t1.c0)))) IS TRUE)  as count FROM t1, rt0 ORDER BY CAST((('-1990928614')>>(0.9246213332224421)) AS BLOB) ASC);
SELECT ALL * FROM t1, rt0 WHERE (LIKELY(DISTINCT ((((t1.c1)OR(rt0.c1)))OR(t1.c0)))) ORDER BY CAST((('-1990928614')>>(0.9246213332224421)) AS BLOB) ASC;
SELECT COUNT(*) FROM vt0, t1 FULL OUTER JOIN rt0 ON (~ (CAST(t1.c43 AS TEXT))) INNER JOIN vt1 ON vt1.c0 WHERE ((NOT (vt1.c0 COLLATE BINARY))) ORDER BY (t1.c43 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t1 FULL OUTER JOIN rt0 ON (~ (CAST(t1.c43 AS TEXT))) INNER JOIN vt1 ON vt1.c0 ORDER BY (t1.c43 IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1 FULL OUTER JOIN rt0 ON (~ (CAST(t1.c43 AS TEXT))) INNER JOIN vt1 ON vt1.c0 WHERE ((NOT (vt1.c0 COLLATE BINARY))) ORDER BY (t1.c43 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t1 FULL OUTER JOIN rt0 ON (~ (CAST(t1.c43 AS TEXT))) INNER JOIN vt1 ON vt1.c0 ORDER BY (t1.c43 IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1 FULL OUTER JOIN rt0 ON (~ (CAST(t1.c43 AS TEXT))) INNER JOIN vt1 ON vt1.c0 WHERE ((NOT (vt1.c0 COLLATE BINARY))) ORDER BY (t1.c43 IN ())  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (0.549496552710489);
SELECT SUM(count) FROM (SELECT ((0.549496552710489) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (0.549496552710489);
SELECT SUM(count) FROM (SELECT ((0.549496552710489) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (0.549496552710489);
SELECT ALL * FROM vt0, t1, rt0, vt1 WHERE (PRINTF(t1.c34) COLLATE BINARY) ORDER BY SQLITE_VERSION()  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((PRINTF(t1.c34) COLLATE BINARY) IS TRUE)  as count FROM vt0, t1, rt0, vt1 ORDER BY SQLITE_VERSION()  NULLS LAST);
SELECT ALL * FROM vt0, t1, rt0, vt1 WHERE (PRINTF(t1.c34) COLLATE BINARY) ORDER BY SQLITE_VERSION()  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((PRINTF(t1.c34) COLLATE BINARY) IS TRUE)  as count FROM vt0, t1, rt0, vt1 ORDER BY SQLITE_VERSION()  NULLS LAST);
SELECT ALL * FROM vt0, t1, rt0, vt1 WHERE (PRINTF(t1.c34) COLLATE BINARY) ORDER BY SQLITE_VERSION()  NULLS LAST;
SELECT * FROM vt1, rt0, t1 WHERE (UNLIKELY(rt0.c1));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(rt0.c1)) IS TRUE)  as count FROM vt1, rt0, t1);
SELECT * FROM vt1, rt0, t1 WHERE (UNLIKELY(rt0.c1));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(rt0.c1)) IS TRUE)  as count FROM vt1, rt0, t1);
SELECT * FROM vt1, rt0, t1 WHERE (UNLIKELY(rt0.c1));
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB))<<((((vt1.c0))>=((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB))<<((((vt1.c0))>=((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB))<<((((vt1.c0))>=((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB))<<((((vt1.c0))>=((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB))<<((((vt1.c0))>=((vt1.c0))))));
SELECT * FROM vt0, rt0, vt1, t1 INDEXED BY i54 WHERE (((((t1.c1)&(t1.c1)))>=(CASE t1.c34  WHEN t1.c43 THEN t1.c1 WHEN rt0.c1 THEN t1.c34 WHEN t1.c43 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c1)&(t1.c1)))>=(CASE t1.c34  WHEN t1.c43 THEN t1.c1 WHEN rt0.c1 THEN t1.c34 WHEN t1.c43 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM vt0, rt0, vt1, t1 INDEXED BY i54);
SELECT * FROM vt0, rt0, vt1, t1 INDEXED BY i54 WHERE (((((t1.c1)&(t1.c1)))>=(CASE t1.c34  WHEN t1.c43 THEN t1.c1 WHEN rt0.c1 THEN t1.c34 WHEN t1.c43 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c1)&(t1.c1)))>=(CASE t1.c34  WHEN t1.c43 THEN t1.c1 WHEN rt0.c1 THEN t1.c34 WHEN t1.c43 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM vt0, rt0, vt1, t1 INDEXED BY i54);
SELECT COUNT(*) FROM vt1 WHERE (((NULL)>>(LOWER(vt1.c0)))) ORDER BY CASE WHEN CAST(vt1.c0 AS REAL) THEN ((vt1.c0) ISNULL) WHEN (((('-1448587848')OR(vt1.c0)))AND(vt1.c0)) THEN (- (vt1.c0)) WHEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(x'87e3')) THEN (vt1.c0 IN ()) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>>(LOWER(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN CAST(vt1.c0 AS REAL) THEN ((vt1.c0) ISNULL) WHEN (((('-1448587848')OR(vt1.c0)))AND(vt1.c0)) THEN (- (vt1.c0)) WHEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(x'87e3')) THEN (vt1.c0 IN ()) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((NULL)>>(LOWER(vt1.c0)))) ORDER BY CASE WHEN CAST(vt1.c0 AS REAL) THEN ((vt1.c0) ISNULL) WHEN (((('-1448587848')OR(vt1.c0)))AND(vt1.c0)) THEN (- (vt1.c0)) WHEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(x'87e3')) THEN (vt1.c0 IN ()) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>>(LOWER(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN CAST(vt1.c0 AS REAL) THEN ((vt1.c0) ISNULL) WHEN (((('-1448587848')OR(vt1.c0)))AND(vt1.c0)) THEN (- (vt1.c0)) WHEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(x'87e3')) THEN (vt1.c0 IN ()) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((NULL)>>(LOWER(vt1.c0)))) ORDER BY CASE WHEN CAST(vt1.c0 AS REAL) THEN ((vt1.c0) ISNULL) WHEN (((('-1448587848')OR(vt1.c0)))AND(vt1.c0)) THEN (- (vt1.c0)) WHEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(x'87e3')) THEN (vt1.c0 IN ()) END ASC  NULLS FIRST;
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (NOT (((((t1.c0)OR(0Xffffffffb04eb2de)))OR(t1.c1)))) RIGHT OUTER JOIN t1 ON (((vt0.c0, rt0.c2, rt0.c0))<((rt0.c1, x'', vt0.c0))) COLLATE RTRIM WHERE (((((t1.c43) ISNULL))>(CASE rt0.c1  WHEN rt0.c0 THEN t1.c0 ELSE rt0.c2 END))) ORDER BY CASE t1.c1 COLLATE BINARY  WHEN (- (rt0.c2)) THEN CAST(t1.c0 AS REAL) WHEN ((vt0.c0)>>(rt0.c0)) THEN ((vt0.c0)IS(t1.c34)) WHEN rt0.c1 THEN 4.91591856E8 ELSE vt0.c0 COLLATE BINARY END;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c43) ISNULL))>(CASE rt0.c1  WHEN rt0.c0 THEN t1.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (NOT (((((t1.c0)OR(0Xffffffffb04eb2de)))OR(t1.c1)))) RIGHT OUTER JOIN t1 ON (((vt0.c0, rt0.c2, rt0.c0))<((rt0.c1, x'', vt0.c0))) COLLATE RTRIM ORDER BY CASE t1.c1 COLLATE BINARY  WHEN (- (rt0.c2)) THEN CAST(t1.c0 AS REAL) WHEN ((vt0.c0)>>(rt0.c0)) THEN ((vt0.c0)IS(t1.c34)) WHEN rt0.c1 THEN 4.91591856E8 ELSE vt0.c0 COLLATE BINARY END);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (NOT (((((t1.c0)OR(0Xffffffffb04eb2de)))OR(t1.c1)))) RIGHT OUTER JOIN t1 ON (((vt0.c0, rt0.c2, rt0.c0))<((rt0.c1, x'', vt0.c0))) COLLATE RTRIM WHERE (((((t1.c43) ISNULL))>(CASE rt0.c1  WHEN rt0.c0 THEN t1.c0 ELSE rt0.c2 END))) ORDER BY CASE t1.c1 COLLATE BINARY  WHEN (- (rt0.c2)) THEN CAST(t1.c0 AS REAL) WHEN ((vt0.c0)>>(rt0.c0)) THEN ((vt0.c0)IS(t1.c34)) WHEN rt0.c1 THEN 4.91591856E8 ELSE vt0.c0 COLLATE BINARY END;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c43) ISNULL))>(CASE rt0.c1  WHEN rt0.c0 THEN t1.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (NOT (((((t1.c0)OR(0Xffffffffb04eb2de)))OR(t1.c1)))) RIGHT OUTER JOIN t1 ON (((vt0.c0, rt0.c2, rt0.c0))<((rt0.c1, x'', vt0.c0))) COLLATE RTRIM ORDER BY CASE t1.c1 COLLATE BINARY  WHEN (- (rt0.c2)) THEN CAST(t1.c0 AS REAL) WHEN ((vt0.c0)>>(rt0.c0)) THEN ((vt0.c0)IS(t1.c34)) WHEN rt0.c1 THEN 4.91591856E8 ELSE vt0.c0 COLLATE BINARY END);
SELECT ALL * FROM vt0 WHERE ((((((((vt0.c0)OR(NULL)))AND(vt0.c0))))==((vt0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0)OR(NULL)))AND(vt0.c0))))==((vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((((vt0.c0)OR(NULL)))AND(vt0.c0))))==((vt0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0)OR(NULL)))AND(vt0.c0))))==((vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((((vt0.c0)OR(NULL)))AND(vt0.c0))))==((vt0.c0 COLLATE NOCASE))));
SELECT ALL * FROM vt1, t1, vt0, rt0 WHERE (HEX(DISTINCT CAST(vt0.c0 AS REAL))) ORDER BY ((t1.c34 COLLATE BINARY)%(t1.c34 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT CAST(vt0.c0 AS REAL))) IS TRUE)  as count FROM vt1, t1, vt0, rt0 ORDER BY ((t1.c34 COLLATE BINARY)%(t1.c34 COLLATE NOCASE)) DESC);
SELECT ALL * FROM vt1, t1, vt0, rt0 WHERE (HEX(DISTINCT CAST(vt0.c0 AS REAL))) ORDER BY ((t1.c34 COLLATE BINARY)%(t1.c34 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT CAST(vt0.c0 AS REAL))) IS TRUE)  as count FROM vt1, t1, vt0, rt0 ORDER BY ((t1.c34 COLLATE BINARY)%(t1.c34 COLLATE NOCASE)) DESC);
SELECT ALL * FROM vt1, t1, vt0, rt0 WHERE (HEX(DISTINCT CAST(vt0.c0 AS REAL))) ORDER BY ((t1.c34 COLLATE BINARY)%(t1.c34 COLLATE NOCASE)) DESC;
SELECT * FROM vt0, rt0 WHERE ((((+ (vt0.c0)))>=((rt0.c1 IN (rt0.c1, rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))>=((rt0.c1 IN (rt0.c1, rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((+ (vt0.c0)))>=((rt0.c1 IN (rt0.c1, rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))>=((rt0.c1 IN (rt0.c1, rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((+ (vt0.c0)))>=((rt0.c1 IN (rt0.c1, rt0.c0)))));
SELECT * FROM vt1, vt0, t1, rt0 WHERE (DATETIME(((NULL)&(t1.c0)), (('?V\n') NOTNULL), vt1.c0)) ORDER BY (+ (((t1.c43)<=(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((DATETIME(((NULL)&(t1.c0)), (('?V\n') NOTNULL), vt1.c0)) IS TRUE)  as count FROM vt1, vt0, t1, rt0 ORDER BY (+ (((t1.c43)<=(rt0.c0))))  NULLS FIRST);
SELECT * FROM vt1, vt0, t1, rt0 WHERE (DATETIME(((NULL)&(t1.c0)), (('?V\n') NOTNULL), vt1.c0)) ORDER BY (+ (((t1.c43)<=(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((DATETIME(((NULL)&(t1.c0)), (('?V\n') NOTNULL), vt1.c0)) IS TRUE)  as count FROM vt1, vt0, t1, rt0 ORDER BY (+ (((t1.c43)<=(rt0.c0))))  NULLS FIRST);
SELECT * FROM vt1, vt0, t1, rt0 WHERE (DATETIME(((NULL)&(t1.c0)), (('?V\n') NOTNULL), vt1.c0)) ORDER BY (+ (((t1.c43)<=(rt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (NULLIF(x'7466', (((rt0.c2))>(('478629296')))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(x'7466', (((rt0.c2))>(('478629296'))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULLIF(x'7466', (((rt0.c2))>(('478629296')))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(x'7466', (((rt0.c2))>(('478629296'))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULLIF(x'7466', (((rt0.c2))>(('478629296')))));
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (t1.c43);
SELECT SUM(count) FROM (SELECT ((t1.c43) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (t1.c43);
SELECT SUM(count) FROM (SELECT ((t1.c43) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (t1.c43);
