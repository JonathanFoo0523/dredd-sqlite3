-- Time: 2024/06/11 11:47:59
-- Database: database4
-- Database version: 3.40.0
-- seed value: 3432619904
PRAGMA cache_size = 50000; -- 11ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, +c3 INT ); -- 1ms;
REINDEX; -- 1ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (x''), (x''), (x'625a71ab'); -- 1ms;
UPDATE OR IGNORE rt0 SET (c1)=('') WHERE CAST((((rt0.c2))<=((rt0.c1))) AS INTEGER); -- 1ms;
INSERT OR IGNORE INTO rt0 VALUES ('', x'', 'a', ''); -- 1ms;
PRAGMA cache_spill; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1, c3)=(0.7380131664244689, NULL) WHERE (MAX(rt0.c2, rt0.c0) IN (UNLIKELY(rt0.c0))); -- 1ms;
UPDATE OR FAIL rt0 SET c3=0.8209983777332385; -- 0ms;
UPDATE OR ROLLBACK rt0 SET c0=NULL; -- 0ms;
PRAGMA recursive_triggers = false; -- 4ms;
INSERT OR IGNORE INTO rt0(c0, c3, c2, c1) VALUES (0.6284404032151788, '', '<9KfU', NULL); -- 1ms;
PRAGMA incremental_vacuum; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
ANALYZE; -- 1ms;
INSERT OR ABORT INTO rt0(c0, c3, c1) VALUES ('699289511', 0.5216934078493459, '-904351406'), (-1834252507, '-904351406', x''), (x'', 0.5164080969823032, '-904351406'); -- 1ms;
INSERT OR IGNORE INTO rt0(c1, c3, c2, c0) VALUES (']GA6RW', '-1655577944', 1347425224, ''), (x'', 0.6958517251056561, '1694827542', '-904351406'), (x'', x'', '-1834252507', -1834252507); -- 0ms;
DELETE FROM rt0; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2) VALUES (0.5216934078493459, NULL); -- 2ms;
UPDATE OR ROLLBACK vt0 SET c0=NULL, c0=0x41071238 WHERE CAST(('699289511' IN ()) AS TEXT); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA ignore_check_constraints = false; -- 0ms;
UPDATE rt0 SET c1=x'', c3=x''; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2, c0, c1)=(NULL, 0.9898609193578942, 0Xffffffffca18b152); -- 0ms;
UPDATE rt0 SET (c2)=(x'') WHERE (((rt0.c0))<((((rt0.c0) NOT NULL)))); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT CASE WHEN (rt0.c3 IN ()) THEN rt0.c1 COLLATE BINARY WHEN ((rt0.c2)!=(rt0.c0)) THEN (((rt0.c0))=((rt0.c1))) WHEN CAST(rt0.c0 AS BLOB) THEN ABS(rt0.c2) ELSE CASE WHEN rt0.c1 THEN '1090982456' END END FROM rt0; -- 0ms;
ANALYZE main; -- 1ms;
UPDATE OR IGNORE vt0 SET c0=-1132912993 WHERE (((NOT (vt0.c0)))%(((vt0.c0)AND(vt0.c0)))); -- 0ms;
UPDATE rt0 SET c3=0.9959158257674104 WHERE ((((rt0.c3))>((rt0.c3))) IN ()); -- 0ms;
UPDATE rt0 SET (c2, c2)=('\-', 0.7595212194349786) WHERE ((((0.44386904098454116)>=(rt0.c0))) NOT BETWEEN ((rt0.c0 IN ())) AND (((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))); -- 0ms;
INSERT OR FAIL INTO rt0(c2, c0) VALUES (0.0018447986227185798, NULL); -- 1ms;
INSERT OR ROLLBACK INTO rt0(c0, c2, c1) VALUES (1750994071, '0.6958517251056561', '+Rë´«hs'), (1.750994071E9, 0.8836333383695452, x''), (0x41071238, 0.27094730513181, x''); -- 1ms;
INSERT OR ROLLBACK INTO rt0(c0) VALUES ('Relq'); -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2, c3) VALUES (x'', 119382867, x''); -- 1ms;
UPDATE OR IGNORE rt0 SET c0=x'344a'; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE vt0 SET (c0)=(0x38408913) WHERE (((vt0.c0)) NOT BETWEEN ((((0.5551253980864381) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND (('2,c<sP5|'))); -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr0 INSTEAD OF INSERT ON v0 BEGIN UPDATE vt0 SET c0=0X41071238, c0=x'', c0=NULL WHERE ((((vt0.c0) ISNULL))<<((((vt0.c0))>((vt0.c0)))));END; -- 0ms;
UPDATE OR ABORT rt0 SET (c3)=(0xffffffffca18b152) WHERE ((((((rt0.c1)OR(rt0.c0)))OR(rt0.c3)))*(rt0.c3 COLLATE RTRIM)); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0, c0)=('', x'6cd1', x'1ffa'); -- 0ms;
PRAGMA short_column_names = false; -- 0ms;
REINDEX  rt0; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR ROLLBACK rt0 SET c3=x'c4ab'; -- 1ms;
UPDATE OR IGNORE vt0 SET c0=0.9959158257674104, c0=0.5216934078493459 WHERE ((((LIKELIHOOD(DISTINCT vt0.c0, 0.7891557602667082))OR((vt0.c0 IN ()))))OR((vt0.c0 IN ()))); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0x685e0c97) WHERE ((vt0.c0) NOTNULL) COLLATE RTRIM; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM temp; -- 1ms;
PRAGMA checkpoint_fullfsync; -- 0ms;
PRAGMA temp.legacy_file_format = true; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE vt0 SET c0=0X1 WHERE ((CAST(vt0.c0 AS BLOB))|(((0.21594377980471302)%(vt0.c0)))); -- 0ms;
UPDATE OR FAIL vt0 SET (c0, c0)=('', x'27b2') WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (-360888483)))>(vt0.c0 COLLATE BINARY)); -- 0ms;
UPDATE OR IGNORE rt0 SET c0=-1.834252507E9, c1=NULL; -- 0ms;
UPDATE OR ROLLBACK rt0 SET c1=0.6958517251056561, c0=NULL WHERE rt0.c3; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
COMMIT TRANSACTION; -- 2ms;
PRAGMA reverse_unordered_selects = true; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=-3.60888483E8; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1474435935);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA main.optimize; -- 0ms;
ANALYZE; -- 1ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (NULL); -- 0ms;
ANALYZE main; -- 1ms;
REINDEX BINARY; -- 0ms;
DROP VIEW v0; -- 0ms;
UPDATE vt0 SET (c0)=(NULL); -- 0ms;
PRAGMA foreign_keys; -- 0ms;
PRAGMA optimize; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=x'b846'; -- 1ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM rt0, vt0 WHERE ((- (((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((- (((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((- (((rt0.c1) IS TRUE))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (((((vt0.c0)OR(vt0.c0)))OR(rt0.c1)) IN ((+ (rt0.c2)), rt0.c2, ((vt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0)))) WHERE (((('\gSB,*W^<')||(rt0.c2)) IN (CAST(x'' AS REAL)))) ORDER BY (((rt0.c0 IN ()))LIKE(SUBSTR(rt0.c0, rt0.c2))) DESC, CAST(rt0.c0 AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((((('\gSB,*W^<')||(rt0.c2)) IN (CAST(x'' AS REAL)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((((vt0.c0)OR(vt0.c0)))OR(rt0.c1)) IN ((+ (rt0.c2)), rt0.c2, ((vt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0)))) ORDER BY (((rt0.c0 IN ()))LIKE(SUBSTR(rt0.c0, rt0.c2))) DESC, CAST(rt0.c0 AS NUMERIC) ASC);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (((((vt0.c0)OR(vt0.c0)))OR(rt0.c1)) IN ((+ (rt0.c2)), rt0.c2, ((vt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0)))) WHERE (((('\gSB,*W^<')||(rt0.c2)) IN (CAST(x'' AS REAL)))) ORDER BY (((rt0.c0 IN ()))LIKE(SUBSTR(rt0.c0, rt0.c2))) DESC, CAST(rt0.c0 AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((((('\gSB,*W^<')||(rt0.c2)) IN (CAST(x'' AS REAL)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((((vt0.c0)OR(vt0.c0)))OR(rt0.c1)) IN ((+ (rt0.c2)), rt0.c2, ((vt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0)))) ORDER BY (((rt0.c0 IN ()))LIKE(SUBSTR(rt0.c0, rt0.c2))) DESC, CAST(rt0.c0 AS NUMERIC) ASC);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (((((vt0.c0)OR(vt0.c0)))OR(rt0.c1)) IN ((+ (rt0.c2)), rt0.c2, ((vt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0)))) WHERE (((('\gSB,*W^<')||(rt0.c2)) IN (CAST(x'' AS REAL)))) ORDER BY (((rt0.c0 IN ()))LIKE(SUBSTR(rt0.c0, rt0.c2))) DESC, CAST(rt0.c0 AS NUMERIC) ASC;
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (((rt0.c3 IN ())) BETWEEN (UNLIKELY(1831126770)) AND (((((rt0.c3)AND(rt0.c1)))OR(rt0.c1)))) WHERE (CAST(rt0.c3 COLLATE BINARY AS INTEGER)) ORDER BY (((vt0.c0 IN (rt0.c1, vt0.c0))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c3 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((rt0.c3 IN ())) BETWEEN (UNLIKELY(1831126770)) AND (((((rt0.c3)AND(rt0.c1)))OR(rt0.c1)))) ORDER BY (((vt0.c0 IN (rt0.c1, vt0.c0))) IS FALSE) ASC);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (((rt0.c3 IN ())) BETWEEN (UNLIKELY(1831126770)) AND (((((rt0.c3)AND(rt0.c1)))OR(rt0.c1)))) WHERE (CAST(rt0.c3 COLLATE BINARY AS INTEGER)) ORDER BY (((vt0.c0 IN (rt0.c1, vt0.c0))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c3 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((rt0.c3 IN ())) BETWEEN (UNLIKELY(1831126770)) AND (((((rt0.c3)AND(rt0.c1)))OR(rt0.c1)))) ORDER BY (((vt0.c0 IN (rt0.c1, vt0.c0))) IS FALSE) ASC);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (((rt0.c3 IN ())) BETWEEN (UNLIKELY(1831126770)) AND (((((rt0.c3)AND(rt0.c1)))OR(rt0.c1)))) WHERE (CAST(rt0.c3 COLLATE BINARY AS INTEGER)) ORDER BY (((vt0.c0 IN (rt0.c1, vt0.c0))) IS FALSE) ASC;
SELECT ALL * FROM vt0 WHERE (CASE (((vt0.c0))<=((vt0.c0)))  WHEN x'' COLLATE NOCASE THEN (('-1132912993') IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0))<=((vt0.c0)))  WHEN x'' COLLATE NOCASE THEN (('-1132912993') IS TRUE) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE (((vt0.c0))<=((vt0.c0)))  WHEN x'' COLLATE NOCASE THEN (('-1132912993') IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0))<=((vt0.c0)))  WHEN x'' COLLATE NOCASE THEN (('-1132912993') IS TRUE) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE (((vt0.c0))<=((vt0.c0)))  WHEN x'' COLLATE NOCASE THEN (('-1132912993') IS TRUE) END);
SELECT ALL * FROM rt0, vt0 WHERE ((((((rt0.c1)-(rt0.c3))))>=((((rt0.c2)IS NOT(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)-(rt0.c3))))>=((((rt0.c2)IS NOT(rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((((rt0.c1)-(rt0.c3))))>=((((rt0.c2)IS NOT(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)-(rt0.c3))))>=((((rt0.c2)IS NOT(rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((((rt0.c1)-(rt0.c3))))>=((((rt0.c2)IS NOT(rt0.c2))))));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)) COLLATE RTRIM) ORDER BY (((((rt0.c3)AND(rt0.c1)))OR(1000909378)) IN (((rt0.c1)|(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY (((((rt0.c3)AND(rt0.c1)))OR(1000909378)) IN (((rt0.c1)|(rt0.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)) COLLATE RTRIM) ORDER BY (((((rt0.c3)AND(rt0.c1)))OR(1000909378)) IN (((rt0.c1)|(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY (((((rt0.c3)AND(rt0.c1)))OR(1000909378)) IN (((rt0.c1)|(rt0.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)) COLLATE RTRIM) ORDER BY (((((rt0.c3)AND(rt0.c1)))OR(1000909378)) IN (((rt0.c1)|(rt0.c2)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND((vt0.c0 IN ()))))OR(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND((vt0.c0 IN ()))))OR(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND((vt0.c0 IN ()))))OR(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND((vt0.c0 IN ()))))OR(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND((vt0.c0 IN ()))))OR(vt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c0)IS(rt0.c0))))>=(((((rt0.c1, 0.9898609193578942, rt0.c3))<>((rt0.c1, rt0.c2, rt0.c0))))))) ORDER BY ((((rt0.c1)<(rt0.c1))) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)IS(rt0.c0))))>=(((((rt0.c1, 0.9898609193578942, rt0.c3))<>((rt0.c1, rt0.c2, rt0.c0))))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c1)<(rt0.c1))) IS FALSE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c0)IS(rt0.c0))))>=(((((rt0.c1, 0.9898609193578942, rt0.c3))<>((rt0.c1, rt0.c2, rt0.c0))))))) ORDER BY ((((rt0.c1)<(rt0.c1))) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)IS(rt0.c0))))>=(((((rt0.c1, 0.9898609193578942, rt0.c3))<>((rt0.c1, rt0.c2, rt0.c0))))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c1)<(rt0.c1))) IS FALSE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c0)IS(rt0.c0))))>=(((((rt0.c1, 0.9898609193578942, rt0.c3))<>((rt0.c1, rt0.c2, rt0.c0))))))) ORDER BY ((((rt0.c1)<(rt0.c1))) IS FALSE) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END) BETWEEN (NULL) AND (((rt0.c1) IS TRUE)))) ORDER BY ((((((((vt0.c0)OR(rt0.c1)))AND(rt0.c3)))OR(((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))))OR('-670035753')) ASC  NULLS LAST, ((json_array(rt0.c1, rt0.c2)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END) BETWEEN (NULL) AND (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((vt0.c0)OR(rt0.c1)))AND(rt0.c3)))OR(((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))))OR('-670035753')) ASC  NULLS LAST, ((json_array(rt0.c1, rt0.c2)) NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END) BETWEEN (NULL) AND (((rt0.c1) IS TRUE)))) ORDER BY ((((((((vt0.c0)OR(rt0.c1)))AND(rt0.c3)))OR(((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))))OR('-670035753')) ASC  NULLS LAST, ((json_array(rt0.c1, rt0.c2)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END) BETWEEN (NULL) AND (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((vt0.c0)OR(rt0.c1)))AND(rt0.c3)))OR(((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))))OR('-670035753')) ASC  NULLS LAST, ((json_array(rt0.c1, rt0.c2)) NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END) BETWEEN (NULL) AND (((rt0.c1) IS TRUE)))) ORDER BY ((((((((vt0.c0)OR(rt0.c1)))AND(rt0.c3)))OR(((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))))OR('-670035753')) ASC  NULLS LAST, ((json_array(rt0.c1, rt0.c2)) NOTNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((((((rt0.c1)||(rt0.c2)))OR(((rt0.c3) NOT NULL))))OR(((rt0.c0)IS NOT(vt0.c0))))) ORDER BY ((((rt0.c1 IN ())))>((vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)||(rt0.c2)))OR(((rt0.c3) NOT NULL))))OR(((rt0.c0)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((((rt0.c1 IN ())))>((vt0.c0 COLLATE BINARY))));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((((((rt0.c1)||(rt0.c2)))OR(((rt0.c3) NOT NULL))))OR(((rt0.c0)IS NOT(vt0.c0))))) ORDER BY ((((rt0.c1 IN ())))>((vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)||(rt0.c2)))OR(((rt0.c3) NOT NULL))))OR(((rt0.c0)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((((rt0.c1 IN ())))>((vt0.c0 COLLATE BINARY))));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((((((rt0.c1)||(rt0.c2)))OR(((rt0.c3) NOT NULL))))OR(((rt0.c0)IS NOT(vt0.c0))))) ORDER BY ((((rt0.c1 IN ())))>((vt0.c0 COLLATE BINARY)));
SELECT ALL * FROM rt0 WHERE ((((((((((rt0.c3 IN (rt0.c0)))AND(('' IN ()))))AND(('110513037' IN ()))))AND(((((rt0.c2)OR(rt0.c3)))OR(rt0.c2)))))AND((rt0.c0 IN (rt0.c0))))) ORDER BY ((CAST(rt0.c0 AS NUMERIC)) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((rt0.c3)||(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c3 IN (rt0.c0)))AND(('' IN ()))))AND(('110513037' IN ()))))AND(((((rt0.c2)OR(rt0.c3)))OR(rt0.c2)))))AND((rt0.c0 IN (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS NUMERIC)) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((rt0.c3)||(rt0.c2))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((((((((rt0.c3 IN (rt0.c0)))AND(('' IN ()))))AND(('110513037' IN ()))))AND(((((rt0.c2)OR(rt0.c3)))OR(rt0.c2)))))AND((rt0.c0 IN (rt0.c0))))) ORDER BY ((CAST(rt0.c0 AS NUMERIC)) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((rt0.c3)||(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c3 IN (rt0.c0)))AND(('' IN ()))))AND(('110513037' IN ()))))AND(((((rt0.c2)OR(rt0.c3)))OR(rt0.c2)))))AND((rt0.c0 IN (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS NUMERIC)) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((rt0.c3)||(rt0.c2))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((((((((rt0.c3 IN (rt0.c0)))AND(('' IN ()))))AND(('110513037' IN ()))))AND(((((rt0.c2)OR(rt0.c3)))OR(rt0.c2)))))AND((rt0.c0 IN (rt0.c0))))) ORDER BY ((CAST(rt0.c0 AS NUMERIC)) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((rt0.c3)||(rt0.c2))))  NULLS FIRST;
SELECT * FROM vt0, rt0 WHERE ('0.5551253980864381');
SELECT SUM(count) FROM (SELECT ALL (('0.5551253980864381') IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ('0.5551253980864381');
SELECT SUM(count) FROM (SELECT ALL (('0.5551253980864381') IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ('0.5551253980864381');
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON TRIM(((rt0.c1) IS FALSE), (rt0.c0 IN ())) WHERE (((x'')+(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((x'')+(NULL))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON TRIM(((rt0.c1) IS FALSE), (rt0.c0 IN ())));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON TRIM(((rt0.c1) IS FALSE), (rt0.c0 IN ())) WHERE (((x'')+(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((x'')+(NULL))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON TRIM(((rt0.c1) IS FALSE), (rt0.c0 IN ())));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON TRIM(((rt0.c1) IS FALSE), (rt0.c0 IN ())) WHERE (((x'')+(NULL)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((json_patch(vt0.c0, vt0.c0))OR((- (vt0.c0)))))OR(CAST('1831126770' AS INTEGER))))OR(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY 0.5822190071330066 DESC;
SELECT SUM(count) FROM (SELECT ((((((((((json_patch(vt0.c0, vt0.c0))OR((- (vt0.c0)))))OR(CAST('1831126770' AS INTEGER))))OR(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY 0.5822190071330066 DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((json_patch(vt0.c0, vt0.c0))OR((- (vt0.c0)))))OR(CAST('1831126770' AS INTEGER))))OR(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY 0.5822190071330066 DESC;
SELECT SUM(count) FROM (SELECT ((((((((((json_patch(vt0.c0, vt0.c0))OR((- (vt0.c0)))))OR(CAST('1831126770' AS INTEGER))))OR(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY 0.5822190071330066 DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((json_patch(vt0.c0, vt0.c0))OR((- (vt0.c0)))))OR(CAST('1831126770' AS INTEGER))))OR(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY 0.5822190071330066 DESC;
SELECT ALL * FROM rt0, vt0 WHERE (TRIM(DISTINCT rt0.c2 COLLATE NOCASE, CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT rt0.c2 COLLATE NOCASE, CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (TRIM(DISTINCT rt0.c2 COLLATE NOCASE, CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT rt0.c2 COLLATE NOCASE, CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (TRIM(DISTINCT rt0.c2 COLLATE NOCASE, CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CAST(rt0.c0 AS INTEGER) COLLATE NOCASE WHERE ((((((rt0.c3)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0)))) BETWEEN (((vt0.c0)>>(rt0.c0))) AND (rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0)))) BETWEEN (((vt0.c0)>>(rt0.c0))) AND (rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CAST(rt0.c0 AS INTEGER) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CAST(rt0.c0 AS INTEGER) COLLATE NOCASE WHERE ((((((rt0.c3)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0)))) BETWEEN (((vt0.c0)>>(rt0.c0))) AND (rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0)))) BETWEEN (((vt0.c0)>>(rt0.c0))) AND (rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CAST(rt0.c0 AS INTEGER) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CAST(rt0.c0 AS INTEGER) COLLATE NOCASE WHERE ((((((rt0.c3)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0)))) BETWEEN (((vt0.c0)>>(rt0.c0))) AND (rt0.c0 COLLATE RTRIM)));
SELECT * FROM vt0 INNER JOIN rt0 ON ((rt0.c1 COLLATE BINARY) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((rt0.c2)=(rt0.c0)))) WHERE (((((((((((vt0.c0)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c0))) BETWEEN (1442629112) AND ((((rt0.c3))>=((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c0))) BETWEEN (1442629112) AND ((((rt0.c3))>=((rt0.c0)))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((rt0.c1 COLLATE BINARY) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((rt0.c2)==(rt0.c0)))));
SELECT * FROM vt0 INNER JOIN rt0 ON ((rt0.c1 COLLATE BINARY) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((rt0.c2)=(rt0.c0)))) WHERE (((((((((((vt0.c0)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c0))) BETWEEN (1442629112) AND ((((rt0.c3))>=((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c0))) BETWEEN (1442629112) AND ((((rt0.c3))>=((rt0.c0)))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((rt0.c1 COLLATE BINARY) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((rt0.c2)==(rt0.c0)))));
SELECT * FROM vt0 INNER JOIN rt0 ON ((rt0.c1 COLLATE BINARY) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((rt0.c2)=(rt0.c0)))) WHERE (((((((((((vt0.c0)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c0))) BETWEEN (1442629112) AND ((((rt0.c3))>=((rt0.c0))))));
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE ((~ (LOWER(rt0.c3))));
SELECT SUM(count) FROM (SELECT (((~ (LOWER(rt0.c3)))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE ((~ (LOWER(rt0.c3))));
SELECT SUM(count) FROM (SELECT (((~ (LOWER(rt0.c3)))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE ((~ (LOWER(rt0.c3))));
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE ((((+ (rt0.c1))) BETWEEN ((+ (rt0.c0))) AND (rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1))) BETWEEN ((+ (rt0.c0))) AND (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE ((((+ (rt0.c1))) BETWEEN ((+ (rt0.c0))) AND (rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1))) BETWEEN ((+ (rt0.c0))) AND (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE ((((+ (rt0.c1))) BETWEEN ((+ (rt0.c0))) AND (rt0.c1 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt0 WHERE ((('EiNN4,') NOT NULL));
SELECT SUM(count) FROM (SELECT (((('EiNN4,') NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((('EiNN4,') NOT NULL));
SELECT SUM(count) FROM (SELECT (((('EiNN4,') NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((('EiNN4,') NOT NULL));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((+ (CASE rt0.c1  WHEN 0.6712518541136214 THEN x'' WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 END))) ORDER BY ((vt0.c0 COLLATE RTRIM) ISNULL), (NOT ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (CASE rt0.c1  WHEN 0.6712518541136214 THEN x'' WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((vt0.c0 COLLATE RTRIM) ISNULL), (NOT ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((+ (CASE rt0.c1  WHEN 0.6712518541136214 THEN x'' WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 END))) ORDER BY ((vt0.c0 COLLATE RTRIM) ISNULL), (NOT ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (CASE rt0.c1  WHEN 0.6712518541136214 THEN x'' WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((vt0.c0 COLLATE RTRIM) ISNULL), (NOT ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((+ (CASE rt0.c1  WHEN 0.6712518541136214 THEN x'' WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 END))) ORDER BY ((vt0.c0 COLLATE RTRIM) ISNULL), (NOT ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) DESC  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE (x'') ORDER BY ((((rt0.c3) IS TRUE)) IS TRUE)  NULLS LAST, ((((rt0.c3)OR(LIKE(rt0.c0, rt0.c2, '4'))))OR(((((vt0.c0)AND(rt0.c1)))OR(0.15264550260958332))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c3) IS TRUE)) IS TRUE)  NULLS LAST, ((((rt0.c3)OR(LIKE(rt0.c0, rt0.c2, '4'))))OR(((((vt0.c0)AND(rt0.c1)))OR(0.15264550260958332))))  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (x'') ORDER BY ((((rt0.c3) IS TRUE)) IS TRUE)  NULLS LAST, ((((rt0.c3)OR(LIKE(rt0.c0, rt0.c2, '4'))))OR(((((vt0.c0)AND(rt0.c1)))OR(0.15264550260958332))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c3) IS TRUE)) IS TRUE)  NULLS LAST, ((((rt0.c3)OR(LIKE(rt0.c0, rt0.c2, '4'))))OR(((((vt0.c0)AND(rt0.c1)))OR(0.15264550260958332))))  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (x'') ORDER BY ((((rt0.c3) IS TRUE)) IS TRUE)  NULLS LAST, ((((rt0.c3)OR(LIKE(rt0.c0, rt0.c2, '4'))))OR(((((vt0.c0)AND(rt0.c1)))OR(0.15264550260958332))))  NULLS LAST;
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE (((rt0.c3 COLLATE RTRIM)>=(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE RTRIM)>=(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE (((rt0.c3 COLLATE RTRIM)>=(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE RTRIM)>=(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE (((rt0.c3 COLLATE RTRIM)>=(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((~ (vt0.c0)))AND(rt0.c0)))AND(((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((((~ (vt0.c0)))AND(rt0.c0)))AND(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((~ (vt0.c0)))AND(rt0.c0)))AND(((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((((~ (vt0.c0)))AND(rt0.c0)))AND(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((~ (vt0.c0)))AND(rt0.c0)))AND(((rt0.c0) IS FALSE))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((vt0.c0)<>(vt0.c0)) THEN ((rt0.c1) IS FALSE) WHEN ((((vt0.c0)OR(rt0.c0)))AND(rt0.c2)) THEN (vt0.c0 IN ()) WHEN (~ (x'')) THEN rt0.c0 ELSE rt0.c2 COLLATE RTRIM END) ORDER BY ((vt0.c0)>>(vt0.c0)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)!=(vt0.c0)) THEN ((rt0.c1) IS FALSE) WHEN ((((vt0.c0)OR(rt0.c0)))AND(rt0.c2)) THEN (vt0.c0 IN ()) WHEN (~ (x'')) THEN rt0.c0 ELSE rt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((vt0.c0)>>(vt0.c0)) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((vt0.c0)<>(vt0.c0)) THEN ((rt0.c1) IS FALSE) WHEN ((((vt0.c0)OR(rt0.c0)))AND(rt0.c2)) THEN (vt0.c0 IN ()) WHEN (~ (x'')) THEN rt0.c0 ELSE rt0.c2 COLLATE RTRIM END) ORDER BY ((vt0.c0)>>(vt0.c0)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)!=(vt0.c0)) THEN ((rt0.c1) IS FALSE) WHEN ((((vt0.c0)OR(rt0.c0)))AND(rt0.c2)) THEN (vt0.c0 IN ()) WHEN (~ (x'')) THEN rt0.c0 ELSE rt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((vt0.c0)>>(vt0.c0)) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((vt0.c0)<>(vt0.c0)) THEN ((rt0.c1) IS FALSE) WHEN ((((vt0.c0)OR(rt0.c0)))AND(rt0.c2)) THEN (vt0.c0 IN ()) WHEN (~ (x'')) THEN rt0.c0 ELSE rt0.c2 COLLATE RTRIM END) ORDER BY ((vt0.c0)>>(vt0.c0)) COLLATE BINARY ASC  NULLS LAST;
SELECT * FROM vt0 CROSS JOIN rt0 ON (((rt0.c1, x'', vt0.c0)) NOT BETWEEN ((rt0.c0, UNLIKELY(rt0.c0), (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))))) AND ((rt0.c3 COLLATE RTRIM, ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0))))) WHERE (((((rt0.c1) IS TRUE)) IS TRUE)) ORDER BY (((((vt0.c0)IS NOT(rt0.c3))))<=((((NULL) IS FALSE)))) DESC  NULLS LAST, NULL, UNLIKELY(DISTINCT ((rt0.c1) IS FALSE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((rt0.c1, x'', vt0.c0)) NOT BETWEEN ((rt0.c0, UNLIKELY(rt0.c0), (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))))) AND ((rt0.c3 COLLATE RTRIM, ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0))))) ORDER BY (((((vt0.c0)IS NOT(rt0.c3))))<=((((NULL) IS FALSE)))) DESC  NULLS LAST, NULL, UNLIKELY(DISTINCT ((rt0.c1) IS FALSE))  NULLS FIRST);
SELECT * FROM vt0 CROSS JOIN rt0 ON (((rt0.c1, x'', vt0.c0)) NOT BETWEEN ((rt0.c0, UNLIKELY(rt0.c0), (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))))) AND ((rt0.c3 COLLATE RTRIM, ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0))))) WHERE (((((rt0.c1) IS TRUE)) IS TRUE)) ORDER BY (((((vt0.c0)IS NOT(rt0.c3))))<=((((NULL) IS FALSE)))) DESC  NULLS LAST, NULL, UNLIKELY(DISTINCT ((rt0.c1) IS FALSE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((rt0.c1, x'', vt0.c0)) NOT BETWEEN ((rt0.c0, UNLIKELY(rt0.c0), (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))))) AND ((rt0.c3 COLLATE RTRIM, ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0))))) ORDER BY (((((vt0.c0)IS NOT(rt0.c3))))<=((((NULL) IS FALSE)))) DESC  NULLS LAST, NULL, UNLIKELY(DISTINCT ((rt0.c1) IS FALSE))  NULLS FIRST);
SELECT * FROM vt0 CROSS JOIN rt0 ON (((rt0.c1, x'', vt0.c0)) NOT BETWEEN ((rt0.c0, UNLIKELY(rt0.c0), (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))))) AND ((rt0.c3 COLLATE RTRIM, ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0))))) WHERE (((((rt0.c1) IS TRUE)) IS TRUE)) ORDER BY (((((vt0.c0)IS NOT(rt0.c3))))<=((((NULL) IS FALSE)))) DESC  NULLS LAST, NULL, UNLIKELY(DISTINCT ((rt0.c1) IS FALSE))  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (((CASE rt0.c3  WHEN vt0.c0 THEN rt0.c3 END)>((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c3  WHEN vt0.c0 THEN rt0.c3 END)>((NULL IN ())))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((CASE rt0.c3  WHEN vt0.c0 THEN rt0.c3 END)>((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c3  WHEN vt0.c0 THEN rt0.c3 END)>((NULL IN ())))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((CASE rt0.c3  WHEN vt0.c0 THEN rt0.c3 END)>((NULL IN ()))));
SELECT COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c1))) IS TRUE)) ORDER BY '_22?nStn!' ASC, CASE WHEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)) THEN ((((rt0.c2)AND(rt0.c3)))AND(rt0.c0)) END DESC  NULLS LAST, rt0.c1;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY '_22?nStn!' ASC, CASE WHEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)) THEN ((((rt0.c2)AND(rt0.c3)))AND(rt0.c0)) END DESC  NULLS LAST, rt0.c1);
SELECT COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c1))) IS TRUE)) ORDER BY '_22?nStn!' ASC, CASE WHEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)) THEN ((((rt0.c2)AND(rt0.c3)))AND(rt0.c0)) END DESC  NULLS LAST, rt0.c1;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY '_22?nStn!' ASC, CASE WHEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)) THEN ((((rt0.c2)AND(rt0.c3)))AND(rt0.c0)) END DESC  NULLS LAST, rt0.c1);
SELECT COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c1))) IS TRUE)) ORDER BY '_22?nStn!' ASC, CASE WHEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)) THEN ((((rt0.c2)AND(rt0.c3)))AND(rt0.c0)) END DESC  NULLS LAST, rt0.c1;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((NOT ((((rt0.c3)) NOT BETWEEN (('FG<a,w0')) AND ((rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((rt0.c3)) NOT BETWEEN (('FG<a,w0')) AND ((rt0.c3)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((NOT ((((rt0.c3)) NOT BETWEEN (('FG<a,w0')) AND ((rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((rt0.c3)) NOT BETWEEN (('FG<a,w0')) AND ((rt0.c3)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((NOT ((((rt0.c3)) NOT BETWEEN (('FG<a,w0')) AND ((rt0.c3))))));
SELECT ALL * FROM rt0 WHERE (LOWER(CAST(rt0.c0 AS NUMERIC))) ORDER BY ((((((((((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c0)))AND(CAST(rt0.c0 AS NUMERIC))))AND((((rt0.c1))<=((rt0.c0))))))AND((((rt0.c2))<((NULL))))))OR((+ (rt0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ((LOWER(CAST(rt0.c0 AS NUMERIC))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c0)))AND(CAST(rt0.c0 AS NUMERIC))))AND((((rt0.c1))<=((rt0.c0))))))AND((((rt0.c2))<((NULL))))))OR((+ (rt0.c3)))) ASC);
SELECT ALL * FROM rt0 WHERE (LOWER(CAST(rt0.c0 AS NUMERIC))) ORDER BY ((((((((((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c0)))AND(CAST(rt0.c0 AS NUMERIC))))AND((((rt0.c1))<=((rt0.c0))))))AND((((rt0.c2))<((NULL))))))OR((+ (rt0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ((LOWER(CAST(rt0.c0 AS NUMERIC))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c0)))AND(CAST(rt0.c0 AS NUMERIC))))AND((((rt0.c1))<=((rt0.c0))))))AND((((rt0.c2))<((NULL))))))OR((+ (rt0.c3)))) ASC);
SELECT ALL * FROM rt0 WHERE (LOWER(CAST(rt0.c0 AS NUMERIC))) ORDER BY ((((((((((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c0)))AND(CAST(rt0.c0 AS NUMERIC))))AND((((rt0.c1))<=((rt0.c0))))))AND((((rt0.c2))<((NULL))))))OR((+ (rt0.c3)))) ASC;
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c3) IS FALSE))*(CAST(rt0.c0 AS BLOB)))) ORDER BY ((rt0.c2 COLLATE RTRIM) NOT BETWEEN ((- (rt0.c3))) AND (((vt0.c0)<=(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) IS FALSE))*(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c2 COLLATE RTRIM) NOT BETWEEN ((- (rt0.c3))) AND (((vt0.c0)<=(vt0.c0)))) ASC);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c3) IS FALSE))*(CAST(rt0.c0 AS BLOB)))) ORDER BY ((rt0.c2 COLLATE RTRIM) NOT BETWEEN ((- (rt0.c3))) AND (((vt0.c0)<=(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) IS FALSE))*(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c2 COLLATE RTRIM) NOT BETWEEN ((- (rt0.c3))) AND (((vt0.c0)<=(vt0.c0)))) ASC);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c3) IS FALSE))*(CAST(rt0.c0 AS BLOB)))) ORDER BY ((rt0.c2 COLLATE RTRIM) NOT BETWEEN ((- (rt0.c3))) AND (((vt0.c0)<=(vt0.c0)))) ASC;
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE ((((((vt0.c0))<=((rt0.c3))))GLOB((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<=((rt0.c3))))GLOB((rt0.c1 IN ())))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE ((((((vt0.c0))<=((rt0.c3))))GLOB((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<=((rt0.c3))))GLOB((rt0.c1 IN ())))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE ((((((vt0.c0))<=((rt0.c3))))GLOB((rt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((vt0.c0 IN ()))))) ORDER BY (((vt0.c0))==((vt0.c0)))  NULLS FIRST, (((((vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((vt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0))=((vt0.c0)))  NULLS FIRST, (((((vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((vt0.c0 IN ())))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((vt0.c0 IN ()))))) ORDER BY (((vt0.c0))==((vt0.c0)))  NULLS FIRST, (((((vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((vt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0))=((vt0.c0)))  NULLS FIRST, (((((vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((vt0.c0 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)GLOB(rt0.c1)))>=(((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c0))))) ORDER BY ((((NULL) BETWEEN (rt0.c2) AND (rt0.c3))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)GLOB(rt0.c1)))>=(((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((NULL) BETWEEN (rt0.c2) AND (rt0.c3))) ISNULL) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)GLOB(rt0.c1)))>=(((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c0))))) ORDER BY ((((NULL) BETWEEN (rt0.c2) AND (rt0.c3))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)GLOB(rt0.c1)))>=(((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((NULL) BETWEEN (rt0.c2) AND (rt0.c3))) ISNULL) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)GLOB(rt0.c1)))>=(((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c0))))) ORDER BY ((((NULL) BETWEEN (rt0.c2) AND (rt0.c3))) ISNULL) DESC;
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()));
SELECT ALL * FROM rt0 WHERE ('u\n') ORDER BY ((rt0.c3)>=(rt0.c3)) COLLATE BINARY DESC  NULLS FIRST, (((rt0.c3, rt0.c0, rt0.c2)) NOT BETWEEN ((x'ec5a', CAST(rt0.c2 AS INTEGER), IFNULL(rt0.c2, rt0.c3))) AND ((CASE WHEN rt0.c0 THEN rt0.c0 END, x'', (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT (('u\n') IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c3)>=(rt0.c3)) COLLATE BINARY DESC  NULLS FIRST, (((rt0.c3, rt0.c0, rt0.c2)) NOT BETWEEN ((x'ec5a', CAST(rt0.c2 AS INTEGER), IFNULL(rt0.c2, rt0.c3))) AND ((CASE WHEN rt0.c0 THEN rt0.c0 END, x'', (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))));
SELECT ALL * FROM rt0 WHERE ('u\n') ORDER BY ((rt0.c3)>=(rt0.c3)) COLLATE BINARY DESC  NULLS FIRST, (((rt0.c3, rt0.c0, rt0.c2)) NOT BETWEEN ((x'ec5a', CAST(rt0.c2 AS INTEGER), IFNULL(rt0.c2, rt0.c3))) AND ((CASE WHEN rt0.c0 THEN rt0.c0 END, x'', (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT (('u\n') IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c3)>=(rt0.c3)) COLLATE BINARY DESC  NULLS FIRST, (((rt0.c3, rt0.c0, rt0.c2)) NOT BETWEEN ((x'ec5a', CAST(rt0.c2 AS INTEGER), IFNULL(rt0.c2, rt0.c3))) AND ((CASE WHEN rt0.c0 THEN rt0.c0 END, x'', (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))));
SELECT ALL * FROM rt0 WHERE ('u\n') ORDER BY ((rt0.c3)>=(rt0.c3)) COLLATE BINARY DESC  NULLS FIRST, (((rt0.c3, rt0.c0, rt0.c2)) NOT BETWEEN ((x'ec5a', CAST(rt0.c2 AS INTEGER), IFNULL(rt0.c2, rt0.c3))) AND ((CASE WHEN rt0.c0 THEN rt0.c0 END, x'', (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))));
SELECT * FROM vt0, rt0 WHERE (rt0.c0) ORDER BY ((IFNULL(rt0.c1, rt0.c0))<(((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)))) DESC  NULLS LAST, ((rt0.c0) NOT NULL) DESC  NULLS LAST, ((COALESCE(DISTINCT rt0.c0, vt0.c0))*((('-360888483') BETWEEN (rt0.c2) AND (rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((IFNULL(rt0.c1, rt0.c0))<(((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)))) DESC  NULLS LAST, ((rt0.c0) NOT NULL) DESC  NULLS LAST, ((COALESCE(DISTINCT rt0.c0, vt0.c0))*((('-360888483') BETWEEN (rt0.c2) AND (rt0.c0)))) DESC);
SELECT * FROM vt0, rt0 WHERE (rt0.c0) ORDER BY ((IFNULL(rt0.c1, rt0.c0))<(((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)))) DESC  NULLS LAST, ((rt0.c0) NOT NULL) DESC  NULLS LAST, ((COALESCE(DISTINCT rt0.c0, vt0.c0))*((('-360888483') BETWEEN (rt0.c2) AND (rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((IFNULL(rt0.c1, rt0.c0))<(((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)))) DESC  NULLS LAST, ((rt0.c0) NOT NULL) DESC  NULLS LAST, ((COALESCE(DISTINCT rt0.c0, vt0.c0))*((('-360888483') BETWEEN (rt0.c2) AND (rt0.c0)))) DESC);
SELECT * FROM vt0, rt0 WHERE (rt0.c0) ORDER BY ((IFNULL(rt0.c1, rt0.c0))<(((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)))) DESC  NULLS LAST, ((rt0.c0) NOT NULL) DESC  NULLS LAST, ((COALESCE(DISTINCT rt0.c0, vt0.c0))*((('-360888483') BETWEEN (rt0.c2) AND (rt0.c0)))) DESC;
SELECT ALL * FROM rt0 WHERE (NULL) ORDER BY (((('')>=(rt0.c3))) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((NULL)<<(rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY (((('')>=(rt0.c3))) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((NULL)<<(rt0.c3))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (NULL) ORDER BY (((('')>=(rt0.c3))) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((NULL)<<(rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY (((('')>=(rt0.c3))) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((NULL)<<(rt0.c3))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (NULL) ORDER BY (((('')>=(rt0.c3))) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((NULL)<<(rt0.c3))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (CAST(-9.04351406E8 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(-9.04351406E8 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (CAST(-9.04351406E8 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(-9.04351406E8 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (CAST(-9.04351406E8 AS BLOB))));
SELECT ALL * FROM rt0, vt0 WHERE (CASE rt0.c1  WHEN (((vt0.c0))<((vt0.c0))) THEN CAST(rt0.c1 AS NUMERIC) WHEN ((NULL)>=(rt0.c2)) THEN rtreenode(vt0.c0, rt0.c0) WHEN (('-1495708601')>>(rt0.c2)) THEN (((rt0.c0, rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c3))) WHEN CAST(rt0.c0 AS NUMERIC) THEN ((vt0.c0)<=(rt0.c1)) WHEN CAST(rt0.c3 AS INTEGER) THEN LOWER(DISTINCT vt0.c0) ELSE (rt0.c3 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1  WHEN (((vt0.c0))<((vt0.c0))) THEN CAST(rt0.c1 AS NUMERIC) WHEN ((NULL)>=(rt0.c2)) THEN rtreenode(vt0.c0, rt0.c0) WHEN (('-1495708601')>>(rt0.c2)) THEN (((rt0.c0, rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c3))) WHEN CAST(rt0.c0 AS NUMERIC) THEN ((vt0.c0)<=(rt0.c1)) WHEN CAST(rt0.c3 AS INTEGER) THEN LOWER(DISTINCT vt0.c0) ELSE (rt0.c3 IN ()) END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CASE rt0.c1  WHEN (((vt0.c0))<((vt0.c0))) THEN CAST(rt0.c1 AS NUMERIC) WHEN ((NULL)>=(rt0.c2)) THEN rtreenode(vt0.c0, rt0.c0) WHEN (('-1495708601')>>(rt0.c2)) THEN (((rt0.c0, rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c3))) WHEN CAST(rt0.c0 AS NUMERIC) THEN ((vt0.c0)<=(rt0.c1)) WHEN CAST(rt0.c3 AS INTEGER) THEN LOWER(DISTINCT vt0.c0) ELSE (rt0.c3 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1  WHEN (((vt0.c0))<((vt0.c0))) THEN CAST(rt0.c1 AS NUMERIC) WHEN ((NULL)>=(rt0.c2)) THEN rtreenode(vt0.c0, rt0.c0) WHEN (('-1495708601')>>(rt0.c2)) THEN (((rt0.c0, rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c3))) WHEN CAST(rt0.c0 AS NUMERIC) THEN ((vt0.c0)<=(rt0.c1)) WHEN CAST(rt0.c3 AS INTEGER) THEN LOWER(DISTINCT vt0.c0) ELSE (rt0.c3 IN ()) END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CASE rt0.c1  WHEN (((vt0.c0))<((vt0.c0))) THEN CAST(rt0.c1 AS NUMERIC) WHEN ((NULL)>=(rt0.c2)) THEN rtreenode(vt0.c0, rt0.c0) WHEN (('-1495708601')>>(rt0.c2)) THEN (((rt0.c0, rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c3))) WHEN CAST(rt0.c0 AS NUMERIC) THEN ((vt0.c0)<=(rt0.c1)) WHEN CAST(rt0.c3 AS INTEGER) THEN LOWER(DISTINCT vt0.c0) ELSE (rt0.c3 IN ()) END);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOTNULL) COLLATE BINARY) ORDER BY (((- (vt0.c0)))>=((~ (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0)))>=((~ (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOTNULL) COLLATE BINARY) ORDER BY (((- (vt0.c0)))>=((~ (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0)))>=((~ (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOTNULL) COLLATE BINARY) ORDER BY (((- (vt0.c0)))>=((~ (vt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (NULLIF(DISTINCT CAST(vt0.c0 AS BLOB), ((vt0.c0)||(vt0.c0)))) ORDER BY (((vt0.c0)) BETWEEN ((SQLITE_VERSION())) AND ((NULL)))  NULLS FIRST, TRIM(vt0.c0) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT CAST(vt0.c0 AS BLOB), ((vt0.c0)||(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((SQLITE_VERSION())) AND ((NULL)))  NULLS FIRST, TRIM(vt0.c0) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 WHERE (NULLIF(DISTINCT CAST(vt0.c0 AS BLOB), ((vt0.c0)||(vt0.c0)))) ORDER BY (((vt0.c0)) BETWEEN ((SQLITE_VERSION())) AND ((NULL)))  NULLS FIRST, TRIM(vt0.c0) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT CAST(vt0.c0 AS BLOB), ((vt0.c0)||(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((SQLITE_VERSION())) AND ((NULL)))  NULLS FIRST, TRIM(vt0.c0) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 WHERE (NULLIF(DISTINCT CAST(vt0.c0 AS BLOB), ((vt0.c0)||(vt0.c0)))) ORDER BY (((vt0.c0)) BETWEEN ((SQLITE_VERSION())) AND ((NULL)))  NULLS FIRST, TRIM(vt0.c0) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN 0.5432733657041008 THEN SUBSTR(rt0.c0, rt0.c2) ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.5432733657041008 THEN SUBSTR(rt0.c0, rt0.c2) ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN 0.5432733657041008 THEN SUBSTR(rt0.c0, rt0.c2) ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.5432733657041008 THEN SUBSTR(rt0.c0, rt0.c2) ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN 0.5432733657041008 THEN SUBSTR(rt0.c0, rt0.c2) ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) END);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE ((((rt0.c2)) BETWEEN ((((vt0.c0)|(rt0.c0)))) AND ((((rt0.c1) BETWEEN ('1782991735') AND (rt0.c3)))))) ORDER BY CAST(rt0.c1 AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((((vt0.c0)|(rt0.c0)))) AND ((((rt0.c1) BETWEEN ('1782991735') AND (rt0.c3)))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY CAST(rt0.c1 AS INTEGER));
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE ((((rt0.c2)) BETWEEN ((((vt0.c0)|(rt0.c0)))) AND ((((rt0.c1) BETWEEN ('1782991735') AND (rt0.c3)))))) ORDER BY CAST(rt0.c1 AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((((vt0.c0)|(rt0.c0)))) AND ((((rt0.c1) BETWEEN ('1782991735') AND (rt0.c3)))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY CAST(rt0.c1 AS INTEGER));
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE ((((rt0.c2)) BETWEEN ((((vt0.c0)|(rt0.c0)))) AND ((((rt0.c1) BETWEEN ('1782991735') AND (rt0.c3)))))) ORDER BY CAST(rt0.c1 AS INTEGER);
SELECT * FROM vt0, rt0 WHERE (LIKELIHOOD(-1.132912993E9, 0.5124289865234947));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(-1.132912993E9, 0.5124289865234947)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (LIKELIHOOD(-1.132912993E9, 0.5124289865234947));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(-1.132912993E9, 0.5124289865234947)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (LIKELIHOOD(-1.132912993E9, 0.5124289865234947));
SELECT COUNT(*) FROM vt0 WHERE (((0.7920908095797149) NOT BETWEEN ((- (vt0.c0))) AND (((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((0.7920908095797149) NOT BETWEEN ((- (vt0.c0))) AND (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((0.7920908095797149) NOT BETWEEN ((- (vt0.c0))) AND (((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((0.7920908095797149) NOT BETWEEN ((- (vt0.c0))) AND (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((0.7920908095797149) NOT BETWEEN ((- (vt0.c0))) AND (((vt0.c0) IS TRUE))));
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN x'' END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c0 THEN x'' END AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN x'' END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c0 THEN x'' END AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN x'' END AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (LOWER(IFNULL(DISTINCT rt0.c0, rt0.c1))) ORDER BY (((rt0.c2 IN ()))==(CAST(vt0.c0 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(IFNULL(DISTINCT rt0.c0, rt0.c1))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c2 IN ()))==(CAST(vt0.c0 AS NUMERIC)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (LOWER(IFNULL(DISTINCT rt0.c0, rt0.c1))) ORDER BY (((rt0.c2 IN ()))==(CAST(vt0.c0 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(IFNULL(DISTINCT rt0.c0, rt0.c1))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c2 IN ()))==(CAST(vt0.c0 AS NUMERIC)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (LOWER(IFNULL(DISTINCT rt0.c0, rt0.c1))) ORDER BY (((rt0.c2 IN ()))==(CAST(vt0.c0 AS NUMERIC)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((+ (rt0.c2)))LIKE(rt0.c2))) ORDER BY JULIANDAY(rt0.c2 COLLATE RTRIM, CAST(rt0.c2 AS BLOB), vt0.c0, '2,C<SP5|', (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c2)))LIKE(rt0.c2))) IS TRUE)  as count FROM rt0, vt0 ORDER BY JULIANDAY(rt0.c2 COLLATE RTRIM, CAST(rt0.c2 AS BLOB), vt0.c0, '2,C<SP5|', (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3)))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((+ (rt0.c2)))LIKE(rt0.c2))) ORDER BY JULIANDAY(rt0.c2 COLLATE RTRIM, CAST(rt0.c2 AS BLOB), vt0.c0, '2,C<SP5|', (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c2)))LIKE(rt0.c2))) IS TRUE)  as count FROM rt0, vt0 ORDER BY JULIANDAY(rt0.c2 COLLATE RTRIM, CAST(rt0.c2 AS BLOB), vt0.c0, '2,C<SP5|', (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3)))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((+ (rt0.c2)))LIKE(rt0.c2))) ORDER BY JULIANDAY(rt0.c2 COLLATE RTRIM, CAST(rt0.c2 AS BLOB), vt0.c0, '2,C<SP5|', (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3)))) DESC;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)) BETWEEN (((~ (rt0.c0)))) AND ((((((((((rt0.c0)OR(rt0.c3)))OR(753508895)))OR(rt0.c3)))OR(rt0.c0)))))) ORDER BY rt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN (((~ (rt0.c0)))) AND ((((((((((rt0.c0)OR(rt0.c3)))OR(753508895)))OR(rt0.c3)))OR(rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)) BETWEEN (((~ (rt0.c0)))) AND ((((((((((rt0.c0)OR(rt0.c3)))OR(753508895)))OR(rt0.c3)))OR(rt0.c0)))))) ORDER BY rt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN (((~ (rt0.c0)))) AND ((((((((((rt0.c0)OR(rt0.c3)))OR(753508895)))OR(rt0.c3)))OR(rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)) BETWEEN (((~ (rt0.c0)))) AND ((((((((((rt0.c0)OR(rt0.c3)))OR(753508895)))OR(rt0.c3)))OR(rt0.c0)))))) ORDER BY rt0.c0 ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (-95485763) ORDER BY rt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((-95485763) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (-95485763) ORDER BY rt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((-95485763) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (-95485763) ORDER BY rt0.c0 DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((NOT ((vt0.c0 IN ())))) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((NOT ((vt0.c0 IN ())))) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((NOT ((vt0.c0 IN ())))) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE BINARY  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3 IN (NULL))) NOT BETWEEN ((((rt0.c2))<=((rt0.c1)))) AND ((((rt0.c1, rt0.c0, rt0.c3))==((rt0.c1, '-670035753', rt0.c0)))))) ORDER BY (((((rt0.c3)) BETWEEN (('1090982456')) AND ((rt0.c1))))-(json_valid(rt0.c3)));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN (NULL))) NOT BETWEEN ((((rt0.c2))<=((rt0.c1)))) AND ((((rt0.c1, rt0.c0, rt0.c3))==((rt0.c1, '-670035753', rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c3)) BETWEEN (('1090982456')) AND ((rt0.c1))))-(json_valid(rt0.c3))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3 IN (NULL))) NOT BETWEEN ((((rt0.c2))<=((rt0.c1)))) AND ((((rt0.c1, rt0.c0, rt0.c3))==((rt0.c1, '-670035753', rt0.c0)))))) ORDER BY (((((rt0.c3)) BETWEEN (('1090982456')) AND ((rt0.c1))))-(json_valid(rt0.c3)));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN (NULL))) NOT BETWEEN ((((rt0.c2))<=((rt0.c1)))) AND ((((rt0.c1, rt0.c0, rt0.c3))==((rt0.c1, '-670035753', rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c3)) BETWEEN (('1090982456')) AND ((rt0.c1))))-(json_valid(rt0.c3))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3 IN (NULL))) NOT BETWEEN ((((rt0.c2))<=((rt0.c1)))) AND ((((rt0.c1, rt0.c0, rt0.c3))==((rt0.c1, '-670035753', rt0.c0)))))) ORDER BY (((((rt0.c3)) BETWEEN (('1090982456')) AND ((rt0.c1))))-(json_valid(rt0.c3)));
SELECT COUNT(*) FROM rt0, vt0 WHERE (LAST_INSERT_ROWID()) ORDER BY UPPER(((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM rt0, vt0 ORDER BY UPPER(((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c1))) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (LAST_INSERT_ROWID()) ORDER BY UPPER(((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM rt0, vt0 ORDER BY UPPER(((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c1))) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (LAST_INSERT_ROWID()) ORDER BY UPPER(((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c1))) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((((((((((rt0.c0)OR(rt0.c3)))OR(rt0.c1)))OR((rt0.c1 IN ()))))OR(rt0.c1)))AND(CAST(rt0.c1 AS TEXT))))AND(((rt0.c2)&(vt0.c0)))))AND(((vt0.c0) IS FALSE))))AND(rt0.c1 COLLATE BINARY))) ORDER BY 0Xffffffffa6d94c47;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((rt0.c0)OR(rt0.c3)))OR(rt0.c1)))OR((rt0.c1 IN ()))))OR(rt0.c1)))AND(CAST(rt0.c1 AS TEXT))))AND(((rt0.c2)&(vt0.c0)))))AND(((vt0.c0) IS FALSE))))AND(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0 ORDER BY 0xffffffffa6d94c47);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((((((((((rt0.c0)OR(rt0.c3)))OR(rt0.c1)))OR((rt0.c1 IN ()))))OR(rt0.c1)))AND(CAST(rt0.c1 AS TEXT))))AND(((rt0.c2)&(vt0.c0)))))AND(((vt0.c0) IS FALSE))))AND(rt0.c1 COLLATE BINARY))) ORDER BY 0Xffffffffa6d94c47;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((rt0.c0)OR(rt0.c3)))OR(rt0.c1)))OR((rt0.c1 IN ()))))OR(rt0.c1)))AND(CAST(rt0.c1 AS TEXT))))AND(((rt0.c2)&(vt0.c0)))))AND(((vt0.c0) IS FALSE))))AND(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0 ORDER BY 0xffffffffa6d94c47);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((((((((((rt0.c0)OR(rt0.c3)))OR(rt0.c1)))OR((rt0.c1 IN ()))))OR(rt0.c1)))AND(CAST(rt0.c1 AS TEXT))))AND(((rt0.c2)&(vt0.c0)))))AND(((vt0.c0) IS FALSE))))AND(rt0.c1 COLLATE BINARY))) ORDER BY 0Xffffffffa6d94c47;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((vt0.c0)<=(x'6aba')) THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END ELSE ((rt0.c1)%(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)<=(x'6aba')) THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END ELSE ((rt0.c1)%(rt0.c1)) END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((vt0.c0)<=(x'6aba')) THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END ELSE ((rt0.c1)%(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)<=(x'6aba')) THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END ELSE ((rt0.c1)%(rt0.c1)) END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((vt0.c0)<=(x'6aba')) THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END ELSE ((rt0.c1)%(rt0.c1)) END);
SELECT COUNT(*) FROM rt0 WHERE (CAST((rt0.c3 IN ()) AS NUMERIC)) ORDER BY CAST(x'' AS REAL);
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c3 IN ()) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY CAST(x'' AS REAL));
SELECT COUNT(*) FROM rt0 WHERE (CAST((rt0.c3 IN ()) AS NUMERIC)) ORDER BY CAST(x'' AS REAL);
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c3 IN ()) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY CAST(x'' AS REAL));
SELECT COUNT(*) FROM rt0 WHERE (CAST((rt0.c3 IN ()) AS NUMERIC)) ORDER BY CAST(x'' AS REAL);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT)) NOTNULL)) ORDER BY LIKELY(DISTINCT ((rt0.c0)<=(NULL))) DESC, ((rt0.c1)==(CAST(rt0.c2 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY LIKELY(DISTINCT ((rt0.c0)<=(NULL))) DESC, ((rt0.c1)=(CAST(rt0.c2 AS TEXT))) DESC);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT)) NOTNULL)) ORDER BY LIKELY(DISTINCT ((rt0.c0)<=(NULL))) DESC, ((rt0.c1)==(CAST(rt0.c2 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY LIKELY(DISTINCT ((rt0.c0)<=(NULL))) DESC, ((rt0.c1)=(CAST(rt0.c2 AS TEXT))) DESC);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT)) NOTNULL)) ORDER BY LIKELY(DISTINCT ((rt0.c0)<=(NULL))) DESC, ((rt0.c1)==(CAST(rt0.c2 AS TEXT))) DESC;
SELECT ALL * FROM vt0 WHERE ((vt0.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 COLLATE RTRIM IN ()));
SELECT COUNT(*) FROM vt0 WHERE (CAST((+ (vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST((+ (vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST((+ (vt0.c0)) AS TEXT));
SELECT * FROM vt0, rt0 WHERE (((((('897362866', rt0.c0, rt0.c2, NULL, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c2, '-610831983', vt0.c0, vt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1, rt0.c2, rt0.c3)))) ISNULL)) ORDER BY ((((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (CASE WHEN x'' THEN rt0.c2 WHEN NULL THEN '' WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((('897362866', rt0.c0, rt0.c2, NULL, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c2, '-610831983', vt0.c0, vt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1, rt0.c2, rt0.c3)))) ISNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (CASE WHEN x'' THEN rt0.c2 WHEN NULL THEN '' WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)) ASC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((((('897362866', rt0.c0, rt0.c2, NULL, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c2, '-610831983', vt0.c0, vt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1, rt0.c2, rt0.c3)))) ISNULL)) ORDER BY ((((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (CASE WHEN x'' THEN rt0.c2 WHEN NULL THEN '' WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((('897362866', rt0.c0, rt0.c2, NULL, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c2, '-610831983', vt0.c0, vt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1, rt0.c2, rt0.c3)))) ISNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (CASE WHEN x'' THEN rt0.c2 WHEN NULL THEN '' WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)) ASC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((((('897362866', rt0.c0, rt0.c2, NULL, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c2, '-610831983', vt0.c0, vt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1, rt0.c2, rt0.c3)))) ISNULL)) ORDER BY ((((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (CASE WHEN x'' THEN rt0.c2 WHEN NULL THEN '' WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE ('-1495708601');
SELECT SUM(count) FROM (SELECT (('-1495708601') IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE ('-1495708601');
SELECT SUM(count) FROM (SELECT (('-1495708601') IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE ('-1495708601');
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c0 COLLATE NOCASE) IS TRUE) WHERE (((((rt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0)))>>(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0)))>>(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c0 COLLATE NOCASE) IS TRUE));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c0 COLLATE NOCASE) IS TRUE) WHERE (((((rt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0)))>>(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0)))>>(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c0 COLLATE NOCASE) IS TRUE));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c0 COLLATE NOCASE) IS TRUE) WHERE (((((rt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0)))>>(CAST(vt0.c0 AS BLOB))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c3) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c3) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c3) IS TRUE) COLLATE BINARY);
SELECT * FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))) NOT BETWEEN (0.7476920388567269) AND ((((('')AND('èá¹!ab0')))AND(rt0.c0))))) ORDER BY CASE TRIM(DISTINCT rt0.c3)  WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c2)-(rt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))) NOT BETWEEN (0.7476920388567269) AND ((((('')AND('èá¹!ab0')))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CASE TRIM(DISTINCT rt0.c3)  WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c2)-(rt0.c0)) END ASC);
SELECT * FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))) NOT BETWEEN (0.7476920388567269) AND ((((('')AND('èá¹!ab0')))AND(rt0.c0))))) ORDER BY CASE TRIM(DISTINCT rt0.c3)  WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c2)-(rt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))) NOT BETWEEN (0.7476920388567269) AND ((((('')AND('èá¹!ab0')))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CASE TRIM(DISTINCT rt0.c3)  WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c2)-(rt0.c0)) END ASC);
SELECT * FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))) NOT BETWEEN (0.7476920388567269) AND ((((('')AND('èá¹!ab0')))AND(rt0.c0))))) ORDER BY CASE TRIM(DISTINCT rt0.c3)  WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c2)-(rt0.c0)) END ASC;
SELECT * FROM rt0 WHERE ('We') ORDER BY (((rt0.c3, rt0.c3, rt0.c0, rt0.c0, rt0.c3)) BETWEEN ((rt0.c2, CAST(0xffffffffc1017f13 AS BLOB), ((NULL) IS FALSE), (+ (rt0.c0)), (rt0.c1 IN ()))) AND ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), load_extension(rt0.c0), ((rt0.c1)>>(x'')), ((rt0.c3)/(rt0.c0)), TRIM(DISTINCT rt0.c2, rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('We') IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3, rt0.c3, rt0.c0, rt0.c0, rt0.c3)) BETWEEN ((rt0.c2, CAST(0xffffffffc1017f13 AS BLOB), ((NULL) IS FALSE), (+ (rt0.c0)), (rt0.c1 IN ()))) AND ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), load_extension(rt0.c0), ((rt0.c1)>>(x'')), ((rt0.c3)/(rt0.c0)), TRIM(DISTINCT rt0.c2, rt0.c0)))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ('We') ORDER BY (((rt0.c3, rt0.c3, rt0.c0, rt0.c0, rt0.c3)) BETWEEN ((rt0.c2, CAST(0xffffffffc1017f13 AS BLOB), ((NULL) IS FALSE), (+ (rt0.c0)), (rt0.c1 IN ()))) AND ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), load_extension(rt0.c0), ((rt0.c1)>>(x'')), ((rt0.c3)/(rt0.c0)), TRIM(DISTINCT rt0.c2, rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('We') IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3, rt0.c3, rt0.c0, rt0.c0, rt0.c3)) BETWEEN ((rt0.c2, CAST(0xffffffffc1017f13 AS BLOB), ((NULL) IS FALSE), (+ (rt0.c0)), (rt0.c1 IN ()))) AND ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), load_extension(rt0.c0), ((rt0.c1)>>(x'')), ((rt0.c3)/(rt0.c0)), TRIM(DISTINCT rt0.c2, rt0.c0)))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ('We') ORDER BY (((rt0.c3, rt0.c3, rt0.c0, rt0.c0, rt0.c3)) BETWEEN ((rt0.c2, CAST(0xffffffffc1017f13 AS BLOB), ((NULL) IS FALSE), (+ (rt0.c0)), (rt0.c1 IN ()))) AND ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), load_extension(rt0.c0), ((rt0.c1)>>(x'')), ((rt0.c3)/(rt0.c0)), TRIM(DISTINCT rt0.c2, rt0.c0)))) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (((IFNULL(DISTINCT rt0.c0, rt0.c3))LIKE(0.6704194659741818))) ORDER BY ((RTRIM(rt0.c1))+(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) ASC  NULLS FIRST, ((+ (rt0.c1)) IN ())  NULLS FIRST, ((rt0.c1 COLLATE BINARY)GLOB(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT rt0.c0, rt0.c3))LIKE(0.6704194659741818))) IS TRUE)  as count FROM rt0 ORDER BY ((RTRIM(rt0.c1))+(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) ASC  NULLS FIRST, ((+ (rt0.c1)) IN ())  NULLS FIRST, ((rt0.c1 COLLATE BINARY)GLOB(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)))));
SELECT * FROM rt0 WHERE (((IFNULL(DISTINCT rt0.c0, rt0.c3))LIKE(0.6704194659741818))) ORDER BY ((RTRIM(rt0.c1))+(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) ASC  NULLS FIRST, ((+ (rt0.c1)) IN ())  NULLS FIRST, ((rt0.c1 COLLATE BINARY)GLOB(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT rt0.c0, rt0.c3))LIKE(0.6704194659741818))) IS TRUE)  as count FROM rt0 ORDER BY ((RTRIM(rt0.c1))+(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) ASC  NULLS FIRST, ((+ (rt0.c1)) IN ())  NULLS FIRST, ((rt0.c1 COLLATE BINARY)GLOB(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)))));
SELECT * FROM rt0 WHERE (((IFNULL(DISTINCT rt0.c0, rt0.c3))LIKE(0.6704194659741818))) ORDER BY ((RTRIM(rt0.c1))+(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) ASC  NULLS FIRST, ((+ (rt0.c1)) IN ())  NULLS FIRST, ((rt0.c1 COLLATE BINARY)GLOB(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0))));
SELECT * FROM rt0, vt0 WHERE (CAST(((((((((vt0.c0)AND(rt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt0.c0)AND(rt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CAST(((((((((vt0.c0)AND(rt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt0.c0)AND(rt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CAST(((((((((vt0.c0)AND(rt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c1)) AS INTEGER));
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c1 COLLATE BINARY AS TEXT)) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY NULL  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c1 COLLATE BINARY AS TEXT)) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY NULL  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c1 COLLATE BINARY AS TEXT)) ORDER BY NULL  NULLS LAST;
SELECT * FROM rt0 WHERE (((6.99289511E8) NOT BETWEEN (rt0.c3 COLLATE RTRIM) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((6.99289511E8) NOT BETWEEN (rt0.c3 COLLATE RTRIM) AND (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((6.99289511E8) NOT BETWEEN (rt0.c3 COLLATE RTRIM) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((6.99289511E8) NOT BETWEEN (rt0.c3 COLLATE RTRIM) AND (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((6.99289511E8) NOT BETWEEN (rt0.c3 COLLATE RTRIM) AND (rt0.c0)));
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))*(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))*(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))*(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))*(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))*(vt0.c0)));
SELECT ALL * FROM rt0 WHERE (CASE WHEN (rt0.c1 IN ()) THEN (((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c2))) WHEN (('AdyU4èsuy') BETWEEN (NULL) AND (rt0.c1)) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((x''))) WHEN LIKELIHOOD(x'd7bb', 0.4613026921666643) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 END ELSE rt0.c3 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c1 IN ()) THEN (((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c2))) WHEN (('AdyU4èsuy') BETWEEN (NULL) AND (rt0.c1)) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((x''))) WHEN LIKELIHOOD(x'd7bb', 0.4613026921666643) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 END ELSE rt0.c3 END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN (rt0.c1 IN ()) THEN (((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c2))) WHEN (('AdyU4èsuy') BETWEEN (NULL) AND (rt0.c1)) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((x''))) WHEN LIKELIHOOD(x'd7bb', 0.4613026921666643) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 END ELSE rt0.c3 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c1 IN ()) THEN (((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c2))) WHEN (('AdyU4èsuy') BETWEEN (NULL) AND (rt0.c1)) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((x''))) WHEN LIKELIHOOD(x'd7bb', 0.4613026921666643) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 END ELSE rt0.c3 END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN (rt0.c1 IN ()) THEN (((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c2))) WHEN (('AdyU4èsuy') BETWEEN (NULL) AND (rt0.c1)) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((x''))) WHEN LIKELIHOOD(x'd7bb', 0.4613026921666643) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 END ELSE rt0.c3 END);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0 COLLATE NOCASE) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0 COLLATE NOCASE) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0 COLLATE NOCASE) IS TRUE));
SELECT COUNT(*) FROM rt0 WHERE (NULLIF((('nj') NOT BETWEEN (rt0.c1) AND ('')), (~ (rt0.c3)))) ORDER BY (((((rt0.c1)LIKE(rt0.c1))))==(((+ (rt0.c2))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULLIF((('nj') NOT BETWEEN (rt0.c1) AND ('')), (~ (rt0.c3)))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1)LIKE(rt0.c1))))==(((+ (rt0.c2))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (NULLIF((('nj') NOT BETWEEN (rt0.c1) AND ('')), (~ (rt0.c3)))) ORDER BY (((((rt0.c1)LIKE(rt0.c1))))==(((+ (rt0.c2))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULLIF((('nj') NOT BETWEEN (rt0.c1) AND ('')), (~ (rt0.c3)))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1)LIKE(rt0.c1))))==(((+ (rt0.c2))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (NULLIF((('nj') NOT BETWEEN (rt0.c1) AND ('')), (~ (rt0.c3)))) ORDER BY (((((rt0.c1)LIKE(rt0.c1))))==(((+ (rt0.c2))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CASE rt0.c3  WHEN NULL THEN rt0.c1 ELSE vt0.c0 END)%((NULL IN (NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c3  WHEN NULL THEN rt0.c1 ELSE vt0.c0 END)%((NULL IN (NULL))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CASE rt0.c3  WHEN NULL THEN rt0.c1 ELSE vt0.c0 END)%((NULL IN (NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c3  WHEN NULL THEN rt0.c1 ELSE vt0.c0 END)%((NULL IN (NULL))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CASE rt0.c3  WHEN NULL THEN rt0.c1 ELSE vt0.c0 END)%((NULL IN (NULL)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)/(NULL))) ORDER BY (((vt0.c0))>=((CAST(rt0.c0 AS REAL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)/(NULL))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c0))>=((CAST(rt0.c0 AS REAL)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)/(NULL))) ORDER BY (((vt0.c0))>=((CAST(rt0.c0 AS REAL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)/(NULL))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c0))>=((CAST(rt0.c0 AS REAL)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)/(NULL))) ORDER BY (((vt0.c0))>=((CAST(rt0.c0 AS REAL)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (((vt0.c0 COLLATE NOCASE)IS NOT((rt0.c2 IN ())))) ORDER BY rt0.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)IS NOT((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c3  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((vt0.c0 COLLATE NOCASE)IS NOT((rt0.c2 IN ())))) ORDER BY rt0.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)IS NOT((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c3  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((vt0.c0 COLLATE NOCASE)IS NOT((rt0.c2 IN ())))) ORDER BY rt0.c3  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (UNLIKELY(DISTINCT ((rt0.c2) NOT NULL))) ORDER BY CASE ((((rt0.c0)AND(rt0.c2)))AND(rt0.c2))  WHEN (((rt0.c3)) BETWEEN ((x'ef01')) AND ((rt0.c3))) THEN rt0.c2 END DESC, CASE WHEN ((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c1)) THEN (~ (rt0.c2)) WHEN ((rt0.c0)OR(rt0.c1)) THEN rt0.c2 COLLATE BINARY WHEN ((rt0.c3) ISNULL) THEN ((NULL)%(rt0.c1)) WHEN (+ (rt0.c1)) THEN ((rt0.c0) BETWEEN (x'') AND (rt0.c3)) WHEN ((rt0.c2)>=(rt0.c1)) THEN NULL ELSE ((rt0.c0) NOTNULL) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((rt0.c2) NOT NULL))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((((rt0.c0)AND(rt0.c2)))AND(rt0.c2))  WHEN (((rt0.c3)) BETWEEN ((x'ef01')) AND ((rt0.c3))) THEN rt0.c2 END DESC, CASE WHEN ((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c1)) THEN (~ (rt0.c2)) WHEN ((rt0.c0)OR(rt0.c1)) THEN rt0.c2 COLLATE BINARY WHEN ((rt0.c3) ISNULL) THEN ((NULL)%(rt0.c1)) WHEN (+ (rt0.c1)) THEN ((rt0.c0) BETWEEN (x'') AND (rt0.c3)) WHEN ((rt0.c2)>=(rt0.c1)) THEN NULL ELSE ((rt0.c0) NOTNULL) END DESC);
SELECT ALL * FROM rt0 WHERE (UNLIKELY(DISTINCT ((rt0.c2) NOT NULL))) ORDER BY CASE ((((rt0.c0)AND(rt0.c2)))AND(rt0.c2))  WHEN (((rt0.c3)) BETWEEN ((x'ef01')) AND ((rt0.c3))) THEN rt0.c2 END DESC, CASE WHEN ((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c1)) THEN (~ (rt0.c2)) WHEN ((rt0.c0)OR(rt0.c1)) THEN rt0.c2 COLLATE BINARY WHEN ((rt0.c3) ISNULL) THEN ((NULL)%(rt0.c1)) WHEN (+ (rt0.c1)) THEN ((rt0.c0) BETWEEN (x'') AND (rt0.c3)) WHEN ((rt0.c2)>=(rt0.c1)) THEN NULL ELSE ((rt0.c0) NOTNULL) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((rt0.c2) NOT NULL))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((((rt0.c0)AND(rt0.c2)))AND(rt0.c2))  WHEN (((rt0.c3)) BETWEEN ((x'ef01')) AND ((rt0.c3))) THEN rt0.c2 END DESC, CASE WHEN ((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c1)) THEN (~ (rt0.c2)) WHEN ((rt0.c0)OR(rt0.c1)) THEN rt0.c2 COLLATE BINARY WHEN ((rt0.c3) ISNULL) THEN ((NULL)%(rt0.c1)) WHEN (+ (rt0.c1)) THEN ((rt0.c0) BETWEEN (x'') AND (rt0.c3)) WHEN ((rt0.c2)>=(rt0.c1)) THEN NULL ELSE ((rt0.c0) NOTNULL) END DESC);
SELECT ALL * FROM rt0 WHERE (UNLIKELY(DISTINCT ((rt0.c2) NOT NULL))) ORDER BY CASE ((((rt0.c0)AND(rt0.c2)))AND(rt0.c2))  WHEN (((rt0.c3)) BETWEEN ((x'ef01')) AND ((rt0.c3))) THEN rt0.c2 END DESC, CASE WHEN ((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c1)) THEN (~ (rt0.c2)) WHEN ((rt0.c0)OR(rt0.c1)) THEN rt0.c2 COLLATE BINARY WHEN ((rt0.c3) ISNULL) THEN ((NULL)%(rt0.c1)) WHEN (+ (rt0.c1)) THEN ((rt0.c0) BETWEEN (x'') AND (rt0.c3)) WHEN ((rt0.c2)>=(rt0.c1)) THEN NULL ELSE ((rt0.c0) NOTNULL) END DESC;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY x'' ASC  NULLS FIRST, x'' DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY x'' ASC  NULLS FIRST, x'' DESC);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY x'' ASC  NULLS FIRST, x'' DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY x'' ASC  NULLS FIRST, x'' DESC);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY x'' ASC  NULLS FIRST, x'' DESC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c0)>>(rt0.c2))) ISNULL)) ORDER BY (((rt0.c1 IN (rt0.c2, rt0.c1))) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)>>(rt0.c2))) ISNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c1 IN (rt0.c2, rt0.c1))) NOT NULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c0)>>(rt0.c2))) ISNULL)) ORDER BY (((rt0.c1 IN (rt0.c2, rt0.c1))) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)>>(rt0.c2))) ISNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c1 IN (rt0.c2, rt0.c1))) NOT NULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c0)>>(rt0.c2))) ISNULL)) ORDER BY (((rt0.c1 IN (rt0.c2, rt0.c1))) NOT NULL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(CAST('iå' AS BLOB) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST('iå' AS BLOB) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CAST('iå' AS BLOB) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST('iå' AS BLOB) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CAST('iå' AS BLOB) AS BLOB));
SELECT * FROM rt0 WHERE (CAST('492805290' AS TEXT)) ORDER BY rt0.c3  NULLS FIRST, CASE WHEN HEX(DISTINCT rt0.c2) THEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 END END;
SELECT SUM(count) FROM (SELECT ((CAST('492805290' AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3  NULLS FIRST, CASE WHEN HEX(DISTINCT rt0.c2) THEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 END END);
SELECT * FROM rt0 WHERE (CAST('492805290' AS TEXT)) ORDER BY rt0.c3  NULLS FIRST, CASE WHEN HEX(DISTINCT rt0.c2) THEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 END END;
SELECT SUM(count) FROM (SELECT ((CAST('492805290' AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3  NULLS FIRST, CASE WHEN HEX(DISTINCT rt0.c2) THEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 END END);
SELECT * FROM rt0 WHERE (CAST('492805290' AS TEXT)) ORDER BY rt0.c3  NULLS FIRST, CASE WHEN HEX(DISTINCT rt0.c2) THEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 END END;
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) AND ((((vt0.c0)AND(vt0.c0)))))) ORDER BY ((((((((((((vt0.c0)AND(vt0.c0)))AND('u\n')))OR(vt0.c0)))AND(vt0.c0)))OR('em8BOnbC')))AND(((vt0.c0)&(vt0.c0))))  NULLS FIRST, ((CAST(vt0.c0 AS INTEGER)) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) AND ((((vt0.c0)AND(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((vt0.c0)AND(vt0.c0)))AND('u\n')))OR(vt0.c0)))AND(vt0.c0)))OR('em8BOnbC')))AND(((vt0.c0)&(vt0.c0))))  NULLS FIRST, ((CAST(vt0.c0 AS INTEGER)) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0) IS TRUE))) ASC);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) AND ((((vt0.c0)AND(vt0.c0)))))) ORDER BY ((((((((((((vt0.c0)AND(vt0.c0)))AND('u\n')))OR(vt0.c0)))AND(vt0.c0)))OR('em8BOnbC')))AND(((vt0.c0)&(vt0.c0))))  NULLS FIRST, ((CAST(vt0.c0 AS INTEGER)) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) AND ((((vt0.c0)AND(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((vt0.c0)AND(vt0.c0)))AND('u\n')))OR(vt0.c0)))AND(vt0.c0)))OR('em8BOnbC')))AND(((vt0.c0)&(vt0.c0))))  NULLS FIRST, ((CAST(vt0.c0 AS INTEGER)) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0) IS TRUE))) ASC);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) AND ((((vt0.c0)AND(vt0.c0)))))) ORDER BY ((((((((((((vt0.c0)AND(vt0.c0)))AND('u\n')))OR(vt0.c0)))AND(vt0.c0)))OR('em8BOnbC')))AND(((vt0.c0)&(vt0.c0))))  NULLS FIRST, ((CAST(vt0.c0 AS INTEGER)) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0) IS TRUE))) ASC;
SELECT * FROM rt0, vt0 WHERE ((((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))%((rt0.c1 IN (rt0.c0))))) ORDER BY ((NULL)>(CASE NULL  WHEN rt0.c0 THEN rt0.c3 WHEN -1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))%((rt0.c1 IN (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((NULL)>(CASE NULL  WHEN rt0.c0 THEN rt0.c3 WHEN -1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END))  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))%((rt0.c1 IN (rt0.c0))))) ORDER BY ((NULL)>(CASE NULL  WHEN rt0.c0 THEN rt0.c3 WHEN -1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))%((rt0.c1 IN (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((NULL)>(CASE NULL  WHEN rt0.c0 THEN rt0.c3 WHEN -1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END))  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))%((rt0.c1 IN (rt0.c0))))) ORDER BY ((NULL)>(CASE NULL  WHEN rt0.c0 THEN rt0.c3 WHEN -1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (0.13520350457047536);
SELECT SUM(count) FROM (SELECT ((0.13520350457047536) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (0.13520350457047536);
SELECT SUM(count) FROM (SELECT ((0.13520350457047536) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (0.13520350457047536);
SELECT * FROM vt0 WHERE ((((vt0.c0))!=((vt0.c0)))) ORDER BY CAST(((vt0.c0)==(vt0.c0)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))!=((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)=(vt0.c0)) AS REAL)  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c0))!=((vt0.c0)))) ORDER BY CAST(((vt0.c0)==(vt0.c0)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))!=((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)=(vt0.c0)) AS REAL)  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c0))!=((vt0.c0)))) ORDER BY CAST(((vt0.c0)==(vt0.c0)) AS REAL)  NULLS LAST;
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c2 IN (vt0.c0)))IS(CAST(vt0.c0 AS INTEGER))) WHERE (((((((rt0.c0)OR(x'bfe37d06')))OR(((rt0.c3) IS FALSE))))AND(((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c3))))) ORDER BY LIKELIHOOD(rt0.c3, 0.37088279904788557) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)OR(x'bfe37d06')))OR(((rt0.c3) IS FALSE))))AND(((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c3))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c2 IN (vt0.c0)))IS(CAST(vt0.c0 AS INTEGER))) ORDER BY LIKELIHOOD(rt0.c3, 0.37088279904788557) ASC  NULLS FIRST);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c2 IN (vt0.c0)))IS(CAST(vt0.c0 AS INTEGER))) WHERE (((((((rt0.c0)OR(x'bfe37d06')))OR(((rt0.c3) IS FALSE))))AND(((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c3))))) ORDER BY LIKELIHOOD(rt0.c3, 0.37088279904788557) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)OR(x'bfe37d06')))OR(((rt0.c3) IS FALSE))))AND(((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c3))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c2 IN (vt0.c0)))IS(CAST(vt0.c0 AS INTEGER))) ORDER BY LIKELIHOOD(rt0.c3, 0.37088279904788557) ASC  NULLS FIRST);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c2 IN (vt0.c0)))IS(CAST(vt0.c0 AS INTEGER))) WHERE (((((((rt0.c0)OR(x'bfe37d06')))OR(((rt0.c3) IS FALSE))))AND(((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c3))))) ORDER BY LIKELIHOOD(rt0.c3, 0.37088279904788557) ASC  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE (((((vt0.c0)-(x'c1f3')))<=(((rt0.c3)+(vt0.c0))))) ORDER BY CAST(NULLIF(rt0.c0, rt0.c0) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)-(x'c1f3')))<=(((rt0.c3)+(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(NULLIF(rt0.c0, rt0.c0) AS BLOB)  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (((((vt0.c0)-(x'c1f3')))<=(((rt0.c3)+(vt0.c0))))) ORDER BY CAST(NULLIF(rt0.c0, rt0.c0) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)-(x'c1f3')))<=(((rt0.c3)+(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(NULLIF(rt0.c0, rt0.c0) AS BLOB)  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (((((vt0.c0)-(x'c1f3')))<=(((rt0.c3)+(vt0.c0))))) ORDER BY CAST(NULLIF(rt0.c0, rt0.c0) AS BLOB)  NULLS LAST;
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY ((((0.5432733657041008)AND(UNLIKELY(rt0.c1))))AND(LIKELY(rt0.c2))) DESC  NULLS LAST, ((((((((((rt0.c3)AND(rt0.c0)))AND(NULL)))AND(rt0.c1)))AND(rt0.c0))) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN 0x6ea15a1 WHEN rt0.c0 THEN rt0.c0 END) AND (HEX(DISTINCT rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((((0.5432733657041008)AND(UNLIKELY(rt0.c1))))AND(LIKELY(rt0.c2))) DESC  NULLS LAST, ((((((((((rt0.c3)AND(rt0.c0)))AND(NULL)))AND(rt0.c1)))AND(rt0.c0))) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN 0x6ea15a1 WHEN rt0.c0 THEN rt0.c0 END) AND (HEX(DISTINCT rt0.c0))));
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY ((((0.5432733657041008)AND(UNLIKELY(rt0.c1))))AND(LIKELY(rt0.c2))) DESC  NULLS LAST, ((((((((((rt0.c3)AND(rt0.c0)))AND(NULL)))AND(rt0.c1)))AND(rt0.c0))) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN 0x6ea15a1 WHEN rt0.c0 THEN rt0.c0 END) AND (HEX(DISTINCT rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((((0.5432733657041008)AND(UNLIKELY(rt0.c1))))AND(LIKELY(rt0.c2))) DESC  NULLS LAST, ((((((((((rt0.c3)AND(rt0.c0)))AND(NULL)))AND(rt0.c1)))AND(rt0.c0))) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN 0x6ea15a1 WHEN rt0.c0 THEN rt0.c0 END) AND (HEX(DISTINCT rt0.c0))));
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY ((((0.5432733657041008)AND(UNLIKELY(rt0.c1))))AND(LIKELY(rt0.c2))) DESC  NULLS LAST, ((((((((((rt0.c3)AND(rt0.c0)))AND(NULL)))AND(rt0.c1)))AND(rt0.c0))) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN 0x6ea15a1 WHEN rt0.c0 THEN rt0.c0 END) AND (HEX(DISTINCT rt0.c0)));
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT COUNT(*) FROM vt0 WHERE ((+ (0.46378481586371456)) COLLATE BINARY) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (0.46378481586371456)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((+ (0.46378481586371456)) COLLATE BINARY) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (0.46378481586371456)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((+ (0.46378481586371456)) COLLATE BINARY) ORDER BY vt0.c0  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c2)>>('943753491')) COLLATE NOCASE) ORDER BY ((((((((rt0.c2 COLLATE RTRIM)OR(rt0.c0)))AND((~ (rt0.c2)))))AND((NOT (rt0.c1)))))AND(CASE WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 END)) DESC  NULLS LAST, ((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (SUBSTR(vt0.c0, rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)>>('943753491')) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((rt0.c2 COLLATE RTRIM)OR(rt0.c0)))AND((~ (rt0.c2)))))AND((NOT (rt0.c1)))))AND(CASE WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 END)) DESC  NULLS LAST, ((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (SUBSTR(vt0.c0, rt0.c2))));
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c2)>>('943753491')) COLLATE NOCASE) ORDER BY ((((((((rt0.c2 COLLATE RTRIM)OR(rt0.c0)))AND((~ (rt0.c2)))))AND((NOT (rt0.c1)))))AND(CASE WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 END)) DESC  NULLS LAST, ((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (SUBSTR(vt0.c0, rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)>>('943753491')) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((rt0.c2 COLLATE RTRIM)OR(rt0.c0)))AND((~ (rt0.c2)))))AND((NOT (rt0.c1)))))AND(CASE WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 END)) DESC  NULLS LAST, ((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (SUBSTR(vt0.c0, rt0.c2))));
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c2)>>('943753491')) COLLATE NOCASE) ORDER BY ((((((((rt0.c2 COLLATE RTRIM)OR(rt0.c0)))AND((~ (rt0.c2)))))AND((NOT (rt0.c1)))))AND(CASE WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 END)) DESC  NULLS LAST, ((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (SUBSTR(vt0.c0, rt0.c2)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((CASE WHEN rt0.c2 THEN rt0.c1 END IN ())) ORDER BY ((((x'' COLLATE NOCASE)OR(((rt0.c3)!=('119382867')))))AND(((rt0.c0)AND(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c2 THEN rt0.c1 END IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((x'' COLLATE NOCASE)OR(((rt0.c3)<>('119382867')))))AND(((rt0.c0)AND(rt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((CASE WHEN rt0.c2 THEN rt0.c1 END IN ())) ORDER BY ((((x'' COLLATE NOCASE)OR(((rt0.c3)!=('119382867')))))AND(((rt0.c0)AND(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c2 THEN rt0.c1 END IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((x'' COLLATE NOCASE)OR(((rt0.c3)<>('119382867')))))AND(((rt0.c0)AND(rt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((CASE WHEN rt0.c2 THEN rt0.c1 END IN ())) ORDER BY ((((x'' COLLATE NOCASE)OR(((rt0.c3)!=('119382867')))))AND(((rt0.c0)AND(rt0.c1)))) ASC;
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST((((rt0.c2))!=((rt0.c0))) AS TEXT)) ORDER BY (NOT (((rt0.c0) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c2))<>((rt0.c0))) AS TEXT)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (NOT (((rt0.c0) ISNULL)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST((((rt0.c2))!=((rt0.c0))) AS TEXT)) ORDER BY (NOT (((rt0.c0) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c2))<>((rt0.c0))) AS TEXT)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (NOT (((rt0.c0) ISNULL)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST((((rt0.c2))!=((rt0.c0))) AS TEXT)) ORDER BY (NOT (((rt0.c0) ISNULL)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((((rt0.c1)%(rt0.c2)))OR(((((vt0.c0)OR(rt0.c1)))OR('\gSB,*W^<')))))AND(x'bcf7')))AND((('-249323618') NOT BETWEEN (x'') AND (rt0.c0)))))OR(CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END))) ORDER BY '-904351406';
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)%(rt0.c2)))OR(((((vt0.c0)OR(rt0.c1)))OR('\gSB,*W^<')))))AND(x'bcf7')))AND((('-249323618') NOT BETWEEN (x'') AND (rt0.c0)))))OR(CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY '-904351406');
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((((rt0.c1)%(rt0.c2)))OR(((((vt0.c0)OR(rt0.c1)))OR('\gSB,*W^<')))))AND(x'bcf7')))AND((('-249323618') NOT BETWEEN (x'') AND (rt0.c0)))))OR(CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END))) ORDER BY '-904351406';
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)%(rt0.c2)))OR(((((vt0.c0)OR(rt0.c1)))OR('\gSB,*W^<')))))AND(x'bcf7')))AND((('-249323618') NOT BETWEEN (x'') AND (rt0.c0)))))OR(CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY '-904351406');
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((((rt0.c1)%(rt0.c2)))OR(((((vt0.c0)OR(rt0.c1)))OR('\gSB,*W^<')))))AND(x'bcf7')))AND((('-249323618') NOT BETWEEN (x'') AND (rt0.c0)))))OR(CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END))) ORDER BY '-904351406';
SELECT ALL COUNT(*) FROM rt0 WHERE ('1e500') ORDER BY ((((((x'd55b')AND(rt0.c1)))OR(rt0.c2))) BETWEEN (((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c1))) AND (CAST(rt0.c0 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT (('1e500') IS TRUE)  as count FROM rt0 ORDER BY ((((((x'd55b')AND(rt0.c1)))OR(rt0.c2))) BETWEEN (((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c1))) AND (CAST(rt0.c0 AS NUMERIC))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ('1e500') ORDER BY ((((((x'd55b')AND(rt0.c1)))OR(rt0.c2))) BETWEEN (((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c1))) AND (CAST(rt0.c0 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT (('1e500') IS TRUE)  as count FROM rt0 ORDER BY ((((((x'd55b')AND(rt0.c1)))OR(rt0.c2))) BETWEEN (((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c1))) AND (CAST(rt0.c0 AS NUMERIC))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ('1e500') ORDER BY ((((((x'd55b')AND(rt0.c1)))OR(rt0.c2))) BETWEEN (((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c1))) AND (CAST(rt0.c0 AS NUMERIC))) ASC;
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (('*RLCië¹ON') NOT BETWEEN ((rt0.c1 IN (rt0.c2, rt0.c3, rt0.c2))) AND (CAST(rt0.c2 AS TEXT))) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (('*RLCië¹ON') NOT BETWEEN ((rt0.c1 IN (rt0.c2, rt0.c3, rt0.c2))) AND (CAST(rt0.c2 AS TEXT))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (('*RLCië¹ON') NOT BETWEEN ((rt0.c1 IN (rt0.c2, rt0.c3, rt0.c2))) AND (CAST(rt0.c2 AS TEXT))) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (('*RLCië¹ON') NOT BETWEEN ((rt0.c1 IN (rt0.c2, rt0.c3, rt0.c2))) AND (CAST(rt0.c2 AS TEXT))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (('*RLCië¹ON') NOT BETWEEN ((rt0.c1 IN (rt0.c2, rt0.c3, rt0.c2))) AND (CAST(rt0.c2 AS TEXT))) WHERE (rt0.c0);
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT * FROM rt0 WHERE ((((((rt0.c1)%(rt0.c3))))<(((NOT (rt0.c1)))))) ORDER BY ('1694827542' IN ())  NULLS FIRST, ((((rt0.c1)AND((((rt0.c1))>=((NULL))))))OR((rt0.c3 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)%(rt0.c3))))<(((NOT (rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY ('1694827542' IN ())  NULLS FIRST, ((((rt0.c1)AND((((rt0.c1))>=((NULL))))))OR((rt0.c3 IN ()))) DESC);
SELECT * FROM rt0 WHERE ((((((rt0.c1)%(rt0.c3))))<(((NOT (rt0.c1)))))) ORDER BY ('1694827542' IN ())  NULLS FIRST, ((((rt0.c1)AND((((rt0.c1))>=((NULL))))))OR((rt0.c3 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)%(rt0.c3))))<(((NOT (rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY ('1694827542' IN ())  NULLS FIRST, ((((rt0.c1)AND((((rt0.c1))>=((NULL))))))OR((rt0.c3 IN ()))) DESC);
SELECT * FROM rt0 WHERE ((((((rt0.c1)%(rt0.c3))))<(((NOT (rt0.c1)))))) ORDER BY ('1694827542' IN ())  NULLS FIRST, ((((rt0.c1)AND((((rt0.c1))>=((NULL))))))OR((rt0.c3 IN ()))) DESC;
SELECT COUNT(*) FROM vt0, rt0 WHERE ('-1350868656');
SELECT SUM(count) FROM (SELECT (('-1350868656') IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ('-1350868656');
SELECT SUM(count) FROM (SELECT (('-1350868656') IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ('-1350868656');
SELECT ALL COUNT(*) FROM rt0 WHERE (JULIANDAY((rt0.c2 IN ('2900622')), '-1495708601', (rt0.c3 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY((rt0.c2 IN ('2900622')), '-1495708601', (rt0.c3 IN ()))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (JULIANDAY((rt0.c2 IN ('2900622')), '-1495708601', (rt0.c3 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY((rt0.c2 IN ('2900622')), '-1495708601', (rt0.c3 IN ()))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (JULIANDAY((rt0.c2 IN ('2900622')), '-1495708601', (rt0.c3 IN ())));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((((rt0.c3, rt0.c2, rt0.c3)) NOT BETWEEN ((vt0.c0, rt0.c2, rt0.c1)) AND ((x'', rt0.c1, rt0.c1)))))<(((((vt0.c0, 0xffffffff8ada61d7, NULL))<((rt0.c0, rt0.c1, rt0.c3)))))) WHERE (((((((((((((CAST('-707863027' AS NUMERIC))OR((~ (rt0.c2)))))OR(x'bb7b')))AND(CASE WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END)))OR(rt0.c1 COLLATE RTRIM)))OR(rt0.c0)))OR(((vt0.c0)LIKE(812329410)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((CAST('-707863027' AS NUMERIC))OR((~ (rt0.c2)))))OR(x'bb7b')))AND(CASE WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END)))OR(rt0.c1 COLLATE RTRIM)))OR(rt0.c0)))OR(((vt0.c0)LIKE(812329410))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((((rt0.c3, rt0.c2, rt0.c3)) NOT BETWEEN ((vt0.c0, rt0.c2, rt0.c1)) AND ((x'', rt0.c1, rt0.c1)))))<(((((vt0.c0, 0Xffffffff8ada61d7, NULL))<((rt0.c0, rt0.c1, rt0.c3)))))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((((rt0.c3, rt0.c2, rt0.c3)) NOT BETWEEN ((vt0.c0, rt0.c2, rt0.c1)) AND ((x'', rt0.c1, rt0.c1)))))<(((((vt0.c0, 0xffffffff8ada61d7, NULL))<((rt0.c0, rt0.c1, rt0.c3)))))) WHERE (((((((((((((CAST('-707863027' AS NUMERIC))OR((~ (rt0.c2)))))OR(x'bb7b')))AND(CASE WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END)))OR(rt0.c1 COLLATE RTRIM)))OR(rt0.c0)))OR(((vt0.c0)LIKE(812329410)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((CAST('-707863027' AS NUMERIC))OR((~ (rt0.c2)))))OR(x'bb7b')))AND(CASE WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END)))OR(rt0.c1 COLLATE RTRIM)))OR(rt0.c0)))OR(((vt0.c0)LIKE(812329410))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((((rt0.c3, rt0.c2, rt0.c3)) NOT BETWEEN ((vt0.c0, rt0.c2, rt0.c1)) AND ((x'', rt0.c1, rt0.c1)))))<(((((vt0.c0, 0Xffffffff8ada61d7, NULL))<((rt0.c0, rt0.c1, rt0.c3)))))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((((rt0.c3, rt0.c2, rt0.c3)) NOT BETWEEN ((vt0.c0, rt0.c2, rt0.c1)) AND ((x'', rt0.c1, rt0.c1)))))<(((((vt0.c0, 0xffffffff8ada61d7, NULL))<((rt0.c0, rt0.c1, rt0.c3)))))) WHERE (((((((((((((CAST('-707863027' AS NUMERIC))OR((~ (rt0.c2)))))OR(x'bb7b')))AND(CASE WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END)))OR(rt0.c1 COLLATE RTRIM)))OR(rt0.c0)))OR(((vt0.c0)LIKE(812329410)))));
SELECT * FROM vt0 WHERE (UNLIKELY(DISTINCT CAST(vt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT CAST(vt0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (UNLIKELY(DISTINCT CAST(vt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT CAST(vt0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (UNLIKELY(DISTINCT CAST(vt0.c0 AS NUMERIC)));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c0)IS NOT(rt0.c3))))<=(((((rt0.c2))<>((0.012417635821664996))))))) ORDER BY 0.7920908095797149  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)IS NOT(rt0.c3))))<=(((((rt0.c2))<>((0.012417635821664996))))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY 0.7920908095797149  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c0)IS NOT(rt0.c3))))<=(((((rt0.c2))<>((0.012417635821664996))))))) ORDER BY 0.7920908095797149  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)IS NOT(rt0.c3))))<=(((((rt0.c2))<>((0.012417635821664996))))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY 0.7920908095797149  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c0)IS NOT(rt0.c3))))<=(((((rt0.c2))<>((0.012417635821664996))))))) ORDER BY 0.7920908095797149  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN (('^pEo.!Cm')) AND ((LIKELY(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN (('^pEo.!Cm')) AND ((LIKELY(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN (('^pEo.!Cm')) AND ((LIKELY(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN (('^pEo.!Cm')) AND ((LIKELY(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN (('^pEo.!Cm')) AND ((LIKELY(rt0.c2)))));
SELECT * FROM vt0 WHERE (CASE (~ (vt0.c0))  WHEN 0xffffffff8914bd2b THEN ((vt0.c0) IS TRUE) ELSE 0Xfffffffff3735434 END) ORDER BY (~ ((+ (vt0.c0)))) ASC  NULLS FIRST, vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (~ (vt0.c0))  WHEN 0xffffffff8914bd2b THEN ((vt0.c0) IS TRUE) ELSE 0xfffffffff3735434 END) IS TRUE)  as count FROM vt0 ORDER BY (~ ((+ (vt0.c0)))) ASC  NULLS FIRST, vt0.c0 DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE (~ (vt0.c0))  WHEN 0xffffffff8914bd2b THEN ((vt0.c0) IS TRUE) ELSE 0Xfffffffff3735434 END) ORDER BY (~ ((+ (vt0.c0)))) ASC  NULLS FIRST, vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (~ (vt0.c0))  WHEN 0xffffffff8914bd2b THEN ((vt0.c0) IS TRUE) ELSE 0xfffffffff3735434 END) IS TRUE)  as count FROM vt0 ORDER BY (~ ((+ (vt0.c0)))) ASC  NULLS FIRST, vt0.c0 DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE (~ (vt0.c0))  WHEN 0xffffffff8914bd2b THEN ((vt0.c0) IS TRUE) ELSE 0Xfffffffff3735434 END) ORDER BY (~ ((+ (vt0.c0)))) ASC  NULLS FIRST, vt0.c0 DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (CASE '?KSFWEv{'  WHEN ((rt0.c2) IS FALSE) THEN CASE WHEN 0.7803649950850845 THEN rt0.c3 ELSE rt0.c0 END WHEN x'' THEN (rt0.c0 IN ()) WHEN '1442629112' COLLATE BINARY THEN CAST(rt0.c0 AS INTEGER) ELSE ((rt0.c0)==(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE '?KSFWEv{'  WHEN ((rt0.c2) IS FALSE) THEN CASE WHEN 0.7803649950850845 THEN rt0.c3 ELSE rt0.c0 END WHEN x'' THEN (rt0.c0 IN ()) WHEN '1442629112' COLLATE BINARY THEN CAST(rt0.c0 AS INTEGER) ELSE ((rt0.c0)=(rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE '?KSFWEv{'  WHEN ((rt0.c2) IS FALSE) THEN CASE WHEN 0.7803649950850845 THEN rt0.c3 ELSE rt0.c0 END WHEN x'' THEN (rt0.c0 IN ()) WHEN '1442629112' COLLATE BINARY THEN CAST(rt0.c0 AS INTEGER) ELSE ((rt0.c0)==(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE '?KSFWEv{'  WHEN ((rt0.c2) IS FALSE) THEN CASE WHEN 0.7803649950850845 THEN rt0.c3 ELSE rt0.c0 END WHEN x'' THEN (rt0.c0 IN ()) WHEN '1442629112' COLLATE BINARY THEN CAST(rt0.c0 AS INTEGER) ELSE ((rt0.c0)=(rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE '?KSFWEv{'  WHEN ((rt0.c2) IS FALSE) THEN CASE WHEN 0.7803649950850845 THEN rt0.c3 ELSE rt0.c0 END WHEN x'' THEN (rt0.c0 IN ()) WHEN '1442629112' COLLATE BINARY THEN CAST(rt0.c0 AS INTEGER) ELSE ((rt0.c0)==(rt0.c1)) END);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((1782991735 IN (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((1782991735 IN (NULL))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((1782991735 IN (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((1782991735 IN (NULL))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((1782991735 IN (NULL)));
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c3)||(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)||(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c3)||(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)||(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c3)||(vt0.c0))) NOT NULL));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CAST(-1404164849 AS INTEGER)) BETWEEN ((((rt0.c2, rt0.c2, rt0.c1, rt0.c1, rt0.c3)) BETWEEN ((rt0.c0, rt0.c3, NULL, 'M%uF', '\rá¸(S')) AND ((rt0.c0, rt0.c1, rt0.c3, x'', vt0.c0)))) AND (((((rt0.c2)OR(rt0.c3)))OR(rt0.c0))))) ORDER BY ((DATETIME(x'75a8', rt0.c3, rt0.c2, rt0.c2, rt0.c0)) BETWEEN (json_patch(rt0.c3, rt0.c1)) AND ((((rt0.c1, rt0.c0, rt0.c3))>((rt0.c1, rt0.c2, rt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(-1404164849 AS INTEGER)) BETWEEN ((((rt0.c2, rt0.c2, rt0.c1, rt0.c1, rt0.c3)) BETWEEN ((rt0.c0, rt0.c3, NULL, 'M%uF', '\rá¸(S')) AND ((rt0.c0, rt0.c1, rt0.c3, x'', vt0.c0)))) AND (((((rt0.c2)OR(rt0.c3)))OR(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((DATETIME(x'75a8', rt0.c3, rt0.c2, rt0.c2, rt0.c0)) BETWEEN (json_patch(rt0.c3, rt0.c1)) AND ((((rt0.c1, rt0.c0, rt0.c3))>((rt0.c1, rt0.c2, rt0.c1))))) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CAST(-1404164849 AS INTEGER)) BETWEEN ((((rt0.c2, rt0.c2, rt0.c1, rt0.c1, rt0.c3)) BETWEEN ((rt0.c0, rt0.c3, NULL, 'M%uF', '\rá¸(S')) AND ((rt0.c0, rt0.c1, rt0.c3, x'', vt0.c0)))) AND (((((rt0.c2)OR(rt0.c3)))OR(rt0.c0))))) ORDER BY ((DATETIME(x'75a8', rt0.c3, rt0.c2, rt0.c2, rt0.c0)) BETWEEN (json_patch(rt0.c3, rt0.c1)) AND ((((rt0.c1, rt0.c0, rt0.c3))>((rt0.c1, rt0.c2, rt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(-1404164849 AS INTEGER)) BETWEEN ((((rt0.c2, rt0.c2, rt0.c1, rt0.c1, rt0.c3)) BETWEEN ((rt0.c0, rt0.c3, NULL, 'M%uF', '\rá¸(S')) AND ((rt0.c0, rt0.c1, rt0.c3, x'', vt0.c0)))) AND (((((rt0.c2)OR(rt0.c3)))OR(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((DATETIME(x'75a8', rt0.c3, rt0.c2, rt0.c2, rt0.c0)) BETWEEN (json_patch(rt0.c3, rt0.c1)) AND ((((rt0.c1, rt0.c0, rt0.c3))>((rt0.c1, rt0.c2, rt0.c1))))) DESC);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (((((rt0.c0, rt0.c2, rt0.c0))==((rt0.c3, vt0.c0, vt0.c0))))||(((((NULL)AND(vt0.c0)))OR(NULL)))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((((rt0.c0, rt0.c2, rt0.c0))==((rt0.c3, vt0.c0, vt0.c0))))||(((((NULL)AND(vt0.c0)))OR(NULL)))));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (((((rt0.c0, rt0.c2, rt0.c0))==((rt0.c3, vt0.c0, vt0.c0))))||(((((NULL)AND(vt0.c0)))OR(NULL)))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((((rt0.c0, rt0.c2, rt0.c0))==((rt0.c3, vt0.c0, vt0.c0))))||(((((NULL)AND(vt0.c0)))OR(NULL)))));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (((((rt0.c0, rt0.c2, rt0.c0))==((rt0.c3, vt0.c0, vt0.c0))))||(((((NULL)AND(vt0.c0)))OR(NULL)))) WHERE (x'');
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c3 AS REAL)) BETWEEN ((~ (rt0.c2))) AND ((((rt0.c2))<=((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS REAL)) BETWEEN ((~ (rt0.c2))) AND ((((rt0.c2))<=((rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c3 AS REAL)) BETWEEN ((~ (rt0.c2))) AND ((((rt0.c2))<=((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS REAL)) BETWEEN ((~ (rt0.c2))) AND ((((rt0.c2))<=((rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c3 AS REAL)) BETWEEN ((~ (rt0.c2))) AND ((((rt0.c2))<=((rt0.c2))))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c1 COLLATE BINARY)>>(((rt0.c0) IS FALSE))) WHERE (CASE ((('-0.0')) BETWEEN ((']1]}h#7')) AND ((rt0.c3)))  WHEN CAST('-566275919' AS REAL) THEN CAST(rt0.c0 AS BLOB) ELSE rt0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE ((('-0.0')) BETWEEN ((']1]}h#7')) AND ((rt0.c3)))  WHEN CAST('-566275919' AS REAL) THEN CAST(rt0.c0 AS BLOB) ELSE rt0.c1 END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c1 COLLATE BINARY)>>(((rt0.c0) IS FALSE))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c1 COLLATE BINARY)>>(((rt0.c0) IS FALSE))) WHERE (CASE ((('-0.0')) BETWEEN ((']1]}h#7')) AND ((rt0.c3)))  WHEN CAST('-566275919' AS REAL) THEN CAST(rt0.c0 AS BLOB) ELSE rt0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE ((('-0.0')) BETWEEN ((']1]}h#7')) AND ((rt0.c3)))  WHEN CAST('-566275919' AS REAL) THEN CAST(rt0.c0 AS BLOB) ELSE rt0.c1 END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c1 COLLATE BINARY)>>(((rt0.c0) IS FALSE))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c1 COLLATE BINARY)>>(((rt0.c0) IS FALSE))) WHERE (CASE ((('-0.0')) BETWEEN ((']1]}h#7')) AND ((rt0.c3)))  WHEN CAST('-566275919' AS REAL) THEN CAST(rt0.c0 AS BLOB) ELSE rt0.c1 END);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c2)||(rt0.c0)) AS REAL)) ORDER BY '''*Â½P' ASC, CASE ((((rt0.c1)AND(rt0.c0)))OR(rt0.c0))  WHEN CAST(rt0.c3 AS BLOB) THEN (NOT (rt0.c3)) END ASC, ((x'dd4c')-(rt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)||(rt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY '''*Â½P' ASC, CASE ((((rt0.c1)AND(rt0.c0)))OR(rt0.c0))  WHEN CAST(rt0.c3 AS BLOB) THEN (NOT (rt0.c3)) END ASC, ((x'dd4c')-(rt0.c0 COLLATE NOCASE))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c2)||(rt0.c0)) AS REAL)) ORDER BY '''*Â½P' ASC, CASE ((((rt0.c1)AND(rt0.c0)))OR(rt0.c0))  WHEN CAST(rt0.c3 AS BLOB) THEN (NOT (rt0.c3)) END ASC, ((x'dd4c')-(rt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)||(rt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY '''*Â½P' ASC, CASE ((((rt0.c1)AND(rt0.c0)))OR(rt0.c0))  WHEN CAST(rt0.c3 AS BLOB) THEN (NOT (rt0.c3)) END ASC, ((x'dd4c')-(rt0.c0 COLLATE NOCASE))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c2)||(rt0.c0)) AS REAL)) ORDER BY '''*Â½P' ASC, CASE ((((rt0.c1)AND(rt0.c0)))OR(rt0.c0))  WHEN CAST(rt0.c3 AS BLOB) THEN (NOT (rt0.c3)) END ASC, ((x'dd4c')-(rt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ('110513037');
SELECT SUM(count) FROM (SELECT ALL (('110513037') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ('110513037');
SELECT SUM(count) FROM (SELECT ALL (('110513037') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ('110513037');
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON CASE WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)) THEN CASE WHEN rt0.c2 THEN rt0.c1 END ELSE (NOT (rt0.c3)) END WHERE ((((((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c3))))AND(rt0.c1)))AND((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c3))))AND(rt0.c1)))AND((~ (rt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CASE WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)) THEN CASE WHEN rt0.c2 THEN rt0.c1 END ELSE (NOT (rt0.c3)) END);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON CASE WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)) THEN CASE WHEN rt0.c2 THEN rt0.c1 END ELSE (NOT (rt0.c3)) END WHERE ((((((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c3))))AND(rt0.c1)))AND((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c3))))AND(rt0.c1)))AND((~ (rt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CASE WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)) THEN CASE WHEN rt0.c2 THEN rt0.c1 END ELSE (NOT (rt0.c3)) END);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON CASE WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)) THEN CASE WHEN rt0.c2 THEN rt0.c1 END ELSE (NOT (rt0.c3)) END WHERE ((((((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c3))))AND(rt0.c1)))AND((~ (rt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE ((rt0.c3) BETWEEN (rt0.c3) AND (vt0.c0))  WHEN (((vt0.c0, vt0.c0, vt0.c0, 0.9701379312288892, rt0.c3)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0, rt0.c3, vt0.c0)) AND ((vt0.c0, rt0.c3, rt0.c3, rt0.c0, rt0.c1))) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) ELSE rt0.c1 COLLATE BINARY END) ORDER BY (((rt0.c2, vt0.c0, rt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c3 END, x'', (rt0.c3 IN (rt0.c3, '\nM')))) AND (((rt0.c3 IN ()), NULL, ((rt0.c3) ISNULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c3) BETWEEN (rt0.c3) AND (vt0.c0))  WHEN (((vt0.c0, vt0.c0, vt0.c0, 0.9701379312288892, rt0.c3)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0, rt0.c3, vt0.c0)) AND ((vt0.c0, rt0.c3, rt0.c3, rt0.c0, rt0.c1))) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) ELSE rt0.c1 COLLATE BINARY END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c2, vt0.c0, rt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c3 END, x'', (rt0.c3 IN (rt0.c3, '\nM')))) AND (((rt0.c3 IN ()), NULL, ((rt0.c3) ISNULL))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE ((rt0.c3) BETWEEN (rt0.c3) AND (vt0.c0))  WHEN (((vt0.c0, vt0.c0, vt0.c0, 0.9701379312288892, rt0.c3)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0, rt0.c3, vt0.c0)) AND ((vt0.c0, rt0.c3, rt0.c3, rt0.c0, rt0.c1))) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) ELSE rt0.c1 COLLATE BINARY END) ORDER BY (((rt0.c2, vt0.c0, rt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c3 END, x'', (rt0.c3 IN (rt0.c3, '\nM')))) AND (((rt0.c3 IN ()), NULL, ((rt0.c3) ISNULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c3) BETWEEN (rt0.c3) AND (vt0.c0))  WHEN (((vt0.c0, vt0.c0, vt0.c0, 0.9701379312288892, rt0.c3)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0, rt0.c3, vt0.c0)) AND ((vt0.c0, rt0.c3, rt0.c3, rt0.c0, rt0.c1))) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) ELSE rt0.c1 COLLATE BINARY END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c2, vt0.c0, rt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c3 END, x'', (rt0.c3 IN (rt0.c3, '\nM')))) AND (((rt0.c3 IN ()), NULL, ((rt0.c3) ISNULL))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE ((rt0.c3) BETWEEN (rt0.c3) AND (vt0.c0))  WHEN (((vt0.c0, vt0.c0, vt0.c0, 0.9701379312288892, rt0.c3)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0, rt0.c3, vt0.c0)) AND ((vt0.c0, rt0.c3, rt0.c3, rt0.c0, rt0.c1))) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) ELSE rt0.c1 COLLATE BINARY END) ORDER BY (((rt0.c2, vt0.c0, rt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c3 END, x'', (rt0.c3 IN (rt0.c3, '\nM')))) AND (((rt0.c3 IN ()), NULL, ((rt0.c3) ISNULL))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((+ (((((vt0.c0)AND(rt0.c2)))OR(rt0.c3))))) ORDER BY CAST(rt0.c1 AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((((vt0.c0)AND(rt0.c2)))OR(rt0.c3))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(rt0.c1 AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((+ (((((vt0.c0)AND(rt0.c2)))OR(rt0.c3))))) ORDER BY CAST(rt0.c1 AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((((vt0.c0)AND(rt0.c2)))OR(rt0.c3))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(rt0.c1 AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((+ (((((vt0.c0)AND(rt0.c2)))OR(rt0.c3))))) ORDER BY CAST(rt0.c1 AS BLOB)  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)))|((NOT (vt0.c0))))) ORDER BY 0.6354078902300365 DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)))|((NOT (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY 0.6354078902300365 DESC);
SELECT * FROM rt0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)))|((NOT (vt0.c0))))) ORDER BY 0.6354078902300365 DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)))|((NOT (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY 0.6354078902300365 DESC);
SELECT * FROM rt0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)))|((NOT (vt0.c0))))) ORDER BY 0.6354078902300365 DESC;
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c2 IN ()), CAST(vt0.c0 AS REAL), rt0.c2 COLLATE RTRIM))=(((((rt0.c1, 0.2843587979281096, vt0.c0))<>((rt0.c1, '?3', rt0.c2))), CASE WHEN rt0.c3 THEN rt0.c3 END, CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2 IN ()), CAST(vt0.c0 AS REAL), rt0.c2 COLLATE RTRIM))==(((((rt0.c1, 0.2843587979281096, vt0.c0))<>((rt0.c1, '?3', rt0.c2))), CASE WHEN rt0.c3 THEN rt0.c3 END, CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c2 IN ()), CAST(vt0.c0 AS REAL), rt0.c2 COLLATE RTRIM))=(((((rt0.c1, 0.2843587979281096, vt0.c0))<>((rt0.c1, '?3', rt0.c2))), CASE WHEN rt0.c3 THEN rt0.c3 END, CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2 IN ()), CAST(vt0.c0 AS REAL), rt0.c2 COLLATE RTRIM))==(((((rt0.c1, 0.2843587979281096, vt0.c0))<>((rt0.c1, '?3', rt0.c2))), CASE WHEN rt0.c3 THEN rt0.c3 END, CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c2 IN ()), CAST(vt0.c0 AS REAL), rt0.c2 COLLATE RTRIM))=(((((rt0.c1, 0.2843587979281096, vt0.c0))<>((rt0.c1, '?3', rt0.c2))), CASE WHEN rt0.c3 THEN rt0.c3 END, CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END))));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)) IN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END, NULLIF(rt0.c1, rt0.c0)))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)) IN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END, NULLIF(rt0.c1, rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY x'' DESC);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)) IN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END, NULLIF(rt0.c1, rt0.c0)))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)) IN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END, NULLIF(rt0.c1, rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY x'' DESC);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)) IN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END, NULLIF(rt0.c1, rt0.c0)))) ORDER BY x'' DESC;
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))%((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL))%((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))%((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL))%((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))%((NOT (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED INNER JOIN rt0 ON CHANGES() WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON CHANGES());
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED INNER JOIN rt0 ON CHANGES() WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON CHANGES());
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED INNER JOIN rt0 ON CHANGES() WHERE (x'');
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3))) ISNULL)) ORDER BY (((((rt0.c2, vt0.c0, rt0.c3)) BETWEEN ((rt0.c1, rt0.c0, rt0.c3)) AND ((rt0.c3, vt0.c0, rt0.c1))))+(((rt0.c2) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3))) ISNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c2, vt0.c0, rt0.c3)) BETWEEN ((rt0.c1, rt0.c0, rt0.c3)) AND ((rt0.c3, vt0.c0, rt0.c1))))+(((rt0.c2) IS TRUE)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3))) ISNULL)) ORDER BY (((((rt0.c2, vt0.c0, rt0.c3)) BETWEEN ((rt0.c1, rt0.c0, rt0.c3)) AND ((rt0.c3, vt0.c0, rt0.c1))))+(((rt0.c2) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3))) ISNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c2, vt0.c0, rt0.c3)) BETWEEN ((rt0.c1, rt0.c0, rt0.c3)) AND ((rt0.c3, vt0.c0, rt0.c1))))+(((rt0.c2) IS TRUE)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3))) ISNULL)) ORDER BY (((((rt0.c2, vt0.c0, rt0.c3)) BETWEEN ((rt0.c1, rt0.c0, rt0.c3)) AND ((rt0.c3, vt0.c0, rt0.c1))))+(((rt0.c2) IS TRUE)))  NULLS LAST;
SELECT * FROM vt0 NOT INDEXED, rt0 WHERE (((STRFTIME(rt0.c1, rt0.c1, rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN (((rt0.c0)==(vt0.c0))) AND (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((STRFTIME(rt0.c1, rt0.c1, rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN (((rt0.c0)=(vt0.c0))) AND (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0 NOT INDEXED, rt0 WHERE (((STRFTIME(rt0.c1, rt0.c1, rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN (((rt0.c0)==(vt0.c0))) AND (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((STRFTIME(rt0.c1, rt0.c1, rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN (((rt0.c0)=(vt0.c0))) AND (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0 NOT INDEXED, rt0 WHERE (((STRFTIME(rt0.c1, rt0.c1, rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN (((rt0.c0)==(vt0.c0))) AND (CAST(vt0.c0 AS NUMERIC))));
SELECT ALL * FROM vt0, rt0 WHERE ((((((x'', rt0.c0, rt0.c3)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, vt0.c0, rt0.c1)))) NOTNULL)) ORDER BY CAST(rt0.c3 AS TEXT) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((x'', rt0.c0, rt0.c3)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, vt0.c0, rt0.c1)))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(rt0.c3 AS TEXT) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE ((((((x'', rt0.c0, rt0.c3)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, vt0.c0, rt0.c1)))) NOTNULL)) ORDER BY CAST(rt0.c3 AS TEXT) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((x'', rt0.c0, rt0.c3)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, vt0.c0, rt0.c1)))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(rt0.c3 AS TEXT) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE ((((((x'', rt0.c0, rt0.c3)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, vt0.c0, rt0.c1)))) NOTNULL)) ORDER BY CAST(rt0.c3 AS TEXT) COLLATE BINARY ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c3) ORDER BY CASE WHEN ((rt0.c2)>>(rt0.c0)) THEN (rt0.c1 IN ()) ELSE vt0.c0 END, ((rt0.c3)&(rt0.c2)) COLLATE RTRIM ASC  NULLS FIRST, (+ (CAST(rt0.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN ((rt0.c2)>>(rt0.c0)) THEN (rt0.c1 IN ()) ELSE vt0.c0 END, ((rt0.c3)&(rt0.c2)) COLLATE RTRIM ASC  NULLS FIRST, (+ (CAST(rt0.c1 AS INTEGER))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c3) ORDER BY CASE WHEN ((rt0.c2)>>(rt0.c0)) THEN (rt0.c1 IN ()) ELSE vt0.c0 END, ((rt0.c3)&(rt0.c2)) COLLATE RTRIM ASC  NULLS FIRST, (+ (CAST(rt0.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN ((rt0.c2)>>(rt0.c0)) THEN (rt0.c1 IN ()) ELSE vt0.c0 END, ((rt0.c3)&(rt0.c2)) COLLATE RTRIM ASC  NULLS FIRST, (+ (CAST(rt0.c1 AS INTEGER))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c3) ORDER BY CASE WHEN ((rt0.c2)>>(rt0.c0)) THEN (rt0.c1 IN ()) ELSE vt0.c0 END, ((rt0.c3)&(rt0.c2)) COLLATE RTRIM ASC  NULLS FIRST, (+ (CAST(rt0.c1 AS INTEGER)));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((- (((rt0.c3) ISNULL)))) ORDER BY COALESCE(CASE rt0.c2  WHEN vt0.c0 THEN '' ELSE vt0.c0 END, IFNULL(rt0.c1, rt0.c3))  NULLS LAST, CASE ((rt0.c2)<=(rt0.c2))  WHEN '1240046572' THEN ((rt0.c3)*(rt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c3) ISNULL)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY COALESCE(CASE rt0.c2  WHEN vt0.c0 THEN '' ELSE vt0.c0 END, IFNULL(rt0.c1, rt0.c3))  NULLS LAST, CASE ((rt0.c2)<=(rt0.c2))  WHEN '1240046572' THEN ((rt0.c3)*(rt0.c0)) END DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((- (((rt0.c3) ISNULL)))) ORDER BY COALESCE(CASE rt0.c2  WHEN vt0.c0 THEN '' ELSE vt0.c0 END, IFNULL(rt0.c1, rt0.c3))  NULLS LAST, CASE ((rt0.c2)<=(rt0.c2))  WHEN '1240046572' THEN ((rt0.c3)*(rt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c3) ISNULL)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY COALESCE(CASE rt0.c2  WHEN vt0.c0 THEN '' ELSE vt0.c0 END, IFNULL(rt0.c1, rt0.c3))  NULLS LAST, CASE ((rt0.c2)<=(rt0.c2))  WHEN '1240046572' THEN ((rt0.c3)*(rt0.c0)) END DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((- (((rt0.c3) ISNULL)))) ORDER BY COALESCE(CASE rt0.c2  WHEN vt0.c0 THEN '' ELSE vt0.c0 END, IFNULL(rt0.c1, rt0.c3))  NULLS LAST, CASE ((rt0.c2)<=(rt0.c2))  WHEN '1240046572' THEN ((rt0.c3)*(rt0.c0)) END DESC;
SELECT * FROM rt0 CROSS JOIN vt0 ON ((JULIANDAY(rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c3 IN ())) AND (((((((((((((rt0.c1)OR('-135928215')))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))) WHERE (((UNLIKELY(DISTINCT rt0.c3)) NOT BETWEEN ((rt0.c1 IN ())) AND (((rt0.c0)||(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(DISTINCT rt0.c3)) NOT BETWEEN ((rt0.c1 IN ())) AND (((rt0.c0)||(rt0.c3))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((JULIANDAY(rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c3 IN ())) AND (((((((((((((rt0.c1)OR('-135928215')))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))));
SELECT * FROM rt0 CROSS JOIN vt0 ON ((JULIANDAY(rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c3 IN ())) AND (((((((((((((rt0.c1)OR('-135928215')))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))) WHERE (((UNLIKELY(DISTINCT rt0.c3)) NOT BETWEEN ((rt0.c1 IN ())) AND (((rt0.c0)||(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(DISTINCT rt0.c3)) NOT BETWEEN ((rt0.c1 IN ())) AND (((rt0.c0)||(rt0.c3))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((JULIANDAY(rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c3 IN ())) AND (((((((((((((rt0.c1)OR('-135928215')))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))));
SELECT * FROM rt0 CROSS JOIN vt0 ON ((JULIANDAY(rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c3 IN ())) AND (((((((((((((rt0.c1)OR('-135928215')))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))) WHERE (((UNLIKELY(DISTINCT rt0.c3)) NOT BETWEEN ((rt0.c1 IN ())) AND (((rt0.c0)||(rt0.c3)))));
SELECT ALL * FROM rt0 WHERE ('nj') ORDER BY CAST((((rt0.c3, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c2, rt0.c3))) AS NUMERIC) DESC  NULLS FIRST, ((NULLIF(rt0.c3, rt0.c0))<=((+ (rt0.c0))))  NULLS LAST, CASE ((rt0.c0)OR(rt0.c1))  WHEN ((rt0.c1)*(rt0.c2)) THEN -1965399593 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('nj') IS TRUE)  as count FROM rt0 ORDER BY CAST((((rt0.c3, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c2, rt0.c3))) AS NUMERIC) DESC  NULLS FIRST, ((NULLIF(rt0.c3, rt0.c0))<=((+ (rt0.c0))))  NULLS LAST, CASE ((rt0.c0)OR(rt0.c1))  WHEN ((rt0.c1)*(rt0.c2)) THEN -1965399593 END ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ('nj') ORDER BY CAST((((rt0.c3, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c2, rt0.c3))) AS NUMERIC) DESC  NULLS FIRST, ((NULLIF(rt0.c3, rt0.c0))<=((+ (rt0.c0))))  NULLS LAST, CASE ((rt0.c0)OR(rt0.c1))  WHEN ((rt0.c1)*(rt0.c2)) THEN -1965399593 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('nj') IS TRUE)  as count FROM rt0 ORDER BY CAST((((rt0.c3, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c2, rt0.c3))) AS NUMERIC) DESC  NULLS FIRST, ((NULLIF(rt0.c3, rt0.c0))<=((+ (rt0.c0))))  NULLS LAST, CASE ((rt0.c0)OR(rt0.c1))  WHEN ((rt0.c1)*(rt0.c2)) THEN -1965399593 END ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ('nj') ORDER BY CAST((((rt0.c3, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c2, rt0.c3))) AS NUMERIC) DESC  NULLS FIRST, ((NULLIF(rt0.c3, rt0.c0))<=((+ (rt0.c0))))  NULLS LAST, CASE ((rt0.c0)OR(rt0.c1))  WHEN ((rt0.c1)*(rt0.c2)) THEN -1965399593 END ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((TIME(vt0.c0, vt0.c0, vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((TIME(vt0.c0, vt0.c0, vt0.c0) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((TIME(vt0.c0, vt0.c0, vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((TIME(vt0.c0, vt0.c0, vt0.c0) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((TIME(vt0.c0, vt0.c0, vt0.c0) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE);
SELECT * FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((rt0.c3 IN ()))) AND ((((-1.965399593E9)!=(rt0.c2)))))) ORDER BY ((((((rt0.c1)AND(rt0.c0)))AND(rt0.c3))) NOT NULL);
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN (((rt0.c3 IN ()))) AND ((((-1.965399593E9)!=(rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)AND(rt0.c0)))AND(rt0.c3))) NOT NULL));
SELECT * FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((rt0.c3 IN ()))) AND ((((-1.965399593E9)!=(rt0.c2)))))) ORDER BY ((((((rt0.c1)AND(rt0.c0)))AND(rt0.c3))) NOT NULL);
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN (((rt0.c3 IN ()))) AND ((((-1.965399593E9)!=(rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)AND(rt0.c0)))AND(rt0.c3))) NOT NULL));
SELECT * FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((rt0.c3 IN ()))) AND ((((-1.965399593E9)!=(rt0.c2)))))) ORDER BY ((((((rt0.c1)AND(rt0.c0)))AND(rt0.c3))) NOT NULL);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 IN (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 IN (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 IN (vt0.c0)) IN ()));
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END)&(TYPEOF(DISTINCT vt0.c0)))) ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM ASC  NULLS LAST, ((((vt0.c0)==(vt0.c0))) BETWEEN (json_insert(vt0.c0, vt0.c0, vt0.c0)) AND ((((vt0.c0, vt0.c0, '')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))), ((((CAST(vt0.c0 AS INTEGER))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(vt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 END)&(TYPEOF(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM ASC  NULLS LAST, ((((vt0.c0)==(vt0.c0))) BETWEEN (json_insert(vt0.c0, vt0.c0, vt0.c0)) AND ((((vt0.c0, vt0.c0, '')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))), ((((CAST(vt0.c0 AS INTEGER))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(vt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END)&(TYPEOF(DISTINCT vt0.c0)))) ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM ASC  NULLS LAST, ((((vt0.c0)==(vt0.c0))) BETWEEN (json_insert(vt0.c0, vt0.c0, vt0.c0)) AND ((((vt0.c0, vt0.c0, '')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))), ((((CAST(vt0.c0 AS INTEGER))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(vt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 END)&(TYPEOF(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM ASC  NULLS LAST, ((((vt0.c0)==(vt0.c0))) BETWEEN (json_insert(vt0.c0, vt0.c0, vt0.c0)) AND ((((vt0.c0, vt0.c0, '')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))), ((((CAST(vt0.c0 AS INTEGER))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(vt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END)&(TYPEOF(DISTINCT vt0.c0)))) ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM ASC  NULLS LAST, ((((vt0.c0)==(vt0.c0))) BETWEEN (json_insert(vt0.c0, vt0.c0, vt0.c0)) AND ((((vt0.c0, vt0.c0, '')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))), ((((CAST(vt0.c0 AS INTEGER))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(vt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE ((((('y%')<(vt0.c0)))<(((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2))))) ORDER BY (~ (rt0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('y%')<(vt0.c0)))<(((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (~ (rt0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ((((('y%')<(vt0.c0)))<(((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2))))) ORDER BY (~ (rt0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('y%')<(vt0.c0)))<(((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (~ (rt0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ((((('y%')<(vt0.c0)))<(((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2))))) ORDER BY (~ (rt0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT * FROM rt0 WHERE (CAST(rt0.c0 AS NUMERIC)) ORDER BY (('7vèªNZd') IS FALSE), '89197983';
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY (('7vèªNZd') IS FALSE), '89197983');
SELECT * FROM rt0 WHERE (CAST(rt0.c0 AS NUMERIC)) ORDER BY (('7vèªNZd') IS FALSE), '89197983';
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY (('7vèªNZd') IS FALSE), '89197983');
SELECT * FROM rt0 WHERE (CAST(rt0.c0 AS NUMERIC)) ORDER BY (('7vèªNZd') IS FALSE), '89197983';
SELECT * FROM vt0, rt0 WHERE (((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c3))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c3))) ISNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c3))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c3))) ISNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c3))) ISNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1 COLLATE RTRIM)))) ORDER BY rt0.c0  NULLS LAST, rt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0  NULLS LAST, rt0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1 COLLATE RTRIM)))) ORDER BY rt0.c0  NULLS LAST, rt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0  NULLS LAST, rt0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1 COLLATE RTRIM)))) ORDER BY rt0.c0  NULLS LAST, rt0.c0;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((((rt0.c2)AND(rt0.c1)))AND(vt0.c0)))OR(vt0.c0)))OR(-1.35928215E8)))>>((+ ('')))) WHERE (CASE WHEN (+ (rt0.c1)) THEN x'' ELSE (((rt0.c1))<((rt0.c2))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (rt0.c1)) THEN x'' ELSE (((rt0.c1))<((rt0.c2))) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((((rt0.c2)AND(rt0.c1)))AND(vt0.c0)))OR(vt0.c0)))OR(-1.35928215E8)))>>((+ ('')))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((((rt0.c2)AND(rt0.c1)))AND(vt0.c0)))OR(vt0.c0)))OR(-1.35928215E8)))>>((+ ('')))) WHERE (CASE WHEN (+ (rt0.c1)) THEN x'' ELSE (((rt0.c1))<((rt0.c2))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (rt0.c1)) THEN x'' ELSE (((rt0.c1))<((rt0.c2))) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((((rt0.c2)AND(rt0.c1)))AND(vt0.c0)))OR(vt0.c0)))OR(-1.35928215E8)))>>((+ ('')))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((((rt0.c2)AND(rt0.c1)))AND(vt0.c0)))OR(vt0.c0)))OR(-1.35928215E8)))>>((+ ('')))) WHERE (CASE WHEN (+ (rt0.c1)) THEN x'' ELSE (((rt0.c1))<((rt0.c2))) END);
SELECT ALL * FROM rt0 WHERE ((((rt0.c3)=(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)=(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c3)=(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)=(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c3)=(rt0.c0)) IN ()));
SELECT * FROM rt0, vt0 WHERE ('VZKé²ªa') ORDER BY (((rt0.c2 IN ())) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('VZKé²ªa') IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c2 IN ())) ISNULL)  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ('VZKé²ªa') ORDER BY (((rt0.c2 IN ())) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('VZKé²ªa') IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c2 IN ())) ISNULL)  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ('VZKé²ªa') ORDER BY (((rt0.c2 IN ())) ISNULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CAST(rt0.c3 AS INTEGER)) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (CASE WHEN rt0.c0 THEN rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS INTEGER)) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (CASE WHEN rt0.c0 THEN rt0.c3 END))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CAST(rt0.c3 AS INTEGER)) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (CASE WHEN rt0.c0 THEN rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS INTEGER)) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (CASE WHEN rt0.c0 THEN rt0.c3 END))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CAST(rt0.c3 AS INTEGER)) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (CASE WHEN rt0.c0 THEN rt0.c3 END)));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CASE WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c3 END)<(rt0.c0))) ORDER BY CAST((~ (rt0.c2)) AS NUMERIC), CAST(rt0.c2 AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c3 END)<(rt0.c0))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST((~ (rt0.c2)) AS NUMERIC), CAST(rt0.c2 AS TEXT));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CASE WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c3 END)<(rt0.c0))) ORDER BY CAST((~ (rt0.c2)) AS NUMERIC), CAST(rt0.c2 AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c3 END)<(rt0.c0))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST((~ (rt0.c2)) AS NUMERIC), CAST(rt0.c2 AS TEXT));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CASE WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c3 END)<(rt0.c0))) ORDER BY CAST((~ (rt0.c2)) AS NUMERIC), CAST(rt0.c2 AS TEXT);
SELECT * FROM vt0, rt0 WHERE ((((((~ (rt0.c1)))OR(((rt0.c2) NOTNULL))))OR(rt0.c2 COLLATE RTRIM))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((~ (rt0.c1)))OR(((rt0.c2) NOTNULL))))OR(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0 ORDER BY vt0.c0 DESC);
SELECT * FROM vt0, rt0 WHERE ((((((~ (rt0.c1)))OR(((rt0.c2) NOTNULL))))OR(rt0.c2 COLLATE RTRIM))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((~ (rt0.c1)))OR(((rt0.c2) NOTNULL))))OR(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0 ORDER BY vt0.c0 DESC);
SELECT * FROM vt0, rt0 WHERE ((((((~ (rt0.c1)))OR(((rt0.c2) NOTNULL))))OR(rt0.c2 COLLATE RTRIM))) ORDER BY vt0.c0 DESC;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY))<((vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 COLLATE BINARY))<((vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY))<((vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 COLLATE BINARY))<((vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY))<((vt0.c0))));
SELECT * FROM rt0 WHERE ((~ (((('110513037', rt0.c0, rt0.c1)) BETWEEN ((rt0.c2, '-1965399593', '-863720711')) AND ((rt0.c1, x'', 0.5263780141203325))))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((('110513037', rt0.c0, rt0.c1)) BETWEEN ((rt0.c2, '-1965399593', '-863720711')) AND ((rt0.c1, x'', 0.5263780141203325)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((~ (((('110513037', rt0.c0, rt0.c1)) BETWEEN ((rt0.c2, '-1965399593', '-863720711')) AND ((rt0.c1, x'', 0.5263780141203325))))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((('110513037', rt0.c0, rt0.c1)) BETWEEN ((rt0.c2, '-1965399593', '-863720711')) AND ((rt0.c1, x'', 0.5263780141203325)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((~ (((('110513037', rt0.c0, rt0.c1)) BETWEEN ((rt0.c2, '-1965399593', '-863720711')) AND ((rt0.c1, x'', 0.5263780141203325))))));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0) NOTNULL) ASC  NULLS FIRST, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOTNULL) ASC  NULLS FIRST, vt0.c0);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0) NOTNULL) ASC  NULLS FIRST, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOTNULL) ASC  NULLS FIRST, vt0.c0);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0) NOTNULL) ASC  NULLS FIRST, vt0.c0;
SELECT ALL * FROM rt0 WHERE (LIKELIHOOD(DISTINCT ((((((((rt0.c0)OR(rt0.c0)))AND(-6.10831983E8)))OR(rt0.c2)))AND(rt0.c2)), 0.399363685553474)) ORDER BY TYPEOF(((0.7747115010365879) NOTNULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((((((((rt0.c0)OR(rt0.c0)))AND(-6.10831983E8)))OR(rt0.c2)))AND(rt0.c2)), 0.399363685553474)) IS TRUE)  as count FROM rt0 ORDER BY TYPEOF(((0.7747115010365879) NOTNULL))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (LIKELIHOOD(DISTINCT ((((((((rt0.c0)OR(rt0.c0)))AND(-6.10831983E8)))OR(rt0.c2)))AND(rt0.c2)), 0.399363685553474)) ORDER BY TYPEOF(((0.7747115010365879) NOTNULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((((((((rt0.c0)OR(rt0.c0)))AND(-6.10831983E8)))OR(rt0.c2)))AND(rt0.c2)), 0.399363685553474)) IS TRUE)  as count FROM rt0 ORDER BY TYPEOF(((0.7747115010365879) NOTNULL))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (LIKELIHOOD(DISTINCT ((((((((rt0.c0)OR(rt0.c0)))AND(-6.10831983E8)))OR(rt0.c2)))AND(rt0.c2)), 0.399363685553474)) ORDER BY TYPEOF(((0.7747115010365879) NOTNULL))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((0.4615940291463283)>=(rt0.c0)) THEN ((rt0.c3)/(x'8d4c')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((0.4615940291463283)>=(rt0.c0)) THEN ((rt0.c3)/(x'8d4c')) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((0.4615940291463283)>=(rt0.c0)) THEN ((rt0.c3)/(x'8d4c')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((0.4615940291463283)>=(rt0.c0)) THEN ((rt0.c3)/(x'8d4c')) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((0.4615940291463283)>=(rt0.c0)) THEN ((rt0.c3)/(x'8d4c')) END);
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c2) ORDER BY CASE WHEN ((rt0.c3) IS TRUE) THEN x'd7c5' ELSE (((rt0.c3, rt0.c3, 'gc''', rt0.c3, rt0.c3))>((rt0.c0, rt0.c1, rt0.c1, rt0.c2, vt0.c0))) END;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN ((rt0.c3) IS TRUE) THEN x'd7c5' ELSE (((rt0.c3, rt0.c3, 'gc''', rt0.c3, rt0.c3))>((rt0.c0, rt0.c1, rt0.c1, rt0.c2, vt0.c0))) END);
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c2) ORDER BY CASE WHEN ((rt0.c3) IS TRUE) THEN x'd7c5' ELSE (((rt0.c3, rt0.c3, 'gc''', rt0.c3, rt0.c3))>((rt0.c0, rt0.c1, rt0.c1, rt0.c2, vt0.c0))) END;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN ((rt0.c3) IS TRUE) THEN x'd7c5' ELSE (((rt0.c3, rt0.c3, 'gc''', rt0.c3, rt0.c3))>((rt0.c0, rt0.c1, rt0.c1, rt0.c2, vt0.c0))) END);
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c2) ORDER BY CASE WHEN ((rt0.c3) IS TRUE) THEN x'd7c5' ELSE (((rt0.c3, rt0.c3, 'gc''', rt0.c3, rt0.c3))>((rt0.c0, rt0.c1, rt0.c1, rt0.c2, vt0.c0))) END;
SELECT ALL * FROM rt0 WHERE ((rt0.c2 COLLATE BINARY IN ())) ORDER BY CASE WHEN rt0.c3 COLLATE BINARY THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)) END ASC, NULL ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c3 COLLATE BINARY THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)) END ASC, NULL ASC);
SELECT ALL * FROM rt0 WHERE ((rt0.c2 COLLATE BINARY IN ())) ORDER BY CASE WHEN rt0.c3 COLLATE BINARY THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)) END ASC, NULL ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c3 COLLATE BINARY THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)) END ASC, NULL ASC);
SELECT ALL * FROM rt0 WHERE ((rt0.c2 COLLATE BINARY IN ())) ORDER BY CASE WHEN rt0.c3 COLLATE BINARY THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)) END ASC, NULL ASC;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((('-2050763259')<(((((rt0.c2)OR(vt0.c0)))AND(rt0.c1))))) ORDER BY rt0.c3, (((((rt0.c2))<(('!~m'))))==(((('7g[(]*'))>=((vt0.c0))))), (~ (rt0.c2)) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('-2050763259')<(((((rt0.c2)OR(vt0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c3, (((((rt0.c2))<(('!~m'))))==(((('7g[(]*'))>=((vt0.c0))))), (~ (rt0.c2)) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((('-2050763259')<(((((rt0.c2)OR(vt0.c0)))AND(rt0.c1))))) ORDER BY rt0.c3, (((((rt0.c2))<(('!~m'))))==(((('7g[(]*'))>=((vt0.c0))))), (~ (rt0.c2)) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('-2050763259')<(((((rt0.c2)OR(vt0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c3, (((((rt0.c2))<(('!~m'))))==(((('7g[(]*'))>=((vt0.c0))))), (~ (rt0.c2)) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((('-2050763259')<(((((rt0.c2)OR(vt0.c0)))AND(rt0.c1))))) ORDER BY rt0.c3, (((((rt0.c2))<(('!~m'))))==(((('7g[(]*'))>=((vt0.c0))))), (~ (rt0.c2)) COLLATE BINARY DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((((('-1495708601') BETWEEN (rt0.c3) AND (rt0.c0)))AND(((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(rt0.c1)));
SELECT SUM(count) FROM (SELECT (((((((('-1495708601') BETWEEN (rt0.c3) AND (rt0.c0)))AND(((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(rt0.c1))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((((('-1495708601') BETWEEN (rt0.c3) AND (rt0.c0)))AND(((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(rt0.c1)));
SELECT SUM(count) FROM (SELECT (((((((('-1495708601') BETWEEN (rt0.c3) AND (rt0.c0)))AND(((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(rt0.c1))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((((('-1495708601') BETWEEN (rt0.c3) AND (rt0.c0)))AND(((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(rt0.c1)));
SELECT * FROM rt0, vt0 WHERE ((((((rt0.c0))<=((rt0.c0))))|((NOT (0.7920908095797149)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))<=((rt0.c0))))|((NOT (0.7920908095797149))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((((rt0.c0))<=((rt0.c0))))|((NOT (0.7920908095797149)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))<=((rt0.c0))))|((NOT (0.7920908095797149))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((((rt0.c0))<=((rt0.c0))))|((NOT (0.7920908095797149)))));
SELECT * FROM vt0 WHERE (LIKELY(DISTINCT ((135684501)+(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((135684501)+(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (LIKELY(DISTINCT ((135684501)+(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((135684501)+(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (LIKELY(DISTINCT ((135684501)+(vt0.c0))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON CAST(((x'3855')LIKE(rt0.c3)) AS INTEGER) WHERE ((((vt0.c0))>=(('?2'))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))>=(('?2')))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CAST(((x'3855')LIKE(rt0.c3)) AS INTEGER));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON CAST(((x'3855')LIKE(rt0.c3)) AS INTEGER) WHERE ((((vt0.c0))>=(('?2'))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))>=(('?2')))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CAST(((x'3855')LIKE(rt0.c3)) AS INTEGER));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON CAST(((x'3855')LIKE(rt0.c3)) AS INTEGER) WHERE ((((vt0.c0))>=(('?2'))));
SELECT * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))) AND (((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c3)))AND('798262294')))AND(rt0.c0))))) ORDER BY CASE WHEN CASE WHEN rt0.c2 THEN 'çºæ¹µ<?LM*ê«' ELSE 0.9143134086805677 END THEN rt0.c0 COLLATE BINARY ELSE ((((rt0.c0)AND(rt0.c2)))OR(rt0.c3)) END, (NOT (((rt0.c2)IS(rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))) AND (((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c3)))AND('798262294')))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CASE WHEN rt0.c2 THEN 'çºæ¹µ<?LM*ê«' ELSE 0.9143134086805677 END THEN rt0.c0 COLLATE BINARY ELSE ((((rt0.c0)AND(rt0.c2)))OR(rt0.c3)) END, (NOT (((rt0.c2)IS(rt0.c0)))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))) AND (((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c3)))AND('798262294')))AND(rt0.c0))))) ORDER BY CASE WHEN CASE WHEN rt0.c2 THEN 'çºæ¹µ<?LM*ê«' ELSE 0.9143134086805677 END THEN rt0.c0 COLLATE BINARY ELSE ((((rt0.c0)AND(rt0.c2)))OR(rt0.c3)) END, (NOT (((rt0.c2)IS(rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))) AND (((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c3)))AND('798262294')))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CASE WHEN rt0.c2 THEN 'çºæ¹µ<?LM*ê«' ELSE 0.9143134086805677 END THEN rt0.c0 COLLATE BINARY ELSE ((((rt0.c0)AND(rt0.c2)))OR(rt0.c3)) END, (NOT (((rt0.c2)IS(rt0.c0)))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))) AND (((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c3)))AND('798262294')))AND(rt0.c0))))) ORDER BY CASE WHEN CASE WHEN rt0.c2 THEN 'çºæ¹µ<?LM*ê«' ELSE 0.9143134086805677 END THEN rt0.c0 COLLATE BINARY ELSE ((((rt0.c0)AND(rt0.c2)))OR(rt0.c3)) END, (NOT (((rt0.c2)IS(rt0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)==(rt0.c1)))||(((rt0.c1) NOT BETWEEN (rt0.c2) AND (0.669595769452904))))) ORDER BY CASE rt0.c2 COLLATE RTRIM  WHEN ((rt0.c0) ISNULL) THEN ((rt0.c0) ISNULL) END DESC  NULLS FIRST, rt0.c0 ASC, x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)==(rt0.c1)))||(((rt0.c1) NOT BETWEEN (rt0.c2) AND (0.669595769452904))))) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c2 COLLATE RTRIM  WHEN ((rt0.c0) ISNULL) THEN ((rt0.c0) ISNULL) END DESC  NULLS FIRST, rt0.c0 ASC, x'' DESC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)==(rt0.c1)))||(((rt0.c1) NOT BETWEEN (rt0.c2) AND (0.669595769452904))))) ORDER BY CASE rt0.c2 COLLATE RTRIM  WHEN ((rt0.c0) ISNULL) THEN ((rt0.c0) ISNULL) END DESC  NULLS FIRST, rt0.c0 ASC, x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)==(rt0.c1)))||(((rt0.c1) NOT BETWEEN (rt0.c2) AND (0.669595769452904))))) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c2 COLLATE RTRIM  WHEN ((rt0.c0) ISNULL) THEN ((rt0.c0) ISNULL) END DESC  NULLS FIRST, rt0.c0 ASC, x'' DESC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)==(rt0.c1)))||(((rt0.c1) NOT BETWEEN (rt0.c2) AND (0.669595769452904))))) ORDER BY CASE rt0.c2 COLLATE RTRIM  WHEN ((rt0.c0) ISNULL) THEN ((rt0.c0) ISNULL) END DESC  NULLS FIRST, rt0.c0 ASC, x'' DESC;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)IS(vt0.c0)) COLLATE BINARY) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)IS(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)IS(vt0.c0)) COLLATE BINARY) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)IS(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)IS(vt0.c0)) COLLATE BINARY) ORDER BY vt0.c0 DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)<=(vt0.c0))) NOT BETWEEN ((x'' IN (vt0.c0, vt0.c0))) AND ((((vt0.c0))<=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<=(vt0.c0))) NOT BETWEEN ((x'' IN (vt0.c0, vt0.c0))) AND ((((vt0.c0))<=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)<=(vt0.c0))) NOT BETWEEN ((x'' IN (vt0.c0, vt0.c0))) AND ((((vt0.c0))<=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<=(vt0.c0))) NOT BETWEEN ((x'' IN (vt0.c0, vt0.c0))) AND ((((vt0.c0))<=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)<=(vt0.c0))) NOT BETWEEN ((x'' IN (vt0.c0, vt0.c0))) AND ((((vt0.c0))<=((vt0.c0))))));
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1)>=(rt0.c2)) AS TEXT)) ORDER BY CASE CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END  WHEN NULLIF(rt0.c1, rt0.c2) THEN 0.0478698776470573 ELSE TRIM(DISTINCT rt0.c0) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1)>=(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY CASE CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END  WHEN NULLIF(rt0.c1, rt0.c2) THEN 0.0478698776470573 ELSE TRIM(DISTINCT rt0.c0) END ASC);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1)>=(rt0.c2)) AS TEXT)) ORDER BY CASE CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END  WHEN NULLIF(rt0.c1, rt0.c2) THEN 0.0478698776470573 ELSE TRIM(DISTINCT rt0.c0) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1)>=(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY CASE CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END  WHEN NULLIF(rt0.c1, rt0.c2) THEN 0.0478698776470573 ELSE TRIM(DISTINCT rt0.c0) END ASC);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1)>=(rt0.c2)) AS TEXT)) ORDER BY CASE CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END  WHEN NULLIF(rt0.c1, rt0.c2) THEN 0.0478698776470573 ELSE TRIM(DISTINCT rt0.c0) END ASC;
SELECT * FROM rt0 WHERE (((((rt0.c2 IN (rt0.c3, rt0.c0))))>((((rt0.c0)AND(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2 IN (rt0.c3, rt0.c0))))>((((rt0.c0)AND(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2 IN (rt0.c3, rt0.c0))))>((((rt0.c0)AND(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2 IN (rt0.c3, rt0.c0))))>((((rt0.c0)AND(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2 IN (rt0.c3, rt0.c0))))>((((rt0.c0)AND(rt0.c1))))));
SELECT COUNT(*) FROM rt0 WHERE (SQLITE_SOURCE_ID()) ORDER BY (((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)) IN ()), (NOT (((rt0.c2)<(rt0.c3)))) DESC  NULLS LAST, (CAST(rt0.c2 AS NUMERIC) IN (((((rt0.c2)OR(rt0.c3)))OR(rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)) IN ()), (NOT (((rt0.c2)<(rt0.c3)))) DESC  NULLS LAST, (CAST(rt0.c2 AS NUMERIC) IN (((((rt0.c2)OR(rt0.c3)))OR(rt0.c2)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (SQLITE_SOURCE_ID()) ORDER BY (((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)) IN ()), (NOT (((rt0.c2)<(rt0.c3)))) DESC  NULLS LAST, (CAST(rt0.c2 AS NUMERIC) IN (((((rt0.c2)OR(rt0.c3)))OR(rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)) IN ()), (NOT (((rt0.c2)<(rt0.c3)))) DESC  NULLS LAST, (CAST(rt0.c2 AS NUMERIC) IN (((((rt0.c2)OR(rt0.c3)))OR(rt0.c2)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (SQLITE_SOURCE_ID()) ORDER BY (((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)) IN ()), (NOT (((rt0.c2)<(rt0.c3)))) DESC  NULLS LAST, (CAST(rt0.c2 AS NUMERIC) IN (((((rt0.c2)OR(rt0.c3)))OR(rt0.c2)))) ASC  NULLS FIRST;
SELECT * FROM vt0, rt0 WHERE (((((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c2))) NOTNULL)) ORDER BY (CAST(vt0.c0 AS BLOB) IN ()), CASE ((rt0.c3) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN TRIM(rt0.c1, rt0.c3) THEN '-967552488' ELSE (rt0.c0 IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c2))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (CAST(vt0.c0 AS BLOB) IN ()), CASE ((rt0.c3) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN TRIM(rt0.c1, rt0.c3) THEN '-967552488' ELSE (rt0.c0 IN ()) END  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c2))) NOTNULL)) ORDER BY (CAST(vt0.c0 AS BLOB) IN ()), CASE ((rt0.c3) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN TRIM(rt0.c1, rt0.c3) THEN '-967552488' ELSE (rt0.c0 IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c2))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (CAST(vt0.c0 AS BLOB) IN ()), CASE ((rt0.c3) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN TRIM(rt0.c1, rt0.c3) THEN '-967552488' ELSE (rt0.c0 IN ()) END  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c2))) NOTNULL)) ORDER BY (CAST(vt0.c0 AS BLOB) IN ()), CASE ((rt0.c3) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN TRIM(rt0.c1, rt0.c3) THEN '-967552488' ELSE (rt0.c0 IN ()) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ('0.4615940291463283')) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ('0.4615940291463283')) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ('0.4615940291463283')) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ('0.4615940291463283')) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ('0.4615940291463283')) AS TEXT));
SELECT ALL COUNT(*) FROM rt0 WHERE (TRIM(CASE WHEN rt0.c0 THEN rt0.c2 END, ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)))) ORDER BY ((((rt0.c1)IS NOT(rt0.c0)))<((rt0.c1 IN ()))) ASC  NULLS FIRST, CASE CAST(rt0.c3 AS REAL)  WHEN (rt0.c3 IN (rt0.c3, rt0.c1)) THEN rt0.c3 WHEN SQLITE_VERSION() THEN ((rt0.c2)GLOB(x'143a')) WHEN ((rt0.c1)IS NOT(rt0.c0)) THEN (- (rt0.c3)) ELSE ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CASE WHEN rt0.c0 THEN rt0.c2 END, ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)IS NOT(rt0.c0)))<((rt0.c1 IN ()))) ASC  NULLS FIRST, CASE CAST(rt0.c3 AS REAL)  WHEN (rt0.c3 IN (rt0.c3, rt0.c1)) THEN rt0.c3 WHEN SQLITE_VERSION() THEN ((rt0.c2)GLOB(x'143a')) WHEN ((rt0.c1)IS NOT(rt0.c0)) THEN (- (rt0.c3)) ELSE ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (TRIM(CASE WHEN rt0.c0 THEN rt0.c2 END, ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)))) ORDER BY ((((rt0.c1)IS NOT(rt0.c0)))<((rt0.c1 IN ()))) ASC  NULLS FIRST, CASE CAST(rt0.c3 AS REAL)  WHEN (rt0.c3 IN (rt0.c3, rt0.c1)) THEN rt0.c3 WHEN SQLITE_VERSION() THEN ((rt0.c2)GLOB(x'143a')) WHEN ((rt0.c1)IS NOT(rt0.c0)) THEN (- (rt0.c3)) ELSE ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CASE WHEN rt0.c0 THEN rt0.c2 END, ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)IS NOT(rt0.c0)))<((rt0.c1 IN ()))) ASC  NULLS FIRST, CASE CAST(rt0.c3 AS REAL)  WHEN (rt0.c3 IN (rt0.c3, rt0.c1)) THEN rt0.c3 WHEN SQLITE_VERSION() THEN ((rt0.c2)GLOB(x'143a')) WHEN ((rt0.c1)IS NOT(rt0.c0)) THEN (- (rt0.c3)) ELSE ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (TRIM(CASE WHEN rt0.c0 THEN rt0.c2 END, ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)))) ORDER BY ((((rt0.c1)IS NOT(rt0.c0)))<((rt0.c1 IN ()))) ASC  NULLS FIRST, CASE CAST(rt0.c3 AS REAL)  WHEN (rt0.c3 IN (rt0.c3, rt0.c1)) THEN rt0.c3 WHEN SQLITE_VERSION() THEN ((rt0.c2)GLOB(x'143a')) WHEN ((rt0.c1)IS NOT(rt0.c0)) THEN (- (rt0.c3)) ELSE ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)) END;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (LIKELY(DISTINCT (- (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT (- (vt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (LIKELY(DISTINCT (- (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT (- (vt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (LIKELY(DISTINCT (- (vt0.c0))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((- (rt0.c2)) IN (((rt0.c0)>=(rt0.c0))))) ORDER BY (NOT (rt0.c3)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((- (rt0.c2)) IN (((rt0.c0)>=(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT (rt0.c3)) COLLATE RTRIM ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((- (rt0.c2)) IN (((rt0.c0)>=(rt0.c0))))) ORDER BY (NOT (rt0.c3)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((- (rt0.c2)) IN (((rt0.c0)>=(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT (rt0.c3)) COLLATE RTRIM ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((- (rt0.c2)) IN (((rt0.c0)>=(rt0.c0))))) ORDER BY (NOT (rt0.c3)) COLLATE RTRIM ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((rt0.c1)<=(((NULL) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)<=(((NULL) NOTNULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c1)<=(((NULL) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)<=(((NULL) NOTNULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c1)<=(((NULL) NOTNULL))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (0.7436876456664235 IN ()) WHERE ((- (vt0.c0 COLLATE BINARY))) ORDER BY rt0.c3  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (0.7436876456664235 IN ()) ORDER BY rt0.c3  NULLS FIRST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (0.7436876456664235 IN ()) WHERE ((- (vt0.c0 COLLATE BINARY))) ORDER BY rt0.c3  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (0.7436876456664235 IN ()) ORDER BY rt0.c3  NULLS FIRST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (0.7436876456664235 IN ()) WHERE ((- (vt0.c0 COLLATE BINARY))) ORDER BY rt0.c3  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(x'' AS TEXT)) ORDER BY LIKE(vt0.c0, vt0.c0) COLLATE RTRIM COLLATE BINARY DESC, ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)OR(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY LIKE(vt0.c0, vt0.c0) COLLATE RTRIM COLLATE BINARY DESC, ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)OR(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(x'' AS TEXT)) ORDER BY LIKE(vt0.c0, vt0.c0) COLLATE RTRIM COLLATE BINARY DESC, ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)OR(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY LIKE(vt0.c0, vt0.c0) COLLATE RTRIM COLLATE BINARY DESC, ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)OR(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(x'' AS TEXT)) ORDER BY LIKE(vt0.c0, vt0.c0) COLLATE RTRIM COLLATE BINARY DESC, ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)OR(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE ((('dD')OR(rt0.c2)));
SELECT SUM(count) FROM (SELECT (((('dD')OR(rt0.c2))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((('dD')OR(rt0.c2)));
SELECT SUM(count) FROM (SELECT (((('dD')OR(rt0.c2))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((('dD')OR(rt0.c2)));
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c3 IN ()))&((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c2)))))) ORDER BY (rt0.c0 IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN ()))&((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (rt0.c0 IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c3 IN ()))&((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c2)))))) ORDER BY (rt0.c0 IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN ()))&((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (rt0.c0 IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c3 IN ()))&((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c2)))))) ORDER BY (rt0.c0 IN ()) ASC  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE (((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1))) IS FALSE)) ORDER BY (((vt0.c0))!=((((rt0.c3)<>(rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1))) IS FALSE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c0))!=((((rt0.c3)<>(rt0.c0))))) DESC);
SELECT * FROM rt0, vt0 WHERE (((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1))) IS FALSE)) ORDER BY (((vt0.c0))!=((((rt0.c3)<>(rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1))) IS FALSE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c0))!=((((rt0.c3)<>(rt0.c0))))) DESC);
SELECT * FROM rt0, vt0 WHERE (((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1))) IS FALSE)) ORDER BY (((vt0.c0))!=((((rt0.c3)<>(rt0.c0))))) DESC;
SELECT * FROM rt0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (rt0.c0);
SELECT * FROM vt0, rt0 WHERE (CAST(IFNULL(vt0.c0, 1.83112677E9) AS INTEGER)) ORDER BY CAST(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)) AS TEXT) DESC  NULLS LAST, CAST((- (NULL)) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(IFNULL(vt0.c0, 1.83112677E9) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)) AS TEXT) DESC  NULLS LAST, CAST((- (NULL)) AS TEXT) ASC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (CAST(IFNULL(vt0.c0, 1.83112677E9) AS INTEGER)) ORDER BY CAST(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)) AS TEXT) DESC  NULLS LAST, CAST((- (NULL)) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(IFNULL(vt0.c0, 1.83112677E9) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)) AS TEXT) DESC  NULLS LAST, CAST((- (NULL)) AS TEXT) ASC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (CAST(IFNULL(vt0.c0, 1.83112677E9) AS INTEGER)) ORDER BY CAST(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)) AS TEXT) DESC  NULLS LAST, CAST((- (NULL)) AS TEXT) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (0Xffffffffd7a1a1fe);
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffd7a1a1fe) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0Xffffffffd7a1a1fe);
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffd7a1a1fe) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0Xffffffffd7a1a1fe);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((NOT (vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((NOT (vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((NOT (vt0.c0)) AS REAL));
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c3);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((((((~ (rt0.c0)))OR(((vt0.c0) BETWEEN (x'') AND (rt0.c2)))))OR(((rt0.c1)>>(NULL)))))OR((rt0.c2 IN (rt0.c3, vt0.c0, rt0.c0)))))AND((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((~ (rt0.c0)))OR(((vt0.c0) BETWEEN (x'') AND (rt0.c2)))))OR(((rt0.c1)>>(NULL)))))OR((rt0.c2 IN (rt0.c3, vt0.c0, rt0.c0)))))AND((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((((((~ (rt0.c0)))OR(((vt0.c0) BETWEEN (x'') AND (rt0.c2)))))OR(((rt0.c1)>>(NULL)))))OR((rt0.c2 IN (rt0.c3, vt0.c0, rt0.c0)))))AND((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((~ (rt0.c0)))OR(((vt0.c0) BETWEEN (x'') AND (rt0.c2)))))OR(((rt0.c1)>>(NULL)))))OR((rt0.c2 IN (rt0.c3, vt0.c0, rt0.c0)))))AND((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((((((~ (rt0.c0)))OR(((vt0.c0) BETWEEN (x'') AND (rt0.c2)))))OR(((rt0.c1)>>(NULL)))))OR((rt0.c2 IN (rt0.c3, vt0.c0, rt0.c0)))))AND((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN (((rt0.c2, rt0.c0, rt0.c1))<=((rt0.c1, rt0.c3, rt0.c1))) THEN (rt0.c3 IN ()) ELSE CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c2, rt0.c0, rt0.c1))<=((rt0.c1, rt0.c3, rt0.c1))) THEN (rt0.c3 IN ()) ELSE CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 END END) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN (((rt0.c2, rt0.c0, rt0.c1))<=((rt0.c1, rt0.c3, rt0.c1))) THEN (rt0.c3 IN ()) ELSE CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c2, rt0.c0, rt0.c1))<=((rt0.c1, rt0.c3, rt0.c1))) THEN (rt0.c3 IN ()) ELSE CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 END END) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN (((rt0.c2, rt0.c0, rt0.c1))<=((rt0.c1, rt0.c3, rt0.c1))) THEN (rt0.c3 IN ()) ELSE CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 END END);
SELECT * FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS NUMERIC)) ORDER BY CAST(((vt0.c0)<=(vt0.c0)) AS NUMERIC), (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((0.7665906070797319, vt0.c0, vt0.c0)) AND ((vt0.c0, x'', vt0.c0))))|(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)<=(vt0.c0)) AS NUMERIC), (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((0.7665906070797319, vt0.c0, vt0.c0)) AND ((vt0.c0, x'', vt0.c0))))|(vt0.c0))  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS NUMERIC)) ORDER BY CAST(((vt0.c0)<=(vt0.c0)) AS NUMERIC), (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((0.7665906070797319, vt0.c0, vt0.c0)) AND ((vt0.c0, x'', vt0.c0))))|(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)<=(vt0.c0)) AS NUMERIC), (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((0.7665906070797319, vt0.c0, vt0.c0)) AND ((vt0.c0, x'', vt0.c0))))|(vt0.c0))  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS NUMERIC)) ORDER BY CAST(((vt0.c0)<=(vt0.c0)) AS NUMERIC), (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((0.7665906070797319, vt0.c0, vt0.c0)) AND ((vt0.c0, x'', vt0.c0))))|(vt0.c0))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0 COLLATE RTRIM) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0 COLLATE RTRIM) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0 COLLATE RTRIM) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c1 COLLATE BINARY)*(rt0.c1 COLLATE NOCASE)) WHERE (COALESCE((((rt0.c0, rt0.c0, rt0.c3, rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, 0.6958517251056561, x'', rt0.c0, rt0.c0)) AND ((rt0.c3, rt0.c3, rt0.c1, vt0.c0, rt0.c2))), ((((((((rt0.c1)OR(rt0.c1)))OR(0Xffffffff841fa37d)))OR(rt0.c1)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE((((rt0.c0, rt0.c0, rt0.c3, rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, 0.6958517251056561, x'', rt0.c0, rt0.c0)) AND ((rt0.c3, rt0.c3, rt0.c1, vt0.c0, rt0.c2))), ((((((((rt0.c1)OR(rt0.c1)))OR(0xffffffff841fa37d)))OR(rt0.c1)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c1 COLLATE BINARY)*(rt0.c1 COLLATE NOCASE)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c1 COLLATE BINARY)*(rt0.c1 COLLATE NOCASE)) WHERE (COALESCE((((rt0.c0, rt0.c0, rt0.c3, rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, 0.6958517251056561, x'', rt0.c0, rt0.c0)) AND ((rt0.c3, rt0.c3, rt0.c1, vt0.c0, rt0.c2))), ((((((((rt0.c1)OR(rt0.c1)))OR(0Xffffffff841fa37d)))OR(rt0.c1)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE((((rt0.c0, rt0.c0, rt0.c3, rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, 0.6958517251056561, x'', rt0.c0, rt0.c0)) AND ((rt0.c3, rt0.c3, rt0.c1, vt0.c0, rt0.c2))), ((((((((rt0.c1)OR(rt0.c1)))OR(0xffffffff841fa37d)))OR(rt0.c1)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c1 COLLATE BINARY)*(rt0.c1 COLLATE NOCASE)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c1 COLLATE BINARY)*(rt0.c1 COLLATE NOCASE)) WHERE (COALESCE((((rt0.c0, rt0.c0, rt0.c3, rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, 0.6958517251056561, x'', rt0.c0, rt0.c0)) AND ((rt0.c3, rt0.c3, rt0.c1, vt0.c0, rt0.c2))), ((((((((rt0.c1)OR(rt0.c1)))OR(0Xffffffff841fa37d)))OR(rt0.c1)))AND(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)>(vt0.c0)))%(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>(vt0.c0)))%(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)>(vt0.c0)))%(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>(vt0.c0)))%(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)>(vt0.c0)))%(CAST(vt0.c0 AS REAL))));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON rt0.c2 WHERE (x'6744');
SELECT SUM(count) FROM (SELECT ((x'6744') IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON rt0.c2);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON rt0.c2 WHERE (x'6744');
SELECT SUM(count) FROM (SELECT ((x'6744') IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON rt0.c2);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON rt0.c2 WHERE (x'6744');
SELECT COUNT(*) FROM vt0 WHERE ((('M|') BETWEEN (json(0X3ca71167)) AND (((vt0.c0)+(vt0.c0))))) ORDER BY ((((((vt0.c0) NOTNULL))AND(vt0.c0)))OR(ABS(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((('M|') BETWEEN (json(0X3ca71167)) AND (((vt0.c0)+(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) NOTNULL))AND(vt0.c0)))OR(ABS(vt0.c0))) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((('M|') BETWEEN (json(0X3ca71167)) AND (((vt0.c0)+(vt0.c0))))) ORDER BY ((((((vt0.c0) NOTNULL))AND(vt0.c0)))OR(ABS(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((('M|') BETWEEN (json(0X3ca71167)) AND (((vt0.c0)+(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) NOTNULL))AND(vt0.c0)))OR(ABS(vt0.c0))) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((('M|') BETWEEN (json(0X3ca71167)) AND (((vt0.c0)+(vt0.c0))))) ORDER BY ((((((vt0.c0) NOTNULL))AND(vt0.c0)))OR(ABS(vt0.c0))) ASC;
SELECT * FROM rt0 WHERE (((rt0.c3) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((rt0.c3) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c3) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((rt0.c3) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c3) IS TRUE));
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c2) NOT BETWEEN (rt0.c2) AND ('-1879330179'))))) ORDER BY (((((rt0.c1)AND(rt0.c0))))=(((~ (rt0.c1)))))  NULLS FIRST, (((((((((rt0.c2)AND(353643875)))OR(0.9143134086805677)))AND(rt0.c0)))OR(rt0.c0)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c2) NOT BETWEEN (rt0.c2) AND ('-1879330179'))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1)AND(rt0.c0))))=(((~ (rt0.c1)))))  NULLS FIRST, (((((((((rt0.c2)AND(353643875)))OR(0.9143134086805677)))AND(rt0.c0)))OR(rt0.c0)) IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c2) NOT BETWEEN (rt0.c2) AND ('-1879330179'))))) ORDER BY (((((rt0.c1)AND(rt0.c0))))=(((~ (rt0.c1)))))  NULLS FIRST, (((((((((rt0.c2)AND(353643875)))OR(0.9143134086805677)))AND(rt0.c0)))OR(rt0.c0)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c2) NOT BETWEEN (rt0.c2) AND ('-1879330179'))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1)AND(rt0.c0))))=(((~ (rt0.c1)))))  NULLS FIRST, (((((((((rt0.c2)AND(353643875)))OR(0.9143134086805677)))AND(rt0.c0)))OR(rt0.c0)) IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c2) NOT BETWEEN (rt0.c2) AND ('-1879330179'))))) ORDER BY (((((rt0.c1)AND(rt0.c0))))=(((~ (rt0.c1)))))  NULLS FIRST, (((((((((rt0.c2)AND(353643875)))OR(0.9143134086805677)))AND(rt0.c0)))OR(rt0.c0)) IN ()) ASC  NULLS FIRST;
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON ((((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c2))) NOT NULL) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c2))) NOT NULL));
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON ((((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c2))) NOT NULL) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c2))) NOT NULL));
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON ((((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c2))) NOT NULL) WHERE (rt0.c2);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((x'')IS NOT(vt0.c0)))))) ORDER BY (((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, 9.43753491E8)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, x''))))AND((NOT ('237113593')))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)), ((vt0.c0)>>('0.0478698776470573')) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((x'')IS NOT(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, 9.43753491E8)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, x''))))AND((NOT ('237113593')))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)), ((vt0.c0)>>('0.0478698776470573')) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((x'')IS NOT(vt0.c0)))))) ORDER BY (((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, 9.43753491E8)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, x''))))AND((NOT ('237113593')))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)), ((vt0.c0)>>('0.0478698776470573')) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((x'')IS NOT(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, 9.43753491E8)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, x''))))AND((NOT ('237113593')))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)), ((vt0.c0)>>('0.0478698776470573')) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((x'')IS NOT(vt0.c0)))))) ORDER BY (((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, 9.43753491E8)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, x''))))AND((NOT ('237113593')))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)), ((vt0.c0)>>('0.0478698776470573')) DESC;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (3.53643875E8 COLLATE RTRIM) ORDER BY (('-1127531546')OR(vt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((3.53643875E8 COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (('-1127531546')OR(vt0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 WHERE (3.53643875E8 COLLATE RTRIM) ORDER BY (('-1127531546')OR(vt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((3.53643875E8 COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (('-1127531546')OR(vt0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 WHERE (3.53643875E8 COLLATE RTRIM) ORDER BY (('-1127531546')OR(vt0.c0)) COLLATE BINARY;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2 IN ()))LIKE(x'')));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))LIKE(x''))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2 IN ()))LIKE(x'')));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))LIKE(x''))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2 IN ()))LIKE(x'')));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((vt0.c0)<=(CAST('897362866' AS INTEGER))) WHERE (((((CAST(rt0.c3 AS REAL))OR(rt0.c1 COLLATE NOCASE)))OR((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c3 AS REAL))OR(rt0.c1 COLLATE NOCASE)))OR((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((vt0.c0)<=(CAST('897362866' AS INTEGER))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((vt0.c0)<=(CAST('897362866' AS INTEGER))) WHERE (((((CAST(rt0.c3 AS REAL))OR(rt0.c1 COLLATE NOCASE)))OR((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c3 AS REAL))OR(rt0.c1 COLLATE NOCASE)))OR((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((vt0.c0)<=(CAST('897362866' AS INTEGER))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((vt0.c0)<=(CAST('897362866' AS INTEGER))) WHERE (((((CAST(rt0.c3 AS REAL))OR(rt0.c1 COLLATE NOCASE)))OR((~ (vt0.c0)))));
SELECT * FROM rt0, vt0 WHERE (((rt0.c2 IN ()) IN ())) ORDER BY rt0.c3  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c3  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (((rt0.c2 IN ()) IN ())) ORDER BY rt0.c3  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c3  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (((rt0.c2 IN ()) IN ())) ORDER BY rt0.c3  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN (rt0.c1 IN ()) THEN json_patch(rt0.c3, '') ELSE ((vt0.c0) IS TRUE) END) ORDER BY rt0.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c1 IN ()) THEN json_patch(rt0.c3, '') ELSE ((vt0.c0) IS TRUE) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c2 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN (rt0.c1 IN ()) THEN json_patch(rt0.c3, '') ELSE ((vt0.c0) IS TRUE) END) ORDER BY rt0.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c1 IN ()) THEN json_patch(rt0.c3, '') ELSE ((vt0.c0) IS TRUE) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c2 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN (rt0.c1 IN ()) THEN json_patch(rt0.c3, '') ELSE ((vt0.c0) IS TRUE) END) ORDER BY rt0.c2 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON -173246968 WHERE (0.7903185176068395) ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.7903185176068395) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON -173246968 ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) AS NUMERIC) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON -173246968 WHERE (0.7903185176068395) ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.7903185176068395) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON -173246968 ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) AS NUMERIC) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON -173246968 WHERE (0.7903185176068395) ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) AS NUMERIC) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (x'');
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c3)>((vt0.c0 IN ())))) ORDER BY NULL, (rt0.c0 IN ((~ (rt0.c3)), ((0.333475321341422) BETWEEN (rt0.c3) AND (vt0.c0)))) ASC, json_patch(rt0.c1 COLLATE RTRIM, rt0.c1 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c3)>((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0 ORDER BY NULL, (rt0.c0 IN ((~ (rt0.c3)), ((0.333475321341422) BETWEEN (rt0.c3) AND (vt0.c0)))) ASC, json_patch(rt0.c1 COLLATE RTRIM, rt0.c1 COLLATE BINARY));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c3)>((vt0.c0 IN ())))) ORDER BY NULL, (rt0.c0 IN ((~ (rt0.c3)), ((0.333475321341422) BETWEEN (rt0.c3) AND (vt0.c0)))) ASC, json_patch(rt0.c1 COLLATE RTRIM, rt0.c1 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c3)>((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0 ORDER BY NULL, (rt0.c0 IN ((~ (rt0.c3)), ((0.333475321341422) BETWEEN (rt0.c3) AND (vt0.c0)))) ASC, json_patch(rt0.c1 COLLATE RTRIM, rt0.c1 COLLATE BINARY));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c3)>((vt0.c0 IN ())))) ORDER BY NULL, (rt0.c0 IN ((~ (rt0.c3)), ((0.333475321341422) BETWEEN (rt0.c3) AND (vt0.c0)))) ASC, json_patch(rt0.c1 COLLATE RTRIM, rt0.c1 COLLATE BINARY);
SELECT COUNT(*) FROM rt0 WHERE ((('') ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((('') ISNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((('') ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((('') ISNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((('') ISNULL));
SELECT ALL * FROM vt0, rt0 WHERE (json(((rt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((json(((rt0.c0) NOTNULL))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (json(((rt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((json(((rt0.c0) NOTNULL))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (json(((rt0.c0) NOTNULL)));
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON LAST_INSERT_ROWID() WHERE (TIME(LOWER(DISTINCT vt0.c0), (vt0.c0 IN (vt0.c0)), ((vt0.c0)>=(rt0.c1)), CASE WHEN rt0.c3 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c1 WHEN 'B\n' THEN rt0.c2 END, CAST('6Yfx,k{u' AS NUMERIC), '-1758483765', ((NULL)-(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((TIME(LOWER(DISTINCT vt0.c0), (vt0.c0 IN (vt0.c0)), ((vt0.c0)>=(rt0.c1)), CASE WHEN rt0.c3 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c1 WHEN 'B\n' THEN rt0.c2 END, CAST('6Yfx,k{u' AS NUMERIC), '-1758483765', ((NULL)-(rt0.c0)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON LAST_INSERT_ROWID());
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON LAST_INSERT_ROWID() WHERE (TIME(LOWER(DISTINCT vt0.c0), (vt0.c0 IN (vt0.c0)), ((vt0.c0)>=(rt0.c1)), CASE WHEN rt0.c3 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c1 WHEN 'B\n' THEN rt0.c2 END, CAST('6Yfx,k{u' AS NUMERIC), '-1758483765', ((NULL)-(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((TIME(LOWER(DISTINCT vt0.c0), (vt0.c0 IN (vt0.c0)), ((vt0.c0)>=(rt0.c1)), CASE WHEN rt0.c3 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c1 WHEN 'B\n' THEN rt0.c2 END, CAST('6Yfx,k{u' AS NUMERIC), '-1758483765', ((NULL)-(rt0.c0)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON LAST_INSERT_ROWID());
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON LAST_INSERT_ROWID() WHERE (TIME(LOWER(DISTINCT vt0.c0), (vt0.c0 IN (vt0.c0)), ((vt0.c0)>=(rt0.c1)), CASE WHEN rt0.c3 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c1 WHEN 'B\n' THEN rt0.c2 END, CAST('6Yfx,k{u' AS NUMERIC), '-1758483765', ((NULL)-(rt0.c0))));
SELECT ALL * FROM rt0 WHERE (CAST(HEX(rt0.c3) AS REAL)) ORDER BY CAST(CASE rt0.c3  WHEN rt0.c0 THEN 'FG<a,w0' END AS NUMERIC), rt0.c1 ASC, (((rt0.c3 IN (rt0.c3)))>=(rt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(HEX(rt0.c3) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY CAST(CASE rt0.c3  WHEN rt0.c0 THEN 'FG<a,w0' END AS NUMERIC), rt0.c1 ASC, (((rt0.c3 IN (rt0.c3)))>=(rt0.c1))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CAST(HEX(rt0.c3) AS REAL)) ORDER BY CAST(CASE rt0.c3  WHEN rt0.c0 THEN 'FG<a,w0' END AS NUMERIC), rt0.c1 ASC, (((rt0.c3 IN (rt0.c3)))>=(rt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(HEX(rt0.c3) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY CAST(CASE rt0.c3  WHEN rt0.c0 THEN 'FG<a,w0' END AS NUMERIC), rt0.c1 ASC, (((rt0.c3 IN (rt0.c3)))>=(rt0.c1))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CAST(HEX(rt0.c3) AS REAL)) ORDER BY CAST(CASE rt0.c3  WHEN rt0.c0 THEN 'FG<a,w0' END AS NUMERIC), rt0.c1 ASC, (((rt0.c3 IN (rt0.c3)))>=(rt0.c1))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c0)AND(rt0.c3))))) ORDER BY (((rt0.c3) IS TRUE) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c0)AND(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3) IS TRUE) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c0)AND(rt0.c3))))) ORDER BY (((rt0.c3) IS TRUE) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c0)AND(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3) IS TRUE) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c0)AND(rt0.c3))))) ORDER BY (((rt0.c3) IS TRUE) IN ())  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (rt0.c0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOT NULL) COLLATE NOCASE) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOT NULL) COLLATE NOCASE) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOT NULL) COLLATE NOCASE) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((+ (HEX(DISTINCT rt0.c0)))) ORDER BY ((LOWER(rt0.c3))<<(((-1829549679)IS(rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL (((+ (HEX(DISTINCT rt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((LOWER(rt0.c3))<<(((-1829549679)IS(rt0.c3)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((+ (HEX(DISTINCT rt0.c0)))) ORDER BY ((LOWER(rt0.c3))<<(((-1829549679)IS(rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL (((+ (HEX(DISTINCT rt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((LOWER(rt0.c3))<<(((-1829549679)IS(rt0.c3)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((+ (HEX(DISTINCT rt0.c0)))) ORDER BY ((LOWER(rt0.c3))<<(((-1829549679)IS(rt0.c3))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((- ((rt0.c3 IN ())))) ORDER BY (NOT ((('1108019655')GLOB(rt0.c3))))  NULLS LAST, CASE NULL  WHEN (rt0.c1 IN (rt0.c3)) THEN CASE WHEN NULL THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END ELSE ((((rt0.c0)AND(vt0.c0)))AND(rt0.c3)) END;
SELECT SUM(count) FROM (SELECT (((- ((rt0.c3 IN ())))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (NOT ((('1108019655')GLOB(rt0.c3))))  NULLS LAST, CASE NULL  WHEN (rt0.c1 IN (rt0.c3)) THEN CASE WHEN NULL THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END ELSE ((((rt0.c0)AND(vt0.c0)))AND(rt0.c3)) END);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((- ((rt0.c3 IN ())))) ORDER BY (NOT ((('1108019655')GLOB(rt0.c3))))  NULLS LAST, CASE NULL  WHEN (rt0.c1 IN (rt0.c3)) THEN CASE WHEN NULL THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END ELSE ((((rt0.c0)AND(vt0.c0)))AND(rt0.c3)) END;
SELECT SUM(count) FROM (SELECT (((- ((rt0.c3 IN ())))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (NOT ((('1108019655')GLOB(rt0.c3))))  NULLS LAST, CASE NULL  WHEN (rt0.c1 IN (rt0.c3)) THEN CASE WHEN NULL THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END ELSE ((((rt0.c0)AND(vt0.c0)))AND(rt0.c3)) END);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((- ((rt0.c3 IN ())))) ORDER BY (NOT ((('1108019655')GLOB(rt0.c3))))  NULLS LAST, CASE NULL  WHEN (rt0.c1 IN (rt0.c3)) THEN CASE WHEN NULL THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END ELSE ((((rt0.c0)AND(vt0.c0)))AND(rt0.c3)) END;
SELECT ALL * FROM rt0 WHERE ((((~ (rt0.c1)))IS NOT((rt0.c0 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1)))IS NOT((rt0.c0 IN (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((~ (rt0.c1)))IS NOT((rt0.c0 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1)))IS NOT((rt0.c0 IN (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((~ (rt0.c1)))IS NOT((rt0.c0 IN (rt0.c0)))));
SELECT * FROM vt0, rt0 WHERE (((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c1 ELSE vt0.c0 END)%(((rt0.c3)<<('Zu!7jf')))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c1 ELSE vt0.c0 END)%(((rt0.c3)<<('Zu!7jf'))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c1 ELSE vt0.c0 END)%(((rt0.c3)<<('Zu!7jf')))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c1 ELSE vt0.c0 END)%(((rt0.c3)<<('Zu!7jf'))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c1 ELSE vt0.c0 END)%(((rt0.c3)<<('Zu!7jf')))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT * FROM rt0 WHERE (((rt0.c1)*(rt0.c3)) COLLATE BINARY) ORDER BY ((((rt0.c1)OR(SQLITE_VERSION())))OR(LIKE(rt0.c3, rt0.c0, 'M')));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)*(rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)OR(SQLITE_VERSION())))OR(LIKE(rt0.c3, rt0.c0, 'M'))));
SELECT * FROM rt0 WHERE (((rt0.c1)*(rt0.c3)) COLLATE BINARY) ORDER BY ((((rt0.c1)OR(SQLITE_VERSION())))OR(LIKE(rt0.c3, rt0.c0, 'M')));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)*(rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)OR(SQLITE_VERSION())))OR(LIKE(rt0.c3, rt0.c0, 'M'))));
SELECT * FROM rt0 WHERE (((rt0.c1)*(rt0.c3)) COLLATE BINARY) ORDER BY ((((rt0.c1)OR(SQLITE_VERSION())))OR(LIKE(rt0.c3, rt0.c0, 'M')));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON CAST((rt0.c0 IN (rt0.c2)) AS INTEGER) WHERE (SUBSTR(rt0.c2 COLLATE BINARY, ((vt0.c0) ISNULL))) ORDER BY ((CAST(rt0.c2 AS NUMERIC)) BETWEEN (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))) AND (((vt0.c0)>=(rt0.c3)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((SUBSTR(rt0.c2 COLLATE BINARY, ((vt0.c0) ISNULL))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON CAST((rt0.c0 IN (rt0.c2)) AS INTEGER) ORDER BY ((CAST(rt0.c2 AS NUMERIC)) BETWEEN (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))) AND (((vt0.c0)>=(rt0.c3)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON CAST((rt0.c0 IN (rt0.c2)) AS INTEGER) WHERE (SUBSTR(rt0.c2 COLLATE BINARY, ((vt0.c0) ISNULL))) ORDER BY ((CAST(rt0.c2 AS NUMERIC)) BETWEEN (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))) AND (((vt0.c0)>=(rt0.c3)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((SUBSTR(rt0.c2 COLLATE BINARY, ((vt0.c0) ISNULL))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON CAST((rt0.c0 IN (rt0.c2)) AS INTEGER) ORDER BY ((CAST(rt0.c2 AS NUMERIC)) BETWEEN (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))) AND (((vt0.c0)>=(rt0.c3)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON CAST((rt0.c0 IN (rt0.c2)) AS INTEGER) WHERE (SUBSTR(rt0.c2 COLLATE BINARY, ((vt0.c0) ISNULL))) ORDER BY ((CAST(rt0.c2 AS NUMERIC)) BETWEEN (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))) AND (((vt0.c0)>=(rt0.c3)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2)) NOT BETWEEN (((('-513212316')IS(rt0.c2)))) AND ((CAST(rt0.c0 AS BLOB))))) ORDER BY ((rt0.c1 COLLATE BINARY)*((NOT (rt0.c1)))), rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN (((('-513212316')IS(rt0.c2)))) AND ((CAST(rt0.c0 AS BLOB))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c1 COLLATE BINARY)*((NOT (rt0.c1)))), rt0.c2 DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2)) NOT BETWEEN (((('-513212316')IS(rt0.c2)))) AND ((CAST(rt0.c0 AS BLOB))))) ORDER BY ((rt0.c1 COLLATE BINARY)*((NOT (rt0.c1)))), rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN (((('-513212316')IS(rt0.c2)))) AND ((CAST(rt0.c0 AS BLOB))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c1 COLLATE BINARY)*((NOT (rt0.c1)))), rt0.c2 DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2)) NOT BETWEEN (((('-513212316')IS(rt0.c2)))) AND ((CAST(rt0.c0 AS BLOB))))) ORDER BY ((rt0.c1 COLLATE BINARY)*((NOT (rt0.c1)))), rt0.c2 DESC;
SELECT * FROM rt0, vt0 WHERE ((((NULL)) BETWEEN (((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c3))))) AND (('1000909378'))));
SELECT SUM(count) FROM (SELECT (((((NULL)) BETWEEN (((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c3))))) AND (('1000909378')))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0);
SELECT * FROM rt0, vt0 WHERE ((((NULL)) BETWEEN (((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c3))))) AND (('1000909378'))));
SELECT SUM(count) FROM (SELECT (((((NULL)) BETWEEN (((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c3))))) AND (('1000909378')))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0);
SELECT * FROM rt0, vt0 WHERE ((((NULL)) BETWEEN (((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c3))))) AND (('1000909378'))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c3) NOTNULL)))<>((('237113593' IN ()))))) ORDER BY (- (NULLIF(DISTINCT rt0.c2, rt0.c1)))  NULLS LAST, ((((rt0.c2) IS TRUE))IS NOT(UNLIKELY(rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3) NOTNULL)))<>((('237113593' IN ()))))) IS TRUE)  as count FROM rt0 ORDER BY (- (NULLIF(DISTINCT rt0.c2, rt0.c1)))  NULLS LAST, ((((rt0.c2) IS TRUE))IS NOT(UNLIKELY(rt0.c3))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c3) NOTNULL)))<>((('237113593' IN ()))))) ORDER BY (- (NULLIF(DISTINCT rt0.c2, rt0.c1)))  NULLS LAST, ((((rt0.c2) IS TRUE))IS NOT(UNLIKELY(rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3) NOTNULL)))<>((('237113593' IN ()))))) IS TRUE)  as count FROM rt0 ORDER BY (- (NULLIF(DISTINCT rt0.c2, rt0.c1)))  NULLS LAST, ((((rt0.c2) IS TRUE))IS NOT(UNLIKELY(rt0.c3))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c3) NOTNULL)))<>((('237113593' IN ()))))) ORDER BY (- (NULLIF(DISTINCT rt0.c2, rt0.c1)))  NULLS LAST, ((((rt0.c2) IS TRUE))IS NOT(UNLIKELY(rt0.c3)));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((((((rt0.c0)AND(544487214)))OR(rt0.c0)))AND(0.9689914091570357)))OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c3)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c0)AND(544487214)))OR(rt0.c0)))AND(0.9689914091570357)))OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((((((rt0.c0)AND(544487214)))OR(rt0.c0)))AND(0.9689914091570357)))OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c3)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c0)AND(544487214)))OR(rt0.c0)))AND(0.9689914091570357)))OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((((((rt0.c0)AND(544487214)))OR(rt0.c0)))AND(0.9689914091570357)))OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c3)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (COALESCE('1691150722', rt0.c1, vt0.c0, rt0.c3) IN (((((vt0.c0)OR(vt0.c0)))OR(rt0.c0)))) WHERE (LIKELIHOOD(CAST(rt0.c0 AS NUMERIC), 0.9483152999942885)) ORDER BY CAST(((vt0.c0)-(rt0.c2)) AS REAL), (((((('-1995129557')IS(rt0.c3)))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND((~ (rt0.c1)))), rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(CAST(rt0.c0 AS NUMERIC), 0.9483152999942885)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (COALESCE('1691150722', rt0.c1, vt0.c0, rt0.c3) IN (((((vt0.c0)OR(vt0.c0)))OR(rt0.c0)))) ORDER BY CAST(((vt0.c0)-(rt0.c2)) AS REAL), (((((('-1995129557')IS(rt0.c3)))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND((~ (rt0.c1)))), rt0.c2 DESC);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (COALESCE('1691150722', rt0.c1, vt0.c0, rt0.c3) IN (((((vt0.c0)OR(vt0.c0)))OR(rt0.c0)))) WHERE (LIKELIHOOD(CAST(rt0.c0 AS NUMERIC), 0.9483152999942885)) ORDER BY CAST(((vt0.c0)-(rt0.c2)) AS REAL), (((((('-1995129557')IS(rt0.c3)))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND((~ (rt0.c1)))), rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(CAST(rt0.c0 AS NUMERIC), 0.9483152999942885)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (COALESCE('1691150722', rt0.c1, vt0.c0, rt0.c3) IN (((((vt0.c0)OR(vt0.c0)))OR(rt0.c0)))) ORDER BY CAST(((vt0.c0)-(rt0.c2)) AS REAL), (((((('-1995129557')IS(rt0.c3)))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND((~ (rt0.c1)))), rt0.c2 DESC);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (COALESCE('1691150722', rt0.c1, vt0.c0, rt0.c3) IN (((((vt0.c0)OR(vt0.c0)))OR(rt0.c0)))) WHERE (LIKELIHOOD(CAST(rt0.c0 AS NUMERIC), 0.9483152999942885)) ORDER BY CAST(((vt0.c0)-(rt0.c2)) AS REAL), (((((('-1995129557')IS(rt0.c3)))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND((~ (rt0.c1)))), rt0.c2 DESC;
SELECT ALL * FROM rt0, vt0 WHERE (((((((rt0.c3) NOT BETWEEN (x'7037') AND (vt0.c0)))OR(((rt0.c0)>(rt0.c3)))))AND((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3) NOT BETWEEN (x'7037') AND (vt0.c0)))OR(((rt0.c0)>(rt0.c3)))))AND((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((((rt0.c3) NOT BETWEEN (x'7037') AND (vt0.c0)))OR(((rt0.c0)>(rt0.c3)))))AND((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3) NOT BETWEEN (x'7037') AND (vt0.c0)))OR(((rt0.c0)>(rt0.c3)))))AND((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((((rt0.c3) NOT BETWEEN (x'7037') AND (vt0.c0)))OR(((rt0.c0)>(rt0.c3)))))AND((NOT (rt0.c1)))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON LOWER(CASE WHEN '800290282' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 END) WHERE (((((((rt0.c1)OR(vt0.c0)))AND(rt0.c3)))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(vt0.c0)))AND(rt0.c3)))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON LOWER(CASE WHEN '800290282' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 END));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON LOWER(CASE WHEN '800290282' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 END) WHERE (((((((rt0.c1)OR(vt0.c0)))AND(rt0.c3)))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(vt0.c0)))AND(rt0.c3)))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON LOWER(CASE WHEN '800290282' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 END));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON LOWER(CASE WHEN '800290282' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 END) WHERE (((((((rt0.c1)OR(vt0.c0)))AND(rt0.c3)))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL) ASC, HEX(((vt0.c0)>>(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL) ASC, HEX(((vt0.c0)>>(vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL) ASC, HEX(((vt0.c0)>>(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL) ASC, HEX(((vt0.c0)>>(vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL) ASC, HEX(((vt0.c0)>>(vt0.c0)));
SELECT * FROM rt0, vt0 WHERE ((~ (((((((((NULL)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c3))))) ORDER BY ((vt0.c0) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((((((NULL)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c3))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((vt0.c0) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END)));
SELECT * FROM rt0, vt0 WHERE ((~ (((((((((NULL)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c3))))) ORDER BY ((vt0.c0) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((((((NULL)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c3))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((vt0.c0) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END)));
SELECT * FROM rt0, vt0 WHERE ((~ (((((((((NULL)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c3))))) ORDER BY ((vt0.c0) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3) NOTNULL))&(((NULL)>(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOTNULL))&(((NULL)>(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3) NOTNULL))&(((NULL)>(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOTNULL))&(((NULL)>(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3) NOTNULL))&(((NULL)>(rt0.c0)))));
SELECT * FROM rt0 WHERE (ABS(((rt0.c1)LIKE(rt0.c2)))) ORDER BY rt0.c2 ASC, LIKELY(x''), ((((x'ec21')OR(rt0.c3)))AND(rt0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((ABS(((rt0.c1)LIKE(rt0.c2)))) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY rt0.c2 ASC, LIKELY(x''), ((((x'ec21')OR(rt0.c3)))AND(rt0.c0)) COLLATE NOCASE);
SELECT * FROM rt0 WHERE (ABS(((rt0.c1)LIKE(rt0.c2)))) ORDER BY rt0.c2 ASC, LIKELY(x''), ((((x'ec21')OR(rt0.c3)))AND(rt0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((ABS(((rt0.c1)LIKE(rt0.c2)))) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY rt0.c2 ASC, LIKELY(x''), ((((x'ec21')OR(rt0.c3)))AND(rt0.c0)) COLLATE NOCASE);
SELECT * FROM rt0 WHERE (ABS(((rt0.c1)LIKE(rt0.c2)))) ORDER BY rt0.c2 ASC, LIKELY(x''), ((((x'ec21')OR(rt0.c3)))AND(rt0.c0)) COLLATE NOCASE;
SELECT ALL * FROM vt0, rt0 WHERE ((((((NOT (-1127531546)))OR(CAST(rt0.c2 AS REAL))))AND(((rt0.c3) NOT BETWEEN (rt0.c2) AND (vt0.c0))))) ORDER BY (vt0.c0 IN (((rt0.c3) IS FALSE), rt0.c0 COLLATE NOCASE, ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (-1127531546)))OR(CAST(rt0.c2 AS REAL))))AND(((rt0.c3) NOT BETWEEN (rt0.c2) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (vt0.c0 IN (((rt0.c3) IS FALSE), rt0.c0 COLLATE NOCASE, ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) ASC);
SELECT ALL * FROM vt0, rt0 WHERE ((((((NOT (-1127531546)))OR(CAST(rt0.c2 AS REAL))))AND(((rt0.c3) NOT BETWEEN (rt0.c2) AND (vt0.c0))))) ORDER BY (vt0.c0 IN (((rt0.c3) IS FALSE), rt0.c0 COLLATE NOCASE, ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (-1127531546)))OR(CAST(rt0.c2 AS REAL))))AND(((rt0.c3) NOT BETWEEN (rt0.c2) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (vt0.c0 IN (((rt0.c3) IS FALSE), rt0.c0 COLLATE NOCASE, ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) ASC);
SELECT ALL * FROM vt0, rt0 WHERE ((((((NOT (-1127531546)))OR(CAST(rt0.c2 AS REAL))))AND(((rt0.c3) NOT BETWEEN (rt0.c2) AND (vt0.c0))))) ORDER BY (vt0.c0 IN (((rt0.c3) IS FALSE), rt0.c0 COLLATE NOCASE, ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) ASC;
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN rt0.c0 END)!=((((rt0.c0))<=((vt0.c0))))) WHERE ((((- (vt0.c0))) NOT NULL)) ORDER BY json_remove(((rt0.c3)/(rt0.c2)), vt0.c0 COLLATE NOCASE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN rt0.c0 END)<>((((rt0.c0))<=((vt0.c0))))) ORDER BY json_remove(((rt0.c3)/(rt0.c2)), vt0.c0 COLLATE NOCASE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN rt0.c0 END)!=((((rt0.c0))<=((vt0.c0))))) WHERE ((((- (vt0.c0))) NOT NULL)) ORDER BY json_remove(((rt0.c3)/(rt0.c2)), vt0.c0 COLLATE NOCASE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN rt0.c0 END)<>((((rt0.c0))<=((vt0.c0))))) ORDER BY json_remove(((rt0.c3)/(rt0.c2)), vt0.c0 COLLATE NOCASE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN rt0.c0 END)!=((((rt0.c0))<=((vt0.c0))))) WHERE ((((- (vt0.c0))) NOT NULL)) ORDER BY json_remove(((rt0.c3)/(rt0.c2)), vt0.c0 COLLATE NOCASE) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((x'')) AND (((~ (rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((x'')) AND (((~ (rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((x'')) AND (((~ (rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((x'')) AND (((~ (rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((x'')) AND (((~ (rt0.c3))))));
SELECT COUNT(*) FROM rt0 WHERE ((CASE WHEN '' THEN rt0.c1 ELSE rt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN '' THEN rt0.c1 ELSE rt0.c0 END IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((CASE WHEN '' THEN rt0.c1 ELSE rt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN '' THEN rt0.c1 ELSE rt0.c0 END IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((CASE WHEN '' THEN rt0.c1 ELSE rt0.c0 END IN ()));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c1 WHERE (CAST((rt0.c1 IN ()) AS BLOB)) ORDER BY ((((rt0.c3) IS FALSE)) BETWEEN ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0)))) AND (((rt0.c3)AND(rt0.c1)))) DESC, (('-1951801947')%(((rt0.c3) BETWEEN (x'') AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c1 IN ()) AS BLOB)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c1 ORDER BY ((((rt0.c3) IS FALSE)) BETWEEN ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0)))) AND (((rt0.c3)AND(rt0.c1)))) DESC, (('-1951801947')%(((rt0.c3) BETWEEN (x'') AND (rt0.c2)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c1 WHERE (CAST((rt0.c1 IN ()) AS BLOB)) ORDER BY ((((rt0.c3) IS FALSE)) BETWEEN ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0)))) AND (((rt0.c3)AND(rt0.c1)))) DESC, (('-1951801947')%(((rt0.c3) BETWEEN (x'') AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c1 IN ()) AS BLOB)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c1 ORDER BY ((((rt0.c3) IS FALSE)) BETWEEN ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0)))) AND (((rt0.c3)AND(rt0.c1)))) DESC, (('-1951801947')%(((rt0.c3) BETWEEN (x'') AND (rt0.c2)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c1 WHERE (CAST((rt0.c1 IN ()) AS BLOB)) ORDER BY ((((rt0.c3) IS FALSE)) BETWEEN ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0)))) AND (((rt0.c3)AND(rt0.c1)))) DESC, (('-1951801947')%(((rt0.c3) BETWEEN (x'') AND (rt0.c2))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CASE vt0.c0  WHEN rt0.c3 THEN 0.5548806833604446 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c2 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN rt0.c3 THEN 0.5548806833604446 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c2 END) IS TRUE)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CASE vt0.c0  WHEN rt0.c3 THEN 0.5548806833604446 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c2 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN rt0.c3 THEN 0.5548806833604446 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c2 END) IS TRUE)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CASE vt0.c0  WHEN rt0.c3 THEN 0.5548806833604446 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c2 END) IS TRUE));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((~ ((vt0.c0 IN (vt0.c0, rt0.c1))))) ORDER BY (NOT (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt0.c0 IN (vt0.c0, rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (NOT (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 END)) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((~ ((vt0.c0 IN (vt0.c0, rt0.c1))))) ORDER BY (NOT (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt0.c0 IN (vt0.c0, rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (NOT (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 END)) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((~ ((vt0.c0 IN (vt0.c0, rt0.c1))))) ORDER BY (NOT (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 END)) ASC;
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c0 COLLATE BINARY  WHEN rt0.c2 THEN ((((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)) WHEN (~ (rt0.c0)) THEN ((rt0.c0)LIKE(rt0.c1)) WHEN (rt0.c1 IN ()) THEN (((rt0.c3))=((rt0.c1))) ELSE ((rt0.c2)/(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c0 COLLATE BINARY  WHEN rt0.c2 THEN ((((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)) WHEN (~ (rt0.c0)) THEN ((rt0.c0)LIKE(rt0.c1)) WHEN (rt0.c1 IN ()) THEN (((rt0.c3))=((rt0.c1))) ELSE ((rt0.c2)/(rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c0 COLLATE BINARY  WHEN rt0.c2 THEN ((((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)) WHEN (~ (rt0.c0)) THEN ((rt0.c0)LIKE(rt0.c1)) WHEN (rt0.c1 IN ()) THEN (((rt0.c3))=((rt0.c1))) ELSE ((rt0.c2)/(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c0 COLLATE BINARY  WHEN rt0.c2 THEN ((((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)) WHEN (~ (rt0.c0)) THEN ((rt0.c0)LIKE(rt0.c1)) WHEN (rt0.c1 IN ()) THEN (((rt0.c3))=((rt0.c1))) ELSE ((rt0.c2)/(rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c0 COLLATE BINARY  WHEN rt0.c2 THEN ((((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)) WHEN (~ (rt0.c0)) THEN ((rt0.c0)LIKE(rt0.c1)) WHEN (rt0.c1 IN ()) THEN (((rt0.c3))=((rt0.c1))) ELSE ((rt0.c2)/(rt0.c2)) END);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c3))) ORDER BY ((((vt0.c0)>=(rt0.c3)))+(rt0.c3 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c3))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c0)>=(rt0.c3)))+(rt0.c3 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c3))) ORDER BY ((((vt0.c0)>=(rt0.c3)))+(rt0.c3 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c3))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c0)>=(rt0.c3)))+(rt0.c3 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c3))) ORDER BY ((((vt0.c0)>=(rt0.c3)))+(rt0.c3 COLLATE BINARY));
SELECT * FROM vt0, rt0 WHERE (((((((((((((rt0.c0)AND(CAST(rt0.c1 AS NUMERIC))))OR((~ (rt0.c2)))))AND((rt0.c0 IN ()))))OR(((rt0.c3) NOTNULL))))AND(vt0.c0 COLLATE BINARY)))AND(CAST(rt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c0)AND(CAST(rt0.c1 AS NUMERIC))))OR((~ (rt0.c2)))))AND((rt0.c0 IN ()))))OR(((rt0.c3) NOTNULL))))AND(vt0.c0 COLLATE BINARY)))AND(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((((((((((rt0.c0)AND(CAST(rt0.c1 AS NUMERIC))))OR((~ (rt0.c2)))))AND((rt0.c0 IN ()))))OR(((rt0.c3) NOTNULL))))AND(vt0.c0 COLLATE BINARY)))AND(CAST(rt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c0)AND(CAST(rt0.c1 AS NUMERIC))))OR((~ (rt0.c2)))))AND((rt0.c0 IN ()))))OR(((rt0.c3) NOTNULL))))AND(vt0.c0 COLLATE BINARY)))AND(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((((((((((rt0.c0)AND(CAST(rt0.c1 AS NUMERIC))))OR((~ (rt0.c2)))))AND((rt0.c0 IN ()))))OR(((rt0.c3) NOTNULL))))AND(vt0.c0 COLLATE BINARY)))AND(CAST(rt0.c1 AS BLOB))));
SELECT * FROM vt0, rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN (CASE WHEN '-379486188' THEN vt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN (CASE WHEN '-379486188' THEN vt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN (CASE WHEN '-379486188' THEN vt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN (CASE WHEN '-379486188' THEN vt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN (CASE WHEN '-379486188' THEN vt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS FALSE))+(((((vt0.c0)OR(vt0.c0)))AND('-1951801947')))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE))+(((((vt0.c0)OR(vt0.c0)))AND('-1951801947'))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS FALSE))+(((((vt0.c0)OR(vt0.c0)))AND('-1951801947')))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE))+(((((vt0.c0)OR(vt0.c0)))AND('-1951801947'))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS FALSE))+(((((vt0.c0)OR(vt0.c0)))AND('-1951801947')))));
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (((TRIM(vt0.c0))|((NOT (rt0.c3))))) ORDER BY (((rt0.c1, vt0.c0, rt0.c1)) NOT BETWEEN (((rt0.c3 IN ()), LOWER(rt0.c3), ((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) AND ((CAST(0.38151352314359044 AS TEXT), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN x'' WHEN rt0.c2 THEN rt0.c0 END, ((vt0.c0) BETWEEN (rt0.c2) AND (vt0.c0))))) ASC  NULLS LAST, ((((((((((rt0.c3)OR(rt0.c1)))AND(rt0.c1)))OR(1160437843)))OR(rt0.c1))) BETWEEN ((('\gSB,*W^<')==(rt0.c2))) AND (rt0.c0)), rt0.c2;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(vt0.c0))|((NOT (rt0.c3))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY (((rt0.c1, vt0.c0, rt0.c1)) NOT BETWEEN (((rt0.c3 IN ()), LOWER(rt0.c3), ((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) AND ((CAST(0.38151352314359044 AS TEXT), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN x'' WHEN rt0.c2 THEN rt0.c0 END, ((vt0.c0) BETWEEN (rt0.c2) AND (vt0.c0))))) ASC  NULLS LAST, ((((((((((rt0.c3)OR(rt0.c1)))AND(rt0.c1)))OR(1160437843)))OR(rt0.c1))) BETWEEN ((('\gSB,*W^<')=(rt0.c2))) AND (rt0.c0)), rt0.c2);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (((TRIM(vt0.c0))|((NOT (rt0.c3))))) ORDER BY (((rt0.c1, vt0.c0, rt0.c1)) NOT BETWEEN (((rt0.c3 IN ()), LOWER(rt0.c3), ((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) AND ((CAST(0.38151352314359044 AS TEXT), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN x'' WHEN rt0.c2 THEN rt0.c0 END, ((vt0.c0) BETWEEN (rt0.c2) AND (vt0.c0))))) ASC  NULLS LAST, ((((((((((rt0.c3)OR(rt0.c1)))AND(rt0.c1)))OR(1160437843)))OR(rt0.c1))) BETWEEN ((('\gSB,*W^<')==(rt0.c2))) AND (rt0.c0)), rt0.c2;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(vt0.c0))|((NOT (rt0.c3))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY (((rt0.c1, vt0.c0, rt0.c1)) NOT BETWEEN (((rt0.c3 IN ()), LOWER(rt0.c3), ((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) AND ((CAST(0.38151352314359044 AS TEXT), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN x'' WHEN rt0.c2 THEN rt0.c0 END, ((vt0.c0) BETWEEN (rt0.c2) AND (vt0.c0))))) ASC  NULLS LAST, ((((((((((rt0.c3)OR(rt0.c1)))AND(rt0.c1)))OR(1160437843)))OR(rt0.c1))) BETWEEN ((('\gSB,*W^<')=(rt0.c2))) AND (rt0.c0)), rt0.c2);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (((TRIM(vt0.c0))|((NOT (rt0.c3))))) ORDER BY (((rt0.c1, vt0.c0, rt0.c1)) NOT BETWEEN (((rt0.c3 IN ()), LOWER(rt0.c3), ((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) AND ((CAST(0.38151352314359044 AS TEXT), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN x'' WHEN rt0.c2 THEN rt0.c0 END, ((vt0.c0) BETWEEN (rt0.c2) AND (vt0.c0))))) ASC  NULLS LAST, ((((((((((rt0.c3)OR(rt0.c1)))AND(rt0.c1)))OR(1160437843)))OR(rt0.c1))) BETWEEN ((('\gSB,*W^<')==(rt0.c2))) AND (rt0.c0)), rt0.c2;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c0) ORDER BY ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN 'djJXoQî¡,' WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c3 END)&(CAST(-904351406 AS BLOB))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN 'djJXoQî¡,' WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c3 END)&(CAST(-904351406 AS BLOB))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c0) ORDER BY ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN 'djJXoQî¡,' WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c3 END)&(CAST(-904351406 AS BLOB))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN 'djJXoQî¡,' WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c3 END)&(CAST(-904351406 AS BLOB))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c0) ORDER BY ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN 'djJXoQî¡,' WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c3 END)&(CAST(-904351406 AS BLOB))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c0 IN ()) IN ()) WHERE (UPPER(DISTINCT (~ (vt0.c0)))) ORDER BY ((rt0.c1 IN ()) IN ()), ((((rt0.c3) ISNULL))>>(LIKELIHOOD(rt0.c3, 0.7232762058549702))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT (~ (vt0.c0)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c0 IN ()) IN ()) ORDER BY ((rt0.c1 IN ()) IN ()), ((((rt0.c3) ISNULL))>>(LIKELIHOOD(rt0.c3, 0.7232762058549702))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c0 IN ()) IN ()) WHERE (UPPER(DISTINCT (~ (vt0.c0)))) ORDER BY ((rt0.c1 IN ()) IN ()), ((((rt0.c3) ISNULL))>>(LIKELIHOOD(rt0.c3, 0.7232762058549702))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT (~ (vt0.c0)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c0 IN ()) IN ()) ORDER BY ((rt0.c1 IN ()) IN ()), ((((rt0.c3) ISNULL))>>(LIKELIHOOD(rt0.c3, 0.7232762058549702))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c0 IN ()) IN ()) WHERE (UPPER(DISTINCT (~ (vt0.c0)))) ORDER BY ((rt0.c1 IN ()) IN ()), ((((rt0.c3) ISNULL))>>(LIKELIHOOD(rt0.c3, 0.7232762058549702))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2)))=((- (vt0.c0)))) WHERE ((NOT (NULL COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (NULL COLLATE NOCASE))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2)))==((- (vt0.c0)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2)))=((- (vt0.c0)))) WHERE ((NOT (NULL COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (NULL COLLATE NOCASE))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2)))==((- (vt0.c0)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2)))=((- (vt0.c0)))) WHERE ((NOT (NULL COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY HEX(DISTINCT ((rt0.c1)<=(rt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY HEX(DISTINCT ((rt0.c1)<=(rt0.c1))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY HEX(DISTINCT ((rt0.c1)<=(rt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY HEX(DISTINCT ((rt0.c1)<=(rt0.c1))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY HEX(DISTINCT ((rt0.c1)<=(rt0.c1))) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)GLOB('1165814491'))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((CASE WHEN x'eeba' THEN vt0.c0 WHEN x'bd10' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT NULL) DESC, CASE (((vt0.c0))>((vt0.c0)))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN TYPEOF(DISTINCT vt0.c0) END ASC, (((((((((((vt0.c0))<((0.333475321341422))))AND(vt0.c0)))OR(vt0.c0)))OR((+ (vt0.c0)))))OR(UNLIKELY(x'32da')));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)GLOB('1165814491'))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN x'eeba' THEN vt0.c0 WHEN x'bd10' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT NULL) DESC, CASE (((vt0.c0))>((vt0.c0)))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN TYPEOF(DISTINCT vt0.c0) END ASC, (((((((((((vt0.c0))<((0.333475321341422))))AND(vt0.c0)))OR(vt0.c0)))OR((+ (vt0.c0)))))OR(UNLIKELY(x'32da'))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)GLOB('1165814491'))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((CASE WHEN x'eeba' THEN vt0.c0 WHEN x'bd10' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT NULL) DESC, CASE (((vt0.c0))>((vt0.c0)))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN TYPEOF(DISTINCT vt0.c0) END ASC, (((((((((((vt0.c0))<((0.333475321341422))))AND(vt0.c0)))OR(vt0.c0)))OR((+ (vt0.c0)))))OR(UNLIKELY(x'32da')));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)GLOB('1165814491'))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN x'eeba' THEN vt0.c0 WHEN x'bd10' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT NULL) DESC, CASE (((vt0.c0))>((vt0.c0)))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN TYPEOF(DISTINCT vt0.c0) END ASC, (((((((((((vt0.c0))<((0.333475321341422))))AND(vt0.c0)))OR(vt0.c0)))OR((+ (vt0.c0)))))OR(UNLIKELY(x'32da'))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)GLOB('1165814491'))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((CASE WHEN x'eeba' THEN vt0.c0 WHEN x'bd10' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT NULL) DESC, CASE (((vt0.c0))>((vt0.c0)))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN TYPEOF(DISTINCT vt0.c0) END ASC, (((((((((((vt0.c0))<((0.333475321341422))))AND(vt0.c0)))OR(vt0.c0)))OR((+ (vt0.c0)))))OR(UNLIKELY(x'32da')));
SELECT * FROM rt0, vt0 WHERE (('-1132912993' IN ()));
SELECT SUM(count) FROM (SELECT ((('-1132912993' IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (('-1132912993' IN ()));
SELECT SUM(count) FROM (SELECT ((('-1132912993' IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (('-1132912993' IN ()));
SELECT ALL * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (NULL);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON 0x163095aa WHERE ((((((vt0.c0, vt0.c0, rt0.c1, NULL, rt0.c0)) BETWEEN ((rt0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c2)) AND ((vt0.c0, -1752464342, rt0.c1, vt0.c0, rt0.c3)))) NOT NULL)) ORDER BY ((((rt0.c3)IS(vt0.c0))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, rt0.c1, NULL, rt0.c0)) BETWEEN ((rt0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c2)) AND ((vt0.c0, -1752464342, rt0.c1, vt0.c0, rt0.c3)))) NOT NULL)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON 0x163095aa ORDER BY ((((rt0.c3)IS(vt0.c0))) NOT NULL) ASC  NULLS LAST);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON 0x163095aa WHERE ((((((vt0.c0, vt0.c0, rt0.c1, NULL, rt0.c0)) BETWEEN ((rt0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c2)) AND ((vt0.c0, -1752464342, rt0.c1, vt0.c0, rt0.c3)))) NOT NULL)) ORDER BY ((((rt0.c3)IS(vt0.c0))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, rt0.c1, NULL, rt0.c0)) BETWEEN ((rt0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c2)) AND ((vt0.c0, -1752464342, rt0.c1, vt0.c0, rt0.c3)))) NOT NULL)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON 0x163095aa ORDER BY ((((rt0.c3)IS(vt0.c0))) NOT NULL) ASC  NULLS LAST);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON 0x163095aa WHERE ((((((vt0.c0, vt0.c0, rt0.c1, NULL, rt0.c0)) BETWEEN ((rt0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c2)) AND ((vt0.c0, -1752464342, rt0.c1, vt0.c0, rt0.c3)))) NOT NULL)) ORDER BY ((((rt0.c3)IS(vt0.c0))) NOT NULL) ASC  NULLS LAST;
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON (- (UPPER(rt0.c3))) WHERE (CASE CASE WHEN rt0.c0 THEN rt0.c1 END  WHEN ((rt0.c3)-(rt0.c0)) THEN ((rt0.c2)|(rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt0.c0 THEN rt0.c1 END  WHEN ((rt0.c3)-(rt0.c0)) THEN ((rt0.c2)|(rt0.c3)) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (- (UPPER(rt0.c3))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON (- (UPPER(rt0.c3))) WHERE (CASE CASE WHEN rt0.c0 THEN rt0.c1 END  WHEN ((rt0.c3)-(rt0.c0)) THEN ((rt0.c2)|(rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt0.c0 THEN rt0.c1 END  WHEN ((rt0.c3)-(rt0.c0)) THEN ((rt0.c2)|(rt0.c3)) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (- (UPPER(rt0.c3))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON (- (UPPER(rt0.c3))) WHERE (CASE CASE WHEN rt0.c0 THEN rt0.c1 END  WHEN ((rt0.c3)-(rt0.c0)) THEN ((rt0.c2)|(rt0.c3)) END);
SELECT ALL * FROM vt0 WHERE ((~ ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ('42299547' IN (CASE vt0.c0  WHEN vt0.c0 THEN '-1127531546' WHEN vt0.c0 THEN vt0.c0 WHEN x'4c38' THEN vt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ('42299547' IN (CASE vt0.c0  WHEN vt0.c0 THEN '-1127531546' WHEN vt0.c0 THEN vt0.c0 WHEN x'4c38' THEN vt0.c0 END))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((~ ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ('42299547' IN (CASE vt0.c0  WHEN vt0.c0 THEN '-1127531546' WHEN vt0.c0 THEN vt0.c0 WHEN x'4c38' THEN vt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ('42299547' IN (CASE vt0.c0  WHEN vt0.c0 THEN '-1127531546' WHEN vt0.c0 THEN vt0.c0 WHEN x'4c38' THEN vt0.c0 END))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((~ ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ('42299547' IN (CASE vt0.c0  WHEN vt0.c0 THEN '-1127531546' WHEN vt0.c0 THEN vt0.c0 WHEN x'4c38' THEN vt0.c0 END))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD(vt0.c0, 0.16472364909996795)) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)&((vt0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(vt0.c0, 0.16472364909996795)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)&((vt0.c0 IN ()))) DESC);
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD(vt0.c0, 0.16472364909996795)) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)&((vt0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(vt0.c0, 0.16472364909996795)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)&((vt0.c0 IN ()))) DESC);
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD(vt0.c0, 0.16472364909996795)) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)&((vt0.c0 IN ()))) DESC;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c0)OR(vt0.c0)))AND(rt0.c1))) NOT NULL) WHERE (((((((((((rt0.c0)OR(vt0.c0)))AND(rt0.c3)))AND(vt0.c0)))OR(rt0.c0)))+('1782991735'))) ORDER BY ((rt0.c0) IS FALSE) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)OR(vt0.c0)))AND(rt0.c3)))AND(vt0.c0)))OR(rt0.c0)))+('1782991735'))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c0)OR(vt0.c0)))AND(rt0.c1))) NOT NULL) ORDER BY ((rt0.c0) IS FALSE) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c0)OR(vt0.c0)))AND(rt0.c1))) NOT NULL) WHERE (((((((((((rt0.c0)OR(vt0.c0)))AND(rt0.c3)))AND(vt0.c0)))OR(rt0.c0)))+('1782991735'))) ORDER BY ((rt0.c0) IS FALSE) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)OR(vt0.c0)))AND(rt0.c3)))AND(vt0.c0)))OR(rt0.c0)))+('1782991735'))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c0)OR(vt0.c0)))AND(rt0.c1))) NOT NULL) ORDER BY ((rt0.c0) IS FALSE) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c0)OR(vt0.c0)))AND(rt0.c1))) NOT NULL) WHERE (((((((((((rt0.c0)OR(vt0.c0)))AND(rt0.c3)))AND(vt0.c0)))OR(rt0.c0)))+('1782991735'))) ORDER BY ((rt0.c0) IS FALSE) COLLATE NOCASE  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c3)))OR(vt0.c0))))<>((load_extension(rt0.c2, rt0.c3))))) ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c0) IS FALSE))) AND ((rt0.c0))), ((((rt0.c1) NOT NULL))==((((rt0.c0))<((rt0.c3))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c3)))OR(vt0.c0))))<>((load_extension(rt0.c2, rt0.c3))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c0) IS FALSE))) AND ((rt0.c0))), ((((rt0.c1) NOT NULL))==((((rt0.c0))<((rt0.c3))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c3)))OR(vt0.c0))))<>((load_extension(rt0.c2, rt0.c3))))) ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c0) IS FALSE))) AND ((rt0.c0))), ((((rt0.c1) NOT NULL))==((((rt0.c0))<((rt0.c3))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c3)))OR(vt0.c0))))<>((load_extension(rt0.c2, rt0.c3))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c0) IS FALSE))) AND ((rt0.c0))), ((((rt0.c1) NOT NULL))==((((rt0.c0))<((rt0.c3))))) DESC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (CASE WHEN LOWER(vt0.c0) THEN CAST(rt0.c3 AS TEXT) ELSE LIKELY(rt0.c0) END) ORDER BY ((((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c1))) NOTNULL) DESC  NULLS LAST, (((rt0.c0 IN ())) NOT BETWEEN (CASE WHEN rt0.c1 THEN x'' ELSE vt0.c0 END) AND ((NOT (rt0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN LOWER(vt0.c0) THEN CAST(rt0.c3 AS TEXT) ELSE LIKELY(rt0.c0) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c1))) NOTNULL) DESC  NULLS LAST, (((rt0.c0 IN ())) NOT BETWEEN (CASE WHEN rt0.c1 THEN x'' ELSE vt0.c0 END) AND ((NOT (rt0.c3)))) ASC);
SELECT * FROM vt0, rt0 WHERE (CASE WHEN LOWER(vt0.c0) THEN CAST(rt0.c3 AS TEXT) ELSE LIKELY(rt0.c0) END) ORDER BY ((((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c1))) NOTNULL) DESC  NULLS LAST, (((rt0.c0 IN ())) NOT BETWEEN (CASE WHEN rt0.c1 THEN x'' ELSE vt0.c0 END) AND ((NOT (rt0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN LOWER(vt0.c0) THEN CAST(rt0.c3 AS TEXT) ELSE LIKELY(rt0.c0) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c1))) NOTNULL) DESC  NULLS LAST, (((rt0.c0 IN ())) NOT BETWEEN (CASE WHEN rt0.c1 THEN x'' ELSE vt0.c0 END) AND ((NOT (rt0.c3)))) ASC);
SELECT * FROM vt0, rt0 WHERE (CASE WHEN LOWER(vt0.c0) THEN CAST(rt0.c3 AS TEXT) ELSE LIKELY(rt0.c0) END) ORDER BY ((((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c1))) NOTNULL) DESC  NULLS LAST, (((rt0.c0 IN ())) NOT BETWEEN (CASE WHEN rt0.c1 THEN x'' ELSE vt0.c0 END) AND ((NOT (rt0.c3)))) ASC;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)IS(x'')))<((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3)))))) ORDER BY (CAST(rt0.c3 AS INTEGER) IN ()), CAST((((rt0.c0))!=((rt0.c2))) AS REAL)  NULLS LAST, ((((((((TRIM(DISTINCT rt0.c1, rt0.c0))AND(('' IN ()))))AND((((rt0.c2))>=((rt0.c1))))))OR(((rt0.c0)LIKE(rt0.c2)))))OR(((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)IS(x'')))<((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c3 AS INTEGER) IN ()), CAST((((rt0.c0))!=((rt0.c2))) AS REAL)  NULLS LAST, ((((((((TRIM(DISTINCT rt0.c1, rt0.c0))AND(('' IN ()))))AND((((rt0.c2))>=((rt0.c1))))))OR(((rt0.c0)LIKE(rt0.c2)))))OR(((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c1)))) DESC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)IS(x'')))<((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3)))))) ORDER BY (CAST(rt0.c3 AS INTEGER) IN ()), CAST((((rt0.c0))!=((rt0.c2))) AS REAL)  NULLS LAST, ((((((((TRIM(DISTINCT rt0.c1, rt0.c0))AND(('' IN ()))))AND((((rt0.c2))>=((rt0.c1))))))OR(((rt0.c0)LIKE(rt0.c2)))))OR(((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)IS(x'')))<((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c3 AS INTEGER) IN ()), CAST((((rt0.c0))!=((rt0.c2))) AS REAL)  NULLS LAST, ((((((((TRIM(DISTINCT rt0.c1, rt0.c0))AND(('' IN ()))))AND((((rt0.c2))>=((rt0.c1))))))OR(((rt0.c0)LIKE(rt0.c2)))))OR(((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c1)))) DESC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)IS(x'')))<((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3)))))) ORDER BY (CAST(rt0.c3 AS INTEGER) IN ()), CAST((((rt0.c0))!=((rt0.c2))) AS REAL)  NULLS LAST, ((((((((TRIM(DISTINCT rt0.c1, rt0.c0))AND(('' IN ()))))AND((((rt0.c2))>=((rt0.c1))))))OR(((rt0.c0)LIKE(rt0.c2)))))OR(((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c1)))) DESC;
SELECT ALL * FROM vt0, rt0 WHERE (LIKELIHOOD(rt0.c0, 0.940985123657035));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(rt0.c0, 0.940985123657035)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (LIKELIHOOD(rt0.c0, 0.940985123657035));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(rt0.c0, 0.940985123657035)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (LIKELIHOOD(rt0.c0, 0.940985123657035));
SELECT * FROM vt0 CROSS JOIN rt0 ON ((((((((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))AND('1303016270')))AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c1)))OR(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1)))))AND((((rt0.c2))<((rt0.c3))))) WHERE ((+ (HEX(DISTINCT rt0.c0))));
SELECT SUM(count) FROM (SELECT (((+ (HEX(DISTINCT rt0.c0)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((((((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))AND('1303016270')))AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c1)))OR(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1)))))AND((((rt0.c2))<((rt0.c3))))));
SELECT * FROM vt0 CROSS JOIN rt0 ON ((((((((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))AND('1303016270')))AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c1)))OR(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1)))))AND((((rt0.c2))<((rt0.c3))))) WHERE ((+ (HEX(DISTINCT rt0.c0))));
SELECT SUM(count) FROM (SELECT (((+ (HEX(DISTINCT rt0.c0)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((((((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))AND('1303016270')))AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c1)))OR(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1)))))AND((((rt0.c2))<((rt0.c3))))));
SELECT * FROM vt0 CROSS JOIN rt0 ON ((((((((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))AND('1303016270')))AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c1)))OR(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1)))))AND((((rt0.c2))<((rt0.c3))))) WHERE ((+ (HEX(DISTINCT rt0.c0))));
SELECT * FROM rt0, vt0 WHERE (((((+ (rt0.c2)), (rt0.c2 IN ()), CASE vt0.c0  WHEN rt0.c0 THEN rt0.c1 END))=(((NOT (rt0.c1)), LIKELIHOOD(DISTINCT rt0.c0, 0.5731920713223644), ((rt0.c2) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL ((((((+ (rt0.c2)), (rt0.c2 IN ()), CASE vt0.c0  WHEN rt0.c0 THEN rt0.c1 END))==(((NOT (rt0.c1)), LIKELIHOOD(DISTINCT rt0.c0, 0.5731920713223644), ((rt0.c2) IS TRUE))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((+ (rt0.c2)), (rt0.c2 IN ()), CASE vt0.c0  WHEN rt0.c0 THEN rt0.c1 END))=(((NOT (rt0.c1)), LIKELIHOOD(DISTINCT rt0.c0, 0.5731920713223644), ((rt0.c2) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL ((((((+ (rt0.c2)), (rt0.c2 IN ()), CASE vt0.c0  WHEN rt0.c0 THEN rt0.c1 END))==(((NOT (rt0.c1)), LIKELIHOOD(DISTINCT rt0.c0, 0.5731920713223644), ((rt0.c2) IS TRUE))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((+ (rt0.c2)), (rt0.c2 IN ()), CASE vt0.c0  WHEN rt0.c0 THEN rt0.c1 END))=(((NOT (rt0.c1)), LIKELIHOOD(DISTINCT rt0.c0, 0.5731920713223644), ((rt0.c2) IS TRUE)))));
SELECT ALL * FROM vt0, rt0 WHERE (((((((((((rt0.c1)AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))<(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))<(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((((((((rt0.c1)AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))<(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))<(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((((((((rt0.c1)AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))<(((vt0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((+ (rt0.c3)))GLOB((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c3)))GLOB((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((+ (rt0.c3)))GLOB((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c3)))GLOB((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((+ (rt0.c3)))GLOB((rt0.c1 IN ()))));
SELECT COUNT(*) FROM vt0 NOT INDEXED, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0 NOT INDEXED, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0 NOT INDEXED, rt0 WHERE (rt0.c0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0 COLLATE NOCASE, (~ (rt0.c2)), ((rt0.c0)>>(rt0.c0))))>=((((x'')>=(rt0.c1)), CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 END, rt0.c1 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 COLLATE NOCASE, (~ (rt0.c2)), ((rt0.c0)>>(rt0.c0))))>=((((x'')>=(rt0.c1)), CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 END, rt0.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0 COLLATE NOCASE, (~ (rt0.c2)), ((rt0.c0)>>(rt0.c0))))>=((((x'')>=(rt0.c1)), CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 END, rt0.c1 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 COLLATE NOCASE, (~ (rt0.c2)), ((rt0.c0)>>(rt0.c0))))>=((((x'')>=(rt0.c1)), CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 END, rt0.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0 COLLATE NOCASE, (~ (rt0.c2)), ((rt0.c0)>>(rt0.c0))))>=((((x'')>=(rt0.c1)), CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 END, rt0.c1 COLLATE NOCASE))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2)))>=(((rt0.c0)LIKE(rt0.c2))))) ORDER BY ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 END) ISNULL);
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2)))>=(((rt0.c0)LIKE(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 END) ISNULL));
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2)))>=(((rt0.c0)LIKE(rt0.c2))))) ORDER BY ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 END) ISNULL);
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2)))>=(((rt0.c0)LIKE(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 END) ISNULL));
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2)))>=(((rt0.c0)LIKE(rt0.c2))))) ORDER BY ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 END) ISNULL);
SELECT * FROM rt0 WHERE ((((rt0.c2) NOTNULL) IN ())) ORDER BY CAST(((((((((rt0.c2)OR(NULL)))AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c2)) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) NOTNULL) IN ())) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((((((rt0.c2)OR(NULL)))AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c2)) AS BLOB) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((rt0.c2) NOTNULL) IN ())) ORDER BY CAST(((((((((rt0.c2)OR(NULL)))AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c2)) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) NOTNULL) IN ())) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((((((rt0.c2)OR(NULL)))AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c2)) AS BLOB) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((rt0.c2) NOTNULL) IN ())) ORDER BY CAST(((((((((rt0.c2)OR(NULL)))AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c2)) AS BLOB) ASC  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE (CASE 0.013203387785477694  WHEN LIKELY('1094987920') THEN NULL ELSE (rt0.c2 IN ()) END) ORDER BY ((rt0.c2)AND(rt0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE 0.013203387785477694  WHEN LIKELY('1094987920') THEN NULL ELSE (rt0.c2 IN ()) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c2)AND(rt0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (CASE 0.013203387785477694  WHEN LIKELY('1094987920') THEN NULL ELSE (rt0.c2 IN ()) END) ORDER BY ((rt0.c2)AND(rt0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE 0.013203387785477694  WHEN LIKELY('1094987920') THEN NULL ELSE (rt0.c2 IN ()) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c2)AND(rt0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (CASE 0.013203387785477694  WHEN LIKELY('1094987920') THEN NULL ELSE (rt0.c2 IN ()) END) ORDER BY ((rt0.c2)AND(rt0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT * FROM rt0 CROSS JOIN vt0 ON '' WHERE ((- (rt0.c1 COLLATE RTRIM))) ORDER BY CASE (((rt0.c3))<((rt0.c0)))  WHEN (- (rt0.c1)) THEN ((rt0.c1)+(vt0.c0)) ELSE ((rt0.c0)-(vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON '' ORDER BY CASE (((rt0.c3))<((rt0.c0)))  WHEN (- (rt0.c1)) THEN ((rt0.c1)+(vt0.c0)) ELSE ((rt0.c0)-(vt0.c0)) END  NULLS LAST);
SELECT * FROM rt0 CROSS JOIN vt0 ON '' WHERE ((- (rt0.c1 COLLATE RTRIM))) ORDER BY CASE (((rt0.c3))<((rt0.c0)))  WHEN (- (rt0.c1)) THEN ((rt0.c1)+(vt0.c0)) ELSE ((rt0.c0)-(vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON '' ORDER BY CASE (((rt0.c3))<((rt0.c0)))  WHEN (- (rt0.c1)) THEN ((rt0.c1)+(vt0.c0)) ELSE ((rt0.c0)-(vt0.c0)) END  NULLS LAST);
SELECT * FROM rt0 CROSS JOIN vt0 ON '' WHERE ((- (rt0.c1 COLLATE RTRIM))) ORDER BY CASE (((rt0.c3))<((rt0.c0)))  WHEN (- (rt0.c1)) THEN ((rt0.c1)+(vt0.c0)) ELSE ((rt0.c0)-(vt0.c0)) END  NULLS LAST;
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON rt0.c3 WHERE (CAST(((rt0.c1)GLOB(rt0.c3)) AS TEXT)) ORDER BY ((((rt0.c3) NOT NULL)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1)GLOB(rt0.c3)) AS TEXT)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON rt0.c3 ORDER BY ((((rt0.c3) NOT NULL)) NOT NULL)  NULLS FIRST);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON rt0.c3 WHERE (CAST(((rt0.c1)GLOB(rt0.c3)) AS TEXT)) ORDER BY ((((rt0.c3) NOT NULL)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1)GLOB(rt0.c3)) AS TEXT)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON rt0.c3 ORDER BY ((((rt0.c3) NOT NULL)) NOT NULL)  NULLS FIRST);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON rt0.c3 WHERE (CAST(((rt0.c1)GLOB(rt0.c3)) AS TEXT)) ORDER BY ((((rt0.c3) NOT NULL)) NOT NULL)  NULLS FIRST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON CASE (((rt0.c1, vt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c1)) AND ((vt0.c0, vt0.c0, rt0.c0)))  WHEN rt0.c0 COLLATE NOCASE THEN ((0.20148338781334563) IS FALSE) ELSE CAST(vt0.c0 AS BLOB) END WHERE ((((vt0.c0, (~ (rt0.c0)), ''))<((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c3 WHEN 0.38687136937359423 THEN rt0.c0 WHEN '75253177' THEN vt0.c0 ELSE vt0.c0 END, (rt0.c1 IN ()), ((vt0.c0)&(rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, (~ (rt0.c0)), ''))<((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c3 WHEN 0.38687136937359423 THEN rt0.c0 WHEN '75253177' THEN vt0.c0 ELSE vt0.c0 END, (rt0.c1 IN ()), ((vt0.c0)&(rt0.c3)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CASE (((rt0.c1, vt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c1)) AND ((vt0.c0, vt0.c0, rt0.c0)))  WHEN rt0.c0 COLLATE NOCASE THEN ((0.20148338781334563) IS FALSE) ELSE CAST(vt0.c0 AS BLOB) END);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON CASE (((rt0.c1, vt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c1)) AND ((vt0.c0, vt0.c0, rt0.c0)))  WHEN rt0.c0 COLLATE NOCASE THEN ((0.20148338781334563) IS FALSE) ELSE CAST(vt0.c0 AS BLOB) END WHERE ((((vt0.c0, (~ (rt0.c0)), ''))<((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c3 WHEN 0.38687136937359423 THEN rt0.c0 WHEN '75253177' THEN vt0.c0 ELSE vt0.c0 END, (rt0.c1 IN ()), ((vt0.c0)&(rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, (~ (rt0.c0)), ''))<((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c3 WHEN 0.38687136937359423 THEN rt0.c0 WHEN '75253177' THEN vt0.c0 ELSE vt0.c0 END, (rt0.c1 IN ()), ((vt0.c0)&(rt0.c3)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CASE (((rt0.c1, vt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c1)) AND ((vt0.c0, vt0.c0, rt0.c0)))  WHEN rt0.c0 COLLATE NOCASE THEN ((0.20148338781334563) IS FALSE) ELSE CAST(vt0.c0 AS BLOB) END);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON CASE (((rt0.c1, vt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c1)) AND ((vt0.c0, vt0.c0, rt0.c0)))  WHEN rt0.c0 COLLATE NOCASE THEN ((0.20148338781334563) IS FALSE) ELSE CAST(vt0.c0 AS BLOB) END WHERE ((((vt0.c0, (~ (rt0.c0)), ''))<((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c3 WHEN 0.38687136937359423 THEN rt0.c0 WHEN '75253177' THEN vt0.c0 ELSE vt0.c0 END, (rt0.c1 IN ()), ((vt0.c0)&(rt0.c3))))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((('2Mc9W!8')AND((((rt0.c1, rt0.c3, 0.25481225548697917))>((rt0.c1, rt0.c0, x'')))))) ORDER BY CASE (((rt0.c1))>=((rt0.c0)))  WHEN LIKELY(DISTINCT rt0.c3) THEN rt0.c2 COLLATE BINARY ELSE (- (rt0.c3)) END ASC;
SELECT SUM(count) FROM (SELECT (((('2Mc9W!8')AND((((rt0.c1, rt0.c3, 0.25481225548697917))>((rt0.c1, rt0.c0, x'')))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE (((rt0.c1))>=((rt0.c0)))  WHEN LIKELY(DISTINCT rt0.c3) THEN rt0.c2 COLLATE BINARY ELSE (- (rt0.c3)) END ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((('2Mc9W!8')AND((((rt0.c1, rt0.c3, 0.25481225548697917))>((rt0.c1, rt0.c0, x'')))))) ORDER BY CASE (((rt0.c1))>=((rt0.c0)))  WHEN LIKELY(DISTINCT rt0.c3) THEN rt0.c2 COLLATE BINARY ELSE (- (rt0.c3)) END ASC;
SELECT SUM(count) FROM (SELECT (((('2Mc9W!8')AND((((rt0.c1, rt0.c3, 0.25481225548697917))>((rt0.c1, rt0.c0, x'')))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE (((rt0.c1))>=((rt0.c0)))  WHEN LIKELY(DISTINCT rt0.c3) THEN rt0.c2 COLLATE BINARY ELSE (- (rt0.c3)) END ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((('2Mc9W!8')AND((((rt0.c1, rt0.c3, 0.25481225548697917))>((rt0.c1, rt0.c0, x'')))))) ORDER BY CASE (((rt0.c1))>=((rt0.c0)))  WHEN LIKELY(DISTINCT rt0.c3) THEN rt0.c2 COLLATE BINARY ELSE (- (rt0.c3)) END ASC;
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN CAST(vt0.c0 AS TEXT) THEN CAST(rt0.c3 AS REAL) WHEN (vt0.c0 IN ()) THEN ((rt0.c2)GLOB(rt0.c1)) WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)) THEN (- (rt0.c0)) WHEN ((rt0.c3)<(x'')) THEN ((rt0.c2)IS(vt0.c0)) WHEN ((vt0.c0)IS NOT(NULL)) THEN (rt0.c1 IN ()) ELSE ((((rt0.c0)AND('0.8836333383695452')))AND(rt0.c1)) END) ORDER BY ((TRIM(rt0.c3, rt0.c1))<<(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c3 END)), CASE WHEN CAST(vt0.c0 AS REAL) THEN (rt0.c3 IN ()) END ASC, (NOT (((vt0.c0)AND(rt0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c0 AS TEXT) THEN CAST(rt0.c3 AS REAL) WHEN (vt0.c0 IN ()) THEN ((rt0.c2)GLOB(rt0.c1)) WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)) THEN (- (rt0.c0)) WHEN ((rt0.c3)<(x'')) THEN ((rt0.c2)IS(vt0.c0)) WHEN ((vt0.c0)IS NOT(NULL)) THEN (rt0.c1 IN ()) ELSE ((((rt0.c0)AND('0.8836333383695452')))AND(rt0.c1)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((TRIM(rt0.c3, rt0.c1))<<(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c3 END)), CASE WHEN CAST(vt0.c0 AS REAL) THEN (rt0.c3 IN ()) END ASC, (NOT (((vt0.c0)AND(rt0.c3))))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN CAST(vt0.c0 AS TEXT) THEN CAST(rt0.c3 AS REAL) WHEN (vt0.c0 IN ()) THEN ((rt0.c2)GLOB(rt0.c1)) WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)) THEN (- (rt0.c0)) WHEN ((rt0.c3)<(x'')) THEN ((rt0.c2)IS(vt0.c0)) WHEN ((vt0.c0)IS NOT(NULL)) THEN (rt0.c1 IN ()) ELSE ((((rt0.c0)AND('0.8836333383695452')))AND(rt0.c1)) END) ORDER BY ((TRIM(rt0.c3, rt0.c1))<<(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c3 END)), CASE WHEN CAST(vt0.c0 AS REAL) THEN (rt0.c3 IN ()) END ASC, (NOT (((vt0.c0)AND(rt0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c0 AS TEXT) THEN CAST(rt0.c3 AS REAL) WHEN (vt0.c0 IN ()) THEN ((rt0.c2)GLOB(rt0.c1)) WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)) THEN (- (rt0.c0)) WHEN ((rt0.c3)<(x'')) THEN ((rt0.c2)IS(vt0.c0)) WHEN ((vt0.c0)IS NOT(NULL)) THEN (rt0.c1 IN ()) ELSE ((((rt0.c0)AND('0.8836333383695452')))AND(rt0.c1)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((TRIM(rt0.c3, rt0.c1))<<(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c3 END)), CASE WHEN CAST(vt0.c0 AS REAL) THEN (rt0.c3 IN ()) END ASC, (NOT (((vt0.c0)AND(rt0.c3))))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN CAST(vt0.c0 AS TEXT) THEN CAST(rt0.c3 AS REAL) WHEN (vt0.c0 IN ()) THEN ((rt0.c2)GLOB(rt0.c1)) WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)) THEN (- (rt0.c0)) WHEN ((rt0.c3)<(x'')) THEN ((rt0.c2)IS(vt0.c0)) WHEN ((vt0.c0)IS NOT(NULL)) THEN (rt0.c1 IN ()) ELSE ((((rt0.c0)AND('0.8836333383695452')))AND(rt0.c1)) END) ORDER BY ((TRIM(rt0.c3, rt0.c1))<<(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c3 END)), CASE WHEN CAST(vt0.c0 AS REAL) THEN (rt0.c3 IN ()) END ASC, (NOT (((vt0.c0)AND(rt0.c3))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((SQLITE_VERSION()))!=((vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((SQLITE_VERSION()))<>((vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((SQLITE_VERSION()))!=((vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((SQLITE_VERSION()))<>((vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((SQLITE_VERSION()))!=((vt0.c0))));
SELECT * FROM rt0, vt0 WHERE (rt0.c0) ORDER BY x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY x'' DESC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (rt0.c0) ORDER BY x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY x'' DESC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (rt0.c0) ORDER BY x'' DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0)||(vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)||(vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0)||(vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)||(vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0)||(vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((- (rt0.c2)))OR((((rt0.c1))<=((rt0.c2))))) WHERE (((((x'') BETWEEN (rt0.c1) AND (rt0.c3)))=(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((x'') BETWEEN (rt0.c1) AND (rt0.c3)))==(vt0.c0))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((- (rt0.c2)))OR((((rt0.c1))<=((rt0.c2))))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((- (rt0.c2)))OR((((rt0.c1))<=((rt0.c2))))) WHERE (((((x'') BETWEEN (rt0.c1) AND (rt0.c3)))=(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((x'') BETWEEN (rt0.c1) AND (rt0.c3)))==(vt0.c0))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((- (rt0.c2)))OR((((rt0.c1))<=((rt0.c2))))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((- (rt0.c2)))OR((((rt0.c1))<=((rt0.c2))))) WHERE (((((x'') BETWEEN (rt0.c1) AND (rt0.c3)))=(vt0.c0)));
SELECT * FROM rt0 WHERE (0.9261321218771585);
SELECT SUM(count) FROM (SELECT ((0.9261321218771585) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (0.9261321218771585);
SELECT SUM(count) FROM (SELECT ((0.9261321218771585) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (0.9261321218771585);
SELECT * FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END)<=((~ (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END)<=((~ (rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END)<=((~ (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END)<=((~ (rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END)<=((~ (rt0.c3)))));
SELECT COUNT(*) FROM vt0 WHERE (((((((((UPPER(DISTINCT vt0.c0))AND(vt0.c0 COLLATE BINARY)))AND((vt0.c0 IN ()))))OR(((vt0.c0) NOT NULL))))AND(-1.752464342E9))) ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), NULL ASC, vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((UPPER(DISTINCT vt0.c0))AND(vt0.c0 COLLATE BINARY)))AND((vt0.c0 IN ()))))OR(((vt0.c0) NOT NULL))))AND(-1.752464342E9))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), NULL ASC, vt0.c0 ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((((((UPPER(DISTINCT vt0.c0))AND(vt0.c0 COLLATE BINARY)))AND((vt0.c0 IN ()))))OR(((vt0.c0) NOT NULL))))AND(-1.752464342E9))) ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), NULL ASC, vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((UPPER(DISTINCT vt0.c0))AND(vt0.c0 COLLATE BINARY)))AND((vt0.c0 IN ()))))OR(((vt0.c0) NOT NULL))))AND(-1.752464342E9))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), NULL ASC, vt0.c0 ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((((((UPPER(DISTINCT vt0.c0))AND(vt0.c0 COLLATE BINARY)))AND((vt0.c0 IN ()))))OR(((vt0.c0) NOT NULL))))AND(-1.752464342E9))) ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), NULL ASC, vt0.c0 ASC;
SELECT * FROM rt0 WHERE ((0.5350277465527707 IN ()) COLLATE RTRIM) ORDER BY (((rt0.c0 IN (rt0.c1, rt0.c2, rt0.c0)))>=(rt0.c2));
SELECT SUM(count) FROM (SELECT ALL (((0.5350277465527707 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN (rt0.c1, rt0.c2, rt0.c0)))>=(rt0.c2)));
SELECT * FROM rt0 WHERE ((0.5350277465527707 IN ()) COLLATE RTRIM) ORDER BY (((rt0.c0 IN (rt0.c1, rt0.c2, rt0.c0)))>=(rt0.c2));
SELECT SUM(count) FROM (SELECT ALL (((0.5350277465527707 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN (rt0.c1, rt0.c2, rt0.c0)))>=(rt0.c2)));
SELECT * FROM rt0 WHERE ((0.5350277465527707 IN ()) COLLATE RTRIM) ORDER BY (((rt0.c0 IN (rt0.c1, rt0.c2, rt0.c0)))>=(rt0.c2));
SELECT * FROM rt0, vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (rt0.c0 IN ()) THEN rt0.c0 COLLATE RTRIM ELSE rt0.c3 END) ORDER BY (((+ (NULL)))OR((- (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (rt0.c0 IN ()) THEN rt0.c0 COLLATE RTRIM ELSE rt0.c3 END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((+ (NULL)))OR((- (rt0.c2)))));
SELECT * FROM rt0, vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (rt0.c0 IN ()) THEN rt0.c0 COLLATE RTRIM ELSE rt0.c3 END) ORDER BY (((+ (NULL)))OR((- (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (rt0.c0 IN ()) THEN rt0.c0 COLLATE RTRIM ELSE rt0.c3 END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((+ (NULL)))OR((- (rt0.c2)))));
SELECT * FROM rt0, vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (rt0.c0 IN ()) THEN rt0.c0 COLLATE RTRIM ELSE rt0.c3 END) ORDER BY (((+ (NULL)))OR((- (rt0.c2))));
SELECT ALL * FROM vt0, rt0 WHERE (CASE (((rt0.c2, rt0.c0, x'')) NOT BETWEEN ((vt0.c0, rt0.c2, rt0.c3)) AND ((rt0.c3, vt0.c0, rt0.c1)))  WHEN rt0.c3 COLLATE NOCASE THEN ((rt0.c2) NOTNULL) END) ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))OR((NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE (((rt0.c2, rt0.c0, x'')) NOT BETWEEN ((vt0.c0, rt0.c2, rt0.c3)) AND ((rt0.c3, vt0.c0, rt0.c1)))  WHEN rt0.c3 COLLATE NOCASE THEN ((rt0.c2) NOTNULL) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))OR((NOT (vt0.c0)))));
SELECT ALL * FROM vt0, rt0 WHERE (CASE (((rt0.c2, rt0.c0, x'')) NOT BETWEEN ((vt0.c0, rt0.c2, rt0.c3)) AND ((rt0.c3, vt0.c0, rt0.c1)))  WHEN rt0.c3 COLLATE NOCASE THEN ((rt0.c2) NOTNULL) END) ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))OR((NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE (((rt0.c2, rt0.c0, x'')) NOT BETWEEN ((vt0.c0, rt0.c2, rt0.c3)) AND ((rt0.c3, vt0.c0, rt0.c1)))  WHEN rt0.c3 COLLATE NOCASE THEN ((rt0.c2) NOTNULL) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))OR((NOT (vt0.c0)))));
SELECT ALL * FROM vt0, rt0 WHERE (CASE (((rt0.c2, rt0.c0, x'')) NOT BETWEEN ((vt0.c0, rt0.c2, rt0.c3)) AND ((rt0.c3, vt0.c0, rt0.c1)))  WHEN rt0.c3 COLLATE NOCASE THEN ((rt0.c2) NOTNULL) END) ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))OR((NOT (vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)<=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)<=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)<=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT * FROM vt0 WHERE (CASE ((vt0.c0)IS NOT(vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN -1.655577944E9 END) ORDER BY (((vt0.c0 IN (vt0.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)IS NOT(vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN -1.655577944E9 END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c0))) NOT NULL));
SELECT * FROM vt0 WHERE (CASE ((vt0.c0)IS NOT(vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN -1.655577944E9 END) ORDER BY (((vt0.c0 IN (vt0.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)IS NOT(vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN -1.655577944E9 END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c0))) NOT NULL));
SELECT * FROM vt0 WHERE (CASE ((vt0.c0)IS NOT(vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN -1.655577944E9 END) ORDER BY (((vt0.c0 IN (vt0.c0))) NOT NULL);
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON ((vt0.c0)>((rt0.c3 IN ()))) WHERE (((((((rt0.c3)AND(rt0.c0)))AND(NULL)))*(CASE WHEN rt0.c1 THEN NULL ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3)AND(rt0.c0)))AND(NULL)))*(CASE WHEN rt0.c1 THEN NULL ELSE rt0.c1 END))) IS TRUE)  as count FROM vt0 NOT INDEXED LEFT OUTER JOIN rt0 ON ((vt0.c0)>((rt0.c3 IN ()))));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON ((vt0.c0)>((rt0.c3 IN ()))) WHERE (((((((rt0.c3)AND(rt0.c0)))AND(NULL)))*(CASE WHEN rt0.c1 THEN NULL ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3)AND(rt0.c0)))AND(NULL)))*(CASE WHEN rt0.c1 THEN NULL ELSE rt0.c1 END))) IS TRUE)  as count FROM vt0 NOT INDEXED LEFT OUTER JOIN rt0 ON ((vt0.c0)>((rt0.c3 IN ()))));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON ((vt0.c0)>((rt0.c3 IN ()))) WHERE (((((((rt0.c3)AND(rt0.c0)))AND(NULL)))*(CASE WHEN rt0.c1 THEN NULL ELSE rt0.c1 END)));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON vt0.c0 WHERE (((rt0.c3 COLLATE RTRIM)<<(CAST(rt0.c3 AS NUMERIC)))) ORDER BY (rt0.c0 COLLATE RTRIM IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE RTRIM)<<(CAST(rt0.c3 AS NUMERIC)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON vt0.c0 ORDER BY (rt0.c0 COLLATE RTRIM IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON vt0.c0 WHERE (((rt0.c3 COLLATE RTRIM)<<(CAST(rt0.c3 AS NUMERIC)))) ORDER BY (rt0.c0 COLLATE RTRIM IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE RTRIM)<<(CAST(rt0.c3 AS NUMERIC)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON vt0.c0 ORDER BY (rt0.c0 COLLATE RTRIM IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON vt0.c0 WHERE (((rt0.c3 COLLATE RTRIM)<<(CAST(rt0.c3 AS NUMERIC)))) ORDER BY (rt0.c0 COLLATE RTRIM IN ()) ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((vt0.c0)|(rt0.c0)) AS INTEGER)) ORDER BY ((((vt0.c0)OR(rt0.c1))) NOT BETWEEN (LIKE(rt0.c3, vt0.c0, '6')) AND (CAST(rt0.c3 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)|(rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c0)OR(rt0.c1))) NOT BETWEEN (LIKE(rt0.c3, vt0.c0, '6')) AND (CAST(rt0.c3 AS TEXT))));
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((vt0.c0)|(rt0.c0)) AS INTEGER)) ORDER BY ((((vt0.c0)OR(rt0.c1))) NOT BETWEEN (LIKE(rt0.c3, vt0.c0, '6')) AND (CAST(rt0.c3 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)|(rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c0)OR(rt0.c1))) NOT BETWEEN (LIKE(rt0.c3, vt0.c0, '6')) AND (CAST(rt0.c3 AS TEXT))));
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((vt0.c0)|(rt0.c0)) AS INTEGER)) ORDER BY ((((vt0.c0)OR(rt0.c1))) NOT BETWEEN (LIKE(rt0.c3, vt0.c0, '6')) AND (CAST(rt0.c3 AS TEXT)));
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE ('-2078301315') ORDER BY ((SQLITE_VERSION()) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), ((((-2050763259) NOTNULL))*(((vt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT (('-2078301315') IS TRUE)  as count FROM vt0 ORDER BY ((SQLITE_VERSION()) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), ((((-2050763259) NOTNULL))*(((vt0.c0) IS FALSE))));
SELECT COUNT(*) FROM vt0 WHERE ('-2078301315') ORDER BY ((SQLITE_VERSION()) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), ((((-2050763259) NOTNULL))*(((vt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT (('-2078301315') IS TRUE)  as count FROM vt0 ORDER BY ((SQLITE_VERSION()) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), ((((-2050763259) NOTNULL))*(((vt0.c0) IS FALSE))));
SELECT COUNT(*) FROM vt0 WHERE ('-2078301315') ORDER BY ((SQLITE_VERSION()) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), ((((-2050763259) NOTNULL))*(((vt0.c0) IS FALSE)));
SELECT * FROM vt0, rt0 WHERE (json_quote(((rt0.c1)==(rt0.c1)))) ORDER BY ((((PRINTF(vt0.c0))OR(CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 END)))OR(((rt0.c3) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_quote(((rt0.c1)==(rt0.c1)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((PRINTF(vt0.c0))OR(CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 END)))OR(((rt0.c3) NOT NULL))) ASC);
SELECT * FROM vt0, rt0 WHERE (json_quote(((rt0.c1)==(rt0.c1)))) ORDER BY ((((PRINTF(vt0.c0))OR(CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 END)))OR(((rt0.c3) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_quote(((rt0.c1)==(rt0.c1)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((PRINTF(vt0.c0))OR(CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 END)))OR(((rt0.c3) NOT NULL))) ASC);
SELECT * FROM vt0, rt0 WHERE (json_quote(((rt0.c1)==(rt0.c1)))) ORDER BY ((((PRINTF(vt0.c0))OR(CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 END)))OR(((rt0.c3) NOT NULL))) ASC;
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c2  WHEN NULL THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN x'' ELSE rt0.c2 END) BETWEEN ((('') NOT BETWEEN (rt0.c3) AND (rt0.c1))) AND (((rt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN NULL THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN x'' ELSE rt0.c2 END) BETWEEN ((('') NOT BETWEEN (rt0.c3) AND (rt0.c1))) AND (((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c2  WHEN NULL THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN x'' ELSE rt0.c2 END) BETWEEN ((('') NOT BETWEEN (rt0.c3) AND (rt0.c1))) AND (((rt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN NULL THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN x'' ELSE rt0.c2 END) BETWEEN ((('') NOT BETWEEN (rt0.c3) AND (rt0.c1))) AND (((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c2  WHEN NULL THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN x'' ELSE rt0.c2 END) BETWEEN ((('') NOT BETWEEN (rt0.c3) AND (rt0.c1))) AND (((rt0.c1) NOTNULL))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((vt0.c0) BETWEEN (((vt0.c0) IS TRUE)) AND ((- (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (((vt0.c0) IS TRUE)) AND ((- (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((vt0.c0) BETWEEN (((vt0.c0) IS TRUE)) AND ((- (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (((vt0.c0) IS TRUE)) AND ((- (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((vt0.c0) BETWEEN (((vt0.c0) IS TRUE)) AND ((- (rt0.c1)))));
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c2)<(rt0.c1)) THEN (NOT (rt0.c2)) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) THEN TRIM(rt0.c3) WHEN (+ (rt0.c2)) THEN rt0.c0 COLLATE BINARY WHEN CAST(rt0.c3 AS BLOB) THEN TRIM(NULL) WHEN ((rt0.c0) BETWEEN (x'') AND (rt0.c0)) THEN (~ (rt0.c2)) WHEN (rt0.c1 IN ()) THEN ((rt0.c0)+(rt0.c0)) WHEN rt0.c1 THEN (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1))) ELSE QUOTE(rt0.c0) END) ORDER BY ((CASE rt0.c2  WHEN ']1]}h#7' THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)OR((- (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c2)<(rt0.c1)) THEN (NOT (rt0.c2)) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) THEN TRIM(rt0.c3) WHEN (+ (rt0.c2)) THEN rt0.c0 COLLATE BINARY WHEN CAST(rt0.c3 AS BLOB) THEN TRIM(NULL) WHEN ((rt0.c0) BETWEEN (x'') AND (rt0.c0)) THEN (~ (rt0.c2)) WHEN (rt0.c1 IN ()) THEN ((rt0.c0)+(rt0.c0)) WHEN rt0.c1 THEN (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1))) ELSE QUOTE(rt0.c0) END) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c2  WHEN ']1]}h#7' THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)OR((- (rt0.c1)))));
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c2)<(rt0.c1)) THEN (NOT (rt0.c2)) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) THEN TRIM(rt0.c3) WHEN (+ (rt0.c2)) THEN rt0.c0 COLLATE BINARY WHEN CAST(rt0.c3 AS BLOB) THEN TRIM(NULL) WHEN ((rt0.c0) BETWEEN (x'') AND (rt0.c0)) THEN (~ (rt0.c2)) WHEN (rt0.c1 IN ()) THEN ((rt0.c0)+(rt0.c0)) WHEN rt0.c1 THEN (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1))) ELSE QUOTE(rt0.c0) END) ORDER BY ((CASE rt0.c2  WHEN ']1]}h#7' THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)OR((- (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c2)<(rt0.c1)) THEN (NOT (rt0.c2)) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) THEN TRIM(rt0.c3) WHEN (+ (rt0.c2)) THEN rt0.c0 COLLATE BINARY WHEN CAST(rt0.c3 AS BLOB) THEN TRIM(NULL) WHEN ((rt0.c0) BETWEEN (x'') AND (rt0.c0)) THEN (~ (rt0.c2)) WHEN (rt0.c1 IN ()) THEN ((rt0.c0)+(rt0.c0)) WHEN rt0.c1 THEN (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1))) ELSE QUOTE(rt0.c0) END) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c2  WHEN ']1]}h#7' THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)OR((- (rt0.c1)))));
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c2)<(rt0.c1)) THEN (NOT (rt0.c2)) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) THEN TRIM(rt0.c3) WHEN (+ (rt0.c2)) THEN rt0.c0 COLLATE BINARY WHEN CAST(rt0.c3 AS BLOB) THEN TRIM(NULL) WHEN ((rt0.c0) BETWEEN (x'') AND (rt0.c0)) THEN (~ (rt0.c2)) WHEN (rt0.c1 IN ()) THEN ((rt0.c0)+(rt0.c0)) WHEN rt0.c1 THEN (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1))) ELSE QUOTE(rt0.c0) END) ORDER BY ((CASE rt0.c2  WHEN ']1]}h#7' THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)OR((- (rt0.c1))));
SELECT ALL * FROM vt0 WHERE ((((NOT (vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((NOT (vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((NOT (vt0.c0))) IS FALSE));
SELECT ALL * FROM rt0 WHERE (CAST(((0.03021659693820633)<<(rt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((0.03021659693820633)<<(rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((0.03021659693820633)<<(rt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((0.03021659693820633)<<(rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((0.03021659693820633)<<(rt0.c0)) AS BLOB));
SELECT ALL * FROM rt0, vt0 WHERE (((((((rt0.c2) ISNULL))AND('116004257')))AND(1.1634399948334817E-5)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2) ISNULL))AND('116004257')))AND(1.1634399948334817E-5))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((((rt0.c2) ISNULL))AND('116004257')))AND(1.1634399948334817E-5)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2) ISNULL))AND('116004257')))AND(1.1634399948334817E-5))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((((rt0.c2) ISNULL))AND('116004257')))AND(1.1634399948334817E-5)));
SELECT * FROM rt0, vt0 WHERE (CAST(rt0.c2 AS BLOB)) ORDER BY ((NULL COLLATE NOCASE) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3))) AND (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS BLOB)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((NULL COLLATE NOCASE) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3))) AND (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END)) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (CAST(rt0.c2 AS BLOB)) ORDER BY ((NULL COLLATE NOCASE) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3))) AND (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS BLOB)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((NULL COLLATE NOCASE) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3))) AND (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END)) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (CAST(rt0.c2 AS BLOB)) ORDER BY ((NULL COLLATE NOCASE) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3))) AND (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END)) ASC  NULLS FIRST;
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c1)>>(rt0.c3)) COLLATE BINARY WHERE (json_insert((rt0.c0 IN (rt0.c0)), rt0.c2, ((rt0.c3) NOT NULL))) ORDER BY ((((rt0.c2) NOT BETWEEN (0.5511119790405328) AND (rt0.c1))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_insert((rt0.c0 IN (rt0.c0)), rt0.c2, ((rt0.c3) NOT NULL))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c1)>>(rt0.c3)) COLLATE BINARY ORDER BY ((((rt0.c2) NOT BETWEEN (0.5511119790405328) AND (rt0.c1))) IS TRUE)  NULLS FIRST);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c1)>>(rt0.c3)) COLLATE BINARY WHERE (json_insert((rt0.c0 IN (rt0.c0)), rt0.c2, ((rt0.c3) NOT NULL))) ORDER BY ((((rt0.c2) NOT BETWEEN (0.5511119790405328) AND (rt0.c1))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_insert((rt0.c0 IN (rt0.c0)), rt0.c2, ((rt0.c3) NOT NULL))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c1)>>(rt0.c3)) COLLATE BINARY ORDER BY ((((rt0.c2) NOT BETWEEN (0.5511119790405328) AND (rt0.c1))) IS TRUE)  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (LOWER(rt0.c0)) ORDER BY UPPER(DISTINCT LIKELY(rt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((LOWER(rt0.c0)) IS TRUE)  as count FROM vt0, rt0 ORDER BY UPPER(DISTINCT LIKELY(rt0.c0)) ASC);
SELECT ALL * FROM vt0, rt0 WHERE (LOWER(rt0.c0)) ORDER BY UPPER(DISTINCT LIKELY(rt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((LOWER(rt0.c0)) IS TRUE)  as count FROM vt0, rt0 ORDER BY UPPER(DISTINCT LIKELY(rt0.c0)) ASC);
SELECT ALL * FROM vt0, rt0 WHERE (LOWER(rt0.c0)) ORDER BY UPPER(DISTINCT LIKELY(rt0.c0)) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))/(SQLITE_COMPILEOPTION_GET(vt0.c0)))) ORDER BY (NULL IN ()) DESC  NULLS FIRST, TRIM(DISTINCT ((vt0.c0) IS TRUE), ((vt0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))/(SQLITE_COMPILEOPTION_GET(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (NULL IN ()) DESC  NULLS FIRST, TRIM(DISTINCT ((vt0.c0) IS TRUE), ((vt0.c0) ISNULL)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))/(SQLITE_COMPILEOPTION_GET(vt0.c0)))) ORDER BY (NULL IN ()) DESC  NULLS FIRST, TRIM(DISTINCT ((vt0.c0) IS TRUE), ((vt0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))/(SQLITE_COMPILEOPTION_GET(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (NULL IN ()) DESC  NULLS FIRST, TRIM(DISTINCT ((vt0.c0) IS TRUE), ((vt0.c0) ISNULL)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))/(SQLITE_COMPILEOPTION_GET(vt0.c0)))) ORDER BY (NULL IN ()) DESC  NULLS FIRST, TRIM(DISTINCT ((vt0.c0) IS TRUE), ((vt0.c0) ISNULL));
SELECT * FROM vt0 WHERE (CAST((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0))) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0))) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))) AS BLOB));
SELECT * FROM vt0 WHERE (((vt0.c0)/(((vt0.c0)OR(vt0.c0))))) ORDER BY ((vt0.c0 COLLATE BINARY) NOT BETWEEN ((0.11303845461103257 IN (vt0.c0, vt0.c0))) AND (((vt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)/(((vt0.c0)OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY) NOT BETWEEN ((0.11303845461103257 IN (vt0.c0, vt0.c0))) AND (((vt0.c0) NOTNULL))));
SELECT * FROM vt0 WHERE (((vt0.c0)/(((vt0.c0)OR(vt0.c0))))) ORDER BY ((vt0.c0 COLLATE BINARY) NOT BETWEEN ((0.11303845461103257 IN (vt0.c0, vt0.c0))) AND (((vt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)/(((vt0.c0)OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY) NOT BETWEEN ((0.11303845461103257 IN (vt0.c0, vt0.c0))) AND (((vt0.c0) NOTNULL))));
SELECT * FROM vt0 WHERE (((vt0.c0)/(((vt0.c0)OR(vt0.c0))))) ORDER BY ((vt0.c0 COLLATE BINARY) NOT BETWEEN ((0.11303845461103257 IN (vt0.c0, vt0.c0))) AND (((vt0.c0) NOTNULL)));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c0) IS TRUE)) NOT BETWEEN ((((rt0.c0))=((vt0.c0)))) AND ((((rt0.c2, rt0.c2, rt0.c2))>((rt0.c1, rt0.c0, rt0.c3)))))) ORDER BY ((((((rt0.c0)AND(rt0.c0)))OR(0.48373574013153275))) NOT BETWEEN (INSTR(rt0.c0, rt0.c2)) AND ((NOT (rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS TRUE)) NOT BETWEEN ((((rt0.c0))=((vt0.c0)))) AND ((((rt0.c2, rt0.c2, rt0.c2))>((rt0.c1, rt0.c0, rt0.c3)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c0)AND(rt0.c0)))OR(0.48373574013153275))) NOT BETWEEN (INSTR(rt0.c0, rt0.c2)) AND ((NOT (rt0.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c0) IS TRUE)) NOT BETWEEN ((((rt0.c0))=((vt0.c0)))) AND ((((rt0.c2, rt0.c2, rt0.c2))>((rt0.c1, rt0.c0, rt0.c3)))))) ORDER BY ((((((rt0.c0)AND(rt0.c0)))OR(0.48373574013153275))) NOT BETWEEN (INSTR(rt0.c0, rt0.c2)) AND ((NOT (rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS TRUE)) NOT BETWEEN ((((rt0.c0))=((vt0.c0)))) AND ((((rt0.c2, rt0.c2, rt0.c2))>((rt0.c1, rt0.c0, rt0.c3)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c0)AND(rt0.c0)))OR(0.48373574013153275))) NOT BETWEEN (INSTR(rt0.c0, rt0.c2)) AND ((NOT (rt0.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c0) IS TRUE)) NOT BETWEEN ((((rt0.c0))=((vt0.c0)))) AND ((((rt0.c2, rt0.c2, rt0.c2))>((rt0.c1, rt0.c0, rt0.c3)))))) ORDER BY ((((((rt0.c0)AND(rt0.c0)))OR(0.48373574013153275))) NOT BETWEEN (INSTR(rt0.c0, rt0.c2)) AND ((NOT (rt0.c1)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 END AS INTEGER)) ORDER BY rt0.c0  NULLS LAST, (((RTRIM(rt0.c0)))!=((((rt0.c0) NOTNULL)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 END AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0  NULLS LAST, (((RTRIM(rt0.c0)))<>((((rt0.c0) NOTNULL)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 END AS INTEGER)) ORDER BY rt0.c0  NULLS LAST, (((RTRIM(rt0.c0)))!=((((rt0.c0) NOTNULL)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 END AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0  NULLS LAST, (((RTRIM(rt0.c0)))<>((((rt0.c0) NOTNULL)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 END AS INTEGER)) ORDER BY rt0.c0  NULLS LAST, (((RTRIM(rt0.c0)))!=((((rt0.c0) NOTNULL)))) ASC  NULLS FIRST;
SELECT * FROM vt0, rt0 WHERE (((vt0.c0 COLLATE RTRIM)>>(JULIANDAY(vt0.c0, rt0.c0, x'', rt0.c1, rt0.c0)))) ORDER BY (((((((rt0.c1))<((vt0.c0))))AND(((rt0.c2)>=(rt0.c2)))))OR((NOT (rt0.c2)))) ASC  NULLS FIRST, CASE WHEN ((rt0.c0)+(rt0.c0)) THEN ((((rt0.c2)OR(rt0.c0)))AND(NULL)) ELSE CAST('\nm' AS TEXT) END ASC, CAST(((rt0.c2)OR(rt0.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)>>(JULIANDAY(vt0.c0, rt0.c0, x'', rt0.c1, rt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((((rt0.c1))<((vt0.c0))))AND(((rt0.c2)>=(rt0.c2)))))OR((NOT (rt0.c2)))) ASC  NULLS FIRST, CASE WHEN ((rt0.c0)+(rt0.c0)) THEN ((((rt0.c2)OR(rt0.c0)))AND(NULL)) ELSE CAST('\nm' AS TEXT) END ASC, CAST(((rt0.c2)OR(rt0.c0)) AS TEXT)  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (((vt0.c0 COLLATE RTRIM)>>(JULIANDAY(vt0.c0, rt0.c0, x'', rt0.c1, rt0.c0)))) ORDER BY (((((((rt0.c1))<((vt0.c0))))AND(((rt0.c2)>=(rt0.c2)))))OR((NOT (rt0.c2)))) ASC  NULLS FIRST, CASE WHEN ((rt0.c0)+(rt0.c0)) THEN ((((rt0.c2)OR(rt0.c0)))AND(NULL)) ELSE CAST('\nm' AS TEXT) END ASC, CAST(((rt0.c2)OR(rt0.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)>>(JULIANDAY(vt0.c0, rt0.c0, x'', rt0.c1, rt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((((rt0.c1))<((vt0.c0))))AND(((rt0.c2)>=(rt0.c2)))))OR((NOT (rt0.c2)))) ASC  NULLS FIRST, CASE WHEN ((rt0.c0)+(rt0.c0)) THEN ((((rt0.c2)OR(rt0.c0)))AND(NULL)) ELSE CAST('\nm' AS TEXT) END ASC, CAST(((rt0.c2)OR(rt0.c0)) AS TEXT)  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (((vt0.c0 COLLATE RTRIM)>>(JULIANDAY(vt0.c0, rt0.c0, x'', rt0.c1, rt0.c0)))) ORDER BY (((((((rt0.c1))<((vt0.c0))))AND(((rt0.c2)>=(rt0.c2)))))OR((NOT (rt0.c2)))) ASC  NULLS FIRST, CASE WHEN ((rt0.c0)+(rt0.c0)) THEN ((((rt0.c2)OR(rt0.c0)))AND(NULL)) ELSE CAST('\nm' AS TEXT) END ASC, CAST(((rt0.c2)OR(rt0.c0)) AS TEXT)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c2)OR(rt0.c0)))AND(rt0.c3)))-(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c3)))-(rt0.c1))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c2)OR(rt0.c0)))AND(rt0.c3)))-(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c3)))-(rt0.c1))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c2)OR(rt0.c0)))AND(rt0.c3)))-(rt0.c1)));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON 0.8952376074923243 WHERE (CAST(TRIM(vt0.c0) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TRIM(vt0.c0) AS NUMERIC)) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON 0.8952376074923243);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON 0.8952376074923243 WHERE (CAST(TRIM(vt0.c0) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TRIM(vt0.c0) AS NUMERIC)) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON 0.8952376074923243);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON 0.8952376074923243 WHERE (CAST(TRIM(vt0.c0) AS NUMERIC));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))<=((vt0.c0)))) NOT NULL)) ORDER BY CASE vt0.c0 COLLATE RTRIM  WHEN (+ (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<=((vt0.c0)))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0 COLLATE RTRIM  WHEN (+ (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))<=((vt0.c0)))) NOT NULL)) ORDER BY CASE vt0.c0 COLLATE RTRIM  WHEN (+ (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<=((vt0.c0)))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0 COLLATE RTRIM  WHEN (+ (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))<=((vt0.c0)))) NOT NULL)) ORDER BY CASE vt0.c0 COLLATE RTRIM  WHEN (+ (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) ORDER BY CAST(((((0.5822190071330066)AND(0X41a71ad7)))AND(vt0.c0)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((0.5822190071330066)AND(0x41a71ad7)))AND(vt0.c0)) AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) ORDER BY CAST(((((0.5822190071330066)AND(0X41a71ad7)))AND(vt0.c0)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((0.5822190071330066)AND(0x41a71ad7)))AND(vt0.c0)) AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) ORDER BY CAST(((((0.5822190071330066)AND(0X41a71ad7)))AND(vt0.c0)) AS REAL)  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY '1831126770' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 ORDER BY '1831126770' DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY '1831126770' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 ORDER BY '1831126770' DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY '1831126770' DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL);
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c1)))OR(((NULL)IS(rt0.c1)))))OR((rt0.c1 IN ())))) ORDER BY CASE WHEN CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END THEN ((rt0.c2)==(rt0.c0)) END DESC  NULLS LAST, ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 END) BETWEEN (x'') AND (LAST_INSERT_ROWID()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c1)))OR(((NULL)IS(rt0.c1)))))OR((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END THEN ((rt0.c2)==(rt0.c0)) END DESC  NULLS LAST, ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 END) BETWEEN (x'') AND (LAST_INSERT_ROWID()))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c1)))OR(((NULL)IS(rt0.c1)))))OR((rt0.c1 IN ())))) ORDER BY CASE WHEN CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END THEN ((rt0.c2)==(rt0.c0)) END DESC  NULLS LAST, ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 END) BETWEEN (x'') AND (LAST_INSERT_ROWID()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c1)))OR(((NULL)IS(rt0.c1)))))OR((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END THEN ((rt0.c2)==(rt0.c0)) END DESC  NULLS LAST, ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 END) BETWEEN (x'') AND (LAST_INSERT_ROWID()))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c1)))OR(((NULL)IS(rt0.c1)))))OR((rt0.c1 IN ())))) ORDER BY CASE WHEN CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END THEN ((rt0.c2)==(rt0.c0)) END DESC  NULLS LAST, ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 END) BETWEEN (x'') AND (LAST_INSERT_ROWID()))  NULLS FIRST;
SELECT * FROM vt0 WHERE (LIKE(vt0.c0, vt0.c0) COLLATE NOCASE) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))=(((vt0.c0)>=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKE(vt0.c0, vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))=(((vt0.c0)>=(vt0.c0)))));
SELECT * FROM vt0 WHERE (LIKE(vt0.c0, vt0.c0) COLLATE NOCASE) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))=(((vt0.c0)>=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKE(vt0.c0, vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))=(((vt0.c0)>=(vt0.c0)))));
SELECT * FROM vt0 WHERE (LIKE(vt0.c0, vt0.c0) COLLATE NOCASE) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))=(((vt0.c0)>=(vt0.c0))));
SELECT * FROM rt0, vt0 WHERE ((((rt0.c2) NOT BETWEEN (x'') AND (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c2) NOT BETWEEN (x'') AND (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c2) NOT BETWEEN (x'') AND (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c2) NOT BETWEEN (x'') AND (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c2) NOT BETWEEN (x'') AND (rt0.c2)) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)==(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)==(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)==(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)==(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)==(vt0.c0))) IS FALSE));
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((x'0b07836b') BETWEEN (vt0.c0) AND (rt0.c3)) THEN ((rt0.c3) ISNULL) WHEN (((rt0.c2))>((rt0.c0))) THEN CASE WHEN rt0.c2 THEN rt0.c2 END WHEN rt0.c3 THEN ((((rt0.c0)OR(rt0.c0)))OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((x'0b07836b') BETWEEN (vt0.c0) AND (rt0.c3)) THEN ((rt0.c3) ISNULL) WHEN (((rt0.c2))>((rt0.c0))) THEN CASE WHEN rt0.c2 THEN rt0.c2 END WHEN rt0.c3 THEN ((((rt0.c0)OR(rt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((x'0b07836b') BETWEEN (vt0.c0) AND (rt0.c3)) THEN ((rt0.c3) ISNULL) WHEN (((rt0.c2))>((rt0.c0))) THEN CASE WHEN rt0.c2 THEN rt0.c2 END WHEN rt0.c3 THEN ((((rt0.c0)OR(rt0.c0)))OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((x'0b07836b') BETWEEN (vt0.c0) AND (rt0.c3)) THEN ((rt0.c3) ISNULL) WHEN (((rt0.c2))>((rt0.c0))) THEN CASE WHEN rt0.c2 THEN rt0.c2 END WHEN rt0.c3 THEN ((((rt0.c0)OR(rt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((x'0b07836b') BETWEEN (vt0.c0) AND (rt0.c3)) THEN ((rt0.c3) ISNULL) WHEN (((rt0.c2))>((rt0.c0))) THEN CASE WHEN rt0.c2 THEN rt0.c2 END WHEN rt0.c3 THEN ((((rt0.c0)OR(rt0.c0)))OR(vt0.c0)) END);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)>(vt0.c0)) IN ())) ORDER BY CAST(vt0.c0 AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)>(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS BLOB)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)>(vt0.c0)) IN ())) ORDER BY CAST(vt0.c0 AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)>(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS BLOB)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)>(vt0.c0)) IN ())) ORDER BY CAST(vt0.c0 AS BLOB)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))>>((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((x'', vt0.c0, vt0.c0)))))) ORDER BY (- (0.6944364371668188))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER))>>((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((x'', vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (- (0.6944364371668188))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))>>((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((x'', vt0.c0, vt0.c0)))))) ORDER BY (- (0.6944364371668188))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER))>>((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((x'', vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (- (0.6944364371668188))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))>>((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((x'', vt0.c0, vt0.c0)))))) ORDER BY (- (0.6944364371668188))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0)<>(vt0.c0))))) ORDER BY (((x''))=((vt0.c0 COLLATE NOCASE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)!=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((x''))=((vt0.c0 COLLATE NOCASE)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0)<>(vt0.c0))))) ORDER BY (((x''))=((vt0.c0 COLLATE NOCASE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)!=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((x''))=((vt0.c0 COLLATE NOCASE)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0)<>(vt0.c0))))) ORDER BY (((x''))=((vt0.c0 COLLATE NOCASE)))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((LOWER(rt0.c0)) BETWEEN (UPPER(rt0.c0)) AND (CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END))) ORDER BY CASE WHEN ((rt0.c2) NOT NULL) THEN (+ (rt0.c2)) WHEN rt0.c2 COLLATE BINARY THEN rt0.c1 COLLATE RTRIM WHEN (NOT (rt0.c2)) THEN rt0.c0 END, ((((rt0.c3, rt0.c2, rt0.c0)) BETWEEN ((rt0.c3, 0.44386904098454116, rt0.c0)) AND ((rt0.c2, rt0.c3, rt0.c2))) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(rt0.c0)) BETWEEN (UPPER(rt0.c0)) AND (CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c2) NOT NULL) THEN (+ (rt0.c2)) WHEN rt0.c2 COLLATE BINARY THEN rt0.c1 COLLATE RTRIM WHEN (NOT (rt0.c2)) THEN rt0.c0 END, ((((rt0.c3, rt0.c2, rt0.c0)) BETWEEN ((rt0.c3, 0.44386904098454116, rt0.c0)) AND ((rt0.c2, rt0.c3, rt0.c2))) IN ()));
SELECT ALL * FROM rt0 WHERE (((LOWER(rt0.c0)) BETWEEN (UPPER(rt0.c0)) AND (CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END))) ORDER BY CASE WHEN ((rt0.c2) NOT NULL) THEN (+ (rt0.c2)) WHEN rt0.c2 COLLATE BINARY THEN rt0.c1 COLLATE RTRIM WHEN (NOT (rt0.c2)) THEN rt0.c0 END, ((((rt0.c3, rt0.c2, rt0.c0)) BETWEEN ((rt0.c3, 0.44386904098454116, rt0.c0)) AND ((rt0.c2, rt0.c3, rt0.c2))) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(rt0.c0)) BETWEEN (UPPER(rt0.c0)) AND (CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c2) NOT NULL) THEN (+ (rt0.c2)) WHEN rt0.c2 COLLATE BINARY THEN rt0.c1 COLLATE RTRIM WHEN (NOT (rt0.c2)) THEN rt0.c0 END, ((((rt0.c3, rt0.c2, rt0.c0)) BETWEEN ((rt0.c3, 0.44386904098454116, rt0.c0)) AND ((rt0.c2, rt0.c3, rt0.c2))) IN ()));
SELECT ALL * FROM rt0 WHERE (((LOWER(rt0.c0)) BETWEEN (UPPER(rt0.c0)) AND (CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END))) ORDER BY CASE WHEN ((rt0.c2) NOT NULL) THEN (+ (rt0.c2)) WHEN rt0.c2 COLLATE BINARY THEN rt0.c1 COLLATE RTRIM WHEN (NOT (rt0.c2)) THEN rt0.c0 END, ((((rt0.c3, rt0.c2, rt0.c0)) BETWEEN ((rt0.c3, 0.44386904098454116, rt0.c0)) AND ((rt0.c2, rt0.c3, rt0.c2))) IN ());
SELECT * FROM vt0 WHERE ((((vt0.c0)>(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)>(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)>(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)>(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)>(vt0.c0)) IN ()));
SELECT * FROM rt0 WHERE ((- (rt0.c1))) ORDER BY ((((((((((rt0.c0)%(rt0.c1)))AND((((rt0.c0))!=((rt0.c0))))))AND(((NULL)!=(rt0.c0)))))AND(rt0.c0)))AND(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END)), (+ ((((((((('#Â½')OR(rt0.c1)))AND(rt0.c3)))OR(x'')))AND(rt0.c0)))), ((((CAST(rt0.c1 AS REAL))AND(CAST(rt0.c2 AS REAL))))AND(CAST(-610831983 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c0)%(rt0.c1)))AND((((rt0.c0))!=((rt0.c0))))))AND(((NULL)<>(rt0.c0)))))AND(rt0.c0)))AND(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END)), (+ ((((((((('#Â½')OR(rt0.c1)))AND(rt0.c3)))OR(x'')))AND(rt0.c0)))), ((((CAST(rt0.c1 AS REAL))AND(CAST(rt0.c2 AS REAL))))AND(CAST(-610831983 AS TEXT)))  NULLS LAST);
SELECT * FROM rt0 WHERE ((- (rt0.c1))) ORDER BY ((((((((((rt0.c0)%(rt0.c1)))AND((((rt0.c0))!=((rt0.c0))))))AND(((NULL)!=(rt0.c0)))))AND(rt0.c0)))AND(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END)), (+ ((((((((('#Â½')OR(rt0.c1)))AND(rt0.c3)))OR(x'')))AND(rt0.c0)))), ((((CAST(rt0.c1 AS REAL))AND(CAST(rt0.c2 AS REAL))))AND(CAST(-610831983 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c0)%(rt0.c1)))AND((((rt0.c0))!=((rt0.c0))))))AND(((NULL)<>(rt0.c0)))))AND(rt0.c0)))AND(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END)), (+ ((((((((('#Â½')OR(rt0.c1)))AND(rt0.c3)))OR(x'')))AND(rt0.c0)))), ((((CAST(rt0.c1 AS REAL))AND(CAST(rt0.c2 AS REAL))))AND(CAST(-610831983 AS TEXT)))  NULLS LAST);
SELECT * FROM rt0 WHERE ((- (rt0.c1))) ORDER BY ((((((((((rt0.c0)%(rt0.c1)))AND((((rt0.c0))!=((rt0.c0))))))AND(((NULL)!=(rt0.c0)))))AND(rt0.c0)))AND(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END)), (+ ((((((((('#Â½')OR(rt0.c1)))AND(rt0.c3)))OR(x'')))AND(rt0.c0)))), ((((CAST(rt0.c1 AS REAL))AND(CAST(rt0.c2 AS REAL))))AND(CAST(-610831983 AS TEXT)))  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE ((+ (CAST(vt0.c0 AS BLOB)))) ORDER BY ((((rt0.c3)>=(rt0.c2))) IS FALSE) ASC, ((((((((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))AND(((rt0.c3) NOTNULL))))AND(rt0.c0)))AND(((vt0.c0) ISNULL))))OR(((rt0.c2)<=(rt0.c0)))))AND(CAST(vt0.c0 AS INTEGER))))AND(vt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c3)>=(rt0.c2))) IS FALSE) ASC, ((((((((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))AND(((rt0.c3) NOTNULL))))AND(rt0.c0)))AND(((vt0.c0) ISNULL))))OR(((rt0.c2)<=(rt0.c0)))))AND(CAST(vt0.c0 AS INTEGER))))AND(vt0.c0 COLLATE NOCASE))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE ((+ (CAST(vt0.c0 AS BLOB)))) ORDER BY ((((rt0.c3)>=(rt0.c2))) IS FALSE) ASC, ((((((((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))AND(((rt0.c3) NOTNULL))))AND(rt0.c0)))AND(((vt0.c0) ISNULL))))OR(((rt0.c2)<=(rt0.c0)))))AND(CAST(vt0.c0 AS INTEGER))))AND(vt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c3)>=(rt0.c2))) IS FALSE) ASC, ((((((((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))AND(((rt0.c3) NOTNULL))))AND(rt0.c0)))AND(((vt0.c0) ISNULL))))OR(((rt0.c2)<=(rt0.c0)))))AND(CAST(vt0.c0 AS INTEGER))))AND(vt0.c0 COLLATE NOCASE))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE ((+ (CAST(vt0.c0 AS BLOB)))) ORDER BY ((((rt0.c3)>=(rt0.c2))) IS FALSE) ASC, ((((((((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))AND(((rt0.c3) NOTNULL))))AND(rt0.c0)))AND(((vt0.c0) ISNULL))))OR(((rt0.c2)<=(rt0.c0)))))AND(CAST(vt0.c0 AS INTEGER))))AND(vt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS NUMERIC)) ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS NUMERIC)) ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS NUMERIC)) ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) IS FALSE);
SELECT * FROM rt0, vt0 WHERE (((((((((rt0.c2)OR('-776013363')))OR(rt0.c0)))OR('-218324472')))AND(rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2)OR('-776013363')))OR(rt0.c0)))OR('-218324472')))AND(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((((((rt0.c2)OR('-776013363')))OR(rt0.c0)))OR('-218324472')))AND(rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2)OR('-776013363')))OR(rt0.c0)))OR('-218324472')))AND(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((((((rt0.c2)OR('-776013363')))OR(rt0.c0)))OR('-218324472')))AND(rt0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN UNICODE(rt0.c0) THEN rt0.c1 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN UNICODE(rt0.c0) THEN rt0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN UNICODE(rt0.c0) THEN rt0.c1 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN UNICODE(rt0.c0) THEN rt0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN UNICODE(rt0.c0) THEN rt0.c1 COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (IFNULL(DISTINCT ((((rt0.c1)OR(vt0.c0)))OR(rt0.c1)), vt0.c0 COLLATE NOCASE)) ORDER BY ((((rt0.c0) ISNULL))*(NULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((((rt0.c1)OR(vt0.c0)))OR(rt0.c1)), vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((((rt0.c0) ISNULL))*(NULL)) ASC);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (IFNULL(DISTINCT ((((rt0.c1)OR(vt0.c0)))OR(rt0.c1)), vt0.c0 COLLATE NOCASE)) ORDER BY ((((rt0.c0) ISNULL))*(NULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((((rt0.c1)OR(vt0.c0)))OR(rt0.c1)), vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((((rt0.c0) ISNULL))*(NULL)) ASC);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (IFNULL(DISTINCT ((((rt0.c1)OR(vt0.c0)))OR(rt0.c1)), vt0.c0 COLLATE NOCASE)) ORDER BY ((((rt0.c0) ISNULL))*(NULL)) ASC;
SELECT ALL * FROM vt0 WHERE (CAST('' AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST('' AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST('' AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST('' AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST('' AS TEXT));
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN CAST(rt0.c3 AS TEXT) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)) ELSE ((0.3610865501412791) NOT BETWEEN (rt0.c3) AND (rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c3 AS TEXT) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)) ELSE ((0.3610865501412791) NOT BETWEEN (rt0.c3) AND (rt0.c3)) END) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN CAST(rt0.c3 AS TEXT) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)) ELSE ((0.3610865501412791) NOT BETWEEN (rt0.c3) AND (rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c3 AS TEXT) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)) ELSE ((0.3610865501412791) NOT BETWEEN (rt0.c3) AND (rt0.c3)) END) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN CAST(rt0.c3 AS TEXT) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)) ELSE ((0.3610865501412791) NOT BETWEEN (rt0.c3) AND (rt0.c3)) END);
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(vt0.c0 AS TEXT))-(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END))) ORDER BY ((((rt0.c3) NOT NULL))AND(CAST(rt0.c2 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT))-(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c3) NOT NULL))AND(CAST(rt0.c2 AS BLOB))));
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(vt0.c0 AS TEXT))-(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END))) ORDER BY ((((rt0.c3) NOT NULL))AND(CAST(rt0.c2 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT))-(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c3) NOT NULL))AND(CAST(rt0.c2 AS BLOB))));
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(vt0.c0 AS TEXT))-(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END))) ORDER BY ((((rt0.c3) NOT NULL))AND(CAST(rt0.c2 AS BLOB)));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ()));
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM rt0 WHERE (('WéW4x.^' IN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END))) ORDER BY ((UPPER(rt0.c0)) IS TRUE);
SELECT SUM(count) FROM (SELECT ((('WéW4x.^' IN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY ((UPPER(rt0.c0)) IS TRUE));
SELECT COUNT(*) FROM rt0 WHERE (('WéW4x.^' IN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END))) ORDER BY ((UPPER(rt0.c0)) IS TRUE);
SELECT SUM(count) FROM (SELECT ((('WéW4x.^' IN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY ((UPPER(rt0.c0)) IS TRUE));
SELECT COUNT(*) FROM rt0 WHERE (('WéW4x.^' IN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END))) ORDER BY ((UPPER(rt0.c0)) IS TRUE);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((CASE WHEN rt0.c1 THEN rt0.c0 END)OR(CAST(rt0.c1 AS BLOB))))AND((rt0.c1 IN ()))))AND((((rt0.c2, 'vzké²ªa', rt0.c3, rt0.c1, rt0.c0))>((rt0.c2, rt0.c2, rt0.c0, rt0.c0, NULL))))))AND(((rt0.c0) IS TRUE))))OR(((rt0.c2)%(rt0.c3)))))OR(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY (((((rt0.c2, rt0.c3, '6}!'))<=((rt0.c2, rt0.c1, rt0.c1)))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((CASE WHEN rt0.c1 THEN rt0.c0 END)OR(CAST(rt0.c1 AS BLOB))))AND((rt0.c1 IN ()))))AND((((rt0.c2, 'vzké²ªa', rt0.c3, rt0.c1, rt0.c0))>((rt0.c2, rt0.c2, rt0.c0, rt0.c0, NULL))))))AND(((rt0.c0) IS TRUE))))OR(((rt0.c2)%(rt0.c3)))))OR(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2, rt0.c3, '6}!'))<=((rt0.c2, rt0.c1, rt0.c1)))) NOT NULL) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((CASE WHEN rt0.c1 THEN rt0.c0 END)OR(CAST(rt0.c1 AS BLOB))))AND((rt0.c1 IN ()))))AND((((rt0.c2, 'vzké²ªa', rt0.c3, rt0.c1, rt0.c0))>((rt0.c2, rt0.c2, rt0.c0, rt0.c0, NULL))))))AND(((rt0.c0) IS TRUE))))OR(((rt0.c2)%(rt0.c3)))))OR(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY (((((rt0.c2, rt0.c3, '6}!'))<=((rt0.c2, rt0.c1, rt0.c1)))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((CASE WHEN rt0.c1 THEN rt0.c0 END)OR(CAST(rt0.c1 AS BLOB))))AND((rt0.c1 IN ()))))AND((((rt0.c2, 'vzké²ªa', rt0.c3, rt0.c1, rt0.c0))>((rt0.c2, rt0.c2, rt0.c0, rt0.c0, NULL))))))AND(((rt0.c0) IS TRUE))))OR(((rt0.c2)%(rt0.c3)))))OR(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2, rt0.c3, '6}!'))<=((rt0.c2, rt0.c1, rt0.c1)))) NOT NULL) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((CASE WHEN rt0.c1 THEN rt0.c0 END)OR(CAST(rt0.c1 AS BLOB))))AND((rt0.c1 IN ()))))AND((((rt0.c2, 'vzké²ªa', rt0.c3, rt0.c1, rt0.c0))>((rt0.c2, rt0.c2, rt0.c0, rt0.c0, NULL))))))AND(((rt0.c0) IS TRUE))))OR(((rt0.c2)%(rt0.c3)))))OR(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY (((((rt0.c2, rt0.c3, '6}!'))<=((rt0.c2, rt0.c1, rt0.c1)))) NOT NULL) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY x'd6d247a1' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY x'd6d247a1' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY x'd6d247a1' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY x'd6d247a1' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY x'd6d247a1' DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0))>=((rt0.c2)))) NOTNULL)) ORDER BY (((((+ (rt0.c3)))AND((rt0.c3 IN (rt0.c3, rt0.c3)))))OR(((rt0.c3)AND(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0))>=((rt0.c2)))) NOTNULL)) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY (((((+ (rt0.c3)))AND((rt0.c3 IN (rt0.c3, rt0.c3)))))OR(((rt0.c3)AND(rt0.c2)))) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0))>=((rt0.c2)))) NOTNULL)) ORDER BY (((((+ (rt0.c3)))AND((rt0.c3 IN (rt0.c3, rt0.c3)))))OR(((rt0.c3)AND(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0))>=((rt0.c2)))) NOTNULL)) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY (((((+ (rt0.c3)))AND((rt0.c3 IN (rt0.c3, rt0.c3)))))OR(((rt0.c3)AND(rt0.c2)))) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0))>=((rt0.c2)))) NOTNULL)) ORDER BY (((((+ (rt0.c3)))AND((rt0.c3 IN (rt0.c3, rt0.c3)))))OR(((rt0.c3)AND(rt0.c2)))) DESC;
SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0)>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0)>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0)>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0)>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0)>(vt0.c0)))));
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c3 IN ()))<<(((rt0.c3)LIKE(0X1a320db2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN ()))<<(((rt0.c3)LIKE(0X1a320db2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c3 IN ()))<<(((rt0.c3)LIKE(0X1a320db2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN ()))<<(((rt0.c3)LIKE(0X1a320db2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c3 IN ()))<<(((rt0.c3)LIKE(0X1a320db2)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((CAST(rt0.c0 AS TEXT))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)))))AND(vt0.c0 COLLATE NOCASE))) ORDER BY (CAST(rt0.c2 AS BLOB) IN ()) DESC, ((((CAST(rt0.c0 AS NUMERIC))OR((rt0.c1 IN (rt0.c3)))))AND((~ ('\gsb,*w^<')))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c0 AS TEXT))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)))))AND(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (CAST(rt0.c2 AS BLOB) IN ()) DESC, ((((CAST(rt0.c0 AS NUMERIC))OR((rt0.c1 IN (rt0.c3)))))AND((~ ('\gsb,*w^<')))) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((CAST(rt0.c0 AS TEXT))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)))))AND(vt0.c0 COLLATE NOCASE))) ORDER BY (CAST(rt0.c2 AS BLOB) IN ()) DESC, ((((CAST(rt0.c0 AS NUMERIC))OR((rt0.c1 IN (rt0.c3)))))AND((~ ('\gsb,*w^<')))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c0 AS TEXT))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)))))AND(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (CAST(rt0.c2 AS BLOB) IN ()) DESC, ((((CAST(rt0.c0 AS NUMERIC))OR((rt0.c1 IN (rt0.c3)))))AND((~ ('\gsb,*w^<')))) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((CAST(rt0.c0 AS TEXT))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)))))AND(vt0.c0 COLLATE NOCASE))) ORDER BY (CAST(rt0.c2 AS BLOB) IN ()) DESC, ((((CAST(rt0.c0 AS NUMERIC))OR((rt0.c1 IN (rt0.c3)))))AND((~ ('\gsb,*w^<')))) ASC;
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON rt0.c1 WHERE (NULLIF(((((rt0.c0)OR(rt0.c0)))AND(vt0.c0)), (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2))))) ORDER BY ((0Xffffffffd1bef9cd)+(rt0.c0))  NULLS FIRST, ((((((((((rt0.c3) IS FALSE))AND((rt0.c3 IN (rt0.c0)))))OR(CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN '-1048531320' WHEN vt0.c0 THEN rt0.c1 ELSE x'bcc9' END)))AND((rt0.c0 IN ()))))OR((rt0.c2 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((((rt0.c0)OR(rt0.c0)))AND(vt0.c0)), (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON rt0.c1 ORDER BY ((0xffffffffd1bef9cd)+(rt0.c0))  NULLS FIRST, ((((((((((rt0.c3) IS FALSE))AND((rt0.c3 IN (rt0.c0)))))OR(CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN '-1048531320' WHEN vt0.c0 THEN rt0.c1 ELSE x'bcc9' END)))AND((rt0.c0 IN ()))))OR((rt0.c2 IN ()))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON rt0.c1 WHERE (NULLIF(((((rt0.c0)OR(rt0.c0)))AND(vt0.c0)), (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2))))) ORDER BY ((0Xffffffffd1bef9cd)+(rt0.c0))  NULLS FIRST, ((((((((((rt0.c3) IS FALSE))AND((rt0.c3 IN (rt0.c0)))))OR(CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN '-1048531320' WHEN vt0.c0 THEN rt0.c1 ELSE x'bcc9' END)))AND((rt0.c0 IN ()))))OR((rt0.c2 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((((rt0.c0)OR(rt0.c0)))AND(vt0.c0)), (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON rt0.c1 ORDER BY ((0xffffffffd1bef9cd)+(rt0.c0))  NULLS FIRST, ((((((((((rt0.c3) IS FALSE))AND((rt0.c3 IN (rt0.c0)))))OR(CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN '-1048531320' WHEN vt0.c0 THEN rt0.c1 ELSE x'bcc9' END)))AND((rt0.c0 IN ()))))OR((rt0.c2 IN ()))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON rt0.c1 WHERE (NULLIF(((((rt0.c0)OR(rt0.c0)))AND(vt0.c0)), (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2))))) ORDER BY ((0Xffffffffd1bef9cd)+(rt0.c0))  NULLS FIRST, ((((((((((rt0.c3) IS FALSE))AND((rt0.c3 IN (rt0.c0)))))OR(CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN '-1048531320' WHEN vt0.c0 THEN rt0.c1 ELSE x'bcc9' END)))AND((rt0.c0 IN ()))))OR((rt0.c2 IN ()))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON x'a1d4' WHERE ((TRIM(rt0.c3) IN (((((NULL)AND(NULL)))AND(vt0.c0))))) ORDER BY 0.3093342725540643 ASC, (~ (HEX(DISTINCT vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((TRIM(rt0.c3) IN (((((NULL)AND(NULL)))AND(vt0.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON x'a1d4' ORDER BY 0.3093342725540643 ASC, (~ (HEX(DISTINCT vt0.c0))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON x'a1d4' WHERE ((TRIM(rt0.c3) IN (((((NULL)AND(NULL)))AND(vt0.c0))))) ORDER BY 0.3093342725540643 ASC, (~ (HEX(DISTINCT vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((TRIM(rt0.c3) IN (((((NULL)AND(NULL)))AND(vt0.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON x'a1d4' ORDER BY 0.3093342725540643 ASC, (~ (HEX(DISTINCT vt0.c0))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON x'a1d4' WHERE ((TRIM(rt0.c3) IN (((((NULL)AND(NULL)))AND(vt0.c0))))) ORDER BY 0.3093342725540643 ASC, (~ (HEX(DISTINCT vt0.c0)));
SELECT ALL * FROM vt0, rt0 WHERE (((x'')<(rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((x'')<(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((x'')<(rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((x'')<(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((x'')<(rt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (IFNULL(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)), (+ (rt0.c3)))) ORDER BY json_array_length(rt0.c1, rt0.c3) COLLATE BINARY DESC, CAST(rt0.c3 AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)), (+ (rt0.c3)))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY json_array_length(rt0.c1, rt0.c3) COLLATE BINARY DESC, CAST(rt0.c3 AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (IFNULL(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)), (+ (rt0.c3)))) ORDER BY json_array_length(rt0.c1, rt0.c3) COLLATE BINARY DESC, CAST(rt0.c3 AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)), (+ (rt0.c3)))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY json_array_length(rt0.c1, rt0.c3) COLLATE BINARY DESC, CAST(rt0.c3 AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (IFNULL(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)), (+ (rt0.c3)))) ORDER BY json_array_length(rt0.c1, rt0.c3) COLLATE BINARY DESC, CAST(rt0.c3 AS NUMERIC)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((+ ((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((~ (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((+ ((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((~ (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((+ ((~ (rt0.c2)))));
SELECT ALL * FROM rt0 WHERE (((CAST(0.4976610596104787 AS INTEGER)) NOT BETWEEN (((rt0.c0)||(x'4c56'))) AND (json_insert(rt0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((CAST(0.4976610596104787 AS INTEGER)) NOT BETWEEN (((rt0.c0)||(x'4c56'))) AND (json_insert(rt0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CAST(0.4976610596104787 AS INTEGER)) NOT BETWEEN (((rt0.c0)||(x'4c56'))) AND (json_insert(rt0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((CAST(0.4976610596104787 AS INTEGER)) NOT BETWEEN (((rt0.c0)||(x'4c56'))) AND (json_insert(rt0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((~ (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3))))) ORDER BY (((rt0.c0 IN ()))<=(((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c3)))) DESC, (((rt0.c1)/(rt0.c3)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN ()))<=(((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c3)))) DESC, (((rt0.c1)/(rt0.c3)) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((~ (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3))))) ORDER BY (((rt0.c0 IN ()))<=(((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c3)))) DESC, (((rt0.c1)/(rt0.c3)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN ()))<=(((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c3)))) DESC, (((rt0.c1)/(rt0.c3)) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((~ (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3))))) ORDER BY (((rt0.c0 IN ()))<=(((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c3)))) DESC, (((rt0.c1)/(rt0.c3)) IN ()) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ('6}!') ORDER BY LIKELY((((rt0.c0))<((rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('6}!') IS TRUE)  as count FROM rt0 ORDER BY LIKELY((((rt0.c0))<((rt0.c1)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ('6}!') ORDER BY LIKELY((((rt0.c0))<((rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('6}!') IS TRUE)  as count FROM rt0 ORDER BY LIKELY((((rt0.c0))<((rt0.c1)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ('6}!') ORDER BY LIKELY((((rt0.c0))<((rt0.c1)))) ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE (((((((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c0)))AND(NULL)))OR(((rt0.c1) NOT NULL))))AND(((rt0.c2)LIKE('574282580')))))OR(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c2 THEN x'' END))) ORDER BY (((vt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, '1142671450', rt0.c3)) AND ((rt0.c1, x'', vt0.c0))) COLLATE NOCASE DESC  NULLS LAST, ((((((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c3)))OR(vt0.c0)))AND(rt0.c2)))%(((rt0.c0) IS FALSE))) DESC, COALESCE(DISTINCT rt0.c3, rt0.c1, rt0.c2, rt0.c2, rt0.c2, rt0.c1) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c0)))AND(NULL)))OR(((rt0.c1) NOT NULL))))AND(((rt0.c2)LIKE('574282580')))))OR(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c2 THEN x'' END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, '1142671450', rt0.c3)) AND ((rt0.c1, x'', vt0.c0))) COLLATE NOCASE DESC  NULLS LAST, ((((((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c3)))OR(vt0.c0)))AND(rt0.c2)))%(((rt0.c0) IS FALSE))) DESC, COALESCE(DISTINCT rt0.c3, rt0.c1, rt0.c2, rt0.c2, rt0.c2, rt0.c1) COLLATE NOCASE DESC);
SELECT ALL * FROM rt0, vt0 WHERE (((((((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c0)))AND(NULL)))OR(((rt0.c1) NOT NULL))))AND(((rt0.c2)LIKE('574282580')))))OR(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c2 THEN x'' END))) ORDER BY (((vt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, '1142671450', rt0.c3)) AND ((rt0.c1, x'', vt0.c0))) COLLATE NOCASE DESC  NULLS LAST, ((((((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c3)))OR(vt0.c0)))AND(rt0.c2)))%(((rt0.c0) IS FALSE))) DESC, COALESCE(DISTINCT rt0.c3, rt0.c1, rt0.c2, rt0.c2, rt0.c2, rt0.c1) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c0)))AND(NULL)))OR(((rt0.c1) NOT NULL))))AND(((rt0.c2)LIKE('574282580')))))OR(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c2 THEN x'' END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, '1142671450', rt0.c3)) AND ((rt0.c1, x'', vt0.c0))) COLLATE NOCASE DESC  NULLS LAST, ((((((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c3)))OR(vt0.c0)))AND(rt0.c2)))%(((rt0.c0) IS FALSE))) DESC, COALESCE(DISTINCT rt0.c3, rt0.c1, rt0.c2, rt0.c2, rt0.c2, rt0.c1) COLLATE NOCASE DESC);
SELECT ALL * FROM rt0, vt0 WHERE (((((((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c0)))AND(NULL)))OR(((rt0.c1) NOT NULL))))AND(((rt0.c2)LIKE('574282580')))))OR(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c2 THEN x'' END))) ORDER BY (((vt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, '1142671450', rt0.c3)) AND ((rt0.c1, x'', vt0.c0))) COLLATE NOCASE DESC  NULLS LAST, ((((((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c3)))OR(vt0.c0)))AND(rt0.c2)))%(((rt0.c0) IS FALSE))) DESC, COALESCE(DISTINCT rt0.c3, rt0.c1, rt0.c2, rt0.c2, rt0.c2, rt0.c1) COLLATE NOCASE DESC;
SELECT COUNT(*) FROM vt0 WHERE (CAST('0.44386904098454116' AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST('0.44386904098454116' AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST('0.44386904098454116' AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST('0.44386904098454116' AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST('0.44386904098454116' AS INTEGER));
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((((rt0.c2) ISNULL)) BETWEEN (((rt0.c3) BETWEEN (2.094559546E9) AND (rt0.c1))) AND (((rt0.c0)!=(rt0.c3))))) ORDER BY CASE ((((vt0.c0)AND(rt0.c3)))AND(rt0.c0))  WHEN ((rt0.c1)IS NOT(vt0.c0)) THEN ((rt0.c2) ISNULL) END, ((((rt0.c2)>=('-1663471816'))) BETWEEN (('-766253495' IN (rt0.c1))) AND ((~ (rt0.c2)))), rt0.c3 ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) ISNULL)) BETWEEN (((rt0.c3) BETWEEN (2.094559546E9) AND (rt0.c1))) AND (((rt0.c0)!=(rt0.c3))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY CASE ((((vt0.c0)AND(rt0.c3)))AND(rt0.c0))  WHEN ((rt0.c1)IS NOT(vt0.c0)) THEN ((rt0.c2) ISNULL) END, ((((rt0.c2)>=('-1663471816'))) BETWEEN (('-766253495' IN (rt0.c1))) AND ((~ (rt0.c2)))), rt0.c3 ASC);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((((rt0.c2) ISNULL)) BETWEEN (((rt0.c3) BETWEEN (2.094559546E9) AND (rt0.c1))) AND (((rt0.c0)!=(rt0.c3))))) ORDER BY CASE ((((vt0.c0)AND(rt0.c3)))AND(rt0.c0))  WHEN ((rt0.c1)IS NOT(vt0.c0)) THEN ((rt0.c2) ISNULL) END, ((((rt0.c2)>=('-1663471816'))) BETWEEN (('-766253495' IN (rt0.c1))) AND ((~ (rt0.c2)))), rt0.c3 ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) ISNULL)) BETWEEN (((rt0.c3) BETWEEN (2.094559546E9) AND (rt0.c1))) AND (((rt0.c0)!=(rt0.c3))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY CASE ((((vt0.c0)AND(rt0.c3)))AND(rt0.c0))  WHEN ((rt0.c1)IS NOT(vt0.c0)) THEN ((rt0.c2) ISNULL) END, ((((rt0.c2)>=('-1663471816'))) BETWEEN (('-766253495' IN (rt0.c1))) AND ((~ (rt0.c2)))), rt0.c3 ASC);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((((rt0.c2) ISNULL)) BETWEEN (((rt0.c3) BETWEEN (2.094559546E9) AND (rt0.c1))) AND (((rt0.c0)!=(rt0.c3))))) ORDER BY CASE ((((vt0.c0)AND(rt0.c3)))AND(rt0.c0))  WHEN ((rt0.c1)IS NOT(vt0.c0)) THEN ((rt0.c2) ISNULL) END, ((((rt0.c2)>=('-1663471816'))) BETWEEN (('-766253495' IN (rt0.c1))) AND ((~ (rt0.c2)))), rt0.c3 ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (0.4013646489883559);
SELECT SUM(count) FROM (SELECT ALL ((0.4013646489883559) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.4013646489883559);
SELECT SUM(count) FROM (SELECT ALL ((0.4013646489883559) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.4013646489883559);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY CAST(((rt0.c0)||(rt0.c0)) AS REAL)  NULLS LAST, ((((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 END)OR(((rt0.c1)IS NOT(rt0.c0)))))OR(((rt0.c2)%(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0)||(rt0.c0)) AS REAL)  NULLS LAST, ((((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 END)OR(((rt0.c1)IS NOT(rt0.c0)))))OR(((rt0.c2)%(rt0.c2)))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY CAST(((rt0.c0)||(rt0.c0)) AS REAL)  NULLS LAST, ((((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 END)OR(((rt0.c1)IS NOT(rt0.c0)))))OR(((rt0.c2)%(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0)||(rt0.c0)) AS REAL)  NULLS LAST, ((((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 END)OR(((rt0.c1)IS NOT(rt0.c0)))))OR(((rt0.c2)%(rt0.c2)))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY CAST(((rt0.c0)||(rt0.c0)) AS REAL)  NULLS LAST, ((((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 END)OR(((rt0.c1)IS NOT(rt0.c0)))))OR(((rt0.c2)%(rt0.c2)))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) IS FALSE))AND(((vt0.c0)GLOB(vt0.c0)))))OR((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) IS FALSE))AND(((vt0.c0)GLOB(vt0.c0)))))OR((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) IS FALSE))AND(((vt0.c0)GLOB(vt0.c0)))))OR((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) IS FALSE))AND(((vt0.c0)GLOB(vt0.c0)))))OR((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) IS FALSE))AND(((vt0.c0)GLOB(vt0.c0)))))OR((- (vt0.c0)))));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON (((rt0.c1)) NOT BETWEEN (((+ (vt0.c0)))) AND ((((((rt0.c0)OR(rt0.c0)))OR(vt0.c0))))) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((rt0.c1)) NOT BETWEEN (((+ (vt0.c0)))) AND ((((((rt0.c0)OR(rt0.c0)))OR(vt0.c0))))));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON (((rt0.c1)) NOT BETWEEN (((+ (vt0.c0)))) AND ((((((rt0.c0)OR(rt0.c0)))OR(vt0.c0))))) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((rt0.c1)) NOT BETWEEN (((+ (vt0.c0)))) AND ((((((rt0.c0)OR(rt0.c0)))OR(vt0.c0))))));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON (((rt0.c1)) NOT BETWEEN (((+ (vt0.c0)))) AND ((((((rt0.c0)OR(rt0.c0)))OR(vt0.c0))))) WHERE (rt0.c0);
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY 0.8812907682577784  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 ORDER BY 0.8812907682577784  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY 0.8812907682577784  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 ORDER BY 0.8812907682577784  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY 0.8812907682577784  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE (UNLIKELY(rt0.c1 COLLATE NOCASE)) ORDER BY (((rt0.c0, rt0.c2, rt0.c3)) NOT BETWEEN (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c3))), rt0.c1 COLLATE RTRIM, CAST(rt0.c3 AS TEXT))) AND ((0.8494187543410064 COLLATE BINARY, (rt0.c3 IN ()), ((rt0.c2) IS TRUE))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(rt0.c1 COLLATE NOCASE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c0, rt0.c2, rt0.c3)) NOT BETWEEN (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c3))), rt0.c1 COLLATE RTRIM, CAST(rt0.c3 AS TEXT))) AND ((0.8494187543410064 COLLATE BINARY, (rt0.c3 IN ()), ((rt0.c2) IS TRUE))))  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (UNLIKELY(rt0.c1 COLLATE NOCASE)) ORDER BY (((rt0.c0, rt0.c2, rt0.c3)) NOT BETWEEN (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c3))), rt0.c1 COLLATE RTRIM, CAST(rt0.c3 AS TEXT))) AND ((0.8494187543410064 COLLATE BINARY, (rt0.c3 IN ()), ((rt0.c2) IS TRUE))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(rt0.c1 COLLATE NOCASE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c0, rt0.c2, rt0.c3)) NOT BETWEEN (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c3))), rt0.c1 COLLATE RTRIM, CAST(rt0.c3 AS TEXT))) AND ((0.8494187543410064 COLLATE BINARY, (rt0.c3 IN ()), ((rt0.c2) IS TRUE))))  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (UNLIKELY(rt0.c1 COLLATE NOCASE)) ORDER BY (((rt0.c0, rt0.c2, rt0.c3)) NOT BETWEEN (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c3))), rt0.c1 COLLATE RTRIM, CAST(rt0.c3 AS TEXT))) AND ((0.8494187543410064 COLLATE BINARY, (rt0.c3 IN ()), ((rt0.c2) IS TRUE))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c3 AS REAL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS REAL)) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c3 AS REAL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS REAL)) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c3 AS REAL)) IS TRUE));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3, rt0.c3, rt0.c0)) NOT BETWEEN ((((rt0.c3)IS NOT(rt0.c3)), (((rt0.c1, rt0.c3, rt0.c0))=((rt0.c1, rt0.c2, rt0.c2))), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)) AND ((((((rt0.c1)AND(NULL)))AND(rt0.c3)), (+ (rt0.c2)), ((rt0.c2) NOTNULL))))) ORDER BY rt0.c1  NULLS LAST, json_array_length(CAST(rt0.c0 AS TEXT), CAST(rt0.c1 AS TEXT)) DESC, ((NOT (rt0.c1)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3, rt0.c3, rt0.c0)) NOT BETWEEN ((((rt0.c3)IS NOT(rt0.c3)), (((rt0.c1, rt0.c3, rt0.c0))==((rt0.c1, rt0.c2, rt0.c2))), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)) AND ((((((rt0.c1)AND(NULL)))AND(rt0.c3)), (+ (rt0.c2)), ((rt0.c2) NOTNULL))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1  NULLS LAST, json_array_length(CAST(rt0.c0 AS TEXT), CAST(rt0.c1 AS TEXT)) DESC, ((NOT (rt0.c1)) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3, rt0.c3, rt0.c0)) NOT BETWEEN ((((rt0.c3)IS NOT(rt0.c3)), (((rt0.c1, rt0.c3, rt0.c0))=((rt0.c1, rt0.c2, rt0.c2))), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)) AND ((((((rt0.c1)AND(NULL)))AND(rt0.c3)), (+ (rt0.c2)), ((rt0.c2) NOTNULL))))) ORDER BY rt0.c1  NULLS LAST, json_array_length(CAST(rt0.c0 AS TEXT), CAST(rt0.c1 AS TEXT)) DESC, ((NOT (rt0.c1)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3, rt0.c3, rt0.c0)) NOT BETWEEN ((((rt0.c3)IS NOT(rt0.c3)), (((rt0.c1, rt0.c3, rt0.c0))==((rt0.c1, rt0.c2, rt0.c2))), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)) AND ((((((rt0.c1)AND(NULL)))AND(rt0.c3)), (+ (rt0.c2)), ((rt0.c2) NOTNULL))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1  NULLS LAST, json_array_length(CAST(rt0.c0 AS TEXT), CAST(rt0.c1 AS TEXT)) DESC, ((NOT (rt0.c1)) IN ()) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (LOWER(((rt0.c1)*(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((LOWER(((rt0.c1)*(rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (LOWER(((rt0.c1)*(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((LOWER(((rt0.c1)*(rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (LOWER(((rt0.c1)*(rt0.c1))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) IS FALSE)) ORDER BY vt0.c0, '1442629112';
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, '1442629112');
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) IS FALSE)) ORDER BY vt0.c0, '1442629112';
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, '1442629112');
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) IS FALSE)) ORDER BY vt0.c0, '1442629112';
SELECT COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'');
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0) NOTNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0) NOTNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0) NOTNULL) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((~ (rt0.c1)))LIKE(rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1)))LIKE(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((~ (rt0.c1)))LIKE(rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1)))LIKE(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((~ (rt0.c1)))LIKE(rt0.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((CAST(rt0.c3 AS BLOB) IN ())) ORDER BY (((((rt0.c3 IN (0.9304659499134548, 0.64193439923532)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)))))OR((- (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c3 AS BLOB) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c3 IN (0.9304659499134548, 0.64193439923532)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)))))OR((- (rt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((CAST(rt0.c3 AS BLOB) IN ())) ORDER BY (((((rt0.c3 IN (0.9304659499134548, 0.64193439923532)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)))))OR((- (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c3 AS BLOB) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c3 IN (0.9304659499134548, 0.64193439923532)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)))))OR((- (rt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((CAST(rt0.c3 AS BLOB) IN ())) ORDER BY (((((rt0.c3 IN (0.9304659499134548, 0.64193439923532)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)))))OR((- (rt0.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((~ ((((rt0.c2))<((rt0.c0)))))) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c2))<((rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 ASC);
SELECT COUNT(*) FROM rt0 WHERE ((~ ((((rt0.c2))<((rt0.c0)))))) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c2))<((rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 ASC);
SELECT COUNT(*) FROM rt0 WHERE ((~ ((((rt0.c2))<((rt0.c0)))))) ORDER BY rt0.c2 ASC;
SELECT * FROM vt0, rt0 WHERE ((((rt0.c3)) BETWEEN ((CASE WHEN rt0.c1 THEN x'e74c' ELSE rt0.c2 END)) AND ((((rt0.c0)IS NOT(rt0.c0)))))) ORDER BY (((x'0113' IN ()))-(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 END));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) BETWEEN ((CASE WHEN rt0.c1 THEN x'e74c' ELSE rt0.c2 END)) AND ((((rt0.c0)IS NOT(rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((x'0113' IN ()))-(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 END)));
SELECT * FROM vt0, rt0 WHERE ((((rt0.c3)) BETWEEN ((CASE WHEN rt0.c1 THEN x'e74c' ELSE rt0.c2 END)) AND ((((rt0.c0)IS NOT(rt0.c0)))))) ORDER BY (((x'0113' IN ()))-(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 END));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) BETWEEN ((CASE WHEN rt0.c1 THEN x'e74c' ELSE rt0.c2 END)) AND ((((rt0.c0)IS NOT(rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((x'0113' IN ()))-(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 END)));
SELECT * FROM vt0, rt0 WHERE ((((rt0.c3)) BETWEEN ((CASE WHEN rt0.c1 THEN x'e74c' ELSE rt0.c2 END)) AND ((((rt0.c0)IS NOT(rt0.c0)))))) ORDER BY (((x'0113' IN ()))-(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 END));
SELECT * FROM rt0, vt0 WHERE (0.04114926072380165) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ((0.04114926072380165) IS TRUE)  as count FROM rt0, vt0 ORDER BY x'' ASC);
SELECT * FROM rt0, vt0 WHERE (0.04114926072380165) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ((0.04114926072380165) IS TRUE)  as count FROM rt0, vt0 ORDER BY x'' ASC);
SELECT * FROM rt0, vt0 WHERE (0.04114926072380165) ORDER BY x'' ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR((+ (x'd1d1')))))AND(CAST(vt0.c0 AS TEXT))))AND(((vt0.c0)&(vt0.c0)))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR((+ (x'd1d1')))))AND(CAST(vt0.c0 AS TEXT))))AND(((vt0.c0)&(vt0.c0)))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR((+ (x'd1d1')))))AND(CAST(vt0.c0 AS TEXT))))AND(((vt0.c0)&(vt0.c0)))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR((+ (x'd1d1')))))AND(CAST(vt0.c0 AS TEXT))))AND(((vt0.c0)&(vt0.c0)))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR((+ (x'd1d1')))))AND(CAST(vt0.c0 AS TEXT))))AND(((vt0.c0)&(vt0.c0)))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT * FROM vt0 WHERE ((NOT (0.8209983777332385))) ORDER BY ((((vt0.c0)>(vt0.c0))) NOTNULL), CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (0.8209983777332385))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>(vt0.c0))) NOTNULL), CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE ((NOT (0.8209983777332385))) ORDER BY ((((vt0.c0)>(vt0.c0))) NOTNULL), CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (0.8209983777332385))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>(vt0.c0))) NOTNULL), CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE ((NOT (0.8209983777332385))) ORDER BY ((((vt0.c0)>(vt0.c0))) NOTNULL), CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (0X7aa66136) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((0x7aa66136) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0X7aa66136) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((0x7aa66136) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0X7aa66136) ORDER BY vt0.c0;
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c3) IS FALSE) THEN CASE WHEN rt0.c0 THEN rt0.c0 END END) ORDER BY CASE WHEN ABS(rt0.c0) THEN ((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c0)) ELSE JULIANDAY(rt0.c3, rt0.c1, rt0.c3, rt0.c1, rt0.c2) END;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c3) IS FALSE) THEN CASE WHEN rt0.c0 THEN rt0.c0 END END) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ABS(rt0.c0) THEN ((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c0)) ELSE JULIANDAY(rt0.c3, rt0.c1, rt0.c3, rt0.c1, rt0.c2) END);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c3) IS FALSE) THEN CASE WHEN rt0.c0 THEN rt0.c0 END END) ORDER BY CASE WHEN ABS(rt0.c0) THEN ((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c0)) ELSE JULIANDAY(rt0.c3, rt0.c1, rt0.c3, rt0.c1, rt0.c2) END;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c3) IS FALSE) THEN CASE WHEN rt0.c0 THEN rt0.c0 END END) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ABS(rt0.c0) THEN ((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c0)) ELSE JULIANDAY(rt0.c3, rt0.c1, rt0.c3, rt0.c1, rt0.c2) END);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c3) IS FALSE) THEN CASE WHEN rt0.c0 THEN rt0.c0 END END) ORDER BY CASE WHEN ABS(rt0.c0) THEN ((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c0)) ELSE JULIANDAY(rt0.c3, rt0.c1, rt0.c3, rt0.c1, rt0.c2) END;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c0) NOTNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c0) NOTNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c0) NOTNULL)) IS FALSE));
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS BLOB))>>(((((((((rt0.c2)OR(0x57e5dc1d)))OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c0))))) ORDER BY ((((rt0.c1)OR(rt0.c0))) NOT BETWEEN (CAST(NULL AS BLOB)) AND (rt0.c2)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS BLOB))>>(((((((((rt0.c2)OR(0X57e5dc1d)))OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)OR(rt0.c0))) NOT BETWEEN (CAST(NULL AS BLOB)) AND (rt0.c2)) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS BLOB))>>(((((((((rt0.c2)OR(0x57e5dc1d)))OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c0))))) ORDER BY ((((rt0.c1)OR(rt0.c0))) NOT BETWEEN (CAST(NULL AS BLOB)) AND (rt0.c2)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS BLOB))>>(((((((((rt0.c2)OR(0X57e5dc1d)))OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)OR(rt0.c0))) NOT BETWEEN (CAST(NULL AS BLOB)) AND (rt0.c2)) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS BLOB))>>(((((((((rt0.c2)OR(0x57e5dc1d)))OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c0))))) ORDER BY ((((rt0.c1)OR(rt0.c0))) NOT BETWEEN (CAST(NULL AS BLOB)) AND (rt0.c2)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0)<(CASE WHEN rt0.c2 THEN '-1834252507' ELSE vt0.c0 END))) ORDER BY TYPEOF(((rt0.c2) IS FALSE)) DESC, (NOT (((((rt0.c2)OR(rt0.c3)))OR(rt0.c0)))), 0xfffffffffa4f00bd ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<(CASE WHEN rt0.c2 THEN '-1834252507' ELSE vt0.c0 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY TYPEOF(((rt0.c2) IS FALSE)) DESC, (NOT (((((rt0.c2)OR(rt0.c3)))OR(rt0.c0)))), 0Xfffffffffa4f00bd ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0)<(CASE WHEN rt0.c2 THEN '-1834252507' ELSE vt0.c0 END))) ORDER BY TYPEOF(((rt0.c2) IS FALSE)) DESC, (NOT (((((rt0.c2)OR(rt0.c3)))OR(rt0.c0)))), 0xfffffffffa4f00bd ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<(CASE WHEN rt0.c2 THEN '-1834252507' ELSE vt0.c0 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY TYPEOF(((rt0.c2) IS FALSE)) DESC, (NOT (((((rt0.c2)OR(rt0.c3)))OR(rt0.c0)))), 0Xfffffffffa4f00bd ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0)<(CASE WHEN rt0.c2 THEN '-1834252507' ELSE vt0.c0 END))) ORDER BY TYPEOF(((rt0.c2) IS FALSE)) DESC, (NOT (((((rt0.c2)OR(rt0.c3)))OR(rt0.c0)))), 0xfffffffffa4f00bd ASC  NULLS LAST;
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE ((((((rt0.c1) NOT NULL), rt0.c1 COLLATE RTRIM, ((rt0.c1)GLOB(rt0.c1))))>((((vt0.c0)-(rt0.c3)), CAST(rt0.c2 AS TEXT), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1) NOT NULL), rt0.c1 COLLATE RTRIM, ((rt0.c1)GLOB(rt0.c1))))>((((vt0.c0)-(rt0.c3)), CAST(rt0.c2 AS TEXT), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0)))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE ((((((rt0.c1) NOT NULL), rt0.c1 COLLATE RTRIM, ((rt0.c1)GLOB(rt0.c1))))>((((vt0.c0)-(rt0.c3)), CAST(rt0.c2 AS TEXT), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1) NOT NULL), rt0.c1 COLLATE RTRIM, ((rt0.c1)GLOB(rt0.c1))))>((((vt0.c0)-(rt0.c3)), CAST(rt0.c2 AS TEXT), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0)))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE ((((((rt0.c1) NOT NULL), rt0.c1 COLLATE RTRIM, ((rt0.c1)GLOB(rt0.c1))))>((((vt0.c0)-(rt0.c3)), CAST(rt0.c2 AS TEXT), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0))))));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (((((vt0.c0) BETWEEN (vt0.c0) AND (0.44754154774950194))))>((((vt0.c0)==('2000879051')))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) BETWEEN (vt0.c0) AND (0.44754154774950194))))>((((vt0.c0)=('2000879051')))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (((((vt0.c0) BETWEEN (vt0.c0) AND (0.44754154774950194))))>((((vt0.c0)==('2000879051')))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) BETWEEN (vt0.c0) AND (0.44754154774950194))))>((((vt0.c0)=('2000879051')))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (((((vt0.c0) BETWEEN (vt0.c0) AND (0.44754154774950194))))>((((vt0.c0)==('2000879051')))))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (SQLITE_COMPILEOPTION_USED((((vt0.c0))<((vt0.c0))))) ORDER BY (~ ((vt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED((((vt0.c0))<((vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (~ ((vt0.c0 IN ())))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (SQLITE_COMPILEOPTION_USED((((vt0.c0))<((vt0.c0))))) ORDER BY (~ ((vt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED((((vt0.c0))<((vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (~ ((vt0.c0 IN ())))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (SQLITE_COMPILEOPTION_USED((((vt0.c0))<((vt0.c0))))) ORDER BY (~ ((vt0.c0 IN ())))  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE (TRIM(CAST(rt0.c2 AS INTEGER), NULL COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CAST(rt0.c2 AS INTEGER), NULL COLLATE RTRIM)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (TRIM(CAST(rt0.c2 AS INTEGER), NULL COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CAST(rt0.c2 AS INTEGER), NULL COLLATE RTRIM)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (TRIM(CAST(rt0.c2 AS INTEGER), NULL COLLATE RTRIM));
SELECT * FROM vt0 WHERE ((NOT (((NULL) NOT BETWEEN (0.881817253877783) AND (vt0.c0))))) ORDER BY vt0.c0, ((+ (vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((NULL) NOT BETWEEN (0.881817253877783) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, ((+ (vt0.c0)) IN ()) ASC);
SELECT * FROM vt0 WHERE ((NOT (((NULL) NOT BETWEEN (0.881817253877783) AND (vt0.c0))))) ORDER BY vt0.c0, ((+ (vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((NULL) NOT BETWEEN (0.881817253877783) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, ((+ (vt0.c0)) IN ()) ASC);
SELECT * FROM vt0 WHERE ((NOT (((NULL) NOT BETWEEN (0.881817253877783) AND (vt0.c0))))) ORDER BY vt0.c0, ((+ (vt0.c0)) IN ()) ASC;
SELECT ALL * FROM vt0 WHERE (TYPEOF(((x'7e1b')/(vt0.c0)))) ORDER BY ((-1.758483765E9)/(0.9339251176095843)) DESC, (((vt0.c0 IN ()))>(((NULL)AND(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((x'7e1b')/(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((-1.758483765E9)/(0.9339251176095843)) DESC, (((vt0.c0 IN ()))>(((NULL)AND(vt0.c0)))) ASC);
SELECT ALL * FROM vt0 WHERE (TYPEOF(((x'7e1b')/(vt0.c0)))) ORDER BY ((-1.758483765E9)/(0.9339251176095843)) DESC, (((vt0.c0 IN ()))>(((NULL)AND(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((x'7e1b')/(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((-1.758483765E9)/(0.9339251176095843)) DESC, (((vt0.c0 IN ()))>(((NULL)AND(vt0.c0)))) ASC);
SELECT ALL * FROM vt0 WHERE (TYPEOF(((x'7e1b')/(vt0.c0)))) ORDER BY ((-1.758483765E9)/(0.9339251176095843)) DESC, (((vt0.c0 IN ()))>(((NULL)AND(vt0.c0)))) ASC;
SELECT * FROM rt0, vt0 WHERE (1062866042 COLLATE BINARY) ORDER BY (rt0.c0 IN ()) COLLATE NOCASE COLLATE BINARY ASC, 'waEuh';
SELECT SUM(count) FROM (SELECT ALL ((1062866042 COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY (rt0.c0 IN ()) COLLATE NOCASE COLLATE BINARY ASC, 'waEuh');
SELECT * FROM rt0, vt0 WHERE (1062866042 COLLATE BINARY) ORDER BY (rt0.c0 IN ()) COLLATE NOCASE COLLATE BINARY ASC, 'waEuh';
SELECT SUM(count) FROM (SELECT ALL ((1062866042 COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY (rt0.c0 IN ()) COLLATE NOCASE COLLATE BINARY ASC, 'waEuh');
SELECT * FROM rt0, vt0 WHERE (1062866042 COLLATE BINARY) ORDER BY (rt0.c0 IN ()) COLLATE NOCASE COLLATE BINARY ASC, 'waEuh';
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE (NOT (rt0.c1))  WHEN CASE WHEN '0.6354078902300365' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN '-173246968' WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 END THEN (NOT (rt0.c0)) WHEN CASE WHEN '1160437843' THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END THEN (((rt0.c2))>((vt0.c0))) WHEN ((rt0.c3)-(rt0.c1)) THEN (((vt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1))) ELSE ((vt0.c0)-(rt0.c1)) END) ORDER BY ((CASE WHEN 0.7825781794989379 THEN 0.6494892121518405 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END)|(rt0.c3 COLLATE NOCASE))  NULLS FIRST, ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)))LIKE(CAST(rt0.c1 AS REAL))) ASC, (((~ (rt0.c1)))<(rt0.c1)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (rt0.c1))  WHEN CASE WHEN '0.6354078902300365' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN '-173246968' WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 END THEN (NOT (rt0.c0)) WHEN CASE WHEN '1160437843' THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END THEN (((rt0.c2))>((vt0.c0))) WHEN ((rt0.c3)-(rt0.c1)) THEN (((vt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1))) ELSE ((vt0.c0)-(rt0.c1)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE WHEN 0.7825781794989379 THEN 0.6494892121518405 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END)|(rt0.c3 COLLATE NOCASE))  NULLS FIRST, ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)))LIKE(CAST(rt0.c1 AS REAL))) ASC, (((~ (rt0.c1)))<(rt0.c1)) DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE (NOT (rt0.c1))  WHEN CASE WHEN '0.6354078902300365' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN '-173246968' WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 END THEN (NOT (rt0.c0)) WHEN CASE WHEN '1160437843' THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END THEN (((rt0.c2))>((vt0.c0))) WHEN ((rt0.c3)-(rt0.c1)) THEN (((vt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1))) ELSE ((vt0.c0)-(rt0.c1)) END) ORDER BY ((CASE WHEN 0.7825781794989379 THEN 0.6494892121518405 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END)|(rt0.c3 COLLATE NOCASE))  NULLS FIRST, ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)))LIKE(CAST(rt0.c1 AS REAL))) ASC, (((~ (rt0.c1)))<(rt0.c1)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (rt0.c1))  WHEN CASE WHEN '0.6354078902300365' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN '-173246968' WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 END THEN (NOT (rt0.c0)) WHEN CASE WHEN '1160437843' THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END THEN (((rt0.c2))>((vt0.c0))) WHEN ((rt0.c3)-(rt0.c1)) THEN (((vt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1))) ELSE ((vt0.c0)-(rt0.c1)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE WHEN 0.7825781794989379 THEN 0.6494892121518405 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END)|(rt0.c3 COLLATE NOCASE))  NULLS FIRST, ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)))LIKE(CAST(rt0.c1 AS REAL))) ASC, (((~ (rt0.c1)))<(rt0.c1)) DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE (NOT (rt0.c1))  WHEN CASE WHEN '0.6354078902300365' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN '-173246968' WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 END THEN (NOT (rt0.c0)) WHEN CASE WHEN '1160437843' THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END THEN (((rt0.c2))>((vt0.c0))) WHEN ((rt0.c3)-(rt0.c1)) THEN (((vt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1))) ELSE ((vt0.c0)-(rt0.c1)) END) ORDER BY ((CASE WHEN 0.7825781794989379 THEN 0.6494892121518405 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END)|(rt0.c3 COLLATE NOCASE))  NULLS FIRST, ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)))LIKE(CAST(rt0.c1 AS REAL))) ASC, (((~ (rt0.c1)))<(rt0.c1)) DESC;
SELECT COUNT(*) FROM vt0 WHERE (CAST(0x7ac9fcba AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0X7ac9fcba AS REAL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(0x7ac9fcba AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0X7ac9fcba AS REAL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(0x7ac9fcba AS REAL));
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS BLOB) AS NUMERIC)) ORDER BY (NOT (highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0))) ASC, CAST(((vt0.c0) BETWEEN (0.8077785390448258) AND (vt0.c0)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY (NOT (highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0))) ASC, CAST(((vt0.c0) BETWEEN (0.8077785390448258) AND (vt0.c0)) AS NUMERIC) DESC);
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS BLOB) AS NUMERIC)) ORDER BY (NOT (highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0))) ASC, CAST(((vt0.c0) BETWEEN (0.8077785390448258) AND (vt0.c0)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY (NOT (highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0))) ASC, CAST(((vt0.c0) BETWEEN (0.8077785390448258) AND (vt0.c0)) AS NUMERIC) DESC);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c2)>=(vt0.c0)))GLOB(rt0.c2 COLLATE RTRIM)) WHERE (rt0.c0) ORDER BY LOWER(rt0.c2)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c2)>=(vt0.c0)))GLOB(rt0.c2 COLLATE RTRIM)) ORDER BY LOWER(rt0.c2)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c2)>=(vt0.c0)))GLOB(rt0.c2 COLLATE RTRIM)) WHERE (rt0.c0) ORDER BY LOWER(rt0.c2)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c2)>=(vt0.c0)))GLOB(rt0.c2 COLLATE RTRIM)) ORDER BY LOWER(rt0.c2)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c2)>=(vt0.c0)))GLOB(rt0.c2 COLLATE RTRIM)) WHERE (rt0.c0) ORDER BY LOWER(rt0.c2)  NULLS FIRST;
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((rt0.c3)>=(((rt0.c0) NOTNULL))) WHERE (IFNULL(DISTINCT (rt0.c3 IN ()), CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END)) ORDER BY 1782991735 DESC  NULLS LAST, ((CAST(rt0.c1 AS INTEGER)) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT (rt0.c3 IN ()), CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((rt0.c3)>=(((rt0.c0) NOTNULL))) ORDER BY 1782991735 DESC  NULLS LAST, ((CAST(rt0.c1 AS INTEGER)) ISNULL) ASC  NULLS LAST);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((rt0.c3)>=(((rt0.c0) NOTNULL))) WHERE (IFNULL(DISTINCT (rt0.c3 IN ()), CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END)) ORDER BY 1782991735 DESC  NULLS LAST, ((CAST(rt0.c1 AS INTEGER)) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT (rt0.c3 IN ()), CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((rt0.c3)>=(((rt0.c0) NOTNULL))) ORDER BY 1782991735 DESC  NULLS LAST, ((CAST(rt0.c1 AS INTEGER)) ISNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (NULL);
SELECT * FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN (TYPEOF(DISTINCT vt0.c0), (((vt0.c0, vt0.c0, x'')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY 3.53643875E8 DESC;
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE NOCASE IN (TYPEOF(DISTINCT vt0.c0), (((vt0.c0, vt0.c0, x'')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY 3.53643875E8 DESC);
SELECT * FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN (TYPEOF(DISTINCT vt0.c0), (((vt0.c0, vt0.c0, x'')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY 3.53643875E8 DESC;
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE NOCASE IN (TYPEOF(DISTINCT vt0.c0), (((vt0.c0, vt0.c0, x'')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY 3.53643875E8 DESC);
SELECT * FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN (TYPEOF(DISTINCT vt0.c0), (((vt0.c0, vt0.c0, x'')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY 3.53643875E8 DESC;
SELECT * FROM vt0 WHERE (CAST((~ (vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((~ (vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((~ (vt0.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(rt0.c0 COLLATE RTRIM AS TEXT)) ORDER BY ((rt0.c1)>>(vt0.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0 ORDER BY ((rt0.c1)>>(vt0.c0)) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(rt0.c0 COLLATE RTRIM AS TEXT)) ORDER BY ((rt0.c1)>>(vt0.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0 ORDER BY ((rt0.c1)>>(vt0.c0)) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(rt0.c0 COLLATE RTRIM AS TEXT)) ORDER BY ((rt0.c1)>>(vt0.c0)) COLLATE RTRIM DESC;
SELECT * FROM vt0 WHERE (0.41581029060799835) ORDER BY vt0.c0 ASC, ((((vt0.c0) NOTNULL))<<(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) ASC, CASE WHEN CAST(vt0.c0 AS TEXT) THEN vt0.c0 COLLATE NOCASE END DESC;
SELECT SUM(count) FROM (SELECT ((0.41581029060799835) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC, ((((vt0.c0) NOTNULL))<<(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) ASC, CASE WHEN CAST(vt0.c0 AS TEXT) THEN vt0.c0 COLLATE NOCASE END DESC);
SELECT * FROM vt0 WHERE (0.41581029060799835) ORDER BY vt0.c0 ASC, ((((vt0.c0) NOTNULL))<<(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) ASC, CASE WHEN CAST(vt0.c0 AS TEXT) THEN vt0.c0 COLLATE NOCASE END DESC;
SELECT SUM(count) FROM (SELECT ((0.41581029060799835) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC, ((((vt0.c0) NOTNULL))<<(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) ASC, CASE WHEN CAST(vt0.c0 AS TEXT) THEN vt0.c0 COLLATE NOCASE END DESC);
SELECT * FROM vt0 WHERE (0.41581029060799835) ORDER BY vt0.c0 ASC, ((((vt0.c0) NOTNULL))<<(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) ASC, CASE WHEN CAST(vt0.c0 AS TEXT) THEN vt0.c0 COLLATE NOCASE END DESC;
SELECT * FROM vt0 WHERE ((NOT ((NOT (vt0.c0))))) ORDER BY (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())  NULLS LAST);
SELECT * FROM vt0 WHERE ((NOT ((NOT (vt0.c0))))) ORDER BY (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())  NULLS LAST);
SELECT * FROM vt0 WHERE ((NOT ((NOT (vt0.c0))))) ORDER BY (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE ((- (CAST('i9{U' AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST('i9{U' AS REAL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((- (CAST('i9{U' AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST('i9{U' AS REAL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((- (CAST('i9{U' AS REAL))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((+ ('-2140572745' COLLATE NOCASE))) ORDER BY rt0.c2, (x'7a00' IN ()) ASC, rt0.c2  NULLS LAST, (+ (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))) ASC  NULLS LAST, 'wB<ï³w~^'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ('-2140572745' COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c2, (x'7a00' IN ()) ASC, rt0.c2  NULLS LAST, (+ (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))) ASC  NULLS LAST, 'wB<ï³w~^'  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((+ ('-2140572745' COLLATE NOCASE))) ORDER BY rt0.c2, (x'7a00' IN ()) ASC, rt0.c2  NULLS LAST, (+ (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))) ASC  NULLS LAST, 'wB<ï³w~^'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ('-2140572745' COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c2, (x'7a00' IN ()) ASC, rt0.c2  NULLS LAST, (+ (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))) ASC  NULLS LAST, 'wB<ï³w~^'  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((+ ('-2140572745' COLLATE NOCASE))) ORDER BY rt0.c2, (x'7a00' IN ()) ASC, rt0.c2  NULLS LAST, (+ (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))) ASC  NULLS LAST, 'wB<ï³w~^'  NULLS LAST;
SELECT * FROM vt0 WHERE (((((INSTR(vt0.c0, NULL))OR(((vt0.c0)>=(0x66cbd728)))))AND(((vt0.c0)%('798262294')))));
SELECT SUM(count) FROM (SELECT ((((((INSTR(vt0.c0, NULL))OR(((vt0.c0)>=(0X66cbd728)))))AND(((vt0.c0)%('798262294'))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((INSTR(vt0.c0, NULL))OR(((vt0.c0)>=(0x66cbd728)))))AND(((vt0.c0)%('798262294')))));
SELECT SUM(count) FROM (SELECT ((((((INSTR(vt0.c0, NULL))OR(((vt0.c0)>=(0X66cbd728)))))AND(((vt0.c0)%('798262294'))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((INSTR(vt0.c0, NULL))OR(((vt0.c0)>=(0x66cbd728)))))AND(((vt0.c0)%('798262294')))));
SELECT COUNT(*) FROM rt0 NOT INDEXED NATURAL JOIN vt0 WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN (((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c2))) AND (vt0.c0 COLLATE RTRIM))) ORDER BY UPPER(((rt0.c1) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) NOT BETWEEN (((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c2))) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY UPPER(((rt0.c1) NOTNULL)));
SELECT COUNT(*) FROM rt0 NOT INDEXED NATURAL JOIN vt0 WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN (((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c2))) AND (vt0.c0 COLLATE RTRIM))) ORDER BY UPPER(((rt0.c1) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) NOT BETWEEN (((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c2))) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY UPPER(((rt0.c1) NOTNULL)));
SELECT COUNT(*) FROM rt0 NOT INDEXED NATURAL JOIN vt0 WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN (((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c2))) AND (vt0.c0 COLLATE RTRIM))) ORDER BY UPPER(((rt0.c1) NOTNULL));
SELECT ALL * FROM vt0, rt0 WHERE (NULL) ORDER BY ((((((((vt0.c0)OR(rt0.c0)))OR(vt0.c0)))AND((rt0.c1 IN ()))))OR((NULL IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((vt0.c0)OR(rt0.c0)))OR(vt0.c0)))AND((rt0.c1 IN ()))))OR((NULL IN ()))) ASC);
SELECT ALL * FROM vt0, rt0 WHERE (NULL) ORDER BY ((((((((vt0.c0)OR(rt0.c0)))OR(vt0.c0)))AND((rt0.c1 IN ()))))OR((NULL IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((vt0.c0)OR(rt0.c0)))OR(vt0.c0)))AND((rt0.c1 IN ()))))OR((NULL IN ()))) ASC);
SELECT ALL * FROM vt0, rt0 WHERE (NULL) ORDER BY ((((((((vt0.c0)OR(rt0.c0)))OR(vt0.c0)))AND((rt0.c1 IN ()))))OR((NULL IN ()))) ASC;
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((((0xffffffffac4e250f, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0)/(vt0.c0)))) AND (((~ (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, x'')))) ORDER BY (((vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0))) NOT BETWEEN (vt0.c0) AND (vt0.c0 COLLATE BINARY)) DESC, (((- (vt0.c0)))<(((vt0.c0)<<(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((((0xffffffffac4e250f, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0)/(vt0.c0)))) AND (((~ (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, x'')))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0))) NOT BETWEEN (vt0.c0) AND (vt0.c0 COLLATE BINARY)) DESC, (((- (vt0.c0)))<(((vt0.c0)<<(vt0.c0)))));
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((((0xffffffffac4e250f, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0)/(vt0.c0)))) AND (((~ (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, x'')))) ORDER BY (((vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0))) NOT BETWEEN (vt0.c0) AND (vt0.c0 COLLATE BINARY)) DESC, (((- (vt0.c0)))<(((vt0.c0)<<(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((((0xffffffffac4e250f, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0)/(vt0.c0)))) AND (((~ (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, x'')))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0))) NOT BETWEEN (vt0.c0) AND (vt0.c0 COLLATE BINARY)) DESC, (((- (vt0.c0)))<(((vt0.c0)<<(vt0.c0)))));
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((((0xffffffffac4e250f, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0)/(vt0.c0)))) AND (((~ (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, x'')))) ORDER BY (((vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0))) NOT BETWEEN (vt0.c0) AND (vt0.c0 COLLATE BINARY)) DESC, (((- (vt0.c0)))<(((vt0.c0)<<(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)))OR(UNLIKELY(rt0.c1))))AND(CASE WHEN vt0.c0 THEN rt0.c0 END)))AND(((vt0.c0) ISNULL))))AND(((rt0.c0) BETWEEN ('1813899334') AND (rt0.c1)))) WHERE ((((rt0.c3) NOT BETWEEN (x'') AND (rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3) NOT BETWEEN (x'') AND (rt0.c3)) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)))OR(UNLIKELY(rt0.c1))))AND(CASE WHEN vt0.c0 THEN rt0.c0 END)))AND(((vt0.c0) ISNULL))))AND(((rt0.c0) BETWEEN ('1813899334') AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)))OR(UNLIKELY(rt0.c1))))AND(CASE WHEN vt0.c0 THEN rt0.c0 END)))AND(((vt0.c0) ISNULL))))AND(((rt0.c0) BETWEEN ('1813899334') AND (rt0.c1)))) WHERE ((((rt0.c3) NOT BETWEEN (x'') AND (rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3) NOT BETWEEN (x'') AND (rt0.c3)) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)))OR(UNLIKELY(rt0.c1))))AND(CASE WHEN vt0.c0 THEN rt0.c0 END)))AND(((vt0.c0) ISNULL))))AND(((rt0.c0) BETWEEN ('1813899334') AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)))OR(UNLIKELY(rt0.c1))))AND(CASE WHEN vt0.c0 THEN rt0.c0 END)))AND(((vt0.c0) ISNULL))))AND(((rt0.c0) BETWEEN ('1813899334') AND (rt0.c1)))) WHERE ((((rt0.c3) NOT BETWEEN (x'') AND (rt0.c3)) IN ()));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((-1.965399593E9 IN ())) ORDER BY (~ (-646840677))  NULLS LAST, (((rt0.c3, rt0.c0, rt0.c3)) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(rt0.c3)), (- (rt0.c1)), ((x'ca8b')IS NOT(rt0.c2)))) AND (((+ (vt0.c0)), rt0.c0, CAST(rt0.c0 AS TEXT)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((-1.965399593E9 IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY (~ (-646840677))  NULLS LAST, (((rt0.c3, rt0.c0, rt0.c3)) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(rt0.c3)), (- (rt0.c1)), ((x'ca8b')IS NOT(rt0.c2)))) AND (((+ (vt0.c0)), rt0.c0, CAST(rt0.c0 AS TEXT)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((-1.965399593E9 IN ())) ORDER BY (~ (-646840677))  NULLS LAST, (((rt0.c3, rt0.c0, rt0.c3)) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(rt0.c3)), (- (rt0.c1)), ((x'ca8b')IS NOT(rt0.c2)))) AND (((+ (vt0.c0)), rt0.c0, CAST(rt0.c0 AS TEXT)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((-1.965399593E9 IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY (~ (-646840677))  NULLS LAST, (((rt0.c3, rt0.c0, rt0.c3)) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(rt0.c3)), (- (rt0.c1)), ((x'ca8b')IS NOT(rt0.c2)))) AND (((+ (vt0.c0)), rt0.c0, CAST(rt0.c0 AS TEXT)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((-1.965399593E9 IN ())) ORDER BY (~ (-646840677))  NULLS LAST, (((rt0.c3, rt0.c0, rt0.c3)) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(rt0.c3)), (- (rt0.c1)), ((x'ca8b')IS NOT(rt0.c2)))) AND (((+ (vt0.c0)), rt0.c0, CAST(rt0.c0 AS TEXT)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1) ISNULL)) NOTNULL)) ORDER BY DATETIME(((vt0.c0) NOTNULL), ((vt0.c0) IS TRUE), (+ (vt0.c0)), ((rt0.c1)OR(rt0.c2)), vt0.c0 COLLATE NOCASE, (((rt0.c0, x'', rt0.c1))>((rt0.c2, 0x1a320db2, rt0.c2))), UNLIKELY(rt0.c0));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) ISNULL)) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY DATETIME(((vt0.c0) NOTNULL), ((vt0.c0) IS TRUE), (+ (vt0.c0)), ((rt0.c1)OR(rt0.c2)), vt0.c0 COLLATE NOCASE, (((rt0.c0, x'', rt0.c1))>((rt0.c2, 0X1a320db2, rt0.c2))), UNLIKELY(rt0.c0)));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1) ISNULL)) NOTNULL)) ORDER BY DATETIME(((vt0.c0) NOTNULL), ((vt0.c0) IS TRUE), (+ (vt0.c0)), ((rt0.c1)OR(rt0.c2)), vt0.c0 COLLATE NOCASE, (((rt0.c0, x'', rt0.c1))>((rt0.c2, 0x1a320db2, rt0.c2))), UNLIKELY(rt0.c0));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) ISNULL)) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY DATETIME(((vt0.c0) NOTNULL), ((vt0.c0) IS TRUE), (+ (vt0.c0)), ((rt0.c1)OR(rt0.c2)), vt0.c0 COLLATE NOCASE, (((rt0.c0, x'', rt0.c1))>((rt0.c2, 0X1a320db2, rt0.c2))), UNLIKELY(rt0.c0)));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1) ISNULL)) NOTNULL)) ORDER BY DATETIME(((vt0.c0) NOTNULL), ((vt0.c0) IS TRUE), (+ (vt0.c0)), ((rt0.c1)OR(rt0.c2)), vt0.c0 COLLATE NOCASE, (((rt0.c0, x'', rt0.c1))>((rt0.c2, 0x1a320db2, rt0.c2))), UNLIKELY(rt0.c0));
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2) NOTNULL))AND(((rt0.c2)||(rt0.c3)))))AND((rt0.c1 IN ()))))AND(((rt0.c0)/(rt0.c3)))))AND((NOT (0.7803649950850845))))) ORDER BY (~ (0.3582321403772285));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2) NOTNULL))AND(((rt0.c2)||(rt0.c3)))))AND((rt0.c1 IN ()))))AND(((rt0.c0)/(rt0.c3)))))AND((NOT (0.7803649950850845))))) IS TRUE)  as count FROM rt0 ORDER BY (~ (0.3582321403772285)));
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2) NOTNULL))AND(((rt0.c2)||(rt0.c3)))))AND((rt0.c1 IN ()))))AND(((rt0.c0)/(rt0.c3)))))AND((NOT (0.7803649950850845))))) ORDER BY (~ (0.3582321403772285));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2) NOTNULL))AND(((rt0.c2)||(rt0.c3)))))AND((rt0.c1 IN ()))))AND(((rt0.c0)/(rt0.c3)))))AND((NOT (0.7803649950850845))))) IS TRUE)  as count FROM rt0 ORDER BY (~ (0.3582321403772285)));
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2) NOTNULL))AND(((rt0.c2)||(rt0.c3)))))AND((rt0.c1 IN ()))))AND(((rt0.c0)/(rt0.c3)))))AND((NOT (0.7803649950850845))))) ORDER BY (~ (0.3582321403772285));
SELECT COUNT(*) FROM vt0 WHERE ((~ ((+ (vt0.c0))))) ORDER BY ((TRIM(vt0.c0)) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((TRIM(vt0.c0)) IS FALSE));
SELECT COUNT(*) FROM vt0 WHERE ((~ ((+ (vt0.c0))))) ORDER BY ((TRIM(vt0.c0)) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((TRIM(vt0.c0)) IS FALSE));
SELECT COUNT(*) FROM vt0 WHERE ((~ ((+ (vt0.c0))))) ORDER BY ((TRIM(vt0.c0)) IS FALSE);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0))<>((vt0.c0))))!=(('K0ê©a}' IN ())))) ORDER BY (((vt0.c0))<=((2900622))) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))!=((vt0.c0))))!=(('K0ê©a}' IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0))<=((2900622))) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0))<>((vt0.c0))))!=(('K0ê©a}' IN ())))) ORDER BY (((vt0.c0))<=((2900622))) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))!=((vt0.c0))))!=(('K0ê©a}' IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0))<=((2900622))) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0))<>((vt0.c0))))!=(('K0ê©a}' IN ())))) ORDER BY (((vt0.c0))<=((2900622))) COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))<((((vt0.c0))<=((vt0.c0)))))) ORDER BY CASE WHEN CAST(vt0.c0 AS INTEGER) THEN x'56c6' WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt0.c0) IS FALSE) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER))<((((vt0.c0))<=((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CAST(vt0.c0 AS INTEGER) THEN x'56c6' WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt0.c0) IS FALSE) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END DESC);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))<((((vt0.c0))<=((vt0.c0)))))) ORDER BY CASE WHEN CAST(vt0.c0 AS INTEGER) THEN x'56c6' WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt0.c0) IS FALSE) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER))<((((vt0.c0))<=((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CAST(vt0.c0 AS INTEGER) THEN x'56c6' WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt0.c0) IS FALSE) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END DESC);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))<((((vt0.c0))<=((vt0.c0)))))) ORDER BY CASE WHEN CAST(vt0.c0 AS INTEGER) THEN x'56c6' WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt0.c0) IS FALSE) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END DESC;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((LIKELY(DISTINCT rt0.c2)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((LIKELY(DISTINCT rt0.c2)) IS TRUE)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((LIKELY(DISTINCT rt0.c2)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((LIKELY(DISTINCT rt0.c2)) IS TRUE)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((LIKELY(DISTINCT rt0.c2)) IS TRUE));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 AS TEXT) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 AS TEXT) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 AS TEXT) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 WHERE (((((NULL)||(vt0.c0))) BETWEEN ((vt0.c0 IN (vt0.c0))) AND ('?k'))) ORDER BY HEX(DISTINCT ((((((((vt0.c0)AND(NULL)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) ASC, ((vt0.c0) IS FALSE)  NULLS LAST, (('-1048531320')<(((vt0.c0)<(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((NULL)||(vt0.c0))) BETWEEN ((vt0.c0 IN (vt0.c0))) AND ('?k'))) IS TRUE)  as count FROM vt0 ORDER BY HEX(DISTINCT ((((((((vt0.c0)AND(NULL)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) ASC, ((vt0.c0) IS FALSE)  NULLS LAST, (('-1048531320')<(((vt0.c0)<(vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((NULL)||(vt0.c0))) BETWEEN ((vt0.c0 IN (vt0.c0))) AND ('?k'))) ORDER BY HEX(DISTINCT ((((((((vt0.c0)AND(NULL)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) ASC, ((vt0.c0) IS FALSE)  NULLS LAST, (('-1048531320')<(((vt0.c0)<(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((NULL)||(vt0.c0))) BETWEEN ((vt0.c0 IN (vt0.c0))) AND ('?k'))) IS TRUE)  as count FROM vt0 ORDER BY HEX(DISTINCT ((((((((vt0.c0)AND(NULL)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) ASC, ((vt0.c0) IS FALSE)  NULLS LAST, (('-1048531320')<(((vt0.c0)<(vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((NULL)||(vt0.c0))) BETWEEN ((vt0.c0 IN (vt0.c0))) AND ('?k'))) ORDER BY HEX(DISTINCT ((((((((vt0.c0)AND(NULL)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) ASC, ((vt0.c0) IS FALSE)  NULLS LAST, (('-1048531320')<(((vt0.c0)<(vt0.c0)))) DESC;
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (TRIM(HEX(DISTINCT rt0.c3)));
SELECT SUM(count) FROM (SELECT ((TRIM(HEX(DISTINCT rt0.c3))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (TRIM(HEX(DISTINCT rt0.c3)));
SELECT SUM(count) FROM (SELECT ((TRIM(HEX(DISTINCT rt0.c3))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (TRIM(HEX(DISTINCT rt0.c3)));
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE rt0.c0  WHEN TIME(rt0.c0, rt0.c0, rt0.c0) THEN ((vt0.c0) IS FALSE) ELSE CASE WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c0  WHEN TIME(rt0.c0, rt0.c0, rt0.c0) THEN ((vt0.c0) IS FALSE) ELSE CASE WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE rt0.c0  WHEN TIME(rt0.c0, rt0.c0, rt0.c0) THEN ((vt0.c0) IS FALSE) ELSE CASE WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c0  WHEN TIME(rt0.c0, rt0.c0, rt0.c0) THEN ((vt0.c0) IS FALSE) ELSE CASE WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE rt0.c0  WHEN TIME(rt0.c0, rt0.c0, rt0.c0) THEN ((vt0.c0) IS FALSE) ELSE CASE WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END END);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((SQLITE_COMPILEOPTION_USED(vt0.c0) IN ())) ORDER BY (((NULL))>=((vt0.c0))) COLLATE RTRIM ASC, (((rt0.c0))<=((((vt0.c0)%(rt0.c3))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((SQLITE_COMPILEOPTION_USED(vt0.c0) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((NULL))>=((vt0.c0))) COLLATE RTRIM ASC, (((rt0.c0))<=((((vt0.c0)%(rt0.c3))))) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((SQLITE_COMPILEOPTION_USED(vt0.c0) IN ())) ORDER BY (((NULL))>=((vt0.c0))) COLLATE RTRIM ASC, (((rt0.c0))<=((((vt0.c0)%(rt0.c3))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((SQLITE_COMPILEOPTION_USED(vt0.c0) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((NULL))>=((vt0.c0))) COLLATE RTRIM ASC, (((rt0.c0))<=((((vt0.c0)%(rt0.c3))))) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((SQLITE_COMPILEOPTION_USED(vt0.c0) IN ())) ORDER BY (((NULL))>=((vt0.c0))) COLLATE RTRIM ASC, (((rt0.c0))<=((((vt0.c0)%(rt0.c3))))) DESC;
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN 0xffffffff83afc635 THEN rt0.c0 END AS TEXT)) ORDER BY '0.13520350457047536';
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN 0xffffffff83afc635 THEN rt0.c0 END AS TEXT)) IS TRUE)  as count FROM rt0, vt0 ORDER BY '0.13520350457047536');
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN 0xffffffff83afc635 THEN rt0.c0 END AS TEXT)) ORDER BY '0.13520350457047536';
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN 0xffffffff83afc635 THEN rt0.c0 END AS TEXT)) IS TRUE)  as count FROM rt0, vt0 ORDER BY '0.13520350457047536');
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN 0xffffffff83afc635 THEN rt0.c0 END AS TEXT)) ORDER BY '0.13520350457047536';
SELECT ALL * FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((((((((vt0.c0))!=(('-1604059875'))))OR(vt0.c0)))AND(TRIM(DISTINCT vt0.c0))))AND(((vt0.c0) IS FALSE))))OR(CAST(vt0.c0 AS INTEGER))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY UPPER(DISTINCT ((vt0.c0)>>(0.7903185176068395))) DESC, vt0.c0 ASC, ((vt0.c0) IS TRUE) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((vt0.c0))<>(('-1604059875'))))OR(vt0.c0)))AND(TRIM(DISTINCT vt0.c0))))AND(((vt0.c0) IS FALSE))))OR(CAST(vt0.c0 AS INTEGER))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY UPPER(DISTINCT ((vt0.c0)>>(0.7903185176068395))) DESC, vt0.c0 ASC, ((vt0.c0) IS TRUE) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((((((((vt0.c0))!=(('-1604059875'))))OR(vt0.c0)))AND(TRIM(DISTINCT vt0.c0))))AND(((vt0.c0) IS FALSE))))OR(CAST(vt0.c0 AS INTEGER))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY UPPER(DISTINCT ((vt0.c0)>>(0.7903185176068395))) DESC, vt0.c0 ASC, ((vt0.c0) IS TRUE) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((vt0.c0))<>(('-1604059875'))))OR(vt0.c0)))AND(TRIM(DISTINCT vt0.c0))))AND(((vt0.c0) IS FALSE))))OR(CAST(vt0.c0 AS INTEGER))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY UPPER(DISTINCT ((vt0.c0)>>(0.7903185176068395))) DESC, vt0.c0 ASC, ((vt0.c0) IS TRUE) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((((((((vt0.c0))!=(('-1604059875'))))OR(vt0.c0)))AND(TRIM(DISTINCT vt0.c0))))AND(((vt0.c0) IS FALSE))))OR(CAST(vt0.c0 AS INTEGER))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY UPPER(DISTINCT ((vt0.c0)>>(0.7903185176068395))) DESC, vt0.c0 ASC, ((vt0.c0) IS TRUE) COLLATE NOCASE DESC;
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0))>=((vt0.c0))))<=(NULL))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))>=((vt0.c0))))<=(NULL))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0))>=((vt0.c0))))<=(NULL))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))>=((vt0.c0))))<=(NULL))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0))>=((vt0.c0))))<=(NULL))) ORDER BY vt0.c0  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((vt0.c0)+(0X457ceadb)))<<(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)+(0x457ceadb)))<<(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)+(0X457ceadb)))<<(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)+(0x457ceadb)))<<(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)+(0X457ceadb)))<<(((vt0.c0) NOTNULL))));
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c2) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOTNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c2) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOTNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c2) NOTNULL));
SELECT ALL * FROM rt0 WHERE (LIKELIHOOD((('1782991735') BETWEEN (rt0.c2) AND (rt0.c3)), 0.9053585585448305));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((('1782991735') BETWEEN (rt0.c2) AND (rt0.c3)), 0.9053585585448305)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LIKELIHOOD((('1782991735') BETWEEN (rt0.c2) AND (rt0.c3)), 0.9053585585448305));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((('1782991735') BETWEEN (rt0.c2) AND (rt0.c3)), 0.9053585585448305)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LIKELIHOOD((('1782991735') BETWEEN (rt0.c2) AND (rt0.c3)), 0.9053585585448305));
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c0) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY NULL);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c0) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY NULL);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c0) ORDER BY NULL;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((CASE WHEN rt0.c3 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 END)))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((CASE WHEN rt0.c3 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 END)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY x'');
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((CASE WHEN rt0.c3 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 END)))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((CASE WHEN rt0.c3 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 END)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY x'');
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((CASE WHEN rt0.c3 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 END)))) ORDER BY x'';
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE ((((rt0.c0)OR(rt0.c0)))AND(rt0.c1))  WHEN CASE WHEN rt0.c2 THEN vt0.c0 END THEN (+ (rt0.c2)) ELSE (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt0.c0)OR(rt0.c0)))AND(rt0.c1))  WHEN CASE WHEN rt0.c2 THEN vt0.c0 END THEN (+ (rt0.c2)) ELSE (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) END) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE ((((rt0.c0)OR(rt0.c0)))AND(rt0.c1))  WHEN CASE WHEN rt0.c2 THEN vt0.c0 END THEN (+ (rt0.c2)) ELSE (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt0.c0)OR(rt0.c0)))AND(rt0.c1))  WHEN CASE WHEN rt0.c2 THEN vt0.c0 END THEN (+ (rt0.c2)) ELSE (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) END) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE ((((rt0.c0)OR(rt0.c0)))AND(rt0.c1))  WHEN CASE WHEN rt0.c2 THEN vt0.c0 END THEN (+ (rt0.c2)) ELSE (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) END);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (((((rt0.c1)%(rt0.c3))) NOT BETWEEN (LIKELY(DISTINCT rt0.c3)) AND (rt0.c0))) ORDER BY CAST(x'' AS REAL) DESC, x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)%(rt0.c3))) NOT BETWEEN (LIKELY(DISTINCT rt0.c3)) AND (rt0.c0))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY CAST(x'' AS REAL) DESC, x'' DESC);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (((((rt0.c1)%(rt0.c3))) NOT BETWEEN (LIKELY(DISTINCT rt0.c3)) AND (rt0.c0))) ORDER BY CAST(x'' AS REAL) DESC, x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)%(rt0.c3))) NOT BETWEEN (LIKELY(DISTINCT rt0.c3)) AND (rt0.c0))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY CAST(x'' AS REAL) DESC, x'' DESC);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (((((rt0.c1)%(rt0.c3))) NOT BETWEEN (LIKELY(DISTINCT rt0.c3)) AND (rt0.c0))) ORDER BY CAST(x'' AS REAL) DESC, x'' DESC;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3);
SELECT * FROM rt0, vt0 WHERE (CASE ((((((((rt0.c3)AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c1)))AND(vt0.c0))  WHEN 0Xffffffffd253e649 THEN 0.1920049618423596 ELSE ((rt0.c1) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((rt0.c3)AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c1)))AND(vt0.c0))  WHEN 0xffffffffd253e649 THEN 0.1920049618423596 ELSE ((rt0.c1) IS FALSE) END) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CASE ((((((((rt0.c3)AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c1)))AND(vt0.c0))  WHEN 0Xffffffffd253e649 THEN 0.1920049618423596 ELSE ((rt0.c1) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((rt0.c3)AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c1)))AND(vt0.c0))  WHEN 0xffffffffd253e649 THEN 0.1920049618423596 ELSE ((rt0.c1) IS FALSE) END) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CASE ((((((((rt0.c3)AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c1)))AND(vt0.c0))  WHEN 0Xffffffffd253e649 THEN 0.1920049618423596 ELSE ((rt0.c1) IS FALSE) END);
SELECT ALL * FROM rt0, vt0 WHERE (TYPEOF(rt0.c3) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((TYPEOF(rt0.c3) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (TYPEOF(rt0.c3) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((TYPEOF(rt0.c3) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (TYPEOF(rt0.c3) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 END) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 END) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) IS TRUE));
SELECT * FROM rt0 INNER JOIN vt0 ON (((vt0.c0)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((CAST(rt0.c1 AS REAL)))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((vt0.c0)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((CAST(rt0.c1 AS REAL)))));
SELECT * FROM rt0 INNER JOIN vt0 ON (((vt0.c0)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((CAST(rt0.c1 AS REAL)))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((vt0.c0)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((CAST(rt0.c1 AS REAL)))));
SELECT * FROM rt0 INNER JOIN vt0 ON (((vt0.c0)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((CAST(rt0.c1 AS REAL)))) WHERE (x'');
SELECT * FROM vt0, rt0 WHERE ((((vt0.c0, rt0.c2, NULL, rt0.c2, 0xffffffffdb977191)) BETWEEN ((rt0.c3, ('gS>5JA' IN (vt0.c0)), ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c0)), ((((rt0.c2)AND(rt0.c3)))OR(rt0.c1)))) AND ((vt0.c0, ((rt0.c0) IS FALSE), rt0.c1 COLLATE NOCASE, ((rt0.c1)OR(rt0.c1)), CASE WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, rt0.c2, NULL, rt0.c2, 0Xffffffffdb977191)) BETWEEN ((rt0.c3, ('gS>5JA' IN (vt0.c0)), ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c0)), ((((rt0.c2)AND(rt0.c3)))OR(rt0.c1)))) AND ((vt0.c0, ((rt0.c0) IS FALSE), rt0.c1 COLLATE NOCASE, ((rt0.c1)OR(rt0.c1)), CASE WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((vt0.c0, rt0.c2, NULL, rt0.c2, 0xffffffffdb977191)) BETWEEN ((rt0.c3, ('gS>5JA' IN (vt0.c0)), ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c0)), ((((rt0.c2)AND(rt0.c3)))OR(rt0.c1)))) AND ((vt0.c0, ((rt0.c0) IS FALSE), rt0.c1 COLLATE NOCASE, ((rt0.c1)OR(rt0.c1)), CASE WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, rt0.c2, NULL, rt0.c2, 0Xffffffffdb977191)) BETWEEN ((rt0.c3, ('gS>5JA' IN (vt0.c0)), ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c0)), ((((rt0.c2)AND(rt0.c3)))OR(rt0.c1)))) AND ((vt0.c0, ((rt0.c0) IS FALSE), rt0.c1 COLLATE NOCASE, ((rt0.c1)OR(rt0.c1)), CASE WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((vt0.c0, rt0.c2, NULL, rt0.c2, 0xffffffffdb977191)) BETWEEN ((rt0.c3, ('gS>5JA' IN (vt0.c0)), ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c0)), ((((rt0.c2)AND(rt0.c3)))OR(rt0.c1)))) AND ((vt0.c0, ((rt0.c0) IS FALSE), rt0.c1 COLLATE NOCASE, ((rt0.c1)OR(rt0.c1)), CASE WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END))));
SELECT ALL * FROM rt0, vt0 WHERE (((vt0.c0) NOT BETWEEN (rt0.c3) AND (CAST(rt0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (rt0.c3) AND (CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((vt0.c0) NOT BETWEEN (rt0.c3) AND (CAST(rt0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (rt0.c3) AND (CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((vt0.c0) NOT BETWEEN (rt0.c3) AND (CAST(rt0.c2 AS REAL))));
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3) IS FALSE)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3) IS FALSE)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3) IS FALSE)) NOTNULL));
SELECT * FROM vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END THEN (vt0.c0 IN ()) WHEN vt0.c0 COLLATE RTRIM THEN vt0.c0 COLLATE BINARY WHEN '544487214' THEN CAST(vt0.c0 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END THEN (vt0.c0 IN ()) WHEN vt0.c0 COLLATE RTRIM THEN vt0.c0 COLLATE BINARY WHEN '544487214' THEN CAST(vt0.c0 AS INTEGER) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END THEN (vt0.c0 IN ()) WHEN vt0.c0 COLLATE RTRIM THEN vt0.c0 COLLATE BINARY WHEN '544487214' THEN CAST(vt0.c0 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END THEN (vt0.c0 IN ()) WHEN vt0.c0 COLLATE RTRIM THEN vt0.c0 COLLATE BINARY WHEN '544487214' THEN CAST(vt0.c0 AS INTEGER) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END THEN (vt0.c0 IN ()) WHEN vt0.c0 COLLATE RTRIM THEN vt0.c0 COLLATE BINARY WHEN '544487214' THEN CAST(vt0.c0 AS INTEGER) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (TRIM(DISTINCT rtreenode(rt0.c2, rt0.c1), CASE rt0.c0  WHEN x'' THEN rt0.c3 END));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT rtreenode(rt0.c2, rt0.c1), CASE rt0.c0  WHEN x'' THEN rt0.c3 END)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (TRIM(DISTINCT rtreenode(rt0.c2, rt0.c1), CASE rt0.c0  WHEN x'' THEN rt0.c3 END));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT rtreenode(rt0.c2, rt0.c1), CASE rt0.c0  WHEN x'' THEN rt0.c3 END)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (TRIM(DISTINCT rtreenode(rt0.c2, rt0.c1), CASE rt0.c0  WHEN x'' THEN rt0.c3 END));
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c0) IS TRUE)))) ORDER BY ((ABS(DISTINCT rt0.c1)) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0 ORDER BY ((ABS(DISTINCT rt0.c1)) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c0) IS TRUE)))) ORDER BY ((ABS(DISTINCT rt0.c1)) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0 ORDER BY ((ABS(DISTINCT rt0.c1)) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c0) IS TRUE)))) ORDER BY ((ABS(DISTINCT rt0.c1)) IS FALSE)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (UNLIKELY(CASE vt0.c0  WHEN 0.4986715699254288 THEN vt0.c0 END)) ORDER BY (~ ((vt0.c0 IN ())))  NULLS FIRST, RTRIM(CAST(vt0.c0 AS INTEGER)) ASC  NULLS LAST, CAST(vt0.c0 AS NUMERIC) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(CASE vt0.c0  WHEN 0.4986715699254288 THEN vt0.c0 END)) IS TRUE)  as count FROM vt0 ORDER BY (~ ((vt0.c0 IN ())))  NULLS FIRST, RTRIM(CAST(vt0.c0 AS INTEGER)) ASC  NULLS LAST, CAST(vt0.c0 AS NUMERIC) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (UNLIKELY(CASE vt0.c0  WHEN 0.4986715699254288 THEN vt0.c0 END)) ORDER BY (~ ((vt0.c0 IN ())))  NULLS FIRST, RTRIM(CAST(vt0.c0 AS INTEGER)) ASC  NULLS LAST, CAST(vt0.c0 AS NUMERIC) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(CASE vt0.c0  WHEN 0.4986715699254288 THEN vt0.c0 END)) IS TRUE)  as count FROM vt0 ORDER BY (~ ((vt0.c0 IN ())))  NULLS FIRST, RTRIM(CAST(vt0.c0 AS INTEGER)) ASC  NULLS LAST, CAST(vt0.c0 AS NUMERIC) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (UNLIKELY(CASE vt0.c0  WHEN 0.4986715699254288 THEN vt0.c0 END)) ORDER BY (~ ((vt0.c0 IN ())))  NULLS FIRST, RTRIM(CAST(vt0.c0 AS INTEGER)) ASC  NULLS LAST, CAST(vt0.c0 AS NUMERIC) COLLATE BINARY DESC;
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))GLOB(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))GLOB(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))GLOB(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))GLOB(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))GLOB(CAST(vt0.c0 AS TEXT))));
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0) IS TRUE)))) ORDER BY ((((((((((vt0.c0)+(vt0.c0)))OR(((vt0.c0)<=(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)))AND(vt0.c0)))OR(((vt0.c0) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)+(vt0.c0)))OR(((vt0.c0)<=(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)))AND(vt0.c0)))OR(((vt0.c0) ISNULL))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0) IS TRUE)))) ORDER BY ((((((((((vt0.c0)+(vt0.c0)))OR(((vt0.c0)<=(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)))AND(vt0.c0)))OR(((vt0.c0) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)+(vt0.c0)))OR(((vt0.c0)<=(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)))AND(vt0.c0)))OR(((vt0.c0) ISNULL))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0) IS TRUE)))) ORDER BY ((((((((((vt0.c0)+(vt0.c0)))OR(((vt0.c0)<=(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)))AND(vt0.c0)))OR(((vt0.c0) ISNULL))) DESC;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c1)OR(rt0.c3)))OR(rt0.c2))) IS TRUE)) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c0 DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c1)OR(rt0.c3)))OR(rt0.c2))) IS TRUE)) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c0 DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c1)OR(rt0.c3)))OR(rt0.c2))) IS TRUE)) ORDER BY vt0.c0 DESC;
SELECT ALL * FROM rt0 WHERE (((IFNULL(DISTINCT rt0.c2, rt0.c2)) BETWEEN ((- (rt0.c2))) AND (((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c0))))) ORDER BY CAST(((rt0.c3) NOTNULL) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT rt0.c2, rt0.c2)) BETWEEN ((- (rt0.c2))) AND (((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c3) NOTNULL) AS TEXT));
SELECT ALL * FROM rt0 WHERE (((IFNULL(DISTINCT rt0.c2, rt0.c2)) BETWEEN ((- (rt0.c2))) AND (((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c0))))) ORDER BY CAST(((rt0.c3) NOTNULL) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT rt0.c2, rt0.c2)) BETWEEN ((- (rt0.c2))) AND (((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c3) NOTNULL) AS TEXT));
SELECT ALL * FROM rt0 WHERE (((IFNULL(DISTINCT rt0.c2, rt0.c2)) BETWEEN ((- (rt0.c2))) AND (((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c0))))) ORDER BY CAST(((rt0.c3) NOTNULL) AS TEXT);
SELECT ALL * FROM vt0 WHERE ((((((('oè¡¨')AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (DATETIME(vt0.c0, vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((('oè¡¨')AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (DATETIME(vt0.c0, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((('oè¡¨')AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (DATETIME(vt0.c0, vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((('oè¡¨')AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (DATETIME(vt0.c0, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((('oè¡¨')AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (DATETIME(vt0.c0, vt0.c0, vt0.c0))));
SELECT ALL * FROM vt0, rt0 WHERE ((PRINTF(rt0.c0, rt0.c1, vt0.c0) IN ())) ORDER BY (vt0.c0 COLLATE BINARY IN (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3)))), NULL;
SELECT SUM(count) FROM (SELECT ALL (((PRINTF(rt0.c0, rt0.c1, vt0.c0) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY (vt0.c0 COLLATE BINARY IN (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3)))), NULL);
SELECT ALL * FROM vt0, rt0 WHERE ((PRINTF(rt0.c0, rt0.c1, vt0.c0) IN ())) ORDER BY (vt0.c0 COLLATE BINARY IN (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3)))), NULL;
SELECT SUM(count) FROM (SELECT ALL (((PRINTF(rt0.c0, rt0.c1, vt0.c0) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY (vt0.c0 COLLATE BINARY IN (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3)))), NULL);
SELECT ALL * FROM vt0, rt0 WHERE ((PRINTF(rt0.c0, rt0.c1, vt0.c0) IN ())) ORDER BY (vt0.c0 COLLATE BINARY IN (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3)))), NULL;
SELECT * FROM vt0 WHERE (CASE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))  WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN CAST(vt0.c0 AS REAL) WHEN ((vt0.c0)=(vt0.c0)) THEN (~ (vt0.c0)) WHEN vt0.c0 THEN ((vt0.c0)<=(vt0.c0)) ELSE (vt0.c0 IN (vt0.c0, vt0.c0)) END) ORDER BY x'c820' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))  WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN CAST(vt0.c0 AS REAL) WHEN ((vt0.c0)==(vt0.c0)) THEN (~ (vt0.c0)) WHEN vt0.c0 THEN ((vt0.c0)<=(vt0.c0)) ELSE (vt0.c0 IN (vt0.c0, vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY x'c820' DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))  WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN CAST(vt0.c0 AS REAL) WHEN ((vt0.c0)=(vt0.c0)) THEN (~ (vt0.c0)) WHEN vt0.c0 THEN ((vt0.c0)<=(vt0.c0)) ELSE (vt0.c0 IN (vt0.c0, vt0.c0)) END) ORDER BY x'c820' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))  WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN CAST(vt0.c0 AS REAL) WHEN ((vt0.c0)==(vt0.c0)) THEN (~ (vt0.c0)) WHEN vt0.c0 THEN ((vt0.c0)<=(vt0.c0)) ELSE (vt0.c0 IN (vt0.c0, vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY x'c820' DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))  WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN CAST(vt0.c0 AS REAL) WHEN ((vt0.c0)=(vt0.c0)) THEN (~ (vt0.c0)) WHEN vt0.c0 THEN ((vt0.c0)<=(vt0.c0)) ELSE (vt0.c0 IN (vt0.c0, vt0.c0)) END) ORDER BY x'c820' DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0))>=((vt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0))>=((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0))>=((vt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0))>=((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0))>=((vt0.c0))) IN ()));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c3) NOT NULL)) BETWEEN ((((rt0.c2))<>((rt0.c2)))) AND (rt0.c1))) ORDER BY CASE WHEN vt0.c0 THEN TRIM(DISTINCT rt0.c1, rt0.c2) WHEN (+ (rt0.c1)) THEN CAST(rt0.c2 AS NUMERIC) WHEN ((((rt0.c1)OR(rt0.c3)))AND(rt0.c2)) THEN ((((((((rt0.c3)AND(rt0.c1)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c0)) ELSE ((rt0.c0) NOTNULL) END, LIKELY(DISTINCT -1.995129557E9) ASC, CASE CAST(vt0.c0 AS REAL)  WHEN (((rt0.c2, vt0.c0, rt0.c2))>((rt0.c3, rt0.c1, 0.7234338500310071))) THEN rt0.c3 COLLATE RTRIM WHEN vt0.c0 COLLATE NOCASE THEN rt0.c3 COLLATE NOCASE WHEN x'e67c2e4f' THEN CAST(vt0.c0 AS INTEGER) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOT NULL)) BETWEEN ((((rt0.c2))<>((rt0.c2)))) AND (rt0.c1))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN vt0.c0 THEN TRIM(DISTINCT rt0.c1, rt0.c2) WHEN (+ (rt0.c1)) THEN CAST(rt0.c2 AS NUMERIC) WHEN ((((rt0.c1)OR(rt0.c3)))AND(rt0.c2)) THEN ((((((((rt0.c3)AND(rt0.c1)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c0)) ELSE ((rt0.c0) NOTNULL) END, LIKELY(DISTINCT -1.995129557E9) ASC, CASE CAST(vt0.c0 AS REAL)  WHEN (((rt0.c2, vt0.c0, rt0.c2))>((rt0.c3, rt0.c1, 0.7234338500310071))) THEN rt0.c3 COLLATE RTRIM WHEN vt0.c0 COLLATE NOCASE THEN rt0.c3 COLLATE NOCASE WHEN x'e67c2e4f' THEN CAST(vt0.c0 AS INTEGER) END DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c3) NOT NULL)) BETWEEN ((((rt0.c2))<>((rt0.c2)))) AND (rt0.c1))) ORDER BY CASE WHEN vt0.c0 THEN TRIM(DISTINCT rt0.c1, rt0.c2) WHEN (+ (rt0.c1)) THEN CAST(rt0.c2 AS NUMERIC) WHEN ((((rt0.c1)OR(rt0.c3)))AND(rt0.c2)) THEN ((((((((rt0.c3)AND(rt0.c1)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c0)) ELSE ((rt0.c0) NOTNULL) END, LIKELY(DISTINCT -1.995129557E9) ASC, CASE CAST(vt0.c0 AS REAL)  WHEN (((rt0.c2, vt0.c0, rt0.c2))>((rt0.c3, rt0.c1, 0.7234338500310071))) THEN rt0.c3 COLLATE RTRIM WHEN vt0.c0 COLLATE NOCASE THEN rt0.c3 COLLATE NOCASE WHEN x'e67c2e4f' THEN CAST(vt0.c0 AS INTEGER) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOT NULL)) BETWEEN ((((rt0.c2))<>((rt0.c2)))) AND (rt0.c1))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN vt0.c0 THEN TRIM(DISTINCT rt0.c1, rt0.c2) WHEN (+ (rt0.c1)) THEN CAST(rt0.c2 AS NUMERIC) WHEN ((((rt0.c1)OR(rt0.c3)))AND(rt0.c2)) THEN ((((((((rt0.c3)AND(rt0.c1)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c0)) ELSE ((rt0.c0) NOTNULL) END, LIKELY(DISTINCT -1.995129557E9) ASC, CASE CAST(vt0.c0 AS REAL)  WHEN (((rt0.c2, vt0.c0, rt0.c2))>((rt0.c3, rt0.c1, 0.7234338500310071))) THEN rt0.c3 COLLATE RTRIM WHEN vt0.c0 COLLATE NOCASE THEN rt0.c3 COLLATE NOCASE WHEN x'e67c2e4f' THEN CAST(vt0.c0 AS INTEGER) END DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c3) NOT NULL)) BETWEEN ((((rt0.c2))<>((rt0.c2)))) AND (rt0.c1))) ORDER BY CASE WHEN vt0.c0 THEN TRIM(DISTINCT rt0.c1, rt0.c2) WHEN (+ (rt0.c1)) THEN CAST(rt0.c2 AS NUMERIC) WHEN ((((rt0.c1)OR(rt0.c3)))AND(rt0.c2)) THEN ((((((((rt0.c3)AND(rt0.c1)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c0)) ELSE ((rt0.c0) NOTNULL) END, LIKELY(DISTINCT -1.995129557E9) ASC, CASE CAST(vt0.c0 AS REAL)  WHEN (((rt0.c2, vt0.c0, rt0.c2))>((rt0.c3, rt0.c1, 0.7234338500310071))) THEN rt0.c3 COLLATE RTRIM WHEN vt0.c0 COLLATE NOCASE THEN rt0.c3 COLLATE NOCASE WHEN x'e67c2e4f' THEN CAST(vt0.c0 AS INTEGER) END DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0) IS FALSE), (~ (vt0.c0)), ((vt0.c0)&(vt0.c0))))>((((vt0.c0)+(vt0.c0)), CAST(NULL AS INTEGER), ((vt0.c0)+(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) IS FALSE), (~ (vt0.c0)), ((vt0.c0)&(vt0.c0))))>((((vt0.c0)+(vt0.c0)), CAST(NULL AS INTEGER), ((vt0.c0)+(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0) IS FALSE), (~ (vt0.c0)), ((vt0.c0)&(vt0.c0))))>((((vt0.c0)+(vt0.c0)), CAST(NULL AS INTEGER), ((vt0.c0)+(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) IS FALSE), (~ (vt0.c0)), ((vt0.c0)&(vt0.c0))))>((((vt0.c0)+(vt0.c0)), CAST(NULL AS INTEGER), ((vt0.c0)+(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0) IS FALSE), (~ (vt0.c0)), ((vt0.c0)&(vt0.c0))))>((((vt0.c0)+(vt0.c0)), CAST(NULL AS INTEGER), ((vt0.c0)+(vt0.c0))))));
SELECT * FROM vt0 WHERE ('1271507726');
SELECT SUM(count) FROM (SELECT (('1271507726') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('1271507726');
SELECT SUM(count) FROM (SELECT (('1271507726') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('1271507726');
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0) BETWEEN ('-863720711') AND (vt0.c0))  WHEN ((vt0.c0)/(vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, NULL, vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) BETWEEN ('-863720711') AND (vt0.c0))  WHEN ((vt0.c0)/(vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, NULL, vt0.c0))) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0) BETWEEN ('-863720711') AND (vt0.c0))  WHEN ((vt0.c0)/(vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, NULL, vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) BETWEEN ('-863720711') AND (vt0.c0))  WHEN ((vt0.c0)/(vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, NULL, vt0.c0))) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0) BETWEEN ('-863720711') AND (vt0.c0))  WHEN ((vt0.c0)/(vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, NULL, vt0.c0))) END);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN (rt0.c2 IN ('-2145275943')) THEN rt0.c3 ELSE ((rt0.c1)IS NOT(rt0.c1)) END) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c2 IN ('-2145275943')) THEN rt0.c3 ELSE ((rt0.c1)IS NOT(rt0.c1)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c2 ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN (rt0.c2 IN ('-2145275943')) THEN rt0.c3 ELSE ((rt0.c1)IS NOT(rt0.c1)) END) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c2 IN ('-2145275943')) THEN rt0.c3 ELSE ((rt0.c1)IS NOT(rt0.c1)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c2 ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN (rt0.c2 IN ('-2145275943')) THEN rt0.c3 ELSE ((rt0.c1)IS NOT(rt0.c1)) END) ORDER BY rt0.c2 ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))>=(json_quote(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT))>=(json_quote(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))>=(json_quote(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT))>=(json_quote(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))>=(json_quote(vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CAST(rt0.c3 AS INTEGER))%(((((rt0.c0)OR(rt0.c3)))AND(rt0.c3))))) ORDER BY (((rt0.c0, vt0.c0, rt0.c2, rt0.c3, rt0.c3)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)), (((rt0.c3, rt0.c3, rt0.c1)) BETWEEN (('943753491', rt0.c1, vt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c3))), CAST(rt0.c0 AS REAL), CASE WHEN rt0.c0 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c1 END, ((rt0.c1)/(NULL)))) AND ((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 END, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), (rt0.c1 IN (rt0.c1)), (((rt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c3, NULL, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c0))), rt0.c1 COLLATE RTRIM))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS INTEGER))%(((((rt0.c0)OR(rt0.c3)))AND(rt0.c3))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c0, vt0.c0, rt0.c2, rt0.c3, rt0.c3)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)), (((rt0.c3, rt0.c3, rt0.c1)) BETWEEN (('943753491', rt0.c1, vt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c3))), CAST(rt0.c0 AS REAL), CASE WHEN rt0.c0 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c1 END, ((rt0.c1)/(NULL)))) AND ((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 END, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), (rt0.c1 IN (rt0.c1)), (((rt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c3, NULL, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c0))), rt0.c1 COLLATE RTRIM))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CAST(rt0.c3 AS INTEGER))%(((((rt0.c0)OR(rt0.c3)))AND(rt0.c3))))) ORDER BY (((rt0.c0, vt0.c0, rt0.c2, rt0.c3, rt0.c3)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)), (((rt0.c3, rt0.c3, rt0.c1)) BETWEEN (('943753491', rt0.c1, vt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c3))), CAST(rt0.c0 AS REAL), CASE WHEN rt0.c0 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c1 END, ((rt0.c1)/(NULL)))) AND ((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 END, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), (rt0.c1 IN (rt0.c1)), (((rt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c3, NULL, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c0))), rt0.c1 COLLATE RTRIM))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS INTEGER))%(((((rt0.c0)OR(rt0.c3)))AND(rt0.c3))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c0, vt0.c0, rt0.c2, rt0.c3, rt0.c3)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)), (((rt0.c3, rt0.c3, rt0.c1)) BETWEEN (('943753491', rt0.c1, vt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c3))), CAST(rt0.c0 AS REAL), CASE WHEN rt0.c0 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c1 END, ((rt0.c1)/(NULL)))) AND ((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 END, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), (rt0.c1 IN (rt0.c1)), (((rt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c3, NULL, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c0))), rt0.c1 COLLATE RTRIM))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CAST(rt0.c3 AS INTEGER))%(((((rt0.c0)OR(rt0.c3)))AND(rt0.c3))))) ORDER BY (((rt0.c0, vt0.c0, rt0.c2, rt0.c3, rt0.c3)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)), (((rt0.c3, rt0.c3, rt0.c1)) BETWEEN (('943753491', rt0.c1, vt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c3))), CAST(rt0.c0 AS REAL), CASE WHEN rt0.c0 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c1 END, ((rt0.c1)/(NULL)))) AND ((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 END, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), (rt0.c1 IN (rt0.c1)), (((rt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c3, NULL, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c0))), rt0.c1 COLLATE RTRIM))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) NOT BETWEEN (((rt0.c0)-(rt0.c3))) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) NOT BETWEEN (((rt0.c0)-(rt0.c3))) AND (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) NOT BETWEEN (((rt0.c0)-(rt0.c3))) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) NOT BETWEEN (((rt0.c0)-(rt0.c3))) AND (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) NOT BETWEEN (((rt0.c0)-(rt0.c3))) AND (rt0.c0)));
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)=(((rt0.c2)GLOB(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)==(((rt0.c2)GLOB(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)=(((rt0.c2)GLOB(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)==(((rt0.c2)GLOB(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)=(((rt0.c2)GLOB(rt0.c0)))));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((0.2431816921449158)OR(CASE WHEN rt0.c2 THEN rt0.c3 ELSE vt0.c0 END)))OR(rt0.c3)))AND(rt0.c2)))OR(TRIM(DISTINCT rt0.c1))) WHERE (NULLIF(rt0.c0 COLLATE NOCASE, CASE WHEN rt0.c2 THEN rt0.c3 END)) ORDER BY (((((((((('')OR(rt0.c1)))OR(rt0.c0)))AND(vt0.c0)))AND(rt0.c3))) BETWEEN (NULL) AND ((((rt0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c3)) NOT BETWEEN ((vt0.c0, vt0.c0, rt0.c3, rt0.c3, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c0, rt0.c3, rt0.c2))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF(rt0.c0 COLLATE NOCASE, CASE WHEN rt0.c2 THEN rt0.c3 END)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((0.2431816921449158)OR(CASE WHEN rt0.c2 THEN rt0.c3 ELSE vt0.c0 END)))OR(rt0.c3)))AND(rt0.c2)))OR(TRIM(DISTINCT rt0.c1))) ORDER BY (((((((((('')OR(rt0.c1)))OR(rt0.c0)))AND(vt0.c0)))AND(rt0.c3))) BETWEEN (NULL) AND ((((rt0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c3)) NOT BETWEEN ((vt0.c0, vt0.c0, rt0.c3, rt0.c3, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c0, rt0.c3, rt0.c2))))) DESC  NULLS LAST);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((0.2431816921449158)OR(CASE WHEN rt0.c2 THEN rt0.c3 ELSE vt0.c0 END)))OR(rt0.c3)))AND(rt0.c2)))OR(TRIM(DISTINCT rt0.c1))) WHERE (NULLIF(rt0.c0 COLLATE NOCASE, CASE WHEN rt0.c2 THEN rt0.c3 END)) ORDER BY (((((((((('')OR(rt0.c1)))OR(rt0.c0)))AND(vt0.c0)))AND(rt0.c3))) BETWEEN (NULL) AND ((((rt0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c3)) NOT BETWEEN ((vt0.c0, vt0.c0, rt0.c3, rt0.c3, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c0, rt0.c3, rt0.c2))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF(rt0.c0 COLLATE NOCASE, CASE WHEN rt0.c2 THEN rt0.c3 END)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((0.2431816921449158)OR(CASE WHEN rt0.c2 THEN rt0.c3 ELSE vt0.c0 END)))OR(rt0.c3)))AND(rt0.c2)))OR(TRIM(DISTINCT rt0.c1))) ORDER BY (((((((((('')OR(rt0.c1)))OR(rt0.c0)))AND(vt0.c0)))AND(rt0.c3))) BETWEEN (NULL) AND ((((rt0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c3)) NOT BETWEEN ((vt0.c0, vt0.c0, rt0.c3, rt0.c3, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c0, rt0.c3, rt0.c2))))) DESC  NULLS LAST);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((0.2431816921449158)OR(CASE WHEN rt0.c2 THEN rt0.c3 ELSE vt0.c0 END)))OR(rt0.c3)))AND(rt0.c2)))OR(TRIM(DISTINCT rt0.c1))) WHERE (NULLIF(rt0.c0 COLLATE NOCASE, CASE WHEN rt0.c2 THEN rt0.c3 END)) ORDER BY (((((((((('')OR(rt0.c1)))OR(rt0.c0)))AND(vt0.c0)))AND(rt0.c3))) BETWEEN (NULL) AND ((((rt0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c3)) NOT BETWEEN ((vt0.c0, vt0.c0, rt0.c3, rt0.c3, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c0, rt0.c3, rt0.c2))))) DESC  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE ((('O0') IS TRUE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((('O0') IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((('O0') IS TRUE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((('O0') IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((('O0') IS TRUE) COLLATE RTRIM);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ()))<(vt0.c0))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))<(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ()))<(vt0.c0))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))<(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ()))<(vt0.c0))) ORDER BY vt0.c0  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (ABS(DISTINCT ((rt0.c2)*(NULL)))) ORDER BY CAST(rt0.c0 COLLATE RTRIM AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT ((rt0.c2)*(NULL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(rt0.c0 COLLATE RTRIM AS BLOB) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (ABS(DISTINCT ((rt0.c2)*(NULL)))) ORDER BY CAST(rt0.c0 COLLATE RTRIM AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT ((rt0.c2)*(NULL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(rt0.c0 COLLATE RTRIM AS BLOB) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (ABS(DISTINCT ((rt0.c2)*(NULL)))) ORDER BY CAST(rt0.c0 COLLATE RTRIM AS BLOB) ASC;
SELECT COUNT(*) FROM vt0 WHERE ((((CAST(vt0.c0 AS REAL)))==((((vt0.c0) IS FALSE))))) ORDER BY (0.45329108542129204 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c0 AS REAL)))=((((vt0.c0) IS FALSE))))) IS TRUE)  as count FROM vt0 ORDER BY (0.45329108542129204 IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((CAST(vt0.c0 AS REAL)))==((((vt0.c0) IS FALSE))))) ORDER BY (0.45329108542129204 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c0 AS REAL)))=((((vt0.c0) IS FALSE))))) IS TRUE)  as count FROM vt0 ORDER BY (0.45329108542129204 IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((CAST(vt0.c0 AS REAL)))==((((vt0.c0) IS FALSE))))) ORDER BY (0.45329108542129204 IN ())  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE (((((rt0.c3 IN ())))=((vt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3 IN ())))=((vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c3 IN ())))=((vt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3 IN ())))=((vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c3 IN ())))=((vt0.c0 COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((((vt0.c0))<>((vt0.c0))))) AND (((vt0.c0 IN (vt0.c0)))))) ORDER BY LIKE((((vt0.c0))=((vt0.c0))), (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN (((((vt0.c0))!=((vt0.c0))))) AND (((vt0.c0 IN (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY LIKE((((vt0.c0))=((vt0.c0))), (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((((vt0.c0))<>((vt0.c0))))) AND (((vt0.c0 IN (vt0.c0)))))) ORDER BY LIKE((((vt0.c0))=((vt0.c0))), (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN (((((vt0.c0))!=((vt0.c0))))) AND (((vt0.c0 IN (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY LIKE((((vt0.c0))=((vt0.c0))), (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((((vt0.c0))<>((vt0.c0))))) AND (((vt0.c0 IN (vt0.c0)))))) ORDER BY LIKE((((vt0.c0))=((vt0.c0))), (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN rt0.c2 THEN '-379486188' END) ORDER BY (rt0.c1 IN ()) COLLATE NOCASE ASC  NULLS LAST, CASE CAST(rt0.c3 AS REAL)  WHEN (((rt0.c1)) NOT BETWEEN (('')) AND ((rt0.c2))) THEN ((rt0.c0)>=(rt0.c1)) ELSE (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c2 THEN '-379486188' END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (rt0.c1 IN ()) COLLATE NOCASE ASC  NULLS LAST, CASE CAST(rt0.c3 AS REAL)  WHEN (((rt0.c1)) NOT BETWEEN (('')) AND ((rt0.c2))) THEN ((rt0.c0)>=(rt0.c1)) ELSE (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) END  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN rt0.c2 THEN '-379486188' END) ORDER BY (rt0.c1 IN ()) COLLATE NOCASE ASC  NULLS LAST, CASE CAST(rt0.c3 AS REAL)  WHEN (((rt0.c1)) NOT BETWEEN (('')) AND ((rt0.c2))) THEN ((rt0.c0)>=(rt0.c1)) ELSE (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c2 THEN '-379486188' END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (rt0.c1 IN ()) COLLATE NOCASE ASC  NULLS LAST, CASE CAST(rt0.c3 AS REAL)  WHEN (((rt0.c1)) NOT BETWEEN (('')) AND ((rt0.c2))) THEN ((rt0.c0)>=(rt0.c1)) ELSE (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) END  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN rt0.c2 THEN '-379486188' END) ORDER BY (rt0.c1 IN ()) COLLATE NOCASE ASC  NULLS LAST, CASE CAST(rt0.c3 AS REAL)  WHEN (((rt0.c1)) NOT BETWEEN (('')) AND ((rt0.c2))) THEN ((rt0.c0)>=(rt0.c1)) ELSE (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) END  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (CAST(rt0.c1 COLLATE NOCASE AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(rt0.c1 COLLATE NOCASE AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(rt0.c1 COLLATE NOCASE AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3 IN ()))AND((rt0.c1 IN (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN ()))AND((rt0.c1 IN (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3 IN ()))AND((rt0.c1 IN (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN ()))AND((rt0.c1 IN (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3 IN ()))AND((rt0.c1 IN (rt0.c1)))));
SELECT * FROM rt0 WHERE ((((('-980660468') BETWEEN (rt0.c2) AND (rt0.c3)))>>(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((('-980660468') BETWEEN (rt0.c2) AND (rt0.c3)))>>(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((('-980660468') BETWEEN (rt0.c2) AND (rt0.c3)))>>(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((('-980660468') BETWEEN (rt0.c2) AND (rt0.c3)))>>(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((('-980660468') BETWEEN (rt0.c2) AND (rt0.c3)))>>(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY ((rt0.c1)||(rt0.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)||(rt0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY ((rt0.c1)||(rt0.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)||(rt0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY ((rt0.c1)||(rt0.c1)) COLLATE BINARY;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<=(LIKE('\mT-Ðå§¼kpB', vt0.c0, '<')))) ORDER BY (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<=(LIKE('\mT-Ðå§¼kpB', vt0.c0, '<')))) IS TRUE)  as count FROM vt0 ORDER BY (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN ()) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<=(LIKE('\mT-Ðå§¼kpB', vt0.c0, '<')))) ORDER BY (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<=(LIKE('\mT-Ðå§¼kpB', vt0.c0, '<')))) IS TRUE)  as count FROM vt0 ORDER BY (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN ()) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<=(LIKE('\mT-Ðå§¼kpB', vt0.c0, '<')))) ORDER BY (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN ()) ASC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((rt0.c3 IN ())) ORDER BY ((((rt0.c2)IS(rt0.c2)))=(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 END)) ASC, x'50b3' DESC  NULLS LAST, ((CAST(rt0.c0 AS BLOB)) NOT BETWEEN (json_array_length(rt0.c1, vt0.c0)) AND (CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c3 END)) ASC;
SELECT SUM(count) FROM (SELECT (((rt0.c3 IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2)IS(rt0.c2)))=(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 END)) ASC, x'50b3' DESC  NULLS LAST, ((CAST(rt0.c0 AS BLOB)) NOT BETWEEN (json_array_length(rt0.c1, vt0.c0)) AND (CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c3 END)) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((rt0.c3 IN ())) ORDER BY ((((rt0.c2)IS(rt0.c2)))=(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 END)) ASC, x'50b3' DESC  NULLS LAST, ((CAST(rt0.c0 AS BLOB)) NOT BETWEEN (json_array_length(rt0.c1, vt0.c0)) AND (CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c3 END)) ASC;
SELECT SUM(count) FROM (SELECT (((rt0.c3 IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2)IS(rt0.c2)))=(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 END)) ASC, x'50b3' DESC  NULLS LAST, ((CAST(rt0.c0 AS BLOB)) NOT BETWEEN (json_array_length(rt0.c1, vt0.c0)) AND (CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c3 END)) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((rt0.c3 IN ())) ORDER BY ((((rt0.c2)IS(rt0.c2)))=(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 END)) ASC, x'50b3' DESC  NULLS LAST, ((CAST(rt0.c0 AS BLOB)) NOT BETWEEN (json_array_length(rt0.c1, vt0.c0)) AND (CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c3 END)) ASC;
SELECT * FROM vt0 WHERE (ABS(0.39943118006263545) COLLATE BINARY) ORDER BY (((((NOT (vt0.c0)))OR(((vt0.c0) NOTNULL))))OR(((((((((vt0.c0)OR('-166723851')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((ABS(0.39943118006263545) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((((NOT (vt0.c0)))OR(((vt0.c0) NOTNULL))))OR(((((((((vt0.c0)OR('-166723851')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT * FROM vt0 WHERE (ABS(0.39943118006263545) COLLATE BINARY) ORDER BY (((((NOT (vt0.c0)))OR(((vt0.c0) NOTNULL))))OR(((((((((vt0.c0)OR('-166723851')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((ABS(0.39943118006263545) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((((NOT (vt0.c0)))OR(((vt0.c0) NOTNULL))))OR(((((((((vt0.c0)OR('-166723851')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT * FROM vt0 WHERE (ABS(0.39943118006263545) COLLATE BINARY) ORDER BY (((((NOT (vt0.c0)))OR(((vt0.c0) NOTNULL))))OR(((((((((vt0.c0)OR('-166723851')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))));
SELECT ALL * FROM rt0 WHERE (TRIM(CAST(rt0.c2 AS INTEGER), CAST(rt0.c3 AS INTEGER))) ORDER BY CASE LIKELIHOOD(rt0.c3, 0.3845500871592946)  WHEN rt0.c0 COLLATE NOCASE THEN ((rt0.c2)<<(rt0.c3)) END ASC, ((((rt0.c3)<=(rt0.c0)))%(((rt0.c1)/(rt0.c3)))), ((((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c3)))/(CAST(rt0.c1 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CAST(rt0.c2 AS INTEGER), CAST(rt0.c3 AS INTEGER))) IS TRUE)  as count FROM rt0 ORDER BY CASE LIKELIHOOD(rt0.c3, 0.3845500871592946)  WHEN rt0.c0 COLLATE NOCASE THEN ((rt0.c2)<<(rt0.c3)) END ASC, ((((rt0.c3)<=(rt0.c0)))%(((rt0.c1)/(rt0.c3)))), ((((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c3)))/(CAST(rt0.c1 AS BLOB))));
SELECT ALL * FROM rt0 WHERE (TRIM(CAST(rt0.c2 AS INTEGER), CAST(rt0.c3 AS INTEGER))) ORDER BY CASE LIKELIHOOD(rt0.c3, 0.3845500871592946)  WHEN rt0.c0 COLLATE NOCASE THEN ((rt0.c2)<<(rt0.c3)) END ASC, ((((rt0.c3)<=(rt0.c0)))%(((rt0.c1)/(rt0.c3)))), ((((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c3)))/(CAST(rt0.c1 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CAST(rt0.c2 AS INTEGER), CAST(rt0.c3 AS INTEGER))) IS TRUE)  as count FROM rt0 ORDER BY CASE LIKELIHOOD(rt0.c3, 0.3845500871592946)  WHEN rt0.c0 COLLATE NOCASE THEN ((rt0.c2)<<(rt0.c3)) END ASC, ((((rt0.c3)<=(rt0.c0)))%(((rt0.c1)/(rt0.c3)))), ((((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c3)))/(CAST(rt0.c1 AS BLOB))));
SELECT ALL * FROM rt0 WHERE (TRIM(CAST(rt0.c2 AS INTEGER), CAST(rt0.c3 AS INTEGER))) ORDER BY CASE LIKELIHOOD(rt0.c3, 0.3845500871592946)  WHEN rt0.c0 COLLATE NOCASE THEN ((rt0.c2)<<(rt0.c3)) END ASC, ((((rt0.c3)<=(rt0.c0)))%(((rt0.c1)/(rt0.c3)))), ((((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c3)))/(CAST(rt0.c1 AS BLOB)));
SELECT COUNT(*) FROM rt0 WHERE (((NULL) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((NULL) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((NULL) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((NULL) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((NULL) NOT NULL));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c1)AND(rt0.c0)))AND(vt0.c0))) NOT NULL)) ORDER BY ((((NOT (vt0.c0))))<((LIKE(670651940, 0.7163363166616733)))) DESC, (((rt0.c3 IN ()))+((((rt0.c1, vt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c3, rt0.c3)) AND ((rt0.c1, rt0.c3, rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)AND(rt0.c0)))AND(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((NOT (vt0.c0))))<((LIKE(670651940, 0.7163363166616733)))) DESC, (((rt0.c3 IN ()))+((((rt0.c1, vt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c3, rt0.c3)) AND ((rt0.c1, rt0.c3, rt0.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c1)AND(rt0.c0)))AND(vt0.c0))) NOT NULL)) ORDER BY ((((NOT (vt0.c0))))<((LIKE(670651940, 0.7163363166616733)))) DESC, (((rt0.c3 IN ()))+((((rt0.c1, vt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c3, rt0.c3)) AND ((rt0.c1, rt0.c3, rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)AND(rt0.c0)))AND(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((NOT (vt0.c0))))<((LIKE(670651940, 0.7163363166616733)))) DESC, (((rt0.c3 IN ()))+((((rt0.c1, vt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c3, rt0.c3)) AND ((rt0.c1, rt0.c3, rt0.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c1)AND(rt0.c0)))AND(vt0.c0))) NOT NULL)) ORDER BY ((((NOT (vt0.c0))))<((LIKE(670651940, 0.7163363166616733)))) DESC, (((rt0.c3 IN ()))+((((rt0.c1, vt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c3, rt0.c3)) AND ((rt0.c1, rt0.c3, rt0.c0))))) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2)) AS BLOB));
SELECT * FROM vt0 WHERE (CAST((((vt0.c0, vt0.c0, '2104470355'))<((vt0.c0, 0.3824422646529122, vt0.c0))) AS BLOB)) ORDER BY LIKELIHOOD((vt0.c0 IN (vt0.c0)), 0.7447570336364793) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0, vt0.c0, '2104470355'))<((vt0.c0, 0.3824422646529122, vt0.c0))) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD((vt0.c0 IN (vt0.c0)), 0.7447570336364793) ASC);
SELECT * FROM vt0 WHERE (CAST((((vt0.c0, vt0.c0, '2104470355'))<((vt0.c0, 0.3824422646529122, vt0.c0))) AS BLOB)) ORDER BY LIKELIHOOD((vt0.c0 IN (vt0.c0)), 0.7447570336364793) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0, vt0.c0, '2104470355'))<((vt0.c0, 0.3824422646529122, vt0.c0))) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD((vt0.c0 IN (vt0.c0)), 0.7447570336364793) ASC);
SELECT * FROM vt0 WHERE (CAST((((vt0.c0, vt0.c0, '2104470355'))<((vt0.c0, 0.3824422646529122, vt0.c0))) AS BLOB)) ORDER BY LIKELIHOOD((vt0.c0 IN (vt0.c0)), 0.7447570336364793) ASC;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((((rt0.c3)OR(rt0.c2)))OR(NULL)))AND(CASE WHEN NULL THEN rt0.c0 ELSE rt0.c2 END)))OR(((vt0.c0) NOTNULL)))) ORDER BY rt0.c0  NULLS LAST, CASE ((((((((NULL)AND(rt0.c3)))OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c2))  WHEN CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END THEN ((rt0.c1)-(rt0.c0)) ELSE ((rt0.c0) ISNULL) END;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c3)OR(rt0.c2)))OR(NULL)))AND(CASE WHEN NULL THEN rt0.c0 ELSE rt0.c2 END)))OR(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c0  NULLS LAST, CASE ((((((((NULL)AND(rt0.c3)))OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c2))  WHEN CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END THEN ((rt0.c1)-(rt0.c0)) ELSE ((rt0.c0) ISNULL) END);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((((rt0.c3)OR(rt0.c2)))OR(NULL)))AND(CASE WHEN NULL THEN rt0.c0 ELSE rt0.c2 END)))OR(((vt0.c0) NOTNULL)))) ORDER BY rt0.c0  NULLS LAST, CASE ((((((((NULL)AND(rt0.c3)))OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c2))  WHEN CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END THEN ((rt0.c1)-(rt0.c0)) ELSE ((rt0.c0) ISNULL) END;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c3)OR(rt0.c2)))OR(NULL)))AND(CASE WHEN NULL THEN rt0.c0 ELSE rt0.c2 END)))OR(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c0  NULLS LAST, CASE ((((((((NULL)AND(rt0.c3)))OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c2))  WHEN CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END THEN ((rt0.c1)-(rt0.c0)) ELSE ((rt0.c0) ISNULL) END);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((((rt0.c3)OR(rt0.c2)))OR(NULL)))AND(CASE WHEN NULL THEN rt0.c0 ELSE rt0.c2 END)))OR(((vt0.c0) NOTNULL)))) ORDER BY rt0.c0  NULLS LAST, CASE ((((((((NULL)AND(rt0.c3)))OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c2))  WHEN CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END THEN ((rt0.c1)-(rt0.c0)) ELSE ((rt0.c0) ISNULL) END;
SELECT * FROM rt0 WHERE (CASE ((-3.60888483E8)<<(rt0.c1))  WHEN CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN x'' WHEN rt0.c1 THEN rt0.c0 END THEN rt0.c3 ELSE ((rt0.c3)>=(rt0.c1)) END) ORDER BY LIKE(CAST(rt0.c1 AS REAL), ((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((-3.60888483E8)<<(rt0.c1))  WHEN CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN x'' WHEN rt0.c1 THEN rt0.c0 END THEN rt0.c3 ELSE ((rt0.c3)>=(rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY LIKE(CAST(rt0.c1 AS REAL), ((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))  NULLS FIRST);
SELECT * FROM rt0 WHERE (CASE ((-3.60888483E8)<<(rt0.c1))  WHEN CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN x'' WHEN rt0.c1 THEN rt0.c0 END THEN rt0.c3 ELSE ((rt0.c3)>=(rt0.c1)) END) ORDER BY LIKE(CAST(rt0.c1 AS REAL), ((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((-3.60888483E8)<<(rt0.c1))  WHEN CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN x'' WHEN rt0.c1 THEN rt0.c0 END THEN rt0.c3 ELSE ((rt0.c3)>=(rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY LIKE(CAST(rt0.c1 AS REAL), ((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))  NULLS FIRST);
SELECT * FROM rt0 WHERE (CASE ((-3.60888483E8)<<(rt0.c1))  WHEN CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN x'' WHEN rt0.c1 THEN rt0.c0 END THEN rt0.c3 ELSE ((rt0.c3)>=(rt0.c1)) END) ORDER BY LIKE(CAST(rt0.c1 AS REAL), ((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (vt0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (vt0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (vt0.c0 COLLATE BINARY);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c2)*(rt0.c2)))<>(((rt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)*(rt0.c2)))!=(((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c2)*(rt0.c2)))<>(((rt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)*(rt0.c2)))!=(((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c2)*(rt0.c2)))<>(((rt0.c1) NOTNULL))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN NULL THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'9e9e'))))) ORDER BY (('-218324472') NOTNULL);
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c2 THEN rt0.c0 WHEN NULL THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'9e9e'))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (('-218324472') NOTNULL));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN NULL THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'9e9e'))))) ORDER BY (('-218324472') NOTNULL);
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c2 THEN rt0.c0 WHEN NULL THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'9e9e'))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (('-218324472') NOTNULL));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN NULL THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'9e9e'))))) ORDER BY (('-218324472') NOTNULL);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))) IS TRUE)) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))) IS TRUE)) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))) IS TRUE));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0 IN ()))=(rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ()))==(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0 IN ()))=(rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ()))==(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0 IN ()))=(rt0.c1 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON CAST(((rt0.c0)>>(rt0.c2)) AS TEXT) WHERE (CAST(((rt0.c2)||(rt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)||(rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON CAST(((rt0.c0)>>(rt0.c2)) AS TEXT));
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON CAST(((rt0.c0)>>(rt0.c2)) AS TEXT) WHERE (CAST(((rt0.c2)||(rt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)||(rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON CAST(((rt0.c0)>>(rt0.c2)) AS TEXT));
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON CAST(((rt0.c0)>>(rt0.c2)) AS TEXT) WHERE (CAST(((rt0.c2)||(rt0.c2)) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0 WHERE (('' COLLATE NOCASE IN ((rt0.c1 IN ())))) ORDER BY CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END COLLATE BINARY, (((((((rt0.c2)OR(rt0.c3)))OR(rt0.c1))))>((((rt0.c3) NOT NULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((('' COLLATE NOCASE IN ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END COLLATE BINARY, (((((((rt0.c2)OR(rt0.c3)))OR(rt0.c1))))>((((rt0.c3) NOT NULL))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (('' COLLATE NOCASE IN ((rt0.c1 IN ())))) ORDER BY CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END COLLATE BINARY, (((((((rt0.c2)OR(rt0.c3)))OR(rt0.c1))))>((((rt0.c3) NOT NULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((('' COLLATE NOCASE IN ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END COLLATE BINARY, (((((((rt0.c2)OR(rt0.c3)))OR(rt0.c1))))>((((rt0.c3) NOT NULL))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (('' COLLATE NOCASE IN ((rt0.c1 IN ())))) ORDER BY CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END COLLATE BINARY, (((((((rt0.c2)OR(rt0.c3)))OR(rt0.c1))))>((((rt0.c3) NOT NULL))))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c3)) BETWEEN ((((rt0.c3) IS TRUE))) AND (((('bZ')>(rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) BETWEEN ((((rt0.c3) IS TRUE))) AND (((('bZ')>(rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c3)) BETWEEN ((((rt0.c3) IS TRUE))) AND (((('bZ')>(rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) BETWEEN ((((rt0.c3) IS TRUE))) AND (((('bZ')>(rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c3)) BETWEEN ((((rt0.c3) IS TRUE))) AND (((('bZ')>(rt0.c3))))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c0) ORDER BY (((((rt0.c3, rt0.c3, vt0.c0))<=((x'', vt0.c0, rt0.c1)))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3))) AND (CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)), CAST(rt0.c3 COLLATE NOCASE AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c3, rt0.c3, vt0.c0))<=((x'', vt0.c0, rt0.c1)))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3))) AND (CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)), CAST(rt0.c3 COLLATE NOCASE AS REAL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c0) ORDER BY (((((rt0.c3, rt0.c3, vt0.c0))<=((x'', vt0.c0, rt0.c1)))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3))) AND (CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)), CAST(rt0.c3 COLLATE NOCASE AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c3, rt0.c3, vt0.c0))<=((x'', vt0.c0, rt0.c1)))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3))) AND (CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)), CAST(rt0.c3 COLLATE NOCASE AS REAL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c0) ORDER BY (((((rt0.c3, rt0.c3, vt0.c0))<=((x'', vt0.c0, rt0.c1)))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3))) AND (CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)), CAST(rt0.c3 COLLATE NOCASE AS REAL) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((~ (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((~ (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((~ (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)))));
SELECT COUNT(*) FROM vt0 WHERE (((NULL)=(CASE vt0.c0  WHEN NULL THEN vt0.c0 WHEN 0.38735527412496107 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)==(CASE vt0.c0  WHEN NULL THEN vt0.c0 WHEN 0.38735527412496107 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((NULL)=(CASE vt0.c0  WHEN NULL THEN vt0.c0 WHEN 0.38735527412496107 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)==(CASE vt0.c0  WHEN NULL THEN vt0.c0 WHEN 0.38735527412496107 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((NULL)=(CASE vt0.c0  WHEN NULL THEN vt0.c0 WHEN 0.38735527412496107 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)LIKE(vt0.c0)))OR(json_array_length(vt0.c0))))AND(((vt0.c0)LIKE(vt0.c0)))))OR((+ (vt0.c0)))))OR(((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)LIKE(vt0.c0)))OR(json_array_length(vt0.c0))))AND(((vt0.c0)LIKE(vt0.c0)))))OR((+ (vt0.c0)))))OR(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)LIKE(vt0.c0)))OR(json_array_length(vt0.c0))))AND(((vt0.c0)LIKE(vt0.c0)))))OR((+ (vt0.c0)))))OR(((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)LIKE(vt0.c0)))OR(json_array_length(vt0.c0))))AND(((vt0.c0)LIKE(vt0.c0)))))OR((+ (vt0.c0)))))OR(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)LIKE(vt0.c0)))OR(json_array_length(vt0.c0))))AND(((vt0.c0)LIKE(vt0.c0)))))OR((+ (vt0.c0)))))OR(((vt0.c0) NOT NULL))));
SELECT * FROM vt0, rt0 WHERE (NULL) ORDER BY CASE WHEN (rt0.c0 IN ()) THEN (vt0.c0 IN ()) END ASC  NULLS FIRST, (+ (CAST(rt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN (rt0.c0 IN ()) THEN (vt0.c0 IN ()) END ASC  NULLS FIRST, (+ (CAST(rt0.c0 AS BLOB))));
SELECT * FROM vt0, rt0 WHERE (NULL) ORDER BY CASE WHEN (rt0.c0 IN ()) THEN (vt0.c0 IN ()) END ASC  NULLS FIRST, (+ (CAST(rt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN (rt0.c0 IN ()) THEN (vt0.c0 IN ()) END ASC  NULLS FIRST, (+ (CAST(rt0.c0 AS BLOB))));
SELECT * FROM vt0, rt0 WHERE (NULL) ORDER BY CASE WHEN (rt0.c0 IN ()) THEN (vt0.c0 IN ()) END ASC  NULLS FIRST, (+ (CAST(rt0.c0 AS BLOB)));
SELECT ALL * FROM rt0, vt0 WHERE ((((- (rt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((- (rt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((- (rt0.c1))) ISNULL));
SELECT COUNT(*) FROM rt0 WHERE (CAST((~ (x'')) AS INTEGER)) ORDER BY ((((rt0.c1)GLOB(rt0.c1)))+((- (rt0.c3)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((~ (x'')) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)GLOB(rt0.c1)))+((- (rt0.c3)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST((~ (x'')) AS INTEGER)) ORDER BY ((((rt0.c1)GLOB(rt0.c1)))+((- (rt0.c3)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((~ (x'')) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)GLOB(rt0.c1)))+((- (rt0.c3)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST((~ (x'')) AS INTEGER)) ORDER BY ((((rt0.c1)GLOB(rt0.c1)))+((- (rt0.c3)))) DESC  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c0)AND(rt0.c3)))*(((((rt0.c0)OR(rt0.c1)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(rt0.c3)))*(((((rt0.c0)OR(rt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c0)AND(rt0.c3)))*(((((rt0.c0)OR(rt0.c1)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(rt0.c3)))*(((((rt0.c0)OR(rt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c0)AND(rt0.c3)))*(((((rt0.c0)OR(rt0.c1)))AND(vt0.c0)))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON (~ ((((rt0.c3)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))))) WHERE ((NOT ((((rt0.c1))<((rt0.c1)))))) ORDER BY (('-2140572745')<<(((rt0.c1) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((((rt0.c1))<((rt0.c1)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (~ ((((rt0.c3)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))))) ORDER BY (('-2140572745')<<(((rt0.c1) NOTNULL)))  NULLS LAST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON (~ ((((rt0.c3)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))))) WHERE ((NOT ((((rt0.c1))<((rt0.c1)))))) ORDER BY (('-2140572745')<<(((rt0.c1) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((((rt0.c1))<((rt0.c1)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (~ ((((rt0.c3)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))))) ORDER BY (('-2140572745')<<(((rt0.c1) NOTNULL)))  NULLS LAST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON (~ ((((rt0.c3)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))))) WHERE ((NOT ((((rt0.c1))<((rt0.c1)))))) ORDER BY (('-2140572745')<<(((rt0.c1) NOTNULL)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c2)))OR('-983758592')))||(((rt0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c2)))OR('-983758592')))||(((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c2)))OR('-983758592')))||(((rt0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c2)))OR('-983758592')))||(((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c2)))OR('-983758592')))||(((rt0.c2) NOT NULL))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOTNULL))IS(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END))) ORDER BY rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOTNULL))IS(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOTNULL))IS(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END))) ORDER BY rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOTNULL))IS(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOTNULL))IS(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END))) ORDER BY rt0.c1 ASC;
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE ((((vt0.c0) IS TRUE) IN ())) ORDER BY vt0.c0, ((((rt0.c1)OR(((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))AND(load_extension(vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) IS TRUE) IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY vt0.c0, ((((rt0.c1)OR(((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))AND(load_extension(vt0.c0)))  NULLS FIRST);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE ((((vt0.c0) IS TRUE) IN ())) ORDER BY vt0.c0, ((((rt0.c1)OR(((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))AND(load_extension(vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) IS TRUE) IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY vt0.c0, ((((rt0.c1)OR(((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))AND(load_extension(vt0.c0)))  NULLS FIRST);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE ((((vt0.c0) IS TRUE) IN ())) ORDER BY vt0.c0, ((((rt0.c1)OR(((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))AND(load_extension(vt0.c0)))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (LIKELIHOOD((- (vt0.c0)), 0.2165395716868136)) ORDER BY ((((0.4187383816406499) NOT BETWEEN (rt0.c3) AND (rt0.c0)))||((- (rt0.c0))))  NULLS FIRST, (((rt0.c1)) BETWEEN (('-1495708601')) AND ((((rt0.c0)IS(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((- (vt0.c0)), 0.2165395716868136)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((0.4187383816406499) NOT BETWEEN (rt0.c3) AND (rt0.c0)))||((- (rt0.c0))))  NULLS FIRST, (((rt0.c1)) BETWEEN (('-1495708601')) AND ((((rt0.c0)IS(rt0.c2))))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (LIKELIHOOD((- (vt0.c0)), 0.2165395716868136)) ORDER BY ((((0.4187383816406499) NOT BETWEEN (rt0.c3) AND (rt0.c0)))||((- (rt0.c0))))  NULLS FIRST, (((rt0.c1)) BETWEEN (('-1495708601')) AND ((((rt0.c0)IS(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((- (vt0.c0)), 0.2165395716868136)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((0.4187383816406499) NOT BETWEEN (rt0.c3) AND (rt0.c0)))||((- (rt0.c0))))  NULLS FIRST, (((rt0.c1)) BETWEEN (('-1495708601')) AND ((((rt0.c0)IS(rt0.c2))))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (LIKELIHOOD((- (vt0.c0)), 0.2165395716868136)) ORDER BY ((((0.4187383816406499) NOT BETWEEN (rt0.c3) AND (rt0.c0)))||((- (rt0.c0))))  NULLS FIRST, (((rt0.c1)) BETWEEN (('-1495708601')) AND ((((rt0.c0)IS(rt0.c2)))));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON rt0.c2 WHERE (CAST(((vt0.c0) NOTNULL) AS INTEGER)) ORDER BY ((((((((((((rt0.c0)AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c0 COLLATE BINARY)))OR(CAST(rt0.c0 AS REAL))))AND(QUOTE(rt0.c2))))AND(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOTNULL) AS INTEGER)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON rt0.c2 ORDER BY ((((((((((((rt0.c0)AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c0 COLLATE BINARY)))OR(CAST(rt0.c0 AS REAL))))AND(QUOTE(rt0.c2))))AND(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3)))) DESC);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON rt0.c2 WHERE (CAST(((vt0.c0) NOTNULL) AS INTEGER)) ORDER BY ((((((((((((rt0.c0)AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c0 COLLATE BINARY)))OR(CAST(rt0.c0 AS REAL))))AND(QUOTE(rt0.c2))))AND(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOTNULL) AS INTEGER)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON rt0.c2 ORDER BY ((((((((((((rt0.c0)AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c0 COLLATE BINARY)))OR(CAST(rt0.c0 AS REAL))))AND(QUOTE(rt0.c2))))AND(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3)))) DESC);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON rt0.c2 WHERE (CAST(((vt0.c0) NOTNULL) AS INTEGER)) ORDER BY ((((((((((((rt0.c0)AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c0 COLLATE BINARY)))OR(CAST(rt0.c0 AS REAL))))AND(QUOTE(rt0.c2))))AND(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3)))) DESC;
SELECT ALL * FROM vt0 WHERE (CAST((~ (vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST((~ (vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST((~ (vt0.c0)) AS INTEGER));
SELECT * FROM rt0, vt0 WHERE ((NOT (((((rt0.c2)AND(rt0.c3)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((rt0.c2)AND(rt0.c3)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((NOT (((((rt0.c2)AND(rt0.c3)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((rt0.c2)AND(rt0.c3)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((NOT (((((rt0.c2)AND(rt0.c3)))OR(rt0.c3)))));
SELECT * FROM vt0, rt0 WHERE ((NULL IN (vt0.c0 COLLATE RTRIM))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NULL IN (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0 ORDER BY x''  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE ((NULL IN (vt0.c0 COLLATE RTRIM))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NULL IN (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0 ORDER BY x''  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE ((NULL IN (vt0.c0 COLLATE RTRIM))) ORDER BY x''  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c1))<=((rt0.c0))) IN (((rt0.c3) ISNULL), ((0.8324075791559304) ISNULL))) WHERE (rt0.c1) ORDER BY CASE WHEN ((rt0.c2)/(rt0.c1)) THEN rt0.c1 WHEN CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 ELSE '1271507726' END THEN (((vt0.c0))==((rt0.c3))) WHEN ((((((((x'4d22')AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c1)) THEN ((rt0.c1) NOTNULL) END DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c1))<=((rt0.c0))) IN (((rt0.c3) ISNULL), ((0.8324075791559304) ISNULL))) ORDER BY CASE WHEN ((rt0.c2)/(rt0.c1)) THEN rt0.c1 WHEN CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 ELSE '1271507726' END THEN (((vt0.c0))=((rt0.c3))) WHEN ((((((((x'4d22')AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c1)) THEN ((rt0.c1) NOTNULL) END DESC);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c1))<=((rt0.c0))) IN (((rt0.c3) ISNULL), ((0.8324075791559304) ISNULL))) WHERE (rt0.c1) ORDER BY CASE WHEN ((rt0.c2)/(rt0.c1)) THEN rt0.c1 WHEN CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 ELSE '1271507726' END THEN (((vt0.c0))==((rt0.c3))) WHEN ((((((((x'4d22')AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c1)) THEN ((rt0.c1) NOTNULL) END DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c1))<=((rt0.c0))) IN (((rt0.c3) ISNULL), ((0.8324075791559304) ISNULL))) ORDER BY CASE WHEN ((rt0.c2)/(rt0.c1)) THEN rt0.c1 WHEN CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 ELSE '1271507726' END THEN (((vt0.c0))=((rt0.c3))) WHEN ((((((((x'4d22')AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c1)) THEN ((rt0.c1) NOTNULL) END DESC);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c1))<=((rt0.c0))) IN (((rt0.c3) ISNULL), ((0.8324075791559304) ISNULL))) WHERE (rt0.c1) ORDER BY CASE WHEN ((rt0.c2)/(rt0.c1)) THEN rt0.c1 WHEN CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 ELSE '1271507726' END THEN (((vt0.c0))==((rt0.c3))) WHEN ((((((((x'4d22')AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c1)) THEN ((rt0.c1) NOTNULL) END DESC;
SELECT ALL * FROM vt0 WHERE ((((0.6564862471506769)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN NULL END)) AND ((LIKELIHOOD(vt0.c0, 0.24120459120210025))))) ORDER BY (((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((0.6564862471506769)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN NULL END)) AND ((LIKELIHOOD(vt0.c0, 0.24120459120210025))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ASC);
SELECT ALL * FROM vt0 WHERE ((((0.6564862471506769)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN NULL END)) AND ((LIKELIHOOD(vt0.c0, 0.24120459120210025))))) ORDER BY (((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((0.6564862471506769)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN NULL END)) AND ((LIKELIHOOD(vt0.c0, 0.24120459120210025))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ASC);
SELECT ALL * FROM vt0 WHERE ((((0.6564862471506769)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN NULL END)) AND ((LIKELIHOOD(vt0.c0, 0.24120459120210025))))) ORDER BY (((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ASC;
