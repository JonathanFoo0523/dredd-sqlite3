-- Time: 2024/06/09 20:20:44
-- Database: database12
-- Database version: 3.40.0
-- seed value: 2404518212
PRAGMA cache_size = 50000; -- 6ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED); -- 3ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2); -- 0ms;
PRAGMA main.threads = -6290087737553689173; -- 0ms;
INSERT OR IGNORE INTO rt1(c0) VALUES ('0z轄zLN轄L'); -- 0ms;
UPDATE OR ABORT vt0 SET c0=NULL, c0=x''; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DROP TABLE IF EXISTS vt0; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR FAIL rt1 SET c2=NULL, c2='57289820'; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA cell_size_check = false; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
PRAGMA checkpoint_fullfsync = true; -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES (-1843580009, x'', 0.384708022887878); -- 1ms;
INSERT OR IGNORE INTO rt1(c0, c1) VALUES (0.16893670804325212, '-1843580009'), (0.5484747228046513, 0.0020998800308114074), (NULL, -1.843580009E9); -- 0ms;
UPDATE rt1 SET c0='Bv*i~\nb|p'; -- 0ms;
UPDATE OR IGNORE rt1 SET c1='-1518563516', c0='' WHERE ((rt1.c1)-(NULL)); -- 0ms;
ANALYZE; -- 1ms;
UPDATE rt1 SET c1=0.7187573067369298, c1=x'' WHERE '1834446713'; -- 0ms;
UPDATE OR IGNORE rt1 SET c2=0.8751579705059692; -- 1ms;
CREATE TEMPORARY VIEW v0(c0) AS SELECT DISTINCT (((rt1.c2, rt1.c2, '568327391')) BETWEEN ((((rt1.c0)AND(rt1.c2)), x'', CASE WHEN x'e480' THEN rt1.c2 END)) AND (((NOT (rt1.c0)), (NOT (rt1.c0)), CAST(rt1.c0 AS NUMERIC)))) FROM rt1 WHERE ('C' COLLATE BINARY COLLATE RTRIM COLLATE BINARY) ORDER BY (~ (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2))))  NULLS LAST, (NOT (((0.8751579705059692)&(rt1.c1))))  NULLS LAST; -- 1ms;
INSERT OR IGNORE INTO rt1 VALUES (NULL, '0.16893670804325212', NULL); -- 0ms;
UPDATE rt1 SET c2=x'66bd' WHERE (('2f') NOTNULL); -- 4ms;
INSERT OR ABORT INTO rt1(c0) VALUES (-1.843580009E9); -- 1ms;
INSERT OR FAIL INTO rt1(c1, c0, c2) VALUES ('', x'', '-469865483'), (NULL, 0.3919422087241412, x''), (x'', NULL, '-277123133'), (x'f137', 137400353, NULL), (CAST(('1538386615' IN (x'')) AS INTEGER), '-469865483', 0x743e6616), (x'8aff', '277544851', x''), (0.7133666526892575, NULL, ''); -- 0ms;
INSERT OR ROLLBACK INTO rt1(c0) VALUES (x''); -- 0ms;
INSERT OR FAIL INTO rt1 VALUES (NULL, '1f', ''), (NULL, NULL, (((((((((NULL)OR(NULL)))AND(0.9504524948590722)))AND('1753572486')))AND(x'')) IN ())), (0x743e6616, 0.8372080499453778, 0.4110491193531951); -- 0ms;
INSERT OR ABORT INTO rt1 VALUES ('1516810827', '-380374129', 0.3919422087241412); -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c1) VALUES (x'', NULL); -- 0ms;
UPDATE OR IGNORE rt1 SET (c1, c0)=('', NULL) WHERE CAST((rt1.c2 IN ()) AS REAL); -- 1ms;
INSERT OR ABORT INTO rt1(c2) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c1, c2) VALUES (x'', x'6fb1', 0.09789342873160012); -- 0ms;
UPDATE OR FAIL rt1 SET c2=x'd8e9'; -- 1ms;
INSERT OR IGNORE INTO rt1(c0, c1, c2) VALUES ('ib', x'', NULL), ('568327391', x'91ee', NULL), (0.22464560462123695, x'', 1538386615); -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c2, c0) VALUES ('1166727347', x'', '1538386615'); -- 0ms;
UPDATE OR ABORT rt1 SET c1='', c1='-1726545258' WHERE CASE WHEN (rt1.c1 IN ()) THEN (((1239695574))<>((rt1.c0))) END; -- 0ms;
UPDATE rt1 SET (c1, c2)=('1f', NULL) WHERE CASE CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c0 END  WHEN JULIANDAY(rt1.c2, rt1.c2, rt1.c1) THEN ((rt1.c2)<(rt1.c0)) ELSE LIKELIHOOD(DISTINCT rt1.c1, 0.9686108715576541) END; -- 0ms;
UPDATE OR IGNORE rt1 SET (c2)=(x'') WHERE rt1.c2; -- 0ms;
DROP VIEW v0; -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
PRAGMA cache_spill = true; -- 0ms;
UPDATE OR ABORT rt1 SET (c0)=(-2.77123133E8) WHERE ((NULL) NOTNULL) COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE rt1 SET (c0)=('1834446713'); -- 1ms;
PRAGMA temp.application_id = 8259761231817082248; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
REINDEX  rt1; -- 0ms;
INSERT OR FAIL INTO rt1 VALUES (NULL, -1, 0.6881627148754704); -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c0) VALUES (x'cf69', 0.11981168400548059); -- 0ms;
VACUUM main; -- 1ms;
REINDEX  rt1; -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES ('{{O', NULL, NULL); -- 0ms;
UPDATE OR FAIL rt1 SET c1=0.5484747228046513; -- 0ms;
UPDATE OR IGNORE rt1 SET c2=0.5504632165034905 WHERE ((CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END)<>(((rt1.c1) BETWEEN (rt1.c0) AND (0.03760759367671329)))); -- 5ms;
REINDEX; -- 1ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c1) VALUES (0.7124771062390969, '57289820'), (0X36a2c5c, '**'), (x'', x''); -- 3ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt1(c1, c2) VALUES ('qI', 0X36a2c5c); -- 1ms;
ANALYZE; -- 4ms;
PRAGMA integrity_check; -- 0ms;
INSERT OR FAIL INTO rt1(c2) VALUES ('潸-K.<'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET c2='-373145742' WHERE x'3c29'; -- 0ms;
CREATE TABLE t0 (c0 INTEGER , c1 BLOB , c2 REAL ); -- 0ms;
ROLLBACK TRANSACTION; -- 2ms;
PRAGMA cache_spill = false; -- 0ms;
ANALYZE rt1; -- 0ms;
END TRANSACTION; -- 0ms;
ANALYZE; -- 4ms;
UPDATE OR IGNORE t0 SET (c2)=('') WHERE (((t0.c2, t0.c1, t0.c0)) BETWEEN ((CAST(t0.c1 AS INTEGER), ((t0.c0)<(t0.c1)), ((t0.c1) ISNULL))) AND ((((t0.c1)LIKE('-644864235')), ((t0.c0)>(t0.c2)), (- (t0.c0))))); -- 0ms;
PRAGMA incremental_vacuum; -- 0ms;
UPDATE rt1 SET c0=x''; -- 0ms;
UPDATE OR IGNORE rt1 SET c2=NULL; -- 3ms;
PRAGMA main.threads = 9043095552130290866; -- 0ms;
UPDATE OR IGNORE rt1 SET c2='' WHERE (NOT (CAST(x'd0a1' AS REAL))); -- 0ms;
PRAGMA threads = -4040468551039633573; -- 0ms;
INSERT OR REPLACE INTO t0 VALUES ('-1843580009', 0.6390256414837864, '-640344650'); -- 0ms;
ANALYZE sqlite_master; -- 1ms;
PRAGMA foreign_keys; -- 0ms;
CREATE INDEX i95 ON t0((((('-1518563516' IN (c1))))>(((c1 IN ())))) COLLATE BINARY ASC,(((((c0)<=(c1))))>=((((c1)/(c2))))) ASC,(((((~ (c0)))AND(((c2)OR(c1)))))AND(((c0) BETWEEN (c1) AND (c1)))) COLLATE NOCASE); -- 1ms;
INSERT OR IGNORE INTO t0(c1) VALUES ('-1235647422'); -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c1, c0) VALUES (NULL, 1.239695574E9, '1834446713'), (NULL, 0.6390256414837864, '937715773'), ('', x'', 'TAly{M'); -- 0ms;
VACUUM; -- 1ms;
INSERT OR IGNORE INTO rt1(c2) VALUES ('&?{}'); -- 1ms;
INSERT OR ABORT INTO rt1(c1, c0) VALUES (NULL, 0.3919422087241412); -- 0ms;
INSERT OR IGNORE INTO t0(c0, c2, c1) VALUES (NULL, x'', 0.7905687067387096); -- 1ms;
DELETE FROM rt1 WHERE (+ (((rt1.c2)>=(NULL)))); -- 0ms;
UPDATE OR FAIL t0 SET c0=x''; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL, '\r<Vr sB濂v', x''), (x'', '', ''), ('', '', x''); -- 0ms;
UPDATE OR ABORT t0 SET c1=''; -- 1ms;
CREATE UNIQUE INDEX IF NOT EXISTS i37 ON t0((((((c2 IN (c2)))AND((((c2, c2, c1, c1, c0)) NOT BETWEEN ((c2, c0, c1, NULL, c2)) AND ((c0, c1, c0, NULL, c0))))))OR(c2 COLLATE RTRIM)),((c0 IN ()) IN ()) COLLATE RTRIM ASC,c1) WHERE UNLIKELY(c0 COLLATE NOCASE); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA mmap_size; -- 0ms;
INSERT OR ROLLBACK INTO t0(c0, c2, c1) VALUES ('4_1&pLbo', '-948423139', NULL); -- 1ms;
INSERT OR ABORT INTO rt1(c0) VALUES (0X202b0149); -- 0ms;
UPDATE t0 SET (c0, c2)=(x'', 0.6688225048256183) WHERE CAST(t0.c2 COLLATE RTRIM AS NUMERIC); -- 0ms;
INSERT OR ABORT INTO rt1(c2) VALUES (9.37715773E8); -- 0ms;
PRAGMA cache_spill = true; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 0ms;
PRAGMA shrink_memory; -- 0ms;
UPDATE OR IGNORE t0 SET c0=x''; -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ((((0.0020998800308114074))<((((('2f'))==(('-1726545258'))))))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE ((~ (((t0.c1)||(t0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c1)||(t0.c2))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE ((~ (((t0.c1)||(t0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c1)||(t0.c2))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE ((~ (((t0.c1)||(t0.c2)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))) THEN (NOT (vt0.c0)) WHEN CAST(NULL AS NUMERIC) THEN ((1.239695574E9)<>(vt0.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 WHEN CAST(vt0.c0 AS REAL) THEN NULL WHEN ((((vt0.c0)OR(vt0.c0)))OR(0.4732999694703508)) THEN NULL ELSE ((vt0.c0) NOT NULL) END) ORDER BY (((x'', ((-463397958)LIKE(vt0.c0)), (vt0.c0 IN ())))<((((vt0.c0) BETWEEN (vt0.c0) AND (x'')), CAST(vt0.c0 AS INTEGER), TRIM(vt0.c0, vt0.c0)))), ((((vt0.c0)<>(vt0.c0)))/(vt0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))) THEN (NOT (vt0.c0)) WHEN CAST(NULL AS NUMERIC) THEN ((1.239695574E9)<>(vt0.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 WHEN CAST(vt0.c0 AS REAL) THEN NULL WHEN ((((vt0.c0)OR(vt0.c0)))OR(0.4732999694703508)) THEN NULL ELSE ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM vt0 ORDER BY (((x'', ((-463397958)LIKE(vt0.c0)), (vt0.c0 IN ())))<((((vt0.c0) BETWEEN (vt0.c0) AND (x'')), CAST(vt0.c0 AS INTEGER), TRIM(vt0.c0, vt0.c0)))), ((((vt0.c0)!=(vt0.c0)))/(vt0.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))) THEN (NOT (vt0.c0)) WHEN CAST(NULL AS NUMERIC) THEN ((1.239695574E9)<>(vt0.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 WHEN CAST(vt0.c0 AS REAL) THEN NULL WHEN ((((vt0.c0)OR(vt0.c0)))OR(0.4732999694703508)) THEN NULL ELSE ((vt0.c0) NOT NULL) END) ORDER BY (((x'', ((-463397958)LIKE(vt0.c0)), (vt0.c0 IN ())))<((((vt0.c0) BETWEEN (vt0.c0) AND (x'')), CAST(vt0.c0 AS INTEGER), TRIM(vt0.c0, vt0.c0)))), ((((vt0.c0)<>(vt0.c0)))/(vt0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))) THEN (NOT (vt0.c0)) WHEN CAST(NULL AS NUMERIC) THEN ((1.239695574E9)<>(vt0.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 WHEN CAST(vt0.c0 AS REAL) THEN NULL WHEN ((((vt0.c0)OR(vt0.c0)))OR(0.4732999694703508)) THEN NULL ELSE ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM vt0 ORDER BY (((x'', ((-463397958)LIKE(vt0.c0)), (vt0.c0 IN ())))<((((vt0.c0) BETWEEN (vt0.c0) AND (x'')), CAST(vt0.c0 AS INTEGER), TRIM(vt0.c0, vt0.c0)))), ((((vt0.c0)!=(vt0.c0)))/(vt0.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))) THEN (NOT (vt0.c0)) WHEN CAST(NULL AS NUMERIC) THEN ((1.239695574E9)<>(vt0.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 WHEN CAST(vt0.c0 AS REAL) THEN NULL WHEN ((((vt0.c0)OR(vt0.c0)))OR(0.4732999694703508)) THEN NULL ELSE ((vt0.c0) NOT NULL) END) ORDER BY (((x'', ((-463397958)LIKE(vt0.c0)), (vt0.c0 IN ())))<((((vt0.c0) BETWEEN (vt0.c0) AND (x'')), CAST(vt0.c0 AS INTEGER), TRIM(vt0.c0, vt0.c0)))), ((((vt0.c0)<>(vt0.c0)))/(vt0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT ALL * FROM vt0, rt1, t0 WHERE ((((((vt0.c0))=((t0.c1)))) ISNULL)) ORDER BY (- (((rt1.c0)>>(NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))==((t0.c1)))) ISNULL)) IS TRUE)  as count FROM vt0, rt1, t0 ORDER BY (- (((rt1.c0)>>(NULL)))));
SELECT ALL * FROM vt0, rt1, t0 WHERE ((((((vt0.c0))=((t0.c1)))) ISNULL)) ORDER BY (- (((rt1.c0)>>(NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))==((t0.c1)))) ISNULL)) IS TRUE)  as count FROM vt0, rt1, t0 ORDER BY (- (((rt1.c0)>>(NULL)))));
SELECT ALL * FROM vt0, rt1, t0 WHERE ((((((vt0.c0))=((t0.c1)))) ISNULL)) ORDER BY (- (((rt1.c0)>>(NULL))));
SELECT ALL * FROM t0 WHERE ((((t0.c0, t0.c0, 0.19946434801351687)) NOT BETWEEN (((((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c0))), INSTR(t0.c2, t0.c0), ((t0.c2)>=(t0.c0)))) AND ((CASE WHEN t0.c1 THEN t0.c1 END, CASE t0.c2  WHEN '9챽' THEN t0.c0 WHEN t0.c2 THEN t0.c1 WHEN 0.33193175315761214 THEN t0.c1 ELSE t0.c0 END, (('&h0/!X')-(t0.c2)))))) ORDER BY ((((t0.c2)>=(t0.c1)))/((~ (t0.c0))))  NULLS LAST, UPPER(((t0.c0)||(t0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0, t0.c0, 0.19946434801351687)) NOT BETWEEN (((((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c0))), INSTR(t0.c2, t0.c0), ((t0.c2)>=(t0.c0)))) AND ((CASE WHEN t0.c1 THEN t0.c1 END, CASE t0.c2  WHEN '9챽' THEN t0.c0 WHEN t0.c2 THEN t0.c1 WHEN 0.33193175315761214 THEN t0.c1 ELSE t0.c0 END, (('&h0/!X')-(t0.c2)))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c2)>=(t0.c1)))/((~ (t0.c0))))  NULLS LAST, UPPER(((t0.c0)||(t0.c2)))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((t0.c0, t0.c0, 0.19946434801351687)) NOT BETWEEN (((((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c0))), INSTR(t0.c2, t0.c0), ((t0.c2)>=(t0.c0)))) AND ((CASE WHEN t0.c1 THEN t0.c1 END, CASE t0.c2  WHEN '9챽' THEN t0.c0 WHEN t0.c2 THEN t0.c1 WHEN 0.33193175315761214 THEN t0.c1 ELSE t0.c0 END, (('&h0/!X')-(t0.c2)))))) ORDER BY ((((t0.c2)>=(t0.c1)))/((~ (t0.c0))))  NULLS LAST, UPPER(((t0.c0)||(t0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0, t0.c0, 0.19946434801351687)) NOT BETWEEN (((((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c0))), INSTR(t0.c2, t0.c0), ((t0.c2)>=(t0.c0)))) AND ((CASE WHEN t0.c1 THEN t0.c1 END, CASE t0.c2  WHEN '9챽' THEN t0.c0 WHEN t0.c2 THEN t0.c1 WHEN 0.33193175315761214 THEN t0.c1 ELSE t0.c0 END, (('&h0/!X')-(t0.c2)))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c2)>=(t0.c1)))/((~ (t0.c0))))  NULLS LAST, UPPER(((t0.c0)||(t0.c2)))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((t0.c0, t0.c0, 0.19946434801351687)) NOT BETWEEN (((((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c0))), INSTR(t0.c2, t0.c0), ((t0.c2)>=(t0.c0)))) AND ((CASE WHEN t0.c1 THEN t0.c1 END, CASE t0.c2  WHEN '9챽' THEN t0.c0 WHEN t0.c2 THEN t0.c1 WHEN 0.33193175315761214 THEN t0.c1 ELSE t0.c0 END, (('&h0/!X')-(t0.c2)))))) ORDER BY ((((t0.c2)>=(t0.c1)))/((~ (t0.c0))))  NULLS LAST, UPPER(((t0.c0)||(t0.c2)))  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)))=((rt1.c1 IN ())))) ORDER BY CAST(rt1.c1 AS BLOB) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)))=((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c1 AS BLOB) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)))=((rt1.c1 IN ())))) ORDER BY CAST(rt1.c1 AS BLOB) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)))=((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c1 AS BLOB) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)))=((rt1.c1 IN ())))) ORDER BY CAST(rt1.c1 AS BLOB) COLLATE NOCASE  NULLS LAST;
SELECT ALL * FROM t0 CROSS JOIN vt0 ON ((((((rt1.c0)OR(rt1.c0)))OR(rt1.c1))) NOT BETWEEN (((t0.c0)%(rt1.c1))) AND (NULL COLLATE NOCASE)) FULL OUTER JOIN rt1 ON CASE WHEN rt1.c2 COLLATE BINARY THEN CASE t0.c1  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END END WHERE ((((+ (rt1.c2)))-(NULL)));
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c2)))-(NULL))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((((((rt1.c0)OR(rt1.c0)))OR(rt1.c1))) NOT BETWEEN (((t0.c0)%(rt1.c1))) AND (NULL COLLATE NOCASE)) FULL OUTER JOIN rt1 ON CASE WHEN rt1.c2 COLLATE BINARY THEN CASE t0.c1  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END END);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON ((((((rt1.c0)OR(rt1.c0)))OR(rt1.c1))) NOT BETWEEN (((t0.c0)%(rt1.c1))) AND (NULL COLLATE NOCASE)) FULL OUTER JOIN rt1 ON CASE WHEN rt1.c2 COLLATE BINARY THEN CASE t0.c1  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END END WHERE ((((+ (rt1.c2)))-(NULL)));
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c2)))-(NULL))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((((((rt1.c0)OR(rt1.c0)))OR(rt1.c1))) NOT BETWEEN (((t0.c0)%(rt1.c1))) AND (NULL COLLATE NOCASE)) FULL OUTER JOIN rt1 ON CASE WHEN rt1.c2 COLLATE BINARY THEN CASE t0.c1  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END END);
SELECT COUNT(*) FROM t0, vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c2))) AND (''))) ORDER BY CAST(CAST(vt0.c0 AS REAL) AS NUMERIC), t0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c2))) AND (''))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(CAST(vt0.c0 AS REAL) AS NUMERIC), t0.c2  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c2))) AND (''))) ORDER BY CAST(CAST(vt0.c0 AS REAL) AS NUMERIC), t0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c2))) AND (''))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(CAST(vt0.c0 AS REAL) AS NUMERIC), t0.c2  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c2))) AND (''))) ORDER BY CAST(CAST(vt0.c0 AS REAL) AS NUMERIC), t0.c2  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, t0, vt0 WHERE (((t0.c1)AND(CAST(t0.c0 AS BLOB)))) ORDER BY TYPEOF((((rt1.c1, t0.c2, t0.c2))<>((t0.c1, t0.c0, t0.c1))));
SELECT SUM(count) FROM (SELECT ((((t0.c1)AND(CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM rt1, t0, vt0 ORDER BY TYPEOF((((rt1.c1, t0.c2, t0.c2))!=((t0.c1, t0.c0, t0.c1)))));
SELECT ALL COUNT(*) FROM rt1, t0, vt0 WHERE (((t0.c1)AND(CAST(t0.c0 AS BLOB)))) ORDER BY TYPEOF((((rt1.c1, t0.c2, t0.c2))<>((t0.c1, t0.c0, t0.c1))));
SELECT SUM(count) FROM (SELECT ((((t0.c1)AND(CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM rt1, t0, vt0 ORDER BY TYPEOF((((rt1.c1, t0.c2, t0.c2))!=((t0.c1, t0.c0, t0.c1)))));
SELECT ALL COUNT(*) FROM rt1, t0, vt0 WHERE (((t0.c1)AND(CAST(t0.c0 AS BLOB)))) ORDER BY TYPEOF((((rt1.c1, t0.c2, t0.c2))<>((t0.c1, t0.c0, t0.c1))));
SELECT ALL COUNT(*) FROM t0, vt0, rt1 WHERE ((CAST(vt0.c0 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS REAL) IN ())) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT ALL COUNT(*) FROM t0, vt0, rt1 WHERE ((CAST(vt0.c0 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS REAL) IN ())) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT ALL COUNT(*) FROM t0, vt0, rt1 WHERE ((CAST(vt0.c0 AS REAL) IN ()));
SELECT ALL * FROM vt0, t0, rt1 WHERE (((-4.69865483E8)<=(t0.c2)));
SELECT SUM(count) FROM (SELECT ((((-4.69865483E8)<=(t0.c2))) IS TRUE)  as count FROM vt0, t0, rt1);
SELECT ALL * FROM vt0, t0, rt1 WHERE (((-4.69865483E8)<=(t0.c2)));
SELECT SUM(count) FROM (SELECT ((((-4.69865483E8)<=(t0.c2))) IS TRUE)  as count FROM vt0, t0, rt1);
SELECT ALL * FROM vt0, t0, rt1 WHERE (((-4.69865483E8)<=(t0.c2)));
SELECT * FROM rt1, t0, vt0 WHERE (((((vt0.c0) IS TRUE)) ISNULL)) ORDER BY ((vt0.c0 COLLATE RTRIM) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE)) ISNULL)) IS TRUE)  as count FROM rt1, t0, vt0 ORDER BY ((vt0.c0 COLLATE RTRIM) NOT NULL)  NULLS LAST);
SELECT * FROM rt1, t0, vt0 WHERE (((((vt0.c0) IS TRUE)) ISNULL)) ORDER BY ((vt0.c0 COLLATE RTRIM) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE)) ISNULL)) IS TRUE)  as count FROM rt1, t0, vt0 ORDER BY ((vt0.c0 COLLATE RTRIM) NOT NULL)  NULLS LAST);
SELECT * FROM rt1, t0, vt0 WHERE (((((vt0.c0) IS TRUE)) ISNULL)) ORDER BY ((vt0.c0 COLLATE RTRIM) NOT NULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((json_array_length(rt1.c0))AND(rt1.c2)))AND(LAST_INSERT_ROWID())));
SELECT SUM(count) FROM (SELECT ALL ((((((json_array_length(rt1.c0))AND(rt1.c2)))AND(LAST_INSERT_ROWID()))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((json_array_length(rt1.c0))AND(rt1.c2)))AND(LAST_INSERT_ROWID())));
SELECT SUM(count) FROM (SELECT ALL ((((((json_array_length(rt1.c0))AND(rt1.c2)))AND(LAST_INSERT_ROWID()))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((json_array_length(rt1.c0))AND(rt1.c2)))AND(LAST_INSERT_ROWID())));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((0.346986290423011) IS FALSE) COLLATE NOCASE WHERE (CAST(LIKELY(DISTINCT '-843607178') AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(LIKELY(DISTINCT '-843607178') AS REAL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((0.346986290423011) IS FALSE) COLLATE NOCASE);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((0.346986290423011) IS FALSE) COLLATE NOCASE WHERE (CAST(LIKELY(DISTINCT '-843607178') AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(LIKELY(DISTINCT '-843607178') AS REAL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((0.346986290423011) IS FALSE) COLLATE NOCASE);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((0.346986290423011) IS FALSE) COLLATE NOCASE WHERE (CAST(LIKELY(DISTINCT '-843607178') AS REAL));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c2) IS TRUE))OR((~ (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) IS TRUE))OR((~ (rt1.c1))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c2) IS TRUE))OR((~ (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) IS TRUE))OR((~ (rt1.c1))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c2) IS TRUE))OR((~ (rt1.c1)))));
SELECT COUNT(*) FROM t0, rt1, vt0 WHERE ((((((vt0.c0, rt1.c2, vt0.c0))>=((rt1.c1, rt1.c1, vt0.c0))))<(rt1.c1 COLLATE NOCASE))) ORDER BY rtreenode(rt1.c0, CASE rt1.c0  WHEN t0.c1 THEN t0.c2 END) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, rt1.c2, vt0.c0))>=((rt1.c1, rt1.c1, vt0.c0))))<(rt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t0, rt1, vt0 ORDER BY rtreenode(rt1.c0, CASE rt1.c0  WHEN t0.c1 THEN t0.c2 END) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt1, vt0 WHERE ((((((vt0.c0, rt1.c2, vt0.c0))>=((rt1.c1, rt1.c1, vt0.c0))))<(rt1.c1 COLLATE NOCASE))) ORDER BY rtreenode(rt1.c0, CASE rt1.c0  WHEN t0.c1 THEN t0.c2 END) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, rt1.c2, vt0.c0))>=((rt1.c1, rt1.c1, vt0.c0))))<(rt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t0, rt1, vt0 ORDER BY rtreenode(rt1.c0, CASE rt1.c0  WHEN t0.c1 THEN t0.c2 END) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt1, vt0 WHERE ((((((vt0.c0, rt1.c2, vt0.c0))>=((rt1.c1, rt1.c1, vt0.c0))))<(rt1.c1 COLLATE NOCASE))) ORDER BY rtreenode(rt1.c0, CASE rt1.c0  WHEN t0.c1 THEN t0.c2 END) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt1 WHERE ((t0.c1 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t0.c1 IN ())) IS TRUE)  as count FROM t0, rt1);
SELECT COUNT(*) FROM t0, rt1 WHERE ((t0.c1 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t0.c1 IN ())) IS TRUE)  as count FROM t0, rt1);
SELECT COUNT(*) FROM t0, rt1 WHERE ((t0.c1 IN ()));
SELECT * FROM rt1, vt0 INDEXED BY i95 RIGHT OUTER JOIN t0 ON CASE WHEN ((rt1.c1)LIKE(t0.c2)) THEN ((rt1.c0)<(t0.c2)) WHEN ((t0.c1) NOT BETWEEN (NULL) AND (t0.c0)) THEN 0Xffffffffd9902715 WHEN (NOT (t0.c2)) THEN rt1.c1 COLLATE BINARY END WHERE (((((((((((t0.c1)AND(t0.c1)))OR(rt1.c0)))OR(rt1.c0)))AND(t0.c2))) BETWEEN (((rt1.c0)>>(t0.c2))) AND (((((t0.c2)AND(rt1.c0)))OR(vt0.c0))))) ORDER BY CASE WHEN ((t0.c0)-(vt0.c0)) THEN ((vt0.c0)LIKE(rt1.c1)) ELSE NULL END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c1)AND(t0.c1)))OR(rt1.c0)))OR(rt1.c0)))AND(t0.c2))) BETWEEN (((rt1.c0)>>(t0.c2))) AND (((((t0.c2)AND(rt1.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM rt1, vt0 INDEXED BY i95 RIGHT OUTER JOIN t0 ON CASE WHEN ((rt1.c1)LIKE(t0.c2)) THEN ((rt1.c0)<(t0.c2)) WHEN ((t0.c1) NOT BETWEEN (NULL) AND (t0.c0)) THEN 0Xffffffffd9902715 WHEN (NOT (t0.c2)) THEN rt1.c1 COLLATE BINARY END ORDER BY CASE WHEN ((t0.c0)-(vt0.c0)) THEN ((vt0.c0)LIKE(rt1.c1)) ELSE NULL END DESC);
SELECT * FROM rt1, vt0 INDEXED BY i95 RIGHT OUTER JOIN t0 ON CASE WHEN ((rt1.c1)LIKE(t0.c2)) THEN ((rt1.c0)<(t0.c2)) WHEN ((t0.c1) NOT BETWEEN (NULL) AND (t0.c0)) THEN 0Xffffffffd9902715 WHEN (NOT (t0.c2)) THEN rt1.c1 COLLATE BINARY END WHERE (((((((((((t0.c1)AND(t0.c1)))OR(rt1.c0)))OR(rt1.c0)))AND(t0.c2))) BETWEEN (((rt1.c0)>>(t0.c2))) AND (((((t0.c2)AND(rt1.c0)))OR(vt0.c0))))) ORDER BY CASE WHEN ((t0.c0)-(vt0.c0)) THEN ((vt0.c0)LIKE(rt1.c1)) ELSE NULL END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c1)AND(t0.c1)))OR(rt1.c0)))OR(rt1.c0)))AND(t0.c2))) BETWEEN (((rt1.c0)>>(t0.c2))) AND (((((t0.c2)AND(rt1.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM rt1, vt0 INDEXED BY i95 RIGHT OUTER JOIN t0 ON CASE WHEN ((rt1.c1)LIKE(t0.c2)) THEN ((rt1.c0)<(t0.c2)) WHEN ((t0.c1) NOT BETWEEN (NULL) AND (t0.c0)) THEN 0Xffffffffd9902715 WHEN (NOT (t0.c2)) THEN rt1.c1 COLLATE BINARY END ORDER BY CASE WHEN ((t0.c0)-(vt0.c0)) THEN ((vt0.c0)LIKE(rt1.c1)) ELSE NULL END DESC);
SELECT * FROM rt1, t0, vt0 WHERE (CASE ((t0.c0) NOT BETWEEN (rt1.c1) AND ('mYV䎍'))  WHEN (NOT (rt1.c1)) THEN rt1.c2 WHEN rt1.c1 THEN CAST(t0.c1 AS INTEGER) WHEN json_type(rt1.c2) THEN (~ (rt1.c0)) ELSE CAST(rt1.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0) NOT BETWEEN (rt1.c1) AND ('mYV䎍'))  WHEN (NOT (rt1.c1)) THEN rt1.c2 WHEN rt1.c1 THEN CAST(t0.c1 AS INTEGER) WHEN json_type(rt1.c2) THEN (~ (rt1.c0)) ELSE CAST(rt1.c0 AS NUMERIC) END) IS TRUE)  as count FROM rt1, t0, vt0);
SELECT * FROM rt1, t0, vt0 WHERE (CASE ((t0.c0) NOT BETWEEN (rt1.c1) AND ('mYV䎍'))  WHEN (NOT (rt1.c1)) THEN rt1.c2 WHEN rt1.c1 THEN CAST(t0.c1 AS INTEGER) WHEN json_type(rt1.c2) THEN (~ (rt1.c0)) ELSE CAST(rt1.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0) NOT BETWEEN (rt1.c1) AND ('mYV䎍'))  WHEN (NOT (rt1.c1)) THEN rt1.c2 WHEN rt1.c1 THEN CAST(t0.c1 AS INTEGER) WHEN json_type(rt1.c2) THEN (~ (rt1.c0)) ELSE CAST(rt1.c0 AS NUMERIC) END) IS TRUE)  as count FROM rt1, t0, vt0);
SELECT * FROM rt1, t0, vt0 WHERE (CASE ((t0.c0) NOT BETWEEN (rt1.c1) AND ('mYV䎍'))  WHEN (NOT (rt1.c1)) THEN rt1.c2 WHEN rt1.c1 THEN CAST(t0.c1 AS INTEGER) WHEN json_type(rt1.c2) THEN (~ (rt1.c0)) ELSE CAST(rt1.c0 AS NUMERIC) END);
SELECT ALL * FROM t0, vt0 WHERE (((CASE t0.c0  WHEN t0.c2 THEN t0.c0 ELSE vt0.c0 END) NOT BETWEEN (((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2))) AND (((((t0.c1)AND(t0.c1)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN t0.c2 THEN t0.c0 ELSE vt0.c0 END) NOT BETWEEN (((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2))) AND (((((t0.c1)AND(t0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((CASE t0.c0  WHEN t0.c2 THEN t0.c0 ELSE vt0.c0 END) NOT BETWEEN (((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2))) AND (((((t0.c1)AND(t0.c1)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN t0.c2 THEN t0.c0 ELSE vt0.c0 END) NOT BETWEEN (((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2))) AND (((((t0.c1)AND(t0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((CASE t0.c0  WHEN t0.c2 THEN t0.c0 ELSE vt0.c0 END) NOT BETWEEN (((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2))) AND (((((t0.c1)AND(t0.c1)))OR(vt0.c0)))));
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN ((((t0.c0)) BETWEEN (('138777670')) AND ((1744070769)))) AND ((((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOT BETWEEN ((((t0.c0)) BETWEEN (('138777670')) AND ((1744070769)))) AND ((((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c1)))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN ((((t0.c0)) BETWEEN (('138777670')) AND ((1744070769)))) AND ((((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOT BETWEEN ((((t0.c0)) BETWEEN (('138777670')) AND ((1744070769)))) AND ((((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c1)))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN ((((t0.c0)) BETWEEN (('138777670')) AND ((1744070769)))) AND ((((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))GLOB(t0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))GLOB(t0.c2))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))GLOB(t0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))GLOB(t0.c2))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))GLOB(t0.c2)));
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) ISNULL) AS TEXT)) ORDER BY json_remove(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))OR(NULL))) ASC  NULLS LAST, (((vt0.c0)>(vt0.c0)) IN ()), ((((((((((vt0.c0)<=(vt0.c0)))OR(((vt0.c0)IS(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(CAST(vt0.c0 AS INTEGER))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) ISNULL) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY json_remove(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))OR(NULL))) ASC  NULLS LAST, (((vt0.c0)>(vt0.c0)) IN ()), ((((((((((vt0.c0)<=(vt0.c0)))OR(((vt0.c0)IS(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(CAST(vt0.c0 AS INTEGER))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) ISNULL) AS TEXT)) ORDER BY json_remove(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))OR(NULL))) ASC  NULLS LAST, (((vt0.c0)>(vt0.c0)) IN ()), ((((((((((vt0.c0)<=(vt0.c0)))OR(((vt0.c0)IS(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(CAST(vt0.c0 AS INTEGER))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) ISNULL) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY json_remove(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))OR(NULL))) ASC  NULLS LAST, (((vt0.c0)>(vt0.c0)) IN ()), ((((((((((vt0.c0)<=(vt0.c0)))OR(((vt0.c0)IS(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(CAST(vt0.c0 AS INTEGER))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) ISNULL) AS TEXT)) ORDER BY json_remove(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))OR(NULL))) ASC  NULLS LAST, (((vt0.c0)>(vt0.c0)) IN ()), ((((((((((vt0.c0)<=(vt0.c0)))OR(((vt0.c0)IS(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(CAST(vt0.c0 AS INTEGER))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((((rt1.c2)OR(rt1.c2)))OR(rt1.c0)))||(((((rt1.c1)AND(rt1.c1)))OR(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)OR(rt1.c2)))OR(rt1.c0)))||(((((rt1.c1)AND(rt1.c1)))OR(rt1.c1))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((((rt1.c2)OR(rt1.c2)))OR(rt1.c0)))||(((((rt1.c1)AND(rt1.c1)))OR(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)OR(rt1.c2)))OR(rt1.c0)))||(((((rt1.c1)AND(rt1.c1)))OR(rt1.c1))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((((rt1.c2)OR(rt1.c2)))OR(rt1.c0)))||(((((rt1.c1)AND(rt1.c1)))OR(rt1.c1)))));
SELECT ALL * FROM rt1 WHERE ((((0.48865518960198273 IN ())) ISNULL)) ORDER BY ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))IS NOT((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((0.48865518960198273 IN ())) ISNULL)) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))IS NOT((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c0))))));
SELECT ALL * FROM rt1 WHERE ((((0.48865518960198273 IN ())) ISNULL)) ORDER BY ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))IS NOT((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((0.48865518960198273 IN ())) ISNULL)) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))IS NOT((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c0))))));
SELECT ALL * FROM rt1 WHERE ((((0.48865518960198273 IN ())) ISNULL)) ORDER BY ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))IS NOT((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c0)))));
SELECT ALL * FROM t0, vt0 WHERE (((((((t0.c1) NOT NULL))AND(CAST(t0.c1 AS REAL))))OR(t0.c0))) ORDER BY (+ (QUOTE(t0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1) NOT NULL))AND(CAST(t0.c1 AS REAL))))OR(t0.c0))) IS TRUE)  as count FROM t0, vt0 ORDER BY (+ (QUOTE(t0.c1)))  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (((((((t0.c1) NOT NULL))AND(CAST(t0.c1 AS REAL))))OR(t0.c0))) ORDER BY (+ (QUOTE(t0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1) NOT NULL))AND(CAST(t0.c1 AS REAL))))OR(t0.c0))) IS TRUE)  as count FROM t0, vt0 ORDER BY (+ (QUOTE(t0.c1)))  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (((((((t0.c1) NOT NULL))AND(CAST(t0.c1 AS REAL))))OR(t0.c0))) ORDER BY (+ (QUOTE(t0.c1)))  NULLS LAST;
SELECT COUNT(*) FROM vt0 NOT INDEXED, t0, rt1 WHERE ((((((rt1.c0, t0.c1, rt1.c0, rt1.c2, rt1.c0))<=((t0.c0, t0.c0, rt1.c0, rt1.c2, rt1.c0)))) NOT BETWEEN (t0.c1 COLLATE NOCASE) AND (((((((((t0.c2)AND(rt1.c2)))AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0, t0.c1, rt1.c0, rt1.c2, rt1.c0))<=((t0.c0, t0.c0, rt1.c0, rt1.c2, rt1.c0)))) NOT BETWEEN (t0.c1 COLLATE NOCASE) AND (((((((((t0.c2)AND(rt1.c2)))AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c1))))) IS TRUE)  as count FROM vt0, t0, rt1);
SELECT COUNT(*) FROM vt0 NOT INDEXED, t0, rt1 WHERE ((((((rt1.c0, t0.c1, rt1.c0, rt1.c2, rt1.c0))<=((t0.c0, t0.c0, rt1.c0, rt1.c2, rt1.c0)))) NOT BETWEEN (t0.c1 COLLATE NOCASE) AND (((((((((t0.c2)AND(rt1.c2)))AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0, t0.c1, rt1.c0, rt1.c2, rt1.c0))<=((t0.c0, t0.c0, rt1.c0, rt1.c2, rt1.c0)))) NOT BETWEEN (t0.c1 COLLATE NOCASE) AND (((((((((t0.c2)AND(rt1.c2)))AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c1))))) IS TRUE)  as count FROM vt0, t0, rt1);
SELECT COUNT(*) FROM vt0 NOT INDEXED, t0, rt1 WHERE ((((((rt1.c0, t0.c1, rt1.c0, rt1.c2, rt1.c0))<=((t0.c0, t0.c0, rt1.c0, rt1.c2, rt1.c0)))) NOT BETWEEN (t0.c1 COLLATE NOCASE) AND (((((((((t0.c2)AND(rt1.c2)))AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c1)))));
SELECT * FROM rt1, t0 WHERE ((CAST(rt1.c1 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c1 AS NUMERIC) IN ())) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE ((CAST(rt1.c1 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c1 AS NUMERIC) IN ())) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE ((CAST(rt1.c1 AS NUMERIC) IN ()));
SELECT COUNT(*) FROM vt0, rt1, t0 WHERE ('RJ') ORDER BY '0.19946434801351687' ASC  NULLS FIRST, (((x'') BETWEEN (rt1.c1) AND (vt0.c0)) IN ((((t0.c1, rt1.c0, rt1.c1))=((rt1.c1, rt1.c1, t0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('RJ') IS TRUE)  as count FROM vt0, rt1, t0 ORDER BY '0.19946434801351687' ASC  NULLS FIRST, (((x'') BETWEEN (rt1.c1) AND (vt0.c0)) IN ((((t0.c1, rt1.c0, rt1.c1))==((rt1.c1, rt1.c1, t0.c1))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1, t0 WHERE ('RJ') ORDER BY '0.19946434801351687' ASC  NULLS FIRST, (((x'') BETWEEN (rt1.c1) AND (vt0.c0)) IN ((((t0.c1, rt1.c0, rt1.c1))=((rt1.c1, rt1.c1, t0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('RJ') IS TRUE)  as count FROM vt0, rt1, t0 ORDER BY '0.19946434801351687' ASC  NULLS FIRST, (((x'') BETWEEN (rt1.c1) AND (vt0.c0)) IN ((((t0.c1, rt1.c0, rt1.c1))==((rt1.c1, rt1.c1, t0.c1))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1, t0 WHERE ('RJ') ORDER BY '0.19946434801351687' ASC  NULLS FIRST, (((x'') BETWEEN (rt1.c1) AND (vt0.c0)) IN ((((t0.c1, rt1.c0, rt1.c1))=((rt1.c1, rt1.c1, t0.c1))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (SQLITE_COMPILEOPTION_GET(CAST('' AS BLOB))) ORDER BY ((((((vt0.c0)OR(rt1.c2)))OR(rt1.c1)))||(rt1.c0 COLLATE NOCASE))  NULLS FIRST, UPPER(rt1.c1 COLLATE RTRIM) ASC, (rt1.c1 IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(CAST('' AS BLOB))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((vt0.c0)OR(rt1.c2)))OR(rt1.c1)))||(rt1.c0 COLLATE NOCASE))  NULLS FIRST, UPPER(rt1.c1 COLLATE RTRIM) ASC, (rt1.c1 IN ()) DESC);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (SQLITE_COMPILEOPTION_GET(CAST('' AS BLOB))) ORDER BY ((((((vt0.c0)OR(rt1.c2)))OR(rt1.c1)))||(rt1.c0 COLLATE NOCASE))  NULLS FIRST, UPPER(rt1.c1 COLLATE RTRIM) ASC, (rt1.c1 IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(CAST('' AS BLOB))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((vt0.c0)OR(rt1.c2)))OR(rt1.c1)))||(rt1.c0 COLLATE NOCASE))  NULLS FIRST, UPPER(rt1.c1 COLLATE RTRIM) ASC, (rt1.c1 IN ()) DESC);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (SQLITE_COMPILEOPTION_GET(CAST('' AS BLOB))) ORDER BY ((((((vt0.c0)OR(rt1.c2)))OR(rt1.c1)))||(rt1.c0 COLLATE NOCASE))  NULLS FIRST, UPPER(rt1.c1 COLLATE RTRIM) ASC, (rt1.c1 IN ()) DESC;
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((NOT (rt1.c0))) ORDER BY ((((rt1.c0)AND(t0.c2)))OR((NOT (t0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt1.c0))) IS TRUE)  as count FROM rt1, t0 ORDER BY ((((rt1.c0)AND(t0.c2)))OR((NOT (t0.c2)))) ASC);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((NOT (rt1.c0))) ORDER BY ((((rt1.c0)AND(t0.c2)))OR((NOT (t0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt1.c0))) IS TRUE)  as count FROM rt1, t0 ORDER BY ((((rt1.c0)AND(t0.c2)))OR((NOT (t0.c2)))) ASC);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((NOT (rt1.c0))) ORDER BY ((((rt1.c0)AND(t0.c2)))OR((NOT (t0.c2)))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT ((vt0.c0)>=('0.8751579705059692'))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((vt0.c0)>=('0.8751579705059692')))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT ((vt0.c0)>=('0.8751579705059692'))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((vt0.c0)>=('0.8751579705059692')))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT ((vt0.c0)>=('0.8751579705059692'))));
SELECT ALL * FROM t0, rt1 WHERE (CASE WHEN (((t0.c2)) BETWEEN ((rt1.c0)) AND ((t0.c0))) THEN t0.c2 WHEN ((t0.c2) IS TRUE) THEN (rt1.c0 IN ()) WHEN CASE WHEN rt1.c1 THEN -1775826962 ELSE t0.c1 END THEN rt1.c2 COLLATE BINARY END) ORDER BY ((CASE WHEN t0.c2 THEN rt1.c0 WHEN rt1.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c1 END)<=(CAST(rt1.c2 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((t0.c2)) BETWEEN ((rt1.c0)) AND ((t0.c0))) THEN t0.c2 WHEN ((t0.c2) IS TRUE) THEN (rt1.c0 IN ()) WHEN CASE WHEN rt1.c1 THEN -1775826962 ELSE t0.c1 END THEN rt1.c2 COLLATE BINARY END) IS TRUE)  as count FROM t0, rt1 ORDER BY ((CASE WHEN t0.c2 THEN rt1.c0 WHEN rt1.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c1 END)<=(CAST(rt1.c2 AS NUMERIC)))  NULLS FIRST);
SELECT ALL * FROM t0, rt1 WHERE (CASE WHEN (((t0.c2)) BETWEEN ((rt1.c0)) AND ((t0.c0))) THEN t0.c2 WHEN ((t0.c2) IS TRUE) THEN (rt1.c0 IN ()) WHEN CASE WHEN rt1.c1 THEN -1775826962 ELSE t0.c1 END THEN rt1.c2 COLLATE BINARY END) ORDER BY ((CASE WHEN t0.c2 THEN rt1.c0 WHEN rt1.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c1 END)<=(CAST(rt1.c2 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((t0.c2)) BETWEEN ((rt1.c0)) AND ((t0.c0))) THEN t0.c2 WHEN ((t0.c2) IS TRUE) THEN (rt1.c0 IN ()) WHEN CASE WHEN rt1.c1 THEN -1775826962 ELSE t0.c1 END THEN rt1.c2 COLLATE BINARY END) IS TRUE)  as count FROM t0, rt1 ORDER BY ((CASE WHEN t0.c2 THEN rt1.c0 WHEN rt1.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c1 END)<=(CAST(rt1.c2 AS NUMERIC)))  NULLS FIRST);
SELECT ALL * FROM t0, rt1 WHERE (CASE WHEN (((t0.c2)) BETWEEN ((rt1.c0)) AND ((t0.c0))) THEN t0.c2 WHEN ((t0.c2) IS TRUE) THEN (rt1.c0 IN ()) WHEN CASE WHEN rt1.c1 THEN -1775826962 ELSE t0.c1 END THEN rt1.c2 COLLATE BINARY END) ORDER BY ((CASE WHEN t0.c2 THEN rt1.c0 WHEN rt1.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c1 END)<=(CAST(rt1.c2 AS NUMERIC)))  NULLS FIRST;
SELECT ALL * FROM vt0, t0, rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((t0.c0)) AND ((((vt0.c0)LIKE(rt1.c2)))))) ORDER BY (CASE t0.c0  WHEN t0.c0 THEN rt1.c2 END IN ())  NULLS LAST, (((t0.c1 IN ()))GLOB((((((((('')AND(t0.c1)))OR(t0.c0)))AND(rt1.c2)))AND(t0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) NOT BETWEEN ((t0.c0)) AND ((((vt0.c0)LIKE(rt1.c2)))))) IS TRUE)  as count FROM vt0, t0, rt1 ORDER BY (CASE t0.c0  WHEN t0.c0 THEN rt1.c2 END IN ())  NULLS LAST, (((t0.c1 IN ()))GLOB((((((((('')AND(t0.c1)))OR(t0.c0)))AND(rt1.c2)))AND(t0.c2)))) DESC);
SELECT ALL * FROM vt0, t0, rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((t0.c0)) AND ((((vt0.c0)LIKE(rt1.c2)))))) ORDER BY (CASE t0.c0  WHEN t0.c0 THEN rt1.c2 END IN ())  NULLS LAST, (((t0.c1 IN ()))GLOB((((((((('')AND(t0.c1)))OR(t0.c0)))AND(rt1.c2)))AND(t0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) NOT BETWEEN ((t0.c0)) AND ((((vt0.c0)LIKE(rt1.c2)))))) IS TRUE)  as count FROM vt0, t0, rt1 ORDER BY (CASE t0.c0  WHEN t0.c0 THEN rt1.c2 END IN ())  NULLS LAST, (((t0.c1 IN ()))GLOB((((((((('')AND(t0.c1)))OR(t0.c0)))AND(rt1.c2)))AND(t0.c2)))) DESC);
SELECT ALL * FROM vt0, t0, rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((t0.c0)) AND ((((vt0.c0)LIKE(rt1.c2)))))) ORDER BY (CASE t0.c0  WHEN t0.c0 THEN rt1.c2 END IN ())  NULLS LAST, (((t0.c1 IN ()))GLOB((((((((('')AND(t0.c1)))OR(t0.c0)))AND(rt1.c2)))AND(t0.c2)))) DESC;
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt1 ON IFNULL((~ (rt1.c2)), ((rt1.c0) NOTNULL)) WHERE (t0.c0) ORDER BY ROUND(t0.c0 COLLATE NOCASE, ((rt1.c1) IS TRUE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt1 ON IFNULL((~ (rt1.c2)), ((rt1.c0) NOTNULL)) ORDER BY ROUND(t0.c0 COLLATE NOCASE, ((rt1.c1) IS TRUE)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt1 ON IFNULL((~ (rt1.c2)), ((rt1.c0) NOTNULL)) WHERE (t0.c0) ORDER BY ROUND(t0.c0 COLLATE NOCASE, ((rt1.c1) IS TRUE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt1 ON IFNULL((~ (rt1.c2)), ((rt1.c0) NOTNULL)) ORDER BY ROUND(t0.c0 COLLATE NOCASE, ((rt1.c1) IS TRUE)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt1 ON IFNULL((~ (rt1.c2)), ((rt1.c0) NOTNULL)) WHERE (t0.c0) ORDER BY ROUND(t0.c0 COLLATE NOCASE, ((rt1.c1) IS TRUE)) DESC  NULLS FIRST;
SELECT * FROM vt0, rt1 FULL OUTER JOIN t0 ON (rt1.c1 COLLATE RTRIM IN (rt1.c2)) WHERE (((((((rt1.c2, rt1.c0, rt1.c0))!=((t0.c0, rt1.c0, t0.c0)))))<=(((+ (t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2, rt1.c0, rt1.c0))<>((t0.c0, rt1.c0, t0.c0)))))<=(((+ (t0.c1)))))) IS TRUE)  as count FROM vt0, rt1 FULL OUTER JOIN t0 ON (rt1.c1 COLLATE RTRIM IN (rt1.c2)));
SELECT * FROM vt0, rt1 FULL OUTER JOIN t0 ON (rt1.c1 COLLATE RTRIM IN (rt1.c2)) WHERE (((((((rt1.c2, rt1.c0, rt1.c0))!=((t0.c0, rt1.c0, t0.c0)))))<=(((+ (t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2, rt1.c0, rt1.c0))<>((t0.c0, rt1.c0, t0.c0)))))<=(((+ (t0.c1)))))) IS TRUE)  as count FROM vt0, rt1 FULL OUTER JOIN t0 ON (rt1.c1 COLLATE RTRIM IN (rt1.c2)));
SELECT * FROM vt0, rt1 FULL OUTER JOIN t0 ON (rt1.c1 COLLATE RTRIM IN (rt1.c2)) WHERE (((((((rt1.c2, rt1.c0, rt1.c0))!=((t0.c0, rt1.c0, t0.c0)))))<=(((+ (t0.c1))))));
SELECT COUNT(*) FROM vt0, rt1, t0 WHERE ((((rt1.c1)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0, rt1, t0);
SELECT COUNT(*) FROM vt0, rt1, t0 WHERE ((((rt1.c1)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0, rt1, t0);
SELECT COUNT(*) FROM vt0, rt1, t0 WHERE ((((rt1.c1)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))) AND ((vt0.c0))));
SELECT COUNT(*) FROM vt0, rt1 WHERE (((CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c0 END) BETWEEN (CASE vt0.c0  WHEN rt1.c2 THEN rt1.c1 END) AND (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c0 END) BETWEEN (CASE vt0.c0  WHEN rt1.c2 THEN rt1.c1 END) AND (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c0 END) BETWEEN (CASE vt0.c0  WHEN rt1.c2 THEN rt1.c1 END) AND (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c0 END) BETWEEN (CASE vt0.c0  WHEN rt1.c2 THEN rt1.c1 END) AND (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c0 END) BETWEEN (CASE vt0.c0  WHEN rt1.c2 THEN rt1.c1 END) AND (((vt0.c0) NOT NULL))));
SELECT COUNT(*) FROM rt1, vt0 NATURAL JOIN t0 WHERE ((((((('-1543828834') NOT BETWEEN (t0.c1) AND (rt1.c2)))AND(vt0.c0)))OR(CAST('-1697386126' AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((((('-1543828834') NOT BETWEEN (t0.c1) AND (rt1.c2)))AND(vt0.c0)))OR(CAST('-1697386126' AS BLOB)))) IS TRUE)  as count FROM rt1, vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM rt1, vt0 NATURAL JOIN t0 WHERE ((((((('-1543828834') NOT BETWEEN (t0.c1) AND (rt1.c2)))AND(vt0.c0)))OR(CAST('-1697386126' AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((((('-1543828834') NOT BETWEEN (t0.c1) AND (rt1.c2)))AND(vt0.c0)))OR(CAST('-1697386126' AS BLOB)))) IS TRUE)  as count FROM rt1, vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM rt1, vt0 NATURAL JOIN t0 WHERE ((((((('-1543828834') NOT BETWEEN (t0.c1) AND (rt1.c2)))AND(vt0.c0)))OR(CAST('-1697386126' AS BLOB))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON TRIM(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 ELSE '0z轄zln轄l' END) WHERE ((CAST(rt1.c0 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt1.c0 AS REAL) IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON TRIM(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 ELSE '0z轄zln轄l' END));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON TRIM(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 ELSE '0z轄zln轄l' END) WHERE ((CAST(rt1.c0 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt1.c0 AS REAL) IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON TRIM(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 ELSE '0z轄zln轄l' END));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON TRIM(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 ELSE '0z轄zln轄l' END) WHERE ((CAST(rt1.c0 AS REAL) IN ()));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (((((TRIM(vt0.c0))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((TRIM(vt0.c0))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (((((TRIM(vt0.c0))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((TRIM(vt0.c0))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (((((TRIM(vt0.c0))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR(CAST(vt0.c0 AS TEXT))));
SELECT * FROM t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c2);
SELECT ALL * FROM rt1 WHERE (((-1.775826962E9) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((-1.775826962E9) NOTNULL)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((-1.775826962E9) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((-1.775826962E9) NOTNULL)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((-1.775826962E9) NOTNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (((COALESCE(DISTINCT vt0.c0, 0.2849371533218412, vt0.c0, vt0.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT vt0.c0, 0.2849371533218412, vt0.c0, vt0.c0)) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((COALESCE(DISTINCT vt0.c0, 0.2849371533218412, vt0.c0, vt0.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT vt0.c0, 0.2849371533218412, vt0.c0, vt0.c0)) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((COALESCE(DISTINCT vt0.c0, 0.2849371533218412, vt0.c0, vt0.c0)) IS FALSE));
SELECT ALL COUNT(*) FROM t0, vt0 NATURAL JOIN rt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM t0, vt0 NATURAL JOIN rt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM t0, vt0 NATURAL JOIN rt1 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((NULL) BETWEEN (t0.c2) AND (t0.c0)));
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN (t0.c2) AND (t0.c0))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((NULL) BETWEEN (t0.c2) AND (t0.c0)));
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN (t0.c2) AND (t0.c0))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((NULL) BETWEEN (t0.c2) AND (t0.c0)));
SELECT COUNT(*) FROM vt0, rt1 WHERE (CAST(((rt1.c0) NOT NULL) AS INTEGER)) ORDER BY rt1.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c0) NOT NULL) AS INTEGER)) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c1 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CAST(((rt1.c0) NOT NULL) AS INTEGER)) ORDER BY rt1.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c0) NOT NULL) AS INTEGER)) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c1 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CAST(((rt1.c0) NOT NULL) AS INTEGER)) ORDER BY rt1.c1 DESC  NULLS FIRST;
SELECT ALL * FROM vt0, rt1 NOT INDEXED, t0 WHERE ((((rt1.c1))<>((CASE WHEN t0.c2 THEN t0.c2 WHEN rt1.c0 THEN vt0.c0 WHEN t0.c1 THEN rt1.c0 END))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1))<>((CASE WHEN t0.c2 THEN t0.c2 WHEN rt1.c0 THEN vt0.c0 WHEN t0.c1 THEN rt1.c0 END)))) IS TRUE)  as count FROM vt0, rt1, t0);
SELECT ALL * FROM vt0, rt1 NOT INDEXED, t0 WHERE ((((rt1.c1))<>((CASE WHEN t0.c2 THEN t0.c2 WHEN rt1.c0 THEN vt0.c0 WHEN t0.c1 THEN rt1.c0 END))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1))<>((CASE WHEN t0.c2 THEN t0.c2 WHEN rt1.c0 THEN vt0.c0 WHEN t0.c1 THEN rt1.c0 END)))) IS TRUE)  as count FROM vt0, rt1, t0);
SELECT ALL * FROM vt0, rt1 NOT INDEXED, t0 WHERE ((((rt1.c1))<>((CASE WHEN t0.c2 THEN t0.c2 WHEN rt1.c0 THEN vt0.c0 WHEN t0.c1 THEN rt1.c0 END))));
SELECT COUNT(*) FROM vt0, rt1 WHERE ((- (rt1.c1)) COLLATE NOCASE) ORDER BY ((((vt0.c0) IS TRUE)) BETWEEN (((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2))) AND (rt1.c1));
SELECT SUM(count) FROM (SELECT ALL (((- (rt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((vt0.c0) IS TRUE)) BETWEEN (((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2))) AND (rt1.c1)));
SELECT COUNT(*) FROM vt0, rt1 WHERE ((- (rt1.c1)) COLLATE NOCASE) ORDER BY ((((vt0.c0) IS TRUE)) BETWEEN (((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2))) AND (rt1.c1));
SELECT SUM(count) FROM (SELECT ALL (((- (rt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((vt0.c0) IS TRUE)) BETWEEN (((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2))) AND (rt1.c1)));
SELECT COUNT(*) FROM vt0, rt1 WHERE ((- (rt1.c1)) COLLATE NOCASE) ORDER BY ((((vt0.c0) IS TRUE)) BETWEEN (((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2))) AND (rt1.c1));
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN (((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN (((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN (((vt0.c0) NOTNULL))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON (((vt0.c0)) NOT BETWEEN ((CASE t0.c1  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN t0.c0 WHEN rt1.c0 THEN t0.c1 END)) AND ((((t0.c0) IS TRUE)))) INNER JOIN t0 ON CAST(rt1.c2 AS NUMERIC) COLLATE BINARY WHERE (x'49be') ORDER BY ABS(((vt0.c0)!=(rt1.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'49be') IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON (((vt0.c0)) NOT BETWEEN ((CASE t0.c1  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN t0.c0 WHEN rt1.c0 THEN t0.c1 END)) AND ((((t0.c0) IS TRUE)))) INNER JOIN t0 ON CAST(rt1.c2 AS NUMERIC) COLLATE BINARY ORDER BY ABS(((vt0.c0)!=(rt1.c2))) DESC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON (((vt0.c0)) NOT BETWEEN ((CASE t0.c1  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN t0.c0 WHEN rt1.c0 THEN t0.c1 END)) AND ((((t0.c0) IS TRUE)))) INNER JOIN t0 ON CAST(rt1.c2 AS NUMERIC) COLLATE BINARY WHERE (x'49be') ORDER BY ABS(((vt0.c0)!=(rt1.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'49be') IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON (((vt0.c0)) NOT BETWEEN ((CASE t0.c1  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN t0.c0 WHEN rt1.c0 THEN t0.c1 END)) AND ((((t0.c0) IS TRUE)))) INNER JOIN t0 ON CAST(rt1.c2 AS NUMERIC) COLLATE BINARY ORDER BY ABS(((vt0.c0)!=(rt1.c2))) DESC);
SELECT ALL * FROM rt1, t0 WHERE (CASE WHEN ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c0)) THEN 0.08353773129042164 ELSE t0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c0)) THEN 0.08353773129042164 ELSE t0.c1 END) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE (CASE WHEN ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c0)) THEN 0.08353773129042164 ELSE t0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c0)) THEN 0.08353773129042164 ELSE t0.c1 END) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE (CASE WHEN ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c0)) THEN 0.08353773129042164 ELSE t0.c1 END);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))))IS NOT(vt0.c0 COLLATE NOCASE))) ORDER BY ((CAST(vt0.c0 AS TEXT)) BETWEEN (NULL) AND (IFNULL(vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))))IS NOT(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS TEXT)) BETWEEN (NULL) AND (IFNULL(vt0.c0, vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))))IS NOT(vt0.c0 COLLATE NOCASE))) ORDER BY ((CAST(vt0.c0 AS TEXT)) BETWEEN (NULL) AND (IFNULL(vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))))IS NOT(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS TEXT)) BETWEEN (NULL) AND (IFNULL(vt0.c0, vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))))IS NOT(vt0.c0 COLLATE NOCASE))) ORDER BY ((CAST(vt0.c0 AS TEXT)) BETWEEN (NULL) AND (IFNULL(vt0.c0, vt0.c0)));
SELECT * FROM rt1 WHERE ((((- (rt1.c2)))>>(json_insert(rt1.c2, rt1.c1, rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt1.c2)))>>(json_insert(rt1.c2, rt1.c1, rt1.c0)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((- (rt1.c2)))>>(json_insert(rt1.c2, rt1.c1, rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt1.c2)))>>(json_insert(rt1.c2, rt1.c1, rt1.c0)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((5.39689289E8)>(rt1.c0)))|('-797293162')));
SELECT SUM(count) FROM (SELECT ALL ((((((5.39689289E8)>(rt1.c0)))|('-797293162'))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((5.39689289E8)>(rt1.c0)))|('-797293162')));
SELECT SUM(count) FROM (SELECT ALL ((((((5.39689289E8)>(rt1.c0)))|('-797293162'))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((5.39689289E8)>(rt1.c0)))|('-797293162')));
SELECT COUNT(*) FROM vt0, t0, rt1 WHERE (UNLIKELY(DISTINCT rt1.c0)) ORDER BY (((rt1.c1)) NOT BETWEEN (((((t0.c0)) NOT BETWEEN ((rt1.c1)) AND ((t0.c1))))) AND (((- (t0.c0)))))  NULLS FIRST, (((~ (rt1.c0)))GLOB(0.23220425542972611))  NULLS FIRST, CAST((NULL IN (rt1.c2)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT rt1.c0)) IS TRUE)  as count FROM vt0, t0, rt1 ORDER BY (((rt1.c1)) NOT BETWEEN (((((t0.c0)) NOT BETWEEN ((rt1.c1)) AND ((t0.c1))))) AND (((- (t0.c0)))))  NULLS FIRST, (((~ (rt1.c0)))GLOB(0.23220425542972611))  NULLS FIRST, CAST((NULL IN (rt1.c2)) AS REAL) DESC);
SELECT COUNT(*) FROM vt0, t0, rt1 WHERE (UNLIKELY(DISTINCT rt1.c0)) ORDER BY (((rt1.c1)) NOT BETWEEN (((((t0.c0)) NOT BETWEEN ((rt1.c1)) AND ((t0.c1))))) AND (((- (t0.c0)))))  NULLS FIRST, (((~ (rt1.c0)))GLOB(0.23220425542972611))  NULLS FIRST, CAST((NULL IN (rt1.c2)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT rt1.c0)) IS TRUE)  as count FROM vt0, t0, rt1 ORDER BY (((rt1.c1)) NOT BETWEEN (((((t0.c0)) NOT BETWEEN ((rt1.c1)) AND ((t0.c1))))) AND (((- (t0.c0)))))  NULLS FIRST, (((~ (rt1.c0)))GLOB(0.23220425542972611))  NULLS FIRST, CAST((NULL IN (rt1.c2)) AS REAL) DESC);
SELECT COUNT(*) FROM vt0, t0, rt1 WHERE (UNLIKELY(DISTINCT rt1.c0)) ORDER BY (((rt1.c1)) NOT BETWEEN (((((t0.c0)) NOT BETWEEN ((rt1.c1)) AND ((t0.c1))))) AND (((- (t0.c0)))))  NULLS FIRST, (((~ (rt1.c0)))GLOB(0.23220425542972611))  NULLS FIRST, CAST((NULL IN (rt1.c2)) AS REAL) DESC;
SELECT COUNT(*) FROM t0, rt1 WHERE (CAST((- (t0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (t0.c0)) AS REAL)) IS TRUE)  as count FROM t0, rt1);
SELECT COUNT(*) FROM t0, rt1 WHERE (CAST((- (t0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (t0.c0)) AS REAL)) IS TRUE)  as count FROM t0, rt1);
SELECT COUNT(*) FROM t0, rt1 WHERE (CAST((- (t0.c0)) AS REAL));
SELECT ALL * FROM rt1, t0 WHERE (t0.c2) ORDER BY t0.c0 COLLATE NOCASE, (((t0.c1)) BETWEEN ((t0.c2)) AND ((((t0.c0) NOT BETWEEN (t0.c1) AND (rt1.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM rt1, t0 ORDER BY t0.c0 COLLATE NOCASE, (((t0.c1)) BETWEEN ((t0.c2)) AND ((((t0.c0) NOT BETWEEN (t0.c1) AND (rt1.c1))))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, t0 WHERE (t0.c2) ORDER BY t0.c0 COLLATE NOCASE, (((t0.c1)) BETWEEN ((t0.c2)) AND ((((t0.c0) NOT BETWEEN (t0.c1) AND (rt1.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM rt1, t0 ORDER BY t0.c0 COLLATE NOCASE, (((t0.c1)) BETWEEN ((t0.c2)) AND ((((t0.c0) NOT BETWEEN (t0.c1) AND (rt1.c1))))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, t0 WHERE (t0.c2) ORDER BY t0.c0 COLLATE NOCASE, (((t0.c1)) BETWEEN ((t0.c2)) AND ((((t0.c0) NOT BETWEEN (t0.c1) AND (rt1.c1))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0 WHERE (((0.5165724629216674) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((0.5165724629216674) ISNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((0.5165724629216674) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((0.5165724629216674) ISNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((0.5165724629216674) ISNULL));
SELECT ALL * FROM vt0, t0 WHERE (CASE ((t0.c1) NOT BETWEEN (t0.c0) AND (x''))  WHEN t0.c0 COLLATE NOCASE THEN ((t0.c1)!=(t0.c0)) END) ORDER BY CAST((vt0.c0 IN ()) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c1) NOT BETWEEN (t0.c0) AND (x''))  WHEN t0.c0 COLLATE NOCASE THEN ((t0.c1)<>(t0.c0)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST((vt0.c0 IN ()) AS TEXT) DESC);
SELECT ALL * FROM vt0, t0 WHERE (CASE ((t0.c1) NOT BETWEEN (t0.c0) AND (x''))  WHEN t0.c0 COLLATE NOCASE THEN ((t0.c1)!=(t0.c0)) END) ORDER BY CAST((vt0.c0 IN ()) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c1) NOT BETWEEN (t0.c0) AND (x''))  WHEN t0.c0 COLLATE NOCASE THEN ((t0.c1)<>(t0.c0)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST((vt0.c0 IN ()) AS TEXT) DESC);
SELECT ALL * FROM vt0, t0 WHERE (CASE ((t0.c1) NOT BETWEEN (t0.c0) AND (x''))  WHEN t0.c0 COLLATE NOCASE THEN ((t0.c1)!=(t0.c0)) END) ORDER BY CAST((vt0.c0 IN ()) AS TEXT) DESC;
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c2)>>(x'887c')))AND(CAST(t0.c1 AS NUMERIC))))AND((('&?{}')%(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2)>>(x'887c')))AND(CAST(t0.c1 AS NUMERIC))))AND((('&?{}')%(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c2)>>(x'887c')))AND(CAST(t0.c1 AS NUMERIC))))AND((('&?{}')%(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2)>>(x'887c')))AND(CAST(t0.c1 AS NUMERIC))))AND((('&?{}')%(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c2)>>(x'887c')))AND(CAST(t0.c1 AS NUMERIC))))AND((('&?{}')%(t0.c2)))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(((((t0.c1)AND(vt0.c0)))AND(t0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((t0.c1)AND(vt0.c0)))AND(t0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(((((t0.c1)AND(vt0.c0)))AND(t0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((t0.c1)AND(vt0.c0)))AND(t0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(((((t0.c1)AND(vt0.c0)))AND(t0.c0)) AS INTEGER));
SELECT * FROM rt1, t0 WHERE (((x'')AND(rt1.c0)) COLLATE BINARY) ORDER BY CAST(rt1.c0 AS INTEGER) DESC, t0.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'')AND(rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1, t0 ORDER BY CAST(rt1.c0 AS INTEGER) DESC, t0.c2 ASC  NULLS FIRST);
SELECT * FROM rt1, t0 WHERE (((x'')AND(rt1.c0)) COLLATE BINARY) ORDER BY CAST(rt1.c0 AS INTEGER) DESC, t0.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'')AND(rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1, t0 ORDER BY CAST(rt1.c0 AS INTEGER) DESC, t0.c2 ASC  NULLS FIRST);
SELECT * FROM rt1, t0 WHERE (((x'')AND(rt1.c0)) COLLATE BINARY) ORDER BY CAST(rt1.c0 AS INTEGER) DESC, t0.c2 ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, '', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, '', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, '', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, '', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, '', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) IS FALSE));
SELECT ALL * FROM t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c2);
SELECT COUNT(*) FROM vt0, rt1 WHERE (0.09354597708588785);
SELECT SUM(count) FROM (SELECT ALL ((0.09354597708588785) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (0.09354597708588785);
SELECT SUM(count) FROM (SELECT ALL ((0.09354597708588785) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (0.09354597708588785);
SELECT * FROM t0, vt0, rt1 WHERE ((((t0.c0 IN (rt1.c2))) NOT BETWEEN (((t0.c1) NOT NULL)) AND ((((t0.c0, rt1.c1, vt0.c0))<>((t0.c1, rt1.c0, rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN (rt1.c2))) NOT BETWEEN (((t0.c1) NOT NULL)) AND ((((t0.c0, rt1.c1, vt0.c0))!=((t0.c1, rt1.c0, rt1.c1)))))) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT * FROM t0, vt0, rt1 WHERE ((((t0.c0 IN (rt1.c2))) NOT BETWEEN (((t0.c1) NOT NULL)) AND ((((t0.c0, rt1.c1, vt0.c0))<>((t0.c1, rt1.c0, rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN (rt1.c2))) NOT BETWEEN (((t0.c1) NOT NULL)) AND ((((t0.c0, rt1.c1, vt0.c0))!=((t0.c1, rt1.c0, rt1.c1)))))) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT * FROM t0, vt0, rt1 WHERE ((((t0.c0 IN (rt1.c2))) NOT BETWEEN (((t0.c1) NOT NULL)) AND ((((t0.c0, rt1.c1, vt0.c0))<>((t0.c1, rt1.c0, rt1.c1))))));
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT (t0.c2))) ORDER BY ((t0.c2) ISNULL) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c2))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c2) ISNULL) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT (t0.c2))) ORDER BY ((t0.c2) ISNULL) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c2))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c2) ISNULL) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT (t0.c2))) ORDER BY ((t0.c2) ISNULL) COLLATE NOCASE  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) NOT BETWEEN (((((vt0.c0)OR(x'3581')))OR(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY vt0.c0 COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL)) NOT BETWEEN (((((vt0.c0)OR(x'3581')))OR(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE BINARY DESC);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) NOT BETWEEN (((((vt0.c0)OR(x'3581')))OR(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY vt0.c0 COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL)) NOT BETWEEN (((((vt0.c0)OR(x'3581')))OR(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE BINARY DESC);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) NOT BETWEEN (((((vt0.c0)OR(x'3581')))OR(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY vt0.c0 COLLATE BINARY DESC;
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c2 COLLATE BINARY, x'', (NOT (vt0.c0))))>=((((((t0.c0)AND(vt0.c0)))AND(t0.c2)), ((((t0.c0)AND(vt0.c0)))OR(t0.c0)), ((t0.c2)/(vt0.c0)))))) ORDER BY CAST(0.7245700751807512 AS TEXT)  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2 COLLATE BINARY, x'', (NOT (vt0.c0))))>=((((((t0.c0)AND(vt0.c0)))AND(t0.c2)), ((((t0.c0)AND(vt0.c0)))OR(t0.c0)), ((t0.c2)/(vt0.c0)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(0.7245700751807512 AS TEXT)  NULLS FIRST, NULL);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c2 COLLATE BINARY, x'', (NOT (vt0.c0))))>=((((((t0.c0)AND(vt0.c0)))AND(t0.c2)), ((((t0.c0)AND(vt0.c0)))OR(t0.c0)), ((t0.c2)/(vt0.c0)))))) ORDER BY CAST(0.7245700751807512 AS TEXT)  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2 COLLATE BINARY, x'', (NOT (vt0.c0))))>=((((((t0.c0)AND(vt0.c0)))AND(t0.c2)), ((((t0.c0)AND(vt0.c0)))OR(t0.c0)), ((t0.c2)/(vt0.c0)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(0.7245700751807512 AS TEXT)  NULLS FIRST, NULL);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c2 COLLATE BINARY, x'', (NOT (vt0.c0))))>=((((((t0.c0)AND(vt0.c0)))AND(t0.c2)), ((((t0.c0)AND(vt0.c0)))OR(t0.c0)), ((t0.c2)/(vt0.c0)))))) ORDER BY CAST(0.7245700751807512 AS TEXT)  NULLS FIRST, NULL;
SELECT ALL * FROM vt0, rt1, t0 WHERE ((((((((((((((rt1.c0 IN ()))OR(((((0.8620845688950634)OR(t0.c0)))OR(t0.c2)))))AND(TRIM(DISTINCT rt1.c2))))OR((((t0.c2)) NOT BETWEEN ((NULL)) AND ((x''))))))OR(rt1.c1)))OR(rt1.c1)))AND(((((vt0.c0)OR(rt1.c1)))AND(x''))))) ORDER BY (+ (((rt1.c0) NOT BETWEEN (t0.c0) AND (rt1.c0))));
SELECT SUM(count) FROM (SELECT (((((((((((((((rt1.c0 IN ()))OR(((((0.8620845688950634)OR(t0.c0)))OR(t0.c2)))))AND(TRIM(DISTINCT rt1.c2))))OR((((t0.c2)) NOT BETWEEN ((NULL)) AND ((x''))))))OR(rt1.c1)))OR(rt1.c1)))AND(((((vt0.c0)OR(rt1.c1)))AND(x''))))) IS TRUE)  as count FROM vt0, rt1, t0 ORDER BY (+ (((rt1.c0) NOT BETWEEN (t0.c0) AND (rt1.c0)))));
SELECT ALL * FROM vt0, rt1, t0 WHERE ((((((((((((((rt1.c0 IN ()))OR(((((0.8620845688950634)OR(t0.c0)))OR(t0.c2)))))AND(TRIM(DISTINCT rt1.c2))))OR((((t0.c2)) NOT BETWEEN ((NULL)) AND ((x''))))))OR(rt1.c1)))OR(rt1.c1)))AND(((((vt0.c0)OR(rt1.c1)))AND(x''))))) ORDER BY (+ (((rt1.c0) NOT BETWEEN (t0.c0) AND (rt1.c0))));
SELECT SUM(count) FROM (SELECT (((((((((((((((rt1.c0 IN ()))OR(((((0.8620845688950634)OR(t0.c0)))OR(t0.c2)))))AND(TRIM(DISTINCT rt1.c2))))OR((((t0.c2)) NOT BETWEEN ((NULL)) AND ((x''))))))OR(rt1.c1)))OR(rt1.c1)))AND(((((vt0.c0)OR(rt1.c1)))AND(x''))))) IS TRUE)  as count FROM vt0, rt1, t0 ORDER BY (+ (((rt1.c0) NOT BETWEEN (t0.c0) AND (rt1.c0)))));
SELECT ALL * FROM vt0, rt1, t0 WHERE ((((((((((((((rt1.c0 IN ()))OR(((((0.8620845688950634)OR(t0.c0)))OR(t0.c2)))))AND(TRIM(DISTINCT rt1.c2))))OR((((t0.c2)) NOT BETWEEN ((NULL)) AND ((x''))))))OR(rt1.c1)))OR(rt1.c1)))AND(((((vt0.c0)OR(rt1.c1)))AND(x''))))) ORDER BY (+ (((rt1.c0) NOT BETWEEN (t0.c0) AND (rt1.c0))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((((rt1.c1) NOTNULL))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CASE vt0.c0  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN x'8576' ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1) NOTNULL))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CASE vt0.c0  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN x'8576' ELSE vt0.c0 END))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((((rt1.c1) NOTNULL))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CASE vt0.c0  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN x'8576' ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1) NOTNULL))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CASE vt0.c0  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN x'8576' ELSE vt0.c0 END))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((((rt1.c1) NOTNULL))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CASE vt0.c0  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN x'8576' ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((0.8620845688950634)OR(t0.c1)))OR(t0.c0)))AND(t0.c2)))OR(t0.c0)))<>(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((0.8620845688950634)OR(t0.c1)))OR(t0.c0)))AND(t0.c2)))OR(t0.c0)))<>(t0.c0))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((0.8620845688950634)OR(t0.c1)))OR(t0.c0)))AND(t0.c2)))OR(t0.c0)))<>(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((0.8620845688950634)OR(t0.c1)))OR(t0.c0)))AND(t0.c2)))OR(t0.c0)))<>(t0.c0))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((0.8620845688950634)OR(t0.c1)))OR(t0.c0)))AND(t0.c2)))OR(t0.c0)))<>(t0.c0)));
SELECT COUNT(*) FROM vt0 WHERE ((('1950246422')=(vt0.c0 COLLATE RTRIM))) ORDER BY vt0.c0 ASC, ((vt0.c0 COLLATE NOCASE)IS(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL (((('1950246422')==(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC, ((vt0.c0 COLLATE NOCASE)IS(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM vt0 WHERE ((('1950246422')=(vt0.c0 COLLATE RTRIM))) ORDER BY vt0.c0 ASC, ((vt0.c0 COLLATE NOCASE)IS(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL (((('1950246422')==(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC, ((vt0.c0 COLLATE NOCASE)IS(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM vt0 WHERE ((('1950246422')=(vt0.c0 COLLATE RTRIM))) ORDER BY vt0.c0 ASC, ((vt0.c0 COLLATE NOCASE)IS(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))&(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL))&(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))&(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL))&(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))&(CAST(vt0.c0 AS INTEGER))));
SELECT * FROM t0, rt1 WHERE (((((NULL)AND(((((((((t0.c1)OR(t0.c2)))OR(rt1.c1)))OR(t0.c0)))OR(t0.c0)))))AND((rt1.c2 IN ())))) ORDER BY ((x'')<<(((((rt1.c1)OR(t0.c1)))OR(rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)AND(((((((((t0.c1)OR(t0.c2)))OR(rt1.c1)))OR(t0.c0)))OR(t0.c0)))))AND((rt1.c2 IN ())))) IS TRUE)  as count FROM t0, rt1 ORDER BY ((x'')<<(((((rt1.c1)OR(t0.c1)))OR(rt1.c0)))) DESC);
SELECT * FROM t0, rt1 WHERE (((((NULL)AND(((((((((t0.c1)OR(t0.c2)))OR(rt1.c1)))OR(t0.c0)))OR(t0.c0)))))AND((rt1.c2 IN ())))) ORDER BY ((x'')<<(((((rt1.c1)OR(t0.c1)))OR(rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)AND(((((((((t0.c1)OR(t0.c2)))OR(rt1.c1)))OR(t0.c0)))OR(t0.c0)))))AND((rt1.c2 IN ())))) IS TRUE)  as count FROM t0, rt1 ORDER BY ((x'')<<(((((rt1.c1)OR(t0.c1)))OR(rt1.c0)))) DESC);
SELECT * FROM t0, rt1 WHERE (((((NULL)AND(((((((((t0.c1)OR(t0.c2)))OR(rt1.c1)))OR(t0.c0)))OR(t0.c0)))))AND((rt1.c2 IN ())))) ORDER BY ((x'')<<(((((rt1.c1)OR(t0.c1)))OR(rt1.c0)))) DESC;
SELECT ALL * FROM vt0 INNER JOIN rt1 ON (((((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c0))))<=(ABS('2089829261'))) WHERE (((rt1.c2 COLLATE NOCASE) ISNULL)) ORDER BY CASE WHEN (rt1.c1 IN ()) THEN (((vt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c2 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (((((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c0))))<=(ABS('2089829261'))) ORDER BY CASE WHEN (rt1.c1 IN ()) THEN (((vt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))) END  NULLS FIRST);
SELECT ALL * FROM vt0 INNER JOIN rt1 ON (((((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c0))))<=(ABS('2089829261'))) WHERE (((rt1.c2 COLLATE NOCASE) ISNULL)) ORDER BY CASE WHEN (rt1.c1 IN ()) THEN (((vt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c2 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (((((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c0))))<=(ABS('2089829261'))) ORDER BY CASE WHEN (rt1.c1 IN ()) THEN (((vt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))) END  NULLS FIRST);
SELECT ALL * FROM vt0 INNER JOIN rt1 ON (((((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c0))))<=(ABS('2089829261'))) WHERE (((rt1.c2 COLLATE NOCASE) ISNULL)) ORDER BY CASE WHEN (rt1.c1 IN ()) THEN (((vt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))) END  NULLS FIRST;
SELECT ALL * FROM rt1, t0 WHERE ((+ (((t0.c1) IS TRUE)))) ORDER BY (+ ((((rt1.c2))<=((0.10917986987301131))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((t0.c1) IS TRUE)))) IS TRUE)  as count FROM rt1, t0 ORDER BY (+ ((((rt1.c2))<=((0.10917986987301131))))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, t0 WHERE ((+ (((t0.c1) IS TRUE)))) ORDER BY (+ ((((rt1.c2))<=((0.10917986987301131))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((t0.c1) IS TRUE)))) IS TRUE)  as count FROM rt1, t0 ORDER BY (+ ((((rt1.c2))<=((0.10917986987301131))))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, t0 WHERE ((+ (((t0.c1) IS TRUE)))) ORDER BY (+ ((((rt1.c2))<=((0.10917986987301131))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt0 WHERE (0.27724537733649923);
SELECT SUM(count) FROM (SELECT ((0.27724537733649923) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (0.27724537733649923);
SELECT SUM(count) FROM (SELECT ((0.27724537733649923) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (0.27724537733649923);
SELECT COUNT(*) FROM rt1, t0, vt0 WHERE (CASE load_extension(t0.c2)  WHEN (+ (t0.c0)) THEN ((((((((rt1.c1)OR(t0.c1)))OR(rt1.c0)))AND(t0.c2)))OR(t0.c1)) ELSE CASE t0.c1  WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN rt1.c2 WHEN t0.c2 THEN x'' ELSE rt1.c1 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE load_extension(t0.c2)  WHEN (+ (t0.c0)) THEN ((((((((rt1.c1)OR(t0.c1)))OR(rt1.c0)))AND(t0.c2)))OR(t0.c1)) ELSE CASE t0.c1  WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN rt1.c2 WHEN t0.c2 THEN x'' ELSE rt1.c1 END END) IS TRUE)  as count FROM rt1, t0, vt0);
SELECT COUNT(*) FROM rt1, t0, vt0 WHERE (CASE load_extension(t0.c2)  WHEN (+ (t0.c0)) THEN ((((((((rt1.c1)OR(t0.c1)))OR(rt1.c0)))AND(t0.c2)))OR(t0.c1)) ELSE CASE t0.c1  WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN rt1.c2 WHEN t0.c2 THEN x'' ELSE rt1.c1 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE load_extension(t0.c2)  WHEN (+ (t0.c0)) THEN ((((((((rt1.c1)OR(t0.c1)))OR(rt1.c0)))AND(t0.c2)))OR(t0.c1)) ELSE CASE t0.c1  WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN rt1.c2 WHEN t0.c2 THEN x'' ELSE rt1.c1 END END) IS TRUE)  as count FROM rt1, t0, vt0);
SELECT ALL COUNT(*) FROM t0, rt1 NATURAL JOIN vt0 WHERE (t0.c1) ORDER BY CASE WHEN ((t0.c1)IS NOT(NULL)) THEN (t0.c0 IN ()) END, '389210657', CASE WHEN ((((rt1.c1)OR(x'')))AND(t0.c1)) THEN ((((t0.c1)AND(rt1.c1)))OR(t0.c2)) ELSE json_array_length(vt0.c0, t0.c0) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0, rt1 NATURAL JOIN vt0 ORDER BY CASE WHEN ((t0.c1)IS NOT(NULL)) THEN (t0.c0 IN ()) END, '389210657', CASE WHEN ((((rt1.c1)OR(x'')))AND(t0.c1)) THEN ((((t0.c1)AND(rt1.c1)))OR(t0.c2)) ELSE json_array_length(vt0.c0, t0.c0) END  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt1 NATURAL JOIN vt0 WHERE (t0.c1) ORDER BY CASE WHEN ((t0.c1)IS NOT(NULL)) THEN (t0.c0 IN ()) END, '389210657', CASE WHEN ((((rt1.c1)OR(x'')))AND(t0.c1)) THEN ((((t0.c1)AND(rt1.c1)))OR(t0.c2)) ELSE json_array_length(vt0.c0, t0.c0) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0, rt1 NATURAL JOIN vt0 ORDER BY CASE WHEN ((t0.c1)IS NOT(NULL)) THEN (t0.c0 IN ()) END, '389210657', CASE WHEN ((((rt1.c1)OR(x'')))AND(t0.c1)) THEN ((((t0.c1)AND(rt1.c1)))OR(t0.c2)) ELSE json_array_length(vt0.c0, t0.c0) END  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt1 NATURAL JOIN vt0 WHERE (t0.c1) ORDER BY CASE WHEN ((t0.c1)IS NOT(NULL)) THEN (t0.c0 IN ()) END, '389210657', CASE WHEN ((((rt1.c1)OR(x'')))AND(t0.c1)) THEN ((((t0.c1)AND(rt1.c1)))OR(t0.c2)) ELSE json_array_length(vt0.c0, t0.c0) END  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (UNLIKELY((((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))))) ORDER BY ((((((vt0.c0)OR(t0.c0)))AND(vt0.c0))) BETWEEN (ABS(DISTINCT t0.c2)) AND (vt0.c0)) ASC  NULLS LAST, ((CAST(0.668674857696523 AS REAL)) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY((((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((vt0.c0)OR(t0.c0)))AND(vt0.c0))) BETWEEN (ABS(DISTINCT t0.c2)) AND (vt0.c0)) ASC  NULLS LAST, ((CAST(0.668674857696523 AS REAL)) ISNULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (UNLIKELY((((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))))) ORDER BY ((((((vt0.c0)OR(t0.c0)))AND(vt0.c0))) BETWEEN (ABS(DISTINCT t0.c2)) AND (vt0.c0)) ASC  NULLS LAST, ((CAST(0.668674857696523 AS REAL)) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY((((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((vt0.c0)OR(t0.c0)))AND(vt0.c0))) BETWEEN (ABS(DISTINCT t0.c2)) AND (vt0.c0)) ASC  NULLS LAST, ((CAST(0.668674857696523 AS REAL)) ISNULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (UNLIKELY((((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))))) ORDER BY ((((((vt0.c0)OR(t0.c0)))AND(vt0.c0))) BETWEEN (ABS(DISTINCT t0.c2)) AND (vt0.c0)) ASC  NULLS LAST, ((CAST(0.668674857696523 AS REAL)) ISNULL) ASC  NULLS LAST;
SELECT ALL * FROM vt0, rt1 INNER JOIN t0 ON ((t0.c0 COLLATE BINARY)*(rt1.c0 COLLATE RTRIM)) WHERE (((CASE '-836318518'  WHEN rt1.c2 THEN rt1.c2 END) NOT BETWEEN (CAST(t0.c1 AS NUMERIC)) AND (CAST(t0.c1 AS INTEGER)))) ORDER BY ROUND(t0.c2, (NOT (vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE '-836318518'  WHEN rt1.c2 THEN rt1.c2 END) NOT BETWEEN (CAST(t0.c1 AS NUMERIC)) AND (CAST(t0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt1 INNER JOIN t0 ON ((t0.c0 COLLATE BINARY)*(rt1.c0 COLLATE RTRIM)) ORDER BY ROUND(t0.c2, (NOT (vt0.c0))) DESC);
SELECT ALL * FROM vt0, rt1 INNER JOIN t0 ON ((t0.c0 COLLATE BINARY)*(rt1.c0 COLLATE RTRIM)) WHERE (((CASE '-836318518'  WHEN rt1.c2 THEN rt1.c2 END) NOT BETWEEN (CAST(t0.c1 AS NUMERIC)) AND (CAST(t0.c1 AS INTEGER)))) ORDER BY ROUND(t0.c2, (NOT (vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE '-836318518'  WHEN rt1.c2 THEN rt1.c2 END) NOT BETWEEN (CAST(t0.c1 AS NUMERIC)) AND (CAST(t0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt1 INNER JOIN t0 ON ((t0.c0 COLLATE BINARY)*(rt1.c0 COLLATE RTRIM)) ORDER BY ROUND(t0.c2, (NOT (vt0.c0))) DESC);
SELECT ALL * FROM vt0, rt1 INNER JOIN t0 ON ((t0.c0 COLLATE BINARY)*(rt1.c0 COLLATE RTRIM)) WHERE (((CASE '-836318518'  WHEN rt1.c2 THEN rt1.c2 END) NOT BETWEEN (CAST(t0.c1 AS NUMERIC)) AND (CAST(t0.c1 AS INTEGER)))) ORDER BY ROUND(t0.c2, (NOT (vt0.c0))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS FALSE)) NOT BETWEEN (((vt0.c0)IS(vt0.c0))) AND (((vt0.c0)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS FALSE)) NOT BETWEEN (((vt0.c0)IS(vt0.c0))) AND (((vt0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS FALSE)) NOT BETWEEN (((vt0.c0)IS(vt0.c0))) AND (((vt0.c0)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS FALSE)) NOT BETWEEN (((vt0.c0)IS(vt0.c0))) AND (((vt0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS FALSE)) NOT BETWEEN (((vt0.c0)IS(vt0.c0))) AND (((vt0.c0)IS(vt0.c0)))));
SELECT * FROM t0 WHERE (((t0.c0) NOT BETWEEN (t0.c1) AND (CASE WHEN t0.c1 THEN t0.c0 END))) ORDER BY ((((((((((t0.c1)AND(t0.c2)))AND(0X108aff93)))AND(t0.c0)))AND(t0.c2))) BETWEEN (highlight(t0.c0, t0.c2, t0.c1, t0.c2)) AND (((t0.c0) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOT BETWEEN (t0.c1) AND (CASE WHEN t0.c1 THEN t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY ((((((((((t0.c1)AND(t0.c2)))AND(0x108aff93)))AND(t0.c0)))AND(t0.c2))) BETWEEN (highlight(t0.c0, t0.c2, t0.c1, t0.c2)) AND (((t0.c0) ISNULL))) ASC);
SELECT * FROM t0 WHERE (((t0.c0) NOT BETWEEN (t0.c1) AND (CASE WHEN t0.c1 THEN t0.c0 END))) ORDER BY ((((((((((t0.c1)AND(t0.c2)))AND(0X108aff93)))AND(t0.c0)))AND(t0.c2))) BETWEEN (highlight(t0.c0, t0.c2, t0.c1, t0.c2)) AND (((t0.c0) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOT BETWEEN (t0.c1) AND (CASE WHEN t0.c1 THEN t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY ((((((((((t0.c1)AND(t0.c2)))AND(0x108aff93)))AND(t0.c0)))AND(t0.c2))) BETWEEN (highlight(t0.c0, t0.c2, t0.c1, t0.c2)) AND (((t0.c0) ISNULL))) ASC);
SELECT COUNT(*) FROM vt0, rt1 WHERE (rt1.c2) ORDER BY rt1.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c1 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (rt1.c2) ORDER BY rt1.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c1 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (rt1.c2) ORDER BY rt1.c1 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)<<(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)<<(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)<<(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)<<(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)<<(vt0.c0)) END);
SELECT COUNT(*) FROM t0 WHERE ((- (625823284)));
SELECT SUM(count) FROM (SELECT (((- (625823284))) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT COUNT(*) FROM t0 WHERE ((- (625823284)));
SELECT SUM(count) FROM (SELECT (((- (625823284))) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT COUNT(*) FROM t0 WHERE ((- (625823284)));
SELECT COUNT(*) FROM t0 INDEXED BY i95, vt0, rt1 WHERE (((CAST(57289820 AS BLOB))AND(((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((CAST(57289820 AS BLOB))AND(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM t0 INDEXED BY i95, vt0, rt1);
SELECT COUNT(*) FROM t0 INDEXED BY i95, vt0, rt1 WHERE (((CAST(57289820 AS BLOB))AND(((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((CAST(57289820 AS BLOB))AND(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM t0 INDEXED BY i95, vt0, rt1);
SELECT COUNT(*) FROM t0 INDEXED BY i95, vt0, rt1 WHERE (((CAST(57289820 AS BLOB))AND(((vt0.c0) NOT NULL))));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN t0 ON ((((((t0.c2)<(rt1.c0)))OR(CAST(t0.c2 AS NUMERIC))))OR(((rt1.c1) IS TRUE))) WHERE ((NOT (TRIM(rt1.c1, 696384643))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (TRIM(rt1.c1, 696384643)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN t0 ON ((((((t0.c2)<(rt1.c0)))OR(CAST(t0.c2 AS NUMERIC))))OR(((rt1.c1) IS TRUE))));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN t0 ON ((((((t0.c2)<(rt1.c0)))OR(CAST(t0.c2 AS NUMERIC))))OR(((rt1.c1) IS TRUE))) WHERE ((NOT (TRIM(rt1.c1, 696384643))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (TRIM(rt1.c1, 696384643)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN t0 ON ((((((t0.c2)<(rt1.c0)))OR(CAST(t0.c2 AS NUMERIC))))OR(((rt1.c1) IS TRUE))));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN t0 ON ((((((t0.c2)<(rt1.c0)))OR(CAST(t0.c2 AS NUMERIC))))OR(((rt1.c1) IS TRUE))) WHERE ((NOT (TRIM(rt1.c1, 696384643))));
SELECT COUNT(*) FROM vt0 WHERE (CAST((('-640344650')AND(vt0.c0)) AS TEXT)) ORDER BY LIKELIHOOD(vt0.c0 COLLATE BINARY, 0.9378308493322144) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((('-640344650')AND(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(vt0.c0 COLLATE BINARY, 0.9378308493322144) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST((('-640344650')AND(vt0.c0)) AS TEXT)) ORDER BY LIKELIHOOD(vt0.c0 COLLATE BINARY, 0.9378308493322144) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((('-640344650')AND(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(vt0.c0 COLLATE BINARY, 0.9378308493322144) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST((('-640344650')AND(vt0.c0)) AS TEXT)) ORDER BY LIKELIHOOD(vt0.c0 COLLATE BINARY, 0.9378308493322144) DESC  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE (CAST(NULL COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CAST(NULL COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CAST(NULL COLLATE RTRIM AS INTEGER));
SELECT COUNT(*) FROM t0, rt1 WHERE (((((rt1.c1)<=(t0.c1))) NOTNULL)) ORDER BY 0.7388996999842271;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)<=(t0.c1))) NOTNULL)) IS TRUE)  as count FROM t0, rt1 ORDER BY 0.7388996999842271);
SELECT COUNT(*) FROM t0, rt1 WHERE (((((rt1.c1)<=(t0.c1))) NOTNULL)) ORDER BY 0.7388996999842271;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)<=(t0.c1))) NOTNULL)) IS TRUE)  as count FROM t0, rt1 ORDER BY 0.7388996999842271);
SELECT COUNT(*) FROM t0, rt1 WHERE (((((rt1.c1)<=(t0.c1))) NOTNULL)) ORDER BY 0.7388996999842271;
SELECT COUNT(*) FROM vt0, rt1, t0 WHERE (((((rt1.c0)>>(t0.c2))) NOT BETWEEN ((NULL IN (rt1.c2, rt1.c2, rt1.c2))) AND (TRIM(DISTINCT vt0.c0)))) ORDER BY TYPEOF(rt1.c2 COLLATE RTRIM) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)>>(t0.c2))) NOT BETWEEN ((NULL IN (rt1.c2, rt1.c2, rt1.c2))) AND (TRIM(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0, rt1, t0 ORDER BY TYPEOF(rt1.c2 COLLATE RTRIM) ASC);
SELECT COUNT(*) FROM vt0, rt1, t0 WHERE (((((rt1.c0)>>(t0.c2))) NOT BETWEEN ((NULL IN (rt1.c2, rt1.c2, rt1.c2))) AND (TRIM(DISTINCT vt0.c0)))) ORDER BY TYPEOF(rt1.c2 COLLATE RTRIM) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)>>(t0.c2))) NOT BETWEEN ((NULL IN (rt1.c2, rt1.c2, rt1.c2))) AND (TRIM(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0, rt1, t0 ORDER BY TYPEOF(rt1.c2 COLLATE RTRIM) ASC);
SELECT COUNT(*) FROM vt0, rt1, t0 WHERE (((((rt1.c0)>>(t0.c2))) NOT BETWEEN ((NULL IN (rt1.c2, rt1.c2, rt1.c2))) AND (TRIM(DISTINCT vt0.c0)))) ORDER BY TYPEOF(rt1.c2 COLLATE RTRIM) ASC;
SELECT ALL COUNT(*) FROM t0, rt1, vt0 WHERE (((((t0.c1) NOTNULL)) NOTNULL)) ORDER BY CAST(DATETIME(t0.c2, vt0.c0, t0.c2) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM t0, rt1, vt0 ORDER BY CAST(DATETIME(t0.c2, vt0.c0, t0.c2) AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt1, vt0 WHERE (((((t0.c1) NOTNULL)) NOTNULL)) ORDER BY CAST(DATETIME(t0.c2, vt0.c0, t0.c2) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM t0, rt1, vt0 ORDER BY CAST(DATETIME(t0.c2, vt0.c0, t0.c2) AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt1, vt0 WHERE (((((t0.c1) NOTNULL)) NOTNULL)) ORDER BY CAST(DATETIME(t0.c2, vt0.c0, t0.c2) AS BLOB)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0, rt1 WHERE (CAST((NOT (rt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt1.c0)) AS REAL)) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT ALL COUNT(*) FROM t0, vt0, rt1 WHERE (CAST((NOT (rt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt1.c0)) AS REAL)) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT ALL COUNT(*) FROM t0, vt0, rt1 WHERE (CAST((NOT (rt1.c0)) AS REAL));
SELECT ALL * FROM t0, rt1 WHERE ((((t0.c2 IN (rt1.c2, rt1.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2 IN (rt1.c2, rt1.c1))) NOT NULL)) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE ((((t0.c2 IN (rt1.c2, rt1.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2 IN (rt1.c2, rt1.c1))) NOT NULL)) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE ((((t0.c2 IN (rt1.c2, rt1.c1))) NOT NULL));
SELECT ALL * FROM vt0, t0, rt1 WHERE (UPPER(rt1.c2));
SELECT SUM(count) FROM (SELECT ((UPPER(rt1.c2)) IS TRUE)  as count FROM vt0, t0, rt1);
SELECT ALL * FROM vt0, t0, rt1 WHERE (UPPER(rt1.c2));
SELECT SUM(count) FROM (SELECT ((UPPER(rt1.c2)) IS TRUE)  as count FROM vt0, t0, rt1);
SELECT ALL * FROM vt0, t0, rt1 WHERE (UPPER(rt1.c2));
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS INTEGER));
SELECT ALL * FROM vt0 WHERE (CASE WHEN (((0.14279413164446964)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((x'')<=(vt0.c0)) ELSE ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) END) ORDER BY (+ (vt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((0.14279413164446964)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((x'')<=(vt0.c0)) ELSE ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (+ (vt0.c0)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (((0.14279413164446964)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((x'')<=(vt0.c0)) ELSE ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) END) ORDER BY (+ (vt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((0.14279413164446964)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((x'')<=(vt0.c0)) ELSE ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (+ (vt0.c0)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (((0.14279413164446964)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((x'')<=(vt0.c0)) ELSE ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) END) ORDER BY (+ (vt0.c0)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (t0.c0);
SELECT COUNT(*) FROM rt1, t0 WHERE ((((+ (rt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c0))) ISNULL)) IS TRUE)  as count FROM rt1, t0);
SELECT COUNT(*) FROM rt1, t0 WHERE ((((+ (rt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c0))) ISNULL)) IS TRUE)  as count FROM rt1, t0);
SELECT COUNT(*) FROM rt1, t0 WHERE ((((+ (rt1.c0))) ISNULL));
SELECT COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN t0 ON ((((((rt1.c1)GLOB(t0.c1)))AND(((t0.c2)IS(rt1.c1)))))OR(((rt1.c2)IS NOT(rt1.c2)))) WHERE (((((t0.c2) IS FALSE)) NOT BETWEEN (LIKELY(DISTINCT rt1.c2)) AND (t0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((t0.c2) IS FALSE)) NOT BETWEEN (LIKELY(DISTINCT rt1.c2)) AND (t0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON ((((((rt1.c1)GLOB(t0.c1)))AND(((t0.c2)IS(rt1.c1)))))OR(((rt1.c2)IS NOT(rt1.c2)))));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN t0 ON ((((((rt1.c1)GLOB(t0.c1)))AND(((t0.c2)IS(rt1.c1)))))OR(((rt1.c2)IS NOT(rt1.c2)))) WHERE (((((t0.c2) IS FALSE)) NOT BETWEEN (LIKELY(DISTINCT rt1.c2)) AND (t0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((t0.c2) IS FALSE)) NOT BETWEEN (LIKELY(DISTINCT rt1.c2)) AND (t0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON ((((((rt1.c1)GLOB(t0.c1)))AND(((t0.c2)IS(rt1.c1)))))OR(((rt1.c2)IS NOT(rt1.c2)))));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN t0 ON ((((((rt1.c1)GLOB(t0.c1)))AND(((t0.c2)IS(rt1.c1)))))OR(((rt1.c2)IS NOT(rt1.c2)))) WHERE (((((t0.c2) IS FALSE)) NOT BETWEEN (LIKELY(DISTINCT rt1.c2)) AND (t0.c1 COLLATE BINARY)));
SELECT * FROM t0 WHERE (((((t0.c2) ISNULL)) BETWEEN (((t0.c1)IS(t0.c0))) AND (((t0.c0) IS TRUE)))) ORDER BY x'' COLLATE BINARY ASC, ((((t0.c1)>>(t0.c1)))GLOB(t0.c1)) DESC, ((((t0.c2)-(t0.c0)))IS NOT((- (t0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2) ISNULL)) BETWEEN (((t0.c1)IS(t0.c0))) AND (((t0.c0) IS TRUE)))) IS TRUE)  as count FROM t0 ORDER BY x'' COLLATE BINARY ASC, ((((t0.c1)>>(t0.c1)))GLOB(t0.c1)) DESC, ((((t0.c2)-(t0.c0)))IS NOT((- (t0.c1))))  NULLS FIRST);
SELECT * FROM t0 WHERE (((((t0.c2) ISNULL)) BETWEEN (((t0.c1)IS(t0.c0))) AND (((t0.c0) IS TRUE)))) ORDER BY x'' COLLATE BINARY ASC, ((((t0.c1)>>(t0.c1)))GLOB(t0.c1)) DESC, ((((t0.c2)-(t0.c0)))IS NOT((- (t0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2) ISNULL)) BETWEEN (((t0.c1)IS(t0.c0))) AND (((t0.c0) IS TRUE)))) IS TRUE)  as count FROM t0 ORDER BY x'' COLLATE BINARY ASC, ((((t0.c1)>>(t0.c1)))GLOB(t0.c1)) DESC, ((((t0.c2)-(t0.c0)))IS NOT((- (t0.c1))))  NULLS FIRST);
SELECT * FROM t0 WHERE (((((t0.c2) ISNULL)) BETWEEN (((t0.c1)IS(t0.c0))) AND (((t0.c0) IS TRUE)))) ORDER BY x'' COLLATE BINARY ASC, ((((t0.c1)>>(t0.c1)))GLOB(t0.c1)) DESC, ((((t0.c2)-(t0.c0)))IS NOT((- (t0.c1))))  NULLS FIRST;
SELECT * FROM vt0, rt1, t0 WHERE (((((t0.c1)+(vt0.c0))) ISNULL)) ORDER BY (((NULL, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c1, t0.c0, 0.1632664969948765)) AND ((rt1.c1, rt1.c2, rt1.c2))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)+(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, rt1, t0 ORDER BY (((NULL, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c1, t0.c0, 0.1632664969948765)) AND ((rt1.c1, rt1.c2, rt1.c2))) COLLATE RTRIM);
SELECT * FROM vt0, rt1, t0 WHERE (((((t0.c1)+(vt0.c0))) ISNULL)) ORDER BY (((NULL, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c1, t0.c0, 0.1632664969948765)) AND ((rt1.c1, rt1.c2, rt1.c2))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)+(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, rt1, t0 ORDER BY (((NULL, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c1, t0.c0, 0.1632664969948765)) AND ((rt1.c1, rt1.c2, rt1.c2))) COLLATE RTRIM);
SELECT * FROM vt0, rt1, t0 WHERE (((((t0.c1)+(vt0.c0))) ISNULL)) ORDER BY (((NULL, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c1, t0.c0, 0.1632664969948765)) AND ((rt1.c1, rt1.c2, rt1.c2))) COLLATE RTRIM;
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((((((((((rt1.c2))!=((rt1.c0))))OR(((rt1.c2) BETWEEN (rt1.c0) AND (vt0.c0)))))OR(CAST('0.7133666526892575' AS REAL))))AND(((rt1.c0)<=(rt1.c2)))))OR(CASE WHEN rt1.c1 THEN vt0.c0 END))) ORDER BY (((- (x''))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt1.c2))<>((rt1.c0))))OR(((rt1.c2) BETWEEN (rt1.c0) AND (vt0.c0)))))OR(CAST('0.7133666526892575' AS REAL))))AND(((rt1.c0)<=(rt1.c2)))))OR(CASE WHEN rt1.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((- (x''))) IS TRUE) ASC);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((((((((((rt1.c2))!=((rt1.c0))))OR(((rt1.c2) BETWEEN (rt1.c0) AND (vt0.c0)))))OR(CAST('0.7133666526892575' AS REAL))))AND(((rt1.c0)<=(rt1.c2)))))OR(CASE WHEN rt1.c1 THEN vt0.c0 END))) ORDER BY (((- (x''))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt1.c2))<>((rt1.c0))))OR(((rt1.c2) BETWEEN (rt1.c0) AND (vt0.c0)))))OR(CAST('0.7133666526892575' AS REAL))))AND(((rt1.c0)<=(rt1.c2)))))OR(CASE WHEN rt1.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((- (x''))) IS TRUE) ASC);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((((((((((rt1.c2))!=((rt1.c0))))OR(((rt1.c2) BETWEEN (rt1.c0) AND (vt0.c0)))))OR(CAST('0.7133666526892575' AS REAL))))AND(((rt1.c0)<=(rt1.c2)))))OR(CASE WHEN rt1.c1 THEN vt0.c0 END))) ORDER BY (((- (x''))) IS TRUE) ASC;
SELECT ALL * FROM rt1, t0, vt0 WHERE ((((t0.c2, t0.c2, rt1.c2)) BETWEEN ((((t0.c0)<>(t0.c1)), (rt1.c2 IN (rt1.c1)), ((rt1.c0) IS TRUE))) AND ((x'c2c4', ((vt0.c0) NOT BETWEEN (x'2b76') AND (t0.c0)), (((rt1.c2, rt1.c2, rt1.c0, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c1, t0.c0, t0.c2, '')) AND ((t0.c2, rt1.c1, rt1.c1, t0.c0, rt1.c1))))))) ORDER BY (((x'') ISNULL) IN ()), HEX(DISTINCT t0.c2 COLLATE BINARY) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c2, t0.c2, rt1.c2)) BETWEEN ((((t0.c0)!=(t0.c1)), (rt1.c2 IN (rt1.c1)), ((rt1.c0) IS TRUE))) AND ((x'c2c4', ((vt0.c0) NOT BETWEEN (x'2b76') AND (t0.c0)), (((rt1.c2, rt1.c2, rt1.c0, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c1, t0.c0, t0.c2, '')) AND ((t0.c2, rt1.c1, rt1.c1, t0.c0, rt1.c1))))))) IS TRUE)  as count FROM rt1, t0, vt0 ORDER BY (((x'') ISNULL) IN ()), HEX(DISTINCT t0.c2 COLLATE BINARY) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, t0, vt0 WHERE ((((t0.c2, t0.c2, rt1.c2)) BETWEEN ((((t0.c0)<>(t0.c1)), (rt1.c2 IN (rt1.c1)), ((rt1.c0) IS TRUE))) AND ((x'c2c4', ((vt0.c0) NOT BETWEEN (x'2b76') AND (t0.c0)), (((rt1.c2, rt1.c2, rt1.c0, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c1, t0.c0, t0.c2, '')) AND ((t0.c2, rt1.c1, rt1.c1, t0.c0, rt1.c1))))))) ORDER BY (((x'') ISNULL) IN ()), HEX(DISTINCT t0.c2 COLLATE BINARY) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c2, t0.c2, rt1.c2)) BETWEEN ((((t0.c0)!=(t0.c1)), (rt1.c2 IN (rt1.c1)), ((rt1.c0) IS TRUE))) AND ((x'c2c4', ((vt0.c0) NOT BETWEEN (x'2b76') AND (t0.c0)), (((rt1.c2, rt1.c2, rt1.c0, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c1, t0.c0, t0.c2, '')) AND ((t0.c2, rt1.c1, rt1.c1, t0.c0, rt1.c1))))))) IS TRUE)  as count FROM rt1, t0, vt0 ORDER BY (((x'') ISNULL) IN ()), HEX(DISTINCT t0.c2 COLLATE BINARY) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, t0, vt0 WHERE ((((t0.c2, t0.c2, rt1.c2)) BETWEEN ((((t0.c0)<>(t0.c1)), (rt1.c2 IN (rt1.c1)), ((rt1.c0) IS TRUE))) AND ((x'c2c4', ((vt0.c0) NOT BETWEEN (x'2b76') AND (t0.c0)), (((rt1.c2, rt1.c2, rt1.c0, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c1, t0.c0, t0.c2, '')) AND ((t0.c2, rt1.c1, rt1.c1, t0.c0, rt1.c1))))))) ORDER BY (((x'') ISNULL) IN ()), HEX(DISTINCT t0.c2 COLLATE BINARY) DESC  NULLS FIRST;
SELECT * FROM t0, rt1, vt0 WHERE ((((rt1.c0)) BETWEEN ((t0.c1 COLLATE RTRIM)) AND (((((rt1.c1, rt1.c0, rt1.c1)) NOT BETWEEN ((t0.c0, t0.c2, rt1.c2)) AND ((rt1.c2, rt1.c0, vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) BETWEEN ((t0.c1 COLLATE RTRIM)) AND (((((rt1.c1, rt1.c0, rt1.c1)) NOT BETWEEN ((t0.c0, t0.c2, rt1.c2)) AND ((rt1.c2, rt1.c0, vt0.c0))))))) IS TRUE)  as count FROM t0, rt1, vt0);
SELECT * FROM t0, rt1, vt0 WHERE ((((rt1.c0)) BETWEEN ((t0.c1 COLLATE RTRIM)) AND (((((rt1.c1, rt1.c0, rt1.c1)) NOT BETWEEN ((t0.c0, t0.c2, rt1.c2)) AND ((rt1.c2, rt1.c0, vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) BETWEEN ((t0.c1 COLLATE RTRIM)) AND (((((rt1.c1, rt1.c0, rt1.c1)) NOT BETWEEN ((t0.c0, t0.c2, rt1.c2)) AND ((rt1.c2, rt1.c0, vt0.c0))))))) IS TRUE)  as count FROM t0, rt1, vt0);
SELECT * FROM t0, rt1, vt0 WHERE ((((rt1.c0)) BETWEEN ((t0.c1 COLLATE RTRIM)) AND (((((rt1.c1, rt1.c0, rt1.c1)) NOT BETWEEN ((t0.c0, t0.c2, rt1.c2)) AND ((rt1.c2, rt1.c0, vt0.c0)))))));
SELECT * FROM t0, rt1 WHERE ((((t0.c2) BETWEEN (t0.c1) AND (rt1.c0)) IN ())) ORDER BY ((((t0.c2, rt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c0, t0.c1, t0.c1)) AND ((rt1.c1, rt1.c1, rt1.c2))) IN (((x'0c34')IS NOT(0xfffffffff112451b)), (((rt1.c0)) BETWEEN ((rt1.c0)) AND ((t0.c2))))), ((((((((SUBSTR(rt1.c1, rt1.c1))OR((t0.c1 IN (rt1.c1, t0.c1)))))AND(((rt1.c0)>(rt1.c2)))))AND(0.03760759367671329)))OR(LOWER(t0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c2) BETWEEN (t0.c1) AND (rt1.c0)) IN ())) IS TRUE)  as count FROM t0, rt1 ORDER BY ((((t0.c2, rt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c0, t0.c1, t0.c1)) AND ((rt1.c1, rt1.c1, rt1.c2))) IN (((x'0c34')IS NOT(0xfffffffff112451b)), (((rt1.c0)) BETWEEN ((rt1.c0)) AND ((t0.c2))))), ((((((((SUBSTR(rt1.c1, rt1.c1))OR((t0.c1 IN (rt1.c1, t0.c1)))))AND(((rt1.c0)>(rt1.c2)))))AND(0.03760759367671329)))OR(LOWER(t0.c2)))  NULLS FIRST);
SELECT * FROM t0, rt1 WHERE ((((t0.c2) BETWEEN (t0.c1) AND (rt1.c0)) IN ())) ORDER BY ((((t0.c2, rt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c0, t0.c1, t0.c1)) AND ((rt1.c1, rt1.c1, rt1.c2))) IN (((x'0c34')IS NOT(0xfffffffff112451b)), (((rt1.c0)) BETWEEN ((rt1.c0)) AND ((t0.c2))))), ((((((((SUBSTR(rt1.c1, rt1.c1))OR((t0.c1 IN (rt1.c1, t0.c1)))))AND(((rt1.c0)>(rt1.c2)))))AND(0.03760759367671329)))OR(LOWER(t0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c2) BETWEEN (t0.c1) AND (rt1.c0)) IN ())) IS TRUE)  as count FROM t0, rt1 ORDER BY ((((t0.c2, rt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c0, t0.c1, t0.c1)) AND ((rt1.c1, rt1.c1, rt1.c2))) IN (((x'0c34')IS NOT(0xfffffffff112451b)), (((rt1.c0)) BETWEEN ((rt1.c0)) AND ((t0.c2))))), ((((((((SUBSTR(rt1.c1, rt1.c1))OR((t0.c1 IN (rt1.c1, t0.c1)))))AND(((rt1.c0)>(rt1.c2)))))AND(0.03760759367671329)))OR(LOWER(t0.c2)))  NULLS FIRST);
SELECT * FROM t0, rt1 WHERE ((((t0.c2) BETWEEN (t0.c1) AND (rt1.c0)) IN ())) ORDER BY ((((t0.c2, rt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c0, t0.c1, t0.c1)) AND ((rt1.c1, rt1.c1, rt1.c2))) IN (((x'0c34')IS NOT(0xfffffffff112451b)), (((rt1.c0)) BETWEEN ((rt1.c0)) AND ((t0.c2))))), ((((((((SUBSTR(rt1.c1, rt1.c1))OR((t0.c1 IN (rt1.c1, t0.c1)))))AND(((rt1.c0)>(rt1.c2)))))AND(0.03760759367671329)))OR(LOWER(t0.c2)))  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END) NOT BETWEEN (NULLIF(DISTINCT rt1.c2, rt1.c0)) AND (((NULL) NOT BETWEEN (0.22902249684036313) AND (rt1.c0))))) ORDER BY (HEX(rt1.c2) IN (CAST(rt1.c0 AS REAL))) DESC  NULLS LAST, (((rt1.c1, rt1.c0, rt1.c1)) BETWEEN (((((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1))), NULLIF(rt1.c0, rt1.c1), (rt1.c0 IN (rt1.c0)))) AND ((((rt1.c0) IS FALSE), rt1.c1, ((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END) NOT BETWEEN (NULLIF(DISTINCT rt1.c2, rt1.c0)) AND (((NULL) NOT BETWEEN (0.22902249684036313) AND (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY (HEX(rt1.c2) IN (CAST(rt1.c0 AS REAL))) DESC  NULLS LAST, (((rt1.c1, rt1.c0, rt1.c1)) BETWEEN (((((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1))), NULLIF(rt1.c0, rt1.c1), (rt1.c0 IN (rt1.c0)))) AND ((((rt1.c0) IS FALSE), rt1.c1, ((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)))))  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END) NOT BETWEEN (NULLIF(DISTINCT rt1.c2, rt1.c0)) AND (((NULL) NOT BETWEEN (0.22902249684036313) AND (rt1.c0))))) ORDER BY (HEX(rt1.c2) IN (CAST(rt1.c0 AS REAL))) DESC  NULLS LAST, (((rt1.c1, rt1.c0, rt1.c1)) BETWEEN (((((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1))), NULLIF(rt1.c0, rt1.c1), (rt1.c0 IN (rt1.c0)))) AND ((((rt1.c0) IS FALSE), rt1.c1, ((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END) NOT BETWEEN (NULLIF(DISTINCT rt1.c2, rt1.c0)) AND (((NULL) NOT BETWEEN (0.22902249684036313) AND (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY (HEX(rt1.c2) IN (CAST(rt1.c0 AS REAL))) DESC  NULLS LAST, (((rt1.c1, rt1.c0, rt1.c1)) BETWEEN (((((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1))), NULLIF(rt1.c0, rt1.c1), (rt1.c0 IN (rt1.c0)))) AND ((((rt1.c0) IS FALSE), rt1.c1, ((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)))))  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END) NOT BETWEEN (NULLIF(DISTINCT rt1.c2, rt1.c0)) AND (((NULL) NOT BETWEEN (0.22902249684036313) AND (rt1.c0))))) ORDER BY (HEX(rt1.c2) IN (CAST(rt1.c0 AS REAL))) DESC  NULLS LAST, (((rt1.c1, rt1.c0, rt1.c1)) BETWEEN (((((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1))), NULLIF(rt1.c0, rt1.c1), (rt1.c0 IN (rt1.c0)))) AND ((((rt1.c0) IS FALSE), rt1.c1, ((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)))))  NULLS LAST;
SELECT COUNT(*) FROM t0, rt1, vt0 WHERE ((+ (((rt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c0) NOT NULL)))) IS TRUE)  as count FROM t0, rt1, vt0);
SELECT COUNT(*) FROM t0, rt1, vt0 WHERE ((+ (((rt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c0) NOT NULL)))) IS TRUE)  as count FROM t0, rt1, vt0);
SELECT COUNT(*) FROM t0, rt1, vt0 WHERE ((+ (((rt1.c0) NOT NULL))));
SELECT * FROM t0 WHERE (((TRIM(t0.c1, t0.c2))>>((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))))));
SELECT SUM(count) FROM (SELECT ((((TRIM(t0.c1, t0.c2))>>((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((TRIM(t0.c1, t0.c2))>>((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))))));
SELECT SUM(count) FROM (SELECT ((((TRIM(t0.c1, t0.c2))>>((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((TRIM(t0.c1, t0.c2))>>((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))))));
SELECT COUNT(*) FROM t0, rt1 WHERE ((((NOT (rt1.c0))) NOT BETWEEN ((rt1.c0 IN (rt1.c2, t0.c0))) AND (((t0.c0)>>(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt1.c0))) NOT BETWEEN ((rt1.c0 IN (rt1.c2, t0.c0))) AND (((t0.c0)>>(rt1.c2))))) IS TRUE)  as count FROM t0, rt1);
SELECT COUNT(*) FROM t0, rt1 WHERE ((((NOT (rt1.c0))) NOT BETWEEN ((rt1.c0 IN (rt1.c2, t0.c0))) AND (((t0.c0)>>(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt1.c0))) NOT BETWEEN ((rt1.c0 IN (rt1.c2, t0.c0))) AND (((t0.c0)>>(rt1.c2))))) IS TRUE)  as count FROM t0, rt1);
SELECT COUNT(*) FROM t0, rt1 WHERE ((((NOT (rt1.c0))) NOT BETWEEN ((rt1.c0 IN (rt1.c2, t0.c0))) AND (((t0.c0)>>(rt1.c2)))));
SELECT * FROM t0, rt1, vt0 WHERE ((((t0.c2) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c2) NOT NULL) IN ())) IS TRUE)  as count FROM t0, rt1, vt0);
SELECT * FROM t0, rt1, vt0 WHERE ((((t0.c2) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c2) NOT NULL) IN ())) IS TRUE)  as count FROM t0, rt1, vt0);
SELECT * FROM t0, rt1, vt0 WHERE ((((t0.c2) NOT NULL) IN ()));
SELECT * FROM rt1 WHERE ((((rt1.c1 IN (rt1.c1)))<=((- (rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN (rt1.c1)))<=((- (rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c1 IN (rt1.c1)))<=((- (rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN (rt1.c1)))<=((- (rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c1 IN (rt1.c1)))<=((- (rt1.c2)))));
SELECT ALL COUNT(*) FROM vt0, rt1 NOT INDEXED WHERE (CASE WHEN CASE WHEN rt1.c1 THEN rt1.c0 ELSE 0.6090235360809233 END THEN ((rt1.c2) IS FALSE) ELSE LIKELY(DISTINCT rt1.c2) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN rt1.c1 THEN rt1.c0 ELSE 0.6090235360809233 END THEN ((rt1.c2) IS FALSE) ELSE LIKELY(DISTINCT rt1.c2) END) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 NOT INDEXED WHERE (CASE WHEN CASE WHEN rt1.c1 THEN rt1.c0 ELSE 0.6090235360809233 END THEN ((rt1.c2) IS FALSE) ELSE LIKELY(DISTINCT rt1.c2) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN rt1.c1 THEN rt1.c0 ELSE 0.6090235360809233 END THEN ((rt1.c2) IS FALSE) ELSE LIKELY(DISTINCT rt1.c2) END) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 NOT INDEXED WHERE (CASE WHEN CASE WHEN rt1.c1 THEN rt1.c0 ELSE 0.6090235360809233 END THEN ((rt1.c2) IS FALSE) ELSE LIKELY(DISTINCT rt1.c2) END);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt0 ON (NOT (((rt1.c0) NOTNULL))) WHERE (((((((rt1.c0)OR(rt1.c2)))AND(rt1.c0)))-((vt0.c0 IN ())))) ORDER BY ((((((((CAST(vt0.c0 AS TEXT))OR((('y7') NOTNULL))))OR((- (rt1.c0)))))OR(((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c1)))))AND(rt1.c1))  NULLS LAST, ((rt1.c0 COLLATE NOCASE) ISNULL) DESC, (((vt0.c0, vt0.c0, rt1.c0))<=((vt0.c0, rt1.c2, rt1.c2))) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)OR(rt1.c2)))AND(rt1.c0)))-((vt0.c0 IN ())))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON (NOT (((rt1.c0) NOTNULL))) ORDER BY ((((((((CAST(vt0.c0 AS TEXT))OR((('y7') NOTNULL))))OR((- (rt1.c0)))))OR(((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c1)))))AND(rt1.c1))  NULLS LAST, ((rt1.c0 COLLATE NOCASE) ISNULL) DESC, (((vt0.c0, vt0.c0, rt1.c0))<=((vt0.c0, rt1.c2, rt1.c2))) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt0 ON (NOT (((rt1.c0) NOTNULL))) WHERE (((((((rt1.c0)OR(rt1.c2)))AND(rt1.c0)))-((vt0.c0 IN ())))) ORDER BY ((((((((CAST(vt0.c0 AS TEXT))OR((('y7') NOTNULL))))OR((- (rt1.c0)))))OR(((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c1)))))AND(rt1.c1))  NULLS LAST, ((rt1.c0 COLLATE NOCASE) ISNULL) DESC, (((vt0.c0, vt0.c0, rt1.c0))<=((vt0.c0, rt1.c2, rt1.c2))) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)OR(rt1.c2)))AND(rt1.c0)))-((vt0.c0 IN ())))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON (NOT (((rt1.c0) NOTNULL))) ORDER BY ((((((((CAST(vt0.c0 AS TEXT))OR((('y7') NOTNULL))))OR((- (rt1.c0)))))OR(((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c1)))))AND(rt1.c1))  NULLS LAST, ((rt1.c0 COLLATE NOCASE) ISNULL) DESC, (((vt0.c0, vt0.c0, rt1.c0))<=((vt0.c0, rt1.c2, rt1.c2))) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt0 ON (NOT (((rt1.c0) NOTNULL))) WHERE (((((((rt1.c0)OR(rt1.c2)))AND(rt1.c0)))-((vt0.c0 IN ())))) ORDER BY ((((((((CAST(vt0.c0 AS TEXT))OR((('y7') NOTNULL))))OR((- (rt1.c0)))))OR(((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c1)))))AND(rt1.c1))  NULLS LAST, ((rt1.c0 COLLATE NOCASE) ISNULL) DESC, (((vt0.c0, vt0.c0, rt1.c0))<=((vt0.c0, rt1.c2, rt1.c2))) COLLATE RTRIM ASC;
SELECT COUNT(*) FROM t0 CROSS JOIN rt1 ON ((t0.c2) NOT BETWEEN ((vt0.c0 IN ())) AND ((- (rt1.c2)))) FULL OUTER JOIN vt0 ON ((((CAST(rt1.c2 AS REAL))OR(NULL)))OR((+ (t0.c1)))) WHERE ((((((0.346986290423011 IN ()))AND((+ (rt1.c1)))))AND((((t0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((rt1.c1, x'', t0.c2)) AND ((rt1.c0, 0x263bc3c7, rt1.c2)))))) ORDER BY (rt1.c2 COLLATE NOCASE IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((0.346986290423011 IN ()))AND((+ (rt1.c1)))))AND((((t0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((rt1.c1, x'', t0.c2)) AND ((rt1.c0, 0x263bc3c7, rt1.c2)))))) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON ((t0.c2) NOT BETWEEN ((vt0.c0 IN ())) AND ((- (rt1.c2)))) FULL OUTER JOIN vt0 ON ((((CAST(rt1.c2 AS REAL))OR(NULL)))OR((+ (t0.c1)))) ORDER BY (rt1.c2 COLLATE NOCASE IN ()) DESC);
SELECT COUNT(*) FROM t0 CROSS JOIN rt1 ON ((t0.c2) NOT BETWEEN ((vt0.c0 IN ())) AND ((- (rt1.c2)))) FULL OUTER JOIN vt0 ON ((((CAST(rt1.c2 AS REAL))OR(NULL)))OR((+ (t0.c1)))) WHERE ((((((0.346986290423011 IN ()))AND((+ (rt1.c1)))))AND((((t0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((rt1.c1, x'', t0.c2)) AND ((rt1.c0, 0x263bc3c7, rt1.c2)))))) ORDER BY (rt1.c2 COLLATE NOCASE IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((0.346986290423011 IN ()))AND((+ (rt1.c1)))))AND((((t0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((rt1.c1, x'', t0.c2)) AND ((rt1.c0, 0x263bc3c7, rt1.c2)))))) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON ((t0.c2) NOT BETWEEN ((vt0.c0 IN ())) AND ((- (rt1.c2)))) FULL OUTER JOIN vt0 ON ((((CAST(rt1.c2 AS REAL))OR(NULL)))OR((+ (t0.c1)))) ORDER BY (rt1.c2 COLLATE NOCASE IN ()) DESC);
SELECT COUNT(*) FROM t0 CROSS JOIN rt1 ON ((t0.c2) NOT BETWEEN ((vt0.c0 IN ())) AND ((- (rt1.c2)))) FULL OUTER JOIN vt0 ON ((((CAST(rt1.c2 AS REAL))OR(NULL)))OR((+ (t0.c1)))) WHERE ((((((0.346986290423011 IN ()))AND((+ (rt1.c1)))))AND((((t0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((rt1.c1, x'', t0.c2)) AND ((rt1.c0, 0x263bc3c7, rt1.c2)))))) ORDER BY (rt1.c2 COLLATE NOCASE IN ()) DESC;
SELECT * FROM vt0, rt1 LEFT OUTER JOIN t0 ON ((((t0.c2) ISNULL))<=(((NULL) BETWEEN (rt1.c2) AND (rt1.c0)))) WHERE (CASE CAST(rt1.c1 AS NUMERIC)  WHEN ((NULL) NOT BETWEEN ('937715773') AND (vt0.c0)) THEN (NULL IN ()) WHEN t0.c2 THEN rt1.c2 WHEN ((((((((t0.c1)OR(rt1.c1)))AND(vt0.c0)))OR(rt1.c1)))AND(rt1.c1)) THEN ABS('-1185824043') ELSE vt0.c0 COLLATE BINARY END) ORDER BY '-646980984'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt1.c1 AS NUMERIC)  WHEN ((NULL) NOT BETWEEN ('937715773') AND (vt0.c0)) THEN (NULL IN ()) WHEN t0.c2 THEN rt1.c2 WHEN ((((((((t0.c1)OR(rt1.c1)))AND(vt0.c0)))OR(rt1.c1)))AND(rt1.c1)) THEN ABS('-1185824043') ELSE vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0, rt1 LEFT OUTER JOIN t0 ON ((((t0.c2) ISNULL))<=(((NULL) BETWEEN (rt1.c2) AND (rt1.c0)))) ORDER BY '-646980984'  NULLS LAST);
SELECT * FROM vt0, rt1 LEFT OUTER JOIN t0 ON ((((t0.c2) ISNULL))<=(((NULL) BETWEEN (rt1.c2) AND (rt1.c0)))) WHERE (CASE CAST(rt1.c1 AS NUMERIC)  WHEN ((NULL) NOT BETWEEN ('937715773') AND (vt0.c0)) THEN (NULL IN ()) WHEN t0.c2 THEN rt1.c2 WHEN ((((((((t0.c1)OR(rt1.c1)))AND(vt0.c0)))OR(rt1.c1)))AND(rt1.c1)) THEN ABS('-1185824043') ELSE vt0.c0 COLLATE BINARY END) ORDER BY '-646980984'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt1.c1 AS NUMERIC)  WHEN ((NULL) NOT BETWEEN ('937715773') AND (vt0.c0)) THEN (NULL IN ()) WHEN t0.c2 THEN rt1.c2 WHEN ((((((((t0.c1)OR(rt1.c1)))AND(vt0.c0)))OR(rt1.c1)))AND(rt1.c1)) THEN ABS('-1185824043') ELSE vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0, rt1 LEFT OUTER JOIN t0 ON ((((t0.c2) ISNULL))<=(((NULL) BETWEEN (rt1.c2) AND (rt1.c0)))) ORDER BY '-646980984'  NULLS LAST);
SELECT * FROM vt0, rt1 LEFT OUTER JOIN t0 ON ((((t0.c2) ISNULL))<=(((NULL) BETWEEN (rt1.c2) AND (rt1.c0)))) WHERE (CASE CAST(rt1.c1 AS NUMERIC)  WHEN ((NULL) NOT BETWEEN ('937715773') AND (vt0.c0)) THEN (NULL IN ()) WHEN t0.c2 THEN rt1.c2 WHEN ((((((((t0.c1)OR(rt1.c1)))AND(vt0.c0)))OR(rt1.c1)))AND(rt1.c1)) THEN ABS('-1185824043') ELSE vt0.c0 COLLATE BINARY END) ORDER BY '-646980984'  NULLS LAST;
SELECT ALL * FROM rt1, t0 WHERE (0.9033815981058648) ORDER BY ((((((((((((t0.c2)OR(rt1.c2)))OR(t0.c2)))OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c1 COLLATE RTRIM)))OR(((t0.c1) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.9033815981058648) IS TRUE)  as count FROM rt1, t0 ORDER BY ((((((((((((t0.c2)OR(rt1.c2)))OR(t0.c2)))OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c1 COLLATE RTRIM)))OR(((t0.c1) IS TRUE))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, t0 WHERE (0.9033815981058648) ORDER BY ((((((((((((t0.c2)OR(rt1.c2)))OR(t0.c2)))OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c1 COLLATE RTRIM)))OR(((t0.c1) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.9033815981058648) IS TRUE)  as count FROM rt1, t0 ORDER BY ((((((((((((t0.c2)OR(rt1.c2)))OR(t0.c2)))OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c1 COLLATE RTRIM)))OR(((t0.c1) IS TRUE))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, t0 WHERE (0.9033815981058648) ORDER BY ((((((((((((t0.c2)OR(rt1.c2)))OR(t0.c2)))OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c1 COLLATE RTRIM)))OR(((t0.c1) IS TRUE))) ASC  NULLS FIRST;
SELECT * FROM vt0, t0 WHERE ((TRIM(DISTINCT vt0.c0, t0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((TRIM(DISTINCT vt0.c0, t0.c0) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((TRIM(DISTINCT vt0.c0, t0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((TRIM(DISTINCT vt0.c0, t0.c0) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((TRIM(DISTINCT vt0.c0, t0.c0) IN ()));
SELECT * FROM vt0, t0 WHERE (((t0.c1)-(t0.c1)) COLLATE NOCASE) ORDER BY ((((((((((vt0.c0)OR(t0.c2)))AND(t0.c0)))OR(t0.c0)))AND(t0.c2)))*(HEX(DISTINCT vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c1)-(t0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((((((vt0.c0)OR(t0.c2)))AND(t0.c0)))OR(t0.c0)))AND(t0.c2)))*(HEX(DISTINCT vt0.c0))) ASC);
SELECT * FROM vt0, t0 WHERE (((t0.c1)-(t0.c1)) COLLATE NOCASE) ORDER BY ((((((((((vt0.c0)OR(t0.c2)))AND(t0.c0)))OR(t0.c0)))AND(t0.c2)))*(HEX(DISTINCT vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c1)-(t0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((((((vt0.c0)OR(t0.c2)))AND(t0.c0)))OR(t0.c0)))AND(t0.c2)))*(HEX(DISTINCT vt0.c0))) ASC);
SELECT * FROM vt0, t0 WHERE (((t0.c1)-(t0.c1)) COLLATE NOCASE) ORDER BY ((((((((((vt0.c0)OR(t0.c2)))AND(t0.c0)))OR(t0.c0)))AND(t0.c2)))*(HEX(DISTINCT vt0.c0))) ASC;
SELECT ALL COUNT(*) FROM vt0, rt1, t0 WHERE (((CASE rt1.c2  WHEN rt1.c1 THEN NULL WHEN t0.c2 THEN rt1.c2 WHEN rt1.c0 THEN t0.c2 END)LIKE(((t0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c2  WHEN rt1.c1 THEN NULL WHEN t0.c2 THEN rt1.c2 WHEN rt1.c0 THEN t0.c2 END)LIKE(((t0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, rt1, t0);
SELECT ALL COUNT(*) FROM vt0, rt1, t0 WHERE (((CASE rt1.c2  WHEN rt1.c1 THEN NULL WHEN t0.c2 THEN rt1.c2 WHEN rt1.c0 THEN t0.c2 END)LIKE(((t0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c2  WHEN rt1.c1 THEN NULL WHEN t0.c2 THEN rt1.c2 WHEN rt1.c0 THEN t0.c2 END)LIKE(((t0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, rt1, t0);
SELECT ALL COUNT(*) FROM vt0, rt1, t0 WHERE (((CASE rt1.c2  WHEN rt1.c1 THEN NULL WHEN t0.c2 THEN rt1.c2 WHEN rt1.c0 THEN t0.c2 END)LIKE(((t0.c0) NOTNULL))));
SELECT COUNT(*) FROM vt0 WHERE (LIKELY(((vt0.c0)>=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((vt0.c0)>=(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LIKELY(((vt0.c0)>=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((vt0.c0)>=(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LIKELY(((vt0.c0)>=(vt0.c0))));
SELECT * FROM rt1, t0, vt0 WHERE (((((((rt1.c0) NOT NULL))OR(x'')))AND(((1132225328)%(rt1.c0))))) ORDER BY (- (rt1.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0) NOT NULL))OR(x'')))AND(((1132225328)%(rt1.c0))))) IS TRUE)  as count FROM rt1, t0, vt0 ORDER BY (- (rt1.c2)) DESC);
SELECT * FROM rt1, t0, vt0 WHERE (((((((rt1.c0) NOT NULL))OR(x'')))AND(((1132225328)%(rt1.c0))))) ORDER BY (- (rt1.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0) NOT NULL))OR(x'')))AND(((1132225328)%(rt1.c0))))) IS TRUE)  as count FROM rt1, t0, vt0 ORDER BY (- (rt1.c2)) DESC);
SELECT * FROM rt1, t0, vt0 WHERE (((((((rt1.c0) NOT NULL))OR(x'')))AND(((1132225328)%(rt1.c0))))) ORDER BY (- (rt1.c2)) DESC;
SELECT * FROM vt0 WHERE (((((vt0.c0)>>(NULL))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>>(NULL))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)>>(NULL))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>>(NULL))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)>>(NULL))) ISNULL));
SELECT * FROM rt1 WHERE (CAST('476310651' AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST('476310651' AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST('476310651' AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST('476310651' AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST('476310651' AS TEXT));
SELECT ALL * FROM t0, rt1 WHERE (CAST((t0.c1 IN ()) AS INTEGER)) ORDER BY TYPEOF(DISTINCT TYPEOF(rt1.c2)) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((t0.c1 IN ()) AS INTEGER)) IS TRUE)  as count FROM t0, rt1 ORDER BY TYPEOF(DISTINCT TYPEOF(rt1.c2)) DESC);
SELECT ALL * FROM t0, rt1 WHERE (CAST((t0.c1 IN ()) AS INTEGER)) ORDER BY TYPEOF(DISTINCT TYPEOF(rt1.c2)) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((t0.c1 IN ()) AS INTEGER)) IS TRUE)  as count FROM t0, rt1 ORDER BY TYPEOF(DISTINCT TYPEOF(rt1.c2)) DESC);
SELECT ALL * FROM t0, rt1 WHERE (CAST((t0.c1 IN ()) AS INTEGER)) ORDER BY TYPEOF(DISTINCT TYPEOF(rt1.c2)) DESC;
SELECT ALL * FROM t0, vt0, rt1 WHERE (CASE WHEN ((rt1.c0)&(rt1.c1)) THEN rt1.c2 ELSE ((vt0.c0)LIKE(rt1.c1)) END) ORDER BY (((rt1.c0 IN (rt1.c2)))==(t0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c0)&(rt1.c1)) THEN rt1.c2 ELSE ((vt0.c0)LIKE(rt1.c1)) END) IS TRUE)  as count FROM t0, vt0, rt1 ORDER BY (((rt1.c0 IN (rt1.c2)))=(t0.c1 COLLATE BINARY)));
SELECT ALL * FROM t0, vt0, rt1 WHERE (CASE WHEN ((rt1.c0)&(rt1.c1)) THEN rt1.c2 ELSE ((vt0.c0)LIKE(rt1.c1)) END) ORDER BY (((rt1.c0 IN (rt1.c2)))==(t0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c0)&(rt1.c1)) THEN rt1.c2 ELSE ((vt0.c0)LIKE(rt1.c1)) END) IS TRUE)  as count FROM t0, vt0, rt1 ORDER BY (((rt1.c0 IN (rt1.c2)))=(t0.c1 COLLATE BINARY)));
SELECT ALL * FROM t0, vt0, rt1 WHERE (CASE WHEN ((rt1.c0)&(rt1.c1)) THEN rt1.c2 ELSE ((vt0.c0)LIKE(rt1.c1)) END) ORDER BY (((rt1.c0 IN (rt1.c2)))==(t0.c1 COLLATE BINARY));
SELECT * FROM rt1 INNER JOIN t0 ON ((((t0.c0)IS NOT(vt0.c0)))|(rt1.c2)) FULL OUTER JOIN vt0 ON ((CAST(t0.c2 AS REAL)) NOT NULL) WHERE ((- (((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c0))))) IS TRUE)  as count FROM rt1 INNER JOIN t0 ON ((((t0.c0)IS NOT(vt0.c0)))|(rt1.c2)) FULL OUTER JOIN vt0 ON ((CAST(t0.c2 AS REAL)) NOT NULL));
SELECT * FROM rt1 INNER JOIN t0 ON ((((t0.c0)IS NOT(vt0.c0)))|(rt1.c2)) FULL OUTER JOIN vt0 ON ((CAST(t0.c2 AS REAL)) NOT NULL) WHERE ((- (((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c0))))) IS TRUE)  as count FROM rt1 INNER JOIN t0 ON ((((t0.c0)IS NOT(vt0.c0)))|(rt1.c2)) FULL OUTER JOIN vt0 ON ((CAST(t0.c2 AS REAL)) NOT NULL));
SELECT * FROM rt1, vt0 WHERE (((((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)))|('1f'))) ORDER BY ((rt1.c1)<(((((vt0.c0)OR('L7')))OR(rt1.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)))|('1f'))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((rt1.c1)<(((((vt0.c0)OR('L7')))OR(rt1.c1)))) ASC  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (((((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)))|('1f'))) ORDER BY ((rt1.c1)<(((((vt0.c0)OR('L7')))OR(rt1.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)))|('1f'))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((rt1.c1)<(((((vt0.c0)OR('L7')))OR(rt1.c1)))) ASC  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (((((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)))|('1f'))) ORDER BY ((rt1.c1)<(((((vt0.c0)OR('L7')))OR(rt1.c1)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (rt1.c2);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((t0.c2)/(t0.c1)) COLLATE RTRIM WHERE ((t0.c2 IN (COALESCE(t0.c0, t0.c2)))) ORDER BY ((0.03530220092750813)IS NOT((((t0.c0))<=((t0.c0))))), TRIM(t0.c2) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((t0.c2 IN (COALESCE(t0.c0, t0.c2)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((t0.c2)/(t0.c1)) COLLATE RTRIM ORDER BY ((0.03530220092750813)IS NOT((((t0.c0))<=((t0.c0))))), TRIM(t0.c2) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((t0.c2)/(t0.c1)) COLLATE RTRIM WHERE ((t0.c2 IN (COALESCE(t0.c0, t0.c2)))) ORDER BY ((0.03530220092750813)IS NOT((((t0.c0))<=((t0.c0))))), TRIM(t0.c2) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((t0.c2 IN (COALESCE(t0.c0, t0.c2)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((t0.c2)/(t0.c1)) COLLATE RTRIM ORDER BY ((0.03530220092750813)IS NOT((((t0.c0))<=((t0.c0))))), TRIM(t0.c2) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((t0.c2)/(t0.c1)) COLLATE RTRIM WHERE ((t0.c2 IN (COALESCE(t0.c0, t0.c2)))) ORDER BY ((0.03530220092750813)IS NOT((((t0.c0))<=((t0.c0))))), TRIM(t0.c2) COLLATE NOCASE  NULLS FIRST;
SELECT * FROM rt1, vt0 INDEXED BY i95, t0 WHERE (CAST((NOT (t0.c1)) AS INTEGER)) ORDER BY rt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (t0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt1, vt0 INDEXED BY i95, t0 ORDER BY rt1.c0  NULLS LAST);
SELECT * FROM rt1, vt0 INDEXED BY i95, t0 WHERE (CAST((NOT (t0.c1)) AS INTEGER)) ORDER BY rt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (t0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt1, vt0 INDEXED BY i95, t0 ORDER BY rt1.c0  NULLS LAST);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL));
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE WHEN ((-1474044751)|(vt0.c0)) THEN CAST(rt1.c0 AS BLOB) WHEN rt1.c2 COLLATE BINARY THEN ((rt1.c0)AND(rt1.c0)) WHEN (+ (rt1.c0)) THEN (vt0.c0 IN ()) ELSE ((((((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c1)))OR(rt1.c1)))AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c0)) END) ORDER BY TIME((- (vt0.c0)), ((vt0.c0)<>(rt1.c0)), (~ (rt1.c1))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((-1474044751)|(vt0.c0)) THEN CAST(rt1.c0 AS BLOB) WHEN rt1.c2 COLLATE BINARY THEN ((rt1.c0)AND(rt1.c0)) WHEN (+ (rt1.c0)) THEN (vt0.c0 IN ()) ELSE ((((((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c1)))OR(rt1.c1)))AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c0)) END) IS TRUE)  as count FROM vt0, rt1 ORDER BY TIME((- (vt0.c0)), ((vt0.c0)!=(rt1.c0)), (~ (rt1.c1))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE WHEN ((-1474044751)|(vt0.c0)) THEN CAST(rt1.c0 AS BLOB) WHEN rt1.c2 COLLATE BINARY THEN ((rt1.c0)AND(rt1.c0)) WHEN (+ (rt1.c0)) THEN (vt0.c0 IN ()) ELSE ((((((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c1)))OR(rt1.c1)))AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c0)) END) ORDER BY TIME((- (vt0.c0)), ((vt0.c0)<>(rt1.c0)), (~ (rt1.c1))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((-1474044751)|(vt0.c0)) THEN CAST(rt1.c0 AS BLOB) WHEN rt1.c2 COLLATE BINARY THEN ((rt1.c0)AND(rt1.c0)) WHEN (+ (rt1.c0)) THEN (vt0.c0 IN ()) ELSE ((((((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c1)))OR(rt1.c1)))AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c0)) END) IS TRUE)  as count FROM vt0, rt1 ORDER BY TIME((- (vt0.c0)), ((vt0.c0)!=(rt1.c0)), (~ (rt1.c1))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE WHEN ((-1474044751)|(vt0.c0)) THEN CAST(rt1.c0 AS BLOB) WHEN rt1.c2 COLLATE BINARY THEN ((rt1.c0)AND(rt1.c0)) WHEN (+ (rt1.c0)) THEN (vt0.c0 IN ()) ELSE ((((((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c1)))OR(rt1.c1)))AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c0)) END) ORDER BY TIME((- (vt0.c0)), ((vt0.c0)<>(rt1.c0)), (~ (rt1.c1))) DESC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (((((0.173869023497211 COLLATE NOCASE)AND(((rt1.c0) IS TRUE))))AND((((rt1.c2))>((rt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((0.173869023497211 COLLATE NOCASE)AND(((rt1.c0) IS TRUE))))AND((((rt1.c2))>((rt1.c0)))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((0.173869023497211 COLLATE NOCASE)AND(((rt1.c0) IS TRUE))))AND((((rt1.c2))>((rt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((0.173869023497211 COLLATE NOCASE)AND(((rt1.c0) IS TRUE))))AND((((rt1.c2))>((rt1.c0)))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((0.173869023497211 COLLATE NOCASE)AND(((rt1.c0) IS TRUE))))AND((((rt1.c2))>((rt1.c0))))));
SELECT COUNT(*) FROM rt1, t0, vt0 WHERE (0.40290395603237916);
SELECT SUM(count) FROM (SELECT ((0.40290395603237916) IS TRUE)  as count FROM rt1, t0, vt0);
SELECT COUNT(*) FROM rt1, t0, vt0 WHERE (0.40290395603237916);
SELECT SUM(count) FROM (SELECT ((0.40290395603237916) IS TRUE)  as count FROM rt1, t0, vt0);
SELECT COUNT(*) FROM rt1, t0, vt0 WHERE (0.40290395603237916);
SELECT COUNT(*) FROM vt0, t0, rt1 WHERE (CAST(((t0.c2)==(t0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c2)=(t0.c1)) AS REAL)) IS TRUE)  as count FROM vt0, t0, rt1);
SELECT COUNT(*) FROM vt0, t0, rt1 WHERE (CAST(((t0.c2)==(t0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c2)=(t0.c1)) AS REAL)) IS TRUE)  as count FROM vt0, t0, rt1);
SELECT COUNT(*) FROM vt0, t0, rt1 WHERE (CAST(((t0.c2)==(t0.c1)) AS REAL));
SELECT * FROM rt1, t0, vt0 WHERE (UPPER(DISTINCT rt1.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT rt1.c0 COLLATE NOCASE)) IS TRUE)  as count FROM rt1, t0, vt0);
SELECT * FROM rt1, t0, vt0 WHERE (UPPER(DISTINCT rt1.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT rt1.c0 COLLATE NOCASE)) IS TRUE)  as count FROM rt1, t0, vt0);
SELECT * FROM rt1, t0, vt0 WHERE (UPPER(DISTINCT rt1.c0 COLLATE NOCASE));
SELECT COUNT(*) FROM t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (x'');
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c1) BETWEEN (CAST(rt1.c0 AS REAL)) AND (CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ((((rt1.c1) BETWEEN (CAST(rt1.c0 AS REAL)) AND (CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 END))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c1) BETWEEN (CAST(rt1.c0 AS REAL)) AND (CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ((((rt1.c1) BETWEEN (CAST(rt1.c0 AS REAL)) AND (CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 END))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c1) BETWEEN (CAST(rt1.c0 AS REAL)) AND (CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) ISNULL));
SELECT ALL * FROM rt1, t0 WHERE (CASE WHEN ((t0.c1)+(t0.c0)) THEN CASE WHEN t0.c1 THEN NULL WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN t0.c2 END END) ORDER BY (~ ('-623459579')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c1)+(t0.c0)) THEN CASE WHEN t0.c1 THEN NULL WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN t0.c2 END END) IS TRUE)  as count FROM rt1, t0 ORDER BY (~ ('-623459579')) ASC);
SELECT ALL * FROM rt1, t0 WHERE (CASE WHEN ((t0.c1)+(t0.c0)) THEN CASE WHEN t0.c1 THEN NULL WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN t0.c2 END END) ORDER BY (~ ('-623459579')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c1)+(t0.c0)) THEN CASE WHEN t0.c1 THEN NULL WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN t0.c2 END END) IS TRUE)  as count FROM rt1, t0 ORDER BY (~ ('-623459579')) ASC);
SELECT ALL * FROM rt1, t0 WHERE (CASE WHEN ((t0.c1)+(t0.c0)) THEN CASE WHEN t0.c1 THEN NULL WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN t0.c2 END END) ORDER BY (~ ('-623459579')) ASC;
SELECT COUNT(*) FROM rt1, t0, vt0 WHERE ((((((rt1.c2))=((rt1.c0))))<<(rt1.c2 COLLATE NOCASE))) ORDER BY ((((rt1.c2) IS TRUE))-(CAST(0.7754022456686496 AS NUMERIC))) DESC, ((rt1.c2) IS TRUE) COLLATE RTRIM COLLATE BINARY, CASE WHEN t0.c2 COLLATE NOCASE THEN 0.8819583908325161 ELSE ((((((((t0.c0)AND(rt1.c2)))OR(-843607178)))AND(rt1.c1)))OR(t0.c1)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2))=((rt1.c0))))<<(rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, t0, vt0 ORDER BY ((((rt1.c2) IS TRUE))-(CAST(0.7754022456686496 AS NUMERIC))) DESC, ((rt1.c2) IS TRUE) COLLATE RTRIM COLLATE BINARY, CASE WHEN t0.c2 COLLATE NOCASE THEN 0.8819583908325161 ELSE ((((((((t0.c0)AND(rt1.c2)))OR(-843607178)))AND(rt1.c1)))OR(t0.c1)) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t0, vt0 WHERE ((((((rt1.c2))=((rt1.c0))))<<(rt1.c2 COLLATE NOCASE))) ORDER BY ((((rt1.c2) IS TRUE))-(CAST(0.7754022456686496 AS NUMERIC))) DESC, ((rt1.c2) IS TRUE) COLLATE RTRIM COLLATE BINARY, CASE WHEN t0.c2 COLLATE NOCASE THEN 0.8819583908325161 ELSE ((((((((t0.c0)AND(rt1.c2)))OR(-843607178)))AND(rt1.c1)))OR(t0.c1)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2))=((rt1.c0))))<<(rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, t0, vt0 ORDER BY ((((rt1.c2) IS TRUE))-(CAST(0.7754022456686496 AS NUMERIC))) DESC, ((rt1.c2) IS TRUE) COLLATE RTRIM COLLATE BINARY, CASE WHEN t0.c2 COLLATE NOCASE THEN 0.8819583908325161 ELSE ((((((((t0.c0)AND(rt1.c2)))OR(-843607178)))AND(rt1.c1)))OR(t0.c1)) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t0, vt0 WHERE ((((((rt1.c2))=((rt1.c0))))<<(rt1.c2 COLLATE NOCASE))) ORDER BY ((((rt1.c2) IS TRUE))-(CAST(0.7754022456686496 AS NUMERIC))) DESC, ((rt1.c2) IS TRUE) COLLATE RTRIM COLLATE BINARY, CASE WHEN t0.c2 COLLATE NOCASE THEN 0.8819583908325161 ELSE ((((((((t0.c0)AND(rt1.c2)))OR(-843607178)))AND(rt1.c1)))OR(t0.c1)) END ASC  NULLS FIRST;
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON ((((vt0.c0)|(vt0.c0))) NOT BETWEEN (CASE t0.c1  WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END) AND ((NOT (rt1.c0)))) FULL OUTER JOIN t0 ON 'U_' WHERE ((((((((('쌅j&\r')OR((+ (rt1.c2)))))OR(((rt1.c2) ISNULL))))AND(CASE WHEN t0.c2 THEN rt1.c0 END)))OR(t0.c0)));
SELECT SUM(count) FROM (SELECT (((((((((('쌅j&\r')OR((+ (rt1.c2)))))OR(((rt1.c2) ISNULL))))AND(CASE WHEN t0.c2 THEN rt1.c0 END)))OR(t0.c0))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON ((((vt0.c0)|(vt0.c0))) NOT BETWEEN (CASE t0.c1  WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END) AND ((NOT (rt1.c0)))) FULL OUTER JOIN t0 ON 'U_');
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON ((((vt0.c0)|(vt0.c0))) NOT BETWEEN (CASE t0.c1  WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END) AND ((NOT (rt1.c0)))) FULL OUTER JOIN t0 ON 'U_' WHERE ((((((((('쌅j&\r')OR((+ (rt1.c2)))))OR(((rt1.c2) ISNULL))))AND(CASE WHEN t0.c2 THEN rt1.c0 END)))OR(t0.c0)));
SELECT SUM(count) FROM (SELECT (((((((((('쌅j&\r')OR((+ (rt1.c2)))))OR(((rt1.c2) ISNULL))))AND(CASE WHEN t0.c2 THEN rt1.c0 END)))OR(t0.c0))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON ((((vt0.c0)|(vt0.c0))) NOT BETWEEN (CASE t0.c1  WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END) AND ((NOT (rt1.c0)))) FULL OUTER JOIN t0 ON 'U_');
SELECT ALL COUNT(*) FROM vt0, rt1, t0 WHERE (x'41a1') ORDER BY (~ (((0.9822458263904269) NOT BETWEEN (t0.c0) AND (t0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'41a1') IS TRUE)  as count FROM vt0, rt1, t0 ORDER BY (~ (((0.9822458263904269) NOT BETWEEN (t0.c0) AND (t0.c2)))) DESC);
SELECT ALL COUNT(*) FROM vt0, rt1, t0 WHERE (x'41a1') ORDER BY (~ (((0.9822458263904269) NOT BETWEEN (t0.c0) AND (t0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'41a1') IS TRUE)  as count FROM vt0, rt1, t0 ORDER BY (~ (((0.9822458263904269) NOT BETWEEN (t0.c0) AND (t0.c2)))) DESC);
SELECT ALL COUNT(*) FROM vt0, rt1, t0 WHERE (x'41a1') ORDER BY (~ (((0.9822458263904269) NOT BETWEEN (t0.c0) AND (t0.c2)))) DESC;
SELECT * FROM vt0 FULL OUTER JOIN t0 ON vt0.c0 WHERE (((((((((((t0.c1)OR(t0.c1)))AND(t0.c1)))AND(t0.c0)))AND(vt0.c0))) NOT BETWEEN (((t0.c2) NOT NULL)) AND ((vt0.c0 IN (t0.c1))))) ORDER BY CAST(t0.c0 COLLATE RTRIM AS BLOB)  NULLS FIRST, CASE (t0.c2 IN ())  WHEN ((vt0.c0)IS NOT(t0.c2)) THEN 0.3919422087241412 WHEN CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END THEN t0.c0 COLLATE BINARY WHEN LOWER(vt0.c0) THEN (vt0.c0 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c1)OR(t0.c1)))AND(t0.c1)))AND(t0.c0)))AND(vt0.c0))) NOT BETWEEN (((t0.c2) NOT NULL)) AND ((vt0.c0 IN (t0.c1))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON vt0.c0 ORDER BY CAST(t0.c0 COLLATE RTRIM AS BLOB)  NULLS FIRST, CASE (t0.c2 IN ())  WHEN ((vt0.c0)IS NOT(t0.c2)) THEN 0.3919422087241412 WHEN CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END THEN t0.c0 COLLATE BINARY WHEN LOWER(vt0.c0) THEN (vt0.c0 IN ()) END  NULLS LAST);
SELECT * FROM vt0 FULL OUTER JOIN t0 ON vt0.c0 WHERE (((((((((((t0.c1)OR(t0.c1)))AND(t0.c1)))AND(t0.c0)))AND(vt0.c0))) NOT BETWEEN (((t0.c2) NOT NULL)) AND ((vt0.c0 IN (t0.c1))))) ORDER BY CAST(t0.c0 COLLATE RTRIM AS BLOB)  NULLS FIRST, CASE (t0.c2 IN ())  WHEN ((vt0.c0)IS NOT(t0.c2)) THEN 0.3919422087241412 WHEN CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END THEN t0.c0 COLLATE BINARY WHEN LOWER(vt0.c0) THEN (vt0.c0 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c1)OR(t0.c1)))AND(t0.c1)))AND(t0.c0)))AND(vt0.c0))) NOT BETWEEN (((t0.c2) NOT NULL)) AND ((vt0.c0 IN (t0.c1))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON vt0.c0 ORDER BY CAST(t0.c0 COLLATE RTRIM AS BLOB)  NULLS FIRST, CASE (t0.c2 IN ())  WHEN ((vt0.c0)IS NOT(t0.c2)) THEN 0.3919422087241412 WHEN CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END THEN t0.c0 COLLATE BINARY WHEN LOWER(vt0.c0) THEN (vt0.c0 IN ()) END  NULLS LAST);
SELECT * FROM vt0 FULL OUTER JOIN t0 ON vt0.c0 WHERE (((((((((((t0.c1)OR(t0.c1)))AND(t0.c1)))AND(t0.c0)))AND(vt0.c0))) NOT BETWEEN (((t0.c2) NOT NULL)) AND ((vt0.c0 IN (t0.c1))))) ORDER BY CAST(t0.c0 COLLATE RTRIM AS BLOB)  NULLS FIRST, CASE (t0.c2 IN ())  WHEN ((vt0.c0)IS NOT(t0.c2)) THEN 0.3919422087241412 WHEN CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END THEN t0.c0 COLLATE BINARY WHEN LOWER(vt0.c0) THEN (vt0.c0 IN ()) END  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0, rt1 WHERE ('PVT') ORDER BY x'eff80f3f' ASC, (((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c2)) IN ()), (((t0.c2) NOTNULL) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('PVT') IS TRUE)  as count FROM t0, vt0, rt1 ORDER BY x'eff80f3f' ASC, (((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c2)) IN ()), (((t0.c2) NOTNULL) IN ())  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, rt1 WHERE ('PVT') ORDER BY x'eff80f3f' ASC, (((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c2)) IN ()), (((t0.c2) NOTNULL) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('PVT') IS TRUE)  as count FROM t0, vt0, rt1 ORDER BY x'eff80f3f' ASC, (((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c2)) IN ()), (((t0.c2) NOTNULL) IN ())  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, rt1 WHERE ('PVT') ORDER BY x'eff80f3f' ASC, (((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c2)) IN ()), (((t0.c2) NOTNULL) IN ())  NULLS LAST;
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON (+ (((vt0.c0)!=(vt0.c0)))) WHERE (NULL) ORDER BY (((((t0.c0 IN ()))OR(CASE WHEN t0.c0 THEN vt0.c0 WHEN t0.c1 THEN '479867718' WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)))AND(t0.c2 COLLATE BINARY)), ((((t0.c0) NOT NULL))||((t0.c2 IN ('-1235647422'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (+ (((vt0.c0)<>(vt0.c0)))) ORDER BY (((((t0.c0 IN ()))OR(CASE WHEN t0.c0 THEN vt0.c0 WHEN t0.c1 THEN '479867718' WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)))AND(t0.c2 COLLATE BINARY)), ((((t0.c0) NOT NULL))||((t0.c2 IN ('-1235647422'))))  NULLS FIRST);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON (+ (((vt0.c0)!=(vt0.c0)))) WHERE (NULL) ORDER BY (((((t0.c0 IN ()))OR(CASE WHEN t0.c0 THEN vt0.c0 WHEN t0.c1 THEN '479867718' WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)))AND(t0.c2 COLLATE BINARY)), ((((t0.c0) NOT NULL))||((t0.c2 IN ('-1235647422'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (+ (((vt0.c0)<>(vt0.c0)))) ORDER BY (((((t0.c0 IN ()))OR(CASE WHEN t0.c0 THEN vt0.c0 WHEN t0.c1 THEN '479867718' WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)))AND(t0.c2 COLLATE BINARY)), ((((t0.c0) NOT NULL))||((t0.c2 IN ('-1235647422'))))  NULLS FIRST);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON (+ (((vt0.c0)!=(vt0.c0)))) WHERE (NULL) ORDER BY (((((t0.c0 IN ()))OR(CASE WHEN t0.c0 THEN vt0.c0 WHEN t0.c1 THEN '479867718' WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)))AND(t0.c2 COLLATE BINARY)), ((((t0.c0) NOT NULL))||((t0.c2 IN ('-1235647422'))))  NULLS FIRST;
SELECT * FROM vt0, rt1 WHERE (rt1.c2 COLLATE BINARY) ORDER BY (((rt1.c0 IN ())) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c2 COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c0 IN ())) NOT NULL) DESC  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE (rt1.c2 COLLATE BINARY) ORDER BY (((rt1.c0 IN ())) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c2 COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c0 IN ())) NOT NULL) DESC  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE (rt1.c2 COLLATE BINARY) ORDER BY (((rt1.c0 IN ())) NOT NULL) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt1 CROSS JOIN t0 ON (((t0.c1)>(rt1.c2)) IN ()) WHERE ((NOT (((((vt0.c0)OR(t0.c1)))AND(rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((vt0.c0)OR(t0.c1)))AND(rt1.c2))))) IS TRUE)  as count FROM vt0, rt1 CROSS JOIN t0 ON (((t0.c1)>(rt1.c2)) IN ()));
SELECT COUNT(*) FROM vt0, rt1 CROSS JOIN t0 ON (((t0.c1)>(rt1.c2)) IN ()) WHERE ((NOT (((((vt0.c0)OR(t0.c1)))AND(rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((vt0.c0)OR(t0.c1)))AND(rt1.c2))))) IS TRUE)  as count FROM vt0, rt1 CROSS JOIN t0 ON (((t0.c1)>(rt1.c2)) IN ()));
SELECT COUNT(*) FROM vt0, rt1 CROSS JOIN t0 ON (((t0.c1)>(rt1.c2)) IN ()) WHERE ((NOT (((((vt0.c0)OR(t0.c1)))AND(rt1.c2)))));
SELECT COUNT(*) FROM rt1, t0 WHERE (((t0.c2)*(t0.c0)) COLLATE NOCASE) ORDER BY (((t0.c0 IN (rt1.c2)))>>(((t0.c0) NOT BETWEEN (t0.c1) AND (0.22464560462123695))));
SELECT SUM(count) FROM (SELECT ((((t0.c2)*(t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, t0 ORDER BY (((t0.c0 IN (rt1.c2)))>>(((t0.c0) NOT BETWEEN (t0.c1) AND (0.22464560462123695)))));
SELECT COUNT(*) FROM rt1, t0 WHERE (((t0.c2)*(t0.c0)) COLLATE NOCASE) ORDER BY (((t0.c0 IN (rt1.c2)))>>(((t0.c0) NOT BETWEEN (t0.c1) AND (0.22464560462123695))));
SELECT SUM(count) FROM (SELECT ((((t0.c2)*(t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, t0 ORDER BY (((t0.c0 IN (rt1.c2)))>>(((t0.c0) NOT BETWEEN (t0.c1) AND (0.22464560462123695)))));
SELECT COUNT(*) FROM rt1, t0 WHERE (((t0.c2)*(t0.c0)) COLLATE NOCASE) ORDER BY (((t0.c0 IN (rt1.c2)))>>(((t0.c0) NOT BETWEEN (t0.c1) AND (0.22464560462123695))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) NOT BETWEEN ((vt0.c0 IN ())) AND (((((((((1744007682)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) ORDER BY ((0.3717243952228291)-(((vt0.c0) IS FALSE))), ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())  NULLS FIRST, '-776699722'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL)) NOT BETWEEN ((vt0.c0 IN ())) AND (((((((((1744007682)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((0.3717243952228291)-(((vt0.c0) IS FALSE))), ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())  NULLS FIRST, '-776699722'  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) NOT BETWEEN ((vt0.c0 IN ())) AND (((((((((1744007682)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) ORDER BY ((0.3717243952228291)-(((vt0.c0) IS FALSE))), ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())  NULLS FIRST, '-776699722'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL)) NOT BETWEEN ((vt0.c0 IN ())) AND (((((((((1744007682)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((0.3717243952228291)-(((vt0.c0) IS FALSE))), ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())  NULLS FIRST, '-776699722'  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) NOT BETWEEN ((vt0.c0 IN ())) AND (((((((((1744007682)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) ORDER BY ((0.3717243952228291)-(((vt0.c0) IS FALSE))), ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())  NULLS FIRST, '-776699722'  NULLS LAST;
SELECT ALL * FROM rt1 CROSS JOIN t0 ON ((((((rt1.c0)|(rt1.c2)))AND(((rt1.c0) NOT NULL))))AND(((rt1.c2)IS(t0.c0)))) WHERE (((IFNULL(t0.c2, rt1.c0)) NOT BETWEEN ((t0.c2 IN ())) AND (((t0.c0) ISNULL)))) ORDER BY (((t0.c0 IN (t0.c1))) BETWEEN (((t0.c1) BETWEEN (t0.c2) AND (t0.c1))) AND (t0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((((IFNULL(t0.c2, rt1.c0)) NOT BETWEEN ((t0.c2 IN ())) AND (((t0.c0) ISNULL)))) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON ((((((rt1.c0)|(rt1.c2)))AND(((rt1.c0) NOT NULL))))AND(((rt1.c2)IS(t0.c0)))) ORDER BY (((t0.c0 IN (t0.c1))) BETWEEN (((t0.c1) BETWEEN (t0.c2) AND (t0.c1))) AND (t0.c0)) ASC);
SELECT ALL * FROM rt1 CROSS JOIN t0 ON ((((((rt1.c0)|(rt1.c2)))AND(((rt1.c0) NOT NULL))))AND(((rt1.c2)IS(t0.c0)))) WHERE (((IFNULL(t0.c2, rt1.c0)) NOT BETWEEN ((t0.c2 IN ())) AND (((t0.c0) ISNULL)))) ORDER BY (((t0.c0 IN (t0.c1))) BETWEEN (((t0.c1) BETWEEN (t0.c2) AND (t0.c1))) AND (t0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((((IFNULL(t0.c2, rt1.c0)) NOT BETWEEN ((t0.c2 IN ())) AND (((t0.c0) ISNULL)))) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON ((((((rt1.c0)|(rt1.c2)))AND(((rt1.c0) NOT NULL))))AND(((rt1.c2)IS(t0.c0)))) ORDER BY (((t0.c0 IN (t0.c1))) BETWEEN (((t0.c1) BETWEEN (t0.c2) AND (t0.c1))) AND (t0.c0)) ASC);
SELECT ALL * FROM rt1 CROSS JOIN t0 ON ((((((rt1.c0)|(rt1.c2)))AND(((rt1.c0) NOT NULL))))AND(((rt1.c2)IS(t0.c0)))) WHERE (((IFNULL(t0.c2, rt1.c0)) NOT BETWEEN ((t0.c2 IN ())) AND (((t0.c0) ISNULL)))) ORDER BY (((t0.c0 IN (t0.c1))) BETWEEN (((t0.c1) BETWEEN (t0.c2) AND (t0.c1))) AND (t0.c0)) ASC;
SELECT COUNT(*) FROM rt1, t0 WHERE (CASE WHEN CAST(rt1.c1 AS REAL) THEN (((0.11981168400548059, t0.c0, t0.c2)) BETWEEN ((t0.c1, t0.c0, rt1.c1)) AND ((rt1.c0, t0.c1, rt1.c1))) WHEN ((((t0.c0)OR(t0.c0)))AND(rt1.c0)) THEN (('0z轄zLN轄L')<=(t0.c2)) WHEN CAST(0.32277531265936754 AS TEXT) THEN TRIM(DISTINCT rt1.c1, rt1.c0) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt1.c1 AS REAL) THEN (((0.11981168400548059, t0.c0, t0.c2)) BETWEEN ((t0.c1, t0.c0, rt1.c1)) AND ((rt1.c0, t0.c1, rt1.c1))) WHEN ((((t0.c0)OR(t0.c0)))AND(rt1.c0)) THEN (('0z轄zLN轄L')<=(t0.c2)) WHEN CAST(0.32277531265936754 AS TEXT) THEN TRIM(DISTINCT rt1.c1, rt1.c0) ELSE NULL END) IS TRUE)  as count FROM rt1, t0);
SELECT COUNT(*) FROM rt1, t0 WHERE (CASE WHEN CAST(rt1.c1 AS REAL) THEN (((0.11981168400548059, t0.c0, t0.c2)) BETWEEN ((t0.c1, t0.c0, rt1.c1)) AND ((rt1.c0, t0.c1, rt1.c1))) WHEN ((((t0.c0)OR(t0.c0)))AND(rt1.c0)) THEN (('0z轄zLN轄L')<=(t0.c2)) WHEN CAST(0.32277531265936754 AS TEXT) THEN TRIM(DISTINCT rt1.c1, rt1.c0) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt1.c1 AS REAL) THEN (((0.11981168400548059, t0.c0, t0.c2)) BETWEEN ((t0.c1, t0.c0, rt1.c1)) AND ((rt1.c0, t0.c1, rt1.c1))) WHEN ((((t0.c0)OR(t0.c0)))AND(rt1.c0)) THEN (('0z轄zLN轄L')<=(t0.c2)) WHEN CAST(0.32277531265936754 AS TEXT) THEN TRIM(DISTINCT rt1.c1, rt1.c0) ELSE NULL END) IS TRUE)  as count FROM rt1, t0);
SELECT COUNT(*) FROM rt1, t0 WHERE (CASE WHEN CAST(rt1.c1 AS REAL) THEN (((0.11981168400548059, t0.c0, t0.c2)) BETWEEN ((t0.c1, t0.c0, rt1.c1)) AND ((rt1.c0, t0.c1, rt1.c1))) WHEN ((((t0.c0)OR(t0.c0)))AND(rt1.c0)) THEN (('0z轄zLN轄L')<=(t0.c2)) WHEN CAST(0.32277531265936754 AS TEXT) THEN TRIM(DISTINCT rt1.c1, rt1.c0) ELSE NULL END);
SELECT * FROM vt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1))) NOT NULL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1))) NOT NULL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1))) NOT NULL));
SELECT * FROM rt1 WHERE (CASE WHEN rt1.c0 THEN rt1.c2 ELSE x'' END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c0 THEN rt1.c2 ELSE x'' END COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE WHEN rt1.c0 THEN rt1.c2 ELSE x'' END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c0 THEN rt1.c2 ELSE x'' END COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE WHEN rt1.c0 THEN rt1.c2 ELSE x'' END COLLATE NOCASE);
SELECT ALL * FROM rt1, vt0, t0 WHERE ((t0.c2 IN ('ib')));
SELECT SUM(count) FROM (SELECT (((t0.c2 IN ('ib'))) IS TRUE)  as count FROM rt1, vt0, t0);
SELECT ALL * FROM rt1, vt0, t0 WHERE ((t0.c2 IN ('ib')));
SELECT SUM(count) FROM (SELECT (((t0.c2 IN ('ib'))) IS TRUE)  as count FROM rt1, vt0, t0);
SELECT ALL * FROM rt1, vt0, t0 WHERE ((t0.c2 IN ('ib')));
SELECT * FROM vt0 WHERE ((((~ (vt0.c0)))%(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))%(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT * FROM vt0 WHERE ((((~ (vt0.c0)))%(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))%(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT * FROM vt0 WHERE ((((~ (vt0.c0)))%(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY vt0.c0;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON t0.c1 RIGHT OUTER JOIN rt1 ON (((((0.7085595015661386)LIKE(rt1.c2))))<=((((rt1.c1) ISNULL)))) WHERE (NULL) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON t0.c1 RIGHT OUTER JOIN rt1 ON (((((0.7085595015661386)LIKE(rt1.c2))))<=((((rt1.c1) ISNULL)))) ORDER BY vt0.c0 DESC);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON t0.c1 RIGHT OUTER JOIN rt1 ON (((((0.7085595015661386)LIKE(rt1.c2))))<=((((rt1.c1) ISNULL)))) WHERE (NULL) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON t0.c1 RIGHT OUTER JOIN rt1 ON (((((0.7085595015661386)LIKE(rt1.c2))))<=((((rt1.c1) ISNULL)))) ORDER BY vt0.c0 DESC);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON t0.c1 RIGHT OUTER JOIN rt1 ON (((((0.7085595015661386)LIKE(rt1.c2))))<=((((rt1.c1) ISNULL)))) WHERE (NULL) ORDER BY vt0.c0 DESC;
SELECT ALL * FROM t0, vt0 WHERE (vt0.c0) ORDER BY (((t0.c0)) NOT BETWEEN ((LIKE(t0.c1, t0.c1))) AND ((CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END))) ASC  NULLS LAST, ((((((t0.c1)OR(t0.c1)))OR(t0.c2)))!=(CASE t0.c1  WHEN vt0.c0 THEN t0.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c0)) NOT BETWEEN ((LIKE(t0.c1, t0.c1))) AND ((CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END))) ASC  NULLS LAST, ((((((t0.c1)OR(t0.c1)))OR(t0.c2)))<>(CASE t0.c1  WHEN vt0.c0 THEN t0.c2 END))  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (vt0.c0) ORDER BY (((t0.c0)) NOT BETWEEN ((LIKE(t0.c1, t0.c1))) AND ((CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END))) ASC  NULLS LAST, ((((((t0.c1)OR(t0.c1)))OR(t0.c2)))!=(CASE t0.c1  WHEN vt0.c0 THEN t0.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c0)) NOT BETWEEN ((LIKE(t0.c1, t0.c1))) AND ((CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END))) ASC  NULLS LAST, ((((((t0.c1)OR(t0.c1)))OR(t0.c2)))<>(CASE t0.c1  WHEN vt0.c0 THEN t0.c2 END))  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (vt0.c0) ORDER BY (((t0.c0)) NOT BETWEEN ((LIKE(t0.c1, t0.c1))) AND ((CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END))) ASC  NULLS LAST, ((((((t0.c1)OR(t0.c1)))OR(t0.c2)))!=(CASE t0.c1  WHEN vt0.c0 THEN t0.c2 END))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(x'' AS REAL)) ORDER BY rt1.c2 COLLATE RTRIM COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS REAL)) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2 COLLATE RTRIM COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(x'' AS REAL)) ORDER BY rt1.c2 COLLATE RTRIM COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS REAL)) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2 COLLATE RTRIM COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(x'' AS REAL)) ORDER BY rt1.c2 COLLATE RTRIM COLLATE BINARY DESC;
SELECT * FROM rt1, vt0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (rt1.c2);
SELECT COUNT(*) FROM t0 CROSS JOIN rt1 ON (((rt1.c2, rt1.c1, t0.c0)) BETWEEN ((CAST(rt1.c0 AS INTEGER), ((rt1.c1)<<(t0.c0)), ((t0.c0) NOT NULL))) AND ((t0.c0, 0.7085595015661386, ABS(rt1.c0)))) WHERE ((((((rt1.c2)) BETWEEN ((t0.c1)) AND ((x'')))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((rt1.c2)) BETWEEN ((t0.c1)) AND ((x'')))) IS FALSE)) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON (((rt1.c2, rt1.c1, t0.c0)) BETWEEN ((CAST(rt1.c0 AS INTEGER), ((rt1.c1)<<(t0.c0)), ((t0.c0) NOT NULL))) AND ((t0.c0, 0.7085595015661386, ABS(rt1.c0)))));
SELECT COUNT(*) FROM t0 CROSS JOIN rt1 ON (((rt1.c2, rt1.c1, t0.c0)) BETWEEN ((CAST(rt1.c0 AS INTEGER), ((rt1.c1)<<(t0.c0)), ((t0.c0) NOT NULL))) AND ((t0.c0, 0.7085595015661386, ABS(rt1.c0)))) WHERE ((((((rt1.c2)) BETWEEN ((t0.c1)) AND ((x'')))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((rt1.c2)) BETWEEN ((t0.c1)) AND ((x'')))) IS FALSE)) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON (((rt1.c2, rt1.c1, t0.c0)) BETWEEN ((CAST(rt1.c0 AS INTEGER), ((rt1.c1)<<(t0.c0)), ((t0.c0) NOT NULL))) AND ((t0.c0, 0.7085595015661386, ABS(rt1.c0)))));
SELECT COUNT(*) FROM t0 CROSS JOIN rt1 ON (((rt1.c2, rt1.c1, t0.c0)) BETWEEN ((CAST(rt1.c0 AS INTEGER), ((rt1.c1)<<(t0.c0)), ((t0.c0) NOT NULL))) AND ((t0.c0, 0.7085595015661386, ABS(rt1.c0)))) WHERE ((((((rt1.c2)) BETWEEN ((t0.c1)) AND ((x'')))) IS FALSE));
SELECT COUNT(*) FROM vt0, rt1, t0 WHERE (CASE WHEN (+ (t0.c2)) THEN ((t0.c2)LIKE(0.08353773129042164)) ELSE RTRIM(rt1.c1) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (t0.c2)) THEN ((t0.c2)LIKE(0.08353773129042164)) ELSE RTRIM(rt1.c1) END) IS TRUE)  as count FROM vt0, rt1, t0);
SELECT COUNT(*) FROM vt0, rt1, t0 WHERE (CASE WHEN (+ (t0.c2)) THEN ((t0.c2)LIKE(0.08353773129042164)) ELSE RTRIM(rt1.c1) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (t0.c2)) THEN ((t0.c2)LIKE(0.08353773129042164)) ELSE RTRIM(rt1.c1) END) IS TRUE)  as count FROM vt0, rt1, t0);
SELECT COUNT(*) FROM vt0, rt1, t0 WHERE (CASE WHEN (+ (t0.c2)) THEN ((t0.c2)LIKE(0.08353773129042164)) ELSE RTRIM(rt1.c1) END);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE x''  WHEN CASE WHEN t0.c1 THEN t0.c0 ELSE t0.c0 END THEN (((t0.c1))<=((t0.c1))) WHEN ('-1518563516' IN ()) THEN CASE t0.c1  WHEN t0.c2 THEN t0.c0 END WHEN NULL THEN ((((t0.c0)OR(t0.c2)))AND(t0.c1)) ELSE ((t0.c2) BETWEEN (t0.c1) AND (t0.c1)) END) ORDER BY (((((((NULL)AND(t0.c1)))OR(t0.c0))))>((CAST(t0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((CASE x''  WHEN CASE WHEN t0.c1 THEN t0.c0 ELSE t0.c0 END THEN (((t0.c1))<=((t0.c1))) WHEN ('-1518563516' IN ()) THEN CASE t0.c1  WHEN t0.c2 THEN t0.c0 END WHEN NULL THEN ((((t0.c0)OR(t0.c2)))AND(t0.c1)) ELSE ((t0.c2) BETWEEN (t0.c1) AND (t0.c1)) END) IS TRUE)  as count FROM t0 ORDER BY (((((((NULL)AND(t0.c1)))OR(t0.c0))))>((CAST(t0.c0 AS REAL)))));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE x''  WHEN CASE WHEN t0.c1 THEN t0.c0 ELSE t0.c0 END THEN (((t0.c1))<=((t0.c1))) WHEN ('-1518563516' IN ()) THEN CASE t0.c1  WHEN t0.c2 THEN t0.c0 END WHEN NULL THEN ((((t0.c0)OR(t0.c2)))AND(t0.c1)) ELSE ((t0.c2) BETWEEN (t0.c1) AND (t0.c1)) END) ORDER BY (((((((NULL)AND(t0.c1)))OR(t0.c0))))>((CAST(t0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((CASE x''  WHEN CASE WHEN t0.c1 THEN t0.c0 ELSE t0.c0 END THEN (((t0.c1))<=((t0.c1))) WHEN ('-1518563516' IN ()) THEN CASE t0.c1  WHEN t0.c2 THEN t0.c0 END WHEN NULL THEN ((((t0.c0)OR(t0.c2)))AND(t0.c1)) ELSE ((t0.c2) BETWEEN (t0.c1) AND (t0.c1)) END) IS TRUE)  as count FROM t0 ORDER BY (((((((NULL)AND(t0.c1)))OR(t0.c0))))>((CAST(t0.c0 AS REAL)))));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE x''  WHEN CASE WHEN t0.c1 THEN t0.c0 ELSE t0.c0 END THEN (((t0.c1))<=((t0.c1))) WHEN ('-1518563516' IN ()) THEN CASE t0.c1  WHEN t0.c2 THEN t0.c0 END WHEN NULL THEN ((((t0.c0)OR(t0.c2)))AND(t0.c1)) ELSE ((t0.c2) BETWEEN (t0.c1) AND (t0.c1)) END) ORDER BY (((((((NULL)AND(t0.c1)))OR(t0.c0))))>((CAST(t0.c0 AS REAL))));
SELECT ALL COUNT(*) FROM rt1, t0 INDEXED BY i95, vt0 WHERE (vt0.c0) ORDER BY CAST(0.41122659754006863 COLLATE NOCASE AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt1, t0 INDEXED BY i95, vt0 ORDER BY CAST(0.41122659754006863 COLLATE NOCASE AS INTEGER)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t0 INDEXED BY i95, vt0 WHERE (vt0.c0) ORDER BY CAST(0.41122659754006863 COLLATE NOCASE AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt1, t0 INDEXED BY i95, vt0 ORDER BY CAST(0.41122659754006863 COLLATE NOCASE AS INTEGER)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t0 INDEXED BY i95, vt0 WHERE (vt0.c0) ORDER BY CAST(0.41122659754006863 COLLATE NOCASE AS INTEGER)  NULLS FIRST;
SELECT ALL * FROM vt0, rt1, t0 WHERE ((- (((t0.c2) IS TRUE)))) ORDER BY ((LOWER(DISTINCT t0.c0)) BETWEEN (json_type(rt1.c1)) AND (CASE rt1.c1  WHEN rt1.c2 THEN t0.c1 ELSE rt1.c2 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c2) IS TRUE)))) IS TRUE)  as count FROM vt0, rt1, t0 ORDER BY ((LOWER(DISTINCT t0.c0)) BETWEEN (json_type(rt1.c1)) AND (CASE rt1.c1  WHEN rt1.c2 THEN t0.c1 ELSE rt1.c2 END)) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt1, t0 WHERE ((- (((t0.c2) IS TRUE)))) ORDER BY ((LOWER(DISTINCT t0.c0)) BETWEEN (json_type(rt1.c1)) AND (CASE rt1.c1  WHEN rt1.c2 THEN t0.c1 ELSE rt1.c2 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c2) IS TRUE)))) IS TRUE)  as count FROM vt0, rt1, t0 ORDER BY ((LOWER(DISTINCT t0.c0)) BETWEEN (json_type(rt1.c1)) AND (CASE rt1.c1  WHEN rt1.c2 THEN t0.c1 ELSE rt1.c2 END)) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt1, t0 WHERE ((- (((t0.c2) IS TRUE)))) ORDER BY ((LOWER(DISTINCT t0.c0)) BETWEEN (json_type(rt1.c1)) AND (CASE rt1.c1  WHEN rt1.c2 THEN t0.c1 ELSE rt1.c2 END)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (((t0.c1) BETWEEN (t0.c2) AND (t0.c2)) IN (((t0.c0)LIKE(t0.c1)), CASE WHEN vt0.c0 THEN vt0.c0 END)) WHERE (((t0.c2) BETWEEN (0.1962654488848996) AND (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t0.c2) BETWEEN (0.1962654488848996) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (((t0.c1) BETWEEN (t0.c2) AND (t0.c2)) IN (((t0.c0)LIKE(t0.c1)), CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (((t0.c1) BETWEEN (t0.c2) AND (t0.c2)) IN (((t0.c0)LIKE(t0.c1)), CASE WHEN vt0.c0 THEN vt0.c0 END)) WHERE (((t0.c2) BETWEEN (0.1962654488848996) AND (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t0.c2) BETWEEN (0.1962654488848996) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (((t0.c1) BETWEEN (t0.c2) AND (t0.c2)) IN (((t0.c0)LIKE(t0.c1)), CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (((t0.c1) BETWEEN (t0.c2) AND (t0.c2)) IN (((t0.c0)LIKE(t0.c1)), CASE WHEN vt0.c0 THEN vt0.c0 END)) WHERE (((t0.c2) BETWEEN (0.1962654488848996) AND (vt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON t0.c1 CROSS JOIN t0 ON (CASE t0.c2  WHEN rt1.c1 THEN t0.c0 ELSE vt0.c0 END IN ()) WHERE (CASE WHEN rt1.c1 THEN t0.c2 WHEN t0.c0 THEN vt0.c0 WHEN rt1.c0 THEN t0.c0 ELSE t0.c1 END COLLATE RTRIM) ORDER BY ((CASE t0.c1  WHEN rt1.c1 THEN vt0.c0 ELSE rt1.c0 END)|(((((rt1.c2)AND(rt1.c1)))AND(rt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c1 THEN t0.c2 WHEN t0.c0 THEN vt0.c0 WHEN rt1.c0 THEN t0.c0 ELSE t0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON t0.c1 CROSS JOIN t0 ON (CASE t0.c2  WHEN rt1.c1 THEN t0.c0 ELSE vt0.c0 END IN ()) ORDER BY ((CASE t0.c1  WHEN rt1.c1 THEN vt0.c0 ELSE rt1.c0 END)|(((((rt1.c2)AND(rt1.c1)))AND(rt1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON t0.c1 CROSS JOIN t0 ON (CASE t0.c2  WHEN rt1.c1 THEN t0.c0 ELSE vt0.c0 END IN ()) WHERE (CASE WHEN rt1.c1 THEN t0.c2 WHEN t0.c0 THEN vt0.c0 WHEN rt1.c0 THEN t0.c0 ELSE t0.c1 END COLLATE RTRIM) ORDER BY ((CASE t0.c1  WHEN rt1.c1 THEN vt0.c0 ELSE rt1.c0 END)|(((((rt1.c2)AND(rt1.c1)))AND(rt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c1 THEN t0.c2 WHEN t0.c0 THEN vt0.c0 WHEN rt1.c0 THEN t0.c0 ELSE t0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON t0.c1 CROSS JOIN t0 ON (CASE t0.c2  WHEN rt1.c1 THEN t0.c0 ELSE vt0.c0 END IN ()) ORDER BY ((CASE t0.c1  WHEN rt1.c1 THEN vt0.c0 ELSE rt1.c0 END)|(((((rt1.c2)AND(rt1.c1)))AND(rt1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON t0.c1 CROSS JOIN t0 ON (CASE t0.c2  WHEN rt1.c1 THEN t0.c0 ELSE vt0.c0 END IN ()) WHERE (CASE WHEN rt1.c1 THEN t0.c2 WHEN t0.c0 THEN vt0.c0 WHEN rt1.c0 THEN t0.c0 ELSE t0.c1 END COLLATE RTRIM) ORDER BY ((CASE t0.c1  WHEN rt1.c1 THEN vt0.c0 ELSE rt1.c0 END)|(((((rt1.c2)AND(rt1.c1)))AND(rt1.c0))))  NULLS FIRST;
SELECT ALL * FROM vt0 INNER JOIN rt1 ON ((x'') NOT NULL) WHERE ((NOT (((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c1))))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((x'') NOT NULL));
SELECT ALL * FROM vt0 INNER JOIN rt1 ON ((x'') NOT NULL) WHERE ((NOT (((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c1))))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((x'') NOT NULL));
SELECT ALL * FROM vt0 INNER JOIN rt1 ON ((x'') NOT NULL) WHERE ((NOT (((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c1)))));
SELECT COUNT(*) FROM vt0, t0, rt1 WHERE (CAST(((t0.c0) BETWEEN (rt1.c0) AND (t0.c0)) AS TEXT)) ORDER BY (x'' IN (0x44322ebe, rt1.c2, t0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) BETWEEN (rt1.c0) AND (t0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, t0, rt1 ORDER BY (x'' IN (0X44322ebe, rt1.c2, t0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, t0, rt1 WHERE (CAST(((t0.c0) BETWEEN (rt1.c0) AND (t0.c0)) AS TEXT)) ORDER BY (x'' IN (0x44322ebe, rt1.c2, t0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) BETWEEN (rt1.c0) AND (t0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, t0, rt1 ORDER BY (x'' IN (0X44322ebe, rt1.c2, t0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, t0, rt1 WHERE (CAST(((t0.c0) BETWEEN (rt1.c0) AND (t0.c0)) AS TEXT)) ORDER BY (x'' IN (0x44322ebe, rt1.c2, t0.c0)) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((0.6382024994768877 COLLATE RTRIM)<=(TRIM(DISTINCT rt1.c1, rt1.c0)))) ORDER BY 'l፧+aN'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.6382024994768877 COLLATE RTRIM)<=(TRIM(DISTINCT rt1.c1, rt1.c0)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY 'l፧+aN'  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((0.6382024994768877 COLLATE RTRIM)<=(TRIM(DISTINCT rt1.c1, rt1.c0)))) ORDER BY 'l፧+aN'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.6382024994768877 COLLATE RTRIM)<=(TRIM(DISTINCT rt1.c1, rt1.c0)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY 'l፧+aN'  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((0.6382024994768877 COLLATE RTRIM)<=(TRIM(DISTINCT rt1.c1, rt1.c0)))) ORDER BY 'l፧+aN'  NULLS LAST;
SELECT * FROM t0, rt1, vt0 WHERE (x'b18e');
SELECT SUM(count) FROM (SELECT ALL ((x'b18e') IS TRUE)  as count FROM t0, rt1, vt0);
SELECT * FROM t0, rt1, vt0 WHERE (x'b18e');
SELECT SUM(count) FROM (SELECT ALL ((x'b18e') IS TRUE)  as count FROM t0, rt1, vt0);
SELECT * FROM t0, rt1, vt0 WHERE (x'b18e');
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((- (((t0.c0)>>(t0.c1))))) ORDER BY (- (CASE WHEN t0.c0 THEN t0.c0 END)) DESC, 0.346986290423011;
SELECT SUM(count) FROM (SELECT (((- (((t0.c0)>>(t0.c1))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (- (CASE WHEN t0.c0 THEN t0.c0 END)) DESC, 0.346986290423011);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((- (((t0.c0)>>(t0.c1))))) ORDER BY (- (CASE WHEN t0.c0 THEN t0.c0 END)) DESC, 0.346986290423011;
SELECT SUM(count) FROM (SELECT (((- (((t0.c0)>>(t0.c1))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (- (CASE WHEN t0.c0 THEN t0.c0 END)) DESC, 0.346986290423011);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((- (((t0.c0)>>(t0.c1))))) ORDER BY (- (CASE WHEN t0.c0 THEN t0.c0 END)) DESC, 0.346986290423011;
SELECT * FROM vt0 INNER JOIN t0 ON CAST('NB)DP' AS INTEGER) COLLATE NOCASE COLLATE BINARY INNER JOIN rt1 ON ((CAST(t0.c0 AS NUMERIC))&((((t0.c2))>=((rt1.c0))))) WHERE (rtreenode((((rt1.c0, vt0.c0, rt1.c0))!=((rt1.c2, vt0.c0, rt1.c1))), rt1.c0 COLLATE BINARY)) ORDER BY ((((((((t0.c0)OR(rt1.c2)))OR(t0.c1)))OR((((-9223372036854775808))<>((rt1.c2))))))OR(NULL)), ((((((rt1.c1) NOTNULL))OR(((((rt1.c1)OR(rt1.c0)))AND(rt1.c2)))))AND(CAST(rt1.c0 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rtreenode((((rt1.c0, vt0.c0, rt1.c0))<>((rt1.c2, vt0.c0, rt1.c1))), rt1.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON CAST('NB)DP' AS INTEGER) COLLATE NOCASE COLLATE BINARY INNER JOIN rt1 ON ((CAST(t0.c0 AS NUMERIC))&((((t0.c2))>=((rt1.c0))))) ORDER BY ((((((((t0.c0)OR(rt1.c2)))OR(t0.c1)))OR((((-9223372036854775808))<>((rt1.c2))))))OR(NULL)), ((((((rt1.c1) NOTNULL))OR(((((rt1.c1)OR(rt1.c0)))AND(rt1.c2)))))AND(CAST(rt1.c0 AS INTEGER)))  NULLS LAST);
SELECT * FROM vt0 INNER JOIN t0 ON CAST('NB)DP' AS INTEGER) COLLATE NOCASE COLLATE BINARY INNER JOIN rt1 ON ((CAST(t0.c0 AS NUMERIC))&((((t0.c2))>=((rt1.c0))))) WHERE (rtreenode((((rt1.c0, vt0.c0, rt1.c0))!=((rt1.c2, vt0.c0, rt1.c1))), rt1.c0 COLLATE BINARY)) ORDER BY ((((((((t0.c0)OR(rt1.c2)))OR(t0.c1)))OR((((-9223372036854775808))<>((rt1.c2))))))OR(NULL)), ((((((rt1.c1) NOTNULL))OR(((((rt1.c1)OR(rt1.c0)))AND(rt1.c2)))))AND(CAST(rt1.c0 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rtreenode((((rt1.c0, vt0.c0, rt1.c0))<>((rt1.c2, vt0.c0, rt1.c1))), rt1.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON CAST('NB)DP' AS INTEGER) COLLATE NOCASE COLLATE BINARY INNER JOIN rt1 ON ((CAST(t0.c0 AS NUMERIC))&((((t0.c2))>=((rt1.c0))))) ORDER BY ((((((((t0.c0)OR(rt1.c2)))OR(t0.c1)))OR((((-9223372036854775808))<>((rt1.c2))))))OR(NULL)), ((((((rt1.c1) NOTNULL))OR(((((rt1.c1)OR(rt1.c0)))AND(rt1.c2)))))AND(CAST(rt1.c0 AS INTEGER)))  NULLS LAST);
SELECT * FROM vt0 INNER JOIN t0 ON CAST('NB)DP' AS INTEGER) COLLATE NOCASE COLLATE BINARY INNER JOIN rt1 ON ((CAST(t0.c0 AS NUMERIC))&((((t0.c2))>=((rt1.c0))))) WHERE (rtreenode((((rt1.c0, vt0.c0, rt1.c0))!=((rt1.c2, vt0.c0, rt1.c1))), rt1.c0 COLLATE BINARY)) ORDER BY ((((((((t0.c0)OR(rt1.c2)))OR(t0.c1)))OR((((-9223372036854775808))<>((rt1.c2))))))OR(NULL)), ((((((rt1.c1) NOTNULL))OR(((((rt1.c1)OR(rt1.c0)))AND(rt1.c2)))))AND(CAST(rt1.c0 AS INTEGER)))  NULLS LAST;
SELECT ALL * FROM rt1, vt0, t0 WHERE (((((((t0.c0)AND(t0.c1)))OR(t0.c1))) BETWEEN (((t0.c1) IS FALSE)) AND ((t0.c1 IN ())))) ORDER BY ((((((rt1.c2)LIKE(rt1.c1)))AND(((((((((t0.c2)OR(vt0.c0)))AND(t0.c1)))AND(t0.c0)))AND(rt1.c1)))))AND(((((((((t0.c0)AND(t0.c2)))OR(vt0.c0)))OR(rt1.c2)))OR(t0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND(t0.c1)))OR(t0.c1))) BETWEEN (((t0.c1) IS FALSE)) AND ((t0.c1 IN ())))) IS TRUE)  as count FROM rt1, vt0, t0 ORDER BY ((((((rt1.c2)LIKE(rt1.c1)))AND(((((((((t0.c2)OR(vt0.c0)))AND(t0.c1)))AND(t0.c0)))AND(rt1.c1)))))AND(((((((((t0.c0)AND(t0.c2)))OR(vt0.c0)))OR(rt1.c2)))OR(t0.c2))))  NULLS FIRST);
SELECT ALL * FROM rt1, vt0, t0 WHERE (((((((t0.c0)AND(t0.c1)))OR(t0.c1))) BETWEEN (((t0.c1) IS FALSE)) AND ((t0.c1 IN ())))) ORDER BY ((((((rt1.c2)LIKE(rt1.c1)))AND(((((((((t0.c2)OR(vt0.c0)))AND(t0.c1)))AND(t0.c0)))AND(rt1.c1)))))AND(((((((((t0.c0)AND(t0.c2)))OR(vt0.c0)))OR(rt1.c2)))OR(t0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND(t0.c1)))OR(t0.c1))) BETWEEN (((t0.c1) IS FALSE)) AND ((t0.c1 IN ())))) IS TRUE)  as count FROM rt1, vt0, t0 ORDER BY ((((((rt1.c2)LIKE(rt1.c1)))AND(((((((((t0.c2)OR(vt0.c0)))AND(t0.c1)))AND(t0.c0)))AND(rt1.c1)))))AND(((((((((t0.c0)AND(t0.c2)))OR(vt0.c0)))OR(rt1.c2)))OR(t0.c2))))  NULLS FIRST);
SELECT ALL * FROM rt1, vt0, t0 WHERE (((((((t0.c0)AND(t0.c1)))OR(t0.c1))) BETWEEN (((t0.c1) IS FALSE)) AND ((t0.c1 IN ())))) ORDER BY ((((((rt1.c2)LIKE(rt1.c1)))AND(((((((((t0.c2)OR(vt0.c0)))AND(t0.c1)))AND(t0.c0)))AND(rt1.c1)))))AND(((((((((t0.c0)AND(t0.c2)))OR(vt0.c0)))OR(rt1.c2)))OR(t0.c2))))  NULLS FIRST;
SELECT ALL * FROM t0, vt0, rt1 WHERE (((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))) IN ())) ORDER BY CAST((((t0.c0))<=((rt1.c2))) AS REAL), CAST((t0.c2 IN ()) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))) IN ())) IS TRUE)  as count FROM t0, vt0, rt1 ORDER BY CAST((((t0.c0))<=((rt1.c2))) AS REAL), CAST((t0.c2 IN ()) AS TEXT) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0, rt1 WHERE (((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))) IN ())) ORDER BY CAST((((t0.c0))<=((rt1.c2))) AS REAL), CAST((t0.c2 IN ()) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))) IN ())) IS TRUE)  as count FROM t0, vt0, rt1 ORDER BY CAST((((t0.c0))<=((rt1.c2))) AS REAL), CAST((t0.c2 IN ()) AS TEXT) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0, rt1 WHERE (((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))) IN ())) ORDER BY CAST((((t0.c0))<=((rt1.c2))) AS REAL), CAST((t0.c2 IN ()) AS TEXT) ASC  NULLS LAST;
SELECT ALL * FROM vt0, rt1, t0 WHERE (((((((vt0.c0)AND(t0.c2)))AND(rt1.c1))) BETWEEN (((t0.c2)OR(t0.c0))) AND (((rt1.c2) NOT BETWEEN (0.6757870624836146) AND (rt1.c0))))) ORDER BY (+ (((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c1))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(t0.c2)))AND(rt1.c1))) BETWEEN (((t0.c2)OR(t0.c0))) AND (((rt1.c2) NOT BETWEEN (0.6757870624836146) AND (rt1.c0))))) IS TRUE)  as count FROM vt0, rt1, t0 ORDER BY (+ (((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c1)))));
SELECT ALL * FROM vt0, rt1, t0 WHERE (((((((vt0.c0)AND(t0.c2)))AND(rt1.c1))) BETWEEN (((t0.c2)OR(t0.c0))) AND (((rt1.c2) NOT BETWEEN (0.6757870624836146) AND (rt1.c0))))) ORDER BY (+ (((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c1))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(t0.c2)))AND(rt1.c1))) BETWEEN (((t0.c2)OR(t0.c0))) AND (((rt1.c2) NOT BETWEEN (0.6757870624836146) AND (rt1.c0))))) IS TRUE)  as count FROM vt0, rt1, t0 ORDER BY (+ (((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c1)))));
SELECT ALL * FROM vt0, rt1, t0 WHERE (((((((vt0.c0)AND(t0.c2)))AND(rt1.c1))) BETWEEN (((t0.c2)OR(t0.c0))) AND (((rt1.c2) NOT BETWEEN (0.6757870624836146) AND (rt1.c0))))) ORDER BY (+ (((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c1))));
SELECT ALL * FROM t0, vt0, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT ALL * FROM t0, vt0, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT ALL * FROM t0, vt0, rt1 WHERE (NULL);
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN ()) WHEN HEX(vt0.c0) THEN ((((vt0.c0)OR('')))AND(vt0.c0)) WHEN ((-1889075984) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR('sV')) ELSE (+ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN ()) WHEN HEX(vt0.c0) THEN ((((vt0.c0)OR('')))AND(vt0.c0)) WHEN ((-1889075984) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR('sV')) ELSE (+ (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN ()) WHEN HEX(vt0.c0) THEN ((((vt0.c0)OR('')))AND(vt0.c0)) WHEN ((-1889075984) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR('sV')) ELSE (+ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN ()) WHEN HEX(vt0.c0) THEN ((((vt0.c0)OR('')))AND(vt0.c0)) WHEN ((-1889075984) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR('sV')) ELSE (+ (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN ()) WHEN HEX(vt0.c0) THEN ((((vt0.c0)OR('')))AND(vt0.c0)) WHEN ((-1889075984) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR('sV')) ELSE (+ (vt0.c0)) END);
SELECT COUNT(*) FROM rt1 CROSS JOIN t0 ON ((NOT (t0.c0)) IN ()) FULL OUTER JOIN vt0 ON (((t0.c0)) NOT BETWEEN (((('389210657')IS(rt1.c0)))) AND ((((t0.c0) BETWEEN (t0.c0) AND (rt1.c1))))) WHERE ((((+ (rt1.c2))) NOT BETWEEN (x'' COLLATE NOCASE) AND ((((rt1.c2))<>((t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt1.c2))) NOT BETWEEN (x'' COLLATE NOCASE) AND ((((rt1.c2))<>((t0.c0)))))) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON ((NOT (t0.c0)) IN ()) FULL OUTER JOIN vt0 ON (((t0.c0)) NOT BETWEEN (((('389210657')IS(rt1.c0)))) AND ((((t0.c0) BETWEEN (t0.c0) AND (rt1.c1))))));
SELECT COUNT(*) FROM rt1 CROSS JOIN t0 ON ((NOT (t0.c0)) IN ()) FULL OUTER JOIN vt0 ON (((t0.c0)) NOT BETWEEN (((('389210657')IS(rt1.c0)))) AND ((((t0.c0) BETWEEN (t0.c0) AND (rt1.c1))))) WHERE ((((+ (rt1.c2))) NOT BETWEEN (x'' COLLATE NOCASE) AND ((((rt1.c2))<>((t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt1.c2))) NOT BETWEEN (x'' COLLATE NOCASE) AND ((((rt1.c2))<>((t0.c0)))))) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON ((NOT (t0.c0)) IN ()) FULL OUTER JOIN vt0 ON (((t0.c0)) NOT BETWEEN (((('389210657')IS(rt1.c0)))) AND ((((t0.c0) BETWEEN (t0.c0) AND (rt1.c1))))));
SELECT COUNT(*) FROM rt1 CROSS JOIN t0 ON ((NOT (t0.c0)) IN ()) FULL OUTER JOIN vt0 ON (((t0.c0)) NOT BETWEEN (((('389210657')IS(rt1.c0)))) AND ((((t0.c0) BETWEEN (t0.c0) AND (rt1.c1))))) WHERE ((((+ (rt1.c2))) NOT BETWEEN (x'' COLLATE NOCASE) AND ((((rt1.c2))<>((t0.c0))))));
SELECT ALL COUNT(*) FROM vt0, rt1, t0 WHERE ((((rt1.c2)) NOT BETWEEN ((((rt1.c0)LIKE(rt1.c2)))) AND ((CAST(rt1.c0 AS TEXT))))) ORDER BY t0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) NOT BETWEEN ((((rt1.c0)LIKE(rt1.c2)))) AND ((CAST(rt1.c0 AS TEXT))))) IS TRUE)  as count FROM vt0, rt1, t0 ORDER BY t0.c0 DESC);
SELECT ALL COUNT(*) FROM vt0, rt1, t0 WHERE ((((rt1.c2)) NOT BETWEEN ((((rt1.c0)LIKE(rt1.c2)))) AND ((CAST(rt1.c0 AS TEXT))))) ORDER BY t0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) NOT BETWEEN ((((rt1.c0)LIKE(rt1.c2)))) AND ((CAST(rt1.c0 AS TEXT))))) IS TRUE)  as count FROM vt0, rt1, t0 ORDER BY t0.c0 DESC);
SELECT ALL COUNT(*) FROM vt0, rt1, t0 WHERE ((((rt1.c2)) NOT BETWEEN ((((rt1.c0)LIKE(rt1.c2)))) AND ((CAST(rt1.c0 AS TEXT))))) ORDER BY t0.c0 DESC;
SELECT ALL * FROM t0, rt1 WHERE ((((t0.c2 IN ()))*(((t0.c1)IS(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2 IN ()))*(((t0.c1)IS(rt1.c1))))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE ((((t0.c2 IN ()))*(((t0.c1)IS(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2 IN ()))*(((t0.c1)IS(rt1.c1))))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE ((((t0.c2 IN ()))*(((t0.c1)IS(rt1.c1)))));
SELECT * FROM t0, rt1, vt0 WHERE ((((rt1.c0)) NOT BETWEEN ((UPPER(vt0.c0))) AND ((load_extension(t0.c1, t0.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) NOT BETWEEN ((UPPER(vt0.c0))) AND ((load_extension(t0.c1, t0.c1))))) IS TRUE)  as count FROM t0, rt1, vt0);
SELECT * FROM t0, rt1, vt0 WHERE ((((rt1.c0)) NOT BETWEEN ((UPPER(vt0.c0))) AND ((load_extension(t0.c1, t0.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) NOT BETWEEN ((UPPER(vt0.c0))) AND ((load_extension(t0.c1, t0.c1))))) IS TRUE)  as count FROM t0, rt1, vt0);
SELECT ALL * FROM t0 WHERE (((((t0.c1) NOTNULL))%((- (t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) NOTNULL))%((- (t0.c1))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c1) NOTNULL))%((- (t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) NOTNULL))%((- (t0.c1))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c1) NOTNULL))%((- (t0.c1)))));
SELECT ALL * FROM t0, vt0 WHERE ((((t0.c2 COLLATE NOCASE, t0.c2 COLLATE NOCASE, ((t0.c2)GLOB(vt0.c0)), ((vt0.c0) NOT NULL), vt0.c0))<=((t0.c1, NULLIF(DISTINCT t0.c0, t0.c0), CAST(t0.c2 AS REAL), ((t0.c1) ISNULL), (('tlnu') BETWEEN (t0.c1) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2 COLLATE NOCASE, t0.c2 COLLATE NOCASE, ((t0.c2)GLOB(vt0.c0)), ((vt0.c0) NOT NULL), vt0.c0))<=((t0.c1, NULLIF(DISTINCT t0.c0, t0.c0), CAST(t0.c2 AS REAL), ((t0.c1) ISNULL), (('tlnu') BETWEEN (t0.c1) AND (vt0.c0)))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((t0.c2 COLLATE NOCASE, t0.c2 COLLATE NOCASE, ((t0.c2)GLOB(vt0.c0)), ((vt0.c0) NOT NULL), vt0.c0))<=((t0.c1, NULLIF(DISTINCT t0.c0, t0.c0), CAST(t0.c2 AS REAL), ((t0.c1) ISNULL), (('tlnu') BETWEEN (t0.c1) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2 COLLATE NOCASE, t0.c2 COLLATE NOCASE, ((t0.c2)GLOB(vt0.c0)), ((vt0.c0) NOT NULL), vt0.c0))<=((t0.c1, NULLIF(DISTINCT t0.c0, t0.c0), CAST(t0.c2 AS REAL), ((t0.c1) ISNULL), (('tlnu') BETWEEN (t0.c1) AND (vt0.c0)))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((t0.c2 COLLATE NOCASE, t0.c2 COLLATE NOCASE, ((t0.c2)GLOB(vt0.c0)), ((vt0.c0) NOT NULL), vt0.c0))<=((t0.c1, NULLIF(DISTINCT t0.c0, t0.c0), CAST(t0.c2 AS REAL), ((t0.c1) ISNULL), (('tlnu') BETWEEN (t0.c1) AND (vt0.c0))))));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt1 ON (+ (CASE rt1.c2  WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c2 END)) FULL OUTER JOIN t0 ON ((((rt1.c0)LIKE(vt0.c0))) IS FALSE) WHERE ((((~ (rt1.c1))) NOT BETWEEN (CAST('L' AS NUMERIC)) AND (DATE(t0.c0, t0.c0, rt1.c1, rt1.c1, t0.c0, vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((~ (rt1.c1))) NOT BETWEEN (CAST('L' AS NUMERIC)) AND (DATE(t0.c0, t0.c0, rt1.c1, rt1.c1, t0.c0, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON (+ (CASE rt1.c2  WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c2 END)) FULL OUTER JOIN t0 ON ((((rt1.c0)LIKE(vt0.c0))) IS FALSE));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt1 ON (+ (CASE rt1.c2  WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c2 END)) FULL OUTER JOIN t0 ON ((((rt1.c0)LIKE(vt0.c0))) IS FALSE) WHERE ((((~ (rt1.c1))) NOT BETWEEN (CAST('L' AS NUMERIC)) AND (DATE(t0.c0, t0.c0, rt1.c1, rt1.c1, t0.c0, vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((~ (rt1.c1))) NOT BETWEEN (CAST('L' AS NUMERIC)) AND (DATE(t0.c0, t0.c0, rt1.c1, rt1.c1, t0.c0, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON (+ (CASE rt1.c2  WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c2 END)) FULL OUTER JOIN t0 ON ((((rt1.c0)LIKE(vt0.c0))) IS FALSE));
SELECT COUNT(*) FROM rt1 WHERE (((((((((((rt1.c0)AND(NULL)))AND(rt1.c1)))OR(rt1.c2)))AND(rt1.c0)))/((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0)AND(NULL)))AND(rt1.c1)))OR(rt1.c2)))AND(rt1.c0)))/((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((((((((rt1.c0)AND(NULL)))AND(rt1.c1)))OR(rt1.c2)))AND(rt1.c0)))/((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0)AND(NULL)))AND(rt1.c1)))OR(rt1.c2)))AND(rt1.c0)))/((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((((((((rt1.c0)AND(NULL)))AND(rt1.c1)))OR(rt1.c2)))AND(rt1.c0)))/((rt1.c2 IN ()))));
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c2)OR(t0.c2)))OR(t0.c2)))AND(t0.c2)))OR(t0.c2)))<>(((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY (((t0.c0))!=((t0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c2)OR(t0.c2)))OR(t0.c2)))AND(t0.c2)))OR(t0.c2)))!=(((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0))<>((t0.c2))));
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c2)OR(t0.c2)))OR(t0.c2)))AND(t0.c2)))OR(t0.c2)))<>(((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY (((t0.c0))!=((t0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c2)OR(t0.c2)))OR(t0.c2)))AND(t0.c2)))OR(t0.c2)))!=(((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0))<>((t0.c2))));
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c2)OR(t0.c2)))OR(t0.c2)))AND(t0.c2)))OR(t0.c2)))<>(((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY (((t0.c0))!=((t0.c2)));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON CAST(LIKELY(DISTINCT t0.c1) AS TEXT) WHERE (CAST(((((((((t0.c1)OR(t0.c1)))AND(t0.c2)))AND(vt0.c0)))OR(t0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((t0.c1)OR(t0.c1)))AND(t0.c2)))AND(vt0.c0)))OR(t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON CAST(LIKELY(DISTINCT t0.c1) AS TEXT));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON CAST(LIKELY(DISTINCT t0.c1) AS TEXT) WHERE (CAST(((((((((t0.c1)OR(t0.c1)))AND(t0.c2)))AND(vt0.c0)))OR(t0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((t0.c1)OR(t0.c1)))AND(t0.c2)))AND(vt0.c0)))OR(t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON CAST(LIKELY(DISTINCT t0.c1) AS TEXT));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON CAST(LIKELY(DISTINCT t0.c1) AS TEXT) WHERE (CAST(((((((((t0.c1)OR(t0.c1)))AND(t0.c2)))AND(vt0.c0)))OR(t0.c0)) AS NUMERIC));
SELECT ALL * FROM rt1, t0, vt0 WHERE (((((0.596590294651201) BETWEEN (vt0.c0) AND (rt1.c0)))<=(((rt1.c2) NOT BETWEEN (x'') AND (t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((0.596590294651201) BETWEEN (vt0.c0) AND (rt1.c0)))<=(((rt1.c2) NOT BETWEEN (x'') AND (t0.c2))))) IS TRUE)  as count FROM rt1, t0, vt0);
SELECT ALL * FROM rt1, t0, vt0 WHERE (((((0.596590294651201) BETWEEN (vt0.c0) AND (rt1.c0)))<=(((rt1.c2) NOT BETWEEN (x'') AND (t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((0.596590294651201) BETWEEN (vt0.c0) AND (rt1.c0)))<=(((rt1.c2) NOT BETWEEN (x'') AND (t0.c2))))) IS TRUE)  as count FROM rt1, t0, vt0);
SELECT ALL * FROM rt1, t0, vt0 WHERE (((((0.596590294651201) BETWEEN (vt0.c0) AND (rt1.c0)))<=(((rt1.c2) NOT BETWEEN (x'') AND (t0.c2)))));
SELECT * FROM vt0, t0 WHERE (((t0.c2)IS NOT(vt0.c0)) COLLATE NOCASE) ORDER BY ((((((((NULL)OR(((vt0.c0)<(t0.c1)))))AND((NOT (vt0.c0)))))OR(t0.c2)))AND(((t0.c1)/(t0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2)IS NOT(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((((NULL)OR(((vt0.c0)<(t0.c1)))))AND((NOT (vt0.c0)))))OR(t0.c2)))AND(((t0.c1)/(t0.c1)))));
SELECT * FROM vt0, t0 WHERE (((t0.c2)IS NOT(vt0.c0)) COLLATE NOCASE) ORDER BY ((((((((NULL)OR(((vt0.c0)<(t0.c1)))))AND((NOT (vt0.c0)))))OR(t0.c2)))AND(((t0.c1)/(t0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2)IS NOT(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((((NULL)OR(((vt0.c0)<(t0.c1)))))AND((NOT (vt0.c0)))))OR(t0.c2)))AND(((t0.c1)/(t0.c1)))));
SELECT * FROM vt0, t0 WHERE (((t0.c2)IS NOT(vt0.c0)) COLLATE NOCASE) ORDER BY ((((((((NULL)OR(((vt0.c0)<(t0.c1)))))AND((NOT (vt0.c0)))))OR(t0.c2)))AND(((t0.c1)/(t0.c1))));
SELECT COUNT(*) FROM rt1 INNER JOIN t0 ON CAST(t0.c2 COLLATE BINARY AS TEXT) WHERE (CASE (rt1.c0 IN (t0.c0))  WHEN (rt1.c0 IN ()) THEN (t0.c1 IN (t0.c1)) WHEN ((rt1.c0)%(x'')) THEN (((rt1.c2, t0.c1, t0.c0)) BETWEEN ((rt1.c2, rt1.c2, t0.c0)) AND ((t0.c0, 758123600, t0.c2))) WHEN (+ ('')) THEN rt1.c2 COLLATE BINARY ELSE rt1.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt1.c0 IN (t0.c0))  WHEN (rt1.c0 IN ()) THEN (t0.c1 IN (t0.c1)) WHEN ((rt1.c0)%(x'')) THEN (((rt1.c2, t0.c1, t0.c0)) BETWEEN ((rt1.c2, rt1.c2, t0.c0)) AND ((t0.c0, 758123600, t0.c2))) WHEN (+ ('')) THEN rt1.c2 COLLATE BINARY ELSE rt1.c2 END) IS TRUE)  as count FROM rt1 INNER JOIN t0 ON CAST(t0.c2 COLLATE BINARY AS TEXT));
SELECT COUNT(*) FROM rt1 INNER JOIN t0 ON CAST(t0.c2 COLLATE BINARY AS TEXT) WHERE (CASE (rt1.c0 IN (t0.c0))  WHEN (rt1.c0 IN ()) THEN (t0.c1 IN (t0.c1)) WHEN ((rt1.c0)%(x'')) THEN (((rt1.c2, t0.c1, t0.c0)) BETWEEN ((rt1.c2, rt1.c2, t0.c0)) AND ((t0.c0, 758123600, t0.c2))) WHEN (+ ('')) THEN rt1.c2 COLLATE BINARY ELSE rt1.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt1.c0 IN (t0.c0))  WHEN (rt1.c0 IN ()) THEN (t0.c1 IN (t0.c1)) WHEN ((rt1.c0)%(x'')) THEN (((rt1.c2, t0.c1, t0.c0)) BETWEEN ((rt1.c2, rt1.c2, t0.c0)) AND ((t0.c0, 758123600, t0.c2))) WHEN (+ ('')) THEN rt1.c2 COLLATE BINARY ELSE rt1.c2 END) IS TRUE)  as count FROM rt1 INNER JOIN t0 ON CAST(t0.c2 COLLATE BINARY AS TEXT));
SELECT COUNT(*) FROM rt1 INNER JOIN t0 ON CAST(t0.c2 COLLATE BINARY AS TEXT) WHERE (CASE (rt1.c0 IN (t0.c0))  WHEN (rt1.c0 IN ()) THEN (t0.c1 IN (t0.c1)) WHEN ((rt1.c0)%(x'')) THEN (((rt1.c2, t0.c1, t0.c0)) BETWEEN ((rt1.c2, rt1.c2, t0.c0)) AND ((t0.c0, 758123600, t0.c2))) WHEN (+ ('')) THEN rt1.c2 COLLATE BINARY ELSE rt1.c2 END);
SELECT ALL * FROM rt1, t0, vt0 WHERE (CAST(((((((((t0.c0)OR(t0.c1)))OR(x'')))AND(NULL)))AND(rt1.c1)) AS BLOB)) ORDER BY ((((t0.c2) NOTNULL))>(t0.c0)) DESC, ((+ (t0.c1)) IN (((-787283649)*(rt1.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((t0.c0)OR(t0.c1)))OR(x'')))AND(NULL)))AND(rt1.c1)) AS BLOB)) IS TRUE)  as count FROM rt1, t0, vt0 ORDER BY ((((t0.c2) NOTNULL))>(t0.c0)) DESC, ((+ (t0.c1)) IN (((-787283649)*(rt1.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, t0, vt0 WHERE (CAST(((((((((t0.c0)OR(t0.c1)))OR(x'')))AND(NULL)))AND(rt1.c1)) AS BLOB)) ORDER BY ((((t0.c2) NOTNULL))>(t0.c0)) DESC, ((+ (t0.c1)) IN (((-787283649)*(rt1.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((t0.c0)OR(t0.c1)))OR(x'')))AND(NULL)))AND(rt1.c1)) AS BLOB)) IS TRUE)  as count FROM rt1, t0, vt0 ORDER BY ((((t0.c2) NOTNULL))>(t0.c0)) DESC, ((+ (t0.c1)) IN (((-787283649)*(rt1.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, t0, vt0 WHERE (CAST(((((((((t0.c0)OR(t0.c1)))OR(x'')))AND(NULL)))AND(rt1.c1)) AS BLOB)) ORDER BY ((((t0.c2) NOTNULL))>(t0.c0)) DESC, ((+ (t0.c1)) IN (((-787283649)*(rt1.c1)))) ASC  NULLS FIRST;
SELECT * FROM t0, rt1 LEFT OUTER JOIN vt0 ON DATE((t0.c2 IN ()), t0.c2, ((t0.c0)/(t0.c0))) WHERE (((t0.c2)=(CASE WHEN rt1.c2 THEN t0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2)=(CASE WHEN rt1.c2 THEN t0.c2 END))) IS TRUE)  as count FROM t0, rt1 LEFT OUTER JOIN vt0 ON DATE((t0.c2 IN ()), t0.c2, ((t0.c0)/(t0.c0))));
SELECT * FROM t0, rt1 LEFT OUTER JOIN vt0 ON DATE((t0.c2 IN ()), t0.c2, ((t0.c0)/(t0.c0))) WHERE (((t0.c2)=(CASE WHEN rt1.c2 THEN t0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2)=(CASE WHEN rt1.c2 THEN t0.c2 END))) IS TRUE)  as count FROM t0, rt1 LEFT OUTER JOIN vt0 ON DATE((t0.c2 IN ()), t0.c2, ((t0.c0)/(t0.c0))));
SELECT * FROM t0, rt1 LEFT OUTER JOIN vt0 ON DATE((t0.c2 IN ()), t0.c2, ((t0.c0)/(t0.c0))) WHERE (((t0.c2)=(CASE WHEN rt1.c2 THEN t0.c2 END)));
SELECT COUNT(*) FROM rt1, vt0, t0 WHERE (((COALESCE(vt0.c0, rt1.c2))/((- (rt1.c0))))) ORDER BY CASE WHEN ((x'')<(vt0.c0)) THEN CASE WHEN t0.c2 THEN rt1.c2 WHEN t0.c2 THEN vt0.c0 WHEN rt1.c0 THEN t0.c1 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((COALESCE(vt0.c0, rt1.c2))/((- (rt1.c0))))) IS TRUE)  as count FROM rt1, vt0, t0 ORDER BY CASE WHEN ((x'')<(vt0.c0)) THEN CASE WHEN t0.c2 THEN rt1.c2 WHEN t0.c2 THEN vt0.c0 WHEN rt1.c0 THEN t0.c1 END END  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0, t0 WHERE (((COALESCE(vt0.c0, rt1.c2))/((- (rt1.c0))))) ORDER BY CASE WHEN ((x'')<(vt0.c0)) THEN CASE WHEN t0.c2 THEN rt1.c2 WHEN t0.c2 THEN vt0.c0 WHEN rt1.c0 THEN t0.c1 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((COALESCE(vt0.c0, rt1.c2))/((- (rt1.c0))))) IS TRUE)  as count FROM rt1, vt0, t0 ORDER BY CASE WHEN ((x'')<(vt0.c0)) THEN CASE WHEN t0.c2 THEN rt1.c2 WHEN t0.c2 THEN vt0.c0 WHEN rt1.c0 THEN t0.c1 END END  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0, t0 WHERE (((COALESCE(vt0.c0, rt1.c2))/((- (rt1.c0))))) ORDER BY CASE WHEN ((x'')<(vt0.c0)) THEN CASE WHEN t0.c2 THEN rt1.c2 WHEN t0.c2 THEN vt0.c0 WHEN rt1.c0 THEN t0.c1 END END  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, t0 LEFT OUTER JOIN vt0 ON (rt1.c1 COLLATE NOCASE IN ()) WHERE ((((NOT (t0.c1)))>>(NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c1)))>>(NULL))) IS TRUE)  as count FROM rt1, t0 LEFT OUTER JOIN vt0 ON (rt1.c1 COLLATE NOCASE IN ()));
SELECT ALL COUNT(*) FROM rt1, t0 LEFT OUTER JOIN vt0 ON (rt1.c1 COLLATE NOCASE IN ()) WHERE ((((NOT (t0.c1)))>>(NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c1)))>>(NULL))) IS TRUE)  as count FROM rt1, t0 LEFT OUTER JOIN vt0 ON (rt1.c1 COLLATE NOCASE IN ()));
SELECT ALL COUNT(*) FROM rt1, t0 LEFT OUTER JOIN vt0 ON (rt1.c1 COLLATE NOCASE IN ()) WHERE ((((NOT (t0.c1)))>>(NULL)));
SELECT * FROM vt0 NOT INDEXED WHERE ('-1775826962') ORDER BY UPPER((((((((('Y뗺\r2ᴟY')OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) DESC, ((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(-1012832972)))OR(x'b0d9')))OR(vt0.c0)))*(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-1775826962') IS TRUE)  as count FROM vt0 ORDER BY UPPER((((((((('Y뗺\r2ᴟY')OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) DESC, ((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(-1012832972)))OR(x'b0d9')))OR(vt0.c0)))*(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt0 NOT INDEXED WHERE ('-1775826962') ORDER BY UPPER((((((((('Y뗺\r2ᴟY')OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) DESC, ((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(-1012832972)))OR(x'b0d9')))OR(vt0.c0)))*(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-1775826962') IS TRUE)  as count FROM vt0 ORDER BY UPPER((((((((('Y뗺\r2ᴟY')OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) DESC, ((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(-1012832972)))OR(x'b0d9')))OR(vt0.c0)))*(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt0 NOT INDEXED WHERE ('-1775826962') ORDER BY UPPER((((((((('Y뗺\r2ᴟY')OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) DESC, ((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(-1012832972)))OR(x'b0d9')))OR(vt0.c0)))*(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN t0 ON ((((((rt1.c1)AND(t0.c1)))OR(t0.c1))) IS TRUE) WHERE ((((rt1.c1)) BETWEEN ((t0.c0 COLLATE RTRIM)) AND ((((((((((t0.c1)AND(t0.c2)))OR(rt1.c2)))AND(t0.c1)))AND(rt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) BETWEEN ((t0.c0 COLLATE RTRIM)) AND ((((((((((t0.c1)AND(t0.c2)))OR(rt1.c2)))AND(t0.c1)))AND(rt1.c0)))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN t0 ON ((((((rt1.c1)AND(t0.c1)))OR(t0.c1))) IS TRUE));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN t0 ON ((((((rt1.c1)AND(t0.c1)))OR(t0.c1))) IS TRUE) WHERE ((((rt1.c1)) BETWEEN ((t0.c0 COLLATE RTRIM)) AND ((((((((((t0.c1)AND(t0.c2)))OR(rt1.c2)))AND(t0.c1)))AND(rt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) BETWEEN ((t0.c0 COLLATE RTRIM)) AND ((((((((((t0.c1)AND(t0.c2)))OR(rt1.c2)))AND(t0.c1)))AND(rt1.c0)))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN t0 ON ((((((rt1.c1)AND(t0.c1)))OR(t0.c1))) IS TRUE));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN t0 ON ((((((rt1.c1)AND(t0.c1)))OR(t0.c1))) IS TRUE) WHERE ((((rt1.c1)) BETWEEN ((t0.c0 COLLATE RTRIM)) AND ((((((((((t0.c1)AND(t0.c2)))OR(rt1.c2)))AND(t0.c1)))AND(rt1.c0))))));
SELECT * FROM rt1, vt0 WHERE (((~ (vt0.c0)) IN ())) ORDER BY rt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((~ (vt0.c0)) IN ())) IS TRUE)  as count FROM rt1, vt0 ORDER BY rt1.c0  NULLS FIRST);
SELECT * FROM rt1, vt0 WHERE (((~ (vt0.c0)) IN ())) ORDER BY rt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((~ (vt0.c0)) IN ())) IS TRUE)  as count FROM rt1, vt0 ORDER BY rt1.c0  NULLS FIRST);
SELECT * FROM rt1, vt0 WHERE (((~ (vt0.c0)) IN ())) ORDER BY rt1.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (((((((t0.c0)AND(vt0.c0)))AND((+ (t0.c1)))))AND(((t0.c2)OR(t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND(vt0.c0)))AND((+ (t0.c1)))))AND(((t0.c2)OR(t0.c1))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (((((((t0.c0)AND(vt0.c0)))AND((+ (t0.c1)))))AND(((t0.c2)OR(t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND(vt0.c0)))AND((+ (t0.c1)))))AND(((t0.c2)OR(t0.c1))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (((((((t0.c0)AND(vt0.c0)))AND((+ (t0.c1)))))AND(((t0.c2)OR(t0.c1)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE WHEN ((t0.c1)<=(vt0.c0)) THEN ((((t0.c1)OR(vt0.c0)))OR(t0.c0)) ELSE (+ (t0.c0)) END) ORDER BY (((((vt0.c0) IS TRUE), ((t0.c2) BETWEEN (t0.c0) AND (t0.c0)), ((t0.c1) NOT BETWEEN (NULL) AND (t0.c0)), CAST(NULL AS TEXT), (+ (t0.c0)), ((x'a04b') ISNULL), ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2))))>=((CAST(vt0.c0 AS REAL), ((((((((t0.c1)OR(t0.c0)))OR(t0.c1)))AND(t0.c2)))AND(t0.c0)), CAST(vt0.c0 AS NUMERIC), '<|w4S2y%I', ((t0.c2) NOT NULL), (vt0.c0 IN ()), CASE WHEN t0.c2 THEN t0.c1 END)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c1)<=(vt0.c0)) THEN ((((t0.c1)OR(vt0.c0)))OR(t0.c0)) ELSE (+ (t0.c0)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((vt0.c0) IS TRUE), ((t0.c2) BETWEEN (t0.c0) AND (t0.c0)), ((t0.c1) NOT BETWEEN (NULL) AND (t0.c0)), CAST(NULL AS TEXT), (+ (t0.c0)), ((x'a04b') ISNULL), ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2))))>=((CAST(vt0.c0 AS REAL), ((((((((t0.c1)OR(t0.c0)))OR(t0.c1)))AND(t0.c2)))AND(t0.c0)), CAST(vt0.c0 AS NUMERIC), '<|w4S2y%I', ((t0.c2) NOT NULL), (vt0.c0 IN ()), CASE WHEN t0.c2 THEN t0.c1 END))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE WHEN ((t0.c1)<=(vt0.c0)) THEN ((((t0.c1)OR(vt0.c0)))OR(t0.c0)) ELSE (+ (t0.c0)) END) ORDER BY (((((vt0.c0) IS TRUE), ((t0.c2) BETWEEN (t0.c0) AND (t0.c0)), ((t0.c1) NOT BETWEEN (NULL) AND (t0.c0)), CAST(NULL AS TEXT), (+ (t0.c0)), ((x'a04b') ISNULL), ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2))))>=((CAST(vt0.c0 AS REAL), ((((((((t0.c1)OR(t0.c0)))OR(t0.c1)))AND(t0.c2)))AND(t0.c0)), CAST(vt0.c0 AS NUMERIC), '<|w4S2y%I', ((t0.c2) NOT NULL), (vt0.c0 IN ()), CASE WHEN t0.c2 THEN t0.c1 END)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c1)<=(vt0.c0)) THEN ((((t0.c1)OR(vt0.c0)))OR(t0.c0)) ELSE (+ (t0.c0)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((vt0.c0) IS TRUE), ((t0.c2) BETWEEN (t0.c0) AND (t0.c0)), ((t0.c1) NOT BETWEEN (NULL) AND (t0.c0)), CAST(NULL AS TEXT), (+ (t0.c0)), ((x'a04b') ISNULL), ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2))))>=((CAST(vt0.c0 AS REAL), ((((((((t0.c1)OR(t0.c0)))OR(t0.c1)))AND(t0.c2)))AND(t0.c0)), CAST(vt0.c0 AS NUMERIC), '<|w4S2y%I', ((t0.c2) NOT NULL), (vt0.c0 IN ()), CASE WHEN t0.c2 THEN t0.c1 END))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE WHEN ((t0.c1)<=(vt0.c0)) THEN ((((t0.c1)OR(vt0.c0)))OR(t0.c0)) ELSE (+ (t0.c0)) END) ORDER BY (((((vt0.c0) IS TRUE), ((t0.c2) BETWEEN (t0.c0) AND (t0.c0)), ((t0.c1) NOT BETWEEN (NULL) AND (t0.c0)), CAST(NULL AS TEXT), (+ (t0.c0)), ((x'a04b') ISNULL), ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2))))>=((CAST(vt0.c0 AS REAL), ((((((((t0.c1)OR(t0.c0)))OR(t0.c1)))AND(t0.c2)))AND(t0.c0)), CAST(vt0.c0 AS NUMERIC), '<|w4S2y%I', ((t0.c2) NOT NULL), (vt0.c0 IN ()), CASE WHEN t0.c2 THEN t0.c1 END)));
SELECT COUNT(*) FROM vt0, rt1 WHERE ((CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END IN ())) ORDER BY CASE (rt1.c2 IN (rt1.c1, rt1.c2))  WHEN (rt1.c0 IN (rt1.c0, vt0.c0)) THEN (~ (x'')) ELSE CASE rt1.c2  WHEN x'8d00' THEN vt0.c0 WHEN 0.9615469947781428 THEN x'' WHEN rt1.c0 THEN rt1.c2 END END ASC;
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END IN ())) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE (rt1.c2 IN (rt1.c1, rt1.c2))  WHEN (rt1.c0 IN (rt1.c0, vt0.c0)) THEN (~ (x'')) ELSE CASE rt1.c2  WHEN x'8d00' THEN vt0.c0 WHEN 0.9615469947781428 THEN x'' WHEN rt1.c0 THEN rt1.c2 END END ASC);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END IN ())) ORDER BY CASE (rt1.c2 IN (rt1.c1, rt1.c2))  WHEN (rt1.c0 IN (rt1.c0, vt0.c0)) THEN (~ (x'')) ELSE CASE rt1.c2  WHEN x'8d00' THEN vt0.c0 WHEN 0.9615469947781428 THEN x'' WHEN rt1.c0 THEN rt1.c2 END END ASC;
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END IN ())) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE (rt1.c2 IN (rt1.c1, rt1.c2))  WHEN (rt1.c0 IN (rt1.c0, vt0.c0)) THEN (~ (x'')) ELSE CASE rt1.c2  WHEN x'8d00' THEN vt0.c0 WHEN 0.9615469947781428 THEN x'' WHEN rt1.c0 THEN rt1.c2 END END ASC);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END IN ())) ORDER BY CASE (rt1.c2 IN (rt1.c1, rt1.c2))  WHEN (rt1.c0 IN (rt1.c0, vt0.c0)) THEN (~ (x'')) ELSE CASE rt1.c2  WHEN x'8d00' THEN vt0.c0 WHEN 0.9615469947781428 THEN x'' WHEN rt1.c0 THEN rt1.c2 END END ASC;
SELECT * FROM rt1 WHERE ((((- (rt1.c2)))<(rt1.c0)));
SELECT SUM(count) FROM (SELECT (((((- (rt1.c2)))<(rt1.c0))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((- (rt1.c2)))<(rt1.c0)));
SELECT SUM(count) FROM (SELECT (((((- (rt1.c2)))<(rt1.c0))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((- (rt1.c2)))<(rt1.c0)));
SELECT ALL COUNT(*) FROM t0, rt1, vt0 WHERE (((CASE WHEN t0.c0 THEN rt1.c1 END)<>(((rt1.c1)IS(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN rt1.c1 END)!=(((rt1.c1)IS(rt1.c2))))) IS TRUE)  as count FROM t0, rt1, vt0);
SELECT ALL COUNT(*) FROM t0, rt1, vt0 WHERE (((CASE WHEN t0.c0 THEN rt1.c1 END)<>(((rt1.c1)IS(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN rt1.c1 END)!=(((rt1.c1)IS(rt1.c2))))) IS TRUE)  as count FROM t0, rt1, vt0);
SELECT ALL COUNT(*) FROM t0, rt1, vt0 WHERE (((CASE WHEN t0.c0 THEN rt1.c1 END)<>(((rt1.c1)IS(rt1.c2)))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0)))*(((vt0.c0)>>(vt0.c0))))) ORDER BY (NOT (x'')) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>>(vt0.c0)))*(((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (x'')) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0)))*(((vt0.c0)>>(vt0.c0))))) ORDER BY (NOT (x'')) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>>(vt0.c0)))*(((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (x'')) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0)))*(((vt0.c0)>>(vt0.c0))))) ORDER BY (NOT (x'')) DESC;
SELECT ALL * FROM vt0 WHERE (CAST((~ (vt0.c0)) AS REAL)) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST((~ (vt0.c0)) AS REAL)) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST((~ (vt0.c0)) AS REAL)) ORDER BY vt0.c0  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt1, vt0, t0 WHERE ((((t0.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c2))) COLLATE RTRIM) ORDER BY (+ (CASE WHEN 0xffffffffba86d4e9 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c2))) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0, t0 ORDER BY (+ (CASE WHEN 0Xffffffffba86d4e9 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0, t0 WHERE ((((t0.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c2))) COLLATE RTRIM) ORDER BY (+ (CASE WHEN 0xffffffffba86d4e9 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c2))) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0, t0 ORDER BY (+ (CASE WHEN 0Xffffffffba86d4e9 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0, t0 WHERE ((((t0.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c2))) COLLATE RTRIM) ORDER BY (+ (CASE WHEN 0xffffffffba86d4e9 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 END))  NULLS FIRST;
SELECT * FROM vt0 WHERE (CASE (((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0)))  WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0) NOTNULL) WHEN CAST(vt0.c0 AS TEXT) THEN vt0.c0 COLLATE BINARY WHEN ((vt0.c0)<=(vt0.c0)) THEN ((vt0.c0)|(vt0.c0)) ELSE ((vt0.c0)-(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0)))  WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0) NOTNULL) WHEN CAST(vt0.c0 AS TEXT) THEN vt0.c0 COLLATE BINARY WHEN ((vt0.c0)<=(vt0.c0)) THEN ((vt0.c0)|(vt0.c0)) ELSE ((vt0.c0)-(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE (((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0)))  WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0) NOTNULL) WHEN CAST(vt0.c0 AS TEXT) THEN vt0.c0 COLLATE BINARY WHEN ((vt0.c0)<=(vt0.c0)) THEN ((vt0.c0)|(vt0.c0)) ELSE ((vt0.c0)-(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0)))  WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0) NOTNULL) WHEN CAST(vt0.c0 AS TEXT) THEN vt0.c0 COLLATE BINARY WHEN ((vt0.c0)<=(vt0.c0)) THEN ((vt0.c0)|(vt0.c0)) ELSE ((vt0.c0)-(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE (((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0)))  WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0) NOTNULL) WHEN CAST(vt0.c0 AS TEXT) THEN vt0.c0 COLLATE BINARY WHEN ((vt0.c0)<=(vt0.c0)) THEN ((vt0.c0)|(vt0.c0)) ELSE ((vt0.c0)-(vt0.c0)) END);
SELECT * FROM vt0, t0, rt1 WHERE (CASE t0.c2  WHEN (vt0.c0 IN ()) THEN NULL END) ORDER BY json_type((+ (rt1.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c2  WHEN (vt0.c0 IN ()) THEN NULL END) IS TRUE)  as count FROM vt0, t0, rt1 ORDER BY json_type((+ (rt1.c1))) DESC);
SELECT * FROM vt0, t0, rt1 WHERE (CASE t0.c2  WHEN (vt0.c0 IN ()) THEN NULL END) ORDER BY json_type((+ (rt1.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c2  WHEN (vt0.c0 IN ()) THEN NULL END) IS TRUE)  as count FROM vt0, t0, rt1 ORDER BY json_type((+ (rt1.c1))) DESC);
SELECT * FROM vt0, t0, rt1 WHERE (CASE t0.c2  WHEN (vt0.c0 IN ()) THEN NULL END) ORDER BY json_type((+ (rt1.c1))) DESC;
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON (~ ((rt1.c2 IN ()))) WHERE (CASE WHEN CASE WHEN rt1.c2 THEN rt1.c2 END THEN ((rt1.c0)*(rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN rt1.c2 THEN rt1.c2 END THEN ((rt1.c0)*(rt1.c1)) END) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON (~ ((rt1.c2 IN ()))));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON (~ ((rt1.c2 IN ()))) WHERE (CASE WHEN CASE WHEN rt1.c2 THEN rt1.c2 END THEN ((rt1.c0)*(rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN rt1.c2 THEN rt1.c2 END THEN ((rt1.c0)*(rt1.c1)) END) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON (~ ((rt1.c2 IN ()))));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON (~ ((rt1.c2 IN ()))) WHERE (CASE WHEN CASE WHEN rt1.c2 THEN rt1.c2 END THEN ((rt1.c0)*(rt1.c1)) END);
SELECT * FROM vt0, rt1, t0 WHERE (((CAST(rt1.c2 AS TEXT))>=((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((0.8961592270287805))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS TEXT))>=((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((0.8961592270287805)))))) IS TRUE)  as count FROM vt0, rt1, t0);
SELECT * FROM vt0, rt1, t0 WHERE (((CAST(rt1.c2 AS TEXT))>=((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((0.8961592270287805))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS TEXT))>=((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((0.8961592270287805)))))) IS TRUE)  as count FROM vt0, rt1, t0);
SELECT * FROM vt0, rt1, t0 WHERE (((CAST(rt1.c2 AS TEXT))>=((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((0.8961592270287805))))));
SELECT ALL COUNT(*) FROM vt0, t0, rt1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, t0, rt1);
SELECT ALL COUNT(*) FROM vt0, t0, rt1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, t0, rt1);
SELECT ALL COUNT(*) FROM vt0, t0, rt1 WHERE ('');
SELECT * FROM t0, vt0, rt1 WHERE ((CAST(vt0.c0 AS TEXT) IN (((t0.c1)IS NOT(t0.c2)))));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS TEXT) IN (((t0.c1)IS NOT(t0.c2))))) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT * FROM t0, vt0, rt1 WHERE ((CAST(vt0.c0 AS TEXT) IN (((t0.c1)IS NOT(t0.c2)))));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS TEXT) IN (((t0.c1)IS NOT(t0.c2))))) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT * FROM t0, vt0, rt1 WHERE ((CAST(vt0.c0 AS TEXT) IN (((t0.c1)IS NOT(t0.c2)))));
SELECT * FROM rt1, vt0 WHERE (0X713eb2b9 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((0x713eb2b9 COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (0X713eb2b9 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((0x713eb2b9 COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (0X713eb2b9 COLLATE RTRIM);
SELECT ALL * FROM t0, rt1 WHERE (((NULL) NOT BETWEEN (((t0.c2)-(rt1.c2))) AND ((rt1.c2 IN ())))) ORDER BY ((((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN t0.c1 WHEN t0.c2 THEN rt1.c1 END)OR(((t0.c0) IS FALSE))))OR(((t0.c2) BETWEEN (t0.c1) AND (rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN (((t0.c2)-(rt1.c2))) AND ((rt1.c2 IN ())))) IS TRUE)  as count FROM t0, rt1 ORDER BY ((((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN t0.c1 WHEN t0.c2 THEN rt1.c1 END)OR(((t0.c0) IS FALSE))))OR(((t0.c2) BETWEEN (t0.c1) AND (rt1.c2))))  NULLS FIRST);
SELECT ALL * FROM t0, rt1 WHERE (((NULL) NOT BETWEEN (((t0.c2)-(rt1.c2))) AND ((rt1.c2 IN ())))) ORDER BY ((((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN t0.c1 WHEN t0.c2 THEN rt1.c1 END)OR(((t0.c0) IS FALSE))))OR(((t0.c2) BETWEEN (t0.c1) AND (rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN (((t0.c2)-(rt1.c2))) AND ((rt1.c2 IN ())))) IS TRUE)  as count FROM t0, rt1 ORDER BY ((((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN t0.c1 WHEN t0.c2 THEN rt1.c1 END)OR(((t0.c0) IS FALSE))))OR(((t0.c2) BETWEEN (t0.c1) AND (rt1.c2))))  NULLS FIRST);
SELECT ALL * FROM t0, rt1 WHERE (((NULL) NOT BETWEEN (((t0.c2)-(rt1.c2))) AND ((rt1.c2 IN ())))) ORDER BY ((((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN t0.c1 WHEN t0.c2 THEN rt1.c1 END)OR(((t0.c0) IS FALSE))))OR(((t0.c2) BETWEEN (t0.c1) AND (rt1.c2))))  NULLS FIRST;
SELECT * FROM vt0, t0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 END)IS NOT((NOT (t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 END)IS NOT((NOT (t0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 END)IS NOT((NOT (t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 END)IS NOT((NOT (t0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 END)IS NOT((NOT (t0.c1)))));
SELECT ALL COUNT(*) FROM t0, rt1, vt0 WHERE (0.5450925694312615) ORDER BY (((rt1.c1)<>(rt1.c1)) IN (NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.5450925694312615) IS TRUE)  as count FROM t0, rt1, vt0 ORDER BY (((rt1.c1)<>(rt1.c1)) IN (NULL))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt1, vt0 WHERE (0.5450925694312615) ORDER BY (((rt1.c1)<>(rt1.c1)) IN (NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.5450925694312615) IS TRUE)  as count FROM t0, rt1, vt0 ORDER BY (((rt1.c1)<>(rt1.c1)) IN (NULL))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt1, vt0 WHERE (0.5450925694312615) ORDER BY (((rt1.c1)<>(rt1.c1)) IN (NULL))  NULLS FIRST;
SELECT * FROM vt0 WHERE (CAST((((vt0.c0))<=((vt0.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0))<=((vt0.c0))) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((((vt0.c0))<=((vt0.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0))<=((vt0.c0))) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((((vt0.c0))<=((vt0.c0))) AS BLOB));
SELECT ALL COUNT(*) FROM vt0 WHERE (json_type((- (vt0.c0)))) ORDER BY CASE WHEN vt0.c0 THEN (- (vt0.c0)) WHEN LIKELIHOOD(vt0.c0, 0.14054538893202984) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((((x'')OR(vt0.c0)))AND(vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE ((vt0.c0) NOT NULL) END, ((((vt0.c0) IS FALSE))|((((NULL, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((json_type((- (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 THEN (- (vt0.c0)) WHEN LIKELIHOOD(vt0.c0, 0.14054538893202984) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((((x'')OR(vt0.c0)))AND(vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE ((vt0.c0) NOT NULL) END, ((((vt0.c0) IS FALSE))|((((NULL, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (json_type((- (vt0.c0)))) ORDER BY CASE WHEN vt0.c0 THEN (- (vt0.c0)) WHEN LIKELIHOOD(vt0.c0, 0.14054538893202984) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((((x'')OR(vt0.c0)))AND(vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE ((vt0.c0) NOT NULL) END, ((((vt0.c0) IS FALSE))|((((NULL, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((json_type((- (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 THEN (- (vt0.c0)) WHEN LIKELIHOOD(vt0.c0, 0.14054538893202984) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((((x'')OR(vt0.c0)))AND(vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE ((vt0.c0) NOT NULL) END, ((((vt0.c0) IS FALSE))|((((NULL, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (json_type((- (vt0.c0)))) ORDER BY CASE WHEN vt0.c0 THEN (- (vt0.c0)) WHEN LIKELIHOOD(vt0.c0, 0.14054538893202984) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((((x'')OR(vt0.c0)))AND(vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE ((vt0.c0) NOT NULL) END, ((((vt0.c0) IS FALSE))|((((NULL, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))));
SELECT ALL * FROM rt1 WHERE ('') ORDER BY ((((rt1.c0)OR(rt1.c1)))OR('\)l''eR3k*')) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0)OR(rt1.c1)))OR('\)l''eR3k*')) COLLATE NOCASE DESC);
SELECT ALL * FROM rt1 WHERE ('') ORDER BY ((((rt1.c0)OR(rt1.c1)))OR('\)l''eR3k*')) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0)OR(rt1.c1)))OR('\)l''eR3k*')) COLLATE NOCASE DESC);
SELECT ALL * FROM rt1 WHERE ('') ORDER BY ((((rt1.c0)OR(rt1.c1)))OR('\)l''eR3k*')) COLLATE NOCASE DESC;
SELECT COUNT(*) FROM vt0 WHERE ((((((((((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))))AND((+ (vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(x'')))))OR((- (vt0.c0))))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))))AND((+ (vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(x'')))))OR((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY x'');
SELECT COUNT(*) FROM vt0 WHERE ((((((((((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))))AND((+ (vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(x'')))))OR((- (vt0.c0))))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))))AND((+ (vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(x'')))))OR((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY x'');
SELECT COUNT(*) FROM vt0 WHERE ((((((((((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))))AND((+ (vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(x'')))))OR((- (vt0.c0))))) ORDER BY x'';
SELECT * FROM rt1, vt0 FULL OUTER JOIN t0 ON (((t0.c2 IN ())) IS FALSE) WHERE (0.7283556013247596) ORDER BY CAST(((rt1.c1) BETWEEN (NULL) AND (rt1.c1)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((0.7283556013247596) IS TRUE)  as count FROM rt1, vt0 FULL OUTER JOIN t0 ON (((t0.c2 IN ())) IS FALSE) ORDER BY CAST(((rt1.c1) BETWEEN (NULL) AND (rt1.c1)) AS NUMERIC));
SELECT * FROM rt1, vt0 FULL OUTER JOIN t0 ON (((t0.c2 IN ())) IS FALSE) WHERE (0.7283556013247596) ORDER BY CAST(((rt1.c1) BETWEEN (NULL) AND (rt1.c1)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((0.7283556013247596) IS TRUE)  as count FROM rt1, vt0 FULL OUTER JOIN t0 ON (((t0.c2 IN ())) IS FALSE) ORDER BY CAST(((rt1.c1) BETWEEN (NULL) AND (rt1.c1)) AS NUMERIC));
SELECT * FROM rt1, vt0 FULL OUTER JOIN t0 ON (((t0.c2 IN ())) IS FALSE) WHERE (0.7283556013247596) ORDER BY CAST(((rt1.c1) BETWEEN (NULL) AND (rt1.c1)) AS NUMERIC);
SELECT * FROM t0, vt0 CROSS JOIN rt1 ON ((((t0.c0) NOTNULL)) NOT BETWEEN ((vt0.c0 IN ())) AND (rt1.c0)) WHERE (((SQLITE_COMPILEOPTION_USED(rt1.c1)) NOTNULL)) ORDER BY ((((rt1.c1) NOT NULL)) IS TRUE), (((t0.c0, t0.c1, t0.c0)) BETWEEN ((vt0.c0, (~ (t0.c0)), vt0.c0 COLLATE BINARY)) AND ((((((((((t0.c1)OR(t0.c0)))AND(rt1.c2)))OR(vt0.c0)))OR(t0.c0)), ((1.239695574E9) IS FALSE), ((vt0.c0)>>(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_COMPILEOPTION_USED(rt1.c1)) NOTNULL)) IS TRUE)  as count FROM t0, vt0 CROSS JOIN rt1 ON ((((t0.c0) NOTNULL)) NOT BETWEEN ((vt0.c0 IN ())) AND (rt1.c0)) ORDER BY ((((rt1.c1) NOT NULL)) IS TRUE), (((t0.c0, t0.c1, t0.c0)) BETWEEN ((vt0.c0, (~ (t0.c0)), vt0.c0 COLLATE BINARY)) AND ((((((((((t0.c1)OR(t0.c0)))AND(rt1.c2)))OR(vt0.c0)))OR(t0.c0)), ((1.239695574E9) IS FALSE), ((vt0.c0)>>(rt1.c2))))));
SELECT * FROM t0, vt0 CROSS JOIN rt1 ON ((((t0.c0) NOTNULL)) NOT BETWEEN ((vt0.c0 IN ())) AND (rt1.c0)) WHERE (((SQLITE_COMPILEOPTION_USED(rt1.c1)) NOTNULL)) ORDER BY ((((rt1.c1) NOT NULL)) IS TRUE), (((t0.c0, t0.c1, t0.c0)) BETWEEN ((vt0.c0, (~ (t0.c0)), vt0.c0 COLLATE BINARY)) AND ((((((((((t0.c1)OR(t0.c0)))AND(rt1.c2)))OR(vt0.c0)))OR(t0.c0)), ((1.239695574E9) IS FALSE), ((vt0.c0)>>(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_COMPILEOPTION_USED(rt1.c1)) NOTNULL)) IS TRUE)  as count FROM t0, vt0 CROSS JOIN rt1 ON ((((t0.c0) NOTNULL)) NOT BETWEEN ((vt0.c0 IN ())) AND (rt1.c0)) ORDER BY ((((rt1.c1) NOT NULL)) IS TRUE), (((t0.c0, t0.c1, t0.c0)) BETWEEN ((vt0.c0, (~ (t0.c0)), vt0.c0 COLLATE BINARY)) AND ((((((((((t0.c1)OR(t0.c0)))AND(rt1.c2)))OR(vt0.c0)))OR(t0.c0)), ((1.239695574E9) IS FALSE), ((vt0.c0)>>(rt1.c2))))));
SELECT * FROM t0, vt0 CROSS JOIN rt1 ON ((((t0.c0) NOTNULL)) NOT BETWEEN ((vt0.c0 IN ())) AND (rt1.c0)) WHERE (((SQLITE_COMPILEOPTION_USED(rt1.c1)) NOTNULL)) ORDER BY ((((rt1.c1) NOT NULL)) IS TRUE), (((t0.c0, t0.c1, t0.c0)) BETWEEN ((vt0.c0, (~ (t0.c0)), vt0.c0 COLLATE BINARY)) AND ((((((((((t0.c1)OR(t0.c0)))AND(rt1.c2)))OR(vt0.c0)))OR(t0.c0)), ((1.239695574E9) IS FALSE), ((vt0.c0)>>(rt1.c2)))));
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON ((rt1.c0 COLLATE RTRIM) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (rt1.c0)) LEFT OUTER JOIN t0 ON ((((t0.c1)IS(rt1.c2))) IS TRUE) WHERE ((((t0.c1)) BETWEEN ((0x5890c787)) AND ((((t0.c0)-(rt1.c1)))))) ORDER BY CASE WHEN ((rt1.c2)AND(rt1.c2)) THEN (((t0.c1))<=((rt1.c2))) WHEN LENGTH(t0.c1) THEN ((t0.c1)>(vt0.c0)) WHEN '1103969081' COLLATE RTRIM THEN CASE vt0.c0  WHEN t0.c0 THEN rt1.c1 ELSE NULL END END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)) BETWEEN ((0X5890c787)) AND ((((t0.c0)-(rt1.c1)))))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ((rt1.c0 COLLATE RTRIM) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (rt1.c0)) LEFT OUTER JOIN t0 ON ((((t0.c1)IS(rt1.c2))) IS TRUE) ORDER BY CASE WHEN ((rt1.c2)AND(rt1.c2)) THEN (((t0.c1))<=((rt1.c2))) WHEN LENGTH(t0.c1) THEN ((t0.c1)>(vt0.c0)) WHEN '1103969081' COLLATE RTRIM THEN CASE vt0.c0  WHEN t0.c0 THEN rt1.c1 ELSE NULL END END ASC);
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON ((rt1.c0 COLLATE RTRIM) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (rt1.c0)) LEFT OUTER JOIN t0 ON ((((t0.c1)IS(rt1.c2))) IS TRUE) WHERE ((((t0.c1)) BETWEEN ((0x5890c787)) AND ((((t0.c0)-(rt1.c1)))))) ORDER BY CASE WHEN ((rt1.c2)AND(rt1.c2)) THEN (((t0.c1))<=((rt1.c2))) WHEN LENGTH(t0.c1) THEN ((t0.c1)>(vt0.c0)) WHEN '1103969081' COLLATE RTRIM THEN CASE vt0.c0  WHEN t0.c0 THEN rt1.c1 ELSE NULL END END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)) BETWEEN ((0X5890c787)) AND ((((t0.c0)-(rt1.c1)))))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ((rt1.c0 COLLATE RTRIM) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (rt1.c0)) LEFT OUTER JOIN t0 ON ((((t0.c1)IS(rt1.c2))) IS TRUE) ORDER BY CASE WHEN ((rt1.c2)AND(rt1.c2)) THEN (((t0.c1))<=((rt1.c2))) WHEN LENGTH(t0.c1) THEN ((t0.c1)>(vt0.c0)) WHEN '1103969081' COLLATE RTRIM THEN CASE vt0.c0  WHEN t0.c0 THEN rt1.c1 ELSE NULL END END ASC);
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON ((rt1.c0 COLLATE RTRIM) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (rt1.c0)) LEFT OUTER JOIN t0 ON ((((t0.c1)IS(rt1.c2))) IS TRUE) WHERE ((((t0.c1)) BETWEEN ((0x5890c787)) AND ((((t0.c0)-(rt1.c1)))))) ORDER BY CASE WHEN ((rt1.c2)AND(rt1.c2)) THEN (((t0.c1))<=((rt1.c2))) WHEN LENGTH(t0.c1) THEN ((t0.c1)>(vt0.c0)) WHEN '1103969081' COLLATE RTRIM THEN CASE vt0.c0  WHEN t0.c0 THEN rt1.c1 ELSE NULL END END ASC;
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON '' WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON '');
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON '' WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON '');
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON '' WHERE (t0.c2);
SELECT COUNT(*) FROM rt1, vt0, t0 WHERE ((((rt1.c0, t0.c1, t0.c0)) BETWEEN ((CASE WHEN t0.c2 THEN rt1.c1 WHEN t0.c1 THEN vt0.c0 WHEN t0.c2 THEN t0.c1 ELSE rt1.c2 END, CASE t0.c1  WHEN x'' THEN t0.c0 WHEN 0.6093200944183979 THEN rt1.c2 WHEN t0.c1 THEN rt1.c2 ELSE rt1.c1 END, ((((((((((((t0.c2)OR(vt0.c0)))AND(t0.c1)))OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c1)))) AND ((((t0.c1)||(1899934393)), (((t0.c0))>=((vt0.c0))), ((rt1.c1) IS FALSE)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0, t0.c1, t0.c0)) BETWEEN ((CASE WHEN t0.c2 THEN rt1.c1 WHEN t0.c1 THEN vt0.c0 WHEN t0.c2 THEN t0.c1 ELSE rt1.c2 END, CASE t0.c1  WHEN x'' THEN t0.c0 WHEN 0.6093200944183979 THEN rt1.c2 WHEN t0.c1 THEN rt1.c2 ELSE rt1.c1 END, ((((((((((((t0.c2)OR(vt0.c0)))AND(t0.c1)))OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c1)))) AND ((((t0.c1)||(1899934393)), (((t0.c0))>=((vt0.c0))), ((rt1.c1) IS FALSE))))) IS TRUE)  as count FROM rt1, vt0, t0);
SELECT COUNT(*) FROM rt1, vt0, t0 WHERE ((((rt1.c0, t0.c1, t0.c0)) BETWEEN ((CASE WHEN t0.c2 THEN rt1.c1 WHEN t0.c1 THEN vt0.c0 WHEN t0.c2 THEN t0.c1 ELSE rt1.c2 END, CASE t0.c1  WHEN x'' THEN t0.c0 WHEN 0.6093200944183979 THEN rt1.c2 WHEN t0.c1 THEN rt1.c2 ELSE rt1.c1 END, ((((((((((((t0.c2)OR(vt0.c0)))AND(t0.c1)))OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c1)))) AND ((((t0.c1)||(1899934393)), (((t0.c0))>=((vt0.c0))), ((rt1.c1) IS FALSE)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0, t0.c1, t0.c0)) BETWEEN ((CASE WHEN t0.c2 THEN rt1.c1 WHEN t0.c1 THEN vt0.c0 WHEN t0.c2 THEN t0.c1 ELSE rt1.c2 END, CASE t0.c1  WHEN x'' THEN t0.c0 WHEN 0.6093200944183979 THEN rt1.c2 WHEN t0.c1 THEN rt1.c2 ELSE rt1.c1 END, ((((((((((((t0.c2)OR(vt0.c0)))AND(t0.c1)))OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c1)))) AND ((((t0.c1)||(1899934393)), (((t0.c0))>=((vt0.c0))), ((rt1.c1) IS FALSE))))) IS TRUE)  as count FROM rt1, vt0, t0);
SELECT COUNT(*) FROM rt1, vt0, t0 WHERE ((((rt1.c0, t0.c1, t0.c0)) BETWEEN ((CASE WHEN t0.c2 THEN rt1.c1 WHEN t0.c1 THEN vt0.c0 WHEN t0.c2 THEN t0.c1 ELSE rt1.c2 END, CASE t0.c1  WHEN x'' THEN t0.c0 WHEN 0.6093200944183979 THEN rt1.c2 WHEN t0.c1 THEN rt1.c2 ELSE rt1.c1 END, ((((((((((((t0.c2)OR(vt0.c0)))AND(t0.c1)))OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c1)))) AND ((((t0.c1)||(1899934393)), (((t0.c0))>=((vt0.c0))), ((rt1.c1) IS FALSE)))));
SELECT ALL * FROM vt0, rt1 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c2))) BETWEEN ((rt1.c2 IN ())) AND (CAST(rt1.c2 AS INTEGER)))) ORDER BY ((((((rt1.c0)OR(rt1.c2)))AND(rt1.c2))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c2))) BETWEEN ((rt1.c2 IN ())) AND (CAST(rt1.c2 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((rt1.c0)OR(rt1.c2)))AND(rt1.c2))) IS FALSE));
SELECT ALL * FROM vt0, rt1 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c2))) BETWEEN ((rt1.c2 IN ())) AND (CAST(rt1.c2 AS INTEGER)))) ORDER BY ((((((rt1.c0)OR(rt1.c2)))AND(rt1.c2))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c2))) BETWEEN ((rt1.c2 IN ())) AND (CAST(rt1.c2 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((rt1.c0)OR(rt1.c2)))AND(rt1.c2))) IS FALSE));
SELECT ALL * FROM vt0, rt1 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c2))) BETWEEN ((rt1.c2 IN ())) AND (CAST(rt1.c2 AS INTEGER)))) ORDER BY ((((((rt1.c0)OR(rt1.c2)))AND(rt1.c2))) IS FALSE);
SELECT COUNT(*) FROM rt1, vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt1, vt0, t0);
SELECT COUNT(*) FROM rt1, vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt1, vt0, t0);
SELECT COUNT(*) FROM rt1, vt0, t0 WHERE (vt0.c0);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN t0 ON ((UPPER(DISTINCT t0.c0)) NOT BETWEEN (((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c0))) AND (((x'')>>(rt1.c2)))) INNER JOIN vt0 ON ((((rt1.c0)OR(t0.c2))) NOT NULL) WHERE (((t0.c2)+((~ (rt1.c2))))) ORDER BY ((((t0.c1)OR(((t0.c1) NOT NULL))))OR('爟'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2)+((~ (rt1.c2))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON ((UPPER(DISTINCT t0.c0)) NOT BETWEEN (((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c0))) AND (((x'')>>(rt1.c2)))) INNER JOIN vt0 ON ((((rt1.c0)OR(t0.c2))) NOT NULL) ORDER BY ((((t0.c1)OR(((t0.c1) NOT NULL))))OR('爟'))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN t0 ON ((UPPER(DISTINCT t0.c0)) NOT BETWEEN (((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c0))) AND (((x'')>>(rt1.c2)))) INNER JOIN vt0 ON ((((rt1.c0)OR(t0.c2))) NOT NULL) WHERE (((t0.c2)+((~ (rt1.c2))))) ORDER BY ((((t0.c1)OR(((t0.c1) NOT NULL))))OR('爟'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2)+((~ (rt1.c2))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON ((UPPER(DISTINCT t0.c0)) NOT BETWEEN (((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c0))) AND (((x'')>>(rt1.c2)))) INNER JOIN vt0 ON ((((rt1.c0)OR(t0.c2))) NOT NULL) ORDER BY ((((t0.c1)OR(((t0.c1) NOT NULL))))OR('爟'))  NULLS FIRST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c0 CROSS JOIN rt1 ON -250460901 WHERE (((((((t0.c2)GLOB(t0.c1)))AND(((t0.c2)<(t0.c0)))))OR(LENGTH(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2)GLOB(t0.c1)))AND(((t0.c2)<(t0.c0)))))OR(LENGTH(vt0.c0)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c0 CROSS JOIN rt1 ON -250460901);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c0 CROSS JOIN rt1 ON -250460901 WHERE (((((((t0.c2)GLOB(t0.c1)))AND(((t0.c2)<(t0.c0)))))OR(LENGTH(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2)GLOB(t0.c1)))AND(((t0.c2)<(t0.c0)))))OR(LENGTH(vt0.c0)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c0 CROSS JOIN rt1 ON -250460901);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c0 CROSS JOIN rt1 ON -250460901 WHERE (((((((t0.c2)GLOB(t0.c1)))AND(((t0.c2)<(t0.c0)))))OR(LENGTH(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL)) NOT BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL)) NOT BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL)) NOT BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL)) NOT BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL)) NOT BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (CAST(vt0.c0 AS REAL))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt1 ON (NOT (t0.c2)) WHERE (CAST(((rt1.c2)<(rt1.c0)) AS TEXT)) ORDER BY CASE WHEN CASE WHEN 0.8405345004047582 THEN t0.c0 END THEN (((t0.c2))>((t0.c0))) WHEN ((x'')||(t0.c1)) THEN (((t0.c1))>=((rt1.c0))) WHEN ((t0.c0)IS NOT(rt1.c0)) THEN (t0.c0 IN ()) END ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2)<(rt1.c0)) AS TEXT)) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON (NOT (t0.c2)) ORDER BY CASE WHEN CASE WHEN 0.8405345004047582 THEN t0.c0 END THEN (((t0.c2))>((t0.c0))) WHEN ((x'')||(t0.c1)) THEN (((t0.c1))>=((rt1.c0))) WHEN ((t0.c0)IS NOT(rt1.c0)) THEN (t0.c0 IN ()) END ASC);
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt1 ON (NOT (t0.c2)) WHERE (CAST(((rt1.c2)<(rt1.c0)) AS TEXT)) ORDER BY CASE WHEN CASE WHEN 0.8405345004047582 THEN t0.c0 END THEN (((t0.c2))>((t0.c0))) WHEN ((x'')||(t0.c1)) THEN (((t0.c1))>=((rt1.c0))) WHEN ((t0.c0)IS NOT(rt1.c0)) THEN (t0.c0 IN ()) END ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2)<(rt1.c0)) AS TEXT)) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON (NOT (t0.c2)) ORDER BY CASE WHEN CASE WHEN 0.8405345004047582 THEN t0.c0 END THEN (((t0.c2))>((t0.c0))) WHEN ((x'')||(t0.c1)) THEN (((t0.c1))>=((rt1.c0))) WHEN ((t0.c0)IS NOT(rt1.c0)) THEN (t0.c0 IN ()) END ASC);
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt1 ON (NOT (t0.c2)) WHERE (CAST(((rt1.c2)<(rt1.c0)) AS TEXT)) ORDER BY CASE WHEN CASE WHEN 0.8405345004047582 THEN t0.c0 END THEN (((t0.c2))>((t0.c0))) WHEN ((x'')||(t0.c1)) THEN (((t0.c1))>=((rt1.c0))) WHEN ((t0.c0)IS NOT(rt1.c0)) THEN (t0.c0 IN ()) END ASC;
SELECT * FROM t0, rt1 WHERE (t0.c0) ORDER BY ((t0.c1 COLLATE RTRIM) NOT BETWEEN (('1616152570' IN ())) AND (CAST(t0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, rt1 ORDER BY ((t0.c1 COLLATE RTRIM) NOT BETWEEN (('1616152570' IN ())) AND (CAST(t0.c0 AS INTEGER))) ASC);
SELECT * FROM t0, rt1 WHERE (t0.c0) ORDER BY ((t0.c1 COLLATE RTRIM) NOT BETWEEN (('1616152570' IN ())) AND (CAST(t0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, rt1 ORDER BY ((t0.c1 COLLATE RTRIM) NOT BETWEEN (('1616152570' IN ())) AND (CAST(t0.c0 AS INTEGER))) ASC);
SELECT * FROM t0, rt1 WHERE (t0.c0) ORDER BY ((t0.c1 COLLATE RTRIM) NOT BETWEEN (('1616152570' IN ())) AND (CAST(t0.c0 AS INTEGER))) ASC;
SELECT * FROM t0, rt1, vt0 WHERE ((CAST(t0.c2 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(t0.c2 AS REAL) IN ())) IS TRUE)  as count FROM t0, rt1 NOT INDEXED, vt0);
SELECT * FROM t0, rt1, vt0 WHERE ((CAST(t0.c2 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(t0.c2 AS REAL) IN ())) IS TRUE)  as count FROM t0, rt1 NOT INDEXED, vt0);
SELECT * FROM t0, rt1, vt0 WHERE ((CAST(t0.c2 AS REAL) IN ()));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c0))<((x''))) COLLATE BINARY) ORDER BY ((vt0.c0) NOT BETWEEN (0Xffffffff82045e91 COLLATE RTRIM) AND (((t0.c0) BETWEEN (t0.c2) AND (vt0.c0)))) DESC, ((((((0.8684704904412425) NOT NULL))AND(((t0.c1)<<(vt0.c0)))))OR(((t0.c1) IS FALSE))), CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0))<((x''))) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY ((vt0.c0) NOT BETWEEN (0xffffffff82045e91 COLLATE RTRIM) AND (((t0.c0) BETWEEN (t0.c2) AND (vt0.c0)))) DESC, ((((((0.8684704904412425) NOT NULL))AND(((t0.c1)<<(vt0.c0)))))OR(((t0.c1) IS FALSE))), CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c0))<((x''))) COLLATE BINARY) ORDER BY ((vt0.c0) NOT BETWEEN (0Xffffffff82045e91 COLLATE RTRIM) AND (((t0.c0) BETWEEN (t0.c2) AND (vt0.c0)))) DESC, ((((((0.8684704904412425) NOT NULL))AND(((t0.c1)<<(vt0.c0)))))OR(((t0.c1) IS FALSE))), CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0))<((x''))) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY ((vt0.c0) NOT BETWEEN (0xffffffff82045e91 COLLATE RTRIM) AND (((t0.c0) BETWEEN (t0.c2) AND (vt0.c0)))) DESC, ((((((0.8684704904412425) NOT NULL))AND(((t0.c1)<<(vt0.c0)))))OR(((t0.c1) IS FALSE))), CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c0))<((x''))) COLLATE BINARY) ORDER BY ((vt0.c0) NOT BETWEEN (0Xffffffff82045e91 COLLATE RTRIM) AND (((t0.c0) BETWEEN (t0.c2) AND (vt0.c0)))) DESC, ((((((0.8684704904412425) NOT NULL))AND(((t0.c1)<<(vt0.c0)))))OR(((t0.c1) IS FALSE))), CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (0.07990606869570305) ORDER BY ((((('')AND(rt1.c1)))OR(rt1.c0)) IN (((vt0.c0) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.07990606869570305) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((('')AND(rt1.c1)))OR(rt1.c0)) IN (((vt0.c0) NOTNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (0.07990606869570305) ORDER BY ((((('')AND(rt1.c1)))OR(rt1.c0)) IN (((vt0.c0) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.07990606869570305) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((('')AND(rt1.c1)))OR(rt1.c0)) IN (((vt0.c0) NOTNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (0.07990606869570305) ORDER BY ((((('')AND(rt1.c1)))OR(rt1.c0)) IN (((vt0.c0) NOTNULL)))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL);
SELECT COUNT(*) FROM t0, rt1, vt0 WHERE ((~ (((t0.c1)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c1)IS(vt0.c0))))) IS TRUE)  as count FROM t0, rt1, vt0);
SELECT COUNT(*) FROM t0, rt1, vt0 WHERE ((~ (((t0.c1)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c1)IS(vt0.c0))))) IS TRUE)  as count FROM t0, rt1, vt0);
SELECT COUNT(*) FROM t0, rt1, vt0 WHERE ((~ (((t0.c1)IS(vt0.c0)))));
SELECT ALL COUNT(*) FROM t0, vt0, rt1 WHERE (UPPER((rt1.c0 IN (t0.c1)))) ORDER BY rt1.c1  NULLS FIRST, CAST(UPPER(t0.c0) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((UPPER((rt1.c0 IN (t0.c1)))) IS TRUE)  as count FROM t0, vt0, rt1 ORDER BY rt1.c1  NULLS FIRST, CAST(UPPER(t0.c0) AS INTEGER));
SELECT ALL COUNT(*) FROM t0, vt0, rt1 WHERE (UPPER((rt1.c0 IN (t0.c1)))) ORDER BY rt1.c1  NULLS FIRST, CAST(UPPER(t0.c0) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((UPPER((rt1.c0 IN (t0.c1)))) IS TRUE)  as count FROM t0, vt0, rt1 ORDER BY rt1.c1  NULLS FIRST, CAST(UPPER(t0.c0) AS INTEGER));
SELECT ALL COUNT(*) FROM t0, vt0, rt1 WHERE (UPPER((rt1.c0 IN (t0.c1)))) ORDER BY rt1.c1  NULLS FIRST, CAST(UPPER(t0.c0) AS INTEGER);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1);
SELECT ALL * FROM t0, vt0 FULL OUTER JOIN rt1 ON ((t0.c1 IN (t0.c2, t0.c1)) IN ((rt1.c0 IN ()))) WHERE (CAST(((rt1.c2) NOT BETWEEN (t0.c1) AND (rt1.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2) NOT BETWEEN (t0.c1) AND (rt1.c1)) AS BLOB)) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN rt1 ON ((t0.c1 IN (t0.c2, t0.c1)) IN ((rt1.c0 IN ()))));
SELECT ALL * FROM t0, vt0 FULL OUTER JOIN rt1 ON ((t0.c1 IN (t0.c2, t0.c1)) IN ((rt1.c0 IN ()))) WHERE (CAST(((rt1.c2) NOT BETWEEN (t0.c1) AND (rt1.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2) NOT BETWEEN (t0.c1) AND (rt1.c1)) AS BLOB)) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN rt1 ON ((t0.c1 IN (t0.c2, t0.c1)) IN ((rt1.c0 IN ()))));
SELECT ALL * FROM t0, vt0 FULL OUTER JOIN rt1 ON ((t0.c1 IN (t0.c2, t0.c1)) IN ((rt1.c0 IN ()))) WHERE (CAST(((rt1.c2) NOT BETWEEN (t0.c1) AND (rt1.c1)) AS BLOB));
SELECT COUNT(*) FROM t0, vt0, rt1 WHERE ((t0.c0 COLLATE NOCASE IN ((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 COLLATE NOCASE IN ((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0)))))) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT COUNT(*) FROM t0, vt0, rt1 WHERE ((t0.c0 COLLATE NOCASE IN ((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 COLLATE NOCASE IN ((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0)))))) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT COUNT(*) FROM t0, vt0, rt1 WHERE ((t0.c0 COLLATE NOCASE IN ((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))));
SELECT * FROM vt0 WHERE (((((vt0.c0)>=(vt0.c0))) NOT BETWEEN (vt0.c0) AND ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>=(vt0.c0))) NOT BETWEEN (vt0.c0) AND ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)>=(vt0.c0))) NOT BETWEEN (vt0.c0) AND ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>=(vt0.c0))) NOT BETWEEN (vt0.c0) AND ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)>=(vt0.c0))) NOT BETWEEN (vt0.c0) AND ((+ (vt0.c0)))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT (CASE WHEN rt1.c2 THEN rt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN rt1.c2 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT (CASE WHEN rt1.c2 THEN rt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN rt1.c2 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT (CASE WHEN rt1.c2 THEN rt1.c0 END)));
SELECT * FROM t0 WHERE (((((((((((0.6765012166651144)AND(t0.c2)))AND(t0.c0)))AND(t0.c2)))OR(t0.c1))) IS TRUE)) ORDER BY (((t0.c1)<>(t0.c2)) IN ()), CASE WHEN (+ (t0.c1)) THEN ((t0.c1) IS FALSE) ELSE ((t0.c2)||(t0.c2)) END DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((0.6765012166651144)AND(t0.c2)))AND(t0.c0)))AND(t0.c2)))OR(t0.c1))) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c1)!=(t0.c2)) IN ()), CASE WHEN (+ (t0.c1)) THEN ((t0.c1) IS FALSE) ELSE ((t0.c2)||(t0.c2)) END DESC);
SELECT * FROM t0 WHERE (((((((((((0.6765012166651144)AND(t0.c2)))AND(t0.c0)))AND(t0.c2)))OR(t0.c1))) IS TRUE)) ORDER BY (((t0.c1)<>(t0.c2)) IN ()), CASE WHEN (+ (t0.c1)) THEN ((t0.c1) IS FALSE) ELSE ((t0.c2)||(t0.c2)) END DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((0.6765012166651144)AND(t0.c2)))AND(t0.c0)))AND(t0.c2)))OR(t0.c1))) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c1)!=(t0.c2)) IN ()), CASE WHEN (+ (t0.c1)) THEN ((t0.c1) IS FALSE) ELSE ((t0.c2)||(t0.c2)) END DESC);
SELECT * FROM t0 WHERE (((((((((((0.6765012166651144)AND(t0.c2)))AND(t0.c0)))AND(t0.c2)))OR(t0.c1))) IS TRUE)) ORDER BY (((t0.c1)<>(t0.c2)) IN ()), CASE WHEN (+ (t0.c1)) THEN ((t0.c1) IS FALSE) ELSE ((t0.c2)||(t0.c2)) END DESC;
SELECT * FROM vt0 NATURAL JOIN t0 WHERE ((((- (t0.c0)))*(('-1474044751' IN (t0.c2))))) ORDER BY HEX(((((t0.c1)AND(vt0.c0)))AND(t0.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (t0.c0)))*(('-1474044751' IN (t0.c2))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY HEX(((((t0.c1)AND(vt0.c0)))AND(t0.c1))) ASC  NULLS FIRST);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE ((((- (t0.c0)))*(('-1474044751' IN (t0.c2))))) ORDER BY HEX(((((t0.c1)AND(vt0.c0)))AND(t0.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (t0.c0)))*(('-1474044751' IN (t0.c2))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY HEX(((((t0.c1)AND(vt0.c0)))AND(t0.c1))) ASC  NULLS FIRST);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE ((((- (t0.c0)))*(('-1474044751' IN (t0.c2))))) ORDER BY HEX(((((t0.c1)AND(vt0.c0)))AND(t0.c1))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, t0 WHERE (CAST(((((rt1.c0)AND(t0.c0)))OR(t0.c2)) AS REAL)) ORDER BY SQLITE_VERSION() ASC  NULLS FIRST, ((((CAST(t0.c1 AS NUMERIC))OR((((t0.c2))<((t0.c0))))))AND(t0.c1));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt1.c0)AND(t0.c0)))OR(t0.c2)) AS REAL)) IS TRUE)  as count FROM rt1, t0 ORDER BY SQLITE_VERSION() ASC  NULLS FIRST, ((((CAST(t0.c1 AS NUMERIC))OR((((t0.c2))<((t0.c0))))))AND(t0.c1)));
SELECT COUNT(*) FROM rt1, t0 WHERE (CAST(((((rt1.c0)AND(t0.c0)))OR(t0.c2)) AS REAL)) ORDER BY SQLITE_VERSION() ASC  NULLS FIRST, ((((CAST(t0.c1 AS NUMERIC))OR((((t0.c2))<((t0.c0))))))AND(t0.c1));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt1.c0)AND(t0.c0)))OR(t0.c2)) AS REAL)) IS TRUE)  as count FROM rt1, t0 ORDER BY SQLITE_VERSION() ASC  NULLS FIRST, ((((CAST(t0.c1 AS NUMERIC))OR((((t0.c2))<((t0.c0))))))AND(t0.c1)));
SELECT COUNT(*) FROM rt1, t0 WHERE (CAST(((((rt1.c0)AND(t0.c0)))OR(t0.c2)) AS REAL)) ORDER BY SQLITE_VERSION() ASC  NULLS FIRST, ((((CAST(t0.c1 AS NUMERIC))OR((((t0.c2))<((t0.c0))))))AND(t0.c1));
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0, t0.c2, t0.c0, t0.c0, t0.c1))<>((t0.c1, t0.c0, x'', t0.c2, t0.c2))))-((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0, t0.c2, t0.c0, t0.c0, t0.c1))!=((t0.c1, t0.c0, x'', t0.c2, t0.c2))))-((t0.c0 IN ())))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0, t0.c2, t0.c0, t0.c0, t0.c1))<>((t0.c1, t0.c0, x'', t0.c2, t0.c2))))-((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0, t0.c2, t0.c0, t0.c0, t0.c1))!=((t0.c1, t0.c0, x'', t0.c2, t0.c2))))-((t0.c0 IN ())))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0, t0.c2, t0.c0, t0.c0, t0.c1))<>((t0.c1, t0.c0, x'', t0.c2, t0.c2))))-((t0.c0 IN ()))));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY (('') NOT BETWEEN (t0.c2) AND (0.5912579462734351));
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY (('') NOT BETWEEN (t0.c2) AND (0.5912579462734351)));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY (('') NOT BETWEEN (t0.c2) AND (0.5912579462734351));
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY (('') NOT BETWEEN (t0.c2) AND (0.5912579462734351)));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY (('') NOT BETWEEN (t0.c2) AND (0.5912579462734351));
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON x'' WHERE (((((t0.c0) BETWEEN ('758123600') AND (t0.c2)))IS NOT((+ (t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN ('758123600') AND (t0.c2)))IS NOT((+ (t0.c1))))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON x'');
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON x'' WHERE (((((t0.c0) BETWEEN ('758123600') AND (t0.c2)))IS NOT((+ (t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN ('758123600') AND (t0.c2)))IS NOT((+ (t0.c1))))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON x'');
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON x'' WHERE (((((t0.c0) BETWEEN ('758123600') AND (t0.c2)))IS NOT((+ (t0.c1)))));
SELECT COUNT(*) FROM rt1, vt0 FULL OUTER JOIN t0 ON (((IFNULL(rt1.c2, rt1.c0), ((t0.c1)IS NOT(t0.c1)), rt1.c1 COLLATE BINARY))<((((((t0.c2)AND(t0.c0)))OR(vt0.c0)), STRFTIME(rt1.c2, t0.c2, -344388583), (rt1.c0 IN (NULL, vt0.c0))))) WHERE (CAST((rt1.c0 IN (vt0.c0, rt1.c1)) AS NUMERIC)) ORDER BY (((rt1.c0) NOTNULL) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt1.c0 IN (vt0.c0, rt1.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt1, vt0 FULL OUTER JOIN t0 ON (((IFNULL(rt1.c2, rt1.c0), ((t0.c1)IS NOT(t0.c1)), rt1.c1 COLLATE BINARY))<((((((t0.c2)AND(t0.c0)))OR(vt0.c0)), STRFTIME(rt1.c2, t0.c2, -344388583), (rt1.c0 IN (NULL, vt0.c0))))) ORDER BY (((rt1.c0) NOTNULL) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 FULL OUTER JOIN t0 ON (((IFNULL(rt1.c2, rt1.c0), ((t0.c1)IS NOT(t0.c1)), rt1.c1 COLLATE BINARY))<((((((t0.c2)AND(t0.c0)))OR(vt0.c0)), STRFTIME(rt1.c2, t0.c2, -344388583), (rt1.c0 IN (NULL, vt0.c0))))) WHERE (CAST((rt1.c0 IN (vt0.c0, rt1.c1)) AS NUMERIC)) ORDER BY (((rt1.c0) NOTNULL) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt1.c0 IN (vt0.c0, rt1.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt1, vt0 FULL OUTER JOIN t0 ON (((IFNULL(rt1.c2, rt1.c0), ((t0.c1)IS NOT(t0.c1)), rt1.c1 COLLATE BINARY))<((((((t0.c2)AND(t0.c0)))OR(vt0.c0)), STRFTIME(rt1.c2, t0.c2, -344388583), (rt1.c0 IN (NULL, vt0.c0))))) ORDER BY (((rt1.c0) NOTNULL) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 FULL OUTER JOIN t0 ON (((IFNULL(rt1.c2, rt1.c0), ((t0.c1)IS NOT(t0.c1)), rt1.c1 COLLATE BINARY))<((((((t0.c2)AND(t0.c0)))OR(vt0.c0)), STRFTIME(rt1.c2, t0.c2, -344388583), (rt1.c0 IN (NULL, vt0.c0))))) WHERE (CAST((rt1.c0 IN (vt0.c0, rt1.c1)) AS NUMERIC)) ORDER BY (((rt1.c0) NOTNULL) IN ()) ASC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (rt1.c0) ORDER BY ((((QUOTE(rt1.c1))OR((((rt1.c1))>((rt1.c1))))))OR((~ (rt1.c1)))) DESC, TRIM(((rt1.c0) IS TRUE), -4.63397958E8);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY ((((QUOTE(rt1.c1))OR((((rt1.c1))>((rt1.c1))))))OR((~ (rt1.c1)))) DESC, TRIM(((rt1.c0) IS TRUE), -4.63397958E8));
SELECT ALL * FROM rt1 WHERE (rt1.c0) ORDER BY ((((QUOTE(rt1.c1))OR((((rt1.c1))>((rt1.c1))))))OR((~ (rt1.c1)))) DESC, TRIM(((rt1.c0) IS TRUE), -4.63397958E8);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY ((((QUOTE(rt1.c1))OR((((rt1.c1))>((rt1.c1))))))OR((~ (rt1.c1)))) DESC, TRIM(((rt1.c0) IS TRUE), -4.63397958E8));
SELECT ALL * FROM rt1 WHERE (rt1.c0) ORDER BY ((((QUOTE(rt1.c1))OR((((rt1.c1))>((rt1.c1))))))OR((~ (rt1.c1)))) DESC, TRIM(((rt1.c0) IS TRUE), -4.63397958E8);
SELECT ALL * FROM t0 WHERE (COALESCE(DISTINCT x'2b76', TRIM(t0.c1, t0.c0), (x'' IN ()), CAST(t0.c2 AS BLOB))) ORDER BY CAST(t0.c2 AS INTEGER) COLLATE BINARY ASC  NULLS FIRST, 0.8167841170395096  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT x'2b76', TRIM(t0.c1, t0.c0), (x'' IN ()), CAST(t0.c2 AS BLOB))) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c2 AS INTEGER) COLLATE BINARY ASC  NULLS FIRST, 0.8167841170395096  NULLS LAST);
SELECT ALL * FROM t0 WHERE (COALESCE(DISTINCT x'2b76', TRIM(t0.c1, t0.c0), (x'' IN ()), CAST(t0.c2 AS BLOB))) ORDER BY CAST(t0.c2 AS INTEGER) COLLATE BINARY ASC  NULLS FIRST, 0.8167841170395096  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT x'2b76', TRIM(t0.c1, t0.c0), (x'' IN ()), CAST(t0.c2 AS BLOB))) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c2 AS INTEGER) COLLATE BINARY ASC  NULLS FIRST, 0.8167841170395096  NULLS LAST);
SELECT ALL * FROM t0 WHERE (COALESCE(DISTINCT x'2b76', TRIM(t0.c1, t0.c0), (x'' IN ()), CAST(t0.c2 AS BLOB))) ORDER BY CAST(t0.c2 AS INTEGER) COLLATE BINARY ASC  NULLS FIRST, 0.8167841170395096  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 FULL OUTER JOIN rt1 ON ((((((((CASE rt1.c2  WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN NULL THEN rt1.c0 WHEN rt1.c0 THEN '1780228840' WHEN rt1.c0 THEN t0.c1 END)AND(TRIM(t0.c0, ''))))AND((((t0.c0))==((vt0.c0))))))AND(((rt1.c0)GLOB(rt1.c1)))))OR(((t0.c2) IS TRUE))) WHERE (((rt1.c1 COLLATE NOCASE)AND(LOWER(DISTINCT t0.c1)))) ORDER BY ((((rt1.c0) NOTNULL)) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE NOCASE)AND(LOWER(DISTINCT t0.c1)))) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN rt1 ON ((((((((CASE rt1.c2  WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN NULL THEN rt1.c0 WHEN rt1.c0 THEN '1780228840' WHEN rt1.c0 THEN t0.c1 END)AND(TRIM(t0.c0, ''))))AND((((t0.c0))==((vt0.c0))))))AND(((rt1.c0)GLOB(rt1.c1)))))OR(((t0.c2) IS TRUE))) ORDER BY ((((rt1.c0) NOTNULL)) IS FALSE));
SELECT ALL COUNT(*) FROM t0, vt0 FULL OUTER JOIN rt1 ON ((((((((CASE rt1.c2  WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN NULL THEN rt1.c0 WHEN rt1.c0 THEN '1780228840' WHEN rt1.c0 THEN t0.c1 END)AND(TRIM(t0.c0, ''))))AND((((t0.c0))==((vt0.c0))))))AND(((rt1.c0)GLOB(rt1.c1)))))OR(((t0.c2) IS TRUE))) WHERE (((rt1.c1 COLLATE NOCASE)AND(LOWER(DISTINCT t0.c1)))) ORDER BY ((((rt1.c0) NOTNULL)) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE NOCASE)AND(LOWER(DISTINCT t0.c1)))) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN rt1 ON ((((((((CASE rt1.c2  WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN NULL THEN rt1.c0 WHEN rt1.c0 THEN '1780228840' WHEN rt1.c0 THEN t0.c1 END)AND(TRIM(t0.c0, ''))))AND((((t0.c0))==((vt0.c0))))))AND(((rt1.c0)GLOB(rt1.c1)))))OR(((t0.c2) IS TRUE))) ORDER BY ((((rt1.c0) NOTNULL)) IS FALSE));
SELECT ALL COUNT(*) FROM t0, vt0 FULL OUTER JOIN rt1 ON ((((((((CASE rt1.c2  WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN NULL THEN rt1.c0 WHEN rt1.c0 THEN '1780228840' WHEN rt1.c0 THEN t0.c1 END)AND(TRIM(t0.c0, ''))))AND((((t0.c0))==((vt0.c0))))))AND(((rt1.c0)GLOB(rt1.c1)))))OR(((t0.c2) IS TRUE))) WHERE (((rt1.c1 COLLATE NOCASE)AND(LOWER(DISTINCT t0.c1)))) ORDER BY ((((rt1.c0) NOTNULL)) IS FALSE);
SELECT COUNT(*) FROM vt0, rt1, t0 WHERE (((((((rt1.c0)+(t0.c0)))OR((rt1.c1 IN ()))))OR(CASE rt1.c1  WHEN '' THEN rt1.c1 ELSE rt1.c2 END))) ORDER BY ((rt1.c1) NOT BETWEEN (NULL) AND ('RJ')) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)+(t0.c0)))OR((rt1.c1 IN ()))))OR(CASE rt1.c1  WHEN '' THEN rt1.c1 ELSE rt1.c2 END))) IS TRUE)  as count FROM vt0, rt1, t0 ORDER BY ((rt1.c1) NOT BETWEEN (NULL) AND ('RJ')) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt0, rt1, t0 WHERE (((((((rt1.c0)+(t0.c0)))OR((rt1.c1 IN ()))))OR(CASE rt1.c1  WHEN '' THEN rt1.c1 ELSE rt1.c2 END))) ORDER BY ((rt1.c1) NOT BETWEEN (NULL) AND ('RJ')) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)+(t0.c0)))OR((rt1.c1 IN ()))))OR(CASE rt1.c1  WHEN '' THEN rt1.c1 ELSE rt1.c2 END))) IS TRUE)  as count FROM vt0, rt1, t0 ORDER BY ((rt1.c1) NOT BETWEEN (NULL) AND ('RJ')) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt0, rt1, t0 WHERE (((((((rt1.c0)+(t0.c0)))OR((rt1.c1 IN ()))))OR(CASE rt1.c1  WHEN '' THEN rt1.c1 ELSE rt1.c2 END))) ORDER BY ((rt1.c1) NOT BETWEEN (NULL) AND ('RJ')) COLLATE RTRIM DESC;
SELECT COUNT(*) FROM rt1 WHERE (0.48865518960198273) ORDER BY rt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.48865518960198273) IS TRUE)  as count FROM rt1 ORDER BY rt1.c0  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (0.48865518960198273) ORDER BY rt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.48865518960198273) IS TRUE)  as count FROM rt1 ORDER BY rt1.c0  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (0.48865518960198273) ORDER BY rt1.c0  NULLS FIRST;
SELECT * FROM rt1, t0, vt0 WHERE ((((t0.c0)) BETWEEN (((rt1.c1 IN ()))) AND ((x'' COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) BETWEEN (((rt1.c1 IN ()))) AND ((x'' COLLATE BINARY)))) IS TRUE)  as count FROM rt1, t0, vt0);
SELECT * FROM rt1, t0, vt0 WHERE ((((t0.c0)) BETWEEN (((rt1.c1 IN ()))) AND ((x'' COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) BETWEEN (((rt1.c1 IN ()))) AND ((x'' COLLATE BINARY)))) IS TRUE)  as count FROM rt1, t0, vt0);
SELECT * FROM rt1, t0, vt0 WHERE ((((t0.c0)) BETWEEN (((rt1.c1 IN ()))) AND ((x'' COLLATE BINARY))));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN t0 ON (+ ((rt1.c2 IN ()))) WHERE (((((t0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))>=('')));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))>=(''))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON (+ ((rt1.c2 IN ()))));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN t0 ON (+ ((rt1.c2 IN ()))) WHERE (((((t0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))>=('')));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))>=(''))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON (+ ((rt1.c2 IN ()))));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN t0 ON (+ ((rt1.c2 IN ()))) WHERE (((((t0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))>=('')));
SELECT ALL * FROM t0, rt1 INDEXED BY i95 WHERE ((((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)), (((rt1.c0, t0.c2, rt1.c1))>((rt1.c2, 'u\n', rt1.c1))), ((rt1.c1)>=(rt1.c1))))==((rt1.c0, t0.c0 COLLATE NOCASE, ((t0.c1)<=(rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)), (((rt1.c0, t0.c2, rt1.c1))>((rt1.c2, 'u\n', rt1.c1))), ((rt1.c1)>=(rt1.c1))))==((rt1.c0, t0.c0 COLLATE NOCASE, ((t0.c1)<=(rt1.c1)))))) IS TRUE)  as count FROM t0, rt1 INDEXED BY i95);
SELECT ALL * FROM t0, rt1 INDEXED BY i95 WHERE ((((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)), (((rt1.c0, t0.c2, rt1.c1))>((rt1.c2, 'u\n', rt1.c1))), ((rt1.c1)>=(rt1.c1))))==((rt1.c0, t0.c0 COLLATE NOCASE, ((t0.c1)<=(rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)), (((rt1.c0, t0.c2, rt1.c1))>((rt1.c2, 'u\n', rt1.c1))), ((rt1.c1)>=(rt1.c1))))==((rt1.c0, t0.c0 COLLATE NOCASE, ((t0.c1)<=(rt1.c1)))))) IS TRUE)  as count FROM t0, rt1 INDEXED BY i95);
SELECT ALL * FROM vt0, rt1, t0 WHERE (vt0.c0) ORDER BY (~ (CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt1, t0 ORDER BY (~ (CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)) DESC);
SELECT ALL * FROM vt0, rt1, t0 WHERE (vt0.c0) ORDER BY (~ (CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt1, t0 ORDER BY (~ (CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)) DESC);
SELECT ALL * FROM vt0, rt1, t0 WHERE (vt0.c0) ORDER BY (~ (CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)) DESC;
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE) ORDER BY CAST((~ (vt0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CAST((~ (vt0.c0)) AS REAL));
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE) ORDER BY CAST((~ (vt0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CAST((~ (vt0.c0)) AS REAL));
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE) ORDER BY CAST((~ (vt0.c0)) AS REAL);
SELECT COUNT(*) FROM rt1, vt0, t0 WHERE ('1166727347');
SELECT SUM(count) FROM (SELECT ALL (('1166727347') IS TRUE)  as count FROM rt1, vt0, t0);
SELECT COUNT(*) FROM rt1, vt0, t0 WHERE ('1166727347');
SELECT SUM(count) FROM (SELECT ALL (('1166727347') IS TRUE)  as count FROM rt1, vt0, t0);
SELECT COUNT(*) FROM rt1, vt0, t0 WHERE ('1166727347');
SELECT COUNT(*) FROM t0, rt1, vt0 WHERE (0.2681330106484333);
SELECT SUM(count) FROM (SELECT ALL ((0.2681330106484333) IS TRUE)  as count FROM t0, rt1, vt0);
SELECT COUNT(*) FROM t0, rt1, vt0 WHERE (0.2681330106484333);
SELECT SUM(count) FROM (SELECT ALL ((0.2681330106484333) IS TRUE)  as count FROM t0, rt1, vt0);
SELECT COUNT(*) FROM t0, rt1, vt0 WHERE (0.2681330106484333);
SELECT ALL COUNT(*) FROM t0, vt0, rt1 WHERE (((x'c880')>=(TRIM(DISTINCT rt1.c0)))) ORDER BY (~ (LOWER(DISTINCT rt1.c0))), ((((((((t0.c1 COLLATE RTRIM)AND(((vt0.c0)%(rt1.c0)))))AND(CAST(t0.c0 AS INTEGER))))AND((((x'', rt1.c2, rt1.c1))>((t0.c0, t0.c2, t0.c0))))))OR((rt1.c1 IN (rt1.c0, rt1.c1)))), CAST(((((vt0.c0)AND(t0.c2)))AND(rt1.c2)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'c880')>=(TRIM(DISTINCT rt1.c0)))) IS TRUE)  as count FROM t0, vt0, rt1 ORDER BY (~ (LOWER(DISTINCT rt1.c0))), ((((((((t0.c1 COLLATE RTRIM)AND(((vt0.c0)%(rt1.c0)))))AND(CAST(t0.c0 AS INTEGER))))AND((((x'', rt1.c2, rt1.c1))>((t0.c0, t0.c2, t0.c0))))))OR((rt1.c1 IN (rt1.c0, rt1.c1)))), CAST(((((vt0.c0)AND(t0.c2)))AND(rt1.c2)) AS INTEGER)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, rt1 WHERE (((x'c880')>=(TRIM(DISTINCT rt1.c0)))) ORDER BY (~ (LOWER(DISTINCT rt1.c0))), ((((((((t0.c1 COLLATE RTRIM)AND(((vt0.c0)%(rt1.c0)))))AND(CAST(t0.c0 AS INTEGER))))AND((((x'', rt1.c2, rt1.c1))>((t0.c0, t0.c2, t0.c0))))))OR((rt1.c1 IN (rt1.c0, rt1.c1)))), CAST(((((vt0.c0)AND(t0.c2)))AND(rt1.c2)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'c880')>=(TRIM(DISTINCT rt1.c0)))) IS TRUE)  as count FROM t0, vt0, rt1 ORDER BY (~ (LOWER(DISTINCT rt1.c0))), ((((((((t0.c1 COLLATE RTRIM)AND(((vt0.c0)%(rt1.c0)))))AND(CAST(t0.c0 AS INTEGER))))AND((((x'', rt1.c2, rt1.c1))>((t0.c0, t0.c2, t0.c0))))))OR((rt1.c1 IN (rt1.c0, rt1.c1)))), CAST(((((vt0.c0)AND(t0.c2)))AND(rt1.c2)) AS INTEGER)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, rt1 WHERE (((x'c880')>=(TRIM(DISTINCT rt1.c0)))) ORDER BY (~ (LOWER(DISTINCT rt1.c0))), ((((((((t0.c1 COLLATE RTRIM)AND(((vt0.c0)%(rt1.c0)))))AND(CAST(t0.c0 AS INTEGER))))AND((((x'', rt1.c2, rt1.c1))>((t0.c0, t0.c2, t0.c0))))))OR((rt1.c1 IN (rt1.c0, rt1.c1)))), CAST(((((vt0.c0)AND(t0.c2)))AND(rt1.c2)) AS INTEGER)  NULLS FIRST;
SELECT * FROM t0, rt1 WHERE (LIKELIHOOD(DISTINCT rt1.c1, 0.45166628527511254));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT rt1.c1, 0.45166628527511254)) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (LIKELIHOOD(DISTINCT rt1.c1, 0.45166628527511254));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT rt1.c1, 0.45166628527511254)) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (LIKELIHOOD(DISTINCT rt1.c1, 0.45166628527511254));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((((((+ (vt0.c0)))AND(((vt0.c0)<<(t0.c1)))))OR(NULL)))AND((t0.c0 IN (t0.c2)))))OR(0.22902249684036313))) ORDER BY ((((((((0.7180302753435417)OR(t0.c2)))OR(NULL)))AND(((t0.c0) NOTNULL))))AND(t0.c1 COLLATE BINARY)) DESC, (t0.c0 COLLATE BINARY IN (vt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((+ (vt0.c0)))AND(((vt0.c0)<<(t0.c1)))))OR(NULL)))AND((t0.c0 IN (t0.c2)))))OR(0.22902249684036313))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((((0.7180302753435417)OR(t0.c2)))OR(NULL)))AND(((t0.c0) NOTNULL))))AND(t0.c1 COLLATE BINARY)) DESC, (t0.c0 COLLATE BINARY IN (vt0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((((((+ (vt0.c0)))AND(((vt0.c0)<<(t0.c1)))))OR(NULL)))AND((t0.c0 IN (t0.c2)))))OR(0.22902249684036313))) ORDER BY ((((((((0.7180302753435417)OR(t0.c2)))OR(NULL)))AND(((t0.c0) NOTNULL))))AND(t0.c1 COLLATE BINARY)) DESC, (t0.c0 COLLATE BINARY IN (vt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((+ (vt0.c0)))AND(((vt0.c0)<<(t0.c1)))))OR(NULL)))AND((t0.c0 IN (t0.c2)))))OR(0.22902249684036313))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((((0.7180302753435417)OR(t0.c2)))OR(NULL)))AND(((t0.c0) NOTNULL))))AND(t0.c1 COLLATE BINARY)) DESC, (t0.c0 COLLATE BINARY IN (vt0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((((((+ (vt0.c0)))AND(((vt0.c0)<<(t0.c1)))))OR(NULL)))AND((t0.c0 IN (t0.c2)))))OR(0.22902249684036313))) ORDER BY ((((((((0.7180302753435417)OR(t0.c2)))OR(NULL)))AND(((t0.c0) NOTNULL))))AND(t0.c1 COLLATE BINARY)) DESC, (t0.c0 COLLATE BINARY IN (vt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT * FROM t0 WHERE (CAST(((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)) AS NUMERIC));
SELECT COUNT(*) FROM rt1, t0, vt0 WHERE ((~ (t0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((~ (t0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, t0, vt0);
SELECT COUNT(*) FROM rt1, t0, vt0 WHERE ((~ (t0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((~ (t0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, t0, vt0);
SELECT COUNT(*) FROM rt1, t0, vt0 WHERE ((~ (t0.c2)) COLLATE NOCASE);
SELECT ALL * FROM t0 WHERE (CASE WHEN NULL THEN (((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c0))) ELSE ((((t0.c1)OR(t0.c2)))OR(x'ec4de385')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN (((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c0))) ELSE ((((t0.c1)OR(t0.c2)))OR(x'ec4de385')) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE WHEN NULL THEN (((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c0))) ELSE ((((t0.c1)OR(t0.c2)))OR(x'ec4de385')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN (((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c0))) ELSE ((((t0.c1)OR(t0.c2)))OR(x'ec4de385')) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE WHEN NULL THEN (((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c0))) ELSE ((((t0.c1)OR(t0.c2)))OR(x'ec4de385')) END);
SELECT COUNT(*) FROM rt1, vt0, t0 WHERE (IFNULL(highlight(rt1.c0, NULL, '0.6757870624836146', t0.c1), ((t0.c0) IS TRUE))) ORDER BY (((t0.c2 IN ())) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(highlight(rt1.c0, NULL, '0.6757870624836146', t0.c1), ((t0.c0) IS TRUE))) IS TRUE)  as count FROM rt1, vt0, t0 ORDER BY (((t0.c2 IN ())) IS FALSE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0, t0 WHERE (IFNULL(highlight(rt1.c0, NULL, '0.6757870624836146', t0.c1), ((t0.c0) IS TRUE))) ORDER BY (((t0.c2 IN ())) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(highlight(rt1.c0, NULL, '0.6757870624836146', t0.c1), ((t0.c0) IS TRUE))) IS TRUE)  as count FROM rt1, vt0, t0 ORDER BY (((t0.c2 IN ())) IS FALSE) ASC  NULLS FIRST);
SELECT * FROM t0, vt0, rt1 WHERE (((rt1.c0)/(((((t0.c0)AND(vt0.c0)))AND(rt1.c1))))) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0)/(((((t0.c0)AND(vt0.c0)))AND(rt1.c1))))) IS TRUE)  as count FROM t0, vt0, rt1 ORDER BY x''  NULLS LAST);
SELECT * FROM t0, vt0, rt1 WHERE (((rt1.c0)/(((((t0.c0)AND(vt0.c0)))AND(rt1.c1))))) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0)/(((((t0.c0)AND(vt0.c0)))AND(rt1.c1))))) IS TRUE)  as count FROM t0, vt0, rt1 ORDER BY x''  NULLS LAST);
SELECT * FROM t0, vt0, rt1 WHERE (((rt1.c0)/(((((t0.c0)AND(vt0.c0)))AND(rt1.c1))))) ORDER BY x''  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN CASE WHEN 0.10627000706509837 THEN rt1.c2 ELSE rt1.c0 END THEN (x'' IN ()) ELSE CAST(rt1.c1 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN 0.10627000706509837 THEN rt1.c2 ELSE rt1.c0 END THEN (x'' IN ()) ELSE CAST(rt1.c1 AS TEXT) END) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN CASE WHEN 0.10627000706509837 THEN rt1.c2 ELSE rt1.c0 END THEN (x'' IN ()) ELSE CAST(rt1.c1 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN 0.10627000706509837 THEN rt1.c2 ELSE rt1.c0 END THEN (x'' IN ()) ELSE CAST(rt1.c1 AS TEXT) END) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN CASE WHEN 0.10627000706509837 THEN rt1.c2 ELSE rt1.c0 END THEN (x'' IN ()) ELSE CAST(rt1.c1 AS TEXT) END);
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, '', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN (((-134666077)%(vt0.c0))) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, '', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN (((-134666077)%(vt0.c0))) AND (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, '', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN (((-134666077)%(vt0.c0))) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, '', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN (((-134666077)%(vt0.c0))) AND (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, '', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN (((-134666077)%(vt0.c0))) AND (vt0.c0)));
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON 'D' WHERE (((((((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c1)))OR(CASE vt0.c0  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c2 THEN vt0.c0 END)))OR(x'f1b9'))) ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((HEX(DISTINCT rt1.c0)))) DESC, ((((rt1.c1)AND(rt1.c2)))AND(rt1.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c1)))OR(CASE vt0.c0  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c2 THEN vt0.c0 END)))OR(x'f1b9'))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON 'D' ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((HEX(DISTINCT rt1.c0)))) DESC, ((((rt1.c1)AND(rt1.c2)))AND(rt1.c0 COLLATE NOCASE))  NULLS LAST);
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON 'D' WHERE (((((((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c1)))OR(CASE vt0.c0  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c2 THEN vt0.c0 END)))OR(x'f1b9'))) ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((HEX(DISTINCT rt1.c0)))) DESC, ((((rt1.c1)AND(rt1.c2)))AND(rt1.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c1)))OR(CASE vt0.c0  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c2 THEN vt0.c0 END)))OR(x'f1b9'))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON 'D' ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((HEX(DISTINCT rt1.c0)))) DESC, ((((rt1.c1)AND(rt1.c2)))AND(rt1.c0 COLLATE NOCASE))  NULLS LAST);
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON 'D' WHERE (((((((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c1)))OR(CASE vt0.c0  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c2 THEN vt0.c0 END)))OR(x'f1b9'))) ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((HEX(DISTINCT rt1.c0)))) DESC, ((((rt1.c1)AND(rt1.c2)))AND(rt1.c0 COLLATE NOCASE))  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0, rt1 WHERE (CAST(rt1.c2 COLLATE NOCASE AS REAL)) ORDER BY (((CASE WHEN rt1.c0 THEN rt1.c1 END, t0.c0, CASE WHEN rt1.c1 THEN t0.c2 WHEN t0.c0 THEN x'eae0f816' WHEN t0.c0 THEN t0.c1 ELSE vt0.c0 END, LOWER(DISTINCT rt1.c0), ((4.79867718E8) NOTNULL)))>((ABS(t0.c2), (- (-1.543828834E9)), rt1.c1, (rt1.c1 IN ()), ((((rt1.c2)OR(rt1.c1)))AND(t0.c1))))) DESC, 0x5e7cc6f5 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c2 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM t0, vt0, rt1 ORDER BY (((CASE WHEN rt1.c0 THEN rt1.c1 END, t0.c0, CASE WHEN rt1.c1 THEN t0.c2 WHEN t0.c0 THEN x'eae0f816' WHEN t0.c0 THEN t0.c1 ELSE vt0.c0 END, LOWER(DISTINCT rt1.c0), ((4.79867718E8) NOTNULL)))>((ABS(t0.c2), (- (-1.543828834E9)), rt1.c1, (rt1.c1 IN ()), ((((rt1.c2)OR(rt1.c1)))AND(t0.c1))))) DESC, 0X5e7cc6f5 COLLATE NOCASE);
SELECT COUNT(*) FROM t0, vt0, rt1 WHERE (CAST(rt1.c2 COLLATE NOCASE AS REAL)) ORDER BY (((CASE WHEN rt1.c0 THEN rt1.c1 END, t0.c0, CASE WHEN rt1.c1 THEN t0.c2 WHEN t0.c0 THEN x'eae0f816' WHEN t0.c0 THEN t0.c1 ELSE vt0.c0 END, LOWER(DISTINCT rt1.c0), ((4.79867718E8) NOTNULL)))>((ABS(t0.c2), (- (-1.543828834E9)), rt1.c1, (rt1.c1 IN ()), ((((rt1.c2)OR(rt1.c1)))AND(t0.c1))))) DESC, 0x5e7cc6f5 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c2 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM t0, vt0, rt1 ORDER BY (((CASE WHEN rt1.c0 THEN rt1.c1 END, t0.c0, CASE WHEN rt1.c1 THEN t0.c2 WHEN t0.c0 THEN x'eae0f816' WHEN t0.c0 THEN t0.c1 ELSE vt0.c0 END, LOWER(DISTINCT rt1.c0), ((4.79867718E8) NOTNULL)))>((ABS(t0.c2), (- (-1.543828834E9)), rt1.c1, (rt1.c1 IN ()), ((((rt1.c2)OR(rt1.c1)))AND(t0.c1))))) DESC, 0X5e7cc6f5 COLLATE NOCASE);
SELECT * FROM t0, vt0, rt1 WHERE (((((((vt0.c0)AND(t0.c0)))AND(''))) NOT BETWEEN (((((t0.c1)OR(t0.c2)))OR(t0.c0))) AND (rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(t0.c0)))AND(''))) NOT BETWEEN (((((t0.c1)OR(t0.c2)))OR(t0.c0))) AND (rt1.c1))) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT * FROM t0, vt0, rt1 WHERE (((((((vt0.c0)AND(t0.c0)))AND(''))) NOT BETWEEN (((((t0.c1)OR(t0.c2)))OR(t0.c0))) AND (rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(t0.c0)))AND(''))) NOT BETWEEN (((((t0.c1)OR(t0.c2)))OR(t0.c0))) AND (rt1.c1))) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT * FROM t0, vt0, rt1 WHERE (((((((vt0.c0)AND(t0.c0)))AND(''))) NOT BETWEEN (((((t0.c1)OR(t0.c2)))OR(t0.c0))) AND (rt1.c1)));
SELECT * FROM rt1 WHERE (CASE (((rt1.c2, rt1.c2, x'71b0')) BETWEEN ((rt1.c0, rt1.c1, rt1.c1)) AND ((rt1.c1, rt1.c1, rt1.c1)))  WHEN CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END THEN (rt1.c0 IN ()) END) ORDER BY ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt1.c2, rt1.c2, x'71b0')) BETWEEN ((rt1.c0, rt1.c1, rt1.c1)) AND ((rt1.c1, rt1.c1, rt1.c1)))  WHEN CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END THEN (rt1.c0 IN ()) END) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)) COLLATE BINARY);
SELECT * FROM rt1 WHERE (CASE (((rt1.c2, rt1.c2, x'71b0')) BETWEEN ((rt1.c0, rt1.c1, rt1.c1)) AND ((rt1.c1, rt1.c1, rt1.c1)))  WHEN CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END THEN (rt1.c0 IN ()) END) ORDER BY ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt1.c2, rt1.c2, x'71b0')) BETWEEN ((rt1.c0, rt1.c1, rt1.c1)) AND ((rt1.c1, rt1.c1, rt1.c1)))  WHEN CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END THEN (rt1.c0 IN ()) END) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)) COLLATE BINARY);
SELECT * FROM rt1 WHERE (CASE (((rt1.c2, rt1.c2, x'71b0')) BETWEEN ((rt1.c0, rt1.c1, rt1.c1)) AND ((rt1.c1, rt1.c1, rt1.c1)))  WHEN CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END THEN (rt1.c0 IN ()) END) ORDER BY ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)) COLLATE BINARY;
SELECT ALL * FROM t0 WHERE ((((~ (t0.c2)))>=(t0.c1))) ORDER BY ((t0.c0)&(t0.c1)) COLLATE BINARY, '1099240249' ASC;
SELECT SUM(count) FROM (SELECT (((((~ (t0.c2)))>=(t0.c1))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0)&(t0.c1)) COLLATE BINARY, '1099240249' ASC);
SELECT ALL * FROM t0 WHERE ((((~ (t0.c2)))>=(t0.c1))) ORDER BY ((t0.c0)&(t0.c1)) COLLATE BINARY, '1099240249' ASC;
SELECT SUM(count) FROM (SELECT (((((~ (t0.c2)))>=(t0.c1))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0)&(t0.c1)) COLLATE BINARY, '1099240249' ASC);
SELECT ALL * FROM t0 WHERE ((((~ (t0.c2)))>=(t0.c1))) ORDER BY ((t0.c0)&(t0.c1)) COLLATE BINARY, '1099240249' ASC;
SELECT ALL * FROM t0 WHERE ((((((t0.c1, t0.c2, t0.c0, t0.c0, 0x1c63ec7b)) NOT BETWEEN ((t0.c0, t0.c2, t0.c1, t0.c1, t0.c0)) AND ((x'', t0.c0, t0.c1, t0.c0, x'2233'))))<=(t0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c1, t0.c2, t0.c0, t0.c0, 0X1c63ec7b)) NOT BETWEEN ((t0.c0, t0.c2, t0.c1, t0.c1, t0.c0)) AND ((x'', t0.c0, t0.c1, t0.c0, x'2233'))))<=(t0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((t0.c1, t0.c2, t0.c0, t0.c0, 0x1c63ec7b)) NOT BETWEEN ((t0.c0, t0.c2, t0.c1, t0.c1, t0.c0)) AND ((x'', t0.c0, t0.c1, t0.c0, x'2233'))))<=(t0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c1, t0.c2, t0.c0, t0.c0, 0X1c63ec7b)) NOT BETWEEN ((t0.c0, t0.c2, t0.c1, t0.c1, t0.c0)) AND ((x'', t0.c0, t0.c1, t0.c0, x'2233'))))<=(t0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((t0.c1, t0.c2, t0.c0, t0.c0, 0x1c63ec7b)) NOT BETWEEN ((t0.c0, t0.c2, t0.c1, t0.c1, t0.c0)) AND ((x'', t0.c0, t0.c1, t0.c0, x'2233'))))<=(t0.c1 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt1, vt0 WHERE (x'd038') ORDER BY CAST(rt1.c2 COLLATE NOCASE AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((x'd038') IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST(rt1.c2 COLLATE NOCASE AS TEXT));
SELECT COUNT(*) FROM rt1, vt0 WHERE (x'd038') ORDER BY CAST(rt1.c2 COLLATE NOCASE AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((x'd038') IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST(rt1.c2 COLLATE NOCASE AS TEXT));
SELECT COUNT(*) FROM rt1, vt0 WHERE (x'd038') ORDER BY CAST(rt1.c2 COLLATE NOCASE AS TEXT);
SELECT * FROM rt1, vt0, t0 WHERE (((CASE rt1.c0  WHEN rt1.c1 THEN t0.c1 WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c1 THEN t0.c0 END)<<(CASE t0.c2  WHEN t0.c2 THEN t0.c0 END))) ORDER BY CASE WHEN -7.97293162E8 THEN ((((NULL)AND('0.7085595015661386')))OR(t0.c1)) WHEN rt1.c1 COLLATE RTRIM THEN CAST(0.7238810932757683 AS BLOB) WHEN ((x'') NOT BETWEEN (rt1.c2) AND (vt0.c0)) THEN t0.c0 COLLATE NOCASE END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c0  WHEN rt1.c1 THEN t0.c1 WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c1 THEN t0.c0 END)<<(CASE t0.c2  WHEN t0.c2 THEN t0.c0 END))) IS TRUE)  as count FROM rt1, vt0, t0 ORDER BY CASE WHEN -7.97293162E8 THEN ((((NULL)AND('0.7085595015661386')))OR(t0.c1)) WHEN rt1.c1 COLLATE RTRIM THEN CAST(0.7238810932757683 AS BLOB) WHEN ((x'') NOT BETWEEN (rt1.c2) AND (vt0.c0)) THEN t0.c0 COLLATE NOCASE END DESC  NULLS FIRST);
SELECT * FROM rt1, vt0, t0 WHERE (((CASE rt1.c0  WHEN rt1.c1 THEN t0.c1 WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c1 THEN t0.c0 END)<<(CASE t0.c2  WHEN t0.c2 THEN t0.c0 END))) ORDER BY CASE WHEN -7.97293162E8 THEN ((((NULL)AND('0.7085595015661386')))OR(t0.c1)) WHEN rt1.c1 COLLATE RTRIM THEN CAST(0.7238810932757683 AS BLOB) WHEN ((x'') NOT BETWEEN (rt1.c2) AND (vt0.c0)) THEN t0.c0 COLLATE NOCASE END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c0  WHEN rt1.c1 THEN t0.c1 WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c1 THEN t0.c0 END)<<(CASE t0.c2  WHEN t0.c2 THEN t0.c0 END))) IS TRUE)  as count FROM rt1, vt0, t0 ORDER BY CASE WHEN -7.97293162E8 THEN ((((NULL)AND('0.7085595015661386')))OR(t0.c1)) WHEN rt1.c1 COLLATE RTRIM THEN CAST(0.7238810932757683 AS BLOB) WHEN ((x'') NOT BETWEEN (rt1.c2) AND (vt0.c0)) THEN t0.c0 COLLATE NOCASE END DESC  NULLS FIRST);
SELECT * FROM rt1, vt0, t0 WHERE (((CASE rt1.c0  WHEN rt1.c1 THEN t0.c1 WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c1 THEN t0.c0 END)<<(CASE t0.c2  WHEN t0.c2 THEN t0.c0 END))) ORDER BY CASE WHEN -7.97293162E8 THEN ((((NULL)AND('0.7085595015661386')))OR(t0.c1)) WHEN rt1.c1 COLLATE RTRIM THEN CAST(0.7238810932757683 AS BLOB) WHEN ((x'') NOT BETWEEN (rt1.c2) AND (vt0.c0)) THEN t0.c0 COLLATE NOCASE END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0, rt1 WHERE (CASE WHEN (rt1.c0 IN ()) THEN ((vt0.c0) NOTNULL) WHEN NULLIF(t0.c2, t0.c1) THEN t0.c0 COLLATE BINARY WHEN (t0.c0 IN ()) THEN ((rt1.c0)-(rt1.c1)) ELSE ((((((((((((rt1.c2)OR(t0.c2)))AND(t0.c1)))AND(t0.c0)))OR(rt1.c1)))AND(t0.c1)))AND(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt1.c0 IN ()) THEN ((vt0.c0) NOTNULL) WHEN NULLIF(t0.c2, t0.c1) THEN t0.c0 COLLATE BINARY WHEN (t0.c0 IN ()) THEN ((rt1.c0)-(rt1.c1)) ELSE ((((((((((((rt1.c2)OR(t0.c2)))AND(t0.c1)))AND(t0.c0)))OR(rt1.c1)))AND(t0.c1)))AND(t0.c0)) END) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT ALL COUNT(*) FROM t0, vt0, rt1 WHERE (CASE WHEN (rt1.c0 IN ()) THEN ((vt0.c0) NOTNULL) WHEN NULLIF(t0.c2, t0.c1) THEN t0.c0 COLLATE BINARY WHEN (t0.c0 IN ()) THEN ((rt1.c0)-(rt1.c1)) ELSE ((((((((((((rt1.c2)OR(t0.c2)))AND(t0.c1)))AND(t0.c0)))OR(rt1.c1)))AND(t0.c1)))AND(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt1.c0 IN ()) THEN ((vt0.c0) NOTNULL) WHEN NULLIF(t0.c2, t0.c1) THEN t0.c0 COLLATE BINARY WHEN (t0.c0 IN ()) THEN ((rt1.c0)-(rt1.c1)) ELSE ((((((((((((rt1.c2)OR(t0.c2)))AND(t0.c1)))AND(t0.c0)))OR(rt1.c1)))AND(t0.c1)))AND(t0.c0)) END) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT ALL COUNT(*) FROM t0, vt0, rt1 WHERE (CASE WHEN (rt1.c0 IN ()) THEN ((vt0.c0) NOTNULL) WHEN NULLIF(t0.c2, t0.c1) THEN t0.c0 COLLATE BINARY WHEN (t0.c0 IN ()) THEN ((rt1.c0)-(rt1.c1)) ELSE ((((((((((((rt1.c2)OR(t0.c2)))AND(t0.c1)))AND(t0.c0)))OR(rt1.c1)))AND(t0.c1)))AND(t0.c0)) END);
SELECT * FROM t0, rt1, vt0 WHERE (((((t0.c1)IS(rt1.c0))) IS TRUE)) ORDER BY t0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c1)IS(rt1.c0))) IS TRUE)) IS TRUE)  as count FROM t0, rt1, vt0 ORDER BY t0.c2  NULLS LAST);
SELECT * FROM t0, rt1, vt0 WHERE (((((t0.c1)IS(rt1.c0))) IS TRUE)) ORDER BY t0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c1)IS(rt1.c0))) IS TRUE)) IS TRUE)  as count FROM t0, rt1, vt0 ORDER BY t0.c2  NULLS LAST);
SELECT * FROM t0, rt1, vt0 WHERE (((((t0.c1)IS(rt1.c0))) IS TRUE)) ORDER BY t0.c2  NULLS LAST;
SELECT * FROM t0, rt1 WHERE ((((((rt1.c2, t0.c1, t0.c2)) BETWEEN ((t0.c0, t0.c2, rt1.c2)) AND ((t0.c0, rt1.c2, ''))))+(SUBSTR(t0.c0, x'3991'))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2, t0.c1, t0.c2)) BETWEEN ((t0.c0, t0.c2, rt1.c2)) AND ((t0.c0, rt1.c2, ''))))+(SUBSTR(t0.c0, x'3991')))) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE ((((((rt1.c2, t0.c1, t0.c2)) BETWEEN ((t0.c0, t0.c2, rt1.c2)) AND ((t0.c0, rt1.c2, ''))))+(SUBSTR(t0.c0, x'3991'))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2, t0.c1, t0.c2)) BETWEEN ((t0.c0, t0.c2, rt1.c2)) AND ((t0.c0, rt1.c2, ''))))+(SUBSTR(t0.c0, x'3991')))) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE ((((((rt1.c2, t0.c1, t0.c2)) BETWEEN ((t0.c0, t0.c2, rt1.c2)) AND ((t0.c0, rt1.c2, ''))))+(SUBSTR(t0.c0, x'3991'))));
SELECT * FROM t0, vt0 WHERE (t0.c1) ORDER BY LIKELIHOOD(DISTINCT vt0.c0, 0.33786929205820093) COLLATE NOCASE DESC, t0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0, vt0 ORDER BY LIKELIHOOD(DISTINCT vt0.c0, 0.33786929205820093) COLLATE NOCASE DESC, t0.c1  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (t0.c1) ORDER BY LIKELIHOOD(DISTINCT vt0.c0, 0.33786929205820093) COLLATE NOCASE DESC, t0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0, vt0 ORDER BY LIKELIHOOD(DISTINCT vt0.c0, 0.33786929205820093) COLLATE NOCASE DESC, t0.c1  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (t0.c1) ORDER BY LIKELIHOOD(DISTINCT vt0.c0, 0.33786929205820093) COLLATE NOCASE DESC, t0.c1  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (LIKELIHOOD(DISTINCT (- (rt1.c2)), 0.9487443399656986)) ORDER BY ((((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c1)))OR(rt1.c1)))>>(((0.4491764890982315)=(rt1.c0)))) DESC  NULLS FIRST, TRIM(rt1.c2, rt1.c1) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT (- (rt1.c2)), 0.9487443399656986)) IS TRUE)  as count FROM rt1 ORDER BY ((((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c1)))OR(rt1.c1)))>>(((0.4491764890982315)=(rt1.c0)))) DESC  NULLS FIRST, TRIM(rt1.c2, rt1.c1) COLLATE NOCASE);
SELECT ALL * FROM rt1 WHERE (LIKELIHOOD(DISTINCT (- (rt1.c2)), 0.9487443399656986)) ORDER BY ((((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c1)))OR(rt1.c1)))>>(((0.4491764890982315)=(rt1.c0)))) DESC  NULLS FIRST, TRIM(rt1.c2, rt1.c1) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT (- (rt1.c2)), 0.9487443399656986)) IS TRUE)  as count FROM rt1 ORDER BY ((((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c1)))OR(rt1.c1)))>>(((0.4491764890982315)=(rt1.c0)))) DESC  NULLS FIRST, TRIM(rt1.c2, rt1.c1) COLLATE NOCASE);
SELECT ALL * FROM rt1 WHERE (LIKELIHOOD(DISTINCT (- (rt1.c2)), 0.9487443399656986)) ORDER BY ((((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c1)))OR(rt1.c1)))>>(((0.4491764890982315)=(rt1.c0)))) DESC  NULLS FIRST, TRIM(rt1.c2, rt1.c1) COLLATE NOCASE;
SELECT COUNT(*) FROM t0, rt1, vt0 WHERE (((t0.c2) BETWEEN (t0.c2) AND (t0.c0)) COLLATE BINARY) ORDER BY ((rt1.c2) NOTNULL) COLLATE NOCASE ASC  NULLS LAST, ((rt1.c0 COLLATE BINARY) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2) BETWEEN (t0.c2) AND (t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, rt1, vt0 ORDER BY ((rt1.c2) NOTNULL) COLLATE NOCASE ASC  NULLS LAST, ((rt1.c0 COLLATE BINARY) ISNULL));
SELECT COUNT(*) FROM t0, rt1, vt0 WHERE (((t0.c2) BETWEEN (t0.c2) AND (t0.c0)) COLLATE BINARY) ORDER BY ((rt1.c2) NOTNULL) COLLATE NOCASE ASC  NULLS LAST, ((rt1.c0 COLLATE BINARY) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2) BETWEEN (t0.c2) AND (t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, rt1, vt0 ORDER BY ((rt1.c2) NOTNULL) COLLATE NOCASE ASC  NULLS LAST, ((rt1.c0 COLLATE BINARY) ISNULL));
SELECT COUNT(*) FROM t0, rt1, vt0 WHERE (((t0.c2) BETWEEN (t0.c2) AND (t0.c0)) COLLATE BINARY) ORDER BY ((rt1.c2) NOTNULL) COLLATE NOCASE ASC  NULLS LAST, ((rt1.c0 COLLATE BINARY) ISNULL);
SELECT ALL * FROM t0 WHERE (((0.32277531265936754) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((0.32277531265936754) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((0.32277531265936754) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((0.32277531265936754) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((0.32277531265936754) IS FALSE));
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1, t0);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1, t0);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (rt1.c2);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((- (CASE WHEN rt1.c1 THEN x'' ELSE rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN rt1.c1 THEN x'' ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((- (CASE WHEN rt1.c1 THEN x'' ELSE rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN rt1.c1 THEN x'' ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((- (CASE WHEN rt1.c1 THEN x'' ELSE rt1.c2 END)));
SELECT * FROM rt1, vt0, t0 WHERE ((('JyhA')/(t0.c2)));
SELECT SUM(count) FROM (SELECT (((('JyhA')/(t0.c2))) IS TRUE)  as count FROM rt1, vt0, t0);
SELECT * FROM rt1, vt0, t0 WHERE ((('JyhA')/(t0.c2)));
SELECT SUM(count) FROM (SELECT (((('JyhA')/(t0.c2))) IS TRUE)  as count FROM rt1, vt0, t0);
SELECT * FROM rt1, vt0, t0 WHERE ((('JyhA')/(t0.c2)));
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON ((vt0.c0 COLLATE NOCASE) BETWEEN (((rt1.c2) NOT NULL)) AND ((((vt0.c0))<=((0.6182093139328374))))) INNER JOIN rt1 ON t0.c1 WHERE ((NOT (CASE vt0.c0  WHEN rt1.c0 THEN t0.c0 WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c0 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE vt0.c0  WHEN rt1.c0 THEN t0.c0 WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((vt0.c0 COLLATE NOCASE) BETWEEN (((rt1.c2) NOT NULL)) AND ((((vt0.c0))<=((0.6182093139328374))))) INNER JOIN rt1 ON t0.c1);
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON ((vt0.c0 COLLATE NOCASE) BETWEEN (((rt1.c2) NOT NULL)) AND ((((vt0.c0))<=((0.6182093139328374))))) INNER JOIN rt1 ON t0.c1 WHERE ((NOT (CASE vt0.c0  WHEN rt1.c0 THEN t0.c0 WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c0 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE vt0.c0  WHEN rt1.c0 THEN t0.c0 WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((vt0.c0 COLLATE NOCASE) BETWEEN (((rt1.c2) NOT NULL)) AND ((((vt0.c0))<=((0.6182093139328374))))) INNER JOIN rt1 ON t0.c1);
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON ((vt0.c0 COLLATE NOCASE) BETWEEN (((rt1.c2) NOT NULL)) AND ((((vt0.c0))<=((0.6182093139328374))))) INNER JOIN rt1 ON t0.c1 WHERE ((NOT (CASE vt0.c0  WHEN rt1.c0 THEN t0.c0 WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c0 ELSE t0.c0 END)));
SELECT ALL * FROM t0 WHERE (((((t0.c0) IS FALSE)) NOTNULL)) ORDER BY ((t0.c0 IN ()) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0 IN ()) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((t0.c0) IS FALSE)) NOTNULL)) ORDER BY ((t0.c0 IN ()) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0 IN ()) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((t0.c0) IS FALSE)) NOTNULL)) ORDER BY ((t0.c0 IN ()) IN ()) DESC  NULLS LAST;
SELECT * FROM vt0, t0 WHERE ((- (t0.c0)) COLLATE RTRIM) ORDER BY ((((vt0.c0)OR(t0.c1)))OR(t0.c0)) COLLATE RTRIM, (((((t0.c1) NOTNULL), (t0.c0 IN ()), CAST(t0.c1 AS NUMERIC)))>((vt0.c0 COLLATE BINARY, t0.c0 COLLATE RTRIM, CAST(t0.c1 AS BLOB))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0)OR(t0.c1)))OR(t0.c0)) COLLATE RTRIM, (((((t0.c1) NOTNULL), (t0.c0 IN ()), CAST(t0.c1 AS NUMERIC)))>((vt0.c0 COLLATE BINARY, t0.c0 COLLATE RTRIM, CAST(t0.c1 AS BLOB))))  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE ((- (t0.c0)) COLLATE RTRIM) ORDER BY ((((vt0.c0)OR(t0.c1)))OR(t0.c0)) COLLATE RTRIM, (((((t0.c1) NOTNULL), (t0.c0 IN ()), CAST(t0.c1 AS NUMERIC)))>((vt0.c0 COLLATE BINARY, t0.c0 COLLATE RTRIM, CAST(t0.c1 AS BLOB))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0)OR(t0.c1)))OR(t0.c0)) COLLATE RTRIM, (((((t0.c1) NOTNULL), (t0.c0 IN ()), CAST(t0.c1 AS NUMERIC)))>((vt0.c0 COLLATE BINARY, t0.c0 COLLATE RTRIM, CAST(t0.c1 AS BLOB))))  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE ((- (t0.c0)) COLLATE RTRIM) ORDER BY ((((vt0.c0)OR(t0.c1)))OR(t0.c0)) COLLATE RTRIM, (((((t0.c1) NOTNULL), (t0.c0 IN ()), CAST(t0.c1 AS NUMERIC)))>((vt0.c0 COLLATE BINARY, t0.c0 COLLATE RTRIM, CAST(t0.c1 AS BLOB))))  NULLS FIRST;
SELECT * FROM t0, rt1 WHERE (-7.87283649E8);
SELECT SUM(count) FROM (SELECT ((-7.87283649E8) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (-7.87283649E8);
SELECT SUM(count) FROM (SELECT ((-7.87283649E8) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (-7.87283649E8);
SELECT ALL * FROM vt0, rt1, t0 WHERE (CASE ((t0.c1) ISNULL)  WHEN (((rt1.c1)) NOT BETWEEN ((t0.c2)) AND ((rt1.c1))) THEN x'6781' ELSE CASE WHEN rt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c1 WHEN t0.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 WHEN t0.c2 THEN t0.c0 ELSE rt1.c2 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c1) ISNULL)  WHEN (((rt1.c1)) NOT BETWEEN ((t0.c2)) AND ((rt1.c1))) THEN x'6781' ELSE CASE WHEN rt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c1 WHEN t0.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 WHEN t0.c2 THEN t0.c0 ELSE rt1.c2 END END) IS TRUE)  as count FROM vt0, rt1, t0);
SELECT ALL * FROM vt0, rt1, t0 WHERE (CASE ((t0.c1) ISNULL)  WHEN (((rt1.c1)) NOT BETWEEN ((t0.c2)) AND ((rt1.c1))) THEN x'6781' ELSE CASE WHEN rt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c1 WHEN t0.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 WHEN t0.c2 THEN t0.c0 ELSE rt1.c2 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c1) ISNULL)  WHEN (((rt1.c1)) NOT BETWEEN ((t0.c2)) AND ((rt1.c1))) THEN x'6781' ELSE CASE WHEN rt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c1 WHEN t0.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 WHEN t0.c2 THEN t0.c0 ELSE rt1.c2 END END) IS TRUE)  as count FROM vt0, rt1, t0);
SELECT ALL * FROM vt0, rt1, t0 WHERE (CASE ((t0.c1) ISNULL)  WHEN (((rt1.c1)) NOT BETWEEN ((t0.c2)) AND ((rt1.c1))) THEN x'6781' ELSE CASE WHEN rt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c1 WHEN t0.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 WHEN t0.c2 THEN t0.c0 ELSE rt1.c2 END END);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ ((rt1.c0 IN ())))) ORDER BY (NOT (rt1.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((+ ((rt1.c0 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY (NOT (rt1.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ ((rt1.c0 IN ())))) ORDER BY (NOT (rt1.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((+ ((rt1.c0 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY (NOT (rt1.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ ((rt1.c0 IN ())))) ORDER BY (NOT (rt1.c0)) COLLATE BINARY;
SELECT * FROM t0, rt1 WHERE ((((NULL)) NOT BETWEEN ((CASE t0.c1  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END)) AND ((COALESCE(DISTINCT rt1.c0, t0.c2)))));
SELECT SUM(count) FROM (SELECT (((((NULL)) NOT BETWEEN ((CASE t0.c1  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END)) AND ((COALESCE(DISTINCT rt1.c0, t0.c2))))) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE ((((NULL)) NOT BETWEEN ((CASE t0.c1  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END)) AND ((COALESCE(DISTINCT rt1.c0, t0.c2)))));
SELECT SUM(count) FROM (SELECT (((((NULL)) NOT BETWEEN ((CASE t0.c1  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END)) AND ((COALESCE(DISTINCT rt1.c0, t0.c2))))) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE ((((NULL)) NOT BETWEEN ((CASE t0.c1  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END)) AND ((COALESCE(DISTINCT rt1.c0, t0.c2)))));
SELECT * FROM t0, rt1, vt0 WHERE (((t0.c0) NOTNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt1, vt0);
SELECT * FROM t0, rt1, vt0 WHERE (((t0.c0) NOTNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt1, vt0);
SELECT * FROM t0, rt1, vt0 WHERE (((t0.c0) NOTNULL) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, rt1 RIGHT OUTER JOIN t0 ON ((((((vt0.c0)OR(rt1.c2)))OR(t0.c0))) ISNULL) WHERE (((59631530) NOT BETWEEN ((NOT (x''))) AND (LTRIM(rt1.c2, rt1.c0))));
SELECT SUM(count) FROM (SELECT ((((59631530) NOT BETWEEN ((NOT (x''))) AND (LTRIM(rt1.c2, rt1.c0)))) IS TRUE)  as count FROM vt0, rt1 RIGHT OUTER JOIN t0 ON ((((((vt0.c0)OR(rt1.c2)))OR(t0.c0))) ISNULL));
SELECT COUNT(*) FROM vt0, rt1 RIGHT OUTER JOIN t0 ON ((((((vt0.c0)OR(rt1.c2)))OR(t0.c0))) ISNULL) WHERE (((59631530) NOT BETWEEN ((NOT (x''))) AND (LTRIM(rt1.c2, rt1.c0))));
SELECT SUM(count) FROM (SELECT ((((59631530) NOT BETWEEN ((NOT (x''))) AND (LTRIM(rt1.c2, rt1.c0)))) IS TRUE)  as count FROM vt0, rt1 RIGHT OUTER JOIN t0 ON ((((((vt0.c0)OR(rt1.c2)))OR(t0.c0))) ISNULL));
SELECT COUNT(*) FROM vt0, rt1 RIGHT OUTER JOIN t0 ON ((((((vt0.c0)OR(rt1.c2)))OR(t0.c0))) ISNULL) WHERE (((59631530) NOT BETWEEN ((NOT (x''))) AND (LTRIM(rt1.c2, rt1.c0))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)>>(t0.c2)))&(CASE WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END))) ORDER BY t0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)>>(t0.c2)))&(CASE WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)>>(t0.c2)))&(CASE WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END))) ORDER BY t0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)>>(t0.c2)))&(CASE WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)>>(t0.c2)))&(CASE WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END))) ORDER BY t0.c0 ASC;
SELECT ALL * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((((t0.c0) NOT NULL))) AND ((x'caf3dedf'))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) NOT BETWEEN ((((t0.c0) NOT NULL))) AND ((x'caf3dedf')))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((((t0.c0) NOT NULL))) AND ((x'caf3dedf'))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) NOT BETWEEN ((((t0.c0) NOT NULL))) AND ((x'caf3dedf')))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((((t0.c0) NOT NULL))) AND ((x'caf3dedf'))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt1 ON CAST(((rt1.c0)+(rt1.c2)) AS NUMERIC) WHERE (CAST((~ (rt1.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt1.c2)) AS TEXT)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON CAST(((rt1.c0)+(rt1.c2)) AS NUMERIC));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt1 ON CAST(((rt1.c0)+(rt1.c2)) AS NUMERIC) WHERE (CAST((~ (rt1.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt1.c2)) AS TEXT)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON CAST(((rt1.c0)+(rt1.c2)) AS NUMERIC));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt1 ON CAST(((rt1.c0)+(rt1.c2)) AS NUMERIC) WHERE (CAST((~ (rt1.c2)) AS TEXT));
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (0.6382024994768877) ORDER BY (((LIKELIHOOD(t0.c1, 0.4115262739102806)))<>((((t0.c2) ISNULL)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.6382024994768877) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY (((LIKELIHOOD(t0.c1, 0.4115262739102806)))<>((((t0.c2) ISNULL)))) ASC);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (0.6382024994768877) ORDER BY (((LIKELIHOOD(t0.c1, 0.4115262739102806)))<>((((t0.c2) ISNULL)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.6382024994768877) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY (((LIKELIHOOD(t0.c1, 0.4115262739102806)))<>((((t0.c2) ISNULL)))) ASC);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (0.6382024994768877) ORDER BY (((LIKELIHOOD(t0.c1, 0.4115262739102806)))<>((((t0.c2) ISNULL)))) ASC;
SELECT * FROM vt0, rt1 WHERE ((((NOT (vt0.c0))) NOT BETWEEN (rt1.c1) AND (CASE vt0.c0  WHEN rt1.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((((rt1.c2)%(rt1.c0))) BETWEEN ((+ (rt1.c0))) AND ((NOT (rt1.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) NOT BETWEEN (rt1.c1) AND (CASE vt0.c0  WHEN rt1.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((rt1.c2)%(rt1.c0))) BETWEEN ((+ (rt1.c0))) AND ((NOT (rt1.c1)))) ASC  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE ((((NOT (vt0.c0))) NOT BETWEEN (rt1.c1) AND (CASE vt0.c0  WHEN rt1.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((((rt1.c2)%(rt1.c0))) BETWEEN ((+ (rt1.c0))) AND ((NOT (rt1.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) NOT BETWEEN (rt1.c1) AND (CASE vt0.c0  WHEN rt1.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((rt1.c2)%(rt1.c0))) BETWEEN ((+ (rt1.c0))) AND ((NOT (rt1.c1)))) ASC  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE ((((NOT (vt0.c0))) NOT BETWEEN (rt1.c1) AND (CASE vt0.c0  WHEN rt1.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((((rt1.c2)%(rt1.c0))) BETWEEN ((+ (rt1.c0))) AND ((NOT (rt1.c1)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0, rt1 WHERE ((- ((- (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((- (t0.c0))))) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT ALL COUNT(*) FROM t0, vt0, rt1 WHERE ((- ((- (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((- (t0.c0))))) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT ALL COUNT(*) FROM t0, vt0, rt1 WHERE ((- ((- (t0.c0)))));
SELECT ALL * FROM rt1, vt0, t0 WHERE ((CAST(t0.c1 AS REAL) IN ())) ORDER BY ((rt1.c2)GLOB(rt1.c2)), ((rtreenode(t0.c0, t0.c2)) ISNULL)  NULLS FIRST, ((((((((((t0.c2)<(rt1.c2)))AND((~ (t0.c1)))))OR((t0.c2 IN ()))))OR((t0.c2 IN ()))))AND(ABS(DISTINCT 0.3312308501940716))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(t0.c1 AS REAL) IN ())) IS TRUE)  as count FROM rt1, vt0, t0 ORDER BY ((rt1.c2)GLOB(rt1.c2)), ((rtreenode(t0.c0, t0.c2)) ISNULL)  NULLS FIRST, ((((((((((t0.c2)<(rt1.c2)))AND((~ (t0.c1)))))OR((t0.c2 IN ()))))OR((t0.c2 IN ()))))AND(ABS(DISTINCT 0.3312308501940716))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, vt0, t0 WHERE ((CAST(t0.c1 AS REAL) IN ())) ORDER BY ((rt1.c2)GLOB(rt1.c2)), ((rtreenode(t0.c0, t0.c2)) ISNULL)  NULLS FIRST, ((((((((((t0.c2)<(rt1.c2)))AND((~ (t0.c1)))))OR((t0.c2 IN ()))))OR((t0.c2 IN ()))))AND(ABS(DISTINCT 0.3312308501940716))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(t0.c1 AS REAL) IN ())) IS TRUE)  as count FROM rt1, vt0, t0 ORDER BY ((rt1.c2)GLOB(rt1.c2)), ((rtreenode(t0.c0, t0.c2)) ISNULL)  NULLS FIRST, ((((((((((t0.c2)<(rt1.c2)))AND((~ (t0.c1)))))OR((t0.c2 IN ()))))OR((t0.c2 IN ()))))AND(ABS(DISTINCT 0.3312308501940716))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, vt0, t0 WHERE ((CAST(t0.c1 AS REAL) IN ())) ORDER BY ((rt1.c2)GLOB(rt1.c2)), ((rtreenode(t0.c0, t0.c2)) ISNULL)  NULLS FIRST, ((((((((((t0.c2)<(rt1.c2)))AND((~ (t0.c1)))))OR((t0.c2 IN ()))))OR((t0.c2 IN ()))))AND(ABS(DISTINCT 0.3312308501940716))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((LOWER(vt0.c0)) BETWEEN (((vt0.c0) IS FALSE)) AND ((('')OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(vt0.c0)) BETWEEN (((vt0.c0) IS FALSE)) AND ((('')OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((LOWER(vt0.c0)) BETWEEN (((vt0.c0) IS FALSE)) AND ((('')OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(vt0.c0)) BETWEEN (((vt0.c0) IS FALSE)) AND ((('')OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((LOWER(vt0.c0)) BETWEEN (((vt0.c0) IS FALSE)) AND ((('')OR(vt0.c0)))));
SELECT COUNT(*) FROM t0 WHERE (0.8465749283607035) ORDER BY (+ (((((((((t0.c2)AND(t0.c1)))AND(t0.c0)))OR(t0.c0)))OR('**'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.8465749283607035) IS TRUE)  as count FROM t0 ORDER BY (+ (((((((((t0.c2)AND(t0.c1)))AND(t0.c0)))OR(t0.c0)))OR('**'))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (0.8465749283607035) ORDER BY (+ (((((((((t0.c2)AND(t0.c1)))AND(t0.c0)))OR(t0.c0)))OR('**'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.8465749283607035) IS TRUE)  as count FROM t0 ORDER BY (+ (((((((((t0.c2)AND(t0.c1)))AND(t0.c0)))OR(t0.c0)))OR('**'))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (0.8465749283607035) ORDER BY (+ (((((((((t0.c2)AND(t0.c1)))AND(t0.c0)))OR(t0.c0)))OR('**'))))  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt1, vt0 WHERE (((((rt1.c2) NOT BETWEEN (vt0.c0) AND (rt1.c0))) IS FALSE)) ORDER BY CAST((((rt1.c1, rt1.c0, vt0.c0))<=((t0.c1, t0.c0, rt1.c1))) AS INTEGER)  NULLS FIRST, CAST(((t0.c2) NOT BETWEEN (t0.c1) AND (vt0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOT BETWEEN (vt0.c0) AND (rt1.c0))) IS FALSE)) IS TRUE)  as count FROM t0, rt1, vt0 ORDER BY CAST((((rt1.c1, rt1.c0, vt0.c0))<=((t0.c1, t0.c0, rt1.c1))) AS INTEGER)  NULLS FIRST, CAST(((t0.c2) NOT BETWEEN (t0.c1) AND (vt0.c0)) AS BLOB));
SELECT COUNT(*) FROM t0, rt1, vt0 WHERE (((((rt1.c2) NOT BETWEEN (vt0.c0) AND (rt1.c0))) IS FALSE)) ORDER BY CAST((((rt1.c1, rt1.c0, vt0.c0))<=((t0.c1, t0.c0, rt1.c1))) AS INTEGER)  NULLS FIRST, CAST(((t0.c2) NOT BETWEEN (t0.c1) AND (vt0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOT BETWEEN (vt0.c0) AND (rt1.c0))) IS FALSE)) IS TRUE)  as count FROM t0, rt1, vt0 ORDER BY CAST((((rt1.c1, rt1.c0, vt0.c0))<=((t0.c1, t0.c0, rt1.c1))) AS INTEGER)  NULLS FIRST, CAST(((t0.c2) NOT BETWEEN (t0.c1) AND (vt0.c0)) AS BLOB));
SELECT COUNT(*) FROM t0, rt1, vt0 WHERE (((((rt1.c2) NOT BETWEEN (vt0.c0) AND (rt1.c0))) IS FALSE)) ORDER BY CAST((((rt1.c1, rt1.c0, vt0.c0))<=((t0.c1, t0.c0, rt1.c1))) AS INTEGER)  NULLS FIRST, CAST(((t0.c2) NOT BETWEEN (t0.c1) AND (vt0.c0)) AS BLOB);
SELECT COUNT(*) FROM rt1, vt0, t0 WHERE (CAST(x'' AS NUMERIC)) ORDER BY HEX(((rt1.c1) BETWEEN (t0.c2) AND (rt1.c0)))  NULLS LAST, 0.64922667764105 ASC  NULLS LAST, CASE (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((-2074340826)))  WHEN 0.43528476833506435 THEN ((vt0.c0) NOTNULL) WHEN rt1.c2 THEN NULL WHEN (rt1.c1 IN ()) THEN ((((rt1.c0)AND(t0.c2)))AND(t0.c2)) ELSE t0.c1 END;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS NUMERIC)) IS TRUE)  as count FROM rt1, vt0, t0 ORDER BY HEX(((rt1.c1) BETWEEN (t0.c2) AND (rt1.c0)))  NULLS LAST, 0.64922667764105 ASC  NULLS LAST, CASE (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((-2074340826)))  WHEN 0.43528476833506435 THEN ((vt0.c0) NOTNULL) WHEN rt1.c2 THEN NULL WHEN (rt1.c1 IN ()) THEN ((((rt1.c0)AND(t0.c2)))AND(t0.c2)) ELSE t0.c1 END);
SELECT COUNT(*) FROM rt1, vt0, t0 WHERE (CAST(x'' AS NUMERIC)) ORDER BY HEX(((rt1.c1) BETWEEN (t0.c2) AND (rt1.c0)))  NULLS LAST, 0.64922667764105 ASC  NULLS LAST, CASE (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((-2074340826)))  WHEN 0.43528476833506435 THEN ((vt0.c0) NOTNULL) WHEN rt1.c2 THEN NULL WHEN (rt1.c1 IN ()) THEN ((((rt1.c0)AND(t0.c2)))AND(t0.c2)) ELSE t0.c1 END;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS NUMERIC)) IS TRUE)  as count FROM rt1, vt0, t0 ORDER BY HEX(((rt1.c1) BETWEEN (t0.c2) AND (rt1.c0)))  NULLS LAST, 0.64922667764105 ASC  NULLS LAST, CASE (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((-2074340826)))  WHEN 0.43528476833506435 THEN ((vt0.c0) NOTNULL) WHEN rt1.c2 THEN NULL WHEN (rt1.c1 IN ()) THEN ((((rt1.c0)AND(t0.c2)))AND(t0.c2)) ELSE t0.c1 END);
SELECT COUNT(*) FROM rt1, vt0, t0 WHERE (CAST(x'' AS NUMERIC)) ORDER BY HEX(((rt1.c1) BETWEEN (t0.c2) AND (rt1.c0)))  NULLS LAST, 0.64922667764105 ASC  NULLS LAST, CASE (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((-2074340826)))  WHEN 0.43528476833506435 THEN ((vt0.c0) NOTNULL) WHEN rt1.c2 THEN NULL WHEN (rt1.c1 IN ()) THEN ((((rt1.c0)AND(t0.c2)))AND(t0.c2)) ELSE t0.c1 END;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)%(vt0.c0))) BETWEEN (((vt0.c0)<=(vt0.c0))) AND (vt0.c0 COLLATE BINARY))) ORDER BY SQLITE_VERSION()  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)%(vt0.c0))) BETWEEN (((vt0.c0)<=(vt0.c0))) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY SQLITE_VERSION()  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)%(vt0.c0))) BETWEEN (((vt0.c0)<=(vt0.c0))) AND (vt0.c0 COLLATE BINARY))) ORDER BY SQLITE_VERSION()  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)%(vt0.c0))) BETWEEN (((vt0.c0)<=(vt0.c0))) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY SQLITE_VERSION()  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)%(vt0.c0))) BETWEEN (((vt0.c0)<=(vt0.c0))) AND (vt0.c0 COLLATE BINARY))) ORDER BY SQLITE_VERSION()  NULLS LAST;
SELECT * FROM vt0 WHERE (CASE ((vt0.c0)&(vt0.c0))  WHEN (vt0.c0 IN ()) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0Xffffffff90970811 ELSE vt0.c0 END END) ORDER BY CAST(INSTR(vt0.c0, vt0.c0) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)&(vt0.c0))  WHEN (vt0.c0 IN ()) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0xffffffff90970811 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY CAST(INSTR(vt0.c0, vt0.c0) AS TEXT)  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE ((vt0.c0)&(vt0.c0))  WHEN (vt0.c0 IN ()) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0Xffffffff90970811 ELSE vt0.c0 END END) ORDER BY CAST(INSTR(vt0.c0, vt0.c0) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)&(vt0.c0))  WHEN (vt0.c0 IN ()) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0xffffffff90970811 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY CAST(INSTR(vt0.c0, vt0.c0) AS TEXT)  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE ((vt0.c0)&(vt0.c0))  WHEN (vt0.c0 IN ()) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0Xffffffff90970811 ELSE vt0.c0 END END) ORDER BY CAST(INSTR(vt0.c0, vt0.c0) AS TEXT)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) IS FALSE), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-1843580009' WHEN vt0.c0 THEN NULL ELSE vt0.c0 END, ((vt0.c0)&(vt0.c0)))) AND (('-1007371183', COALESCE(DISTINCT vt0.c0, vt0.c0), ((vt0.c0)+(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) IS FALSE), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-1843580009' WHEN vt0.c0 THEN NULL ELSE vt0.c0 END, ((vt0.c0)&(vt0.c0)))) AND (('-1007371183', COALESCE(DISTINCT vt0.c0, vt0.c0), ((vt0.c0)+(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) IS FALSE), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-1843580009' WHEN vt0.c0 THEN NULL ELSE vt0.c0 END, ((vt0.c0)&(vt0.c0)))) AND (('-1007371183', COALESCE(DISTINCT vt0.c0, vt0.c0), ((vt0.c0)+(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) IS FALSE), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-1843580009' WHEN vt0.c0 THEN NULL ELSE vt0.c0 END, ((vt0.c0)&(vt0.c0)))) AND (('-1007371183', COALESCE(DISTINCT vt0.c0, vt0.c0), ((vt0.c0)+(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) IS FALSE), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-1843580009' WHEN vt0.c0 THEN NULL ELSE vt0.c0 END, ((vt0.c0)&(vt0.c0)))) AND (('-1007371183', COALESCE(DISTINCT vt0.c0, vt0.c0), ((vt0.c0)+(vt0.c0))))));
SELECT ALL * FROM rt1, vt0 WHERE (CAST(rt1.c1 AS BLOB) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c1 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (CAST(rt1.c1 AS BLOB) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c1 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (CAST(rt1.c1 AS BLOB) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT * FROM vt0, rt1, t0 WHERE ((+ (rt1.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((+ (rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt1, t0);
SELECT * FROM vt0, rt1, t0 WHERE ((+ (rt1.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((+ (rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt1, t0);
SELECT * FROM vt0, rt1, t0 WHERE ((+ (rt1.c2 COLLATE NOCASE)));
SELECT * FROM t0, vt0, rt1 WHERE ((('1239695574') NOTNULL)) ORDER BY (- ((t0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('1239695574') NOTNULL)) IS TRUE)  as count FROM t0, vt0, rt1 ORDER BY (- ((t0.c0 IN ()))) DESC  NULLS LAST);
SELECT * FROM t0, vt0, rt1 WHERE ((('1239695574') NOTNULL)) ORDER BY (- ((t0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('1239695574') NOTNULL)) IS TRUE)  as count FROM t0, vt0, rt1 ORDER BY (- ((t0.c0 IN ()))) DESC  NULLS LAST);
SELECT * FROM t0, vt0, rt1 WHERE ((('1239695574') NOTNULL)) ORDER BY (- ((t0.c0 IN ()))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOT NULL)) ORDER BY (- (CAST(vt0.c0 AS REAL))) ASC  NULLS LAST, ((((vt0.c0)<('-1622632125')))IS NOT((vt0.c0 IN (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER)) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY (- (CAST(vt0.c0 AS REAL))) ASC  NULLS LAST, ((((vt0.c0)<('-1622632125')))IS NOT((vt0.c0 IN (vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOT NULL)) ORDER BY (- (CAST(vt0.c0 AS REAL))) ASC  NULLS LAST, ((((vt0.c0)<('-1622632125')))IS NOT((vt0.c0 IN (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER)) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY (- (CAST(vt0.c0 AS REAL))) ASC  NULLS LAST, ((((vt0.c0)<('-1622632125')))IS NOT((vt0.c0 IN (vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOT NULL)) ORDER BY (- (CAST(vt0.c0 AS REAL))) ASC  NULLS LAST, ((((vt0.c0)<('-1622632125')))IS NOT((vt0.c0 IN (vt0.c0)))) ASC;
SELECT * FROM t0, vt0, rt1 WHERE ((((rt1.c1, rt1.c2, rt1.c1)) BETWEEN ((rt1.c1 COLLATE RTRIM, ((t0.c2)|(rt1.c0)), ((rt1.c0) IS TRUE))) AND (((NOT (rt1.c2)), ((t0.c0) NOTNULL), (('-640344650')LIKE(t0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1, rt1.c2, rt1.c1)) BETWEEN ((rt1.c1 COLLATE RTRIM, ((t0.c2)|(rt1.c0)), ((rt1.c0) IS TRUE))) AND (((NOT (rt1.c2)), ((t0.c0) NOTNULL), (('-640344650')LIKE(t0.c2)))))) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT * FROM t0, vt0, rt1 WHERE ((((rt1.c1, rt1.c2, rt1.c1)) BETWEEN ((rt1.c1 COLLATE RTRIM, ((t0.c2)|(rt1.c0)), ((rt1.c0) IS TRUE))) AND (((NOT (rt1.c2)), ((t0.c0) NOTNULL), (('-640344650')LIKE(t0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1, rt1.c2, rt1.c1)) BETWEEN ((rt1.c1 COLLATE RTRIM, ((t0.c2)|(rt1.c0)), ((rt1.c0) IS TRUE))) AND (((NOT (rt1.c2)), ((t0.c0) NOTNULL), (('-640344650')LIKE(t0.c2)))))) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT * FROM t0, vt0, rt1 WHERE ((((rt1.c1, rt1.c2, rt1.c1)) BETWEEN ((rt1.c1 COLLATE RTRIM, ((t0.c2)|(rt1.c0)), ((rt1.c0) IS TRUE))) AND (((NOT (rt1.c2)), ((t0.c0) NOTNULL), (('-640344650')LIKE(t0.c2))))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON CASE WHEN (rt1.c2 IN ()) THEN CAST(vt0.c0 AS NUMERIC) WHEN rt1.c0 COLLATE NOCASE THEN CASE WHEN 0.7238810932757683 THEN vt0.c0 END WHEN rt1.c0 COLLATE BINARY THEN ((rt1.c2) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((rt1.c1)|(rt1.c2)) END WHERE ((((('')AND((rt1.c0 IN (rt1.c2)))))OR(((rt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((('')AND((rt1.c0 IN (rt1.c2)))))OR(((rt1.c0) ISNULL)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON CASE WHEN (rt1.c2 IN ()) THEN CAST(vt0.c0 AS NUMERIC) WHEN rt1.c0 COLLATE NOCASE THEN CASE WHEN 0.7238810932757683 THEN vt0.c0 END WHEN rt1.c0 COLLATE BINARY THEN ((rt1.c2) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((rt1.c1)|(rt1.c2)) END);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON CASE WHEN (rt1.c2 IN ()) THEN CAST(vt0.c0 AS NUMERIC) WHEN rt1.c0 COLLATE NOCASE THEN CASE WHEN 0.7238810932757683 THEN vt0.c0 END WHEN rt1.c0 COLLATE BINARY THEN ((rt1.c2) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((rt1.c1)|(rt1.c2)) END WHERE ((((('')AND((rt1.c0 IN (rt1.c2)))))OR(((rt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((('')AND((rt1.c0 IN (rt1.c2)))))OR(((rt1.c0) ISNULL)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON CASE WHEN (rt1.c2 IN ()) THEN CAST(vt0.c0 AS NUMERIC) WHEN rt1.c0 COLLATE NOCASE THEN CASE WHEN 0.7238810932757683 THEN vt0.c0 END WHEN rt1.c0 COLLATE BINARY THEN ((rt1.c2) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((rt1.c1)|(rt1.c2)) END);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON CASE WHEN (rt1.c2 IN ()) THEN CAST(vt0.c0 AS NUMERIC) WHEN rt1.c0 COLLATE NOCASE THEN CASE WHEN 0.7238810932757683 THEN vt0.c0 END WHEN rt1.c0 COLLATE BINARY THEN ((rt1.c2) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((rt1.c1)|(rt1.c2)) END WHERE ((((('')AND((rt1.c0 IN (rt1.c2)))))OR(((rt1.c0) ISNULL))));
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c1, vt0.c0, t0.c1)) NOT BETWEEN ((t0.c2 COLLATE NOCASE, (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))), NULL)) AND ((((t0.c2) BETWEEN (t0.c0) AND (t0.c2)), ((((vt0.c0)AND(t0.c0)))OR(t0.c1)), ((t0.c0) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1, vt0.c0, t0.c1)) NOT BETWEEN ((t0.c2 COLLATE NOCASE, (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))), NULL)) AND ((((t0.c2) BETWEEN (t0.c0) AND (t0.c2)), ((((vt0.c0)AND(t0.c0)))OR(t0.c1)), ((t0.c0) IS FALSE))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c1, vt0.c0, t0.c1)) NOT BETWEEN ((t0.c2 COLLATE NOCASE, (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))), NULL)) AND ((((t0.c2) BETWEEN (t0.c0) AND (t0.c2)), ((((vt0.c0)AND(t0.c0)))OR(t0.c1)), ((t0.c0) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1, vt0.c0, t0.c1)) NOT BETWEEN ((t0.c2 COLLATE NOCASE, (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))), NULL)) AND ((((t0.c2) BETWEEN (t0.c0) AND (t0.c2)), ((((vt0.c0)AND(t0.c0)))OR(t0.c1)), ((t0.c0) IS FALSE))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c1, vt0.c0, t0.c1)) NOT BETWEEN ((t0.c2 COLLATE NOCASE, (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))), NULL)) AND ((((t0.c2) BETWEEN (t0.c0) AND (t0.c2)), ((((vt0.c0)AND(t0.c0)))OR(t0.c1)), ((t0.c0) IS FALSE)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) IS TRUE)) IS FALSE)) ORDER BY (((x'' IN ()))<((t0.c1 IN (t0.c2)))), (CAST(t0.c1 AS INTEGER) IN ()) ASC  NULLS LAST, ((((((t0.c2) BETWEEN (0.7349752422957792) AND (t0.c2)))AND(((t0.c2) BETWEEN (t0.c0) AND (t0.c2)))))OR('-1167742356'));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY (((x'' IN ()))<((t0.c1 IN (t0.c2)))), (CAST(t0.c1 AS INTEGER) IN ()) ASC  NULLS LAST, ((((((t0.c2) BETWEEN (0.7349752422957792) AND (t0.c2)))AND(((t0.c2) BETWEEN (t0.c0) AND (t0.c2)))))OR('-1167742356')));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) IS TRUE)) IS FALSE)) ORDER BY (((x'' IN ()))<((t0.c1 IN (t0.c2)))), (CAST(t0.c1 AS INTEGER) IN ()) ASC  NULLS LAST, ((((((t0.c2) BETWEEN (0.7349752422957792) AND (t0.c2)))AND(((t0.c2) BETWEEN (t0.c0) AND (t0.c2)))))OR('-1167742356'));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY (((x'' IN ()))<((t0.c1 IN (t0.c2)))), (CAST(t0.c1 AS INTEGER) IN ()) ASC  NULLS LAST, ((((((t0.c2) BETWEEN (0.7349752422957792) AND (t0.c2)))AND(((t0.c2) BETWEEN (t0.c0) AND (t0.c2)))))OR('-1167742356')));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) IS TRUE)) IS FALSE)) ORDER BY (((x'' IN ()))<((t0.c1 IN (t0.c2)))), (CAST(t0.c1 AS INTEGER) IN ()) ASC  NULLS LAST, ((((((t0.c2) BETWEEN (0.7349752422957792) AND (t0.c2)))AND(((t0.c2) BETWEEN (t0.c0) AND (t0.c2)))))OR('-1167742356'));
SELECT ALL COUNT(*) FROM t0, rt1, vt0 INDEXED BY i95 WHERE (CASE WHEN ((rt1.c2)|(rt1.c0)) THEN ((0.1972739847283046) NOT NULL) ELSE ((t0.c0) NOT BETWEEN (NULL) AND (t0.c1)) END) ORDER BY (- ((rt1.c1 IN (rt1.c2)))), ((((rt1.c2)>>(vt0.c0)))/(CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 END)), ((((vt0.c0)%(rt1.c1))) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c2)|(rt1.c0)) THEN ((0.1972739847283046) NOT NULL) ELSE ((t0.c0) NOT BETWEEN (NULL) AND (t0.c1)) END) IS TRUE)  as count FROM t0, rt1, vt0 INDEXED BY i95 ORDER BY (- ((rt1.c1 IN (rt1.c2)))), ((((rt1.c2)>>(vt0.c0)))/(CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 END)), ((((vt0.c0)%(rt1.c1))) IS FALSE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt1, vt0 INDEXED BY i95 WHERE (CASE WHEN ((rt1.c2)|(rt1.c0)) THEN ((0.1972739847283046) NOT NULL) ELSE ((t0.c0) NOT BETWEEN (NULL) AND (t0.c1)) END) ORDER BY (- ((rt1.c1 IN (rt1.c2)))), ((((rt1.c2)>>(vt0.c0)))/(CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 END)), ((((vt0.c0)%(rt1.c1))) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c2)|(rt1.c0)) THEN ((0.1972739847283046) NOT NULL) ELSE ((t0.c0) NOT BETWEEN (NULL) AND (t0.c1)) END) IS TRUE)  as count FROM t0, rt1, vt0 INDEXED BY i95 ORDER BY (- ((rt1.c1 IN (rt1.c2)))), ((((rt1.c2)>>(vt0.c0)))/(CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 END)), ((((vt0.c0)%(rt1.c1))) IS FALSE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 NOT INDEXED, rt1, vt0 WHERE (((((t0.c0)<>(vt0.c0))) NOT BETWEEN (CASE t0.c0  WHEN rt1.c2 THEN t0.c2 ELSE vt0.c0 END) AND (('' IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)!=(vt0.c0))) NOT BETWEEN (CASE t0.c0  WHEN rt1.c2 THEN t0.c2 ELSE vt0.c0 END) AND (('' IN ())))) IS TRUE)  as count FROM t0, rt1, vt0);
SELECT COUNT(*) FROM t0 NOT INDEXED, rt1, vt0 WHERE (((((t0.c0)<>(vt0.c0))) NOT BETWEEN (CASE t0.c0  WHEN rt1.c2 THEN t0.c2 ELSE vt0.c0 END) AND (('' IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)!=(vt0.c0))) NOT BETWEEN (CASE t0.c0  WHEN rt1.c2 THEN t0.c2 ELSE vt0.c0 END) AND (('' IN ())))) IS TRUE)  as count FROM t0, rt1, vt0);
SELECT COUNT(*) FROM t0 NOT INDEXED, rt1, vt0 WHERE (((((t0.c0)<>(vt0.c0))) NOT BETWEEN (CASE t0.c0  WHEN rt1.c2 THEN t0.c2 ELSE vt0.c0 END) AND (('' IN ()))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((- ((rt1.c0 IN ())))) ORDER BY (((TRIM(DISTINCT rt1.c0, rt1.c1), ((rt1.c2)<=(rt1.c1)), ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1))))<((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)), CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END, (+ (rt1.c2))))) DESC  NULLS LAST, ((((rt1.c2) IS FALSE)) BETWEEN ((+ (rt1.c1))) AND (CASE WHEN 0.8488565393343815 THEN 0.7349752422957792 END))  NULLS FIRST, ((rt1.c0) BETWEEN (rt1.c2) AND (((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((rt1.c0 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY (((TRIM(DISTINCT rt1.c0, rt1.c1), ((rt1.c2)<=(rt1.c1)), ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1))))<((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)), CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END, (+ (rt1.c2))))) DESC  NULLS LAST, ((((rt1.c2) IS FALSE)) BETWEEN ((+ (rt1.c1))) AND (CASE WHEN 0.8488565393343815 THEN 0.7349752422957792 END))  NULLS FIRST, ((rt1.c0) BETWEEN (rt1.c2) AND (((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((- ((rt1.c0 IN ())))) ORDER BY (((TRIM(DISTINCT rt1.c0, rt1.c1), ((rt1.c2)<=(rt1.c1)), ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1))))<((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)), CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END, (+ (rt1.c2))))) DESC  NULLS LAST, ((((rt1.c2) IS FALSE)) BETWEEN ((+ (rt1.c1))) AND (CASE WHEN 0.8488565393343815 THEN 0.7349752422957792 END))  NULLS FIRST, ((rt1.c0) BETWEEN (rt1.c2) AND (((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((rt1.c0 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY (((TRIM(DISTINCT rt1.c0, rt1.c1), ((rt1.c2)<=(rt1.c1)), ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1))))<((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)), CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END, (+ (rt1.c2))))) DESC  NULLS LAST, ((((rt1.c2) IS FALSE)) BETWEEN ((+ (rt1.c1))) AND (CASE WHEN 0.8488565393343815 THEN 0.7349752422957792 END))  NULLS FIRST, ((rt1.c0) BETWEEN (rt1.c2) AND (((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((- ((rt1.c0 IN ())))) ORDER BY (((TRIM(DISTINCT rt1.c0, rt1.c1), ((rt1.c2)<=(rt1.c1)), ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1))))<((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)), CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END, (+ (rt1.c2))))) DESC  NULLS LAST, ((((rt1.c2) IS FALSE)) BETWEEN ((+ (rt1.c1))) AND (CASE WHEN 0.8488565393343815 THEN 0.7349752422957792 END))  NULLS FIRST, ((rt1.c0) BETWEEN (rt1.c2) AND (((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c1)%(t0.c0)))OR(((t0.c1)>(t0.c1)))))AND((t0.c1 IN ())))) ORDER BY ((t0.c1 COLLATE BINARY) NOT BETWEEN (json_array_length(t0.c0, t0.c2)) AND (((t0.c1) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1)%(t0.c0)))OR(((t0.c1)>(t0.c1)))))AND((t0.c1 IN ())))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c1 COLLATE BINARY) NOT BETWEEN (json_array_length(t0.c0, t0.c2)) AND (((t0.c1) ISNULL)))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c1)%(t0.c0)))OR(((t0.c1)>(t0.c1)))))AND((t0.c1 IN ())))) ORDER BY ((t0.c1 COLLATE BINARY) NOT BETWEEN (json_array_length(t0.c0, t0.c2)) AND (((t0.c1) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1)%(t0.c0)))OR(((t0.c1)>(t0.c1)))))AND((t0.c1 IN ())))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c1 COLLATE BINARY) NOT BETWEEN (json_array_length(t0.c0, t0.c2)) AND (((t0.c1) ISNULL)))  NULLS FIRST);
SELECT ALL * FROM t0 INNER JOIN vt0 ON CAST(((t0.c1) BETWEEN (rt1.c1) AND (rt1.c0)) AS INTEGER) LEFT OUTER JOIN rt1 ON ((rt1.c1 COLLATE RTRIM) BETWEEN ((vt0.c0 IN ())) AND (t0.c1 COLLATE NOCASE)) WHERE ((+ (((t0.c1)>=(t0.c2))))) ORDER BY ((((((vt0.c0)OR(rt1.c1)))AND(rt1.c0)))>=(vt0.c0)) DESC, ((((t0.c2))<=((t0.c0))) IN ()) DESC, ((((((rt1.c0)IS NOT(x'')))OR(vt0.c0)))AND(t0.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c1)>=(t0.c2))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CAST(((t0.c1) BETWEEN (rt1.c1) AND (rt1.c0)) AS INTEGER) LEFT OUTER JOIN rt1 ON ((rt1.c1 COLLATE RTRIM) BETWEEN ((vt0.c0 IN ())) AND (t0.c1 COLLATE NOCASE)) ORDER BY ((((((vt0.c0)OR(rt1.c1)))AND(rt1.c0)))>=(vt0.c0)) DESC, ((((t0.c2))<=((t0.c0))) IN ()) DESC, ((((((rt1.c0)IS NOT(x'')))OR(vt0.c0)))AND(t0.c1)) DESC  NULLS FIRST);
SELECT ALL * FROM t0 INNER JOIN vt0 ON CAST(((t0.c1) BETWEEN (rt1.c1) AND (rt1.c0)) AS INTEGER) LEFT OUTER JOIN rt1 ON ((rt1.c1 COLLATE RTRIM) BETWEEN ((vt0.c0 IN ())) AND (t0.c1 COLLATE NOCASE)) WHERE ((+ (((t0.c1)>=(t0.c2))))) ORDER BY ((((((vt0.c0)OR(rt1.c1)))AND(rt1.c0)))>=(vt0.c0)) DESC, ((((t0.c2))<=((t0.c0))) IN ()) DESC, ((((((rt1.c0)IS NOT(x'')))OR(vt0.c0)))AND(t0.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c1)>=(t0.c2))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CAST(((t0.c1) BETWEEN (rt1.c1) AND (rt1.c0)) AS INTEGER) LEFT OUTER JOIN rt1 ON ((rt1.c1 COLLATE RTRIM) BETWEEN ((vt0.c0 IN ())) AND (t0.c1 COLLATE NOCASE)) ORDER BY ((((((vt0.c0)OR(rt1.c1)))AND(rt1.c0)))>=(vt0.c0)) DESC, ((((t0.c2))<=((t0.c0))) IN ()) DESC, ((((((rt1.c0)IS NOT(x'')))OR(vt0.c0)))AND(t0.c1)) DESC  NULLS FIRST);
SELECT ALL * FROM t0 INNER JOIN vt0 ON CAST(((t0.c1) BETWEEN (rt1.c1) AND (rt1.c0)) AS INTEGER) LEFT OUTER JOIN rt1 ON ((rt1.c1 COLLATE RTRIM) BETWEEN ((vt0.c0 IN ())) AND (t0.c1 COLLATE NOCASE)) WHERE ((+ (((t0.c1)>=(t0.c2))))) ORDER BY ((((((vt0.c0)OR(rt1.c1)))AND(rt1.c0)))>=(vt0.c0)) DESC, ((((t0.c2))<=((t0.c0))) IN ()) DESC, ((((((rt1.c0)IS NOT(x'')))OR(vt0.c0)))AND(t0.c1)) DESC  NULLS FIRST;
SELECT * FROM rt1 FULL OUTER JOIN t0 ON ((((((((((rt1.c0) ISNULL))OR((~ (rt1.c1)))))AND(((t0.c2)OR(rt1.c1)))))AND('942165149')))AND(((((t0.c2)AND(t0.c1)))AND(t0.c0)))) WHERE (CASE WHEN ((((rt1.c0)AND(t0.c1)))AND(rt1.c0)) THEN CAST('il{a' AS NUMERIC) END) ORDER BY 'Pf' DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt1.c0)AND(t0.c1)))AND(rt1.c0)) THEN CAST('il{a' AS NUMERIC) END) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON ((((((((((rt1.c0) ISNULL))OR((~ (rt1.c1)))))AND(((t0.c2)OR(rt1.c1)))))AND('942165149')))AND(((((t0.c2)AND(t0.c1)))AND(t0.c0)))) ORDER BY 'Pf' DESC);
SELECT * FROM rt1 FULL OUTER JOIN t0 ON ((((((((((rt1.c0) ISNULL))OR((~ (rt1.c1)))))AND(((t0.c2)OR(rt1.c1)))))AND('942165149')))AND(((((t0.c2)AND(t0.c1)))AND(t0.c0)))) WHERE (CASE WHEN ((((rt1.c0)AND(t0.c1)))AND(rt1.c0)) THEN CAST('il{a' AS NUMERIC) END) ORDER BY 'Pf' DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt1.c0)AND(t0.c1)))AND(rt1.c0)) THEN CAST('il{a' AS NUMERIC) END) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON ((((((((((rt1.c0) ISNULL))OR((~ (rt1.c1)))))AND(((t0.c2)OR(rt1.c1)))))AND('942165149')))AND(((((t0.c2)AND(t0.c1)))AND(t0.c0)))) ORDER BY 'Pf' DESC);
SELECT * FROM rt1 FULL OUTER JOIN t0 ON ((((((((((rt1.c0) ISNULL))OR((~ (rt1.c1)))))AND(((t0.c2)OR(rt1.c1)))))AND('942165149')))AND(((((t0.c2)AND(t0.c1)))AND(t0.c0)))) WHERE (CASE WHEN ((((rt1.c0)AND(t0.c1)))AND(rt1.c0)) THEN CAST('il{a' AS NUMERIC) END) ORDER BY 'Pf' DESC;
SELECT ALL * FROM vt0 INNER JOIN rt1 ON COALESCE((rt1.c0 IN ()), rt1.c2 COLLATE RTRIM) WHERE (((((rt1.c1)AND(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0)))))AND((~ (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)AND(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0)))))AND((~ (rt1.c1))))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON COALESCE((rt1.c0 IN ()), rt1.c2 COLLATE RTRIM));
SELECT ALL * FROM vt0 INNER JOIN rt1 ON COALESCE((rt1.c0 IN ()), rt1.c2 COLLATE RTRIM) WHERE (((((rt1.c1)AND(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0)))))AND((~ (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)AND(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0)))))AND((~ (rt1.c1))))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON COALESCE((rt1.c0 IN ()), rt1.c2 COLLATE RTRIM));
SELECT ALL * FROM vt0 INNER JOIN rt1 ON COALESCE((rt1.c0 IN ()), rt1.c2 COLLATE RTRIM) WHERE (((((rt1.c1)AND(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0)))))AND((~ (rt1.c1)))));
SELECT ALL * FROM rt1, t0 WHERE (((((t0.c1)/(rt1.c1)))!=(x''))) ORDER BY CAST(CAST(t0.c1 AS BLOB) AS BLOB)  NULLS FIRST, ((SQLITE_VERSION()) BETWEEN (((t0.c1)/(t0.c2))) AND (((((((((((((((((t0.c2)OR(rt1.c2)))OR(t0.c0)))OR(t0.c0)))OR(rt1.c0)))OR(rt1.c2)))AND(t0.c1)))OR(t0.c0)))OR(t0.c2)))), CASE t0.c2  WHEN t0.c1 THEN ((rt1.c2)>>(t0.c2)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)/(rt1.c1)))!=(x''))) IS TRUE)  as count FROM rt1, t0 ORDER BY CAST(CAST(t0.c1 AS BLOB) AS BLOB)  NULLS FIRST, ((SQLITE_VERSION()) BETWEEN (((t0.c1)/(t0.c2))) AND (((((((((((((((((t0.c2)OR(rt1.c2)))OR(t0.c0)))OR(t0.c0)))OR(rt1.c0)))OR(rt1.c2)))AND(t0.c1)))OR(t0.c0)))OR(t0.c2)))), CASE t0.c2  WHEN t0.c1 THEN ((rt1.c2)>>(t0.c2)) END DESC  NULLS LAST);
SELECT ALL * FROM rt1, t0 WHERE (((((t0.c1)/(rt1.c1)))!=(x''))) ORDER BY CAST(CAST(t0.c1 AS BLOB) AS BLOB)  NULLS FIRST, ((SQLITE_VERSION()) BETWEEN (((t0.c1)/(t0.c2))) AND (((((((((((((((((t0.c2)OR(rt1.c2)))OR(t0.c0)))OR(t0.c0)))OR(rt1.c0)))OR(rt1.c2)))AND(t0.c1)))OR(t0.c0)))OR(t0.c2)))), CASE t0.c2  WHEN t0.c1 THEN ((rt1.c2)>>(t0.c2)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)/(rt1.c1)))!=(x''))) IS TRUE)  as count FROM rt1, t0 ORDER BY CAST(CAST(t0.c1 AS BLOB) AS BLOB)  NULLS FIRST, ((SQLITE_VERSION()) BETWEEN (((t0.c1)/(t0.c2))) AND (((((((((((((((((t0.c2)OR(rt1.c2)))OR(t0.c0)))OR(t0.c0)))OR(rt1.c0)))OR(rt1.c2)))AND(t0.c1)))OR(t0.c0)))OR(t0.c2)))), CASE t0.c2  WHEN t0.c1 THEN ((rt1.c2)>>(t0.c2)) END DESC  NULLS LAST);
SELECT ALL * FROM rt1, t0 WHERE (((((t0.c1)/(rt1.c1)))!=(x''))) ORDER BY CAST(CAST(t0.c1 AS BLOB) AS BLOB)  NULLS FIRST, ((SQLITE_VERSION()) BETWEEN (((t0.c1)/(t0.c2))) AND (((((((((((((((((t0.c2)OR(rt1.c2)))OR(t0.c0)))OR(t0.c0)))OR(rt1.c0)))OR(rt1.c2)))AND(t0.c1)))OR(t0.c0)))OR(t0.c2)))), CASE t0.c2  WHEN t0.c1 THEN ((rt1.c2)>>(t0.c2)) END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON '-1235647422' WHERE (IFNULL(CASE t0.c2  WHEN t0.c1 THEN 'Qo' ELSE t0.c0 END, 3.89210657E8));
SELECT SUM(count) FROM (SELECT ((IFNULL(CASE t0.c2  WHEN t0.c1 THEN 'Qo' ELSE t0.c0 END, 3.89210657E8)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON '-1235647422');
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON '-1235647422' WHERE (IFNULL(CASE t0.c2  WHEN t0.c1 THEN 'Qo' ELSE t0.c0 END, 3.89210657E8));
SELECT SUM(count) FROM (SELECT ((IFNULL(CASE t0.c2  WHEN t0.c1 THEN 'Qo' ELSE t0.c0 END, 3.89210657E8)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON '-1235647422');
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON '-1235647422' WHERE (IFNULL(CASE t0.c2  WHEN t0.c1 THEN 'Qo' ELSE t0.c0 END, 3.89210657E8));
SELECT ALL COUNT(*) FROM t0 WHERE (LTRIM((NOT (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM((NOT (t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (LTRIM((NOT (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM((NOT (t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (LTRIM((NOT (t0.c0))));
SELECT * FROM rt1, t0, vt0 WHERE ((((LIKELIHOOD(0.26379949632878597, 0.9438558146887458), ((rt1.c2)<<(rt1.c2)), ((((((((t0.c0)OR(t0.c0)))OR(rt1.c0)))AND(t0.c1)))OR(rt1.c1))))>=((CASE WHEN vt0.c0 THEN t0.c2 END, rt1.c0 COLLATE NOCASE, ((((rt1.c2)AND(t0.c2)))AND(rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((LIKELIHOOD(0.26379949632878597, 0.9438558146887458), ((rt1.c2)<<(rt1.c2)), ((((((((t0.c0)OR(t0.c0)))OR(rt1.c0)))AND(t0.c1)))OR(rt1.c1))))>=((CASE WHEN vt0.c0 THEN t0.c2 END, rt1.c0 COLLATE NOCASE, ((((rt1.c2)AND(t0.c2)))AND(rt1.c1)))))) IS TRUE)  as count FROM rt1, t0, vt0);
SELECT * FROM rt1, t0, vt0 WHERE ((((LIKELIHOOD(0.26379949632878597, 0.9438558146887458), ((rt1.c2)<<(rt1.c2)), ((((((((t0.c0)OR(t0.c0)))OR(rt1.c0)))AND(t0.c1)))OR(rt1.c1))))>=((CASE WHEN vt0.c0 THEN t0.c2 END, rt1.c0 COLLATE NOCASE, ((((rt1.c2)AND(t0.c2)))AND(rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((LIKELIHOOD(0.26379949632878597, 0.9438558146887458), ((rt1.c2)<<(rt1.c2)), ((((((((t0.c0)OR(t0.c0)))OR(rt1.c0)))AND(t0.c1)))OR(rt1.c1))))>=((CASE WHEN vt0.c0 THEN t0.c2 END, rt1.c0 COLLATE NOCASE, ((((rt1.c2)AND(t0.c2)))AND(rt1.c1)))))) IS TRUE)  as count FROM rt1, t0, vt0);
SELECT * FROM rt1, t0, vt0 WHERE ((((LIKELIHOOD(0.26379949632878597, 0.9438558146887458), ((rt1.c2)<<(rt1.c2)), ((((((((t0.c0)OR(t0.c0)))OR(rt1.c0)))AND(t0.c1)))OR(rt1.c1))))>=((CASE WHEN vt0.c0 THEN t0.c2 END, rt1.c0 COLLATE NOCASE, ((((rt1.c2)AND(t0.c2)))AND(rt1.c1))))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((NULL)) AND (((NOT (x''))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) NOT BETWEEN ((NULL)) AND (((NOT (x'')))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((NULL)) AND (((NOT (x''))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) NOT BETWEEN ((NULL)) AND (((NOT (x'')))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((NULL)) AND (((NOT (x''))))));
SELECT * FROM rt1, vt0 LEFT OUTER JOIN t0 ON LIKELIHOOD(t0.c1, 0.10336156905086902) WHERE (t0.c0) ORDER BY ((((((((('1516810827')OR(t0.c1)))OR(t0.c1)))AND(rt1.c0)))OR(rt1.c1)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM rt1, vt0 LEFT OUTER JOIN t0 ON LIKELIHOOD(t0.c1, 0.10336156905086902) ORDER BY ((((((((('1516810827')OR(t0.c1)))OR(t0.c1)))AND(rt1.c0)))OR(rt1.c1)) IN ()) ASC  NULLS FIRST);
SELECT * FROM rt1, vt0 LEFT OUTER JOIN t0 ON LIKELIHOOD(t0.c1, 0.10336156905086902) WHERE (t0.c0) ORDER BY ((((((((('1516810827')OR(t0.c1)))OR(t0.c1)))AND(rt1.c0)))OR(rt1.c1)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM rt1, vt0 LEFT OUTER JOIN t0 ON LIKELIHOOD(t0.c1, 0.10336156905086902) ORDER BY ((((((((('1516810827')OR(t0.c1)))OR(t0.c1)))AND(rt1.c0)))OR(rt1.c1)) IN ()) ASC  NULLS FIRST);
SELECT * FROM rt1, vt0 LEFT OUTER JOIN t0 ON LIKELIHOOD(t0.c1, 0.10336156905086902) WHERE (t0.c0) ORDER BY ((((((((('1516810827')OR(t0.c1)))OR(t0.c1)))AND(rt1.c0)))OR(rt1.c1)) IN ()) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (vt0.c0);
SELECT COUNT(*) FROM rt1 WHERE (LOWER(COALESCE(DISTINCT rt1.c2, rt1.c2))) ORDER BY ((((rt1.c1)+(rt1.c2)))/(0Xffffffffef7b6fc3));
SELECT SUM(count) FROM (SELECT ((LOWER(COALESCE(DISTINCT rt1.c2, rt1.c2))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1)+(rt1.c2)))/(0xffffffffef7b6fc3)));
SELECT COUNT(*) FROM rt1 WHERE (LOWER(COALESCE(DISTINCT rt1.c2, rt1.c2))) ORDER BY ((((rt1.c1)+(rt1.c2)))/(0Xffffffffef7b6fc3));
SELECT SUM(count) FROM (SELECT ((LOWER(COALESCE(DISTINCT rt1.c2, rt1.c2))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1)+(rt1.c2)))/(0xffffffffef7b6fc3)));
SELECT COUNT(*) FROM rt1 WHERE (LOWER(COALESCE(DISTINCT rt1.c2, rt1.c2))) ORDER BY ((((rt1.c1)+(rt1.c2)))/(0Xffffffffef7b6fc3));
SELECT * FROM vt0, rt1, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt1, t0);
SELECT * FROM vt0, rt1, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt1, t0);
SELECT * FROM vt0, rt1, t0 WHERE (NULL);
SELECT ALL * FROM t0, vt0 WHERE (t0.c2) ORDER BY 0.7480945900617164 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0, vt0 ORDER BY 0.7480945900617164 DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (t0.c2) ORDER BY 0.7480945900617164 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0, vt0 ORDER BY 0.7480945900617164 DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (t0.c2) ORDER BY 0.7480945900617164 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON ((x'')||(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1)))) WHERE (((((((vt0.c0) ISNULL))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c2 END)))AND('m0'))) ORDER BY ((((rt1.c1)||(rt1.c0))) NOT BETWEEN (x'c0a4') AND (((((((((rt1.c1)AND(rt1.c1)))AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) ISNULL))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c2 END)))AND('m0'))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON ((x'')||(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1)))) ORDER BY ((((rt1.c1)||(rt1.c0))) NOT BETWEEN (x'c0a4') AND (((((((((rt1.c1)AND(rt1.c1)))AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c1)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON ((x'')||(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1)))) WHERE (((((((vt0.c0) ISNULL))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c2 END)))AND('m0'))) ORDER BY ((((rt1.c1)||(rt1.c0))) NOT BETWEEN (x'c0a4') AND (((((((((rt1.c1)AND(rt1.c1)))AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) ISNULL))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c2 END)))AND('m0'))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON ((x'')||(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1)))) ORDER BY ((((rt1.c1)||(rt1.c0))) NOT BETWEEN (x'c0a4') AND (((((((((rt1.c1)AND(rt1.c1)))AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c1)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON ((x'')||(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1)))) WHERE (((((((vt0.c0) ISNULL))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c2 END)))AND('m0'))) ORDER BY ((((rt1.c1)||(rt1.c0))) NOT BETWEEN (x'c0a4') AND (((((((((rt1.c1)AND(rt1.c1)))AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c1)))) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((('ei))b')OR(((((t0.c0)OR(t0.c0)))AND(t0.c1))))) ORDER BY t0.c0 ASC  NULLS FIRST, ((x'174fbf2c') NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((('ei))b')OR(((((t0.c0)OR(t0.c0)))AND(t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 ASC  NULLS FIRST, ((x'174fbf2c') NOT NULL));
SELECT ALL * FROM t0 WHERE ((('ei))b')OR(((((t0.c0)OR(t0.c0)))AND(t0.c1))))) ORDER BY t0.c0 ASC  NULLS FIRST, ((x'174fbf2c') NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((('ei))b')OR(((((t0.c0)OR(t0.c0)))AND(t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 ASC  NULLS FIRST, ((x'174fbf2c') NOT NULL));
SELECT ALL * FROM t0 WHERE ((('ei))b')OR(((((t0.c0)OR(t0.c0)))AND(t0.c1))))) ORDER BY t0.c0 ASC  NULLS FIRST, ((x'174fbf2c') NOT NULL);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY (- (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (- (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY (- (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (- (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY (- (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ (rt1.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((~ (rt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ (rt1.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((~ (rt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ (rt1.c1)) COLLATE NOCASE);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON ((((vt0.c0)&(t0.c2)))>=(((((t0.c0)OR(vt0.c0)))AND(vt0.c0)))) WHERE ((((t0.c0)+(t0.c0)) IN ())) ORDER BY ((((((((((((((t0.c1) BETWEEN (t0.c1) AND (t0.c2)))AND(((t0.c0) IS TRUE))))OR(t0.c1)))OR((- (t0.c0)))))AND(CASE WHEN t0.c1 THEN vt0.c0 ELSE t0.c1 END)))AND(((t0.c0)>(vt0.c0)))))AND((+ (t0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)+(t0.c0)) IN ())) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((((vt0.c0)&(t0.c2)))>=(((((t0.c0)OR(vt0.c0)))AND(vt0.c0)))) ORDER BY ((((((((((((((t0.c1) BETWEEN (t0.c1) AND (t0.c2)))AND(((t0.c0) IS TRUE))))OR(t0.c1)))OR((- (t0.c0)))))AND(CASE WHEN t0.c1 THEN vt0.c0 ELSE t0.c1 END)))AND(((t0.c0)>(vt0.c0)))))AND((+ (t0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON ((((vt0.c0)&(t0.c2)))>=(((((t0.c0)OR(vt0.c0)))AND(vt0.c0)))) WHERE ((((t0.c0)+(t0.c0)) IN ())) ORDER BY ((((((((((((((t0.c1) BETWEEN (t0.c1) AND (t0.c2)))AND(((t0.c0) IS TRUE))))OR(t0.c1)))OR((- (t0.c0)))))AND(CASE WHEN t0.c1 THEN vt0.c0 ELSE t0.c1 END)))AND(((t0.c0)>(vt0.c0)))))AND((+ (t0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)+(t0.c0)) IN ())) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((((vt0.c0)&(t0.c2)))>=(((((t0.c0)OR(vt0.c0)))AND(vt0.c0)))) ORDER BY ((((((((((((((t0.c1) BETWEEN (t0.c1) AND (t0.c2)))AND(((t0.c0) IS TRUE))))OR(t0.c1)))OR((- (t0.c0)))))AND(CASE WHEN t0.c1 THEN vt0.c0 ELSE t0.c1 END)))AND(((t0.c0)>(vt0.c0)))))AND((+ (t0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON ((((vt0.c0)&(t0.c2)))>=(((((t0.c0)OR(vt0.c0)))AND(vt0.c0)))) WHERE ((((t0.c0)+(t0.c0)) IN ())) ORDER BY ((((((((((((((t0.c1) BETWEEN (t0.c1) AND (t0.c2)))AND(((t0.c0) IS TRUE))))OR(t0.c1)))OR((- (t0.c0)))))AND(CASE WHEN t0.c1 THEN vt0.c0 ELSE t0.c1 END)))AND(((t0.c0)>(vt0.c0)))))AND((+ (t0.c0)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0, rt1 WHERE ((((vt0.c0, rt1.c2, NULL, t0.c1, t0.c2))<((rt1.c1, vt0.c0, t0.c1, t0.c2, t0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((vt0.c0, rt1.c2, NULL, t0.c1, t0.c2))<((rt1.c1, vt0.c0, t0.c1, t0.c2, t0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT COUNT(*) FROM t0, vt0, rt1 WHERE ((((vt0.c0, rt1.c2, NULL, t0.c1, t0.c2))<((rt1.c1, vt0.c0, t0.c1, t0.c2, t0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((vt0.c0, rt1.c2, NULL, t0.c1, t0.c2))<((rt1.c1, vt0.c0, t0.c1, t0.c2, t0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT COUNT(*) FROM t0, vt0, rt1 WHERE ((((vt0.c0, rt1.c2, NULL, t0.c1, t0.c2))<((rt1.c1, vt0.c0, t0.c1, t0.c2, t0.c0))) COLLATE RTRIM);
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN vt0.c0 THEN t0.c2 WHEN ((t0.c1)IS NOT(t0.c2)) THEN t0.c1 WHEN (- (t0.c2)) THEN COALESCE(t0.c0, vt0.c0) END) ORDER BY CAST((t0.c2 IN ()) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN t0.c2 WHEN ((t0.c1)IS NOT(t0.c2)) THEN t0.c1 WHEN (- (t0.c2)) THEN COALESCE(t0.c0, vt0.c0) END) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST((t0.c2 IN ()) AS TEXT)  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN vt0.c0 THEN t0.c2 WHEN ((t0.c1)IS NOT(t0.c2)) THEN t0.c1 WHEN (- (t0.c2)) THEN COALESCE(t0.c0, vt0.c0) END) ORDER BY CAST((t0.c2 IN ()) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN t0.c2 WHEN ((t0.c1)IS NOT(t0.c2)) THEN t0.c1 WHEN (- (t0.c2)) THEN COALESCE(t0.c0, vt0.c0) END) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST((t0.c2 IN ()) AS TEXT)  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN vt0.c0 THEN t0.c2 WHEN ((t0.c1)IS NOT(t0.c2)) THEN t0.c1 WHEN (- (t0.c2)) THEN COALESCE(t0.c0, vt0.c0) END) ORDER BY CAST((t0.c2 IN ()) AS TEXT)  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt1 WHERE ((((((rt1.c2)>(t0.c1)), ((((((((((((rt1.c1)OR(t0.c2)))OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c1)))AND(x'')))AND(rt1.c0)), ((t0.c2)>=(t0.c2)), rt1.c1, (t0.c1 IN ())))=((((x'eac8')OR(rt1.c0)), ((t0.c2) BETWEEN (t0.c0) AND (t0.c2)), (~ (t0.c1)), ((((rt1.c2)OR(t0.c1)))OR(t0.c2)), ((t0.c1) IS TRUE))))) ORDER BY ((t0.c1)>(CASE WHEN rt1.c0 THEN t0.c2 WHEN t0.c2 THEN rt1.c2 WHEN t0.c1 THEN rt1.c0 ELSE x'' END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2)>(t0.c1)), ((((((((((((rt1.c1)OR(t0.c2)))OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c1)))AND(x'')))AND(rt1.c0)), ((t0.c2)>=(t0.c2)), rt1.c1, (t0.c1 IN ())))=((((x'eac8')OR(rt1.c0)), ((t0.c2) BETWEEN (t0.c0) AND (t0.c2)), (~ (t0.c1)), ((((rt1.c2)OR(t0.c1)))OR(t0.c2)), ((t0.c1) IS TRUE))))) IS TRUE)  as count FROM t0, rt1 ORDER BY ((t0.c1)>(CASE WHEN rt1.c0 THEN t0.c2 WHEN t0.c2 THEN rt1.c2 WHEN t0.c1 THEN rt1.c0 ELSE x'' END)) DESC);
SELECT COUNT(*) FROM t0, rt1 WHERE ((((((rt1.c2)>(t0.c1)), ((((((((((((rt1.c1)OR(t0.c2)))OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c1)))AND(x'')))AND(rt1.c0)), ((t0.c2)>=(t0.c2)), rt1.c1, (t0.c1 IN ())))=((((x'eac8')OR(rt1.c0)), ((t0.c2) BETWEEN (t0.c0) AND (t0.c2)), (~ (t0.c1)), ((((rt1.c2)OR(t0.c1)))OR(t0.c2)), ((t0.c1) IS TRUE))))) ORDER BY ((t0.c1)>(CASE WHEN rt1.c0 THEN t0.c2 WHEN t0.c2 THEN rt1.c2 WHEN t0.c1 THEN rt1.c0 ELSE x'' END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2)>(t0.c1)), ((((((((((((rt1.c1)OR(t0.c2)))OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c1)))AND(x'')))AND(rt1.c0)), ((t0.c2)>=(t0.c2)), rt1.c1, (t0.c1 IN ())))=((((x'eac8')OR(rt1.c0)), ((t0.c2) BETWEEN (t0.c0) AND (t0.c2)), (~ (t0.c1)), ((((rt1.c2)OR(t0.c1)))OR(t0.c2)), ((t0.c1) IS TRUE))))) IS TRUE)  as count FROM t0, rt1 ORDER BY ((t0.c1)>(CASE WHEN rt1.c0 THEN t0.c2 WHEN t0.c2 THEN rt1.c2 WHEN t0.c1 THEN rt1.c0 ELSE x'' END)) DESC);
SELECT COUNT(*) FROM t0, rt1 WHERE ((((((rt1.c2)>(t0.c1)), ((((((((((((rt1.c1)OR(t0.c2)))OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c1)))AND(x'')))AND(rt1.c0)), ((t0.c2)>=(t0.c2)), rt1.c1, (t0.c1 IN ())))=((((x'eac8')OR(rt1.c0)), ((t0.c2) BETWEEN (t0.c0) AND (t0.c2)), (~ (t0.c1)), ((((rt1.c2)OR(t0.c1)))OR(t0.c2)), ((t0.c1) IS TRUE))))) ORDER BY ((t0.c1)>(CASE WHEN rt1.c0 THEN t0.c2 WHEN t0.c2 THEN rt1.c2 WHEN t0.c1 THEN rt1.c0 ELSE x'' END)) DESC;
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON 0.3615415280189691 WHERE ((((rt1.c2 COLLATE RTRIM, (NOT (rt1.c1)), COALESCE(rt1.c1, rt1.c2)))>=((((((((((rt1.c1)AND(rt1.c2)))AND(rt1.c0)))AND(NULL)))AND(rt1.c0)), (((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c1))), (((rt1.c2))<((rt1.c0))))))) ORDER BY CASE WHEN x'' THEN ((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)) ELSE ((rt1.c2)/(vt0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2 COLLATE RTRIM, (NOT (rt1.c1)), COALESCE(rt1.c1, rt1.c2)))>=((((((((((rt1.c1)AND(rt1.c2)))AND(rt1.c0)))AND(NULL)))AND(rt1.c0)), (((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c1))), (((rt1.c2))<((rt1.c0))))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON 0.3615415280189691 ORDER BY CASE WHEN x'' THEN ((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)) ELSE ((rt1.c2)/(vt0.c0)) END ASC  NULLS LAST);
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON 0.3615415280189691 WHERE ((((rt1.c2 COLLATE RTRIM, (NOT (rt1.c1)), COALESCE(rt1.c1, rt1.c2)))>=((((((((((rt1.c1)AND(rt1.c2)))AND(rt1.c0)))AND(NULL)))AND(rt1.c0)), (((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c1))), (((rt1.c2))<((rt1.c0))))))) ORDER BY CASE WHEN x'' THEN ((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)) ELSE ((rt1.c2)/(vt0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2 COLLATE RTRIM, (NOT (rt1.c1)), COALESCE(rt1.c1, rt1.c2)))>=((((((((((rt1.c1)AND(rt1.c2)))AND(rt1.c0)))AND(NULL)))AND(rt1.c0)), (((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c1))), (((rt1.c2))<((rt1.c0))))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON 0.3615415280189691 ORDER BY CASE WHEN x'' THEN ((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)) ELSE ((rt1.c2)/(vt0.c0)) END ASC  NULLS LAST);
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON 0.3615415280189691 WHERE ((((rt1.c2 COLLATE RTRIM, (NOT (rt1.c1)), COALESCE(rt1.c1, rt1.c2)))>=((((((((((rt1.c1)AND(rt1.c2)))AND(rt1.c0)))AND(NULL)))AND(rt1.c0)), (((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c1))), (((rt1.c2))<((rt1.c0))))))) ORDER BY CASE WHEN x'' THEN ((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)) ELSE ((rt1.c2)/(vt0.c0)) END ASC  NULLS LAST;
SELECT * FROM rt1, t0 WHERE (json_patch(((t0.c2) NOT BETWEEN (rt1.c1) AND (x'0dd9')), ((t0.c2) NOT BETWEEN (t0.c2) AND (rt1.c1))));
SELECT SUM(count) FROM (SELECT ((json_patch(((t0.c2) NOT BETWEEN (rt1.c1) AND (x'0dd9')), ((t0.c2) NOT BETWEEN (t0.c2) AND (rt1.c1)))) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (json_patch(((t0.c2) NOT BETWEEN (rt1.c1) AND (x'0dd9')), ((t0.c2) NOT BETWEEN (t0.c2) AND (rt1.c1))));
SELECT SUM(count) FROM (SELECT ((json_patch(((t0.c2) NOT BETWEEN (rt1.c1) AND (x'0dd9')), ((t0.c2) NOT BETWEEN (t0.c2) AND (rt1.c1)))) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (json_patch(((t0.c2) NOT BETWEEN (rt1.c1) AND (x'0dd9')), ((t0.c2) NOT BETWEEN (t0.c2) AND (rt1.c1))));
SELECT COUNT(*) FROM rt1, vt0 NOT INDEXED WHERE (x'94d36100');
SELECT SUM(count) FROM (SELECT ALL ((x'94d36100') IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 NOT INDEXED WHERE (x'94d36100');
SELECT SUM(count) FROM (SELECT ALL ((x'94d36100') IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 NOT INDEXED WHERE (x'94d36100');
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((((t0.c0)OR(rt1.c0)))AND(t0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)OR(rt1.c0)))AND(t0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt1);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((((t0.c0)OR(rt1.c0)))AND(t0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)OR(rt1.c0)))AND(t0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt1);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((((t0.c0)OR(rt1.c0)))AND(t0.c1)) COLLATE NOCASE);
SELECT COUNT(*) FROM t0 NOT INDEXED, vt0 WHERE (((-1e500) ISNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((-1e500) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0 NOT INDEXED, vt0 WHERE (((-1e500) ISNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((-1e500) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0 NOT INDEXED, vt0 WHERE (((-1e500) ISNULL) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0, rt1, vt0 WHERE (((((t0.c2) ISNULL))%(((rt1.c0)>=(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) ISNULL))%(((rt1.c0)>=(rt1.c1))))) IS TRUE)  as count FROM t0, rt1, vt0);
SELECT ALL COUNT(*) FROM t0, rt1, vt0 WHERE (((((t0.c2) ISNULL))%(((rt1.c0)>=(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) ISNULL))%(((rt1.c0)>=(rt1.c1))))) IS TRUE)  as count FROM t0, rt1, vt0);
SELECT ALL COUNT(*) FROM t0, rt1, vt0 WHERE (((((t0.c2) ISNULL))%(((rt1.c0)>=(rt1.c1)))));
SELECT ALL COUNT(*) FROM vt0, t0, rt1 WHERE (((((CAST(rt1.c1 AS BLOB))AND(t0.c2)))OR(((t0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt1.c1 AS BLOB))AND(t0.c2)))OR(((t0.c2) ISNULL)))) IS TRUE)  as count FROM vt0, t0, rt1);
SELECT ALL COUNT(*) FROM vt0, t0, rt1 WHERE (((((CAST(rt1.c1 AS BLOB))AND(t0.c2)))OR(((t0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt1.c1 AS BLOB))AND(t0.c2)))OR(((t0.c2) ISNULL)))) IS TRUE)  as count FROM vt0, t0, rt1);
SELECT ALL COUNT(*) FROM vt0, t0, rt1 WHERE (((((CAST(rt1.c1 AS BLOB))AND(t0.c2)))OR(((t0.c2) ISNULL))));
SELECT * FROM vt0 WHERE (CASE ((vt0.c0) NOT NULL)  WHEN HEX(vt0.c0) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0)IS(vt0.c0)) WHEN (- (vt0.c0)) THEN ((('0.6390256414837864'))<=((vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) NOT NULL)  WHEN HEX(vt0.c0) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0)IS(vt0.c0)) WHEN (- (vt0.c0)) THEN ((('0.6390256414837864'))<=((vt0.c0))) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE ((vt0.c0) NOT NULL)  WHEN HEX(vt0.c0) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0)IS(vt0.c0)) WHEN (- (vt0.c0)) THEN ((('0.6390256414837864'))<=((vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) NOT NULL)  WHEN HEX(vt0.c0) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0)IS(vt0.c0)) WHEN (- (vt0.c0)) THEN ((('0.6390256414837864'))<=((vt0.c0))) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE ((vt0.c0) NOT NULL)  WHEN HEX(vt0.c0) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0)IS(vt0.c0)) WHEN (- (vt0.c0)) THEN ((('0.6390256414837864'))<=((vt0.c0))) END);
SELECT * FROM vt0, t0, rt1 WHERE ((((vt0.c0)) BETWEEN ((0Xffffffffba65aa6c)) AND (((- (rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((0xffffffffba65aa6c)) AND (((- (rt1.c0)))))) IS TRUE)  as count FROM vt0, t0, rt1);
SELECT * FROM vt0, t0, rt1 WHERE ((((vt0.c0)) BETWEEN ((0Xffffffffba65aa6c)) AND (((- (rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((0xffffffffba65aa6c)) AND (((- (rt1.c0)))))) IS TRUE)  as count FROM vt0, t0, rt1);
SELECT * FROM vt0, t0, rt1 WHERE ((((vt0.c0)) BETWEEN ((0Xffffffffba65aa6c)) AND (((- (rt1.c0))))));
SELECT ALL * FROM vt0, t0 WHERE ((('')GLOB(((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((('')GLOB(((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((('')GLOB(((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((('')GLOB(((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((('')GLOB(((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)))));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN t0 ON (((((((((t0.c0)OR(t0.c2)))OR(rt1.c0)))OR(rt1.c1)))AND(t0.c0)) IN ()) WHERE (0.5870391766454661);
SELECT SUM(count) FROM (SELECT ((0.5870391766454661) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN t0 ON (((((((((t0.c0)OR(t0.c2)))OR(rt1.c0)))OR(rt1.c1)))AND(t0.c0)) IN ()));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN t0 ON (((((((((t0.c0)OR(t0.c2)))OR(rt1.c0)))OR(rt1.c1)))AND(t0.c0)) IN ()) WHERE (0.5870391766454661);
SELECT SUM(count) FROM (SELECT ((0.5870391766454661) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN t0 ON (((((((((t0.c0)OR(t0.c2)))OR(rt1.c0)))OR(rt1.c1)))AND(t0.c0)) IN ()));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN t0 ON (((((((((t0.c0)OR(t0.c2)))OR(rt1.c0)))OR(rt1.c1)))AND(t0.c0)) IN ()) WHERE (0.5870391766454661);
SELECT * FROM t0 FULL OUTER JOIN vt0 ON NULL COLLATE BINARY WHERE (CAST(vt0.c0 AS BLOB) COLLATE BINARY) ORDER BY CAST(t0.c2 AS INTEGER) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON NULL COLLATE BINARY ORDER BY CAST(t0.c2 AS INTEGER) COLLATE NOCASE ASC  NULLS FIRST);
SELECT * FROM t0 FULL OUTER JOIN vt0 ON NULL COLLATE BINARY WHERE (CAST(vt0.c0 AS BLOB) COLLATE BINARY) ORDER BY CAST(t0.c2 AS INTEGER) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON NULL COLLATE BINARY ORDER BY CAST(t0.c2 AS INTEGER) COLLATE NOCASE ASC  NULLS FIRST);
SELECT * FROM t0 FULL OUTER JOIN vt0 ON NULL COLLATE BINARY WHERE (CAST(vt0.c0 AS BLOB) COLLATE BINARY) ORDER BY CAST(t0.c2 AS INTEGER) COLLATE NOCASE ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt1, t0 WHERE (((t0.c1 COLLATE NOCASE)/(((t0.c2) NOT BETWEEN (rt1.c1) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1 COLLATE NOCASE)/(((t0.c2) NOT BETWEEN (rt1.c1) AND (t0.c0))))) IS TRUE)  as count FROM vt0, rt1, t0);
SELECT ALL COUNT(*) FROM vt0, rt1, t0 WHERE (((t0.c1 COLLATE NOCASE)/(((t0.c2) NOT BETWEEN (rt1.c1) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1 COLLATE NOCASE)/(((t0.c2) NOT BETWEEN (rt1.c1) AND (t0.c0))))) IS TRUE)  as count FROM vt0, rt1, t0);
SELECT ALL COUNT(*) FROM vt0, rt1, t0 WHERE (((t0.c1 COLLATE NOCASE)/(((t0.c2) NOT BETWEEN (rt1.c1) AND (t0.c0)))));
SELECT ALL * FROM vt0, rt1 WHERE (((CAST(rt1.c2 AS NUMERIC)) NOT BETWEEN (((((vt0.c0)AND(rt1.c0)))OR(rt1.c0))) AND ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c2 AS NUMERIC)) NOT BETWEEN (((((vt0.c0)AND(rt1.c0)))OR(rt1.c0))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((CAST(rt1.c2 AS NUMERIC)) NOT BETWEEN (((((vt0.c0)AND(rt1.c0)))OR(rt1.c0))) AND ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c2 AS NUMERIC)) NOT BETWEEN (((((vt0.c0)AND(rt1.c0)))OR(rt1.c0))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((CAST(rt1.c2 AS NUMERIC)) NOT BETWEEN (((((vt0.c0)AND(rt1.c0)))OR(rt1.c0))) AND ((vt0.c0 IN ()))));
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON (t0.c1 IN (CASE t0.c0  WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END, ((vt0.c0)<<(t0.c1)))) WHERE (((((((((t0.c1)OR(t0.c0)))OR(vt0.c0)))OR(0.6913788275234196)))AND((((vt0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))))) ORDER BY ((((t0.c0) IS FALSE)) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c1)OR(t0.c0)))OR(vt0.c0)))OR(0.6913788275234196)))AND((((vt0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (t0.c1 IN (CASE t0.c0  WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END, ((vt0.c0)<<(t0.c1)))) ORDER BY ((((t0.c0) IS FALSE)) NOT NULL));
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON (t0.c1 IN (CASE t0.c0  WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END, ((vt0.c0)<<(t0.c1)))) WHERE (((((((((t0.c1)OR(t0.c0)))OR(vt0.c0)))OR(0.6913788275234196)))AND((((vt0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))))) ORDER BY ((((t0.c0) IS FALSE)) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c1)OR(t0.c0)))OR(vt0.c0)))OR(0.6913788275234196)))AND((((vt0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (t0.c1 IN (CASE t0.c0  WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END, ((vt0.c0)<<(t0.c1)))) ORDER BY ((((t0.c0) IS FALSE)) NOT NULL));
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON (t0.c1 IN (CASE t0.c0  WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END, ((vt0.c0)<<(t0.c1)))) WHERE (((((((((t0.c1)OR(t0.c0)))OR(vt0.c0)))OR(0.6913788275234196)))AND((((vt0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))))) ORDER BY ((((t0.c0) IS FALSE)) NOT NULL);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((~ (0xffffffffba82721f))) ORDER BY (NOT ((rt1.c2 IN (NULL, rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (0xffffffffba82721f))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (NOT ((rt1.c2 IN (NULL, rt1.c0)))) DESC);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((~ (0xffffffffba82721f))) ORDER BY (NOT ((rt1.c2 IN (NULL, rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (0xffffffffba82721f))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (NOT ((rt1.c2 IN (NULL, rt1.c0)))) DESC);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((~ (0xffffffffba82721f))) ORDER BY (NOT ((rt1.c2 IN (NULL, rt1.c0)))) DESC;
SELECT * FROM vt0 WHERE (CAST(NULLIF(DISTINCT vt0.c0, vt0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULLIF(DISTINCT vt0.c0, vt0.c0) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(NULLIF(DISTINCT vt0.c0, vt0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULLIF(DISTINCT vt0.c0, vt0.c0) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(NULLIF(DISTINCT vt0.c0, vt0.c0) AS TEXT));
SELECT * FROM t0, vt0 WHERE (((((t0.c1)&(t0.c0))) BETWEEN (((vt0.c0)-('_*bb''2'))) AND ((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((t0.c1)&(t0.c0))) BETWEEN (((vt0.c0)-('_*bb''2'))) AND ((t0.c0 IN ())))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((t0.c1)&(t0.c0))) BETWEEN (((vt0.c0)-('_*bb''2'))) AND ((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((t0.c1)&(t0.c0))) BETWEEN (((vt0.c0)-('_*bb''2'))) AND ((t0.c0 IN ())))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((t0.c1)&(t0.c0))) BETWEEN (((vt0.c0)-('_*bb''2'))) AND ((t0.c0 IN ()))));
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT (t0.c0)));
SELECT SUM(count) FROM (SELECT (((NOT (t0.c0))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT (t0.c0)));
SELECT SUM(count) FROM (SELECT (((NOT (t0.c0))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT (t0.c0)));
SELECT COUNT(*) FROM rt1, vt0, t0 WHERE ('1144139454' COLLATE BINARY) ORDER BY CAST(((((t0.c0)OR(rt1.c0)))AND(x'')) AS TEXT) DESC  NULLS LAST, (((CAST(t0.c0 AS NUMERIC)))==((CAST(t0.c2 AS NUMERIC))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('1144139454' COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0, t0 ORDER BY CAST(((((t0.c0)OR(rt1.c0)))AND(x'')) AS TEXT) DESC  NULLS LAST, (((CAST(t0.c0 AS NUMERIC)))=((CAST(t0.c2 AS NUMERIC))))  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0, t0 WHERE ('1144139454' COLLATE BINARY) ORDER BY CAST(((((t0.c0)OR(rt1.c0)))AND(x'')) AS TEXT) DESC  NULLS LAST, (((CAST(t0.c0 AS NUMERIC)))==((CAST(t0.c2 AS NUMERIC))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('1144139454' COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0, t0 ORDER BY CAST(((((t0.c0)OR(rt1.c0)))AND(x'')) AS TEXT) DESC  NULLS LAST, (((CAST(t0.c0 AS NUMERIC)))=((CAST(t0.c2 AS NUMERIC))))  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0, t0 WHERE ('1144139454' COLLATE BINARY) ORDER BY CAST(((((t0.c0)OR(rt1.c0)))AND(x'')) AS TEXT) DESC  NULLS LAST, (((CAST(t0.c0 AS NUMERIC)))==((CAST(t0.c2 AS NUMERIC))))  NULLS LAST;
SELECT ALL * FROM t0, rt1, vt0 WHERE (CAST('yB,*M\nF' AS NUMERIC)) ORDER BY CASE WHEN LIKE(t0.c2, rt1.c0, '2') THEN ((((((((t0.c1)AND(t0.c1)))AND('2021858109')))OR(rt1.c2)))AND(rt1.c1)) ELSE ((vt0.c0) ISNULL) END ASC;
SELECT SUM(count) FROM (SELECT ((CAST('yB,*M\nF' AS NUMERIC)) IS TRUE)  as count FROM t0, rt1, vt0 ORDER BY CASE WHEN LIKE(t0.c2, rt1.c0, '2') THEN ((((((((t0.c1)AND(t0.c1)))AND('2021858109')))OR(rt1.c2)))AND(rt1.c1)) ELSE ((vt0.c0) ISNULL) END ASC);
SELECT ALL * FROM t0, rt1, vt0 WHERE (CAST('yB,*M\nF' AS NUMERIC)) ORDER BY CASE WHEN LIKE(t0.c2, rt1.c0, '2') THEN ((((((((t0.c1)AND(t0.c1)))AND('2021858109')))OR(rt1.c2)))AND(rt1.c1)) ELSE ((vt0.c0) ISNULL) END ASC;
SELECT SUM(count) FROM (SELECT ((CAST('yB,*M\nF' AS NUMERIC)) IS TRUE)  as count FROM t0, rt1, vt0 ORDER BY CASE WHEN LIKE(t0.c2, rt1.c0, '2') THEN ((((((((t0.c1)AND(t0.c1)))AND('2021858109')))OR(rt1.c2)))AND(rt1.c1)) ELSE ((vt0.c0) ISNULL) END ASC);
SELECT ALL * FROM t0, rt1, vt0 WHERE (CAST('yB,*M\nF' AS NUMERIC)) ORDER BY CASE WHEN LIKE(t0.c2, rt1.c0, '2') THEN ((((((((t0.c1)AND(t0.c1)))AND('2021858109')))OR(rt1.c2)))AND(rt1.c1)) ELSE ((vt0.c0) ISNULL) END ASC;
SELECT COUNT(*) FROM vt0 NOT INDEXED, rt1 WHERE (CAST((((rt1.c0))=((rt1.c0))) AS REAL)) ORDER BY ((CASE WHEN rt1.c2 THEN rt1.c0 END) ISNULL) ASC, ((((vt0.c0) NOT BETWEEN (rt1.c1) AND (-1.889075984E9)))<=(((rt1.c2)<>(x'e62fffdd'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt1.c0))=((rt1.c0))) AS REAL)) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((CASE WHEN rt1.c2 THEN rt1.c0 END) ISNULL) ASC, ((((vt0.c0) NOT BETWEEN (rt1.c1) AND (-1.889075984E9)))<=(((rt1.c2)!=(x'e62fffdd'))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 NOT INDEXED, rt1 WHERE (CAST((((rt1.c0))=((rt1.c0))) AS REAL)) ORDER BY ((CASE WHEN rt1.c2 THEN rt1.c0 END) ISNULL) ASC, ((((vt0.c0) NOT BETWEEN (rt1.c1) AND (-1.889075984E9)))<=(((rt1.c2)<>(x'e62fffdd'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt1.c0))=((rt1.c0))) AS REAL)) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((CASE WHEN rt1.c2 THEN rt1.c0 END) ISNULL) ASC, ((((vt0.c0) NOT BETWEEN (rt1.c1) AND (-1.889075984E9)))<=(((rt1.c2)!=(x'e62fffdd'))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 NOT INDEXED, rt1 WHERE (CAST((((rt1.c0))=((rt1.c0))) AS REAL)) ORDER BY ((CASE WHEN rt1.c2 THEN rt1.c0 END) ISNULL) ASC, ((((vt0.c0) NOT BETWEEN (rt1.c1) AND (-1.889075984E9)))<=(((rt1.c2)<>(x'e62fffdd'))))  NULLS LAST;
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON CAST(t0.c2 AS TEXT) COLLATE NOCASE CROSS JOIN rt1 ON CAST(CASE rt1.c0  WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN t0.c1 WHEN vt0.c0 THEN t0.c2 END AS BLOB) WHERE (NULL COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON CAST(t0.c2 AS TEXT) COLLATE NOCASE CROSS JOIN rt1 ON CAST(CASE rt1.c0  WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN t0.c1 WHEN vt0.c0 THEN t0.c2 END AS BLOB));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON CAST(t0.c2 AS TEXT) COLLATE NOCASE CROSS JOIN rt1 ON CAST(CASE rt1.c0  WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN t0.c1 WHEN vt0.c0 THEN t0.c2 END AS BLOB) WHERE (NULL COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON CAST(t0.c2 AS TEXT) COLLATE NOCASE CROSS JOIN rt1 ON CAST(CASE rt1.c0  WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN t0.c1 WHEN vt0.c0 THEN t0.c2 END AS BLOB));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON CAST(t0.c2 AS TEXT) COLLATE NOCASE CROSS JOIN rt1 ON CAST(CASE rt1.c0  WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN t0.c1 WHEN vt0.c0 THEN t0.c2 END AS BLOB) WHERE (NULL COLLATE RTRIM COLLATE NOCASE);
SELECT COUNT(*) FROM t0, vt0 WHERE ((~ (((t0.c0) NOT NULL)))) ORDER BY ((t0.c0)+(t0.c1)) COLLATE NOCASE DESC  NULLS FIRST, (~ ((NOT (t0.c2))));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c0)+(t0.c1)) COLLATE NOCASE DESC  NULLS FIRST, (~ ((NOT (t0.c2)))));
SELECT COUNT(*) FROM t0, vt0 WHERE ((~ (((t0.c0) NOT NULL)))) ORDER BY ((t0.c0)+(t0.c1)) COLLATE NOCASE DESC  NULLS FIRST, (~ ((NOT (t0.c2))));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c0)+(t0.c1)) COLLATE NOCASE DESC  NULLS FIRST, (~ ((NOT (t0.c2)))));
SELECT COUNT(*) FROM t0, vt0 WHERE ((~ (((t0.c0) NOT NULL)))) ORDER BY ((t0.c0)+(t0.c1)) COLLATE NOCASE DESC  NULLS FIRST, (~ ((NOT (t0.c2))));
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM t0 WHERE ((('625823284' IN (t0.c2)) IN ())) ORDER BY (((t0.c0)<>(t0.c0)) IN ((t0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('625823284' IN (t0.c2)) IN ())) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)!=(t0.c0)) IN ((t0.c0 IN ()))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((('625823284' IN (t0.c2)) IN ())) ORDER BY (((t0.c0)<>(t0.c0)) IN ((t0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('625823284' IN (t0.c2)) IN ())) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)!=(t0.c0)) IN ((t0.c0 IN ()))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((('625823284' IN (t0.c2)) IN ())) ORDER BY (((t0.c0)<>(t0.c0)) IN ((t0.c0 IN ()))) DESC  NULLS LAST;
SELECT * FROM vt0, rt1, t0 WHERE (((t0.c2 COLLATE NOCASE)AND((~ (x'8a05'))))) ORDER BY ((t0.c2)*((((NULL)) NOT BETWEEN ((t0.c2)) AND ((rt1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2 COLLATE NOCASE)AND((~ (x'8a05'))))) IS TRUE)  as count FROM vt0, rt1, t0 ORDER BY ((t0.c2)*((((NULL)) NOT BETWEEN ((t0.c2)) AND ((rt1.c0))))) DESC  NULLS FIRST);
SELECT * FROM vt0, rt1, t0 WHERE (((t0.c2 COLLATE NOCASE)AND((~ (x'8a05'))))) ORDER BY ((t0.c2)*((((NULL)) NOT BETWEEN ((t0.c2)) AND ((rt1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2 COLLATE NOCASE)AND((~ (x'8a05'))))) IS TRUE)  as count FROM vt0, rt1, t0 ORDER BY ((t0.c2)*((((NULL)) NOT BETWEEN ((t0.c2)) AND ((rt1.c0))))) DESC  NULLS FIRST);
SELECT * FROM vt0, rt1, t0 WHERE (((t0.c2 COLLATE NOCASE)AND((~ (x'8a05'))))) ORDER BY ((t0.c2)*((((NULL)) NOT BETWEEN ((t0.c2)) AND ((rt1.c0))))) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (NULL);
SELECT ALL * FROM rt1, t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE (t0.c2);
SELECT ALL * FROM t0 WHERE ((- (((x'')IS NOT(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((x'')IS NOT(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((- (((x'')IS NOT(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((x'')IS NOT(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((- (((x'')IS NOT(t0.c2)))));
SELECT COUNT(*) FROM vt0, t0 INNER JOIN rt1 ON (((((((((0.7085595015661386 IN ()))OR(CASE '쌅j&\r'  WHEN vt0.c0 THEN t0.c2 ELSE rt1.c2 END)))AND(vt0.c0)))AND('0.6688225048256183')))OR(((((t0.c0)AND(t0.c2)))AND(rt1.c1)))) WHERE ((((t0.c0 IN ()))LIKE((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ()))LIKE((rt1.c1 IN ())))) IS TRUE)  as count FROM vt0, t0 INNER JOIN rt1 ON (((((((((0.7085595015661386 IN ()))OR(CASE '쌅j&\r'  WHEN vt0.c0 THEN t0.c2 ELSE rt1.c2 END)))AND(vt0.c0)))AND('0.6688225048256183')))OR(((((t0.c0)AND(t0.c2)))AND(rt1.c1)))));
SELECT COUNT(*) FROM vt0, t0 INNER JOIN rt1 ON (((((((((0.7085595015661386 IN ()))OR(CASE '쌅j&\r'  WHEN vt0.c0 THEN t0.c2 ELSE rt1.c2 END)))AND(vt0.c0)))AND('0.6688225048256183')))OR(((((t0.c0)AND(t0.c2)))AND(rt1.c1)))) WHERE ((((t0.c0 IN ()))LIKE((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ()))LIKE((rt1.c1 IN ())))) IS TRUE)  as count FROM vt0, t0 INNER JOIN rt1 ON (((((((((0.7085595015661386 IN ()))OR(CASE '쌅j&\r'  WHEN vt0.c0 THEN t0.c2 ELSE rt1.c2 END)))AND(vt0.c0)))AND('0.6688225048256183')))OR(((((t0.c0)AND(t0.c2)))AND(rt1.c1)))));
SELECT COUNT(*) FROM vt0, t0 INNER JOIN rt1 ON (((((((((0.7085595015661386 IN ()))OR(CASE '쌅j&\r'  WHEN vt0.c0 THEN t0.c2 ELSE rt1.c2 END)))AND(vt0.c0)))AND('0.6688225048256183')))OR(((((t0.c0)AND(t0.c2)))AND(rt1.c1)))) WHERE ((((t0.c0 IN ()))LIKE((rt1.c1 IN ()))));
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((((t0.c1, NULL, rt1.c0)) BETWEEN ((t0.c1 COLLATE BINARY, NULL, ((rt1.c2)*(t0.c2)))) AND ((CASE rt1.c0  WHEN '?ZXehgᶶd9' THEN t0.c0 ELSE rt1.c0 END, '営y' COLLATE NOCASE, rt1.c1 COLLATE BINARY)))) ORDER BY ((((t0.c2 IN (rt1.c1, t0.c1)), ((rt1.c1) NOT NULL), ((rt1.c1) ISNULL), ((t0.c1) ISNULL), ((t0.c0) IS FALSE), ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)), ((rt1.c0)LIKE(rt1.c0))))>=(((NOT (t0.c0)), t0.c1 COLLATE RTRIM, (('') IS FALSE), 0.08824150380640061, ((t0.c2) ISNULL), ((rt1.c1)%(rt1.c0)), ((NULL) NOT BETWEEN (t0.c2) AND (t0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c1, NULL, rt1.c0)) BETWEEN ((t0.c1 COLLATE BINARY, NULL, ((rt1.c2)*(t0.c2)))) AND ((CASE rt1.c0  WHEN '?ZXehgᶶd9' THEN t0.c0 ELSE rt1.c0 END, '営y' COLLATE NOCASE, rt1.c1 COLLATE BINARY)))) IS TRUE)  as count FROM rt1, t0 ORDER BY ((((t0.c2 IN (rt1.c1, t0.c1)), ((rt1.c1) NOT NULL), ((rt1.c1) ISNULL), ((t0.c1) ISNULL), ((t0.c0) IS FALSE), ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)), ((rt1.c0)LIKE(rt1.c0))))>=(((NOT (t0.c0)), t0.c1 COLLATE RTRIM, (('') IS FALSE), 0.08824150380640061, ((t0.c2) ISNULL), ((rt1.c1)%(rt1.c0)), ((NULL) NOT BETWEEN (t0.c2) AND (t0.c2))))) ASC);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((((t0.c1, NULL, rt1.c0)) BETWEEN ((t0.c1 COLLATE BINARY, NULL, ((rt1.c2)*(t0.c2)))) AND ((CASE rt1.c0  WHEN '?ZXehgᶶd9' THEN t0.c0 ELSE rt1.c0 END, '営y' COLLATE NOCASE, rt1.c1 COLLATE BINARY)))) ORDER BY ((((t0.c2 IN (rt1.c1, t0.c1)), ((rt1.c1) NOT NULL), ((rt1.c1) ISNULL), ((t0.c1) ISNULL), ((t0.c0) IS FALSE), ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)), ((rt1.c0)LIKE(rt1.c0))))>=(((NOT (t0.c0)), t0.c1 COLLATE RTRIM, (('') IS FALSE), 0.08824150380640061, ((t0.c2) ISNULL), ((rt1.c1)%(rt1.c0)), ((NULL) NOT BETWEEN (t0.c2) AND (t0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c1, NULL, rt1.c0)) BETWEEN ((t0.c1 COLLATE BINARY, NULL, ((rt1.c2)*(t0.c2)))) AND ((CASE rt1.c0  WHEN '?ZXehgᶶd9' THEN t0.c0 ELSE rt1.c0 END, '営y' COLLATE NOCASE, rt1.c1 COLLATE BINARY)))) IS TRUE)  as count FROM rt1, t0 ORDER BY ((((t0.c2 IN (rt1.c1, t0.c1)), ((rt1.c1) NOT NULL), ((rt1.c1) ISNULL), ((t0.c1) ISNULL), ((t0.c0) IS FALSE), ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)), ((rt1.c0)LIKE(rt1.c0))))>=(((NOT (t0.c0)), t0.c1 COLLATE RTRIM, (('') IS FALSE), 0.08824150380640061, ((t0.c2) ISNULL), ((rt1.c1)%(rt1.c0)), ((NULL) NOT BETWEEN (t0.c2) AND (t0.c2))))) ASC);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((((t0.c1, NULL, rt1.c0)) BETWEEN ((t0.c1 COLLATE BINARY, NULL, ((rt1.c2)*(t0.c2)))) AND ((CASE rt1.c0  WHEN '?ZXehgᶶd9' THEN t0.c0 ELSE rt1.c0 END, '営y' COLLATE NOCASE, rt1.c1 COLLATE BINARY)))) ORDER BY ((((t0.c2 IN (rt1.c1, t0.c1)), ((rt1.c1) NOT NULL), ((rt1.c1) ISNULL), ((t0.c1) ISNULL), ((t0.c0) IS FALSE), ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)), ((rt1.c0)LIKE(rt1.c0))))>=(((NOT (t0.c0)), t0.c1 COLLATE RTRIM, (('') IS FALSE), 0.08824150380640061, ((t0.c2) ISNULL), ((rt1.c1)%(rt1.c0)), ((NULL) NOT BETWEEN (t0.c2) AND (t0.c2))))) ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0) ORDER BY ((((((((((((rt1.c1)OR(rt1.c1 COLLATE NOCASE)))AND((rt1.c0 IN ()))))OR(rt1.c1 COLLATE RTRIM)))AND((NOT (rt1.c1)))))OR((~ (rt1.c2)))))AND((+ (rt1.c1)))) DESC, ((rt1.c0)%(rt1.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY ((((((((((((rt1.c1)OR(rt1.c1 COLLATE NOCASE)))AND((rt1.c0 IN ()))))OR(rt1.c1 COLLATE RTRIM)))AND((NOT (rt1.c1)))))OR((~ (rt1.c2)))))AND((+ (rt1.c1)))) DESC, ((rt1.c0)%(rt1.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0) ORDER BY ((((((((((((rt1.c1)OR(rt1.c1 COLLATE NOCASE)))AND((rt1.c0 IN ()))))OR(rt1.c1 COLLATE RTRIM)))AND((NOT (rt1.c1)))))OR((~ (rt1.c2)))))AND((+ (rt1.c1)))) DESC, ((rt1.c0)%(rt1.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY ((((((((((((rt1.c1)OR(rt1.c1 COLLATE NOCASE)))AND((rt1.c0 IN ()))))OR(rt1.c1 COLLATE RTRIM)))AND((NOT (rt1.c1)))))OR((~ (rt1.c2)))))AND((+ (rt1.c1)))) DESC, ((rt1.c0)%(rt1.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0) ORDER BY ((((((((((((rt1.c1)OR(rt1.c1 COLLATE NOCASE)))AND((rt1.c0 IN ()))))OR(rt1.c1 COLLATE RTRIM)))AND((NOT (rt1.c1)))))OR((~ (rt1.c2)))))AND((+ (rt1.c1)))) DESC, ((rt1.c0)%(rt1.c0)) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM t0, rt1, vt0 WHERE (((((t0.c1)IS(rt1.c1))) NOT BETWEEN ((((rt1.c2))<((rt1.c0)))) AND (CAST(x'df88' AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((t0.c1)IS(rt1.c1))) NOT BETWEEN ((((rt1.c2))<((rt1.c0)))) AND (CAST(x'df88' AS INTEGER)))) IS TRUE)  as count FROM t0, rt1, vt0);
SELECT ALL COUNT(*) FROM t0, rt1, vt0 WHERE (((((t0.c1)IS(rt1.c1))) NOT BETWEEN ((((rt1.c2))<((rt1.c0)))) AND (CAST(x'df88' AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((t0.c1)IS(rt1.c1))) NOT BETWEEN ((((rt1.c2))<((rt1.c0)))) AND (CAST(x'df88' AS INTEGER)))) IS TRUE)  as count FROM t0, rt1, vt0);
SELECT ALL COUNT(*) FROM t0, rt1, vt0 WHERE (((((t0.c1)IS(rt1.c1))) NOT BETWEEN ((((rt1.c2))<((rt1.c0)))) AND (CAST(x'df88' AS INTEGER))));
SELECT * FROM t0, vt0, rt1 WHERE (((rt1.c0)>(t0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0)>(t0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT * FROM t0, vt0, rt1 WHERE (((rt1.c0)>(t0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0)>(t0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT * FROM t0, vt0, rt1 WHERE (((rt1.c0)>(t0.c1)) COLLATE NOCASE);
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c0)OR(t0.c2)))AND(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((t0.c0)OR(t0.c2)))AND(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c0)OR(t0.c2)))AND(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((t0.c0)OR(t0.c2)))AND(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c0)OR(t0.c2)))AND(vt0.c0)) COLLATE RTRIM);
SELECT * FROM vt0 WHERE (((((((vt0.c0)LIKE(vt0.c0)))AND(((vt0.c0)>(vt0.c0)))))AND(((vt0.c0)+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)LIKE(vt0.c0)))AND(((vt0.c0)>(vt0.c0)))))AND(((vt0.c0)+(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)LIKE(vt0.c0)))AND(((vt0.c0)>(vt0.c0)))))AND(((vt0.c0)+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)LIKE(vt0.c0)))AND(((vt0.c0)>(vt0.c0)))))AND(((vt0.c0)+(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)LIKE(vt0.c0)))AND(((vt0.c0)>(vt0.c0)))))AND(((vt0.c0)+(vt0.c0)))));
SELECT * FROM t0 CROSS JOIN vt0 ON NULL RIGHT OUTER JOIN rt1 ON (((rt1.c1 IN ()))>(CASE t0.c1  WHEN 1.3877767E8 THEN rt1.c1 END)) WHERE ((((t0.c1, rt1.c1, t0.c1)) NOT BETWEEN (((NOT (rt1.c0)), (rt1.c0 IN ()), json_type(rt1.c2))) AND (((t0.c2 IN (t0.c0, rt1.c2)), (rt1.c2 IN (t0.c2)), ((rt1.c0)!=('-413795173')))))) ORDER BY (((((t0.c1)) NOT BETWEEN ((NULL)) AND ((t0.c0)))) IS FALSE);
SELECT SUM(count) FROM (SELECT (((((t0.c1, rt1.c1, t0.c1)) NOT BETWEEN (((NOT (rt1.c0)), (rt1.c0 IN ()), json_type(rt1.c2))) AND (((t0.c2 IN (t0.c0, rt1.c2)), (rt1.c2 IN (t0.c2)), ((rt1.c0)<>('-413795173')))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON NULL RIGHT OUTER JOIN rt1 ON (((rt1.c1 IN ()))>(CASE t0.c1  WHEN 1.3877767E8 THEN rt1.c1 END)) ORDER BY (((((t0.c1)) NOT BETWEEN ((NULL)) AND ((t0.c0)))) IS FALSE));
SELECT * FROM t0 CROSS JOIN vt0 ON NULL RIGHT OUTER JOIN rt1 ON (((rt1.c1 IN ()))>(CASE t0.c1  WHEN 1.3877767E8 THEN rt1.c1 END)) WHERE ((((t0.c1, rt1.c1, t0.c1)) NOT BETWEEN (((NOT (rt1.c0)), (rt1.c0 IN ()), json_type(rt1.c2))) AND (((t0.c2 IN (t0.c0, rt1.c2)), (rt1.c2 IN (t0.c2)), ((rt1.c0)!=('-413795173')))))) ORDER BY (((((t0.c1)) NOT BETWEEN ((NULL)) AND ((t0.c0)))) IS FALSE);
SELECT SUM(count) FROM (SELECT (((((t0.c1, rt1.c1, t0.c1)) NOT BETWEEN (((NOT (rt1.c0)), (rt1.c0 IN ()), json_type(rt1.c2))) AND (((t0.c2 IN (t0.c0, rt1.c2)), (rt1.c2 IN (t0.c2)), ((rt1.c0)<>('-413795173')))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON NULL RIGHT OUTER JOIN rt1 ON (((rt1.c1 IN ()))>(CASE t0.c1  WHEN 1.3877767E8 THEN rt1.c1 END)) ORDER BY (((((t0.c1)) NOT BETWEEN ((NULL)) AND ((t0.c0)))) IS FALSE));
SELECT * FROM t0 CROSS JOIN vt0 ON NULL RIGHT OUTER JOIN rt1 ON (((rt1.c1 IN ()))>(CASE t0.c1  WHEN 1.3877767E8 THEN rt1.c1 END)) WHERE ((((t0.c1, rt1.c1, t0.c1)) NOT BETWEEN (((NOT (rt1.c0)), (rt1.c0 IN ()), json_type(rt1.c2))) AND (((t0.c2 IN (t0.c0, rt1.c2)), (rt1.c2 IN (t0.c2)), ((rt1.c0)!=('-413795173')))))) ORDER BY (((((t0.c1)) NOT BETWEEN ((NULL)) AND ((t0.c0)))) IS FALSE);
SELECT COUNT(*) FROM vt0, t0, rt1 WHERE (((((rt1.c2)-(rt1.c0))) IS TRUE)) ORDER BY CAST(NULLIF(t0.c0, rt1.c0) AS REAL) ASC  NULLS FIRST, ((((((((((t0.c1)<<(rt1.c1)))OR(x'3e9d' COLLATE BINARY)))OR(((-1829238240)GLOB(rt1.c0)))))OR(((((((((rt1.c0)AND(rt1.c0)))AND('')))AND(t0.c1)))OR(t0.c2)))))AND((((0.7238810932757683, t0.c1, rt1.c2)) NOT BETWEEN ((t0.c1, t0.c2, rt1.c2)) AND ((t0.c0, t0.c2, vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)-(rt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, t0, rt1 NOT INDEXED ORDER BY CAST(NULLIF(t0.c0, rt1.c0) AS REAL) ASC  NULLS FIRST, ((((((((((t0.c1)<<(rt1.c1)))OR(x'3e9d' COLLATE BINARY)))OR(((-1829238240)GLOB(rt1.c0)))))OR(((((((((rt1.c0)AND(rt1.c0)))AND('')))AND(t0.c1)))OR(t0.c2)))))AND((((0.7238810932757683, t0.c1, rt1.c2)) NOT BETWEEN ((t0.c1, t0.c2, rt1.c2)) AND ((t0.c0, t0.c2, vt0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, rt1 WHERE (((((rt1.c2)-(rt1.c0))) IS TRUE)) ORDER BY CAST(NULLIF(t0.c0, rt1.c0) AS REAL) ASC  NULLS FIRST, ((((((((((t0.c1)<<(rt1.c1)))OR(x'3e9d' COLLATE BINARY)))OR(((-1829238240)GLOB(rt1.c0)))))OR(((((((((rt1.c0)AND(rt1.c0)))AND('')))AND(t0.c1)))OR(t0.c2)))))AND((((0.7238810932757683, t0.c1, rt1.c2)) NOT BETWEEN ((t0.c1, t0.c2, rt1.c2)) AND ((t0.c0, t0.c2, vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)-(rt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, t0, rt1 NOT INDEXED ORDER BY CAST(NULLIF(t0.c0, rt1.c0) AS REAL) ASC  NULLS FIRST, ((((((((((t0.c1)<<(rt1.c1)))OR(x'3e9d' COLLATE BINARY)))OR(((-1829238240)GLOB(rt1.c0)))))OR(((((((((rt1.c0)AND(rt1.c0)))AND('')))AND(t0.c1)))OR(t0.c2)))))AND((((0.7238810932757683, t0.c1, rt1.c2)) NOT BETWEEN ((t0.c1, t0.c2, rt1.c2)) AND ((t0.c0, t0.c2, vt0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, rt1 WHERE (((((rt1.c2)-(rt1.c0))) IS TRUE)) ORDER BY CAST(NULLIF(t0.c0, rt1.c0) AS REAL) ASC  NULLS FIRST, ((((((((((t0.c1)<<(rt1.c1)))OR(x'3e9d' COLLATE BINARY)))OR(((-1829238240)GLOB(rt1.c0)))))OR(((((((((rt1.c0)AND(rt1.c0)))AND('')))AND(t0.c1)))OR(t0.c2)))))AND((((0.7238810932757683, t0.c1, rt1.c2)) NOT BETWEEN ((t0.c1, t0.c2, rt1.c2)) AND ((t0.c0, t0.c2, vt0.c0))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (x'4d3f') ORDER BY ((((((rt1.c1)OR(rt1.c0)))OR(rt1.c0))) NOT BETWEEN (((rt1.c1) ISNULL)) AND ('0.8751579705059692')) DESC  NULLS FIRST, CAST(((((((((rt1.c2)AND(rt1.c1)))AND(rt1.c2)))AND(rt1.c0)))OR('-1206210222')) AS INTEGER) ASC  NULLS FIRST, ((CAST(rt1.c0 AS REAL))>>(((rt1.c0)GLOB(rt1.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'4d3f') IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c1)OR(rt1.c0)))OR(rt1.c0))) NOT BETWEEN (((rt1.c1) ISNULL)) AND ('0.8751579705059692')) DESC  NULLS FIRST, CAST(((((((((rt1.c2)AND(rt1.c1)))AND(rt1.c2)))AND(rt1.c0)))OR('-1206210222')) AS INTEGER) ASC  NULLS FIRST, ((CAST(rt1.c0 AS REAL))>>(((rt1.c0)GLOB(rt1.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (x'4d3f') ORDER BY ((((((rt1.c1)OR(rt1.c0)))OR(rt1.c0))) NOT BETWEEN (((rt1.c1) ISNULL)) AND ('0.8751579705059692')) DESC  NULLS FIRST, CAST(((((((((rt1.c2)AND(rt1.c1)))AND(rt1.c2)))AND(rt1.c0)))OR('-1206210222')) AS INTEGER) ASC  NULLS FIRST, ((CAST(rt1.c0 AS REAL))>>(((rt1.c0)GLOB(rt1.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'4d3f') IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c1)OR(rt1.c0)))OR(rt1.c0))) NOT BETWEEN (((rt1.c1) ISNULL)) AND ('0.8751579705059692')) DESC  NULLS FIRST, CAST(((((((((rt1.c2)AND(rt1.c1)))AND(rt1.c2)))AND(rt1.c0)))OR('-1206210222')) AS INTEGER) ASC  NULLS FIRST, ((CAST(rt1.c0 AS REAL))>>(((rt1.c0)GLOB(rt1.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (x'4d3f') ORDER BY ((((((rt1.c1)OR(rt1.c0)))OR(rt1.c0))) NOT BETWEEN (((rt1.c1) ISNULL)) AND ('0.8751579705059692')) DESC  NULLS FIRST, CAST(((((((((rt1.c2)AND(rt1.c1)))AND(rt1.c2)))AND(rt1.c0)))OR('-1206210222')) AS INTEGER) ASC  NULLS FIRST, ((CAST(rt1.c0 AS REAL))>>(((rt1.c0)GLOB(rt1.c2)))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 FULL OUTER JOIN rt1 ON rt1.c1 WHERE (((((((vt0.c0)GLOB(rt1.c0)))AND(CASE 0.0029373064843950525  WHEN rt1.c0 THEN 0.04155249234094216 END)))AND((+ (0.5642316902102611)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)GLOB(rt1.c0)))AND(CASE 0.0029373064843950525  WHEN rt1.c0 THEN 0.04155249234094216 END)))AND((+ (0.5642316902102611))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON rt1.c1);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt1 ON rt1.c1 WHERE (((((((vt0.c0)GLOB(rt1.c0)))AND(CASE 0.0029373064843950525  WHEN rt1.c0 THEN 0.04155249234094216 END)))AND((+ (0.5642316902102611)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)GLOB(rt1.c0)))AND(CASE 0.0029373064843950525  WHEN rt1.c0 THEN 0.04155249234094216 END)))AND((+ (0.5642316902102611))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON rt1.c1);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt1 ON rt1.c1 WHERE (((((((vt0.c0)GLOB(rt1.c0)))AND(CASE 0.0029373064843950525  WHEN rt1.c0 THEN 0.04155249234094216 END)))AND((+ (0.5642316902102611)))));
SELECT COUNT(*) FROM vt0, rt1 NATURAL JOIN t0 WHERE (CASE CAST(rt1.c1 AS TEXT)  WHEN (+ (vt0.c0)) THEN CAST(t0.c2 AS NUMERIC) ELSE ((0Xffffffff90d6cb40) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt1.c1 AS TEXT)  WHEN (+ (vt0.c0)) THEN CAST(t0.c2 AS NUMERIC) ELSE ((0xffffffff90d6cb40) NOT NULL) END) IS TRUE)  as count FROM vt0, rt1 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0, rt1 NATURAL JOIN t0 WHERE (CASE CAST(rt1.c1 AS TEXT)  WHEN (+ (vt0.c0)) THEN CAST(t0.c2 AS NUMERIC) ELSE ((0Xffffffff90d6cb40) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt1.c1 AS TEXT)  WHEN (+ (vt0.c0)) THEN CAST(t0.c2 AS NUMERIC) ELSE ((0xffffffff90d6cb40) NOT NULL) END) IS TRUE)  as count FROM vt0, rt1 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0, rt1 NATURAL JOIN t0 WHERE (CASE CAST(rt1.c1 AS TEXT)  WHEN (+ (vt0.c0)) THEN CAST(t0.c2 AS NUMERIC) ELSE ((0Xffffffff90d6cb40) NOT NULL) END);
SELECT ALL * FROM t0 WHERE (((t0.c2 COLLATE RTRIM) NOT BETWEEN ((~ (t0.c1))) AND (((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0))))) ORDER BY (((t0.c1, t0.c2, t0.c0)) BETWEEN ((((t0.c1)!=(t0.c1)), (((t0.c2))>((t0.c1))), t0.c2 COLLATE RTRIM)) AND ((((t0.c2) IS TRUE), '', CASE WHEN t0.c0 THEN t0.c0 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2 COLLATE RTRIM) NOT BETWEEN ((~ (t0.c1))) AND (((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c1, t0.c2, t0.c0)) BETWEEN ((((t0.c1)<>(t0.c1)), (((t0.c2))>((t0.c1))), t0.c2 COLLATE RTRIM)) AND ((((t0.c2) IS TRUE), '', CASE WHEN t0.c0 THEN t0.c0 END)))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((t0.c2 COLLATE RTRIM) NOT BETWEEN ((~ (t0.c1))) AND (((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0))))) ORDER BY (((t0.c1, t0.c2, t0.c0)) BETWEEN ((((t0.c1)!=(t0.c1)), (((t0.c2))>((t0.c1))), t0.c2 COLLATE RTRIM)) AND ((((t0.c2) IS TRUE), '', CASE WHEN t0.c0 THEN t0.c0 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2 COLLATE RTRIM) NOT BETWEEN ((~ (t0.c1))) AND (((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c1, t0.c2, t0.c0)) BETWEEN ((((t0.c1)<>(t0.c1)), (((t0.c2))>((t0.c1))), t0.c2 COLLATE RTRIM)) AND ((((t0.c2) IS TRUE), '', CASE WHEN t0.c0 THEN t0.c0 END)))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((t0.c2 COLLATE RTRIM) NOT BETWEEN ((~ (t0.c1))) AND (((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0))))) ORDER BY (((t0.c1, t0.c2, t0.c0)) BETWEEN ((((t0.c1)!=(t0.c1)), (((t0.c2))>((t0.c1))), t0.c2 COLLATE RTRIM)) AND ((((t0.c2) IS TRUE), '', CASE WHEN t0.c0 THEN t0.c0 END)))  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((vt0.c0))>((vt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0))>((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0))>((vt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0))>((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0))>((vt0.c0))) IN ()));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON 'J' WHERE ('1595363611') ORDER BY (~ ((+ (rt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (('1595363611') IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON 'J' ORDER BY (~ ((+ (rt1.c1)))) ASC);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON 'J' WHERE ('1595363611') ORDER BY (~ ((+ (rt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (('1595363611') IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON 'J' ORDER BY (~ ((+ (rt1.c1)))) ASC);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON 'J' WHERE ('1595363611') ORDER BY (~ ((+ (rt1.c1)))) ASC;
SELECT ALL * FROM rt1, t0 WHERE (((((rt1.c2) NOT BETWEEN (t0.c1) AND (t0.c1))) BETWEEN ((rt1.c2 IN ())) AND ((((rt1.c2))=((x'')))))) ORDER BY CAST(CASE WHEN rt1.c1 THEN rt1.c1 ELSE t0.c1 END AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOT BETWEEN (t0.c1) AND (t0.c1))) BETWEEN ((rt1.c2 IN ())) AND ((((rt1.c2))==((x'')))))) IS TRUE)  as count FROM rt1, t0 ORDER BY CAST(CASE WHEN rt1.c1 THEN rt1.c1 ELSE t0.c1 END AS NUMERIC));
SELECT ALL * FROM rt1, t0 WHERE (((((rt1.c2) NOT BETWEEN (t0.c1) AND (t0.c1))) BETWEEN ((rt1.c2 IN ())) AND ((((rt1.c2))=((x'')))))) ORDER BY CAST(CASE WHEN rt1.c1 THEN rt1.c1 ELSE t0.c1 END AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOT BETWEEN (t0.c1) AND (t0.c1))) BETWEEN ((rt1.c2 IN ())) AND ((((rt1.c2))==((x'')))))) IS TRUE)  as count FROM rt1, t0 ORDER BY CAST(CASE WHEN rt1.c1 THEN rt1.c1 ELSE t0.c1 END AS NUMERIC));
SELECT ALL * FROM rt1, t0 WHERE (((((rt1.c2) NOT BETWEEN (t0.c1) AND (t0.c1))) BETWEEN ((rt1.c2 IN ())) AND ((((rt1.c2))=((x'')))))) ORDER BY CAST(CASE WHEN rt1.c1 THEN rt1.c1 ELSE t0.c1 END AS NUMERIC);
SELECT ALL * FROM rt1 WHERE ((CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END IN (CAST(rt1.c1 AS NUMERIC), x'5441')));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END IN (CAST(rt1.c1 AS NUMERIC), x'5441'))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END IN (CAST(rt1.c1 AS NUMERIC), x'5441')));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END IN (CAST(rt1.c1 AS NUMERIC), x'5441'))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END IN (CAST(rt1.c1 AS NUMERIC), x'5441')));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c1) ORDER BY (t0.c0 IN ()) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0 ORDER BY (t0.c0 IN ()) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c1) ORDER BY (t0.c0 IN ()) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0 ORDER BY (t0.c0 IN ()) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c1) ORDER BY (t0.c0 IN ()) COLLATE BINARY ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((CAST(t0.c1 AS TEXT) IN ())) ORDER BY ((((((t0.c1)AND(t0.c0)))AND(t0.c1))) BETWEEN ((((NULL, t0.c1, t0.c0, t0.c0, t0.c1)) NOT BETWEEN ((NULL, t0.c0, t0.c0, t0.c2, t0.c0)) AND ((t0.c2, t0.c0, t0.c2, t0.c1, t0.c1)))) AND (((t0.c2)<>(NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(t0.c1 AS TEXT) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c1)AND(t0.c0)))AND(t0.c1))) BETWEEN ((((NULL, t0.c1, t0.c0, t0.c0, t0.c1)) NOT BETWEEN ((NULL, t0.c0, t0.c0, t0.c2, t0.c0)) AND ((t0.c2, t0.c0, t0.c2, t0.c1, t0.c1)))) AND (((t0.c2)!=(NULL))))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((CAST(t0.c1 AS TEXT) IN ())) ORDER BY ((((((t0.c1)AND(t0.c0)))AND(t0.c1))) BETWEEN ((((NULL, t0.c1, t0.c0, t0.c0, t0.c1)) NOT BETWEEN ((NULL, t0.c0, t0.c0, t0.c2, t0.c0)) AND ((t0.c2, t0.c0, t0.c2, t0.c1, t0.c1)))) AND (((t0.c2)<>(NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(t0.c1 AS TEXT) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c1)AND(t0.c0)))AND(t0.c1))) BETWEEN ((((NULL, t0.c1, t0.c0, t0.c0, t0.c1)) NOT BETWEEN ((NULL, t0.c0, t0.c0, t0.c2, t0.c0)) AND ((t0.c2, t0.c0, t0.c2, t0.c1, t0.c1)))) AND (((t0.c2)!=(NULL))))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((CAST(t0.c1 AS TEXT) IN ())) ORDER BY ((((((t0.c1)AND(t0.c0)))AND(t0.c1))) BETWEEN ((((NULL, t0.c1, t0.c0, t0.c0, t0.c1)) NOT BETWEEN ((NULL, t0.c0, t0.c0, t0.c2, t0.c0)) AND ((t0.c2, t0.c0, t0.c2, t0.c1, t0.c1)))) AND (((t0.c2)<>(NULL))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt1, t0 WHERE (((((rt1.c1))<>((rt1.c0))) IN (((rt1.c0) NOT BETWEEN (NULL) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1))!=((rt1.c0))) IN (((rt1.c0) NOT BETWEEN (NULL) AND (rt1.c0))))) IS TRUE)  as count FROM vt0, rt1 NOT INDEXED, t0);
SELECT COUNT(*) FROM vt0, rt1, t0 WHERE (((((rt1.c1))<>((rt1.c0))) IN (((rt1.c0) NOT BETWEEN (NULL) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1))!=((rt1.c0))) IN (((rt1.c0) NOT BETWEEN (NULL) AND (rt1.c0))))) IS TRUE)  as count FROM vt0, rt1 NOT INDEXED, t0);
SELECT COUNT(*) FROM vt0, rt1, t0 WHERE (((((rt1.c1))<>((rt1.c0))) IN (((rt1.c0) NOT BETWEEN (NULL) AND (rt1.c0)))));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((((x'')) NOT BETWEEN ((rt1.c2 COLLATE NOCASE)) AND ((CAST(rt1.c1 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL (((((x'')) NOT BETWEEN ((rt1.c2 COLLATE NOCASE)) AND ((CAST(rt1.c1 AS TEXT))))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((((x'')) NOT BETWEEN ((rt1.c2 COLLATE NOCASE)) AND ((CAST(rt1.c1 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL (((((x'')) NOT BETWEEN ((rt1.c2 COLLATE NOCASE)) AND ((CAST(rt1.c1 AS TEXT))))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((((x'')) NOT BETWEEN ((rt1.c2 COLLATE NOCASE)) AND ((CAST(rt1.c1 AS TEXT)))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((- (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((- (vt0.c0))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((- (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((- (vt0.c0))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((- (vt0.c0)));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c2) AND (t0.c0)))/(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c1))))) ORDER BY (((NOT (t0.c2)))==(((((((((t0.c1)OR(t0.c2)))AND(t0.c0)))AND(t0.c1)))OR(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (t0.c2) AND (t0.c0)))/(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY (((NOT (t0.c2)))=(((((((((t0.c1)OR(t0.c2)))AND(t0.c0)))AND(t0.c1)))OR(t0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c2) AND (t0.c0)))/(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c1))))) ORDER BY (((NOT (t0.c2)))==(((((((((t0.c1)OR(t0.c2)))AND(t0.c0)))AND(t0.c1)))OR(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (t0.c2) AND (t0.c0)))/(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY (((NOT (t0.c2)))=(((((((((t0.c1)OR(t0.c2)))AND(t0.c0)))AND(t0.c1)))OR(t0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c2) AND (t0.c0)))/(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c1))))) ORDER BY (((NOT (t0.c2)))==(((((((((t0.c1)OR(t0.c2)))AND(t0.c0)))AND(t0.c1)))OR(t0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0, rt1 WHERE (((IFNULL(DISTINCT rt1.c0, t0.c1))<=(((((rt1.c2)OR(rt1.c2)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((IFNULL(DISTINCT rt1.c0, t0.c1))<=(((((rt1.c2)OR(rt1.c2)))AND(vt0.c0))))) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT ALL COUNT(*) FROM t0, vt0, rt1 WHERE (((IFNULL(DISTINCT rt1.c0, t0.c1))<=(((((rt1.c2)OR(rt1.c2)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((IFNULL(DISTINCT rt1.c0, t0.c1))<=(((((rt1.c2)OR(rt1.c2)))AND(vt0.c0))))) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT ALL COUNT(*) FROM t0, vt0, rt1 WHERE (((IFNULL(DISTINCT rt1.c0, t0.c1))<=(((((rt1.c2)OR(rt1.c2)))AND(vt0.c0)))));
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON CAST(CAST(rt1.c0 AS REAL) AS NUMERIC) CROSS JOIN t0 ON (((vt0.c0 IN ()))||((~ (NULL)))) WHERE (((IFNULL(rt1.c1, rt1.c0))<<(rt1.c2 COLLATE NOCASE))) ORDER BY ((((rt1.c1)AND(((rt1.c0)!=('-1386372490')))))AND(CAST(rt1.c2 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((IFNULL(rt1.c1, rt1.c0))<<(rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON CAST(CAST(rt1.c0 AS REAL) AS NUMERIC) CROSS JOIN t0 ON (((vt0.c0 IN ()))||((~ (NULL)))) ORDER BY ((((rt1.c1)AND(((rt1.c0)!=('-1386372490')))))AND(CAST(rt1.c2 AS NUMERIC)))  NULLS LAST);
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON CAST(CAST(rt1.c0 AS REAL) AS NUMERIC) CROSS JOIN t0 ON (((vt0.c0 IN ()))||((~ (NULL)))) WHERE (((IFNULL(rt1.c1, rt1.c0))<<(rt1.c2 COLLATE NOCASE))) ORDER BY ((((rt1.c1)AND(((rt1.c0)!=('-1386372490')))))AND(CAST(rt1.c2 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((IFNULL(rt1.c1, rt1.c0))<<(rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON CAST(CAST(rt1.c0 AS REAL) AS NUMERIC) CROSS JOIN t0 ON (((vt0.c0 IN ()))||((~ (NULL)))) ORDER BY ((((rt1.c1)AND(((rt1.c0)!=('-1386372490')))))AND(CAST(rt1.c2 AS NUMERIC)))  NULLS LAST);
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON CAST(CAST(rt1.c0 AS REAL) AS NUMERIC) CROSS JOIN t0 ON (((vt0.c0 IN ()))||((~ (NULL)))) WHERE (((IFNULL(rt1.c1, rt1.c0))<<(rt1.c2 COLLATE NOCASE))) ORDER BY ((((rt1.c1)AND(((rt1.c0)!=('-1386372490')))))AND(CAST(rt1.c2 AS NUMERIC)))  NULLS LAST;
SELECT * FROM t0, vt0 INNER JOIN rt1 ON ((vt0.c0 IN ()) IN (((rt1.c0) BETWEEN (t0.c2) AND ('137400353')), ((t0.c0) BETWEEN (t0.c1) AND (t0.c1)))) WHERE (((((vt0.c0)AND(t0.c1)))==((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(t0.c1)))=((NOT (vt0.c0))))) IS TRUE)  as count FROM t0, vt0 INNER JOIN rt1 ON ((vt0.c0 IN ()) IN (((rt1.c0) BETWEEN (t0.c2) AND ('137400353')), ((t0.c0) BETWEEN (t0.c1) AND (t0.c1)))));
SELECT * FROM t0, vt0 INNER JOIN rt1 ON ((vt0.c0 IN ()) IN (((rt1.c0) BETWEEN (t0.c2) AND ('137400353')), ((t0.c0) BETWEEN (t0.c1) AND (t0.c1)))) WHERE (((((vt0.c0)AND(t0.c1)))==((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(t0.c1)))=((NOT (vt0.c0))))) IS TRUE)  as count FROM t0, vt0 INNER JOIN rt1 ON ((vt0.c0 IN ()) IN (((rt1.c0) BETWEEN (t0.c2) AND ('137400353')), ((t0.c0) BETWEEN (t0.c1) AND (t0.c1)))));
SELECT * FROM t0, vt0 INNER JOIN rt1 ON ((vt0.c0 IN ()) IN (((rt1.c0) BETWEEN (t0.c2) AND ('137400353')), ((t0.c0) BETWEEN (t0.c1) AND (t0.c1)))) WHERE (((((vt0.c0)AND(t0.c1)))==((NOT (vt0.c0)))));
SELECT * FROM rt1, t0 WHERE (((((0.3605354079613252) IS FALSE))GLOB(rt1.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((0.3605354079613252) IS FALSE))GLOB(rt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (((((0.3605354079613252) IS FALSE))GLOB(rt1.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((0.3605354079613252) IS FALSE))GLOB(rt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (((((0.3605354079613252) IS FALSE))GLOB(rt1.c1 COLLATE NOCASE)));
SELECT ALL * FROM rt1 NOT INDEXED CROSS JOIN vt0 ON ((CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN t0.c1 WHEN t0.c2 THEN rt1.c1 END) NOT BETWEEN ((rt1.c1 IN ())) AND (CASE t0.c2  WHEN t0.c1 THEN t0.c1 END)) FULL OUTER JOIN t0 ON ((((((t0.c0) NOTNULL))OR((t0.c0 IN ()))))AND(((t0.c1)>(rt1.c1)))) WHERE (CAST(((rt1.c0)IS NOT(rt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0)IS NOT(rt1.c0)) AS INTEGER)) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ((CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN t0.c1 WHEN t0.c2 THEN rt1.c1 END) NOT BETWEEN ((rt1.c1 IN ())) AND (CASE t0.c2  WHEN t0.c1 THEN t0.c1 END)) FULL OUTER JOIN t0 ON ((((((t0.c0) NOTNULL))OR((t0.c0 IN ()))))AND(((t0.c1)>(rt1.c1)))));
SELECT ALL * FROM rt1 NOT INDEXED CROSS JOIN vt0 ON ((CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN t0.c1 WHEN t0.c2 THEN rt1.c1 END) NOT BETWEEN ((rt1.c1 IN ())) AND (CASE t0.c2  WHEN t0.c1 THEN t0.c1 END)) FULL OUTER JOIN t0 ON ((((((t0.c0) NOTNULL))OR((t0.c0 IN ()))))AND(((t0.c1)>(rt1.c1)))) WHERE (CAST(((rt1.c0)IS NOT(rt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0)IS NOT(rt1.c0)) AS INTEGER)) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ((CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN t0.c1 WHEN t0.c2 THEN rt1.c1 END) NOT BETWEEN ((rt1.c1 IN ())) AND (CASE t0.c2  WHEN t0.c1 THEN t0.c1 END)) FULL OUTER JOIN t0 ON ((((((t0.c0) NOTNULL))OR((t0.c0 IN ()))))AND(((t0.c1)>(rt1.c1)))));
SELECT * FROM rt1, t0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (LAST_INSERT_ROWID());
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (rt1.c0 COLLATE BINARY) ORDER BY CAST(CAST(t0.c1 AS REAL) AS NUMERIC) ASC  NULLS FIRST, (((((rt1.c1)>=('')), (rt1.c1 IN (t0.c2)), (- (t0.c0))))=((((((((((t0.c0)OR(t0.c0)))OR(NULL)))AND(t0.c2)))OR(rt1.c0)), (~ (t0.c2)), CAST(rt1.c2 AS REAL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0 COLLATE BINARY) IS TRUE)  as count FROM t0, rt1 ORDER BY CAST(CAST(t0.c1 AS REAL) AS NUMERIC) ASC  NULLS FIRST, (((((rt1.c1)>=('')), (rt1.c1 IN (t0.c2)), (- (t0.c0))))=((((((((((t0.c0)OR(t0.c0)))OR(NULL)))AND(t0.c2)))OR(rt1.c0)), (~ (t0.c2)), CAST(rt1.c2 AS REAL))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (rt1.c0 COLLATE BINARY) ORDER BY CAST(CAST(t0.c1 AS REAL) AS NUMERIC) ASC  NULLS FIRST, (((((rt1.c1)>=('')), (rt1.c1 IN (t0.c2)), (- (t0.c0))))=((((((((((t0.c0)OR(t0.c0)))OR(NULL)))AND(t0.c2)))OR(rt1.c0)), (~ (t0.c2)), CAST(rt1.c2 AS REAL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0 COLLATE BINARY) IS TRUE)  as count FROM t0, rt1 ORDER BY CAST(CAST(t0.c1 AS REAL) AS NUMERIC) ASC  NULLS FIRST, (((((rt1.c1)>=('')), (rt1.c1 IN (t0.c2)), (- (t0.c0))))=((((((((((t0.c0)OR(t0.c0)))OR(NULL)))AND(t0.c2)))OR(rt1.c0)), (~ (t0.c2)), CAST(rt1.c2 AS REAL))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (rt1.c0 COLLATE BINARY) ORDER BY CAST(CAST(t0.c1 AS REAL) AS NUMERIC) ASC  NULLS FIRST, (((((rt1.c1)>=('')), (rt1.c1 IN (t0.c2)), (- (t0.c0))))=((((((((((t0.c0)OR(t0.c0)))OR(NULL)))AND(t0.c2)))OR(rt1.c0)), (~ (t0.c2)), CAST(rt1.c2 AS REAL))))  NULLS FIRST;
SELECT ALL * FROM rt1, t0 WHERE ((~ (CAST(rt1.c0 AS REAL)))) ORDER BY ((((rt1.c2)&(NULL)))IS NOT(CAST(rt1.c0 AS REAL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt1.c0 AS REAL)))) IS TRUE)  as count FROM rt1, t0 ORDER BY ((((rt1.c2)&(NULL)))IS NOT(CAST(rt1.c0 AS REAL))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, t0 WHERE ((~ (CAST(rt1.c0 AS REAL)))) ORDER BY ((((rt1.c2)&(NULL)))IS NOT(CAST(rt1.c0 AS REAL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt1.c0 AS REAL)))) IS TRUE)  as count FROM rt1, t0 ORDER BY ((((rt1.c2)&(NULL)))IS NOT(CAST(rt1.c0 AS REAL))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, t0 WHERE ((~ (CAST(rt1.c0 AS REAL)))) ORDER BY ((((rt1.c2)&(NULL)))IS NOT(CAST(rt1.c0 AS REAL))) DESC  NULLS FIRST;
SELECT * FROM t0, rt1 WHERE (CAST(rt1.c0 AS INTEGER) COLLATE BINARY) ORDER BY (((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c0 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM t0, rt1 ORDER BY (((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))) COLLATE BINARY);
SELECT * FROM t0, rt1 WHERE (CAST(rt1.c0 AS INTEGER) COLLATE BINARY) ORDER BY (((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c0 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM t0, rt1 ORDER BY (((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))) COLLATE BINARY);
SELECT * FROM t0, rt1 WHERE (CAST(rt1.c0 AS INTEGER) COLLATE BINARY) ORDER BY (((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))) COLLATE BINARY;
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c1);
SELECT COUNT(*) FROM t0, vt0 WHERE (((vt0.c0 COLLATE BINARY)>=((~ (t0.c2))))) ORDER BY ((((t0.c1)<<(vt0.c0))) BETWEEN (((vt0.c0) IS FALSE)) AND (((t0.c2)&(t0.c1))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)>=((~ (t0.c2))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c1)<<(vt0.c0))) BETWEEN (((vt0.c0) IS FALSE)) AND (((t0.c2)&(t0.c1)))));
SELECT COUNT(*) FROM t0, vt0 WHERE (((vt0.c0 COLLATE BINARY)>=((~ (t0.c2))))) ORDER BY ((((t0.c1)<<(vt0.c0))) BETWEEN (((vt0.c0) IS FALSE)) AND (((t0.c2)&(t0.c1))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)>=((~ (t0.c2))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c1)<<(vt0.c0))) BETWEEN (((vt0.c0) IS FALSE)) AND (((t0.c2)&(t0.c1)))));
SELECT COUNT(*) FROM t0, vt0 WHERE (((vt0.c0 COLLATE BINARY)>=((~ (t0.c2))))) ORDER BY ((((t0.c1)<<(vt0.c0))) BETWEEN (((vt0.c0) IS FALSE)) AND (((t0.c2)&(t0.c1))));
SELECT COUNT(*) FROM vt0, t0, rt1 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM vt0, t0, rt1);
SELECT COUNT(*) FROM vt0, t0, rt1 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM vt0, t0, rt1);
SELECT COUNT(*) FROM vt0, t0, rt1 WHERE (t0.c2);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((((((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((vt0.c0)%(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND('667694704')))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((vt0.c0)%(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND('667694704')))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((((((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((vt0.c0)%(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND('667694704')))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((vt0.c0)%(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND('667694704')))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((((((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((vt0.c0)%(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND('667694704')))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(UPPER(rt1.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(UPPER(rt1.c0) AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(UPPER(rt1.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(UPPER(rt1.c0) AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(UPPER(rt1.c0) AS TEXT));
SELECT COUNT(*) FROM t0, rt1, vt0 WHERE ((rt1.c2 COLLATE RTRIM IN ())) ORDER BY (rt1.c2 IN ((((rt1.c1, t0.c2, t0.c1))==((vt0.c0, vt0.c0, t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c2 COLLATE RTRIM IN ())) IS TRUE)  as count FROM t0, rt1, vt0 ORDER BY (rt1.c2 IN ((((rt1.c1, t0.c2, t0.c1))==((vt0.c0, vt0.c0, t0.c0))))));
SELECT COUNT(*) FROM t0, rt1, vt0 WHERE ((rt1.c2 COLLATE RTRIM IN ())) ORDER BY (rt1.c2 IN ((((rt1.c1, t0.c2, t0.c1))==((vt0.c0, vt0.c0, t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c2 COLLATE RTRIM IN ())) IS TRUE)  as count FROM t0, rt1, vt0 ORDER BY (rt1.c2 IN ((((rt1.c1, t0.c2, t0.c1))==((vt0.c0, vt0.c0, t0.c0))))));
SELECT COUNT(*) FROM t0, rt1, vt0 WHERE ((rt1.c2 COLLATE RTRIM IN ())) ORDER BY (rt1.c2 IN ((((rt1.c1, t0.c2, t0.c1))==((vt0.c0, vt0.c0, t0.c0)))));
SELECT * FROM t0, rt1 WHERE ((((rt1.c2, rt1.c2, rt1.c2)) NOT BETWEEN (('%.', ((rt1.c1)||(rt1.c0)), NULL COLLATE BINARY)) AND (((rt1.c2 IN ()), ((0.4212184233833859) NOTNULL), (t0.c0 IN (t0.c2)))))) ORDER BY (rt1.c2 IN (rt1.c1, t0.c0)) COLLATE NOCASE DESC  NULLS FIRST, CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2, rt1.c2, rt1.c2)) NOT BETWEEN (('%.', ((rt1.c1)||(rt1.c0)), NULL COLLATE BINARY)) AND (((rt1.c2 IN ()), ((0.4212184233833859) NOTNULL), (t0.c0 IN (t0.c2)))))) IS TRUE)  as count FROM t0, rt1 ORDER BY (rt1.c2 IN (rt1.c1, t0.c0)) COLLATE NOCASE DESC  NULLS FIRST, CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END COLLATE BINARY ASC);
SELECT * FROM t0, rt1 WHERE ((((rt1.c2, rt1.c2, rt1.c2)) NOT BETWEEN (('%.', ((rt1.c1)||(rt1.c0)), NULL COLLATE BINARY)) AND (((rt1.c2 IN ()), ((0.4212184233833859) NOTNULL), (t0.c0 IN (t0.c2)))))) ORDER BY (rt1.c2 IN (rt1.c1, t0.c0)) COLLATE NOCASE DESC  NULLS FIRST, CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2, rt1.c2, rt1.c2)) NOT BETWEEN (('%.', ((rt1.c1)||(rt1.c0)), NULL COLLATE BINARY)) AND (((rt1.c2 IN ()), ((0.4212184233833859) NOTNULL), (t0.c0 IN (t0.c2)))))) IS TRUE)  as count FROM t0, rt1 ORDER BY (rt1.c2 IN (rt1.c1, t0.c0)) COLLATE NOCASE DESC  NULLS FIRST, CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END COLLATE BINARY ASC);
SELECT * FROM t0, rt1 WHERE ((((rt1.c2, rt1.c2, rt1.c2)) NOT BETWEEN (('%.', ((rt1.c1)||(rt1.c0)), NULL COLLATE BINARY)) AND (((rt1.c2 IN ()), ((0.4212184233833859) NOTNULL), (t0.c0 IN (t0.c2)))))) ORDER BY (rt1.c2 IN (rt1.c1, t0.c0)) COLLATE NOCASE DESC  NULLS FIRST, CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END COLLATE BINARY ASC;
SELECT ALL * FROM rt1 WHERE ((((CAST(rt1.c1 AS TEXT)))>((CAST(rt1.c0 AS INTEGER))))) ORDER BY load_extension(NULL COLLATE NOCASE, CAST(rt1.c0 AS BLOB)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt1.c1 AS TEXT)))>((CAST(rt1.c0 AS INTEGER))))) IS TRUE)  as count FROM rt1 ORDER BY load_extension(NULL COLLATE NOCASE, CAST(rt1.c0 AS BLOB)) DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((((CAST(rt1.c1 AS TEXT)))>((CAST(rt1.c0 AS INTEGER))))) ORDER BY load_extension(NULL COLLATE NOCASE, CAST(rt1.c0 AS BLOB)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt1.c1 AS TEXT)))>((CAST(rt1.c0 AS INTEGER))))) IS TRUE)  as count FROM rt1 ORDER BY load_extension(NULL COLLATE NOCASE, CAST(rt1.c0 AS BLOB)) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, 0.6765012166651144)) AND ((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN ((((vt0.c0))!=((vt0.c0)))) AND (((vt0.c0) IS TRUE)))) ORDER BY ((LOWER(vt0.c0)) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, 0.6765012166651144)) AND ((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN ((((vt0.c0))<>((vt0.c0)))) AND (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY ((LOWER(vt0.c0)) NOT NULL) DESC);
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, 0.6765012166651144)) AND ((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN ((((vt0.c0))!=((vt0.c0)))) AND (((vt0.c0) IS TRUE)))) ORDER BY ((LOWER(vt0.c0)) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, 0.6765012166651144)) AND ((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN ((((vt0.c0))<>((vt0.c0)))) AND (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY ((LOWER(vt0.c0)) NOT NULL) DESC);
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, 0.6765012166651144)) AND ((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN ((((vt0.c0))!=((vt0.c0)))) AND (((vt0.c0) IS TRUE)))) ORDER BY ((LOWER(vt0.c0)) NOT NULL) DESC;
SELECT COUNT(*) FROM rt1 WHERE ((((((((((((((rt1.c0 IN ()))OR((~ (rt1.c2)))))AND(rt1.c0)))AND((((rt1.c0))<=(('-564545088'))))))OR((rt1.c1 IN ()))))OR(rt1.c1 COLLATE RTRIM)))AND((~ (rt1.c1))))) ORDER BY x'' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((rt1.c0 IN ()))OR((~ (rt1.c2)))))AND(rt1.c0)))AND((((rt1.c0))<=(('-564545088'))))))OR((rt1.c1 IN ()))))OR(rt1.c1 COLLATE RTRIM)))AND((~ (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY x'' ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((((((((((((((rt1.c0 IN ()))OR((~ (rt1.c2)))))AND(rt1.c0)))AND((((rt1.c0))<=(('-564545088'))))))OR((rt1.c1 IN ()))))OR(rt1.c1 COLLATE RTRIM)))AND((~ (rt1.c1))))) ORDER BY x'' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((rt1.c0 IN ()))OR((~ (rt1.c2)))))AND(rt1.c0)))AND((((rt1.c0))<=(('-564545088'))))))OR((rt1.c1 IN ()))))OR(rt1.c1 COLLATE RTRIM)))AND((~ (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY x'' ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((((((((((((((rt1.c0 IN ()))OR((~ (rt1.c2)))))AND(rt1.c0)))AND((((rt1.c0))<=(('-564545088'))))))OR((rt1.c1 IN ()))))OR(rt1.c1 COLLATE RTRIM)))AND((~ (rt1.c1))))) ORDER BY x'' ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (CAST(rt1.c0 COLLATE NOCASE AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c0 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CAST(rt1.c0 COLLATE NOCASE AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c0 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CAST(rt1.c0 COLLATE NOCASE AS NUMERIC));
SELECT ALL * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'');
SELECT ALL * FROM vt0 WHERE (('-1165856225' IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((('-1165856225' IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (('-1165856225' IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((('-1165856225' IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (('-1165856225' IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT * FROM rt1 WHERE (((UNLIKELY(rt1.c0))+('.\S,Mᬽ䫪')));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(rt1.c0))+('.\S,Mᬽ䫪'))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((UNLIKELY(rt1.c0))+('.\S,Mᬽ䫪')));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(rt1.c0))+('.\S,Mᬽ䫪'))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((UNLIKELY(rt1.c0))+('.\S,Mᬽ䫪')));
SELECT * FROM rt1, t0, vt0 WHERE (((NULL) BETWEEN (rt1.c2) AND ((((t0.c2))==((t0.c1))))));
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN (rt1.c2) AND ((((t0.c2))==((t0.c1)))))) IS TRUE)  as count FROM rt1, t0, vt0);
SELECT * FROM rt1, t0, vt0 WHERE (((NULL) BETWEEN (rt1.c2) AND ((((t0.c2))==((t0.c1))))));
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN (rt1.c2) AND ((((t0.c2))==((t0.c1)))))) IS TRUE)  as count FROM rt1, t0, vt0);
SELECT * FROM rt1, t0, vt0 WHERE (((NULL) BETWEEN (rt1.c2) AND ((((t0.c2))==((t0.c1))))));
SELECT * FROM rt1 WHERE (((CAST(rt1.c1 AS NUMERIC))<<(rt1.c2))) ORDER BY rt1.c0 DESC  NULLS LAST, ((((((rt1.c1)<(rt1.c2)))AND(((rt1.c0)<<(rt1.c0)))))OR((((rt1.c0))>=((rt1.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS NUMERIC))<<(rt1.c2))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c0 DESC  NULLS LAST, ((((((rt1.c1)<(rt1.c2)))AND(((rt1.c0)<<(rt1.c0)))))OR((((rt1.c0))>=((rt1.c2)))))  NULLS LAST);
SELECT * FROM rt1 WHERE (((CAST(rt1.c1 AS NUMERIC))<<(rt1.c2))) ORDER BY rt1.c0 DESC  NULLS LAST, ((((((rt1.c1)<(rt1.c2)))AND(((rt1.c0)<<(rt1.c0)))))OR((((rt1.c0))>=((rt1.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS NUMERIC))<<(rt1.c2))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c0 DESC  NULLS LAST, ((((((rt1.c1)<(rt1.c2)))AND(((rt1.c0)<<(rt1.c0)))))OR((((rt1.c0))>=((rt1.c2)))))  NULLS LAST);
SELECT * FROM rt1 WHERE (((CAST(rt1.c1 AS NUMERIC))<<(rt1.c2))) ORDER BY rt1.c0 DESC  NULLS LAST, ((((((rt1.c1)<(rt1.c2)))AND(((rt1.c0)<<(rt1.c0)))))OR((((rt1.c0))>=((rt1.c2)))))  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (rt1.c2);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN t0 ON ((((t0.c0)-(t0.c1))) IS TRUE) INNER JOIN vt0 ON ((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c2)))OR(0.6265508006607587)))OR(t0.c0)) COLLATE BINARY WHERE (CASE WHEN NULL THEN t0.c0 COLLATE RTRIM END) ORDER BY ((((0.19747030312475433) ISNULL)) NOT BETWEEN (((((rt1.c2)AND(vt0.c0)))AND(vt0.c0))) AND (((t0.c2) NOT BETWEEN (t0.c1) AND (rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN t0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON ((((t0.c0)-(t0.c1))) IS TRUE) INNER JOIN vt0 ON ((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c2)))OR(0.6265508006607587)))OR(t0.c0)) COLLATE BINARY ORDER BY ((((0.19747030312475433) ISNULL)) NOT BETWEEN (((((rt1.c2)AND(vt0.c0)))AND(vt0.c0))) AND (((t0.c2) NOT BETWEEN (t0.c1) AND (rt1.c1))))  NULLS LAST);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN t0 ON ((((t0.c0)-(t0.c1))) IS TRUE) INNER JOIN vt0 ON ((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c2)))OR(0.6265508006607587)))OR(t0.c0)) COLLATE BINARY WHERE (CASE WHEN NULL THEN t0.c0 COLLATE RTRIM END) ORDER BY ((((0.19747030312475433) ISNULL)) NOT BETWEEN (((((rt1.c2)AND(vt0.c0)))AND(vt0.c0))) AND (((t0.c2) NOT BETWEEN (t0.c1) AND (rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN t0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON ((((t0.c0)-(t0.c1))) IS TRUE) INNER JOIN vt0 ON ((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c2)))OR(0.6265508006607587)))OR(t0.c0)) COLLATE BINARY ORDER BY ((((0.19747030312475433) ISNULL)) NOT BETWEEN (((((rt1.c2)AND(vt0.c0)))AND(vt0.c0))) AND (((t0.c2) NOT BETWEEN (t0.c1) AND (rt1.c1))))  NULLS LAST);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN t0 ON ((((t0.c0)-(t0.c1))) IS TRUE) INNER JOIN vt0 ON ((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c2)))OR(0.6265508006607587)))OR(t0.c0)) COLLATE BINARY WHERE (CASE WHEN NULL THEN t0.c0 COLLATE RTRIM END) ORDER BY ((((0.19747030312475433) ISNULL)) NOT BETWEEN (((((rt1.c2)AND(vt0.c0)))AND(vt0.c0))) AND (((t0.c2) NOT BETWEEN (t0.c1) AND (rt1.c1))))  NULLS LAST;
SELECT ALL * FROM rt1, t0, vt0 WHERE (((UPPER(vt0.c0)) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND ((rt1.c0 IN (t0.c2))))) ORDER BY CASE vt0.c0  WHEN vt0.c0 COLLATE NOCASE THEN CAST(rt1.c1 AS INTEGER) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((UPPER(vt0.c0)) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND ((rt1.c0 IN (t0.c2))))) IS TRUE)  as count FROM rt1, t0, vt0 ORDER BY CASE vt0.c0  WHEN vt0.c0 COLLATE NOCASE THEN CAST(rt1.c1 AS INTEGER) END DESC  NULLS LAST);
SELECT ALL * FROM rt1, t0, vt0 WHERE (((UPPER(vt0.c0)) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND ((rt1.c0 IN (t0.c2))))) ORDER BY CASE vt0.c0  WHEN vt0.c0 COLLATE NOCASE THEN CAST(rt1.c1 AS INTEGER) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((UPPER(vt0.c0)) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND ((rt1.c0 IN (t0.c2))))) IS TRUE)  as count FROM rt1, t0, vt0 ORDER BY CASE vt0.c0  WHEN vt0.c0 COLLATE NOCASE THEN CAST(rt1.c1 AS INTEGER) END DESC  NULLS LAST);
SELECT ALL * FROM rt1, t0, vt0 WHERE (((UPPER(vt0.c0)) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND ((rt1.c0 IN (t0.c2))))) ORDER BY CASE vt0.c0  WHEN vt0.c0 COLLATE NOCASE THEN CAST(rt1.c1 AS INTEGER) END DESC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (((1422500410 COLLATE NOCASE)OR((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((1422500410 COLLATE NOCASE)OR((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((1422500410 COLLATE NOCASE)OR((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((1422500410 COLLATE NOCASE)OR((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((1422500410 COLLATE NOCASE)OR((rt1.c2 IN ()))));
SELECT * FROM t0, vt0 WHERE (((t0.c0)&(SQLITE_COMPILEOPTION_USED(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((t0.c0)&(SQLITE_COMPILEOPTION_USED(vt0.c0)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((t0.c0)&(SQLITE_COMPILEOPTION_USED(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((t0.c0)&(SQLITE_COMPILEOPTION_USED(vt0.c0)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((t0.c0)&(SQLITE_COMPILEOPTION_USED(vt0.c0))));
SELECT COUNT(*) FROM rt1, t0 LEFT OUTER JOIN vt0 ON ((((t0.c2) NOT NULL))/(((t0.c0)<(rt1.c1)))) WHERE ((((((t0.c2)&(NULL))))<((((t0.c1) NOTNULL))))) ORDER BY ((DATE(rt1.c0, rt1.c0, t0.c0)) BETWEEN (((rt1.c2)==(vt0.c0))) AND ((((t0.c1)) BETWEEN ((rt1.c0)) AND ((vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2)&(NULL))))<((((t0.c1) NOTNULL))))) IS TRUE)  as count FROM rt1, t0 LEFT OUTER JOIN vt0 ON ((((t0.c2) NOT NULL))/(((t0.c0)<(rt1.c1)))) ORDER BY ((DATE(rt1.c0, rt1.c0, t0.c0)) BETWEEN (((rt1.c2)==(vt0.c0))) AND ((((t0.c1)) BETWEEN ((rt1.c0)) AND ((vt0.c0))))) ASC);
SELECT COUNT(*) FROM rt1, t0 LEFT OUTER JOIN vt0 ON ((((t0.c2) NOT NULL))/(((t0.c0)<(rt1.c1)))) WHERE ((((((t0.c2)&(NULL))))<((((t0.c1) NOTNULL))))) ORDER BY ((DATE(rt1.c0, rt1.c0, t0.c0)) BETWEEN (((rt1.c2)==(vt0.c0))) AND ((((t0.c1)) BETWEEN ((rt1.c0)) AND ((vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2)&(NULL))))<((((t0.c1) NOTNULL))))) IS TRUE)  as count FROM rt1, t0 LEFT OUTER JOIN vt0 ON ((((t0.c2) NOT NULL))/(((t0.c0)<(rt1.c1)))) ORDER BY ((DATE(rt1.c0, rt1.c0, t0.c0)) BETWEEN (((rt1.c2)==(vt0.c0))) AND ((((t0.c1)) BETWEEN ((rt1.c0)) AND ((vt0.c0))))) ASC);
SELECT COUNT(*) FROM rt1, t0 LEFT OUTER JOIN vt0 ON ((((t0.c2) NOT NULL))/(((t0.c0)<(rt1.c1)))) WHERE ((((((t0.c2)&(NULL))))<((((t0.c1) NOTNULL))))) ORDER BY ((DATE(rt1.c0, rt1.c0, t0.c0)) BETWEEN (((rt1.c2)==(vt0.c0))) AND ((((t0.c1)) BETWEEN ((rt1.c0)) AND ((vt0.c0))))) ASC;
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST((t0.c1 IN (t0.c2)) AS INTEGER)) ORDER BY t0.c2 ASC, ((((((((((vt0.c0)OR(t0.c2)))AND(t0.c2)))AND(t0.c2)))OR(t0.c2))) BETWEEN ((((vt0.c0, t0.c1, t0.c1)) BETWEEN ((vt0.c0, t0.c2, vt0.c0)) AND ((t0.c1, t0.c2, '-776699722')))) AND (TRIM(t0.c0, t0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((t0.c1 IN (t0.c2)) AS INTEGER)) IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c2 ASC, ((((((((((vt0.c0)OR(t0.c2)))AND(t0.c2)))AND(t0.c2)))OR(t0.c2))) BETWEEN ((((vt0.c0, t0.c1, t0.c1)) BETWEEN ((vt0.c0, t0.c2, vt0.c0)) AND ((t0.c1, t0.c2, '-776699722')))) AND (TRIM(t0.c0, t0.c2))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST((t0.c1 IN (t0.c2)) AS INTEGER)) ORDER BY t0.c2 ASC, ((((((((((vt0.c0)OR(t0.c2)))AND(t0.c2)))AND(t0.c2)))OR(t0.c2))) BETWEEN ((((vt0.c0, t0.c1, t0.c1)) BETWEEN ((vt0.c0, t0.c2, vt0.c0)) AND ((t0.c1, t0.c2, '-776699722')))) AND (TRIM(t0.c0, t0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((t0.c1 IN (t0.c2)) AS INTEGER)) IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c2 ASC, ((((((((((vt0.c0)OR(t0.c2)))AND(t0.c2)))AND(t0.c2)))OR(t0.c2))) BETWEEN ((((vt0.c0, t0.c1, t0.c1)) BETWEEN ((vt0.c0, t0.c2, vt0.c0)) AND ((t0.c1, t0.c2, '-776699722')))) AND (TRIM(t0.c0, t0.c2))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST((t0.c1 IN (t0.c2)) AS INTEGER)) ORDER BY t0.c2 ASC, ((((((((((vt0.c0)OR(t0.c2)))AND(t0.c2)))AND(t0.c2)))OR(t0.c2))) BETWEEN ((((vt0.c0, t0.c1, t0.c1)) BETWEEN ((vt0.c0, t0.c2, vt0.c0)) AND ((t0.c1, t0.c2, '-776699722')))) AND (TRIM(t0.c0, t0.c2))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt1 ON CASE ((rt1.c0) NOTNULL)  WHEN (t0.c2 IN ()) THEN (((rt1.c2, t0.c2, rt1.c1, t0.c2, rt1.c1))>=((rt1.c2, t0.c1, t0.c1, t0.c1, t0.c2))) END WHERE (CAST(x'' AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS BLOB)) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt1 ON CASE ((rt1.c0) NOTNULL)  WHEN (t0.c2 IN ()) THEN (((rt1.c2, t0.c2, rt1.c1, t0.c2, rt1.c1))>=((rt1.c2, t0.c1, t0.c1, t0.c1, t0.c2))) END);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt1 ON CASE ((rt1.c0) NOTNULL)  WHEN (t0.c2 IN ()) THEN (((rt1.c2, t0.c2, rt1.c1, t0.c2, rt1.c1))>=((rt1.c2, t0.c1, t0.c1, t0.c1, t0.c2))) END WHERE (CAST(x'' AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS BLOB)) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt1 ON CASE ((rt1.c0) NOTNULL)  WHEN (t0.c2 IN ()) THEN (((rt1.c2, t0.c2, rt1.c1, t0.c2, rt1.c1))>=((rt1.c2, t0.c1, t0.c1, t0.c1, t0.c2))) END);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt1 ON CASE ((rt1.c0) NOTNULL)  WHEN (t0.c2 IN ()) THEN (((rt1.c2, t0.c2, rt1.c1, t0.c2, rt1.c1))>=((rt1.c2, t0.c1, t0.c1, t0.c1, t0.c2))) END WHERE (CAST(x'' AS BLOB));
SELECT COUNT(*) FROM vt0 WHERE ((- (((vt0.c0)&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- (((vt0.c0)&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- (((vt0.c0)&(vt0.c0)))));
SELECT COUNT(*) FROM rt1 WHERE ((((((((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)))OR(rt1.c2)))AND(rt1.c1)))AND(rt1.c2)))AND(rt1.c2)) IN ())) ORDER BY ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 END)<>(CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT (((((((((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)))OR(rt1.c2)))AND(rt1.c1)))AND(rt1.c2)))AND(rt1.c2)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 END)!=(CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END)) DESC);
SELECT COUNT(*) FROM rt1 WHERE ((((((((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)))OR(rt1.c2)))AND(rt1.c1)))AND(rt1.c2)))AND(rt1.c2)) IN ())) ORDER BY ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 END)<>(CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT (((((((((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)))OR(rt1.c2)))AND(rt1.c1)))AND(rt1.c2)))AND(rt1.c2)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 END)!=(CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END)) DESC);
SELECT COUNT(*) FROM rt1 WHERE ((((((((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)))OR(rt1.c2)))AND(rt1.c1)))AND(rt1.c2)))AND(rt1.c2)) IN ())) ORDER BY ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 END)<>(CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END)) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE 1538386615  WHEN (- (t0.c2)) THEN (- (t0.c1)) WHEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) THEN ((t0.c0) IS FALSE) WHEN ((((((((t0.c0)OR(t0.c0)))OR(t0.c1)))AND(t0.c0)))OR(t0.c0)) THEN json_array_length(t0.c2, t0.c2) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 1538386615  WHEN (- (t0.c2)) THEN (- (t0.c1)) WHEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) THEN ((t0.c0) IS FALSE) WHEN ((((((((t0.c0)OR(t0.c0)))OR(t0.c1)))AND(t0.c0)))OR(t0.c0)) THEN json_array_length(t0.c2, t0.c2) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE 1538386615  WHEN (- (t0.c2)) THEN (- (t0.c1)) WHEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) THEN ((t0.c0) IS FALSE) WHEN ((((((((t0.c0)OR(t0.c0)))OR(t0.c1)))AND(t0.c0)))OR(t0.c0)) THEN json_array_length(t0.c2, t0.c2) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 1538386615  WHEN (- (t0.c2)) THEN (- (t0.c1)) WHEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) THEN ((t0.c0) IS FALSE) WHEN ((((((((t0.c0)OR(t0.c0)))OR(t0.c1)))AND(t0.c0)))OR(t0.c0)) THEN json_array_length(t0.c2, t0.c2) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE 1538386615  WHEN (- (t0.c2)) THEN (- (t0.c1)) WHEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) THEN ((t0.c0) IS FALSE) WHEN ((((((((t0.c0)OR(t0.c0)))OR(t0.c1)))AND(t0.c0)))OR(t0.c0)) THEN json_array_length(t0.c2, t0.c2) END);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON ABS(DISTINCT (((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1)))) WHERE (UPPER((((rt1.c2))<>((rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((UPPER((((rt1.c2))<>((rt1.c2))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON ABS(DISTINCT (((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1)))));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON ABS(DISTINCT (((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1)))) WHERE (UPPER((((rt1.c2))<>((rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((UPPER((((rt1.c2))<>((rt1.c2))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON ABS(DISTINCT (((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1)))));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON ABS(DISTINCT (((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1)))) WHERE (UPPER((((rt1.c2))<>((rt1.c2)))));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((t0.c2 COLLATE BINARY) NOT BETWEEN (((((t0.c1)AND(t0.c0)))AND(rt1.c2))) AND (CAST(t0.c1 AS INTEGER)))) ORDER BY '-1386372490'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c2 COLLATE BINARY) NOT BETWEEN (((((t0.c1)AND(t0.c0)))AND(rt1.c2))) AND (CAST(t0.c1 AS INTEGER)))) IS TRUE)  as count FROM t0, rt1 ORDER BY '-1386372490'  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((t0.c2 COLLATE BINARY) NOT BETWEEN (((((t0.c1)AND(t0.c0)))AND(rt1.c2))) AND (CAST(t0.c1 AS INTEGER)))) ORDER BY '-1386372490'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c2 COLLATE BINARY) NOT BETWEEN (((((t0.c1)AND(t0.c0)))AND(rt1.c2))) AND (CAST(t0.c1 AS INTEGER)))) IS TRUE)  as count FROM t0, rt1 ORDER BY '-1386372490'  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((t0.c2 COLLATE BINARY) NOT BETWEEN (((((t0.c1)AND(t0.c0)))AND(rt1.c2))) AND (CAST(t0.c1 AS INTEGER)))) ORDER BY '-1386372490'  NULLS LAST;
SELECT * FROM t0, vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ('');
SELECT ALL COUNT(*) FROM vt0, t0, rt1 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM vt0, t0, rt1);
SELECT ALL COUNT(*) FROM vt0, t0, rt1 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM vt0, t0, rt1);
SELECT ALL COUNT(*) FROM vt0, t0, rt1 WHERE (t0.c2);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((- (CASE WHEN vt0.c0 THEN t0.c1 ELSE t0.c0 END))) ORDER BY (((~ (vt0.c0)))!=((('0.40290395603237916')==(t0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN vt0.c0 THEN t0.c1 ELSE t0.c0 END))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((~ (vt0.c0)))<>((('0.40290395603237916')=(t0.c1)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((- (CASE WHEN vt0.c0 THEN t0.c1 ELSE t0.c0 END))) ORDER BY (((~ (vt0.c0)))!=((('0.40290395603237916')==(t0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN vt0.c0 THEN t0.c1 ELSE t0.c0 END))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((~ (vt0.c0)))<>((('0.40290395603237916')=(t0.c1)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((- (CASE WHEN vt0.c0 THEN t0.c1 ELSE t0.c0 END))) ORDER BY (((~ (vt0.c0)))!=((('0.40290395603237916')==(t0.c1)))) ASC  NULLS FIRST;
SELECT * FROM vt0, t0, rt1 WHERE (CAST(((t0.c1)OR(t0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c1)OR(t0.c1)) AS REAL)) IS TRUE)  as count FROM vt0, t0, rt1 NOT INDEXED);
SELECT * FROM vt0, t0, rt1 WHERE (CAST(((t0.c1)OR(t0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c1)OR(t0.c1)) AS REAL)) IS TRUE)  as count FROM vt0, t0, rt1 NOT INDEXED);
SELECT * FROM vt0, t0, rt1 WHERE (CAST(((t0.c1)OR(t0.c1)) AS REAL));
SELECT ALL COUNT(*) FROM rt1, vt0, t0 WHERE ((- (((((((((t0.c0)AND(rt1.c0)))AND(x'')))OR(rt1.c2)))OR(t0.c0))))) ORDER BY CASE ((rt1.c2) IS FALSE)  WHEN (rt1.c0 IN (t0.c0)) THEN rt1.c0 ELSE CAST(0.9475639031712454 AS REAL) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((((((((t0.c0)AND(rt1.c0)))AND(x'')))OR(rt1.c2)))OR(t0.c0))))) IS TRUE)  as count FROM rt1, vt0, t0 ORDER BY CASE ((rt1.c2) IS FALSE)  WHEN (rt1.c0 IN (t0.c0)) THEN rt1.c0 ELSE CAST(0.9475639031712454 AS REAL) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0, t0 WHERE ((- (((((((((t0.c0)AND(rt1.c0)))AND(x'')))OR(rt1.c2)))OR(t0.c0))))) ORDER BY CASE ((rt1.c2) IS FALSE)  WHEN (rt1.c0 IN (t0.c0)) THEN rt1.c0 ELSE CAST(0.9475639031712454 AS REAL) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((((((((t0.c0)AND(rt1.c0)))AND(x'')))OR(rt1.c2)))OR(t0.c0))))) IS TRUE)  as count FROM rt1, vt0, t0 ORDER BY CASE ((rt1.c2) IS FALSE)  WHEN (rt1.c0 IN (t0.c0)) THEN rt1.c0 ELSE CAST(0.9475639031712454 AS REAL) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0, t0 WHERE ((- (((((((((t0.c0)AND(rt1.c0)))AND(x'')))OR(rt1.c2)))OR(t0.c0))))) ORDER BY CASE ((rt1.c2) IS FALSE)  WHEN (rt1.c0 IN (t0.c0)) THEN rt1.c0 ELSE CAST(0.9475639031712454 AS REAL) END ASC  NULLS FIRST;
SELECT * FROM rt1, vt0 INNER JOIN t0 ON '-1038207312' WHERE (((((vt0.c0)LIKE(NULL)))-(((rt1.c0)%(0X502b804b))))) ORDER BY CASE WHEN (~ (vt0.c0)) THEN rt1.c1 WHEN ((x'9efd') NOT BETWEEN (vt0.c0) AND (t0.c0)) THEN CAST(rt1.c1 AS BLOB) WHEN (((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c0))) THEN CASE WHEN t0.c1 THEN t0.c2 END ELSE ((((((((t0.c1)AND(rt1.c2)))AND(rt1.c2)))OR('771175854')))AND(t0.c1)) END  NULLS LAST, (t0.c1 IN (rt1.c0)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)LIKE(NULL)))-(((rt1.c0)%(0x502b804b))))) IS TRUE)  as count FROM rt1, vt0 INNER JOIN t0 ON '-1038207312' ORDER BY CASE WHEN (~ (vt0.c0)) THEN rt1.c1 WHEN ((x'9efd') NOT BETWEEN (vt0.c0) AND (t0.c0)) THEN CAST(rt1.c1 AS BLOB) WHEN (((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c0))) THEN CASE WHEN t0.c1 THEN t0.c2 END ELSE ((((((((t0.c1)AND(rt1.c2)))AND(rt1.c2)))OR('771175854')))AND(t0.c1)) END  NULLS LAST, (t0.c1 IN (rt1.c0)) COLLATE BINARY ASC  NULLS LAST);
SELECT * FROM rt1, vt0 INNER JOIN t0 ON '-1038207312' WHERE (((((vt0.c0)LIKE(NULL)))-(((rt1.c0)%(0X502b804b))))) ORDER BY CASE WHEN (~ (vt0.c0)) THEN rt1.c1 WHEN ((x'9efd') NOT BETWEEN (vt0.c0) AND (t0.c0)) THEN CAST(rt1.c1 AS BLOB) WHEN (((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c0))) THEN CASE WHEN t0.c1 THEN t0.c2 END ELSE ((((((((t0.c1)AND(rt1.c2)))AND(rt1.c2)))OR('771175854')))AND(t0.c1)) END  NULLS LAST, (t0.c1 IN (rt1.c0)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)LIKE(NULL)))-(((rt1.c0)%(0x502b804b))))) IS TRUE)  as count FROM rt1, vt0 INNER JOIN t0 ON '-1038207312' ORDER BY CASE WHEN (~ (vt0.c0)) THEN rt1.c1 WHEN ((x'9efd') NOT BETWEEN (vt0.c0) AND (t0.c0)) THEN CAST(rt1.c1 AS BLOB) WHEN (((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c0))) THEN CASE WHEN t0.c1 THEN t0.c2 END ELSE ((((((((t0.c1)AND(rt1.c2)))AND(rt1.c2)))OR('771175854')))AND(t0.c1)) END  NULLS LAST, (t0.c1 IN (rt1.c0)) COLLATE BINARY ASC  NULLS LAST);
SELECT * FROM rt1, vt0 INNER JOIN t0 ON '-1038207312' WHERE (((((vt0.c0)LIKE(NULL)))-(((rt1.c0)%(0X502b804b))))) ORDER BY CASE WHEN (~ (vt0.c0)) THEN rt1.c1 WHEN ((x'9efd') NOT BETWEEN (vt0.c0) AND (t0.c0)) THEN CAST(rt1.c1 AS BLOB) WHEN (((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c0))) THEN CASE WHEN t0.c1 THEN t0.c2 END ELSE ((((((((t0.c1)AND(rt1.c2)))AND(rt1.c2)))OR('771175854')))AND(t0.c1)) END  NULLS LAST, (t0.c1 IN (rt1.c0)) COLLATE BINARY ASC  NULLS LAST;
SELECT * FROM rt1 NOT INDEXED WHERE (((((rt1.c2))>((rt1.c0))) IN ())) ORDER BY CASE ((rt1.c2) BETWEEN (rt1.c2) AND (0x1064114))  WHEN json_valid(rt1.c2) THEN MAX(0xfffffffff066a6d7, rt1.c1) WHEN CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 END THEN (- (rt1.c2)) WHEN CAST(rt1.c0 AS NUMERIC) THEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (-305151047)) END ASC, ((NULL)>(CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN x'' END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2))>((rt1.c0))) IN ())) IS TRUE)  as count FROM rt1 ORDER BY CASE ((rt1.c2) BETWEEN (rt1.c2) AND (0X1064114))  WHEN json_valid(rt1.c2) THEN MAX(0xfffffffff066a6d7, rt1.c1) WHEN CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 END THEN (- (rt1.c2)) WHEN CAST(rt1.c0 AS NUMERIC) THEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (-305151047)) END ASC, ((NULL)>(CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN x'' END)) ASC  NULLS LAST);
SELECT * FROM rt1 NOT INDEXED WHERE (((((rt1.c2))>((rt1.c0))) IN ())) ORDER BY CASE ((rt1.c2) BETWEEN (rt1.c2) AND (0x1064114))  WHEN json_valid(rt1.c2) THEN MAX(0xfffffffff066a6d7, rt1.c1) WHEN CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 END THEN (- (rt1.c2)) WHEN CAST(rt1.c0 AS NUMERIC) THEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (-305151047)) END ASC, ((NULL)>(CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN x'' END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2))>((rt1.c0))) IN ())) IS TRUE)  as count FROM rt1 ORDER BY CASE ((rt1.c2) BETWEEN (rt1.c2) AND (0X1064114))  WHEN json_valid(rt1.c2) THEN MAX(0xfffffffff066a6d7, rt1.c1) WHEN CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 END THEN (- (rt1.c2)) WHEN CAST(rt1.c0 AS NUMERIC) THEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (-305151047)) END ASC, ((NULL)>(CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN x'' END)) ASC  NULLS LAST);
SELECT * FROM rt1 NOT INDEXED WHERE (((((rt1.c2))>((rt1.c0))) IN ())) ORDER BY CASE ((rt1.c2) BETWEEN (rt1.c2) AND (0x1064114))  WHEN json_valid(rt1.c2) THEN MAX(0xfffffffff066a6d7, rt1.c1) WHEN CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 END THEN (- (rt1.c2)) WHEN CAST(rt1.c0 AS NUMERIC) THEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (-305151047)) END ASC, ((NULL)>(CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN x'' END)) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 NOT INDEXED, vt0, rt1 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT COUNT(*) FROM t0 NOT INDEXED, vt0, rt1 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT COUNT(*) FROM t0 NOT INDEXED, vt0, rt1 WHERE (t0.c1);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt1 ON ((rt1.c1)/(((t0.c2)OR(rt1.c0)))) CROSS JOIN vt0 ON ((-646980984) BETWEEN ((t0.c1 IN ())) AND ((rt1.c1 IN ()))) WHERE (((((0xffffffffe92eb4dd)>>(t0.c0))) NOT BETWEEN (t0.c2) AND (CASE WHEN vt0.c0 THEN t0.c1 ELSE vt0.c0 END))) ORDER BY x'b1b7' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((0xffffffffe92eb4dd)>>(t0.c0))) NOT BETWEEN (t0.c2) AND (CASE WHEN vt0.c0 THEN t0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt1 ON ((rt1.c1)/(((t0.c2)OR(rt1.c0)))) CROSS JOIN vt0 ON ((-646980984) BETWEEN ((t0.c1 IN ())) AND ((rt1.c1 IN ()))) ORDER BY x'b1b7' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt1 ON ((rt1.c1)/(((t0.c2)OR(rt1.c0)))) CROSS JOIN vt0 ON ((-646980984) BETWEEN ((t0.c1 IN ())) AND ((rt1.c1 IN ()))) WHERE (((((0xffffffffe92eb4dd)>>(t0.c0))) NOT BETWEEN (t0.c2) AND (CASE WHEN vt0.c0 THEN t0.c1 ELSE vt0.c0 END))) ORDER BY x'b1b7' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((0xffffffffe92eb4dd)>>(t0.c0))) NOT BETWEEN (t0.c2) AND (CASE WHEN vt0.c0 THEN t0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt1 ON ((rt1.c1)/(((t0.c2)OR(rt1.c0)))) CROSS JOIN vt0 ON ((-646980984) BETWEEN ((t0.c1 IN ())) AND ((rt1.c1 IN ()))) ORDER BY x'b1b7' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt1 ON ((rt1.c1)/(((t0.c2)OR(rt1.c0)))) CROSS JOIN vt0 ON ((-646980984) BETWEEN ((t0.c1 IN ())) AND ((rt1.c1 IN ()))) WHERE (((((0xffffffffe92eb4dd)>>(t0.c0))) NOT BETWEEN (t0.c2) AND (CASE WHEN vt0.c0 THEN t0.c1 ELSE vt0.c0 END))) ORDER BY x'b1b7' DESC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (CAST(x'' AS BLOB) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(x'' AS BLOB) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(x'' AS BLOB) COLLATE RTRIM);
SELECT * FROM rt1, vt0 NATURAL JOIN t0 WHERE (((((t0.c0))<((x'3dea'))) IN (CAST(rt1.c2 AS NUMERIC)))) ORDER BY rt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0))<((x'3dea'))) IN (CAST(rt1.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt1, vt0 NATURAL JOIN t0 ORDER BY rt1.c1 ASC);
SELECT * FROM rt1, vt0 NATURAL JOIN t0 WHERE (((((t0.c0))<((x'3dea'))) IN (CAST(rt1.c2 AS NUMERIC)))) ORDER BY rt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0))<((x'3dea'))) IN (CAST(rt1.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt1, vt0 NATURAL JOIN t0 ORDER BY rt1.c1 ASC);
SELECT * FROM rt1, vt0 NATURAL JOIN t0 WHERE (((((t0.c0))<((x'3dea'))) IN (CAST(rt1.c2 AS NUMERIC)))) ORDER BY rt1.c1 ASC;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON '-1944340998' RIGHT OUTER JOIN rt1 ON (((rt1.c1)) NOT BETWEEN ((CASE WHEN t0.c1 THEN t0.c1 END)) AND ((t0.c0 COLLATE NOCASE))) WHERE (((((((((-1167742356)OR(vt0.c0)))AND(x'629921df')))AND(rt1.c2)))AND((0xba38c88 IN (2.021858109E9, '-1085112401'))))) ORDER BY ((NULL) BETWEEN (((vt0.c0) BETWEEN (t0.c0) AND ('-2102709488'))) AND ((((0.50834000346298)) BETWEEN ((vt0.c0)) AND ((rt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((-1167742356)OR(vt0.c0)))AND(x'629921df')))AND(rt1.c2)))AND((0xba38c88 IN (2.021858109E9, '-1085112401'))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON '-1944340998' RIGHT OUTER JOIN rt1 ON (((rt1.c1)) NOT BETWEEN ((CASE WHEN t0.c1 THEN t0.c1 END)) AND ((t0.c0 COLLATE NOCASE))) ORDER BY ((NULL) BETWEEN (((vt0.c0) BETWEEN (t0.c0) AND ('-2102709488'))) AND ((((0.50834000346298)) BETWEEN ((vt0.c0)) AND ((rt1.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON '-1944340998' RIGHT OUTER JOIN rt1 ON (((rt1.c1)) NOT BETWEEN ((CASE WHEN t0.c1 THEN t0.c1 END)) AND ((t0.c0 COLLATE NOCASE))) WHERE (((((((((-1167742356)OR(vt0.c0)))AND(x'629921df')))AND(rt1.c2)))AND((0xba38c88 IN (2.021858109E9, '-1085112401'))))) ORDER BY ((NULL) BETWEEN (((vt0.c0) BETWEEN (t0.c0) AND ('-2102709488'))) AND ((((0.50834000346298)) BETWEEN ((vt0.c0)) AND ((rt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((-1167742356)OR(vt0.c0)))AND(x'629921df')))AND(rt1.c2)))AND((0xba38c88 IN (2.021858109E9, '-1085112401'))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON '-1944340998' RIGHT OUTER JOIN rt1 ON (((rt1.c1)) NOT BETWEEN ((CASE WHEN t0.c1 THEN t0.c1 END)) AND ((t0.c0 COLLATE NOCASE))) ORDER BY ((NULL) BETWEEN (((vt0.c0) BETWEEN (t0.c0) AND ('-2102709488'))) AND ((((0.50834000346298)) BETWEEN ((vt0.c0)) AND ((rt1.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON '-1944340998' RIGHT OUTER JOIN rt1 ON (((rt1.c1)) NOT BETWEEN ((CASE WHEN t0.c1 THEN t0.c1 END)) AND ((t0.c0 COLLATE NOCASE))) WHERE (((((((((-1167742356)OR(vt0.c0)))AND(x'629921df')))AND(rt1.c2)))AND((0xba38c88 IN (2.021858109E9, '-1085112401'))))) ORDER BY ((NULL) BETWEEN (((vt0.c0) BETWEEN (t0.c0) AND ('-2102709488'))) AND ((((0.50834000346298)) BETWEEN ((vt0.c0)) AND ((rt1.c0))))) ASC;
SELECT * FROM vt0, t0 WHERE (((((CASE WHEN t0.c2 THEN t0.c2 ELSE vt0.c0 END)OR((((t0.c1)) NOT BETWEEN ((x'd22a')) AND ((vt0.c0))))))AND(((t0.c2) ISNULL)))) ORDER BY 0.6765012166651144  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN t0.c2 THEN t0.c2 ELSE vt0.c0 END)OR((((t0.c1)) NOT BETWEEN ((x'd22a')) AND ((vt0.c0))))))AND(((t0.c2) ISNULL)))) IS TRUE)  as count FROM vt0, t0 ORDER BY 0.6765012166651144  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (((((CASE WHEN t0.c2 THEN t0.c2 ELSE vt0.c0 END)OR((((t0.c1)) NOT BETWEEN ((x'd22a')) AND ((vt0.c0))))))AND(((t0.c2) ISNULL)))) ORDER BY 0.6765012166651144  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN t0.c2 THEN t0.c2 ELSE vt0.c0 END)OR((((t0.c1)) NOT BETWEEN ((x'd22a')) AND ((vt0.c0))))))AND(((t0.c2) ISNULL)))) IS TRUE)  as count FROM vt0, t0 ORDER BY 0.6765012166651144  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (((((CASE WHEN t0.c2 THEN t0.c2 ELSE vt0.c0 END)OR((((t0.c1)) NOT BETWEEN ((x'd22a')) AND ((vt0.c0))))))AND(((t0.c2) ISNULL)))) ORDER BY 0.6765012166651144  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 WHERE ((('0.19747030312475433')>=(MAX(vt0.c0, vt0.c0)))) ORDER BY ((CASE 757554147  WHEN t0.c1 THEN vt0.c0 ELSE t0.c0 END)<=(((((t0.c1)OR(t0.c2)))OR(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('0.19747030312475433')>=(MAX(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CASE 757554147  WHEN t0.c1 THEN vt0.c0 ELSE t0.c0 END)<=(((((t0.c1)OR(t0.c2)))OR(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((('0.19747030312475433')>=(MAX(vt0.c0, vt0.c0)))) ORDER BY ((CASE 757554147  WHEN t0.c1 THEN vt0.c0 ELSE t0.c0 END)<=(((((t0.c1)OR(t0.c2)))OR(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('0.19747030312475433')>=(MAX(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CASE 757554147  WHEN t0.c1 THEN vt0.c0 ELSE t0.c0 END)<=(((((t0.c1)OR(t0.c2)))OR(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((('0.19747030312475433')>=(MAX(vt0.c0, vt0.c0)))) ORDER BY ((CASE 757554147  WHEN t0.c1 THEN vt0.c0 ELSE t0.c0 END)<=(((((t0.c1)OR(t0.c2)))OR(vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE) ORDER BY ((((json_extract(vt0.c0, vt0.c0))AND(COALESCE(vt0.c0, NULL, vt0.c0, vt0.c0))))OR((('-419113679')&(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((json_extract(vt0.c0, vt0.c0))AND(COALESCE(vt0.c0, NULL, vt0.c0, vt0.c0))))OR((('-419113679')&(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE) ORDER BY ((((json_extract(vt0.c0, vt0.c0))AND(COALESCE(vt0.c0, NULL, vt0.c0, vt0.c0))))OR((('-419113679')&(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((json_extract(vt0.c0, vt0.c0))AND(COALESCE(vt0.c0, NULL, vt0.c0, vt0.c0))))OR((('-419113679')&(vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (((((t0.c2)>(t0.c0)))|(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0))))) ORDER BY ((t0.c2)!=(vt0.c0)) COLLATE BINARY COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((t0.c2)>(t0.c0)))|(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c2)!=(vt0.c0)) COLLATE BINARY COLLATE RTRIM);
SELECT * FROM vt0, t0 WHERE (((((t0.c2)>(t0.c0)))|(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0))))) ORDER BY ((t0.c2)!=(vt0.c0)) COLLATE BINARY COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((t0.c2)>(t0.c0)))|(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c2)!=(vt0.c0)) COLLATE BINARY COLLATE RTRIM);
SELECT * FROM vt0, t0 WHERE (((((t0.c2)>(t0.c0)))|(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0))))) ORDER BY ((t0.c2)!=(vt0.c0)) COLLATE BINARY COLLATE RTRIM;
SELECT ALL * FROM rt1 WHERE (TYPEOF(DISTINCT CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END)) ORDER BY CASE (rt1.c0 IN ())  WHEN TRIM(rt1.c0) THEN ((((((((rt1.c0)OR(rt1.c0)))OR(rt1.c1)))OR(rt1.c1)))OR(-2113642863)) WHEN ((((rt1.c1)OR(rt1.c0)))OR(rt1.c1)) THEN LTRIM(rt1.c2, rt1.c1) WHEN ((rt1.c2) NOTNULL) THEN rt1.c1 COLLATE RTRIM END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END)) IS TRUE)  as count FROM rt1 ORDER BY CASE (rt1.c0 IN ())  WHEN TRIM(rt1.c0) THEN ((((((((rt1.c0)OR(rt1.c0)))OR(rt1.c1)))OR(rt1.c1)))OR(-2113642863)) WHEN ((((rt1.c1)OR(rt1.c0)))OR(rt1.c1)) THEN LTRIM(rt1.c2, rt1.c1) WHEN ((rt1.c2) NOTNULL) THEN rt1.c1 COLLATE RTRIM END DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (TYPEOF(DISTINCT CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END)) ORDER BY CASE (rt1.c0 IN ())  WHEN TRIM(rt1.c0) THEN ((((((((rt1.c0)OR(rt1.c0)))OR(rt1.c1)))OR(rt1.c1)))OR(-2113642863)) WHEN ((((rt1.c1)OR(rt1.c0)))OR(rt1.c1)) THEN LTRIM(rt1.c2, rt1.c1) WHEN ((rt1.c2) NOTNULL) THEN rt1.c1 COLLATE RTRIM END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END)) IS TRUE)  as count FROM rt1 ORDER BY CASE (rt1.c0 IN ())  WHEN TRIM(rt1.c0) THEN ((((((((rt1.c0)OR(rt1.c0)))OR(rt1.c1)))OR(rt1.c1)))OR(-2113642863)) WHEN ((((rt1.c1)OR(rt1.c0)))OR(rt1.c1)) THEN LTRIM(rt1.c2, rt1.c1) WHEN ((rt1.c2) NOTNULL) THEN rt1.c1 COLLATE RTRIM END DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (TYPEOF(DISTINCT CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END)) ORDER BY CASE (rt1.c0 IN ())  WHEN TRIM(rt1.c0) THEN ((((((((rt1.c0)OR(rt1.c0)))OR(rt1.c1)))OR(rt1.c1)))OR(-2113642863)) WHEN ((((rt1.c1)OR(rt1.c0)))OR(rt1.c1)) THEN LTRIM(rt1.c2, rt1.c1) WHEN ((rt1.c2) NOTNULL) THEN rt1.c1 COLLATE RTRIM END DESC  NULLS LAST;
SELECT * FROM rt1 WHERE ('') ORDER BY ((((rt1.c1) ISNULL))<('D/%%J7WY)'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1) ISNULL))<('D/%%J7WY)'))  NULLS LAST);
SELECT * FROM rt1 WHERE ('') ORDER BY ((((rt1.c1) ISNULL))<('D/%%J7WY)'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1) ISNULL))<('D/%%J7WY)'))  NULLS LAST);
SELECT * FROM rt1 WHERE ('') ORDER BY ((((rt1.c1) ISNULL))<('D/%%J7WY)'))  NULLS LAST;
SELECT * FROM t0, vt0, rt1 WHERE ((((t0.c2)) BETWEEN ((CAST(rt1.c2 AS INTEGER))) AND ((ABS(DISTINCT rt1.c0))))) ORDER BY ((0x5a36c02d) BETWEEN (PRINTF(t0.c2)) AND (((-73023841) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)) BETWEEN ((CAST(rt1.c2 AS INTEGER))) AND ((ABS(DISTINCT rt1.c0))))) IS TRUE)  as count FROM t0, vt0, rt1 ORDER BY ((0x5a36c02d) BETWEEN (PRINTF(t0.c2)) AND (((-73023841) NOT NULL))));
SELECT * FROM t0, vt0, rt1 WHERE ((((t0.c2)) BETWEEN ((CAST(rt1.c2 AS INTEGER))) AND ((ABS(DISTINCT rt1.c0))))) ORDER BY ((0x5a36c02d) BETWEEN (PRINTF(t0.c2)) AND (((-73023841) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)) BETWEEN ((CAST(rt1.c2 AS INTEGER))) AND ((ABS(DISTINCT rt1.c0))))) IS TRUE)  as count FROM t0, vt0, rt1 ORDER BY ((0x5a36c02d) BETWEEN (PRINTF(t0.c2)) AND (((-73023841) NOT NULL))));
SELECT * FROM t0, vt0, rt1 WHERE ((((t0.c2)) BETWEEN ((CAST(rt1.c2 AS INTEGER))) AND ((ABS(DISTINCT rt1.c0))))) ORDER BY ((0x5a36c02d) BETWEEN (PRINTF(t0.c2)) AND (((-73023841) NOT NULL)));
SELECT ALL * FROM t0, rt1 FULL OUTER JOIN vt0 ON (NOT (CAST(t0.c2 AS NUMERIC))) WHERE (CAST(CAST(t0.c2 AS INTEGER) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c2 AS INTEGER) AS NUMERIC)) IS TRUE)  as count FROM t0, rt1 FULL OUTER JOIN vt0 ON (NOT (CAST(t0.c2 AS NUMERIC))));
SELECT ALL * FROM t0, rt1 FULL OUTER JOIN vt0 ON (NOT (CAST(t0.c2 AS NUMERIC))) WHERE (CAST(CAST(t0.c2 AS INTEGER) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c2 AS INTEGER) AS NUMERIC)) IS TRUE)  as count FROM t0, rt1 FULL OUTER JOIN vt0 ON (NOT (CAST(t0.c2 AS NUMERIC))));
SELECT ALL * FROM t0, rt1 FULL OUTER JOIN vt0 ON (NOT (CAST(t0.c2 AS NUMERIC))) WHERE (CAST(CAST(t0.c2 AS INTEGER) AS NUMERIC));
SELECT ALL * FROM rt1 NOT INDEXED RIGHT OUTER JOIN t0 ON ((((((rt1.c0)<=(t0.c0)))AND(((t0.c0)==(rt1.c1)))))OR(rt1.c0)) WHERE (highlight((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((rt1.c1))), CAST(t0.c2 AS BLOB), '-1070466257', (~ (t0.c0)))) ORDER BY CASE CAST(rt1.c1 AS TEXT)  WHEN (rt1.c0 IN (t0.c2)) THEN t0.c0 COLLATE NOCASE ELSE ((((t0.c0)OR(t0.c1)))OR(t0.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((highlight((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((rt1.c1))), CAST(t0.c2 AS BLOB), '-1070466257', (~ (t0.c0)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN t0 ON ((((((rt1.c0)<=(t0.c0)))AND(((t0.c0)==(rt1.c1)))))OR(rt1.c0)) ORDER BY CASE CAST(rt1.c1 AS TEXT)  WHEN (rt1.c0 IN (t0.c2)) THEN t0.c0 COLLATE NOCASE ELSE ((((t0.c0)OR(t0.c1)))OR(t0.c1)) END DESC  NULLS LAST);
SELECT ALL * FROM rt1 NOT INDEXED RIGHT OUTER JOIN t0 ON ((((((rt1.c0)<=(t0.c0)))AND(((t0.c0)==(rt1.c1)))))OR(rt1.c0)) WHERE (highlight((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((rt1.c1))), CAST(t0.c2 AS BLOB), '-1070466257', (~ (t0.c0)))) ORDER BY CASE CAST(rt1.c1 AS TEXT)  WHEN (rt1.c0 IN (t0.c2)) THEN t0.c0 COLLATE NOCASE ELSE ((((t0.c0)OR(t0.c1)))OR(t0.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((highlight((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((rt1.c1))), CAST(t0.c2 AS BLOB), '-1070466257', (~ (t0.c0)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN t0 ON ((((((rt1.c0)<=(t0.c0)))AND(((t0.c0)==(rt1.c1)))))OR(rt1.c0)) ORDER BY CASE CAST(rt1.c1 AS TEXT)  WHEN (rt1.c0 IN (t0.c2)) THEN t0.c0 COLLATE NOCASE ELSE ((((t0.c0)OR(t0.c1)))OR(t0.c1)) END DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS NUMERIC));
SELECT ALL * FROM rt1, t0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))&(((((t0.c0)OR(t0.c0)))OR(vt0.c0))))) ORDER BY (((vt0.c0 IN (rt1.c1, t0.c2)))<>(CAST(rt1.c1 AS TEXT)))  NULLS LAST, ((((rt1.c1)OR(('NB)DP' IN ()))))OR('ꛗy'))  NULLS FIRST, ((LIKELIHOOD(rt1.c2, 0.6054470668036347)) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))&(((((t0.c0)OR(t0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM rt1, t0, vt0 ORDER BY (((vt0.c0 IN (rt1.c1, t0.c2)))!=(CAST(rt1.c1 AS TEXT)))  NULLS LAST, ((((rt1.c1)OR(('NB)DP' IN ()))))OR('ꛗy'))  NULLS FIRST, ((LIKELIHOOD(rt1.c2, 0.6054470668036347)) IS FALSE));
SELECT ALL * FROM rt1, t0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))&(((((t0.c0)OR(t0.c0)))OR(vt0.c0))))) ORDER BY (((vt0.c0 IN (rt1.c1, t0.c2)))<>(CAST(rt1.c1 AS TEXT)))  NULLS LAST, ((((rt1.c1)OR(('NB)DP' IN ()))))OR('ꛗy'))  NULLS FIRST, ((LIKELIHOOD(rt1.c2, 0.6054470668036347)) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))&(((((t0.c0)OR(t0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM rt1, t0, vt0 ORDER BY (((vt0.c0 IN (rt1.c1, t0.c2)))!=(CAST(rt1.c1 AS TEXT)))  NULLS LAST, ((((rt1.c1)OR(('NB)DP' IN ()))))OR('ꛗy'))  NULLS FIRST, ((LIKELIHOOD(rt1.c2, 0.6054470668036347)) IS FALSE));
SELECT ALL * FROM rt1, t0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))&(((((t0.c0)OR(t0.c0)))OR(vt0.c0))))) ORDER BY (((vt0.c0 IN (rt1.c1, t0.c2)))<>(CAST(rt1.c1 AS TEXT)))  NULLS LAST, ((((rt1.c1)OR(('NB)DP' IN ()))))OR('ꛗy'))  NULLS FIRST, ((LIKELIHOOD(rt1.c2, 0.6054470668036347)) IS FALSE);
SELECT ALL COUNT(*) FROM rt1, t0, vt0 WHERE (CAST(rt1.c2 AS NUMERIC)) ORDER BY ((0.03530220092750813) ISNULL);
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c2 AS NUMERIC)) IS TRUE)  as count FROM rt1, t0, vt0 ORDER BY ((0.03530220092750813) ISNULL));
SELECT ALL COUNT(*) FROM rt1, t0, vt0 WHERE (CAST(rt1.c2 AS NUMERIC)) ORDER BY ((0.03530220092750813) ISNULL);
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c2 AS NUMERIC)) IS TRUE)  as count FROM rt1, t0, vt0 ORDER BY ((0.03530220092750813) ISNULL));
SELECT ALL COUNT(*) FROM rt1, t0, vt0 WHERE (CAST(rt1.c2 AS NUMERIC)) ORDER BY ((0.03530220092750813) ISNULL);
SELECT * FROM rt1 NATURAL JOIN vt0 WHERE (((CAST(rt1.c2 AS INTEGER)) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0))) AND (CAST(rt1.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c2 AS INTEGER)) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0))) AND (CAST(rt1.c1 AS TEXT)))) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0);
SELECT * FROM rt1 NATURAL JOIN vt0 WHERE (((CAST(rt1.c2 AS INTEGER)) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0))) AND (CAST(rt1.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c2 AS INTEGER)) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0))) AND (CAST(rt1.c1 AS TEXT)))) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0);
SELECT * FROM rt1 NATURAL JOIN vt0 WHERE (((CAST(rt1.c2 AS INTEGER)) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0))) AND (CAST(rt1.c1 AS TEXT))));
SELECT ALL * FROM vt0 WHERE ((((((NOT (vt0.c0)))OR(NULL)))OR(CAST(vt0.c0 AS REAL)))) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (vt0.c0)))OR(NULL)))OR(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) ISNULL) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((NOT (vt0.c0)))OR(NULL)))OR(CAST(vt0.c0 AS REAL)))) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (vt0.c0)))OR(NULL)))OR(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) ISNULL) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((NOT (vt0.c0)))OR(NULL)))OR(CAST(vt0.c0 AS REAL)))) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) ISNULL) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON CASE IFNULL(DISTINCT rt1.c1, t0.c0)  WHEN ((rt1.c2)GLOB(vt0.c0)) THEN ((t0.c1)LIKE(t0.c0)) END INNER JOIN t0 ON (((+ (vt0.c0))) NOT NULL) WHERE (CAST(((vt0.c0)AND(t0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)AND(t0.c1)) AS BLOB)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON CASE IFNULL(DISTINCT rt1.c1, t0.c0)  WHEN ((rt1.c2)GLOB(vt0.c0)) THEN ((t0.c1)LIKE(t0.c0)) END INNER JOIN t0 ON (((+ (vt0.c0))) NOT NULL));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON CASE IFNULL(DISTINCT rt1.c1, t0.c0)  WHEN ((rt1.c2)GLOB(vt0.c0)) THEN ((t0.c1)LIKE(t0.c0)) END INNER JOIN t0 ON (((+ (vt0.c0))) NOT NULL) WHERE (CAST(((vt0.c0)AND(t0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)AND(t0.c1)) AS BLOB)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON CASE IFNULL(DISTINCT rt1.c1, t0.c0)  WHEN ((rt1.c2)GLOB(vt0.c0)) THEN ((t0.c1)LIKE(t0.c0)) END INNER JOIN t0 ON (((+ (vt0.c0))) NOT NULL));
SELECT COUNT(*) FROM t0, vt0, rt1 WHERE (CAST(((t0.c2)/(x'deea')) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c2)/(x'deea')) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT COUNT(*) FROM t0, vt0, rt1 WHERE (CAST(((t0.c2)/(x'deea')) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c2)/(x'deea')) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT COUNT(*) FROM t0, vt0, rt1 WHERE (CAST(((t0.c2)/(x'deea')) AS NUMERIC));
SELECT ALL * FROM rt1 WHERE (CAST(((rt1.c2) IS FALSE) AS NUMERIC)) ORDER BY CAST(rt1.c0 COLLATE BINARY AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2) IS FALSE) AS NUMERIC)) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c0 COLLATE BINARY AS REAL));
SELECT ALL * FROM rt1 WHERE (CAST(((rt1.c2) IS FALSE) AS NUMERIC)) ORDER BY CAST(rt1.c0 COLLATE BINARY AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2) IS FALSE) AS NUMERIC)) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c0 COLLATE BINARY AS REAL));
SELECT ALL * FROM rt1 WHERE (CAST(((rt1.c2) IS FALSE) AS NUMERIC)) ORDER BY CAST(rt1.c0 COLLATE BINARY AS REAL);
SELECT ALL COUNT(*) FROM rt1 INDEXED BY i95 LEFT OUTER JOIN t0 ON (((t0.c2)) BETWEEN ((((t0.c2) BETWEEN (rt1.c1) AND (vt0.c0)))) AND ((((((rt1.c0)AND(t0.c1)))OR(rt1.c2))))) RIGHT OUTER JOIN vt0 ON DATE(t0.c2, t0.c1, rt1.c1) COLLATE BINARY WHERE (rt1.c0) ORDER BY CASE WHEN ((t0.c0) IS FALSE) THEN ((0.7388996999842271)>>(t0.c0)) ELSE UPPER(DISTINCT rt1.c0) END DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1 INDEXED BY i95 LEFT OUTER JOIN t0 ON (((t0.c2)) BETWEEN ((((t0.c2) BETWEEN (rt1.c1) AND (vt0.c0)))) AND ((((((rt1.c0)AND(t0.c1)))OR(rt1.c2))))) RIGHT OUTER JOIN vt0 ON DATE(t0.c2, t0.c1, rt1.c1) COLLATE BINARY ORDER BY CASE WHEN ((t0.c0) IS FALSE) THEN ((0.7388996999842271)>>(t0.c0)) ELSE UPPER(DISTINCT rt1.c0) END DESC);
SELECT ALL COUNT(*) FROM rt1 INDEXED BY i95 LEFT OUTER JOIN t0 ON (((t0.c2)) BETWEEN ((((t0.c2) BETWEEN (rt1.c1) AND (vt0.c0)))) AND ((((((rt1.c0)AND(t0.c1)))OR(rt1.c2))))) RIGHT OUTER JOIN vt0 ON DATE(t0.c2, t0.c1, rt1.c1) COLLATE BINARY WHERE (rt1.c0) ORDER BY CASE WHEN ((t0.c0) IS FALSE) THEN ((0.7388996999842271)>>(t0.c0)) ELSE UPPER(DISTINCT rt1.c0) END DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1 INDEXED BY i95 LEFT OUTER JOIN t0 ON (((t0.c2)) BETWEEN ((((t0.c2) BETWEEN (rt1.c1) AND (vt0.c0)))) AND ((((((rt1.c0)AND(t0.c1)))OR(rt1.c2))))) RIGHT OUTER JOIN vt0 ON DATE(t0.c2, t0.c1, rt1.c1) COLLATE BINARY ORDER BY CASE WHEN ((t0.c0) IS FALSE) THEN ((0.7388996999842271)>>(t0.c0)) ELSE UPPER(DISTINCT rt1.c0) END DESC);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (ABS(rt1.c0) COLLATE NOCASE) ORDER BY '0.9475639031712454' DESC  NULLS LAST, (rt1.c1 IN (rt1.c0)) COLLATE NOCASE DESC, ((((vt0.c0)/(rt1.c2)))%(((rt1.c1)IS NOT(rt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(rt1.c0) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0 ORDER BY '0.9475639031712454' DESC  NULLS LAST, (rt1.c1 IN (rt1.c0)) COLLATE NOCASE DESC, ((((vt0.c0)/(rt1.c2)))%(((rt1.c1)IS NOT(rt1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (ABS(rt1.c0) COLLATE NOCASE) ORDER BY '0.9475639031712454' DESC  NULLS LAST, (rt1.c1 IN (rt1.c0)) COLLATE NOCASE DESC, ((((vt0.c0)/(rt1.c2)))%(((rt1.c1)IS NOT(rt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(rt1.c0) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0 ORDER BY '0.9475639031712454' DESC  NULLS LAST, (rt1.c1 IN (rt1.c0)) COLLATE NOCASE DESC, ((((vt0.c0)/(rt1.c2)))%(((rt1.c1)IS NOT(rt1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (ABS(rt1.c0) COLLATE NOCASE) ORDER BY '0.9475639031712454' DESC  NULLS LAST, (rt1.c1 IN (rt1.c0)) COLLATE NOCASE DESC, ((((vt0.c0)/(rt1.c2)))%(((rt1.c1)IS NOT(rt1.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 WHERE ((((NOT (t0.c1)))-(((t0.c2)+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c1)))-(((t0.c2)+(vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((NOT (t0.c1)))-(((t0.c2)+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c1)))-(((t0.c2)+(vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((NOT (t0.c1)))-(((t0.c2)+(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (x'') ORDER BY 0.7562855599975931;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1 ORDER BY 0.7562855599975931);
SELECT ALL COUNT(*) FROM rt1 WHERE (x'') ORDER BY 0.7562855599975931;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1 ORDER BY 0.7562855599975931);
SELECT ALL COUNT(*) FROM rt1 WHERE (x'') ORDER BY 0.7562855599975931;
SELECT ALL * FROM vt0 WHERE (IFNULL(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), NULL)) ORDER BY ((0x1b44c0ed) IS TRUE) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((0x1b44c0ed) IS TRUE) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (IFNULL(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), NULL)) ORDER BY ((0x1b44c0ed) IS TRUE) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((0x1b44c0ed) IS TRUE) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (IFNULL(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), NULL)) ORDER BY ((0x1b44c0ed) IS TRUE) COLLATE NOCASE ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt1 WHERE (CAST(((rt1.c2) BETWEEN (rt1.c2) AND ('uK륞Vw')) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2) BETWEEN (rt1.c2) AND ('uK륞Vw')) AS INTEGER)) IS TRUE)  as count FROM t0, rt1);
SELECT COUNT(*) FROM t0, rt1 WHERE (CAST(((rt1.c2) BETWEEN (rt1.c2) AND ('uK륞Vw')) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2) BETWEEN (rt1.c2) AND ('uK륞Vw')) AS INTEGER)) IS TRUE)  as count FROM t0, rt1);
SELECT COUNT(*) FROM t0, rt1 WHERE (CAST(((rt1.c2) BETWEEN (rt1.c2) AND ('uK륞Vw')) AS INTEGER));
SELECT ALL * FROM t0, rt1 CROSS JOIN vt0 ON 0x7b3d5333 WHERE (((t0.c1) BETWEEN ((~ (t0.c2))) AND (CAST(t0.c0 AS INTEGER)))) ORDER BY ((JULIANDAY(rt1.c0, '-752602563', vt0.c0, t0.c2, rt1.c1, t0.c1, vt0.c0))>(((((((((vt0.c0)AND(t0.c2)))AND(vt0.c0)))OR(rt1.c0)))AND(x'')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c1) BETWEEN ((~ (t0.c2))) AND (CAST(t0.c0 AS INTEGER)))) IS TRUE)  as count FROM t0, rt1 CROSS JOIN vt0 ON 0X7b3d5333 ORDER BY ((JULIANDAY(rt1.c0, '-752602563', vt0.c0, t0.c2, rt1.c1, t0.c1, vt0.c0))>(((((((((vt0.c0)AND(t0.c2)))AND(vt0.c0)))OR(rt1.c0)))AND(x'')))) ASC  NULLS FIRST);
SELECT ALL * FROM t0, rt1 CROSS JOIN vt0 ON 0x7b3d5333 WHERE (((t0.c1) BETWEEN ((~ (t0.c2))) AND (CAST(t0.c0 AS INTEGER)))) ORDER BY ((JULIANDAY(rt1.c0, '-752602563', vt0.c0, t0.c2, rt1.c1, t0.c1, vt0.c0))>(((((((((vt0.c0)AND(t0.c2)))AND(vt0.c0)))OR(rt1.c0)))AND(x'')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c1) BETWEEN ((~ (t0.c2))) AND (CAST(t0.c0 AS INTEGER)))) IS TRUE)  as count FROM t0, rt1 CROSS JOIN vt0 ON 0X7b3d5333 ORDER BY ((JULIANDAY(rt1.c0, '-752602563', vt0.c0, t0.c2, rt1.c1, t0.c1, vt0.c0))>(((((((((vt0.c0)AND(t0.c2)))AND(vt0.c0)))OR(rt1.c0)))AND(x'')))) ASC  NULLS FIRST);
SELECT ALL * FROM t0, rt1 CROSS JOIN vt0 ON 0x7b3d5333 WHERE (((t0.c1) BETWEEN ((~ (t0.c2))) AND (CAST(t0.c0 AS INTEGER)))) ORDER BY ((JULIANDAY(rt1.c0, '-752602563', vt0.c0, t0.c2, rt1.c1, t0.c1, vt0.c0))>(((((((((vt0.c0)AND(t0.c2)))AND(vt0.c0)))OR(rt1.c0)))AND(x'')))) ASC  NULLS FIRST;
SELECT ALL * FROM rt1 LEFT OUTER JOIN t0 ON (+ (TYPEOF(DISTINCT rt1.c1))) WHERE (-1641107264) ORDER BY (((t0.c0))<((CASE WHEN t0.c0 THEN rt1.c1 WHEN t0.c2 THEN rt1.c1 WHEN t0.c2 THEN t0.c2 END))) DESC;
SELECT SUM(count) FROM (SELECT ((-1641107264) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON (+ (TYPEOF(DISTINCT rt1.c1))) ORDER BY (((t0.c0))<((CASE WHEN t0.c0 THEN rt1.c1 WHEN t0.c2 THEN rt1.c1 WHEN t0.c2 THEN t0.c2 END))) DESC);
SELECT ALL * FROM rt1 LEFT OUTER JOIN t0 ON (+ (TYPEOF(DISTINCT rt1.c1))) WHERE (-1641107264) ORDER BY (((t0.c0))<((CASE WHEN t0.c0 THEN rt1.c1 WHEN t0.c2 THEN rt1.c1 WHEN t0.c2 THEN t0.c2 END))) DESC;
SELECT SUM(count) FROM (SELECT ((-1641107264) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON (+ (TYPEOF(DISTINCT rt1.c1))) ORDER BY (((t0.c0))<((CASE WHEN t0.c0 THEN rt1.c1 WHEN t0.c2 THEN rt1.c1 WHEN t0.c2 THEN t0.c2 END))) DESC);
SELECT ALL * FROM rt1 LEFT OUTER JOIN t0 ON (+ (TYPEOF(DISTINCT rt1.c1))) WHERE (-1641107264) ORDER BY (((t0.c0))<((CASE WHEN t0.c0 THEN rt1.c1 WHEN t0.c2 THEN rt1.c1 WHEN t0.c2 THEN t0.c2 END))) DESC;
SELECT COUNT(*) FROM t0 INNER JOIN rt1 ON ((rt1.c2 COLLATE NOCASE) ISNULL) RIGHT OUTER JOIN vt0 ON (- (rt1.c0)) WHERE (((('-445651662')) NOT BETWEEN ((((((rt1.c0)OR(rt1.c0)))AND(rt1.c2)))) AND ((INSTR(rt1.c2, t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((('-445651662')) NOT BETWEEN ((((((rt1.c0)OR(rt1.c0)))AND(rt1.c2)))) AND ((INSTR(rt1.c2, t0.c2))))) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON ((rt1.c2 COLLATE NOCASE) ISNULL) RIGHT OUTER JOIN vt0 ON (- (rt1.c0)));
SELECT COUNT(*) FROM t0 INNER JOIN rt1 ON ((rt1.c2 COLLATE NOCASE) ISNULL) RIGHT OUTER JOIN vt0 ON (- (rt1.c0)) WHERE (((('-445651662')) NOT BETWEEN ((((((rt1.c0)OR(rt1.c0)))AND(rt1.c2)))) AND ((INSTR(rt1.c2, t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((('-445651662')) NOT BETWEEN ((((((rt1.c0)OR(rt1.c0)))AND(rt1.c2)))) AND ((INSTR(rt1.c2, t0.c2))))) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON ((rt1.c2 COLLATE NOCASE) ISNULL) RIGHT OUTER JOIN vt0 ON (- (rt1.c0)));
SELECT COUNT(*) FROM t0 INNER JOIN rt1 ON ((rt1.c2 COLLATE NOCASE) ISNULL) RIGHT OUTER JOIN vt0 ON (- (rt1.c0)) WHERE (((('-445651662')) NOT BETWEEN ((((((rt1.c0)OR(rt1.c0)))AND(rt1.c2)))) AND ((INSTR(rt1.c2, t0.c2)))));
SELECT * FROM rt1, vt0, t0 WHERE ((NOT (((t0.c1) NOT BETWEEN (vt0.c0) AND (t0.c1))))) ORDER BY ((((((((t0.c0)AND(t0.c0)))OR(rt1.c2)))OR(rt1.c2)))OR(t0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c1) NOT BETWEEN (vt0.c0) AND (t0.c1))))) IS TRUE)  as count FROM rt1, vt0, t0 ORDER BY ((((((((t0.c0)AND(t0.c0)))OR(rt1.c2)))OR(rt1.c2)))OR(t0.c0)) COLLATE NOCASE);
SELECT * FROM rt1, vt0, t0 WHERE ((NOT (((t0.c1) NOT BETWEEN (vt0.c0) AND (t0.c1))))) ORDER BY ((((((((t0.c0)AND(t0.c0)))OR(rt1.c2)))OR(rt1.c2)))OR(t0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c1) NOT BETWEEN (vt0.c0) AND (t0.c1))))) IS TRUE)  as count FROM rt1, vt0, t0 ORDER BY ((((((((t0.c0)AND(t0.c0)))OR(rt1.c2)))OR(rt1.c2)))OR(t0.c0)) COLLATE NOCASE);
SELECT * FROM rt1, vt0, t0 WHERE ((NOT (((t0.c1) NOT BETWEEN (vt0.c0) AND (t0.c1))))) ORDER BY ((((((((t0.c0)AND(t0.c0)))OR(rt1.c2)))OR(rt1.c2)))OR(t0.c0)) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN t0 ON rt1.c0 COLLATE RTRIM LEFT OUTER JOIN vt0 ON (((((('|W')AND(rt1.c1)))OR(rt1.c1))) NOT BETWEEN (UNLIKELY(vt0.c0)) AND (rt1.c0 COLLATE BINARY)) WHERE (((((((t0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))))<>((((t0.c0) ISNULL))))) ORDER BY (+ (((rt1.c1) BETWEEN (t0.c2) AND (NULL))))  NULLS FIRST, (((t0.c1, vt0.c0, x'')) NOT BETWEEN ((((vt0.c0)LIKE(rt1.c1)), t0.c1 COLLATE BINARY, ((rt1.c1) NOTNULL))) AND ((((t0.c1)||(0.22112982931047187)), -2144944508, t0.c1)))  NULLS FIRST, rt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))))<>((((t0.c0) ISNULL))))) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON rt1.c0 COLLATE RTRIM LEFT OUTER JOIN vt0 ON (((((('|W')AND(rt1.c1)))OR(rt1.c1))) NOT BETWEEN (UNLIKELY(vt0.c0)) AND (rt1.c0 COLLATE BINARY)) ORDER BY (+ (((rt1.c1) BETWEEN (t0.c2) AND (NULL))))  NULLS FIRST, (((t0.c1, vt0.c0, x'')) NOT BETWEEN ((((vt0.c0)LIKE(rt1.c1)), t0.c1 COLLATE BINARY, ((rt1.c1) NOTNULL))) AND ((((t0.c1)||(0.22112982931047187)), -2144944508, t0.c1)))  NULLS FIRST, rt1.c1 ASC);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN t0 ON rt1.c0 COLLATE RTRIM LEFT OUTER JOIN vt0 ON (((((('|W')AND(rt1.c1)))OR(rt1.c1))) NOT BETWEEN (UNLIKELY(vt0.c0)) AND (rt1.c0 COLLATE BINARY)) WHERE (((((((t0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))))<>((((t0.c0) ISNULL))))) ORDER BY (+ (((rt1.c1) BETWEEN (t0.c2) AND (NULL))))  NULLS FIRST, (((t0.c1, vt0.c0, x'')) NOT BETWEEN ((((vt0.c0)LIKE(rt1.c1)), t0.c1 COLLATE BINARY, ((rt1.c1) NOTNULL))) AND ((((t0.c1)||(0.22112982931047187)), -2144944508, t0.c1)))  NULLS FIRST, rt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))))<>((((t0.c0) ISNULL))))) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON rt1.c0 COLLATE RTRIM LEFT OUTER JOIN vt0 ON (((((('|W')AND(rt1.c1)))OR(rt1.c1))) NOT BETWEEN (UNLIKELY(vt0.c0)) AND (rt1.c0 COLLATE BINARY)) ORDER BY (+ (((rt1.c1) BETWEEN (t0.c2) AND (NULL))))  NULLS FIRST, (((t0.c1, vt0.c0, x'')) NOT BETWEEN ((((vt0.c0)LIKE(rt1.c1)), t0.c1 COLLATE BINARY, ((rt1.c1) NOTNULL))) AND ((((t0.c1)||(0.22112982931047187)), -2144944508, t0.c1)))  NULLS FIRST, rt1.c1 ASC);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN t0 ON rt1.c0 COLLATE RTRIM LEFT OUTER JOIN vt0 ON (((((('|W')AND(rt1.c1)))OR(rt1.c1))) NOT BETWEEN (UNLIKELY(vt0.c0)) AND (rt1.c0 COLLATE BINARY)) WHERE (((((((t0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))))<>((((t0.c0) ISNULL))))) ORDER BY (+ (((rt1.c1) BETWEEN (t0.c2) AND (NULL))))  NULLS FIRST, (((t0.c1, vt0.c0, x'')) NOT BETWEEN ((((vt0.c0)LIKE(rt1.c1)), t0.c1 COLLATE BINARY, ((rt1.c1) NOTNULL))) AND ((((t0.c1)||(0.22112982931047187)), -2144944508, t0.c1)))  NULLS FIRST, rt1.c1 ASC;
SELECT * FROM t0 FULL OUTER JOIN vt0 ON (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((- (t0.c2)), ((((rt1.c2)AND(rt1.c0)))AND(t0.c2)), t0.c1)) AND ((CASE rt1.c1  WHEN vt0.c0 THEN vt0.c0 END, TYPEOF(t0.c0), ((t0.c1) IS FALSE)))) RIGHT OUTER JOIN rt1 ON ((((rt1.c0) ISNULL))+((((t0.c2)) BETWEEN ((NULL)) AND ((vt0.c0))))) WHERE ((NOT (x'')));
SELECT SUM(count) FROM (SELECT (((NOT (x''))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((- (t0.c2)), ((((rt1.c2)AND(rt1.c0)))AND(t0.c2)), t0.c1)) AND ((CASE rt1.c1  WHEN vt0.c0 THEN vt0.c0 END, TYPEOF(t0.c0), ((t0.c1) IS FALSE)))) RIGHT OUTER JOIN rt1 ON ((((rt1.c0) ISNULL))+((((t0.c2)) BETWEEN ((NULL)) AND ((vt0.c0))))));
SELECT * FROM t0 FULL OUTER JOIN vt0 ON (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((- (t0.c2)), ((((rt1.c2)AND(rt1.c0)))AND(t0.c2)), t0.c1)) AND ((CASE rt1.c1  WHEN vt0.c0 THEN vt0.c0 END, TYPEOF(t0.c0), ((t0.c1) IS FALSE)))) RIGHT OUTER JOIN rt1 ON ((((rt1.c0) ISNULL))+((((t0.c2)) BETWEEN ((NULL)) AND ((vt0.c0))))) WHERE ((NOT (x'')));
SELECT SUM(count) FROM (SELECT (((NOT (x''))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((- (t0.c2)), ((((rt1.c2)AND(rt1.c0)))AND(t0.c2)), t0.c1)) AND ((CASE rt1.c1  WHEN vt0.c0 THEN vt0.c0 END, TYPEOF(t0.c0), ((t0.c1) IS FALSE)))) RIGHT OUTER JOIN rt1 ON ((((rt1.c0) ISNULL))+((((t0.c2)) BETWEEN ((NULL)) AND ((vt0.c0))))));
SELECT COUNT(*) FROM rt1, t0 WHERE ((((rt1.c1, rt1.c2, t0.c1)) NOT BETWEEN ((t0.c0, t0.c0, 0.30400756290264774)) AND ((t0.c0, t0.c1, rt1.c1))) COLLATE NOCASE) ORDER BY (NOT (0.8187745049187346)), (((rt1.c2)%(t0.c1)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1, rt1.c2, t0.c1)) NOT BETWEEN ((t0.c0, t0.c0, 0.30400756290264774)) AND ((t0.c0, t0.c1, rt1.c1))) COLLATE NOCASE) IS TRUE)  as count FROM rt1, t0 NOT INDEXED ORDER BY (NOT (0.8187745049187346)), (((rt1.c2)%(t0.c1)) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, t0 WHERE ((((rt1.c1, rt1.c2, t0.c1)) NOT BETWEEN ((t0.c0, t0.c0, 0.30400756290264774)) AND ((t0.c0, t0.c1, rt1.c1))) COLLATE NOCASE) ORDER BY (NOT (0.8187745049187346)), (((rt1.c2)%(t0.c1)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1, rt1.c2, t0.c1)) NOT BETWEEN ((t0.c0, t0.c0, 0.30400756290264774)) AND ((t0.c0, t0.c1, rt1.c1))) COLLATE NOCASE) IS TRUE)  as count FROM rt1, t0 NOT INDEXED ORDER BY (NOT (0.8187745049187346)), (((rt1.c2)%(t0.c1)) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, t0 WHERE ((((rt1.c1, rt1.c2, t0.c1)) NOT BETWEEN ((t0.c0, t0.c0, 0.30400756290264774)) AND ((t0.c0, t0.c1, rt1.c1))) COLLATE NOCASE) ORDER BY (NOT (0.8187745049187346)), (((rt1.c2)%(t0.c1)) IN ()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL)) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL)) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL)) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY;
SELECT COUNT(*) FROM vt0, t0 LEFT OUTER JOIN rt1 ON ((((t0.c0)-(t0.c0))) BETWEEN (0xffffffffcb6e9a5b) AND ((((rt1.c0, '_o,b&', t0.c0)) BETWEEN (('', vt0.c0, vt0.c0)) AND ((rt1.c2, t0.c2, t0.c2))))) WHERE ((~ (CAST(rt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt1 ON ((((t0.c0)-(t0.c0))) BETWEEN (0xffffffffcb6e9a5b) AND ((((rt1.c0, '_o,b&', t0.c0)) BETWEEN (('', vt0.c0, vt0.c0)) AND ((rt1.c2, t0.c2, t0.c2))))));
SELECT COUNT(*) FROM vt0, t0 LEFT OUTER JOIN rt1 ON ((((t0.c0)-(t0.c0))) BETWEEN (0xffffffffcb6e9a5b) AND ((((rt1.c0, '_o,b&', t0.c0)) BETWEEN (('', vt0.c0, vt0.c0)) AND ((rt1.c2, t0.c2, t0.c2))))) WHERE ((~ (CAST(rt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt1 ON ((((t0.c0)-(t0.c0))) BETWEEN (0xffffffffcb6e9a5b) AND ((((rt1.c0, '_o,b&', t0.c0)) BETWEEN (('', vt0.c0, vt0.c0)) AND ((rt1.c2, t0.c2, t0.c2))))));
SELECT COUNT(*) FROM vt0, t0 LEFT OUTER JOIN rt1 ON ((((t0.c0)-(t0.c0))) BETWEEN (0xffffffffcb6e9a5b) AND ((((rt1.c0, '_o,b&', t0.c0)) BETWEEN (('', vt0.c0, vt0.c0)) AND ((rt1.c2, t0.c2, t0.c2))))) WHERE ((~ (CAST(rt1.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON ((((((NULL)AND(rt1.c1)))AND(rt1.c2))) NOT BETWEEN (CASE WHEN rt1.c2 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END) AND ('()')) WHERE (((CASE WHEN rt1.c1 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN '' ELSE vt0.c0 END) BETWEEN (HEX(rt1.c1)) AND (((rt1.c1) NOT BETWEEN (rt1.c2) AND ('0.8167841170395096')))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c1 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN '' ELSE vt0.c0 END) BETWEEN (HEX(rt1.c1)) AND (((rt1.c1) NOT BETWEEN (rt1.c2) AND ('0.8167841170395096'))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON ((((((NULL)AND(rt1.c1)))AND(rt1.c2))) NOT BETWEEN (CASE WHEN rt1.c2 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END) AND ('()')));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON ((((((NULL)AND(rt1.c1)))AND(rt1.c2))) NOT BETWEEN (CASE WHEN rt1.c2 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END) AND ('()')) WHERE (((CASE WHEN rt1.c1 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN '' ELSE vt0.c0 END) BETWEEN (HEX(rt1.c1)) AND (((rt1.c1) NOT BETWEEN (rt1.c2) AND ('0.8167841170395096')))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c1 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN '' ELSE vt0.c0 END) BETWEEN (HEX(rt1.c1)) AND (((rt1.c1) NOT BETWEEN (rt1.c2) AND ('0.8167841170395096'))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON ((((((NULL)AND(rt1.c1)))AND(rt1.c2))) NOT BETWEEN (CASE WHEN rt1.c2 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END) AND ('()')));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON ((((((NULL)AND(rt1.c1)))AND(rt1.c2))) NOT BETWEEN (CASE WHEN rt1.c2 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END) AND ('()')) WHERE (((CASE WHEN rt1.c1 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN '' ELSE vt0.c0 END) BETWEEN (HEX(rt1.c1)) AND (((rt1.c1) NOT BETWEEN (rt1.c2) AND ('0.8167841170395096')))));
SELECT COUNT(*) FROM vt0, t0 WHERE (t0.c2) ORDER BY (((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2))))>((((t0.c1) IS FALSE)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2))))>((((t0.c1) IS FALSE)))) ASC);
SELECT COUNT(*) FROM vt0, t0 WHERE (t0.c2) ORDER BY (((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2))))>((((t0.c1) IS FALSE)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2))))>((((t0.c1) IS FALSE)))) ASC);
SELECT COUNT(*) FROM vt0, t0 WHERE (t0.c2) ORDER BY (((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2))))>((((t0.c1) IS FALSE)))) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(CASE t0.c2  WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE t0.c2  WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END AS REAL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(CASE t0.c2  WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE t0.c2  WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END AS REAL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(CASE t0.c2  WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END AS REAL));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c1) IS TRUE))OR(((t0.c2)==(t0.c1)))))AND(((t0.c2)>(t0.c1))))) ORDER BY ((CAST(t0.c0 AS TEXT)) NOT BETWEEN ((~ (t0.c2))) AND (t0.c1)), '1616152570' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1) IS TRUE))OR(((t0.c2)=(t0.c1)))))AND(((t0.c2)>(t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c0 AS TEXT)) NOT BETWEEN ((~ (t0.c2))) AND (t0.c1)), '1616152570' ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c1) IS TRUE))OR(((t0.c2)==(t0.c1)))))AND(((t0.c2)>(t0.c1))))) ORDER BY ((CAST(t0.c0 AS TEXT)) NOT BETWEEN ((~ (t0.c2))) AND (t0.c1)), '1616152570' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1) IS TRUE))OR(((t0.c2)=(t0.c1)))))AND(((t0.c2)>(t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c0 AS TEXT)) NOT BETWEEN ((~ (t0.c2))) AND (t0.c1)), '1616152570' ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c1) IS TRUE))OR(((t0.c2)==(t0.c1)))))AND(((t0.c2)>(t0.c1))))) ORDER BY ((CAST(t0.c0 AS TEXT)) NOT BETWEEN ((~ (t0.c2))) AND (t0.c1)), '1616152570' ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)<>(NULL)), LIKE(vt0.c0, vt0.c0, '-'), (NOT (vt0.c0)))) AND ((((vt0.c0)GLOB(vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0)IS NOT(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)<>(NULL)), LIKE(vt0.c0, vt0.c0, '-'), (NOT (vt0.c0)))) AND ((((vt0.c0)GLOB(vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0)IS NOT(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)<>(NULL)), LIKE(vt0.c0, vt0.c0, '-'), (NOT (vt0.c0)))) AND ((((vt0.c0)GLOB(vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0)IS NOT(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)<>(NULL)), LIKE(vt0.c0, vt0.c0, '-'), (NOT (vt0.c0)))) AND ((((vt0.c0)GLOB(vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0)IS NOT(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)<>(NULL)), LIKE(vt0.c0, vt0.c0, '-'), (NOT (vt0.c0)))) AND ((((vt0.c0)GLOB(vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0)IS NOT(vt0.c0))))));
SELECT ALL * FROM rt1, t0 WHERE (CAST((t0.c2 IN ()) AS BLOB)) ORDER BY CASE WHEN CASE t0.c2  WHEN rt1.c2 THEN t0.c2 WHEN rt1.c2 THEN rt1.c0 WHEN t0.c2 THEN rt1.c1 END THEN (t0.c2 IN ()) ELSE ((rt1.c1)|(rt1.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ((CAST((t0.c2 IN ()) AS BLOB)) IS TRUE)  as count FROM rt1, t0 ORDER BY CASE WHEN CASE t0.c2  WHEN rt1.c2 THEN t0.c2 WHEN rt1.c2 THEN rt1.c0 WHEN t0.c2 THEN rt1.c1 END THEN (t0.c2 IN ()) ELSE ((rt1.c1)|(rt1.c1)) END DESC);
SELECT ALL * FROM rt1, t0 WHERE (CAST((t0.c2 IN ()) AS BLOB)) ORDER BY CASE WHEN CASE t0.c2  WHEN rt1.c2 THEN t0.c2 WHEN rt1.c2 THEN rt1.c0 WHEN t0.c2 THEN rt1.c1 END THEN (t0.c2 IN ()) ELSE ((rt1.c1)|(rt1.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ((CAST((t0.c2 IN ()) AS BLOB)) IS TRUE)  as count FROM rt1, t0 ORDER BY CASE WHEN CASE t0.c2  WHEN rt1.c2 THEN t0.c2 WHEN rt1.c2 THEN rt1.c0 WHEN t0.c2 THEN rt1.c1 END THEN (t0.c2 IN ()) ELSE ((rt1.c1)|(rt1.c1)) END DESC);
SELECT ALL * FROM rt1, t0 WHERE (CAST((t0.c2 IN ()) AS BLOB)) ORDER BY CASE WHEN CASE t0.c2  WHEN rt1.c2 THEN t0.c2 WHEN rt1.c2 THEN rt1.c0 WHEN t0.c2 THEN rt1.c1 END THEN (t0.c2 IN ()) ELSE ((rt1.c1)|(rt1.c1)) END DESC;
SELECT COUNT(*) FROM rt1, t0 WHERE (((((((rt1.c1)IS(rt1.c1)))AND(((t0.c1) BETWEEN (rt1.c0) AND (t0.c2)))))AND(rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)IS(rt1.c1)))AND(((t0.c1) BETWEEN (rt1.c0) AND (t0.c2)))))AND(rt1.c1))) IS TRUE)  as count FROM rt1, t0);
SELECT COUNT(*) FROM rt1, t0 WHERE (((((((rt1.c1)IS(rt1.c1)))AND(((t0.c1) BETWEEN (rt1.c0) AND (t0.c2)))))AND(rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)IS(rt1.c1)))AND(((t0.c1) BETWEEN (rt1.c0) AND (t0.c2)))))AND(rt1.c1))) IS TRUE)  as count FROM rt1, t0);
SELECT COUNT(*) FROM rt1, t0 WHERE (((((((rt1.c1)IS(rt1.c1)))AND(((t0.c1) BETWEEN (rt1.c0) AND (t0.c2)))))AND(rt1.c1)));
SELECT COUNT(*) FROM vt0, rt1 RIGHT OUTER JOIN t0 ON (~ (rt1.c1)) WHERE (((t0.c2 COLLATE NOCASE) BETWEEN ((~ (rt1.c0))) AND ((- (t0.c1))))) ORDER BY json_array_length(((rt1.c1)/(0.8808504693503922)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c2 COLLATE NOCASE) BETWEEN ((~ (rt1.c0))) AND ((- (t0.c1))))) IS TRUE)  as count FROM vt0, rt1 RIGHT OUTER JOIN t0 ON (~ (rt1.c1)) ORDER BY json_array_length(((rt1.c1)/(0.8808504693503922)))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 RIGHT OUTER JOIN t0 ON (~ (rt1.c1)) WHERE (((t0.c2 COLLATE NOCASE) BETWEEN ((~ (rt1.c0))) AND ((- (t0.c1))))) ORDER BY json_array_length(((rt1.c1)/(0.8808504693503922)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c2 COLLATE NOCASE) BETWEEN ((~ (rt1.c0))) AND ((- (t0.c1))))) IS TRUE)  as count FROM vt0, rt1 RIGHT OUTER JOIN t0 ON (~ (rt1.c1)) ORDER BY json_array_length(((rt1.c1)/(0.8808504693503922)))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 RIGHT OUTER JOIN t0 ON (~ (rt1.c1)) WHERE (((t0.c2 COLLATE NOCASE) BETWEEN ((~ (rt1.c0))) AND ((- (t0.c1))))) ORDER BY json_array_length(((rt1.c1)/(0.8808504693503922)))  NULLS LAST;
SELECT ALL * FROM vt0, t0, rt1 WHERE (((((rt1.c0, t0.c2, rt1.c2)) BETWEEN ((rt1.c1, t0.c2, rt1.c1)) AND ((vt0.c0, rt1.c2, t0.c1))) IN ())) ORDER BY (((vt0.c0)) BETWEEN ((CAST(t0.c2 AS INTEGER))) AND ((NULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0, t0.c2, rt1.c2)) BETWEEN ((rt1.c1, t0.c2, rt1.c1)) AND ((vt0.c0, rt1.c2, t0.c1))) IN ())) IS TRUE)  as count FROM vt0, t0, rt1 ORDER BY (((vt0.c0)) BETWEEN ((CAST(t0.c2 AS INTEGER))) AND ((NULL))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0, rt1 WHERE (((((rt1.c0, t0.c2, rt1.c2)) BETWEEN ((rt1.c1, t0.c2, rt1.c1)) AND ((vt0.c0, rt1.c2, t0.c1))) IN ())) ORDER BY (((vt0.c0)) BETWEEN ((CAST(t0.c2 AS INTEGER))) AND ((NULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0, t0.c2, rt1.c2)) BETWEEN ((rt1.c1, t0.c2, rt1.c1)) AND ((vt0.c0, rt1.c2, t0.c1))) IN ())) IS TRUE)  as count FROM vt0, t0, rt1 ORDER BY (((vt0.c0)) BETWEEN ((CAST(t0.c2 AS INTEGER))) AND ((NULL))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0, rt1 WHERE (((((rt1.c0, t0.c2, rt1.c2)) BETWEEN ((rt1.c1, t0.c2, rt1.c1)) AND ((vt0.c0, rt1.c2, t0.c1))) IN ())) ORDER BY (((vt0.c0)) BETWEEN ((CAST(t0.c2 AS INTEGER))) AND ((NULL))) ASC  NULLS LAST;
SELECT ALL * FROM t0, vt0, rt1 WHERE ((((t0.c0)LIKE('-1930817016')) IN ())) ORDER BY ABS(DISTINCT ((t0.c0) IS TRUE)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)LIKE('-1930817016')) IN ())) IS TRUE)  as count FROM t0, vt0, rt1 ORDER BY ABS(DISTINCT ((t0.c0) IS TRUE)) ASC);
SELECT ALL * FROM t0, vt0, rt1 WHERE ((((t0.c0)LIKE('-1930817016')) IN ())) ORDER BY ABS(DISTINCT ((t0.c0) IS TRUE)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)LIKE('-1930817016')) IN ())) IS TRUE)  as count FROM t0, vt0, rt1 ORDER BY ABS(DISTINCT ((t0.c0) IS TRUE)) ASC);
SELECT ALL * FROM t0, vt0, rt1 WHERE ((((t0.c0)LIKE('-1930817016')) IN ())) ORDER BY ABS(DISTINCT ((t0.c0) IS TRUE)) ASC;
SELECT COUNT(*) FROM rt1, t0 WHERE ((rt1.c2 COLLATE RTRIM IN (((t0.c0)LIKE(t0.c1)))));
SELECT SUM(count) FROM (SELECT (((rt1.c2 COLLATE RTRIM IN (((t0.c0)LIKE(t0.c1))))) IS TRUE)  as count FROM rt1, t0 NOT INDEXED);
SELECT COUNT(*) FROM rt1, t0 WHERE ((rt1.c2 COLLATE RTRIM IN (((t0.c0)LIKE(t0.c1)))));
SELECT SUM(count) FROM (SELECT (((rt1.c2 COLLATE RTRIM IN (((t0.c0)LIKE(t0.c1))))) IS TRUE)  as count FROM rt1, t0 NOT INDEXED);
SELECT COUNT(*) FROM rt1, t0 WHERE ((rt1.c2 COLLATE RTRIM IN (((t0.c0)LIKE(t0.c1)))));
SELECT * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((CASE t0.c1  WHEN -1038207312 THEN t0.c1 ELSE t0.c0 END)) AND ((((t0.c2)!=(t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) NOT BETWEEN ((CASE t0.c1  WHEN -1038207312 THEN t0.c1 ELSE t0.c0 END)) AND ((((t0.c2)!=(t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((CASE t0.c1  WHEN -1038207312 THEN t0.c1 ELSE t0.c0 END)) AND ((((t0.c2)!=(t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) NOT BETWEEN ((CASE t0.c1  WHEN -1038207312 THEN t0.c1 ELSE t0.c0 END)) AND ((((t0.c2)!=(t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((CASE t0.c1  WHEN -1038207312 THEN t0.c1 ELSE t0.c0 END)) AND ((((t0.c2)!=(t0.c2))))));
SELECT * FROM vt0, rt1 WHERE ('-623459579') ORDER BY (((rt1.c0, rt1.c0, vt0.c0)) BETWEEN (((- (rt1.c1)), NULL, ((rt1.c2)>=(vt0.c0)))) AND ((CAST(rt1.c1 AS TEXT), ((vt0.c0)>>(rt1.c1)), ((rt1.c2)<(rt1.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-623459579') IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c0, rt1.c0, vt0.c0)) BETWEEN (((- (rt1.c1)), NULL, ((rt1.c2)>=(vt0.c0)))) AND ((CAST(rt1.c1 AS TEXT), ((vt0.c0)>>(rt1.c1)), ((rt1.c2)<(rt1.c1)))))  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE ('-623459579') ORDER BY (((rt1.c0, rt1.c0, vt0.c0)) BETWEEN (((- (rt1.c1)), NULL, ((rt1.c2)>=(vt0.c0)))) AND ((CAST(rt1.c1 AS TEXT), ((vt0.c0)>>(rt1.c1)), ((rt1.c2)<(rt1.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-623459579') IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c0, rt1.c0, vt0.c0)) BETWEEN (((- (rt1.c1)), NULL, ((rt1.c2)>=(vt0.c0)))) AND ((CAST(rt1.c1 AS TEXT), ((vt0.c0)>>(rt1.c1)), ((rt1.c2)<(rt1.c1)))))  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE ('-623459579') ORDER BY (((rt1.c0, rt1.c0, vt0.c0)) BETWEEN (((- (rt1.c1)), NULL, ((rt1.c2)>=(vt0.c0)))) AND ((CAST(rt1.c1 AS TEXT), ((vt0.c0)>>(rt1.c1)), ((rt1.c2)<(rt1.c1)))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 ELSE vt0.c0 END))>((CAST(rt1.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT (((((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 ELSE vt0.c0 END))>((CAST(rt1.c0 AS REAL))))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 ELSE vt0.c0 END))>((CAST(rt1.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT (((((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 ELSE vt0.c0 END))>((CAST(rt1.c0 AS REAL))))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 ELSE vt0.c0 END))>((CAST(rt1.c0 AS REAL)))));
SELECT COUNT(*) FROM rt1 WHERE (((((0x5bcc2a4b) ISNULL))<<((((rt1.c0))>=((0.16632978308982094)))))) ORDER BY CAST((rt1.c2 IN ()) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((0X5bcc2a4b) ISNULL))<<((((rt1.c0))>=((0.16632978308982094)))))) IS TRUE)  as count FROM rt1 ORDER BY CAST((rt1.c2 IN ()) AS REAL) ASC);
SELECT COUNT(*) FROM rt1 WHERE (((((0x5bcc2a4b) ISNULL))<<((((rt1.c0))>=((0.16632978308982094)))))) ORDER BY CAST((rt1.c2 IN ()) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((0X5bcc2a4b) ISNULL))<<((((rt1.c0))>=((0.16632978308982094)))))) IS TRUE)  as count FROM rt1 ORDER BY CAST((rt1.c2 IN ()) AS REAL) ASC);
SELECT COUNT(*) FROM rt1 WHERE (((((0x5bcc2a4b) ISNULL))<<((((rt1.c0))>=((0.16632978308982094)))))) ORDER BY CAST((rt1.c2 IN ()) AS REAL) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN (- (vt0.c0)) END) ORDER BY (NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS LAST, COALESCE(DISTINCT ((vt0.c0)-(vt0.c0)), (NOT (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END, UPPER(vt0.c0));
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN (- (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS LAST, COALESCE(DISTINCT ((vt0.c0)-(vt0.c0)), (NOT (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END, UPPER(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN (- (vt0.c0)) END) ORDER BY (NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS LAST, COALESCE(DISTINCT ((vt0.c0)-(vt0.c0)), (NOT (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END, UPPER(vt0.c0));
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN (- (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS LAST, COALESCE(DISTINCT ((vt0.c0)-(vt0.c0)), (NOT (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END, UPPER(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN (- (vt0.c0)) END) ORDER BY (NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS LAST, COALESCE(DISTINCT ((vt0.c0)-(vt0.c0)), (NOT (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END, UPPER(vt0.c0));
SELECT ALL COUNT(*) FROM rt1, t0, vt0 WHERE ((((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c1)) IN ())) IS TRUE)  as count FROM rt1, t0, vt0);
SELECT ALL COUNT(*) FROM rt1, t0, vt0 WHERE ((((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c1)) IN ())) IS TRUE)  as count FROM rt1, t0, vt0);
SELECT ALL COUNT(*) FROM rt1, t0, vt0 WHERE ((((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c1)) IN ()));
SELECT * FROM vt0, rt1 WHERE ((((rt1.c0)) NOT BETWEEN (((((rt1.c0)) BETWEEN ((vt0.c0)) AND ((rt1.c2))))) AND ((((vt0.c0) IS FALSE))))) ORDER BY ((CASE rt1.c2  WHEN NULL THEN rt1.c0 END)+(RTRIM('-787283649'))) ASC, CASE ((rt1.c1) NOT BETWEEN (rt1.c0) AND (0.7389981556678341))  WHEN CASE rt1.c1  WHEN rt1.c2 THEN vt0.c0 ELSE '-1038207312' END THEN ((rt1.c1) ISNULL) WHEN rt1.c1 COLLATE RTRIM THEN rt1.c2 COLLATE NOCASE WHEN CAST(1193190379 AS TEXT) THEN (- (rt1.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) NOT BETWEEN (((((rt1.c0)) BETWEEN ((vt0.c0)) AND ((rt1.c2))))) AND ((((vt0.c0) IS FALSE))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((CASE rt1.c2  WHEN NULL THEN rt1.c0 END)+(RTRIM('-787283649'))) ASC, CASE ((rt1.c1) NOT BETWEEN (rt1.c0) AND (0.7389981556678341))  WHEN CASE rt1.c1  WHEN rt1.c2 THEN vt0.c0 ELSE '-1038207312' END THEN ((rt1.c1) ISNULL) WHEN rt1.c1 COLLATE RTRIM THEN rt1.c2 COLLATE NOCASE WHEN CAST(1193190379 AS TEXT) THEN (- (rt1.c1)) END DESC  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE ((((rt1.c0)) NOT BETWEEN (((((rt1.c0)) BETWEEN ((vt0.c0)) AND ((rt1.c2))))) AND ((((vt0.c0) IS FALSE))))) ORDER BY ((CASE rt1.c2  WHEN NULL THEN rt1.c0 END)+(RTRIM('-787283649'))) ASC, CASE ((rt1.c1) NOT BETWEEN (rt1.c0) AND (0.7389981556678341))  WHEN CASE rt1.c1  WHEN rt1.c2 THEN vt0.c0 ELSE '-1038207312' END THEN ((rt1.c1) ISNULL) WHEN rt1.c1 COLLATE RTRIM THEN rt1.c2 COLLATE NOCASE WHEN CAST(1193190379 AS TEXT) THEN (- (rt1.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) NOT BETWEEN (((((rt1.c0)) BETWEEN ((vt0.c0)) AND ((rt1.c2))))) AND ((((vt0.c0) IS FALSE))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((CASE rt1.c2  WHEN NULL THEN rt1.c0 END)+(RTRIM('-787283649'))) ASC, CASE ((rt1.c1) NOT BETWEEN (rt1.c0) AND (0.7389981556678341))  WHEN CASE rt1.c1  WHEN rt1.c2 THEN vt0.c0 ELSE '-1038207312' END THEN ((rt1.c1) ISNULL) WHEN rt1.c1 COLLATE RTRIM THEN rt1.c2 COLLATE NOCASE WHEN CAST(1193190379 AS TEXT) THEN (- (rt1.c1)) END DESC  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE ((((rt1.c0)) NOT BETWEEN (((((rt1.c0)) BETWEEN ((vt0.c0)) AND ((rt1.c2))))) AND ((((vt0.c0) IS FALSE))))) ORDER BY ((CASE rt1.c2  WHEN NULL THEN rt1.c0 END)+(RTRIM('-787283649'))) ASC, CASE ((rt1.c1) NOT BETWEEN (rt1.c0) AND (0.7389981556678341))  WHEN CASE rt1.c1  WHEN rt1.c2 THEN vt0.c0 ELSE '-1038207312' END THEN ((rt1.c1) ISNULL) WHEN rt1.c1 COLLATE RTRIM THEN rt1.c2 COLLATE NOCASE WHEN CAST(1193190379 AS TEXT) THEN (- (rt1.c1)) END DESC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))))<(CASE t0.c1  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c1 ELSE t0.c2 END))) ORDER BY ((0.2014666612280014) BETWEEN (t0.c2 COLLATE BINARY) AND (t0.c2))  NULLS FIRST, ((((t0.c0)=(t0.c1))) NOTNULL)  NULLS LAST, (NOT (t0.c2))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))))<(CASE t0.c1  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c1 ELSE t0.c2 END))) IS TRUE)  as count FROM t0 ORDER BY ((0.2014666612280014) BETWEEN (t0.c2 COLLATE BINARY) AND (t0.c2))  NULLS FIRST, ((((t0.c0)=(t0.c1))) NOTNULL)  NULLS LAST, (NOT (t0.c2))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))))<(CASE t0.c1  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c1 ELSE t0.c2 END))) ORDER BY ((0.2014666612280014) BETWEEN (t0.c2 COLLATE BINARY) AND (t0.c2))  NULLS FIRST, ((((t0.c0)=(t0.c1))) NOTNULL)  NULLS LAST, (NOT (t0.c2))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))))<(CASE t0.c1  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c1 ELSE t0.c2 END))) IS TRUE)  as count FROM t0 ORDER BY ((0.2014666612280014) BETWEEN (t0.c2 COLLATE BINARY) AND (t0.c2))  NULLS FIRST, ((((t0.c0)=(t0.c1))) NOTNULL)  NULLS LAST, (NOT (t0.c2))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))))<(CASE t0.c1  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c1 ELSE t0.c2 END))) ORDER BY ((0.2014666612280014) BETWEEN (t0.c2 COLLATE BINARY) AND (t0.c2))  NULLS FIRST, ((((t0.c0)=(t0.c1))) NOTNULL)  NULLS LAST, (NOT (t0.c2))  NULLS LAST;
SELECT * FROM vt0, t0 NOT INDEXED, rt1 WHERE (rt1.c2) ORDER BY 0.47155733611120076  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM vt0, t0, rt1 ORDER BY 0.47155733611120076  NULLS LAST);
SELECT * FROM vt0, t0 NOT INDEXED, rt1 WHERE (rt1.c2) ORDER BY 0.47155733611120076  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM vt0, t0, rt1 ORDER BY 0.47155733611120076  NULLS LAST);
SELECT * FROM vt0, t0 NOT INDEXED, rt1 WHERE (rt1.c2) ORDER BY 0.47155733611120076  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((1560850359) BETWEEN (x'227021b4') AND (t0.c1)))/(((t0.c0)LIKE(t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((1560850359) BETWEEN (x'227021b4') AND (t0.c1)))/(((t0.c0)LIKE(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((1560850359) BETWEEN (x'227021b4') AND (t0.c1)))/(((t0.c0)LIKE(t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((1560850359) BETWEEN (x'227021b4') AND (t0.c1)))/(((t0.c0)LIKE(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((1560850359) BETWEEN (x'227021b4') AND (t0.c1)))/(((t0.c0)LIKE(t0.c1)))));
SELECT ALL * FROM t0, vt0, rt1 WHERE (((((INSTR(t0.c1, t0.c2))AND(CHAR(t0.c0))))AND(0.9561577354689682))) ORDER BY 'h1' COLLATE RTRIM COLLATE RTRIM COLLATE BINARY ASC, (~ ((t0.c2 IN (t0.c1, t0.c2)))) ASC  NULLS FIRST, '138777670' DESC;
SELECT SUM(count) FROM (SELECT ((((((INSTR(t0.c1, t0.c2))AND(CHAR(t0.c0))))AND(0.9561577354689682))) IS TRUE)  as count FROM t0, vt0, rt1 ORDER BY 'h1' COLLATE RTRIM COLLATE RTRIM COLLATE BINARY ASC, (~ ((t0.c2 IN (t0.c1, t0.c2)))) ASC  NULLS FIRST, '138777670' DESC);
SELECT ALL * FROM t0, vt0, rt1 WHERE (((((INSTR(t0.c1, t0.c2))AND(CHAR(t0.c0))))AND(0.9561577354689682))) ORDER BY 'h1' COLLATE RTRIM COLLATE RTRIM COLLATE BINARY ASC, (~ ((t0.c2 IN (t0.c1, t0.c2)))) ASC  NULLS FIRST, '138777670' DESC;
SELECT SUM(count) FROM (SELECT ((((((INSTR(t0.c1, t0.c2))AND(CHAR(t0.c0))))AND(0.9561577354689682))) IS TRUE)  as count FROM t0, vt0, rt1 ORDER BY 'h1' COLLATE RTRIM COLLATE RTRIM COLLATE BINARY ASC, (~ ((t0.c2 IN (t0.c1, t0.c2)))) ASC  NULLS FIRST, '138777670' DESC);
SELECT ALL * FROM t0, vt0, rt1 WHERE (((((INSTR(t0.c1, t0.c2))AND(CHAR(t0.c0))))AND(0.9561577354689682))) ORDER BY 'h1' COLLATE RTRIM COLLATE RTRIM COLLATE BINARY ASC, (~ ((t0.c2 IN (t0.c1, t0.c2)))) ASC  NULLS FIRST, '138777670' DESC;
SELECT ALL * FROM t0 FULL OUTER JOIN rt1 ON (((((rt1.c2)AND(rt1.c2)))OR(t0.c2)) IN ()) WHERE (((((((t0.c0)AND(0.8248379439729727)))AND(rt1.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND(0.8248379439729727)))AND(rt1.c2))) NOTNULL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt1 ON (((((rt1.c2)AND(rt1.c2)))OR(t0.c2)) IN ()));
SELECT ALL * FROM t0 FULL OUTER JOIN rt1 ON (((((rt1.c2)AND(rt1.c2)))OR(t0.c2)) IN ()) WHERE (((((((t0.c0)AND(0.8248379439729727)))AND(rt1.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND(0.8248379439729727)))AND(rt1.c2))) NOTNULL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt1 ON (((((rt1.c2)AND(rt1.c2)))OR(t0.c2)) IN ()));
SELECT ALL * FROM t0 FULL OUTER JOIN rt1 ON (((((rt1.c2)AND(rt1.c2)))OR(t0.c2)) IN ()) WHERE (((((((t0.c0)AND(0.8248379439729727)))AND(rt1.c2))) NOTNULL));
SELECT ALL * FROM t0 WHERE (CASE NULL  WHEN '' THEN ((t0.c2)<(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN '' THEN ((t0.c2)<(t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE NULL  WHEN '' THEN ((t0.c2)<(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN '' THEN ((t0.c2)<(t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE NULL  WHEN '' THEN ((t0.c2)<(t0.c0)) END);
SELECT ALL COUNT(*) FROM t0 WHERE ((('1863799542')IS(t0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((('1863799542')IS(t0.c1)) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((('1863799542')IS(t0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((('1863799542')IS(t0.c1)) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((('1863799542')IS(t0.c1)) COLLATE BINARY);
SELECT * FROM t0 WHERE ((((((t0.c0 IN ()))OR(CASE WHEN t0.c0 THEN t0.c1 ELSE t0.c0 END)))AND(0.8604943287930878)));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0 IN ()))OR(CASE WHEN t0.c0 THEN t0.c1 ELSE t0.c0 END)))AND(0.8604943287930878))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((t0.c0 IN ()))OR(CASE WHEN t0.c0 THEN t0.c1 ELSE t0.c0 END)))AND(0.8604943287930878)));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0 IN ()))OR(CASE WHEN t0.c0 THEN t0.c1 ELSE t0.c0 END)))AND(0.8604943287930878))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((t0.c0 IN ()))OR(CASE WHEN t0.c0 THEN t0.c1 ELSE t0.c0 END)))AND(0.8604943287930878)));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((((t0.c2)AND('_*bb''2')))AND(t0.c0)))AND(CASE vt0.c0  WHEN t0.c2 THEN t0.c0 END)))OR(CAST(t0.c2 AS BLOB)))) ORDER BY ((CAST(t0.c0 AS NUMERIC))LIKE(0.4832071201486182 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((t0.c2)AND('_*bb''2')))AND(t0.c0)))AND(CASE vt0.c0  WHEN t0.c2 THEN t0.c0 END)))OR(CAST(t0.c2 AS BLOB)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CAST(t0.c0 AS NUMERIC))LIKE(0.4832071201486182 COLLATE BINARY))  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((((t0.c2)AND('_*bb''2')))AND(t0.c0)))AND(CASE vt0.c0  WHEN t0.c2 THEN t0.c0 END)))OR(CAST(t0.c2 AS BLOB)))) ORDER BY ((CAST(t0.c0 AS NUMERIC))LIKE(0.4832071201486182 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((t0.c2)AND('_*bb''2')))AND(t0.c0)))AND(CASE vt0.c0  WHEN t0.c2 THEN t0.c0 END)))OR(CAST(t0.c2 AS BLOB)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CAST(t0.c0 AS NUMERIC))LIKE(0.4832071201486182 COLLATE BINARY))  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((((t0.c2)AND('_*bb''2')))AND(t0.c0)))AND(CASE vt0.c0  WHEN t0.c2 THEN t0.c0 END)))OR(CAST(t0.c2 AS BLOB)))) ORDER BY ((CAST(t0.c0 AS NUMERIC))LIKE(0.4832071201486182 COLLATE BINARY))  NULLS LAST;
SELECT * FROM vt0 WHERE (TRIM(((vt0.c0) NOT NULL), json_quote(vt0.c0))) ORDER BY ((0.22558904777781508) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((vt0.c0) NOT NULL), json_quote(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((0.22558904777781508) NOT NULL) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (TRIM(((vt0.c0) NOT NULL), json_quote(vt0.c0))) ORDER BY ((0.22558904777781508) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((vt0.c0) NOT NULL), json_quote(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((0.22558904777781508) NOT NULL) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (TRIM(((vt0.c0) NOT NULL), json_quote(vt0.c0))) ORDER BY ((0.22558904777781508) NOT NULL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, vt0, t0 WHERE (((((((rt1.c2)AND(rt1.c2)))OR('')))&(((vt0.c0) BETWEEN (t0.c1) AND (x''))))) ORDER BY ((((rt1.c0)>(t0.c1))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)AND(rt1.c2)))OR('')))&(((vt0.c0) BETWEEN (t0.c1) AND (x''))))) IS TRUE)  as count FROM rt1, vt0, t0 ORDER BY ((((rt1.c0)>(t0.c1))) IS TRUE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0, t0 WHERE (((((((rt1.c2)AND(rt1.c2)))OR('')))&(((vt0.c0) BETWEEN (t0.c1) AND (x''))))) ORDER BY ((((rt1.c0)>(t0.c1))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)AND(rt1.c2)))OR('')))&(((vt0.c0) BETWEEN (t0.c1) AND (x''))))) IS TRUE)  as count FROM rt1, vt0, t0 ORDER BY ((((rt1.c0)>(t0.c1))) IS TRUE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0, t0 WHERE (((((((rt1.c2)AND(rt1.c2)))OR('')))&(((vt0.c0) BETWEEN (t0.c1) AND (x''))))) ORDER BY ((((rt1.c0)>(t0.c1))) IS TRUE)  NULLS FIRST;
SELECT * FROM rt1, t0, vt0 WHERE (NULLIF(DISTINCT ((t0.c1) ISNULL), t0.c2)) ORDER BY ((TOTAL_CHANGES()) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((t0.c1) ISNULL), t0.c2)) IS TRUE)  as count FROM rt1, t0, vt0 ORDER BY ((TOTAL_CHANGES()) ISNULL));
SELECT * FROM rt1, t0, vt0 WHERE (NULLIF(DISTINCT ((t0.c1) ISNULL), t0.c2)) ORDER BY ((TOTAL_CHANGES()) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((t0.c1) ISNULL), t0.c2)) IS TRUE)  as count FROM rt1, t0, vt0 ORDER BY ((TOTAL_CHANGES()) ISNULL));
SELECT * FROM rt1, t0, vt0 WHERE (NULLIF(DISTINCT ((t0.c1) ISNULL), t0.c2)) ORDER BY ((TOTAL_CHANGES()) ISNULL);
SELECT ALL * FROM rt1, t0 WHERE ((((rt1.c2) NOTNULL) IN (HEX(t0.c0), ((x'98a1') BETWEEN (rt1.c1) AND (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2) NOTNULL) IN (HEX(t0.c0), ((x'98a1') BETWEEN (rt1.c1) AND (t0.c2))))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE ((((rt1.c2) NOTNULL) IN (HEX(t0.c0), ((x'98a1') BETWEEN (rt1.c1) AND (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2) NOTNULL) IN (HEX(t0.c0), ((x'98a1') BETWEEN (rt1.c1) AND (t0.c2))))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE ((((rt1.c2) NOTNULL) IN (HEX(t0.c0), ((x'98a1') BETWEEN (rt1.c1) AND (t0.c2)))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)) IN ((rt1.c0 IN (rt1.c0))))) ORDER BY LIKELIHOOD(IFNULL(DISTINCT rt1.c2, rt1.c0), 0.34196222183959046) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)) IN ((rt1.c0 IN (rt1.c0))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY LIKELIHOOD(IFNULL(DISTINCT rt1.c2, rt1.c0), 0.34196222183959046) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)) IN ((rt1.c0 IN (rt1.c0))))) ORDER BY LIKELIHOOD(IFNULL(DISTINCT rt1.c2, rt1.c0), 0.34196222183959046) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)) IN ((rt1.c0 IN (rt1.c0))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY LIKELIHOOD(IFNULL(DISTINCT rt1.c2, rt1.c0), 0.34196222183959046) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)) IN ((rt1.c0 IN (rt1.c0))))) ORDER BY LIKELIHOOD(IFNULL(DISTINCT rt1.c2, rt1.c0), 0.34196222183959046) DESC  NULLS FIRST;
SELECT ALL * FROM t0, rt1 NOT INDEXED WHERE (NULL) ORDER BY ((CASE t0.c0  WHEN rt1.c2 THEN -3.05151047E8 WHEN t0.c1 THEN rt1.c1 WHEN rt1.c1 THEN t0.c0 END) BETWEEN (NULL COLLATE RTRIM) AND (CASE WHEN rt1.c0 THEN x'' WHEN rt1.c0 THEN t0.c0 WHEN x'' THEN t0.c0 ELSE t0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, rt1 ORDER BY ((CASE t0.c0  WHEN rt1.c2 THEN -3.05151047E8 WHEN t0.c1 THEN rt1.c1 WHEN rt1.c1 THEN t0.c0 END) BETWEEN (NULL COLLATE RTRIM) AND (CASE WHEN rt1.c0 THEN x'' WHEN rt1.c0 THEN t0.c0 WHEN x'' THEN t0.c0 ELSE t0.c1 END)) ASC);
SELECT ALL * FROM t0, rt1 NOT INDEXED WHERE (NULL) ORDER BY ((CASE t0.c0  WHEN rt1.c2 THEN -3.05151047E8 WHEN t0.c1 THEN rt1.c1 WHEN rt1.c1 THEN t0.c0 END) BETWEEN (NULL COLLATE RTRIM) AND (CASE WHEN rt1.c0 THEN x'' WHEN rt1.c0 THEN t0.c0 WHEN x'' THEN t0.c0 ELSE t0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, rt1 ORDER BY ((CASE t0.c0  WHEN rt1.c2 THEN -3.05151047E8 WHEN t0.c1 THEN rt1.c1 WHEN rt1.c1 THEN t0.c0 END) BETWEEN (NULL COLLATE RTRIM) AND (CASE WHEN rt1.c0 THEN x'' WHEN rt1.c0 THEN t0.c0 WHEN x'' THEN t0.c0 ELSE t0.c1 END)) ASC);
SELECT ALL * FROM t0, rt1 NOT INDEXED WHERE (NULL) ORDER BY ((CASE t0.c0  WHEN rt1.c2 THEN -3.05151047E8 WHEN t0.c1 THEN rt1.c1 WHEN rt1.c1 THEN t0.c0 END) BETWEEN (NULL COLLATE RTRIM) AND (CASE WHEN rt1.c0 THEN x'' WHEN rt1.c0 THEN t0.c0 WHEN x'' THEN t0.c0 ELSE t0.c1 END)) ASC;
SELECT ALL * FROM t0, rt1, vt0 WHERE (((t0.c1) IS TRUE)) ORDER BY (NOT (((rt1.c1)<(rt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1) IS TRUE)) IS TRUE)  as count FROM t0, rt1, vt0 ORDER BY (NOT (((rt1.c1)<(rt1.c1)))) DESC);
SELECT ALL * FROM t0, rt1, vt0 WHERE (((t0.c1) IS TRUE)) ORDER BY (NOT (((rt1.c1)<(rt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1) IS TRUE)) IS TRUE)  as count FROM t0, rt1, vt0 ORDER BY (NOT (((rt1.c1)<(rt1.c1)))) DESC);
SELECT ALL * FROM t0, rt1, vt0 WHERE (((t0.c1) IS TRUE)) ORDER BY (NOT (((rt1.c1)<(rt1.c1)))) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (TRIM(DISTINCT NULL, ((t0.c1) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT NULL, ((t0.c1) ISNULL))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (TRIM(DISTINCT NULL, ((t0.c1) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT NULL, ((t0.c1) ISNULL))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (TRIM(DISTINCT NULL, ((t0.c1) ISNULL)));
SELECT ALL * FROM vt0, t0 CROSS JOIN rt1 ON CAST(NULL AS BLOB) WHERE (((json_extract(t0.c0, rt1.c0, rt1.c1, rt1.c0)) NOT BETWEEN (CASE rt1.c2  WHEN t0.c1 THEN t0.c2 END) AND (CAST(vt0.c0 AS REAL)))) ORDER BY 0.6977398389210671 DESC, ((0.43528476833506435) BETWEEN (rt1.c2 COLLATE NOCASE) AND (CAST(t0.c1 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((json_extract(t0.c0, rt1.c0, rt1.c1, rt1.c0)) NOT BETWEEN (CASE rt1.c2  WHEN t0.c1 THEN t0.c2 END) AND (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, t0 CROSS JOIN rt1 ON CAST(NULL AS BLOB) ORDER BY 0.6977398389210671 DESC, ((0.43528476833506435) BETWEEN (rt1.c2 COLLATE NOCASE) AND (CAST(t0.c1 AS REAL)))  NULLS LAST);
SELECT ALL * FROM vt0, t0 CROSS JOIN rt1 ON CAST(NULL AS BLOB) WHERE (((json_extract(t0.c0, rt1.c0, rt1.c1, rt1.c0)) NOT BETWEEN (CASE rt1.c2  WHEN t0.c1 THEN t0.c2 END) AND (CAST(vt0.c0 AS REAL)))) ORDER BY 0.6977398389210671 DESC, ((0.43528476833506435) BETWEEN (rt1.c2 COLLATE NOCASE) AND (CAST(t0.c1 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((json_extract(t0.c0, rt1.c0, rt1.c1, rt1.c0)) NOT BETWEEN (CASE rt1.c2  WHEN t0.c1 THEN t0.c2 END) AND (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, t0 CROSS JOIN rt1 ON CAST(NULL AS BLOB) ORDER BY 0.6977398389210671 DESC, ((0.43528476833506435) BETWEEN (rt1.c2 COLLATE NOCASE) AND (CAST(t0.c1 AS REAL)))  NULLS LAST);
SELECT ALL * FROM vt0, t0 CROSS JOIN rt1 ON CAST(NULL AS BLOB) WHERE (((json_extract(t0.c0, rt1.c0, rt1.c1, rt1.c0)) NOT BETWEEN (CASE rt1.c2  WHEN t0.c1 THEN t0.c2 END) AND (CAST(vt0.c0 AS REAL)))) ORDER BY 0.6977398389210671 DESC, ((0.43528476833506435) BETWEEN (rt1.c2 COLLATE NOCASE) AND (CAST(t0.c1 AS REAL)))  NULLS LAST;
