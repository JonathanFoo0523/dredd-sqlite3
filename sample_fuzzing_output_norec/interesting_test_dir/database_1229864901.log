-- Time: 2024/06/08 21:39:29
-- Database: database1
-- Database version: 3.40.0
-- seed value: 1229864901
PRAGMA cache_size = 50000; -- 6ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED, c1 UNINDEXED, c2 UNINDEXED); -- 2ms;
END TRANSACTION; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 2ms;
UPDATE OR IGNORE vt1 SET c0='(', c2=NULL; -- 0ms;
UPDATE OR IGNORE rt0 SET c0='-574251426'; -- 1ms;
CREATE TEMP TABLE IF NOT EXISTS t0 (c0 REAL ); -- 0ms;
UPDATE OR ABORT vt1 SET (c1, c2, c0)=('-1353879273', 'YO2*&t', x''); -- 0ms;
INSERT OR REPLACE INTO vt1(c1, c2) VALUES ('o9', 'YO2*&t'); -- 1ms;
UPDATE OR ABORT rt0 SET c0=x'', c1=x'', c0='-1125128409'; -- 1ms;
UPDATE OR IGNORE t0 SET (c0)=(0.9587179527095346) WHERE STRFTIME(CAST(t0.c0 AS INTEGER), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND('-844473333')), ((t0.c0) NOTNULL), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))); -- 1ms;
UPDATE vt1 SET c0=NULL WHERE -1.125128409E9; -- 7ms;
ROLLBACK TRANSACTION; -- 1ms;
UPDATE OR FAIL t0 SET (c0)=(x''); -- 0ms;
PRAGMA ignore_check_constraints = true; -- 0ms;
UPDATE OR IGNORE vt1 SET c2=x'', c0=x'', c1=-1334297438; -- 0ms;
PRAGMA temp.secure_delete = true; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK vt1 SET (c0, c0, c2)=(0xffffffffbdb3c924, 0.9267389975067988, x'') WHERE ((NULL COLLATE BINARY) BETWEEN (CASE vt1.c2  WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c2 THEN NULL ELSE vt1.c1 END) AND (((vt1.c2)||(vt1.c0)))); -- 1ms;
UPDATE OR IGNORE vt1 SET c2='-1125128409', c1='-1125128409', c0=NULL WHERE vt1.c1; -- 2ms;
ANALYZE temp; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.busy_timeout = 10000; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR ABORT t0 SET c0=-8.44473333E8; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 6); -- 1ms;
INSERT INTO vt1(vt1) VALUES('automerge=6'); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 1ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 4ms;
UPDATE t0 SET (c0)=(NULL) WHERE x'49dd'; -- 0ms;
DELETE FROM rt0 WHERE (((~ (rt0.c1))) BETWEEN ((rt0.c1 IN (rt0.c0))) AND ((((('39')OR(rt0.c1)))AND(rt0.c1)))); -- 2ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1414252648); -- 0ms;
UPDATE vt1 SET c0='' WHERE ((((((((UPPER(DISTINCT vt1.c2))OR(vt1.c2)))AND((vt1.c0 IN (vt1.c1)))))AND((vt1.c2 IN ()))))OR(((vt1.c1)>(vt1.c1)))); -- 0ms;
UPDATE rt0 SET (c2)=(x''); -- 1ms;
ANALYZE temp; -- 0ms;
DROP TABLE IF EXISTS t0; -- 0ms;
INSERT OR FAIL INTO rt0(c1, c0) VALUES (x'4463', 'M7왽aFf-ER'); -- 1ms;
UPDATE OR IGNORE vt1 SET c0=x'' WHERE TRIM(x'', CAST(vt1.c1 AS TEXT)); -- 1ms;
PRAGMA wal_checkpoint(RESTART); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '7925'); -- 3ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (NULL); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(NULL); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(x'd3b0'); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '12785'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(NULL) WHERE (- (COALESCE(DISTINCT rt0.c2, rt0.c2))); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '14763'); -- 4ms;
UPDATE vt1 SET c0=NULL WHERE ((vt1.c0 COLLATE RTRIM)||(')]c^RVp3J')); -- 0ms;
PRAGMA main.optimize; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX RTRIM; -- 0ms;
UPDATE OR IGNORE vt1 SET c2=x'', c0='-844473333'; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=0.09206521189712946, c1=0.8602914048646484 WHERE (NOT (((rt0.c0) NOTNULL))); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 854280731); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt1 VALUES ('YO2*&q', -1187846517, '0.9587179527095346'); -- 0ms;
UPDATE OR IGNORE vt1 SET c1=0.3848514770359093; -- 0ms;
INSERT OR FAIL INTO rt0(c1, c0) VALUES (NULL, 0.673451180744771); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (0.6114202740394148, 0.46375747920422794, '0.8602914048646484'), (-5.74251426E8, '왽k%^&)襻8', NULL), (-1.112291036E9, NULL, '1347208829'); -- 0ms;
UPDATE OR IGNORE rt0 SET c2=0.23217779983090103 WHERE CASE (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((')')))  WHEN ((rt0.c2)*(rt0.c1)) THEN x'' WHEN (((rt0.c2))<=((rt0.c1))) THEN CAST(rt0.c1 AS BLOB) WHEN rt0.c0 THEN (((rt0.c1, 0.8558728665977895, NULL)) NOT BETWEEN ((rt0.c2, rt0.c1, x'')) AND ((rt0.c1, rt0.c1, 0xffffffffc866e9aa))) ELSE ((((((((rt0.c2)AND(rt0.c2)))OR(x'')))OR(rt0.c0)))AND(rt0.c2)) END; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 809722165); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
UPDATE OR IGNORE vt1 SET (c2)=('>f伲') WHERE ((vt1.c2) BETWEEN ((((vt1.c1))<=((vt1.c1)))) AND (((((((((((((vt1.c1)OR(vt1.c1)))AND(vt1.c2)))OR(vt1.c1)))AND('	Mi왽r.0a')))OR(vt1.c2)))AND(vt1.c2)))); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 12); -- 5ms;
INSERT OR ABORT INTO vt1(c0, c2) VALUES (x'cb7f', x'3366'); -- 0ms;
UPDATE OR ROLLBACK vt1 SET c0=''; -- 2ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, +c3 INT , +c4 REAL ); -- 1ms;
ANALYZE; -- 1ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES ('161389692', '-664605025', 'rO'); -- 2ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT OR FAIL INTO rt0 VALUES (0.4005445462005458, '-844473333', 0.3380265477880261); -- 0ms;
INSERT OR FAIL INTO vt1(c1) VALUES (x'a20c'), (''), (x'0bb1'); -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c3, c0, c4) VALUES (0x6515e64d, '', '%d', 0.5051508855403449), (NULL, '220837008', x'', 0.14950506724117674), ('*!>', NULL, x'', 0.09125468951536453); -- 0ms;
UPDATE vt1 SET c1=x'', c1='260316940'; -- 1ms;
UPDATE OR IGNORE rt1 SET (c3)=(x'2246bb32') WHERE CASE WHEN rt1.c1 THEN ((((rt1.c1)OR(rt1.c0)))OR(rt1.c3)) ELSE CASE rt1.c4  WHEN rt1.c2 THEN rt1.c3 END END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=NULL WHERE CAST((NOT (rt0.c1)) AS INTEGER); -- 1ms;
ROLLBACK TRANSACTION; -- 1ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0) NOT NULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0) NOT NULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0) NOT NULL) COLLATE NOCASE);
SELECT ALL * FROM rt1, rt0 WHERE (((((json_array_length(rt1.c2, rt1.c2))AND(((rt1.c4)|(rt1.c2)))))AND(CAST(rt1.c3 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((json_array_length(rt1.c2, rt1.c2))AND(((rt1.c4)|(rt1.c2)))))AND(CAST(rt1.c3 AS REAL)))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (((((json_array_length(rt1.c2, rt1.c2))AND(((rt1.c4)|(rt1.c2)))))AND(CAST(rt1.c3 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((json_array_length(rt1.c2, rt1.c2))AND(((rt1.c4)|(rt1.c2)))))AND(CAST(rt1.c3 AS REAL)))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (rt1.c2) ORDER BY CASE WHEN vt1.c1 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c3 ELSE rt1.c1 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1, vt1 ORDER BY CASE WHEN vt1.c1 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c3 ELSE rt1.c1 END COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (rt1.c2) ORDER BY CASE WHEN vt1.c1 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c3 ELSE rt1.c1 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1, vt1 ORDER BY CASE WHEN vt1.c1 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c3 ELSE rt1.c1 END COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (rt1.c2) ORDER BY CASE WHEN vt1.c1 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c3 ELSE rt1.c1 END COLLATE NOCASE;
SELECT ALL COUNT(*) FROM rt1, vt1 RIGHT OUTER JOIN rt0 ON (- ((((rt0.c2, rt1.c4, rt1.c0))<>((rt1.c4, vt1.c1, rt0.c1))))) WHERE (((CASE rt0.c2  WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c0 END)!=(((rt0.c0)<(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c0 END)!=(((rt0.c0)<(rt1.c1))))) IS TRUE)  as count FROM rt1, vt1 RIGHT OUTER JOIN rt0 ON (- ((((rt0.c2, rt1.c4, rt1.c0))<>((rt1.c4, vt1.c1, rt0.c1))))));
SELECT ALL COUNT(*) FROM rt1, vt1 RIGHT OUTER JOIN rt0 ON (- ((((rt0.c2, rt1.c4, rt1.c0))<>((rt1.c4, vt1.c1, rt0.c1))))) WHERE (((CASE rt0.c2  WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c0 END)!=(((rt0.c0)<(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c0 END)!=(((rt0.c0)<(rt1.c1))))) IS TRUE)  as count FROM rt1, vt1 RIGHT OUTER JOIN rt0 ON (- ((((rt0.c2, rt1.c4, rt1.c0))<>((rt1.c4, vt1.c1, rt0.c1))))));
SELECT ALL COUNT(*) FROM rt1, vt1 RIGHT OUTER JOIN rt0 ON (- ((((rt0.c2, rt1.c4, rt1.c0))<>((rt1.c4, vt1.c1, rt0.c1))))) WHERE (((CASE rt0.c2  WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c0 END)!=(((rt0.c0)<(rt1.c1)))));
SELECT * FROM rt1 LEFT OUTER JOIN vt1 ON ((rt0.c1 COLLATE NOCASE) NOTNULL) CROSS JOIN rt0 ON ((((HEX(vt1.c2))OR(CASE vt1.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt1.c3 THEN vt1.c2 WHEN rt0.c2 THEN rt1.c2 END)))AND((rt1.c3 IN ()))) WHERE ((((((vt1.c2)IS NOT(rt1.c3)), (('') NOT BETWEEN (rt1.c2) AND (rt1.c4)), ((vt1.c0)|(vt1.c1))))=(((((vt1.c0))<((vt1.c1))), ((rt1.c4)|(vt1.c2)), x'0e03')))) ORDER BY CASE WHEN (- (rt1.c3)) THEN ((((rt1.c0)AND(rt0.c0)))AND(rt1.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c2)IS NOT(rt1.c3)), (('') NOT BETWEEN (rt1.c2) AND (rt1.c4)), ((vt1.c0)|(vt1.c1))))=(((((vt1.c0))<((vt1.c1))), ((rt1.c4)|(vt1.c2)), x'0e03')))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt1 ON ((rt0.c1 COLLATE NOCASE) NOTNULL) CROSS JOIN rt0 ON ((((HEX(vt1.c2))OR(CASE vt1.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt1.c3 THEN vt1.c2 WHEN rt0.c2 THEN rt1.c2 END)))AND((rt1.c3 IN ()))) ORDER BY CASE WHEN (- (rt1.c3)) THEN ((((rt1.c0)AND(rt0.c0)))AND(rt1.c0)) END ASC  NULLS LAST);
SELECT * FROM rt1 LEFT OUTER JOIN vt1 ON ((rt0.c1 COLLATE NOCASE) NOTNULL) CROSS JOIN rt0 ON ((((HEX(vt1.c2))OR(CASE vt1.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt1.c3 THEN vt1.c2 WHEN rt0.c2 THEN rt1.c2 END)))AND((rt1.c3 IN ()))) WHERE ((((((vt1.c2)IS NOT(rt1.c3)), (('') NOT BETWEEN (rt1.c2) AND (rt1.c4)), ((vt1.c0)|(vt1.c1))))=(((((vt1.c0))<((vt1.c1))), ((rt1.c4)|(vt1.c2)), x'0e03')))) ORDER BY CASE WHEN (- (rt1.c3)) THEN ((((rt1.c0)AND(rt0.c0)))AND(rt1.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c2)IS NOT(rt1.c3)), (('') NOT BETWEEN (rt1.c2) AND (rt1.c4)), ((vt1.c0)|(vt1.c1))))=(((((vt1.c0))<((vt1.c1))), ((rt1.c4)|(vt1.c2)), x'0e03')))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt1 ON ((rt0.c1 COLLATE NOCASE) NOTNULL) CROSS JOIN rt0 ON ((((HEX(vt1.c2))OR(CASE vt1.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt1.c3 THEN vt1.c2 WHEN rt0.c2 THEN rt1.c2 END)))AND((rt1.c3 IN ()))) ORDER BY CASE WHEN (- (rt1.c3)) THEN ((((rt1.c0)AND(rt0.c0)))AND(rt1.c0)) END ASC  NULLS LAST);
SELECT * FROM rt1 LEFT OUTER JOIN vt1 ON ((rt0.c1 COLLATE NOCASE) NOTNULL) CROSS JOIN rt0 ON ((((HEX(vt1.c2))OR(CASE vt1.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt1.c3 THEN vt1.c2 WHEN rt0.c2 THEN rt1.c2 END)))AND((rt1.c3 IN ()))) WHERE ((((((vt1.c2)IS NOT(rt1.c3)), (('') NOT BETWEEN (rt1.c2) AND (rt1.c4)), ((vt1.c0)|(vt1.c1))))=(((((vt1.c0))<((vt1.c1))), ((rt1.c4)|(vt1.c2)), x'0e03')))) ORDER BY CASE WHEN (- (rt1.c3)) THEN ((((rt1.c0)AND(rt0.c0)))AND(rt1.c0)) END ASC  NULLS LAST;
SELECT ALL * FROM rt0, rt1 WHERE (ROUND(MIN(rt1.c1, rt1.c0), CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 END)) ORDER BY ((((CAST(rt0.c2 AS BLOB))OR(CAST(rt0.c2 AS TEXT))))OR((- (rt1.c4))));
SELECT SUM(count) FROM (SELECT ALL ((ROUND(MIN(rt1.c1, rt1.c0), CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 END)) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((CAST(rt0.c2 AS BLOB))OR(CAST(rt0.c2 AS TEXT))))OR((- (rt1.c4)))));
SELECT ALL * FROM rt0, rt1 WHERE (ROUND(MIN(rt1.c1, rt1.c0), CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 END)) ORDER BY ((((CAST(rt0.c2 AS BLOB))OR(CAST(rt0.c2 AS TEXT))))OR((- (rt1.c4))));
SELECT SUM(count) FROM (SELECT ALL ((ROUND(MIN(rt1.c1, rt1.c0), CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 END)) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((CAST(rt0.c2 AS BLOB))OR(CAST(rt0.c2 AS TEXT))))OR((- (rt1.c4)))));
SELECT ALL * FROM rt0, rt1 WHERE (ROUND(MIN(rt1.c1, rt1.c0), CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 END)) ORDER BY ((((CAST(rt0.c2 AS BLOB))OR(CAST(rt0.c2 AS TEXT))))OR((- (rt1.c4))));
SELECT ALL * FROM rt0, vt1 CROSS JOIN rt1 ON '0.8602914048646484' WHERE (((((((((IFNULL(rt0.c0, rt0.c2))AND((0X4c007857 IN (x'')))))OR(rt1.c0)))AND(rt0.c0)))OR((((rt1.c1)) NOT BETWEEN ((vt1.c2)) AND ((rt1.c0)))))) ORDER BY (((rt1.c2)||(vt1.c2)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((IFNULL(rt0.c0, rt0.c2))AND((0x4c007857 IN (x'')))))OR(rt1.c0)))AND(rt0.c0)))OR((((rt1.c1)) NOT BETWEEN ((vt1.c2)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt0, vt1 CROSS JOIN rt1 ON '0.8602914048646484' ORDER BY (((rt1.c2)||(vt1.c2)) IN ()) ASC);
SELECT ALL * FROM rt0, vt1 CROSS JOIN rt1 ON '0.8602914048646484' WHERE (((((((((IFNULL(rt0.c0, rt0.c2))AND((0X4c007857 IN (x'')))))OR(rt1.c0)))AND(rt0.c0)))OR((((rt1.c1)) NOT BETWEEN ((vt1.c2)) AND ((rt1.c0)))))) ORDER BY (((rt1.c2)||(vt1.c2)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((IFNULL(rt0.c0, rt0.c2))AND((0x4c007857 IN (x'')))))OR(rt1.c0)))AND(rt0.c0)))OR((((rt1.c1)) NOT BETWEEN ((vt1.c2)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt0, vt1 CROSS JOIN rt1 ON '0.8602914048646484' ORDER BY (((rt1.c2)||(vt1.c2)) IN ()) ASC);
SELECT ALL * FROM rt0, vt1 CROSS JOIN rt1 ON '0.8602914048646484' WHERE (((((((((IFNULL(rt0.c0, rt0.c2))AND((0X4c007857 IN (x'')))))OR(rt1.c0)))AND(rt0.c0)))OR((((rt1.c1)) NOT BETWEEN ((vt1.c2)) AND ((rt1.c0)))))) ORDER BY (((rt1.c2)||(vt1.c2)) IN ()) ASC;
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON ((((rt0.c0)|(vt1.c2)))==(((rt0.c1)>=(rt0.c1)))) WHERE (CASE NULLIF(DISTINCT rt0.c2, vt1.c2)  WHEN (~ (vt1.c2)) THEN CASE WHEN vt1.c1 THEN rt0.c1 ELSE rt0.c0 END ELSE rt0.c2 END) ORDER BY (((CAST(vt1.c1 AS NUMERIC), ((((((((rt0.c0)OR(vt1.c2)))OR(rt0.c0)))OR(vt1.c2)))AND(rt0.c0)), ((rt0.c1) NOTNULL)))>=((CAST(rt0.c1 AS REAL), ((((vt1.c2)OR(rt0.c1)))AND(rt0.c2)), ((NULL) IS FALSE)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE NULLIF(DISTINCT rt0.c2, vt1.c2)  WHEN (~ (vt1.c2)) THEN CASE WHEN vt1.c1 THEN rt0.c1 ELSE rt0.c0 END ELSE rt0.c2 END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON ((((rt0.c0)|(vt1.c2)))=(((rt0.c1)>=(rt0.c1)))) ORDER BY (((CAST(vt1.c1 AS NUMERIC), ((((((((rt0.c0)OR(vt1.c2)))OR(rt0.c0)))OR(vt1.c2)))AND(rt0.c0)), ((rt0.c1) NOTNULL)))>=((CAST(rt0.c1 AS REAL), ((((vt1.c2)OR(rt0.c1)))AND(rt0.c2)), ((NULL) IS FALSE)))) ASC);
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON ((((rt0.c0)|(vt1.c2)))==(((rt0.c1)>=(rt0.c1)))) WHERE (CASE NULLIF(DISTINCT rt0.c2, vt1.c2)  WHEN (~ (vt1.c2)) THEN CASE WHEN vt1.c1 THEN rt0.c1 ELSE rt0.c0 END ELSE rt0.c2 END) ORDER BY (((CAST(vt1.c1 AS NUMERIC), ((((((((rt0.c0)OR(vt1.c2)))OR(rt0.c0)))OR(vt1.c2)))AND(rt0.c0)), ((rt0.c1) NOTNULL)))>=((CAST(rt0.c1 AS REAL), ((((vt1.c2)OR(rt0.c1)))AND(rt0.c2)), ((NULL) IS FALSE)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE NULLIF(DISTINCT rt0.c2, vt1.c2)  WHEN (~ (vt1.c2)) THEN CASE WHEN vt1.c1 THEN rt0.c1 ELSE rt0.c0 END ELSE rt0.c2 END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON ((((rt0.c0)|(vt1.c2)))=(((rt0.c1)>=(rt0.c1)))) ORDER BY (((CAST(vt1.c1 AS NUMERIC), ((((((((rt0.c0)OR(vt1.c2)))OR(rt0.c0)))OR(vt1.c2)))AND(rt0.c0)), ((rt0.c1) NOTNULL)))>=((CAST(rt0.c1 AS REAL), ((((vt1.c2)OR(rt0.c1)))AND(rt0.c2)), ((NULL) IS FALSE)))) ASC);
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON ((((rt0.c0)|(vt1.c2)))==(((rt0.c1)>=(rt0.c1)))) WHERE (CASE NULLIF(DISTINCT rt0.c2, vt1.c2)  WHEN (~ (vt1.c2)) THEN CASE WHEN vt1.c1 THEN rt0.c1 ELSE rt0.c0 END ELSE rt0.c2 END) ORDER BY (((CAST(vt1.c1 AS NUMERIC), ((((((((rt0.c0)OR(vt1.c2)))OR(rt0.c0)))OR(vt1.c2)))AND(rt0.c0)), ((rt0.c1) NOTNULL)))>=((CAST(rt0.c1 AS REAL), ((((vt1.c2)OR(rt0.c1)))AND(rt0.c2)), ((NULL) IS FALSE)))) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((((((('')AND((+ (vt1.c1)))))OR(vt1.c0)))AND((vt1.c2 IN ()))))OR(CAST(vt1.c0 AS NUMERIC))))AND(((0.673451180744771) BETWEEN (vt1.c1) AND (vt1.c2)))))AND(LIKE(vt1.c0, vt1.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((('')AND((+ (vt1.c1)))))OR(vt1.c0)))AND((vt1.c2 IN ()))))OR(CAST(vt1.c0 AS NUMERIC))))AND(((0.673451180744771) BETWEEN (vt1.c1) AND (vt1.c2)))))AND(LIKE(vt1.c0, vt1.c2)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((((((('')AND((+ (vt1.c1)))))OR(vt1.c0)))AND((vt1.c2 IN ()))))OR(CAST(vt1.c0 AS NUMERIC))))AND(((0.673451180744771) BETWEEN (vt1.c1) AND (vt1.c2)))))AND(LIKE(vt1.c0, vt1.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((('')AND((+ (vt1.c1)))))OR(vt1.c0)))AND((vt1.c2 IN ()))))OR(CAST(vt1.c0 AS NUMERIC))))AND(((0.673451180744771) BETWEEN (vt1.c1) AND (vt1.c2)))))AND(LIKE(vt1.c0, vt1.c2)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((((((('')AND((+ (vt1.c1)))))OR(vt1.c0)))AND((vt1.c2 IN ()))))OR(CAST(vt1.c0 AS NUMERIC))))AND(((0.673451180744771) BETWEEN (vt1.c1) AND (vt1.c2)))))AND(LIKE(vt1.c0, vt1.c2))));
SELECT * FROM rt0, rt1 WHERE ('Wg') ORDER BY (CASE rt1.c0  WHEN 0.5238665057682711 THEN rt1.c0 WHEN rt1.c3 THEN rt0.c2 WHEN rt1.c2 THEN rt0.c1 END IN ()), rt0.c0 DESC, ((((rt0.c0) NOT BETWEEN (rt1.c4) AND (rt0.c0)))GLOB(((((rt0.c2)OR(rt0.c1)))AND(rt1.c4)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('Wg') IS TRUE)  as count FROM rt0, rt1 ORDER BY (CASE rt1.c0  WHEN 0.5238665057682711 THEN rt1.c0 WHEN rt1.c3 THEN rt0.c2 WHEN rt1.c2 THEN rt0.c1 END IN ()), rt0.c0 DESC, ((((rt0.c0) NOT BETWEEN (rt1.c4) AND (rt0.c0)))GLOB(((((rt0.c2)OR(rt0.c1)))AND(rt1.c4)))) ASC  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE ('Wg') ORDER BY (CASE rt1.c0  WHEN 0.5238665057682711 THEN rt1.c0 WHEN rt1.c3 THEN rt0.c2 WHEN rt1.c2 THEN rt0.c1 END IN ()), rt0.c0 DESC, ((((rt0.c0) NOT BETWEEN (rt1.c4) AND (rt0.c0)))GLOB(((((rt0.c2)OR(rt0.c1)))AND(rt1.c4)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('Wg') IS TRUE)  as count FROM rt0, rt1 ORDER BY (CASE rt1.c0  WHEN 0.5238665057682711 THEN rt1.c0 WHEN rt1.c3 THEN rt0.c2 WHEN rt1.c2 THEN rt0.c1 END IN ()), rt0.c0 DESC, ((((rt0.c0) NOT BETWEEN (rt1.c4) AND (rt0.c0)))GLOB(((((rt0.c2)OR(rt0.c1)))AND(rt1.c4)))) ASC  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE ('Wg') ORDER BY (CASE rt1.c0  WHEN 0.5238665057682711 THEN rt1.c0 WHEN rt1.c3 THEN rt0.c2 WHEN rt1.c2 THEN rt0.c1 END IN ()), rt0.c0 DESC, ((((rt0.c0) NOT BETWEEN (rt1.c4) AND (rt0.c0)))GLOB(((((rt0.c2)OR(rt0.c1)))AND(rt1.c4)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0, rt1 WHERE ((((~ (rt1.c1)))*(rt0.c1 COLLATE RTRIM))) ORDER BY CASE WHEN ((rt1.c2) IS TRUE) THEN (((vt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))) ELSE ((((((((x'')OR(vt1.c0)))OR(vt1.c1)))OR(rt0.c2)))AND(vt1.c1)) END, ((((vt1.c2, rt0.c2, 0.5238665057682711))>=((rt0.c2, 0.4285615545134934, rt1.c0))) IN (CASE vt1.c1  WHEN rt1.c4 THEN rt1.c2 ELSE vt1.c2 END, CAST(rt1.c0 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (rt1.c1)))*(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY CASE WHEN ((rt1.c2) IS TRUE) THEN (((vt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))) ELSE ((((((((x'')OR(vt1.c0)))OR(vt1.c1)))OR(rt0.c2)))AND(vt1.c1)) END, ((((vt1.c2, rt0.c2, 0.5238665057682711))>=((rt0.c2, 0.4285615545134934, rt1.c0))) IN (CASE vt1.c1  WHEN rt1.c4 THEN rt1.c2 ELSE vt1.c2 END, CAST(rt1.c0 AS NUMERIC)))  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0, rt1 WHERE ((((~ (rt1.c1)))*(rt0.c1 COLLATE RTRIM))) ORDER BY CASE WHEN ((rt1.c2) IS TRUE) THEN (((vt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))) ELSE ((((((((x'')OR(vt1.c0)))OR(vt1.c1)))OR(rt0.c2)))AND(vt1.c1)) END, ((((vt1.c2, rt0.c2, 0.5238665057682711))>=((rt0.c2, 0.4285615545134934, rt1.c0))) IN (CASE vt1.c1  WHEN rt1.c4 THEN rt1.c2 ELSE vt1.c2 END, CAST(rt1.c0 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (rt1.c1)))*(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY CASE WHEN ((rt1.c2) IS TRUE) THEN (((vt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))) ELSE ((((((((x'')OR(vt1.c0)))OR(vt1.c1)))OR(rt0.c2)))AND(vt1.c1)) END, ((((vt1.c2, rt0.c2, 0.5238665057682711))>=((rt0.c2, 0.4285615545134934, rt1.c0))) IN (CASE vt1.c1  WHEN rt1.c4 THEN rt1.c2 ELSE vt1.c2 END, CAST(rt1.c0 AS NUMERIC)))  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0, rt1 WHERE ((((~ (rt1.c1)))*(rt0.c1 COLLATE RTRIM))) ORDER BY CASE WHEN ((rt1.c2) IS TRUE) THEN (((vt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))) ELSE ((((((((x'')OR(vt1.c0)))OR(vt1.c1)))OR(rt0.c2)))AND(vt1.c1)) END, ((((vt1.c2, rt0.c2, 0.5238665057682711))>=((rt0.c2, 0.4285615545134934, rt1.c0))) IN (CASE vt1.c1  WHEN rt1.c4 THEN rt1.c2 ELSE vt1.c2 END, CAST(rt1.c0 AS NUMERIC)))  NULLS LAST;
SELECT ALL * FROM rt0, vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ('');
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE ((((rt0.c2))>((rt1.c2))) COLLATE BINARY) ORDER BY (+ (TRIM(rt1.c3, rt1.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2))>((rt1.c2))) COLLATE BINARY) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1 ORDER BY (+ (TRIM(rt1.c3, rt1.c2)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE ((((rt0.c2))>((rt1.c2))) COLLATE BINARY) ORDER BY (+ (TRIM(rt1.c3, rt1.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2))>((rt1.c2))) COLLATE BINARY) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1 ORDER BY (+ (TRIM(rt1.c3, rt1.c2)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE ((((rt0.c2))>((rt1.c2))) COLLATE BINARY) ORDER BY (+ (TRIM(rt1.c3, rt1.c2)))  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((vt1.c0 IN ()) COLLATE RTRIM) ORDER BY CAST(((vt1.c0)<(vt1.c0)) AS REAL) DESC, ((((((vt1.c0)AND(vt1.c1)))OR(vt1.c2)))&((vt1.c2 IN ()))) ASC, (x'' IN (((vt1.c2)IS(vt1.c0))));
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0)<(vt1.c0)) AS REAL) DESC, ((((((vt1.c0)AND(vt1.c1)))OR(vt1.c2)))&((vt1.c2 IN ()))) ASC, (x'' IN (((vt1.c2)IS(vt1.c0)))));
SELECT ALL * FROM vt1 WHERE ((vt1.c0 IN ()) COLLATE RTRIM) ORDER BY CAST(((vt1.c0)<(vt1.c0)) AS REAL) DESC, ((((((vt1.c0)AND(vt1.c1)))OR(vt1.c2)))&((vt1.c2 IN ()))) ASC, (x'' IN (((vt1.c2)IS(vt1.c0))));
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0)<(vt1.c0)) AS REAL) DESC, ((((((vt1.c0)AND(vt1.c1)))OR(vt1.c2)))&((vt1.c2 IN ()))) ASC, (x'' IN (((vt1.c2)IS(vt1.c0)))));
SELECT ALL * FROM vt1 WHERE ((vt1.c0 IN ()) COLLATE RTRIM) ORDER BY CAST(((vt1.c0)<(vt1.c0)) AS REAL) DESC, ((((((vt1.c0)AND(vt1.c1)))OR(vt1.c2)))&((vt1.c2 IN ()))) ASC, (x'' IN (((vt1.c2)IS(vt1.c0))));
SELECT * FROM rt1 WHERE (CASE ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1))  WHEN ((rt1.c3)<=(rt1.c4)) THEN CASE WHEN rt1.c1 THEN rt1.c4 END ELSE ((220837008) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1))  WHEN ((rt1.c3)<=(rt1.c4)) THEN CASE WHEN rt1.c1 THEN rt1.c4 END ELSE ((220837008) IS FALSE) END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1))  WHEN ((rt1.c3)<=(rt1.c4)) THEN CASE WHEN rt1.c1 THEN rt1.c4 END ELSE ((220837008) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1))  WHEN ((rt1.c3)<=(rt1.c4)) THEN CASE WHEN rt1.c1 THEN rt1.c4 END ELSE ((220837008) IS FALSE) END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1))  WHEN ((rt1.c3)<=(rt1.c4)) THEN CASE WHEN rt1.c1 THEN rt1.c4 END ELSE ((220837008) IS FALSE) END);
SELECT * FROM vt1, rt0, rt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE rt1.c4 END)OR(((vt1.c0)>(rt1.c3)))))OR(CAST(vt1.c0 AS TEXT)))) ORDER BY ((((((NULL) IS FALSE))AND(NULLIF(rt1.c2, rt1.c4))))OR((rt0.c1 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE rt1.c4 END)OR(((vt1.c0)>(rt1.c3)))))OR(CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY ((((((NULL) IS FALSE))AND(NULLIF(rt1.c2, rt1.c4))))OR((rt0.c1 IN ())))  NULLS LAST);
SELECT * FROM vt1, rt0, rt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE rt1.c4 END)OR(((vt1.c0)>(rt1.c3)))))OR(CAST(vt1.c0 AS TEXT)))) ORDER BY ((((((NULL) IS FALSE))AND(NULLIF(rt1.c2, rt1.c4))))OR((rt0.c1 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE rt1.c4 END)OR(((vt1.c0)>(rt1.c3)))))OR(CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY ((((((NULL) IS FALSE))AND(NULLIF(rt1.c2, rt1.c4))))OR((rt0.c1 IN ())))  NULLS LAST);
SELECT * FROM vt1, rt0, rt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE rt1.c4 END)OR(((vt1.c0)>(rt1.c3)))))OR(CAST(vt1.c0 AS TEXT)))) ORDER BY ((((((NULL) IS FALSE))AND(NULLIF(rt1.c2, rt1.c4))))OR((rt0.c1 IN ())))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, rt1 INNER JOIN vt1 ON (((rt1.c1)) NOT BETWEEN ((rt1.c3)) AND (((((rt0.c0, vt1.c1, rt1.c0, rt0.c0, rt0.c2)) BETWEEN ((rt1.c3, vt1.c1, rt1.c2, rt1.c2, vt1.c2)) AND ((rt0.c0, '<W', rt0.c2, rt0.c0, vt1.c2)))))) WHERE (CASE WHEN x'' THEN ((rt1.c3) BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY COALESCE(rt1.c3 COLLATE RTRIM, ((((rt1.c2)AND(rt0.c1)))AND(rt1.c1))), ((((((rt0.c1)!=(rt0.c0)))AND(rt0.c0)))OR('161389692')) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'' THEN ((rt1.c3) BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM rt0, rt1 INNER JOIN vt1 ON (((rt1.c1)) NOT BETWEEN ((rt1.c3)) AND (((((rt0.c0, vt1.c1, rt1.c0, rt0.c0, rt0.c2)) BETWEEN ((rt1.c3, vt1.c1, rt1.c2, rt1.c2, vt1.c2)) AND ((rt0.c0, '<W', rt0.c2, rt0.c0, vt1.c2)))))) ORDER BY COALESCE(rt1.c3 COLLATE RTRIM, ((((rt1.c2)AND(rt0.c1)))AND(rt1.c1))), ((((((rt0.c1)!=(rt0.c0)))AND(rt0.c0)))OR('161389692')) ASC);
SELECT ALL COUNT(*) FROM rt0, rt1 INNER JOIN vt1 ON (((rt1.c1)) NOT BETWEEN ((rt1.c3)) AND (((((rt0.c0, vt1.c1, rt1.c0, rt0.c0, rt0.c2)) BETWEEN ((rt1.c3, vt1.c1, rt1.c2, rt1.c2, vt1.c2)) AND ((rt0.c0, '<W', rt0.c2, rt0.c0, vt1.c2)))))) WHERE (CASE WHEN x'' THEN ((rt1.c3) BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY COALESCE(rt1.c3 COLLATE RTRIM, ((((rt1.c2)AND(rt0.c1)))AND(rt1.c1))), ((((((rt0.c1)!=(rt0.c0)))AND(rt0.c0)))OR('161389692')) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'' THEN ((rt1.c3) BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM rt0, rt1 INNER JOIN vt1 ON (((rt1.c1)) NOT BETWEEN ((rt1.c3)) AND (((((rt0.c0, vt1.c1, rt1.c0, rt0.c0, rt0.c2)) BETWEEN ((rt1.c3, vt1.c1, rt1.c2, rt1.c2, vt1.c2)) AND ((rt0.c0, '<W', rt0.c2, rt0.c0, vt1.c2)))))) ORDER BY COALESCE(rt1.c3 COLLATE RTRIM, ((((rt1.c2)AND(rt0.c1)))AND(rt1.c1))), ((((((rt0.c1)!=(rt0.c0)))AND(rt0.c0)))OR('161389692')) ASC);
SELECT ALL COUNT(*) FROM rt0, rt1 INNER JOIN vt1 ON (((rt1.c1)) NOT BETWEEN ((rt1.c3)) AND (((((rt0.c0, vt1.c1, rt1.c0, rt0.c0, rt0.c2)) BETWEEN ((rt1.c3, vt1.c1, rt1.c2, rt1.c2, vt1.c2)) AND ((rt0.c0, '<W', rt0.c2, rt0.c0, vt1.c2)))))) WHERE (CASE WHEN x'' THEN ((rt1.c3) BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY COALESCE(rt1.c3 COLLATE RTRIM, ((((rt1.c2)AND(rt0.c1)))AND(rt1.c1))), ((((((rt0.c1)!=(rt0.c0)))AND(rt0.c0)))OR('161389692')) ASC;
SELECT * FROM vt1, rt0 WHERE (CAST(vt1.c2 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c2 AS REAL)) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (CAST(vt1.c2 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c2 AS REAL)) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (CAST(vt1.c2 AS REAL));
SELECT * FROM rt1, rt0 WHERE (LOWER((- (x''))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER((- (x'')))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (LOWER((- (x''))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER((- (x'')))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (LOWER((- (x''))));
SELECT * FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (vt1.c2) AND (vt1.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT BETWEEN (vt1.c2) AND (vt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (vt1.c2) AND (vt1.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT BETWEEN (vt1.c2) AND (vt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (vt1.c2) AND (vt1.c1)) COLLATE BINARY);
SELECT * FROM rt1, vt1, rt0 WHERE ((CAST(rt1.c1 AS NUMERIC) IN (((((rt1.c1)OR(vt1.c1)))AND(vt1.c0))))) ORDER BY (DATETIME(rt0.c0, x'8cf2', rt0.c2) IN ((NOT (vt1.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c1 AS NUMERIC) IN (((((rt1.c1)OR(vt1.c1)))AND(vt1.c0))))) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY (DATETIME(rt0.c0, x'8cf2', rt0.c2) IN ((NOT (vt1.c1)))) ASC  NULLS FIRST);
SELECT * FROM rt1, vt1, rt0 WHERE ((CAST(rt1.c1 AS NUMERIC) IN (((((rt1.c1)OR(vt1.c1)))AND(vt1.c0))))) ORDER BY (DATETIME(rt0.c0, x'8cf2', rt0.c2) IN ((NOT (vt1.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c1 AS NUMERIC) IN (((((rt1.c1)OR(vt1.c1)))AND(vt1.c0))))) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY (DATETIME(rt0.c0, x'8cf2', rt0.c2) IN ((NOT (vt1.c1)))) ASC  NULLS FIRST);
SELECT * FROM rt1, vt1, rt0 WHERE ((CAST(rt1.c1 AS NUMERIC) IN (((((rt1.c1)OR(vt1.c1)))AND(vt1.c0))))) ORDER BY (DATETIME(rt0.c0, x'8cf2', rt0.c2) IN ((NOT (vt1.c1)))) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (x'') ORDER BY NULL DESC  NULLS LAST, (((+ (rt0.c2))) NOTNULL), (((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 ORDER BY NULL DESC  NULLS LAST, (((+ (rt0.c2))) NOTNULL), (((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)) IN ())  NULLS LAST);
SELECT * FROM rt0 WHERE (x'') ORDER BY NULL DESC  NULLS LAST, (((+ (rt0.c2))) NOTNULL), (((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 ORDER BY NULL DESC  NULLS LAST, (((+ (rt0.c2))) NOTNULL), (((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)) IN ())  NULLS LAST);
SELECT * FROM rt0 WHERE (x'') ORDER BY NULL DESC  NULLS LAST, (((+ (rt0.c2))) NOTNULL), (((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)) IN ())  NULLS LAST;
SELECT * FROM rt0, rt1 WHERE ((((rt1.c0 IN (rt1.c1)))LIKE((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN (rt1.c1)))LIKE((rt1.c1 IN ())))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((((rt1.c0 IN (rt1.c1)))LIKE((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN (rt1.c1)))LIKE((rt1.c1 IN ())))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((((rt1.c0 IN (rt1.c1)))LIKE((rt1.c1 IN ()))));
SELECT * FROM vt1 WHERE (CASE ((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c1))  WHEN vt1.c0 COLLATE NOCASE THEN ((vt1.c1)+(vt1.c1)) WHEN (vt1.c0 IN (vt1.c0, vt1.c2)) THEN CAST(vt1.c0 AS INTEGER) WHEN vt1.c2 THEN (NOT (vt1.c0)) ELSE ((vt1.c2)-(vt1.c0)) END) ORDER BY vt1.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c1))  WHEN vt1.c0 COLLATE NOCASE THEN ((vt1.c1)+(vt1.c1)) WHEN (vt1.c0 IN (vt1.c0, vt1.c2)) THEN CAST(vt1.c0 AS INTEGER) WHEN vt1.c2 THEN (NOT (vt1.c0)) ELSE ((vt1.c2)-(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY vt1.c2 ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (CASE ((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c1))  WHEN vt1.c0 COLLATE NOCASE THEN ((vt1.c1)+(vt1.c1)) WHEN (vt1.c0 IN (vt1.c0, vt1.c2)) THEN CAST(vt1.c0 AS INTEGER) WHEN vt1.c2 THEN (NOT (vt1.c0)) ELSE ((vt1.c2)-(vt1.c0)) END) ORDER BY vt1.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c1))  WHEN vt1.c0 COLLATE NOCASE THEN ((vt1.c1)+(vt1.c1)) WHEN (vt1.c0 IN (vt1.c0, vt1.c2)) THEN CAST(vt1.c0 AS INTEGER) WHEN vt1.c2 THEN (NOT (vt1.c0)) ELSE ((vt1.c2)-(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY vt1.c2 ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (CASE ((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c1))  WHEN vt1.c0 COLLATE NOCASE THEN ((vt1.c1)+(vt1.c1)) WHEN (vt1.c0 IN (vt1.c0, vt1.c2)) THEN CAST(vt1.c0 AS INTEGER) WHEN vt1.c2 THEN (NOT (vt1.c0)) ELSE ((vt1.c2)-(vt1.c0)) END) ORDER BY vt1.c2 ASC  NULLS FIRST;
SELECT * FROM rt0, vt1, rt1 WHERE (CASE ((((((((((((((((rt1.c4)OR(rt1.c4)))AND(rt0.c0)))OR(rt1.c3)))AND(rt1.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(vt1.c0)))AND(rt0.c1))  WHEN CASE rt0.c0  WHEN rt0.c2 THEN '-1353879273' WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c0 THEN rt1.c4 WHEN 0.22711869578236854 THEN vt1.c0 ELSE vt1.c0 END THEN ((((vt1.c1)AND(vt1.c2)))OR('Wg')) ELSE TRIM(vt1.c0, vt1.c2) END) ORDER BY CASE WHEN (NOT (rt0.c0)) THEN ((rt1.c1) NOT NULL) END  NULLS LAST, ((((((((((rt1.c2)AND(rt1.c2)))OR(rt0.c2)))OR(vt1.c2)))AND(rt1.c4))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((CASE ((((((((((((((((rt1.c4)OR(rt1.c4)))AND(rt0.c0)))OR(rt1.c3)))AND(rt1.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(vt1.c0)))AND(rt0.c1))  WHEN CASE rt0.c0  WHEN rt0.c2 THEN '-1353879273' WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c0 THEN rt1.c4 WHEN 0.22711869578236854 THEN vt1.c0 ELSE vt1.c0 END THEN ((((vt1.c1)AND(vt1.c2)))OR('Wg')) ELSE TRIM(vt1.c0, vt1.c2) END) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY CASE WHEN (NOT (rt0.c0)) THEN ((rt1.c1) NOT NULL) END  NULLS LAST, ((((((((((rt1.c2)AND(rt1.c2)))OR(rt0.c2)))OR(vt1.c2)))AND(rt1.c4))) NOT NULL));
SELECT * FROM rt0, vt1, rt1 WHERE (CASE ((((((((((((((((rt1.c4)OR(rt1.c4)))AND(rt0.c0)))OR(rt1.c3)))AND(rt1.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(vt1.c0)))AND(rt0.c1))  WHEN CASE rt0.c0  WHEN rt0.c2 THEN '-1353879273' WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c0 THEN rt1.c4 WHEN 0.22711869578236854 THEN vt1.c0 ELSE vt1.c0 END THEN ((((vt1.c1)AND(vt1.c2)))OR('Wg')) ELSE TRIM(vt1.c0, vt1.c2) END) ORDER BY CASE WHEN (NOT (rt0.c0)) THEN ((rt1.c1) NOT NULL) END  NULLS LAST, ((((((((((rt1.c2)AND(rt1.c2)))OR(rt0.c2)))OR(vt1.c2)))AND(rt1.c4))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((CASE ((((((((((((((((rt1.c4)OR(rt1.c4)))AND(rt0.c0)))OR(rt1.c3)))AND(rt1.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(vt1.c0)))AND(rt0.c1))  WHEN CASE rt0.c0  WHEN rt0.c2 THEN '-1353879273' WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c0 THEN rt1.c4 WHEN 0.22711869578236854 THEN vt1.c0 ELSE vt1.c0 END THEN ((((vt1.c1)AND(vt1.c2)))OR('Wg')) ELSE TRIM(vt1.c0, vt1.c2) END) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY CASE WHEN (NOT (rt0.c0)) THEN ((rt1.c1) NOT NULL) END  NULLS LAST, ((((((((((rt1.c2)AND(rt1.c2)))OR(rt0.c2)))OR(vt1.c2)))AND(rt1.c4))) NOT NULL));
SELECT * FROM rt0, vt1, rt1 WHERE (CASE ((((((((((((((((rt1.c4)OR(rt1.c4)))AND(rt0.c0)))OR(rt1.c3)))AND(rt1.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(vt1.c0)))AND(rt0.c1))  WHEN CASE rt0.c0  WHEN rt0.c2 THEN '-1353879273' WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c0 THEN rt1.c4 WHEN 0.22711869578236854 THEN vt1.c0 ELSE vt1.c0 END THEN ((((vt1.c1)AND(vt1.c2)))OR('Wg')) ELSE TRIM(vt1.c0, vt1.c2) END) ORDER BY CASE WHEN (NOT (rt0.c0)) THEN ((rt1.c1) NOT NULL) END  NULLS LAST, ((((((((((rt1.c2)AND(rt1.c2)))OR(rt0.c2)))OR(vt1.c2)))AND(rt1.c4))) NOT NULL);
SELECT COUNT(*) FROM rt0, rt1, vt1 WHERE ((((rt1.c3)) NOT BETWEEN (((((rt1.c1, rt0.c2, rt1.c2))<=((x'6170', rt1.c0, rt1.c1))))) AND ((vt1.c1)))) ORDER BY ((CASE ''  WHEN rt1.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN vt1.c1 ELSE rt1.c2 END) BETWEEN ((vt1.c0 IN ())) AND (((rt1.c2)<<(vt1.c1)))) ASC  NULLS FIRST, (((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c0))) COLLATE RTRIM  NULLS LAST, ((rt1.c1)=('MwIo?X'));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3)) NOT BETWEEN (((((rt1.c1, rt0.c2, rt1.c2))<=((x'6170', rt1.c0, rt1.c1))))) AND ((vt1.c1)))) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY ((CASE ''  WHEN rt1.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN vt1.c1 ELSE rt1.c2 END) BETWEEN ((vt1.c0 IN ())) AND (((rt1.c2)<<(vt1.c1)))) ASC  NULLS FIRST, (((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c0))) COLLATE RTRIM  NULLS LAST, ((rt1.c1)==('MwIo?X')));
SELECT COUNT(*) FROM rt0, rt1, vt1 WHERE ((((rt1.c3)) NOT BETWEEN (((((rt1.c1, rt0.c2, rt1.c2))<=((x'6170', rt1.c0, rt1.c1))))) AND ((vt1.c1)))) ORDER BY ((CASE ''  WHEN rt1.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN vt1.c1 ELSE rt1.c2 END) BETWEEN ((vt1.c0 IN ())) AND (((rt1.c2)<<(vt1.c1)))) ASC  NULLS FIRST, (((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c0))) COLLATE RTRIM  NULLS LAST, ((rt1.c1)=('MwIo?X'));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3)) NOT BETWEEN (((((rt1.c1, rt0.c2, rt1.c2))<=((x'6170', rt1.c0, rt1.c1))))) AND ((vt1.c1)))) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY ((CASE ''  WHEN rt1.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN vt1.c1 ELSE rt1.c2 END) BETWEEN ((vt1.c0 IN ())) AND (((rt1.c2)<<(vt1.c1)))) ASC  NULLS FIRST, (((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c0))) COLLATE RTRIM  NULLS LAST, ((rt1.c1)==('MwIo?X')));
SELECT COUNT(*) FROM rt0, rt1, vt1 WHERE ((((rt1.c3)) NOT BETWEEN (((((rt1.c1, rt0.c2, rt1.c2))<=((x'6170', rt1.c0, rt1.c1))))) AND ((vt1.c1)))) ORDER BY ((CASE ''  WHEN rt1.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN vt1.c1 ELSE rt1.c2 END) BETWEEN ((vt1.c0 IN ())) AND (((rt1.c2)<<(vt1.c1)))) ASC  NULLS FIRST, (((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c0))) COLLATE RTRIM  NULLS LAST, ((rt1.c1)=('MwIo?X'));
SELECT ALL * FROM rt1 WHERE ((((((((('345744147')AND((+ (rt1.c4)))))OR((- (rt1.c3)))))AND(CAST(rt1.c3 AS BLOB))))OR(rt1.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((((((('345744147')AND((+ (rt1.c4)))))OR((- (rt1.c3)))))AND(CAST(rt1.c3 AS BLOB))))OR(rt1.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((((('345744147')AND((+ (rt1.c4)))))OR((- (rt1.c3)))))AND(CAST(rt1.c3 AS BLOB))))OR(rt1.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((((((('345744147')AND((+ (rt1.c4)))))OR((- (rt1.c3)))))AND(CAST(rt1.c3 AS BLOB))))OR(rt1.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((((('345744147')AND((+ (rt1.c4)))))OR((- (rt1.c3)))))AND(CAST(rt1.c3 AS BLOB))))OR(rt1.c3 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt1 WHERE (((CAST(rt1.c4 AS BLOB))%(NULLIF(DISTINCT rt1.c3, rt1.c3))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c4 AS BLOB))%(NULLIF(DISTINCT rt1.c3, rt1.c3)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((CAST(rt1.c4 AS BLOB))%(NULLIF(DISTINCT rt1.c3, rt1.c3))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c4 AS BLOB))%(NULLIF(DISTINCT rt1.c3, rt1.c3)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((CAST(rt1.c4 AS BLOB))%(NULLIF(DISTINCT rt1.c3, rt1.c3))));
SELECT * FROM rt1 FULL OUTER JOIN vt1 ON ((((((rt0.c0)OR(vt1.c1)))OR(rt1.c0)))-(((rt1.c2)OR(vt1.c0)))) RIGHT OUTER JOIN rt0 ON json_quote((vt1.c2 IN ())) WHERE (((rt0.c0)GLOB(((rt1.c2) IS FALSE)))) ORDER BY (((((rt1.c1))<>((rt0.c2))))*((((rt1.c1, rt0.c1, rt1.c3)) BETWEEN ((rt1.c4, rt0.c2, rt1.c1)) AND ((vt1.c1, rt1.c2, vt1.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)GLOB(((rt1.c2) IS FALSE)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt1 ON ((((((rt0.c0)OR(vt1.c1)))OR(rt1.c0)))-(((rt1.c2)OR(vt1.c0)))) RIGHT OUTER JOIN rt0 ON json_quote((vt1.c2 IN ())) ORDER BY (((((rt1.c1))!=((rt0.c2))))*((((rt1.c1, rt0.c1, rt1.c3)) BETWEEN ((rt1.c4, rt0.c2, rt1.c1)) AND ((vt1.c1, rt1.c2, vt1.c0))))) ASC  NULLS FIRST);
SELECT * FROM rt1 FULL OUTER JOIN vt1 ON ((((((rt0.c0)OR(vt1.c1)))OR(rt1.c0)))-(((rt1.c2)OR(vt1.c0)))) RIGHT OUTER JOIN rt0 ON json_quote((vt1.c2 IN ())) WHERE (((rt0.c0)GLOB(((rt1.c2) IS FALSE)))) ORDER BY (((((rt1.c1))<>((rt0.c2))))*((((rt1.c1, rt0.c1, rt1.c3)) BETWEEN ((rt1.c4, rt0.c2, rt1.c1)) AND ((vt1.c1, rt1.c2, vt1.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)GLOB(((rt1.c2) IS FALSE)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt1 ON ((((((rt0.c0)OR(vt1.c1)))OR(rt1.c0)))-(((rt1.c2)OR(vt1.c0)))) RIGHT OUTER JOIN rt0 ON json_quote((vt1.c2 IN ())) ORDER BY (((((rt1.c1))!=((rt0.c2))))*((((rt1.c1, rt0.c1, rt1.c3)) BETWEEN ((rt1.c4, rt0.c2, rt1.c1)) AND ((vt1.c1, rt1.c2, vt1.c0))))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((((((((rt1.c3)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c0)) COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c3)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c0)) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((((((rt1.c3)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c0)) COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c3)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c0)) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((((((rt1.c3)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c0)) COLLATE RTRIM COLLATE NOCASE);
SELECT * FROM rt1, vt1 RIGHT OUTER JOIN rt0 ON (((- (rt0.c1)))||(((rt1.c2)<=(vt1.c1)))) WHERE (((rt1.c2 COLLATE RTRIM)>>(CASE WHEN rt1.c4 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY rt1.c3;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE RTRIM)>>(CASE WHEN rt1.c4 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM rt1, vt1 RIGHT OUTER JOIN rt0 ON (((- (rt0.c1)))||(((rt1.c2)<=(vt1.c1)))) ORDER BY rt1.c3);
SELECT * FROM rt1, vt1 RIGHT OUTER JOIN rt0 ON (((- (rt0.c1)))||(((rt1.c2)<=(vt1.c1)))) WHERE (((rt1.c2 COLLATE RTRIM)>>(CASE WHEN rt1.c4 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY rt1.c3;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE RTRIM)>>(CASE WHEN rt1.c4 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM rt1, vt1 RIGHT OUTER JOIN rt0 ON (((- (rt0.c1)))||(((rt1.c2)<=(vt1.c1)))) ORDER BY rt1.c3);
SELECT * FROM rt1, vt1 RIGHT OUTER JOIN rt0 ON (((- (rt0.c1)))||(((rt1.c2)<=(vt1.c1)))) WHERE (((rt1.c2 COLLATE RTRIM)>>(CASE WHEN rt1.c4 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY rt1.c3;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON (('1471913106') BETWEEN (vt1.c1) AND (vt1.c1)) COLLATE NOCASE CROSS JOIN rt1 ON TYPEOF(DISTINCT ((rt0.c0)<(vt1.c2))) WHERE (CAST((vt1.c2 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt1.c2 IN ()) AS BLOB)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON (('1471913106') BETWEEN (vt1.c1) AND (vt1.c1)) COLLATE NOCASE CROSS JOIN rt1 ON TYPEOF(DISTINCT ((rt0.c0)<(vt1.c2))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON (('1471913106') BETWEEN (vt1.c1) AND (vt1.c1)) COLLATE NOCASE CROSS JOIN rt1 ON TYPEOF(DISTINCT ((rt0.c0)<(vt1.c2))) WHERE (CAST((vt1.c2 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt1.c2 IN ()) AS BLOB)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON (('1471913106') BETWEEN (vt1.c1) AND (vt1.c1)) COLLATE NOCASE CROSS JOIN rt1 ON TYPEOF(DISTINCT ((rt0.c0)<(vt1.c2))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON (('1471913106') BETWEEN (vt1.c1) AND (vt1.c1)) COLLATE NOCASE CROSS JOIN rt1 ON TYPEOF(DISTINCT ((rt0.c0)<(vt1.c2))) WHERE (CAST((vt1.c2 IN ()) AS BLOB));
SELECT ALL COUNT(*) FROM rt0, vt1 NATURAL JOIN rt1 WHERE (((((((vt1.c0)/(rt0.c0)))OR(0.09125468951536453)))AND(((rt0.c1) NOT BETWEEN (rt1.c4) AND (rt1.c4))))) ORDER BY '' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)/(rt0.c0)))OR(0.09125468951536453)))AND(((rt0.c1) NOT BETWEEN (rt1.c4) AND (rt1.c4))))) IS TRUE)  as count FROM rt0, vt1 NATURAL JOIN rt1 ORDER BY '' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 NATURAL JOIN rt1 WHERE (((((((vt1.c0)/(rt0.c0)))OR(0.09125468951536453)))AND(((rt0.c1) NOT BETWEEN (rt1.c4) AND (rt1.c4))))) ORDER BY '' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)/(rt0.c0)))OR(0.09125468951536453)))AND(((rt0.c1) NOT BETWEEN (rt1.c4) AND (rt1.c4))))) IS TRUE)  as count FROM rt0, vt1 NATURAL JOIN rt1 ORDER BY '' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 NATURAL JOIN rt1 WHERE (((((((vt1.c0)/(rt0.c0)))OR(0.09125468951536453)))AND(((rt0.c1) NOT BETWEEN (rt1.c4) AND (rt1.c4))))) ORDER BY '' DESC  NULLS LAST;
SELECT * FROM rt0, rt1 WHERE (((1.275099223E9)==(((rt1.c3) NOT NULL)))) ORDER BY (((rt1.c3, rt1.c3, rt1.c2)) BETWEEN ((NULL, ((((rt1.c4)OR(rt1.c0)))AND(rt1.c3)), rt1.c4)) AND ((((rt1.c3) NOT BETWEEN (rt0.c1) AND (rt1.c1)), rt1.c4, ((rt1.c4) IS FALSE)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((1.275099223E9)==(((rt1.c3) NOT NULL)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt1.c3, rt1.c3, rt1.c2)) BETWEEN ((NULL, ((((rt1.c4)OR(rt1.c0)))AND(rt1.c3)), rt1.c4)) AND ((((rt1.c3) NOT BETWEEN (rt0.c1) AND (rt1.c1)), rt1.c4, ((rt1.c4) IS FALSE)))) DESC  NULLS LAST);
SELECT * FROM rt0, rt1 WHERE (((1.275099223E9)==(((rt1.c3) NOT NULL)))) ORDER BY (((rt1.c3, rt1.c3, rt1.c2)) BETWEEN ((NULL, ((((rt1.c4)OR(rt1.c0)))AND(rt1.c3)), rt1.c4)) AND ((((rt1.c3) NOT BETWEEN (rt0.c1) AND (rt1.c1)), rt1.c4, ((rt1.c4) IS FALSE)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((1.275099223E9)==(((rt1.c3) NOT NULL)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt1.c3, rt1.c3, rt1.c2)) BETWEEN ((NULL, ((((rt1.c4)OR(rt1.c0)))AND(rt1.c3)), rt1.c4)) AND ((((rt1.c3) NOT BETWEEN (rt0.c1) AND (rt1.c1)), rt1.c4, ((rt1.c4) IS FALSE)))) DESC  NULLS LAST);
SELECT * FROM rt0, rt1 WHERE (((1.275099223E9)==(((rt1.c3) NOT NULL)))) ORDER BY (((rt1.c3, rt1.c3, rt1.c2)) BETWEEN ((NULL, ((((rt1.c4)OR(rt1.c0)))AND(rt1.c3)), rt1.c4)) AND ((((rt1.c3) NOT BETWEEN (rt0.c1) AND (rt1.c1)), rt1.c4, ((rt1.c4) IS FALSE)))) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((LAST_INSERT_ROWID()) ISNULL)) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN '910790513' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)>=(-574251426))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LAST_INSERT_ROWID()) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN '910790513' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)>=(-574251426))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((LAST_INSERT_ROWID()) ISNULL)) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN '910790513' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)>=(-574251426))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LAST_INSERT_ROWID()) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN '910790513' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)>=(-574251426))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((LAST_INSERT_ROWID()) ISNULL)) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN '910790513' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)>=(-574251426))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (vt1.c0) ORDER BY ((vt1.c2)<>(rt0.c2)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY ((vt1.c2)!=(rt0.c2)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (vt1.c0) ORDER BY ((vt1.c2)<>(rt0.c2)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY ((vt1.c2)!=(rt0.c2)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (vt1.c0) ORDER BY ((vt1.c2)<>(rt0.c2)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt1 ON (((rt1.c2, rt0.c1, rt1.c4)) NOT BETWEEN ((((rt0.c2) IS TRUE), ((rt0.c1)%(rt1.c4)), vt1.c0 COLLATE NOCASE)) AND ((CAST(vt1.c2 AS NUMERIC), (rt0.c2 IN ()), ((rt1.c3)AND('os?%|K(*N'))))) CROSS JOIN rt0 ON (((rt1.c1)!=(rt0.c2)) IN ()) WHERE ((((((vt1.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, rt1.c4, rt1.c4)) AND ((vt1.c1, vt1.c1, rt0.c2)))) NOT BETWEEN (x'') AND (CASE rt1.c1  WHEN vt1.c0 THEN rt1.c4 END)));
SELECT SUM(count) FROM (SELECT (((((((vt1.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, rt1.c4, rt1.c4)) AND ((vt1.c1, vt1.c1, rt0.c2)))) NOT BETWEEN (x'') AND (CASE rt1.c1  WHEN vt1.c0 THEN rt1.c4 END))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt1 ON (((rt1.c2, rt0.c1, rt1.c4)) NOT BETWEEN ((((rt0.c2) IS TRUE), ((rt0.c1)%(rt1.c4)), vt1.c0 COLLATE NOCASE)) AND ((CAST(vt1.c2 AS NUMERIC), (rt0.c2 IN ()), ((rt1.c3)AND('os?%|K(*N'))))) CROSS JOIN rt0 ON (((rt1.c1)!=(rt0.c2)) IN ()));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt1 ON (((rt1.c2, rt0.c1, rt1.c4)) NOT BETWEEN ((((rt0.c2) IS TRUE), ((rt0.c1)%(rt1.c4)), vt1.c0 COLLATE NOCASE)) AND ((CAST(vt1.c2 AS NUMERIC), (rt0.c2 IN ()), ((rt1.c3)AND('os?%|K(*N'))))) CROSS JOIN rt0 ON (((rt1.c1)!=(rt0.c2)) IN ()) WHERE ((((((vt1.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, rt1.c4, rt1.c4)) AND ((vt1.c1, vt1.c1, rt0.c2)))) NOT BETWEEN (x'') AND (CASE rt1.c1  WHEN vt1.c0 THEN rt1.c4 END)));
SELECT SUM(count) FROM (SELECT (((((((vt1.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, rt1.c4, rt1.c4)) AND ((vt1.c1, vt1.c1, rt0.c2)))) NOT BETWEEN (x'') AND (CASE rt1.c1  WHEN vt1.c0 THEN rt1.c4 END))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt1 ON (((rt1.c2, rt0.c1, rt1.c4)) NOT BETWEEN ((((rt0.c2) IS TRUE), ((rt0.c1)%(rt1.c4)), vt1.c0 COLLATE NOCASE)) AND ((CAST(vt1.c2 AS NUMERIC), (rt0.c2 IN ()), ((rt1.c3)AND('os?%|K(*N'))))) CROSS JOIN rt0 ON (((rt1.c1)!=(rt0.c2)) IN ()));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt1 ON (((rt1.c2, rt0.c1, rt1.c4)) NOT BETWEEN ((((rt0.c2) IS TRUE), ((rt0.c1)%(rt1.c4)), vt1.c0 COLLATE NOCASE)) AND ((CAST(vt1.c2 AS NUMERIC), (rt0.c2 IN ()), ((rt1.c3)AND('os?%|K(*N'))))) CROSS JOIN rt0 ON (((rt1.c1)!=(rt0.c2)) IN ()) WHERE ((((((vt1.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, rt1.c4, rt1.c4)) AND ((vt1.c1, vt1.c1, rt0.c2)))) NOT BETWEEN (x'') AND (CASE rt1.c1  WHEN vt1.c0 THEN rt1.c4 END)));
SELECT * FROM rt1, rt0, vt1 WHERE (json_quote(((rt1.c0) NOT BETWEEN (rt0.c0) AND (vt1.c1)))) ORDER BY (((((vt1.c0, vt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c3, vt1.c1, x'2342')) AND ((vt1.c2, vt1.c0, vt1.c1))))IS NOT(rt1.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_quote(((rt1.c0) NOT BETWEEN (rt0.c0) AND (vt1.c1)))) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY (((((vt1.c0, vt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c3, vt1.c1, x'2342')) AND ((vt1.c2, vt1.c0, vt1.c1))))IS NOT(rt1.c0 COLLATE BINARY)) DESC  NULLS LAST);
SELECT * FROM rt1, rt0, vt1 WHERE (json_quote(((rt1.c0) NOT BETWEEN (rt0.c0) AND (vt1.c1)))) ORDER BY (((((vt1.c0, vt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c3, vt1.c1, x'2342')) AND ((vt1.c2, vt1.c0, vt1.c1))))IS NOT(rt1.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_quote(((rt1.c0) NOT BETWEEN (rt0.c0) AND (vt1.c1)))) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY (((((vt1.c0, vt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c3, vt1.c1, x'2342')) AND ((vt1.c2, vt1.c0, vt1.c1))))IS NOT(rt1.c0 COLLATE BINARY)) DESC  NULLS LAST);
SELECT * FROM rt1, rt0, vt1 WHERE (json_quote(((rt1.c0) NOT BETWEEN (rt0.c0) AND (vt1.c1)))) ORDER BY (((((vt1.c0, vt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c3, vt1.c1, x'2342')) AND ((vt1.c2, vt1.c0, vt1.c1))))IS NOT(rt1.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT ALL * FROM rt1, vt1, rt0 WHERE (((((((rt1.c1)<>(vt1.c1)))OR(((((rt1.c2)AND(vt1.c0)))AND(NULL)))))OR(((rt1.c3) BETWEEN (rt0.c1) AND (0.7301651480795254)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1)!=(vt1.c1)))OR(((((rt1.c2)AND(vt1.c0)))AND(NULL)))))OR(((rt1.c3) BETWEEN (rt0.c1) AND (0.7301651480795254))))) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL * FROM rt1, vt1, rt0 WHERE (((((((rt1.c1)<>(vt1.c1)))OR(((((rt1.c2)AND(vt1.c0)))AND(NULL)))))OR(((rt1.c3) BETWEEN (rt0.c1) AND (0.7301651480795254)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1)!=(vt1.c1)))OR(((((rt1.c2)AND(vt1.c0)))AND(NULL)))))OR(((rt1.c3) BETWEEN (rt0.c1) AND (0.7301651480795254))))) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL * FROM rt1, vt1, rt0 WHERE (((((((rt1.c1)<>(vt1.c1)))OR(((((rt1.c2)AND(vt1.c0)))AND(NULL)))))OR(((rt1.c3) BETWEEN (rt0.c1) AND (0.7301651480795254)))));
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE ((((rt1.c0 IN ()))+(((rt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 IN ()))+(((rt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE ((((rt1.c0 IN ()))+(((rt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 IN ()))+(((rt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE ((((rt1.c0 IN ()))+(((rt1.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON rt0.c1 COLLATE NOCASE RIGHT OUTER JOIN rt1 ON (((rt1.c2, rt1.c2, x'010d2340')) BETWEEN ((x'', COALESCE(rt0.c1, vt1.c0), rt1.c0 COLLATE RTRIM)) AND ((SQLITE_COMPILEOPTION_USED(rt1.c2), (rt1.c0 IN (NULL)), 0.673451180744771))) WHERE (((((rt1.c4) ISNULL)) NOT BETWEEN (((vt1.c1) NOT BETWEEN (rt0.c0) AND (vt1.c2))) AND ((((vt1.c0, rt0.c2, rt1.c4)) BETWEEN ((rt0.c1, rt1.c1, rt1.c1)) AND ((rt1.c4, rt1.c3, NULL)))))) ORDER BY NULL ASC, CASE CASE rt1.c0  WHEN NULL THEN vt1.c0 END  WHEN CASE WHEN rt0.c0 THEN rt1.c0 END THEN ((rt0.c2) NOT BETWEEN (rt1.c4) AND (rt1.c0)) ELSE (((rt0.c1, rt1.c0, rt0.c0))==((rt1.c1, rt1.c1, vt1.c1))) END, (+ (CASE WHEN rt0.c0 THEN rt1.c0 ELSE NULL END));
SELECT SUM(count) FROM (SELECT ((((((rt1.c4) ISNULL)) NOT BETWEEN (((vt1.c1) NOT BETWEEN (rt0.c0) AND (vt1.c2))) AND ((((vt1.c0, rt0.c2, rt1.c4)) BETWEEN ((rt0.c1, rt1.c1, rt1.c1)) AND ((rt1.c4, rt1.c3, NULL)))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON rt0.c1 COLLATE NOCASE RIGHT OUTER JOIN rt1 ON (((rt1.c2, rt1.c2, x'010d2340')) BETWEEN ((x'', COALESCE(rt0.c1, vt1.c0), rt1.c0 COLLATE RTRIM)) AND ((SQLITE_COMPILEOPTION_USED(rt1.c2), (rt1.c0 IN (NULL)), 0.673451180744771))) ORDER BY NULL ASC, CASE CASE rt1.c0  WHEN NULL THEN vt1.c0 END  WHEN CASE WHEN rt0.c0 THEN rt1.c0 END THEN ((rt0.c2) NOT BETWEEN (rt1.c4) AND (rt1.c0)) ELSE (((rt0.c1, rt1.c0, rt0.c0))==((rt1.c1, rt1.c1, vt1.c1))) END, (+ (CASE WHEN rt0.c0 THEN rt1.c0 ELSE NULL END)));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON rt0.c1 COLLATE NOCASE RIGHT OUTER JOIN rt1 ON (((rt1.c2, rt1.c2, x'010d2340')) BETWEEN ((x'', COALESCE(rt0.c1, vt1.c0), rt1.c0 COLLATE RTRIM)) AND ((SQLITE_COMPILEOPTION_USED(rt1.c2), (rt1.c0 IN (NULL)), 0.673451180744771))) WHERE (((((rt1.c4) ISNULL)) NOT BETWEEN (((vt1.c1) NOT BETWEEN (rt0.c0) AND (vt1.c2))) AND ((((vt1.c0, rt0.c2, rt1.c4)) BETWEEN ((rt0.c1, rt1.c1, rt1.c1)) AND ((rt1.c4, rt1.c3, NULL)))))) ORDER BY NULL ASC, CASE CASE rt1.c0  WHEN NULL THEN vt1.c0 END  WHEN CASE WHEN rt0.c0 THEN rt1.c0 END THEN ((rt0.c2) NOT BETWEEN (rt1.c4) AND (rt1.c0)) ELSE (((rt0.c1, rt1.c0, rt0.c0))==((rt1.c1, rt1.c1, vt1.c1))) END, (+ (CASE WHEN rt0.c0 THEN rt1.c0 ELSE NULL END));
SELECT SUM(count) FROM (SELECT ((((((rt1.c4) ISNULL)) NOT BETWEEN (((vt1.c1) NOT BETWEEN (rt0.c0) AND (vt1.c2))) AND ((((vt1.c0, rt0.c2, rt1.c4)) BETWEEN ((rt0.c1, rt1.c1, rt1.c1)) AND ((rt1.c4, rt1.c3, NULL)))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON rt0.c1 COLLATE NOCASE RIGHT OUTER JOIN rt1 ON (((rt1.c2, rt1.c2, x'010d2340')) BETWEEN ((x'', COALESCE(rt0.c1, vt1.c0), rt1.c0 COLLATE RTRIM)) AND ((SQLITE_COMPILEOPTION_USED(rt1.c2), (rt1.c0 IN (NULL)), 0.673451180744771))) ORDER BY NULL ASC, CASE CASE rt1.c0  WHEN NULL THEN vt1.c0 END  WHEN CASE WHEN rt0.c0 THEN rt1.c0 END THEN ((rt0.c2) NOT BETWEEN (rt1.c4) AND (rt1.c0)) ELSE (((rt0.c1, rt1.c0, rt0.c0))==((rt1.c1, rt1.c1, vt1.c1))) END, (+ (CASE WHEN rt0.c0 THEN rt1.c0 ELSE NULL END)));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON rt0.c1 COLLATE NOCASE RIGHT OUTER JOIN rt1 ON (((rt1.c2, rt1.c2, x'010d2340')) BETWEEN ((x'', COALESCE(rt0.c1, vt1.c0), rt1.c0 COLLATE RTRIM)) AND ((SQLITE_COMPILEOPTION_USED(rt1.c2), (rt1.c0 IN (NULL)), 0.673451180744771))) WHERE (((((rt1.c4) ISNULL)) NOT BETWEEN (((vt1.c1) NOT BETWEEN (rt0.c0) AND (vt1.c2))) AND ((((vt1.c0, rt0.c2, rt1.c4)) BETWEEN ((rt0.c1, rt1.c1, rt1.c1)) AND ((rt1.c4, rt1.c3, NULL)))))) ORDER BY NULL ASC, CASE CASE rt1.c0  WHEN NULL THEN vt1.c0 END  WHEN CASE WHEN rt0.c0 THEN rt1.c0 END THEN ((rt0.c2) NOT BETWEEN (rt1.c4) AND (rt1.c0)) ELSE (((rt0.c1, rt1.c0, rt0.c0))==((rt1.c1, rt1.c1, vt1.c1))) END, (+ (CASE WHEN rt0.c0 THEN rt1.c0 ELSE NULL END));
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE ((0.11474743557855327 IN (rt0.c0)));
SELECT SUM(count) FROM (SELECT (((0.11474743557855327 IN (rt0.c0))) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE ((0.11474743557855327 IN (rt0.c0)));
SELECT SUM(count) FROM (SELECT (((0.11474743557855327 IN (rt0.c0))) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE ((0.11474743557855327 IN (rt0.c0)));
SELECT * FROM rt1 WHERE (CAST((rt1.c2 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt1.c2 IN ()) AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST((rt1.c2 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt1.c2 IN ()) AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST((rt1.c2 IN ()) AS TEXT));
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c2 AS TEXT)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c2 AS TEXT)) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c2 AS TEXT)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c2 AS TEXT)) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c2 AS TEXT)) ISNULL));
SELECT ALL * FROM vt1, rt0, rt1 WHERE (vt1.c2);
SELECT SUM(count) FROM (SELECT ((vt1.c2) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT ALL * FROM vt1, rt0, rt1 WHERE (vt1.c2);
SELECT SUM(count) FROM (SELECT ((vt1.c2) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT ALL * FROM vt1, rt0, rt1 WHERE (vt1.c2);
SELECT ALL * FROM rt0, vt1 FULL OUTER JOIN rt1 ON (CASE WHEN '-1097516259' THEN '-844473333' ELSE vt1.c0 END IN ()) WHERE (((((rt1.c3))=((rt1.c0))) IN (((((((((vt1.c2)AND(vt1.c0)))AND(NULL)))AND(rt1.c4)))OR(rt0.c0)), (- (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3))=((rt1.c0))) IN (((((((((vt1.c2)AND(vt1.c0)))AND(NULL)))AND(rt1.c4)))OR(rt0.c0)), (- (rt1.c0))))) IS TRUE)  as count FROM rt0, vt1 FULL OUTER JOIN rt1 ON (CASE WHEN '-1097516259' THEN '-844473333' ELSE vt1.c0 END IN ()));
SELECT ALL * FROM rt0, vt1 FULL OUTER JOIN rt1 ON (CASE WHEN '-1097516259' THEN '-844473333' ELSE vt1.c0 END IN ()) WHERE (((((rt1.c3))=((rt1.c0))) IN (((((((((vt1.c2)AND(vt1.c0)))AND(NULL)))AND(rt1.c4)))OR(rt0.c0)), (- (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3))=((rt1.c0))) IN (((((((((vt1.c2)AND(vt1.c0)))AND(NULL)))AND(rt1.c4)))OR(rt0.c0)), (- (rt1.c0))))) IS TRUE)  as count FROM rt0, vt1 FULL OUTER JOIN rt1 ON (CASE WHEN '-1097516259' THEN '-844473333' ELSE vt1.c0 END IN ()));
SELECT ALL * FROM rt0, vt1 FULL OUTER JOIN rt1 ON (CASE WHEN '-1097516259' THEN '-844473333' ELSE vt1.c0 END IN ()) WHERE (((((rt1.c3))=((rt1.c0))) IN (((((((((vt1.c2)AND(vt1.c0)))AND(NULL)))AND(rt1.c4)))OR(rt0.c0)), (- (rt1.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0)%(((rt0.c2)-(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)%(((rt0.c2)-(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0)%(((rt0.c2)-(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)%(((rt0.c2)-(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0)%(((rt0.c2)-(rt0.c2)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)>(vt1.c0)))/(((vt1.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>(vt1.c0)))/(((vt1.c1) NOTNULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)>(vt1.c0)))/(((vt1.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>(vt1.c0)))/(((vt1.c1) NOTNULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)>(vt1.c0)))/(((vt1.c1) NOTNULL))));
SELECT * FROM rt1 WHERE (rt1.c3) ORDER BY rt1.c2;
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2);
SELECT * FROM rt1 WHERE (rt1.c3) ORDER BY rt1.c2;
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2);
SELECT * FROM rt1 WHERE (rt1.c3) ORDER BY rt1.c2;
SELECT COUNT(*) FROM rt1, rt0 WHERE (CASE rt1.c4  WHEN ((((rt1.c0)AND(rt0.c0)))OR('Ho')) THEN ((0X25d7d9a4) NOT BETWEEN (rt1.c4) AND (rt1.c2)) WHEN (('0.8558728665977895')<=(rt1.c3)) THEN ((rt1.c2)|(rt1.c2)) WHEN '-920453264' THEN (rt1.c0 IN ()) ELSE ((rt1.c3)<<(rt0.c1)) END) ORDER BY rt1.c3 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c4  WHEN ((((rt1.c0)AND(rt0.c0)))OR('Ho')) THEN ((0X25d7d9a4) NOT BETWEEN (rt1.c4) AND (rt1.c2)) WHEN (('0.8558728665977895')<=(rt1.c3)) THEN ((rt1.c2)|(rt1.c2)) WHEN '-920453264' THEN (rt1.c0 IN ()) ELSE ((rt1.c3)<<(rt0.c1)) END) IS TRUE)  as count FROM rt1, rt0 ORDER BY rt1.c3 ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CASE rt1.c4  WHEN ((((rt1.c0)AND(rt0.c0)))OR('Ho')) THEN ((0X25d7d9a4) NOT BETWEEN (rt1.c4) AND (rt1.c2)) WHEN (('0.8558728665977895')<=(rt1.c3)) THEN ((rt1.c2)|(rt1.c2)) WHEN '-920453264' THEN (rt1.c0 IN ()) ELSE ((rt1.c3)<<(rt0.c1)) END) ORDER BY rt1.c3 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c4  WHEN ((((rt1.c0)AND(rt0.c0)))OR('Ho')) THEN ((0X25d7d9a4) NOT BETWEEN (rt1.c4) AND (rt1.c2)) WHEN (('0.8558728665977895')<=(rt1.c3)) THEN ((rt1.c2)|(rt1.c2)) WHEN '-920453264' THEN (rt1.c0 IN ()) ELSE ((rt1.c3)<<(rt0.c1)) END) IS TRUE)  as count FROM rt1, rt0 ORDER BY rt1.c3 ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CASE rt1.c4  WHEN ((((rt1.c0)AND(rt0.c0)))OR('Ho')) THEN ((0X25d7d9a4) NOT BETWEEN (rt1.c4) AND (rt1.c2)) WHEN (('0.8558728665977895')<=(rt1.c3)) THEN ((rt1.c2)|(rt1.c2)) WHEN '-920453264' THEN (rt1.c0 IN ()) ELSE ((rt1.c3)<<(rt0.c1)) END) ORDER BY rt1.c3 ASC  NULLS FIRST;
SELECT * FROM rt1, vt1 NATURAL JOIN rt0 WHERE ((NOT (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN vt1.c1 ELSE rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN vt1.c1 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1, vt1 NATURAL JOIN rt0);
SELECT * FROM rt1, vt1 NATURAL JOIN rt0 WHERE ((NOT (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN vt1.c1 ELSE rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN vt1.c1 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1, vt1 NATURAL JOIN rt0);
SELECT * FROM rt1, vt1 NATURAL JOIN rt0 WHERE ((NOT (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN vt1.c1 ELSE rt1.c2 END)));
SELECT * FROM vt1, rt1 INNER JOIN rt0 ON CAST(CAST(rt1.c4 AS REAL) AS TEXT) WHERE (CAST(((rt1.c2) BETWEEN (vt1.c2) AND (rt1.c3)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2) BETWEEN (vt1.c2) AND (rt1.c3)) AS INTEGER)) IS TRUE)  as count FROM vt1, rt1 NOT INDEXED INNER JOIN rt0 ON CAST(CAST(rt1.c4 AS REAL) AS TEXT));
SELECT * FROM vt1, rt1 INNER JOIN rt0 ON CAST(CAST(rt1.c4 AS REAL) AS TEXT) WHERE (CAST(((rt1.c2) BETWEEN (vt1.c2) AND (rt1.c3)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2) BETWEEN (vt1.c2) AND (rt1.c3)) AS INTEGER)) IS TRUE)  as count FROM vt1, rt1 NOT INDEXED INNER JOIN rt0 ON CAST(CAST(rt1.c4 AS REAL) AS TEXT));
SELECT * FROM vt1, rt1 INNER JOIN rt0 ON CAST(CAST(rt1.c4 AS REAL) AS TEXT) WHERE (CAST(((rt1.c2) BETWEEN (vt1.c2) AND (rt1.c3)) AS INTEGER));
SELECT ALL * FROM rt1, vt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL * FROM rt1, vt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL * FROM rt1, vt1 WHERE (rt1.c1);
SELECT ALL * FROM vt1, rt0 WHERE (CASE vt1.c2  WHEN rt0.c0 THEN vt1.c1 END COLLATE NOCASE) ORDER BY CASE WHEN rt0.c2 THEN ((((((((vt1.c2)AND(rt0.c1)))AND(vt1.c2)))AND(vt1.c2)))OR(vt1.c2)) ELSE ((vt1.c0)<=(vt1.c1)) END  NULLS LAST, CASE rt0.c0  WHEN ((rt0.c0) IS FALSE) THEN NULLIF(vt1.c2, rt0.c1) ELSE (((rt0.c1, rt0.c0, vt1.c1))!=((vt1.c1, rt0.c0, vt1.c0))) END;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c2  WHEN rt0.c0 THEN vt1.c1 END COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE WHEN rt0.c2 THEN ((((((((vt1.c2)AND(rt0.c1)))AND(vt1.c2)))AND(vt1.c2)))OR(vt1.c2)) ELSE ((vt1.c0)<=(vt1.c1)) END  NULLS LAST, CASE rt0.c0  WHEN ((rt0.c0) IS FALSE) THEN NULLIF(vt1.c2, rt0.c1) ELSE (((rt0.c1, rt0.c0, vt1.c1))<>((vt1.c1, rt0.c0, vt1.c0))) END);
SELECT ALL * FROM vt1, rt0 WHERE (CASE vt1.c2  WHEN rt0.c0 THEN vt1.c1 END COLLATE NOCASE) ORDER BY CASE WHEN rt0.c2 THEN ((((((((vt1.c2)AND(rt0.c1)))AND(vt1.c2)))AND(vt1.c2)))OR(vt1.c2)) ELSE ((vt1.c0)<=(vt1.c1)) END  NULLS LAST, CASE rt0.c0  WHEN ((rt0.c0) IS FALSE) THEN NULLIF(vt1.c2, rt0.c1) ELSE (((rt0.c1, rt0.c0, vt1.c1))!=((vt1.c1, rt0.c0, vt1.c0))) END;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c2  WHEN rt0.c0 THEN vt1.c1 END COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE WHEN rt0.c2 THEN ((((((((vt1.c2)AND(rt0.c1)))AND(vt1.c2)))AND(vt1.c2)))OR(vt1.c2)) ELSE ((vt1.c0)<=(vt1.c1)) END  NULLS LAST, CASE rt0.c0  WHEN ((rt0.c0) IS FALSE) THEN NULLIF(vt1.c2, rt0.c1) ELSE (((rt0.c1, rt0.c0, vt1.c1))<>((vt1.c1, rt0.c0, vt1.c0))) END);
SELECT ALL * FROM vt1, rt0 WHERE (CASE vt1.c2  WHEN rt0.c0 THEN vt1.c1 END COLLATE NOCASE) ORDER BY CASE WHEN rt0.c2 THEN ((((((((vt1.c2)AND(rt0.c1)))AND(vt1.c2)))AND(vt1.c2)))OR(vt1.c2)) ELSE ((vt1.c0)<=(vt1.c1)) END  NULLS LAST, CASE rt0.c0  WHEN ((rt0.c0) IS FALSE) THEN NULLIF(vt1.c2, rt0.c1) ELSE (((rt0.c1, rt0.c0, vt1.c1))!=((vt1.c1, rt0.c0, vt1.c0))) END;
SELECT ALL * FROM vt1, rt1, rt0 WHERE (((((json_array_length(vt1.c1, rt0.c2))OR((((vt1.c0))>((vt1.c0))))))AND((NOT (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((json_array_length(vt1.c1, rt0.c2))OR((((vt1.c0))>((vt1.c0))))))AND((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1, rt1, rt0);
SELECT ALL * FROM vt1, rt1, rt0 WHERE (((((json_array_length(vt1.c1, rt0.c2))OR((((vt1.c0))>((vt1.c0))))))AND((NOT (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((json_array_length(vt1.c1, rt0.c2))OR((((vt1.c0))>((vt1.c0))))))AND((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1, rt1, rt0);
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT * FROM rt0 WHERE (((((((((rt0.c2)AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))AND((~ (rt0.c1)))))OR((~ (rt0.c1)))))AND(rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2)AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))AND((~ (rt0.c1)))))OR((~ (rt0.c1)))))AND(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((((rt0.c2)AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))AND((~ (rt0.c1)))))OR((~ (rt0.c1)))))AND(rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2)AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))AND((~ (rt0.c1)))))OR((~ (rt0.c1)))))AND(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((((rt0.c2)AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))AND((~ (rt0.c1)))))OR((~ (rt0.c1)))))AND(rt0.c2 COLLATE RTRIM)));
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY (- (CAST(vt1.c0 AS TEXT))), ((((vt1.c1)<>(vt1.c2)))IS NOT(((vt1.c0)IS(vt1.c2))));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (- (CAST(vt1.c0 AS TEXT))), ((((vt1.c1)<>(vt1.c2)))IS NOT(((vt1.c0)IS(vt1.c2)))));
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY (- (CAST(vt1.c0 AS TEXT))), ((((vt1.c1)<>(vt1.c2)))IS NOT(((vt1.c0)IS(vt1.c2))));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (- (CAST(vt1.c0 AS TEXT))), ((((vt1.c1)<>(vt1.c2)))IS NOT(((vt1.c0)IS(vt1.c2)))));
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY (- (CAST(vt1.c0 AS TEXT))), ((((vt1.c1)<>(vt1.c2)))IS NOT(((vt1.c0)IS(vt1.c2))));
SELECT ALL * FROM rt0, rt1, vt1 WHERE ((((~ (rt1.c2)))=(((((rt0.c2)AND(vt1.c0)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((~ (rt1.c2)))==(((((rt0.c2)AND(vt1.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT ALL * FROM rt0, rt1, vt1 WHERE ((((~ (rt1.c2)))=(((((rt0.c2)AND(vt1.c0)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((~ (rt1.c2)))==(((((rt0.c2)AND(vt1.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT ALL * FROM rt0, rt1, vt1 WHERE ((((~ (rt1.c2)))=(((((rt0.c2)AND(vt1.c0)))AND(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt1 ON ((CASE WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c3 ELSE rt1.c3 END) NOTNULL) WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt1 ON ((CASE WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c3 ELSE rt1.c3 END) NOTNULL));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt1 ON ((CASE WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c3 ELSE rt1.c3 END) NOTNULL) WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt1 ON ((CASE WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c3 ELSE rt1.c3 END) NOTNULL));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt1 ON ((CASE WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c3 ELSE rt1.c3 END) NOTNULL) WHERE (rt1.c0);
SELECT * FROM rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)AND((+ (rt0.c0)))))OR((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)AND((+ (rt0.c0)))))OR((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)AND((+ (rt0.c0)))))OR((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)AND((+ (rt0.c0)))))OR((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)AND((+ (rt0.c0)))))OR((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON (rt0.c2 COLLATE BINARY IN ()) WHERE ((NOT ((+ (rt0.c2))))) ORDER BY NULL ASC, ((((((((((((vt1.c1)OR(rt0.c0)))AND(rt0.c0)))AND(vt1.c0)))AND(rt0.c0)))OR(((0xffffffffaf4d7117)*(0.9267389975067988)))))OR(json_array(rt0.c2, rt0.c0, rt0.c2, vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((+ (rt0.c2))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON (rt0.c2 COLLATE BINARY IN ()) ORDER BY NULL ASC, ((((((((((((vt1.c1)OR(rt0.c0)))AND(rt0.c0)))AND(vt1.c0)))AND(rt0.c0)))OR(((0xffffffffaf4d7117)*(0.9267389975067988)))))OR(json_array(rt0.c2, rt0.c0, rt0.c2, vt1.c0))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON (rt0.c2 COLLATE BINARY IN ()) WHERE ((NOT ((+ (rt0.c2))))) ORDER BY NULL ASC, ((((((((((((vt1.c1)OR(rt0.c0)))AND(rt0.c0)))AND(vt1.c0)))AND(rt0.c0)))OR(((0xffffffffaf4d7117)*(0.9267389975067988)))))OR(json_array(rt0.c2, rt0.c0, rt0.c2, vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((+ (rt0.c2))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON (rt0.c2 COLLATE BINARY IN ()) ORDER BY NULL ASC, ((((((((((((vt1.c1)OR(rt0.c0)))AND(rt0.c0)))AND(vt1.c0)))AND(rt0.c0)))OR(((0xffffffffaf4d7117)*(0.9267389975067988)))))OR(json_array(rt0.c2, rt0.c0, rt0.c2, vt1.c0))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON (rt0.c2 COLLATE BINARY IN ()) WHERE ((NOT ((+ (rt0.c2))))) ORDER BY NULL ASC, ((((((((((((vt1.c1)OR(rt0.c0)))AND(rt0.c0)))AND(vt1.c0)))AND(rt0.c0)))OR(((0xffffffffaf4d7117)*(0.9267389975067988)))))OR(json_array(rt0.c2, rt0.c0, rt0.c2, vt1.c0)));
SELECT ALL * FROM rt0, vt1, rt1 WHERE (CASE WHEN rt1.c0 COLLATE NOCASE THEN ((vt1.c1)OR(vt1.c1)) WHEN ((rt1.c1) IS FALSE) THEN (((rt1.c2, rt1.c2, 0.7643553162630717)) NOT BETWEEN ((rt1.c1, vt1.c0, '345744147')) AND ((rt1.c1, vt1.c1, rt1.c4))) WHEN ((((((((vt1.c0)AND(rt0.c1)))OR(NULL)))AND(rt0.c1)))AND(vt1.c2)) THEN ((((rt1.c2)AND(rt1.c4)))OR(x'')) ELSE CASE rt0.c1  WHEN x'' THEN rt1.c3 END END) ORDER BY (('-1334297438')OR((rt1.c1 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c0 COLLATE NOCASE THEN ((vt1.c1)OR(vt1.c1)) WHEN ((rt1.c1) IS FALSE) THEN (((rt1.c2, rt1.c2, 0.7643553162630717)) NOT BETWEEN ((rt1.c1, vt1.c0, '345744147')) AND ((rt1.c1, vt1.c1, rt1.c4))) WHEN ((((((((vt1.c0)AND(rt0.c1)))OR(NULL)))AND(rt0.c1)))AND(vt1.c2)) THEN ((((rt1.c2)AND(rt1.c4)))OR(x'')) ELSE CASE rt0.c1  WHEN x'' THEN rt1.c3 END END) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY (('-1334297438')OR((rt1.c1 IN ()))) DESC);
SELECT ALL * FROM rt0, vt1, rt1 WHERE (CASE WHEN rt1.c0 COLLATE NOCASE THEN ((vt1.c1)OR(vt1.c1)) WHEN ((rt1.c1) IS FALSE) THEN (((rt1.c2, rt1.c2, 0.7643553162630717)) NOT BETWEEN ((rt1.c1, vt1.c0, '345744147')) AND ((rt1.c1, vt1.c1, rt1.c4))) WHEN ((((((((vt1.c0)AND(rt0.c1)))OR(NULL)))AND(rt0.c1)))AND(vt1.c2)) THEN ((((rt1.c2)AND(rt1.c4)))OR(x'')) ELSE CASE rt0.c1  WHEN x'' THEN rt1.c3 END END) ORDER BY (('-1334297438')OR((rt1.c1 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c0 COLLATE NOCASE THEN ((vt1.c1)OR(vt1.c1)) WHEN ((rt1.c1) IS FALSE) THEN (((rt1.c2, rt1.c2, 0.7643553162630717)) NOT BETWEEN ((rt1.c1, vt1.c0, '345744147')) AND ((rt1.c1, vt1.c1, rt1.c4))) WHEN ((((((((vt1.c0)AND(rt0.c1)))OR(NULL)))AND(rt0.c1)))AND(vt1.c2)) THEN ((((rt1.c2)AND(rt1.c4)))OR(x'')) ELSE CASE rt0.c1  WHEN x'' THEN rt1.c3 END END) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY (('-1334297438')OR((rt1.c1 IN ()))) DESC);
SELECT ALL * FROM rt0, vt1, rt1 WHERE (CASE WHEN rt1.c0 COLLATE NOCASE THEN ((vt1.c1)OR(vt1.c1)) WHEN ((rt1.c1) IS FALSE) THEN (((rt1.c2, rt1.c2, 0.7643553162630717)) NOT BETWEEN ((rt1.c1, vt1.c0, '345744147')) AND ((rt1.c1, vt1.c1, rt1.c4))) WHEN ((((((((vt1.c0)AND(rt0.c1)))OR(NULL)))AND(rt0.c1)))AND(vt1.c2)) THEN ((((rt1.c2)AND(rt1.c4)))OR(x'')) ELSE CASE rt0.c1  WHEN x'' THEN rt1.c3 END END) ORDER BY (('-1334297438')OR((rt1.c1 IN ()))) DESC;
SELECT COUNT(*) FROM rt1, vt1 WHERE (((((((((vt1.c1 COLLATE NOCASE)OR((((rt1.c2, rt1.c3, vt1.c2)) BETWEEN ((rt1.c4, vt1.c2, rt1.c4)) AND ((NULL, vt1.c1, vt1.c0))))))OR(CAST(vt1.c2 AS NUMERIC))))AND(CASE rt1.c4  WHEN vt1.c0 THEN vt1.c2 ELSE rt1.c4 END)))AND((- (rt1.c3))))) ORDER BY CAST(((rt1.c4)/(vt1.c1)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c1 COLLATE NOCASE)OR((((rt1.c2, rt1.c3, vt1.c2)) BETWEEN ((rt1.c4, vt1.c2, rt1.c4)) AND ((NULL, vt1.c1, vt1.c0))))))OR(CAST(vt1.c2 AS NUMERIC))))AND(CASE rt1.c4  WHEN vt1.c0 THEN vt1.c2 ELSE rt1.c4 END)))AND((- (rt1.c3))))) IS TRUE)  as count FROM rt1, vt1 ORDER BY CAST(((rt1.c4)/(vt1.c1)) AS NUMERIC));
SELECT COUNT(*) FROM rt1, vt1 WHERE (((((((((vt1.c1 COLLATE NOCASE)OR((((rt1.c2, rt1.c3, vt1.c2)) BETWEEN ((rt1.c4, vt1.c2, rt1.c4)) AND ((NULL, vt1.c1, vt1.c0))))))OR(CAST(vt1.c2 AS NUMERIC))))AND(CASE rt1.c4  WHEN vt1.c0 THEN vt1.c2 ELSE rt1.c4 END)))AND((- (rt1.c3))))) ORDER BY CAST(((rt1.c4)/(vt1.c1)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c1 COLLATE NOCASE)OR((((rt1.c2, rt1.c3, vt1.c2)) BETWEEN ((rt1.c4, vt1.c2, rt1.c4)) AND ((NULL, vt1.c1, vt1.c0))))))OR(CAST(vt1.c2 AS NUMERIC))))AND(CASE rt1.c4  WHEN vt1.c0 THEN vt1.c2 ELSE rt1.c4 END)))AND((- (rt1.c3))))) IS TRUE)  as count FROM rt1, vt1 ORDER BY CAST(((rt1.c4)/(vt1.c1)) AS NUMERIC));
SELECT COUNT(*) FROM rt1, vt1 WHERE (((((((((vt1.c1 COLLATE NOCASE)OR((((rt1.c2, rt1.c3, vt1.c2)) BETWEEN ((rt1.c4, vt1.c2, rt1.c4)) AND ((NULL, vt1.c1, vt1.c0))))))OR(CAST(vt1.c2 AS NUMERIC))))AND(CASE rt1.c4  WHEN vt1.c0 THEN vt1.c2 ELSE rt1.c4 END)))AND((- (rt1.c3))))) ORDER BY CAST(((rt1.c4)/(vt1.c1)) AS NUMERIC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ()))<<(CASE WHEN vt1.c0 THEN NULL ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))<<(CASE WHEN vt1.c0 THEN NULL ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ()))<<(CASE WHEN vt1.c0 THEN NULL ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))<<(CASE WHEN vt1.c0 THEN NULL ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ()))<<(CASE WHEN vt1.c0 THEN NULL ELSE vt1.c0 END)));
SELECT ALL * FROM vt1 WHERE (((((((NULL)OR(vt1.c1)))OR(vt1.c2)))>(((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((((NULL)OR(vt1.c1)))OR(vt1.c2)))>(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((NULL)OR(vt1.c1)))OR(vt1.c2)))>(((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((((NULL)OR(vt1.c1)))OR(vt1.c2)))>(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((NULL)OR(vt1.c1)))OR(vt1.c2)))>(((vt1.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((CASE ''  WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c2 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE ''  WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c2 END IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((CASE ''  WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c2 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE ''  WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c2 END IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((CASE ''  WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c2 END IN ()));
SELECT ALL * FROM rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((NULL)) AND ((rt1.c0))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) NOT BETWEEN ((NULL)) AND ((rt1.c0)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((NULL)) AND ((rt1.c0))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) NOT BETWEEN ((NULL)) AND ((rt1.c0)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((NULL)) AND ((rt1.c0))));
SELECT ALL * FROM rt1, rt0 WHERE (CAST(CASE WHEN rt1.c2 THEN rt1.c4 ELSE rt0.c1 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt1.c2 THEN rt1.c4 ELSE rt0.c1 END AS REAL)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (CAST(CASE WHEN rt1.c2 THEN rt1.c4 ELSE rt0.c1 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt1.c2 THEN rt1.c4 ELSE rt0.c1 END AS REAL)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (CAST(CASE WHEN rt1.c2 THEN rt1.c4 ELSE rt0.c1 END AS REAL));
SELECT * FROM rt1 WHERE (((((rt1.c2)IS NOT(x'')))IS NOT(((rt1.c1) NOT BETWEEN ('220837008') AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)IS NOT(x'')))IS NOT(((rt1.c1) NOT BETWEEN ('220837008') AND (rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c2)IS NOT(x'')))IS NOT(((rt1.c1) NOT BETWEEN ('220837008') AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)IS NOT(x'')))IS NOT(((rt1.c1) NOT BETWEEN ('220837008') AND (rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c2)IS NOT(x'')))IS NOT(((rt1.c1) NOT BETWEEN ('220837008') AND (rt1.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2) BETWEEN (1.275099223E9) AND (rt0.c0)) IN (CAST(rt0.c1 AS NUMERIC), rt0.c1 COLLATE NOCASE))) ORDER BY '-1446152498' ASC  NULLS FIRST, (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2) BETWEEN (1.275099223E9) AND (rt0.c0)) IN (CAST(rt0.c1 AS NUMERIC), rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY '-1446152498' ASC  NULLS FIRST, (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2) BETWEEN (1.275099223E9) AND (rt0.c0)) IN (CAST(rt0.c1 AS NUMERIC), rt0.c1 COLLATE NOCASE))) ORDER BY '-1446152498' ASC  NULLS FIRST, (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2) BETWEEN (1.275099223E9) AND (rt0.c0)) IN (CAST(rt0.c1 AS NUMERIC), rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY '-1446152498' ASC  NULLS FIRST, (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2) BETWEEN (1.275099223E9) AND (rt0.c0)) IN (CAST(rt0.c1 AS NUMERIC), rt0.c1 COLLATE NOCASE))) ORDER BY '-1446152498' ASC  NULLS FIRST, (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) ASC;
SELECT ALL * FROM rt0, vt1, rt1 WHERE (((((CASE rt0.c1  WHEN vt1.c2 THEN rt1.c1 ELSE rt1.c0 END)AND(('0.46375747920422794' IN (rt0.c1, rt0.c1)))))OR((((rt1.c4)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c2)))))) ORDER BY (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (('(H?⬜,m+l' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c1  WHEN vt1.c2 THEN rt1.c1 ELSE rt1.c0 END)AND(('0.46375747920422794' IN (rt0.c1, rt0.c1)))))OR((((rt1.c4)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c2)))))) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (('(H?⬜,m+l' COLLATE RTRIM))));
SELECT ALL * FROM rt0, vt1, rt1 WHERE (((((CASE rt0.c1  WHEN vt1.c2 THEN rt1.c1 ELSE rt1.c0 END)AND(('0.46375747920422794' IN (rt0.c1, rt0.c1)))))OR((((rt1.c4)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c2)))))) ORDER BY (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (('(H?⬜,m+l' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c1  WHEN vt1.c2 THEN rt1.c1 ELSE rt1.c0 END)AND(('0.46375747920422794' IN (rt0.c1, rt0.c1)))))OR((((rt1.c4)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c2)))))) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (('(H?⬜,m+l' COLLATE RTRIM))));
SELECT ALL * FROM rt0, vt1, rt1 WHERE (((((CASE rt0.c1  WHEN vt1.c2 THEN rt1.c1 ELSE rt1.c0 END)AND(('0.46375747920422794' IN (rt0.c1, rt0.c1)))))OR((((rt1.c4)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c2)))))) ORDER BY (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (('(H?⬜,m+l' COLLATE RTRIM)));
SELECT ALL * FROM rt1 WHERE (((UNLIKELY(DISTINCT rt1.c2))IS NOT((((rt1.c2, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c3, rt1.c3)) AND ((rt1.c1, rt1.c1, rt1.c2)))))) ORDER BY rt1.c1;
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(DISTINCT rt1.c2))IS NOT((((rt1.c2, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c3, rt1.c3)) AND ((rt1.c1, rt1.c1, rt1.c2)))))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1);
SELECT ALL * FROM rt1 WHERE (((UNLIKELY(DISTINCT rt1.c2))IS NOT((((rt1.c2, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c3, rt1.c3)) AND ((rt1.c1, rt1.c1, rt1.c2)))))) ORDER BY rt1.c1;
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(DISTINCT rt1.c2))IS NOT((((rt1.c2, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c3, rt1.c3)) AND ((rt1.c1, rt1.c1, rt1.c2)))))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1);
SELECT ALL * FROM rt1 WHERE (((UNLIKELY(DISTINCT rt1.c2))IS NOT((((rt1.c2, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c3, rt1.c3)) AND ((rt1.c1, rt1.c1, rt1.c2)))))) ORDER BY rt1.c1;
SELECT ALL * FROM rt1, rt0 WHERE (((rtreenode(rt0.c1, rt1.c3)) IS TRUE)) ORDER BY (+ ((+ (0.456529576882329))));
SELECT SUM(count) FROM (SELECT ((((rtreenode(rt0.c1, rt1.c3)) IS TRUE)) IS TRUE)  as count FROM rt1, rt0 ORDER BY (+ ((+ (0.456529576882329)))));
SELECT ALL * FROM rt1, rt0 WHERE (((rtreenode(rt0.c1, rt1.c3)) IS TRUE)) ORDER BY (+ ((+ (0.456529576882329))));
SELECT SUM(count) FROM (SELECT ((((rtreenode(rt0.c1, rt1.c3)) IS TRUE)) IS TRUE)  as count FROM rt1, rt0 ORDER BY (+ ((+ (0.456529576882329)))));
SELECT ALL * FROM rt1, rt0 WHERE (((rtreenode(rt0.c1, rt1.c3)) IS TRUE)) ORDER BY (+ ((+ (0.456529576882329))));
SELECT * FROM rt0, rt1 WHERE (CASE ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt0.c2))  WHEN ((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c1)) THEN (rt1.c3 IN ()) WHEN -1.334297438E9 THEN (- (rt0.c2)) WHEN rt0.c0 COLLATE RTRIM THEN ((((((((rt1.c2)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)) END) ORDER BY (((rt1.c0)%(rt1.c1)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt0.c2))  WHEN ((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c1)) THEN (rt1.c3 IN ()) WHEN -1.334297438E9 THEN (- (rt0.c2)) WHEN rt0.c0 COLLATE RTRIM THEN ((((((((rt1.c2)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)) END) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt1.c0)%(rt1.c1)) IN ()));
SELECT * FROM rt0, rt1 WHERE (CASE ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt0.c2))  WHEN ((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c1)) THEN (rt1.c3 IN ()) WHEN -1.334297438E9 THEN (- (rt0.c2)) WHEN rt0.c0 COLLATE RTRIM THEN ((((((((rt1.c2)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)) END) ORDER BY (((rt1.c0)%(rt1.c1)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt0.c2))  WHEN ((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c1)) THEN (rt1.c3 IN ()) WHEN -1.334297438E9 THEN (- (rt0.c2)) WHEN rt0.c0 COLLATE RTRIM THEN ((((((((rt1.c2)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)) END) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt1.c0)%(rt1.c1)) IN ()));
SELECT * FROM rt0, rt1 WHERE (CASE ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt0.c2))  WHEN ((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c1)) THEN (rt1.c3 IN ()) WHEN -1.334297438E9 THEN (- (rt0.c2)) WHEN rt0.c0 COLLATE RTRIM THEN ((((((((rt1.c2)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)) END) ORDER BY (((rt1.c0)%(rt1.c1)) IN ());
SELECT ALL * FROM rt0, rt1 WHERE (((((((((((((rt1.c4)OR(rt1.c1)))OR(rt0.c2)))OR(rt0.c1)))AND(CAST(rt0.c1 AS REAL))))OR(json_array_length(rt1.c1))))OR((((rt0.c2, 0, rt0.c1)) NOT BETWEEN ((rt1.c0, rt0.c0, rt1.c4)) AND ((rt1.c2, rt1.c3, rt0.c0)))))) ORDER BY CASE x'84db' COLLATE NOCASE  WHEN CASE WHEN rt0.c2 THEN rt1.c3 WHEN rt0.c2 THEN rt0.c1 WHEN rt1.c2 THEN rt1.c1 END THEN ((rt1.c1) NOTNULL) WHEN (NOT (rt1.c0)) THEN -1.334297438E9 WHEN ((rt1.c4) NOT BETWEEN (x'') AND (rt1.c1)) THEN ((((NULL)AND(rt1.c0)))AND(rt1.c1)) WHEN (((rt0.c2, NULL, 0.011357188186746137))<>((rt0.c0, rt1.c4, 1318762760))) THEN ((((rt1.c1)OR(rt1.c3)))OR(rt1.c0)) WHEN (~ (rt1.c0)) THEN '>f伲' ELSE ((rt0.c1)AND(0.14950506724117674)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt1.c4)OR(rt1.c1)))OR(rt0.c2)))OR(rt0.c1)))AND(CAST(rt0.c1 AS REAL))))OR(json_array_length(rt1.c1))))OR((((rt0.c2, 0, rt0.c1)) NOT BETWEEN ((rt1.c0, rt0.c0, rt1.c4)) AND ((rt1.c2, rt1.c3, rt0.c0)))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE x'84db' COLLATE NOCASE  WHEN CASE WHEN rt0.c2 THEN rt1.c3 WHEN rt0.c2 THEN rt0.c1 WHEN rt1.c2 THEN rt1.c1 END THEN ((rt1.c1) NOTNULL) WHEN (NOT (rt1.c0)) THEN -1.334297438E9 WHEN ((rt1.c4) NOT BETWEEN (x'') AND (rt1.c1)) THEN ((((NULL)AND(rt1.c0)))AND(rt1.c1)) WHEN (((rt0.c2, NULL, 0.011357188186746137))!=((rt0.c0, rt1.c4, 1318762760))) THEN ((((rt1.c1)OR(rt1.c3)))OR(rt1.c0)) WHEN (~ (rt1.c0)) THEN '>f伲' ELSE ((rt0.c1)AND(0.14950506724117674)) END);
SELECT ALL * FROM rt0, rt1 WHERE (((((((((((((rt1.c4)OR(rt1.c1)))OR(rt0.c2)))OR(rt0.c1)))AND(CAST(rt0.c1 AS REAL))))OR(json_array_length(rt1.c1))))OR((((rt0.c2, 0, rt0.c1)) NOT BETWEEN ((rt1.c0, rt0.c0, rt1.c4)) AND ((rt1.c2, rt1.c3, rt0.c0)))))) ORDER BY CASE x'84db' COLLATE NOCASE  WHEN CASE WHEN rt0.c2 THEN rt1.c3 WHEN rt0.c2 THEN rt0.c1 WHEN rt1.c2 THEN rt1.c1 END THEN ((rt1.c1) NOTNULL) WHEN (NOT (rt1.c0)) THEN -1.334297438E9 WHEN ((rt1.c4) NOT BETWEEN (x'') AND (rt1.c1)) THEN ((((NULL)AND(rt1.c0)))AND(rt1.c1)) WHEN (((rt0.c2, NULL, 0.011357188186746137))<>((rt0.c0, rt1.c4, 1318762760))) THEN ((((rt1.c1)OR(rt1.c3)))OR(rt1.c0)) WHEN (~ (rt1.c0)) THEN '>f伲' ELSE ((rt0.c1)AND(0.14950506724117674)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt1.c4)OR(rt1.c1)))OR(rt0.c2)))OR(rt0.c1)))AND(CAST(rt0.c1 AS REAL))))OR(json_array_length(rt1.c1))))OR((((rt0.c2, 0, rt0.c1)) NOT BETWEEN ((rt1.c0, rt0.c0, rt1.c4)) AND ((rt1.c2, rt1.c3, rt0.c0)))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE x'84db' COLLATE NOCASE  WHEN CASE WHEN rt0.c2 THEN rt1.c3 WHEN rt0.c2 THEN rt0.c1 WHEN rt1.c2 THEN rt1.c1 END THEN ((rt1.c1) NOTNULL) WHEN (NOT (rt1.c0)) THEN -1.334297438E9 WHEN ((rt1.c4) NOT BETWEEN (x'') AND (rt1.c1)) THEN ((((NULL)AND(rt1.c0)))AND(rt1.c1)) WHEN (((rt0.c2, NULL, 0.011357188186746137))!=((rt0.c0, rt1.c4, 1318762760))) THEN ((((rt1.c1)OR(rt1.c3)))OR(rt1.c0)) WHEN (~ (rt1.c0)) THEN '>f伲' ELSE ((rt0.c1)AND(0.14950506724117674)) END);
SELECT ALL * FROM rt0, rt1 WHERE (((((((((((((rt1.c4)OR(rt1.c1)))OR(rt0.c2)))OR(rt0.c1)))AND(CAST(rt0.c1 AS REAL))))OR(json_array_length(rt1.c1))))OR((((rt0.c2, 0, rt0.c1)) NOT BETWEEN ((rt1.c0, rt0.c0, rt1.c4)) AND ((rt1.c2, rt1.c3, rt0.c0)))))) ORDER BY CASE x'84db' COLLATE NOCASE  WHEN CASE WHEN rt0.c2 THEN rt1.c3 WHEN rt0.c2 THEN rt0.c1 WHEN rt1.c2 THEN rt1.c1 END THEN ((rt1.c1) NOTNULL) WHEN (NOT (rt1.c0)) THEN -1.334297438E9 WHEN ((rt1.c4) NOT BETWEEN (x'') AND (rt1.c1)) THEN ((((NULL)AND(rt1.c0)))AND(rt1.c1)) WHEN (((rt0.c2, NULL, 0.011357188186746137))<>((rt0.c0, rt1.c4, 1318762760))) THEN ((((rt1.c1)OR(rt1.c3)))OR(rt1.c0)) WHEN (~ (rt1.c0)) THEN '>f伲' ELSE ((rt0.c1)AND(0.14950506724117674)) END;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (rt0.c1) ORDER BY (((x'')) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)) AND ((((rt0.c1)AND(rt0.c0))))) ASC  NULLS FIRST, (+ (CAST(rt0.c2 AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((x'')) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)) AND ((((rt0.c1)AND(rt0.c0))))) ASC  NULLS FIRST, (+ (CAST(rt0.c2 AS INTEGER))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (rt0.c1) ORDER BY (((x'')) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)) AND ((((rt0.c1)AND(rt0.c0))))) ASC  NULLS FIRST, (+ (CAST(rt0.c2 AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((x'')) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)) AND ((((rt0.c1)AND(rt0.c0))))) ASC  NULLS FIRST, (+ (CAST(rt0.c2 AS INTEGER))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (rt0.c1) ORDER BY (((x'')) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)) AND ((((rt0.c1)AND(rt0.c0))))) ASC  NULLS FIRST, (+ (CAST(rt0.c2 AS INTEGER))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2) IS FALSE) AS TEXT)) ORDER BY CAST(rt0.c1 AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) IS FALSE) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c1 AS NUMERIC) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2) IS FALSE) AS TEXT)) ORDER BY CAST(rt0.c1 AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) IS FALSE) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c1 AS NUMERIC) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2) IS FALSE) AS TEXT)) ORDER BY CAST(rt0.c1 AS NUMERIC) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, rt1 RIGHT OUTER JOIN vt1 ON ((((rt1.c3) NOT BETWEEN (vt1.c0) AND (rt1.c2))) NOT NULL) WHERE (((CAST(rt0.c2 AS INTEGER))<=((((rt1.c2)) BETWEEN ((rt1.c4)) AND ((rt1.c0)))))) ORDER BY (((rt0.c1, rt0.c1, rt1.c2)) BETWEEN (((rt1.c1 IN (rt0.c0, rt0.c2)), (- (rt0.c0)), (rt0.c2 IN (rt1.c3)))) AND ((((NULL) NOT BETWEEN ('') AND (rt1.c0)), CAST('1004851312' AS TEXT), (~ ('1152104209')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS INTEGER))<=((((rt1.c2)) BETWEEN ((rt1.c4)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN vt1 ON ((((rt1.c3) NOT BETWEEN (vt1.c0) AND (rt1.c2))) NOT NULL) ORDER BY (((rt0.c1, rt0.c1, rt1.c2)) BETWEEN (((rt1.c1 IN (rt0.c0, rt0.c2)), (- (rt0.c0)), (rt0.c2 IN (rt1.c3)))) AND ((((NULL) NOT BETWEEN ('') AND (rt1.c0)), CAST('1004851312' AS TEXT), (~ ('1152104209')))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, rt1 RIGHT OUTER JOIN vt1 ON ((((rt1.c3) NOT BETWEEN (vt1.c0) AND (rt1.c2))) NOT NULL) WHERE (((CAST(rt0.c2 AS INTEGER))<=((((rt1.c2)) BETWEEN ((rt1.c4)) AND ((rt1.c0)))))) ORDER BY (((rt0.c1, rt0.c1, rt1.c2)) BETWEEN (((rt1.c1 IN (rt0.c0, rt0.c2)), (- (rt0.c0)), (rt0.c2 IN (rt1.c3)))) AND ((((NULL) NOT BETWEEN ('') AND (rt1.c0)), CAST('1004851312' AS TEXT), (~ ('1152104209')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS INTEGER))<=((((rt1.c2)) BETWEEN ((rt1.c4)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN vt1 ON ((((rt1.c3) NOT BETWEEN (vt1.c0) AND (rt1.c2))) NOT NULL) ORDER BY (((rt0.c1, rt0.c1, rt1.c2)) BETWEEN (((rt1.c1 IN (rt0.c0, rt0.c2)), (- (rt0.c0)), (rt0.c2 IN (rt1.c3)))) AND ((((NULL) NOT BETWEEN ('') AND (rt1.c0)), CAST('1004851312' AS TEXT), (~ ('1152104209')))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, rt1 RIGHT OUTER JOIN vt1 ON ((((rt1.c3) NOT BETWEEN (vt1.c0) AND (rt1.c2))) NOT NULL) WHERE (((CAST(rt0.c2 AS INTEGER))<=((((rt1.c2)) BETWEEN ((rt1.c4)) AND ((rt1.c0)))))) ORDER BY (((rt0.c1, rt0.c1, rt1.c2)) BETWEEN (((rt1.c1 IN (rt0.c0, rt0.c2)), (- (rt0.c0)), (rt0.c2 IN (rt1.c3)))) AND ((((NULL) NOT BETWEEN ('') AND (rt1.c0)), CAST('1004851312' AS TEXT), (~ ('1152104209')))))  NULLS LAST;
SELECT ALL * FROM rt1, vt1, rt0 WHERE (CASE vt1.c2  WHEN CAST(rt0.c1 AS REAL) THEN ((('')) BETWEEN ((rt0.c2)) AND ((rt0.c1))) WHEN DATETIME(vt1.c1, vt1.c0, rt1.c1, rt1.c3, rt1.c2, rt1.c2, rt0.c0) THEN ((rt0.c1)OR(rt1.c2)) WHEN CASE rt0.c1  WHEN rt1.c2 THEN vt1.c0 ELSE vt1.c1 END THEN rt1.c1 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE vt1.c2  WHEN CAST(rt0.c1 AS REAL) THEN ((('')) BETWEEN ((rt0.c2)) AND ((rt0.c1))) WHEN DATETIME(vt1.c1, vt1.c0, rt1.c1, rt1.c3, rt1.c2, rt1.c2, rt0.c0) THEN ((rt0.c1)OR(rt1.c2)) WHEN CASE rt0.c1  WHEN rt1.c2 THEN vt1.c0 ELSE vt1.c1 END THEN rt1.c1 COLLATE BINARY END) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL * FROM rt1, vt1, rt0 WHERE (CASE vt1.c2  WHEN CAST(rt0.c1 AS REAL) THEN ((('')) BETWEEN ((rt0.c2)) AND ((rt0.c1))) WHEN DATETIME(vt1.c1, vt1.c0, rt1.c1, rt1.c3, rt1.c2, rt1.c2, rt0.c0) THEN ((rt0.c1)OR(rt1.c2)) WHEN CASE rt0.c1  WHEN rt1.c2 THEN vt1.c0 ELSE vt1.c1 END THEN rt1.c1 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE vt1.c2  WHEN CAST(rt0.c1 AS REAL) THEN ((('')) BETWEEN ((rt0.c2)) AND ((rt0.c1))) WHEN DATETIME(vt1.c1, vt1.c0, rt1.c1, rt1.c3, rt1.c2, rt1.c2, rt0.c0) THEN ((rt0.c1)OR(rt1.c2)) WHEN CASE rt0.c1  WHEN rt1.c2 THEN vt1.c0 ELSE vt1.c1 END THEN rt1.c1 COLLATE BINARY END) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL * FROM rt1, vt1, rt0 WHERE (CASE vt1.c2  WHEN CAST(rt0.c1 AS REAL) THEN ((('')) BETWEEN ((rt0.c2)) AND ((rt0.c1))) WHEN DATETIME(vt1.c1, vt1.c0, rt1.c1, rt1.c3, rt1.c2, rt1.c2, rt0.c0) THEN ((rt0.c1)OR(rt1.c2)) WHEN CASE rt0.c1  WHEN rt1.c2 THEN vt1.c0 ELSE vt1.c1 END THEN rt1.c1 COLLATE BINARY END);
SELECT ALL * FROM rt1 WHERE (((((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c3)))OR(rt1.c2)))AND(rt1.c0)))<('')));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c3)))OR(rt1.c2)))AND(rt1.c0)))<(''))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c3)))OR(rt1.c2)))AND(rt1.c0)))<('')));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c3)))OR(rt1.c2)))AND(rt1.c0)))<(''))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c3)))OR(rt1.c2)))AND(rt1.c0)))<('')));
SELECT ALL * FROM rt0 WHERE ((((((((((~ (rt0.c0)))AND(rt0.c0)))OR((+ (rt0.c1)))))OR(((rt0.c1) NOTNULL))))AND(CAST(rt0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((((((((~ (rt0.c0)))AND(rt0.c0)))OR((+ (rt0.c1)))))OR(((rt0.c1) NOTNULL))))AND(CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((((((~ (rt0.c0)))AND(rt0.c0)))OR((+ (rt0.c1)))))OR(((rt0.c1) NOTNULL))))AND(CAST(rt0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((((((((~ (rt0.c0)))AND(rt0.c0)))OR((+ (rt0.c1)))))OR(((rt0.c1) NOTNULL))))AND(CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((((((~ (rt0.c0)))AND(rt0.c0)))OR((+ (rt0.c1)))))OR(((rt0.c1) NOTNULL))))AND(CAST(rt0.c2 AS NUMERIC))));
SELECT * FROM rt0, rt1, vt1 WHERE (UNLIKELY(((rt0.c2) NOT BETWEEN (vt1.c2) AND (rt1.c1)))) ORDER BY x'', ((NULL)&(((rt1.c1)==(rt1.c4)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((rt0.c2) NOT BETWEEN (vt1.c2) AND (rt1.c1)))) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY x'', ((NULL)&(((rt1.c1)==(rt1.c4)))) ASC  NULLS FIRST);
SELECT * FROM rt0, rt1, vt1 WHERE (UNLIKELY(((rt0.c2) NOT BETWEEN (vt1.c2) AND (rt1.c1)))) ORDER BY x'', ((NULL)&(((rt1.c1)==(rt1.c4)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((rt0.c2) NOT BETWEEN (vt1.c2) AND (rt1.c1)))) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY x'', ((NULL)&(((rt1.c1)==(rt1.c4)))) ASC  NULLS FIRST);
SELECT * FROM rt0, rt1, vt1 WHERE (UNLIKELY(((rt0.c2) NOT BETWEEN (vt1.c2) AND (rt1.c1)))) ORDER BY x'', ((NULL)&(((rt1.c1)==(rt1.c4)))) ASC  NULLS FIRST;
SELECT * FROM rt1, rt0, vt1 WHERE ((((rt0.c0)<>(rt0.c1)) IN ())) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)<>(rt0.c1)) IN ())) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY x'' DESC);
SELECT * FROM rt1, rt0, vt1 WHERE ((((rt0.c0)<>(rt0.c1)) IN ())) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)<>(rt0.c1)) IN ())) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY x'' DESC);
SELECT * FROM rt1, rt0, vt1 WHERE ((((rt0.c0)<>(rt0.c1)) IN ())) ORDER BY x'' DESC;
SELECT ALL * FROM rt1, rt0 WHERE ((((((NULL))<>((rt0.c1)))) NOT BETWEEN ('U&	~Wf') AND (HEX(rt1.c2)))) ORDER BY rt1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((NULL))<>((rt0.c1)))) NOT BETWEEN ('U&	~Wf') AND (HEX(rt1.c2)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY rt1.c2  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE ((((((NULL))<>((rt0.c1)))) NOT BETWEEN ('U&	~Wf') AND (HEX(rt1.c2)))) ORDER BY rt1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((NULL))<>((rt0.c1)))) NOT BETWEEN ('U&	~Wf') AND (HEX(rt1.c2)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY rt1.c2  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE ((((((NULL))<>((rt0.c1)))) NOT BETWEEN ('U&	~Wf') AND (HEX(rt1.c2)))) ORDER BY rt1.c2  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((((((((rt0.c1)OR(rt1.c4)))AND(rt1.c2)))OR(rt0.c0)))OR(rt0.c0))) NOT BETWEEN (((((rt1.c2)OR(rt1.c2)))OR(rt1.c3))) AND (rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)OR(rt1.c4)))AND(rt1.c2)))OR(rt0.c0)))OR(rt0.c0))) NOT BETWEEN (((((rt1.c2)OR(rt1.c2)))OR(rt1.c3))) AND (rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((((((((rt0.c1)OR(rt1.c4)))AND(rt1.c2)))OR(rt0.c0)))OR(rt0.c0))) NOT BETWEEN (((((rt1.c2)OR(rt1.c2)))OR(rt1.c3))) AND (rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)OR(rt1.c4)))AND(rt1.c2)))OR(rt0.c0)))OR(rt0.c0))) NOT BETWEEN (((((rt1.c2)OR(rt1.c2)))OR(rt1.c3))) AND (rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((((((((rt0.c1)OR(rt1.c4)))AND(rt1.c2)))OR(rt0.c0)))OR(rt0.c0))) NOT BETWEEN (((((rt1.c2)OR(rt1.c2)))OR(rt1.c3))) AND (rt0.c1 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt1, rt0, rt1 WHERE (((((rt1.c2) NOT BETWEEN (vt1.c2) AND (rt1.c4)))>=(((((rt1.c0)OR(rt1.c2)))AND(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOT BETWEEN (vt1.c2) AND (rt1.c4)))>=(((((rt1.c0)OR(rt1.c2)))AND(rt1.c3))))) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT COUNT(*) FROM vt1, rt0, rt1 WHERE (((((rt1.c2) NOT BETWEEN (vt1.c2) AND (rt1.c4)))>=(((((rt1.c0)OR(rt1.c2)))AND(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOT BETWEEN (vt1.c2) AND (rt1.c4)))>=(((((rt1.c0)OR(rt1.c2)))AND(rt1.c3))))) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT COUNT(*) FROM vt1, rt0, rt1 WHERE (((((rt1.c2) NOT BETWEEN (vt1.c2) AND (rt1.c4)))>=(((((rt1.c0)OR(rt1.c2)))AND(rt1.c3)))));
SELECT COUNT(*) FROM rt1 WHERE (((((((((rt1.c4)AND(((((rt1.c2)AND(rt1.c2)))OR(rt1.c2)))))AND((rt1.c0 IN ()))))OR(((rt1.c0) BETWEEN (rt1.c1) AND (0.7849770534260047)))))OR(((rt1.c2)+('-474131454')))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c4)AND(((((rt1.c2)AND(rt1.c2)))OR(rt1.c2)))))AND((rt1.c0 IN ()))))OR(((rt1.c0) BETWEEN (rt1.c1) AND (0.7849770534260047)))))OR(((rt1.c2)+('-474131454'))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((((((rt1.c4)AND(((((rt1.c2)AND(rt1.c2)))OR(rt1.c2)))))AND((rt1.c0 IN ()))))OR(((rt1.c0) BETWEEN (rt1.c1) AND (0.7849770534260047)))))OR(((rt1.c2)+('-474131454')))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c4)AND(((((rt1.c2)AND(rt1.c2)))OR(rt1.c2)))))AND((rt1.c0 IN ()))))OR(((rt1.c0) BETWEEN (rt1.c1) AND (0.7849770534260047)))))OR(((rt1.c2)+('-474131454'))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((((((rt1.c4)AND(((((rt1.c2)AND(rt1.c2)))OR(rt1.c2)))))AND((rt1.c0 IN ()))))OR(((rt1.c0) BETWEEN (rt1.c1) AND (0.7849770534260047)))))OR(((rt1.c2)+('-474131454')))));
SELECT COUNT(*) FROM rt1, vt1 WHERE (CASE WHEN rt1.c0 THEN ((rt1.c4) BETWEEN (rt1.c3) AND (rt1.c2)) ELSE CAST('564552345' AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c0 THEN ((rt1.c4) BETWEEN (rt1.c3) AND (rt1.c2)) ELSE CAST('564552345' AS REAL) END) IS TRUE)  as count FROM rt1, vt1);
SELECT COUNT(*) FROM rt1, vt1 WHERE (CASE WHEN rt1.c0 THEN ((rt1.c4) BETWEEN (rt1.c3) AND (rt1.c2)) ELSE CAST('564552345' AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c0 THEN ((rt1.c4) BETWEEN (rt1.c3) AND (rt1.c2)) ELSE CAST('564552345' AS REAL) END) IS TRUE)  as count FROM rt1, vt1);
SELECT COUNT(*) FROM rt1, vt1 WHERE (CASE WHEN rt1.c0 THEN ((rt1.c4) BETWEEN (rt1.c3) AND (rt1.c2)) ELSE CAST('564552345' AS REAL) END);
SELECT ALL COUNT(*) FROM rt1 WHERE ((- ((((rt1.c3, '24306679', rt1.c0))>=((rt1.c2, rt1.c3, '-474131454'))))));
SELECT SUM(count) FROM (SELECT (((- ((((rt1.c3, '24306679', rt1.c0))>=((rt1.c2, rt1.c3, '-474131454')))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((- ((((rt1.c3, '24306679', rt1.c0))>=((rt1.c2, rt1.c3, '-474131454'))))));
SELECT SUM(count) FROM (SELECT (((- ((((rt1.c3, '24306679', rt1.c0))>=((rt1.c2, rt1.c3, '-474131454')))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((- ((((rt1.c3, '24306679', rt1.c0))>=((rt1.c2, rt1.c3, '-474131454'))))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((vt1.c2)AND(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt1.c2)AND(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((vt1.c2)AND(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt1.c2)AND(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((vt1.c2)AND(rt0.c1)) IN ()));
SELECT * FROM rt1 WHERE (((((CAST(rt1.c2 AS REAL))AND(x'')))OR(((rt1.c3) NOT BETWEEN (rt1.c1) AND ('-495006217'))))) ORDER BY (((rt1.c3)-(rt1.c2)) IN ());
SELECT SUM(count) FROM (SELECT ((((((CAST(rt1.c2 AS REAL))AND(x'')))OR(((rt1.c3) NOT BETWEEN (rt1.c1) AND ('-495006217'))))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c3)-(rt1.c2)) IN ()));
SELECT * FROM rt1 WHERE (((((CAST(rt1.c2 AS REAL))AND(x'')))OR(((rt1.c3) NOT BETWEEN (rt1.c1) AND ('-495006217'))))) ORDER BY (((rt1.c3)-(rt1.c2)) IN ());
SELECT SUM(count) FROM (SELECT ((((((CAST(rt1.c2 AS REAL))AND(x'')))OR(((rt1.c3) NOT BETWEEN (rt1.c1) AND ('-495006217'))))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c3)-(rt1.c2)) IN ()));
SELECT * FROM rt1 WHERE (((((CAST(rt1.c2 AS REAL))AND(x'')))OR(((rt1.c3) NOT BETWEEN (rt1.c1) AND ('-495006217'))))) ORDER BY (((rt1.c3)-(rt1.c2)) IN ());
SELECT ALL * FROM rt0 WHERE (('x' IN ()));
SELECT SUM(count) FROM (SELECT ((('x' IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (('x' IN ()));
SELECT SUM(count) FROM (SELECT ((('x' IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (('x' IN ()));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (UNLIKELY(DISTINCT rt1.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT rt1.c1 COLLATE NOCASE)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (UNLIKELY(DISTINCT rt1.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT rt1.c1 COLLATE NOCASE)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (UNLIKELY(DISTINCT rt1.c1 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE (rt1.c3);
SELECT ALL * FROM rt1 LEFT OUTER JOIN vt1 ON (('8	X媋o') NOT BETWEEN (CASE WHEN rt1.c3 THEN rt1.c1 END) AND ((vt1.c2 IN ()))) WHERE (((((((rt1.c2)<(rt1.c1)))OR(LIKELIHOOD(DISTINCT rt1.c4, 0.13611507055545968))))AND(0.6114202740394148)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)<(rt1.c1)))OR(LIKELIHOOD(DISTINCT rt1.c4, 0.13611507055545968))))AND(0.6114202740394148))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt1 ON (('8	X媋o') NOT BETWEEN (CASE WHEN rt1.c3 THEN rt1.c1 END) AND ((vt1.c2 IN ()))));
SELECT ALL * FROM rt1 LEFT OUTER JOIN vt1 ON (('8	X媋o') NOT BETWEEN (CASE WHEN rt1.c3 THEN rt1.c1 END) AND ((vt1.c2 IN ()))) WHERE (((((((rt1.c2)<(rt1.c1)))OR(LIKELIHOOD(DISTINCT rt1.c4, 0.13611507055545968))))AND(0.6114202740394148)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)<(rt1.c1)))OR(LIKELIHOOD(DISTINCT rt1.c4, 0.13611507055545968))))AND(0.6114202740394148))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt1 ON (('8	X媋o') NOT BETWEEN (CASE WHEN rt1.c3 THEN rt1.c1 END) AND ((vt1.c2 IN ()))));
SELECT ALL * FROM rt1 LEFT OUTER JOIN vt1 ON (('8	X媋o') NOT BETWEEN (CASE WHEN rt1.c3 THEN rt1.c1 END) AND ((vt1.c2 IN ()))) WHERE (((((((rt1.c2)<(rt1.c1)))OR(LIKELIHOOD(DISTINCT rt1.c4, 0.13611507055545968))))AND(0.6114202740394148)));
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (((x'f0a3')==(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((x'f0a3')=(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (((x'f0a3')==(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((x'f0a3')=(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (((x'f0a3')==(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 ELSE rt0.c1 END)));
SELECT * FROM rt0 WHERE (ABS((- (rt0.c0)))) ORDER BY TOTAL_CHANGES();
SELECT SUM(count) FROM (SELECT ((ABS((- (rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY TOTAL_CHANGES());
SELECT * FROM rt0 WHERE (ABS((- (rt0.c0)))) ORDER BY TOTAL_CHANGES();
SELECT SUM(count) FROM (SELECT ((ABS((- (rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY TOTAL_CHANGES());
SELECT * FROM rt0 WHERE (ABS((- (rt0.c0)))) ORDER BY TOTAL_CHANGES();
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt1 WHERE (((((((((x'')OR((('607763922') NOTNULL))))OR(((rt1.c0)>(vt1.c1)))))OR(((rt1.c3) BETWEEN (rt1.c4) AND (vt1.c1)))))OR(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((((((x'')OR((('607763922') NOTNULL))))OR(((rt1.c0)>(vt1.c1)))))OR(((rt1.c3) BETWEEN (rt1.c4) AND (vt1.c1)))))OR(vt1.c0))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt1 WHERE (((((((((x'')OR((('607763922') NOTNULL))))OR(((rt1.c0)>(vt1.c1)))))OR(((rt1.c3) BETWEEN (rt1.c4) AND (vt1.c1)))))OR(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((((((x'')OR((('607763922') NOTNULL))))OR(((rt1.c0)>(vt1.c1)))))OR(((rt1.c3) BETWEEN (rt1.c4) AND (vt1.c1)))))OR(vt1.c0))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt1 WHERE (((((((((x'')OR((('607763922') NOTNULL))))OR(((rt1.c0)>(vt1.c1)))))OR(((rt1.c3) BETWEEN (rt1.c4) AND (vt1.c1)))))OR(vt1.c0)));
SELECT ALL * FROM vt1, rt1, rt0 NOT INDEXED WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM vt1, rt1, rt0);
SELECT ALL * FROM vt1, rt1, rt0 NOT INDEXED WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM vt1, rt1, rt0);
SELECT ALL * FROM vt1, rt1, rt0 NOT INDEXED WHERE (rt1.c3);
SELECT COUNT(*) FROM rt0 NOT INDEXED, rt1, vt1 WHERE (((((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt1.c4)))OR(CAST(rt0.c1 AS NUMERIC)))) ORDER BY ((json_array_length(x'2a7f7c77'))>>(rt1.c0 COLLATE RTRIM)), rt0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt1.c4)))OR(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY ((json_array_length(x'2a7f7c77'))>>(rt1.c0 COLLATE RTRIM)), rt0.c2 ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 NOT INDEXED, rt1, vt1 WHERE (((((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt1.c4)))OR(CAST(rt0.c1 AS NUMERIC)))) ORDER BY ((json_array_length(x'2a7f7c77'))>>(rt1.c0 COLLATE RTRIM)), rt0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt1.c4)))OR(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY ((json_array_length(x'2a7f7c77'))>>(rt1.c0 COLLATE RTRIM)), rt0.c2 ASC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (COALESCE(DISTINCT ((rt1.c1) IS TRUE), (rt1.c2 IN (rt1.c2)))) ORDER BY ((((((rt1.c3)AND(rt1.c1)))AND(rt1.c1)))<>(-1930626078))  NULLS LAST, ((CAST(rt1.c1 AS REAL))IS NOT((x'' IN (rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ((rt1.c1) IS TRUE), (rt1.c2 IN (rt1.c2)))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c3)AND(rt1.c1)))AND(rt1.c1)))!=(-1930626078))  NULLS LAST, ((CAST(rt1.c1 AS REAL))IS NOT((x'' IN (rt1.c1)))));
SELECT ALL * FROM rt1 WHERE (COALESCE(DISTINCT ((rt1.c1) IS TRUE), (rt1.c2 IN (rt1.c2)))) ORDER BY ((((((rt1.c3)AND(rt1.c1)))AND(rt1.c1)))<>(-1930626078))  NULLS LAST, ((CAST(rt1.c1 AS REAL))IS NOT((x'' IN (rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ((rt1.c1) IS TRUE), (rt1.c2 IN (rt1.c2)))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c3)AND(rt1.c1)))AND(rt1.c1)))!=(-1930626078))  NULLS LAST, ((CAST(rt1.c1 AS REAL))IS NOT((x'' IN (rt1.c1)))));
SELECT ALL * FROM rt1 WHERE (COALESCE(DISTINCT ((rt1.c1) IS TRUE), (rt1.c2 IN (rt1.c2)))) ORDER BY ((((((rt1.c3)AND(rt1.c1)))AND(rt1.c1)))<>(-1930626078))  NULLS LAST, ((CAST(rt1.c1 AS REAL))IS NOT((x'' IN (rt1.c1))));
SELECT * FROM rt1 WHERE (((((rt1.c0)IS(rt1.c2))) NOT BETWEEN (((rt1.c3)>>(rt1.c0))) AND (CAST(rt1.c3 AS INTEGER)))) ORDER BY x'' COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)IS(rt1.c2))) NOT BETWEEN (((rt1.c3)>>(rt1.c0))) AND (CAST(rt1.c3 AS INTEGER)))) IS TRUE)  as count FROM rt1 ORDER BY x'' COLLATE NOCASE  NULLS LAST);
SELECT * FROM rt1 WHERE (((((rt1.c0)IS(rt1.c2))) NOT BETWEEN (((rt1.c3)>>(rt1.c0))) AND (CAST(rt1.c3 AS INTEGER)))) ORDER BY x'' COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)IS(rt1.c2))) NOT BETWEEN (((rt1.c3)>>(rt1.c0))) AND (CAST(rt1.c3 AS INTEGER)))) IS TRUE)  as count FROM rt1 ORDER BY x'' COLLATE NOCASE  NULLS LAST);
SELECT * FROM rt1 WHERE (((((rt1.c0)IS(rt1.c2))) NOT BETWEEN (((rt1.c3)>>(rt1.c0))) AND (CAST(rt1.c3 AS INTEGER)))) ORDER BY x'' COLLATE NOCASE  NULLS LAST;
SELECT ALL * FROM rt1 WHERE ((~ (rt1.c3))) ORDER BY ((((rt1.c2)/(rt1.c4))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt1.c3))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2)/(rt1.c4))) ISNULL)  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((~ (rt1.c3))) ORDER BY ((((rt1.c2)/(rt1.c4))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt1.c3))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2)/(rt1.c4))) ISNULL)  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((~ (rt1.c3))) ORDER BY ((((rt1.c2)/(rt1.c4))) ISNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ('') ORDER BY vt1.c2  NULLS FIRST, CASE rt0.c2  WHEN vt1.c1 THEN rt0.c2 ELSE vt1.c0 END COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1, rt0 ORDER BY vt1.c2  NULLS FIRST, CASE rt0.c2  WHEN vt1.c1 THEN rt0.c2 ELSE vt1.c0 END COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ('') ORDER BY vt1.c2  NULLS FIRST, CASE rt0.c2  WHEN vt1.c1 THEN rt0.c2 ELSE vt1.c0 END COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1, rt0 ORDER BY vt1.c2  NULLS FIRST, CASE rt0.c2  WHEN vt1.c1 THEN rt0.c2 ELSE vt1.c0 END COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ('') ORDER BY vt1.c2  NULLS FIRST, CASE rt0.c2  WHEN vt1.c1 THEN rt0.c2 ELSE vt1.c0 END COLLATE RTRIM  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((('kVB') BETWEEN (rt1.c0) AND (((rt1.c3) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((('kVB') BETWEEN (rt1.c0) AND (((rt1.c3) ISNULL)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((('kVB') BETWEEN (rt1.c0) AND (((rt1.c3) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((('kVB') BETWEEN (rt1.c0) AND (((rt1.c3) ISNULL)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((('kVB') BETWEEN (rt1.c0) AND (((rt1.c3) ISNULL))));
SELECT * FROM rt1 CROSS JOIN rt0 ON ((CASE WHEN rt1.c3 THEN rt1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt1.c3 THEN rt0.c2 ELSE '5\r 糪D-QP&' END) BETWEEN (((rt1.c1)&(rt0.c1))) AND (((rt1.c3) IS FALSE))) WHERE ((((rt1.c1)) BETWEEN ((((rt0.c0)>=(rt1.c4)))) AND (((- (rt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) BETWEEN ((((rt0.c0)>=(rt1.c4)))) AND (((- (rt1.c0)))))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON ((CASE WHEN rt1.c3 THEN rt1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt1.c3 THEN rt0.c2 ELSE '5\r 糪D-QP&' END) BETWEEN (((rt1.c1)&(rt0.c1))) AND (((rt1.c3) IS FALSE))));
SELECT * FROM rt1 CROSS JOIN rt0 ON ((CASE WHEN rt1.c3 THEN rt1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt1.c3 THEN rt0.c2 ELSE '5\r 糪D-QP&' END) BETWEEN (((rt1.c1)&(rt0.c1))) AND (((rt1.c3) IS FALSE))) WHERE ((((rt1.c1)) BETWEEN ((((rt0.c0)>=(rt1.c4)))) AND (((- (rt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) BETWEEN ((((rt0.c0)>=(rt1.c4)))) AND (((- (rt1.c0)))))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON ((CASE WHEN rt1.c3 THEN rt1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt1.c3 THEN rt0.c2 ELSE '5\r 糪D-QP&' END) BETWEEN (((rt1.c1)&(rt0.c1))) AND (((rt1.c3) IS FALSE))));
SELECT * FROM rt1 CROSS JOIN rt0 ON ((CASE WHEN rt1.c3 THEN rt1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt1.c3 THEN rt0.c2 ELSE '5\r 糪D-QP&' END) BETWEEN (((rt1.c1)&(rt0.c1))) AND (((rt1.c3) IS FALSE))) WHERE ((((rt1.c1)) BETWEEN ((((rt0.c0)>=(rt1.c4)))) AND (((- (rt1.c0))))));
SELECT * FROM rt1 NATURAL JOIN vt1 WHERE (((((rt1.c0)IS(vt1.c2)))|(x''))) ORDER BY ((GLOB(rt1.c1, vt1.c1)) BETWEEN (vt1.c2 COLLATE RTRIM) AND (vt1.c2)) DESC  NULLS FIRST, (((NOT (0.01271126439693071)))IS(CASE WHEN rt1.c2 THEN 0.14977409918371076 ELSE vt1.c2 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)IS(vt1.c2)))|(x''))) IS TRUE)  as count FROM rt1 NATURAL JOIN vt1 ORDER BY ((GLOB(rt1.c1, vt1.c1)) BETWEEN (vt1.c2 COLLATE RTRIM) AND (vt1.c2)) DESC  NULLS FIRST, (((NOT (0.01271126439693071)))IS(CASE WHEN rt1.c2 THEN 0.14977409918371076 ELSE vt1.c2 END)) DESC  NULLS LAST);
SELECT * FROM rt1 NATURAL JOIN vt1 WHERE (((((rt1.c0)IS(vt1.c2)))|(x''))) ORDER BY ((GLOB(rt1.c1, vt1.c1)) BETWEEN (vt1.c2 COLLATE RTRIM) AND (vt1.c2)) DESC  NULLS FIRST, (((NOT (0.01271126439693071)))IS(CASE WHEN rt1.c2 THEN 0.14977409918371076 ELSE vt1.c2 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)IS(vt1.c2)))|(x''))) IS TRUE)  as count FROM rt1 NATURAL JOIN vt1 ORDER BY ((GLOB(rt1.c1, vt1.c1)) BETWEEN (vt1.c2 COLLATE RTRIM) AND (vt1.c2)) DESC  NULLS FIRST, (((NOT (0.01271126439693071)))IS(CASE WHEN rt1.c2 THEN 0.14977409918371076 ELSE vt1.c2 END)) DESC  NULLS LAST);
SELECT * FROM rt1 NATURAL JOIN vt1 WHERE (((((rt1.c0)IS(vt1.c2)))|(x''))) ORDER BY ((GLOB(rt1.c1, vt1.c1)) BETWEEN (vt1.c2 COLLATE RTRIM) AND (vt1.c2)) DESC  NULLS FIRST, (((NOT (0.01271126439693071)))IS(CASE WHEN rt1.c2 THEN 0.14977409918371076 ELSE vt1.c2 END)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE (vt1.c1);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((vt1.c0 IN ()))AND((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ()))AND((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((vt1.c0 IN ()))AND((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ()))AND((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((vt1.c0 IN ()))AND((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))));
SELECT ALL * FROM vt1, rt0, rt1 WHERE (((((((((((((((((((rt1.c2)AND(rt1.c2)))AND(rt0.c2)))OR(rt1.c3)))AND(rt1.c4)))AND(rt1.c3)))AND(vt1.c1)))OR(rt1.c1)))OR(rt0.c2))) NOT BETWEEN (rt1.c2 COLLATE NOCASE) AND ((vt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((((rt1.c2)AND(rt1.c2)))AND(rt0.c2)))OR(rt1.c3)))AND(rt1.c4)))AND(rt1.c3)))AND(vt1.c1)))OR(rt1.c1)))OR(rt0.c2))) NOT BETWEEN (rt1.c2 COLLATE NOCASE) AND ((vt1.c1 IN ())))) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT ALL * FROM vt1, rt0, rt1 WHERE (((((((((((((((((((rt1.c2)AND(rt1.c2)))AND(rt0.c2)))OR(rt1.c3)))AND(rt1.c4)))AND(rt1.c3)))AND(vt1.c1)))OR(rt1.c1)))OR(rt0.c2))) NOT BETWEEN (rt1.c2 COLLATE NOCASE) AND ((vt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((((rt1.c2)AND(rt1.c2)))AND(rt0.c2)))OR(rt1.c3)))AND(rt1.c4)))AND(rt1.c3)))AND(vt1.c1)))OR(rt1.c1)))OR(rt0.c2))) NOT BETWEEN (rt1.c2 COLLATE NOCASE) AND ((vt1.c1 IN ())))) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT ALL * FROM vt1, rt0, rt1 WHERE (((((((((((((((((((rt1.c2)AND(rt1.c2)))AND(rt0.c2)))OR(rt1.c3)))AND(rt1.c4)))AND(rt1.c3)))AND(vt1.c1)))OR(rt1.c1)))OR(rt0.c2))) NOT BETWEEN (rt1.c2 COLLATE NOCASE) AND ((vt1.c1 IN ()))));
SELECT * FROM rt1, vt1 WHERE (CASE vt1.c2 COLLATE RTRIM  WHEN (((vt1.c1, 0.06763802713361133, vt1.c1)) NOT BETWEEN ((rt1.c1, vt1.c1, rt1.c2)) AND ((0.0014400603899498154, vt1.c1, rt1.c4))) THEN x'' ELSE (((vt1.c1, rt1.c4, 0X674bda08))<=((vt1.c1, NULL, rt1.c1))) END) ORDER BY vt1.c2 ASC;
SELECT SUM(count) FROM (SELECT ((CASE vt1.c2 COLLATE RTRIM  WHEN (((vt1.c1, 0.06763802713361133, vt1.c1)) NOT BETWEEN ((rt1.c1, vt1.c1, rt1.c2)) AND ((0.0014400603899498154, vt1.c1, rt1.c4))) THEN x'' ELSE (((vt1.c1, rt1.c4, 0x674bda08))<=((vt1.c1, NULL, rt1.c1))) END) IS TRUE)  as count FROM rt1, vt1 ORDER BY vt1.c2 ASC);
SELECT * FROM rt1, vt1 WHERE (CASE vt1.c2 COLLATE RTRIM  WHEN (((vt1.c1, 0.06763802713361133, vt1.c1)) NOT BETWEEN ((rt1.c1, vt1.c1, rt1.c2)) AND ((0.0014400603899498154, vt1.c1, rt1.c4))) THEN x'' ELSE (((vt1.c1, rt1.c4, 0X674bda08))<=((vt1.c1, NULL, rt1.c1))) END) ORDER BY vt1.c2 ASC;
SELECT SUM(count) FROM (SELECT ((CASE vt1.c2 COLLATE RTRIM  WHEN (((vt1.c1, 0.06763802713361133, vt1.c1)) NOT BETWEEN ((rt1.c1, vt1.c1, rt1.c2)) AND ((0.0014400603899498154, vt1.c1, rt1.c4))) THEN x'' ELSE (((vt1.c1, rt1.c4, 0x674bda08))<=((vt1.c1, NULL, rt1.c1))) END) IS TRUE)  as count FROM rt1, vt1 ORDER BY vt1.c2 ASC);
SELECT * FROM rt1, vt1 WHERE (CASE vt1.c2 COLLATE RTRIM  WHEN (((vt1.c1, 0.06763802713361133, vt1.c1)) NOT BETWEEN ((rt1.c1, vt1.c1, rt1.c2)) AND ((0.0014400603899498154, vt1.c1, rt1.c4))) THEN x'' ELSE (((vt1.c1, rt1.c4, 0X674bda08))<=((vt1.c1, NULL, rt1.c1))) END) ORDER BY vt1.c2 ASC;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (((((rt0.c2)AND(rt0.c0)))AND(rt0.c1))) AND (((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (((((rt0.c2)AND(rt0.c0)))AND(rt0.c1))) AND (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (((((rt0.c2)AND(rt0.c0)))AND(rt0.c1))) AND (((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (((((rt0.c2)AND(rt0.c0)))AND(rt0.c1))) AND (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (((((rt0.c2)AND(rt0.c0)))AND(rt0.c1))) AND (((rt0.c1) IS TRUE))));
SELECT ALL * FROM rt1, rt0, vt1 WHERE (((((((((((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)))AND(CAST(rt0.c0 AS INTEGER))))AND(LIKELY(DISTINCT rt0.c2))))AND(CASE NULL  WHEN vt1.c0 THEN vt1.c2 END)))AND('hfgH#' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)))AND(CAST(rt0.c0 AS INTEGER))))AND(LIKELY(DISTINCT rt0.c2))))AND(CASE NULL  WHEN vt1.c0 THEN vt1.c2 END)))AND('hfgH#' COLLATE NOCASE))) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT ALL * FROM rt1, rt0, vt1 WHERE (((((((((((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)))AND(CAST(rt0.c0 AS INTEGER))))AND(LIKELY(DISTINCT rt0.c2))))AND(CASE NULL  WHEN vt1.c0 THEN vt1.c2 END)))AND('hfgH#' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)))AND(CAST(rt0.c0 AS INTEGER))))AND(LIKELY(DISTINCT rt0.c2))))AND(CASE NULL  WHEN vt1.c0 THEN vt1.c2 END)))AND('hfgH#' COLLATE NOCASE))) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT ALL * FROM rt1, rt0, vt1 WHERE (((((((((((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)))AND(CAST(rt0.c0 AS INTEGER))))AND(LIKELY(DISTINCT rt0.c2))))AND(CASE NULL  WHEN vt1.c0 THEN vt1.c2 END)))AND('hfgH#' COLLATE NOCASE)));
SELECT ALL * FROM rt1, vt1, rt0 WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL * FROM rt1, vt1, rt0 WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL * FROM rt1, vt1, rt0 WHERE (rt1.c4);
SELECT * FROM rt0 INNER JOIN rt1 ON ((1733024264) ISNULL) LEFT OUTER JOIN vt1 ON CAST((rt1.c4 IN (rt1.c3)) AS NUMERIC) WHERE (((+ (rt1.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (rt1.c3)) IN ())) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON ((1733024264) ISNULL) LEFT OUTER JOIN vt1 ON CAST((rt1.c4 IN (rt1.c3)) AS NUMERIC));
SELECT * FROM rt0 INNER JOIN rt1 ON ((1733024264) ISNULL) LEFT OUTER JOIN vt1 ON CAST((rt1.c4 IN (rt1.c3)) AS NUMERIC) WHERE (((+ (rt1.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (rt1.c3)) IN ())) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON ((1733024264) ISNULL) LEFT OUTER JOIN vt1 ON CAST((rt1.c4 IN (rt1.c3)) AS NUMERIC));
SELECT * FROM rt0 INNER JOIN rt1 ON ((1733024264) ISNULL) LEFT OUTER JOIN vt1 ON CAST((rt1.c4 IN (rt1.c3)) AS NUMERIC) WHERE (((+ (rt1.c3)) IN ()));
SELECT ALL * FROM vt1, rt1, rt0 WHERE (CAST(rt0.c2 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS BLOB)) IS TRUE)  as count FROM vt1, rt1, rt0);
SELECT ALL * FROM vt1, rt1, rt0 WHERE (CAST(rt0.c2 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS BLOB)) IS TRUE)  as count FROM vt1, rt1, rt0);
SELECT ALL * FROM vt1, rt1, rt0 WHERE (CAST(rt0.c2 AS BLOB));
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1, rt1);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1, rt1);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE ('');
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 IN (vt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 IN (vt1.c1)) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 IN (vt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 IN (vt1.c1)) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 IN (vt1.c1)) IN ()));
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((((NOT (rt0.c0)))OR(CAST(x'2f63' AS NUMERIC))))OR(rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (rt0.c0)))OR(CAST(x'2f63' AS NUMERIC))))OR(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((((NOT (rt0.c0)))OR(CAST(x'2f63' AS NUMERIC))))OR(rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (rt0.c0)))OR(CAST(x'2f63' AS NUMERIC))))OR(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((((NOT (rt0.c0)))OR(CAST(x'2f63' AS NUMERIC))))OR(rt0.c1 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt0 WHERE (COALESCE(DISTINCT rt0.c0, rt0.c2, rt0.c2, rt0.c0) COLLATE RTRIM) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT rt0.c0, rt0.c2, rt0.c2, rt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY NULL);
SELECT ALL COUNT(*) FROM rt0 WHERE (COALESCE(DISTINCT rt0.c0, rt0.c2, rt0.c2, rt0.c0) COLLATE RTRIM) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT rt0.c0, rt0.c2, rt0.c2, rt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY NULL);
SELECT ALL COUNT(*) FROM rt0 WHERE (COALESCE(DISTINCT rt0.c0, rt0.c2, rt0.c2, rt0.c0) COLLATE RTRIM) ORDER BY NULL;
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (vt1.c1);
SELECT COUNT(*) FROM rt1, vt1 WHERE (((CASE WHEN 'w抣iF' THEN rt1.c4 ELSE rt1.c3 END)|(((rt1.c2) NOTNULL)))) ORDER BY TRIM(CASE vt1.c2  WHEN 0.5955989657330669 THEN rt1.c2 ELSE rt1.c3 END) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN 'w抣iF' THEN rt1.c4 ELSE rt1.c3 END)|(((rt1.c2) NOTNULL)))) IS TRUE)  as count FROM rt1, vt1 ORDER BY TRIM(CASE vt1.c2  WHEN 0.5955989657330669 THEN rt1.c2 ELSE rt1.c3 END) DESC);
SELECT COUNT(*) FROM rt1, vt1 WHERE (((CASE WHEN 'w抣iF' THEN rt1.c4 ELSE rt1.c3 END)|(((rt1.c2) NOTNULL)))) ORDER BY TRIM(CASE vt1.c2  WHEN 0.5955989657330669 THEN rt1.c2 ELSE rt1.c3 END) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN 'w抣iF' THEN rt1.c4 ELSE rt1.c3 END)|(((rt1.c2) NOTNULL)))) IS TRUE)  as count FROM rt1, vt1 ORDER BY TRIM(CASE vt1.c2  WHEN 0.5955989657330669 THEN rt1.c2 ELSE rt1.c3 END) DESC);
SELECT COUNT(*) FROM rt1, vt1 WHERE (((CASE WHEN 'w抣iF' THEN rt1.c4 ELSE rt1.c3 END)|(((rt1.c2) NOTNULL)))) ORDER BY TRIM(CASE vt1.c2  WHEN 0.5955989657330669 THEN rt1.c2 ELSE rt1.c3 END) DESC;
SELECT COUNT(*) FROM rt1, vt1 WHERE ((- (rt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1, vt1);
SELECT COUNT(*) FROM rt1, vt1 WHERE ((- (rt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1, vt1);
SELECT COUNT(*) FROM rt1, vt1 WHERE ((- (rt1.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt1, rt0, rt1 WHERE ((TYPEOF(DISTINCT 0Xffffffffd52473d6) IN ())) ORDER BY (vt1.c2 IN ()) ASC, CAST(((rt0.c0)>>(rt0.c0)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((TYPEOF(DISTINCT 0xffffffffd52473d6) IN ())) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY (vt1.c2 IN ()) ASC, CAST(((rt0.c0)>>(rt0.c0)) AS REAL) DESC);
SELECT COUNT(*) FROM vt1, rt0, rt1 WHERE ((TYPEOF(DISTINCT 0Xffffffffd52473d6) IN ())) ORDER BY (vt1.c2 IN ()) ASC, CAST(((rt0.c0)>>(rt0.c0)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((TYPEOF(DISTINCT 0xffffffffd52473d6) IN ())) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY (vt1.c2 IN ()) ASC, CAST(((rt0.c0)>>(rt0.c0)) AS REAL) DESC);
SELECT COUNT(*) FROM vt1, rt0, rt1 WHERE ((TYPEOF(DISTINCT 0Xffffffffd52473d6) IN ())) ORDER BY (vt1.c2 IN ()) ASC, CAST(((rt0.c0)>>(rt0.c0)) AS REAL) DESC;
SELECT * FROM rt1 WHERE (((rt1.c2)>>(rt1.c0)) COLLATE RTRIM) ORDER BY (rt1.c1 COLLATE NOCASE IN ()) DESC, rt1.c3 ASC;
SELECT SUM(count) FROM (SELECT ((((rt1.c2)>>(rt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY (rt1.c1 COLLATE NOCASE IN ()) DESC, rt1.c3 ASC);
SELECT * FROM rt1 WHERE (((rt1.c2)>>(rt1.c0)) COLLATE RTRIM) ORDER BY (rt1.c1 COLLATE NOCASE IN ()) DESC, rt1.c3 ASC;
SELECT SUM(count) FROM (SELECT ((((rt1.c2)>>(rt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY (rt1.c1 COLLATE NOCASE IN ()) DESC, rt1.c3 ASC);
SELECT * FROM rt1 WHERE (((rt1.c2)>>(rt1.c0)) COLLATE RTRIM) ORDER BY (rt1.c1 COLLATE NOCASE IN ()) DESC, rt1.c3 ASC;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((rt0.c1)LIKE(rt1.c0)) COLLATE NOCASE) ORDER BY ((((CASE NULL  WHEN rt0.c1 THEN rt0.c1 END)AND(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))))AND(((rt1.c0) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)LIKE(rt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((CASE NULL  WHEN rt0.c1 THEN rt0.c1 END)AND(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))))AND(((rt1.c0) IS TRUE)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((rt0.c1)LIKE(rt1.c0)) COLLATE NOCASE) ORDER BY ((((CASE NULL  WHEN rt0.c1 THEN rt0.c1 END)AND(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))))AND(((rt1.c0) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)LIKE(rt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((CASE NULL  WHEN rt0.c1 THEN rt0.c1 END)AND(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))))AND(((rt1.c0) IS TRUE)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((rt0.c1)LIKE(rt1.c0)) COLLATE NOCASE) ORDER BY ((((CASE NULL  WHEN rt0.c1 THEN rt0.c1 END)AND(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))))AND(((rt1.c0) IS TRUE)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((((((((vt1.c2)AND(vt1.c2)))AND(vt1.c1)))AND(vt1.c2)))AND(vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt1.c2)AND(vt1.c2)))AND(vt1.c1)))AND(vt1.c2)))AND(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((((((((vt1.c2)AND(vt1.c2)))AND(vt1.c1)))AND(vt1.c2)))AND(vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt1.c2)AND(vt1.c2)))AND(vt1.c1)))AND(vt1.c2)))AND(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((((((((vt1.c2)AND(vt1.c2)))AND(vt1.c1)))AND(vt1.c2)))AND(vt1.c0)) AS INTEGER));
SELECT * FROM rt0 WHERE (TYPEOF(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (TYPEOF(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (TYPEOF(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))));
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE (LIKELY((NOT (vt1.c2)))) ORDER BY CAST(rt0.c2 COLLATE BINARY AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY((NOT (vt1.c2)))) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY CAST(rt0.c2 COLLATE BINARY AS REAL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE (LIKELY((NOT (vt1.c2)))) ORDER BY CAST(rt0.c2 COLLATE BINARY AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY((NOT (vt1.c2)))) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY CAST(rt0.c2 COLLATE BINARY AS REAL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE (LIKELY((NOT (vt1.c2)))) ORDER BY CAST(rt0.c2 COLLATE BINARY AS REAL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON ((rt1.c4)<=(((rt1.c3)>=(vt1.c0)))) LEFT OUTER JOIN vt1 ON (((((0x4625a8b))!=((rt1.c0))))GLOB(((((rt0.c2)OR(rt1.c1)))OR(rt1.c0)))) WHERE (rt1.c3) ORDER BY (NOT (((((((((((((rt1.c2)OR(rt0.c2)))OR(rt1.c1)))AND(vt1.c1)))AND('U&	~Wf')))OR(vt1.c2)))AND(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON ((rt1.c4)<=(((rt1.c3)>=(vt1.c0)))) LEFT OUTER JOIN vt1 ON (((((0X4625a8b))<>((rt1.c0))))GLOB(((((rt0.c2)OR(rt1.c1)))OR(rt1.c0)))) ORDER BY (NOT (((((((((((((rt1.c2)OR(rt0.c2)))OR(rt1.c1)))AND(vt1.c1)))AND('U&	~Wf')))OR(vt1.c2)))AND(rt0.c1)))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON ((rt1.c4)<=(((rt1.c3)>=(vt1.c0)))) LEFT OUTER JOIN vt1 ON (((((0x4625a8b))!=((rt1.c0))))GLOB(((((rt0.c2)OR(rt1.c1)))OR(rt1.c0)))) WHERE (rt1.c3) ORDER BY (NOT (((((((((((((rt1.c2)OR(rt0.c2)))OR(rt1.c1)))AND(vt1.c1)))AND('U&	~Wf')))OR(vt1.c2)))AND(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON ((rt1.c4)<=(((rt1.c3)>=(vt1.c0)))) LEFT OUTER JOIN vt1 ON (((((0X4625a8b))<>((rt1.c0))))GLOB(((((rt0.c2)OR(rt1.c1)))OR(rt1.c0)))) ORDER BY (NOT (((((((((((((rt1.c2)OR(rt0.c2)))OR(rt1.c1)))AND(vt1.c1)))AND('U&	~Wf')))OR(vt1.c2)))AND(rt0.c1)))));
SELECT * FROM vt1, rt1, rt0 WHERE (((rt1.c2 COLLATE RTRIM)%(((rt1.c4)>(rt1.c1))))) ORDER BY ((((rt1.c2) NOTNULL)) NOT BETWEEN (NULLIF(DISTINCT rt1.c2, rt0.c1)) AND (rt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE RTRIM)%(((rt1.c4)>(rt1.c1))))) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY ((((rt1.c2) NOTNULL)) NOT BETWEEN (NULLIF(DISTINCT rt1.c2, rt0.c1)) AND (rt0.c0 COLLATE NOCASE)));
SELECT * FROM vt1, rt1, rt0 WHERE (((rt1.c2 COLLATE RTRIM)%(((rt1.c4)>(rt1.c1))))) ORDER BY ((((rt1.c2) NOTNULL)) NOT BETWEEN (NULLIF(DISTINCT rt1.c2, rt0.c1)) AND (rt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE RTRIM)%(((rt1.c4)>(rt1.c1))))) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY ((((rt1.c2) NOTNULL)) NOT BETWEEN (NULLIF(DISTINCT rt1.c2, rt0.c1)) AND (rt0.c0 COLLATE NOCASE)));
SELECT * FROM vt1, rt1, rt0 WHERE (((rt1.c2 COLLATE RTRIM)%(((rt1.c4)>(rt1.c1))))) ORDER BY ((((rt1.c2) NOTNULL)) NOT BETWEEN (NULLIF(DISTINCT rt1.c2, rt0.c1)) AND (rt0.c0 COLLATE NOCASE));
SELECT ALL * FROM vt1 WHERE (0.9083892287284965);
SELECT SUM(count) FROM (SELECT ALL ((0.9083892287284965) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (0.9083892287284965);
SELECT SUM(count) FROM (SELECT ALL ((0.9083892287284965) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (0.9083892287284965);
SELECT * FROM vt1 RIGHT OUTER JOIN rt1 ON (((rt1.c3 IN ()))>>(((-1506016749)!=(rt1.c4)))) INNER JOIN rt0 ON (((rt1.c3 COLLATE BINARY))>(((- (rt1.c2))))) WHERE (CAST((- (vt1.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((- (vt1.c2)) AS REAL)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt1 ON (((rt1.c3 IN ()))>>(((-1506016749)<>(rt1.c4)))) INNER JOIN rt0 ON (((rt1.c3 COLLATE BINARY))>(((- (rt1.c2))))));
SELECT * FROM vt1 RIGHT OUTER JOIN rt1 ON (((rt1.c3 IN ()))>>(((-1506016749)!=(rt1.c4)))) INNER JOIN rt0 ON (((rt1.c3 COLLATE BINARY))>(((- (rt1.c2))))) WHERE (CAST((- (vt1.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((- (vt1.c2)) AS REAL)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt1 ON (((rt1.c3 IN ()))>>(((-1506016749)<>(rt1.c4)))) INNER JOIN rt0 ON (((rt1.c3 COLLATE BINARY))>(((- (rt1.c2))))));
SELECT * FROM vt1 RIGHT OUTER JOIN rt1 ON (((rt1.c3 IN ()))>>(((-1506016749)!=(rt1.c4)))) INNER JOIN rt0 ON (((rt1.c3 COLLATE BINARY))>(((- (rt1.c2))))) WHERE (CAST((- (vt1.c2)) AS REAL));
SELECT * FROM vt1, rt1, rt0 WHERE ((((rt1.c0, rt0.c2, rt1.c4)) NOT BETWEEN (('', ((NULL) NOT BETWEEN (NULL) AND (rt1.c0)), rt1.c4)) AND ((CAST(x'0b1c' AS NUMERIC), ((rt0.c1)>=(vt1.c0)), ((rt0.c0)+(vt1.c1)))))) ORDER BY (((~ (rt1.c3))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0, rt0.c2, rt1.c4)) NOT BETWEEN (('', ((NULL) NOT BETWEEN (NULL) AND (rt1.c0)), rt1.c4)) AND ((CAST(x'0b1c' AS NUMERIC), ((rt0.c1)>=(vt1.c0)), ((rt0.c0)+(vt1.c1)))))) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY (((~ (rt1.c3))) NOTNULL));
SELECT * FROM vt1, rt1, rt0 WHERE ((((rt1.c0, rt0.c2, rt1.c4)) NOT BETWEEN (('', ((NULL) NOT BETWEEN (NULL) AND (rt1.c0)), rt1.c4)) AND ((CAST(x'0b1c' AS NUMERIC), ((rt0.c1)>=(vt1.c0)), ((rt0.c0)+(vt1.c1)))))) ORDER BY (((~ (rt1.c3))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0, rt0.c2, rt1.c4)) NOT BETWEEN (('', ((NULL) NOT BETWEEN (NULL) AND (rt1.c0)), rt1.c4)) AND ((CAST(x'0b1c' AS NUMERIC), ((rt0.c1)>=(vt1.c0)), ((rt0.c0)+(vt1.c1)))))) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY (((~ (rt1.c3))) NOTNULL));
SELECT * FROM vt1, rt1, rt0 WHERE ((((rt1.c0, rt0.c2, rt1.c4)) NOT BETWEEN (('', ((NULL) NOT BETWEEN (NULL) AND (rt1.c0)), rt1.c4)) AND ((CAST(x'0b1c' AS NUMERIC), ((rt0.c1)>=(vt1.c0)), ((rt0.c0)+(vt1.c1)))))) ORDER BY (((~ (rt1.c3))) NOTNULL);
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON (((vt1.c0)) BETWEEN ((((vt1.c0)+(rt0.c1)))) AND ((((rt0.c2) BETWEEN (vt1.c2) AND (vt1.c2))))) WHERE (((((TRIM(DISTINCT NULL))OR(((rt0.c0) BETWEEN (vt1.c1) AND (vt1.c2)))))OR(((NULL)||(vt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((TRIM(DISTINCT NULL))OR(((rt0.c0) BETWEEN (vt1.c1) AND (vt1.c2)))))OR(((NULL)||(vt1.c2))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON (((vt1.c0)) BETWEEN ((((vt1.c0)+(rt0.c1)))) AND ((((rt0.c2) BETWEEN (vt1.c2) AND (vt1.c2))))));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON (((vt1.c0)) BETWEEN ((((vt1.c0)+(rt0.c1)))) AND ((((rt0.c2) BETWEEN (vt1.c2) AND (vt1.c2))))) WHERE (((((TRIM(DISTINCT NULL))OR(((rt0.c0) BETWEEN (vt1.c1) AND (vt1.c2)))))OR(((NULL)||(vt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((TRIM(DISTINCT NULL))OR(((rt0.c0) BETWEEN (vt1.c1) AND (vt1.c2)))))OR(((NULL)||(vt1.c2))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON (((vt1.c0)) BETWEEN ((((vt1.c0)+(rt0.c1)))) AND ((((rt0.c2) BETWEEN (vt1.c2) AND (vt1.c2))))));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON (((vt1.c0)) BETWEEN ((((vt1.c0)+(rt0.c1)))) AND ((((rt0.c2) BETWEEN (vt1.c2) AND (vt1.c2))))) WHERE (((((TRIM(DISTINCT NULL))OR(((rt0.c0) BETWEEN (vt1.c1) AND (vt1.c2)))))OR(((NULL)||(vt1.c2)))));
SELECT COUNT(*) FROM rt1, rt0 WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (rt1.c4);
SELECT ALL * FROM vt1, rt1, rt0 WHERE ((((((vt1.c1) ISNULL)))>=((((rt1.c2) BETWEEN (vt1.c2) AND (vt1.c2)))))) ORDER BY ((CASE rt1.c2  WHEN rt1.c3 THEN rt1.c2 ELSE vt1.c2 END)-(((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt1.c4)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1) ISNULL)))>=((((rt1.c2) BETWEEN (vt1.c2) AND (vt1.c2)))))) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY ((CASE rt1.c2  WHEN rt1.c3 THEN rt1.c2 ELSE vt1.c2 END)-(((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt1.c4)))) DESC);
SELECT ALL * FROM vt1, rt1, rt0 WHERE ((((((vt1.c1) ISNULL)))>=((((rt1.c2) BETWEEN (vt1.c2) AND (vt1.c2)))))) ORDER BY ((CASE rt1.c2  WHEN rt1.c3 THEN rt1.c2 ELSE vt1.c2 END)-(((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt1.c4)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1) ISNULL)))>=((((rt1.c2) BETWEEN (vt1.c2) AND (vt1.c2)))))) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY ((CASE rt1.c2  WHEN rt1.c3 THEN rt1.c2 ELSE vt1.c2 END)-(((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt1.c4)))) DESC);
SELECT ALL * FROM vt1, rt1, rt0 WHERE ((((((vt1.c1) ISNULL)))>=((((rt1.c2) BETWEEN (vt1.c2) AND (vt1.c2)))))) ORDER BY ((CASE rt1.c2  WHEN rt1.c3 THEN rt1.c2 ELSE vt1.c2 END)-(((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt1.c4)))) DESC;
SELECT ALL * FROM rt0, rt1, vt1 WHERE (CASE WHEN rt1.c2 COLLATE RTRIM THEN ((((rt0.c1)OR(rt0.c1)))OR(vt1.c1)) ELSE 0.19644588067241786 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c2 COLLATE RTRIM THEN ((((rt0.c1)OR(rt0.c1)))OR(vt1.c1)) ELSE 0.19644588067241786 COLLATE BINARY END) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT ALL * FROM rt0, rt1, vt1 WHERE (CASE WHEN rt1.c2 COLLATE RTRIM THEN ((((rt0.c1)OR(rt0.c1)))OR(vt1.c1)) ELSE 0.19644588067241786 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c2 COLLATE RTRIM THEN ((((rt0.c1)OR(rt0.c1)))OR(vt1.c1)) ELSE 0.19644588067241786 COLLATE BINARY END) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT ALL * FROM rt0, rt1, vt1 WHERE (CASE WHEN rt1.c2 COLLATE RTRIM THEN ((((rt0.c1)OR(rt0.c1)))OR(vt1.c1)) ELSE 0.19644588067241786 COLLATE BINARY END);
SELECT ALL * FROM rt0 WHERE (CAST((((rt0.c2))<>((rt0.c1))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c2))!=((rt0.c1))) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST((((rt0.c2))<>((rt0.c1))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c2))!=((rt0.c1))) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST((((rt0.c2))<>((rt0.c1))) AS INTEGER));
SELECT * FROM vt1 LEFT OUTER JOIN rt1 ON (((((vt1.c2) ISNULL)))<((x''))) INNER JOIN rt0 ON (((((vt1.c1)) BETWEEN ((rt0.c0)) AND ((vt1.c2))))GLOB((vt1.c2 IN ()))) WHERE (((((CASE rt1.c4  WHEN rt1.c4 THEN rt1.c1 ELSE rt1.c2 END)AND((rt0.c2 IN (rt0.c1)))))AND(rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt1.c4  WHEN rt1.c4 THEN rt1.c1 ELSE rt1.c2 END)AND((rt0.c2 IN (rt0.c1)))))AND(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt1 ON (((((vt1.c2) ISNULL)))<((x''))) INNER JOIN rt0 ON (((((vt1.c1)) BETWEEN ((rt0.c0)) AND ((vt1.c2))))GLOB((vt1.c2 IN ()))));
SELECT * FROM vt1 LEFT OUTER JOIN rt1 ON (((((vt1.c2) ISNULL)))<((x''))) INNER JOIN rt0 ON (((((vt1.c1)) BETWEEN ((rt0.c0)) AND ((vt1.c2))))GLOB((vt1.c2 IN ()))) WHERE (((((CASE rt1.c4  WHEN rt1.c4 THEN rt1.c1 ELSE rt1.c2 END)AND((rt0.c2 IN (rt0.c1)))))AND(rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt1.c4  WHEN rt1.c4 THEN rt1.c1 ELSE rt1.c2 END)AND((rt0.c2 IN (rt0.c1)))))AND(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt1 ON (((((vt1.c2) ISNULL)))<((x''))) INNER JOIN rt0 ON (((((vt1.c1)) BETWEEN ((rt0.c0)) AND ((vt1.c2))))GLOB((vt1.c2 IN ()))));
SELECT * FROM vt1 LEFT OUTER JOIN rt1 ON (((((vt1.c2) ISNULL)))<((x''))) INNER JOIN rt0 ON (((((vt1.c1)) BETWEEN ((rt0.c0)) AND ((vt1.c2))))GLOB((vt1.c2 IN ()))) WHERE (((((CASE rt1.c4  WHEN rt1.c4 THEN rt1.c1 ELSE rt1.c2 END)AND((rt0.c2 IN (rt0.c1)))))AND(rt0.c0 COLLATE NOCASE)));
SELECT * FROM rt1, rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)))LIKE((((rt1.c3, rt1.c2, rt0.c2))>=((rt0.c2, rt1.c2, rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)))LIKE((((rt1.c3, rt1.c2, rt0.c2))>=((rt0.c2, rt1.c2, rt1.c1)))))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)))LIKE((((rt1.c3, rt1.c2, rt0.c2))>=((rt0.c2, rt1.c2, rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)))LIKE((((rt1.c3, rt1.c2, rt0.c2))>=((rt0.c2, rt1.c2, rt1.c1)))))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)))LIKE((((rt1.c3, rt1.c2, rt0.c2))>=((rt0.c2, rt1.c2, rt1.c1))))));
SELECT COUNT(*) FROM vt1 WHERE (PRINTF(vt1.c0, vt1.c2, vt1.c1) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((PRINTF(vt1.c0, vt1.c2, vt1.c1) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (PRINTF(vt1.c0, vt1.c2, vt1.c1) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((PRINTF(vt1.c0, vt1.c2, vt1.c1) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (PRINTF(vt1.c0, vt1.c2, vt1.c1) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1, rt1, rt0 WHERE (((0.8558728665977895)>=(IFNULL(DISTINCT vt1.c0, vt1.c1))));
SELECT SUM(count) FROM (SELECT ((((0.8558728665977895)>=(IFNULL(DISTINCT vt1.c0, vt1.c1)))) IS TRUE)  as count FROM vt1, rt1, rt0);
SELECT COUNT(*) FROM vt1, rt1, rt0 WHERE (((0.8558728665977895)>=(IFNULL(DISTINCT vt1.c0, vt1.c1))));
SELECT SUM(count) FROM (SELECT ((((0.8558728665977895)>=(IFNULL(DISTINCT vt1.c0, vt1.c1)))) IS TRUE)  as count FROM vt1, rt1, rt0);
SELECT COUNT(*) FROM vt1, rt1, rt0 WHERE (((0.8558728665977895)>=(IFNULL(DISTINCT vt1.c0, vt1.c1))));
SELECT ALL * FROM rt0, rt1 WHERE ((~ (((rt0.c2) NOTNULL)))) ORDER BY ((x'958d')>>(rt1.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((x'958d')>>(rt1.c1)) COLLATE BINARY);
SELECT ALL * FROM rt0, rt1 WHERE ((~ (((rt0.c2) NOTNULL)))) ORDER BY ((x'958d')>>(rt1.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((x'958d')>>(rt1.c1)) COLLATE BINARY);
SELECT ALL * FROM rt0, rt1 WHERE ((~ (((rt0.c2) NOTNULL)))) ORDER BY ((x'958d')>>(rt1.c1)) COLLATE BINARY;
SELECT * FROM rt0, rt1 INNER JOIN vt1 ON CAST(CAST(x'aaae' AS REAL) AS TEXT) WHERE ((((rt0.c2 IN ()))IS NOT(vt1.c0 COLLATE BINARY))) ORDER BY ((((((((LIKELY(DISTINCT vt1.c2))OR((vt1.c2 IN ()))))AND(CASE WHEN rt1.c2 THEN rt0.c2 ELSE vt1.c1 END)))AND(((('', rt1.c0, rt0.c0)) NOT BETWEEN (('-1930626078', vt1.c0, vt1.c1)) AND ((rt0.c2, rt1.c3, NULL))))))AND(((vt1.c2) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ()))IS NOT(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, rt1 INNER JOIN vt1 ON CAST(CAST(x'aaae' AS REAL) AS TEXT) ORDER BY ((((((((LIKELY(DISTINCT vt1.c2))OR((vt1.c2 IN ()))))AND(CASE WHEN rt1.c2 THEN rt0.c2 ELSE vt1.c1 END)))AND(((('', rt1.c0, rt0.c0)) NOT BETWEEN (('-1930626078', vt1.c0, vt1.c1)) AND ((rt0.c2, rt1.c3, NULL))))))AND(((vt1.c2) ISNULL))));
SELECT * FROM rt0, rt1 INNER JOIN vt1 ON CAST(CAST(x'aaae' AS REAL) AS TEXT) WHERE ((((rt0.c2 IN ()))IS NOT(vt1.c0 COLLATE BINARY))) ORDER BY ((((((((LIKELY(DISTINCT vt1.c2))OR((vt1.c2 IN ()))))AND(CASE WHEN rt1.c2 THEN rt0.c2 ELSE vt1.c1 END)))AND(((('', rt1.c0, rt0.c0)) NOT BETWEEN (('-1930626078', vt1.c0, vt1.c1)) AND ((rt0.c2, rt1.c3, NULL))))))AND(((vt1.c2) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ()))IS NOT(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, rt1 INNER JOIN vt1 ON CAST(CAST(x'aaae' AS REAL) AS TEXT) ORDER BY ((((((((LIKELY(DISTINCT vt1.c2))OR((vt1.c2 IN ()))))AND(CASE WHEN rt1.c2 THEN rt0.c2 ELSE vt1.c1 END)))AND(((('', rt1.c0, rt0.c0)) NOT BETWEEN (('-1930626078', vt1.c0, vt1.c1)) AND ((rt0.c2, rt1.c3, NULL))))))AND(((vt1.c2) ISNULL))));
SELECT * FROM rt0, rt1 INNER JOIN vt1 ON CAST(CAST(x'aaae' AS REAL) AS TEXT) WHERE ((((rt0.c2 IN ()))IS NOT(vt1.c0 COLLATE BINARY))) ORDER BY ((((((((LIKELY(DISTINCT vt1.c2))OR((vt1.c2 IN ()))))AND(CASE WHEN rt1.c2 THEN rt0.c2 ELSE vt1.c1 END)))AND(((('', rt1.c0, rt0.c0)) NOT BETWEEN (('-1930626078', vt1.c0, vt1.c1)) AND ((rt0.c2, rt1.c3, NULL))))))AND(((vt1.c2) ISNULL)));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN vt1.c2 THEN vt1.c1 ELSE rt0.c0 END COLLATE NOCASE) ORDER BY CASE CAST(rt0.c1 AS INTEGER)  WHEN ((vt1.c1) IS FALSE) THEN ((vt1.c0) NOT BETWEEN (vt1.c2) AND (rt0.c1)) ELSE ((vt1.c0)GLOB(vt1.c1)) END;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c2 THEN vt1.c1 ELSE rt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE CAST(rt0.c1 AS INTEGER)  WHEN ((vt1.c1) IS FALSE) THEN ((vt1.c0) NOT BETWEEN (vt1.c2) AND (rt0.c1)) ELSE ((vt1.c0)GLOB(vt1.c1)) END);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN vt1.c2 THEN vt1.c1 ELSE rt0.c0 END COLLATE NOCASE) ORDER BY CASE CAST(rt0.c1 AS INTEGER)  WHEN ((vt1.c1) IS FALSE) THEN ((vt1.c0) NOT BETWEEN (vt1.c2) AND (rt0.c1)) ELSE ((vt1.c0)GLOB(vt1.c1)) END;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c2 THEN vt1.c1 ELSE rt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE CAST(rt0.c1 AS INTEGER)  WHEN ((vt1.c1) IS FALSE) THEN ((vt1.c0) NOT BETWEEN (vt1.c2) AND (rt0.c1)) ELSE ((vt1.c0)GLOB(vt1.c1)) END);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN vt1.c2 THEN vt1.c1 ELSE rt0.c0 END COLLATE NOCASE) ORDER BY CASE CAST(rt0.c1 AS INTEGER)  WHEN ((vt1.c1) IS FALSE) THEN ((vt1.c0) NOT BETWEEN (vt1.c2) AND (rt0.c1)) ELSE ((vt1.c0)GLOB(vt1.c1)) END;
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (CAST((+ (rt1.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt1.c2)) AS INTEGER)) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (CAST((+ (rt1.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt1.c2)) AS INTEGER)) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (CAST((+ (rt1.c2)) AS INTEGER));
SELECT * FROM vt1, rt0, rt1 WHERE ((((rt0.c2)||(vt1.c0)) IN ())) ORDER BY rt1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)||(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY rt1.c2  NULLS FIRST);
SELECT * FROM vt1, rt0, rt1 WHERE ((((rt0.c2)||(vt1.c0)) IN ())) ORDER BY rt1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)||(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY rt1.c2  NULLS FIRST);
SELECT * FROM vt1, rt0, rt1 WHERE ((((rt0.c2)||(vt1.c0)) IN ())) ORDER BY rt1.c2  NULLS FIRST;
SELECT * FROM rt1 WHERE (0.5238665057682711) ORDER BY json_quote(rt1.c0)  NULLS FIRST, SQLITE_VERSION() ASC  NULLS LAST, (((- (rt1.c2))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((0.5238665057682711) IS TRUE)  as count FROM rt1 ORDER BY json_quote(rt1.c0)  NULLS FIRST, SQLITE_VERSION() ASC  NULLS LAST, (((- (rt1.c2))) ISNULL) ASC);
SELECT * FROM rt1 WHERE (0.5238665057682711) ORDER BY json_quote(rt1.c0)  NULLS FIRST, SQLITE_VERSION() ASC  NULLS LAST, (((- (rt1.c2))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((0.5238665057682711) IS TRUE)  as count FROM rt1 ORDER BY json_quote(rt1.c0)  NULLS FIRST, SQLITE_VERSION() ASC  NULLS LAST, (((- (rt1.c2))) ISNULL) ASC);
SELECT * FROM rt1 WHERE (0.5238665057682711) ORDER BY json_quote(rt1.c0)  NULLS FIRST, SQLITE_VERSION() ASC  NULLS LAST, (((- (rt1.c2))) ISNULL) ASC;
SELECT * FROM vt1, rt0, rt1 WHERE (((((rt0.c0) BETWEEN (rt1.c3) AND (rt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (rt1.c3) AND (rt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT * FROM vt1, rt0, rt1 WHERE (((((rt0.c0) BETWEEN (rt1.c3) AND (rt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (rt1.c3) AND (rt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT * FROM vt1, rt0, rt1 WHERE (((((rt0.c0) BETWEEN (rt1.c3) AND (rt0.c1))) NOTNULL));
SELECT * FROM vt1 CROSS JOIN rt1 ON ((((('292960890')) NOT BETWEEN ((rt1.c0)) AND ((rt1.c3)))) NOT NULL) WHERE (CAST(0.4042661555501127 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(0.4042661555501127 AS REAL)) IS TRUE)  as count FROM vt1 CROSS JOIN rt1 ON ((((('292960890')) NOT BETWEEN ((rt1.c0)) AND ((rt1.c3)))) NOT NULL));
SELECT * FROM vt1 CROSS JOIN rt1 ON ((((('292960890')) NOT BETWEEN ((rt1.c0)) AND ((rt1.c3)))) NOT NULL) WHERE (CAST(0.4042661555501127 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(0.4042661555501127 AS REAL)) IS TRUE)  as count FROM vt1 CROSS JOIN rt1 ON ((((('292960890')) NOT BETWEEN ((rt1.c0)) AND ((rt1.c3)))) NOT NULL));
SELECT * FROM vt1 CROSS JOIN rt1 ON ((((('292960890')) NOT BETWEEN ((rt1.c0)) AND ((rt1.c3)))) NOT NULL) WHERE (CAST(0.4042661555501127 AS REAL));
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE (((((rt1.c0) BETWEEN (rt0.c1) AND ('^W')))<>((((rt1.c3, vt1.c0, rt1.c2))==((rt0.c2, rt1.c4, rt1.c3))))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) BETWEEN (rt0.c1) AND ('^W')))!=((((rt1.c3, vt1.c0, rt1.c2))==((rt0.c2, rt1.c4, rt1.c3)))))) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE (((((rt1.c0) BETWEEN (rt0.c1) AND ('^W')))<>((((rt1.c3, vt1.c0, rt1.c2))==((rt0.c2, rt1.c4, rt1.c3))))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) BETWEEN (rt0.c1) AND ('^W')))!=((((rt1.c3, vt1.c0, rt1.c2))==((rt0.c2, rt1.c4, rt1.c3)))))) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE (((((rt1.c0) BETWEEN (rt0.c1) AND ('^W')))<>((((rt1.c3, vt1.c0, rt1.c2))==((rt0.c2, rt1.c4, rt1.c3))))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c1)OR(vt1.c1)))AND(0.2733330128697321)))*(vt1.c2)));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1)OR(vt1.c1)))AND(0.2733330128697321)))*(vt1.c2))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c1)OR(vt1.c1)))AND(0.2733330128697321)))*(vt1.c2)));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1)OR(vt1.c1)))AND(0.2733330128697321)))*(vt1.c2))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c1)OR(vt1.c1)))AND(0.2733330128697321)))*(vt1.c2)));
SELECT * FROM rt0 NATURAL JOIN vt1 WHERE (((vt1.c0) BETWEEN (vt1.c1) AND (rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN (vt1.c1) AND (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 NOT INDEXED NATURAL JOIN vt1);
SELECT * FROM rt0 NATURAL JOIN vt1 WHERE (((vt1.c0) BETWEEN (vt1.c1) AND (rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN (vt1.c1) AND (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 NOT INDEXED NATURAL JOIN vt1);
SELECT * FROM rt0 NATURAL JOIN vt1 WHERE (((vt1.c0) BETWEEN (vt1.c1) AND (rt0.c2)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE (ABS((~ (rt0.c1)))) ORDER BY rt1.c4  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ABS((~ (rt0.c1)))) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY rt1.c4  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE (ABS((~ (rt0.c1)))) ORDER BY rt1.c4  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ABS((~ (rt0.c1)))) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY rt1.c4  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE (ABS((~ (rt0.c1)))) ORDER BY rt1.c4  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((rt0.c2))<=((rt0.c1)))) NOTNULL)) ORDER BY (~ (((vt1.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))<=((rt0.c1)))) NOTNULL)) IS TRUE)  as count FROM vt1, rt0 ORDER BY (~ (((vt1.c0) NOT NULL))) ASC);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((rt0.c2))<=((rt0.c1)))) NOTNULL)) ORDER BY (~ (((vt1.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))<=((rt0.c1)))) NOTNULL)) IS TRUE)  as count FROM vt1, rt0 ORDER BY (~ (((vt1.c0) NOT NULL))) ASC);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((rt0.c2))<=((rt0.c1)))) NOTNULL)) ORDER BY (~ (((vt1.c0) NOT NULL))) ASC;
SELECT ALL COUNT(*) FROM vt1, rt1, rt0 WHERE ((NOT (CAST(vt1.c0 AS NUMERIC)))) ORDER BY '';
SELECT SUM(count) FROM (SELECT (((NOT (CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY '');
SELECT ALL COUNT(*) FROM vt1, rt1, rt0 WHERE ((NOT (CAST(vt1.c0 AS NUMERIC)))) ORDER BY '';
SELECT SUM(count) FROM (SELECT (((NOT (CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY '');
SELECT ALL COUNT(*) FROM vt1, rt1, rt0 WHERE ((NOT (CAST(vt1.c0 AS NUMERIC)))) ORDER BY '';
SELECT ALL * FROM rt0, rt1, vt1 WHERE (((((((((vt1.c1)OR(vt1.c1)))AND(vt1.c1)))OR(rt0.c1)))OR(rt1.c4)) COLLATE BINARY) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c1)OR(vt1.c1)))AND(vt1.c1)))OR(rt0.c1)))OR(rt1.c4)) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY rt0.c2 ASC);
SELECT ALL * FROM rt0, rt1, vt1 WHERE (((((((((vt1.c1)OR(vt1.c1)))AND(vt1.c1)))OR(rt0.c1)))OR(rt1.c4)) COLLATE BINARY) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c1)OR(vt1.c1)))AND(vt1.c1)))OR(rt0.c1)))OR(rt1.c4)) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY rt0.c2 ASC);
SELECT ALL * FROM rt0, rt1, vt1 WHERE (((((((((vt1.c1)OR(vt1.c1)))AND(vt1.c1)))OR(rt0.c1)))OR(rt1.c4)) COLLATE BINARY) ORDER BY rt0.c2 ASC;
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt1 ON ((((vt1.c1)AND(rt1.c4)))OR(rt1.c2)) COLLATE BINARY RIGHT OUTER JOIN rt0 ON ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE RTRIM WHERE (CASE WHEN vt1.c0 THEN CAST(rt0.c0 AS BLOB) WHEN json_valid(rt1.c0) THEN ((rt0.c0) NOT BETWEEN (vt1.c1) AND (rt1.c1)) WHEN rt1.c2 THEN CASE rt1.c0  WHEN rt1.c4 THEN rt1.c4 END END) ORDER BY CASE vt1.c0  WHEN x'' THEN vt1.c2 END COLLATE RTRIM ASC, ((((rt1.c4)GLOB('D*')))AND(CAST(vt1.c0 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c0 THEN CAST(rt0.c0 AS BLOB) WHEN json_valid(rt1.c0) THEN ((rt0.c0) NOT BETWEEN (vt1.c1) AND (rt1.c1)) WHEN rt1.c2 THEN CASE rt1.c0  WHEN rt1.c4 THEN rt1.c4 END END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt1 ON ((((vt1.c1)AND(rt1.c4)))OR(rt1.c2)) COLLATE BINARY RIGHT OUTER JOIN rt0 ON ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE RTRIM ORDER BY CASE vt1.c0  WHEN x'' THEN vt1.c2 END COLLATE RTRIM ASC, ((((rt1.c4)GLOB('D*')))AND(CAST(vt1.c0 AS TEXT))) DESC);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt1 ON ((((vt1.c1)AND(rt1.c4)))OR(rt1.c2)) COLLATE BINARY RIGHT OUTER JOIN rt0 ON ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE RTRIM WHERE (CASE WHEN vt1.c0 THEN CAST(rt0.c0 AS BLOB) WHEN json_valid(rt1.c0) THEN ((rt0.c0) NOT BETWEEN (vt1.c1) AND (rt1.c1)) WHEN rt1.c2 THEN CASE rt1.c0  WHEN rt1.c4 THEN rt1.c4 END END) ORDER BY CASE vt1.c0  WHEN x'' THEN vt1.c2 END COLLATE RTRIM ASC, ((((rt1.c4)GLOB('D*')))AND(CAST(vt1.c0 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c0 THEN CAST(rt0.c0 AS BLOB) WHEN json_valid(rt1.c0) THEN ((rt0.c0) NOT BETWEEN (vt1.c1) AND (rt1.c1)) WHEN rt1.c2 THEN CASE rt1.c0  WHEN rt1.c4 THEN rt1.c4 END END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt1 ON ((((vt1.c1)AND(rt1.c4)))OR(rt1.c2)) COLLATE BINARY RIGHT OUTER JOIN rt0 ON ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE RTRIM ORDER BY CASE vt1.c0  WHEN x'' THEN vt1.c2 END COLLATE RTRIM ASC, ((((rt1.c4)GLOB('D*')))AND(CAST(vt1.c0 AS TEXT))) DESC);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt1 ON ((((vt1.c1)AND(rt1.c4)))OR(rt1.c2)) COLLATE BINARY RIGHT OUTER JOIN rt0 ON ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE RTRIM WHERE (CASE WHEN vt1.c0 THEN CAST(rt0.c0 AS BLOB) WHEN json_valid(rt1.c0) THEN ((rt0.c0) NOT BETWEEN (vt1.c1) AND (rt1.c1)) WHEN rt1.c2 THEN CASE rt1.c0  WHEN rt1.c4 THEN rt1.c4 END END) ORDER BY CASE vt1.c0  WHEN x'' THEN vt1.c2 END COLLATE RTRIM ASC, ((((rt1.c4)GLOB('D*')))AND(CAST(vt1.c0 AS TEXT))) DESC;
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON (((rt1.c3) BETWEEN (rt0.c1) AND (rt1.c4)) IN ()) WHERE ((~ ((('*K%') IS FALSE)))) ORDER BY ((((rt0.c2) NOTNULL)) BETWEEN (((rt1.c0)%(rt1.c3))) AND (CASE rt0.c0  WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c1 WHEN rt0.c0 THEN rt0.c2 ELSE 0x21a66299 END))  NULLS FIRST, (((rt1.c4)<=(rt0.c2)) IN (((rt1.c4)LIKE(rt1.c4)))) ASC;
SELECT SUM(count) FROM (SELECT (((~ ((('*K%') IS FALSE)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON (((rt1.c3) BETWEEN (rt0.c1) AND (rt1.c4)) IN ()) ORDER BY ((((rt0.c2) NOTNULL)) BETWEEN (((rt1.c0)%(rt1.c3))) AND (CASE rt0.c0  WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c1 WHEN rt0.c0 THEN rt0.c2 ELSE 0X21a66299 END))  NULLS FIRST, (((rt1.c4)<=(rt0.c2)) IN (((rt1.c4)LIKE(rt1.c4)))) ASC);
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON (((rt1.c3) BETWEEN (rt0.c1) AND (rt1.c4)) IN ()) WHERE ((~ ((('*K%') IS FALSE)))) ORDER BY ((((rt0.c2) NOTNULL)) BETWEEN (((rt1.c0)%(rt1.c3))) AND (CASE rt0.c0  WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c1 WHEN rt0.c0 THEN rt0.c2 ELSE 0x21a66299 END))  NULLS FIRST, (((rt1.c4)<=(rt0.c2)) IN (((rt1.c4)LIKE(rt1.c4)))) ASC;
SELECT SUM(count) FROM (SELECT (((~ ((('*K%') IS FALSE)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON (((rt1.c3) BETWEEN (rt0.c1) AND (rt1.c4)) IN ()) ORDER BY ((((rt0.c2) NOTNULL)) BETWEEN (((rt1.c0)%(rt1.c3))) AND (CASE rt0.c0  WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c1 WHEN rt0.c0 THEN rt0.c2 ELSE 0X21a66299 END))  NULLS FIRST, (((rt1.c4)<=(rt0.c2)) IN (((rt1.c4)LIKE(rt1.c4)))) ASC);
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON (((rt1.c3) BETWEEN (rt0.c1) AND (rt1.c4)) IN ()) WHERE ((~ ((('*K%') IS FALSE)))) ORDER BY ((((rt0.c2) NOTNULL)) BETWEEN (((rt1.c0)%(rt1.c3))) AND (CASE rt0.c0  WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c1 WHEN rt0.c0 THEN rt0.c2 ELSE 0x21a66299 END))  NULLS FIRST, (((rt1.c4)<=(rt0.c2)) IN (((rt1.c4)LIKE(rt1.c4)))) ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT COUNT(*) FROM vt1, rt1, rt0 WHERE (LIKELY(rt1.c0)) ORDER BY (LIKELIHOOD(DISTINCT rt0.c0, 0.27266666263919637) IN ()) DESC, NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(rt1.c0)) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY (LIKELIHOOD(DISTINCT rt0.c0, 0.27266666263919637) IN ()) DESC, NULL DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt1, rt0 WHERE (LIKELY(rt1.c0)) ORDER BY (LIKELIHOOD(DISTINCT rt0.c0, 0.27266666263919637) IN ()) DESC, NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(rt1.c0)) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY (LIKELIHOOD(DISTINCT rt0.c0, 0.27266666263919637) IN ()) DESC, NULL DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt1, rt0 WHERE (LIKELY(rt1.c0)) ORDER BY (LIKELIHOOD(DISTINCT rt0.c0, 0.27266666263919637) IN ()) DESC, NULL DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (CASE WHEN (('0.4285615545134934') IS FALSE) THEN UNLIKELY(DISTINCT rt0.c0) ELSE (+ (rt0.c2)) END) ORDER BY (((CAST(x'9db5' AS REAL)))<=((((rt0.c0)%(rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (('0.4285615545134934') IS FALSE) THEN UNLIKELY(DISTINCT rt0.c0) ELSE (+ (rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY (((CAST(x'9db5' AS REAL)))<=((((rt0.c0)%(rt0.c2)))))  NULLS FIRST);
SELECT * FROM rt0 WHERE (CASE WHEN (('0.4285615545134934') IS FALSE) THEN UNLIKELY(DISTINCT rt0.c0) ELSE (+ (rt0.c2)) END) ORDER BY (((CAST(x'9db5' AS REAL)))<=((((rt0.c0)%(rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (('0.4285615545134934') IS FALSE) THEN UNLIKELY(DISTINCT rt0.c0) ELSE (+ (rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY (((CAST(x'9db5' AS REAL)))<=((((rt0.c0)%(rt0.c2)))))  NULLS FIRST);
SELECT * FROM rt0 WHERE (CASE WHEN (('0.4285615545134934') IS FALSE) THEN UNLIKELY(DISTINCT rt0.c0) ELSE (+ (rt0.c2)) END) ORDER BY (((CAST(x'9db5' AS REAL)))<=((((rt0.c0)%(rt0.c2)))))  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0 WHERE (((LIKELY(0.7119328302125805)) NOT BETWEEN ((- (vt1.c2))) AND (((vt1.c2) ISNULL)))) ORDER BY CAST(SUBSTR(rt0.c1, rt0.c0) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((LIKELY(0.7119328302125805)) NOT BETWEEN ((- (vt1.c2))) AND (((vt1.c2) ISNULL)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(SUBSTR(rt0.c1, rt0.c0) AS TEXT));
SELECT COUNT(*) FROM vt1, rt0 WHERE (((LIKELY(0.7119328302125805)) NOT BETWEEN ((- (vt1.c2))) AND (((vt1.c2) ISNULL)))) ORDER BY CAST(SUBSTR(rt0.c1, rt0.c0) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((LIKELY(0.7119328302125805)) NOT BETWEEN ((- (vt1.c2))) AND (((vt1.c2) ISNULL)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(SUBSTR(rt0.c1, rt0.c0) AS TEXT));
SELECT COUNT(*) FROM vt1, rt0 WHERE (((LIKELY(0.7119328302125805)) NOT BETWEEN ((- (vt1.c2))) AND (((vt1.c2) ISNULL)))) ORDER BY CAST(SUBSTR(rt0.c1, rt0.c0) AS TEXT);
SELECT COUNT(*) FROM rt0 WHERE (LIKELY(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((LIKELY(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (LIKELY(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((LIKELY(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (LIKELY(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c2) ORDER BY CAST(COALESCE(vt1.c2, vt1.c1, vt1.c0, vt1.c0) AS BLOB), ((((vt1.c0)IS(vt1.c1)))AND(((vt1.c1)GLOB(vt1.c1))))  NULLS LAST, (((vt1.c0, vt1.c2, 0.8558728665977895)) BETWEEN ((vt1.c2, vt1.c2, vt1.c0)) AND ((vt1.c2, vt1.c0, vt1.c0))) COLLATE NOCASE COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM vt1 ORDER BY CAST(COALESCE(vt1.c2, vt1.c1, vt1.c0, vt1.c0) AS BLOB), ((((vt1.c0)IS(vt1.c1)))AND(((vt1.c1)GLOB(vt1.c1))))  NULLS LAST, (((vt1.c0, vt1.c2, 0.8558728665977895)) BETWEEN ((vt1.c2, vt1.c2, vt1.c0)) AND ((vt1.c2, vt1.c0, vt1.c0))) COLLATE NOCASE COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c2) ORDER BY CAST(COALESCE(vt1.c2, vt1.c1, vt1.c0, vt1.c0) AS BLOB), ((((vt1.c0)IS(vt1.c1)))AND(((vt1.c1)GLOB(vt1.c1))))  NULLS LAST, (((vt1.c0, vt1.c2, 0.8558728665977895)) BETWEEN ((vt1.c2, vt1.c2, vt1.c0)) AND ((vt1.c2, vt1.c0, vt1.c0))) COLLATE NOCASE COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM vt1 ORDER BY CAST(COALESCE(vt1.c2, vt1.c1, vt1.c0, vt1.c0) AS BLOB), ((((vt1.c0)IS(vt1.c1)))AND(((vt1.c1)GLOB(vt1.c1))))  NULLS LAST, (((vt1.c0, vt1.c2, 0.8558728665977895)) BETWEEN ((vt1.c2, vt1.c2, vt1.c0)) AND ((vt1.c2, vt1.c0, vt1.c0))) COLLATE NOCASE COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c2) ORDER BY CAST(COALESCE(vt1.c2, vt1.c1, vt1.c0, vt1.c0) AS BLOB), ((((vt1.c0)IS(vt1.c1)))AND(((vt1.c1)GLOB(vt1.c1))))  NULLS LAST, (((vt1.c0, vt1.c2, 0.8558728665977895)) BETWEEN ((vt1.c2, vt1.c2, vt1.c0)) AND ((vt1.c2, vt1.c0, vt1.c0))) COLLATE NOCASE COLLATE RTRIM DESC;
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE (((rt1.c1 COLLATE NOCASE)AND((+ (rt1.c3))))) ORDER BY ((((((((((rt0.c0) NOT BETWEEN (vt1.c1) AND (rt0.c2)))AND(((rt1.c4) IS TRUE))))OR((rt0.c2 IN ()))))AND(((rt0.c0)/(rt1.c4)))))AND(((rt1.c0)*(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 COLLATE NOCASE)AND((+ (rt1.c3))))) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY ((((((((((rt0.c0) NOT BETWEEN (vt1.c1) AND (rt0.c2)))AND(((rt1.c4) IS TRUE))))OR((rt0.c2 IN ()))))AND(((rt0.c0)/(rt1.c4)))))AND(((rt1.c0)*(vt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE (((rt1.c1 COLLATE NOCASE)AND((+ (rt1.c3))))) ORDER BY ((((((((((rt0.c0) NOT BETWEEN (vt1.c1) AND (rt0.c2)))AND(((rt1.c4) IS TRUE))))OR((rt0.c2 IN ()))))AND(((rt0.c0)/(rt1.c4)))))AND(((rt1.c0)*(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 COLLATE NOCASE)AND((+ (rt1.c3))))) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY ((((((((((rt0.c0) NOT BETWEEN (vt1.c1) AND (rt0.c2)))AND(((rt1.c4) IS TRUE))))OR((rt0.c2 IN ()))))AND(((rt0.c0)/(rt1.c4)))))AND(((rt1.c0)*(vt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE (((rt1.c1 COLLATE NOCASE)AND((+ (rt1.c3))))) ORDER BY ((((((((((rt0.c0) NOT BETWEEN (vt1.c1) AND (rt0.c2)))AND(((rt1.c4) IS TRUE))))OR((rt0.c2 IN ()))))AND(((rt0.c0)/(rt1.c4)))))AND(((rt1.c0)*(vt1.c0)))) DESC;
SELECT * FROM vt1 WHERE ((- (((vt1.c2)IS(vt1.c0))))) ORDER BY 0.9824128766311655  NULLS FIRST, (((((~ (NULL)))OR(CAST(0.30525966603614085 AS BLOB))))AND(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT (((- (((vt1.c2)IS(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY 0.9824128766311655  NULLS FIRST, (((((~ (NULL)))OR(CAST(0.30525966603614085 AS BLOB))))AND(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c2 END)) DESC);
SELECT * FROM vt1 WHERE ((- (((vt1.c2)IS(vt1.c0))))) ORDER BY 0.9824128766311655  NULLS FIRST, (((((~ (NULL)))OR(CAST(0.30525966603614085 AS BLOB))))AND(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT (((- (((vt1.c2)IS(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY 0.9824128766311655  NULLS FIRST, (((((~ (NULL)))OR(CAST(0.30525966603614085 AS BLOB))))AND(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c2 END)) DESC);
SELECT * FROM vt1 WHERE ((- (((vt1.c2)IS(vt1.c0))))) ORDER BY 0.9824128766311655  NULLS FIRST, (((((~ (NULL)))OR(CAST(0.30525966603614085 AS BLOB))))AND(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c2 END)) DESC;
SELECT ALL * FROM vt1 WHERE (rtreenode((((vt1.c1, vt1.c0, vt1.c0, vt1.c0, vt1.c2)) NOT BETWEEN ((vt1.c2, vt1.c0, vt1.c1, '0.5051508855403449', vt1.c2)) AND ((vt1.c2, vt1.c2, vt1.c2, vt1.c1, vt1.c0))), ((((vt1.c0)OR(vt1.c1)))AND('-495006217')))) ORDER BY CAST(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c2)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rtreenode((((vt1.c1, vt1.c0, vt1.c0, vt1.c0, vt1.c2)) NOT BETWEEN ((vt1.c2, vt1.c0, vt1.c1, '0.5051508855403449', vt1.c2)) AND ((vt1.c2, vt1.c2, vt1.c2, vt1.c1, vt1.c0))), ((((vt1.c0)OR(vt1.c1)))AND('-495006217')))) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c2)) AS NUMERIC)  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (rtreenode((((vt1.c1, vt1.c0, vt1.c0, vt1.c0, vt1.c2)) NOT BETWEEN ((vt1.c2, vt1.c0, vt1.c1, '0.5051508855403449', vt1.c2)) AND ((vt1.c2, vt1.c2, vt1.c2, vt1.c1, vt1.c0))), ((((vt1.c0)OR(vt1.c1)))AND('-495006217')))) ORDER BY CAST(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c2)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rtreenode((((vt1.c1, vt1.c0, vt1.c0, vt1.c0, vt1.c2)) NOT BETWEEN ((vt1.c2, vt1.c0, vt1.c1, '0.5051508855403449', vt1.c2)) AND ((vt1.c2, vt1.c2, vt1.c2, vt1.c1, vt1.c0))), ((((vt1.c0)OR(vt1.c1)))AND('-495006217')))) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c2)) AS NUMERIC)  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (rtreenode((((vt1.c1, vt1.c0, vt1.c0, vt1.c0, vt1.c2)) NOT BETWEEN ((vt1.c2, vt1.c0, vt1.c1, '0.5051508855403449', vt1.c2)) AND ((vt1.c2, vt1.c2, vt1.c2, vt1.c1, vt1.c0))), ((((vt1.c0)OR(vt1.c1)))AND('-495006217')))) ORDER BY CAST(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c2)) AS NUMERIC)  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)%(rt0.c0)))LIKE(((rt0.c2) IS TRUE)))) ORDER BY ((((rt0.c2)==(rt0.c1))) NOT BETWEEN (CASE WHEN rt0.c0 THEN -1459466446 ELSE rt0.c2 END) AND (((rt0.c1)+(rt0.c0)))) DESC, rt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)%(rt0.c0)))LIKE(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)=(rt0.c1))) NOT BETWEEN (CASE WHEN rt0.c0 THEN -1459466446 ELSE rt0.c2 END) AND (((rt0.c1)+(rt0.c0)))) DESC, rt0.c1 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)%(rt0.c0)))LIKE(((rt0.c2) IS TRUE)))) ORDER BY ((((rt0.c2)==(rt0.c1))) NOT BETWEEN (CASE WHEN rt0.c0 THEN -1459466446 ELSE rt0.c2 END) AND (((rt0.c1)+(rt0.c0)))) DESC, rt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)%(rt0.c0)))LIKE(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)=(rt0.c1))) NOT BETWEEN (CASE WHEN rt0.c0 THEN -1459466446 ELSE rt0.c2 END) AND (((rt0.c1)+(rt0.c0)))) DESC, rt0.c1 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)%(rt0.c0)))LIKE(((rt0.c2) IS TRUE)))) ORDER BY ((((rt0.c2)==(rt0.c1))) NOT BETWEEN (CASE WHEN rt0.c0 THEN -1459466446 ELSE rt0.c2 END) AND (((rt0.c1)+(rt0.c0)))) DESC, rt0.c1 DESC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (((rt1.c4)-(rt1.c0)) COLLATE NOCASE) ORDER BY ((((((((((rt1.c1)AND(rt1.c1)))OR(rt1.c4)))OR(rt1.c1)))OR(NULL)))<((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c1))))) ASC  NULLS LAST, rt1.c3;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c4)-(rt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY ((((((((((rt1.c1)AND(rt1.c1)))OR(rt1.c4)))OR(rt1.c1)))OR(NULL)))<((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c1))))) ASC  NULLS LAST, rt1.c3);
SELECT ALL * FROM rt1 WHERE (((rt1.c4)-(rt1.c0)) COLLATE NOCASE) ORDER BY ((((((((((rt1.c1)AND(rt1.c1)))OR(rt1.c4)))OR(rt1.c1)))OR(NULL)))<((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c1))))) ASC  NULLS LAST, rt1.c3;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c4)-(rt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY ((((((((((rt1.c1)AND(rt1.c1)))OR(rt1.c4)))OR(rt1.c1)))OR(NULL)))<((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c1))))) ASC  NULLS LAST, rt1.c3);
SELECT ALL * FROM rt1 WHERE (((rt1.c4)-(rt1.c0)) COLLATE NOCASE) ORDER BY ((((((((((rt1.c1)AND(rt1.c1)))OR(rt1.c4)))OR(rt1.c1)))OR(NULL)))<((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c1))))) ASC  NULLS LAST, rt1.c3;
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (((CASE WHEN '' THEN rt1.c4 ELSE rt1.c1 END)LIKE((((rt1.c3))=((vt1.c2)))))) ORDER BY NULL ASC, ((rt1.c3) ISNULL) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN '' THEN rt1.c4 ELSE rt1.c1 END)LIKE((((rt1.c3))==((vt1.c2)))))) IS TRUE)  as count FROM vt1, rt1 ORDER BY NULL ASC, ((rt1.c3) ISNULL) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (((CASE WHEN '' THEN rt1.c4 ELSE rt1.c1 END)LIKE((((rt1.c3))=((vt1.c2)))))) ORDER BY NULL ASC, ((rt1.c3) ISNULL) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN '' THEN rt1.c4 ELSE rt1.c1 END)LIKE((((rt1.c3))==((vt1.c2)))))) IS TRUE)  as count FROM vt1, rt1 ORDER BY NULL ASC, ((rt1.c3) ISNULL) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (((CASE WHEN '' THEN rt1.c4 ELSE rt1.c1 END)LIKE((((rt1.c3))=((vt1.c2)))))) ORDER BY NULL ASC, ((rt1.c3) ISNULL) COLLATE NOCASE DESC;
SELECT ALL * FROM vt1, rt1, rt0 WHERE (6.34902948E8) ORDER BY ((rt0.c1) NOT BETWEEN ((+ (rt1.c4))) AND (((rt0.c1)-(rt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((6.34902948E8) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY ((rt0.c1) NOT BETWEEN ((+ (rt1.c4))) AND (((rt0.c1)-(rt1.c1)))) ASC);
SELECT ALL * FROM vt1, rt1, rt0 WHERE (6.34902948E8) ORDER BY ((rt0.c1) NOT BETWEEN ((+ (rt1.c4))) AND (((rt0.c1)-(rt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((6.34902948E8) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY ((rt0.c1) NOT BETWEEN ((+ (rt1.c4))) AND (((rt0.c1)-(rt1.c1)))) ASC);
SELECT ALL * FROM vt1, rt1, rt0 WHERE (6.34902948E8) ORDER BY ((rt0.c1) NOT BETWEEN ((+ (rt1.c4))) AND (((rt0.c1)-(rt1.c1)))) ASC;
SELECT COUNT(*) FROM rt1 WHERE (INSTR(CAST(rt1.c2 AS NUMERIC), ((rt1.c2)AND(939528177)))) ORDER BY ((CASE WHEN rt1.c4 THEN rt1.c3 ELSE rt1.c1 END) ISNULL) DESC  NULLS LAST, rt1.c3, (((rt1.c0, rt1.c0, rt1.c3)) NOT BETWEEN (((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))), UNLIKELY(rt1.c2), PRINTF(rt1.c3))) AND ((((((rt1.c0)AND(-1.035701096E9)))AND(NULL)), (((rt1.c3, rt1.c4, rt1.c1))>=((rt1.c4, rt1.c4, rt1.c0))), 1735710188))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((INSTR(CAST(rt1.c2 AS NUMERIC), ((rt1.c2)AND(939528177)))) IS TRUE)  as count FROM rt1 ORDER BY ((CASE WHEN rt1.c4 THEN rt1.c3 ELSE rt1.c1 END) ISNULL) DESC  NULLS LAST, rt1.c3, (((rt1.c0, rt1.c0, rt1.c3)) NOT BETWEEN (((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))), UNLIKELY(rt1.c2), PRINTF(rt1.c3))) AND ((((((rt1.c0)AND(-1.035701096E9)))AND(NULL)), (((rt1.c3, rt1.c4, rt1.c1))>=((rt1.c4, rt1.c4, rt1.c0))), 1735710188))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (INSTR(CAST(rt1.c2 AS NUMERIC), ((rt1.c2)AND(939528177)))) ORDER BY ((CASE WHEN rt1.c4 THEN rt1.c3 ELSE rt1.c1 END) ISNULL) DESC  NULLS LAST, rt1.c3, (((rt1.c0, rt1.c0, rt1.c3)) NOT BETWEEN (((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))), UNLIKELY(rt1.c2), PRINTF(rt1.c3))) AND ((((((rt1.c0)AND(-1.035701096E9)))AND(NULL)), (((rt1.c3, rt1.c4, rt1.c1))>=((rt1.c4, rt1.c4, rt1.c0))), 1735710188))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((INSTR(CAST(rt1.c2 AS NUMERIC), ((rt1.c2)AND(939528177)))) IS TRUE)  as count FROM rt1 ORDER BY ((CASE WHEN rt1.c4 THEN rt1.c3 ELSE rt1.c1 END) ISNULL) DESC  NULLS LAST, rt1.c3, (((rt1.c0, rt1.c0, rt1.c3)) NOT BETWEEN (((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))), UNLIKELY(rt1.c2), PRINTF(rt1.c3))) AND ((((((rt1.c0)AND(-1.035701096E9)))AND(NULL)), (((rt1.c3, rt1.c4, rt1.c1))>=((rt1.c4, rt1.c4, rt1.c0))), 1735710188))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (INSTR(CAST(rt1.c2 AS NUMERIC), ((rt1.c2)AND(939528177)))) ORDER BY ((CASE WHEN rt1.c4 THEN rt1.c3 ELSE rt1.c1 END) ISNULL) DESC  NULLS LAST, rt1.c3, (((rt1.c0, rt1.c0, rt1.c3)) NOT BETWEEN (((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))), UNLIKELY(rt1.c2), PRINTF(rt1.c3))) AND ((((((rt1.c0)AND(-1.035701096E9)))AND(NULL)), (((rt1.c3, rt1.c4, rt1.c1))>=((rt1.c4, rt1.c4, rt1.c0))), 1735710188))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON vt1.c2 INNER JOIN vt1 ON (NOT (((vt1.c2) BETWEEN (rt0.c1) AND (vt1.c2)))) WHERE ((((rt0.c1 IN ())) NOT BETWEEN (((((vt1.c2)OR(rt0.c0)))OR(rt1.c3))) AND (CAST(vt1.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ())) NOT BETWEEN (((((vt1.c2)OR(rt0.c0)))OR(rt1.c3))) AND (CAST(vt1.c1 AS INTEGER)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON vt1.c2 INNER JOIN vt1 ON (NOT (((vt1.c2) BETWEEN (rt0.c1) AND (vt1.c2)))));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON vt1.c2 INNER JOIN vt1 ON (NOT (((vt1.c2) BETWEEN (rt0.c1) AND (vt1.c2)))) WHERE ((((rt0.c1 IN ())) NOT BETWEEN (((((vt1.c2)OR(rt0.c0)))OR(rt1.c3))) AND (CAST(vt1.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ())) NOT BETWEEN (((((vt1.c2)OR(rt0.c0)))OR(rt1.c3))) AND (CAST(vt1.c1 AS INTEGER)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON vt1.c2 INNER JOIN vt1 ON (NOT (((vt1.c2) BETWEEN (rt0.c1) AND (vt1.c2)))));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt1 ON rt0.c0 INNER JOIN rt0 ON ((CAST(rt0.c2 AS TEXT)) BETWEEN (NULL) AND (json_quote(rt1.c1))) WHERE ((((rt1.c0, vt1.c2, 0xffffffffcdaa5c0b)) NOT BETWEEN ((((rt1.c2) BETWEEN (rt0.c0) AND (rt1.c0)), ((rt1.c0)<=(rt1.c4)), CAST(rt0.c2 AS INTEGER))) AND (((rt1.c0 IN ()), ((((rt0.c0)AND(rt1.c4)))AND(rt1.c1)), ((vt1.c1)>>(rt1.c4)))))) ORDER BY (~ (((rt1.c1)*(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0, vt1.c2, 0Xffffffffcdaa5c0b)) NOT BETWEEN ((((rt1.c2) BETWEEN (rt0.c0) AND (rt1.c0)), ((rt1.c0)<=(rt1.c4)), CAST(rt0.c2 AS INTEGER))) AND (((rt1.c0 IN ()), ((((rt0.c0)AND(rt1.c4)))AND(rt1.c1)), ((vt1.c1)>>(rt1.c4)))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt1 ON rt0.c0 INNER JOIN rt0 ON ((CAST(rt0.c2 AS TEXT)) BETWEEN (NULL) AND (json_quote(rt1.c1))) ORDER BY (~ (((rt1.c1)*(rt0.c0)))) ASC);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt1 ON rt0.c0 INNER JOIN rt0 ON ((CAST(rt0.c2 AS TEXT)) BETWEEN (NULL) AND (json_quote(rt1.c1))) WHERE ((((rt1.c0, vt1.c2, 0xffffffffcdaa5c0b)) NOT BETWEEN ((((rt1.c2) BETWEEN (rt0.c0) AND (rt1.c0)), ((rt1.c0)<=(rt1.c4)), CAST(rt0.c2 AS INTEGER))) AND (((rt1.c0 IN ()), ((((rt0.c0)AND(rt1.c4)))AND(rt1.c1)), ((vt1.c1)>>(rt1.c4)))))) ORDER BY (~ (((rt1.c1)*(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0, vt1.c2, 0Xffffffffcdaa5c0b)) NOT BETWEEN ((((rt1.c2) BETWEEN (rt0.c0) AND (rt1.c0)), ((rt1.c0)<=(rt1.c4)), CAST(rt0.c2 AS INTEGER))) AND (((rt1.c0 IN ()), ((((rt0.c0)AND(rt1.c4)))AND(rt1.c1)), ((vt1.c1)>>(rt1.c4)))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt1 ON rt0.c0 INNER JOIN rt0 ON ((CAST(rt0.c2 AS TEXT)) BETWEEN (NULL) AND (json_quote(rt1.c1))) ORDER BY (~ (((rt1.c1)*(rt0.c0)))) ASC);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c1);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON ((((0.40357341427751803) NOT BETWEEN (rt0.c2) AND (vt1.c2))) ISNULL) WHERE ((((rt0.c1)*(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)*(vt1.c0)) IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((((0.40357341427751803) NOT BETWEEN (rt0.c2) AND (vt1.c2))) ISNULL));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON ((((0.40357341427751803) NOT BETWEEN (rt0.c2) AND (vt1.c2))) ISNULL) WHERE ((((rt0.c1)*(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)*(vt1.c0)) IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((((0.40357341427751803) NOT BETWEEN (rt0.c2) AND (vt1.c2))) ISNULL));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON ((((0.40357341427751803) NOT BETWEEN (rt0.c2) AND (vt1.c2))) ISNULL) WHERE ((((rt0.c1)*(vt1.c0)) IN ()));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON (rt1.c1 COLLATE NOCASE IN ()) INNER JOIN rt1 ON (((rt0.c2 IN (rt1.c0))) IS TRUE) WHERE (0.03493223792965572) ORDER BY (NOT (((vt1.c2) NOT BETWEEN (rt0.c0) AND (rt1.c0))));
SELECT SUM(count) FROM (SELECT ((0.03493223792965572) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON (rt1.c1 COLLATE NOCASE IN ()) INNER JOIN rt1 ON (((rt0.c2 IN (rt1.c0))) IS TRUE) ORDER BY (NOT (((vt1.c2) NOT BETWEEN (rt0.c0) AND (rt1.c0)))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON (rt1.c1 COLLATE NOCASE IN ()) INNER JOIN rt1 ON (((rt0.c2 IN (rt1.c0))) IS TRUE) WHERE (0.03493223792965572) ORDER BY (NOT (((vt1.c2) NOT BETWEEN (rt0.c0) AND (rt1.c0))));
SELECT SUM(count) FROM (SELECT ((0.03493223792965572) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON (rt1.c1 COLLATE NOCASE IN ()) INNER JOIN rt1 ON (((rt0.c2 IN (rt1.c0))) IS TRUE) ORDER BY (NOT (((vt1.c2) NOT BETWEEN (rt0.c0) AND (rt1.c0)))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON (rt1.c1 COLLATE NOCASE IN ()) INNER JOIN rt1 ON (((rt0.c2 IN (rt1.c0))) IS TRUE) WHERE (0.03493223792965572) ORDER BY (NOT (((vt1.c2) NOT BETWEEN (rt0.c0) AND (rt1.c0))));
SELECT ALL * FROM vt1, rt1 WHERE (((((-1.334297438E9)) BETWEEN ((rt1.c0)) AND ((rt1.c4))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((-1.334297438E9)) BETWEEN ((rt1.c0)) AND ((rt1.c4))) IN ())) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL * FROM vt1, rt1 WHERE (((((-1.334297438E9)) BETWEEN ((rt1.c0)) AND ((rt1.c4))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((-1.334297438E9)) BETWEEN ((rt1.c0)) AND ((rt1.c4))) IN ())) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL * FROM vt1, rt1 WHERE (((((-1.334297438E9)) BETWEEN ((rt1.c0)) AND ((rt1.c4))) IN ()));
SELECT ALL * FROM rt1, rt0 WHERE (CASE WHEN rt1.c1 COLLATE NOCASE THEN CAST(rt0.c2 AS REAL) ELSE ((rt0.c0) NOT NULL) END) ORDER BY '-1035701096' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c1 COLLATE NOCASE THEN CAST(rt0.c2 AS REAL) ELSE ((rt0.c0) NOT NULL) END) IS TRUE)  as count FROM rt1, rt0 ORDER BY '-1035701096' DESC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE (CASE WHEN rt1.c1 COLLATE NOCASE THEN CAST(rt0.c2 AS REAL) ELSE ((rt0.c0) NOT NULL) END) ORDER BY '-1035701096' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c1 COLLATE NOCASE THEN CAST(rt0.c2 AS REAL) ELSE ((rt0.c0) NOT NULL) END) IS TRUE)  as count FROM rt1, rt0 ORDER BY '-1035701096' DESC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE (CASE WHEN rt1.c1 COLLATE NOCASE THEN CAST(rt0.c2 AS REAL) ELSE ((rt0.c0) NOT NULL) END) ORDER BY '-1035701096' DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN 0.47666929521840684 THEN (rt1.c2 IN (rt1.c0)) END) ORDER BY CASE WHEN CASE rt1.c4  WHEN rt1.c4 THEN 0.14977409918371076 WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c3 END THEN rt1.c3 COLLATE RTRIM END DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.47666929521840684 THEN (rt1.c2 IN (rt1.c0)) END) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN CASE rt1.c4  WHEN rt1.c4 THEN 0.14977409918371076 WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c3 END THEN rt1.c3 COLLATE RTRIM END DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN 0.47666929521840684 THEN (rt1.c2 IN (rt1.c0)) END) ORDER BY CASE WHEN CASE rt1.c4  WHEN rt1.c4 THEN 0.14977409918371076 WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c3 END THEN rt1.c3 COLLATE RTRIM END DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.47666929521840684 THEN (rt1.c2 IN (rt1.c0)) END) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN CASE rt1.c4  WHEN rt1.c4 THEN 0.14977409918371076 WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c3 END THEN rt1.c3 COLLATE RTRIM END DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN 0.47666929521840684 THEN (rt1.c2 IN (rt1.c0)) END) ORDER BY CASE WHEN CASE rt1.c4  WHEN rt1.c4 THEN 0.14977409918371076 WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c3 END THEN rt1.c3 COLLATE RTRIM END DESC;
SELECT ALL * FROM rt0 WHERE (CAST(LIKELIHOOD(rt0.c0, 0.8719581030399615) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(LIKELIHOOD(rt0.c0, 0.8719581030399615) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(LIKELIHOOD(rt0.c0, 0.8719581030399615) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(LIKELIHOOD(rt0.c0, 0.8719581030399615) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(LIKELIHOOD(rt0.c0, 0.8719581030399615) AS REAL));
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE ((((rt0.c0 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE ((((rt0.c0 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE ((((rt0.c0 IN ())) IS TRUE));
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE (((((((vt1.c0)AND(rt1.c0)))AND(vt1.c1))) IS TRUE)) ORDER BY ((((((((rt1.c1)AND(((rt0.c1) NOTNULL))))OR((rt0.c0 IN ()))))AND((vt1.c2 IN ()))))OR(CAST(rt1.c1 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(rt1.c0)))AND(vt1.c1))) IS TRUE)) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY ((((((((rt1.c1)AND(((rt0.c1) NOTNULL))))OR((rt0.c0 IN ()))))AND((vt1.c2 IN ()))))OR(CAST(rt1.c1 AS INTEGER)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE (((((((vt1.c0)AND(rt1.c0)))AND(vt1.c1))) IS TRUE)) ORDER BY ((((((((rt1.c1)AND(((rt0.c1) NOTNULL))))OR((rt0.c0 IN ()))))AND((vt1.c2 IN ()))))OR(CAST(rt1.c1 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(rt1.c0)))AND(vt1.c1))) IS TRUE)) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY ((((((((rt1.c1)AND(((rt0.c1) NOTNULL))))OR((rt0.c0 IN ()))))AND((vt1.c2 IN ()))))OR(CAST(rt1.c1 AS INTEGER)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE (((((((vt1.c0)AND(rt1.c0)))AND(vt1.c1))) IS TRUE)) ORDER BY ((((((((rt1.c1)AND(((rt0.c1) NOTNULL))))OR((rt0.c0 IN ()))))AND((vt1.c2 IN ()))))OR(CAST(rt1.c1 AS INTEGER)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE ((+ ((x'f8a3' IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((x'f8a3' IN ())))) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE ((+ ((x'f8a3' IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((x'f8a3' IN ())))) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE ((+ ((x'f8a3' IN ()))));
SELECT ALL COUNT(*) FROM vt1, rt1, rt0 WHERE (CASE WHEN (+ (0x686d2e18)) THEN rt0.c0 END) ORDER BY CAST((NOT (rt1.c0)) AS REAL), CASE (NOT (rt1.c2))  WHEN ((rt1.c0) BETWEEN (x'') AND (vt1.c1)) THEN LOWER(DISTINCT rt1.c3) ELSE ((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt0.c2)) END, ((((((vt1.c0)==(rt0.c2)))AND(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt0.c0 THEN rt1.c3 END)))OR(LIKE(rt1.c4, rt0.c0, ''))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (0x686d2e18)) THEN rt0.c0 END) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY CAST((NOT (rt1.c0)) AS REAL), CASE (NOT (rt1.c2))  WHEN ((rt1.c0) BETWEEN (x'') AND (vt1.c1)) THEN LOWER(DISTINCT rt1.c3) ELSE ((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt0.c2)) END, ((((((vt1.c0)==(rt0.c2)))AND(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt0.c0 THEN rt1.c3 END)))OR(LIKE(rt1.c4, rt0.c0, ''))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt1, rt0 WHERE (CASE WHEN (+ (0x686d2e18)) THEN rt0.c0 END) ORDER BY CAST((NOT (rt1.c0)) AS REAL), CASE (NOT (rt1.c2))  WHEN ((rt1.c0) BETWEEN (x'') AND (vt1.c1)) THEN LOWER(DISTINCT rt1.c3) ELSE ((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt0.c2)) END, ((((((vt1.c0)==(rt0.c2)))AND(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt0.c0 THEN rt1.c3 END)))OR(LIKE(rt1.c4, rt0.c0, ''))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (0x686d2e18)) THEN rt0.c0 END) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY CAST((NOT (rt1.c0)) AS REAL), CASE (NOT (rt1.c2))  WHEN ((rt1.c0) BETWEEN (x'') AND (vt1.c1)) THEN LOWER(DISTINCT rt1.c3) ELSE ((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt0.c2)) END, ((((((vt1.c0)==(rt0.c2)))AND(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt0.c0 THEN rt1.c3 END)))OR(LIKE(rt1.c4, rt0.c0, ''))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt1, rt0 WHERE (CASE WHEN (+ (0x686d2e18)) THEN rt0.c0 END) ORDER BY CAST((NOT (rt1.c0)) AS REAL), CASE (NOT (rt1.c2))  WHEN ((rt1.c0) BETWEEN (x'') AND (vt1.c1)) THEN LOWER(DISTINCT rt1.c3) ELSE ((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt0.c2)) END, ((((((vt1.c0)==(rt0.c2)))AND(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt0.c0 THEN rt1.c3 END)))OR(LIKE(rt1.c4, rt0.c0, ''))) ASC  NULLS LAST;
SELECT * FROM vt1, rt0, rt1 WHERE (-1.125128409E9);
SELECT SUM(count) FROM (SELECT ((-1.125128409E9) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT * FROM vt1, rt0, rt1 WHERE (-1.125128409E9);
SELECT SUM(count) FROM (SELECT ((-1.125128409E9) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT * FROM vt1, rt0, rt1 WHERE (-1.125128409E9);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON rt1.c2 FULL OUTER JOIN rt1 ON ((((rt0.c0) NOT BETWEEN (vt1.c1) AND (rt1.c2))) IS FALSE) WHERE (((((rt1.c1)<<(rt1.c2))) BETWEEN (IFNULL(rt1.c1, rt1.c0)) AND (CASE x'332c'  WHEN rt0.c0 THEN '7\' ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)<<(rt1.c2))) BETWEEN (IFNULL(rt1.c1, rt1.c0)) AND (CASE x'332c'  WHEN rt0.c0 THEN '7\' ELSE rt0.c0 END))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON rt1.c2 FULL OUTER JOIN rt1 ON ((((rt0.c0) NOT BETWEEN (vt1.c1) AND (rt1.c2))) IS FALSE));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON rt1.c2 FULL OUTER JOIN rt1 ON ((((rt0.c0) NOT BETWEEN (vt1.c1) AND (rt1.c2))) IS FALSE) WHERE (((((rt1.c1)<<(rt1.c2))) BETWEEN (IFNULL(rt1.c1, rt1.c0)) AND (CASE x'332c'  WHEN rt0.c0 THEN '7\' ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)<<(rt1.c2))) BETWEEN (IFNULL(rt1.c1, rt1.c0)) AND (CASE x'332c'  WHEN rt0.c0 THEN '7\' ELSE rt0.c0 END))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON rt1.c2 FULL OUTER JOIN rt1 ON ((((rt0.c0) NOT BETWEEN (vt1.c1) AND (rt1.c2))) IS FALSE));
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON (+ (((rt0.c0) NOT NULL))) WHERE ((((rt0.c0 IN ())) BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (CASE vt1.c0  WHEN 0.007912324386877057 THEN vt1.c1 ELSE '1458004643' END))) ORDER BY (0X56e762a3 IN ((('-721721265') IS FALSE), ((((((((vt1.c0)AND(rt0.c2)))AND(rt0.c1)))AND(vt1.c1)))AND('-932779606')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (CASE vt1.c0  WHEN 0.007912324386877057 THEN vt1.c1 ELSE '1458004643' END))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON (+ (((rt0.c0) NOT NULL))) ORDER BY (0X56e762a3 IN ((('-721721265') IS FALSE), ((((((((vt1.c0)AND(rt0.c2)))AND(rt0.c1)))AND(vt1.c1)))AND('-932779606')))) DESC  NULLS LAST);
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON (+ (((rt0.c0) NOT NULL))) WHERE ((((rt0.c0 IN ())) BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (CASE vt1.c0  WHEN 0.007912324386877057 THEN vt1.c1 ELSE '1458004643' END))) ORDER BY (0X56e762a3 IN ((('-721721265') IS FALSE), ((((((((vt1.c0)AND(rt0.c2)))AND(rt0.c1)))AND(vt1.c1)))AND('-932779606')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (CASE vt1.c0  WHEN 0.007912324386877057 THEN vt1.c1 ELSE '1458004643' END))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON (+ (((rt0.c0) NOT NULL))) ORDER BY (0X56e762a3 IN ((('-721721265') IS FALSE), ((((((((vt1.c0)AND(rt0.c2)))AND(rt0.c1)))AND(vt1.c1)))AND('-932779606')))) DESC  NULLS LAST);
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON (+ (((rt0.c0) NOT NULL))) WHERE ((((rt0.c0 IN ())) BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (CASE vt1.c0  WHEN 0.007912324386877057 THEN vt1.c1 ELSE '1458004643' END))) ORDER BY (0X56e762a3 IN ((('-721721265') IS FALSE), ((((((((vt1.c0)AND(rt0.c2)))AND(rt0.c1)))AND(vt1.c1)))AND('-932779606')))) DESC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (NULL) ORDER BY x'' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 ORDER BY x'' ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (NULL) ORDER BY x'' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 ORDER BY x'' ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (NULL) ORDER BY x'' ASC  NULLS LAST;
SELECT * FROM vt1 WHERE (((vt1.c0)||(vt1.c2))) ORDER BY ((((((vt1.c0)||(vt1.c1)))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c1)))AND(vt1.c0)))OR(vt1.c2)))))OR(((vt1.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)||(vt1.c2))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)||(vt1.c1)))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c1)))AND(vt1.c0)))OR(vt1.c2)))))OR(((vt1.c1) NOTNULL))));
SELECT * FROM vt1 WHERE (((vt1.c0)||(vt1.c2))) ORDER BY ((((((vt1.c0)||(vt1.c1)))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c1)))AND(vt1.c0)))OR(vt1.c2)))))OR(((vt1.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)||(vt1.c2))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)||(vt1.c1)))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c1)))AND(vt1.c0)))OR(vt1.c2)))))OR(((vt1.c1) NOTNULL))));
SELECT * FROM vt1 WHERE (((vt1.c0)||(vt1.c2))) ORDER BY ((((((vt1.c0)||(vt1.c1)))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c1)))AND(vt1.c0)))OR(vt1.c2)))))OR(((vt1.c1) NOTNULL)));
SELECT ALL * FROM vt1, rt1 WHERE (CAST(((rt1.c2) BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER)) ORDER BY ((((((rt1.c0)OR(vt1.c0)))OR(vt1.c0)))%(LIKELY(vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2) BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, rt1 ORDER BY ((((((rt1.c0)OR(vt1.c0)))OR(vt1.c0)))%(LIKELY(vt1.c0)))  NULLS FIRST);
SELECT ALL * FROM vt1, rt1 WHERE (CAST(((rt1.c2) BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER)) ORDER BY ((((((rt1.c0)OR(vt1.c0)))OR(vt1.c0)))%(LIKELY(vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2) BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, rt1 ORDER BY ((((((rt1.c0)OR(vt1.c0)))OR(vt1.c0)))%(LIKELY(vt1.c0)))  NULLS FIRST);
SELECT ALL * FROM vt1, rt1 WHERE (CAST(((rt1.c2) BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER)) ORDER BY ((((((rt1.c0)OR(vt1.c0)))OR(vt1.c0)))%(LIKELY(vt1.c0)))  NULLS FIRST;
SELECT * FROM rt1, vt1 CROSS JOIN rt0 ON (((rt1.c1) NOT BETWEEN (rt1.c0) AND (vt1.c2)) IN ()) WHERE (CASE ((rt1.c1)<=(rt0.c0))  WHEN (((rt0.c2)) BETWEEN ((rt1.c0)) AND ((rt0.c2))) THEN CASE WHEN rt1.c4 THEN rt1.c0 ELSE 'z0' END WHEN (+ (0.5238665057682711)) THEN '0.23217779983090103' WHEN rt0.c2 COLLATE NOCASE THEN (('')<>(rt1.c4)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c1)<=(rt0.c0))  WHEN (((rt0.c2)) BETWEEN ((rt1.c0)) AND ((rt0.c2))) THEN CASE WHEN rt1.c4 THEN rt1.c0 ELSE 'z0' END WHEN (+ (0.5238665057682711)) THEN '0.23217779983090103' WHEN rt0.c2 COLLATE NOCASE THEN (('')!=(rt1.c4)) END) IS TRUE)  as count FROM rt1, vt1 CROSS JOIN rt0 ON (((rt1.c1) NOT BETWEEN (rt1.c0) AND (vt1.c2)) IN ()));
SELECT * FROM rt1, vt1 CROSS JOIN rt0 ON (((rt1.c1) NOT BETWEEN (rt1.c0) AND (vt1.c2)) IN ()) WHERE (CASE ((rt1.c1)<=(rt0.c0))  WHEN (((rt0.c2)) BETWEEN ((rt1.c0)) AND ((rt0.c2))) THEN CASE WHEN rt1.c4 THEN rt1.c0 ELSE 'z0' END WHEN (+ (0.5238665057682711)) THEN '0.23217779983090103' WHEN rt0.c2 COLLATE NOCASE THEN (('')<>(rt1.c4)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c1)<=(rt0.c0))  WHEN (((rt0.c2)) BETWEEN ((rt1.c0)) AND ((rt0.c2))) THEN CASE WHEN rt1.c4 THEN rt1.c0 ELSE 'z0' END WHEN (+ (0.5238665057682711)) THEN '0.23217779983090103' WHEN rt0.c2 COLLATE NOCASE THEN (('')!=(rt1.c4)) END) IS TRUE)  as count FROM rt1, vt1 CROSS JOIN rt0 ON (((rt1.c1) NOT BETWEEN (rt1.c0) AND (vt1.c2)) IN ()));
SELECT * FROM rt1, vt1 CROSS JOIN rt0 ON (((rt1.c1) NOT BETWEEN (rt1.c0) AND (vt1.c2)) IN ()) WHERE (CASE ((rt1.c1)<=(rt0.c0))  WHEN (((rt0.c2)) BETWEEN ((rt1.c0)) AND ((rt0.c2))) THEN CASE WHEN rt1.c4 THEN rt1.c0 ELSE 'z0' END WHEN (+ (0.5238665057682711)) THEN '0.23217779983090103' WHEN rt0.c2 COLLATE NOCASE THEN (('')<>(rt1.c4)) END);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE ((- ((- (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((- (vt1.c0))))) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE ((- ((- (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((- (vt1.c0))))) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE ((- ((- (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt1 ON ((((UNLIKELY(DISTINCT vt1.c0))OR(CASE rt1.c4  WHEN vt1.c2 THEN rt1.c4 ELSE rt1.c3 END)))OR((((vt1.c2)) BETWEEN ((vt1.c1)) AND ((rt1.c4))))) WHERE (CAST(vt1.c2 COLLATE RTRIM AS TEXT)) ORDER BY (((((rt1.c3)) NOT BETWEEN ((rt1.c4)) AND ((vt1.c0))))LIKE((((rt1.c3, vt1.c0, vt1.c2))==((rt1.c4, vt1.c1, rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c2 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM vt1 CROSS JOIN rt1 ON ((((UNLIKELY(DISTINCT vt1.c0))OR(CASE rt1.c4  WHEN vt1.c2 THEN rt1.c4 ELSE rt1.c3 END)))OR((((vt1.c2)) BETWEEN ((vt1.c1)) AND ((rt1.c4))))) ORDER BY (((((rt1.c3)) NOT BETWEEN ((rt1.c4)) AND ((vt1.c0))))LIKE((((rt1.c3, vt1.c0, vt1.c2))=((rt1.c4, vt1.c1, rt1.c2))))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt1 ON ((((UNLIKELY(DISTINCT vt1.c0))OR(CASE rt1.c4  WHEN vt1.c2 THEN rt1.c4 ELSE rt1.c3 END)))OR((((vt1.c2)) BETWEEN ((vt1.c1)) AND ((rt1.c4))))) WHERE (CAST(vt1.c2 COLLATE RTRIM AS TEXT)) ORDER BY (((((rt1.c3)) NOT BETWEEN ((rt1.c4)) AND ((vt1.c0))))LIKE((((rt1.c3, vt1.c0, vt1.c2))==((rt1.c4, vt1.c1, rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c2 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM vt1 CROSS JOIN rt1 ON ((((UNLIKELY(DISTINCT vt1.c0))OR(CASE rt1.c4  WHEN vt1.c2 THEN rt1.c4 ELSE rt1.c3 END)))OR((((vt1.c2)) BETWEEN ((vt1.c1)) AND ((rt1.c4))))) ORDER BY (((((rt1.c3)) NOT BETWEEN ((rt1.c4)) AND ((vt1.c0))))LIKE((((rt1.c3, vt1.c0, vt1.c2))=((rt1.c4, vt1.c1, rt1.c2))))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt1 ON ((((UNLIKELY(DISTINCT vt1.c0))OR(CASE rt1.c4  WHEN vt1.c2 THEN rt1.c4 ELSE rt1.c3 END)))OR((((vt1.c2)) BETWEEN ((vt1.c1)) AND ((rt1.c4))))) WHERE (CAST(vt1.c2 COLLATE RTRIM AS TEXT)) ORDER BY (((((rt1.c3)) NOT BETWEEN ((rt1.c4)) AND ((vt1.c0))))LIKE((((rt1.c3, vt1.c0, vt1.c2))==((rt1.c4, vt1.c1, rt1.c2)))));
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE ('607763922') ORDER BY (MAX(rt0.c2, 0.6509967716310952, rt1.c1, rt0.c0) IN ()) DESC  NULLS FIRST, ((0.8378146333857326) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('607763922') IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY (MAX(rt0.c2, 0.6509967716310952, rt1.c1, rt0.c0) IN ()) DESC  NULLS FIRST, ((0.8378146333857326) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE ('607763922') ORDER BY (MAX(rt0.c2, 0.6509967716310952, rt1.c1, rt0.c0) IN ()) DESC  NULLS FIRST, ((0.8378146333857326) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('607763922') IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY (MAX(rt0.c2, 0.6509967716310952, rt1.c1, rt0.c0) IN ()) DESC  NULLS FIRST, ((0.8378146333857326) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE ('607763922') ORDER BY (MAX(rt0.c2, 0.6509967716310952, rt1.c1, rt0.c0) IN ()) DESC  NULLS FIRST, ((0.8378146333857326) IS FALSE)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE (((((7.3554571E7) IS TRUE)) BETWEEN (((((((((vt1.c0)OR(rt0.c0)))AND(vt1.c1)))OR(vt1.c1)))AND(rt1.c0))) AND (CAST(vt1.c2 AS NUMERIC)))) ORDER BY JULIANDAY(CASE 0.15246841416675871  WHEN vt1.c0 THEN rt0.c0 ELSE rt1.c3 END, (rt1.c1 IN (rt1.c0)), CASE vt1.c0  WHEN rt1.c2 THEN NULL END, CASE rt0.c0  WHEN rt1.c0 THEN 0.5898286795108444 END, ((((vt1.c1)OR(rt1.c3)))AND(rt1.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((7.3554571E7) IS TRUE)) BETWEEN (((((((((vt1.c0)OR(rt0.c0)))AND(vt1.c1)))OR(vt1.c1)))AND(rt1.c0))) AND (CAST(vt1.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY JULIANDAY(CASE 0.15246841416675871  WHEN vt1.c0 THEN rt0.c0 ELSE rt1.c3 END, (rt1.c1 IN (rt1.c0)), CASE vt1.c0  WHEN rt1.c2 THEN NULL END, CASE rt0.c0  WHEN rt1.c0 THEN 0.5898286795108444 END, ((((vt1.c1)OR(rt1.c3)))AND(rt1.c1)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE (((((7.3554571E7) IS TRUE)) BETWEEN (((((((((vt1.c0)OR(rt0.c0)))AND(vt1.c1)))OR(vt1.c1)))AND(rt1.c0))) AND (CAST(vt1.c2 AS NUMERIC)))) ORDER BY JULIANDAY(CASE 0.15246841416675871  WHEN vt1.c0 THEN rt0.c0 ELSE rt1.c3 END, (rt1.c1 IN (rt1.c0)), CASE vt1.c0  WHEN rt1.c2 THEN NULL END, CASE rt0.c0  WHEN rt1.c0 THEN 0.5898286795108444 END, ((((vt1.c1)OR(rt1.c3)))AND(rt1.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((7.3554571E7) IS TRUE)) BETWEEN (((((((((vt1.c0)OR(rt0.c0)))AND(vt1.c1)))OR(vt1.c1)))AND(rt1.c0))) AND (CAST(vt1.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY JULIANDAY(CASE 0.15246841416675871  WHEN vt1.c0 THEN rt0.c0 ELSE rt1.c3 END, (rt1.c1 IN (rt1.c0)), CASE vt1.c0  WHEN rt1.c2 THEN NULL END, CASE rt0.c0  WHEN rt1.c0 THEN 0.5898286795108444 END, ((((vt1.c1)OR(rt1.c3)))AND(rt1.c1)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE (((((7.3554571E7) IS TRUE)) BETWEEN (((((((((vt1.c0)OR(rt0.c0)))AND(vt1.c1)))OR(vt1.c1)))AND(rt1.c0))) AND (CAST(vt1.c2 AS NUMERIC)))) ORDER BY JULIANDAY(CASE 0.15246841416675871  WHEN vt1.c0 THEN rt0.c0 ELSE rt1.c3 END, (rt1.c1 IN (rt1.c0)), CASE vt1.c0  WHEN rt1.c2 THEN NULL END, CASE rt0.c0  WHEN rt1.c0 THEN 0.5898286795108444 END, ((((vt1.c1)OR(rt1.c3)))AND(rt1.c1)))  NULLS LAST;
SELECT ALL * FROM rt1, vt1 WHERE ((((vt1.c0, rt1.c3, rt1.c1, rt1.c4, rt1.c2)) NOT BETWEEN (('345744147' COLLATE BINARY, ((rt1.c4)>=(vt1.c1)), ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)), CASE WHEN vt1.c0 THEN vt1.c2 ELSE rt1.c1 END, (('+T왽e5O')<(rt1.c0)))) AND (('', ((vt1.c0) NOTNULL), ((rt1.c2)<=(rt1.c4)), (((rt1.c0))<=((rt1.c1))), vt1.c1 COLLATE NOCASE)))) ORDER BY ((x'') BETWEEN (rt1.c0) AND (vt1.c0)) COLLATE RTRIM  NULLS FIRST, (NOT (CASE rt1.c4  WHEN 0X13e502d7 THEN rt1.c4 WHEN vt1.c1 THEN rt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE rt1.c2 END));
SELECT SUM(count) FROM (SELECT (((((vt1.c0, rt1.c3, rt1.c1, rt1.c4, rt1.c2)) NOT BETWEEN (('345744147' COLLATE BINARY, ((rt1.c4)>=(vt1.c1)), ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)), CASE WHEN vt1.c0 THEN vt1.c2 ELSE rt1.c1 END, (('+T왽e5O')<(rt1.c0)))) AND (('', ((vt1.c0) NOTNULL), ((rt1.c2)<=(rt1.c4)), (((rt1.c0))<=((rt1.c1))), vt1.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM rt1, vt1 ORDER BY ((x'') BETWEEN (rt1.c0) AND (vt1.c0)) COLLATE RTRIM  NULLS FIRST, (NOT (CASE rt1.c4  WHEN 0x13e502d7 THEN rt1.c4 WHEN vt1.c1 THEN rt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE rt1.c2 END)));
SELECT ALL * FROM rt1, vt1 WHERE ((((vt1.c0, rt1.c3, rt1.c1, rt1.c4, rt1.c2)) NOT BETWEEN (('345744147' COLLATE BINARY, ((rt1.c4)>=(vt1.c1)), ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)), CASE WHEN vt1.c0 THEN vt1.c2 ELSE rt1.c1 END, (('+T왽e5O')<(rt1.c0)))) AND (('', ((vt1.c0) NOTNULL), ((rt1.c2)<=(rt1.c4)), (((rt1.c0))<=((rt1.c1))), vt1.c1 COLLATE NOCASE)))) ORDER BY ((x'') BETWEEN (rt1.c0) AND (vt1.c0)) COLLATE RTRIM  NULLS FIRST, (NOT (CASE rt1.c4  WHEN 0X13e502d7 THEN rt1.c4 WHEN vt1.c1 THEN rt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE rt1.c2 END));
SELECT SUM(count) FROM (SELECT (((((vt1.c0, rt1.c3, rt1.c1, rt1.c4, rt1.c2)) NOT BETWEEN (('345744147' COLLATE BINARY, ((rt1.c4)>=(vt1.c1)), ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)), CASE WHEN vt1.c0 THEN vt1.c2 ELSE rt1.c1 END, (('+T왽e5O')<(rt1.c0)))) AND (('', ((vt1.c0) NOTNULL), ((rt1.c2)<=(rt1.c4)), (((rt1.c0))<=((rt1.c1))), vt1.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM rt1, vt1 ORDER BY ((x'') BETWEEN (rt1.c0) AND (vt1.c0)) COLLATE RTRIM  NULLS FIRST, (NOT (CASE rt1.c4  WHEN 0x13e502d7 THEN rt1.c4 WHEN vt1.c1 THEN rt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE rt1.c2 END)));
SELECT ALL * FROM rt1, vt1 WHERE ((((vt1.c0, rt1.c3, rt1.c1, rt1.c4, rt1.c2)) NOT BETWEEN (('345744147' COLLATE BINARY, ((rt1.c4)>=(vt1.c1)), ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)), CASE WHEN vt1.c0 THEN vt1.c2 ELSE rt1.c1 END, (('+T왽e5O')<(rt1.c0)))) AND (('', ((vt1.c0) NOTNULL), ((rt1.c2)<=(rt1.c4)), (((rt1.c0))<=((rt1.c1))), vt1.c1 COLLATE NOCASE)))) ORDER BY ((x'') BETWEEN (rt1.c0) AND (vt1.c0)) COLLATE RTRIM  NULLS FIRST, (NOT (CASE rt1.c4  WHEN 0X13e502d7 THEN rt1.c4 WHEN vt1.c1 THEN rt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE rt1.c2 END));
SELECT ALL * FROM vt1, rt1 WHERE (CAST(LOWER(rt1.c1) AS REAL)) ORDER BY ((((vt1.c1)-(rt1.c0))) IS TRUE) ASC, NULL, ((rt1.c1 IN (rt1.c0, rt1.c0)) IN (rt1.c4 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(LOWER(rt1.c1) AS REAL)) IS TRUE)  as count FROM vt1, rt1 ORDER BY ((((vt1.c1)-(rt1.c0))) IS TRUE) ASC, NULL, ((rt1.c1 IN (rt1.c0, rt1.c0)) IN (rt1.c4 COLLATE BINARY))  NULLS LAST);
SELECT ALL * FROM vt1, rt1 WHERE (CAST(LOWER(rt1.c1) AS REAL)) ORDER BY ((((vt1.c1)-(rt1.c0))) IS TRUE) ASC, NULL, ((rt1.c1 IN (rt1.c0, rt1.c0)) IN (rt1.c4 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(LOWER(rt1.c1) AS REAL)) IS TRUE)  as count FROM vt1, rt1 ORDER BY ((((vt1.c1)-(rt1.c0))) IS TRUE) ASC, NULL, ((rt1.c1 IN (rt1.c0, rt1.c0)) IN (rt1.c4 COLLATE BINARY))  NULLS LAST);
SELECT ALL * FROM vt1, rt1 WHERE (CAST(LOWER(rt1.c1) AS REAL)) ORDER BY ((((vt1.c1)-(rt1.c0))) IS TRUE) ASC, NULL, ((rt1.c1 IN (rt1.c0, rt1.c0)) IN (rt1.c4 COLLATE BINARY))  NULLS LAST;
SELECT ALL * FROM vt1, rt0 WHERE (LIKE(vt1.c1 COLLATE BINARY, ('-270653713' IN (rt0.c2, vt1.c0)), '3')) ORDER BY CAST(CASE rt0.c2  WHEN rt0.c2 THEN vt1.c0 END AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKE(vt1.c1 COLLATE BINARY, ('-270653713' IN (rt0.c2, vt1.c0)), '3')) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(CASE rt0.c2  WHEN rt0.c2 THEN vt1.c0 END AS TEXT) DESC);
SELECT ALL * FROM vt1, rt0 WHERE (LIKE(vt1.c1 COLLATE BINARY, ('-270653713' IN (rt0.c2, vt1.c0)), '3')) ORDER BY CAST(CASE rt0.c2  WHEN rt0.c2 THEN vt1.c0 END AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKE(vt1.c1 COLLATE BINARY, ('-270653713' IN (rt0.c2, vt1.c0)), '3')) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(CASE rt0.c2  WHEN rt0.c2 THEN vt1.c0 END AS TEXT) DESC);
SELECT ALL * FROM vt1, rt0 WHERE (LIKE(vt1.c1 COLLATE BINARY, ('-270653713' IN (rt0.c2, vt1.c0)), '3')) ORDER BY CAST(CASE rt0.c2  WHEN rt0.c2 THEN vt1.c0 END AS TEXT) DESC;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) ISNULL))<=(((rt0.c0)%(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) ISNULL))<=(((rt0.c0)%(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) ISNULL))<=(((rt0.c0)%(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) ISNULL))<=(((rt0.c0)%(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) ISNULL))<=(((rt0.c0)%(rt0.c2)))));
SELECT COUNT(*) FROM vt1, rt0 WHERE ((CASE WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN vt1.c2 WHEN rt0.c0 THEN vt1.c2 ELSE rt0.c2 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN vt1.c2 WHEN rt0.c0 THEN vt1.c2 ELSE rt0.c2 END IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((CASE WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN vt1.c2 WHEN rt0.c0 THEN vt1.c2 ELSE rt0.c2 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN vt1.c2 WHEN rt0.c0 THEN vt1.c2 ELSE rt0.c2 END IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((CASE WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN vt1.c2 WHEN rt0.c0 THEN vt1.c2 ELSE rt0.c2 END IN ()));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CASE (((rt1.c3, rt1.c4, rt1.c3))>=((rt0.c2, rt0.c1, rt1.c1)))  WHEN ((rt1.c1) NOTNULL) THEN ((('-664605025'))>=((rt1.c2))) ELSE rt1.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE (((rt1.c3, rt1.c4, rt1.c3))>=((rt0.c2, rt0.c1, rt1.c1)))  WHEN ((rt1.c1) NOTNULL) THEN ((('-664605025'))>=((rt1.c2))) ELSE rt1.c1 END) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CASE (((rt1.c3, rt1.c4, rt1.c3))>=((rt0.c2, rt0.c1, rt1.c1)))  WHEN ((rt1.c1) NOTNULL) THEN ((('-664605025'))>=((rt1.c2))) ELSE rt1.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE (((rt1.c3, rt1.c4, rt1.c3))>=((rt0.c2, rt0.c1, rt1.c1)))  WHEN ((rt1.c1) NOTNULL) THEN ((('-664605025'))>=((rt1.c2))) ELSE rt1.c1 END) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CASE (((rt1.c3, rt1.c4, rt1.c3))>=((rt0.c2, rt0.c1, rt1.c1)))  WHEN ((rt1.c1) NOTNULL) THEN ((('-664605025'))>=((rt1.c2))) ELSE rt1.c1 END);
SELECT COUNT(*) FROM vt1, rt1 WHERE ((((((rt1.c0) IS FALSE), (((rt1.c0)) BETWEEN (('1614711163')) AND ((vt1.c2))), vt1.c0))<=(((+ (rt1.c4)), x'50dc', ((vt1.c0)LIKE(rt1.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0) IS FALSE), (((rt1.c0)) BETWEEN (('1614711163')) AND ((vt1.c2))), vt1.c0))<=(((+ (rt1.c4)), x'50dc', ((vt1.c0)LIKE(rt1.c3)))))) IS TRUE)  as count FROM vt1, rt1);
SELECT COUNT(*) FROM vt1, rt1 WHERE ((((((rt1.c0) IS FALSE), (((rt1.c0)) BETWEEN (('1614711163')) AND ((vt1.c2))), vt1.c0))<=(((+ (rt1.c4)), x'50dc', ((vt1.c0)LIKE(rt1.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0) IS FALSE), (((rt1.c0)) BETWEEN (('1614711163')) AND ((vt1.c2))), vt1.c0))<=(((+ (rt1.c4)), x'50dc', ((vt1.c0)LIKE(rt1.c3)))))) IS TRUE)  as count FROM vt1, rt1);
SELECT COUNT(*) FROM vt1, rt1 WHERE ((((((rt1.c0) IS FALSE), (((rt1.c0)) BETWEEN (('1614711163')) AND ((vt1.c2))), vt1.c0))<=(((+ (rt1.c4)), x'50dc', ((vt1.c0)LIKE(rt1.c3))))));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON (((rt0.c2 IN (rt1.c4))) ISNULL) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON (((rt0.c2 IN (rt1.c4))) ISNULL));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON (((rt0.c2 IN (rt1.c4))) ISNULL) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON (((rt0.c2 IN (rt1.c4))) ISNULL));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON (((rt0.c2 IN (rt1.c4))) ISNULL) WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((NOT (CASE WHEN rt0.c2 THEN vt1.c2 ELSE vt1.c1 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN rt0.c2 THEN vt1.c2 ELSE vt1.c1 END))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((NOT (CASE WHEN rt0.c2 THEN vt1.c2 ELSE vt1.c1 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN rt0.c2 THEN vt1.c2 ELSE vt1.c1 END))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((NOT (CASE WHEN rt0.c2 THEN vt1.c2 ELSE vt1.c1 END)));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt1 ON NULL LEFT OUTER JOIN rt0 ON load_extension(((vt1.c1) IS FALSE)) WHERE (((CAST(rt0.c1 AS REAL))AND((- (rt1.c3))))) ORDER BY ((((((vt1.c1) NOT BETWEEN ('292960890') AND (rt1.c1)))AND(rt1.c1 COLLATE BINARY)))AND(((rt0.c0)IS(vt1.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS REAL))AND((- (rt1.c3))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt1 ON NULL LEFT OUTER JOIN rt0 ON load_extension(((vt1.c1) IS FALSE)) ORDER BY ((((((vt1.c1) NOT BETWEEN ('292960890') AND (rt1.c1)))AND(rt1.c1 COLLATE BINARY)))AND(((rt0.c0)IS(vt1.c1)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt1 ON NULL LEFT OUTER JOIN rt0 ON load_extension(((vt1.c1) IS FALSE)) WHERE (((CAST(rt0.c1 AS REAL))AND((- (rt1.c3))))) ORDER BY ((((((vt1.c1) NOT BETWEEN ('292960890') AND (rt1.c1)))AND(rt1.c1 COLLATE BINARY)))AND(((rt0.c0)IS(vt1.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS REAL))AND((- (rt1.c3))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt1 ON NULL LEFT OUTER JOIN rt0 ON load_extension(((vt1.c1) IS FALSE)) ORDER BY ((((((vt1.c1) NOT BETWEEN ('292960890') AND (rt1.c1)))AND(rt1.c1 COLLATE BINARY)))AND(((rt0.c0)IS(vt1.c1)))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (((((NULL)OR(rt0.c1))) BETWEEN ((- (rt0.c1))) AND (CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((NULL)OR(rt0.c1))) BETWEEN ((- (rt0.c1))) AND (CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((NULL)OR(rt0.c1))) BETWEEN ((- (rt0.c1))) AND (CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((NULL)OR(rt0.c1))) BETWEEN ((- (rt0.c1))) AND (CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((NULL)OR(rt0.c1))) BETWEEN ((- (rt0.c1))) AND (CAST(rt0.c1 AS TEXT))));
SELECT * FROM rt0, rt1 WHERE (0.9173263201133968);
SELECT SUM(count) FROM (SELECT ((0.9173263201133968) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (0.9173263201133968);
SELECT SUM(count) FROM (SELECT ((0.9173263201133968) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (0.9173263201133968);
SELECT * FROM rt1, vt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c0 COLLATE BINARY)OR(((rt1.c0)>>(rt1.c4)))))OR(((rt0.c2)/(rt1.c1)))) WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt1.c2)))>>(DATE(rt1.c4, rt1.c3, '/Vr')))) ORDER BY ((((vt1.c0)AND(ROUND(vt1.c0, rt1.c4))))AND(vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c2) AND (rt1.c2)))>>(DATE(rt1.c4, rt1.c3, '/Vr')))) IS TRUE)  as count FROM rt1, vt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c0 COLLATE BINARY)OR(((rt1.c0)>>(rt1.c4)))))OR(((rt0.c2)/(rt1.c1)))) ORDER BY ((((vt1.c0)AND(ROUND(vt1.c0, rt1.c4))))AND(vt1.c0))  NULLS FIRST);
SELECT * FROM rt1, vt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c0 COLLATE BINARY)OR(((rt1.c0)>>(rt1.c4)))))OR(((rt0.c2)/(rt1.c1)))) WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt1.c2)))>>(DATE(rt1.c4, rt1.c3, '/Vr')))) ORDER BY ((((vt1.c0)AND(ROUND(vt1.c0, rt1.c4))))AND(vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c2) AND (rt1.c2)))>>(DATE(rt1.c4, rt1.c3, '/Vr')))) IS TRUE)  as count FROM rt1, vt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c0 COLLATE BINARY)OR(((rt1.c0)>>(rt1.c4)))))OR(((rt0.c2)/(rt1.c1)))) ORDER BY ((((vt1.c0)AND(ROUND(vt1.c0, rt1.c4))))AND(vt1.c0))  NULLS FIRST);
SELECT * FROM rt1, vt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c0 COLLATE BINARY)OR(((rt1.c0)>>(rt1.c4)))))OR(((rt0.c2)/(rt1.c1)))) WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt1.c2)))>>(DATE(rt1.c4, rt1.c3, '/Vr')))) ORDER BY ((((vt1.c0)AND(ROUND(vt1.c0, rt1.c4))))AND(vt1.c0))  NULLS FIRST;
SELECT ALL * FROM vt1, rt0 WHERE ((((((vt1.c1, rt0.c0, vt1.c2, rt0.c1, vt1.c0))<=((vt1.c0, rt0.c2, rt0.c2, vt1.c1, rt0.c0))))*(vt1.c1))) ORDER BY ((((rt0.c2) BETWEEN (vt1.c1) AND (vt1.c2))) BETWEEN (((vt1.c0)<(vt1.c0))) AND ((rt0.c1 IN (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c1, rt0.c0, vt1.c2, rt0.c1, vt1.c0))<=((vt1.c0, rt0.c2, rt0.c2, vt1.c1, rt0.c0))))*(vt1.c1))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c2) BETWEEN (vt1.c1) AND (vt1.c2))) BETWEEN (((vt1.c0)<(vt1.c0))) AND ((rt0.c1 IN (vt1.c0))))  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE ((((((vt1.c1, rt0.c0, vt1.c2, rt0.c1, vt1.c0))<=((vt1.c0, rt0.c2, rt0.c2, vt1.c1, rt0.c0))))*(vt1.c1))) ORDER BY ((((rt0.c2) BETWEEN (vt1.c1) AND (vt1.c2))) BETWEEN (((vt1.c0)<(vt1.c0))) AND ((rt0.c1 IN (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c1, rt0.c0, vt1.c2, rt0.c1, vt1.c0))<=((vt1.c0, rt0.c2, rt0.c2, vt1.c1, rt0.c0))))*(vt1.c1))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c2) BETWEEN (vt1.c1) AND (vt1.c2))) BETWEEN (((vt1.c0)<(vt1.c0))) AND ((rt0.c1 IN (vt1.c0))))  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE ((((((vt1.c1, rt0.c0, vt1.c2, rt0.c1, vt1.c0))<=((vt1.c0, rt0.c2, rt0.c2, vt1.c1, rt0.c0))))*(vt1.c1))) ORDER BY ((((rt0.c2) BETWEEN (vt1.c1) AND (vt1.c2))) BETWEEN (((vt1.c0)<(vt1.c0))) AND ((rt0.c1 IN (vt1.c0))))  NULLS LAST;
SELECT * FROM vt1 WHERE (((((vt1.c0)|(vt1.c2))) NOT BETWEEN ((vt1.c1 IN (vt1.c1))) AND (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)|(vt1.c2))) NOT BETWEEN ((vt1.c1 IN (vt1.c1))) AND (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0)|(vt1.c2))) NOT BETWEEN ((vt1.c1 IN (vt1.c1))) AND (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)|(vt1.c2))) NOT BETWEEN ((vt1.c1 IN (vt1.c1))) AND (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0)|(vt1.c2))) NOT BETWEEN ((vt1.c1 IN (vt1.c1))) AND (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt1 ON rt1.c1 WHERE (((((x'86c6') ISNULL))<>((rt1.c1 IN ())))) ORDER BY (+ ((~ (rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'86c6') ISNULL))<>((rt1.c1 IN ())))) IS TRUE)  as count FROM vt1 NOT INDEXED RIGHT OUTER JOIN rt1 ON rt1.c1 ORDER BY (+ ((~ (rt1.c2)))));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt1 ON rt1.c1 WHERE (((((x'86c6') ISNULL))<>((rt1.c1 IN ())))) ORDER BY (+ ((~ (rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'86c6') ISNULL))<>((rt1.c1 IN ())))) IS TRUE)  as count FROM vt1 NOT INDEXED RIGHT OUTER JOIN rt1 ON rt1.c1 ORDER BY (+ ((~ (rt1.c2)))));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt1 ON rt1.c1 WHERE (((((x'86c6') ISNULL))<>((rt1.c1 IN ())))) ORDER BY (+ ((~ (rt1.c2))));
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c4 IN ())) NOT BETWEEN (IFNULL(rt1.c2, rt1.c0)) AND (CASE ''  WHEN rt1.c0 THEN ')' END))) ORDER BY x'' ASC, (CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c4 IN ())) NOT BETWEEN (IFNULL(rt1.c2, rt1.c0)) AND (CASE ''  WHEN rt1.c0 THEN ')' END))) IS TRUE)  as count FROM rt1 ORDER BY x'' ASC, (CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 END IN ())  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c4 IN ())) NOT BETWEEN (IFNULL(rt1.c2, rt1.c0)) AND (CASE ''  WHEN rt1.c0 THEN ')' END))) ORDER BY x'' ASC, (CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c4 IN ())) NOT BETWEEN (IFNULL(rt1.c2, rt1.c0)) AND (CASE ''  WHEN rt1.c0 THEN ')' END))) IS TRUE)  as count FROM rt1 ORDER BY x'' ASC, (CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 END IN ())  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c4 IN ())) NOT BETWEEN (IFNULL(rt1.c2, rt1.c0)) AND (CASE ''  WHEN rt1.c0 THEN ')' END))) ORDER BY x'' ASC, (CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 END IN ())  NULLS LAST;
SELECT COUNT(*) FROM rt0, rt1, vt1 WHERE (((((((vt1.c1)>=(rt1.c4)))AND(((((vt1.c0)OR(rt1.c0)))AND(x'')))))OR(COALESCE(DISTINCT rt0.c1, vt1.c1)))) ORDER BY CAST((((vt1.c2))==((vt1.c0))) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)>=(rt1.c4)))AND(((((vt1.c0)OR(rt1.c0)))AND(x'')))))OR(COALESCE(DISTINCT rt0.c1, vt1.c1)))) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY CAST((((vt1.c2))==((vt1.c0))) AS BLOB) DESC);
SELECT COUNT(*) FROM rt0, rt1, vt1 WHERE (((((((vt1.c1)>=(rt1.c4)))AND(((((vt1.c0)OR(rt1.c0)))AND(x'')))))OR(COALESCE(DISTINCT rt0.c1, vt1.c1)))) ORDER BY CAST((((vt1.c2))==((vt1.c0))) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)>=(rt1.c4)))AND(((((vt1.c0)OR(rt1.c0)))AND(x'')))))OR(COALESCE(DISTINCT rt0.c1, vt1.c1)))) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY CAST((((vt1.c2))==((vt1.c0))) AS BLOB) DESC);
SELECT COUNT(*) FROM rt0, rt1, vt1 WHERE (((((((vt1.c1)>=(rt1.c4)))AND(((((vt1.c0)OR(rt1.c0)))AND(x'')))))OR(COALESCE(DISTINCT rt0.c1, vt1.c1)))) ORDER BY CAST((((vt1.c2))==((vt1.c0))) AS BLOB) DESC;
SELECT COUNT(*) FROM rt1, vt1, rt0 WHERE ((((NOT (vt1.c0))) NOT BETWEEN (((((rt1.c2)OR(vt1.c0)))OR(rt0.c0))) AND (CAST(rt1.c3 AS REAL)))) ORDER BY DATETIME(((((rt1.c3)OR(rt1.c3)))AND(rt1.c3)), (~ (rt1.c4)), ((rt1.c2) IS FALSE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt1.c0))) NOT BETWEEN (((((rt1.c2)OR(vt1.c0)))OR(rt0.c0))) AND (CAST(rt1.c3 AS REAL)))) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY DATETIME(((((rt1.c3)OR(rt1.c3)))AND(rt1.c3)), (~ (rt1.c4)), ((rt1.c2) IS FALSE))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt1, rt0 WHERE ((((NOT (vt1.c0))) NOT BETWEEN (((((rt1.c2)OR(vt1.c0)))OR(rt0.c0))) AND (CAST(rt1.c3 AS REAL)))) ORDER BY DATETIME(((((rt1.c3)OR(rt1.c3)))AND(rt1.c3)), (~ (rt1.c4)), ((rt1.c2) IS FALSE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt1.c0))) NOT BETWEEN (((((rt1.c2)OR(vt1.c0)))OR(rt0.c0))) AND (CAST(rt1.c3 AS REAL)))) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY DATETIME(((((rt1.c3)OR(rt1.c3)))AND(rt1.c3)), (~ (rt1.c4)), ((rt1.c2) IS FALSE))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt1, rt0 WHERE ((((NOT (vt1.c0))) NOT BETWEEN (((((rt1.c2)OR(vt1.c0)))OR(rt0.c0))) AND (CAST(rt1.c3 AS REAL)))) ORDER BY DATETIME(((((rt1.c3)OR(rt1.c3)))AND(rt1.c3)), (~ (rt1.c4)), ((rt1.c2) IS FALSE))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1 NATURAL JOIN vt1 WHERE (CASE WHEN CASE WHEN vt1.c2 THEN vt1.c1 END THEN ((rt1.c1)+(rt1.c3)) ELSE ((((vt1.c0)OR(x'74d7')))OR(vt1.c1)) END) ORDER BY (((((rt0.c2))>((rt1.c3))))>(((rt0.c1)>(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt1.c2 THEN vt1.c1 END THEN ((rt1.c1)+(rt1.c3)) ELSE ((((vt1.c0)OR(x'74d7')))OR(vt1.c1)) END) IS TRUE)  as count FROM rt0, rt1 NATURAL JOIN vt1 ORDER BY (((((rt0.c2))>((rt1.c3))))>(((rt0.c1)>(rt0.c2)))) ASC);
SELECT ALL COUNT(*) FROM rt0, rt1 NATURAL JOIN vt1 WHERE (CASE WHEN CASE WHEN vt1.c2 THEN vt1.c1 END THEN ((rt1.c1)+(rt1.c3)) ELSE ((((vt1.c0)OR(x'74d7')))OR(vt1.c1)) END) ORDER BY (((((rt0.c2))>((rt1.c3))))>(((rt0.c1)>(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt1.c2 THEN vt1.c1 END THEN ((rt1.c1)+(rt1.c3)) ELSE ((((vt1.c0)OR(x'74d7')))OR(vt1.c1)) END) IS TRUE)  as count FROM rt0, rt1 NATURAL JOIN vt1 ORDER BY (((((rt0.c2))>((rt1.c3))))>(((rt0.c1)>(rt0.c2)))) ASC);
SELECT ALL COUNT(*) FROM rt0, rt1 NATURAL JOIN vt1 WHERE (CASE WHEN CASE WHEN vt1.c2 THEN vt1.c1 END THEN ((rt1.c1)+(rt1.c3)) ELSE ((((vt1.c0)OR(x'74d7')))OR(vt1.c1)) END) ORDER BY (((((rt0.c2))>((rt1.c3))))>(((rt0.c1)>(rt0.c2)))) ASC;
SELECT COUNT(*) FROM rt0, rt1 WHERE ((NOT ((rt1.c1 IN ())))) ORDER BY ((rt1.c3 COLLATE NOCASE) NOT BETWEEN (((rt1.c2)IS NOT(rt1.c3))) AND (((((rt1.c0)OR(rt1.c0)))OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT (((NOT ((rt1.c1 IN ())))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt1.c3 COLLATE NOCASE) NOT BETWEEN (((rt1.c2)IS NOT(rt1.c3))) AND (((((rt1.c0)OR(rt1.c0)))OR(rt0.c1)))));
SELECT COUNT(*) FROM rt0, rt1 WHERE ((NOT ((rt1.c1 IN ())))) ORDER BY ((rt1.c3 COLLATE NOCASE) NOT BETWEEN (((rt1.c2)IS NOT(rt1.c3))) AND (((((rt1.c0)OR(rt1.c0)))OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT (((NOT ((rt1.c1 IN ())))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt1.c3 COLLATE NOCASE) NOT BETWEEN (((rt1.c2)IS NOT(rt1.c3))) AND (((((rt1.c0)OR(rt1.c0)))OR(rt0.c1)))));
SELECT COUNT(*) FROM rt0, rt1 WHERE ((NOT ((rt1.c1 IN ())))) ORDER BY ((rt1.c3 COLLATE NOCASE) NOT BETWEEN (((rt1.c2)IS NOT(rt1.c3))) AND (((((rt1.c0)OR(rt1.c0)))OR(rt0.c1))));
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE BINARY) IS FALSE)) ORDER BY (((vt1.c2)GLOB(vt1.c2)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c2)GLOB(vt1.c2)) IN ())  NULLS FIRST);
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE BINARY) IS FALSE)) ORDER BY (((vt1.c2)GLOB(vt1.c2)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c2)GLOB(vt1.c2)) IN ())  NULLS FIRST);
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE BINARY) IS FALSE)) ORDER BY (((vt1.c2)GLOB(vt1.c2)) IN ())  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT * FROM rt1, vt1, rt0 WHERE (DATE(CASE WHEN vt1.c0 THEN rt1.c2 WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c1 THEN vt1.c0 ELSE rt0.c2 END, (vt1.c2 IN ()), CASE rt1.c4  WHEN rt1.c0 THEN vt1.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((DATE(CASE WHEN vt1.c0 THEN rt1.c2 WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c1 THEN vt1.c0 ELSE rt0.c2 END, (vt1.c2 IN ()), CASE rt1.c4  WHEN rt1.c0 THEN vt1.c2 END)) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT * FROM rt1, vt1, rt0 WHERE (DATE(CASE WHEN vt1.c0 THEN rt1.c2 WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c1 THEN vt1.c0 ELSE rt0.c2 END, (vt1.c2 IN ()), CASE rt1.c4  WHEN rt1.c0 THEN vt1.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((DATE(CASE WHEN vt1.c0 THEN rt1.c2 WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c1 THEN vt1.c0 ELSE rt0.c2 END, (vt1.c2 IN ()), CASE rt1.c4  WHEN rt1.c0 THEN vt1.c2 END)) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT * FROM rt1, vt1, rt0 WHERE (DATE(CASE WHEN vt1.c0 THEN rt1.c2 WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c1 THEN vt1.c0 ELSE rt0.c2 END, (vt1.c2 IN ()), CASE rt1.c4  WHEN rt1.c0 THEN vt1.c2 END));
SELECT ALL COUNT(*) FROM vt1, rt1 FULL OUTER JOIN rt0 ON (((~ (x'')))OR((rt1.c1 IN ()))) WHERE (((CAST(rt1.c4 AS INTEGER))==(((rt1.c3)IS(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c4 AS INTEGER))==(((rt1.c3)IS(vt1.c0))))) IS TRUE)  as count FROM vt1, rt1 FULL OUTER JOIN rt0 ON (((~ (x'')))OR((rt1.c1 IN ()))));
SELECT ALL COUNT(*) FROM vt1, rt1 FULL OUTER JOIN rt0 ON (((~ (x'')))OR((rt1.c1 IN ()))) WHERE (((CAST(rt1.c4 AS INTEGER))==(((rt1.c3)IS(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c4 AS INTEGER))==(((rt1.c3)IS(vt1.c0))))) IS TRUE)  as count FROM vt1, rt1 FULL OUTER JOIN rt0 ON (((~ (x'')))OR((rt1.c1 IN ()))));
SELECT ALL COUNT(*) FROM vt1, rt1 FULL OUTER JOIN rt0 ON (((~ (x'')))OR((rt1.c1 IN ()))) WHERE (((CAST(rt1.c4 AS INTEGER))==(((rt1.c3)IS(vt1.c0)))));
SELECT ALL * FROM rt1 WHERE ((((- (rt1.c0)))LIKE('u,Bd\n('))) ORDER BY ((((CASE WHEN rt1.c1 THEN 2.20837008E8 END)OR(((rt1.c4)/(rt1.c0)))))AND(rt1.c1)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (rt1.c0)))LIKE('u,Bd\n('))) IS TRUE)  as count FROM rt1 ORDER BY ((((CASE WHEN rt1.c1 THEN 2.20837008E8 END)OR(((rt1.c4)/(rt1.c0)))))AND(rt1.c1)) DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((((- (rt1.c0)))LIKE('u,Bd\n('))) ORDER BY ((((CASE WHEN rt1.c1 THEN 2.20837008E8 END)OR(((rt1.c4)/(rt1.c0)))))AND(rt1.c1)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (rt1.c0)))LIKE('u,Bd\n('))) IS TRUE)  as count FROM rt1 ORDER BY ((((CASE WHEN rt1.c1 THEN 2.20837008E8 END)OR(((rt1.c4)/(rt1.c0)))))AND(rt1.c1)) DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((((- (rt1.c0)))LIKE('u,Bd\n('))) ORDER BY ((((CASE WHEN rt1.c1 THEN 2.20837008E8 END)OR(((rt1.c4)/(rt1.c0)))))AND(rt1.c1)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE (CASE WHEN ((0.46539016210700557) NOT BETWEEN (rt1.c2) AND (vt1.c0)) THEN ((rt1.c3) NOT BETWEEN (rt1.c1) AND ('-1187846517')) ELSE rt1.c4 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((0.46539016210700557) NOT BETWEEN (rt1.c2) AND (vt1.c0)) THEN ((rt1.c3) NOT BETWEEN (rt1.c1) AND ('-1187846517')) ELSE rt1.c4 END) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE (CASE WHEN ((0.46539016210700557) NOT BETWEEN (rt1.c2) AND (vt1.c0)) THEN ((rt1.c3) NOT BETWEEN (rt1.c1) AND ('-1187846517')) ELSE rt1.c4 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((0.46539016210700557) NOT BETWEEN (rt1.c2) AND (vt1.c0)) THEN ((rt1.c3) NOT BETWEEN (rt1.c1) AND ('-1187846517')) ELSE rt1.c4 END) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE (CASE WHEN ((0.46539016210700557) NOT BETWEEN (rt1.c2) AND (vt1.c0)) THEN ((rt1.c3) NOT BETWEEN (rt1.c1) AND ('-1187846517')) ELSE rt1.c4 END);
SELECT * FROM vt1, rt1 WHERE (((((vt1.c0)<(vt1.c0)))<<(((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c0))))) ORDER BY ((((rt1.c1) NOT BETWEEN (rt1.c1) AND ('-455135251')))LIKE(((rt1.c2) BETWEEN (rt1.c0) AND (vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<(vt1.c0)))<<(((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c0))))) IS TRUE)  as count FROM vt1, rt1 ORDER BY ((((rt1.c1) NOT BETWEEN (rt1.c1) AND ('-455135251')))LIKE(((rt1.c2) BETWEEN (rt1.c0) AND (vt1.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt1, rt1 WHERE (((((vt1.c0)<(vt1.c0)))<<(((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c0))))) ORDER BY ((((rt1.c1) NOT BETWEEN (rt1.c1) AND ('-455135251')))LIKE(((rt1.c2) BETWEEN (rt1.c0) AND (vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<(vt1.c0)))<<(((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c0))))) IS TRUE)  as count FROM vt1, rt1 ORDER BY ((((rt1.c1) NOT BETWEEN (rt1.c1) AND ('-455135251')))LIKE(((rt1.c2) BETWEEN (rt1.c0) AND (vt1.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt1, rt1 WHERE (((((vt1.c0)<(vt1.c0)))<<(((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c0))))) ORDER BY ((((rt1.c1) NOT BETWEEN (rt1.c1) AND ('-455135251')))LIKE(((rt1.c2) BETWEEN (rt1.c0) AND (vt1.c0)))) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((NULL) IS TRUE)) ORDER BY ((rt0.c2)!=(rt0.c0)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2)!=(rt0.c0)) COLLATE NOCASE ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (((NULL) IS TRUE)) ORDER BY ((rt0.c2)!=(rt0.c0)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2)!=(rt0.c0)) COLLATE NOCASE ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (((NULL) IS TRUE)) ORDER BY ((rt0.c2)!=(rt0.c0)) COLLATE NOCASE ASC  NULLS LAST;
SELECT * FROM vt1, rt1 WHERE (((((rt1.c2) BETWEEN (x'') AND (rt1.c0)))*(vt1.c2))) ORDER BY (NOT (CAST(rt1.c4 AS REAL))) DESC  NULLS LAST, CAST(((((vt1.c1)OR(rt1.c0)))AND(vt1.c1)) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) BETWEEN (x'') AND (rt1.c0)))*(vt1.c2))) IS TRUE)  as count FROM vt1, rt1 ORDER BY (NOT (CAST(rt1.c4 AS REAL))) DESC  NULLS LAST, CAST(((((vt1.c1)OR(rt1.c0)))AND(vt1.c1)) AS BLOB) DESC  NULLS LAST);
SELECT * FROM vt1, rt1 WHERE (((((rt1.c2) BETWEEN (x'') AND (rt1.c0)))*(vt1.c2))) ORDER BY (NOT (CAST(rt1.c4 AS REAL))) DESC  NULLS LAST, CAST(((((vt1.c1)OR(rt1.c0)))AND(vt1.c1)) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) BETWEEN (x'') AND (rt1.c0)))*(vt1.c2))) IS TRUE)  as count FROM vt1, rt1 ORDER BY (NOT (CAST(rt1.c4 AS REAL))) DESC  NULLS LAST, CAST(((((vt1.c1)OR(rt1.c0)))AND(vt1.c1)) AS BLOB) DESC  NULLS LAST);
SELECT * FROM vt1, rt1 WHERE (((((rt1.c2) BETWEEN (x'') AND (rt1.c0)))*(vt1.c2))) ORDER BY (NOT (CAST(rt1.c4 AS REAL))) DESC  NULLS LAST, CAST(((((vt1.c1)OR(rt1.c0)))AND(vt1.c1)) AS BLOB) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c2 THEN '硗btVzx?' END)LIKE(((vt1.c0) BETWEEN (x'2615') AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c2 THEN '硗btVzx?' END)LIKE(((vt1.c0) BETWEEN (x'2615') AND (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c2 THEN '硗btVzx?' END)LIKE(((vt1.c0) BETWEEN (x'2615') AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c2 THEN '硗btVzx?' END)LIKE(((vt1.c0) BETWEEN (x'2615') AND (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c2 THEN '硗btVzx?' END)LIKE(((vt1.c0) BETWEEN (x'2615') AND (vt1.c1)))));
SELECT ALL * FROM rt1 WHERE ((((rt1.c4) NOT BETWEEN (rt1.c0) AND (rt1.c4)) IN ())) ORDER BY CASE WHEN CAST(rt1.c1 AS NUMERIC) THEN (rt1.c3 IN ()) WHEN ((rt1.c2)==(rt1.c0)) THEN CAST(rt1.c2 AS TEXT) WHEN ((rt1.c4) BETWEEN (rt1.c4) AND (0.724043555764152)) THEN ((rt1.c0) IS TRUE) ELSE ((rt1.c1)AND(NULL)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c4) NOT BETWEEN (rt1.c0) AND (rt1.c4)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN CAST(rt1.c1 AS NUMERIC) THEN (rt1.c3 IN ()) WHEN ((rt1.c2)=(rt1.c0)) THEN CAST(rt1.c2 AS TEXT) WHEN ((rt1.c4) BETWEEN (rt1.c4) AND (0.724043555764152)) THEN ((rt1.c0) IS TRUE) ELSE ((rt1.c1)AND(NULL)) END  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((((rt1.c4) NOT BETWEEN (rt1.c0) AND (rt1.c4)) IN ())) ORDER BY CASE WHEN CAST(rt1.c1 AS NUMERIC) THEN (rt1.c3 IN ()) WHEN ((rt1.c2)==(rt1.c0)) THEN CAST(rt1.c2 AS TEXT) WHEN ((rt1.c4) BETWEEN (rt1.c4) AND (0.724043555764152)) THEN ((rt1.c0) IS TRUE) ELSE ((rt1.c1)AND(NULL)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c4) NOT BETWEEN (rt1.c0) AND (rt1.c4)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN CAST(rt1.c1 AS NUMERIC) THEN (rt1.c3 IN ()) WHEN ((rt1.c2)=(rt1.c0)) THEN CAST(rt1.c2 AS TEXT) WHEN ((rt1.c4) BETWEEN (rt1.c4) AND (0.724043555764152)) THEN ((rt1.c0) IS TRUE) ELSE ((rt1.c1)AND(NULL)) END  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((((rt1.c4) NOT BETWEEN (rt1.c0) AND (rt1.c4)) IN ())) ORDER BY CASE WHEN CAST(rt1.c1 AS NUMERIC) THEN (rt1.c3 IN ()) WHEN ((rt1.c2)==(rt1.c0)) THEN CAST(rt1.c2 AS TEXT) WHEN ((rt1.c4) BETWEEN (rt1.c4) AND (0.724043555764152)) THEN ((rt1.c0) IS TRUE) ELSE ((rt1.c1)AND(NULL)) END  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) END);
SELECT * FROM rt0, vt1 WHERE (((rt0.c2 IN ()) IN ((((vt1.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c1, 0.5521318972067063, vt1.c2)) AND ((vt1.c2, '᜺x', rt0.c0))), vt1.c2)));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 IN ()) IN ((((vt1.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c1, 0.5521318972067063, vt1.c2)) AND ((vt1.c2, '᜺x', rt0.c0))), vt1.c2))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((rt0.c2 IN ()) IN ((((vt1.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c1, 0.5521318972067063, vt1.c2)) AND ((vt1.c2, '᜺x', rt0.c0))), vt1.c2)));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 IN ()) IN ((((vt1.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c1, 0.5521318972067063, vt1.c2)) AND ((vt1.c2, '᜺x', rt0.c0))), vt1.c2))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((rt0.c2 IN ()) IN ((((vt1.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c1, 0.5521318972067063, vt1.c2)) AND ((vt1.c2, '᜺x', rt0.c0))), vt1.c2)));
SELECT ALL * FROM rt1, vt1 INNER JOIN rt0 ON (((NOT (rt0.c2))) IS FALSE) WHERE (0.1684443512021785);
SELECT SUM(count) FROM (SELECT ALL ((0.1684443512021785) IS TRUE)  as count FROM rt1, vt1 INNER JOIN rt0 ON (((NOT (rt0.c2))) IS FALSE));
SELECT ALL * FROM rt1, vt1 INNER JOIN rt0 ON (((NOT (rt0.c2))) IS FALSE) WHERE (0.1684443512021785);
SELECT SUM(count) FROM (SELECT ALL ((0.1684443512021785) IS TRUE)  as count FROM rt1, vt1 INNER JOIN rt0 ON (((NOT (rt0.c2))) IS FALSE));
SELECT ALL * FROM rt1, vt1 INNER JOIN rt0 ON (((NOT (rt0.c2))) IS FALSE) WHERE (0.1684443512021785);
SELECT * FROM rt1, vt1 WHERE ((((((((('0.40357341427751803')AND(CASE WHEN rt1.c1 THEN rt1.c1 END)))AND((~ (rt1.c1)))))OR(((rt1.c1) IS FALSE))))AND(CASE rt1.c1  WHEN rt1.c1 THEN 'o%*M7o' WHEN rt1.c2 THEN rt1.c2 WHEN vt1.c0 THEN rt1.c4 ELSE rt1.c3 END))) ORDER BY (((rt1.c4)) BETWEEN (((((rt1.c4, rt1.c0, rt1.c1)) BETWEEN ((rt1.c3, vt1.c2, vt1.c1)) AND ((rt1.c2, '-844473333', rt1.c0))))) AND ((UPPER(rt1.c0)))) ASC, ((((rt1.c4) ISNULL))>>(vt1.c2)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((('0.40357341427751803')AND(CASE WHEN rt1.c1 THEN rt1.c1 END)))AND((~ (rt1.c1)))))OR(((rt1.c1) IS FALSE))))AND(CASE rt1.c1  WHEN rt1.c1 THEN 'o%*M7o' WHEN rt1.c2 THEN rt1.c2 WHEN vt1.c0 THEN rt1.c4 ELSE rt1.c3 END))) IS TRUE)  as count FROM rt1, vt1 ORDER BY (((rt1.c4)) BETWEEN (((((rt1.c4, rt1.c0, rt1.c1)) BETWEEN ((rt1.c3, vt1.c2, vt1.c1)) AND ((rt1.c2, '-844473333', rt1.c0))))) AND ((UPPER(rt1.c0)))) ASC, ((((rt1.c4) ISNULL))>>(vt1.c2)) DESC  NULLS FIRST);
SELECT * FROM rt1, vt1 WHERE ((((((((('0.40357341427751803')AND(CASE WHEN rt1.c1 THEN rt1.c1 END)))AND((~ (rt1.c1)))))OR(((rt1.c1) IS FALSE))))AND(CASE rt1.c1  WHEN rt1.c1 THEN 'o%*M7o' WHEN rt1.c2 THEN rt1.c2 WHEN vt1.c0 THEN rt1.c4 ELSE rt1.c3 END))) ORDER BY (((rt1.c4)) BETWEEN (((((rt1.c4, rt1.c0, rt1.c1)) BETWEEN ((rt1.c3, vt1.c2, vt1.c1)) AND ((rt1.c2, '-844473333', rt1.c0))))) AND ((UPPER(rt1.c0)))) ASC, ((((rt1.c4) ISNULL))>>(vt1.c2)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((('0.40357341427751803')AND(CASE WHEN rt1.c1 THEN rt1.c1 END)))AND((~ (rt1.c1)))))OR(((rt1.c1) IS FALSE))))AND(CASE rt1.c1  WHEN rt1.c1 THEN 'o%*M7o' WHEN rt1.c2 THEN rt1.c2 WHEN vt1.c0 THEN rt1.c4 ELSE rt1.c3 END))) IS TRUE)  as count FROM rt1, vt1 ORDER BY (((rt1.c4)) BETWEEN (((((rt1.c4, rt1.c0, rt1.c1)) BETWEEN ((rt1.c3, vt1.c2, vt1.c1)) AND ((rt1.c2, '-844473333', rt1.c0))))) AND ((UPPER(rt1.c0)))) ASC, ((((rt1.c4) ISNULL))>>(vt1.c2)) DESC  NULLS FIRST);
SELECT * FROM rt1, vt1 WHERE ((((((((('0.40357341427751803')AND(CASE WHEN rt1.c1 THEN rt1.c1 END)))AND((~ (rt1.c1)))))OR(((rt1.c1) IS FALSE))))AND(CASE rt1.c1  WHEN rt1.c1 THEN 'o%*M7o' WHEN rt1.c2 THEN rt1.c2 WHEN vt1.c0 THEN rt1.c4 ELSE rt1.c3 END))) ORDER BY (((rt1.c4)) BETWEEN (((((rt1.c4, rt1.c0, rt1.c1)) BETWEEN ((rt1.c3, vt1.c2, vt1.c1)) AND ((rt1.c2, '-844473333', rt1.c0))))) AND ((UPPER(rt1.c0)))) ASC, ((((rt1.c4) ISNULL))>>(vt1.c2)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((- (json_patch(rt1.c3, rt1.c3)))) ORDER BY LIKELIHOOD(rt1.c3 COLLATE NOCASE, 0.4523342080383205) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (json_patch(rt1.c3, rt1.c3)))) IS TRUE)  as count FROM rt1 ORDER BY LIKELIHOOD(rt1.c3 COLLATE NOCASE, 0.4523342080383205) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((- (json_patch(rt1.c3, rt1.c3)))) ORDER BY LIKELIHOOD(rt1.c3 COLLATE NOCASE, 0.4523342080383205) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (json_patch(rt1.c3, rt1.c3)))) IS TRUE)  as count FROM rt1 ORDER BY LIKELIHOOD(rt1.c3 COLLATE NOCASE, 0.4523342080383205) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((- (json_patch(rt1.c3, rt1.c3)))) ORDER BY LIKELIHOOD(rt1.c3 COLLATE NOCASE, 0.4523342080383205) DESC  NULLS LAST;
SELECT * FROM rt1 WHERE (CASE rt1.c4 COLLATE BINARY  WHEN ((rt1.c1)+(rt1.c0)) THEN ((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c2)) WHEN ((rt1.c4) NOTNULL) THEN CASE WHEN rt1.c0 THEN rt1.c3 END WHEN ((rt1.c0)<(rt1.c0)) THEN rt1.c2 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c4 COLLATE BINARY  WHEN ((rt1.c1)+(rt1.c0)) THEN ((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c2)) WHEN ((rt1.c4) NOTNULL) THEN CASE WHEN rt1.c0 THEN rt1.c3 END WHEN ((rt1.c0)<(rt1.c0)) THEN rt1.c2 COLLATE BINARY END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE rt1.c4 COLLATE BINARY  WHEN ((rt1.c1)+(rt1.c0)) THEN ((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c2)) WHEN ((rt1.c4) NOTNULL) THEN CASE WHEN rt1.c0 THEN rt1.c3 END WHEN ((rt1.c0)<(rt1.c0)) THEN rt1.c2 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c4 COLLATE BINARY  WHEN ((rt1.c1)+(rt1.c0)) THEN ((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c2)) WHEN ((rt1.c4) NOTNULL) THEN CASE WHEN rt1.c0 THEN rt1.c3 END WHEN ((rt1.c0)<(rt1.c0)) THEN rt1.c2 COLLATE BINARY END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE rt1.c4 COLLATE BINARY  WHEN ((rt1.c1)+(rt1.c0)) THEN ((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c2)) WHEN ((rt1.c4) NOTNULL) THEN CASE WHEN rt1.c0 THEN rt1.c3 END WHEN ((rt1.c0)<(rt1.c0)) THEN rt1.c2 COLLATE BINARY END);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON (NOT (TRIM(vt1.c2))) WHERE (((((((rt0.c0)OR(rt0.c0)))OR(vt1.c2))) IS TRUE)) ORDER BY (((((vt1.c2))>((vt1.c2)))) NOT BETWEEN ((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((rt0.c0)))) AND (0xffffffffbdb3c924)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(rt0.c0)))OR(vt1.c2))) IS TRUE)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON (NOT (TRIM(vt1.c2))) ORDER BY (((((vt1.c2))>((vt1.c2)))) NOT BETWEEN ((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((rt0.c0)))) AND (0xffffffffbdb3c924)) DESC);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON (NOT (TRIM(vt1.c2))) WHERE (((((((rt0.c0)OR(rt0.c0)))OR(vt1.c2))) IS TRUE)) ORDER BY (((((vt1.c2))>((vt1.c2)))) NOT BETWEEN ((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((rt0.c0)))) AND (0xffffffffbdb3c924)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(rt0.c0)))OR(vt1.c2))) IS TRUE)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON (NOT (TRIM(vt1.c2))) ORDER BY (((((vt1.c2))>((vt1.c2)))) NOT BETWEEN ((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((rt0.c0)))) AND (0xffffffffbdb3c924)) DESC);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON (NOT (TRIM(vt1.c2))) WHERE (((((((rt0.c0)OR(rt0.c0)))OR(vt1.c2))) IS TRUE)) ORDER BY (((((vt1.c2))>((vt1.c2)))) NOT BETWEEN ((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((rt0.c0)))) AND (0xffffffffbdb3c924)) DESC;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON (NOT (rt1.c0)) COLLATE BINARY WHERE (((((rt1.c0)LIKE(rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)LIKE(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (NOT (rt1.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON (NOT (rt1.c0)) COLLATE BINARY WHERE (((((rt1.c0)LIKE(rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)LIKE(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (NOT (rt1.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON (NOT (rt1.c0)) COLLATE BINARY WHERE (((((rt1.c0)LIKE(rt0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE x'416d' END COLLATE NOCASE) ORDER BY ((rt0.c2)>(rt0.c1))  NULLS LAST, ((CAST(NULL AS NUMERIC))LIKE(rt0.c1 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE x'416d' END COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2)>(rt0.c1))  NULLS LAST, ((CAST(NULL AS NUMERIC))LIKE(rt0.c1 COLLATE BINARY))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE x'416d' END COLLATE NOCASE) ORDER BY ((rt0.c2)>(rt0.c1))  NULLS LAST, ((CAST(NULL AS NUMERIC))LIKE(rt0.c1 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE x'416d' END COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2)>(rt0.c1))  NULLS LAST, ((CAST(NULL AS NUMERIC))LIKE(rt0.c1 COLLATE BINARY))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE x'416d' END COLLATE NOCASE) ORDER BY ((rt0.c2)>(rt0.c1))  NULLS LAST, ((CAST(NULL AS NUMERIC))LIKE(rt0.c1 COLLATE BINARY))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (rt1.c0) ORDER BY rt1.c3;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1, vt1 ORDER BY rt1.c3);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (rt1.c0) ORDER BY rt1.c3;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1, vt1 ORDER BY rt1.c3);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (rt1.c0) ORDER BY rt1.c3;
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON CASE WHEN (rt0.c0 IN (rt0.c0)) THEN rt1.c3 ELSE rt0.c0 END WHERE (((((rt1.c4)%(rt1.c2)))-(((((rt1.c1)AND(rt1.c3)))OR(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4)%(rt1.c2)))-(((((rt1.c1)AND(rt1.c3)))OR(NULL))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON CASE WHEN (rt0.c0 IN (rt0.c0)) THEN rt1.c3 ELSE rt0.c0 END);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON CASE WHEN (rt0.c0 IN (rt0.c0)) THEN rt1.c3 ELSE rt0.c0 END WHERE (((((rt1.c4)%(rt1.c2)))-(((((rt1.c1)AND(rt1.c3)))OR(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4)%(rt1.c2)))-(((((rt1.c1)AND(rt1.c3)))OR(NULL))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON CASE WHEN (rt0.c0 IN (rt0.c0)) THEN rt1.c3 ELSE rt0.c0 END);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON CASE WHEN (rt0.c0 IN (rt0.c0)) THEN rt1.c3 ELSE rt0.c0 END WHERE (((((rt1.c4)%(rt1.c2)))-(((((rt1.c1)AND(rt1.c3)))OR(NULL)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (ABS(((vt1.c2) ISNULL))) ORDER BY ((((vt1.c2)AND((((vt1.c1))<=(('{h*SiQCgN'))))))OR(CASE vt1.c0  WHEN vt1.c1 THEN '-1996329600' WHEN 'TRUE' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) DESC, CASE WHEN vt1.c0 THEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c2 END ELSE (~ (vt1.c0)) END  NULLS FIRST, CAST(CASE WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c2 THEN vt1.c2 ELSE -495006217 END AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(((vt1.c2) ISNULL))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c2)AND((((vt1.c1))<=(('{h*SiQCgN'))))))OR(CASE vt1.c0  WHEN vt1.c1 THEN '-1996329600' WHEN 'TRUE' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) DESC, CASE WHEN vt1.c0 THEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c2 END ELSE (~ (vt1.c0)) END  NULLS FIRST, CAST(CASE WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c2 THEN vt1.c2 ELSE -495006217 END AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (ABS(((vt1.c2) ISNULL))) ORDER BY ((((vt1.c2)AND((((vt1.c1))<=(('{h*SiQCgN'))))))OR(CASE vt1.c0  WHEN vt1.c1 THEN '-1996329600' WHEN 'TRUE' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) DESC, CASE WHEN vt1.c0 THEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c2 END ELSE (~ (vt1.c0)) END  NULLS FIRST, CAST(CASE WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c2 THEN vt1.c2 ELSE -495006217 END AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(((vt1.c2) ISNULL))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c2)AND((((vt1.c1))<=(('{h*SiQCgN'))))))OR(CASE vt1.c0  WHEN vt1.c1 THEN '-1996329600' WHEN 'TRUE' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) DESC, CASE WHEN vt1.c0 THEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c2 END ELSE (~ (vt1.c0)) END  NULLS FIRST, CAST(CASE WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c2 THEN vt1.c2 ELSE -495006217 END AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (ABS(((vt1.c2) ISNULL))) ORDER BY ((((vt1.c2)AND((((vt1.c1))<=(('{h*SiQCgN'))))))OR(CASE vt1.c0  WHEN vt1.c1 THEN '-1996329600' WHEN 'TRUE' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) DESC, CASE WHEN vt1.c0 THEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c2 END ELSE (~ (vt1.c0)) END  NULLS FIRST, CAST(CASE WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c2 THEN vt1.c2 ELSE -495006217 END AS INTEGER) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c1)IS NOT(vt1.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt1.c1)IS NOT(vt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c1)IS NOT(vt1.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt1.c1)IS NOT(vt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c1)IS NOT(vt1.c2)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST(((((((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))OR(rt0.c1)))OR(rt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))OR(rt0.c1)))OR(rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST(((((((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))OR(rt0.c1)))OR(rt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))OR(rt0.c1)))OR(rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST(((((((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))OR(rt0.c1)))OR(rt0.c1)) AS NUMERIC));
SELECT ALL * FROM vt1, rt1, rt0 WHERE ((~ (((rt1.c1) BETWEEN (rt0.c1) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt1.c1) BETWEEN (rt0.c1) AND (rt1.c2))))) IS TRUE)  as count FROM vt1, rt1, rt0);
SELECT ALL * FROM vt1, rt1, rt0 WHERE ((~ (((rt1.c1) BETWEEN (rt0.c1) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt1.c1) BETWEEN (rt0.c1) AND (rt1.c2))))) IS TRUE)  as count FROM vt1, rt1, rt0);
SELECT ALL * FROM vt1, rt1, rt0 WHERE ((~ (((rt1.c1) BETWEEN (rt0.c1) AND (rt1.c2)))));
SELECT * FROM rt1, rt0 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (rt1.c1);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE ((((vt1.c2, rt1.c1, rt1.c0)) NOT BETWEEN ((((rt1.c1)LIKE(0.47666929521840684)), CAST(rt1.c0 AS TEXT), CASE WHEN rt1.c0 THEN rt1.c2 END)) AND ((((rt1.c3) NOT NULL), ((rt1.c2) IS TRUE), ((((rt1.c3)AND(x'8be6')))AND(vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c2, rt1.c1, rt1.c0)) NOT BETWEEN ((((rt1.c1)LIKE(0.47666929521840684)), CAST(rt1.c0 AS TEXT), CASE WHEN rt1.c0 THEN rt1.c2 END)) AND ((((rt1.c3) NOT NULL), ((rt1.c2) IS TRUE), ((((rt1.c3)AND(x'8be6')))AND(vt1.c0)))))) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE ((((vt1.c2, rt1.c1, rt1.c0)) NOT BETWEEN ((((rt1.c1)LIKE(0.47666929521840684)), CAST(rt1.c0 AS TEXT), CASE WHEN rt1.c0 THEN rt1.c2 END)) AND ((((rt1.c3) NOT NULL), ((rt1.c2) IS TRUE), ((((rt1.c3)AND(x'8be6')))AND(vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c2, rt1.c1, rt1.c0)) NOT BETWEEN ((((rt1.c1)LIKE(0.47666929521840684)), CAST(rt1.c0 AS TEXT), CASE WHEN rt1.c0 THEN rt1.c2 END)) AND ((((rt1.c3) NOT NULL), ((rt1.c2) IS TRUE), ((((rt1.c3)AND(x'8be6')))AND(vt1.c0)))))) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE ((((vt1.c2, rt1.c1, rt1.c0)) NOT BETWEEN ((((rt1.c1)LIKE(0.47666929521840684)), CAST(rt1.c0 AS TEXT), CASE WHEN rt1.c0 THEN rt1.c2 END)) AND ((((rt1.c3) NOT NULL), ((rt1.c2) IS TRUE), ((((rt1.c3)AND(x'8be6')))AND(vt1.c0))))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON (((rt0.c2)|(rt1.c0)) IN ()) WHERE (-187586728);
SELECT SUM(count) FROM (SELECT ALL ((-187586728) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (((rt0.c2)|(rt1.c0)) IN ()));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON (((rt0.c2)|(rt1.c0)) IN ()) WHERE (-187586728);
SELECT SUM(count) FROM (SELECT ALL ((-187586728) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (((rt0.c2)|(rt1.c0)) IN ()));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON (((rt0.c2)|(rt1.c0)) IN ()) WHERE (-187586728);
SELECT ALL * FROM rt0, rt1, vt1 WHERE (CASE CASE rt1.c1  WHEN rt1.c4 THEN rt1.c2 ELSE vt1.c2 END  WHEN ((rt1.c0)GLOB(rt0.c2)) THEN ((rt1.c2) NOT BETWEEN (rt0.c1) AND (rt1.c2)) ELSE rt1.c4 COLLATE RTRIM END) ORDER BY load_extension(((((rt0.c2)AND(vt1.c0)))AND(vt1.c2)), rt0.c0 COLLATE RTRIM)  NULLS LAST, CAST(0.9631237233555041 AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt1.c1  WHEN rt1.c4 THEN rt1.c2 ELSE vt1.c2 END  WHEN ((rt1.c0)GLOB(rt0.c2)) THEN ((rt1.c2) NOT BETWEEN (rt0.c1) AND (rt1.c2)) ELSE rt1.c4 COLLATE RTRIM END) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY load_extension(((((rt0.c2)AND(vt1.c0)))AND(vt1.c2)), rt0.c0 COLLATE RTRIM)  NULLS LAST, CAST(0.9631237233555041 AS BLOB));
SELECT ALL * FROM rt0, rt1, vt1 WHERE (CASE CASE rt1.c1  WHEN rt1.c4 THEN rt1.c2 ELSE vt1.c2 END  WHEN ((rt1.c0)GLOB(rt0.c2)) THEN ((rt1.c2) NOT BETWEEN (rt0.c1) AND (rt1.c2)) ELSE rt1.c4 COLLATE RTRIM END) ORDER BY load_extension(((((rt0.c2)AND(vt1.c0)))AND(vt1.c2)), rt0.c0 COLLATE RTRIM)  NULLS LAST, CAST(0.9631237233555041 AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt1.c1  WHEN rt1.c4 THEN rt1.c2 ELSE vt1.c2 END  WHEN ((rt1.c0)GLOB(rt0.c2)) THEN ((rt1.c2) NOT BETWEEN (rt0.c1) AND (rt1.c2)) ELSE rt1.c4 COLLATE RTRIM END) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY load_extension(((((rt0.c2)AND(vt1.c0)))AND(vt1.c2)), rt0.c0 COLLATE RTRIM)  NULLS LAST, CAST(0.9631237233555041 AS BLOB));
SELECT COUNT(*) FROM rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN x'0444' WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END)OR(((rt0.c2) ISNULL))))AND('0,尋')));
SELECT SUM(count) FROM (SELECT ((((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN x'0444' WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END)OR(((rt0.c2) ISNULL))))AND('0,尋'))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN x'0444' WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END)OR(((rt0.c2) ISNULL))))AND('0,尋')));
SELECT SUM(count) FROM (SELECT ((((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN x'0444' WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END)OR(((rt0.c2) ISNULL))))AND('0,尋'))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN x'0444' WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END)OR(((rt0.c2) ISNULL))))AND('0,尋')));
SELECT * FROM rt1 WHERE ((- ((NOT (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((NOT (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((- ((NOT (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((NOT (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((- ((NOT (rt1.c0)))));
SELECT * FROM vt1 WHERE ((((((vt1.c0, vt1.c0, NULL))<=((vt1.c2, vt1.c2, 0.387209238741688)))) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) AND (-664106888)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, vt1.c0, NULL))<=((vt1.c2, vt1.c2, 0.387209238741688)))) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) AND (-664106888))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c0, vt1.c0, NULL))<=((vt1.c2, vt1.c2, 0.387209238741688)))) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) AND (-664106888)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, vt1.c0, NULL))<=((vt1.c2, vt1.c2, 0.387209238741688)))) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) AND (-664106888))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c0, vt1.c0, NULL))<=((vt1.c2, vt1.c2, 0.387209238741688)))) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) AND (-664106888)));
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c1 IN ('0.8378146333857326', rt1.c4)))OR(((rt1.c2)!=(rt1.c1)))))OR(((rt1.c3)GLOB(rt1.c3))))) ORDER BY (((((- (rt1.c2)))AND(((rt1.c1)GLOB(rt1.c1)))))AND(((rt1.c4)GLOB(rt1.c3)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c1 IN ('0.8378146333857326', rt1.c4)))OR(((rt1.c2)!=(rt1.c1)))))OR(((rt1.c3)GLOB(rt1.c3))))) IS TRUE)  as count FROM rt1 ORDER BY (((((- (rt1.c2)))AND(((rt1.c1)GLOB(rt1.c1)))))AND(((rt1.c4)GLOB(rt1.c3)))) DESC);
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c1 IN ('0.8378146333857326', rt1.c4)))OR(((rt1.c2)!=(rt1.c1)))))OR(((rt1.c3)GLOB(rt1.c3))))) ORDER BY (((((- (rt1.c2)))AND(((rt1.c1)GLOB(rt1.c1)))))AND(((rt1.c4)GLOB(rt1.c3)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c1 IN ('0.8378146333857326', rt1.c4)))OR(((rt1.c2)!=(rt1.c1)))))OR(((rt1.c3)GLOB(rt1.c3))))) IS TRUE)  as count FROM rt1 ORDER BY (((((- (rt1.c2)))AND(((rt1.c1)GLOB(rt1.c1)))))AND(((rt1.c4)GLOB(rt1.c3)))) DESC);
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c1 IN ('0.8378146333857326', rt1.c4)))OR(((rt1.c2)!=(rt1.c1)))))OR(((rt1.c3)GLOB(rt1.c3))))) ORDER BY (((((- (rt1.c2)))AND(((rt1.c1)GLOB(rt1.c1)))))AND(((rt1.c4)GLOB(rt1.c3)))) DESC;
SELECT * FROM vt1, rt0 WHERE (((((rt0.c2 IN ())))!=(((~ (vt1.c0)))))) ORDER BY (~ ((rt0.c2 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2 IN ())))!=(((~ (vt1.c0)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (~ ((rt0.c2 IN ()))) ASC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (((((rt0.c2 IN ())))!=(((~ (vt1.c0)))))) ORDER BY (~ ((rt0.c2 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2 IN ())))!=(((~ (vt1.c0)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (~ ((rt0.c2 IN ()))) ASC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (((((rt0.c2 IN ())))!=(((~ (vt1.c0)))))) ORDER BY (~ ((rt0.c2 IN ()))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (CAST(CASE WHEN rt1.c1 THEN 1880849779 WHEN vt1.c2 THEN rt1.c4 WHEN vt1.c1 THEN vt1.c0 END AS REAL)) ORDER BY ((((rt1.c1)|(rt1.c1))) BETWEEN (rt1.c3) AND ((('-1353879273')/(vt1.c1)))) ASC, ((NULL)GLOB((((vt1.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt1.c1 THEN 1880849779 WHEN vt1.c2 THEN rt1.c4 WHEN vt1.c1 THEN vt1.c0 END AS REAL)) IS TRUE)  as count FROM rt1, vt1 ORDER BY ((((rt1.c1)|(rt1.c1))) BETWEEN (rt1.c3) AND ((('-1353879273')/(vt1.c1)))) ASC, ((NULL)GLOB((((vt1.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c1))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (CAST(CASE WHEN rt1.c1 THEN 1880849779 WHEN vt1.c2 THEN rt1.c4 WHEN vt1.c1 THEN vt1.c0 END AS REAL)) ORDER BY ((((rt1.c1)|(rt1.c1))) BETWEEN (rt1.c3) AND ((('-1353879273')/(vt1.c1)))) ASC, ((NULL)GLOB((((vt1.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt1.c1 THEN 1880849779 WHEN vt1.c2 THEN rt1.c4 WHEN vt1.c1 THEN vt1.c0 END AS REAL)) IS TRUE)  as count FROM rt1, vt1 ORDER BY ((((rt1.c1)|(rt1.c1))) BETWEEN (rt1.c3) AND ((('-1353879273')/(vt1.c1)))) ASC, ((NULL)GLOB((((vt1.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c1))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (CAST(CASE WHEN rt1.c1 THEN 1880849779 WHEN vt1.c2 THEN rt1.c4 WHEN vt1.c1 THEN vt1.c0 END AS REAL)) ORDER BY ((((rt1.c1)|(rt1.c1))) BETWEEN (rt1.c3) AND ((('-1353879273')/(vt1.c1)))) ASC, ((NULL)GLOB((((vt1.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c1))))) ASC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((((vt1.c2)+(vt1.c0)))AND(((vt1.c2) BETWEEN (vt1.c1) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c2)+(vt1.c0)))AND(((vt1.c2) BETWEEN (vt1.c1) AND (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c2)+(vt1.c0)))AND(((vt1.c2) BETWEEN (vt1.c1) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c2)+(vt1.c0)))AND(((vt1.c2) BETWEEN (vt1.c1) AND (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c2)+(vt1.c0)))AND(((vt1.c2) BETWEEN (vt1.c1) AND (vt1.c1)))));
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE (rt0.c2) ORDER BY CASE WHEN CASE WHEN vt1.c1 THEN rt1.c4 WHEN 564552345 THEN rt0.c2 WHEN vt1.c2 THEN x'' WHEN rt1.c0 THEN vt1.c1 WHEN NULL THEN rt1.c0 WHEN rt1.c4 THEN rt1.c1 WHEN NULL THEN rt0.c0 END THEN (((vt1.c0, NULL, rt1.c4, -9223372036854775808, vt1.c1))<=((rt1.c3, vt1.c1, rt1.c0, rt1.c2, rt0.c1))) END;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY CASE WHEN CASE WHEN vt1.c1 THEN rt1.c4 WHEN 564552345 THEN rt0.c2 WHEN vt1.c2 THEN x'' WHEN rt1.c0 THEN vt1.c1 WHEN NULL THEN rt1.c0 WHEN rt1.c4 THEN rt1.c1 WHEN NULL THEN rt0.c0 END THEN (((vt1.c0, NULL, rt1.c4, -9223372036854775808, vt1.c1))<=((rt1.c3, vt1.c1, rt1.c0, rt1.c2, rt0.c1))) END);
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE (rt0.c2) ORDER BY CASE WHEN CASE WHEN vt1.c1 THEN rt1.c4 WHEN 564552345 THEN rt0.c2 WHEN vt1.c2 THEN x'' WHEN rt1.c0 THEN vt1.c1 WHEN NULL THEN rt1.c0 WHEN rt1.c4 THEN rt1.c1 WHEN NULL THEN rt0.c0 END THEN (((vt1.c0, NULL, rt1.c4, -9223372036854775808, vt1.c1))<=((rt1.c3, vt1.c1, rt1.c0, rt1.c2, rt0.c1))) END;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY CASE WHEN CASE WHEN vt1.c1 THEN rt1.c4 WHEN 564552345 THEN rt0.c2 WHEN vt1.c2 THEN x'' WHEN rt1.c0 THEN vt1.c1 WHEN NULL THEN rt1.c0 WHEN rt1.c4 THEN rt1.c1 WHEN NULL THEN rt0.c0 END THEN (((vt1.c0, NULL, rt1.c4, -9223372036854775808, vt1.c1))<=((rt1.c3, vt1.c1, rt1.c0, rt1.c2, rt0.c1))) END);
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE (rt0.c2) ORDER BY CASE WHEN CASE WHEN vt1.c1 THEN rt1.c4 WHEN 564552345 THEN rt0.c2 WHEN vt1.c2 THEN x'' WHEN rt1.c0 THEN vt1.c1 WHEN NULL THEN rt1.c0 WHEN rt1.c4 THEN rt1.c1 WHEN NULL THEN rt0.c0 END THEN (((vt1.c0, NULL, rt1.c4, -9223372036854775808, vt1.c1))<=((rt1.c3, vt1.c1, rt1.c0, rt1.c2, rt0.c1))) END;
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE (rt1.c3);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (((CAST(vt1.c1 AS REAL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c1 AS REAL)) NOT NULL)) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (((CAST(vt1.c1 AS REAL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c1 AS REAL)) NOT NULL)) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (((CAST(vt1.c1 AS REAL)) NOT NULL));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c1))=((rt1.c2))))GLOB(CAST(rt1.c0 AS NUMERIC)))) ORDER BY 0x5895f425 DESC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c1))=((rt1.c2))))GLOB(CAST(rt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt1 ORDER BY 0X5895f425 DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c1))=((rt1.c2))))GLOB(CAST(rt1.c0 AS NUMERIC)))) ORDER BY 0x5895f425 DESC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c1))=((rt1.c2))))GLOB(CAST(rt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt1 ORDER BY 0X5895f425 DESC);
SELECT ALL * FROM rt1 WHERE ((((+ (rt1.c2)))IS NOT(((-1762453328)OR(rt1.c3)))));
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c2)))IS NOT(((-1762453328)OR(rt1.c3))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((+ (rt1.c2)))IS NOT(((-1762453328)OR(rt1.c3)))));
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c2)))IS NOT(((-1762453328)OR(rt1.c3))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((+ (rt1.c2)))IS NOT(((-1762453328)OR(rt1.c3)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1, rt0.c2, NULL)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c1, x'0d22'))), ((rt0.c0) ISNULL), CAST(rt0.c0 AS TEXT), (rt0.c0 IN ()), x''))>=(((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))), (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))), 'E&', ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c0 COLLATE RTRIM)))) ORDER BY ((COALESCE(DISTINCT rt0.c1, rt0.c0)) NOT BETWEEN (((rt0.c0) NOTNULL)) AND (rt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1, rt0.c2, NULL)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c1, x'0d22'))), ((rt0.c0) ISNULL), CAST(rt0.c0 AS TEXT), (rt0.c0 IN ()), x''))>=(((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))), (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))), 'E&', ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0 ORDER BY ((COALESCE(DISTINCT rt0.c1, rt0.c0)) NOT BETWEEN (((rt0.c0) NOTNULL)) AND (rt0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1, rt0.c2, NULL)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c1, x'0d22'))), ((rt0.c0) ISNULL), CAST(rt0.c0 AS TEXT), (rt0.c0 IN ()), x''))>=(((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))), (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))), 'E&', ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c0 COLLATE RTRIM)))) ORDER BY ((COALESCE(DISTINCT rt0.c1, rt0.c0)) NOT BETWEEN (((rt0.c0) NOTNULL)) AND (rt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1, rt0.c2, NULL)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c1, x'0d22'))), ((rt0.c0) ISNULL), CAST(rt0.c0 AS TEXT), (rt0.c0 IN ()), x''))>=(((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))), (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))), 'E&', ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0 ORDER BY ((COALESCE(DISTINCT rt0.c1, rt0.c0)) NOT BETWEEN (((rt0.c0) NOTNULL)) AND (rt0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1, rt0.c2, NULL)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c1, x'0d22'))), ((rt0.c0) ISNULL), CAST(rt0.c0 AS TEXT), (rt0.c0 IN ()), x''))>=(((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))), (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))), 'E&', ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c0 COLLATE RTRIM)))) ORDER BY ((COALESCE(DISTINCT rt0.c1, rt0.c0)) NOT BETWEEN (((rt0.c0) NOTNULL)) AND (rt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((vt1.c0 COLLATE RTRIM)OR((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((rt0.c0))))))AND(vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 COLLATE RTRIM)OR((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((rt0.c0))))))AND(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((vt1.c0 COLLATE RTRIM)OR((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((rt0.c0))))))AND(vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 COLLATE RTRIM)OR((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((rt0.c0))))))AND(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((vt1.c0 COLLATE RTRIM)OR((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((rt0.c0))))))AND(vt1.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt1 WHERE (0.2196389410905374) ORDER BY (('')|(CAST(vt1.c2 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.2196389410905374) IS TRUE)  as count FROM vt1 ORDER BY (('')|(CAST(vt1.c2 AS TEXT))) ASC);
SELECT COUNT(*) FROM vt1 WHERE (0.2196389410905374) ORDER BY (('')|(CAST(vt1.c2 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.2196389410905374) IS TRUE)  as count FROM vt1 ORDER BY (('')|(CAST(vt1.c2 AS TEXT))) ASC);
SELECT COUNT(*) FROM vt1 WHERE (0.2196389410905374) ORDER BY (('')|(CAST(vt1.c2 AS TEXT))) ASC;
SELECT COUNT(*) FROM vt1, rt1 CROSS JOIN rt0 ON (((rt1.c1 COLLATE NOCASE))<((MIN(rt0.c2, rt0.c2, 0.4042661555501127, vt1.c2)))) WHERE ((((rt1.c2) ISNULL) IN (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2) ISNULL) IN (NULL))) IS TRUE)  as count FROM vt1, rt1 CROSS JOIN rt0 ON (((rt1.c1 COLLATE NOCASE))<((MIN(rt0.c2, rt0.c2, 0.4042661555501127, vt1.c2)))));
SELECT COUNT(*) FROM vt1, rt1 CROSS JOIN rt0 ON (((rt1.c1 COLLATE NOCASE))<((MIN(rt0.c2, rt0.c2, 0.4042661555501127, vt1.c2)))) WHERE ((((rt1.c2) ISNULL) IN (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2) ISNULL) IN (NULL))) IS TRUE)  as count FROM vt1, rt1 CROSS JOIN rt0 ON (((rt1.c1 COLLATE NOCASE))<((MIN(rt0.c2, rt0.c2, 0.4042661555501127, vt1.c2)))));
SELECT COUNT(*) FROM vt1, rt1 CROSS JOIN rt0 ON (((rt1.c1 COLLATE NOCASE))<((MIN(rt0.c2, rt0.c2, 0.4042661555501127, vt1.c2)))) WHERE ((((rt1.c2) ISNULL) IN (NULL)));
SELECT ALL * FROM vt1, rt1 LEFT OUTER JOIN rt0 ON 0.18122859806012348 COLLATE NOCASE COLLATE BINARY WHERE (CASE WHEN vt1.c0 THEN NULL WHEN rt0.c2 THEN rt1.c4 WHEN 0.10715647003989837 THEN '' ELSE rt0.c0 END COLLATE NOCASE) ORDER BY ((((rt1.c2)AND(rt1.c3)))AND(rt1.c2)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c0 THEN NULL WHEN rt0.c2 THEN rt1.c4 WHEN 0.10715647003989837 THEN '' ELSE rt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt1 LEFT OUTER JOIN rt0 ON 0.18122859806012348 COLLATE NOCASE COLLATE BINARY ORDER BY ((((rt1.c2)AND(rt1.c3)))AND(rt1.c2)) COLLATE RTRIM DESC);
SELECT ALL * FROM vt1, rt1 LEFT OUTER JOIN rt0 ON 0.18122859806012348 COLLATE NOCASE COLLATE BINARY WHERE (CASE WHEN vt1.c0 THEN NULL WHEN rt0.c2 THEN rt1.c4 WHEN 0.10715647003989837 THEN '' ELSE rt0.c0 END COLLATE NOCASE) ORDER BY ((((rt1.c2)AND(rt1.c3)))AND(rt1.c2)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c0 THEN NULL WHEN rt0.c2 THEN rt1.c4 WHEN 0.10715647003989837 THEN '' ELSE rt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt1 LEFT OUTER JOIN rt0 ON 0.18122859806012348 COLLATE NOCASE COLLATE BINARY ORDER BY ((((rt1.c2)AND(rt1.c3)))AND(rt1.c2)) COLLATE RTRIM DESC);
SELECT ALL * FROM vt1, rt1 LEFT OUTER JOIN rt0 ON 0.18122859806012348 COLLATE NOCASE COLLATE BINARY WHERE (CASE WHEN vt1.c0 THEN NULL WHEN rt0.c2 THEN rt1.c4 WHEN 0.10715647003989837 THEN '' ELSE rt0.c0 END COLLATE NOCASE) ORDER BY ((((rt1.c2)AND(rt1.c3)))AND(rt1.c2)) COLLATE RTRIM DESC;
SELECT ALL * FROM rt0, rt1 WHERE (((((((((((((((rt1.c1)OR(rt1.c3)))OR(rt1.c2)))AND(rt0.c1)))AND(rt0.c2)))OR(rt1.c0)))AND(rt1.c0)))==(((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt1.c3))))) ORDER BY ((CAST(rt1.c2 AS BLOB)) BETWEEN (((rt0.c0)<>(rt0.c0))) AND (rt1.c0)) DESC, ((((((((rt0.c2 COLLATE NOCASE)AND((rt0.c1 IN ()))))OR(((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt0.c2)))))OR('595706210')))OR(rt1.c4))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt1.c1)OR(rt1.c3)))OR(rt1.c2)))AND(rt0.c1)))AND(rt0.c2)))OR(rt1.c0)))AND(rt1.c0)))=(((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt1.c3))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((CAST(rt1.c2 AS BLOB)) BETWEEN (((rt0.c0)!=(rt0.c0))) AND (rt1.c0)) DESC, ((((((((rt0.c2 COLLATE NOCASE)AND((rt0.c1 IN ()))))OR(((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt0.c2)))))OR('595706210')))OR(rt1.c4))  NULLS LAST);
SELECT ALL * FROM rt0, rt1 WHERE (((((((((((((((rt1.c1)OR(rt1.c3)))OR(rt1.c2)))AND(rt0.c1)))AND(rt0.c2)))OR(rt1.c0)))AND(rt1.c0)))==(((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt1.c3))))) ORDER BY ((CAST(rt1.c2 AS BLOB)) BETWEEN (((rt0.c0)<>(rt0.c0))) AND (rt1.c0)) DESC, ((((((((rt0.c2 COLLATE NOCASE)AND((rt0.c1 IN ()))))OR(((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt0.c2)))))OR('595706210')))OR(rt1.c4))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt1.c1)OR(rt1.c3)))OR(rt1.c2)))AND(rt0.c1)))AND(rt0.c2)))OR(rt1.c0)))AND(rt1.c0)))=(((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt1.c3))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((CAST(rt1.c2 AS BLOB)) BETWEEN (((rt0.c0)!=(rt0.c0))) AND (rt1.c0)) DESC, ((((((((rt0.c2 COLLATE NOCASE)AND((rt0.c1 IN ()))))OR(((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt0.c2)))))OR('595706210')))OR(rt1.c4))  NULLS LAST);
SELECT ALL * FROM rt0, rt1 WHERE (((((((((((((((rt1.c1)OR(rt1.c3)))OR(rt1.c2)))AND(rt0.c1)))AND(rt0.c2)))OR(rt1.c0)))AND(rt1.c0)))==(((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt1.c3))))) ORDER BY ((CAST(rt1.c2 AS BLOB)) BETWEEN (((rt0.c0)<>(rt0.c0))) AND (rt1.c0)) DESC, ((((((((rt0.c2 COLLATE NOCASE)AND((rt0.c1 IN ()))))OR(((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt0.c2)))))OR('595706210')))OR(rt1.c4))  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c2, CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END, vt1.c0))<((((vt1.c0)LIKE(vt1.c0)), CAST(vt1.c0 AS NUMERIC), vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((vt1.c2, CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END, vt1.c0))<((((vt1.c0)LIKE(vt1.c0)), CAST(vt1.c0 AS NUMERIC), vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c2, CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END, vt1.c0))<((((vt1.c0)LIKE(vt1.c0)), CAST(vt1.c0 AS NUMERIC), vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((vt1.c2, CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END, vt1.c0))<((((vt1.c0)LIKE(vt1.c0)), CAST(vt1.c0 AS NUMERIC), vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c2, CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END, vt1.c0))<((((vt1.c0)LIKE(vt1.c0)), CAST(vt1.c0 AS NUMERIC), vt1.c0))));
SELECT COUNT(*) FROM rt0 WHERE (0.10013651238374277);
SELECT SUM(count) FROM (SELECT ALL ((0.10013651238374277) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (0.10013651238374277);
SELECT SUM(count) FROM (SELECT ALL ((0.10013651238374277) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (0.10013651238374277);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((vt1.c2) ISNULL)) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (((((vt1.c0)OR(rt0.c1)))AND(rt0.c0))))) ORDER BY ((((((vt1.c0)IS NOT(vt1.c1)))OR(UPPER(vt1.c1))))OR((rt0.c2 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c2) ISNULL)) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (((((vt1.c0)OR(rt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((vt1.c0)IS NOT(vt1.c1)))OR(UPPER(vt1.c1))))OR((rt0.c2 IN ()))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((vt1.c2) ISNULL)) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (((((vt1.c0)OR(rt0.c1)))AND(rt0.c0))))) ORDER BY ((((((vt1.c0)IS NOT(vt1.c1)))OR(UPPER(vt1.c1))))OR((rt0.c2 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c2) ISNULL)) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (((((vt1.c0)OR(rt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((vt1.c0)IS NOT(vt1.c1)))OR(UPPER(vt1.c1))))OR((rt0.c2 IN ()))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((vt1.c2) ISNULL)) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (((((vt1.c0)OR(rt0.c1)))AND(rt0.c0))))) ORDER BY ((((((vt1.c0)IS NOT(vt1.c1)))OR(UPPER(vt1.c1))))OR((rt0.c2 IN ()))) ASC;
SELECT * FROM vt1, rt0 WHERE (rt0.c0) ORDER BY ((vt1.c0 COLLATE NOCASE) NOT BETWEEN ((x'' IN ())) AND ((((rt0.c1))>((vt1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((vt1.c0 COLLATE NOCASE) NOT BETWEEN ((x'' IN ())) AND ((((rt0.c1))>((vt1.c0))))) DESC  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE (rt0.c0) ORDER BY ((vt1.c0 COLLATE NOCASE) NOT BETWEEN ((x'' IN ())) AND ((((rt0.c1))>((vt1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((vt1.c0 COLLATE NOCASE) NOT BETWEEN ((x'' IN ())) AND ((((rt0.c1))>((vt1.c0))))) DESC  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE (rt0.c0) ORDER BY ((vt1.c0 COLLATE NOCASE) NOT BETWEEN ((x'' IN ())) AND ((((rt0.c1))>((vt1.c0))))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)IS(NULL))) ISNULL)) ORDER BY CAST((rt0.c2 IN ()) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)IS(NULL))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY CAST((rt0.c2 IN ()) AS REAL) ASC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)IS(NULL))) ISNULL)) ORDER BY CAST((rt0.c2 IN ()) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)IS(NULL))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY CAST((rt0.c2 IN ()) AS REAL) ASC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)IS(NULL))) ISNULL)) ORDER BY CAST((rt0.c2 IN ()) AS REAL) ASC;
SELECT COUNT(*) FROM rt1, vt1 WHERE (((rt1.c2) NOTNULL) COLLATE RTRIM) ORDER BY CASE WHEN (('0.8602914048646484')IS(vt1.c0)) THEN ((rt1.c4) NOT BETWEEN (vt1.c1) AND (vt1.c0)) ELSE CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 WHEN vt1.c1 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c1 END END  NULLS LAST, 0.3949381960960594;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt1 ORDER BY CASE WHEN (('0.8602914048646484')IS(vt1.c0)) THEN ((rt1.c4) NOT BETWEEN (vt1.c1) AND (vt1.c0)) ELSE CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 WHEN vt1.c1 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c1 END END  NULLS LAST, 0.3949381960960594);
SELECT COUNT(*) FROM rt1, vt1 WHERE (((rt1.c2) NOTNULL) COLLATE RTRIM) ORDER BY CASE WHEN (('0.8602914048646484')IS(vt1.c0)) THEN ((rt1.c4) NOT BETWEEN (vt1.c1) AND (vt1.c0)) ELSE CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 WHEN vt1.c1 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c1 END END  NULLS LAST, 0.3949381960960594;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt1 ORDER BY CASE WHEN (('0.8602914048646484')IS(vt1.c0)) THEN ((rt1.c4) NOT BETWEEN (vt1.c1) AND (vt1.c0)) ELSE CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 WHEN vt1.c1 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c1 END END  NULLS LAST, 0.3949381960960594);
SELECT COUNT(*) FROM rt1, vt1 WHERE (((rt1.c2) NOTNULL) COLLATE RTRIM) ORDER BY CASE WHEN (('0.8602914048646484')IS(vt1.c0)) THEN ((rt1.c4) NOT BETWEEN (vt1.c1) AND (vt1.c0)) ELSE CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 WHEN vt1.c1 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c1 END END  NULLS LAST, 0.3949381960960594;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (SQLITE_COMPILEOPTION_GET(CASE rt1.c0  WHEN rt1.c3 THEN rt1.c4 WHEN 'Y\nv	' THEN rt1.c1 WHEN rt0.c1 THEN rt1.c0 ELSE rt1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(CASE rt1.c0  WHEN rt1.c3 THEN rt1.c4 WHEN 'Y\nv	' THEN rt1.c1 WHEN rt0.c1 THEN rt1.c0 ELSE rt1.c0 END)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (SQLITE_COMPILEOPTION_GET(CASE rt1.c0  WHEN rt1.c3 THEN rt1.c4 WHEN 'Y\nv	' THEN rt1.c1 WHEN rt0.c1 THEN rt1.c0 ELSE rt1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(CASE rt1.c0  WHEN rt1.c3 THEN rt1.c4 WHEN 'Y\nv	' THEN rt1.c1 WHEN rt0.c1 THEN rt1.c0 ELSE rt1.c0 END)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (SQLITE_COMPILEOPTION_GET(CASE rt1.c0  WHEN rt1.c3 THEN rt1.c4 WHEN 'Y\nv	' THEN rt1.c1 WHEN rt0.c1 THEN rt1.c0 ELSE rt1.c0 END));
SELECT * FROM rt1 WHERE ((((rt1.c2))<>((rt1.c2))) COLLATE RTRIM) ORDER BY (- (rt1.c0)), (- ((((NULL)) BETWEEN ((rt1.c3)) AND ((rt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c2))!=((rt1.c2))) COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY (- (rt1.c0)), (- ((((NULL)) BETWEEN ((rt1.c3)) AND ((rt1.c0))))) ASC);
SELECT * FROM rt1 WHERE ((((rt1.c2))<>((rt1.c2))) COLLATE RTRIM) ORDER BY (- (rt1.c0)), (- ((((NULL)) BETWEEN ((rt1.c3)) AND ((rt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c2))!=((rt1.c2))) COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY (- (rt1.c0)), (- ((((NULL)) BETWEEN ((rt1.c3)) AND ((rt1.c0))))) ASC);
SELECT * FROM rt1 WHERE ((((rt1.c2))<>((rt1.c2))) COLLATE RTRIM) ORDER BY (- (rt1.c0)), (- ((((NULL)) BETWEEN ((rt1.c3)) AND ((rt1.c0))))) ASC;
SELECT ALL * FROM rt1, rt0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c1)>=(rt0.c2)))OR(CAST('0.5051508855403449' AS INTEGER))))OR(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c4)))) WHERE ((((0.27210558960248965))!=(((~ (vt1.c1)))))) ORDER BY (((rt0.c0))<=((CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((0.27210558960248965))!=(((~ (vt1.c1)))))) IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c1)>=(rt0.c2)))OR(CAST('0.5051508855403449' AS INTEGER))))OR(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c4)))) ORDER BY (((rt0.c0))<=((CAST(vt1.c0 AS TEXT)))));
SELECT ALL * FROM rt1, rt0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c1)>=(rt0.c2)))OR(CAST('0.5051508855403449' AS INTEGER))))OR(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c4)))) WHERE ((((0.27210558960248965))!=(((~ (vt1.c1)))))) ORDER BY (((rt0.c0))<=((CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((0.27210558960248965))!=(((~ (vt1.c1)))))) IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c1)>=(rt0.c2)))OR(CAST('0.5051508855403449' AS INTEGER))))OR(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c4)))) ORDER BY (((rt0.c0))<=((CAST(vt1.c0 AS TEXT)))));
SELECT ALL * FROM rt1, rt0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c1)>=(rt0.c2)))OR(CAST('0.5051508855403449' AS INTEGER))))OR(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c4)))) WHERE ((((0.27210558960248965))!=(((~ (vt1.c1)))))) ORDER BY (((rt0.c0))<=((CAST(vt1.c0 AS TEXT))));
SELECT COUNT(*) FROM vt1 WHERE (((((((((vt1.c0)OR(vt1.c1 COLLATE NOCASE)))OR((+ (vt1.c0)))))OR('pxL*ux?')))AND(vt1.c0))) ORDER BY ((((vt1.c1) ISNULL))LIKE((((vt1.c2)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0)OR(vt1.c1 COLLATE NOCASE)))OR((+ (vt1.c0)))))OR('pxL*ux?')))AND(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1) ISNULL))LIKE((((vt1.c2)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((((((vt1.c0)OR(vt1.c1 COLLATE NOCASE)))OR((+ (vt1.c0)))))OR('pxL*ux?')))AND(vt1.c0))) ORDER BY ((((vt1.c1) ISNULL))LIKE((((vt1.c2)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0)OR(vt1.c1 COLLATE NOCASE)))OR((+ (vt1.c0)))))OR('pxL*ux?')))AND(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1) ISNULL))LIKE((((vt1.c2)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((((((vt1.c0)OR(vt1.c1 COLLATE NOCASE)))OR((+ (vt1.c0)))))OR('pxL*ux?')))AND(vt1.c0))) ORDER BY ((((vt1.c1) ISNULL))LIKE((((vt1.c2)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, rt1 WHERE (0.4969553259993459);
SELECT SUM(count) FROM (SELECT ALL ((0.4969553259993459) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (0.4969553259993459);
SELECT SUM(count) FROM (SELECT ALL ((0.4969553259993459) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (0.4969553259993459);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((rt0.c2)*(rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)*(rt1.c2)) IN ())) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((rt0.c2)*(rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)*(rt1.c2)) IN ())) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((rt0.c2)*(rt1.c2)) IN ()));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CASE WHEN (~ (x'')) THEN ((rt0.c0)>(rt0.c1)) END) ORDER BY CASE (+ (rt0.c1))  WHEN (+ (rt0.c0)) THEN ((rt0.c0)OR(rt1.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (x'')) THEN ((rt0.c0)>(rt0.c1)) END) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE (+ (rt0.c1))  WHEN (+ (rt0.c0)) THEN ((rt0.c0)OR(rt1.c2)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CASE WHEN (~ (x'')) THEN ((rt0.c0)>(rt0.c1)) END) ORDER BY CASE (+ (rt0.c1))  WHEN (+ (rt0.c0)) THEN ((rt0.c0)OR(rt1.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (x'')) THEN ((rt0.c0)>(rt0.c1)) END) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE (+ (rt0.c1))  WHEN (+ (rt0.c0)) THEN ((rt0.c0)OR(rt1.c2)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CASE WHEN (~ (x'')) THEN ((rt0.c0)>(rt0.c1)) END) ORDER BY CASE (+ (rt0.c1))  WHEN (+ (rt0.c0)) THEN ((rt0.c0)OR(rt1.c2)) END  NULLS FIRST;
SELECT ALL * FROM vt1, rt1 WHERE (rt1.c1) ORDER BY STRFTIME(CASE rt1.c4  WHEN rt1.c0 THEN rt1.c3 ELSE vt1.c1 END, (vt1.c0 IN ()), CASE WHEN rt1.c2 THEN rt1.c1 ELSE '-664605025' END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM vt1, rt1 ORDER BY STRFTIME(CASE rt1.c4  WHEN rt1.c0 THEN rt1.c3 ELSE vt1.c1 END, (vt1.c0 IN ()), CASE WHEN rt1.c2 THEN rt1.c1 ELSE '-664605025' END)  NULLS FIRST);
SELECT ALL * FROM vt1, rt1 WHERE (rt1.c1) ORDER BY STRFTIME(CASE rt1.c4  WHEN rt1.c0 THEN rt1.c3 ELSE vt1.c1 END, (vt1.c0 IN ()), CASE WHEN rt1.c2 THEN rt1.c1 ELSE '-664605025' END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM vt1, rt1 ORDER BY STRFTIME(CASE rt1.c4  WHEN rt1.c0 THEN rt1.c3 ELSE vt1.c1 END, (vt1.c0 IN ()), CASE WHEN rt1.c2 THEN rt1.c1 ELSE '-664605025' END)  NULLS FIRST);
SELECT ALL * FROM vt1, rt1 WHERE (rt1.c1) ORDER BY STRFTIME(CASE rt1.c4  WHEN rt1.c0 THEN rt1.c3 ELSE vt1.c1 END, (vt1.c0 IN ()), CASE WHEN rt1.c2 THEN rt1.c1 ELSE '-664605025' END)  NULLS FIRST;
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt1 ON ((NULL) IS TRUE) WHERE (TRIM(DISTINCT vt1.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT vt1.c1 COLLATE NOCASE)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt1 ON ((NULL) IS TRUE));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt1 ON ((NULL) IS TRUE) WHERE (TRIM(DISTINCT vt1.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT vt1.c1 COLLATE NOCASE)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt1 ON ((NULL) IS TRUE));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt1 ON ((NULL) IS TRUE) WHERE (TRIM(DISTINCT vt1.c1 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CASE ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c4))  WHEN ((rt1.c1)>=(-2112949805)) THEN x'' COLLATE RTRIM ELSE CASE WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt1.c4 WHEN rt0.c1 THEN rt1.c4 ELSE rt0.c1 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c4))  WHEN ((rt1.c1)>=(-2112949805)) THEN x'' COLLATE RTRIM ELSE CASE WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt1.c4 WHEN rt0.c1 THEN rt1.c4 ELSE rt0.c1 END END) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CASE ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c4))  WHEN ((rt1.c1)>=(-2112949805)) THEN x'' COLLATE RTRIM ELSE CASE WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt1.c4 WHEN rt0.c1 THEN rt1.c4 ELSE rt0.c1 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c4))  WHEN ((rt1.c1)>=(-2112949805)) THEN x'' COLLATE RTRIM ELSE CASE WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt1.c4 WHEN rt0.c1 THEN rt1.c4 ELSE rt0.c1 END END) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CASE ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c4))  WHEN ((rt1.c1)>=(-2112949805)) THEN x'' COLLATE RTRIM ELSE CASE WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt1.c4 WHEN rt0.c1 THEN rt1.c4 ELSE rt0.c1 END END);
SELECT COUNT(*) FROM vt1, rt1 WHERE (((CAST(vt1.c2 AS BLOB)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c2 AS BLOB)) IS TRUE)) IS TRUE)  as count FROM vt1, rt1);
SELECT COUNT(*) FROM vt1, rt1 WHERE (((CAST(vt1.c2 AS BLOB)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c2 AS BLOB)) IS TRUE)) IS TRUE)  as count FROM vt1, rt1);
SELECT COUNT(*) FROM vt1, rt1 WHERE (((CAST(vt1.c2 AS BLOB)) IS TRUE));
SELECT ALL * FROM rt0, rt1, vt1 WHERE (CAST((((rt1.c3)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) AS NUMERIC)) ORDER BY ((vt1.c0) NOT BETWEEN (CASE WHEN rt1.c3 THEN NULL END) AND ((rt1.c3 IN ())))  NULLS LAST, CASE WHEN IFNULL(vt1.c1, vt1.c1) THEN CASE vt1.c1  WHEN rt1.c3 THEN vt1.c1 WHEN vt1.c0 THEN rt1.c3 WHEN vt1.c0 THEN rt1.c2 END ELSE ((((vt1.c1)OR(rt1.c3)))OR(0x57bb9c92)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c3)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) AS NUMERIC)) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY ((vt1.c0) NOT BETWEEN (CASE WHEN rt1.c3 THEN NULL END) AND ((rt1.c3 IN ())))  NULLS LAST, CASE WHEN IFNULL(vt1.c1, vt1.c1) THEN CASE vt1.c1  WHEN rt1.c3 THEN vt1.c1 WHEN vt1.c0 THEN rt1.c3 WHEN vt1.c0 THEN rt1.c2 END ELSE ((((vt1.c1)OR(rt1.c3)))OR(0x57bb9c92)) END DESC);
SELECT ALL * FROM rt0, rt1, vt1 WHERE (CAST((((rt1.c3)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) AS NUMERIC)) ORDER BY ((vt1.c0) NOT BETWEEN (CASE WHEN rt1.c3 THEN NULL END) AND ((rt1.c3 IN ())))  NULLS LAST, CASE WHEN IFNULL(vt1.c1, vt1.c1) THEN CASE vt1.c1  WHEN rt1.c3 THEN vt1.c1 WHEN vt1.c0 THEN rt1.c3 WHEN vt1.c0 THEN rt1.c2 END ELSE ((((vt1.c1)OR(rt1.c3)))OR(0x57bb9c92)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c3)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) AS NUMERIC)) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY ((vt1.c0) NOT BETWEEN (CASE WHEN rt1.c3 THEN NULL END) AND ((rt1.c3 IN ())))  NULLS LAST, CASE WHEN IFNULL(vt1.c1, vt1.c1) THEN CASE vt1.c1  WHEN rt1.c3 THEN vt1.c1 WHEN vt1.c0 THEN rt1.c3 WHEN vt1.c0 THEN rt1.c2 END ELSE ((((vt1.c1)OR(rt1.c3)))OR(0x57bb9c92)) END DESC);
SELECT ALL * FROM rt0, rt1, vt1 WHERE (CAST((((rt1.c3)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) AS NUMERIC)) ORDER BY ((vt1.c0) NOT BETWEEN (CASE WHEN rt1.c3 THEN NULL END) AND ((rt1.c3 IN ())))  NULLS LAST, CASE WHEN IFNULL(vt1.c1, vt1.c1) THEN CASE vt1.c1  WHEN rt1.c3 THEN vt1.c1 WHEN vt1.c0 THEN rt1.c3 WHEN vt1.c0 THEN rt1.c2 END ELSE ((((vt1.c1)OR(rt1.c3)))OR(0x57bb9c92)) END DESC;
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt1 ON ((((x'') IS FALSE))<=((((rt1.c4))<((vt1.c0))))) WHERE (json_insert(CAST(rt1.c4 AS TEXT), ((((rt1.c3)AND(vt1.c2)))AND('pP[ꌜ\n\r둩')), ((rt1.c1) BETWEEN (vt1.c1) AND (rt1.c1))));
SELECT SUM(count) FROM (SELECT ((json_insert(CAST(rt1.c4 AS TEXT), ((((rt1.c3)AND(vt1.c2)))AND('pP[ꌜ\n\r둩')), ((rt1.c1) BETWEEN (vt1.c1) AND (rt1.c1)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt1 ON ((((x'') IS FALSE))<=((((rt1.c4))<((vt1.c0))))));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt1 ON ((((x'') IS FALSE))<=((((rt1.c4))<((vt1.c0))))) WHERE (json_insert(CAST(rt1.c4 AS TEXT), ((((rt1.c3)AND(vt1.c2)))AND('pP[ꌜ\n\r둩')), ((rt1.c1) BETWEEN (vt1.c1) AND (rt1.c1))));
SELECT SUM(count) FROM (SELECT ((json_insert(CAST(rt1.c4 AS TEXT), ((((rt1.c3)AND(vt1.c2)))AND('pP[ꌜ\n\r둩')), ((rt1.c1) BETWEEN (vt1.c1) AND (rt1.c1)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt1 ON ((((x'') IS FALSE))<=((((rt1.c4))<((vt1.c0))))));
SELECT ALL * FROM rt1 FULL OUTER JOIN vt1 ON NULLIF(DISTINCT CAST(vt1.c0 AS INTEGER), LIKELIHOOD(rt1.c4, 0.38695860008680494)) WHERE ((((rt1.c2) ISNULL) IN (((x'2fe9f2e1')>=(rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2) ISNULL) IN (((x'2fe9f2e1')>=(rt1.c1))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt1 ON NULLIF(DISTINCT CAST(vt1.c0 AS INTEGER), LIKELIHOOD(rt1.c4, 0.38695860008680494)));
SELECT ALL * FROM rt1 FULL OUTER JOIN vt1 ON NULLIF(DISTINCT CAST(vt1.c0 AS INTEGER), LIKELIHOOD(rt1.c4, 0.38695860008680494)) WHERE ((((rt1.c2) ISNULL) IN (((x'2fe9f2e1')>=(rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2) ISNULL) IN (((x'2fe9f2e1')>=(rt1.c1))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt1 ON NULLIF(DISTINCT CAST(vt1.c0 AS INTEGER), LIKELIHOOD(rt1.c4, 0.38695860008680494)));
SELECT ALL * FROM rt1 FULL OUTER JOIN vt1 ON NULLIF(DISTINCT CAST(vt1.c0 AS INTEGER), LIKELIHOOD(rt1.c4, 0.38695860008680494)) WHERE ((((rt1.c2) ISNULL) IN (((x'2fe9f2e1')>=(rt1.c1)))));
SELECT * FROM vt1, rt0, rt1 WHERE ((~ (220837008)));
SELECT SUM(count) FROM (SELECT ALL (((~ (220837008))) IS TRUE)  as count FROM vt1, rt0, rt1 NOT INDEXED);
SELECT * FROM vt1, rt0, rt1 WHERE ((~ (220837008)));
SELECT SUM(count) FROM (SELECT ALL (((~ (220837008))) IS TRUE)  as count FROM vt1, rt0, rt1 NOT INDEXED);
SELECT * FROM vt1, rt0, rt1 WHERE ((~ (220837008)));
SELECT COUNT(*) FROM rt1 CROSS JOIN rt0 ON CAST(MAX(0.0771233039616468, rt0.c1) AS NUMERIC) WHERE ((((~ (NULL))) NOT NULL)) ORDER BY ((((rt1.c1)/(rt0.c1)))AND(rt1.c2)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (NULL))) NOT NULL)) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON CAST(MAX(0.0771233039616468, rt0.c1) AS NUMERIC) ORDER BY ((((rt1.c1)/(rt0.c1)))AND(rt1.c2)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 CROSS JOIN rt0 ON CAST(MAX(0.0771233039616468, rt0.c1) AS NUMERIC) WHERE ((((~ (NULL))) NOT NULL)) ORDER BY ((((rt1.c1)/(rt0.c1)))AND(rt1.c2)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (NULL))) NOT NULL)) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON CAST(MAX(0.0771233039616468, rt0.c1) AS NUMERIC) ORDER BY ((((rt1.c1)/(rt0.c1)))AND(rt1.c2)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 CROSS JOIN rt0 ON CAST(MAX(0.0771233039616468, rt0.c1) AS NUMERIC) WHERE ((((~ (NULL))) NOT NULL)) ORDER BY ((((rt1.c1)/(rt0.c1)))AND(rt1.c2)) DESC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (vt1.c2) ORDER BY NULLIF(RTRIM(NULL), (~ (vt1.c1)));
SELECT SUM(count) FROM (SELECT ((vt1.c2) IS TRUE)  as count FROM vt1 ORDER BY NULLIF(RTRIM(NULL), (~ (vt1.c1))));
SELECT ALL * FROM vt1 WHERE (vt1.c2) ORDER BY NULLIF(RTRIM(NULL), (~ (vt1.c1)));
SELECT SUM(count) FROM (SELECT ((vt1.c2) IS TRUE)  as count FROM vt1 ORDER BY NULLIF(RTRIM(NULL), (~ (vt1.c1))));
SELECT ALL * FROM vt1 WHERE (vt1.c2) ORDER BY NULLIF(RTRIM(NULL), (~ (vt1.c1)));
SELECT * FROM rt1 WHERE (CAST(1.004851312E9 AS TEXT)) ORDER BY CASE rt1.c1 COLLATE BINARY  WHEN (- (x'26cf')) THEN (((rt1.c3, '3회0op5ZGa', rt1.c4))<((rt1.c1, rt1.c4, rt1.c1))) ELSE 'KeOb' END DESC;
SELECT SUM(count) FROM (SELECT ((CAST(1.004851312E9 AS TEXT)) IS TRUE)  as count FROM rt1 ORDER BY CASE rt1.c1 COLLATE BINARY  WHEN (- (x'26cf')) THEN (((rt1.c3, '3회0op5ZGa', rt1.c4))<((rt1.c1, rt1.c4, rt1.c1))) ELSE 'KeOb' END DESC);
SELECT * FROM rt1 WHERE (CAST(1.004851312E9 AS TEXT)) ORDER BY CASE rt1.c1 COLLATE BINARY  WHEN (- (x'26cf')) THEN (((rt1.c3, '3회0op5ZGa', rt1.c4))<((rt1.c1, rt1.c4, rt1.c1))) ELSE 'KeOb' END DESC;
SELECT SUM(count) FROM (SELECT ((CAST(1.004851312E9 AS TEXT)) IS TRUE)  as count FROM rt1 ORDER BY CASE rt1.c1 COLLATE BINARY  WHEN (- (x'26cf')) THEN (((rt1.c3, '3회0op5ZGa', rt1.c4))<((rt1.c1, rt1.c4, rt1.c1))) ELSE 'KeOb' END DESC);
SELECT * FROM rt1 WHERE (CAST(1.004851312E9 AS TEXT)) ORDER BY CASE rt1.c1 COLLATE BINARY  WHEN (- (x'26cf')) THEN (((rt1.c3, '3회0op5ZGa', rt1.c4))<((rt1.c1, rt1.c4, rt1.c1))) ELSE 'KeOb' END DESC;
SELECT * FROM rt1, rt0 CROSS JOIN vt1 ON x'' WHERE (((CHANGES())-(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((CHANGES())-(rt0.c2))) IS TRUE)  as count FROM rt1, rt0 CROSS JOIN vt1 ON x'');
SELECT * FROM rt1, rt0 CROSS JOIN vt1 ON x'' WHERE (((CHANGES())-(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((CHANGES())-(rt0.c2))) IS TRUE)  as count FROM rt1, rt0 CROSS JOIN vt1 ON x'');
SELECT * FROM rt1, rt0 CROSS JOIN vt1 ON x'' WHERE (((CHANGES())-(rt0.c2)));
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON (((rt0.c2)) BETWEEN ((0x13e502d7)) AND ((STRFTIME(rt1.c2, rt0.c1, rt0.c2)))) RIGHT OUTER JOIN rt1 ON ((((rt0.c0) NOT NULL)) IS FALSE) WHERE (LIKE(CAST(rt1.c3 AS TEXT), (~ (vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((LIKE(CAST(rt1.c3 AS TEXT), (~ (vt1.c1)))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON (((rt0.c2)) BETWEEN ((0x13e502d7)) AND ((STRFTIME(rt1.c2, rt0.c1, rt0.c2)))) RIGHT OUTER JOIN rt1 ON ((((rt0.c0) NOT NULL)) IS FALSE));
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON (((rt0.c2)) BETWEEN ((0x13e502d7)) AND ((STRFTIME(rt1.c2, rt0.c1, rt0.c2)))) RIGHT OUTER JOIN rt1 ON ((((rt0.c0) NOT NULL)) IS FALSE) WHERE (LIKE(CAST(rt1.c3 AS TEXT), (~ (vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((LIKE(CAST(rt1.c3 AS TEXT), (~ (vt1.c1)))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON (((rt0.c2)) BETWEEN ((0x13e502d7)) AND ((STRFTIME(rt1.c2, rt0.c1, rt0.c2)))) RIGHT OUTER JOIN rt1 ON ((((rt0.c0) NOT NULL)) IS FALSE));
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON ((rt0.c1)/(rt0.c1)) COLLATE RTRIM WHERE (((vt1.c1)LIKE(((rt0.c2)LIKE(rt0.c2))))) ORDER BY CAST((NOT (rt0.c1)) AS NUMERIC)  NULLS FIRST, CAST((- (vt1.c1)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1)LIKE(((rt0.c2)LIKE(rt0.c2))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((rt0.c1)/(rt0.c1)) COLLATE RTRIM ORDER BY CAST((NOT (rt0.c1)) AS NUMERIC)  NULLS FIRST, CAST((- (vt1.c1)) AS REAL));
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON ((rt0.c1)/(rt0.c1)) COLLATE RTRIM WHERE (((vt1.c1)LIKE(((rt0.c2)LIKE(rt0.c2))))) ORDER BY CAST((NOT (rt0.c1)) AS NUMERIC)  NULLS FIRST, CAST((- (vt1.c1)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1)LIKE(((rt0.c2)LIKE(rt0.c2))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((rt0.c1)/(rt0.c1)) COLLATE RTRIM ORDER BY CAST((NOT (rt0.c1)) AS NUMERIC)  NULLS FIRST, CAST((- (vt1.c1)) AS REAL));
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON ((rt0.c1)/(rt0.c1)) COLLATE RTRIM WHERE (((vt1.c1)LIKE(((rt0.c2)LIKE(rt0.c2))))) ORDER BY CAST((NOT (rt0.c1)) AS NUMERIC)  NULLS FIRST, CAST((- (vt1.c1)) AS REAL);
SELECT ALL * FROM rt0, rt1 WHERE (CASE rt1.c0 COLLATE RTRIM  WHEN CAST(rt0.c1 AS INTEGER) THEN ((((rt0.c2)OR(rt0.c0)))AND(rt1.c2)) END) ORDER BY CAST(((rt1.c4) NOT NULL) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE rt1.c0 COLLATE RTRIM  WHEN CAST(rt0.c1 AS INTEGER) THEN ((((rt0.c2)OR(rt0.c0)))AND(rt1.c2)) END) IS TRUE)  as count FROM rt0, rt1 ORDER BY CAST(((rt1.c4) NOT NULL) AS TEXT)  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 WHERE (CASE rt1.c0 COLLATE RTRIM  WHEN CAST(rt0.c1 AS INTEGER) THEN ((((rt0.c2)OR(rt0.c0)))AND(rt1.c2)) END) ORDER BY CAST(((rt1.c4) NOT NULL) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE rt1.c0 COLLATE RTRIM  WHEN CAST(rt0.c1 AS INTEGER) THEN ((((rt0.c2)OR(rt0.c0)))AND(rt1.c2)) END) IS TRUE)  as count FROM rt0, rt1 ORDER BY CAST(((rt1.c4) NOT NULL) AS TEXT)  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 WHERE (CASE rt1.c0 COLLATE RTRIM  WHEN CAST(rt0.c1 AS INTEGER) THEN ((((rt0.c2)OR(rt0.c0)))AND(rt1.c2)) END) ORDER BY CAST(((rt1.c4) NOT NULL) AS TEXT)  NULLS FIRST;
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON json_valid(((vt1.c0)%(rt1.c1))) LEFT OUTER JOIN rt1 ON LIKELY(COALESCE(rt0.c0, rt1.c1, rt1.c1, vt1.c2)) WHERE (TIME(CASE rt1.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt1.c3 WHEN rt1.c1 THEN rt0.c0 ELSE rt0.c1 END, (rt1.c0 IN ()), CAST(vt1.c2 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((TIME(CASE rt1.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt1.c3 WHEN rt1.c1 THEN rt0.c0 ELSE rt0.c1 END, (rt1.c0 IN ()), CAST(vt1.c2 AS REAL))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON json_valid(((vt1.c0)%(rt1.c1))) LEFT OUTER JOIN rt1 ON LIKELY(COALESCE(rt0.c0, rt1.c1, rt1.c1, vt1.c2)));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON json_valid(((vt1.c0)%(rt1.c1))) LEFT OUTER JOIN rt1 ON LIKELY(COALESCE(rt0.c0, rt1.c1, rt1.c1, vt1.c2)) WHERE (TIME(CASE rt1.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt1.c3 WHEN rt1.c1 THEN rt0.c0 ELSE rt0.c1 END, (rt1.c0 IN ()), CAST(vt1.c2 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((TIME(CASE rt1.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt1.c3 WHEN rt1.c1 THEN rt0.c0 ELSE rt0.c1 END, (rt1.c0 IN ()), CAST(vt1.c2 AS REAL))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON json_valid(((vt1.c0)%(rt1.c1))) LEFT OUTER JOIN rt1 ON LIKELY(COALESCE(rt0.c0, rt1.c1, rt1.c1, vt1.c2)));
SELECT ALL * FROM rt1, vt1, rt0 WHERE ((((((((((x'78d4' IN (vt1.c1)))AND(CAST(rt0.c0 AS REAL))))OR(rt0.c0)))OR((((vt1.c1)) BETWEEN ((rt0.c2)) AND ((vt1.c1))))))AND(((rt1.c3) BETWEEN (rt0.c2) AND ('yT8c')))));
SELECT SUM(count) FROM (SELECT (((((((((((x'78d4' IN (vt1.c1)))AND(CAST(rt0.c0 AS REAL))))OR(rt0.c0)))OR((((vt1.c1)) BETWEEN ((rt0.c2)) AND ((vt1.c1))))))AND(((rt1.c3) BETWEEN (rt0.c2) AND ('yT8c'))))) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL * FROM rt1, vt1, rt0 WHERE ((((((((((x'78d4' IN (vt1.c1)))AND(CAST(rt0.c0 AS REAL))))OR(rt0.c0)))OR((((vt1.c1)) BETWEEN ((rt0.c2)) AND ((vt1.c1))))))AND(((rt1.c3) BETWEEN (rt0.c2) AND ('yT8c')))));
SELECT SUM(count) FROM (SELECT (((((((((((x'78d4' IN (vt1.c1)))AND(CAST(rt0.c0 AS REAL))))OR(rt0.c0)))OR((((vt1.c1)) BETWEEN ((rt0.c2)) AND ((vt1.c1))))))AND(((rt1.c3) BETWEEN (rt0.c2) AND ('yT8c'))))) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL * FROM rt1, vt1, rt0 WHERE ((((((((((x'78d4' IN (vt1.c1)))AND(CAST(rt0.c0 AS REAL))))OR(rt0.c0)))OR((((vt1.c1)) BETWEEN ((rt0.c2)) AND ((vt1.c1))))))AND(((rt1.c3) BETWEEN (rt0.c2) AND ('yT8c')))));
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE ((~ (COALESCE(DISTINCT rt1.c2, '0.3848514770359093', rt1.c1, vt1.c0, '', vt1.c0, vt1.c0, rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL (((~ (COALESCE(DISTINCT rt1.c2, '0.3848514770359093', rt1.c1, vt1.c0, '', vt1.c0, vt1.c0, rt1.c3)))) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE ((~ (COALESCE(DISTINCT rt1.c2, '0.3848514770359093', rt1.c1, vt1.c0, '', vt1.c0, vt1.c0, rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL (((~ (COALESCE(DISTINCT rt1.c2, '0.3848514770359093', rt1.c1, vt1.c0, '', vt1.c0, vt1.c0, rt1.c3)))) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE ((~ (COALESCE(DISTINCT rt1.c2, '0.3848514770359093', rt1.c1, vt1.c0, '', vt1.c0, vt1.c0, rt1.c3))));
SELECT * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c2)))IS NOT(((((vt1.c0)AND(vt1.c2)))OR(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c2)))IS NOT(((((vt1.c0)AND(vt1.c2)))OR(vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c2)))IS NOT(((((vt1.c0)AND(vt1.c2)))OR(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c2)))IS NOT(((((vt1.c0)AND(vt1.c2)))OR(vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c2)))IS NOT(((((vt1.c0)AND(vt1.c2)))OR(vt1.c1)))));
SELECT COUNT(*) FROM vt1, rt0, rt1 WHERE (CAST((((rt1.c3, rt1.c2, rt0.c1)) NOT BETWEEN ((rt1.c3, rt1.c0, rt1.c3)) AND ((rt0.c0, rt0.c1, rt1.c0))) AS NUMERIC)) ORDER BY (((((0.4494584983248209)AND(rt0.c0)))OR(rt1.c4)) IN (((((rt1.c1)OR(rt1.c3)))AND(rt1.c4))));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c3, rt1.c2, rt0.c1)) NOT BETWEEN ((rt1.c3, rt1.c0, rt1.c3)) AND ((rt0.c0, rt0.c1, rt1.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY (((((0.4494584983248209)AND(rt0.c0)))OR(rt1.c4)) IN (((((rt1.c1)OR(rt1.c3)))AND(rt1.c4)))));
SELECT COUNT(*) FROM vt1, rt0, rt1 WHERE (CAST((((rt1.c3, rt1.c2, rt0.c1)) NOT BETWEEN ((rt1.c3, rt1.c0, rt1.c3)) AND ((rt0.c0, rt0.c1, rt1.c0))) AS NUMERIC)) ORDER BY (((((0.4494584983248209)AND(rt0.c0)))OR(rt1.c4)) IN (((((rt1.c1)OR(rt1.c3)))AND(rt1.c4))));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c3, rt1.c2, rt0.c1)) NOT BETWEEN ((rt1.c3, rt1.c0, rt1.c3)) AND ((rt0.c0, rt0.c1, rt1.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY (((((0.4494584983248209)AND(rt0.c0)))OR(rt1.c4)) IN (((((rt1.c1)OR(rt1.c3)))AND(rt1.c4)))));
SELECT COUNT(*) FROM vt1, rt0, rt1 WHERE (CAST((((rt1.c3, rt1.c2, rt0.c1)) NOT BETWEEN ((rt1.c3, rt1.c0, rt1.c3)) AND ((rt0.c0, rt0.c1, rt1.c0))) AS NUMERIC)) ORDER BY (((((0.4494584983248209)AND(rt0.c0)))OR(rt1.c4)) IN (((((rt1.c1)OR(rt1.c3)))AND(rt1.c4))));
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN ((rt1.c2) ISNULL) THEN rt1.c2 ELSE rt1.c3 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c2) ISNULL) THEN rt1.c2 ELSE rt1.c3 COLLATE BINARY END) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN ((rt1.c2) ISNULL) THEN rt1.c2 ELSE rt1.c3 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c2) ISNULL) THEN rt1.c2 ELSE rt1.c3 COLLATE BINARY END) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN ((rt1.c2) ISNULL) THEN rt1.c2 ELSE rt1.c3 COLLATE BINARY END);
SELECT COUNT(*) FROM rt1, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, vt1);
SELECT COUNT(*) FROM rt1, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, vt1);
SELECT COUNT(*) FROM rt1, vt1 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt1 WHERE (((CAST(rt1.c4 AS REAL))||(rt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c4 AS REAL))||(rt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((CAST(rt1.c4 AS REAL))||(rt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c4 AS REAL))||(rt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((CAST(rt1.c4 AS REAL))||(rt1.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt1 WHERE (rt1.c2) ORDER BY (((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c4)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1 NOT INDEXED ORDER BY (((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c4)) IN ()) ASC);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c2) ORDER BY (((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c4)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1 NOT INDEXED ORDER BY (((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c4)) IN ()) ASC);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c2) ORDER BY (((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c4)) IN ()) ASC;
SELECT ALL * FROM vt1, rt0, rt1 WHERE (((((rt1.c3)AND(rt1.c1)))>>(rt1.c0 COLLATE BINARY))) ORDER BY -1459466446, (((rt1.c2) ISNULL) IN ()), CAST((~ ('')) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)AND(rt1.c1)))>>(rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY -1459466446, (((rt1.c2) ISNULL) IN ()), CAST((~ ('')) AS TEXT));
SELECT ALL * FROM vt1, rt0, rt1 WHERE (((((rt1.c3)AND(rt1.c1)))>>(rt1.c0 COLLATE BINARY))) ORDER BY -1459466446, (((rt1.c2) ISNULL) IN ()), CAST((~ ('')) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)AND(rt1.c1)))>>(rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY -1459466446, (((rt1.c2) ISNULL) IN ()), CAST((~ ('')) AS TEXT));
SELECT ALL * FROM rt0 WHERE ((('618387600') NOT BETWEEN (((NULL)/(NULL))) AND ((rt0.c0 IN ())))) ORDER BY ((((((rt0.c1)%(rt0.c2)))OR((+ (rt0.c1)))))OR(((rt0.c2)/(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('618387600') NOT BETWEEN (((NULL)/(NULL))) AND ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)%(rt0.c2)))OR((+ (rt0.c1)))))OR(((rt0.c2)/(rt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((('618387600') NOT BETWEEN (((NULL)/(NULL))) AND ((rt0.c0 IN ())))) ORDER BY ((((((rt0.c1)%(rt0.c2)))OR((+ (rt0.c1)))))OR(((rt0.c2)/(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('618387600') NOT BETWEEN (((NULL)/(NULL))) AND ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)%(rt0.c2)))OR((+ (rt0.c1)))))OR(((rt0.c2)/(rt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((('618387600') NOT BETWEEN (((NULL)/(NULL))) AND ((rt0.c0 IN ())))) ORDER BY ((((((rt0.c1)%(rt0.c2)))OR((+ (rt0.c1)))))OR(((rt0.c2)/(rt0.c0)))) DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE ((((((vt1.c0))<=((vt1.c0)))) BETWEEN (((((vt1.c0)OR(vt1.c0)))AND(vt1.c1))) AND (((((((((vt1.c2)OR(vt1.c2)))OR(vt1.c1)))OR(vt1.c2)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))<=((vt1.c0)))) BETWEEN (((((vt1.c0)OR(vt1.c0)))AND(vt1.c1))) AND (((((((((vt1.c2)OR(vt1.c2)))OR(vt1.c1)))OR(vt1.c2)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c0))<=((vt1.c0)))) BETWEEN (((((vt1.c0)OR(vt1.c0)))AND(vt1.c1))) AND (((((((((vt1.c2)OR(vt1.c2)))OR(vt1.c1)))OR(vt1.c2)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))<=((vt1.c0)))) BETWEEN (((((vt1.c0)OR(vt1.c0)))AND(vt1.c1))) AND (((((((((vt1.c2)OR(vt1.c2)))OR(vt1.c1)))OR(vt1.c2)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c0))<=((vt1.c0)))) BETWEEN (((((vt1.c0)OR(vt1.c0)))AND(vt1.c1))) AND (((((((((vt1.c2)OR(vt1.c2)))OR(vt1.c1)))OR(vt1.c2)))AND(vt1.c0)))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON ')' FULL OUTER JOIN vt1 ON (~ (x'8de4')) WHERE (LIKE(CAST(vt1.c0 AS INTEGER), ((rt1.c1)||(rt1.c4)), 'Y'));
SELECT SUM(count) FROM (SELECT ALL ((LIKE(CAST(vt1.c0 AS INTEGER), ((rt1.c1)||(rt1.c4)), 'Y')) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON ')' FULL OUTER JOIN vt1 ON (~ (x'8de4')));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON ')' FULL OUTER JOIN vt1 ON (~ (x'8de4')) WHERE (LIKE(CAST(vt1.c0 AS INTEGER), ((rt1.c1)||(rt1.c4)), 'Y'));
SELECT SUM(count) FROM (SELECT ALL ((LIKE(CAST(vt1.c0 AS INTEGER), ((rt1.c1)||(rt1.c4)), 'Y')) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON ')' FULL OUTER JOIN vt1 ON (~ (x'8de4')));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON ')' FULL OUTER JOIN vt1 ON (~ (x'8de4')) WHERE (LIKE(CAST(vt1.c0 AS INTEGER), ((rt1.c1)||(rt1.c4)), 'Y'));
SELECT COUNT(*) FROM rt0 WHERE ((((~ (rt0.c0))) NOT BETWEEN (((rt0.c2)IS NOT(rt0.c2))) AND (((((rt0.c1)AND(rt0.c2)))AND(rt0.c1))))) ORDER BY CAST((~ (rt0.c1)) AS NUMERIC) ASC, ((((rt0.c2)LIKE(rt0.c2)))IS(NULLIF(rt0.c2, rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c0))) NOT BETWEEN (((rt0.c2)IS NOT(rt0.c2))) AND (((((rt0.c1)AND(rt0.c2)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CAST((~ (rt0.c1)) AS NUMERIC) ASC, ((((rt0.c2)LIKE(rt0.c2)))IS(NULLIF(rt0.c2, rt0.c2))));
SELECT COUNT(*) FROM rt0 WHERE ((((~ (rt0.c0))) NOT BETWEEN (((rt0.c2)IS NOT(rt0.c2))) AND (((((rt0.c1)AND(rt0.c2)))AND(rt0.c1))))) ORDER BY CAST((~ (rt0.c1)) AS NUMERIC) ASC, ((((rt0.c2)LIKE(rt0.c2)))IS(NULLIF(rt0.c2, rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c0))) NOT BETWEEN (((rt0.c2)IS NOT(rt0.c2))) AND (((((rt0.c1)AND(rt0.c2)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CAST((~ (rt0.c1)) AS NUMERIC) ASC, ((((rt0.c2)LIKE(rt0.c2)))IS(NULLIF(rt0.c2, rt0.c2))));
SELECT COUNT(*) FROM rt0 WHERE ((((~ (rt0.c0))) NOT BETWEEN (((rt0.c2)IS NOT(rt0.c2))) AND (((((rt0.c1)AND(rt0.c2)))AND(rt0.c1))))) ORDER BY CAST((~ (rt0.c1)) AS NUMERIC) ASC, ((((rt0.c2)LIKE(rt0.c2)))IS(NULLIF(rt0.c2, rt0.c2)));
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (0.19644588067241786);
SELECT SUM(count) FROM (SELECT ALL ((0.19644588067241786) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (0.19644588067241786);
SELECT SUM(count) FROM (SELECT ALL ((0.19644588067241786) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (0.19644588067241786);
SELECT * FROM rt0 WHERE ((((CAST(rt0.c0 AS NUMERIC)))<>((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))));
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c0 AS NUMERIC)))!=((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((CAST(rt0.c0 AS NUMERIC)))<>((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))));
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c0 AS NUMERIC)))!=((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((CAST(rt0.c0 AS NUMERIC)))<>((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON vt1.c1 CROSS JOIN rt1 ON (rt1.c3 IN (vt1.c0, vt1.c2)) COLLATE BINARY WHERE ((((('H.8U')>(vt1.c0))) NOT NULL)) ORDER BY (((rt1.c1)) NOT BETWEEN ((((rt1.c0) NOTNULL))) AND ((CASE rt1.c0  WHEN rt0.c1 THEN rt1.c2 END))) ASC;
SELECT SUM(count) FROM (SELECT (((((('H.8U')>(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON vt1.c1 CROSS JOIN rt1 ON (rt1.c3 IN (vt1.c0, vt1.c2)) COLLATE BINARY ORDER BY (((rt1.c1)) NOT BETWEEN ((((rt1.c0) NOTNULL))) AND ((CASE rt1.c0  WHEN rt0.c1 THEN rt1.c2 END))) ASC);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON vt1.c1 CROSS JOIN rt1 ON (rt1.c3 IN (vt1.c0, vt1.c2)) COLLATE BINARY WHERE ((((('H.8U')>(vt1.c0))) NOT NULL)) ORDER BY (((rt1.c1)) NOT BETWEEN ((((rt1.c0) NOTNULL))) AND ((CASE rt1.c0  WHEN rt0.c1 THEN rt1.c2 END))) ASC;
SELECT SUM(count) FROM (SELECT (((((('H.8U')>(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON vt1.c1 CROSS JOIN rt1 ON (rt1.c3 IN (vt1.c0, vt1.c2)) COLLATE BINARY ORDER BY (((rt1.c1)) NOT BETWEEN ((((rt1.c0) NOTNULL))) AND ((CASE rt1.c0  WHEN rt0.c1 THEN rt1.c2 END))) ASC);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON vt1.c1 CROSS JOIN rt1 ON (rt1.c3 IN (vt1.c0, vt1.c2)) COLLATE BINARY WHERE ((((('H.8U')>(vt1.c0))) NOT NULL)) ORDER BY (((rt1.c1)) NOT BETWEEN ((((rt1.c0) NOTNULL))) AND ((CASE rt1.c0  WHEN rt0.c1 THEN rt1.c2 END))) ASC;
SELECT ALL * FROM rt0, vt1 WHERE (TIME(CASE vt1.c2  WHEN rt0.c2 THEN rt0.c0 WHEN vt1.c2 THEN rt0.c1 WHEN x'5015' THEN vt1.c0 ELSE vt1.c1 END, ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c1)), vt1.c2));
SELECT SUM(count) FROM (SELECT ((TIME(CASE vt1.c2  WHEN rt0.c2 THEN rt0.c0 WHEN vt1.c2 THEN rt0.c1 WHEN x'5015' THEN vt1.c0 ELSE vt1.c1 END, ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c1)), vt1.c2)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (TIME(CASE vt1.c2  WHEN rt0.c2 THEN rt0.c0 WHEN vt1.c2 THEN rt0.c1 WHEN x'5015' THEN vt1.c0 ELSE vt1.c1 END, ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c1)), vt1.c2));
SELECT SUM(count) FROM (SELECT ((TIME(CASE vt1.c2  WHEN rt0.c2 THEN rt0.c0 WHEN vt1.c2 THEN rt0.c1 WHEN x'5015' THEN vt1.c0 ELSE vt1.c1 END, ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c1)), vt1.c2)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (TIME(CASE vt1.c2  WHEN rt0.c2 THEN rt0.c0 WHEN vt1.c2 THEN rt0.c1 WHEN x'5015' THEN vt1.c0 ELSE vt1.c1 END, ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c1)), vt1.c2));
SELECT ALL * FROM vt1, rt0, rt1 WHERE (CAST(rt1.c0 COLLATE RTRIM AS BLOB)) ORDER BY ((((rt1.c0)|(NULL)))*(((rt0.c0)IS NOT('-1459466446')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c0 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY ((((rt1.c0)|(NULL)))*(((rt0.c0)IS NOT('-1459466446')))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, rt0, rt1 WHERE (CAST(rt1.c0 COLLATE RTRIM AS BLOB)) ORDER BY ((((rt1.c0)|(NULL)))*(((rt0.c0)IS NOT('-1459466446')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c0 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY ((((rt1.c0)|(NULL)))*(((rt0.c0)IS NOT('-1459466446')))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, rt0, rt1 WHERE (CAST(rt1.c0 COLLATE RTRIM AS BLOB)) ORDER BY ((((rt1.c0)|(NULL)))*(((rt0.c0)IS NOT('-1459466446')))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (rt1.c2) ORDER BY CAST(rt1.c3 AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST(rt1.c3 AS INTEGER)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (rt1.c2) ORDER BY CAST(rt1.c3 AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST(rt1.c3 AS INTEGER)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (rt1.c2) ORDER BY CAST(rt1.c3 AS INTEGER)  NULLS FIRST;
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON ((((((((rt1.c2 COLLATE BINARY)AND(((rt1.c0)*(rt1.c3)))))OR(CASE WHEN rt1.c1 THEN rt1.c3 END)))OR(CAST(rt1.c1 AS TEXT))))OR(((rt0.c2)||(rt0.c2)))) WHERE ((((CAST(rt0.c1 AS INTEGER)))=((CASE WHEN rt1.c3 THEN rt0.c1 END))));
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c1 AS INTEGER)))==((CASE WHEN rt1.c3 THEN rt0.c1 END)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((((((((rt1.c2 COLLATE BINARY)AND(((rt1.c0)*(rt1.c3)))))OR(CASE WHEN rt1.c1 THEN rt1.c3 END)))OR(CAST(rt1.c1 AS TEXT))))OR(((rt0.c2)||(rt0.c2)))));
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON ((((((((rt1.c2 COLLATE BINARY)AND(((rt1.c0)*(rt1.c3)))))OR(CASE WHEN rt1.c1 THEN rt1.c3 END)))OR(CAST(rt1.c1 AS TEXT))))OR(((rt0.c2)||(rt0.c2)))) WHERE ((((CAST(rt0.c1 AS INTEGER)))=((CASE WHEN rt1.c3 THEN rt0.c1 END))));
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c1 AS INTEGER)))==((CASE WHEN rt1.c3 THEN rt0.c1 END)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((((((((rt1.c2 COLLATE BINARY)AND(((rt1.c0)*(rt1.c3)))))OR(CASE WHEN rt1.c1 THEN rt1.c3 END)))OR(CAST(rt1.c1 AS TEXT))))OR(((rt0.c2)||(rt0.c2)))));
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON ((((((((rt1.c2 COLLATE BINARY)AND(((rt1.c0)*(rt1.c3)))))OR(CASE WHEN rt1.c1 THEN rt1.c3 END)))OR(CAST(rt1.c1 AS TEXT))))OR(((rt0.c2)||(rt0.c2)))) WHERE ((((CAST(rt0.c1 AS INTEGER)))=((CASE WHEN rt1.c3 THEN rt0.c1 END))));
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE ((((((rt1.c0)LIKE(rt1.c2)), (((rt0.c0)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c0))), (rt1.c1 IN (rt1.c1))))=(((((rt1.c2, rt0.c0, vt1.c1))>((rt1.c3, rt1.c0, rt0.c1))), rt1.c0, rt1.c4 COLLATE RTRIM)))) ORDER BY ((((rt1.c2)>(1.458004643E9)))<<(((vt1.c0)OR(rt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0)LIKE(rt1.c2)), (((rt0.c0)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c0))), (rt1.c1 IN (rt1.c1))))==(((((rt1.c2, rt0.c0, vt1.c1))>((rt1.c3, rt1.c0, rt0.c1))), rt1.c0, rt1.c4 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY ((((rt1.c2)>(1.458004643E9)))<<(((vt1.c0)OR(rt1.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE ((((((rt1.c0)LIKE(rt1.c2)), (((rt0.c0)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c0))), (rt1.c1 IN (rt1.c1))))=(((((rt1.c2, rt0.c0, vt1.c1))>((rt1.c3, rt1.c0, rt0.c1))), rt1.c0, rt1.c4 COLLATE RTRIM)))) ORDER BY ((((rt1.c2)>(1.458004643E9)))<<(((vt1.c0)OR(rt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0)LIKE(rt1.c2)), (((rt0.c0)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c0))), (rt1.c1 IN (rt1.c1))))==(((((rt1.c2, rt0.c0, vt1.c1))>((rt1.c3, rt1.c0, rt0.c1))), rt1.c0, rt1.c4 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY ((((rt1.c2)>(1.458004643E9)))<<(((vt1.c0)OR(rt1.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE ((((((rt1.c0)LIKE(rt1.c2)), (((rt0.c0)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c0))), (rt1.c1 IN (rt1.c1))))=(((((rt1.c2, rt0.c0, vt1.c1))>((rt1.c3, rt1.c0, rt0.c1))), rt1.c0, rt1.c4 COLLATE RTRIM)))) ORDER BY ((((rt1.c2)>(1.458004643E9)))<<(((vt1.c0)OR(rt1.c0)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt1 ON CAST(vt1.c0 AS TEXT) RIGHT OUTER JOIN rt0 ON (((COALESCE(DISTINCT vt1.c2, rt0.c2), ((rt1.c0) IS TRUE), -1459466446))!=((((vt1.c2)GLOB(rt1.c3)), CASE WHEN rt0.c2 THEN vt1.c1 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c0 THEN rt0.c1 END, COALESCE(rt1.c4, vt1.c0, rt0.c1, vt1.c1)))) WHERE (CASE WHEN vt1.c2 THEN rt1.c3 ELSE vt1.c1 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c2 THEN rt1.c3 ELSE vt1.c1 END COLLATE BINARY) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt1 ON CAST(vt1.c0 AS TEXT) RIGHT OUTER JOIN rt0 ON (((COALESCE(DISTINCT vt1.c2, rt0.c2), ((rt1.c0) IS TRUE), -1459466446))<>((((vt1.c2)GLOB(rt1.c3)), CASE WHEN rt0.c2 THEN vt1.c1 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c0 THEN rt0.c1 END, COALESCE(rt1.c4, vt1.c0, rt0.c1, vt1.c1)))));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt1 ON CAST(vt1.c0 AS TEXT) RIGHT OUTER JOIN rt0 ON (((COALESCE(DISTINCT vt1.c2, rt0.c2), ((rt1.c0) IS TRUE), -1459466446))!=((((vt1.c2)GLOB(rt1.c3)), CASE WHEN rt0.c2 THEN vt1.c1 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c0 THEN rt0.c1 END, COALESCE(rt1.c4, vt1.c0, rt0.c1, vt1.c1)))) WHERE (CASE WHEN vt1.c2 THEN rt1.c3 ELSE vt1.c1 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c2 THEN rt1.c3 ELSE vt1.c1 END COLLATE BINARY) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt1 ON CAST(vt1.c0 AS TEXT) RIGHT OUTER JOIN rt0 ON (((COALESCE(DISTINCT vt1.c2, rt0.c2), ((rt1.c0) IS TRUE), -1459466446))<>((((vt1.c2)GLOB(rt1.c3)), CASE WHEN rt0.c2 THEN vt1.c1 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c0 THEN rt0.c1 END, COALESCE(rt1.c4, vt1.c0, rt0.c1, vt1.c1)))));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt1 ON CAST(vt1.c0 AS TEXT) RIGHT OUTER JOIN rt0 ON (((COALESCE(DISTINCT vt1.c2, rt0.c2), ((rt1.c0) IS TRUE), -1459466446))!=((((vt1.c2)GLOB(rt1.c3)), CASE WHEN rt0.c2 THEN vt1.c1 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c0 THEN rt0.c1 END, COALESCE(rt1.c4, vt1.c0, rt0.c1, vt1.c1)))) WHERE (CASE WHEN vt1.c2 THEN rt1.c3 ELSE vt1.c1 END COLLATE BINARY);
SELECT ALL * FROM rt1, vt1 WHERE ((((vt1.c1, rt1.c2, rt1.c0)) BETWEEN ((CAST(vt1.c1 AS INTEGER), ((((rt1.c2)OR(rt1.c4)))AND(rt1.c0)), (NOT (rt1.c1)))) AND (((NOT (vt1.c0)), ((vt1.c1) IS FALSE), (~ (vt1.c1)))))) ORDER BY vt1.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c1, rt1.c2, rt1.c0)) BETWEEN ((CAST(vt1.c1 AS INTEGER), ((((rt1.c2)OR(rt1.c4)))AND(rt1.c0)), (NOT (rt1.c1)))) AND (((NOT (vt1.c0)), ((vt1.c1) IS FALSE), (~ (vt1.c1)))))) IS TRUE)  as count FROM rt1, vt1 ORDER BY vt1.c1 ASC  NULLS FIRST);
SELECT ALL * FROM rt1, vt1 WHERE ((((vt1.c1, rt1.c2, rt1.c0)) BETWEEN ((CAST(vt1.c1 AS INTEGER), ((((rt1.c2)OR(rt1.c4)))AND(rt1.c0)), (NOT (rt1.c1)))) AND (((NOT (vt1.c0)), ((vt1.c1) IS FALSE), (~ (vt1.c1)))))) ORDER BY vt1.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c1, rt1.c2, rt1.c0)) BETWEEN ((CAST(vt1.c1 AS INTEGER), ((((rt1.c2)OR(rt1.c4)))AND(rt1.c0)), (NOT (rt1.c1)))) AND (((NOT (vt1.c0)), ((vt1.c1) IS FALSE), (~ (vt1.c1)))))) IS TRUE)  as count FROM rt1, vt1 ORDER BY vt1.c1 ASC  NULLS FIRST);
SELECT ALL * FROM rt1, vt1 WHERE ((((vt1.c1, rt1.c2, rt1.c0)) BETWEEN ((CAST(vt1.c1 AS INTEGER), ((((rt1.c2)OR(rt1.c4)))AND(rt1.c0)), (NOT (rt1.c1)))) AND (((NOT (vt1.c0)), ((vt1.c1) IS FALSE), (~ (vt1.c1)))))) ORDER BY vt1.c1 ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((rt0.c0) IS TRUE))+(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS TRUE))+(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0) IS TRUE))+(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS TRUE))+(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0) IS TRUE))+(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)) AS TEXT));
SELECT * FROM vt1 WHERE (json_insert((((vt1.c1, vt1.c0, x''))<=((vt1.c1, vt1.c2, vt1.c2))), ((vt1.c1)*(vt1.c2)), TRIM(vt1.c0), ((vt1.c2)-(vt1.c2)), ((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c2)))OR(vt1.c0)))OR(vt1.c0)), vt1.c2, vt1.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((json_insert((((vt1.c1, vt1.c0, x''))<=((vt1.c1, vt1.c2, vt1.c2))), ((vt1.c1)*(vt1.c2)), TRIM(vt1.c0), ((vt1.c2)-(vt1.c2)), ((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c2)))OR(vt1.c0)))OR(vt1.c0)), vt1.c2, vt1.c2 COLLATE RTRIM)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (json_insert((((vt1.c1, vt1.c0, x''))<=((vt1.c1, vt1.c2, vt1.c2))), ((vt1.c1)*(vt1.c2)), TRIM(vt1.c0), ((vt1.c2)-(vt1.c2)), ((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c2)))OR(vt1.c0)))OR(vt1.c0)), vt1.c2, vt1.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((json_insert((((vt1.c1, vt1.c0, x''))<=((vt1.c1, vt1.c2, vt1.c2))), ((vt1.c1)*(vt1.c2)), TRIM(vt1.c0), ((vt1.c2)-(vt1.c2)), ((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c2)))OR(vt1.c0)))OR(vt1.c0)), vt1.c2, vt1.c2 COLLATE RTRIM)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(CAST(rt1.c3 AS TEXT) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c3 AS TEXT) AS BLOB)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(CAST(rt1.c3 AS TEXT) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c3 AS TEXT) AS BLOB)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(CAST(rt1.c3 AS TEXT) AS BLOB));
SELECT ALL * FROM rt1, rt0 CROSS JOIN vt1 ON rt0.c2 WHERE (CASE WHEN ABS(rt1.c3) THEN (- (rt1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ABS(rt1.c3) THEN (- (rt1.c2)) END) IS TRUE)  as count FROM rt1, rt0 CROSS JOIN vt1 ON rt0.c2);
SELECT ALL * FROM rt1, rt0 CROSS JOIN vt1 ON rt0.c2 WHERE (CASE WHEN ABS(rt1.c3) THEN (- (rt1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ABS(rt1.c3) THEN (- (rt1.c2)) END) IS TRUE)  as count FROM rt1, rt0 CROSS JOIN vt1 ON rt0.c2);
SELECT ALL * FROM rt1, rt0 CROSS JOIN vt1 ON rt0.c2 WHERE (CASE WHEN ABS(rt1.c3) THEN (- (rt1.c2)) END);
SELECT COUNT(*) FROM rt1 WHERE (highlight((((rt1.c0, '-Td粬51,', rt1.c3)) BETWEEN ((rt1.c0, rt1.c4, rt1.c2)) AND ((rt1.c3, rt1.c2, rt1.c2))), CAST(rt1.c1 AS BLOB), ((rt1.c1)<<(rt1.c2)), CAST(rt1.c4 AS REAL))) ORDER BY CASE WHEN ((rt1.c4)IS NOT(rt1.c0)) THEN json_remove(rt1.c3, rt1.c1, rt1.c3, rt1.c4, rt1.c3, rt1.c1) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((highlight((((rt1.c0, '-Td粬51,', rt1.c3)) BETWEEN ((rt1.c0, rt1.c4, rt1.c2)) AND ((rt1.c3, rt1.c2, rt1.c2))), CAST(rt1.c1 AS BLOB), ((rt1.c1)<<(rt1.c2)), CAST(rt1.c4 AS REAL))) IS TRUE)  as count FROM rt1 NOT INDEXED ORDER BY CASE WHEN ((rt1.c4)IS NOT(rt1.c0)) THEN json_remove(rt1.c3, rt1.c1, rt1.c3, rt1.c4, rt1.c3, rt1.c1) END  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (highlight((((rt1.c0, '-Td粬51,', rt1.c3)) BETWEEN ((rt1.c0, rt1.c4, rt1.c2)) AND ((rt1.c3, rt1.c2, rt1.c2))), CAST(rt1.c1 AS BLOB), ((rt1.c1)<<(rt1.c2)), CAST(rt1.c4 AS REAL))) ORDER BY CASE WHEN ((rt1.c4)IS NOT(rt1.c0)) THEN json_remove(rt1.c3, rt1.c1, rt1.c3, rt1.c4, rt1.c3, rt1.c1) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((highlight((((rt1.c0, '-Td粬51,', rt1.c3)) BETWEEN ((rt1.c0, rt1.c4, rt1.c2)) AND ((rt1.c3, rt1.c2, rt1.c2))), CAST(rt1.c1 AS BLOB), ((rt1.c1)<<(rt1.c2)), CAST(rt1.c4 AS REAL))) IS TRUE)  as count FROM rt1 NOT INDEXED ORDER BY CASE WHEN ((rt1.c4)IS NOT(rt1.c0)) THEN json_remove(rt1.c3, rt1.c1, rt1.c3, rt1.c4, rt1.c3, rt1.c1) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE (vt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE (vt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE (vt1.c2);
SELECT COUNT(*) FROM rt0, rt1 WHERE ('J4 R5x''\r') ORDER BY ((((rt1.c0)/(rt1.c2))) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('J4 R5x''\r') IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt1.c0)/(rt1.c2))) ISNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 WHERE ('J4 R5x''\r') ORDER BY ((((rt1.c0)/(rt1.c2))) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('J4 R5x''\r') IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt1.c0)/(rt1.c2))) ISNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 WHERE ('J4 R5x''\r') ORDER BY ((((rt1.c0)/(rt1.c2))) ISNULL) ASC  NULLS LAST;
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(((vt1.c2)!=('-1198662500')) AS NUMERIC) LEFT OUTER JOIN rt1 ON ((((rt0.c0)OR(rt1.c2)))AND(rt1.c2)) COLLATE NOCASE WHERE (((CASE rt0.c2  WHEN NULL THEN rt1.c4 ELSE vt1.c0 END) NOT NULL)) ORDER BY '1004851312'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN NULL THEN rt1.c4 ELSE vt1.c0 END) NOT NULL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(((vt1.c2)<>('-1198662500')) AS NUMERIC) LEFT OUTER JOIN rt1 ON ((((rt0.c0)OR(rt1.c2)))AND(rt1.c2)) COLLATE NOCASE ORDER BY '1004851312'  NULLS LAST);
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(((vt1.c2)!=('-1198662500')) AS NUMERIC) LEFT OUTER JOIN rt1 ON ((((rt0.c0)OR(rt1.c2)))AND(rt1.c2)) COLLATE NOCASE WHERE (((CASE rt0.c2  WHEN NULL THEN rt1.c4 ELSE vt1.c0 END) NOT NULL)) ORDER BY '1004851312'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN NULL THEN rt1.c4 ELSE vt1.c0 END) NOT NULL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(((vt1.c2)<>('-1198662500')) AS NUMERIC) LEFT OUTER JOIN rt1 ON ((((rt0.c0)OR(rt1.c2)))AND(rt1.c2)) COLLATE NOCASE ORDER BY '1004851312'  NULLS LAST);
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(((vt1.c2)!=('-1198662500')) AS NUMERIC) LEFT OUTER JOIN rt1 ON ((((rt0.c0)OR(rt1.c2)))AND(rt1.c2)) COLLATE NOCASE WHERE (((CASE rt0.c2  WHEN NULL THEN rt1.c4 ELSE vt1.c0 END) NOT NULL)) ORDER BY '1004851312'  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (LOWER(rt1.c2));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(rt1.c2)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (LOWER(rt1.c2));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(rt1.c2)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (LOWER(rt1.c2));
SELECT ALL * FROM rt0, rt1 WHERE ((rt0.c1 IN ())) ORDER BY rtreenode(LTRIM(rt0.c2), rt0.c0 COLLATE NOCASE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ())) IS TRUE)  as count FROM rt0, rt1 ORDER BY rtreenode(LTRIM(rt0.c2), rt0.c0 COLLATE NOCASE)  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 WHERE ((rt0.c1 IN ())) ORDER BY rtreenode(LTRIM(rt0.c2), rt0.c0 COLLATE NOCASE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ())) IS TRUE)  as count FROM rt0, rt1 ORDER BY rtreenode(LTRIM(rt0.c2), rt0.c0 COLLATE NOCASE)  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 WHERE ((rt0.c1 IN ())) ORDER BY rtreenode(LTRIM(rt0.c2), rt0.c0 COLLATE NOCASE)  NULLS FIRST;
SELECT * FROM rt1 WHERE (ABS(rt1.c1) COLLATE NOCASE) ORDER BY (rt1.c3 COLLATE RTRIM IN ((((rt1.c2))<=((0.2534983878150079))))) DESC, (('-1502888122')<>(rt1.c2)) ASC;
SELECT SUM(count) FROM (SELECT ((ABS(rt1.c1) COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY (rt1.c3 COLLATE RTRIM IN ((((rt1.c2))<=((0.2534983878150079))))) DESC, (('-1502888122')!=(rt1.c2)) ASC);
SELECT * FROM rt1 WHERE (ABS(rt1.c1) COLLATE NOCASE) ORDER BY (rt1.c3 COLLATE RTRIM IN ((((rt1.c2))<=((0.2534983878150079))))) DESC, (('-1502888122')<>(rt1.c2)) ASC;
SELECT SUM(count) FROM (SELECT ((ABS(rt1.c1) COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY (rt1.c3 COLLATE RTRIM IN ((((rt1.c2))<=((0.2534983878150079))))) DESC, (('-1502888122')!=(rt1.c2)) ASC);
SELECT * FROM rt1 WHERE (ABS(rt1.c1) COLLATE NOCASE) ORDER BY (rt1.c3 COLLATE RTRIM IN ((((rt1.c2))<=((0.2534983878150079))))) DESC, (('-1502888122')<>(rt1.c2)) ASC;
SELECT COUNT(*) FROM vt1, rt1 WHERE (((COALESCE(DISTINCT rt1.c2, vt1.c1))==((((rt1.c3))<=((rt1.c3)))))) ORDER BY (((((rt1.c0)) NOT BETWEEN ((NULL)) AND ((rt1.c1)))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT rt1.c2, vt1.c1))==((((rt1.c3))<=((rt1.c3)))))) IS TRUE)  as count FROM vt1, rt1 ORDER BY (((((rt1.c0)) NOT BETWEEN ((NULL)) AND ((rt1.c1)))) NOTNULL));
SELECT COUNT(*) FROM vt1, rt1 WHERE (((COALESCE(DISTINCT rt1.c2, vt1.c1))==((((rt1.c3))<=((rt1.c3)))))) ORDER BY (((((rt1.c0)) NOT BETWEEN ((NULL)) AND ((rt1.c1)))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT rt1.c2, vt1.c1))==((((rt1.c3))<=((rt1.c3)))))) IS TRUE)  as count FROM vt1, rt1 ORDER BY (((((rt1.c0)) NOT BETWEEN ((NULL)) AND ((rt1.c1)))) NOTNULL));
SELECT COUNT(*) FROM vt1, rt1 WHERE (((COALESCE(DISTINCT rt1.c2, vt1.c1))==((((rt1.c3))<=((rt1.c3)))))) ORDER BY (((((rt1.c0)) NOT BETWEEN ((NULL)) AND ((rt1.c1)))) NOTNULL);
SELECT COUNT(*) FROM vt1, rt1, rt0 WHERE (NULL) ORDER BY (((0.673451180744771)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c2 THEN vt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN vt1.c2 THEN vt1.c0 WHEN 0x11a8e42 THEN vt1.c2 WHEN rt1.c0 THEN rt1.c0 ELSE vt1.c0 END)) AND (('_햒%'))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY (((0.673451180744771)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c2 THEN vt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN vt1.c2 THEN vt1.c0 WHEN 0x11a8e42 THEN vt1.c2 WHEN rt1.c0 THEN rt1.c0 ELSE vt1.c0 END)) AND (('_햒%'))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt1, rt0 WHERE (NULL) ORDER BY (((0.673451180744771)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c2 THEN vt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN vt1.c2 THEN vt1.c0 WHEN 0x11a8e42 THEN vt1.c2 WHEN rt1.c0 THEN rt1.c0 ELSE vt1.c0 END)) AND (('_햒%'))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY (((0.673451180744771)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c2 THEN vt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN vt1.c2 THEN vt1.c0 WHEN 0x11a8e42 THEN vt1.c2 WHEN rt1.c0 THEN rt1.c0 ELSE vt1.c0 END)) AND (('_햒%'))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt1, rt0 WHERE (NULL) ORDER BY (((0.673451180744771)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c2 THEN vt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN vt1.c2 THEN vt1.c0 WHEN 0x11a8e42 THEN vt1.c2 WHEN rt1.c0 THEN rt1.c0 ELSE vt1.c0 END)) AND (('_햒%'))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1, rt0 WHERE (CAST(rt0.c1 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS NUMERIC)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (CAST(rt0.c1 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS NUMERIC)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (CAST(rt0.c1 AS NUMERIC));
SELECT ALL * FROM rt0 WHERE ((((0.07735824563902749) IS TRUE) IN ())) ORDER BY (- (-2.112949805E9)) ASC;
SELECT SUM(count) FROM (SELECT (((((0.07735824563902749) IS TRUE) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (- (-2.112949805E9)) ASC);
SELECT ALL * FROM rt0 WHERE ((((0.07735824563902749) IS TRUE) IN ())) ORDER BY (- (-2.112949805E9)) ASC;
SELECT SUM(count) FROM (SELECT (((((0.07735824563902749) IS TRUE) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (- (-2.112949805E9)) ASC);
SELECT ALL * FROM rt0 WHERE ((((0.07735824563902749) IS TRUE) IN ())) ORDER BY (- (-2.112949805E9)) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c1) NOT BETWEEN (vt1.c1) AND (-787295731)) THEN 2.111646492E9 COLLATE BINARY WHEN ((0x3209f036)<>(vt1.c0)) THEN CAST(vt1.c0 AS TEXT) WHEN vt1.c2 THEN vt1.c1 COLLATE RTRIM ELSE (((0.036972472247363775))<((vt1.c0))) END) ORDER BY ((((vt1.c1)>(vt1.c2))) NOT BETWEEN ((vt1.c0 IN (vt1.c2, vt1.c0))) AND (IFNULL(vt1.c2, vt1.c2)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c1) NOT BETWEEN (vt1.c1) AND (-787295731)) THEN 2.111646492E9 COLLATE BINARY WHEN ((0x3209f036)<>(vt1.c0)) THEN CAST(vt1.c0 AS TEXT) WHEN vt1.c2 THEN vt1.c1 COLLATE RTRIM ELSE (((0.036972472247363775))<((vt1.c0))) END) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1)>(vt1.c2))) NOT BETWEEN ((vt1.c0 IN (vt1.c2, vt1.c0))) AND (IFNULL(vt1.c2, vt1.c2))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c1) NOT BETWEEN (vt1.c1) AND (-787295731)) THEN 2.111646492E9 COLLATE BINARY WHEN ((0x3209f036)<>(vt1.c0)) THEN CAST(vt1.c0 AS TEXT) WHEN vt1.c2 THEN vt1.c1 COLLATE RTRIM ELSE (((0.036972472247363775))<((vt1.c0))) END) ORDER BY ((((vt1.c1)>(vt1.c2))) NOT BETWEEN ((vt1.c0 IN (vt1.c2, vt1.c0))) AND (IFNULL(vt1.c2, vt1.c2)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c1) NOT BETWEEN (vt1.c1) AND (-787295731)) THEN 2.111646492E9 COLLATE BINARY WHEN ((0x3209f036)<>(vt1.c0)) THEN CAST(vt1.c0 AS TEXT) WHEN vt1.c2 THEN vt1.c1 COLLATE RTRIM ELSE (((0.036972472247363775))<((vt1.c0))) END) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1)>(vt1.c2))) NOT BETWEEN ((vt1.c0 IN (vt1.c2, vt1.c0))) AND (IFNULL(vt1.c2, vt1.c2))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c1) NOT BETWEEN (vt1.c1) AND (-787295731)) THEN 2.111646492E9 COLLATE BINARY WHEN ((0x3209f036)<>(vt1.c0)) THEN CAST(vt1.c0 AS TEXT) WHEN vt1.c2 THEN vt1.c1 COLLATE RTRIM ELSE (((0.036972472247363775))<((vt1.c0))) END) ORDER BY ((((vt1.c1)>(vt1.c2))) NOT BETWEEN ((vt1.c0 IN (vt1.c2, vt1.c0))) AND (IFNULL(vt1.c2, vt1.c2)));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt1 ON ((vt1.c0 COLLATE BINARY) NOT BETWEEN (CAST(vt1.c1 AS TEXT)) AND (rt1.c0 COLLATE NOCASE)) WHERE (CASE WHEN CAST(rt1.c4 AS BLOB) THEN CAST(x'' AS TEXT) WHEN ((((((((rt1.c3)OR('-1518221842')))AND(0X3209f036)))AND(rt1.c0)))OR(vt1.c2)) THEN ((((((((rt1.c1)OR(rt1.c3)))AND(rt1.c4)))OR(vt1.c0)))OR(vt1.c0)) WHEN ((vt1.c2)*(rt1.c2)) THEN (vt1.c2 IN ()) END) ORDER BY CASE CAST(rt1.c1 AS REAL)  WHEN (((vt1.c0, rt1.c2, rt1.c3))<((NULL, rt1.c1, rt1.c4))) THEN ((vt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt1.c4 AS BLOB) THEN CAST(x'' AS TEXT) WHEN ((((((((rt1.c3)OR('-1518221842')))AND(0X3209f036)))AND(rt1.c0)))OR(vt1.c2)) THEN ((((((((rt1.c1)OR(rt1.c3)))AND(rt1.c4)))OR(vt1.c0)))OR(vt1.c0)) WHEN ((vt1.c2)*(rt1.c2)) THEN (vt1.c2 IN ()) END) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt1 ON ((vt1.c0 COLLATE BINARY) NOT BETWEEN (CAST(vt1.c1 AS TEXT)) AND (rt1.c0 COLLATE NOCASE)) ORDER BY CASE CAST(rt1.c1 AS REAL)  WHEN (((vt1.c0, rt1.c2, rt1.c3))<((NULL, rt1.c1, rt1.c4))) THEN ((vt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)) END ASC  NULLS LAST);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt1 ON ((vt1.c0 COLLATE BINARY) NOT BETWEEN (CAST(vt1.c1 AS TEXT)) AND (rt1.c0 COLLATE NOCASE)) WHERE (CASE WHEN CAST(rt1.c4 AS BLOB) THEN CAST(x'' AS TEXT) WHEN ((((((((rt1.c3)OR('-1518221842')))AND(0X3209f036)))AND(rt1.c0)))OR(vt1.c2)) THEN ((((((((rt1.c1)OR(rt1.c3)))AND(rt1.c4)))OR(vt1.c0)))OR(vt1.c0)) WHEN ((vt1.c2)*(rt1.c2)) THEN (vt1.c2 IN ()) END) ORDER BY CASE CAST(rt1.c1 AS REAL)  WHEN (((vt1.c0, rt1.c2, rt1.c3))<((NULL, rt1.c1, rt1.c4))) THEN ((vt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt1.c4 AS BLOB) THEN CAST(x'' AS TEXT) WHEN ((((((((rt1.c3)OR('-1518221842')))AND(0X3209f036)))AND(rt1.c0)))OR(vt1.c2)) THEN ((((((((rt1.c1)OR(rt1.c3)))AND(rt1.c4)))OR(vt1.c0)))OR(vt1.c0)) WHEN ((vt1.c2)*(rt1.c2)) THEN (vt1.c2 IN ()) END) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt1 ON ((vt1.c0 COLLATE BINARY) NOT BETWEEN (CAST(vt1.c1 AS TEXT)) AND (rt1.c0 COLLATE NOCASE)) ORDER BY CASE CAST(rt1.c1 AS REAL)  WHEN (((vt1.c0, rt1.c2, rt1.c3))<((NULL, rt1.c1, rt1.c4))) THEN ((vt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)) END ASC  NULLS LAST);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt1 ON ((vt1.c0 COLLATE BINARY) NOT BETWEEN (CAST(vt1.c1 AS TEXT)) AND (rt1.c0 COLLATE NOCASE)) WHERE (CASE WHEN CAST(rt1.c4 AS BLOB) THEN CAST(x'' AS TEXT) WHEN ((((((((rt1.c3)OR('-1518221842')))AND(0X3209f036)))AND(rt1.c0)))OR(vt1.c2)) THEN ((((((((rt1.c1)OR(rt1.c3)))AND(rt1.c4)))OR(vt1.c0)))OR(vt1.c0)) WHEN ((vt1.c2)*(rt1.c2)) THEN (vt1.c2 IN ()) END) ORDER BY CASE CAST(rt1.c1 AS REAL)  WHEN (((vt1.c0, rt1.c2, rt1.c3))<((NULL, rt1.c1, rt1.c4))) THEN ((vt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)) END ASC  NULLS LAST;
SELECT ALL * FROM rt1, rt0 WHERE (rt1.c1) ORDER BY ((((((((NULLIF(DISTINCT rt1.c4, rt1.c4))AND(rt1.c4)))AND(rt0.c2)))AND(((rt1.c2)%(rt1.c4)))))AND('I쀉'));
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((((((NULLIF(DISTINCT rt1.c4, rt1.c4))AND(rt1.c4)))AND(rt0.c2)))AND(((rt1.c2)%(rt1.c4)))))AND('I쀉')));
SELECT ALL * FROM rt1, rt0 WHERE (rt1.c1) ORDER BY ((((((((NULLIF(DISTINCT rt1.c4, rt1.c4))AND(rt1.c4)))AND(rt0.c2)))AND(((rt1.c2)%(rt1.c4)))))AND('I쀉'));
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((((((NULLIF(DISTINCT rt1.c4, rt1.c4))AND(rt1.c4)))AND(rt0.c2)))AND(((rt1.c2)%(rt1.c4)))))AND('I쀉')));
SELECT ALL * FROM rt1, rt0 WHERE (rt1.c1) ORDER BY ((((((((NULLIF(DISTINCT rt1.c4, rt1.c4))AND(rt1.c4)))AND(rt0.c2)))AND(((rt1.c2)%(rt1.c4)))))AND('I쀉'));
SELECT COUNT(*) FROM rt1, vt1, rt0 WHERE (((0.2130365508190789)<>(CASE WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((0.2130365508190789)!=(CASE WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT COUNT(*) FROM rt1, vt1, rt0 WHERE (((0.2130365508190789)<>(CASE WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((0.2130365508190789)!=(CASE WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT COUNT(*) FROM rt1, vt1, rt0 WHERE (((0.2130365508190789)<>(CASE WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c2 END)));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c2 COLLATE BINARY) NOT BETWEEN (((x'9329')=(rt1.c3))) AND ((((('1082253355')OR(rt1.c1)))OR(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c2 COLLATE BINARY) NOT BETWEEN (((x'9329')=(rt1.c3))) AND ((((('1082253355')OR(rt1.c1)))OR(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c2 COLLATE BINARY) NOT BETWEEN (((x'9329')=(rt1.c3))) AND ((((('1082253355')OR(rt1.c1)))OR(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c2 COLLATE BINARY) NOT BETWEEN (((x'9329')=(rt1.c3))) AND ((((('1082253355')OR(rt1.c1)))OR(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c2 COLLATE BINARY) NOT BETWEEN (((x'9329')=(rt1.c3))) AND ((((('1082253355')OR(rt1.c1)))OR(rt1.c1)))));
SELECT ALL * FROM rt1, rt0, vt1 WHERE (CASE WHEN ((NULL)AND(rt1.c4)) THEN ('1399840105' IN (rt0.c2, rt1.c3)) END) ORDER BY CASE WHEN (((('-1291774150')OR(vt1.c1)))OR(rt0.c0)) THEN (((rt1.c4))<>((rt0.c1))) WHEN 0.5559296530853043 THEN ((rt1.c2)GLOB(x'')) WHEN ((rt1.c4)IS NOT('9223372036854775807')) THEN ((((rt1.c1)AND(rt1.c1)))OR(rt1.c3)) END DESC, (((rt0.c1, rt1.c0, rt0.c1, rt1.c3, vt1.c1)) BETWEEN ((rt1.c1 COLLATE BINARY, CASE WHEN vt1.c1 THEN rt0.c0 END, CAST(rt0.c1 AS REAL), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (x'')), ((vt1.c2) NOTNULL))) AND ((((rt1.c4)GLOB(rt1.c2)), CASE rt1.c3  WHEN vt1.c0 THEN rt1.c2 END, (((vt1.c1)) BETWEEN ((vt1.c2)) AND ((rt1.c4))), '-1404683687', ((rt0.c1) NOTNULL)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((NULL)AND(rt1.c4)) THEN ('1399840105' IN (rt0.c2, rt1.c3)) END) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY CASE WHEN (((('-1291774150')OR(vt1.c1)))OR(rt0.c0)) THEN (((rt1.c4))!=((rt0.c1))) WHEN 0.5559296530853043 THEN ((rt1.c2)GLOB(x'')) WHEN ((rt1.c4)IS NOT('9223372036854775807')) THEN ((((rt1.c1)AND(rt1.c1)))OR(rt1.c3)) END DESC, (((rt0.c1, rt1.c0, rt0.c1, rt1.c3, vt1.c1)) BETWEEN ((rt1.c1 COLLATE BINARY, CASE WHEN vt1.c1 THEN rt0.c0 END, CAST(rt0.c1 AS REAL), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (x'')), ((vt1.c2) NOTNULL))) AND ((((rt1.c4)GLOB(rt1.c2)), CASE rt1.c3  WHEN vt1.c0 THEN rt1.c2 END, (((vt1.c1)) BETWEEN ((vt1.c2)) AND ((rt1.c4))), '-1404683687', ((rt0.c1) NOTNULL)))) ASC);
SELECT ALL * FROM rt1, rt0, vt1 WHERE (CASE WHEN ((NULL)AND(rt1.c4)) THEN ('1399840105' IN (rt0.c2, rt1.c3)) END) ORDER BY CASE WHEN (((('-1291774150')OR(vt1.c1)))OR(rt0.c0)) THEN (((rt1.c4))<>((rt0.c1))) WHEN 0.5559296530853043 THEN ((rt1.c2)GLOB(x'')) WHEN ((rt1.c4)IS NOT('9223372036854775807')) THEN ((((rt1.c1)AND(rt1.c1)))OR(rt1.c3)) END DESC, (((rt0.c1, rt1.c0, rt0.c1, rt1.c3, vt1.c1)) BETWEEN ((rt1.c1 COLLATE BINARY, CASE WHEN vt1.c1 THEN rt0.c0 END, CAST(rt0.c1 AS REAL), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (x'')), ((vt1.c2) NOTNULL))) AND ((((rt1.c4)GLOB(rt1.c2)), CASE rt1.c3  WHEN vt1.c0 THEN rt1.c2 END, (((vt1.c1)) BETWEEN ((vt1.c2)) AND ((rt1.c4))), '-1404683687', ((rt0.c1) NOTNULL)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((NULL)AND(rt1.c4)) THEN ('1399840105' IN (rt0.c2, rt1.c3)) END) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY CASE WHEN (((('-1291774150')OR(vt1.c1)))OR(rt0.c0)) THEN (((rt1.c4))!=((rt0.c1))) WHEN 0.5559296530853043 THEN ((rt1.c2)GLOB(x'')) WHEN ((rt1.c4)IS NOT('9223372036854775807')) THEN ((((rt1.c1)AND(rt1.c1)))OR(rt1.c3)) END DESC, (((rt0.c1, rt1.c0, rt0.c1, rt1.c3, vt1.c1)) BETWEEN ((rt1.c1 COLLATE BINARY, CASE WHEN vt1.c1 THEN rt0.c0 END, CAST(rt0.c1 AS REAL), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (x'')), ((vt1.c2) NOTNULL))) AND ((((rt1.c4)GLOB(rt1.c2)), CASE rt1.c3  WHEN vt1.c0 THEN rt1.c2 END, (((vt1.c1)) BETWEEN ((vt1.c2)) AND ((rt1.c4))), '-1404683687', ((rt0.c1) NOTNULL)))) ASC);
SELECT ALL * FROM rt1, rt0, vt1 WHERE (CASE WHEN ((NULL)AND(rt1.c4)) THEN ('1399840105' IN (rt0.c2, rt1.c3)) END) ORDER BY CASE WHEN (((('-1291774150')OR(vt1.c1)))OR(rt0.c0)) THEN (((rt1.c4))<>((rt0.c1))) WHEN 0.5559296530853043 THEN ((rt1.c2)GLOB(x'')) WHEN ((rt1.c4)IS NOT('9223372036854775807')) THEN ((((rt1.c1)AND(rt1.c1)))OR(rt1.c3)) END DESC, (((rt0.c1, rt1.c0, rt0.c1, rt1.c3, vt1.c1)) BETWEEN ((rt1.c1 COLLATE BINARY, CASE WHEN vt1.c1 THEN rt0.c0 END, CAST(rt0.c1 AS REAL), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (x'')), ((vt1.c2) NOTNULL))) AND ((((rt1.c4)GLOB(rt1.c2)), CASE rt1.c3  WHEN vt1.c0 THEN rt1.c2 END, (((vt1.c1)) BETWEEN ((vt1.c2)) AND ((rt1.c4))), '-1404683687', ((rt0.c1) NOTNULL)))) ASC;
SELECT * FROM rt1 WHERE (((LIKELIHOOD(rt1.c3, 0.1714231832607136))+(SQLITE_COMPILEOPTION_USED(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(rt1.c3, 0.1714231832607136))+(SQLITE_COMPILEOPTION_USED(rt1.c2)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((LIKELIHOOD(rt1.c3, 0.1714231832607136))+(SQLITE_COMPILEOPTION_USED(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(rt1.c3, 0.1714231832607136))+(SQLITE_COMPILEOPTION_USED(rt1.c2)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((LIKELIHOOD(rt1.c3, 0.1714231832607136))+(SQLITE_COMPILEOPTION_USED(rt1.c2))));
SELECT ALL * FROM rt1 WHERE ((((rt1.c4 IN ())) NOT BETWEEN (rt1.c0 COLLATE BINARY) AND ((NOT (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c4 IN ())) NOT BETWEEN (rt1.c0 COLLATE BINARY) AND ((NOT (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c4 IN ())) NOT BETWEEN (rt1.c0 COLLATE BINARY) AND ((NOT (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c4 IN ())) NOT BETWEEN (rt1.c0 COLLATE BINARY) AND ((NOT (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c4 IN ())) NOT BETWEEN (rt1.c0 COLLATE BINARY) AND ((NOT (rt1.c0)))));
SELECT ALL * FROM rt1, vt1, rt0 WHERE (((((((((((rt1.c1)AND(rt1.c0)))OR(NULL)))AND(vt1.c0)))OR(vt1.c2)))&(rt1.c2))) ORDER BY (~ (rt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c1)AND(rt1.c0)))OR(NULL)))AND(vt1.c0)))OR(vt1.c2)))&(rt1.c2))) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY (~ (rt0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL * FROM rt1, vt1, rt0 WHERE (((((((((((rt1.c1)AND(rt1.c0)))OR(NULL)))AND(vt1.c0)))OR(vt1.c2)))&(rt1.c2))) ORDER BY (~ (rt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c1)AND(rt1.c0)))OR(NULL)))AND(vt1.c0)))OR(vt1.c2)))&(rt1.c2))) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY (~ (rt0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL * FROM rt1, vt1, rt0 WHERE (((((((((((rt1.c1)AND(rt1.c0)))OR(NULL)))AND(vt1.c0)))OR(vt1.c2)))&(rt1.c2))) ORDER BY (~ (rt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (LOWER(DISTINCT (('')-(vt1.c1)))) ORDER BY ((vt1.c2 COLLATE BINARY)=(vt1.c1)) DESC;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT (('')-(vt1.c1)))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c2 COLLATE BINARY)=(vt1.c1)) DESC);
SELECT COUNT(*) FROM vt1 WHERE (LOWER(DISTINCT (('')-(vt1.c1)))) ORDER BY ((vt1.c2 COLLATE BINARY)=(vt1.c1)) DESC;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT (('')-(vt1.c1)))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c2 COLLATE BINARY)=(vt1.c1)) DESC);
SELECT COUNT(*) FROM vt1 WHERE (LOWER(DISTINCT (('')-(vt1.c1)))) ORDER BY ((vt1.c2 COLLATE BINARY)=(vt1.c1)) DESC;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))<=((+ (rt0.c1))))) ORDER BY (NOT (((rt0.c2)-(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))<=((+ (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((rt0.c2)-(rt0.c1)))));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))<=((+ (rt0.c1))))) ORDER BY (NOT (((rt0.c2)-(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))<=((+ (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((rt0.c2)-(rt0.c1)))));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))<=((+ (rt0.c1))))) ORDER BY (NOT (((rt0.c2)-(rt0.c1))));
SELECT ALL * FROM vt1, rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c1)OR(rt0.c1))) NOTNULL) WHERE (((((rt1.c1)==('1141283434'))) BETWEEN ((~ (rt0.c0))) AND (((vt1.c0) BETWEEN (rt0.c1) AND (vt1.c1))))) ORDER BY (((CAST(rt0.c1 AS TEXT), ((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c4)), ((('0.8602914048646484'))<((rt1.c4)))))!=((((((((((rt0.c0)AND(rt0.c2)))AND('-1942468862')))AND(vt1.c2)))OR(rt0.c0)), CAST(rt1.c4 AS NUMERIC), ((((rt1.c1)AND(rt1.c2)))AND(rt1.c4))))) ASC  NULLS LAST, (((rt1.c2)<<(vt1.c1)) IN ((~ (rt0.c1))))  NULLS LAST, CAST((vt1.c0 IN ()) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)==('1141283434'))) BETWEEN ((~ (rt0.c0))) AND (((vt1.c0) BETWEEN (rt0.c1) AND (vt1.c1))))) IS TRUE)  as count FROM vt1, rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c1)OR(rt0.c1))) NOTNULL) ORDER BY (((CAST(rt0.c1 AS TEXT), ((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c4)), ((('0.8602914048646484'))<((rt1.c4)))))!=((((((((((rt0.c0)AND(rt0.c2)))AND('-1942468862')))AND(vt1.c2)))OR(rt0.c0)), CAST(rt1.c4 AS NUMERIC), ((((rt1.c1)AND(rt1.c2)))AND(rt1.c4))))) ASC  NULLS LAST, (((rt1.c2)<<(vt1.c1)) IN ((~ (rt0.c1))))  NULLS LAST, CAST((vt1.c0 IN ()) AS INTEGER) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c1)OR(rt0.c1))) NOTNULL) WHERE (((((rt1.c1)==('1141283434'))) BETWEEN ((~ (rt0.c0))) AND (((vt1.c0) BETWEEN (rt0.c1) AND (vt1.c1))))) ORDER BY (((CAST(rt0.c1 AS TEXT), ((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c4)), ((('0.8602914048646484'))<((rt1.c4)))))!=((((((((((rt0.c0)AND(rt0.c2)))AND('-1942468862')))AND(vt1.c2)))OR(rt0.c0)), CAST(rt1.c4 AS NUMERIC), ((((rt1.c1)AND(rt1.c2)))AND(rt1.c4))))) ASC  NULLS LAST, (((rt1.c2)<<(vt1.c1)) IN ((~ (rt0.c1))))  NULLS LAST, CAST((vt1.c0 IN ()) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)==('1141283434'))) BETWEEN ((~ (rt0.c0))) AND (((vt1.c0) BETWEEN (rt0.c1) AND (vt1.c1))))) IS TRUE)  as count FROM vt1, rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c1)OR(rt0.c1))) NOTNULL) ORDER BY (((CAST(rt0.c1 AS TEXT), ((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c4)), ((('0.8602914048646484'))<((rt1.c4)))))!=((((((((((rt0.c0)AND(rt0.c2)))AND('-1942468862')))AND(vt1.c2)))OR(rt0.c0)), CAST(rt1.c4 AS NUMERIC), ((((rt1.c1)AND(rt1.c2)))AND(rt1.c4))))) ASC  NULLS LAST, (((rt1.c2)<<(vt1.c1)) IN ((~ (rt0.c1))))  NULLS LAST, CAST((vt1.c0 IN ()) AS INTEGER) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c1)OR(rt0.c1))) NOTNULL) WHERE (((((rt1.c1)==('1141283434'))) BETWEEN ((~ (rt0.c0))) AND (((vt1.c0) BETWEEN (rt0.c1) AND (vt1.c1))))) ORDER BY (((CAST(rt0.c1 AS TEXT), ((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c4)), ((('0.8602914048646484'))<((rt1.c4)))))!=((((((((((rt0.c0)AND(rt0.c2)))AND('-1942468862')))AND(vt1.c2)))OR(rt0.c0)), CAST(rt1.c4 AS NUMERIC), ((((rt1.c1)AND(rt1.c2)))AND(rt1.c4))))) ASC  NULLS LAST, (((rt1.c2)<<(vt1.c1)) IN ((~ (rt0.c1))))  NULLS LAST, CAST((vt1.c0 IN ()) AS INTEGER) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt1 ON (vt1.c2 IN (vt1.c1)) COLLATE NOCASE LEFT OUTER JOIN rt0 ON (((- (''))) ISNULL) WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1 CROSS JOIN vt1 ON (vt1.c2 IN (vt1.c1)) COLLATE NOCASE LEFT OUTER JOIN rt0 ON (((- (''))) ISNULL));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt1 ON (vt1.c2 IN (vt1.c1)) COLLATE NOCASE LEFT OUTER JOIN rt0 ON (((- (''))) ISNULL) WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1 CROSS JOIN vt1 ON (vt1.c2 IN (vt1.c1)) COLLATE NOCASE LEFT OUTER JOIN rt0 ON (((- (''))) ISNULL));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt1 ON (vt1.c2 IN (vt1.c1)) COLLATE NOCASE LEFT OUTER JOIN rt0 ON (((- (''))) ISNULL) WHERE (rt1.c2);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) IN ()));
SELECT * FROM rt1, vt1 LEFT OUTER JOIN rt0 ON ((((('훓qh \rMsC')AND(0.34654671210421506)))AND(0.7014597488010127)) IN (((rt1.c2) NOT BETWEEN (vt1.c0) AND (rt1.c2)))) WHERE (((((((((rt0.c0)AND(rt1.c1)))OR(rt1.c2)))OR((((rt0.c2))>=((rt0.c0))))))AND((('Gc')<(rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c0)AND(rt1.c1)))OR(rt1.c2)))OR((((rt0.c2))>=((rt0.c0))))))AND((('Gc')<(rt1.c4))))) IS TRUE)  as count FROM rt1, vt1 LEFT OUTER JOIN rt0 ON ((((('훓qh \rMsC')AND(0.34654671210421506)))AND(0.7014597488010127)) IN (((rt1.c2) NOT BETWEEN (vt1.c0) AND (rt1.c2)))));
SELECT * FROM rt1, vt1 LEFT OUTER JOIN rt0 ON ((((('훓qh \rMsC')AND(0.34654671210421506)))AND(0.7014597488010127)) IN (((rt1.c2) NOT BETWEEN (vt1.c0) AND (rt1.c2)))) WHERE (((((((((rt0.c0)AND(rt1.c1)))OR(rt1.c2)))OR((((rt0.c2))>=((rt0.c0))))))AND((('Gc')<(rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c0)AND(rt1.c1)))OR(rt1.c2)))OR((((rt0.c2))>=((rt0.c0))))))AND((('Gc')<(rt1.c4))))) IS TRUE)  as count FROM rt1, vt1 LEFT OUTER JOIN rt0 ON ((((('훓qh \rMsC')AND(0.34654671210421506)))AND(0.7014597488010127)) IN (((rt1.c2) NOT BETWEEN (vt1.c0) AND (rt1.c2)))));
SELECT * FROM rt1, vt1 LEFT OUTER JOIN rt0 ON ((((('훓qh \rMsC')AND(0.34654671210421506)))AND(0.7014597488010127)) IN (((rt1.c2) NOT BETWEEN (vt1.c0) AND (rt1.c2)))) WHERE (((((((((rt0.c0)AND(rt1.c1)))OR(rt1.c2)))OR((((rt0.c2))>=((rt0.c0))))))AND((('Gc')<(rt1.c4)))));
SELECT ALL COUNT(*) FROM rt1, vt1 NOT INDEXED WHERE (ABS(DISTINCT ((vt1.c1) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((vt1.c1) IS TRUE))) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL COUNT(*) FROM rt1, vt1 NOT INDEXED WHERE (ABS(DISTINCT ((vt1.c1) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((vt1.c1) IS TRUE))) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL COUNT(*) FROM rt1, vt1 NOT INDEXED WHERE (ABS(DISTINCT ((vt1.c1) IS TRUE)));
SELECT ALL * FROM rt0, rt1 WHERE (((((rt1.c1)+(rt0.c0)))GLOB(LIKELIHOOD(DISTINCT rt1.c1, 0.1288086780227563))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)+(rt0.c0)))GLOB(LIKELIHOOD(DISTINCT rt1.c1, 0.1288086780227563)))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((((rt1.c1)+(rt0.c0)))GLOB(LIKELIHOOD(DISTINCT rt1.c1, 0.1288086780227563))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)+(rt0.c0)))GLOB(LIKELIHOOD(DISTINCT rt1.c1, 0.1288086780227563)))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((((rt1.c1)+(rt0.c0)))GLOB(LIKELIHOOD(DISTINCT rt1.c1, 0.1288086780227563))));
SELECT ALL * FROM rt0, rt1 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0)))) NOT BETWEEN (0X626c6aa3) AND (LIKELIHOOD(rt1.c0, 0.39864034627728206)))) ORDER BY ((UPPER(0xffffffff93171897)) NOTNULL);
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0)))) NOT BETWEEN (0X626c6aa3) AND (LIKELIHOOD(rt1.c0, 0.39864034627728206)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((UPPER(0Xffffffff93171897)) NOTNULL));
SELECT ALL * FROM rt0, rt1 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0)))) NOT BETWEEN (0X626c6aa3) AND (LIKELIHOOD(rt1.c0, 0.39864034627728206)))) ORDER BY ((UPPER(0xffffffff93171897)) NOTNULL);
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0)))) NOT BETWEEN (0X626c6aa3) AND (LIKELIHOOD(rt1.c0, 0.39864034627728206)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((UPPER(0Xffffffff93171897)) NOTNULL));
SELECT ALL * FROM rt0, rt1 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0)))) NOT BETWEEN (0X626c6aa3) AND (LIKELIHOOD(rt1.c0, 0.39864034627728206)))) ORDER BY ((UPPER(0xffffffff93171897)) NOTNULL);
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE ((((((rt1.c2))==((rt0.c0))))>=(rt1.c1))) ORDER BY (((((vt1.c2) BETWEEN (rt1.c2) AND (vt1.c0))))<=((x'')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2))==((rt0.c0))))>=(rt1.c1))) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY (((((vt1.c2) BETWEEN (rt1.c2) AND (vt1.c0))))<=((x'')))  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE ((((((rt1.c2))==((rt0.c0))))>=(rt1.c1))) ORDER BY (((((vt1.c2) BETWEEN (rt1.c2) AND (vt1.c0))))<=((x'')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2))==((rt0.c0))))>=(rt1.c1))) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY (((((vt1.c2) BETWEEN (rt1.c2) AND (vt1.c0))))<=((x'')))  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE ((((((rt1.c2))==((rt0.c0))))>=(rt1.c1))) ORDER BY (((((vt1.c2) BETWEEN (rt1.c2) AND (vt1.c0))))<=((x'')))  NULLS LAST;
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON ((vt1.c1)<<(vt1.c2)) COLLATE BINARY WHERE ((NOT ((~ (0.018593360365834144))))) ORDER BY vt1.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((~ (0.018593360365834144))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((vt1.c1)<<(vt1.c2)) COLLATE BINARY ORDER BY vt1.c2  NULLS LAST);
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON ((vt1.c1)<<(vt1.c2)) COLLATE BINARY WHERE ((NOT ((~ (0.018593360365834144))))) ORDER BY vt1.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((~ (0.018593360365834144))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((vt1.c1)<<(vt1.c2)) COLLATE BINARY ORDER BY vt1.c2  NULLS LAST);
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON ((vt1.c1)<<(vt1.c2)) COLLATE BINARY WHERE ((NOT ((~ (0.018593360365834144))))) ORDER BY vt1.c2  NULLS LAST;
SELECT * FROM rt0, rt1 INNER JOIN vt1 ON (((- (vt1.c2))) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND ((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((0.9623677427130332))))) WHERE ((~ ((((rt1.c1))>((rt1.c2))))));
SELECT SUM(count) FROM (SELECT (((~ ((((rt1.c1))>((rt1.c2)))))) IS TRUE)  as count FROM rt0, rt1 INNER JOIN vt1 ON (((- (vt1.c2))) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND ((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((0.9623677427130332))))));
SELECT * FROM rt0, rt1 INNER JOIN vt1 ON (((- (vt1.c2))) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND ((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((0.9623677427130332))))) WHERE ((~ ((((rt1.c1))>((rt1.c2))))));
SELECT SUM(count) FROM (SELECT (((~ ((((rt1.c1))>((rt1.c2)))))) IS TRUE)  as count FROM rt0, rt1 INNER JOIN vt1 ON (((- (vt1.c2))) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND ((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((0.9623677427130332))))));
SELECT * FROM rt0, rt1 INNER JOIN vt1 ON (((- (vt1.c2))) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND ((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((0.9623677427130332))))) WHERE ((~ ((((rt1.c1))>((rt1.c2))))));
SELECT COUNT(*) FROM rt0, rt1, vt1 WHERE ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c4)) IN ())) ORDER BY (+ (((vt1.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT (((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c4)) IN ())) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY (+ (((vt1.c0) IS TRUE))));
SELECT COUNT(*) FROM rt0, rt1, vt1 WHERE ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c4)) IN ())) ORDER BY (+ (((vt1.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT (((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c4)) IN ())) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY (+ (((vt1.c0) IS TRUE))));
SELECT COUNT(*) FROM rt0, rt1, vt1 WHERE ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c4)) IN ())) ORDER BY (+ (((vt1.c0) IS TRUE)));
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (((0.7488840792993857)IS NOT(NULL))) ORDER BY ((vt1.c1) NOTNULL) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((0.7488840792993857)IS NOT(NULL))) IS TRUE)  as count FROM vt1, rt1 ORDER BY ((vt1.c1) NOTNULL) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (((0.7488840792993857)IS NOT(NULL))) ORDER BY ((vt1.c1) NOTNULL) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((0.7488840792993857)IS NOT(NULL))) IS TRUE)  as count FROM vt1, rt1 ORDER BY ((vt1.c1) NOTNULL) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (((0.7488840792993857)IS NOT(NULL))) ORDER BY ((vt1.c1) NOTNULL) COLLATE BINARY DESC;
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE BINARY)||(((vt1.c1)+(vt1.c0))))) ORDER BY CAST(((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c2)) AS TEXT) ASC, ((((('U&	~Wf')) NOT BETWEEN ((vt1.c1)) AND ((vt1.c2))))-(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY)||(((vt1.c1)+(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c2)) AS TEXT) ASC, ((((('U&	~Wf')) NOT BETWEEN ((vt1.c1)) AND ((vt1.c2))))-(NULL)) DESC);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE BINARY)||(((vt1.c1)+(vt1.c0))))) ORDER BY CAST(((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c2)) AS TEXT) ASC, ((((('U&	~Wf')) NOT BETWEEN ((vt1.c1)) AND ((vt1.c2))))-(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY)||(((vt1.c1)+(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c2)) AS TEXT) ASC, ((((('U&	~Wf')) NOT BETWEEN ((vt1.c1)) AND ((vt1.c2))))-(NULL)) DESC);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE BINARY)||(((vt1.c1)+(vt1.c0))))) ORDER BY CAST(((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c2)) AS TEXT) ASC, ((((('U&	~Wf')) NOT BETWEEN ((vt1.c1)) AND ((vt1.c2))))-(NULL)) DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c2);
SELECT SUM(count) FROM (SELECT ((vt1.c2) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c2);
SELECT SUM(count) FROM (SELECT ((vt1.c2) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c2);
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE ((((NOT (rt1.c2))) NOT BETWEEN ((vt1.c1 IN (vt1.c0))) AND (rt1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt1.c2))) NOT BETWEEN ((vt1.c1 IN (vt1.c0))) AND (rt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE ((((NOT (rt1.c2))) NOT BETWEEN ((vt1.c1 IN (vt1.c0))) AND (rt1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt1.c2))) NOT BETWEEN ((vt1.c1 IN (vt1.c0))) AND (rt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE ((((NOT (rt1.c2))) NOT BETWEEN ((vt1.c1 IN (vt1.c0))) AND (rt1.c2 COLLATE RTRIM)));
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOTNULL))/(CAST(rt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOTNULL))/(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOTNULL))/(CAST(rt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOTNULL))/(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOTNULL))/(CAST(rt0.c1 AS NUMERIC))));
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((((((((((((rt0.c1) BETWEEN (rt1.c2) AND (rt1.c2)))AND(((rt1.c2)>(rt1.c3)))))AND(COALESCE(DISTINCT rt1.c4, rt1.c1, rt1.c3, rt0.c1))))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt1.c0 END)))AND(((((((((rt1.c3)AND(rt0.c0)))AND(rt0.c2)))OR(0.7644276565921525)))OR(rt1.c0)))))OR('-199051682')))AND(((rt1.c1)|(rt1.c4)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c1) BETWEEN (rt1.c2) AND (rt1.c2)))AND(((rt1.c2)>(rt1.c3)))))AND(COALESCE(DISTINCT rt1.c4, rt1.c1, rt1.c3, rt0.c1))))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt1.c0 END)))AND(((((((((rt1.c3)AND(rt0.c0)))AND(rt0.c2)))OR(0.7644276565921525)))OR(rt1.c0)))))OR('-199051682')))AND(((rt1.c1)|(rt1.c4))))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((((((((((((rt0.c1) BETWEEN (rt1.c2) AND (rt1.c2)))AND(((rt1.c2)>(rt1.c3)))))AND(COALESCE(DISTINCT rt1.c4, rt1.c1, rt1.c3, rt0.c1))))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt1.c0 END)))AND(((((((((rt1.c3)AND(rt0.c0)))AND(rt0.c2)))OR(0.7644276565921525)))OR(rt1.c0)))))OR('-199051682')))AND(((rt1.c1)|(rt1.c4)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c1) BETWEEN (rt1.c2) AND (rt1.c2)))AND(((rt1.c2)>(rt1.c3)))))AND(COALESCE(DISTINCT rt1.c4, rt1.c1, rt1.c3, rt0.c1))))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt1.c0 END)))AND(((((((((rt1.c3)AND(rt0.c0)))AND(rt0.c2)))OR(0.7644276565921525)))OR(rt1.c0)))))OR('-199051682')))AND(((rt1.c1)|(rt1.c4))))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((((((((((((rt0.c1) BETWEEN (rt1.c2) AND (rt1.c2)))AND(((rt1.c2)>(rt1.c3)))))AND(COALESCE(DISTINCT rt1.c4, rt1.c1, rt1.c3, rt0.c1))))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt1.c0 END)))AND(((((((((rt1.c3)AND(rt0.c0)))AND(rt0.c2)))OR(0.7644276565921525)))OR(rt1.c0)))))OR('-199051682')))AND(((rt1.c1)|(rt1.c4)))));
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (((((vt1.c0)||(vt1.c2))) BETWEEN (((rt0.c0)<<(vt1.c0))) AND (rt0.c2))) ORDER BY ((vt1.c2)AND(rt0.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)||(vt1.c2))) BETWEEN (((rt0.c0)<<(vt1.c0))) AND (rt0.c2))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1 ORDER BY ((vt1.c2)AND(rt0.c0)) COLLATE BINARY DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (((((vt1.c0)||(vt1.c2))) BETWEEN (((rt0.c0)<<(vt1.c0))) AND (rt0.c2))) ORDER BY ((vt1.c2)AND(rt0.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)||(vt1.c2))) BETWEEN (((rt0.c0)<<(vt1.c0))) AND (rt0.c2))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1 ORDER BY ((vt1.c2)AND(rt0.c0)) COLLATE BINARY DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (((((vt1.c0)||(vt1.c2))) BETWEEN (((rt0.c0)<<(vt1.c0))) AND (rt0.c2))) ORDER BY ((vt1.c2)AND(rt0.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((((NULL IN ())) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE 'E(' END))) ORDER BY (~ (((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))) ASC, TYPEOF(((0.570908966375254)OR(rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN ())) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE 'E(' END))) IS TRUE)  as count FROM rt0 ORDER BY (~ (((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))) ASC, TYPEOF(((0.570908966375254)OR(rt0.c1))) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((((NULL IN ())) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE 'E(' END))) ORDER BY (~ (((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))) ASC, TYPEOF(((0.570908966375254)OR(rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN ())) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE 'E(' END))) IS TRUE)  as count FROM rt0 ORDER BY (~ (((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))) ASC, TYPEOF(((0.570908966375254)OR(rt0.c1))) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((((NULL IN ())) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE 'E(' END))) ORDER BY (~ (((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))) ASC, TYPEOF(((0.570908966375254)OR(rt0.c1))) ASC;
SELECT ALL * FROM rt1 WHERE (rt1.c3) ORDER BY CASE LIKELIHOOD(0.19644588067241786, 0.7018594378859228)  WHEN ((rt1.c2) IS TRUE) THEN ((((((((rt1.c4)AND(rt1.c0)))OR(rt1.c4)))AND(rt1.c1)))OR(rt1.c1)) WHEN ((rt1.c3)%(rt1.c3)) THEN ((rt1.c1) IS FALSE) WHEN (((rt1.c0, rt1.c1, rt1.c4)) BETWEEN ((rt1.c1, rt1.c0, rt1.c3)) AND ((rt1.c3, rt1.c0, rt1.c3))) THEN CAST(rt1.c1 AS REAL) WHEN x'f403' THEN SQLITE_COMPILEOPTION_GET(rt1.c1) WHEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0)) THEN NULLIF(DISTINCT rt1.c3, rt1.c4) ELSE ((rt1.c4) NOT NULL) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt1 ORDER BY CASE LIKELIHOOD(0.19644588067241786, 0.7018594378859228)  WHEN ((rt1.c2) IS TRUE) THEN ((((((((rt1.c4)AND(rt1.c0)))OR(rt1.c4)))AND(rt1.c1)))OR(rt1.c1)) WHEN ((rt1.c3)%(rt1.c3)) THEN ((rt1.c1) IS FALSE) WHEN (((rt1.c0, rt1.c1, rt1.c4)) BETWEEN ((rt1.c1, rt1.c0, rt1.c3)) AND ((rt1.c3, rt1.c0, rt1.c3))) THEN CAST(rt1.c1 AS REAL) WHEN x'f403' THEN SQLITE_COMPILEOPTION_GET(rt1.c1) WHEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0)) THEN NULLIF(DISTINCT rt1.c3, rt1.c4) ELSE ((rt1.c4) NOT NULL) END DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (rt1.c3) ORDER BY CASE LIKELIHOOD(0.19644588067241786, 0.7018594378859228)  WHEN ((rt1.c2) IS TRUE) THEN ((((((((rt1.c4)AND(rt1.c0)))OR(rt1.c4)))AND(rt1.c1)))OR(rt1.c1)) WHEN ((rt1.c3)%(rt1.c3)) THEN ((rt1.c1) IS FALSE) WHEN (((rt1.c0, rt1.c1, rt1.c4)) BETWEEN ((rt1.c1, rt1.c0, rt1.c3)) AND ((rt1.c3, rt1.c0, rt1.c3))) THEN CAST(rt1.c1 AS REAL) WHEN x'f403' THEN SQLITE_COMPILEOPTION_GET(rt1.c1) WHEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0)) THEN NULLIF(DISTINCT rt1.c3, rt1.c4) ELSE ((rt1.c4) NOT NULL) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt1 ORDER BY CASE LIKELIHOOD(0.19644588067241786, 0.7018594378859228)  WHEN ((rt1.c2) IS TRUE) THEN ((((((((rt1.c4)AND(rt1.c0)))OR(rt1.c4)))AND(rt1.c1)))OR(rt1.c1)) WHEN ((rt1.c3)%(rt1.c3)) THEN ((rt1.c1) IS FALSE) WHEN (((rt1.c0, rt1.c1, rt1.c4)) BETWEEN ((rt1.c1, rt1.c0, rt1.c3)) AND ((rt1.c3, rt1.c0, rt1.c3))) THEN CAST(rt1.c1 AS REAL) WHEN x'f403' THEN SQLITE_COMPILEOPTION_GET(rt1.c1) WHEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0)) THEN NULLIF(DISTINCT rt1.c3, rt1.c4) ELSE ((rt1.c4) NOT NULL) END DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (rt1.c3) ORDER BY CASE LIKELIHOOD(0.19644588067241786, 0.7018594378859228)  WHEN ((rt1.c2) IS TRUE) THEN ((((((((rt1.c4)AND(rt1.c0)))OR(rt1.c4)))AND(rt1.c1)))OR(rt1.c1)) WHEN ((rt1.c3)%(rt1.c3)) THEN ((rt1.c1) IS FALSE) WHEN (((rt1.c0, rt1.c1, rt1.c4)) BETWEEN ((rt1.c1, rt1.c0, rt1.c3)) AND ((rt1.c3, rt1.c0, rt1.c3))) THEN CAST(rt1.c1 AS REAL) WHEN x'f403' THEN SQLITE_COMPILEOPTION_GET(rt1.c1) WHEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0)) THEN NULLIF(DISTINCT rt1.c3, rt1.c4) ELSE ((rt1.c4) NOT NULL) END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE (CASE CASE WHEN rt1.c1 THEN rt0.c1 END  WHEN ABS(DISTINCT rt1.c3) THEN ((vt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c4)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt1.c1 THEN rt0.c1 END  WHEN ABS(DISTINCT rt1.c3) THEN ((vt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c4)) END) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE (CASE CASE WHEN rt1.c1 THEN rt0.c1 END  WHEN ABS(DISTINCT rt1.c3) THEN ((vt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c4)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt1.c1 THEN rt0.c1 END  WHEN ABS(DISTINCT rt1.c3) THEN ((vt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c4)) END) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE (CASE CASE WHEN rt1.c1 THEN rt0.c1 END  WHEN ABS(DISTINCT rt1.c3) THEN ((vt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c4)) END);
SELECT COUNT(*) FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (NULL);
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON vt1.c2 WHERE (((rt0.c1)>=(CAST(rt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)>=(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON vt1.c2);
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON vt1.c2 WHERE (((rt0.c1)>=(CAST(rt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)>=(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON vt1.c2);
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON vt1.c2 WHERE (((rt0.c1)>=(CAST(rt0.c1 AS BLOB))));
SELECT * FROM rt1, rt0, vt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT * FROM rt1, rt0, vt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT * FROM rt1, rt0, vt1 WHERE (rt1.c2);
SELECT ALL * FROM rt1 WHERE ((((rt1.c1 IN ()))<(((rt1.c4)<>(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN ()))<(((rt1.c4)!=(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c1 IN ()))<(((rt1.c4)<>(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN ()))<(((rt1.c4)!=(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c1 IN ()))<(((rt1.c4)<>(rt1.c2)))));
SELECT ALL COUNT(*) FROM rt0, vt1 FULL OUTER JOIN rt1 ON x'' WHERE ((((NOT (vt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt1.c0))) ISNULL)) IS TRUE)  as count FROM rt0, vt1 FULL OUTER JOIN rt1 ON x'');
SELECT ALL COUNT(*) FROM rt0, vt1 FULL OUTER JOIN rt1 ON x'' WHERE ((((NOT (vt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt1.c0))) ISNULL)) IS TRUE)  as count FROM rt0, vt1 FULL OUTER JOIN rt1 ON x'');
SELECT ALL COUNT(*) FROM rt0, vt1 FULL OUTER JOIN rt1 ON x'' WHERE ((((NOT (vt1.c0))) ISNULL));
SELECT * FROM rt0, vt1, rt1 WHERE (((((vt1.c2) IS TRUE))!=(CASE -1933207123  WHEN rt1.c2 THEN vt1.c2 ELSE rt1.c3 END)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c2) IS TRUE))<>(CASE -1933207123  WHEN rt1.c2 THEN vt1.c2 ELSE rt1.c3 END))) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT * FROM rt0, vt1, rt1 WHERE (((((vt1.c2) IS TRUE))!=(CASE -1933207123  WHEN rt1.c2 THEN vt1.c2 ELSE rt1.c3 END)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c2) IS TRUE))<>(CASE -1933207123  WHEN rt1.c2 THEN vt1.c2 ELSE rt1.c3 END))) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT * FROM rt0, vt1, rt1 WHERE (((((vt1.c2) IS TRUE))!=(CASE -1933207123  WHEN rt1.c2 THEN vt1.c2 ELSE rt1.c3 END)));
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE (MIN(((rt0.c2) BETWEEN (rt1.c4) AND (rt0.c0)), CAST(rt1.c2 AS NUMERIC))) ORDER BY CAST(CAST(rt1.c0 AS REAL) AS INTEGER) DESC  NULLS LAST, ((rt1.c3 COLLATE NOCASE) NOT BETWEEN (((rt1.c2)>(vt1.c1))) AND (UNLIKELY(rt1.c0))) DESC  NULLS FIRST, (((rt1.c4 IN ()))-(CAST(rt0.c1 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((MIN(((rt0.c2) BETWEEN (rt1.c4) AND (rt0.c0)), CAST(rt1.c2 AS NUMERIC))) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY CAST(CAST(rt1.c0 AS REAL) AS INTEGER) DESC  NULLS LAST, ((rt1.c3 COLLATE NOCASE) NOT BETWEEN (((rt1.c2)>(vt1.c1))) AND (UNLIKELY(rt1.c0))) DESC  NULLS FIRST, (((rt1.c4 IN ()))-(CAST(rt0.c1 AS TEXT)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE (MIN(((rt0.c2) BETWEEN (rt1.c4) AND (rt0.c0)), CAST(rt1.c2 AS NUMERIC))) ORDER BY CAST(CAST(rt1.c0 AS REAL) AS INTEGER) DESC  NULLS LAST, ((rt1.c3 COLLATE NOCASE) NOT BETWEEN (((rt1.c2)>(vt1.c1))) AND (UNLIKELY(rt1.c0))) DESC  NULLS FIRST, (((rt1.c4 IN ()))-(CAST(rt0.c1 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((MIN(((rt0.c2) BETWEEN (rt1.c4) AND (rt0.c0)), CAST(rt1.c2 AS NUMERIC))) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY CAST(CAST(rt1.c0 AS REAL) AS INTEGER) DESC  NULLS LAST, ((rt1.c3 COLLATE NOCASE) NOT BETWEEN (((rt1.c2)>(vt1.c1))) AND (UNLIKELY(rt1.c0))) DESC  NULLS FIRST, (((rt1.c4 IN ()))-(CAST(rt0.c1 AS TEXT)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE (MIN(((rt0.c2) BETWEEN (rt1.c4) AND (rt0.c0)), CAST(rt1.c2 AS NUMERIC))) ORDER BY CAST(CAST(rt1.c0 AS REAL) AS INTEGER) DESC  NULLS LAST, ((rt1.c3 COLLATE NOCASE) NOT BETWEEN (((rt1.c2)>(vt1.c1))) AND (UNLIKELY(rt1.c0))) DESC  NULLS FIRST, (((rt1.c4 IN ()))-(CAST(rt0.c1 AS TEXT)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE ((((((rt1.c4 IN ()))AND(((((((((((((rt1.c3)AND(rt1.c2)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))OR(rt1.c3)))OR(0Xffffffff9b78c4a2)))))OR(CHAR(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c4 IN ()))AND(((((((((((((rt1.c3)AND(rt1.c2)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))OR(rt1.c3)))OR(0xffffffff9b78c4a2)))))OR(CHAR(vt1.c0)))) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE ((((((rt1.c4 IN ()))AND(((((((((((((rt1.c3)AND(rt1.c2)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))OR(rt1.c3)))OR(0Xffffffff9b78c4a2)))))OR(CHAR(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c4 IN ()))AND(((((((((((((rt1.c3)AND(rt1.c2)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))OR(rt1.c3)))OR(0xffffffff9b78c4a2)))))OR(CHAR(vt1.c0)))) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE ((((((rt1.c4 IN ()))AND(((((((((((((rt1.c3)AND(rt1.c2)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))OR(rt1.c3)))OR(0Xffffffff9b78c4a2)))))OR(CHAR(vt1.c0))));
SELECT * FROM vt1, rt0 WHERE ((((0.5090664465591855)) BETWEEN ((((rt0.c0) NOTNULL))) AND (((((vt1.c2))>((vt1.c1))))))) ORDER BY CAST(((vt1.c1) NOT NULL) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((0.5090664465591855)) BETWEEN ((((rt0.c0) NOTNULL))) AND (((((vt1.c2))>((vt1.c1))))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(((vt1.c1) NOT NULL) AS INTEGER) DESC);
SELECT * FROM vt1, rt0 WHERE ((((0.5090664465591855)) BETWEEN ((((rt0.c0) NOTNULL))) AND (((((vt1.c2))>((vt1.c1))))))) ORDER BY CAST(((vt1.c1) NOT NULL) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((0.5090664465591855)) BETWEEN ((((rt0.c0) NOTNULL))) AND (((((vt1.c2))>((vt1.c1))))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(((vt1.c1) NOT NULL) AS INTEGER) DESC);
SELECT * FROM vt1, rt0 WHERE ((((0.5090664465591855)) BETWEEN ((((rt0.c0) NOTNULL))) AND (((((vt1.c2))>((vt1.c1))))))) ORDER BY CAST(((vt1.c1) NOT NULL) AS INTEGER) DESC;
SELECT * FROM vt1, rt0, rt1 WHERE (((((((rt1.c4)<(vt1.c0)))OR(rt0.c1)))AND(CAST(rt1.c3 AS NUMERIC)))) ORDER BY (((rt0.c0 IN ()))<(((rt0.c2) BETWEEN (x'f9e3') AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c4)<(vt1.c0)))OR(rt0.c1)))AND(CAST(rt1.c3 AS NUMERIC)))) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY (((rt0.c0 IN ()))<(((rt0.c2) BETWEEN (x'f9e3') AND (rt0.c2)))));
SELECT * FROM vt1, rt0, rt1 WHERE (((((((rt1.c4)<(vt1.c0)))OR(rt0.c1)))AND(CAST(rt1.c3 AS NUMERIC)))) ORDER BY (((rt0.c0 IN ()))<(((rt0.c2) BETWEEN (x'f9e3') AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c4)<(vt1.c0)))OR(rt0.c1)))AND(CAST(rt1.c3 AS NUMERIC)))) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY (((rt0.c0 IN ()))<(((rt0.c2) BETWEEN (x'f9e3') AND (rt0.c2)))));
SELECT * FROM vt1, rt0, rt1 WHERE (((((((rt1.c4)<(vt1.c0)))OR(rt0.c1)))AND(CAST(rt1.c3 AS NUMERIC)))) ORDER BY (((rt0.c0 IN ()))<(((rt0.c2) BETWEEN (x'f9e3') AND (rt0.c2))));
SELECT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c0 THEN -49002857 ELSE vt1.c1 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c0 THEN -49002857 ELSE vt1.c1 END) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c0 THEN -49002857 ELSE vt1.c1 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c0 THEN -49002857 ELSE vt1.c1 END) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c0 THEN -49002857 ELSE vt1.c1 END) IS TRUE));
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c1) NOT NULL) IN ())) ORDER BY (((~ ('dT\6ȓy'))) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) NOT NULL) IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((~ ('dT\6ȓy'))) IS FALSE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c1) NOT NULL) IN ())) ORDER BY (((~ ('dT\6ȓy'))) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) NOT NULL) IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((~ ('dT\6ȓy'))) IS FALSE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c1) NOT NULL) IN ())) ORDER BY (((~ ('dT\6ȓy'))) IS FALSE) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (((0.3882298949589851) NOT BETWEEN ((((rt1.c2))>((rt1.c2)))) AND (((rt1.c3)IS(vt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.3882298949589851) NOT BETWEEN ((((rt1.c2))>((rt1.c2)))) AND (((rt1.c3)IS(vt1.c2))))) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (((0.3882298949589851) NOT BETWEEN ((((rt1.c2))>((rt1.c2)))) AND (((rt1.c3)IS(vt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.3882298949589851) NOT BETWEEN ((((rt1.c2))>((rt1.c2)))) AND (((rt1.c3)IS(vt1.c2))))) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (((0.3882298949589851) NOT BETWEEN ((((rt1.c2))>((rt1.c2)))) AND (((rt1.c3)IS(vt1.c2)))));
SELECT ALL * FROM vt1, rt0 WHERE (CASE WHEN ((vt1.c1)>(rt0.c2)) THEN ((rt0.c2) IS TRUE) WHEN rt0.c2 COLLATE BINARY THEN TRIM(rt0.c0) WHEN (((NULL, vt1.c1, vt1.c1)) BETWEEN ((rt0.c2, 0.16403590598490392, vt1.c2)) AND ((vt1.c0, 0.4185054532998531, rt0.c1))) THEN vt1.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c1)>(rt0.c2)) THEN ((rt0.c2) IS TRUE) WHEN rt0.c2 COLLATE BINARY THEN TRIM(rt0.c0) WHEN (((NULL, vt1.c1, vt1.c1)) BETWEEN ((rt0.c2, 0.16403590598490392, vt1.c2)) AND ((vt1.c0, 0.4185054532998531, rt0.c1))) THEN vt1.c1 END) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (CASE WHEN ((vt1.c1)>(rt0.c2)) THEN ((rt0.c2) IS TRUE) WHEN rt0.c2 COLLATE BINARY THEN TRIM(rt0.c0) WHEN (((NULL, vt1.c1, vt1.c1)) BETWEEN ((rt0.c2, 0.16403590598490392, vt1.c2)) AND ((vt1.c0, 0.4185054532998531, rt0.c1))) THEN vt1.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c1)>(rt0.c2)) THEN ((rt0.c2) IS TRUE) WHEN rt0.c2 COLLATE BINARY THEN TRIM(rt0.c0) WHEN (((NULL, vt1.c1, vt1.c1)) BETWEEN ((rt0.c2, 0.16403590598490392, vt1.c2)) AND ((vt1.c0, 0.4185054532998531, rt0.c1))) THEN vt1.c1 END) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (CASE WHEN ((vt1.c1)>(rt0.c2)) THEN ((rt0.c2) IS TRUE) WHEN rt0.c2 COLLATE BINARY THEN TRIM(rt0.c0) WHEN (((NULL, vt1.c1, vt1.c1)) BETWEEN ((rt0.c2, 0.16403590598490392, vt1.c2)) AND ((vt1.c0, 0.4185054532998531, rt0.c1))) THEN vt1.c1 END);
SELECT ALL * FROM rt0, rt1, vt1 WHERE (((CHANGES()) NOT NULL)) ORDER BY CAST(((rt0.c1)<>(NULL)) AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CHANGES()) NOT NULL)) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY CAST(((rt0.c1)<>(NULL)) AS INTEGER) ASC  NULLS LAST);
SELECT ALL * FROM rt0, rt1, vt1 WHERE (((CHANGES()) NOT NULL)) ORDER BY CAST(((rt0.c1)<>(NULL)) AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CHANGES()) NOT NULL)) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY CAST(((rt0.c1)<>(NULL)) AS INTEGER) ASC  NULLS LAST);
SELECT ALL * FROM rt0, rt1, vt1 WHERE (((CHANGES()) NOT NULL)) ORDER BY CAST(((rt0.c1)<>(NULL)) AS INTEGER) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON (NOT (CAST(rt0.c1 AS NUMERIC))) WHERE ('嶺~!+)') ORDER BY ((((CASE rt1.c3  WHEN rt1.c3 THEN rt1.c0 END)AND(((((rt1.c1)AND(rt1.c4)))AND(rt1.c1)))))AND(((((rt1.c2)OR(rt1.c3)))OR(rt1.c3)))), x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('嶺~!+)') IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON (NOT (CAST(rt0.c1 AS NUMERIC))) ORDER BY ((((CASE rt1.c3  WHEN rt1.c3 THEN rt1.c0 END)AND(((((rt1.c1)AND(rt1.c4)))AND(rt1.c1)))))AND(((((rt1.c2)OR(rt1.c3)))OR(rt1.c3)))), x''  NULLS LAST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON (NOT (CAST(rt0.c1 AS NUMERIC))) WHERE ('嶺~!+)') ORDER BY ((((CASE rt1.c3  WHEN rt1.c3 THEN rt1.c0 END)AND(((((rt1.c1)AND(rt1.c4)))AND(rt1.c1)))))AND(((((rt1.c2)OR(rt1.c3)))OR(rt1.c3)))), x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('嶺~!+)') IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON (NOT (CAST(rt0.c1 AS NUMERIC))) ORDER BY ((((CASE rt1.c3  WHEN rt1.c3 THEN rt1.c0 END)AND(((((rt1.c1)AND(rt1.c4)))AND(rt1.c1)))))AND(((((rt1.c2)OR(rt1.c3)))OR(rt1.c3)))), x''  NULLS LAST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON (NOT (CAST(rt0.c1 AS NUMERIC))) WHERE ('嶺~!+)') ORDER BY ((((CASE rt1.c3  WHEN rt1.c3 THEN rt1.c0 END)AND(((((rt1.c1)AND(rt1.c4)))AND(rt1.c1)))))AND(((((rt1.c2)OR(rt1.c3)))OR(rt1.c3)))), x''  NULLS LAST;
SELECT * FROM rt1 WHERE ((((+ (rt1.c3)))<<(((rt1.c3)OR(rt1.c0))))) ORDER BY ((((rt1.c4)OR('ZdG')))||(CAST(rt1.c4 AS REAL)))  NULLS FIRST, TRIM(rt1.c0 COLLATE NOCASE), (rt1.c4 IN ()) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt1.c3)))<<(((rt1.c3)OR(rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c4)OR('ZdG')))||(CAST(rt1.c4 AS REAL)))  NULLS FIRST, TRIM(rt1.c0 COLLATE NOCASE), (rt1.c4 IN ()) COLLATE NOCASE  NULLS FIRST);
SELECT * FROM rt1 WHERE ((((+ (rt1.c3)))<<(((rt1.c3)OR(rt1.c0))))) ORDER BY ((((rt1.c4)OR('ZdG')))||(CAST(rt1.c4 AS REAL)))  NULLS FIRST, TRIM(rt1.c0 COLLATE NOCASE), (rt1.c4 IN ()) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt1.c3)))<<(((rt1.c3)OR(rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c4)OR('ZdG')))||(CAST(rt1.c4 AS REAL)))  NULLS FIRST, TRIM(rt1.c0 COLLATE NOCASE), (rt1.c4 IN ()) COLLATE NOCASE  NULLS FIRST);
SELECT * FROM rt1 WHERE ((((+ (rt1.c3)))<<(((rt1.c3)OR(rt1.c0))))) ORDER BY ((((rt1.c4)OR('ZdG')))||(CAST(rt1.c4 AS REAL)))  NULLS FIRST, TRIM(rt1.c0 COLLATE NOCASE), (rt1.c4 IN ()) COLLATE NOCASE  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c0 COLLATE RTRIM IN (NULL))) ORDER BY (((((NOT (rt1.c4)))AND(CAST(rt1.c0 AS BLOB))))AND(((rt1.c4)AND(rt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt1.c0 COLLATE RTRIM IN (NULL))) IS TRUE)  as count FROM rt1 ORDER BY (((((NOT (rt1.c4)))AND(CAST(rt1.c0 AS BLOB))))AND(((rt1.c4)AND(rt1.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c0 COLLATE RTRIM IN (NULL))) ORDER BY (((((NOT (rt1.c4)))AND(CAST(rt1.c0 AS BLOB))))AND(((rt1.c4)AND(rt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt1.c0 COLLATE RTRIM IN (NULL))) IS TRUE)  as count FROM rt1 ORDER BY (((((NOT (rt1.c4)))AND(CAST(rt1.c0 AS BLOB))))AND(((rt1.c4)AND(rt1.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c0 COLLATE RTRIM IN (NULL))) ORDER BY (((((NOT (rt1.c4)))AND(CAST(rt1.c0 AS BLOB))))AND(((rt1.c4)AND(rt1.c2))))  NULLS LAST;
SELECT * FROM rt1 WHERE (CAST(LIKELIHOOD(rt1.c1, 0.5749896877472147) AS INTEGER)) ORDER BY (((((rt1.c3) BETWEEN (x'28bc') AND (rt1.c3)), (~ (rt1.c4)), CAST(rt1.c0 AS REAL)))!=((((((rt1.c0)OR(rt1.c0)))OR(rt1.c0)), ((rt1.c2)>=(rt1.c4)), IFNULL(DISTINCT rt1.c4, rt1.c3))));
SELECT SUM(count) FROM (SELECT ((CAST(LIKELIHOOD(rt1.c1, 0.5749896877472147) AS INTEGER)) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c3) BETWEEN (x'28bc') AND (rt1.c3)), (~ (rt1.c4)), CAST(rt1.c0 AS REAL)))<>((((((rt1.c0)OR(rt1.c0)))OR(rt1.c0)), ((rt1.c2)>=(rt1.c4)), IFNULL(DISTINCT rt1.c4, rt1.c3)))));
SELECT * FROM rt1 WHERE (CAST(LIKELIHOOD(rt1.c1, 0.5749896877472147) AS INTEGER)) ORDER BY (((((rt1.c3) BETWEEN (x'28bc') AND (rt1.c3)), (~ (rt1.c4)), CAST(rt1.c0 AS REAL)))!=((((((rt1.c0)OR(rt1.c0)))OR(rt1.c0)), ((rt1.c2)>=(rt1.c4)), IFNULL(DISTINCT rt1.c4, rt1.c3))));
SELECT SUM(count) FROM (SELECT ((CAST(LIKELIHOOD(rt1.c1, 0.5749896877472147) AS INTEGER)) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c3) BETWEEN (x'28bc') AND (rt1.c3)), (~ (rt1.c4)), CAST(rt1.c0 AS REAL)))<>((((((rt1.c0)OR(rt1.c0)))OR(rt1.c0)), ((rt1.c2)>=(rt1.c4)), IFNULL(DISTINCT rt1.c4, rt1.c3)))));
SELECT * FROM rt1 WHERE (CAST(LIKELIHOOD(rt1.c1, 0.5749896877472147) AS INTEGER)) ORDER BY (((((rt1.c3) BETWEEN (x'28bc') AND (rt1.c3)), (~ (rt1.c4)), CAST(rt1.c0 AS REAL)))!=((((((rt1.c0)OR(rt1.c0)))OR(rt1.c0)), ((rt1.c2)>=(rt1.c4)), IFNULL(DISTINCT rt1.c4, rt1.c3))));
SELECT ALL * FROM rt1, rt0, vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c0)))IS NOT((NOT (rt0.c0))))) ORDER BY ((CASE rt1.c1  WHEN vt1.c0 THEN vt1.c2 WHEN rt1.c3 THEN rt0.c0 WHEN 'dT\6ȓy' THEN rt1.c0 ELSE rt1.c3 END) NOT BETWEEN (((vt1.c1)>=(vt1.c2))) AND (TYPEOF(rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c0)))IS NOT((NOT (rt0.c0))))) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY ((CASE rt1.c1  WHEN vt1.c0 THEN vt1.c2 WHEN rt1.c3 THEN rt0.c0 WHEN 'dT\6ȓy' THEN rt1.c0 ELSE rt1.c3 END) NOT BETWEEN (((vt1.c1)>=(vt1.c2))) AND (TYPEOF(rt1.c1))));
SELECT ALL * FROM rt1, rt0, vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c0)))IS NOT((NOT (rt0.c0))))) ORDER BY ((CASE rt1.c1  WHEN vt1.c0 THEN vt1.c2 WHEN rt1.c3 THEN rt0.c0 WHEN 'dT\6ȓy' THEN rt1.c0 ELSE rt1.c3 END) NOT BETWEEN (((vt1.c1)>=(vt1.c2))) AND (TYPEOF(rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c0)))IS NOT((NOT (rt0.c0))))) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY ((CASE rt1.c1  WHEN vt1.c0 THEN vt1.c2 WHEN rt1.c3 THEN rt0.c0 WHEN 'dT\6ȓy' THEN rt1.c0 ELSE rt1.c3 END) NOT BETWEEN (((vt1.c1)>=(vt1.c2))) AND (TYPEOF(rt1.c1))));
SELECT ALL * FROM rt1, rt0, vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c0)))IS NOT((NOT (rt0.c0))))) ORDER BY ((CASE rt1.c1  WHEN vt1.c0 THEN vt1.c2 WHEN rt1.c3 THEN rt0.c0 WHEN 'dT\6ȓy' THEN rt1.c0 ELSE rt1.c3 END) NOT BETWEEN (((vt1.c1)>=(vt1.c2))) AND (TYPEOF(rt1.c1)));
SELECT * FROM rt1, vt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1, vt1);
SELECT * FROM rt1, vt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1, vt1);
SELECT * FROM rt1, vt1 WHERE (rt1.c3);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c1 COLLATE RTRIM COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1 COLLATE RTRIM COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c1 COLLATE RTRIM COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1 COLLATE RTRIM COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c1 COLLATE RTRIM COLLATE NOCASE COLLATE BINARY);
SELECT ALL * FROM rt1, rt0, vt1 WHERE (IFNULL(CAST(vt1.c0 AS TEXT), (rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(CAST(vt1.c0 AS TEXT), (rt0.c1 IN ()))) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT ALL * FROM rt1, rt0, vt1 WHERE (IFNULL(CAST(vt1.c0 AS TEXT), (rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(CAST(vt1.c0 AS TEXT), (rt0.c1 IN ()))) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT ALL * FROM rt1, rt0, vt1 WHERE (IFNULL(CAST(vt1.c0 AS TEXT), (rt0.c1 IN ())));
SELECT COUNT(*) FROM rt1, vt1 WHERE (x'') ORDER BY (NOT (highlight(vt1.c1, rt1.c4, rt1.c0, vt1.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, vt1 ORDER BY (NOT (highlight(vt1.c1, rt1.c4, rt1.c0, vt1.c1))) DESC);
SELECT COUNT(*) FROM rt1, vt1 WHERE (x'') ORDER BY (NOT (highlight(vt1.c1, rt1.c4, rt1.c0, vt1.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, vt1 ORDER BY (NOT (highlight(vt1.c1, rt1.c4, rt1.c0, vt1.c1))) DESC);
SELECT ALL COUNT(*) FROM vt1, rt1, rt0 WHERE (CASE WHEN ((rt0.c1)|(rt1.c3)) THEN ((rt0.c0)+(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)|(rt1.c3)) THEN ((rt0.c0)+(rt0.c2)) END) IS TRUE)  as count FROM vt1, rt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt1, rt0 WHERE (CASE WHEN ((rt0.c1)|(rt1.c3)) THEN ((rt0.c0)+(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)|(rt1.c3)) THEN ((rt0.c0)+(rt0.c2)) END) IS TRUE)  as count FROM vt1, rt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt1, rt0 WHERE (CASE WHEN ((rt0.c1)|(rt1.c3)) THEN ((rt0.c0)+(rt0.c2)) END);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt1 ON (((rt1.c0)) BETWEEN ((((vt1.c1) NOT BETWEEN (rt0.c2) AND (vt1.c1)))) AND ((rt0.c0 COLLATE BINARY))) INNER JOIN rt0 ON ((CAST(vt1.c1 AS REAL)) BETWEEN (((((rt1.c3)AND('1105547773')))OR(rt0.c1))) AND (HEX(DISTINCT rt1.c0))) WHERE ((((+ (vt1.c0)))LIKE((((rt0.c0)) BETWEEN ((rt1.c4)) AND ((rt1.c0)))))) ORDER BY 634902948;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0)))LIKE((((rt0.c0)) BETWEEN ((rt1.c4)) AND ((rt1.c0)))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt1 ON (((rt1.c0)) BETWEEN ((((vt1.c1) NOT BETWEEN (rt0.c2) AND (vt1.c1)))) AND ((rt0.c0 COLLATE BINARY))) INNER JOIN rt0 ON ((CAST(vt1.c1 AS REAL)) BETWEEN (((((rt1.c3)AND('1105547773')))OR(rt0.c1))) AND (HEX(DISTINCT rt1.c0))) ORDER BY 634902948);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt1 ON (((rt1.c0)) BETWEEN ((((vt1.c1) NOT BETWEEN (rt0.c2) AND (vt1.c1)))) AND ((rt0.c0 COLLATE BINARY))) INNER JOIN rt0 ON ((CAST(vt1.c1 AS REAL)) BETWEEN (((((rt1.c3)AND('1105547773')))OR(rt0.c1))) AND (HEX(DISTINCT rt1.c0))) WHERE ((((+ (vt1.c0)))LIKE((((rt0.c0)) BETWEEN ((rt1.c4)) AND ((rt1.c0)))))) ORDER BY 634902948;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0)))LIKE((((rt0.c0)) BETWEEN ((rt1.c4)) AND ((rt1.c0)))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt1 ON (((rt1.c0)) BETWEEN ((((vt1.c1) NOT BETWEEN (rt0.c2) AND (vt1.c1)))) AND ((rt0.c0 COLLATE BINARY))) INNER JOIN rt0 ON ((CAST(vt1.c1 AS REAL)) BETWEEN (((((rt1.c3)AND('1105547773')))OR(rt0.c1))) AND (HEX(DISTINCT rt1.c0))) ORDER BY 634902948);
SELECT * FROM rt1, vt1 WHERE ((CASE WHEN vt1.c0 THEN rt1.c4 ELSE x'' END IN (CAST(vt1.c1 AS TEXT)))) ORDER BY CAST(((rt1.c0)-(rt1.c3)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt1.c0 THEN rt1.c4 ELSE x'' END IN (CAST(vt1.c1 AS TEXT)))) IS TRUE)  as count FROM rt1, vt1 ORDER BY CAST(((rt1.c0)-(rt1.c3)) AS BLOB));
SELECT * FROM rt1, vt1 WHERE ((CASE WHEN vt1.c0 THEN rt1.c4 ELSE x'' END IN (CAST(vt1.c1 AS TEXT)))) ORDER BY CAST(((rt1.c0)-(rt1.c3)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt1.c0 THEN rt1.c4 ELSE x'' END IN (CAST(vt1.c1 AS TEXT)))) IS TRUE)  as count FROM rt1, vt1 ORDER BY CAST(((rt1.c0)-(rt1.c3)) AS BLOB));
SELECT * FROM rt1, vt1 WHERE ((CASE WHEN vt1.c0 THEN rt1.c4 ELSE x'' END IN (CAST(vt1.c1 AS TEXT)))) ORDER BY CAST(((rt1.c0)-(rt1.c3)) AS BLOB);
SELECT * FROM rt0, rt1 WHERE (CAST((('j	')%(rt1.c1)) AS BLOB)) ORDER BY ((CASE WHEN rt0.c0 THEN rt1.c4 WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c2 END) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((('j	')%(rt1.c1)) AS BLOB)) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((CASE WHEN rt0.c0 THEN rt1.c4 WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c2 END) IS TRUE)  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE (CAST((('j	')%(rt1.c1)) AS BLOB)) ORDER BY ((CASE WHEN rt0.c0 THEN rt1.c4 WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c2 END) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((('j	')%(rt1.c1)) AS BLOB)) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((CASE WHEN rt0.c0 THEN rt1.c4 WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c2 END) IS TRUE)  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE (CAST((('j	')%(rt1.c1)) AS BLOB)) ORDER BY ((CASE WHEN rt0.c0 THEN rt1.c4 WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c2 END) IS TRUE)  NULLS FIRST;
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((NOT (0xffffffffd862ee9f))) NOT BETWEEN (((rt1.c3)>(rt1.c0))) AND (((0.39251793032221904)+(x'a74d')))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (0xffffffffd862ee9f))) NOT BETWEEN (((rt1.c3)>(rt1.c0))) AND (((0.39251793032221904)+(x'a74d'))))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((NOT (0xffffffffd862ee9f))) NOT BETWEEN (((rt1.c3)>(rt1.c0))) AND (((0.39251793032221904)+(x'a74d')))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (0xffffffffd862ee9f))) NOT BETWEEN (((rt1.c3)>(rt1.c0))) AND (((0.39251793032221904)+(x'a74d'))))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((NOT (0xffffffffd862ee9f))) NOT BETWEEN (((rt1.c3)>(rt1.c0))) AND (((0.39251793032221904)+(x'a74d')))));
SELECT ALL COUNT(*) FROM vt1, rt1, rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))OR(((vt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))OR(((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt1, rt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt1, rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))OR(((vt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))OR(((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt1, rt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt1, rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))OR(((vt1.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))OR(2144659925)))OR(rt0.c1)))AND((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c1))))))AND((+ (rt0.c2)))))AND(CAST(rt0.c2 AS BLOB))))OR(((rt0.c1) ISNULL))))OR((((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c2))))))AND(595706210)));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))OR(2144659925)))OR(rt0.c1)))AND((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c1))))))AND((+ (rt0.c2)))))AND(CAST(rt0.c2 AS BLOB))))OR(((rt0.c1) ISNULL))))OR((((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c2))))))AND(595706210))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))OR(2144659925)))OR(rt0.c1)))AND((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c1))))))AND((+ (rt0.c2)))))AND(CAST(rt0.c2 AS BLOB))))OR(((rt0.c1) ISNULL))))OR((((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c2))))))AND(595706210)));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))OR(2144659925)))OR(rt0.c1)))AND((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c1))))))AND((+ (rt0.c2)))))AND(CAST(rt0.c2 AS BLOB))))OR(((rt0.c1) ISNULL))))OR((((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c2))))))AND(595706210))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))OR(2144659925)))OR(rt0.c1)))AND((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c1))))))AND((+ (rt0.c2)))))AND(CAST(rt0.c2 AS BLOB))))OR(((rt0.c1) ISNULL))))OR((((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c2))))))AND(595706210)));
SELECT ALL * FROM rt0, rt1, vt1 WHERE (CASE ((rt1.c3) NOT BETWEEN (NULL) AND (vt1.c1))  WHEN ((rt1.c4) NOT BETWEEN (rt1.c0) AND (vt1.c0)) THEN rt1.c3 COLLATE BINARY ELSE ((((vt1.c2)AND(rt1.c3)))AND('0.673451180744771')) END) ORDER BY CAST((rt1.c3 IN ()) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c3) NOT BETWEEN (NULL) AND (vt1.c1))  WHEN ((rt1.c4) NOT BETWEEN (rt1.c0) AND (vt1.c0)) THEN rt1.c3 COLLATE BINARY ELSE ((((vt1.c2)AND(rt1.c3)))AND('0.673451180744771')) END) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY CAST((rt1.c3 IN ()) AS TEXT)  NULLS FIRST);
SELECT ALL * FROM rt0, rt1, vt1 WHERE (CASE ((rt1.c3) NOT BETWEEN (NULL) AND (vt1.c1))  WHEN ((rt1.c4) NOT BETWEEN (rt1.c0) AND (vt1.c0)) THEN rt1.c3 COLLATE BINARY ELSE ((((vt1.c2)AND(rt1.c3)))AND('0.673451180744771')) END) ORDER BY CAST((rt1.c3 IN ()) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c3) NOT BETWEEN (NULL) AND (vt1.c1))  WHEN ((rt1.c4) NOT BETWEEN (rt1.c0) AND (vt1.c0)) THEN rt1.c3 COLLATE BINARY ELSE ((((vt1.c2)AND(rt1.c3)))AND('0.673451180744771')) END) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY CAST((rt1.c3 IN ()) AS TEXT)  NULLS FIRST);
SELECT ALL * FROM rt0, rt1, vt1 WHERE (CASE ((rt1.c3) NOT BETWEEN (NULL) AND (vt1.c1))  WHEN ((rt1.c4) NOT BETWEEN (rt1.c0) AND (vt1.c0)) THEN rt1.c3 COLLATE BINARY ELSE ((((vt1.c2)AND(rt1.c3)))AND('0.673451180744771')) END) ORDER BY CAST((rt1.c3 IN ()) AS TEXT)  NULLS FIRST;
SELECT ALL * FROM rt1, rt0 WHERE ((- (DATETIME(rt1.c2, rt0.c2, rt1.c3, rt1.c1, rt1.c2)))) ORDER BY ((rt0.c1 IN (x'b6a0')) IN (CASE WHEN rt0.c1 THEN rt1.c1 ELSE rt1.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (DATETIME(rt1.c2, rt0.c2, rt1.c3, rt1.c1, rt1.c2)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((rt0.c1 IN (x'b6a0')) IN (CASE WHEN rt0.c1 THEN rt1.c1 ELSE rt1.c2 END)) ASC);
SELECT ALL * FROM rt1, rt0 WHERE ((- (DATETIME(rt1.c2, rt0.c2, rt1.c3, rt1.c1, rt1.c2)))) ORDER BY ((rt0.c1 IN (x'b6a0')) IN (CASE WHEN rt0.c1 THEN rt1.c1 ELSE rt1.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (DATETIME(rt1.c2, rt0.c2, rt1.c3, rt1.c1, rt1.c2)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((rt0.c1 IN (x'b6a0')) IN (CASE WHEN rt0.c1 THEN rt1.c1 ELSE rt1.c2 END)) ASC);
SELECT ALL * FROM rt1, rt0 WHERE ((- (DATETIME(rt1.c2, rt0.c2, rt1.c3, rt1.c1, rt1.c2)))) ORDER BY ((rt0.c1 IN (x'b6a0')) IN (CASE WHEN rt0.c1 THEN rt1.c1 ELSE rt1.c2 END)) ASC;
SELECT ALL * FROM rt1 WHERE ((+ ((~ (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((~ (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((+ ((~ (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((~ (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((+ ((~ (rt1.c0)))));
SELECT * FROM rt1, vt1, rt0 WHERE ('') ORDER BY (((vt1.c1)) NOT BETWEEN ((CASE rt1.c2  WHEN vt1.c0 THEN rt1.c3 ELSE rt1.c2 END)) AND (((vt1.c0 IN ()))))  NULLS LAST, json_array_length((rt1.c2 IN (vt1.c2)))  NULLS FIRST, rt0.c1;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY (((vt1.c1)) NOT BETWEEN ((CASE rt1.c2  WHEN vt1.c0 THEN rt1.c3 ELSE rt1.c2 END)) AND (((vt1.c0 IN ()))))  NULLS LAST, json_array_length((rt1.c2 IN (vt1.c2)))  NULLS FIRST, rt0.c1);
SELECT * FROM rt1, vt1, rt0 WHERE ('') ORDER BY (((vt1.c1)) NOT BETWEEN ((CASE rt1.c2  WHEN vt1.c0 THEN rt1.c3 ELSE rt1.c2 END)) AND (((vt1.c0 IN ()))))  NULLS LAST, json_array_length((rt1.c2 IN (vt1.c2)))  NULLS FIRST, rt0.c1;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY (((vt1.c1)) NOT BETWEEN ((CASE rt1.c2  WHEN vt1.c0 THEN rt1.c3 ELSE rt1.c2 END)) AND (((vt1.c0 IN ()))))  NULLS LAST, json_array_length((rt1.c2 IN (vt1.c2)))  NULLS FIRST, rt0.c1);
SELECT * FROM rt1, vt1, rt0 WHERE ('') ORDER BY (((vt1.c1)) NOT BETWEEN ((CASE rt1.c2  WHEN vt1.c0 THEN rt1.c3 ELSE rt1.c2 END)) AND (((vt1.c0 IN ()))))  NULLS LAST, json_array_length((rt1.c2 IN (vt1.c2)))  NULLS FIRST, rt0.c1;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (rt0.c2) ORDER BY (((- (rt0.c1))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((- (rt0.c1))) NOTNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (rt0.c2) ORDER BY (((- (rt0.c1))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((- (rt0.c1))) NOTNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (rt0.c2) ORDER BY (((- (rt0.c1))) NOTNULL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (CASE WHEN vt1.c2 THEN vt1.c2 END))) ORDER BY (~ (vt1.c1)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN vt1.c2 THEN vt1.c2 END))) IS TRUE)  as count FROM vt1 ORDER BY (~ (vt1.c1)) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (CASE WHEN vt1.c2 THEN vt1.c2 END))) ORDER BY (~ (vt1.c1)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN vt1.c2 THEN vt1.c2 END))) IS TRUE)  as count FROM vt1 ORDER BY (~ (vt1.c1)) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (CASE WHEN vt1.c2 THEN vt1.c2 END))) ORDER BY (~ (vt1.c1)) COLLATE NOCASE DESC;
SELECT COUNT(*) FROM rt1 WHERE (((NULL) BETWEEN (((((rt1.c4)AND(rt1.c1)))AND(rt1.c1))) AND (CASE rt1.c2  WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c2 END))) ORDER BY ((((rt1.c0)AND(rt1.c3)))GLOB(((rt1.c0)LIKE(rt1.c3)))) ASC  NULLS FIRST, (~ (rt1.c3)) DESC, CAST((~ (NULL)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN (((((rt1.c4)AND(rt1.c1)))AND(rt1.c1))) AND (CASE rt1.c2  WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0)AND(rt1.c3)))GLOB(((rt1.c0)LIKE(rt1.c3)))) ASC  NULLS FIRST, (~ (rt1.c3)) DESC, CAST((~ (NULL)) AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((NULL) BETWEEN (((((rt1.c4)AND(rt1.c1)))AND(rt1.c1))) AND (CASE rt1.c2  WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c2 END))) ORDER BY ((((rt1.c0)AND(rt1.c3)))GLOB(((rt1.c0)LIKE(rt1.c3)))) ASC  NULLS FIRST, (~ (rt1.c3)) DESC, CAST((~ (NULL)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN (((((rt1.c4)AND(rt1.c1)))AND(rt1.c1))) AND (CASE rt1.c2  WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0)AND(rt1.c3)))GLOB(((rt1.c0)LIKE(rt1.c3)))) ASC  NULLS FIRST, (~ (rt1.c3)) DESC, CAST((~ (NULL)) AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((NULL) BETWEEN (((((rt1.c4)AND(rt1.c1)))AND(rt1.c1))) AND (CASE rt1.c2  WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c2 END))) ORDER BY ((((rt1.c0)AND(rt1.c3)))GLOB(((rt1.c0)LIKE(rt1.c3)))) ASC  NULLS FIRST, (~ (rt1.c3)) DESC, CAST((~ (NULL)) AS BLOB)  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1 IN (vt1.c2, vt1.c0))) IS FALSE)) ORDER BY CASE WHEN (vt1.c0 IN ()) THEN (vt1.c0 IN ()) ELSE NULL END  NULLS FIRST, vt1.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1 IN (vt1.c2, vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN (vt1.c0 IN ()) THEN (vt1.c0 IN ()) ELSE NULL END  NULLS FIRST, vt1.c2 DESC);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1 IN (vt1.c2, vt1.c0))) IS FALSE)) ORDER BY CASE WHEN (vt1.c0 IN ()) THEN (vt1.c0 IN ()) ELSE NULL END  NULLS FIRST, vt1.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1 IN (vt1.c2, vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN (vt1.c0 IN ()) THEN (vt1.c0 IN ()) ELSE NULL END  NULLS FIRST, vt1.c2 DESC);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1 IN (vt1.c2, vt1.c0))) IS FALSE)) ORDER BY CASE WHEN (vt1.c0 IN ()) THEN (vt1.c0 IN ()) ELSE NULL END  NULLS FIRST, vt1.c2 DESC;
SELECT ALL COUNT(*) FROM vt1, rt1 LEFT OUTER JOIN rt0 ON (((NOT (vt1.c1))) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ((rt0.c0 IN ()))) WHERE (((((((((0.547236757060485)OR((rt0.c1 IN ()))))AND(((rt0.c2)AND(rt0.c0)))))AND(((x'e409') NOT NULL))))AND(CASE WHEN rt0.c1 THEN vt1.c1 ELSE '1458004643' END))) ORDER BY HEX(((rt1.c1)IS NOT(vt1.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((0.547236757060485)OR((rt0.c1 IN ()))))AND(((rt0.c2)AND(rt0.c0)))))AND(((x'e409') NOT NULL))))AND(CASE WHEN rt0.c1 THEN vt1.c1 ELSE '1458004643' END))) IS TRUE)  as count FROM vt1, rt1 LEFT OUTER JOIN rt0 ON (((NOT (vt1.c1))) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ((rt0.c0 IN ()))) ORDER BY HEX(((rt1.c1)IS NOT(vt1.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt1 LEFT OUTER JOIN rt0 ON (((NOT (vt1.c1))) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ((rt0.c0 IN ()))) WHERE (((((((((0.547236757060485)OR((rt0.c1 IN ()))))AND(((rt0.c2)AND(rt0.c0)))))AND(((x'e409') NOT NULL))))AND(CASE WHEN rt0.c1 THEN vt1.c1 ELSE '1458004643' END))) ORDER BY HEX(((rt1.c1)IS NOT(vt1.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((0.547236757060485)OR((rt0.c1 IN ()))))AND(((rt0.c2)AND(rt0.c0)))))AND(((x'e409') NOT NULL))))AND(CASE WHEN rt0.c1 THEN vt1.c1 ELSE '1458004643' END))) IS TRUE)  as count FROM vt1, rt1 LEFT OUTER JOIN rt0 ON (((NOT (vt1.c1))) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ((rt0.c0 IN ()))) ORDER BY HEX(((rt1.c1)IS NOT(vt1.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt1 LEFT OUTER JOIN rt0 ON (((NOT (vt1.c1))) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ((rt0.c0 IN ()))) WHERE (((((((((0.547236757060485)OR((rt0.c1 IN ()))))AND(((rt0.c2)AND(rt0.c0)))))AND(((x'e409') NOT NULL))))AND(CASE WHEN rt0.c1 THEN vt1.c1 ELSE '1458004643' END))) ORDER BY HEX(((rt1.c1)IS NOT(vt1.c0))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((LTRIM(vt1.c2))>>(((vt1.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((LTRIM(vt1.c2))>>(((vt1.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((LTRIM(vt1.c2))>>(((vt1.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((LTRIM(vt1.c2))>>(((vt1.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((LTRIM(vt1.c2))>>(((vt1.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT COUNT(*) FROM rt0, rt1 FULL OUTER JOIN vt1 ON (- ((('b!GRyM m')IS(rt1.c4)))) WHERE (((((rt1.c3)IS(vt1.c2)))||((((rt1.c0, 6.648865527777437E-4, rt0.c0))>((0.8378146333857326, rt0.c2, rt1.c0)))))) ORDER BY vt1.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)IS(vt1.c2)))||((((rt1.c0, 6.648865527777437E-4, rt0.c0))>((0.8378146333857326, rt0.c2, rt1.c0)))))) IS TRUE)  as count FROM rt0, rt1 FULL OUTER JOIN vt1 ON (- ((('b!GRyM m')IS(rt1.c4)))) ORDER BY vt1.c1 DESC);
SELECT COUNT(*) FROM rt0, rt1 FULL OUTER JOIN vt1 ON (- ((('b!GRyM m')IS(rt1.c4)))) WHERE (((((rt1.c3)IS(vt1.c2)))||((((rt1.c0, 6.648865527777437E-4, rt0.c0))>((0.8378146333857326, rt0.c2, rt1.c0)))))) ORDER BY vt1.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)IS(vt1.c2)))||((((rt1.c0, 6.648865527777437E-4, rt0.c0))>((0.8378146333857326, rt0.c2, rt1.c0)))))) IS TRUE)  as count FROM rt0, rt1 FULL OUTER JOIN vt1 ON (- ((('b!GRyM m')IS(rt1.c4)))) ORDER BY vt1.c1 DESC);
SELECT COUNT(*) FROM rt0, rt1 FULL OUTER JOIN vt1 ON (- ((('b!GRyM m')IS(rt1.c4)))) WHERE (((((rt1.c3)IS(vt1.c2)))||((((rt1.c0, 6.648865527777437E-4, rt0.c0))>((0.8378146333857326, rt0.c2, rt1.c0)))))) ORDER BY vt1.c1 DESC;
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE ('-1686584158');
SELECT SUM(count) FROM (SELECT (('-1686584158') IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE ('-1686584158');
SELECT SUM(count) FROM (SELECT (('-1686584158') IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE ('-1686584158');
SELECT ALL * FROM rt1, vt1, rt0 WHERE (LIKELIHOOD((((vt1.c2)) NOT BETWEEN ((0.0014400603899498154)) AND ((vt1.c1))), 0.195090678379498));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((((vt1.c2)) NOT BETWEEN ((0.0014400603899498154)) AND ((vt1.c1))), 0.195090678379498)) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL * FROM rt1, vt1, rt0 WHERE (LIKELIHOOD((((vt1.c2)) NOT BETWEEN ((0.0014400603899498154)) AND ((vt1.c1))), 0.195090678379498));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((((vt1.c2)) NOT BETWEEN ((0.0014400603899498154)) AND ((vt1.c1))), 0.195090678379498)) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL * FROM rt1, vt1, rt0 WHERE (LIKELIHOOD((((vt1.c2)) NOT BETWEEN ((0.0014400603899498154)) AND ((vt1.c1))), 0.195090678379498));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c1 IN ())) BETWEEN (x'') AND (CASE WHEN rt0.c0 THEN vt1.c2 END)) WHERE (((HEX(vt1.c2)) NOTNULL)) ORDER BY CASE WHEN (rt0.c2 IN ()) THEN x'' ELSE (rt0.c0 IN ()) END  NULLS FIRST, LTRIM((+ (vt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((HEX(vt1.c2)) NOTNULL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c1 IN ())) BETWEEN (x'') AND (CASE WHEN rt0.c0 THEN vt1.c2 END)) ORDER BY CASE WHEN (rt0.c2 IN ()) THEN x'' ELSE (rt0.c0 IN ()) END  NULLS FIRST, LTRIM((+ (vt1.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c1 IN ())) BETWEEN (x'') AND (CASE WHEN rt0.c0 THEN vt1.c2 END)) WHERE (((HEX(vt1.c2)) NOTNULL)) ORDER BY CASE WHEN (rt0.c2 IN ()) THEN x'' ELSE (rt0.c0 IN ()) END  NULLS FIRST, LTRIM((+ (vt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((HEX(vt1.c2)) NOTNULL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c1 IN ())) BETWEEN (x'') AND (CASE WHEN rt0.c0 THEN vt1.c2 END)) ORDER BY CASE WHEN (rt0.c2 IN ()) THEN x'' ELSE (rt0.c0 IN ()) END  NULLS FIRST, LTRIM((+ (vt1.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c1 IN ())) BETWEEN (x'') AND (CASE WHEN rt0.c0 THEN vt1.c2 END)) WHERE (((HEX(vt1.c2)) NOTNULL)) ORDER BY CASE WHEN (rt0.c2 IN ()) THEN x'' ELSE (rt0.c0 IN ()) END  NULLS FIRST, LTRIM((+ (vt1.c0)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN ((('-2067776795') NOT NULL)) AND ((((rt0.c0))>((rt0.c0)))))) ORDER BY load_extension(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END, ((rt0.c2)LIKE(rt0.c2))) ASC  NULLS FIRST, ((((rt0.c2)||(rt0.c0)))*(CAST(rt0.c2 AS REAL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN ((('-2067776795') NOT NULL)) AND ((((rt0.c0))>((rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY load_extension(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END, ((rt0.c2)LIKE(rt0.c2))) ASC  NULLS FIRST, ((((rt0.c2)||(rt0.c0)))*(CAST(rt0.c2 AS REAL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN ((('-2067776795') NOT NULL)) AND ((((rt0.c0))>((rt0.c0)))))) ORDER BY load_extension(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END, ((rt0.c2)LIKE(rt0.c2))) ASC  NULLS FIRST, ((((rt0.c2)||(rt0.c0)))*(CAST(rt0.c2 AS REAL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN ((('-2067776795') NOT NULL)) AND ((((rt0.c0))>((rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY load_extension(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END, ((rt0.c2)LIKE(rt0.c2))) ASC  NULLS FIRST, ((((rt0.c2)||(rt0.c0)))*(CAST(rt0.c2 AS REAL))) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((vt1.c0) NOT NULL)) BETWEEN (((((vt1.c2)OR(vt1.c2)))OR(vt1.c0))) AND (((vt1.c2) IS FALSE)))) ORDER BY ((((CAST(vt1.c0 AS REAL))AND(CAST(NULL AS INTEGER))))AND(CASE WHEN vt1.c2 THEN vt1.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT NULL)) BETWEEN (((((vt1.c2)OR(vt1.c2)))OR(vt1.c0))) AND (((vt1.c2) IS FALSE)))) IS TRUE)  as count FROM vt1 ORDER BY ((((CAST(vt1.c0 AS REAL))AND(CAST(NULL AS INTEGER))))AND(CASE WHEN vt1.c2 THEN vt1.c2 END)));
SELECT * FROM vt1 WHERE (((((vt1.c0) NOT NULL)) BETWEEN (((((vt1.c2)OR(vt1.c2)))OR(vt1.c0))) AND (((vt1.c2) IS FALSE)))) ORDER BY ((((CAST(vt1.c0 AS REAL))AND(CAST(NULL AS INTEGER))))AND(CASE WHEN vt1.c2 THEN vt1.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT NULL)) BETWEEN (((((vt1.c2)OR(vt1.c2)))OR(vt1.c0))) AND (((vt1.c2) IS FALSE)))) IS TRUE)  as count FROM vt1 ORDER BY ((((CAST(vt1.c0 AS REAL))AND(CAST(NULL AS INTEGER))))AND(CASE WHEN vt1.c2 THEN vt1.c2 END)));
SELECT * FROM vt1 WHERE (((((vt1.c0) NOT NULL)) BETWEEN (((((vt1.c2)OR(vt1.c2)))OR(vt1.c0))) AND (((vt1.c2) IS FALSE)))) ORDER BY ((((CAST(vt1.c0 AS REAL))AND(CAST(NULL AS INTEGER))))AND(CASE WHEN vt1.c2 THEN vt1.c2 END));
SELECT * FROM rt1 WHERE (((((rt1.c2)OR(rt1.c1)))AND(rt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)OR(rt1.c1)))AND(rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c2)OR(rt1.c1)))AND(rt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)OR(rt1.c1)))AND(rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c2)OR(rt1.c1)))AND(rt1.c0)) COLLATE BINARY);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT * FROM rt0, vt1 WHERE (-87395204) ORDER BY ((((rt0.c0) BETWEEN (vt1.c2) AND (vt1.c1))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((-87395204) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c0) BETWEEN (vt1.c2) AND (vt1.c1))) ISNULL)  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (-87395204) ORDER BY ((((rt0.c0) BETWEEN (vt1.c2) AND (vt1.c1))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((-87395204) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c0) BETWEEN (vt1.c2) AND (vt1.c1))) ISNULL)  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (-87395204) ORDER BY ((((rt0.c0) BETWEEN (vt1.c2) AND (vt1.c1))) ISNULL)  NULLS LAST;
SELECT * FROM rt1 WHERE (((LOWER(DISTINCT rt1.c3)) BETWEEN (rt1.c0 COLLATE RTRIM) AND (((rt1.c4) NOTNULL)))) ORDER BY (((rt1.c2 IN ())) BETWEEN (((rt1.c4) NOT BETWEEN (rt1.c0) AND (rt1.c4))) AND (NULL));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(DISTINCT rt1.c3)) BETWEEN (rt1.c0 COLLATE RTRIM) AND (((rt1.c4) NOTNULL)))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c2 IN ())) BETWEEN (((rt1.c4) NOT BETWEEN (rt1.c0) AND (rt1.c4))) AND (NULL)));
SELECT * FROM rt1 WHERE (((LOWER(DISTINCT rt1.c3)) BETWEEN (rt1.c0 COLLATE RTRIM) AND (((rt1.c4) NOTNULL)))) ORDER BY (((rt1.c2 IN ())) BETWEEN (((rt1.c4) NOT BETWEEN (rt1.c0) AND (rt1.c4))) AND (NULL));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(DISTINCT rt1.c3)) BETWEEN (rt1.c0 COLLATE RTRIM) AND (((rt1.c4) NOTNULL)))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c2 IN ())) BETWEEN (((rt1.c4) NOT BETWEEN (rt1.c0) AND (rt1.c4))) AND (NULL)));
SELECT * FROM rt1 WHERE (((LOWER(DISTINCT rt1.c3)) BETWEEN (rt1.c0 COLLATE RTRIM) AND (((rt1.c4) NOTNULL)))) ORDER BY (((rt1.c2 IN ())) BETWEEN (((rt1.c4) NOT BETWEEN (rt1.c0) AND (rt1.c4))) AND (NULL));
SELECT * FROM rt1, rt0 NATURAL JOIN vt1 WHERE (((((rt0.c0)!=(vt1.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)!=(vt1.c2))) ISNULL)) IS TRUE)  as count FROM rt1, rt0 NATURAL JOIN vt1);
SELECT * FROM rt1, rt0 NATURAL JOIN vt1 WHERE (((((rt0.c0)!=(vt1.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)!=(vt1.c2))) ISNULL)) IS TRUE)  as count FROM rt1, rt0 NATURAL JOIN vt1);
SELECT * FROM rt1, rt0 NATURAL JOIN vt1 WHERE (((((rt0.c0)!=(vt1.c2))) ISNULL));
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))) AND (CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))) AND (CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))) AND (CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))) AND (CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))) AND (CAST(rt0.c0 AS REAL))));
SELECT * FROM rt1 WHERE (CAST(CASE rt1.c1  WHEN rt1.c4 THEN rt1.c0 END AS NUMERIC)) ORDER BY (((CASE WHEN rt1.c2 THEN rt1.c3 END))<(((((rt1.c4))>((rt1.c1)))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt1.c1  WHEN rt1.c4 THEN rt1.c0 END AS NUMERIC)) IS TRUE)  as count FROM rt1 ORDER BY (((CASE WHEN rt1.c2 THEN rt1.c3 END))<(((((rt1.c4))>((rt1.c1)))))) DESC  NULLS FIRST);
SELECT * FROM rt1 WHERE (CAST(CASE rt1.c1  WHEN rt1.c4 THEN rt1.c0 END AS NUMERIC)) ORDER BY (((CASE WHEN rt1.c2 THEN rt1.c3 END))<(((((rt1.c4))>((rt1.c1)))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt1.c1  WHEN rt1.c4 THEN rt1.c0 END AS NUMERIC)) IS TRUE)  as count FROM rt1 ORDER BY (((CASE WHEN rt1.c2 THEN rt1.c3 END))<(((((rt1.c4))>((rt1.c1)))))) DESC  NULLS FIRST);
SELECT * FROM rt1 WHERE (CAST(CASE rt1.c1  WHEN rt1.c4 THEN rt1.c0 END AS NUMERIC)) ORDER BY (((CASE WHEN rt1.c2 THEN rt1.c3 END))<(((((rt1.c4))>((rt1.c1)))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 NATURAL JOIN vt1 WHERE (COALESCE(((rt1.c1) ISNULL), ((rt1.c2) IS FALSE))) ORDER BY rt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE(((rt1.c1) ISNULL), ((rt1.c2) IS FALSE))) IS TRUE)  as count FROM rt1 NATURAL JOIN vt1 ORDER BY rt1.c0  NULLS LAST);
SELECT COUNT(*) FROM rt1 NATURAL JOIN vt1 WHERE (COALESCE(((rt1.c1) ISNULL), ((rt1.c2) IS FALSE))) ORDER BY rt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE(((rt1.c1) ISNULL), ((rt1.c2) IS FALSE))) IS TRUE)  as count FROM rt1 NATURAL JOIN vt1 ORDER BY rt1.c0  NULLS LAST);
SELECT COUNT(*) FROM rt1 NATURAL JOIN vt1 WHERE (COALESCE(((rt1.c1) ISNULL), ((rt1.c2) IS FALSE))) ORDER BY rt1.c0  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (((((rt1.c4)OR(rt1.c1)))OR(rt1.c0)) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((rt1.c4)OR(rt1.c1)))OR(rt1.c0)) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c4)OR(rt1.c1)))OR(rt1.c0)) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((rt1.c4)OR(rt1.c1)))OR(rt1.c0)) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c4)OR(rt1.c1)))OR(rt1.c0)) COLLATE RTRIM COLLATE BINARY);
SELECT * FROM rt0, rt1, vt1 WHERE ('1e500') ORDER BY ((CAST(vt1.c1 AS TEXT))GLOB(rt0.c0));
SELECT SUM(count) FROM (SELECT ALL (('1e500') IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY ((CAST(vt1.c1 AS TEXT))GLOB(rt0.c0)));
SELECT * FROM rt0, rt1, vt1 WHERE ('1e500') ORDER BY ((CAST(vt1.c1 AS TEXT))GLOB(rt0.c0));
SELECT SUM(count) FROM (SELECT ALL (('1e500') IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY ((CAST(vt1.c1 AS TEXT))GLOB(rt0.c0)));
SELECT * FROM rt0, rt1, vt1 WHERE ('1e500') ORDER BY ((CAST(vt1.c1 AS TEXT))GLOB(rt0.c0));
SELECT * FROM rt1, rt0, vt1 WHERE ((((((((('' COLLATE BINARY)OR(CASE WHEN rt1.c4 THEN rt0.c0 END)))OR(vt1.c2 COLLATE RTRIM)))OR(((rt0.c1) IS TRUE))))AND(LTRIM(rt0.c1)))) ORDER BY ((((((((vt1.c1)OR(rt1.c2)))OR(rt0.c2)))OR(rt1.c3)))OR(rt0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((((((((('' COLLATE BINARY)OR(CASE WHEN rt1.c4 THEN rt0.c0 END)))OR(vt1.c2 COLLATE RTRIM)))OR(((rt0.c1) IS TRUE))))AND(LTRIM(rt0.c1)))) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY ((((((((vt1.c1)OR(rt1.c2)))OR(rt0.c2)))OR(rt1.c3)))OR(rt0.c0)) COLLATE NOCASE ASC);
SELECT * FROM rt1, rt0, vt1 WHERE ((((((((('' COLLATE BINARY)OR(CASE WHEN rt1.c4 THEN rt0.c0 END)))OR(vt1.c2 COLLATE RTRIM)))OR(((rt0.c1) IS TRUE))))AND(LTRIM(rt0.c1)))) ORDER BY ((((((((vt1.c1)OR(rt1.c2)))OR(rt0.c2)))OR(rt1.c3)))OR(rt0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((((((((('' COLLATE BINARY)OR(CASE WHEN rt1.c4 THEN rt0.c0 END)))OR(vt1.c2 COLLATE RTRIM)))OR(((rt0.c1) IS TRUE))))AND(LTRIM(rt0.c1)))) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY ((((((((vt1.c1)OR(rt1.c2)))OR(rt0.c2)))OR(rt1.c3)))OR(rt0.c0)) COLLATE NOCASE ASC);
SELECT * FROM rt1, rt0, vt1 WHERE ((((((((('' COLLATE BINARY)OR(CASE WHEN rt1.c4 THEN rt0.c0 END)))OR(vt1.c2 COLLATE RTRIM)))OR(((rt0.c1) IS TRUE))))AND(LTRIM(rt0.c1)))) ORDER BY ((((((((vt1.c1)OR(rt1.c2)))OR(rt0.c2)))OR(rt1.c3)))OR(rt0.c0)) COLLATE NOCASE ASC;
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE ((vt1.c2 IN ())) ORDER BY ((IFNULL(DISTINCT rt1.c1, vt1.c1))*(((vt1.c0)|(vt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt1.c2 IN ())) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY ((IFNULL(DISTINCT rt1.c1, vt1.c1))*(((vt1.c0)|(vt1.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE ((vt1.c2 IN ())) ORDER BY ((IFNULL(DISTINCT rt1.c1, vt1.c1))*(((vt1.c0)|(vt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt1.c2 IN ())) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY ((IFNULL(DISTINCT rt1.c1, vt1.c1))*(((vt1.c0)|(vt1.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE ((vt1.c2 IN ())) ORDER BY ((IFNULL(DISTINCT rt1.c1, vt1.c1))*(((vt1.c0)|(vt1.c1))))  NULLS FIRST;
SELECT ALL * FROM rt1, vt1, rt0 WHERE (CAST((+ (rt0.c1)) AS INTEGER)) ORDER BY CAST(((0xfffffffff239e7d5) NOT NULL) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((+ (rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY CAST(((0xfffffffff239e7d5) NOT NULL) AS REAL) ASC);
SELECT ALL * FROM rt1, vt1, rt0 WHERE (CAST((+ (rt0.c1)) AS INTEGER)) ORDER BY CAST(((0xfffffffff239e7d5) NOT NULL) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((+ (rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY CAST(((0xfffffffff239e7d5) NOT NULL) AS REAL) ASC);
SELECT ALL * FROM rt1, vt1, rt0 WHERE (CAST((+ (rt0.c1)) AS INTEGER)) ORDER BY CAST(((0xfffffffff239e7d5) NOT NULL) AS REAL) ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE (((CAST(rt1.c4 AS NUMERIC)) NOT BETWEEN (((rt1.c2) NOT NULL)) AND (rt1.c3 COLLATE BINARY))) ORDER BY ((rt1.c0) NOT BETWEEN (((rt1.c4) IS FALSE)) AND (((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c4)))) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c4 AS NUMERIC)) NOT BETWEEN (((rt1.c2) NOT NULL)) AND (rt1.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c0) NOT BETWEEN (((rt1.c4) IS FALSE)) AND (((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c4)))) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((CAST(rt1.c4 AS NUMERIC)) NOT BETWEEN (((rt1.c2) NOT NULL)) AND (rt1.c3 COLLATE BINARY))) ORDER BY ((rt1.c0) NOT BETWEEN (((rt1.c4) IS FALSE)) AND (((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c4)))) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c4 AS NUMERIC)) NOT BETWEEN (((rt1.c2) NOT NULL)) AND (rt1.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c0) NOT BETWEEN (((rt1.c4) IS FALSE)) AND (((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c4)))) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((CAST(rt1.c4 AS NUMERIC)) NOT BETWEEN (((rt1.c2) NOT NULL)) AND (rt1.c3 COLLATE BINARY))) ORDER BY ((rt1.c0) NOT BETWEEN (((rt1.c4) IS FALSE)) AND (((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c4)))) ASC;
SELECT * FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((((rt0.c0)LIKE(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((((rt0.c0)LIKE(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((((rt0.c0)LIKE(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((((rt0.c0)LIKE(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((((rt0.c0)LIKE(rt0.c1))))));
SELECT * FROM rt1 WHERE ((((((- (rt1.c1)))AND(((rt1.c1)-(rt1.c3)))))AND(((rt1.c0)%(rt1.c0))))) ORDER BY CASE WHEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)) THEN ((rt1.c0)>=(rt1.c2)) ELSE (~ (rt1.c1)) END;
SELECT SUM(count) FROM (SELECT (((((((- (rt1.c1)))AND(((rt1.c1)-(rt1.c3)))))AND(((rt1.c0)%(rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)) THEN ((rt1.c0)>=(rt1.c2)) ELSE (~ (rt1.c1)) END);
SELECT * FROM rt1 WHERE ((((((- (rt1.c1)))AND(((rt1.c1)-(rt1.c3)))))AND(((rt1.c0)%(rt1.c0))))) ORDER BY CASE WHEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)) THEN ((rt1.c0)>=(rt1.c2)) ELSE (~ (rt1.c1)) END;
SELECT SUM(count) FROM (SELECT (((((((- (rt1.c1)))AND(((rt1.c1)-(rt1.c3)))))AND(((rt1.c0)%(rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)) THEN ((rt1.c0)>=(rt1.c2)) ELSE (~ (rt1.c1)) END);
SELECT * FROM rt1 WHERE ((((((- (rt1.c1)))AND(((rt1.c1)-(rt1.c3)))))AND(((rt1.c0)%(rt1.c0))))) ORDER BY CASE WHEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)) THEN ((rt1.c0)>=(rt1.c2)) ELSE (~ (rt1.c1)) END;
SELECT ALL COUNT(*) FROM rt0 WHERE (((TRIM(rt0.c2, rt0.c0)) BETWEEN ((((NULL, rt0.c2, 'n{')) BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c2)))) AND (((rt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((TRIM(rt0.c2, rt0.c0)) BETWEEN ((((NULL, rt0.c2, 'n{')) BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c2)))) AND (((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((TRIM(rt0.c2, rt0.c0)) BETWEEN ((((NULL, rt0.c2, 'n{')) BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c2)))) AND (((rt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((TRIM(rt0.c2, rt0.c0)) BETWEEN ((((NULL, rt0.c2, 'n{')) BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c2)))) AND (((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((TRIM(rt0.c2, rt0.c0)) BETWEEN ((((NULL, rt0.c2, 'n{')) BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c2)))) AND (((rt0.c1) NOTNULL))));
SELECT COUNT(*) FROM rt0 WHERE ('0.4969553259993459') ORDER BY (CASE WHEN '-787295731' THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN NULL THEN rt0.c1 END IN ((rt0.c1 IN (rt0.c0, x'')))) ASC;
SELECT SUM(count) FROM (SELECT (('0.4969553259993459') IS TRUE)  as count FROM rt0 ORDER BY (CASE WHEN '-787295731' THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN NULL THEN rt0.c1 END IN ((rt0.c1 IN (rt0.c0, x'')))) ASC);
SELECT COUNT(*) FROM rt0 WHERE ('0.4969553259993459') ORDER BY (CASE WHEN '-787295731' THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN NULL THEN rt0.c1 END IN ((rt0.c1 IN (rt0.c0, x'')))) ASC;
SELECT SUM(count) FROM (SELECT (('0.4969553259993459') IS TRUE)  as count FROM rt0 ORDER BY (CASE WHEN '-787295731' THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN NULL THEN rt0.c1 END IN ((rt0.c1 IN (rt0.c0, x'')))) ASC);
SELECT COUNT(*) FROM rt0 WHERE ('0.4969553259993459') ORDER BY (CASE WHEN '-787295731' THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN NULL THEN rt0.c1 END IN ((rt0.c1 IN (rt0.c0, x'')))) ASC;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((rt0.c2)GLOB(vt1.c2)) COLLATE RTRIM) ORDER BY NULL COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)GLOB(vt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0 ORDER BY NULL COLLATE BINARY DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((rt0.c2)GLOB(vt1.c2)) COLLATE RTRIM) ORDER BY NULL COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)GLOB(vt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0 ORDER BY NULL COLLATE BINARY DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((rt0.c2)GLOB(vt1.c2)) COLLATE RTRIM) ORDER BY NULL COLLATE BINARY DESC  NULLS LAST;
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON LIKELY(SQLITE_VERSION()) INNER JOIN vt1 ON ((CASE WHEN vt1.c2 THEN rt0.c0 END) NOT NULL) WHERE ((((vt1.c0)) BETWEEN ((((rt0.c1)IS(rt0.c2)))) AND ((((vt1.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((((rt0.c1)IS(rt0.c2)))) AND ((((vt1.c0) IS TRUE))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON LIKELY(SQLITE_VERSION()) INNER JOIN vt1 ON ((CASE WHEN vt1.c2 THEN rt0.c0 END) NOT NULL));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON LIKELY(SQLITE_VERSION()) INNER JOIN vt1 ON ((CASE WHEN vt1.c2 THEN rt0.c0 END) NOT NULL) WHERE ((((vt1.c0)) BETWEEN ((((rt0.c1)IS(rt0.c2)))) AND ((((vt1.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((((rt0.c1)IS(rt0.c2)))) AND ((((vt1.c0) IS TRUE))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON LIKELY(SQLITE_VERSION()) INNER JOIN vt1 ON ((CASE WHEN vt1.c2 THEN rt0.c0 END) NOT NULL));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON LIKELY(SQLITE_VERSION()) INNER JOIN vt1 ON ((CASE WHEN vt1.c2 THEN rt0.c0 END) NOT NULL) WHERE ((((vt1.c0)) BETWEEN ((((rt0.c1)IS(rt0.c2)))) AND ((((vt1.c0) IS TRUE)))));
SELECT * FROM vt1, rt1 WHERE (((((((rt1.c2) NOT NULL))OR(((rt1.c1) BETWEEN (x'') AND (vt1.c1)))))AND(((((vt1.c0)OR(rt1.c4)))AND(vt1.c2))))) ORDER BY (((rt1.c4)) BETWEEN ((((vt1.c1)&(rt1.c4)))) AND ((((((rt1.c4)OR(rt1.c3)))OR('-1332233773'))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2) NOT NULL))OR(((rt1.c1) BETWEEN (x'') AND (vt1.c1)))))AND(((((vt1.c0)OR(rt1.c4)))AND(vt1.c2))))) IS TRUE)  as count FROM vt1, rt1 ORDER BY (((rt1.c4)) BETWEEN ((((vt1.c1)&(rt1.c4)))) AND ((((((rt1.c4)OR(rt1.c3)))OR('-1332233773'))))) DESC  NULLS LAST);
SELECT * FROM vt1, rt1 WHERE (((((((rt1.c2) NOT NULL))OR(((rt1.c1) BETWEEN (x'') AND (vt1.c1)))))AND(((((vt1.c0)OR(rt1.c4)))AND(vt1.c2))))) ORDER BY (((rt1.c4)) BETWEEN ((((vt1.c1)&(rt1.c4)))) AND ((((((rt1.c4)OR(rt1.c3)))OR('-1332233773'))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2) NOT NULL))OR(((rt1.c1) BETWEEN (x'') AND (vt1.c1)))))AND(((((vt1.c0)OR(rt1.c4)))AND(vt1.c2))))) IS TRUE)  as count FROM vt1, rt1 ORDER BY (((rt1.c4)) BETWEEN ((((vt1.c1)&(rt1.c4)))) AND ((((((rt1.c4)OR(rt1.c3)))OR('-1332233773'))))) DESC  NULLS LAST);
SELECT * FROM vt1, rt1 WHERE (((((((rt1.c2) NOT NULL))OR(((rt1.c1) BETWEEN (x'') AND (vt1.c1)))))AND(((((vt1.c0)OR(rt1.c4)))AND(vt1.c2))))) ORDER BY (((rt1.c4)) BETWEEN ((((vt1.c1)&(rt1.c4)))) AND ((((((rt1.c4)OR(rt1.c3)))OR('-1332233773'))))) DESC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (IFNULL(DISTINCT ((vt1.c0)GLOB(vt1.c0)), IFNULL(vt1.c2, vt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((vt1.c0)GLOB(vt1.c0)), IFNULL(vt1.c2, vt1.c2))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (IFNULL(DISTINCT ((vt1.c0)GLOB(vt1.c0)), IFNULL(vt1.c2, vt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((vt1.c0)GLOB(vt1.c0)), IFNULL(vt1.c2, vt1.c2))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (IFNULL(DISTINCT ((vt1.c0)GLOB(vt1.c0)), IFNULL(vt1.c2, vt1.c2)));
SELECT * FROM rt0 WHERE (CASE ((rt0.c0) IS FALSE)  WHEN CAST(rt0.c1 AS INTEGER) THEN (rt0.c1 IN ()) ELSE ((rt0.c2)>=(rt0.c0)) END) ORDER BY LIKELY(DISTINCT (((rt0.c2)) BETWEEN ((rt0.c1)) AND (('%H')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0) IS FALSE)  WHEN CAST(rt0.c1 AS INTEGER) THEN (rt0.c1 IN ()) ELSE ((rt0.c2)>=(rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY LIKELY(DISTINCT (((rt0.c2)) BETWEEN ((rt0.c1)) AND (('%H')))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (CASE ((rt0.c0) IS FALSE)  WHEN CAST(rt0.c1 AS INTEGER) THEN (rt0.c1 IN ()) ELSE ((rt0.c2)>=(rt0.c0)) END) ORDER BY LIKELY(DISTINCT (((rt0.c2)) BETWEEN ((rt0.c1)) AND (('%H')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0) IS FALSE)  WHEN CAST(rt0.c1 AS INTEGER) THEN (rt0.c1 IN ()) ELSE ((rt0.c2)>=(rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY LIKELY(DISTINCT (((rt0.c2)) BETWEEN ((rt0.c1)) AND (('%H')))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (CASE ((rt0.c0) IS FALSE)  WHEN CAST(rt0.c1 AS INTEGER) THEN (rt0.c1 IN ()) ELSE ((rt0.c2)>=(rt0.c0)) END) ORDER BY LIKELY(DISTINCT (((rt0.c2)) BETWEEN ((rt0.c1)) AND (('%H')))) DESC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((((441885539)IS NOT(vt1.c2)) IN ((((vt1.c2))=((vt1.c1))), (NOT (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((441885539)IS NOT(vt1.c2)) IN ((((vt1.c2))=((vt1.c1))), (NOT (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((441885539)IS NOT(vt1.c2)) IN ((((vt1.c2))=((vt1.c1))), (NOT (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((441885539)IS NOT(vt1.c2)) IN ((((vt1.c2))=((vt1.c1))), (NOT (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((441885539)IS NOT(vt1.c2)) IN ((((vt1.c2))=((vt1.c1))), (NOT (vt1.c0)))));
SELECT * FROM rt1, rt0 WHERE ((+ (rt1.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((+ (rt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE ((+ (rt1.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((+ (rt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE ((+ (rt1.c1)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CAST(((rt1.c3)<(rt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c3)<(rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CAST(((rt1.c3)<(rt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c3)<(rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CAST(((rt1.c3)<(rt0.c1)) AS NUMERIC));
SELECT COUNT(*) FROM rt0 CROSS JOIN rt1 ON ((((rt1.c0) BETWEEN (rt1.c0) AND (x'')))GLOB(((((((((rt1.c1)OR(rt1.c2)))AND(rt0.c0)))OR(rt1.c4)))AND(rt1.c2)))) WHERE (rt1.c1 COLLATE NOCASE) ORDER BY rt1.c3 ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1 COLLATE NOCASE) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON ((((rt1.c0) BETWEEN (rt1.c0) AND (x'')))GLOB(((((((((rt1.c1)OR(rt1.c2)))AND(rt0.c0)))OR(rt1.c4)))AND(rt1.c2)))) ORDER BY rt1.c3 ASC);
SELECT COUNT(*) FROM rt0 CROSS JOIN rt1 ON ((((rt1.c0) BETWEEN (rt1.c0) AND (x'')))GLOB(((((((((rt1.c1)OR(rt1.c2)))AND(rt0.c0)))OR(rt1.c4)))AND(rt1.c2)))) WHERE (rt1.c1 COLLATE NOCASE) ORDER BY rt1.c3 ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1 COLLATE NOCASE) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON ((((rt1.c0) BETWEEN (rt1.c0) AND (x'')))GLOB(((((((((rt1.c1)OR(rt1.c2)))AND(rt0.c0)))OR(rt1.c4)))AND(rt1.c2)))) ORDER BY rt1.c3 ASC);
SELECT COUNT(*) FROM rt0 CROSS JOIN rt1 ON ((((rt1.c0) BETWEEN (rt1.c0) AND (x'')))GLOB(((((((((rt1.c1)OR(rt1.c2)))AND(rt0.c0)))OR(rt1.c4)))AND(rt1.c2)))) WHERE (rt1.c1 COLLATE NOCASE) ORDER BY rt1.c3 ASC;
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON ((((rt0.c2) NOTNULL)) IS TRUE) WHERE ((((rt1.c3)<<(rt1.c1)) IN ((- (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c3)<<(rt1.c1)) IN ((- (rt0.c1))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((((rt0.c2) NOTNULL)) IS TRUE));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON ((((rt0.c2) NOTNULL)) IS TRUE) WHERE ((((rt1.c3)<<(rt1.c1)) IN ((- (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c3)<<(rt1.c1)) IN ((- (rt0.c1))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((((rt0.c2) NOTNULL)) IS TRUE));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON ((((rt0.c2) NOTNULL)) IS TRUE) WHERE ((((rt1.c3)<<(rt1.c1)) IN ((- (rt0.c1)))));
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE (((json_patch(vt1.c0, rt1.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((json_patch(vt1.c0, rt1.c0)) IS FALSE)) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE (((json_patch(vt1.c0, rt1.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((json_patch(vt1.c0, rt1.c0)) IS FALSE)) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT COUNT(*) FROM rt1 WHERE (LTRIM(((rt1.c3)>(rt1.c1))));
SELECT SUM(count) FROM (SELECT ((LTRIM(((rt1.c3)>(rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (LTRIM(((rt1.c3)>(rt1.c1))));
SELECT SUM(count) FROM (SELECT ((LTRIM(((rt1.c3)>(rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (LTRIM(((rt1.c3)>(rt1.c1))));
SELECT COUNT(*) FROM rt0 INNER JOIN rt1 ON (((x'd94c', ((((x'aee9')OR(rt1.c3)))OR(rt1.c0)), (vt1.c1 IN ())))<((rt0.c0, ((vt1.c0) IS TRUE), ((rt1.c1)!=(rt1.c2))))) FULL OUTER JOIN vt1 ON CAST(((vt1.c0)*(rt0.c0)) AS NUMERIC) WHERE (rt1.c4) ORDER BY (((((((((('-1827202921')AND(vt1.c1)))AND(NULL)))AND(rt0.c0)))AND(vt1.c2))) BETWEEN (NULL) AND (rt0.c2)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON (((x'd94c', ((((x'aee9')OR(rt1.c3)))OR(rt1.c0)), (vt1.c1 IN ())))<((rt0.c0, ((vt1.c0) IS TRUE), ((rt1.c1)!=(rt1.c2))))) FULL OUTER JOIN vt1 ON CAST(((vt1.c0)*(rt0.c0)) AS NUMERIC) ORDER BY (((((((((('-1827202921')AND(vt1.c1)))AND(NULL)))AND(rt0.c0)))AND(vt1.c2))) BETWEEN (NULL) AND (rt0.c2)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 INNER JOIN rt1 ON (((x'd94c', ((((x'aee9')OR(rt1.c3)))OR(rt1.c0)), (vt1.c1 IN ())))<((rt0.c0, ((vt1.c0) IS TRUE), ((rt1.c1)!=(rt1.c2))))) FULL OUTER JOIN vt1 ON CAST(((vt1.c0)*(rt0.c0)) AS NUMERIC) WHERE (rt1.c4) ORDER BY (((((((((('-1827202921')AND(vt1.c1)))AND(NULL)))AND(rt0.c0)))AND(vt1.c2))) BETWEEN (NULL) AND (rt0.c2)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON (((x'd94c', ((((x'aee9')OR(rt1.c3)))OR(rt1.c0)), (vt1.c1 IN ())))<((rt0.c0, ((vt1.c0) IS TRUE), ((rt1.c1)!=(rt1.c2))))) FULL OUTER JOIN vt1 ON CAST(((vt1.c0)*(rt0.c0)) AS NUMERIC) ORDER BY (((((((((('-1827202921')AND(vt1.c1)))AND(NULL)))AND(rt0.c0)))AND(vt1.c2))) BETWEEN (NULL) AND (rt0.c2)) DESC  NULLS LAST);
SELECT * FROM rt1 RIGHT OUTER JOIN vt1 ON ((((((rt0.c2)IS(rt1.c1)))AND(((rt1.c3)>>(vt1.c1)))))AND(vt1.c2)) INNER JOIN rt0 ON (((((((('Vvp6mn<7')OR(rt0.c0 COLLATE BINARY)))OR(((rt0.c0)OR(rt0.c0)))))AND(CAST(vt1.c0 AS INTEGER))))AND(((vt1.c1)>>(vt1.c1)))) WHERE (CAST((rt1.c1 IN (vt1.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((rt1.c1 IN (vt1.c1)) AS REAL)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt1 ON ((((((rt0.c2)IS(rt1.c1)))AND(((rt1.c3)>>(vt1.c1)))))AND(vt1.c2)) INNER JOIN rt0 ON (((((((('Vvp6mn<7')OR(rt0.c0 COLLATE BINARY)))OR(((rt0.c0)OR(rt0.c0)))))AND(CAST(vt1.c0 AS INTEGER))))AND(((vt1.c1)>>(vt1.c1)))));
SELECT * FROM rt1 RIGHT OUTER JOIN vt1 ON ((((((rt0.c2)IS(rt1.c1)))AND(((rt1.c3)>>(vt1.c1)))))AND(vt1.c2)) INNER JOIN rt0 ON (((((((('Vvp6mn<7')OR(rt0.c0 COLLATE BINARY)))OR(((rt0.c0)OR(rt0.c0)))))AND(CAST(vt1.c0 AS INTEGER))))AND(((vt1.c1)>>(vt1.c1)))) WHERE (CAST((rt1.c1 IN (vt1.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((rt1.c1 IN (vt1.c1)) AS REAL)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt1 ON ((((((rt0.c2)IS(rt1.c1)))AND(((rt1.c3)>>(vt1.c1)))))AND(vt1.c2)) INNER JOIN rt0 ON (((((((('Vvp6mn<7')OR(rt0.c0 COLLATE BINARY)))OR(((rt0.c0)OR(rt0.c0)))))AND(CAST(vt1.c0 AS INTEGER))))AND(((vt1.c1)>>(vt1.c1)))));
SELECT ALL * FROM vt1, rt0, rt1 WHERE (CHAR((x'67e8' IN ()), ((((((((vt1.c2)OR(rt1.c1)))AND(rt0.c2)))OR(vt1.c1)))AND(vt1.c2)), ((rt1.c1) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((CHAR((x'67e8' IN ()), ((((((((vt1.c2)OR(rt1.c1)))AND(rt0.c2)))OR(vt1.c1)))AND(vt1.c2)), ((rt1.c1) IS TRUE))) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT ALL * FROM vt1, rt0, rt1 WHERE (CHAR((x'67e8' IN ()), ((((((((vt1.c2)OR(rt1.c1)))AND(rt0.c2)))OR(vt1.c1)))AND(vt1.c2)), ((rt1.c1) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((CHAR((x'67e8' IN ()), ((((((((vt1.c2)OR(rt1.c1)))AND(rt0.c2)))OR(vt1.c1)))AND(vt1.c2)), ((rt1.c1) IS TRUE))) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT ALL * FROM vt1, rt0, rt1 WHERE (CHAR((x'67e8' IN ()), ((((((((vt1.c2)OR(rt1.c1)))AND(rt0.c2)))OR(vt1.c1)))AND(vt1.c2)), ((rt1.c1) IS TRUE)));
SELECT ALL * FROM rt1 LEFT OUTER JOIN rt0 ON COALESCE(CAST(rt1.c0 AS TEXT), rt1.c4 COLLATE BINARY) WHERE ((((rt1.c0) BETWEEN (NULL) AND (rt0.c0)) IN ())) ORDER BY rt1.c2 COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c0) BETWEEN (NULL) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON COALESCE(CAST(rt1.c0 AS TEXT), rt1.c4 COLLATE BINARY) ORDER BY rt1.c2 COLLATE RTRIM ASC);
SELECT ALL * FROM rt1 LEFT OUTER JOIN rt0 ON COALESCE(CAST(rt1.c0 AS TEXT), rt1.c4 COLLATE BINARY) WHERE ((((rt1.c0) BETWEEN (NULL) AND (rt0.c0)) IN ())) ORDER BY rt1.c2 COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c0) BETWEEN (NULL) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON COALESCE(CAST(rt1.c0 AS TEXT), rt1.c4 COLLATE BINARY) ORDER BY rt1.c2 COLLATE RTRIM ASC);
SELECT ALL * FROM rt1 LEFT OUTER JOIN rt0 ON COALESCE(CAST(rt1.c0 AS TEXT), rt1.c4 COLLATE BINARY) WHERE ((((rt1.c0) BETWEEN (NULL) AND (rt0.c0)) IN ())) ORDER BY rt1.c2 COLLATE RTRIM ASC;
SELECT COUNT(*) FROM rt0, vt1 LEFT OUTER JOIN rt1 ON (((rt0.c0)) BETWEEN ((((('-747730936')) BETWEEN ((rt1.c2)) AND ((vt1.c2))))) AND (((rt1.c4 IN ())))) WHERE ((((vt1.c0) BETWEEN (rt0.c2) AND (vt1.c2)) IN ())) ORDER BY ABS((rt1.c3 IN ())) ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) BETWEEN (rt0.c2) AND (vt1.c2)) IN ())) IS TRUE)  as count FROM rt0, vt1 LEFT OUTER JOIN rt1 ON (((rt0.c0)) BETWEEN ((((('-747730936')) BETWEEN ((rt1.c2)) AND ((vt1.c2))))) AND (((rt1.c4 IN ())))) ORDER BY ABS((rt1.c3 IN ())) ASC);
SELECT COUNT(*) FROM rt0, vt1 LEFT OUTER JOIN rt1 ON (((rt0.c0)) BETWEEN ((((('-747730936')) BETWEEN ((rt1.c2)) AND ((vt1.c2))))) AND (((rt1.c4 IN ())))) WHERE ((((vt1.c0) BETWEEN (rt0.c2) AND (vt1.c2)) IN ())) ORDER BY ABS((rt1.c3 IN ())) ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) BETWEEN (rt0.c2) AND (vt1.c2)) IN ())) IS TRUE)  as count FROM rt0, vt1 LEFT OUTER JOIN rt1 ON (((rt0.c0)) BETWEEN ((((('-747730936')) BETWEEN ((rt1.c2)) AND ((vt1.c2))))) AND (((rt1.c4 IN ())))) ORDER BY ABS((rt1.c3 IN ())) ASC);
SELECT COUNT(*) FROM rt0, vt1 LEFT OUTER JOIN rt1 ON (((rt0.c0)) BETWEEN ((((('-747730936')) BETWEEN ((rt1.c2)) AND ((vt1.c2))))) AND (((rt1.c4 IN ())))) WHERE ((((vt1.c0) BETWEEN (rt0.c2) AND (vt1.c2)) IN ())) ORDER BY ABS((rt1.c3 IN ())) ASC;
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE (vt1.c0 COLLATE BINARY COLLATE BINARY) ORDER BY CASE x''  WHEN rt1.c0 THEN CAST(rt1.c0 AS REAL) ELSE CAST(rt0.c2 AS NUMERIC) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY CASE x''  WHEN rt1.c0 THEN CAST(rt1.c0 AS REAL) ELSE CAST(rt0.c2 AS NUMERIC) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE (vt1.c0 COLLATE BINARY COLLATE BINARY) ORDER BY CASE x''  WHEN rt1.c0 THEN CAST(rt1.c0 AS REAL) ELSE CAST(rt0.c2 AS NUMERIC) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY CASE x''  WHEN rt1.c0 THEN CAST(rt1.c0 AS REAL) ELSE CAST(rt0.c2 AS NUMERIC) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE (vt1.c0 COLLATE BINARY COLLATE BINARY) ORDER BY CASE x''  WHEN rt1.c0 THEN CAST(rt1.c0 AS REAL) ELSE CAST(rt0.c2 AS NUMERIC) END DESC  NULLS FIRST;
SELECT * FROM rt1, rt0, vt1 WHERE ((((rt1.c0))=((((vt1.c2)|(rt1.c2)))))) ORDER BY (+ (((((rt0.c1)AND(vt1.c1)))OR(vt1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0))=((((vt1.c2)|(rt1.c2)))))) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY (+ (((((rt0.c1)AND(vt1.c1)))OR(vt1.c2)))) DESC);
SELECT * FROM rt1, rt0, vt1 WHERE ((((rt1.c0))=((((vt1.c2)|(rt1.c2)))))) ORDER BY (+ (((((rt0.c1)AND(vt1.c1)))OR(vt1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0))=((((vt1.c2)|(rt1.c2)))))) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY (+ (((((rt0.c1)AND(vt1.c1)))OR(vt1.c2)))) DESC);
SELECT * FROM rt1, rt0, vt1 WHERE ((((rt1.c0))=((((vt1.c2)|(rt1.c2)))))) ORDER BY (+ (((((rt0.c1)AND(vt1.c1)))OR(vt1.c2)))) DESC;
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON NULL RIGHT OUTER JOIN vt1 ON ((((vt1.c0)AND(rt1.c2 COLLATE BINARY)))OR(((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c0)))) WHERE ((rt1.c0 IN (CASE WHEN vt1.c0 THEN rt0.c1 ELSE rt1.c3 END)));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c0 IN (CASE WHEN vt1.c0 THEN rt0.c1 ELSE rt1.c3 END))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON NULL RIGHT OUTER JOIN vt1 ON ((((vt1.c0)AND(rt1.c2 COLLATE BINARY)))OR(((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c0)))));
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON NULL RIGHT OUTER JOIN vt1 ON ((((vt1.c0)AND(rt1.c2 COLLATE BINARY)))OR(((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c0)))) WHERE ((rt1.c0 IN (CASE WHEN vt1.c0 THEN rt0.c1 ELSE rt1.c3 END)));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c0 IN (CASE WHEN vt1.c0 THEN rt0.c1 ELSE rt1.c3 END))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON NULL RIGHT OUTER JOIN vt1 ON ((((vt1.c0)AND(rt1.c2 COLLATE BINARY)))OR(((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c0)))));
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON NULL RIGHT OUTER JOIN vt1 ON ((((vt1.c0)AND(rt1.c2 COLLATE BINARY)))OR(((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c0)))) WHERE ((rt1.c0 IN (CASE WHEN vt1.c0 THEN rt0.c1 ELSE rt1.c3 END)));
SELECT COUNT(*) FROM vt1 WHERE (MIN(((vt1.c0) NOT NULL), ((x'')GLOB(vt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((MIN(((vt1.c0) NOT NULL), ((x'')GLOB(vt1.c2)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (MIN(((vt1.c0) NOT NULL), ((x'')GLOB(vt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((MIN(((vt1.c0) NOT NULL), ((x'')GLOB(vt1.c2)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (MIN(((vt1.c0) NOT NULL), ((x'')GLOB(vt1.c2))));
SELECT * FROM vt1, rt0, rt1 WHERE (CASE (rt1.c1 IN ())  WHEN CASE WHEN rt1.c2 THEN rt1.c0 WHEN vt1.c0 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt1.c4 END THEN ((rt1.c3)>(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt1.c1 IN ())  WHEN CASE WHEN rt1.c2 THEN rt1.c0 WHEN vt1.c0 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt1.c4 END THEN ((rt1.c3)>(rt0.c1)) END) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT * FROM vt1, rt0, rt1 WHERE (CASE (rt1.c1 IN ())  WHEN CASE WHEN rt1.c2 THEN rt1.c0 WHEN vt1.c0 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt1.c4 END THEN ((rt1.c3)>(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt1.c1 IN ())  WHEN CASE WHEN rt1.c2 THEN rt1.c0 WHEN vt1.c0 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt1.c4 END THEN ((rt1.c3)>(rt0.c1)) END) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT * FROM vt1, rt0, rt1 WHERE (CASE (rt1.c1 IN ())  WHEN CASE WHEN rt1.c2 THEN rt1.c0 WHEN vt1.c0 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt1.c4 END THEN ((rt1.c3)>(rt0.c1)) END);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CAST(CASE NULL  WHEN vt1.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE vt1.c1 END AS REAL)) ORDER BY LOWER(((vt1.c2)*(vt1.c2)))  NULLS LAST, (- ((+ (rt0.c1)))), CASE (((-6.64605025E8)) BETWEEN ((vt1.c2)) AND ((vt1.c2)))  WHEN IFNULL(vt1.c1, '-1446152498') THEN ((rt0.c0)<=(vt1.c0)) ELSE vt1.c0 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE NULL  WHEN vt1.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE vt1.c1 END AS REAL)) IS TRUE)  as count FROM vt1, rt0 ORDER BY LOWER(((vt1.c2)*(vt1.c2)))  NULLS LAST, (- ((+ (rt0.c1)))), CASE (((-6.64605025E8)) BETWEEN ((vt1.c2)) AND ((vt1.c2)))  WHEN IFNULL(vt1.c1, '-1446152498') THEN ((rt0.c0)<=(vt1.c0)) ELSE vt1.c0 END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CAST(CASE NULL  WHEN vt1.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE vt1.c1 END AS REAL)) ORDER BY LOWER(((vt1.c2)*(vt1.c2)))  NULLS LAST, (- ((+ (rt0.c1)))), CASE (((-6.64605025E8)) BETWEEN ((vt1.c2)) AND ((vt1.c2)))  WHEN IFNULL(vt1.c1, '-1446152498') THEN ((rt0.c0)<=(vt1.c0)) ELSE vt1.c0 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE NULL  WHEN vt1.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE vt1.c1 END AS REAL)) IS TRUE)  as count FROM vt1, rt0 ORDER BY LOWER(((vt1.c2)*(vt1.c2)))  NULLS LAST, (- ((+ (rt0.c1)))), CASE (((-6.64605025E8)) BETWEEN ((vt1.c2)) AND ((vt1.c2)))  WHEN IFNULL(vt1.c1, '-1446152498') THEN ((rt0.c0)<=(vt1.c0)) ELSE vt1.c0 END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CAST(CASE NULL  WHEN vt1.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE vt1.c1 END AS REAL)) ORDER BY LOWER(((vt1.c2)*(vt1.c2)))  NULLS LAST, (- ((+ (rt0.c1)))), CASE (((-6.64605025E8)) BETWEEN ((vt1.c2)) AND ((vt1.c2)))  WHEN IFNULL(vt1.c1, '-1446152498') THEN ((rt0.c0)<=(vt1.c0)) ELSE vt1.c0 END ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, rt0 CROSS JOIN vt1 ON CAST((NOT (vt1.c2)) AS REAL) WHERE (CAST(((rt1.c2)<<(rt1.c3)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2)<<(rt1.c3)) AS BLOB)) IS TRUE)  as count FROM rt1, rt0 CROSS JOIN vt1 ON CAST((NOT (vt1.c2)) AS REAL));
SELECT COUNT(*) FROM rt1, rt0 CROSS JOIN vt1 ON CAST((NOT (vt1.c2)) AS REAL) WHERE (CAST(((rt1.c2)<<(rt1.c3)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2)<<(rt1.c3)) AS BLOB)) IS TRUE)  as count FROM rt1, rt0 CROSS JOIN vt1 ON CAST((NOT (vt1.c2)) AS REAL));
SELECT COUNT(*) FROM rt1, rt0 CROSS JOIN vt1 ON CAST((NOT (vt1.c2)) AS REAL) WHERE (CAST(((rt1.c2)<<(rt1.c3)) AS BLOB));
SELECT ALL * FROM rt1 WHERE (rt1.c1) ORDER BY (((NULL)) BETWEEN ((((((rt1.c3)AND(rt1.c1)))AND(-1822865600)))) AND ((((rt1.c0)LIKE(rt1.c4))))) DESC, CASE ((rt1.c1)-(rt1.c0))  WHEN ((((0.6141648433380082)OR(rt1.c1)))AND('tP{oGV1[')) THEN 1625594067 END DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY (((NULL)) BETWEEN ((((((rt1.c3)AND(rt1.c1)))AND(-1822865600)))) AND ((((rt1.c0)LIKE(rt1.c4))))) DESC, CASE ((rt1.c1)-(rt1.c0))  WHEN ((((0.6141648433380082)OR(rt1.c1)))AND('tP{oGV1[')) THEN 1625594067 END DESC);
SELECT ALL * FROM rt1 WHERE (rt1.c1) ORDER BY (((NULL)) BETWEEN ((((((rt1.c3)AND(rt1.c1)))AND(-1822865600)))) AND ((((rt1.c0)LIKE(rt1.c4))))) DESC, CASE ((rt1.c1)-(rt1.c0))  WHEN ((((0.6141648433380082)OR(rt1.c1)))AND('tP{oGV1[')) THEN 1625594067 END DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY (((NULL)) BETWEEN ((((((rt1.c3)AND(rt1.c1)))AND(-1822865600)))) AND ((((rt1.c0)LIKE(rt1.c4))))) DESC, CASE ((rt1.c1)-(rt1.c0))  WHEN ((((0.6141648433380082)OR(rt1.c1)))AND('tP{oGV1[')) THEN 1625594067 END DESC);
SELECT ALL * FROM rt1 WHERE (rt1.c1) ORDER BY (((NULL)) BETWEEN ((((((rt1.c3)AND(rt1.c1)))AND(-1822865600)))) AND ((((rt1.c0)LIKE(rt1.c4))))) DESC, CASE ((rt1.c1)-(rt1.c0))  WHEN ((((0.6141648433380082)OR(rt1.c1)))AND('tP{oGV1[')) THEN 1625594067 END DESC;
SELECT ALL * FROM vt1, rt1, rt0 WHERE (vt1.c2) ORDER BY LIKE((+ (NULL)), (((rt0.c2))>((vt1.c0))), '8')  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c2) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY LIKE((+ (NULL)), (((rt0.c2))>((vt1.c0))), '8')  NULLS FIRST);
SELECT ALL * FROM vt1, rt1, rt0 WHERE (vt1.c2) ORDER BY LIKE((+ (NULL)), (((rt0.c2))>((vt1.c0))), '8')  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c2) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY LIKE((+ (NULL)), (((rt0.c2))>((vt1.c0))), '8')  NULLS FIRST);
SELECT ALL * FROM vt1, rt1, rt0 WHERE (vt1.c2) ORDER BY LIKE((+ (NULL)), (((rt0.c2))>((vt1.c0))), '8')  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN vt1.c0 THEN rt0.c0 WHEN vt1.c1 THEN rt0.c0 WHEN rt0.c1 THEN '' END COLLATE BINARY) ORDER BY CAST((vt1.c1 IN (vt1.c0, rt0.c1)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 THEN rt0.c0 WHEN vt1.c1 THEN rt0.c0 WHEN rt0.c1 THEN '' END COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST((vt1.c1 IN (vt1.c0, rt0.c1)) AS NUMERIC));
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN vt1.c0 THEN rt0.c0 WHEN vt1.c1 THEN rt0.c0 WHEN rt0.c1 THEN '' END COLLATE BINARY) ORDER BY CAST((vt1.c1 IN (vt1.c0, rt0.c1)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 THEN rt0.c0 WHEN vt1.c1 THEN rt0.c0 WHEN rt0.c1 THEN '' END COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST((vt1.c1 IN (vt1.c0, rt0.c1)) AS NUMERIC));
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN vt1.c0 THEN rt0.c0 WHEN vt1.c1 THEN rt0.c0 WHEN rt0.c1 THEN '' END COLLATE BINARY) ORDER BY CAST((vt1.c1 IN (vt1.c0, rt0.c1)) AS NUMERIC);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON LIKELY(DISTINCT (rt0.c1 IN ())) FULL OUTER JOIN vt1 ON (((((vt1.c2)) BETWEEN ((vt1.c1)) AND ((vt1.c2)))) BETWEEN (LOWER(rt1.c2)) AND (((vt1.c0)-(vt1.c1)))) WHERE (rt1.c0) ORDER BY (((rt1.c4 IN (rt0.c2))) NOT BETWEEN ((((rt1.c1))==((rt1.c2)))) AND (CASE WHEN rt0.c1 THEN '}' END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON LIKELY(DISTINCT (rt0.c1 IN ())) FULL OUTER JOIN vt1 ON (((((vt1.c2)) BETWEEN ((vt1.c1)) AND ((vt1.c2)))) BETWEEN (LOWER(rt1.c2)) AND (((vt1.c0)-(vt1.c1)))) ORDER BY (((rt1.c4 IN (rt0.c2))) NOT BETWEEN ((((rt1.c1))==((rt1.c2)))) AND (CASE WHEN rt0.c1 THEN '}' END)) DESC);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON LIKELY(DISTINCT (rt0.c1 IN ())) FULL OUTER JOIN vt1 ON (((((vt1.c2)) BETWEEN ((vt1.c1)) AND ((vt1.c2)))) BETWEEN (LOWER(rt1.c2)) AND (((vt1.c0)-(vt1.c1)))) WHERE (rt1.c0) ORDER BY (((rt1.c4 IN (rt0.c2))) NOT BETWEEN ((((rt1.c1))==((rt1.c2)))) AND (CASE WHEN rt0.c1 THEN '}' END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON LIKELY(DISTINCT (rt0.c1 IN ())) FULL OUTER JOIN vt1 ON (((((vt1.c2)) BETWEEN ((vt1.c1)) AND ((vt1.c2)))) BETWEEN (LOWER(rt1.c2)) AND (((vt1.c0)-(vt1.c1)))) ORDER BY (((rt1.c4 IN (rt0.c2))) NOT BETWEEN ((((rt1.c1))==((rt1.c2)))) AND (CASE WHEN rt0.c1 THEN '}' END)) DESC);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON LIKELY(DISTINCT (rt0.c1 IN ())) FULL OUTER JOIN vt1 ON (((((vt1.c2)) BETWEEN ((vt1.c1)) AND ((vt1.c2)))) BETWEEN (LOWER(rt1.c2)) AND (((vt1.c0)-(vt1.c1)))) WHERE (rt1.c0) ORDER BY (((rt1.c4 IN (rt0.c2))) NOT BETWEEN ((((rt1.c1))==((rt1.c2)))) AND (CASE WHEN rt0.c1 THEN '}' END)) DESC;
SELECT ALL * FROM rt1, vt1 WHERE ((+ ((vt1.c2 IN ())))) ORDER BY CAST(rt1.c1 AS INTEGER) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((vt1.c2 IN ())))) IS TRUE)  as count FROM rt1, vt1 ORDER BY CAST(rt1.c1 AS INTEGER) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL * FROM rt1, vt1 WHERE ((+ ((vt1.c2 IN ())))) ORDER BY CAST(rt1.c1 AS INTEGER) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((vt1.c2 IN ())))) IS TRUE)  as count FROM rt1, vt1 ORDER BY CAST(rt1.c1 AS INTEGER) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL * FROM rt1, vt1 WHERE ((+ ((vt1.c2 IN ())))) ORDER BY CAST(rt1.c1 AS INTEGER) COLLATE NOCASE ASC  NULLS LAST;
SELECT * FROM vt1 LEFT OUTER JOIN rt1 ON ((STRFTIME(x'5aa4', rt1.c3, 0.5099430784351762, rt1.c1, rt1.c0))==(((vt1.c0)&(rt1.c2)))) WHERE ((((((vt1.c2, rt1.c4, vt1.c1))==((rt1.c3, rt1.c0, rt1.c0))))>(((vt1.c1) NOTNULL)))) ORDER BY (('')%((- (vt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c2, rt1.c4, vt1.c1))=((rt1.c3, rt1.c0, rt1.c0))))>(((vt1.c1) NOTNULL)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt1 ON ((STRFTIME(x'5aa4', rt1.c3, 0.5099430784351762, rt1.c1, rt1.c0))==(((vt1.c0)&(rt1.c2)))) ORDER BY (('')%((- (vt1.c2))))  NULLS LAST);
SELECT * FROM vt1 LEFT OUTER JOIN rt1 ON ((STRFTIME(x'5aa4', rt1.c3, 0.5099430784351762, rt1.c1, rt1.c0))==(((vt1.c0)&(rt1.c2)))) WHERE ((((((vt1.c2, rt1.c4, vt1.c1))==((rt1.c3, rt1.c0, rt1.c0))))>(((vt1.c1) NOTNULL)))) ORDER BY (('')%((- (vt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c2, rt1.c4, vt1.c1))=((rt1.c3, rt1.c0, rt1.c0))))>(((vt1.c1) NOTNULL)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt1 ON ((STRFTIME(x'5aa4', rt1.c3, 0.5099430784351762, rt1.c1, rt1.c0))==(((vt1.c0)&(rt1.c2)))) ORDER BY (('')%((- (vt1.c2))))  NULLS LAST);
SELECT * FROM vt1 LEFT OUTER JOIN rt1 ON ((STRFTIME(x'5aa4', rt1.c3, 0.5099430784351762, rt1.c1, rt1.c0))==(((vt1.c0)&(rt1.c2)))) WHERE ((((((vt1.c2, rt1.c4, vt1.c1))==((rt1.c3, rt1.c0, rt1.c0))))>(((vt1.c1) NOTNULL)))) ORDER BY (('')%((- (vt1.c2))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON (json_array_length(rt1.c3) IN ()) RIGHT OUTER JOIN rt1 ON x'59c5' COLLATE RTRIM WHERE ((((CASE rt1.c1  WHEN rt0.c1 THEN rt1.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END))<((((NULL) BETWEEN (rt1.c4) AND (rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE rt1.c1  WHEN rt0.c1 THEN rt1.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END))<((((NULL) BETWEEN (rt1.c4) AND (rt1.c0)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON (json_array_length(rt1.c3) IN ()) RIGHT OUTER JOIN rt1 ON x'59c5' COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON (json_array_length(rt1.c3) IN ()) RIGHT OUTER JOIN rt1 ON x'59c5' COLLATE RTRIM WHERE ((((CASE rt1.c1  WHEN rt0.c1 THEN rt1.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END))<((((NULL) BETWEEN (rt1.c4) AND (rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE rt1.c1  WHEN rt0.c1 THEN rt1.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END))<((((NULL) BETWEEN (rt1.c4) AND (rt1.c0)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON (json_array_length(rt1.c3) IN ()) RIGHT OUTER JOIN rt1 ON x'59c5' COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON (json_array_length(rt1.c3) IN ()) RIGHT OUTER JOIN rt1 ON x'59c5' COLLATE RTRIM WHERE ((((CASE rt1.c1  WHEN rt0.c1 THEN rt1.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END))<((((NULL) BETWEEN (rt1.c4) AND (rt1.c0))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1) NOTNULL));
SELECT COUNT(*) FROM vt1 WHERE ((((TRIM(vt1.c1)))>=((((vt1.c1)GLOB(vt1.c2)))))) ORDER BY x'd062' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((TRIM(vt1.c1)))>=((((vt1.c1)GLOB(vt1.c2)))))) IS TRUE)  as count FROM vt1 NOT INDEXED ORDER BY x'd062' DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((TRIM(vt1.c1)))>=((((vt1.c1)GLOB(vt1.c2)))))) ORDER BY x'd062' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((TRIM(vt1.c1)))>=((((vt1.c1)GLOB(vt1.c2)))))) IS TRUE)  as count FROM vt1 NOT INDEXED ORDER BY x'd062' DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((TRIM(vt1.c1)))>=((((vt1.c1)GLOB(vt1.c2)))))) ORDER BY x'd062' DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c0) NOT NULL))) AND (((((rt0.c0, rt0.c0, rt0.c1))<=((rt0.c1, rt0.c0, rt0.c1)))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((((rt0.c0) NOT NULL))) AND (((((rt0.c0, rt0.c0, rt0.c1))<=((rt0.c1, rt0.c0, rt0.c1))))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c0) NOT NULL))) AND (((((rt0.c0, rt0.c0, rt0.c1))<=((rt0.c1, rt0.c0, rt0.c1)))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((((rt0.c0) NOT NULL))) AND (((((rt0.c0, rt0.c0, rt0.c1))<=((rt0.c1, rt0.c0, rt0.c1))))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c0) NOT NULL))) AND (((((rt0.c0, rt0.c0, rt0.c1))<=((rt0.c1, rt0.c0, rt0.c1)))))));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt1 ON SQLITE_SOURCE_ID() WHERE (CAST(vt1.c2 AS TEXT)) ORDER BY (((((rt1.c2, vt1.c1, rt1.c3))>((vt1.c0, rt1.c1, vt1.c0))))OR((rt1.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c2 AS TEXT)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt1 ON SQLITE_SOURCE_ID() ORDER BY (((((rt1.c2, vt1.c1, rt1.c3))>((vt1.c0, rt1.c1, vt1.c0))))OR((rt1.c0 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt1 ON SQLITE_SOURCE_ID() WHERE (CAST(vt1.c2 AS TEXT)) ORDER BY (((((rt1.c2, vt1.c1, rt1.c3))>((vt1.c0, rt1.c1, vt1.c0))))OR((rt1.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c2 AS TEXT)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt1 ON SQLITE_SOURCE_ID() ORDER BY (((((rt1.c2, vt1.c1, rt1.c3))>((vt1.c0, rt1.c1, vt1.c0))))OR((rt1.c0 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt1 ON SQLITE_SOURCE_ID() WHERE (CAST(vt1.c2 AS TEXT)) ORDER BY (((((rt1.c2, vt1.c1, rt1.c3))>((vt1.c0, rt1.c1, vt1.c0))))OR((rt1.c0 IN ())))  NULLS FIRST;
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON rt1.c0 WHERE ((((+ (rt1.c4)))OR(rt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt1.c4)))OR(rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON rt1.c0);
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON rt1.c0 WHERE ((((+ (rt1.c4)))OR(rt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt1.c4)))OR(rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON rt1.c0);
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON rt1.c0 WHERE ((((+ (rt1.c4)))OR(rt1.c0 COLLATE BINARY)));
SELECT ALL * FROM rt1, vt1 WHERE ((((- (vt1.c2)))=((((vt1.c0))<>((rt1.c4)))))) ORDER BY ((((((vt1.c2) NOT NULL))OR(rt1.c1)))OR(rt1.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c2)))=((((vt1.c0))!=((rt1.c4)))))) IS TRUE)  as count FROM rt1, vt1 ORDER BY ((((((vt1.c2) NOT NULL))OR(rt1.c1)))OR(rt1.c0 COLLATE NOCASE)) ASC);
SELECT ALL * FROM rt1, vt1 WHERE ((((- (vt1.c2)))=((((vt1.c0))<>((rt1.c4)))))) ORDER BY ((((((vt1.c2) NOT NULL))OR(rt1.c1)))OR(rt1.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c2)))=((((vt1.c0))!=((rt1.c4)))))) IS TRUE)  as count FROM rt1, vt1 ORDER BY ((((((vt1.c2) NOT NULL))OR(rt1.c1)))OR(rt1.c0 COLLATE NOCASE)) ASC);
SELECT ALL * FROM rt1, vt1 WHERE ((((- (vt1.c2)))=((((vt1.c0))<>((rt1.c4)))))) ORDER BY ((((((vt1.c2) NOT NULL))OR(rt1.c1)))OR(rt1.c0 COLLATE NOCASE)) ASC;
SELECT COUNT(*) FROM rt1 WHERE ((- ((((rt1.c0))<>((rt1.c1))))));
SELECT SUM(count) FROM (SELECT (((- ((((rt1.c0))!=((rt1.c1)))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((- ((((rt1.c0))<>((rt1.c1))))));
SELECT SUM(count) FROM (SELECT (((- ((((rt1.c0))!=((rt1.c1)))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((- ((((rt1.c0))<>((rt1.c1))))));
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (((x'f57f' COLLATE RTRIM)<<(((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c0))))) ORDER BY (((((((((rt0.c1 IN ()))AND(vt1.c2)))AND(((((vt1.c0)OR(rt0.c0)))OR(vt1.c2)))))OR(((vt1.c1)AND(rt0.c1)))))AND(vt1.c2)) DESC, ((LOWER(rt0.c2))<(((((vt1.c1)OR(0.07258705914394359)))OR(vt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'f57f' COLLATE RTRIM)<<(((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c0))))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY (((((((((rt0.c1 IN ()))AND(vt1.c2)))AND(((((vt1.c0)OR(rt0.c0)))OR(vt1.c2)))))OR(((vt1.c1)AND(rt0.c1)))))AND(vt1.c2)) DESC, ((LOWER(rt0.c2))<(((((vt1.c1)OR(0.07258705914394359)))OR(vt1.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (((x'f57f' COLLATE RTRIM)<<(((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c0))))) ORDER BY (((((((((rt0.c1 IN ()))AND(vt1.c2)))AND(((((vt1.c0)OR(rt0.c0)))OR(vt1.c2)))))OR(((vt1.c1)AND(rt0.c1)))))AND(vt1.c2)) DESC, ((LOWER(rt0.c2))<(((((vt1.c1)OR(0.07258705914394359)))OR(vt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'f57f' COLLATE RTRIM)<<(((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c0))))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY (((((((((rt0.c1 IN ()))AND(vt1.c2)))AND(((((vt1.c0)OR(rt0.c0)))OR(vt1.c2)))))OR(((vt1.c1)AND(rt0.c1)))))AND(vt1.c2)) DESC, ((LOWER(rt0.c2))<(((((vt1.c1)OR(0.07258705914394359)))OR(vt1.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (((x'f57f' COLLATE RTRIM)<<(((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c0))))) ORDER BY (((((((((rt0.c1 IN ()))AND(vt1.c2)))AND(((((vt1.c0)OR(rt0.c0)))OR(vt1.c2)))))OR(((vt1.c1)AND(rt0.c1)))))AND(vt1.c2)) DESC, ((LOWER(rt0.c2))<(((((vt1.c1)OR(0.07258705914394359)))OR(vt1.c2))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)=(vt1.c0))) BETWEEN ((((vt1.c2))!=((x'')))) AND (((vt1.c0) ISNULL)))) ORDER BY CASE WHEN (vt1.c2 IN (vt1.c2, vt1.c0)) THEN ((vt1.c2)>>(vt1.c2)) END, ((CASE WHEN vt1.c1 THEN vt1.c1 END) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)==(vt1.c0))) BETWEEN ((((vt1.c2))!=((x'')))) AND (((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN (vt1.c2 IN (vt1.c2, vt1.c0)) THEN ((vt1.c2)>>(vt1.c2)) END, ((CASE WHEN vt1.c1 THEN vt1.c1 END) IS FALSE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)=(vt1.c0))) BETWEEN ((((vt1.c2))!=((x'')))) AND (((vt1.c0) ISNULL)))) ORDER BY CASE WHEN (vt1.c2 IN (vt1.c2, vt1.c0)) THEN ((vt1.c2)>>(vt1.c2)) END, ((CASE WHEN vt1.c1 THEN vt1.c1 END) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)==(vt1.c0))) BETWEEN ((((vt1.c2))!=((x'')))) AND (((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN (vt1.c2 IN (vt1.c2, vt1.c0)) THEN ((vt1.c2)>>(vt1.c2)) END, ((CASE WHEN vt1.c1 THEN vt1.c1 END) IS FALSE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)=(vt1.c0))) BETWEEN ((((vt1.c2))!=((x'')))) AND (((vt1.c0) ISNULL)))) ORDER BY CASE WHEN (vt1.c2 IN (vt1.c2, vt1.c0)) THEN ((vt1.c2)>>(vt1.c2)) END, ((CASE WHEN vt1.c1 THEN vt1.c1 END) IS FALSE) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0 RIGHT OUTER JOIN rt1 ON (((CAST(rt1.c0 AS TEXT), ((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c0)), CASE WHEN x'' THEN rt0.c1 ELSE rt0.c1 END))<=((CAST(rt1.c0 AS REAL), HEX(DISTINCT rt1.c4), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt1.c3))))) WHERE (CAST(((rt0.c2) NOT NULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) NOT NULL) AS BLOB)) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN rt1 ON (((CAST(rt1.c0 AS TEXT), ((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c0)), CASE WHEN x'' THEN rt0.c1 ELSE rt0.c1 END))<=((CAST(rt1.c0 AS REAL), HEX(DISTINCT rt1.c4), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt1.c3))))));
SELECT COUNT(*) FROM vt1, rt0 RIGHT OUTER JOIN rt1 ON (((CAST(rt1.c0 AS TEXT), ((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c0)), CASE WHEN x'' THEN rt0.c1 ELSE rt0.c1 END))<=((CAST(rt1.c0 AS REAL), HEX(DISTINCT rt1.c4), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt1.c3))))) WHERE (CAST(((rt0.c2) NOT NULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) NOT NULL) AS BLOB)) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN rt1 ON (((CAST(rt1.c0 AS TEXT), ((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c0)), CASE WHEN x'' THEN rt0.c1 ELSE rt0.c1 END))<=((CAST(rt1.c0 AS REAL), HEX(DISTINCT rt1.c4), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt1.c3))))));
SELECT COUNT(*) FROM vt1, rt0 RIGHT OUTER JOIN rt1 ON (((CAST(rt1.c0 AS TEXT), ((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c0)), CASE WHEN x'' THEN rt0.c1 ELSE rt0.c1 END))<=((CAST(rt1.c0 AS REAL), HEX(DISTINCT rt1.c4), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt1.c3))))) WHERE (CAST(((rt0.c2) NOT NULL) AS BLOB));
SELECT ALL * FROM rt0, rt1 WHERE (CAST(TRIM(rt1.c3) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(rt1.c3) AS INTEGER)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (CAST(TRIM(rt1.c3) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(rt1.c3) AS INTEGER)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (CAST(TRIM(rt1.c3) AS INTEGER));
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE (vt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE (vt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE (vt1.c2);
SELECT * FROM vt1, rt0 WHERE (vt1.c0) ORDER BY json(((vt1.c1) NOT BETWEEN ('333775575') AND (vt1.c2))), CAST(((x'8ded')*(0.5820369967741503)) AS TEXT) DESC  NULLS LAST, UNLIKELY(DISTINCT vt1.c1) ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, rt0 ORDER BY json(((vt1.c1) NOT BETWEEN ('333775575') AND (vt1.c2))), CAST(((x'8ded')*(0.5820369967741503)) AS TEXT) DESC  NULLS LAST, UNLIKELY(DISTINCT vt1.c1) ASC);
SELECT * FROM vt1, rt0 WHERE (vt1.c0) ORDER BY json(((vt1.c1) NOT BETWEEN ('333775575') AND (vt1.c2))), CAST(((x'8ded')*(0.5820369967741503)) AS TEXT) DESC  NULLS LAST, UNLIKELY(DISTINCT vt1.c1) ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, rt0 ORDER BY json(((vt1.c1) NOT BETWEEN ('333775575') AND (vt1.c2))), CAST(((x'8ded')*(0.5820369967741503)) AS TEXT) DESC  NULLS LAST, UNLIKELY(DISTINCT vt1.c1) ASC);
SELECT * FROM vt1, rt0 WHERE (vt1.c0) ORDER BY json(((vt1.c1) NOT BETWEEN ('333775575') AND (vt1.c2))), CAST(((x'8ded')*(0.5820369967741503)) AS TEXT) DESC  NULLS LAST, UNLIKELY(DISTINCT vt1.c1) ASC;
SELECT * FROM rt1 WHERE (((((rt1.c3)AND(rt1.c1)))>(rt1.c0 COLLATE BINARY))) ORDER BY ((CAST(rt1.c4 AS NUMERIC))>>(CASE rt1.c4  WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)AND(rt1.c1)))>(rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c4 AS NUMERIC))>>(CASE rt1.c4  WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c0 END)) ASC  NULLS FIRST);
SELECT * FROM rt1 WHERE (((((rt1.c3)AND(rt1.c1)))>(rt1.c0 COLLATE BINARY))) ORDER BY ((CAST(rt1.c4 AS NUMERIC))>>(CASE rt1.c4  WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)AND(rt1.c1)))>(rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c4 AS NUMERIC))>>(CASE rt1.c4  WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c0 END)) ASC  NULLS FIRST);
SELECT * FROM rt1 WHERE (((((rt1.c3)AND(rt1.c1)))>(rt1.c0 COLLATE BINARY))) ORDER BY ((CAST(rt1.c4 AS NUMERIC))>>(CASE rt1.c4  WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c0 END)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt1 ON NULL FULL OUTER JOIN rt0 ON rt1.c3 COLLATE RTRIM WHERE (((CAST(rt1.c2 AS NUMERIC)) ISNULL)) ORDER BY ((((((x'') BETWEEN (rt1.c2) AND (rt1.c1)))OR(CASE WHEN rt0.c2 THEN rt1.c0 END)))OR(CHANGES())) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c2 AS NUMERIC)) ISNULL)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt1 ON NULL FULL OUTER JOIN rt0 ON rt1.c3 COLLATE RTRIM ORDER BY ((((((x'') BETWEEN (rt1.c2) AND (rt1.c1)))OR(CASE WHEN rt0.c2 THEN rt1.c0 END)))OR(CHANGES())) DESC);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt1 ON NULL FULL OUTER JOIN rt0 ON rt1.c3 COLLATE RTRIM WHERE (((CAST(rt1.c2 AS NUMERIC)) ISNULL)) ORDER BY ((((((x'') BETWEEN (rt1.c2) AND (rt1.c1)))OR(CASE WHEN rt0.c2 THEN rt1.c0 END)))OR(CHANGES())) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c2 AS NUMERIC)) ISNULL)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt1 ON NULL FULL OUTER JOIN rt0 ON rt1.c3 COLLATE RTRIM ORDER BY ((((((x'') BETWEEN (rt1.c2) AND (rt1.c1)))OR(CASE WHEN rt0.c2 THEN rt1.c0 END)))OR(CHANGES())) DESC);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt1 ON NULL FULL OUTER JOIN rt0 ON rt1.c3 COLLATE RTRIM WHERE (((CAST(rt1.c2 AS NUMERIC)) ISNULL)) ORDER BY ((((((x'') BETWEEN (rt1.c2) AND (rt1.c1)))OR(CASE WHEN rt0.c2 THEN rt1.c0 END)))OR(CHANGES())) DESC;
SELECT ALL * FROM rt0, vt1 FULL OUTER JOIN rt1 ON (((((vt1.c1) IS FALSE), TRIM(DISTINCT rt1.c2), (NOT (rt0.c1))))<((rt1.c0, rt0.c0, vt1.c2))) WHERE ((((vt1.c0))<>((CAST(rt1.c1 AS INTEGER))))) ORDER BY (((((x'')) NOT BETWEEN ((rt1.c1)) AND ((rt0.c2)))) NOTNULL) DESC  NULLS LAST, ((((rt0.c0)OR(rt0.c1)))AND('35n#s')) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0))<>((CAST(rt1.c1 AS INTEGER))))) IS TRUE)  as count FROM rt0, vt1 FULL OUTER JOIN rt1 ON (((((vt1.c1) IS FALSE), TRIM(DISTINCT rt1.c2), (NOT (rt0.c1))))<((rt1.c0, rt0.c0, vt1.c2))) ORDER BY (((((x'')) NOT BETWEEN ((rt1.c1)) AND ((rt0.c2)))) NOTNULL) DESC  NULLS LAST, ((((rt0.c0)OR(rt0.c1)))AND('35n#s')) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt1 FULL OUTER JOIN rt1 ON (((((vt1.c1) IS FALSE), TRIM(DISTINCT rt1.c2), (NOT (rt0.c1))))<((rt1.c0, rt0.c0, vt1.c2))) WHERE ((((vt1.c0))<>((CAST(rt1.c1 AS INTEGER))))) ORDER BY (((((x'')) NOT BETWEEN ((rt1.c1)) AND ((rt0.c2)))) NOTNULL) DESC  NULLS LAST, ((((rt0.c0)OR(rt0.c1)))AND('35n#s')) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0))<>((CAST(rt1.c1 AS INTEGER))))) IS TRUE)  as count FROM rt0, vt1 FULL OUTER JOIN rt1 ON (((((vt1.c1) IS FALSE), TRIM(DISTINCT rt1.c2), (NOT (rt0.c1))))<((rt1.c0, rt0.c0, vt1.c2))) ORDER BY (((((x'')) NOT BETWEEN ((rt1.c1)) AND ((rt0.c2)))) NOTNULL) DESC  NULLS LAST, ((((rt0.c0)OR(rt0.c1)))AND('35n#s')) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt1 FULL OUTER JOIN rt1 ON (((((vt1.c1) IS FALSE), TRIM(DISTINCT rt1.c2), (NOT (rt0.c1))))<((rt1.c0, rt0.c0, vt1.c2))) WHERE ((((vt1.c0))<>((CAST(rt1.c1 AS INTEGER))))) ORDER BY (((((x'')) NOT BETWEEN ((rt1.c1)) AND ((rt0.c2)))) NOTNULL) DESC  NULLS LAST, ((((rt0.c0)OR(rt0.c1)))AND('35n#s')) COLLATE BINARY ASC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (((((((rt1.c2)OR(rt1.c2)))OR('1022450656')))AND(CASE rt1.c4  WHEN rt1.c4 THEN '' ELSE rt1.c4 END))) ORDER BY (((- (rt1.c2)))>=((((rt1.c1, rt1.c1, rt1.c3))<=((rt1.c1, rt1.c0, 0x474168da)))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)OR(rt1.c2)))OR('1022450656')))AND(CASE rt1.c4  WHEN rt1.c4 THEN '' ELSE rt1.c4 END))) IS TRUE)  as count FROM rt1 ORDER BY (((- (rt1.c2)))>=((((rt1.c1, rt1.c1, rt1.c3))<=((rt1.c1, rt1.c0, 0x474168da))))));
SELECT ALL * FROM rt1 WHERE (((((((rt1.c2)OR(rt1.c2)))OR('1022450656')))AND(CASE rt1.c4  WHEN rt1.c4 THEN '' ELSE rt1.c4 END))) ORDER BY (((- (rt1.c2)))>=((((rt1.c1, rt1.c1, rt1.c3))<=((rt1.c1, rt1.c0, 0x474168da)))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)OR(rt1.c2)))OR('1022450656')))AND(CASE rt1.c4  WHEN rt1.c4 THEN '' ELSE rt1.c4 END))) IS TRUE)  as count FROM rt1 ORDER BY (((- (rt1.c2)))>=((((rt1.c1, rt1.c1, rt1.c3))<=((rt1.c1, rt1.c0, 0x474168da))))));
SELECT ALL * FROM rt1 WHERE (((((((rt1.c2)OR(rt1.c2)))OR('1022450656')))AND(CASE rt1.c4  WHEN rt1.c4 THEN '' ELSE rt1.c4 END))) ORDER BY (((- (rt1.c2)))>=((((rt1.c1, rt1.c1, rt1.c3))<=((rt1.c1, rt1.c0, 0x474168da)))));
SELECT ALL * FROM rt0, rt1, vt1 WHERE ((((((rt0.c1))!=((rt0.c0))))>=((((NULL))>((rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))!=((rt0.c0))))>=((((NULL))>((rt0.c2)))))) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT ALL * FROM rt0, rt1, vt1 WHERE ((((((rt0.c1))!=((rt0.c0))))>=((((NULL))>((rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))!=((rt0.c0))))>=((((NULL))>((rt0.c2)))))) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT ALL * FROM rt0, rt1, vt1 WHERE ((((((rt0.c1))!=((rt0.c0))))>=((((NULL))>((rt0.c2))))));
SELECT * FROM vt1, rt0 WHERE ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c2)) IN (273307849)));
SELECT SUM(count) FROM (SELECT (((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c2)) IN (273307849))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c2)) IN (273307849)));
SELECT SUM(count) FROM (SELECT (((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c2)) IN (273307849))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c2)) IN (273307849)));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON ((((-7.47730936E8 IN ()), (((rt0.c1))>((vt1.c0))), (rt0.c0 IN ())))>(((('r')IS(vt1.c2)), ((vt1.c1) IS TRUE), ((rt0.c2) NOT NULL)))) WHERE (((CAST(vt1.c1 AS INTEGER)) IS FALSE)) ORDER BY (((vt1.c1)) BETWEEN ((rt0.c2)) AND (((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c1 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((((-7.47730936E8 IN ()), (((rt0.c1))>((vt1.c0))), (rt0.c0 IN ())))>(((('r')IS(vt1.c2)), ((vt1.c1) IS TRUE), ((rt0.c2) NOT NULL)))) ORDER BY (((vt1.c1)) BETWEEN ((rt0.c2)) AND (((+ (rt0.c0))))));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON ((((-7.47730936E8 IN ()), (((rt0.c1))>((vt1.c0))), (rt0.c0 IN ())))>(((('r')IS(vt1.c2)), ((vt1.c1) IS TRUE), ((rt0.c2) NOT NULL)))) WHERE (((CAST(vt1.c1 AS INTEGER)) IS FALSE)) ORDER BY (((vt1.c1)) BETWEEN ((rt0.c2)) AND (((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c1 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((((-7.47730936E8 IN ()), (((rt0.c1))>((vt1.c0))), (rt0.c0 IN ())))>(((('r')IS(vt1.c2)), ((vt1.c1) IS TRUE), ((rt0.c2) NOT NULL)))) ORDER BY (((vt1.c1)) BETWEEN ((rt0.c2)) AND (((+ (rt0.c0))))));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON ((((-7.47730936E8 IN ()), (((rt0.c1))>((vt1.c0))), (rt0.c0 IN ())))>(((('r')IS(vt1.c2)), ((vt1.c1) IS TRUE), ((rt0.c2) NOT NULL)))) WHERE (((CAST(vt1.c1 AS INTEGER)) IS FALSE)) ORDER BY (((vt1.c1)) BETWEEN ((rt0.c2)) AND (((+ (rt0.c0)))));
SELECT COUNT(*) FROM vt1, rt0, rt1 WHERE (((((rt0.c2)<=(rt0.c1)))AND((((vt1.c1))<=((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<=(rt0.c1)))AND((((vt1.c1))<=((rt0.c2)))))) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT COUNT(*) FROM vt1, rt0, rt1 WHERE (((((rt0.c2)<=(rt0.c1)))AND((((vt1.c1))<=((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<=(rt0.c1)))AND((((vt1.c1))<=((rt0.c2)))))) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT COUNT(*) FROM vt1, rt0, rt1 WHERE (((((rt0.c2)<=(rt0.c1)))AND((((vt1.c1))<=((rt0.c2))))));
SELECT * FROM rt1, vt1 WHERE ((rt1.c1 COLLATE RTRIM IN ())) ORDER BY CAST((((rt1.c2, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0))) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt1, vt1 ORDER BY CAST((((rt1.c2, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0))) AS REAL)  NULLS FIRST);
SELECT * FROM rt1, vt1 WHERE ((rt1.c1 COLLATE RTRIM IN ())) ORDER BY CAST((((rt1.c2, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0))) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt1, vt1 ORDER BY CAST((((rt1.c2, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0))) AS REAL)  NULLS FIRST);
SELECT * FROM rt1, vt1 WHERE ((rt1.c1 COLLATE RTRIM IN ())) ORDER BY CAST((((rt1.c2, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0))) AS REAL)  NULLS FIRST;
SELECT ALL * FROM vt1, rt0 WHERE (((((vt1.c1)!=(vt1.c0)))!=((NOT (vt1.c0))))) ORDER BY ((vt1.c2 COLLATE BINARY)||(((('618387600')) NOT BETWEEN ((vt1.c0)) AND (('⸘k'))))), ((((NULL) NOT BETWEEN (vt1.c2) AND ('TRUE')))||(((NULL)*(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)!=(vt1.c0)))<>((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((vt1.c2 COLLATE BINARY)||(((('618387600')) NOT BETWEEN ((vt1.c0)) AND (('⸘k'))))), ((((NULL) NOT BETWEEN (vt1.c2) AND ('TRUE')))||(((NULL)*(vt1.c1)))));
SELECT ALL * FROM vt1, rt0 WHERE (((((vt1.c1)!=(vt1.c0)))!=((NOT (vt1.c0))))) ORDER BY ((vt1.c2 COLLATE BINARY)||(((('618387600')) NOT BETWEEN ((vt1.c0)) AND (('⸘k'))))), ((((NULL) NOT BETWEEN (vt1.c2) AND ('TRUE')))||(((NULL)*(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)!=(vt1.c0)))<>((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((vt1.c2 COLLATE BINARY)||(((('618387600')) NOT BETWEEN ((vt1.c0)) AND (('⸘k'))))), ((((NULL) NOT BETWEEN (vt1.c2) AND ('TRUE')))||(((NULL)*(vt1.c1)))));
SELECT ALL * FROM vt1, rt0 WHERE (((((vt1.c1)!=(vt1.c0)))!=((NOT (vt1.c0))))) ORDER BY ((vt1.c2 COLLATE BINARY)||(((('618387600')) NOT BETWEEN ((vt1.c0)) AND (('⸘k'))))), ((((NULL) NOT BETWEEN (vt1.c2) AND ('TRUE')))||(((NULL)*(vt1.c1))));
SELECT COUNT(*) FROM rt0 WHERE (CASE ((rt0.c1)AND(rt0.c0))  WHEN ((rt0.c0)||(rt0.c0)) THEN rt0.c0 END) ORDER BY CASE WHEN CAST(rt0.c0 AS REAL) THEN (- (rt0.c0)) WHEN ((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)) THEN CAST(rt0.c2 AS TEXT) WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) ELSE COALESCE(1.152104209E9, rt0.c0, rt0.c0, NULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1)AND(rt0.c0))  WHEN ((rt0.c0)||(rt0.c0)) THEN rt0.c0 END) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CAST(rt0.c0 AS REAL) THEN (- (rt0.c0)) WHEN ((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)) THEN CAST(rt0.c2 AS TEXT) WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) ELSE COALESCE(1.152104209E9, rt0.c0, rt0.c0, NULL) END  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CASE ((rt0.c1)AND(rt0.c0))  WHEN ((rt0.c0)||(rt0.c0)) THEN rt0.c0 END) ORDER BY CASE WHEN CAST(rt0.c0 AS REAL) THEN (- (rt0.c0)) WHEN ((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)) THEN CAST(rt0.c2 AS TEXT) WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) ELSE COALESCE(1.152104209E9, rt0.c0, rt0.c0, NULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1)AND(rt0.c0))  WHEN ((rt0.c0)||(rt0.c0)) THEN rt0.c0 END) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CAST(rt0.c0 AS REAL) THEN (- (rt0.c0)) WHEN ((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)) THEN CAST(rt0.c2 AS TEXT) WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) ELSE COALESCE(1.152104209E9, rt0.c0, rt0.c0, NULL) END  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CASE ((rt0.c1)AND(rt0.c0))  WHEN ((rt0.c0)||(rt0.c0)) THEN rt0.c0 END) ORDER BY CASE WHEN CAST(rt0.c0 AS REAL) THEN (- (rt0.c0)) WHEN ((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)) THEN CAST(rt0.c2 AS TEXT) WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) ELSE COALESCE(1.152104209E9, rt0.c0, rt0.c0, NULL) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE (CAST(rt0.c2 COLLATE RTRIM AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE (CAST(rt0.c2 COLLATE RTRIM AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE (CAST(rt0.c2 COLLATE RTRIM AS BLOB));
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c1 COLLATE BINARY)IS NOT(CAST(NULL AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE BINARY)IS NOT(CAST(NULL AS BLOB)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c1 COLLATE BINARY)IS NOT(CAST(NULL AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE BINARY)IS NOT(CAST(NULL AS BLOB)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c1 COLLATE BINARY)IS NOT(CAST(NULL AS BLOB))));
SELECT ALL * FROM vt1, rt0, rt1 WHERE (((rt1.c2 IN (vt1.c2)) IN ())) ORDER BY (CASE WHEN rt0.c1 THEN rt0.c0 ELSE 'a' END IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 IN (vt1.c2)) IN ())) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY (CASE WHEN rt0.c1 THEN rt0.c0 ELSE 'a' END IN ()) DESC);
SELECT ALL * FROM vt1, rt0, rt1 WHERE (((rt1.c2 IN (vt1.c2)) IN ())) ORDER BY (CASE WHEN rt0.c1 THEN rt0.c0 ELSE 'a' END IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 IN (vt1.c2)) IN ())) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY (CASE WHEN rt0.c1 THEN rt0.c0 ELSE 'a' END IN ()) DESC);
SELECT ALL * FROM vt1, rt0, rt1 WHERE (((rt1.c2 IN (vt1.c2)) IN ())) ORDER BY (CASE WHEN rt0.c1 THEN rt0.c0 ELSE 'a' END IN ()) DESC;
SELECT * FROM rt0, rt1, vt1 WHERE (CASE ((rt1.c1)IS(vt1.c0))  WHEN rt0.c0 THEN (~ (vt1.c1)) ELSE (((vt1.c1)) NOT BETWEEN ((rt1.c4)) AND ((rt0.c0))) END) ORDER BY ((vt1.c1)||(rt1.c4)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c1)IS(vt1.c0))  WHEN rt0.c0 THEN (~ (vt1.c1)) ELSE (((vt1.c1)) NOT BETWEEN ((rt1.c4)) AND ((rt0.c0))) END) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY ((vt1.c1)||(rt1.c4)) COLLATE NOCASE  NULLS LAST);
SELECT * FROM rt0, rt1, vt1 WHERE (CASE ((rt1.c1)IS(vt1.c0))  WHEN rt0.c0 THEN (~ (vt1.c1)) ELSE (((vt1.c1)) NOT BETWEEN ((rt1.c4)) AND ((rt0.c0))) END) ORDER BY ((vt1.c1)||(rt1.c4)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c1)IS(vt1.c0))  WHEN rt0.c0 THEN (~ (vt1.c1)) ELSE (((vt1.c1)) NOT BETWEEN ((rt1.c4)) AND ((rt0.c0))) END) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY ((vt1.c1)||(rt1.c4)) COLLATE NOCASE  NULLS LAST);
SELECT * FROM rt0, rt1, vt1 WHERE (CASE ((rt1.c1)IS(vt1.c0))  WHEN rt0.c0 THEN (~ (vt1.c1)) ELSE (((vt1.c1)) NOT BETWEEN ((rt1.c4)) AND ((rt0.c0))) END) ORDER BY ((vt1.c1)||(rt1.c4)) COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((vt1.c1) BETWEEN (rt0.c2) AND (vt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt1.c1) BETWEEN (rt0.c2) AND (vt1.c1)) IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((vt1.c1) BETWEEN (rt0.c2) AND (vt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt1.c1) BETWEEN (rt0.c2) AND (vt1.c1)) IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((vt1.c1) BETWEEN (rt0.c2) AND (vt1.c1)) IN ()));
SELECT COUNT(*) FROM vt1, rt0 FULL OUTER JOIN rt1 ON (((NULL, rt0.c1, vt1.c2)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (0.07362315068592618)), ((((((((vt1.c2)AND(rt1.c2)))AND(rt0.c0)))OR(rt1.c0)))AND(rt1.c4)), LIKELY(DISTINCT rt1.c4))) AND ((((rt1.c2)LIKE(vt1.c0)), (((vt1.c2, rt1.c2, rt1.c4)) BETWEEN ((rt0.c1, vt1.c0, rt1.c0)) AND ((rt1.c0, rt1.c3, rt0.c1))), CAST(rt1.c4 AS BLOB)))) WHERE (LOWER(DISTINCT x'')) ORDER BY ((HEX(DISTINCT vt1.c2))IS(((rt1.c3) ISNULL))) DESC  NULLS FIRST, (((- (vt1.c1))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT x'')) IS TRUE)  as count FROM vt1, rt0 FULL OUTER JOIN rt1 ON (((NULL, rt0.c1, vt1.c2)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (0.07362315068592618)), ((((((((vt1.c2)AND(rt1.c2)))AND(rt0.c0)))OR(rt1.c0)))AND(rt1.c4)), LIKELY(DISTINCT rt1.c4))) AND ((((rt1.c2)LIKE(vt1.c0)), (((vt1.c2, rt1.c2, rt1.c4)) BETWEEN ((rt0.c1, vt1.c0, rt1.c0)) AND ((rt1.c0, rt1.c3, rt0.c1))), CAST(rt1.c4 AS BLOB)))) ORDER BY ((HEX(DISTINCT vt1.c2))IS(((rt1.c3) ISNULL))) DESC  NULLS FIRST, (((- (vt1.c1))) IS TRUE));
SELECT COUNT(*) FROM vt1, rt0 FULL OUTER JOIN rt1 ON (((NULL, rt0.c1, vt1.c2)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (0.07362315068592618)), ((((((((vt1.c2)AND(rt1.c2)))AND(rt0.c0)))OR(rt1.c0)))AND(rt1.c4)), LIKELY(DISTINCT rt1.c4))) AND ((((rt1.c2)LIKE(vt1.c0)), (((vt1.c2, rt1.c2, rt1.c4)) BETWEEN ((rt0.c1, vt1.c0, rt1.c0)) AND ((rt1.c0, rt1.c3, rt0.c1))), CAST(rt1.c4 AS BLOB)))) WHERE (LOWER(DISTINCT x'')) ORDER BY ((HEX(DISTINCT vt1.c2))IS(((rt1.c3) ISNULL))) DESC  NULLS FIRST, (((- (vt1.c1))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT x'')) IS TRUE)  as count FROM vt1, rt0 FULL OUTER JOIN rt1 ON (((NULL, rt0.c1, vt1.c2)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (0.07362315068592618)), ((((((((vt1.c2)AND(rt1.c2)))AND(rt0.c0)))OR(rt1.c0)))AND(rt1.c4)), LIKELY(DISTINCT rt1.c4))) AND ((((rt1.c2)LIKE(vt1.c0)), (((vt1.c2, rt1.c2, rt1.c4)) BETWEEN ((rt0.c1, vt1.c0, rt1.c0)) AND ((rt1.c0, rt1.c3, rt0.c1))), CAST(rt1.c4 AS BLOB)))) ORDER BY ((HEX(DISTINCT vt1.c2))IS(((rt1.c3) ISNULL))) DESC  NULLS FIRST, (((- (vt1.c1))) IS TRUE));
SELECT COUNT(*) FROM vt1, rt0 FULL OUTER JOIN rt1 ON (((NULL, rt0.c1, vt1.c2)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (0.07362315068592618)), ((((((((vt1.c2)AND(rt1.c2)))AND(rt0.c0)))OR(rt1.c0)))AND(rt1.c4)), LIKELY(DISTINCT rt1.c4))) AND ((((rt1.c2)LIKE(vt1.c0)), (((vt1.c2, rt1.c2, rt1.c4)) BETWEEN ((rt0.c1, vt1.c0, rt1.c0)) AND ((rt1.c0, rt1.c3, rt0.c1))), CAST(rt1.c4 AS BLOB)))) WHERE (LOWER(DISTINCT x'')) ORDER BY ((HEX(DISTINCT vt1.c2))IS(((rt1.c3) ISNULL))) DESC  NULLS FIRST, (((- (vt1.c1))) IS TRUE);
SELECT ALL COUNT(*) FROM rt0, rt1 RIGHT OUTER JOIN vt1 ON LIKELIHOOD(CAST(rt1.c0 AS NUMERIC), 0.011995985125490383) WHERE (CAST(((rt1.c2) IS FALSE) AS BLOB)) ORDER BY (((vt1.c0) NOT NULL) IN ()), (((rt1.c4 COLLATE NOCASE))>((rt0.c1 COLLATE NOCASE)))  NULLS FIRST, ((((((rt1.c1) NOT BETWEEN (vt1.c0) AND (rt1.c4)))AND(((rt0.c2)>=(vt1.c2)))))OR((rt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2) IS FALSE) AS BLOB)) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN vt1 ON LIKELIHOOD(CAST(rt1.c0 AS NUMERIC), 0.011995985125490383) ORDER BY (((vt1.c0) NOT NULL) IN ()), (((rt1.c4 COLLATE NOCASE))>((rt0.c1 COLLATE NOCASE)))  NULLS FIRST, ((((((rt1.c1) NOT BETWEEN (vt1.c0) AND (rt1.c4)))AND(((rt0.c2)>=(vt1.c2)))))OR((rt0.c0 IN ()))) ASC);
SELECT ALL COUNT(*) FROM rt0, rt1 RIGHT OUTER JOIN vt1 ON LIKELIHOOD(CAST(rt1.c0 AS NUMERIC), 0.011995985125490383) WHERE (CAST(((rt1.c2) IS FALSE) AS BLOB)) ORDER BY (((vt1.c0) NOT NULL) IN ()), (((rt1.c4 COLLATE NOCASE))>((rt0.c1 COLLATE NOCASE)))  NULLS FIRST, ((((((rt1.c1) NOT BETWEEN (vt1.c0) AND (rt1.c4)))AND(((rt0.c2)>=(vt1.c2)))))OR((rt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2) IS FALSE) AS BLOB)) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN vt1 ON LIKELIHOOD(CAST(rt1.c0 AS NUMERIC), 0.011995985125490383) ORDER BY (((vt1.c0) NOT NULL) IN ()), (((rt1.c4 COLLATE NOCASE))>((rt0.c1 COLLATE NOCASE)))  NULLS FIRST, ((((((rt1.c1) NOT BETWEEN (vt1.c0) AND (rt1.c4)))AND(((rt0.c2)>=(vt1.c2)))))OR((rt0.c0 IN ()))) ASC);
SELECT ALL COUNT(*) FROM rt0, rt1 RIGHT OUTER JOIN vt1 ON LIKELIHOOD(CAST(rt1.c0 AS NUMERIC), 0.011995985125490383) WHERE (CAST(((rt1.c2) IS FALSE) AS BLOB)) ORDER BY (((vt1.c0) NOT NULL) IN ()), (((rt1.c4 COLLATE NOCASE))>((rt0.c1 COLLATE NOCASE)))  NULLS FIRST, ((((((rt1.c1) NOT BETWEEN (vt1.c0) AND (rt1.c4)))AND(((rt0.c2)>=(vt1.c2)))))OR((rt0.c0 IN ()))) ASC;
SELECT ALL * FROM rt1, rt0 WHERE (x'3a8c') ORDER BY ((((((((((rt1.c2) IS FALSE))OR(rt0.c2 COLLATE NOCASE)))OR(CAST('' AS TEXT))))OR(CAST(rt1.c4 AS NUMERIC))))OR(((rt1.c4) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'3a8c') IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((((((((rt1.c2) IS FALSE))OR(rt0.c2 COLLATE NOCASE)))OR(CAST('' AS TEXT))))OR(CAST(rt1.c4 AS NUMERIC))))OR(((rt1.c4) IS FALSE)))  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE (x'3a8c') ORDER BY ((((((((((rt1.c2) IS FALSE))OR(rt0.c2 COLLATE NOCASE)))OR(CAST('' AS TEXT))))OR(CAST(rt1.c4 AS NUMERIC))))OR(((rt1.c4) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'3a8c') IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((((((((rt1.c2) IS FALSE))OR(rt0.c2 COLLATE NOCASE)))OR(CAST('' AS TEXT))))OR(CAST(rt1.c4 AS NUMERIC))))OR(((rt1.c4) IS FALSE)))  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE (x'3a8c') ORDER BY ((((((((((rt1.c2) IS FALSE))OR(rt0.c2 COLLATE NOCASE)))OR(CAST('' AS TEXT))))OR(CAST(rt1.c4 AS NUMERIC))))OR(((rt1.c4) IS FALSE)))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt1 RIGHT OUTER JOIN rt1 ON UNLIKELY(((rt1.c2) BETWEEN (rt1.c3) AND (vt1.c1))) WHERE (rt1.c3) ORDER BY CAST('' AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt0, vt1 RIGHT OUTER JOIN rt1 ON UNLIKELY(((rt1.c2) BETWEEN (rt1.c3) AND (vt1.c1))) ORDER BY CAST('' AS BLOB) DESC);
SELECT COUNT(*) FROM rt0, vt1 RIGHT OUTER JOIN rt1 ON UNLIKELY(((rt1.c2) BETWEEN (rt1.c3) AND (vt1.c1))) WHERE (rt1.c3) ORDER BY CAST('' AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt0, vt1 RIGHT OUTER JOIN rt1 ON UNLIKELY(((rt1.c2) BETWEEN (rt1.c3) AND (vt1.c1))) ORDER BY CAST('' AS BLOB) DESC);
SELECT COUNT(*) FROM rt0, vt1 RIGHT OUTER JOIN rt1 ON UNLIKELY(((rt1.c2) BETWEEN (rt1.c3) AND (vt1.c1))) WHERE (rt1.c3) ORDER BY CAST('' AS BLOB) DESC;
SELECT ALL * FROM rt0 WHERE ((((NOT (rt0.c0)))%((((rt0.c2, rt0.c1, rt0.c1))<((rt0.c2, rt0.c1, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c0)))%((((rt0.c2, rt0.c1, rt0.c1))<((rt0.c2, rt0.c1, rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((NOT (rt0.c0)))%((((rt0.c2, rt0.c1, rt0.c1))<((rt0.c2, rt0.c1, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c0)))%((((rt0.c2, rt0.c1, rt0.c1))<((rt0.c2, rt0.c1, rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((NOT (rt0.c0)))%((((rt0.c2, rt0.c1, rt0.c1))<((rt0.c2, rt0.c1, rt0.c0))))));
SELECT * FROM vt1 WHERE (CAST(CASE WHEN vt1.c2 THEN vt1.c2 ELSE 0.4335472835507629 END AS REAL)) ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt1.c2 THEN vt1.c2 ELSE 0.4335472835507629 END AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC);
SELECT * FROM vt1 WHERE (CAST(CASE WHEN vt1.c2 THEN vt1.c2 ELSE 0.4335472835507629 END AS REAL)) ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt1.c2 THEN vt1.c2 ELSE 0.4335472835507629 END AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC);
SELECT * FROM vt1 WHERE (CAST(CASE WHEN vt1.c2 THEN vt1.c2 ELSE 0.4335472835507629 END AS REAL)) ORDER BY vt1.c0 ASC;
SELECT * FROM vt1, rt0, rt1 WHERE (CAST(rt0.c2 COLLATE NOCASE AS TEXT)) ORDER BY ((('0.07362315068592618'))>=(('')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY ((('0.07362315068592618'))>=(('')))  NULLS FIRST);
SELECT * FROM vt1, rt0, rt1 WHERE (CAST(rt0.c2 COLLATE NOCASE AS TEXT)) ORDER BY ((('0.07362315068592618'))>=(('')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY ((('0.07362315068592618'))>=(('')))  NULLS FIRST);
SELECT * FROM vt1, rt0, rt1 WHERE (CAST(rt0.c2 COLLATE NOCASE AS TEXT)) ORDER BY ((('0.07362315068592618'))>=(('')))  NULLS FIRST;
SELECT COUNT(*) FROM rt1, rt0 LEFT OUTER JOIN vt1 ON CAST(((rt1.c1)AND(vt1.c1)) AS NUMERIC) WHERE (CASE WHEN vt1.c2 THEN CASE 0.24528761249742015  WHEN '1285812874' THEN rt0.c2 WHEN rt1.c0 THEN vt1.c1 WHEN rt1.c4 THEN rt1.c1 ELSE 238711567 END ELSE rt1.c2 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c2 THEN CASE 0.24528761249742015  WHEN '1285812874' THEN rt0.c2 WHEN rt1.c0 THEN vt1.c1 WHEN rt1.c4 THEN rt1.c1 ELSE 238711567 END ELSE rt1.c2 COLLATE NOCASE END) IS TRUE)  as count FROM rt1, rt0 LEFT OUTER JOIN vt1 ON CAST(((rt1.c1)AND(vt1.c1)) AS NUMERIC));
SELECT COUNT(*) FROM rt1, rt0 LEFT OUTER JOIN vt1 ON CAST(((rt1.c1)AND(vt1.c1)) AS NUMERIC) WHERE (CASE WHEN vt1.c2 THEN CASE 0.24528761249742015  WHEN '1285812874' THEN rt0.c2 WHEN rt1.c0 THEN vt1.c1 WHEN rt1.c4 THEN rt1.c1 ELSE 238711567 END ELSE rt1.c2 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c2 THEN CASE 0.24528761249742015  WHEN '1285812874' THEN rt0.c2 WHEN rt1.c0 THEN vt1.c1 WHEN rt1.c4 THEN rt1.c1 ELSE 238711567 END ELSE rt1.c2 COLLATE NOCASE END) IS TRUE)  as count FROM rt1, rt0 LEFT OUTER JOIN vt1 ON CAST(((rt1.c1)AND(vt1.c1)) AS NUMERIC));
SELECT COUNT(*) FROM rt1, rt0 LEFT OUTER JOIN vt1 ON CAST(((rt1.c1)AND(vt1.c1)) AS NUMERIC) WHERE (CASE WHEN vt1.c2 THEN CASE 0.24528761249742015  WHEN '1285812874' THEN rt0.c2 WHEN rt1.c0 THEN vt1.c1 WHEN rt1.c4 THEN rt1.c1 ELSE 238711567 END ELSE rt1.c2 COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt1 ON (((rt1.c4, vt1.c2, vt1.c2)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (rt1.c4) AND (rt1.c4)), ((rt1.c4)+(vt1.c2)), CASE vt1.c2  WHEN vt1.c2 THEN rt1.c4 END)) AND ((((rt1.c3)|(rt1.c3)), CAST(x'' AS TEXT), (+ (x''))))) WHERE (0x30111699);
SELECT SUM(count) FROM (SELECT ((0X30111699) IS TRUE)  as count FROM vt1 INNER JOIN rt1 ON (((rt1.c4, vt1.c2, vt1.c2)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (rt1.c4) AND (rt1.c4)), ((rt1.c4)+(vt1.c2)), CASE vt1.c2  WHEN vt1.c2 THEN rt1.c4 END)) AND ((((rt1.c3)|(rt1.c3)), CAST(x'' AS TEXT), (+ (x''))))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt1 ON (((rt1.c4, vt1.c2, vt1.c2)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (rt1.c4) AND (rt1.c4)), ((rt1.c4)+(vt1.c2)), CASE vt1.c2  WHEN vt1.c2 THEN rt1.c4 END)) AND ((((rt1.c3)|(rt1.c3)), CAST(x'' AS TEXT), (+ (x''))))) WHERE (0x30111699);
SELECT SUM(count) FROM (SELECT ((0X30111699) IS TRUE)  as count FROM vt1 INNER JOIN rt1 ON (((rt1.c4, vt1.c2, vt1.c2)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (rt1.c4) AND (rt1.c4)), ((rt1.c4)+(vt1.c2)), CASE vt1.c2  WHEN vt1.c2 THEN rt1.c4 END)) AND ((((rt1.c3)|(rt1.c3)), CAST(x'' AS TEXT), (+ (x''))))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt1 ON (((rt1.c4, vt1.c2, vt1.c2)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (rt1.c4) AND (rt1.c4)), ((rt1.c4)+(vt1.c2)), CASE vt1.c2  WHEN vt1.c2 THEN rt1.c4 END)) AND ((((rt1.c3)|(rt1.c3)), CAST(x'' AS TEXT), (+ (x''))))) WHERE (0x30111699);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (((((vt1.c2)OR(vt1.c2)))OR(vt1.c2))))) ORDER BY ((((vt1.c1) BETWEEN (vt1.c2) AND ('')))AND(((((vt1.c2)OR(vt1.c2)))AND(vt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((~ (((((vt1.c2)OR(vt1.c2)))OR(vt1.c2))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1) BETWEEN (vt1.c2) AND ('')))AND(((((vt1.c2)OR(vt1.c2)))AND(vt1.c1)))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (((((vt1.c2)OR(vt1.c2)))OR(vt1.c2))))) ORDER BY ((((vt1.c1) BETWEEN (vt1.c2) AND ('')))AND(((((vt1.c2)OR(vt1.c2)))AND(vt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((~ (((((vt1.c2)OR(vt1.c2)))OR(vt1.c2))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1) BETWEEN (vt1.c2) AND ('')))AND(((((vt1.c2)OR(vt1.c2)))AND(vt1.c1)))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (((((vt1.c2)OR(vt1.c2)))OR(vt1.c2))))) ORDER BY ((((vt1.c1) BETWEEN (vt1.c2) AND ('')))AND(((((vt1.c2)OR(vt1.c2)))AND(vt1.c1)))) ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c1) ORDER BY ((CASE x''  WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c1 END)OR(CAST(rt1.c3 AS BLOB)))  NULLS LAST, ((((rt1.c3))==((rt1.c2))) IN ()), ((((((rt1.c4)AND(rt1.c4)))AND(rt1.c4))) BETWEEN ((- (rt1.c2))) AND (CAST(0.6366005111288453 AS TEXT))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY ((CASE x''  WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c1 END)OR(CAST(rt1.c3 AS BLOB)))  NULLS LAST, ((((rt1.c3))==((rt1.c2))) IN ()), ((((((rt1.c4)AND(rt1.c4)))AND(rt1.c4))) BETWEEN ((- (rt1.c2))) AND (CAST(0.6366005111288453 AS TEXT))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c1) ORDER BY ((CASE x''  WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c1 END)OR(CAST(rt1.c3 AS BLOB)))  NULLS LAST, ((((rt1.c3))==((rt1.c2))) IN ()), ((((((rt1.c4)AND(rt1.c4)))AND(rt1.c4))) BETWEEN ((- (rt1.c2))) AND (CAST(0.6366005111288453 AS TEXT))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY ((CASE x''  WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c1 END)OR(CAST(rt1.c3 AS BLOB)))  NULLS LAST, ((((rt1.c3))==((rt1.c2))) IN ()), ((((((rt1.c4)AND(rt1.c4)))AND(rt1.c4))) BETWEEN ((- (rt1.c2))) AND (CAST(0.6366005111288453 AS TEXT))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c1) ORDER BY ((CASE x''  WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c1 END)OR(CAST(rt1.c3 AS BLOB)))  NULLS LAST, ((((rt1.c3))==((rt1.c2))) IN ()), ((((((rt1.c4)AND(rt1.c4)))AND(rt1.c4))) BETWEEN ((- (rt1.c2))) AND (CAST(0.6366005111288453 AS TEXT))) DESC  NULLS LAST;
SELECT * FROM rt0, vt1 FULL OUTER JOIN rt1 ON (((((rt1.c1))>=((rt1.c2)))) NOT BETWEEN (((rt0.c0) NOTNULL)) AND (vt1.c0 COLLATE RTRIM)) WHERE (CASE WHEN ((rt1.c0) NOTNULL) THEN vt1.c1 WHEN ((vt1.c1)=(x'')) THEN ((rt1.c0)+('1484540350')) WHEN CASE vt1.c1  WHEN 'HH1i' THEN rt1.c3 END THEN (~ (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c0) NOTNULL) THEN vt1.c1 WHEN ((vt1.c1)==(x'')) THEN ((rt1.c0)+('1484540350')) WHEN CASE vt1.c1  WHEN 'HH1i' THEN rt1.c3 END THEN (~ (vt1.c0)) END) IS TRUE)  as count FROM rt0, vt1 FULL OUTER JOIN rt1 ON (((((rt1.c1))>=((rt1.c2)))) NOT BETWEEN (((rt0.c0) NOTNULL)) AND (vt1.c0 COLLATE RTRIM)));
SELECT * FROM rt0, vt1 FULL OUTER JOIN rt1 ON (((((rt1.c1))>=((rt1.c2)))) NOT BETWEEN (((rt0.c0) NOTNULL)) AND (vt1.c0 COLLATE RTRIM)) WHERE (CASE WHEN ((rt1.c0) NOTNULL) THEN vt1.c1 WHEN ((vt1.c1)=(x'')) THEN ((rt1.c0)+('1484540350')) WHEN CASE vt1.c1  WHEN 'HH1i' THEN rt1.c3 END THEN (~ (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c0) NOTNULL) THEN vt1.c1 WHEN ((vt1.c1)==(x'')) THEN ((rt1.c0)+('1484540350')) WHEN CASE vt1.c1  WHEN 'HH1i' THEN rt1.c3 END THEN (~ (vt1.c0)) END) IS TRUE)  as count FROM rt0, vt1 FULL OUTER JOIN rt1 ON (((((rt1.c1))>=((rt1.c2)))) NOT BETWEEN (((rt0.c0) NOTNULL)) AND (vt1.c0 COLLATE RTRIM)));
SELECT * FROM rt0, vt1 FULL OUTER JOIN rt1 ON (((((rt1.c1))>=((rt1.c2)))) NOT BETWEEN (((rt0.c0) NOTNULL)) AND (vt1.c0 COLLATE RTRIM)) WHERE (CASE WHEN ((rt1.c0) NOTNULL) THEN vt1.c1 WHEN ((vt1.c1)=(x'')) THEN ((rt1.c0)+('1484540350')) WHEN CASE vt1.c1  WHEN 'HH1i' THEN rt1.c3 END THEN (~ (vt1.c0)) END);
SELECT * FROM rt1 RIGHT OUTER JOIN vt1 ON (rt1.c2 IN ((+ (vt1.c2)))) FULL OUTER JOIN rt0 ON TRIM(CASE vt1.c0  WHEN rt1.c0 THEN vt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt0.c0 THEN rt1.c2 END, (((NULL, vt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c0, rt1.c2, rt0.c0)) AND ((vt1.c1, rt1.c4, vt1.c2)))) WHERE ((((NOT (rt1.c0)))>=((((rt1.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((vt1.c2, rt0.c2, vt1.c0)) AND ((rt0.c1, rt0.c0, vt1.c2)))))) ORDER BY ((CAST(vt1.c2 AS NUMERIC))%(((vt1.c2) BETWEEN (vt1.c0) AND (rt1.c3)))) ASC;
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c0)))>=((((rt1.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((vt1.c2, rt0.c2, vt1.c0)) AND ((rt0.c1, rt0.c0, vt1.c2)))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt1 ON (rt1.c2 IN ((+ (vt1.c2)))) FULL OUTER JOIN rt0 ON TRIM(CASE vt1.c0  WHEN rt1.c0 THEN vt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt0.c0 THEN rt1.c2 END, (((NULL, vt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c0, rt1.c2, rt0.c0)) AND ((vt1.c1, rt1.c4, vt1.c2)))) ORDER BY ((CAST(vt1.c2 AS NUMERIC))%(((vt1.c2) BETWEEN (vt1.c0) AND (rt1.c3)))) ASC);
SELECT * FROM rt1 RIGHT OUTER JOIN vt1 ON (rt1.c2 IN ((+ (vt1.c2)))) FULL OUTER JOIN rt0 ON TRIM(CASE vt1.c0  WHEN rt1.c0 THEN vt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt0.c0 THEN rt1.c2 END, (((NULL, vt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c0, rt1.c2, rt0.c0)) AND ((vt1.c1, rt1.c4, vt1.c2)))) WHERE ((((NOT (rt1.c0)))>=((((rt1.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((vt1.c2, rt0.c2, vt1.c0)) AND ((rt0.c1, rt0.c0, vt1.c2)))))) ORDER BY ((CAST(vt1.c2 AS NUMERIC))%(((vt1.c2) BETWEEN (vt1.c0) AND (rt1.c3)))) ASC;
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c0)))>=((((rt1.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((vt1.c2, rt0.c2, vt1.c0)) AND ((rt0.c1, rt0.c0, vt1.c2)))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt1 ON (rt1.c2 IN ((+ (vt1.c2)))) FULL OUTER JOIN rt0 ON TRIM(CASE vt1.c0  WHEN rt1.c0 THEN vt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt0.c0 THEN rt1.c2 END, (((NULL, vt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c0, rt1.c2, rt0.c0)) AND ((vt1.c1, rt1.c4, vt1.c2)))) ORDER BY ((CAST(vt1.c2 AS NUMERIC))%(((vt1.c2) BETWEEN (vt1.c0) AND (rt1.c3)))) ASC);
SELECT * FROM rt1 RIGHT OUTER JOIN vt1 ON (rt1.c2 IN ((+ (vt1.c2)))) FULL OUTER JOIN rt0 ON TRIM(CASE vt1.c0  WHEN rt1.c0 THEN vt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt0.c0 THEN rt1.c2 END, (((NULL, vt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c0, rt1.c2, rt0.c0)) AND ((vt1.c1, rt1.c4, vt1.c2)))) WHERE ((((NOT (rt1.c0)))>=((((rt1.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((vt1.c2, rt0.c2, vt1.c0)) AND ((rt0.c1, rt0.c0, vt1.c2)))))) ORDER BY ((CAST(vt1.c2 AS NUMERIC))%(((vt1.c2) BETWEEN (vt1.c0) AND (rt1.c3)))) ASC;
SELECT ALL * FROM rt1, rt0, vt1 WHERE (rt0.c2) ORDER BY ((vt1.c2 IN ()) IN (((((rt0.c0)AND(x'')))OR(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY ((vt1.c2 IN ()) IN (((((rt0.c0)AND(x'')))OR(vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM rt1, rt0, vt1 WHERE (rt0.c2) ORDER BY ((vt1.c2 IN ()) IN (((((rt0.c0)AND(x'')))OR(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY ((vt1.c2 IN ()) IN (((((rt0.c0)AND(x'')))OR(vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM rt1, rt0, vt1 WHERE (rt0.c2) ORDER BY ((vt1.c2 IN ()) IN (((((rt0.c0)AND(x'')))OR(vt1.c0))))  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((((~ (vt1.c1)))<<(((vt1.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c1)))<<(((vt1.c2) NOT NULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((~ (vt1.c1)))<<(((vt1.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c1)))<<(((vt1.c2) NOT NULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((~ (vt1.c1)))<<(((vt1.c2) NOT NULL))));
SELECT ALL * FROM rt1, vt1 LEFT OUTER JOIN rt0 ON (((((vt1.c0))>((rt1.c2))))<=(((rt1.c4) BETWEEN (vt1.c2) AND (rt1.c4)))) WHERE (((((((((((((((rt1.c2)==(rt0.c1)))OR(vt1.c2)))OR(rt1.c1 COLLATE RTRIM)))AND(((rt1.c1) NOT BETWEEN (vt1.c2) AND (rt1.c0)))))OR(((rt0.c1)+(rt0.c2)))))AND((('1105547773') IS FALSE))))OR(MIN(rt1.c3, vt1.c1)))) ORDER BY '0.14950506724117674';
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt1.c2)=(rt0.c1)))OR(vt1.c2)))OR(rt1.c1 COLLATE RTRIM)))AND(((rt1.c1) NOT BETWEEN (vt1.c2) AND (rt1.c0)))))OR(((rt0.c1)+(rt0.c2)))))AND((('1105547773') IS FALSE))))OR(MIN(rt1.c3, vt1.c1)))) IS TRUE)  as count FROM rt1, vt1 LEFT OUTER JOIN rt0 ON (((((vt1.c0))>((rt1.c2))))<=(((rt1.c4) BETWEEN (vt1.c2) AND (rt1.c4)))) ORDER BY '0.14950506724117674');
SELECT ALL * FROM rt1, vt1 LEFT OUTER JOIN rt0 ON (((((vt1.c0))>((rt1.c2))))<=(((rt1.c4) BETWEEN (vt1.c2) AND (rt1.c4)))) WHERE (((((((((((((((rt1.c2)==(rt0.c1)))OR(vt1.c2)))OR(rt1.c1 COLLATE RTRIM)))AND(((rt1.c1) NOT BETWEEN (vt1.c2) AND (rt1.c0)))))OR(((rt0.c1)+(rt0.c2)))))AND((('1105547773') IS FALSE))))OR(MIN(rt1.c3, vt1.c1)))) ORDER BY '0.14950506724117674';
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt1.c2)=(rt0.c1)))OR(vt1.c2)))OR(rt1.c1 COLLATE RTRIM)))AND(((rt1.c1) NOT BETWEEN (vt1.c2) AND (rt1.c0)))))OR(((rt0.c1)+(rt0.c2)))))AND((('1105547773') IS FALSE))))OR(MIN(rt1.c3, vt1.c1)))) IS TRUE)  as count FROM rt1, vt1 LEFT OUTER JOIN rt0 ON (((((vt1.c0))>((rt1.c2))))<=(((rt1.c4) BETWEEN (vt1.c2) AND (rt1.c4)))) ORDER BY '0.14950506724117674');
SELECT ALL * FROM rt1, vt1 LEFT OUTER JOIN rt0 ON (((((vt1.c0))>((rt1.c2))))<=(((rt1.c4) BETWEEN (vt1.c2) AND (rt1.c4)))) WHERE (((((((((((((((rt1.c2)==(rt0.c1)))OR(vt1.c2)))OR(rt1.c1 COLLATE RTRIM)))AND(((rt1.c1) NOT BETWEEN (vt1.c2) AND (rt1.c0)))))OR(((rt0.c1)+(rt0.c2)))))AND((('1105547773') IS FALSE))))OR(MIN(rt1.c3, vt1.c1)))) ORDER BY '0.14950506724117674';
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE (rt1.c3) ORDER BY ((CAST(vt1.c2 AS NUMERIC))LIKE(((vt1.c0)<(0.3432091680998084))));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY ((CAST(vt1.c2 AS NUMERIC))LIKE(((vt1.c0)<(0.3432091680998084)))));
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE (rt1.c3) ORDER BY ((CAST(vt1.c2 AS NUMERIC))LIKE(((vt1.c0)<(0.3432091680998084))));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY ((CAST(vt1.c2 AS NUMERIC))LIKE(((vt1.c0)<(0.3432091680998084)))));
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE (rt1.c3) ORDER BY ((CAST(vt1.c2 AS NUMERIC))LIKE(((vt1.c0)<(0.3432091680998084))));
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE ((- ((('0,尋') NOTNULL)))) ORDER BY ((CASE '634902948'  WHEN rt1.c3 THEN vt1.c1 ELSE vt1.c1 END) IS FALSE);
SELECT SUM(count) FROM (SELECT (((- ((('0,尋') NOTNULL)))) IS TRUE)  as count FROM vt1, rt1 ORDER BY ((CASE '634902948'  WHEN rt1.c3 THEN vt1.c1 ELSE vt1.c1 END) IS FALSE));
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE ((- ((('0,尋') NOTNULL)))) ORDER BY ((CASE '634902948'  WHEN rt1.c3 THEN vt1.c1 ELSE vt1.c1 END) IS FALSE);
SELECT SUM(count) FROM (SELECT (((- ((('0,尋') NOTNULL)))) IS TRUE)  as count FROM vt1, rt1 ORDER BY ((CASE '634902948'  WHEN rt1.c3 THEN vt1.c1 ELSE vt1.c1 END) IS FALSE));
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE ((- ((('0,尋') NOTNULL)))) ORDER BY ((CASE '634902948'  WHEN rt1.c3 THEN vt1.c1 ELSE vt1.c1 END) IS FALSE);
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE (((vt1.c1)AND(((vt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c4))))) ORDER BY rt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1)AND(((vt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c4))))) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY rt1.c1 ASC);
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE (((vt1.c1)AND(((vt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c4))))) ORDER BY rt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1)AND(((vt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c4))))) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY rt1.c1 ASC);
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE (((vt1.c1)AND(((vt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c4))))) ORDER BY rt1.c1 ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE (json_remove(((rt1.c0)-(rt1.c3)), (rt1.c1 IN ()), ((rt1.c1) IS TRUE), ((rt1.c4)-(rt1.c3)))) ORDER BY ((((rt1.c4)-(0.7520857452871827)))%((((rt1.c4))<>((rt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_remove(((rt1.c0)-(rt1.c3)), (rt1.c1 IN ()), ((rt1.c1) IS TRUE), ((rt1.c4)-(rt1.c3)))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c4)-(0.7520857452871827)))%((((rt1.c4))!=((rt1.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (json_remove(((rt1.c0)-(rt1.c3)), (rt1.c1 IN ()), ((rt1.c1) IS TRUE), ((rt1.c4)-(rt1.c3)))) ORDER BY ((((rt1.c4)-(0.7520857452871827)))%((((rt1.c4))<>((rt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_remove(((rt1.c0)-(rt1.c3)), (rt1.c1 IN ()), ((rt1.c1) IS TRUE), ((rt1.c4)-(rt1.c3)))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c4)-(0.7520857452871827)))%((((rt1.c4))!=((rt1.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt1 RIGHT OUTER JOIN rt0 ON (((((rt1.c1))<((vt1.c2)))) ISNULL) WHERE (CASE WHEN (NOT (vt1.c0)) THEN ((rt1.c3) NOT BETWEEN (rt1.c3) AND (x'')) ELSE ((vt1.c2)||(rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (vt1.c0)) THEN ((rt1.c3) NOT BETWEEN (rt1.c3) AND (x'')) ELSE ((vt1.c2)||(rt1.c1)) END) IS TRUE)  as count FROM vt1, rt1 RIGHT OUTER JOIN rt0 ON (((((rt1.c1))<((vt1.c2)))) ISNULL));
SELECT ALL COUNT(*) FROM vt1, rt1 RIGHT OUTER JOIN rt0 ON (((((rt1.c1))<((vt1.c2)))) ISNULL) WHERE (CASE WHEN (NOT (vt1.c0)) THEN ((rt1.c3) NOT BETWEEN (rt1.c3) AND (x'')) ELSE ((vt1.c2)||(rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (vt1.c0)) THEN ((rt1.c3) NOT BETWEEN (rt1.c3) AND (x'')) ELSE ((vt1.c2)||(rt1.c1)) END) IS TRUE)  as count FROM vt1, rt1 RIGHT OUTER JOIN rt0 ON (((((rt1.c1))<((vt1.c2)))) ISNULL));
SELECT ALL COUNT(*) FROM vt1, rt1 RIGHT OUTER JOIN rt0 ON (((((rt1.c1))<((vt1.c2)))) ISNULL) WHERE (CASE WHEN (NOT (vt1.c0)) THEN ((rt1.c3) NOT BETWEEN (rt1.c3) AND (x'')) ELSE ((vt1.c2)||(rt1.c1)) END);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON ((vt1.c1 IN ()) IN ()) WHERE (((((((0.7444221126892134)AND(vt1.c0)))AND(vt1.c2)))>(CAST(vt1.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((((0.7444221126892134)AND(vt1.c0)))AND(vt1.c2)))>(CAST(vt1.c2 AS INTEGER)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON ((vt1.c1 IN ()) IN ()));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON ((vt1.c1 IN ()) IN ()) WHERE (((((((0.7444221126892134)AND(vt1.c0)))AND(vt1.c2)))>(CAST(vt1.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((((0.7444221126892134)AND(vt1.c0)))AND(vt1.c2)))>(CAST(vt1.c2 AS INTEGER)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON ((vt1.c1 IN ()) IN ()));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON ((vt1.c1 IN ()) IN ()) WHERE (((((((0.7444221126892134)AND(vt1.c0)))AND(vt1.c2)))>(CAST(vt1.c2 AS INTEGER))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE CAST(0Xffffffffa213caaa AS TEXT)  WHEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)) THEN (NOT (-906120952)) END) ORDER BY ((((((rt0.c1)AND('')))AND(rt0.c0)))==(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))), ((((((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))OR((((rt0.c1))<>((rt0.c2))))))OR(((rt0.c2)/(rt0.c1)))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND((- (345744147)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(0Xffffffffa213caaa AS TEXT)  WHEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)) THEN (NOT (-906120952)) END) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)AND('')))AND(rt0.c0)))==(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))), ((((((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))OR((((rt0.c1))<>((rt0.c2))))))OR(((rt0.c2)/(rt0.c1)))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND((- (345744147)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE CAST(0Xffffffffa213caaa AS TEXT)  WHEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)) THEN (NOT (-906120952)) END) ORDER BY ((((((rt0.c1)AND('')))AND(rt0.c0)))==(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))), ((((((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))OR((((rt0.c1))<>((rt0.c2))))))OR(((rt0.c2)/(rt0.c1)))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND((- (345744147)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(0Xffffffffa213caaa AS TEXT)  WHEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)) THEN (NOT (-906120952)) END) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)AND('')))AND(rt0.c0)))==(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))), ((((((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))OR((((rt0.c1))<>((rt0.c2))))))OR(((rt0.c2)/(rt0.c1)))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND((- (345744147)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE CAST(0Xffffffffa213caaa AS TEXT)  WHEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)) THEN (NOT (-906120952)) END) ORDER BY ((((((rt0.c1)AND('')))AND(rt0.c0)))==(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))), ((((((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))OR((((rt0.c1))<>((rt0.c2))))))OR(((rt0.c2)/(rt0.c1)))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND((- (345744147)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c3)) BETWEEN ((rt1.c0)) AND ((rt1.c4))))>=(((((rt1.c4)AND(rt1.c0)))AND('>f伲')))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c3)) BETWEEN ((rt1.c0)) AND ((rt1.c4))))>=(((((rt1.c4)AND(rt1.c0)))AND('>f伲'))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c3)) BETWEEN ((rt1.c0)) AND ((rt1.c4))))>=(((((rt1.c4)AND(rt1.c0)))AND('>f伲')))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c3)) BETWEEN ((rt1.c0)) AND ((rt1.c4))))>=(((((rt1.c4)AND(rt1.c0)))AND('>f伲'))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c3)) BETWEEN ((rt1.c0)) AND ((rt1.c4))))>=(((((rt1.c4)AND(rt1.c0)))AND('>f伲')))));
SELECT * FROM vt1 WHERE (((((- (vt1.c0))))>((CAST(vt1.c2 AS BLOB))))) ORDER BY ((((((vt1.c0) IS TRUE))AND(((((vt1.c1)AND(vt1.c1)))OR(vt1.c2)))))OR((((vt1.c1)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((- (vt1.c0))))>((CAST(vt1.c2 AS BLOB))))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0) IS TRUE))AND(((((vt1.c1)AND(vt1.c1)))OR(vt1.c2)))))OR((((vt1.c1)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c1))))) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((- (vt1.c0))))>((CAST(vt1.c2 AS BLOB))))) ORDER BY ((((((vt1.c0) IS TRUE))AND(((((vt1.c1)AND(vt1.c1)))OR(vt1.c2)))))OR((((vt1.c1)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((- (vt1.c0))))>((CAST(vt1.c2 AS BLOB))))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0) IS TRUE))AND(((((vt1.c1)AND(vt1.c1)))OR(vt1.c2)))))OR((((vt1.c1)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c1))))) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((- (vt1.c0))))>((CAST(vt1.c2 AS BLOB))))) ORDER BY ((((((vt1.c0) IS TRUE))AND(((((vt1.c1)AND(vt1.c1)))OR(vt1.c2)))))OR((((vt1.c1)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c1))))) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))OR(x'')))AND(rt0.c1)))&(rt0.c0))) ORDER BY CASE WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END WHEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE 0.890438705088732 END THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN rt0.c0 COLLATE NOCASE END;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))OR(x'')))AND(rt0.c1)))&(rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END WHEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE 0.890438705088732 END THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN rt0.c0 COLLATE NOCASE END);
SELECT * FROM rt0 WHERE (((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))OR(x'')))AND(rt0.c1)))&(rt0.c0))) ORDER BY CASE WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END WHEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE 0.890438705088732 END THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN rt0.c0 COLLATE NOCASE END;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))OR(x'')))AND(rt0.c1)))&(rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END WHEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE 0.890438705088732 END THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN rt0.c0 COLLATE NOCASE END);
SELECT * FROM rt0 WHERE (((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))OR(x'')))AND(rt0.c1)))&(rt0.c0))) ORDER BY CASE WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END WHEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE 0.890438705088732 END THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN rt0.c0 COLLATE NOCASE END;
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (((((rt1.c0)>(vt1.c0)))IS NOT(rt1.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)>(vt1.c0)))IS NOT(rt1.c3))) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (((((rt1.c0)>(vt1.c0)))IS NOT(rt1.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)>(vt1.c0)))IS NOT(rt1.c3))) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (((((rt1.c0)>(vt1.c0)))IS NOT(rt1.c3)));
SELECT ALL * FROM rt1 WHERE (((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c4)) COLLATE BINARY) ORDER BY -351641410 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c4)) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY -351641410 COLLATE NOCASE);
SELECT ALL * FROM rt1 WHERE (((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c4)) COLLATE BINARY) ORDER BY -351641410 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c4)) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY -351641410 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c1 IN (((rt1.c4)AND(rt1.c1))))) ORDER BY ((((rt1.c2)>>(x'')))<<(CAST(rt1.c3 AS BLOB))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt1.c1 IN (((rt1.c4)AND(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2)>>(x'')))<<(CAST(rt1.c3 AS BLOB))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c1 IN (((rt1.c4)AND(rt1.c1))))) ORDER BY ((((rt1.c2)>>(x'')))<<(CAST(rt1.c3 AS BLOB))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt1.c1 IN (((rt1.c4)AND(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2)>>(x'')))<<(CAST(rt1.c3 AS BLOB))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c1 IN (((rt1.c4)AND(rt1.c1))))) ORDER BY ((((rt1.c2)>>(x'')))<<(CAST(rt1.c3 AS BLOB))) ASC  NULLS LAST;
