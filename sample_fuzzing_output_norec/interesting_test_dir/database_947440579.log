-- Time: 2024/06/11 02:36:52
-- Database: database79
-- Database version: 3.40.0
-- seed value: 947440579
PRAGMA cache_size = 50000; -- 1ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE TEMP TABLE t0 (c0 INT ); -- 0ms;
CREATE TABLE t1 (c0 REAL ); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-65673210 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (x''))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'')AND(NULL)))AND('-65673210')))AND(0Xffffffffb1c156d4)))OR(NULL)))OR(CASE -65673210  WHEN x'' THEN 0.7833982297292758 WHEN 0.3864724872158072 THEN NULL WHEN 0.9337327481877227 THEN 'V' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 2 sz=943522 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1312729388'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 351281405 sz=351281405 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=156916769 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-65673210 2 sz=943522 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=156916769 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=156916769 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 -1312729388 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=943522'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((943522.0)LIKE('1422650966' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(DISTINCT CASE WHEN '?R' THEN x'' ELSE '-524207714' END, (NOT (NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('-1457470002') IS FALSE)  WHEN ((NULL)%(0Xffffffffe249d898)) THEN ((((x'')AND(NULL)))AND('v')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('943522') ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-250703929 394944836 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 -1761453865'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('9')LIKE('(/')))>=(CAST(x'' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.9418510724495033)IS NOT(NULL))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-1458103097 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(DISTINCT ((x'')>>(x'')), TYPEOF(x'')); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1761453865 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1008143767 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '0 0 sz=-524207714'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1761453865 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD((('xgqᎳ	sQRi')>>(NULL)), 0.6629715836521277); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '1993520286 sz=156916769 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1486364336'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1202143426 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-1266369081 0 sz=-2063700364 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_quote((549993891 IN (x'8f89'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '-1565472402 sz=-404887030 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=941101509 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1012078461 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOTNULL))>>((- ('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.09960673090218064 IN (0X3b02641)))AND((NOT (x'')))))AND((((NULL)) NOT BETWEEN ((0.7705870152095304)) AND ((9.41101509E8))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1486364336 sz=351281405'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=285850607 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('')AND(0xffffffffe249d898)), ((((NULL)OR(1012078461)))AND(NULL)), ((0.640354328848505) BETWEEN (200379518) AND (0.32891944915069093))))<((json_remove('-524207714', NULL), ((((NULL)AND(NULL)))AND(NULL)), 'v' COLLATE BINARY))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1179052856'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'')>>('-250703929')))OR(((NULL) BETWEEN (NULL) AND (x'')))))OR(CASE 1.486364336E9  WHEN '' THEN 0.9478542338193559 END)))AND((('') BETWEEN ('264290461') AND ('\rzviebW[Y')))))OR(((NULL) BETWEEN (0.6164823901321679) AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('0.9418510724495033' IN ()))OR(CASE 0Xfffffffff740db25  WHEN 0.43585007515631025 THEN '264290461' ELSE NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CASE x''  WHEN x'' THEN 0.3711571548384983 WHEN x'' THEN x'' WHEN '8뒞O]dJ' THEN x'a61f' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-65673210 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(ABS(DISTINCT -967067542) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('t'))>=(('\P6'))) IN ((('549993891') NOT BETWEEN ('u7-opMW5o') AND (0.9337327481877227)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE x''  WHEN NULL THEN '1102825996' WHEN NULL THEN x'' WHEN '-1e500' THEN '1993520286' ELSE 0Xffffffffb484bdc7 END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('+鶛T蟆)_')=((('1283766816') IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1567323185 sz=943522'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-1457470002 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '2 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('V' COLLATE BINARY) BETWEEN (CASE WHEN 389740039 THEN 0.15613221503396923 WHEN 0.3801372239917714 THEN x'' WHEN '-146744539' THEN NULL ELSE 0.7670754352616499 END) AND (((NULL)!=(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=969630150 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=1008143767 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-941295470 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1487822176 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD((((x'')) NOT BETWEEN ((x'6775')) AND (('-1457470002'))), 0.009236738114834275); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')-(x'8f39')) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-766106109 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-543820872')AND(((x'') ISNULL))))AND(CASE x''  WHEN '4C0j' THEN '-404887030' ELSE '0.3711571548384983' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1585258473 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xfffffffff740db25) IS TRUE))||(((((0.772438641078551)AND(']빪TJ,N')))AND('-1764374478')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN NULL THEN '-1197417912' WHEN x'' THEN '0.43585007515631025' WHEN '1429541811' THEN NULL END)*(((((NULL)OR(NULL)))OR('E癸3lR{{x')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=394944836 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1667738045 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1623317464'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-2126763155 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=200379518 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1240681531 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.44400415476050303))<=(('鉹{'))))&((NOT (0X77b5d5a9)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('-1503922424' AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('矄s犘3Y') IS TRUE))OR((- (NULL)))))AND(((((-5.53158716E8)OR(x'')))AND(x'')))))OR(('1008143767' IN ()))))AND(((NULL) NOT BETWEEN (119430561) AND (0.1406606110812586)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('z5|Av' IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('941101509')>=(0.8808434575261938)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.4251878604563244)||(0.42801116301725695)) THEN ((-5.24207714E8)>=(0.13831278708479677)) ELSE x'' END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.6050529987197389) BETWEEN ('t✿eB쑖u7') AND (x'')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.9337327481877227, 't✿eb쑖u7', x'')) NOT BETWEEN (((~ (NULL)), CASE WHEN 2122898778 THEN x'' ELSE '' END, CAST('' AS NUMERIC))) AND ((691642431, LOWER('q<%rO{'), (NOT ('0.9337327481877227'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_VERSION(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1327152219 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1888195026'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE NOCASE)+(0Xffffffffd9e508a7 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)OR('')))AND(x'')))OR('|{#MoO]g}')))AND(0.6076250424328661)))%(CAST(0.6492127957471056 AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-617975144 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 4ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'' IN ()))AND(((NULL) NOT BETWEEN (-1.266369081E9) AND (x'')))))AND(((x'')AND('389740039')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (ABS('-1565472402'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=1341727254 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-362913527 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, -1.623317464E9, '>/', 'r,L~Pr>', 0.41466719264257323)) BETWEEN ((NULLIF(x'5beb', NULL), (~ (x'0739')), CASE 1.327152219E9  WHEN '-1359672293' THEN '943522' END, ((0.41466719264257323)>('鉹{')), (('Ꮃ\rD~')+('뾃*DSɭ w')))) AND ((((((((((NULL)OR('r,L~Pr>')))OR('-1809954251')))OR('Mr')))OR('')), CASE NULL  WHEN x'' THEN x'a30f' END, ((x'')LIKE('-1457470002')), TYPEOF(NULL), json_quote('-404887030')))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (- ('+')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '896547216 sz=1287177855'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-498476904 2 sz=-57901545 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ ('-1487822176')))=((('')<=(0.6520802795111567)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1757675439 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '2 sz=604318142'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1567323185 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(LIKELY(x'e72a') AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=495537785'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '!dzKC'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=462614004'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((('_')/(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '61875777 sz=2056262321 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')LIKE(x'a0c9'))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-2126763155 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=849601791 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=1566581920 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-1689282141'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1565472402 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((((1.56658192E9)OR(x'')))OR(0x38d233ce)))OR(666079350)))AND(0.3801372239917714)))OR(0.6520802795111567)))AND('<+')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1933918614' IN ())) NOT BETWEEN ('FS_匍d*') AND ((((x''))==((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=264290461 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((x'ac37'))<((x''))) THEN x'a43d' COLLATE RTRIM ELSE x'a166' COLLATE BINARY END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1016226857 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=2115260353'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '2 sz=558798347 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (2122898778 IN ())  WHEN ((0.6050529987197389) NOT BETWEEN ('\rb\r㦞犘jM') AND ('-1257534234')) THEN '-1232819847' COLLATE RTRIM ELSE ((('2104630992'))!=((NULL))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-1764374478 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ ('^넥Ht%zg'))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '1012078461 sz=-1839400636 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-2126627963 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('崾K') NOTNULL)) BETWEEN (((NULL)IS(NULL))) AND (((('')) BETWEEN ((x'')) AND ((x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('\nT湴2ZH')) NOT BETWEEN ((-1.761453865E9 COLLATE NOCASE)) AND (('-476064956'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 943522 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-402585841 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-679761945'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-1595904838 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-766106109 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'b2a4'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 888375219 COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0x4cb8c67f THEN 0.3801372239917714 END COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-1232819847 573990313 sz=-951861240'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=1567323185'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=-1503922424'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1585258473 unordered noskipscan'); -- 3ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '943522 sz=-1257534234'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)%(x'')) IN (((0.4552313615111929) NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1422650966 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(NULL AS INTEGER) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' IN ('-2032090490')) IN (((((0.3864724872158072)AND(x'')))OR(x'585c')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) ISNULL))>=(((-1722671736)||(0.8256938660401408)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN (((+ (-840690410)))) AND ((''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-1132640304 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'') NOT BETWEEN (NULL) AND ('941101509')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 4ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=604318142 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0.4985205388969627 COLLATE BINARY)OR((x'' IN ()))))AND(UNLIKELY(DISTINCT NULL))))AND(CASE NULL  WHEN x'ef4ee1e1' THEN 0Xffffffffef13fd0e WHEN x'' THEN 0Xffffffff8bc687c6 WHEN x'' THEN NULL ELSE 0.5144216398848354 END)))AND(CHANGES())); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')<=((('vWx0/I')%('-714022347')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'') NOT NULL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1679133230 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE INSTR(UNLIKELY(DISTINCT NULL), (0X692da089 IN ())); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1307207526 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((+ (0.6164823901321679)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1993520286 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((HEX(DISTINCT 0.3459639853506098))OR(((('-1585258473', NULL, x''))>(('밝', NULL, 0xffffffff9c15d1b1))))))AND((NOT (0.6076250424328661)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1914395859 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-1312729388'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-173854448 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-772728432 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT 0.9356829692207971, 0.43585007515631025) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')>(0x40834d24))))>=((('-1949923386' IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1327152219 sz=-954953095 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '1633766474 sz=-924001237 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1668571749'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('268721137')) NOT BETWEEN ((NULL)) AND ((''))) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-130003213 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-1493361425 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '314004311 sz=-2035460256 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '389740039 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-849541103 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.17151128681183248  WHEN CAST('' AS BLOB) THEN (~ ('')) ELSE ('124342003' IN ()) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((('{㮅', 0.4855425077952491, NULL)) BETWEEN ((x'', NULL, 0.8709352493260634)) AND ((0xffffffffe3333d45, NULL, 0.30261431915589776))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1467878270') BETWEEN (0.20625463214707973) AND (0.12223789683613129))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('899652138' AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')) BETWEEN ((0.02638622671412938)) AND ((6.04318142E8)))) BETWEEN (CAST('''{V1' AS INTEGER)) AND (((0.005454998589973892) NOT BETWEEN (x'') AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '558798347 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=896547216 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-2037949303 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ ('b[|4C')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-1565472402 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('鉹{')) BETWEEN (('-1358580800')) AND ((CAST(x'' AS BLOB)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')>=('-404887030')))AND(((-728571704) NOT BETWEEN (x'') AND ('C5-#8\')))))OR(((x'8fa0') NOT BETWEEN (0.752749438081039) AND ('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '462614004 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '941101509 sz=1557631880 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 sz=-705544700 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-513947971 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '2104630992 sz=-146744539'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1689282141' IN ()))GLOB((('') NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 0 sz=-800390799'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((NULL)/(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((0.7247322763260525 IN ()) AS NUMERIC); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '831431911 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN '354898701' THEN '蟆[YsOC' WHEN x'' THEN ',-' WHEN 0Xffffffffa72e8278 THEN x'' WHEN NULL THEN NULL WHEN x'' THEN 0.08819655126160508 END THEN (((0.2332179665395787)) NOT BETWEEN (('kXGQg䨵Q')) AND ((1757675439))) ELSE (('-2063700364') IS FALSE) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((NULL COLLATE NOCASE)AND(((0.43308202037219046) BETWEEN (x'') AND ('t✿eB쑖u7')))))OR((- (NULL)))))AND(CAST(0.9612339482655429 AS BLOB))))OR(((1.353086584E9) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 sz=2065327356 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=666024717 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)<=('-0.0')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1232819847 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((('V''')OR('0.7670754352616499')))OR(x'')))AND(NULL)))AND(NULL)))OR('z1_u')))AND('')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(0xffffffffd2bca398 AS TEXT)  WHEN (+ ('-404887030')) THEN ((0.08050231493924753) NOT NULL) ELSE (('|{#MoO]g}')<=('壃_')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((NULL))<=((0.4786085171366904))) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1382911064 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=918398395 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('Y')%(6.04318142E8)))AND(NULL COLLATE NOCASE)))OR(CAST(x'' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (x'' IN ())  WHEN (((1407607396, NULL, NULL))<(('l9Xgf/L(*', NULL, '9'))) THEN (NOT ('')) ELSE ((((0X553513b3)AND(-1809954251)))OR(x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1853797733 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((910165684, 0Xffffffff95bc2deb, x'')) NOT BETWEEN ((CAST(NULL AS REAL), (('\P6') IS FALSE), (((0.24967664019963187))<=((0xffffffff8bc687c6))))) AND ((CASE NULL  WHEN '' THEN 0.01657850602804145 END, '!', (0.08008438067454227 IN (0x6848b007))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((1572232725 IN (x'', 0X17b4d910)))AND(CAST('R' AS INTEGER))))AND((('-524207714')=(0.3005420020769739)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((x'') NOT BETWEEN (0.9156778577911241) AND ('^')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)IS NOT(x'237c'))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((-250703929)) BETWEEN ((0.9612339482655429)) AND (('3'))))OR('	Kb{,Q~V')))OR(CAST(x'' AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '2 -2121690162 sz=558798347 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1514046925'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '742196813 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-639301465 sz=216728566 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-924732973 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '2 -985436089 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '462614004 sz=1283777433 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(ROUND(NULL, NULL) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 0 sz=-1180801121 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (NULL IN ()) THEN CAST('733932284' AS REAL) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'') BETWEEN (NULL) AND (x''))))<((CAST(NULL AS INTEGER)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(((0.8233117476194031)>('-1778632033')), CASE WHEN NULL THEN NULL END); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-909795584 sz=-1359672293 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.841446326014659; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-913943135 sz=-920654518'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 sz=-639301465 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1313039569 -1709736928 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=357959493 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1168649106 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1457470002 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'34b1062f'))<=((NULL))))>=(((0.5144216398848354) IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=44563227 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL COLLATE BINARY))>((x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-362913527 sz=764757692 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)>>(0.39316343593539493)))&(((NULL) BETWEEN (NULL) AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=1486364336 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '658624000 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1693742154 sz=1327152219 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((NOT (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-476064956 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.005454998589973892 IN (x'')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1783324462') NOT BETWEEN ((('927694927') BETWEEN (NULL) AND (']빪TJ,N'))) AND (((NULL)IS('394944836')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1318728942 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1092504003 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1532430714 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 sz=-264396070'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 sz=1628454621'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=22067655 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-93874757'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL IN (NULL, 0X2e47c708)))OR(HEX('-250703929'))))AND(((((((((x'085b')AND('(/')))OR(9223372036854775807)))AND(0X19ed369a)))AND('860970302')))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE json_quote(((0X4ff92216)<(x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((x'' IN (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('' IN (((('-2142248386'))<((x'd5ed'))), ((-880312732)AND(0.21918874956638912)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-42117354 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0x173af607) NOTNULL))IS NOT(((-4.02585841E8)>(0.3143182775563539)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=192475400 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('0.7705870152095304', (x'' IN ('-1667738045', 'M?X')), (((('')OR(1857839110)))OR('{㮅'))))>((CAST(0.5924781079511124 AS BLOB), LENGTH(x'8209'), CASE '-x롪%8%f'  WHEN -1030150337 THEN x'' ELSE '!' END))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=781909435 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) ISNULL)) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((NULL)OR(0.02036637905631644)))AND('')))OR('326391290')))AND('-2298008666753826141T936:214 -3802801460285945961:5026065803336053983T6515407099686510376:1204752609259852059T')))OR(NULL)))AND(0.40587902085070027))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1949923386 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE x'41e2'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-766106109 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-2097373479 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '-1016226857 sz=-95039751 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS TEXT))|(((((-18244780)AND('1342971222')))OR(0Xffffffff98382530)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '2 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((((0.013586988153791224)OR(NULL)))AND(x'21f0178f')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-404887030 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1964411363 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE 0.6156770021996208; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'') ISNULL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1503922424'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (0.06491995645364512) AND (NULL))) NOT BETWEEN ('-802587616' COLLATE NOCASE) AND (-694792020)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-418708200 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((~ ('(1GE͹D)z')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=1659618390 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL) BETWEEN (0.2730257802109052) AND (0.11127475262837094))  WHEN (((NULL))<=((0.16069327318497717))) THEN 0.4573647513185023 END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '338599344 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((943522.0)AND(NULL))) NOT BETWEEN (CAST(0.40871011926081147 AS INTEGER)) AND (CASE WHEN NULL THEN 'O\V' ELSE x'4c8d' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(CAST(0.17830713838013168 AS REAL), (('.G?})')||('733940614'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(DISTINCT x'' COLLATE RTRIM); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-967067542 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1026136388 sz=2056262321 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1928008874 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((~ (1.353086584E9)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-2078430423 sz=1515651693 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((8.49601791E8) BETWEEN (x'') AND ('656151008'))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.9011993891403778 IN ()))|(((x'9b41') BETWEEN (0.1575578119043265) AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'55f5')) NOT BETWEEN (((NULL IN ()))) AND ((((((((((((((325375720)OR('vIK3>33T[')))OR(x'dc361bd0')))OR('lno.eh')))AND(1.65961839E9)))OR(0.7570477121497544)))AND(x'9ce2'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1197417912'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 sz=985938245 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('180084069') NOT NULL))IS((('')<<(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=969630150 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-2113488859 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1648572272 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=61875777 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '0 1523994181 sz=-1834107010'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'94c085bd' IN ()))IS NOT(0.6977279887934085)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_object(CASE ''  WHEN NULL THEN 0.3711571548384983 WHEN -1e500 THEN 1255754433 WHEN 1144271333 THEN '-728229374' END, (- (NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)!=(NULL)))OR(CAST(0.37497861657669695 AS INTEGER))))OR(CAST(43170387 AS TEXT))))AND((~ ('')))))AND(((NULL) IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xffffffffa5047246)>=(x'')))&(((((0.7206375788415993)AND(x'')))OR(264290461)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-689018801'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'00810b5f') IS TRUE)) NOT BETWEEN (((('J', 0.8076860800130466, NULL))!=(('-1046683048', NULL, '-747958579')))) AND (json_type(x'f61f'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'a6e1'))==((NULL))))LIKE((((('')OR(NULL)))AND('-1359672293')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('2146578358')&(0.05600994217180355)))GLOB(CASE NULL  WHEN 0.09922218593195531 THEN NULL ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-1266526333 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0xffffffffcb0f1331 COLLATE RTRIM)|((+ ('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('{Q*[uc%n')<>(NULL)))OR(CAST('' AS BLOB))))OR(CAST(x'1478' AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 'ZmB꺷' COLLATE NOCASE THEN (((NULL)) NOT BETWEEN ((x'676a')) AND ((x'ee37'))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '0'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('877754378') BETWEEN (NULL) AND (''))) BETWEEN (CAST('1566581920' AS BLOB)) AND ((x'' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')AND(0.23983506287037115)))>=(ABS(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=943522 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '-16477972'  WHEN '-283172019' THEN '' END) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-1891693832 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL) NOT BETWEEN (0.23080635538257555) AND ('~U')) THEN x'497c' ELSE (NOT (-2.126763155E9)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=119430561 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=941101509 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 sz=-9223372036854775808 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '1429541811' THEN ((((0X23cbeec9)OR(NULL)))AND(NULL)) ELSE ((((((((1054760107)OR(4.95537785E8)))OR(NULL)))AND(1567323185)))AND(x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 sz=1039219304 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-304114315 0 sz=-1179052856 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=277454703'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) BETWEEN (x'463c') AND (NULL)) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('-967067542') BETWEEN ('-1101018441') AND ('-2103864875'))  WHEN (- (NULL)) THEN (((0.11485324778060102))<=((NULL))) ELSE CAST('d鉹' AS BLOB) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '-1601992572 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.9329744950674419) NOT BETWEEN (((0.9114052629334332) IS TRUE)) AND (2056262321)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CASE WHEN 'asqD' THEN x'' WHEN NULL THEN 0.1572606241763066 WHEN '1993520286' THEN NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-1044611036 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((ABS('Z'))<(((x'0dc0') NOT BETWEEN (0.6778361726226179) AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1041567582 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ('22165955' IN (0.4657550128986492))  WHEN ((0.6409362978939845)|(NULL)) THEN '-889908636' COLLATE RTRIM ELSE CAST(x'4080' AS REAL) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1306817633'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((LIKELIHOOD(0.5514399501148752, 0.21287196315619317), (((NULL)) NOT BETWEEN (('-404887030')) AND ((NULL))), CAST(NULL AS TEXT)))>=((('0.02036637905631644' IN ()), ((-1182298124) NOT BETWEEN (x'') AND ('')), CAST('BbP<' AS INTEGER)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LENGTH(x'')) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.6903091047867607 COLLATE BINARY)-(((x'') ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 1429541811 THEN x'' END) NOT BETWEEN (COALESCE(DISTINCT x'', 0.9547322326505475)) AND (CAST(NULL AS TEXT))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((- (NULL)))&(x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-559837313'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1785655339 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL) IS TRUE))AND(x'')))OR((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-606348798'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-1054492194 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('956141097')GLOB(x''))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=1990494120'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((NULL)IS NOT('wgt4')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 -1668571749 sz=-1611228061 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 sz=-1668571749'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('<斢w^')) BETWEEN ((UPPER(-404887030))) AND ((LIKELY(DISTINCT 0.3005420020769739)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '969630150 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((')|삝\nAU')>=(NULL)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)<=('EX|B过'))))<=((CASE NULL  WHEN 'P+' THEN NULL WHEN x'' THEN '-1623317464' WHEN -766106109 THEN '-1635991677' END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1909041406'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('620359461' AS NUMERIC)) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('+]c<')IS NOT(x'')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x'09e1'  WHEN 'c nC' THEN x'' END)=(((NULL)!=('1993520286')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1030150337 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=941101509'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-642859353 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((~ (0.7141151387426683)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 sz=1327152219 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '2 sz=-657072083 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')GLOB('-1443190218')) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-639301465'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT TYPEOF(DISTINCT 0.5296756546595305)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-524233654 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=351281405'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=458371178 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1546886239 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((0.2036363587582284) BETWEEN (NULL) AND (x'')))AND(((0.752749438081039) NOT BETWEEN ('-765585307') AND ('-1088287931')))))OR(((NULL)/('1422650966')))))OR(((0.8860956077132073)<<('')))))OR(((-1020026447) ISNULL))))AND(CAST(0.6989402258442425 AS INTEGER))))AND((('941101509') NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=834141473 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(1.7976931348623157E308 AS REAL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-956602707 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-521387453 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(CAST(0.6599723525539326 AS TEXT), CASE x''  WHEN '2122898778' THEN '~N' WHEN 0.8923695930438786 THEN 0.8450477387276902 WHEN -9.4129547E8 THEN -1.457470002E9 ELSE -7.66106109E8 END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((-1.487822176E9)IS('-169052545')) AS INTEGER); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.895952659881896 THEN NULL END)<(-950501732)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1016226857'))>=(('-1888195026'))))AND((('') IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CASE '疳Kh䊞fm7v,'  WHEN x'' THEN NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1888195026 2137563988 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.5433431945033254  WHEN x'aa7a' THEN 227460217 ELSE 0.7832671803915225 END)>=(((((((((-1.202143426E9)OR(x'')))AND(x'')))AND('d鉹')))OR(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'dba6')*(((NULL) NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1692997870 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1341727254 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-766267099'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 0 sz=-1623317464'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=1889104237 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=880665842 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((0X4aac5e1a)==(0.6520802795111567)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2122898778 sz=-74010368 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1461374889 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-568002699 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'70d6'; -- 2ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1174110493 927323695 sz=-1667738045'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((NULL)AND(x'630e')))OR('-1751410218')) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-395704707 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(ABS('v') AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '288127554'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-1378625051 828226964 sz=-766106109 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ('' IN ()) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'2bad' THEN '' WHEN x'49ce' THEN NULL WHEN 0.44400415476050303 THEN NULL ELSE '5[19' END)IS((((0.12637842947418032, 'b[|4C', x'd4db')) BETWEEN ((NULL, NULL, 0x50a67678)) AND ((']㏏z1', 0.9356829692207971, 0x5f73e04a))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-2055536535 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=821315598 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-1016226857'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-954953095 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-57901545 sz=1096920525'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=2010823492 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-1312729388 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (x'1628' IN ()) THEN (- ('f{V')) WHEN 0.3160098099400862 COLLATE RTRIM THEN ((('-1689282141')) BETWEEN ((0.8917362641134012)) AND (('JY'))) WHEN (((((((('268721137')OR('-1839400636')))AND(0.4527609588138266)))AND('685725773')))OR(x'527916cc')) THEN CAST(0.3918405710822017 AS NUMERIC) ELSE ((NULL)IS NOT(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '27644106'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD((0.15166361279635698 IN (x'')), 0.280432261260815); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((('1546778420', '-1585258473', '1597318968')) NOT BETWEEN (((('-1879639332') ISNULL), '-498476904' COLLATE BINARY, (('o')+('')))) AND ((('1429541811' IN ()), ((0.29720353585455106)<<('-766106109')), ''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-920702483 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '0 sz=-538279916 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '860970302 0 sz=2116696820 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '860970302 sz=1953608310 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1513342384 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=1659618390 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1196340107 -2020989053'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1958177243 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1377050418 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1813031814 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-1843365051 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)>(0.771709425343504))))<((((0.5442784646151294) NOT NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN (((('1429541811') NOT NULL))) AND ((((NULL)>('S6'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'5dca')-('549993891')) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1442618905 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '286258990 -1934682786 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=604318142 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-9223372036854775808'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=1488657377'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-220535274'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '145945369 sz=180631703'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1418389043 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('l9' IN ())) NOT BETWEEN ((0Xffffffffdd433c66 IN ())) AND (ABS(1105999057))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1604008591 sz=1419307541 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NOT ('W')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1888195026; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=156916769 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (0xffffffff925cf944))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.6650630192491704  WHEN '1284546615' THEN NULL END)<(((NULL)LIKE('{!GiY,.ᓈ ')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'') NOT BETWEEN (x'') AND (0.13173859332627424))  WHEN ((0.41641922568561973) NOT BETWEEN (883100959) AND (x'1f45')) THEN ((6.91642431E8) NOT NULL) WHEN (x'' IN ()) THEN (~ ('1546085581')) WHEN ((x'') NOT BETWEEN (-1.949923386E9) AND (0.8863924988072676)) THEN (((NULL))>=((x''))) ELSE CAST(x'' AS TEXT) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-1635991677 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '830779195 sz=-1585258473'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS FALSE))<=(CASE WHEN -320432422 THEN NULL WHEN '' THEN '-0.0' WHEN 0.14087782920957415 THEN '-1179052856' WHEN NULL THEN x'' WHEN 0.4695391443011311 THEN 0Xffffffffa2d8ccc9 ELSE 0.5826790046249471 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'45ed')) BETWEEN ((NULL)) AND ((0.6024003773120815))))AND((('-1240681531')<<('뭔v⹕')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=626080573 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((+ (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1911901485 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('')*(NULL))  WHEN ((x'cd23')%(NULL)) THEN json_extract('-1601249557', NULL) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NOT ('351281405')) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)IS('0.5514399501148752'))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-617975144' IN ())) NOT BETWEEN (((((x'')AND('')))OR(x''))) AND ((('-1809954251') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'e64f'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-785177763 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN (((0X32a3e4ff IN ('-617975144')))) AND ((((NULL) NOT NULL)))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((- ('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=498890459 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-2108076996'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1030150337 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '495537785 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((- (x'')))OR(('-1217045669' IN (849601791)))))OR(0.9281368353990511)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=264096816 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=125707059'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 sz=-1764374478 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 4 sz=-619987468 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0xffffffffebbefbe5 AS NUMERIC)) BETWEEN (NULL) AND (COALESCE('F뒞I]dJ', ''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0xffffffffaf5dec3e)GLOB((('-1457470002') BETWEEN (x'5339') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UPPER(DISTINCT 2110580322)) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((x'5168')OR(NULL)))AND(x'')))OR(0x5838ab0)))OR('v*')) IN (('0.6156770021996208' IN ()), ((0.008094032180584576) BETWEEN ('-1949923386') AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-362913527' AS REAL))/((NOT (0.48458922050978315)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '614609140'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 sz=-2126763155 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1095488603 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1881715837 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1306576940'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-524366393 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=1319286473 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=810654862 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'0ccd')&(CASE x'ac79'  WHEN 678790884 THEN NULL WHEN '-1435348274' THEN '-1275958840' WHEN '-102076486' THEN 0.040110101029610434 ELSE -498476904 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')LIKE(176208457)))!=(x'1749' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x''))!=((0X5ae6946c))))-((+ (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-644851999 sz=-1585258473 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=58587367 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '558798347 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')) NOT BETWEEN (('-543820872')) AND ((x'')))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 -126374621 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('389740039' COLLATE NOCASE) BETWEEN (((0.889426115450589) NOTNULL)) AND (((x'') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=544944386 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-1016226857 2'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1623317464 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (TRIM(NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('1287177855'))==(('')))) NOT NULL); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (0.7830719271932808)))AND((NOT ('5*q₵P^M')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '0 1921006610 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1724743436 0 sz=1422650966 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((((((((NULL)OR(NULL)))OR(0x5e939c64)))AND('-1667738045')))AND('-1821120686')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '416893317 sz=1290444909 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1258882139 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((1327712799 IN ()) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-1512213449'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-170682025'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('' IN (x'd461ac62', '250288015')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((0.2961515814105081)) NOT BETWEEN (((NULL IN ()))) AND ((((0x2a96cc2c) NOTNULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1258283179') BETWEEN (0xffffffff85f21799) AND ('')))<<(CASE WHEN '436105085' THEN x'' ELSE 'iKI^aMQ❥' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1623317464'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.02638622671412938 COLLATE NOCASE)OR(x'79bb' COLLATE BINARY)))AND(((0X76d2b49e) NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1623317464 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=826598057 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-1667738045 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 sz=-103698912 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CASE WHEN x'' THEN 0X86a7431 WHEN NULL THEN '156916769' WHEN x'' THEN 'WGT4' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE '-2127252611'  WHEN NULL THEN NULL WHEN x'e96b' THEN x'' WHEN NULL THEN NULL END IN ((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '1353086584 sz=-880939118 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1072781851'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '691642431 sz=2002892573 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- ('u(c&,e\r')) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-325619207 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1288293287 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=483743488 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-569017252'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1524026522 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0x7a691336 COLLATE RTRIM))<((((x'')||('虌w1E'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE WHEN '-404887030' THEN '-476064956' END))<>((((x'792b') NOT BETWEEN ('-476064956') AND (2003092005))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-181734577'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '1301638039 sz=1767686316'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE 0xffffffffbe23969b  WHEN '-1888195026' THEN NULL ELSE x'' END)OR(((((((((0.6083163897066363)AND(1315691704)))OR(x'9e20')))AND('')))OR('')))))AND(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-813747297 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=1191321986'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'', NULL, ''))>(('B9塚Hwc', NULL, '680988687'))))GLOB(UPPER(DISTINCT x'53ba'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-1888195026'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=61875777 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ''  WHEN '1341727254' THEN NULL WHEN 0.8395677355161121 THEN '1764259616' WHEN 0.4292813231338539 THEN x'' ELSE NULL END COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOTNULL))<(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-1635991677 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=1808999013 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UPPER(1064561441))IS(load_extension('i贤_?P[\n]m'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.3656161112834827)/(NULL)))AND(CAST('kA+(V' AS BLOB))))AND('')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=1678075737 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1863485107 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-1761453865 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1993520286 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '-1510858170 sz=678171587 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_COMPILEOPTION_USED((+ (x'1c5f'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-21303445 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '-670555998 sz=-489366247'); -- 0ms;
REINDEX; -- 0ms;
ANALYZE t1; -- 1ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, +c3 REAL ); -- 0ms;
UPDATE OR ABORT rt0 SET c3=NULL, c3='' WHERE x'27e7'; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=NULL WHERE (((x'')) NOT BETWEEN ((((rt0.c3) IS FALSE))) AND ((CAST(rt0.c3 AS TEXT)))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
END; -- 0ms;
UPDATE OR IGNORE rt0 SET c3='-763044543'; -- 0ms;
ANALYZE rt0; -- 1ms;
INSERT OR IGNORE INTO rt0(c3) VALUES (0.03300992314924234); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0, c0, c0)=(0.047328221822727, '-1', x'') WHERE CASE WHEN ((rt0.c3)GLOB(rt0.c1)) THEN rt0.c3 ELSE ((0.8442785051605516) BETWEEN (rt0.c3) AND ('Y,')) END; -- 1ms;
ANALYZE; -- 1ms;
UPDATE rt0 SET (c0, c1, c2, c3)=(x'', NULL, '1025024236', 0.5654848793484754); -- 0ms;
UPDATE OR IGNORE rt0 SET c0='691642431'; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE t0 SET (c0)=(NULL) WHERE ((((t0.c0) IS TRUE)) IS TRUE); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE t1 SET c0=NULL; -- 0ms;
PRAGMA legacy_file_format; -- 0ms;
UPDATE rt0 SET c0=0.4198417979804948, c3=x'', c3=0Xe464633 WHERE rt0.c0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT OR FAIL INTO rt0(c2) VALUES (0.21557180545747057); -- 0ms;
REINDEX  t1; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=NULL WHERE CASE WHEN (((rt0.c2, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c3)) AND ((rt0.c1, rt0.c2, rt0.c1))) THEN ((rt0.c1)||(rt0.c3)) WHEN ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)) THEN (+ (rt0.c0)) WHEN rt0.c1 THEN rt0.c2 COLLATE RTRIM END; -- 1ms;
UPDATE OR IGNORE t1 SET (c0, c0)=('D_iCt~', x'a120') WHERE CAST((~ (t1.c0)) AS BLOB); -- 0ms;
PRAGMA defer_foreign_keys = true; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c0)=(NULL); -- 0ms;
PRAGMA automatic_index = false; -- 0ms;
UPDATE OR IGNORE t1 SET c0=NULL WHERE CASE t1.c0 COLLATE BINARY  WHEN (((t1.c0)) NOT BETWEEN ((x'9ab4')) AND ((t1.c0))) THEN ((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR('Y')))AND(t1.c0)) WHEN (~ (t1.c0)) THEN ((t1.c0) ISNULL) WHEN 0.5468578971893095 THEN (t1.c0 IN (t1.c0)) ELSE ((((0X474d1553)AND(t1.c0)))OR(t1.c0)) END; -- 0ms;
UPDATE t0 SET (c0)=(0X79bdc049) WHERE CAST(((t0.c0)+('di')) AS INTEGER); -- 0ms;
CREATE INDEX i26 ON t1((('L(A%>')<<(((c0) NOT BETWEEN (c0) AND (c0))))); -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE t1 SET (c0, c0, c0)=(0Xffffffff85f1ca08, x'', x'210462b4'); -- 0ms;
UPDATE OR IGNORE rt0 SET c1='-1667738045' WHERE CASE ((((x'')OR(rt0.c0)))OR(rt0.c3))  WHEN LAST_INSERT_ROWID() THEN ((rt0.c0)GLOB(rt0.c0)) END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX  rt0; -- 0ms;
END; -- 0ms;
REINDEX  rt0; -- 0ms;
PRAGMA integrity_check; -- 0ms;
PRAGMA cache_spill; -- 0ms;
UPDATE OR ROLLBACK t1 SET c0=0.41629759054839954 WHERE ((((t1.c0) IS FALSE)) NOT BETWEEN (t1.c0) AND (((t1.c0)IS NOT(t1.c0)))); -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE t1 SET (c0)=('}鸄졼c'); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE t1 SET c0=NULL, c0=0.817961953897107, c0=0X4c84ba20 WHERE ((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '553658399 2 unordered noskipscan'); -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL WHERE CASE WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN 0.15878674827830686 ELSE CAST(t0.c0 AS INTEGER) END; -- 0ms;
ANALYZE t1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=1566581920 unordered noskipscan'); -- 1ms;
UPDATE OR IGNORE rt0 SET (c2)=(NULL); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES (''); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c0, c0, c0, c0)=(NULL, x'2c9a', x'', '') WHERE CASE ((t1.c0)-(t1.c0))  WHEN ('|ꇮ.' IN ()) THEN ((t1.c0)-(t1.c0)) END; -- 0ms;
END TRANSACTION; -- 1ms;
UPDATE OR ABORT t0 SET (c0)=(x''); -- 0ms;
PRAGMA cache_spill = -1104639994831758200; -- 0ms;
UPDATE OR IGNORE t1 SET c0='&<' WHERE t1.c0; -- 0ms;
PRAGMA temp.legacy_file_format = true; -- 0ms;
PRAGMA defer_foreign_keys = true; -- 0ms;
REINDEX RTRIM; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA shrink_memory; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR REPLACE rt0 SET c3=433076162; -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.15868811732486687 WHERE x''; -- 0ms;
UPDATE OR IGNORE t0 SET c0=-515361600; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
VACUUM temp; -- 0ms;
CREATE INDEX IF NOT EXISTS i82 ON t1((((c0) NOTNULL) IN ()) COLLATE NOCASE) WHERE 18375342; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, detail=full, ); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM t0, rt0, t1, vt0 WHERE ((t1.c0 IN ()) COLLATE RTRIM) ORDER BY (NOT (t0.c0));
SELECT SUM(count) FROM (SELECT (((t1.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0, t1, vt0 ORDER BY (NOT (t0.c0)));
SELECT COUNT(*) FROM t0, rt0, t1, vt0 WHERE ((t1.c0 IN ()) COLLATE RTRIM) ORDER BY (NOT (t0.c0));
SELECT SUM(count) FROM (SELECT (((t1.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0, t1, vt0 ORDER BY (NOT (t0.c0)));
SELECT COUNT(*) FROM t0, rt0, t1, vt0 WHERE ((t1.c0 IN ()) COLLATE RTRIM) ORDER BY (NOT (t0.c0));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON 0.37264250722296477 LEFT OUTER JOIN t0 ON rt0.c1 FULL OUTER JOIN t1 ON t0.c0 WHERE (x'cb6d') ORDER BY (((((('156916769')>(vt0.c0)))OR((rt0.c0 IN ()))))AND(vt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((x'cb6d') IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON 0.37264250722296477 LEFT OUTER JOIN t0 ON rt0.c1 FULL OUTER JOIN t1 ON t0.c0 ORDER BY (((((('156916769')>(vt0.c0)))OR((rt0.c0 IN ()))))AND(vt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON 0.37264250722296477 LEFT OUTER JOIN t0 ON rt0.c1 FULL OUTER JOIN t1 ON t0.c0 WHERE (x'cb6d') ORDER BY (((((('156916769')>(vt0.c0)))OR((rt0.c0 IN ()))))AND(vt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((x'cb6d') IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON 0.37264250722296477 LEFT OUTER JOIN t0 ON rt0.c1 FULL OUTER JOIN t1 ON t0.c0 ORDER BY (((((('156916769')>(vt0.c0)))OR((rt0.c0 IN ()))))AND(vt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON 0.37264250722296477 LEFT OUTER JOIN t0 ON rt0.c1 FULL OUTER JOIN t1 ON t0.c0 WHERE (x'cb6d') ORDER BY (((((('156916769')>(vt0.c0)))OR((rt0.c0 IN ()))))AND(vt0.c0 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (NULL) ORDER BY CASE CHAR(rt0.c1)  WHEN ((rt0.c0) NOT NULL) THEN rt0.c1 COLLATE BINARY ELSE CAST(rt0.c2 AS NUMERIC) END  NULLS FIRST, ((((((rt0.c1)AND(rt0.c0)))AND(rt0.c3))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY CASE CHAR(rt0.c1)  WHEN ((rt0.c0) NOT NULL) THEN rt0.c1 COLLATE BINARY ELSE CAST(rt0.c2 AS NUMERIC) END  NULLS FIRST, ((((((rt0.c1)AND(rt0.c0)))AND(rt0.c3))) IS FALSE));
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (NULL) ORDER BY CASE CHAR(rt0.c1)  WHEN ((rt0.c0) NOT NULL) THEN rt0.c1 COLLATE BINARY ELSE CAST(rt0.c2 AS NUMERIC) END  NULLS FIRST, ((((((rt0.c1)AND(rt0.c0)))AND(rt0.c3))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY CASE CHAR(rt0.c1)  WHEN ((rt0.c0) NOT NULL) THEN rt0.c1 COLLATE BINARY ELSE CAST(rt0.c2 AS NUMERIC) END  NULLS FIRST, ((((((rt0.c1)AND(rt0.c0)))AND(rt0.c3))) IS FALSE));
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (NULL) ORDER BY CASE CHAR(rt0.c1)  WHEN ((rt0.c0) NOT NULL) THEN rt0.c1 COLLATE BINARY ELSE CAST(rt0.c2 AS NUMERIC) END  NULLS FIRST, ((((((rt0.c1)AND(rt0.c0)))AND(rt0.c3))) IS FALSE);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0))) NOTNULL)) ORDER BY ((((vt0.c0))<=((vt0.c0))) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0))<=((vt0.c0))) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0))) NOTNULL)) ORDER BY ((((vt0.c0))<=((vt0.c0))) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0))<=((vt0.c0))) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0))) NOTNULL)) ORDER BY ((((vt0.c0))<=((vt0.c0))) IN ()) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0)GLOB('')) THEN (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, x'7abd', '', vt0.c0))) ELSE CAST(vt0.c0 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)GLOB('')) THEN (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, x'7abd', '', vt0.c0))) ELSE CAST(vt0.c0 AS INTEGER) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0)GLOB('')) THEN (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, x'7abd', '', vt0.c0))) ELSE CAST(vt0.c0 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)GLOB('')) THEN (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, x'7abd', '', vt0.c0))) ELSE CAST(vt0.c0 AS INTEGER) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0)GLOB('')) THEN (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, x'7abd', '', vt0.c0))) ELSE CAST(vt0.c0 AS INTEGER) END);
SELECT ALL * FROM rt0, t0, t1 WHERE (((((((rt0.c3)>=(x'')))OR(((rt0.c1)<(t1.c0)))))OR(((t1.c0)<=(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3)>=(x'')))OR(((rt0.c1)<(t1.c0)))))OR(((t1.c0)<=(t1.c0))))) IS TRUE)  as count FROM rt0 NOT INDEXED, t0, t1);
SELECT ALL * FROM rt0, t0, t1 WHERE (((((((rt0.c3)>=(x'')))OR(((rt0.c1)<(t1.c0)))))OR(((t1.c0)<=(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3)>=(x'')))OR(((rt0.c1)<(t1.c0)))))OR(((t1.c0)<=(t1.c0))))) IS TRUE)  as count FROM rt0 NOT INDEXED, t0, t1);
SELECT ALL * FROM rt0, t0, t1 WHERE (((((((rt0.c3)>=(x'')))OR(((rt0.c1)<(t1.c0)))))OR(((t1.c0)<=(t1.c0)))));
SELECT * FROM t1 FULL OUTER JOIN t0 ON (((((((((('o}')*(t1.c0)))AND(((t0.c0) NOTNULL))))AND(((t0.c0)=(0xffffffffa79092fa)))))AND(t1.c0 COLLATE RTRIM)))AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))) WHERE ((~ (CAST(t1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(t1.c0 AS TEXT)))) IS TRUE)  as count FROM t1 FULL OUTER JOIN t0 ON (((((((((('o}')*(t1.c0)))AND(((t0.c0) NOTNULL))))AND(((t0.c0)==(0xffffffffa79092fa)))))AND(t1.c0 COLLATE RTRIM)))AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))));
SELECT * FROM t1 FULL OUTER JOIN t0 ON (((((((((('o}')*(t1.c0)))AND(((t0.c0) NOTNULL))))AND(((t0.c0)=(0xffffffffa79092fa)))))AND(t1.c0 COLLATE RTRIM)))AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))) WHERE ((~ (CAST(t1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(t1.c0 AS TEXT)))) IS TRUE)  as count FROM t1 FULL OUTER JOIN t0 ON (((((((((('o}')*(t1.c0)))AND(((t0.c0) NOTNULL))))AND(((t0.c0)==(0xffffffffa79092fa)))))AND(t1.c0 COLLATE RTRIM)))AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))));
SELECT * FROM t1 FULL OUTER JOIN t0 ON (((((((((('o}')*(t1.c0)))AND(((t0.c0) NOTNULL))))AND(((t0.c0)=(0xffffffffa79092fa)))))AND(t1.c0 COLLATE RTRIM)))AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))) WHERE ((~ (CAST(t1.c0 AS TEXT))));
SELECT ALL * FROM t0 WHERE (CASE (NOT (t0.c0))  WHEN ((0X7d721ed0)LIKE(t0.c0)) THEN ((t0.c0)GLOB(t0.c0)) ELSE ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR('Y%')) END) ORDER BY ((((t0.c0) NOT NULL))||(t0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((CASE (NOT (t0.c0))  WHEN ((0X7d721ed0)LIKE(t0.c0)) THEN ((t0.c0)GLOB(t0.c0)) ELSE ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR('Y%')) END) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) NOT NULL))||(t0.c0 COLLATE BINARY)));
SELECT ALL * FROM t0 WHERE (CASE (NOT (t0.c0))  WHEN ((0X7d721ed0)LIKE(t0.c0)) THEN ((t0.c0)GLOB(t0.c0)) ELSE ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR('Y%')) END) ORDER BY ((((t0.c0) NOT NULL))||(t0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((CASE (NOT (t0.c0))  WHEN ((0X7d721ed0)LIKE(t0.c0)) THEN ((t0.c0)GLOB(t0.c0)) ELSE ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR('Y%')) END) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) NOT NULL))||(t0.c0 COLLATE BINARY)));
SELECT ALL * FROM t0 WHERE (CASE (NOT (t0.c0))  WHEN ((0X7d721ed0)LIKE(t0.c0)) THEN ((t0.c0)GLOB(t0.c0)) ELSE ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR('Y%')) END) ORDER BY ((((t0.c0) NOT NULL))||(t0.c0 COLLATE BINARY));
SELECT ALL COUNT(*) FROM t1, vt0, t0 WHERE ((t1.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t1.c0 IN ())) IS TRUE)  as count FROM t1, vt0, t0);
SELECT ALL COUNT(*) FROM t1, vt0, t0 WHERE ((t1.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t1.c0 IN ())) IS TRUE)  as count FROM t1, vt0, t0);
SELECT ALL COUNT(*) FROM t1, vt0, t0 WHERE ((t1.c0 IN ()));
SELECT * FROM t1, vt0, t0, rt0 WHERE ((((vt0.c0)) NOT BETWEEN (((t1.c0 IN ()))) AND (((NOT (rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((t1.c0 IN ()))) AND (((NOT (rt0.c3)))))) IS TRUE)  as count FROM t1, vt0 NOT INDEXED, t0, rt0);
SELECT * FROM t1, vt0, t0, rt0 WHERE ((((vt0.c0)) NOT BETWEEN (((t1.c0 IN ()))) AND (((NOT (rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((t1.c0 IN ()))) AND (((NOT (rt0.c3)))))) IS TRUE)  as count FROM t1, vt0 NOT INDEXED, t0, rt0);
SELECT * FROM t1, vt0, t0, rt0 WHERE ((((vt0.c0)) NOT BETWEEN (((t1.c0 IN ()))) AND (((NOT (rt0.c3))))));
SELECT * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) BETWEEN (((- (t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), 0.5874800922064356)) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, 't*oRT*>', CAST(0.04359641997699404 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0, t0.c0, t0.c0)) BETWEEN (((- (t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), 0.5874800922064356)) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, 't*oRT*>', CAST(0.04359641997699404 AS INTEGER))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) BETWEEN (((- (t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), 0.5874800922064356)) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, 't*oRT*>', CAST(0.04359641997699404 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0, t0.c0, t0.c0)) BETWEEN (((- (t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), 0.5874800922064356)) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, 't*oRT*>', CAST(0.04359641997699404 AS INTEGER))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) BETWEEN (((- (t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), 0.5874800922064356)) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, 't*oRT*>', CAST(0.04359641997699404 AS INTEGER)))));
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE ((NOT (CASE rt0.c3  WHEN t1.c0 THEN rt0.c0 ELSE rt0.c0 END))) ORDER BY ((ABS(vt0.c0)) NOT BETWEEN (((((rt0.c3)AND(rt0.c1)))AND(rt0.c1))) AND ((+ (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE rt0.c3  WHEN t1.c0 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY ((ABS(vt0.c0)) NOT BETWEEN (((((rt0.c3)AND(rt0.c1)))AND(rt0.c1))) AND ((+ (vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE ((NOT (CASE rt0.c3  WHEN t1.c0 THEN rt0.c0 ELSE rt0.c0 END))) ORDER BY ((ABS(vt0.c0)) NOT BETWEEN (((((rt0.c3)AND(rt0.c1)))AND(rt0.c1))) AND ((+ (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE rt0.c3  WHEN t1.c0 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY ((ABS(vt0.c0)) NOT BETWEEN (((((rt0.c3)AND(rt0.c1)))AND(rt0.c1))) AND ((+ (vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE ((NOT (CASE rt0.c3  WHEN t1.c0 THEN rt0.c0 ELSE rt0.c0 END))) ORDER BY ((ABS(vt0.c0)) NOT BETWEEN (((((rt0.c3)AND(rt0.c1)))AND(rt0.c1))) AND ((+ (vt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t1 ON (- ((+ (rt0.c0)))) RIGHT OUTER JOIN t0 ON (((((rt0.c0))<=((rt0.c1))))*((((('-967067542')AND(rt0.c0)))OR(rt0.c3)))) FULL OUTER JOIN vt0 ON (((((t1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) BETWEEN (((rt0.c3) NOT NULL)) AND (rt0.c2 COLLATE NOCASE)) WHERE ((((((rt0.c1))<((t1.c0))))GLOB((((rt0.c1))<=((rt0.c1)))))) ORDER BY rt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))<((t1.c0))))GLOB((((rt0.c1))<=((rt0.c1)))))) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON (- ((+ (rt0.c0)))) RIGHT OUTER JOIN t0 ON (((((rt0.c0))<=((rt0.c1))))*((((('-967067542')AND(rt0.c0)))OR(rt0.c3)))) FULL OUTER JOIN vt0 ON (((((t1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) BETWEEN (((rt0.c3) NOT NULL)) AND (rt0.c2 COLLATE NOCASE)) ORDER BY rt0.c1 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t1 ON (- ((+ (rt0.c0)))) RIGHT OUTER JOIN t0 ON (((((rt0.c0))<=((rt0.c1))))*((((('-967067542')AND(rt0.c0)))OR(rt0.c3)))) FULL OUTER JOIN vt0 ON (((((t1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) BETWEEN (((rt0.c3) NOT NULL)) AND (rt0.c2 COLLATE NOCASE)) WHERE ((((((rt0.c1))<((t1.c0))))GLOB((((rt0.c1))<=((rt0.c1)))))) ORDER BY rt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))<((t1.c0))))GLOB((((rt0.c1))<=((rt0.c1)))))) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON (- ((+ (rt0.c0)))) RIGHT OUTER JOIN t0 ON (((((rt0.c0))<=((rt0.c1))))*((((('-967067542')AND(rt0.c0)))OR(rt0.c3)))) FULL OUTER JOIN vt0 ON (((((t1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) BETWEEN (((rt0.c3) NOT NULL)) AND (rt0.c2 COLLATE NOCASE)) ORDER BY rt0.c1 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t1 ON (- ((+ (rt0.c0)))) RIGHT OUTER JOIN t0 ON (((((rt0.c0))<=((rt0.c1))))*((((('-967067542')AND(rt0.c0)))OR(rt0.c3)))) FULL OUTER JOIN vt0 ON (((((t1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) BETWEEN (((rt0.c3) NOT NULL)) AND (rt0.c2 COLLATE NOCASE)) WHERE ((((((rt0.c1))<((t1.c0))))GLOB((((rt0.c1))<=((rt0.c1)))))) ORDER BY rt0.c1 ASC  NULLS LAST;
SELECT * FROM t1 INDEXED BY i82 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1 INDEXED BY i82);
SELECT * FROM t1 INDEXED BY i82 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1 INDEXED BY i82);
SELECT ALL * FROM t0, t1, rt0 NATURAL JOIN vt0 WHERE (json_extract(CASE WHEN t0.c0 THEN rt0.c2 END, 448093717));
SELECT SUM(count) FROM (SELECT ((json_extract(CASE WHEN t0.c0 THEN rt0.c2 END, 448093717)) IS TRUE)  as count FROM t0, t1, rt0 NATURAL JOIN vt0);
SELECT ALL * FROM t0, t1, rt0 NATURAL JOIN vt0 WHERE (json_extract(CASE WHEN t0.c0 THEN rt0.c2 END, 448093717));
SELECT SUM(count) FROM (SELECT ((json_extract(CASE WHEN t0.c0 THEN rt0.c2 END, 448093717)) IS TRUE)  as count FROM t0, t1, rt0 NATURAL JOIN vt0);
SELECT ALL * FROM t0, t1, rt0 NATURAL JOIN vt0 WHERE (json_extract(CASE WHEN t0.c0 THEN rt0.c2 END, 448093717));
SELECT COUNT(*) FROM vt0, rt0, t1, t0 WHERE (((((NOT (rt0.c0)), (~ (x'')), (((rt0.c2))!=((rt0.c1))), ((vt0.c0) NOT BETWEEN ('-2126763155') AND (0.1864004707023469)), ((t0.c0) BETWEEN (rt0.c1) AND (rt0.c3))))>((((NULL)AND(rt0.c3)), NULL, ((t1.c0)||(rt0.c1)), CASE WHEN '1105219456' THEN x'c8ff494b' WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN vt0.c0 END, CASE WHEN rt0.c1 THEN rt0.c2 END)))) ORDER BY NULL COLLATE NOCASE DESC  NULLS LAST, ((((rt0.c2)GLOB(rt0.c3))) NOT BETWEEN ((((x''))<>((rt0.c2)))) AND (rt0.c3)) ASC;
SELECT SUM(count) FROM (SELECT ((((((NOT (rt0.c0)), (~ (x'')), (((rt0.c2))<>((rt0.c1))), ((vt0.c0) NOT BETWEEN ('-2126763155') AND (0.1864004707023469)), ((t0.c0) BETWEEN (rt0.c1) AND (rt0.c3))))>((((NULL)AND(rt0.c3)), NULL, ((t1.c0)||(rt0.c1)), CASE WHEN '1105219456' THEN x'c8ff494b' WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN vt0.c0 END, CASE WHEN rt0.c1 THEN rt0.c2 END)))) IS TRUE)  as count FROM vt0, rt0, t1, t0 ORDER BY NULL COLLATE NOCASE DESC  NULLS LAST, ((((rt0.c2)GLOB(rt0.c3))) NOT BETWEEN ((((x''))!=((rt0.c2)))) AND (rt0.c3)) ASC);
SELECT COUNT(*) FROM vt0, rt0, t1, t0 WHERE (((((NOT (rt0.c0)), (~ (x'')), (((rt0.c2))!=((rt0.c1))), ((vt0.c0) NOT BETWEEN ('-2126763155') AND (0.1864004707023469)), ((t0.c0) BETWEEN (rt0.c1) AND (rt0.c3))))>((((NULL)AND(rt0.c3)), NULL, ((t1.c0)||(rt0.c1)), CASE WHEN '1105219456' THEN x'c8ff494b' WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN vt0.c0 END, CASE WHEN rt0.c1 THEN rt0.c2 END)))) ORDER BY NULL COLLATE NOCASE DESC  NULLS LAST, ((((rt0.c2)GLOB(rt0.c3))) NOT BETWEEN ((((x''))<>((rt0.c2)))) AND (rt0.c3)) ASC;
SELECT SUM(count) FROM (SELECT ((((((NOT (rt0.c0)), (~ (x'')), (((rt0.c2))<>((rt0.c1))), ((vt0.c0) NOT BETWEEN ('-2126763155') AND (0.1864004707023469)), ((t0.c0) BETWEEN (rt0.c1) AND (rt0.c3))))>((((NULL)AND(rt0.c3)), NULL, ((t1.c0)||(rt0.c1)), CASE WHEN '1105219456' THEN x'c8ff494b' WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN vt0.c0 END, CASE WHEN rt0.c1 THEN rt0.c2 END)))) IS TRUE)  as count FROM vt0, rt0, t1, t0 ORDER BY NULL COLLATE NOCASE DESC  NULLS LAST, ((((rt0.c2)GLOB(rt0.c3))) NOT BETWEEN ((((x''))!=((rt0.c2)))) AND (rt0.c3)) ASC);
SELECT COUNT(*) FROM vt0, rt0, t1, t0 WHERE (((((NOT (rt0.c0)), (~ (x'')), (((rt0.c2))!=((rt0.c1))), ((vt0.c0) NOT BETWEEN ('-2126763155') AND (0.1864004707023469)), ((t0.c0) BETWEEN (rt0.c1) AND (rt0.c3))))>((((NULL)AND(rt0.c3)), NULL, ((t1.c0)||(rt0.c1)), CASE WHEN '1105219456' THEN x'c8ff494b' WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN vt0.c0 END, CASE WHEN rt0.c1 THEN rt0.c2 END)))) ORDER BY NULL COLLATE NOCASE DESC  NULLS LAST, ((((rt0.c2)GLOB(rt0.c3))) NOT BETWEEN ((((x''))<>((rt0.c2)))) AND (rt0.c3)) ASC;
SELECT ALL COUNT(*) FROM t1, vt0, rt0 INNER JOIN t0 ON ((t1.c0)IS(rt0.c0)) COLLATE BINARY WHERE (((((t0.c0 COLLATE RTRIM)OR(t0.c0)))AND(((rt0.c0)*('740149486'))))) ORDER BY ((rt0.c1) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END) AND (t1.c0)) ASC  NULLS FIRST, -1.202143426E9 DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0 COLLATE RTRIM)OR(t0.c0)))AND(((rt0.c0)*('740149486'))))) IS TRUE)  as count FROM t1, vt0, rt0 INNER JOIN t0 ON ((t1.c0)IS(rt0.c0)) COLLATE BINARY ORDER BY ((rt0.c1) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END) AND (t1.c0)) ASC  NULLS FIRST, -1.202143426E9 DESC);
SELECT ALL COUNT(*) FROM t1, vt0, rt0 INNER JOIN t0 ON ((t1.c0)IS(rt0.c0)) COLLATE BINARY WHERE (((((t0.c0 COLLATE RTRIM)OR(t0.c0)))AND(((rt0.c0)*('740149486'))))) ORDER BY ((rt0.c1) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END) AND (t1.c0)) ASC  NULLS FIRST, -1.202143426E9 DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0 COLLATE RTRIM)OR(t0.c0)))AND(((rt0.c0)*('740149486'))))) IS TRUE)  as count FROM t1, vt0, rt0 INNER JOIN t0 ON ((t1.c0)IS(rt0.c0)) COLLATE BINARY ORDER BY ((rt0.c1) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END) AND (t1.c0)) ASC  NULLS FIRST, -1.202143426E9 DESC);
SELECT ALL COUNT(*) FROM t1, vt0, rt0 INNER JOIN t0 ON ((t1.c0)IS(rt0.c0)) COLLATE BINARY WHERE (((((t0.c0 COLLATE RTRIM)OR(t0.c0)))AND(((rt0.c0)*('740149486'))))) ORDER BY ((rt0.c1) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END) AND (t1.c0)) ASC  NULLS FIRST, -1.202143426E9 DESC;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON (((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((((t1.c0)IS NOT(rt0.c2))))) WHERE (CAST((((0.39422609480885995, t1.c0, t1.c0)) NOT BETWEEN ((0.9934655820538274, rt0.c0, x'')) AND ((rt0.c3, rt0.c0, t1.c0))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((0.39422609480885995, t1.c0, t1.c0)) NOT BETWEEN ((0.9934655820538274, rt0.c0, x'')) AND ((rt0.c3, rt0.c0, t1.c0))) AS INTEGER)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON (((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((((t1.c0)IS NOT(rt0.c2))))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON (((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((((t1.c0)IS NOT(rt0.c2))))) WHERE (CAST((((0.39422609480885995, t1.c0, t1.c0)) NOT BETWEEN ((0.9934655820538274, rt0.c0, x'')) AND ((rt0.c3, rt0.c0, t1.c0))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((0.39422609480885995, t1.c0, t1.c0)) NOT BETWEEN ((0.9934655820538274, rt0.c0, x'')) AND ((rt0.c3, rt0.c0, t1.c0))) AS INTEGER)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON (((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((((t1.c0)IS NOT(rt0.c2))))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON (((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((((t1.c0)IS NOT(rt0.c2))))) WHERE (CAST((((0.39422609480885995, t1.c0, t1.c0)) NOT BETWEEN ((0.9934655820538274, rt0.c0, x'')) AND ((rt0.c3, rt0.c0, t1.c0))) AS INTEGER));
SELECT ALL * FROM t0, t1, rt0, vt0 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM t0, t1, rt0, vt0);
SELECT ALL * FROM t0, t1, rt0, vt0 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM t0, t1, rt0, vt0);
SELECT ALL * FROM t0, t1, rt0, vt0 WHERE (SQLITE_VERSION());
SELECT COUNT(*) FROM t1 INDEXED BY i82 WHERE ('1486364336' COLLATE BINARY) ORDER BY CASE WHEN ((((t1.c0)OR(t1.c0)))OR(t1.c0)) THEN t1.c0 COLLATE BINARY WHEN (- (t1.c0)) THEN -1234873880 WHEN CAST(t1.c0 AS INTEGER) THEN t1.c0 COLLATE RTRIM ELSE NULL END DESC  NULLS FIRST, (NOT (CAST(t1.c0 AS TEXT))) ASC, rtreenode(((((NULL)OR(t1.c0)))AND('666079350')), ((t1.c0)IS NOT(t1.c0)));
SELECT SUM(count) FROM (SELECT (('1486364336' COLLATE BINARY) IS TRUE)  as count FROM t1 INDEXED BY i82 ORDER BY CASE WHEN ((((t1.c0)OR(t1.c0)))OR(t1.c0)) THEN t1.c0 COLLATE BINARY WHEN (- (t1.c0)) THEN -1234873880 WHEN CAST(t1.c0 AS INTEGER) THEN t1.c0 COLLATE RTRIM ELSE NULL END DESC  NULLS FIRST, (NOT (CAST(t1.c0 AS TEXT))) ASC, rtreenode(((((NULL)OR(t1.c0)))AND('666079350')), ((t1.c0)IS NOT(t1.c0))));
SELECT COUNT(*) FROM t1 INDEXED BY i82 WHERE ('1486364336' COLLATE BINARY) ORDER BY CASE WHEN ((((t1.c0)OR(t1.c0)))OR(t1.c0)) THEN t1.c0 COLLATE BINARY WHEN (- (t1.c0)) THEN -1234873880 WHEN CAST(t1.c0 AS INTEGER) THEN t1.c0 COLLATE RTRIM ELSE NULL END DESC  NULLS FIRST, (NOT (CAST(t1.c0 AS TEXT))) ASC, rtreenode(((((NULL)OR(t1.c0)))AND('666079350')), ((t1.c0)IS NOT(t1.c0)));
SELECT SUM(count) FROM (SELECT (('1486364336' COLLATE BINARY) IS TRUE)  as count FROM t1 INDEXED BY i82 ORDER BY CASE WHEN ((((t1.c0)OR(t1.c0)))OR(t1.c0)) THEN t1.c0 COLLATE BINARY WHEN (- (t1.c0)) THEN -1234873880 WHEN CAST(t1.c0 AS INTEGER) THEN t1.c0 COLLATE RTRIM ELSE NULL END DESC  NULLS FIRST, (NOT (CAST(t1.c0 AS TEXT))) ASC, rtreenode(((((NULL)OR(t1.c0)))AND('666079350')), ((t1.c0)IS NOT(t1.c0))));
SELECT ALL COUNT(*) FROM t1, t0, vt0 WHERE ((((((-2103761867))=((t0.c0)))) NOT BETWEEN (t1.c0 COLLATE RTRIM) AND (CASE WHEN t1.c0 THEN t1.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((-2103761867))=((t0.c0)))) NOT BETWEEN (t1.c0 COLLATE RTRIM) AND (CASE WHEN t1.c0 THEN t1.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM t1, t0, vt0);
SELECT ALL COUNT(*) FROM t1, t0, vt0 WHERE ((((((-2103761867))=((t0.c0)))) NOT BETWEEN (t1.c0 COLLATE RTRIM) AND (CASE WHEN t1.c0 THEN t1.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((-2103761867))=((t0.c0)))) NOT BETWEEN (t1.c0 COLLATE RTRIM) AND (CASE WHEN t1.c0 THEN t1.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM t1, t0, vt0);
SELECT ALL COUNT(*) FROM t1, t0, vt0 WHERE ((((((-2103761867))=((t0.c0)))) NOT BETWEEN (t1.c0 COLLATE RTRIM) AND (CASE WHEN t1.c0 THEN t1.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END)));
SELECT * FROM t1, rt0 INNER JOIN vt0 ON (~ ((- (0.15613221503396923)))) WHERE ((ABS(DISTINCT t1.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((ABS(DISTINCT t1.c0) IN ())) IS TRUE)  as count FROM t1, rt0 INNER JOIN vt0 ON (~ ((- (0.15613221503396923)))));
SELECT * FROM t1, rt0 INNER JOIN vt0 ON (~ ((- (0.15613221503396923)))) WHERE ((ABS(DISTINCT t1.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((ABS(DISTINCT t1.c0) IN ())) IS TRUE)  as count FROM t1, rt0 INNER JOIN vt0 ON (~ ((- (0.15613221503396923)))));
SELECT * FROM t1, rt0 INNER JOIN vt0 ON (~ ((- (0.15613221503396923)))) WHERE ((ABS(DISTINCT t1.c0) IN ()));
SELECT ALL * FROM t0 FULL OUTER JOIN t1 ON ((((t1.c0) NOT BETWEEN (t0.c0) AND (x''))) NOT BETWEEN (CAST(t1.c0 AS BLOB)) AND (t0.c0)) WHERE (NULL) ORDER BY ((((CAST(t1.c0 AS NUMERIC))OR((NOT (t1.c0)))))OR((- (t0.c0)))) DESC, ((CAST(t1.c0 AS NUMERIC)) BETWEEN (t1.c0) AND ((((t0.c0))<=((t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 FULL OUTER JOIN t1 ON ((((t1.c0) NOT BETWEEN (t0.c0) AND (x''))) NOT BETWEEN (CAST(t1.c0 AS BLOB)) AND (t0.c0)) ORDER BY ((((CAST(t1.c0 AS NUMERIC))OR((NOT (t1.c0)))))OR((- (t0.c0)))) DESC, ((CAST(t1.c0 AS NUMERIC)) BETWEEN (t1.c0) AND ((((t0.c0))<=((t0.c0))))));
SELECT ALL * FROM t0 FULL OUTER JOIN t1 ON ((((t1.c0) NOT BETWEEN (t0.c0) AND (x''))) NOT BETWEEN (CAST(t1.c0 AS BLOB)) AND (t0.c0)) WHERE (NULL) ORDER BY ((((CAST(t1.c0 AS NUMERIC))OR((NOT (t1.c0)))))OR((- (t0.c0)))) DESC, ((CAST(t1.c0 AS NUMERIC)) BETWEEN (t1.c0) AND ((((t0.c0))<=((t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 FULL OUTER JOIN t1 ON ((((t1.c0) NOT BETWEEN (t0.c0) AND (x''))) NOT BETWEEN (CAST(t1.c0 AS BLOB)) AND (t0.c0)) ORDER BY ((((CAST(t1.c0 AS NUMERIC))OR((NOT (t1.c0)))))OR((- (t0.c0)))) DESC, ((CAST(t1.c0 AS NUMERIC)) BETWEEN (t1.c0) AND ((((t0.c0))<=((t0.c0))))));
SELECT ALL * FROM t0 FULL OUTER JOIN t1 ON ((((t1.c0) NOT BETWEEN (t0.c0) AND (x''))) NOT BETWEEN (CAST(t1.c0 AS BLOB)) AND (t0.c0)) WHERE (NULL) ORDER BY ((((CAST(t1.c0 AS NUMERIC))OR((NOT (t1.c0)))))OR((- (t0.c0)))) DESC, ((CAST(t1.c0 AS NUMERIC)) BETWEEN (t1.c0) AND ((((t0.c0))<=((t0.c0)))));
SELECT * FROM t1 WHERE (((t1.c0) IS TRUE) COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) IS TRUE) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((t1.c0) IS TRUE) COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) IS TRUE) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((t1.c0) IS TRUE) COLLATE BINARY COLLATE RTRIM);
SELECT COUNT(*) FROM t0, t1, rt0, vt0 WHERE (((((vt0.c0)-(rt0.c0)))+(((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)-(rt0.c0)))+(((((rt0.c2)AND(rt0.c2)))OR(rt0.c1))))) IS TRUE)  as count FROM t0, t1, rt0, vt0);
SELECT COUNT(*) FROM t0, t1, rt0, vt0 WHERE (((((vt0.c0)-(rt0.c0)))+(((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)-(rt0.c0)))+(((((rt0.c2)AND(rt0.c2)))OR(rt0.c1))))) IS TRUE)  as count FROM t0, t1, rt0, vt0);
SELECT COUNT(*) FROM t0, t1, rt0, vt0 WHERE (((((vt0.c0)-(rt0.c0)))+(((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))));
SELECT COUNT(*) FROM t0, t1 WHERE (t1.c0) ORDER BY CAST(t1.c0 AS REAL) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t0, t1 ORDER BY CAST(t1.c0 AS REAL) COLLATE NOCASE ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, t1 WHERE (t1.c0) ORDER BY CAST(t1.c0 AS REAL) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t0, t1 ORDER BY CAST(t1.c0 AS REAL) COLLATE NOCASE ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, t1 WHERE (t1.c0) ORDER BY CAST(t1.c0 AS REAL) COLLATE NOCASE ASC  NULLS FIRST;
SELECT ALL * FROM t1, rt0, t0 WHERE ((~ (CAST(rt0.c1 AS BLOB)))) ORDER BY LIKELY(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c0) AND (t0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM t1, rt0, t0 ORDER BY LIKELY(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c0) AND (t0.c0)))  NULLS LAST);
SELECT ALL * FROM t1, rt0, t0 WHERE ((~ (CAST(rt0.c1 AS BLOB)))) ORDER BY LIKELY(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c0) AND (t0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM t1, rt0, t0 ORDER BY LIKELY(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c0) AND (t0.c0)))  NULLS LAST);
SELECT ALL * FROM t1, rt0, t0 WHERE ((~ (CAST(rt0.c1 AS BLOB)))) ORDER BY LIKELY(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c0) AND (t0.c0)))  NULLS LAST;
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((vt0.c0 IN (vt0.c0))) NOT NULL)) ORDER BY TRIM(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c1) AND (''))), ((rt0.c2) IS FALSE) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY TRIM(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c1) AND (''))), ((rt0.c2) IS FALSE) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((vt0.c0 IN (vt0.c0))) NOT NULL)) ORDER BY TRIM(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c1) AND (''))), ((rt0.c2) IS FALSE) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY TRIM(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c1) AND (''))), ((rt0.c2) IS FALSE) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((vt0.c0 IN (vt0.c0))) NOT NULL)) ORDER BY TRIM(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c1) AND (''))), ((rt0.c2) IS FALSE) COLLATE NOCASE ASC  NULLS FIRST;
SELECT * FROM t0, t1 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN '630854492' THEN t0.c0 WHEN t1.c0 THEN t1.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN t0.c0 WHEN '630854492' THEN t0.c0 WHEN t1.c0 THEN t1.c0 END) ISNULL)) IS TRUE)  as count FROM t0, t1);
SELECT * FROM t0, t1 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN '630854492' THEN t0.c0 WHEN t1.c0 THEN t1.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN t0.c0 WHEN '630854492' THEN t0.c0 WHEN t1.c0 THEN t1.c0 END) ISNULL)) IS TRUE)  as count FROM t0, t1);
SELECT * FROM t0, t1 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN '630854492' THEN t0.c0 WHEN t1.c0 THEN t1.c0 END) ISNULL));
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((((vt0.c0)GLOB(t1.c0)))==(json_type(t1.c0)))) ORDER BY 'XJ뭳z庎axp' DESC  NULLS FIRST, UPPER(((((((((vt0.c0)AND(0.6778361726226179)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) DESC, ((((vt0.c0, vt0.c0, vt0.c0, t1.c0, t1.c0))>((t1.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) IN ()) ASC, LOWER(DISTINCT ((t1.c0) ISNULL)) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)GLOB(t1.c0)))=(json_type(t1.c0)))) IS TRUE)  as count FROM vt0, t1 ORDER BY 'XJ뭳z庎axp' DESC  NULLS FIRST, UPPER(((((((((vt0.c0)AND(0.6778361726226179)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) DESC, ((((vt0.c0, vt0.c0, vt0.c0, t1.c0, t1.c0))>((t1.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) IN ()) ASC, LOWER(DISTINCT ((t1.c0) ISNULL)) DESC);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((((vt0.c0)GLOB(t1.c0)))==(json_type(t1.c0)))) ORDER BY 'XJ뭳z庎axp' DESC  NULLS FIRST, UPPER(((((((((vt0.c0)AND(0.6778361726226179)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) DESC, ((((vt0.c0, vt0.c0, vt0.c0, t1.c0, t1.c0))>((t1.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) IN ()) ASC, LOWER(DISTINCT ((t1.c0) ISNULL)) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)GLOB(t1.c0)))=(json_type(t1.c0)))) IS TRUE)  as count FROM vt0, t1 ORDER BY 'XJ뭳z庎axp' DESC  NULLS FIRST, UPPER(((((((((vt0.c0)AND(0.6778361726226179)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) DESC, ((((vt0.c0, vt0.c0, vt0.c0, t1.c0, t1.c0))>((t1.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) IN ()) ASC, LOWER(DISTINCT ((t1.c0) ISNULL)) DESC);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((((vt0.c0)GLOB(t1.c0)))==(json_type(t1.c0)))) ORDER BY 'XJ뭳z庎axp' DESC  NULLS FIRST, UPPER(((((((((vt0.c0)AND(0.6778361726226179)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) DESC, ((((vt0.c0, vt0.c0, vt0.c0, t1.c0, t1.c0))>((t1.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) IN ()) ASC, LOWER(DISTINCT ((t1.c0) ISNULL)) DESC;
SELECT COUNT(*) FROM t0, t1 WHERE ((((((t1.c0, t0.c0, t1.c0))<=(('S6', t0.c0, t0.c0))))IS(COALESCE(t0.c0, t1.c0)))) ORDER BY (+ (NULL)), CAST(NULLIF(t1.c0, t0.c0) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0, t0.c0, t1.c0))<=(('S6', t0.c0, t0.c0))))IS(COALESCE(t0.c0, t1.c0)))) IS TRUE)  as count FROM t0, t1 ORDER BY (+ (NULL)), CAST(NULLIF(t1.c0, t0.c0) AS REAL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, t1 WHERE ((((((t1.c0, t0.c0, t1.c0))<=(('S6', t0.c0, t0.c0))))IS(COALESCE(t0.c0, t1.c0)))) ORDER BY (+ (NULL)), CAST(NULLIF(t1.c0, t0.c0) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0, t0.c0, t1.c0))<=(('S6', t0.c0, t0.c0))))IS(COALESCE(t0.c0, t1.c0)))) IS TRUE)  as count FROM t0, t1 ORDER BY (+ (NULL)), CAST(NULLIF(t1.c0, t0.c0) AS REAL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, t1 WHERE ((((((t1.c0, t0.c0, t1.c0))<=(('S6', t0.c0, t0.c0))))IS(COALESCE(t0.c0, t1.c0)))) ORDER BY (+ (NULL)), CAST(NULLIF(t1.c0, t0.c0) AS REAL) ASC  NULLS FIRST;
SELECT * FROM rt0, t1, t0 WHERE (CAST((NOT (rt0.c3)) AS REAL)) ORDER BY (x'' IN ()) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (rt0.c3)) AS REAL)) IS TRUE)  as count FROM rt0, t1, t0 ORDER BY (x'' IN ()) COLLATE BINARY);
SELECT * FROM rt0, t1, t0 WHERE (CAST((NOT (rt0.c3)) AS REAL)) ORDER BY (x'' IN ()) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (rt0.c3)) AS REAL)) IS TRUE)  as count FROM rt0, t1, t0 ORDER BY (x'' IN ()) COLLATE BINARY);
SELECT * FROM rt0, t1, t0 WHERE (CAST((NOT (rt0.c3)) AS REAL)) ORDER BY (x'' IN ()) COLLATE BINARY;
SELECT ALL COUNT(*) FROM t1 LEFT OUTER JOIN t0 ON (((t0.c0 COLLATE RTRIM, t0.c0 COLLATE BINARY, TRIM(DISTINCT t1.c0)))>=((((t1.c0)AND(t0.c0)), (((t0.c0))<=((0.1117972954196278))), LOWER(t1.c0)))) WHERE ((DATETIME(t1.c0, t1.c0, t0.c0, t1.c0, 131804456) IN ())) ORDER BY ((t1.c0) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((DATETIME(t1.c0, t1.c0, t0.c0, t1.c0, 131804456) IN ())) IS TRUE)  as count FROM t1 LEFT OUTER JOIN t0 ON (((t0.c0 COLLATE RTRIM, t0.c0 COLLATE BINARY, TRIM(DISTINCT t1.c0)))>=((((t1.c0)AND(t0.c0)), (((t0.c0))<=((0.1117972954196278))), LOWER(t1.c0)))) ORDER BY ((t1.c0) ISNULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 LEFT OUTER JOIN t0 ON (((t0.c0 COLLATE RTRIM, t0.c0 COLLATE BINARY, TRIM(DISTINCT t1.c0)))>=((((t1.c0)AND(t0.c0)), (((t0.c0))<=((0.1117972954196278))), LOWER(t1.c0)))) WHERE ((DATETIME(t1.c0, t1.c0, t0.c0, t1.c0, 131804456) IN ())) ORDER BY ((t1.c0) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((DATETIME(t1.c0, t1.c0, t0.c0, t1.c0, 131804456) IN ())) IS TRUE)  as count FROM t1 LEFT OUTER JOIN t0 ON (((t0.c0 COLLATE RTRIM, t0.c0 COLLATE BINARY, TRIM(DISTINCT t1.c0)))>=((((t1.c0)AND(t0.c0)), (((t0.c0))<=((0.1117972954196278))), LOWER(t1.c0)))) ORDER BY ((t1.c0) ISNULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 LEFT OUTER JOIN t0 ON (((t0.c0 COLLATE RTRIM, t0.c0 COLLATE BINARY, TRIM(DISTINCT t1.c0)))>=((((t1.c0)AND(t0.c0)), (((t0.c0))<=((0.1117972954196278))), LOWER(t1.c0)))) WHERE ((DATETIME(t1.c0, t1.c0, t0.c0, t1.c0, 131804456) IN ())) ORDER BY ((t1.c0) ISNULL) ASC  NULLS LAST;
SELECT * FROM t1, vt0, t0, rt0 WHERE (CAST(x'' AS REAL)) ORDER BY '^5' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS REAL)) IS TRUE)  as count FROM t1, vt0, t0, rt0 ORDER BY '^5' ASC  NULLS LAST);
SELECT * FROM t1, vt0, t0, rt0 WHERE (CAST(x'' AS REAL)) ORDER BY '^5' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS REAL)) IS TRUE)  as count FROM t1, vt0, t0, rt0 ORDER BY '^5' ASC  NULLS LAST);
SELECT * FROM t1, vt0, t0, rt0 WHERE (CAST(x'' AS REAL)) ORDER BY '^5' ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))>=(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) ORDER BY ((t0.c0) IS TRUE) ASC  NULLS LAST, 0.8710152146040322 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))>=(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0) IS TRUE) ASC  NULLS LAST, 0.8710152146040322 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))>=(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) ORDER BY ((t0.c0) IS TRUE) ASC  NULLS LAST, 0.8710152146040322 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))>=(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0) IS TRUE) ASC  NULLS LAST, 0.8710152146040322 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))>=(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) ORDER BY ((t0.c0) IS TRUE) ASC  NULLS LAST, 0.8710152146040322 DESC  NULLS FIRST;
SELECT * FROM t0, t1 WHERE ((((t0.c0, t1.c0 COLLATE NOCASE, ((t1.c0) IS FALSE)))<=((((t0.c0) BETWEEN (x'') AND (t1.c0)), ((1584616733) BETWEEN (t1.c0) AND (t1.c0)), t0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((t0.c0, t1.c0 COLLATE NOCASE, ((t1.c0) IS FALSE)))<=((((t0.c0) BETWEEN (x'') AND (t1.c0)), ((1584616733) BETWEEN (t1.c0) AND (t1.c0)), t0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM t0, t1);
SELECT * FROM t0, t1 WHERE ((((t0.c0, t1.c0 COLLATE NOCASE, ((t1.c0) IS FALSE)))<=((((t0.c0) BETWEEN (x'') AND (t1.c0)), ((1584616733) BETWEEN (t1.c0) AND (t1.c0)), t0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((t0.c0, t1.c0 COLLATE NOCASE, ((t1.c0) IS FALSE)))<=((((t0.c0) BETWEEN (x'') AND (t1.c0)), ((1584616733) BETWEEN (t1.c0) AND (t1.c0)), t0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM t0, t1);
SELECT * FROM t0, t1 WHERE ((((t0.c0, t1.c0 COLLATE NOCASE, ((t1.c0) IS FALSE)))<=((((t0.c0) BETWEEN (x'') AND (t1.c0)), ((1584616733) BETWEEN (t1.c0) AND (t1.c0)), t0.c0 COLLATE NOCASE))));
SELECT COUNT(*) FROM t0 WHERE ((~ (t0.c0)) COLLATE RTRIM) ORDER BY ((((t0.c0)<<(t0.c0))) IS FALSE), (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))<=(((+ (t0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)<<(t0.c0))) IS FALSE), (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))<=(((+ (t0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((~ (t0.c0)) COLLATE RTRIM) ORDER BY ((((t0.c0)<<(t0.c0))) IS FALSE), (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))<=(((+ (t0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)<<(t0.c0))) IS FALSE), (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))<=(((+ (t0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((~ (t0.c0)) COLLATE RTRIM) ORDER BY ((((t0.c0)<<(t0.c0))) IS FALSE), (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))<=(((+ (t0.c0)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((x'de12') NOT NULL)))<=(((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN 'R&' END)&((vt0.c0 IN (vt0.c0, vt0.c0)))), ((vt0.c0 COLLATE NOCASE)&(TRIM(vt0.c0, vt0.c0)))  NULLS FIRST, (((CASE WHEN vt0.c0 THEN 'Qc' ELSE vt0.c0 END))=(((((vt0.c0))>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((x'de12') NOT NULL)))<=(((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN 'R&' END)&((vt0.c0 IN (vt0.c0, vt0.c0)))), ((vt0.c0 COLLATE NOCASE)&(TRIM(vt0.c0, vt0.c0)))  NULLS FIRST, (((CASE WHEN vt0.c0 THEN 'Qc' ELSE vt0.c0 END))==(((((vt0.c0))>((vt0.c0)))))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((x'de12') NOT NULL)))<=(((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN 'R&' END)&((vt0.c0 IN (vt0.c0, vt0.c0)))), ((vt0.c0 COLLATE NOCASE)&(TRIM(vt0.c0, vt0.c0)))  NULLS FIRST, (((CASE WHEN vt0.c0 THEN 'Qc' ELSE vt0.c0 END))=(((((vt0.c0))>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((x'de12') NOT NULL)))<=(((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN 'R&' END)&((vt0.c0 IN (vt0.c0, vt0.c0)))), ((vt0.c0 COLLATE NOCASE)&(TRIM(vt0.c0, vt0.c0)))  NULLS FIRST, (((CASE WHEN vt0.c0 THEN 'Qc' ELSE vt0.c0 END))==(((((vt0.c0))>((vt0.c0)))))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((x'de12') NOT NULL)))<=(((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN 'R&' END)&((vt0.c0 IN (vt0.c0, vt0.c0)))), ((vt0.c0 COLLATE NOCASE)&(TRIM(vt0.c0, vt0.c0)))  NULLS FIRST, (((CASE WHEN vt0.c0 THEN 'Qc' ELSE vt0.c0 END))=(((((vt0.c0))>((vt0.c0))))));
SELECT COUNT(*) FROM vt0, t1 RIGHT OUTER JOIN t0 ON ((((t1.c0) NOT NULL)) NOT NULL) WHERE ((+ (CASE WHEN NULL THEN t1.c0 END))) ORDER BY (+ (((t1.c0)+(t1.c0))));
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN NULL THEN t1.c0 END))) IS TRUE)  as count FROM vt0, t1 RIGHT OUTER JOIN t0 ON ((((t1.c0) NOT NULL)) NOT NULL) ORDER BY (+ (((t1.c0)+(t1.c0)))));
SELECT COUNT(*) FROM vt0, t1 RIGHT OUTER JOIN t0 ON ((((t1.c0) NOT NULL)) NOT NULL) WHERE ((+ (CASE WHEN NULL THEN t1.c0 END))) ORDER BY (+ (((t1.c0)+(t1.c0))));
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN NULL THEN t1.c0 END))) IS TRUE)  as count FROM vt0, t1 RIGHT OUTER JOIN t0 ON ((((t1.c0) NOT NULL)) NOT NULL) ORDER BY (+ (((t1.c0)+(t1.c0)))));
SELECT COUNT(*) FROM vt0, t1 RIGHT OUTER JOIN t0 ON ((((t1.c0) NOT NULL)) NOT NULL) WHERE ((+ (CASE WHEN NULL THEN t1.c0 END))) ORDER BY (+ (((t1.c0)+(t1.c0))));
SELECT COUNT(*) FROM rt0, t0, t1 WHERE ((((t1.c0))<((rt0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((t1.c0))<((rt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0, t1);
SELECT COUNT(*) FROM rt0, t0, t1 WHERE ((((t1.c0))<((rt0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((t1.c0))<((rt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0, t1);
SELECT COUNT(*) FROM rt0, t0, t1 WHERE ((((t1.c0))<((rt0.c0))) COLLATE RTRIM);
SELECT * FROM t0, t1 WHERE ((((t1.c0)) BETWEEN ((t0.c0 COLLATE BINARY)) AND (((((t0.c0, t1.c0, t0.c0))<((t1.c0, t0.c0, t0.c0))))))) ORDER BY (- (((t0.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT (((((t1.c0)) BETWEEN ((t0.c0 COLLATE BINARY)) AND (((((t0.c0, t1.c0, t0.c0))<((t1.c0, t0.c0, t0.c0))))))) IS TRUE)  as count FROM t0, t1 ORDER BY (- (((t0.c0) IS TRUE))) DESC);
SELECT * FROM t0, t1 WHERE ((((t1.c0)) BETWEEN ((t0.c0 COLLATE BINARY)) AND (((((t0.c0, t1.c0, t0.c0))<((t1.c0, t0.c0, t0.c0))))))) ORDER BY (- (((t0.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT (((((t1.c0)) BETWEEN ((t0.c0 COLLATE BINARY)) AND (((((t0.c0, t1.c0, t0.c0))<((t1.c0, t0.c0, t0.c0))))))) IS TRUE)  as count FROM t0, t1 ORDER BY (- (((t0.c0) IS TRUE))) DESC);
SELECT * FROM t0, t1 WHERE ((((t1.c0)) BETWEEN ((t0.c0 COLLATE BINARY)) AND (((((t0.c0, t1.c0, t0.c0))<((t1.c0, t0.c0, t0.c0))))))) ORDER BY (- (((t0.c0) IS TRUE))) DESC;
SELECT * FROM t0, rt0 WHERE (((rt0.c0)+(0.5924781079511124)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c0)+(0.5924781079511124)) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((rt0.c0)+(0.5924781079511124)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c0)+(0.5924781079511124)) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((rt0.c0)+(0.5924781079511124)) COLLATE BINARY);
SELECT ALL * FROM t1, rt0, t0, vt0 WHERE ((NOT (((((((((rt0.c0)OR(t0.c0)))OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c2))))) ORDER BY ((((((rt0.c3)OR(rt0.c2)))AND(rt0.c1)))AND(((rt0.c2) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (((((((((rt0.c0)OR(t0.c0)))OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c2))))) IS TRUE)  as count FROM t1, rt0, t0, vt0 ORDER BY ((((((rt0.c3)OR(rt0.c2)))AND(rt0.c1)))AND(((rt0.c2) NOTNULL))) DESC);
SELECT ALL * FROM t1, rt0, t0, vt0 WHERE ((NOT (((((((((rt0.c0)OR(t0.c0)))OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c2))))) ORDER BY ((((((rt0.c3)OR(rt0.c2)))AND(rt0.c1)))AND(((rt0.c2) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (((((((((rt0.c0)OR(t0.c0)))OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c2))))) IS TRUE)  as count FROM t1, rt0, t0, vt0 ORDER BY ((((((rt0.c3)OR(rt0.c2)))AND(rt0.c1)))AND(((rt0.c2) NOTNULL))) DESC);
SELECT ALL * FROM t1, rt0, t0, vt0 WHERE ((NOT (((((((((rt0.c0)OR(t0.c0)))OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c2))))) ORDER BY ((((((rt0.c3)OR(rt0.c2)))AND(rt0.c1)))AND(((rt0.c2) NOTNULL))) DESC;
SELECT ALL COUNT(*) FROM t1, t0, rt0 WHERE (CAST(((((rt0.c2)AND(rt0.c2)))OR(rt0.c3)) AS INTEGER)) ORDER BY ((t1.c0)<<(rt0.c2)) COLLATE NOCASE, rt0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c2)AND(rt0.c2)))OR(rt0.c3)) AS INTEGER)) IS TRUE)  as count FROM t1, t0, rt0 ORDER BY ((t1.c0)<<(rt0.c2)) COLLATE NOCASE, rt0.c2 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, t0, rt0 WHERE (CAST(((((rt0.c2)AND(rt0.c2)))OR(rt0.c3)) AS INTEGER)) ORDER BY ((t1.c0)<<(rt0.c2)) COLLATE NOCASE, rt0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c2)AND(rt0.c2)))OR(rt0.c3)) AS INTEGER)) IS TRUE)  as count FROM t1, t0, rt0 ORDER BY ((t1.c0)<<(rt0.c2)) COLLATE NOCASE, rt0.c2 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, t0, rt0 WHERE (CAST(((((rt0.c2)AND(rt0.c2)))OR(rt0.c3)) AS INTEGER)) ORDER BY ((t1.c0)<<(rt0.c2)) COLLATE NOCASE, rt0.c2 DESC  NULLS FIRST;
SELECT ALL * FROM t0, rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c1)) AND (('*j'))))<>(((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)) BETWEEN ((rt0.c1)) AND (('*j'))))!=(((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c1)) AND (('*j'))))<>(((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)) BETWEEN ((rt0.c1)) AND (('*j'))))!=(((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c1)) AND (('*j'))))<>(((rt0.c1) IS TRUE))));
SELECT ALL * FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (t1.c0);
SELECT COUNT(*) FROM t0, rt0, t1, vt0 WHERE ((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE RTRIM) ORDER BY CAST((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((0X68c3ffaf))) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0, t1, vt0 ORDER BY CAST((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((0X68c3ffaf))) AS NUMERIC) DESC);
SELECT COUNT(*) FROM t0, rt0, t1, vt0 WHERE ((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE RTRIM) ORDER BY CAST((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((0X68c3ffaf))) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0, t1, vt0 ORDER BY CAST((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((0X68c3ffaf))) AS NUMERIC) DESC);
SELECT COUNT(*) FROM t0, rt0, t1, vt0 WHERE ((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE RTRIM) ORDER BY CAST((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((0X68c3ffaf))) AS NUMERIC) DESC;
SELECT * FROM t0 LEFT OUTER JOIN t1 ON (+ ((~ (vt0.c0)))) LEFT OUTER JOIN vt0 ON LIKELY(DISTINCT TRIM(DISTINCT t1.c0, vt0.c0)) WHERE (((((CASE t1.c0  WHEN t1.c0 THEN vt0.c0 WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN '-857349881' ELSE t0.c0 END)AND((vt0.c0 IN ('-1312729388')))))AND(((t0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE t1.c0  WHEN t1.c0 THEN vt0.c0 WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN '-857349881' ELSE t0.c0 END)AND((vt0.c0 IN ('-1312729388')))))AND(((t0.c0) IS TRUE)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN t1 ON (+ ((~ (vt0.c0)))) LEFT OUTER JOIN vt0 ON LIKELY(DISTINCT TRIM(DISTINCT t1.c0, vt0.c0)));
SELECT * FROM t0 LEFT OUTER JOIN t1 ON (+ ((~ (vt0.c0)))) LEFT OUTER JOIN vt0 ON LIKELY(DISTINCT TRIM(DISTINCT t1.c0, vt0.c0)) WHERE (((((CASE t1.c0  WHEN t1.c0 THEN vt0.c0 WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN '-857349881' ELSE t0.c0 END)AND((vt0.c0 IN ('-1312729388')))))AND(((t0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE t1.c0  WHEN t1.c0 THEN vt0.c0 WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN '-857349881' ELSE t0.c0 END)AND((vt0.c0 IN ('-1312729388')))))AND(((t0.c0) IS TRUE)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN t1 ON (+ ((~ (vt0.c0)))) LEFT OUTER JOIN vt0 ON LIKELY(DISTINCT TRIM(DISTINCT t1.c0, vt0.c0)));
SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt0 ON (x'' IN (0xffffffffb0db009a)) WHERE (((t1.c0) IS FALSE)) ORDER BY ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE vt0.c0 END)%(CASE WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c0 END))  NULLS FIRST, (~ (((vt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((((t1.c0) IS FALSE)) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON (x'' IN (0Xffffffffb0db009a)) ORDER BY ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE vt0.c0 END)%(CASE WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c0 END))  NULLS FIRST, (~ (((vt0.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt0 ON (x'' IN (0xffffffffb0db009a)) WHERE (((t1.c0) IS FALSE)) ORDER BY ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE vt0.c0 END)%(CASE WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c0 END))  NULLS FIRST, (~ (((vt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((((t1.c0) IS FALSE)) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON (x'' IN (0Xffffffffb0db009a)) ORDER BY ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE vt0.c0 END)%(CASE WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c0 END))  NULLS FIRST, (~ (((vt0.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt0 ON (x'' IN (0xffffffffb0db009a)) WHERE (((t1.c0) IS FALSE)) ORDER BY ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE vt0.c0 END)%(CASE WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c0 END))  NULLS FIRST, (~ (((vt0.c0) NOT NULL)));
SELECT * FROM rt0, t1, t0, vt0 WHERE (((((rt0.c2)<(t0.c0))) BETWEEN ((rt0.c0 IN ())) AND (((x'') BETWEEN (vt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)<(t0.c0))) BETWEEN ((rt0.c0 IN ())) AND (((x'') BETWEEN (vt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, t1, t0, vt0);
SELECT * FROM rt0, t1, t0, vt0 WHERE (((((rt0.c2)<(t0.c0))) BETWEEN ((rt0.c0 IN ())) AND (((x'') BETWEEN (vt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)<(t0.c0))) BETWEEN ((rt0.c0 IN ())) AND (((x'') BETWEEN (vt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, t1, t0, vt0);
SELECT * FROM rt0, t1, t0, vt0 WHERE (((((rt0.c2)<(t0.c0))) BETWEEN ((rt0.c0 IN ())) AND (((x'') BETWEEN (vt0.c0) AND (rt0.c0)))));
SELECT * FROM t0 CROSS JOIN rt0 ON (((((t0.c0))>((rt0.c1))))*(((t0.c0)=(t0.c0)))) RIGHT OUTER JOIN t1 ON (((- (rt0.c1))) BETWEEN ((NOT (rt0.c2))) AND (((NULL) NOT NULL))) WHERE (((t0.c0) BETWEEN (t0.c0) AND (rt0.c0)) COLLATE BINARY) ORDER BY (((rt0.c1 IN ())) NOTNULL) ASC, ((CAST(t1.c0 AS INTEGER)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c0) BETWEEN (t0.c0) AND (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (((((t0.c0))>((rt0.c1))))*(((t0.c0)=(t0.c0)))) RIGHT OUTER JOIN t1 ON (((- (rt0.c1))) BETWEEN ((NOT (rt0.c2))) AND (((NULL) NOT NULL))) ORDER BY (((rt0.c1 IN ())) NOTNULL) ASC, ((CAST(t1.c0 AS INTEGER)) IS TRUE) DESC);
SELECT * FROM t0 CROSS JOIN rt0 ON (((((t0.c0))>((rt0.c1))))*(((t0.c0)=(t0.c0)))) RIGHT OUTER JOIN t1 ON (((- (rt0.c1))) BETWEEN ((NOT (rt0.c2))) AND (((NULL) NOT NULL))) WHERE (((t0.c0) BETWEEN (t0.c0) AND (rt0.c0)) COLLATE BINARY) ORDER BY (((rt0.c1 IN ())) NOTNULL) ASC, ((CAST(t1.c0 AS INTEGER)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c0) BETWEEN (t0.c0) AND (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (((((t0.c0))>((rt0.c1))))*(((t0.c0)=(t0.c0)))) RIGHT OUTER JOIN t1 ON (((- (rt0.c1))) BETWEEN ((NOT (rt0.c2))) AND (((NULL) NOT NULL))) ORDER BY (((rt0.c1 IN ())) NOTNULL) ASC, ((CAST(t1.c0 AS INTEGER)) IS TRUE) DESC);
SELECT * FROM t0 CROSS JOIN rt0 ON (((((t0.c0))>((rt0.c1))))*(((t0.c0)=(t0.c0)))) RIGHT OUTER JOIN t1 ON (((- (rt0.c1))) BETWEEN ((NOT (rt0.c2))) AND (((NULL) NOT NULL))) WHERE (((t0.c0) BETWEEN (t0.c0) AND (rt0.c0)) COLLATE BINARY) ORDER BY (((rt0.c1 IN ())) NOTNULL) ASC, ((CAST(t1.c0 AS INTEGER)) IS TRUE) DESC;
SELECT * FROM vt0, t1 WHERE (CASE SUBSTR(vt0.c0, vt0.c0)  WHEN ((vt0.c0)%(t1.c0)) THEN t1.c0 COLLATE NOCASE WHEN ((((((((t1.c0)AND(vt0.c0)))OR(t1.c0)))AND(0.20625463214707973)))OR(t1.c0)) THEN (((vt0.c0))>=((vt0.c0))) WHEN vt0.c0 THEN ((t1.c0)&(vt0.c0)) ELSE CAST(vt0.c0 AS REAL) END) ORDER BY ((((vt0.c0 IN ()), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('-2126763155'))), ((vt0.c0)LIKE(t1.c0)), CAST(t1.c0 AS REAL), vt0.c0 COLLATE RTRIM))!=(((vt0.c0 IN (t1.c0)), (((x'', t1.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, 0x5dde660)) AND ((vt0.c0, t1.c0, t1.c0))), (t1.c0 IN (t1.c0)), (((vt0.c0))<>((vt0.c0))), ((vt0.c0)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((CASE SUBSTR(vt0.c0, vt0.c0)  WHEN ((vt0.c0)%(t1.c0)) THEN t1.c0 COLLATE NOCASE WHEN ((((((((t1.c0)AND(vt0.c0)))OR(t1.c0)))AND(0.20625463214707973)))OR(t1.c0)) THEN (((vt0.c0))>=((vt0.c0))) WHEN vt0.c0 THEN ((t1.c0)&(vt0.c0)) ELSE CAST(vt0.c0 AS REAL) END) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((vt0.c0 IN ()), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('-2126763155'))), ((vt0.c0)LIKE(t1.c0)), CAST(t1.c0 AS REAL), vt0.c0 COLLATE RTRIM))<>(((vt0.c0 IN (t1.c0)), (((x'', t1.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, 0x5dde660)) AND ((vt0.c0, t1.c0, t1.c0))), (t1.c0 IN (t1.c0)), (((vt0.c0))!=((vt0.c0))), ((vt0.c0)/(vt0.c0))))));
SELECT * FROM vt0, t1 WHERE (CASE SUBSTR(vt0.c0, vt0.c0)  WHEN ((vt0.c0)%(t1.c0)) THEN t1.c0 COLLATE NOCASE WHEN ((((((((t1.c0)AND(vt0.c0)))OR(t1.c0)))AND(0.20625463214707973)))OR(t1.c0)) THEN (((vt0.c0))>=((vt0.c0))) WHEN vt0.c0 THEN ((t1.c0)&(vt0.c0)) ELSE CAST(vt0.c0 AS REAL) END) ORDER BY ((((vt0.c0 IN ()), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('-2126763155'))), ((vt0.c0)LIKE(t1.c0)), CAST(t1.c0 AS REAL), vt0.c0 COLLATE RTRIM))!=(((vt0.c0 IN (t1.c0)), (((x'', t1.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, 0x5dde660)) AND ((vt0.c0, t1.c0, t1.c0))), (t1.c0 IN (t1.c0)), (((vt0.c0))<>((vt0.c0))), ((vt0.c0)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((CASE SUBSTR(vt0.c0, vt0.c0)  WHEN ((vt0.c0)%(t1.c0)) THEN t1.c0 COLLATE NOCASE WHEN ((((((((t1.c0)AND(vt0.c0)))OR(t1.c0)))AND(0.20625463214707973)))OR(t1.c0)) THEN (((vt0.c0))>=((vt0.c0))) WHEN vt0.c0 THEN ((t1.c0)&(vt0.c0)) ELSE CAST(vt0.c0 AS REAL) END) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((vt0.c0 IN ()), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('-2126763155'))), ((vt0.c0)LIKE(t1.c0)), CAST(t1.c0 AS REAL), vt0.c0 COLLATE RTRIM))<>(((vt0.c0 IN (t1.c0)), (((x'', t1.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, 0x5dde660)) AND ((vt0.c0, t1.c0, t1.c0))), (t1.c0 IN (t1.c0)), (((vt0.c0))!=((vt0.c0))), ((vt0.c0)/(vt0.c0))))));
SELECT * FROM vt0, t1 WHERE (CASE SUBSTR(vt0.c0, vt0.c0)  WHEN ((vt0.c0)%(t1.c0)) THEN t1.c0 COLLATE NOCASE WHEN ((((((((t1.c0)AND(vt0.c0)))OR(t1.c0)))AND(0.20625463214707973)))OR(t1.c0)) THEN (((vt0.c0))>=((vt0.c0))) WHEN vt0.c0 THEN ((t1.c0)&(vt0.c0)) ELSE CAST(vt0.c0 AS REAL) END) ORDER BY ((((vt0.c0 IN ()), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('-2126763155'))), ((vt0.c0)LIKE(t1.c0)), CAST(t1.c0 AS REAL), vt0.c0 COLLATE RTRIM))!=(((vt0.c0 IN (t1.c0)), (((x'', t1.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, 0x5dde660)) AND ((vt0.c0, t1.c0, t1.c0))), (t1.c0 IN (t1.c0)), (((vt0.c0))<>((vt0.c0))), ((vt0.c0)/(vt0.c0)))));
SELECT * FROM t0, rt0, t1, vt0 WHERE (((((rt0.c0 COLLATE RTRIM)AND(rt0.c1)))AND((t1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 COLLATE RTRIM)AND(rt0.c1)))AND((t1.c0 IN ())))) IS TRUE)  as count FROM t0, rt0, t1, vt0);
SELECT * FROM t0, rt0, t1, vt0 WHERE (((((rt0.c0 COLLATE RTRIM)AND(rt0.c1)))AND((t1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 COLLATE RTRIM)AND(rt0.c1)))AND((t1.c0 IN ())))) IS TRUE)  as count FROM t0, rt0, t1, vt0);
SELECT * FROM t0, rt0, t1, vt0 WHERE (((((rt0.c0 COLLATE RTRIM)AND(rt0.c1)))AND((t1.c0 IN ()))));
SELECT COUNT(*) FROM t0 WHERE (UNLIKELY(((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (UNLIKELY(((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (UNLIKELY(((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0))));
SELECT COUNT(*) FROM vt0, t0, t1, rt0 WHERE ((~ (CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN t1.c0 THEN t1.c0 END))) ORDER BY ((t1.c0 COLLATE NOCASE) NOT BETWEEN (t0.c0) AND (((rt0.c3) BETWEEN (rt0.c1) AND (t0.c0))))  NULLS LAST, ((0.8497458112688889) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN t1.c0 THEN t1.c0 END))) IS TRUE)  as count FROM vt0, t0, t1, rt0 ORDER BY ((t1.c0 COLLATE NOCASE) NOT BETWEEN (t0.c0) AND (((rt0.c3) BETWEEN (rt0.c1) AND (t0.c0))))  NULLS LAST, ((0.8497458112688889) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, t1, rt0 WHERE ((~ (CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN t1.c0 THEN t1.c0 END))) ORDER BY ((t1.c0 COLLATE NOCASE) NOT BETWEEN (t0.c0) AND (((rt0.c3) BETWEEN (rt0.c1) AND (t0.c0))))  NULLS LAST, ((0.8497458112688889) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN t1.c0 THEN t1.c0 END))) IS TRUE)  as count FROM vt0, t0, t1, rt0 ORDER BY ((t1.c0 COLLATE NOCASE) NOT BETWEEN (t0.c0) AND (((rt0.c3) BETWEEN (rt0.c1) AND (t0.c0))))  NULLS LAST, ((0.8497458112688889) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, t1, rt0 WHERE ((~ (CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN t1.c0 THEN t1.c0 END))) ORDER BY ((t1.c0 COLLATE NOCASE) NOT BETWEEN (t0.c0) AND (((rt0.c3) BETWEEN (rt0.c1) AND (t0.c0))))  NULLS LAST, ((0.8497458112688889) IS TRUE)  NULLS LAST;
SELECT * FROM t0, vt0 LEFT OUTER JOIN rt0 ON (- ('0.5296756546595305')) LEFT OUTER JOIN t1 ON ((('0.40587902085070027' IN ())) NOTNULL) WHERE (vt0.c0 COLLATE RTRIM COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE RTRIM COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN rt0 ON (- ('0.5296756546595305')) LEFT OUTER JOIN t1 ON ((('0.40587902085070027' IN ())) NOTNULL));
SELECT * FROM t0, vt0 LEFT OUTER JOIN rt0 ON (- ('0.5296756546595305')) LEFT OUTER JOIN t1 ON ((('0.40587902085070027' IN ())) NOTNULL) WHERE (vt0.c0 COLLATE RTRIM COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE RTRIM COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN rt0 ON (- ('0.5296756546595305')) LEFT OUTER JOIN t1 ON ((('0.40587902085070027' IN ())) NOTNULL));
SELECT * FROM t0, vt0 LEFT OUTER JOIN rt0 ON (- ('0.5296756546595305')) LEFT OUTER JOIN t1 ON ((('0.40587902085070027' IN ())) NOTNULL) WHERE (vt0.c0 COLLATE RTRIM COLLATE NOCASE COLLATE RTRIM);
SELECT * FROM t1, t0 FULL OUTER JOIN rt0 ON x'' RIGHT OUTER JOIN vt0 ON ((rt0.c1) BETWEEN (rt0.c3) AND (t0.c0)) COLLATE RTRIM WHERE (CASE WHEN vt0.c0 COLLATE RTRIM THEN ((rt0.c0) NOTNULL) END) ORDER BY (((((((t1.c0, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c2, vt0.c0)) AND ((rt0.c0, vt0.c0, t1.c0))))AND(CASE rt0.c3  WHEN t1.c0 THEN t1.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 END)))AND(((((rt0.c3)OR(t1.c0)))AND(rt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 COLLATE RTRIM THEN ((rt0.c0) NOTNULL) END) IS TRUE)  as count FROM t1, t0 FULL OUTER JOIN rt0 ON x'' RIGHT OUTER JOIN vt0 ON ((rt0.c1) BETWEEN (rt0.c3) AND (t0.c0)) COLLATE RTRIM ORDER BY (((((((t1.c0, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c2, vt0.c0)) AND ((rt0.c0, vt0.c0, t1.c0))))AND(CASE rt0.c3  WHEN t1.c0 THEN t1.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 END)))AND(((((rt0.c3)OR(t1.c0)))AND(rt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM t1, t0 FULL OUTER JOIN rt0 ON x'' RIGHT OUTER JOIN vt0 ON ((rt0.c1) BETWEEN (rt0.c3) AND (t0.c0)) COLLATE RTRIM WHERE (CASE WHEN vt0.c0 COLLATE RTRIM THEN ((rt0.c0) NOTNULL) END) ORDER BY (((((((t1.c0, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c2, vt0.c0)) AND ((rt0.c0, vt0.c0, t1.c0))))AND(CASE rt0.c3  WHEN t1.c0 THEN t1.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 END)))AND(((((rt0.c3)OR(t1.c0)))AND(rt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 COLLATE RTRIM THEN ((rt0.c0) NOTNULL) END) IS TRUE)  as count FROM t1, t0 FULL OUTER JOIN rt0 ON x'' RIGHT OUTER JOIN vt0 ON ((rt0.c1) BETWEEN (rt0.c3) AND (t0.c0)) COLLATE RTRIM ORDER BY (((((((t1.c0, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c2, vt0.c0)) AND ((rt0.c0, vt0.c0, t1.c0))))AND(CASE rt0.c3  WHEN t1.c0 THEN t1.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 END)))AND(((((rt0.c3)OR(t1.c0)))AND(rt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM t1, t0 FULL OUTER JOIN rt0 ON x'' RIGHT OUTER JOIN vt0 ON ((rt0.c1) BETWEEN (rt0.c3) AND (t0.c0)) COLLATE RTRIM WHERE (CASE WHEN vt0.c0 COLLATE RTRIM THEN ((rt0.c0) NOTNULL) END) ORDER BY (((((((t1.c0, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c2, vt0.c0)) AND ((rt0.c0, vt0.c0, t1.c0))))AND(CASE rt0.c3  WHEN t1.c0 THEN t1.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 END)))AND(((((rt0.c3)OR(t1.c0)))AND(rt0.c0)))) ASC  NULLS FIRST;
SELECT * FROM rt0, t0, t1 WHERE ((((('1796208269')==(rt0.c2)))|(LIKELY(NULL))));
SELECT SUM(count) FROM (SELECT (((((('1796208269')=(rt0.c2)))|(LIKELY(NULL)))) IS TRUE)  as count FROM rt0, t0, t1);
SELECT * FROM rt0, t0, t1 WHERE ((((('1796208269')==(rt0.c2)))|(LIKELY(NULL))));
SELECT SUM(count) FROM (SELECT (((((('1796208269')=(rt0.c2)))|(LIKELY(NULL)))) IS TRUE)  as count FROM rt0, t0, t1);
SELECT * FROM rt0, t0, t1 WHERE ((((('1796208269')==(rt0.c2)))|(LIKELY(NULL))));
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((((rt0.c3 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN ())) IS FALSE)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((((rt0.c3 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN ())) IS FALSE)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((((rt0.c3 IN ())) IS FALSE));
SELECT COUNT(*) FROM t0, vt0 INNER JOIN t1 ON (((((vt0.c0))>((t1.c0)))) IS TRUE) CROSS JOIN rt0 ON LIKELIHOOD(DISTINCT CAST(rt0.c1 AS BLOB), 0.5330183972350816) WHERE ((((rt0.c0, '-236304445', rt0.c3)) BETWEEN ((vt0.c0, (((t1.c0, t1.c0, rt0.c0, rt0.c3, rt0.c2))>=((t0.c0, rt0.c3, 0.2724478174398447, rt0.c3, vt0.c0))), ((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))) AND (((t0.c0 IN (rt0.c2, t1.c0)), (((t0.c0)) NOT BETWEEN ((0.9093053221429794)) AND ((rt0.c1))), CAST(x'' AS INTEGER))))) ORDER BY CAST((x'6828' IN ()) AS INTEGER)  NULLS FIRST, (((rt0.c3)|(vt0.c0)) IN ())  NULLS LAST, LIKELY(NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0, '-236304445', rt0.c3)) BETWEEN ((vt0.c0, (((t1.c0, t1.c0, rt0.c0, rt0.c3, rt0.c2))>=((t0.c0, rt0.c3, 0.2724478174398447, rt0.c3, vt0.c0))), ((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))) AND (((t0.c0 IN (rt0.c2, t1.c0)), (((t0.c0)) NOT BETWEEN ((0.9093053221429794)) AND ((rt0.c1))), CAST(x'' AS INTEGER))))) IS TRUE)  as count FROM t0, vt0 INNER JOIN t1 ON (((((vt0.c0))>((t1.c0)))) IS TRUE) CROSS JOIN rt0 ON LIKELIHOOD(DISTINCT CAST(rt0.c1 AS BLOB), 0.5330183972350816) ORDER BY CAST((x'6828' IN ()) AS INTEGER)  NULLS FIRST, (((rt0.c3)|(vt0.c0)) IN ())  NULLS LAST, LIKELY(NULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 INNER JOIN t1 ON (((((vt0.c0))>((t1.c0)))) IS TRUE) CROSS JOIN rt0 ON LIKELIHOOD(DISTINCT CAST(rt0.c1 AS BLOB), 0.5330183972350816) WHERE ((((rt0.c0, '-236304445', rt0.c3)) BETWEEN ((vt0.c0, (((t1.c0, t1.c0, rt0.c0, rt0.c3, rt0.c2))>=((t0.c0, rt0.c3, 0.2724478174398447, rt0.c3, vt0.c0))), ((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))) AND (((t0.c0 IN (rt0.c2, t1.c0)), (((t0.c0)) NOT BETWEEN ((0.9093053221429794)) AND ((rt0.c1))), CAST(x'' AS INTEGER))))) ORDER BY CAST((x'6828' IN ()) AS INTEGER)  NULLS FIRST, (((rt0.c3)|(vt0.c0)) IN ())  NULLS LAST, LIKELY(NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0, '-236304445', rt0.c3)) BETWEEN ((vt0.c0, (((t1.c0, t1.c0, rt0.c0, rt0.c3, rt0.c2))>=((t0.c0, rt0.c3, 0.2724478174398447, rt0.c3, vt0.c0))), ((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))) AND (((t0.c0 IN (rt0.c2, t1.c0)), (((t0.c0)) NOT BETWEEN ((0.9093053221429794)) AND ((rt0.c1))), CAST(x'' AS INTEGER))))) IS TRUE)  as count FROM t0, vt0 INNER JOIN t1 ON (((((vt0.c0))>((t1.c0)))) IS TRUE) CROSS JOIN rt0 ON LIKELIHOOD(DISTINCT CAST(rt0.c1 AS BLOB), 0.5330183972350816) ORDER BY CAST((x'6828' IN ()) AS INTEGER)  NULLS FIRST, (((rt0.c3)|(vt0.c0)) IN ())  NULLS LAST, LIKELY(NULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 INNER JOIN t1 ON (((((vt0.c0))>((t1.c0)))) IS TRUE) CROSS JOIN rt0 ON LIKELIHOOD(DISTINCT CAST(rt0.c1 AS BLOB), 0.5330183972350816) WHERE ((((rt0.c0, '-236304445', rt0.c3)) BETWEEN ((vt0.c0, (((t1.c0, t1.c0, rt0.c0, rt0.c3, rt0.c2))>=((t0.c0, rt0.c3, 0.2724478174398447, rt0.c3, vt0.c0))), ((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))) AND (((t0.c0 IN (rt0.c2, t1.c0)), (((t0.c0)) NOT BETWEEN ((0.9093053221429794)) AND ((rt0.c1))), CAST(x'' AS INTEGER))))) ORDER BY CAST((x'6828' IN ()) AS INTEGER)  NULLS FIRST, (((rt0.c3)|(vt0.c0)) IN ())  NULLS LAST, LIKELY(NULL) DESC  NULLS FIRST;
SELECT * FROM t1, rt0, t0, vt0 WHERE (CASE t0.c0  WHEN t0.c0 THEN rt0.c1 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE t0.c0  WHEN t0.c0 THEN rt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM t1, rt0, t0, vt0);
SELECT * FROM t1, rt0, t0, vt0 WHERE (CASE t0.c0  WHEN t0.c0 THEN rt0.c1 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE t0.c0  WHEN t0.c0 THEN rt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM t1, rt0, t0, vt0);
SELECT * FROM t1, rt0, t0, vt0 WHERE (CASE t0.c0  WHEN t0.c0 THEN rt0.c1 END COLLATE NOCASE);
SELECT COUNT(*) FROM t1, vt0, t0 WHERE (((((vt0.c0)OR(t0.c0))) IS FALSE)) ORDER BY -946144500 COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(t0.c0))) IS FALSE)) IS TRUE)  as count FROM t1, vt0, t0 ORDER BY -946144500 COLLATE BINARY DESC);
SELECT COUNT(*) FROM t1, vt0, t0 WHERE (((((vt0.c0)OR(t0.c0))) IS FALSE)) ORDER BY -946144500 COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(t0.c0))) IS FALSE)) IS TRUE)  as count FROM t1, vt0, t0 ORDER BY -946144500 COLLATE BINARY DESC);
SELECT ALL * FROM t1 CROSS JOIN vt0 ON ((((t1.c0)AND(vt0.c0)))OR(t1.c0)) COLLATE RTRIM WHERE ('Gi') ORDER BY CAST(((t1.c0) ISNULL) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('Gi') IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON ((((t1.c0)AND(vt0.c0)))OR(t1.c0)) COLLATE RTRIM ORDER BY CAST(((t1.c0) ISNULL) AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM t1 CROSS JOIN vt0 ON ((((t1.c0)AND(vt0.c0)))OR(t1.c0)) COLLATE RTRIM WHERE ('Gi') ORDER BY CAST(((t1.c0) ISNULL) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('Gi') IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON ((((t1.c0)AND(vt0.c0)))OR(t1.c0)) COLLATE RTRIM ORDER BY CAST(((t1.c0) ISNULL) AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM t1 CROSS JOIN vt0 ON ((((t1.c0)AND(vt0.c0)))OR(t1.c0)) COLLATE RTRIM WHERE ('Gi') ORDER BY CAST(((t1.c0) ISNULL) AS NUMERIC)  NULLS FIRST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((rt0.c1 COLLATE RTRIM) NOT BETWEEN ((((rt0.c3)) BETWEEN ((vt0.c0)) AND ((t1.c0)))) AND ((((('	[')OR(t1.c0)))AND(t1.c0)))) CROSS JOIN rt0 ON (NOT (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)))) LEFT OUTER JOIN t1 ON t0.c0 WHERE (0.6716083089115776) ORDER BY CASE ((((NULL)AND('693210561')))OR(rt0.c3))  WHEN (t1.c0 IN ()) THEN CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c1 THEN t1.c0 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE t1.c0 END ELSE (NOT (vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.6716083089115776) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((rt0.c1 COLLATE RTRIM) NOT BETWEEN ((((rt0.c3)) BETWEEN ((vt0.c0)) AND ((t1.c0)))) AND ((((('	[')OR(t1.c0)))AND(t1.c0)))) CROSS JOIN rt0 ON (NOT (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)))) LEFT OUTER JOIN t1 ON t0.c0 ORDER BY CASE ((((NULL)AND('693210561')))OR(rt0.c3))  WHEN (t1.c0 IN ()) THEN CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c1 THEN t1.c0 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE t1.c0 END ELSE (NOT (vt0.c0)) END  NULLS FIRST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((rt0.c1 COLLATE RTRIM) NOT BETWEEN ((((rt0.c3)) BETWEEN ((vt0.c0)) AND ((t1.c0)))) AND ((((('	[')OR(t1.c0)))AND(t1.c0)))) CROSS JOIN rt0 ON (NOT (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)))) LEFT OUTER JOIN t1 ON t0.c0 WHERE (0.6716083089115776) ORDER BY CASE ((((NULL)AND('693210561')))OR(rt0.c3))  WHEN (t1.c0 IN ()) THEN CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c1 THEN t1.c0 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE t1.c0 END ELSE (NOT (vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.6716083089115776) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((rt0.c1 COLLATE RTRIM) NOT BETWEEN ((((rt0.c3)) BETWEEN ((vt0.c0)) AND ((t1.c0)))) AND ((((('	[')OR(t1.c0)))AND(t1.c0)))) CROSS JOIN rt0 ON (NOT (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)))) LEFT OUTER JOIN t1 ON t0.c0 ORDER BY CASE ((((NULL)AND('693210561')))OR(rt0.c3))  WHEN (t1.c0 IN ()) THEN CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c1 THEN t1.c0 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE t1.c0 END ELSE (NOT (vt0.c0)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND('')))));
SELECT SUM(count) FROM (SELECT (((NOT (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(''))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND('')))));
SELECT SUM(count) FROM (SELECT (((NOT (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(''))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND('')))));
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((((((((((((rt0.c1)AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(t0.c0)) AS NUMERIC) WHERE (UPPER(rt0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(rt0.c2 COLLATE RTRIM)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((((((((((((rt0.c1)AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(t0.c0)) AS NUMERIC));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((((((((((((rt0.c1)AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(t0.c0)) AS NUMERIC) WHERE (UPPER(rt0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(rt0.c2 COLLATE RTRIM)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((((((((((((rt0.c1)AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(t0.c0)) AS NUMERIC));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((((((((((((rt0.c1)AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(t0.c0)) AS NUMERIC) WHERE (UPPER(rt0.c2 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE (((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN '2008405417' WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)>=((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN '2008405417' WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)>=((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3)))))) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE (((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN '2008405417' WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)>=((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN '2008405417' WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)>=((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3)))))) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE (((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN '2008405417' WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)>=((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))))));
SELECT ALL COUNT(*) FROM rt0, t0, vt0, t1 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, t0, vt0, t1);
SELECT ALL COUNT(*) FROM rt0, t0, vt0, t1 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, t0, vt0, t1);
SELECT ALL COUNT(*) FROM rt0, t0, vt0, t1 WHERE (rt0.c3);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON (((((rt0.c1))>=((t0.c0)))) BETWEEN (LOWER(t0.c0)) AND (1566581920)) LEFT OUTER JOIN rt0 ON 0X41bbca0c CROSS JOIN t1 ON ((((((((((t1.c0) BETWEEN (rt0.c0) AND (t1.c0)))OR(((rt0.c1)IS(t1.c0)))))OR(((((((((t0.c0)AND(t0.c0)))AND(t1.c0)))AND(x'53a39a70')))AND(t0.c0)))))AND(((t1.c0) NOT NULL))))AND((((vt0.c0, rt0.c0, vt0.c0))>((t1.c0, rt0.c2, '562:1999 -6668142865796870192-189:1651378839959718459 -599877676093525885:665T6827615989179645820 '))))) WHERE (((((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (CAST(t1.c0 AS NUMERIC)) AND ((NOT (rt0.c2))))) ORDER BY ((rt0.c2 COLLATE RTRIM) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (CAST(t1.c0 AS NUMERIC)) AND ((NOT (rt0.c2))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((((rt0.c1))>=((t0.c0)))) BETWEEN (LOWER(t0.c0)) AND (1566581920)) LEFT OUTER JOIN rt0 ON 0x41bbca0c CROSS JOIN t1 ON ((((((((((t1.c0) BETWEEN (rt0.c0) AND (t1.c0)))OR(((rt0.c1)IS(t1.c0)))))OR(((((((((t0.c0)AND(t0.c0)))AND(t1.c0)))AND(x'53a39a70')))AND(t0.c0)))))AND(((t1.c0) NOT NULL))))AND((((vt0.c0, rt0.c0, vt0.c0))>((t1.c0, rt0.c2, '562:1999 -6668142865796870192-189:1651378839959718459 -599877676093525885:665T6827615989179645820 '))))) ORDER BY ((rt0.c2 COLLATE RTRIM) NOTNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON (((((rt0.c1))>=((t0.c0)))) BETWEEN (LOWER(t0.c0)) AND (1566581920)) LEFT OUTER JOIN rt0 ON 0X41bbca0c CROSS JOIN t1 ON ((((((((((t1.c0) BETWEEN (rt0.c0) AND (t1.c0)))OR(((rt0.c1)IS(t1.c0)))))OR(((((((((t0.c0)AND(t0.c0)))AND(t1.c0)))AND(x'53a39a70')))AND(t0.c0)))))AND(((t1.c0) NOT NULL))))AND((((vt0.c0, rt0.c0, vt0.c0))>((t1.c0, rt0.c2, '562:1999 -6668142865796870192-189:1651378839959718459 -599877676093525885:665T6827615989179645820 '))))) WHERE (((((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (CAST(t1.c0 AS NUMERIC)) AND ((NOT (rt0.c2))))) ORDER BY ((rt0.c2 COLLATE RTRIM) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (CAST(t1.c0 AS NUMERIC)) AND ((NOT (rt0.c2))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((((rt0.c1))>=((t0.c0)))) BETWEEN (LOWER(t0.c0)) AND (1566581920)) LEFT OUTER JOIN rt0 ON 0x41bbca0c CROSS JOIN t1 ON ((((((((((t1.c0) BETWEEN (rt0.c0) AND (t1.c0)))OR(((rt0.c1)IS(t1.c0)))))OR(((((((((t0.c0)AND(t0.c0)))AND(t1.c0)))AND(x'53a39a70')))AND(t0.c0)))))AND(((t1.c0) NOT NULL))))AND((((vt0.c0, rt0.c0, vt0.c0))>((t1.c0, rt0.c2, '562:1999 -6668142865796870192-189:1651378839959718459 -599877676093525885:665T6827615989179645820 '))))) ORDER BY ((rt0.c2 COLLATE RTRIM) NOTNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON (((((rt0.c1))>=((t0.c0)))) BETWEEN (LOWER(t0.c0)) AND (1566581920)) LEFT OUTER JOIN rt0 ON 0X41bbca0c CROSS JOIN t1 ON ((((((((((t1.c0) BETWEEN (rt0.c0) AND (t1.c0)))OR(((rt0.c1)IS(t1.c0)))))OR(((((((((t0.c0)AND(t0.c0)))AND(t1.c0)))AND(x'53a39a70')))AND(t0.c0)))))AND(((t1.c0) NOT NULL))))AND((((vt0.c0, rt0.c0, vt0.c0))>((t1.c0, rt0.c2, '562:1999 -6668142865796870192-189:1651378839959718459 -599877676093525885:665T6827615989179645820 '))))) WHERE (((((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (CAST(t1.c0 AS NUMERIC)) AND ((NOT (rt0.c2))))) ORDER BY ((rt0.c2 COLLATE RTRIM) NOTNULL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (((((((rt0.c2)OR(rt0.c3)))AND(rt0.c1))) IS FALSE)) ORDER BY (IFNULL(DISTINCT rt0.c3, rt0.c3) IN (((vt0.c0)AND(rt0.c3)), (- (rt0.c0)))), ((((rt0.c0)<=(rt0.c1))) NOTNULL) DESC  NULLS LAST, TYPEOF(DISTINCT ROUND(rt0.c1, rt0.c1)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c1))) IS FALSE)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY (IFNULL(DISTINCT rt0.c3, rt0.c3) IN (((vt0.c0)AND(rt0.c3)), (- (rt0.c0)))), ((((rt0.c0)<=(rt0.c1))) NOTNULL) DESC  NULLS LAST, TYPEOF(DISTINCT ROUND(rt0.c1, rt0.c1)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (((((((rt0.c2)OR(rt0.c3)))AND(rt0.c1))) IS FALSE)) ORDER BY (IFNULL(DISTINCT rt0.c3, rt0.c3) IN (((vt0.c0)AND(rt0.c3)), (- (rt0.c0)))), ((((rt0.c0)<=(rt0.c1))) NOTNULL) DESC  NULLS LAST, TYPEOF(DISTINCT ROUND(rt0.c1, rt0.c1)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c1))) IS FALSE)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY (IFNULL(DISTINCT rt0.c3, rt0.c3) IN (((vt0.c0)AND(rt0.c3)), (- (rt0.c0)))), ((((rt0.c0)<=(rt0.c1))) NOTNULL) DESC  NULLS LAST, TYPEOF(DISTINCT ROUND(rt0.c1, rt0.c1)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (((((((rt0.c2)OR(rt0.c3)))AND(rt0.c1))) IS FALSE)) ORDER BY (IFNULL(DISTINCT rt0.c3, rt0.c3) IN (((vt0.c0)AND(rt0.c3)), (- (rt0.c0)))), ((((rt0.c0)<=(rt0.c1))) NOTNULL) DESC  NULLS LAST, TYPEOF(DISTINCT ROUND(rt0.c1, rt0.c1)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt0, t1 WHERE (((((((((CASE WHEN rt0.c1 THEN NULL ELSE rt0.c0 END)OR((t1.c0 IN ()))))AND(((rt0.c3)LIKE(rt0.c2)))))AND(t0.c0)))AND(((rt0.c0)||(t1.c0))))) ORDER BY TYPEOF(((t0.c0) NOTNULL))  NULLS FIRST, NULL COLLATE RTRIM ASC, (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c3))) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN rt0.c1 THEN NULL ELSE rt0.c0 END)OR((t1.c0 IN ()))))AND(((rt0.c3)LIKE(rt0.c2)))))AND(t0.c0)))AND(((rt0.c0)||(t1.c0))))) IS TRUE)  as count FROM t0, rt0, t1 ORDER BY TYPEOF(((t0.c0) NOTNULL))  NULLS FIRST, NULL COLLATE RTRIM ASC, (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c3))) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, rt0, t1 WHERE (((((((((CASE WHEN rt0.c1 THEN NULL ELSE rt0.c0 END)OR((t1.c0 IN ()))))AND(((rt0.c3)LIKE(rt0.c2)))))AND(t0.c0)))AND(((rt0.c0)||(t1.c0))))) ORDER BY TYPEOF(((t0.c0) NOTNULL))  NULLS FIRST, NULL COLLATE RTRIM ASC, (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c3))) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN rt0.c1 THEN NULL ELSE rt0.c0 END)OR((t1.c0 IN ()))))AND(((rt0.c3)LIKE(rt0.c2)))))AND(t0.c0)))AND(((rt0.c0)||(t1.c0))))) IS TRUE)  as count FROM t0, rt0, t1 ORDER BY TYPEOF(((t0.c0) NOTNULL))  NULLS FIRST, NULL COLLATE RTRIM ASC, (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c3))) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, rt0, t1 WHERE (((((((((CASE WHEN rt0.c1 THEN NULL ELSE rt0.c0 END)OR((t1.c0 IN ()))))AND(((rt0.c3)LIKE(rt0.c2)))))AND(t0.c0)))AND(((rt0.c0)||(t1.c0))))) ORDER BY TYPEOF(((t0.c0) NOTNULL))  NULLS FIRST, NULL COLLATE RTRIM ASC, (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c3))) COLLATE BINARY;
SELECT COUNT(*) FROM vt0, rt0, t1, t0 WHERE ((((rt0.c3, rt0.c2, t1.c0)) BETWEEN (((+ (rt0.c2)), UNLIKELY(DISTINCT rt0.c3), UPPER(DISTINCT vt0.c0))) AND ((rt0.c0 COLLATE NOCASE, json(vt0.c0), NULL))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3, rt0.c2, t1.c0)) BETWEEN (((+ (rt0.c2)), UNLIKELY(DISTINCT rt0.c3), UPPER(DISTINCT vt0.c0))) AND ((rt0.c0 COLLATE NOCASE, json(vt0.c0), NULL)))) IS TRUE)  as count FROM vt0, rt0, t1, t0);
SELECT COUNT(*) FROM vt0, rt0, t1, t0 WHERE ((((rt0.c3, rt0.c2, t1.c0)) BETWEEN (((+ (rt0.c2)), UNLIKELY(DISTINCT rt0.c3), UPPER(DISTINCT vt0.c0))) AND ((rt0.c0 COLLATE NOCASE, json(vt0.c0), NULL))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3, rt0.c2, t1.c0)) BETWEEN (((+ (rt0.c2)), UNLIKELY(DISTINCT rt0.c3), UPPER(DISTINCT vt0.c0))) AND ((rt0.c0 COLLATE NOCASE, json(vt0.c0), NULL)))) IS TRUE)  as count FROM vt0, rt0, t1, t0);
SELECT COUNT(*) FROM vt0, rt0, t1, t0 WHERE ((((rt0.c3, rt0.c2, t1.c0)) BETWEEN (((+ (rt0.c2)), UNLIKELY(DISTINCT rt0.c3), UPPER(DISTINCT vt0.c0))) AND ((rt0.c0 COLLATE NOCASE, json(vt0.c0), NULL))));
SELECT COUNT(*) FROM vt0, t1 WHERE (((NULL)<(vt0.c0))) ORDER BY (LIKELY(0.6520802795111567) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL)<(vt0.c0))) IS TRUE)  as count FROM vt0, t1 ORDER BY (LIKELY(0.6520802795111567) IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt0, t1 WHERE (((NULL)<(vt0.c0))) ORDER BY (LIKELY(0.6520802795111567) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL)<(vt0.c0))) IS TRUE)  as count FROM vt0, t1 ORDER BY (LIKELY(0.6520802795111567) IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt0, t1 WHERE (((NULL)<(vt0.c0))) ORDER BY (LIKELY(0.6520802795111567) IN ())  NULLS LAST;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON t0.c0 LEFT OUTER JOIN t0 ON CASE WHEN CASE WHEN rt0.c3 THEN t0.c0 WHEN rt0.c1 THEN x'' WHEN t0.c0 THEN t0.c0 END THEN ((rt0.c1)GLOB(vt0.c0)) WHEN 0Xfffffffff8d50768 THEN (+ (rt0.c2)) WHEN (((rt0.c1)) BETWEEN ((t0.c0)) AND ((vt0.c0))) THEN ((rt0.c0) NOTNULL) WHEN UNLIKELY(t1.c0) THEN ((rt0.c3) IS FALSE) WHEN rt0.c0 THEN CAST(t1.c0 AS TEXT) ELSE NULL END INNER JOIN t1 ON (CASE vt0.c0  WHEN rt0.c3 THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 WHEN t0.c0 THEN rt0.c1 END IN ()) WHERE (((((t0.c0)IS NOT(rt0.c3))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (rt0.c0))) ORDER BY (((rt0.c0, rt0.c2, 'E癸3LR{{X')) NOT BETWEEN ((((((rt0.c3)OR(t1.c0)))AND(rt0.c2)), (('d.|7g \nf')>(rt0.c3)), ((rt0.c1)*(rt0.c2)))) AND ((rt0.c0 COLLATE RTRIM, (~ (rt0.c2)), CAST(t0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)IS NOT(rt0.c3))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (rt0.c0))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON t0.c0 LEFT OUTER JOIN t0 ON CASE WHEN CASE WHEN rt0.c3 THEN t0.c0 WHEN rt0.c1 THEN x'' WHEN t0.c0 THEN t0.c0 END THEN ((rt0.c1)GLOB(vt0.c0)) WHEN 0Xfffffffff8d50768 THEN (+ (rt0.c2)) WHEN (((rt0.c1)) BETWEEN ((t0.c0)) AND ((vt0.c0))) THEN ((rt0.c0) NOTNULL) WHEN UNLIKELY(t1.c0) THEN ((rt0.c3) IS FALSE) WHEN rt0.c0 THEN CAST(t1.c0 AS TEXT) ELSE NULL END INNER JOIN t1 ON (CASE vt0.c0  WHEN rt0.c3 THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 WHEN t0.c0 THEN rt0.c1 END IN ()) ORDER BY (((rt0.c0, rt0.c2, 'E癸3LR{{X')) NOT BETWEEN ((((((rt0.c3)OR(t1.c0)))AND(rt0.c2)), (('d.|7g \nf')>(rt0.c3)), ((rt0.c1)*(rt0.c2)))) AND ((rt0.c0 COLLATE RTRIM, (~ (rt0.c2)), CAST(t0.c0 AS NUMERIC)))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON t0.c0 LEFT OUTER JOIN t0 ON CASE WHEN CASE WHEN rt0.c3 THEN t0.c0 WHEN rt0.c1 THEN x'' WHEN t0.c0 THEN t0.c0 END THEN ((rt0.c1)GLOB(vt0.c0)) WHEN 0Xfffffffff8d50768 THEN (+ (rt0.c2)) WHEN (((rt0.c1)) BETWEEN ((t0.c0)) AND ((vt0.c0))) THEN ((rt0.c0) NOTNULL) WHEN UNLIKELY(t1.c0) THEN ((rt0.c3) IS FALSE) WHEN rt0.c0 THEN CAST(t1.c0 AS TEXT) ELSE NULL END INNER JOIN t1 ON (CASE vt0.c0  WHEN rt0.c3 THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 WHEN t0.c0 THEN rt0.c1 END IN ()) WHERE (((((t0.c0)IS NOT(rt0.c3))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (rt0.c0))) ORDER BY (((rt0.c0, rt0.c2, 'E癸3LR{{X')) NOT BETWEEN ((((((rt0.c3)OR(t1.c0)))AND(rt0.c2)), (('d.|7g \nf')>(rt0.c3)), ((rt0.c1)*(rt0.c2)))) AND ((rt0.c0 COLLATE RTRIM, (~ (rt0.c2)), CAST(t0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)IS NOT(rt0.c3))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (rt0.c0))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON t0.c0 LEFT OUTER JOIN t0 ON CASE WHEN CASE WHEN rt0.c3 THEN t0.c0 WHEN rt0.c1 THEN x'' WHEN t0.c0 THEN t0.c0 END THEN ((rt0.c1)GLOB(vt0.c0)) WHEN 0Xfffffffff8d50768 THEN (+ (rt0.c2)) WHEN (((rt0.c1)) BETWEEN ((t0.c0)) AND ((vt0.c0))) THEN ((rt0.c0) NOTNULL) WHEN UNLIKELY(t1.c0) THEN ((rt0.c3) IS FALSE) WHEN rt0.c0 THEN CAST(t1.c0 AS TEXT) ELSE NULL END INNER JOIN t1 ON (CASE vt0.c0  WHEN rt0.c3 THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 WHEN t0.c0 THEN rt0.c1 END IN ()) ORDER BY (((rt0.c0, rt0.c2, 'E癸3LR{{X')) NOT BETWEEN ((((((rt0.c3)OR(t1.c0)))AND(rt0.c2)), (('d.|7g \nf')>(rt0.c3)), ((rt0.c1)*(rt0.c2)))) AND ((rt0.c0 COLLATE RTRIM, (~ (rt0.c2)), CAST(t0.c0 AS NUMERIC)))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON t0.c0 LEFT OUTER JOIN t0 ON CASE WHEN CASE WHEN rt0.c3 THEN t0.c0 WHEN rt0.c1 THEN x'' WHEN t0.c0 THEN t0.c0 END THEN ((rt0.c1)GLOB(vt0.c0)) WHEN 0Xfffffffff8d50768 THEN (+ (rt0.c2)) WHEN (((rt0.c1)) BETWEEN ((t0.c0)) AND ((vt0.c0))) THEN ((rt0.c0) NOTNULL) WHEN UNLIKELY(t1.c0) THEN ((rt0.c3) IS FALSE) WHEN rt0.c0 THEN CAST(t1.c0 AS TEXT) ELSE NULL END INNER JOIN t1 ON (CASE vt0.c0  WHEN rt0.c3 THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 WHEN t0.c0 THEN rt0.c1 END IN ()) WHERE (((((t0.c0)IS NOT(rt0.c3))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (rt0.c0))) ORDER BY (((rt0.c0, rt0.c2, 'E癸3LR{{X')) NOT BETWEEN ((((((rt0.c3)OR(t1.c0)))AND(rt0.c2)), (('d.|7g \nf')>(rt0.c3)), ((rt0.c1)*(rt0.c2)))) AND ((rt0.c0 COLLATE RTRIM, (~ (rt0.c2)), CAST(t0.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM t1, rt0 NATURAL JOIN vt0 WHERE ((((+ (rt0.c2)))>=(t1.c0 COLLATE RTRIM))) ORDER BY (((+ (rt0.c1))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c2)))>=(t1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t1, rt0 NATURAL JOIN vt0 ORDER BY (((+ (rt0.c1))) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt0 NATURAL JOIN vt0 WHERE ((((+ (rt0.c2)))>=(t1.c0 COLLATE RTRIM))) ORDER BY (((+ (rt0.c1))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c2)))>=(t1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t1, rt0 NATURAL JOIN vt0 ORDER BY (((+ (rt0.c1))) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt0 NATURAL JOIN vt0 WHERE ((((+ (rt0.c2)))>=(t1.c0 COLLATE RTRIM))) ORDER BY (((+ (rt0.c1))) IS FALSE)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c3 IN (rt0.c3)))<(((rt0.c0) NOT BETWEEN (rt0.c2) AND ('q''R'))))) ORDER BY -1257534234 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN (rt0.c3)))<(((rt0.c0) NOT BETWEEN (rt0.c2) AND ('q''R'))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY -1257534234 COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c3 IN (rt0.c3)))<(((rt0.c0) NOT BETWEEN (rt0.c2) AND ('q''R'))))) ORDER BY -1257534234 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN (rt0.c3)))<(((rt0.c0) NOT BETWEEN (rt0.c2) AND ('q''R'))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY -1257534234 COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((NOT ((((vt0.c0, 'i/F.HZn', t1.c0)) NOT BETWEEN ((vt0.c0, t1.c0, t1.c0)) AND ((t1.c0, vt0.c0, vt0.c0)))))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((((vt0.c0, 'i/F.HZn', t1.c0)) NOT BETWEEN ((vt0.c0, t1.c0, t1.c0)) AND ((t1.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM t1, vt0 ORDER BY NULL  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((NOT ((((vt0.c0, 'i/F.HZn', t1.c0)) NOT BETWEEN ((vt0.c0, t1.c0, t1.c0)) AND ((t1.c0, vt0.c0, vt0.c0)))))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((((vt0.c0, 'i/F.HZn', t1.c0)) NOT BETWEEN ((vt0.c0, t1.c0, t1.c0)) AND ((t1.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM t1, vt0 ORDER BY NULL  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((NOT ((((vt0.c0, 'i/F.HZn', t1.c0)) NOT BETWEEN ((vt0.c0, t1.c0, t1.c0)) AND ((t1.c0, vt0.c0, vt0.c0)))))) ORDER BY NULL  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((CASE WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN NULL ELSE rt0.c0 END))<(((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))))) ORDER BY rt0.c3;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN NULL ELSE rt0.c0 END))<(((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c3);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((CASE WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN NULL ELSE rt0.c0 END))<(((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))))) ORDER BY rt0.c3;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN NULL ELSE rt0.c0 END))<(((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c3);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((CASE WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN NULL ELSE rt0.c0 END))<(((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))))) ORDER BY rt0.c3;
SELECT * FROM t1 WHERE ((((((- (t1.c0)))OR((t1.c0 IN (t1.c0, t1.c0)))))AND(x''))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL (((((((- (t1.c0)))OR((t1.c0 IN (t1.c0, t1.c0)))))AND(x''))) IS TRUE)  as count FROM t1 ORDER BY NULL);
SELECT * FROM t1 WHERE ((((((- (t1.c0)))OR((t1.c0 IN (t1.c0, t1.c0)))))AND(x''))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL (((((((- (t1.c0)))OR((t1.c0 IN (t1.c0, t1.c0)))))AND(x''))) IS TRUE)  as count FROM t1 ORDER BY NULL);
SELECT * FROM t1 WHERE ((((((- (t1.c0)))OR((t1.c0 IN (t1.c0, t1.c0)))))AND(x''))) ORDER BY NULL;
SELECT COUNT(*) FROM vt0, rt0, t1, t0 WHERE ('PQ') ORDER BY UNLIKELY(((((x'')OR(0.17151128681183248)))OR(rt0.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('PQ') IS TRUE)  as count FROM vt0, rt0, t1, t0 ORDER BY UNLIKELY(((((x'')OR(0.17151128681183248)))OR(rt0.c2))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, t1, t0 WHERE ('PQ') ORDER BY UNLIKELY(((((x'')OR(0.17151128681183248)))OR(rt0.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('PQ') IS TRUE)  as count FROM vt0, rt0, t1, t0 ORDER BY UNLIKELY(((((x'')OR(0.17151128681183248)))OR(rt0.c2))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, t1, t0 WHERE ('PQ') ORDER BY UNLIKELY(((((x'')OR(0.17151128681183248)))OR(rt0.c2))) ASC  NULLS FIRST;
SELECT ALL * FROM t1, vt0 WHERE (((CASE t1.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) ORDER BY COALESCE(((t1.c0) NOTNULL), (- (t1.c0)));
SELECT SUM(count) FROM (SELECT ((((CASE t1.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1, vt0 ORDER BY COALESCE(((t1.c0) NOTNULL), (- (t1.c0))));
SELECT ALL * FROM t1, vt0 WHERE (((CASE t1.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) ORDER BY COALESCE(((t1.c0) NOTNULL), (- (t1.c0)));
SELECT SUM(count) FROM (SELECT ((((CASE t1.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1, vt0 ORDER BY COALESCE(((t1.c0) NOTNULL), (- (t1.c0))));
SELECT ALL * FROM t1, vt0 WHERE (((CASE t1.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) ORDER BY COALESCE(((t1.c0) NOTNULL), (- (t1.c0)));
SELECT * FROM vt0, t0 WHERE ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))IS(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))IS(vt0.c0))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))IS(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))IS(vt0.c0))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))IS(vt0.c0)));
SELECT * FROM t0, rt0, t1 WHERE ((rt0.c3 COLLATE RTRIM IN ())) ORDER BY (((NULL))!=((rt0.c1))) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((rt0.c3 COLLATE RTRIM IN ())) IS TRUE)  as count FROM t0, rt0, t1 NOT INDEXED ORDER BY (((NULL))!=((rt0.c1))) COLLATE NOCASE ASC);
SELECT * FROM t0, rt0, t1 WHERE ((rt0.c3 COLLATE RTRIM IN ())) ORDER BY (((NULL))!=((rt0.c1))) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((rt0.c3 COLLATE RTRIM IN ())) IS TRUE)  as count FROM t0, rt0, t1 NOT INDEXED ORDER BY (((NULL))!=((rt0.c1))) COLLATE NOCASE ASC);
SELECT * FROM t0, rt0, t1 WHERE ((rt0.c3 COLLATE RTRIM IN ())) ORDER BY (((NULL))!=((rt0.c1))) COLLATE NOCASE ASC;
SELECT COUNT(*) FROM rt0, t0 FULL OUTER JOIN vt0 ON ((((((rt0.c2)>(rt0.c1)))AND(rt0.c3 COLLATE NOCASE)))OR(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) LEFT OUTER JOIN t1 ON (((t1.c0)) NOT BETWEEN ((((('-1842951480', t0.c0, rt0.c3, rt0.c2, t1.c0)) NOT BETWEEN ((t1.c0, rt0.c0, t0.c0, t0.c0, rt0.c3)) AND ((t0.c0, rt0.c2, x'', rt0.c1, rt0.c3))))) AND ((((rt0.c0)LIKE(rt0.c0))))) WHERE (((((rt0.c2) IS FALSE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS FALSE)) IS FALSE)) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN vt0 ON ((((((rt0.c2)>(rt0.c1)))AND(rt0.c3 COLLATE NOCASE)))OR(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) LEFT OUTER JOIN t1 ON (((t1.c0)) NOT BETWEEN ((((('-1842951480', t0.c0, rt0.c3, rt0.c2, t1.c0)) NOT BETWEEN ((t1.c0, rt0.c0, t0.c0, t0.c0, rt0.c3)) AND ((t0.c0, rt0.c2, x'', rt0.c1, rt0.c3))))) AND ((((rt0.c0)LIKE(rt0.c0))))));
SELECT COUNT(*) FROM rt0, t0 FULL OUTER JOIN vt0 ON ((((((rt0.c2)>(rt0.c1)))AND(rt0.c3 COLLATE NOCASE)))OR(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) LEFT OUTER JOIN t1 ON (((t1.c0)) NOT BETWEEN ((((('-1842951480', t0.c0, rt0.c3, rt0.c2, t1.c0)) NOT BETWEEN ((t1.c0, rt0.c0, t0.c0, t0.c0, rt0.c3)) AND ((t0.c0, rt0.c2, x'', rt0.c1, rt0.c3))))) AND ((((rt0.c0)LIKE(rt0.c0))))) WHERE (((((rt0.c2) IS FALSE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS FALSE)) IS FALSE)) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN vt0 ON ((((((rt0.c2)>(rt0.c1)))AND(rt0.c3 COLLATE NOCASE)))OR(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) LEFT OUTER JOIN t1 ON (((t1.c0)) NOT BETWEEN ((((('-1842951480', t0.c0, rt0.c3, rt0.c2, t1.c0)) NOT BETWEEN ((t1.c0, rt0.c0, t0.c0, t0.c0, rt0.c3)) AND ((t0.c0, rt0.c2, x'', rt0.c1, rt0.c3))))) AND ((((rt0.c0)LIKE(rt0.c0))))));
SELECT COUNT(*) FROM rt0, t0 FULL OUTER JOIN vt0 ON ((((((rt0.c2)>(rt0.c1)))AND(rt0.c3 COLLATE NOCASE)))OR(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) LEFT OUTER JOIN t1 ON (((t1.c0)) NOT BETWEEN ((((('-1842951480', t0.c0, rt0.c3, rt0.c2, t1.c0)) NOT BETWEEN ((t1.c0, rt0.c0, t0.c0, t0.c0, rt0.c3)) AND ((t0.c0, rt0.c2, x'', rt0.c1, rt0.c3))))) AND ((((rt0.c0)LIKE(rt0.c0))))) WHERE (((((rt0.c2) IS FALSE)) IS FALSE));
SELECT ALL * FROM vt0, t1, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, t1, rt0);
SELECT ALL * FROM vt0, t1, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, t1, rt0);
SELECT ALL * FROM vt0, t1, rt0 WHERE (x'');
SELECT ALL COUNT(*) FROM t1, vt0, rt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1, vt0, rt0, t0);
SELECT ALL COUNT(*) FROM t1, vt0, rt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1, vt0, rt0, t0);
SELECT ALL COUNT(*) FROM t1, vt0, rt0, t0 WHERE (NULL);
SELECT COUNT(*) FROM rt0, t1 WHERE ((((t1.c0)<=('2{k')) IN ()));
SELECT SUM(count) FROM (SELECT (((((t1.c0)<=('2{k')) IN ())) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE ((((t1.c0)<=('2{k')) IN ()));
SELECT SUM(count) FROM (SELECT (((((t1.c0)<=('2{k')) IN ())) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE ((((t1.c0)<=('2{k')) IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)/(t0.c0))) ISNULL)) ORDER BY ((((t0.c0)GLOB('-663401482'))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)/(t0.c0))) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)GLOB('-663401482'))) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)/(t0.c0))) ISNULL)) ORDER BY ((((t0.c0)GLOB('-663401482'))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)/(t0.c0))) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)GLOB('-663401482'))) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)/(t0.c0))) ISNULL)) ORDER BY ((((t0.c0)GLOB('-663401482'))) IS FALSE) ASC;
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(((t1.c0)IS NOT(t1.c0)) AS REAL)) ORDER BY NULL, t1.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c0)IS NOT(t1.c0)) AS REAL)) IS TRUE)  as count FROM t1 ORDER BY NULL, t1.c0 ASC);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(((t1.c0)IS NOT(t1.c0)) AS REAL)) ORDER BY NULL, t1.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c0)IS NOT(t1.c0)) AS REAL)) IS TRUE)  as count FROM t1 ORDER BY NULL, t1.c0 ASC);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(((t1.c0)IS NOT(t1.c0)) AS REAL)) ORDER BY NULL, t1.c0 ASC;
SELECT * FROM rt0, vt0, t1 FULL OUTER JOIN t0 ON NULL WHERE ((~ (((rt0.c3) NOT NULL)))) ORDER BY ((((((rt0.c3)OR(rt0.c2)))AND(vt0.c0))) BETWEEN (((rt0.c1)OR(rt0.c3))) AND (CAST(rt0.c1 AS BLOB))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c3) NOT NULL)))) IS TRUE)  as count FROM rt0, vt0, t1 FULL OUTER JOIN t0 ON NULL ORDER BY ((((((rt0.c3)OR(rt0.c2)))AND(vt0.c0))) BETWEEN (((rt0.c1)OR(rt0.c3))) AND (CAST(rt0.c1 AS BLOB))) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0, t1 FULL OUTER JOIN t0 ON NULL WHERE ((~ (((rt0.c3) NOT NULL)))) ORDER BY ((((((rt0.c3)OR(rt0.c2)))AND(vt0.c0))) BETWEEN (((rt0.c1)OR(rt0.c3))) AND (CAST(rt0.c1 AS BLOB))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c3) NOT NULL)))) IS TRUE)  as count FROM rt0, vt0, t1 FULL OUTER JOIN t0 ON NULL ORDER BY ((((((rt0.c3)OR(rt0.c2)))AND(vt0.c0))) BETWEEN (((rt0.c1)OR(rt0.c3))) AND (CAST(rt0.c1 AS BLOB))) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0, t1 FULL OUTER JOIN t0 ON NULL WHERE ((~ (((rt0.c3) NOT NULL)))) ORDER BY ((((((rt0.c3)OR(rt0.c2)))AND(vt0.c0))) BETWEEN (((rt0.c1)OR(rt0.c3))) AND (CAST(rt0.c1 AS BLOB))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, t1, t0 WHERE ((t0.c0 COLLATE RTRIM IN (((t1.c0)-(1422650966)), ((('1469192088')) NOT BETWEEN ((t1.c0)) AND ((vt0.c0))), ((((vt0.c0)OR(vt0.c0)))OR(t1.c0)))));
SELECT SUM(count) FROM (SELECT (((t0.c0 COLLATE RTRIM IN (((t1.c0)-(1422650966)), ((('1469192088')) NOT BETWEEN ((t1.c0)) AND ((vt0.c0))), ((((vt0.c0)OR(vt0.c0)))OR(t1.c0))))) IS TRUE)  as count FROM vt0, t1, t0);
SELECT ALL * FROM vt0, t1, t0 WHERE ((t0.c0 COLLATE RTRIM IN (((t1.c0)-(1422650966)), ((('1469192088')) NOT BETWEEN ((t1.c0)) AND ((vt0.c0))), ((((vt0.c0)OR(vt0.c0)))OR(t1.c0)))));
SELECT SUM(count) FROM (SELECT (((t0.c0 COLLATE RTRIM IN (((t1.c0)-(1422650966)), ((('1469192088')) NOT BETWEEN ((t1.c0)) AND ((vt0.c0))), ((((vt0.c0)OR(vt0.c0)))OR(t1.c0))))) IS TRUE)  as count FROM vt0, t1, t0);
SELECT ALL * FROM vt0, t1, t0 WHERE ((t0.c0 COLLATE RTRIM IN (((t1.c0)-(1422650966)), ((('1469192088')) NOT BETWEEN ((t1.c0)) AND ((vt0.c0))), ((((vt0.c0)OR(vt0.c0)))OR(t1.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((NULL IN ()))>('666079350'))) ORDER BY t0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN ()))>('666079350'))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((NULL IN ()))>('666079350'))) ORDER BY t0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN ()))>('666079350'))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((NULL IN ()))>('666079350'))) ORDER BY t0.c0 ASC  NULLS LAST;
SELECT ALL * FROM rt0, t0, t1 FULL OUTER JOIN vt0 ON ((((((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 ELSE NULL END)AND((((t1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))))OR(((((((((((((t1.c0)AND(rt0.c2)))OR(rt0.c1)))OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c3)))AND(0.9800209366360971)))))OR(((rt0.c2)<=(rt0.c1)))))OR(((0.7532459897924604)LIKE(NULL)))) WHERE (CAST(NULL AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM rt0, t0, t1 FULL OUTER JOIN vt0 ON ((((((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 ELSE NULL END)AND((((t1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))))OR(((((((((((((t1.c0)AND(rt0.c2)))OR(rt0.c1)))OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c3)))AND(0.9800209366360971)))))OR(((rt0.c2)<=(rt0.c1)))))OR(((0.7532459897924604)LIKE(NULL)))));
SELECT ALL * FROM rt0, t0, t1 FULL OUTER JOIN vt0 ON ((((((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 ELSE NULL END)AND((((t1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))))OR(((((((((((((t1.c0)AND(rt0.c2)))OR(rt0.c1)))OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c3)))AND(0.9800209366360971)))))OR(((rt0.c2)<=(rt0.c1)))))OR(((0.7532459897924604)LIKE(NULL)))) WHERE (CAST(NULL AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM rt0, t0, t1 FULL OUTER JOIN vt0 ON ((((((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 ELSE NULL END)AND((((t1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))))OR(((((((((((((t1.c0)AND(rt0.c2)))OR(rt0.c1)))OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c3)))AND(0.9800209366360971)))))OR(((rt0.c2)<=(rt0.c1)))))OR(((0.7532459897924604)LIKE(NULL)))));
SELECT ALL * FROM rt0, t0, t1 FULL OUTER JOIN vt0 ON ((((((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 ELSE NULL END)AND((((t1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))))OR(((((((((((((t1.c0)AND(rt0.c2)))OR(rt0.c1)))OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c3)))AND(0.9800209366360971)))))OR(((rt0.c2)<=(rt0.c1)))))OR(((0.7532459897924604)LIKE(NULL)))) WHERE (CAST(NULL AS TEXT));
SELECT * FROM rt0, t1 LEFT OUTER JOIN vt0 ON CASE WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)) THEN (('\rD') NOT BETWEEN ('D&Z') AND (rt0.c1)) WHEN x'8d824cf1' THEN ((t1.c0)/(vt0.c0)) WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)) THEN rt0.c3 END WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM rt0, t1 LEFT OUTER JOIN vt0 ON CASE WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)) THEN (('\rD') NOT BETWEEN ('D&Z') AND (rt0.c1)) WHEN x'8d824cf1' THEN ((t1.c0)/(vt0.c0)) WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)) THEN rt0.c3 END);
SELECT * FROM rt0, t1 LEFT OUTER JOIN vt0 ON CASE WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)) THEN (('\rD') NOT BETWEEN ('D&Z') AND (rt0.c1)) WHEN x'8d824cf1' THEN ((t1.c0)/(vt0.c0)) WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)) THEN rt0.c3 END WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM rt0, t1 LEFT OUTER JOIN vt0 ON CASE WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)) THEN (('\rD') NOT BETWEEN ('D&Z') AND (rt0.c1)) WHEN x'8d824cf1' THEN ((t1.c0)/(vt0.c0)) WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)) THEN rt0.c3 END);
SELECT * FROM rt0, t1 LEFT OUTER JOIN vt0 ON CASE WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)) THEN (('\rD') NOT BETWEEN ('D&Z') AND (rt0.c1)) WHEN x'8d824cf1' THEN ((t1.c0)/(vt0.c0)) WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)) THEN rt0.c3 END WHERE (SQLITE_SOURCE_ID());
SELECT ALL * FROM t0, vt0 WHERE ((((t0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((t0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((t0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((t0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((t0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))) COLLATE BINARY);
SELECT * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (((t0.c0)<=(t0.c0))) AND (((t0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (((t0.c0)<=(t0.c0))) AND (((t0.c0) ISNULL)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (((t0.c0)<=(t0.c0))) AND (((t0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (((t0.c0)<=(t0.c0))) AND (((t0.c0) ISNULL)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (((t0.c0)<=(t0.c0))) AND (((t0.c0) ISNULL))));
SELECT ALL * FROM t0, t1, rt0 WHERE ((((((rt0.c0) ISNULL)))!=((rt0.c3)))) ORDER BY JULIANDAY(((rt0.c3) NOT BETWEEN (t0.c0) AND (rt0.c3)), ((t0.c0) IS TRUE), IFNULL(t1.c0, rt0.c2)), CAST(((((((((-919033006)OR(x'')))AND(rt0.c2)))OR(x'')))AND(t1.c0)) AS TEXT), (((rt0.c2, rt0.c1, rt0.c3)) BETWEEN (((t0.c0 IN (t1.c0)), ((rt0.c2)<<(rt0.c0)), '-226199695')) AND ((t1.c0, (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), ((t0.c0)&(t1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0) ISNULL)))!=((rt0.c3)))) IS TRUE)  as count FROM t0, t1, rt0 ORDER BY JULIANDAY(((rt0.c3) NOT BETWEEN (t0.c0) AND (rt0.c3)), ((t0.c0) IS TRUE), IFNULL(t1.c0, rt0.c2)), CAST(((((((((-919033006)OR(x'')))AND(rt0.c2)))OR(x'')))AND(t1.c0)) AS TEXT), (((rt0.c2, rt0.c1, rt0.c3)) BETWEEN (((t0.c0 IN (t1.c0)), ((rt0.c2)<<(rt0.c0)), '-226199695')) AND ((t1.c0, (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), ((t0.c0)&(t1.c0))))) DESC);
SELECT ALL * FROM t0, t1, rt0 WHERE ((((((rt0.c0) ISNULL)))!=((rt0.c3)))) ORDER BY JULIANDAY(((rt0.c3) NOT BETWEEN (t0.c0) AND (rt0.c3)), ((t0.c0) IS TRUE), IFNULL(t1.c0, rt0.c2)), CAST(((((((((-919033006)OR(x'')))AND(rt0.c2)))OR(x'')))AND(t1.c0)) AS TEXT), (((rt0.c2, rt0.c1, rt0.c3)) BETWEEN (((t0.c0 IN (t1.c0)), ((rt0.c2)<<(rt0.c0)), '-226199695')) AND ((t1.c0, (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), ((t0.c0)&(t1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0) ISNULL)))!=((rt0.c3)))) IS TRUE)  as count FROM t0, t1, rt0 ORDER BY JULIANDAY(((rt0.c3) NOT BETWEEN (t0.c0) AND (rt0.c3)), ((t0.c0) IS TRUE), IFNULL(t1.c0, rt0.c2)), CAST(((((((((-919033006)OR(x'')))AND(rt0.c2)))OR(x'')))AND(t1.c0)) AS TEXT), (((rt0.c2, rt0.c1, rt0.c3)) BETWEEN (((t0.c0 IN (t1.c0)), ((rt0.c2)<<(rt0.c0)), '-226199695')) AND ((t1.c0, (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), ((t0.c0)&(t1.c0))))) DESC);
SELECT ALL * FROM t0, t1, rt0 WHERE ((((((rt0.c0) ISNULL)))!=((rt0.c3)))) ORDER BY JULIANDAY(((rt0.c3) NOT BETWEEN (t0.c0) AND (rt0.c3)), ((t0.c0) IS TRUE), IFNULL(t1.c0, rt0.c2)), CAST(((((((((-919033006)OR(x'')))AND(rt0.c2)))OR(x'')))AND(t1.c0)) AS TEXT), (((rt0.c2, rt0.c1, rt0.c3)) BETWEEN (((t0.c0 IN (t1.c0)), ((rt0.c2)<<(rt0.c0)), '-226199695')) AND ((t1.c0, (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), ((t0.c0)&(t1.c0))))) DESC;
SELECT * FROM vt0 NATURAL JOIN t1 WHERE (((~ (t1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((~ (t1.c0)) IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN t1);
SELECT * FROM vt0 NATURAL JOIN t1 WHERE (((~ (t1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((~ (t1.c0)) IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN t1);
SELECT * FROM vt0 NATURAL JOIN t1 WHERE (((~ (t1.c0)) IN ()));
SELECT COUNT(*) FROM rt0, t0 WHERE (((((((((((((((t0.c0)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c3)))!=((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((t0.c0)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c3)))!=((~ (rt0.c2))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((((((((((((t0.c0)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c3)))!=((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((t0.c0)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c3)))!=((~ (rt0.c2))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((((((((((((t0.c0)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c3)))!=((~ (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (CAST(rt0.c3 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt0.c3 AS TEXT)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (CAST(rt0.c3 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt0.c3 AS TEXT)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (CAST(rt0.c3 AS TEXT))));
SELECT * FROM rt0, t1, t0, vt0 WHERE (((rt0.c2 COLLATE NOCASE) NOT BETWEEN (TRIM(t1.c0, rt0.c1)) AND (ROUND(vt0.c0, t0.c0))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE) NOT BETWEEN (TRIM(t1.c0, rt0.c1)) AND (ROUND(vt0.c0, t0.c0)))) IS TRUE)  as count FROM rt0, t1, t0, vt0);
SELECT * FROM rt0, t1, t0, vt0 WHERE (((rt0.c2 COLLATE NOCASE) NOT BETWEEN (TRIM(t1.c0, rt0.c1)) AND (ROUND(vt0.c0, t0.c0))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE) NOT BETWEEN (TRIM(t1.c0, rt0.c1)) AND (ROUND(vt0.c0, t0.c0)))) IS TRUE)  as count FROM rt0, t1, t0, vt0);
SELECT * FROM rt0, t1, t0, vt0 WHERE (((rt0.c2 COLLATE NOCASE) NOT BETWEEN (TRIM(t1.c0, rt0.c1)) AND (ROUND(vt0.c0, t0.c0))));
SELECT ALL COUNT(*) FROM vt0, t0 INDEXED BY i82 WHERE (((NOT (vt0.c0)) IN (NULLIF(DISTINCT vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (vt0.c0)) IN (NULLIF(DISTINCT vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0, t0 INDEXED BY i82);
SELECT ALL COUNT(*) FROM vt0, t0 INDEXED BY i82 WHERE (((NOT (vt0.c0)) IN (NULLIF(DISTINCT vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (vt0.c0)) IN (NULLIF(DISTINCT vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0, t0 INDEXED BY i82);
SELECT ALL * FROM t1, vt0 WHERE ((((t1.c0)) BETWEEN (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((NULL))))) AND ((CAST(x'' AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT (((((t1.c0)) BETWEEN (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((NULL))))) AND ((CAST(x'' AS NUMERIC))))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE ((((t1.c0)) BETWEEN (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((NULL))))) AND ((CAST(x'' AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT (((((t1.c0)) BETWEEN (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((NULL))))) AND ((CAST(x'' AS NUMERIC))))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE ((((t1.c0)) BETWEEN (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((NULL))))) AND ((CAST(x'' AS NUMERIC)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON ((vt0.c0 IN ()) IN ((((NULL, rt0.c3, rt0.c0, rt0.c0, rt0.c2))<=((rt0.c2, rt0.c2, t0.c0, rt0.c0, rt0.c2))))) FULL OUTER JOIN rt0 ON rt0.c2 WHERE ((((((((t0.c0))<((vt0.c0))))OR((((vt0.c0, vt0.c0, t0.c0))<(('-357344837', t0.c0, rt0.c2))))))AND(CASE WHEN t0.c0 THEN NULL WHEN '-1677306758' THEN rt0.c3 WHEN vt0.c0 THEN 0.942769077581024 END)));
SELECT SUM(count) FROM (SELECT (((((((((t0.c0))<((vt0.c0))))OR((((vt0.c0, vt0.c0, t0.c0))<(('-357344837', t0.c0, rt0.c2))))))AND(CASE WHEN t0.c0 THEN NULL WHEN '-1677306758' THEN rt0.c3 WHEN vt0.c0 THEN 0.942769077581024 END))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((vt0.c0 IN ()) IN ((((NULL, rt0.c3, rt0.c0, rt0.c0, rt0.c2))<=((rt0.c2, rt0.c2, t0.c0, rt0.c0, rt0.c2))))) FULL OUTER JOIN rt0 ON rt0.c2);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON ((vt0.c0 IN ()) IN ((((NULL, rt0.c3, rt0.c0, rt0.c0, rt0.c2))<=((rt0.c2, rt0.c2, t0.c0, rt0.c0, rt0.c2))))) FULL OUTER JOIN rt0 ON rt0.c2 WHERE ((((((((t0.c0))<((vt0.c0))))OR((((vt0.c0, vt0.c0, t0.c0))<(('-357344837', t0.c0, rt0.c2))))))AND(CASE WHEN t0.c0 THEN NULL WHEN '-1677306758' THEN rt0.c3 WHEN vt0.c0 THEN 0.942769077581024 END)));
SELECT SUM(count) FROM (SELECT (((((((((t0.c0))<((vt0.c0))))OR((((vt0.c0, vt0.c0, t0.c0))<(('-357344837', t0.c0, rt0.c2))))))AND(CASE WHEN t0.c0 THEN NULL WHEN '-1677306758' THEN rt0.c3 WHEN vt0.c0 THEN 0.942769077581024 END))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((vt0.c0 IN ()) IN ((((NULL, rt0.c3, rt0.c0, rt0.c0, rt0.c2))<=((rt0.c2, rt0.c2, t0.c0, rt0.c0, rt0.c2))))) FULL OUTER JOIN rt0 ON rt0.c2);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN 0.6825881464355193 THEN ((vt0.c0) ISNULL) WHEN ((vt0.c0)<<(vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((NULL) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.6825881464355193 THEN ((vt0.c0) ISNULL) WHEN ((vt0.c0)<<(vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((NULL) NOTNULL) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN 0.6825881464355193 THEN ((vt0.c0) ISNULL) WHEN ((vt0.c0)<<(vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((NULL) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.6825881464355193 THEN ((vt0.c0) ISNULL) WHEN ((vt0.c0)<<(vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((NULL) NOTNULL) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN 0.6825881464355193 THEN ((vt0.c0) ISNULL) WHEN ((vt0.c0)<<(vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((NULL) NOTNULL) END);
SELECT ALL * FROM t1 RIGHT OUTER JOIN vt0 ON ((t1.c0)!=(CAST(t1.c0 AS TEXT))) WHERE ((0.1828529903662175 IN ()));
SELECT SUM(count) FROM (SELECT (((0.1828529903662175 IN ())) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON ((t1.c0)!=(CAST(t1.c0 AS TEXT))));
SELECT ALL * FROM t1 RIGHT OUTER JOIN vt0 ON ((t1.c0)!=(CAST(t1.c0 AS TEXT))) WHERE ((0.1828529903662175 IN ()));
SELECT SUM(count) FROM (SELECT (((0.1828529903662175 IN ())) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON ((t1.c0)!=(CAST(t1.c0 AS TEXT))));
SELECT ALL * FROM t1 RIGHT OUTER JOIN vt0 ON ((t1.c0)!=(CAST(t1.c0 AS TEXT))) WHERE ((0.1828529903662175 IN ()));
SELECT * FROM vt0, t0, t1 RIGHT OUTER JOIN rt0 ON (CASE vt0.c0  WHEN rt0.c0 THEN rt0.c3 END IN ()) WHERE (((CAST(t0.c0 AS NUMERIC))/(CAST(rt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS NUMERIC))/(CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0, t0, t1 RIGHT OUTER JOIN rt0 ON (CASE vt0.c0  WHEN rt0.c0 THEN rt0.c3 END IN ()));
SELECT * FROM vt0, t0, t1 RIGHT OUTER JOIN rt0 ON (CASE vt0.c0  WHEN rt0.c0 THEN rt0.c3 END IN ()) WHERE (((CAST(t0.c0 AS NUMERIC))/(CAST(rt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS NUMERIC))/(CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0, t0, t1 RIGHT OUTER JOIN rt0 ON (CASE vt0.c0  WHEN rt0.c0 THEN rt0.c3 END IN ()));
SELECT * FROM vt0, t0, t1 RIGHT OUTER JOIN rt0 ON (CASE vt0.c0  WHEN rt0.c0 THEN rt0.c3 END IN ()) WHERE (((CAST(t0.c0 AS NUMERIC))/(CAST(rt0.c1 AS INTEGER))));
SELECT * FROM t1, vt0, rt0 WHERE ((+ ((+ (rt0.c1))))) ORDER BY (((ABS(rt0.c2)))=((rt0.c0 COLLATE BINARY))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ((+ (rt0.c1))))) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY (((ABS(rt0.c2)))==((rt0.c0 COLLATE BINARY))) DESC  NULLS FIRST);
SELECT * FROM t1, vt0, rt0 WHERE ((+ ((+ (rt0.c1))))) ORDER BY (((ABS(rt0.c2)))=((rt0.c0 COLLATE BINARY))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ((+ (rt0.c1))))) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY (((ABS(rt0.c2)))==((rt0.c0 COLLATE BINARY))) DESC  NULLS FIRST);
SELECT * FROM t1, vt0, rt0 WHERE ((+ ((+ (rt0.c1))))) ORDER BY (((ABS(rt0.c2)))=((rt0.c0 COLLATE BINARY))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (-9.20654518E8) ORDER BY ((((((((CAST('' AS NUMERIC))OR(CASE WHEN rt0.c1 THEN vt0.c0 END)))OR((((t0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(CAST(rt0.c3 AS NUMERIC))))AND(((rt0.c0)>=(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((-9.20654518E8) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((((((CAST('' AS NUMERIC))OR(CASE WHEN rt0.c1 THEN vt0.c0 END)))OR((((t0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(CAST(rt0.c3 AS NUMERIC))))AND(((rt0.c0)>=(rt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (-9.20654518E8) ORDER BY ((((((((CAST('' AS NUMERIC))OR(CASE WHEN rt0.c1 THEN vt0.c0 END)))OR((((t0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(CAST(rt0.c3 AS NUMERIC))))AND(((rt0.c0)>=(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((-9.20654518E8) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((((((CAST('' AS NUMERIC))OR(CASE WHEN rt0.c1 THEN vt0.c0 END)))OR((((t0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(CAST(rt0.c3 AS NUMERIC))))AND(((rt0.c0)>=(rt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (-9.20654518E8) ORDER BY ((((((((CAST('' AS NUMERIC))OR(CASE WHEN rt0.c1 THEN vt0.c0 END)))OR((((t0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(CAST(rt0.c3 AS NUMERIC))))AND(((rt0.c0)>=(rt0.c0)))) DESC;
SELECT COUNT(*) FROM t1, rt0, t0, vt0 WHERE (CASE (- (rt0.c2))  WHEN rt0.c3 THEN rt0.c3 ELSE t1.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (rt0.c2))  WHEN rt0.c3 THEN rt0.c3 ELSE t1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM t1, rt0, t0, vt0);
SELECT COUNT(*) FROM t1, rt0, t0, vt0 WHERE (CASE (- (rt0.c2))  WHEN rt0.c3 THEN rt0.c3 ELSE t1.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (rt0.c2))  WHEN rt0.c3 THEN rt0.c3 ELSE t1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM t1, rt0, t0, vt0);
SELECT COUNT(*) FROM t1, rt0, t0, vt0 WHERE (CASE (- (rt0.c2))  WHEN rt0.c3 THEN rt0.c3 ELSE t1.c0 COLLATE RTRIM END);
SELECT * FROM t0 WHERE (CASE WHEN ((t0.c0)OR(t0.c0)) THEN CAST(t0.c0 AS INTEGER) WHEN json_object(t0.c0, t0.c0) THEN ((t0.c0) IS FALSE) WHEN ((t0.c0) ISNULL) THEN ((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)) END) ORDER BY (~ (((t0.c0)<<(t0.c0)))) ASC, ((t0.c0 COLLATE BINARY) IS FALSE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0)OR(t0.c0)) THEN CAST(t0.c0 AS INTEGER) WHEN json_object(t0.c0, t0.c0) THEN ((t0.c0) IS FALSE) WHEN ((t0.c0) ISNULL) THEN ((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY (~ (((t0.c0)<<(t0.c0)))) ASC, ((t0.c0 COLLATE BINARY) IS FALSE));
SELECT * FROM t0 WHERE (CASE WHEN ((t0.c0)OR(t0.c0)) THEN CAST(t0.c0 AS INTEGER) WHEN json_object(t0.c0, t0.c0) THEN ((t0.c0) IS FALSE) WHEN ((t0.c0) ISNULL) THEN ((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)) END) ORDER BY (~ (((t0.c0)<<(t0.c0)))) ASC, ((t0.c0 COLLATE BINARY) IS FALSE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0)OR(t0.c0)) THEN CAST(t0.c0 AS INTEGER) WHEN json_object(t0.c0, t0.c0) THEN ((t0.c0) IS FALSE) WHEN ((t0.c0) ISNULL) THEN ((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY (~ (((t0.c0)<<(t0.c0)))) ASC, ((t0.c0 COLLATE BINARY) IS FALSE));
SELECT * FROM t0 WHERE (CASE WHEN ((t0.c0)OR(t0.c0)) THEN CAST(t0.c0 AS INTEGER) WHEN json_object(t0.c0, t0.c0) THEN ((t0.c0) IS FALSE) WHEN ((t0.c0) ISNULL) THEN ((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)) END) ORDER BY (~ (((t0.c0)<<(t0.c0)))) ASC, ((t0.c0 COLLATE BINARY) IS FALSE);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((('')IS NOT(((rt0.c3)/(vt0.c0))))) ORDER BY ((rt0.c3 COLLATE RTRIM)=(rt0.c2))  NULLS LAST, -1933918614 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('')IS NOT(((rt0.c3)/(vt0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((rt0.c3 COLLATE RTRIM)==(rt0.c2))  NULLS LAST, -1933918614 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((('')IS NOT(((rt0.c3)/(vt0.c0))))) ORDER BY ((rt0.c3 COLLATE RTRIM)=(rt0.c2))  NULLS LAST, -1933918614 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('')IS NOT(((rt0.c3)/(vt0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((rt0.c3 COLLATE RTRIM)==(rt0.c2))  NULLS LAST, -1933918614 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, t1 WHERE (((((vt0.c0)<>(vt0.c0))) BETWEEN (((rt0.c0) IS FALSE)) AND (((rt0.c2) IS FALSE)))) ORDER BY (- (CAST(vt0.c0 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<>(vt0.c0))) BETWEEN (((rt0.c0) IS FALSE)) AND (((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY (- (CAST(vt0.c0 AS TEXT))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, t1 WHERE (((((vt0.c0)<>(vt0.c0))) BETWEEN (((rt0.c0) IS FALSE)) AND (((rt0.c2) IS FALSE)))) ORDER BY (- (CAST(vt0.c0 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<>(vt0.c0))) BETWEEN (((rt0.c0) IS FALSE)) AND (((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY (- (CAST(vt0.c0 AS TEXT))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, t1 WHERE (((((vt0.c0)<>(vt0.c0))) BETWEEN (((rt0.c0) IS FALSE)) AND (((rt0.c2) IS FALSE)))) ORDER BY (- (CAST(vt0.c0 AS TEXT))) ASC;
SELECT * FROM rt0, vt0, t1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt0, t1);
SELECT * FROM rt0, vt0, t1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt0, t1);
SELECT * FROM rt0, vt0, t1 WHERE (x'');
SELECT COUNT(*) FROM vt0, rt0, t1, t0 WHERE (x'') ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0, t1, t0 ORDER BY rt0.c2);
SELECT COUNT(*) FROM vt0, rt0, t1, t0 WHERE (x'') ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0, t1, t0 ORDER BY rt0.c2);
SELECT COUNT(*) FROM vt0, rt0, t1, t0 WHERE (x'') ORDER BY rt0.c2;
SELECT COUNT(*) FROM rt0, t0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM t0, vt0, t1, rt0 WHERE (((((((vt0.c0)<=(t0.c0)))OR(((rt0.c3)!=(vt0.c0)))))AND(CASE t1.c0  WHEN rt0.c2 THEN rt0.c1 WHEN t0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)<=(t0.c0)))OR(((rt0.c3)<>(vt0.c0)))))AND(CASE t1.c0  WHEN rt0.c2 THEN rt0.c1 WHEN t0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 END))) IS TRUE)  as count FROM t0, vt0, t1, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, t1, rt0 WHERE (((((((vt0.c0)<=(t0.c0)))OR(((rt0.c3)!=(vt0.c0)))))AND(CASE t1.c0  WHEN rt0.c2 THEN rt0.c1 WHEN t0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)<=(t0.c0)))OR(((rt0.c3)<>(vt0.c0)))))AND(CASE t1.c0  WHEN rt0.c2 THEN rt0.c1 WHEN t0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 END))) IS TRUE)  as count FROM t0, vt0, t1, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, t1, rt0 WHERE (((((((vt0.c0)<=(t0.c0)))OR(((rt0.c3)!=(vt0.c0)))))AND(CASE t1.c0  WHEN rt0.c2 THEN rt0.c1 WHEN t0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 END)));
SELECT ALL * FROM rt0, vt0 INNER JOIN t0 ON CAST(((vt0.c0) NOT BETWEEN (rt0.c0) AND ('1846104438')) AS TEXT) WHERE ((NOT (ABS(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (ABS(t0.c0)))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN t0 ON CAST(((vt0.c0) NOT BETWEEN (rt0.c0) AND ('1846104438')) AS TEXT));
SELECT ALL * FROM rt0, vt0 INNER JOIN t0 ON CAST(((vt0.c0) NOT BETWEEN (rt0.c0) AND ('1846104438')) AS TEXT) WHERE ((NOT (ABS(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (ABS(t0.c0)))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN t0 ON CAST(((vt0.c0) NOT BETWEEN (rt0.c0) AND ('1846104438')) AS TEXT));
SELECT ALL * FROM rt0, vt0 INNER JOIN t0 ON CAST(((vt0.c0) NOT BETWEEN (rt0.c0) AND ('1846104438')) AS TEXT) WHERE ((NOT (ABS(t0.c0))));
SELECT COUNT(*) FROM rt0 WHERE ((NOT (-983456152))) ORDER BY ((LIKELIHOOD(DISTINCT rt0.c2, 0.4683528291784562))==((rt0.c2 IN (rt0.c3, rt0.c2)))), (NOT (rt0.c2)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((NOT (-983456152))) IS TRUE)  as count FROM rt0 ORDER BY ((LIKELIHOOD(DISTINCT rt0.c2, 0.4683528291784562))=((rt0.c2 IN (rt0.c3, rt0.c2)))), (NOT (rt0.c2)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (-983456152))) ORDER BY ((LIKELIHOOD(DISTINCT rt0.c2, 0.4683528291784562))==((rt0.c2 IN (rt0.c3, rt0.c2)))), (NOT (rt0.c2)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((NOT (-983456152))) IS TRUE)  as count FROM rt0 ORDER BY ((LIKELIHOOD(DISTINCT rt0.c2, 0.4683528291784562))=((rt0.c2 IN (rt0.c3, rt0.c2)))), (NOT (rt0.c2)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (-983456152))) ORDER BY ((LIKELIHOOD(DISTINCT rt0.c2, 0.4683528291784562))==((rt0.c2 IN (rt0.c3, rt0.c2)))), (NOT (rt0.c2)) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY UPPER((rt0.c1 IN ())) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY UPPER((rt0.c1 IN ())) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY UPPER((rt0.c1 IN ())) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY UPPER((rt0.c1 IN ())) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY UPPER((rt0.c1 IN ())) ASC  NULLS FIRST;
SELECT * FROM t1, rt0, t0, vt0 WHERE (((((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2))) ISNULL)) IS TRUE)  as count FROM t1, rt0, t0, vt0);
SELECT * FROM t1, rt0, t0, vt0 WHERE (((((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2))) ISNULL)) IS TRUE)  as count FROM t1, rt0, t0, vt0);
SELECT * FROM t1, rt0, t0, vt0 WHERE (((((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2))) ISNULL));
SELECT COUNT(*) FROM vt0, t0, rt0, t1 WHERE ((((rt0.c3)&(0x59f8cf5e)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)&(0x59f8cf5e)) IN ())) IS TRUE)  as count FROM vt0, t0, rt0, t1 NOT INDEXED);
SELECT COUNT(*) FROM vt0, t0, rt0, t1 WHERE ((((rt0.c3)&(0x59f8cf5e)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)&(0x59f8cf5e)) IN ())) IS TRUE)  as count FROM vt0, t0, rt0, t1 NOT INDEXED);
SELECT COUNT(*) FROM vt0, t0, rt0, t1 WHERE ((((rt0.c3)&(0x59f8cf5e)) IN ()));
SELECT COUNT(*) FROM t1 WHERE (((LTRIM(t1.c0, t1.c0))&((((-1.764374478E9)) BETWEEN ((t1.c0)) AND ((t1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((LTRIM(t1.c0, t1.c0))&((((-1.764374478E9)) BETWEEN ((t1.c0)) AND ((t1.c0)))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((LTRIM(t1.c0, t1.c0))&((((-1.764374478E9)) BETWEEN ((t1.c0)) AND ((t1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((LTRIM(t1.c0, t1.c0))&((((-1.764374478E9)) BETWEEN ((t1.c0)) AND ((t1.c0)))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((LTRIM(t1.c0, t1.c0))&((((-1.764374478E9)) BETWEEN ((t1.c0)) AND ((t1.c0))))));
SELECT * FROM t0, vt0, t1, rt0 WHERE ((~ (t1.c0))) ORDER BY (CASE NULL  WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c2 END IN (((t0.c0)==(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (t1.c0))) IS TRUE)  as count FROM t0, vt0, t1, rt0 ORDER BY (CASE NULL  WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c2 END IN (((t0.c0)=(t0.c0))))  NULLS FIRST);
SELECT * FROM t0, vt0, t1, rt0 WHERE ((~ (t1.c0))) ORDER BY (CASE NULL  WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c2 END IN (((t0.c0)==(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (t1.c0))) IS TRUE)  as count FROM t0, vt0, t1, rt0 ORDER BY (CASE NULL  WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c2 END IN (((t0.c0)=(t0.c0))))  NULLS FIRST);
SELECT * FROM t0, vt0, t1, rt0 WHERE ((~ (t1.c0))) ORDER BY (CASE NULL  WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c2 END IN (((t0.c0)==(t0.c0))))  NULLS FIRST;
SELECT * FROM t0, rt0, vt0 WHERE (CASE rt0.c0  WHEN '1429541811' THEN rt0.c1 ELSE vt0.c0 END COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN '1429541811' THEN rt0.c1 ELSE vt0.c0 END COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (CASE rt0.c0  WHEN '1429541811' THEN rt0.c1 ELSE vt0.c0 END COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN '1429541811' THEN rt0.c1 ELSE vt0.c0 END COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (CASE rt0.c0  WHEN '1429541811' THEN rt0.c1 ELSE vt0.c0 END COLLATE NOCASE COLLATE BINARY);
SELECT ALL * FROM t0, vt0, t1, rt0 WHERE ((- (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((- (vt0.c0))) IS TRUE)  as count FROM t0, vt0, t1, rt0);
SELECT ALL * FROM t0, vt0, t1, rt0 WHERE ((- (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((- (vt0.c0))) IS TRUE)  as count FROM t0, vt0, t1, rt0);
SELECT ALL * FROM t0, vt0, t1, rt0 WHERE ((- (vt0.c0)));
SELECT COUNT(*) FROM t1 WHERE (CAST(((t1.c0)<>(t1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c0)<>(t1.c0)) AS REAL)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CAST(((t1.c0)<>(t1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c0)<>(t1.c0)) AS REAL)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CAST(((t1.c0)<>(t1.c0)) AS REAL));
SELECT * FROM rt0, vt0, t0 RIGHT OUTER JOIN t1 ON rt0.c3 WHERE (RTRIM(((t1.c0)<>(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((RTRIM(((t1.c0)!=(rt0.c2)))) IS TRUE)  as count FROM rt0, vt0, t0 RIGHT OUTER JOIN t1 ON rt0.c3);
SELECT * FROM rt0, vt0, t0 RIGHT OUTER JOIN t1 ON rt0.c3 WHERE (RTRIM(((t1.c0)<>(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((RTRIM(((t1.c0)!=(rt0.c2)))) IS TRUE)  as count FROM rt0, vt0, t0 RIGHT OUTER JOIN t1 ON rt0.c3);
SELECT * FROM rt0, vt0, t0 RIGHT OUTER JOIN t1 ON rt0.c3 WHERE (RTRIM(((t1.c0)<>(rt0.c2))));
SELECT * FROM rt0, t1 WHERE (LIKELY(DISTINCT ((t1.c0)<<(rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((t1.c0)<<(rt0.c3)))) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE (LIKELY(DISTINCT ((t1.c0)<<(rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((t1.c0)<<(rt0.c3)))) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE (LIKELY(DISTINCT ((t1.c0)<<(rt0.c3))));
SELECT ALL * FROM vt0, rt0, t1 NATURAL JOIN t0 WHERE (((CASE rt0.c2  WHEN rt0.c3 THEN '1287177855' END) NOT BETWEEN ((t0.c0 IN ())) AND (rt0.c0))) ORDER BY CASE WHEN (~ (rt0.c1)) THEN ((((rt0.c0)AND(t1.c0)))OR(rt0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN rt0.c3 THEN '1287177855' END) NOT BETWEEN ((t0.c0 IN ())) AND (rt0.c0))) IS TRUE)  as count FROM vt0, rt0, t1 NATURAL JOIN t0 ORDER BY CASE WHEN (~ (rt0.c1)) THEN ((((rt0.c0)AND(t1.c0)))OR(rt0.c1)) END);
SELECT ALL * FROM vt0, rt0, t1 NATURAL JOIN t0 WHERE (((CASE rt0.c2  WHEN rt0.c3 THEN '1287177855' END) NOT BETWEEN ((t0.c0 IN ())) AND (rt0.c0))) ORDER BY CASE WHEN (~ (rt0.c1)) THEN ((((rt0.c0)AND(t1.c0)))OR(rt0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN rt0.c3 THEN '1287177855' END) NOT BETWEEN ((t0.c0 IN ())) AND (rt0.c0))) IS TRUE)  as count FROM vt0, rt0, t1 NATURAL JOIN t0 ORDER BY CASE WHEN (~ (rt0.c1)) THEN ((((rt0.c0)AND(t1.c0)))OR(rt0.c1)) END);
SELECT ALL * FROM vt0, rt0, t1 NATURAL JOIN t0 WHERE (((CASE rt0.c2  WHEN rt0.c3 THEN '1287177855' END) NOT BETWEEN ((t0.c0 IN ())) AND (rt0.c0))) ORDER BY CASE WHEN (~ (rt0.c1)) THEN ((((rt0.c0)AND(t1.c0)))OR(rt0.c1)) END;
SELECT ALL * FROM t1 WHERE (((((t1.c0)GLOB(t1.c0)))&((t1.c0 IN (t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)GLOB(t1.c0)))&((t1.c0 IN (t1.c0))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((t1.c0)GLOB(t1.c0)))&((t1.c0 IN (t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)GLOB(t1.c0)))&((t1.c0 IN (t1.c0))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((t1.c0)GLOB(t1.c0)))&((t1.c0 IN (t1.c0)))));
SELECT ALL * FROM rt0, t0, vt0 WHERE (((((t0.c0) ISNULL))*(((rt0.c1)>>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) ISNULL))*(((rt0.c1)>>(vt0.c0))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE (((((t0.c0) ISNULL))*(((rt0.c1)>>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) ISNULL))*(((rt0.c1)>>(vt0.c0))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE (((((t0.c0) ISNULL))*(((rt0.c1)>>(vt0.c0)))));
SELECT ALL COUNT(*) FROM t0, rt0, t1, vt0 WHERE (((rt0.c1) IS TRUE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c1) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0, t1, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, t1, vt0 WHERE (((rt0.c1) IS TRUE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c1) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0, t1, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, t1, vt0 WHERE (((rt0.c1) IS TRUE) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t1 ON NULL COLLATE NOCASE LEFT OUTER JOIN t0 ON ((((((vt0.c0) IS FALSE))OR(CAST(t1.c0 AS REAL))))AND(((t0.c0)<>(vt0.c0)))) WHERE (t1.c0) ORDER BY ((((((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((((((((('0.4251878604563244')AND(vt0.c0)))OR(t1.c0)))AND(vt0.c0)))OR(t1.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c0))));
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON NULL COLLATE NOCASE LEFT OUTER JOIN t0 ON ((((((vt0.c0) IS FALSE))OR(CAST(t1.c0 AS REAL))))AND(((t0.c0)!=(vt0.c0)))) ORDER BY ((((((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((((((((('0.4251878604563244')AND(vt0.c0)))OR(t1.c0)))AND(vt0.c0)))OR(t1.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t1 ON NULL COLLATE NOCASE LEFT OUTER JOIN t0 ON ((((((vt0.c0) IS FALSE))OR(CAST(t1.c0 AS REAL))))AND(((t0.c0)<>(vt0.c0)))) WHERE (t1.c0) ORDER BY ((((((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((((((((('0.4251878604563244')AND(vt0.c0)))OR(t1.c0)))AND(vt0.c0)))OR(t1.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c0))));
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON NULL COLLATE NOCASE LEFT OUTER JOIN t0 ON ((((((vt0.c0) IS FALSE))OR(CAST(t1.c0 AS REAL))))AND(((t0.c0)!=(vt0.c0)))) ORDER BY ((((((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((((((((('0.4251878604563244')AND(vt0.c0)))OR(t1.c0)))AND(vt0.c0)))OR(t1.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t1 ON NULL COLLATE NOCASE LEFT OUTER JOIN t0 ON ((((((vt0.c0) IS FALSE))OR(CAST(t1.c0 AS REAL))))AND(((t0.c0)<>(vt0.c0)))) WHERE (t1.c0) ORDER BY ((((((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((((((((('0.4251878604563244')AND(vt0.c0)))OR(t1.c0)))AND(vt0.c0)))OR(t1.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c0))));
SELECT * FROM t1 WHERE (CAST(((t1.c0) IS TRUE) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c0) IS TRUE) AS NUMERIC)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CAST(((t1.c0) IS TRUE) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c0) IS TRUE) AS NUMERIC)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CAST(((t1.c0) IS TRUE) AS NUMERIC));
SELECT ALL * FROM vt0 WHERE (NULL COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (NULL COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (NULL COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)==(vt0.c0))))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, 0.5144216398848354, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0Xffffffff925cf944)), CAST(vt0.c0 AS INTEGER), CAST(vt0.c0 AS TEXT), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, (((vt0.c0))==((vt0.c0))), (((vt0.c0, vt0.c0, '953299918')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, x''))))) AND ((((vt0.c0) NOTNULL), vt0.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (~ (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)>=(vt0.c0)), (NOT (vt0.c0))))) ASC  NULLS LAST, CAST(((vt0.c0)&(vt0.c0)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER)) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)==(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, 0.5144216398848354, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0xffffffff925cf944)), CAST(vt0.c0 AS INTEGER), CAST(vt0.c0 AS TEXT), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, (((vt0.c0))==((vt0.c0))), (((vt0.c0, vt0.c0, '953299918')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, x''))))) AND ((((vt0.c0) NOTNULL), vt0.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (~ (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)>=(vt0.c0)), (NOT (vt0.c0))))) ASC  NULLS LAST, CAST(((vt0.c0)&(vt0.c0)) AS NUMERIC) DESC);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)==(vt0.c0))))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, 0.5144216398848354, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0Xffffffff925cf944)), CAST(vt0.c0 AS INTEGER), CAST(vt0.c0 AS TEXT), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, (((vt0.c0))==((vt0.c0))), (((vt0.c0, vt0.c0, '953299918')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, x''))))) AND ((((vt0.c0) NOTNULL), vt0.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (~ (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)>=(vt0.c0)), (NOT (vt0.c0))))) ASC  NULLS LAST, CAST(((vt0.c0)&(vt0.c0)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER)) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)==(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, 0.5144216398848354, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0xffffffff925cf944)), CAST(vt0.c0 AS INTEGER), CAST(vt0.c0 AS TEXT), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, (((vt0.c0))==((vt0.c0))), (((vt0.c0, vt0.c0, '953299918')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, x''))))) AND ((((vt0.c0) NOTNULL), vt0.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (~ (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)>=(vt0.c0)), (NOT (vt0.c0))))) ASC  NULLS LAST, CAST(((vt0.c0)&(vt0.c0)) AS NUMERIC) DESC);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)==(vt0.c0))))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, 0.5144216398848354, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0Xffffffff925cf944)), CAST(vt0.c0 AS INTEGER), CAST(vt0.c0 AS TEXT), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, (((vt0.c0))==((vt0.c0))), (((vt0.c0, vt0.c0, '953299918')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, x''))))) AND ((((vt0.c0) NOTNULL), vt0.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (~ (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)>=(vt0.c0)), (NOT (vt0.c0))))) ASC  NULLS LAST, CAST(((vt0.c0)&(vt0.c0)) AS NUMERIC) DESC;
SELECT ALL * FROM vt0 FULL OUTER JOIN t1 ON t1.c0 WHERE ((((t1.c0, x'4d9c', '')) BETWEEN (((((t1.c0))>((t1.c0))), ((((((((NULL)AND(vt0.c0)))OR(vt0.c0)))AND(x'')))AND(vt0.c0)), CAST(vt0.c0 AS INTEGER))) AND ((t1.c0, 0.02089765671487065, ((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((t1.c0, x'4d9c', '')) BETWEEN (((((t1.c0))>((t1.c0))), ((((((((NULL)AND(vt0.c0)))OR(vt0.c0)))AND(x'')))AND(vt0.c0)), CAST(vt0.c0 AS INTEGER))) AND ((t1.c0, 0.02089765671487065, ((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON t1.c0);
SELECT ALL * FROM vt0 FULL OUTER JOIN t1 ON t1.c0 WHERE ((((t1.c0, x'4d9c', '')) BETWEEN (((((t1.c0))>((t1.c0))), ((((((((NULL)AND(vt0.c0)))OR(vt0.c0)))AND(x'')))AND(vt0.c0)), CAST(vt0.c0 AS INTEGER))) AND ((t1.c0, 0.02089765671487065, ((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((t1.c0, x'4d9c', '')) BETWEEN (((((t1.c0))>((t1.c0))), ((((((((NULL)AND(vt0.c0)))OR(vt0.c0)))AND(x'')))AND(vt0.c0)), CAST(vt0.c0 AS INTEGER))) AND ((t1.c0, 0.02089765671487065, ((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON t1.c0);
SELECT ALL * FROM vt0 FULL OUTER JOIN t1 ON t1.c0 WHERE ((((t1.c0, x'4d9c', '')) BETWEEN (((((t1.c0))>((t1.c0))), ((((((((NULL)AND(vt0.c0)))OR(vt0.c0)))AND(x'')))AND(vt0.c0)), CAST(vt0.c0 AS INTEGER))) AND ((t1.c0, 0.02089765671487065, ((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT ALL * FROM rt0, vt0, t1, t0 WHERE ((((~ (rt0.c2)))IS('-1382157612')));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c2)))IS('-1382157612'))) IS TRUE)  as count FROM rt0, vt0, t1, t0);
SELECT ALL * FROM rt0, vt0, t1, t0 WHERE ((((~ (rt0.c2)))IS('-1382157612')));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c2)))IS('-1382157612'))) IS TRUE)  as count FROM rt0, vt0, t1, t0);
SELECT ALL * FROM rt0, vt0, t1, t0 WHERE ((((~ (rt0.c2)))IS('-1382157612')));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((rt0.c1, rt0.c3, rt0.c2)) BETWEEN ((CAST(t0.c0 AS BLOB), (('-362913527')>>('b/')), ((rt0.c1) IS FALSE))) AND ((((t0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)), ((rt0.c2)>(rt0.c1)), CASE t0.c0  WHEN t0.c0 THEN '0.4251878604563244' END)))) ORDER BY ((CAST(rt0.c1 AS REAL))<>((NOT (rt0.c1))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c3, rt0.c2)) BETWEEN ((CAST(t0.c0 AS BLOB), (('-362913527')>>('b/')), ((rt0.c1) IS FALSE))) AND ((((t0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)), ((rt0.c2)>(rt0.c1)), CASE t0.c0  WHEN t0.c0 THEN '0.4251878604563244' END)))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((CAST(rt0.c1 AS REAL))!=((NOT (rt0.c1)))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((rt0.c1, rt0.c3, rt0.c2)) BETWEEN ((CAST(t0.c0 AS BLOB), (('-362913527')>>('b/')), ((rt0.c1) IS FALSE))) AND ((((t0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)), ((rt0.c2)>(rt0.c1)), CASE t0.c0  WHEN t0.c0 THEN '0.4251878604563244' END)))) ORDER BY ((CAST(rt0.c1 AS REAL))<>((NOT (rt0.c1))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c3, rt0.c2)) BETWEEN ((CAST(t0.c0 AS BLOB), (('-362913527')>>('b/')), ((rt0.c1) IS FALSE))) AND ((((t0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)), ((rt0.c2)>(rt0.c1)), CASE t0.c0  WHEN t0.c0 THEN '0.4251878604563244' END)))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((CAST(rt0.c1 AS REAL))!=((NOT (rt0.c1)))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((rt0.c1, rt0.c3, rt0.c2)) BETWEEN ((CAST(t0.c0 AS BLOB), (('-362913527')>>('b/')), ((rt0.c1) IS FALSE))) AND ((((t0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)), ((rt0.c2)>(rt0.c1)), CASE t0.c0  WHEN t0.c0 THEN '0.4251878604563244' END)))) ORDER BY ((CAST(rt0.c1 AS REAL))<>((NOT (rt0.c1))));
SELECT COUNT(*) FROM rt0, t0, vt0 RIGHT OUTER JOIN t1 ON (((rt0.c3 COLLATE BINARY))>=((t0.c0))) WHERE (rt0.c3) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, t0, vt0 RIGHT OUTER JOIN t1 ON (((rt0.c3 COLLATE BINARY))>=((t0.c0))) ORDER BY NULL DESC);
SELECT COUNT(*) FROM rt0, t0, vt0 RIGHT OUTER JOIN t1 ON (((rt0.c3 COLLATE BINARY))>=((t0.c0))) WHERE (rt0.c3) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, t0, vt0 RIGHT OUTER JOIN t1 ON (((rt0.c3 COLLATE BINARY))>=((t0.c0))) ORDER BY NULL DESC);
SELECT COUNT(*) FROM rt0, t0, vt0 RIGHT OUTER JOIN t1 ON (((rt0.c3 COLLATE BINARY))>=((t0.c0))) WHERE (rt0.c3) ORDER BY NULL DESC;
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0)))) ISNULL)) ORDER BY (- ((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0)))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY (- ((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0)))) ISNULL)) ORDER BY (- ((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0)))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY (- ((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0)))) ISNULL)) ORDER BY (- ((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))))  NULLS FIRST;
SELECT ALL * FROM t0 INDEXED BY i82, rt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 INDEXED BY i82, rt0);
SELECT ALL * FROM t0 INDEXED BY i82, rt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 INDEXED BY i82, rt0);
SELECT COUNT(*) FROM vt0 NOT INDEXED, rt0, t1, t0 WHERE (((NULL)>>((((rt0.c0)) NOT BETWEEN ((t1.c0)) AND ((rt0.c1)))))) ORDER BY GLOB((rt0.c0 IN ()), ((((vt0.c0)AND(rt0.c2)))OR('-1266369081'))) ASC  NULLS LAST, PRINTF(0.5615260255807338) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>>((((rt0.c0)) NOT BETWEEN ((t1.c0)) AND ((rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0, t1, t0 ORDER BY GLOB((rt0.c0 IN ()), ((((vt0.c0)AND(rt0.c2)))OR('-1266369081'))) ASC  NULLS LAST, PRINTF(0.5615260255807338) ASC);
SELECT COUNT(*) FROM vt0 NOT INDEXED, rt0, t1, t0 WHERE (((NULL)>>((((rt0.c0)) NOT BETWEEN ((t1.c0)) AND ((rt0.c1)))))) ORDER BY GLOB((rt0.c0 IN ()), ((((vt0.c0)AND(rt0.c2)))OR('-1266369081'))) ASC  NULLS LAST, PRINTF(0.5615260255807338) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>>((((rt0.c0)) NOT BETWEEN ((t1.c0)) AND ((rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0, t1, t0 ORDER BY GLOB((rt0.c0 IN ()), ((((vt0.c0)AND(rt0.c2)))OR('-1266369081'))) ASC  NULLS LAST, PRINTF(0.5615260255807338) ASC);
SELECT COUNT(*) FROM vt0 NOT INDEXED, rt0, t1, t0 WHERE (((NULL)>>((((rt0.c0)) NOT BETWEEN ((t1.c0)) AND ((rt0.c1)))))) ORDER BY GLOB((rt0.c0 IN ()), ((((vt0.c0)AND(rt0.c2)))OR('-1266369081'))) ASC  NULLS LAST, PRINTF(0.5615260255807338) ASC;
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END AS BLOB)) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(rt0.c3))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END AS BLOB)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(rt0.c3))) NOT NULL));
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END AS BLOB)) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(rt0.c3))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END AS BLOB)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(rt0.c3))) NOT NULL));
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END AS BLOB)) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(rt0.c3))) NOT NULL);
SELECT COUNT(*) FROM t1, rt0, vt0 WHERE ((((((t1.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))))=((rt0.c3 IN (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))))==((rt0.c3 IN (rt0.c1))))) IS TRUE)  as count FROM t1, rt0, vt0);
SELECT COUNT(*) FROM t1, rt0, vt0 WHERE ((((((t1.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))))=((rt0.c3 IN (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))))==((rt0.c3 IN (rt0.c1))))) IS TRUE)  as count FROM t1, rt0, vt0);
SELECT COUNT(*) FROM t1, rt0, vt0 WHERE ((((((t1.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))))=((rt0.c3 IN (rt0.c1)))));
SELECT ALL * FROM vt0, t0, rt0, t1 WHERE (CASE rt0.c0  WHEN ((((t1.c0)AND(t1.c0)))OR(rt0.c3)) THEN ((0.6578194985977219) NOTNULL) ELSE ((((rt0.c2)AND(rt0.c1)))AND(t0.c0)) END) ORDER BY t0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN ((((t1.c0)AND(t1.c0)))OR(rt0.c3)) THEN ((0.6578194985977219) NOTNULL) ELSE ((((rt0.c2)AND(rt0.c1)))AND(t0.c0)) END) IS TRUE)  as count FROM vt0, t0, rt0, t1 ORDER BY t0.c0 ASC);
SELECT ALL * FROM vt0, t0, rt0, t1 WHERE (CASE rt0.c0  WHEN ((((t1.c0)AND(t1.c0)))OR(rt0.c3)) THEN ((0.6578194985977219) NOTNULL) ELSE ((((rt0.c2)AND(rt0.c1)))AND(t0.c0)) END) ORDER BY t0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN ((((t1.c0)AND(t1.c0)))OR(rt0.c3)) THEN ((0.6578194985977219) NOTNULL) ELSE ((((rt0.c2)AND(rt0.c1)))AND(t0.c0)) END) IS TRUE)  as count FROM vt0, t0, rt0, t1 ORDER BY t0.c0 ASC);
SELECT ALL * FROM vt0, t0, rt0, t1 WHERE (CASE rt0.c0  WHEN ((((t1.c0)AND(t1.c0)))OR(rt0.c3)) THEN ((0.6578194985977219) NOTNULL) ELSE ((((rt0.c2)AND(rt0.c1)))AND(t0.c0)) END) ORDER BY t0.c0 ASC;
SELECT COUNT(*) FROM t0, t1 WHERE (((NULLIF(t1.c0, t1.c0)) NOT BETWEEN (CASE WHEN t0.c0 THEN t1.c0 ELSE t1.c0 END) AND (CASE t1.c0  WHEN t1.c0 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(t1.c0, t1.c0)) NOT BETWEEN (CASE WHEN t0.c0 THEN t1.c0 ELSE t1.c0 END) AND (CASE t1.c0  WHEN t1.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t0, t1);
SELECT COUNT(*) FROM t0, t1 WHERE (((NULLIF(t1.c0, t1.c0)) NOT BETWEEN (CASE WHEN t0.c0 THEN t1.c0 ELSE t1.c0 END) AND (CASE t1.c0  WHEN t1.c0 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(t1.c0, t1.c0)) NOT BETWEEN (CASE WHEN t0.c0 THEN t1.c0 ELSE t1.c0 END) AND (CASE t1.c0  WHEN t1.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t0, t1);
SELECT COUNT(*) FROM t0, t1 WHERE (((NULLIF(t1.c0, t1.c0)) NOT BETWEEN (CASE WHEN t0.c0 THEN t1.c0 ELSE t1.c0 END) AND (CASE t1.c0  WHEN t1.c0 THEN t0.c0 END)));
SELECT ALL * FROM t1, vt0, t0 WHERE ((+ (((vt0.c0) NOTNULL)))) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM t1, vt0, t0 ORDER BY t0.c0);
SELECT ALL * FROM t1, vt0, t0 WHERE ((+ (((vt0.c0) NOTNULL)))) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM t1, vt0, t0 ORDER BY t0.c0);
SELECT ALL * FROM t1, vt0, t0 WHERE ((+ (((vt0.c0) NOTNULL)))) ORDER BY t0.c0;
SELECT COUNT(*) FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (NULL);
SELECT * FROM t1, t0, rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (t0.c0)))IS NOT(x''))) ORDER BY ((((((t0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))OR(SQLITE_VERSION())))AND(PRINTF(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c0) AND (t0.c0)))IS NOT(x''))) IS TRUE)  as count FROM t1 NOT INDEXED, t0, rt0 ORDER BY ((((((t0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))OR(SQLITE_VERSION())))AND(PRINTF(rt0.c1))));
SELECT * FROM t1, t0, rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (t0.c0)))IS NOT(x''))) ORDER BY ((((((t0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))OR(SQLITE_VERSION())))AND(PRINTF(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c0) AND (t0.c0)))IS NOT(x''))) IS TRUE)  as count FROM t1 NOT INDEXED, t0, rt0 ORDER BY ((((((t0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))OR(SQLITE_VERSION())))AND(PRINTF(rt0.c1))));
SELECT * FROM t1, t0, rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (t0.c0)))IS NOT(x''))) ORDER BY ((((((t0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))OR(SQLITE_VERSION())))AND(PRINTF(rt0.c1)));
SELECT COUNT(*) FROM t1, vt0, t0, rt0 WHERE ((+ (t0.c0)) COLLATE BINARY) ORDER BY '-402585841' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t1, vt0, t0, rt0 ORDER BY '-402585841' DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, vt0, t0, rt0 WHERE ((+ (t0.c0)) COLLATE BINARY) ORDER BY '-402585841' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t1, vt0, t0, rt0 ORDER BY '-402585841' DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, vt0, t0, rt0 WHERE ((+ (t0.c0)) COLLATE BINARY) ORDER BY '-402585841' DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))GLOB(((rt0.c3) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))GLOB(((rt0.c3) NOTNULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))GLOB(((rt0.c3) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))GLOB(((rt0.c3) NOTNULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))GLOB(((rt0.c3) NOTNULL))));
SELECT ALL COUNT(*) FROM vt0, t1, rt0, t0 WHERE (-1075376316);
SELECT SUM(count) FROM (SELECT ((-1075376316) IS TRUE)  as count FROM vt0, t1, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, t1, rt0, t0 WHERE (-1075376316);
SELECT SUM(count) FROM (SELECT ((-1075376316) IS TRUE)  as count FROM vt0, t1, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, t1, rt0, t0 WHERE (-1075376316);
SELECT * FROM rt0 INNER JOIN vt0 ON (- (SQLITE_SOURCE_ID())) WHERE (((NULL) NOT BETWEEN (((rt0.c2) IS FALSE)) AND ((((rt0.c1))<((rt0.c2)))))) ORDER BY ((((rt0.c0)!=(vt0.c0))) NOT BETWEEN (x'') AND ((+ (rt0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN (((rt0.c2) IS FALSE)) AND ((((rt0.c1))<((rt0.c2)))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (- (SQLITE_SOURCE_ID())) ORDER BY ((((rt0.c0)!=(vt0.c0))) NOT BETWEEN (x'') AND ((+ (rt0.c3))))  NULLS LAST);
SELECT * FROM rt0 INNER JOIN vt0 ON (- (SQLITE_SOURCE_ID())) WHERE (((NULL) NOT BETWEEN (((rt0.c2) IS FALSE)) AND ((((rt0.c1))<((rt0.c2)))))) ORDER BY ((((rt0.c0)!=(vt0.c0))) NOT BETWEEN (x'') AND ((+ (rt0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN (((rt0.c2) IS FALSE)) AND ((((rt0.c1))<((rt0.c2)))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (- (SQLITE_SOURCE_ID())) ORDER BY ((((rt0.c0)!=(vt0.c0))) NOT BETWEEN (x'') AND ((+ (rt0.c3))))  NULLS LAST);
SELECT * FROM rt0 INNER JOIN vt0 ON (- (SQLITE_SOURCE_ID())) WHERE (((NULL) NOT BETWEEN (((rt0.c2) IS FALSE)) AND ((((rt0.c1))<((rt0.c2)))))) ORDER BY ((((rt0.c0)!=(vt0.c0))) NOT BETWEEN (x'') AND ((+ (rt0.c3))))  NULLS LAST;
SELECT * FROM vt0, t1 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 WHEN t1.c0 THEN 0x6e003af8 ELSE t1.c0 END)<<((~ (t1.c0))))) ORDER BY ((vt0.c0 COLLATE BINARY)+((vt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 WHEN t1.c0 THEN 0x6e003af8 ELSE t1.c0 END)<<((~ (t1.c0))))) IS TRUE)  as count FROM vt0, t1 ORDER BY ((vt0.c0 COLLATE BINARY)+((vt0.c0 IN ())))  NULLS FIRST);
SELECT * FROM vt0, t1 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 WHEN t1.c0 THEN 0x6e003af8 ELSE t1.c0 END)<<((~ (t1.c0))))) ORDER BY ((vt0.c0 COLLATE BINARY)+((vt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 WHEN t1.c0 THEN 0x6e003af8 ELSE t1.c0 END)<<((~ (t1.c0))))) IS TRUE)  as count FROM vt0, t1 ORDER BY ((vt0.c0 COLLATE BINARY)+((vt0.c0 IN ())))  NULLS FIRST);
SELECT * FROM vt0, t1 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 WHEN t1.c0 THEN 0x6e003af8 ELSE t1.c0 END)<<((~ (t1.c0))))) ORDER BY ((vt0.c0 COLLATE BINARY)+((vt0.c0 IN ())))  NULLS FIRST;
SELECT COUNT(*) FROM t1, rt0 WHERE ((rt0.c1 COLLATE BINARY IN ())) ORDER BY ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((t1.c0))) IN ());
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 COLLATE BINARY IN ())) IS TRUE)  as count FROM t1, rt0 ORDER BY ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((t1.c0))) IN ()));
SELECT COUNT(*) FROM t1, rt0 WHERE ((rt0.c1 COLLATE BINARY IN ())) ORDER BY ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((t1.c0))) IN ());
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 COLLATE BINARY IN ())) IS TRUE)  as count FROM t1, rt0 ORDER BY ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((t1.c0))) IN ()));
SELECT COUNT(*) FROM t1, rt0 WHERE ((rt0.c1 COLLATE BINARY IN ())) ORDER BY ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((t1.c0))) IN ());
SELECT * FROM t0, rt0, t1 CROSS JOIN vt0 ON (- (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)) WHERE (((((((t0.c0, vt0.c0, t1.c0))>((rt0.c1, rt0.c1, t0.c0)))))!=(((rt0.c1 IN ())))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0, vt0.c0, t1.c0))>((rt0.c1, rt0.c1, t0.c0)))))<>(((rt0.c1 IN ()))))) IS TRUE)  as count FROM t0, rt0, t1 CROSS JOIN vt0 ON (- (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT * FROM t0, rt0, t1 CROSS JOIN vt0 ON (- (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)) WHERE (((((((t0.c0, vt0.c0, t1.c0))>((rt0.c1, rt0.c1, t0.c0)))))!=(((rt0.c1 IN ())))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0, vt0.c0, t1.c0))>((rt0.c1, rt0.c1, t0.c0)))))<>(((rt0.c1 IN ()))))) IS TRUE)  as count FROM t0, rt0, t1 CROSS JOIN vt0 ON (- (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT * FROM t0, rt0, t1 CROSS JOIN vt0 ON (- (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)) WHERE (((((((t0.c0, vt0.c0, t1.c0))>((rt0.c1, rt0.c1, t0.c0)))))!=(((rt0.c1 IN ())))));
SELECT ALL COUNT(*) FROM t1, t0, vt0, rt0 NOT INDEXED WHERE (((x'') IS FALSE));
SELECT SUM(count) FROM (SELECT ((((x'') IS FALSE)) IS TRUE)  as count FROM t1, t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t1, t0, vt0, rt0 NOT INDEXED WHERE (((x'') IS FALSE));
SELECT SUM(count) FROM (SELECT ((((x'') IS FALSE)) IS TRUE)  as count FROM t1, t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t1, t0, vt0, rt0 NOT INDEXED WHERE (((x'') IS FALSE));
SELECT ALL COUNT(*) FROM t0, t1 WHERE ((((((('1147737547')AND(t0.c0)))AND(t0.c0))) ISNULL)) ORDER BY (((('qq6.c|Zc#')AND(((t0.c0) ISNULL))))OR(((t0.c0) NOT BETWEEN (t1.c0) AND (0.9893095703602779)))) ASC  NULLS LAST, (t0.c0 COLLATE RTRIM IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((('1147737547')AND(t0.c0)))AND(t0.c0))) ISNULL)) IS TRUE)  as count FROM t0, t1 ORDER BY (((('qq6.c|Zc#')AND(((t0.c0) ISNULL))))OR(((t0.c0) NOT BETWEEN (t1.c0) AND (0.9893095703602779)))) ASC  NULLS LAST, (t0.c0 COLLATE RTRIM IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, t1 WHERE ((((((('1147737547')AND(t0.c0)))AND(t0.c0))) ISNULL)) ORDER BY (((('qq6.c|Zc#')AND(((t0.c0) ISNULL))))OR(((t0.c0) NOT BETWEEN (t1.c0) AND (0.9893095703602779)))) ASC  NULLS LAST, (t0.c0 COLLATE RTRIM IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((('1147737547')AND(t0.c0)))AND(t0.c0))) ISNULL)) IS TRUE)  as count FROM t0, t1 ORDER BY (((('qq6.c|Zc#')AND(((t0.c0) ISNULL))))OR(((t0.c0) NOT BETWEEN (t1.c0) AND (0.9893095703602779)))) ASC  NULLS LAST, (t0.c0 COLLATE RTRIM IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, t1 WHERE ((((((('1147737547')AND(t0.c0)))AND(t0.c0))) ISNULL)) ORDER BY (((('qq6.c|Zc#')AND(((t0.c0) ISNULL))))OR(((t0.c0) NOT BETWEEN (t1.c0) AND (0.9893095703602779)))) ASC  NULLS LAST, (t0.c0 COLLATE RTRIM IN ()) DESC  NULLS LAST;
SELECT ALL * FROM vt0, t1, t0, rt0 WHERE (((rt0.c0 COLLATE RTRIM)>=('-101195939')));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM)>=('-101195939'))) IS TRUE)  as count FROM vt0 NOT INDEXED, t1, t0, rt0);
SELECT ALL * FROM vt0, t1, t0, rt0 WHERE (((rt0.c0 COLLATE RTRIM)>=('-101195939')));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM)>=('-101195939'))) IS TRUE)  as count FROM vt0 NOT INDEXED, t1, t0, rt0);
SELECT ALL * FROM vt0, t1, t0, rt0 WHERE (((rt0.c0 COLLATE RTRIM)>=('-101195939')));
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((((t1.c0))<>((t1.c0))) IN ())) ORDER BY (NOT (vt0.c0 COLLATE BINARY)), ((((vt0.c0) IS TRUE))+(((t1.c0)==(t1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0))!=((t1.c0))) IN ())) IS TRUE)  as count FROM vt0, t1 ORDER BY (NOT (vt0.c0 COLLATE BINARY)), ((((vt0.c0) IS TRUE))+(((t1.c0)=(t1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((((t1.c0))<>((t1.c0))) IN ())) ORDER BY (NOT (vt0.c0 COLLATE BINARY)), ((((vt0.c0) IS TRUE))+(((t1.c0)==(t1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0))!=((t1.c0))) IN ())) IS TRUE)  as count FROM vt0, t1 ORDER BY (NOT (vt0.c0 COLLATE BINARY)), ((((vt0.c0) IS TRUE))+(((t1.c0)=(t1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((((t1.c0))<>((t1.c0))) IN ())) ORDER BY (NOT (vt0.c0 COLLATE BINARY)), ((((vt0.c0) IS TRUE))+(((t1.c0)==(t1.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, rt0, vt0, t0 WHERE (t1.c0) ORDER BY ((CAST('' AS NUMERIC))<<((rt0.c2 IN ()))), (- (vt0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1, rt0, vt0, t0 ORDER BY ((CAST('' AS NUMERIC))<<((rt0.c2 IN ()))), (- (vt0.c0 COLLATE BINARY))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt0, vt0, t0 WHERE (t1.c0) ORDER BY ((CAST('' AS NUMERIC))<<((rt0.c2 IN ()))), (- (vt0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1, rt0, vt0, t0 ORDER BY ((CAST('' AS NUMERIC))<<((rt0.c2 IN ()))), (- (vt0.c0 COLLATE BINARY))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt0, vt0, t0 WHERE (t1.c0) ORDER BY ((CAST('' AS NUMERIC))<<((rt0.c2 IN ()))), (- (vt0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0, rt0, t1 WHERE (CASE (rt0.c3 IN ('1091563491', x'158e'))  WHEN (((rt0.c2, rt0.c1, t0.c0, rt0.c1, 1.283766816E9))!=((t0.c0, rt0.c3, rt0.c0, rt0.c2, rt0.c3))) THEN ((((((((rt0.c2)AND(rt0.c2)))OR('691642431')))AND(rt0.c0)))AND(rt0.c3)) WHEN CAST(rt0.c2 AS REAL) THEN ROUND(rt0.c1, t0.c0) WHEN '%fY''' THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END WHEN ((t0.c0)=(t1.c0)) THEN x'' WHEN (((vt0.c0, t0.c0, vt0.c0))>((rt0.c0, t0.c0, t1.c0))) THEN CAST(t0.c0 AS TEXT) END) ORDER BY ((1659445176)%((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c3 IN ('1091563491', x'158e'))  WHEN (((rt0.c2, rt0.c1, t0.c0, rt0.c1, 1.283766816E9))<>((t0.c0, rt0.c3, rt0.c0, rt0.c2, rt0.c3))) THEN ((((((((rt0.c2)AND(rt0.c2)))OR('691642431')))AND(rt0.c0)))AND(rt0.c3)) WHEN CAST(rt0.c2 AS REAL) THEN ROUND(rt0.c1, t0.c0) WHEN '%fY''' THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END WHEN ((t0.c0)==(t1.c0)) THEN x'' WHEN (((vt0.c0, t0.c0, vt0.c0))>((rt0.c0, t0.c0, t1.c0))) THEN CAST(t0.c0 AS TEXT) END) IS TRUE)  as count FROM t0, vt0, rt0, t1 ORDER BY ((1659445176)%((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, rt0, t1 WHERE (CASE (rt0.c3 IN ('1091563491', x'158e'))  WHEN (((rt0.c2, rt0.c1, t0.c0, rt0.c1, 1.283766816E9))!=((t0.c0, rt0.c3, rt0.c0, rt0.c2, rt0.c3))) THEN ((((((((rt0.c2)AND(rt0.c2)))OR('691642431')))AND(rt0.c0)))AND(rt0.c3)) WHEN CAST(rt0.c2 AS REAL) THEN ROUND(rt0.c1, t0.c0) WHEN '%fY''' THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END WHEN ((t0.c0)=(t1.c0)) THEN x'' WHEN (((vt0.c0, t0.c0, vt0.c0))>((rt0.c0, t0.c0, t1.c0))) THEN CAST(t0.c0 AS TEXT) END) ORDER BY ((1659445176)%((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c3 IN ('1091563491', x'158e'))  WHEN (((rt0.c2, rt0.c1, t0.c0, rt0.c1, 1.283766816E9))<>((t0.c0, rt0.c3, rt0.c0, rt0.c2, rt0.c3))) THEN ((((((((rt0.c2)AND(rt0.c2)))OR('691642431')))AND(rt0.c0)))AND(rt0.c3)) WHEN CAST(rt0.c2 AS REAL) THEN ROUND(rt0.c1, t0.c0) WHEN '%fY''' THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END WHEN ((t0.c0)==(t1.c0)) THEN x'' WHEN (((vt0.c0, t0.c0, vt0.c0))>((rt0.c0, t0.c0, t1.c0))) THEN CAST(t0.c0 AS TEXT) END) IS TRUE)  as count FROM t0, vt0, rt0, t1 ORDER BY ((1659445176)%((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, rt0, t1 WHERE (CASE (rt0.c3 IN ('1091563491', x'158e'))  WHEN (((rt0.c2, rt0.c1, t0.c0, rt0.c1, 1.283766816E9))!=((t0.c0, rt0.c3, rt0.c0, rt0.c2, rt0.c3))) THEN ((((((((rt0.c2)AND(rt0.c2)))OR('691642431')))AND(rt0.c0)))AND(rt0.c3)) WHEN CAST(rt0.c2 AS REAL) THEN ROUND(rt0.c1, t0.c0) WHEN '%fY''' THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END WHEN ((t0.c0)=(t1.c0)) THEN x'' WHEN (((vt0.c0, t0.c0, vt0.c0))>((rt0.c0, t0.c0, t1.c0))) THEN CAST(t0.c0 AS TEXT) END) ORDER BY ((1659445176)%((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c1)<=(rt0.c2)) THEN x'' WHEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c2)) THEN CAST(0.8226180055363665 AS BLOB) WHEN rt0.c3 COLLATE BINARY THEN ((rt0.c0)=(rt0.c1)) ELSE ((rt0.c3)<=(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1)<=(rt0.c2)) THEN x'' WHEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c2)) THEN CAST(0.8226180055363665 AS BLOB) WHEN rt0.c3 COLLATE BINARY THEN ((rt0.c0)==(rt0.c1)) ELSE ((rt0.c3)<=(rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c1)<=(rt0.c2)) THEN x'' WHEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c2)) THEN CAST(0.8226180055363665 AS BLOB) WHEN rt0.c3 COLLATE BINARY THEN ((rt0.c0)=(rt0.c1)) ELSE ((rt0.c3)<=(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1)<=(rt0.c2)) THEN x'' WHEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c2)) THEN CAST(0.8226180055363665 AS BLOB) WHEN rt0.c3 COLLATE BINARY THEN ((rt0.c0)==(rt0.c1)) ELSE ((rt0.c3)<=(rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c1)<=(rt0.c2)) THEN x'' WHEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c2)) THEN CAST(0.8226180055363665 AS BLOB) WHEN rt0.c3 COLLATE BINARY THEN ((rt0.c0)=(rt0.c1)) ELSE ((rt0.c3)<=(rt0.c2)) END);
SELECT COUNT(*) FROM t1 INNER JOIN rt0 ON ((t1.c0)<<(((rt0.c3)%(rt0.c3)))) FULL OUTER JOIN t0 ON ((((((rt0.c0)/(rt0.c1)))AND((+ (t1.c0)))))OR(ROUND(t1.c0, t0.c0))) WHERE ((((((rt0.c3))>((rt0.c2))))IS NOT(((rt0.c1)>(t1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3))>((rt0.c2))))IS NOT(((rt0.c1)>(t1.c0))))) IS TRUE)  as count FROM t1 INNER JOIN rt0 ON ((t1.c0)<<(((rt0.c3)%(rt0.c3)))) FULL OUTER JOIN t0 ON ((((((rt0.c0)/(rt0.c1)))AND((+ (t1.c0)))))OR(ROUND(t1.c0, t0.c0))));
SELECT COUNT(*) FROM t1 INNER JOIN rt0 ON ((t1.c0)<<(((rt0.c3)%(rt0.c3)))) FULL OUTER JOIN t0 ON ((((((rt0.c0)/(rt0.c1)))AND((+ (t1.c0)))))OR(ROUND(t1.c0, t0.c0))) WHERE ((((((rt0.c3))>((rt0.c2))))IS NOT(((rt0.c1)>(t1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3))>((rt0.c2))))IS NOT(((rt0.c1)>(t1.c0))))) IS TRUE)  as count FROM t1 INNER JOIN rt0 ON ((t1.c0)<<(((rt0.c3)%(rt0.c3)))) FULL OUTER JOIN t0 ON ((((((rt0.c0)/(rt0.c1)))AND((+ (t1.c0)))))OR(ROUND(t1.c0, t0.c0))));
SELECT COUNT(*) FROM t1 INNER JOIN rt0 ON ((t1.c0)<<(((rt0.c3)%(rt0.c3)))) FULL OUTER JOIN t0 ON ((((((rt0.c0)/(rt0.c1)))AND((+ (t1.c0)))))OR(ROUND(t1.c0, t0.c0))) WHERE ((((((rt0.c3))>((rt0.c2))))IS NOT(((rt0.c1)>(t1.c0)))));
SELECT * FROM rt0 WHERE (((CASE WHEN '' THEN -1500285225 ELSE rt0.c2 END)/((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1)))))) ORDER BY 0Xfffffffff740db25 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN '' THEN -1500285225 ELSE rt0.c2 END)/((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY 0Xfffffffff740db25 ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((CASE WHEN '' THEN -1500285225 ELSE rt0.c2 END)/((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1)))))) ORDER BY 0Xfffffffff740db25 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN '' THEN -1500285225 ELSE rt0.c2 END)/((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY 0Xfffffffff740db25 ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((CASE WHEN '' THEN -1500285225 ELSE rt0.c2 END)/((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1)))))) ORDER BY 0Xfffffffff740db25 ASC  NULLS FIRST;
SELECT ALL * FROM rt0, t0, vt0 WHERE ((((rt0.c2, ((rt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c0)), ((rt0.c0)OR(t0.c0))))!=((((('1033234481')) BETWEEN ((rt0.c0)) AND ((rt0.c0))), ((t0.c0) IS FALSE), (NOT (rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, ((rt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c0)), ((rt0.c0)OR(t0.c0))))!=((((('1033234481')) BETWEEN ((rt0.c0)) AND ((rt0.c0))), ((t0.c0) IS FALSE), (NOT (rt0.c2)))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((((rt0.c2, ((rt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c0)), ((rt0.c0)OR(t0.c0))))!=((((('1033234481')) BETWEEN ((rt0.c0)) AND ((rt0.c0))), ((t0.c0) IS FALSE), (NOT (rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, ((rt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c0)), ((rt0.c0)OR(t0.c0))))!=((((('1033234481')) BETWEEN ((rt0.c0)) AND ((rt0.c0))), ((t0.c0) IS FALSE), (NOT (rt0.c2)))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((((rt0.c2, ((rt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c0)), ((rt0.c0)OR(t0.c0))))!=((((('1033234481')) BETWEEN ((rt0.c0)) AND ((rt0.c0))), ((t0.c0) IS FALSE), (NOT (rt0.c2))))));
SELECT ALL COUNT(*) FROM t1 WHERE (-52323393);
SELECT SUM(count) FROM (SELECT ((-52323393) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (-52323393);
SELECT SUM(count) FROM (SELECT ((-52323393) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (-52323393);
SELECT * FROM vt0, t0 WHERE (((vt0.c0)AND(t0.c0))) ORDER BY TRIM(((t0.c0)>=(vt0.c0)), ((t0.c0) NOTNULL))  NULLS FIRST, ((UNLIKELY(DISTINCT vt0.c0)) IS FALSE) DESC  NULLS FIRST, CASE (~ (x'3f1c'))  WHEN CAST(t0.c0 AS TEXT) THEN LTRIM(vt0.c0, vt0.c0) ELSE ((NULL) IS FALSE) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)AND(t0.c0))) IS TRUE)  as count FROM vt0, t0 ORDER BY TRIM(((t0.c0)>=(vt0.c0)), ((t0.c0) NOTNULL))  NULLS FIRST, ((UNLIKELY(DISTINCT vt0.c0)) IS FALSE) DESC  NULLS FIRST, CASE (~ (x'3f1c'))  WHEN CAST(t0.c0 AS TEXT) THEN LTRIM(vt0.c0, vt0.c0) ELSE ((NULL) IS FALSE) END ASC  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (((vt0.c0)AND(t0.c0))) ORDER BY TRIM(((t0.c0)>=(vt0.c0)), ((t0.c0) NOTNULL))  NULLS FIRST, ((UNLIKELY(DISTINCT vt0.c0)) IS FALSE) DESC  NULLS FIRST, CASE (~ (x'3f1c'))  WHEN CAST(t0.c0 AS TEXT) THEN LTRIM(vt0.c0, vt0.c0) ELSE ((NULL) IS FALSE) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)AND(t0.c0))) IS TRUE)  as count FROM vt0, t0 ORDER BY TRIM(((t0.c0)>=(vt0.c0)), ((t0.c0) NOTNULL))  NULLS FIRST, ((UNLIKELY(DISTINCT vt0.c0)) IS FALSE) DESC  NULLS FIRST, CASE (~ (x'3f1c'))  WHEN CAST(t0.c0 AS TEXT) THEN LTRIM(vt0.c0, vt0.c0) ELSE ((NULL) IS FALSE) END ASC  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (((vt0.c0)AND(t0.c0))) ORDER BY TRIM(((t0.c0)>=(vt0.c0)), ((t0.c0) NOTNULL))  NULLS FIRST, ((UNLIKELY(DISTINCT vt0.c0)) IS FALSE) DESC  NULLS FIRST, CASE (~ (x'3f1c'))  WHEN CAST(t0.c0 AS TEXT) THEN LTRIM(vt0.c0, vt0.c0) ELSE ((NULL) IS FALSE) END ASC  NULLS LAST;
SELECT ALL * FROM t0, vt0, t1 WHERE ((((t1.c0, t0.c0, t0.c0))!=((vt0.c0, t1.c0, t0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((t1.c0, t0.c0, t0.c0))<>((vt0.c0, t1.c0, t0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, t1);
SELECT ALL * FROM t0, vt0, t1 WHERE ((((t1.c0, t0.c0, t0.c0))!=((vt0.c0, t1.c0, t0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((t1.c0, t0.c0, t0.c0))<>((vt0.c0, t1.c0, t0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, t1);
SELECT ALL * FROM t0, vt0, t1 WHERE ((((t1.c0, t0.c0, t0.c0))!=((vt0.c0, t1.c0, t0.c0))) COLLATE RTRIM);
SELECT * FROM rt0, t1 WHERE ((((rt0.c3) BETWEEN (0.8709352493260634) AND (rt0.c0)) IN (CAST(rt0.c1 AS REAL)))) ORDER BY (((((((((((x'')) BETWEEN ((t1.c0)) AND ((rt0.c0))))OR((rt0.c2 IN ()))))AND((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((0.17663987678761972))))))AND((+ (rt0.c1)))))OR((rt0.c1 IN (rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3) BETWEEN (0.8709352493260634) AND (rt0.c0)) IN (CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM rt0, t1 ORDER BY (((((((((((x'')) BETWEEN ((t1.c0)) AND ((rt0.c0))))OR((rt0.c2 IN ()))))AND((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((0.17663987678761972))))))AND((+ (rt0.c1)))))OR((rt0.c1 IN (rt0.c2)))));
SELECT * FROM rt0, t1 WHERE ((((rt0.c3) BETWEEN (0.8709352493260634) AND (rt0.c0)) IN (CAST(rt0.c1 AS REAL)))) ORDER BY (((((((((((x'')) BETWEEN ((t1.c0)) AND ((rt0.c0))))OR((rt0.c2 IN ()))))AND((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((0.17663987678761972))))))AND((+ (rt0.c1)))))OR((rt0.c1 IN (rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3) BETWEEN (0.8709352493260634) AND (rt0.c0)) IN (CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM rt0, t1 ORDER BY (((((((((((x'')) BETWEEN ((t1.c0)) AND ((rt0.c0))))OR((rt0.c2 IN ()))))AND((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((0.17663987678761972))))))AND((+ (rt0.c1)))))OR((rt0.c1 IN (rt0.c2)))));
SELECT * FROM rt0, t1 WHERE ((((rt0.c3) BETWEEN (0.8709352493260634) AND (rt0.c0)) IN (CAST(rt0.c1 AS REAL)))) ORDER BY (((((((((((x'')) BETWEEN ((t1.c0)) AND ((rt0.c0))))OR((rt0.c2 IN ()))))AND((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((0.17663987678761972))))))AND((+ (rt0.c1)))))OR((rt0.c1 IN (rt0.c2))));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (rt0.c1) ORDER BY (((CAST(rt0.c3 AS BLOB)))<=((0.41791649484132054)));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (((CAST(rt0.c3 AS BLOB)))<=((0.41791649484132054))));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (rt0.c1) ORDER BY (((CAST(rt0.c3 AS BLOB)))<=((0.41791649484132054)));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (((CAST(rt0.c3 AS BLOB)))<=((0.41791649484132054))));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (rt0.c1) ORDER BY (((CAST(rt0.c3 AS BLOB)))<=((0.41791649484132054)));
SELECT * FROM t0, t1 WHERE ((((0.34095918361466815))>((0.4676091806804735)))) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((0.34095918361466815))>((0.4676091806804735)))) IS TRUE)  as count FROM t0, t1 ORDER BY x''  NULLS LAST);
SELECT * FROM t0, t1 WHERE ((((0.34095918361466815))>((0.4676091806804735)))) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((0.34095918361466815))>((0.4676091806804735)))) IS TRUE)  as count FROM t0, t1 ORDER BY x''  NULLS LAST);
SELECT * FROM t0, t1 WHERE ((((0.34095918361466815))>((0.4676091806804735)))) ORDER BY x''  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (((CAST(t1.c0 AS BLOB)) NOT NULL)) ORDER BY (NOT ('')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS BLOB)) NOT NULL)) IS TRUE)  as count FROM t1 ORDER BY (NOT ('')) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (((CAST(t1.c0 AS BLOB)) NOT NULL)) ORDER BY (NOT ('')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS BLOB)) NOT NULL)) IS TRUE)  as count FROM t1 ORDER BY (NOT ('')) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (((CAST(t1.c0 AS BLOB)) NOT NULL)) ORDER BY (NOT ('')) ASC  NULLS FIRST;
SELECT * FROM vt0, t1 WHERE (((t1.c0) ISNULL) COLLATE BINARY) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t1.c0) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0, t1 ORDER BY vt0.c0  NULLS LAST);
SELECT * FROM vt0, t1 WHERE (((t1.c0) ISNULL) COLLATE BINARY) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t1.c0) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0, t1 ORDER BY vt0.c0  NULLS LAST);
SELECT * FROM vt0, t1 WHERE (((t1.c0) ISNULL) COLLATE BINARY) ORDER BY vt0.c0  NULLS LAST;
SELECT ALL * FROM t0 INNER JOIN rt0 ON (- (CAST(rt0.c1 AS REAL))) INNER JOIN t1 ON ((vt0.c0)AND((((t1.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))))) FULL OUTER JOIN vt0 ON t0.c0 COLLATE BINARY WHERE (((t0.c0) BETWEEN (rt0.c1) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((t0.c0) BETWEEN (rt0.c1) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0)))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (- (CAST(rt0.c1 AS REAL))) INNER JOIN t1 ON ((vt0.c0)AND((((t1.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))))) FULL OUTER JOIN vt0 ON t0.c0 COLLATE BINARY);
SELECT ALL * FROM t0 INNER JOIN rt0 ON (- (CAST(rt0.c1 AS REAL))) INNER JOIN t1 ON ((vt0.c0)AND((((t1.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))))) FULL OUTER JOIN vt0 ON t0.c0 COLLATE BINARY WHERE (((t0.c0) BETWEEN (rt0.c1) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((t0.c0) BETWEEN (rt0.c1) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0)))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (- (CAST(rt0.c1 AS REAL))) INNER JOIN t1 ON ((vt0.c0)AND((((t1.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))))) FULL OUTER JOIN vt0 ON t0.c0 COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON CAST(0.08618259707932818 AS REAL) INNER JOIN t1 ON (((CAST(976800974 AS INTEGER), CAST(rt0.c1 AS INTEGER), CASE WHEN rt0.c2 THEN t0.c0 END))>=(('8ੂ', (+ (rt0.c2)), (t1.c0 IN ())))) INNER JOIN rt0 ON (((rt0.c1, vt0.c0, rt0.c0)) NOT BETWEEN ((0X28b4613d, (rt0.c0 IN ()), (- (rt0.c1)))) AND (((rt0.c1 IN ()), ((((rt0.c2)OR(vt0.c0)))AND(rt0.c3)), (((('-954953095')AND(t1.c0)))OR(rt0.c3))))) WHERE (NULLIF(DISTINCT NULL, (~ (t0.c0))));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT NULL, (~ (t0.c0)))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON CAST(0.08618259707932818 AS REAL) INNER JOIN t1 ON (((CAST(976800974 AS INTEGER), CAST(rt0.c1 AS INTEGER), CASE WHEN rt0.c2 THEN t0.c0 END))>=(('8ੂ', (+ (rt0.c2)), (t1.c0 IN ())))) INNER JOIN rt0 ON (((rt0.c1, vt0.c0, rt0.c0)) NOT BETWEEN ((0X28b4613d, (rt0.c0 IN ()), (- (rt0.c1)))) AND (((rt0.c1 IN ()), ((((rt0.c2)OR(vt0.c0)))AND(rt0.c3)), (((('-954953095')AND(t1.c0)))OR(rt0.c3))))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON CAST(0.08618259707932818 AS REAL) INNER JOIN t1 ON (((CAST(976800974 AS INTEGER), CAST(rt0.c1 AS INTEGER), CASE WHEN rt0.c2 THEN t0.c0 END))>=(('8ੂ', (+ (rt0.c2)), (t1.c0 IN ())))) INNER JOIN rt0 ON (((rt0.c1, vt0.c0, rt0.c0)) NOT BETWEEN ((0X28b4613d, (rt0.c0 IN ()), (- (rt0.c1)))) AND (((rt0.c1 IN ()), ((((rt0.c2)OR(vt0.c0)))AND(rt0.c3)), (((('-954953095')AND(t1.c0)))OR(rt0.c3))))) WHERE (NULLIF(DISTINCT NULL, (~ (t0.c0))));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT NULL, (~ (t0.c0)))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON CAST(0.08618259707932818 AS REAL) INNER JOIN t1 ON (((CAST(976800974 AS INTEGER), CAST(rt0.c1 AS INTEGER), CASE WHEN rt0.c2 THEN t0.c0 END))>=(('8ੂ', (+ (rt0.c2)), (t1.c0 IN ())))) INNER JOIN rt0 ON (((rt0.c1, vt0.c0, rt0.c0)) NOT BETWEEN ((0X28b4613d, (rt0.c0 IN ()), (- (rt0.c1)))) AND (((rt0.c1 IN ()), ((((rt0.c2)OR(vt0.c0)))AND(rt0.c3)), (((('-954953095')AND(t1.c0)))OR(rt0.c3))))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON CAST(0.08618259707932818 AS REAL) INNER JOIN t1 ON (((CAST(976800974 AS INTEGER), CAST(rt0.c1 AS INTEGER), CASE WHEN rt0.c2 THEN t0.c0 END))>=(('8ੂ', (+ (rt0.c2)), (t1.c0 IN ())))) INNER JOIN rt0 ON (((rt0.c1, vt0.c0, rt0.c0)) NOT BETWEEN ((0X28b4613d, (rt0.c0 IN ()), (- (rt0.c1)))) AND (((rt0.c1 IN ()), ((((rt0.c2)OR(vt0.c0)))AND(rt0.c3)), (((('-954953095')AND(t1.c0)))OR(rt0.c3))))) WHERE (NULLIF(DISTINCT NULL, (~ (t0.c0))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t1 ON (((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)) IN ((- (t0.c0)))) RIGHT OUTER JOIN rt0 ON TRIM(DISTINCT (~ (rt0.c1)), 0.742744655599597) CROSS JOIN t0 ON 'G犘d' WHERE ((((rt0.c2)) NOT BETWEEN (((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0))))) AND ((COALESCE(rt0.c2, 'W蚌M繒21')))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN (((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0))))) AND ((COALESCE(rt0.c2, 'W蚌M繒21'))))) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON (((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)) IN ((- (t0.c0)))) RIGHT OUTER JOIN rt0 ON TRIM(DISTINCT (~ (rt0.c1)), 0.742744655599597) CROSS JOIN t0 ON 'G犘d');
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t1 ON (((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)) IN ((- (t0.c0)))) RIGHT OUTER JOIN rt0 ON TRIM(DISTINCT (~ (rt0.c1)), 0.742744655599597) CROSS JOIN t0 ON 'G犘d' WHERE ((((rt0.c2)) NOT BETWEEN (((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0))))) AND ((COALESCE(rt0.c2, 'W蚌M繒21')))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN (((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0))))) AND ((COALESCE(rt0.c2, 'W蚌M繒21'))))) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON (((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)) IN ((- (t0.c0)))) RIGHT OUTER JOIN rt0 ON TRIM(DISTINCT (~ (rt0.c1)), 0.742744655599597) CROSS JOIN t0 ON 'G犘d');
SELECT ALL * FROM t1, rt0, t0 NATURAL JOIN vt0 WHERE ('[鏧]') ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL (('[鏧]') IS TRUE)  as count FROM t1, rt0, t0 NATURAL JOIN vt0 ORDER BY t0.c0);
SELECT ALL * FROM t1, rt0, t0 NATURAL JOIN vt0 WHERE ('[鏧]') ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL (('[鏧]') IS TRUE)  as count FROM t1, rt0, t0 NATURAL JOIN vt0 ORDER BY t0.c0);
SELECT ALL * FROM t1, rt0, t0 NATURAL JOIN vt0 WHERE ('[鏧]') ORDER BY t0.c0;
SELECT ALL * FROM t1, rt0, t0 WHERE (NULL) ORDER BY (((rt0.c0)) BETWEEN ((((t1.c0) NOT BETWEEN (t0.c0) AND (rt0.c0)))) AND ((((rt0.c1)||(rt0.c3)))))  NULLS LAST, LIKELIHOOD(NULL, 0.7774793486818209) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1, rt0, t0 ORDER BY (((rt0.c0)) BETWEEN ((((t1.c0) NOT BETWEEN (t0.c0) AND (rt0.c0)))) AND ((((rt0.c1)||(rt0.c3)))))  NULLS LAST, LIKELIHOOD(NULL, 0.7774793486818209) DESC  NULLS FIRST);
SELECT ALL * FROM t1, rt0, t0 WHERE (NULL) ORDER BY (((rt0.c0)) BETWEEN ((((t1.c0) NOT BETWEEN (t0.c0) AND (rt0.c0)))) AND ((((rt0.c1)||(rt0.c3)))))  NULLS LAST, LIKELIHOOD(NULL, 0.7774793486818209) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1, rt0, t0 ORDER BY (((rt0.c0)) BETWEEN ((((t1.c0) NOT BETWEEN (t0.c0) AND (rt0.c0)))) AND ((((rt0.c1)||(rt0.c3)))))  NULLS LAST, LIKELIHOOD(NULL, 0.7774793486818209) DESC  NULLS FIRST);
SELECT ALL * FROM t1, rt0, t0 WHERE (NULL) ORDER BY (((rt0.c0)) BETWEEN ((((t1.c0) NOT BETWEEN (t0.c0) AND (rt0.c0)))) AND ((((rt0.c1)||(rt0.c3)))))  NULLS LAST, LIKELIHOOD(NULL, 0.7774793486818209) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((json_array(t0.c0, t0.c0))-(CASE WHEN t0.c0 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((json_array(t0.c0, t0.c0))-(CASE WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((json_array(t0.c0, t0.c0))-(CASE WHEN t0.c0 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((json_array(t0.c0, t0.c0))-(CASE WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((json_array(t0.c0, t0.c0))-(CASE WHEN t0.c0 THEN t0.c0 END)));
SELECT ALL * FROM t0 WHERE ((((- (t0.c0)))/(((t0.c0)LIKE(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c0)))/(((t0.c0)LIKE(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((- (t0.c0)))/(((t0.c0)LIKE(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c0)))/(((t0.c0)LIKE(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((- (t0.c0)))/(((t0.c0)LIKE(t0.c0)))));
SELECT ALL * FROM rt0, vt0, t0, t1 WHERE (((((NULL)OR(DATETIME(rt0.c3, rt0.c2, rt0.c2))))AND(t1.c0)));
SELECT SUM(count) FROM (SELECT ((((((NULL)OR(DATETIME(rt0.c3, rt0.c2, rt0.c2))))AND(t1.c0))) IS TRUE)  as count FROM rt0, vt0, t0, t1);
SELECT ALL * FROM rt0, vt0, t0, t1 WHERE (((((NULL)OR(DATETIME(rt0.c3, rt0.c2, rt0.c2))))AND(t1.c0)));
SELECT SUM(count) FROM (SELECT ((((((NULL)OR(DATETIME(rt0.c3, rt0.c2, rt0.c2))))AND(t1.c0))) IS TRUE)  as count FROM rt0, vt0, t0, t1);
SELECT ALL * FROM rt0, vt0, t0, t1 WHERE (((((NULL)OR(DATETIME(rt0.c3, rt0.c2, rt0.c2))))AND(t1.c0)));
SELECT * FROM rt0, vt0, t1, t0 WHERE (TYPEOF((rt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((TYPEOF((rt0.c0 IN ()))) IS TRUE)  as count FROM rt0, vt0, t1, t0);
SELECT * FROM rt0, vt0, t1, t0 WHERE (TYPEOF((rt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((TYPEOF((rt0.c0 IN ()))) IS TRUE)  as count FROM rt0, vt0, t1, t0);
SELECT * FROM rt0, vt0, t1, t0 WHERE (TYPEOF((rt0.c0 IN ())));
SELECT COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (((rt0.c2) BETWEEN (((((rt0.c3)AND(rt0.c1)))AND(rt0.c2))) AND ((- (rt0.c2))))) ORDER BY '941101509' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) BETWEEN (((((rt0.c3)AND(rt0.c1)))AND(rt0.c2))) AND ((- (rt0.c2))))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY '941101509' ASC);
SELECT COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (((rt0.c2) BETWEEN (((((rt0.c3)AND(rt0.c1)))AND(rt0.c2))) AND ((- (rt0.c2))))) ORDER BY '941101509' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) BETWEEN (((((rt0.c3)AND(rt0.c1)))AND(rt0.c2))) AND ((- (rt0.c2))))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY '941101509' ASC);
SELECT COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (((rt0.c2) BETWEEN (((((rt0.c3)AND(rt0.c1)))AND(rt0.c2))) AND ((- (rt0.c2))))) ORDER BY '941101509' ASC;
SELECT ALL COUNT(*) FROM rt0, vt0, t1, t0 NOT INDEXED WHERE ((((- (vt0.c0)))<(rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))<(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0, t1, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t1, t0 NOT INDEXED WHERE ((((- (vt0.c0)))<(rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))<(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0, t1, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t1, t0 NOT INDEXED WHERE ((((- (vt0.c0)))<(rt0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t1, t0 CROSS JOIN rt0 ON ((((CAST(rt0.c3 AS NUMERIC))OR(CASE WHEN rt0.c1 THEN x'' END)))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))) WHERE (CAST(t0.c0 AS NUMERIC) COLLATE NOCASE) ORDER BY CASE WHEN ((rt0.c2) NOTNULL) THEN ((t0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0)) WHEN IFNULL(DISTINCT rt0.c1, rt0.c3) THEN ((rt0.c3)||(rt0.c2)) WHEN ((t1.c0)-(t1.c0)) THEN ((((rt0.c3)OR(t0.c0)))OR(t1.c0)) WHEN ((t0.c0) ISNULL) THEN (t0.c0 IN (rt0.c0)) WHEN CAST(rt0.c2 AS INTEGER) THEN (t1.c0 IN (t1.c0, rt0.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM t1, t0 CROSS JOIN rt0 ON ((((CAST(rt0.c3 AS NUMERIC))OR(CASE WHEN rt0.c1 THEN x'' END)))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))) ORDER BY CASE WHEN ((rt0.c2) NOTNULL) THEN ((t0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0)) WHEN IFNULL(DISTINCT rt0.c1, rt0.c3) THEN ((rt0.c3)||(rt0.c2)) WHEN ((t1.c0)-(t1.c0)) THEN ((((rt0.c3)OR(t0.c0)))OR(t1.c0)) WHEN ((t0.c0) ISNULL) THEN (t0.c0 IN (rt0.c0)) WHEN CAST(rt0.c2 AS INTEGER) THEN (t1.c0 IN (t1.c0, rt0.c1)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, t0 CROSS JOIN rt0 ON ((((CAST(rt0.c3 AS NUMERIC))OR(CASE WHEN rt0.c1 THEN x'' END)))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))) WHERE (CAST(t0.c0 AS NUMERIC) COLLATE NOCASE) ORDER BY CASE WHEN ((rt0.c2) NOTNULL) THEN ((t0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0)) WHEN IFNULL(DISTINCT rt0.c1, rt0.c3) THEN ((rt0.c3)||(rt0.c2)) WHEN ((t1.c0)-(t1.c0)) THEN ((((rt0.c3)OR(t0.c0)))OR(t1.c0)) WHEN ((t0.c0) ISNULL) THEN (t0.c0 IN (rt0.c0)) WHEN CAST(rt0.c2 AS INTEGER) THEN (t1.c0 IN (t1.c0, rt0.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM t1, t0 CROSS JOIN rt0 ON ((((CAST(rt0.c3 AS NUMERIC))OR(CASE WHEN rt0.c1 THEN x'' END)))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))) ORDER BY CASE WHEN ((rt0.c2) NOTNULL) THEN ((t0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0)) WHEN IFNULL(DISTINCT rt0.c1, rt0.c3) THEN ((rt0.c3)||(rt0.c2)) WHEN ((t1.c0)-(t1.c0)) THEN ((((rt0.c3)OR(t0.c0)))OR(t1.c0)) WHEN ((t0.c0) ISNULL) THEN (t0.c0 IN (rt0.c0)) WHEN CAST(rt0.c2 AS INTEGER) THEN (t1.c0 IN (t1.c0, rt0.c1)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, t0 CROSS JOIN rt0 ON ((((CAST(rt0.c3 AS NUMERIC))OR(CASE WHEN rt0.c1 THEN x'' END)))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))) WHERE (CAST(t0.c0 AS NUMERIC) COLLATE NOCASE) ORDER BY CASE WHEN ((rt0.c2) NOTNULL) THEN ((t0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0)) WHEN IFNULL(DISTINCT rt0.c1, rt0.c3) THEN ((rt0.c3)||(rt0.c2)) WHEN ((t1.c0)-(t1.c0)) THEN ((((rt0.c3)OR(t0.c0)))OR(t1.c0)) WHEN ((t0.c0) ISNULL) THEN (t0.c0 IN (rt0.c0)) WHEN CAST(rt0.c2 AS INTEGER) THEN (t1.c0 IN (t1.c0, rt0.c1)) END  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE ((('') BETWEEN (t1.c0) AND (t1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((('') BETWEEN (t1.c0) AND (t1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((('') BETWEEN (t1.c0) AND (t1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((('') BETWEEN (t1.c0) AND (t1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((('') BETWEEN (t1.c0) AND (t1.c0)) COLLATE NOCASE);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON rt0.c3 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON rt0.c3);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON rt0.c3 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON rt0.c3);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON rt0.c3 WHERE (rt0.c2);
SELECT COUNT(*) FROM t1 FULL OUTER JOIN vt0 ON ((((((rt0.c1)||(rt0.c0)))AND(CAST(rt0.c0 AS REAL))))AND((~ (x'')))) CROSS JOIN rt0 ON NULLIF(DISTINCT ((((t0.c0)AND(t1.c0)))OR(t0.c0)), (((rt0.c3))!=((rt0.c0)))) LEFT OUTER JOIN t0 ON rt0.c0 WHERE (((((((((NULL)AND((rt0.c1 IN ()))))AND(rt0.c3 COLLATE BINARY)))AND(LTRIM(t1.c0))))OR(rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULL)AND((rt0.c1 IN ()))))AND(rt0.c3 COLLATE BINARY)))AND(LTRIM(t1.c0))))OR(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt0 ON ((((((rt0.c1)||(rt0.c0)))AND(CAST(rt0.c0 AS REAL))))AND((~ (x'')))) CROSS JOIN rt0 ON NULLIF(DISTINCT ((((t0.c0)AND(t1.c0)))OR(t0.c0)), (((rt0.c3))!=((rt0.c0)))) LEFT OUTER JOIN t0 ON rt0.c0);
SELECT COUNT(*) FROM t1 FULL OUTER JOIN vt0 ON ((((((rt0.c1)||(rt0.c0)))AND(CAST(rt0.c0 AS REAL))))AND((~ (x'')))) CROSS JOIN rt0 ON NULLIF(DISTINCT ((((t0.c0)AND(t1.c0)))OR(t0.c0)), (((rt0.c3))!=((rt0.c0)))) LEFT OUTER JOIN t0 ON rt0.c0 WHERE (((((((((NULL)AND((rt0.c1 IN ()))))AND(rt0.c3 COLLATE BINARY)))AND(LTRIM(t1.c0))))OR(rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULL)AND((rt0.c1 IN ()))))AND(rt0.c3 COLLATE BINARY)))AND(LTRIM(t1.c0))))OR(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt0 ON ((((((rt0.c1)||(rt0.c0)))AND(CAST(rt0.c0 AS REAL))))AND((~ (x'')))) CROSS JOIN rt0 ON NULLIF(DISTINCT ((((t0.c0)AND(t1.c0)))OR(t0.c0)), (((rt0.c3))!=((rt0.c0)))) LEFT OUTER JOIN t0 ON rt0.c0);
SELECT * FROM t1 WHERE ((t1.c0 COLLATE NOCASE IN ('0.5514399501148752'))) ORDER BY ((t1.c0) NOTNULL) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT (((t1.c0 COLLATE NOCASE IN ('0.5514399501148752'))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c0) NOTNULL) COLLATE BINARY DESC);
SELECT * FROM t1 WHERE ((t1.c0 COLLATE NOCASE IN ('0.5514399501148752'))) ORDER BY ((t1.c0) NOTNULL) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT (((t1.c0 COLLATE NOCASE IN ('0.5514399501148752'))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c0) NOTNULL) COLLATE BINARY DESC);
SELECT * FROM t1 WHERE ((t1.c0 COLLATE NOCASE IN ('0.5514399501148752'))) ORDER BY ((t1.c0) NOTNULL) COLLATE BINARY DESC;
SELECT COUNT(*) FROM t0 WHERE (0.5542840857712319) ORDER BY (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((0.5542840857712319) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) IS TRUE));
SELECT COUNT(*) FROM t0 WHERE (0.5542840857712319) ORDER BY (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((0.5542840857712319) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) IS TRUE));
SELECT COUNT(*) FROM t0 WHERE (0.5542840857712319) ORDER BY (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) IS TRUE);
SELECT COUNT(*) FROM t1, t0 INNER JOIN vt0 ON TYPEOF(DISTINCT (((t1.c0, rt0.c1, rt0.c3)) NOT BETWEEN ((0.9729443185363619, -1881863697, vt0.c0)) AND ((t0.c0, rt0.c1, rt0.c2)))) FULL OUTER JOIN rt0 ON ((((rt0.c2)IS NOT(rt0.c3))) BETWEEN (rt0.c2) AND (rt0.c3 COLLATE BINARY)) WHERE (0.7242078876306746);
SELECT SUM(count) FROM (SELECT ALL ((0.7242078876306746) IS TRUE)  as count FROM t1, t0 INNER JOIN vt0 ON TYPEOF(DISTINCT (((t1.c0, rt0.c1, rt0.c3)) NOT BETWEEN ((0.9729443185363619, -1881863697, vt0.c0)) AND ((t0.c0, rt0.c1, rt0.c2)))) FULL OUTER JOIN rt0 ON ((((rt0.c2)IS NOT(rt0.c3))) BETWEEN (rt0.c2) AND (rt0.c3 COLLATE BINARY)));
SELECT COUNT(*) FROM t1, t0 INNER JOIN vt0 ON TYPEOF(DISTINCT (((t1.c0, rt0.c1, rt0.c3)) NOT BETWEEN ((0.9729443185363619, -1881863697, vt0.c0)) AND ((t0.c0, rt0.c1, rt0.c2)))) FULL OUTER JOIN rt0 ON ((((rt0.c2)IS NOT(rt0.c3))) BETWEEN (rt0.c2) AND (rt0.c3 COLLATE BINARY)) WHERE (0.7242078876306746);
SELECT SUM(count) FROM (SELECT ALL ((0.7242078876306746) IS TRUE)  as count FROM t1, t0 INNER JOIN vt0 ON TYPEOF(DISTINCT (((t1.c0, rt0.c1, rt0.c3)) NOT BETWEEN ((0.9729443185363619, -1881863697, vt0.c0)) AND ((t0.c0, rt0.c1, rt0.c2)))) FULL OUTER JOIN rt0 ON ((((rt0.c2)IS NOT(rt0.c3))) BETWEEN (rt0.c2) AND (rt0.c3 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t1 WHERE (CASE (t1.c0 IN ())  WHEN CAST(t1.c0 AS NUMERIC) THEN CAST(vt0.c0 AS BLOB) WHEN (+ (t1.c0)) THEN ((t1.c0) IS TRUE) WHEN CASE t1.c0  WHEN t1.c0 THEN vt0.c0 END THEN CASE t1.c0  WHEN t1.c0 THEN vt0.c0 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE (t1.c0 IN ())  WHEN CAST(t1.c0 AS NUMERIC) THEN CAST(vt0.c0 AS BLOB) WHEN (+ (t1.c0)) THEN ((t1.c0) IS TRUE) WHEN CASE t1.c0  WHEN t1.c0 THEN vt0.c0 END THEN CASE t1.c0  WHEN t1.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0 NATURAL JOIN t1);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t1 WHERE (CASE (t1.c0 IN ())  WHEN CAST(t1.c0 AS NUMERIC) THEN CAST(vt0.c0 AS BLOB) WHEN (+ (t1.c0)) THEN ((t1.c0) IS TRUE) WHEN CASE t1.c0  WHEN t1.c0 THEN vt0.c0 END THEN CASE t1.c0  WHEN t1.c0 THEN vt0.c0 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE (t1.c0 IN ())  WHEN CAST(t1.c0 AS NUMERIC) THEN CAST(vt0.c0 AS BLOB) WHEN (+ (t1.c0)) THEN ((t1.c0) IS TRUE) WHEN CASE t1.c0  WHEN t1.c0 THEN vt0.c0 END THEN CASE t1.c0  WHEN t1.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0 NATURAL JOIN t1);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t1 WHERE (CASE (t1.c0 IN ())  WHEN CAST(t1.c0 AS NUMERIC) THEN CAST(vt0.c0 AS BLOB) WHEN (+ (t1.c0)) THEN ((t1.c0) IS TRUE) WHEN CASE t1.c0  WHEN t1.c0 THEN vt0.c0 END THEN CASE t1.c0  WHEN t1.c0 THEN vt0.c0 ELSE vt0.c0 END END);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0)))) IS FALSE)) ORDER BY CASE '1102825996' COLLATE NOCASE  WHEN IFNULL(t0.c0, t0.c0) THEN (+ (t0.c0)) WHEN ((((t0.c0)OR(t0.c0)))OR(x'')) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END WHEN (NOT (0.1508370666795188)) THEN '' ELSE ((x'b6b7') NOT BETWEEN (t0.c0) AND ('1287177855')) END;
SELECT SUM(count) FROM (SELECT (((((((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0)))) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY CASE '1102825996' COLLATE NOCASE  WHEN IFNULL(t0.c0, t0.c0) THEN (+ (t0.c0)) WHEN ((((t0.c0)OR(t0.c0)))OR(x'')) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END WHEN (NOT (0.1508370666795188)) THEN '' ELSE ((x'b6b7') NOT BETWEEN (t0.c0) AND ('1287177855')) END);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0)))) IS FALSE)) ORDER BY CASE '1102825996' COLLATE NOCASE  WHEN IFNULL(t0.c0, t0.c0) THEN (+ (t0.c0)) WHEN ((((t0.c0)OR(t0.c0)))OR(x'')) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END WHEN (NOT (0.1508370666795188)) THEN '' ELSE ((x'b6b7') NOT BETWEEN (t0.c0) AND ('1287177855')) END;
SELECT SUM(count) FROM (SELECT (((((((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0)))) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY CASE '1102825996' COLLATE NOCASE  WHEN IFNULL(t0.c0, t0.c0) THEN (+ (t0.c0)) WHEN ((((t0.c0)OR(t0.c0)))OR(x'')) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END WHEN (NOT (0.1508370666795188)) THEN '' ELSE ((x'b6b7') NOT BETWEEN (t0.c0) AND ('1287177855')) END);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0)))) IS FALSE)) ORDER BY CASE '1102825996' COLLATE NOCASE  WHEN IFNULL(t0.c0, t0.c0) THEN (+ (t0.c0)) WHEN ((((t0.c0)OR(t0.c0)))OR(x'')) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END WHEN (NOT (0.1508370666795188)) THEN '' ELSE ((x'b6b7') NOT BETWEEN (t0.c0) AND ('1287177855')) END;
SELECT ALL * FROM t1 WHERE (((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) IN ((t1.c0 IN ()), ((t1.c0)>(t1.c0)), ((t1.c0)-(t1.c0))))) ORDER BY (((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))))OR((NOT (t1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) IN ((t1.c0 IN ()), ((t1.c0)>(t1.c0)), ((t1.c0)-(t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))))OR((NOT (t1.c0))))  NULLS LAST);
SELECT ALL * FROM t1 WHERE (((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) IN ((t1.c0 IN ()), ((t1.c0)>(t1.c0)), ((t1.c0)-(t1.c0))))) ORDER BY (((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))))OR((NOT (t1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) IN ((t1.c0 IN ()), ((t1.c0)>(t1.c0)), ((t1.c0)-(t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))))OR((NOT (t1.c0))))  NULLS LAST);
SELECT ALL * FROM t1 WHERE (((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) IN ((t1.c0 IN ()), ((t1.c0)>(t1.c0)), ((t1.c0)-(t1.c0))))) ORDER BY (((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))))OR((NOT (t1.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0, t1 WHERE (((((((t1.c0)OR(t1.c0)))AND(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c0)OR(t1.c0)))AND(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) IS TRUE)  as count FROM vt0, t0, t1 ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, t1 WHERE (((((((t1.c0)OR(t1.c0)))AND(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c0)OR(t1.c0)))AND(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) IS TRUE)  as count FROM vt0, t0, t1 ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, t1 WHERE (((((((t1.c0)OR(t1.c0)))AND(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL * FROM rt0 INNER JOIN t0 ON ((((rt0.c0)-(rt0.c3))) NOT BETWEEN (((rt0.c3) NOTNULL)) AND (((((rt0.c2)AND('LER0fG_')))OR(t0.c0)))) WHERE (CAST((((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1))) AS NUMERIC)) ORDER BY CAST(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1))) AS NUMERIC)) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ((((rt0.c0)-(rt0.c3))) NOT BETWEEN (((rt0.c3) NOTNULL)) AND (((((rt0.c2)AND('LER0fG_')))OR(t0.c0)))) ORDER BY CAST(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0)) AS NUMERIC));
SELECT ALL * FROM rt0 INNER JOIN t0 ON ((((rt0.c0)-(rt0.c3))) NOT BETWEEN (((rt0.c3) NOTNULL)) AND (((((rt0.c2)AND('LER0fG_')))OR(t0.c0)))) WHERE (CAST((((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1))) AS NUMERIC)) ORDER BY CAST(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1))) AS NUMERIC)) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ((((rt0.c0)-(rt0.c3))) NOT BETWEEN (((rt0.c3) NOTNULL)) AND (((((rt0.c2)AND('LER0fG_')))OR(t0.c0)))) ORDER BY CAST(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0)) AS NUMERIC));
SELECT ALL * FROM rt0 INNER JOIN t0 ON ((((rt0.c0)-(rt0.c3))) NOT BETWEEN (((rt0.c3) NOTNULL)) AND (((((rt0.c2)AND('LER0fG_')))OR(t0.c0)))) WHERE (CAST((((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1))) AS NUMERIC)) ORDER BY CAST(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0)) AS NUMERIC);
SELECT COUNT(*) FROM t1, t0, rt0 WHERE ((- ((~ (rt0.c1))))) ORDER BY LIKELIHOOD(((t0.c0) NOTNULL), 0.1017964675116515) ASC, ((- (rt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT (((- ((~ (rt0.c1))))) IS TRUE)  as count FROM t1, t0, rt0 ORDER BY LIKELIHOOD(((t0.c0) NOTNULL), 0.1017964675116515) ASC, ((- (rt0.c0)) IN ()));
SELECT COUNT(*) FROM t1, t0, rt0 WHERE ((- ((~ (rt0.c1))))) ORDER BY LIKELIHOOD(((t0.c0) NOTNULL), 0.1017964675116515) ASC, ((- (rt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT (((- ((~ (rt0.c1))))) IS TRUE)  as count FROM t1, t0, rt0 ORDER BY LIKELIHOOD(((t0.c0) NOTNULL), 0.1017964675116515) ASC, ((- (rt0.c0)) IN ()));
SELECT COUNT(*) FROM t1, t0, rt0 WHERE ((- ((~ (rt0.c1))))) ORDER BY LIKELIHOOD(((t0.c0) NOTNULL), 0.1017964675116515) ASC, ((- (rt0.c0)) IN ());
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON CASE WHEN CAST(t0.c0 AS REAL) THEN (NOT (rt0.c3)) ELSE CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN t0.c0 ELSE '宻1cSLK5s' END END WHERE ((((((rt0.c3 IN (rt0.c1)))AND(((rt0.c1)<>(rt0.c2)))))OR(x'a9c9'))) ORDER BY (((t0.c0 IN ())) BETWEEN (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))) AND (CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END)) ASC, (((t0.c0 IN (rt0.c1)))OR(((rt0.c2) NOT BETWEEN (t0.c0) AND ('462614004')))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3 IN (rt0.c1)))AND(((rt0.c1)<>(rt0.c2)))))OR(x'a9c9'))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON CASE WHEN CAST(t0.c0 AS REAL) THEN (NOT (rt0.c3)) ELSE CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN t0.c0 ELSE '宻1cSLK5s' END END ORDER BY (((t0.c0 IN ())) BETWEEN (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))) AND (CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END)) ASC, (((t0.c0 IN (rt0.c1)))OR(((rt0.c2) NOT BETWEEN (t0.c0) AND ('462614004')))) DESC);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON CASE WHEN CAST(t0.c0 AS REAL) THEN (NOT (rt0.c3)) ELSE CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN t0.c0 ELSE '宻1cSLK5s' END END WHERE ((((((rt0.c3 IN (rt0.c1)))AND(((rt0.c1)<>(rt0.c2)))))OR(x'a9c9'))) ORDER BY (((t0.c0 IN ())) BETWEEN (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))) AND (CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END)) ASC, (((t0.c0 IN (rt0.c1)))OR(((rt0.c2) NOT BETWEEN (t0.c0) AND ('462614004')))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3 IN (rt0.c1)))AND(((rt0.c1)<>(rt0.c2)))))OR(x'a9c9'))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON CASE WHEN CAST(t0.c0 AS REAL) THEN (NOT (rt0.c3)) ELSE CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN t0.c0 ELSE '宻1cSLK5s' END END ORDER BY (((t0.c0 IN ())) BETWEEN (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))) AND (CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END)) ASC, (((t0.c0 IN (rt0.c1)))OR(((rt0.c2) NOT BETWEEN (t0.c0) AND ('462614004')))) DESC);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON CASE WHEN CAST(t0.c0 AS REAL) THEN (NOT (rt0.c3)) ELSE CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN t0.c0 ELSE '宻1cSLK5s' END END WHERE ((((((rt0.c3 IN (rt0.c1)))AND(((rt0.c1)<>(rt0.c2)))))OR(x'a9c9'))) ORDER BY (((t0.c0 IN ())) BETWEEN (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))) AND (CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END)) ASC, (((t0.c0 IN (rt0.c1)))OR(((rt0.c2) NOT BETWEEN (t0.c0) AND ('462614004')))) DESC;
SELECT COUNT(*) FROM t1 WHERE ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END IN (((((((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(0.6880236248122898)))OR(t1.c0)))));
SELECT SUM(count) FROM (SELECT (((CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END IN (((((((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(0.6880236248122898)))OR(t1.c0))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END IN (((((((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(0.6880236248122898)))OR(t1.c0)))));
SELECT SUM(count) FROM (SELECT (((CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END IN (((((((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(0.6880236248122898)))OR(t1.c0))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END IN (((((((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(0.6880236248122898)))OR(t1.c0)))));
SELECT ALL * FROM rt0 WHERE ((ABS(rt0.c1) IN (((((rt0.c2)AND('')))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((ABS(rt0.c1) IN (((((rt0.c2)AND('')))OR(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((ABS(rt0.c1) IN (((((rt0.c2)AND('')))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((ABS(rt0.c1) IN (((((rt0.c2)AND('')))OR(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((ABS(rt0.c1) IN (((((rt0.c2)AND('')))OR(rt0.c0)))));
SELECT ALL * FROM t1, rt0 WHERE (((rt0.c0 COLLATE BINARY) ISNULL)) ORDER BY ((CAST(rt0.c0 AS INTEGER))/((((rt0.c2, rt0.c1, rt0.c2))<((rt0.c1, 0.12767182178744707, rt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM t1, rt0 ORDER BY ((CAST(rt0.c0 AS INTEGER))/((((rt0.c2, rt0.c1, rt0.c2))<((rt0.c1, 0.12767182178744707, rt0.c0))))) ASC  NULLS FIRST);
SELECT ALL * FROM t1, rt0 WHERE (((rt0.c0 COLLATE BINARY) ISNULL)) ORDER BY ((CAST(rt0.c0 AS INTEGER))/((((rt0.c2, rt0.c1, rt0.c2))<((rt0.c1, 0.12767182178744707, rt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM t1, rt0 ORDER BY ((CAST(rt0.c0 AS INTEGER))/((((rt0.c2, rt0.c1, rt0.c2))<((rt0.c1, 0.12767182178744707, rt0.c0))))) ASC  NULLS FIRST);
SELECT ALL * FROM t1, rt0 WHERE (((rt0.c0 COLLATE BINARY) ISNULL)) ORDER BY ((CAST(rt0.c0 AS INTEGER))/((((rt0.c2, rt0.c1, rt0.c2))<((rt0.c1, 0.12767182178744707, rt0.c0))))) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE BINARY)IS(((x'') NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY ((t0.c0)>>(LOWER(DISTINCT t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE BINARY)IS(((x'') NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0)>>(LOWER(DISTINCT t0.c0))));
SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE BINARY)IS(((x'') NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY ((t0.c0)>>(LOWER(DISTINCT t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE BINARY)IS(((x'') NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0)>>(LOWER(DISTINCT t0.c0))));
SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE BINARY)IS(((x'') NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY ((t0.c0)>>(LOWER(DISTINCT t0.c0)));
SELECT ALL COUNT(*) FROM t1 WHERE ((+ ((~ (t1.c0))))) ORDER BY (((t1.c0)<<(t1.c0)) IN ())  NULLS LAST, ((((t1.c0) IS TRUE))!=(RTRIM(t1.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((+ ((~ (t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0)<<(t1.c0)) IN ())  NULLS LAST, ((((t1.c0) IS TRUE))<>(RTRIM(t1.c0))) DESC);
SELECT ALL COUNT(*) FROM t1 WHERE ((+ ((~ (t1.c0))))) ORDER BY (((t1.c0)<<(t1.c0)) IN ())  NULLS LAST, ((((t1.c0) IS TRUE))!=(RTRIM(t1.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((+ ((~ (t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0)<<(t1.c0)) IN ())  NULLS LAST, ((((t1.c0) IS TRUE))<>(RTRIM(t1.c0))) DESC);
SELECT ALL COUNT(*) FROM t1 WHERE ((+ ((~ (t1.c0))))) ORDER BY (((t1.c0)<<(t1.c0)) IN ())  NULLS LAST, ((((t1.c0) IS TRUE))!=(RTRIM(t1.c0))) DESC;
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((((rt0.c0)!=(vt0.c0)))>>((rt0.c2 IN ())))) ORDER BY (((NOT (rt0.c3))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<>(vt0.c0)))>>((rt0.c2 IN ())))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (((NOT (rt0.c3))) NOT NULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((((rt0.c0)!=(vt0.c0)))>>((rt0.c2 IN ())))) ORDER BY (((NOT (rt0.c3))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<>(vt0.c0)))>>((rt0.c2 IN ())))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (((NOT (rt0.c3))) NOT NULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((((rt0.c0)!=(vt0.c0)))>>((rt0.c2 IN ())))) ORDER BY (((NOT (rt0.c3))) NOT NULL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN t0 ON ((CAST(0X326fbfea AS BLOB)) NOT BETWEEN (((((((((rt0.c1)OR(t0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2))) AND ((((t0.c0))>(('462614004'))))) INNER JOIN rt0 ON CASE ((rt0.c1)<(rt0.c1))  WHEN (t0.c0 IN ()) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END END FULL OUTER JOIN vt0 ON ((((rt0.c1)|(vt0.c0)))*(((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))) WHERE (CASE WHEN ((rt0.c3)>>(rt0.c2)) THEN ((t0.c0)LIKE(x'')) END) ORDER BY (((- (rt0.c1)))<<(t1.c0)) ASC  NULLS FIRST, ((CAST(rt0.c2 AS INTEGER))LIKE((((rt0.c2, t1.c0, rt0.c1)) BETWEEN ((t1.c0, rt0.c0, rt0.c1)) AND ((rt0.c1, t1.c0, vt0.c0))))) ASC  NULLS FIRST, CAST(((rt0.c2)<=(rt0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c3)>>(rt0.c2)) THEN ((t0.c0)LIKE(x'')) END) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN t0 ON ((CAST(0X326fbfea AS BLOB)) NOT BETWEEN (((((((((rt0.c1)OR(t0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2))) AND ((((t0.c0))>(('462614004'))))) INNER JOIN rt0 ON CASE ((rt0.c1)<(rt0.c1))  WHEN (t0.c0 IN ()) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END END FULL OUTER JOIN vt0 ON ((((rt0.c1)|(vt0.c0)))*(((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))) ORDER BY (((- (rt0.c1)))<<(t1.c0)) ASC  NULLS FIRST, ((CAST(rt0.c2 AS INTEGER))LIKE((((rt0.c2, t1.c0, rt0.c1)) BETWEEN ((t1.c0, rt0.c0, rt0.c1)) AND ((rt0.c1, t1.c0, vt0.c0))))) ASC  NULLS FIRST, CAST(((rt0.c2)<=(rt0.c0)) AS REAL));
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN t0 ON ((CAST(0X326fbfea AS BLOB)) NOT BETWEEN (((((((((rt0.c1)OR(t0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2))) AND ((((t0.c0))>(('462614004'))))) INNER JOIN rt0 ON CASE ((rt0.c1)<(rt0.c1))  WHEN (t0.c0 IN ()) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END END FULL OUTER JOIN vt0 ON ((((rt0.c1)|(vt0.c0)))*(((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))) WHERE (CASE WHEN ((rt0.c3)>>(rt0.c2)) THEN ((t0.c0)LIKE(x'')) END) ORDER BY (((- (rt0.c1)))<<(t1.c0)) ASC  NULLS FIRST, ((CAST(rt0.c2 AS INTEGER))LIKE((((rt0.c2, t1.c0, rt0.c1)) BETWEEN ((t1.c0, rt0.c0, rt0.c1)) AND ((rt0.c1, t1.c0, vt0.c0))))) ASC  NULLS FIRST, CAST(((rt0.c2)<=(rt0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c3)>>(rt0.c2)) THEN ((t0.c0)LIKE(x'')) END) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN t0 ON ((CAST(0X326fbfea AS BLOB)) NOT BETWEEN (((((((((rt0.c1)OR(t0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2))) AND ((((t0.c0))>(('462614004'))))) INNER JOIN rt0 ON CASE ((rt0.c1)<(rt0.c1))  WHEN (t0.c0 IN ()) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END END FULL OUTER JOIN vt0 ON ((((rt0.c1)|(vt0.c0)))*(((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))) ORDER BY (((- (rt0.c1)))<<(t1.c0)) ASC  NULLS FIRST, ((CAST(rt0.c2 AS INTEGER))LIKE((((rt0.c2, t1.c0, rt0.c1)) BETWEEN ((t1.c0, rt0.c0, rt0.c1)) AND ((rt0.c1, t1.c0, vt0.c0))))) ASC  NULLS FIRST, CAST(((rt0.c2)<=(rt0.c0)) AS REAL));
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (0.3711571548384983) ORDER BY 0.6599723525539326 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.3711571548384983) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY 0.6599723525539326 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (0.3711571548384983) ORDER BY 0.6599723525539326 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.3711571548384983) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY 0.6599723525539326 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (0.3711571548384983) ORDER BY 0.6599723525539326 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t1 FULL OUTER JOIN rt0 ON ((CAST(rt0.c3 AS BLOB))>((vt0.c0 IN ()))) WHERE ((((((rt0.c3 IN ()))OR(rt0.c2)))AND(CASE WHEN t1.c0 THEN t1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3 IN ()))OR(rt0.c2)))AND(CASE WHEN t1.c0 THEN t1.c0 END))) IS TRUE)  as count FROM vt0, t1 FULL OUTER JOIN rt0 ON ((CAST(rt0.c3 AS BLOB))>((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0, t1 FULL OUTER JOIN rt0 ON ((CAST(rt0.c3 AS BLOB))>((vt0.c0 IN ()))) WHERE ((((((rt0.c3 IN ()))OR(rt0.c2)))AND(CASE WHEN t1.c0 THEN t1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3 IN ()))OR(rt0.c2)))AND(CASE WHEN t1.c0 THEN t1.c0 END))) IS TRUE)  as count FROM vt0, t1 FULL OUTER JOIN rt0 ON ((CAST(rt0.c3 AS BLOB))>((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0, t1 FULL OUTER JOIN rt0 ON ((CAST(rt0.c3 AS BLOB))>((vt0.c0 IN ()))) WHERE ((((((rt0.c3 IN ()))OR(rt0.c2)))AND(CASE WHEN t1.c0 THEN t1.c0 END)));
SELECT ALL * FROM t1, rt0 WHERE (json_array(((rt0.c2)<=(rt0.c0)), ((((t1.c0)AND(NULL)))AND(x'')), ((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c3)), (NOT (rt0.c3))));
SELECT SUM(count) FROM (SELECT ((json_array(((rt0.c2)<=(rt0.c0)), ((((t1.c0)AND(NULL)))AND(x'')), ((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c3)), (NOT (rt0.c3)))) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE (json_array(((rt0.c2)<=(rt0.c0)), ((((t1.c0)AND(NULL)))AND(x'')), ((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c3)), (NOT (rt0.c3))));
SELECT SUM(count) FROM (SELECT ((json_array(((rt0.c2)<=(rt0.c0)), ((((t1.c0)AND(NULL)))AND(x'')), ((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c3)), (NOT (rt0.c3)))) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE (json_array(((rt0.c2)<=(rt0.c0)), ((((t1.c0)AND(NULL)))AND(x'')), ((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c3)), (NOT (rt0.c3))));
SELECT * FROM t1 WHERE (((t1.c0)-(t1.c0)) COLLATE RTRIM) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)-(t1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) NOTNULL) ASC  NULLS LAST);
SELECT * FROM t1 WHERE (((t1.c0)-(t1.c0)) COLLATE RTRIM) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)-(t1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) NOTNULL) ASC  NULLS LAST);
SELECT * FROM t1 WHERE (((t1.c0)-(t1.c0)) COLLATE RTRIM) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) NOTNULL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t1 NOT INDEXED, t0 CROSS JOIN vt0 ON CAST(((((((((t1.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c1)) AS INTEGER) WHERE (((((((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0)))))>((((rt0.c2) ISNULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0)))))>((((rt0.c2) ISNULL))))) IS TRUE)  as count FROM rt0, t1, t0 CROSS JOIN vt0 ON CAST(((((((((t1.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c1)) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0, t1 NOT INDEXED, t0 CROSS JOIN vt0 ON CAST(((((((((t1.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c1)) AS INTEGER) WHERE (((((((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0)))))>((((rt0.c2) ISNULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0)))))>((((rt0.c2) ISNULL))))) IS TRUE)  as count FROM rt0, t1, t0 CROSS JOIN vt0 ON CAST(((((((((t1.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c1)) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0, t1 NOT INDEXED, t0 CROSS JOIN vt0 ON CAST(((((((((t1.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c1)) AS INTEGER) WHERE (((((((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0)))))>((((rt0.c2) ISNULL)))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CASE (rt0.c3 IN ())  WHEN (NOT (NULL)) THEN ((rt0.c0)-(vt0.c0)) ELSE ((vt0.c0)<<(rt0.c3)) END WHERE (((rt0.c0) NOT BETWEEN ((((rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((rt0.c0, rt0.c3, rt0.c3)) AND ((1.429541811E9, rt0.c0, rt0.c3)))) AND (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT BETWEEN ((((rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((rt0.c0, rt0.c3, rt0.c3)) AND ((1.429541811E9, rt0.c0, rt0.c3)))) AND (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CASE (rt0.c3 IN ())  WHEN (NOT (NULL)) THEN ((rt0.c0)-(vt0.c0)) ELSE ((vt0.c0)<<(rt0.c3)) END);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CASE (rt0.c3 IN ())  WHEN (NOT (NULL)) THEN ((rt0.c0)-(vt0.c0)) ELSE ((vt0.c0)<<(rt0.c3)) END WHERE (((rt0.c0) NOT BETWEEN ((((rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((rt0.c0, rt0.c3, rt0.c3)) AND ((1.429541811E9, rt0.c0, rt0.c3)))) AND (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT BETWEEN ((((rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((rt0.c0, rt0.c3, rt0.c3)) AND ((1.429541811E9, rt0.c0, rt0.c3)))) AND (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CASE (rt0.c3 IN ())  WHEN (NOT (NULL)) THEN ((rt0.c0)-(vt0.c0)) ELSE ((vt0.c0)<<(rt0.c3)) END);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CASE (rt0.c3 IN ())  WHEN (NOT (NULL)) THEN ((rt0.c0)-(vt0.c0)) ELSE ((vt0.c0)<<(rt0.c3)) END WHERE (((rt0.c0) NOT BETWEEN ((((rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((rt0.c0, rt0.c3, rt0.c3)) AND ((1.429541811E9, rt0.c0, rt0.c3)))) AND (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END)));
SELECT * FROM vt0, t1, t0 WHERE (((((t0.c0) NOT NULL)) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (CAST(x'' AS REAL)))) ORDER BY (((t1.c0, t0.c0, t0.c0)) NOT BETWEEN (((t0.c0 IN (t0.c0)), x'', t0.c0)) AND ((CAST(t0.c0 AS NUMERIC), (t1.c0 IN (vt0.c0)), ((vt0.c0)LIKE(t0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT NULL)) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (CAST(x'' AS REAL)))) IS TRUE)  as count FROM vt0, t1, t0 ORDER BY (((t1.c0, t0.c0, t0.c0)) NOT BETWEEN (((t0.c0 IN (t0.c0)), x'', t0.c0)) AND ((CAST(t0.c0 AS NUMERIC), (t1.c0 IN (vt0.c0)), ((vt0.c0)LIKE(t0.c0))))) DESC);
SELECT * FROM vt0, t1, t0 WHERE (((((t0.c0) NOT NULL)) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (CAST(x'' AS REAL)))) ORDER BY (((t1.c0, t0.c0, t0.c0)) NOT BETWEEN (((t0.c0 IN (t0.c0)), x'', t0.c0)) AND ((CAST(t0.c0 AS NUMERIC), (t1.c0 IN (vt0.c0)), ((vt0.c0)LIKE(t0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT NULL)) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (CAST(x'' AS REAL)))) IS TRUE)  as count FROM vt0, t1, t0 ORDER BY (((t1.c0, t0.c0, t0.c0)) NOT BETWEEN (((t0.c0 IN (t0.c0)), x'', t0.c0)) AND ((CAST(t0.c0 AS NUMERIC), (t1.c0 IN (vt0.c0)), ((vt0.c0)LIKE(t0.c0))))) DESC);
SELECT * FROM vt0, t1, t0 WHERE (((((t0.c0) NOT NULL)) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (CAST(x'' AS REAL)))) ORDER BY (((t1.c0, t0.c0, t0.c0)) NOT BETWEEN (((t0.c0 IN (t0.c0)), x'', t0.c0)) AND ((CAST(t0.c0 AS NUMERIC), (t1.c0 IN (vt0.c0)), ((vt0.c0)LIKE(t0.c0))))) DESC;
SELECT ALL COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN t1 ON CASE rt0.c0  WHEN rt0.c0 THEN t1.c0 WHEN 'L%^-FM9' THEN rt0.c1 WHEN t1.c0 THEN rt0.c0 WHEN vt0.c0 THEN x'75e1' WHEN rt0.c1 THEN vt0.c0 END COLLATE NOCASE WHERE ((- (((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY ((((((1.56916769E8) IS TRUE))AND(rt0.c3 COLLATE NOCASE)))AND((0x66afa37a IN ()))), TYPEOF(DISTINCT t1.c0) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN t1 ON CASE rt0.c0  WHEN rt0.c0 THEN t1.c0 WHEN 'L%^-FM9' THEN rt0.c1 WHEN t1.c0 THEN rt0.c0 WHEN vt0.c0 THEN x'75e1' WHEN rt0.c1 THEN vt0.c0 END COLLATE NOCASE ORDER BY ((((((1.56916769E8) IS TRUE))AND(rt0.c3 COLLATE NOCASE)))AND((0X66afa37a IN ()))), TYPEOF(DISTINCT t1.c0) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN t1 ON CASE rt0.c0  WHEN rt0.c0 THEN t1.c0 WHEN 'L%^-FM9' THEN rt0.c1 WHEN t1.c0 THEN rt0.c0 WHEN vt0.c0 THEN x'75e1' WHEN rt0.c1 THEN vt0.c0 END COLLATE NOCASE WHERE ((- (((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY ((((((1.56916769E8) IS TRUE))AND(rt0.c3 COLLATE NOCASE)))AND((0x66afa37a IN ()))), TYPEOF(DISTINCT t1.c0) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN t1 ON CASE rt0.c0  WHEN rt0.c0 THEN t1.c0 WHEN 'L%^-FM9' THEN rt0.c1 WHEN t1.c0 THEN rt0.c0 WHEN vt0.c0 THEN x'75e1' WHEN rt0.c1 THEN vt0.c0 END COLLATE NOCASE ORDER BY ((((((1.56916769E8) IS TRUE))AND(rt0.c3 COLLATE NOCASE)))AND((0X66afa37a IN ()))), TYPEOF(DISTINCT t1.c0) COLLATE BINARY);
SELECT ALL * FROM rt0, t0, vt0 WHERE (CASE WHEN CASE rt0.c1  WHEN rt0.c2 THEN t0.c0 ELSE rt0.c2 END THEN (((rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c3, rt0.c0, rt0.c3))) ELSE (((vt0.c0))<((rt0.c2))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE rt0.c1  WHEN rt0.c2 THEN t0.c0 ELSE rt0.c2 END THEN (((rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c3, rt0.c0, rt0.c3))) ELSE (((vt0.c0))<((rt0.c2))) END) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE (CASE WHEN CASE rt0.c1  WHEN rt0.c2 THEN t0.c0 ELSE rt0.c2 END THEN (((rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c3, rt0.c0, rt0.c3))) ELSE (((vt0.c0))<((rt0.c2))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE rt0.c1  WHEN rt0.c2 THEN t0.c0 ELSE rt0.c2 END THEN (((rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c3, rt0.c0, rt0.c3))) ELSE (((vt0.c0))<((rt0.c2))) END) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE (CASE WHEN CASE rt0.c1  WHEN rt0.c2 THEN t0.c0 ELSE rt0.c2 END THEN (((rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c3, rt0.c0, rt0.c3))) ELSE (((vt0.c0))<((rt0.c2))) END);
SELECT ALL * FROM vt0, rt0, t1 WHERE (((((((((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END)OR(((t1.c0) IS TRUE))))OR(((NULL)+(vt0.c0)))))AND((rt0.c2 IN ()))))OR(CAST(rt0.c2 AS INTEGER)))) ORDER BY ((NOT ('')) IN ());
SELECT SUM(count) FROM (SELECT ((((((((((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END)OR(((t1.c0) IS TRUE))))OR(((NULL)+(vt0.c0)))))AND((rt0.c2 IN ()))))OR(CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY ((NOT ('')) IN ()));
SELECT ALL * FROM vt0, rt0, t1 WHERE (((((((((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END)OR(((t1.c0) IS TRUE))))OR(((NULL)+(vt0.c0)))))AND((rt0.c2 IN ()))))OR(CAST(rt0.c2 AS INTEGER)))) ORDER BY ((NOT ('')) IN ());
SELECT SUM(count) FROM (SELECT ((((((((((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END)OR(((t1.c0) IS TRUE))))OR(((NULL)+(vt0.c0)))))AND((rt0.c2 IN ()))))OR(CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY ((NOT ('')) IN ()));
SELECT ALL * FROM vt0, rt0, t1 WHERE (((((((((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END)OR(((t1.c0) IS TRUE))))OR(((NULL)+(vt0.c0)))))AND((rt0.c2 IN ()))))OR(CAST(rt0.c2 AS INTEGER)))) ORDER BY ((NOT ('')) IN ());
SELECT * FROM rt0, t1, vt0, t0 WHERE ((((~ (rt0.c3)))>=(((t0.c0)IS(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c3)))>=(((t0.c0)IS(t1.c0))))) IS TRUE)  as count FROM rt0, t1, vt0, t0);
SELECT * FROM rt0, t1, vt0, t0 WHERE ((((~ (rt0.c3)))>=(((t0.c0)IS(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c3)))>=(((t0.c0)IS(t1.c0))))) IS TRUE)  as count FROM rt0, t1, vt0, t0);
SELECT * FROM rt0, t1, vt0, t0 WHERE ((((~ (rt0.c3)))>=(((t0.c0)IS(t1.c0)))));
SELECT COUNT(*) FROM t1, rt0, vt0 WHERE ((((t1.c0, rt0.c0, CASE WHEN t1.c0 THEN rt0.c2 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END))<>((((((vt0.c0)AND(rt0.c3)))OR(rt0.c1)), ((rt0.c2) IS TRUE), CASE t1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN -4.76064956E8 THEN 'Ds}[' WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((t1.c0, rt0.c0, CASE WHEN t1.c0 THEN rt0.c2 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END))!=((((((vt0.c0)AND(rt0.c3)))OR(rt0.c1)), ((rt0.c2) IS TRUE), CASE t1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN -4.76064956E8 THEN 'Ds}[' WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END)))) IS TRUE)  as count FROM t1, rt0, vt0);
SELECT COUNT(*) FROM t1, rt0, vt0 WHERE ((((t1.c0, rt0.c0, CASE WHEN t1.c0 THEN rt0.c2 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END))<>((((((vt0.c0)AND(rt0.c3)))OR(rt0.c1)), ((rt0.c2) IS TRUE), CASE t1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN -4.76064956E8 THEN 'Ds}[' WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((t1.c0, rt0.c0, CASE WHEN t1.c0 THEN rt0.c2 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END))!=((((((vt0.c0)AND(rt0.c3)))OR(rt0.c1)), ((rt0.c2) IS TRUE), CASE t1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN -4.76064956E8 THEN 'Ds}[' WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END)))) IS TRUE)  as count FROM t1, rt0, vt0);
SELECT COUNT(*) FROM t1, rt0, vt0 WHERE ((((t1.c0, rt0.c0, CASE WHEN t1.c0 THEN rt0.c2 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END))<>((((((vt0.c0)AND(rt0.c3)))OR(rt0.c1)), ((rt0.c2) IS TRUE), CASE t1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN -4.76064956E8 THEN 'Ds}[' WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END))));
SELECT ALL * FROM t1, vt0, t0, rt0 WHERE ((((rt0.c3 IN (rt0.c1)))|((((rt0.c3)) NOT BETWEEN ((0.5835172147312621)) AND ((t1.c0)))))) ORDER BY (((x'', NULL, '129861638' COLLATE RTRIM))>((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)), ((t1.c0)-(rt0.c2)), CASE t0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE x'' END)));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN (rt0.c1)))|((((rt0.c3)) NOT BETWEEN ((0.5835172147312621)) AND ((t1.c0)))))) IS TRUE)  as count FROM t1, vt0, t0, rt0 ORDER BY (((x'', NULL, '129861638' COLLATE RTRIM))>((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)), ((t1.c0)-(rt0.c2)), CASE t0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE x'' END))));
SELECT ALL * FROM t1, vt0, t0, rt0 WHERE ((((rt0.c3 IN (rt0.c1)))|((((rt0.c3)) NOT BETWEEN ((0.5835172147312621)) AND ((t1.c0)))))) ORDER BY (((x'', NULL, '129861638' COLLATE RTRIM))>((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)), ((t1.c0)-(rt0.c2)), CASE t0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE x'' END)));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN (rt0.c1)))|((((rt0.c3)) NOT BETWEEN ((0.5835172147312621)) AND ((t1.c0)))))) IS TRUE)  as count FROM t1, vt0, t0, rt0 ORDER BY (((x'', NULL, '129861638' COLLATE RTRIM))>((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)), ((t1.c0)-(rt0.c2)), CASE t0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE x'' END))));
SELECT ALL * FROM t1, vt0, t0, rt0 WHERE ((((rt0.c3 IN (rt0.c1)))|((((rt0.c3)) NOT BETWEEN ((0.5835172147312621)) AND ((t1.c0)))))) ORDER BY (((x'', NULL, '129861638' COLLATE RTRIM))>((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)), ((t1.c0)-(rt0.c2)), CASE t0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE x'' END)));
SELECT * FROM t0, vt0, rt0, t1 WHERE (((((0.5904373672639021)-(vt0.c0))) NOT NULL)) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.5904373672639021)-(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM t0, vt0, rt0, t1 NOT INDEXED ORDER BY vt0.c0 ASC);
SELECT * FROM t0, vt0, rt0, t1 WHERE (((((0.5904373672639021)-(vt0.c0))) NOT NULL)) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.5904373672639021)-(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM t0, vt0, rt0, t1 NOT INDEXED ORDER BY vt0.c0 ASC);
SELECT * FROM t0, vt0, rt0, t1 WHERE (((((0.5904373672639021)-(vt0.c0))) NOT NULL)) ORDER BY vt0.c0 ASC;
SELECT COUNT(*) FROM rt0, t0, t1 WHERE (((t0.c0 COLLATE NOCASE)AND((t0.c0 IN ())))) ORDER BY ((0.16589683381398512)+(t0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE NOCASE)AND((t0.c0 IN ())))) IS TRUE)  as count FROM rt0, t0, t1 ORDER BY ((0.16589683381398512)+(t0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0, t1 WHERE (((t0.c0 COLLATE NOCASE)AND((t0.c0 IN ())))) ORDER BY ((0.16589683381398512)+(t0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE NOCASE)AND((t0.c0 IN ())))) IS TRUE)  as count FROM rt0, t0, t1 ORDER BY ((0.16589683381398512)+(t0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0, t1 WHERE (((t0.c0 COLLATE NOCASE)AND((t0.c0 IN ())))) ORDER BY ((0.16589683381398512)+(t0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT ALL * FROM t1, rt0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t1, rt0, vt0);
SELECT ALL * FROM t1, rt0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t1, rt0, vt0);
SELECT ALL * FROM t1, rt0, vt0 WHERE (vt0.c0);
SELECT * FROM t0 WHERE ((((((((t0.c0)AND(t0.c0)))OR(t0.c0))))<((0x5ab1c9e7)))) ORDER BY CAST(t0.c0 AS REAL) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((((((((t0.c0)AND(t0.c0)))OR(t0.c0))))<((0X5ab1c9e7)))) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c0 AS REAL) COLLATE BINARY ASC);
SELECT * FROM t0 WHERE ((((((((t0.c0)AND(t0.c0)))OR(t0.c0))))<((0x5ab1c9e7)))) ORDER BY CAST(t0.c0 AS REAL) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((((((((t0.c0)AND(t0.c0)))OR(t0.c0))))<((0X5ab1c9e7)))) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c0 AS REAL) COLLATE BINARY ASC);
SELECT * FROM t0 WHERE ((((((((t0.c0)AND(t0.c0)))OR(t0.c0))))<((0x5ab1c9e7)))) ORDER BY CAST(t0.c0 AS REAL) COLLATE BINARY ASC;
SELECT COUNT(*) FROM t1, vt0 WHERE (CAST((t1.c0 IN (vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((t1.c0 IN (vt0.c0)) AS REAL)) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (CAST((t1.c0 IN (vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((t1.c0 IN (vt0.c0)) AS REAL)) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (CAST((t1.c0 IN (vt0.c0)) AS REAL));
SELECT * FROM t1 WHERE (((COALESCE(DISTINCT t1.c0, t1.c0))>>(CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))) ORDER BY (((t1.c0)) BETWEEN ((CAST(t1.c0 AS NUMERIC))) AND ((((x'a6a8c1bd') ISNULL)))) ASC;
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT t1.c0, t1.c0))>>(CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0)) BETWEEN ((CAST(t1.c0 AS NUMERIC))) AND ((((x'a6a8c1bd') ISNULL)))) ASC);
SELECT * FROM t1 WHERE (((COALESCE(DISTINCT t1.c0, t1.c0))>>(CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))) ORDER BY (((t1.c0)) BETWEEN ((CAST(t1.c0 AS NUMERIC))) AND ((((x'a6a8c1bd') ISNULL)))) ASC;
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT t1.c0, t1.c0))>>(CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0)) BETWEEN ((CAST(t1.c0 AS NUMERIC))) AND ((((x'a6a8c1bd') ISNULL)))) ASC);
SELECT * FROM t1 WHERE (((COALESCE(DISTINCT t1.c0, t1.c0))>>(CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))) ORDER BY (((t1.c0)) BETWEEN ((CAST(t1.c0 AS NUMERIC))) AND ((((x'a6a8c1bd') ISNULL)))) ASC;
SELECT * FROM t1, rt0 WHERE ((+ (((rt0.c2) BETWEEN (rt0.c0) AND (t1.c0))))) ORDER BY (((rt0.c1, rt0.c0, rt0.c3)) BETWEEN ((LOWER(rt0.c0), (rt0.c3 IN ()), ((x'')*(rt0.c2)))) AND ((((rt0.c1) NOTNULL), (- (t1.c0)), ((((NULL)OR(t1.c0)))AND(rt0.c3))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c2) BETWEEN (rt0.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1, rt0 ORDER BY (((rt0.c1, rt0.c0, rt0.c3)) BETWEEN ((LOWER(rt0.c0), (rt0.c3 IN ()), ((x'')*(rt0.c2)))) AND ((((rt0.c1) NOTNULL), (- (t1.c0)), ((((NULL)OR(t1.c0)))AND(rt0.c3))))) DESC  NULLS FIRST);
SELECT * FROM t1, rt0 WHERE ((+ (((rt0.c2) BETWEEN (rt0.c0) AND (t1.c0))))) ORDER BY (((rt0.c1, rt0.c0, rt0.c3)) BETWEEN ((LOWER(rt0.c0), (rt0.c3 IN ()), ((x'')*(rt0.c2)))) AND ((((rt0.c1) NOTNULL), (- (t1.c0)), ((((NULL)OR(t1.c0)))AND(rt0.c3))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c2) BETWEEN (rt0.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1, rt0 ORDER BY (((rt0.c1, rt0.c0, rt0.c3)) BETWEEN ((LOWER(rt0.c0), (rt0.c3 IN ()), ((x'')*(rt0.c2)))) AND ((((rt0.c1) NOTNULL), (- (t1.c0)), ((((NULL)OR(t1.c0)))AND(rt0.c3))))) DESC  NULLS FIRST);
SELECT * FROM t1, rt0 WHERE ((+ (((rt0.c2) BETWEEN (rt0.c0) AND (t1.c0))))) ORDER BY (((rt0.c1, rt0.c0, rt0.c3)) BETWEEN ((LOWER(rt0.c0), (rt0.c3 IN ()), ((x'')*(rt0.c2)))) AND ((((rt0.c1) NOTNULL), (- (t1.c0)), ((((NULL)OR(t1.c0)))AND(rt0.c3))))) DESC  NULLS FIRST;
SELECT * FROM vt0, rt0 INNER JOIN t1 ON (((t1.c0 IN (rt0.c2))) NOTNULL) RIGHT OUTER JOIN t0 ON COALESCE(DISTINCT ((rt0.c0) ISNULL), (rt0.c3 IN ())) WHERE ((NOT (CAST(rt0.c3 AS INTEGER)))) ORDER BY ((t0.c0 COLLATE BINARY)>=(CASE rt0.c0  WHEN vt0.c0 THEN rt0.c3 WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN rt0.c1 ELSE rt0.c3 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(rt0.c3 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt0 INNER JOIN t1 ON (((t1.c0 IN (rt0.c2))) NOTNULL) RIGHT OUTER JOIN t0 ON COALESCE(DISTINCT ((rt0.c0) ISNULL), (rt0.c3 IN ())) ORDER BY ((t0.c0 COLLATE BINARY)>=(CASE rt0.c0  WHEN vt0.c0 THEN rt0.c3 WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN rt0.c1 ELSE rt0.c3 END)) DESC  NULLS LAST);
SELECT * FROM vt0, rt0 INNER JOIN t1 ON (((t1.c0 IN (rt0.c2))) NOTNULL) RIGHT OUTER JOIN t0 ON COALESCE(DISTINCT ((rt0.c0) ISNULL), (rt0.c3 IN ())) WHERE ((NOT (CAST(rt0.c3 AS INTEGER)))) ORDER BY ((t0.c0 COLLATE BINARY)>=(CASE rt0.c0  WHEN vt0.c0 THEN rt0.c3 WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN rt0.c1 ELSE rt0.c3 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(rt0.c3 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt0 INNER JOIN t1 ON (((t1.c0 IN (rt0.c2))) NOTNULL) RIGHT OUTER JOIN t0 ON COALESCE(DISTINCT ((rt0.c0) ISNULL), (rt0.c3 IN ())) ORDER BY ((t0.c0 COLLATE BINARY)>=(CASE rt0.c0  WHEN vt0.c0 THEN rt0.c3 WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN rt0.c1 ELSE rt0.c3 END)) DESC  NULLS LAST);
SELECT * FROM vt0, rt0 INNER JOIN t1 ON (((t1.c0 IN (rt0.c2))) NOTNULL) RIGHT OUTER JOIN t0 ON COALESCE(DISTINCT ((rt0.c0) ISNULL), (rt0.c3 IN ())) WHERE ((NOT (CAST(rt0.c3 AS INTEGER)))) ORDER BY ((t0.c0 COLLATE BINARY)>=(CASE rt0.c0  WHEN vt0.c0 THEN rt0.c3 WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN rt0.c1 ELSE rt0.c3 END)) DESC  NULLS LAST;
SELECT * FROM t0 INDEXED BY i82, t1, rt0 LEFT OUTER JOIN vt0 ON ((t0.c0 COLLATE BINARY)&(CAST(rt0.c2 AS BLOB))) WHERE ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c3)) IN ())) IS TRUE)  as count FROM t0 INDEXED BY i82, t1, rt0 LEFT OUTER JOIN vt0 ON ((t0.c0 COLLATE BINARY)&(CAST(rt0.c2 AS BLOB))));
SELECT * FROM t0 INDEXED BY i82, t1, rt0 LEFT OUTER JOIN vt0 ON ((t0.c0 COLLATE BINARY)&(CAST(rt0.c2 AS BLOB))) WHERE ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c3)) IN ())) IS TRUE)  as count FROM t0 INDEXED BY i82, t1, rt0 LEFT OUTER JOIN vt0 ON ((t0.c0 COLLATE BINARY)&(CAST(rt0.c2 AS BLOB))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0))) IS TRUE)) ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS TEXT))) AND (((vt0.c0 IN ())))) DESC  NULLS FIRST, ((CAST(vt0.c0 AS INTEGER))>(CAST(vt0.c0 AS INTEGER))) DESC  NULLS FIRST, vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS NOT(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS TEXT))) AND (((vt0.c0 IN ())))) DESC  NULLS FIRST, ((CAST(vt0.c0 AS INTEGER))>(CAST(vt0.c0 AS INTEGER))) DESC  NULLS FIRST, vt0.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0))) IS TRUE)) ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS TEXT))) AND (((vt0.c0 IN ())))) DESC  NULLS FIRST, ((CAST(vt0.c0 AS INTEGER))>(CAST(vt0.c0 AS INTEGER))) DESC  NULLS FIRST, vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS NOT(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS TEXT))) AND (((vt0.c0 IN ())))) DESC  NULLS FIRST, ((CAST(vt0.c0 AS INTEGER))>(CAST(vt0.c0 AS INTEGER))) DESC  NULLS FIRST, vt0.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0))) IS TRUE)) ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS TEXT))) AND (((vt0.c0 IN ())))) DESC  NULLS FIRST, ((CAST(vt0.c0 AS INTEGER))>(CAST(vt0.c0 AS INTEGER))) DESC  NULLS FIRST, vt0.c0 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((IFNULL(vt0.c0, vt0.c0))) AND ((STRFTIME(vt0.c0, vt0.c0, vt0.c0))))) ORDER BY ((0.3069132310407582 COLLATE NOCASE)<(((vt0.c0)IS NOT(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((IFNULL(vt0.c0, vt0.c0))) AND ((STRFTIME(vt0.c0, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((0.3069132310407582 COLLATE NOCASE)<(((vt0.c0)IS NOT(vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((IFNULL(vt0.c0, vt0.c0))) AND ((STRFTIME(vt0.c0, vt0.c0, vt0.c0))))) ORDER BY ((0.3069132310407582 COLLATE NOCASE)<(((vt0.c0)IS NOT(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((IFNULL(vt0.c0, vt0.c0))) AND ((STRFTIME(vt0.c0, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((0.3069132310407582 COLLATE NOCASE)<(((vt0.c0)IS NOT(vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((IFNULL(vt0.c0, vt0.c0))) AND ((STRFTIME(vt0.c0, vt0.c0, vt0.c0))))) ORDER BY ((0.3069132310407582 COLLATE NOCASE)<(((vt0.c0)IS NOT(vt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0, t0, t1 WHERE ((~ ((NOT (rt0.c2))))) ORDER BY ((((((((((((((t1.c0)<(rt0.c2)))OR(rt0.c1 COLLATE RTRIM)))OR(((rt0.c2)IS NOT(vt0.c0)))))AND((rt0.c3 IN (t1.c0)))))AND((vt0.c0 IN ()))))AND(rt0.c1 COLLATE NOCASE)))AND(NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0, t0, t1 ORDER BY ((((((((((((((t1.c0)<(rt0.c2)))OR(rt0.c1 COLLATE RTRIM)))OR(((rt0.c2)IS NOT(vt0.c0)))))AND((rt0.c3 IN (t1.c0)))))AND((vt0.c0 IN ()))))AND(rt0.c1 COLLATE NOCASE)))AND(NULL))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, t0, t1 WHERE ((~ ((NOT (rt0.c2))))) ORDER BY ((((((((((((((t1.c0)<(rt0.c2)))OR(rt0.c1 COLLATE RTRIM)))OR(((rt0.c2)IS NOT(vt0.c0)))))AND((rt0.c3 IN (t1.c0)))))AND((vt0.c0 IN ()))))AND(rt0.c1 COLLATE NOCASE)))AND(NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0, t0, t1 ORDER BY ((((((((((((((t1.c0)<(rt0.c2)))OR(rt0.c1 COLLATE RTRIM)))OR(((rt0.c2)IS NOT(vt0.c0)))))AND((rt0.c3 IN (t1.c0)))))AND((vt0.c0 IN ()))))AND(rt0.c1 COLLATE NOCASE)))AND(NULL))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((((((rt0.c1)AND(((((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c0)))))OR(UPPER(rt0.c1))))OR((((rt0.c0)) BETWEEN (('XJKTcuP')) AND ((rt0.c1))))))OR((NOT (rt0.c1))))) ORDER BY CASE CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END  WHEN ((rt0.c0)<=(NULL)) THEN UNLIKELY(DISTINCT '') WHEN ((rt0.c1)<=(rt0.c0)) THEN '-1487822176' WHEN rt0.c3 COLLATE NOCASE THEN LIKELIHOOD(DISTINCT rt0.c2, 0.5990876009305357) ELSE (+ (rt0.c1)) END ASC, (CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END IN ()) ASC  NULLS FIRST, (((rt0.c2, rt0.c3, rt0.c3)) BETWEEN ((((rt0.c1) IS FALSE), CAST(rt0.c2 AS BLOB), (rt0.c3 IN ()))) AND (((- (rt0.c1)), CAST('-1225980290' AS NUMERIC), rt0.c3 COLLATE RTRIM))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1)AND(((((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c0)))))OR(UPPER(rt0.c1))))OR((((rt0.c0)) BETWEEN (('XJKTcuP')) AND ((rt0.c1))))))OR((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CASE CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END  WHEN ((rt0.c0)<=(NULL)) THEN UNLIKELY(DISTINCT '') WHEN ((rt0.c1)<=(rt0.c0)) THEN '-1487822176' WHEN rt0.c3 COLLATE NOCASE THEN LIKELIHOOD(DISTINCT rt0.c2, 0.5990876009305357) ELSE (+ (rt0.c1)) END ASC, (CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END IN ()) ASC  NULLS FIRST, (((rt0.c2, rt0.c3, rt0.c3)) BETWEEN ((((rt0.c1) IS FALSE), CAST(rt0.c2 AS BLOB), (rt0.c3 IN ()))) AND (((- (rt0.c1)), CAST('-1225980290' AS NUMERIC), rt0.c3 COLLATE RTRIM))) DESC);
SELECT * FROM rt0 WHERE (((((((((rt0.c1)AND(((((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c0)))))OR(UPPER(rt0.c1))))OR((((rt0.c0)) BETWEEN (('XJKTcuP')) AND ((rt0.c1))))))OR((NOT (rt0.c1))))) ORDER BY CASE CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END  WHEN ((rt0.c0)<=(NULL)) THEN UNLIKELY(DISTINCT '') WHEN ((rt0.c1)<=(rt0.c0)) THEN '-1487822176' WHEN rt0.c3 COLLATE NOCASE THEN LIKELIHOOD(DISTINCT rt0.c2, 0.5990876009305357) ELSE (+ (rt0.c1)) END ASC, (CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END IN ()) ASC  NULLS FIRST, (((rt0.c2, rt0.c3, rt0.c3)) BETWEEN ((((rt0.c1) IS FALSE), CAST(rt0.c2 AS BLOB), (rt0.c3 IN ()))) AND (((- (rt0.c1)), CAST('-1225980290' AS NUMERIC), rt0.c3 COLLATE RTRIM))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1)AND(((((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c0)))))OR(UPPER(rt0.c1))))OR((((rt0.c0)) BETWEEN (('XJKTcuP')) AND ((rt0.c1))))))OR((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CASE CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END  WHEN ((rt0.c0)<=(NULL)) THEN UNLIKELY(DISTINCT '') WHEN ((rt0.c1)<=(rt0.c0)) THEN '-1487822176' WHEN rt0.c3 COLLATE NOCASE THEN LIKELIHOOD(DISTINCT rt0.c2, 0.5990876009305357) ELSE (+ (rt0.c1)) END ASC, (CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END IN ()) ASC  NULLS FIRST, (((rt0.c2, rt0.c3, rt0.c3)) BETWEEN ((((rt0.c1) IS FALSE), CAST(rt0.c2 AS BLOB), (rt0.c3 IN ()))) AND (((- (rt0.c1)), CAST('-1225980290' AS NUMERIC), rt0.c3 COLLATE RTRIM))) DESC);
SELECT * FROM rt0 WHERE (((((((((rt0.c1)AND(((((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c0)))))OR(UPPER(rt0.c1))))OR((((rt0.c0)) BETWEEN (('XJKTcuP')) AND ((rt0.c1))))))OR((NOT (rt0.c1))))) ORDER BY CASE CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END  WHEN ((rt0.c0)<=(NULL)) THEN UNLIKELY(DISTINCT '') WHEN ((rt0.c1)<=(rt0.c0)) THEN '-1487822176' WHEN rt0.c3 COLLATE NOCASE THEN LIKELIHOOD(DISTINCT rt0.c2, 0.5990876009305357) ELSE (+ (rt0.c1)) END ASC, (CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END IN ()) ASC  NULLS FIRST, (((rt0.c2, rt0.c3, rt0.c3)) BETWEEN ((((rt0.c1) IS FALSE), CAST(rt0.c2 AS BLOB), (rt0.c3 IN ()))) AND (((- (rt0.c1)), CAST('-1225980290' AS NUMERIC), rt0.c3 COLLATE RTRIM))) DESC;
SELECT ALL COUNT(*) FROM t0, vt0, t1, rt0 WHERE (((rt0.c2)/(t1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)/(t1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, t1, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, t1, rt0 WHERE (((rt0.c2)/(t1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)/(t1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, t1, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, t1, rt0 WHERE (((rt0.c2)/(t1.c0)) COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE ((((((+ (vt0.c0)))AND(NULL)))OR((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (vt0.c0)))AND(NULL)))OR((~ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((+ (vt0.c0)))AND(NULL)))OR((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (vt0.c0)))AND(NULL)))OR((~ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((+ (vt0.c0)))AND(NULL)))OR((~ (vt0.c0)))));
SELECT COUNT(*) FROM t1 WHERE (CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0))  WHEN (t1.c0 IN ()) THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) ELSE ((((t1.c0)OR('557352130')))AND(-776737641)) END) ORDER BY t1.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0))  WHEN (t1.c0 IN ()) THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) ELSE ((((t1.c0)OR('557352130')))AND(-776737641)) END) IS TRUE)  as count FROM t1 ORDER BY t1.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0))  WHEN (t1.c0 IN ()) THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) ELSE ((((t1.c0)OR('557352130')))AND(-776737641)) END) ORDER BY t1.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0))  WHEN (t1.c0 IN ()) THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) ELSE ((((t1.c0)OR('557352130')))AND(-776737641)) END) IS TRUE)  as count FROM t1 ORDER BY t1.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0))  WHEN (t1.c0 IN ()) THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) ELSE ((((t1.c0)OR('557352130')))AND(-776737641)) END) ORDER BY t1.c0 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NULL)) BETWEEN ((((vt0.c0)<(vt0.c0)))) AND (((((vt0.c0))==((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL)) BETWEEN ((((vt0.c0)<(vt0.c0)))) AND (((((vt0.c0))=((vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NULL)) BETWEEN ((((vt0.c0)<(vt0.c0)))) AND (((((vt0.c0))==((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL)) BETWEEN ((((vt0.c0)<(vt0.c0)))) AND (((((vt0.c0))=((vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NULL)) BETWEEN ((((vt0.c0)<(vt0.c0)))) AND (((((vt0.c0))==((vt0.c0)))))));
SELECT * FROM rt0, t0, vt0, t1 WHERE (COALESCE(DISTINCT t1.c0 COLLATE RTRIM, ((((t0.c0)AND(rt0.c3)))OR(rt0.c2)))) ORDER BY ((((t1.c0) BETWEEN (t1.c0) AND (vt0.c0))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT t1.c0 COLLATE RTRIM, ((((t0.c0)AND(rt0.c3)))OR(rt0.c2)))) IS TRUE)  as count FROM rt0, t0, vt0, t1 ORDER BY ((((t1.c0) BETWEEN (t1.c0) AND (vt0.c0))) IS FALSE) ASC);
SELECT * FROM rt0, t0, vt0, t1 WHERE (COALESCE(DISTINCT t1.c0 COLLATE RTRIM, ((((t0.c0)AND(rt0.c3)))OR(rt0.c2)))) ORDER BY ((((t1.c0) BETWEEN (t1.c0) AND (vt0.c0))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT t1.c0 COLLATE RTRIM, ((((t0.c0)AND(rt0.c3)))OR(rt0.c2)))) IS TRUE)  as count FROM rt0, t0, vt0, t1 ORDER BY ((((t1.c0) BETWEEN (t1.c0) AND (vt0.c0))) IS FALSE) ASC);
SELECT * FROM rt0, t0, vt0, t1 WHERE (COALESCE(DISTINCT t1.c0 COLLATE RTRIM, ((((t0.c0)AND(rt0.c3)))OR(rt0.c2)))) ORDER BY ((((t1.c0) BETWEEN (t1.c0) AND (vt0.c0))) IS FALSE) ASC;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((rt0.c3) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c3) NOT NULL) IN ())) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((rt0.c3) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c3) NOT NULL) IN ())) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((rt0.c3) NOT NULL) IN ()));
SELECT ALL * FROM vt0, t1 WHERE ((('a')!=(RTRIM(t1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((('a')<>(RTRIM(t1.c0)))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE ((('a')!=(RTRIM(t1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((('a')<>(RTRIM(t1.c0)))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE ((('a')!=(RTRIM(t1.c0))));
SELECT ALL * FROM t1, t0, vt0, rt0 WHERE (((((vt0.c0) IS FALSE))+((('1808144790')IS(rt0.c1))))) ORDER BY ((CAST(rt0.c3 AS REAL)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE))+((('1808144790')IS(rt0.c1))))) IS TRUE)  as count FROM t1, t0, vt0, rt0 ORDER BY ((CAST(rt0.c3 AS REAL)) IS TRUE) DESC);
SELECT ALL * FROM t1, t0, vt0, rt0 WHERE (((((vt0.c0) IS FALSE))+((('1808144790')IS(rt0.c1))))) ORDER BY ((CAST(rt0.c3 AS REAL)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE))+((('1808144790')IS(rt0.c1))))) IS TRUE)  as count FROM t1, t0, vt0, rt0 ORDER BY ((CAST(rt0.c3 AS REAL)) IS TRUE) DESC);
SELECT ALL * FROM t1, t0, vt0, rt0 WHERE (((((vt0.c0) IS FALSE))+((('1808144790')IS(rt0.c1))))) ORDER BY ((CAST(rt0.c3 AS REAL)) IS TRUE) DESC;
SELECT * FROM vt0, t0 WHERE ((((((vt0.c0))<((x''))))!=(((t0.c0)-(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<((x''))))!=(((t0.c0)-(t0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((((vt0.c0))<((x''))))!=(((t0.c0)-(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<((x''))))!=(((t0.c0)-(t0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((((vt0.c0))<((x''))))!=(((t0.c0)-(t0.c0)))));
SELECT COUNT(*) FROM t0, t1, vt0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, t1, vt0, rt0);
SELECT COUNT(*) FROM t0, t1, vt0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, t1, vt0, rt0);
SELECT COUNT(*) FROM t0, t1, vt0, rt0 WHERE (NULL);
SELECT COUNT(*) FROM vt0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CHANGES());
SELECT ALL COUNT(*) FROM rt0, t1, vt0, t0 WHERE (vt0.c0 COLLATE BINARY COLLATE NOCASE COLLATE RTRIM) ORDER BY HEX(((rt0.c3)|(rt0.c2))) ASC  NULLS LAST, ((rt0.c3)&(((rt0.c2)|(x'b3ad')))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE BINARY COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM rt0, t1, vt0, t0 ORDER BY HEX(((rt0.c3)|(rt0.c2))) ASC  NULLS LAST, ((rt0.c3)&(((rt0.c2)|(x'b3ad')))) ASC);
SELECT ALL COUNT(*) FROM rt0, t1, vt0, t0 WHERE (vt0.c0 COLLATE BINARY COLLATE NOCASE COLLATE RTRIM) ORDER BY HEX(((rt0.c3)|(rt0.c2))) ASC  NULLS LAST, ((rt0.c3)&(((rt0.c2)|(x'b3ad')))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE BINARY COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM rt0, t1, vt0, t0 ORDER BY HEX(((rt0.c3)|(rt0.c2))) ASC  NULLS LAST, ((rt0.c3)&(((rt0.c2)|(x'b3ad')))) ASC);
SELECT ALL COUNT(*) FROM rt0, t1, vt0, t0 WHERE (vt0.c0 COLLATE BINARY COLLATE NOCASE COLLATE RTRIM) ORDER BY HEX(((rt0.c3)|(rt0.c2))) ASC  NULLS LAST, ((rt0.c3)&(((rt0.c2)|(x'b3ad')))) ASC;
SELECT ALL COUNT(*) FROM vt0, t0, rt0, t1 WHERE (rt0.c3) ORDER BY ((rt0.c3)IS NOT(rt0.c1)) COLLATE RTRIM DESC, (((t1.c0, t1.c0, rt0.c3)) NOT BETWEEN ((CAST(t1.c0 AS TEXT), vt0.c0 COLLATE BINARY, ((t0.c0)GLOB(t0.c0)))) AND ((CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c0 ELSE vt0.c0 END, ((rt0.c1) NOT NULL), ((x'') NOT NULL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM vt0, t0, rt0, t1 ORDER BY ((rt0.c3)IS NOT(rt0.c1)) COLLATE RTRIM DESC, (((t1.c0, t1.c0, rt0.c3)) NOT BETWEEN ((CAST(t1.c0 AS TEXT), vt0.c0 COLLATE BINARY, ((t0.c0)GLOB(t0.c0)))) AND ((CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c0 ELSE vt0.c0 END, ((rt0.c1) NOT NULL), ((x'') NOT NULL)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0, t1 WHERE (rt0.c3) ORDER BY ((rt0.c3)IS NOT(rt0.c1)) COLLATE RTRIM DESC, (((t1.c0, t1.c0, rt0.c3)) NOT BETWEEN ((CAST(t1.c0 AS TEXT), vt0.c0 COLLATE BINARY, ((t0.c0)GLOB(t0.c0)))) AND ((CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c0 ELSE vt0.c0 END, ((rt0.c1) NOT NULL), ((x'') NOT NULL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM vt0, t0, rt0, t1 ORDER BY ((rt0.c3)IS NOT(rt0.c1)) COLLATE RTRIM DESC, (((t1.c0, t1.c0, rt0.c3)) NOT BETWEEN ((CAST(t1.c0 AS TEXT), vt0.c0 COLLATE BINARY, ((t0.c0)GLOB(t0.c0)))) AND ((CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c0 ELSE vt0.c0 END, ((rt0.c1) NOT NULL), ((x'') NOT NULL)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0, t1 WHERE (rt0.c3) ORDER BY ((rt0.c3)IS NOT(rt0.c1)) COLLATE RTRIM DESC, (((t1.c0, t1.c0, rt0.c3)) NOT BETWEEN ((CAST(t1.c0 AS TEXT), vt0.c0 COLLATE BINARY, ((t0.c0)GLOB(t0.c0)))) AND ((CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c0 ELSE vt0.c0 END, ((rt0.c1) NOT NULL), ((x'') NOT NULL)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE ((CAST('Lwl' AS TEXT) IN ())) ORDER BY LIKE(((((((((rt0.c1)OR(rt0.c3)))AND(vt0.c0)))AND(0.762238420389209)))AND(rt0.c0)), (('1949605658') IS FALSE), '.') DESC;
SELECT SUM(count) FROM (SELECT (((CAST('Lwl' AS TEXT) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY LIKE(((((((((rt0.c1)OR(rt0.c3)))AND(vt0.c0)))AND(0.762238420389209)))AND(rt0.c0)), (('1949605658') IS FALSE), '.') DESC);
SELECT ALL * FROM vt0, rt0 WHERE ((CAST('Lwl' AS TEXT) IN ())) ORDER BY LIKE(((((((((rt0.c1)OR(rt0.c3)))AND(vt0.c0)))AND(0.762238420389209)))AND(rt0.c0)), (('1949605658') IS FALSE), '.') DESC;
SELECT SUM(count) FROM (SELECT (((CAST('Lwl' AS TEXT) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY LIKE(((((((((rt0.c1)OR(rt0.c3)))AND(vt0.c0)))AND(0.762238420389209)))AND(rt0.c0)), (('1949605658') IS FALSE), '.') DESC);
SELECT ALL * FROM vt0, rt0 WHERE ((CAST('Lwl' AS TEXT) IN ())) ORDER BY LIKE(((((((((rt0.c1)OR(rt0.c3)))AND(vt0.c0)))AND(0.762238420389209)))AND(rt0.c0)), (('1949605658') IS FALSE), '.') DESC;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t1 ON (((t1.c0)) BETWEEN (((((t1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))) AND ((LAST_INSERT_ROWID()))) FULL OUTER JOIN t0 ON ((((0.9131478438061247) BETWEEN (NULL) AND (t0.c0)))<=(t1.c0)) WHERE (vt0.c0) ORDER BY (((vt0.c0)) BETWEEN ((((x'') BETWEEN (t1.c0) AND (vt0.c0)))) AND ((CAST(vt0.c0 AS TEXT)))) DESC  NULLS LAST, ((((t1.c0)*(t0.c0))) BETWEEN (CASE '1910162723'  WHEN t1.c0 THEN NULL END) AND (CASE WHEN t1.c0 THEN t1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON (((t1.c0)) BETWEEN (((((t1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))) AND ((LAST_INSERT_ROWID()))) FULL OUTER JOIN t0 ON ((((0.9131478438061247) BETWEEN (NULL) AND (t0.c0)))<=(t1.c0)) ORDER BY (((vt0.c0)) BETWEEN ((((x'') BETWEEN (t1.c0) AND (vt0.c0)))) AND ((CAST(vt0.c0 AS TEXT)))) DESC  NULLS LAST, ((((t1.c0)*(t0.c0))) BETWEEN (CASE '1910162723'  WHEN t1.c0 THEN NULL END) AND (CASE WHEN t1.c0 THEN t1.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t1 ON (((t1.c0)) BETWEEN (((((t1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))) AND ((LAST_INSERT_ROWID()))) FULL OUTER JOIN t0 ON ((((0.9131478438061247) BETWEEN (NULL) AND (t0.c0)))<=(t1.c0)) WHERE (vt0.c0) ORDER BY (((vt0.c0)) BETWEEN ((((x'') BETWEEN (t1.c0) AND (vt0.c0)))) AND ((CAST(vt0.c0 AS TEXT)))) DESC  NULLS LAST, ((((t1.c0)*(t0.c0))) BETWEEN (CASE '1910162723'  WHEN t1.c0 THEN NULL END) AND (CASE WHEN t1.c0 THEN t1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON (((t1.c0)) BETWEEN (((((t1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))) AND ((LAST_INSERT_ROWID()))) FULL OUTER JOIN t0 ON ((((0.9131478438061247) BETWEEN (NULL) AND (t0.c0)))<=(t1.c0)) ORDER BY (((vt0.c0)) BETWEEN ((((x'') BETWEEN (t1.c0) AND (vt0.c0)))) AND ((CAST(vt0.c0 AS TEXT)))) DESC  NULLS LAST, ((((t1.c0)*(t0.c0))) BETWEEN (CASE '1910162723'  WHEN t1.c0 THEN NULL END) AND (CASE WHEN t1.c0 THEN t1.c0 END))  NULLS LAST);
SELECT * FROM t1 FULL OUTER JOIN t0 ON (((vt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN (((~ (t0.c0)), ((t0.c0)!=(rt0.c0)), CAST(rt0.c3 AS REAL))) AND ((((((t0.c0)AND(rt0.c3)))AND(rt0.c2)), ((((((((t0.c0)AND(rt0.c3)))OR(t1.c0)))OR(t1.c0)))OR(rt0.c3)), (((rt0.c2, t1.c0, rt0.c0))>=((rt0.c0, rt0.c3, t0.c0)))))) RIGHT OUTER JOIN rt0 ON (rt0.c1 IN ()) COLLATE RTRIM CROSS JOIN vt0 ON ((rt0.c1)*(t0.c0 COLLATE NOCASE)) WHERE (((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM t1 FULL OUTER JOIN t0 ON (((vt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN (((~ (t0.c0)), ((t0.c0)!=(rt0.c0)), CAST(rt0.c3 AS REAL))) AND ((((((t0.c0)AND(rt0.c3)))AND(rt0.c2)), ((((((((t0.c0)AND(rt0.c3)))OR(t1.c0)))OR(t1.c0)))OR(rt0.c3)), (((rt0.c2, t1.c0, rt0.c0))>=((rt0.c0, rt0.c3, t0.c0)))))) RIGHT OUTER JOIN rt0 ON (rt0.c1 IN ()) COLLATE RTRIM CROSS JOIN vt0 ON ((rt0.c1)*(t0.c0 COLLATE NOCASE)));
SELECT * FROM t1 FULL OUTER JOIN t0 ON (((vt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN (((~ (t0.c0)), ((t0.c0)!=(rt0.c0)), CAST(rt0.c3 AS REAL))) AND ((((((t0.c0)AND(rt0.c3)))AND(rt0.c2)), ((((((((t0.c0)AND(rt0.c3)))OR(t1.c0)))OR(t1.c0)))OR(rt0.c3)), (((rt0.c2, t1.c0, rt0.c0))>=((rt0.c0, rt0.c3, t0.c0)))))) RIGHT OUTER JOIN rt0 ON (rt0.c1 IN ()) COLLATE RTRIM CROSS JOIN vt0 ON ((rt0.c1)*(t0.c0 COLLATE NOCASE)) WHERE (((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM t1 FULL OUTER JOIN t0 ON (((vt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN (((~ (t0.c0)), ((t0.c0)!=(rt0.c0)), CAST(rt0.c3 AS REAL))) AND ((((((t0.c0)AND(rt0.c3)))AND(rt0.c2)), ((((((((t0.c0)AND(rt0.c3)))OR(t1.c0)))OR(t1.c0)))OR(rt0.c3)), (((rt0.c2, t1.c0, rt0.c0))>=((rt0.c0, rt0.c3, t0.c0)))))) RIGHT OUTER JOIN rt0 ON (rt0.c1 IN ()) COLLATE RTRIM CROSS JOIN vt0 ON ((rt0.c1)*(t0.c0 COLLATE NOCASE)));
SELECT * FROM t1, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (x'');
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))<(CASE WHEN t0.c0 THEN NULL ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))<(CASE WHEN t0.c0 THEN NULL ELSE t0.c0 END))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))<(CASE WHEN t0.c0 THEN NULL ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))<(CASE WHEN t0.c0 THEN NULL ELSE t0.c0 END))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))<(CASE WHEN t0.c0 THEN NULL ELSE t0.c0 END)));
SELECT COUNT(*) FROM rt0, vt0, t0, t1 WHERE ((((rt0.c1 IN (rt0.c3))) BETWEEN (((t1.c0)<=(rt0.c2))) AND ('')));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (rt0.c3))) BETWEEN (((t1.c0)<=(rt0.c2))) AND (''))) IS TRUE)  as count FROM rt0, vt0, t0, t1);
SELECT COUNT(*) FROM rt0, vt0, t0, t1 WHERE ((((rt0.c1 IN (rt0.c3))) BETWEEN (((t1.c0)<=(rt0.c2))) AND ('')));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (rt0.c3))) BETWEEN (((t1.c0)<=(rt0.c2))) AND (''))) IS TRUE)  as count FROM rt0, vt0, t0, t1);
SELECT COUNT(*) FROM rt0, vt0, t0, t1 WHERE ((((rt0.c1 IN (rt0.c3))) BETWEEN (((t1.c0)<=(rt0.c2))) AND ('')));
SELECT COUNT(*) FROM t1 WHERE ((('c nC')%(t1.c0))) ORDER BY CAST(((t1.c0)>=(t1.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT (((('c nC')%(t1.c0))) IS TRUE)  as count FROM t1 ORDER BY CAST(((t1.c0)>=(t1.c0)) AS BLOB));
SELECT COUNT(*) FROM t1 WHERE ((('c nC')%(t1.c0))) ORDER BY CAST(((t1.c0)>=(t1.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT (((('c nC')%(t1.c0))) IS TRUE)  as count FROM t1 ORDER BY CAST(((t1.c0)>=(t1.c0)) AS BLOB));
SELECT COUNT(*) FROM t1 WHERE ((('c nC')%(t1.c0))) ORDER BY CAST(((t1.c0)>=(t1.c0)) AS BLOB);
SELECT COUNT(*) FROM rt0, t1 WHERE (CASE ((rt0.c3)&(t1.c0))  WHEN (- (rt0.c1)) THEN COALESCE(rt0.c2, rt0.c1) WHEN t1.c0 THEN rt0.c3 WHEN (rt0.c3 IN ()) THEN ((rt0.c2)IS NOT(rt0.c3)) ELSE (((rt0.c3))>((rt0.c1))) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c3)&(t1.c0))  WHEN (- (rt0.c1)) THEN COALESCE(rt0.c2, rt0.c1) WHEN t1.c0 THEN rt0.c3 WHEN (rt0.c3 IN ()) THEN ((rt0.c2)IS NOT(rt0.c3)) ELSE (((rt0.c3))>((rt0.c1))) END) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE (CASE ((rt0.c3)&(t1.c0))  WHEN (- (rt0.c1)) THEN COALESCE(rt0.c2, rt0.c1) WHEN t1.c0 THEN rt0.c3 WHEN (rt0.c3 IN ()) THEN ((rt0.c2)IS NOT(rt0.c3)) ELSE (((rt0.c3))>((rt0.c1))) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c3)&(t1.c0))  WHEN (- (rt0.c1)) THEN COALESCE(rt0.c2, rt0.c1) WHEN t1.c0 THEN rt0.c3 WHEN (rt0.c3 IN ()) THEN ((rt0.c2)IS NOT(rt0.c3)) ELSE (((rt0.c3))>((rt0.c1))) END) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE (CASE ((rt0.c3)&(t1.c0))  WHEN (- (rt0.c1)) THEN COALESCE(rt0.c2, rt0.c1) WHEN t1.c0 THEN rt0.c3 WHEN (rt0.c3 IN ()) THEN ((rt0.c2)IS NOT(rt0.c3)) ELSE (((rt0.c3))>((rt0.c1))) END);
SELECT COUNT(*) FROM t1 CROSS JOIN rt0 ON CASE WHEN ((x'')GLOB(rt0.c0)) THEN ((rt0.c1)GLOB('᣻<')) WHEN (((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t1.c0))) THEN CASE WHEN rt0.c2 THEN rt0.c0 END WHEN ((rt0.c1) ISNULL) THEN ((rt0.c0)=(0x39cb61c6)) ELSE (- (rt0.c2)) END LEFT OUTER JOIN t0 ON (CAST(rt0.c1 AS NUMERIC) IN ()) WHERE (ABS(DISTINCT t0.c0));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT t0.c0)) IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON CASE WHEN ((x'')GLOB(rt0.c0)) THEN ((rt0.c1)GLOB('᣻<')) WHEN (((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t1.c0))) THEN CASE WHEN rt0.c2 THEN rt0.c0 END WHEN ((rt0.c1) ISNULL) THEN ((rt0.c0)=(0X39cb61c6)) ELSE (- (rt0.c2)) END LEFT OUTER JOIN t0 ON (CAST(rt0.c1 AS NUMERIC) IN ()));
SELECT COUNT(*) FROM t1 CROSS JOIN rt0 ON CASE WHEN ((x'')GLOB(rt0.c0)) THEN ((rt0.c1)GLOB('᣻<')) WHEN (((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t1.c0))) THEN CASE WHEN rt0.c2 THEN rt0.c0 END WHEN ((rt0.c1) ISNULL) THEN ((rt0.c0)=(0x39cb61c6)) ELSE (- (rt0.c2)) END LEFT OUTER JOIN t0 ON (CAST(rt0.c1 AS NUMERIC) IN ()) WHERE (ABS(DISTINCT t0.c0));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT t0.c0)) IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON CASE WHEN ((x'')GLOB(rt0.c0)) THEN ((rt0.c1)GLOB('᣻<')) WHEN (((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t1.c0))) THEN CASE WHEN rt0.c2 THEN rt0.c0 END WHEN ((rt0.c1) ISNULL) THEN ((rt0.c0)=(0X39cb61c6)) ELSE (- (rt0.c2)) END LEFT OUTER JOIN t0 ON (CAST(rt0.c1 AS NUMERIC) IN ()));
SELECT COUNT(*) FROM t1 CROSS JOIN rt0 ON CASE WHEN ((x'')GLOB(rt0.c0)) THEN ((rt0.c1)GLOB('᣻<')) WHEN (((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t1.c0))) THEN CASE WHEN rt0.c2 THEN rt0.c0 END WHEN ((rt0.c1) ISNULL) THEN ((rt0.c0)=(0x39cb61c6)) ELSE (- (rt0.c2)) END LEFT OUTER JOIN t0 ON (CAST(rt0.c1 AS NUMERIC) IN ()) WHERE (ABS(DISTINCT t0.c0));
SELECT COUNT(*) FROM vt0, t0, t1, rt0 WHERE (t1.c0) ORDER BY CAST(CASE WHEN rt0.c3 THEN t0.c0 END AS BLOB) DESC, (((rt0.c1 COLLATE NOCASE, LIKELIHOOD(DISTINCT rt0.c3, 0.2550999830367551), (('') BETWEEN (rt0.c3) AND (t0.c0))))<((((t0.c0) ISNULL), ABS(DISTINCT t0.c0), (NOT (vt0.c0))))), ((vt0.c0 COLLATE BINARY)AND((- (t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM vt0, t0, t1, rt0 ORDER BY CAST(CASE WHEN rt0.c3 THEN t0.c0 END AS BLOB) DESC, (((rt0.c1 COLLATE NOCASE, LIKELIHOOD(DISTINCT rt0.c3, 0.2550999830367551), (('') BETWEEN (rt0.c3) AND (t0.c0))))<((((t0.c0) ISNULL), ABS(DISTINCT t0.c0), (NOT (vt0.c0))))), ((vt0.c0 COLLATE BINARY)AND((- (t1.c0)))));
SELECT COUNT(*) FROM vt0, t0, t1, rt0 WHERE (t1.c0) ORDER BY CAST(CASE WHEN rt0.c3 THEN t0.c0 END AS BLOB) DESC, (((rt0.c1 COLLATE NOCASE, LIKELIHOOD(DISTINCT rt0.c3, 0.2550999830367551), (('') BETWEEN (rt0.c3) AND (t0.c0))))<((((t0.c0) ISNULL), ABS(DISTINCT t0.c0), (NOT (vt0.c0))))), ((vt0.c0 COLLATE BINARY)AND((- (t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM vt0, t0, t1, rt0 ORDER BY CAST(CASE WHEN rt0.c3 THEN t0.c0 END AS BLOB) DESC, (((rt0.c1 COLLATE NOCASE, LIKELIHOOD(DISTINCT rt0.c3, 0.2550999830367551), (('') BETWEEN (rt0.c3) AND (t0.c0))))<((((t0.c0) ISNULL), ABS(DISTINCT t0.c0), (NOT (vt0.c0))))), ((vt0.c0 COLLATE BINARY)AND((- (t1.c0)))));
SELECT COUNT(*) FROM vt0, t0, t1, rt0 WHERE (t1.c0) ORDER BY CAST(CASE WHEN rt0.c3 THEN t0.c0 END AS BLOB) DESC, (((rt0.c1 COLLATE NOCASE, LIKELIHOOD(DISTINCT rt0.c3, 0.2550999830367551), (('') BETWEEN (rt0.c3) AND (t0.c0))))<((((t0.c0) ISNULL), ABS(DISTINCT t0.c0), (NOT (vt0.c0))))), ((vt0.c0 COLLATE BINARY)AND((- (t1.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE vt0.c0 END)OR(TRIM(vt0.c0, vt0.c0))))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE vt0.c0 END)OR(TRIM(vt0.c0, vt0.c0))))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE vt0.c0 END)OR(TRIM(vt0.c0, vt0.c0))))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE vt0.c0 END)OR(TRIM(vt0.c0, vt0.c0))))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE vt0.c0 END)OR(TRIM(vt0.c0, vt0.c0))))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0)))%((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY TYPEOF(DISTINCT ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))%((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF(DISTINCT ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0)))%((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY TYPEOF(DISTINCT ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))%((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF(DISTINCT ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0)))%((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY TYPEOF(DISTINCT ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c0) NOT NULL))AND(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT NULL))AND(t0.c0))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c0) NOT NULL))AND(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT NULL))AND(t0.c0))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c0) NOT NULL))AND(t0.c0)));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (vt0.c0) ORDER BY CAST(CAST(vt0.c0 AS BLOB) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t1, vt0 ORDER BY CAST(CAST(vt0.c0 AS BLOB) AS NUMERIC) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (vt0.c0) ORDER BY CAST(CAST(vt0.c0 AS BLOB) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t1, vt0 ORDER BY CAST(CAST(vt0.c0 AS BLOB) AS NUMERIC) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (vt0.c0) ORDER BY CAST(CAST(vt0.c0 AS BLOB) AS NUMERIC) ASC  NULLS LAST;
SELECT ALL * FROM t1 NOT INDEXED, rt0, vt0 WHERE (x'') ORDER BY ((CAST(t1.c0 AS TEXT))>>((rt0.c3 IN (t1.c0, rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY ((CAST(t1.c0 AS TEXT))>>((rt0.c3 IN (t1.c0, rt0.c2)))));
SELECT ALL * FROM t1 NOT INDEXED, rt0, vt0 WHERE (x'') ORDER BY ((CAST(t1.c0 AS TEXT))>>((rt0.c3 IN (t1.c0, rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY ((CAST(t1.c0 AS TEXT))>>((rt0.c3 IN (t1.c0, rt0.c2)))));
SELECT ALL * FROM t1 NOT INDEXED, rt0, vt0 WHERE (x'') ORDER BY ((CAST(t1.c0 AS TEXT))>>((rt0.c3 IN (t1.c0, rt0.c2))));
SELECT COUNT(*) FROM t1 WHERE ((~ (t1.c0))) ORDER BY t1.c0  NULLS LAST, (- (CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))  NULLS LAST, x'd14b'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (t1.c0))) IS TRUE)  as count FROM t1 ORDER BY t1.c0  NULLS LAST, (- (CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))  NULLS LAST, x'd14b'  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE ((~ (t1.c0))) ORDER BY t1.c0  NULLS LAST, (- (CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))  NULLS LAST, x'd14b'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (t1.c0))) IS TRUE)  as count FROM t1 ORDER BY t1.c0  NULLS LAST, (- (CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))  NULLS LAST, x'd14b'  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE ((~ (t1.c0))) ORDER BY t1.c0  NULLS LAST, (- (CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))  NULLS LAST, x'd14b'  NULLS LAST;
SELECT * FROM t1, t0 WHERE (TIME(((t0.c0)<=(t0.c0)), t1.c0, CASE WHEN t1.c0 THEN t0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((TIME(((t0.c0)<=(t0.c0)), t1.c0, CASE WHEN t1.c0 THEN t0.c0 END)) IS TRUE)  as count FROM t1, t0);
SELECT * FROM t1, t0 WHERE (TIME(((t0.c0)<=(t0.c0)), t1.c0, CASE WHEN t1.c0 THEN t0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((TIME(((t0.c0)<=(t0.c0)), t1.c0, CASE WHEN t1.c0 THEN t0.c0 END)) IS TRUE)  as count FROM t1, t0);
SELECT * FROM t1, t0 WHERE (TIME(((t0.c0)<=(t0.c0)), t1.c0, CASE WHEN t1.c0 THEN t0.c0 END));
SELECT ALL COUNT(*) FROM vt0, rt0, t1, t0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, rt0, t1, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t1, t0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, rt0, t1, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t1, t0 WHERE ('');
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (rt0.c2) ORDER BY (- (rt0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t1, rt0 ORDER BY (- (rt0.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (rt0.c2) ORDER BY (- (rt0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t1, rt0 ORDER BY (- (rt0.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (rt0.c2) ORDER BY (- (rt0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT ALL * FROM t1, rt0 WHERE (PRINTF(rt0.c1));
SELECT SUM(count) FROM (SELECT ((PRINTF(rt0.c1)) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE (PRINTF(rt0.c1));
SELECT SUM(count) FROM (SELECT ((PRINTF(rt0.c1)) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE (PRINTF(rt0.c1));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (json_quote(CASE vt0.c0  WHEN NULL THEN t0.c0 END)) ORDER BY t0.c0 ASC  NULLS LAST, CASE (((vt0.c0))<=((vt0.c0)))  WHEN vt0.c0 COLLATE BINARY THEN t0.c0 COLLATE NOCASE WHEN t0.c0 COLLATE BINARY THEN t0.c0 WHEN (NOT (t0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN t0.c0 COLLATE BINARY THEN (((x''))==((vt0.c0))) WHEN ((x'')!=(t0.c0)) THEN HEX(DISTINCT t0.c0) END;
SELECT SUM(count) FROM (SELECT ((json_quote(CASE vt0.c0  WHEN NULL THEN t0.c0 END)) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c0 ASC  NULLS LAST, CASE (((vt0.c0))<=((vt0.c0)))  WHEN vt0.c0 COLLATE BINARY THEN t0.c0 COLLATE NOCASE WHEN t0.c0 COLLATE BINARY THEN t0.c0 WHEN (NOT (t0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN t0.c0 COLLATE BINARY THEN (((x''))==((vt0.c0))) WHEN ((x'')<>(t0.c0)) THEN HEX(DISTINCT t0.c0) END);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (json_quote(CASE vt0.c0  WHEN NULL THEN t0.c0 END)) ORDER BY t0.c0 ASC  NULLS LAST, CASE (((vt0.c0))<=((vt0.c0)))  WHEN vt0.c0 COLLATE BINARY THEN t0.c0 COLLATE NOCASE WHEN t0.c0 COLLATE BINARY THEN t0.c0 WHEN (NOT (t0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN t0.c0 COLLATE BINARY THEN (((x''))==((vt0.c0))) WHEN ((x'')!=(t0.c0)) THEN HEX(DISTINCT t0.c0) END;
SELECT SUM(count) FROM (SELECT ((json_quote(CASE vt0.c0  WHEN NULL THEN t0.c0 END)) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c0 ASC  NULLS LAST, CASE (((vt0.c0))<=((vt0.c0)))  WHEN vt0.c0 COLLATE BINARY THEN t0.c0 COLLATE NOCASE WHEN t0.c0 COLLATE BINARY THEN t0.c0 WHEN (NOT (t0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN t0.c0 COLLATE BINARY THEN (((x''))==((vt0.c0))) WHEN ((x'')<>(t0.c0)) THEN HEX(DISTINCT t0.c0) END);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (json_quote(CASE vt0.c0  WHEN NULL THEN t0.c0 END)) ORDER BY t0.c0 ASC  NULLS LAST, CASE (((vt0.c0))<=((vt0.c0)))  WHEN vt0.c0 COLLATE BINARY THEN t0.c0 COLLATE NOCASE WHEN t0.c0 COLLATE BINARY THEN t0.c0 WHEN (NOT (t0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN t0.c0 COLLATE BINARY THEN (((x''))==((vt0.c0))) WHEN ((x'')!=(t0.c0)) THEN HEX(DISTINCT t0.c0) END;
SELECT ALL COUNT(*) FROM rt0 WHERE (((LOWER(rt0.c0))IS((rt0.c0 IN (rt0.c3))))) ORDER BY ((((rt0.c2)OR(rt0.c2)))AND(((rt0.c3) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(rt0.c0))IS((rt0.c0 IN (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)OR(rt0.c2)))AND(((rt0.c3) ISNULL))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((LOWER(rt0.c0))IS((rt0.c0 IN (rt0.c3))))) ORDER BY ((((rt0.c2)OR(rt0.c2)))AND(((rt0.c3) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(rt0.c0))IS((rt0.c0 IN (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)OR(rt0.c2)))AND(((rt0.c3) ISNULL))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((LOWER(rt0.c0))IS((rt0.c0 IN (rt0.c3))))) ORDER BY ((((rt0.c2)OR(rt0.c2)))AND(((rt0.c3) ISNULL))) ASC;
SELECT * FROM t0 CROSS JOIN t1 ON (((((t1.c0)IS NOT(t0.c0))))>=((CAST(t0.c0 AS TEXT)))) WHERE ((((t0.c0 COLLATE RTRIM, t1.c0 COLLATE BINARY, ((x'') BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0) IS TRUE), ((t0.c0)OR(t0.c0))))<>(((((t1.c0))<=((t0.c0))), ((t1.c0) NOT BETWEEN (t0.c0) AND (t1.c0)), ((t0.c0) ISNULL), ((((t1.c0)OR('')))OR(8.49601791E8)), ((t0.c0)AND(t0.c0)))))) ORDER BY ((((t0.c0)OR(t1.c0)))OR(t1.c0));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 COLLATE RTRIM, t1.c0 COLLATE BINARY, ((x'') BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0) IS TRUE), ((t0.c0)OR(t0.c0))))!=(((((t1.c0))<=((t0.c0))), ((t1.c0) NOT BETWEEN (t0.c0) AND (t1.c0)), ((t0.c0) ISNULL), ((((t1.c0)OR('')))OR(8.49601791E8)), ((t0.c0)AND(t0.c0)))))) IS TRUE)  as count FROM t0 CROSS JOIN t1 ON (((((t1.c0)IS NOT(t0.c0))))>=((CAST(t0.c0 AS TEXT)))) ORDER BY ((((t0.c0)OR(t1.c0)))OR(t1.c0)));
SELECT * FROM t0 CROSS JOIN t1 ON (((((t1.c0)IS NOT(t0.c0))))>=((CAST(t0.c0 AS TEXT)))) WHERE ((((t0.c0 COLLATE RTRIM, t1.c0 COLLATE BINARY, ((x'') BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0) IS TRUE), ((t0.c0)OR(t0.c0))))<>(((((t1.c0))<=((t0.c0))), ((t1.c0) NOT BETWEEN (t0.c0) AND (t1.c0)), ((t0.c0) ISNULL), ((((t1.c0)OR('')))OR(8.49601791E8)), ((t0.c0)AND(t0.c0)))))) ORDER BY ((((t0.c0)OR(t1.c0)))OR(t1.c0));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 COLLATE RTRIM, t1.c0 COLLATE BINARY, ((x'') BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0) IS TRUE), ((t0.c0)OR(t0.c0))))!=(((((t1.c0))<=((t0.c0))), ((t1.c0) NOT BETWEEN (t0.c0) AND (t1.c0)), ((t0.c0) ISNULL), ((((t1.c0)OR('')))OR(8.49601791E8)), ((t0.c0)AND(t0.c0)))))) IS TRUE)  as count FROM t0 CROSS JOIN t1 ON (((((t1.c0)IS NOT(t0.c0))))>=((CAST(t0.c0 AS TEXT)))) ORDER BY ((((t0.c0)OR(t1.c0)))OR(t1.c0)));
SELECT * FROM t0 CROSS JOIN t1 ON (((((t1.c0)IS NOT(t0.c0))))>=((CAST(t0.c0 AS TEXT)))) WHERE ((((t0.c0 COLLATE RTRIM, t1.c0 COLLATE BINARY, ((x'') BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0) IS TRUE), ((t0.c0)OR(t0.c0))))<>(((((t1.c0))<=((t0.c0))), ((t1.c0) NOT BETWEEN (t0.c0) AND (t1.c0)), ((t0.c0) ISNULL), ((((t1.c0)OR('')))OR(8.49601791E8)), ((t0.c0)AND(t0.c0)))))) ORDER BY ((((t0.c0)OR(t1.c0)))OR(t1.c0));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON LIKELY((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c3)))) FULL OUTER JOIN t1 ON ((((((t1.c0)GLOB(t1.c0)))AND(((t0.c0) NOT BETWEEN (t1.c0) AND (NULL)))))AND((rt0.c1 IN (t0.c0)))) CROSS JOIN t0 ON 0.8841222943124237 WHERE (((NULL COLLATE NOCASE)/(TYPEOF(DISTINCT rt0.c1)))) ORDER BY (((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))))IS(((((vt0.c0)AND(rt0.c0)))AND(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL COLLATE NOCASE)/(TYPEOF(DISTINCT rt0.c1)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON LIKELY((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c3)))) FULL OUTER JOIN t1 ON ((((((t1.c0)GLOB(t1.c0)))AND(((t0.c0) NOT BETWEEN (t1.c0) AND (NULL)))))AND((rt0.c1 IN (t0.c0)))) CROSS JOIN t0 ON 0.8841222943124237 ORDER BY (((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))))IS(((((vt0.c0)AND(rt0.c0)))AND(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON LIKELY((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c3)))) FULL OUTER JOIN t1 ON ((((((t1.c0)GLOB(t1.c0)))AND(((t0.c0) NOT BETWEEN (t1.c0) AND (NULL)))))AND((rt0.c1 IN (t0.c0)))) CROSS JOIN t0 ON 0.8841222943124237 WHERE (((NULL COLLATE NOCASE)/(TYPEOF(DISTINCT rt0.c1)))) ORDER BY (((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))))IS(((((vt0.c0)AND(rt0.c0)))AND(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL COLLATE NOCASE)/(TYPEOF(DISTINCT rt0.c1)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON LIKELY((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c3)))) FULL OUTER JOIN t1 ON ((((((t1.c0)GLOB(t1.c0)))AND(((t0.c0) NOT BETWEEN (t1.c0) AND (NULL)))))AND((rt0.c1 IN (t0.c0)))) CROSS JOIN t0 ON 0.8841222943124237 ORDER BY (((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))))IS(((((vt0.c0)AND(rt0.c0)))AND(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((('斒w9')%(t0.c0))) BETWEEN (((t0.c0)+(t0.c0))) AND ('jL註d'))) ORDER BY CASE NULL  WHEN CAST(t0.c0 AS INTEGER) THEN ((t0.c0)>>(t0.c0)) WHEN load_extension(t0.c0, t0.c0) THEN CAST(0.5380594301277032 AS BLOB) WHEN t0.c0 THEN ((t0.c0)<(t0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('斒w9')%(t0.c0))) BETWEEN (((t0.c0)+(t0.c0))) AND ('jL註d'))) IS TRUE)  as count FROM t0 ORDER BY CASE NULL  WHEN CAST(t0.c0 AS INTEGER) THEN ((t0.c0)>>(t0.c0)) WHEN load_extension(t0.c0, t0.c0) THEN CAST(0.5380594301277032 AS BLOB) WHEN t0.c0 THEN ((t0.c0)<(t0.c0)) END ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((((('斒w9')%(t0.c0))) BETWEEN (((t0.c0)+(t0.c0))) AND ('jL註d'))) ORDER BY CASE NULL  WHEN CAST(t0.c0 AS INTEGER) THEN ((t0.c0)>>(t0.c0)) WHEN load_extension(t0.c0, t0.c0) THEN CAST(0.5380594301277032 AS BLOB) WHEN t0.c0 THEN ((t0.c0)<(t0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('斒w9')%(t0.c0))) BETWEEN (((t0.c0)+(t0.c0))) AND ('jL註d'))) IS TRUE)  as count FROM t0 ORDER BY CASE NULL  WHEN CAST(t0.c0 AS INTEGER) THEN ((t0.c0)>>(t0.c0)) WHEN load_extension(t0.c0, t0.c0) THEN CAST(0.5380594301277032 AS BLOB) WHEN t0.c0 THEN ((t0.c0)<(t0.c0)) END ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((((('斒w9')%(t0.c0))) BETWEEN (((t0.c0)+(t0.c0))) AND ('jL註d'))) ORDER BY CASE NULL  WHEN CAST(t0.c0 AS INTEGER) THEN ((t0.c0)>>(t0.c0)) WHEN load_extension(t0.c0, t0.c0) THEN CAST(0.5380594301277032 AS BLOB) WHEN t0.c0 THEN ((t0.c0)<(t0.c0)) END ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (TRIM(DISTINCT ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (TRIM(DISTINCT ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (TRIM(DISTINCT ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c1))));
SELECT COUNT(*) FROM vt0 WHERE (((NULL) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((NULL) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((NULL) ISNULL));
SELECT * FROM rt0 CROSS JOIN vt0 ON ((((rt0.c3)-(rt0.c3)))<>(LOWER(DISTINCT vt0.c0))) WHERE (-5.53158716E8) ORDER BY rt0.c3 COLLATE NOCASE DESC, ((LIKE(rt0.c1, rt0.c0))GLOB(rt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((-5.53158716E8) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((rt0.c3)-(rt0.c3)))!=(LOWER(DISTINCT vt0.c0))) ORDER BY rt0.c3 COLLATE NOCASE DESC, ((LIKE(rt0.c1, rt0.c0))GLOB(rt0.c0)) DESC  NULLS FIRST);
SELECT * FROM rt0 CROSS JOIN vt0 ON ((((rt0.c3)-(rt0.c3)))<>(LOWER(DISTINCT vt0.c0))) WHERE (-5.53158716E8) ORDER BY rt0.c3 COLLATE NOCASE DESC, ((LIKE(rt0.c1, rt0.c0))GLOB(rt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((-5.53158716E8) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((rt0.c3)-(rt0.c3)))!=(LOWER(DISTINCT vt0.c0))) ORDER BY rt0.c3 COLLATE NOCASE DESC, ((LIKE(rt0.c1, rt0.c0))GLOB(rt0.c0)) DESC  NULLS FIRST);
SELECT * FROM rt0 CROSS JOIN vt0 ON ((((rt0.c3)-(rt0.c3)))<>(LOWER(DISTINCT vt0.c0))) WHERE (-5.53158716E8) ORDER BY rt0.c3 COLLATE NOCASE DESC, ((LIKE(rt0.c1, rt0.c0))GLOB(rt0.c0)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (t1.c0);
SELECT * FROM t0, vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ('');
SELECT COUNT(*) FROM rt0 WHERE ((('0.6599723525539326')+(-6.39301465E8)));
SELECT SUM(count) FROM (SELECT ALL (((('0.6599723525539326')+(-6.39301465E8))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((('0.6599723525539326')+(-6.39301465E8)));
SELECT SUM(count) FROM (SELECT ALL (((('0.6599723525539326')+(-6.39301465E8))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((('0.6599723525539326')+(-6.39301465E8)));
SELECT ALL * FROM rt0, t0, vt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE (rt0.c3);
SELECT * FROM vt0 WHERE (((((((vt0.c0)%(vt0.c0)))AND(NULL COLLATE BINARY)))AND((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)%(vt0.c0)))AND(NULL COLLATE BINARY)))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)%(vt0.c0)))AND(NULL COLLATE BINARY)))AND((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)%(vt0.c0)))AND(NULL COLLATE BINARY)))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)%(vt0.c0)))AND(NULL COLLATE BINARY)))AND((vt0.c0 IN ()))));
SELECT * FROM vt0, t0, rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c0)))) ISNULL)) ORDER BY ((((vt0.c0)GLOB(rt0.c0)))>=((~ (0.06661485912260834)))), 0x33515d3e  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c0)))) ISNULL)) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((vt0.c0)GLOB(rt0.c0)))>=((~ (0.06661485912260834)))), 0x33515d3e  NULLS LAST);
SELECT * FROM vt0, t0, rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c0)))) ISNULL)) ORDER BY ((((vt0.c0)GLOB(rt0.c0)))>=((~ (0.06661485912260834)))), 0x33515d3e  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c0)))) ISNULL)) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((vt0.c0)GLOB(rt0.c0)))>=((~ (0.06661485912260834)))), 0x33515d3e  NULLS LAST);
SELECT * FROM rt0, t1 CROSS JOIN t0 ON CASE WHEN (rt0.c3 IN ()) THEN ((rt0.c3) BETWEEN ('1254666345') AND (vt0.c0)) WHEN ((rt0.c2)<(t1.c0)) THEN rt0.c3 WHEN vt0.c0 THEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c3)) END RIGHT OUTER JOIN vt0 ON (((((rt0.c1, rt0.c2, rt0.c2))>((rt0.c3, vt0.c0, x'')))) ISNULL) WHERE (((((t0.c0)|(rt0.c0)))LIKE((rt0.c1 IN ())))) ORDER BY (((rt0.c0)) BETWEEN (((('1652287790') NOT BETWEEN (t1.c0) AND (t0.c0)))) AND (((((vt0.c0, rt0.c3, rt0.c2, t1.c0, 0.3130656240296117)) BETWEEN ((rt0.c3, rt0.c1, t1.c0, rt0.c0, t1.c0)) AND ((rt0.c1, x'', t1.c0, rt0.c3, rt0.c2)))))) ASC, ((((((((((x'')AND(t0.c0)))AND(t1.c0)))AND(rt0.c2)))AND(t1.c0)))IS NOT(CAST(rt0.c0 AS BLOB))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)|(rt0.c0)))LIKE((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, t1 CROSS JOIN t0 ON CASE WHEN (rt0.c3 IN ()) THEN ((rt0.c3) BETWEEN ('1254666345') AND (vt0.c0)) WHEN ((rt0.c2)<(t1.c0)) THEN rt0.c3 WHEN vt0.c0 THEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c3)) END RIGHT OUTER JOIN vt0 ON (((((rt0.c1, rt0.c2, rt0.c2))>((rt0.c3, vt0.c0, x'')))) ISNULL) ORDER BY (((rt0.c0)) BETWEEN (((('1652287790') NOT BETWEEN (t1.c0) AND (t0.c0)))) AND (((((vt0.c0, rt0.c3, rt0.c2, t1.c0, 0.3130656240296117)) BETWEEN ((rt0.c3, rt0.c1, t1.c0, rt0.c0, t1.c0)) AND ((rt0.c1, x'', t1.c0, rt0.c3, rt0.c2)))))) ASC, ((((((((((x'')AND(t0.c0)))AND(t1.c0)))AND(rt0.c2)))AND(t1.c0)))IS NOT(CAST(rt0.c0 AS BLOB))) ASC  NULLS LAST);
SELECT * FROM rt0, t1 CROSS JOIN t0 ON CASE WHEN (rt0.c3 IN ()) THEN ((rt0.c3) BETWEEN ('1254666345') AND (vt0.c0)) WHEN ((rt0.c2)<(t1.c0)) THEN rt0.c3 WHEN vt0.c0 THEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c3)) END RIGHT OUTER JOIN vt0 ON (((((rt0.c1, rt0.c2, rt0.c2))>((rt0.c3, vt0.c0, x'')))) ISNULL) WHERE (((((t0.c0)|(rt0.c0)))LIKE((rt0.c1 IN ())))) ORDER BY (((rt0.c0)) BETWEEN (((('1652287790') NOT BETWEEN (t1.c0) AND (t0.c0)))) AND (((((vt0.c0, rt0.c3, rt0.c2, t1.c0, 0.3130656240296117)) BETWEEN ((rt0.c3, rt0.c1, t1.c0, rt0.c0, t1.c0)) AND ((rt0.c1, x'', t1.c0, rt0.c3, rt0.c2)))))) ASC, ((((((((((x'')AND(t0.c0)))AND(t1.c0)))AND(rt0.c2)))AND(t1.c0)))IS NOT(CAST(rt0.c0 AS BLOB))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)|(rt0.c0)))LIKE((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, t1 CROSS JOIN t0 ON CASE WHEN (rt0.c3 IN ()) THEN ((rt0.c3) BETWEEN ('1254666345') AND (vt0.c0)) WHEN ((rt0.c2)<(t1.c0)) THEN rt0.c3 WHEN vt0.c0 THEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c3)) END RIGHT OUTER JOIN vt0 ON (((((rt0.c1, rt0.c2, rt0.c2))>((rt0.c3, vt0.c0, x'')))) ISNULL) ORDER BY (((rt0.c0)) BETWEEN (((('1652287790') NOT BETWEEN (t1.c0) AND (t0.c0)))) AND (((((vt0.c0, rt0.c3, rt0.c2, t1.c0, 0.3130656240296117)) BETWEEN ((rt0.c3, rt0.c1, t1.c0, rt0.c0, t1.c0)) AND ((rt0.c1, x'', t1.c0, rt0.c3, rt0.c2)))))) ASC, ((((((((((x'')AND(t0.c0)))AND(t1.c0)))AND(rt0.c2)))AND(t1.c0)))IS NOT(CAST(rt0.c0 AS BLOB))) ASC  NULLS LAST);
SELECT * FROM t1 LEFT OUTER JOIN t0 ON ((((CAST(t0.c0 AS NUMERIC))OR(x'6322')))OR((~ (t0.c0)))) WHERE (((x'') NOT BETWEEN (TYPEOF(t1.c0)) AND (IFNULL(DISTINCT t1.c0, t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN (TYPEOF(t1.c0)) AND (IFNULL(DISTINCT t1.c0, t1.c0)))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN t0 ON ((((CAST(t0.c0 AS NUMERIC))OR(x'6322')))OR((~ (t0.c0)))));
SELECT * FROM t1 LEFT OUTER JOIN t0 ON ((((CAST(t0.c0 AS NUMERIC))OR(x'6322')))OR((~ (t0.c0)))) WHERE (((x'') NOT BETWEEN (TYPEOF(t1.c0)) AND (IFNULL(DISTINCT t1.c0, t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN (TYPEOF(t1.c0)) AND (IFNULL(DISTINCT t1.c0, t1.c0)))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN t0 ON ((((CAST(t0.c0 AS NUMERIC))OR(x'6322')))OR((~ (t0.c0)))));
SELECT * FROM t1 LEFT OUTER JOIN t0 ON ((((CAST(t0.c0 AS NUMERIC))OR(x'6322')))OR((~ (t0.c0)))) WHERE (((x'') NOT BETWEEN (TYPEOF(t1.c0)) AND (IFNULL(DISTINCT t1.c0, t1.c0))));
SELECT COUNT(*) FROM t0, t1, vt0 RIGHT OUTER JOIN rt0 ON (((~ (rt0.c1))) BETWEEN (((0.7709736544101309)>>(rt0.c0))) AND (((t0.c0)+(t1.c0)))) WHERE (CASE ((t0.c0) BETWEEN (rt0.c2) AND (NULL))  WHEN LIKELY(DISTINCT x'967b') THEN CASE WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c2 WHEN t1.c0 THEN rt0.c3 END WHEN 'IK(' COLLATE NOCASE THEN (((0.28677793735753554)) BETWEEN ((t1.c0)) AND ((rt0.c0))) WHEN ((0.017598247222295194) NOT BETWEEN (rt0.c3) AND (t0.c0)) THEN (rt0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0) BETWEEN (rt0.c2) AND (NULL))  WHEN LIKELY(DISTINCT x'967b') THEN CASE WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c2 WHEN t1.c0 THEN rt0.c3 END WHEN 'IK(' COLLATE NOCASE THEN (((0.28677793735753554)) BETWEEN ((t1.c0)) AND ((rt0.c0))) WHEN ((0.017598247222295194) NOT BETWEEN (rt0.c3) AND (t0.c0)) THEN (rt0.c2 IN ()) END) IS TRUE)  as count FROM t0, t1, vt0 RIGHT OUTER JOIN rt0 ON (((~ (rt0.c1))) BETWEEN (((0.7709736544101309)>>(rt0.c0))) AND (((t0.c0)+(t1.c0)))));
SELECT COUNT(*) FROM t0, t1, vt0 RIGHT OUTER JOIN rt0 ON (((~ (rt0.c1))) BETWEEN (((0.7709736544101309)>>(rt0.c0))) AND (((t0.c0)+(t1.c0)))) WHERE (CASE ((t0.c0) BETWEEN (rt0.c2) AND (NULL))  WHEN LIKELY(DISTINCT x'967b') THEN CASE WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c2 WHEN t1.c0 THEN rt0.c3 END WHEN 'IK(' COLLATE NOCASE THEN (((0.28677793735753554)) BETWEEN ((t1.c0)) AND ((rt0.c0))) WHEN ((0.017598247222295194) NOT BETWEEN (rt0.c3) AND (t0.c0)) THEN (rt0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0) BETWEEN (rt0.c2) AND (NULL))  WHEN LIKELY(DISTINCT x'967b') THEN CASE WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c2 WHEN t1.c0 THEN rt0.c3 END WHEN 'IK(' COLLATE NOCASE THEN (((0.28677793735753554)) BETWEEN ((t1.c0)) AND ((rt0.c0))) WHEN ((0.017598247222295194) NOT BETWEEN (rt0.c3) AND (t0.c0)) THEN (rt0.c2 IN ()) END) IS TRUE)  as count FROM t0, t1, vt0 RIGHT OUTER JOIN rt0 ON (((~ (rt0.c1))) BETWEEN (((0.7709736544101309)>>(rt0.c0))) AND (((t0.c0)+(t1.c0)))));
SELECT COUNT(*) FROM t0, t1, vt0 RIGHT OUTER JOIN rt0 ON (((~ (rt0.c1))) BETWEEN (((0.7709736544101309)>>(rt0.c0))) AND (((t0.c0)+(t1.c0)))) WHERE (CASE ((t0.c0) BETWEEN (rt0.c2) AND (NULL))  WHEN LIKELY(DISTINCT x'967b') THEN CASE WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c2 WHEN t1.c0 THEN rt0.c3 END WHEN 'IK(' COLLATE NOCASE THEN (((0.28677793735753554)) BETWEEN ((t1.c0)) AND ((rt0.c0))) WHEN ((0.017598247222295194) NOT BETWEEN (rt0.c3) AND (t0.c0)) THEN (rt0.c2 IN ()) END);
SELECT ALL * FROM vt0, rt0 WHERE (CASE WHEN ((0Xfffffffffac47d6f) IS TRUE) THEN (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))) END) ORDER BY ((rt0.c1)LIKE(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((0xfffffffffac47d6f) IS TRUE) THEN (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c1)LIKE(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)))) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (CASE WHEN ((0Xfffffffffac47d6f) IS TRUE) THEN (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))) END) ORDER BY ((rt0.c1)LIKE(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((0xfffffffffac47d6f) IS TRUE) THEN (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c1)LIKE(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)))) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (CASE WHEN ((0Xfffffffffac47d6f) IS TRUE) THEN (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))) END) ORDER BY ((rt0.c1)LIKE(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)))) DESC;
SELECT ALL * FROM vt0, rt0, t0 LEFT OUTER JOIN t1 ON (((rt0.c3, t0.c0, rt0.c3)) NOT BETWEEN ((TRIM(rt0.c3), (t1.c0 IN (rt0.c3)), 'k+I[g')) AND ((((rt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)), CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END, (+ (vt0.c0))))) WHERE (CAST((((t1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c3))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((((t1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c3))) AS TEXT)) IS TRUE)  as count FROM vt0, rt0, t0 LEFT OUTER JOIN t1 ON (((rt0.c3, t0.c0, rt0.c3)) NOT BETWEEN ((TRIM(rt0.c3), (t1.c0 IN (rt0.c3)), 'k+I[g')) AND ((((rt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)), CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END, (+ (vt0.c0))))));
SELECT ALL * FROM vt0, rt0, t0 LEFT OUTER JOIN t1 ON (((rt0.c3, t0.c0, rt0.c3)) NOT BETWEEN ((TRIM(rt0.c3), (t1.c0 IN (rt0.c3)), 'k+I[g')) AND ((((rt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)), CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END, (+ (vt0.c0))))) WHERE (CAST((((t1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c3))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((((t1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c3))) AS TEXT)) IS TRUE)  as count FROM vt0, rt0, t0 LEFT OUTER JOIN t1 ON (((rt0.c3, t0.c0, rt0.c3)) NOT BETWEEN ((TRIM(rt0.c3), (t1.c0 IN (rt0.c3)), 'k+I[g')) AND ((((rt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)), CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END, (+ (vt0.c0))))));
SELECT ALL * FROM vt0, rt0, t0 LEFT OUTER JOIN t1 ON (((rt0.c3, t0.c0, rt0.c3)) NOT BETWEEN ((TRIM(rt0.c3), (t1.c0 IN (rt0.c3)), 'k+I[g')) AND ((((rt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)), CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END, (+ (vt0.c0))))) WHERE (CAST((((t1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c3))) AS TEXT));
SELECT ALL * FROM vt0, t1 WHERE ((~ (NULL))) ORDER BY '', ((t1.c0)<((t1.c0 IN ()))) DESC, '0Pﰛ\囔*J';
SELECT SUM(count) FROM (SELECT (((~ (NULL))) IS TRUE)  as count FROM vt0, t1 ORDER BY '', ((t1.c0)<((t1.c0 IN ()))) DESC, '0Pﰛ\囔*J');
SELECT ALL * FROM vt0, t1 WHERE ((~ (NULL))) ORDER BY '', ((t1.c0)<((t1.c0 IN ()))) DESC, '0Pﰛ\囔*J';
SELECT SUM(count) FROM (SELECT (((~ (NULL))) IS TRUE)  as count FROM vt0, t1 ORDER BY '', ((t1.c0)<((t1.c0 IN ()))) DESC, '0Pﰛ\囔*J');
SELECT ALL * FROM vt0, t1 WHERE ((~ (NULL))) ORDER BY '', ((t1.c0)<((t1.c0 IN ()))) DESC, '0Pﰛ\囔*J';
SELECT * FROM rt0, t0, t1, vt0 WHERE (CASE WHEN ((((((((t1.c0)AND(rt0.c0)))OR(rt0.c0)))OR(vt0.c0)))AND(rt0.c0)) THEN x'' ELSE CASE WHEN rt0.c0 THEN 0.027028870627850976 ELSE t0.c0 END END) ORDER BY (((((rt0.c2) IS TRUE)))<=((vt0.c0 COLLATE RTRIM))) ASC, x''  NULLS LAST, (+ (CASE WHEN rt0.c3 THEN 0.5668070962010702 END));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((t1.c0)AND(rt0.c0)))OR(rt0.c0)))OR(vt0.c0)))AND(rt0.c0)) THEN x'' ELSE CASE WHEN rt0.c0 THEN 0.027028870627850976 ELSE t0.c0 END END) IS TRUE)  as count FROM rt0, t0, t1, vt0 ORDER BY (((((rt0.c2) IS TRUE)))<=((vt0.c0 COLLATE RTRIM))) ASC, x''  NULLS LAST, (+ (CASE WHEN rt0.c3 THEN 0.5668070962010702 END)));
SELECT * FROM rt0, t0, t1, vt0 WHERE (CASE WHEN ((((((((t1.c0)AND(rt0.c0)))OR(rt0.c0)))OR(vt0.c0)))AND(rt0.c0)) THEN x'' ELSE CASE WHEN rt0.c0 THEN 0.027028870627850976 ELSE t0.c0 END END) ORDER BY (((((rt0.c2) IS TRUE)))<=((vt0.c0 COLLATE RTRIM))) ASC, x''  NULLS LAST, (+ (CASE WHEN rt0.c3 THEN 0.5668070962010702 END));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((t1.c0)AND(rt0.c0)))OR(rt0.c0)))OR(vt0.c0)))AND(rt0.c0)) THEN x'' ELSE CASE WHEN rt0.c0 THEN 0.027028870627850976 ELSE t0.c0 END END) IS TRUE)  as count FROM rt0, t0, t1, vt0 ORDER BY (((((rt0.c2) IS TRUE)))<=((vt0.c0 COLLATE RTRIM))) ASC, x''  NULLS LAST, (+ (CASE WHEN rt0.c3 THEN 0.5668070962010702 END)));
SELECT * FROM rt0, t0, t1, vt0 WHERE (CASE WHEN ((((((((t1.c0)AND(rt0.c0)))OR(rt0.c0)))OR(vt0.c0)))AND(rt0.c0)) THEN x'' ELSE CASE WHEN rt0.c0 THEN 0.027028870627850976 ELSE t0.c0 END END) ORDER BY (((((rt0.c2) IS TRUE)))<=((vt0.c0 COLLATE RTRIM))) ASC, x''  NULLS LAST, (+ (CASE WHEN rt0.c3 THEN 0.5668070962010702 END));
SELECT * FROM t0, vt0, t1, rt0 WHERE ((((((((((((t1.c0, 0.8241717069308119, t1.c0))>((rt0.c2, t0.c0, t1.c0))))OR(x'8fe6')))OR(((rt0.c1)<<(rt0.c3)))))OR((t0.c0 IN ()))))OR((((rt0.c1, -617107871, vt0.c0))!=((vt0.c0, rt0.c3, rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((t1.c0, 0.8241717069308119, t1.c0))>((rt0.c2, t0.c0, t1.c0))))OR(x'8fe6')))OR(((rt0.c1)<<(rt0.c3)))))OR((t0.c0 IN ()))))OR((((rt0.c1, -617107871, vt0.c0))<>((vt0.c0, rt0.c3, rt0.c2)))))) IS TRUE)  as count FROM t0, vt0, t1, rt0);
SELECT * FROM t0, vt0, t1, rt0 WHERE ((((((((((((t1.c0, 0.8241717069308119, t1.c0))>((rt0.c2, t0.c0, t1.c0))))OR(x'8fe6')))OR(((rt0.c1)<<(rt0.c3)))))OR((t0.c0 IN ()))))OR((((rt0.c1, -617107871, vt0.c0))!=((vt0.c0, rt0.c3, rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((t1.c0, 0.8241717069308119, t1.c0))>((rt0.c2, t0.c0, t1.c0))))OR(x'8fe6')))OR(((rt0.c1)<<(rt0.c3)))))OR((t0.c0 IN ()))))OR((((rt0.c1, -617107871, vt0.c0))<>((vt0.c0, rt0.c3, rt0.c2)))))) IS TRUE)  as count FROM t0, vt0, t1, rt0);
SELECT * FROM t0, vt0, t1, rt0 WHERE ((((((((((((t1.c0, 0.8241717069308119, t1.c0))>((rt0.c2, t0.c0, t1.c0))))OR(x'8fe6')))OR(((rt0.c1)<<(rt0.c3)))))OR((t0.c0 IN ()))))OR((((rt0.c1, -617107871, vt0.c0))!=((vt0.c0, rt0.c3, rt0.c2))))));
SELECT COUNT(*) FROM vt0, t1 WHERE (((((t1.c0)>>(vt0.c0))) NOT NULL)) ORDER BY CAST(t1.c0 AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)>>(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, t1 ORDER BY CAST(t1.c0 AS TEXT)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1 WHERE (((((t1.c0)>>(vt0.c0))) NOT NULL)) ORDER BY CAST(t1.c0 AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)>>(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, t1 ORDER BY CAST(t1.c0 AS TEXT)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1 WHERE (((((t1.c0)>>(vt0.c0))) NOT NULL)) ORDER BY CAST(t1.c0 AS TEXT)  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((TRIM(t0.c0) IN (t0.c0 COLLATE RTRIM))) ORDER BY CASE WHEN ((t0.c0)AND(t0.c0)) THEN t0.c0 ELSE '-277409467' END DESC, ((t0.c0 COLLATE BINARY) NOT BETWEEN ((t0.c0 IN ())) AND (((t0.c0) NOT NULL))), ((((t0.c0)AND(t0.c0)))OR(t0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((TRIM(t0.c0) IN (t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((t0.c0)AND(t0.c0)) THEN t0.c0 ELSE '-277409467' END DESC, ((t0.c0 COLLATE BINARY) NOT BETWEEN ((t0.c0 IN ())) AND (((t0.c0) NOT NULL))), ((((t0.c0)AND(t0.c0)))OR(t0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((TRIM(t0.c0) IN (t0.c0 COLLATE RTRIM))) ORDER BY CASE WHEN ((t0.c0)AND(t0.c0)) THEN t0.c0 ELSE '-277409467' END DESC, ((t0.c0 COLLATE BINARY) NOT BETWEEN ((t0.c0 IN ())) AND (((t0.c0) NOT NULL))), ((((t0.c0)AND(t0.c0)))OR(t0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((TRIM(t0.c0) IN (t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((t0.c0)AND(t0.c0)) THEN t0.c0 ELSE '-277409467' END DESC, ((t0.c0 COLLATE BINARY) NOT BETWEEN ((t0.c0 IN ())) AND (((t0.c0) NOT NULL))), ((((t0.c0)AND(t0.c0)))OR(t0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((TRIM(t0.c0) IN (t0.c0 COLLATE RTRIM))) ORDER BY CASE WHEN ((t0.c0)AND(t0.c0)) THEN t0.c0 ELSE '-277409467' END DESC, ((t0.c0 COLLATE BINARY) NOT BETWEEN ((t0.c0 IN ())) AND (((t0.c0) NOT NULL))), ((((t0.c0)AND(t0.c0)))OR(t0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT ALL * FROM rt0 INNER JOIN t1 ON (((t1.c0 IN ())) IS FALSE) RIGHT OUTER JOIN t0 ON CASE (((('8G')OR(rt0.c2)))OR(t0.c0))  WHEN (((vt0.c0))<=((rt0.c3))) THEN CASE WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN x'' ELSE t1.c0 END WHEN ((rt0.c0)||(rt0.c1)) THEN ((rt0.c3)*(rt0.c0)) WHEN (vt0.c0 IN ()) THEN (~ (rt0.c1)) END RIGHT OUTER JOIN vt0 ON IFNULL(DISTINCT t0.c0, ((((((((rt0.c3)OR(vt0.c0)))AND(t1.c0)))AND(NULL)))AND(t0.c0))) WHERE ((IFNULL(rt0.c0, t1.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((IFNULL(rt0.c0, t1.c0) IN ())) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON (((t1.c0 IN ())) IS FALSE) RIGHT OUTER JOIN t0 ON CASE (((('8G')OR(rt0.c2)))OR(t0.c0))  WHEN (((vt0.c0))<=((rt0.c3))) THEN CASE WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN x'' ELSE t1.c0 END WHEN ((rt0.c0)||(rt0.c1)) THEN ((rt0.c3)*(rt0.c0)) WHEN (vt0.c0 IN ()) THEN (~ (rt0.c1)) END RIGHT OUTER JOIN vt0 ON IFNULL(DISTINCT t0.c0, ((((((((rt0.c3)OR(vt0.c0)))AND(t1.c0)))AND(NULL)))AND(t0.c0))));
SELECT ALL * FROM rt0 INNER JOIN t1 ON (((t1.c0 IN ())) IS FALSE) RIGHT OUTER JOIN t0 ON CASE (((('8G')OR(rt0.c2)))OR(t0.c0))  WHEN (((vt0.c0))<=((rt0.c3))) THEN CASE WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN x'' ELSE t1.c0 END WHEN ((rt0.c0)||(rt0.c1)) THEN ((rt0.c3)*(rt0.c0)) WHEN (vt0.c0 IN ()) THEN (~ (rt0.c1)) END RIGHT OUTER JOIN vt0 ON IFNULL(DISTINCT t0.c0, ((((((((rt0.c3)OR(vt0.c0)))AND(t1.c0)))AND(NULL)))AND(t0.c0))) WHERE ((IFNULL(rt0.c0, t1.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((IFNULL(rt0.c0, t1.c0) IN ())) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON (((t1.c0 IN ())) IS FALSE) RIGHT OUTER JOIN t0 ON CASE (((('8G')OR(rt0.c2)))OR(t0.c0))  WHEN (((vt0.c0))<=((rt0.c3))) THEN CASE WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN x'' ELSE t1.c0 END WHEN ((rt0.c0)||(rt0.c1)) THEN ((rt0.c3)*(rt0.c0)) WHEN (vt0.c0 IN ()) THEN (~ (rt0.c1)) END RIGHT OUTER JOIN vt0 ON IFNULL(DISTINCT t0.c0, ((((((((rt0.c3)OR(vt0.c0)))AND(t1.c0)))AND(NULL)))AND(t0.c0))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t1 ON ((rt0.c2 COLLATE BINARY)*((rt0.c0 IN (rt0.c2)))) LEFT OUTER JOIN t0 ON ((CAST(t1.c0 AS NUMERIC)) NOT BETWEEN (((rt0.c3)*(0.558375129616988))) AND (((rt0.c3) IS FALSE))) FULL OUTER JOIN rt0 ON ((((vt0.c0)&(rt0.c1)))/((((rt0.c0, t1.c0, vt0.c0)) NOT BETWEEN ((t0.c0, rt0.c1, rt0.c3)) AND ((rt0.c1, rt0.c3, t0.c0))))) WHERE (SQLITE_COMPILEOPTION_GET(((rt0.c1) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(((rt0.c1) ISNULL))) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON ((rt0.c2 COLLATE BINARY)*((rt0.c0 IN (rt0.c2)))) LEFT OUTER JOIN t0 ON ((CAST(t1.c0 AS NUMERIC)) NOT BETWEEN (((rt0.c3)*(0.558375129616988))) AND (((rt0.c3) IS FALSE))) FULL OUTER JOIN rt0 ON ((((vt0.c0)&(rt0.c1)))/((((rt0.c0, t1.c0, vt0.c0)) NOT BETWEEN ((t0.c0, rt0.c1, rt0.c3)) AND ((rt0.c1, rt0.c3, t0.c0))))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t1 ON ((rt0.c2 COLLATE BINARY)*((rt0.c0 IN (rt0.c2)))) LEFT OUTER JOIN t0 ON ((CAST(t1.c0 AS NUMERIC)) NOT BETWEEN (((rt0.c3)*(0.558375129616988))) AND (((rt0.c3) IS FALSE))) FULL OUTER JOIN rt0 ON ((((vt0.c0)&(rt0.c1)))/((((rt0.c0, t1.c0, vt0.c0)) NOT BETWEEN ((t0.c0, rt0.c1, rt0.c3)) AND ((rt0.c1, rt0.c3, t0.c0))))) WHERE (SQLITE_COMPILEOPTION_GET(((rt0.c1) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(((rt0.c1) ISNULL))) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON ((rt0.c2 COLLATE BINARY)*((rt0.c0 IN (rt0.c2)))) LEFT OUTER JOIN t0 ON ((CAST(t1.c0 AS NUMERIC)) NOT BETWEEN (((rt0.c3)*(0.558375129616988))) AND (((rt0.c3) IS FALSE))) FULL OUTER JOIN rt0 ON ((((vt0.c0)&(rt0.c1)))/((((rt0.c0, t1.c0, vt0.c0)) NOT BETWEEN ((t0.c0, rt0.c1, rt0.c3)) AND ((rt0.c1, rt0.c3, t0.c0))))));
SELECT ALL COUNT(*) FROM t1, t0, rt0 NATURAL JOIN vt0 WHERE ((TRIM(DISTINCT x'', rt0.c0) IN (vt0.c0))) ORDER BY SQLITE_VERSION(), ((((((vt0.c0)AND(rt0.c3)))OR(rt0.c2))) IS TRUE) ASC  NULLS FIRST, (rt0.c1 COLLATE RTRIM IN ((('484633449')*(rt0.c3)), CAST(t1.c0 AS REAL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((TRIM(DISTINCT x'', rt0.c0) IN (vt0.c0))) IS TRUE)  as count FROM t1, t0, rt0 NATURAL JOIN vt0 ORDER BY SQLITE_VERSION(), ((((((vt0.c0)AND(rt0.c3)))OR(rt0.c2))) IS TRUE) ASC  NULLS FIRST, (rt0.c1 COLLATE RTRIM IN ((('484633449')*(rt0.c3)), CAST(t1.c0 AS REAL))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, t0, rt0 NATURAL JOIN vt0 WHERE ((TRIM(DISTINCT x'', rt0.c0) IN (vt0.c0))) ORDER BY SQLITE_VERSION(), ((((((vt0.c0)AND(rt0.c3)))OR(rt0.c2))) IS TRUE) ASC  NULLS FIRST, (rt0.c1 COLLATE RTRIM IN ((('484633449')*(rt0.c3)), CAST(t1.c0 AS REAL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((TRIM(DISTINCT x'', rt0.c0) IN (vt0.c0))) IS TRUE)  as count FROM t1, t0, rt0 NATURAL JOIN vt0 ORDER BY SQLITE_VERSION(), ((((((vt0.c0)AND(rt0.c3)))OR(rt0.c2))) IS TRUE) ASC  NULLS FIRST, (rt0.c1 COLLATE RTRIM IN ((('484633449')*(rt0.c3)), CAST(t1.c0 AS REAL))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, t0, rt0 NATURAL JOIN vt0 WHERE ((TRIM(DISTINCT x'', rt0.c0) IN (vt0.c0))) ORDER BY SQLITE_VERSION(), ((((((vt0.c0)AND(rt0.c3)))OR(rt0.c2))) IS TRUE) ASC  NULLS FIRST, (rt0.c1 COLLATE RTRIM IN ((('484633449')*(rt0.c3)), CAST(t1.c0 AS REAL))) DESC  NULLS LAST;
SELECT * FROM t0 WHERE (CASE WHEN CHAR(t0.c0) THEN t0.c0 ELSE ((t0.c0)|(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CHAR(t0.c0) THEN t0.c0 ELSE ((t0.c0)|(t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN CHAR(t0.c0) THEN t0.c0 ELSE ((t0.c0)|(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CHAR(t0.c0) THEN t0.c0 ELSE ((t0.c0)|(t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN CHAR(t0.c0) THEN t0.c0 ELSE ((t0.c0)|(t0.c0)) END);
SELECT COUNT(*) FROM vt0, t1, t0 WHERE ((CAST(t1.c0 AS INTEGER) IN ())) ORDER BY ((((((((((((t0.c0)AND(0.8405708177939222)))AND(vt0.c0)))AND('-2126763155')))AND(((vt0.c0)&(t0.c0)))))AND((((t1.c0, t1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((t1.c0, t0.c0, t1.c0))))))OR(ABS(DISTINCT t1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(t1.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM vt0, t1, t0 ORDER BY ((((((((((((t0.c0)AND(0.8405708177939222)))AND(vt0.c0)))AND('-2126763155')))AND(((vt0.c0)&(t0.c0)))))AND((((t1.c0, t1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((t1.c0, t0.c0, t1.c0))))))OR(ABS(DISTINCT t1.c0)))  NULLS LAST);
SELECT COUNT(*) FROM vt0, t1, t0 WHERE ((CAST(t1.c0 AS INTEGER) IN ())) ORDER BY ((((((((((((t0.c0)AND(0.8405708177939222)))AND(vt0.c0)))AND('-2126763155')))AND(((vt0.c0)&(t0.c0)))))AND((((t1.c0, t1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((t1.c0, t0.c0, t1.c0))))))OR(ABS(DISTINCT t1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(t1.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM vt0, t1, t0 ORDER BY ((((((((((((t0.c0)AND(0.8405708177939222)))AND(vt0.c0)))AND('-2126763155')))AND(((vt0.c0)&(t0.c0)))))AND((((t1.c0, t1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((t1.c0, t0.c0, t1.c0))))))OR(ABS(DISTINCT t1.c0)))  NULLS LAST);
SELECT COUNT(*) FROM vt0, t1, t0 WHERE ((CAST(t1.c0 AS INTEGER) IN ())) ORDER BY ((((((((((((t0.c0)AND(0.8405708177939222)))AND(vt0.c0)))AND('-2126763155')))AND(((vt0.c0)&(t0.c0)))))AND((((t1.c0, t1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((t1.c0, t0.c0, t1.c0))))))OR(ABS(DISTINCT t1.c0)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE (((((((rt0.c3)AND(rt0.c3)))AND(t1.c0)))|(TYPEOF(DISTINCT vt0.c0)))) ORDER BY (rt0.c0 IN ()) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3)AND(rt0.c3)))AND(t1.c0)))|(TYPEOF(DISTINCT vt0.c0)))) IS TRUE)  as count FROM rt0, t1, vt0 ORDER BY (rt0.c0 IN ()) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE (((((((rt0.c3)AND(rt0.c3)))AND(t1.c0)))|(TYPEOF(DISTINCT vt0.c0)))) ORDER BY (rt0.c0 IN ()) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3)AND(rt0.c3)))AND(t1.c0)))|(TYPEOF(DISTINCT vt0.c0)))) IS TRUE)  as count FROM rt0, t1, vt0 ORDER BY (rt0.c0 IN ()) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE (((((((rt0.c3)AND(rt0.c3)))AND(t1.c0)))|(TYPEOF(DISTINCT vt0.c0)))) ORDER BY (rt0.c0 IN ()) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM t0, t1 WHERE (t0.c0 COLLATE NOCASE) ORDER BY (t1.c0 COLLATE RTRIM IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0 COLLATE NOCASE) IS TRUE)  as count FROM t0, t1 ORDER BY (t1.c0 COLLATE RTRIM IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, t1 WHERE (t0.c0 COLLATE NOCASE) ORDER BY (t1.c0 COLLATE RTRIM IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0 COLLATE NOCASE) IS TRUE)  as count FROM t0, t1 ORDER BY (t1.c0 COLLATE RTRIM IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, t1 WHERE (t0.c0 COLLATE NOCASE) ORDER BY (t1.c0 COLLATE RTRIM IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0, t0, t1 WHERE (ABS(((rt0.c2)<<(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((ABS(((rt0.c2)<<(rt0.c0)))) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED, t0, t1);
SELECT ALL COUNT(*) FROM vt0, rt0, t0, t1 WHERE (ABS(((rt0.c2)<<(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((ABS(((rt0.c2)<<(rt0.c0)))) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED, t0, t1);
SELECT ALL COUNT(*) FROM vt0, rt0, t0, t1 WHERE (ABS(((rt0.c2)<<(rt0.c0))));
SELECT COUNT(*) FROM rt0, vt0, t0, t1 WHERE (((NOT (t1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (t1.c0)) IN ())) IS TRUE)  as count FROM rt0, vt0, t0, t1);
SELECT COUNT(*) FROM rt0, vt0, t0, t1 WHERE (((NOT (t1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (t1.c0)) IN ())) IS TRUE)  as count FROM rt0, vt0, t0, t1);
SELECT COUNT(*) FROM rt0, vt0, t0, t1 WHERE (((NOT (t1.c0)) IN ()));
SELECT ALL * FROM vt0, rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ('');
SELECT ALL * FROM vt0 WHERE (0.15049150370044095) ORDER BY ((((((((896547216)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM ASC  NULLS LAST, ((UNLIKELY(DISTINCT vt0.c0))==((NOT (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.15049150370044095) IS TRUE)  as count FROM vt0 ORDER BY ((((((((896547216)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM ASC  NULLS LAST, ((UNLIKELY(DISTINCT vt0.c0))==((NOT (vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (0.15049150370044095) ORDER BY ((((((((896547216)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM ASC  NULLS LAST, ((UNLIKELY(DISTINCT vt0.c0))==((NOT (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.15049150370044095) IS TRUE)  as count FROM vt0 ORDER BY ((((((((896547216)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM ASC  NULLS LAST, ((UNLIKELY(DISTINCT vt0.c0))==((NOT (vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (0.15049150370044095) ORDER BY ((((((((896547216)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM ASC  NULLS LAST, ((UNLIKELY(DISTINCT vt0.c0))==((NOT (vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM t1, vt0, rt0 WHERE ((NOT (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c1))) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT ALL * FROM t1, vt0, rt0 WHERE ((NOT (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c1))) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT ALL * FROM t1, vt0, rt0 WHERE ((NOT (rt0.c1)));
SELECT * FROM vt0, t0, t1, rt0 WHERE (((((rt0.c2) NOTNULL))>>(rt0.c3 COLLATE NOCASE))) ORDER BY (- (x'42f5')) DESC  NULLS LAST, (((((+ (rt0.c3)))AND(((rt0.c0)<<(rt0.c1)))))AND(CASE rt0.c3  WHEN t0.c0 THEN t1.c0 ELSE rt0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOTNULL))>>(rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0, t1, rt0 ORDER BY (- (x'42f5')) DESC  NULLS LAST, (((((+ (rt0.c3)))AND(((rt0.c0)<<(rt0.c1)))))AND(CASE rt0.c3  WHEN t0.c0 THEN t1.c0 ELSE rt0.c1 END)) DESC);
SELECT * FROM vt0, t0, t1, rt0 WHERE (((((rt0.c2) NOTNULL))>>(rt0.c3 COLLATE NOCASE))) ORDER BY (- (x'42f5')) DESC  NULLS LAST, (((((+ (rt0.c3)))AND(((rt0.c0)<<(rt0.c1)))))AND(CASE rt0.c3  WHEN t0.c0 THEN t1.c0 ELSE rt0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOTNULL))>>(rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0, t1, rt0 ORDER BY (- (x'42f5')) DESC  NULLS LAST, (((((+ (rt0.c3)))AND(((rt0.c0)<<(rt0.c1)))))AND(CASE rt0.c3  WHEN t0.c0 THEN t1.c0 ELSE rt0.c1 END)) DESC);
SELECT * FROM vt0, t0, t1, rt0 WHERE (((((rt0.c2) NOTNULL))>>(rt0.c3 COLLATE NOCASE))) ORDER BY (- (x'42f5')) DESC  NULLS LAST, (((((+ (rt0.c3)))AND(((rt0.c0)<<(rt0.c1)))))AND(CASE rt0.c3  WHEN t0.c0 THEN t1.c0 ELSE rt0.c1 END)) DESC;
SELECT COUNT(*) FROM rt0, t0 CROSS JOIN vt0 ON ROUND(((rt0.c0) NOT NULL), ((rt0.c3) NOTNULL)) LEFT OUTER JOIN t1 ON (- (((((((((rt0.c3)OR(NULL)))OR(vt0.c0)))AND(rt0.c2)))OR(2104267355)))) WHERE (((CASE WHEN t0.c0 THEN t0.c0 ELSE rt0.c0 END)+(((rt0.c0) NOT BETWEEN (t1.c0) AND (t0.c0))))) ORDER BY CAST((((vt0.c0))>=((rt0.c3))) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN t0.c0 ELSE rt0.c0 END)+(((rt0.c0) NOT BETWEEN (t1.c0) AND (t0.c0))))) IS TRUE)  as count FROM rt0, t0 CROSS JOIN vt0 ON ROUND(((rt0.c0) NOT NULL), ((rt0.c3) NOTNULL)) LEFT OUTER JOIN t1 ON (- (((((((((rt0.c3)OR(NULL)))OR(vt0.c0)))AND(rt0.c2)))OR(2104267355)))) ORDER BY CAST((((vt0.c0))>=((rt0.c3))) AS TEXT));
SELECT COUNT(*) FROM rt0, t0 CROSS JOIN vt0 ON ROUND(((rt0.c0) NOT NULL), ((rt0.c3) NOTNULL)) LEFT OUTER JOIN t1 ON (- (((((((((rt0.c3)OR(NULL)))OR(vt0.c0)))AND(rt0.c2)))OR(2104267355)))) WHERE (((CASE WHEN t0.c0 THEN t0.c0 ELSE rt0.c0 END)+(((rt0.c0) NOT BETWEEN (t1.c0) AND (t0.c0))))) ORDER BY CAST((((vt0.c0))>=((rt0.c3))) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN t0.c0 ELSE rt0.c0 END)+(((rt0.c0) NOT BETWEEN (t1.c0) AND (t0.c0))))) IS TRUE)  as count FROM rt0, t0 CROSS JOIN vt0 ON ROUND(((rt0.c0) NOT NULL), ((rt0.c3) NOTNULL)) LEFT OUTER JOIN t1 ON (- (((((((((rt0.c3)OR(NULL)))OR(vt0.c0)))AND(rt0.c2)))OR(2104267355)))) ORDER BY CAST((((vt0.c0))>=((rt0.c3))) AS TEXT));
SELECT COUNT(*) FROM rt0, t0 CROSS JOIN vt0 ON ROUND(((rt0.c0) NOT NULL), ((rt0.c3) NOTNULL)) LEFT OUTER JOIN t1 ON (- (((((((((rt0.c3)OR(NULL)))OR(vt0.c0)))AND(rt0.c2)))OR(2104267355)))) WHERE (((CASE WHEN t0.c0 THEN t0.c0 ELSE rt0.c0 END)+(((rt0.c0) NOT BETWEEN (t1.c0) AND (t0.c0))))) ORDER BY CAST((((vt0.c0))>=((rt0.c3))) AS TEXT);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 END)GLOB(rt0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN rt0.c0 END)GLOB(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 END)GLOB(rt0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN rt0.c0 END)GLOB(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 END)GLOB(rt0.c3 COLLATE BINARY)));
SELECT ALL * FROM t1, rt0, t0 WHERE ((((rt0.c3)+(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)+(rt0.c1)) IN ())) IS TRUE)  as count FROM t1, rt0, t0);
SELECT ALL * FROM t1, rt0, t0 WHERE ((((rt0.c3)+(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)+(rt0.c1)) IN ())) IS TRUE)  as count FROM t1, rt0, t0);
SELECT ALL * FROM t1, rt0, t0 WHERE ((((rt0.c3)+(rt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (NULL);
SELECT * FROM t0, t1, vt0 WHERE (((CAST(t0.c0 AS REAL)) NOT BETWEEN (t1.c0) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN t0.c0 WHEN t1.c0 THEN vt0.c0 ELSE '-57901545' END)));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS REAL)) NOT BETWEEN (t1.c0) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN t0.c0 WHEN t1.c0 THEN vt0.c0 ELSE '-57901545' END))) IS TRUE)  as count FROM t0, t1, vt0);
SELECT * FROM t0, t1, vt0 WHERE (((CAST(t0.c0 AS REAL)) NOT BETWEEN (t1.c0) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN t0.c0 WHEN t1.c0 THEN vt0.c0 ELSE '-57901545' END)));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS REAL)) NOT BETWEEN (t1.c0) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN t0.c0 WHEN t1.c0 THEN vt0.c0 ELSE '-57901545' END))) IS TRUE)  as count FROM t0, t1, vt0);
SELECT * FROM t0, t1, vt0 WHERE (((CAST(t0.c0 AS REAL)) NOT BETWEEN (t1.c0) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN t0.c0 WHEN t1.c0 THEN vt0.c0 ELSE '-57901545' END)));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN t1 ON ((load_extension(t0.c0))|(((t0.c0)<=(t1.c0)))) WHERE (NULL COLLATE NOCASE) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 ELSE t1.c0 END)<(t0.c0 COLLATE NOCASE)), ((t0.c0)>((NOT (t1.c0)))) ASC, (((t0.c0, t0.c0, t0.c0)) BETWEEN (((((t1.c0, t1.c0, t1.c0))<=((t1.c0, t1.c0, t1.c0))), t0.c0, ((((t0.c0)OR(t0.c0)))OR(t1.c0)))) AND ((LIKE(0Xffffffff925cf944, t1.c0), CAST(t1.c0 AS INTEGER), x'4a2b')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE) IS TRUE)  as count FROM t0 FULL OUTER JOIN t1 ON ((load_extension(t0.c0))|(((t0.c0)<=(t1.c0)))) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 ELSE t1.c0 END)<(t0.c0 COLLATE NOCASE)), ((t0.c0)>((NOT (t1.c0)))) ASC, (((t0.c0, t0.c0, t0.c0)) BETWEEN (((((t1.c0, t1.c0, t1.c0))<=((t1.c0, t1.c0, t1.c0))), t0.c0, ((((t0.c0)OR(t0.c0)))OR(t1.c0)))) AND ((LIKE(0Xffffffff925cf944, t1.c0), CAST(t1.c0 AS INTEGER), x'4a2b')))  NULLS FIRST);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN t1 ON ((load_extension(t0.c0))|(((t0.c0)<=(t1.c0)))) WHERE (NULL COLLATE NOCASE) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 ELSE t1.c0 END)<(t0.c0 COLLATE NOCASE)), ((t0.c0)>((NOT (t1.c0)))) ASC, (((t0.c0, t0.c0, t0.c0)) BETWEEN (((((t1.c0, t1.c0, t1.c0))<=((t1.c0, t1.c0, t1.c0))), t0.c0, ((((t0.c0)OR(t0.c0)))OR(t1.c0)))) AND ((LIKE(0Xffffffff925cf944, t1.c0), CAST(t1.c0 AS INTEGER), x'4a2b')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE) IS TRUE)  as count FROM t0 FULL OUTER JOIN t1 ON ((load_extension(t0.c0))|(((t0.c0)<=(t1.c0)))) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 ELSE t1.c0 END)<(t0.c0 COLLATE NOCASE)), ((t0.c0)>((NOT (t1.c0)))) ASC, (((t0.c0, t0.c0, t0.c0)) BETWEEN (((((t1.c0, t1.c0, t1.c0))<=((t1.c0, t1.c0, t1.c0))), t0.c0, ((((t0.c0)OR(t0.c0)))OR(t1.c0)))) AND ((LIKE(0Xffffffff925cf944, t1.c0), CAST(t1.c0 AS INTEGER), x'4a2b')))  NULLS FIRST);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN t1 ON ((load_extension(t0.c0))|(((t0.c0)<=(t1.c0)))) WHERE (NULL COLLATE NOCASE) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 ELSE t1.c0 END)<(t0.c0 COLLATE NOCASE)), ((t0.c0)>((NOT (t1.c0)))) ASC, (((t0.c0, t0.c0, t0.c0)) BETWEEN (((((t1.c0, t1.c0, t1.c0))<=((t1.c0, t1.c0, t1.c0))), t0.c0, ((((t0.c0)OR(t0.c0)))OR(t1.c0)))) AND ((LIKE(0Xffffffff925cf944, t1.c0), CAST(t1.c0 AS INTEGER), x'4a2b')))  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0, t1 WHERE (rt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0, t1);
SELECT COUNT(*) FROM t0, rt0, t1 WHERE (rt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0, t1);
SELECT COUNT(*) FROM t0, rt0, t1 WHERE (rt0.c0 COLLATE RTRIM);
SELECT * FROM rt0, vt0 WHERE ((CASE WHEN rt0.c3 THEN rt0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c3 THEN rt0.c1 END IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((CASE WHEN rt0.c3 THEN rt0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c3 THEN rt0.c1 END IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((CASE WHEN rt0.c3 THEN rt0.c1 END IN ()));
SELECT COUNT(*) FROM t0 WHERE (((('-1585258473') BETWEEN (t0.c0) AND (t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((('-1585258473') BETWEEN (t0.c0) AND (t0.c0)) IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((('-1585258473') BETWEEN (t0.c0) AND (t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((('-1585258473') BETWEEN (t0.c0) AND (t0.c0)) IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((('-1585258473') BETWEEN (t0.c0) AND (t0.c0)) IN ()));
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON CAST((('763825344') IS TRUE) AS INTEGER) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON CAST((('763825344') IS TRUE) AS INTEGER));
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON CAST((('763825344') IS TRUE) AS INTEGER) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON CAST((('763825344') IS TRUE) AS INTEGER));
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON CAST((('763825344') IS TRUE) AS INTEGER) WHERE (t0.c0);
SELECT ALL COUNT(*) FROM rt0, t0, t1, vt0 WHERE (((CAST(t1.c0 AS BLOB))<=(((NULL)%(x'')))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c0 AS BLOB))<=(((NULL)%(x''))))) IS TRUE)  as count FROM rt0, t0, t1, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, t1, vt0 WHERE (((CAST(t1.c0 AS BLOB))<=(((NULL)%(x'')))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c0 AS BLOB))<=(((NULL)%(x''))))) IS TRUE)  as count FROM rt0, t0, t1, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, t1, vt0 WHERE (((CAST(t1.c0 AS BLOB))<=(((NULL)%(x'')))));
SELECT COUNT(*) FROM rt0, t0 WHERE (((' 絎') IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((' 絎') IS FALSE)) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((' 絎') IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((' 絎') IS FALSE)) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((' 絎') IS FALSE));
SELECT * FROM rt0, vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)) COLLATE NOCASE) ORDER BY ((0.8169752490288079) BETWEEN (((vt0.c0)AND(vt0.c0))) AND (((rt0.c2)|(rt0.c1))))  NULLS FIRST, ((rt0.c2 COLLATE RTRIM)&(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((0.8169752490288079) BETWEEN (((vt0.c0)AND(vt0.c0))) AND (((rt0.c2)|(rt0.c1))))  NULLS FIRST, ((rt0.c2 COLLATE RTRIM)&(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)))));
SELECT * FROM rt0, vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)) COLLATE NOCASE) ORDER BY ((0.8169752490288079) BETWEEN (((vt0.c0)AND(vt0.c0))) AND (((rt0.c2)|(rt0.c1))))  NULLS FIRST, ((rt0.c2 COLLATE RTRIM)&(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((0.8169752490288079) BETWEEN (((vt0.c0)AND(vt0.c0))) AND (((rt0.c2)|(rt0.c1))))  NULLS FIRST, ((rt0.c2 COLLATE RTRIM)&(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)))));
SELECT * FROM rt0, vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)) COLLATE NOCASE) ORDER BY ((0.8169752490288079) BETWEEN (((vt0.c0)AND(vt0.c0))) AND (((rt0.c2)|(rt0.c1))))  NULLS FIRST, ((rt0.c2 COLLATE RTRIM)&(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2))));
SELECT * FROM vt0 WHERE ((- (CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((- (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- (CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((- (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- (CAST(vt0.c0 AS REAL))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((((((rt0.c2)&(vt0.c0)))AND((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((x'2b7270e9'))))))OR(((rt0.c2)<=(rt0.c2)))))AND(CAST(rt0.c2 AS REAL))))AND(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)&(vt0.c0)))AND((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((x'2b7270e9'))))))OR(((rt0.c2)<=(rt0.c2)))))AND(CAST(rt0.c2 AS REAL))))AND(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((((((rt0.c2)&(vt0.c0)))AND((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((x'2b7270e9'))))))OR(((rt0.c2)<=(rt0.c2)))))AND(CAST(rt0.c2 AS REAL))))AND(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)&(vt0.c0)))AND((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((x'2b7270e9'))))))OR(((rt0.c2)<=(rt0.c2)))))AND(CAST(rt0.c2 AS REAL))))AND(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((((((rt0.c2)&(vt0.c0)))AND((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((x'2b7270e9'))))))OR(((rt0.c2)<=(rt0.c2)))))AND(CAST(rt0.c2 AS REAL))))AND(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 END)));
SELECT * FROM t1 FULL OUTER JOIN t0 ON '1399756311' INNER JOIN rt0 ON CASE WHEN t0.c0 THEN ((t1.c0)|(rt0.c2)) WHEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((t1.c0) IS FALSE) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) THEN (((NULL, t1.c0, rt0.c1))>=((0X2e6adfca, t1.c0, t1.c0))) ELSE (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) END INNER JOIN vt0 ON MIN((rt0.c0 IN ()), (- (t1.c0))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t1 FULL OUTER JOIN t0 ON '1399756311' INNER JOIN rt0 ON CASE WHEN t0.c0 THEN ((t1.c0)|(rt0.c2)) WHEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((t1.c0) IS FALSE) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) THEN (((NULL, t1.c0, rt0.c1))>=((0X2e6adfca, t1.c0, t1.c0))) ELSE (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) END INNER JOIN vt0 ON MIN((rt0.c0 IN ()), (- (t1.c0))));
SELECT * FROM t1 FULL OUTER JOIN t0 ON '1399756311' INNER JOIN rt0 ON CASE WHEN t0.c0 THEN ((t1.c0)|(rt0.c2)) WHEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((t1.c0) IS FALSE) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) THEN (((NULL, t1.c0, rt0.c1))>=((0X2e6adfca, t1.c0, t1.c0))) ELSE (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) END INNER JOIN vt0 ON MIN((rt0.c0 IN ()), (- (t1.c0))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t1 FULL OUTER JOIN t0 ON '1399756311' INNER JOIN rt0 ON CASE WHEN t0.c0 THEN ((t1.c0)|(rt0.c2)) WHEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((t1.c0) IS FALSE) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) THEN (((NULL, t1.c0, rt0.c1))>=((0X2e6adfca, t1.c0, t1.c0))) ELSE (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) END INNER JOIN vt0 ON MIN((rt0.c0 IN ()), (- (t1.c0))));
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (CASE (((rt0.c3)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))  WHEN ((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN (NOT (rt0.c3)) WHEN ((('/IB?\VAMz'))>=((rt0.c0))) THEN '-D' WHEN CAST(rt0.c2 AS INTEGER) THEN t1.c0 COLLATE NOCASE ELSE '1012078461' END) ORDER BY ((((CAST(t1.c0 AS BLOB))OR(t1.c0 COLLATE BINARY)))OR(rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c3)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))  WHEN ((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN (NOT (rt0.c3)) WHEN ((('/IB?\VAMz'))>=((rt0.c0))) THEN '-D' WHEN CAST(rt0.c2 AS INTEGER) THEN t1.c0 COLLATE NOCASE ELSE '1012078461' END) IS TRUE)  as count FROM rt0, t1 ORDER BY ((((CAST(t1.c0 AS BLOB))OR(t1.c0 COLLATE BINARY)))OR(rt0.c0)) DESC);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (CASE (((rt0.c3)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))  WHEN ((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN (NOT (rt0.c3)) WHEN ((('/IB?\VAMz'))>=((rt0.c0))) THEN '-D' WHEN CAST(rt0.c2 AS INTEGER) THEN t1.c0 COLLATE NOCASE ELSE '1012078461' END) ORDER BY ((((CAST(t1.c0 AS BLOB))OR(t1.c0 COLLATE BINARY)))OR(rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c3)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))  WHEN ((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN (NOT (rt0.c3)) WHEN ((('/IB?\VAMz'))>=((rt0.c0))) THEN '-D' WHEN CAST(rt0.c2 AS INTEGER) THEN t1.c0 COLLATE NOCASE ELSE '1012078461' END) IS TRUE)  as count FROM rt0, t1 ORDER BY ((((CAST(t1.c0 AS BLOB))OR(t1.c0 COLLATE BINARY)))OR(rt0.c0)) DESC);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (CASE (((rt0.c3)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))  WHEN ((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN (NOT (rt0.c3)) WHEN ((('/IB?\VAMz'))>=((rt0.c0))) THEN '-D' WHEN CAST(rt0.c2 AS INTEGER) THEN t1.c0 COLLATE NOCASE ELSE '1012078461' END) ORDER BY ((((CAST(t1.c0 AS BLOB))OR(t1.c0 COLLATE BINARY)))OR(rt0.c0)) DESC;
SELECT * FROM rt0, vt0 WHERE (((NULL)|((('1019214473') NOT BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((NULL)|((('1019214473') NOT BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((NULL)|((('1019214473') NOT BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((NULL)|((('1019214473') NOT BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((NULL)|((('1019214473') NOT BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT ALL * FROM t1, t0, rt0, vt0 WHERE (CAST('粙dbhS>俁1' COLLATE RTRIM AS TEXT)) ORDER BY ((((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c3)))AND((('贮.&1-500000o')GLOB(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)))OR(((rt0.c2) IS TRUE))))OR(rt0.c3 COLLATE RTRIM)) DESC, rt0.c3;
SELECT SUM(count) FROM (SELECT ALL ((CAST('粙dbhS>俁1' COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM t1, t0, rt0, vt0 ORDER BY ((((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c3)))AND((('贮.&1-500000o')GLOB(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)))OR(((rt0.c2) IS TRUE))))OR(rt0.c3 COLLATE RTRIM)) DESC, rt0.c3);
SELECT ALL * FROM t1, t0, rt0, vt0 WHERE (CAST('粙dbhS>俁1' COLLATE RTRIM AS TEXT)) ORDER BY ((((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c3)))AND((('贮.&1-500000o')GLOB(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)))OR(((rt0.c2) IS TRUE))))OR(rt0.c3 COLLATE RTRIM)) DESC, rt0.c3;
SELECT SUM(count) FROM (SELECT ALL ((CAST('粙dbhS>俁1' COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM t1, t0, rt0, vt0 ORDER BY ((((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c3)))AND((('贮.&1-500000o')GLOB(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)))OR(((rt0.c2) IS TRUE))))OR(rt0.c3 COLLATE RTRIM)) DESC, rt0.c3);
SELECT ALL * FROM t1, t0, rt0, vt0 WHERE (CAST('粙dbhS>俁1' COLLATE RTRIM AS TEXT)) ORDER BY ((((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c3)))AND((('贮.&1-500000o')GLOB(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)))OR(((rt0.c2) IS TRUE))))OR(rt0.c3 COLLATE RTRIM)) DESC, rt0.c3;
SELECT ALL COUNT(*) FROM vt0, t1, t0 WHERE (('-766106109' IN ())) ORDER BY (((CASE WHEN t1.c0 THEN t1.c0 ELSE vt0.c0 END, '', 0xfffffffff5fd839e))>=((t1.c0 COLLATE NOCASE, (+ (vt0.c0)), t0.c0 COLLATE NOCASE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((('-766106109' IN ())) IS TRUE)  as count FROM vt0, t1, t0 ORDER BY (((CASE WHEN t1.c0 THEN t1.c0 ELSE vt0.c0 END, '', 0xfffffffff5fd839e))>=((t1.c0 COLLATE NOCASE, (+ (vt0.c0)), t0.c0 COLLATE NOCASE))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t1, t0 WHERE (('-766106109' IN ())) ORDER BY (((CASE WHEN t1.c0 THEN t1.c0 ELSE vt0.c0 END, '', 0xfffffffff5fd839e))>=((t1.c0 COLLATE NOCASE, (+ (vt0.c0)), t0.c0 COLLATE NOCASE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((('-766106109' IN ())) IS TRUE)  as count FROM vt0, t1, t0 ORDER BY (((CASE WHEN t1.c0 THEN t1.c0 ELSE vt0.c0 END, '', 0xfffffffff5fd839e))>=((t1.c0 COLLATE NOCASE, (+ (vt0.c0)), t0.c0 COLLATE NOCASE))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t1, t0 WHERE (('-766106109' IN ())) ORDER BY (((CASE WHEN t1.c0 THEN t1.c0 ELSE vt0.c0 END, '', 0xfffffffff5fd839e))>=((t1.c0 COLLATE NOCASE, (+ (vt0.c0)), t0.c0 COLLATE NOCASE))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, rt0, t0 FULL OUTER JOIN vt0 ON NULL WHERE (((vt0.c0) BETWEEN (((rt0.c1)IS(rt0.c1))) AND (rt0.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (((rt0.c1)IS(rt0.c1))) AND (rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM t1, rt0, t0 FULL OUTER JOIN vt0 ON NULL);
SELECT ALL COUNT(*) FROM t1, rt0, t0 FULL OUTER JOIN vt0 ON NULL WHERE (((vt0.c0) BETWEEN (((rt0.c1)IS(rt0.c1))) AND (rt0.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (((rt0.c1)IS(rt0.c1))) AND (rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM t1, rt0, t0 FULL OUTER JOIN vt0 ON NULL);
SELECT ALL COUNT(*) FROM t1, rt0, t0 FULL OUTER JOIN vt0 ON NULL WHERE (((vt0.c0) BETWEEN (((rt0.c1)IS(rt0.c1))) AND (rt0.c3 COLLATE NOCASE)));
SELECT ALL * FROM rt0, t0 WHERE (LIKELY(((rt0.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((LIKELY(((rt0.c1) NOTNULL))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (LIKELY(((rt0.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((LIKELY(((rt0.c1) NOTNULL))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (LIKELY(((rt0.c1) NOTNULL)));
SELECT ALL COUNT(*) FROM vt0, t1, rt0, t0 WHERE (((((-1.487822176E9 IN (vt0.c0))))=(((((rt0.c2, rt0.c2, 'uHv4'))<((vt0.c0, vt0.c0, rt0.c3)))))));
SELECT SUM(count) FROM (SELECT ALL ((((((-1.487822176E9 IN (vt0.c0))))==(((((rt0.c2, rt0.c2, 'uHv4'))<((vt0.c0, vt0.c0, rt0.c3))))))) IS TRUE)  as count FROM vt0, t1, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, t1, rt0, t0 WHERE (((((-1.487822176E9 IN (vt0.c0))))=(((((rt0.c2, rt0.c2, 'uHv4'))<((vt0.c0, vt0.c0, rt0.c3)))))));
SELECT SUM(count) FROM (SELECT ALL ((((((-1.487822176E9 IN (vt0.c0))))==(((((rt0.c2, rt0.c2, 'uHv4'))<((vt0.c0, vt0.c0, rt0.c3))))))) IS TRUE)  as count FROM vt0, t1, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, t1, rt0, t0 WHERE (((((-1.487822176E9 IN (vt0.c0))))=(((((rt0.c2, rt0.c2, 'uHv4'))<((vt0.c0, vt0.c0, rt0.c3)))))));
SELECT * FROM rt0 WHERE (((((rt0.c1)LIKE(rt0.c2)))<<((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)LIKE(rt0.c2)))<<((~ (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1)LIKE(rt0.c2)))<<((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)LIKE(rt0.c2)))<<((~ (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1)LIKE(rt0.c2)))<<((~ (rt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (COALESCE(DISTINCT x'', x'9929' COLLATE NOCASE, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, t0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), ((t0.c0)>>(' *e'))));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT x'', x'9929' COLLATE NOCASE, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, t0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), ((t0.c0)>>(' *e')))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (COALESCE(DISTINCT x'', x'9929' COLLATE NOCASE, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, t0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), ((t0.c0)>>(' *e'))));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT x'', x'9929' COLLATE NOCASE, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, t0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), ((t0.c0)>>(' *e')))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (COALESCE(DISTINCT x'', x'9929' COLLATE NOCASE, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, t0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), ((t0.c0)>>(' *e'))));
SELECT ALL * FROM t1 WHERE (NULL) ORDER BY ((((((t1.c0)OR(x'bc72')))OR(t1.c0)))<(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1 ORDER BY ((((((t1.c0)OR(x'bc72')))OR(t1.c0)))<(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))) ASC);
SELECT ALL * FROM t1 WHERE (NULL) ORDER BY ((((((t1.c0)OR(x'bc72')))OR(t1.c0)))<(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1 ORDER BY ((((((t1.c0)OR(x'bc72')))OR(t1.c0)))<(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))) ASC);
SELECT ALL * FROM t1 WHERE (NULL) ORDER BY ((((((t1.c0)OR(x'bc72')))OR(t1.c0)))<(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))) ASC;
SELECT ALL * FROM t1 WHERE ((((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, ((((t1.c0)AND(t1.c0)))OR(t1.c0)), ((t1.c0) NOT NULL))) AND ((((t1.c0)IS(t1.c0)), ((0.6692880049731154)||(t1.c0)), t1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, ((((t1.c0)AND(t1.c0)))OR(t1.c0)), ((t1.c0) NOT NULL))) AND ((((t1.c0)IS(t1.c0)), ((0.6692880049731154)||(t1.c0)), t1.c0)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, ((((t1.c0)AND(t1.c0)))OR(t1.c0)), ((t1.c0) NOT NULL))) AND ((((t1.c0)IS(t1.c0)), ((0.6692880049731154)||(t1.c0)), t1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, ((((t1.c0)AND(t1.c0)))OR(t1.c0)), ((t1.c0) NOT NULL))) AND ((((t1.c0)IS(t1.c0)), ((0.6692880049731154)||(t1.c0)), t1.c0)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, ((((t1.c0)AND(t1.c0)))OR(t1.c0)), ((t1.c0) NOT NULL))) AND ((((t1.c0)IS(t1.c0)), ((0.6692880049731154)||(t1.c0)), t1.c0))));
SELECT COUNT(*) FROM rt0, t0, t1, vt0 WHERE (CAST(x'' AS TEXT) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0, t1, vt0);
SELECT COUNT(*) FROM rt0, t0, t1, vt0 WHERE (CAST(x'' AS TEXT) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0, t1, vt0);
SELECT COUNT(*) FROM rt0, t0, t1, vt0 WHERE (CAST(x'' AS TEXT) COLLATE RTRIM);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))-((vt0.c0 IN ())))) ORDER BY CASE WHEN (((vt0.c0))<((vt0.c0))) THEN (+ (x'b889')) ELSE (+ (vt0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))-((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (((vt0.c0))<((vt0.c0))) THEN (+ (x'b889')) ELSE (+ (vt0.c0)) END ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))-((vt0.c0 IN ())))) ORDER BY CASE WHEN (((vt0.c0))<((vt0.c0))) THEN (+ (x'b889')) ELSE (+ (vt0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))-((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (((vt0.c0))<((vt0.c0))) THEN (+ (x'b889')) ELSE (+ (vt0.c0)) END ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))-((vt0.c0 IN ())))) ORDER BY CASE WHEN (((vt0.c0))<((vt0.c0))) THEN (+ (x'b889')) ELSE (+ (vt0.c0)) END ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (TYPEOF(DISTINCT (NOT (t0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT (NOT (t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (TYPEOF(DISTINCT (NOT (t0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT (NOT (t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (TYPEOF(DISTINCT (NOT (t0.c0))));
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON (((((t1.c0))=((rt0.c3)))) BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3))) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))) RIGHT OUTER JOIN t1 ON ((t0.c0 COLLATE RTRIM) BETWEEN (((x'') NOTNULL)) AND (CASE WHEN rt0.c1 THEN t1.c0 WHEN rt0.c2 THEN t1.c0 WHEN rt0.c1 THEN rt0.c1 END)) WHERE ((((t1.c0)) BETWEEN ((t1.c0 COLLATE RTRIM)) AND ((UNLIKELY('-57901545')))));
SELECT SUM(count) FROM (SELECT (((((t1.c0)) BETWEEN ((t1.c0 COLLATE RTRIM)) AND ((UNLIKELY('-57901545'))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (((((t1.c0))==((rt0.c3)))) BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3))) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))) RIGHT OUTER JOIN t1 ON ((t0.c0 COLLATE RTRIM) BETWEEN (((x'') NOTNULL)) AND (CASE WHEN rt0.c1 THEN t1.c0 WHEN rt0.c2 THEN t1.c0 WHEN rt0.c1 THEN rt0.c1 END)));
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON (((((t1.c0))=((rt0.c3)))) BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3))) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))) RIGHT OUTER JOIN t1 ON ((t0.c0 COLLATE RTRIM) BETWEEN (((x'') NOTNULL)) AND (CASE WHEN rt0.c1 THEN t1.c0 WHEN rt0.c2 THEN t1.c0 WHEN rt0.c1 THEN rt0.c1 END)) WHERE ((((t1.c0)) BETWEEN ((t1.c0 COLLATE RTRIM)) AND ((UNLIKELY('-57901545')))));
SELECT SUM(count) FROM (SELECT (((((t1.c0)) BETWEEN ((t1.c0 COLLATE RTRIM)) AND ((UNLIKELY('-57901545'))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (((((t1.c0))==((rt0.c3)))) BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3))) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))) RIGHT OUTER JOIN t1 ON ((t0.c0 COLLATE RTRIM) BETWEEN (((x'') NOTNULL)) AND (CASE WHEN rt0.c1 THEN t1.c0 WHEN rt0.c2 THEN t1.c0 WHEN rt0.c1 THEN rt0.c1 END)));
SELECT ALL COUNT(*) FROM t1, t0 WHERE ((((-1667738045))<=(((- (t1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((-1667738045))<=(((- (t1.c0)))))) IS TRUE)  as count FROM t1, t0);
SELECT ALL COUNT(*) FROM t1, t0 WHERE ((((-1667738045))<=(((- (t1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((-1667738045))<=(((- (t1.c0)))))) IS TRUE)  as count FROM t1, t0);
SELECT ALL COUNT(*) FROM t1, t0 WHERE ((((-1667738045))<=(((- (t1.c0))))));
SELECT ALL * FROM t0, vt0, rt0, t1 WHERE ((((rt0.c3)) BETWEEN ((((NULL) NOT BETWEEN (t1.c0) AND (t0.c0)))) AND ((rt0.c3))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) BETWEEN ((((NULL) NOT BETWEEN (t1.c0) AND (t0.c0)))) AND ((rt0.c3)))) IS TRUE)  as count FROM t0, vt0, rt0, t1);
SELECT ALL * FROM t0, vt0, rt0, t1 WHERE ((((rt0.c3)) BETWEEN ((((NULL) NOT BETWEEN (t1.c0) AND (t0.c0)))) AND ((rt0.c3))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) BETWEEN ((((NULL) NOT BETWEEN (t1.c0) AND (t0.c0)))) AND ((rt0.c3)))) IS TRUE)  as count FROM t0, vt0, rt0, t1);
SELECT ALL * FROM t0, vt0, rt0, t1 WHERE ((((rt0.c3)) BETWEEN ((((NULL) NOT BETWEEN (t1.c0) AND (t0.c0)))) AND ((rt0.c3))));
SELECT ALL COUNT(*) FROM t0 WHERE (QUOTE(t0.c0) COLLATE BINARY) ORDER BY ((((t0.c0)*(t0.c0)))-(t0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((QUOTE(t0.c0) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)*(t0.c0)))-(t0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (QUOTE(t0.c0) COLLATE BINARY) ORDER BY ((((t0.c0)*(t0.c0)))-(t0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((QUOTE(t0.c0) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)*(t0.c0)))-(t0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (QUOTE(t0.c0) COLLATE BINARY) ORDER BY ((((t0.c0)*(t0.c0)))-(t0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT COUNT(*) FROM t1, rt0 LEFT OUTER JOIN t0 ON (- (((rt0.c2)||(rt0.c3)))) RIGHT OUTER JOIN vt0 ON rt0.c2 WHERE (((rt0.c3 COLLATE NOCASE)<((vt0.c0 IN (rt0.c1, t0.c0))))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE NOCASE)<((vt0.c0 IN (rt0.c1, t0.c0))))) IS TRUE)  as count FROM t1, rt0 LEFT OUTER JOIN t0 ON (- (((rt0.c2)||(rt0.c3)))) RIGHT OUTER JOIN vt0 ON rt0.c2 ORDER BY rt0.c0);
SELECT COUNT(*) FROM t1, rt0 LEFT OUTER JOIN t0 ON (- (((rt0.c2)||(rt0.c3)))) RIGHT OUTER JOIN vt0 ON rt0.c2 WHERE (((rt0.c3 COLLATE NOCASE)<((vt0.c0 IN (rt0.c1, t0.c0))))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE NOCASE)<((vt0.c0 IN (rt0.c1, t0.c0))))) IS TRUE)  as count FROM t1, rt0 LEFT OUTER JOIN t0 ON (- (((rt0.c2)||(rt0.c3)))) RIGHT OUTER JOIN vt0 ON rt0.c2 ORDER BY rt0.c0);
SELECT COUNT(*) FROM t1, rt0 LEFT OUTER JOIN t0 ON (- (((rt0.c2)||(rt0.c3)))) RIGHT OUTER JOIN vt0 ON rt0.c2 WHERE (((rt0.c3 COLLATE NOCASE)<((vt0.c0 IN (rt0.c1, t0.c0))))) ORDER BY rt0.c0;
SELECT * FROM rt0, vt0, t0 WHERE (((CAST(rt0.c0 AS REAL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS REAL)) IS TRUE)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (((CAST(rt0.c0 AS REAL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS REAL)) IS TRUE)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (((CAST(rt0.c0 AS REAL)) IS TRUE));
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (IFNULL(0x26007490, CAST(t1.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((IFNULL(0x26007490, CAST(t1.c0 AS INTEGER))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (IFNULL(0x26007490, CAST(t1.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((IFNULL(0x26007490, CAST(t1.c0 AS INTEGER))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (IFNULL(0x26007490, CAST(t1.c0 AS INTEGER)));
SELECT * FROM t0, vt0 WHERE ((- (CAST(vt0.c0 AS BLOB)))) ORDER BY (LOWER(DISTINCT t0.c0) IN ());
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (LOWER(DISTINCT t0.c0) IN ()));
SELECT * FROM t0, vt0 WHERE ((- (CAST(vt0.c0 AS BLOB)))) ORDER BY (LOWER(DISTINCT t0.c0) IN ());
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (LOWER(DISTINCT t0.c0) IN ()));
SELECT * FROM t0, vt0 WHERE ((- (CAST(vt0.c0 AS BLOB)))) ORDER BY (LOWER(DISTINCT t0.c0) IN ());
SELECT COUNT(*) FROM t1 INNER JOIN t0 ON x'' LEFT OUTER JOIN vt0 ON '-251817391' INNER JOIN rt0 ON (0Xffffffffa5eb7b44 IN ((t0.c0 IN ()), CAST(rt0.c2 AS BLOB))) WHERE (CASE WHEN rt0.c2 THEN (vt0.c0 IN ()) ELSE (rt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN (vt0.c0 IN ()) ELSE (rt0.c1 IN ()) END) IS TRUE)  as count FROM t1 INNER JOIN t0 ON x'' LEFT OUTER JOIN vt0 ON '-251817391' INNER JOIN rt0 ON (0Xffffffffa5eb7b44 IN ((t0.c0 IN ()), CAST(rt0.c2 AS BLOB))));
SELECT COUNT(*) FROM t1 INNER JOIN t0 ON x'' LEFT OUTER JOIN vt0 ON '-251817391' INNER JOIN rt0 ON (0Xffffffffa5eb7b44 IN ((t0.c0 IN ()), CAST(rt0.c2 AS BLOB))) WHERE (CASE WHEN rt0.c2 THEN (vt0.c0 IN ()) ELSE (rt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN (vt0.c0 IN ()) ELSE (rt0.c1 IN ()) END) IS TRUE)  as count FROM t1 INNER JOIN t0 ON x'' LEFT OUTER JOIN vt0 ON '-251817391' INNER JOIN rt0 ON (0Xffffffffa5eb7b44 IN ((t0.c0 IN ()), CAST(rt0.c2 AS BLOB))));
SELECT COUNT(*) FROM t1 INNER JOIN t0 ON x'' LEFT OUTER JOIN vt0 ON '-251817391' INNER JOIN rt0 ON (0Xffffffffa5eb7b44 IN ((t0.c0 IN ()), CAST(rt0.c2 AS BLOB))) WHERE (CASE WHEN rt0.c2 THEN (vt0.c0 IN ()) ELSE (rt0.c1 IN ()) END);
SELECT ALL * FROM rt0, vt0 WHERE ((('y3{#1-')&(((rt0.c1)<=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((('y3{#1-')&(((rt0.c1)<=(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((('y3{#1-')&(((rt0.c1)<=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((('y3{#1-')&(((rt0.c1)<=(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((('y3{#1-')&(((rt0.c1)<=(rt0.c1)))));
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE ((t0.c0) ISNULL)  WHEN ((vt0.c0) IS TRUE) THEN TRIM(t0.c0) END) ORDER BY (NOT ((- (t0.c0)))) DESC, t0.c0;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0) ISNULL)  WHEN ((vt0.c0) IS TRUE) THEN TRIM(t0.c0) END) IS TRUE)  as count FROM vt0, t0 ORDER BY (NOT ((- (t0.c0)))) DESC, t0.c0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE ((t0.c0) ISNULL)  WHEN ((vt0.c0) IS TRUE) THEN TRIM(t0.c0) END) ORDER BY (NOT ((- (t0.c0)))) DESC, t0.c0;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0) ISNULL)  WHEN ((vt0.c0) IS TRUE) THEN TRIM(t0.c0) END) IS TRUE)  as count FROM vt0, t0 ORDER BY (NOT ((- (t0.c0)))) DESC, t0.c0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE ((t0.c0) ISNULL)  WHEN ((vt0.c0) IS TRUE) THEN TRIM(t0.c0) END) ORDER BY (NOT ((- (t0.c0)))) DESC, t0.c0;
SELECT COUNT(*) FROM rt0 INNER JOIN t0 ON (((rt0.c0)) NOT BETWEEN ((((((t0.c0)AND(rt0.c2)))AND(rt0.c2)))) AND ((CAST(t1.c0 AS BLOB)))) FULL OUTER JOIN t1 ON rt0.c3 WHERE ((((rt0.c1, rt0.c3, '0.1575578119043265')) NOT BETWEEN ((((x'6494') ISNULL), (+ (rt0.c0)), CAST(rt0.c1 AS REAL))) AND ((TYPEOF(DISTINCT rt0.c0), ((t0.c0) NOT BETWEEN (t0.c0) AND (t1.c0)), (NOT (t1.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c3, '0.1575578119043265')) NOT BETWEEN ((((x'6494') ISNULL), (+ (rt0.c0)), CAST(rt0.c1 AS REAL))) AND ((TYPEOF(DISTINCT rt0.c0), ((t0.c0) NOT BETWEEN (t0.c0) AND (t1.c0)), (NOT (t1.c0)))))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON (((rt0.c0)) NOT BETWEEN ((((((t0.c0)AND(rt0.c2)))AND(rt0.c2)))) AND ((CAST(t1.c0 AS BLOB)))) FULL OUTER JOIN t1 ON rt0.c3);
SELECT COUNT(*) FROM rt0 INNER JOIN t0 ON (((rt0.c0)) NOT BETWEEN ((((((t0.c0)AND(rt0.c2)))AND(rt0.c2)))) AND ((CAST(t1.c0 AS BLOB)))) FULL OUTER JOIN t1 ON rt0.c3 WHERE ((((rt0.c1, rt0.c3, '0.1575578119043265')) NOT BETWEEN ((((x'6494') ISNULL), (+ (rt0.c0)), CAST(rt0.c1 AS REAL))) AND ((TYPEOF(DISTINCT rt0.c0), ((t0.c0) NOT BETWEEN (t0.c0) AND (t1.c0)), (NOT (t1.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c3, '0.1575578119043265')) NOT BETWEEN ((((x'6494') ISNULL), (+ (rt0.c0)), CAST(rt0.c1 AS REAL))) AND ((TYPEOF(DISTINCT rt0.c0), ((t0.c0) NOT BETWEEN (t0.c0) AND (t1.c0)), (NOT (t1.c0)))))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON (((rt0.c0)) NOT BETWEEN ((((((t0.c0)AND(rt0.c2)))AND(rt0.c2)))) AND ((CAST(t1.c0 AS BLOB)))) FULL OUTER JOIN t1 ON rt0.c3);
SELECT * FROM t0, rt0, t1, vt0 WHERE (((json_array(t0.c0, vt0.c0, t1.c0, rt0.c0)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((json_array(t0.c0, vt0.c0, t1.c0, rt0.c0)) ISNULL)) IS TRUE)  as count FROM t0, rt0, t1, vt0);
SELECT * FROM t0, rt0, t1, vt0 WHERE (((json_array(t0.c0, vt0.c0, t1.c0, rt0.c0)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((json_array(t0.c0, vt0.c0, t1.c0, rt0.c0)) ISNULL)) IS TRUE)  as count FROM t0, rt0, t1, vt0);
SELECT * FROM t0, rt0, t1, vt0 WHERE (((json_array(t0.c0, vt0.c0, t1.c0, rt0.c0)) ISNULL));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (highlight(((((rt0.c3)OR(1.567323185E9)))AND(vt0.c0)), rt0.c3, CAST(t0.c0 AS REAL), CAST(vt0.c0 AS TEXT))) ORDER BY 0.3644044334016501, CASE WHEN json_array_length(t0.c0) THEN CAST(rt0.c3 AS REAL) ELSE ((0x566ab840) IS TRUE) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((highlight(((((rt0.c3)OR(1.567323185E9)))AND(vt0.c0)), rt0.c3, CAST(t0.c0 AS REAL), CAST(vt0.c0 AS TEXT))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY 0.3644044334016501, CASE WHEN json_array_length(t0.c0) THEN CAST(rt0.c3 AS REAL) ELSE ((0X566ab840) IS TRUE) END ASC);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (highlight(((((rt0.c3)OR(1.567323185E9)))AND(vt0.c0)), rt0.c3, CAST(t0.c0 AS REAL), CAST(vt0.c0 AS TEXT))) ORDER BY 0.3644044334016501, CASE WHEN json_array_length(t0.c0) THEN CAST(rt0.c3 AS REAL) ELSE ((0x566ab840) IS TRUE) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((highlight(((((rt0.c3)OR(1.567323185E9)))AND(vt0.c0)), rt0.c3, CAST(t0.c0 AS REAL), CAST(vt0.c0 AS TEXT))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY 0.3644044334016501, CASE WHEN json_array_length(t0.c0) THEN CAST(rt0.c3 AS REAL) ELSE ((0X566ab840) IS TRUE) END ASC);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (highlight(((((rt0.c3)OR(1.567323185E9)))AND(vt0.c0)), rt0.c3, CAST(t0.c0 AS REAL), CAST(vt0.c0 AS TEXT))) ORDER BY 0.3644044334016501, CASE WHEN json_array_length(t0.c0) THEN CAST(rt0.c3 AS REAL) ELSE ((0x566ab840) IS TRUE) END ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (COALESCE(DISTINCT CASE WHEN -404987715 THEN t0.c0 ELSE -954953095 END, NULL, CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, 0.7558007602457691)) ORDER BY CAST(((t0.c0)+(t0.c0)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT CASE WHEN -404987715 THEN t0.c0 ELSE -954953095 END, NULL, CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, 0.7558007602457691)) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c0)+(t0.c0)) AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (COALESCE(DISTINCT CASE WHEN -404987715 THEN t0.c0 ELSE -954953095 END, NULL, CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, 0.7558007602457691)) ORDER BY CAST(((t0.c0)+(t0.c0)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT CASE WHEN -404987715 THEN t0.c0 ELSE -954953095 END, NULL, CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, 0.7558007602457691)) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c0)+(t0.c0)) AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (COALESCE(DISTINCT CASE WHEN -404987715 THEN t0.c0 ELSE -954953095 END, NULL, CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, 0.7558007602457691)) ORDER BY CAST(((t0.c0)+(t0.c0)) AS BLOB)  NULLS FIRST;
SELECT * FROM vt0, t0, rt0 WHERE ((((rt0.c3) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3) NOTNULL) IN ())) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE ((((rt0.c3) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3) NOTNULL) IN ())) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE ((((rt0.c3) NOTNULL) IN ()));
SELECT COUNT(*) FROM rt0 INNER JOIN t0 ON ((((rt0.c3)AND(rt0.c0)))>((~ (rt0.c2)))) INNER JOIN t1 ON (((((('1977497761')AND(rt0.c1)))OR(NULL))) BETWEEN (((((t1.c0)OR(t1.c0)))AND(rt0.c1))) AND (0.9177122031050211)) WHERE ((('ᅥ9 홳')<(((rt0.c1)!=(x''))))) ORDER BY rt0.c3 DESC;
SELECT SUM(count) FROM (SELECT ALL (((('ᅥ9 홳')<(((rt0.c1)<>(x''))))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ((((rt0.c3)AND(rt0.c0)))>((~ (rt0.c2)))) INNER JOIN t1 ON (((((('1977497761')AND(rt0.c1)))OR(NULL))) BETWEEN (((((t1.c0)OR(t1.c0)))AND(rt0.c1))) AND (0.9177122031050211)) ORDER BY rt0.c3 DESC);
SELECT COUNT(*) FROM rt0 INNER JOIN t0 ON ((((rt0.c3)AND(rt0.c0)))>((~ (rt0.c2)))) INNER JOIN t1 ON (((((('1977497761')AND(rt0.c1)))OR(NULL))) BETWEEN (((((t1.c0)OR(t1.c0)))AND(rt0.c1))) AND (0.9177122031050211)) WHERE ((('ᅥ9 홳')<(((rt0.c1)!=(x''))))) ORDER BY rt0.c3 DESC;
SELECT SUM(count) FROM (SELECT ALL (((('ᅥ9 홳')<(((rt0.c1)<>(x''))))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ((((rt0.c3)AND(rt0.c0)))>((~ (rt0.c2)))) INNER JOIN t1 ON (((((('1977497761')AND(rt0.c1)))OR(NULL))) BETWEEN (((((t1.c0)OR(t1.c0)))AND(rt0.c1))) AND (0.9177122031050211)) ORDER BY rt0.c3 DESC);
SELECT COUNT(*) FROM rt0 INNER JOIN t0 ON ((((rt0.c3)AND(rt0.c0)))>((~ (rt0.c2)))) INNER JOIN t1 ON (((((('1977497761')AND(rt0.c1)))OR(NULL))) BETWEEN (((((t1.c0)OR(t1.c0)))AND(rt0.c1))) AND (0.9177122031050211)) WHERE ((('ᅥ9 홳')<(((rt0.c1)!=(x''))))) ORDER BY rt0.c3 DESC;
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN t1 ON t0.c0 COLLATE BINARY COLLATE BINARY COLLATE BINARY WHERE (CAST(CAST(t1.c0 AS INTEGER) AS NUMERIC)) ORDER BY (CAST(t1.c0 AS NUMERIC) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t1.c0 AS INTEGER) AS NUMERIC)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN t1 ON t0.c0 COLLATE BINARY COLLATE BINARY COLLATE BINARY ORDER BY (CAST(t1.c0 AS NUMERIC) IN ()) DESC);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN t1 ON t0.c0 COLLATE BINARY COLLATE BINARY COLLATE BINARY WHERE (CAST(CAST(t1.c0 AS INTEGER) AS NUMERIC)) ORDER BY (CAST(t1.c0 AS NUMERIC) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t1.c0 AS INTEGER) AS NUMERIC)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN t1 ON t0.c0 COLLATE BINARY COLLATE BINARY COLLATE BINARY ORDER BY (CAST(t1.c0 AS NUMERIC) IN ()) DESC);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN t1 ON t0.c0 COLLATE BINARY COLLATE BINARY COLLATE BINARY WHERE (CAST(CAST(t1.c0 AS INTEGER) AS NUMERIC)) ORDER BY (CAST(t1.c0 AS NUMERIC) IN ()) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0)>>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0)>>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0)>>(vt0.c0)))));
SELECT ALL * FROM vt0, rt0 CROSS JOIN t1 ON ((((CASE rt0.c3  WHEN t0.c0 THEN rt0.c1 END)AND(((((((((rt0.c0)OR(t0.c0)))OR(t1.c0)))AND(t1.c0)))AND(rt0.c1)))))AND((x'' IN ()))) LEFT OUTER JOIN t0 ON ((1940492089 COLLATE NOCASE)IS(CASE t0.c0  WHEN rt0.c1 THEN vt0.c0 WHEN t1.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c2 END)) WHERE (0xffffffff9b4f99a3) ORDER BY TRIM(DISTINCT t0.c0) COLLATE RTRIM, ((((('558798347' IN ()))OR(x'a9f9')))AND((- (t1.c0)))) DESC  NULLS FIRST, ((UNLIKELY(DISTINCT t1.c0)) NOT BETWEEN (((rt0.c2)IS NOT(rt0.c3))) AND (CAST(t1.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0Xffffffff9b4f99a3) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN t1 ON ((((CASE rt0.c3  WHEN t0.c0 THEN rt0.c1 END)AND(((((((((rt0.c0)OR(t0.c0)))OR(t1.c0)))AND(t1.c0)))AND(rt0.c1)))))AND((x'' IN ()))) LEFT OUTER JOIN t0 ON ((1940492089 COLLATE NOCASE)IS(CASE t0.c0  WHEN rt0.c1 THEN vt0.c0 WHEN t1.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c2 END)) ORDER BY TRIM(DISTINCT t0.c0) COLLATE RTRIM, ((((('558798347' IN ()))OR(x'a9f9')))AND((- (t1.c0)))) DESC  NULLS FIRST, ((UNLIKELY(DISTINCT t1.c0)) NOT BETWEEN (((rt0.c2)IS NOT(rt0.c3))) AND (CAST(t1.c0 AS TEXT)))  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 CROSS JOIN t1 ON ((((CASE rt0.c3  WHEN t0.c0 THEN rt0.c1 END)AND(((((((((rt0.c0)OR(t0.c0)))OR(t1.c0)))AND(t1.c0)))AND(rt0.c1)))))AND((x'' IN ()))) LEFT OUTER JOIN t0 ON ((1940492089 COLLATE NOCASE)IS(CASE t0.c0  WHEN rt0.c1 THEN vt0.c0 WHEN t1.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c2 END)) WHERE (0xffffffff9b4f99a3) ORDER BY TRIM(DISTINCT t0.c0) COLLATE RTRIM, ((((('558798347' IN ()))OR(x'a9f9')))AND((- (t1.c0)))) DESC  NULLS FIRST, ((UNLIKELY(DISTINCT t1.c0)) NOT BETWEEN (((rt0.c2)IS NOT(rt0.c3))) AND (CAST(t1.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0Xffffffff9b4f99a3) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN t1 ON ((((CASE rt0.c3  WHEN t0.c0 THEN rt0.c1 END)AND(((((((((rt0.c0)OR(t0.c0)))OR(t1.c0)))AND(t1.c0)))AND(rt0.c1)))))AND((x'' IN ()))) LEFT OUTER JOIN t0 ON ((1940492089 COLLATE NOCASE)IS(CASE t0.c0  WHEN rt0.c1 THEN vt0.c0 WHEN t1.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c2 END)) ORDER BY TRIM(DISTINCT t0.c0) COLLATE RTRIM, ((((('558798347' IN ()))OR(x'a9f9')))AND((- (t1.c0)))) DESC  NULLS FIRST, ((UNLIKELY(DISTINCT t1.c0)) NOT BETWEEN (((rt0.c2)IS NOT(rt0.c3))) AND (CAST(t1.c0 AS TEXT)))  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 CROSS JOIN t1 ON ((((CASE rt0.c3  WHEN t0.c0 THEN rt0.c1 END)AND(((((((((rt0.c0)OR(t0.c0)))OR(t1.c0)))AND(t1.c0)))AND(rt0.c1)))))AND((x'' IN ()))) LEFT OUTER JOIN t0 ON ((1940492089 COLLATE NOCASE)IS(CASE t0.c0  WHEN rt0.c1 THEN vt0.c0 WHEN t1.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c2 END)) WHERE (0xffffffff9b4f99a3) ORDER BY TRIM(DISTINCT t0.c0) COLLATE RTRIM, ((((('558798347' IN ()))OR(x'a9f9')))AND((- (t1.c0)))) DESC  NULLS FIRST, ((UNLIKELY(DISTINCT t1.c0)) NOT BETWEEN (((rt0.c2)IS NOT(rt0.c3))) AND (CAST(t1.c0 AS TEXT)))  NULLS FIRST;
SELECT ALL * FROM vt0 CROSS JOIN t0 ON CASE (~ (t0.c0))  WHEN CAST(t0.c0 AS BLOB) THEN ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((((((((((((t0.c0)AND(vt0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(vt0.c0)))OR(t0.c0)) THEN ((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(vt0.c0)))AND(t0.c0)))AND(t0.c0)))AND(vt0.c0)) WHEN ((t0.c0) ISNULL) THEN ((t0.c0)IS(vt0.c0)) ELSE t0.c0 COLLATE NOCASE END WHERE (((((vt0.c0)*(t0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)*(t0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON CASE (~ (t0.c0))  WHEN CAST(t0.c0 AS BLOB) THEN ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((((((((((((t0.c0)AND(vt0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(vt0.c0)))OR(t0.c0)) THEN ((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(vt0.c0)))AND(t0.c0)))AND(t0.c0)))AND(vt0.c0)) WHEN ((t0.c0) ISNULL) THEN ((t0.c0)IS(vt0.c0)) ELSE t0.c0 COLLATE NOCASE END);
SELECT ALL * FROM vt0 CROSS JOIN t0 ON CASE (~ (t0.c0))  WHEN CAST(t0.c0 AS BLOB) THEN ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((((((((((((t0.c0)AND(vt0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(vt0.c0)))OR(t0.c0)) THEN ((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(vt0.c0)))AND(t0.c0)))AND(t0.c0)))AND(vt0.c0)) WHEN ((t0.c0) ISNULL) THEN ((t0.c0)IS(vt0.c0)) ELSE t0.c0 COLLATE NOCASE END WHERE (((((vt0.c0)*(t0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)*(t0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON CASE (~ (t0.c0))  WHEN CAST(t0.c0 AS BLOB) THEN ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((((((((((((t0.c0)AND(vt0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(vt0.c0)))OR(t0.c0)) THEN ((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(vt0.c0)))AND(t0.c0)))AND(t0.c0)))AND(vt0.c0)) WHEN ((t0.c0) ISNULL) THEN ((t0.c0)IS(vt0.c0)) ELSE t0.c0 COLLATE NOCASE END);
SELECT ALL * FROM vt0 CROSS JOIN t0 ON CASE (~ (t0.c0))  WHEN CAST(t0.c0 AS BLOB) THEN ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((((((((((((t0.c0)AND(vt0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(vt0.c0)))OR(t0.c0)) THEN ((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(vt0.c0)))AND(t0.c0)))AND(t0.c0)))AND(vt0.c0)) WHEN ((t0.c0) ISNULL) THEN ((t0.c0)IS(vt0.c0)) ELSE t0.c0 COLLATE NOCASE END WHERE (((((vt0.c0)*(t0.c0))) NOT NULL));
SELECT * FROM t1, vt0, rt0 WHERE (((rt0.c3 COLLATE NOCASE) IS TRUE)) ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) ISNULL));
SELECT * FROM t1, vt0, rt0 WHERE (((rt0.c3 COLLATE NOCASE) IS TRUE)) ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) ISNULL));
SELECT * FROM t1, vt0, rt0 WHERE (((rt0.c3 COLLATE NOCASE) IS TRUE)) ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) ISNULL);
SELECT * FROM rt0, t1 RIGHT OUTER JOIN t0 ON 289003098 WHERE (((LIKELIHOOD(rt0.c2, 0.40721330151999513)) NOT BETWEEN (((t1.c0)<(t1.c0))) AND (rt0.c2 COLLATE BINARY))) ORDER BY (((((rt0.c1)=(t1.c0))))>((((((NULL)OR(rt0.c2)))AND(t1.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(rt0.c2, 0.40721330151999513)) NOT BETWEEN (((t1.c0)<(t1.c0))) AND (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t1 RIGHT OUTER JOIN t0 ON 289003098 ORDER BY (((((rt0.c1)==(t1.c0))))>((((((NULL)OR(rt0.c2)))AND(t1.c0))))) DESC  NULLS LAST);
SELECT * FROM rt0, t1 RIGHT OUTER JOIN t0 ON 289003098 WHERE (((LIKELIHOOD(rt0.c2, 0.40721330151999513)) NOT BETWEEN (((t1.c0)<(t1.c0))) AND (rt0.c2 COLLATE BINARY))) ORDER BY (((((rt0.c1)=(t1.c0))))>((((((NULL)OR(rt0.c2)))AND(t1.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(rt0.c2, 0.40721330151999513)) NOT BETWEEN (((t1.c0)<(t1.c0))) AND (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t1 RIGHT OUTER JOIN t0 ON 289003098 ORDER BY (((((rt0.c1)==(t1.c0))))>((((((NULL)OR(rt0.c2)))AND(t1.c0))))) DESC  NULLS LAST);
SELECT * FROM rt0, t1 RIGHT OUTER JOIN t0 ON 289003098 WHERE (((LIKELIHOOD(rt0.c2, 0.40721330151999513)) NOT BETWEEN (((t1.c0)<(t1.c0))) AND (rt0.c2 COLLATE BINARY))) ORDER BY (((((rt0.c1)=(t1.c0))))>((((((NULL)OR(rt0.c2)))AND(t1.c0))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((x'') NOT NULL) WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))!=(TRIM(DISTINCT rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))<>(TRIM(DISTINCT rt0.c3)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((x'') NOT NULL));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((x'') NOT NULL) WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))!=(TRIM(DISTINCT rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))<>(TRIM(DISTINCT rt0.c3)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((x'') NOT NULL));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((x'') NOT NULL) WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))!=(TRIM(DISTINCT rt0.c3))));
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((((((vt0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c1)))) NOTNULL)) ORDER BY ((((0Xffffffffc7e4f892)AND(rt0.c2)))AND(((rt0.c2)||(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c1)))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((((0xffffffffc7e4f892)AND(rt0.c2)))AND(((rt0.c2)||(rt0.c2)))) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((((((vt0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c1)))) NOTNULL)) ORDER BY ((((0Xffffffffc7e4f892)AND(rt0.c2)))AND(((rt0.c2)||(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c1)))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((((0xffffffffc7e4f892)AND(rt0.c2)))AND(((rt0.c2)||(rt0.c2)))) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((((((vt0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c1)))) NOTNULL)) ORDER BY ((((0Xffffffffc7e4f892)AND(rt0.c2)))AND(((rt0.c2)||(rt0.c2)))) DESC;
SELECT ALL COUNT(*) FROM t0, t1 WHERE (((- (t0.c0)) IN ())) ORDER BY (((t0.c0, t1.c0, t0.c0)) NOT BETWEEN ((1065634029, t1.c0, t0.c0)) AND ((t1.c0, -1.46744539E8, t1.c0))) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((((- (t0.c0)) IN ())) IS TRUE)  as count FROM t0, t1 ORDER BY (((t0.c0, t1.c0, t0.c0)) NOT BETWEEN ((1065634029, t1.c0, t0.c0)) AND ((t1.c0, -1.46744539E8, t1.c0))) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM t0, t1 WHERE (((- (t0.c0)) IN ())) ORDER BY (((t0.c0, t1.c0, t0.c0)) NOT BETWEEN ((1065634029, t1.c0, t0.c0)) AND ((t1.c0, -1.46744539E8, t1.c0))) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((((- (t0.c0)) IN ())) IS TRUE)  as count FROM t0, t1 ORDER BY (((t0.c0, t1.c0, t0.c0)) NOT BETWEEN ((1065634029, t1.c0, t0.c0)) AND ((t1.c0, -1.46744539E8, t1.c0))) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM t0, t1 WHERE (((- (t0.c0)) IN ())) ORDER BY (((t0.c0, t1.c0, t0.c0)) NOT BETWEEN ((1065634029, t1.c0, t0.c0)) AND ((t1.c0, -1.46744539E8, t1.c0))) COLLATE RTRIM ASC;
SELECT * FROM t1, t0 WHERE ((~ (((t0.c0) ISNULL)))) ORDER BY t1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c0) ISNULL)))) IS TRUE)  as count FROM t1, t0 ORDER BY t1.c0  NULLS FIRST);
SELECT * FROM t1, t0 WHERE ((~ (((t0.c0) ISNULL)))) ORDER BY t1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c0) ISNULL)))) IS TRUE)  as count FROM t1, t0 ORDER BY t1.c0  NULLS FIRST);
SELECT * FROM t1, t0 WHERE ((~ (((t0.c0) ISNULL)))) ORDER BY t1.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON (((((t0.c0, vt0.c0, vt0.c0)) BETWEEN ((t0.c0, t0.c0, vt0.c0)) AND ((t0.c0, 0X4ff92216, vt0.c0))))GLOB(((vt0.c0) NOTNULL))) WHERE (((0.14465693572952654) BETWEEN (CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END) AND (((vt0.c0)&(vt0.c0))))) ORDER BY ((((vt0.c0)OR(t0.c0)))||(((-1.668571749E9) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC, (((vt0.c0)IS(t0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0.14465693572952654) BETWEEN (CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END) AND (((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((((t0.c0, vt0.c0, vt0.c0)) BETWEEN ((t0.c0, t0.c0, vt0.c0)) AND ((t0.c0, 0X4ff92216, vt0.c0))))GLOB(((vt0.c0) NOTNULL))) ORDER BY ((((vt0.c0)OR(t0.c0)))||(((-1.668571749E9) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC, (((vt0.c0)IS(t0.c0)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON (((((t0.c0, vt0.c0, vt0.c0)) BETWEEN ((t0.c0, t0.c0, vt0.c0)) AND ((t0.c0, 0X4ff92216, vt0.c0))))GLOB(((vt0.c0) NOTNULL))) WHERE (((0.14465693572952654) BETWEEN (CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END) AND (((vt0.c0)&(vt0.c0))))) ORDER BY ((((vt0.c0)OR(t0.c0)))||(((-1.668571749E9) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC, (((vt0.c0)IS(t0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0.14465693572952654) BETWEEN (CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END) AND (((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((((t0.c0, vt0.c0, vt0.c0)) BETWEEN ((t0.c0, t0.c0, vt0.c0)) AND ((t0.c0, 0X4ff92216, vt0.c0))))GLOB(((vt0.c0) NOTNULL))) ORDER BY ((((vt0.c0)OR(t0.c0)))||(((-1.668571749E9) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC, (((vt0.c0)IS(t0.c0)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON (((((t0.c0, vt0.c0, vt0.c0)) BETWEEN ((t0.c0, t0.c0, vt0.c0)) AND ((t0.c0, 0X4ff92216, vt0.c0))))GLOB(((vt0.c0) NOTNULL))) WHERE (((0.14465693572952654) BETWEEN (CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END) AND (((vt0.c0)&(vt0.c0))))) ORDER BY ((((vt0.c0)OR(t0.c0)))||(((-1.668571749E9) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC, (((vt0.c0)IS(t0.c0)) IN ())  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0, t1 WHERE (t0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0 COLLATE BINARY) IS TRUE)  as count FROM rt0, t0, t1);
SELECT COUNT(*) FROM rt0, t0, t1 WHERE (t0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0 COLLATE BINARY) IS TRUE)  as count FROM rt0, t0, t1);
SELECT COUNT(*) FROM rt0, t0, t1 WHERE (t0.c0 COLLATE BINARY);
SELECT ALL * FROM vt0, rt0, t1 WHERE (CASE WHEN ((rt0.c1)AND(rt0.c0)) THEN ((((0X54d9e315)AND(rt0.c1)))AND(vt0.c0)) WHEN t1.c0 COLLATE NOCASE THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c3 END WHEN ((rt0.c3) ISNULL) THEN t1.c0 END) ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c2 ELSE t1.c0 END)OR(-1.197417912E9)))OR(rt0.c2 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1)AND(rt0.c0)) THEN ((((0x54d9e315)AND(rt0.c1)))AND(vt0.c0)) WHEN t1.c0 COLLATE NOCASE THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c3 END WHEN ((rt0.c3) ISNULL) THEN t1.c0 END) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c2 ELSE t1.c0 END)OR(-1.197417912E9)))OR(rt0.c2 COLLATE RTRIM)) DESC);
SELECT ALL * FROM vt0, rt0, t1 WHERE (CASE WHEN ((rt0.c1)AND(rt0.c0)) THEN ((((0X54d9e315)AND(rt0.c1)))AND(vt0.c0)) WHEN t1.c0 COLLATE NOCASE THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c3 END WHEN ((rt0.c3) ISNULL) THEN t1.c0 END) ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c2 ELSE t1.c0 END)OR(-1.197417912E9)))OR(rt0.c2 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1)AND(rt0.c0)) THEN ((((0x54d9e315)AND(rt0.c1)))AND(vt0.c0)) WHEN t1.c0 COLLATE NOCASE THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c3 END WHEN ((rt0.c3) ISNULL) THEN t1.c0 END) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c2 ELSE t1.c0 END)OR(-1.197417912E9)))OR(rt0.c2 COLLATE RTRIM)) DESC);
SELECT ALL * FROM vt0, rt0, t1 WHERE (CASE WHEN ((rt0.c1)AND(rt0.c0)) THEN ((((0X54d9e315)AND(rt0.c1)))AND(vt0.c0)) WHEN t1.c0 COLLATE NOCASE THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c3 END WHEN ((rt0.c3) ISNULL) THEN t1.c0 END) ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c2 ELSE t1.c0 END)OR(-1.197417912E9)))OR(rt0.c2 COLLATE RTRIM)) DESC;
SELECT COUNT(*) FROM t0, t1, rt0 WHERE ((~ (rt0.c3 COLLATE RTRIM))) ORDER BY CASE WHEN rt0.c3 COLLATE BINARY THEN (+ (t1.c0)) WHEN TYPEOF(DISTINCT rt0.c0) THEN ((rt0.c3)-(rt0.c3)) WHEN ((rt0.c2) NOT NULL) THEN (rt0.c0 IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM t0, t1, rt0 ORDER BY CASE WHEN rt0.c3 COLLATE BINARY THEN (+ (t1.c0)) WHEN TYPEOF(DISTINCT rt0.c0) THEN ((rt0.c3)-(rt0.c3)) WHEN ((rt0.c2) NOT NULL) THEN (rt0.c0 IN ()) END  NULLS FIRST);
SELECT COUNT(*) FROM t0, t1, rt0 WHERE ((~ (rt0.c3 COLLATE RTRIM))) ORDER BY CASE WHEN rt0.c3 COLLATE BINARY THEN (+ (t1.c0)) WHEN TYPEOF(DISTINCT rt0.c0) THEN ((rt0.c3)-(rt0.c3)) WHEN ((rt0.c2) NOT NULL) THEN (rt0.c0 IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM t0, t1, rt0 ORDER BY CASE WHEN rt0.c3 COLLATE BINARY THEN (+ (t1.c0)) WHEN TYPEOF(DISTINCT rt0.c0) THEN ((rt0.c3)-(rt0.c3)) WHEN ((rt0.c2) NOT NULL) THEN (rt0.c0 IN ()) END  NULLS FIRST);
SELECT COUNT(*) FROM t0, t1, rt0 WHERE ((~ (rt0.c3 COLLATE RTRIM))) ORDER BY CASE WHEN rt0.c3 COLLATE BINARY THEN (+ (t1.c0)) WHEN TYPEOF(DISTINCT rt0.c0) THEN ((rt0.c3)-(rt0.c3)) WHEN ((rt0.c2) NOT NULL) THEN (rt0.c0 IN ()) END  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c0, 268721137, rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), rt0.c3 COLLATE RTRIM, CAST(rt0.c2 AS TEXT), IFNULL(rt0.c3, rt0.c0), ((rt0.c3) BETWEEN (rt0.c1) AND ('-954953095')))) AND ((rt0.c2 COLLATE BINARY, (NOT (rt0.c2)), (rt0.c1 IN ()), ((rt0.c0)LIKE(rt0.c0)), ((((rt0.c2)AND(rt0.c1)))AND(''))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, 268721137, rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), rt0.c3 COLLATE RTRIM, CAST(rt0.c2 AS TEXT), IFNULL(rt0.c3, rt0.c0), ((rt0.c3) BETWEEN (rt0.c1) AND ('-954953095')))) AND ((rt0.c2 COLLATE BINARY, (NOT (rt0.c2)), (rt0.c1 IN ()), ((rt0.c0)LIKE(rt0.c0)), ((((rt0.c2)AND(rt0.c1)))AND('')))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0, 268721137, rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), rt0.c3 COLLATE RTRIM, CAST(rt0.c2 AS TEXT), IFNULL(rt0.c3, rt0.c0), ((rt0.c3) BETWEEN (rt0.c1) AND ('-954953095')))) AND ((rt0.c2 COLLATE BINARY, (NOT (rt0.c2)), (rt0.c1 IN ()), ((rt0.c0)LIKE(rt0.c0)), ((((rt0.c2)AND(rt0.c1)))AND(''))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, 268721137, rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), rt0.c3 COLLATE RTRIM, CAST(rt0.c2 AS TEXT), IFNULL(rt0.c3, rt0.c0), ((rt0.c3) BETWEEN (rt0.c1) AND ('-954953095')))) AND ((rt0.c2 COLLATE BINARY, (NOT (rt0.c2)), (rt0.c1 IN ()), ((rt0.c0)LIKE(rt0.c0)), ((((rt0.c2)AND(rt0.c1)))AND('')))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0, 268721137, rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), rt0.c3 COLLATE RTRIM, CAST(rt0.c2 AS TEXT), IFNULL(rt0.c3, rt0.c0), ((rt0.c3) BETWEEN (rt0.c1) AND ('-954953095')))) AND ((rt0.c2 COLLATE BINARY, (NOT (rt0.c2)), (rt0.c1 IN ()), ((rt0.c0)LIKE(rt0.c0)), ((((rt0.c2)AND(rt0.c1)))AND(''))))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t1 ON (~ (((t1.c0) IS FALSE))) WHERE ((((((vt0.c0))>((t1.c0)))) NOT BETWEEN (t1.c0 COLLATE BINARY) AND (((t1.c0)GLOB(vt0.c0))))) ORDER BY (((vt0.c0)) BETWEEN ((CASE WHEN t1.c0 THEN t1.c0 WHEN vt0.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE vt0.c0 END)) AND ((((vt0.c0)<(x'2d6b'))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))>((t1.c0)))) NOT BETWEEN (t1.c0 COLLATE BINARY) AND (((t1.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON (~ (((t1.c0) IS FALSE))) ORDER BY (((vt0.c0)) BETWEEN ((CASE WHEN t1.c0 THEN t1.c0 WHEN vt0.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE vt0.c0 END)) AND ((((vt0.c0)<(x'2d6b'))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t1 ON (~ (((t1.c0) IS FALSE))) WHERE ((((((vt0.c0))>((t1.c0)))) NOT BETWEEN (t1.c0 COLLATE BINARY) AND (((t1.c0)GLOB(vt0.c0))))) ORDER BY (((vt0.c0)) BETWEEN ((CASE WHEN t1.c0 THEN t1.c0 WHEN vt0.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE vt0.c0 END)) AND ((((vt0.c0)<(x'2d6b'))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))>((t1.c0)))) NOT BETWEEN (t1.c0 COLLATE BINARY) AND (((t1.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON (~ (((t1.c0) IS FALSE))) ORDER BY (((vt0.c0)) BETWEEN ((CASE WHEN t1.c0 THEN t1.c0 WHEN vt0.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE vt0.c0 END)) AND ((((vt0.c0)<(x'2d6b'))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t1 ON (~ (((t1.c0) IS FALSE))) WHERE ((((((vt0.c0))>((t1.c0)))) NOT BETWEEN (t1.c0 COLLATE BINARY) AND (((t1.c0)GLOB(vt0.c0))))) ORDER BY (((vt0.c0)) BETWEEN ((CASE WHEN t1.c0 THEN t1.c0 WHEN vt0.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE vt0.c0 END)) AND ((((vt0.c0)<(x'2d6b'))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (CASE WHEN CASE WHEN 0.42801116301725695 THEN NULL WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE t1.c0 END THEN t1.c0 COLLATE RTRIM END) ORDER BY CASE WHEN PRINTF(vt0.c0) THEN (~ (t1.c0)) WHEN (((vt0.c0, t1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, t1.c0, t1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0) IS TRUE) WHEN ((NULL)>=(vt0.c0)) THEN vt0.c0 ELSE (- (t1.c0)) END DESC  NULLS FIRST, json_valid(vt0.c0) COLLATE NOCASE COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN 0.42801116301725695 THEN NULL WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE t1.c0 END THEN t1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, t1 ORDER BY CASE WHEN PRINTF(vt0.c0) THEN (~ (t1.c0)) WHEN (((vt0.c0, t1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, t1.c0, t1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0) IS TRUE) WHEN ((NULL)>=(vt0.c0)) THEN vt0.c0 ELSE (- (t1.c0)) END DESC  NULLS FIRST, json_valid(vt0.c0) COLLATE NOCASE COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (CASE WHEN CASE WHEN 0.42801116301725695 THEN NULL WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE t1.c0 END THEN t1.c0 COLLATE RTRIM END) ORDER BY CASE WHEN PRINTF(vt0.c0) THEN (~ (t1.c0)) WHEN (((vt0.c0, t1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, t1.c0, t1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0) IS TRUE) WHEN ((NULL)>=(vt0.c0)) THEN vt0.c0 ELSE (- (t1.c0)) END DESC  NULLS FIRST, json_valid(vt0.c0) COLLATE NOCASE COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN 0.42801116301725695 THEN NULL WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE t1.c0 END THEN t1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, t1 ORDER BY CASE WHEN PRINTF(vt0.c0) THEN (~ (t1.c0)) WHEN (((vt0.c0, t1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, t1.c0, t1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0) IS TRUE) WHEN ((NULL)>=(vt0.c0)) THEN vt0.c0 ELSE (- (t1.c0)) END DESC  NULLS FIRST, json_valid(vt0.c0) COLLATE NOCASE COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (CASE WHEN CASE WHEN 0.42801116301725695 THEN NULL WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE t1.c0 END THEN t1.c0 COLLATE RTRIM END) ORDER BY CASE WHEN PRINTF(vt0.c0) THEN (~ (t1.c0)) WHEN (((vt0.c0, t1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, t1.c0, t1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0) IS TRUE) WHEN ((NULL)>=(vt0.c0)) THEN vt0.c0 ELSE (- (t1.c0)) END DESC  NULLS FIRST, json_valid(vt0.c0) COLLATE NOCASE COLLATE NOCASE;
SELECT COUNT(*) FROM t1, vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ()));
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(x'' AS NUMERIC)) ORDER BY (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))) NOT BETWEEN ((+ (t1.c0))) AND (t1.c0));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS NUMERIC)) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))) NOT BETWEEN ((+ (t1.c0))) AND (t1.c0)));
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(x'' AS NUMERIC)) ORDER BY (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))) NOT BETWEEN ((+ (t1.c0))) AND (t1.c0));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS NUMERIC)) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))) NOT BETWEEN ((+ (t1.c0))) AND (t1.c0)));
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(x'' AS NUMERIC)) ORDER BY (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))) NOT BETWEEN ((+ (t1.c0))) AND (t1.c0));
SELECT * FROM t0, t1, vt0 WHERE (((t0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ((((t0.c0) ISNULL)) IS TRUE)  as count FROM t0, t1, vt0);
SELECT * FROM t0, t1, vt0 WHERE (((t0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ((((t0.c0) ISNULL)) IS TRUE)  as count FROM t0, t1, vt0);
SELECT * FROM t0, t1, vt0 WHERE (((t0.c0) ISNULL));
SELECT ALL * FROM rt0, t0 WHERE ((('558798347')|(rt0.c3))) ORDER BY (NOT ((rt0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('558798347')|(rt0.c3))) IS TRUE)  as count FROM rt0, t0 ORDER BY (NOT ((rt0.c0 IN ()))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE ((('558798347')|(rt0.c3))) ORDER BY (NOT ((rt0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('558798347')|(rt0.c3))) IS TRUE)  as count FROM rt0, t0 ORDER BY (NOT ((rt0.c0 IN ()))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE ((('558798347')|(rt0.c3))) ORDER BY (NOT ((rt0.c0 IN ()))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t1, rt0 WHERE (((~ (t1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((~ (t1.c0)) IN ())) IS TRUE)  as count FROM t1, rt0);
SELECT COUNT(*) FROM t1, rt0 WHERE (((~ (t1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((~ (t1.c0)) IN ())) IS TRUE)  as count FROM t1, rt0);
SELECT COUNT(*) FROM t1, rt0 WHERE (((~ (t1.c0)) IN ()));
SELECT * FROM t1 RIGHT OUTER JOIN rt0 ON LOWER(((((rt0.c2)AND(rt0.c2)))OR(rt0.c0))) WHERE (((CAST(rt0.c0 AS NUMERIC))LIKE(t1.c0 COLLATE BINARY))) ORDER BY ((rt0.c1 COLLATE BINARY)AND(t1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS NUMERIC))LIKE(t1.c0 COLLATE BINARY))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON LOWER(((((rt0.c2)AND(rt0.c2)))OR(rt0.c0))) ORDER BY ((rt0.c1 COLLATE BINARY)AND(t1.c0)) ASC);
SELECT * FROM t1 RIGHT OUTER JOIN rt0 ON LOWER(((((rt0.c2)AND(rt0.c2)))OR(rt0.c0))) WHERE (((CAST(rt0.c0 AS NUMERIC))LIKE(t1.c0 COLLATE BINARY))) ORDER BY ((rt0.c1 COLLATE BINARY)AND(t1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS NUMERIC))LIKE(t1.c0 COLLATE BINARY))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON LOWER(((((rt0.c2)AND(rt0.c2)))OR(rt0.c0))) ORDER BY ((rt0.c1 COLLATE BINARY)AND(t1.c0)) ASC);
SELECT * FROM t1 RIGHT OUTER JOIN rt0 ON LOWER(((((rt0.c2)AND(rt0.c2)))OR(rt0.c0))) WHERE (((CAST(rt0.c0 AS NUMERIC))LIKE(t1.c0 COLLATE BINARY))) ORDER BY ((rt0.c1 COLLATE BINARY)AND(t1.c0)) ASC;
SELECT * FROM rt0 WHERE ((~ (NULL)));
SELECT SUM(count) FROM (SELECT (((~ (NULL))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((~ (NULL)));
SELECT SUM(count) FROM (SELECT (((~ (NULL))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((~ (NULL)));
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (rt0.c1) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, t1 ORDER BY rt0.c2 ASC);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (rt0.c1) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, t1 ORDER BY rt0.c2 ASC);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (rt0.c1) ORDER BY rt0.c2 ASC;
SELECT ALL COUNT(*) FROM t1, t0 WHERE (((((t0.c0 COLLATE NOCASE)AND(((t1.c0) IS FALSE))))OR(((((t0.c0)AND(0.6764978914432532)))AND(t0.c0))))) ORDER BY ((((t1.c0)IS NOT(-1764374478))) NOT BETWEEN (MAX(t0.c0, t0.c0)) AND (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))  NULLS LAST, ((((CAST(t1.c0 AS BLOB))OR(((((((((t0.c0)AND(t1.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))))AND(((t0.c0) NOT BETWEEN ('-1197417912') AND (t0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0 COLLATE NOCASE)AND(((t1.c0) IS FALSE))))OR(((((t0.c0)AND(0.6764978914432532)))AND(t0.c0))))) IS TRUE)  as count FROM t1, t0 ORDER BY ((((t1.c0)IS NOT(-1764374478))) NOT BETWEEN (MAX(t0.c0, t0.c0)) AND (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))  NULLS LAST, ((((CAST(t1.c0 AS BLOB))OR(((((((((t0.c0)AND(t1.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))))AND(((t0.c0) NOT BETWEEN ('-1197417912') AND (t0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, t0 WHERE (((((t0.c0 COLLATE NOCASE)AND(((t1.c0) IS FALSE))))OR(((((t0.c0)AND(0.6764978914432532)))AND(t0.c0))))) ORDER BY ((((t1.c0)IS NOT(-1764374478))) NOT BETWEEN (MAX(t0.c0, t0.c0)) AND (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))  NULLS LAST, ((((CAST(t1.c0 AS BLOB))OR(((((((((t0.c0)AND(t1.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))))AND(((t0.c0) NOT BETWEEN ('-1197417912') AND (t0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0 COLLATE NOCASE)AND(((t1.c0) IS FALSE))))OR(((((t0.c0)AND(0.6764978914432532)))AND(t0.c0))))) IS TRUE)  as count FROM t1, t0 ORDER BY ((((t1.c0)IS NOT(-1764374478))) NOT BETWEEN (MAX(t0.c0, t0.c0)) AND (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))  NULLS LAST, ((((CAST(t1.c0 AS BLOB))OR(((((((((t0.c0)AND(t1.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))))AND(((t0.c0) NOT BETWEEN ('-1197417912') AND (t0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, t0 WHERE (((((t0.c0 COLLATE NOCASE)AND(((t1.c0) IS FALSE))))OR(((((t0.c0)AND(0.6764978914432532)))AND(t0.c0))))) ORDER BY ((((t1.c0)IS NOT(-1764374478))) NOT BETWEEN (MAX(t0.c0, t0.c0)) AND (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))  NULLS LAST, ((((CAST(t1.c0 AS BLOB))OR(((((((((t0.c0)AND(t1.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))))AND(((t0.c0) NOT BETWEEN ('-1197417912') AND (t0.c0)))) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (LIKELY(DISTINCT CASE rt0.c0  WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN 0X759725ee WHEN rt0.c0 THEN -1969385591 END)) ORDER BY CAST(((rt0.c0)&(rt0.c0)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT CASE rt0.c0  WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN 0x759725ee WHEN rt0.c0 THEN -1969385591 END)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0)&(rt0.c0)) AS REAL) ASC);
SELECT * FROM rt0 WHERE (LIKELY(DISTINCT CASE rt0.c0  WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN 0X759725ee WHEN rt0.c0 THEN -1969385591 END)) ORDER BY CAST(((rt0.c0)&(rt0.c0)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT CASE rt0.c0  WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN 0x759725ee WHEN rt0.c0 THEN -1969385591 END)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0)&(rt0.c0)) AS REAL) ASC);
SELECT * FROM rt0 WHERE (LIKELY(DISTINCT CASE rt0.c0  WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN 0X759725ee WHEN rt0.c0 THEN -1969385591 END)) ORDER BY CAST(((rt0.c0)&(rt0.c0)) AS REAL) ASC;
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE (CASE WHEN (((t1.c0)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0))) THEN rt0.c0 ELSE (- (rt0.c2)) END) ORDER BY (('D1bc+') ISNULL), DATE((rt0.c2 IN ()), (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))), (rt0.c0 IN ()))  NULLS FIRST, vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((t1.c0)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0))) THEN rt0.c0 ELSE (- (rt0.c2)) END) IS TRUE)  as count FROM vt0, t1, rt0 ORDER BY (('D1bc+') ISNULL), DATE((rt0.c2 IN ()), (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))), (rt0.c0 IN ()))  NULLS FIRST, vt0.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE (CASE WHEN (((t1.c0)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0))) THEN rt0.c0 ELSE (- (rt0.c2)) END) ORDER BY (('D1bc+') ISNULL), DATE((rt0.c2 IN ()), (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))), (rt0.c0 IN ()))  NULLS FIRST, vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((t1.c0)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0))) THEN rt0.c0 ELSE (- (rt0.c2)) END) IS TRUE)  as count FROM vt0, t1, rt0 ORDER BY (('D1bc+') ISNULL), DATE((rt0.c2 IN ()), (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))), (rt0.c0 IN ()))  NULLS FIRST, vt0.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE (CASE WHEN (((t1.c0)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0))) THEN rt0.c0 ELSE (- (rt0.c2)) END) ORDER BY (('D1bc+') ISNULL), DATE((rt0.c2 IN ()), (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))), (rt0.c0 IN ()))  NULLS FIRST, vt0.c0 ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0, t1, t0 WHERE (((x'')&((((rt0.c0))<>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((x'')&((((rt0.c0))<>((vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0, t1, t0);
SELECT COUNT(*) FROM rt0, vt0, t1, t0 WHERE (((x'')&((((rt0.c0))<>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((x'')&((((rt0.c0))<>((vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0, t1, t0);
SELECT COUNT(*) FROM rt0, vt0, t1, t0 WHERE (((x'')&((((rt0.c0))<>((vt0.c0))))));
SELECT ALL * FROM rt0 CROSS JOIN t0 ON 0.6782071267160501 CROSS JOIN t1 ON '0.5514399501148752' WHERE ((~ ((t0.c0 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ ((t0.c0 IN (rt0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON 0.6782071267160501 CROSS JOIN t1 ON '0.5514399501148752');
SELECT ALL * FROM rt0 CROSS JOIN t0 ON 0.6782071267160501 CROSS JOIN t1 ON '0.5514399501148752' WHERE ((~ ((t0.c0 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ ((t0.c0 IN (rt0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON 0.6782071267160501 CROSS JOIN t1 ON '0.5514399501148752');
SELECT ALL * FROM rt0 CROSS JOIN t0 ON 0.6782071267160501 CROSS JOIN t1 ON '0.5514399501148752' WHERE ((~ ((t0.c0 IN (rt0.c0)))));
SELECT COUNT(*) FROM vt0, t0, t1, rt0 WHERE ((((((((((((vt0.c0)OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c3))))>((0.6107539211629069))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0)OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c3))))>((0.6107539211629069)))) IS TRUE)  as count FROM vt0, t0, t1, rt0);
SELECT COUNT(*) FROM vt0, t0, t1, rt0 WHERE ((((((((((((vt0.c0)OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c3))))>((0.6107539211629069))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0)OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c3))))>((0.6107539211629069)))) IS TRUE)  as count FROM vt0, t0, t1, rt0);
SELECT COUNT(*) FROM vt0, t0, t1, rt0 WHERE ((((((((((((vt0.c0)OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c3))))>((0.6107539211629069))));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (GLOB(t0.c0, '') COLLATE BINARY) ORDER BY CASE (NOT (t0.c0))  WHEN 0.4070291144161944 THEN ((vt0.c0) BETWEEN (rt0.c3) AND (',3/,IKd')) WHEN (~ (t0.c0)) THEN rt0.c0 COLLATE RTRIM WHEN ((rt0.c0) BETWEEN (rt0.c3) AND (0.43585007515631025)) THEN (~ (vt0.c0)) WHEN ((0.6521646101063918)=(t0.c0)) THEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (-1564265609)) WHEN x'f667' THEN ((((vt0.c0)AND(0.30699375339591195)))AND(rt0.c1)) ELSE rt0.c1 COLLATE NOCASE END;
SELECT SUM(count) FROM (SELECT ALL ((GLOB(t0.c0, '') COLLATE BINARY) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CASE (NOT (t0.c0))  WHEN 0.4070291144161944 THEN ((vt0.c0) BETWEEN (rt0.c3) AND (',3/,IKd')) WHEN (~ (t0.c0)) THEN rt0.c0 COLLATE RTRIM WHEN ((rt0.c0) BETWEEN (rt0.c3) AND (0.43585007515631025)) THEN (~ (vt0.c0)) WHEN ((0.6521646101063918)==(t0.c0)) THEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (-1564265609)) WHEN x'f667' THEN ((((vt0.c0)AND(0.30699375339591195)))AND(rt0.c1)) ELSE rt0.c1 COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (GLOB(t0.c0, '') COLLATE BINARY) ORDER BY CASE (NOT (t0.c0))  WHEN 0.4070291144161944 THEN ((vt0.c0) BETWEEN (rt0.c3) AND (',3/,IKd')) WHEN (~ (t0.c0)) THEN rt0.c0 COLLATE RTRIM WHEN ((rt0.c0) BETWEEN (rt0.c3) AND (0.43585007515631025)) THEN (~ (vt0.c0)) WHEN ((0.6521646101063918)=(t0.c0)) THEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (-1564265609)) WHEN x'f667' THEN ((((vt0.c0)AND(0.30699375339591195)))AND(rt0.c1)) ELSE rt0.c1 COLLATE NOCASE END;
SELECT SUM(count) FROM (SELECT ALL ((GLOB(t0.c0, '') COLLATE BINARY) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CASE (NOT (t0.c0))  WHEN 0.4070291144161944 THEN ((vt0.c0) BETWEEN (rt0.c3) AND (',3/,IKd')) WHEN (~ (t0.c0)) THEN rt0.c0 COLLATE RTRIM WHEN ((rt0.c0) BETWEEN (rt0.c3) AND (0.43585007515631025)) THEN (~ (vt0.c0)) WHEN ((0.6521646101063918)==(t0.c0)) THEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (-1564265609)) WHEN x'f667' THEN ((((vt0.c0)AND(0.30699375339591195)))AND(rt0.c1)) ELSE rt0.c1 COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (GLOB(t0.c0, '') COLLATE BINARY) ORDER BY CASE (NOT (t0.c0))  WHEN 0.4070291144161944 THEN ((vt0.c0) BETWEEN (rt0.c3) AND (',3/,IKd')) WHEN (~ (t0.c0)) THEN rt0.c0 COLLATE RTRIM WHEN ((rt0.c0) BETWEEN (rt0.c3) AND (0.43585007515631025)) THEN (~ (vt0.c0)) WHEN ((0.6521646101063918)=(t0.c0)) THEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (-1564265609)) WHEN x'f667' THEN ((((vt0.c0)AND(0.30699375339591195)))AND(rt0.c1)) ELSE rt0.c1 COLLATE NOCASE END;
SELECT ALL * FROM t1, t0 NOT INDEXED FULL OUTER JOIN vt0 ON CASE WHEN t0.c0 THEN NULL ELSE vt0.c0 END COLLATE RTRIM RIGHT OUTER JOIN rt0 ON ABS(-434469234) WHERE (ABS(CASE 0.7247322763260525  WHEN rt0.c1 THEN vt0.c0 END)) ORDER BY ((((rt0.c3) NOTNULL)) NOT BETWEEN (((rt0.c1)<<(rt0.c2))) AND (0.914356417415198));
SELECT SUM(count) FROM (SELECT ALL ((ABS(CASE 0.7247322763260525  WHEN rt0.c1 THEN vt0.c0 END)) IS TRUE)  as count FROM t1, t0 FULL OUTER JOIN vt0 ON CASE WHEN t0.c0 THEN NULL ELSE vt0.c0 END COLLATE RTRIM RIGHT OUTER JOIN rt0 ON ABS(-434469234) ORDER BY ((((rt0.c3) NOTNULL)) NOT BETWEEN (((rt0.c1)<<(rt0.c2))) AND (0.914356417415198)));
SELECT ALL * FROM t1, t0 NOT INDEXED FULL OUTER JOIN vt0 ON CASE WHEN t0.c0 THEN NULL ELSE vt0.c0 END COLLATE RTRIM RIGHT OUTER JOIN rt0 ON ABS(-434469234) WHERE (ABS(CASE 0.7247322763260525  WHEN rt0.c1 THEN vt0.c0 END)) ORDER BY ((((rt0.c3) NOTNULL)) NOT BETWEEN (((rt0.c1)<<(rt0.c2))) AND (0.914356417415198));
SELECT SUM(count) FROM (SELECT ALL ((ABS(CASE 0.7247322763260525  WHEN rt0.c1 THEN vt0.c0 END)) IS TRUE)  as count FROM t1, t0 FULL OUTER JOIN vt0 ON CASE WHEN t0.c0 THEN NULL ELSE vt0.c0 END COLLATE RTRIM RIGHT OUTER JOIN rt0 ON ABS(-434469234) ORDER BY ((((rt0.c3) NOTNULL)) NOT BETWEEN (((rt0.c1)<<(rt0.c2))) AND (0.914356417415198)));
SELECT ALL * FROM t1, t0 NOT INDEXED FULL OUTER JOIN vt0 ON CASE WHEN t0.c0 THEN NULL ELSE vt0.c0 END COLLATE RTRIM RIGHT OUTER JOIN rt0 ON ABS(-434469234) WHERE (ABS(CASE 0.7247322763260525  WHEN rt0.c1 THEN vt0.c0 END)) ORDER BY ((((rt0.c3) NOTNULL)) NOT BETWEEN (((rt0.c1)<<(rt0.c2))) AND (0.914356417415198));
SELECT ALL * FROM t0 WHERE ((((t0.c0))<(((t0.c0 IN (t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0))<(((t0.c0 IN (t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c0))<(((t0.c0 IN (t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0))<(((t0.c0 IN (t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c0))<(((t0.c0 IN (t0.c0))))));
SELECT ALL * FROM rt0 WHERE ((((- (rt0.c0)))LIKE((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c0)))LIKE((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((- (rt0.c0)))LIKE((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c0)))LIKE((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((- (rt0.c0)))LIKE((NOT (rt0.c2)))));
SELECT * FROM vt0, t0, t1, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0, t1, rt0);
SELECT * FROM vt0, t0, t1, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0, t1, rt0);
SELECT * FROM vt0, t0, t1, rt0 WHERE (NULL);
SELECT * FROM rt0 WHERE ((((rt0.c3 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN ())) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c3 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN ())) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c3 IN ())) IS TRUE));
SELECT ALL * FROM t0, vt0, t1 NATURAL JOIN rt0 WHERE (CASE WHEN HEX(DISTINCT vt0.c0) THEN rt0.c3 COLLATE NOCASE ELSE ((rt0.c3) ISNULL) END) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN HEX(DISTINCT vt0.c0) THEN rt0.c3 COLLATE NOCASE ELSE ((rt0.c3) ISNULL) END) IS TRUE)  as count FROM t0, vt0, t1 NATURAL JOIN rt0 ORDER BY rt0.c1  NULLS LAST);
SELECT ALL * FROM t0, vt0, t1 NATURAL JOIN rt0 WHERE (CASE WHEN HEX(DISTINCT vt0.c0) THEN rt0.c3 COLLATE NOCASE ELSE ((rt0.c3) ISNULL) END) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN HEX(DISTINCT vt0.c0) THEN rt0.c3 COLLATE NOCASE ELSE ((rt0.c3) ISNULL) END) IS TRUE)  as count FROM t0, vt0, t1 NATURAL JOIN rt0 ORDER BY rt0.c1  NULLS LAST);
SELECT ALL * FROM t0, vt0, t1 NATURAL JOIN rt0 WHERE (CASE WHEN HEX(DISTINCT vt0.c0) THEN rt0.c3 COLLATE NOCASE ELSE ((rt0.c3) ISNULL) END) ORDER BY rt0.c1  NULLS LAST;
SELECT ALL * FROM t1 INNER JOIN vt0 ON (('0.08008438067454227') BETWEEN (TRIM(DISTINCT t0.c0)) AND (t1.c0)) FULL OUTER JOIN t0 ON CASE WHEN CASE t1.c0  WHEN '}' THEN t0.c0 ELSE t0.c0 END THEN ((((t0.c0)AND(t1.c0)))AND(t0.c0)) WHEN ((t1.c0) BETWEEN (vt0.c0) AND (t0.c0)) THEN ((vt0.c0)-(t1.c0)) WHEN (NOT (vt0.c0)) THEN CAST(vt0.c0 AS INTEGER) END WHERE (CAST((((vt0.c0))<=((vt0.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0))<=((vt0.c0))) AS BLOB)) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON (('0.08008438067454227') BETWEEN (TRIM(DISTINCT t0.c0)) AND (t1.c0)) FULL OUTER JOIN t0 ON CASE WHEN CASE t1.c0  WHEN '}' THEN t0.c0 ELSE t0.c0 END THEN ((((t0.c0)AND(t1.c0)))AND(t0.c0)) WHEN ((t1.c0) BETWEEN (vt0.c0) AND (t0.c0)) THEN ((vt0.c0)-(t1.c0)) WHEN (NOT (vt0.c0)) THEN CAST(vt0.c0 AS INTEGER) END);
SELECT ALL * FROM t1 INNER JOIN vt0 ON (('0.08008438067454227') BETWEEN (TRIM(DISTINCT t0.c0)) AND (t1.c0)) FULL OUTER JOIN t0 ON CASE WHEN CASE t1.c0  WHEN '}' THEN t0.c0 ELSE t0.c0 END THEN ((((t0.c0)AND(t1.c0)))AND(t0.c0)) WHEN ((t1.c0) BETWEEN (vt0.c0) AND (t0.c0)) THEN ((vt0.c0)-(t1.c0)) WHEN (NOT (vt0.c0)) THEN CAST(vt0.c0 AS INTEGER) END WHERE (CAST((((vt0.c0))<=((vt0.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0))<=((vt0.c0))) AS BLOB)) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON (('0.08008438067454227') BETWEEN (TRIM(DISTINCT t0.c0)) AND (t1.c0)) FULL OUTER JOIN t0 ON CASE WHEN CASE t1.c0  WHEN '}' THEN t0.c0 ELSE t0.c0 END THEN ((((t0.c0)AND(t1.c0)))AND(t0.c0)) WHEN ((t1.c0) BETWEEN (vt0.c0) AND (t0.c0)) THEN ((vt0.c0)-(t1.c0)) WHEN (NOT (vt0.c0)) THEN CAST(vt0.c0 AS INTEGER) END);
SELECT COUNT(*) FROM rt0, t0, vt0 NATURAL JOIN t1 WHERE (((CAST(x'' AS INTEGER)) NOT BETWEEN (CASE WHEN x'' THEN rt0.c2 WHEN t1.c0 THEN vt0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN t1.c0 THEN t1.c0 ELSE '-2126763155' END) AND (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN t0.c0 WHEN t0.c0 THEN t1.c0 WHEN t1.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END))) ORDER BY x'd86a'  NULLS FIRST, (- (((rt0.c1)+('d~\ஶs!j')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'' AS INTEGER)) NOT BETWEEN (CASE WHEN x'' THEN rt0.c2 WHEN t1.c0 THEN vt0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN t1.c0 THEN t1.c0 ELSE '-2126763155' END) AND (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN t0.c0 WHEN t0.c0 THEN t1.c0 WHEN t1.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0, t0, vt0 NATURAL JOIN t1 ORDER BY x'd86a'  NULLS FIRST, (- (((rt0.c1)+('d~\ஶs!j')))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, vt0 NATURAL JOIN t1 WHERE (((CAST(x'' AS INTEGER)) NOT BETWEEN (CASE WHEN x'' THEN rt0.c2 WHEN t1.c0 THEN vt0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN t1.c0 THEN t1.c0 ELSE '-2126763155' END) AND (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN t0.c0 WHEN t0.c0 THEN t1.c0 WHEN t1.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END))) ORDER BY x'd86a'  NULLS FIRST, (- (((rt0.c1)+('d~\ஶs!j')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'' AS INTEGER)) NOT BETWEEN (CASE WHEN x'' THEN rt0.c2 WHEN t1.c0 THEN vt0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN t1.c0 THEN t1.c0 ELSE '-2126763155' END) AND (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN t0.c0 WHEN t0.c0 THEN t1.c0 WHEN t1.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0, t0, vt0 NATURAL JOIN t1 ORDER BY x'd86a'  NULLS FIRST, (- (((rt0.c1)+('d~\ஶs!j')))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, vt0 NATURAL JOIN t1 WHERE (((CAST(x'' AS INTEGER)) NOT BETWEEN (CASE WHEN x'' THEN rt0.c2 WHEN t1.c0 THEN vt0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN t1.c0 THEN t1.c0 ELSE '-2126763155' END) AND (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN t0.c0 WHEN t0.c0 THEN t1.c0 WHEN t1.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END))) ORDER BY x'd86a'  NULLS FIRST, (- (((rt0.c1)+('d~\ஶs!j')))) ASC  NULLS LAST;
SELECT * FROM t0, t1 INNER JOIN rt0 ON rt0.c3 WHERE (((((((t0.c0)AND(rt0.c2)))AND(t0.c0)))==(((rt0.c0)IS(rt0.c0))))) ORDER BY LTRIM((t0.c0 IN (rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND(rt0.c2)))AND(t0.c0)))==(((rt0.c0)IS(rt0.c0))))) IS TRUE)  as count FROM t0, t1 INNER JOIN rt0 ON rt0.c3 ORDER BY LTRIM((t0.c0 IN (rt0.c2))) ASC);
SELECT * FROM t0, t1 INNER JOIN rt0 ON rt0.c3 WHERE (((((((t0.c0)AND(rt0.c2)))AND(t0.c0)))==(((rt0.c0)IS(rt0.c0))))) ORDER BY LTRIM((t0.c0 IN (rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND(rt0.c2)))AND(t0.c0)))==(((rt0.c0)IS(rt0.c0))))) IS TRUE)  as count FROM t0, t1 INNER JOIN rt0 ON rt0.c3 ORDER BY LTRIM((t0.c0 IN (rt0.c2))) ASC);
SELECT * FROM t0, t1 INNER JOIN rt0 ON rt0.c3 WHERE (((((((t0.c0)AND(rt0.c2)))AND(t0.c0)))==(((rt0.c0)IS(rt0.c0))))) ORDER BY LTRIM((t0.c0 IN (rt0.c2))) ASC;
SELECT ALL * FROM vt0, t1, t0 WHERE (DATETIME((+ (t1.c0)), COALESCE(t0.c0, t1.c0, t0.c0, t0.c0), 'b1')) ORDER BY UPPER(0.30261431915589776) ASC, ((((((t1.c0)AND(t0.c0)))OR(t1.c0))) ISNULL) ASC, ((t0.c0) NOT NULL) COLLATE RTRIM DESC, (((t1.c0, t1.c0, t1.c0)) NOT BETWEEN (('', t0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 'FALSE'))) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((DATETIME((+ (t1.c0)), COALESCE(t0.c0, t1.c0, t0.c0, t0.c0), 'b1')) IS TRUE)  as count FROM vt0, t1, t0 ORDER BY UPPER(0.30261431915589776) ASC, ((((((t1.c0)AND(t0.c0)))OR(t1.c0))) ISNULL) ASC, ((t0.c0) NOT NULL) COLLATE RTRIM DESC, (((t1.c0, t1.c0, t1.c0)) NOT BETWEEN (('', t0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 'FALSE'))) COLLATE RTRIM DESC);
SELECT ALL * FROM vt0, t1, t0 WHERE (DATETIME((+ (t1.c0)), COALESCE(t0.c0, t1.c0, t0.c0, t0.c0), 'b1')) ORDER BY UPPER(0.30261431915589776) ASC, ((((((t1.c0)AND(t0.c0)))OR(t1.c0))) ISNULL) ASC, ((t0.c0) NOT NULL) COLLATE RTRIM DESC, (((t1.c0, t1.c0, t1.c0)) NOT BETWEEN (('', t0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 'FALSE'))) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((DATETIME((+ (t1.c0)), COALESCE(t0.c0, t1.c0, t0.c0, t0.c0), 'b1')) IS TRUE)  as count FROM vt0, t1, t0 ORDER BY UPPER(0.30261431915589776) ASC, ((((((t1.c0)AND(t0.c0)))OR(t1.c0))) ISNULL) ASC, ((t0.c0) NOT NULL) COLLATE RTRIM DESC, (((t1.c0, t1.c0, t1.c0)) NOT BETWEEN (('', t0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 'FALSE'))) COLLATE RTRIM DESC);
SELECT ALL * FROM vt0, t1, t0 WHERE (DATETIME((+ (t1.c0)), COALESCE(t0.c0, t1.c0, t0.c0, t0.c0), 'b1')) ORDER BY UPPER(0.30261431915589776) ASC, ((((((t1.c0)AND(t0.c0)))OR(t1.c0))) ISNULL) ASC, ((t0.c0) NOT NULL) COLLATE RTRIM DESC, (((t1.c0, t1.c0, t1.c0)) NOT BETWEEN (('', t0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 'FALSE'))) COLLATE RTRIM DESC;
SELECT ALL COUNT(*) FROM t1, t0 WHERE ((((((t0.c0)AND(t0.c0)), CASE WHEN t1.c0 THEN t0.c0 ELSE t1.c0 END, CAST(t0.c0 AS NUMERIC)))>((((((x'')OR(t0.c0)))AND(t1.c0)), ((t0.c0)AND(NULL)), CAST(t1.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)AND(t0.c0)), CASE WHEN t1.c0 THEN t0.c0 ELSE t1.c0 END, CAST(t0.c0 AS NUMERIC)))>((((((x'')OR(t0.c0)))AND(t1.c0)), ((t0.c0)AND(NULL)), CAST(t1.c0 AS REAL))))) IS TRUE)  as count FROM t1, t0);
SELECT ALL COUNT(*) FROM t1, t0 WHERE ((((((t0.c0)AND(t0.c0)), CASE WHEN t1.c0 THEN t0.c0 ELSE t1.c0 END, CAST(t0.c0 AS NUMERIC)))>((((((x'')OR(t0.c0)))AND(t1.c0)), ((t0.c0)AND(NULL)), CAST(t1.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)AND(t0.c0)), CASE WHEN t1.c0 THEN t0.c0 ELSE t1.c0 END, CAST(t0.c0 AS NUMERIC)))>((((((x'')OR(t0.c0)))AND(t1.c0)), ((t0.c0)AND(NULL)), CAST(t1.c0 AS REAL))))) IS TRUE)  as count FROM t1, t0);
SELECT ALL COUNT(*) FROM t1, t0 WHERE ((((((t0.c0)AND(t0.c0)), CASE WHEN t1.c0 THEN t0.c0 ELSE t1.c0 END, CAST(t0.c0 AS NUMERIC)))>((((((x'')OR(t0.c0)))AND(t1.c0)), ((t0.c0)AND(NULL)), CAST(t1.c0 AS REAL)))));
SELECT ALL * FROM t1, rt0, vt0, t0 WHERE (((((((((((t0.c0)OR(t0.c0)))AND(rt0.c0)))AND(rt0.c2)))AND(vt0.c0))) ISNULL)) ORDER BY IFNULL(DISTINCT rt0.c1, t0.c0) COLLATE RTRIM COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)OR(t0.c0)))AND(rt0.c0)))AND(rt0.c2)))AND(vt0.c0))) ISNULL)) IS TRUE)  as count FROM t1, rt0, vt0, t0 ORDER BY IFNULL(DISTINCT rt0.c1, t0.c0) COLLATE RTRIM COLLATE NOCASE ASC);
SELECT ALL * FROM t1, rt0, vt0, t0 WHERE (((((((((((t0.c0)OR(t0.c0)))AND(rt0.c0)))AND(rt0.c2)))AND(vt0.c0))) ISNULL)) ORDER BY IFNULL(DISTINCT rt0.c1, t0.c0) COLLATE RTRIM COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)OR(t0.c0)))AND(rt0.c0)))AND(rt0.c2)))AND(vt0.c0))) ISNULL)) IS TRUE)  as count FROM t1, rt0, vt0, t0 ORDER BY IFNULL(DISTINCT rt0.c1, t0.c0) COLLATE RTRIM COLLATE NOCASE ASC);
SELECT ALL * FROM t1, rt0, vt0, t0 WHERE (((((((((((t0.c0)OR(t0.c0)))AND(rt0.c0)))AND(rt0.c2)))AND(vt0.c0))) ISNULL)) ORDER BY IFNULL(DISTINCT rt0.c1, t0.c0) COLLATE RTRIM COLLATE NOCASE ASC;
SELECT ALL COUNT(*) FROM t1, t0, rt0, vt0 WHERE (((CAST(0.6156770021996208 AS NUMERIC))%(((rt0.c2)>(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.6156770021996208 AS NUMERIC))%(((rt0.c2)>(t0.c0))))) IS TRUE)  as count FROM t1, t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t1, t0, rt0, vt0 WHERE (((CAST(0.6156770021996208 AS NUMERIC))%(((rt0.c2)>(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.6156770021996208 AS NUMERIC))%(((rt0.c2)>(t0.c0))))) IS TRUE)  as count FROM t1, t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t1, t0, rt0, vt0 WHERE (((CAST(0.6156770021996208 AS NUMERIC))%(((rt0.c2)>(t0.c0)))));
SELECT ALL * FROM vt0, t1, t0, rt0 WHERE (t0.c0) ORDER BY '^a' ASC, (('o') NOT BETWEEN (NULL) AND (t0.c0)) COLLATE RTRIM  NULLS FIRST, CAST(((((vt0.c0)AND(t0.c0)))OR(vt0.c0)) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt0, t1, t0, rt0 ORDER BY '^a' ASC, (('o') NOT BETWEEN (NULL) AND (t0.c0)) COLLATE RTRIM  NULLS FIRST, CAST(((((vt0.c0)AND(t0.c0)))OR(vt0.c0)) AS INTEGER) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t1, t0, rt0 WHERE (t0.c0) ORDER BY '^a' ASC, (('o') NOT BETWEEN (NULL) AND (t0.c0)) COLLATE RTRIM  NULLS FIRST, CAST(((((vt0.c0)AND(t0.c0)))OR(vt0.c0)) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt0, t1, t0, rt0 ORDER BY '^a' ASC, (('o') NOT BETWEEN (NULL) AND (t0.c0)) COLLATE RTRIM  NULLS FIRST, CAST(((((vt0.c0)AND(t0.c0)))OR(vt0.c0)) AS INTEGER) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t1, t0, rt0 WHERE (t0.c0) ORDER BY '^a' ASC, (('o') NOT BETWEEN (NULL) AND (t0.c0)) COLLATE RTRIM  NULLS FIRST, CAST(((((vt0.c0)AND(t0.c0)))OR(vt0.c0)) AS INTEGER) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON ((((rt0.c0)>=(t0.c0))) IS FALSE) RIGHT OUTER JOIN vt0 ON CAST(CAST('sR}[e \/' AS BLOB) AS REAL) WHERE (HEX(CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN t0.c0 WHEN rt0.c2 THEN t0.c0 WHEN vt0.c0 THEN NULL END)) ORDER BY (- ((((t0.c0))==((rt0.c0))))), ((json_insert(vt0.c0, vt0.c0, t0.c0)) NOT BETWEEN (rt0.c3 COLLATE RTRIM) AND (SUBSTR(rt0.c3, '1486364336'))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((HEX(CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN t0.c0 WHEN rt0.c2 THEN t0.c0 WHEN vt0.c0 THEN NULL END)) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((((rt0.c0)>=(t0.c0))) IS FALSE) RIGHT OUTER JOIN vt0 ON CAST(CAST('sR}[e \/' AS BLOB) AS REAL) ORDER BY (- ((((t0.c0))=((rt0.c0))))), ((json_insert(vt0.c0, vt0.c0, t0.c0)) NOT BETWEEN (rt0.c3 COLLATE RTRIM) AND (SUBSTR(rt0.c3, '1486364336'))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON ((((rt0.c0)>=(t0.c0))) IS FALSE) RIGHT OUTER JOIN vt0 ON CAST(CAST('sR}[e \/' AS BLOB) AS REAL) WHERE (HEX(CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN t0.c0 WHEN rt0.c2 THEN t0.c0 WHEN vt0.c0 THEN NULL END)) ORDER BY (- ((((t0.c0))==((rt0.c0))))), ((json_insert(vt0.c0, vt0.c0, t0.c0)) NOT BETWEEN (rt0.c3 COLLATE RTRIM) AND (SUBSTR(rt0.c3, '1486364336'))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((HEX(CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN t0.c0 WHEN rt0.c2 THEN t0.c0 WHEN vt0.c0 THEN NULL END)) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((((rt0.c0)>=(t0.c0))) IS FALSE) RIGHT OUTER JOIN vt0 ON CAST(CAST('sR}[e \/' AS BLOB) AS REAL) ORDER BY (- ((((t0.c0))=((rt0.c0))))), ((json_insert(vt0.c0, vt0.c0, t0.c0)) NOT BETWEEN (rt0.c3 COLLATE RTRIM) AND (SUBSTR(rt0.c3, '1486364336'))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON ((((rt0.c0)>=(t0.c0))) IS FALSE) RIGHT OUTER JOIN vt0 ON CAST(CAST('sR}[e \/' AS BLOB) AS REAL) WHERE (HEX(CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN t0.c0 WHEN rt0.c2 THEN t0.c0 WHEN vt0.c0 THEN NULL END)) ORDER BY (- ((((t0.c0))==((rt0.c0))))), ((json_insert(vt0.c0, vt0.c0, t0.c0)) NOT BETWEEN (rt0.c3 COLLATE RTRIM) AND (SUBSTR(rt0.c3, '1486364336'))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0, t0 WHERE ((((+ (t0.c0)))AND(CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN NULL THEN vt0.c0 END))) ORDER BY json_array((NULL IN ()), ((rt0.c2)IS NOT(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((+ (t0.c0)))AND(CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN NULL THEN vt0.c0 END))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY json_array((NULL IN ()), ((rt0.c2)IS NOT(vt0.c0))));
SELECT ALL * FROM rt0, vt0, t0 WHERE ((((+ (t0.c0)))AND(CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN NULL THEN vt0.c0 END))) ORDER BY json_array((NULL IN ()), ((rt0.c2)IS NOT(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((+ (t0.c0)))AND(CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN NULL THEN vt0.c0 END))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY json_array((NULL IN ()), ((rt0.c2)IS NOT(vt0.c0))));
SELECT ALL * FROM rt0, vt0, t0 WHERE ((((+ (t0.c0)))AND(CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN NULL THEN vt0.c0 END))) ORDER BY json_array((NULL IN ()), ((rt0.c2)IS NOT(vt0.c0)));
SELECT COUNT(*) FROM t0, t1, vt0, rt0 WHERE (((((((((ABS(rt0.c0))OR((((rt0.c2))>(('-212033195'))))))AND(x'f1a3')))AND(0xffffffffa57cda2d)))AND(ROUND(t0.c0, rt0.c3)))) ORDER BY ((CASE ''  WHEN NULL THEN vt0.c0 ELSE t0.c0 END)|(json(rt0.c3))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((ABS(rt0.c0))OR((((rt0.c2))>(('-212033195'))))))AND(x'f1a3')))AND(0xffffffffa57cda2d)))AND(ROUND(t0.c0, rt0.c3)))) IS TRUE)  as count FROM t0, t1, vt0, rt0 ORDER BY ((CASE ''  WHEN NULL THEN vt0.c0 ELSE t0.c0 END)|(json(rt0.c3))) ASC);
SELECT COUNT(*) FROM t0, t1, vt0, rt0 WHERE (((((((((ABS(rt0.c0))OR((((rt0.c2))>(('-212033195'))))))AND(x'f1a3')))AND(0xffffffffa57cda2d)))AND(ROUND(t0.c0, rt0.c3)))) ORDER BY ((CASE ''  WHEN NULL THEN vt0.c0 ELSE t0.c0 END)|(json(rt0.c3))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((ABS(rt0.c0))OR((((rt0.c2))>(('-212033195'))))))AND(x'f1a3')))AND(0xffffffffa57cda2d)))AND(ROUND(t0.c0, rt0.c3)))) IS TRUE)  as count FROM t0, t1, vt0, rt0 ORDER BY ((CASE ''  WHEN NULL THEN vt0.c0 ELSE t0.c0 END)|(json(rt0.c3))) ASC);
SELECT COUNT(*) FROM t0, t1, vt0, rt0 WHERE (((((((((ABS(rt0.c0))OR((((rt0.c2))>(('-212033195'))))))AND(x'f1a3')))AND(0xffffffffa57cda2d)))AND(ROUND(t0.c0, rt0.c3)))) ORDER BY ((CASE ''  WHEN NULL THEN vt0.c0 ELSE t0.c0 END)|(json(rt0.c3))) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((~ (vt0.c0 COLLATE RTRIM))) ORDER BY ((((rt0.c2)GLOB(rt0.c2)))IS NOT(((('sJz.'))<((rt0.c3))))) DESC  NULLS FIRST, ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((rt0.c0)>(rt0.c1)))) ASC  NULLS LAST, ((((((rt0.c2)AND(rt0.c3)))OR(rt0.c1))) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c2)GLOB(rt0.c2)))IS NOT(((('sJz.'))<((rt0.c3))))) DESC  NULLS FIRST, ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((rt0.c0)>(rt0.c1)))) ASC  NULLS LAST, ((((((rt0.c2)AND(rt0.c3)))OR(rt0.c1))) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((~ (vt0.c0 COLLATE RTRIM))) ORDER BY ((((rt0.c2)GLOB(rt0.c2)))IS NOT(((('sJz.'))<((rt0.c3))))) DESC  NULLS FIRST, ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((rt0.c0)>(rt0.c1)))) ASC  NULLS LAST, ((((((rt0.c2)AND(rt0.c3)))OR(rt0.c1))) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c2)GLOB(rt0.c2)))IS NOT(((('sJz.'))<((rt0.c3))))) DESC  NULLS FIRST, ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((rt0.c0)>(rt0.c1)))) ASC  NULLS LAST, ((((((rt0.c2)AND(rt0.c3)))OR(rt0.c1))) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((~ (vt0.c0 COLLATE RTRIM))) ORDER BY ((((rt0.c2)GLOB(rt0.c2)))IS NOT(((('sJz.'))<((rt0.c3))))) DESC  NULLS FIRST, ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((rt0.c0)>(rt0.c1)))) ASC  NULLS LAST, ((((((rt0.c2)AND(rt0.c3)))OR(rt0.c1))) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))  NULLS LAST;
SELECT * FROM rt0, vt0 FULL OUTER JOIN t1 ON CASE WHEN t0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c3 ELSE vt0.c0 END COLLATE RTRIM RIGHT OUTER JOIN t0 ON CAST(t0.c0 COLLATE RTRIM AS NUMERIC) WHERE (CAST(((rt0.c0)>>('-570959485')) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)>>('-570959485')) AS BLOB)) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN t1 ON CASE WHEN t0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c3 ELSE vt0.c0 END COLLATE RTRIM RIGHT OUTER JOIN t0 ON CAST(t0.c0 COLLATE RTRIM AS NUMERIC));
SELECT * FROM rt0, vt0 FULL OUTER JOIN t1 ON CASE WHEN t0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c3 ELSE vt0.c0 END COLLATE RTRIM RIGHT OUTER JOIN t0 ON CAST(t0.c0 COLLATE RTRIM AS NUMERIC) WHERE (CAST(((rt0.c0)>>('-570959485')) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)>>('-570959485')) AS BLOB)) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN t1 ON CASE WHEN t0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c3 ELSE vt0.c0 END COLLATE RTRIM RIGHT OUTER JOIN t0 ON CAST(t0.c0 COLLATE RTRIM AS NUMERIC));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 INNER JOIN t1 ON ((+ (vt0.c0)) IN ((+ (vt0.c0)))) WHERE (CAST(t1.c0 COLLATE RTRIM AS REAL)) ORDER BY (((t1.c0)/('1287177855')) IN ()) ASC  NULLS LAST, (~ (vt0.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c0 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON ((+ (vt0.c0)) IN ((+ (vt0.c0)))) ORDER BY (((t1.c0)/('1287177855')) IN ()) ASC  NULLS LAST, (~ (vt0.c0 COLLATE BINARY)) DESC);
SELECT ALL * FROM vt0 INNER JOIN t1 ON ((+ (vt0.c0)) IN ((+ (vt0.c0)))) WHERE (CAST(t1.c0 COLLATE RTRIM AS REAL)) ORDER BY (((t1.c0)/('1287177855')) IN ()) ASC  NULLS LAST, (~ (vt0.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c0 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON ((+ (vt0.c0)) IN ((+ (vt0.c0)))) ORDER BY (((t1.c0)/('1287177855')) IN ()) ASC  NULLS LAST, (~ (vt0.c0 COLLATE BINARY)) DESC);
SELECT ALL * FROM vt0 INNER JOIN t1 ON ((+ (vt0.c0)) IN ((+ (vt0.c0)))) WHERE (CAST(t1.c0 COLLATE RTRIM AS REAL)) ORDER BY (((t1.c0)/('1287177855')) IN ()) ASC  NULLS LAST, (~ (vt0.c0 COLLATE BINARY)) DESC;
SELECT ALL COUNT(*) FROM vt0, t0, t1 WHERE (((CAST(t0.c0 AS TEXT))>>(((t0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS TEXT))>>(((t0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, t0, t1);
SELECT ALL COUNT(*) FROM vt0, t0, t1 WHERE (((CAST(t0.c0 AS TEXT))>>(((t0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS TEXT))>>(((t0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, t0, t1);
SELECT ALL COUNT(*) FROM vt0, t0, t1 WHERE (((CAST(t0.c0 AS TEXT))>>(((t0.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((CAST(NULL AS NUMERIC), ((t0.c0)%(vt0.c0)), (((vt0.c0))!=((t0.c0)))))<(((~ (t0.c0)), SQLITE_SOURCE_ID(), ((((((((vt0.c0)AND(t0.c0)))OR(t0.c0)))OR(vt0.c0)))AND(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(NULL AS NUMERIC), ((t0.c0)%(vt0.c0)), (((vt0.c0))!=((t0.c0)))))<(((~ (t0.c0)), SQLITE_SOURCE_ID(), ((((((((vt0.c0)AND(t0.c0)))OR(t0.c0)))OR(vt0.c0)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((CAST(NULL AS NUMERIC), ((t0.c0)%(vt0.c0)), (((vt0.c0))!=((t0.c0)))))<(((~ (t0.c0)), SQLITE_SOURCE_ID(), ((((((((vt0.c0)AND(t0.c0)))OR(t0.c0)))OR(vt0.c0)))AND(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(NULL AS NUMERIC), ((t0.c0)%(vt0.c0)), (((vt0.c0))!=((t0.c0)))))<(((~ (t0.c0)), SQLITE_SOURCE_ID(), ((((((((vt0.c0)AND(t0.c0)))OR(t0.c0)))OR(vt0.c0)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((CAST(NULL AS NUMERIC), ((t0.c0)%(vt0.c0)), (((vt0.c0))!=((t0.c0)))))<(((~ (t0.c0)), SQLITE_SOURCE_ID(), ((((((((vt0.c0)AND(t0.c0)))OR(t0.c0)))OR(vt0.c0)))AND(vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE ((- (((549993891)GLOB(vt0.c0))))) ORDER BY CAST(0X56817ef AS REAL), '878616917' COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((- (((549993891)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0, t1, rt0 ORDER BY CAST(0X56817ef AS REAL), '878616917' COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE ((- (((549993891)GLOB(vt0.c0))))) ORDER BY CAST(0X56817ef AS REAL), '878616917' COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((- (((549993891)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0, t1, rt0 ORDER BY CAST(0X56817ef AS REAL), '878616917' COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE ((- (((549993891)GLOB(vt0.c0))))) ORDER BY CAST(0X56817ef AS REAL), '878616917' COLLATE NOCASE;
SELECT COUNT(*) FROM t0, t1, vt0 WHERE ((IFNULL(-1232819847, t1.c0) IN ())) ORDER BY ((((((((t1.c0)OR(vt0.c0)))OR(vt0.c0)))AND(CAST(t1.c0 AS NUMERIC))))AND(((('-1667738045')) BETWEEN ((NULL)) AND ((t1.c0))))), ((CAST(t0.c0 AS NUMERIC))AND(((t1.c0)<>(t1.c0)))) DESC  NULLS FIRST, CASE -324836295  WHEN CAST(t0.c0 AS NUMERIC) THEN ((vt0.c0) IS TRUE) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((IFNULL(-1232819847, t1.c0) IN ())) IS TRUE)  as count FROM t0, t1, vt0 ORDER BY ((((((((t1.c0)OR(vt0.c0)))OR(vt0.c0)))AND(CAST(t1.c0 AS NUMERIC))))AND(((('-1667738045')) BETWEEN ((NULL)) AND ((t1.c0))))), ((CAST(t0.c0 AS NUMERIC))AND(((t1.c0)!=(t1.c0)))) DESC  NULLS FIRST, CASE -324836295  WHEN CAST(t0.c0 AS NUMERIC) THEN ((vt0.c0) IS TRUE) END DESC);
SELECT COUNT(*) FROM t0, t1, vt0 WHERE ((IFNULL(-1232819847, t1.c0) IN ())) ORDER BY ((((((((t1.c0)OR(vt0.c0)))OR(vt0.c0)))AND(CAST(t1.c0 AS NUMERIC))))AND(((('-1667738045')) BETWEEN ((NULL)) AND ((t1.c0))))), ((CAST(t0.c0 AS NUMERIC))AND(((t1.c0)<>(t1.c0)))) DESC  NULLS FIRST, CASE -324836295  WHEN CAST(t0.c0 AS NUMERIC) THEN ((vt0.c0) IS TRUE) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((IFNULL(-1232819847, t1.c0) IN ())) IS TRUE)  as count FROM t0, t1, vt0 ORDER BY ((((((((t1.c0)OR(vt0.c0)))OR(vt0.c0)))AND(CAST(t1.c0 AS NUMERIC))))AND(((('-1667738045')) BETWEEN ((NULL)) AND ((t1.c0))))), ((CAST(t0.c0 AS NUMERIC))AND(((t1.c0)!=(t1.c0)))) DESC  NULLS FIRST, CASE -324836295  WHEN CAST(t0.c0 AS NUMERIC) THEN ((vt0.c0) IS TRUE) END DESC);
SELECT COUNT(*) FROM t0, t1, vt0 WHERE ((IFNULL(-1232819847, t1.c0) IN ())) ORDER BY ((((((((t1.c0)OR(vt0.c0)))OR(vt0.c0)))AND(CAST(t1.c0 AS NUMERIC))))AND(((('-1667738045')) BETWEEN ((NULL)) AND ((t1.c0))))), ((CAST(t0.c0 AS NUMERIC))AND(((t1.c0)<>(t1.c0)))) DESC  NULLS FIRST, CASE -324836295  WHEN CAST(t0.c0 AS NUMERIC) THEN ((vt0.c0) IS TRUE) END DESC;
SELECT * FROM t0, vt0, rt0, t1 WHERE (CASE rt0.c0  WHEN ((rt0.c1)LIKE(rt0.c1)) THEN ((rt0.c2)>(rt0.c3)) ELSE CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END END) ORDER BY ((CASE WHEN rt0.c1 THEN t1.c0 END) NOT BETWEEN (CAST(rt0.c3 AS REAL)) AND (load_extension(vt0.c0, vt0.c0))), (~ (load_extension(vt0.c0, rt0.c3))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN ((rt0.c1)LIKE(rt0.c1)) THEN ((rt0.c2)>(rt0.c3)) ELSE CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END END) IS TRUE)  as count FROM t0, vt0, rt0, t1 ORDER BY ((CASE WHEN rt0.c1 THEN t1.c0 END) NOT BETWEEN (CAST(rt0.c3 AS REAL)) AND (load_extension(vt0.c0, vt0.c0))), (~ (load_extension(vt0.c0, rt0.c3))) ASC  NULLS LAST);
SELECT * FROM t0, vt0, rt0, t1 WHERE (CASE rt0.c0  WHEN ((rt0.c1)LIKE(rt0.c1)) THEN ((rt0.c2)>(rt0.c3)) ELSE CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END END) ORDER BY ((CASE WHEN rt0.c1 THEN t1.c0 END) NOT BETWEEN (CAST(rt0.c3 AS REAL)) AND (load_extension(vt0.c0, vt0.c0))), (~ (load_extension(vt0.c0, rt0.c3))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN ((rt0.c1)LIKE(rt0.c1)) THEN ((rt0.c2)>(rt0.c3)) ELSE CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END END) IS TRUE)  as count FROM t0, vt0, rt0, t1 ORDER BY ((CASE WHEN rt0.c1 THEN t1.c0 END) NOT BETWEEN (CAST(rt0.c3 AS REAL)) AND (load_extension(vt0.c0, vt0.c0))), (~ (load_extension(vt0.c0, rt0.c3))) ASC  NULLS LAST);
SELECT * FROM t0, vt0, rt0, t1 WHERE (CASE rt0.c0  WHEN ((rt0.c1)LIKE(rt0.c1)) THEN ((rt0.c2)>(rt0.c3)) ELSE CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END END) ORDER BY ((CASE WHEN rt0.c1 THEN t1.c0 END) NOT BETWEEN (CAST(rt0.c3 AS REAL)) AND (load_extension(vt0.c0, vt0.c0))), (~ (load_extension(vt0.c0, rt0.c3))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, t1, rt0 WHERE ((((~ (t0.c0)))IS NOT(TRIM('-574584076', t0.c0))));
SELECT SUM(count) FROM (SELECT (((((~ (t0.c0)))IS NOT(TRIM('-574584076', t0.c0)))) IS TRUE)  as count FROM t0, t1, rt0);
SELECT COUNT(*) FROM t0, t1, rt0 WHERE ((((~ (t0.c0)))IS NOT(TRIM('-574584076', t0.c0))));
SELECT SUM(count) FROM (SELECT (((((~ (t0.c0)))IS NOT(TRIM('-574584076', t0.c0)))) IS TRUE)  as count FROM t0, t1, rt0);
SELECT COUNT(*) FROM t0, t1, rt0 WHERE ((((~ (t0.c0)))IS NOT(TRIM('-574584076', t0.c0))));
SELECT COUNT(*) FROM vt0 WHERE ((((((((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((0X32a3e4ff, vt0.c0, vt0.c0))))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(((vt0.c0)<<(vt0.c0)))))OR(((vt0.c0)&(vt0.c0)))))OR(((vt0.c0)-(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((0x32a3e4ff, vt0.c0, vt0.c0))))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(((vt0.c0)<<(vt0.c0)))))OR(((vt0.c0)&(vt0.c0)))))OR(((vt0.c0)-(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((0X32a3e4ff, vt0.c0, vt0.c0))))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(((vt0.c0)<<(vt0.c0)))))OR(((vt0.c0)&(vt0.c0)))))OR(((vt0.c0)-(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((0x32a3e4ff, vt0.c0, vt0.c0))))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(((vt0.c0)<<(vt0.c0)))))OR(((vt0.c0)&(vt0.c0)))))OR(((vt0.c0)-(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((0X32a3e4ff, vt0.c0, vt0.c0))))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(((vt0.c0)<<(vt0.c0)))))OR(((vt0.c0)&(vt0.c0)))))OR(((vt0.c0)-(vt0.c0)))));
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON (((t0.c0))==((t0.c0))) COLLATE BINARY COLLATE BINARY WHERE ((((~ (t0.c0)))OR((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((~ (t0.c0)))OR((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((t0.c0))=((t0.c0))) COLLATE BINARY COLLATE BINARY);
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON (((t0.c0))==((t0.c0))) COLLATE BINARY COLLATE BINARY WHERE ((((~ (t0.c0)))OR((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((~ (t0.c0)))OR((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((t0.c0))=((t0.c0))) COLLATE BINARY COLLATE BINARY);
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON (((t0.c0))==((t0.c0))) COLLATE BINARY COLLATE BINARY WHERE ((((~ (t0.c0)))OR((vt0.c0 IN (vt0.c0)))));
SELECT ALL * FROM t1 RIGHT OUTER JOIN rt0 ON (~ (((rt0.c2)|('u	_L''8X''M')))) WHERE ((((rt0.c1 IN ())) NOT BETWEEN (((t1.c0) NOTNULL)) AND (((rt0.c3)>>(rt0.c3))))) ORDER BY (0.4657550128986492 IN (TRIM(rt0.c2), ''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ())) NOT BETWEEN (((t1.c0) NOTNULL)) AND (((rt0.c3)>>(rt0.c3))))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON (~ (((rt0.c2)|('u	_L''8X''M')))) ORDER BY (0.4657550128986492 IN (TRIM(rt0.c2), ''))  NULLS LAST);
SELECT ALL * FROM t1 RIGHT OUTER JOIN rt0 ON (~ (((rt0.c2)|('u	_L''8X''M')))) WHERE ((((rt0.c1 IN ())) NOT BETWEEN (((t1.c0) NOTNULL)) AND (((rt0.c3)>>(rt0.c3))))) ORDER BY (0.4657550128986492 IN (TRIM(rt0.c2), ''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ())) NOT BETWEEN (((t1.c0) NOTNULL)) AND (((rt0.c3)>>(rt0.c3))))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON (~ (((rt0.c2)|('u	_L''8X''M')))) ORDER BY (0.4657550128986492 IN (TRIM(rt0.c2), ''))  NULLS LAST);
SELECT ALL * FROM t1 RIGHT OUTER JOIN rt0 ON (~ (((rt0.c2)|('u	_L''8X''M')))) WHERE ((((rt0.c1 IN ())) NOT BETWEEN (((t1.c0) NOTNULL)) AND (((rt0.c3)>>(rt0.c3))))) ORDER BY (0.4657550128986492 IN (TRIM(rt0.c2), ''))  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN t1.c0 COLLATE NOCASE THEN ((((t1.c0)OR(t1.c0)))AND(t1.c0)) ELSE t1.c0 END) ORDER BY ((((t1.c0)OR(t1.c0))) BETWEEN ((- (t1.c0))) AND (((t1.c0) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t1.c0 COLLATE NOCASE THEN ((((t1.c0)OR(t1.c0)))AND(t1.c0)) ELSE t1.c0 END) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0)OR(t1.c0))) BETWEEN ((- (t1.c0))) AND (((t1.c0) NOTNULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN t1.c0 COLLATE NOCASE THEN ((((t1.c0)OR(t1.c0)))AND(t1.c0)) ELSE t1.c0 END) ORDER BY ((((t1.c0)OR(t1.c0))) BETWEEN ((- (t1.c0))) AND (((t1.c0) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t1.c0 COLLATE NOCASE THEN ((((t1.c0)OR(t1.c0)))AND(t1.c0)) ELSE t1.c0 END) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0)OR(t1.c0))) BETWEEN ((- (t1.c0))) AND (((t1.c0) NOTNULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN t1.c0 COLLATE NOCASE THEN ((((t1.c0)OR(t1.c0)))AND(t1.c0)) ELSE t1.c0 END) ORDER BY ((((t1.c0)OR(t1.c0))) BETWEEN ((- (t1.c0))) AND (((t1.c0) NOTNULL)))  NULLS FIRST;
SELECT ALL * FROM t0, vt0, rt0, t1 WHERE ((((~ (t0.c0)))&(((((((((rt0.c0)AND('0.8808434575261938')))AND(rt0.c3)))OR(t0.c0)))OR(rt0.c0))))) ORDER BY (~ (CAST(vt0.c0 AS INTEGER))) ASC, ((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))<((rt0.c3 COLLATE NOCASE))) DESC  NULLS LAST, (NOT ('\'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (t0.c0)))&(((((((((rt0.c0)AND('0.8808434575261938')))AND(rt0.c3)))OR(t0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM t0, vt0, rt0, t1 ORDER BY (~ (CAST(vt0.c0 AS INTEGER))) ASC, ((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))<((rt0.c3 COLLATE NOCASE))) DESC  NULLS LAST, (NOT ('\'))  NULLS LAST);
SELECT ALL * FROM t0, vt0, rt0, t1 WHERE ((((~ (t0.c0)))&(((((((((rt0.c0)AND('0.8808434575261938')))AND(rt0.c3)))OR(t0.c0)))OR(rt0.c0))))) ORDER BY (~ (CAST(vt0.c0 AS INTEGER))) ASC, ((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))<((rt0.c3 COLLATE NOCASE))) DESC  NULLS LAST, (NOT ('\'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (t0.c0)))&(((((((((rt0.c0)AND('0.8808434575261938')))AND(rt0.c3)))OR(t0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM t0, vt0, rt0, t1 ORDER BY (~ (CAST(vt0.c0 AS INTEGER))) ASC, ((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))<((rt0.c3 COLLATE NOCASE))) DESC  NULLS LAST, (NOT ('\'))  NULLS LAST);
SELECT ALL * FROM t0, vt0, rt0, t1 WHERE ((((~ (t0.c0)))&(((((((((rt0.c0)AND('0.8808434575261938')))AND(rt0.c3)))OR(t0.c0)))OR(rt0.c0))))) ORDER BY (~ (CAST(vt0.c0 AS INTEGER))) ASC, ((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))<((rt0.c3 COLLATE NOCASE))) DESC  NULLS LAST, (NOT ('\'))  NULLS LAST;
SELECT ALL * FROM t0, vt0, t1, rt0 WHERE ((((t1.c0 IN ()))&(((rt0.c3) NOT NULL)))) ORDER BY ((((rt0.c1)<(rt0.c0))) ISNULL) ASC, ((NULL) IS FALSE);
SELECT SUM(count) FROM (SELECT (((((t1.c0 IN ()))&(((rt0.c3) NOT NULL)))) IS TRUE)  as count FROM t0, vt0, t1, rt0 ORDER BY ((((rt0.c1)<(rt0.c0))) ISNULL) ASC, ((NULL) IS FALSE));
SELECT ALL * FROM t0, vt0, t1, rt0 WHERE ((((t1.c0 IN ()))&(((rt0.c3) NOT NULL)))) ORDER BY ((((rt0.c1)<(rt0.c0))) ISNULL) ASC, ((NULL) IS FALSE);
SELECT SUM(count) FROM (SELECT (((((t1.c0 IN ()))&(((rt0.c3) NOT NULL)))) IS TRUE)  as count FROM t0, vt0, t1, rt0 ORDER BY ((((rt0.c1)<(rt0.c0))) ISNULL) ASC, ((NULL) IS FALSE));
SELECT ALL * FROM t0, vt0, t1, rt0 WHERE ((((t1.c0 IN ()))&(((rt0.c3) NOT NULL)))) ORDER BY ((((rt0.c1)<(rt0.c0))) ISNULL) ASC, ((NULL) IS FALSE);
SELECT ALL * FROM vt0, t1, t0, rt0 WHERE (TYPEOF(((rt0.c2) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((rt0.c2) IS TRUE))) IS TRUE)  as count FROM vt0, t1, t0, rt0);
SELECT ALL * FROM vt0, t1, t0, rt0 WHERE (TYPEOF(((rt0.c2) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((rt0.c2) IS TRUE))) IS TRUE)  as count FROM vt0, t1, t0, rt0);
SELECT ALL * FROM vt0, t1, t0, rt0 WHERE (TYPEOF(((rt0.c2) IS TRUE)));
SELECT * FROM t1 WHERE ((('935087665')|((t1.c0 IN (t1.c0)))));
SELECT SUM(count) FROM (SELECT (((('935087665')|((t1.c0 IN (t1.c0))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((('935087665')|((t1.c0 IN (t1.c0)))));
SELECT SUM(count) FROM (SELECT (((('935087665')|((t1.c0 IN (t1.c0))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((('935087665')|((t1.c0 IN (t1.c0)))));
SELECT ALL * FROM rt0, t1 WHERE (rt0.c1) ORDER BY (~ (x'544e')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, t1 ORDER BY (~ (x'544e')) ASC  NULLS LAST);
SELECT ALL * FROM rt0, t1 WHERE (rt0.c1) ORDER BY (~ (x'544e')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, t1 ORDER BY (~ (x'544e')) ASC  NULLS LAST);
SELECT ALL * FROM rt0, t1 WHERE (rt0.c1) ORDER BY (~ (x'544e')) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN t1 WHERE ((((t1.c0)) BETWEEN ((TYPEOF(t0.c0))) AND ((CASE WHEN t0.c0 THEN 6.91642431E8 WHEN x'f24c' THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))) ORDER BY t1.c0;
SELECT SUM(count) FROM (SELECT (((((t1.c0)) BETWEEN ((TYPEOF(t0.c0))) AND ((CASE WHEN t0.c0 THEN 6.91642431E8 WHEN x'f24c' THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))) IS TRUE)  as count FROM t0 NATURAL JOIN t1 ORDER BY t1.c0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN t1 WHERE ((((t1.c0)) BETWEEN ((TYPEOF(t0.c0))) AND ((CASE WHEN t0.c0 THEN 6.91642431E8 WHEN x'f24c' THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))) ORDER BY t1.c0;
SELECT SUM(count) FROM (SELECT (((((t1.c0)) BETWEEN ((TYPEOF(t0.c0))) AND ((CASE WHEN t0.c0 THEN 6.91642431E8 WHEN x'f24c' THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))) IS TRUE)  as count FROM t0 NATURAL JOIN t1 ORDER BY t1.c0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN t1 WHERE ((((t1.c0)) BETWEEN ((TYPEOF(t0.c0))) AND ((CASE WHEN t0.c0 THEN 6.91642431E8 WHEN x'f24c' THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))) ORDER BY t1.c0;
SELECT ALL * FROM t0, t1 WHERE (((((t1.c0)-(t0.c0)))AND(CAST(t0.c0 AS BLOB)))) ORDER BY ((((((((((t1.c0)OR(t0.c0)))AND(t0.c0)))AND(t1.c0)))OR(t1.c0)))&(((((((((t1.c0)OR(t1.c0)))AND(t0.c0)))OR(t1.c0)))AND(t1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)-(t0.c0)))AND(CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM t0, t1 ORDER BY ((((((((((t1.c0)OR(t0.c0)))AND(t0.c0)))AND(t1.c0)))OR(t1.c0)))&(((((((((t1.c0)OR(t1.c0)))AND(t0.c0)))OR(t1.c0)))AND(t1.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, t1 WHERE (((((t1.c0)-(t0.c0)))AND(CAST(t0.c0 AS BLOB)))) ORDER BY ((((((((((t1.c0)OR(t0.c0)))AND(t0.c0)))AND(t1.c0)))OR(t1.c0)))&(((((((((t1.c0)OR(t1.c0)))AND(t0.c0)))OR(t1.c0)))AND(t1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)-(t0.c0)))AND(CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM t0, t1 ORDER BY ((((((((((t1.c0)OR(t0.c0)))AND(t0.c0)))AND(t1.c0)))OR(t1.c0)))&(((((((((t1.c0)OR(t1.c0)))AND(t0.c0)))OR(t1.c0)))AND(t1.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, t1 WHERE (((((t1.c0)-(t0.c0)))AND(CAST(t0.c0 AS BLOB)))) ORDER BY ((((((((((t1.c0)OR(t0.c0)))AND(t0.c0)))AND(t1.c0)))OR(t1.c0)))&(((((((((t1.c0)OR(t1.c0)))AND(t0.c0)))OR(t1.c0)))AND(t1.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 INDEXED BY i82 WHERE (TYPEOF((('-903466903')|(rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((('-903466903')|(rt0.c3)))) IS TRUE)  as count FROM rt0 INDEXED BY i82);
SELECT ALL * FROM rt0 INDEXED BY i82 WHERE (TYPEOF((('-903466903')|(rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((('-903466903')|(rt0.c3)))) IS TRUE)  as count FROM rt0 INDEXED BY i82);
SELECT * FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) AND ((((NULL)<<(rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) AND ((((NULL)<<(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) AND ((((NULL)<<(rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) AND ((((NULL)<<(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) AND ((((NULL)<<(rt0.c1))))));
SELECT * FROM rt0, t1 WHERE ((((CASE WHEN rt0.c0 THEN t1.c0 ELSE rt0.c2 END))<((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1)))))) ORDER BY CASE WHEN ((t1.c0) NOT NULL) THEN ((rt0.c3)*(rt0.c3)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN rt0.c0 THEN t1.c0 ELSE rt0.c2 END))<((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1)))))) IS TRUE)  as count FROM rt0, t1 ORDER BY CASE WHEN ((t1.c0) NOT NULL) THEN ((rt0.c3)*(rt0.c3)) END DESC);
SELECT * FROM rt0, t1 WHERE ((((CASE WHEN rt0.c0 THEN t1.c0 ELSE rt0.c2 END))<((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1)))))) ORDER BY CASE WHEN ((t1.c0) NOT NULL) THEN ((rt0.c3)*(rt0.c3)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN rt0.c0 THEN t1.c0 ELSE rt0.c2 END))<((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1)))))) IS TRUE)  as count FROM rt0, t1 ORDER BY CASE WHEN ((t1.c0) NOT NULL) THEN ((rt0.c3)*(rt0.c3)) END DESC);
SELECT * FROM rt0, t1 WHERE ((((CASE WHEN rt0.c0 THEN t1.c0 ELSE rt0.c2 END))<((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1)))))) ORDER BY CASE WHEN ((t1.c0) NOT NULL) THEN ((rt0.c3)*(rt0.c3)) END DESC;
SELECT ALL * FROM rt0, t0, vt0 WHERE (((((rt0.c3)+('0.3711571548384983'))) NOTNULL)) ORDER BY ((((t0.c0)GLOB(rt0.c3))) BETWEEN ((((rt0.c1))!=((vt0.c0)))) AND (SQLITE_VERSION())) ASC, (((((((rt0.c1))<>((vt0.c0))))OR((- (rt0.c1)))))AND(CASE WHEN rt0.c2 THEN x'' END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)+('0.3711571548384983'))) NOTNULL)) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((t0.c0)GLOB(rt0.c3))) BETWEEN ((((rt0.c1))<>((vt0.c0)))) AND (SQLITE_VERSION())) ASC, (((((((rt0.c1))!=((vt0.c0))))OR((- (rt0.c1)))))AND(CASE WHEN rt0.c2 THEN x'' END)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, t0, vt0 WHERE (((((rt0.c3)+('0.3711571548384983'))) NOTNULL)) ORDER BY ((((t0.c0)GLOB(rt0.c3))) BETWEEN ((((rt0.c1))!=((vt0.c0)))) AND (SQLITE_VERSION())) ASC, (((((((rt0.c1))<>((vt0.c0))))OR((- (rt0.c1)))))AND(CASE WHEN rt0.c2 THEN x'' END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)+('0.3711571548384983'))) NOTNULL)) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((t0.c0)GLOB(rt0.c3))) BETWEEN ((((rt0.c1))<>((vt0.c0)))) AND (SQLITE_VERSION())) ASC, (((((((rt0.c1))!=((vt0.c0))))OR((- (rt0.c1)))))AND(CASE WHEN rt0.c2 THEN x'' END)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, t0, vt0 WHERE (((((rt0.c3)+('0.3711571548384983'))) NOTNULL)) ORDER BY ((((t0.c0)GLOB(rt0.c3))) BETWEEN ((((rt0.c1))!=((vt0.c0)))) AND (SQLITE_VERSION())) ASC, (((((((rt0.c1))<>((vt0.c0))))OR((- (rt0.c1)))))AND(CASE WHEN rt0.c2 THEN x'' END)) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, t0, t1 CROSS JOIN rt0 ON ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c3))) IS FALSE) WHERE (((rt0.c1)||(t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)||(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, t1 CROSS JOIN rt0 ON ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c3))) IS FALSE));
SELECT ALL * FROM vt0, t0, t1 CROSS JOIN rt0 ON ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c3))) IS FALSE) WHERE (((rt0.c1)||(t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)||(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, t1 CROSS JOIN rt0 ON ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c3))) IS FALSE));
SELECT ALL * FROM vt0, t0, t1 CROSS JOIN rt0 ON ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c3))) IS FALSE) WHERE (((rt0.c1)||(t0.c0)) COLLATE BINARY);
SELECT ALL * FROM t1 WHERE (((CAST('309744744' AS NUMERIC)) BETWEEN (((t1.c0) NOT NULL)) AND (((t1.c0) ISNULL)))) ORDER BY ((CASE 0xfffffffffc8c7e17  WHEN t1.c0 THEN t1.c0 WHEN 1.65228779E9 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)LIKE(UPPER(DISTINCT t1.c0)));
SELECT SUM(count) FROM (SELECT ((((CAST('309744744' AS NUMERIC)) BETWEEN (((t1.c0) NOT NULL)) AND (((t1.c0) ISNULL)))) IS TRUE)  as count FROM t1 ORDER BY ((CASE 0Xfffffffffc8c7e17  WHEN t1.c0 THEN t1.c0 WHEN 1.65228779E9 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)LIKE(UPPER(DISTINCT t1.c0))));
SELECT ALL * FROM t1 WHERE (((CAST('309744744' AS NUMERIC)) BETWEEN (((t1.c0) NOT NULL)) AND (((t1.c0) ISNULL)))) ORDER BY ((CASE 0xfffffffffc8c7e17  WHEN t1.c0 THEN t1.c0 WHEN 1.65228779E9 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)LIKE(UPPER(DISTINCT t1.c0)));
SELECT SUM(count) FROM (SELECT ((((CAST('309744744' AS NUMERIC)) BETWEEN (((t1.c0) NOT NULL)) AND (((t1.c0) ISNULL)))) IS TRUE)  as count FROM t1 ORDER BY ((CASE 0Xfffffffffc8c7e17  WHEN t1.c0 THEN t1.c0 WHEN 1.65228779E9 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)LIKE(UPPER(DISTINCT t1.c0))));
SELECT ALL * FROM t1 WHERE (((CAST('309744744' AS NUMERIC)) BETWEEN (((t1.c0) NOT NULL)) AND (((t1.c0) ISNULL)))) ORDER BY ((CASE 0xfffffffffc8c7e17  WHEN t1.c0 THEN t1.c0 WHEN 1.65228779E9 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)LIKE(UPPER(DISTINCT t1.c0)));
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((- ('-1839400636')));
SELECT SUM(count) FROM (SELECT (((- ('-1839400636'))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((- ('-1839400636')));
SELECT SUM(count) FROM (SELECT (((- ('-1839400636'))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((- ('-1839400636')));
SELECT COUNT(*) FROM t1 NOT INDEXED, rt0 WHERE (((t1.c0 IN ()) IN (NULL, ((t1.c0)>(t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((t1.c0 IN ()) IN (NULL, ((t1.c0)>(t1.c0))))) IS TRUE)  as count FROM t1, rt0);
SELECT COUNT(*) FROM t1 NOT INDEXED, rt0 WHERE (((t1.c0 IN ()) IN (NULL, ((t1.c0)>(t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((t1.c0 IN ()) IN (NULL, ((t1.c0)>(t1.c0))))) IS TRUE)  as count FROM t1, rt0);
SELECT COUNT(*) FROM t1 NOT INDEXED, rt0 WHERE (((t1.c0 IN ()) IN (NULL, ((t1.c0)>(t1.c0)))));
SELECT * FROM rt0, t1, t0 WHERE (CASE (((t0.c0, t1.c0, rt0.c2)) BETWEEN ((t0.c0, rt0.c1, t1.c0)) AND (('-1585258473', t0.c0, t0.c0)))  WHEN (('61875777')OR(t1.c0)) THEN (+ (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t0.c0, t1.c0, rt0.c2)) BETWEEN ((t0.c0, rt0.c1, t1.c0)) AND (('-1585258473', t0.c0, t0.c0)))  WHEN (('61875777')OR(t1.c0)) THEN (+ (rt0.c2)) END) IS TRUE)  as count FROM rt0, t1, t0);
SELECT * FROM rt0, t1, t0 WHERE (CASE (((t0.c0, t1.c0, rt0.c2)) BETWEEN ((t0.c0, rt0.c1, t1.c0)) AND (('-1585258473', t0.c0, t0.c0)))  WHEN (('61875777')OR(t1.c0)) THEN (+ (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t0.c0, t1.c0, rt0.c2)) BETWEEN ((t0.c0, rt0.c1, t1.c0)) AND (('-1585258473', t0.c0, t0.c0)))  WHEN (('61875777')OR(t1.c0)) THEN (+ (rt0.c2)) END) IS TRUE)  as count FROM rt0, t1, t0);
SELECT * FROM rt0, t1, t0 WHERE (CASE (((t0.c0, t1.c0, rt0.c2)) BETWEEN ((t0.c0, rt0.c1, t1.c0)) AND (('-1585258473', t0.c0, t0.c0)))  WHEN (('61875777')OR(t1.c0)) THEN (+ (rt0.c2)) END);
SELECT ALL * FROM t0, vt0, rt0, t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt0, rt0, t1);
SELECT ALL * FROM t0, vt0, rt0, t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt0, rt0, t1);
SELECT ALL * FROM t0, vt0, rt0, t1 WHERE (NULL);
SELECT ALL * FROM t1 WHERE ((t1.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t1.c0 IN ())) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((t1.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t1.c0 IN ())) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((t1.c0 IN ()));
SELECT * FROM t0, rt0, t1, vt0 WHERE (TRIM(((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)), ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))) ORDER BY (CASE WHEN t0.c0 THEN t0.c0 END IN (vt0.c0, CASE WHEN t0.c0 THEN rt0.c0 END, (rt0.c2 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)), ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))) IS TRUE)  as count FROM t0, rt0, t1, vt0 ORDER BY (CASE WHEN t0.c0 THEN t0.c0 END IN (vt0.c0, CASE WHEN t0.c0 THEN rt0.c0 END, (rt0.c2 IN ())))  NULLS LAST);
SELECT * FROM t0, rt0, t1, vt0 WHERE (TRIM(((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)), ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))) ORDER BY (CASE WHEN t0.c0 THEN t0.c0 END IN (vt0.c0, CASE WHEN t0.c0 THEN rt0.c0 END, (rt0.c2 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)), ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))) IS TRUE)  as count FROM t0, rt0, t1, vt0 ORDER BY (CASE WHEN t0.c0 THEN t0.c0 END IN (vt0.c0, CASE WHEN t0.c0 THEN rt0.c0 END, (rt0.c2 IN ())))  NULLS LAST);
SELECT * FROM t0, rt0, t1, vt0 WHERE (TRIM(((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)), ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))) ORDER BY (CASE WHEN t0.c0 THEN t0.c0 END IN (vt0.c0, CASE WHEN t0.c0 THEN rt0.c0 END, (rt0.c2 IN ())))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0, rt0, t1 WHERE (CAST(t0.c0 AS TEXT)) ORDER BY CASE WHEN rt0.c3 THEN ((0.6983311754023007)+(rt0.c2)) ELSE CASE WHEN rt0.c1 THEN t0.c0 ELSE rt0.c3 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS TEXT)) IS TRUE)  as count FROM t0, vt0, rt0, t1 ORDER BY CASE WHEN rt0.c3 THEN ((0.6983311754023007)+(rt0.c2)) ELSE CASE WHEN rt0.c1 THEN t0.c0 ELSE rt0.c3 END END  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, rt0, t1 WHERE (CAST(t0.c0 AS TEXT)) ORDER BY CASE WHEN rt0.c3 THEN ((0.6983311754023007)+(rt0.c2)) ELSE CASE WHEN rt0.c1 THEN t0.c0 ELSE rt0.c3 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS TEXT)) IS TRUE)  as count FROM t0, vt0, rt0, t1 ORDER BY CASE WHEN rt0.c3 THEN ((0.6983311754023007)+(rt0.c2)) ELSE CASE WHEN rt0.c1 THEN t0.c0 ELSE rt0.c3 END END  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, rt0, t1 WHERE (CAST(t0.c0 AS TEXT)) ORDER BY CASE WHEN rt0.c3 THEN ((0.6983311754023007)+(rt0.c2)) ELSE CASE WHEN rt0.c1 THEN t0.c0 ELSE rt0.c3 END END  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((t1.c0 COLLATE RTRIM))=(('\nT湴2ZH'))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0 COLLATE RTRIM))==(('\nT湴2ZH')))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((t1.c0 COLLATE RTRIM))=(('\nT湴2ZH'))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0 COLLATE RTRIM))==(('\nT湴2ZH')))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((t1.c0 COLLATE RTRIM))=(('\nT湴2ZH'))));
SELECT * FROM rt0, t0 LEFT OUTER JOIN vt0 ON (('s-' COLLATE BINARY) IS FALSE) WHERE (-1.565472402E9) ORDER BY (~ (rt0.c3 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((-1.565472402E9) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN vt0 ON (('s-' COLLATE BINARY) IS FALSE) ORDER BY (~ (rt0.c3 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT * FROM rt0, t0 LEFT OUTER JOIN vt0 ON (('s-' COLLATE BINARY) IS FALSE) WHERE (-1.565472402E9) ORDER BY (~ (rt0.c3 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((-1.565472402E9) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN vt0 ON (('s-' COLLATE BINARY) IS FALSE) ORDER BY (~ (rt0.c3 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT * FROM rt0, t0 LEFT OUTER JOIN vt0 ON (('s-' COLLATE BINARY) IS FALSE) WHERE (-1.565472402E9) ORDER BY (~ (rt0.c3 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(((t0.c0) NOTNULL) AS REAL)) ORDER BY ((vt0.c0 COLLATE NOCASE)/(((vt0.c0)-(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) NOTNULL) AS REAL)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)/(((vt0.c0)-(t0.c0)))) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(((t0.c0) NOTNULL) AS REAL)) ORDER BY ((vt0.c0 COLLATE NOCASE)/(((vt0.c0)-(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) NOTNULL) AS REAL)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)/(((vt0.c0)-(t0.c0)))) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(((t0.c0) NOTNULL) AS REAL)) ORDER BY ((vt0.c0 COLLATE NOCASE)/(((vt0.c0)-(t0.c0)))) DESC;
SELECT ALL COUNT(*) FROM t0, t1, vt0, rt0 WHERE (CAST(((rt0.c0) IS FALSE) AS REAL)) ORDER BY CAST(((rt0.c3)>(rt0.c2)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) IS FALSE) AS REAL)) IS TRUE)  as count FROM t0, t1, vt0, rt0 ORDER BY CAST(((rt0.c3)>(rt0.c2)) AS REAL) DESC);
SELECT ALL COUNT(*) FROM t0, t1, vt0, rt0 WHERE (CAST(((rt0.c0) IS FALSE) AS REAL)) ORDER BY CAST(((rt0.c3)>(rt0.c2)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) IS FALSE) AS REAL)) IS TRUE)  as count FROM t0, t1, vt0, rt0 ORDER BY CAST(((rt0.c3)>(rt0.c2)) AS REAL) DESC);
SELECT ALL COUNT(*) FROM t0, t1, vt0, rt0 WHERE (CAST(((rt0.c0) IS FALSE) AS REAL)) ORDER BY CAST(((rt0.c3)>(rt0.c2)) AS REAL) DESC;
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (((((t0.c0))!=((NULL)))) NOT BETWEEN (((rt0.c1)>>(x''))) AND (t0.c0)) WHERE ((NOT (((rt0.c0)|(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c0)|(rt0.c2))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (((((t0.c0))!=((NULL)))) NOT BETWEEN (((rt0.c1)>>(x''))) AND (t0.c0)));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (((((t0.c0))!=((NULL)))) NOT BETWEEN (((rt0.c1)>>(x''))) AND (t0.c0)) WHERE ((NOT (((rt0.c0)|(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c0)|(rt0.c2))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (((((t0.c0))!=((NULL)))) NOT BETWEEN (((rt0.c1)>>(x''))) AND (t0.c0)));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (((((t0.c0))!=((NULL)))) NOT BETWEEN (((rt0.c1)>>(x''))) AND (t0.c0)) WHERE ((NOT (((rt0.c0)|(rt0.c2)))));
SELECT ALL COUNT(*) FROM t1 NATURAL JOIN t0 WHERE (((((t1.c0)IS NOT(t0.c0))) NOT BETWEEN (((t1.c0) NOTNULL)) AND (t1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)IS NOT(t0.c0))) NOT BETWEEN (((t1.c0) NOTNULL)) AND (t1.c0))) IS TRUE)  as count FROM t1 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM t1 NATURAL JOIN t0 WHERE (((((t1.c0)IS NOT(t0.c0))) NOT BETWEEN (((t1.c0) NOTNULL)) AND (t1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)IS NOT(t0.c0))) NOT BETWEEN (((t1.c0) NOTNULL)) AND (t1.c0))) IS TRUE)  as count FROM t1 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM t1 NATURAL JOIN t0 WHERE (((((t1.c0)IS NOT(t0.c0))) NOT BETWEEN (((t1.c0) NOTNULL)) AND (t1.c0)));
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(vt0.c0 COLLATE RTRIM)));
SELECT * FROM t1, t0, vt0, rt0 WHERE (0.3768475793805882) ORDER BY ((((x'')*(rt0.c1)))-(((t1.c0)>=(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.3768475793805882) IS TRUE)  as count FROM t1, t0, vt0, rt0 ORDER BY ((((x'')*(rt0.c1)))-(((t1.c0)>=(rt0.c2))))  NULLS LAST);
SELECT * FROM t1, t0, vt0, rt0 WHERE (0.3768475793805882) ORDER BY ((((x'')*(rt0.c1)))-(((t1.c0)>=(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.3768475793805882) IS TRUE)  as count FROM t1, t0, vt0, rt0 ORDER BY ((((x'')*(rt0.c1)))-(((t1.c0)>=(rt0.c2))))  NULLS LAST);
SELECT * FROM t1, t0, vt0, rt0 WHERE (0.3768475793805882) ORDER BY ((((x'')*(rt0.c1)))-(((t1.c0)>=(rt0.c2))))  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (((t1.c0)<<(t1.c0)) COLLATE NOCASE) ORDER BY (+ ((((t1.c0, t1.c0, t1.c0)) BETWEEN (('0.13831278708479677', t1.c0, t1.c0)) AND ((t1.c0, NULL, t1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)<<(t1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY (+ ((((t1.c0, t1.c0, t1.c0)) BETWEEN (('0.13831278708479677', t1.c0, t1.c0)) AND ((t1.c0, NULL, t1.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (((t1.c0)<<(t1.c0)) COLLATE NOCASE) ORDER BY (+ ((((t1.c0, t1.c0, t1.c0)) BETWEEN (('0.13831278708479677', t1.c0, t1.c0)) AND ((t1.c0, NULL, t1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)<<(t1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY (+ ((((t1.c0, t1.c0, t1.c0)) BETWEEN (('0.13831278708479677', t1.c0, t1.c0)) AND ((t1.c0, NULL, t1.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (((t1.c0)<<(t1.c0)) COLLATE NOCASE) ORDER BY (+ ((((t1.c0, t1.c0, t1.c0)) BETWEEN (('0.13831278708479677', t1.c0, t1.c0)) AND ((t1.c0, NULL, t1.c0)))))  NULLS LAST;
SELECT ALL * FROM vt0 INDEXED BY i82 RIGHT OUTER JOIN rt0 ON ABS(DISTINCT (rt0.c2 IN ())) WHERE (((((((((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 END)OR(rt0.c1 COLLATE NOCASE)))OR(rt0.c1)))OR(((rt0.c1) IS FALSE))))OR(CAST(rt0.c0 AS INTEGER)))) ORDER BY CHANGES()  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 END)OR(rt0.c1 COLLATE NOCASE)))OR(rt0.c1)))OR(((rt0.c1) IS FALSE))))OR(CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0 INDEXED BY i82 RIGHT OUTER JOIN rt0 ON ABS(DISTINCT (rt0.c2 IN ())) ORDER BY CHANGES()  NULLS LAST);
SELECT ALL * FROM vt0 INDEXED BY i82 RIGHT OUTER JOIN rt0 ON ABS(DISTINCT (rt0.c2 IN ())) WHERE (((((((((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 END)OR(rt0.c1 COLLATE NOCASE)))OR(rt0.c1)))OR(((rt0.c1) IS FALSE))))OR(CAST(rt0.c0 AS INTEGER)))) ORDER BY CHANGES()  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 END)OR(rt0.c1 COLLATE NOCASE)))OR(rt0.c1)))OR(((rt0.c1) IS FALSE))))OR(CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0 INDEXED BY i82 RIGHT OUTER JOIN rt0 ON ABS(DISTINCT (rt0.c2 IN ())) ORDER BY CHANGES()  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, t1, t0 WHERE ((- (t0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c0))) IS TRUE)  as count FROM rt0, vt0, t1, t0);
SELECT COUNT(*) FROM rt0, vt0, t1, t0 WHERE ((- (t0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c0))) IS TRUE)  as count FROM rt0, vt0, t1, t0);
SELECT COUNT(*) FROM rt0, vt0, t1, t0 WHERE ((- (t0.c0)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0))))<((CAST(rt0.c1 AS REAL)))));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0))))<((CAST(rt0.c1 AS REAL))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0))))<((CAST(rt0.c1 AS REAL)))));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0))))<((CAST(rt0.c1 AS REAL))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0))))<((CAST(rt0.c1 AS REAL)))));
SELECT ALL * FROM rt0, vt0 WHERE (((vt0.c0)*(rt0.c0)) COLLATE BINARY) ORDER BY (((rt0.c2 IN ()))<>(NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)*(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c2 IN ()))<>(NULL)));
SELECT ALL * FROM rt0, vt0 WHERE (((vt0.c0)*(rt0.c0)) COLLATE BINARY) ORDER BY (((rt0.c2 IN ()))<>(NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)*(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c2 IN ()))<>(NULL)));
SELECT ALL * FROM rt0, vt0 WHERE (((vt0.c0)*(rt0.c0)) COLLATE BINARY) ORDER BY (((rt0.c2 IN ()))<>(NULL));
SELECT ALL COUNT(*) FROM t1, rt0, t0, vt0 WHERE (((((t1.c0)OR(rt0.c3))) BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (((((t0.c0)AND(rt0.c1)))AND(rt0.c2))))) ORDER BY (~ (rt0.c3 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)OR(rt0.c3))) BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (((((t0.c0)AND(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM t1, rt0, t0, vt0 ORDER BY (~ (rt0.c3 COLLATE BINARY))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt0, t0, vt0 WHERE (((((t1.c0)OR(rt0.c3))) BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (((((t0.c0)AND(rt0.c1)))AND(rt0.c2))))) ORDER BY (~ (rt0.c3 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)OR(rt0.c3))) BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (((((t0.c0)AND(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM t1, rt0, t0, vt0 ORDER BY (~ (rt0.c3 COLLATE BINARY))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt0, t0, vt0 WHERE (((((t1.c0)OR(rt0.c3))) BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (((((t0.c0)AND(rt0.c1)))AND(rt0.c2))))) ORDER BY (~ (rt0.c3 COLLATE BINARY))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t1 INNER JOIN t0 ON IFNULL(DISTINCT t1.c0, rt0.c1) COLLATE RTRIM CROSS JOIN rt0 ON UNICODE(rt0.c0) COLLATE NOCASE WHERE (((((vt0.c0) BETWEEN (t0.c0) AND (rt0.c0))) NOT BETWEEN (rt0.c0) AND (CAST(0.205040888428085 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (t0.c0) AND (rt0.c0))) NOT BETWEEN (rt0.c0) AND (CAST(0.205040888428085 AS NUMERIC)))) IS TRUE)  as count FROM vt0, t1 INNER JOIN t0 ON IFNULL(DISTINCT t1.c0, rt0.c1) COLLATE RTRIM CROSS JOIN rt0 ON UNICODE(rt0.c0) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, t1 INNER JOIN t0 ON IFNULL(DISTINCT t1.c0, rt0.c1) COLLATE RTRIM CROSS JOIN rt0 ON UNICODE(rt0.c0) COLLATE NOCASE WHERE (((((vt0.c0) BETWEEN (t0.c0) AND (rt0.c0))) NOT BETWEEN (rt0.c0) AND (CAST(0.205040888428085 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (t0.c0) AND (rt0.c0))) NOT BETWEEN (rt0.c0) AND (CAST(0.205040888428085 AS NUMERIC)))) IS TRUE)  as count FROM vt0, t1 INNER JOIN t0 ON IFNULL(DISTINCT t1.c0, rt0.c1) COLLATE RTRIM CROSS JOIN rt0 ON UNICODE(rt0.c0) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, t1 INNER JOIN t0 ON IFNULL(DISTINCT t1.c0, rt0.c1) COLLATE RTRIM CROSS JOIN rt0 ON UNICODE(rt0.c0) COLLATE NOCASE WHERE (((((vt0.c0) BETWEEN (t0.c0) AND (rt0.c0))) NOT BETWEEN (rt0.c0) AND (CAST(0.205040888428085 AS NUMERIC))));
SELECT * FROM t0 FULL OUTER JOIN t1 ON (((((rt0.c3 IN ()))OR((rt0.c3 IN (x'e739', rt0.c2)))))AND((((NULL, rt0.c2, rt0.c2)) NOT BETWEEN ((x'c86b', rt0.c1, t0.c0)) AND ((rt0.c3, t0.c0, rt0.c3))))) FULL OUTER JOIN rt0 ON ((((((t0.c0)AND(t0.c0)))OR(rt0.c0)))>=(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END)) WHERE (((((CASE WHEN t0.c0 THEN rt0.c0 END)OR(rt0.c2 COLLATE BINARY)))AND(LIKELIHOOD(DISTINCT rt0.c3, 0.6754441016809861)))) ORDER BY x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN t0.c0 THEN rt0.c0 END)OR(rt0.c2 COLLATE BINARY)))AND(LIKELIHOOD(DISTINCT rt0.c3, 0.6754441016809861)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN t1 ON (((((rt0.c3 IN ()))OR((rt0.c3 IN (x'e739', rt0.c2)))))AND((((NULL, rt0.c2, rt0.c2)) NOT BETWEEN ((x'c86b', rt0.c1, t0.c0)) AND ((rt0.c3, t0.c0, rt0.c3))))) FULL OUTER JOIN rt0 ON ((((((t0.c0)AND(t0.c0)))OR(rt0.c0)))>=(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END)) ORDER BY x'' DESC  NULLS FIRST);
SELECT * FROM t0 FULL OUTER JOIN t1 ON (((((rt0.c3 IN ()))OR((rt0.c3 IN (x'e739', rt0.c2)))))AND((((NULL, rt0.c2, rt0.c2)) NOT BETWEEN ((x'c86b', rt0.c1, t0.c0)) AND ((rt0.c3, t0.c0, rt0.c3))))) FULL OUTER JOIN rt0 ON ((((((t0.c0)AND(t0.c0)))OR(rt0.c0)))>=(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END)) WHERE (((((CASE WHEN t0.c0 THEN rt0.c0 END)OR(rt0.c2 COLLATE BINARY)))AND(LIKELIHOOD(DISTINCT rt0.c3, 0.6754441016809861)))) ORDER BY x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN t0.c0 THEN rt0.c0 END)OR(rt0.c2 COLLATE BINARY)))AND(LIKELIHOOD(DISTINCT rt0.c3, 0.6754441016809861)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN t1 ON (((((rt0.c3 IN ()))OR((rt0.c3 IN (x'e739', rt0.c2)))))AND((((NULL, rt0.c2, rt0.c2)) NOT BETWEEN ((x'c86b', rt0.c1, t0.c0)) AND ((rt0.c3, t0.c0, rt0.c3))))) FULL OUTER JOIN rt0 ON ((((((t0.c0)AND(t0.c0)))OR(rt0.c0)))>=(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END)) ORDER BY x'' DESC  NULLS FIRST);
SELECT * FROM vt0, t0, rt0, t1 WHERE (((rt0.c1)IS NOT(t1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c1)IS NOT(t1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, rt0, t1);
SELECT * FROM vt0, t0, rt0, t1 WHERE (((rt0.c1)IS NOT(t1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c1)IS NOT(t1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, rt0, t1);
SELECT * FROM vt0, t0, rt0, t1 WHERE (((rt0.c1)IS NOT(t1.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE (CASE rt0.c1  WHEN NULLIF(rt0.c0, rt0.c3) THEN ((rt0.c0) BETWEEN (rt0.c0) AND (t1.c0)) ELSE ((rt0.c2) BETWEEN (rt0.c2) AND (t1.c0)) END) ORDER BY '';
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1  WHEN NULLIF(rt0.c0, rt0.c3) THEN ((rt0.c0) BETWEEN (rt0.c0) AND (t1.c0)) ELSE ((rt0.c2) BETWEEN (rt0.c2) AND (t1.c0)) END) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY '');
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE (CASE rt0.c1  WHEN NULLIF(rt0.c0, rt0.c3) THEN ((rt0.c0) BETWEEN (rt0.c0) AND (t1.c0)) ELSE ((rt0.c2) BETWEEN (rt0.c2) AND (t1.c0)) END) ORDER BY '';
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1  WHEN NULLIF(rt0.c0, rt0.c3) THEN ((rt0.c0) BETWEEN (rt0.c0) AND (t1.c0)) ELSE ((rt0.c2) BETWEEN (rt0.c2) AND (t1.c0)) END) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY '');
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE (CASE rt0.c1  WHEN NULLIF(rt0.c0, rt0.c3) THEN ((rt0.c0) BETWEEN (rt0.c0) AND (t1.c0)) ELSE ((rt0.c2) BETWEEN (rt0.c2) AND (t1.c0)) END) ORDER BY '';
SELECT * FROM t1 FULL OUTER JOIN rt0 ON ((LIKELIHOOD(rt0.c3, 0.26307360828295645)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND (x'')) INNER JOIN vt0 ON (NOT (rt0.c1)) WHERE ((((rt0.c1, rt0.c0, vt0.c0)) NOT BETWEEN ((((((rt0.c2)AND(rt0.c0)))OR('d')), ABS(DISTINCT vt0.c0), CAST(vt0.c0 AS REAL))) AND ((CAST(t1.c0 AS BLOB), rt0.c3, CASE WHEN rt0.c3 THEN t1.c0 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c0, vt0.c0)) NOT BETWEEN ((((((rt0.c2)AND(rt0.c0)))OR('d')), ABS(DISTINCT vt0.c0), CAST(vt0.c0 AS REAL))) AND ((CAST(t1.c0 AS BLOB), rt0.c3, CASE WHEN rt0.c3 THEN t1.c0 END)))) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON ((LIKELIHOOD(rt0.c3, 0.26307360828295645)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND (x'')) INNER JOIN vt0 ON (NOT (rt0.c1)));
SELECT * FROM t1 FULL OUTER JOIN rt0 ON ((LIKELIHOOD(rt0.c3, 0.26307360828295645)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND (x'')) INNER JOIN vt0 ON (NOT (rt0.c1)) WHERE ((((rt0.c1, rt0.c0, vt0.c0)) NOT BETWEEN ((((((rt0.c2)AND(rt0.c0)))OR('d')), ABS(DISTINCT vt0.c0), CAST(vt0.c0 AS REAL))) AND ((CAST(t1.c0 AS BLOB), rt0.c3, CASE WHEN rt0.c3 THEN t1.c0 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c0, vt0.c0)) NOT BETWEEN ((((((rt0.c2)AND(rt0.c0)))OR('d')), ABS(DISTINCT vt0.c0), CAST(vt0.c0 AS REAL))) AND ((CAST(t1.c0 AS BLOB), rt0.c3, CASE WHEN rt0.c3 THEN t1.c0 END)))) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON ((LIKELIHOOD(rt0.c3, 0.26307360828295645)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND (x'')) INNER JOIN vt0 ON (NOT (rt0.c1)));
SELECT * FROM t0, rt0, vt0 WHERE (json_array((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c0))), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))) ORDER BY ((((t0.c0) BETWEEN (rt0.c3) AND (rt0.c3))) BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3))) AND (rt0.c2)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_array((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c0))), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((((t0.c0) BETWEEN (rt0.c3) AND (rt0.c3))) BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3))) AND (rt0.c2)) ASC  NULLS FIRST);
SELECT * FROM t0, rt0, vt0 WHERE (json_array((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c0))), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))) ORDER BY ((((t0.c0) BETWEEN (rt0.c3) AND (rt0.c3))) BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3))) AND (rt0.c2)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_array((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c0))), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((((t0.c0) BETWEEN (rt0.c3) AND (rt0.c3))) BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3))) AND (rt0.c2)) ASC  NULLS FIRST);
SELECT * FROM t0, rt0, vt0 WHERE (json_array((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c0))), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))) ORDER BY ((((t0.c0) BETWEEN (rt0.c3) AND (rt0.c3))) BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3))) AND (rt0.c2)) ASC  NULLS FIRST;
SELECT ALL * FROM t1, vt0 WHERE (LIKELY(DISTINCT UNLIKELY(DISTINCT t1.c0))) ORDER BY (((- (NULL))) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (NULLIF(DISTINCT vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT UNLIKELY(DISTINCT t1.c0))) IS TRUE)  as count FROM t1, vt0 ORDER BY (((- (NULL))) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (NULLIF(DISTINCT vt0.c0, vt0.c0))));
SELECT ALL * FROM t1, vt0 WHERE (LIKELY(DISTINCT UNLIKELY(DISTINCT t1.c0))) ORDER BY (((- (NULL))) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (NULLIF(DISTINCT vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT UNLIKELY(DISTINCT t1.c0))) IS TRUE)  as count FROM t1, vt0 ORDER BY (((- (NULL))) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (NULLIF(DISTINCT vt0.c0, vt0.c0))));
SELECT ALL * FROM t1, vt0 WHERE (LIKELY(DISTINCT UNLIKELY(DISTINCT t1.c0))) ORDER BY (((- (NULL))) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (NULLIF(DISTINCT vt0.c0, vt0.c0)));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((UNLIKELY(t0.c0)) IS TRUE) WHERE (vt0.c0) ORDER BY '';
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((UNLIKELY(t0.c0)) IS TRUE) ORDER BY '');
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((UNLIKELY(t0.c0)) IS TRUE) WHERE (vt0.c0) ORDER BY '';
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((UNLIKELY(t0.c0)) IS TRUE) ORDER BY '');
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((UNLIKELY(t0.c0)) IS TRUE) WHERE (vt0.c0) ORDER BY '';
SELECT * FROM t0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)IS(vt0.c0)))) AND ((t0.c0 COLLATE NOCASE)))) ORDER BY ((((t0.c0) BETWEEN (-9223372036854775808) AND (vt0.c0))) BETWEEN (((((vt0.c0)OR(t0.c0)))OR(t0.c0))) AND (((vt0.c0)<<(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((vt0.c0)IS(vt0.c0)))) AND ((t0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c0) BETWEEN (-9223372036854775808) AND (vt0.c0))) BETWEEN (((((vt0.c0)OR(t0.c0)))OR(t0.c0))) AND (((vt0.c0)<<(t0.c0))))  NULLS LAST);
SELECT * FROM t0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)IS(vt0.c0)))) AND ((t0.c0 COLLATE NOCASE)))) ORDER BY ((((t0.c0) BETWEEN (-9223372036854775808) AND (vt0.c0))) BETWEEN (((((vt0.c0)OR(t0.c0)))OR(t0.c0))) AND (((vt0.c0)<<(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((vt0.c0)IS(vt0.c0)))) AND ((t0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c0) BETWEEN (-9223372036854775808) AND (vt0.c0))) BETWEEN (((((vt0.c0)OR(t0.c0)))OR(t0.c0))) AND (((vt0.c0)<<(t0.c0))))  NULLS LAST);
SELECT * FROM t0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)IS(vt0.c0)))) AND ((t0.c0 COLLATE NOCASE)))) ORDER BY ((((t0.c0) BETWEEN (-9223372036854775808) AND (vt0.c0))) BETWEEN (((((vt0.c0)OR(t0.c0)))OR(t0.c0))) AND (((vt0.c0)<<(t0.c0))))  NULLS LAST;
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON ((((vt0.c0) ISNULL))IS NOT(((t0.c0) NOT NULL))) FULL OUTER JOIN vt0 ON ((((rt0.c2) IS FALSE))|('1069020989')) FULL OUTER JOIN t1 ON CASE t0.c0  WHEN t1.c0 THEN rt0.c3 WHEN t1.c0 THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 ELSE t0.c0 END COLLATE NOCASE WHERE (CAST(x'ab06ba5a' AS BLOB)) ORDER BY ((((((rt0.c2)=(rt0.c2)))AND(((rt0.c0)||('')))))AND(((rt0.c1)OR(rt0.c3))))  NULLS FIRST, CASE (~ (rt0.c2))  WHEN '604318142' THEN ((rt0.c1)-(t1.c0)) WHEN CASE WHEN rt0.c0 THEN rt0.c3 END THEN ((((NULL)OR(t0.c0)))AND(t0.c0)) WHEN ((rt0.c0)|(t1.c0)) THEN TRIM(DISTINCT t1.c0) ELSE json_valid(t0.c0) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'ab06ba5a' AS BLOB)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((((vt0.c0) ISNULL))IS NOT(((t0.c0) NOT NULL))) FULL OUTER JOIN vt0 ON ((((rt0.c2) IS FALSE))|('1069020989')) FULL OUTER JOIN t1 ON CASE t0.c0  WHEN t1.c0 THEN rt0.c3 WHEN t1.c0 THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 ELSE t0.c0 END COLLATE NOCASE ORDER BY ((((((rt0.c2)==(rt0.c2)))AND(((rt0.c0)||('')))))AND(((rt0.c1)OR(rt0.c3))))  NULLS FIRST, CASE (~ (rt0.c2))  WHEN '604318142' THEN ((rt0.c1)-(t1.c0)) WHEN CASE WHEN rt0.c0 THEN rt0.c3 END THEN ((((NULL)OR(t0.c0)))AND(t0.c0)) WHEN ((rt0.c0)|(t1.c0)) THEN TRIM(DISTINCT t1.c0) ELSE json_valid(t0.c0) END  NULLS LAST);
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON ((((vt0.c0) ISNULL))IS NOT(((t0.c0) NOT NULL))) FULL OUTER JOIN vt0 ON ((((rt0.c2) IS FALSE))|('1069020989')) FULL OUTER JOIN t1 ON CASE t0.c0  WHEN t1.c0 THEN rt0.c3 WHEN t1.c0 THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 ELSE t0.c0 END COLLATE NOCASE WHERE (CAST(x'ab06ba5a' AS BLOB)) ORDER BY ((((((rt0.c2)=(rt0.c2)))AND(((rt0.c0)||('')))))AND(((rt0.c1)OR(rt0.c3))))  NULLS FIRST, CASE (~ (rt0.c2))  WHEN '604318142' THEN ((rt0.c1)-(t1.c0)) WHEN CASE WHEN rt0.c0 THEN rt0.c3 END THEN ((((NULL)OR(t0.c0)))AND(t0.c0)) WHEN ((rt0.c0)|(t1.c0)) THEN TRIM(DISTINCT t1.c0) ELSE json_valid(t0.c0) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'ab06ba5a' AS BLOB)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((((vt0.c0) ISNULL))IS NOT(((t0.c0) NOT NULL))) FULL OUTER JOIN vt0 ON ((((rt0.c2) IS FALSE))|('1069020989')) FULL OUTER JOIN t1 ON CASE t0.c0  WHEN t1.c0 THEN rt0.c3 WHEN t1.c0 THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 ELSE t0.c0 END COLLATE NOCASE ORDER BY ((((((rt0.c2)==(rt0.c2)))AND(((rt0.c0)||('')))))AND(((rt0.c1)OR(rt0.c3))))  NULLS FIRST, CASE (~ (rt0.c2))  WHEN '604318142' THEN ((rt0.c1)-(t1.c0)) WHEN CASE WHEN rt0.c0 THEN rt0.c3 END THEN ((((NULL)OR(t0.c0)))AND(t0.c0)) WHEN ((rt0.c0)|(t1.c0)) THEN TRIM(DISTINCT t1.c0) ELSE json_valid(t0.c0) END  NULLS LAST);
SELECT COUNT(*) FROM rt0 CROSS JOIN t1 ON CAST(t0.c0 AS NUMERIC) COLLATE RTRIM LEFT OUTER JOIN t0 ON load_extension(rt0.c2 COLLATE RTRIM, rt0.c1) INNER JOIN vt0 ON ((rt0.c2)%(t0.c0)) COLLATE NOCASE WHERE ((((rt0.c1)) BETWEEN (((((t1.c0))>=((rt0.c3))))) AND ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN (((((t1.c0))>=((rt0.c3))))) AND ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c0)))))) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON CAST(t0.c0 AS NUMERIC) COLLATE RTRIM LEFT OUTER JOIN t0 ON load_extension(rt0.c2 COLLATE RTRIM, rt0.c1) INNER JOIN vt0 ON ((rt0.c2)%(t0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 CROSS JOIN t1 ON CAST(t0.c0 AS NUMERIC) COLLATE RTRIM LEFT OUTER JOIN t0 ON load_extension(rt0.c2 COLLATE RTRIM, rt0.c1) INNER JOIN vt0 ON ((rt0.c2)%(t0.c0)) COLLATE NOCASE WHERE ((((rt0.c1)) BETWEEN (((((t1.c0))>=((rt0.c3))))) AND ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN (((((t1.c0))>=((rt0.c3))))) AND ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c0)))))) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON CAST(t0.c0 AS NUMERIC) COLLATE RTRIM LEFT OUTER JOIN t0 ON load_extension(rt0.c2 COLLATE RTRIM, rt0.c1) INNER JOIN vt0 ON ((rt0.c2)%(t0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 CROSS JOIN t1 ON CAST(t0.c0 AS NUMERIC) COLLATE RTRIM LEFT OUTER JOIN t0 ON load_extension(rt0.c2 COLLATE RTRIM, rt0.c1) INNER JOIN vt0 ON ((rt0.c2)%(t0.c0)) COLLATE NOCASE WHERE ((((rt0.c1)) BETWEEN (((((t1.c0))>=((rt0.c3))))) AND ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c0))))));
SELECT * FROM rt0 WHERE (TYPEOF((+ (rt0.c2)))) ORDER BY load_extension(((rt0.c1)AND(rt0.c3)), ((rt0.c0)GLOB(rt0.c2))) ASC, ((TRIM(rt0.c3))>>(((rt0.c2)=(rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((+ (rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY load_extension(((rt0.c1)AND(rt0.c3)), ((rt0.c0)GLOB(rt0.c2))) ASC, ((TRIM(rt0.c3))>>(((rt0.c2)==(rt0.c0)))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (TYPEOF((+ (rt0.c2)))) ORDER BY load_extension(((rt0.c1)AND(rt0.c3)), ((rt0.c0)GLOB(rt0.c2))) ASC, ((TRIM(rt0.c3))>>(((rt0.c2)=(rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((+ (rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY load_extension(((rt0.c1)AND(rt0.c3)), ((rt0.c0)GLOB(rt0.c2))) ASC, ((TRIM(rt0.c3))>>(((rt0.c2)==(rt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CASE rt0.c2 COLLATE BINARY  WHEN ((rt0.c1) ISNULL) THEN ((0.5231045957968578) ISNULL) WHEN ((rt0.c0) IS FALSE) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))) WHEN rt0.c3 THEN CASE x''  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c1)>=(rt0.c1)) WHEN ((rt0.c0) NOT NULL) THEN ((rt0.c2)%(rt0.c3)) WHEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 END THEN ((((((((((((rt0.c3)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c3)) WHEN ((rt0.c3) BETWEEN (rt0.c3) AND (x'')) THEN CAST(rt0.c2 AS REAL) ELSE ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c2 COLLATE BINARY  WHEN ((rt0.c1) ISNULL) THEN ((0.5231045957968578) ISNULL) WHEN ((rt0.c0) IS FALSE) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))) WHEN rt0.c3 THEN CASE x''  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c1)>=(rt0.c1)) WHEN ((rt0.c0) NOT NULL) THEN ((rt0.c2)%(rt0.c3)) WHEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 END THEN ((((((((((((rt0.c3)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c3)) WHEN ((rt0.c3) BETWEEN (rt0.c3) AND (x'')) THEN CAST(rt0.c2 AS REAL) ELSE ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE rt0.c2 COLLATE BINARY  WHEN ((rt0.c1) ISNULL) THEN ((0.5231045957968578) ISNULL) WHEN ((rt0.c0) IS FALSE) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))) WHEN rt0.c3 THEN CASE x''  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c1)>=(rt0.c1)) WHEN ((rt0.c0) NOT NULL) THEN ((rt0.c2)%(rt0.c3)) WHEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 END THEN ((((((((((((rt0.c3)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c3)) WHEN ((rt0.c3) BETWEEN (rt0.c3) AND (x'')) THEN CAST(rt0.c2 AS REAL) ELSE ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c2 COLLATE BINARY  WHEN ((rt0.c1) ISNULL) THEN ((0.5231045957968578) ISNULL) WHEN ((rt0.c0) IS FALSE) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))) WHEN rt0.c3 THEN CASE x''  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c1)>=(rt0.c1)) WHEN ((rt0.c0) NOT NULL) THEN ((rt0.c2)%(rt0.c3)) WHEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 END THEN ((((((((((((rt0.c3)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c3)) WHEN ((rt0.c3) BETWEEN (rt0.c3) AND (x'')) THEN CAST(rt0.c2 AS REAL) ELSE ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE rt0.c2 COLLATE BINARY  WHEN ((rt0.c1) ISNULL) THEN ((0.5231045957968578) ISNULL) WHEN ((rt0.c0) IS FALSE) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))) WHEN rt0.c3 THEN CASE x''  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c1)>=(rt0.c1)) WHEN ((rt0.c0) NOT NULL) THEN ((rt0.c2)%(rt0.c3)) WHEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 END THEN ((((((((((((rt0.c3)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c3)) WHEN ((rt0.c3) BETWEEN (rt0.c3) AND (x'')) THEN CAST(rt0.c2 AS REAL) ELSE ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)) END);
SELECT * FROM t0, rt0, t1, vt0 WHERE (((((-1487822176)GLOB(rt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((-1487822176)GLOB(rt0.c1))) NOTNULL)) IS TRUE)  as count FROM t0, rt0, t1, vt0);
SELECT * FROM t0, rt0, t1, vt0 WHERE (((((-1487822176)GLOB(rt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((-1487822176)GLOB(rt0.c1))) NOTNULL)) IS TRUE)  as count FROM t0, rt0, t1, vt0);
SELECT * FROM t0, rt0, t1, vt0 WHERE (((((-1487822176)GLOB(rt0.c1))) NOTNULL));
SELECT * FROM t0, t1, vt0 WHERE (((LIKELIHOOD(t1.c0, 0.26303617828337467)) BETWEEN (t1.c0) AND ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(t1.c0, 0.26303617828337467)) BETWEEN (t1.c0) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM t0, t1, vt0);
SELECT * FROM t0, t1, vt0 WHERE (((LIKELIHOOD(t1.c0, 0.26303617828337467)) BETWEEN (t1.c0) AND ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(t1.c0, 0.26303617828337467)) BETWEEN (t1.c0) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM t0, t1, vt0);
SELECT * FROM t0, t1, vt0 WHERE (((LIKELIHOOD(t1.c0, 0.26303617828337467)) BETWEEN (t1.c0) AND ((vt0.c0 IN ()))));
SELECT * FROM t1, t0, vt0 WHERE (RTRIM(((vt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(((vt0.c0) NOTNULL))) IS TRUE)  as count FROM t1, t0, vt0);
SELECT * FROM t1, t0, vt0 WHERE (RTRIM(((vt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(((vt0.c0) NOTNULL))) IS TRUE)  as count FROM t1, t0, vt0);
SELECT * FROM t1, t0, vt0 WHERE (RTRIM(((vt0.c0) NOTNULL)));
SELECT ALL COUNT(*) FROM t0, vt0, t1, rt0 WHERE ((((rt0.c3, rt0.c0, rt0.c3)) NOT BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t1.c0 ELSE t0.c0 END, (~ (t1.c0)), GLOB(NULL, rt0.c3))) AND (((~ (rt0.c1)), CASE WHEN rt0.c1 THEN vt0.c0 END, rt0.c0)))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c3, rt0.c0, rt0.c3)) NOT BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t1.c0 ELSE t0.c0 END, (~ (t1.c0)), GLOB(NULL, rt0.c3))) AND (((~ (rt0.c1)), CASE WHEN rt0.c1 THEN vt0.c0 END, rt0.c0)))) IS TRUE)  as count FROM t0, vt0, t1, rt0 ORDER BY vt0.c0 DESC);
SELECT ALL COUNT(*) FROM t0, vt0, t1, rt0 WHERE ((((rt0.c3, rt0.c0, rt0.c3)) NOT BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t1.c0 ELSE t0.c0 END, (~ (t1.c0)), GLOB(NULL, rt0.c3))) AND (((~ (rt0.c1)), CASE WHEN rt0.c1 THEN vt0.c0 END, rt0.c0)))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c3, rt0.c0, rt0.c3)) NOT BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t1.c0 ELSE t0.c0 END, (~ (t1.c0)), GLOB(NULL, rt0.c3))) AND (((~ (rt0.c1)), CASE WHEN rt0.c1 THEN vt0.c0 END, rt0.c0)))) IS TRUE)  as count FROM t0, vt0, t1, rt0 ORDER BY vt0.c0 DESC);
SELECT ALL COUNT(*) FROM t0, vt0, t1, rt0 WHERE ((((rt0.c3, rt0.c0, rt0.c3)) NOT BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t1.c0 ELSE t0.c0 END, (~ (t1.c0)), GLOB(NULL, rt0.c3))) AND (((~ (rt0.c1)), CASE WHEN rt0.c1 THEN vt0.c0 END, rt0.c0)))) ORDER BY vt0.c0 DESC;
SELECT * FROM rt0, t1 WHERE ((- (((rt0.c1) NOT BETWEEN (rt0.c3) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c1) NOT BETWEEN (rt0.c3) AND (t1.c0))))) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE ((- (((rt0.c1) NOT BETWEEN (rt0.c3) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c1) NOT BETWEEN (rt0.c3) AND (t1.c0))))) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE ((- (((rt0.c1) NOT BETWEEN (rt0.c3) AND (t1.c0)))));
SELECT COUNT(*) FROM t0, t1 INNER JOIN rt0 ON NULL WHERE (NULL) ORDER BY rt0.c3 ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, t1 INNER JOIN rt0 ON NULL ORDER BY rt0.c3 ASC);
SELECT COUNT(*) FROM t0, t1 INNER JOIN rt0 ON NULL WHERE (NULL) ORDER BY rt0.c3 ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, t1 INNER JOIN rt0 ON NULL ORDER BY rt0.c3 ASC);
SELECT COUNT(*) FROM t0, t1 INNER JOIN rt0 ON NULL WHERE (NULL) ORDER BY rt0.c3 ASC;
SELECT ALL * FROM t1, rt0 WHERE (((((((0.293248322073569)OR(rt0.c1)))OR(t1.c0)))||((NOT (rt0.c1))))) ORDER BY ((((rt0.c3 IN (NULL))))<((((rt0.c2) ISNULL)))) DESC  NULLS FIRST, (((0Xffffffffa9171cc7 IN ()))IS NOT((~ (rt0.c3))))  NULLS FIRST, ((CASE rt0.c3  WHEN t1.c0 THEN rt0.c1 ELSE rt0.c0 END) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c2) AND ('h*'))) AND (CAST(rt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((((((((0.293248322073569)OR(rt0.c1)))OR(t1.c0)))||((NOT (rt0.c1))))) IS TRUE)  as count FROM t1, rt0 ORDER BY ((((rt0.c3 IN (NULL))))<((((rt0.c2) ISNULL)))) DESC  NULLS FIRST, (((0xffffffffa9171cc7 IN ()))IS NOT((~ (rt0.c3))))  NULLS FIRST, ((CASE rt0.c3  WHEN t1.c0 THEN rt0.c1 ELSE rt0.c0 END) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c2) AND ('h*'))) AND (CAST(rt0.c0 AS TEXT))));
SELECT ALL * FROM t1, rt0 WHERE (((((((0.293248322073569)OR(rt0.c1)))OR(t1.c0)))||((NOT (rt0.c1))))) ORDER BY ((((rt0.c3 IN (NULL))))<((((rt0.c2) ISNULL)))) DESC  NULLS FIRST, (((0Xffffffffa9171cc7 IN ()))IS NOT((~ (rt0.c3))))  NULLS FIRST, ((CASE rt0.c3  WHEN t1.c0 THEN rt0.c1 ELSE rt0.c0 END) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c2) AND ('h*'))) AND (CAST(rt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((((((((0.293248322073569)OR(rt0.c1)))OR(t1.c0)))||((NOT (rt0.c1))))) IS TRUE)  as count FROM t1, rt0 ORDER BY ((((rt0.c3 IN (NULL))))<((((rt0.c2) ISNULL)))) DESC  NULLS FIRST, (((0xffffffffa9171cc7 IN ()))IS NOT((~ (rt0.c3))))  NULLS FIRST, ((CASE rt0.c3  WHEN t1.c0 THEN rt0.c1 ELSE rt0.c0 END) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c2) AND ('h*'))) AND (CAST(rt0.c0 AS TEXT))));
SELECT ALL * FROM t1, rt0 WHERE (((((((0.293248322073569)OR(rt0.c1)))OR(t1.c0)))||((NOT (rt0.c1))))) ORDER BY ((((rt0.c3 IN (NULL))))<((((rt0.c2) ISNULL)))) DESC  NULLS FIRST, (((0Xffffffffa9171cc7 IN ()))IS NOT((~ (rt0.c3))))  NULLS FIRST, ((CASE rt0.c3  WHEN t1.c0 THEN rt0.c1 ELSE rt0.c0 END) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c2) AND ('h*'))) AND (CAST(rt0.c0 AS TEXT)));
SELECT ALL COUNT(*) FROM t0, vt0, t1, rt0 WHERE (UPPER(LAST_INSERT_ROWID())) ORDER BY (((~ (rt0.c0)))*(CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ((UPPER(LAST_INSERT_ROWID())) IS TRUE)  as count FROM t0, vt0, t1, rt0 ORDER BY (((~ (rt0.c0)))*(CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END)) ASC);
SELECT ALL COUNT(*) FROM t0, vt0, t1, rt0 WHERE (UPPER(LAST_INSERT_ROWID())) ORDER BY (((~ (rt0.c0)))*(CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ((UPPER(LAST_INSERT_ROWID())) IS TRUE)  as count FROM t0, vt0, t1, rt0 ORDER BY (((~ (rt0.c0)))*(CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END)) ASC);
SELECT ALL COUNT(*) FROM t0, vt0, t1, rt0 WHERE (UPPER(LAST_INSERT_ROWID())) ORDER BY (((~ (rt0.c0)))*(CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END)) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (CAST(rt0.c3 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((- (CAST(rt0.c3 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (CAST(rt0.c3 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((- (CAST(rt0.c3 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (CAST(rt0.c3 AS BLOB))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON ((((((rt0.c3)GLOB(rt0.c3)))AND(((rt0.c3) NOT BETWEEN (t0.c0) AND (rt0.c3)))))AND((~ (rt0.c1)))) INNER JOIN t1 ON (~ (((rt0.c2)>(vt0.c0)))) RIGHT OUTER JOIN rt0 ON CAST(((rt0.c2) NOTNULL) AS TEXT) WHERE (LIKELIHOOD(DISTINCT t0.c0, 0.4721422525354433) COLLATE RTRIM COLLATE BINARY) ORDER BY (((((rt0.c1, t0.c0, t0.c0))>((vt0.c0, 0.7036958972897784, rt0.c3)))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT t0.c0, 0.4721422525354433) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((((rt0.c3)GLOB(rt0.c3)))AND(((rt0.c3) NOT BETWEEN (t0.c0) AND (rt0.c3)))))AND((~ (rt0.c1)))) INNER JOIN t1 ON (~ (((rt0.c2)>(vt0.c0)))) RIGHT OUTER JOIN rt0 ON CAST(((rt0.c2) NOTNULL) AS TEXT) ORDER BY (((((rt0.c1, t0.c0, t0.c0))>((vt0.c0, 0.7036958972897784, rt0.c3)))) NOTNULL) DESC);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON ((((((rt0.c3)GLOB(rt0.c3)))AND(((rt0.c3) NOT BETWEEN (t0.c0) AND (rt0.c3)))))AND((~ (rt0.c1)))) INNER JOIN t1 ON (~ (((rt0.c2)>(vt0.c0)))) RIGHT OUTER JOIN rt0 ON CAST(((rt0.c2) NOTNULL) AS TEXT) WHERE (LIKELIHOOD(DISTINCT t0.c0, 0.4721422525354433) COLLATE RTRIM COLLATE BINARY) ORDER BY (((((rt0.c1, t0.c0, t0.c0))>((vt0.c0, 0.7036958972897784, rt0.c3)))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT t0.c0, 0.4721422525354433) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((((rt0.c3)GLOB(rt0.c3)))AND(((rt0.c3) NOT BETWEEN (t0.c0) AND (rt0.c3)))))AND((~ (rt0.c1)))) INNER JOIN t1 ON (~ (((rt0.c2)>(vt0.c0)))) RIGHT OUTER JOIN rt0 ON CAST(((rt0.c2) NOTNULL) AS TEXT) ORDER BY (((((rt0.c1, t0.c0, t0.c0))>((vt0.c0, 0.7036958972897784, rt0.c3)))) NOTNULL) DESC);
SELECT ALL * FROM t1, t0, rt0, vt0 WHERE (vt0.c0 COLLATE RTRIM) ORDER BY (LOWER(rt0.c3) IN ((((rt0.c1)) BETWEEN (('9223372036854775807')) AND ((rt0.c3))), ((rt0.c2)OR(rt0.c1)))), ((rt0.c0)AND(rt0.c1)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM t1, t0, rt0, vt0 ORDER BY (LOWER(rt0.c3) IN ((((rt0.c1)) BETWEEN (('9223372036854775807')) AND ((rt0.c3))), ((rt0.c2)OR(rt0.c1)))), ((rt0.c0)AND(rt0.c1)) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM t1, t0, rt0, vt0 WHERE (vt0.c0 COLLATE RTRIM) ORDER BY (LOWER(rt0.c3) IN ((((rt0.c1)) BETWEEN (('9223372036854775807')) AND ((rt0.c3))), ((rt0.c2)OR(rt0.c1)))), ((rt0.c0)AND(rt0.c1)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM t1, t0, rt0, vt0 ORDER BY (LOWER(rt0.c3) IN ((((rt0.c1)) BETWEEN (('9223372036854775807')) AND ((rt0.c3))), ((rt0.c2)OR(rt0.c1)))), ((rt0.c0)AND(rt0.c1)) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM t1, t0, rt0, vt0 WHERE (vt0.c0 COLLATE RTRIM) ORDER BY (LOWER(rt0.c3) IN ((((rt0.c1)) BETWEEN (('9223372036854775807')) AND ((rt0.c3))), ((rt0.c2)OR(rt0.c1)))), ((rt0.c0)AND(rt0.c1)) COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM t1, t0 WHERE (((t0.c0 COLLATE RTRIM)>=((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE RTRIM)>=((t0.c0 IN ())))) IS TRUE)  as count FROM t1, t0);
SELECT ALL * FROM t1, t0 WHERE (((t0.c0 COLLATE RTRIM)>=((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE RTRIM)>=((t0.c0 IN ())))) IS TRUE)  as count FROM t1, t0);
SELECT ALL * FROM t1, t0 WHERE (((t0.c0 COLLATE RTRIM)>=((t0.c0 IN ()))));
SELECT * FROM vt0 WHERE (((((vt0.c0)OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM t0, t1, vt0 CROSS JOIN rt0 ON ((CHANGES()) IS FALSE) WHERE ((rt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ())) IS TRUE)  as count FROM t0, t1, vt0 CROSS JOIN rt0 ON ((CHANGES()) IS FALSE));
SELECT ALL COUNT(*) FROM t0, t1, vt0 CROSS JOIN rt0 ON ((CHANGES()) IS FALSE) WHERE ((rt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ())) IS TRUE)  as count FROM t0, t1, vt0 CROSS JOIN rt0 ON ((CHANGES()) IS FALSE));
SELECT ALL COUNT(*) FROM t0, t1, vt0 CROSS JOIN rt0 ON ((CHANGES()) IS FALSE) WHERE ((rt0.c1 IN ()));
SELECT * FROM rt0 WHERE ((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2)), ((rt0.c3)|(rt0.c1)), CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END))<((((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)), ((((rt0.c3)AND(0.21669809278368624)))AND(rt0.c3)), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 END))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2)), ((rt0.c3)|(rt0.c1)), CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END))<((((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)), ((((rt0.c3)AND(0.21669809278368624)))AND(rt0.c3)), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 END)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2)), ((rt0.c3)|(rt0.c1)), CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END))<((((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)), ((((rt0.c3)AND(0.21669809278368624)))AND(rt0.c3)), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 END))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2)), ((rt0.c3)|(rt0.c1)), CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END))<((((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)), ((((rt0.c3)AND(0.21669809278368624)))AND(rt0.c3)), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 END)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2)), ((rt0.c3)|(rt0.c1)), CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END))<((((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)), ((((rt0.c3)AND(0.21669809278368624)))AND(rt0.c3)), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 END))));
SELECT ALL * FROM t1, vt0, rt0 WHERE ((~ (CASE 'L'  WHEN t1.c0 THEN t1.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN '61875777' WHEN rt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE 'L'  WHEN t1.c0 THEN t1.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN '61875777' WHEN rt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT ALL * FROM t1, vt0, rt0 WHERE ((~ (CASE 'L'  WHEN t1.c0 THEN t1.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN '61875777' WHEN rt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE 'L'  WHEN t1.c0 THEN t1.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN '61875777' WHEN rt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT ALL * FROM t1, vt0, rt0 WHERE ((~ (CASE 'L'  WHEN t1.c0 THEN t1.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN '61875777' WHEN rt0.c0 THEN vt0.c0 END)));
SELECT * FROM t1, vt0 NOT INDEXED WHERE (((((((((x'')AND(NULLIF(t1.c0, t1.c0))))OR((- (t1.c0)))))OR(HEX(DISTINCT vt0.c0))))AND(CAST(vt0.c0 AS BLOB)))) ORDER BY (- ((~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((x'')AND(NULLIF(t1.c0, t1.c0))))OR((- (t1.c0)))))OR(HEX(DISTINCT vt0.c0))))AND(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM t1, vt0 ORDER BY (- ((~ (vt0.c0)))));
SELECT * FROM t1, vt0 NOT INDEXED WHERE (((((((((x'')AND(NULLIF(t1.c0, t1.c0))))OR((- (t1.c0)))))OR(HEX(DISTINCT vt0.c0))))AND(CAST(vt0.c0 AS BLOB)))) ORDER BY (- ((~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((x'')AND(NULLIF(t1.c0, t1.c0))))OR((- (t1.c0)))))OR(HEX(DISTINCT vt0.c0))))AND(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM t1, vt0 ORDER BY (- ((~ (vt0.c0)))));
SELECT * FROM t1, vt0 NOT INDEXED WHERE (((((((((x'')AND(NULLIF(t1.c0, t1.c0))))OR((- (t1.c0)))))OR(HEX(DISTINCT vt0.c0))))AND(CAST(vt0.c0 AS BLOB)))) ORDER BY (- ((~ (vt0.c0))));
SELECT * FROM vt0 WHERE (((((((vt0.c0)|(vt0.c0)))AND(vt0.c0)))OR((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)|(vt0.c0)))AND(vt0.c0)))OR((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((((vt0.c0)|(vt0.c0)))AND(vt0.c0)))OR((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)|(vt0.c0)))AND(vt0.c0)))OR((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((((vt0.c0)|(vt0.c0)))AND(vt0.c0)))OR((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE (CAST((vt0.c0 IN (rt0.c0)) AS INTEGER)) ORDER BY (((((rt0.c2)!=(rt0.c1))))=((rt0.c2 COLLATE RTRIM))), ((((rt0.c3)>=(rt0.c1)))IS((((rt0.c2))<=((NULL)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN (rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((rt0.c2)!=(rt0.c1))))==((rt0.c2 COLLATE RTRIM))), ((((rt0.c3)>=(rt0.c1)))IS((((rt0.c2))<=((NULL)))))  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (CAST((vt0.c0 IN (rt0.c0)) AS INTEGER)) ORDER BY (((((rt0.c2)!=(rt0.c1))))=((rt0.c2 COLLATE RTRIM))), ((((rt0.c3)>=(rt0.c1)))IS((((rt0.c2))<=((NULL)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN (rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((rt0.c2)!=(rt0.c1))))==((rt0.c2 COLLATE RTRIM))), ((((rt0.c3)>=(rt0.c1)))IS((((rt0.c2))<=((NULL)))))  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (CAST((vt0.c0 IN (rt0.c0)) AS INTEGER)) ORDER BY (((((rt0.c2)!=(rt0.c1))))=((rt0.c2 COLLATE RTRIM))), ((((rt0.c3)>=(rt0.c1)))IS((((rt0.c2))<=((NULL)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, t0, rt0 WHERE ((((- (rt0.c3)))OR(((rt0.c1)/(x'')))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c3)))OR(((rt0.c1)/(x''))))) IS TRUE)  as count FROM t1, t0, rt0);
SELECT ALL COUNT(*) FROM t1, t0, rt0 WHERE ((((- (rt0.c3)))OR(((rt0.c1)/(x'')))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c3)))OR(((rt0.c1)/(x''))))) IS TRUE)  as count FROM t1, t0, rt0);
SELECT ALL COUNT(*) FROM t1, t0, rt0 WHERE ((((- (rt0.c3)))OR(((rt0.c1)/(x'')))));
SELECT ALL * FROM vt0 INNER JOIN t0 ON ((((rt0.c1 IN ())))>(((((rt0.c2))=((rt0.c3)))))) LEFT OUTER JOIN rt0 ON CASE WHEN ((rt0.c1) NOTNULL) THEN -362913527 ELSE ABS(x'1f41') END WHERE ((+ (UPPER(DISTINCT rt0.c2)))) ORDER BY (CAST(t0.c0 AS NUMERIC) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (UPPER(DISTINCT rt0.c2)))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((((rt0.c1 IN ())))>(((((rt0.c2))==((rt0.c3)))))) LEFT OUTER JOIN rt0 ON CASE WHEN ((rt0.c1) NOTNULL) THEN -362913527 ELSE ABS(x'1f41') END ORDER BY (CAST(t0.c0 AS NUMERIC) IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 INNER JOIN t0 ON ((((rt0.c1 IN ())))>(((((rt0.c2))=((rt0.c3)))))) LEFT OUTER JOIN rt0 ON CASE WHEN ((rt0.c1) NOTNULL) THEN -362913527 ELSE ABS(x'1f41') END WHERE ((+ (UPPER(DISTINCT rt0.c2)))) ORDER BY (CAST(t0.c0 AS NUMERIC) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (UPPER(DISTINCT rt0.c2)))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((((rt0.c1 IN ())))>(((((rt0.c2))==((rt0.c3)))))) LEFT OUTER JOIN rt0 ON CASE WHEN ((rt0.c1) NOTNULL) THEN -362913527 ELSE ABS(x'1f41') END ORDER BY (CAST(t0.c0 AS NUMERIC) IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 INNER JOIN t0 ON ((((rt0.c1 IN ())))>(((((rt0.c2))=((rt0.c3)))))) LEFT OUTER JOIN rt0 ON CASE WHEN ((rt0.c1) NOTNULL) THEN -362913527 ELSE ABS(x'1f41') END WHERE ((+ (UPPER(DISTINCT rt0.c2)))) ORDER BY (CAST(t0.c0 AS NUMERIC) IN ()) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t1, t0 WHERE (CASE WHEN t1.c0 THEN t1.c0 COLLATE RTRIM WHEN ((x'') BETWEEN (t0.c0) AND (t0.c0)) THEN (((vt0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t1.c0, vt0.c0)) AND ((vt0.c0, t0.c0, t1.c0))) WHEN NULLIF(t0.c0, t0.c0) THEN 0.8233117476194031 WHEN CASE WHEN t0.c0 THEN t0.c0 END THEN t1.c0 WHEN LIKELIHOOD(t1.c0, 0.284534909605751) THEN ((vt0.c0)IS NOT(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t1.c0 THEN t1.c0 COLLATE RTRIM WHEN ((x'') BETWEEN (t0.c0) AND (t0.c0)) THEN (((vt0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t1.c0, vt0.c0)) AND ((vt0.c0, t0.c0, t1.c0))) WHEN NULLIF(t0.c0, t0.c0) THEN 0.8233117476194031 WHEN CASE WHEN t0.c0 THEN t0.c0 END THEN t1.c0 WHEN LIKELIHOOD(t1.c0, 0.284534909605751) THEN ((vt0.c0)IS NOT(t0.c0)) END) IS TRUE)  as count FROM vt0, t1, t0);
SELECT COUNT(*) FROM vt0, t1, t0 WHERE (CASE WHEN t1.c0 THEN t1.c0 COLLATE RTRIM WHEN ((x'') BETWEEN (t0.c0) AND (t0.c0)) THEN (((vt0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t1.c0, vt0.c0)) AND ((vt0.c0, t0.c0, t1.c0))) WHEN NULLIF(t0.c0, t0.c0) THEN 0.8233117476194031 WHEN CASE WHEN t0.c0 THEN t0.c0 END THEN t1.c0 WHEN LIKELIHOOD(t1.c0, 0.284534909605751) THEN ((vt0.c0)IS NOT(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t1.c0 THEN t1.c0 COLLATE RTRIM WHEN ((x'') BETWEEN (t0.c0) AND (t0.c0)) THEN (((vt0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t1.c0, vt0.c0)) AND ((vt0.c0, t0.c0, t1.c0))) WHEN NULLIF(t0.c0, t0.c0) THEN 0.8233117476194031 WHEN CASE WHEN t0.c0 THEN t0.c0 END THEN t1.c0 WHEN LIKELIHOOD(t1.c0, 0.284534909605751) THEN ((vt0.c0)IS NOT(t0.c0)) END) IS TRUE)  as count FROM vt0, t1, t0);
SELECT COUNT(*) FROM vt0, t1, t0 WHERE (CASE WHEN t1.c0 THEN t1.c0 COLLATE RTRIM WHEN ((x'') BETWEEN (t0.c0) AND (t0.c0)) THEN (((vt0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t1.c0, vt0.c0)) AND ((vt0.c0, t0.c0, t1.c0))) WHEN NULLIF(t0.c0, t0.c0) THEN 0.8233117476194031 WHEN CASE WHEN t0.c0 THEN t0.c0 END THEN t1.c0 WHEN LIKELIHOOD(t1.c0, 0.284534909605751) THEN ((vt0.c0)IS NOT(t0.c0)) END);
SELECT COUNT(*) FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (t1.c0);
SELECT ALL * FROM t1, t0, vt0, rt0 WHERE ((~ (((t1.c0) BETWEEN (rt0.c0) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t1.c0) BETWEEN (rt0.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1, t0, vt0, rt0);
SELECT ALL * FROM t1, t0, vt0, rt0 WHERE ((~ (((t1.c0) BETWEEN (rt0.c0) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t1.c0) BETWEEN (rt0.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1, t0, vt0, rt0);
SELECT ALL * FROM t1, t0, vt0, rt0 WHERE ((~ (((t1.c0) BETWEEN (rt0.c0) AND (t1.c0)))));
SELECT * FROM vt0, t1 WHERE (((((t1.c0) IS FALSE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t1.c0) IS FALSE)) IS TRUE)) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE (((((t1.c0) IS FALSE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t1.c0) IS FALSE)) IS TRUE)) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE (((((t1.c0) IS FALSE)) IS TRUE));
SELECT ALL * FROM rt0 WHERE (((((rt0.c0 COLLATE BINARY)OR(((rt0.c3) IS TRUE))))AND(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 COLLATE BINARY)OR(((rt0.c3) IS TRUE))))AND(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0 COLLATE BINARY)OR(((rt0.c3) IS TRUE))))AND(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 COLLATE BINARY)OR(((rt0.c3) IS TRUE))))AND(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0 COLLATE BINARY)OR(((rt0.c3) IS TRUE))))AND(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c0)))));
SELECT ALL * FROM t1, t0 WHERE ((((+ (t1.c0))) NOT BETWEEN (((t1.c0) ISNULL)) AND (((((t0.c0)OR(t0.c0)))AND(t0.c0))))) ORDER BY IFNULL(DISTINCT t1.c0 COLLATE BINARY, t1.c0 COLLATE RTRIM) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (t1.c0))) NOT BETWEEN (((t1.c0) ISNULL)) AND (((((t0.c0)OR(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t1, t0 ORDER BY IFNULL(DISTINCT t1.c0 COLLATE BINARY, t1.c0 COLLATE RTRIM) ASC  NULLS FIRST);
SELECT ALL * FROM t1, t0 WHERE ((((+ (t1.c0))) NOT BETWEEN (((t1.c0) ISNULL)) AND (((((t0.c0)OR(t0.c0)))AND(t0.c0))))) ORDER BY IFNULL(DISTINCT t1.c0 COLLATE BINARY, t1.c0 COLLATE RTRIM) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (t1.c0))) NOT BETWEEN (((t1.c0) ISNULL)) AND (((((t0.c0)OR(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t1, t0 ORDER BY IFNULL(DISTINCT t1.c0 COLLATE BINARY, t1.c0 COLLATE RTRIM) ASC  NULLS FIRST);
SELECT ALL * FROM t1, t0 WHERE ((((+ (t1.c0))) NOT BETWEEN (((t1.c0) ISNULL)) AND (((((t0.c0)OR(t0.c0)))AND(t0.c0))))) ORDER BY IFNULL(DISTINCT t1.c0 COLLATE BINARY, t1.c0 COLLATE RTRIM) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, t1, vt0, rt0 WHERE (CASE WHEN CAST(rt0.c2 AS BLOB) THEN ((((vt0.c0)OR(t1.c0)))AND(rt0.c3)) END) ORDER BY '1e500' DESC, (+ (((t1.c0)%(rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c2 AS BLOB) THEN ((((vt0.c0)OR(t1.c0)))AND(rt0.c3)) END) IS TRUE)  as count FROM t0, t1, vt0, rt0 ORDER BY '1e500' DESC, (+ (((t1.c0)%(rt0.c1)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, t1, vt0, rt0 WHERE (CASE WHEN CAST(rt0.c2 AS BLOB) THEN ((((vt0.c0)OR(t1.c0)))AND(rt0.c3)) END) ORDER BY '1e500' DESC, (+ (((t1.c0)%(rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c2 AS BLOB) THEN ((((vt0.c0)OR(t1.c0)))AND(rt0.c3)) END) IS TRUE)  as count FROM t0, t1, vt0, rt0 ORDER BY '1e500' DESC, (+ (((t1.c0)%(rt0.c1)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, t1, vt0, rt0 WHERE (CASE WHEN CAST(rt0.c2 AS BLOB) THEN ((((vt0.c0)OR(t1.c0)))AND(rt0.c3)) END) ORDER BY '1e500' DESC, (+ (((t1.c0)%(rt0.c1)))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON 0.45594288693182883 INNER JOIN vt0 ON ((rt0.c2 COLLATE NOCASE) NOT BETWEEN (((t0.c0)*(rt0.c1))) AND (LAST_INSERT_ROWID())) WHERE (((-1127534524)OR(((t0.c0)>(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((-1127534524)OR(((t0.c0)>(rt0.c3))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON 0.45594288693182883 INNER JOIN vt0 ON ((rt0.c2 COLLATE NOCASE) NOT BETWEEN (((t0.c0)*(rt0.c1))) AND (LAST_INSERT_ROWID())));
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON 0.45594288693182883 INNER JOIN vt0 ON ((rt0.c2 COLLATE NOCASE) NOT BETWEEN (((t0.c0)*(rt0.c1))) AND (LAST_INSERT_ROWID())) WHERE (((-1127534524)OR(((t0.c0)>(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((-1127534524)OR(((t0.c0)>(rt0.c3))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON 0.45594288693182883 INNER JOIN vt0 ON ((rt0.c2 COLLATE NOCASE) NOT BETWEEN (((t0.c0)*(rt0.c1))) AND (LAST_INSERT_ROWID())));
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON 0.45594288693182883 INNER JOIN vt0 ON ((rt0.c2 COLLATE NOCASE) NOT BETWEEN (((t0.c0)*(rt0.c1))) AND (LAST_INSERT_ROWID())) WHERE (((-1127534524)OR(((t0.c0)>(rt0.c3)))));
SELECT COUNT(*) FROM t0, rt0 WHERE ((((- (rt0.c3)))<>(CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c3)))<>(CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((- (rt0.c3)))<>(CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c3)))<>(CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((- (rt0.c3)))<>(CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END)));
SELECT * FROM t1, vt0 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (t1.c0);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((x'4f20') ISNULL) COLLATE BINARY) ORDER BY (((rt0.c2 IN ()))==(((rt0.c2)%(rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ((((x'4f20') ISNULL) COLLATE BINARY) IS TRUE)  as count FROM t1, rt0 ORDER BY (((rt0.c2 IN ()))==(((rt0.c2)%(rt0.c3)))) DESC);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((x'4f20') ISNULL) COLLATE BINARY) ORDER BY (((rt0.c2 IN ()))==(((rt0.c2)%(rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ((((x'4f20') ISNULL) COLLATE BINARY) IS TRUE)  as count FROM t1, rt0 ORDER BY (((rt0.c2 IN ()))==(((rt0.c2)%(rt0.c3)))) DESC);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((x'4f20') ISNULL) COLLATE BINARY) ORDER BY (((rt0.c2 IN ()))==(((rt0.c2)%(rt0.c3)))) DESC;
SELECT ALL COUNT(*) FROM t1, vt0, rt0, t0 WHERE (CAST((((t0.c0, rt0.c2, rt0.c3)) BETWEEN ((rt0.c2, rt0.c3, t1.c0)) AND ((vt0.c0, rt0.c0, t1.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t0.c0, rt0.c2, rt0.c3)) BETWEEN ((rt0.c2, rt0.c3, t1.c0)) AND ((vt0.c0, rt0.c0, t1.c0))) AS BLOB)) IS TRUE)  as count FROM t1, vt0, rt0, t0);
SELECT ALL COUNT(*) FROM t1, vt0, rt0, t0 WHERE (CAST((((t0.c0, rt0.c2, rt0.c3)) BETWEEN ((rt0.c2, rt0.c3, t1.c0)) AND ((vt0.c0, rt0.c0, t1.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t0.c0, rt0.c2, rt0.c3)) BETWEEN ((rt0.c2, rt0.c3, t1.c0)) AND ((vt0.c0, rt0.c0, t1.c0))) AS BLOB)) IS TRUE)  as count FROM t1, vt0, rt0, t0);
SELECT ALL COUNT(*) FROM t1, vt0, rt0, t0 WHERE (CAST((((t0.c0, rt0.c2, rt0.c3)) BETWEEN ((rt0.c2, rt0.c3, t1.c0)) AND ((vt0.c0, rt0.c0, t1.c0))) AS BLOB));
SELECT * FROM t0, vt0, t1, rt0 WHERE (CAST(CAST(rt0.c3 AS INTEGER) AS TEXT)) ORDER BY ((((rt0.c0)AND(((rt0.c3) BETWEEN (t1.c0) AND (t1.c0)))))AND((+ (vt0.c0)))) ASC  NULLS LAST, (((rt0.c3) NOT BETWEEN (t0.c0) AND (t0.c0)) IN (rt0.c2))  NULLS FIRST, (- ((~ (NULL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c3 AS INTEGER) AS TEXT)) IS TRUE)  as count FROM t0, vt0, t1, rt0 ORDER BY ((((rt0.c0)AND(((rt0.c3) BETWEEN (t1.c0) AND (t1.c0)))))AND((+ (vt0.c0)))) ASC  NULLS LAST, (((rt0.c3) NOT BETWEEN (t0.c0) AND (t0.c0)) IN (rt0.c2))  NULLS FIRST, (- ((~ (NULL)))) DESC  NULLS LAST);
SELECT * FROM t0, vt0, t1, rt0 WHERE (CAST(CAST(rt0.c3 AS INTEGER) AS TEXT)) ORDER BY ((((rt0.c0)AND(((rt0.c3) BETWEEN (t1.c0) AND (t1.c0)))))AND((+ (vt0.c0)))) ASC  NULLS LAST, (((rt0.c3) NOT BETWEEN (t0.c0) AND (t0.c0)) IN (rt0.c2))  NULLS FIRST, (- ((~ (NULL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c3 AS INTEGER) AS TEXT)) IS TRUE)  as count FROM t0, vt0, t1, rt0 ORDER BY ((((rt0.c0)AND(((rt0.c3) BETWEEN (t1.c0) AND (t1.c0)))))AND((+ (vt0.c0)))) ASC  NULLS LAST, (((rt0.c3) NOT BETWEEN (t0.c0) AND (t0.c0)) IN (rt0.c2))  NULLS FIRST, (- ((~ (NULL)))) DESC  NULLS LAST);
SELECT * FROM t0, vt0, t1, rt0 WHERE (CAST(CAST(rt0.c3 AS INTEGER) AS TEXT)) ORDER BY ((((rt0.c0)AND(((rt0.c3) BETWEEN (t1.c0) AND (t1.c0)))))AND((+ (vt0.c0)))) ASC  NULLS LAST, (((rt0.c3) NOT BETWEEN (t0.c0) AND (t0.c0)) IN (rt0.c2))  NULLS FIRST, (- ((~ (NULL)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE ((CAST(t1.c0 AS BLOB) IN (0Xffffffffbd01745e)));
SELECT SUM(count) FROM (SELECT (((CAST(t1.c0 AS BLOB) IN (0xffffffffbd01745e))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((CAST(t1.c0 AS BLOB) IN (0Xffffffffbd01745e)));
SELECT SUM(count) FROM (SELECT (((CAST(t1.c0 AS BLOB) IN (0xffffffffbd01745e))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((CAST(t1.c0 AS BLOB) IN (0Xffffffffbd01745e)));
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (UNLIKELY(DISTINCT ((((t1.c0)OR(vt0.c0)))AND(t1.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((((t1.c0)OR(vt0.c0)))AND(t1.c0)))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (UNLIKELY(DISTINCT ((((t1.c0)OR(vt0.c0)))AND(t1.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((((t1.c0)OR(vt0.c0)))AND(t1.c0)))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (UNLIKELY(DISTINCT ((((t1.c0)OR(vt0.c0)))AND(t1.c0))));
SELECT ALL * FROM t0, rt0 WHERE (((((rt0.c3) NOT BETWEEN (0.44304160066964804) AND (rt0.c2))) NOT BETWEEN ((rt0.c2 IN ())) AND ((+ (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOT BETWEEN (0.44304160066964804) AND (rt0.c2))) NOT BETWEEN ((rt0.c2 IN ())) AND ((+ (rt0.c3))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((((rt0.c3) NOT BETWEEN (0.44304160066964804) AND (rt0.c2))) NOT BETWEEN ((rt0.c2 IN ())) AND ((+ (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOT BETWEEN (0.44304160066964804) AND (rt0.c2))) NOT BETWEEN ((rt0.c2 IN ())) AND ((+ (rt0.c3))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((((rt0.c3) NOT BETWEEN (0.44304160066964804) AND (rt0.c2))) NOT BETWEEN ((rt0.c2 IN ())) AND ((+ (rt0.c3)))));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((+ (t1.c0)))<<((t1.c0 IN (vt0.c0, t1.c0))))) ORDER BY 0.17618267786239583  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (t1.c0)))<<((t1.c0 IN (vt0.c0, t1.c0))))) IS TRUE)  as count FROM t1, vt0 ORDER BY 0.17618267786239583  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((+ (t1.c0)))<<((t1.c0 IN (vt0.c0, t1.c0))))) ORDER BY 0.17618267786239583  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (t1.c0)))<<((t1.c0 IN (vt0.c0, t1.c0))))) IS TRUE)  as count FROM t1, vt0 ORDER BY 0.17618267786239583  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((+ (t1.c0)))<<((t1.c0 IN (vt0.c0, t1.c0))))) ORDER BY 0.17618267786239583  NULLS LAST;
SELECT * FROM rt0, t1, vt0 NATURAL JOIN t0 WHERE (CAST((((rt0.c3))!=((rt0.c3))) AS REAL)) ORDER BY CASE (((rt0.c1, rt0.c1, rt0.c1))>=((rt0.c2, t1.c0, rt0.c1)))  WHEN ((((((((t0.c0)OR(t0.c0)))OR(rt0.c2)))AND(t1.c0)))AND(rt0.c3)) THEN (- (rt0.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c3))<>((rt0.c3))) AS REAL)) IS TRUE)  as count FROM rt0, t1, vt0 NATURAL JOIN t0 ORDER BY CASE (((rt0.c1, rt0.c1, rt0.c1))>=((rt0.c2, t1.c0, rt0.c1)))  WHEN ((((((((t0.c0)OR(t0.c0)))OR(rt0.c2)))AND(t1.c0)))AND(rt0.c3)) THEN (- (rt0.c1)) END ASC);
SELECT * FROM rt0, t1, vt0 NATURAL JOIN t0 WHERE (CAST((((rt0.c3))!=((rt0.c3))) AS REAL)) ORDER BY CASE (((rt0.c1, rt0.c1, rt0.c1))>=((rt0.c2, t1.c0, rt0.c1)))  WHEN ((((((((t0.c0)OR(t0.c0)))OR(rt0.c2)))AND(t1.c0)))AND(rt0.c3)) THEN (- (rt0.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c3))<>((rt0.c3))) AS REAL)) IS TRUE)  as count FROM rt0, t1, vt0 NATURAL JOIN t0 ORDER BY CASE (((rt0.c1, rt0.c1, rt0.c1))>=((rt0.c2, t1.c0, rt0.c1)))  WHEN ((((((((t0.c0)OR(t0.c0)))OR(rt0.c2)))AND(t1.c0)))AND(rt0.c3)) THEN (- (rt0.c1)) END ASC);
SELECT * FROM rt0, t1, vt0 NATURAL JOIN t0 WHERE (CAST((((rt0.c3))!=((rt0.c3))) AS REAL)) ORDER BY CASE (((rt0.c1, rt0.c1, rt0.c1))>=((rt0.c2, t1.c0, rt0.c1)))  WHEN ((((((((t0.c0)OR(t0.c0)))OR(rt0.c2)))AND(t1.c0)))AND(rt0.c3)) THEN (- (rt0.c1)) END ASC;
SELECT ALL * FROM t0 INDEXED BY i82, vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0)))) NOT BETWEEN (((rt0.c1) NOTNULL)) AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))) INNER JOIN t1 ON ((((((t1.c0)OR(rt0.c0)))AND(t1.c0))) NOTNULL) WHERE (load_extension(((rt0.c1)&(t1.c0)))) ORDER BY ((t1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((load_extension(((rt0.c1)&(t1.c0)))) IS TRUE)  as count FROM t0 INDEXED BY i82, vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0)))) NOT BETWEEN (((rt0.c1) NOTNULL)) AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))) INNER JOIN t1 ON ((((((t1.c0)OR(rt0.c0)))AND(t1.c0))) NOTNULL) ORDER BY ((t1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM t0 INDEXED BY i82, vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0)))) NOT BETWEEN (((rt0.c1) NOTNULL)) AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))) INNER JOIN t1 ON ((((((t1.c0)OR(rt0.c0)))AND(t1.c0))) NOTNULL) WHERE (load_extension(((rt0.c1)&(t1.c0)))) ORDER BY ((t1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((load_extension(((rt0.c1)&(t1.c0)))) IS TRUE)  as count FROM t0 INDEXED BY i82, vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0)))) NOT BETWEEN (((rt0.c1) NOTNULL)) AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))) INNER JOIN t1 ON ((((((t1.c0)OR(rt0.c0)))AND(t1.c0))) NOTNULL) ORDER BY ((t1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c2)))AND(x'')))OR('4')) THEN ((rt0.c2)<(rt0.c0)) ELSE CAST(rt0.c3 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c2)))AND(x'')))OR('4')) THEN ((rt0.c2)<(rt0.c0)) ELSE CAST(rt0.c3 AS INTEGER) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c2)))AND(x'')))OR('4')) THEN ((rt0.c2)<(rt0.c0)) ELSE CAST(rt0.c3 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c2)))AND(x'')))OR('4')) THEN ((rt0.c2)<(rt0.c0)) ELSE CAST(rt0.c3 AS INTEGER) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c2)))AND(x'')))OR('4')) THEN ((rt0.c2)<(rt0.c0)) ELSE CAST(rt0.c3 AS INTEGER) END);
SELECT ALL * FROM rt0 WHERE (((CASE 0.796193594106566  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)>>(((rt0.c3) BETWEEN (NULL) AND (rt0.c3))))) ORDER BY (CASE WHEN rt0.c2 THEN rt0.c3 END IN ());
SELECT SUM(count) FROM (SELECT ALL ((((CASE 0.796193594106566  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)>>(((rt0.c3) BETWEEN (NULL) AND (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY (CASE WHEN rt0.c2 THEN rt0.c3 END IN ()));
SELECT ALL * FROM rt0 WHERE (((CASE 0.796193594106566  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)>>(((rt0.c3) BETWEEN (NULL) AND (rt0.c3))))) ORDER BY (CASE WHEN rt0.c2 THEN rt0.c3 END IN ());
SELECT SUM(count) FROM (SELECT ALL ((((CASE 0.796193594106566  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)>>(((rt0.c3) BETWEEN (NULL) AND (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY (CASE WHEN rt0.c2 THEN rt0.c3 END IN ()));
SELECT ALL * FROM rt0 WHERE (((CASE 0.796193594106566  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)>>(((rt0.c3) BETWEEN (NULL) AND (rt0.c3))))) ORDER BY (CASE WHEN rt0.c2 THEN rt0.c3 END IN ());
SELECT ALL COUNT(*) FROM vt0 WHERE (((0x5ceaeef)>(((vt0.c0)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((0x5ceaeef)>(((vt0.c0)%(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((0x5ceaeef)>(((vt0.c0)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((0x5ceaeef)>(((vt0.c0)%(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((0x5ceaeef)>(((vt0.c0)%(vt0.c0)))));
SELECT * FROM t1 CROSS JOIN rt0 ON (+ (((('389740039', rt0.c2, rt0.c2))<>((t1.c0, rt0.c2, rt0.c1))))) LEFT OUTER JOIN t0 ON ((((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c3)))OR(t1.c0)))OR(rt0.c1)))OR((((('\␨\rM{1}B	8')OR(rt0.c0)))AND(rt0.c0)))))AND(x'')) INNER JOIN vt0 ON (~ (((rt0.c0) IS FALSE))) WHERE (((((((rt0.c3)OR(t1.c0)))AND(vt0.c0)))>(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 WHEN NULL THEN t1.c0 WHEN rt0.c2 THEN t1.c0 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3)OR(t1.c0)))AND(vt0.c0)))>(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 WHEN NULL THEN t1.c0 WHEN rt0.c2 THEN t1.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON (+ (((('389740039', rt0.c2, rt0.c2))<>((t1.c0, rt0.c2, rt0.c1))))) LEFT OUTER JOIN t0 ON ((((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c3)))OR(t1.c0)))OR(rt0.c1)))OR((((('\␨\rM{1}B	8')OR(rt0.c0)))AND(rt0.c0)))))AND(x'')) INNER JOIN vt0 ON (~ (((rt0.c0) IS FALSE))));
SELECT * FROM t1 CROSS JOIN rt0 ON (+ (((('389740039', rt0.c2, rt0.c2))<>((t1.c0, rt0.c2, rt0.c1))))) LEFT OUTER JOIN t0 ON ((((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c3)))OR(t1.c0)))OR(rt0.c1)))OR((((('\␨\rM{1}B	8')OR(rt0.c0)))AND(rt0.c0)))))AND(x'')) INNER JOIN vt0 ON (~ (((rt0.c0) IS FALSE))) WHERE (((((((rt0.c3)OR(t1.c0)))AND(vt0.c0)))>(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 WHEN NULL THEN t1.c0 WHEN rt0.c2 THEN t1.c0 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3)OR(t1.c0)))AND(vt0.c0)))>(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 WHEN NULL THEN t1.c0 WHEN rt0.c2 THEN t1.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON (+ (((('389740039', rt0.c2, rt0.c2))<>((t1.c0, rt0.c2, rt0.c1))))) LEFT OUTER JOIN t0 ON ((((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c3)))OR(t1.c0)))OR(rt0.c1)))OR((((('\␨\rM{1}B	8')OR(rt0.c0)))AND(rt0.c0)))))AND(x'')) INNER JOIN vt0 ON (~ (((rt0.c0) IS FALSE))));
SELECT * FROM t1 CROSS JOIN rt0 ON (+ (((('389740039', rt0.c2, rt0.c2))<>((t1.c0, rt0.c2, rt0.c1))))) LEFT OUTER JOIN t0 ON ((((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c3)))OR(t1.c0)))OR(rt0.c1)))OR((((('\␨\rM{1}B	8')OR(rt0.c0)))AND(rt0.c0)))))AND(x'')) INNER JOIN vt0 ON (~ (((rt0.c0) IS FALSE))) WHERE (((((((rt0.c3)OR(t1.c0)))AND(vt0.c0)))>(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 WHEN NULL THEN t1.c0 WHEN rt0.c2 THEN t1.c0 ELSE t0.c0 END)));
SELECT ALL * FROM t0, vt0 RIGHT OUTER JOIN rt0 ON ((((((t0.c0)=(rt0.c2)))OR(TOTAL_CHANGES())))AND(GLOB(rt0.c2, rt0.c1))) WHERE (CAST(-1723732295 AS NUMERIC)) ORDER BY (x'f1f5' IN (CAST(rt0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((CAST(-1723732295 AS NUMERIC)) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN rt0 ON ((((((t0.c0)==(rt0.c2)))OR(TOTAL_CHANGES())))AND(GLOB(rt0.c2, rt0.c1))) ORDER BY (x'f1f5' IN (CAST(rt0.c1 AS NUMERIC))));
SELECT ALL * FROM t0, vt0 RIGHT OUTER JOIN rt0 ON ((((((t0.c0)=(rt0.c2)))OR(TOTAL_CHANGES())))AND(GLOB(rt0.c2, rt0.c1))) WHERE (CAST(-1723732295 AS NUMERIC)) ORDER BY (x'f1f5' IN (CAST(rt0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((CAST(-1723732295 AS NUMERIC)) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN rt0 ON ((((((t0.c0)==(rt0.c2)))OR(TOTAL_CHANGES())))AND(GLOB(rt0.c2, rt0.c1))) ORDER BY (x'f1f5' IN (CAST(rt0.c1 AS NUMERIC))));
SELECT ALL * FROM t0, vt0 RIGHT OUTER JOIN rt0 ON ((((((t0.c0)=(rt0.c2)))OR(TOTAL_CHANGES())))AND(GLOB(rt0.c2, rt0.c1))) WHERE (CAST(-1723732295 AS NUMERIC)) ORDER BY (x'f1f5' IN (CAST(rt0.c1 AS NUMERIC)));
SELECT COUNT(*) FROM t1, t0, vt0, rt0 WHERE (CASE t0.c0  WHEN (rt0.c1 IN ()) THEN ((((((((t0.c0)OR(rt0.c2)))AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c0)) WHEN CASE 0.9214952109748706  WHEN rt0.c0 THEN rt0.c1 END THEN 6.91642431E8 WHEN ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c0)) THEN (t0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c0  WHEN (rt0.c1 IN ()) THEN ((((((((t0.c0)OR(rt0.c2)))AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c0)) WHEN CASE 0.9214952109748706  WHEN rt0.c0 THEN rt0.c1 END THEN 6.91642431E8 WHEN ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c0)) THEN (t0.c0 IN ()) END) IS TRUE)  as count FROM t1, t0, vt0, rt0);
SELECT COUNT(*) FROM t1, t0, vt0, rt0 WHERE (CASE t0.c0  WHEN (rt0.c1 IN ()) THEN ((((((((t0.c0)OR(rt0.c2)))AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c0)) WHEN CASE 0.9214952109748706  WHEN rt0.c0 THEN rt0.c1 END THEN 6.91642431E8 WHEN ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c0)) THEN (t0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c0  WHEN (rt0.c1 IN ()) THEN ((((((((t0.c0)OR(rt0.c2)))AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c0)) WHEN CASE 0.9214952109748706  WHEN rt0.c0 THEN rt0.c1 END THEN 6.91642431E8 WHEN ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c0)) THEN (t0.c0 IN ()) END) IS TRUE)  as count FROM t1, t0, vt0, rt0);
SELECT COUNT(*) FROM t1, t0, vt0, rt0 WHERE (CASE t0.c0  WHEN (rt0.c1 IN ()) THEN ((((((((t0.c0)OR(rt0.c2)))AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c0)) WHEN CASE 0.9214952109748706  WHEN rt0.c0 THEN rt0.c1 END THEN 6.91642431E8 WHEN ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c0)) THEN (t0.c0 IN ()) END);
SELECT ALL * FROM t1, t0 WHERE (LIKE((((t1.c0))>((t0.c0))), CAST(t1.c0 AS REAL), 'm')) ORDER BY t1.c0 COLLATE RTRIM COLLATE BINARY COLLATE BINARY  NULLS LAST, ((((t0.c0)*(t1.c0)))-('687846920'));
SELECT SUM(count) FROM (SELECT ((LIKE((((t1.c0))>((t0.c0))), CAST(t1.c0 AS REAL), 'm')) IS TRUE)  as count FROM t1, t0 ORDER BY t1.c0 COLLATE RTRIM COLLATE BINARY COLLATE BINARY  NULLS LAST, ((((t0.c0)*(t1.c0)))-('687846920')));
SELECT ALL * FROM t1, t0 WHERE (LIKE((((t1.c0))>((t0.c0))), CAST(t1.c0 AS REAL), 'm')) ORDER BY t1.c0 COLLATE RTRIM COLLATE BINARY COLLATE BINARY  NULLS LAST, ((((t0.c0)*(t1.c0)))-('687846920'));
SELECT SUM(count) FROM (SELECT ((LIKE((((t1.c0))>((t0.c0))), CAST(t1.c0 AS REAL), 'm')) IS TRUE)  as count FROM t1, t0 ORDER BY t1.c0 COLLATE RTRIM COLLATE BINARY COLLATE BINARY  NULLS LAST, ((((t0.c0)*(t1.c0)))-('687846920')));
SELECT ALL * FROM t1, t0 WHERE (LIKE((((t1.c0))>((t0.c0))), CAST(t1.c0 AS REAL), 'm')) ORDER BY t1.c0 COLLATE RTRIM COLLATE BINARY COLLATE BINARY  NULLS LAST, ((((t0.c0)*(t1.c0)))-('687846920'));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c3 COLLATE NOCASE)*(CAST(rt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE NOCASE)*(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c3 COLLATE NOCASE)*(CAST(rt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE NOCASE)*(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c3 COLLATE NOCASE)*(CAST(rt0.c1 AS BLOB))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0) IS FALSE) COLLATE NOCASE) ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt0.c0)))AND(x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt0.c0)))AND(x''))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0) IS FALSE) COLLATE NOCASE) ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt0.c0)))AND(x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt0.c0)))AND(x''))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0) IS FALSE) COLLATE NOCASE) ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt0.c0)))AND(x''))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, t1, rt0, vt0 WHERE (((((-1479596367)<>(rt0.c3)))OR(t0.c0))) ORDER BY ((t0.c0)LIKE(((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((-1479596367)!=(rt0.c3)))OR(t0.c0))) IS TRUE)  as count FROM t0, t1, rt0, vt0 ORDER BY ((t0.c0)LIKE(((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, t1, rt0, vt0 WHERE (((((-1479596367)<>(rt0.c3)))OR(t0.c0))) ORDER BY ((t0.c0)LIKE(((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((-1479596367)!=(rt0.c3)))OR(t0.c0))) IS TRUE)  as count FROM t0, t1, rt0, vt0 ORDER BY ((t0.c0)LIKE(((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, t1, rt0, vt0 WHERE (((((-1479596367)<>(rt0.c3)))OR(t0.c0))) ORDER BY ((t0.c0)LIKE(((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM rt0 INNER JOIN t0 ON ((rt0.c1) NOT NULL) WHERE ((+ (rt0.c1)) COLLATE BINARY) ORDER BY ((SQLITE_VERSION()) BETWEEN (((rt0.c2) ISNULL)) AND (LOWER(rt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ((rt0.c1) NOT NULL) ORDER BY ((SQLITE_VERSION()) BETWEEN (((rt0.c2) ISNULL)) AND (LOWER(rt0.c0))) ASC);
SELECT ALL * FROM rt0 INNER JOIN t0 ON ((rt0.c1) NOT NULL) WHERE ((+ (rt0.c1)) COLLATE BINARY) ORDER BY ((SQLITE_VERSION()) BETWEEN (((rt0.c2) ISNULL)) AND (LOWER(rt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ((rt0.c1) NOT NULL) ORDER BY ((SQLITE_VERSION()) BETWEEN (((rt0.c2) ISNULL)) AND (LOWER(rt0.c0))) ASC);
SELECT ALL * FROM rt0 INNER JOIN t0 ON ((rt0.c1) NOT NULL) WHERE ((+ (rt0.c1)) COLLATE BINARY) ORDER BY ((SQLITE_VERSION()) BETWEEN (((rt0.c2) ISNULL)) AND (LOWER(rt0.c0))) ASC;
SELECT ALL * FROM t1, vt0 LEFT OUTER JOIN rt0 ON (- (TRIM(rt0.c3, vt0.c0))) WHERE (((((TRIM(rt0.c2))OR(((')days]') NOTNULL))))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((TRIM(rt0.c2))OR(((')days]') NOTNULL))))AND(vt0.c0))) IS TRUE)  as count FROM t1, vt0 LEFT OUTER JOIN rt0 ON (- (TRIM(rt0.c3, vt0.c0))));
SELECT ALL * FROM t1, vt0 LEFT OUTER JOIN rt0 ON (- (TRIM(rt0.c3, vt0.c0))) WHERE (((((TRIM(rt0.c2))OR(((')days]') NOTNULL))))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((TRIM(rt0.c2))OR(((')days]') NOTNULL))))AND(vt0.c0))) IS TRUE)  as count FROM t1, vt0 LEFT OUTER JOIN rt0 ON (- (TRIM(rt0.c3, vt0.c0))));
SELECT ALL * FROM t1, vt0 LEFT OUTER JOIN rt0 ON (- (TRIM(rt0.c3, vt0.c0))) WHERE (((((TRIM(rt0.c2))OR(((')days]') NOTNULL))))AND(vt0.c0)));
SELECT * FROM t1, vt0, t0 WHERE (((~ (t0.c0)) IN (((t0.c0)>(vt0.c0))))) ORDER BY ((((vt0.c0)||(t0.c0)))>((t1.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((~ (t0.c0)) IN (((t0.c0)>(vt0.c0))))) IS TRUE)  as count FROM t1, vt0, t0 ORDER BY ((((vt0.c0)||(t0.c0)))>((t1.c0 IN ())))  NULLS LAST);
SELECT * FROM t1, vt0, t0 WHERE (((~ (t0.c0)) IN (((t0.c0)>(vt0.c0))))) ORDER BY ((((vt0.c0)||(t0.c0)))>((t1.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((~ (t0.c0)) IN (((t0.c0)>(vt0.c0))))) IS TRUE)  as count FROM t1, vt0, t0 ORDER BY ((((vt0.c0)||(t0.c0)))>((t1.c0 IN ())))  NULLS LAST);
SELECT * FROM t1, vt0, t0 WHERE (((~ (t0.c0)) IN (((t0.c0)>(vt0.c0))))) ORDER BY ((((vt0.c0)||(t0.c0)))>((t1.c0 IN ())))  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0 NOT INDEXED, vt0 WHERE (1.008143767E9);
SELECT SUM(count) FROM (SELECT ((1.008143767E9) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0 NOT INDEXED, vt0 WHERE (1.008143767E9);
SELECT SUM(count) FROM (SELECT ((1.008143767E9) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0 NOT INDEXED, vt0 WHERE (1.008143767E9);
SELECT ALL COUNT(*) FROM t0, t1 WHERE (((((- (t1.c0)), (~ (t0.c0)), x''))<((t0.c0 COLLATE BINARY, (~ (t0.c0)), t0.c0)))) ORDER BY ((((((((((t1.c0)||(t0.c0)))AND(t1.c0 COLLATE RTRIM)))AND(CASE WHEN t1.c0 THEN t1.c0 END)))AND(((((t0.c0)AND(t0.c0)))OR(t0.c0)))))OR(((t1.c0)<(t1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((- (t1.c0)), (~ (t0.c0)), x''))<((t0.c0 COLLATE BINARY, (~ (t0.c0)), t0.c0)))) IS TRUE)  as count FROM t0, t1 ORDER BY ((((((((((t1.c0)||(t0.c0)))AND(t1.c0 COLLATE RTRIM)))AND(CASE WHEN t1.c0 THEN t1.c0 END)))AND(((((t0.c0)AND(t0.c0)))OR(t0.c0)))))OR(((t1.c0)<(t1.c0)))) ASC);
SELECT ALL COUNT(*) FROM t0, t1 WHERE (((((- (t1.c0)), (~ (t0.c0)), x''))<((t0.c0 COLLATE BINARY, (~ (t0.c0)), t0.c0)))) ORDER BY ((((((((((t1.c0)||(t0.c0)))AND(t1.c0 COLLATE RTRIM)))AND(CASE WHEN t1.c0 THEN t1.c0 END)))AND(((((t0.c0)AND(t0.c0)))OR(t0.c0)))))OR(((t1.c0)<(t1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((- (t1.c0)), (~ (t0.c0)), x''))<((t0.c0 COLLATE BINARY, (~ (t0.c0)), t0.c0)))) IS TRUE)  as count FROM t0, t1 ORDER BY ((((((((((t1.c0)||(t0.c0)))AND(t1.c0 COLLATE RTRIM)))AND(CASE WHEN t1.c0 THEN t1.c0 END)))AND(((((t0.c0)AND(t0.c0)))OR(t0.c0)))))OR(((t1.c0)<(t1.c0)))) ASC);
SELECT ALL COUNT(*) FROM t0, t1 WHERE (((((- (t1.c0)), (~ (t0.c0)), x''))<((t0.c0 COLLATE BINARY, (~ (t0.c0)), t0.c0)))) ORDER BY ((((((((((t1.c0)||(t0.c0)))AND(t1.c0 COLLATE RTRIM)))AND(CASE WHEN t1.c0 THEN t1.c0 END)))AND(((((t0.c0)AND(t0.c0)))OR(t0.c0)))))OR(((t1.c0)<(t1.c0)))) ASC;
SELECT * FROM vt0, rt0, t1, t0 WHERE (TRIM(DISTINCT ((rt0.c0)+(t0.c0)), vt0.c0)) ORDER BY ((t1.c0 COLLATE NOCASE)&((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((rt0.c0)+(t0.c0)), vt0.c0)) IS TRUE)  as count FROM vt0, rt0, t1, t0 ORDER BY ((t1.c0 COLLATE NOCASE)&((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3)))))  NULLS LAST);
SELECT * FROM vt0, rt0, t1, t0 WHERE (TRIM(DISTINCT ((rt0.c0)+(t0.c0)), vt0.c0)) ORDER BY ((t1.c0 COLLATE NOCASE)&((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((rt0.c0)+(t0.c0)), vt0.c0)) IS TRUE)  as count FROM vt0, rt0, t1, t0 ORDER BY ((t1.c0 COLLATE NOCASE)&((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3)))))  NULLS LAST);
SELECT * FROM vt0, rt0, t1, t0 WHERE (TRIM(DISTINCT ((rt0.c0)+(t0.c0)), vt0.c0)) ORDER BY ((t1.c0 COLLATE NOCASE)&((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3)))))  NULLS LAST;
SELECT ALL * FROM rt0, t1 WHERE (((rt0.c3)>(rt0.c3)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c3)>(rt0.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t1);
SELECT ALL * FROM rt0, t1 WHERE (((rt0.c3)>(rt0.c3)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c3)>(rt0.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t1);
SELECT ALL * FROM rt0, t1 WHERE (((rt0.c3)>(rt0.c3)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c0) ORDER BY ((HEX(t0.c0))LIKE((((vt0.c0, t0.c0, t0.c0)) BETWEEN ((vt0.c0, t0.c0, t0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, vt0 ORDER BY ((HEX(t0.c0))LIKE((((vt0.c0, t0.c0, t0.c0)) BETWEEN ((vt0.c0, t0.c0, t0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c0) ORDER BY ((HEX(t0.c0))LIKE((((vt0.c0, t0.c0, t0.c0)) BETWEEN ((vt0.c0, t0.c0, t0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, vt0 ORDER BY ((HEX(t0.c0))LIKE((((vt0.c0, t0.c0, t0.c0)) BETWEEN ((vt0.c0, t0.c0, t0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c0) ORDER BY ((HEX(t0.c0))LIKE((((vt0.c0, t0.c0, t0.c0)) BETWEEN ((vt0.c0, t0.c0, t0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))));
SELECT COUNT(*) FROM vt0, t0, rt0, t1 WHERE (((((((((vt0.c0)OR('')))AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c1)) COLLATE NOCASE) ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)OR('')))AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, rt0, t1 ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))) AS NUMERIC));
SELECT COUNT(*) FROM vt0, t0, rt0, t1 WHERE (((((((((vt0.c0)OR('')))AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c1)) COLLATE NOCASE) ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)OR('')))AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, rt0, t1 ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))) AS NUMERIC));
SELECT COUNT(*) FROM vt0, t0, rt0, t1 WHERE (((((((((vt0.c0)OR('')))AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c1)) COLLATE NOCASE) ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))) AS NUMERIC);
SELECT ALL * FROM t1, rt0, vt0, t0 WHERE ((rt0.c1 IN ()) COLLATE BINARY) ORDER BY ((((rt0.c2)-(rt0.c3)))/(TRIM(DISTINCT vt0.c0))) DESC, t0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t1, rt0, vt0, t0 ORDER BY ((((rt0.c2)-(rt0.c3)))/(TRIM(DISTINCT vt0.c0))) DESC, t0.c0 ASC  NULLS LAST);
SELECT ALL * FROM t1, rt0, vt0, t0 WHERE ((rt0.c1 IN ()) COLLATE BINARY) ORDER BY ((((rt0.c2)-(rt0.c3)))/(TRIM(DISTINCT vt0.c0))) DESC, t0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t1, rt0, vt0, t0 ORDER BY ((((rt0.c2)-(rt0.c3)))/(TRIM(DISTINCT vt0.c0))) DESC, t0.c0 ASC  NULLS LAST);
SELECT ALL * FROM t1, rt0, vt0, t0 WHERE ((rt0.c1 IN ()) COLLATE BINARY) ORDER BY ((((rt0.c2)-(rt0.c3)))/(TRIM(DISTINCT vt0.c0))) DESC, t0.c0 ASC  NULLS LAST;
SELECT * FROM vt0 CROSS JOIN t1 ON ((((0.8178937743494096)==(rt0.c1))) ISNULL) CROSS JOIN t0 ON (NOT (((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c2)))) INNER JOIN rt0 ON LIKELIHOOD(rt0.c2 COLLATE NOCASE, 0.23620008950637128) WHERE ((((rt0.c1) NOT NULL) IN ())) ORDER BY ((((vt0.c0)-(rt0.c2)))=(vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((((rt0.c1) NOT NULL) IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON ((((0.8178937743494096)==(rt0.c1))) ISNULL) CROSS JOIN t0 ON (NOT (((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c2)))) INNER JOIN rt0 ON LIKELIHOOD(rt0.c2 COLLATE NOCASE, 0.23620008950637128) ORDER BY ((((vt0.c0)-(rt0.c2)))==(vt0.c0 COLLATE RTRIM)));
SELECT * FROM vt0 CROSS JOIN t1 ON ((((0.8178937743494096)==(rt0.c1))) ISNULL) CROSS JOIN t0 ON (NOT (((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c2)))) INNER JOIN rt0 ON LIKELIHOOD(rt0.c2 COLLATE NOCASE, 0.23620008950637128) WHERE ((((rt0.c1) NOT NULL) IN ())) ORDER BY ((((vt0.c0)-(rt0.c2)))=(vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((((rt0.c1) NOT NULL) IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON ((((0.8178937743494096)==(rt0.c1))) ISNULL) CROSS JOIN t0 ON (NOT (((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c2)))) INNER JOIN rt0 ON LIKELIHOOD(rt0.c2 COLLATE NOCASE, 0.23620008950637128) ORDER BY ((((vt0.c0)-(rt0.c2)))==(vt0.c0 COLLATE RTRIM)));
SELECT * FROM vt0 CROSS JOIN t1 ON ((((0.8178937743494096)==(rt0.c1))) ISNULL) CROSS JOIN t0 ON (NOT (((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c2)))) INNER JOIN rt0 ON LIKELIHOOD(rt0.c2 COLLATE NOCASE, 0.23620008950637128) WHERE ((((rt0.c1) NOT NULL) IN ())) ORDER BY ((((vt0.c0)-(rt0.c2)))=(vt0.c0 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM vt0, rt0, t0, t1 WHERE ((~ (((t0.c0)=(t0.c0))))) ORDER BY (+ (IFNULL(rt0.c1, rt0.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((t0.c0)=(t0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0, t1 ORDER BY (+ (IFNULL(rt0.c1, rt0.c1))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, t0, t1 WHERE ((~ (((t0.c0)=(t0.c0))))) ORDER BY (+ (IFNULL(rt0.c1, rt0.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((t0.c0)=(t0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0, t1 ORDER BY (+ (IFNULL(rt0.c1, rt0.c1))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, t0, t1 WHERE ((~ (((t0.c0)=(t0.c0))))) ORDER BY (+ (IFNULL(rt0.c1, rt0.c1))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((rt0.c0) NOT BETWEEN ('f{V') AND (rt0.c2)) COLLATE RTRIM) ORDER BY ((((rt0.c1)%(rt0.c2))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT BETWEEN ('f{V') AND (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)%(rt0.c2))) IS TRUE));
SELECT ALL * FROM rt0 WHERE (((rt0.c0) NOT BETWEEN ('f{V') AND (rt0.c2)) COLLATE RTRIM) ORDER BY ((((rt0.c1)%(rt0.c2))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT BETWEEN ('f{V') AND (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)%(rt0.c2))) IS TRUE));
SELECT ALL * FROM rt0 WHERE (((rt0.c0) NOT BETWEEN ('f{V') AND (rt0.c2)) COLLATE RTRIM) ORDER BY ((((rt0.c1)%(rt0.c2))) IS TRUE);
SELECT COUNT(*) FROM vt0, rt0, t1, t0 WHERE (UNLIKELY(((rt0.c2)<<(rt0.c3)))) ORDER BY vt0.c0 ASC, ((((rt0.c1)<=(rt0.c3)))!=(((t1.c0)IS(rt0.c1)))), (((- (rt0.c3))) BETWEEN (RTRIM(0.0)) AND ((t0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((rt0.c2)<<(rt0.c3)))) IS TRUE)  as count FROM vt0, rt0, t1, t0 ORDER BY vt0.c0 ASC, ((((rt0.c1)<=(rt0.c3)))<>(((t1.c0)IS(rt0.c1)))), (((- (rt0.c3))) BETWEEN (RTRIM(0.0)) AND ((t0.c0 IN ()))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, t1, t0 WHERE (UNLIKELY(((rt0.c2)<<(rt0.c3)))) ORDER BY vt0.c0 ASC, ((((rt0.c1)<=(rt0.c3)))!=(((t1.c0)IS(rt0.c1)))), (((- (rt0.c3))) BETWEEN (RTRIM(0.0)) AND ((t0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((rt0.c2)<<(rt0.c3)))) IS TRUE)  as count FROM vt0, rt0, t1, t0 ORDER BY vt0.c0 ASC, ((((rt0.c1)<=(rt0.c3)))<>(((t1.c0)IS(rt0.c1)))), (((- (rt0.c3))) BETWEEN (RTRIM(0.0)) AND ((t0.c0 IN ()))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, t1, t0 WHERE (UNLIKELY(((rt0.c2)<<(rt0.c3)))) ORDER BY vt0.c0 ASC, ((((rt0.c1)<=(rt0.c3)))!=(((t1.c0)IS(rt0.c1)))), (((- (rt0.c3))) BETWEEN (RTRIM(0.0)) AND ((t0.c0 IN ()))) DESC  NULLS LAST;
SELECT * FROM t0, vt0, t1 WHERE ((((t0.c0) BETWEEN (t1.c0) AND ('')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0) BETWEEN (t1.c0) AND ('')) IN ())) IS TRUE)  as count FROM t0, vt0, t1);
SELECT * FROM t0, vt0, t1 WHERE ((((t0.c0) BETWEEN (t1.c0) AND ('')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0) BETWEEN (t1.c0) AND ('')) IN ())) IS TRUE)  as count FROM t0, vt0, t1);
SELECT * FROM t0, vt0, t1 WHERE ((((t0.c0) BETWEEN (t1.c0) AND ('')) IN ()));
SELECT * FROM vt0, rt0, t0, t1 WHERE (CASE CAST(rt0.c1 AS TEXT)  WHEN CASE WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN x'' THEN t1.c0 WHEN t1.c0 THEN rt0.c3 END THEN ((rt0.c3)GLOB(rt0.c2)) ELSE ((rt0.c3) BETWEEN (rt0.c2) AND (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c1 AS TEXT)  WHEN CASE WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN x'' THEN t1.c0 WHEN t1.c0 THEN rt0.c3 END THEN ((rt0.c3)GLOB(rt0.c2)) ELSE ((rt0.c3) BETWEEN (rt0.c2) AND (t0.c0)) END) IS TRUE)  as count FROM vt0, rt0, t0, t1);
SELECT * FROM vt0, rt0, t0, t1 WHERE (CASE CAST(rt0.c1 AS TEXT)  WHEN CASE WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN x'' THEN t1.c0 WHEN t1.c0 THEN rt0.c3 END THEN ((rt0.c3)GLOB(rt0.c2)) ELSE ((rt0.c3) BETWEEN (rt0.c2) AND (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c1 AS TEXT)  WHEN CASE WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN x'' THEN t1.c0 WHEN t1.c0 THEN rt0.c3 END THEN ((rt0.c3)GLOB(rt0.c2)) ELSE ((rt0.c3) BETWEEN (rt0.c2) AND (t0.c0)) END) IS TRUE)  as count FROM vt0, rt0, t0, t1);
SELECT * FROM vt0, rt0, t0, t1 WHERE (CASE CAST(rt0.c1 AS TEXT)  WHEN CASE WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN x'' THEN t1.c0 WHEN t1.c0 THEN rt0.c3 END THEN ((rt0.c3)GLOB(rt0.c2)) ELSE ((rt0.c3) BETWEEN (rt0.c2) AND (t0.c0)) END);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (CASE ((t1.c0)GLOB(rt0.c1))  WHEN ((rt0.c3) BETWEEN (rt0.c1) AND (t1.c0)) THEN ((((rt0.c2)OR(rt0.c0)))OR(t1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c0)GLOB(rt0.c1))  WHEN ((rt0.c3) BETWEEN (rt0.c1) AND (t1.c0)) THEN ((((rt0.c2)OR(rt0.c0)))OR(t1.c0)) END) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (CASE ((t1.c0)GLOB(rt0.c1))  WHEN ((rt0.c3) BETWEEN (rt0.c1) AND (t1.c0)) THEN ((((rt0.c2)OR(rt0.c0)))OR(t1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c0)GLOB(rt0.c1))  WHEN ((rt0.c3) BETWEEN (rt0.c1) AND (t1.c0)) THEN ((((rt0.c2)OR(rt0.c0)))OR(t1.c0)) END) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (CASE ((t1.c0)GLOB(rt0.c1))  WHEN ((rt0.c3) BETWEEN (rt0.c1) AND (t1.c0)) THEN ((((rt0.c2)OR(rt0.c0)))OR(t1.c0)) END);
SELECT ALL * FROM rt0 WHERE (UNLIKELY(((((rt0.c1)AND(0.7871161595839293)))AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((((rt0.c1)AND(0.7871161595839293)))AND(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (UNLIKELY(((((rt0.c1)AND(0.7871161595839293)))AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((((rt0.c1)AND(0.7871161595839293)))AND(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (UNLIKELY(((((rt0.c1)AND(0.7871161595839293)))AND(rt0.c0))));
SELECT COUNT(*) FROM vt0, t1 WHERE (CAST(NULL AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE (CAST(NULL AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE (CAST(NULL AS TEXT));
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c0)) NOT BETWEEN ((0.42801116301725695)) AND ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0)) NOT BETWEEN ((0.42801116301725695)) AND ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c0)) NOT BETWEEN ((0.42801116301725695)) AND ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0)) NOT BETWEEN ((0.42801116301725695)) AND ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c0)) NOT BETWEEN ((0.42801116301725695)) AND ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))));
SELECT COUNT(*) FROM rt0, t1 FULL OUTER JOIN t0 ON CASE t1.c0  WHEN ((rt0.c2) ISNULL) THEN (('1012078461') ISNULL) END INNER JOIN vt0 ON TRIM(DISTINCT t0.c0, CAST(rt0.c3 AS NUMERIC)) WHERE (CASE WHEN CASE rt0.c2  WHEN t1.c0 THEN 'Mr' WHEN rt0.c3 THEN 0.05600994217180355 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END THEN (NOT (rt0.c0)) WHEN (~ (rt0.c0)) THEN (~ (vt0.c0)) WHEN ((rt0.c3) NOT BETWEEN (NULL) AND (rt0.c0)) THEN ((vt0.c0)AND(rt0.c3)) ELSE ((0.3970368047418734)<=(rt0.c1)) END) ORDER BY CAST('-257070974' AS INTEGER) COLLATE RTRIM DESC  NULLS LAST, (((rt0.c3) IS TRUE) IN (0.9620169242356543)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE rt0.c2  WHEN t1.c0 THEN 'Mr' WHEN rt0.c3 THEN 0.05600994217180355 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END THEN (NOT (rt0.c0)) WHEN (~ (rt0.c0)) THEN (~ (vt0.c0)) WHEN ((rt0.c3) NOT BETWEEN (NULL) AND (rt0.c0)) THEN ((vt0.c0)AND(rt0.c3)) ELSE ((0.3970368047418734)<=(rt0.c1)) END) IS TRUE)  as count FROM rt0, t1 FULL OUTER JOIN t0 ON CASE t1.c0  WHEN ((rt0.c2) ISNULL) THEN (('1012078461') ISNULL) END INNER JOIN vt0 ON TRIM(DISTINCT t0.c0, CAST(rt0.c3 AS NUMERIC)) ORDER BY CAST('-257070974' AS INTEGER) COLLATE RTRIM DESC  NULLS LAST, (((rt0.c3) IS TRUE) IN (0.9620169242356543)) ASC);
SELECT COUNT(*) FROM rt0, t1 FULL OUTER JOIN t0 ON CASE t1.c0  WHEN ((rt0.c2) ISNULL) THEN (('1012078461') ISNULL) END INNER JOIN vt0 ON TRIM(DISTINCT t0.c0, CAST(rt0.c3 AS NUMERIC)) WHERE (CASE WHEN CASE rt0.c2  WHEN t1.c0 THEN 'Mr' WHEN rt0.c3 THEN 0.05600994217180355 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END THEN (NOT (rt0.c0)) WHEN (~ (rt0.c0)) THEN (~ (vt0.c0)) WHEN ((rt0.c3) NOT BETWEEN (NULL) AND (rt0.c0)) THEN ((vt0.c0)AND(rt0.c3)) ELSE ((0.3970368047418734)<=(rt0.c1)) END) ORDER BY CAST('-257070974' AS INTEGER) COLLATE RTRIM DESC  NULLS LAST, (((rt0.c3) IS TRUE) IN (0.9620169242356543)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE rt0.c2  WHEN t1.c0 THEN 'Mr' WHEN rt0.c3 THEN 0.05600994217180355 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END THEN (NOT (rt0.c0)) WHEN (~ (rt0.c0)) THEN (~ (vt0.c0)) WHEN ((rt0.c3) NOT BETWEEN (NULL) AND (rt0.c0)) THEN ((vt0.c0)AND(rt0.c3)) ELSE ((0.3970368047418734)<=(rt0.c1)) END) IS TRUE)  as count FROM rt0, t1 FULL OUTER JOIN t0 ON CASE t1.c0  WHEN ((rt0.c2) ISNULL) THEN (('1012078461') ISNULL) END INNER JOIN vt0 ON TRIM(DISTINCT t0.c0, CAST(rt0.c3 AS NUMERIC)) ORDER BY CAST('-257070974' AS INTEGER) COLLATE RTRIM DESC  NULLS LAST, (((rt0.c3) IS TRUE) IN (0.9620169242356543)) ASC);
SELECT COUNT(*) FROM rt0, t1 FULL OUTER JOIN t0 ON CASE t1.c0  WHEN ((rt0.c2) ISNULL) THEN (('1012078461') ISNULL) END INNER JOIN vt0 ON TRIM(DISTINCT t0.c0, CAST(rt0.c3 AS NUMERIC)) WHERE (CASE WHEN CASE rt0.c2  WHEN t1.c0 THEN 'Mr' WHEN rt0.c3 THEN 0.05600994217180355 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END THEN (NOT (rt0.c0)) WHEN (~ (rt0.c0)) THEN (~ (vt0.c0)) WHEN ((rt0.c3) NOT BETWEEN (NULL) AND (rt0.c0)) THEN ((vt0.c0)AND(rt0.c3)) ELSE ((0.3970368047418734)<=(rt0.c1)) END) ORDER BY CAST('-257070974' AS INTEGER) COLLATE RTRIM DESC  NULLS LAST, (((rt0.c3) IS TRUE) IN (0.9620169242356543)) ASC;
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN vt0 ON (CAST(rt0.c2 AS TEXT) IN ()) RIGHT OUTER JOIN rt0 ON (+ (rt0.c1)) FULL OUTER JOIN t0 ON (((t1.c0))<((t1.c0))) COLLATE RTRIM WHERE (((rt0.c3 COLLATE RTRIM) NOT NULL)) ORDER BY CASE WHEN ((((rt0.c2)AND(rt0.c1)))OR(rt0.c3)) THEN (((t0.c0, vt0.c0, t1.c0)) NOT BETWEEN ((t1.c0, rt0.c2, rt0.c0)) AND ((vt0.c0, t1.c0, rt0.c2))) ELSE (~ (vt0.c0)) END  NULLS FIRST, ((((((rt0.c1, vt0.c0, vt0.c0))<>((rt0.c3, rt0.c2, t1.c0))), ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)), ((((x'')AND(rt0.c1)))OR(rt0.c1))))!=((((rt0.c3)-(rt0.c1)), CAST(t0.c0 AS TEXT), (rt0.c1 IN ()))))  NULLS LAST, CAST(NULLIF(rt0.c2, rt0.c0) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON (CAST(rt0.c2 AS TEXT) IN ()) RIGHT OUTER JOIN rt0 ON (+ (rt0.c1)) FULL OUTER JOIN t0 ON (((t1.c0))<((t1.c0))) COLLATE RTRIM ORDER BY CASE WHEN ((((rt0.c2)AND(rt0.c1)))OR(rt0.c3)) THEN (((t0.c0, vt0.c0, t1.c0)) NOT BETWEEN ((t1.c0, rt0.c2, rt0.c0)) AND ((vt0.c0, t1.c0, rt0.c2))) ELSE (~ (vt0.c0)) END  NULLS FIRST, ((((((rt0.c1, vt0.c0, vt0.c0))!=((rt0.c3, rt0.c2, t1.c0))), ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)), ((((x'')AND(rt0.c1)))OR(rt0.c1))))!=((((rt0.c3)-(rt0.c1)), CAST(t0.c0 AS TEXT), (rt0.c1 IN ()))))  NULLS LAST, CAST(NULLIF(rt0.c2, rt0.c0) AS NUMERIC) ASC  NULLS LAST);
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN vt0 ON (CAST(rt0.c2 AS TEXT) IN ()) RIGHT OUTER JOIN rt0 ON (+ (rt0.c1)) FULL OUTER JOIN t0 ON (((t1.c0))<((t1.c0))) COLLATE RTRIM WHERE (((rt0.c3 COLLATE RTRIM) NOT NULL)) ORDER BY CASE WHEN ((((rt0.c2)AND(rt0.c1)))OR(rt0.c3)) THEN (((t0.c0, vt0.c0, t1.c0)) NOT BETWEEN ((t1.c0, rt0.c2, rt0.c0)) AND ((vt0.c0, t1.c0, rt0.c2))) ELSE (~ (vt0.c0)) END  NULLS FIRST, ((((((rt0.c1, vt0.c0, vt0.c0))<>((rt0.c3, rt0.c2, t1.c0))), ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)), ((((x'')AND(rt0.c1)))OR(rt0.c1))))!=((((rt0.c3)-(rt0.c1)), CAST(t0.c0 AS TEXT), (rt0.c1 IN ()))))  NULLS LAST, CAST(NULLIF(rt0.c2, rt0.c0) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON (CAST(rt0.c2 AS TEXT) IN ()) RIGHT OUTER JOIN rt0 ON (+ (rt0.c1)) FULL OUTER JOIN t0 ON (((t1.c0))<((t1.c0))) COLLATE RTRIM ORDER BY CASE WHEN ((((rt0.c2)AND(rt0.c1)))OR(rt0.c3)) THEN (((t0.c0, vt0.c0, t1.c0)) NOT BETWEEN ((t1.c0, rt0.c2, rt0.c0)) AND ((vt0.c0, t1.c0, rt0.c2))) ELSE (~ (vt0.c0)) END  NULLS FIRST, ((((((rt0.c1, vt0.c0, vt0.c0))!=((rt0.c3, rt0.c2, t1.c0))), ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)), ((((x'')AND(rt0.c1)))OR(rt0.c1))))!=((((rt0.c3)-(rt0.c1)), CAST(t0.c0 AS TEXT), (rt0.c1 IN ()))))  NULLS LAST, CAST(NULLIF(rt0.c2, rt0.c0) AS NUMERIC) ASC  NULLS LAST);
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN vt0 ON (CAST(rt0.c2 AS TEXT) IN ()) RIGHT OUTER JOIN rt0 ON (+ (rt0.c1)) FULL OUTER JOIN t0 ON (((t1.c0))<((t1.c0))) COLLATE RTRIM WHERE (((rt0.c3 COLLATE RTRIM) NOT NULL)) ORDER BY CASE WHEN ((((rt0.c2)AND(rt0.c1)))OR(rt0.c3)) THEN (((t0.c0, vt0.c0, t1.c0)) NOT BETWEEN ((t1.c0, rt0.c2, rt0.c0)) AND ((vt0.c0, t1.c0, rt0.c2))) ELSE (~ (vt0.c0)) END  NULLS FIRST, ((((((rt0.c1, vt0.c0, vt0.c0))<>((rt0.c3, rt0.c2, t1.c0))), ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)), ((((x'')AND(rt0.c1)))OR(rt0.c1))))!=((((rt0.c3)-(rt0.c1)), CAST(t0.c0 AS TEXT), (rt0.c1 IN ()))))  NULLS LAST, CAST(NULLIF(rt0.c2, rt0.c0) AS NUMERIC) ASC  NULLS LAST;
SELECT * FROM vt0, t1 WHERE (((((t1.c0) NOTNULL)) NOT BETWEEN (((t1.c0)LIKE(vt0.c0))) AND (((-3.62913527E8) NOT BETWEEN (t1.c0) AND (t1.c0))))) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ((((((t1.c0) NOTNULL)) NOT BETWEEN (((t1.c0)LIKE(vt0.c0))) AND (((-3.62913527E8) NOT BETWEEN (t1.c0) AND (t1.c0))))) IS TRUE)  as count FROM vt0, t1 ORDER BY x'' ASC);
SELECT * FROM vt0, t1 WHERE (((((t1.c0) NOTNULL)) NOT BETWEEN (((t1.c0)LIKE(vt0.c0))) AND (((-3.62913527E8) NOT BETWEEN (t1.c0) AND (t1.c0))))) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ((((((t1.c0) NOTNULL)) NOT BETWEEN (((t1.c0)LIKE(vt0.c0))) AND (((-3.62913527E8) NOT BETWEEN (t1.c0) AND (t1.c0))))) IS TRUE)  as count FROM vt0, t1 ORDER BY x'' ASC);
SELECT * FROM vt0, t1 WHERE (((((t1.c0) NOTNULL)) NOT BETWEEN (((t1.c0)LIKE(vt0.c0))) AND (((-3.62913527E8) NOT BETWEEN (t1.c0) AND (t1.c0))))) ORDER BY x'' ASC;
SELECT * FROM t1, vt0, t0 WHERE (IFNULL((((t0.c0))<((t0.c0))), (vt0.c0 IN (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((((t0.c0))<((t0.c0))), (vt0.c0 IN (t0.c0)))) IS TRUE)  as count FROM t1, vt0, t0);
SELECT * FROM t1, vt0, t0 WHERE (IFNULL((((t0.c0))<((t0.c0))), (vt0.c0 IN (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((((t0.c0))<((t0.c0))), (vt0.c0 IN (t0.c0)))) IS TRUE)  as count FROM t1, vt0, t0);
SELECT * FROM t1, vt0, t0 WHERE (IFNULL((((t0.c0))<((t0.c0))), (vt0.c0 IN (t0.c0))));
SELECT * FROM t0, t1, vt0, rt0 WHERE ((~ (((((t0.c0)AND(rt0.c3)))AND(rt0.c1))))) ORDER BY ((((((rt0.c2, vt0.c0, rt0.c1))<((rt0.c3, t1.c0, '<엎yPY9F')))))<=((((((rt0.c3)AND(t0.c0)))AND(rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((t0.c0)AND(rt0.c3)))AND(rt0.c1))))) IS TRUE)  as count FROM t0, t1, vt0, rt0 ORDER BY ((((((rt0.c2, vt0.c0, rt0.c1))<((rt0.c3, t1.c0, '<엎yPY9F')))))<=((((((rt0.c3)AND(t0.c0)))AND(rt0.c0)))))  NULLS FIRST);
SELECT * FROM t0, t1, vt0, rt0 WHERE ((~ (((((t0.c0)AND(rt0.c3)))AND(rt0.c1))))) ORDER BY ((((((rt0.c2, vt0.c0, rt0.c1))<((rt0.c3, t1.c0, '<엎yPY9F')))))<=((((((rt0.c3)AND(t0.c0)))AND(rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((t0.c0)AND(rt0.c3)))AND(rt0.c1))))) IS TRUE)  as count FROM t0, t1, vt0, rt0 ORDER BY ((((((rt0.c2, vt0.c0, rt0.c1))<((rt0.c3, t1.c0, '<엎yPY9F')))))<=((((((rt0.c3)AND(t0.c0)))AND(rt0.c0)))))  NULLS FIRST);
SELECT * FROM t0, t1, vt0, rt0 WHERE ((~ (((((t0.c0)AND(rt0.c3)))AND(rt0.c1))))) ORDER BY ((((((rt0.c2, vt0.c0, rt0.c1))<((rt0.c3, t1.c0, '<엎yPY9F')))))<=((((((rt0.c3)AND(t0.c0)))AND(rt0.c0)))))  NULLS FIRST;
