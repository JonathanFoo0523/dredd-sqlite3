-- Time: 2024/06/10 06:02:52
-- Database: database28
-- Database version: 3.40.0
-- seed value: 3992318928
PRAGMA cache_size = 50000; -- 6ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0, matchinfo=fts3); -- 4ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=405081406,6');\n; -- 1ms;
PRAGMA automatic_index = true; -- 0ms;
PRAGMA cache_spill = -1657693645683730820; -- 0ms;
PRAGMA journal_mode = MEMORY; -- 0ms;
INSERT OR FAIL INTO rt0(c0) VALUES (4.05081406E8); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
REINDEX BINARY; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 REAL ); -- 0ms;
REINDEX; -- 0ms;
ALTER TABLE t0 ADD COLUMN c68 BLOB CHECK ( CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS TEXT)); -- 0ms;
UPDATE OR IGNORE vt1 SET c0=0.9068743341583726; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE rt0 SET c1='vle' WHERE CAST(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) AS INTEGER); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(0.5321840425536957); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.locking_mode; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('VLE'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
REINDEX; -- 0ms;
CREATE VIRTUAL TABLE rt64 USING rtree(c0, c1, c2, +c3 INTEGER ); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1523910894); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR ABORT INTO rt0(c2, c0, c1) VALUES (x'', '', x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -2000995741);\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=12'); -- 0ms;
PRAGMA main.defer_foreign_keys; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
PRAGMA short_column_names; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ANALYZE; -- 2ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
PRAGMA temp.optimize; -- 0ms;
UPDATE rt0 SET c0=NULL, c1=x'' WHERE json(rt0.c1) COLLATE BINARY; -- 0ms;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT ((rt0.c0)<<(rt0.c0)) COLLATE RTRIM FROM rt0 ORDER BY rt0.c0 ASC  NULLS LAST; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
PRAGMA main.threads; -- 1ms;
PRAGMA shrink_memory; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=-424284872,7');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 13); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 218097716); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1670752606); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 1289768784);\n; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '763'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=9'); -- 0ms;
ANALYZE main; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('-875760005'); -- 0ms;
PRAGMA application_id = -1533151696020507369; -- 0ms;
END; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA integrity_check; -- 0ms;
INSERT OR FAIL INTO vt1(c0) VALUES (NULL), (0.17823699116378522), (0Xffffffffcbccf67b); -- 0ms;
PRAGMA recursive_triggers = false; -- 0ms;
END; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((('1863342901')) NOT BETWEEN ((x'')) AND ((x'2ecd')))) NOT BETWEEN (TRIM(DISTINCT x'')) AND ((('-2000995741') IS FALSE))); -- 0ms;
REINDEX; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x''); -- 1ms;
REINDEX; -- 0ms;
ANALYZE; -- 1ms;
PRAGMA journal_size_limit; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'v0', ' sz=-424284872 unordered noskipscan'); -- 0ms;
PRAGMA temp.busy_timeout; -- 0ms;
PRAGMA checkpoint_fullfsync = false; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c1 AS INTEGER)) ORDER BY (~ (''));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY (~ ('')));
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c1 AS INTEGER)) ORDER BY (~ (''));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY (~ ('')));
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c1 AS INTEGER)) ORDER BY (~ (''));
SELECT COUNT(*) FROM v0, vt1 WHERE (((NULL) IS TRUE)) ORDER BY (((NOT (vt1.c0))) IS TRUE) ASC  NULLS FIRST, CASE WHEN LOWER(DISTINCT NULL) THEN ((((vt1.c0)AND(0.5901443453336609)))AND(v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN SQLITE_SOURCE_ID() WHEN ((v0.c0) NOT BETWEEN (NULL) AND (v0.c0)) THEN vt1.c0 ELSE (- (NULL)) END ASC  NULLS FIRST, CAST(v0.c0 COLLATE NOCASE AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS TRUE)) IS TRUE)  as count FROM v0, vt1 ORDER BY (((NOT (vt1.c0))) IS TRUE) ASC  NULLS FIRST, CASE WHEN LOWER(DISTINCT NULL) THEN ((((vt1.c0)AND(0.5901443453336609)))AND(v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN SQLITE_SOURCE_ID() WHEN ((v0.c0) NOT BETWEEN (NULL) AND (v0.c0)) THEN vt1.c0 ELSE (- (NULL)) END ASC  NULLS FIRST, CAST(v0.c0 COLLATE NOCASE AS BLOB) ASC);
SELECT COUNT(*) FROM v0, vt1 WHERE (((NULL) IS TRUE)) ORDER BY (((NOT (vt1.c0))) IS TRUE) ASC  NULLS FIRST, CASE WHEN LOWER(DISTINCT NULL) THEN ((((vt1.c0)AND(0.5901443453336609)))AND(v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN SQLITE_SOURCE_ID() WHEN ((v0.c0) NOT BETWEEN (NULL) AND (v0.c0)) THEN vt1.c0 ELSE (- (NULL)) END ASC  NULLS FIRST, CAST(v0.c0 COLLATE NOCASE AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS TRUE)) IS TRUE)  as count FROM v0, vt1 ORDER BY (((NOT (vt1.c0))) IS TRUE) ASC  NULLS FIRST, CASE WHEN LOWER(DISTINCT NULL) THEN ((((vt1.c0)AND(0.5901443453336609)))AND(v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN SQLITE_SOURCE_ID() WHEN ((v0.c0) NOT BETWEEN (NULL) AND (v0.c0)) THEN vt1.c0 ELSE (- (NULL)) END ASC  NULLS FIRST, CAST(v0.c0 COLLATE NOCASE AS BLOB) ASC);
SELECT COUNT(*) FROM v0, vt1 WHERE (((NULL) IS TRUE)) ORDER BY (((NOT (vt1.c0))) IS TRUE) ASC  NULLS FIRST, CASE WHEN LOWER(DISTINCT NULL) THEN ((((vt1.c0)AND(0.5901443453336609)))AND(v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN SQLITE_SOURCE_ID() WHEN ((v0.c0) NOT BETWEEN (NULL) AND (v0.c0)) THEN vt1.c0 ELSE (- (NULL)) END ASC  NULLS FIRST, CAST(v0.c0 COLLATE NOCASE AS BLOB) ASC;
SELECT ALL * FROM vt1 WHERE (((vt1.c0) NOT NULL) COLLATE NOCASE) ORDER BY (((~ (vt1.c0)))AND((vt1.c0 IN ()))) DESC  NULLS FIRST, highlight((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0))), (('c/\OZ') BETWEEN ('') AND (vt1.c0)), vt1.c0, ((vt1.c0)<<(vt1.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY (((~ (vt1.c0)))AND((vt1.c0 IN ()))) DESC  NULLS FIRST, highlight((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0))), (('c/\OZ') BETWEEN ('') AND (vt1.c0)), vt1.c0, ((vt1.c0)<<(vt1.c0))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((vt1.c0) NOT NULL) COLLATE NOCASE) ORDER BY (((~ (vt1.c0)))AND((vt1.c0 IN ()))) DESC  NULLS FIRST, highlight((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0))), (('c/\OZ') BETWEEN ('') AND (vt1.c0)), vt1.c0, ((vt1.c0)<<(vt1.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY (((~ (vt1.c0)))AND((vt1.c0 IN ()))) DESC  NULLS FIRST, highlight((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0))), (('c/\OZ') BETWEEN ('') AND (vt1.c0)), vt1.c0, ((vt1.c0)<<(vt1.c0))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, v0, rt0 WHERE ((((((v0.c0 IN ()))OR(((1391748151) IS FALSE))))AND(NULL))) ORDER BY LIKELIHOOD(DISTINCT CASE rt0.c0  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c2 END, 0.05103311344443984) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0 IN ()))OR(((1391748151) IS FALSE))))AND(NULL))) IS TRUE)  as count FROM vt1, v0, rt0 ORDER BY LIKELIHOOD(DISTINCT CASE rt0.c0  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c2 END, 0.05103311344443984) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, v0, rt0 WHERE ((((((v0.c0 IN ()))OR(((1391748151) IS FALSE))))AND(NULL))) ORDER BY LIKELIHOOD(DISTINCT CASE rt0.c0  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c2 END, 0.05103311344443984) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0 IN ()))OR(((1391748151) IS FALSE))))AND(NULL))) IS TRUE)  as count FROM vt1, v0, rt0 ORDER BY LIKELIHOOD(DISTINCT CASE rt0.c0  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c2 END, 0.05103311344443984) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, v0, rt0 WHERE ((((((v0.c0 IN ()))OR(((1391748151) IS FALSE))))AND(NULL))) ORDER BY LIKELIHOOD(DISTINCT CASE rt0.c0  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c2 END, 0.05103311344443984) ASC  NULLS FIRST;
SELECT ALL * FROM v0, rt0, vt1 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, rt0, vt1);
SELECT ALL * FROM v0, rt0, vt1 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, rt0, vt1);
SELECT ALL * FROM v0, rt0, vt1 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (CAST(LENGTH(vt1.c0) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(LENGTH(vt1.c0) AS INTEGER)) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (CAST(LENGTH(vt1.c0) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(LENGTH(vt1.c0) AS INTEGER)) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (CAST(LENGTH(vt1.c0) AS INTEGER));
SELECT ALL * FROM vt1, v0 WHERE (CASE WHEN v0.c0 THEN '' ELSE CASE WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN 0x52f46437 ELSE vt1.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN '' ELSE CASE WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN 0X52f46437 ELSE vt1.c0 END END) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE (CASE WHEN v0.c0 THEN '' ELSE CASE WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN 0x52f46437 ELSE vt1.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN '' ELSE CASE WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN 0X52f46437 ELSE vt1.c0 END END) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE (CASE WHEN v0.c0 THEN '' ELSE CASE WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN 0x52f46437 ELSE vt1.c0 END END);
SELECT * FROM rt0, v0 WHERE (((((CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 END)OR((rt0.c1 IN ()))))AND(((v0.c0) ISNULL)))) ORDER BY CASE ((rt0.c1)IS NOT('1207868997'))  WHEN (((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN ((rt0.c1)>=(0x1196085f)) WHEN ((rt0.c0) NOT BETWEEN (v0.c0) AND (0.7932860534332793)) THEN (rt0.c0 IN ()) WHEN LIKELIHOOD(rt0.c0, 0.6108823376542611) THEN (NOT (rt0.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 END)OR((rt0.c1 IN ()))))AND(((v0.c0) ISNULL)))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE ((rt0.c1)IS NOT('1207868997'))  WHEN (((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN ((rt0.c1)>=(0X1196085f)) WHEN ((rt0.c0) NOT BETWEEN (v0.c0) AND (0.7932860534332793)) THEN (rt0.c0 IN ()) WHEN LIKELIHOOD(rt0.c0, 0.6108823376542611) THEN (NOT (rt0.c1)) END ASC  NULLS LAST);
SELECT * FROM rt0, v0 WHERE (((((CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 END)OR((rt0.c1 IN ()))))AND(((v0.c0) ISNULL)))) ORDER BY CASE ((rt0.c1)IS NOT('1207868997'))  WHEN (((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN ((rt0.c1)>=(0x1196085f)) WHEN ((rt0.c0) NOT BETWEEN (v0.c0) AND (0.7932860534332793)) THEN (rt0.c0 IN ()) WHEN LIKELIHOOD(rt0.c0, 0.6108823376542611) THEN (NOT (rt0.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 END)OR((rt0.c1 IN ()))))AND(((v0.c0) ISNULL)))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE ((rt0.c1)IS NOT('1207868997'))  WHEN (((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN ((rt0.c1)>=(0X1196085f)) WHEN ((rt0.c0) NOT BETWEEN (v0.c0) AND (0.7932860534332793)) THEN (rt0.c0 IN ()) WHEN LIKELIHOOD(rt0.c0, 0.6108823376542611) THEN (NOT (rt0.c1)) END ASC  NULLS LAST);
SELECT * FROM rt0, v0 WHERE (((((CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 END)OR((rt0.c1 IN ()))))AND(((v0.c0) ISNULL)))) ORDER BY CASE ((rt0.c1)IS NOT('1207868997'))  WHEN (((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN ((rt0.c1)>=(0x1196085f)) WHEN ((rt0.c0) NOT BETWEEN (v0.c0) AND (0.7932860534332793)) THEN (rt0.c0 IN ()) WHEN LIKELIHOOD(rt0.c0, 0.6108823376542611) THEN (NOT (rt0.c1)) END ASC  NULLS LAST;
SELECT ALL * FROM v0, vt1 INNER JOIN rt0 ON (+ (((v0.c0) NOT NULL))) WHERE ((((vt1.c0 IN ()))||(((rt0.c2)/(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))||(((rt0.c2)/(rt0.c2))))) IS TRUE)  as count FROM v0, vt1 INNER JOIN rt0 ON (+ (((v0.c0) NOT NULL))));
SELECT ALL * FROM v0, vt1 INNER JOIN rt0 ON (+ (((v0.c0) NOT NULL))) WHERE ((((vt1.c0 IN ()))||(((rt0.c2)/(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))||(((rt0.c2)/(rt0.c2))))) IS TRUE)  as count FROM v0, vt1 INNER JOIN rt0 ON (+ (((v0.c0) NOT NULL))));
SELECT ALL * FROM v0, vt1 INNER JOIN rt0 ON (+ (((v0.c0) NOT NULL))) WHERE ((((vt1.c0 IN ()))||(((rt0.c2)/(rt0.c2)))));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON rt0.c1 WHERE (IFNULL(DISTINCT ((((vt1.c0)OR(rt0.c1)))AND(rt0.c0)), ((rt0.c1) BETWEEN (rt0.c2) AND (0.5321840425536957))));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT ((((vt1.c0)OR(rt0.c1)))AND(rt0.c0)), ((rt0.c1) BETWEEN (rt0.c2) AND (0.5321840425536957)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON rt0.c1);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON rt0.c1 WHERE (IFNULL(DISTINCT ((((vt1.c0)OR(rt0.c1)))AND(rt0.c0)), ((rt0.c1) BETWEEN (rt0.c2) AND (0.5321840425536957))));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT ((((vt1.c0)OR(rt0.c1)))AND(rt0.c0)), ((rt0.c1) BETWEEN (rt0.c2) AND (0.5321840425536957)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON rt0.c1);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON rt0.c1 WHERE (IFNULL(DISTINCT ((((vt1.c0)OR(rt0.c1)))AND(rt0.c0)), ((rt0.c1) BETWEEN (rt0.c2) AND (0.5321840425536957))));
SELECT ALL * FROM vt1, v0 WHERE ('1207868997') ORDER BY v0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('1207868997') IS TRUE)  as count FROM vt1 NOT INDEXED, v0 ORDER BY v0.c0 DESC  NULLS LAST);
SELECT ALL * FROM vt1, v0 WHERE ('1207868997') ORDER BY v0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('1207868997') IS TRUE)  as count FROM vt1 NOT INDEXED, v0 ORDER BY v0.c0 DESC  NULLS LAST);
SELECT ALL * FROM vt1, v0 WHERE ('1207868997') ORDER BY v0.c0 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))OR(((vt1.c0) NOT NULL))))OR((((vt1.c0))>((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))OR(((vt1.c0) NOT NULL))))OR((((vt1.c0))>((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))OR(((vt1.c0) NOT NULL))))OR((((vt1.c0))>((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))OR(((vt1.c0) NOT NULL))))OR((((vt1.c0))>((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))OR(((vt1.c0) NOT NULL))))OR((((vt1.c0))>((vt1.c0))))));
SELECT * FROM vt1 WHERE (((0X18250d3e) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (vt1.c0 COLLATE RTRIM))) ORDER BY json_quote(UPPER(vt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((((0x18250d3e) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 ORDER BY json_quote(UPPER(vt1.c0)) DESC);
SELECT * FROM vt1 WHERE (((0X18250d3e) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (vt1.c0 COLLATE RTRIM))) ORDER BY json_quote(UPPER(vt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((((0x18250d3e) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 ORDER BY json_quote(UPPER(vt1.c0)) DESC);
SELECT * FROM vt1 WHERE (((0X18250d3e) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (vt1.c0 COLLATE RTRIM))) ORDER BY json_quote(UPPER(vt1.c0)) DESC;
SELECT * FROM v0, vt1 WHERE (((vt1.c0 IN (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 IN (vt1.c0)) IN ())) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE (((vt1.c0 IN (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 IN (vt1.c0)) IN ())) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE (((vt1.c0 IN (vt1.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE (TRIM(UPPER(vt1.c0))) ORDER BY (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, IFNULL(DISTINCT NULL, vt1.c0), vt1.c0 COLLATE BINARY))=((((vt1.c0)|(vt1.c0)), (- (vt1.c0)), ((vt1.c0)LIKE(vt1.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(UPPER(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, IFNULL(DISTINCT NULL, vt1.c0), vt1.c0 COLLATE BINARY))==((((vt1.c0)|(vt1.c0)), (- (vt1.c0)), ((vt1.c0)LIKE(vt1.c0))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (TRIM(UPPER(vt1.c0))) ORDER BY (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, IFNULL(DISTINCT NULL, vt1.c0), vt1.c0 COLLATE BINARY))=((((vt1.c0)|(vt1.c0)), (- (vt1.c0)), ((vt1.c0)LIKE(vt1.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(UPPER(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, IFNULL(DISTINCT NULL, vt1.c0), vt1.c0 COLLATE BINARY))==((((vt1.c0)|(vt1.c0)), (- (vt1.c0)), ((vt1.c0)LIKE(vt1.c0))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (TRIM(UPPER(vt1.c0))) ORDER BY (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, IFNULL(DISTINCT NULL, vt1.c0), vt1.c0 COLLATE BINARY))=((((vt1.c0)|(vt1.c0)), (- (vt1.c0)), ((vt1.c0)LIKE(vt1.c0))))) DESC  NULLS LAST;
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c2) IS FALSE)) BETWEEN ((rt0.c2 IN ())) AND (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY rt0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS FALSE)) BETWEEN ((rt0.c2 IN ())) AND (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c2 ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c2) IS FALSE)) BETWEEN ((rt0.c2 IN ())) AND (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY rt0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS FALSE)) BETWEEN ((rt0.c2 IN ())) AND (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c2 ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c2) IS FALSE)) BETWEEN ((rt0.c2 IN ())) AND (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY rt0.c2 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((CAST(v0.c0 AS NUMERIC))<=(((x'') ISNULL)))) ORDER BY v0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS NUMERIC))<=(((x'') ISNULL)))) IS TRUE)  as count FROM v0, rt0 ORDER BY v0.c0 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((CAST(v0.c0 AS NUMERIC))<=(((x'') ISNULL)))) ORDER BY v0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS NUMERIC))<=(((x'') ISNULL)))) IS TRUE)  as count FROM v0, rt0 ORDER BY v0.c0 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((CAST(v0.c0 AS NUMERIC))<=(((x'') ISNULL)))) ORDER BY v0.c0 ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((~ (((rt0.c1)/(rt0.c1))))) ORDER BY ((rt0.c0) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c1)/(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0) ISNULL)  NULLS FIRST);
SELECT * FROM rt0 WHERE ((~ (((rt0.c1)/(rt0.c1))))) ORDER BY ((rt0.c0) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c1)/(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0) ISNULL)  NULLS FIRST);
SELECT * FROM rt0 WHERE ((~ (((rt0.c1)/(rt0.c1))))) ORDER BY ((rt0.c0) ISNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c1)*(rt0.c2)))%(((rt0.c2)>=(x'')))) WHERE (((rt0.c1) NOTNULL)) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOTNULL)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c1)*(rt0.c2)))%(((rt0.c2)>=(x'')))) ORDER BY rt0.c2 ASC);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c1)*(rt0.c2)))%(((rt0.c2)>=(x'')))) WHERE (((rt0.c1) NOTNULL)) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOTNULL)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c1)*(rt0.c2)))%(((rt0.c2)>=(x'')))) ORDER BY rt0.c2 ASC);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c1)*(rt0.c2)))%(((rt0.c2)>=(x'')))) WHERE (((rt0.c1) NOTNULL)) ORDER BY rt0.c2 ASC;
SELECT * FROM vt1, v0, rt0 WHERE (((((rt0.c1)IS NOT(v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)IS NOT(v0.c0))) NOTNULL)) IS TRUE)  as count FROM vt1, v0, rt0);
SELECT * FROM vt1, v0, rt0 WHERE (((((rt0.c1)IS NOT(v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)IS NOT(v0.c0))) NOTNULL)) IS TRUE)  as count FROM vt1, v0, rt0);
SELECT * FROM vt1, v0, rt0 WHERE (((((rt0.c1)IS NOT(v0.c0))) NOTNULL));
SELECT * FROM rt0, vt1 RIGHT OUTER JOIN v0 ON ((TRIM(rt0.c2, v0.c0))|(((1627525309) NOT NULL))) WHERE ('-1818929848') ORDER BY CAST(((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)) AS REAL)  NULLS FIRST, (((((v0.c0))==((rt0.c1))))LIKE(((((rt0.c2)OR(vt1.c0)))OR(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (('-1818929848') IS TRUE)  as count FROM rt0, vt1 RIGHT OUTER JOIN v0 ON ((TRIM(rt0.c2, v0.c0))|(((1627525309) NOT NULL))) ORDER BY CAST(((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)) AS REAL)  NULLS FIRST, (((((v0.c0))==((rt0.c1))))LIKE(((((rt0.c2)OR(vt1.c0)))OR(vt1.c0)))) DESC);
SELECT * FROM rt0, vt1 RIGHT OUTER JOIN v0 ON ((TRIM(rt0.c2, v0.c0))|(((1627525309) NOT NULL))) WHERE ('-1818929848') ORDER BY CAST(((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)) AS REAL)  NULLS FIRST, (((((v0.c0))==((rt0.c1))))LIKE(((((rt0.c2)OR(vt1.c0)))OR(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (('-1818929848') IS TRUE)  as count FROM rt0, vt1 RIGHT OUTER JOIN v0 ON ((TRIM(rt0.c2, v0.c0))|(((1627525309) NOT NULL))) ORDER BY CAST(((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)) AS REAL)  NULLS FIRST, (((((v0.c0))==((rt0.c1))))LIKE(((((rt0.c2)OR(vt1.c0)))OR(vt1.c0)))) DESC);
SELECT * FROM rt0, vt1 RIGHT OUTER JOIN v0 ON ((TRIM(rt0.c2, v0.c0))|(((1627525309) NOT NULL))) WHERE ('-1818929848') ORDER BY CAST(((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)) AS REAL)  NULLS FIRST, (((((v0.c0))==((rt0.c1))))LIKE(((((rt0.c2)OR(vt1.c0)))OR(vt1.c0)))) DESC;
SELECT ALL * FROM vt1, rt0 RIGHT OUTER JOIN v0 ON x'' WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c0)))GLOB((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c0)))GLOB((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN v0 ON x'');
SELECT ALL * FROM vt1, rt0 RIGHT OUTER JOIN v0 ON x'' WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c0)))GLOB((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c0)))GLOB((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN v0 ON x'');
SELECT ALL * FROM vt1, rt0 RIGHT OUTER JOIN v0 ON x'' WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c0)))GLOB((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))));
SELECT COUNT(*) FROM vt1, rt0 WHERE ((CASE WHEN rt0.c0 THEN vt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c0 THEN vt1.c0 END IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((CASE WHEN rt0.c0 THEN vt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c0 THEN vt1.c0 END IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((CASE WHEN rt0.c0 THEN vt1.c0 END IN ()));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(((vt1.c0)LIKE(v0.c0)) AS NUMERIC) CROSS JOIN v0 ON rt0.c2 WHERE (0.8504300822100801) ORDER BY (- ((v0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((0.8504300822100801) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(((vt1.c0)LIKE(v0.c0)) AS NUMERIC) CROSS JOIN v0 ON rt0.c2 ORDER BY (- ((v0.c0 IN ()))) ASC);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(((vt1.c0)LIKE(v0.c0)) AS NUMERIC) CROSS JOIN v0 ON rt0.c2 WHERE (0.8504300822100801) ORDER BY (- ((v0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((0.8504300822100801) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(((vt1.c0)LIKE(v0.c0)) AS NUMERIC) CROSS JOIN v0 ON rt0.c2 ORDER BY (- ((v0.c0 IN ()))) ASC);
SELECT * FROM v0 FULL OUTER JOIN rt0 ON ((ROUND(rt0.c0, rt0.c0)) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0))) AND (CASE rt0.c2  WHEN '0.7932860534332793' THEN rt0.c0 END)) CROSS JOIN vt1 ON (CASE WHEN rt0.c0 THEN '' ELSE rt0.c1 END IN ()) WHERE (((((vt1.c0) NOTNULL))-(TYPEOF(DISTINCT v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOTNULL))-(TYPEOF(DISTINCT v0.c0)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((ROUND(rt0.c0, rt0.c0)) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0))) AND (CASE rt0.c2  WHEN '0.7932860534332793' THEN rt0.c0 END)) CROSS JOIN vt1 ON (CASE WHEN rt0.c0 THEN '' ELSE rt0.c1 END IN ()));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON ((ROUND(rt0.c0, rt0.c0)) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0))) AND (CASE rt0.c2  WHEN '0.7932860534332793' THEN rt0.c0 END)) CROSS JOIN vt1 ON (CASE WHEN rt0.c0 THEN '' ELSE rt0.c1 END IN ()) WHERE (((((vt1.c0) NOTNULL))-(TYPEOF(DISTINCT v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOTNULL))-(TYPEOF(DISTINCT v0.c0)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((ROUND(rt0.c0, rt0.c0)) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0))) AND (CASE rt0.c2  WHEN '0.7932860534332793' THEN rt0.c0 END)) CROSS JOIN vt1 ON (CASE WHEN rt0.c0 THEN '' ELSE rt0.c1 END IN ()));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON ((ROUND(rt0.c0, rt0.c0)) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0))) AND (CASE rt0.c2  WHEN '0.7932860534332793' THEN rt0.c0 END)) CROSS JOIN vt1 ON (CASE WHEN rt0.c0 THEN '' ELSE rt0.c1 END IN ()) WHERE (((((vt1.c0) NOTNULL))-(TYPEOF(DISTINCT v0.c0))));
SELECT * FROM rt0, v0, vt1 WHERE (NULL) ORDER BY (+ (CAST(vt1.c0 AS BLOB))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY (+ (CAST(vt1.c0 AS BLOB))) DESC  NULLS FIRST);
SELECT * FROM rt0, v0, vt1 WHERE (NULL) ORDER BY (+ (CAST(vt1.c0 AS BLOB))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY (+ (CAST(vt1.c0 AS BLOB))) DESC  NULLS FIRST);
SELECT * FROM rt0, v0, vt1 WHERE (NULL) ORDER BY (+ (CAST(vt1.c0 AS BLOB))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, v0 LEFT OUTER JOIN rt0 ON CAST(((v0.c0)<=(rt0.c2)) AS NUMERIC) WHERE ('-2000995741') ORDER BY CAST((vt1.c0 IN (rt0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL (('-2000995741') IS TRUE)  as count FROM vt1 NOT INDEXED, v0 LEFT OUTER JOIN rt0 ON CAST(((v0.c0)<=(rt0.c2)) AS NUMERIC) ORDER BY CAST((vt1.c0 IN (rt0.c0)) AS TEXT));
SELECT COUNT(*) FROM vt1, v0 LEFT OUTER JOIN rt0 ON CAST(((v0.c0)<=(rt0.c2)) AS NUMERIC) WHERE ('-2000995741') ORDER BY CAST((vt1.c0 IN (rt0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL (('-2000995741') IS TRUE)  as count FROM vt1 NOT INDEXED, v0 LEFT OUTER JOIN rt0 ON CAST(((v0.c0)<=(rt0.c2)) AS NUMERIC) ORDER BY CAST((vt1.c0 IN (rt0.c0)) AS TEXT));
SELECT COUNT(*) FROM vt1, v0 LEFT OUTER JOIN rt0 ON CAST(((v0.c0)<=(rt0.c2)) AS NUMERIC) WHERE ('-2000995741') ORDER BY CAST((vt1.c0 IN (rt0.c0)) AS TEXT);
SELECT * FROM vt1, v0 WHERE ((((- (v0.c0)))OR(CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((- (v0.c0)))OR(CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE ((((- (v0.c0)))OR(CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((- (v0.c0)))OR(CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE ((((- (v0.c0)))OR(CAST(v0.c0 AS BLOB))));
SELECT * FROM vt1 WHERE (((vt1.c0) BETWEEN (0.5901443453336609) AND ((NOT (NULL))))) ORDER BY CAST(vt1.c0 AS TEXT) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN (0.5901443453336609) AND ((NOT (NULL))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c0 AS TEXT) COLLATE BINARY ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (((vt1.c0) BETWEEN (0.5901443453336609) AND ((NOT (NULL))))) ORDER BY CAST(vt1.c0 AS TEXT) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN (0.5901443453336609) AND ((NOT (NULL))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c0 AS TEXT) COLLATE BINARY ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (((vt1.c0) BETWEEN (0.5901443453336609) AND ((NOT (NULL))))) ORDER BY CAST(vt1.c0 AS TEXT) COLLATE BINARY ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt1 WHERE (NULL) ORDER BY TRIM(((((v0.c0)AND(vt1.c0)))AND(vt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, vt1 ORDER BY TRIM(((((v0.c0)AND(vt1.c0)))AND(vt1.c0))) ASC);
SELECT COUNT(*) FROM v0, vt1 WHERE (NULL) ORDER BY TRIM(((((v0.c0)AND(vt1.c0)))AND(vt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, vt1 ORDER BY TRIM(((((v0.c0)AND(vt1.c0)))AND(vt1.c0))) ASC);
SELECT COUNT(*) FROM v0, vt1 WHERE (NULL) ORDER BY TRIM(((((v0.c0)AND(vt1.c0)))AND(vt1.c0))) ASC;
SELECT COUNT(*) FROM vt1 WHERE (((x'4785') NOTNULL));
SELECT SUM(count) FROM (SELECT ((((x'4785') NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((x'4785') NOTNULL));
SELECT SUM(count) FROM (SELECT ((((x'4785') NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((x'4785') NOTNULL));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (rt0.c0);
SELECT ALL * FROM v0, vt1 WHERE (((NULL COLLATE BINARY)OR(((((vt1.c0)OR(v0.c0)))AND(v0.c0))))) ORDER BY ((CAST(vt1.c0 AS REAL))IS NOT(PRINTF(v0.c0, NULL, v0.c0)))  NULLS FIRST, ((((v0.c0)-(vt1.c0))) NOT BETWEEN (v0.c0) AND (((v0.c0)%(vt1.c0)))), INSTR(((vt1.c0)-(vt1.c0)), v0.c0 COLLATE NOCASE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL COLLATE BINARY)OR(((((vt1.c0)OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0, vt1 ORDER BY ((CAST(vt1.c0 AS REAL))IS NOT(PRINTF(v0.c0, NULL, v0.c0)))  NULLS FIRST, ((((v0.c0)-(vt1.c0))) NOT BETWEEN (v0.c0) AND (((v0.c0)%(vt1.c0)))), INSTR(((vt1.c0)-(vt1.c0)), v0.c0 COLLATE NOCASE) DESC  NULLS LAST);
SELECT ALL * FROM v0, vt1 WHERE (((NULL COLLATE BINARY)OR(((((vt1.c0)OR(v0.c0)))AND(v0.c0))))) ORDER BY ((CAST(vt1.c0 AS REAL))IS NOT(PRINTF(v0.c0, NULL, v0.c0)))  NULLS FIRST, ((((v0.c0)-(vt1.c0))) NOT BETWEEN (v0.c0) AND (((v0.c0)%(vt1.c0)))), INSTR(((vt1.c0)-(vt1.c0)), v0.c0 COLLATE NOCASE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL COLLATE BINARY)OR(((((vt1.c0)OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0, vt1 ORDER BY ((CAST(vt1.c0 AS REAL))IS NOT(PRINTF(v0.c0, NULL, v0.c0)))  NULLS FIRST, ((((v0.c0)-(vt1.c0))) NOT BETWEEN (v0.c0) AND (((v0.c0)%(vt1.c0)))), INSTR(((vt1.c0)-(vt1.c0)), v0.c0 COLLATE NOCASE) DESC  NULLS LAST);
SELECT ALL * FROM v0, vt1 WHERE (((NULL COLLATE BINARY)OR(((((vt1.c0)OR(v0.c0)))AND(v0.c0))))) ORDER BY ((CAST(vt1.c0 AS REAL))IS NOT(PRINTF(v0.c0, NULL, v0.c0)))  NULLS FIRST, ((((v0.c0)-(vt1.c0))) NOT BETWEEN (v0.c0) AND (((v0.c0)%(vt1.c0)))), INSTR(((vt1.c0)-(vt1.c0)), v0.c0 COLLATE NOCASE) DESC  NULLS LAST;
SELECT * FROM v0 WHERE ((((((v0.c0))>((v0.c0)))) BETWEEN ((((v0.c0))>=((v0.c0)))) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) ORDER BY CAST((+ (v0.c0)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))>((v0.c0)))) BETWEEN ((((v0.c0))>=((v0.c0)))) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY CAST((+ (v0.c0)) AS TEXT)  NULLS FIRST);
SELECT * FROM v0 WHERE ((((((v0.c0))>((v0.c0)))) BETWEEN ((((v0.c0))>=((v0.c0)))) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) ORDER BY CAST((+ (v0.c0)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))>((v0.c0)))) BETWEEN ((((v0.c0))>=((v0.c0)))) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY CAST((+ (v0.c0)) AS TEXT)  NULLS FIRST);
SELECT * FROM v0 WHERE ((((((v0.c0))>((v0.c0)))) BETWEEN ((((v0.c0))>=((v0.c0)))) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) ORDER BY CAST((+ (v0.c0)) AS TEXT)  NULLS FIRST;
SELECT ALL * FROM v0, rt0 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (TOTAL_CHANGES());
SELECT * FROM vt1 WHERE (json_array_length(((vt1.c0)=(vt1.c0)), ((vt1.c0)!=(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((json_array_length(((vt1.c0)=(vt1.c0)), ((vt1.c0)<>(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (json_array_length(((vt1.c0)=(vt1.c0)), ((vt1.c0)!=(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((json_array_length(((vt1.c0)=(vt1.c0)), ((vt1.c0)<>(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((((x'432234312170' IN (vt1.c0)))GLOB(((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((x'432234312170' IN (vt1.c0)))GLOB(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((((x'432234312170' IN (vt1.c0)))GLOB(((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((x'432234312170' IN (vt1.c0)))GLOB(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((((x'432234312170' IN (vt1.c0)))GLOB(((vt1.c0) NOTNULL))));
SELECT * FROM v0, vt1, rt0 WHERE ('1391748151');
SELECT SUM(count) FROM (SELECT ALL (('1391748151') IS TRUE)  as count FROM v0, vt1, rt0);
SELECT * FROM v0, vt1, rt0 WHERE ('1391748151');
SELECT SUM(count) FROM (SELECT ALL (('1391748151') IS TRUE)  as count FROM v0, vt1, rt0);
SELECT * FROM v0, vt1, rt0 WHERE ('1391748151');
SELECT ALL COUNT(*) FROM v0, vt1, rt0 WHERE ((((rt0.c0)) BETWEEN (((1757580024 IN (v0.c0)))) AND ((NULL)))) ORDER BY CASE (+ (vt1.c0))  WHEN json_patch(rt0.c0, rt0.c0) THEN ((((((((v0.c0)AND(rt0.c0)))AND(rt0.c1)))OR(vt1.c0)))AND(rt0.c1)) ELSE (~ (rt0.c1)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN (((1757580024 IN (v0.c0)))) AND ((NULL)))) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY CASE (+ (vt1.c0))  WHEN json_patch(rt0.c0, rt0.c0) THEN ((((((((v0.c0)AND(rt0.c0)))AND(rt0.c1)))OR(vt1.c0)))AND(rt0.c1)) ELSE (~ (rt0.c1)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt1, rt0 WHERE ((((rt0.c0)) BETWEEN (((1757580024 IN (v0.c0)))) AND ((NULL)))) ORDER BY CASE (+ (vt1.c0))  WHEN json_patch(rt0.c0, rt0.c0) THEN ((((((((v0.c0)AND(rt0.c0)))AND(rt0.c1)))OR(vt1.c0)))AND(rt0.c1)) ELSE (~ (rt0.c1)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN (((1757580024 IN (v0.c0)))) AND ((NULL)))) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY CASE (+ (vt1.c0))  WHEN json_patch(rt0.c0, rt0.c0) THEN ((((((((v0.c0)AND(rt0.c0)))AND(rt0.c1)))OR(vt1.c0)))AND(rt0.c1)) ELSE (~ (rt0.c1)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt1, rt0 WHERE ((((rt0.c0)) BETWEEN (((1757580024 IN (v0.c0)))) AND ((NULL)))) ORDER BY CASE (+ (vt1.c0))  WHEN json_patch(rt0.c0, rt0.c0) THEN ((((((((v0.c0)AND(rt0.c0)))AND(rt0.c1)))OR(vt1.c0)))AND(rt0.c1)) ELSE (~ (rt0.c1)) END ASC  NULLS FIRST;
SELECT ALL * FROM rt0, v0, vt1 WHERE ((((('yq') NOTNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((('yq') NOTNULL)) IS TRUE)) IS TRUE)  as count FROM rt0, v0, vt1);
SELECT ALL * FROM rt0, v0, vt1 WHERE ((((('yq') NOTNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((('yq') NOTNULL)) IS TRUE)) IS TRUE)  as count FROM rt0, v0, vt1);
SELECT ALL * FROM rt0, v0, vt1 WHERE ((((('yq') NOTNULL)) IS TRUE));
SELECT ALL * FROM rt0 WHERE (INSTR((((rt0.c0))<=((rt0.c2))), rt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((INSTR((((rt0.c0))<=((rt0.c2))), rt0.c0)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (INSTR((((rt0.c0))<=((rt0.c2))), rt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((INSTR((((rt0.c0))<=((rt0.c2))), rt0.c0)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (INSTR((((rt0.c0))<=((rt0.c2))), rt0.c0));
SELECT * FROM rt0 WHERE (((((CAST(rt0.c2 AS BLOB))OR((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))))AND(0.10031767324384311))) ORDER BY ((((rt0.c0) NOT NULL))+(load_extension(rt0.c2))) DESC  NULLS LAST, ((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2))) NOT BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) AND ((+ (rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c2 AS BLOB))OR((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))))AND(0.10031767324384311))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT NULL))+(load_extension(rt0.c2))) DESC  NULLS LAST, ((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2))) NOT BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) AND ((+ (rt0.c0)))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((CAST(rt0.c2 AS BLOB))OR((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))))AND(0.10031767324384311))) ORDER BY ((((rt0.c0) NOT NULL))+(load_extension(rt0.c2))) DESC  NULLS LAST, ((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2))) NOT BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) AND ((+ (rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c2 AS BLOB))OR((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))))AND(0.10031767324384311))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT NULL))+(load_extension(rt0.c2))) DESC  NULLS LAST, ((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2))) NOT BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) AND ((+ (rt0.c0)))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((CAST(rt0.c2 AS BLOB))OR((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))))AND(0.10031767324384311))) ORDER BY ((((rt0.c0) NOT NULL))+(load_extension(rt0.c2))) DESC  NULLS LAST, ((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2))) NOT BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) AND ((+ (rt0.c0)))) DESC  NULLS FIRST;
SELECT * FROM vt1, v0 WHERE (((((v0.c0)=(v0.c0)))<>(ABS(DISTINCT vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)=(v0.c0)))!=(ABS(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE (((((v0.c0)=(v0.c0)))<>(ABS(DISTINCT vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)=(v0.c0)))!=(ABS(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE (((((v0.c0)=(v0.c0)))<>(ABS(DISTINCT vt1.c0))));
SELECT ALL * FROM v0, rt0, vt1 WHERE (0x52f46437);
SELECT SUM(count) FROM (SELECT ALL ((0X52f46437) IS TRUE)  as count FROM v0, rt0, vt1);
SELECT ALL * FROM v0, rt0, vt1 WHERE (0x52f46437);
SELECT SUM(count) FROM (SELECT ALL ((0X52f46437) IS TRUE)  as count FROM v0, rt0, vt1);
SELECT ALL * FROM v0, rt0, vt1 WHERE (0x52f46437);
SELECT ALL * FROM v0, rt0, vt1 WHERE (((((rt0.c2)IS(rt0.c2))) BETWEEN (rt0.c1 COLLATE NOCASE) AND (MAX(v0.c0, '98654150')))) ORDER BY (((((vt1.c0)AND(rt0.c1)), (vt1.c0 IN ()), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))))=(((v0.c0 IN (v0.c0)), (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((vt1.c0))), (~ (v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)IS(rt0.c2))) BETWEEN (rt0.c1 COLLATE NOCASE) AND (MAX(v0.c0, '98654150')))) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY (((((vt1.c0)AND(rt0.c1)), (vt1.c0 IN ()), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))))=(((v0.c0 IN (v0.c0)), (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((vt1.c0))), (~ (v0.c0))))) DESC);
SELECT ALL * FROM v0, rt0, vt1 WHERE (((((rt0.c2)IS(rt0.c2))) BETWEEN (rt0.c1 COLLATE NOCASE) AND (MAX(v0.c0, '98654150')))) ORDER BY (((((vt1.c0)AND(rt0.c1)), (vt1.c0 IN ()), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))))=(((v0.c0 IN (v0.c0)), (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((vt1.c0))), (~ (v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)IS(rt0.c2))) BETWEEN (rt0.c1 COLLATE NOCASE) AND (MAX(v0.c0, '98654150')))) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY (((((vt1.c0)AND(rt0.c1)), (vt1.c0 IN ()), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))))=(((v0.c0 IN (v0.c0)), (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((vt1.c0))), (~ (v0.c0))))) DESC);
SELECT ALL * FROM v0, rt0, vt1 WHERE (((((rt0.c2)IS(rt0.c2))) BETWEEN (rt0.c1 COLLATE NOCASE) AND (MAX(v0.c0, '98654150')))) ORDER BY (((((vt1.c0)AND(rt0.c1)), (vt1.c0 IN ()), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))))=(((v0.c0 IN (v0.c0)), (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((vt1.c0))), (~ (v0.c0))))) DESC;
SELECT * FROM vt1, v0, rt0 WHERE ((((((vt1.c0, 0.20531365769822751, rt0.c2)) NOT BETWEEN (('', rt0.c1, rt0.c2)) AND ((vt1.c0, vt1.c0, v0.c0))))IS(((rt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, 0.20531365769822751, rt0.c2)) NOT BETWEEN (('', rt0.c1, rt0.c2)) AND ((vt1.c0, vt1.c0, v0.c0))))IS(((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, v0, rt0);
SELECT * FROM vt1, v0, rt0 WHERE ((((((vt1.c0, 0.20531365769822751, rt0.c2)) NOT BETWEEN (('', rt0.c1, rt0.c2)) AND ((vt1.c0, vt1.c0, v0.c0))))IS(((rt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, 0.20531365769822751, rt0.c2)) NOT BETWEEN (('', rt0.c1, rt0.c2)) AND ((vt1.c0, vt1.c0, v0.c0))))IS(((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, v0, rt0);
SELECT * FROM vt1, v0, rt0 WHERE ((((((vt1.c0, 0.20531365769822751, rt0.c2)) NOT BETWEEN (('', rt0.c1, rt0.c2)) AND ((vt1.c0, vt1.c0, v0.c0))))IS(((rt0.c0) NOT NULL))));
SELECT ALL * FROM rt0 INNER JOIN vt1 ON rt0.c2 WHERE (NULL) ORDER BY (~ (CAST(rt0.c0 AS REAL))) DESC  NULLS FIRST, ((CASE vt1.c0  WHEN '-1818929848' THEN 0Xffffffff88bb3a63 WHEN rt0.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 END)+((('CDInfinity/') NOTNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON rt0.c2 ORDER BY (~ (CAST(rt0.c0 AS REAL))) DESC  NULLS FIRST, ((CASE vt1.c0  WHEN '-1818929848' THEN 0Xffffffff88bb3a63 WHEN rt0.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 END)+((('CDInfinity/') NOTNULL))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 INNER JOIN vt1 ON rt0.c2 WHERE (NULL) ORDER BY (~ (CAST(rt0.c0 AS REAL))) DESC  NULLS FIRST, ((CASE vt1.c0  WHEN '-1818929848' THEN 0Xffffffff88bb3a63 WHEN rt0.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 END)+((('CDInfinity/') NOTNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON rt0.c2 ORDER BY (~ (CAST(rt0.c0 AS REAL))) DESC  NULLS FIRST, ((CASE vt1.c0  WHEN '-1818929848' THEN 0Xffffffff88bb3a63 WHEN rt0.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 END)+((('CDInfinity/') NOTNULL))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 INNER JOIN vt1 ON rt0.c2 WHERE (NULL) ORDER BY (~ (CAST(rt0.c0 AS REAL))) DESC  NULLS FIRST, ((CASE vt1.c0  WHEN '-1818929848' THEN 0Xffffffff88bb3a63 WHEN rt0.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 END)+((('CDInfinity/') NOTNULL))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0 RIGHT OUTER JOIN v0 ON ((((((rt0.c1) ISNULL))AND(NULL)))OR('CDInfinity/')) WHERE (((((((v0.c0)OR(rt0.c1)))AND(vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(rt0.c1)))AND(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN v0 ON ((((((rt0.c1) ISNULL))AND(NULL)))OR('CDInfinity/')));
SELECT COUNT(*) FROM vt1, rt0 RIGHT OUTER JOIN v0 ON ((((((rt0.c1) ISNULL))AND(NULL)))OR('CDInfinity/')) WHERE (((((((v0.c0)OR(rt0.c1)))AND(vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(rt0.c1)))AND(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN v0 ON ((((((rt0.c1) ISNULL))AND(NULL)))OR('CDInfinity/')));
SELECT COUNT(*) FROM vt1, rt0 RIGHT OUTER JOIN v0 ON ((((((rt0.c1) ISNULL))AND(NULL)))OR('CDInfinity/')) WHERE (((((((v0.c0)OR(rt0.c1)))AND(vt1.c0))) NOTNULL));
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)GLOB(rt0.c2)))IS(SQLITE_SOURCE_ID()))) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)GLOB(rt0.c2)))IS(SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)GLOB(rt0.c2)))IS(SQLITE_SOURCE_ID()))) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)GLOB(rt0.c2)))IS(SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)GLOB(rt0.c2)))IS(SQLITE_SOURCE_ID()))) ORDER BY rt0.c2 DESC;
SELECT COUNT(*) FROM v0 WHERE ((+ (v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((+ (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((+ (v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((+ (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((+ (v0.c0 COLLATE RTRIM)));
SELECT ALL * FROM rt0 INNER JOIN v0 ON ((((((rt0.c2)OR(0X610210bd)))OR(rt0.c1))) NOTNULL) WHERE (((((rt0.c0, rt0.c2, rt0.c1))<((rt0.c1, rt0.c0, rt0.c1))) IN (rt0.c0, CASE WHEN v0.c0 THEN rt0.c2 ELSE rt0.c0 END))) ORDER BY (CAST(0.11237284778453538 AS NUMERIC) IN ())  NULLS LAST, ((0.11237284778453538) NOT NULL) ASC  NULLS LAST, (~ (x'')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0, rt0.c2, rt0.c1))<((rt0.c1, rt0.c0, rt0.c1))) IN (rt0.c0, CASE WHEN v0.c0 THEN rt0.c2 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((((((rt0.c2)OR(0X610210bd)))OR(rt0.c1))) NOTNULL) ORDER BY (CAST(0.11237284778453538 AS NUMERIC) IN ())  NULLS LAST, ((0.11237284778453538) NOT NULL) ASC  NULLS LAST, (~ (x'')) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 INNER JOIN v0 ON ((((((rt0.c2)OR(0X610210bd)))OR(rt0.c1))) NOTNULL) WHERE (((((rt0.c0, rt0.c2, rt0.c1))<((rt0.c1, rt0.c0, rt0.c1))) IN (rt0.c0, CASE WHEN v0.c0 THEN rt0.c2 ELSE rt0.c0 END))) ORDER BY (CAST(0.11237284778453538 AS NUMERIC) IN ())  NULLS LAST, ((0.11237284778453538) NOT NULL) ASC  NULLS LAST, (~ (x'')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0, rt0.c2, rt0.c1))<((rt0.c1, rt0.c0, rt0.c1))) IN (rt0.c0, CASE WHEN v0.c0 THEN rt0.c2 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((((((rt0.c2)OR(0X610210bd)))OR(rt0.c1))) NOTNULL) ORDER BY (CAST(0.11237284778453538 AS NUMERIC) IN ())  NULLS LAST, ((0.11237284778453538) NOT NULL) ASC  NULLS LAST, (~ (x'')) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 INNER JOIN v0 ON ((((((rt0.c2)OR(0X610210bd)))OR(rt0.c1))) NOTNULL) WHERE (((((rt0.c0, rt0.c2, rt0.c1))<((rt0.c1, rt0.c0, rt0.c1))) IN (rt0.c0, CASE WHEN v0.c0 THEN rt0.c2 ELSE rt0.c0 END))) ORDER BY (CAST(0.11237284778453538 AS NUMERIC) IN ())  NULLS LAST, ((0.11237284778453538) NOT NULL) ASC  NULLS LAST, (~ (x'')) ASC  NULLS FIRST;
SELECT ALL * FROM v0, vt1 WHERE ((((NULL, v0.c0, vt1.c0, vt1.c0, v0.c0)) BETWEEN ((((v0.c0)*(vt1.c0)), 0.0010854733414192852, (v0.c0 IN ()), (+ ('J3')), ((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)))) AND ((((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)), (v0.c0 IN ()), CASE v0.c0  WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE x'' END, (+ (v0.c0)), (v0.c0 IN (v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((NULL, v0.c0, vt1.c0, vt1.c0, v0.c0)) BETWEEN ((((v0.c0)*(vt1.c0)), 0.0010854733414192852, (v0.c0 IN ()), (+ ('J3')), ((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)))) AND ((((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)), (v0.c0 IN ()), CASE v0.c0  WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE x'' END, (+ (v0.c0)), (v0.c0 IN (v0.c0)))))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 WHERE ((((NULL, v0.c0, vt1.c0, vt1.c0, v0.c0)) BETWEEN ((((v0.c0)*(vt1.c0)), 0.0010854733414192852, (v0.c0 IN ()), (+ ('J3')), ((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)))) AND ((((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)), (v0.c0 IN ()), CASE v0.c0  WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE x'' END, (+ (v0.c0)), (v0.c0 IN (v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((NULL, v0.c0, vt1.c0, vt1.c0, v0.c0)) BETWEEN ((((v0.c0)*(vt1.c0)), 0.0010854733414192852, (v0.c0 IN ()), (+ ('J3')), ((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)))) AND ((((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)), (v0.c0 IN ()), CASE v0.c0  WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE x'' END, (+ (v0.c0)), (v0.c0 IN (v0.c0)))))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 WHERE ((((NULL, v0.c0, vt1.c0, vt1.c0, v0.c0)) BETWEEN ((((v0.c0)*(vt1.c0)), 0.0010854733414192852, (v0.c0 IN ()), (+ ('J3')), ((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)))) AND ((((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)), (v0.c0 IN ()), CASE v0.c0  WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE x'' END, (+ (v0.c0)), (v0.c0 IN (v0.c0))))));
SELECT COUNT(*) FROM rt0 WHERE ('') ORDER BY (((~ (rt0.c2))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN rt0.c2 END) AND (((((rt0.c2)OR(rt0.c2)))AND(NULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0 ORDER BY (((~ (rt0.c2))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN rt0.c2 END) AND (((((rt0.c2)OR(rt0.c2)))AND(NULL))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ('') ORDER BY (((~ (rt0.c2))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN rt0.c2 END) AND (((((rt0.c2)OR(rt0.c2)))AND(NULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0 ORDER BY (((~ (rt0.c2))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN rt0.c2 END) AND (((((rt0.c2)OR(rt0.c2)))AND(NULL))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ('') ORDER BY (((~ (rt0.c2))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN rt0.c2 END) AND (((((rt0.c2)OR(rt0.c2)))AND(NULL))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((NOT (rt0.c0)))IS NOT(x'8f7cbd03')));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c0)))IS NOT(x'8f7cbd03'))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((NOT (rt0.c0)))IS NOT(x'8f7cbd03')));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c0)))IS NOT(x'8f7cbd03'))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((NOT (rt0.c0)))IS NOT(x'8f7cbd03')));
SELECT ALL * FROM rt0, vt1, v0 WHERE ((NOT (CAST(rt0.c2 AS REAL)))) ORDER BY CASE WHEN (- (vt1.c0)) THEN (((vt1.c0)) BETWEEN ((rt0.c2)) AND ((v0.c0))) WHEN ((v0.c0) NOTNULL) THEN 0.504562315923522 WHEN ((((((((rt0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(rt0.c2)) THEN ((v0.c0)AND(rt0.c0)) WHEN (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))) THEN CAST(rt0.c0 AS NUMERIC) WHEN (((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN ((0.11903936855251407) IS FALSE) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY CASE WHEN (- (vt1.c0)) THEN (((vt1.c0)) BETWEEN ((rt0.c2)) AND ((v0.c0))) WHEN ((v0.c0) NOTNULL) THEN 0.504562315923522 WHEN ((((((((rt0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(rt0.c2)) THEN ((v0.c0)AND(rt0.c0)) WHEN (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))) THEN CAST(rt0.c0 AS NUMERIC) WHEN (((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN ((0.11903936855251407) IS FALSE) END  NULLS FIRST);
SELECT ALL * FROM rt0, vt1, v0 WHERE ((NOT (CAST(rt0.c2 AS REAL)))) ORDER BY CASE WHEN (- (vt1.c0)) THEN (((vt1.c0)) BETWEEN ((rt0.c2)) AND ((v0.c0))) WHEN ((v0.c0) NOTNULL) THEN 0.504562315923522 WHEN ((((((((rt0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(rt0.c2)) THEN ((v0.c0)AND(rt0.c0)) WHEN (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))) THEN CAST(rt0.c0 AS NUMERIC) WHEN (((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN ((0.11903936855251407) IS FALSE) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY CASE WHEN (- (vt1.c0)) THEN (((vt1.c0)) BETWEEN ((rt0.c2)) AND ((v0.c0))) WHEN ((v0.c0) NOTNULL) THEN 0.504562315923522 WHEN ((((((((rt0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(rt0.c2)) THEN ((v0.c0)AND(rt0.c0)) WHEN (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))) THEN CAST(rt0.c0 AS NUMERIC) WHEN (((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN ((0.11903936855251407) IS FALSE) END  NULLS FIRST);
SELECT ALL * FROM rt0, vt1, v0 WHERE ((NOT (CAST(rt0.c2 AS REAL)))) ORDER BY CASE WHEN (- (vt1.c0)) THEN (((vt1.c0)) BETWEEN ((rt0.c2)) AND ((v0.c0))) WHEN ((v0.c0) NOTNULL) THEN 0.504562315923522 WHEN ((((((((rt0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(rt0.c2)) THEN ((v0.c0)AND(rt0.c0)) WHEN (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))) THEN CAST(rt0.c0 AS NUMERIC) WHEN (((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN ((0.11903936855251407) IS FALSE) END  NULLS FIRST;
SELECT * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) COLLATE NOCASE) ORDER BY ((vt1.c0) BETWEEN (vt1.c0) AND (0x68c28af8)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) BETWEEN (vt1.c0) AND (0X68c28af8)) COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) COLLATE NOCASE) ORDER BY ((vt1.c0) BETWEEN (vt1.c0) AND (0x68c28af8)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) BETWEEN (vt1.c0) AND (0X68c28af8)) COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) COLLATE NOCASE) ORDER BY ((vt1.c0) BETWEEN (vt1.c0) AND (0x68c28af8)) COLLATE BINARY DESC  NULLS FIRST;
SELECT * FROM rt0, vt1 WHERE (CAST(CAST(rt0.c0 AS REAL) AS NUMERIC)) ORDER BY ROUND(((vt1.c0) IS FALSE), CAST(1.391748151E9 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS REAL) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ROUND(((vt1.c0) IS FALSE), CAST(1.391748151E9 AS BLOB)));
SELECT * FROM rt0, vt1 WHERE (CAST(CAST(rt0.c0 AS REAL) AS NUMERIC)) ORDER BY ROUND(((vt1.c0) IS FALSE), CAST(1.391748151E9 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS REAL) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ROUND(((vt1.c0) IS FALSE), CAST(1.391748151E9 AS BLOB)));
SELECT * FROM rt0, vt1 WHERE (CAST(CAST(rt0.c0 AS REAL) AS NUMERIC)) ORDER BY ROUND(((vt1.c0) IS FALSE), CAST(1.391748151E9 AS BLOB));
SELECT ALL * FROM v0, vt1 WHERE (((CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END)=(v0.c0)));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END)==(v0.c0))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 WHERE (((CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END)=(v0.c0)));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END)==(v0.c0))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 WHERE (((CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END)=(v0.c0)));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON ((((rt0.c2)==(rt0.c1))) NOT BETWEEN (vt1.c0) AND (((vt1.c0)/(rt0.c2)))) WHERE (((rt0.c0)<<(((rt0.c2)>>(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<<(((rt0.c2)>>(rt0.c2))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON ((((rt0.c2)==(rt0.c1))) NOT BETWEEN (vt1.c0) AND (((vt1.c0)/(rt0.c2)))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON ((((rt0.c2)==(rt0.c1))) NOT BETWEEN (vt1.c0) AND (((vt1.c0)/(rt0.c2)))) WHERE (((rt0.c0)<<(((rt0.c2)>>(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<<(((rt0.c2)>>(rt0.c2))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON ((((rt0.c2)==(rt0.c1))) NOT BETWEEN (vt1.c0) AND (((vt1.c0)/(rt0.c2)))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON ((((rt0.c2)==(rt0.c1))) NOT BETWEEN (vt1.c0) AND (((vt1.c0)/(rt0.c2)))) WHERE (((rt0.c0)<<(((rt0.c2)>>(rt0.c2)))));
SELECT * FROM rt0, v0, vt1 WHERE (v0.c0) ORDER BY vt1.c0 ASC, (CAST(rt0.c2 AS TEXT) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY vt1.c0 ASC, (CAST(rt0.c2 AS TEXT) IN ()) ASC);
SELECT * FROM rt0, v0, vt1 WHERE (v0.c0) ORDER BY vt1.c0 ASC, (CAST(rt0.c2 AS TEXT) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY vt1.c0 ASC, (CAST(rt0.c2 AS TEXT) IN ()) ASC);
SELECT * FROM rt0, v0, vt1 WHERE (v0.c0) ORDER BY vt1.c0 ASC, (CAST(rt0.c2 AS TEXT) IN ()) ASC;
SELECT ALL * FROM v0, vt1 WHERE (((((v0.c0) IS FALSE))GLOB(x'c137'))) ORDER BY CASE WHEN v0.c0 COLLATE NOCASE THEN ((v0.c0)GLOB(v0.c0)) ELSE ((vt1.c0) NOT NULL) END  NULLS FIRST, ((('C/\OZ' IN ())) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS FALSE))GLOB(x'c137'))) IS TRUE)  as count FROM v0, vt1 ORDER BY CASE WHEN v0.c0 COLLATE NOCASE THEN ((v0.c0)GLOB(v0.c0)) ELSE ((vt1.c0) NOT NULL) END  NULLS FIRST, ((('C/\OZ' IN ())) NOT NULL)  NULLS LAST);
SELECT ALL * FROM v0, vt1 WHERE (((((v0.c0) IS FALSE))GLOB(x'c137'))) ORDER BY CASE WHEN v0.c0 COLLATE NOCASE THEN ((v0.c0)GLOB(v0.c0)) ELSE ((vt1.c0) NOT NULL) END  NULLS FIRST, ((('C/\OZ' IN ())) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS FALSE))GLOB(x'c137'))) IS TRUE)  as count FROM v0, vt1 ORDER BY CASE WHEN v0.c0 COLLATE NOCASE THEN ((v0.c0)GLOB(v0.c0)) ELSE ((vt1.c0) NOT NULL) END  NULLS FIRST, ((('C/\OZ' IN ())) NOT NULL)  NULLS LAST);
SELECT ALL * FROM v0, vt1 WHERE (((((v0.c0) IS FALSE))GLOB(x'c137'))) ORDER BY CASE WHEN v0.c0 COLLATE NOCASE THEN ((v0.c0)GLOB(v0.c0)) ELSE ((vt1.c0) NOT NULL) END  NULLS FIRST, ((('C/\OZ' IN ())) NOT NULL)  NULLS LAST;
SELECT COUNT(*) FROM vt1, rt0 WHERE ('U5d⓺n\r') ORDER BY ((rt0.c0 COLLATE BINARY) BETWEEN (ABS(DISTINCT rt0.c0)) AND (CAST(rt0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL (('U5d⓺n\r') IS TRUE)  as count FROM vt1, rt0 ORDER BY ((rt0.c0 COLLATE BINARY) BETWEEN (ABS(DISTINCT rt0.c0)) AND (CAST(rt0.c1 AS NUMERIC))));
SELECT COUNT(*) FROM vt1, rt0 WHERE ('U5d⓺n\r') ORDER BY ((rt0.c0 COLLATE BINARY) BETWEEN (ABS(DISTINCT rt0.c0)) AND (CAST(rt0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL (('U5d⓺n\r') IS TRUE)  as count FROM vt1, rt0 ORDER BY ((rt0.c0 COLLATE BINARY) BETWEEN (ABS(DISTINCT rt0.c0)) AND (CAST(rt0.c1 AS NUMERIC))));
SELECT COUNT(*) FROM vt1, rt0 WHERE ('U5d⓺n\r') ORDER BY ((rt0.c0 COLLATE BINARY) BETWEEN (ABS(DISTINCT rt0.c0)) AND (CAST(rt0.c1 AS NUMERIC)));
SELECT ALL * FROM v0 LEFT OUTER JOIN vt1 ON vt1.c0 WHERE (json_insert((v0.c0 IN ()), ((vt1.c0) ISNULL), ((((0.3253767987398679)OR(x'')))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_insert((v0.c0 IN ()), ((vt1.c0) ISNULL), ((((0.3253767987398679)OR(x'')))OR(v0.c0)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON vt1.c0);
SELECT ALL * FROM v0 LEFT OUTER JOIN vt1 ON vt1.c0 WHERE (json_insert((v0.c0 IN ()), ((vt1.c0) ISNULL), ((((0.3253767987398679)OR(x'')))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_insert((v0.c0 IN ()), ((vt1.c0) ISNULL), ((((0.3253767987398679)OR(x'')))OR(v0.c0)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON vt1.c0);
SELECT ALL * FROM v0 LEFT OUTER JOIN vt1 ON vt1.c0 WHERE (json_insert((v0.c0 IN ()), ((vt1.c0) ISNULL), ((((0.3253767987398679)OR(x'')))OR(v0.c0))));
SELECT ALL * FROM vt1, v0, rt0 WHERE ((((rt0.c2 IN ())) ISNULL)) ORDER BY ((rt0.c1)GLOB((((rt0.c1, rt0.c2, rt0.c0))==((rt0.c2, rt0.c2, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ())) ISNULL)) IS TRUE)  as count FROM vt1, v0, rt0 ORDER BY ((rt0.c1)GLOB((((rt0.c1, rt0.c2, rt0.c0))==((rt0.c2, rt0.c2, vt1.c0))))));
SELECT ALL * FROM vt1, v0, rt0 WHERE ((((rt0.c2 IN ())) ISNULL)) ORDER BY ((rt0.c1)GLOB((((rt0.c1, rt0.c2, rt0.c0))==((rt0.c2, rt0.c2, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ())) ISNULL)) IS TRUE)  as count FROM vt1, v0, rt0 ORDER BY ((rt0.c1)GLOB((((rt0.c1, rt0.c2, rt0.c0))==((rt0.c2, rt0.c2, vt1.c0))))));
SELECT ALL * FROM vt1, v0, rt0 WHERE ((((rt0.c2 IN ())) ISNULL)) ORDER BY ((rt0.c1)GLOB((((rt0.c1, rt0.c2, rt0.c0))==((rt0.c2, rt0.c2, vt1.c0)))));
SELECT * FROM rt0, v0 WHERE (((CAST(v0.c0 AS NUMERIC))<<((rt0.c0 IN ())))) ORDER BY CASE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))  WHEN CASE rt0.c0  WHEN rt0.c1 THEN 0.6577626856343552 WHEN v0.c0 THEN rt0.c2 WHEN x'0568' THEN rt0.c0 ELSE v0.c0 END THEN rt0.c0 COLLATE BINARY END ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS NUMERIC))<<((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))  WHEN CASE rt0.c0  WHEN rt0.c1 THEN 0.6577626856343552 WHEN v0.c0 THEN rt0.c2 WHEN x'0568' THEN rt0.c0 ELSE v0.c0 END THEN rt0.c0 COLLATE BINARY END ASC);
SELECT * FROM rt0, v0 WHERE (((CAST(v0.c0 AS NUMERIC))<<((rt0.c0 IN ())))) ORDER BY CASE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))  WHEN CASE rt0.c0  WHEN rt0.c1 THEN 0.6577626856343552 WHEN v0.c0 THEN rt0.c2 WHEN x'0568' THEN rt0.c0 ELSE v0.c0 END THEN rt0.c0 COLLATE BINARY END ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS NUMERIC))<<((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))  WHEN CASE rt0.c0  WHEN rt0.c1 THEN 0.6577626856343552 WHEN v0.c0 THEN rt0.c2 WHEN x'0568' THEN rt0.c0 ELSE v0.c0 END THEN rt0.c0 COLLATE BINARY END ASC);
SELECT * FROM rt0, v0 WHERE (((CAST(v0.c0 AS NUMERIC))<<((rt0.c0 IN ())))) ORDER BY CASE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))  WHEN CASE rt0.c0  WHEN rt0.c1 THEN 0.6577626856343552 WHEN v0.c0 THEN rt0.c2 WHEN x'0568' THEN rt0.c0 ELSE v0.c0 END THEN rt0.c0 COLLATE BINARY END ASC;
SELECT COUNT(*) FROM vt1, rt0 WHERE (((('Cl䇯0' IN ())) NOT BETWEEN (LOWER(DISTINCT '1627525309')) AND (CASE WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY (((x'')+(vt1.c0)) IN ((((rt0.c1, rt0.c1, NULL))>((vt1.c0, rt0.c1, vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((('Cl䇯0' IN ())) NOT BETWEEN (LOWER(DISTINCT '1627525309')) AND (CASE WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((x'')+(vt1.c0)) IN ((((rt0.c1, rt0.c1, NULL))>((vt1.c0, rt0.c1, vt1.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((('Cl䇯0' IN ())) NOT BETWEEN (LOWER(DISTINCT '1627525309')) AND (CASE WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY (((x'')+(vt1.c0)) IN ((((rt0.c1, rt0.c1, NULL))>((vt1.c0, rt0.c1, vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((('Cl䇯0' IN ())) NOT BETWEEN (LOWER(DISTINCT '1627525309')) AND (CASE WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((x'')+(vt1.c0)) IN ((((rt0.c1, rt0.c1, NULL))>((vt1.c0, rt0.c1, vt1.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((('Cl䇯0' IN ())) NOT BETWEEN (LOWER(DISTINCT '1627525309')) AND (CASE WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY (((x'')+(vt1.c0)) IN ((((rt0.c1, rt0.c1, NULL))>((vt1.c0, rt0.c1, vt1.c0)))))  NULLS LAST;
SELECT * FROM vt1 WHERE ((~ ((- (vt1.c0))))) ORDER BY vt1.c0 DESC  NULLS FIRST, CAST((+ (vt1.c0)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((- (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC  NULLS FIRST, CAST((+ (vt1.c0)) AS REAL)  NULLS LAST);
SELECT * FROM vt1 WHERE ((~ ((- (vt1.c0))))) ORDER BY vt1.c0 DESC  NULLS FIRST, CAST((+ (vt1.c0)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((- (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC  NULLS FIRST, CAST((+ (vt1.c0)) AS REAL)  NULLS LAST);
SELECT * FROM vt1 WHERE ((~ ((- (vt1.c0))))) ORDER BY vt1.c0 DESC  NULLS FIRST, CAST((+ (vt1.c0)) AS REAL)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))<=(NULLIF(DISTINCT rt0.c0, rt0.c1)))) ORDER BY NULL COLLATE BINARY ASC, (((rt0.c1)) BETWEEN ((((((((((v0.c0)AND(v0.c0)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))) AND ((((rt0.c0)+(rt0.c2)))))  NULLS LAST, CASE rt0.c2  WHEN ((((rt0.c2)OR(v0.c0)))AND(v0.c0)) THEN ((rt0.c1) IS FALSE) ELSE ((rt0.c0)*(v0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))<=(NULLIF(DISTINCT rt0.c0, rt0.c1)))) IS TRUE)  as count FROM rt0, v0 ORDER BY NULL COLLATE BINARY ASC, (((rt0.c1)) BETWEEN ((((((((((v0.c0)AND(v0.c0)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))) AND ((((rt0.c0)+(rt0.c2)))))  NULLS LAST, CASE rt0.c2  WHEN ((((rt0.c2)OR(v0.c0)))AND(v0.c0)) THEN ((rt0.c1) IS FALSE) ELSE ((rt0.c0)*(v0.c0)) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))<=(NULLIF(DISTINCT rt0.c0, rt0.c1)))) ORDER BY NULL COLLATE BINARY ASC, (((rt0.c1)) BETWEEN ((((((((((v0.c0)AND(v0.c0)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))) AND ((((rt0.c0)+(rt0.c2)))))  NULLS LAST, CASE rt0.c2  WHEN ((((rt0.c2)OR(v0.c0)))AND(v0.c0)) THEN ((rt0.c1) IS FALSE) ELSE ((rt0.c0)*(v0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))<=(NULLIF(DISTINCT rt0.c0, rt0.c1)))) IS TRUE)  as count FROM rt0, v0 ORDER BY NULL COLLATE BINARY ASC, (((rt0.c1)) BETWEEN ((((((((((v0.c0)AND(v0.c0)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))) AND ((((rt0.c0)+(rt0.c2)))))  NULLS LAST, CASE rt0.c2  WHEN ((((rt0.c2)OR(v0.c0)))AND(v0.c0)) THEN ((rt0.c1) IS FALSE) ELSE ((rt0.c0)*(v0.c0)) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))<=(NULLIF(DISTINCT rt0.c0, rt0.c1)))) ORDER BY NULL COLLATE BINARY ASC, (((rt0.c1)) BETWEEN ((((((((((v0.c0)AND(v0.c0)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))) AND ((((rt0.c0)+(rt0.c2)))))  NULLS LAST, CASE rt0.c2  WHEN ((((rt0.c2)OR(v0.c0)))AND(v0.c0)) THEN ((rt0.c1) IS FALSE) ELSE ((rt0.c0)*(v0.c0)) END DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON CAST((- (rt0.c1)) AS INTEGER) WHERE ((((((-1939419220 IN ()))AND(rt0.c1)))OR(rt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((((-1939419220 IN ()))AND(rt0.c1)))OR(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON CAST((- (rt0.c1)) AS INTEGER));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON CAST((- (rt0.c1)) AS INTEGER) WHERE ((((((-1939419220 IN ()))AND(rt0.c1)))OR(rt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((((-1939419220 IN ()))AND(rt0.c1)))OR(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON CAST((- (rt0.c1)) AS INTEGER));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON CAST((- (rt0.c1)) AS INTEGER) WHERE ((((((-1939419220 IN ()))AND(rt0.c1)))OR(rt0.c2 COLLATE BINARY)));
SELECT ALL * FROM vt1, v0 WHERE ((NOT (CASE v0.c0  WHEN vt1.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE v0.c0  WHEN vt1.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE ((NOT (CASE v0.c0  WHEN vt1.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE v0.c0  WHEN vt1.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE ((NOT (CASE v0.c0  WHEN vt1.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT * FROM v0, rt0, vt1 WHERE ((+ (v0.c0)) COLLATE RTRIM) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY v0.c0 ASC);
SELECT * FROM v0, rt0, vt1 WHERE ((+ (v0.c0)) COLLATE RTRIM) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY v0.c0 ASC);
SELECT * FROM v0, rt0, vt1 WHERE ((+ (v0.c0)) COLLATE RTRIM) ORDER BY v0.c0 ASC;
SELECT COUNT(*) FROM rt0, vt1 WHERE (1434160603) ORDER BY (NOT (rt0.c0 COLLATE RTRIM))  NULLS FIRST, SQLITE_COMPILEOPTION_USED(((vt1.c0)%(vt1.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((1434160603) IS TRUE)  as count FROM rt0, vt1 ORDER BY (NOT (rt0.c0 COLLATE RTRIM))  NULLS FIRST, SQLITE_COMPILEOPTION_USED(((vt1.c0)%(vt1.c0))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (1434160603) ORDER BY (NOT (rt0.c0 COLLATE RTRIM))  NULLS FIRST, SQLITE_COMPILEOPTION_USED(((vt1.c0)%(vt1.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((1434160603) IS TRUE)  as count FROM rt0, vt1 ORDER BY (NOT (rt0.c0 COLLATE RTRIM))  NULLS FIRST, SQLITE_COMPILEOPTION_USED(((vt1.c0)%(vt1.c0))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (1434160603) ORDER BY (NOT (rt0.c0 COLLATE RTRIM))  NULLS FIRST, SQLITE_COMPILEOPTION_USED(((vt1.c0)%(vt1.c0))) DESC  NULLS LAST;
SELECT ALL * FROM vt1, v0, rt0 WHERE (((-1822019488)IS(rt0.c2)) COLLATE RTRIM) ORDER BY (+ (((rt0.c2)/(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((-1822019488)IS(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, v0, rt0 ORDER BY (+ (((rt0.c2)/(rt0.c0)))));
SELECT ALL * FROM vt1, v0, rt0 WHERE (((-1822019488)IS(rt0.c2)) COLLATE RTRIM) ORDER BY (+ (((rt0.c2)/(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((-1822019488)IS(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, v0, rt0 ORDER BY (+ (((rt0.c2)/(rt0.c0)))));
SELECT ALL * FROM vt1, v0, rt0 WHERE (((-1822019488)IS(rt0.c2)) COLLATE RTRIM) ORDER BY (+ (((rt0.c2)/(rt0.c0))));
SELECT * FROM rt0, vt1 WHERE ((((vt1.c0 IN ())) ISNULL)) ORDER BY ((rt0.c0 COLLATE NOCASE)<>(((((((((rt0.c0)AND(vt1.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(vt1.c0)))) ASC  NULLS LAST, ((IFNULL(rt0.c1, rt0.c2))=(((rt0.c0)>(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) ISNULL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((rt0.c0 COLLATE NOCASE)!=(((((((((rt0.c0)AND(vt1.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(vt1.c0)))) ASC  NULLS LAST, ((IFNULL(rt0.c1, rt0.c2))==(((rt0.c0)>(vt1.c0)))) DESC  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE ((((vt1.c0 IN ())) ISNULL)) ORDER BY ((rt0.c0 COLLATE NOCASE)<>(((((((((rt0.c0)AND(vt1.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(vt1.c0)))) ASC  NULLS LAST, ((IFNULL(rt0.c1, rt0.c2))=(((rt0.c0)>(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) ISNULL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((rt0.c0 COLLATE NOCASE)!=(((((((((rt0.c0)AND(vt1.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(vt1.c0)))) ASC  NULLS LAST, ((IFNULL(rt0.c1, rt0.c2))==(((rt0.c0)>(vt1.c0)))) DESC  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE ((((vt1.c0 IN ())) ISNULL)) ORDER BY ((rt0.c0 COLLATE NOCASE)<>(((((((((rt0.c0)AND(vt1.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(vt1.c0)))) ASC  NULLS LAST, ((IFNULL(rt0.c1, rt0.c2))=(((rt0.c0)>(vt1.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, v0, rt0 WHERE (CAST(CAST(rt0.c0 AS INTEGER) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS INTEGER) AS BLOB)) IS TRUE)  as count FROM vt1, v0, rt0);
SELECT ALL COUNT(*) FROM vt1, v0, rt0 WHERE (CAST(CAST(rt0.c0 AS INTEGER) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS INTEGER) AS BLOB)) IS TRUE)  as count FROM vt1, v0, rt0);
SELECT ALL COUNT(*) FROM vt1, v0, rt0 WHERE (CAST(CAST(rt0.c0 AS INTEGER) AS BLOB));
SELECT ALL * FROM vt1 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (SQLITE_VERSION());
SELECT COUNT(*) FROM rt0, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (x'');
SELECT ALL COUNT(*) FROM rt0, v0, vt1 WHERE ((rt0.c1 IN ((rt0.c2 IN ())))) ORDER BY IFNULL(((rt0.c2)>=(NULL)), (rt0.c2 IN ())) ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY IFNULL(((rt0.c2)>=(NULL)), (rt0.c2 IN ())) ASC);
SELECT ALL COUNT(*) FROM rt0, v0, vt1 WHERE ((rt0.c1 IN ((rt0.c2 IN ())))) ORDER BY IFNULL(((rt0.c2)>=(NULL)), (rt0.c2 IN ())) ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY IFNULL(((rt0.c2)>=(NULL)), (rt0.c2 IN ())) ASC);
SELECT ALL COUNT(*) FROM rt0, v0, vt1 WHERE ((rt0.c1 IN ((rt0.c2 IN ())))) ORDER BY IFNULL(((rt0.c2)>=(NULL)), (rt0.c2 IN ())) ASC;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)LIKE(x'')))>((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)LIKE(x'')))>((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)LIKE(x'')))>((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)LIKE(x'')))>((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)LIKE(x'')))>((v0.c0 IN ()))));
SELECT ALL * FROM v0 WHERE (CASE v0.c0 COLLATE BINARY  WHEN '1289768784' THEN v0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0 COLLATE BINARY  WHEN '1289768784' THEN v0.c0 END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE v0.c0 COLLATE BINARY  WHEN '1289768784' THEN v0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0 COLLATE BINARY  WHEN '1289768784' THEN v0.c0 END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE v0.c0 COLLATE BINARY  WHEN '1289768784' THEN v0.c0 END);
SELECT ALL * FROM vt1, rt0 NATURAL JOIN v0 WHERE (x'12d9');
SELECT SUM(count) FROM (SELECT ALL ((x'12d9') IS TRUE)  as count FROM vt1, rt0 NATURAL JOIN v0);
SELECT ALL * FROM vt1, rt0 NATURAL JOIN v0 WHERE (x'12d9');
SELECT SUM(count) FROM (SELECT ALL ((x'12d9') IS TRUE)  as count FROM vt1, rt0 NATURAL JOIN v0);
SELECT ALL * FROM vt1, rt0 NATURAL JOIN v0 WHERE (x'12d9');
SELECT * FROM rt0, v0, vt1 WHERE (IFNULL(((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c2)), (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c2)), (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) IS TRUE)  as count FROM rt0, v0, vt1);
SELECT * FROM rt0, v0, vt1 WHERE (IFNULL(((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c2)), (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c2)), (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) IS TRUE)  as count FROM rt0, v0, vt1);
SELECT * FROM rt0, v0, vt1 WHERE (IFNULL(((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c2)), (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) IN ((((rt0.c2))<>((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) IN ((((rt0.c2))!=((rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) IN ((((rt0.c2))<>((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) IN ((((rt0.c2))!=((rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) IN ((((rt0.c2))<>((rt0.c0))))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((((((((NULL)AND(TRIM(DISTINCT ''))))AND(rt0.c0 COLLATE RTRIM)))AND(((vt1.c0) NOT NULL))))AND(CAST(v0.c0 AS TEXT))) FULL OUTER JOIN vt1 ON ((rt0.c1)>=(rt0.c2)) COLLATE RTRIM WHERE ((~ (NULL COLLATE RTRIM))) ORDER BY ((((((vt1.c0)AND(rt0.c1)))OR(rt0.c1)))>>(TRIM(vt1.c0)));
SELECT SUM(count) FROM (SELECT (((~ (NULL COLLATE RTRIM))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((((((((NULL)AND(TRIM(DISTINCT ''))))AND(rt0.c0 COLLATE RTRIM)))AND(((vt1.c0) NOT NULL))))AND(CAST(v0.c0 AS TEXT))) FULL OUTER JOIN vt1 ON ((rt0.c1)>=(rt0.c2)) COLLATE RTRIM ORDER BY ((((((vt1.c0)AND(rt0.c1)))OR(rt0.c1)))>>(TRIM(vt1.c0))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((((((((NULL)AND(TRIM(DISTINCT ''))))AND(rt0.c0 COLLATE RTRIM)))AND(((vt1.c0) NOT NULL))))AND(CAST(v0.c0 AS TEXT))) FULL OUTER JOIN vt1 ON ((rt0.c1)>=(rt0.c2)) COLLATE RTRIM WHERE ((~ (NULL COLLATE RTRIM))) ORDER BY ((((((vt1.c0)AND(rt0.c1)))OR(rt0.c1)))>>(TRIM(vt1.c0)));
SELECT SUM(count) FROM (SELECT (((~ (NULL COLLATE RTRIM))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((((((((NULL)AND(TRIM(DISTINCT ''))))AND(rt0.c0 COLLATE RTRIM)))AND(((vt1.c0) NOT NULL))))AND(CAST(v0.c0 AS TEXT))) FULL OUTER JOIN vt1 ON ((rt0.c1)>=(rt0.c2)) COLLATE RTRIM ORDER BY ((((((vt1.c0)AND(rt0.c1)))OR(rt0.c1)))>>(TRIM(vt1.c0))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (NULLIF(DISTINCT x'', ((vt1.c0)|(rt0.c1)))) ORDER BY ((CASE vt1.c0  WHEN rt0.c2 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END)&(((rt0.c1)/(rt0.c1)))), CAST(highlight(vt1.c0, rt0.c2, rt0.c0, '405081406') AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT x'', ((vt1.c0)|(rt0.c1)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((CASE vt1.c0  WHEN rt0.c2 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END)&(((rt0.c1)/(rt0.c1)))), CAST(highlight(vt1.c0, rt0.c2, rt0.c0, '405081406') AS TEXT) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (NULLIF(DISTINCT x'', ((vt1.c0)|(rt0.c1)))) ORDER BY ((CASE vt1.c0  WHEN rt0.c2 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END)&(((rt0.c1)/(rt0.c1)))), CAST(highlight(vt1.c0, rt0.c2, rt0.c0, '405081406') AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT x'', ((vt1.c0)|(rt0.c1)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((CASE vt1.c0  WHEN rt0.c2 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END)&(((rt0.c1)/(rt0.c1)))), CAST(highlight(vt1.c0, rt0.c2, rt0.c0, '405081406') AS TEXT) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (NULLIF(DISTINCT x'', ((vt1.c0)|(rt0.c1)))) ORDER BY ((CASE vt1.c0  WHEN rt0.c2 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END)&(((rt0.c1)/(rt0.c1)))), CAST(highlight(vt1.c0, rt0.c2, rt0.c0, '405081406') AS TEXT) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0) BETWEEN ((- (rt0.c0))) AND (((rt0.c1) NOT BETWEEN ('0.9068743341583726') AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN ((- (rt0.c0))) AND (((rt0.c1) NOT BETWEEN ('0.9068743341583726') AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0) BETWEEN ((- (rt0.c0))) AND (((rt0.c1) NOT BETWEEN ('0.9068743341583726') AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN ((- (rt0.c0))) AND (((rt0.c1) NOT BETWEEN ('0.9068743341583726') AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0) BETWEEN ((- (rt0.c0))) AND (((rt0.c1) NOT BETWEEN ('0.9068743341583726') AND (rt0.c2)))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)OR(x'')))OR(rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)OR(x'')))OR(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)OR(x'')))OR(rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)OR(x'')))OR(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)OR(x'')))OR(rt0.c0)) COLLATE RTRIM);
SELECT * FROM v0, vt1 WHERE (((((json_array_length(vt1.c0))OR(CAST(vt1.c0 AS TEXT))))AND((+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((json_array_length(vt1.c0))OR(CAST(vt1.c0 AS TEXT))))AND((+ (v0.c0))))) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE (((((json_array_length(vt1.c0))OR(CAST(vt1.c0 AS TEXT))))AND((+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((json_array_length(vt1.c0))OR(CAST(vt1.c0 AS TEXT))))AND((+ (v0.c0))))) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE (((((json_array_length(vt1.c0))OR(CAST(vt1.c0 AS TEXT))))AND((+ (v0.c0)))));
SELECT * FROM v0 WHERE ((((v0.c0 COLLATE BINARY, ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))=((((v0.c0)>>(v0.c0)), ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR('0.10031767324384311')), ((v0.c0)>(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 COLLATE BINARY, ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))=((((v0.c0)>>(v0.c0)), ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR('0.10031767324384311')), ((v0.c0)>(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0 COLLATE BINARY, ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))=((((v0.c0)>>(v0.c0)), ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR('0.10031767324384311')), ((v0.c0)>(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 COLLATE BINARY, ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))=((((v0.c0)>>(v0.c0)), ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR('0.10031767324384311')), ((v0.c0)>(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0 COLLATE BINARY, ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))=((((v0.c0)>>(v0.c0)), ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR('0.10031767324384311')), ((v0.c0)>(v0.c0))))));
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE BINARY)OR(NULL)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY)OR(NULL))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE BINARY)OR(NULL)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY)OR(NULL))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE BINARY)OR(NULL)));
SELECT COUNT(*) FROM rt0 NOT INDEXED, vt1, v0 WHERE ('') ORDER BY CAST((((vt1.c0))>(('\r<'))) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY CAST((((vt1.c0))>(('\r<'))) AS INTEGER) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 NOT INDEXED, vt1, v0 WHERE ('') ORDER BY CAST((((vt1.c0))>(('\r<'))) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY CAST((((vt1.c0))>(('\r<'))) AS INTEGER) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 NOT INDEXED, vt1, v0 WHERE ('') ORDER BY CAST((((vt1.c0))>(('\r<'))) AS INTEGER) DESC  NULLS FIRST;
SELECT ALL * FROM vt1 INNER JOIN v0 ON (NOT ((((NULL))<>((rt0.c1))))) FULL OUTER JOIN rt0 ON TYPEOF(DISTINCT ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))OR(NULL)))AND(v0.c0))) WHERE ((+ (UPPER(DISTINCT rt0.c0)))) ORDER BY CAST(CASE WHEN v0.c0 THEN NULL END AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (UPPER(DISTINCT rt0.c0)))) IS TRUE)  as count FROM vt1 INNER JOIN v0 ON (NOT ((((NULL))<>((rt0.c1))))) FULL OUTER JOIN rt0 ON TYPEOF(DISTINCT ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))OR(NULL)))AND(v0.c0))) ORDER BY CAST(CASE WHEN v0.c0 THEN NULL END AS INTEGER) ASC  NULLS LAST);
SELECT ALL * FROM vt1 INNER JOIN v0 ON (NOT ((((NULL))<>((rt0.c1))))) FULL OUTER JOIN rt0 ON TYPEOF(DISTINCT ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))OR(NULL)))AND(v0.c0))) WHERE ((+ (UPPER(DISTINCT rt0.c0)))) ORDER BY CAST(CASE WHEN v0.c0 THEN NULL END AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (UPPER(DISTINCT rt0.c0)))) IS TRUE)  as count FROM vt1 INNER JOIN v0 ON (NOT ((((NULL))<>((rt0.c1))))) FULL OUTER JOIN rt0 ON TYPEOF(DISTINCT ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))OR(NULL)))AND(v0.c0))) ORDER BY CAST(CASE WHEN v0.c0 THEN NULL END AS INTEGER) ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))) BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))) BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND (NULL))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))) BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))) BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND (NULL))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))) BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND (NULL)));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) AS REAL));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((+ (CASE WHEN rt0.c2 THEN rt0.c1 END))) ORDER BY (((rt0.c2 IN (rt0.c1)))*('1863342901')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN rt0.c2 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c2 IN (rt0.c1)))*('1863342901')) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((+ (CASE WHEN rt0.c2 THEN rt0.c1 END))) ORDER BY (((rt0.c2 IN (rt0.c1)))*('1863342901')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN rt0.c2 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c2 IN (rt0.c1)))*('1863342901')) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((+ (CASE WHEN rt0.c2 THEN rt0.c1 END))) ORDER BY (((rt0.c2 IN (rt0.c1)))*('1863342901')) DESC  NULLS FIRST;
SELECT * FROM v0, rt0, vt1 WHERE (CHANGES()) ORDER BY (((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0)))) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c2)==(rt0.c1))))  NULLS LAST, ((rt0.c1 IN (rt0.c2, rt0.c1)) IN (CASE WHEN vt1.c0 THEN rt0.c1 END, (~ (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY (((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0)))) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c2)==(rt0.c1))))  NULLS LAST, ((rt0.c1 IN (rt0.c2, rt0.c1)) IN (CASE WHEN vt1.c0 THEN rt0.c1 END, (~ (rt0.c0)))));
SELECT * FROM v0, rt0, vt1 WHERE (CHANGES()) ORDER BY (((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0)))) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c2)==(rt0.c1))))  NULLS LAST, ((rt0.c1 IN (rt0.c2, rt0.c1)) IN (CASE WHEN vt1.c0 THEN rt0.c1 END, (~ (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY (((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0)))) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c2)==(rt0.c1))))  NULLS LAST, ((rt0.c1 IN (rt0.c2, rt0.c1)) IN (CASE WHEN vt1.c0 THEN rt0.c1 END, (~ (rt0.c0)))));
SELECT * FROM v0, rt0, vt1 WHERE (CHANGES()) ORDER BY (((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0)))) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c2)==(rt0.c1))))  NULLS LAST, ((rt0.c1 IN (rt0.c2, rt0.c1)) IN (CASE WHEN vt1.c0 THEN rt0.c1 END, (~ (rt0.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c1 COLLATE RTRIM AS INTEGER)) ORDER BY COALESCE(DISTINCT HEX(rt0.c0), ((((rt0.c2)AND(rt0.c1)))OR(rt0.c1))) DESC, (((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY COALESCE(DISTINCT HEX(rt0.c0), ((((rt0.c2)AND(rt0.c1)))OR(rt0.c1))) DESC, (((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c0)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c1 COLLATE RTRIM AS INTEGER)) ORDER BY COALESCE(DISTINCT HEX(rt0.c0), ((((rt0.c2)AND(rt0.c1)))OR(rt0.c1))) DESC, (((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY COALESCE(DISTINCT HEX(rt0.c0), ((((rt0.c2)AND(rt0.c1)))OR(rt0.c1))) DESC, (((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c0)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c1 COLLATE RTRIM AS INTEGER)) ORDER BY COALESCE(DISTINCT HEX(rt0.c0), ((((rt0.c2)AND(rt0.c1)))OR(rt0.c1))) DESC, (((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c0)) IN ())  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((('1207868997') NOT BETWEEN (((((rt0.c2)AND(rt0.c0)))AND(rt0.c1))) AND (0.24277374476567803)));
SELECT SUM(count) FROM (SELECT ALL (((('1207868997') NOT BETWEEN (((((rt0.c2)AND(rt0.c0)))AND(rt0.c1))) AND (0.24277374476567803))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((('1207868997') NOT BETWEEN (((((rt0.c2)AND(rt0.c0)))AND(rt0.c1))) AND (0.24277374476567803)));
SELECT SUM(count) FROM (SELECT ALL (((('1207868997') NOT BETWEEN (((((rt0.c2)AND(rt0.c0)))AND(rt0.c1))) AND (0.24277374476567803))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((('1207868997') NOT BETWEEN (((((rt0.c2)AND(rt0.c0)))AND(rt0.c1))) AND (0.24277374476567803)));
SELECT COUNT(*) FROM vt1 NOT INDEXED, v0, rt0 WHERE (0.6577626856343552) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((0.6577626856343552) IS TRUE)  as count FROM vt1, v0, rt0 ORDER BY vt1.c0);
SELECT COUNT(*) FROM vt1 NOT INDEXED, v0, rt0 WHERE (0.6577626856343552) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((0.6577626856343552) IS TRUE)  as count FROM vt1, v0, rt0 ORDER BY vt1.c0);
SELECT COUNT(*) FROM vt1 NOT INDEXED, v0, rt0 WHERE (0.6577626856343552) ORDER BY vt1.c0;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NULL)IS(rt0.c0)) IN (CAST(rt0.c2 AS REAL), CAST(rt0.c1 AS INTEGER)))) ORDER BY json_remove(ABS(rt0.c2), rt0.c0 COLLATE BINARY, (~ (rt0.c2)), 'Ox' COLLATE NOCASE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NULL)IS(rt0.c0)) IN (CAST(rt0.c2 AS REAL), CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt0 ORDER BY json_remove(ABS(rt0.c2), rt0.c0 COLLATE BINARY, (~ (rt0.c2)), 'Ox' COLLATE NOCASE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NULL)IS(rt0.c0)) IN (CAST(rt0.c2 AS REAL), CAST(rt0.c1 AS INTEGER)))) ORDER BY json_remove(ABS(rt0.c2), rt0.c0 COLLATE BINARY, (~ (rt0.c2)), 'Ox' COLLATE NOCASE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NULL)IS(rt0.c0)) IN (CAST(rt0.c2 AS REAL), CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt0 ORDER BY json_remove(ABS(rt0.c2), rt0.c0 COLLATE BINARY, (~ (rt0.c2)), 'Ox' COLLATE NOCASE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NULL)IS(rt0.c0)) IN (CAST(rt0.c2 AS REAL), CAST(rt0.c1 AS INTEGER)))) ORDER BY json_remove(ABS(rt0.c2), rt0.c0 COLLATE BINARY, (~ (rt0.c2)), 'Ox' COLLATE NOCASE) DESC  NULLS FIRST;
SELECT * FROM v0 LEFT OUTER JOIN vt1 ON CASE WHEN rt0.c1 COLLATE BINARY THEN ((rt0.c1)&(rt0.c1)) ELSE (((rt0.c0))=((rt0.c1))) END INNER JOIN rt0 ON ((((rt0.c1) IS FALSE)) NOT BETWEEN (load_extension(rt0.c1, v0.c0)) AND (((((vt1.c0)AND(rt0.c0)))OR(rt0.c1)))) WHERE (((v0.c0)AND(((NULL)GLOB(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)AND(((NULL)GLOB(rt0.c2))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON CASE WHEN rt0.c1 COLLATE BINARY THEN ((rt0.c1)&(rt0.c1)) ELSE (((rt0.c0))==((rt0.c1))) END INNER JOIN rt0 ON ((((rt0.c1) IS FALSE)) NOT BETWEEN (load_extension(rt0.c1, v0.c0)) AND (((((vt1.c0)AND(rt0.c0)))OR(rt0.c1)))));
SELECT * FROM v0 LEFT OUTER JOIN vt1 ON CASE WHEN rt0.c1 COLLATE BINARY THEN ((rt0.c1)&(rt0.c1)) ELSE (((rt0.c0))=((rt0.c1))) END INNER JOIN rt0 ON ((((rt0.c1) IS FALSE)) NOT BETWEEN (load_extension(rt0.c1, v0.c0)) AND (((((vt1.c0)AND(rt0.c0)))OR(rt0.c1)))) WHERE (((v0.c0)AND(((NULL)GLOB(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)AND(((NULL)GLOB(rt0.c2))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON CASE WHEN rt0.c1 COLLATE BINARY THEN ((rt0.c1)&(rt0.c1)) ELSE (((rt0.c0))==((rt0.c1))) END INNER JOIN rt0 ON ((((rt0.c1) IS FALSE)) NOT BETWEEN (load_extension(rt0.c1, v0.c0)) AND (((((vt1.c0)AND(rt0.c0)))OR(rt0.c1)))));
SELECT COUNT(*) FROM rt0, v0, vt1 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0, v0, vt1);
SELECT COUNT(*) FROM rt0, v0, vt1 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0, v0, vt1);
SELECT COUNT(*) FROM rt0, v0, vt1 WHERE (v0.c0);
SELECT ALL * FROM rt0, v0, vt1 WHERE (1289768784) ORDER BY ((vt1.c0) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((1289768784) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY ((vt1.c0) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt1.c0))))));
SELECT ALL * FROM rt0, v0, vt1 WHERE (1289768784) ORDER BY ((vt1.c0) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((1289768784) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY ((vt1.c0) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt1.c0))))));
SELECT ALL * FROM rt0, v0, vt1 WHERE (1289768784) ORDER BY ((vt1.c0) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt1.c0)))));
SELECT ALL * FROM v0, rt0, vt1 WHERE ((((((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((x'', rt0.c1, rt0.c1)) AND ((rt0.c1, v0.c0, v0.c0)))) NOTNULL)) ORDER BY ((NULL) NOT BETWEEN (((x'e3e5') NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND ((rt0.c2 IN (NULL)))) DESC  NULLS FIRST, ((COALESCE(rt0.c2, 0.5605834757396608, vt1.c0, v0.c0))>(((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((x'', rt0.c1, rt0.c1)) AND ((rt0.c1, v0.c0, v0.c0)))) NOTNULL)) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY ((NULL) NOT BETWEEN (((x'e3e5') NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND ((rt0.c2 IN (NULL)))) DESC  NULLS FIRST, ((COALESCE(rt0.c2, 0.5605834757396608, vt1.c0, v0.c0))>(((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) DESC);
SELECT ALL * FROM v0, rt0, vt1 WHERE ((((((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((x'', rt0.c1, rt0.c1)) AND ((rt0.c1, v0.c0, v0.c0)))) NOTNULL)) ORDER BY ((NULL) NOT BETWEEN (((x'e3e5') NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND ((rt0.c2 IN (NULL)))) DESC  NULLS FIRST, ((COALESCE(rt0.c2, 0.5605834757396608, vt1.c0, v0.c0))>(((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((x'', rt0.c1, rt0.c1)) AND ((rt0.c1, v0.c0, v0.c0)))) NOTNULL)) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY ((NULL) NOT BETWEEN (((x'e3e5') NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND ((rt0.c2 IN (NULL)))) DESC  NULLS FIRST, ((COALESCE(rt0.c2, 0.5605834757396608, vt1.c0, v0.c0))>(((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) DESC);
SELECT ALL * FROM v0, rt0, vt1 WHERE ((((((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((x'', rt0.c1, rt0.c1)) AND ((rt0.c1, v0.c0, v0.c0)))) NOTNULL)) ORDER BY ((NULL) NOT BETWEEN (((x'e3e5') NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND ((rt0.c2 IN (NULL)))) DESC  NULLS FIRST, ((COALESCE(rt0.c2, 0.5605834757396608, vt1.c0, v0.c0))>(((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY '챀('  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY '챀('  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY '챀('  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY '챀('  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY '챀('  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON ((((rt0.c1)OR(v0.c0 COLLATE RTRIM)))AND(((rt0.c1)IS NOT(rt0.c1)))) CROSS JOIN vt1 ON CASE CASE rt0.c2  WHEN v0.c0 THEN rt0.c2 ELSE rt0.c1 END  WHEN (NOT (rt0.c1)) THEN (~ ('_].\nB?w榰')) END WHERE ((v0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ())) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((((rt0.c1)OR(v0.c0 COLLATE RTRIM)))AND(((rt0.c1)IS NOT(rt0.c1)))) CROSS JOIN vt1 ON CASE CASE rt0.c2  WHEN v0.c0 THEN rt0.c2 ELSE rt0.c1 END  WHEN (NOT (rt0.c1)) THEN (~ ('_].\nB?w榰')) END);
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON ((((rt0.c1)OR(v0.c0 COLLATE RTRIM)))AND(((rt0.c1)IS NOT(rt0.c1)))) CROSS JOIN vt1 ON CASE CASE rt0.c2  WHEN v0.c0 THEN rt0.c2 ELSE rt0.c1 END  WHEN (NOT (rt0.c1)) THEN (~ ('_].\nB?w榰')) END WHERE ((v0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ())) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((((rt0.c1)OR(v0.c0 COLLATE RTRIM)))AND(((rt0.c1)IS NOT(rt0.c1)))) CROSS JOIN vt1 ON CASE CASE rt0.c2  WHEN v0.c0 THEN rt0.c2 ELSE rt0.c1 END  WHEN (NOT (rt0.c1)) THEN (~ ('_].\nB?w榰')) END);
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON ((((rt0.c1)OR(v0.c0 COLLATE RTRIM)))AND(((rt0.c1)IS NOT(rt0.c1)))) CROSS JOIN vt1 ON CASE CASE rt0.c2  WHEN v0.c0 THEN rt0.c2 ELSE rt0.c1 END  WHEN (NOT (rt0.c1)) THEN (~ ('_].\nB?w榰')) END WHERE ((v0.c0 IN ()));
SELECT * FROM v0, rt0 WHERE (CAST(rt0.c2 AS INTEGER)) ORDER BY (('㩣+z溔') IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS INTEGER)) IS TRUE)  as count FROM v0, rt0 ORDER BY (('㩣+z溔') IS TRUE) ASC  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE (CAST(rt0.c2 AS INTEGER)) ORDER BY (('㩣+z溔') IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS INTEGER)) IS TRUE)  as count FROM v0, rt0 ORDER BY (('㩣+z溔') IS TRUE) ASC  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE (CAST(rt0.c2 AS INTEGER)) ORDER BY (('㩣+z溔') IS TRUE) ASC  NULLS FIRST;
SELECT * FROM rt0, vt1 WHERE (((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))OR(CAST(rt0.c2 AS REAL))))AND(((rt0.c0) NOTNULL)))) ORDER BY COALESCE(((vt1.c0) IS FALSE), rt0.c2)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))OR(CAST(rt0.c2 AS REAL))))AND(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY COALESCE(((vt1.c0) IS FALSE), rt0.c2)  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE (((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))OR(CAST(rt0.c2 AS REAL))))AND(((rt0.c0) NOTNULL)))) ORDER BY COALESCE(((vt1.c0) IS FALSE), rt0.c2)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))OR(CAST(rt0.c2 AS REAL))))AND(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY COALESCE(((vt1.c0) IS FALSE), rt0.c2)  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE (((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))OR(CAST(rt0.c2 AS REAL))))AND(((rt0.c0) NOTNULL)))) ORDER BY COALESCE(((vt1.c0) IS FALSE), rt0.c2)  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0, vt1 WHERE (ABS(DISTINCT '295045215')) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT '295045215')) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY vt1.c0);
SELECT COUNT(*) FROM v0, rt0, vt1 WHERE (ABS(DISTINCT '295045215')) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT '295045215')) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY vt1.c0);
SELECT COUNT(*) FROM v0, rt0, vt1 WHERE (ABS(DISTINCT '295045215')) ORDER BY vt1.c0;
SELECT ALL COUNT(*) FROM rt0, vt1, v0 WHERE (CAST((+ (vt1.c0)) AS INTEGER)) ORDER BY (CAST(0.7932860534332793 AS INTEGER) IN ()) ASC  NULLS FIRST, (- (rt0.c2));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY (CAST(0.7932860534332793 AS INTEGER) IN ()) ASC  NULLS FIRST, (- (rt0.c2)));
SELECT ALL COUNT(*) FROM rt0, vt1, v0 WHERE (CAST((+ (vt1.c0)) AS INTEGER)) ORDER BY (CAST(0.7932860534332793 AS INTEGER) IN ()) ASC  NULLS FIRST, (- (rt0.c2));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY (CAST(0.7932860534332793 AS INTEGER) IN ()) ASC  NULLS FIRST, (- (rt0.c2)));
SELECT ALL COUNT(*) FROM rt0, vt1, v0 WHERE (CAST((+ (vt1.c0)) AS INTEGER)) ORDER BY (CAST(0.7932860534332793 AS INTEGER) IN ()) ASC  NULLS FIRST, (- (rt0.c2));
SELECT * FROM rt0 WHERE (ABS(CASE WHEN rt0.c1 THEN x'' WHEN rt0.c0 THEN '-549753257' WHEN rt0.c2 THEN rt0.c0 END)) ORDER BY (+ (rt0.c2))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(CASE WHEN rt0.c1 THEN x'' WHEN rt0.c0 THEN '-549753257' WHEN rt0.c2 THEN rt0.c0 END)) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c2))  NULLS LAST);
SELECT * FROM rt0 WHERE (ABS(CASE WHEN rt0.c1 THEN x'' WHEN rt0.c0 THEN '-549753257' WHEN rt0.c2 THEN rt0.c0 END)) ORDER BY (+ (rt0.c2))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(CASE WHEN rt0.c1 THEN x'' WHEN rt0.c0 THEN '-549753257' WHEN rt0.c2 THEN rt0.c0 END)) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c2))  NULLS LAST);
SELECT * FROM rt0 WHERE (ABS(CASE WHEN rt0.c1 THEN x'' WHEN rt0.c0 THEN '-549753257' WHEN rt0.c2 THEN rt0.c0 END)) ORDER BY (+ (rt0.c2))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((-2000995741) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((-2000995741) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((-2000995741) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((-2000995741) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((-2000995741) IS TRUE));
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT * FROM v0 WHERE ((((('') BETWEEN (v0.c0) AND (v0.c0)))-((v0.c0 IN ())))) ORDER BY ((v0.c0 COLLATE RTRIM)LIKE(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT (((((('') BETWEEN (v0.c0) AND (v0.c0)))-((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE RTRIM)LIKE(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT * FROM v0 WHERE ((((('') BETWEEN (v0.c0) AND (v0.c0)))-((v0.c0 IN ())))) ORDER BY ((v0.c0 COLLATE RTRIM)LIKE(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT (((((('') BETWEEN (v0.c0) AND (v0.c0)))-((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE RTRIM)LIKE(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT * FROM v0 WHERE ((((('') BETWEEN (v0.c0) AND (v0.c0)))-((v0.c0 IN ())))) ORDER BY ((v0.c0 COLLATE RTRIM)LIKE(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))));
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT * FROM vt1, rt0, v0 WHERE ((((v0.c0, rt0.c1, vt1.c0)) BETWEEN (((- (vt1.c0)), (rt0.c2 IN ()), CASE WHEN vt1.c0 THEN rt0.c1 END)) AND ((v0.c0, LOWER(rt0.c0), (('-424284872') NOT BETWEEN (x'') AND (rt0.c2)))))) ORDER BY CASE WHEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN rt0.c1 ELSE v0.c0 END THEN CAST(v0.c0 AS INTEGER) ELSE CAST(rt0.c0 AS NUMERIC) END  NULLS LAST, (((v0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN x'b0aa' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)) AND (((('0.6577626856343552') ISNULL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0, rt0.c1, vt1.c0)) BETWEEN (((- (vt1.c0)), (rt0.c2 IN ()), CASE WHEN vt1.c0 THEN rt0.c1 END)) AND ((v0.c0, LOWER(rt0.c0), (('-424284872') NOT BETWEEN (x'') AND (rt0.c2)))))) IS TRUE)  as count FROM vt1, rt0, v0 ORDER BY CASE WHEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN rt0.c1 ELSE v0.c0 END THEN CAST(v0.c0 AS INTEGER) ELSE CAST(rt0.c0 AS NUMERIC) END  NULLS LAST, (((v0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN x'b0aa' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)) AND (((('0.6577626856343552') ISNULL)))) DESC  NULLS LAST);
SELECT * FROM vt1, rt0, v0 WHERE ((((v0.c0, rt0.c1, vt1.c0)) BETWEEN (((- (vt1.c0)), (rt0.c2 IN ()), CASE WHEN vt1.c0 THEN rt0.c1 END)) AND ((v0.c0, LOWER(rt0.c0), (('-424284872') NOT BETWEEN (x'') AND (rt0.c2)))))) ORDER BY CASE WHEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN rt0.c1 ELSE v0.c0 END THEN CAST(v0.c0 AS INTEGER) ELSE CAST(rt0.c0 AS NUMERIC) END  NULLS LAST, (((v0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN x'b0aa' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)) AND (((('0.6577626856343552') ISNULL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0, rt0.c1, vt1.c0)) BETWEEN (((- (vt1.c0)), (rt0.c2 IN ()), CASE WHEN vt1.c0 THEN rt0.c1 END)) AND ((v0.c0, LOWER(rt0.c0), (('-424284872') NOT BETWEEN (x'') AND (rt0.c2)))))) IS TRUE)  as count FROM vt1, rt0, v0 ORDER BY CASE WHEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN rt0.c1 ELSE v0.c0 END THEN CAST(v0.c0 AS INTEGER) ELSE CAST(rt0.c0 AS NUMERIC) END  NULLS LAST, (((v0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN x'b0aa' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)) AND (((('0.6577626856343552') ISNULL)))) DESC  NULLS LAST);
SELECT * FROM vt1, rt0, v0 WHERE ((((v0.c0, rt0.c1, vt1.c0)) BETWEEN (((- (vt1.c0)), (rt0.c2 IN ()), CASE WHEN vt1.c0 THEN rt0.c1 END)) AND ((v0.c0, LOWER(rt0.c0), (('-424284872') NOT BETWEEN (x'') AND (rt0.c2)))))) ORDER BY CASE WHEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN rt0.c1 ELSE v0.c0 END THEN CAST(v0.c0 AS INTEGER) ELSE CAST(rt0.c0 AS NUMERIC) END  NULLS LAST, (((v0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN x'b0aa' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)) AND (((('0.6577626856343552') ISNULL)))) DESC  NULLS LAST;
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT COUNT(*) FROM rt0, v0 NATURAL JOIN vt1 WHERE ((((((('-569384226')OR(rt0.c2)))OR(vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((('-569384226')OR(rt0.c2)))OR(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, v0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM rt0, v0 NATURAL JOIN vt1 WHERE ((((((('-569384226')OR(rt0.c2)))OR(vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((('-569384226')OR(rt0.c2)))OR(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, v0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM rt0, v0 NATURAL JOIN vt1 WHERE ((((((('-569384226')OR(rt0.c2)))OR(vt1.c0))) NOTNULL));
SELECT COUNT(*) FROM vt1, v0, rt0 WHERE (((((((v0.c0)>(v0.c0)))OR((((rt0.c2))!=((rt0.c1))))))AND(((v0.c0)|(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)>(v0.c0)))OR((((rt0.c2))<>((rt0.c1))))))AND(((v0.c0)|(rt0.c2))))) IS TRUE)  as count FROM vt1, v0, rt0);
SELECT COUNT(*) FROM vt1, v0, rt0 WHERE (((((((v0.c0)>(v0.c0)))OR((((rt0.c2))!=((rt0.c1))))))AND(((v0.c0)|(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)>(v0.c0)))OR((((rt0.c2))<>((rt0.c1))))))AND(((v0.c0)|(rt0.c2))))) IS TRUE)  as count FROM vt1, v0, rt0);
SELECT COUNT(*) FROM vt1, v0, rt0 WHERE (((((((v0.c0)>(v0.c0)))OR((((rt0.c2))!=((rt0.c1))))))AND(((v0.c0)|(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0, v0, vt1 WHERE (CASE WHEN CAST(v0.c0 AS NUMERIC) THEN ((rt0.c0)IS NOT(rt0.c1)) ELSE ((v0.c0)>>(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(v0.c0 AS NUMERIC) THEN ((rt0.c0)IS NOT(rt0.c1)) ELSE ((v0.c0)>>(vt1.c0)) END) IS TRUE)  as count FROM rt0, v0, vt1);
SELECT ALL COUNT(*) FROM rt0, v0, vt1 WHERE (CASE WHEN CAST(v0.c0 AS NUMERIC) THEN ((rt0.c0)IS NOT(rt0.c1)) ELSE ((v0.c0)>>(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(v0.c0 AS NUMERIC) THEN ((rt0.c0)IS NOT(rt0.c1)) ELSE ((v0.c0)>>(vt1.c0)) END) IS TRUE)  as count FROM rt0, v0, vt1);
SELECT ALL COUNT(*) FROM rt0, v0, vt1 WHERE (CASE WHEN CAST(v0.c0 AS NUMERIC) THEN ((rt0.c0)IS NOT(rt0.c1)) ELSE ((v0.c0)>>(vt1.c0)) END);
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN ((CAST(rt0.c1 AS NUMERIC))) AND ((vt1.c0))) CROSS JOIN v0 ON (((rt0.c1)) BETWEEN ((((rt0.c1)%(rt0.c1)))) AND ((((0.6728502344754111) NOT BETWEEN (vt1.c0) AND (rt0.c1))))) WHERE (CASE WHEN vt1.c0 COLLATE RTRIM THEN v0.c0 WHEN v0.c0 COLLATE BINARY THEN ((v0.c0)OR(rt0.c1)) WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c1)&(rt0.c1)) END) ORDER BY NULLIF(DISTINCT rt0.c2, NULL), ((v0.c0 COLLATE RTRIM) NOTNULL);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 COLLATE RTRIM THEN v0.c0 WHEN v0.c0 COLLATE BINARY THEN ((v0.c0)OR(rt0.c1)) WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c1)&(rt0.c1)) END) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN ((CAST(rt0.c1 AS NUMERIC))) AND ((vt1.c0))) CROSS JOIN v0 ON (((rt0.c1)) BETWEEN ((((rt0.c1)%(rt0.c1)))) AND ((((0.6728502344754111) NOT BETWEEN (vt1.c0) AND (rt0.c1))))) ORDER BY NULLIF(DISTINCT rt0.c2, NULL), ((v0.c0 COLLATE RTRIM) NOTNULL));
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN ((CAST(rt0.c1 AS NUMERIC))) AND ((vt1.c0))) CROSS JOIN v0 ON (((rt0.c1)) BETWEEN ((((rt0.c1)%(rt0.c1)))) AND ((((0.6728502344754111) NOT BETWEEN (vt1.c0) AND (rt0.c1))))) WHERE (CASE WHEN vt1.c0 COLLATE RTRIM THEN v0.c0 WHEN v0.c0 COLLATE BINARY THEN ((v0.c0)OR(rt0.c1)) WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c1)&(rt0.c1)) END) ORDER BY NULLIF(DISTINCT rt0.c2, NULL), ((v0.c0 COLLATE RTRIM) NOTNULL);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 COLLATE RTRIM THEN v0.c0 WHEN v0.c0 COLLATE BINARY THEN ((v0.c0)OR(rt0.c1)) WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c1)&(rt0.c1)) END) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN ((CAST(rt0.c1 AS NUMERIC))) AND ((vt1.c0))) CROSS JOIN v0 ON (((rt0.c1)) BETWEEN ((((rt0.c1)%(rt0.c1)))) AND ((((0.6728502344754111) NOT BETWEEN (vt1.c0) AND (rt0.c1))))) ORDER BY NULLIF(DISTINCT rt0.c2, NULL), ((v0.c0 COLLATE RTRIM) NOTNULL));
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN ((CAST(rt0.c1 AS NUMERIC))) AND ((vt1.c0))) CROSS JOIN v0 ON (((rt0.c1)) BETWEEN ((((rt0.c1)%(rt0.c1)))) AND ((((0.6728502344754111) NOT BETWEEN (vt1.c0) AND (rt0.c1))))) WHERE (CASE WHEN vt1.c0 COLLATE RTRIM THEN v0.c0 WHEN v0.c0 COLLATE BINARY THEN ((v0.c0)OR(rt0.c1)) WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c1)&(rt0.c1)) END) ORDER BY NULLIF(DISTINCT rt0.c2, NULL), ((v0.c0 COLLATE RTRIM) NOTNULL);
SELECT ALL COUNT(*) FROM vt1, rt0, v0 WHERE (LIKELY(CAST(v0.c0 AS BLOB))) ORDER BY ((rt0.c1) ISNULL) DESC, LOWER(DISTINCT NULLIF(DISTINCT vt1.c0, rt0.c2));
SELECT SUM(count) FROM (SELECT ((LIKELY(CAST(v0.c0 AS BLOB))) IS TRUE)  as count FROM vt1, rt0, v0 ORDER BY ((rt0.c1) ISNULL) DESC, LOWER(DISTINCT NULLIF(DISTINCT vt1.c0, rt0.c2)));
SELECT ALL COUNT(*) FROM vt1, rt0, v0 WHERE (LIKELY(CAST(v0.c0 AS BLOB))) ORDER BY ((rt0.c1) ISNULL) DESC, LOWER(DISTINCT NULLIF(DISTINCT vt1.c0, rt0.c2));
SELECT SUM(count) FROM (SELECT ((LIKELY(CAST(v0.c0 AS BLOB))) IS TRUE)  as count FROM vt1, rt0, v0 ORDER BY ((rt0.c1) ISNULL) DESC, LOWER(DISTINCT NULLIF(DISTINCT vt1.c0, rt0.c2)));
SELECT ALL COUNT(*) FROM vt1, rt0, v0 WHERE (LIKELY(CAST(v0.c0 AS BLOB))) ORDER BY ((rt0.c1) ISNULL) DESC, LOWER(DISTINCT NULLIF(DISTINCT vt1.c0, rt0.c2));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN v0 ON ((CAST(v0.c0 AS REAL))||(vt1.c0)) WHERE ((+ (((((v0.c0)AND(vt1.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((((v0.c0)AND(vt1.c0)))OR(v0.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN v0 ON ((CAST(v0.c0 AS REAL))||(vt1.c0)));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN v0 ON ((CAST(v0.c0 AS REAL))||(vt1.c0)) WHERE ((+ (((((v0.c0)AND(vt1.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((((v0.c0)AND(vt1.c0)))OR(v0.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN v0 ON ((CAST(v0.c0 AS REAL))||(vt1.c0)));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN v0 ON ((CAST(v0.c0 AS REAL))||(vt1.c0)) WHERE ((+ (((((v0.c0)AND(vt1.c0)))OR(v0.c0)))));
SELECT * FROM v0, vt1 WHERE ((- (vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((- (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE ((- (vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((- (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE ((- (vt1.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((0.29345329971524803 IN (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((0.29345329971524803 IN (vt1.c0))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((0.29345329971524803 IN (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((0.29345329971524803 IN (vt1.c0))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((0.29345329971524803 IN (vt1.c0)));
SELECT ALL * FROM vt1 INNER JOIN v0 ON ((vt1.c0) NOT NULL) WHERE (0.6529229937841138);
SELECT SUM(count) FROM (SELECT ALL ((0.6529229937841138) IS TRUE)  as count FROM vt1 INNER JOIN v0 ON ((vt1.c0) NOT NULL));
SELECT ALL * FROM vt1 INNER JOIN v0 ON ((vt1.c0) NOT NULL) WHERE (0.6529229937841138);
SELECT SUM(count) FROM (SELECT ALL ((0.6529229937841138) IS TRUE)  as count FROM vt1 INNER JOIN v0 ON ((vt1.c0) NOT NULL));
SELECT ALL * FROM vt1 INNER JOIN v0 ON ((vt1.c0) NOT NULL) WHERE (0.6529229937841138);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (HEX(((v0.c0)>>(v0.c0))));
SELECT SUM(count) FROM (SELECT ((HEX(((v0.c0)>>(v0.c0)))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (HEX(((v0.c0)>>(v0.c0))));
SELECT SUM(count) FROM (SELECT ((HEX(((v0.c0)>>(v0.c0)))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (HEX(((v0.c0)>>(v0.c0))));
SELECT * FROM v0 LEFT OUTER JOIN vt1 ON ((vt1.c0)|(NULL)) WHERE (vt1.c0) ORDER BY (((v0.c0)) NOT BETWEEN ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(v0.c0)))AND(v0.c0)))) AND (((v0.c0 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON ((vt1.c0)|(NULL)) ORDER BY (((v0.c0)) NOT BETWEEN ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(v0.c0)))AND(v0.c0)))) AND (((v0.c0 IN ())))) DESC);
SELECT * FROM v0 LEFT OUTER JOIN vt1 ON ((vt1.c0)|(NULL)) WHERE (vt1.c0) ORDER BY (((v0.c0)) NOT BETWEEN ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(v0.c0)))AND(v0.c0)))) AND (((v0.c0 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON ((vt1.c0)|(NULL)) ORDER BY (((v0.c0)) NOT BETWEEN ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(v0.c0)))AND(v0.c0)))) AND (((v0.c0 IN ())))) DESC);
SELECT * FROM v0 LEFT OUTER JOIN vt1 ON ((vt1.c0)|(NULL)) WHERE (vt1.c0) ORDER BY (((v0.c0)) NOT BETWEEN ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(v0.c0)))AND(v0.c0)))) AND (((v0.c0 IN ())))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON CASE (((vt1.c0)) BETWEEN ((v0.c0)) AND ((rt0.c1)))  WHEN CAST(rt0.c1 AS BLOB) THEN (rt0.c0 IN ()) WHEN ((0.6251499689209611)+(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) WHEN CAST(v0.c0 AS TEXT) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (NULL)) ELSE '10578980' END LEFT OUTER JOIN vt1 ON CAST(((((rt0.c0)OR(rt0.c1)))AND(v0.c0)) AS INTEGER) WHERE ((NOT ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON CASE (((vt1.c0)) BETWEEN ((v0.c0)) AND ((rt0.c1)))  WHEN CAST(rt0.c1 AS BLOB) THEN (rt0.c0 IN ()) WHEN ((0.6251499689209611)+(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) WHEN CAST(v0.c0 AS TEXT) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (NULL)) ELSE '10578980' END LEFT OUTER JOIN vt1 ON CAST(((((rt0.c0)OR(rt0.c1)))AND(v0.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON CASE (((vt1.c0)) BETWEEN ((v0.c0)) AND ((rt0.c1)))  WHEN CAST(rt0.c1 AS BLOB) THEN (rt0.c0 IN ()) WHEN ((0.6251499689209611)+(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) WHEN CAST(v0.c0 AS TEXT) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (NULL)) ELSE '10578980' END LEFT OUTER JOIN vt1 ON CAST(((((rt0.c0)OR(rt0.c1)))AND(v0.c0)) AS INTEGER) WHERE ((NOT ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON CASE (((vt1.c0)) BETWEEN ((v0.c0)) AND ((rt0.c1)))  WHEN CAST(rt0.c1 AS BLOB) THEN (rt0.c0 IN ()) WHEN ((0.6251499689209611)+(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) WHEN CAST(v0.c0 AS TEXT) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (NULL)) ELSE '10578980' END LEFT OUTER JOIN vt1 ON CAST(((((rt0.c0)OR(rt0.c1)))AND(v0.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON CASE (((vt1.c0)) BETWEEN ((v0.c0)) AND ((rt0.c1)))  WHEN CAST(rt0.c1 AS BLOB) THEN (rt0.c0 IN ()) WHEN ((0.6251499689209611)+(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) WHEN CAST(v0.c0 AS TEXT) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (NULL)) ELSE '10578980' END LEFT OUTER JOIN vt1 ON CAST(((((rt0.c0)OR(rt0.c1)))AND(v0.c0)) AS INTEGER) WHERE ((NOT ((rt0.c0 IN ()))));
SELECT COUNT(*) FROM v0, vt1 WHERE (v0.c0) ORDER BY ((((vt1.c0)-(v0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt1 ORDER BY ((((vt1.c0)-(v0.c0))) ISNULL));
SELECT COUNT(*) FROM v0, vt1 WHERE (v0.c0) ORDER BY ((((vt1.c0)-(v0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt1 ORDER BY ((((vt1.c0)-(v0.c0))) ISNULL));
SELECT COUNT(*) FROM v0, vt1 WHERE (v0.c0) ORDER BY ((((vt1.c0)-(v0.c0))) ISNULL);
SELECT ALL * FROM vt1, v0, rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c0)IS(v0.c0)))) AND ((UNLIKELY(v0.c0))))) ORDER BY (NOT (CASE WHEN rt0.c1 THEN vt1.c0 END))  NULLS FIRST, ((CAST(rt0.c1 AS BLOB)) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND (x'')) ASC, (((v0.c0)) NOT BETWEEN ((CAST(rt0.c0 AS BLOB))) AND (((((rt0.c1)) BETWEEN ((v0.c0)) AND ((vt1.c0)))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((((rt0.c0)IS(v0.c0)))) AND ((UNLIKELY(v0.c0))))) IS TRUE)  as count FROM vt1, v0, rt0 ORDER BY (NOT (CASE WHEN rt0.c1 THEN vt1.c0 END))  NULLS FIRST, ((CAST(rt0.c1 AS BLOB)) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND (x'')) ASC, (((v0.c0)) NOT BETWEEN ((CAST(rt0.c0 AS BLOB))) AND (((((rt0.c1)) BETWEEN ((v0.c0)) AND ((vt1.c0)))))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, v0, rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c0)IS(v0.c0)))) AND ((UNLIKELY(v0.c0))))) ORDER BY (NOT (CASE WHEN rt0.c1 THEN vt1.c0 END))  NULLS FIRST, ((CAST(rt0.c1 AS BLOB)) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND (x'')) ASC, (((v0.c0)) NOT BETWEEN ((CAST(rt0.c0 AS BLOB))) AND (((((rt0.c1)) BETWEEN ((v0.c0)) AND ((vt1.c0)))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((((rt0.c0)IS(v0.c0)))) AND ((UNLIKELY(v0.c0))))) IS TRUE)  as count FROM vt1, v0, rt0 ORDER BY (NOT (CASE WHEN rt0.c1 THEN vt1.c0 END))  NULLS FIRST, ((CAST(rt0.c1 AS BLOB)) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND (x'')) ASC, (((v0.c0)) NOT BETWEEN ((CAST(rt0.c0 AS BLOB))) AND (((((rt0.c1)) BETWEEN ((v0.c0)) AND ((vt1.c0)))))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, v0, rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c0)IS(v0.c0)))) AND ((UNLIKELY(v0.c0))))) ORDER BY (NOT (CASE WHEN rt0.c1 THEN vt1.c0 END))  NULLS FIRST, ((CAST(rt0.c1 AS BLOB)) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND (x'')) ASC, (((v0.c0)) NOT BETWEEN ((CAST(rt0.c0 AS BLOB))) AND (((((rt0.c1)) BETWEEN ((v0.c0)) AND ((vt1.c0)))))) DESC  NULLS LAST;
SELECT ALL * FROM vt1, v0 WHERE (x'') ORDER BY (NOT (((vt1.c0)>>(-7.76264454E8)))), ((((vt1.c0)&(vt1.c0)))IS('-385117376')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, v0 ORDER BY (NOT (((vt1.c0)>>(-7.76264454E8)))), ((((vt1.c0)&(vt1.c0)))IS('-385117376')) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, v0 WHERE (x'') ORDER BY (NOT (((vt1.c0)>>(-7.76264454E8)))), ((((vt1.c0)&(vt1.c0)))IS('-385117376')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, v0 ORDER BY (NOT (((vt1.c0)>>(-7.76264454E8)))), ((((vt1.c0)&(vt1.c0)))IS('-385117376')) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, v0 WHERE (x'') ORDER BY (NOT (((vt1.c0)>>(-7.76264454E8)))), ((((vt1.c0)&(vt1.c0)))IS('-385117376')) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, v0, vt1 WHERE ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, v0, vt1);
SELECT ALL COUNT(*) FROM rt0, v0, vt1 WHERE ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, v0, vt1);
SELECT ALL COUNT(*) FROM rt0, v0, vt1 WHERE ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) IN ()));
SELECT * FROM v0, vt1, rt0 WHERE (((NULL)/(((v0.c0)LIKE(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)/(((v0.c0)LIKE(rt0.c1))))) IS TRUE)  as count FROM v0, vt1, rt0);
SELECT * FROM v0, vt1, rt0 WHERE (((NULL)/(((v0.c0)LIKE(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)/(((v0.c0)LIKE(rt0.c1))))) IS TRUE)  as count FROM v0, vt1, rt0);
SELECT * FROM v0, vt1, rt0 WHERE (((NULL)/(((v0.c0)LIKE(rt0.c1)))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOTNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOTNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOTNULL)) IS FALSE));
SELECT ALL * FROM rt0 WHERE ((+ ((((rt0.c1))!=((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((rt0.c1))<>((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ ((((rt0.c1))!=((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((rt0.c1))<>((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ ((((rt0.c1))!=((rt0.c1))))));
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c0)AND(rt0.c1)))OR(vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)AND(rt0.c1)))OR(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c0)AND(rt0.c1)))OR(vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)AND(rt0.c1)))OR(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c0)AND(rt0.c1)))OR(vt1.c0)) COLLATE BINARY);
SELECT ALL * FROM vt1, rt0 WHERE (((((((((vt1.c0)OR(rt0.c1)))OR(x'86fb')))AND(rt0.c1)))AND((rt0.c1 IN ())))) ORDER BY CASE WHEN (('-997124967')+(rt0.c0)) THEN ((rt0.c1)%(vt1.c0)) END ASC, ((CASE WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c0 END)||(rt0.c0)) DESC, ((CAST(rt0.c1 AS NUMERIC)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0)OR(rt0.c1)))OR(x'86fb')))AND(rt0.c1)))AND((rt0.c1 IN ())))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE WHEN (('-997124967')+(rt0.c0)) THEN ((rt0.c1)%(vt1.c0)) END ASC, ((CASE WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c0 END)||(rt0.c0)) DESC, ((CAST(rt0.c1 AS NUMERIC)) NOTNULL) ASC);
SELECT ALL * FROM vt1, rt0 WHERE (((((((((vt1.c0)OR(rt0.c1)))OR(x'86fb')))AND(rt0.c1)))AND((rt0.c1 IN ())))) ORDER BY CASE WHEN (('-997124967')+(rt0.c0)) THEN ((rt0.c1)%(vt1.c0)) END ASC, ((CASE WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c0 END)||(rt0.c0)) DESC, ((CAST(rt0.c1 AS NUMERIC)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0)OR(rt0.c1)))OR(x'86fb')))AND(rt0.c1)))AND((rt0.c1 IN ())))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE WHEN (('-997124967')+(rt0.c0)) THEN ((rt0.c1)%(vt1.c0)) END ASC, ((CASE WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c0 END)||(rt0.c0)) DESC, ((CAST(rt0.c1 AS NUMERIC)) NOTNULL) ASC);
SELECT ALL * FROM vt1, rt0 WHERE (((((((((vt1.c0)OR(rt0.c1)))OR(x'86fb')))AND(rt0.c1)))AND((rt0.c1 IN ())))) ORDER BY CASE WHEN (('-997124967')+(rt0.c0)) THEN ((rt0.c1)%(vt1.c0)) END ASC, ((CASE WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c0 END)||(rt0.c0)) DESC, ((CAST(rt0.c1 AS NUMERIC)) NOTNULL) ASC;
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c2)) BETWEEN ((x'')) AND ((rt0.c0))) IN ())) ORDER BY (UNLIKELY(rt0.c2) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)) BETWEEN ((x'')) AND ((rt0.c0))) IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY (UNLIKELY(rt0.c2) IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c2)) BETWEEN ((x'')) AND ((rt0.c0))) IN ())) ORDER BY (UNLIKELY(rt0.c2) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)) BETWEEN ((x'')) AND ((rt0.c0))) IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY (UNLIKELY(rt0.c2) IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c2)) BETWEEN ((x'')) AND ((rt0.c0))) IN ())) ORDER BY (UNLIKELY(rt0.c2) IN ()) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (('-569384226') IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (('-569384226') IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (('-569384226') IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (('-569384226') IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (('-569384226') IS TRUE)  NULLS LAST;
SELECT * FROM vt1, v0 WHERE ((((IFNULL(DISTINCT v0.c0, vt1.c0)))>=((x'0d5a'))));
SELECT SUM(count) FROM (SELECT (((((IFNULL(DISTINCT v0.c0, vt1.c0)))>=((x'0d5a')))) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE ((((IFNULL(DISTINCT v0.c0, vt1.c0)))>=((x'0d5a'))));
SELECT SUM(count) FROM (SELECT (((((IFNULL(DISTINCT v0.c0, vt1.c0)))>=((x'0d5a')))) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE ((((IFNULL(DISTINCT v0.c0, vt1.c0)))>=((x'0d5a'))));
SELECT COUNT(*) FROM vt1, v0 WHERE ((((v0.c0)) BETWEEN ((CAST(v0.c0 AS REAL))) AND ((((v0.c0)+(vt1.c0)))))) ORDER BY (~ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((CAST(v0.c0 AS REAL))) AND ((((v0.c0)+(vt1.c0)))))) IS TRUE)  as count FROM vt1, v0 ORDER BY (~ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, v0 WHERE ((((v0.c0)) BETWEEN ((CAST(v0.c0 AS REAL))) AND ((((v0.c0)+(vt1.c0)))))) ORDER BY (~ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((CAST(v0.c0 AS REAL))) AND ((((v0.c0)+(vt1.c0)))))) IS TRUE)  as count FROM vt1, v0 ORDER BY (~ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, v0 WHERE ((((v0.c0)) BETWEEN ((CAST(v0.c0 AS REAL))) AND ((((v0.c0)+(vt1.c0)))))) ORDER BY (~ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT ALL * FROM vt1, v0 WHERE (((((vt1.c0)OR(vt1.c0 COLLATE NOCASE)))AND((vt1.c0 IN (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR(vt1.c0 COLLATE NOCASE)))AND((vt1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE (((((vt1.c0)OR(vt1.c0 COLLATE NOCASE)))AND((vt1.c0 IN (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR(vt1.c0 COLLATE NOCASE)))AND((vt1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE (((((vt1.c0)OR(vt1.c0 COLLATE NOCASE)))AND((vt1.c0 IN (vt1.c0)))));
SELECT * FROM v0 INNER JOIN vt1 ON (((vt1.c0, v0.c0, vt1.c0)) NOT BETWEEN ((((v0.c0)OR('a M&')), NULL, (v0.c0 IN (vt1.c0)))) AND ((((v0.c0)!=(v0.c0)), (vt1.c0 IN (v0.c0)), ((vt1.c0)<>(v0.c0))))) WHERE (((((v0.c0) NOTNULL))>(((((v0.c0)AND(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOTNULL))>(((((v0.c0)AND(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM v0 INNER JOIN vt1 ON (((vt1.c0, v0.c0, vt1.c0)) NOT BETWEEN ((((v0.c0)OR('a M&')), NULL, (v0.c0 IN (vt1.c0)))) AND ((((v0.c0)<>(v0.c0)), (vt1.c0 IN (v0.c0)), ((vt1.c0)<>(v0.c0))))));
SELECT * FROM v0 INNER JOIN vt1 ON (((vt1.c0, v0.c0, vt1.c0)) NOT BETWEEN ((((v0.c0)OR('a M&')), NULL, (v0.c0 IN (vt1.c0)))) AND ((((v0.c0)!=(v0.c0)), (vt1.c0 IN (v0.c0)), ((vt1.c0)<>(v0.c0))))) WHERE (((((v0.c0) NOTNULL))>(((((v0.c0)AND(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOTNULL))>(((((v0.c0)AND(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM v0 INNER JOIN vt1 ON (((vt1.c0, v0.c0, vt1.c0)) NOT BETWEEN ((((v0.c0)OR('a M&')), NULL, (v0.c0 IN (vt1.c0)))) AND ((((v0.c0)<>(v0.c0)), (vt1.c0 IN (v0.c0)), ((vt1.c0)<>(v0.c0))))));
SELECT * FROM v0 INNER JOIN vt1 ON (((vt1.c0, v0.c0, vt1.c0)) NOT BETWEEN ((((v0.c0)OR('a M&')), NULL, (v0.c0 IN (vt1.c0)))) AND ((((v0.c0)!=(v0.c0)), (vt1.c0 IN (v0.c0)), ((vt1.c0)<>(v0.c0))))) WHERE (((((v0.c0) NOTNULL))>(((((v0.c0)AND(vt1.c0)))OR(vt1.c0)))));
SELECT ALL * FROM vt1, v0, rt0 WHERE (NULLIF(CASE vt1.c0  WHEN rt0.c2 THEN rt0.c1 END, (- (rt0.c1)))) ORDER BY ((((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c2)))*(v0.c0))  NULLS LAST, (((rt0.c2)) NOT BETWEEN ((((rt0.c2) IS FALSE))) AND ((((rt0.c2)|(rt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(CASE vt1.c0  WHEN rt0.c2 THEN rt0.c1 END, (- (rt0.c1)))) IS TRUE)  as count FROM vt1, v0, rt0 ORDER BY ((((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c2)))*(v0.c0))  NULLS LAST, (((rt0.c2)) NOT BETWEEN ((((rt0.c2) IS FALSE))) AND ((((rt0.c2)|(rt0.c2)))))  NULLS LAST);
SELECT ALL * FROM vt1, v0, rt0 WHERE (NULLIF(CASE vt1.c0  WHEN rt0.c2 THEN rt0.c1 END, (- (rt0.c1)))) ORDER BY ((((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c2)))*(v0.c0))  NULLS LAST, (((rt0.c2)) NOT BETWEEN ((((rt0.c2) IS FALSE))) AND ((((rt0.c2)|(rt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(CASE vt1.c0  WHEN rt0.c2 THEN rt0.c1 END, (- (rt0.c1)))) IS TRUE)  as count FROM vt1, v0, rt0 ORDER BY ((((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c2)))*(v0.c0))  NULLS LAST, (((rt0.c2)) NOT BETWEEN ((((rt0.c2) IS FALSE))) AND ((((rt0.c2)|(rt0.c2)))))  NULLS LAST);
SELECT ALL * FROM vt1, v0, rt0 WHERE (NULLIF(CASE vt1.c0  WHEN rt0.c2 THEN rt0.c1 END, (- (rt0.c1)))) ORDER BY ((((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c2)))*(v0.c0))  NULLS LAST, (((rt0.c2)) NOT BETWEEN ((((rt0.c2) IS FALSE))) AND ((((rt0.c2)|(rt0.c2)))))  NULLS LAST;
SELECT * FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) ISNULL));
SELECT ALL COUNT(*) FROM vt1, v0, rt0 WHERE (((vt1.c0)>>(((v0.c0)IS NOT(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0)>>(((v0.c0)IS NOT(rt0.c1))))) IS TRUE)  as count FROM vt1, v0, rt0);
SELECT ALL COUNT(*) FROM vt1, v0, rt0 WHERE (((vt1.c0)>>(((v0.c0)IS NOT(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0)>>(((v0.c0)IS NOT(rt0.c1))))) IS TRUE)  as count FROM vt1, v0, rt0);
SELECT ALL COUNT(*) FROM vt1, v0, rt0 WHERE (((vt1.c0)>>(((v0.c0)IS NOT(rt0.c1)))));
SELECT COUNT(*) FROM v0, vt1, rt0 WHERE ((((((v0.c0, 0.18690272856721002, vt1.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, v0.c0)) AND ((v0.c0, rt0.c2, rt0.c2))))<(((v0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0))))) ORDER BY ((rt0.c0 COLLATE RTRIM) NOT BETWEEN (((x'')<<(v0.c0))) AND (INSTR(rt0.c1, v0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0, 0.18690272856721002, vt1.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, v0.c0)) AND ((v0.c0, rt0.c2, rt0.c2))))<(((v0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY ((rt0.c0 COLLATE RTRIM) NOT BETWEEN (((x'')<<(v0.c0))) AND (INSTR(rt0.c1, v0.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt1, rt0 WHERE ((((((v0.c0, 0.18690272856721002, vt1.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, v0.c0)) AND ((v0.c0, rt0.c2, rt0.c2))))<(((v0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0))))) ORDER BY ((rt0.c0 COLLATE RTRIM) NOT BETWEEN (((x'')<<(v0.c0))) AND (INSTR(rt0.c1, v0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0, 0.18690272856721002, vt1.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, v0.c0)) AND ((v0.c0, rt0.c2, rt0.c2))))<(((v0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY ((rt0.c0 COLLATE RTRIM) NOT BETWEEN (((x'')<<(v0.c0))) AND (INSTR(rt0.c1, v0.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt1, rt0 WHERE ((((((v0.c0, 0.18690272856721002, vt1.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, v0.c0)) AND ((v0.c0, rt0.c2, rt0.c2))))<(((v0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0))))) ORDER BY ((rt0.c0 COLLATE RTRIM) NOT BETWEEN (((x'')<<(v0.c0))) AND (INSTR(rt0.c1, v0.c0))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((~ (rt0.c1)));
SELECT SUM(count) FROM (SELECT (((~ (rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((~ (rt0.c1)));
SELECT SUM(count) FROM (SELECT (((~ (rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((~ (rt0.c1)));
SELECT ALL * FROM rt0, vt1 WHERE (CAST(rt0.c1 COLLATE BINARY AS TEXT)) ORDER BY (((((((((629303728 IN ()))OR(((((rt0.c2)AND(rt0.c2)))AND(vt1.c0)))))OR(vt1.c0 COLLATE BINARY)))AND(MIN(rt0.c1, rt0.c2))))AND((~ (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((((((629303728 IN ()))OR(((((rt0.c2)AND(rt0.c2)))AND(vt1.c0)))))OR(vt1.c0 COLLATE BINARY)))AND(MIN(rt0.c1, rt0.c2))))AND((~ (vt1.c0))))  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE (CAST(rt0.c1 COLLATE BINARY AS TEXT)) ORDER BY (((((((((629303728 IN ()))OR(((((rt0.c2)AND(rt0.c2)))AND(vt1.c0)))))OR(vt1.c0 COLLATE BINARY)))AND(MIN(rt0.c1, rt0.c2))))AND((~ (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((((((629303728 IN ()))OR(((((rt0.c2)AND(rt0.c2)))AND(vt1.c0)))))OR(vt1.c0 COLLATE BINARY)))AND(MIN(rt0.c1, rt0.c2))))AND((~ (vt1.c0))))  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE (CAST(rt0.c1 COLLATE BINARY AS TEXT)) ORDER BY (((((((((629303728 IN ()))OR(((((rt0.c2)AND(rt0.c2)))AND(vt1.c0)))))OR(vt1.c0 COLLATE BINARY)))AND(MIN(rt0.c1, rt0.c2))))AND((~ (vt1.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON CAST('틩s' AS NUMERIC) LEFT OUTER JOIN vt1 ON ((TRIM(v0.c0)) ISNULL) WHERE ((rt0.c0 IN ())) ORDER BY (((((0.1608158874054899, v0.c0, x'45b7'))=((rt0.c2, v0.c0, vt1.c0)))) NOT BETWEEN (((rt0.c2)==(rt0.c0))) AND (((rt0.c0)/(rt0.c0))))  NULLS FIRST, ((vt1.c0 COLLATE BINARY)<<(rt0.c0)) DESC  NULLS LAST, CASE rt0.c0  WHEN ((vt1.c0)*('PZ')) THEN CASE WHEN vt1.c0 THEN rt0.c2 WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE vt1.c0 END ELSE v0.c0 END ASC;
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ())) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON CAST('틩s' AS NUMERIC) LEFT OUTER JOIN vt1 ON ((TRIM(v0.c0)) ISNULL) ORDER BY (((((0.1608158874054899, v0.c0, x'45b7'))==((rt0.c2, v0.c0, vt1.c0)))) NOT BETWEEN (((rt0.c2)==(rt0.c0))) AND (((rt0.c0)/(rt0.c0))))  NULLS FIRST, ((vt1.c0 COLLATE BINARY)<<(rt0.c0)) DESC  NULLS LAST, CASE rt0.c0  WHEN ((vt1.c0)*('PZ')) THEN CASE WHEN vt1.c0 THEN rt0.c2 WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE vt1.c0 END ELSE v0.c0 END ASC);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON CAST('틩s' AS NUMERIC) LEFT OUTER JOIN vt1 ON ((TRIM(v0.c0)) ISNULL) WHERE ((rt0.c0 IN ())) ORDER BY (((((0.1608158874054899, v0.c0, x'45b7'))=((rt0.c2, v0.c0, vt1.c0)))) NOT BETWEEN (((rt0.c2)==(rt0.c0))) AND (((rt0.c0)/(rt0.c0))))  NULLS FIRST, ((vt1.c0 COLLATE BINARY)<<(rt0.c0)) DESC  NULLS LAST, CASE rt0.c0  WHEN ((vt1.c0)*('PZ')) THEN CASE WHEN vt1.c0 THEN rt0.c2 WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE vt1.c0 END ELSE v0.c0 END ASC;
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ())) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON CAST('틩s' AS NUMERIC) LEFT OUTER JOIN vt1 ON ((TRIM(v0.c0)) ISNULL) ORDER BY (((((0.1608158874054899, v0.c0, x'45b7'))==((rt0.c2, v0.c0, vt1.c0)))) NOT BETWEEN (((rt0.c2)==(rt0.c0))) AND (((rt0.c0)/(rt0.c0))))  NULLS FIRST, ((vt1.c0 COLLATE BINARY)<<(rt0.c0)) DESC  NULLS LAST, CASE rt0.c0  WHEN ((vt1.c0)*('PZ')) THEN CASE WHEN vt1.c0 THEN rt0.c2 WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE vt1.c0 END ELSE v0.c0 END ASC);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON CAST('틩s' AS NUMERIC) LEFT OUTER JOIN vt1 ON ((TRIM(v0.c0)) ISNULL) WHERE ((rt0.c0 IN ())) ORDER BY (((((0.1608158874054899, v0.c0, x'45b7'))=((rt0.c2, v0.c0, vt1.c0)))) NOT BETWEEN (((rt0.c2)==(rt0.c0))) AND (((rt0.c0)/(rt0.c0))))  NULLS FIRST, ((vt1.c0 COLLATE BINARY)<<(rt0.c0)) DESC  NULLS LAST, CASE rt0.c0  WHEN ((vt1.c0)*('PZ')) THEN CASE WHEN vt1.c0 THEN rt0.c2 WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE vt1.c0 END ELSE v0.c0 END ASC;
SELECT * FROM rt0, v0 WHERE (rt0.c2) ORDER BY ((rt0.c2) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (NULLIF(rt0.c2, rt0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, v0 ORDER BY ((rt0.c2) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (NULLIF(rt0.c2, rt0.c2)))  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (rt0.c2) ORDER BY ((rt0.c2) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (NULLIF(rt0.c2, rt0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, v0 ORDER BY ((rt0.c2) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (NULLIF(rt0.c2, rt0.c2)))  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (rt0.c2) ORDER BY ((rt0.c2) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (NULLIF(rt0.c2, rt0.c2)))  NULLS FIRST;
SELECT ALL * FROM v0 WHERE ((+ (((v0.c0) ISNULL)))) ORDER BY ((CAST(v0.c0 AS TEXT))GLOB(v0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS TEXT))GLOB(v0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((+ (((v0.c0) ISNULL)))) ORDER BY ((CAST(v0.c0 AS TEXT))GLOB(v0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS TEXT))GLOB(v0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((+ (((v0.c0) ISNULL)))) ORDER BY ((CAST(v0.c0 AS TEXT))GLOB(v0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT ALL * FROM v0 CROSS JOIN rt0 ON LIKELY(DISTINCT (NOT (v0.c0))) INNER JOIN vt1 ON -997272921 WHERE ((+ ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((+ ((vt1.c0 IN ())))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON LIKELY(DISTINCT (NOT (v0.c0))) INNER JOIN vt1 ON -997272921);
SELECT ALL * FROM v0 CROSS JOIN rt0 ON LIKELY(DISTINCT (NOT (v0.c0))) INNER JOIN vt1 ON -997272921 WHERE ((+ ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((+ ((vt1.c0 IN ())))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON LIKELY(DISTINCT (NOT (v0.c0))) INNER JOIN vt1 ON -997272921);
SELECT ALL * FROM v0 CROSS JOIN rt0 ON LIKELY(DISTINCT (NOT (v0.c0))) INNER JOIN vt1 ON -997272921 WHERE ((+ ((vt1.c0 IN ()))));
SELECT ALL * FROM v0 WHERE ((((v0.c0 COLLATE BINARY, (NOT (v0.c0)), (((v0.c0))>=((v0.c0)))))<((((v0.c0)LIKE(v0.c0)), 0.24277374476567803, v0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 COLLATE BINARY, (NOT (v0.c0)), (((v0.c0))>=((v0.c0)))))<((((v0.c0)LIKE(v0.c0)), 0.24277374476567803, v0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0 COLLATE BINARY, (NOT (v0.c0)), (((v0.c0))>=((v0.c0)))))<((((v0.c0)LIKE(v0.c0)), 0.24277374476567803, v0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 COLLATE BINARY, (NOT (v0.c0)), (((v0.c0))>=((v0.c0)))))<((((v0.c0)LIKE(v0.c0)), 0.24277374476567803, v0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0 COLLATE BINARY, (NOT (v0.c0)), (((v0.c0))>=((v0.c0)))))<((((v0.c0)LIKE(v0.c0)), 0.24277374476567803, v0.c0 COLLATE BINARY))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt1 ON (~ (vt1.c0 COLLATE RTRIM)) WHERE ((((((vt1.c0))>((v0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0))>((v0.c0)))) NOTNULL)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt1 ON (~ (vt1.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt1 ON (~ (vt1.c0 COLLATE RTRIM)) WHERE ((((((vt1.c0))>((v0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0))>((v0.c0)))) NOTNULL)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt1 ON (~ (vt1.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt1 ON (~ (vt1.c0 COLLATE RTRIM)) WHERE ((((((vt1.c0))>((v0.c0)))) NOTNULL));
SELECT COUNT(*) FROM v0 WHERE ('-1889683618') ORDER BY ((v0.c0)IS NOT((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))  NULLS LAST, v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-1889683618') IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)IS NOT((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))  NULLS LAST, v0.c0  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ('-1889683618') ORDER BY ((v0.c0)IS NOT((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))  NULLS LAST, v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-1889683618') IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)IS NOT((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))  NULLS LAST, v0.c0  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ('-1889683618') ORDER BY ((v0.c0)IS NOT((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))  NULLS LAST, v0.c0  NULLS LAST;
SELECT ALL * FROM vt1, rt0, v0 WHERE (((((v0.c0) BETWEEN (rt0.c0) AND ('\n䙹'))) NOTNULL)) ORDER BY 0.10343650665557647;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (rt0.c0) AND ('\n䙹'))) NOTNULL)) IS TRUE)  as count FROM vt1, rt0, v0 ORDER BY 0.10343650665557647);
SELECT ALL * FROM vt1, rt0, v0 WHERE (((((v0.c0) BETWEEN (rt0.c0) AND ('\n䙹'))) NOTNULL)) ORDER BY 0.10343650665557647;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (rt0.c0) AND ('\n䙹'))) NOTNULL)) IS TRUE)  as count FROM vt1, rt0, v0 ORDER BY 0.10343650665557647);
SELECT ALL * FROM vt1, rt0, v0 WHERE (((((v0.c0) BETWEEN (rt0.c0) AND ('\n䙹'))) NOTNULL)) ORDER BY 0.10343650665557647;
SELECT * FROM v0 WHERE ((+ (COALESCE(v0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((+ (COALESCE(v0.c0, v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((+ (COALESCE(v0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((+ (COALESCE(v0.c0, v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((+ (COALESCE(v0.c0, v0.c0))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE BINARY) ISNULL)) ORDER BY ((((((((x'')OR(vt1.c0)))OR(vt1.c0)))OR(((vt1.c0)IS NOT(vt1.c0)))))AND(CASE vt1.c0  WHEN vt1.c0 THEN 0.29219248722784674 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((((((x'')OR(vt1.c0)))OR(vt1.c0)))OR(((vt1.c0)IS NOT(vt1.c0)))))AND(CASE vt1.c0  WHEN vt1.c0 THEN 0.29219248722784674 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE BINARY) ISNULL)) ORDER BY ((((((((x'')OR(vt1.c0)))OR(vt1.c0)))OR(((vt1.c0)IS NOT(vt1.c0)))))AND(CASE vt1.c0  WHEN vt1.c0 THEN 0.29219248722784674 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((((((x'')OR(vt1.c0)))OR(vt1.c0)))OR(((vt1.c0)IS NOT(vt1.c0)))))AND(CASE vt1.c0  WHEN vt1.c0 THEN 0.29219248722784674 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE BINARY) ISNULL)) ORDER BY ((((((((x'')OR(vt1.c0)))OR(vt1.c0)))OR(((vt1.c0)IS NOT(vt1.c0)))))AND(CASE vt1.c0  WHEN vt1.c0 THEN 0.29219248722784674 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END));
SELECT ALL * FROM v0, rt0, vt1 WHERE ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN ())) IS TRUE)  as count FROM v0, rt0, vt1);
SELECT ALL * FROM v0, rt0, vt1 WHERE ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN ())) IS TRUE)  as count FROM v0, rt0, vt1);
SELECT ALL * FROM v0, rt0, vt1 WHERE ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN ()));
SELECT * FROM vt1 RIGHT OUTER JOIN v0 ON ((((- (vt1.c0))))=((((((v0.c0)AND(v0.c0)))OR(v0.c0))))) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN v0 ON ((((- (vt1.c0))))=((((((v0.c0)AND(v0.c0)))OR(v0.c0))))));
SELECT * FROM vt1 RIGHT OUTER JOIN v0 ON ((((- (vt1.c0))))=((((((v0.c0)AND(v0.c0)))OR(v0.c0))))) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN v0 ON ((((- (vt1.c0))))=((((((v0.c0)AND(v0.c0)))OR(v0.c0))))));
SELECT * FROM vt1 RIGHT OUTER JOIN v0 ON ((((- (vt1.c0))))=((((((v0.c0)AND(v0.c0)))OR(v0.c0))))) WHERE (v0.c0);
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS INTEGER)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS INTEGER)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS INTEGER)) IS FALSE));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((((((((((((((rt0.c0)AND(0.5484596137649053)))AND(v0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(vt1.c0)))OR(v0.c0))) NOTNULL) LEFT OUTER JOIN vt1 ON (+ (((rt0.c0) BETWEEN (rt0.c2) AND (vt1.c0)))) WHERE (CASE (rt0.c1 IN (rt0.c0, rt0.c2))  WHEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE vt1.c0 END THEN (((vt1.c0)) NOT BETWEEN (('1725812458')) AND ((NULL))) WHEN (('-1439458574') ISNULL) THEN (~ (vt1.c0)) WHEN 0xffffffff93663060 THEN v0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c1 IN (rt0.c0, rt0.c2))  WHEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE vt1.c0 END THEN (((vt1.c0)) NOT BETWEEN (('1725812458')) AND ((NULL))) WHEN (('-1439458574') ISNULL) THEN (~ (vt1.c0)) WHEN 0Xffffffff93663060 THEN v0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((((((((((((((rt0.c0)AND(0.5484596137649053)))AND(v0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(vt1.c0)))OR(v0.c0))) NOTNULL) LEFT OUTER JOIN vt1 ON (+ (((rt0.c0) BETWEEN (rt0.c2) AND (vt1.c0)))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((((((((((((((rt0.c0)AND(0.5484596137649053)))AND(v0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(vt1.c0)))OR(v0.c0))) NOTNULL) LEFT OUTER JOIN vt1 ON (+ (((rt0.c0) BETWEEN (rt0.c2) AND (vt1.c0)))) WHERE (CASE (rt0.c1 IN (rt0.c0, rt0.c2))  WHEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE vt1.c0 END THEN (((vt1.c0)) NOT BETWEEN (('1725812458')) AND ((NULL))) WHEN (('-1439458574') ISNULL) THEN (~ (vt1.c0)) WHEN 0xffffffff93663060 THEN v0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c1 IN (rt0.c0, rt0.c2))  WHEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE vt1.c0 END THEN (((vt1.c0)) NOT BETWEEN (('1725812458')) AND ((NULL))) WHEN (('-1439458574') ISNULL) THEN (~ (vt1.c0)) WHEN 0Xffffffff93663060 THEN v0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((((((((((((((rt0.c0)AND(0.5484596137649053)))AND(v0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(vt1.c0)))OR(v0.c0))) NOTNULL) LEFT OUTER JOIN vt1 ON (+ (((rt0.c0) BETWEEN (rt0.c2) AND (vt1.c0)))));
SELECT * FROM vt1, v0 INNER JOIN rt0 ON rt0.c1 WHERE (CAST(rt0.c2 AS REAL) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS REAL) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt1, v0 INNER JOIN rt0 ON rt0.c1);
SELECT * FROM vt1, v0 INNER JOIN rt0 ON rt0.c1 WHERE (CAST(rt0.c2 AS REAL) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS REAL) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt1, v0 INNER JOIN rt0 ON rt0.c1);
SELECT * FROM vt1, v0 INNER JOIN rt0 ON rt0.c1 WHERE (CAST(rt0.c2 AS REAL) COLLATE RTRIM COLLATE RTRIM);
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON ((~ (vt1.c0)) IN (((rt0.c0)GLOB(rt0.c1)))) WHERE (((((rt0.c2)-(rt0.c0)))/(((rt0.c0) IS FALSE)))) ORDER BY ((vt1.c0) NOTNULL) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)-(rt0.c0)))/(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((~ (vt1.c0)) IN (((rt0.c0)GLOB(rt0.c1)))) ORDER BY ((vt1.c0) NOTNULL) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON ((~ (vt1.c0)) IN (((rt0.c0)GLOB(rt0.c1)))) WHERE (((((rt0.c2)-(rt0.c0)))/(((rt0.c0) IS FALSE)))) ORDER BY ((vt1.c0) NOTNULL) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)-(rt0.c0)))/(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((~ (vt1.c0)) IN (((rt0.c0)GLOB(rt0.c1)))) ORDER BY ((vt1.c0) NOTNULL) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON ((~ (vt1.c0)) IN (((rt0.c0)GLOB(rt0.c1)))) WHERE (((((rt0.c2)-(rt0.c0)))/(((rt0.c0) IS FALSE)))) ORDER BY ((vt1.c0) NOTNULL) COLLATE BINARY  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0)AND('')))OR(v0.c0)))>((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND('')))OR(v0.c0)))>((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0)AND('')))OR(v0.c0)))>((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND('')))OR(v0.c0)))>((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0)AND('')))OR(v0.c0)))>((v0.c0 IN ()))));
SELECT COUNT(*) FROM rt0, v0, vt1 WHERE ((- (((rt0.c2) ISNULL)))) ORDER BY (v0.c0 COLLATE NOCASE IN ()) ASC, CASE WHEN ((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)) THEN ((rt0.c0)%(NULL)) WHEN (((v0.c0)) BETWEEN ((rt0.c2)) AND ((vt1.c0))) THEN x'' WHEN 0.009445845239492767 THEN ((rt0.c2)<(v0.c0)) ELSE ((v0.c0)GLOB(rt0.c1)) END  NULLS LAST, ((((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))OR(((v0.c0)|(rt0.c0)))))AND(DATE(rt0.c2, rt0.c0, rt0.c0))))OR((- (rt0.c1)))))AND(((v0.c0)>>(x'')))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY (v0.c0 COLLATE NOCASE IN ()) ASC, CASE WHEN ((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)) THEN ((rt0.c0)%(NULL)) WHEN (((v0.c0)) BETWEEN ((rt0.c2)) AND ((vt1.c0))) THEN x'' WHEN 0.009445845239492767 THEN ((rt0.c2)<(v0.c0)) ELSE ((v0.c0)GLOB(rt0.c1)) END  NULLS LAST, ((((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))OR(((v0.c0)|(rt0.c0)))))AND(DATE(rt0.c2, rt0.c0, rt0.c0))))OR((- (rt0.c1)))))AND(((v0.c0)>>(x'')))) ASC);
SELECT COUNT(*) FROM rt0, v0, vt1 WHERE ((- (((rt0.c2) ISNULL)))) ORDER BY (v0.c0 COLLATE NOCASE IN ()) ASC, CASE WHEN ((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)) THEN ((rt0.c0)%(NULL)) WHEN (((v0.c0)) BETWEEN ((rt0.c2)) AND ((vt1.c0))) THEN x'' WHEN 0.009445845239492767 THEN ((rt0.c2)<(v0.c0)) ELSE ((v0.c0)GLOB(rt0.c1)) END  NULLS LAST, ((((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))OR(((v0.c0)|(rt0.c0)))))AND(DATE(rt0.c2, rt0.c0, rt0.c0))))OR((- (rt0.c1)))))AND(((v0.c0)>>(x'')))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY (v0.c0 COLLATE NOCASE IN ()) ASC, CASE WHEN ((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)) THEN ((rt0.c0)%(NULL)) WHEN (((v0.c0)) BETWEEN ((rt0.c2)) AND ((vt1.c0))) THEN x'' WHEN 0.009445845239492767 THEN ((rt0.c2)<(v0.c0)) ELSE ((v0.c0)GLOB(rt0.c1)) END  NULLS LAST, ((((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))OR(((v0.c0)|(rt0.c0)))))AND(DATE(rt0.c2, rt0.c0, rt0.c0))))OR((- (rt0.c1)))))AND(((v0.c0)>>(x'')))) ASC);
SELECT COUNT(*) FROM rt0, v0, vt1 WHERE ((- (((rt0.c2) ISNULL)))) ORDER BY (v0.c0 COLLATE NOCASE IN ()) ASC, CASE WHEN ((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)) THEN ((rt0.c0)%(NULL)) WHEN (((v0.c0)) BETWEEN ((rt0.c2)) AND ((vt1.c0))) THEN x'' WHEN 0.009445845239492767 THEN ((rt0.c2)<(v0.c0)) ELSE ((v0.c0)GLOB(rt0.c1)) END  NULLS LAST, ((((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))OR(((v0.c0)|(rt0.c0)))))AND(DATE(rt0.c2, rt0.c0, rt0.c0))))OR((- (rt0.c1)))))AND(((v0.c0)>>(x'')))) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (v0.c0)) COLLATE BINARY) ORDER BY ((CAST('wB' AS REAL)) NOTNULL) ASC  NULLS FIRST, ((((v0.c0) IS TRUE)) NOT BETWEEN (((v0.c0)>>(v0.c0))) AND (CAST(v0.c0 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY ((CAST('wB' AS REAL)) NOTNULL) ASC  NULLS FIRST, ((((v0.c0) IS TRUE)) NOT BETWEEN (((v0.c0)>>(v0.c0))) AND (CAST(v0.c0 AS INTEGER)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (v0.c0)) COLLATE BINARY) ORDER BY ((CAST('wB' AS REAL)) NOTNULL) ASC  NULLS FIRST, ((((v0.c0) IS TRUE)) NOT BETWEEN (((v0.c0)>>(v0.c0))) AND (CAST(v0.c0 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY ((CAST('wB' AS REAL)) NOTNULL) ASC  NULLS FIRST, ((((v0.c0) IS TRUE)) NOT BETWEEN (((v0.c0)>>(v0.c0))) AND (CAST(v0.c0 AS INTEGER)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (v0.c0)) COLLATE BINARY) ORDER BY ((CAST('wB' AS REAL)) NOTNULL) ASC  NULLS FIRST, ((((v0.c0) IS TRUE)) NOT BETWEEN (((v0.c0)>>(v0.c0))) AND (CAST(v0.c0 AS INTEGER)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, v0 LEFT OUTER JOIN rt0 ON ((((((((CASE WHEN rt0.c2 THEN v0.c0 END)OR(v0.c0 COLLATE BINARY)))OR(((vt1.c0)<>(rt0.c0)))))OR((+ (vt1.c0)))))AND((- (rt0.c0)))) WHERE (((NOT (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (rt0.c0)) IN ())) IS TRUE)  as count FROM vt1, v0 LEFT OUTER JOIN rt0 ON ((((((((CASE WHEN rt0.c2 THEN v0.c0 END)OR(v0.c0 COLLATE BINARY)))OR(((vt1.c0)<>(rt0.c0)))))OR((+ (vt1.c0)))))AND((- (rt0.c0)))));
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, v0 LEFT OUTER JOIN rt0 ON ((((((((CASE WHEN rt0.c2 THEN v0.c0 END)OR(v0.c0 COLLATE BINARY)))OR(((vt1.c0)<>(rt0.c0)))))OR((+ (vt1.c0)))))AND((- (rt0.c0)))) WHERE (((NOT (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (rt0.c0)) IN ())) IS TRUE)  as count FROM vt1, v0 LEFT OUTER JOIN rt0 ON ((((((((CASE WHEN rt0.c2 THEN v0.c0 END)OR(v0.c0 COLLATE BINARY)))OR(((vt1.c0)<>(rt0.c0)))))OR((+ (vt1.c0)))))AND((- (rt0.c0)))));
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, v0 LEFT OUTER JOIN rt0 ON ((((((((CASE WHEN rt0.c2 THEN v0.c0 END)OR(v0.c0 COLLATE BINARY)))OR(((vt1.c0)<>(rt0.c0)))))OR((+ (vt1.c0)))))AND((- (rt0.c0)))) WHERE (((NOT (rt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0) ISNULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) ISNULL) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0) ISNULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) ISNULL) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0) ISNULL) AS TEXT));
SELECT * FROM rt0, v0, vt1 WHERE ((((JULIANDAY(v0.c0, rt0.c1, 9.528497E7)))<=(((NOT (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((JULIANDAY(v0.c0, rt0.c1, 9.528497E7)))<=(((NOT (rt0.c1)))))) IS TRUE)  as count FROM rt0, v0, vt1);
SELECT * FROM rt0, v0, vt1 WHERE ((((JULIANDAY(v0.c0, rt0.c1, 9.528497E7)))<=(((NOT (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((JULIANDAY(v0.c0, rt0.c1, 9.528497E7)))<=(((NOT (rt0.c1)))))) IS TRUE)  as count FROM rt0, v0, vt1);
SELECT * FROM rt0, v0, vt1 WHERE ((((JULIANDAY(v0.c0, rt0.c1, 9.528497E7)))<=(((NOT (rt0.c1))))));
SELECT ALL * FROM v0, vt1 WHERE ((- (v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((- (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 WHERE ((- (v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((- (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 WHERE ((- (v0.c0)) COLLATE BINARY);
SELECT ALL * FROM v0, rt0, vt1 WHERE (CAST(0.504562315923522 COLLATE BINARY AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(0.504562315923522 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM v0, rt0, vt1);
SELECT ALL * FROM v0, rt0, vt1 WHERE (CAST(0.504562315923522 COLLATE BINARY AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(0.504562315923522 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM v0, rt0, vt1);
SELECT ALL * FROM v0, rt0, vt1 WHERE (CAST(0.504562315923522 COLLATE BINARY AS INTEGER));
SELECT * FROM rt0, vt1, v0 WHERE (CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN CASE v0.c0  WHEN rt0.c0 THEN 0.9113836736517087 WHEN vt1.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 END ELSE x'5d0e' END) ORDER BY ((load_extension(rt0.c2))/(x'4499'));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN CASE v0.c0  WHEN rt0.c0 THEN 0.9113836736517087 WHEN vt1.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 END ELSE x'5d0e' END) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY ((load_extension(rt0.c2))/(x'4499')));
SELECT * FROM rt0, vt1, v0 WHERE (CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN CASE v0.c0  WHEN rt0.c0 THEN 0.9113836736517087 WHEN vt1.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 END ELSE x'5d0e' END) ORDER BY ((load_extension(rt0.c2))/(x'4499'));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN CASE v0.c0  WHEN rt0.c0 THEN 0.9113836736517087 WHEN vt1.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 END ELSE x'5d0e' END) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY ((load_extension(rt0.c2))/(x'4499')));
SELECT * FROM rt0, vt1, v0 WHERE (CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN CASE v0.c0  WHEN rt0.c0 THEN 0.9113836736517087 WHEN vt1.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 END ELSE x'5d0e' END) ORDER BY ((load_extension(rt0.c2))/(x'4499'));
SELECT * FROM v0, vt1 WHERE (CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN vt1.c0 COLLATE NOCASE THEN (- (v0.c0)) ELSE (NOT (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN vt1.c0 COLLATE NOCASE THEN (- (v0.c0)) ELSE (NOT (vt1.c0)) END) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE (CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN vt1.c0 COLLATE NOCASE THEN (- (v0.c0)) ELSE (NOT (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN vt1.c0 COLLATE NOCASE THEN (- (v0.c0)) ELSE (NOT (vt1.c0)) END) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE (CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN vt1.c0 COLLATE NOCASE THEN (- (v0.c0)) ELSE (NOT (vt1.c0)) END);
SELECT ALL * FROM v0 WHERE (((((v0.c0 COLLATE RTRIM)AND((v0.c0 IN (v0.c0, v0.c0)))))AND(((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0 COLLATE RTRIM)AND((v0.c0 IN (v0.c0, v0.c0)))))AND(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0 COLLATE RTRIM)AND((v0.c0 IN (v0.c0, v0.c0)))))AND(((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0 COLLATE RTRIM)AND((v0.c0 IN (v0.c0, v0.c0)))))AND(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0 COLLATE RTRIM)AND((v0.c0 IN (v0.c0, v0.c0)))))AND(((v0.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (QUOTE(((((v0.c0)AND(v0.c0)))AND(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((QUOTE(((((v0.c0)AND(v0.c0)))AND(v0.c0)))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (QUOTE(((((v0.c0)AND(v0.c0)))AND(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((QUOTE(((((v0.c0)AND(v0.c0)))AND(v0.c0)))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (QUOTE(((((v0.c0)AND(v0.c0)))AND(v0.c0))));
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON json_array_length(CAST(vt1.c0 AS NUMERIC)) INNER JOIN v0 ON CASE WHEN rt0.c1 COLLATE RTRIM THEN ((vt1.c0)>(vt1.c0)) WHEN NULLIF(v0.c0, v0.c0) THEN ((((((((rt0.c1)AND(0x258269b0)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)) WHEN ((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN json(rt0.c2) END WHERE (0.7261673708943589);
SELECT SUM(count) FROM (SELECT ((0.7261673708943589) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON json_array_length(CAST(vt1.c0 AS NUMERIC)) INNER JOIN v0 ON CASE WHEN rt0.c1 COLLATE RTRIM THEN ((vt1.c0)>(vt1.c0)) WHEN NULLIF(v0.c0, v0.c0) THEN ((((((((rt0.c1)AND(0x258269b0)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)) WHEN ((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN json(rt0.c2) END);
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON json_array_length(CAST(vt1.c0 AS NUMERIC)) INNER JOIN v0 ON CASE WHEN rt0.c1 COLLATE RTRIM THEN ((vt1.c0)>(vt1.c0)) WHEN NULLIF(v0.c0, v0.c0) THEN ((((((((rt0.c1)AND(0x258269b0)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)) WHEN ((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN json(rt0.c2) END WHERE (0.7261673708943589);
SELECT SUM(count) FROM (SELECT ((0.7261673708943589) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON json_array_length(CAST(vt1.c0 AS NUMERIC)) INNER JOIN v0 ON CASE WHEN rt0.c1 COLLATE RTRIM THEN ((vt1.c0)>(vt1.c0)) WHEN NULLIF(v0.c0, v0.c0) THEN ((((((((rt0.c1)AND(0x258269b0)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)) WHEN ((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN json(rt0.c2) END);
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON json_array_length(CAST(vt1.c0 AS NUMERIC)) INNER JOIN v0 ON CASE WHEN rt0.c1 COLLATE RTRIM THEN ((vt1.c0)>(vt1.c0)) WHEN NULLIF(v0.c0, v0.c0) THEN ((((((((rt0.c1)AND(0x258269b0)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)) WHEN ((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN json(rt0.c2) END WHERE (0.7261673708943589);
SELECT * FROM vt1, rt0, v0 WHERE (((('' IN (rt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((('' IN (rt0.c0))) ISNULL)) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT * FROM vt1, rt0, v0 WHERE (((('' IN (rt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((('' IN (rt0.c0))) ISNULL)) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT * FROM vt1, rt0, v0 WHERE (((('' IN (rt0.c0))) ISNULL));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (rt0.c0) ORDER BY (~ (x'250c'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM v0, rt0 ORDER BY (~ (x'250c'))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (rt0.c0) ORDER BY (~ (x'250c'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM v0, rt0 ORDER BY (~ (x'250c'))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (rt0.c0) ORDER BY (~ (x'250c'))  NULLS LAST;
SELECT ALL * FROM rt0, vt1, v0 WHERE ((((((rt0.c2 IN ()))OR(rt0.c2 COLLATE BINARY)))AND(((0.5029237356350711) NOTNULL)))) ORDER BY (+ (v0.c0));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2 IN ()))OR(rt0.c2 COLLATE BINARY)))AND(((0.5029237356350711) NOTNULL)))) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY (+ (v0.c0)));
SELECT ALL * FROM rt0, vt1, v0 WHERE ((((((rt0.c2 IN ()))OR(rt0.c2 COLLATE BINARY)))AND(((0.5029237356350711) NOTNULL)))) ORDER BY (+ (v0.c0));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2 IN ()))OR(rt0.c2 COLLATE BINARY)))AND(((0.5029237356350711) NOTNULL)))) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY (+ (v0.c0)));
SELECT ALL * FROM rt0, vt1, v0 WHERE ((((((rt0.c2 IN ()))OR(rt0.c2 COLLATE BINARY)))AND(((0.5029237356350711) NOTNULL)))) ORDER BY (+ (v0.c0));
SELECT COUNT(*) FROM vt1, rt0 WHERE ((~ ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((~ ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((~ ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))));
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (CAST((- (v0.c0)) AS INTEGER)) ORDER BY ((((((((v0.c0 COLLATE BINARY)OR(CAST(v0.c0 AS REAL))))AND(((v0.c0) ISNULL))))OR('')))OR(((v0.c0)>(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (v0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, v0 ORDER BY ((((((((v0.c0 COLLATE BINARY)OR(CAST(v0.c0 AS REAL))))AND(((v0.c0) ISNULL))))OR('')))OR(((v0.c0)>(vt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (CAST((- (v0.c0)) AS INTEGER)) ORDER BY ((((((((v0.c0 COLLATE BINARY)OR(CAST(v0.c0 AS REAL))))AND(((v0.c0) ISNULL))))OR('')))OR(((v0.c0)>(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (v0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, v0 ORDER BY ((((((((v0.c0 COLLATE BINARY)OR(CAST(v0.c0 AS REAL))))AND(((v0.c0) ISNULL))))OR('')))OR(((v0.c0)>(vt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (CAST((- (v0.c0)) AS INTEGER)) ORDER BY ((((((((v0.c0 COLLATE BINARY)OR(CAST(v0.c0 AS REAL))))AND(((v0.c0) ISNULL))))OR('')))OR(((v0.c0)>(vt1.c0)))) DESC;
SELECT * FROM vt1, rt0 WHERE (CAST(0.9740648264841187 AS INTEGER)) ORDER BY (((rt0.c0, rt0.c0, vt1.c0)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((NULL))), (rt0.c2 IN ()))) AND ((((1.289768784E9) BETWEEN (rt0.c1) AND (x'')), CASE WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN 0.6382384105710213 THEN rt0.c0 WHEN rt0.c1 THEN vt1.c0 WHEN 0.23746351650239306 THEN vt1.c0 WHEN rt0.c0 THEN x'eece' END, ((rt0.c0)<<(rt0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.9740648264841187 AS INTEGER)) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((rt0.c0, rt0.c0, vt1.c0)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((NULL))), (rt0.c2 IN ()))) AND ((((1.289768784E9) BETWEEN (rt0.c1) AND (x'')), CASE WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN 0.6382384105710213 THEN rt0.c0 WHEN rt0.c1 THEN vt1.c0 WHEN 0.23746351650239306 THEN vt1.c0 WHEN rt0.c0 THEN x'eece' END, ((rt0.c0)<<(rt0.c2))))) DESC);
SELECT * FROM vt1, rt0 WHERE (CAST(0.9740648264841187 AS INTEGER)) ORDER BY (((rt0.c0, rt0.c0, vt1.c0)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((NULL))), (rt0.c2 IN ()))) AND ((((1.289768784E9) BETWEEN (rt0.c1) AND (x'')), CASE WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN 0.6382384105710213 THEN rt0.c0 WHEN rt0.c1 THEN vt1.c0 WHEN 0.23746351650239306 THEN vt1.c0 WHEN rt0.c0 THEN x'eece' END, ((rt0.c0)<<(rt0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.9740648264841187 AS INTEGER)) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((rt0.c0, rt0.c0, vt1.c0)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((NULL))), (rt0.c2 IN ()))) AND ((((1.289768784E9) BETWEEN (rt0.c1) AND (x'')), CASE WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN 0.6382384105710213 THEN rt0.c0 WHEN rt0.c1 THEN vt1.c0 WHEN 0.23746351650239306 THEN vt1.c0 WHEN rt0.c0 THEN x'eece' END, ((rt0.c0)<<(rt0.c2))))) DESC);
SELECT * FROM vt1, rt0 WHERE (CAST(0.9740648264841187 AS INTEGER)) ORDER BY (((rt0.c0, rt0.c0, vt1.c0)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((NULL))), (rt0.c2 IN ()))) AND ((((1.289768784E9) BETWEEN (rt0.c1) AND (x'')), CASE WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN 0.6382384105710213 THEN rt0.c0 WHEN rt0.c1 THEN vt1.c0 WHEN 0.23746351650239306 THEN vt1.c0 WHEN rt0.c0 THEN x'eece' END, ((rt0.c0)<<(rt0.c2))))) DESC;
SELECT ALL COUNT(*) FROM v0, rt0, vt1 WHERE (CASE ((rt0.c1) BETWEEN (x'84fe') AND (rt0.c2))  WHEN ((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)) THEN rt0.c0 ELSE ((0X70c1ace8)LIKE(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1) BETWEEN (x'84fe') AND (rt0.c2))  WHEN ((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)) THEN rt0.c0 ELSE ((0X70c1ace8)LIKE(v0.c0)) END) IS TRUE)  as count FROM v0, rt0, vt1);
SELECT ALL COUNT(*) FROM v0, rt0, vt1 WHERE (CASE ((rt0.c1) BETWEEN (x'84fe') AND (rt0.c2))  WHEN ((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)) THEN rt0.c0 ELSE ((0X70c1ace8)LIKE(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1) BETWEEN (x'84fe') AND (rt0.c2))  WHEN ((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)) THEN rt0.c0 ELSE ((0X70c1ace8)LIKE(v0.c0)) END) IS TRUE)  as count FROM v0, rt0, vt1);
SELECT ALL COUNT(*) FROM v0, rt0, vt1 WHERE (CASE ((rt0.c1) BETWEEN (x'84fe') AND (rt0.c2))  WHEN ((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)) THEN rt0.c0 ELSE ((0X70c1ace8)LIKE(v0.c0)) END);
SELECT ALL * FROM vt1 WHERE ((((HEX(DISTINCT vt1.c0)))=(((vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((HEX(DISTINCT vt1.c0)))==(((vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((HEX(DISTINCT vt1.c0)))=(((vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((HEX(DISTINCT vt1.c0)))==(((vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((HEX(DISTINCT vt1.c0)))=(((vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0))))));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON NULL WHERE (((((rt0.c2 COLLATE RTRIM)OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))OR((rt0.c1 IN ())))) ORDER BY (('629303728') NOT BETWEEN (((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))) AND (rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2 COLLATE RTRIM)OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))OR((rt0.c1 IN ())))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON NULL ORDER BY (('629303728') NOT BETWEEN (((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))) AND (rt0.c2))  NULLS FIRST);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON NULL WHERE (((((rt0.c2 COLLATE RTRIM)OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))OR((rt0.c1 IN ())))) ORDER BY (('629303728') NOT BETWEEN (((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))) AND (rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2 COLLATE RTRIM)OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))OR((rt0.c1 IN ())))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON NULL ORDER BY (('629303728') NOT BETWEEN (((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))) AND (rt0.c2))  NULLS FIRST);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON NULL WHERE (((((rt0.c2 COLLATE RTRIM)OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))OR((rt0.c1 IN ())))) ORDER BY (('629303728') NOT BETWEEN (((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))) AND (rt0.c2))  NULLS FIRST;
SELECT * FROM rt0 WHERE (((rt0.c2) NOT BETWEEN ('-385117376') AND (rt0.c2)) COLLATE RTRIM) ORDER BY (((((rt0.c1 IN (rt0.c0)))OR((rt0.c1 IN ()))))OR((~ (rt0.c1)))) DESC  NULLS LAST, (((rt0.c2 COLLATE RTRIM))>(((NOT (rt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOT BETWEEN ('-385117376') AND (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1 IN (rt0.c0)))OR((rt0.c1 IN ()))))OR((~ (rt0.c1)))) DESC  NULLS LAST, (((rt0.c2 COLLATE RTRIM))>(((NOT (rt0.c0))))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((rt0.c2) NOT BETWEEN ('-385117376') AND (rt0.c2)) COLLATE RTRIM) ORDER BY (((((rt0.c1 IN (rt0.c0)))OR((rt0.c1 IN ()))))OR((~ (rt0.c1)))) DESC  NULLS LAST, (((rt0.c2 COLLATE RTRIM))>(((NOT (rt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOT BETWEEN ('-385117376') AND (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1 IN (rt0.c0)))OR((rt0.c1 IN ()))))OR((~ (rt0.c1)))) DESC  NULLS LAST, (((rt0.c2 COLLATE RTRIM))>(((NOT (rt0.c0))))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((rt0.c2) NOT BETWEEN ('-385117376') AND (rt0.c2)) COLLATE RTRIM) ORDER BY (((((rt0.c1 IN (rt0.c0)))OR((rt0.c1 IN ()))))OR((~ (rt0.c1)))) DESC  NULLS LAST, (((rt0.c2 COLLATE RTRIM))>(((NOT (rt0.c0))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0, vt1 WHERE (UPPER(DISTINCT ((((rt0.c0)AND(rt0.c2)))OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT ((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))) IS TRUE)  as count FROM v0, rt0, vt1);
SELECT COUNT(*) FROM v0, rt0, vt1 WHERE (UPPER(DISTINCT ((((rt0.c0)AND(rt0.c2)))OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT ((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))) IS TRUE)  as count FROM v0, rt0, vt1);
SELECT COUNT(*) FROM v0, rt0, vt1 WHERE (UPPER(DISTINCT ((((rt0.c0)AND(rt0.c2)))OR(rt0.c0))));
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON ((vt1.c0) ISNULL) COLLATE RTRIM RIGHT OUTER JOIN v0 ON (((rt0.c0)) BETWEEN ((HEX(DISTINCT rt0.c2))) AND (((v0.c0 IN (rt0.c0))))) WHERE (CASE WHEN CAST(vt1.c0 AS INTEGER) THEN (rt0.c1 IN (NULL)) WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 END THEN (((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN ((rt0.c0) NOT BETWEEN (vt1.c0) AND (0x614fb348)) THEN ((((vt1.c0)OR(rt0.c2)))AND(rt0.c2)) ELSE ((((((((x'')OR(vt1.c0)))OR(rt0.c1)))AND(rt0.c0)))OR(v0.c0)) END) ORDER BY ((((rt0.c2) NOT NULL)) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt1.c0 AS INTEGER) THEN (rt0.c1 IN (NULL)) WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 END THEN (((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN ((rt0.c0) NOT BETWEEN (vt1.c0) AND (0x614fb348)) THEN ((((vt1.c0)OR(rt0.c2)))AND(rt0.c2)) ELSE ((((((((x'')OR(vt1.c0)))OR(rt0.c1)))AND(rt0.c0)))OR(v0.c0)) END) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((vt1.c0) ISNULL) COLLATE RTRIM RIGHT OUTER JOIN v0 ON (((rt0.c0)) BETWEEN ((HEX(DISTINCT rt0.c2))) AND (((v0.c0 IN (rt0.c0))))) ORDER BY ((((rt0.c2) NOT NULL)) NOT NULL)  NULLS LAST);
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON ((vt1.c0) ISNULL) COLLATE RTRIM RIGHT OUTER JOIN v0 ON (((rt0.c0)) BETWEEN ((HEX(DISTINCT rt0.c2))) AND (((v0.c0 IN (rt0.c0))))) WHERE (CASE WHEN CAST(vt1.c0 AS INTEGER) THEN (rt0.c1 IN (NULL)) WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 END THEN (((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN ((rt0.c0) NOT BETWEEN (vt1.c0) AND (0x614fb348)) THEN ((((vt1.c0)OR(rt0.c2)))AND(rt0.c2)) ELSE ((((((((x'')OR(vt1.c0)))OR(rt0.c1)))AND(rt0.c0)))OR(v0.c0)) END) ORDER BY ((((rt0.c2) NOT NULL)) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt1.c0 AS INTEGER) THEN (rt0.c1 IN (NULL)) WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 END THEN (((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN ((rt0.c0) NOT BETWEEN (vt1.c0) AND (0x614fb348)) THEN ((((vt1.c0)OR(rt0.c2)))AND(rt0.c2)) ELSE ((((((((x'')OR(vt1.c0)))OR(rt0.c1)))AND(rt0.c0)))OR(v0.c0)) END) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((vt1.c0) ISNULL) COLLATE RTRIM RIGHT OUTER JOIN v0 ON (((rt0.c0)) BETWEEN ((HEX(DISTINCT rt0.c2))) AND (((v0.c0 IN (rt0.c0))))) ORDER BY ((((rt0.c2) NOT NULL)) NOT NULL)  NULLS LAST);
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON ((vt1.c0) ISNULL) COLLATE RTRIM RIGHT OUTER JOIN v0 ON (((rt0.c0)) BETWEEN ((HEX(DISTINCT rt0.c2))) AND (((v0.c0 IN (rt0.c0))))) WHERE (CASE WHEN CAST(vt1.c0 AS INTEGER) THEN (rt0.c1 IN (NULL)) WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 END THEN (((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN ((rt0.c0) NOT BETWEEN (vt1.c0) AND (0x614fb348)) THEN ((((vt1.c0)OR(rt0.c2)))AND(rt0.c2)) ELSE ((((((((x'')OR(vt1.c0)))OR(rt0.c1)))AND(rt0.c0)))OR(v0.c0)) END) ORDER BY ((((rt0.c2) NOT NULL)) NOT NULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((((rt0.c0, rt0.c1, rt0.c0))>=((rt0.c2, rt0.c2, rt0.c0))) AS BLOB)) ORDER BY ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c0, rt0.c1, rt0.c0))>=((rt0.c2, rt0.c2, rt0.c0))) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((((rt0.c0, rt0.c1, rt0.c0))>=((rt0.c2, rt0.c2, rt0.c0))) AS BLOB)) ORDER BY ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c0, rt0.c1, rt0.c0))>=((rt0.c2, rt0.c2, rt0.c0))) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((((rt0.c0, rt0.c1, rt0.c0))>=((rt0.c2, rt0.c2, rt0.c0))) AS BLOB)) ORDER BY ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND (((v0.c0)GLOB(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND (((v0.c0)GLOB(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND (((v0.c0)GLOB(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND (((v0.c0)GLOB(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND (((v0.c0)GLOB(v0.c0)))));
SELECT ALL * FROM vt1, rt0 FULL OUTER JOIN v0 ON json_quote(CAST(vt1.c0 AS INTEGER)) WHERE (((((v0.c0)<(rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)<(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt1, rt0 FULL OUTER JOIN v0 ON json_quote(CAST(vt1.c0 AS INTEGER)));
SELECT ALL * FROM vt1, rt0 FULL OUTER JOIN v0 ON json_quote(CAST(vt1.c0 AS INTEGER)) WHERE (((((v0.c0)<(rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)<(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt1, rt0 FULL OUTER JOIN v0 ON json_quote(CAST(vt1.c0 AS INTEGER)));
SELECT ALL * FROM vt1, rt0 FULL OUTER JOIN v0 ON json_quote(CAST(vt1.c0 AS INTEGER)) WHERE (((((v0.c0)<(rt0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((load_extension(vt1.c0)))!=((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((load_extension(vt1.c0)))!=((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((load_extension(vt1.c0)))!=((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((load_extension(vt1.c0)))!=((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c1 COLLATE NOCASE  WHEN ((rt0.c0)GLOB(rt0.c0)) THEN UPPER(DISTINCT rt0.c1) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1 COLLATE NOCASE  WHEN ((rt0.c0)GLOB(rt0.c0)) THEN UPPER(DISTINCT rt0.c1) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c1 COLLATE NOCASE  WHEN ((rt0.c0)GLOB(rt0.c0)) THEN UPPER(DISTINCT rt0.c1) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1 COLLATE NOCASE  WHEN ((rt0.c0)GLOB(rt0.c0)) THEN UPPER(DISTINCT rt0.c1) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c1 COLLATE NOCASE  WHEN ((rt0.c0)GLOB(rt0.c0)) THEN UPPER(DISTINCT rt0.c1) END);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt1 ON ((((rt0.c0)/(rt0.c1)))OR(((rt0.c2)<=(v0.c0)))) RIGHT OUTER JOIN v0 ON x'' WHERE (((CAST(rt0.c1 AS NUMERIC))OR((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS NUMERIC))OR((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((rt0.c0)/(rt0.c1)))OR(((rt0.c2)<=(v0.c0)))) RIGHT OUTER JOIN v0 ON x'');
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt1 ON ((((rt0.c0)/(rt0.c1)))OR(((rt0.c2)<=(v0.c0)))) RIGHT OUTER JOIN v0 ON x'' WHERE (((CAST(rt0.c1 AS NUMERIC))OR((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS NUMERIC))OR((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((rt0.c0)/(rt0.c1)))OR(((rt0.c2)<=(v0.c0)))) RIGHT OUTER JOIN v0 ON x'');
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE)+(((x'') NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY (~ (((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE NOCASE)+(((x'') NOT BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (~ (((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE)+(((x'') NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY (~ (((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE NOCASE)+(((x'') NOT BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (~ (((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE)+(((x'') NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY (~ (((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (CASE v0.c0 COLLATE NOCASE  WHEN LIKELY(v0.c0) THEN ((v0.c0)<<(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE v0.c0 COLLATE NOCASE  WHEN LIKELY(v0.c0) THEN ((v0.c0)<<(v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE v0.c0 COLLATE NOCASE  WHEN LIKELY(v0.c0) THEN ((v0.c0)<<(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE v0.c0 COLLATE NOCASE  WHEN LIKELY(v0.c0) THEN ((v0.c0)<<(v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE v0.c0 COLLATE NOCASE  WHEN LIKELY(v0.c0) THEN ((v0.c0)<<(v0.c0)) END);
SELECT COUNT(*) FROM rt0, v0, vt1 WHERE ((((((rt0.c0 IN ()))AND(((x'') NOT BETWEEN (vt1.c0) AND (v0.c0)))))AND(((rt0.c1)GLOB(NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0 IN ()))AND(((x'') NOT BETWEEN (vt1.c0) AND (v0.c0)))))AND(((rt0.c1)GLOB(NULL))))) IS TRUE)  as count FROM rt0, v0, vt1);
SELECT COUNT(*) FROM rt0, v0, vt1 WHERE ((((((rt0.c0 IN ()))AND(((x'') NOT BETWEEN (vt1.c0) AND (v0.c0)))))AND(((rt0.c1)GLOB(NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0 IN ()))AND(((x'') NOT BETWEEN (vt1.c0) AND (v0.c0)))))AND(((rt0.c1)GLOB(NULL))))) IS TRUE)  as count FROM rt0, v0, vt1);
SELECT COUNT(*) FROM rt0, v0, vt1 WHERE ((((((rt0.c0 IN ()))AND(((x'') NOT BETWEEN (vt1.c0) AND (v0.c0)))))AND(((rt0.c1)GLOB(NULL)))));
SELECT * FROM vt1 NOT INDEXED, rt0 WHERE (((((rt0.c1)>(NULL)))*(((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)>(NULL)))*(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1 NOT INDEXED, rt0 WHERE (((((rt0.c1)>(NULL)))*(((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)>(NULL)))*(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1 NOT INDEXED, rt0 WHERE (((((rt0.c1)>(NULL)))*(((vt1.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM rt0, vt1 INNER JOIN v0 ON CAST(x'' AS NUMERIC) WHERE (CAST(v0.c0 COLLATE RTRIM AS INTEGER)) ORDER BY (+ (rt0.c0 COLLATE RTRIM)) ASC  NULLS LAST, ((((rt0.c0) NOTNULL)) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM rt0, vt1 INNER JOIN v0 ON CAST(x'' AS NUMERIC) ORDER BY (+ (rt0.c0 COLLATE RTRIM)) ASC  NULLS LAST, ((((rt0.c0) NOTNULL)) NOT NULL) ASC);
SELECT ALL COUNT(*) FROM rt0, vt1 INNER JOIN v0 ON CAST(x'' AS NUMERIC) WHERE (CAST(v0.c0 COLLATE RTRIM AS INTEGER)) ORDER BY (+ (rt0.c0 COLLATE RTRIM)) ASC  NULLS LAST, ((((rt0.c0) NOTNULL)) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM rt0, vt1 INNER JOIN v0 ON CAST(x'' AS NUMERIC) ORDER BY (+ (rt0.c0 COLLATE RTRIM)) ASC  NULLS LAST, ((((rt0.c0) NOTNULL)) NOT NULL) ASC);
SELECT ALL COUNT(*) FROM rt0, vt1 INNER JOIN v0 ON CAST(x'' AS NUMERIC) WHERE (CAST(v0.c0 COLLATE RTRIM AS INTEGER)) ORDER BY (+ (rt0.c0 COLLATE RTRIM)) ASC  NULLS LAST, ((((rt0.c0) NOTNULL)) NOT NULL) ASC;
SELECT COUNT(*) FROM rt0, v0, vt1 WHERE (CAST(((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)) AS BLOB)) ORDER BY (((((((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((NULL))))OR(-1436749806)))AND(((v0.c0)!=(rt0.c2)))))OR(CAST(rt0.c2 AS REAL))))OR(vt1.c0));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY (((((((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((NULL))))OR(-1436749806)))AND(((v0.c0)<>(rt0.c2)))))OR(CAST(rt0.c2 AS REAL))))OR(vt1.c0)));
SELECT COUNT(*) FROM rt0, v0, vt1 WHERE (CAST(((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)) AS BLOB)) ORDER BY (((((((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((NULL))))OR(-1436749806)))AND(((v0.c0)!=(rt0.c2)))))OR(CAST(rt0.c2 AS REAL))))OR(vt1.c0));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY (((((((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((NULL))))OR(-1436749806)))AND(((v0.c0)<>(rt0.c2)))))OR(CAST(rt0.c2 AS REAL))))OR(vt1.c0)));
SELECT COUNT(*) FROM rt0, v0, vt1 WHERE (CAST(((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)) AS BLOB)) ORDER BY (((((((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((NULL))))OR(-1436749806)))AND(((v0.c0)!=(rt0.c2)))))OR(CAST(rt0.c2 AS REAL))))OR(vt1.c0));
SELECT ALL * FROM rt0 INNER JOIN v0 ON '718039567' CROSS JOIN vt1 ON CAST(((v0.c0)>(rt0.c2)) AS REAL) WHERE ((((((((rt0.c2))>((rt0.c2))))AND(rt0.c1)))AND((rt0.c2 IN ())))) ORDER BY ((((((((rt0.c2)AND(v0.c0)))OR(rt0.c1)))OR((((rt0.c1))!=((rt0.c2))))))OR(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))  NULLS FIRST, (((((rt0.c1)OR(v0.c0)))OR(v0.c0)) IN ())  NULLS LAST, '595592820'  NULLS LAST, ((CASE WHEN 1776460323 THEN rt0.c2 END)OR(CASE WHEN NULL THEN v0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c2))>((rt0.c2))))AND(rt0.c1)))AND((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON '718039567' CROSS JOIN vt1 ON CAST(((v0.c0)>(rt0.c2)) AS REAL) ORDER BY ((((((((rt0.c2)AND(v0.c0)))OR(rt0.c1)))OR((((rt0.c1))!=((rt0.c2))))))OR(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))  NULLS FIRST, (((((rt0.c1)OR(v0.c0)))OR(v0.c0)) IN ())  NULLS LAST, '595592820'  NULLS LAST, ((CASE WHEN 1776460323 THEN rt0.c2 END)OR(CASE WHEN NULL THEN v0.c0 END)) ASC);
SELECT ALL * FROM rt0 INNER JOIN v0 ON '718039567' CROSS JOIN vt1 ON CAST(((v0.c0)>(rt0.c2)) AS REAL) WHERE ((((((((rt0.c2))>((rt0.c2))))AND(rt0.c1)))AND((rt0.c2 IN ())))) ORDER BY ((((((((rt0.c2)AND(v0.c0)))OR(rt0.c1)))OR((((rt0.c1))!=((rt0.c2))))))OR(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))  NULLS FIRST, (((((rt0.c1)OR(v0.c0)))OR(v0.c0)) IN ())  NULLS LAST, '595592820'  NULLS LAST, ((CASE WHEN 1776460323 THEN rt0.c2 END)OR(CASE WHEN NULL THEN v0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c2))>((rt0.c2))))AND(rt0.c1)))AND((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON '718039567' CROSS JOIN vt1 ON CAST(((v0.c0)>(rt0.c2)) AS REAL) ORDER BY ((((((((rt0.c2)AND(v0.c0)))OR(rt0.c1)))OR((((rt0.c1))!=((rt0.c2))))))OR(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))  NULLS FIRST, (((((rt0.c1)OR(v0.c0)))OR(v0.c0)) IN ())  NULLS LAST, '595592820'  NULLS LAST, ((CASE WHEN 1776460323 THEN rt0.c2 END)OR(CASE WHEN NULL THEN v0.c0 END)) ASC);
SELECT ALL * FROM rt0 INNER JOIN v0 ON '718039567' CROSS JOIN vt1 ON CAST(((v0.c0)>(rt0.c2)) AS REAL) WHERE ((((((((rt0.c2))>((rt0.c2))))AND(rt0.c1)))AND((rt0.c2 IN ())))) ORDER BY ((((((((rt0.c2)AND(v0.c0)))OR(rt0.c1)))OR((((rt0.c1))!=((rt0.c2))))))OR(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))  NULLS FIRST, (((((rt0.c1)OR(v0.c0)))OR(v0.c0)) IN ())  NULLS LAST, '595592820'  NULLS LAST, ((CASE WHEN 1776460323 THEN rt0.c2 END)OR(CASE WHEN NULL THEN v0.c0 END)) ASC;
SELECT COUNT(*) FROM rt0, vt1, v0 WHERE ((+ ((v0.c0 IN ())))) ORDER BY ((((rt0.c1)&(rt0.c2))) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (v0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((v0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY ((((rt0.c1)&(rt0.c2))) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (v0.c0))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1, v0 WHERE ((+ ((v0.c0 IN ())))) ORDER BY ((((rt0.c1)&(rt0.c2))) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (v0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((v0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY ((((rt0.c1)&(rt0.c2))) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (v0.c0))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1, v0 WHERE ((+ ((v0.c0 IN ())))) ORDER BY ((((rt0.c1)&(rt0.c2))) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (v0.c0))  NULLS LAST;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON ((((((((((rt0.c2)<<(rt0.c0)))AND(rt0.c0)))OR(((rt0.c1)<>(rt0.c1)))))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR(CASE rt0.c2  WHEN NULL THEN v0.c0 ELSE v0.c0 END)) WHERE ('-1794219652');
SELECT SUM(count) FROM (SELECT (('-1794219652') IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((((((((((rt0.c2)<<(rt0.c0)))AND(rt0.c0)))OR(((rt0.c1)!=(rt0.c1)))))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR(CASE rt0.c2  WHEN NULL THEN v0.c0 ELSE v0.c0 END)));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON ((((((((((rt0.c2)<<(rt0.c0)))AND(rt0.c0)))OR(((rt0.c1)<>(rt0.c1)))))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR(CASE rt0.c2  WHEN NULL THEN v0.c0 ELSE v0.c0 END)) WHERE ('-1794219652');
SELECT SUM(count) FROM (SELECT (('-1794219652') IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((((((((((rt0.c2)<<(rt0.c0)))AND(rt0.c0)))OR(((rt0.c1)!=(rt0.c1)))))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR(CASE rt0.c2  WHEN NULL THEN v0.c0 ELSE v0.c0 END)));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON ((((((((((rt0.c2)<<(rt0.c0)))AND(rt0.c0)))OR(((rt0.c1)<>(rt0.c1)))))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR(CASE rt0.c2  WHEN NULL THEN v0.c0 ELSE v0.c0 END)) WHERE ('-1794219652');
SELECT * FROM vt1, v0 WHERE (((((v0.c0))<=((v0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0))<=((v0.c0))) IN ())) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE (((((v0.c0))<=((v0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0))<=((v0.c0))) IN ())) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE (((((v0.c0))<=((v0.c0))) IN ()));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((rt0.c2) IS TRUE) COLLATE NOCASE COLLATE BINARY WHERE (LOWER(DISTINCT (((vt1.c0))!=((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT (((vt1.c0))<>((rt0.c1))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((rt0.c2) IS TRUE) COLLATE NOCASE COLLATE BINARY);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((rt0.c2) IS TRUE) COLLATE NOCASE COLLATE BINARY WHERE (LOWER(DISTINCT (((vt1.c0))!=((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT (((vt1.c0))<>((rt0.c1))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((rt0.c2) IS TRUE) COLLATE NOCASE COLLATE BINARY);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((rt0.c2) IS TRUE) COLLATE NOCASE COLLATE BINARY WHERE (LOWER(DISTINCT (((vt1.c0))!=((rt0.c1)))));
SELECT ALL * FROM v0 WHERE (NULLIF(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0) NOT NULL))) ORDER BY (((((v0.c0 IN ()))OR(NULL)))OR((x'' IN ()))), v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0) NOT NULL))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0 IN ()))OR(NULL)))OR((x'' IN ()))), v0.c0  NULLS LAST);
SELECT ALL * FROM v0 WHERE (NULLIF(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0) NOT NULL))) ORDER BY (((((v0.c0 IN ()))OR(NULL)))OR((x'' IN ()))), v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0) NOT NULL))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0 IN ()))OR(NULL)))OR((x'' IN ()))), v0.c0  NULLS LAST);
SELECT ALL * FROM v0 WHERE (NULLIF(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0) NOT NULL))) ORDER BY (((((v0.c0 IN ()))OR(NULL)))OR((x'' IN ()))), v0.c0  NULLS LAST;
SELECT * FROM rt0, vt1 WHERE (((((rt0.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c0))) IN (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c0))) IN (vt1.c0))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((((rt0.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c0))) IN (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c0))) IN (vt1.c0))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((((rt0.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c0))) IN (vt1.c0)));
SELECT * FROM vt1 INNER JOIN v0 ON IFNULL((v0.c0 IN ()), (- ('>5RXAt'))) WHERE (-1818929848) ORDER BY (((vt1.c0, v0.c0, v0.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 END, (vt1.c0 IN ()), (((vt1.c0))<>((vt1.c0))))) AND ((((vt1.c0) IS FALSE), ABS(DISTINCT vt1.c0), (- ('>鑄?'))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((-1818929848) IS TRUE)  as count FROM vt1 INNER JOIN v0 ON IFNULL((v0.c0 IN ()), (- ('>5RXAt'))) ORDER BY (((vt1.c0, v0.c0, v0.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 END, (vt1.c0 IN ()), (((vt1.c0))!=((vt1.c0))))) AND ((((vt1.c0) IS FALSE), ABS(DISTINCT vt1.c0), (- ('>鑄?'))))) ASC  NULLS FIRST);
SELECT * FROM vt1 INNER JOIN v0 ON IFNULL((v0.c0 IN ()), (- ('>5RXAt'))) WHERE (-1818929848) ORDER BY (((vt1.c0, v0.c0, v0.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 END, (vt1.c0 IN ()), (((vt1.c0))<>((vt1.c0))))) AND ((((vt1.c0) IS FALSE), ABS(DISTINCT vt1.c0), (- ('>鑄?'))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((-1818929848) IS TRUE)  as count FROM vt1 INNER JOIN v0 ON IFNULL((v0.c0 IN ()), (- ('>5RXAt'))) ORDER BY (((vt1.c0, v0.c0, v0.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 END, (vt1.c0 IN ()), (((vt1.c0))!=((vt1.c0))))) AND ((((vt1.c0) IS FALSE), ABS(DISTINCT vt1.c0), (- ('>鑄?'))))) ASC  NULLS FIRST);
SELECT * FROM vt1 INNER JOIN v0 ON IFNULL((v0.c0 IN ()), (- ('>5RXAt'))) WHERE (-1818929848) ORDER BY (((vt1.c0, v0.c0, v0.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 END, (vt1.c0 IN ()), (((vt1.c0))<>((vt1.c0))))) AND ((((vt1.c0) IS FALSE), ABS(DISTINCT vt1.c0), (- ('>鑄?'))))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1, rt0, v0 WHERE (((((((((((rt0.c0)AND(vt1.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)AND(vt1.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT ALL * FROM vt1, rt0, v0 WHERE (((((((((((rt0.c0)AND(vt1.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)AND(vt1.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT ALL * FROM vt1, rt0, v0 WHERE (((((((((((rt0.c0)AND(vt1.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1))) IS TRUE));
SELECT ALL * FROM v0 WHERE (CASE LIKELIHOOD(v0.c0, 0.4096176565386721)  WHEN v0.c0 COLLATE RTRIM THEN (~ (v0.c0)) ELSE ((((v0.c0)OR(v0.c0)))OR(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE LIKELIHOOD(v0.c0, 0.4096176565386721)  WHEN v0.c0 COLLATE RTRIM THEN (~ (v0.c0)) ELSE ((((v0.c0)OR(v0.c0)))OR(v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE LIKELIHOOD(v0.c0, 0.4096176565386721)  WHEN v0.c0 COLLATE RTRIM THEN (~ (v0.c0)) ELSE ((((v0.c0)OR(v0.c0)))OR(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE LIKELIHOOD(v0.c0, 0.4096176565386721)  WHEN v0.c0 COLLATE RTRIM THEN (~ (v0.c0)) ELSE ((((v0.c0)OR(v0.c0)))OR(v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE LIKELIHOOD(v0.c0, 0.4096176565386721)  WHEN v0.c0 COLLATE RTRIM THEN (~ (v0.c0)) ELSE ((((v0.c0)OR(v0.c0)))OR(v0.c0)) END);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)|(v0.c0))) BETWEEN ((((v0.c0))<=((v0.c0)))) AND (((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)|(v0.c0))) BETWEEN ((((v0.c0))<=((v0.c0)))) AND (((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)|(v0.c0))) BETWEEN ((((v0.c0))<=((v0.c0)))) AND (((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)|(v0.c0))) BETWEEN ((((v0.c0))<=((v0.c0)))) AND (((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)|(v0.c0))) BETWEEN ((((v0.c0))<=((v0.c0)))) AND (((v0.c0) IS TRUE))));
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 END)IS(rt0.c2))) ORDER BY ((((TRIM(rt0.c2))OR(CASE rt0.c2  WHEN rt0.c2 THEN 'b싼dcy' END)))AND(((rt0.c2)/(rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt0.c0 END)IS(rt0.c2))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY ((((TRIM(rt0.c2))OR(CASE rt0.c2  WHEN rt0.c2 THEN 'b싼dcy' END)))AND(((rt0.c2)/(rt0.c0)))) DESC  NULLS LAST);
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 END)IS(rt0.c2))) ORDER BY ((((TRIM(rt0.c2))OR(CASE rt0.c2  WHEN rt0.c2 THEN 'b싼dcy' END)))AND(((rt0.c2)/(rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt0.c0 END)IS(rt0.c2))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY ((((TRIM(rt0.c2))OR(CASE rt0.c2  WHEN rt0.c2 THEN 'b싼dcy' END)))AND(((rt0.c2)/(rt0.c0)))) DESC  NULLS LAST);
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 END)IS(rt0.c2))) ORDER BY ((((TRIM(rt0.c2))OR(CASE rt0.c2  WHEN rt0.c2 THEN 'b싼dcy' END)))AND(((rt0.c2)/(rt0.c0)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT * FROM vt1, rt0 WHERE ((((((rt0.c2) BETWEEN (rt0.c1) AND (vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c1)), SQLITE_VERSION()))<>((((((rt0.c2)OR(rt0.c2)))OR(vt1.c0)), ((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c2)), CASE rt0.c2  WHEN vt1.c0 THEN rt0.c0 END)))) ORDER BY ((((('391423631')) BETWEEN ((-7.76264454E8)) AND (('117655161'))))!=((rt0.c2 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) BETWEEN (rt0.c1) AND (vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c1)), SQLITE_VERSION()))!=((((((rt0.c2)OR(rt0.c2)))OR(vt1.c0)), ((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c2)), CASE rt0.c2  WHEN vt1.c0 THEN rt0.c0 END)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((('391423631')) BETWEEN ((-7.76264454E8)) AND (('117655161'))))<>((rt0.c2 IN ())))  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE ((((((rt0.c2) BETWEEN (rt0.c1) AND (vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c1)), SQLITE_VERSION()))<>((((((rt0.c2)OR(rt0.c2)))OR(vt1.c0)), ((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c2)), CASE rt0.c2  WHEN vt1.c0 THEN rt0.c0 END)))) ORDER BY ((((('391423631')) BETWEEN ((-7.76264454E8)) AND (('117655161'))))!=((rt0.c2 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) BETWEEN (rt0.c1) AND (vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c1)), SQLITE_VERSION()))!=((((((rt0.c2)OR(rt0.c2)))OR(vt1.c0)), ((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c2)), CASE rt0.c2  WHEN vt1.c0 THEN rt0.c0 END)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((('391423631')) BETWEEN ((-7.76264454E8)) AND (('117655161'))))<>((rt0.c2 IN ())))  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE ((((((rt0.c2) BETWEEN (rt0.c1) AND (vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c1)), SQLITE_VERSION()))<>((((((rt0.c2)OR(rt0.c2)))OR(vt1.c0)), ((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c2)), CASE rt0.c2  WHEN vt1.c0 THEN rt0.c0 END)))) ORDER BY ((((('391423631')) BETWEEN ((-7.76264454E8)) AND (('117655161'))))!=((rt0.c2 IN ())))  NULLS LAST;
SELECT * FROM v0 LEFT OUTER JOIN vt1 ON ((((((((CAST(NULL AS INTEGER))OR(((v0.c0)<<(v0.c0)))))OR(TYPEOF(DISTINCT v0.c0))))AND((NOT (v0.c0)))))OR((v0.c0 IN (0.4254938938141324)))) WHERE (v0.c0) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON ((((((((CAST(NULL AS INTEGER))OR(((v0.c0)<<(v0.c0)))))OR(TYPEOF(DISTINCT v0.c0))))AND((NOT (v0.c0)))))OR((v0.c0 IN (0.4254938938141324)))) ORDER BY v0.c0  NULLS LAST);
SELECT * FROM v0 LEFT OUTER JOIN vt1 ON ((((((((CAST(NULL AS INTEGER))OR(((v0.c0)<<(v0.c0)))))OR(TYPEOF(DISTINCT v0.c0))))AND((NOT (v0.c0)))))OR((v0.c0 IN (0.4254938938141324)))) WHERE (v0.c0) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON ((((((((CAST(NULL AS INTEGER))OR(((v0.c0)<<(v0.c0)))))OR(TYPEOF(DISTINCT v0.c0))))AND((NOT (v0.c0)))))OR((v0.c0 IN (0.4254938938141324)))) ORDER BY v0.c0  NULLS LAST);
SELECT * FROM v0 LEFT OUTER JOIN vt1 ON ((((((((CAST(NULL AS INTEGER))OR(((v0.c0)<<(v0.c0)))))OR(TYPEOF(DISTINCT v0.c0))))AND((NOT (v0.c0)))))OR((v0.c0 IN (0.4254938938141324)))) WHERE (v0.c0) ORDER BY v0.c0  NULLS LAST;
SELECT COUNT(*) FROM v0, rt0, vt1 WHERE (CAST(((rt0.c0) IS FALSE) AS TEXT)) ORDER BY CAST(NULL AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) IS FALSE) AS TEXT)) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY CAST(NULL AS BLOB) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0, vt1 WHERE (CAST(((rt0.c0) IS FALSE) AS TEXT)) ORDER BY CAST(NULL AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) IS FALSE) AS TEXT)) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY CAST(NULL AS BLOB) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0, vt1 WHERE (CAST(((rt0.c0) IS FALSE) AS TEXT)) ORDER BY CAST(NULL AS BLOB) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt1, rt0 WHERE ((rt0.c2 IN ())) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN rt0.c1 WHEN 1569840082 THEN rt0.c1 ELSE vt1.c0 END) ISNULL);
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ())) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN rt0.c1 WHEN 1569840082 THEN rt0.c1 ELSE vt1.c0 END) ISNULL));
SELECT ALL COUNT(*) FROM v0, vt1, rt0 WHERE ((rt0.c2 IN ())) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN rt0.c1 WHEN 1569840082 THEN rt0.c1 ELSE vt1.c0 END) ISNULL);
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ())) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN rt0.c1 WHEN 1569840082 THEN rt0.c1 ELSE vt1.c0 END) ISNULL));
SELECT ALL COUNT(*) FROM v0, vt1, rt0 WHERE ((rt0.c2 IN ())) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN rt0.c1 WHEN 1569840082 THEN rt0.c1 ELSE vt1.c0 END) ISNULL);
SELECT COUNT(*) FROM vt1, v0, rt0 WHERE (LIKELIHOOD(DISTINCT CAST(1776460323 AS BLOB), 0.37459150754348414)) ORDER BY ((~ (rt0.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT CAST(1776460323 AS BLOB), 0.37459150754348414)) IS TRUE)  as count FROM vt1, v0, rt0 ORDER BY ((~ (rt0.c1)) IN ()) DESC);
SELECT COUNT(*) FROM vt1, v0, rt0 WHERE (LIKELIHOOD(DISTINCT CAST(1776460323 AS BLOB), 0.37459150754348414)) ORDER BY ((~ (rt0.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT CAST(1776460323 AS BLOB), 0.37459150754348414)) IS TRUE)  as count FROM vt1, v0, rt0 ORDER BY ((~ (rt0.c1)) IN ()) DESC);
SELECT COUNT(*) FROM vt1, v0, rt0 WHERE (LIKELIHOOD(DISTINCT CAST(1776460323 AS BLOB), 0.37459150754348414)) ORDER BY ((~ (rt0.c1)) IN ()) DESC;
SELECT COUNT(*) FROM vt1, v0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (vt1.c0);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c0 COLLATE NOCASE IN ())) ORDER BY (((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)) IN ()) ASC  NULLS FIRST, (+ (CAST(rt0.c2 AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)) IN ()) ASC  NULLS FIRST, (+ (CAST(rt0.c2 AS NUMERIC))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c0 COLLATE NOCASE IN ())) ORDER BY (((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)) IN ()) ASC  NULLS FIRST, (+ (CAST(rt0.c2 AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)) IN ()) ASC  NULLS FIRST, (+ (CAST(rt0.c2 AS NUMERIC))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c0 COLLATE NOCASE IN ())) ORDER BY (((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)) IN ()) ASC  NULLS FIRST, (+ (CAST(rt0.c2 AS NUMERIC))) DESC  NULLS LAST;
SELECT * FROM vt1, v0 WHERE ('-1183244202');
SELECT SUM(count) FROM (SELECT (('-1183244202') IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE ('-1183244202');
SELECT SUM(count) FROM (SELECT (('-1183244202') IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE ('-1183244202');
SELECT COUNT(*) FROM rt0, vt1 WHERE ((rt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((rt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((rt0.c1 IN ()));
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1)&(rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)&(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1)&(rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)&(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1)&(rt0.c2)) AS TEXT));
SELECT ALL * FROM v0, vt1, rt0 WHERE (CASE WHEN rt0.c2 COLLATE RTRIM THEN (vt1.c0 IN ()) WHEN (((vt1.c0))=((vt1.c0))) THEN ((vt1.c0) ISNULL) WHEN ((v0.c0)|(rt0.c0)) THEN ((rt0.c2) NOTNULL) ELSE ((rt0.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 COLLATE RTRIM THEN (vt1.c0 IN ()) WHEN (((vt1.c0))=((vt1.c0))) THEN ((vt1.c0) ISNULL) WHEN ((v0.c0)|(rt0.c0)) THEN ((rt0.c2) NOTNULL) ELSE ((rt0.c0) NOTNULL) END) IS TRUE)  as count FROM v0 NOT INDEXED, vt1, rt0);
SELECT ALL * FROM v0, vt1, rt0 WHERE (CASE WHEN rt0.c2 COLLATE RTRIM THEN (vt1.c0 IN ()) WHEN (((vt1.c0))=((vt1.c0))) THEN ((vt1.c0) ISNULL) WHEN ((v0.c0)|(rt0.c0)) THEN ((rt0.c2) NOTNULL) ELSE ((rt0.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 COLLATE RTRIM THEN (vt1.c0 IN ()) WHEN (((vt1.c0))=((vt1.c0))) THEN ((vt1.c0) ISNULL) WHEN ((v0.c0)|(rt0.c0)) THEN ((rt0.c2) NOTNULL) ELSE ((rt0.c0) NOTNULL) END) IS TRUE)  as count FROM v0 NOT INDEXED, vt1, rt0);
SELECT ALL * FROM v0, vt1, rt0 WHERE (CASE WHEN rt0.c2 COLLATE RTRIM THEN (vt1.c0 IN ()) WHEN (((vt1.c0))=((vt1.c0))) THEN ((vt1.c0) ISNULL) WHEN ((v0.c0)|(rt0.c0)) THEN ((rt0.c2) NOTNULL) ELSE ((rt0.c0) NOTNULL) END);
SELECT COUNT(*) FROM rt0 WHERE (((((NULL)AND((~ (rt0.c2)))))OR(((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((NULL)AND((~ (rt0.c2)))))OR(((((rt0.c0)OR(rt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((NULL)AND((~ (rt0.c2)))))OR(((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((NULL)AND((~ (rt0.c2)))))OR(((((rt0.c0)OR(rt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((NULL)AND((~ (rt0.c2)))))OR(((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))));
SELECT ALL * FROM v0 WHERE ((0.2760252220153526 IN (v0.c0, v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((0.2760252220153526 IN (v0.c0, v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((0.2760252220153526 IN (v0.c0, v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((0.2760252220153526 IN (v0.c0, v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((0.2760252220153526 IN (v0.c0, v0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM v0, rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM v0, rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (rt0.c1);
SELECT * FROM v0, rt0 WHERE (((((rt0.c2) IS TRUE)) NOT NULL)) ORDER BY v0.c0 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY v0.c0 COLLATE NOCASE);
SELECT * FROM v0, rt0 WHERE (((((rt0.c2) IS TRUE)) NOT NULL)) ORDER BY v0.c0 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY v0.c0 COLLATE NOCASE);
SELECT * FROM v0, rt0 WHERE (((((rt0.c2) IS TRUE)) NOT NULL)) ORDER BY v0.c0 COLLATE NOCASE;
SELECT COUNT(*) FROM v0, vt1, rt0 WHERE (((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))AND(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c2 END)))AND(((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY CASE WHEN (((rt0.c0, vt1.c0, rt0.c2))!=((rt0.c2, NULL, rt0.c0))) THEN ((((rt0.c1)OR(vt1.c0)))AND(vt1.c0)) WHEN ((rt0.c0)IS NOT(v0.c0)) THEN vt1.c0 COLLATE NOCASE WHEN ((((rt0.c2)AND(vt1.c0)))AND(vt1.c0)) THEN CASE WHEN rt0.c0 THEN rt0.c2 END END ASC  NULLS FIRST, rt0.c1 ASC  NULLS LAST, ((JULIANDAY(rt0.c2, rt0.c1, rt0.c1)) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))AND(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c2 END)))AND(((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY CASE WHEN (((rt0.c0, vt1.c0, rt0.c2))!=((rt0.c2, NULL, rt0.c0))) THEN ((((rt0.c1)OR(vt1.c0)))AND(vt1.c0)) WHEN ((rt0.c0)IS NOT(v0.c0)) THEN vt1.c0 COLLATE NOCASE WHEN ((((rt0.c2)AND(vt1.c0)))AND(vt1.c0)) THEN CASE WHEN rt0.c0 THEN rt0.c2 END END ASC  NULLS FIRST, rt0.c1 ASC  NULLS LAST, ((JULIANDAY(rt0.c2, rt0.c1, rt0.c1)) NOTNULL));
SELECT COUNT(*) FROM v0, vt1, rt0 WHERE (((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))AND(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c2 END)))AND(((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY CASE WHEN (((rt0.c0, vt1.c0, rt0.c2))!=((rt0.c2, NULL, rt0.c0))) THEN ((((rt0.c1)OR(vt1.c0)))AND(vt1.c0)) WHEN ((rt0.c0)IS NOT(v0.c0)) THEN vt1.c0 COLLATE NOCASE WHEN ((((rt0.c2)AND(vt1.c0)))AND(vt1.c0)) THEN CASE WHEN rt0.c0 THEN rt0.c2 END END ASC  NULLS FIRST, rt0.c1 ASC  NULLS LAST, ((JULIANDAY(rt0.c2, rt0.c1, rt0.c1)) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))AND(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c2 END)))AND(((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY CASE WHEN (((rt0.c0, vt1.c0, rt0.c2))!=((rt0.c2, NULL, rt0.c0))) THEN ((((rt0.c1)OR(vt1.c0)))AND(vt1.c0)) WHEN ((rt0.c0)IS NOT(v0.c0)) THEN vt1.c0 COLLATE NOCASE WHEN ((((rt0.c2)AND(vt1.c0)))AND(vt1.c0)) THEN CASE WHEN rt0.c0 THEN rt0.c2 END END ASC  NULLS FIRST, rt0.c1 ASC  NULLS LAST, ((JULIANDAY(rt0.c2, rt0.c1, rt0.c1)) NOTNULL));
SELECT COUNT(*) FROM v0, vt1, rt0 WHERE (((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))AND(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c2 END)))AND(((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY CASE WHEN (((rt0.c0, vt1.c0, rt0.c2))!=((rt0.c2, NULL, rt0.c0))) THEN ((((rt0.c1)OR(vt1.c0)))AND(vt1.c0)) WHEN ((rt0.c0)IS NOT(v0.c0)) THEN vt1.c0 COLLATE NOCASE WHEN ((((rt0.c2)AND(vt1.c0)))AND(vt1.c0)) THEN CASE WHEN rt0.c0 THEN rt0.c2 END END ASC  NULLS FIRST, rt0.c1 ASC  NULLS LAST, ((JULIANDAY(rt0.c2, rt0.c1, rt0.c1)) NOTNULL);
SELECT COUNT(*) FROM vt1 WHERE ((+ (CAST(vt1.c0 AS TEXT)))) ORDER BY (((vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND (((vt1.c0 IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND (((vt1.c0 IN ()))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((+ (CAST(vt1.c0 AS TEXT)))) ORDER BY (((vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND (((vt1.c0 IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND (((vt1.c0 IN ()))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((+ (CAST(vt1.c0 AS TEXT)))) ORDER BY (((vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND (((vt1.c0 IN ()))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt1 ON ((((CASE WHEN v0.c0 THEN v0.c0 ELSE vt1.c0 END)AND(((vt1.c0)AND(v0.c0)))))AND(vt1.c0)) WHERE (CASE WHEN CAST(v0.c0 AS INTEGER) THEN v0.c0 ELSE CASE WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(v0.c0 AS INTEGER) THEN v0.c0 ELSE CASE WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 END END) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt1 ON ((((CASE WHEN v0.c0 THEN v0.c0 ELSE vt1.c0 END)AND(((vt1.c0)AND(v0.c0)))))AND(vt1.c0)));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt1 ON ((((CASE WHEN v0.c0 THEN v0.c0 ELSE vt1.c0 END)AND(((vt1.c0)AND(v0.c0)))))AND(vt1.c0)) WHERE (CASE WHEN CAST(v0.c0 AS INTEGER) THEN v0.c0 ELSE CASE WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(v0.c0 AS INTEGER) THEN v0.c0 ELSE CASE WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 END END) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt1 ON ((((CASE WHEN v0.c0 THEN v0.c0 ELSE vt1.c0 END)AND(((vt1.c0)AND(v0.c0)))))AND(vt1.c0)));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt1 ON ((((CASE WHEN v0.c0 THEN v0.c0 ELSE vt1.c0 END)AND(((vt1.c0)AND(v0.c0)))))AND(vt1.c0)) WHERE (CASE WHEN CAST(v0.c0 AS INTEGER) THEN v0.c0 ELSE CASE WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 END END);
SELECT COUNT(*) FROM v0 WHERE ((~ (((v0.c0) BETWEEN (v0.c0) AND ('968424030')))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c0) BETWEEN (v0.c0) AND ('968424030'))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((~ (((v0.c0) BETWEEN (v0.c0) AND ('968424030')))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c0) BETWEEN (v0.c0) AND ('968424030'))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((~ (((v0.c0) BETWEEN (v0.c0) AND ('968424030')))));
SELECT ALL * FROM v0, rt0 WHERE (CAST(rt0.c2 AS BLOB) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS BLOB) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CAST(rt0.c2 AS BLOB) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS BLOB) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CAST(rt0.c2 AS BLOB) COLLATE NOCASE COLLATE RTRIM);
SELECT ALL * FROM v0, rt0, vt1 WHERE (((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c0)))>>((vt1.c0 IN ())))) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c0)))>>((vt1.c0 IN ())))) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY v0.c0  NULLS FIRST);
SELECT ALL * FROM v0, rt0, vt1 WHERE (((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c0)))>>((vt1.c0 IN ())))) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c0)))>>((vt1.c0 IN ())))) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY v0.c0  NULLS FIRST);
SELECT ALL * FROM v0, rt0, vt1 WHERE (((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c0)))>>((vt1.c0 IN ())))) ORDER BY v0.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (')?f');
SELECT SUM(count) FROM (SELECT ((')?f') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (')?f');
SELECT SUM(count) FROM (SELECT ((')?f') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (')?f');
SELECT ALL * FROM vt1, v0, rt0 WHERE (((vt1.c0) BETWEEN (((((rt0.c2)AND(1.757580024E9)))AND(rt0.c0))) AND ((rt0.c2 IN (v0.c0, NULL))))) ORDER BY (((~ (vt1.c0)))||(v0.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN (((((rt0.c2)AND(1.757580024E9)))AND(rt0.c0))) AND ((rt0.c2 IN (v0.c0, NULL))))) IS TRUE)  as count FROM vt1, v0, rt0 NOT INDEXED ORDER BY (((~ (vt1.c0)))||(v0.c0 COLLATE NOCASE)) ASC);
SELECT ALL * FROM vt1, v0, rt0 WHERE (((vt1.c0) BETWEEN (((((rt0.c2)AND(1.757580024E9)))AND(rt0.c0))) AND ((rt0.c2 IN (v0.c0, NULL))))) ORDER BY (((~ (vt1.c0)))||(v0.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN (((((rt0.c2)AND(1.757580024E9)))AND(rt0.c0))) AND ((rt0.c2 IN (v0.c0, NULL))))) IS TRUE)  as count FROM vt1, v0, rt0 NOT INDEXED ORDER BY (((~ (vt1.c0)))||(v0.c0 COLLATE NOCASE)) ASC);
SELECT ALL * FROM vt1, v0, rt0 WHERE (((vt1.c0) BETWEEN (((((rt0.c2)AND(1.757580024E9)))AND(rt0.c0))) AND ((rt0.c2 IN (v0.c0, NULL))))) ORDER BY (((~ (vt1.c0)))||(v0.c0 COLLATE NOCASE)) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM v0 WHERE (json_extract((- (v0.c0)), v0.c0 COLLATE NOCASE, v0.c0 COLLATE RTRIM, ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(NULL)))) ORDER BY (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))||(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_extract((- (v0.c0)), v0.c0 COLLATE NOCASE, v0.c0 COLLATE RTRIM, ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(NULL)))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))||(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (json_extract((- (v0.c0)), v0.c0 COLLATE NOCASE, v0.c0 COLLATE RTRIM, ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(NULL)))) ORDER BY (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))||(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_extract((- (v0.c0)), v0.c0 COLLATE NOCASE, v0.c0 COLLATE RTRIM, ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(NULL)))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))||(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (json_extract((- (v0.c0)), v0.c0 COLLATE NOCASE, v0.c0 COLLATE RTRIM, ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(NULL)))) ORDER BY (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))||(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE ((~ (((v0.c0)-(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((v0.c0)-(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((~ (((v0.c0)-(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((v0.c0)-(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((~ (((v0.c0)-(v0.c0)))));
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE WHEN CASE WHEN vt1.c0 THEN rt0.c1 END THEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt1.c0 THEN rt0.c1 END THEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)) END) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE WHEN CASE WHEN vt1.c0 THEN rt0.c1 END THEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt1.c0 THEN rt0.c1 END THEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)) END) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE WHEN CASE WHEN vt1.c0 THEN rt0.c1 END THEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)) END);
SELECT * FROM rt0 WHERE ((+ (NULLIF(rt0.c0, rt0.c0)))) ORDER BY rt0.c0  NULLS LAST, CAST((~ (rt0.c1)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT (((+ (NULLIF(rt0.c0, rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0  NULLS LAST, CAST((~ (rt0.c1)) AS TEXT) ASC);
SELECT * FROM rt0 WHERE ((+ (NULLIF(rt0.c0, rt0.c0)))) ORDER BY rt0.c0  NULLS LAST, CAST((~ (rt0.c1)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT (((+ (NULLIF(rt0.c0, rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0  NULLS LAST, CAST((~ (rt0.c1)) AS TEXT) ASC);
SELECT * FROM rt0 WHERE ((+ (NULLIF(rt0.c0, rt0.c0)))) ORDER BY rt0.c0  NULLS LAST, CAST((~ (rt0.c1)) AS TEXT) ASC;
SELECT COUNT(*) FROM rt0 WHERE (TRIM(((rt0.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((rt0.c1) NOT NULL))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (TRIM(((rt0.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((rt0.c1) NOT NULL))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (TRIM(((rt0.c1) NOT NULL)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c0)))AND(CASE WHEN rt0.c1 THEN rt0.c0 END)))AND((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c0)))AND(CASE WHEN rt0.c1 THEN rt0.c0 END)))AND((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c0)))AND(CASE WHEN rt0.c1 THEN rt0.c0 END)))AND((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c0)))AND(CASE WHEN rt0.c1 THEN rt0.c0 END)))AND((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c0)))AND(CASE WHEN rt0.c1 THEN rt0.c0 END)))AND((rt0.c1 IN ()))));
SELECT ALL * FROM vt1, v0 NOT INDEXED, rt0 WHERE ((((rt0.c2))<(((+ (rt0.c0)))))) ORDER BY CAST(((-439728127) BETWEEN (rt0.c1) AND (v0.c0)) AS REAL)  NULLS FIRST, (((rt0.c1 IN ())) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2))<(((+ (rt0.c0)))))) IS TRUE)  as count FROM vt1, v0, rt0 ORDER BY CAST(((-439728127) BETWEEN (rt0.c1) AND (v0.c0)) AS REAL)  NULLS FIRST, (((rt0.c1 IN ())) IS TRUE) DESC);
SELECT ALL * FROM vt1, v0 NOT INDEXED, rt0 WHERE ((((rt0.c2))<(((+ (rt0.c0)))))) ORDER BY CAST(((-439728127) BETWEEN (rt0.c1) AND (v0.c0)) AS REAL)  NULLS FIRST, (((rt0.c1 IN ())) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2))<(((+ (rt0.c0)))))) IS TRUE)  as count FROM vt1, v0, rt0 ORDER BY CAST(((-439728127) BETWEEN (rt0.c1) AND (v0.c0)) AS REAL)  NULLS FIRST, (((rt0.c1 IN ())) IS TRUE) DESC);
SELECT ALL * FROM vt1, v0 NOT INDEXED, rt0 WHERE ((((rt0.c2))<(((+ (rt0.c0)))))) ORDER BY CAST(((-439728127) BETWEEN (rt0.c1) AND (v0.c0)) AS REAL)  NULLS FIRST, (((rt0.c1 IN ())) IS TRUE) DESC;
SELECT COUNT(*) FROM rt0, vt1, v0 WHERE (CASE WHEN ((rt0.c0)-(v0.c0)) THEN ((v0.c0) IS TRUE) ELSE rt0.c2 END) ORDER BY rt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0)-(v0.c0)) THEN ((v0.c0) IS TRUE) ELSE rt0.c2 END) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY rt0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1, v0 WHERE (CASE WHEN ((rt0.c0)-(v0.c0)) THEN ((v0.c0) IS TRUE) ELSE rt0.c2 END) ORDER BY rt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0)-(v0.c0)) THEN ((v0.c0) IS TRUE) ELSE rt0.c2 END) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY rt0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1, v0 WHERE (CASE WHEN ((rt0.c0)-(v0.c0)) THEN ((v0.c0) IS TRUE) ELSE rt0.c2 END) ORDER BY rt0.c0 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, v0, rt0 WHERE (CAST(((rt0.c0)>>(rt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)>>(rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM vt1, v0, rt0);
SELECT ALL COUNT(*) FROM vt1, v0, rt0 WHERE (CAST(((rt0.c0)>>(rt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)>>(rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM vt1, v0, rt0);
SELECT ALL COUNT(*) FROM vt1, v0, rt0 WHERE (CAST(((rt0.c0)>>(rt0.c2)) AS NUMERIC));
SELECT COUNT(*) FROM v0, vt1, rt0 WHERE (x'') ORDER BY (('-1183244202')GLOB((v0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY (('-1183244202')GLOB((v0.c0 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt1, rt0 WHERE (x'') ORDER BY (('-1183244202')GLOB((v0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY (('-1183244202')GLOB((v0.c0 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt1, rt0 WHERE (x'') ORDER BY (('-1183244202')GLOB((v0.c0 IN ())))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN ((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c0)) THEN CASE rt0.c1  WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c1 END ELSE rt0.c1 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c0)) THEN CASE rt0.c1  WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c1 END ELSE rt0.c1 COLLATE BINARY END) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN ((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c0)) THEN CASE rt0.c1  WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c1 END ELSE rt0.c1 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c0)) THEN CASE rt0.c1  WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c1 END ELSE rt0.c1 COLLATE BINARY END) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN ((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c0)) THEN CASE rt0.c1  WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c1 END ELSE rt0.c1 COLLATE BINARY END);
SELECT COUNT(*) FROM v0, rt0 WHERE ((+ (rt0.c2))) ORDER BY 'T';
SELECT SUM(count) FROM (SELECT (((+ (rt0.c2))) IS TRUE)  as count FROM v0, rt0 ORDER BY 'T');
SELECT COUNT(*) FROM v0, rt0 WHERE ((+ (rt0.c2))) ORDER BY 'T';
SELECT SUM(count) FROM (SELECT (((+ (rt0.c2))) IS TRUE)  as count FROM v0, rt0 ORDER BY 'T');
SELECT COUNT(*) FROM v0, rt0 WHERE ((+ (rt0.c2))) ORDER BY 'T';
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((NULL, v0.c0, v0.c0))), ((v0.c0)IS(v0.c0)), (~ (NULL))))=((COALESCE(DISTINCT v0.c0, v0.c0), (+ (v0.c0)), v0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((NULL, v0.c0, v0.c0))), ((v0.c0)IS(v0.c0)), (~ (NULL))))==((COALESCE(DISTINCT v0.c0, v0.c0), (+ (v0.c0)), v0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((NULL, v0.c0, v0.c0))), ((v0.c0)IS(v0.c0)), (~ (NULL))))=((COALESCE(DISTINCT v0.c0, v0.c0), (+ (v0.c0)), v0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((NULL, v0.c0, v0.c0))), ((v0.c0)IS(v0.c0)), (~ (NULL))))==((COALESCE(DISTINCT v0.c0, v0.c0), (+ (v0.c0)), v0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((NULL, v0.c0, v0.c0))), ((v0.c0)IS(v0.c0)), (~ (NULL))))=((COALESCE(DISTINCT v0.c0, v0.c0), (+ (v0.c0)), v0.c0 COLLATE BINARY))));
SELECT * FROM rt0 WHERE (CASE ((rt0.c1)<>(rt0.c1))  WHEN (~ (rt0.c2)) THEN rt0.c0 COLLATE NOCASE END) ORDER BY CASE WHEN CASE 0X2c5b3c6c  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END THEN CAST(rt0.c2 AS REAL) ELSE (+ (rt0.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1)<>(rt0.c1))  WHEN (~ (rt0.c2)) THEN rt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CASE 0X2c5b3c6c  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END THEN CAST(rt0.c2 AS REAL) ELSE (+ (rt0.c2)) END ASC);
SELECT * FROM rt0 WHERE (CASE ((rt0.c1)<>(rt0.c1))  WHEN (~ (rt0.c2)) THEN rt0.c0 COLLATE NOCASE END) ORDER BY CASE WHEN CASE 0X2c5b3c6c  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END THEN CAST(rt0.c2 AS REAL) ELSE (+ (rt0.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1)<>(rt0.c1))  WHEN (~ (rt0.c2)) THEN rt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CASE 0X2c5b3c6c  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END THEN CAST(rt0.c2 AS REAL) ELSE (+ (rt0.c2)) END ASC);
SELECT * FROM rt0 WHERE (CASE ((rt0.c1)<>(rt0.c1))  WHEN (~ (rt0.c2)) THEN rt0.c0 COLLATE NOCASE END) ORDER BY CASE WHEN CASE 0X2c5b3c6c  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END THEN CAST(rt0.c2 AS REAL) ELSE (+ (rt0.c2)) END ASC;
SELECT COUNT(*) FROM v0, rt0, vt1 WHERE ((((((rt0.c1))>((rt0.c2)))) BETWEEN ((rt0.c2 IN (0.7846192117000522, vt1.c0))) AND ((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((x'')))))) ORDER BY JULIANDAY(v0.c0, x'', 0X69e2a223, vt1.c0, rt0.c0) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1))>((rt0.c2)))) BETWEEN ((rt0.c2 IN (0.7846192117000522, vt1.c0))) AND ((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((x'')))))) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY JULIANDAY(v0.c0, x'', 0x69e2a223, vt1.c0, rt0.c0) COLLATE NOCASE ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0, vt1 WHERE ((((((rt0.c1))>((rt0.c2)))) BETWEEN ((rt0.c2 IN (0.7846192117000522, vt1.c0))) AND ((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((x'')))))) ORDER BY JULIANDAY(v0.c0, x'', 0X69e2a223, vt1.c0, rt0.c0) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1))>((rt0.c2)))) BETWEEN ((rt0.c2 IN (0.7846192117000522, vt1.c0))) AND ((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((x'')))))) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY JULIANDAY(v0.c0, x'', 0x69e2a223, vt1.c0, rt0.c0) COLLATE NOCASE ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0, vt1 WHERE ((((((rt0.c1))>((rt0.c2)))) BETWEEN ((rt0.c2 IN (0.7846192117000522, vt1.c0))) AND ((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((x'')))))) ORDER BY JULIANDAY(v0.c0, x'', 0X69e2a223, vt1.c0, rt0.c0) COLLATE NOCASE ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN ((CASE v0.c0  WHEN 0.3253767987398679 THEN v0.c0 ELSE v0.c0 END)) AND (((NOT (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((CASE v0.c0  WHEN 0.3253767987398679 THEN v0.c0 ELSE v0.c0 END)) AND (((NOT (v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN ((CASE v0.c0  WHEN 0.3253767987398679 THEN v0.c0 ELSE v0.c0 END)) AND (((NOT (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((CASE v0.c0  WHEN 0.3253767987398679 THEN v0.c0 ELSE v0.c0 END)) AND (((NOT (v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN ((CASE v0.c0  WHEN 0.3253767987398679 THEN v0.c0 ELSE v0.c0 END)) AND (((NOT (v0.c0))))));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))>>((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))>>((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))>>((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))>>((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))>>((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))));
SELECT COUNT(*) FROM v0 WHERE (((((CAST(v0.c0 AS NUMERIC))AND((+ (v0.c0)))))AND((- (v0.c0))))) ORDER BY ((v0.c0) ISNULL)  NULLS FIRST, '-763926833';
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c0 AS NUMERIC))AND((+ (v0.c0)))))AND((- (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) ISNULL)  NULLS FIRST, '-763926833');
SELECT COUNT(*) FROM v0 WHERE (((((CAST(v0.c0 AS NUMERIC))AND((+ (v0.c0)))))AND((- (v0.c0))))) ORDER BY ((v0.c0) ISNULL)  NULLS FIRST, '-763926833';
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c0 AS NUMERIC))AND((+ (v0.c0)))))AND((- (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) ISNULL)  NULLS FIRST, '-763926833');
SELECT COUNT(*) FROM v0 WHERE (((((CAST(v0.c0 AS NUMERIC))AND((+ (v0.c0)))))AND((- (v0.c0))))) ORDER BY ((v0.c0) ISNULL)  NULLS FIRST, '-763926833';
SELECT ALL COUNT(*) FROM vt1, v0, rt0 WHERE (((((((vt1.c0) NOT NULL))OR((0.3224890968467644 IN ()))))AND(((v0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) NOT NULL))OR((0.3224890968467644 IN ()))))AND(((v0.c0) BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM vt1, v0, rt0);
SELECT ALL COUNT(*) FROM vt1, v0, rt0 WHERE (((((((vt1.c0) NOT NULL))OR((0.3224890968467644 IN ()))))AND(((v0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) NOT NULL))OR((0.3224890968467644 IN ()))))AND(((v0.c0) BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM vt1, v0, rt0);
SELECT ALL COUNT(*) FROM vt1, v0, rt0 WHERE (((((((vt1.c0) NOT NULL))OR((0.3224890968467644 IN ()))))AND(((v0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0 IN ()))OR(((x'')GLOB(vt1.c0)))))OR(((vt1.c0)<>(x''))))) ORDER BY CASE ((vt1.c0)AND(vt1.c0))  WHEN ((vt1.c0)>(vt1.c0)) THEN ((vt1.c0)>(vt1.c0)) END  NULLS LAST, ((vt1.c0)%(vt1.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0 IN ()))OR(((x'')GLOB(vt1.c0)))))OR(((vt1.c0)!=(x''))))) IS TRUE)  as count FROM vt1 ORDER BY CASE ((vt1.c0)AND(vt1.c0))  WHEN ((vt1.c0)>(vt1.c0)) THEN ((vt1.c0)>(vt1.c0)) END  NULLS LAST, ((vt1.c0)%(vt1.c0)) COLLATE NOCASE ASC);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0 IN ()))OR(((x'')GLOB(vt1.c0)))))OR(((vt1.c0)<>(x''))))) ORDER BY CASE ((vt1.c0)AND(vt1.c0))  WHEN ((vt1.c0)>(vt1.c0)) THEN ((vt1.c0)>(vt1.c0)) END  NULLS LAST, ((vt1.c0)%(vt1.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0 IN ()))OR(((x'')GLOB(vt1.c0)))))OR(((vt1.c0)!=(x''))))) IS TRUE)  as count FROM vt1 ORDER BY CASE ((vt1.c0)AND(vt1.c0))  WHEN ((vt1.c0)>(vt1.c0)) THEN ((vt1.c0)>(vt1.c0)) END  NULLS LAST, ((vt1.c0)%(vt1.c0)) COLLATE NOCASE ASC);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0 IN ()))OR(((x'')GLOB(vt1.c0)))))OR(((vt1.c0)<>(x''))))) ORDER BY CASE ((vt1.c0)AND(vt1.c0))  WHEN ((vt1.c0)>(vt1.c0)) THEN ((vt1.c0)>(vt1.c0)) END  NULLS LAST, ((vt1.c0)%(vt1.c0)) COLLATE NOCASE ASC;
SELECT * FROM v0 WHERE ((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND('b싼dcy')))AND(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND('b싼dcy')))AND(v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND('b싼dcy')))AND(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND('b싼dcy')))AND(v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND('b싼dcy')))AND(v0.c0)) IN ()));
SELECT ALL * FROM vt1, v0 WHERE ((((NULL))>(((((v0.c0))=((vt1.c0))))))) ORDER BY ((((((((((((v0.c0)AND(x'')))OR(v0.c0)))OR(v0.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(v0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((NULL))>(((((v0.c0))=((vt1.c0))))))) IS TRUE)  as count FROM vt1, v0 ORDER BY ((((((((((((v0.c0)AND(x'')))OR(v0.c0)))OR(v0.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(v0.c0)) COLLATE RTRIM);
SELECT ALL * FROM vt1, v0 WHERE ((((NULL))>(((((v0.c0))=((vt1.c0))))))) ORDER BY ((((((((((((v0.c0)AND(x'')))OR(v0.c0)))OR(v0.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(v0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((NULL))>(((((v0.c0))=((vt1.c0))))))) IS TRUE)  as count FROM vt1, v0 ORDER BY ((((((((((((v0.c0)AND(x'')))OR(v0.c0)))OR(v0.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(v0.c0)) COLLATE RTRIM);
SELECT ALL * FROM vt1, v0 WHERE ((((NULL))>(((((v0.c0))=((vt1.c0))))))) ORDER BY ((((((((((((v0.c0)AND(x'')))OR(v0.c0)))OR(v0.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(v0.c0)) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((rt0.c1 COLLATE RTRIM) ISNULL)) ORDER BY ((CASE 0.10343650665557647  WHEN rt0.c0 THEN rt0.c0 END)OR(((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((CASE 0.10343650665557647  WHEN rt0.c0 THEN rt0.c0 END)OR(((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((rt0.c1 COLLATE RTRIM) ISNULL)) ORDER BY ((CASE 0.10343650665557647  WHEN rt0.c0 THEN rt0.c0 END)OR(((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((CASE 0.10343650665557647  WHEN rt0.c0 THEN rt0.c0 END)OR(((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((rt0.c1 COLLATE RTRIM) ISNULL)) ORDER BY ((CASE 0.10343650665557647  WHEN rt0.c0 THEN rt0.c0 END)OR(((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))) ASC;
SELECT COUNT(*) FROM v0, rt0 WHERE (ABS(TYPEOF(rt0.c0))) ORDER BY (- ((rt0.c0 IN ())))  NULLS LAST, (~ (((rt0.c1) IS TRUE))) DESC  NULLS FIRST, ((((rt0.c2) IS FALSE))GLOB(((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(TYPEOF(rt0.c0))) IS TRUE)  as count FROM v0, rt0 ORDER BY (- ((rt0.c0 IN ())))  NULLS LAST, (~ (((rt0.c1) IS TRUE))) DESC  NULLS FIRST, ((((rt0.c2) IS FALSE))GLOB(((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ASC);
SELECT COUNT(*) FROM v0, rt0 WHERE (ABS(TYPEOF(rt0.c0))) ORDER BY (- ((rt0.c0 IN ())))  NULLS LAST, (~ (((rt0.c1) IS TRUE))) DESC  NULLS FIRST, ((((rt0.c2) IS FALSE))GLOB(((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(TYPEOF(rt0.c0))) IS TRUE)  as count FROM v0, rt0 ORDER BY (- ((rt0.c0 IN ())))  NULLS LAST, (~ (((rt0.c1) IS TRUE))) DESC  NULLS FIRST, ((((rt0.c2) IS FALSE))GLOB(((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ASC);
SELECT COUNT(*) FROM v0, rt0 WHERE (ABS(TYPEOF(rt0.c0))) ORDER BY (- ((rt0.c0 IN ())))  NULLS LAST, (~ (((rt0.c1) IS TRUE))) DESC  NULLS FIRST, ((((rt0.c2) IS FALSE))GLOB(((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (LOWER((((rt0.c0))<((rt0.c0))))) ORDER BY CASE WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN JULIANDAY(rt0.c1, rt0.c1, rt0.c0, rt0.c0, rt0.c1) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER((((rt0.c0))<((rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN JULIANDAY(rt0.c1, rt0.c1, rt0.c0, rt0.c0, rt0.c1) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (LOWER((((rt0.c0))<((rt0.c0))))) ORDER BY CASE WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN JULIANDAY(rt0.c1, rt0.c1, rt0.c0, rt0.c0, rt0.c1) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER((((rt0.c0))<((rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN JULIANDAY(rt0.c1, rt0.c1, rt0.c0, rt0.c0, rt0.c1) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (LOWER((((rt0.c0))<((rt0.c0))))) ORDER BY CASE WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN JULIANDAY(rt0.c1, rt0.c1, rt0.c0, rt0.c0, rt0.c1) END  NULLS FIRST;
SELECT ALL * FROM vt1 NOT INDEXED, rt0, v0 WHERE ((((((rt0.c0))==((vt1.c0))))<=((vt1.c0 IN (rt0.c1, rt0.c0))))) ORDER BY CAST(((((rt0.c1)AND(0x3183816)))OR(vt1.c0)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0))==((vt1.c0))))<=((vt1.c0 IN (rt0.c1, rt0.c0))))) IS TRUE)  as count FROM vt1, rt0, v0 ORDER BY CAST(((((rt0.c1)AND(0x3183816)))OR(vt1.c0)) AS REAL)  NULLS FIRST);
SELECT ALL * FROM vt1 NOT INDEXED, rt0, v0 WHERE ((((((rt0.c0))==((vt1.c0))))<=((vt1.c0 IN (rt0.c1, rt0.c0))))) ORDER BY CAST(((((rt0.c1)AND(0x3183816)))OR(vt1.c0)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0))==((vt1.c0))))<=((vt1.c0 IN (rt0.c1, rt0.c0))))) IS TRUE)  as count FROM vt1, rt0, v0 ORDER BY CAST(((((rt0.c1)AND(0x3183816)))OR(vt1.c0)) AS REAL)  NULLS FIRST);
SELECT ALL * FROM vt1 NOT INDEXED, rt0, v0 WHERE ((((((rt0.c0))==((vt1.c0))))<=((vt1.c0 IN (rt0.c1, rt0.c0))))) ORDER BY CAST(((((rt0.c1)AND(0x3183816)))OR(vt1.c0)) AS REAL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)<>(vt1.c0)) AS INTEGER)) ORDER BY 's}+OtJ';
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)!=(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY 's}+OtJ');
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)<>(vt1.c0)) AS INTEGER)) ORDER BY 's}+OtJ';
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)!=(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY 's}+OtJ');
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)<>(vt1.c0)) AS INTEGER)) ORDER BY 's}+OtJ';
SELECT * FROM v0 WHERE ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ())) ORDER BY (((v0.c0)) NOT BETWEEN ((((v0.c0)LIKE(v0.c0)))) AND ((CAST(v0.c0 AS REAL)))), ((x'')GLOB((((v0.c0, 0.9922674904732547, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ())) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN ((((v0.c0)LIKE(v0.c0)))) AND ((CAST(v0.c0 AS REAL)))), ((x'')GLOB((((v0.c0, 0.9922674904732547, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ())) ORDER BY (((v0.c0)) NOT BETWEEN ((((v0.c0)LIKE(v0.c0)))) AND ((CAST(v0.c0 AS REAL)))), ((x'')GLOB((((v0.c0, 0.9922674904732547, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ())) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN ((((v0.c0)LIKE(v0.c0)))) AND ((CAST(v0.c0 AS REAL)))), ((x'')GLOB((((v0.c0, 0.9922674904732547, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ())) ORDER BY (((v0.c0)) NOT BETWEEN ((((v0.c0)LIKE(v0.c0)))) AND ((CAST(v0.c0 AS REAL)))), ((x'')GLOB((((v0.c0, 0.9922674904732547, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY ((((((rt0.c0) NOTNULL))OR(((rt0.c2)>>(rt0.c2)))))OR((rt0.c2 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0) NOTNULL))OR(((rt0.c2)>>(rt0.c2)))))OR((rt0.c2 IN ()))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY ((((((rt0.c0) NOTNULL))OR(((rt0.c2)>>(rt0.c2)))))OR((rt0.c2 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0) NOTNULL))OR(((rt0.c2)>>(rt0.c2)))))OR((rt0.c2 IN ()))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY ((((((rt0.c0) NOTNULL))OR(((rt0.c2)>>(rt0.c2)))))OR((rt0.c2 IN ()))) ASC  NULLS LAST;
SELECT * FROM v0, vt1, rt0 WHERE ((NOT (LOWER(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((NOT (LOWER(rt0.c2)))) IS TRUE)  as count FROM v0, vt1, rt0);
SELECT * FROM v0, vt1, rt0 WHERE ((NOT (LOWER(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((NOT (LOWER(rt0.c2)))) IS TRUE)  as count FROM v0, vt1, rt0);
SELECT * FROM v0, vt1, rt0 WHERE ((NOT (LOWER(rt0.c2))));
SELECT ALL COUNT(*) FROM v0, vt1 CROSS JOIN rt0 ON STRFTIME((((0.3858498829631639, vt1.c0, rt0.c2))!=((rt0.c0, rt0.c0, x''))), 'kli俔iⶂ', (((rt0.c2))<((vt1.c0)))) WHERE (SQLITE_COMPILEOPTION_GET((rt0.c2 IN ()))) ORDER BY CHAR(((vt1.c0)*(v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET((rt0.c2 IN ()))) IS TRUE)  as count FROM v0, vt1 CROSS JOIN rt0 ON STRFTIME((((0.3858498829631639, vt1.c0, rt0.c2))<>((rt0.c0, rt0.c0, x''))), 'kli俔iⶂ', (((rt0.c2))<((vt1.c0)))) ORDER BY CHAR(((vt1.c0)*(v0.c0))) ASC);
SELECT ALL COUNT(*) FROM v0, vt1 CROSS JOIN rt0 ON STRFTIME((((0.3858498829631639, vt1.c0, rt0.c2))!=((rt0.c0, rt0.c0, x''))), 'kli俔iⶂ', (((rt0.c2))<((vt1.c0)))) WHERE (SQLITE_COMPILEOPTION_GET((rt0.c2 IN ()))) ORDER BY CHAR(((vt1.c0)*(v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET((rt0.c2 IN ()))) IS TRUE)  as count FROM v0, vt1 CROSS JOIN rt0 ON STRFTIME((((0.3858498829631639, vt1.c0, rt0.c2))<>((rt0.c0, rt0.c0, x''))), 'kli俔iⶂ', (((rt0.c2))<((vt1.c0)))) ORDER BY CHAR(((vt1.c0)*(v0.c0))) ASC);
SELECT ALL COUNT(*) FROM v0, vt1 CROSS JOIN rt0 ON STRFTIME((((0.3858498829631639, vt1.c0, rt0.c2))!=((rt0.c0, rt0.c0, x''))), 'kli俔iⶂ', (((rt0.c2))<((vt1.c0)))) WHERE (SQLITE_COMPILEOPTION_GET((rt0.c2 IN ()))) ORDER BY CHAR(((vt1.c0)*(v0.c0))) ASC;
SELECT * FROM v0, vt1 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE (v0.c0);
SELECT ALL * FROM vt1, v0, rt0 WHERE ((rt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ())) IS TRUE)  as count FROM vt1, v0, rt0);
SELECT ALL * FROM vt1, v0, rt0 WHERE ((rt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ())) IS TRUE)  as count FROM vt1, v0, rt0);
SELECT ALL * FROM vt1, v0, rt0 WHERE ((rt0.c1 IN ()));
SELECT COUNT(*) FROM v0 NATURAL JOIN vt1 WHERE (CASE WHEN ((vt1.c0) IS TRUE) THEN (((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))) WHEN ((((vt1.c0)AND(v0.c0)))OR(v0.c0)) THEN ((v0.c0) NOT BETWEEN (vt1.c0) AND (2.072695529E9)) WHEN '-424284872' THEN (NOT ('0.7846192117000522')) ELSE CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0) IS TRUE) THEN (((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))) WHEN ((((vt1.c0)AND(v0.c0)))OR(v0.c0)) THEN ((v0.c0) NOT BETWEEN (vt1.c0) AND (2.072695529E9)) WHEN '-424284872' THEN (NOT ('0.7846192117000522')) ELSE CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END END) IS TRUE)  as count FROM v0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM v0 NATURAL JOIN vt1 WHERE (CASE WHEN ((vt1.c0) IS TRUE) THEN (((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))) WHEN ((((vt1.c0)AND(v0.c0)))OR(v0.c0)) THEN ((v0.c0) NOT BETWEEN (vt1.c0) AND (2.072695529E9)) WHEN '-424284872' THEN (NOT ('0.7846192117000522')) ELSE CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0) IS TRUE) THEN (((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))) WHEN ((((vt1.c0)AND(v0.c0)))OR(v0.c0)) THEN ((v0.c0) NOT BETWEEN (vt1.c0) AND (2.072695529E9)) WHEN '-424284872' THEN (NOT ('0.7846192117000522')) ELSE CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END END) IS TRUE)  as count FROM v0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM v0 NATURAL JOIN vt1 WHERE (CASE WHEN ((vt1.c0) IS TRUE) THEN (((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))) WHEN ((((vt1.c0)AND(v0.c0)))OR(v0.c0)) THEN ((v0.c0) NOT BETWEEN (vt1.c0) AND (2.072695529E9)) WHEN '-424284872' THEN (NOT ('0.7846192117000522')) ELSE CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END END);
SELECT * FROM v0, rt0 WHERE (((((rt0.c0)<>(v0.c0)))<(((rt0.c1)%(rt0.c0))))) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<>(v0.c0)))<(((rt0.c1)%(rt0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY x''  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (((((rt0.c0)<>(v0.c0)))<(((rt0.c1)%(rt0.c0))))) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<>(v0.c0)))<(((rt0.c1)%(rt0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY x''  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (((((rt0.c0)<>(v0.c0)))<(((rt0.c1)%(rt0.c0))))) ORDER BY x''  NULLS LAST;
SELECT ALL * FROM rt0, v0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (rt0.c1);
SELECT COUNT(*) FROM rt0 WHERE ((((~ (rt0.c0))) ISNULL)) ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN '' WHEN rt0.c2 THEN 'BX,&jY%' WHEN rt0.c0 THEN rt0.c0 END) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN '' WHEN rt0.c2 THEN 'BX,&jY%' WHEN rt0.c0 THEN rt0.c0 END) NOTNULL) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((~ (rt0.c0))) ISNULL)) ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN '' WHEN rt0.c2 THEN 'BX,&jY%' WHEN rt0.c0 THEN rt0.c0 END) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN '' WHEN rt0.c2 THEN 'BX,&jY%' WHEN rt0.c0 THEN rt0.c0 END) NOTNULL) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((~ (rt0.c0))) ISNULL)) ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN '' WHEN rt0.c2 THEN 'BX,&jY%' WHEN rt0.c0 THEN rt0.c0 END) NOTNULL) DESC;
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0)AND(v0.c0)))OR(v0.c0)) IN ())) ORDER BY (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL ELSE v0.c0 END IN (((v0.c0) IS FALSE)))  NULLS LAST, ((((v0.c0) NOT NULL))>>(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)AND(v0.c0)))OR(v0.c0)) IN ())) IS TRUE)  as count FROM v0 ORDER BY (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL ELSE v0.c0 END IN (((v0.c0) IS FALSE)))  NULLS LAST, ((((v0.c0) NOT NULL))>>(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0)AND(v0.c0)))OR(v0.c0)) IN ())) ORDER BY (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL ELSE v0.c0 END IN (((v0.c0) IS FALSE)))  NULLS LAST, ((((v0.c0) NOT NULL))>>(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)AND(v0.c0)))OR(v0.c0)) IN ())) IS TRUE)  as count FROM v0 ORDER BY (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL ELSE v0.c0 END IN (((v0.c0) IS FALSE)))  NULLS LAST, ((((v0.c0) NOT NULL))>>(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0)AND(v0.c0)))OR(v0.c0)) IN ())) ORDER BY (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL ELSE v0.c0 END IN (((v0.c0) IS FALSE)))  NULLS LAST, ((((v0.c0) NOT NULL))>>(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, rt0, v0 WHERE (((((rt0.c1 COLLATE RTRIM)OR(((vt1.c0)LIKE(rt0.c0)))))OR((((vt1.c0, rt0.c2, rt0.c1))>((305516691, 0.11613254678531493, v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1 COLLATE RTRIM)OR(((vt1.c0)LIKE(rt0.c0)))))OR((((vt1.c0, rt0.c2, rt0.c1))>((305516691, 0.11613254678531493, v0.c0)))))) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT COUNT(*) FROM vt1, rt0, v0 WHERE (((((rt0.c1 COLLATE RTRIM)OR(((vt1.c0)LIKE(rt0.c0)))))OR((((vt1.c0, rt0.c2, rt0.c1))>((305516691, 0.11613254678531493, v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1 COLLATE RTRIM)OR(((vt1.c0)LIKE(rt0.c0)))))OR((((vt1.c0, rt0.c2, rt0.c1))>((305516691, 0.11613254678531493, v0.c0)))))) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT COUNT(*) FROM vt1, rt0, v0 WHERE (((((rt0.c1 COLLATE RTRIM)OR(((vt1.c0)LIKE(rt0.c0)))))OR((((vt1.c0, rt0.c2, rt0.c1))>((305516691, 0.11613254678531493, v0.c0))))));
SELECT * FROM vt1, rt0 WHERE (0.6192694091379148) ORDER BY (((((rt0.c2)-(rt0.c1))))<=(('10578980'))), ((JULIANDAY(rt0.c2, vt1.c0, rt0.c0)) BETWEEN (((vt1.c0)<(rt0.c1))) AND (CAST(rt0.c1 AS BLOB)))  NULLS LAST, ((rt0.c2 COLLATE BINARY) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.6192694091379148) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((rt0.c2)-(rt0.c1))))<=(('10578980'))), ((JULIANDAY(rt0.c2, vt1.c0, rt0.c0)) BETWEEN (((vt1.c0)<(rt0.c1))) AND (CAST(rt0.c1 AS BLOB)))  NULLS LAST, ((rt0.c2 COLLATE BINARY) NOT NULL) ASC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (0.6192694091379148) ORDER BY (((((rt0.c2)-(rt0.c1))))<=(('10578980'))), ((JULIANDAY(rt0.c2, vt1.c0, rt0.c0)) BETWEEN (((vt1.c0)<(rt0.c1))) AND (CAST(rt0.c1 AS BLOB)))  NULLS LAST, ((rt0.c2 COLLATE BINARY) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.6192694091379148) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((rt0.c2)-(rt0.c1))))<=(('10578980'))), ((JULIANDAY(rt0.c2, vt1.c0, rt0.c0)) BETWEEN (((vt1.c0)<(rt0.c1))) AND (CAST(rt0.c1 AS BLOB)))  NULLS LAST, ((rt0.c2 COLLATE BINARY) NOT NULL) ASC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (0.6192694091379148) ORDER BY (((((rt0.c2)-(rt0.c1))))<=(('10578980'))), ((JULIANDAY(rt0.c2, vt1.c0, rt0.c0)) BETWEEN (((vt1.c0)<(rt0.c1))) AND (CAST(rt0.c1 AS BLOB)))  NULLS LAST, ((rt0.c2 COLLATE BINARY) NOT NULL) ASC  NULLS LAST;
SELECT * FROM vt1 FULL OUTER JOIN v0 ON CAST(CAST(rt0.c2 AS NUMERIC) AS INTEGER) INNER JOIN rt0 ON (NOT ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0))))) WHERE ((+ (CASE rt0.c1  WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END))) ORDER BY ((rt0.c1)IS(rt0.c1)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (CASE rt0.c1  WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN v0 ON CAST(CAST(rt0.c2 AS NUMERIC) AS INTEGER) INNER JOIN rt0 ON (NOT ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0))))) ORDER BY ((rt0.c1)IS(rt0.c1)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT * FROM vt1 FULL OUTER JOIN v0 ON CAST(CAST(rt0.c2 AS NUMERIC) AS INTEGER) INNER JOIN rt0 ON (NOT ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0))))) WHERE ((+ (CASE rt0.c1  WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END))) ORDER BY ((rt0.c1)IS(rt0.c1)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (CASE rt0.c1  WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN v0 ON CAST(CAST(rt0.c2 AS NUMERIC) AS INTEGER) INNER JOIN rt0 ON (NOT ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0))))) ORDER BY ((rt0.c1)IS(rt0.c1)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL * FROM rt0, v0 INNER JOIN vt1 ON ((((v0.c0)IS(v0.c0))) NOT NULL) WHERE ('-244166906');
SELECT SUM(count) FROM (SELECT (('-244166906') IS TRUE)  as count FROM rt0, v0 INNER JOIN vt1 ON ((((v0.c0)IS(v0.c0))) NOT NULL));
SELECT ALL * FROM rt0, v0 INNER JOIN vt1 ON ((((v0.c0)IS(v0.c0))) NOT NULL) WHERE ('-244166906');
SELECT SUM(count) FROM (SELECT (('-244166906') IS TRUE)  as count FROM rt0, v0 INNER JOIN vt1 ON ((((v0.c0)IS(v0.c0))) NOT NULL));
SELECT ALL * FROM rt0, v0 INNER JOIN vt1 ON ((((v0.c0)IS(v0.c0))) NOT NULL) WHERE ('-244166906');
SELECT * FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE BINARY) ORDER BY ((rt0.c1)<>(((rt0.c0)||(rt0.c2)))), CAST((rt0.c0 IN ()) AS TEXT);
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)!=(((rt0.c0)||(rt0.c2)))), CAST((rt0.c0 IN ()) AS TEXT));
SELECT * FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE BINARY) ORDER BY ((rt0.c1)<>(((rt0.c0)||(rt0.c2)))), CAST((rt0.c0 IN ()) AS TEXT);
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)!=(((rt0.c0)||(rt0.c2)))), CAST((rt0.c0 IN ()) AS TEXT));
SELECT * FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE BINARY) ORDER BY ((rt0.c1)<>(((rt0.c0)||(rt0.c2)))), CAST((rt0.c0 IN ()) AS TEXT);
SELECT * FROM rt0 WHERE (((rt0.c0) ISNULL)) ORDER BY ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE BINARY, CAST((+ (rt0.c1)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE BINARY, CAST((+ (rt0.c1)) AS REAL)  NULLS LAST);
SELECT * FROM rt0 WHERE (((rt0.c0) ISNULL)) ORDER BY ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE BINARY, CAST((+ (rt0.c1)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE BINARY, CAST((+ (rt0.c1)) AS REAL)  NULLS LAST);
SELECT * FROM rt0 WHERE (((rt0.c0) ISNULL)) ORDER BY ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE BINARY, CAST((+ (rt0.c1)) AS REAL)  NULLS LAST;
SELECT ALL * FROM v0 WHERE (((LTRIM(v0.c0))-('-1855676005'))) ORDER BY (((((((('')AND(((((v0.c0)AND(v0.c0)))OR(v0.c0)))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN '-1439458574' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR(((v0.c0)|(v0.c0)))) ASC  NULLS FIRST, ((((v0.c0) IS TRUE)) IS TRUE) DESC, v0.c0;
SELECT SUM(count) FROM (SELECT ((((LTRIM(v0.c0))-('-1855676005'))) IS TRUE)  as count FROM v0 ORDER BY (((((((('')AND(((((v0.c0)AND(v0.c0)))OR(v0.c0)))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN '-1439458574' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR(((v0.c0)|(v0.c0)))) ASC  NULLS FIRST, ((((v0.c0) IS TRUE)) IS TRUE) DESC, v0.c0);
SELECT ALL * FROM v0 WHERE (((LTRIM(v0.c0))-('-1855676005'))) ORDER BY (((((((('')AND(((((v0.c0)AND(v0.c0)))OR(v0.c0)))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN '-1439458574' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR(((v0.c0)|(v0.c0)))) ASC  NULLS FIRST, ((((v0.c0) IS TRUE)) IS TRUE) DESC, v0.c0;
SELECT SUM(count) FROM (SELECT ((((LTRIM(v0.c0))-('-1855676005'))) IS TRUE)  as count FROM v0 ORDER BY (((((((('')AND(((((v0.c0)AND(v0.c0)))OR(v0.c0)))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN '-1439458574' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR(((v0.c0)|(v0.c0)))) ASC  NULLS FIRST, ((((v0.c0) IS TRUE)) IS TRUE) DESC, v0.c0);
SELECT ALL * FROM v0 WHERE (((LTRIM(v0.c0))-('-1855676005'))) ORDER BY (((((((('')AND(((((v0.c0)AND(v0.c0)))OR(v0.c0)))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN '-1439458574' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR(((v0.c0)|(v0.c0)))) ASC  NULLS FIRST, ((((v0.c0) IS TRUE)) IS TRUE) DESC, v0.c0;
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (CASE WHEN 0.0010854733414192852 THEN ((v0.c0)/(v0.c0)) WHEN (v0.c0 IN (NULL, v0.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END WHEN (((vt1.c0))>=((vt1.c0))) THEN (NOT (v0.c0)) ELSE (+ (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.0010854733414192852 THEN ((v0.c0)/(v0.c0)) WHEN (v0.c0 IN (NULL, v0.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END WHEN (((vt1.c0))>=((vt1.c0))) THEN (NOT (v0.c0)) ELSE (+ (vt1.c0)) END) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (CASE WHEN 0.0010854733414192852 THEN ((v0.c0)/(v0.c0)) WHEN (v0.c0 IN (NULL, v0.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END WHEN (((vt1.c0))>=((vt1.c0))) THEN (NOT (v0.c0)) ELSE (+ (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.0010854733414192852 THEN ((v0.c0)/(v0.c0)) WHEN (v0.c0 IN (NULL, v0.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END WHEN (((vt1.c0))>=((vt1.c0))) THEN (NOT (v0.c0)) ELSE (+ (vt1.c0)) END) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (CASE WHEN 0.0010854733414192852 THEN ((v0.c0)/(v0.c0)) WHEN (v0.c0 IN (NULL, v0.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END WHEN (((vt1.c0))>=((vt1.c0))) THEN (NOT (v0.c0)) ELSE (+ (vt1.c0)) END);
SELECT ALL COUNT(*) FROM v0, vt1, rt0 WHERE (((rt0.c0 COLLATE BINARY) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND (rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND (rt0.c2))) IS TRUE)  as count FROM v0, vt1, rt0);
SELECT ALL COUNT(*) FROM v0, vt1, rt0 WHERE (((rt0.c0 COLLATE BINARY) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND (rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND (rt0.c2))) IS TRUE)  as count FROM v0, vt1, rt0);
SELECT ALL COUNT(*) FROM v0, vt1, rt0 WHERE (((rt0.c0 COLLATE BINARY) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND (rt0.c2)));
SELECT ALL * FROM v0, rt0, vt1 WHERE (CASE WHEN (vt1.c0 IN ()) THEN vt1.c0 COLLATE NOCASE ELSE (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt1.c0 IN ()) THEN vt1.c0 COLLATE NOCASE ELSE (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) END) IS TRUE)  as count FROM v0, rt0, vt1);
SELECT ALL * FROM v0, rt0, vt1 WHERE (CASE WHEN (vt1.c0 IN ()) THEN vt1.c0 COLLATE NOCASE ELSE (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt1.c0 IN ()) THEN vt1.c0 COLLATE NOCASE ELSE (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) END) IS TRUE)  as count FROM v0, rt0, vt1);
SELECT ALL * FROM v0, rt0, vt1 WHERE (CASE WHEN (vt1.c0 IN ()) THEN vt1.c0 COLLATE NOCASE ELSE (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) END);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY '1967975617';
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY '1967975617');
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY '1967975617';
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY '1967975617');
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY '1967975617';
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 COLLATE BINARY, ((rt0.c0)*(5.9559282E8)), CASE rt0.c2  WHEN rt0.c2 THEN NULL END, json(rt0.c0), ((rt0.c1)*(rt0.c2))))!=((rt0.c0, LIKELY(DISTINCT rt0.c1), COALESCE(DISTINCT rt0.c1, rt0.c0), rt0.c2, TRIM(DISTINCT rt0.c1, rt0.c2))))) ORDER BY ((((rt0.c0) NOT NULL)) NOTNULL), ((rt0.c2)<<(rt0.c2 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 COLLATE BINARY, ((rt0.c0)*(5.9559282E8)), CASE rt0.c2  WHEN rt0.c2 THEN NULL END, json(rt0.c0), ((rt0.c1)*(rt0.c2))))!=((rt0.c0, LIKELY(DISTINCT rt0.c1), COALESCE(DISTINCT rt0.c1, rt0.c0), rt0.c2, TRIM(DISTINCT rt0.c1, rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT NULL)) NOTNULL), ((rt0.c2)<<(rt0.c2 COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 COLLATE BINARY, ((rt0.c0)*(5.9559282E8)), CASE rt0.c2  WHEN rt0.c2 THEN NULL END, json(rt0.c0), ((rt0.c1)*(rt0.c2))))!=((rt0.c0, LIKELY(DISTINCT rt0.c1), COALESCE(DISTINCT rt0.c1, rt0.c0), rt0.c2, TRIM(DISTINCT rt0.c1, rt0.c2))))) ORDER BY ((((rt0.c0) NOT NULL)) NOTNULL), ((rt0.c2)<<(rt0.c2 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 COLLATE BINARY, ((rt0.c0)*(5.9559282E8)), CASE rt0.c2  WHEN rt0.c2 THEN NULL END, json(rt0.c0), ((rt0.c1)*(rt0.c2))))!=((rt0.c0, LIKELY(DISTINCT rt0.c1), COALESCE(DISTINCT rt0.c1, rt0.c0), rt0.c2, TRIM(DISTINCT rt0.c1, rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT NULL)) NOTNULL), ((rt0.c2)<<(rt0.c2 COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 COLLATE BINARY, ((rt0.c0)*(5.9559282E8)), CASE rt0.c2  WHEN rt0.c2 THEN NULL END, json(rt0.c0), ((rt0.c1)*(rt0.c2))))!=((rt0.c0, LIKELY(DISTINCT rt0.c1), COALESCE(DISTINCT rt0.c1, rt0.c0), rt0.c2, TRIM(DISTINCT rt0.c1, rt0.c2))))) ORDER BY ((((rt0.c0) NOT NULL)) NOTNULL), ((rt0.c2)<<(rt0.c2 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT * FROM v0 WHERE (CASE QUOTE(v0.c0)  WHEN (v0.c0 IN ()) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((x''))) ELSE ABS(DISTINCT v0.c0) END) ORDER BY ((v0.c0 IN (v0.c0, v0.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE QUOTE(v0.c0)  WHEN (v0.c0 IN ()) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((x''))) ELSE ABS(DISTINCT v0.c0) END) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 IN (v0.c0, v0.c0)) IN ()) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (CASE QUOTE(v0.c0)  WHEN (v0.c0 IN ()) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((x''))) ELSE ABS(DISTINCT v0.c0) END) ORDER BY ((v0.c0 IN (v0.c0, v0.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE QUOTE(v0.c0)  WHEN (v0.c0 IN ()) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((x''))) ELSE ABS(DISTINCT v0.c0) END) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 IN (v0.c0, v0.c0)) IN ()) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (CASE QUOTE(v0.c0)  WHEN (v0.c0 IN ()) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((x''))) ELSE ABS(DISTINCT v0.c0) END) ORDER BY ((v0.c0 IN (v0.c0, v0.c0)) IN ()) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c2) AND (0X54f31908)) COLLATE NOCASE) ORDER BY CASE ((rt0.c0)*(rt0.c1))  WHEN ((rt0.c2) NOT NULL) THEN ((((0.24277374476567803)OR(rt0.c1)))AND(rt0.c1)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (0X54f31908)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c0)*(rt0.c1))  WHEN ((rt0.c2) NOT NULL) THEN ((((0.24277374476567803)OR(rt0.c1)))AND(rt0.c1)) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c2) AND (0X54f31908)) COLLATE NOCASE) ORDER BY CASE ((rt0.c0)*(rt0.c1))  WHEN ((rt0.c2) NOT NULL) THEN ((((0.24277374476567803)OR(rt0.c1)))AND(rt0.c1)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (0X54f31908)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c0)*(rt0.c1))  WHEN ((rt0.c2) NOT NULL) THEN ((((0.24277374476567803)OR(rt0.c1)))AND(rt0.c1)) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c2) AND (0X54f31908)) COLLATE NOCASE) ORDER BY CASE ((rt0.c0)*(rt0.c1))  WHEN ((rt0.c2) NOT NULL) THEN ((((0.24277374476567803)OR(rt0.c1)))AND(rt0.c1)) END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT * FROM vt1, rt0 WHERE (CASE NULL  WHEN (((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, 0.29219248722784674, 0.11613254678531493)) AND ((vt1.c0, vt1.c0, rt0.c2))) THEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c0 WHEN ((rt0.c1)+(0.6529229937841138)) THEN CASE WHEN rt0.c0 THEN rt0.c1 END ELSE CAST(rt0.c2 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN (((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, 0.29219248722784674, 0.11613254678531493)) AND ((vt1.c0, vt1.c0, rt0.c2))) THEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c0 WHEN ((rt0.c1)+(0.6529229937841138)) THEN CASE WHEN rt0.c0 THEN rt0.c1 END ELSE CAST(rt0.c2 AS NUMERIC) END) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (CASE NULL  WHEN (((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, 0.29219248722784674, 0.11613254678531493)) AND ((vt1.c0, vt1.c0, rt0.c2))) THEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c0 WHEN ((rt0.c1)+(0.6529229937841138)) THEN CASE WHEN rt0.c0 THEN rt0.c1 END ELSE CAST(rt0.c2 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN (((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, 0.29219248722784674, 0.11613254678531493)) AND ((vt1.c0, vt1.c0, rt0.c2))) THEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c0 WHEN ((rt0.c1)+(0.6529229937841138)) THEN CASE WHEN rt0.c0 THEN rt0.c1 END ELSE CAST(rt0.c2 AS NUMERIC) END) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (CASE NULL  WHEN (((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, 0.29219248722784674, 0.11613254678531493)) AND ((vt1.c0, vt1.c0, rt0.c2))) THEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c0 WHEN ((rt0.c1)+(0.6529229937841138)) THEN CASE WHEN rt0.c0 THEN rt0.c1 END ELSE CAST(rt0.c2 AS NUMERIC) END);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN v0 ON (v0.c0 COLLATE NOCASE IN (((((0.9228184094530663)AND(vt1.c0)))OR(vt1.c0)), json_array_length(vt1.c0, 0.9113836736517087), RTRIM(vt1.c0))) WHERE (((json_quote(vt1.c0))==(CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((json_quote(vt1.c0))==(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN v0 ON (v0.c0 COLLATE NOCASE IN (((((0.9228184094530663)AND(vt1.c0)))OR(vt1.c0)), json_array_length(vt1.c0, 0.9113836736517087), RTRIM(vt1.c0))));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN v0 ON (v0.c0 COLLATE NOCASE IN (((((0.9228184094530663)AND(vt1.c0)))OR(vt1.c0)), json_array_length(vt1.c0, 0.9113836736517087), RTRIM(vt1.c0))) WHERE (((json_quote(vt1.c0))==(CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((json_quote(vt1.c0))==(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN v0 ON (v0.c0 COLLATE NOCASE IN (((((0.9228184094530663)AND(vt1.c0)))OR(vt1.c0)), json_array_length(vt1.c0, 0.9113836736517087), RTRIM(vt1.c0))));
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON (((((((rt0.c1)AND(vt1.c0)))AND(rt0.c1))))>((((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0))))) INNER JOIN vt1 ON (((((~ (v0.c0)))OR(((NULL)==(v0.c0)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c0 THEN vt1.c0 WHEN v0.c0 THEN rt0.c1 ELSE v0.c0 END)) WHERE (((LOWER(rt0.c0)) IS TRUE)) ORDER BY (((v0.c0 IN (rt0.c2, rt0.c0)))LIKE(((vt1.c0) NOT BETWEEN (NULL) AND (v0.c0)))) ASC  NULLS LAST, (((rt0.c2 IN (rt0.c2, rt0.c1))) BETWEEN ((- (rt0.c2))) AND ((v0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(rt0.c0)) IS TRUE)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((((((rt0.c1)AND(vt1.c0)))AND(rt0.c1))))>((((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0))))) INNER JOIN vt1 ON (((((~ (v0.c0)))OR(((NULL)=(v0.c0)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c0 THEN vt1.c0 WHEN v0.c0 THEN rt0.c1 ELSE v0.c0 END)) ORDER BY (((v0.c0 IN (rt0.c2, rt0.c0)))LIKE(((vt1.c0) NOT BETWEEN (NULL) AND (v0.c0)))) ASC  NULLS LAST, (((rt0.c2 IN (rt0.c2, rt0.c1))) BETWEEN ((- (rt0.c2))) AND ((v0.c0 IN ()))) DESC);
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON (((((((rt0.c1)AND(vt1.c0)))AND(rt0.c1))))>((((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0))))) INNER JOIN vt1 ON (((((~ (v0.c0)))OR(((NULL)==(v0.c0)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c0 THEN vt1.c0 WHEN v0.c0 THEN rt0.c1 ELSE v0.c0 END)) WHERE (((LOWER(rt0.c0)) IS TRUE)) ORDER BY (((v0.c0 IN (rt0.c2, rt0.c0)))LIKE(((vt1.c0) NOT BETWEEN (NULL) AND (v0.c0)))) ASC  NULLS LAST, (((rt0.c2 IN (rt0.c2, rt0.c1))) BETWEEN ((- (rt0.c2))) AND ((v0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(rt0.c0)) IS TRUE)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((((((rt0.c1)AND(vt1.c0)))AND(rt0.c1))))>((((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0))))) INNER JOIN vt1 ON (((((~ (v0.c0)))OR(((NULL)=(v0.c0)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c0 THEN vt1.c0 WHEN v0.c0 THEN rt0.c1 ELSE v0.c0 END)) ORDER BY (((v0.c0 IN (rt0.c2, rt0.c0)))LIKE(((vt1.c0) NOT BETWEEN (NULL) AND (v0.c0)))) ASC  NULLS LAST, (((rt0.c2 IN (rt0.c2, rt0.c1))) BETWEEN ((- (rt0.c2))) AND ((v0.c0 IN ()))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((- (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c2))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((- (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c2))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((- (rt0.c2)));
SELECT * FROM rt0 WHERE (((rt0.c0 IN ()) IN ())) ORDER BY ((((x'')OR(rt0.c0)))AND(rt0.c2)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 IN ()) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((x'')OR(rt0.c0)))AND(rt0.c2)) COLLATE RTRIM);
SELECT * FROM rt0 WHERE (((rt0.c0 IN ()) IN ())) ORDER BY ((((x'')OR(rt0.c0)))AND(rt0.c2)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 IN ()) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((x'')OR(rt0.c0)))AND(rt0.c2)) COLLATE RTRIM);
SELECT * FROM rt0 WHERE (((rt0.c0 IN ()) IN ())) ORDER BY ((((x'')OR(rt0.c0)))AND(rt0.c2)) COLLATE RTRIM;
SELECT ALL * FROM rt0, v0, vt1 WHERE ((~ (((rt0.c1)OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c1)OR(rt0.c0))))) IS TRUE)  as count FROM rt0, v0, vt1);
SELECT ALL * FROM rt0, v0, vt1 WHERE ((~ (((rt0.c1)OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c1)OR(rt0.c0))))) IS TRUE)  as count FROM rt0, v0, vt1);
SELECT ALL * FROM rt0, v0, vt1 WHERE ((~ (((rt0.c1)OR(rt0.c0)))));
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON (((((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) NOT BETWEEN (highlight(rt0.c0, rt0.c2, rt0.c0, v0.c0)) AND (((rt0.c0)IS NOT(rt0.c1)))) WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (((((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) NOT BETWEEN (highlight(rt0.c0, rt0.c2, rt0.c0, v0.c0)) AND (((rt0.c0)IS NOT(rt0.c1)))));
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON (((((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) NOT BETWEEN (highlight(rt0.c0, rt0.c2, rt0.c0, v0.c0)) AND (((rt0.c0)IS NOT(rt0.c1)))) WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (((((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) NOT BETWEEN (highlight(rt0.c0, rt0.c2, rt0.c0, v0.c0)) AND (((rt0.c0)IS NOT(rt0.c1)))));
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON (((((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) NOT BETWEEN (highlight(rt0.c0, rt0.c2, rt0.c0, v0.c0)) AND (((rt0.c0)IS NOT(rt0.c1)))) WHERE ((NULL IN ()));
SELECT ALL COUNT(*) FROM rt0, v0, vt1 WHERE (CAST(((((rt0.c1)OR(v0.c0)))OR(vt1.c0)) AS INTEGER)) ORDER BY ((json_insert(rt0.c0, vt1.c0, x'')) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (365327812))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c1)OR(v0.c0)))OR(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY ((json_insert(rt0.c0, vt1.c0, x'')) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (365327812))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0, vt1 WHERE (CAST(((((rt0.c1)OR(v0.c0)))OR(vt1.c0)) AS INTEGER)) ORDER BY ((json_insert(rt0.c0, vt1.c0, x'')) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (365327812))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c1)OR(v0.c0)))OR(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY ((json_insert(rt0.c0, vt1.c0, x'')) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (365327812))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0, vt1 WHERE (CAST(((((rt0.c1)OR(v0.c0)))OR(vt1.c0)) AS INTEGER)) ORDER BY ((json_insert(rt0.c0, vt1.c0, x'')) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (365327812))  NULLS FIRST;
SELECT * FROM v0 CROSS JOIN vt1 ON (rt0.c2 COLLATE NOCASE IN ()) CROSS JOIN rt0 ON ((vt1.c0) BETWEEN (((((((((0.7598377614454251)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND('1808273745'))) AND (((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)))) WHERE (((((rt0.c0)%(v0.c0)))AND(((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)%(v0.c0)))AND(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0 CROSS JOIN vt1 ON (rt0.c2 COLLATE NOCASE IN ()) CROSS JOIN rt0 ON ((vt1.c0) BETWEEN (((((((((0.7598377614454251)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND('1808273745'))) AND (((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)))));
SELECT * FROM v0 CROSS JOIN vt1 ON (rt0.c2 COLLATE NOCASE IN ()) CROSS JOIN rt0 ON ((vt1.c0) BETWEEN (((((((((0.7598377614454251)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND('1808273745'))) AND (((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)))) WHERE (((((rt0.c0)%(v0.c0)))AND(((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)%(v0.c0)))AND(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0 CROSS JOIN vt1 ON (rt0.c2 COLLATE NOCASE IN ()) CROSS JOIN rt0 ON ((vt1.c0) BETWEEN (((((((((0.7598377614454251)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND('1808273745'))) AND (((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)))));
SELECT * FROM v0 CROSS JOIN vt1 ON (rt0.c2 COLLATE NOCASE IN ()) CROSS JOIN rt0 ON ((vt1.c0) BETWEEN (((((((((0.7598377614454251)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND('1808273745'))) AND (((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)))) WHERE (((((rt0.c0)%(v0.c0)))AND(((v0.c0) IS TRUE))));
SELECT * FROM v0, rt0, vt1 WHERE ((((rt0.c1 IN ()))*((((0.37830122674848576, rt0.c1, NULL))<>((vt1.c0, vt1.c0, NULL)))))) ORDER BY (((vt1.c0 IN ()))==(x'feb7625b')) ASC  NULLS LAST, ((((((rt0.c0)/(0.368769399801536)))AND(((v0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1)))))AND(v0.c0)) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))*((((0.37830122674848576, rt0.c1, NULL))<>((vt1.c0, vt1.c0, NULL)))))) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY (((vt1.c0 IN ()))=(x'feb7625b')) ASC  NULLS LAST, ((((((rt0.c0)/(0.368769399801536)))AND(((v0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1)))))AND(v0.c0)) DESC);
SELECT * FROM v0, rt0, vt1 WHERE ((((rt0.c1 IN ()))*((((0.37830122674848576, rt0.c1, NULL))<>((vt1.c0, vt1.c0, NULL)))))) ORDER BY (((vt1.c0 IN ()))==(x'feb7625b')) ASC  NULLS LAST, ((((((rt0.c0)/(0.368769399801536)))AND(((v0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1)))))AND(v0.c0)) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))*((((0.37830122674848576, rt0.c1, NULL))<>((vt1.c0, vt1.c0, NULL)))))) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY (((vt1.c0 IN ()))=(x'feb7625b')) ASC  NULLS LAST, ((((((rt0.c0)/(0.368769399801536)))AND(((v0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1)))))AND(v0.c0)) DESC);
SELECT * FROM v0, rt0, vt1 WHERE ((((rt0.c1 IN ()))*((((0.37830122674848576, rt0.c1, NULL))<>((vt1.c0, vt1.c0, NULL)))))) ORDER BY (((vt1.c0 IN ()))==(x'feb7625b')) ASC  NULLS LAST, ((((((rt0.c0)/(0.368769399801536)))AND(((v0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1)))))AND(v0.c0)) DESC;
SELECT COUNT(*) FROM v0, vt1, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt1, rt0);
SELECT COUNT(*) FROM v0, vt1, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt1, rt0);
SELECT COUNT(*) FROM v0, vt1, rt0 WHERE (NULL);
SELECT * FROM v0, vt1 WHERE ((- (CASE v0.c0  WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) ORDER BY ((v0.c0 COLLATE RTRIM) IS TRUE);
SELECT SUM(count) FROM (SELECT (((- (CASE v0.c0  WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0, vt1 ORDER BY ((v0.c0 COLLATE RTRIM) IS TRUE));
SELECT * FROM v0, vt1 WHERE ((- (CASE v0.c0  WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) ORDER BY ((v0.c0 COLLATE RTRIM) IS TRUE);
SELECT SUM(count) FROM (SELECT (((- (CASE v0.c0  WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0, vt1 ORDER BY ((v0.c0 COLLATE RTRIM) IS TRUE));
SELECT * FROM v0, vt1 WHERE ((- (CASE v0.c0  WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) ORDER BY ((v0.c0 COLLATE RTRIM) IS TRUE);
SELECT * FROM vt1, rt0 WHERE (COALESCE(x'', (NOT (NULL)))) ORDER BY (~ ((- (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(x'', (NOT (NULL)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (~ ((- (rt0.c1)))));
SELECT * FROM vt1, rt0 WHERE (COALESCE(x'', (NOT (NULL)))) ORDER BY (~ ((- (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(x'', (NOT (NULL)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (~ ((- (rt0.c1)))));
SELECT * FROM vt1, rt0 WHERE (COALESCE(x'', (NOT (NULL)))) ORDER BY (~ ((- (rt0.c1))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c1);
SELECT ALL * FROM vt1, v0 WHERE (((TYPEOF(DISTINCT v0.c0)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(DISTINCT v0.c0)) ISNULL)) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE (((TYPEOF(DISTINCT v0.c0)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(DISTINCT v0.c0)) ISNULL)) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE (((TYPEOF(DISTINCT v0.c0)) ISNULL));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c2) NOTNULL))/((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOTNULL))/((NOT (rt0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c2) NOTNULL))/((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOTNULL))/((NOT (rt0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c2) NOTNULL))/((NOT (rt0.c0)))));
SELECT * FROM rt0, vt1 FULL OUTER JOIN v0 ON (rt0.c2 IN ()) WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c2) AND ('/{')), rt0.c0, CASE vt1.c0  WHEN v0.c0 THEN rt0.c0 END))>=((vt1.c0 COLLATE RTRIM, ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))OR(vt1.c0)))OR(rt0.c0)), (rt0.c1 IN ()))))) ORDER BY (~ (((rt0.c1)-(rt0.c2)))) DESC, ((((((((v0.c0 COLLATE BINARY)AND(CASE rt0.c0  WHEN rt0.c0 THEN v0.c0 ELSE NULL END)))AND(((((rt0.c1)AND(v0.c0)))AND(vt1.c0)))))AND(vt1.c0)))OR(CASE rt0.c2  WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END)) ASC, ((('Vd'))==((v0.c0))) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) NOT BETWEEN (rt0.c2) AND ('/{')), rt0.c0, CASE vt1.c0  WHEN v0.c0 THEN rt0.c0 END))>=((vt1.c0 COLLATE RTRIM, ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))OR(vt1.c0)))OR(rt0.c0)), (rt0.c1 IN ()))))) IS TRUE)  as count FROM rt0, vt1 FULL OUTER JOIN v0 ON (rt0.c2 IN ()) ORDER BY (~ (((rt0.c1)-(rt0.c2)))) DESC, ((((((((v0.c0 COLLATE BINARY)AND(CASE rt0.c0  WHEN rt0.c0 THEN v0.c0 ELSE NULL END)))AND(((((rt0.c1)AND(v0.c0)))AND(vt1.c0)))))AND(vt1.c0)))OR(CASE rt0.c2  WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END)) ASC, ((('Vd'))==((v0.c0))) COLLATE BINARY DESC  NULLS LAST);
SELECT * FROM rt0, vt1 FULL OUTER JOIN v0 ON (rt0.c2 IN ()) WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c2) AND ('/{')), rt0.c0, CASE vt1.c0  WHEN v0.c0 THEN rt0.c0 END))>=((vt1.c0 COLLATE RTRIM, ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))OR(vt1.c0)))OR(rt0.c0)), (rt0.c1 IN ()))))) ORDER BY (~ (((rt0.c1)-(rt0.c2)))) DESC, ((((((((v0.c0 COLLATE BINARY)AND(CASE rt0.c0  WHEN rt0.c0 THEN v0.c0 ELSE NULL END)))AND(((((rt0.c1)AND(v0.c0)))AND(vt1.c0)))))AND(vt1.c0)))OR(CASE rt0.c2  WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END)) ASC, ((('Vd'))==((v0.c0))) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) NOT BETWEEN (rt0.c2) AND ('/{')), rt0.c0, CASE vt1.c0  WHEN v0.c0 THEN rt0.c0 END))>=((vt1.c0 COLLATE RTRIM, ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))OR(vt1.c0)))OR(rt0.c0)), (rt0.c1 IN ()))))) IS TRUE)  as count FROM rt0, vt1 FULL OUTER JOIN v0 ON (rt0.c2 IN ()) ORDER BY (~ (((rt0.c1)-(rt0.c2)))) DESC, ((((((((v0.c0 COLLATE BINARY)AND(CASE rt0.c0  WHEN rt0.c0 THEN v0.c0 ELSE NULL END)))AND(((((rt0.c1)AND(v0.c0)))AND(vt1.c0)))))AND(vt1.c0)))OR(CASE rt0.c2  WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END)) ASC, ((('Vd'))==((v0.c0))) COLLATE BINARY DESC  NULLS LAST);
SELECT * FROM rt0, vt1 FULL OUTER JOIN v0 ON (rt0.c2 IN ()) WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c2) AND ('/{')), rt0.c0, CASE vt1.c0  WHEN v0.c0 THEN rt0.c0 END))>=((vt1.c0 COLLATE RTRIM, ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))OR(vt1.c0)))OR(rt0.c0)), (rt0.c1 IN ()))))) ORDER BY (~ (((rt0.c1)-(rt0.c2)))) DESC, ((((((((v0.c0 COLLATE BINARY)AND(CASE rt0.c0  WHEN rt0.c0 THEN v0.c0 ELSE NULL END)))AND(((((rt0.c1)AND(v0.c0)))AND(vt1.c0)))))AND(vt1.c0)))OR(CASE rt0.c2  WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END)) ASC, ((('Vd'))==((v0.c0))) COLLATE BINARY DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (LIKELY(DISTINCT ((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (LIKELY(DISTINCT ((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (LIKELY(DISTINCT ((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT ALL * FROM rt0, v0 WHERE (((('1776460323')OR(rt0.c2)) IN (CASE v0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE v0.c0 END))) ORDER BY '-795428706' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((('1776460323')OR(rt0.c2)) IN (CASE v0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE v0.c0 END))) IS TRUE)  as count FROM rt0, v0 ORDER BY '-795428706' DESC);
SELECT ALL * FROM rt0, v0 WHERE (((('1776460323')OR(rt0.c2)) IN (CASE v0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE v0.c0 END))) ORDER BY '-795428706' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((('1776460323')OR(rt0.c2)) IN (CASE v0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE v0.c0 END))) IS TRUE)  as count FROM rt0, v0 ORDER BY '-795428706' DESC);
SELECT ALL * FROM rt0, v0 WHERE (((('1776460323')OR(rt0.c2)) IN (CASE v0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE v0.c0 END))) ORDER BY '-795428706' DESC;
SELECT ALL * FROM rt0, v0 INNER JOIN vt1 ON (- (1740812695)) WHERE (((((rt0.c2) IS TRUE))*(((rt0.c2)IS NOT(rt0.c2))))) ORDER BY json_quote(vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS TRUE))*(((rt0.c2)IS NOT(rt0.c2))))) IS TRUE)  as count FROM rt0, v0 INNER JOIN vt1 ON (- (1740812695)) ORDER BY json_quote(vt1.c0));
SELECT ALL * FROM rt0, v0 INNER JOIN vt1 ON (- (1740812695)) WHERE (((((rt0.c2) IS TRUE))*(((rt0.c2)IS NOT(rt0.c2))))) ORDER BY json_quote(vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS TRUE))*(((rt0.c2)IS NOT(rt0.c2))))) IS TRUE)  as count FROM rt0, v0 INNER JOIN vt1 ON (- (1740812695)) ORDER BY json_quote(vt1.c0));
SELECT ALL * FROM rt0, v0 INNER JOIN vt1 ON (- (1740812695)) WHERE (((((rt0.c2) IS TRUE))*(((rt0.c2)IS NOT(rt0.c2))))) ORDER BY json_quote(vt1.c0);
SELECT * FROM v0, vt1 WHERE (vt1.c0) ORDER BY vt1.c0 DESC  NULLS FIRST, 'qFoPN' ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM v0, vt1 ORDER BY vt1.c0 DESC  NULLS FIRST, 'qFoPN' ASC);
SELECT * FROM v0, vt1 WHERE (vt1.c0) ORDER BY vt1.c0 DESC  NULLS FIRST, 'qFoPN' ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM v0, vt1 ORDER BY vt1.c0 DESC  NULLS FIRST, 'qFoPN' ASC);
SELECT * FROM v0, vt1 WHERE (vt1.c0) ORDER BY vt1.c0 DESC  NULLS FIRST, 'qFoPN' ASC;
SELECT COUNT(*) FROM v0, vt1 CROSS JOIN rt0 ON v0.c0 WHERE (UPPER(DISTINCT CASE WHEN vt1.c0 THEN vt1.c0 END));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT CASE WHEN vt1.c0 THEN vt1.c0 END)) IS TRUE)  as count FROM v0, vt1 CROSS JOIN rt0 ON v0.c0);
SELECT COUNT(*) FROM v0, vt1 CROSS JOIN rt0 ON v0.c0 WHERE (UPPER(DISTINCT CASE WHEN vt1.c0 THEN vt1.c0 END));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT CASE WHEN vt1.c0 THEN vt1.c0 END)) IS TRUE)  as count FROM v0, vt1 CROSS JOIN rt0 ON v0.c0);
SELECT COUNT(*) FROM v0, vt1 CROSS JOIN rt0 ON v0.c0 WHERE (UPPER(DISTINCT CASE WHEN vt1.c0 THEN vt1.c0 END));
SELECT * FROM v0, vt1 WHERE (x'b6bc') ORDER BY (((((((v0.c0, vt1.c0, vt1.c0))==((v0.c0, vt1.c0, v0.c0))))AND(x'')))OR(((v0.c0) BETWEEN (v0.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((x'b6bc') IS TRUE)  as count FROM v0, vt1 ORDER BY (((((((v0.c0, vt1.c0, vt1.c0))=((v0.c0, vt1.c0, v0.c0))))AND(x'')))OR(((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)))));
SELECT * FROM v0, vt1 WHERE (x'b6bc') ORDER BY (((((((v0.c0, vt1.c0, vt1.c0))==((v0.c0, vt1.c0, v0.c0))))AND(x'')))OR(((v0.c0) BETWEEN (v0.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((x'b6bc') IS TRUE)  as count FROM v0, vt1 ORDER BY (((((((v0.c0, vt1.c0, vt1.c0))=((v0.c0, vt1.c0, v0.c0))))AND(x'')))OR(((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)))));
SELECT * FROM v0, vt1 WHERE (x'b6bc') ORDER BY (((((((v0.c0, vt1.c0, vt1.c0))==((v0.c0, vt1.c0, v0.c0))))AND(x'')))OR(((v0.c0) BETWEEN (v0.c0) AND (vt1.c0))));
SELECT ALL * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) BETWEEN (((+ (v0.c0)), ((v0.c0)<=(v0.c0)), (('()') NOT BETWEEN (v0.c0) AND (v0.c0)))) AND ((CAST(v0.c0 AS REAL), ((v0.c0)IS NOT(v0.c0)), (0.07599683472449048 IN ())))));
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c0, v0.c0)) BETWEEN (((+ (v0.c0)), ((v0.c0)<=(v0.c0)), (('()') NOT BETWEEN (v0.c0) AND (v0.c0)))) AND ((CAST(v0.c0 AS REAL), ((v0.c0)IS NOT(v0.c0)), (0.07599683472449048 IN ()))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) BETWEEN (((+ (v0.c0)), ((v0.c0)<=(v0.c0)), (('()') NOT BETWEEN (v0.c0) AND (v0.c0)))) AND ((CAST(v0.c0 AS REAL), ((v0.c0)IS NOT(v0.c0)), (0.07599683472449048 IN ())))));
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c0, v0.c0)) BETWEEN (((+ (v0.c0)), ((v0.c0)<=(v0.c0)), (('()') NOT BETWEEN (v0.c0) AND (v0.c0)))) AND ((CAST(v0.c0 AS REAL), ((v0.c0)IS NOT(v0.c0)), (0.07599683472449048 IN ()))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) BETWEEN (((+ (v0.c0)), ((v0.c0)<=(v0.c0)), (('()') NOT BETWEEN (v0.c0) AND (v0.c0)))) AND ((CAST(v0.c0 AS REAL), ((v0.c0)IS NOT(v0.c0)), (0.07599683472449048 IN ())))));
SELECT * FROM rt0, vt1, v0 WHERE (CAST(((vt1.c0)>(v0.c0)) AS NUMERIC)) ORDER BY (rt0.c0 COLLATE RTRIM IN (((vt1.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))) DESC  NULLS FIRST, rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)>(v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY (rt0.c0 COLLATE RTRIM IN (((vt1.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))) DESC  NULLS FIRST, rt0.c2 DESC);
SELECT * FROM rt0, vt1, v0 WHERE (CAST(((vt1.c0)>(v0.c0)) AS NUMERIC)) ORDER BY (rt0.c0 COLLATE RTRIM IN (((vt1.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))) DESC  NULLS FIRST, rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)>(v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY (rt0.c0 COLLATE RTRIM IN (((vt1.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))) DESC  NULLS FIRST, rt0.c2 DESC);
SELECT * FROM rt0, vt1, v0 WHERE (CAST(((vt1.c0)>(v0.c0)) AS NUMERIC)) ORDER BY (rt0.c0 COLLATE RTRIM IN (((vt1.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))) DESC  NULLS FIRST, rt0.c2 DESC;
SELECT * FROM vt1, rt0, v0 WHERE (TRIM(rt0.c1 COLLATE BINARY, IFNULL(vt1.c0, '|+')));
SELECT SUM(count) FROM (SELECT ((TRIM(rt0.c1 COLLATE BINARY, IFNULL(vt1.c0, '|+'))) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT * FROM vt1, rt0, v0 WHERE (TRIM(rt0.c1 COLLATE BINARY, IFNULL(vt1.c0, '|+')));
SELECT SUM(count) FROM (SELECT ((TRIM(rt0.c1 COLLATE BINARY, IFNULL(vt1.c0, '|+'))) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT * FROM vt1, rt0, v0 WHERE (TRIM(rt0.c1 COLLATE BINARY, IFNULL(vt1.c0, '|+')));
SELECT ALL * FROM v0, rt0, vt1 WHERE ((- (((rt0.c2) NOT NULL)))) ORDER BY CAST(UPPER(vt1.c0) AS NUMERIC) DESC  NULLS FIRST, CAST(CASE WHEN rt0.c1 THEN 'VJfF!A8戀' END AS BLOB), ((rt0.c0) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY CAST(UPPER(vt1.c0) AS NUMERIC) DESC  NULLS FIRST, CAST(CASE WHEN rt0.c1 THEN 'VJfF!A8戀' END AS BLOB), ((rt0.c0) IS TRUE) DESC);
SELECT ALL * FROM v0, rt0, vt1 WHERE ((- (((rt0.c2) NOT NULL)))) ORDER BY CAST(UPPER(vt1.c0) AS NUMERIC) DESC  NULLS FIRST, CAST(CASE WHEN rt0.c1 THEN 'VJfF!A8戀' END AS BLOB), ((rt0.c0) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY CAST(UPPER(vt1.c0) AS NUMERIC) DESC  NULLS FIRST, CAST(CASE WHEN rt0.c1 THEN 'VJfF!A8戀' END AS BLOB), ((rt0.c0) IS TRUE) DESC);
SELECT ALL * FROM v0, rt0, vt1 WHERE ((- (((rt0.c2) NOT NULL)))) ORDER BY CAST(UPPER(vt1.c0) AS NUMERIC) DESC  NULLS FIRST, CAST(CASE WHEN rt0.c1 THEN 'VJfF!A8戀' END AS BLOB), ((rt0.c0) IS TRUE) DESC;
SELECT * FROM vt1, rt0, v0 WHERE (((v0.c0 COLLATE NOCASE) NOTNULL)) ORDER BY (((-1013062723)) NOT BETWEEN (((('') IS FALSE))) AND (((((rt0.c0, rt0.c2, vt1.c0))>((vt1.c0, rt0.c1, rt0.c0)))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM vt1, rt0, v0 ORDER BY (((-1013062723)) NOT BETWEEN (((('') IS FALSE))) AND (((((rt0.c0, rt0.c2, vt1.c0))>((vt1.c0, rt0.c1, rt0.c0)))))) ASC  NULLS FIRST);
SELECT * FROM vt1, rt0, v0 WHERE (((v0.c0 COLLATE NOCASE) NOTNULL)) ORDER BY (((-1013062723)) NOT BETWEEN (((('') IS FALSE))) AND (((((rt0.c0, rt0.c2, vt1.c0))>((vt1.c0, rt0.c1, rt0.c0)))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM vt1, rt0, v0 ORDER BY (((-1013062723)) NOT BETWEEN (((('') IS FALSE))) AND (((((rt0.c0, rt0.c2, vt1.c0))>((vt1.c0, rt0.c1, rt0.c0)))))) ASC  NULLS FIRST);
SELECT * FROM vt1, rt0, v0 WHERE (((v0.c0 COLLATE NOCASE) NOTNULL)) ORDER BY (((-1013062723)) NOT BETWEEN (((('') IS FALSE))) AND (((((rt0.c0, rt0.c2, vt1.c0))>((vt1.c0, rt0.c1, rt0.c0)))))) ASC  NULLS FIRST;
SELECT * FROM vt1, rt0 WHERE ((+ ((NOT (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((+ ((NOT (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((+ ((NOT (vt1.c0)))));
SELECT COUNT(*) FROM v0, vt1 WHERE (((IFNULL(v0.c0, vt1.c0)) NOTNULL)) ORDER BY NULL COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((IFNULL(v0.c0, vt1.c0)) NOTNULL)) IS TRUE)  as count FROM v0, vt1 ORDER BY NULL COLLATE NOCASE);
SELECT COUNT(*) FROM v0, vt1 WHERE (((IFNULL(v0.c0, vt1.c0)) NOTNULL)) ORDER BY NULL COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((IFNULL(v0.c0, vt1.c0)) NOTNULL)) IS TRUE)  as count FROM v0, vt1 ORDER BY NULL COLLATE NOCASE);
SELECT COUNT(*) FROM v0, vt1 WHERE (((IFNULL(v0.c0, vt1.c0)) NOTNULL)) ORDER BY NULL COLLATE NOCASE;
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c1)IS(vt1.c0))) NOT BETWEEN (x'') AND (((((((((rt0.c1)AND(vt1.c0)))AND(rt0.c2)))OR(rt0.c2)))AND(0.29345329971524803)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)IS(vt1.c0))) NOT BETWEEN (x'') AND (((((((((rt0.c1)AND(vt1.c0)))AND(rt0.c2)))OR(rt0.c2)))AND(0.29345329971524803))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c1)IS(vt1.c0))) NOT BETWEEN (x'') AND (((((((((rt0.c1)AND(vt1.c0)))AND(rt0.c2)))OR(rt0.c2)))AND(0.29345329971524803)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)IS(vt1.c0))) NOT BETWEEN (x'') AND (((((((((rt0.c1)AND(vt1.c0)))AND(rt0.c2)))OR(rt0.c2)))AND(0.29345329971524803))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c1)IS(vt1.c0))) NOT BETWEEN (x'') AND (((((((((rt0.c1)AND(vt1.c0)))AND(rt0.c2)))OR(rt0.c2)))AND(0.29345329971524803)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ())) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) AND (vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) AND (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ())) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) AND (vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) AND (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ())) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) AND (vt1.c0 COLLATE NOCASE)));
SELECT * FROM vt1 WHERE (CASE (((vt1.c0, vt1.c0, 0x1235d093)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND (('', vt1.c0, vt1.c0)))  WHEN vt1.c0 THEN vt1.c0 WHEN ((vt1.c0)%(vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN (vt1.c0 IN ()) THEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) ELSE ((vt1.c0)&(vt1.c0)) END) ORDER BY (NOT (((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.6557640787631224)))) ASC, COALESCE(vt1.c0 COLLATE BINARY, CAST('-742986232' AS TEXT)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt1.c0, vt1.c0, 0x1235d093)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND (('', vt1.c0, vt1.c0)))  WHEN vt1.c0 THEN vt1.c0 WHEN ((vt1.c0)%(vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN (vt1.c0 IN ()) THEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) ELSE ((vt1.c0)&(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY (NOT (((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.6557640787631224)))) ASC, COALESCE(vt1.c0 COLLATE BINARY, CAST('-742986232' AS TEXT)) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (CASE (((vt1.c0, vt1.c0, 0x1235d093)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND (('', vt1.c0, vt1.c0)))  WHEN vt1.c0 THEN vt1.c0 WHEN ((vt1.c0)%(vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN (vt1.c0 IN ()) THEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) ELSE ((vt1.c0)&(vt1.c0)) END) ORDER BY (NOT (((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.6557640787631224)))) ASC, COALESCE(vt1.c0 COLLATE BINARY, CAST('-742986232' AS TEXT)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt1.c0, vt1.c0, 0x1235d093)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND (('', vt1.c0, vt1.c0)))  WHEN vt1.c0 THEN vt1.c0 WHEN ((vt1.c0)%(vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN (vt1.c0 IN ()) THEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) ELSE ((vt1.c0)&(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY (NOT (((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.6557640787631224)))) ASC, COALESCE(vt1.c0 COLLATE BINARY, CAST('-742986232' AS TEXT)) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (CASE (((vt1.c0, vt1.c0, 0x1235d093)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND (('', vt1.c0, vt1.c0)))  WHEN vt1.c0 THEN vt1.c0 WHEN ((vt1.c0)%(vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN (vt1.c0 IN ()) THEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) ELSE ((vt1.c0)&(vt1.c0)) END) ORDER BY (NOT (((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.6557640787631224)))) ASC, COALESCE(vt1.c0 COLLATE BINARY, CAST('-742986232' AS TEXT)) DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)LIKE(vt1.c0)))<<(((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)LIKE(vt1.c0)))<<(((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)LIKE(vt1.c0)))<<(((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)LIKE(vt1.c0)))<<(((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)LIKE(vt1.c0)))<<(((vt1.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (9.528497E7))) ORDER BY CAST(CASE WHEN rt0.c2 THEN 0.10031767324384311 ELSE rt0.c1 END AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (9.528497E7))) IS TRUE)  as count FROM rt0 ORDER BY CAST(CASE WHEN rt0.c2 THEN 0.10031767324384311 ELSE rt0.c1 END AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (9.528497E7))) ORDER BY CAST(CASE WHEN rt0.c2 THEN 0.10031767324384311 ELSE rt0.c1 END AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (9.528497E7))) IS TRUE)  as count FROM rt0 ORDER BY CAST(CASE WHEN rt0.c2 THEN 0.10031767324384311 ELSE rt0.c1 END AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (9.528497E7))) ORDER BY CAST(CASE WHEN rt0.c2 THEN 0.10031767324384311 ELSE rt0.c1 END AS REAL)  NULLS FIRST;
SELECT COUNT(*) FROM vt1, v0 WHERE (((UNLIKELY(vt1.c0)) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))) AND (((v0.c0) BETWEEN (v0.c0) AND ('\\n퐣rնMw')))));
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(vt1.c0)) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))) AND (((v0.c0) BETWEEN (v0.c0) AND ('\\n퐣rնMw'))))) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (((UNLIKELY(vt1.c0)) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))) AND (((v0.c0) BETWEEN (v0.c0) AND ('\\n퐣rնMw')))));
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(vt1.c0)) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))) AND (((v0.c0) BETWEEN (v0.c0) AND ('\\n퐣rնMw'))))) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (((UNLIKELY(vt1.c0)) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))) AND (((v0.c0) BETWEEN (v0.c0) AND ('\\n퐣rնMw')))));
SELECT * FROM rt0, v0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (rt0.c2);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN v0 ON CASE WHEN v0.c0 THEN vt1.c0 END COLLATE NOCASE WHERE ((+ (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY ((UPPER(vt1.c0)) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN v0 ON CASE WHEN v0.c0 THEN vt1.c0 END COLLATE NOCASE ORDER BY ((UPPER(vt1.c0)) NOT NULL)  NULLS LAST);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN v0 ON CASE WHEN v0.c0 THEN vt1.c0 END COLLATE NOCASE WHERE ((+ (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY ((UPPER(vt1.c0)) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN v0 ON CASE WHEN v0.c0 THEN vt1.c0 END COLLATE NOCASE ORDER BY ((UPPER(vt1.c0)) NOT NULL)  NULLS LAST);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN v0 ON CASE WHEN v0.c0 THEN vt1.c0 END COLLATE NOCASE WHERE ((+ (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY ((UPPER(vt1.c0)) NOT NULL)  NULLS LAST;
SELECT * FROM rt0 CROSS JOIN v0 ON ((CAST(rt0.c1 AS TEXT))!=(x'3788')) FULL OUTER JOIN vt1 ON rt0.c2 WHERE (CAST(((v0.c0)!=(rt0.c1)) AS REAL)) ORDER BY CASE vt1.c0 COLLATE BINARY  WHEN CAST(vt1.c0 AS BLOB) THEN '1908934386' ELSE '-1752382724' END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)<>(rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((CAST(rt0.c1 AS TEXT))<>(x'3788')) FULL OUTER JOIN vt1 ON rt0.c2 ORDER BY CASE vt1.c0 COLLATE BINARY  WHEN CAST(vt1.c0 AS BLOB) THEN '1908934386' ELSE '-1752382724' END ASC);
SELECT * FROM rt0 CROSS JOIN v0 ON ((CAST(rt0.c1 AS TEXT))!=(x'3788')) FULL OUTER JOIN vt1 ON rt0.c2 WHERE (CAST(((v0.c0)!=(rt0.c1)) AS REAL)) ORDER BY CASE vt1.c0 COLLATE BINARY  WHEN CAST(vt1.c0 AS BLOB) THEN '1908934386' ELSE '-1752382724' END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)<>(rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((CAST(rt0.c1 AS TEXT))<>(x'3788')) FULL OUTER JOIN vt1 ON rt0.c2 ORDER BY CASE vt1.c0 COLLATE BINARY  WHEN CAST(vt1.c0 AS BLOB) THEN '1908934386' ELSE '-1752382724' END ASC);
SELECT * FROM rt0 CROSS JOIN v0 ON ((CAST(rt0.c1 AS TEXT))!=(x'3788')) FULL OUTER JOIN vt1 ON rt0.c2 WHERE (CAST(((v0.c0)!=(rt0.c1)) AS REAL)) ORDER BY CASE vt1.c0 COLLATE BINARY  WHEN CAST(vt1.c0 AS BLOB) THEN '1908934386' ELSE '-1752382724' END ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)AND(rt0.c0))) BETWEEN (((rt0.c2) BETWEEN ('') AND (rt0.c0))) AND (CAST(rt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)AND(rt0.c0))) BETWEEN (((rt0.c2) BETWEEN ('') AND (rt0.c0))) AND (CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)AND(rt0.c0))) BETWEEN (((rt0.c2) BETWEEN ('') AND (rt0.c0))) AND (CAST(rt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)AND(rt0.c0))) BETWEEN (((rt0.c2) BETWEEN ('') AND (rt0.c0))) AND (CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)AND(rt0.c0))) BETWEEN (((rt0.c2) BETWEEN ('') AND (rt0.c0))) AND (CAST(rt0.c1 AS REAL))));
SELECT ALL * FROM rt0, v0, vt1 WHERE (((('117655161', rt0.c2, x'9cb5')) BETWEEN ((((x'bbff')+(vt1.c0)), vt1.c0 COLLATE NOCASE, NULL)) AND ((rt0.c0, (+ (NULL)), rt0.c2 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ((((('117655161', rt0.c2, x'9cb5')) BETWEEN ((((x'bbff')+(vt1.c0)), vt1.c0 COLLATE NOCASE, NULL)) AND ((rt0.c0, (+ (NULL)), rt0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0, v0, vt1);
SELECT ALL * FROM rt0, v0, vt1 WHERE (((('117655161', rt0.c2, x'9cb5')) BETWEEN ((((x'bbff')+(vt1.c0)), vt1.c0 COLLATE NOCASE, NULL)) AND ((rt0.c0, (+ (NULL)), rt0.c2 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ((((('117655161', rt0.c2, x'9cb5')) BETWEEN ((((x'bbff')+(vt1.c0)), vt1.c0 COLLATE NOCASE, NULL)) AND ((rt0.c0, (+ (NULL)), rt0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0, v0, vt1);
SELECT ALL * FROM rt0, v0, vt1 WHERE (((('117655161', rt0.c2, x'9cb5')) BETWEEN ((((x'bbff')+(vt1.c0)), vt1.c0 COLLATE NOCASE, NULL)) AND ((rt0.c0, (+ (NULL)), rt0.c2 COLLATE NOCASE))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((0.7936201239402644) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((0.7936201239402644) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((0.7936201239402644) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((0.7936201239402644) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((0.7936201239402644) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (rt0.c2 COLLATE NOCASE)));
SELECT * FROM vt1, rt0 WHERE (((((((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 END)OR((~ (vt1.c0)))))OR(((-1.439458574E9) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND(rt0.c1)))AND((rt0.c0 IN (vt1.c0))))) ORDER BY '\\n퐣rնMw';
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 END)OR((~ (vt1.c0)))))OR(((-1.439458574E9) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND(rt0.c1)))AND((rt0.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY '\\n퐣rնMw');
SELECT * FROM vt1, rt0 WHERE (((((((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 END)OR((~ (vt1.c0)))))OR(((-1.439458574E9) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND(rt0.c1)))AND((rt0.c0 IN (vt1.c0))))) ORDER BY '\\n퐣rնMw';
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 END)OR((~ (vt1.c0)))))OR(((-1.439458574E9) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND(rt0.c1)))AND((rt0.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY '\\n퐣rնMw');
SELECT * FROM vt1, rt0 WHERE (((((((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 END)OR((~ (vt1.c0)))))OR(((-1.439458574E9) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND(rt0.c1)))AND((rt0.c0 IN (vt1.c0))))) ORDER BY '\\n퐣rնMw';
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (UPPER(((rt0.c1)<=(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((UPPER(((rt0.c1)<=(rt0.c2)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (UPPER(((rt0.c1)<=(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((UPPER(((rt0.c1)<=(rt0.c2)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (UPPER(((rt0.c1)<=(rt0.c2))));
SELECT COUNT(*) FROM v0 WHERE (-8.63813137E8) ORDER BY TYPEOF(DISTINCT (((v0.c0))<=((v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((-8.63813137E8) IS TRUE)  as count FROM v0 ORDER BY TYPEOF(DISTINCT (((v0.c0))<=((v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (-8.63813137E8) ORDER BY TYPEOF(DISTINCT (((v0.c0))<=((v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((-8.63813137E8) IS TRUE)  as count FROM v0 ORDER BY TYPEOF(DISTINCT (((v0.c0))<=((v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (-8.63813137E8) ORDER BY TYPEOF(DISTINCT (((v0.c0))<=((v0.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE rt0.c0  WHEN x'c973' THEN rt0.c2 COLLATE NOCASE WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c1) IS TRUE) WHEN (NOT (rt0.c1)) THEN ((rt0.c2)=(rt0.c2)) END) ORDER BY CAST(((rt0.c1) ISNULL) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN x'c973' THEN rt0.c2 COLLATE NOCASE WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c1) IS TRUE) WHEN (NOT (rt0.c1)) THEN ((rt0.c2)==(rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c1) ISNULL) AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE rt0.c0  WHEN x'c973' THEN rt0.c2 COLLATE NOCASE WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c1) IS TRUE) WHEN (NOT (rt0.c1)) THEN ((rt0.c2)=(rt0.c2)) END) ORDER BY CAST(((rt0.c1) ISNULL) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN x'c973' THEN rt0.c2 COLLATE NOCASE WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c1) IS TRUE) WHEN (NOT (rt0.c1)) THEN ((rt0.c2)==(rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c1) ISNULL) AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE rt0.c0  WHEN x'c973' THEN rt0.c2 COLLATE NOCASE WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c1) IS TRUE) WHEN (NOT (rt0.c1)) THEN ((rt0.c2)=(rt0.c2)) END) ORDER BY CAST(((rt0.c1) ISNULL) AS BLOB)  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt1, rt0 WHERE (rt0.c1) ORDER BY ((('' IN (rt0.c2, v0.c0)))-(((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))), CAST(v0.c0 AS BLOB) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY ((('' IN (rt0.c2, v0.c0)))-(((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))), CAST(v0.c0 AS BLOB) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt1, rt0 WHERE (rt0.c1) ORDER BY ((('' IN (rt0.c2, v0.c0)))-(((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))), CAST(v0.c0 AS BLOB) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY ((('' IN (rt0.c2, v0.c0)))-(((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))), CAST(v0.c0 AS BLOB) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt1, rt0 WHERE (rt0.c1) ORDER BY ((('' IN (rt0.c2, v0.c0)))-(((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))), CAST(v0.c0 AS BLOB) COLLATE RTRIM  NULLS LAST;
SELECT * FROM vt1, rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))*(NULL))) ORDER BY (((((rt0.c2) NOTNULL)))<>(((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))*(NULL))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((rt0.c2) NOTNULL)))<>(((rt0.c0 IN ())))));
SELECT * FROM vt1, rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))*(NULL))) ORDER BY (((((rt0.c2) NOTNULL)))<>(((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))*(NULL))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((rt0.c2) NOTNULL)))<>(((rt0.c0 IN ())))));
SELECT * FROM vt1, rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))*(NULL))) ORDER BY (((((rt0.c2) NOTNULL)))<>(((rt0.c0 IN ()))));
SELECT * FROM v0 WHERE (1.7976931348623157E308) ORDER BY 0x7420eeb8 ASC, CASE WHEN v0.c0 THEN v0.c0 COLLATE BINARY END;
SELECT SUM(count) FROM (SELECT ALL ((1.7976931348623157E308) IS TRUE)  as count FROM v0 ORDER BY 0x7420eeb8 ASC, CASE WHEN v0.c0 THEN v0.c0 COLLATE BINARY END);
SELECT * FROM v0 WHERE (1.7976931348623157E308) ORDER BY 0x7420eeb8 ASC, CASE WHEN v0.c0 THEN v0.c0 COLLATE BINARY END;
SELECT SUM(count) FROM (SELECT ALL ((1.7976931348623157E308) IS TRUE)  as count FROM v0 ORDER BY 0x7420eeb8 ASC, CASE WHEN v0.c0 THEN v0.c0 COLLATE BINARY END);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN (((+ (v0.c0)), ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)), (- (NULL)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0)>=(v0.c0)))) AND ((((v0.c0) IS TRUE), HEX(v0.c0), CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))) ORDER BY COALESCE(DISTINCT (- (v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'967b' WHEN v0.c0 THEN 'Gy2俔W''>\O' ELSE v0.c0 END, (((v0.c0, v0.c0, v0.c0, x'6120', v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, x'77fb'))), UNLIKELY('-569384226')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN (((+ (v0.c0)), ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)), (- (NULL)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0)>=(v0.c0)))) AND ((((v0.c0) IS TRUE), HEX(v0.c0), CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))) IS TRUE)  as count FROM v0 ORDER BY COALESCE(DISTINCT (- (v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'967b' WHEN v0.c0 THEN 'Gy2俔W''>\O' ELSE v0.c0 END, (((v0.c0, v0.c0, v0.c0, x'6120', v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, x'77fb'))), UNLIKELY('-569384226')) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN (((+ (v0.c0)), ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)), (- (NULL)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0)>=(v0.c0)))) AND ((((v0.c0) IS TRUE), HEX(v0.c0), CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))) ORDER BY COALESCE(DISTINCT (- (v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'967b' WHEN v0.c0 THEN 'Gy2俔W''>\O' ELSE v0.c0 END, (((v0.c0, v0.c0, v0.c0, x'6120', v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, x'77fb'))), UNLIKELY('-569384226')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN (((+ (v0.c0)), ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)), (- (NULL)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0)>=(v0.c0)))) AND ((((v0.c0) IS TRUE), HEX(v0.c0), CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))) IS TRUE)  as count FROM v0 ORDER BY COALESCE(DISTINCT (- (v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'967b' WHEN v0.c0 THEN 'Gy2俔W''>\O' ELSE v0.c0 END, (((v0.c0, v0.c0, v0.c0, x'6120', v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, x'77fb'))), UNLIKELY('-569384226')) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN (((+ (v0.c0)), ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)), (- (NULL)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0)>=(v0.c0)))) AND ((((v0.c0) IS TRUE), HEX(v0.c0), CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))) ORDER BY COALESCE(DISTINCT (- (v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'967b' WHEN v0.c0 THEN 'Gy2俔W''>\O' ELSE v0.c0 END, (((v0.c0, v0.c0, v0.c0, x'6120', v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, x'77fb'))), UNLIKELY('-569384226')) ASC  NULLS LAST;
SELECT ALL * FROM rt0, v0, vt1 WHERE ('95284970');
SELECT SUM(count) FROM (SELECT (('95284970') IS TRUE)  as count FROM rt0, v0, vt1);
SELECT ALL * FROM rt0, v0, vt1 WHERE ('95284970');
SELECT SUM(count) FROM (SELECT (('95284970') IS TRUE)  as count FROM rt0, v0, vt1);
SELECT ALL * FROM rt0, v0, vt1 WHERE ('95284970');
SELECT COUNT(*) FROM v0, vt1 WHERE ((- (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0, vt1);
SELECT COUNT(*) FROM v0, vt1 WHERE ((- (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0, vt1);
SELECT COUNT(*) FROM v0, vt1 WHERE ((- (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (UPPER(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (UPPER(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (UPPER(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)OR((('') IS FALSE))))AND((+ (-863813137)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR((('') IS FALSE))))AND((+ (-863813137))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)OR((('') IS FALSE))))AND((+ (-863813137)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR((('') IS FALSE))))AND((+ (-863813137))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)OR((('') IS FALSE))))AND((+ (-863813137)))));
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON (((rt0.c1 IN ()))<(CAST(vt1.c0 AS REAL))) WHERE ((((rt0.c2)) BETWEEN ((UPPER(DISTINCT vt1.c0))) AND (((~ (rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((UPPER(DISTINCT vt1.c0))) AND (((~ (rt0.c2)))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON (((rt0.c1 IN ()))<(CAST(vt1.c0 AS REAL))));
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON (((rt0.c1 IN ()))<(CAST(vt1.c0 AS REAL))) WHERE ((((rt0.c2)) BETWEEN ((UPPER(DISTINCT vt1.c0))) AND (((~ (rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((UPPER(DISTINCT vt1.c0))) AND (((~ (rt0.c2)))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON (((rt0.c1 IN ()))<(CAST(vt1.c0 AS REAL))));
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON (((rt0.c1 IN ()))<(CAST(vt1.c0 AS REAL))) WHERE ((((rt0.c2)) BETWEEN ((UPPER(DISTINCT vt1.c0))) AND (((~ (rt0.c2))))));
SELECT ALL * FROM vt1, rt0 NATURAL JOIN v0 WHERE (CAST(UNLIKELY(v0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(UNLIKELY(v0.c0) AS TEXT)) IS TRUE)  as count FROM vt1, rt0 NATURAL JOIN v0);
SELECT ALL * FROM vt1, rt0 NATURAL JOIN v0 WHERE (CAST(UNLIKELY(v0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(UNLIKELY(v0.c0) AS TEXT)) IS TRUE)  as count FROM vt1, rt0 NATURAL JOIN v0);
SELECT ALL * FROM vt1, rt0 NATURAL JOIN v0 WHERE (CAST(UNLIKELY(v0.c0) AS TEXT));
SELECT COUNT(*) FROM rt0 WHERE (LIKELIHOOD((- (rt0.c1)), 0.4200924784806157));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((- (rt0.c1)), 0.4200924784806157)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (LIKELIHOOD((- (rt0.c1)), 0.4200924784806157));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((- (rt0.c1)), 0.4200924784806157)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (LIKELIHOOD((- (rt0.c1)), 0.4200924784806157));
SELECT ALL * FROM rt0, v0, vt1 WHERE ((+ (rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0, vt1);
SELECT ALL * FROM rt0, v0, vt1 WHERE ((+ (rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0, vt1);
SELECT ALL * FROM rt0, v0, vt1 WHERE ((+ (rt0.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((((NULL) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) IS FALSE), (- (rt0.c0))))==((((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c0)), ((vt1.c0)/(rt0.c2)), ((rt0.c0)>=(rt0.c0)))))) ORDER BY CASE vt1.c0 COLLATE BINARY  WHEN ((rt0.c0)GLOB(rt0.c1)) THEN CAST(rt0.c2 AS NUMERIC) WHEN ((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)) THEN ((rt0.c0) NOT NULL) WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN (vt1.c0 IN ()) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((NULL) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) IS FALSE), (- (rt0.c0))))=((((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c0)), ((vt1.c0)/(rt0.c2)), ((rt0.c0)>=(rt0.c0)))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE vt1.c0 COLLATE BINARY  WHEN ((rt0.c0)GLOB(rt0.c1)) THEN CAST(rt0.c2 AS NUMERIC) WHEN ((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)) THEN ((rt0.c0) NOT NULL) WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN (vt1.c0 IN ()) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((((NULL) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) IS FALSE), (- (rt0.c0))))==((((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c0)), ((vt1.c0)/(rt0.c2)), ((rt0.c0)>=(rt0.c0)))))) ORDER BY CASE vt1.c0 COLLATE BINARY  WHEN ((rt0.c0)GLOB(rt0.c1)) THEN CAST(rt0.c2 AS NUMERIC) WHEN ((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)) THEN ((rt0.c0) NOT NULL) WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN (vt1.c0 IN ()) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((NULL) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) IS FALSE), (- (rt0.c0))))=((((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c0)), ((vt1.c0)/(rt0.c2)), ((rt0.c0)>=(rt0.c0)))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE vt1.c0 COLLATE BINARY  WHEN ((rt0.c0)GLOB(rt0.c1)) THEN CAST(rt0.c2 AS NUMERIC) WHEN ((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)) THEN ((rt0.c0) NOT NULL) WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN (vt1.c0 IN ()) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((((NULL) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) IS FALSE), (- (rt0.c0))))==((((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c0)), ((vt1.c0)/(rt0.c2)), ((rt0.c0)>=(rt0.c0)))))) ORDER BY CASE vt1.c0 COLLATE BINARY  WHEN ((rt0.c0)GLOB(rt0.c1)) THEN CAST(rt0.c2 AS NUMERIC) WHEN ((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)) THEN ((rt0.c0) NOT NULL) WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN (vt1.c0 IN ()) END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c2) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c2) NOTNULL) IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c2) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c2) NOTNULL) IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c2) NOTNULL) IN ()));
SELECT * FROM rt0, vt1 WHERE (NULL) ORDER BY ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2))) IN (((rt0.c0) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2))) IN (((rt0.c0) NOTNULL)))  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE (NULL) ORDER BY ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2))) IN (((rt0.c0) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2))) IN (((rt0.c0) NOTNULL)))  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE (NULL) ORDER BY ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2))) IN (((rt0.c0) NOTNULL)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((x'')LIKE(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((x'')LIKE(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((x'')LIKE(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((x'')LIKE(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((x'')LIKE(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL * FROM rt0, vt1, v0 WHERE (((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))<=(((x'')+(rt0.c1))))) ORDER BY rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))<=(((x'')+(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY rt0.c0 ASC);
SELECT ALL * FROM rt0, vt1, v0 WHERE (((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))<=(((x'')+(rt0.c1))))) ORDER BY rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))<=(((x'')+(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY rt0.c0 ASC);
SELECT ALL * FROM rt0, vt1, v0 WHERE (((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))<=(((x'')+(rt0.c1))))) ORDER BY rt0.c0 ASC;
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON ((((((((json_valid(vt1.c0))OR(rt0.c0)))OR(((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c0)))))OR(LIKELY(DISTINCT vt1.c0))))OR((0.0 IN (v0.c0)))) CROSS JOIN v0 ON CAST(TYPEOF(rt0.c0) AS NUMERIC) WHERE (((((((rt0.c1)OR(rt0.c2)))OR(v0.c0))) BETWEEN (((vt1.c0)IS NOT(rt0.c0))) AND (((vt1.c0)<>(vt1.c0))))) ORDER BY UPPER(DISTINCT ((v0.c0) BETWEEN (rt0.c0) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c2)))OR(v0.c0))) BETWEEN (((vt1.c0)IS NOT(rt0.c0))) AND (((vt1.c0)<>(vt1.c0))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((((((((json_valid(vt1.c0))OR(rt0.c0)))OR(((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c0)))))OR(LIKELY(DISTINCT vt1.c0))))OR((0.0 IN (v0.c0)))) CROSS JOIN v0 ON CAST(TYPEOF(rt0.c0) AS NUMERIC) ORDER BY UPPER(DISTINCT ((v0.c0) BETWEEN (rt0.c0) AND (vt1.c0))));
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON ((((((((json_valid(vt1.c0))OR(rt0.c0)))OR(((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c0)))))OR(LIKELY(DISTINCT vt1.c0))))OR((0.0 IN (v0.c0)))) CROSS JOIN v0 ON CAST(TYPEOF(rt0.c0) AS NUMERIC) WHERE (((((((rt0.c1)OR(rt0.c2)))OR(v0.c0))) BETWEEN (((vt1.c0)IS NOT(rt0.c0))) AND (((vt1.c0)<>(vt1.c0))))) ORDER BY UPPER(DISTINCT ((v0.c0) BETWEEN (rt0.c0) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c2)))OR(v0.c0))) BETWEEN (((vt1.c0)IS NOT(rt0.c0))) AND (((vt1.c0)<>(vt1.c0))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((((((((json_valid(vt1.c0))OR(rt0.c0)))OR(((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c0)))))OR(LIKELY(DISTINCT vt1.c0))))OR((0.0 IN (v0.c0)))) CROSS JOIN v0 ON CAST(TYPEOF(rt0.c0) AS NUMERIC) ORDER BY UPPER(DISTINCT ((v0.c0) BETWEEN (rt0.c0) AND (vt1.c0))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON (- ((rt0.c0 IN ()))) RIGHT OUTER JOIN v0 ON (((vt1.c0)GLOB(v0.c0)) IN (((595592820) NOT BETWEEN (rt0.c1) AND (vt1.c0)), 0x5011e171)) WHERE (CAST(CASE rt0.c1  WHEN vt1.c0 THEN '' END AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c1  WHEN vt1.c0 THEN '' END AS INTEGER)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON (- ((rt0.c0 IN ()))) RIGHT OUTER JOIN v0 ON (((vt1.c0)GLOB(v0.c0)) IN (((595592820) NOT BETWEEN (rt0.c1) AND (vt1.c0)), 0X5011e171)));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON (- ((rt0.c0 IN ()))) RIGHT OUTER JOIN v0 ON (((vt1.c0)GLOB(v0.c0)) IN (((595592820) NOT BETWEEN (rt0.c1) AND (vt1.c0)), 0x5011e171)) WHERE (CAST(CASE rt0.c1  WHEN vt1.c0 THEN '' END AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c1  WHEN vt1.c0 THEN '' END AS INTEGER)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON (- ((rt0.c0 IN ()))) RIGHT OUTER JOIN v0 ON (((vt1.c0)GLOB(v0.c0)) IN (((595592820) NOT BETWEEN (rt0.c1) AND (vt1.c0)), 0X5011e171)));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON (- ((rt0.c0 IN ()))) RIGHT OUTER JOIN v0 ON (((vt1.c0)GLOB(v0.c0)) IN (((595592820) NOT BETWEEN (rt0.c1) AND (vt1.c0)), 0x5011e171)) WHERE (CAST(CASE rt0.c1  WHEN vt1.c0 THEN '' END AS INTEGER));
SELECT COUNT(*) FROM rt0, v0 WHERE (((rt0.c0 COLLATE RTRIM)==(((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE RTRIM)=(((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((rt0.c0 COLLATE RTRIM)==(((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE RTRIM)=(((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((rt0.c0 COLLATE RTRIM)==(((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT * FROM vt1, v0, rt0 WHERE (NULL) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, v0, rt0 ORDER BY rt0.c2 DESC);
SELECT * FROM vt1, v0, rt0 WHERE (NULL) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, v0, rt0 ORDER BY rt0.c2 DESC);
SELECT * FROM vt1, v0, rt0 WHERE (NULL) ORDER BY rt0.c2 DESC;
SELECT * FROM vt1, v0 WHERE (CAST((vt1.c0 IN ()) AS NUMERIC)) ORDER BY (((((((((NOT (x'')))AND(((v0.c0) NOT NULL))))AND(((((v0.c0)OR(vt1.c0)))AND(vt1.c0)))))OR(CASE WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(UNLIKELY(vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt1.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt1, v0 ORDER BY (((((((((NOT (x'')))AND(((v0.c0) NOT NULL))))AND(((((v0.c0)OR(vt1.c0)))AND(vt1.c0)))))OR(CASE WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(UNLIKELY(vt1.c0)))  NULLS FIRST);
SELECT * FROM vt1, v0 WHERE (CAST((vt1.c0 IN ()) AS NUMERIC)) ORDER BY (((((((((NOT (x'')))AND(((v0.c0) NOT NULL))))AND(((((v0.c0)OR(vt1.c0)))AND(vt1.c0)))))OR(CASE WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(UNLIKELY(vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt1.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt1, v0 ORDER BY (((((((((NOT (x'')))AND(((v0.c0) NOT NULL))))AND(((((v0.c0)OR(vt1.c0)))AND(vt1.c0)))))OR(CASE WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(UNLIKELY(vt1.c0)))  NULLS FIRST);
SELECT * FROM vt1, v0 WHERE (CAST((vt1.c0 IN ()) AS NUMERIC)) ORDER BY (((((((((NOT (x'')))AND(((v0.c0) NOT NULL))))AND(((((v0.c0)OR(vt1.c0)))AND(vt1.c0)))))OR(CASE WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(UNLIKELY(vt1.c0)))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (((NOT (vt1.c0)) IN ())) ORDER BY vt1.c0 DESC, (((vt1.c0, '-1752382724', '-385117376')) BETWEEN ((((0.11613254678531493)<(vt1.c0)), 'xzE>', vt1.c0 COLLATE BINARY)) AND ((vt1.c0 COLLATE NOCASE, (((vt1.c0))<>((vt1.c0))), vt1.c0 COLLATE NOCASE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NOT (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC, (((vt1.c0, '-1752382724', '-385117376')) BETWEEN ((((0.11613254678531493)<(vt1.c0)), 'xzE>', vt1.c0 COLLATE BINARY)) AND ((vt1.c0 COLLATE NOCASE, (((vt1.c0))<>((vt1.c0))), vt1.c0 COLLATE NOCASE))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((NOT (vt1.c0)) IN ())) ORDER BY vt1.c0 DESC, (((vt1.c0, '-1752382724', '-385117376')) BETWEEN ((((0.11613254678531493)<(vt1.c0)), 'xzE>', vt1.c0 COLLATE BINARY)) AND ((vt1.c0 COLLATE NOCASE, (((vt1.c0))<>((vt1.c0))), vt1.c0 COLLATE NOCASE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NOT (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC, (((vt1.c0, '-1752382724', '-385117376')) BETWEEN ((((0.11613254678531493)<(vt1.c0)), 'xzE>', vt1.c0 COLLATE BINARY)) AND ((vt1.c0 COLLATE NOCASE, (((vt1.c0))<>((vt1.c0))), vt1.c0 COLLATE NOCASE))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((NOT (vt1.c0)) IN ())) ORDER BY vt1.c0 DESC, (((vt1.c0, '-1752382724', '-385117376')) BETWEEN ((((0.11613254678531493)<(vt1.c0)), 'xzE>', vt1.c0 COLLATE BINARY)) AND ((vt1.c0 COLLATE NOCASE, (((vt1.c0))<>((vt1.c0))), vt1.c0 COLLATE NOCASE))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON CASE WHEN ((vt1.c0)%(rt0.c0)) THEN ((((((((rt0.c0)OR(0.6388031799977087)))OR(rt0.c0)))AND(rt0.c0)))OR(1.627525309E9)) END WHERE ((((((rt0.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c0)))) IS TRUE)) ORDER BY CAST(CASE vt1.c0  WHEN vt1.c0 THEN rt0.c0 ELSE vt1.c0 END AS INTEGER), ((((rt0.c2)||(rt0.c1)))/(((((vt1.c0)OR(vt1.c0)))AND(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c0)))) IS TRUE)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON CASE WHEN ((vt1.c0)%(rt0.c0)) THEN ((((((((rt0.c0)OR(0.6388031799977087)))OR(rt0.c0)))AND(rt0.c0)))OR(1.627525309E9)) END ORDER BY CAST(CASE vt1.c0  WHEN vt1.c0 THEN rt0.c0 ELSE vt1.c0 END AS INTEGER), ((((rt0.c2)||(rt0.c1)))/(((((vt1.c0)OR(vt1.c0)))AND(rt0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON CASE WHEN ((vt1.c0)%(rt0.c0)) THEN ((((((((rt0.c0)OR(0.6388031799977087)))OR(rt0.c0)))AND(rt0.c0)))OR(1.627525309E9)) END WHERE ((((((rt0.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c0)))) IS TRUE)) ORDER BY CAST(CASE vt1.c0  WHEN vt1.c0 THEN rt0.c0 ELSE vt1.c0 END AS INTEGER), ((((rt0.c2)||(rt0.c1)))/(((((vt1.c0)OR(vt1.c0)))AND(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c0)))) IS TRUE)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON CASE WHEN ((vt1.c0)%(rt0.c0)) THEN ((((((((rt0.c0)OR(0.6388031799977087)))OR(rt0.c0)))AND(rt0.c0)))OR(1.627525309E9)) END ORDER BY CAST(CASE vt1.c0  WHEN vt1.c0 THEN rt0.c0 ELSE vt1.c0 END AS INTEGER), ((((rt0.c2)||(rt0.c1)))/(((((vt1.c0)OR(vt1.c0)))AND(rt0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON CASE WHEN ((vt1.c0)%(rt0.c0)) THEN ((((((((rt0.c0)OR(0.6388031799977087)))OR(rt0.c0)))AND(rt0.c0)))OR(1.627525309E9)) END WHERE ((((((rt0.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c0)))) IS TRUE)) ORDER BY CAST(CASE vt1.c0  WHEN vt1.c0 THEN rt0.c0 ELSE vt1.c0 END AS INTEGER), ((((rt0.c2)||(rt0.c1)))/(((((vt1.c0)OR(vt1.c0)))AND(rt0.c2))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (json_patch((((v0.c0))=((v0.c0))), CASE WHEN v0.c0 THEN v0.c0 ELSE x'' END));
SELECT SUM(count) FROM (SELECT ((json_patch((((v0.c0))=((v0.c0))), CASE WHEN v0.c0 THEN v0.c0 ELSE x'' END)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (json_patch((((v0.c0))=((v0.c0))), CASE WHEN v0.c0 THEN v0.c0 ELSE x'' END));
SELECT SUM(count) FROM (SELECT ((json_patch((((v0.c0))=((v0.c0))), CASE WHEN v0.c0 THEN v0.c0 ELSE x'' END)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (json_patch((((v0.c0))=((v0.c0))), CASE WHEN v0.c0 THEN v0.c0 ELSE x'' END));
SELECT COUNT(*) FROM vt1, v0, rt0 WHERE (CAST((- (rt0.c1)) AS REAL)) ORDER BY CASE rt0.c1 COLLATE RTRIM  WHEN (v0.c0 IN (vt1.c0)) THEN (vt1.c0 IN ()) ELSE rt0.c0 COLLATE BINARY END;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (rt0.c1)) AS REAL)) IS TRUE)  as count FROM vt1, v0, rt0 ORDER BY CASE rt0.c1 COLLATE RTRIM  WHEN (v0.c0 IN (vt1.c0)) THEN (vt1.c0 IN ()) ELSE rt0.c0 COLLATE BINARY END);
SELECT COUNT(*) FROM vt1, v0, rt0 WHERE (CAST((- (rt0.c1)) AS REAL)) ORDER BY CASE rt0.c1 COLLATE RTRIM  WHEN (v0.c0 IN (vt1.c0)) THEN (vt1.c0 IN ()) ELSE rt0.c0 COLLATE BINARY END;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (rt0.c1)) AS REAL)) IS TRUE)  as count FROM vt1, v0, rt0 ORDER BY CASE rt0.c1 COLLATE RTRIM  WHEN (v0.c0 IN (vt1.c0)) THEN (vt1.c0 IN ()) ELSE rt0.c0 COLLATE BINARY END);
SELECT COUNT(*) FROM vt1, v0, rt0 WHERE (CAST((- (rt0.c1)) AS REAL)) ORDER BY CASE rt0.c1 COLLATE RTRIM  WHEN (v0.c0 IN (vt1.c0)) THEN (vt1.c0 IN ()) ELSE rt0.c0 COLLATE BINARY END;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)>(vt1.c0)) IN (vt1.c0 COLLATE BINARY, (vt1.c0 IN (vt1.c0))))) ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0)&(vt1.c0)))) AND (((('-1994124793')<=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)>(vt1.c0)) IN (vt1.c0 COLLATE BINARY, (vt1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0)&(vt1.c0)))) AND (((('-1994124793')<=(vt1.c0))))));
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)>(vt1.c0)) IN (vt1.c0 COLLATE BINARY, (vt1.c0 IN (vt1.c0))))) ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0)&(vt1.c0)))) AND (((('-1994124793')<=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)>(vt1.c0)) IN (vt1.c0 COLLATE BINARY, (vt1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0)&(vt1.c0)))) AND (((('-1994124793')<=(vt1.c0))))));
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)>(vt1.c0)) IN (vt1.c0 COLLATE BINARY, (vt1.c0 IN (vt1.c0))))) ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0)&(vt1.c0)))) AND (((('-1994124793')<=(vt1.c0)))));
SELECT ALL * FROM vt1, v0, rt0 WHERE (CASE ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))  WHEN (- (rt0.c1)) THEN CAST(rt0.c2 AS INTEGER) WHEN ((((((((0.24277374476567803)OR(vt1.c0)))OR(rt0.c0)))OR(rt0.c0)))OR(v0.c0)) THEN x'c550' WHEN NULL THEN CAST(vt1.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))  WHEN (- (rt0.c1)) THEN CAST(rt0.c2 AS INTEGER) WHEN ((((((((0.24277374476567803)OR(vt1.c0)))OR(rt0.c0)))OR(rt0.c0)))OR(v0.c0)) THEN x'c550' WHEN NULL THEN CAST(vt1.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt1, v0, rt0);
SELECT ALL * FROM vt1, v0, rt0 WHERE (CASE ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))  WHEN (- (rt0.c1)) THEN CAST(rt0.c2 AS INTEGER) WHEN ((((((((0.24277374476567803)OR(vt1.c0)))OR(rt0.c0)))OR(rt0.c0)))OR(v0.c0)) THEN x'c550' WHEN NULL THEN CAST(vt1.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))  WHEN (- (rt0.c1)) THEN CAST(rt0.c2 AS INTEGER) WHEN ((((((((0.24277374476567803)OR(vt1.c0)))OR(rt0.c0)))OR(rt0.c0)))OR(v0.c0)) THEN x'c550' WHEN NULL THEN CAST(vt1.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt1, v0, rt0);
SELECT ALL * FROM vt1, v0, rt0 WHERE (CASE ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))  WHEN (- (rt0.c1)) THEN CAST(rt0.c2 AS INTEGER) WHEN ((((((((0.24277374476567803)OR(vt1.c0)))OR(rt0.c0)))OR(rt0.c0)))OR(v0.c0)) THEN x'c550' WHEN NULL THEN CAST(vt1.c0 AS NUMERIC) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)) AS INTEGER));
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((rt0.c1)>=(rt0.c1)))AND((rt0.c1 IN ()))))AND((((rt0.c1)) NOT BETWEEN ((x'')) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)>=(rt0.c1)))AND((rt0.c1 IN ()))))AND((((rt0.c1)) NOT BETWEEN ((x'')) AND ((v0.c0)))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((rt0.c1)>=(rt0.c1)))AND((rt0.c1 IN ()))))AND((((rt0.c1)) NOT BETWEEN ((x'')) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)>=(rt0.c1)))AND((rt0.c1 IN ()))))AND((((rt0.c1)) NOT BETWEEN ((x'')) AND ((v0.c0)))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((rt0.c1)>=(rt0.c1)))AND((rt0.c1 IN ()))))AND((((rt0.c1)) NOT BETWEEN ((x'')) AND ((v0.c0))))));
SELECT * FROM v0, vt1, rt0 WHERE (((CASE WHEN v0.c0 THEN rt0.c1 WHEN 0.5436137204545072 THEN -1.013062723E9 WHEN rt0.c2 THEN rt0.c2 END)||((((rt0.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c1 END)OR((rt0.c2 IN ()))))OR(CASE vt1.c0  WHEN rt0.c2 THEN vt1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN rt0.c1 WHEN 0.5436137204545072 THEN -1.013062723E9 WHEN rt0.c2 THEN rt0.c2 END)||((((rt0.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c1 END)OR((rt0.c2 IN ()))))OR(CASE vt1.c0  WHEN rt0.c2 THEN vt1.c0 END))  NULLS LAST);
SELECT * FROM v0, vt1, rt0 WHERE (((CASE WHEN v0.c0 THEN rt0.c1 WHEN 0.5436137204545072 THEN -1.013062723E9 WHEN rt0.c2 THEN rt0.c2 END)||((((rt0.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c1 END)OR((rt0.c2 IN ()))))OR(CASE vt1.c0  WHEN rt0.c2 THEN vt1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN rt0.c1 WHEN 0.5436137204545072 THEN -1.013062723E9 WHEN rt0.c2 THEN rt0.c2 END)||((((rt0.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c1 END)OR((rt0.c2 IN ()))))OR(CASE vt1.c0  WHEN rt0.c2 THEN vt1.c0 END))  NULLS LAST);
SELECT * FROM v0, vt1, rt0 WHERE (((CASE WHEN v0.c0 THEN rt0.c1 WHEN 0.5436137204545072 THEN -1.013062723E9 WHEN rt0.c2 THEN rt0.c2 END)||((((rt0.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c1 END)OR((rt0.c2 IN ()))))OR(CASE vt1.c0  WHEN rt0.c2 THEN vt1.c0 END))  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0 WHERE ((((('-734182844')OR(((rt0.c0)/(rt0.c0)))))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT (((((('-734182844')OR(((rt0.c0)/(rt0.c0)))))AND(v0.c0))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((('-734182844')OR(((rt0.c0)/(rt0.c0)))))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT (((((('-734182844')OR(((rt0.c0)/(rt0.c0)))))AND(v0.c0))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((('-734182844')OR(((rt0.c0)/(rt0.c0)))))AND(v0.c0)));
SELECT ALL * FROM v0, vt1, rt0 WHERE (TRIM(DISTINCT ((vt1.c0) BETWEEN ('*6%8,tL') AND (rt0.c2)), LTRIM(vt1.c0, v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((vt1.c0) BETWEEN ('*6%8,tL') AND (rt0.c2)), LTRIM(vt1.c0, v0.c0))) IS TRUE)  as count FROM v0, vt1, rt0);
SELECT ALL * FROM v0, vt1, rt0 WHERE (TRIM(DISTINCT ((vt1.c0) BETWEEN ('*6%8,tL') AND (rt0.c2)), LTRIM(vt1.c0, v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((vt1.c0) BETWEEN ('*6%8,tL') AND (rt0.c2)), LTRIM(vt1.c0, v0.c0))) IS TRUE)  as count FROM v0, vt1, rt0);
SELECT ALL * FROM v0, vt1, rt0 WHERE (TRIM(DISTINCT ((vt1.c0) BETWEEN ('*6%8,tL') AND (rt0.c2)), LTRIM(vt1.c0, v0.c0)));
SELECT COUNT(*) FROM v0, rt0, vt1 WHERE ((((vt1.c0)%(vt1.c0)) IN (rt0.c2)));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)%(vt1.c0)) IN (rt0.c2))) IS TRUE)  as count FROM v0, rt0, vt1);
SELECT COUNT(*) FROM v0, rt0, vt1 WHERE ((((vt1.c0)%(vt1.c0)) IN (rt0.c2)));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)%(vt1.c0)) IN (rt0.c2))) IS TRUE)  as count FROM v0, rt0, vt1);
SELECT COUNT(*) FROM v0, rt0, vt1 WHERE ((((vt1.c0)%(vt1.c0)) IN (rt0.c2)));
SELECT ALL * FROM v0, rt0, vt1 WHERE (CAST((((v0.c0)) BETWEEN ((rt0.c2)) AND ((0.9116561185788666))) AS NUMERIC)) ORDER BY (((((v0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((v0.c0)) BETWEEN ((rt0.c2)) AND ((0.9116561185788666))) AS NUMERIC)) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY (((((v0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) NOTNULL) ASC  NULLS FIRST);
SELECT ALL * FROM v0, rt0, vt1 WHERE (CAST((((v0.c0)) BETWEEN ((rt0.c2)) AND ((0.9116561185788666))) AS NUMERIC)) ORDER BY (((((v0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((v0.c0)) BETWEEN ((rt0.c2)) AND ((0.9116561185788666))) AS NUMERIC)) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY (((((v0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) NOTNULL) ASC  NULLS FIRST);
SELECT ALL * FROM v0, rt0, vt1 WHERE (CAST((((v0.c0)) BETWEEN ((rt0.c2)) AND ((0.9116561185788666))) AS NUMERIC)) ORDER BY (((((v0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) NOTNULL) ASC  NULLS FIRST;
SELECT ALL * FROM rt0, v0, vt1 WHERE (CASE WHEN (+ (x'2e3c')) THEN (((rt0.c2))==((rt0.c2))) ELSE ((v0.c0)IS(NULL)) END) ORDER BY '0.10031767324384311'  NULLS LAST, (- ((NOT (v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (x'2e3c')) THEN (((rt0.c2))==((rt0.c2))) ELSE ((v0.c0)IS(NULL)) END) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY '0.10031767324384311'  NULLS LAST, (- ((NOT (v0.c0))))  NULLS LAST);
SELECT ALL * FROM rt0, v0, vt1 WHERE (CASE WHEN (+ (x'2e3c')) THEN (((rt0.c2))==((rt0.c2))) ELSE ((v0.c0)IS(NULL)) END) ORDER BY '0.10031767324384311'  NULLS LAST, (- ((NOT (v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (x'2e3c')) THEN (((rt0.c2))==((rt0.c2))) ELSE ((v0.c0)IS(NULL)) END) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY '0.10031767324384311'  NULLS LAST, (- ((NOT (v0.c0))))  NULLS LAST);
SELECT ALL * FROM rt0, v0, vt1 WHERE (CASE WHEN (+ (x'2e3c')) THEN (((rt0.c2))==((rt0.c2))) ELSE ((v0.c0)IS(NULL)) END) ORDER BY '0.10031767324384311'  NULLS LAST, (- ((NOT (v0.c0))))  NULLS LAST;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON (((((rt0.c0))<=((rt0.c0)))) IS TRUE) WHERE (((((rt0.c1) ISNULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) ISNULL)) ISNULL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (((((rt0.c0))<=((rt0.c0)))) IS TRUE));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON (((((rt0.c0))<=((rt0.c0)))) IS TRUE) WHERE (((((rt0.c1) ISNULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) ISNULL)) ISNULL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (((((rt0.c0))<=((rt0.c0)))) IS TRUE));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON (((((rt0.c0))<=((rt0.c0)))) IS TRUE) WHERE (((((rt0.c1) ISNULL)) ISNULL));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))IS NOT(NULL))) ORDER BY CAST(((vt1.c0)&(vt1.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))IS NOT(NULL))) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0)&(vt1.c0)) AS INTEGER));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))IS NOT(NULL))) ORDER BY CAST(((vt1.c0)&(vt1.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))IS NOT(NULL))) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0)&(vt1.c0)) AS INTEGER));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))IS NOT(NULL))) ORDER BY CAST(((vt1.c0)&(vt1.c0)) AS INTEGER);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)GLOB(vt1.c0)))IS((~ (vt1.c0))))) ORDER BY ((vt1.c0)/(CASE WHEN vt1.c0 THEN vt1.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)GLOB(vt1.c0)))IS((~ (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)/(CASE WHEN vt1.c0 THEN vt1.c0 END)) DESC);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)GLOB(vt1.c0)))IS((~ (vt1.c0))))) ORDER BY ((vt1.c0)/(CASE WHEN vt1.c0 THEN vt1.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)GLOB(vt1.c0)))IS((~ (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)/(CASE WHEN vt1.c0 THEN vt1.c0 END)) DESC);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)GLOB(vt1.c0)))IS((~ (vt1.c0))))) ORDER BY ((vt1.c0)/(CASE WHEN vt1.c0 THEN vt1.c0 END)) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL * FROM v0, vt1, rt0 WHERE ((((rt0.c1, rt0.c1, rt0.c0)) BETWEEN ((vt1.c0, vt1.c0, rt0.c0)) AND ((vt1.c0, rt0.c0, vt1.c0))) COLLATE NOCASE) ORDER BY ((((CASE rt0.c0  WHEN vt1.c0 THEN rt0.c0 END)AND(CAST(rt0.c1 AS TEXT))))OR((rt0.c1 IN ()))), CAST((- (rt0.c2)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c1, rt0.c0)) BETWEEN ((vt1.c0, vt1.c0, rt0.c0)) AND ((vt1.c0, rt0.c0, vt1.c0))) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY ((((CASE rt0.c0  WHEN vt1.c0 THEN rt0.c0 END)AND(CAST(rt0.c1 AS TEXT))))OR((rt0.c1 IN ()))), CAST((- (rt0.c2)) AS REAL));
SELECT ALL * FROM v0, vt1, rt0 WHERE ((((rt0.c1, rt0.c1, rt0.c0)) BETWEEN ((vt1.c0, vt1.c0, rt0.c0)) AND ((vt1.c0, rt0.c0, vt1.c0))) COLLATE NOCASE) ORDER BY ((((CASE rt0.c0  WHEN vt1.c0 THEN rt0.c0 END)AND(CAST(rt0.c1 AS TEXT))))OR((rt0.c1 IN ()))), CAST((- (rt0.c2)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c1, rt0.c0)) BETWEEN ((vt1.c0, vt1.c0, rt0.c0)) AND ((vt1.c0, rt0.c0, vt1.c0))) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY ((((CASE rt0.c0  WHEN vt1.c0 THEN rt0.c0 END)AND(CAST(rt0.c1 AS TEXT))))OR((rt0.c1 IN ()))), CAST((- (rt0.c2)) AS REAL));
SELECT ALL * FROM v0, vt1, rt0 WHERE ((((rt0.c1, rt0.c1, rt0.c0)) BETWEEN ((vt1.c0, vt1.c0, rt0.c0)) AND ((vt1.c0, rt0.c0, vt1.c0))) COLLATE NOCASE) ORDER BY ((((CASE rt0.c0  WHEN vt1.c0 THEN rt0.c0 END)AND(CAST(rt0.c1 AS TEXT))))OR((rt0.c1 IN ()))), CAST((- (rt0.c2)) AS REAL);
SELECT ALL * FROM v0, rt0 WHERE (((v0.c0) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (((rt0.c0)IS NOT(rt0.c2))))) ORDER BY CAST(((rt0.c1)=(rt0.c0)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (((rt0.c0)IS NOT(rt0.c2))))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(((rt0.c1)=(rt0.c0)) AS BLOB)  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE (((v0.c0) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (((rt0.c0)IS NOT(rt0.c2))))) ORDER BY CAST(((rt0.c1)=(rt0.c0)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (((rt0.c0)IS NOT(rt0.c2))))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(((rt0.c1)=(rt0.c0)) AS BLOB)  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE (((v0.c0) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (((rt0.c0)IS NOT(rt0.c2))))) ORDER BY CAST(((rt0.c1)=(rt0.c0)) AS BLOB)  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (CAST(NULLIF(rt0.c1, rt0.c2) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULLIF(rt0.c1, rt0.c2) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(NULLIF(rt0.c1, rt0.c2) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULLIF(rt0.c1, rt0.c2) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(NULLIF(rt0.c1, rt0.c2) AS INTEGER));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c0)-(rt0.c2)))) AND (((+ (rt0.c0)))))) ORDER BY (CAST(rt0.c1 AS REAL) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((((rt0.c0)-(rt0.c2)))) AND (((+ (rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c1 AS REAL) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c0)-(rt0.c2)))) AND (((+ (rt0.c0)))))) ORDER BY (CAST(rt0.c1 AS REAL) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((((rt0.c0)-(rt0.c2)))) AND (((+ (rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c1 AS REAL) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c0)-(rt0.c2)))) AND (((+ (rt0.c0)))))) ORDER BY (CAST(rt0.c1 AS REAL) IN ()) ASC  NULLS LAST;
SELECT * FROM v0 WHERE (((v0.c0 COLLATE NOCASE)>=(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'' ELSE v0.c0 END))) ORDER BY (((((0.0010854733414192852)<(v0.c0)), (~ (v0.c0)), CASE -2010387880  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))!=(((((0xffffffff8c66cfac, v0.c0, v0.c0))!=((v0.c0, v0.c0, v0.c0))), '-1584486367', LOWER(v0.c0))))  NULLS LAST, (((((v0.c0)<>(v0.c0)), CAST(v0.c0 AS BLOB), CAST(v0.c0 AS INTEGER)))>((((((v0.c0)OR(v0.c0)))OR(v0.c0)), ((((v0.c0)AND(v0.c0)))AND(0.1365794844450271)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE)>=(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'' ELSE v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY (((((0.0010854733414192852)<(v0.c0)), (~ (v0.c0)), CASE -2010387880  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))!=(((((0xffffffff8c66cfac, v0.c0, v0.c0))!=((v0.c0, v0.c0, v0.c0))), '-1584486367', LOWER(v0.c0))))  NULLS LAST, (((((v0.c0)!=(v0.c0)), CAST(v0.c0 AS BLOB), CAST(v0.c0 AS INTEGER)))>((((((v0.c0)OR(v0.c0)))OR(v0.c0)), ((((v0.c0)AND(v0.c0)))AND(0.1365794844450271)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))  NULLS LAST);
SELECT * FROM v0 WHERE (((v0.c0 COLLATE NOCASE)>=(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'' ELSE v0.c0 END))) ORDER BY (((((0.0010854733414192852)<(v0.c0)), (~ (v0.c0)), CASE -2010387880  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))!=(((((0xffffffff8c66cfac, v0.c0, v0.c0))!=((v0.c0, v0.c0, v0.c0))), '-1584486367', LOWER(v0.c0))))  NULLS LAST, (((((v0.c0)<>(v0.c0)), CAST(v0.c0 AS BLOB), CAST(v0.c0 AS INTEGER)))>((((((v0.c0)OR(v0.c0)))OR(v0.c0)), ((((v0.c0)AND(v0.c0)))AND(0.1365794844450271)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE)>=(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'' ELSE v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY (((((0.0010854733414192852)<(v0.c0)), (~ (v0.c0)), CASE -2010387880  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))!=(((((0xffffffff8c66cfac, v0.c0, v0.c0))!=((v0.c0, v0.c0, v0.c0))), '-1584486367', LOWER(v0.c0))))  NULLS LAST, (((((v0.c0)!=(v0.c0)), CAST(v0.c0 AS BLOB), CAST(v0.c0 AS INTEGER)))>((((((v0.c0)OR(v0.c0)))OR(v0.c0)), ((((v0.c0)AND(v0.c0)))AND(0.1365794844450271)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))  NULLS LAST);
SELECT * FROM v0 WHERE (((v0.c0 COLLATE NOCASE)>=(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'' ELSE v0.c0 END))) ORDER BY (((((0.0010854733414192852)<(v0.c0)), (~ (v0.c0)), CASE -2010387880  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))!=(((((0xffffffff8c66cfac, v0.c0, v0.c0))!=((v0.c0, v0.c0, v0.c0))), '-1584486367', LOWER(v0.c0))))  NULLS LAST, (((((v0.c0)<>(v0.c0)), CAST(v0.c0 AS BLOB), CAST(v0.c0 AS INTEGER)))>((((((v0.c0)OR(v0.c0)))OR(v0.c0)), ((((v0.c0)AND(v0.c0)))AND(0.1365794844450271)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE ((v0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((v0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((v0.c0 IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))OR(0.05012519665580617)))AND(rt0.c0)))%(((((rt0.c1)OR(rt0.c2)))OR(rt0.c0))))) ORDER BY ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END) AND (((rt0.c0)&(rt0.c0)))) ASC, ((((((835265439)AND(rt0.c1)))OR(((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))))OR(((rt0.c1) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))OR(0.05012519665580617)))AND(rt0.c0)))%(((((rt0.c1)OR(rt0.c2)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END) AND (((rt0.c0)&(rt0.c0)))) ASC, ((((((835265439)AND(rt0.c1)))OR(((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))))OR(((rt0.c1) ISNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))OR(0.05012519665580617)))AND(rt0.c0)))%(((((rt0.c1)OR(rt0.c2)))OR(rt0.c0))))) ORDER BY ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END) AND (((rt0.c0)&(rt0.c0)))) ASC, ((((((835265439)AND(rt0.c1)))OR(((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))))OR(((rt0.c1) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))OR(0.05012519665580617)))AND(rt0.c0)))%(((((rt0.c1)OR(rt0.c2)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END) AND (((rt0.c0)&(rt0.c0)))) ASC, ((((((835265439)AND(rt0.c1)))OR(((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))))OR(((rt0.c1) ISNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))OR(0.05012519665580617)))AND(rt0.c0)))%(((((rt0.c1)OR(rt0.c2)))OR(rt0.c0))))) ORDER BY ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END) AND (((rt0.c0)&(rt0.c0)))) ASC, ((((((835265439)AND(rt0.c1)))OR(((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))))OR(((rt0.c1) ISNULL)))  NULLS LAST;
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN v0 ON ((((((v0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)))OR((~ (rt0.c0)))))OR(LIKE(vt1.c0, x'0a83', '/'))) INNER JOIN rt0 ON ((((((((((((((NULL)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(rt0.c0)))AND(v0.c0)))AND(rt0.c2)))IS NOT(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) WHERE (((((rt0.c0)>=(vt1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)>=(vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN v0 ON ((((((v0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)))OR((~ (rt0.c0)))))OR(LIKE(vt1.c0, x'0a83', '/'))) INNER JOIN rt0 ON ((((((((((((((NULL)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(rt0.c0)))AND(v0.c0)))AND(rt0.c2)))IS NOT(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN v0 ON ((((((v0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)))OR((~ (rt0.c0)))))OR(LIKE(vt1.c0, x'0a83', '/'))) INNER JOIN rt0 ON ((((((((((((((NULL)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(rt0.c0)))AND(v0.c0)))AND(rt0.c2)))IS NOT(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) WHERE (((((rt0.c0)>=(vt1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)>=(vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN v0 ON ((((((v0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)))OR((~ (rt0.c0)))))OR(LIKE(vt1.c0, x'0a83', '/'))) INNER JOIN rt0 ON ((((((((((((((NULL)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(rt0.c0)))AND(v0.c0)))AND(rt0.c2)))IS NOT(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT ALL * FROM v0 WHERE (CASE ((v0.c0)!=(v0.c0))  WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 END THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE x'46f7' END WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN v0.c0 WHEN v0.c0 THEN (~ (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)<>(v0.c0))  WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 END THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE x'46f7' END WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN v0.c0 WHEN v0.c0 THEN (~ (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE ((v0.c0)!=(v0.c0))  WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 END THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE x'46f7' END WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN v0.c0 WHEN v0.c0 THEN (~ (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)<>(v0.c0))  WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 END THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE x'46f7' END WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN v0.c0 WHEN v0.c0 THEN (~ (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE ((v0.c0)!=(v0.c0))  WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 END THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE x'46f7' END WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN v0.c0 WHEN v0.c0 THEN (~ (v0.c0)) END);
SELECT * FROM vt1 WHERE (((((~ (vt1.c0))))<((CAST(vt1.c0 AS INTEGER))))) ORDER BY (((((~ (vt1.c0)))OR(ABS(vt1.c0))))OR(((vt1.c0)%(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((~ (vt1.c0))))<((CAST(vt1.c0 AS INTEGER))))) IS TRUE)  as count FROM vt1 ORDER BY (((((~ (vt1.c0)))OR(ABS(vt1.c0))))OR(((vt1.c0)%(vt1.c0)))));
SELECT * FROM vt1 WHERE (((((~ (vt1.c0))))<((CAST(vt1.c0 AS INTEGER))))) ORDER BY (((((~ (vt1.c0)))OR(ABS(vt1.c0))))OR(((vt1.c0)%(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((~ (vt1.c0))))<((CAST(vt1.c0 AS INTEGER))))) IS TRUE)  as count FROM vt1 ORDER BY (((((~ (vt1.c0)))OR(ABS(vt1.c0))))OR(((vt1.c0)%(vt1.c0)))));
SELECT * FROM vt1 WHERE (((((~ (vt1.c0))))<((CAST(vt1.c0 AS INTEGER))))) ORDER BY (((((~ (vt1.c0)))OR(ABS(vt1.c0))))OR(((vt1.c0)%(vt1.c0))));
SELECT COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)>(vt1.c0))) ORDER BY CAST((+ (vt1.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)>(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY CAST((+ (vt1.c0)) AS REAL));
SELECT COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)>(vt1.c0))) ORDER BY CAST((+ (vt1.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)>(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY CAST((+ (vt1.c0)) AS REAL));
SELECT COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)>(vt1.c0))) ORDER BY CAST((+ (vt1.c0)) AS REAL);
SELECT ALL COUNT(*) FROM rt0, vt1 FULL OUTER JOIN v0 ON ((((-532013604 IN ()), ((rt0.c1) NOT NULL), LIKELY(vt1.c0), v0.c0 COLLATE BINARY, CASE WHEN rt0.c1 THEN rt0.c2 END))>((CAST(NULL AS REAL), rt0.c1 COLLATE NOCASE, rt0.c1, CASE WHEN 0.3514488651332498 THEN rt0.c1 ELSE 0.6644122661883096 END, (- (vt1.c0))))) WHERE (((CASE vt1.c0  WHEN v0.c0 THEN rt0.c2 END) IS FALSE)) ORDER BY rt0.c2 COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN v0.c0 THEN rt0.c2 END) IS FALSE)) IS TRUE)  as count FROM rt0, vt1 FULL OUTER JOIN v0 ON ((((-532013604 IN ()), ((rt0.c1) NOT NULL), LIKELY(vt1.c0), v0.c0 COLLATE BINARY, CASE WHEN rt0.c1 THEN rt0.c2 END))>((CAST(NULL AS REAL), rt0.c1 COLLATE NOCASE, rt0.c1, CASE WHEN 0.3514488651332498 THEN rt0.c1 ELSE 0.6644122661883096 END, (- (vt1.c0))))) ORDER BY rt0.c2 COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 FULL OUTER JOIN v0 ON ((((-532013604 IN ()), ((rt0.c1) NOT NULL), LIKELY(vt1.c0), v0.c0 COLLATE BINARY, CASE WHEN rt0.c1 THEN rt0.c2 END))>((CAST(NULL AS REAL), rt0.c1 COLLATE NOCASE, rt0.c1, CASE WHEN 0.3514488651332498 THEN rt0.c1 ELSE 0.6644122661883096 END, (- (vt1.c0))))) WHERE (((CASE vt1.c0  WHEN v0.c0 THEN rt0.c2 END) IS FALSE)) ORDER BY rt0.c2 COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN v0.c0 THEN rt0.c2 END) IS FALSE)) IS TRUE)  as count FROM rt0, vt1 FULL OUTER JOIN v0 ON ((((-532013604 IN ()), ((rt0.c1) NOT NULL), LIKELY(vt1.c0), v0.c0 COLLATE BINARY, CASE WHEN rt0.c1 THEN rt0.c2 END))>((CAST(NULL AS REAL), rt0.c1 COLLATE NOCASE, rt0.c1, CASE WHEN 0.3514488651332498 THEN rt0.c1 ELSE 0.6644122661883096 END, (- (vt1.c0))))) ORDER BY rt0.c2 COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 FULL OUTER JOIN v0 ON ((((-532013604 IN ()), ((rt0.c1) NOT NULL), LIKELY(vt1.c0), v0.c0 COLLATE BINARY, CASE WHEN rt0.c1 THEN rt0.c2 END))>((CAST(NULL AS REAL), rt0.c1 COLLATE NOCASE, rt0.c1, CASE WHEN 0.3514488651332498 THEN rt0.c1 ELSE 0.6644122661883096 END, (- (vt1.c0))))) WHERE (((CASE vt1.c0  WHEN v0.c0 THEN rt0.c2 END) IS FALSE)) ORDER BY rt0.c2 COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt1, rt0 WHERE ((((((((((v0.c0 IN ()))AND(((rt0.c1)/(rt0.c1)))))OR(((0.7064291835860643)LIKE(rt0.c1)))))OR(((((((((v0.c0)AND(v0.c0)))AND(rt0.c2)))AND(rt0.c1)))OR(v0.c0)))))OR(CASE -186514978  WHEN vt1.c0 THEN rt0.c0 WHEN 1.967975617E9 THEN v0.c0 WHEN v0.c0 THEN 0Xffffffff950e617c ELSE rt0.c0 END))) ORDER BY (- (CAST(v0.c0 AS TEXT))) DESC, ((rt0.c1)-((v0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((v0.c0 IN ()))AND(((rt0.c1)/(rt0.c1)))))OR(((0.7064291835860643)LIKE(rt0.c1)))))OR(((((((((v0.c0)AND(v0.c0)))AND(rt0.c2)))AND(rt0.c1)))OR(v0.c0)))))OR(CASE -186514978  WHEN vt1.c0 THEN rt0.c0 WHEN 1.967975617E9 THEN v0.c0 WHEN v0.c0 THEN 0xffffffff950e617c ELSE rt0.c0 END))) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY (- (CAST(v0.c0 AS TEXT))) DESC, ((rt0.c1)-((v0.c0 IN ()))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt1, rt0 WHERE ((((((((((v0.c0 IN ()))AND(((rt0.c1)/(rt0.c1)))))OR(((0.7064291835860643)LIKE(rt0.c1)))))OR(((((((((v0.c0)AND(v0.c0)))AND(rt0.c2)))AND(rt0.c1)))OR(v0.c0)))))OR(CASE -186514978  WHEN vt1.c0 THEN rt0.c0 WHEN 1.967975617E9 THEN v0.c0 WHEN v0.c0 THEN 0Xffffffff950e617c ELSE rt0.c0 END))) ORDER BY (- (CAST(v0.c0 AS TEXT))) DESC, ((rt0.c1)-((v0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((v0.c0 IN ()))AND(((rt0.c1)/(rt0.c1)))))OR(((0.7064291835860643)LIKE(rt0.c1)))))OR(((((((((v0.c0)AND(v0.c0)))AND(rt0.c2)))AND(rt0.c1)))OR(v0.c0)))))OR(CASE -186514978  WHEN vt1.c0 THEN rt0.c0 WHEN 1.967975617E9 THEN v0.c0 WHEN v0.c0 THEN 0xffffffff950e617c ELSE rt0.c0 END))) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY (- (CAST(v0.c0 AS TEXT))) DESC, ((rt0.c1)-((v0.c0 IN ()))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt1, rt0 WHERE ((((((((((v0.c0 IN ()))AND(((rt0.c1)/(rt0.c1)))))OR(((0.7064291835860643)LIKE(rt0.c1)))))OR(((((((((v0.c0)AND(v0.c0)))AND(rt0.c2)))AND(rt0.c1)))OR(v0.c0)))))OR(CASE -186514978  WHEN vt1.c0 THEN rt0.c0 WHEN 1.967975617E9 THEN v0.c0 WHEN v0.c0 THEN 0Xffffffff950e617c ELSE rt0.c0 END))) ORDER BY (- (CAST(v0.c0 AS TEXT))) DESC, ((rt0.c1)-((v0.c0 IN ()))) ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt1, v0 WHERE (IFNULL(CAST(rt0.c2 AS TEXT), LENGTH(rt0.c0))) ORDER BY (((rt0.c2 IN ()))LIKE(CASE WHEN 'TRUE' THEN rt0.c0 WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c1 THEN 0xffffffffb63f9d92 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(CAST(rt0.c2 AS TEXT), LENGTH(rt0.c0))) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY (((rt0.c2 IN ()))LIKE(CASE WHEN 'TRUE' THEN rt0.c0 WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c1 THEN 0Xffffffffb63f9d92 END))  NULLS FIRST);
SELECT ALL * FROM rt0, vt1, v0 WHERE (IFNULL(CAST(rt0.c2 AS TEXT), LENGTH(rt0.c0))) ORDER BY (((rt0.c2 IN ()))LIKE(CASE WHEN 'TRUE' THEN rt0.c0 WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c1 THEN 0xffffffffb63f9d92 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(CAST(rt0.c2 AS TEXT), LENGTH(rt0.c0))) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY (((rt0.c2 IN ()))LIKE(CASE WHEN 'TRUE' THEN rt0.c0 WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c1 THEN 0Xffffffffb63f9d92 END))  NULLS FIRST);
SELECT ALL * FROM rt0, vt1, v0 WHERE (IFNULL(CAST(rt0.c2 AS TEXT), LENGTH(rt0.c0))) ORDER BY (((rt0.c2 IN ()))LIKE(CASE WHEN 'TRUE' THEN rt0.c0 WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c1 THEN 0xffffffffb63f9d92 END))  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((((TRIM(v0.c0))OR('\P%')))OR((~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((TRIM(v0.c0))OR('\P%')))OR((~ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((TRIM(v0.c0))OR('\P%')))OR((~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((TRIM(v0.c0))OR('\P%')))OR((~ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((TRIM(v0.c0))OR('\P%')))OR((~ (v0.c0)))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))))>=((((rt0.c2)AND(rt0.c0))))) FULL OUTER JOIN vt1 ON rt0.c2 COLLATE RTRIM WHERE (CAST(((vt1.c0) BETWEEN (rt0.c2) AND (vt1.c0)) AS TEXT)) ORDER BY (NOT ((((rt0.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, v0.c0)) AND ((rt0.c1, rt0.c2, rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) BETWEEN (rt0.c2) AND (vt1.c0)) AS TEXT)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))))>=((((rt0.c2)AND(rt0.c0))))) FULL OUTER JOIN vt1 ON rt0.c2 COLLATE RTRIM ORDER BY (NOT ((((rt0.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, v0.c0)) AND ((rt0.c1, rt0.c2, rt0.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))))>=((((rt0.c2)AND(rt0.c0))))) FULL OUTER JOIN vt1 ON rt0.c2 COLLATE RTRIM WHERE (CAST(((vt1.c0) BETWEEN (rt0.c2) AND (vt1.c0)) AS TEXT)) ORDER BY (NOT ((((rt0.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, v0.c0)) AND ((rt0.c1, rt0.c2, rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) BETWEEN (rt0.c2) AND (vt1.c0)) AS TEXT)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))))>=((((rt0.c2)AND(rt0.c0))))) FULL OUTER JOIN vt1 ON rt0.c2 COLLATE RTRIM ORDER BY (NOT ((((rt0.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, v0.c0)) AND ((rt0.c1, rt0.c2, rt0.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))))>=((((rt0.c2)AND(rt0.c0))))) FULL OUTER JOIN vt1 ON rt0.c2 COLLATE RTRIM WHERE (CAST(((vt1.c0) BETWEEN (rt0.c2) AND (vt1.c0)) AS TEXT)) ORDER BY (NOT ((((rt0.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, v0.c0)) AND ((rt0.c1, rt0.c2, rt0.c0)))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0, vt1 WHERE ((NOT (((rt0.c2) NOTNULL)))) ORDER BY ((((((((((((((((v0.c0)OR(vt1.c0)))OR(rt0.c1)))OR(CASE WHEN v0.c0 THEN 0.3224890968467644 ELSE v0.c0 END)))AND(((vt1.c0) NOTNULL))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))OR(CASE v0.c0  WHEN v0.c0 THEN rt0.c1 END)))AND((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))))))AND(rt0.c0 COLLATE RTRIM))  NULLS FIRST, CASE WHEN ((v0.c0)>=(0.6327205111782117)) THEN ((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c1)) WHEN (- (vt1.c0)) THEN NULL COLLATE RTRIM WHEN rt0.c0 THEN TYPEOF(DISTINCT rt0.c0) END, NULL DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY ((((((((((((((((v0.c0)OR(vt1.c0)))OR(rt0.c1)))OR(CASE WHEN v0.c0 THEN 0.3224890968467644 ELSE v0.c0 END)))AND(((vt1.c0) NOTNULL))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))OR(CASE v0.c0  WHEN v0.c0 THEN rt0.c1 END)))AND((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))))))AND(rt0.c0 COLLATE RTRIM))  NULLS FIRST, CASE WHEN ((v0.c0)>=(0.6327205111782117)) THEN ((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c1)) WHEN (- (vt1.c0)) THEN NULL COLLATE RTRIM WHEN rt0.c0 THEN TYPEOF(DISTINCT rt0.c0) END, NULL DESC);
SELECT COUNT(*) FROM rt0, v0, vt1 WHERE ((NOT (((rt0.c2) NOTNULL)))) ORDER BY ((((((((((((((((v0.c0)OR(vt1.c0)))OR(rt0.c1)))OR(CASE WHEN v0.c0 THEN 0.3224890968467644 ELSE v0.c0 END)))AND(((vt1.c0) NOTNULL))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))OR(CASE v0.c0  WHEN v0.c0 THEN rt0.c1 END)))AND((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))))))AND(rt0.c0 COLLATE RTRIM))  NULLS FIRST, CASE WHEN ((v0.c0)>=(0.6327205111782117)) THEN ((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c1)) WHEN (- (vt1.c0)) THEN NULL COLLATE RTRIM WHEN rt0.c0 THEN TYPEOF(DISTINCT rt0.c0) END, NULL DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY ((((((((((((((((v0.c0)OR(vt1.c0)))OR(rt0.c1)))OR(CASE WHEN v0.c0 THEN 0.3224890968467644 ELSE v0.c0 END)))AND(((vt1.c0) NOTNULL))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))OR(CASE v0.c0  WHEN v0.c0 THEN rt0.c1 END)))AND((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))))))AND(rt0.c0 COLLATE RTRIM))  NULLS FIRST, CASE WHEN ((v0.c0)>=(0.6327205111782117)) THEN ((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c1)) WHEN (- (vt1.c0)) THEN NULL COLLATE RTRIM WHEN rt0.c0 THEN TYPEOF(DISTINCT rt0.c0) END, NULL DESC);
SELECT COUNT(*) FROM rt0, v0, vt1 WHERE ((NOT (((rt0.c2) NOTNULL)))) ORDER BY ((((((((((((((((v0.c0)OR(vt1.c0)))OR(rt0.c1)))OR(CASE WHEN v0.c0 THEN 0.3224890968467644 ELSE v0.c0 END)))AND(((vt1.c0) NOTNULL))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))OR(CASE v0.c0  WHEN v0.c0 THEN rt0.c1 END)))AND((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))))))AND(rt0.c0 COLLATE RTRIM))  NULLS FIRST, CASE WHEN ((v0.c0)>=(0.6327205111782117)) THEN ((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c1)) WHEN (- (vt1.c0)) THEN NULL COLLATE RTRIM WHEN rt0.c0 THEN TYPEOF(DISTINCT rt0.c0) END, NULL DESC;
SELECT ALL COUNT(*) FROM v0, rt0, vt1 WHERE ((NOT (((rt0.c2)>(vt1.c0))))) ORDER BY (((vt1.c0)) NOT BETWEEN ((CAST(rt0.c2 AS BLOB))) AND ((rt0.c2 COLLATE BINARY)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2)>(vt1.c0))))) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((CAST(rt0.c2 AS BLOB))) AND ((rt0.c2 COLLATE BINARY)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0, vt1 WHERE ((NOT (((rt0.c2)>(vt1.c0))))) ORDER BY (((vt1.c0)) NOT BETWEEN ((CAST(rt0.c2 AS BLOB))) AND ((rt0.c2 COLLATE BINARY)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2)>(vt1.c0))))) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((CAST(rt0.c2 AS BLOB))) AND ((rt0.c2 COLLATE BINARY)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0, vt1 WHERE ((NOT (((rt0.c2)>(vt1.c0))))) ORDER BY (((vt1.c0)) NOT BETWEEN ((CAST(rt0.c2 AS BLOB))) AND ((rt0.c2 COLLATE BINARY)))  NULLS FIRST;
SELECT * FROM vt1, rt0 WHERE (((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0))) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((0.46352879575109807)))) AND (((vt1.c0)IS(vt1.c0))))) ORDER BY (((((((('-410613011')AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(rt0.c1)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0))) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((0.46352879575109807)))) AND (((vt1.c0)IS(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((((('-410613011')AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(rt0.c1)) COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0))) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((0.46352879575109807)))) AND (((vt1.c0)IS(vt1.c0))))) ORDER BY (((((((('-410613011')AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(rt0.c1)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0))) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((0.46352879575109807)))) AND (((vt1.c0)IS(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((((('-410613011')AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(rt0.c1)) COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0))) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((0.46352879575109807)))) AND (((vt1.c0)IS(vt1.c0))))) ORDER BY (((((((('-410613011')AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(rt0.c1)) COLLATE NOCASE DESC  NULLS LAST;
SELECT * FROM vt1, v0 WHERE ((((((vt1.c0)OR(vt1.c0)))OR(v0.c0)) IN ())) ORDER BY LOWER(((vt1.c0) NOT NULL)) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)OR(vt1.c0)))OR(v0.c0)) IN ())) IS TRUE)  as count FROM vt1, v0 ORDER BY LOWER(((vt1.c0) NOT NULL)) DESC);
SELECT * FROM vt1, v0 WHERE ((((((vt1.c0)OR(vt1.c0)))OR(v0.c0)) IN ())) ORDER BY LOWER(((vt1.c0) NOT NULL)) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)OR(vt1.c0)))OR(v0.c0)) IN ())) IS TRUE)  as count FROM vt1, v0 ORDER BY LOWER(((vt1.c0) NOT NULL)) DESC);
SELECT * FROM vt1, v0 WHERE ((((((vt1.c0)OR(vt1.c0)))OR(v0.c0)) IN ())) ORDER BY LOWER(((vt1.c0) NOT NULL)) DESC;
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) NOT BETWEEN (NULL) AND (((vt1.c0) ISNULL)))) ORDER BY (+ (vt1.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB)) NOT BETWEEN (NULL) AND (((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1 ORDER BY (+ (vt1.c0)) COLLATE BINARY ASC);
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) NOT BETWEEN (NULL) AND (((vt1.c0) ISNULL)))) ORDER BY (+ (vt1.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB)) NOT BETWEEN (NULL) AND (((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1 ORDER BY (+ (vt1.c0)) COLLATE BINARY ASC);
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) NOT BETWEEN (NULL) AND (((vt1.c0) ISNULL)))) ORDER BY (+ (vt1.c0)) COLLATE BINARY ASC;
SELECT ALL * FROM v0, vt1 WHERE (UNLIKELY((('-795428706') BETWEEN (v0.c0) AND (v0.c0)))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((UNLIKELY((('-795428706') BETWEEN (v0.c0) AND (v0.c0)))) IS TRUE)  as count FROM v0, vt1 ORDER BY NULL DESC);
SELECT ALL * FROM v0, vt1 WHERE (UNLIKELY((('-795428706') BETWEEN (v0.c0) AND (v0.c0)))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((UNLIKELY((('-795428706') BETWEEN (v0.c0) AND (v0.c0)))) IS TRUE)  as count FROM v0, vt1 ORDER BY NULL DESC);
SELECT ALL * FROM v0, vt1 WHERE (UNLIKELY((('-795428706') BETWEEN (v0.c0) AND (v0.c0)))) ORDER BY NULL DESC;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((((NULL)AND(((v0.c0)<<(v0.c0)))))AND(CAST(rt0.c1 AS REAL))) WHERE ((((((((((v0.c0 IN (rt0.c0, rt0.c1)))OR(((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))))OR(((v0.c0)IS(rt0.c2)))))AND(x'')))OR(((v0.c0) NOTNULL)))) ORDER BY ((((rt0.c0) ISNULL))IS(((NULL) NOT BETWEEN (v0.c0) AND (rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((v0.c0 IN (rt0.c0, rt0.c1)))OR(((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))))OR(((v0.c0)IS(rt0.c2)))))AND(x'')))OR(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((((NULL)AND(((v0.c0)<<(v0.c0)))))AND(CAST(rt0.c1 AS REAL))) ORDER BY ((((rt0.c0) ISNULL))IS(((NULL) NOT BETWEEN (v0.c0) AND (rt0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((((NULL)AND(((v0.c0)<<(v0.c0)))))AND(CAST(rt0.c1 AS REAL))) WHERE ((((((((((v0.c0 IN (rt0.c0, rt0.c1)))OR(((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))))OR(((v0.c0)IS(rt0.c2)))))AND(x'')))OR(((v0.c0) NOTNULL)))) ORDER BY ((((rt0.c0) ISNULL))IS(((NULL) NOT BETWEEN (v0.c0) AND (rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((v0.c0 IN (rt0.c0, rt0.c1)))OR(((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))))OR(((v0.c0)IS(rt0.c2)))))AND(x'')))OR(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((((NULL)AND(((v0.c0)<<(v0.c0)))))AND(CAST(rt0.c1 AS REAL))) ORDER BY ((((rt0.c0) ISNULL))IS(((NULL) NOT BETWEEN (v0.c0) AND (rt0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((((NULL)AND(((v0.c0)<<(v0.c0)))))AND(CAST(rt0.c1 AS REAL))) WHERE ((((((((((v0.c0 IN (rt0.c0, rt0.c1)))OR(((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))))OR(((v0.c0)IS(rt0.c2)))))AND(x'')))OR(((v0.c0) NOTNULL)))) ORDER BY ((((rt0.c0) ISNULL))IS(((NULL) NOT BETWEEN (v0.c0) AND (rt0.c1)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1, v0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE (vt1.c0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1)&(rt0.c2)) COLLATE BINARY) ORDER BY CAST(((rt0.c2)%(rt0.c1)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)&(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c2)%(rt0.c1)) AS BLOB) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1)&(rt0.c2)) COLLATE BINARY) ORDER BY CAST(((rt0.c2)%(rt0.c1)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)&(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c2)%(rt0.c1)) AS BLOB) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1)&(rt0.c2)) COLLATE BINARY) ORDER BY CAST(((rt0.c2)%(rt0.c1)) AS BLOB) DESC;
SELECT COUNT(*) FROM vt1 NOT INDEXED WHERE (((((vt1.c0)<(vt1.c0)))GLOB(vt1.c0))) ORDER BY (((NOT (vt1.c0))) ISNULL) ASC, vt1.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<(vt1.c0)))GLOB(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY (((NOT (vt1.c0))) ISNULL) ASC, vt1.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 NOT INDEXED WHERE (((((vt1.c0)<(vt1.c0)))GLOB(vt1.c0))) ORDER BY (((NOT (vt1.c0))) ISNULL) ASC, vt1.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<(vt1.c0)))GLOB(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY (((NOT (vt1.c0))) ISNULL) ASC, vt1.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 NOT INDEXED WHERE (((((vt1.c0)<(vt1.c0)))GLOB(vt1.c0))) ORDER BY (((NOT (vt1.c0))) ISNULL) ASC, vt1.c0 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((((vt1.c0) NOTNULL))LIKE(CAST(vt1.c0 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOTNULL))LIKE(CAST(vt1.c0 AS REAL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((((vt1.c0) NOTNULL))LIKE(CAST(vt1.c0 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOTNULL))LIKE(CAST(vt1.c0 AS REAL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((((vt1.c0) NOTNULL))LIKE(CAST(vt1.c0 AS REAL)))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c0 IN ())) IS FALSE) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c0 IN ())) IS FALSE));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c0 IN ())) IS FALSE) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c0 IN ())) IS FALSE));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c0 IN ())) IS FALSE) WHERE (v0.c0);
SELECT ALL * FROM vt1 WHERE (CAST((((((((('j '',d3')OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((((((('j '',d3')OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST((((((((('j '',d3')OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((((((('j '',d3')OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST((((((((('j '',d3')OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) AS INTEGER));
SELECT ALL * FROM vt1 NOT INDEXED, v0, rt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, v0, rt0);
SELECT ALL * FROM vt1 NOT INDEXED, v0, rt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, v0, rt0);
SELECT ALL * FROM vt1 NOT INDEXED, v0, rt0 WHERE (vt1.c0);
SELECT * FROM rt0, vt1, v0 WHERE (((rt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 IN ()) IN ())) IS TRUE)  as count FROM rt0, vt1, v0);
SELECT * FROM rt0, vt1, v0 WHERE (((rt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 IN ()) IN ())) IS TRUE)  as count FROM rt0, vt1, v0);
SELECT * FROM rt0, vt1, v0 WHERE (((rt0.c0 IN ()) IN ()));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON CAST(rt0.c0 COLLATE NOCASE AS NUMERIC) FULL OUTER JOIN v0 ON CASE ((rt0.c2)<=(rt0.c0))  WHEN '-410613011' COLLATE RTRIM THEN rt0.c0 WHEN rt0.c1 THEN ((rt0.c1)IS NOT(rt0.c2)) WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (NULL)) THEN ((((vt1.c0)OR(NULL)))OR(vt1.c0)) END WHERE (((((vt1.c0) ISNULL)) NOT BETWEEN (CASE WHEN v0.c0 THEN rt0.c1 ELSE rt0.c1 END) AND ((rt0.c1 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) ISNULL)) NOT BETWEEN (CASE WHEN v0.c0 THEN rt0.c1 ELSE rt0.c1 END) AND ((rt0.c1 IN (rt0.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON CAST(rt0.c0 COLLATE NOCASE AS NUMERIC) FULL OUTER JOIN v0 ON CASE ((rt0.c2)<=(rt0.c0))  WHEN '-410613011' COLLATE RTRIM THEN rt0.c0 WHEN rt0.c1 THEN ((rt0.c1)IS NOT(rt0.c2)) WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (NULL)) THEN ((((vt1.c0)OR(NULL)))OR(vt1.c0)) END);
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON CAST(rt0.c0 COLLATE NOCASE AS NUMERIC) FULL OUTER JOIN v0 ON CASE ((rt0.c2)<=(rt0.c0))  WHEN '-410613011' COLLATE RTRIM THEN rt0.c0 WHEN rt0.c1 THEN ((rt0.c1)IS NOT(rt0.c2)) WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (NULL)) THEN ((((vt1.c0)OR(NULL)))OR(vt1.c0)) END WHERE (((((vt1.c0) ISNULL)) NOT BETWEEN (CASE WHEN v0.c0 THEN rt0.c1 ELSE rt0.c1 END) AND ((rt0.c1 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) ISNULL)) NOT BETWEEN (CASE WHEN v0.c0 THEN rt0.c1 ELSE rt0.c1 END) AND ((rt0.c1 IN (rt0.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON CAST(rt0.c0 COLLATE NOCASE AS NUMERIC) FULL OUTER JOIN v0 ON CASE ((rt0.c2)<=(rt0.c0))  WHEN '-410613011' COLLATE RTRIM THEN rt0.c0 WHEN rt0.c1 THEN ((rt0.c1)IS NOT(rt0.c2)) WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (NULL)) THEN ((((vt1.c0)OR(NULL)))OR(vt1.c0)) END);
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON CAST(rt0.c0 COLLATE NOCASE AS NUMERIC) FULL OUTER JOIN v0 ON CASE ((rt0.c2)<=(rt0.c0))  WHEN '-410613011' COLLATE RTRIM THEN rt0.c0 WHEN rt0.c1 THEN ((rt0.c1)IS NOT(rt0.c2)) WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (NULL)) THEN ((((vt1.c0)OR(NULL)))OR(vt1.c0)) END WHERE (((((vt1.c0) ISNULL)) NOT BETWEEN (CASE WHEN v0.c0 THEN rt0.c1 ELSE rt0.c1 END) AND ((rt0.c1 IN (rt0.c0)))));
SELECT ALL COUNT(*) FROM vt1, rt0, v0 WHERE (CASE WHEN CAST(v0.c0 AS TEXT) THEN (+ (rt0.c2)) WHEN (vt1.c0 IN ()) THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (x'')) WHEN ((rt0.c2) NOTNULL) THEN (v0.c0 IN ()) ELSE NULLIF(DISTINCT v0.c0, rt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(v0.c0 AS TEXT) THEN (+ (rt0.c2)) WHEN (vt1.c0 IN ()) THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (x'')) WHEN ((rt0.c2) NOTNULL) THEN (v0.c0 IN ()) ELSE NULLIF(DISTINCT v0.c0, rt0.c0) END) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT ALL COUNT(*) FROM vt1, rt0, v0 WHERE (CASE WHEN CAST(v0.c0 AS TEXT) THEN (+ (rt0.c2)) WHEN (vt1.c0 IN ()) THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (x'')) WHEN ((rt0.c2) NOTNULL) THEN (v0.c0 IN ()) ELSE NULLIF(DISTINCT v0.c0, rt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(v0.c0 AS TEXT) THEN (+ (rt0.c2)) WHEN (vt1.c0 IN ()) THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (x'')) WHEN ((rt0.c2) NOTNULL) THEN (v0.c0 IN ()) ELSE NULLIF(DISTINCT v0.c0, rt0.c0) END) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT ALL COUNT(*) FROM vt1, rt0, v0 WHERE (CASE WHEN CAST(v0.c0 AS TEXT) THEN (+ (rt0.c2)) WHEN (vt1.c0 IN ()) THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (x'')) WHEN ((rt0.c2) NOTNULL) THEN (v0.c0 IN ()) ELSE NULLIF(DISTINCT v0.c0, rt0.c0) END);
SELECT ALL * FROM vt1 LEFT OUTER JOIN v0 ON (((x'', ((vt1.c0) NOTNULL), (v0.c0 IN ()), CAST(vt1.c0 AS NUMERIC), '-1752382724'))<((((vt1.c0)<<(v0.c0)), ((vt1.c0)-(vt1.c0)), NULL, ((('-1584486367', vt1.c0, vt1.c0, 0.39919376605882684, v0.c0))<((vt1.c0, vt1.c0, vt1.c0, v0.c0, v0.c0))), ((v0.c0) NOT BETWEEN (vt1.c0) AND ('-1715737672'))))) WHERE (x'1178' COLLATE RTRIM) ORDER BY 0.23612864294278435 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'1178' COLLATE RTRIM) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN v0 ON (((x'', ((vt1.c0) NOTNULL), (v0.c0 IN ()), CAST(vt1.c0 AS NUMERIC), '-1752382724'))<((((vt1.c0)<<(v0.c0)), ((vt1.c0)-(vt1.c0)), NULL, ((('-1584486367', vt1.c0, vt1.c0, 0.39919376605882684, v0.c0))<((vt1.c0, vt1.c0, vt1.c0, v0.c0, v0.c0))), ((v0.c0) NOT BETWEEN (vt1.c0) AND ('-1715737672'))))) ORDER BY 0.23612864294278435 ASC  NULLS FIRST);
SELECT ALL * FROM vt1 LEFT OUTER JOIN v0 ON (((x'', ((vt1.c0) NOTNULL), (v0.c0 IN ()), CAST(vt1.c0 AS NUMERIC), '-1752382724'))<((((vt1.c0)<<(v0.c0)), ((vt1.c0)-(vt1.c0)), NULL, ((('-1584486367', vt1.c0, vt1.c0, 0.39919376605882684, v0.c0))<((vt1.c0, vt1.c0, vt1.c0, v0.c0, v0.c0))), ((v0.c0) NOT BETWEEN (vt1.c0) AND ('-1715737672'))))) WHERE (x'1178' COLLATE RTRIM) ORDER BY 0.23612864294278435 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'1178' COLLATE RTRIM) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN v0 ON (((x'', ((vt1.c0) NOTNULL), (v0.c0 IN ()), CAST(vt1.c0 AS NUMERIC), '-1752382724'))<((((vt1.c0)<<(v0.c0)), ((vt1.c0)-(vt1.c0)), NULL, ((('-1584486367', vt1.c0, vt1.c0, 0.39919376605882684, v0.c0))<((vt1.c0, vt1.c0, vt1.c0, v0.c0, v0.c0))), ((v0.c0) NOT BETWEEN (vt1.c0) AND ('-1715737672'))))) ORDER BY 0.23612864294278435 ASC  NULLS FIRST);
SELECT ALL * FROM vt1 LEFT OUTER JOIN v0 ON (((x'', ((vt1.c0) NOTNULL), (v0.c0 IN ()), CAST(vt1.c0 AS NUMERIC), '-1752382724'))<((((vt1.c0)<<(v0.c0)), ((vt1.c0)-(vt1.c0)), NULL, ((('-1584486367', vt1.c0, vt1.c0, 0.39919376605882684, v0.c0))<((vt1.c0, vt1.c0, vt1.c0, v0.c0, v0.c0))), ((v0.c0) NOT BETWEEN (vt1.c0) AND ('-1715737672'))))) WHERE (x'1178' COLLATE RTRIM) ORDER BY 0.23612864294278435 ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, v0 WHERE (CAST(((vt1.c0)||(v0.c0)) AS INTEGER)) ORDER BY (QUOTE(v0.c0) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)||(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, v0 ORDER BY (QUOTE(v0.c0) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt1, v0 WHERE (CAST(((vt1.c0)||(v0.c0)) AS INTEGER)) ORDER BY (QUOTE(v0.c0) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)||(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, v0 ORDER BY (QUOTE(v0.c0) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt1, v0 WHERE (CAST(((vt1.c0)||(v0.c0)) AS INTEGER)) ORDER BY (QUOTE(v0.c0) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON (((rt0.c2 IN ()))=((rt0.c1 IN ()))) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((rt0.c2 IN ()))=((rt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON (((rt0.c2 IN ()))=((rt0.c1 IN ()))) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((rt0.c2 IN ()))=((rt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON (((rt0.c2 IN ()))=((rt0.c1 IN ()))) WHERE (rt0.c2);
SELECT ALL * FROM rt0 WHERE (CASE ((((((((0.6024505039350815)OR(x'')))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2))  WHEN rt0.c0 THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END WHEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)) THEN ((rt0.c2)|(rt0.c0)) WHEN CASE WHEN NULL THEN rt0.c0 ELSE rt0.c0 END THEN ((rt0.c1) IS FALSE) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ((CASE ((((((((0.6024505039350815)OR(x'')))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2))  WHEN rt0.c0 THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END WHEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)) THEN ((rt0.c2)|(rt0.c0)) WHEN CASE WHEN NULL THEN rt0.c0 ELSE rt0.c0 END THEN ((rt0.c1) IS FALSE) ELSE NULL END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE ((((((((0.6024505039350815)OR(x'')))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2))  WHEN rt0.c0 THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END WHEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)) THEN ((rt0.c2)|(rt0.c0)) WHEN CASE WHEN NULL THEN rt0.c0 ELSE rt0.c0 END THEN ((rt0.c1) IS FALSE) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ((CASE ((((((((0.6024505039350815)OR(x'')))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2))  WHEN rt0.c0 THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END WHEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)) THEN ((rt0.c2)|(rt0.c0)) WHEN CASE WHEN NULL THEN rt0.c0 ELSE rt0.c0 END THEN ((rt0.c1) IS FALSE) ELSE NULL END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE ((((((((0.6024505039350815)OR(x'')))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2))  WHEN rt0.c0 THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END WHEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)) THEN ((rt0.c2)|(rt0.c0)) WHEN CASE WHEN NULL THEN rt0.c0 ELSE rt0.c0 END THEN ((rt0.c1) IS FALSE) ELSE NULL END);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON (('-1791565839' COLLATE BINARY)>=(((rt0.c2)<>(v0.c0)))) INNER JOIN vt1 ON DATETIME((('-1994124793')>(vt1.c0)), json_object(v0.c0, vt1.c0, rt0.c0, rt0.c2, v0.c0, rt0.c2), ((((rt0.c2)AND(vt1.c0)))AND(vt1.c0))) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (('-1791565839' COLLATE BINARY)>=(((rt0.c2)!=(v0.c0)))) INNER JOIN vt1 ON DATETIME((('-1994124793')>(vt1.c0)), json_object(v0.c0, vt1.c0, rt0.c0, rt0.c2, v0.c0, rt0.c2), ((((rt0.c2)AND(vt1.c0)))AND(vt1.c0))));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON (('-1791565839' COLLATE BINARY)>=(((rt0.c2)<>(v0.c0)))) INNER JOIN vt1 ON DATETIME((('-1994124793')>(vt1.c0)), json_object(v0.c0, vt1.c0, rt0.c0, rt0.c2, v0.c0, rt0.c2), ((((rt0.c2)AND(vt1.c0)))AND(vt1.c0))) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (('-1791565839' COLLATE BINARY)>=(((rt0.c2)!=(v0.c0)))) INNER JOIN vt1 ON DATETIME((('-1994124793')>(vt1.c0)), json_object(v0.c0, vt1.c0, rt0.c0, rt0.c2, v0.c0, rt0.c2), ((((rt0.c2)AND(vt1.c0)))AND(vt1.c0))));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON (('-1791565839' COLLATE BINARY)>=(((rt0.c2)<>(v0.c0)))) INNER JOIN vt1 ON DATETIME((('-1994124793')>(vt1.c0)), json_object(v0.c0, vt1.c0, rt0.c0, rt0.c2, v0.c0, rt0.c2), ((((rt0.c2)AND(vt1.c0)))AND(vt1.c0))) WHERE (rt0.c2);
SELECT ALL * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END)+(CAST(vt1.c0 AS INTEGER)))) ORDER BY (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN vt1.c0 END)+(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END)+(CAST(vt1.c0 AS INTEGER)))) ORDER BY (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN vt1.c0 END)+(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END)+(CAST(vt1.c0 AS INTEGER)))) ORDER BY (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())  NULLS LAST;
SELECT * FROM rt0, v0, vt1 WHERE (UNLIKELY(DISTINCT ((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)))) IS TRUE)  as count FROM rt0, v0, vt1 NOT INDEXED);
SELECT * FROM rt0, v0, vt1 WHERE (UNLIKELY(DISTINCT ((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)))) IS TRUE)  as count FROM rt0, v0, vt1 NOT INDEXED);
SELECT * FROM rt0, v0, vt1 WHERE (UNLIKELY(DISTINCT ((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0))));
SELECT * FROM rt0, vt1 WHERE (CAST(vt1.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS INTEGER)) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (CAST(vt1.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS INTEGER)) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (CAST(vt1.c0 AS INTEGER));
SELECT COUNT(*) FROM vt1 WHERE (((((((((((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(((vt1.c0)GLOB(vt1.c0)))))OR(((vt1.c0)*(vt1.c0)))))OR((vt1.c0 IN ()))))AND(((0.43204534400974715) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(((vt1.c0)GLOB(vt1.c0)))))OR(((vt1.c0)*(vt1.c0)))))OR((vt1.c0 IN ()))))AND(((0.43204534400974715) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((((((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(((vt1.c0)GLOB(vt1.c0)))))OR(((vt1.c0)*(vt1.c0)))))OR((vt1.c0 IN ()))))AND(((0.43204534400974715) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(((vt1.c0)GLOB(vt1.c0)))))OR(((vt1.c0)*(vt1.c0)))))OR((vt1.c0 IN ()))))AND(((0.43204534400974715) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((((((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(((vt1.c0)GLOB(vt1.c0)))))OR(((vt1.c0)*(vt1.c0)))))OR((vt1.c0 IN ()))))AND(((0.43204534400974715) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CAST(vt1.c0 AS INTEGER))));
SELECT ALL * FROM v0, vt1 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1, v0, rt0 WHERE ('m*%yJE[誻') ORDER BY (((~ (rt0.c2))) BETWEEN (CAST(rt0.c2 AS INTEGER)) AND ((((v0.c0))>((rt0.c1))))) ASC  NULLS FIRST, ((rt0.c0)GLOB(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL (('m*%yJE[誻') IS TRUE)  as count FROM vt1, v0, rt0 ORDER BY (((~ (rt0.c2))) BETWEEN (CAST(rt0.c2 AS INTEGER)) AND ((((v0.c0))>((rt0.c1))))) ASC  NULLS FIRST, ((rt0.c0)GLOB(NULL)) DESC);
SELECT ALL COUNT(*) FROM vt1, v0, rt0 WHERE ('m*%yJE[誻') ORDER BY (((~ (rt0.c2))) BETWEEN (CAST(rt0.c2 AS INTEGER)) AND ((((v0.c0))>((rt0.c1))))) ASC  NULLS FIRST, ((rt0.c0)GLOB(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL (('m*%yJE[誻') IS TRUE)  as count FROM vt1, v0, rt0 ORDER BY (((~ (rt0.c2))) BETWEEN (CAST(rt0.c2 AS INTEGER)) AND ((((v0.c0))>((rt0.c1))))) ASC  NULLS FIRST, ((rt0.c0)GLOB(NULL)) DESC);
SELECT ALL COUNT(*) FROM vt1, v0, rt0 WHERE ('m*%yJE[誻') ORDER BY (((~ (rt0.c2))) BETWEEN (CAST(rt0.c2 AS INTEGER)) AND ((((v0.c0))>((rt0.c1))))) ASC  NULLS FIRST, ((rt0.c0)GLOB(NULL)) DESC;
SELECT COUNT(*) FROM vt1 WHERE (((+ (NULL)) IN ())) ORDER BY CASE WHEN CAST(vt1.c0 AS REAL) THEN (((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))) WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) THEN CAST(vt1.c0 AS INTEGER) WHEN ((vt1.c0) IS FALSE) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((+ (NULL)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN CAST(vt1.c0 AS REAL) THEN (((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))) WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) THEN CAST(vt1.c0 AS INTEGER) WHEN ((vt1.c0) IS FALSE) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((+ (NULL)) IN ())) ORDER BY CASE WHEN CAST(vt1.c0 AS REAL) THEN (((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))) WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) THEN CAST(vt1.c0 AS INTEGER) WHEN ((vt1.c0) IS FALSE) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((+ (NULL)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN CAST(vt1.c0 AS REAL) THEN (((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))) WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) THEN CAST(vt1.c0 AS INTEGER) WHEN ((vt1.c0) IS FALSE) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((+ (NULL)) IN ())) ORDER BY CASE WHEN CAST(vt1.c0 AS REAL) THEN (((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))) WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) THEN CAST(vt1.c0 AS INTEGER) WHEN ((vt1.c0) IS FALSE) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END  NULLS LAST;
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON (rt0.c1 IN ()) CROSS JOIN vt1 ON (+ (CASE WHEN v0.c0 THEN rt0.c2 ELSE vt1.c0 END)) WHERE ('') ORDER BY CASE WHEN ((vt1.c0)>(rt0.c1)) THEN rt0.c2 COLLATE RTRIM END, CASE (vt1.c0 IN (rt0.c1, rt0.c0))  WHEN ((((((((((((((((vt1.c0)OR(vt1.c0)))AND(rt0.c1)))AND(rt0.c2)))AND(vt1.c0)))AND(rt0.c2)))OR(vt1.c0)))AND(rt0.c1)))OR(vt1.c0)) THEN x'' END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (rt0.c1 IN ()) CROSS JOIN vt1 ON (+ (CASE WHEN v0.c0 THEN rt0.c2 ELSE vt1.c0 END)) ORDER BY CASE WHEN ((vt1.c0)>(rt0.c1)) THEN rt0.c2 COLLATE RTRIM END, CASE (vt1.c0 IN (rt0.c1, rt0.c0))  WHEN ((((((((((((((((vt1.c0)OR(vt1.c0)))AND(rt0.c1)))AND(rt0.c2)))AND(vt1.c0)))AND(rt0.c2)))OR(vt1.c0)))AND(rt0.c1)))OR(vt1.c0)) THEN x'' END  NULLS LAST);
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON (rt0.c1 IN ()) CROSS JOIN vt1 ON (+ (CASE WHEN v0.c0 THEN rt0.c2 ELSE vt1.c0 END)) WHERE ('') ORDER BY CASE WHEN ((vt1.c0)>(rt0.c1)) THEN rt0.c2 COLLATE RTRIM END, CASE (vt1.c0 IN (rt0.c1, rt0.c0))  WHEN ((((((((((((((((vt1.c0)OR(vt1.c0)))AND(rt0.c1)))AND(rt0.c2)))AND(vt1.c0)))AND(rt0.c2)))OR(vt1.c0)))AND(rt0.c1)))OR(vt1.c0)) THEN x'' END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (rt0.c1 IN ()) CROSS JOIN vt1 ON (+ (CASE WHEN v0.c0 THEN rt0.c2 ELSE vt1.c0 END)) ORDER BY CASE WHEN ((vt1.c0)>(rt0.c1)) THEN rt0.c2 COLLATE RTRIM END, CASE (vt1.c0 IN (rt0.c1, rt0.c0))  WHEN ((((((((((((((((vt1.c0)OR(vt1.c0)))AND(rt0.c1)))AND(rt0.c2)))AND(vt1.c0)))AND(rt0.c2)))OR(vt1.c0)))AND(rt0.c1)))OR(vt1.c0)) THEN x'' END  NULLS LAST);
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON (rt0.c1 IN ()) CROSS JOIN vt1 ON (+ (CASE WHEN v0.c0 THEN rt0.c2 ELSE vt1.c0 END)) WHERE ('') ORDER BY CASE WHEN ((vt1.c0)>(rt0.c1)) THEN rt0.c2 COLLATE RTRIM END, CASE (vt1.c0 IN (rt0.c1, rt0.c0))  WHEN ((((((((((((((((vt1.c0)OR(vt1.c0)))AND(rt0.c1)))AND(rt0.c2)))AND(vt1.c0)))AND(rt0.c2)))OR(vt1.c0)))AND(rt0.c1)))OR(vt1.c0)) THEN x'' END  NULLS LAST;
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON ((((((((v0.c0 COLLATE BINARY)AND((+ (rt0.c1)))))AND((((rt0.c0, rt0.c1, v0.c0))<((v0.c0, rt0.c1, NULL))))))OR(((rt0.c2)||(rt0.c1)))))OR(CAST(v0.c0 AS INTEGER))) INNER JOIN v0 ON (((rt0.c2, vt1.c0, rt0.c2, rt0.c2, rt0.c2)) BETWEEN ((vt1.c0, rt0.c0, rt0.c1, v0.c0, v0.c0)) AND ((vt1.c0, rt0.c2, rt0.c0, rt0.c2, rt0.c0))) COLLATE RTRIM WHERE (CAST(((vt1.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)) AS REAL)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((((((((v0.c0 COLLATE BINARY)AND((+ (rt0.c1)))))AND((((rt0.c0, rt0.c1, v0.c0))<((v0.c0, rt0.c1, NULL))))))OR(((rt0.c2)||(rt0.c1)))))OR(CAST(v0.c0 AS INTEGER))) INNER JOIN v0 ON (((rt0.c2, vt1.c0, rt0.c2, rt0.c2, rt0.c2)) BETWEEN ((vt1.c0, rt0.c0, rt0.c1, v0.c0, v0.c0)) AND ((vt1.c0, rt0.c2, rt0.c0, rt0.c2, rt0.c0))) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON ((((((((v0.c0 COLLATE BINARY)AND((+ (rt0.c1)))))AND((((rt0.c0, rt0.c1, v0.c0))<((v0.c0, rt0.c1, NULL))))))OR(((rt0.c2)||(rt0.c1)))))OR(CAST(v0.c0 AS INTEGER))) INNER JOIN v0 ON (((rt0.c2, vt1.c0, rt0.c2, rt0.c2, rt0.c2)) BETWEEN ((vt1.c0, rt0.c0, rt0.c1, v0.c0, v0.c0)) AND ((vt1.c0, rt0.c2, rt0.c0, rt0.c2, rt0.c0))) COLLATE RTRIM WHERE (CAST(((vt1.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)) AS REAL)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((((((((v0.c0 COLLATE BINARY)AND((+ (rt0.c1)))))AND((((rt0.c0, rt0.c1, v0.c0))<((v0.c0, rt0.c1, NULL))))))OR(((rt0.c2)||(rt0.c1)))))OR(CAST(v0.c0 AS INTEGER))) INNER JOIN v0 ON (((rt0.c2, vt1.c0, rt0.c2, rt0.c2, rt0.c2)) BETWEEN ((vt1.c0, rt0.c0, rt0.c1, v0.c0, v0.c0)) AND ((vt1.c0, rt0.c2, rt0.c0, rt0.c2, rt0.c0))) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0, v0, vt1 WHERE (((((NULL) BETWEEN (vt1.c0) AND (rt0.c1))) BETWEEN (((vt1.c0)<(rt0.c0))) AND (((v0.c0)<<(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((NULL) BETWEEN (vt1.c0) AND (rt0.c1))) BETWEEN (((vt1.c0)<(rt0.c0))) AND (((v0.c0)<<(rt0.c1))))) IS TRUE)  as count FROM rt0, v0, vt1);
SELECT ALL COUNT(*) FROM rt0, v0, vt1 WHERE (((((NULL) BETWEEN (vt1.c0) AND (rt0.c1))) BETWEEN (((vt1.c0)<(rt0.c0))) AND (((v0.c0)<<(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((NULL) BETWEEN (vt1.c0) AND (rt0.c1))) BETWEEN (((vt1.c0)<(rt0.c0))) AND (((v0.c0)<<(rt0.c1))))) IS TRUE)  as count FROM rt0, v0, vt1);
SELECT ALL COUNT(*) FROM rt0, v0, vt1 WHERE (((((NULL) BETWEEN (vt1.c0) AND (rt0.c1))) BETWEEN (((vt1.c0)<(rt0.c0))) AND (((v0.c0)<<(rt0.c1)))));
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR('1908934386' COLLATE NOCASE)))AND(((vt1.c0)OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR('1908934386' COLLATE NOCASE)))AND(((vt1.c0)OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR('1908934386' COLLATE NOCASE)))AND(((vt1.c0)OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR('1908934386' COLLATE NOCASE)))AND(((vt1.c0)OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR('1908934386' COLLATE NOCASE)))AND(((vt1.c0)OR(vt1.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST(((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)) AS BLOB)) ORDER BY '', ((((rt0.c1)AND(vt1.c0)))IS(((rt0.c2)OR(rt0.c0)))) ASC, CAST(CAST(0Xffffffffa8d64a7b AS NUMERIC) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, vt1 ORDER BY '', ((((rt0.c1)AND(vt1.c0)))IS(((rt0.c2)OR(rt0.c0)))) ASC, CAST(CAST(0Xffffffffa8d64a7b AS NUMERIC) AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST(((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)) AS BLOB)) ORDER BY '', ((((rt0.c1)AND(vt1.c0)))IS(((rt0.c2)OR(rt0.c0)))) ASC, CAST(CAST(0Xffffffffa8d64a7b AS NUMERIC) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, vt1 ORDER BY '', ((((rt0.c1)AND(vt1.c0)))IS(((rt0.c2)OR(rt0.c0)))) ASC, CAST(CAST(0Xffffffffa8d64a7b AS NUMERIC) AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST(((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)) AS BLOB)) ORDER BY '', ((((rt0.c1)AND(vt1.c0)))IS(((rt0.c2)OR(rt0.c0)))) ASC, CAST(CAST(0Xffffffffa8d64a7b AS NUMERIC) AS INTEGER)  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE ((+ (v0.c0)));
SELECT SUM(count) FROM (SELECT (((+ (v0.c0))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((+ (v0.c0)));
SELECT SUM(count) FROM (SELECT (((+ (v0.c0))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((+ (v0.c0)));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) AS TEXT)) ORDER BY TOTAL_CHANGES() DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY TOTAL_CHANGES() DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) AS TEXT)) ORDER BY TOTAL_CHANGES() DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY TOTAL_CHANGES() DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) AS TEXT)) ORDER BY TOTAL_CHANGES() DESC;
SELECT COUNT(*) FROM v0 WHERE ((NOT ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((NOT ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((NOT ((v0.c0 IN ()))));
SELECT * FROM vt1 WHERE (((((~ (vt1.c0)), vt1.c0, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))<((vt1.c0, vt1.c0, ((vt1.c0) IS TRUE))))) ORDER BY 3.91423631E8  NULLS FIRST, ((((CAST(vt1.c0 AS NUMERIC))OR(CAST(vt1.c0 AS REAL))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (0.6715203343399043))));
SELECT SUM(count) FROM (SELECT ALL ((((((~ (vt1.c0)), vt1.c0, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))<((vt1.c0, vt1.c0, ((vt1.c0) IS TRUE))))) IS TRUE)  as count FROM vt1 ORDER BY 3.91423631E8  NULLS FIRST, ((((CAST(vt1.c0 AS NUMERIC))OR(CAST(vt1.c0 AS REAL))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (0.6715203343399043)))));
SELECT * FROM vt1 WHERE (((((~ (vt1.c0)), vt1.c0, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))<((vt1.c0, vt1.c0, ((vt1.c0) IS TRUE))))) ORDER BY 3.91423631E8  NULLS FIRST, ((((CAST(vt1.c0 AS NUMERIC))OR(CAST(vt1.c0 AS REAL))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (0.6715203343399043))));
SELECT SUM(count) FROM (SELECT ALL ((((((~ (vt1.c0)), vt1.c0, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))<((vt1.c0, vt1.c0, ((vt1.c0) IS TRUE))))) IS TRUE)  as count FROM vt1 ORDER BY 3.91423631E8  NULLS FIRST, ((((CAST(vt1.c0 AS NUMERIC))OR(CAST(vt1.c0 AS REAL))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (0.6715203343399043)))));
SELECT * FROM vt1 WHERE (((((~ (vt1.c0)), vt1.c0, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))<((vt1.c0, vt1.c0, ((vt1.c0) IS TRUE))))) ORDER BY 3.91423631E8  NULLS FIRST, ((((CAST(vt1.c0 AS NUMERIC))OR(CAST(vt1.c0 AS REAL))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (0.6715203343399043))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((((((CASE rt0.c0  WHEN vt1.c0 THEN rt0.c1 END)OR((rt0.c1 IN (vt1.c0)))))AND((((vt1.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((0.4217559293355617, rt0.c2, vt1.c0)) AND ((vt1.c0, rt0.c2, NULL))))))AND(((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))OR(vt1.c0)))OR(rt0.c0)))))OR(NULL))) ORDER BY CAST(CASE WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c0 END AS NUMERIC) DESC, (NOT (CAST(rt0.c1 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE rt0.c0  WHEN vt1.c0 THEN rt0.c1 END)OR((rt0.c1 IN (vt1.c0)))))AND((((vt1.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((0.4217559293355617, rt0.c2, vt1.c0)) AND ((vt1.c0, rt0.c2, NULL))))))AND(((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))OR(vt1.c0)))OR(rt0.c0)))))OR(NULL))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(CASE WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c0 END AS NUMERIC) DESC, (NOT (CAST(rt0.c1 AS NUMERIC))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((((((CASE rt0.c0  WHEN vt1.c0 THEN rt0.c1 END)OR((rt0.c1 IN (vt1.c0)))))AND((((vt1.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((0.4217559293355617, rt0.c2, vt1.c0)) AND ((vt1.c0, rt0.c2, NULL))))))AND(((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))OR(vt1.c0)))OR(rt0.c0)))))OR(NULL))) ORDER BY CAST(CASE WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c0 END AS NUMERIC) DESC, (NOT (CAST(rt0.c1 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE rt0.c0  WHEN vt1.c0 THEN rt0.c1 END)OR((rt0.c1 IN (vt1.c0)))))AND((((vt1.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((0.4217559293355617, rt0.c2, vt1.c0)) AND ((vt1.c0, rt0.c2, NULL))))))AND(((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))OR(vt1.c0)))OR(rt0.c0)))))OR(NULL))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(CASE WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c0 END AS NUMERIC) DESC, (NOT (CAST(rt0.c1 AS NUMERIC))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((((((CASE rt0.c0  WHEN vt1.c0 THEN rt0.c1 END)OR((rt0.c1 IN (vt1.c0)))))AND((((vt1.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((0.4217559293355617, rt0.c2, vt1.c0)) AND ((vt1.c0, rt0.c2, NULL))))))AND(((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))OR(vt1.c0)))OR(rt0.c0)))))OR(NULL))) ORDER BY CAST(CASE WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c0 END AS NUMERIC) DESC, (NOT (CAST(rt0.c1 AS NUMERIC))) ASC;
SELECT ALL * FROM rt0, v0, vt1 WHERE (((((rt0.c1)<<(v0.c0)))GLOB((NOT (vt1.c0))))) ORDER BY ((LIKELIHOOD(DISTINCT rt0.c1, 0.1831196896472933))/((1.241500736E9 IN ()))) ASC  NULLS LAST, CASE WHEN (vt1.c0 IN ()) THEN CAST(rt0.c1 AS INTEGER) WHEN v0.c0 THEN ((vt1.c0)IS NOT('1967975617')) WHEN x'' THEN CAST(rt0.c1 AS TEXT) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<<(v0.c0)))GLOB((NOT (vt1.c0))))) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY ((LIKELIHOOD(DISTINCT rt0.c1, 0.1831196896472933))/((1.241500736E9 IN ()))) ASC  NULLS LAST, CASE WHEN (vt1.c0 IN ()) THEN CAST(rt0.c1 AS INTEGER) WHEN v0.c0 THEN ((vt1.c0)IS NOT('1967975617')) WHEN x'' THEN CAST(rt0.c1 AS TEXT) END ASC  NULLS FIRST);
SELECT ALL * FROM rt0, v0, vt1 WHERE (((((rt0.c1)<<(v0.c0)))GLOB((NOT (vt1.c0))))) ORDER BY ((LIKELIHOOD(DISTINCT rt0.c1, 0.1831196896472933))/((1.241500736E9 IN ()))) ASC  NULLS LAST, CASE WHEN (vt1.c0 IN ()) THEN CAST(rt0.c1 AS INTEGER) WHEN v0.c0 THEN ((vt1.c0)IS NOT('1967975617')) WHEN x'' THEN CAST(rt0.c1 AS TEXT) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<<(v0.c0)))GLOB((NOT (vt1.c0))))) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY ((LIKELIHOOD(DISTINCT rt0.c1, 0.1831196896472933))/((1.241500736E9 IN ()))) ASC  NULLS LAST, CASE WHEN (vt1.c0 IN ()) THEN CAST(rt0.c1 AS INTEGER) WHEN v0.c0 THEN ((vt1.c0)IS NOT('1967975617')) WHEN x'' THEN CAST(rt0.c1 AS TEXT) END ASC  NULLS FIRST);
SELECT ALL * FROM rt0, v0, vt1 WHERE (((((rt0.c1)<<(v0.c0)))GLOB((NOT (vt1.c0))))) ORDER BY ((LIKELIHOOD(DISTINCT rt0.c1, 0.1831196896472933))/((1.241500736E9 IN ()))) ASC  NULLS LAST, CASE WHEN (vt1.c0 IN ()) THEN CAST(rt0.c1 AS INTEGER) WHEN v0.c0 THEN ((vt1.c0)IS NOT('1967975617')) WHEN x'' THEN CAST(rt0.c1 AS TEXT) END ASC  NULLS FIRST;
SELECT * FROM vt1, rt0, v0 WHERE (CAST(x'4139' AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'4139' AS REAL)) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT * FROM vt1, rt0, v0 WHERE (CAST(x'4139' AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'4139' AS REAL)) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT * FROM vt1, rt0, v0 WHERE (CAST(x'4139' AS REAL));
SELECT * FROM v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))!=(((((((((v0.c0)AND(x'e1c8f08f')))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))))) ORDER BY (((v0.c0)) NOT BETWEEN ((CASE WHEN NULL THEN v0.c0 ELSE v0.c0 END)) AND (((x'1ea5' IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))!=(((((((((v0.c0)AND(x'e1c8f08f')))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN ((CASE WHEN NULL THEN v0.c0 ELSE v0.c0 END)) AND (((x'1ea5' IN ())))));
SELECT * FROM v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))!=(((((((((v0.c0)AND(x'e1c8f08f')))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))))) ORDER BY (((v0.c0)) NOT BETWEEN ((CASE WHEN NULL THEN v0.c0 ELSE v0.c0 END)) AND (((x'1ea5' IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))!=(((((((((v0.c0)AND(x'e1c8f08f')))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN ((CASE WHEN NULL THEN v0.c0 ELSE v0.c0 END)) AND (((x'1ea5' IN ())))));
SELECT * FROM v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))!=(((((((((v0.c0)AND(x'e1c8f08f')))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))))) ORDER BY (((v0.c0)) NOT BETWEEN ((CASE WHEN NULL THEN v0.c0 ELSE v0.c0 END)) AND (((x'1ea5' IN ()))));
SELECT * FROM rt0 WHERE (CASE rt0.c2 COLLATE BINARY  WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN rt0.c2 WHEN UNLIKELY(rt0.c2) THEN (NOT (rt0.c2)) WHEN rt0.c0 THEN UPPER(rt0.c0) ELSE (+ (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2 COLLATE BINARY  WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN rt0.c2 WHEN UNLIKELY(rt0.c2) THEN (NOT (rt0.c2)) WHEN rt0.c0 THEN UPPER(rt0.c0) ELSE (+ (rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE rt0.c2 COLLATE BINARY  WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN rt0.c2 WHEN UNLIKELY(rt0.c2) THEN (NOT (rt0.c2)) WHEN rt0.c0 THEN UPPER(rt0.c0) ELSE (+ (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2 COLLATE BINARY  WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN rt0.c2 WHEN UNLIKELY(rt0.c2) THEN (NOT (rt0.c2)) WHEN rt0.c0 THEN UPPER(rt0.c0) ELSE (+ (rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE rt0.c2 COLLATE BINARY  WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN rt0.c2 WHEN UNLIKELY(rt0.c2) THEN (NOT (rt0.c2)) WHEN rt0.c0 THEN UPPER(rt0.c0) ELSE (+ (rt0.c2)) END);
SELECT COUNT(*) FROM vt1, v0, rt0 WHERE (0.7018323167041657) ORDER BY (((rt0.c2)) BETWEEN (((NOT (rt0.c0)))) AND ((x'')))  NULLS FIRST, 'fV' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.7018323167041657) IS TRUE)  as count FROM vt1 NOT INDEXED, v0, rt0 ORDER BY (((rt0.c2)) BETWEEN (((NOT (rt0.c0)))) AND ((x'')))  NULLS FIRST, 'fV' DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, v0, rt0 WHERE (0.7018323167041657) ORDER BY (((rt0.c2)) BETWEEN (((NOT (rt0.c0)))) AND ((x'')))  NULLS FIRST, 'fV' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.7018323167041657) IS TRUE)  as count FROM vt1 NOT INDEXED, v0, rt0 ORDER BY (((rt0.c2)) BETWEEN (((NOT (rt0.c0)))) AND ((x'')))  NULLS FIRST, 'fV' DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, v0, rt0 WHERE (0.7018323167041657) ORDER BY (((rt0.c2)) BETWEEN (((NOT (rt0.c0)))) AND ((x'')))  NULLS FIRST, 'fV' DESC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (CASE WHEN vt1.c0 THEN vt1.c0 END COLLATE RTRIM) ORDER BY CAST(vt1.c0 AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c0 THEN vt1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c0 AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN vt1.c0 THEN vt1.c0 END COLLATE RTRIM) ORDER BY CAST(vt1.c0 AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c0 THEN vt1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c0 AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN vt1.c0 THEN vt1.c0 END COLLATE RTRIM) ORDER BY CAST(vt1.c0 AS NUMERIC) ASC  NULLS FIRST;
SELECT * FROM rt0, vt1 WHERE (CASE ((((rt0.c0)OR(vt1.c0)))OR(vt1.c0))  WHEN TYPEOF(DISTINCT vt1.c0) THEN vt1.c0 WHEN (((vt1.c0))<((rt0.c1))) THEN ((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) WHEN (((rt0.c0, vt1.c0, rt0.c2))>=((rt0.c2, rt0.c2, rt0.c0))) THEN rt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt0.c0)OR(vt1.c0)))OR(vt1.c0))  WHEN TYPEOF(DISTINCT vt1.c0) THEN vt1.c0 WHEN (((vt1.c0))<((rt0.c1))) THEN ((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) WHEN (((rt0.c0, vt1.c0, rt0.c2))>=((rt0.c2, rt0.c2, rt0.c0))) THEN rt0.c0 END) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (CASE ((((rt0.c0)OR(vt1.c0)))OR(vt1.c0))  WHEN TYPEOF(DISTINCT vt1.c0) THEN vt1.c0 WHEN (((vt1.c0))<((rt0.c1))) THEN ((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) WHEN (((rt0.c0, vt1.c0, rt0.c2))>=((rt0.c2, rt0.c2, rt0.c0))) THEN rt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt0.c0)OR(vt1.c0)))OR(vt1.c0))  WHEN TYPEOF(DISTINCT vt1.c0) THEN vt1.c0 WHEN (((vt1.c0))<((rt0.c1))) THEN ((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) WHEN (((rt0.c0, vt1.c0, rt0.c2))>=((rt0.c2, rt0.c2, rt0.c0))) THEN rt0.c0 END) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (CASE ((((rt0.c0)OR(vt1.c0)))OR(vt1.c0))  WHEN TYPEOF(DISTINCT vt1.c0) THEN vt1.c0 WHEN (((vt1.c0))<((rt0.c1))) THEN ((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) WHEN (((rt0.c0, vt1.c0, rt0.c2))>=((rt0.c2, rt0.c2, rt0.c0))) THEN rt0.c0 END);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((- (-1e500)))<((('wLMp諸5') NOTNULL)))) ORDER BY (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ()) DESC  NULLS FIRST, ((ABS(vt1.c0)) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))  NULLS LAST, ((vt1.c0 COLLATE RTRIM) BETWEEN (vt1.c0 COLLATE RTRIM) AND (vt1.c0 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (-1e500)))<((('wLMp諸5') NOTNULL)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ()) DESC  NULLS FIRST, ((ABS(vt1.c0)) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))  NULLS LAST, ((vt1.c0 COLLATE RTRIM) BETWEEN (vt1.c0 COLLATE RTRIM) AND (vt1.c0 COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((- (-1e500)))<((('wLMp諸5') NOTNULL)))) ORDER BY (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ()) DESC  NULLS FIRST, ((ABS(vt1.c0)) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))  NULLS LAST, ((vt1.c0 COLLATE RTRIM) BETWEEN (vt1.c0 COLLATE RTRIM) AND (vt1.c0 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (-1e500)))<((('wLMp諸5') NOTNULL)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ()) DESC  NULLS FIRST, ((ABS(vt1.c0)) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))  NULLS LAST, ((vt1.c0 COLLATE RTRIM) BETWEEN (vt1.c0 COLLATE RTRIM) AND (vt1.c0 COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((- (-1e500)))<((('wLMp諸5') NOTNULL)))) ORDER BY (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ()) DESC  NULLS FIRST, ((ABS(vt1.c0)) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))  NULLS LAST, ((vt1.c0 COLLATE RTRIM) BETWEEN (vt1.c0 COLLATE RTRIM) AND (vt1.c0 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt1 FULL OUTER JOIN rt0 ON rt0.c1 WHERE (((((CASE WHEN v0.c0 THEN vt1.c0 WHEN rt0.c0 THEN vt1.c0 WHEN v0.c0 THEN rt0.c0 END)OR(json_type(rt0.c2))))AND(((0xffffffffd34b0c44)<<(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN v0.c0 THEN vt1.c0 WHEN rt0.c0 THEN vt1.c0 WHEN v0.c0 THEN rt0.c0 END)OR(json_type(rt0.c2))))AND(((0Xffffffffd34b0c44)<<(rt0.c2))))) IS TRUE)  as count FROM v0, vt1 FULL OUTER JOIN rt0 ON rt0.c1);
SELECT ALL COUNT(*) FROM v0, vt1 FULL OUTER JOIN rt0 ON rt0.c1 WHERE (((((CASE WHEN v0.c0 THEN vt1.c0 WHEN rt0.c0 THEN vt1.c0 WHEN v0.c0 THEN rt0.c0 END)OR(json_type(rt0.c2))))AND(((0xffffffffd34b0c44)<<(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN v0.c0 THEN vt1.c0 WHEN rt0.c0 THEN vt1.c0 WHEN v0.c0 THEN rt0.c0 END)OR(json_type(rt0.c2))))AND(((0Xffffffffd34b0c44)<<(rt0.c2))))) IS TRUE)  as count FROM v0, vt1 FULL OUTER JOIN rt0 ON rt0.c1);
SELECT ALL COUNT(*) FROM v0, vt1 FULL OUTER JOIN rt0 ON rt0.c1 WHERE (((((CASE WHEN v0.c0 THEN vt1.c0 WHEN rt0.c0 THEN vt1.c0 WHEN v0.c0 THEN rt0.c0 END)OR(json_type(rt0.c2))))AND(((0xffffffffd34b0c44)<<(rt0.c2)))));
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT COUNT(*) FROM v0, rt0, vt1 WHERE ((((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c1, v0.c0, v0.c0)) AND ((rt0.c1, rt0.c1, rt0.c1))))&(((vt1.c0) IS FALSE)))) ORDER BY ((NOT (vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c1, v0.c0, v0.c0)) AND ((rt0.c1, rt0.c1, rt0.c1))))&(((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY ((NOT (vt1.c0)) IN ()));
SELECT COUNT(*) FROM v0, rt0, vt1 WHERE ((((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c1, v0.c0, v0.c0)) AND ((rt0.c1, rt0.c1, rt0.c1))))&(((vt1.c0) IS FALSE)))) ORDER BY ((NOT (vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c1, v0.c0, v0.c0)) AND ((rt0.c1, rt0.c1, rt0.c1))))&(((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY ((NOT (vt1.c0)) IN ()));
SELECT COUNT(*) FROM v0, rt0, vt1 WHERE ((((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c1, v0.c0, v0.c0)) AND ((rt0.c1, rt0.c1, rt0.c1))))&(((vt1.c0) IS FALSE)))) ORDER BY ((NOT (vt1.c0)) IN ());
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c1)<=(rt0.c1)) THEN rt0.c0 END) ORDER BY ((LOWER(DISTINCT rt0.c0))IS NOT(((rt0.c2) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)<=(rt0.c1)) THEN rt0.c0 END) IS TRUE)  as count FROM rt0 ORDER BY ((LOWER(DISTINCT rt0.c0))IS NOT(((rt0.c2) IS TRUE))));
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c1)<=(rt0.c1)) THEN rt0.c0 END) ORDER BY ((LOWER(DISTINCT rt0.c0))IS NOT(((rt0.c2) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)<=(rt0.c1)) THEN rt0.c0 END) IS TRUE)  as count FROM rt0 ORDER BY ((LOWER(DISTINCT rt0.c0))IS NOT(((rt0.c2) IS TRUE))));
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c1)<=(rt0.c1)) THEN rt0.c0 END) ORDER BY ((LOWER(DISTINCT rt0.c0))IS NOT(((rt0.c2) IS TRUE)));
SELECT ALL COUNT(*) FROM rt0, vt1 CROSS JOIN v0 ON (~ (((((((((rt0.c0)OR(NULL)))AND(rt0.c2)))AND('M%')))OR(v0.c0)))) WHERE (((NULLIF(v0.c0, vt1.c0))IS((((vt1.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((NULLIF(v0.c0, vt1.c0))IS((((vt1.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, vt1 NOT INDEXED CROSS JOIN v0 ON (~ (((((((((rt0.c0)OR(NULL)))AND(rt0.c2)))AND('M%')))OR(v0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt1 CROSS JOIN v0 ON (~ (((((((((rt0.c0)OR(NULL)))AND(rt0.c2)))AND('M%')))OR(v0.c0)))) WHERE (((NULLIF(v0.c0, vt1.c0))IS((((vt1.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((NULLIF(v0.c0, vt1.c0))IS((((vt1.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, vt1 NOT INDEXED CROSS JOIN v0 ON (~ (((((((((rt0.c0)OR(NULL)))AND(rt0.c2)))AND('M%')))OR(v0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt1 CROSS JOIN v0 ON (~ (((((((((rt0.c0)OR(NULL)))AND(rt0.c2)))AND('M%')))OR(v0.c0)))) WHERE (((NULLIF(v0.c0, vt1.c0))IS((((vt1.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))));
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) IN ()) WHERE ((- (CASE 0.624234674264123  WHEN v0.c0 THEN rt0.c2 ELSE rt0.c2 END))) ORDER BY CAST((rt0.c1 IN ()) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (CASE 0.624234674264123  WHEN v0.c0 THEN rt0.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) IN ()) ORDER BY CAST((rt0.c1 IN ()) AS NUMERIC) ASC  NULLS FIRST);
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) IN ()) WHERE ((- (CASE 0.624234674264123  WHEN v0.c0 THEN rt0.c2 ELSE rt0.c2 END))) ORDER BY CAST((rt0.c1 IN ()) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (CASE 0.624234674264123  WHEN v0.c0 THEN rt0.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) IN ()) ORDER BY CAST((rt0.c1 IN ()) AS NUMERIC) ASC  NULLS FIRST);
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) IN ()) WHERE ((- (CASE 0.624234674264123  WHEN v0.c0 THEN rt0.c2 ELSE rt0.c2 END))) ORDER BY CAST((rt0.c1 IN ()) AS NUMERIC) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt1 WHERE ((((~ (v0.c0)))*((vt1.c0 IN ())))) ORDER BY (((v0.c0)) NOT BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((v0.c0) IS FALSE))))  NULLS LAST, ((((((NULL)=(v0.c0)))AND((~ (vt1.c0)))))OR(json_insert(vt1.c0, v0.c0, v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c0)))*((vt1.c0 IN ())))) IS TRUE)  as count FROM v0, vt1 ORDER BY (((v0.c0)) NOT BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((v0.c0) IS FALSE))))  NULLS LAST, ((((((NULL)==(v0.c0)))AND((~ (vt1.c0)))))OR(json_insert(vt1.c0, v0.c0, v0.c0))) DESC);
SELECT COUNT(*) FROM v0, vt1 WHERE ((((~ (v0.c0)))*((vt1.c0 IN ())))) ORDER BY (((v0.c0)) NOT BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((v0.c0) IS FALSE))))  NULLS LAST, ((((((NULL)=(v0.c0)))AND((~ (vt1.c0)))))OR(json_insert(vt1.c0, v0.c0, v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c0)))*((vt1.c0 IN ())))) IS TRUE)  as count FROM v0, vt1 ORDER BY (((v0.c0)) NOT BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((v0.c0) IS FALSE))))  NULLS LAST, ((((((NULL)==(v0.c0)))AND((~ (vt1.c0)))))OR(json_insert(vt1.c0, v0.c0, v0.c0))) DESC);
SELECT COUNT(*) FROM v0, vt1 WHERE ((((~ (v0.c0)))*((vt1.c0 IN ())))) ORDER BY (((v0.c0)) NOT BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((v0.c0) IS FALSE))))  NULLS LAST, ((((((NULL)=(v0.c0)))AND((~ (vt1.c0)))))OR(json_insert(vt1.c0, v0.c0, v0.c0))) DESC;
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, vt1 FULL OUTER JOIN v0 ON (- (rt0.c1)) COLLATE BINARY WHERE (((v0.c0) NOTNULL)) ORDER BY (((rt0.c1)) BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((((vt1.c0) NOT BETWEEN (x'afca') AND (755802653)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOTNULL)) IS TRUE)  as count FROM rt0, vt1 FULL OUTER JOIN v0 ON (- (rt0.c1)) COLLATE BINARY ORDER BY (((rt0.c1)) BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((((vt1.c0) NOT BETWEEN (x'afca') AND (755802653)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, vt1 FULL OUTER JOIN v0 ON (- (rt0.c1)) COLLATE BINARY WHERE (((v0.c0) NOTNULL)) ORDER BY (((rt0.c1)) BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((((vt1.c0) NOT BETWEEN (x'afca') AND (755802653)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOTNULL)) IS TRUE)  as count FROM rt0, vt1 FULL OUTER JOIN v0 ON (- (rt0.c1)) COLLATE BINARY ORDER BY (((rt0.c1)) BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((((vt1.c0) NOT BETWEEN (x'afca') AND (755802653)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, vt1 FULL OUTER JOIN v0 ON (- (rt0.c1)) COLLATE BINARY WHERE (((v0.c0) NOTNULL)) ORDER BY (((rt0.c1)) BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((((vt1.c0) NOT BETWEEN (x'afca') AND (755802653)))))  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0) IS FALSE))OR(((vt1.c0)||(x'51fe')))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) IS FALSE))OR(((vt1.c0)||(x'51fe')))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0) IS FALSE))OR(((vt1.c0)||(x'51fe')))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) IS FALSE))OR(((vt1.c0)||(x'51fe')))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0) IS FALSE))OR(((vt1.c0)||(x'51fe')))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL * FROM v0, vt1 RIGHT OUTER JOIN rt0 ON ((((((((((rt0.c0) IS FALSE))AND(((vt1.c0)+(rt0.c1)))))AND(((rt0.c0) NOT NULL))))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))AND(((vt1.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)))) WHERE ('Ⴝ\') ORDER BY ((((vt1.c0)OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR(CASE rt0.c1  WHEN vt1.c0 THEN rt0.c2 END));
SELECT SUM(count) FROM (SELECT ALL (('Ⴝ\') IS TRUE)  as count FROM v0, vt1 RIGHT OUTER JOIN rt0 ON ((((((((((rt0.c0) IS FALSE))AND(((vt1.c0)+(rt0.c1)))))AND(((rt0.c0) NOT NULL))))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))AND(((vt1.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)))) ORDER BY ((((vt1.c0)OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR(CASE rt0.c1  WHEN vt1.c0 THEN rt0.c2 END)));
SELECT ALL * FROM v0, vt1 RIGHT OUTER JOIN rt0 ON ((((((((((rt0.c0) IS FALSE))AND(((vt1.c0)+(rt0.c1)))))AND(((rt0.c0) NOT NULL))))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))AND(((vt1.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)))) WHERE ('Ⴝ\') ORDER BY ((((vt1.c0)OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR(CASE rt0.c1  WHEN vt1.c0 THEN rt0.c2 END));
SELECT SUM(count) FROM (SELECT ALL (('Ⴝ\') IS TRUE)  as count FROM v0, vt1 RIGHT OUTER JOIN rt0 ON ((((((((((rt0.c0) IS FALSE))AND(((vt1.c0)+(rt0.c1)))))AND(((rt0.c0) NOT NULL))))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))AND(((vt1.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)))) ORDER BY ((((vt1.c0)OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR(CASE rt0.c1  WHEN vt1.c0 THEN rt0.c2 END)));
SELECT ALL * FROM v0, vt1 RIGHT OUTER JOIN rt0 ON ((((((((((rt0.c0) IS FALSE))AND(((vt1.c0)+(rt0.c1)))))AND(((rt0.c0) NOT NULL))))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))AND(((vt1.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)))) WHERE ('Ⴝ\') ORDER BY ((((vt1.c0)OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR(CASE rt0.c1  WHEN vt1.c0 THEN rt0.c2 END));
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON ((CASE rt0.c1  WHEN 0X610210bd THEN vt1.c0 END) IS TRUE) WHERE (CAST(((rt0.c0)>>(rt0.c2)) AS NUMERIC)) ORDER BY ((((rt0.c0)GLOB(rt0.c0))) NOT NULL)  NULLS FIRST, '0.6388031799977087' COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)>>(rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON ((CASE rt0.c1  WHEN 0X610210bd THEN vt1.c0 END) IS TRUE) ORDER BY ((((rt0.c0)GLOB(rt0.c0))) NOT NULL)  NULLS FIRST, '0.6388031799977087' COLLATE RTRIM DESC  NULLS FIRST);
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON ((CASE rt0.c1  WHEN 0X610210bd THEN vt1.c0 END) IS TRUE) WHERE (CAST(((rt0.c0)>>(rt0.c2)) AS NUMERIC)) ORDER BY ((((rt0.c0)GLOB(rt0.c0))) NOT NULL)  NULLS FIRST, '0.6388031799977087' COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)>>(rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON ((CASE rt0.c1  WHEN 0X610210bd THEN vt1.c0 END) IS TRUE) ORDER BY ((((rt0.c0)GLOB(rt0.c0))) NOT NULL)  NULLS FIRST, '0.6388031799977087' COLLATE RTRIM DESC  NULLS FIRST);
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON ((CASE rt0.c1  WHEN 0X610210bd THEN vt1.c0 END) IS TRUE) WHERE (CAST(((rt0.c0)>>(rt0.c2)) AS NUMERIC)) ORDER BY ((((rt0.c0)GLOB(rt0.c0))) NOT NULL)  NULLS FIRST, '0.6388031799977087' COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL * FROM vt1, v0, rt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, v0, rt0);
SELECT ALL * FROM vt1, v0, rt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, v0, rt0);
SELECT ALL * FROM vt1, v0, rt0 WHERE (vt1.c0);
SELECT * FROM v0, vt1, rt0 WHERE ((~ ((~ (rt0.c1))))) ORDER BY CAST((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((~ (rt0.c1))))) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY CAST((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS BLOB) DESC);
SELECT * FROM v0, vt1, rt0 WHERE ((~ ((~ (rt0.c1))))) ORDER BY CAST((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((~ (rt0.c1))))) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY CAST((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS BLOB) DESC);
SELECT * FROM v0, vt1, rt0 WHERE ((~ ((~ (rt0.c1))))) ORDER BY CAST((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS BLOB) DESC;
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE ((((((((('-1459016705')AND(NULL)))OR((((vt1.c0))==((vt1.c0))))))OR(MIN(rt0.c0, NULL))))OR((+ (rt0.c2))))) ORDER BY (+ (CAST('643402534' AS TEXT)));
SELECT SUM(count) FROM (SELECT (((((((((('-1459016705')AND(NULL)))OR((((vt1.c0))=((vt1.c0))))))OR(MIN(rt0.c0, NULL))))OR((+ (rt0.c2))))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY (+ (CAST('643402534' AS TEXT))));
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE ((((((((('-1459016705')AND(NULL)))OR((((vt1.c0))==((vt1.c0))))))OR(MIN(rt0.c0, NULL))))OR((+ (rt0.c2))))) ORDER BY (+ (CAST('643402534' AS TEXT)));
SELECT SUM(count) FROM (SELECT (((((((((('-1459016705')AND(NULL)))OR((((vt1.c0))=((vt1.c0))))))OR(MIN(rt0.c0, NULL))))OR((+ (rt0.c2))))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY (+ (CAST('643402534' AS TEXT))));
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE ((((((((('-1459016705')AND(NULL)))OR((((vt1.c0))==((vt1.c0))))))OR(MIN(rt0.c0, NULL))))OR((+ (rt0.c2))))) ORDER BY (+ (CAST('643402534' AS TEXT)));
SELECT * FROM rt0, v0 WHERE (CAST(CAST(rt0.c2 AS TEXT) AS REAL)) ORDER BY 0Xffffffff99c1f271 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c2 AS TEXT) AS REAL)) IS TRUE)  as count FROM rt0 NOT INDEXED, v0 ORDER BY 0xffffffff99c1f271 ASC  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (CAST(CAST(rt0.c2 AS TEXT) AS REAL)) ORDER BY 0Xffffffff99c1f271 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c2 AS TEXT) AS REAL)) IS TRUE)  as count FROM rt0 NOT INDEXED, v0 ORDER BY 0xffffffff99c1f271 ASC  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (CAST(CAST(rt0.c2 AS TEXT) AS REAL)) ORDER BY 0Xffffffff99c1f271 ASC  NULLS FIRST;
SELECT ALL * FROM rt0, vt1 WHERE (SQLITE_COMPILEOPTION_GET((((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET((((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (SQLITE_COMPILEOPTION_GET((((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET((((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (SQLITE_COMPILEOPTION_GET((((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))) BETWEEN (CAST(vt1.c0 AS BLOB)) AND (vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))) BETWEEN (CAST(vt1.c0 AS BLOB)) AND (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))) BETWEEN (CAST(vt1.c0 AS BLOB)) AND (vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))) BETWEEN (CAST(vt1.c0 AS BLOB)) AND (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))) BETWEEN (CAST(vt1.c0 AS BLOB)) AND (vt1.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0 WHERE (((NULL)-(((rt0.c0)GLOB(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((NULL)-(((rt0.c0)GLOB(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((NULL)-(((rt0.c0)GLOB(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((NULL)-(((rt0.c0)GLOB(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((NULL)-(((rt0.c0)GLOB(rt0.c1)))));
SELECT ALL * FROM v0, vt1, rt0 WHERE (((rt0.c1 COLLATE BINARY)/(v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY)/(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt1, rt0);
SELECT ALL * FROM v0, vt1, rt0 WHERE (((rt0.c1 COLLATE BINARY)/(v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY)/(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt1, rt0);
SELECT ALL * FROM v0, vt1, rt0 WHERE (((rt0.c1 COLLATE BINARY)/(v0.c0 COLLATE NOCASE)));
SELECT ALL * FROM rt0 WHERE (((-7.76264454E8)GLOB(CAST(rt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((-7.76264454E8)GLOB(CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((-7.76264454E8)GLOB(CAST(rt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((-7.76264454E8)GLOB(CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((-7.76264454E8)GLOB(CAST(rt0.c0 AS INTEGER))));
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((0.41070386926641167)) AND (('pe&c61V'))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((0.41070386926641167)) AND (('pe&c61V')))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((0.41070386926641167)) AND (('pe&c61V'))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((0.41070386926641167)) AND (('pe&c61V')))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((0.41070386926641167)) AND (('pe&c61V'))));
SELECT ALL * FROM rt0, vt1 WHERE (((rt0.c2)IS(vt1.c0)) COLLATE RTRIM) ORDER BY (((rt0.c1) ISNULL) IN ((- (rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)IS(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c1) ISNULL) IN ((- (rt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE (((rt0.c2)IS(vt1.c0)) COLLATE RTRIM) ORDER BY (((rt0.c1) ISNULL) IN ((- (rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)IS(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c1) ISNULL) IN ((- (rt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE (((rt0.c2)IS(vt1.c0)) COLLATE RTRIM) ORDER BY (((rt0.c1) ISNULL) IN ((- (rt0.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt1 INNER JOIN rt0 ON CASE (rt0.c2 IN ())  WHEN vt1.c0 COLLATE NOCASE THEN (NOT (v0.c0)) END WHERE ((~ ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((vt1.c0 IN ())))) IS TRUE)  as count FROM v0, vt1 INNER JOIN rt0 ON CASE (rt0.c2 IN ())  WHEN vt1.c0 COLLATE NOCASE THEN (NOT (v0.c0)) END);
SELECT ALL COUNT(*) FROM v0, vt1 INNER JOIN rt0 ON CASE (rt0.c2 IN ())  WHEN vt1.c0 COLLATE NOCASE THEN (NOT (v0.c0)) END WHERE ((~ ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((vt1.c0 IN ())))) IS TRUE)  as count FROM v0, vt1 INNER JOIN rt0 ON CASE (rt0.c2 IN ())  WHEN vt1.c0 COLLATE NOCASE THEN (NOT (v0.c0)) END);
SELECT ALL COUNT(*) FROM v0, vt1 INNER JOIN rt0 ON CASE (rt0.c2 IN ())  WHEN vt1.c0 COLLATE NOCASE THEN (NOT (v0.c0)) END WHERE ((~ ((vt1.c0 IN ()))));
SELECT * FROM v0, vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN 0.90692806843077 ELSE vt1.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN 0.90692806843077 ELSE vt1.c0 END) IS FALSE)) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN 0.90692806843077 ELSE vt1.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN 0.90692806843077 ELSE vt1.c0 END) IS FALSE)) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN 0.90692806843077 ELSE vt1.c0 END) IS FALSE));
SELECT COUNT(*) FROM v0, rt0 INNER JOIN vt1 ON (NOT ((rt0.c1 IN ()))) WHERE (LAST_INSERT_ROWID()) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM v0, rt0 INNER JOIN vt1 ON (NOT ((rt0.c1 IN ()))) ORDER BY rt0.c1 DESC);
SELECT COUNT(*) FROM v0, rt0 INNER JOIN vt1 ON (NOT ((rt0.c1 IN ()))) WHERE (LAST_INSERT_ROWID()) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM v0, rt0 INNER JOIN vt1 ON (NOT ((rt0.c1 IN ()))) ORDER BY rt0.c1 DESC);
SELECT COUNT(*) FROM v0, rt0 INNER JOIN vt1 ON (NOT ((rt0.c1 IN ()))) WHERE (LAST_INSERT_ROWID()) ORDER BY rt0.c1 DESC;
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c1)) NOT BETWEEN ((((((rt0.c2)OR(v0.c0)))AND(v0.c0)))) AND (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) WHERE ((+ (((v0.c0)|(rt0.c1))))) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (((((0.9436490203200667)OR(v0.c0)))OR(rt0.c0))) AND (rt0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((v0.c0)|(rt0.c1))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c1)) NOT BETWEEN ((((((rt0.c2)OR(v0.c0)))AND(v0.c0)))) AND (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (((((0.9436490203200667)OR(v0.c0)))OR(rt0.c0))) AND (rt0.c0 COLLATE BINARY)) ASC);
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c1)) NOT BETWEEN ((((((rt0.c2)OR(v0.c0)))AND(v0.c0)))) AND (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) WHERE ((+ (((v0.c0)|(rt0.c1))))) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (((((0.9436490203200667)OR(v0.c0)))OR(rt0.c0))) AND (rt0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((v0.c0)|(rt0.c1))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c1)) NOT BETWEEN ((((((rt0.c2)OR(v0.c0)))AND(v0.c0)))) AND (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (((((0.9436490203200667)OR(v0.c0)))OR(rt0.c0))) AND (rt0.c0 COLLATE BINARY)) ASC);
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c1)) NOT BETWEEN ((((((rt0.c2)OR(v0.c0)))AND(v0.c0)))) AND (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) WHERE ((+ (((v0.c0)|(rt0.c1))))) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (((((0.9436490203200667)OR(v0.c0)))OR(rt0.c0))) AND (rt0.c0 COLLATE BINARY)) ASC;
SELECT * FROM vt1 FULL OUTER JOIN v0 ON (vt1.c0 IN ()) FULL OUTER JOIN rt0 ON (rt0.c0 IN ()) WHERE (((NULL)+(((vt1.c0)<<(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)+(((vt1.c0)<<(rt0.c1))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN v0 ON (vt1.c0 IN ()) FULL OUTER JOIN rt0 ON (rt0.c0 IN ()));
SELECT * FROM vt1 FULL OUTER JOIN v0 ON (vt1.c0 IN ()) FULL OUTER JOIN rt0 ON (rt0.c0 IN ()) WHERE (((NULL)+(((vt1.c0)<<(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)+(((vt1.c0)<<(rt0.c1))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN v0 ON (vt1.c0 IN ()) FULL OUTER JOIN rt0 ON (rt0.c0 IN ()));
SELECT * FROM vt1 FULL OUTER JOIN v0 ON (vt1.c0 IN ()) FULL OUTER JOIN rt0 ON (rt0.c0 IN ()) WHERE (((NULL)+(((vt1.c0)<<(rt0.c1)))));
SELECT * FROM rt0, v0, vt1 WHERE (((vt1.c0 COLLATE BINARY) NOT BETWEEN (rt0.c2) AND (((((rt0.c1)OR(rt0.c2)))AND(v0.c0))))) ORDER BY ((((rt0.c1)OR(x'')))AND(rt0.c1)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY) NOT BETWEEN (rt0.c2) AND (((((rt0.c1)OR(rt0.c2)))AND(v0.c0))))) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY ((((rt0.c1)OR(x'')))AND(rt0.c1)) COLLATE BINARY ASC);
SELECT * FROM rt0, v0, vt1 WHERE (((vt1.c0 COLLATE BINARY) NOT BETWEEN (rt0.c2) AND (((((rt0.c1)OR(rt0.c2)))AND(v0.c0))))) ORDER BY ((((rt0.c1)OR(x'')))AND(rt0.c1)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY) NOT BETWEEN (rt0.c2) AND (((((rt0.c1)OR(rt0.c2)))AND(v0.c0))))) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY ((((rt0.c1)OR(x'')))AND(rt0.c1)) COLLATE BINARY ASC);
SELECT * FROM rt0, v0, vt1 WHERE (((vt1.c0 COLLATE BINARY) NOT BETWEEN (rt0.c2) AND (((((rt0.c1)OR(rt0.c2)))AND(v0.c0))))) ORDER BY ((((rt0.c1)OR(x'')))AND(rt0.c1)) COLLATE BINARY ASC;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END)>>(((rt0.c1)AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END)>>(((rt0.c1)AND(rt0.c2))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END)>>(((rt0.c1)AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END)>>(((rt0.c1)AND(rt0.c2))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END)>>(((rt0.c1)AND(rt0.c2)))));
SELECT * FROM rt0 CROSS JOIN vt1 ON (((rt0.c2 IN ()))/(CAST(rt0.c1 AS REAL))) WHERE (((((LIKELY(DISTINCT vt1.c0))AND(rt0.c2)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY ((rt0.c0 COLLATE NOCASE)<<(((rt0.c1)<>(rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((LIKELY(DISTINCT vt1.c0))AND(rt0.c2)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON (((rt0.c2 IN ()))/(CAST(rt0.c1 AS REAL))) ORDER BY ((rt0.c0 COLLATE NOCASE)<<(((rt0.c1)<>(rt0.c2)))) DESC  NULLS FIRST);
SELECT * FROM rt0 CROSS JOIN vt1 ON (((rt0.c2 IN ()))/(CAST(rt0.c1 AS REAL))) WHERE (((((LIKELY(DISTINCT vt1.c0))AND(rt0.c2)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY ((rt0.c0 COLLATE NOCASE)<<(((rt0.c1)<>(rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((LIKELY(DISTINCT vt1.c0))AND(rt0.c2)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON (((rt0.c2 IN ()))/(CAST(rt0.c1 AS REAL))) ORDER BY ((rt0.c0 COLLATE NOCASE)<<(((rt0.c1)<>(rt0.c2)))) DESC  NULLS FIRST);
SELECT * FROM rt0 CROSS JOIN vt1 ON (((rt0.c2 IN ()))/(CAST(rt0.c1 AS REAL))) WHERE (((((LIKELY(DISTINCT vt1.c0))AND(rt0.c2)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY ((rt0.c0 COLLATE NOCASE)<<(((rt0.c1)<>(rt0.c2)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, v0, vt1 WHERE (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))>=((+ (vt1.c0))))) ORDER BY ((rt0.c1)<<(rt0.c2)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))>=((+ (vt1.c0))))) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY ((rt0.c1)<<(rt0.c2)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, v0, vt1 WHERE (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))>=((+ (vt1.c0))))) ORDER BY ((rt0.c1)<<(rt0.c2)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))>=((+ (vt1.c0))))) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY ((rt0.c1)<<(rt0.c2)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, v0, vt1 WHERE (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))>=((+ (vt1.c0))))) ORDER BY ((rt0.c1)<<(rt0.c2)) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt1 ON (((((v0.c0))<=((x''))))<<(((x'db88') NOT BETWEEN (v0.c0) AND (vt1.c0)))) WHERE (CASE WHEN v0.c0 COLLATE BINARY THEN NULLIF(v0.c0, v0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 COLLATE BINARY THEN NULLIF(v0.c0, v0.c0) END) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt1 ON (((((v0.c0))<=((x''))))<<(((x'db88') NOT BETWEEN (v0.c0) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt1 ON (((((v0.c0))<=((x''))))<<(((x'db88') NOT BETWEEN (v0.c0) AND (vt1.c0)))) WHERE (CASE WHEN v0.c0 COLLATE BINARY THEN NULLIF(v0.c0, v0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 COLLATE BINARY THEN NULLIF(v0.c0, v0.c0) END) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt1 ON (((((v0.c0))<=((x''))))<<(((x'db88') NOT BETWEEN (v0.c0) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt1 ON (((((v0.c0))<=((x''))))<<(((x'db88') NOT BETWEEN (v0.c0) AND (vt1.c0)))) WHERE (CASE WHEN v0.c0 COLLATE BINARY THEN NULLIF(v0.c0, v0.c0) END);
SELECT ALL * FROM vt1, rt0, v0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((vt1.c0)))) NOT BETWEEN (((rt0.c0)+(rt0.c1))) AND (((vt1.c0)>>(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((vt1.c0)))) NOT BETWEEN (((rt0.c0)+(rt0.c1))) AND (((vt1.c0)>>(rt0.c0))))) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT ALL * FROM vt1, rt0, v0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((vt1.c0)))) NOT BETWEEN (((rt0.c0)+(rt0.c1))) AND (((vt1.c0)>>(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((vt1.c0)))) NOT BETWEEN (((rt0.c0)+(rt0.c1))) AND (((vt1.c0)>>(rt0.c0))))) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT ALL * FROM vt1, rt0, v0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((vt1.c0)))) NOT BETWEEN (((rt0.c0)+(rt0.c1))) AND (((vt1.c0)>>(rt0.c0)))));
SELECT ALL * FROM v0, vt1 WHERE (((((v0.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE BINARY) ORDER BY CAST(((('730675675')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, vt1 ORDER BY CAST(((('730675675')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS REAL) ASC  NULLS FIRST);
SELECT ALL * FROM v0, vt1 WHERE (((((v0.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE BINARY) ORDER BY CAST(((('730675675')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, vt1 ORDER BY CAST(((('730675675')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS REAL) ASC  NULLS FIRST);
SELECT ALL * FROM v0, vt1 WHERE (((((v0.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE BINARY) ORDER BY CAST(((('730675675')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS REAL) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 AS INTEGER) COLLATE NOCASE) ORDER BY (NOT (((rt0.c0) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((rt0.c0) IS FALSE))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 AS INTEGER) COLLATE NOCASE) ORDER BY (NOT (((rt0.c0) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((rt0.c0) IS FALSE))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 AS INTEGER) COLLATE NOCASE) ORDER BY (NOT (((rt0.c0) IS FALSE))) DESC;
SELECT * FROM v0 WHERE ('-410613011') ORDER BY (NOT (((v0.c0) NOT BETWEEN (v0.c0) AND ('710283268'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-410613011') IS TRUE)  as count FROM v0 ORDER BY (NOT (((v0.c0) NOT BETWEEN (v0.c0) AND ('710283268'))))  NULLS FIRST);
SELECT * FROM v0 WHERE ('-410613011') ORDER BY (NOT (((v0.c0) NOT BETWEEN (v0.c0) AND ('710283268'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-410613011') IS TRUE)  as count FROM v0 ORDER BY (NOT (((v0.c0) NOT BETWEEN (v0.c0) AND ('710283268'))))  NULLS FIRST);
SELECT * FROM v0 WHERE ('-410613011') ORDER BY (NOT (((v0.c0) NOT BETWEEN (v0.c0) AND ('710283268'))))  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (x'5a161d8b');
SELECT SUM(count) FROM (SELECT ((x'5a161d8b') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (x'5a161d8b');
SELECT SUM(count) FROM (SELECT ((x'5a161d8b') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (x'5a161d8b');
SELECT ALL * FROM v0, rt0 WHERE ((NOT (NULL)));
SELECT SUM(count) FROM (SELECT (((NOT (NULL))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((NOT (NULL)));
SELECT SUM(count) FROM (SELECT (((NOT (NULL))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((NOT (NULL)));
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(NULL AS NUMERIC))||(TYPEOF(DISTINCT 0.9911549819392386)))) ORDER BY ((CAST(v0.c0 AS REAL))IS NOT(((v0.c0)GLOB(v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS NUMERIC))||(TYPEOF(DISTINCT 0.9911549819392386)))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS REAL))IS NOT(((v0.c0)GLOB(v0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(NULL AS NUMERIC))||(TYPEOF(DISTINCT 0.9911549819392386)))) ORDER BY ((CAST(v0.c0 AS REAL))IS NOT(((v0.c0)GLOB(v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS NUMERIC))||(TYPEOF(DISTINCT 0.9911549819392386)))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS REAL))IS NOT(((v0.c0)GLOB(v0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(NULL AS NUMERIC))||(TYPEOF(DISTINCT 0.9911549819392386)))) ORDER BY ((CAST(v0.c0 AS REAL))IS NOT(((v0.c0)GLOB(v0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM rt0, v0 WHERE (CAST(x'' COLLATE RTRIM AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (CAST(x'' COLLATE RTRIM AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (CAST(x'' COLLATE RTRIM AS REAL));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE 'wB'  WHEN ((rt0.c1)>=(v0.c0)) THEN CAST(rt0.c0 AS TEXT) WHEN rt0.c1 THEN (rt0.c2 IN ()) WHEN json_array_length(rt0.c1) THEN 0.583285551466421 END);
SELECT SUM(count) FROM (SELECT ((CASE 'wB'  WHEN ((rt0.c1)>=(v0.c0)) THEN CAST(rt0.c0 AS TEXT) WHEN rt0.c1 THEN (rt0.c2 IN ()) WHEN json_array_length(rt0.c1) THEN 0.583285551466421 END) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE 'wB'  WHEN ((rt0.c1)>=(v0.c0)) THEN CAST(rt0.c0 AS TEXT) WHEN rt0.c1 THEN (rt0.c2 IN ()) WHEN json_array_length(rt0.c1) THEN 0.583285551466421 END);
SELECT SUM(count) FROM (SELECT ((CASE 'wB'  WHEN ((rt0.c1)>=(v0.c0)) THEN CAST(rt0.c0 AS TEXT) WHEN rt0.c1 THEN (rt0.c2 IN ()) WHEN json_array_length(rt0.c1) THEN 0.583285551466421 END) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE 'wB'  WHEN ((rt0.c1)>=(v0.c0)) THEN CAST(rt0.c0 AS TEXT) WHEN rt0.c1 THEN (rt0.c2 IN ()) WHEN json_array_length(rt0.c1) THEN 0.583285551466421 END);
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c0 IN ()))AND((((rt0.c1, rt0.c1, rt0.c1))>((rt0.c1, rt0.c1, v0.c0))))) WHERE (x'') ORDER BY (~ (((((v0.c0)AND(v0.c0)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c0 IN ()))AND((((rt0.c1, rt0.c1, rt0.c1))>((rt0.c1, rt0.c1, v0.c0))))) ORDER BY (~ (((((v0.c0)AND(v0.c0)))OR(v0.c0)))));
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c0 IN ()))AND((((rt0.c1, rt0.c1, rt0.c1))>((rt0.c1, rt0.c1, v0.c0))))) WHERE (x'') ORDER BY (~ (((((v0.c0)AND(v0.c0)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c0 IN ()))AND((((rt0.c1, rt0.c1, rt0.c1))>((rt0.c1, rt0.c1, v0.c0))))) ORDER BY (~ (((((v0.c0)AND(v0.c0)))OR(v0.c0)))));
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c0 IN ()))AND((((rt0.c1, rt0.c1, rt0.c1))>((rt0.c1, rt0.c1, v0.c0))))) WHERE (x'') ORDER BY (~ (((((v0.c0)AND(v0.c0)))OR(v0.c0))));
SELECT * FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)OR(v0.c0 COLLATE NOCASE)))AND((v0.c0 IN ())))) ORDER BY (((v0.c0))==((((((x'3306')OR(v0.c0)))OR(v0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)OR(v0.c0 COLLATE NOCASE)))AND((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0))=((((((x'3306')OR(v0.c0)))OR(v0.c0))))) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)OR(v0.c0 COLLATE NOCASE)))AND((v0.c0 IN ())))) ORDER BY (((v0.c0))==((((((x'3306')OR(v0.c0)))OR(v0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)OR(v0.c0 COLLATE NOCASE)))AND((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0))=((((((x'3306')OR(v0.c0)))OR(v0.c0))))) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)OR(v0.c0 COLLATE NOCASE)))AND((v0.c0 IN ())))) ORDER BY (((v0.c0))==((((((x'3306')OR(v0.c0)))OR(v0.c0))))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((rt0.c2 IN (rt0.c0, rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN (rt0.c0, rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2 IN (rt0.c0, rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN (rt0.c0, rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2 IN (rt0.c0, rt0.c1)) IN ()));
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)/((((vt1.c0, NULL, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)/((((vt1.c0, NULL, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)/((((vt1.c0, NULL, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)/((((vt1.c0, NULL, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)/((((vt1.c0, NULL, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))));
SELECT * FROM v0 CROSS JOIN rt0 ON CAST((- (rt0.c1)) AS BLOB) RIGHT OUTER JOIN vt1 ON CAST(vt1.c0 AS BLOB) WHERE (((rt0.c1 COLLATE RTRIM) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON CAST((- (rt0.c1)) AS BLOB) RIGHT OUTER JOIN vt1 ON CAST(vt1.c0 AS BLOB));
SELECT * FROM v0 CROSS JOIN rt0 ON CAST((- (rt0.c1)) AS BLOB) RIGHT OUTER JOIN vt1 ON CAST(vt1.c0 AS BLOB) WHERE (((rt0.c1 COLLATE RTRIM) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON CAST((- (rt0.c1)) AS BLOB) RIGHT OUTER JOIN vt1 ON CAST(vt1.c0 AS BLOB));
SELECT * FROM v0 CROSS JOIN rt0 ON CAST((- (rt0.c1)) AS BLOB) RIGHT OUTER JOIN vt1 ON CAST(vt1.c0 AS BLOB) WHERE (((rt0.c1 COLLATE RTRIM) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt1.c0 END)));
SELECT ALL * FROM rt0, vt1, v0 WHERE (((((v0.c0 COLLATE RTRIM)OR(rt0.c1 COLLATE BINARY)))OR(rt0.c0))) ORDER BY 0.6142446539275853  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0 COLLATE RTRIM)OR(rt0.c1 COLLATE BINARY)))OR(rt0.c0))) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY 0.6142446539275853  NULLS LAST);
SELECT ALL * FROM rt0, vt1, v0 WHERE (((((v0.c0 COLLATE RTRIM)OR(rt0.c1 COLLATE BINARY)))OR(rt0.c0))) ORDER BY 0.6142446539275853  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0 COLLATE RTRIM)OR(rt0.c1 COLLATE BINARY)))OR(rt0.c0))) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY 0.6142446539275853  NULLS LAST);
SELECT ALL * FROM rt0, vt1, v0 WHERE (((((v0.c0 COLLATE RTRIM)OR(rt0.c1 COLLATE BINARY)))OR(rt0.c0))) ORDER BY 0.6142446539275853  NULLS LAST;
SELECT * FROM vt1, rt0 WHERE (TRIM(CAST(rt0.c0 AS NUMERIC), 0.19233668684340977));
SELECT SUM(count) FROM (SELECT ((TRIM(CAST(rt0.c0 AS NUMERIC), 0.19233668684340977)) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (TRIM(CAST(rt0.c0 AS NUMERIC), 0.19233668684340977));
SELECT SUM(count) FROM (SELECT ((TRIM(CAST(rt0.c0 AS NUMERIC), 0.19233668684340977)) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (TRIM(CAST(rt0.c0 AS NUMERIC), 0.19233668684340977));
SELECT * FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)-(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)-(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)-(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)-(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)-(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL * FROM vt1 NOT INDEXED WHERE ((((('1398875690')GLOB(vt1.c0))) BETWEEN (NULL) AND (((((((((vt1.c0)OR(vt1.c0)))AND('-1554561328')))OR(vt1.c0)))AND('-963667678'))))) ORDER BY ((CAST(vt1.c0 AS NUMERIC))LIKE((((vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('1398875690')GLOB(vt1.c0))) BETWEEN (NULL) AND (((((((((vt1.c0)OR(vt1.c0)))AND('-1554561328')))OR(vt1.c0)))AND('-963667678'))))) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS NUMERIC))LIKE((((vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0)))))  NULLS LAST);
SELECT ALL * FROM vt1 NOT INDEXED WHERE ((((('1398875690')GLOB(vt1.c0))) BETWEEN (NULL) AND (((((((((vt1.c0)OR(vt1.c0)))AND('-1554561328')))OR(vt1.c0)))AND('-963667678'))))) ORDER BY ((CAST(vt1.c0 AS NUMERIC))LIKE((((vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('1398875690')GLOB(vt1.c0))) BETWEEN (NULL) AND (((((((((vt1.c0)OR(vt1.c0)))AND('-1554561328')))OR(vt1.c0)))AND('-963667678'))))) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS NUMERIC))LIKE((((vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0)))))  NULLS LAST);
SELECT ALL * FROM vt1 NOT INDEXED WHERE ((((('1398875690')GLOB(vt1.c0))) BETWEEN (NULL) AND (((((((((vt1.c0)OR(vt1.c0)))AND('-1554561328')))OR(vt1.c0)))AND('-963667678'))))) ORDER BY ((CAST(vt1.c0 AS NUMERIC))LIKE((((vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0)))))  NULLS LAST;
SELECT * FROM rt0, v0, vt1 WHERE (((0.6251499689209611) NOTNULL)) ORDER BY (+ (((rt0.c2)>(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((0.6251499689209611) NOTNULL)) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY (+ (((rt0.c2)>(rt0.c1)))) DESC);
SELECT * FROM rt0, v0, vt1 WHERE (((0.6251499689209611) NOTNULL)) ORDER BY (+ (((rt0.c2)>(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((0.6251499689209611) NOTNULL)) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY (+ (((rt0.c2)>(rt0.c1)))) DESC);
SELECT * FROM rt0, v0, vt1 WHERE (((0.6251499689209611) NOTNULL)) ORDER BY (+ (((rt0.c2)>(rt0.c1)))) DESC;
SELECT * FROM v0, rt0 WHERE (((4.3609748E7)||(0.368769399801536 COLLATE BINARY))) ORDER BY v0.c0 COLLATE NOCASE COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((4.3609748E7)||(0.368769399801536 COLLATE BINARY))) IS TRUE)  as count FROM v0, rt0 ORDER BY v0.c0 COLLATE NOCASE COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE (((4.3609748E7)||(0.368769399801536 COLLATE BINARY))) ORDER BY v0.c0 COLLATE NOCASE COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((4.3609748E7)||(0.368769399801536 COLLATE BINARY))) IS TRUE)  as count FROM v0, rt0 ORDER BY v0.c0 COLLATE NOCASE COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE (((4.3609748E7)||(0.368769399801536 COLLATE BINARY))) ORDER BY v0.c0 COLLATE NOCASE COLLATE BINARY ASC  NULLS FIRST;
SELECT * FROM vt1, rt0, v0 WHERE ((+ (v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((+ (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT * FROM vt1, rt0, v0 WHERE ((+ (v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((+ (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT * FROM vt1, rt0, v0 WHERE ((+ (v0.c0 COLLATE BINARY)));
SELECT * FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) BETWEEN (((rt0.c1) IS TRUE)) AND (CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) BETWEEN (((rt0.c1) IS TRUE)) AND (CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) BETWEEN (((rt0.c1) IS TRUE)) AND (CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) BETWEEN (((rt0.c1) IS TRUE)) AND (CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) BETWEEN (((rt0.c1) IS TRUE)) AND (CAST(rt0.c2 AS BLOB))));
SELECT COUNT(*) FROM vt1, v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END) NOT BETWEEN ((NOT (vt1.c0))) AND (((v0.c0) BETWEEN (vt1.c0) AND (v0.c0))))) ORDER BY vt1.c0 ASC, ((v0.c0 COLLATE NOCASE)IS(0x5d91dbd2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END) NOT BETWEEN ((NOT (vt1.c0))) AND (((v0.c0) BETWEEN (vt1.c0) AND (v0.c0))))) IS TRUE)  as count FROM vt1, v0 ORDER BY vt1.c0 ASC, ((v0.c0 COLLATE NOCASE)IS(0x5d91dbd2))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END) NOT BETWEEN ((NOT (vt1.c0))) AND (((v0.c0) BETWEEN (vt1.c0) AND (v0.c0))))) ORDER BY vt1.c0 ASC, ((v0.c0 COLLATE NOCASE)IS(0x5d91dbd2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END) NOT BETWEEN ((NOT (vt1.c0))) AND (((v0.c0) BETWEEN (vt1.c0) AND (v0.c0))))) IS TRUE)  as count FROM vt1, v0 ORDER BY vt1.c0 ASC, ((v0.c0 COLLATE NOCASE)IS(0x5d91dbd2))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END) NOT BETWEEN ((NOT (vt1.c0))) AND (((v0.c0) BETWEEN (vt1.c0) AND (v0.c0))))) ORDER BY vt1.c0 ASC, ((v0.c0 COLLATE NOCASE)IS(0x5d91dbd2))  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((IFNULL(DISTINCT rt0.c0, rt0.c0))AND((rt0.c1 IN ()))))OR(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((IFNULL(DISTINCT rt0.c0, rt0.c0))AND((rt0.c1 IN ()))))OR(rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((IFNULL(DISTINCT rt0.c0, rt0.c0))AND((rt0.c1 IN ()))))OR(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((IFNULL(DISTINCT rt0.c0, rt0.c0))AND((rt0.c1 IN ()))))OR(rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((IFNULL(DISTINCT rt0.c0, rt0.c0))AND((rt0.c1 IN ()))))OR(rt0.c2)));
SELECT * FROM v0 WHERE (((((((((((v0.c0)OR('0.17823699116378522')))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))) BETWEEN ((v0.c0 IN ())) AND (v0.c0 COLLATE RTRIM))) ORDER BY (((((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND('wC')))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))<(('2&JNWkQI')))  NULLS LAST, ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR(NULL)))OR(v0.c0 COLLATE NOCASE)) ASC  NULLS FIRST, (((- (v0.c0)))!=('')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)OR('0.17823699116378522')))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))) BETWEEN ((v0.c0 IN ())) AND (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY (((((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND('wC')))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))<(('2&JNWkQI')))  NULLS LAST, ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR(NULL)))OR(v0.c0 COLLATE NOCASE)) ASC  NULLS FIRST, (((- (v0.c0)))<>('')) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (((((((((((v0.c0)OR('0.17823699116378522')))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))) BETWEEN ((v0.c0 IN ())) AND (v0.c0 COLLATE RTRIM))) ORDER BY (((((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND('wC')))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))<(('2&JNWkQI')))  NULLS LAST, ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR(NULL)))OR(v0.c0 COLLATE NOCASE)) ASC  NULLS FIRST, (((- (v0.c0)))!=('')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)OR('0.17823699116378522')))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))) BETWEEN ((v0.c0 IN ())) AND (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY (((((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND('wC')))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))<(('2&JNWkQI')))  NULLS LAST, ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR(NULL)))OR(v0.c0 COLLATE NOCASE)) ASC  NULLS FIRST, (((- (v0.c0)))<>('')) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (((((((((((v0.c0)OR('0.17823699116378522')))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))) BETWEEN ((v0.c0 IN ())) AND (v0.c0 COLLATE RTRIM))) ORDER BY (((((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND('wC')))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))<(('2&JNWkQI')))  NULLS LAST, ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR(NULL)))OR(v0.c0 COLLATE NOCASE)) ASC  NULLS FIRST, (((- (v0.c0)))!=('')) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0 WHERE (((x'c9fb') ISNULL));
SELECT SUM(count) FROM (SELECT ((((x'c9fb') ISNULL)) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((x'c9fb') ISNULL));
SELECT SUM(count) FROM (SELECT ((((x'c9fb') ISNULL)) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((x'c9fb') ISNULL));
SELECT ALL * FROM vt1 NOT INDEXED, v0, rt0 WHERE (0.01260586479801118) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.01260586479801118) IS TRUE)  as count FROM vt1, v0, rt0 ORDER BY rt0.c1 DESC);
SELECT ALL * FROM vt1 NOT INDEXED, v0, rt0 WHERE (0.01260586479801118) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.01260586479801118) IS TRUE)  as count FROM vt1, v0, rt0 ORDER BY rt0.c1 DESC);
SELECT ALL * FROM vt1 NOT INDEXED, v0, rt0 WHERE (0.01260586479801118) ORDER BY rt0.c1 DESC;
SELECT * FROM v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM);
SELECT * FROM v0, vt1, rt0 WHERE ('''艹+U\r') ORDER BY rt0.c2  NULLS LAST, (~ (vt1.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (('''艹+U\r') IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY rt0.c2  NULLS LAST, (~ (vt1.c0)) COLLATE BINARY);
SELECT * FROM v0, vt1, rt0 WHERE ('''艹+U\r') ORDER BY rt0.c2  NULLS LAST, (~ (vt1.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (('''艹+U\r') IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY rt0.c2  NULLS LAST, (~ (vt1.c0)) COLLATE BINARY);
SELECT * FROM v0, vt1, rt0 WHERE ('''艹+U\r') ORDER BY rt0.c2  NULLS LAST, (~ (vt1.c0)) COLLATE BINARY;
SELECT * FROM vt1, rt0, v0 WHERE (((CASE WHEN vt1.c0 THEN rt0.c1 END) IS FALSE)) ORDER BY ((LIKELY(rt0.c2)) NOT BETWEEN (((((((((rt0.c0)AND(NULL)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))) AND (CAST(0.7058874171656819 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN rt0.c1 END) IS FALSE)) IS TRUE)  as count FROM vt1, rt0, v0 ORDER BY ((LIKELY(rt0.c2)) NOT BETWEEN (((((((((rt0.c0)AND(NULL)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))) AND (CAST(0.7058874171656819 AS NUMERIC)))  NULLS FIRST);
SELECT * FROM vt1, rt0, v0 WHERE (((CASE WHEN vt1.c0 THEN rt0.c1 END) IS FALSE)) ORDER BY ((LIKELY(rt0.c2)) NOT BETWEEN (((((((((rt0.c0)AND(NULL)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))) AND (CAST(0.7058874171656819 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN rt0.c1 END) IS FALSE)) IS TRUE)  as count FROM vt1, rt0, v0 ORDER BY ((LIKELY(rt0.c2)) NOT BETWEEN (((((((((rt0.c0)AND(NULL)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))) AND (CAST(0.7058874171656819 AS NUMERIC)))  NULLS FIRST);
SELECT * FROM vt1, rt0, v0 WHERE (((CASE WHEN vt1.c0 THEN rt0.c1 END) IS FALSE)) ORDER BY ((LIKELY(rt0.c2)) NOT BETWEEN (((((((((rt0.c0)AND(NULL)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))) AND (CAST(0.7058874171656819 AS NUMERIC)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM v0, rt0, vt1);
SELECT ALL COUNT(*) FROM v0, rt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM v0, rt0, vt1);
SELECT ALL COUNT(*) FROM v0, rt0, vt1 WHERE (vt1.c0);
SELECT ALL * FROM vt1 CROSS JOIN v0 ON CAST(NULLIF(NULL, vt1.c0) AS INTEGER) WHERE ((((((vt1.c0 IN (v0.c0, v0.c0)))AND(v0.c0 COLLATE BINARY)))AND(vt1.c0 COLLATE NOCASE))) ORDER BY LIKELY(((vt1.c0) NOT NULL)), ((((v0.c0) ISNULL))GLOB(v0.c0)) DESC  NULLS FIRST, (((+ (v0.c0))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0 IN (v0.c0, v0.c0)))AND(v0.c0 COLLATE BINARY)))AND(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 CROSS JOIN v0 ON CAST(NULLIF(NULL, vt1.c0) AS INTEGER) ORDER BY LIKELY(((vt1.c0) NOT NULL)), ((((v0.c0) ISNULL))GLOB(v0.c0)) DESC  NULLS FIRST, (((+ (v0.c0))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (NULL))  NULLS FIRST);
SELECT ALL * FROM vt1 CROSS JOIN v0 ON CAST(NULLIF(NULL, vt1.c0) AS INTEGER) WHERE ((((((vt1.c0 IN (v0.c0, v0.c0)))AND(v0.c0 COLLATE BINARY)))AND(vt1.c0 COLLATE NOCASE))) ORDER BY LIKELY(((vt1.c0) NOT NULL)), ((((v0.c0) ISNULL))GLOB(v0.c0)) DESC  NULLS FIRST, (((+ (v0.c0))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0 IN (v0.c0, v0.c0)))AND(v0.c0 COLLATE BINARY)))AND(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 CROSS JOIN v0 ON CAST(NULLIF(NULL, vt1.c0) AS INTEGER) ORDER BY LIKELY(((vt1.c0) NOT NULL)), ((((v0.c0) ISNULL))GLOB(v0.c0)) DESC  NULLS FIRST, (((+ (v0.c0))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (NULL))  NULLS FIRST);
SELECT ALL * FROM vt1 CROSS JOIN v0 ON CAST(NULLIF(NULL, vt1.c0) AS INTEGER) WHERE ((((((vt1.c0 IN (v0.c0, v0.c0)))AND(v0.c0 COLLATE BINARY)))AND(vt1.c0 COLLATE NOCASE))) ORDER BY LIKELY(((vt1.c0) NOT NULL)), ((((v0.c0) ISNULL))GLOB(v0.c0)) DESC  NULLS FIRST, (((+ (v0.c0))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (NULL))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt1, v0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt1, v0);
SELECT ALL COUNT(*) FROM rt0, vt1, v0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt1, v0);
SELECT ALL COUNT(*) FROM rt0, vt1, v0 WHERE (rt0.c2);
SELECT ALL * FROM vt1, rt0, v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))IS NOT(((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))IS NOT(((rt0.c2) ISNULL)))) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT ALL * FROM vt1, rt0, v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))IS NOT(((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))IS NOT(((rt0.c2) ISNULL)))) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT ALL * FROM vt1, rt0, v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))IS NOT(((rt0.c2) ISNULL))));
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 COLLATE BINARY AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 COLLATE BINARY AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 COLLATE BINARY AS TEXT));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON highlight((rt0.c2 IN ()), CASE WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN '' THEN x'' ELSE v0.c0 END, ((rt0.c1)>>(0.6142446539275853)), NULLIF(DISTINCT rt0.c1, rt0.c2)) WHERE ((((TYPEOF(rt0.c1)))!=(((NOT (v0.c0)))))) ORDER BY CAST(CAST(rt0.c1 AS INTEGER) AS TEXT) DESC, ((rt0.c0 IN ()) IN ()) DESC  NULLS LAST, (((rt0.c0, rt0.c2, x'')) BETWEEN ((((rt0.c2)>(NULL)), x'' COLLATE RTRIM, CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN x'' ELSE v0.c0 END)) AND (((~ (v0.c0)), rt0.c1, ((rt0.c0)<<(rt0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((TYPEOF(rt0.c1)))!=(((NOT (v0.c0)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON highlight((rt0.c2 IN ()), CASE WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN '' THEN x'' ELSE v0.c0 END, ((rt0.c1)>>(0.6142446539275853)), NULLIF(DISTINCT rt0.c1, rt0.c2)) ORDER BY CAST(CAST(rt0.c1 AS INTEGER) AS TEXT) DESC, ((rt0.c0 IN ()) IN ()) DESC  NULLS LAST, (((rt0.c0, rt0.c2, x'')) BETWEEN ((((rt0.c2)>(NULL)), x'' COLLATE RTRIM, CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN x'' ELSE v0.c0 END)) AND (((~ (v0.c0)), rt0.c1, ((rt0.c0)<<(rt0.c2))))) DESC);
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON highlight((rt0.c2 IN ()), CASE WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN '' THEN x'' ELSE v0.c0 END, ((rt0.c1)>>(0.6142446539275853)), NULLIF(DISTINCT rt0.c1, rt0.c2)) WHERE ((((TYPEOF(rt0.c1)))!=(((NOT (v0.c0)))))) ORDER BY CAST(CAST(rt0.c1 AS INTEGER) AS TEXT) DESC, ((rt0.c0 IN ()) IN ()) DESC  NULLS LAST, (((rt0.c0, rt0.c2, x'')) BETWEEN ((((rt0.c2)>(NULL)), x'' COLLATE RTRIM, CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN x'' ELSE v0.c0 END)) AND (((~ (v0.c0)), rt0.c1, ((rt0.c0)<<(rt0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((TYPEOF(rt0.c1)))!=(((NOT (v0.c0)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON highlight((rt0.c2 IN ()), CASE WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN '' THEN x'' ELSE v0.c0 END, ((rt0.c1)>>(0.6142446539275853)), NULLIF(DISTINCT rt0.c1, rt0.c2)) ORDER BY CAST(CAST(rt0.c1 AS INTEGER) AS TEXT) DESC, ((rt0.c0 IN ()) IN ()) DESC  NULLS LAST, (((rt0.c0, rt0.c2, x'')) BETWEEN ((((rt0.c2)>(NULL)), x'' COLLATE RTRIM, CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN x'' ELSE v0.c0 END)) AND (((~ (v0.c0)), rt0.c1, ((rt0.c0)<<(rt0.c2))))) DESC);
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON highlight((rt0.c2 IN ()), CASE WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN '' THEN x'' ELSE v0.c0 END, ((rt0.c1)>>(0.6142446539275853)), NULLIF(DISTINCT rt0.c1, rt0.c2)) WHERE ((((TYPEOF(rt0.c1)))!=(((NOT (v0.c0)))))) ORDER BY CAST(CAST(rt0.c1 AS INTEGER) AS TEXT) DESC, ((rt0.c0 IN ()) IN ()) DESC  NULLS LAST, (((rt0.c0, rt0.c2, x'')) BETWEEN ((((rt0.c2)>(NULL)), x'' COLLATE RTRIM, CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN x'' ELSE v0.c0 END)) AND (((~ (v0.c0)), rt0.c1, ((rt0.c0)<<(rt0.c2))))) DESC;
