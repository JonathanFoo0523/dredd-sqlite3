-- Time: 2024/06/10 06:39:51
-- Database: database42
-- Database version: 3.40.0
-- seed value: 2064110942
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, c1, languageid="lid", tokenize=simple); -- 0ms;
INSERT OR ABORT INTO vt0 VALUES ('QI\r7W?', x'', '-496929876'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES (0.5199611766930867, ''); -- 1ms;
INSERT OR ABORT INTO vt0(c1) VALUES (-496929876); -- 1ms;
PRAGMA main.application_id; -- 0ms;
INSERT OR IGNORE INTO vt0(lid, c1, c0) VALUES ('-939933303', NULL, '-564402394'), (x'', x'3751', NULL), (NULL, 0.26709193325135216, 0.3646634222629944); -- 1ms;
PRAGMA temp.optimize; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES ('-760932567'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA foreign_keys = false; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=755711276 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')) BETWEEN ((-123864923)) AND ((-1561750353)))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-939933303 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 4'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'4ed3' COLLATE NOCASE THEN ((NULL) BETWEEN (0.8201634681257767) AND ('')) ELSE (- (NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1851970092'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-760932567' COLLATE NOCASE)+(((NULL)||('o7<.')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CAST(x'' AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -496929876'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-123864923 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(((((-58704729)AND(NULL)))OR('2029716867'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-760932567 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=-939933303'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE 1103465584  WHEN 0.6131255771221381 THEN NULL END)AND(0.036768362847308)))AND(NULLIF(DISTINCT x'', -5.8704729E7))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 786802112; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2131940415 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=347699097 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((('QI\r7W?') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '761742841 -1953311830 755711276 sz=1704702304'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-760932567 -537434655 sz=1851970092'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=761742841 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (- (((((((((0.5540775131953963)AND(NULL)))AND('hFZlW/u#8')))AND('-58704729')))AND(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '277225921'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=207034537 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1445147339'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT ((0.7109928262159659) NOTNULL), ((('1476092187')) NOT BETWEEN (('F\r5h')) AND ((0.34070744276517995)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-2121697167 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=379897031 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')AND('VCd')))OR(NULL))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=955797406 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1658406967 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-58704729'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((x'b2b7')OR('')))OR('lN>')) THEN ((0.4945520278750405)+(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-649407782'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=794464337 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.9718849786268193; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1658406967 sz=794464337'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=207034537'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=982266981 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-288786993'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1455116372'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(((x'caefbf88') NOT BETWEEN ('Jy') AND (7.94464337E8)), NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 769458365 THEN -312366572 END COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-496929876 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CAST(x'0352' AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN '-1590389030' THEN NULL WHEN '0.7109928262159659' THEN x'ea9e5ea8' WHEN x'cab8' THEN 0.2418182048154296 WHEN x'796a' THEN x'' WHEN 'Y_HH2%!v⭦' THEN NULL END)OR('1111323263' COLLATE BINARY)))OR((- (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 2 sz=208295502 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=982266981'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UPPER('955797406'))GLOB(CAST('769458365' AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-886793429 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-424482394'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ()) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((1669356464)OR(-220558692)))OR(NULL))))=(((+ (0.7589479688016345))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1464098277 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1669356464') NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0x389cf5e3) BETWEEN ('0.5540775131953963') AND ('փtyev㍍')))AND((0.6733315130403916 IN ()))))OR('955797406' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1232327419 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7778396547535107)OR(x''))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'') BETWEEN (NULL) AND (0.5869304191757279)))AND(CAST(NULL AS TEXT))))AND((((((((((((('-1590389030')AND('1103465584')))OR(0X1b8f0dcd)))AND(NULL)))OR(NULL)))OR(x'467079dd')))OR(x'')))))OR((((982266981, x'', '368034684', -505637987, '-939933303')) NOT BETWEEN ((x'', 2.029716867E9, 1568018121, 'lN>', 'dUD')) AND ((NULL, ' ', '955797406', 0.4095494305479497, 0.7109928262159659))))))OR((('') NOT BETWEEN ('') AND ('~+vDf5zP桱')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-123864923 1464098277 sz=1669356464 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1561750353 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1953311830 sz=1476092187 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1939700687 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-9223372036854775808 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL IN ())))==(((x'' IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('B' IN ()) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-683100027 sz=2023700707'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1142949820 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=414219468 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1953007751'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '208295502 1292724337 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((~ (0xffffffffc9207e5f)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY((((NULL)) BETWEEN ((NULL)) AND (('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('|U')AND(x'')))OR(1.939700687E9)))OR('')))AND(x'')) COLLATE NOCASE; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '4 2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=277225921'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE PRINTF((-505637987 IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0x29d4d5f7)<(NULL)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=370640547 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_COMPILEOPTION_USED(0.5783573110692597); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)>(-537434655)))OR(('' IN ('-2112949216', NULL)))))OR((~ (0Xffffffffdff765e1)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1823652132'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1538660581 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=761742841 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-2035645503 462360013 2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('701814263')+(0x389cf5e3)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE RTRIM(-6.83100027E8) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1292461248 sz=-537434655 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=714893492 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-634251837'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('1654386685')%(x'')) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=189603922'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-106643591 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'fc08'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-556227864 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.5540775131953963) NOT NULL))AND((('-1765456522')IS(-728187485)))))OR(CAST('462360013' AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=81117950 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2123833019 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=769458365'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1314590572 277225921 sz=200928061'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((LOWER('I*s'), CAST(NULL AS NUMERIC), CAST(750544920 AS NUMERIC)))<(((+ (x'')), CASE x''  WHEN NULL THEN 0X11c49d98 END, (('rm쩡Tsq') BETWEEN ('761742841') AND ('xeKC*a'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=189603922 unordered noskipscan'); -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=762563082 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((0.3884734270343686)) BETWEEN ((1.669356464E9)) AND (('-1445147339')))  WHEN (x'' IN ()) THEN (0.5869304191757279 IN ()) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=414219468 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((-6.34251837E8)) BETWEEN ((0Xffffffffeec975cf)) AND ((NULL))))|(((x'') NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '~+vdf5zp桱' COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1477794069 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1103465584 sz=1065222045'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (+ ('1492936120'))  WHEN CAST('-537434655' AS INTEGER) THEN (((0.44266252966646824))<((x''))) WHEN '0.036768362847308' THEN (((('2030091835')AND(NULL)))OR('')) WHEN (0.9498990265406903 IN (x'', 0.188649710512113)) THEN ((x'') BETWEEN (x'') AND (x'')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE '414219468'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.6131255771221381 COLLATE RTRIM) BETWEEN ((((0.43549462797114147, 0.61985540692967, NULL))==((x'', 0xfffffffff7bff47b, 0.34393675083994246)))) AND ('-771814544')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-6.49407782E8)) BETWEEN ((NULL)) AND (((~ ('0.6131255771221381'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=870386992'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))<=((((((((('')OR(0.09838765907725167)))OR(NULL)))AND(NULL)))AND('-1495048058')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('368034684' AS TEXT) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1455116372 870386992 sz=2030091835'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1862822785 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1538660581 -2031756829 sz=-566006037 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')<=(JULIANDAY(0.672176517717388, '370640547', NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)AND('VCd')))AND('-1742015429')))+((((NULL))!=(('414219468'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.31309094697227113 COLLATE NOCASE  WHEN ((x'c666')<(NULL)) THEN ((0.5612766758569523)LIKE(0.43419466843252064)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1139517421 sz=-1639814040 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT CASE '1111323263'  WHEN x'' THEN NULL WHEN x'' THEN NULL WHEN 'Xe' THEN '0.2418182048154296' ELSE 0.20163710346172936 END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((x'10b2')/(CAST('m*NxeQQ' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=970426399 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('a9譀(!	' IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('!,')>>('8Z'))  WHEN (NULL IN (0Xffffffffe3adaac6)) THEN (((('')AND(NULL)))AND('565303409')) WHEN CASE ''  WHEN '' THEN x'' WHEN '2030091835' THEN 0.673755684788397 WHEN 0.36515618144488027 THEN '-1644391532' ELSE '189603922' END THEN ('XE' IN ()) WHEN (+ (0x707dda49)) THEN ((0.5199611766930867) IS FALSE) ELSE ((0.25386817248738835) NOT NULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1.14294982E9)AND(NULL)))<<(((NULL) IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CASE WHEN '1369542815' THEN '꧚zGZgbV' END)OR((- (NULL)))))AND(LOWER(DISTINCT 'dud'))))AND(CASE WHEN 0.1925946582588013 THEN 0.16404844805032925 WHEN '0.673755684788397' THEN '1811999710' WHEN NULL THEN 1654386685 END)))AND(((((((((NULL)OR(0.8622073498727127)))OR(NULL)))OR(0.9403414883988047)))OR('1711220875')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-527651529 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-475157818 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE WHEN x'' THEN '' ELSE NULL END, ((0.8321387947122214) IS FALSE), CAST('-103896005' AS INTEGER)))<=((x'', x'', (('')LIKE('-359457811'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'2675') IS TRUE) THEN CAST(0.43419466843252064 AS TEXT) ELSE x'' COLLATE RTRIM END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULLIF(NULL, '?_P}\rT>RP'))OR(((x'')-(0.08514461426074094)))))AND(((NULL) NOT BETWEEN (0.5784679554710715) AND (x'0530')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-505637987 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0x2a9c68b4 THEN UPPER('1568018121') WHEN (('915621147') IS TRUE) THEN (('Fr') IS FALSE) WHEN UNICODE('') THEN x'' END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1669356464'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1095873779 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-886793429 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('uoif♈7' IN ()) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')>('208295502')) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1905593861 sz=1049373704 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0.34070744276517995'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=227548003 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1735831638'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.9759979574920998, 769458365, '')) NOT BETWEEN ((NULL, NULL, '200928061')) AND ((-1187694898, 0.42924807660898723, x'41e6'))), ('-1313012015' IN ()), (1.14294982E9 IN ())))>((json(''), (0.02171148949508228 IN ()), ((((((((0.7109928262159659)AND(0xfffffffff2b7d45d)))OR('sSVd⡷')))OR('970426399')))OR(NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1139517421 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-254142800 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1781294391 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-994726781 0 sz=-1445147339 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)%(NULL)))-(COALESCE(DISTINCT '867933062', '-2123833019'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=965226369 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('208295502' IN (CAST(0.7132929504779127 AS TEXT))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.5268064059057024 IN ()))OR(((-5.37434655E8) IS TRUE))))OR((x'05fb' IN ('208295502', '')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-564402394 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-794414746'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '469693868 sz=792697826 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1703394202 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1936514958 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.19323650304465323  WHEN -771814544 THEN 'J3' END)GLOB(((((((((NULL)AND('')))AND(0.5638405421833719)))AND(7.62563082E8)))AND(0.9216339727995174)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1292461248'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((((('-434761112')AND(0.2905898229926551)))AND(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('Woi7Z' COLLATE NOCASE) BETWEEN (((x'')>(NULL))) AND (('1250372724' IN (0.546951004162936)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 4 sz=-920617377 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 7ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('o촵dﾝ\r')<(NULL))) NOT BETWEEN (CHAR(0.7362977714794758)) AND ((('4H')<<(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 8276894 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-9223372036854775808'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-250979210 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1455116372 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1254282684 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1304008828 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=921663103 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)=('508138943')) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1233129863 sz=-1253735206'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-1840360973 COLLATE RTRIM) NOT BETWEEN ((NOT (''))) AND ('-0.0' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1638169713'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN '' THEN NULL WHEN NULL THEN NULL WHEN 0.2352526133997097 THEN '0.8201634681257767' ELSE x'' END THEN (((0.766524302616273)) NOT BETWEEN ((1281047967)) AND ((0.3852913476386939))) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4 sz=-138414981 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1538660581 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((0.8548677947702654, '', NULL)) NOT BETWEEN (('', 0.8201634681257767, '1953007751')) AND ((x'', '277225921', NULL))) THEN CAST('-1953311830' AS INTEGER) WHEN (~ (NULL)) THEN ((NULL) NOTNULL) WHEN 0.46979255655568175 THEN TRIM(DISTINCT NULL, 0.39716183244715597) ELSE CASE WHEN NULL THEN NULL END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1688505152 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((((((((x'')OR(NULL)))AND('袇{n䮘')))OR(x'')))AND('-393431817')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-123864923') BETWEEN (NULL) AND ('韑Yu-'))) BETWEEN (TYPEOF(DISTINCT 0x555038e6)) AND (((NULL) IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=776654237 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=943248478 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1127296742'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TYPEOF(x'')) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1257335366 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'')<<(NULL)))AND(((NULL)<>(NULL)))))OR(((NULL) ISNULL))))AND(TRIM(0Xffffffffc184ca69))))AND((+ (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1339375372 sz=-58704729 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-202674617 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((- ('189603922')))AND(x'' COLLATE BINARY)))AND(((x'')||('1896598042')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1112187736'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=761742841'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((-1.95331183E9)AND(0.653575581346601)))OR('10*s')))*(('' IN (0.430395185186523)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1654386685 0 sz=1513060597 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1467984783 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((NULL, NULL, '-븻')) BETWEEN (('-1476800233', 'xO痏A.<l6㗧', 0.5142589822200712)) AND ((NULL, '%ị', x'75ef'))))AND(TYPEOF(DISTINCT 'k?'))))OR(CASE NULL  WHEN '-728187485' THEN '1854214994' WHEN 0.546951004162936 THEN -2031756829 WHEN 0.12326047359905301 THEN NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=277225921 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-537434655 sz=-896605260 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT x'' COLLATE RTRIM, (((('1477794069')OR('298098072')))AND(NULL)), CASE WHEN NULL THEN NULL END, ((NULL) IS FALSE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1577240649 sz=-1378430793 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(((7.14893492E8)<(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1723162852 sz=-1449122186 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE NOCASE) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '395948220 2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((((x'54d1')) BETWEEN ((NULL)) AND (('48719053'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-537434655 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.8622073498727127 COLLATE RTRIM  WHEN MIN(NULL, 0.8007304250418494, NULL, 207034537) THEN ((436525015)<(0.7729452549008853)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=481830434 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-320969238 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '779835371 -2110418058'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)&('%]'))) NOT BETWEEN ((+ (0.4945520278750405))) AND ((((0.1870554834565351)) NOT BETWEEN ((x'')) AND ((0.24595879914468277))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=890529286 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'' COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1851970092 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ('1401911827' IN (NULL, (((0.20163710346172936)) NOT BETWEEN ((NULL)) AND ((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2029716867'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN x'' ELSE '370640547' END)>((((('mH1a')OR(x'')))AND(x'7103')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-25336221 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ROUND(NULL, x'54f3')  WHEN (('1420439579')==('Za')) THEN ('-746073621' IN ()) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-775521574 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((('j<uB#')) BETWEEN ((0.0757475888222292)) AND ((0.8297802932580665))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST('2131940415' AS BLOB) THEN CAST(0.8124841100024774 AS NUMERIC) WHEN ((x'1d37bf0f')>>(NULL)) THEN CASE WHEN '1464098277' THEN x'' END WHEN CAST(0.3451558639575947 AS REAL) THEN ((0Xffffffffa9298401) IS FALSE) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=702806553 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1239233741'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2047369953'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-472097706 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')&((('')<(0x659bb160)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1595235740 sz=1111323263 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS TEXT))<=(-642781775 COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-564402394'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1065222045 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=524710245 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-176980135 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)OR(x'7b6c')))AND(NULL)))<<((x'bab91ecb' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-771814544 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((0x49cfe969)) NOT BETWEEN ((CAST('955797406' AS INTEGER))) AND (((NOT (x'f60c'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=714893492 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '\!7f㑥rBn'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=250191031 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2091254264 0 sz=55410972'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'i7H工'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-220558692'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((x'') NOTNULL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1764117904 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1688505152 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '582370977 sz=1068564164'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', NULL, 0Xffffffffa6df5d46)) NOT BETWEEN (((((0X3a907ad1, -760932567, '', NULL, x'')) NOT BETWEEN ((NULL, 0.3040501677063713, 0X6b9d4b2a, '1354517647', NULL)) AND ((0.09093030268756175, 0.7321315090092636, '2093041066', x'34d9f3df', -537434655))), ((((((((x'')OR(NULL)))AND(0.32358976991767174)))AND('370640547')))AND('LLJ')), ((x'8a2a')%(x'')))) AND (((((NULL, x'e234', NULL))<=((x'', NULL, -174176676))), '1568018121' COLLATE BINARY, CASE WHEN 0.8856891805812388 THEN NULL ELSE x'' END))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.9832566336569056 AS INTEGER)) BETWEEN (((0.9281314261101914)<<('jz\r)%('))) AND (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '211938488 sz=-424482394 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '390723329 sz=1778529101 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CASE NULL  WHEN NULL THEN '2080116054' ELSE NULL END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ (NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('YH' AS NUMERIC) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-439271305 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1512250201')) NOT BETWEEN ((((NULL) ISNULL))) AND ((((('i㍍⵷t*ZFg'))<=((NULL)))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.8613056366194412) BETWEEN ('0.7729452549008853') AND (0x57445de5)))OR(((0.9886526755635366) BETWEEN (1078394642) AND ('970426399')))))AND(((x'8594')>>(x'f431')))))AND('_h' COLLATE BINARY)))OR(((0.653575581346601) NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(x'' AS INTEGER) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2101723544 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1897996796 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('701814263')OR(NULL)))OR('-1554116861')))AND(0x52bebfb0)))OR('')))|((('-537434655') NOT BETWEEN (NULL) AND ('1393672760')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.9237049904124908)|(x'')) IN (((-350698838) NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.22701283508549297)+('ex)oBW	k'))) NOT BETWEEN (('-847587904' IN ())) AND (CASE WHEN NULL THEN '2000559259' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((NULL)) BETWEEN ((x'')) AND ((NULL))) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 755711276 sz=277225921 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL) NOT BETWEEN ('-2059827267') AND (x'')) THEN ((x'') BETWEEN (0.44816104995781847) AND ('-1763180696')) WHEN NULL THEN UNICODE(NULL) WHEN x'' COLLATE NOCASE THEN ((NULL)%(NULL)) ELSE TYPEOF(1.851970092E9) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST('' AS BLOB) THEN '0.3040501677063713' WHEN CASE WHEN '2121111133' THEN x'' ELSE x'' END THEN (x'9ac7' IN ('H!', x'')) WHEN 0.453977681704285 COLLATE RTRIM THEN 427024006 COLLATE NOCASE END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') NOT NULL)) NOT BETWEEN ((((NULL))>=((x'')))) AND ((('') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('Q|' IN ())) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-244229478 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_type(((('*,]XoX20')) NOT BETWEEN ((0xffffffff9d26b7c9)) AND ((-138414981)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '6 0 sz=-1455116372 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.2241129228447848) NOT BETWEEN (x'') AND (0X108621c1)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '%s'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 414219468 COLLATE BINARY THEN 0.21632040682559173 COLLATE NOCASE WHEN ((NULL)||('')) THEN CASE ''  WHEN x'' THEN NULL END WHEN ((x'ba8ad258')&('k+')) THEN (((x'7f5d'))=((0.08890022000371034))) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('MA')<<(0.672176517717388))) NOT BETWEEN ((((x'9c6c', NULL, 0.3040501677063713))==((x'', '1056712988', x'f2df')))) AND ((('207034537')==(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-312366572 sz=-1660712284 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 1196681853 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2023700707 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('950403365') BETWEEN (NULL) AND ('')) THEN ((x'')>>(x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2093372565 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1320041008; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2141903075 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1895486209 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-609942459 sz=-1796495300 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('1242355668')>>(x'')))AND(((1.292724337E9) ISNULL))))AND((NULL IN ('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((((((((((('')OR(NULL)))OR(x'64aa')))AND(0.6245491472101327)))AND(x'')))OR('2054159322')))OR('ex)oBW	k')) THEN (((x'')) NOT BETWEEN ((NULL)) AND ((0.5382182009676849))) ELSE CHAR('1973326350') END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('-1210811651' AS TEXT) IN ((('-714489596')!=(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.385968238139081)IS(((((x'')AND(0X762be15e)))OR('1139517421')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.8293095748676069; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.5638405421833719) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 -58704729 sz=-913308111 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 sz=-696821679 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=2144721106'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-105012355'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL))>(('l')))) BETWEEN ((('165862452')!=(0.39731143674919334))) AND (0.21283764205677547 COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-106643591 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1687299249 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN LIKELIHOOD(NULL, 0.685809943246242) THEN (NOT (1517983350)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-882556855'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((NULL) NOT BETWEEN ('949810659') AND ('-123864923')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1.887296073E9)&('r 쎤tV5E')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1669356464 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=955797406 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((''))!=((x''))))-((((((((('a謊')OR(NULL)))AND(NULL)))AND(x'')))AND(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-11598866 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1893127852 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -535135324; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=714893492'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE 'RM쩡TSQ'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') BETWEEN (NULL) AND ('|')))==(0.8762729092560475 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-308551535 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-165584724 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1100399487 sz=-2121697167 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))<>(((x'')&(' ')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE BINARY) BETWEEN (CASE 0.648449677343017  WHEN -1.538660581E9 THEN x'' ELSE NULL END) AND ((((0.7066727683205046)) BETWEEN ((NULL)) AND ((1.292724337E9))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1157858976 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) NOT BETWEEN ((x'')) AND (('-288786993'))))IS NOT(((0.7580871947406631) BETWEEN (0.930730753453092) AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1356906992'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((CAST('189603922' AS INTEGER))AND((((x'', 1.939700687E9, NULL))!=((-359252299, 0.04718694919347399, 0Xffffffff8b34d06e))))))AND(NULL COLLATE RTRIM)))AND(LENGTH('-617254754'))))AND(((((((((NULL)AND(x'')))AND('-537434655')))OR('')))AND(0.13740746642113155)))))AND(((0.4783553165651019) BETWEEN (NULL) AND ('j<uB#')))))AND(((('1436869206')) NOT BETWEEN ((x'')) AND (('-2058176833'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-220558692 326788806 sz=982266981'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN ('') AND (0.35185030755381685)))||(CASE '1709792782'  WHEN -582801909 THEN NULL ELSE x'' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((1476092187) NOT BETWEEN (CAST(NULL AS BLOB)) AND ((((x'')) NOT BETWEEN (('')) AND ((x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=762563082 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=368034684'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=255642807 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-496929876') ISNULL)) BETWEEN ((('1684915081') BETWEEN (-1810826618) AND (0.5413434893431643))) AND (x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1463736447 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=208295502 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1778529101 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_object(0.03411715710829333, 0.8025892333718285, 0.34713893700933485, '1667742282')) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-474913054 sz=2131940415 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '660858351 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1702807296 0 304419768 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((((NULL)AND(0.7200801892182104)))AND('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 2 sz=-1227436372 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '615452491 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((0.777239746262827) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xffffffffa6a70f70)<=(0.43254155473331746)))/((x'baae' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=-258307571'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (~ ('0.3852913476386939' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('0.9759979574920998')||(((1716923584)&(0.4945520278750405)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE NULL  WHEN 0xffffffffc8234afc THEN '-728187485' END AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=277225921 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-649407782 sz=917016039'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1045570913 sz=2146120644 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=239086009 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('371803101') IS FALSE) THEN ((NULL)+(x'')) ELSE CAST(x'5577' AS TEXT) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2006407213'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1912482799'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('0.13740746642113155')LIKE(0.9469433990645296)) THEN (('')>=(NULL)) ELSE CAST(0.188649710512113 AS BLOB) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 207034537 sz=-1621080652 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 1477794069 sz=769458365 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-564402394 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '187700716 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1142949820'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('G)')<=(0xbf9eb3d))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.4179253349394584; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-159142162 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=318060054 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF((((0.7151855025445397, 0.7019144019586726, '1'))<((NULL, NULL, NULL))), ((((0x13d7b1a2)OR('0.648449677343017')))AND(-2023081174))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4 sz=750544920 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 -538158451 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '357303618 sz=761742841'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1292724337 2 sz=762563082 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS INTEGER))>>(CAST(0.5972152010648317 AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-475157818 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1953311830 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (0.9832566336569056)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) IS FALSE) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'c943')) BETWEEN ((highlight(-1353854603, x'', NULL, -2.121697167E9))) AND ((CAST(0.930730753453092 AS INTEGER)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1953311830'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 1953007751 sz=-994436681 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-138414981 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'' IN ()))AND((((NULL))>((x''))))))OR(COALESCE('Y', 0Xffffffffa3abdac2, x'', NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (TRIM(DISTINCT 0.9356627717879388, '8㵽'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 1974705871 sz=-2140318886'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=336942201 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('YI') ISNULL)  WHEN CAST(-1.538660581E9 AS BLOB) THEN ((-317857376) NOT NULL) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(NULL AS NUMERIC) IN (COALESCE(0Xb0f38b6, '0kQ(-}&', x'', NULL), CAST('fw' AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 1492936120 sz=-1503117912'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=408791638'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL((('1336754264')IS NOT(x'01817f4f')), (((NULL))<=(('0.7729452549008853')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=661828890 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((+ (x'')) IN (CASE WHEN -1285298482 THEN -886793429 WHEN -5.56227864E8 THEN '-793741447' WHEN NULL THEN NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1807501776 sz=122181842'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.2899045226244593 COLLATE RTRIM)<=(NULL COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=9730554 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-714122566 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-1495048058 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '189603922 sz=-986935040'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('oቌ*mHQ蚣p')<<('7*')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((('j6sa')/(1778529101)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-943200920 COLLATE NOCASE)&(CASE WHEN NULL THEN 0.44620992419334227 WHEN 'p7mu	Emm' THEN 0.9853392516376601 WHEN -649407782 THEN 'now' ELSE x'' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0Xffffffffe74ab7b5)-(((0X33c0f694) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-995174238 sz=958709663 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CAST(0.392405303788266 AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.2557626964635561)>=(x'')) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 287429793 sz=1111323263 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE 0Xbf9eb3d  WHEN '#<o' THEN '-1645805506' WHEN 'K┧\nE' THEN NULL WHEN 0.003696922575117445 THEN '}nND[<ῷG' ELSE NULL END)OR((('E+HRm''hL5')||('0.3884734270343686')))))OR(((0.21236636695527533) IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'ecaddec2') IS TRUE) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1639814040 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-670494500 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1323163291'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1990717902 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0Xffffffff820ef420) ISNULL) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=750544920 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'' THEN ((((0.9220139673721122)OR('')))OR('!H0M*')) WHEN NULL COLLATE BINARY THEN CAST(x'a3387a37' AS NUMERIC) WHEN ((NULL) NOT BETWEEN ('L茪reKqc') AND ('1655522537')) THEN (~ (x'')) WHEN CASE WHEN 0.6314098882320794 THEN '402900308' WHEN -481968805 THEN 0.17632007029622432 WHEN x'5610' THEN '1279559032' ELSE '565303409' END THEN (('1268052998') ISNULL) WHEN NULL THEN ((x'1a21')>(x'')) ELSE (+ ('-1459440656')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((x'' IN ()))OR(CASE WHEN '' THEN x'' ELSE '-288786993' END)))OR((0.08514461426074094 IN ()))))OR(((0.20163710346172936)>('-2112949216')))))OR((('-537434655')!=(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('OIH' IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1939700687 sz=-1576655837 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=255731419 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-2035645503 0 sz=168127016 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-140198933 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1209786722 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(NULL AS TEXT) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1316224037'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1021849797 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('韑YU-') NOT BETWEEN ('-1495048058') AND (-2.88786993E8)))OR((~ (0X63805bb0)))))OR(CASE WHEN 1253932437 THEN 50535877 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1590389030 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (NULL)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-78198604 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE WHEN NULL THEN x'' WHEN x'' THEN 'v3' WHEN -433745167 THEN '-475157818' END  WHEN (0x19a7ba2b IN ()) THEN CAST(NULL AS TEXT) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '876546406 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1065222045 0 sz=1625596417 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4 sz=-746309025 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-900395652 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1402309411'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE MIN(-4.75157818E8, x'')  WHEN ('-1765456522' IN ('0.0')) THEN CAST('꧚zGZgbV' AS REAL) ELSE 0x3a8c3465 COLLATE RTRIM END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((9223372036854775807) NOTNULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NOT (NULL)))AND(((125584693)<('kH>')))))AND(0.3441614805744144 COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (2111155159))) NOTNULL); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-628385119 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS INTEGER)) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-556227864'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 -1645635909 1 sz=-148588432 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1590389030'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST('-505637987' AS BLOB), (('')==(NULL)), (x'' IN ('', NULL))))=(((((x''))<((x''))), 0.971306220369035 COLLATE BINARY, ((NULL)IS NOT('L-Ih_'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1097669562 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1005051478 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=32483924'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('苃pt䕶', NULL, 0.9281314261101914)) NOT BETWEEN ((CASE WHEN x'' THEN -215884158 ELSE x'62b8' END, (-1053918042 IN ()), TRIM(DISTINCT 0Xffffffff9d61a1bc))) AND (((('1500492866') NOT NULL), CASE WHEN '({,*+>''' THEN x'' WHEN x'2564b314' THEN x'' WHEN '7888681' THEN x'' END, ((x'') BETWEEN (NULL) AND (x''))))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE 1.823652132E9; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1862822785 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((- (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1.232327419E9)) NOT BETWEEN ((x'' COLLATE RTRIM)) AND (((NULL IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=801896049'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1950138016 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (0.6829640439657237))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-483548970 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '870386992'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(x'' COLLATE BINARY); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1588742206 83617351 sz=-660770273'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((NOT (-771814544)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('W[')||(NULL)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (x'7daa')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')-(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1374433443'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2029716867 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1433463601'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('' COLLATE RTRIM) NOT BETWEEN (CAST(NULL AS BLOB)) AND (((5.65303409E8) NOT BETWEEN (x'5328') AND ('955797406')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1388584493 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1046162447 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=98775102 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-664212585 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')) NOT BETWEEN (('750544920')) AND ((((x'')IS NOT(0Xfffffffffc803ca7))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1200780008 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=-1800382673 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOTNULL))AND(('VD' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.20509452471026546) NOT BETWEEN (0.7663801324110449) AND ('?k')))LIKE(((x'a158')<=('Za')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((7.14893492E8) IS FALSE))OR(CASE WHEN NULL THEN 0.9417788756621978 WHEN 0.9029445966858821 THEN NULL WHEN NULL THEN '-1378540942' END)))OR(((0.48480957764529375)&(0.30994555046698113)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN NULL THEN -6.34251837E8 WHEN ',HE>1PNvz' THEN 0.37509258328136574 WHEN NULL THEN '' ELSE x'' END AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (~ (0.7589479688016345))  WHEN ((0.08890022000371034) NOT BETWEEN (0.7519025309737123) AND (0.8513310800860342)) THEN (('0.5783573110692597')GLOB(0.5880298636625565)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1036823341 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2017412816 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=462360013 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (NULL IN ()) THEN TYPEOF(DISTINCT 0.8657235516288408) ELSE CAST(0xbf9eb3d AS REAL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('0.25386817248738835')OR(NULL)))OR(x'')))OR(0.4533111215673702)))AND(' ')))IS NOT(((0.3909957868159537)OR(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2055888632 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1523505271'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1107615873 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-123864923'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1232327419 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((0.5707006765251109))<=((NULL))))AND(CAST(NULL AS BLOB))))AND(json_array(x'137b', x'af0f'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.8921529180474664)LIKE('~w)')) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xffffffffcde0b501) NOT NULL)) NOT BETWEEN ((+ (-2.035645503E9))) AND (((NULL)-('-649407782')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((0.4945520278750405)>(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('+I^\so' IN ('-1742015429'))))>((0.1481747502656411))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.41055023898061804 COLLATE BINARY) NOT BETWEEN (CAST(NULL AS INTEGER)) AND (CAST(NULL AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=790688482 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((- (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST(NULL AS REAL))OR((0.08365431923173483 IN ()))))AND(((0.8576334503738318)<(0.13916816445132263)))))AND(((x'17b9') NOT BETWEEN ('') AND (x'31e0')))))OR(CASE '1887296073'  WHEN 0.24535519154001872 THEN '-614697416' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) BETWEEN ((-1414592394)) AND (('-1966148087'))))==((+ (0.9216339727995174)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') ISNULL)) BETWEEN (((('')) BETWEEN ((-1.06643591E8)) AND ((1.823652132E9)))) AND (((((NULL)OR('+BC㴬I[')))AND(1.953007751E9)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKE((+ (x'')), SQLITE_COMPILEOPTION_GET(NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-831364221'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '356373347 sz=1823652132 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((LIKE(NULL, NULL))OR(COALESCE(DISTINCT x'', NULL))))AND(((x'2947')>>(0.29355173855585326)))))OR(CAST(NULL AS TEXT))))OR((- ('-1841225651')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2043494410 1344214213 sz=-1567812246 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.03426336040418987)) BETWEEN (((NULL IN ()))) AND ((CAST('2020089883' AS REAL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1538660581 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((-2.123833019E9, '0.7132929504779127', '-2121697167'))>=(('-1835307921', 0Xffffffffbd157d85, NULL)))) NOT BETWEEN (((0.29165060328808934) ISNULL)) AND (((NULL)+('-1742015429')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((1887296073)OR(CAST(x'' AS NUMERIC))))OR(3.79897031E8 COLLATE BINARY)))OR((((x'')) BETWEEN ((x'')) AND ((NULL))))))AND((('0.8548677947702654') NOT BETWEEN (x'821eca6e') AND ('Dj*uCnfL')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-556227864 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.3852913476386939) NOT BETWEEN (NULL) AND (x'')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1339206737 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1669356464 0 sz=-701747428'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1065222045 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6366517365097688)-(0.02171148949508228))) NOT BETWEEN ((+ ('-678822216'))) AND (((2069502172) BETWEEN (x'') AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '-1416970623' THEN NULL END) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')+(0.333169530472173)))LIKE(((((0.259151814054458)OR('-288786993')))OR(NULL)))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')>>('607337376')))AND(json_quote(0.3016390531750861))))OR((('-428989889') BETWEEN ('932273866') AND ('y')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((('755711276') IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.6482666961686439)AND('0.34070744276517995')))AND(0.501865079303201))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1230166611 sz=-269152623'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'c119'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '92490339 4 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'') IS TRUE))AND(json_array_length(1628742493, '1953007751'))))OR(((NULL) IS FALSE))))AND(((NULL)<<(NULL)))))OR('0.0')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1926633477'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2030091835 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-679204621 sz=750544920 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT NULL) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((('0.0')OR(NULL)))OR('I4d7')))OR(NULL)))OR(x''))))<((((x'8d2954f6')==(NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((x'2d75'))<=((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x''))>=((NULL)))) BETWEEN (-262547800) AND (NULL COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (NULL)))<<((('-496929876')>(x'85d4')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0X39d7881f  WHEN ((NULL)|('')) THEN (~ ('0.09093030268756175')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=888323725 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_COMPILEOPTION_USED((+ (0.29370217717796787))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('-241955243') NOT BETWEEN (x'') AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.3380788743762838 AS INTEGER) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-802321244 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('\\' IN (x'')))=(x'ca14')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1725111520 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((((x'') IS FALSE))) AND (('-537434655'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.11988776535681633)LIKE(NULL))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=870386992 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-649407782 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1089906628 1823652132 sz=908153717 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-2048187870 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1600187882'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-434441184')!=(NULL)))+(0.7254289876384467 COLLATE NOCASE)); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1103465584 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1771959877 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1007474498 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (NULLIF(NULL, NULL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=131024972'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (LTRIM(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '197673592 sz=761742841'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1313624502 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=902767128 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1084735248 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'4d7c'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((x''))<=((0.0))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.1891975342382588)>>(NULL)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.8926837025542257; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('obFD a[')=('-1658406967')))LIKE(((NULL)&('200928061')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1686985856 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') NOT BETWEEN (NULL) AND (0Xffffffff8168e145))) BETWEEN (CASE WHEN 0.9584557081977272 THEN 0.38970008288191094 ELSE NULL END) AND (CASE WHEN NULL THEN 7.94464337E8 ELSE 0xffffffffe77f87f2 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1928511135 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (- ('1823652132')) THEN x'' COLLATE BINARY END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-220558692 -138414981 sz=-246775293 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('53403506')-(NULL)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.5118195851581978 AS NUMERIC)) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((~ ('942264057')) IN (((NULL)/(NULL)))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)AND('-1644391532')))=(((0x4446ea2f) NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1887296073 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.766524302616273; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE temp; -- 0ms;
REINDEX  vt0; -- 0ms;
INSERT OR IGNORE INTO vt0(lid, c1, c0) VALUES (-2017588938, NULL, x'3241'); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED); -- 0ms;
COMMIT; -- 0ms;
INSERT OR REPLACE INTO vt0(lid, c1, c0) VALUES ('1688505152', '1477794069', ((('A(', 0.09715852341885345, ''))>=((NULL, 0.6332592188666082, x''))) COLLATE RTRIM), (0.7891060008380572, x'', 0.7312330179756614), ('', 0x3a8c3465, x'ed28'), (x'a19a', NULL, -1.445147339E9), (1528703846, NULL, '1568018121'); -- 0ms;
DROP TABLE vt0; -- 0ms;
COMMIT; -- 0ms;
PRAGMA main.reverse_unordered_selects = true; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x''); -- 0ms;
END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0.5580546523260275 COLLATE BINARY)AND(x'' COLLATE NOCASE)))OR((0Xffffffffbf06f68e IN ('MN{(K')))))AND(CASE WHEN 'r]&#F' THEN 0.4008986926640541 ELSE x'' END)))OR((('1024929076')<>(NULL)))); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ANALYZE vt1; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '55846'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '34082'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM temp; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('786802112'); -- 0ms;
PRAGMA temp.cache_size = 882151242607349074; -- 0ms;
END; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 0ms;
PRAGMA main.soft_heap_limit; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA main.checkpoint_fullfsync; -- 0ms;
PRAGMA cache_spill = -1816727469971832106; -- 0ms;
END; -- 0ms;
PRAGMA ignore_check_constraints; -- 0ms;
PRAGMA incremental_vacuum; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 6); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '47496'); -- 1ms;
INSERT INTO vt1(vt1) VALUES('merge=511517731,6');\n; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
PRAGMA main.integrity_check; -- 0ms;
INSERT OR REPLACE INTO rt0(c1) VALUES (NULL); -- 0ms;
PRAGMA main.ignore_check_constraints = true; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 0ms;
CREATE TEMPORARY VIEW v0(c0) AS SELECT DISTINCT CAST('' AS TEXT) FROM rt0, vt1; -- 0ms;
REINDEX; -- 1ms;
COMMIT; -- 0ms;
PRAGMA journal_size_limit = 0; -- 0ms;
PRAGMA temp.checkpoint_fullfsync = false; -- 0ms;
UPDATE OR ABORT vt1 SET c0=0.5990143652549105, c0=0.6131255771221381; -- 0ms;
PRAGMA temp.integrity_check; -- 0ms;
CREATE TEMP TABLE t0 (c0 INTEGER  CHECK ( CASE WHEN CASE c0  WHEN c0 THEN c0 END THEN ((((((((c0)AND(c0)))OR(c0)))AND(c0)))AND(c0)) WHEN ((c0) IS FALSE) THEN ((c0) BETWEEN (0.5483651646287686) AND (c0)) WHEN c0 COLLATE NOCASE THEN ((c0) BETWEEN (c0) AND (c0)) ELSE (((c0))>=((c0))) END)); -- 0ms;
UPDATE OR REPLACE t0 SET (c0)=(0xfffffffff985c5d8); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR REPLACE INTO rt0 VALUES (0.5351725367667175, x'', '991079500'), (x'87ab', 0.5101400694566762, NULL), (1636893689, NULL, 0.7243084507524508); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('1654386685'); -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (NULL); -- 0ms;
PRAGMA temp.stats; -- 0ms;
PRAGMA main.foreign_keys = true; -- 0ms;
DELETE FROM rt0 WHERE (((rt0.c0) NOTNULL) IN ()); -- 0ms;
PRAGMA default_cache_size = -2000080124; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(''); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '63183'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
REINDEX; -- 1ms;
END; -- 0ms;
PRAGMA incremental_vacuum(917631695); -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM t0, rt0 FULL OUTER JOIN vt1 ON CAST(((t0.c0) NOT NULL) AS TEXT) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, rt0 FULL OUTER JOIN vt1 ON CAST(((t0.c0) NOT NULL) AS TEXT));
SELECT COUNT(*) FROM t0, rt0 FULL OUTER JOIN vt1 ON CAST(((t0.c0) NOT NULL) AS TEXT) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, rt0 FULL OUTER JOIN vt1 ON CAST(((t0.c0) NOT NULL) AS TEXT));
SELECT COUNT(*) FROM t0, rt0 FULL OUTER JOIN vt1 ON CAST(((t0.c0) NOT NULL) AS TEXT) WHERE (t0.c0);
SELECT * FROM vt1 LEFT OUTER JOIN v0 ON ((CASE WHEN vt1.c0 THEN v0.c0 END) BETWEEN (((((v0.c0)AND(NULL)))OR(-1271149812))) AND (NULLIF(DISTINCT vt1.c0, v0.c0))) WHERE ((((((('')AND(vt1.c0)))OR(v0.c0)))IS((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))) ORDER BY ((((vt1.c0) NOTNULL)) BETWEEN (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END) AND ((((v0.c0, v0.c0, v0.c0))<((vt1.c0, v0.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((('')AND(vt1.c0)))OR(v0.c0)))IS((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN v0 ON ((CASE WHEN vt1.c0 THEN v0.c0 END) BETWEEN (((((v0.c0)AND(NULL)))OR(-1271149812))) AND (NULLIF(DISTINCT vt1.c0, v0.c0))) ORDER BY ((((vt1.c0) NOTNULL)) BETWEEN (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END) AND ((((v0.c0, v0.c0, v0.c0))<((vt1.c0, v0.c0, vt1.c0))))));
SELECT * FROM vt1 LEFT OUTER JOIN v0 ON ((CASE WHEN vt1.c0 THEN v0.c0 END) BETWEEN (((((v0.c0)AND(NULL)))OR(-1271149812))) AND (NULLIF(DISTINCT vt1.c0, v0.c0))) WHERE ((((((('')AND(vt1.c0)))OR(v0.c0)))IS((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))) ORDER BY ((((vt1.c0) NOTNULL)) BETWEEN (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END) AND ((((v0.c0, v0.c0, v0.c0))<((vt1.c0, v0.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((('')AND(vt1.c0)))OR(v0.c0)))IS((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN v0 ON ((CASE WHEN vt1.c0 THEN v0.c0 END) BETWEEN (((((v0.c0)AND(NULL)))OR(-1271149812))) AND (NULLIF(DISTINCT vt1.c0, v0.c0))) ORDER BY ((((vt1.c0) NOTNULL)) BETWEEN (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END) AND ((((v0.c0, v0.c0, v0.c0))<((vt1.c0, v0.c0, vt1.c0))))));
SELECT * FROM vt1 LEFT OUTER JOIN v0 ON ((CASE WHEN vt1.c0 THEN v0.c0 END) BETWEEN (((((v0.c0)AND(NULL)))OR(-1271149812))) AND (NULLIF(DISTINCT vt1.c0, v0.c0))) WHERE ((((((('')AND(vt1.c0)))OR(v0.c0)))IS((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))) ORDER BY ((((vt1.c0) NOTNULL)) BETWEEN (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END) AND ((((v0.c0, v0.c0, v0.c0))<((vt1.c0, v0.c0, vt1.c0)))));
SELECT * FROM t0 WHERE (CASE WHEN NULL THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) ELSE ((t0.c0)==(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) ELSE ((t0.c0)==(t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN NULL THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) ELSE ((t0.c0)==(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) ELSE ((t0.c0)==(t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN NULL THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) ELSE ((t0.c0)==(t0.c0)) END);
SELECT ALL COUNT(*) FROM vt1, v0, t0 WHERE (MAX(CAST(vt1.c0 AS TEXT), CASE v0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, (vt1.c0 IN ()), CASE WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((MAX(CAST(vt1.c0 AS TEXT), CASE v0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, (vt1.c0 IN ()), CASE WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END)) IS TRUE)  as count FROM vt1, v0, t0);
SELECT ALL COUNT(*) FROM vt1, v0, t0 WHERE (MAX(CAST(vt1.c0 AS TEXT), CASE v0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, (vt1.c0 IN ()), CASE WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((MAX(CAST(vt1.c0 AS TEXT), CASE v0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, (vt1.c0 IN ()), CASE WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END)) IS TRUE)  as count FROM vt1, v0, t0);
SELECT ALL COUNT(*) FROM vt1, v0, t0 WHERE (MAX(CAST(vt1.c0 AS TEXT), CASE v0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, (vt1.c0 IN ()), CASE WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END));
SELECT COUNT(*) FROM vt1, t0, v0, rt0 WHERE (((v0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) IS TRUE)) IS TRUE)  as count FROM vt1, t0, v0, rt0);
SELECT COUNT(*) FROM vt1, t0, v0, rt0 WHERE (((v0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) IS TRUE)) IS TRUE)  as count FROM vt1, t0, v0, rt0);
SELECT COUNT(*) FROM vt1, t0, v0, rt0 WHERE (((v0.c0) IS TRUE));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR('ri}A<')))AND((~ (t0.c0))))) ORDER BY (NOT (vt1.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR('ri}A<')))AND((~ (t0.c0))))) IS TRUE)  as count FROM t0 NOT INDEXED, vt1 ORDER BY (NOT (vt1.c0)) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR('ri}A<')))AND((~ (t0.c0))))) ORDER BY (NOT (vt1.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR('ri}A<')))AND((~ (t0.c0))))) IS TRUE)  as count FROM t0 NOT INDEXED, vt1 ORDER BY (NOT (vt1.c0)) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR('ri}A<')))AND((~ (t0.c0))))) ORDER BY (NOT (vt1.c0)) COLLATE BINARY DESC;
SELECT COUNT(*) FROM t0, vt1, v0 FULL OUTER JOIN rt0 ON rt0.c2 WHERE (CAST(NULLIF(rt0.c1, v0.c0) AS NUMERIC)) ORDER BY (((t0.c0) IS TRUE) IN ());
SELECT SUM(count) FROM (SELECT ((CAST(NULLIF(rt0.c1, v0.c0) AS NUMERIC)) IS TRUE)  as count FROM t0, vt1, v0 FULL OUTER JOIN rt0 ON rt0.c2 ORDER BY (((t0.c0) IS TRUE) IN ()));
SELECT COUNT(*) FROM t0, vt1, v0 FULL OUTER JOIN rt0 ON rt0.c2 WHERE (CAST(NULLIF(rt0.c1, v0.c0) AS NUMERIC)) ORDER BY (((t0.c0) IS TRUE) IN ());
SELECT SUM(count) FROM (SELECT ((CAST(NULLIF(rt0.c1, v0.c0) AS NUMERIC)) IS TRUE)  as count FROM t0, vt1, v0 FULL OUTER JOIN rt0 ON rt0.c2 ORDER BY (((t0.c0) IS TRUE) IN ()));
SELECT COUNT(*) FROM t0, vt1, v0 FULL OUTER JOIN rt0 ON rt0.c2 WHERE (CAST(NULLIF(rt0.c1, v0.c0) AS NUMERIC)) ORDER BY (((t0.c0) IS TRUE) IN ());
SELECT ALL COUNT(*) FROM v0, rt0 INNER JOIN vt1 ON (((rt0.c2, (rt0.c2 IN ()), UPPER(DISTINCT rt0.c0)))<((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END, ((rt0.c0) BETWEEN (rt0.c2) AND (x'')), (((v0.c0))>((v0.c0)))))) WHERE (CAST(SQLITE_VERSION() AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(SQLITE_VERSION() AS REAL)) IS TRUE)  as count FROM v0, rt0 INNER JOIN vt1 ON (((rt0.c2, (rt0.c2 IN ()), UPPER(DISTINCT rt0.c0)))<((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END, ((rt0.c0) BETWEEN (rt0.c2) AND (x'')), (((v0.c0))>((v0.c0)))))));
SELECT ALL COUNT(*) FROM v0, rt0 INNER JOIN vt1 ON (((rt0.c2, (rt0.c2 IN ()), UPPER(DISTINCT rt0.c0)))<((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END, ((rt0.c0) BETWEEN (rt0.c2) AND (x'')), (((v0.c0))>((v0.c0)))))) WHERE (CAST(SQLITE_VERSION() AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(SQLITE_VERSION() AS REAL)) IS TRUE)  as count FROM v0, rt0 INNER JOIN vt1 ON (((rt0.c2, (rt0.c2 IN ()), UPPER(DISTINCT rt0.c0)))<((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END, ((rt0.c0) BETWEEN (rt0.c2) AND (x'')), (((v0.c0))>((v0.c0)))))));
SELECT ALL COUNT(*) FROM v0, rt0 INNER JOIN vt1 ON (((rt0.c2, (rt0.c2 IN ()), UPPER(DISTINCT rt0.c0)))<((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END, ((rt0.c0) BETWEEN (rt0.c2) AND (x'')), (((v0.c0))>((v0.c0)))))) WHERE (CAST(SQLITE_VERSION() AS REAL));
SELECT COUNT(*) FROM vt1, v0, t0, rt0 WHERE (rt0.c1) ORDER BY ((((NULL) NOTNULL)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt1, v0, t0, rt0 ORDER BY ((((NULL) NOTNULL)) IS TRUE) DESC);
SELECT COUNT(*) FROM vt1, v0, t0, rt0 WHERE (rt0.c1) ORDER BY ((((NULL) NOTNULL)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt1, v0, t0, rt0 ORDER BY ((((NULL) NOTNULL)) IS TRUE) DESC);
SELECT COUNT(*) FROM vt1, v0, t0, rt0 WHERE (rt0.c1) ORDER BY ((((NULL) NOTNULL)) IS TRUE) DESC;
SELECT ALL * FROM vt1, rt0 WHERE ((+ ((NOT (rt0.c0))))) ORDER BY (vt1.c0 IN (((rt0.c1)%(rt0.c0)))) DESC, ((((rt0.c1) NOTNULL)) NOT BETWEEN (((rt0.c1)-(NULL))) AND (((rt0.c2) IS TRUE)));
SELECT SUM(count) FROM (SELECT (((+ ((NOT (rt0.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (vt1.c0 IN (((rt0.c1)%(rt0.c0)))) DESC, ((((rt0.c1) NOTNULL)) NOT BETWEEN (((rt0.c1)-(NULL))) AND (((rt0.c2) IS TRUE))));
SELECT ALL * FROM vt1, rt0 WHERE ((+ ((NOT (rt0.c0))))) ORDER BY (vt1.c0 IN (((rt0.c1)%(rt0.c0)))) DESC, ((((rt0.c1) NOTNULL)) NOT BETWEEN (((rt0.c1)-(NULL))) AND (((rt0.c2) IS TRUE)));
SELECT SUM(count) FROM (SELECT (((+ ((NOT (rt0.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (vt1.c0 IN (((rt0.c1)%(rt0.c0)))) DESC, ((((rt0.c1) NOTNULL)) NOT BETWEEN (((rt0.c1)-(NULL))) AND (((rt0.c2) IS TRUE))));
SELECT ALL * FROM vt1, rt0 WHERE ((+ ((NOT (rt0.c0))))) ORDER BY (vt1.c0 IN (((rt0.c1)%(rt0.c0)))) DESC, ((((rt0.c1) NOTNULL)) NOT BETWEEN (((rt0.c1)-(NULL))) AND (((rt0.c2) IS TRUE)));
SELECT ALL * FROM t0, vt1, rt0, v0 WHERE ((((vt1.c0, rt0.c1, rt0.c2)) BETWEEN (((rt0.c2 IN ()), HEX(NULL), ((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)))) AND ((((rt0.c0) ISNULL), (((v0.c0))<((v0.c0))), LOWER(rt0.c1))))) ORDER BY (((rt0.c1 IN ()))AND(((rt0.c0)%(rt0.c1))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0, rt0.c1, rt0.c2)) BETWEEN (((rt0.c2 IN ()), HEX(NULL), ((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)))) AND ((((rt0.c0) ISNULL), (((v0.c0))<((v0.c0))), LOWER(rt0.c1))))) IS TRUE)  as count FROM t0, vt1, rt0, v0 ORDER BY (((rt0.c1 IN ()))AND(((rt0.c0)%(rt0.c1)))));
SELECT ALL * FROM t0, vt1, rt0, v0 WHERE ((((vt1.c0, rt0.c1, rt0.c2)) BETWEEN (((rt0.c2 IN ()), HEX(NULL), ((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)))) AND ((((rt0.c0) ISNULL), (((v0.c0))<((v0.c0))), LOWER(rt0.c1))))) ORDER BY (((rt0.c1 IN ()))AND(((rt0.c0)%(rt0.c1))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0, rt0.c1, rt0.c2)) BETWEEN (((rt0.c2 IN ()), HEX(NULL), ((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)))) AND ((((rt0.c0) ISNULL), (((v0.c0))<((v0.c0))), LOWER(rt0.c1))))) IS TRUE)  as count FROM t0, vt1, rt0, v0 ORDER BY (((rt0.c1 IN ()))AND(((rt0.c0)%(rt0.c1)))));
SELECT COUNT(*) FROM t0, v0, vt1 WHERE (CASE vt1.c0 COLLATE RTRIM  WHEN (((((((('LJ}*8rd-')AND(0.9492746407035341)))OR(v0.c0)))AND(vt1.c0)))AND(vt1.c0)) THEN t0.c0 ELSE ABS(x'') END);
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0 COLLATE RTRIM  WHEN (((((((('LJ}*8rd-')AND(0.9492746407035341)))OR(v0.c0)))AND(vt1.c0)))AND(vt1.c0)) THEN t0.c0 ELSE ABS(x'') END) IS TRUE)  as count FROM t0, v0, vt1);
SELECT COUNT(*) FROM t0, v0, vt1 WHERE (CASE vt1.c0 COLLATE RTRIM  WHEN (((((((('LJ}*8rd-')AND(0.9492746407035341)))OR(v0.c0)))AND(vt1.c0)))AND(vt1.c0)) THEN t0.c0 ELSE ABS(x'') END);
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0 COLLATE RTRIM  WHEN (((((((('LJ}*8rd-')AND(0.9492746407035341)))OR(v0.c0)))AND(vt1.c0)))AND(vt1.c0)) THEN t0.c0 ELSE ABS(x'') END) IS TRUE)  as count FROM t0, v0, vt1);
SELECT COUNT(*) FROM t0, v0, vt1 WHERE (CASE vt1.c0 COLLATE RTRIM  WHEN (((((((('LJ}*8rd-')AND(0.9492746407035341)))OR(v0.c0)))AND(vt1.c0)))AND(vt1.c0)) THEN t0.c0 ELSE ABS(x'') END);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON TRIM(DISTINCT ((rt0.c1)!=(rt0.c2)), vt1.c0) INNER JOIN vt1 ON t0.c0 RIGHT OUTER JOIN t0 ON (((((rt0.c2 IN ()))AND(CAST(rt0.c2 AS BLOB))))AND(((v0.c0)=(v0.c0)))) WHERE ((((('')-(x'91ee')))*(CAST(rt0.c1 AS NUMERIC)))) ORDER BY (~ (rt0.c0)) COLLATE RTRIM, MAX(t0.c0, '471482348'), CAST((vt1.c0 IN (rt0.c2)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((((('')-(x'91ee')))*(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON TRIM(DISTINCT ((rt0.c1)!=(rt0.c2)), vt1.c0) INNER JOIN vt1 ON t0.c0 RIGHT OUTER JOIN t0 ON (((((rt0.c2 IN ()))AND(CAST(rt0.c2 AS BLOB))))AND(((v0.c0)==(v0.c0)))) ORDER BY (~ (rt0.c0)) COLLATE RTRIM, MAX(t0.c0, '471482348'), CAST((vt1.c0 IN (rt0.c2)) AS BLOB));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON TRIM(DISTINCT ((rt0.c1)!=(rt0.c2)), vt1.c0) INNER JOIN vt1 ON t0.c0 RIGHT OUTER JOIN t0 ON (((((rt0.c2 IN ()))AND(CAST(rt0.c2 AS BLOB))))AND(((v0.c0)=(v0.c0)))) WHERE ((((('')-(x'91ee')))*(CAST(rt0.c1 AS NUMERIC)))) ORDER BY (~ (rt0.c0)) COLLATE RTRIM, MAX(t0.c0, '471482348'), CAST((vt1.c0 IN (rt0.c2)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((((('')-(x'91ee')))*(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON TRIM(DISTINCT ((rt0.c1)!=(rt0.c2)), vt1.c0) INNER JOIN vt1 ON t0.c0 RIGHT OUTER JOIN t0 ON (((((rt0.c2 IN ()))AND(CAST(rt0.c2 AS BLOB))))AND(((v0.c0)==(v0.c0)))) ORDER BY (~ (rt0.c0)) COLLATE RTRIM, MAX(t0.c0, '471482348'), CAST((vt1.c0 IN (rt0.c2)) AS BLOB));
SELECT * FROM t0, vt1 WHERE ((- ((+ (vt1.c0))))) ORDER BY (('~~<FQ	') NOTNULL);
SELECT SUM(count) FROM (SELECT (((- ((+ (vt1.c0))))) IS TRUE)  as count FROM t0, vt1 ORDER BY (('~~<FQ	') NOTNULL));
SELECT * FROM t0, vt1 WHERE ((- ((+ (vt1.c0))))) ORDER BY (('~~<FQ	') NOTNULL);
SELECT SUM(count) FROM (SELECT (((- ((+ (vt1.c0))))) IS TRUE)  as count FROM t0, vt1 ORDER BY (('~~<FQ	') NOTNULL));
SELECT * FROM t0, vt1 WHERE ((- ((+ (vt1.c0))))) ORDER BY (('~~<FQ	') NOTNULL);
SELECT ALL * FROM t0, vt1 WHERE (((t0.c0)AND(vt1.c0)) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c0)AND(vt1.c0)) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (((t0.c0)AND(vt1.c0)) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c0)AND(vt1.c0)) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (((t0.c0)AND(vt1.c0)) COLLATE RTRIM COLLATE BINARY);
SELECT * FROM t0, rt0 WHERE (CAST((((rt0.c1, rt0.c1, rt0.c1))<((rt0.c1, rt0.c2, rt0.c0))) AS TEXT)) ORDER BY '-438475025' COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c1, rt0.c1, rt0.c1))<((rt0.c1, rt0.c2, rt0.c0))) AS TEXT)) IS TRUE)  as count FROM t0, rt0 ORDER BY '-438475025' COLLATE NOCASE  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (CAST((((rt0.c1, rt0.c1, rt0.c1))<((rt0.c1, rt0.c2, rt0.c0))) AS TEXT)) ORDER BY '-438475025' COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c1, rt0.c1, rt0.c1))<((rt0.c1, rt0.c2, rt0.c0))) AS TEXT)) IS TRUE)  as count FROM t0, rt0 ORDER BY '-438475025' COLLATE NOCASE  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (CAST((((rt0.c1, rt0.c1, rt0.c1))<((rt0.c1, rt0.c2, rt0.c0))) AS TEXT)) ORDER BY '-438475025' COLLATE NOCASE  NULLS LAST;
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON (~ (rt0.c2 COLLATE RTRIM)) LEFT OUTER JOIN vt1 ON (vt1.c0 IN ()) WHERE ('%<f攷K_') ORDER BY (t0.c0 IN ()) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (('%<f攷K_') IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON (~ (rt0.c2 COLLATE RTRIM)) LEFT OUTER JOIN vt1 ON (vt1.c0 IN ()) ORDER BY (t0.c0 IN ()) COLLATE RTRIM);
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON (~ (rt0.c2 COLLATE RTRIM)) LEFT OUTER JOIN vt1 ON (vt1.c0 IN ()) WHERE ('%<f攷K_') ORDER BY (t0.c0 IN ()) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (('%<f攷K_') IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON (~ (rt0.c2 COLLATE RTRIM)) LEFT OUTER JOIN vt1 ON (vt1.c0 IN ()) ORDER BY (t0.c0 IN ()) COLLATE RTRIM);
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON (~ (rt0.c2 COLLATE RTRIM)) LEFT OUTER JOIN vt1 ON (vt1.c0 IN ()) WHERE ('%<f攷K_') ORDER BY (t0.c0 IN ()) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM vt1, rt0 CROSS JOIN v0 ON rt0.c1 WHERE (((CAST(rt0.c2 AS BLOB)) ISNULL)) ORDER BY CAST((((rt0.c2, vt1.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, vt1.c0, v0.c0)) AND ((rt0.c2, rt0.c2, v0.c0))) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS BLOB)) ISNULL)) IS TRUE)  as count FROM vt1, rt0 CROSS JOIN v0 ON rt0.c1 ORDER BY CAST((((rt0.c2, vt1.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, vt1.c0, v0.c0)) AND ((rt0.c2, rt0.c2, v0.c0))) AS TEXT) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 CROSS JOIN v0 ON rt0.c1 WHERE (((CAST(rt0.c2 AS BLOB)) ISNULL)) ORDER BY CAST((((rt0.c2, vt1.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, vt1.c0, v0.c0)) AND ((rt0.c2, rt0.c2, v0.c0))) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS BLOB)) ISNULL)) IS TRUE)  as count FROM vt1, rt0 CROSS JOIN v0 ON rt0.c1 ORDER BY CAST((((rt0.c2, vt1.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, vt1.c0, v0.c0)) AND ((rt0.c2, rt0.c2, v0.c0))) AS TEXT) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 CROSS JOIN v0 ON rt0.c1 WHERE (((CAST(rt0.c2 AS BLOB)) ISNULL)) ORDER BY CAST((((rt0.c2, vt1.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, vt1.c0, v0.c0)) AND ((rt0.c2, rt0.c2, v0.c0))) AS TEXT) ASC  NULLS LAST;
SELECT * FROM v0, rt0, t0 WHERE (rt0.c0) ORDER BY ((v0.c0 COLLATE NOCASE) BETWEEN (((rt0.c1)||(rt0.c2))) AND ((~ (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0, rt0, t0 ORDER BY ((v0.c0 COLLATE NOCASE) BETWEEN (((rt0.c1)||(rt0.c2))) AND ((~ (rt0.c1)))) ASC);
SELECT * FROM v0, rt0, t0 WHERE (rt0.c0) ORDER BY ((v0.c0 COLLATE NOCASE) BETWEEN (((rt0.c1)||(rt0.c2))) AND ((~ (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0, rt0, t0 ORDER BY ((v0.c0 COLLATE NOCASE) BETWEEN (((rt0.c1)||(rt0.c2))) AND ((~ (rt0.c1)))) ASC);
SELECT * FROM v0, rt0, t0 WHERE (rt0.c0) ORDER BY ((v0.c0 COLLATE NOCASE) BETWEEN (((rt0.c1)||(rt0.c2))) AND ((~ (rt0.c1)))) ASC;
SELECT ALL * FROM rt0, v0, vt1, t0 WHERE (CAST(((rt0.c2)>>(rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)>>(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0, v0, vt1, t0);
SELECT ALL * FROM rt0, v0, vt1, t0 WHERE (CAST(((rt0.c2)>>(rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)>>(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0, v0, vt1, t0);
SELECT ALL * FROM rt0, v0, vt1, t0 WHERE (CAST(((rt0.c2)>>(rt0.c2)) AS TEXT));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0 IN (t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((t0.c0 IN (t0.c0)) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0 IN (t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((t0.c0 IN (t0.c0)) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0 IN (t0.c0)) IN ()));
SELECT COUNT(*) FROM t0, vt1, v0 WHERE (CAST(((t0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS TEXT)) ORDER BY v0.c0, ((vt1.c0 COLLATE BINARY) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS TEXT)) IS TRUE)  as count FROM t0, vt1, v0 ORDER BY v0.c0, ((vt1.c0 COLLATE BINARY) NOT NULL) ASC);
SELECT COUNT(*) FROM t0, vt1, v0 WHERE (CAST(((t0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS TEXT)) ORDER BY v0.c0, ((vt1.c0 COLLATE BINARY) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS TEXT)) IS TRUE)  as count FROM t0, vt1, v0 ORDER BY v0.c0, ((vt1.c0 COLLATE BINARY) NOT NULL) ASC);
SELECT COUNT(*) FROM t0, vt1, v0 WHERE (CAST(((t0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS TEXT)) ORDER BY v0.c0, ((vt1.c0 COLLATE BINARY) NOT NULL) ASC;
SELECT COUNT(*) FROM t0, rt0, v0, vt1 WHERE (((((vt1.c0) BETWEEN (t0.c0) AND (rt0.c1)))GLOB((((v0.c0))<((t0.c0)))))) ORDER BY ((rt0.c1) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (t0.c0) AND (rt0.c1)))GLOB((((v0.c0))<((t0.c0)))))) IS TRUE)  as count FROM t0, rt0, v0, vt1 ORDER BY ((rt0.c1) ISNULL) ASC);
SELECT COUNT(*) FROM t0, rt0, v0, vt1 WHERE (((((vt1.c0) BETWEEN (t0.c0) AND (rt0.c1)))GLOB((((v0.c0))<((t0.c0)))))) ORDER BY ((rt0.c1) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (t0.c0) AND (rt0.c1)))GLOB((((v0.c0))<((t0.c0)))))) IS TRUE)  as count FROM t0, rt0, v0, vt1 ORDER BY ((rt0.c1) ISNULL) ASC);
SELECT COUNT(*) FROM t0, rt0, v0, vt1 WHERE (((((vt1.c0) BETWEEN (t0.c0) AND (rt0.c1)))GLOB((((v0.c0))<((t0.c0)))))) ORDER BY ((rt0.c1) ISNULL) ASC;
SELECT COUNT(*) FROM rt0 WHERE (CAST(NULL AS INTEGER)) ORDER BY (((rt0.c2 IN ())) ISNULL), CAST((- (rt0.c1)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN ())) ISNULL), CAST((- (rt0.c1)) AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(NULL AS INTEGER)) ORDER BY (((rt0.c2 IN ())) ISNULL), CAST((- (rt0.c1)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN ())) ISNULL), CAST((- (rt0.c1)) AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(NULL AS INTEGER)) ORDER BY (((rt0.c2 IN ())) ISNULL), CAST((- (rt0.c1)) AS BLOB)  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE NOCASE)LIKE((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE NOCASE)LIKE((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE NOCASE)LIKE((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE NOCASE)LIKE((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE NOCASE)LIKE((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT COUNT(*) FROM t0, rt0, v0, vt1 WHERE (TYPEOF(((rt0.c2)>>(v0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((rt0.c2)>>(v0.c0)))) IS TRUE)  as count FROM t0, rt0, v0, vt1);
SELECT COUNT(*) FROM t0, rt0, v0, vt1 WHERE (TYPEOF(((rt0.c2)>>(v0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((rt0.c2)>>(v0.c0)))) IS TRUE)  as count FROM t0, rt0, v0, vt1);
SELECT COUNT(*) FROM t0, rt0, v0, vt1 WHERE (TYPEOF(((rt0.c2)>>(v0.c0))));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON CASE WHEN x'' THEN ((t0.c0)IS NOT(v0.c0)) END INNER JOIN t0 ON t0.c0 WHERE (((((v0.c0)/(rt0.c1)))LIKE(CAST(rt0.c1 AS TEXT)))) ORDER BY CASE WHEN ((rt0.c2)+(v0.c0)) THEN ((t0.c0) IS TRUE) ELSE t0.c0 COLLATE NOCASE END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)/(rt0.c1)))LIKE(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON CASE WHEN x'' THEN ((t0.c0)IS NOT(v0.c0)) END INNER JOIN t0 ON t0.c0 ORDER BY CASE WHEN ((rt0.c2)+(v0.c0)) THEN ((t0.c0) IS TRUE) ELSE t0.c0 COLLATE NOCASE END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON CASE WHEN x'' THEN ((t0.c0)IS NOT(v0.c0)) END INNER JOIN t0 ON t0.c0 WHERE (((((v0.c0)/(rt0.c1)))LIKE(CAST(rt0.c1 AS TEXT)))) ORDER BY CASE WHEN ((rt0.c2)+(v0.c0)) THEN ((t0.c0) IS TRUE) ELSE t0.c0 COLLATE NOCASE END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)/(rt0.c1)))LIKE(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON CASE WHEN x'' THEN ((t0.c0)IS NOT(v0.c0)) END INNER JOIN t0 ON t0.c0 ORDER BY CASE WHEN ((rt0.c2)+(v0.c0)) THEN ((t0.c0) IS TRUE) ELSE t0.c0 COLLATE NOCASE END ASC  NULLS FIRST);
SELECT * FROM t0, rt0 WHERE ((((t0.c0)) BETWEEN (((- (t0.c0)))) AND ((ABS(rt0.c1))))) ORDER BY '1704702304'  NULLS LAST, ((rt0.c1)|((~ (rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN (((- (t0.c0)))) AND ((ABS(rt0.c1))))) IS TRUE)  as count FROM t0, rt0 ORDER BY '1704702304'  NULLS LAST, ((rt0.c1)|((~ (rt0.c0)))) DESC  NULLS LAST);
SELECT * FROM t0, rt0 WHERE ((((t0.c0)) BETWEEN (((- (t0.c0)))) AND ((ABS(rt0.c1))))) ORDER BY '1704702304'  NULLS LAST, ((rt0.c1)|((~ (rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN (((- (t0.c0)))) AND ((ABS(rt0.c1))))) IS TRUE)  as count FROM t0, rt0 ORDER BY '1704702304'  NULLS LAST, ((rt0.c1)|((~ (rt0.c0)))) DESC  NULLS LAST);
SELECT * FROM t0, rt0 WHERE ((((t0.c0)) BETWEEN (((- (t0.c0)))) AND ((ABS(rt0.c1))))) ORDER BY '1704702304'  NULLS LAST, ((rt0.c1)|((~ (rt0.c0)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY) ORDER BY (vt1.c0 COLLATE RTRIM IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 COLLATE RTRIM IN ()) DESC);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY) ORDER BY (vt1.c0 COLLATE RTRIM IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 COLLATE RTRIM IN ()) DESC);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY) ORDER BY (vt1.c0 COLLATE RTRIM IN ()) DESC;
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c1 IN ())))!=((((rt0.c1)!=(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 IN ())))<>((((rt0.c1)<>(rt0.c0)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c1 IN ())))!=((((rt0.c1)!=(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 IN ())))<>((((rt0.c1)<>(rt0.c0)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c1 IN ())))!=((((rt0.c1)!=(rt0.c0))))));
SELECT * FROM t0, v0, rt0 WHERE (((CAST(v0.c0 AS TEXT))>=(((t0.c0) NOT NULL)))) ORDER BY (((((v0.c0))==((v0.c0)))) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND (((rt0.c1)-(x'390f3ee0')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS TEXT))>=(((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0, v0, rt0 ORDER BY (((((v0.c0))=((v0.c0)))) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND (((rt0.c1)-(x'390f3ee0')))) DESC  NULLS FIRST);
SELECT * FROM t0, v0, rt0 WHERE (((CAST(v0.c0 AS TEXT))>=(((t0.c0) NOT NULL)))) ORDER BY (((((v0.c0))==((v0.c0)))) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND (((rt0.c1)-(x'390f3ee0')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS TEXT))>=(((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0, v0, rt0 ORDER BY (((((v0.c0))=((v0.c0)))) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND (((rt0.c1)-(x'390f3ee0')))) DESC  NULLS FIRST);
SELECT * FROM t0, v0, rt0 WHERE (((CAST(v0.c0 AS TEXT))>=(((t0.c0) NOT NULL)))) ORDER BY (((((v0.c0))==((v0.c0)))) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND (((rt0.c1)-(x'390f3ee0')))) DESC  NULLS FIRST;
SELECT ALL * FROM t0, v0, vt1 WHERE (x'b032');
SELECT SUM(count) FROM (SELECT ALL ((x'b032') IS TRUE)  as count FROM t0, v0, vt1);
SELECT ALL * FROM t0, v0, vt1 WHERE (x'b032');
SELECT SUM(count) FROM (SELECT ALL ((x'b032') IS TRUE)  as count FROM t0, v0, vt1);
SELECT ALL * FROM t0, v0, vt1 WHERE (x'b032');
SELECT ALL * FROM vt1, t0, v0 NOT INDEXED WHERE ((~ (((x'')+(vt1.c0))))) ORDER BY ((t0.c0 COLLATE NOCASE)LIKE(vt1.c0 COLLATE RTRIM))  NULLS FIRST, ((((LENGTH(t0.c0))AND('qa')))OR(((t0.c0)IS(v0.c0)))), CAST((((v0.c0))<((t0.c0))) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((x'')+(vt1.c0))))) IS TRUE)  as count FROM vt1, t0, v0 ORDER BY ((t0.c0 COLLATE NOCASE)LIKE(vt1.c0 COLLATE RTRIM))  NULLS FIRST, ((((LENGTH(t0.c0))AND('qa')))OR(((t0.c0)IS(v0.c0)))), CAST((((v0.c0))<((t0.c0))) AS NUMERIC) DESC);
SELECT ALL * FROM vt1, t0, v0 NOT INDEXED WHERE ((~ (((x'')+(vt1.c0))))) ORDER BY ((t0.c0 COLLATE NOCASE)LIKE(vt1.c0 COLLATE RTRIM))  NULLS FIRST, ((((LENGTH(t0.c0))AND('qa')))OR(((t0.c0)IS(v0.c0)))), CAST((((v0.c0))<((t0.c0))) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((x'')+(vt1.c0))))) IS TRUE)  as count FROM vt1, t0, v0 ORDER BY ((t0.c0 COLLATE NOCASE)LIKE(vt1.c0 COLLATE RTRIM))  NULLS FIRST, ((((LENGTH(t0.c0))AND('qa')))OR(((t0.c0)IS(v0.c0)))), CAST((((v0.c0))<((t0.c0))) AS NUMERIC) DESC);
SELECT ALL * FROM vt1, t0, v0 NOT INDEXED WHERE ((~ (((x'')+(vt1.c0))))) ORDER BY ((t0.c0 COLLATE NOCASE)LIKE(vt1.c0 COLLATE RTRIM))  NULLS FIRST, ((((LENGTH(t0.c0))AND('qa')))OR(((t0.c0)IS(v0.c0)))), CAST((((v0.c0))<((t0.c0))) AS NUMERIC) DESC;
SELECT ALL COUNT(*) FROM rt0, vt1 NATURAL JOIN t0 WHERE ((((((NULL))<=((rt0.c0)))) NOT BETWEEN ('497652313') AND ((((vt1.c0, t0.c0, 0.34070744276517995, 0.2352526133997097, t0.c0)) NOT BETWEEN ((rt0.c0, vt1.c0, x'', rt0.c1, vt1.c0)) AND ((rt0.c1, 2.07034537E8, vt1.c0, rt0.c0, t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL))<=((rt0.c0)))) NOT BETWEEN ('497652313') AND ((((vt1.c0, t0.c0, 0.34070744276517995, 0.2352526133997097, t0.c0)) NOT BETWEEN ((rt0.c0, vt1.c0, x'', rt0.c1, vt1.c0)) AND ((rt0.c1, 2.07034537E8, vt1.c0, rt0.c0, t0.c0)))))) IS TRUE)  as count FROM rt0, vt1 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM rt0, vt1 NATURAL JOIN t0 WHERE ((((((NULL))<=((rt0.c0)))) NOT BETWEEN ('497652313') AND ((((vt1.c0, t0.c0, 0.34070744276517995, 0.2352526133997097, t0.c0)) NOT BETWEEN ((rt0.c0, vt1.c0, x'', rt0.c1, vt1.c0)) AND ((rt0.c1, 2.07034537E8, vt1.c0, rt0.c0, t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL))<=((rt0.c0)))) NOT BETWEEN ('497652313') AND ((((vt1.c0, t0.c0, 0.34070744276517995, 0.2352526133997097, t0.c0)) NOT BETWEEN ((rt0.c0, vt1.c0, x'', rt0.c1, vt1.c0)) AND ((rt0.c1, 2.07034537E8, vt1.c0, rt0.c0, t0.c0)))))) IS TRUE)  as count FROM rt0, vt1 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM rt0, vt1 NATURAL JOIN t0 WHERE ((((((NULL))<=((rt0.c0)))) NOT BETWEEN ('497652313') AND ((((vt1.c0, t0.c0, 0.34070744276517995, 0.2352526133997097, t0.c0)) NOT BETWEEN ((rt0.c0, vt1.c0, x'', rt0.c1, vt1.c0)) AND ((rt0.c1, 2.07034537E8, vt1.c0, rt0.c0, t0.c0))))));
SELECT ALL * FROM rt0, v0 NATURAL JOIN vt1 WHERE (((('') IS TRUE) IN (((rt0.c2) NOT NULL)))) ORDER BY (- ((vt1.c0 IN (v0.c0, '|鲀Iw稌*	]r'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((('') IS TRUE) IN (((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM rt0, v0 NATURAL JOIN vt1 ORDER BY (- ((vt1.c0 IN (v0.c0, '|鲀Iw稌*	]r'))))  NULLS FIRST);
SELECT ALL * FROM rt0, v0 NATURAL JOIN vt1 WHERE (((('') IS TRUE) IN (((rt0.c2) NOT NULL)))) ORDER BY (- ((vt1.c0 IN (v0.c0, '|鲀Iw稌*	]r'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((('') IS TRUE) IN (((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM rt0, v0 NATURAL JOIN vt1 ORDER BY (- ((vt1.c0 IN (v0.c0, '|鲀Iw稌*	]r'))))  NULLS FIRST);
SELECT ALL * FROM rt0, v0 NATURAL JOIN vt1 WHERE (((('') IS TRUE) IN (((rt0.c2) NOT NULL)))) ORDER BY (- ((vt1.c0 IN (v0.c0, '|鲀Iw稌*	]r'))))  NULLS FIRST;
SELECT * FROM v0, rt0 LEFT OUTER JOIN t0 ON ((((t0.c0 COLLATE BINARY)OR(CASE vt1.c0  WHEN t0.c0 THEN rt0.c1 ELSE vt1.c0 END)))OR(((rt0.c1) ISNULL))) RIGHT OUTER JOIN vt1 ON ((((v0.c0)>(vt1.c0)))LIKE(((((rt0.c0)AND(x'')))OR(v0.c0)))) WHERE ((((rt0.c2)) BETWEEN ((CASE WHEN vt1.c0 THEN rt0.c1 ELSE v0.c0 END)) AND ((rt0.c2)))) ORDER BY ((((rt0.c1)<(rt0.c2))) BETWEEN ((t0.c0 IN (v0.c0, rt0.c0))) AND (CAST(rt0.c0 AS TEXT)))  NULLS FIRST, ((CAST(rt0.c0 AS NUMERIC)) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((CASE WHEN vt1.c0 THEN rt0.c1 ELSE v0.c0 END)) AND ((rt0.c2)))) IS TRUE)  as count FROM v0, rt0 LEFT OUTER JOIN t0 ON ((((t0.c0 COLLATE BINARY)OR(CASE vt1.c0  WHEN t0.c0 THEN rt0.c1 ELSE vt1.c0 END)))OR(((rt0.c1) ISNULL))) RIGHT OUTER JOIN vt1 ON ((((v0.c0)>(vt1.c0)))LIKE(((((rt0.c0)AND(x'')))OR(v0.c0)))) ORDER BY ((((rt0.c1)<(rt0.c2))) BETWEEN ((t0.c0 IN (v0.c0, rt0.c0))) AND (CAST(rt0.c0 AS TEXT)))  NULLS FIRST, ((CAST(rt0.c0 AS NUMERIC)) IS TRUE) DESC  NULLS LAST);
SELECT * FROM v0, rt0 LEFT OUTER JOIN t0 ON ((((t0.c0 COLLATE BINARY)OR(CASE vt1.c0  WHEN t0.c0 THEN rt0.c1 ELSE vt1.c0 END)))OR(((rt0.c1) ISNULL))) RIGHT OUTER JOIN vt1 ON ((((v0.c0)>(vt1.c0)))LIKE(((((rt0.c0)AND(x'')))OR(v0.c0)))) WHERE ((((rt0.c2)) BETWEEN ((CASE WHEN vt1.c0 THEN rt0.c1 ELSE v0.c0 END)) AND ((rt0.c2)))) ORDER BY ((((rt0.c1)<(rt0.c2))) BETWEEN ((t0.c0 IN (v0.c0, rt0.c0))) AND (CAST(rt0.c0 AS TEXT)))  NULLS FIRST, ((CAST(rt0.c0 AS NUMERIC)) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((CASE WHEN vt1.c0 THEN rt0.c1 ELSE v0.c0 END)) AND ((rt0.c2)))) IS TRUE)  as count FROM v0, rt0 LEFT OUTER JOIN t0 ON ((((t0.c0 COLLATE BINARY)OR(CASE vt1.c0  WHEN t0.c0 THEN rt0.c1 ELSE vt1.c0 END)))OR(((rt0.c1) ISNULL))) RIGHT OUTER JOIN vt1 ON ((((v0.c0)>(vt1.c0)))LIKE(((((rt0.c0)AND(x'')))OR(v0.c0)))) ORDER BY ((((rt0.c1)<(rt0.c2))) BETWEEN ((t0.c0 IN (v0.c0, rt0.c0))) AND (CAST(rt0.c0 AS TEXT)))  NULLS FIRST, ((CAST(rt0.c0 AS NUMERIC)) IS TRUE) DESC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 LEFT OUTER JOIN t0 ON ((json_insert(NULL, rt0.c2, t0.c0)) NOT NULL) WHERE (NULL) ORDER BY CASE WHEN NULL THEN rt0.c1 COLLATE RTRIM END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, rt0 LEFT OUTER JOIN t0 ON ((json_insert(NULL, rt0.c2, t0.c0)) NOT NULL) ORDER BY CASE WHEN NULL THEN rt0.c1 COLLATE RTRIM END DESC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 LEFT OUTER JOIN t0 ON ((json_insert(NULL, rt0.c2, t0.c0)) NOT NULL) WHERE (NULL) ORDER BY CASE WHEN NULL THEN rt0.c1 COLLATE RTRIM END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, rt0 LEFT OUTER JOIN t0 ON ((json_insert(NULL, rt0.c2, t0.c0)) NOT NULL) ORDER BY CASE WHEN NULL THEN rt0.c1 COLLATE RTRIM END DESC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 LEFT OUTER JOIN t0 ON ((json_insert(NULL, rt0.c2, t0.c0)) NOT NULL) WHERE (NULL) ORDER BY CASE WHEN NULL THEN rt0.c1 COLLATE RTRIM END DESC  NULLS LAST;
SELECT * FROM t0 WHERE (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0 COLLATE BINARY)))OR((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0 COLLATE BINARY)))OR((t0.c0 IN ())))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0 COLLATE BINARY)))OR((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0 COLLATE BINARY)))OR((t0.c0 IN ())))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0 COLLATE BINARY)))OR((t0.c0 IN ()))));
SELECT * FROM t0, v0, rt0, vt1 WHERE (CAST(rt0.c1 COLLATE NOCASE AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM t0, v0, rt0, vt1);
SELECT * FROM t0, v0, rt0, vt1 WHERE (CAST(rt0.c1 COLLATE NOCASE AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM t0, v0, rt0, vt1);
SELECT * FROM t0, v0, rt0, vt1 WHERE (CAST(rt0.c1 COLLATE NOCASE AS NUMERIC));
SELECT * FROM v0 LEFT OUTER JOIN t0 ON CAST(rt0.c2 AS REAL) COLLATE NOCASE INNER JOIN rt0 ON (((('')OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)))))OR(rt0.c1 COLLATE RTRIM)) CROSS JOIN vt1 ON (vt1.c0 IN ()) COLLATE RTRIM WHERE (((CAST(rt0.c1 AS BLOB))LIKE(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))) ORDER BY (((((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0))))>((LOWER(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS BLOB))LIKE(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON CAST(rt0.c2 AS REAL) COLLATE NOCASE INNER JOIN rt0 ON (((('')OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)))))OR(rt0.c1 COLLATE RTRIM)) CROSS JOIN vt1 ON (vt1.c0 IN ()) COLLATE RTRIM ORDER BY (((((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0))))>((LOWER(rt0.c2)))));
SELECT * FROM v0 LEFT OUTER JOIN t0 ON CAST(rt0.c2 AS REAL) COLLATE NOCASE INNER JOIN rt0 ON (((('')OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)))))OR(rt0.c1 COLLATE RTRIM)) CROSS JOIN vt1 ON (vt1.c0 IN ()) COLLATE RTRIM WHERE (((CAST(rt0.c1 AS BLOB))LIKE(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))) ORDER BY (((((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0))))>((LOWER(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS BLOB))LIKE(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON CAST(rt0.c2 AS REAL) COLLATE NOCASE INNER JOIN rt0 ON (((('')OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)))))OR(rt0.c1 COLLATE RTRIM)) CROSS JOIN vt1 ON (vt1.c0 IN ()) COLLATE RTRIM ORDER BY (((((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0))))>((LOWER(rt0.c2)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((('OTi5#') IS TRUE)) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('OTi5#') IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((('OTi5#') IS TRUE)) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('OTi5#') IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((('OTi5#') IS TRUE)) ORDER BY v0.c0  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0, v0, vt1 WHERE (((((((((rt0.c0)OR(v0.c0)))OR(t0.c0)))OR(vt1.c0)))OR(rt0.c0)) COLLATE NOCASE) ORDER BY ((((CAST(v0.c0 AS REAL))OR(((((rt0.c1)AND(v0.c0)))AND(t0.c0)))))AND(rt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0)OR(v0.c0)))OR(t0.c0)))OR(vt1.c0)))OR(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0, v0, vt1 ORDER BY ((((CAST(v0.c0 AS REAL))OR(((((rt0.c1)AND(v0.c0)))AND(t0.c0)))))AND(rt0.c0)) ASC);
SELECT COUNT(*) FROM t0, rt0, v0, vt1 WHERE (((((((((rt0.c0)OR(v0.c0)))OR(t0.c0)))OR(vt1.c0)))OR(rt0.c0)) COLLATE NOCASE) ORDER BY ((((CAST(v0.c0 AS REAL))OR(((((rt0.c1)AND(v0.c0)))AND(t0.c0)))))AND(rt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0)OR(v0.c0)))OR(t0.c0)))OR(vt1.c0)))OR(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0, v0, vt1 ORDER BY ((((CAST(v0.c0 AS REAL))OR(((((rt0.c1)AND(v0.c0)))AND(t0.c0)))))AND(rt0.c0)) ASC);
SELECT COUNT(*) FROM t0, rt0, v0, vt1 WHERE (((((((((rt0.c0)OR(v0.c0)))OR(t0.c0)))OR(vt1.c0)))OR(rt0.c0)) COLLATE NOCASE) ORDER BY ((((CAST(v0.c0 AS REAL))OR(((((rt0.c1)AND(v0.c0)))AND(t0.c0)))))AND(rt0.c0)) ASC;
SELECT ALL * FROM rt0 WHERE ((+ ((rt0.c1 IN ())))) ORDER BY (((NULL, rt0.c2, rt0.c0)) BETWEEN (((((rt0.c0))<((rt0.c2))), ((rt0.c2)=(rt0.c2)), ((rt0.c1)>(rt0.c1)))) AND ((((rt0.c2)/(rt0.c1)), ((rt0.c1) NOTNULL), ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c2))))) ASC  NULLS FIRST, (((NOT (rt0.c1)))<<(((rt0.c0) ISNULL))) DESC  NULLS LAST, CAST((((rt0.c2))<((rt0.c2))) AS REAL) ASC  NULLS LAST, ((rt0.c1)-((NOT (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY (((NULL, rt0.c2, rt0.c0)) BETWEEN (((((rt0.c0))<((rt0.c2))), ((rt0.c2)=(rt0.c2)), ((rt0.c1)>(rt0.c1)))) AND ((((rt0.c2)/(rt0.c1)), ((rt0.c1) NOTNULL), ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c2))))) ASC  NULLS FIRST, (((NOT (rt0.c1)))<<(((rt0.c0) ISNULL))) DESC  NULLS LAST, CAST((((rt0.c2))<((rt0.c2))) AS REAL) ASC  NULLS LAST, ((rt0.c1)-((NOT (rt0.c2))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((+ ((rt0.c1 IN ())))) ORDER BY (((NULL, rt0.c2, rt0.c0)) BETWEEN (((((rt0.c0))<((rt0.c2))), ((rt0.c2)=(rt0.c2)), ((rt0.c1)>(rt0.c1)))) AND ((((rt0.c2)/(rt0.c1)), ((rt0.c1) NOTNULL), ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c2))))) ASC  NULLS FIRST, (((NOT (rt0.c1)))<<(((rt0.c0) ISNULL))) DESC  NULLS LAST, CAST((((rt0.c2))<((rt0.c2))) AS REAL) ASC  NULLS LAST, ((rt0.c1)-((NOT (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY (((NULL, rt0.c2, rt0.c0)) BETWEEN (((((rt0.c0))<((rt0.c2))), ((rt0.c2)=(rt0.c2)), ((rt0.c1)>(rt0.c1)))) AND ((((rt0.c2)/(rt0.c1)), ((rt0.c1) NOTNULL), ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c2))))) ASC  NULLS FIRST, (((NOT (rt0.c1)))<<(((rt0.c0) ISNULL))) DESC  NULLS LAST, CAST((((rt0.c2))<((rt0.c2))) AS REAL) ASC  NULLS LAST, ((rt0.c1)-((NOT (rt0.c2))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((+ ((rt0.c1 IN ())))) ORDER BY (((NULL, rt0.c2, rt0.c0)) BETWEEN (((((rt0.c0))<((rt0.c2))), ((rt0.c2)=(rt0.c2)), ((rt0.c1)>(rt0.c1)))) AND ((((rt0.c2)/(rt0.c1)), ((rt0.c1) NOTNULL), ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c2))))) ASC  NULLS FIRST, (((NOT (rt0.c1)))<<(((rt0.c0) ISNULL))) DESC  NULLS LAST, CAST((((rt0.c2))<((rt0.c2))) AS REAL) ASC  NULLS LAST, ((rt0.c1)-((NOT (rt0.c2))))  NULLS LAST;
SELECT ALL * FROM rt0, v0, t0, vt1 WHERE (rtreenode((((vt1.c0, rt0.c0, v0.c0))!=((x'', rt0.c1, 0.8890949261941613))), ((0.852967490037349)GLOB(rt0.c1)))) ORDER BY ((((((rt0.c2) IS TRUE))AND(((v0.c0)OR(vt1.c0)))))OR(CAST(vt1.c0 AS REAL)))  NULLS FIRST, (((~ (vt1.c0))) BETWEEN (((rt0.c2) BETWEEN (vt1.c0) AND (v0.c0))) AND ((((t0.c0))==((rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rtreenode((((vt1.c0, rt0.c0, v0.c0))<>((x'', rt0.c1, 0.8890949261941613))), ((0.852967490037349)GLOB(rt0.c1)))) IS TRUE)  as count FROM rt0, v0, t0, vt1 ORDER BY ((((((rt0.c2) IS TRUE))AND(((v0.c0)OR(vt1.c0)))))OR(CAST(vt1.c0 AS REAL)))  NULLS FIRST, (((~ (vt1.c0))) BETWEEN (((rt0.c2) BETWEEN (vt1.c0) AND (v0.c0))) AND ((((t0.c0))=((rt0.c2))))) ASC);
SELECT ALL * FROM rt0, v0, t0, vt1 WHERE (rtreenode((((vt1.c0, rt0.c0, v0.c0))!=((x'', rt0.c1, 0.8890949261941613))), ((0.852967490037349)GLOB(rt0.c1)))) ORDER BY ((((((rt0.c2) IS TRUE))AND(((v0.c0)OR(vt1.c0)))))OR(CAST(vt1.c0 AS REAL)))  NULLS FIRST, (((~ (vt1.c0))) BETWEEN (((rt0.c2) BETWEEN (vt1.c0) AND (v0.c0))) AND ((((t0.c0))==((rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rtreenode((((vt1.c0, rt0.c0, v0.c0))<>((x'', rt0.c1, 0.8890949261941613))), ((0.852967490037349)GLOB(rt0.c1)))) IS TRUE)  as count FROM rt0, v0, t0, vt1 ORDER BY ((((((rt0.c2) IS TRUE))AND(((v0.c0)OR(vt1.c0)))))OR(CAST(vt1.c0 AS REAL)))  NULLS FIRST, (((~ (vt1.c0))) BETWEEN (((rt0.c2) BETWEEN (vt1.c0) AND (v0.c0))) AND ((((t0.c0))=((rt0.c2))))) ASC);
SELECT ALL * FROM rt0, v0, t0, vt1 WHERE (rtreenode((((vt1.c0, rt0.c0, v0.c0))!=((x'', rt0.c1, 0.8890949261941613))), ((0.852967490037349)GLOB(rt0.c1)))) ORDER BY ((((((rt0.c2) IS TRUE))AND(((v0.c0)OR(vt1.c0)))))OR(CAST(vt1.c0 AS REAL)))  NULLS FIRST, (((~ (vt1.c0))) BETWEEN (((rt0.c2) BETWEEN (vt1.c0) AND (v0.c0))) AND ((((t0.c0))==((rt0.c2))))) ASC;
SELECT ALL * FROM v0, vt1 RIGHT OUTER JOIN t0 ON (((((((((((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))AND(CAST(rt0.c0 AS NUMERIC))))OR(rt0.c0)))AND(v0.c0)))AND((rt0.c0 IN (rt0.c1)))))OR((~ (v0.c0)))))OR(((0.1501832832029889)GLOB(v0.c0)))) RIGHT OUTER JOIN rt0 ON CAST(v0.c0 AS REAL) COLLATE BINARY WHERE ((((NOT (vt1.c0)))<(CAST(v0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0)))<(CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0, vt1 RIGHT OUTER JOIN t0 ON (((((((((((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))AND(CAST(rt0.c0 AS NUMERIC))))OR(rt0.c0)))AND(v0.c0)))AND((rt0.c0 IN (rt0.c1)))))OR((~ (v0.c0)))))OR(((0.1501832832029889)GLOB(v0.c0)))) RIGHT OUTER JOIN rt0 ON CAST(v0.c0 AS REAL) COLLATE BINARY);
SELECT ALL * FROM v0, vt1 RIGHT OUTER JOIN t0 ON (((((((((((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))AND(CAST(rt0.c0 AS NUMERIC))))OR(rt0.c0)))AND(v0.c0)))AND((rt0.c0 IN (rt0.c1)))))OR((~ (v0.c0)))))OR(((0.1501832832029889)GLOB(v0.c0)))) RIGHT OUTER JOIN rt0 ON CAST(v0.c0 AS REAL) COLLATE BINARY WHERE ((((NOT (vt1.c0)))<(CAST(v0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0)))<(CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0, vt1 RIGHT OUTER JOIN t0 ON (((((((((((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))AND(CAST(rt0.c0 AS NUMERIC))))OR(rt0.c0)))AND(v0.c0)))AND((rt0.c0 IN (rt0.c1)))))OR((~ (v0.c0)))))OR(((0.1501832832029889)GLOB(v0.c0)))) RIGHT OUTER JOIN rt0 ON CAST(v0.c0 AS REAL) COLLATE BINARY);
SELECT * FROM t0 LEFT OUTER JOIN v0 ON ((((((rt0.c2) NOTNULL))AND(((t0.c0)>>(v0.c0)))))AND(((vt1.c0) NOTNULL))) INNER JOIN vt1 ON ((rt0.c1)LIKE(rt0.c1)) COLLATE BINARY LEFT OUTER JOIN rt0 ON ((((rt0.c1) BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (((rt0.c1)AND(v0.c0))) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) WHERE (((((v0.c0) BETWEEN (vt1.c0) AND (0x74307047))) BETWEEN ((('1477794069') NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND (((rt0.c0)*(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (vt1.c0) AND (0x74307047))) BETWEEN ((('1477794069') NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND (((rt0.c0)*(v0.c0))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON ((((((rt0.c2) NOTNULL))AND(((t0.c0)>>(v0.c0)))))AND(((vt1.c0) NOTNULL))) INNER JOIN vt1 ON ((rt0.c1)LIKE(rt0.c1)) COLLATE BINARY LEFT OUTER JOIN rt0 ON ((((rt0.c1) BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (((rt0.c1)AND(v0.c0))) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT * FROM t0 LEFT OUTER JOIN v0 ON ((((((rt0.c2) NOTNULL))AND(((t0.c0)>>(v0.c0)))))AND(((vt1.c0) NOTNULL))) INNER JOIN vt1 ON ((rt0.c1)LIKE(rt0.c1)) COLLATE BINARY LEFT OUTER JOIN rt0 ON ((((rt0.c1) BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (((rt0.c1)AND(v0.c0))) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) WHERE (((((v0.c0) BETWEEN (vt1.c0) AND (0x74307047))) BETWEEN ((('1477794069') NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND (((rt0.c0)*(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (vt1.c0) AND (0x74307047))) BETWEEN ((('1477794069') NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND (((rt0.c0)*(v0.c0))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON ((((((rt0.c2) NOTNULL))AND(((t0.c0)>>(v0.c0)))))AND(((vt1.c0) NOTNULL))) INNER JOIN vt1 ON ((rt0.c1)LIKE(rt0.c1)) COLLATE BINARY LEFT OUTER JOIN rt0 ON ((((rt0.c1) BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (((rt0.c1)AND(v0.c0))) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT ALL * FROM rt0, t0 WHERE (((ROUND(t0.c0, t0.c0)) IS TRUE)) ORDER BY ((((rt0.c0)IS NOT(rt0.c2))) NOT NULL), CASE WHEN (((rt0.c2))==((rt0.c1))) THEN ((rt0.c0)<(rt0.c0)) ELSE ((rt0.c0)<(rt0.c2)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((ROUND(t0.c0, t0.c0)) IS TRUE)) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c0)IS NOT(rt0.c2))) NOT NULL), CASE WHEN (((rt0.c2))==((rt0.c1))) THEN ((rt0.c0)<(rt0.c0)) ELSE ((rt0.c0)<(rt0.c2)) END ASC  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE (((ROUND(t0.c0, t0.c0)) IS TRUE)) ORDER BY ((((rt0.c0)IS NOT(rt0.c2))) NOT NULL), CASE WHEN (((rt0.c2))==((rt0.c1))) THEN ((rt0.c0)<(rt0.c0)) ELSE ((rt0.c0)<(rt0.c2)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((ROUND(t0.c0, t0.c0)) IS TRUE)) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c0)IS NOT(rt0.c2))) NOT NULL), CASE WHEN (((rt0.c2))==((rt0.c1))) THEN ((rt0.c0)<(rt0.c0)) ELSE ((rt0.c0)<(rt0.c2)) END ASC  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE (((ROUND(t0.c0, t0.c0)) IS TRUE)) ORDER BY ((((rt0.c0)IS NOT(rt0.c2))) NOT NULL), CASE WHEN (((rt0.c2))==((rt0.c1))) THEN ((rt0.c0)<(rt0.c0)) ELSE ((rt0.c0)<(rt0.c2)) END ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)) IN ()));
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON ((TYPEOF(DISTINCT rt0.c0))&(CAST(x'' AS BLOB))) WHERE ((NOT (json(rt0.c1)))) ORDER BY ((rt0.c2)OR(rt0.c0)) COLLATE BINARY DESC, TRIM(rt0.c1 COLLATE RTRIM) ASC, ((vt1.c0)||((+ (0.34724280017721876)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (json(rt0.c1)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((TYPEOF(DISTINCT rt0.c0))&(CAST(x'' AS BLOB))) ORDER BY ((rt0.c2)OR(rt0.c0)) COLLATE BINARY DESC, TRIM(rt0.c1 COLLATE RTRIM) ASC, ((vt1.c0)||((+ (0.34724280017721876)))) ASC  NULLS FIRST);
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON ((TYPEOF(DISTINCT rt0.c0))&(CAST(x'' AS BLOB))) WHERE ((NOT (json(rt0.c1)))) ORDER BY ((rt0.c2)OR(rt0.c0)) COLLATE BINARY DESC, TRIM(rt0.c1 COLLATE RTRIM) ASC, ((vt1.c0)||((+ (0.34724280017721876)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (json(rt0.c1)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((TYPEOF(DISTINCT rt0.c0))&(CAST(x'' AS BLOB))) ORDER BY ((rt0.c2)OR(rt0.c0)) COLLATE BINARY DESC, TRIM(rt0.c1 COLLATE RTRIM) ASC, ((vt1.c0)||((+ (0.34724280017721876)))) ASC  NULLS FIRST);
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON ((TYPEOF(DISTINCT rt0.c0))&(CAST(x'' AS BLOB))) WHERE ((NOT (json(rt0.c1)))) ORDER BY ((rt0.c2)OR(rt0.c0)) COLLATE BINARY DESC, TRIM(rt0.c1 COLLATE RTRIM) ASC, ((vt1.c0)||((+ (0.34724280017721876)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0 NOT INDEXED, v0 WHERE ((((v0.c0, rt0.c1, x'')) NOT BETWEEN (((((('')AND(rt0.c2)))AND(vt1.c0)), ((rt0.c0)GLOB(NULL)), (((rt0.c0, rt0.c2, rt0.c0))<=((rt0.c1, rt0.c1, vt1.c0))))) AND ((((rt0.c2) NOTNULL), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))), ((((((((((((rt0.c1)AND('')))OR(v0.c0)))OR(v0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))))) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, rt0.c1, x'')) NOT BETWEEN (((((('')AND(rt0.c2)))AND(vt1.c0)), ((rt0.c0)GLOB(NULL)), (((rt0.c0, rt0.c2, rt0.c0))<=((rt0.c1, rt0.c1, vt1.c0))))) AND ((((rt0.c2) NOTNULL), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))), ((((((((((((rt0.c1)AND('')))OR(v0.c0)))OR(v0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))))) IS TRUE)  as count FROM vt1, rt0, v0 ORDER BY rt0.c2);
SELECT COUNT(*) FROM vt1, rt0 NOT INDEXED, v0 WHERE ((((v0.c0, rt0.c1, x'')) NOT BETWEEN (((((('')AND(rt0.c2)))AND(vt1.c0)), ((rt0.c0)GLOB(NULL)), (((rt0.c0, rt0.c2, rt0.c0))<=((rt0.c1, rt0.c1, vt1.c0))))) AND ((((rt0.c2) NOTNULL), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))), ((((((((((((rt0.c1)AND('')))OR(v0.c0)))OR(v0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))))) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, rt0.c1, x'')) NOT BETWEEN (((((('')AND(rt0.c2)))AND(vt1.c0)), ((rt0.c0)GLOB(NULL)), (((rt0.c0, rt0.c2, rt0.c0))<=((rt0.c1, rt0.c1, vt1.c0))))) AND ((((rt0.c2) NOTNULL), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))), ((((((((((((rt0.c1)AND('')))OR(v0.c0)))OR(v0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))))) IS TRUE)  as count FROM vt1, rt0, v0 ORDER BY rt0.c2);
SELECT COUNT(*) FROM vt1, rt0 NOT INDEXED, v0 WHERE ((((v0.c0, rt0.c1, x'')) NOT BETWEEN (((((('')AND(rt0.c2)))AND(vt1.c0)), ((rt0.c0)GLOB(NULL)), (((rt0.c0, rt0.c2, rt0.c0))<=((rt0.c1, rt0.c1, vt1.c0))))) AND ((((rt0.c2) NOTNULL), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))), ((((((((((((rt0.c1)AND('')))OR(v0.c0)))OR(v0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))))) ORDER BY rt0.c2;
SELECT ALL * FROM rt0 WHERE (COALESCE(DISTINCT (~ (rt0.c1)), NULL)) ORDER BY CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN NULLIF(DISTINCT rt0.c1, rt0.c1) WHEN CAST(rt0.c2 AS REAL) THEN (rt0.c2 IN ()) WHEN ((rt0.c1) ISNULL) THEN CAST(rt0.c1 AS REAL) ELSE (NOT (x'')) END;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT (~ (rt0.c1)), NULL)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN NULLIF(DISTINCT rt0.c1, rt0.c1) WHEN CAST(rt0.c2 AS REAL) THEN (rt0.c2 IN ()) WHEN ((rt0.c1) ISNULL) THEN CAST(rt0.c1 AS REAL) ELSE (NOT (x'')) END);
SELECT ALL * FROM rt0 WHERE (COALESCE(DISTINCT (~ (rt0.c1)), NULL)) ORDER BY CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN NULLIF(DISTINCT rt0.c1, rt0.c1) WHEN CAST(rt0.c2 AS REAL) THEN (rt0.c2 IN ()) WHEN ((rt0.c1) ISNULL) THEN CAST(rt0.c1 AS REAL) ELSE (NOT (x'')) END;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT (~ (rt0.c1)), NULL)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN NULLIF(DISTINCT rt0.c1, rt0.c1) WHEN CAST(rt0.c2 AS REAL) THEN (rt0.c2 IN ()) WHEN ((rt0.c1) ISNULL) THEN CAST(rt0.c1 AS REAL) ELSE (NOT (x'')) END);
SELECT ALL * FROM rt0 WHERE (COALESCE(DISTINCT (~ (rt0.c1)), NULL)) ORDER BY CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN NULLIF(DISTINCT rt0.c1, rt0.c1) WHEN CAST(rt0.c2 AS REAL) THEN (rt0.c2 IN ()) WHEN ((rt0.c1) ISNULL) THEN CAST(rt0.c1 AS REAL) ELSE (NOT (x'')) END;
SELECT ALL COUNT(*) FROM rt0, t0, v0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))) ISNULL)) ORDER BY (((((rt0.c1) ISNULL)))==((((((-2.035645503E9)OR(x'44c6')))OR(v0.c0))))) DESC, CAST((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))) AS TEXT)  NULLS LAST, ((rt0.c1 COLLATE RTRIM)<=(CASE WHEN v0.c0 THEN rt0.c2 END));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))) ISNULL)) IS TRUE)  as count FROM rt0, t0, v0 ORDER BY (((((rt0.c1) ISNULL)))==((((((-2.035645503E9)OR(x'44c6')))OR(v0.c0))))) DESC, CAST((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))) AS TEXT)  NULLS LAST, ((rt0.c1 COLLATE RTRIM)<=(CASE WHEN v0.c0 THEN rt0.c2 END)));
SELECT ALL COUNT(*) FROM rt0, t0, v0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))) ISNULL)) ORDER BY (((((rt0.c1) ISNULL)))==((((((-2.035645503E9)OR(x'44c6')))OR(v0.c0))))) DESC, CAST((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))) AS TEXT)  NULLS LAST, ((rt0.c1 COLLATE RTRIM)<=(CASE WHEN v0.c0 THEN rt0.c2 END));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))) ISNULL)) IS TRUE)  as count FROM rt0, t0, v0 ORDER BY (((((rt0.c1) ISNULL)))==((((((-2.035645503E9)OR(x'44c6')))OR(v0.c0))))) DESC, CAST((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))) AS TEXT)  NULLS LAST, ((rt0.c1 COLLATE RTRIM)<=(CASE WHEN v0.c0 THEN rt0.c2 END)));
SELECT ALL COUNT(*) FROM rt0, t0, v0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))) ISNULL)) ORDER BY (((((rt0.c1) ISNULL)))==((((((-2.035645503E9)OR(x'44c6')))OR(v0.c0))))) DESC, CAST((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))) AS TEXT)  NULLS LAST, ((rt0.c1 COLLATE RTRIM)<=(CASE WHEN v0.c0 THEN rt0.c2 END));
SELECT * FROM v0, t0 WHERE (v0.c0) ORDER BY (((v0.c0)) NOT BETWEEN ((NULLIF(DISTINCT t0.c0, v0.c0))) AND ((((v0.c0) IS TRUE)))) ASC, (((t0.c0)AND(v0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, t0 ORDER BY (((v0.c0)) NOT BETWEEN ((NULLIF(DISTINCT t0.c0, v0.c0))) AND ((((v0.c0) IS TRUE)))) ASC, (((t0.c0)AND(v0.c0)) IN ()) ASC);
SELECT * FROM v0, t0 WHERE (v0.c0) ORDER BY (((v0.c0)) NOT BETWEEN ((NULLIF(DISTINCT t0.c0, v0.c0))) AND ((((v0.c0) IS TRUE)))) ASC, (((t0.c0)AND(v0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, t0 ORDER BY (((v0.c0)) NOT BETWEEN ((NULLIF(DISTINCT t0.c0, v0.c0))) AND ((((v0.c0) IS TRUE)))) ASC, (((t0.c0)AND(v0.c0)) IN ()) ASC);
SELECT * FROM v0, t0 WHERE (v0.c0) ORDER BY (((v0.c0)) NOT BETWEEN ((NULLIF(DISTINCT t0.c0, v0.c0))) AND ((((v0.c0) IS TRUE)))) ASC, (((t0.c0)AND(v0.c0)) IN ()) ASC;
SELECT * FROM v0, t0, rt0 FULL OUTER JOIN vt1 ON t0.c0 WHERE ((((t0.c0 IN ()))>(((rt0.c0) NOT BETWEEN (rt0.c0) AND ('822097393')))));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ()))>(((rt0.c0) NOT BETWEEN (rt0.c0) AND ('822097393'))))) IS TRUE)  as count FROM v0, t0, rt0 FULL OUTER JOIN vt1 ON t0.c0);
SELECT * FROM v0, t0, rt0 FULL OUTER JOIN vt1 ON t0.c0 WHERE ((((t0.c0 IN ()))>(((rt0.c0) NOT BETWEEN (rt0.c0) AND ('822097393')))));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ()))>(((rt0.c0) NOT BETWEEN (rt0.c0) AND ('822097393'))))) IS TRUE)  as count FROM v0, t0, rt0 FULL OUTER JOIN vt1 ON t0.c0);
SELECT * FROM v0, t0, rt0 FULL OUTER JOIN vt1 ON t0.c0 WHERE ((((t0.c0 IN ()))>(((rt0.c0) NOT BETWEEN (rt0.c0) AND ('822097393')))));
SELECT ALL * FROM t0, vt1 WHERE (t0.c0) ORDER BY 0.7219517923421145, (((NULL COLLATE BINARY))=((0.9306397016892666 COLLATE BINARY))) ASC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, vt1 ORDER BY 0.7219517923421145, (((NULL COLLATE BINARY))=((0.9306397016892666 COLLATE BINARY))) ASC);
SELECT ALL * FROM t0, vt1 WHERE (t0.c0) ORDER BY 0.7219517923421145, (((NULL COLLATE BINARY))=((0.9306397016892666 COLLATE BINARY))) ASC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, vt1 ORDER BY 0.7219517923421145, (((NULL COLLATE BINARY))=((0.9306397016892666 COLLATE BINARY))) ASC);
SELECT ALL * FROM t0, vt1 WHERE (t0.c0) ORDER BY 0.7219517923421145, (((NULL COLLATE BINARY))=((0.9306397016892666 COLLATE BINARY))) ASC;
SELECT ALL * FROM vt1 WHERE (((NULL)=(((0.3255931845855843) NOT NULL)))) ORDER BY CAST((vt1.c0 IN ()) AS REAL), (((((((vt1.c0)AND(vt1.c0)))AND(NULL))))>=(((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, NULL)))))) DESC  NULLS LAST, ((((vt1.c0 IN ())))>=((0.5018483348533026)));
SELECT SUM(count) FROM (SELECT ((((NULL)==(((0.3255931845855843) NOT NULL)))) IS TRUE)  as count FROM vt1 ORDER BY CAST((vt1.c0 IN ()) AS REAL), (((((((vt1.c0)AND(vt1.c0)))AND(NULL))))>=(((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, NULL)))))) DESC  NULLS LAST, ((((vt1.c0 IN ())))>=((0.5018483348533026))));
SELECT ALL * FROM vt1 WHERE (((NULL)=(((0.3255931845855843) NOT NULL)))) ORDER BY CAST((vt1.c0 IN ()) AS REAL), (((((((vt1.c0)AND(vt1.c0)))AND(NULL))))>=(((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, NULL)))))) DESC  NULLS LAST, ((((vt1.c0 IN ())))>=((0.5018483348533026)));
SELECT SUM(count) FROM (SELECT ((((NULL)==(((0.3255931845855843) NOT NULL)))) IS TRUE)  as count FROM vt1 ORDER BY CAST((vt1.c0 IN ()) AS REAL), (((((((vt1.c0)AND(vt1.c0)))AND(NULL))))>=(((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, NULL)))))) DESC  NULLS LAST, ((((vt1.c0 IN ())))>=((0.5018483348533026))));
SELECT ALL * FROM vt1 WHERE (((NULL)=(((0.3255931845855843) NOT NULL)))) ORDER BY CAST((vt1.c0 IN ()) AS REAL), (((((((vt1.c0)AND(vt1.c0)))AND(NULL))))>=(((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, NULL)))))) DESC  NULLS LAST, ((((vt1.c0 IN ())))>=((0.5018483348533026)));
SELECT ALL * FROM vt1 WHERE (LIKELIHOOD(DISTINCT ((vt1.c0)+(vt1.c0)), 0.2722506679575498)) ORDER BY (- ((NOT (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT ((vt1.c0)+(vt1.c0)), 0.2722506679575498)) IS TRUE)  as count FROM vt1 ORDER BY (- ((NOT (vt1.c0)))) ASC);
SELECT ALL * FROM vt1 WHERE (LIKELIHOOD(DISTINCT ((vt1.c0)+(vt1.c0)), 0.2722506679575498)) ORDER BY (- ((NOT (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT ((vt1.c0)+(vt1.c0)), 0.2722506679575498)) IS TRUE)  as count FROM vt1 ORDER BY (- ((NOT (vt1.c0)))) ASC);
SELECT ALL * FROM vt1 WHERE (LIKELIHOOD(DISTINCT ((vt1.c0)+(vt1.c0)), 0.2722506679575498)) ORDER BY (- ((NOT (vt1.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE RTRIM) ORDER BY CAST(CASE WHEN vt1.c0 THEN '1457691804' ELSE '526042142' END AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY CAST(CASE WHEN vt1.c0 THEN '1457691804' ELSE '526042142' END AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE RTRIM) ORDER BY CAST(CASE WHEN vt1.c0 THEN '1457691804' ELSE '526042142' END AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY CAST(CASE WHEN vt1.c0 THEN '1457691804' ELSE '526042142' END AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE RTRIM) ORDER BY CAST(CASE WHEN vt1.c0 THEN '1457691804' ELSE '526042142' END AS BLOB)  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (x'48b4') ORDER BY LIKELY(rt0.c1 COLLATE BINARY) DESC;
SELECT SUM(count) FROM (SELECT ((x'48b4') IS TRUE)  as count FROM v0, rt0 ORDER BY LIKELY(rt0.c1 COLLATE BINARY) DESC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (x'48b4') ORDER BY LIKELY(rt0.c1 COLLATE BINARY) DESC;
SELECT SUM(count) FROM (SELECT ((x'48b4') IS TRUE)  as count FROM v0, rt0 ORDER BY LIKELY(rt0.c1 COLLATE BINARY) DESC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (x'48b4') ORDER BY LIKELY(rt0.c1 COLLATE BINARY) DESC;
SELECT ALL COUNT(*) FROM t0, vt1, rt0, v0 WHERE (1554075201) ORDER BY (((rt0.c2, t0.c0, v0.c0)) NOT BETWEEN ((((('1203068918'))>=((rt0.c0))), x'', ((0xfffffffff790b6f4) BETWEEN (v0.c0) AND (rt0.c0)))) AND ((((v0.c0) BETWEEN (vt1.c0) AND (rt0.c0)), ((rt0.c1)-(vt1.c0)), rt0.c2 COLLATE BINARY))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((1554075201) IS TRUE)  as count FROM t0, vt1, rt0, v0 ORDER BY (((rt0.c2, t0.c0, v0.c0)) NOT BETWEEN ((((('1203068918'))>=((rt0.c0))), x'', ((0Xfffffffff790b6f4) BETWEEN (v0.c0) AND (rt0.c0)))) AND ((((v0.c0) BETWEEN (vt1.c0) AND (rt0.c0)), ((rt0.c1)-(vt1.c0)), rt0.c2 COLLATE BINARY))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1, rt0, v0 WHERE (1554075201) ORDER BY (((rt0.c2, t0.c0, v0.c0)) NOT BETWEEN ((((('1203068918'))>=((rt0.c0))), x'', ((0xfffffffff790b6f4) BETWEEN (v0.c0) AND (rt0.c0)))) AND ((((v0.c0) BETWEEN (vt1.c0) AND (rt0.c0)), ((rt0.c1)-(vt1.c0)), rt0.c2 COLLATE BINARY))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((1554075201) IS TRUE)  as count FROM t0, vt1, rt0, v0 ORDER BY (((rt0.c2, t0.c0, v0.c0)) NOT BETWEEN ((((('1203068918'))>=((rt0.c0))), x'', ((0Xfffffffff790b6f4) BETWEEN (v0.c0) AND (rt0.c0)))) AND ((((v0.c0) BETWEEN (vt1.c0) AND (rt0.c0)), ((rt0.c1)-(vt1.c0)), rt0.c2 COLLATE BINARY))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1, rt0, v0 WHERE (1554075201) ORDER BY (((rt0.c2, t0.c0, v0.c0)) NOT BETWEEN ((((('1203068918'))>=((rt0.c0))), x'', ((0xfffffffff790b6f4) BETWEEN (v0.c0) AND (rt0.c0)))) AND ((((v0.c0) BETWEEN (vt1.c0) AND (rt0.c0)), ((rt0.c1)-(vt1.c0)), rt0.c2 COLLATE BINARY))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (v0.c0) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt1 ORDER BY v0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (v0.c0) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt1 ORDER BY v0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (v0.c0) ORDER BY v0.c0  NULLS LAST;
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT * FROM rt0, t0 LEFT OUTER JOIN v0 ON (((((rt0.c0)%(rt0.c2))))<((CAST(t0.c0 AS BLOB)))) WHERE (((0xffffffffa491d10c)%(LIKELY(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((0Xffffffffa491d10c)%(LIKELY(v0.c0)))) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN v0 ON (((((rt0.c0)%(rt0.c2))))<((CAST(t0.c0 AS BLOB)))));
SELECT * FROM rt0, t0 LEFT OUTER JOIN v0 ON (((((rt0.c0)%(rt0.c2))))<((CAST(t0.c0 AS BLOB)))) WHERE (((0xffffffffa491d10c)%(LIKELY(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((0Xffffffffa491d10c)%(LIKELY(v0.c0)))) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN v0 ON (((((rt0.c0)%(rt0.c2))))<((CAST(t0.c0 AS BLOB)))));
SELECT * FROM rt0, t0 LEFT OUTER JOIN v0 ON (((((rt0.c0)%(rt0.c2))))<((CAST(t0.c0 AS BLOB)))) WHERE (((0xffffffffa491d10c)%(LIKELY(v0.c0))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON v0.c0 WHERE ((((v0.c0)) NOT BETWEEN (((v0.c0 IN ()))) AND ((CAST(t0.c0 AS NUMERIC))))) ORDER BY (v0.c0 IN ()) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN (((v0.c0 IN ()))) AND ((CAST(t0.c0 AS NUMERIC))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON v0.c0 ORDER BY (v0.c0 IN ()) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON v0.c0 WHERE ((((v0.c0)) NOT BETWEEN (((v0.c0 IN ()))) AND ((CAST(t0.c0 AS NUMERIC))))) ORDER BY (v0.c0 IN ()) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN (((v0.c0 IN ()))) AND ((CAST(t0.c0 AS NUMERIC))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON v0.c0 ORDER BY (v0.c0 IN ()) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON v0.c0 WHERE ((((v0.c0)) NOT BETWEEN (((v0.c0 IN ()))) AND ((CAST(t0.c0 AS NUMERIC))))) ORDER BY (v0.c0 IN ()) COLLATE RTRIM;
SELECT * FROM rt0, vt1, t0, v0 WHERE (LTRIM(((rt0.c2) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((LTRIM(((rt0.c2) IS TRUE))) IS TRUE)  as count FROM rt0, vt1, t0, v0);
SELECT * FROM rt0, vt1, t0, v0 WHERE (LTRIM(((rt0.c2) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((LTRIM(((rt0.c2) IS TRUE))) IS TRUE)  as count FROM rt0, vt1, t0, v0);
SELECT * FROM rt0, vt1, t0, v0 WHERE (LTRIM(((rt0.c2) IS TRUE)));
SELECT ALL COUNT(*) FROM vt1, rt0, v0 WHERE (((((((((vt1.c0 COLLATE NOCASE)OR((NOT (rt0.c1)))))AND(((NULL)AND(v0.c0)))))AND(json('UCcJ'))))OR(((rt0.c1)>>(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0 COLLATE NOCASE)OR((NOT (rt0.c1)))))AND(((NULL)AND(v0.c0)))))AND(json('UCcJ'))))OR(((rt0.c1)>>(rt0.c2))))) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT ALL COUNT(*) FROM vt1, rt0, v0 WHERE (((((((((vt1.c0 COLLATE NOCASE)OR((NOT (rt0.c1)))))AND(((NULL)AND(v0.c0)))))AND(json('UCcJ'))))OR(((rt0.c1)>>(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0 COLLATE NOCASE)OR((NOT (rt0.c1)))))AND(((NULL)AND(v0.c0)))))AND(json('UCcJ'))))OR(((rt0.c1)>>(rt0.c2))))) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ())) IS TRUE)) ORDER BY ((((rt0.c2)*(rt0.c2))) BETWEEN ((NOT (rt0.c1))) AND ((((rt0.c2))==((x''))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ())) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)*(rt0.c2))) BETWEEN ((NOT (rt0.c1))) AND ((((rt0.c2))=((x''))))) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ())) IS TRUE)) ORDER BY ((((rt0.c2)*(rt0.c2))) BETWEEN ((NOT (rt0.c1))) AND ((((rt0.c2))==((x''))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ())) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)*(rt0.c2))) BETWEEN ((NOT (rt0.c1))) AND ((((rt0.c2))=((x''))))) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ())) IS TRUE)) ORDER BY ((((rt0.c2)*(rt0.c2))) BETWEEN ((NOT (rt0.c1))) AND ((((rt0.c2))==((x''))))) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE ((+ ((('-1639814040')<>(t0.c0))))) ORDER BY (- (CAST(t0.c0 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((('-1639814040')<>(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (- (CAST(t0.c0 AS TEXT)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((+ ((('-1639814040')<>(t0.c0))))) ORDER BY (- (CAST(t0.c0 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((('-1639814040')<>(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (- (CAST(t0.c0 AS TEXT)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((+ ((('-1639814040')<>(t0.c0))))) ORDER BY (- (CAST(t0.c0 AS TEXT)))  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0 WHERE (LIKE(CAST(rt0.c0 AS BLOB), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), '7')) ORDER BY CAST(rt0.c1 COLLATE NOCASE AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKE(CAST(rt0.c0 AS BLOB), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), '7')) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(rt0.c1 COLLATE NOCASE AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE (LIKE(CAST(rt0.c0 AS BLOB), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), '7')) ORDER BY CAST(rt0.c1 COLLATE NOCASE AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKE(CAST(rt0.c0 AS BLOB), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), '7')) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(rt0.c1 COLLATE NOCASE AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE (LIKE(CAST(rt0.c0 AS BLOB), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), '7')) ORDER BY CAST(rt0.c1 COLLATE NOCASE AS BLOB)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ((vt1.c0)IS(vt1.c0))  WHEN (vt1.c0 IN ()) THEN (vt1.c0 IN ()) ELSE (+ (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)IS(vt1.c0))  WHEN (vt1.c0 IN ()) THEN (vt1.c0 IN ()) ELSE (+ (vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ((vt1.c0)IS(vt1.c0))  WHEN (vt1.c0 IN ()) THEN (vt1.c0 IN ()) ELSE (+ (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)IS(vt1.c0))  WHEN (vt1.c0 IN ()) THEN (vt1.c0 IN ()) ELSE (+ (vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ((vt1.c0)IS(vt1.c0))  WHEN (vt1.c0 IN ()) THEN (vt1.c0 IN ()) ELSE (+ (vt1.c0)) END);
SELECT ALL * FROM vt1, v0 LEFT OUTER JOIN t0 ON '-1590389030' LEFT OUTER JOIN rt0 ON (((t0.c0 IN ())) NOT BETWEEN (1.939700687E9) AND (CAST('?p''qHT{' AS INTEGER))) WHERE (((((vt1.c0) NOT BETWEEN (rt0.c0) AND (t0.c0))) NOTNULL)) ORDER BY (((t0.c0))!=((t0.c0))) COLLATE NOCASE COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (rt0.c0) AND (t0.c0))) NOTNULL)) IS TRUE)  as count FROM vt1 NOT INDEXED, v0 LEFT OUTER JOIN t0 ON '-1590389030' LEFT OUTER JOIN rt0 ON (((t0.c0 IN ())) NOT BETWEEN (1.939700687E9) AND (CAST('?p''qHT{' AS INTEGER))) ORDER BY (((t0.c0))<>((t0.c0))) COLLATE NOCASE COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM vt1, v0 LEFT OUTER JOIN t0 ON '-1590389030' LEFT OUTER JOIN rt0 ON (((t0.c0 IN ())) NOT BETWEEN (1.939700687E9) AND (CAST('?p''qHT{' AS INTEGER))) WHERE (((((vt1.c0) NOT BETWEEN (rt0.c0) AND (t0.c0))) NOTNULL)) ORDER BY (((t0.c0))!=((t0.c0))) COLLATE NOCASE COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (rt0.c0) AND (t0.c0))) NOTNULL)) IS TRUE)  as count FROM vt1 NOT INDEXED, v0 LEFT OUTER JOIN t0 ON '-1590389030' LEFT OUTER JOIN rt0 ON (((t0.c0 IN ())) NOT BETWEEN (1.939700687E9) AND (CAST('?p''qHT{' AS INTEGER))) ORDER BY (((t0.c0))<>((t0.c0))) COLLATE NOCASE COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM vt1, v0 LEFT OUTER JOIN t0 ON '-1590389030' LEFT OUTER JOIN rt0 ON (((t0.c0 IN ())) NOT BETWEEN (1.939700687E9) AND (CAST('?p''qHT{' AS INTEGER))) WHERE (((((vt1.c0) NOT BETWEEN (rt0.c0) AND (t0.c0))) NOTNULL)) ORDER BY (((t0.c0))!=((t0.c0))) COLLATE NOCASE COLLATE RTRIM  NULLS FIRST;
SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON CAST(((v0.c0)>>(vt1.c0)) AS BLOB) INNER JOIN v0 ON ((((t0.c0)AND('1292724337')))OR(vt1.c0)) COLLATE BINARY WHERE (CAST(((((vt1.c0)OR(t0.c0)))AND(vt1.c0)) AS TEXT)) ORDER BY ((((((((((v0.c0) BETWEEN (t0.c0) AND (vt1.c0)))AND(vt1.c0)))AND(((t0.c0) IS TRUE))))OR(CAST(t0.c0 AS NUMERIC))))AND(x'')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.c0)OR(t0.c0)))AND(vt1.c0)) AS TEXT)) IS TRUE)  as count FROM t0 NOT INDEXED RIGHT OUTER JOIN vt1 ON CAST(((v0.c0)>>(vt1.c0)) AS BLOB) INNER JOIN v0 ON ((((t0.c0)AND('1292724337')))OR(vt1.c0)) COLLATE BINARY ORDER BY ((((((((((v0.c0) BETWEEN (t0.c0) AND (vt1.c0)))AND(vt1.c0)))AND(((t0.c0) IS TRUE))))OR(CAST(t0.c0 AS NUMERIC))))AND(x'')) ASC  NULLS LAST);
SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON CAST(((v0.c0)>>(vt1.c0)) AS BLOB) INNER JOIN v0 ON ((((t0.c0)AND('1292724337')))OR(vt1.c0)) COLLATE BINARY WHERE (CAST(((((vt1.c0)OR(t0.c0)))AND(vt1.c0)) AS TEXT)) ORDER BY ((((((((((v0.c0) BETWEEN (t0.c0) AND (vt1.c0)))AND(vt1.c0)))AND(((t0.c0) IS TRUE))))OR(CAST(t0.c0 AS NUMERIC))))AND(x'')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.c0)OR(t0.c0)))AND(vt1.c0)) AS TEXT)) IS TRUE)  as count FROM t0 NOT INDEXED RIGHT OUTER JOIN vt1 ON CAST(((v0.c0)>>(vt1.c0)) AS BLOB) INNER JOIN v0 ON ((((t0.c0)AND('1292724337')))OR(vt1.c0)) COLLATE BINARY ORDER BY ((((((((((v0.c0) BETWEEN (t0.c0) AND (vt1.c0)))AND(vt1.c0)))AND(((t0.c0) IS TRUE))))OR(CAST(t0.c0 AS NUMERIC))))AND(x'')) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CASE (NOT (v0.c0))  WHEN ((v0.c0)||(v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END ELSE ((((v0.c0)OR(v0.c0)))AND(v0.c0)) END) ORDER BY (((NOT (NULL)))||(((v0.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE (NOT (v0.c0))  WHEN ((v0.c0)||(v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END ELSE ((((v0.c0)OR(v0.c0)))AND(v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY (((NOT (NULL)))||(((v0.c0) IS TRUE))) DESC);
SELECT COUNT(*) FROM v0 WHERE (CASE (NOT (v0.c0))  WHEN ((v0.c0)||(v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END ELSE ((((v0.c0)OR(v0.c0)))AND(v0.c0)) END) ORDER BY (((NOT (NULL)))||(((v0.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE (NOT (v0.c0))  WHEN ((v0.c0)||(v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END ELSE ((((v0.c0)OR(v0.c0)))AND(v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY (((NOT (NULL)))||(((v0.c0) IS TRUE))) DESC);
SELECT COUNT(*) FROM v0 WHERE (CASE (NOT (v0.c0))  WHEN ((v0.c0)||(v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END ELSE ((((v0.c0)OR(v0.c0)))AND(v0.c0)) END) ORDER BY (((NOT (NULL)))||(((v0.c0) IS TRUE))) DESC;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0) IS FALSE), CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END, UPPER(DISTINCT rt0.c1)))>=((((rt0.c0)>=(rt0.c0)), ((rt0.c1) NOTNULL), CAST(rt0.c2 AS NUMERIC))))) ORDER BY (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) COLLATE BINARY COLLATE NOCASE, ((((rt0.c1)) BETWEEN ((rt0.c1)) AND (('0.4945520278750405'))) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0) IS FALSE), CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END, UPPER(DISTINCT rt0.c1)))>=((((rt0.c0)>=(rt0.c0)), ((rt0.c1) NOTNULL), CAST(rt0.c2 AS NUMERIC))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) COLLATE BINARY COLLATE NOCASE, ((((rt0.c1)) BETWEEN ((rt0.c1)) AND (('0.4945520278750405'))) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0) IS FALSE), CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END, UPPER(DISTINCT rt0.c1)))>=((((rt0.c0)>=(rt0.c0)), ((rt0.c1) NOTNULL), CAST(rt0.c2 AS NUMERIC))))) ORDER BY (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) COLLATE BINARY COLLATE NOCASE, ((((rt0.c1)) BETWEEN ((rt0.c1)) AND (('0.4945520278750405'))) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0) IS FALSE), CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END, UPPER(DISTINCT rt0.c1)))>=((((rt0.c0)>=(rt0.c0)), ((rt0.c1) NOTNULL), CAST(rt0.c2 AS NUMERIC))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) COLLATE BINARY COLLATE NOCASE, ((((rt0.c1)) BETWEEN ((rt0.c1)) AND (('0.4945520278750405'))) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0) IS FALSE), CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END, UPPER(DISTINCT rt0.c1)))>=((((rt0.c0)>=(rt0.c0)), ((rt0.c1) NOTNULL), CAST(rt0.c2 AS NUMERIC))))) ORDER BY (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) COLLATE BINARY COLLATE NOCASE, ((((rt0.c1)) BETWEEN ((rt0.c1)) AND (('0.4945520278750405'))) IN ()) DESC  NULLS FIRST;
SELECT * FROM vt1, rt0 WHERE ((((((rt0.c1)OR(vt1.c0)))OR(rt0.c0)) IN ())) ORDER BY ((((rt0.c2)*(vt1.c0)))>>(0.7321315090092636)), (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((0.08890022000371034)))) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)OR(vt1.c0)))OR(rt0.c0)) IN ())) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c2)*(vt1.c0)))>>(0.7321315090092636)), (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((0.08890022000371034)))) ISNULL) ASC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE ((((((rt0.c1)OR(vt1.c0)))OR(rt0.c0)) IN ())) ORDER BY ((((rt0.c2)*(vt1.c0)))>>(0.7321315090092636)), (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((0.08890022000371034)))) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)OR(vt1.c0)))OR(rt0.c0)) IN ())) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c2)*(vt1.c0)))>>(0.7321315090092636)), (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((0.08890022000371034)))) ISNULL) ASC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE ((((((rt0.c1)OR(vt1.c0)))OR(rt0.c0)) IN ())) ORDER BY ((((rt0.c2)*(vt1.c0)))>>(0.7321315090092636)), (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((0.08890022000371034)))) ISNULL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE ((((rt0.c1, rt0.c2, 'Ekf( ', rt0.c1, rt0.c0)) NOT BETWEEN ((((rt0.c2)<=(rt0.c0)), ((rt0.c1) IS FALSE), ((t0.c0)OR(rt0.c1)), (vt1.c0 IN ()), CAST(NULL AS NUMERIC))) AND ((vt1.c0 COLLATE RTRIM, ((rt0.c2)AND(rt0.c1)), LIKELIHOOD(rt0.c1, 0.7575319990451499), (+ (rt0.c1)), rt0.c1)))) ORDER BY (((+ (rt0.c0))) IS TRUE)  NULLS LAST, t0.c0  NULLS FIRST, vt1.c0;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c2, 'Ekf( ', rt0.c1, rt0.c0)) NOT BETWEEN ((((rt0.c2)<=(rt0.c0)), ((rt0.c1) IS FALSE), ((t0.c0)OR(rt0.c1)), (vt1.c0 IN ()), CAST(NULL AS NUMERIC))) AND ((vt1.c0 COLLATE RTRIM, ((rt0.c2)AND(rt0.c1)), LIKELIHOOD(rt0.c1, 0.7575319990451499), (+ (rt0.c1)), rt0.c1)))) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY (((+ (rt0.c0))) IS TRUE)  NULLS LAST, t0.c0  NULLS FIRST, vt1.c0);
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE ((((rt0.c1, rt0.c2, 'Ekf( ', rt0.c1, rt0.c0)) NOT BETWEEN ((((rt0.c2)<=(rt0.c0)), ((rt0.c1) IS FALSE), ((t0.c0)OR(rt0.c1)), (vt1.c0 IN ()), CAST(NULL AS NUMERIC))) AND ((vt1.c0 COLLATE RTRIM, ((rt0.c2)AND(rt0.c1)), LIKELIHOOD(rt0.c1, 0.7575319990451499), (+ (rt0.c1)), rt0.c1)))) ORDER BY (((+ (rt0.c0))) IS TRUE)  NULLS LAST, t0.c0  NULLS FIRST, vt1.c0;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c2, 'Ekf( ', rt0.c1, rt0.c0)) NOT BETWEEN ((((rt0.c2)<=(rt0.c0)), ((rt0.c1) IS FALSE), ((t0.c0)OR(rt0.c1)), (vt1.c0 IN ()), CAST(NULL AS NUMERIC))) AND ((vt1.c0 COLLATE RTRIM, ((rt0.c2)AND(rt0.c1)), LIKELIHOOD(rt0.c1, 0.7575319990451499), (+ (rt0.c1)), rt0.c1)))) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY (((+ (rt0.c0))) IS TRUE)  NULLS LAST, t0.c0  NULLS FIRST, vt1.c0);
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE ((((rt0.c1, rt0.c2, 'Ekf( ', rt0.c1, rt0.c0)) NOT BETWEEN ((((rt0.c2)<=(rt0.c0)), ((rt0.c1) IS FALSE), ((t0.c0)OR(rt0.c1)), (vt1.c0 IN ()), CAST(NULL AS NUMERIC))) AND ((vt1.c0 COLLATE RTRIM, ((rt0.c2)AND(rt0.c1)), LIKELIHOOD(rt0.c1, 0.7575319990451499), (+ (rt0.c1)), rt0.c1)))) ORDER BY (((+ (rt0.c0))) IS TRUE)  NULLS LAST, t0.c0  NULLS FIRST, vt1.c0;
SELECT ALL COUNT(*) FROM rt0, vt1, t0, v0 WHERE ((((CAST(v0.c0 AS BLOB), CAST(rt0.c2 AS NUMERIC), CASE WHEN vt1.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END, (- (rt0.c1)), HEX(rt0.c1)))<=((vt1.c0 COLLATE BINARY, v0.c0 COLLATE RTRIM, ((rt0.c1)||(rt0.c1)), TRIM(v0.c0, v0.c0), ((rt0.c0) IS TRUE))))) ORDER BY CAST((((t0.c0))<>((rt0.c1))) AS BLOB), (((NOT (rt0.c0)))/((NULL IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(v0.c0 AS BLOB), CAST(rt0.c2 AS NUMERIC), CASE WHEN vt1.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END, (- (rt0.c1)), HEX(rt0.c1)))<=((vt1.c0 COLLATE BINARY, v0.c0 COLLATE RTRIM, ((rt0.c1)||(rt0.c1)), TRIM(v0.c0, v0.c0), ((rt0.c0) IS TRUE))))) IS TRUE)  as count FROM rt0, vt1, t0, v0 ORDER BY CAST((((t0.c0))!=((rt0.c1))) AS BLOB), (((NOT (rt0.c0)))/((NULL IN ()))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt1, t0, v0 WHERE ((((CAST(v0.c0 AS BLOB), CAST(rt0.c2 AS NUMERIC), CASE WHEN vt1.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END, (- (rt0.c1)), HEX(rt0.c1)))<=((vt1.c0 COLLATE BINARY, v0.c0 COLLATE RTRIM, ((rt0.c1)||(rt0.c1)), TRIM(v0.c0, v0.c0), ((rt0.c0) IS TRUE))))) ORDER BY CAST((((t0.c0))<>((rt0.c1))) AS BLOB), (((NOT (rt0.c0)))/((NULL IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(v0.c0 AS BLOB), CAST(rt0.c2 AS NUMERIC), CASE WHEN vt1.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END, (- (rt0.c1)), HEX(rt0.c1)))<=((vt1.c0 COLLATE BINARY, v0.c0 COLLATE RTRIM, ((rt0.c1)||(rt0.c1)), TRIM(v0.c0, v0.c0), ((rt0.c0) IS TRUE))))) IS TRUE)  as count FROM rt0, vt1, t0, v0 ORDER BY CAST((((t0.c0))!=((rt0.c1))) AS BLOB), (((NOT (rt0.c0)))/((NULL IN ()))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt1, t0, v0 WHERE ((((CAST(v0.c0 AS BLOB), CAST(rt0.c2 AS NUMERIC), CASE WHEN vt1.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END, (- (rt0.c1)), HEX(rt0.c1)))<=((vt1.c0 COLLATE BINARY, v0.c0 COLLATE RTRIM, ((rt0.c1)||(rt0.c1)), TRIM(v0.c0, v0.c0), ((rt0.c0) IS TRUE))))) ORDER BY CAST((((t0.c0))<>((rt0.c1))) AS BLOB), (((NOT (rt0.c0)))/((NULL IN ()))) ASC;
SELECT COUNT(*) FROM t0, v0 WHERE (((((((((CASE '-1864699470'  WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 WHEN v0.c0 THEN '-312366572' END)AND(((v0.c0)*(v0.c0)))))OR(t0.c0 COLLATE NOCASE)))OR(CASE WHEN v0.c0 THEN v0.c0 END)))AND(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(NULL))))) ORDER BY CASE WHEN ((((t0.c0)OR(v0.c0)))OR(t0.c0)) THEN (((x'0f36', v0.c0, t0.c0))<((v0.c0, v0.c0, t0.c0))) WHEN (t0.c0 IN (t0.c0, v0.c0)) THEN v0.c0 WHEN x'c4fb' THEN CASE WHEN v0.c0 THEN t0.c0 END WHEN ((v0.c0)>>(v0.c0)) THEN CAST(t0.c0 AS TEXT) WHEN (((t0.c0))<(('-2031756829'))) THEN (v0.c0 IN ()) ELSE t0.c0 END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE '-1864699470'  WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 WHEN v0.c0 THEN '-312366572' END)AND(((v0.c0)*(v0.c0)))))OR(t0.c0 COLLATE NOCASE)))OR(CASE WHEN v0.c0 THEN v0.c0 END)))AND(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(NULL))))) IS TRUE)  as count FROM t0, v0 ORDER BY CASE WHEN ((((t0.c0)OR(v0.c0)))OR(t0.c0)) THEN (((x'0f36', v0.c0, t0.c0))<((v0.c0, v0.c0, t0.c0))) WHEN (t0.c0 IN (t0.c0, v0.c0)) THEN v0.c0 WHEN x'c4fb' THEN CASE WHEN v0.c0 THEN t0.c0 END WHEN ((v0.c0)>>(v0.c0)) THEN CAST(t0.c0 AS TEXT) WHEN (((t0.c0))<(('-2031756829'))) THEN (v0.c0 IN ()) ELSE t0.c0 END ASC);
SELECT COUNT(*) FROM t0, v0 WHERE (((((((((CASE '-1864699470'  WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 WHEN v0.c0 THEN '-312366572' END)AND(((v0.c0)*(v0.c0)))))OR(t0.c0 COLLATE NOCASE)))OR(CASE WHEN v0.c0 THEN v0.c0 END)))AND(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(NULL))))) ORDER BY CASE WHEN ((((t0.c0)OR(v0.c0)))OR(t0.c0)) THEN (((x'0f36', v0.c0, t0.c0))<((v0.c0, v0.c0, t0.c0))) WHEN (t0.c0 IN (t0.c0, v0.c0)) THEN v0.c0 WHEN x'c4fb' THEN CASE WHEN v0.c0 THEN t0.c0 END WHEN ((v0.c0)>>(v0.c0)) THEN CAST(t0.c0 AS TEXT) WHEN (((t0.c0))<(('-2031756829'))) THEN (v0.c0 IN ()) ELSE t0.c0 END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE '-1864699470'  WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 WHEN v0.c0 THEN '-312366572' END)AND(((v0.c0)*(v0.c0)))))OR(t0.c0 COLLATE NOCASE)))OR(CASE WHEN v0.c0 THEN v0.c0 END)))AND(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(NULL))))) IS TRUE)  as count FROM t0, v0 ORDER BY CASE WHEN ((((t0.c0)OR(v0.c0)))OR(t0.c0)) THEN (((x'0f36', v0.c0, t0.c0))<((v0.c0, v0.c0, t0.c0))) WHEN (t0.c0 IN (t0.c0, v0.c0)) THEN v0.c0 WHEN x'c4fb' THEN CASE WHEN v0.c0 THEN t0.c0 END WHEN ((v0.c0)>>(v0.c0)) THEN CAST(t0.c0 AS TEXT) WHEN (((t0.c0))<(('-2031756829'))) THEN (v0.c0 IN ()) ELSE t0.c0 END ASC);
SELECT COUNT(*) FROM t0, v0 WHERE (((((((((CASE '-1864699470'  WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 WHEN v0.c0 THEN '-312366572' END)AND(((v0.c0)*(v0.c0)))))OR(t0.c0 COLLATE NOCASE)))OR(CASE WHEN v0.c0 THEN v0.c0 END)))AND(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(NULL))))) ORDER BY CASE WHEN ((((t0.c0)OR(v0.c0)))OR(t0.c0)) THEN (((x'0f36', v0.c0, t0.c0))<((v0.c0, v0.c0, t0.c0))) WHEN (t0.c0 IN (t0.c0, v0.c0)) THEN v0.c0 WHEN x'c4fb' THEN CASE WHEN v0.c0 THEN t0.c0 END WHEN ((v0.c0)>>(v0.c0)) THEN CAST(t0.c0 AS TEXT) WHEN (((t0.c0))<(('-2031756829'))) THEN (v0.c0 IN ()) ELSE t0.c0 END ASC;
SELECT ALL * FROM vt1, rt0 WHERE (((((((vt1.c0)AND(rt0.c0)))OR(rt0.c0)))IS NOT((rt0.c1 IN ())))) ORDER BY (NOT (rt0.c0)) ASC  NULLS FIRST, (((CASE WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END, 'yn8', ((((vt1.c0)OR(vt1.c0)))AND(rt0.c1))))<=((((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)), ((rt0.c1) IS TRUE), ((rt0.c1)<<(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(rt0.c0)))OR(rt0.c0)))IS NOT((rt0.c1 IN ())))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (NOT (rt0.c0)) ASC  NULLS FIRST, (((CASE WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END, 'yn8', ((((vt1.c0)OR(vt1.c0)))AND(rt0.c1))))<=((((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)), ((rt0.c1) IS TRUE), ((rt0.c1)<<(vt1.c0))))));
SELECT ALL * FROM vt1, rt0 WHERE (((((((vt1.c0)AND(rt0.c0)))OR(rt0.c0)))IS NOT((rt0.c1 IN ())))) ORDER BY (NOT (rt0.c0)) ASC  NULLS FIRST, (((CASE WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END, 'yn8', ((((vt1.c0)OR(vt1.c0)))AND(rt0.c1))))<=((((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)), ((rt0.c1) IS TRUE), ((rt0.c1)<<(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(rt0.c0)))OR(rt0.c0)))IS NOT((rt0.c1 IN ())))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (NOT (rt0.c0)) ASC  NULLS FIRST, (((CASE WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END, 'yn8', ((((vt1.c0)OR(vt1.c0)))AND(rt0.c1))))<=((((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)), ((rt0.c1) IS TRUE), ((rt0.c1)<<(vt1.c0))))));
SELECT ALL * FROM vt1, rt0 WHERE (((((((vt1.c0)AND(rt0.c0)))OR(rt0.c0)))IS NOT((rt0.c1 IN ())))) ORDER BY (NOT (rt0.c0)) ASC  NULLS FIRST, (((CASE WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END, 'yn8', ((((vt1.c0)OR(vt1.c0)))AND(rt0.c1))))<=((((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)), ((rt0.c1) IS TRUE), ((rt0.c1)<<(vt1.c0)))));
SELECT COUNT(*) FROM rt0, t0, v0 FULL OUTER JOIN vt1 ON CASE ((rt0.c0) NOTNULL)  WHEN CAST(rt0.c0 AS REAL) THEN (~ (t0.c0)) WHEN ((((vt1.c0)OR(rt0.c2)))AND(rt0.c0)) THEN CASE WHEN rt0.c0 THEN v0.c0 ELSE vt1.c0 END WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN '' WHEN v0.c0 THEN vt1.c0 ELSE rt0.c0 END THEN ((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c1)) ELSE rt0.c1 COLLATE NOCASE END WHERE (v0.c0) ORDER BY ((((CAST(rt0.c0 AS REAL))OR(((t0.c0) IS FALSE))))OR((t0.c0 IN ()))) DESC  NULLS LAST, (((t0.c0)) NOT BETWEEN ((((vt1.c0) ISNULL))) AND ((HEX(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0, t0, v0 FULL OUTER JOIN vt1 ON CASE ((rt0.c0) NOTNULL)  WHEN CAST(rt0.c0 AS REAL) THEN (~ (t0.c0)) WHEN ((((vt1.c0)OR(rt0.c2)))AND(rt0.c0)) THEN CASE WHEN rt0.c0 THEN v0.c0 ELSE vt1.c0 END WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN '' WHEN v0.c0 THEN vt1.c0 ELSE rt0.c0 END THEN ((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c1)) ELSE rt0.c1 COLLATE NOCASE END ORDER BY ((((CAST(rt0.c0 AS REAL))OR(((t0.c0) IS FALSE))))OR((t0.c0 IN ()))) DESC  NULLS LAST, (((t0.c0)) NOT BETWEEN ((((vt1.c0) ISNULL))) AND ((HEX(v0.c0)))) DESC);
SELECT COUNT(*) FROM rt0, t0, v0 FULL OUTER JOIN vt1 ON CASE ((rt0.c0) NOTNULL)  WHEN CAST(rt0.c0 AS REAL) THEN (~ (t0.c0)) WHEN ((((vt1.c0)OR(rt0.c2)))AND(rt0.c0)) THEN CASE WHEN rt0.c0 THEN v0.c0 ELSE vt1.c0 END WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN '' WHEN v0.c0 THEN vt1.c0 ELSE rt0.c0 END THEN ((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c1)) ELSE rt0.c1 COLLATE NOCASE END WHERE (v0.c0) ORDER BY ((((CAST(rt0.c0 AS REAL))OR(((t0.c0) IS FALSE))))OR((t0.c0 IN ()))) DESC  NULLS LAST, (((t0.c0)) NOT BETWEEN ((((vt1.c0) ISNULL))) AND ((HEX(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0, t0, v0 FULL OUTER JOIN vt1 ON CASE ((rt0.c0) NOTNULL)  WHEN CAST(rt0.c0 AS REAL) THEN (~ (t0.c0)) WHEN ((((vt1.c0)OR(rt0.c2)))AND(rt0.c0)) THEN CASE WHEN rt0.c0 THEN v0.c0 ELSE vt1.c0 END WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN '' WHEN v0.c0 THEN vt1.c0 ELSE rt0.c0 END THEN ((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c1)) ELSE rt0.c1 COLLATE NOCASE END ORDER BY ((((CAST(rt0.c0 AS REAL))OR(((t0.c0) IS FALSE))))OR((t0.c0 IN ()))) DESC  NULLS LAST, (((t0.c0)) NOT BETWEEN ((((vt1.c0) ISNULL))) AND ((HEX(v0.c0)))) DESC);
SELECT COUNT(*) FROM rt0, t0, v0 FULL OUTER JOIN vt1 ON CASE ((rt0.c0) NOTNULL)  WHEN CAST(rt0.c0 AS REAL) THEN (~ (t0.c0)) WHEN ((((vt1.c0)OR(rt0.c2)))AND(rt0.c0)) THEN CASE WHEN rt0.c0 THEN v0.c0 ELSE vt1.c0 END WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN '' WHEN v0.c0 THEN vt1.c0 ELSE rt0.c0 END THEN ((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c1)) ELSE rt0.c1 COLLATE NOCASE END WHERE (v0.c0) ORDER BY ((((CAST(rt0.c0 AS REAL))OR(((t0.c0) IS FALSE))))OR((t0.c0 IN ()))) DESC  NULLS LAST, (((t0.c0)) NOT BETWEEN ((((vt1.c0) ISNULL))) AND ((HEX(v0.c0)))) DESC;
SELECT * FROM t0, vt1, rt0, v0 WHERE ((((vt1.c0 IN ())) BETWEEN (((vt1.c0)IS(NULL))) AND (QUOTE(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) BETWEEN (((vt1.c0)IS(NULL))) AND (QUOTE(rt0.c2)))) IS TRUE)  as count FROM t0, vt1, rt0, v0);
SELECT * FROM t0, vt1, rt0, v0 WHERE ((((vt1.c0 IN ())) BETWEEN (((vt1.c0)IS(NULL))) AND (QUOTE(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) BETWEEN (((vt1.c0)IS(NULL))) AND (QUOTE(rt0.c2)))) IS TRUE)  as count FROM t0, vt1, rt0, v0);
SELECT * FROM t0, vt1, rt0, v0 WHERE ((((vt1.c0 IN ())) BETWEEN (((vt1.c0)IS(NULL))) AND (QUOTE(rt0.c2))));
SELECT COUNT(*) FROM t0, rt0, v0, vt1 WHERE ((((rt0.c1, rt0.c1, rt0.c2)) BETWEEN (((~ (t0.c0)), CASE v0.c0  WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c1 END, HEX(vt1.c0))) AND (((~ (rt0.c1)), ((rt0.c1)AND(t0.c0)), rt0.c2 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c1, rt0.c2)) BETWEEN (((~ (t0.c0)), CASE v0.c0  WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c1 END, HEX(vt1.c0))) AND (((~ (rt0.c1)), ((rt0.c1)AND(t0.c0)), rt0.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM t0, rt0, v0, vt1);
SELECT COUNT(*) FROM t0, rt0, v0, vt1 WHERE ((((rt0.c1, rt0.c1, rt0.c2)) BETWEEN (((~ (t0.c0)), CASE v0.c0  WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c1 END, HEX(vt1.c0))) AND (((~ (rt0.c1)), ((rt0.c1)AND(t0.c0)), rt0.c2 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c1, rt0.c2)) BETWEEN (((~ (t0.c0)), CASE v0.c0  WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c1 END, HEX(vt1.c0))) AND (((~ (rt0.c1)), ((rt0.c1)AND(t0.c0)), rt0.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM t0, rt0, v0, vt1);
SELECT COUNT(*) FROM t0, rt0, v0, vt1 WHERE ((((rt0.c1, rt0.c1, rt0.c2)) BETWEEN (((~ (t0.c0)), CASE v0.c0  WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c1 END, HEX(vt1.c0))) AND (((~ (rt0.c1)), ((rt0.c1)AND(t0.c0)), rt0.c2 COLLATE RTRIM))));
SELECT * FROM rt0, v0, t0, vt1 WHERE ((CASE WHEN rt0.c1 THEN v0.c0 WHEN v0.c0 THEN t0.c0 WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c1 END IN (CASE vt1.c0  WHEN v0.c0 THEN rt0.c0 END))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c1 THEN v0.c0 WHEN v0.c0 THEN t0.c0 WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c1 END IN (CASE vt1.c0  WHEN v0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0, v0, t0, vt1 ORDER BY NULL ASC);
SELECT * FROM rt0, v0, t0, vt1 WHERE ((CASE WHEN rt0.c1 THEN v0.c0 WHEN v0.c0 THEN t0.c0 WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c1 END IN (CASE vt1.c0  WHEN v0.c0 THEN rt0.c0 END))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c1 THEN v0.c0 WHEN v0.c0 THEN t0.c0 WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c1 END IN (CASE vt1.c0  WHEN v0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0, v0, t0, vt1 ORDER BY NULL ASC);
SELECT * FROM rt0, v0, t0, vt1 WHERE ((CASE WHEN rt0.c1 THEN v0.c0 WHEN v0.c0 THEN t0.c0 WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c1 END IN (CASE vt1.c0  WHEN v0.c0 THEN rt0.c0 END))) ORDER BY NULL ASC;
SELECT COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END ELSE 0X2d73ca0a END) ORDER BY COALESCE(DISTINCT CAST(vt1.c0 AS NUMERIC), ((NULL)/(vt1.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0  WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END ELSE 0X2d73ca0a END) IS TRUE)  as count FROM vt1 ORDER BY COALESCE(DISTINCT CAST(vt1.c0 AS NUMERIC), ((NULL)/(vt1.c0))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END ELSE 0X2d73ca0a END) ORDER BY COALESCE(DISTINCT CAST(vt1.c0 AS NUMERIC), ((NULL)/(vt1.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0  WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END ELSE 0X2d73ca0a END) IS TRUE)  as count FROM vt1 ORDER BY COALESCE(DISTINCT CAST(vt1.c0 AS NUMERIC), ((NULL)/(vt1.c0))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END ELSE 0X2d73ca0a END) ORDER BY COALESCE(DISTINCT CAST(vt1.c0 AS NUMERIC), ((NULL)/(vt1.c0))) ASC  NULLS LAST;
SELECT * FROM t0, vt1 WHERE ((((vt1.c0, x'', t0.c0)) NOT BETWEEN ((t0.c0, (((t0.c0, t0.c0, t0.c0))=((vt1.c0, t0.c0, t0.c0))), (vt1.c0 IN ()))) AND ((((((((((t0.c0)AND(t0.c0)))AND('74042015')))AND(vt1.c0)))OR(t0.c0)), (((t0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0))), highlight(t0.c0, t0.c0, t0.c0, t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, x'', t0.c0)) NOT BETWEEN ((t0.c0, (((t0.c0, t0.c0, t0.c0))=((vt1.c0, t0.c0, t0.c0))), (vt1.c0 IN ()))) AND ((((((((((t0.c0)AND(t0.c0)))AND('74042015')))AND(vt1.c0)))OR(t0.c0)), (((t0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0))), highlight(t0.c0, t0.c0, t0.c0, t0.c0))))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE ((((vt1.c0, x'', t0.c0)) NOT BETWEEN ((t0.c0, (((t0.c0, t0.c0, t0.c0))=((vt1.c0, t0.c0, t0.c0))), (vt1.c0 IN ()))) AND ((((((((((t0.c0)AND(t0.c0)))AND('74042015')))AND(vt1.c0)))OR(t0.c0)), (((t0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0))), highlight(t0.c0, t0.c0, t0.c0, t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, x'', t0.c0)) NOT BETWEEN ((t0.c0, (((t0.c0, t0.c0, t0.c0))=((vt1.c0, t0.c0, t0.c0))), (vt1.c0 IN ()))) AND ((((((((((t0.c0)AND(t0.c0)))AND('74042015')))AND(vt1.c0)))OR(t0.c0)), (((t0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0))), highlight(t0.c0, t0.c0, t0.c0, t0.c0))))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE ((((vt1.c0, x'', t0.c0)) NOT BETWEEN ((t0.c0, (((t0.c0, t0.c0, t0.c0))=((vt1.c0, t0.c0, t0.c0))), (vt1.c0 IN ()))) AND ((((((((((t0.c0)AND(t0.c0)))AND('74042015')))AND(vt1.c0)))OR(t0.c0)), (((t0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0))), highlight(t0.c0, t0.c0, t0.c0, t0.c0)))));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON ((LOWER(DISTINCT t0.c0))IS(CAST(t0.c0 AS TEXT))) WHERE (CAST(((v0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) ORDER BY v0.c0 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON ((LOWER(DISTINCT t0.c0))IS(CAST(t0.c0 AS TEXT))) ORDER BY v0.c0 COLLATE NOCASE);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON ((LOWER(DISTINCT t0.c0))IS(CAST(t0.c0 AS TEXT))) WHERE (CAST(((v0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) ORDER BY v0.c0 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON ((LOWER(DISTINCT t0.c0))IS(CAST(t0.c0 AS TEXT))) ORDER BY v0.c0 COLLATE NOCASE);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON ((LOWER(DISTINCT t0.c0))IS(CAST(t0.c0 AS TEXT))) WHERE (CAST(((v0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) ORDER BY v0.c0 COLLATE NOCASE;
SELECT * FROM t0, rt0, vt1, v0 WHERE (CASE WHEN (- (rt0.c0)) THEN ((NULL) NOTNULL) ELSE (('-1327130205') BETWEEN (vt1.c0) AND (rt0.c2)) END) ORDER BY (NOT (x'9a36')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (rt0.c0)) THEN ((NULL) NOTNULL) ELSE (('-1327130205') BETWEEN (vt1.c0) AND (rt0.c2)) END) IS TRUE)  as count FROM t0, rt0, vt1, v0 ORDER BY (NOT (x'9a36')) ASC);
SELECT * FROM t0, rt0, vt1, v0 WHERE (CASE WHEN (- (rt0.c0)) THEN ((NULL) NOTNULL) ELSE (('-1327130205') BETWEEN (vt1.c0) AND (rt0.c2)) END) ORDER BY (NOT (x'9a36')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (rt0.c0)) THEN ((NULL) NOTNULL) ELSE (('-1327130205') BETWEEN (vt1.c0) AND (rt0.c2)) END) IS TRUE)  as count FROM t0, rt0, vt1, v0 ORDER BY (NOT (x'9a36')) ASC);
SELECT * FROM t0, rt0, vt1, v0 WHERE (CASE WHEN (- (rt0.c0)) THEN ((NULL) NOTNULL) ELSE (('-1327130205') BETWEEN (vt1.c0) AND (rt0.c2)) END) ORDER BY (NOT (x'9a36')) ASC;
SELECT ALL COUNT(*) FROM vt1, t0, rt0, v0 WHERE (((rt0.c0 COLLATE NOCASE) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM vt1, t0, rt0, v0);
SELECT ALL COUNT(*) FROM vt1, t0, rt0, v0 WHERE (((rt0.c0 COLLATE NOCASE) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM vt1, t0, rt0, v0);
SELECT ALL COUNT(*) FROM vt1, t0, rt0, v0 WHERE (((rt0.c0 COLLATE NOCASE) IS TRUE));
SELECT * FROM v0, t0, vt1, rt0 WHERE (CASE (rt0.c0 IN ())  WHEN ((((rt0.c0)OR(v0.c0)))AND(v0.c0)) THEN (~ (rt0.c2)) ELSE ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c0 IN ())  WHEN ((((rt0.c0)OR(v0.c0)))AND(v0.c0)) THEN (~ (rt0.c2)) ELSE ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM v0, t0, vt1, rt0);
SELECT * FROM v0, t0, vt1, rt0 WHERE (CASE (rt0.c0 IN ())  WHEN ((((rt0.c0)OR(v0.c0)))AND(v0.c0)) THEN (~ (rt0.c2)) ELSE ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c0 IN ())  WHEN ((((rt0.c0)OR(v0.c0)))AND(v0.c0)) THEN (~ (rt0.c2)) ELSE ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM v0, t0, vt1, rt0);
SELECT * FROM v0, t0, vt1, rt0 WHERE (CASE (rt0.c0 IN ())  WHEN ((((rt0.c0)OR(v0.c0)))AND(v0.c0)) THEN (~ (rt0.c2)) ELSE ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END);
SELECT * FROM vt1, t0, v0, rt0 WHERE (((((('tx3_9' IN ()))OR((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c2))))))AND((+ (0.6891819338400759)))));
SELECT SUM(count) FROM (SELECT ALL ((((((('tx3_9' IN ()))OR((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c2))))))AND((+ (0.6891819338400759))))) IS TRUE)  as count FROM vt1, t0, v0, rt0);
SELECT * FROM vt1, t0, v0, rt0 WHERE (((((('tx3_9' IN ()))OR((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c2))))))AND((+ (0.6891819338400759)))));
SELECT SUM(count) FROM (SELECT ALL ((((((('tx3_9' IN ()))OR((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c2))))))AND((+ (0.6891819338400759))))) IS TRUE)  as count FROM vt1, t0, v0, rt0);
SELECT * FROM vt1, t0, v0, rt0 WHERE (((((('tx3_9' IN ()))OR((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c2))))))AND((+ (0.6891819338400759)))));
SELECT COUNT(*) FROM vt1 INNER JOIN v0 ON (((- (0.7481881408279681)))IS NOT(load_extension(t0.c0))) FULL OUTER JOIN t0 ON (~ (((t0.c0) NOTNULL))) WHERE ((((((+ (v0.c0)))AND(((vt1.c0) NOTNULL))))OR(v0.c0)));
SELECT SUM(count) FROM (SELECT (((((((+ (v0.c0)))AND(((vt1.c0) NOTNULL))))OR(v0.c0))) IS TRUE)  as count FROM vt1 INNER JOIN v0 ON (((- (0.7481881408279681)))IS NOT(load_extension(t0.c0))) FULL OUTER JOIN t0 ON (~ (((t0.c0) NOTNULL))));
SELECT COUNT(*) FROM vt1 INNER JOIN v0 ON (((- (0.7481881408279681)))IS NOT(load_extension(t0.c0))) FULL OUTER JOIN t0 ON (~ (((t0.c0) NOTNULL))) WHERE ((((((+ (v0.c0)))AND(((vt1.c0) NOTNULL))))OR(v0.c0)));
SELECT SUM(count) FROM (SELECT (((((((+ (v0.c0)))AND(((vt1.c0) NOTNULL))))OR(v0.c0))) IS TRUE)  as count FROM vt1 INNER JOIN v0 ON (((- (0.7481881408279681)))IS NOT(load_extension(t0.c0))) FULL OUTER JOIN t0 ON (~ (((t0.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM t0, v0, rt0, vt1 WHERE (((((((((CAST(rt0.c0 AS TEXT))OR(rt0.c1)))OR(CASE WHEN t0.c0 THEN t0.c0 ELSE rt0.c2 END)))OR((+ (x'')))))AND(((((rt0.c1)AND(vt1.c0)))OR(v0.c0))))) ORDER BY ((((((vt1.c0)OR(rt0.c0)))OR(v0.c0))) BETWEEN (((vt1.c0)OR(rt0.c0))) AND (CAST(462360013 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt0.c0 AS TEXT))OR(rt0.c1)))OR(CASE WHEN t0.c0 THEN t0.c0 ELSE rt0.c2 END)))OR((+ (x'')))))AND(((((rt0.c1)AND(vt1.c0)))OR(v0.c0))))) IS TRUE)  as count FROM t0, v0, rt0, vt1 ORDER BY ((((((vt1.c0)OR(rt0.c0)))OR(v0.c0))) BETWEEN (((vt1.c0)OR(rt0.c0))) AND (CAST(462360013 AS TEXT))));
SELECT ALL COUNT(*) FROM t0, v0, rt0, vt1 WHERE (((((((((CAST(rt0.c0 AS TEXT))OR(rt0.c1)))OR(CASE WHEN t0.c0 THEN t0.c0 ELSE rt0.c2 END)))OR((+ (x'')))))AND(((((rt0.c1)AND(vt1.c0)))OR(v0.c0))))) ORDER BY ((((((vt1.c0)OR(rt0.c0)))OR(v0.c0))) BETWEEN (((vt1.c0)OR(rt0.c0))) AND (CAST(462360013 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt0.c0 AS TEXT))OR(rt0.c1)))OR(CASE WHEN t0.c0 THEN t0.c0 ELSE rt0.c2 END)))OR((+ (x'')))))AND(((((rt0.c1)AND(vt1.c0)))OR(v0.c0))))) IS TRUE)  as count FROM t0, v0, rt0, vt1 ORDER BY ((((((vt1.c0)OR(rt0.c0)))OR(v0.c0))) BETWEEN (((vt1.c0)OR(rt0.c0))) AND (CAST(462360013 AS TEXT))));
SELECT ALL COUNT(*) FROM t0, v0, rt0, vt1 WHERE (((((((((CAST(rt0.c0 AS TEXT))OR(rt0.c1)))OR(CASE WHEN t0.c0 THEN t0.c0 ELSE rt0.c2 END)))OR((+ (x'')))))AND(((((rt0.c1)AND(vt1.c0)))OR(v0.c0))))) ORDER BY ((((((vt1.c0)OR(rt0.c0)))OR(v0.c0))) BETWEEN (((vt1.c0)OR(rt0.c0))) AND (CAST(462360013 AS TEXT)));
SELECT COUNT(*) FROM t0, rt0, vt1, v0 WHERE (((((((t0.c0)OR(vt1.c0)))AND(rt0.c0)))AND(((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)OR(vt1.c0)))AND(rt0.c0)))AND(((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c2))))) IS TRUE)  as count FROM t0, rt0, vt1, v0);
SELECT COUNT(*) FROM t0, rt0, vt1, v0 WHERE (((((((t0.c0)OR(vt1.c0)))AND(rt0.c0)))AND(((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)OR(vt1.c0)))AND(rt0.c0)))AND(((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c2))))) IS TRUE)  as count FROM t0, rt0, vt1, v0);
SELECT COUNT(*) FROM t0, rt0, vt1, v0 WHERE (((((((t0.c0)OR(vt1.c0)))AND(rt0.c0)))AND(((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c2)))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)IS(vt1.c0)))=(0.9879011142162554))) ORDER BY vt1.c0 DESC  NULLS LAST, 0.5029093854052276  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)IS(vt1.c0)))==(0.9879011142162554))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC  NULLS LAST, 0.5029093854052276  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)IS(vt1.c0)))=(0.9879011142162554))) ORDER BY vt1.c0 DESC  NULLS LAST, 0.5029093854052276  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)IS(vt1.c0)))==(0.9879011142162554))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC  NULLS LAST, 0.5029093854052276  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)IS(vt1.c0)))=(0.9879011142162554))) ORDER BY vt1.c0 DESC  NULLS LAST, 0.5029093854052276  NULLS LAST;
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN t0 ON (((rt0.c0 IN ()))%(CASE 0.40141431691544815  WHEN t0.c0 THEN t0.c0 END)) RIGHT OUTER JOIN rt0 ON ((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM WHERE (CASE ((rt0.c1)GLOB(t0.c0))  WHEN ((rt0.c2)<(vt1.c0)) THEN ((rt0.c2)|('-537434655')) WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt1.c0)) THEN ((rt0.c1)IS(vt1.c0)) WHEN vt1.c0 THEN rt0.c0 COLLATE NOCASE END) ORDER BY (+ (MIN(rt0.c0, t0.c0, vt1.c0, rt0.c1))), (((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN (((((vt1.c0, NULL, rt0.c1)) BETWEEN ((rt0.c2, rt0.c0, vt1.c0)) AND ((rt0.c0, t0.c0, rt0.c1))), ((rt0.c2)>=(rt0.c0)), rt0.c1 COLLATE BINARY)) AND ((((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)), ((vt1.c0) NOT NULL), 0.8141116769654624)));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1)GLOB(t0.c0))  WHEN ((rt0.c2)<(vt1.c0)) THEN ((rt0.c2)|('-537434655')) WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt1.c0)) THEN ((rt0.c1)IS(vt1.c0)) WHEN vt1.c0 THEN rt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON (((rt0.c0 IN ()))%(CASE 0.40141431691544815  WHEN t0.c0 THEN t0.c0 END)) RIGHT OUTER JOIN rt0 ON ((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM ORDER BY (+ (MIN(rt0.c0, t0.c0, vt1.c0, rt0.c1))), (((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN (((((vt1.c0, NULL, rt0.c1)) BETWEEN ((rt0.c2, rt0.c0, vt1.c0)) AND ((rt0.c0, t0.c0, rt0.c1))), ((rt0.c2)>=(rt0.c0)), rt0.c1 COLLATE BINARY)) AND ((((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)), ((vt1.c0) NOT NULL), 0.8141116769654624))));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN t0 ON (((rt0.c0 IN ()))%(CASE 0.40141431691544815  WHEN t0.c0 THEN t0.c0 END)) RIGHT OUTER JOIN rt0 ON ((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM WHERE (CASE ((rt0.c1)GLOB(t0.c0))  WHEN ((rt0.c2)<(vt1.c0)) THEN ((rt0.c2)|('-537434655')) WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt1.c0)) THEN ((rt0.c1)IS(vt1.c0)) WHEN vt1.c0 THEN rt0.c0 COLLATE NOCASE END) ORDER BY (+ (MIN(rt0.c0, t0.c0, vt1.c0, rt0.c1))), (((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN (((((vt1.c0, NULL, rt0.c1)) BETWEEN ((rt0.c2, rt0.c0, vt1.c0)) AND ((rt0.c0, t0.c0, rt0.c1))), ((rt0.c2)>=(rt0.c0)), rt0.c1 COLLATE BINARY)) AND ((((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)), ((vt1.c0) NOT NULL), 0.8141116769654624)));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1)GLOB(t0.c0))  WHEN ((rt0.c2)<(vt1.c0)) THEN ((rt0.c2)|('-537434655')) WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt1.c0)) THEN ((rt0.c1)IS(vt1.c0)) WHEN vt1.c0 THEN rt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON (((rt0.c0 IN ()))%(CASE 0.40141431691544815  WHEN t0.c0 THEN t0.c0 END)) RIGHT OUTER JOIN rt0 ON ((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM ORDER BY (+ (MIN(rt0.c0, t0.c0, vt1.c0, rt0.c1))), (((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN (((((vt1.c0, NULL, rt0.c1)) BETWEEN ((rt0.c2, rt0.c0, vt1.c0)) AND ((rt0.c0, t0.c0, rt0.c1))), ((rt0.c2)>=(rt0.c0)), rt0.c1 COLLATE BINARY)) AND ((((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)), ((vt1.c0) NOT NULL), 0.8141116769654624))));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN t0 ON (((rt0.c0 IN ()))%(CASE 0.40141431691544815  WHEN t0.c0 THEN t0.c0 END)) RIGHT OUTER JOIN rt0 ON ((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM WHERE (CASE ((rt0.c1)GLOB(t0.c0))  WHEN ((rt0.c2)<(vt1.c0)) THEN ((rt0.c2)|('-537434655')) WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt1.c0)) THEN ((rt0.c1)IS(vt1.c0)) WHEN vt1.c0 THEN rt0.c0 COLLATE NOCASE END) ORDER BY (+ (MIN(rt0.c0, t0.c0, vt1.c0, rt0.c1))), (((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN (((((vt1.c0, NULL, rt0.c1)) BETWEEN ((rt0.c2, rt0.c0, vt1.c0)) AND ((rt0.c0, t0.c0, rt0.c1))), ((rt0.c2)>=(rt0.c0)), rt0.c1 COLLATE BINARY)) AND ((((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)), ((vt1.c0) NOT NULL), 0.8141116769654624)));
SELECT COUNT(*) FROM t0, v0 RIGHT OUTER JOIN vt1 ON (vt1.c0 IN ()) COLLATE RTRIM INNER JOIN rt0 ON ((((rt0.c0)LIKE(v0.c0)))/(((v0.c0) ISNULL))) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t0, v0 RIGHT OUTER JOIN vt1 ON (vt1.c0 IN ()) COLLATE RTRIM INNER JOIN rt0 ON ((((rt0.c0)LIKE(v0.c0)))/(((v0.c0) ISNULL))));
SELECT COUNT(*) FROM t0, v0 RIGHT OUTER JOIN vt1 ON (vt1.c0 IN ()) COLLATE RTRIM INNER JOIN rt0 ON ((((rt0.c0)LIKE(v0.c0)))/(((v0.c0) ISNULL))) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t0, v0 RIGHT OUTER JOIN vt1 ON (vt1.c0 IN ()) COLLATE RTRIM INNER JOIN rt0 ON ((((rt0.c0)LIKE(v0.c0)))/(((v0.c0) ISNULL))));
SELECT COUNT(*) FROM t0, v0 RIGHT OUTER JOIN vt1 ON (vt1.c0 IN ()) COLLATE RTRIM INNER JOIN rt0 ON ((((rt0.c0)LIKE(v0.c0)))/(((v0.c0) ISNULL))) WHERE (rt0.c0);
SELECT * FROM t0, vt1, rt0, v0 WHERE (CAST(TRIM(rt0.c2, '3V|䯸<') AS INTEGER)) ORDER BY ((((((((((rt0.c0)IS(rt0.c0)))OR(((v0.c0)!=(rt0.c1)))))AND(rt0.c2 COLLATE RTRIM)))AND(SQLITE_COMPILEOPTION_USED(rt0.c2))))OR((((t0.c0)) BETWEEN ((rt0.c2)) AND ((t0.c0))))) ASC  NULLS FIRST, v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(rt0.c2, '3V|䯸<') AS INTEGER)) IS TRUE)  as count FROM t0, vt1, rt0, v0 ORDER BY ((((((((((rt0.c0)IS(rt0.c0)))OR(((v0.c0)!=(rt0.c1)))))AND(rt0.c2 COLLATE RTRIM)))AND(SQLITE_COMPILEOPTION_USED(rt0.c2))))OR((((t0.c0)) BETWEEN ((rt0.c2)) AND ((t0.c0))))) ASC  NULLS FIRST, v0.c0  NULLS LAST);
SELECT * FROM t0, vt1, rt0, v0 WHERE (CAST(TRIM(rt0.c2, '3V|䯸<') AS INTEGER)) ORDER BY ((((((((((rt0.c0)IS(rt0.c0)))OR(((v0.c0)!=(rt0.c1)))))AND(rt0.c2 COLLATE RTRIM)))AND(SQLITE_COMPILEOPTION_USED(rt0.c2))))OR((((t0.c0)) BETWEEN ((rt0.c2)) AND ((t0.c0))))) ASC  NULLS FIRST, v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(rt0.c2, '3V|䯸<') AS INTEGER)) IS TRUE)  as count FROM t0, vt1, rt0, v0 ORDER BY ((((((((((rt0.c0)IS(rt0.c0)))OR(((v0.c0)!=(rt0.c1)))))AND(rt0.c2 COLLATE RTRIM)))AND(SQLITE_COMPILEOPTION_USED(rt0.c2))))OR((((t0.c0)) BETWEEN ((rt0.c2)) AND ((t0.c0))))) ASC  NULLS FIRST, v0.c0  NULLS LAST);
SELECT * FROM t0, vt1, rt0, v0 WHERE (CAST(TRIM(rt0.c2, '3V|䯸<') AS INTEGER)) ORDER BY ((((((((((rt0.c0)IS(rt0.c0)))OR(((v0.c0)!=(rt0.c1)))))AND(rt0.c2 COLLATE RTRIM)))AND(SQLITE_COMPILEOPTION_USED(rt0.c2))))OR((((t0.c0)) BETWEEN ((rt0.c2)) AND ((t0.c0))))) ASC  NULLS FIRST, v0.c0  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 ELSE '(tbKJN~<' END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 ELSE '(tbKJN~<' END IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 ELSE '(tbKJN~<' END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 ELSE '(tbKJN~<' END IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 ELSE '(tbKJN~<' END IN ()));
SELECT * FROM vt1, rt0, t0, v0 WHERE ((((((((((~ (rt0.c0)))AND(rt0.c2 COLLATE RTRIM)))OR(CASE WHEN v0.c0 THEN 0.9282781067247345 WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 ELSE t0.c0 END)))OR((+ (t0.c0)))))AND(((((((((0.952253523649516)AND(t0.c0)))AND(v0.c0)))OR(t0.c0)))AND(rt0.c1))))) ORDER BY (((vt1.c0 IN ()))<>(((((((((t0.c0)AND(rt0.c1)))OR(vt1.c0)))AND(v0.c0)))AND(t0.c0))))  NULLS LAST, CASE ((vt1.c0) ISNULL)  WHEN ((rt0.c0)IS(rt0.c1)) THEN (- (rt0.c2)) WHEN CASE WHEN rt0.c2 THEN t0.c0 END THEN rt0.c0 WHEN ((((v0.c0)AND(rt0.c2)))AND(rt0.c0)) THEN ((((((((v0.c0)AND(rt0.c1)))OR(vt1.c0)))OR('v((YxR!')))OR(vt1.c0)) ELSE CASE WHEN v0.c0 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN vt1.c0 THEN '' END END DESC;
SELECT SUM(count) FROM (SELECT (((((((((((~ (rt0.c0)))AND(rt0.c2 COLLATE RTRIM)))OR(CASE WHEN v0.c0 THEN 0.9282781067247345 WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 ELSE t0.c0 END)))OR((+ (t0.c0)))))AND(((((((((0.952253523649516)AND(t0.c0)))AND(v0.c0)))OR(t0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM vt1, rt0, t0, v0 ORDER BY (((vt1.c0 IN ()))!=(((((((((t0.c0)AND(rt0.c1)))OR(vt1.c0)))AND(v0.c0)))AND(t0.c0))))  NULLS LAST, CASE ((vt1.c0) ISNULL)  WHEN ((rt0.c0)IS(rt0.c1)) THEN (- (rt0.c2)) WHEN CASE WHEN rt0.c2 THEN t0.c0 END THEN rt0.c0 WHEN ((((v0.c0)AND(rt0.c2)))AND(rt0.c0)) THEN ((((((((v0.c0)AND(rt0.c1)))OR(vt1.c0)))OR('v((YxR!')))OR(vt1.c0)) ELSE CASE WHEN v0.c0 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN vt1.c0 THEN '' END END DESC);
SELECT * FROM vt1, rt0, t0, v0 WHERE ((((((((((~ (rt0.c0)))AND(rt0.c2 COLLATE RTRIM)))OR(CASE WHEN v0.c0 THEN 0.9282781067247345 WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 ELSE t0.c0 END)))OR((+ (t0.c0)))))AND(((((((((0.952253523649516)AND(t0.c0)))AND(v0.c0)))OR(t0.c0)))AND(rt0.c1))))) ORDER BY (((vt1.c0 IN ()))<>(((((((((t0.c0)AND(rt0.c1)))OR(vt1.c0)))AND(v0.c0)))AND(t0.c0))))  NULLS LAST, CASE ((vt1.c0) ISNULL)  WHEN ((rt0.c0)IS(rt0.c1)) THEN (- (rt0.c2)) WHEN CASE WHEN rt0.c2 THEN t0.c0 END THEN rt0.c0 WHEN ((((v0.c0)AND(rt0.c2)))AND(rt0.c0)) THEN ((((((((v0.c0)AND(rt0.c1)))OR(vt1.c0)))OR('v((YxR!')))OR(vt1.c0)) ELSE CASE WHEN v0.c0 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN vt1.c0 THEN '' END END DESC;
SELECT SUM(count) FROM (SELECT (((((((((((~ (rt0.c0)))AND(rt0.c2 COLLATE RTRIM)))OR(CASE WHEN v0.c0 THEN 0.9282781067247345 WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 ELSE t0.c0 END)))OR((+ (t0.c0)))))AND(((((((((0.952253523649516)AND(t0.c0)))AND(v0.c0)))OR(t0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM vt1, rt0, t0, v0 ORDER BY (((vt1.c0 IN ()))!=(((((((((t0.c0)AND(rt0.c1)))OR(vt1.c0)))AND(v0.c0)))AND(t0.c0))))  NULLS LAST, CASE ((vt1.c0) ISNULL)  WHEN ((rt0.c0)IS(rt0.c1)) THEN (- (rt0.c2)) WHEN CASE WHEN rt0.c2 THEN t0.c0 END THEN rt0.c0 WHEN ((((v0.c0)AND(rt0.c2)))AND(rt0.c0)) THEN ((((((((v0.c0)AND(rt0.c1)))OR(vt1.c0)))OR('v((YxR!')))OR(vt1.c0)) ELSE CASE WHEN v0.c0 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN vt1.c0 THEN '' END END DESC);
SELECT * FROM vt1, rt0, t0, v0 WHERE ((((((((((~ (rt0.c0)))AND(rt0.c2 COLLATE RTRIM)))OR(CASE WHEN v0.c0 THEN 0.9282781067247345 WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 ELSE t0.c0 END)))OR((+ (t0.c0)))))AND(((((((((0.952253523649516)AND(t0.c0)))AND(v0.c0)))OR(t0.c0)))AND(rt0.c1))))) ORDER BY (((vt1.c0 IN ()))<>(((((((((t0.c0)AND(rt0.c1)))OR(vt1.c0)))AND(v0.c0)))AND(t0.c0))))  NULLS LAST, CASE ((vt1.c0) ISNULL)  WHEN ((rt0.c0)IS(rt0.c1)) THEN (- (rt0.c2)) WHEN CASE WHEN rt0.c2 THEN t0.c0 END THEN rt0.c0 WHEN ((((v0.c0)AND(rt0.c2)))AND(rt0.c0)) THEN ((((((((v0.c0)AND(rt0.c1)))OR(vt1.c0)))OR('v((YxR!')))OR(vt1.c0)) ELSE CASE WHEN v0.c0 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN vt1.c0 THEN '' END END DESC;
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0))<>((v0.c0)))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((v0.c0))<>((v0.c0)))) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0))<>((v0.c0)))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((v0.c0))<>((v0.c0)))) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0))<>((v0.c0)))) IS FALSE));
SELECT COUNT(*) FROM rt0, v0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0))<>((t0.c0))) IN ()) RIGHT OUTER JOIN t0 ON t0.c0 WHERE ((((rt0.c2))<>((NULL))) COLLATE RTRIM) ORDER BY QUOTE(((((rt0.c0)OR(vt1.c0)))OR(t0.c0))) DESC, (~ (vt1.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((rt0.c2))<>((NULL))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0))!=((t0.c0))) IN ()) RIGHT OUTER JOIN t0 ON t0.c0 ORDER BY QUOTE(((((rt0.c0)OR(vt1.c0)))OR(t0.c0))) DESC, (~ (vt1.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0, v0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0))<>((t0.c0))) IN ()) RIGHT OUTER JOIN t0 ON t0.c0 WHERE ((((rt0.c2))<>((NULL))) COLLATE RTRIM) ORDER BY QUOTE(((((rt0.c0)OR(vt1.c0)))OR(t0.c0))) DESC, (~ (vt1.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((rt0.c2))<>((NULL))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0))!=((t0.c0))) IN ()) RIGHT OUTER JOIN t0 ON t0.c0 ORDER BY QUOTE(((((rt0.c0)OR(vt1.c0)))OR(t0.c0))) DESC, (~ (vt1.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0, v0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0))<>((t0.c0))) IN ()) RIGHT OUTER JOIN t0 ON t0.c0 WHERE ((((rt0.c2))<>((NULL))) COLLATE RTRIM) ORDER BY QUOTE(((((rt0.c0)OR(vt1.c0)))OR(t0.c0))) DESC, (~ (vt1.c0)) COLLATE BINARY;
SELECT ALL * FROM t0, v0, rt0 WHERE ((((+ (t0.c0)))LIKE(CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c0)))LIKE(CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 END))) IS TRUE)  as count FROM t0, v0, rt0);
SELECT ALL * FROM t0, v0, rt0 WHERE ((((+ (t0.c0)))LIKE(CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c0)))LIKE(CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 END))) IS TRUE)  as count FROM t0, v0, rt0);
SELECT ALL * FROM t0, v0, rt0 WHERE ((((+ (t0.c0)))LIKE(CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 END)));
SELECT ALL COUNT(*) FROM rt0, vt1, t0, v0 NOT INDEXED WHERE (((((rt0.c2))>=((rt0.c1))) IN ((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2))>=((rt0.c1))) IN ((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0, vt1, t0, v0);
SELECT ALL COUNT(*) FROM rt0, vt1, t0, v0 NOT INDEXED WHERE (((((rt0.c2))>=((rt0.c1))) IN ((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2))>=((rt0.c1))) IN ((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0, vt1, t0, v0);
SELECT ALL COUNT(*) FROM rt0, vt1, t0, v0 NOT INDEXED WHERE (((((rt0.c2))>=((rt0.c1))) IN ((NOT (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0, vt1, v0 WHERE ('i7H工');
SELECT SUM(count) FROM (SELECT ALL (('i7H工') IS TRUE)  as count FROM rt0, vt1, v0);
SELECT ALL COUNT(*) FROM rt0, vt1, v0 WHERE ('i7H工');
SELECT SUM(count) FROM (SELECT ALL (('i7H工') IS TRUE)  as count FROM rt0, vt1, v0);
SELECT ALL COUNT(*) FROM rt0, vt1, v0 WHERE ('i7H工');
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (NULL) ORDER BY (((((rt0.c1 IN ()))OR(0.7841644476321361)))OR((~ (rt0.c0)))) ASC  NULLS LAST, CAST(rt0.c2 COLLATE RTRIM AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, t0 ORDER BY (((((rt0.c1 IN ()))OR(0.7841644476321361)))OR((~ (rt0.c0)))) ASC  NULLS LAST, CAST(rt0.c2 COLLATE RTRIM AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (NULL) ORDER BY (((((rt0.c1 IN ()))OR(0.7841644476321361)))OR((~ (rt0.c0)))) ASC  NULLS LAST, CAST(rt0.c2 COLLATE RTRIM AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, t0 ORDER BY (((((rt0.c1 IN ()))OR(0.7841644476321361)))OR((~ (rt0.c0)))) ASC  NULLS LAST, CAST(rt0.c2 COLLATE RTRIM AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (NULL) ORDER BY (((((rt0.c1 IN ()))OR(0.7841644476321361)))OR((~ (rt0.c0)))) ASC  NULLS LAST, CAST(rt0.c2 COLLATE RTRIM AS INTEGER) DESC;
SELECT COUNT(*) FROM v0, t0, rt0 RIGHT OUTER JOIN vt1 ON (((((vt1.c0)LIKE(rt0.c0))))=((rt0.c2 COLLATE NOCASE))) WHERE (highlight(CAST(x'4bff' AS NUMERIC), TYPEOF(rt0.c1), ((t0.c0)>=(rt0.c1)), (+ (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((highlight(CAST(x'4bff' AS NUMERIC), TYPEOF(rt0.c1), ((t0.c0)>=(rt0.c1)), (+ (vt1.c0)))) IS TRUE)  as count FROM v0, t0, rt0 RIGHT OUTER JOIN vt1 ON (((((vt1.c0)LIKE(rt0.c0))))==((rt0.c2 COLLATE NOCASE))));
SELECT COUNT(*) FROM v0, t0, rt0 RIGHT OUTER JOIN vt1 ON (((((vt1.c0)LIKE(rt0.c0))))=((rt0.c2 COLLATE NOCASE))) WHERE (highlight(CAST(x'4bff' AS NUMERIC), TYPEOF(rt0.c1), ((t0.c0)>=(rt0.c1)), (+ (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((highlight(CAST(x'4bff' AS NUMERIC), TYPEOF(rt0.c1), ((t0.c0)>=(rt0.c1)), (+ (vt1.c0)))) IS TRUE)  as count FROM v0, t0, rt0 RIGHT OUTER JOIN vt1 ON (((((vt1.c0)LIKE(rt0.c0))))==((rt0.c2 COLLATE NOCASE))));
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY ((~ (rt0.c2)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((~ (rt0.c2)) IN ()));
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY ((~ (rt0.c2)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((~ (rt0.c2)) IN ()));
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY ((~ (rt0.c2)) IN ());
SELECT COUNT(*) FROM t0 WHERE (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM) ORDER BY ((x'')&((((x'41b4', t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))))) ASC  NULLS LAST, (((((t0.c0) NOT NULL)))>=((LIKELY(DISTINCT 0.013885795343893226))))  NULLS LAST, ((((+ (t0.c0))))>((LOWER(DISTINCT t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY ((x'')&((((x'41b4', t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))))) ASC  NULLS LAST, (((((t0.c0) NOT NULL)))>=((LIKELY(DISTINCT 0.013885795343893226))))  NULLS LAST, ((((+ (t0.c0))))>((LOWER(DISTINCT t0.c0)))) DESC);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM) ORDER BY ((x'')&((((x'41b4', t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))))) ASC  NULLS LAST, (((((t0.c0) NOT NULL)))>=((LIKELY(DISTINCT 0.013885795343893226))))  NULLS LAST, ((((+ (t0.c0))))>((LOWER(DISTINCT t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY ((x'')&((((x'41b4', t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))))) ASC  NULLS LAST, (((((t0.c0) NOT NULL)))>=((LIKELY(DISTINCT 0.013885795343893226))))  NULLS LAST, ((((+ (t0.c0))))>((LOWER(DISTINCT t0.c0)))) DESC);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM) ORDER BY ((x'')&((((x'41b4', t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))))) ASC  NULLS LAST, (((((t0.c0) NOT NULL)))>=((LIKELY(DISTINCT 0.013885795343893226))))  NULLS LAST, ((((+ (t0.c0))))>((LOWER(DISTINCT t0.c0)))) DESC;
SELECT ALL * FROM vt1, t0 WHERE (((((((((((((x'')AND(t0.c0)))AND(t0.c0)))OR(((t0.c0)GLOB(t0.c0)))))AND(((t0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)))))AND(((((vt1.c0)AND(x'')))OR(vt1.c0)))))OR(UNICODE(t0.c0)))) ORDER BY t0.c0, ((t0.c0)>(vt1.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((x'')AND(t0.c0)))AND(t0.c0)))OR(((t0.c0)GLOB(t0.c0)))))AND(((t0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)))))AND(((((vt1.c0)AND(x'')))OR(vt1.c0)))))OR(UNICODE(t0.c0)))) IS TRUE)  as count FROM vt1, t0 ORDER BY t0.c0, ((t0.c0)>(vt1.c0)) COLLATE BINARY DESC);
SELECT ALL * FROM vt1, t0 WHERE (((((((((((((x'')AND(t0.c0)))AND(t0.c0)))OR(((t0.c0)GLOB(t0.c0)))))AND(((t0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)))))AND(((((vt1.c0)AND(x'')))OR(vt1.c0)))))OR(UNICODE(t0.c0)))) ORDER BY t0.c0, ((t0.c0)>(vt1.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((x'')AND(t0.c0)))AND(t0.c0)))OR(((t0.c0)GLOB(t0.c0)))))AND(((t0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)))))AND(((((vt1.c0)AND(x'')))OR(vt1.c0)))))OR(UNICODE(t0.c0)))) IS TRUE)  as count FROM vt1, t0 ORDER BY t0.c0, ((t0.c0)>(vt1.c0)) COLLATE BINARY DESC);
SELECT ALL * FROM vt1, t0 WHERE (((((((((((((x'')AND(t0.c0)))AND(t0.c0)))OR(((t0.c0)GLOB(t0.c0)))))AND(((t0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)))))AND(((((vt1.c0)AND(x'')))OR(vt1.c0)))))OR(UNICODE(t0.c0)))) ORDER BY t0.c0, ((t0.c0)>(vt1.c0)) COLLATE BINARY DESC;
SELECT COUNT(*) FROM v0, t0 WHERE (v0.c0) ORDER BY ((((((((((((((v0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(v0.c0)))OR(v0.c0)))OR((((v0.c0)) BETWEEN ((t0.c0)) AND ((v0.c0)))))  NULLS FIRST, CASE MIN(t0.c0, t0.c0, t0.c0, t0.c0)  WHEN t0.c0 THEN CASE t0.c0  WHEN v0.c0 THEN v0.c0 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, t0 ORDER BY ((((((((((((((v0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(v0.c0)))OR(v0.c0)))OR((((v0.c0)) BETWEEN ((t0.c0)) AND ((v0.c0)))))  NULLS FIRST, CASE MIN(t0.c0, t0.c0, t0.c0, t0.c0)  WHEN t0.c0 THEN CASE t0.c0  WHEN v0.c0 THEN v0.c0 END END  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0 WHERE (v0.c0) ORDER BY ((((((((((((((v0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(v0.c0)))OR(v0.c0)))OR((((v0.c0)) BETWEEN ((t0.c0)) AND ((v0.c0)))))  NULLS FIRST, CASE MIN(t0.c0, t0.c0, t0.c0, t0.c0)  WHEN t0.c0 THEN CASE t0.c0  WHEN v0.c0 THEN v0.c0 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, t0 ORDER BY ((((((((((((((v0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(v0.c0)))OR(v0.c0)))OR((((v0.c0)) BETWEEN ((t0.c0)) AND ((v0.c0)))))  NULLS FIRST, CASE MIN(t0.c0, t0.c0, t0.c0, t0.c0)  WHEN t0.c0 THEN CASE t0.c0  WHEN v0.c0 THEN v0.c0 END END  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0 WHERE (v0.c0) ORDER BY ((((((((((((((v0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(v0.c0)))OR(v0.c0)))OR((((v0.c0)) BETWEEN ((t0.c0)) AND ((v0.c0)))))  NULLS FIRST, CASE MIN(t0.c0, t0.c0, t0.c0, t0.c0)  WHEN t0.c0 THEN CASE t0.c0  WHEN v0.c0 THEN v0.c0 END END  NULLS FIRST;
SELECT ALL * FROM vt1, t0, v0 WHERE (CASE WHEN ((vt1.c0) NOTNULL) THEN ((vt1.c0) NOTNULL) WHEN ((((v0.c0)OR(t0.c0)))OR(t0.c0)) THEN CASE WHEN v0.c0 THEN vt1.c0 END WHEN vt1.c0 COLLATE RTRIM THEN -1.63981404E9 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0) NOTNULL) THEN ((vt1.c0) NOTNULL) WHEN ((((v0.c0)OR(t0.c0)))OR(t0.c0)) THEN CASE WHEN v0.c0 THEN vt1.c0 END WHEN vt1.c0 COLLATE RTRIM THEN -1.63981404E9 END) IS TRUE)  as count FROM vt1, t0, v0);
SELECT ALL * FROM vt1, t0, v0 WHERE (CASE WHEN ((vt1.c0) NOTNULL) THEN ((vt1.c0) NOTNULL) WHEN ((((v0.c0)OR(t0.c0)))OR(t0.c0)) THEN CASE WHEN v0.c0 THEN vt1.c0 END WHEN vt1.c0 COLLATE RTRIM THEN -1.63981404E9 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0) NOTNULL) THEN ((vt1.c0) NOTNULL) WHEN ((((v0.c0)OR(t0.c0)))OR(t0.c0)) THEN CASE WHEN v0.c0 THEN vt1.c0 END WHEN vt1.c0 COLLATE RTRIM THEN -1.63981404E9 END) IS TRUE)  as count FROM vt1, t0, v0);
SELECT ALL * FROM vt1, t0, v0 WHERE (CASE WHEN ((vt1.c0) NOTNULL) THEN ((vt1.c0) NOTNULL) WHEN ((((v0.c0)OR(t0.c0)))OR(t0.c0)) THEN CASE WHEN v0.c0 THEN vt1.c0 END WHEN vt1.c0 COLLATE RTRIM THEN -1.63981404E9 END);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON ((((('' IN ()))OR(CASE WHEN vt1.c0 THEN rt0.c1 END)))OR((((rt0.c2))=((rt0.c0))))) WHERE ((- (((rt0.c2)>>(vt1.c0))))) ORDER BY CHANGES() COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c2)>>(vt1.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON ((((('' IN ()))OR(CASE WHEN vt1.c0 THEN rt0.c1 END)))OR((((rt0.c2))==((rt0.c0))))) ORDER BY CHANGES() COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON ((((('' IN ()))OR(CASE WHEN vt1.c0 THEN rt0.c1 END)))OR((((rt0.c2))=((rt0.c0))))) WHERE ((- (((rt0.c2)>>(vt1.c0))))) ORDER BY CHANGES() COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c2)>>(vt1.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON ((((('' IN ()))OR(CASE WHEN vt1.c0 THEN rt0.c1 END)))OR((((rt0.c2))==((rt0.c0))))) ORDER BY CHANGES() COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON ((((('' IN ()))OR(CASE WHEN vt1.c0 THEN rt0.c1 END)))OR((((rt0.c2))=((rt0.c0))))) WHERE ((- (((rt0.c2)>>(vt1.c0))))) ORDER BY CHANGES() COLLATE NOCASE  NULLS FIRST;
SELECT * FROM vt1, rt0, t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 ELSE vt1.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN t0.c0 ELSE vt1.c0 END) NOT NULL)) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT * FROM vt1, rt0, t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 ELSE vt1.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN t0.c0 ELSE vt1.c0 END) NOT NULL)) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT * FROM vt1, rt0, t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 ELSE vt1.c0 END) NOT NULL));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (SQLITE_COMPILEOPTION_GET(INSTR(rt0.c0, 1.232327419E9)));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(INSTR(rt0.c0, 1.232327419E9))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (SQLITE_COMPILEOPTION_GET(INSTR(rt0.c0, 1.232327419E9)));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(INSTR(rt0.c0, 1.232327419E9))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (SQLITE_COMPILEOPTION_GET(INSTR(rt0.c0, 1.232327419E9)));
SELECT ALL * FROM vt1, t0 RIGHT OUTER JOIN v0 ON NULL WHERE ((((((t0.c0)AND('7j')))AND(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((t0.c0)AND('7j')))AND(v0.c0)) IN ())) IS TRUE)  as count FROM vt1, t0 RIGHT OUTER JOIN v0 ON NULL);
SELECT ALL * FROM vt1, t0 RIGHT OUTER JOIN v0 ON NULL WHERE ((((((t0.c0)AND('7j')))AND(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((t0.c0)AND('7j')))AND(v0.c0)) IN ())) IS TRUE)  as count FROM vt1, t0 RIGHT OUTER JOIN v0 ON NULL);
SELECT ALL * FROM vt1, t0 RIGHT OUTER JOIN v0 ON NULL WHERE ((((((t0.c0)AND('7j')))AND(v0.c0)) IN ()));
SELECT ALL * FROM rt0, v0 FULL OUTER JOIN t0 ON CASE ((v0.c0) BETWEEN (rt0.c1) AND (t0.c0))  WHEN ((rt0.c1)*(t0.c0)) THEN ((rt0.c0) NOTNULL) WHEN t0.c0 COLLATE RTRIM THEN ((vt1.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) WHEN HEX(rt0.c1) THEN (((NULL)) BETWEEN ((rt0.c1)) AND ((vt1.c0))) END CROSS JOIN vt1 ON (('e9V夕u-a') NOT NULL) WHERE ((+ (t0.c0)) COLLATE NOCASE) ORDER BY (~ (rt0.c0)) COLLATE NOCASE ASC, ((('-312366572' IN ()))%(((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT (((+ (t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN t0 ON CASE ((v0.c0) BETWEEN (rt0.c1) AND (t0.c0))  WHEN ((rt0.c1)*(t0.c0)) THEN ((rt0.c0) NOTNULL) WHEN t0.c0 COLLATE RTRIM THEN ((vt1.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) WHEN HEX(rt0.c1) THEN (((NULL)) BETWEEN ((rt0.c1)) AND ((vt1.c0))) END CROSS JOIN vt1 ON (('e9V夕u-a') NOT NULL) ORDER BY (~ (rt0.c0)) COLLATE NOCASE ASC, ((('-312366572' IN ()))%(((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt1.c0)))));
SELECT ALL * FROM rt0, v0 FULL OUTER JOIN t0 ON CASE ((v0.c0) BETWEEN (rt0.c1) AND (t0.c0))  WHEN ((rt0.c1)*(t0.c0)) THEN ((rt0.c0) NOTNULL) WHEN t0.c0 COLLATE RTRIM THEN ((vt1.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) WHEN HEX(rt0.c1) THEN (((NULL)) BETWEEN ((rt0.c1)) AND ((vt1.c0))) END CROSS JOIN vt1 ON (('e9V夕u-a') NOT NULL) WHERE ((+ (t0.c0)) COLLATE NOCASE) ORDER BY (~ (rt0.c0)) COLLATE NOCASE ASC, ((('-312366572' IN ()))%(((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT (((+ (t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN t0 ON CASE ((v0.c0) BETWEEN (rt0.c1) AND (t0.c0))  WHEN ((rt0.c1)*(t0.c0)) THEN ((rt0.c0) NOTNULL) WHEN t0.c0 COLLATE RTRIM THEN ((vt1.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) WHEN HEX(rt0.c1) THEN (((NULL)) BETWEEN ((rt0.c1)) AND ((vt1.c0))) END CROSS JOIN vt1 ON (('e9V夕u-a') NOT NULL) ORDER BY (~ (rt0.c0)) COLLATE NOCASE ASC, ((('-312366572' IN ()))%(((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt1.c0)))));
SELECT ALL * FROM t0 WHERE ((((((((((((('jwfCT')AND(t0.c0)))OR(0x6cb2b924)))AND(x'c3e3')))OR(t0.c0)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(TYPEOF(DISTINCT 0.07840044664719625)))) ORDER BY ((t0.c0)||((t0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((('jwfCT')AND(t0.c0)))OR(0X6cb2b924)))AND(x'c3e3')))OR(t0.c0)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(TYPEOF(DISTINCT 0.07840044664719625)))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0)||((t0.c0 IN ()))) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((((((((((('jwfCT')AND(t0.c0)))OR(0x6cb2b924)))AND(x'c3e3')))OR(t0.c0)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(TYPEOF(DISTINCT 0.07840044664719625)))) ORDER BY ((t0.c0)||((t0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((('jwfCT')AND(t0.c0)))OR(0X6cb2b924)))AND(x'c3e3')))OR(t0.c0)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(TYPEOF(DISTINCT 0.07840044664719625)))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0)||((t0.c0 IN ()))) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((((((((((('jwfCT')AND(t0.c0)))OR(0x6cb2b924)))AND(x'c3e3')))OR(t0.c0)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(TYPEOF(DISTINCT 0.07840044664719625)))) ORDER BY ((t0.c0)||((t0.c0 IN ()))) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c1)<>(rt0.c2)))) AND ((((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1)))))) ORDER BY ((CAST(rt0.c1 AS BLOB))>=((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((((rt0.c1)!=(rt0.c2)))) AND ((((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c1 AS BLOB))>=((rt0.c2 IN ()))));
SELECT * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c1)<>(rt0.c2)))) AND ((((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1)))))) ORDER BY ((CAST(rt0.c1 AS BLOB))>=((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((((rt0.c1)!=(rt0.c2)))) AND ((((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c1 AS BLOB))>=((rt0.c2 IN ()))));
SELECT * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c1)<>(rt0.c2)))) AND ((((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1)))))) ORDER BY ((CAST(rt0.c1 AS BLOB))>=((rt0.c2 IN ())));
SELECT COUNT(*) FROM rt0 WHERE (CAST((NOT (rt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST((NOT (rt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST((NOT (rt0.c1)) AS BLOB));
SELECT ALL * FROM vt1, rt0 CROSS JOIN v0 ON (((rt0.c2)) BETWEEN ((((rt0.c1)*(vt1.c0)))) AND (((- (t0.c0))))) LEFT OUTER JOIN t0 ON ((vt1.c0) IS FALSE) COLLATE RTRIM COLLATE NOCASE WHERE ((((t0.c0 IN (rt0.c1, v0.c0)))/((('q|')%(vt1.c0))))) ORDER BY (((rt0.c1 IN ())) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN (rt0.c1, v0.c0)))/((('q|')%(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 CROSS JOIN v0 ON (((rt0.c2)) BETWEEN ((((rt0.c1)*(vt1.c0)))) AND (((- (t0.c0))))) LEFT OUTER JOIN t0 ON ((vt1.c0) IS FALSE) COLLATE RTRIM COLLATE NOCASE ORDER BY (((rt0.c1 IN ())) ISNULL) DESC);
SELECT ALL * FROM vt1, rt0 CROSS JOIN v0 ON (((rt0.c2)) BETWEEN ((((rt0.c1)*(vt1.c0)))) AND (((- (t0.c0))))) LEFT OUTER JOIN t0 ON ((vt1.c0) IS FALSE) COLLATE RTRIM COLLATE NOCASE WHERE ((((t0.c0 IN (rt0.c1, v0.c0)))/((('q|')%(vt1.c0))))) ORDER BY (((rt0.c1 IN ())) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN (rt0.c1, v0.c0)))/((('q|')%(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 CROSS JOIN v0 ON (((rt0.c2)) BETWEEN ((((rt0.c1)*(vt1.c0)))) AND (((- (t0.c0))))) LEFT OUTER JOIN t0 ON ((vt1.c0) IS FALSE) COLLATE RTRIM COLLATE NOCASE ORDER BY (((rt0.c1 IN ())) ISNULL) DESC);
SELECT ALL * FROM vt1, rt0 CROSS JOIN v0 ON (((rt0.c2)) BETWEEN ((((rt0.c1)*(vt1.c0)))) AND (((- (t0.c0))))) LEFT OUTER JOIN t0 ON ((vt1.c0) IS FALSE) COLLATE RTRIM COLLATE NOCASE WHERE ((((t0.c0 IN (rt0.c1, v0.c0)))/((('q|')%(vt1.c0))))) ORDER BY (((rt0.c1 IN ())) ISNULL) DESC;
SELECT COUNT(*) FROM rt0, t0 FULL OUTER JOIN v0 ON (('-675953571') IS FALSE) INNER JOIN vt1 ON ((((0.11116638029319592)AND((+ (v0.c0)))))AND(CASE rt0.c0  WHEN '1314590572' THEN rt0.c0 END)) WHERE ((((((0x2f5a9051))>((v0.c0))))!=(json_remove(rt0.c2, rt0.c1)))) ORDER BY ((((rt0.c0)=(v0.c0))) IS TRUE) ASC  NULLS FIRST, (NOT (0x58155915 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL (((((((0x2f5a9051))>((v0.c0))))!=(json_remove(rt0.c2, rt0.c1)))) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN v0 ON (('-675953571') IS FALSE) INNER JOIN vt1 ON ((((0.11116638029319592)AND((+ (v0.c0)))))AND(CASE rt0.c0  WHEN '1314590572' THEN rt0.c0 END)) ORDER BY ((((rt0.c0)==(v0.c0))) IS TRUE) ASC  NULLS FIRST, (NOT (0X58155915 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0, t0 FULL OUTER JOIN v0 ON (('-675953571') IS FALSE) INNER JOIN vt1 ON ((((0.11116638029319592)AND((+ (v0.c0)))))AND(CASE rt0.c0  WHEN '1314590572' THEN rt0.c0 END)) WHERE ((((((0x2f5a9051))>((v0.c0))))!=(json_remove(rt0.c2, rt0.c1)))) ORDER BY ((((rt0.c0)=(v0.c0))) IS TRUE) ASC  NULLS FIRST, (NOT (0x58155915 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL (((((((0x2f5a9051))>((v0.c0))))!=(json_remove(rt0.c2, rt0.c1)))) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN v0 ON (('-675953571') IS FALSE) INNER JOIN vt1 ON ((((0.11116638029319592)AND((+ (v0.c0)))))AND(CASE rt0.c0  WHEN '1314590572' THEN rt0.c0 END)) ORDER BY ((((rt0.c0)==(v0.c0))) IS TRUE) ASC  NULLS FIRST, (NOT (0X58155915 COLLATE NOCASE)));
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON CAST(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END AS REAL) INNER JOIN vt1 ON (NOT (rt0.c0)) COLLATE BINARY WHERE ((- (((rt0.c2)IS NOT(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c2)IS NOT(rt0.c2))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON CAST(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END AS REAL) INNER JOIN vt1 ON (NOT (rt0.c0)) COLLATE BINARY);
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON CAST(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END AS REAL) INNER JOIN vt1 ON (NOT (rt0.c0)) COLLATE BINARY WHERE ((- (((rt0.c2)IS NOT(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c2)IS NOT(rt0.c2))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON CAST(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END AS REAL) INNER JOIN vt1 ON (NOT (rt0.c0)) COLLATE BINARY);
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON CAST(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END AS REAL) INNER JOIN vt1 ON (NOT (rt0.c0)) COLLATE BINARY WHERE ((- (((rt0.c2)IS NOT(rt0.c2)))));
SELECT COUNT(*) FROM vt1 WHERE (((((SQLITE_COMPILEOPTION_USED(vt1.c0))AND(vt1.c0)))AND((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((SQLITE_COMPILEOPTION_USED(vt1.c0))AND(vt1.c0)))AND((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((SQLITE_COMPILEOPTION_USED(vt1.c0))AND(vt1.c0)))AND((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((SQLITE_COMPILEOPTION_USED(vt1.c0))AND(vt1.c0)))AND((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((SQLITE_COMPILEOPTION_USED(vt1.c0))AND(vt1.c0)))AND((vt1.c0 IN ()))));
SELECT * FROM t0 WHERE ((t0.c0 IN (((t0.c0) NOT NULL)))) ORDER BY (~ (LIKE(t0.c0, t0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN (((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0 ORDER BY (~ (LIKE(t0.c0, t0.c0))));
SELECT * FROM t0 WHERE ((t0.c0 IN (((t0.c0) NOT NULL)))) ORDER BY (~ (LIKE(t0.c0, t0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN (((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0 ORDER BY (~ (LIKE(t0.c0, t0.c0))));
SELECT * FROM t0 WHERE ((t0.c0 IN (((t0.c0) NOT NULL)))) ORDER BY (~ (LIKE(t0.c0, t0.c0)));
SELECT ALL * FROM vt1 WHERE ((~ ((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, 9.82266981E8)))))) ORDER BY CASE 'qc'  WHEN (- (vt1.c0)) THEN json_insert(vt1.c0, vt1.c0, vt1.c0) ELSE (vt1.c0 IN ()) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, 9.82266981E8)))))) IS TRUE)  as count FROM vt1 ORDER BY CASE 'qc'  WHEN (- (vt1.c0)) THEN json_insert(vt1.c0, vt1.c0, vt1.c0) ELSE (vt1.c0 IN ()) END DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((~ ((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, 9.82266981E8)))))) ORDER BY CASE 'qc'  WHEN (- (vt1.c0)) THEN json_insert(vt1.c0, vt1.c0, vt1.c0) ELSE (vt1.c0 IN ()) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, 9.82266981E8)))))) IS TRUE)  as count FROM vt1 ORDER BY CASE 'qc'  WHEN (- (vt1.c0)) THEN json_insert(vt1.c0, vt1.c0, vt1.c0) ELSE (vt1.c0 IN ()) END DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((~ ((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, 9.82266981E8)))))) ORDER BY CASE 'qc'  WHEN (- (vt1.c0)) THEN json_insert(vt1.c0, vt1.c0, vt1.c0) ELSE (vt1.c0 IN ()) END DESC  NULLS LAST;
SELECT * FROM v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE NOCASE) ORDER BY v0.c0  NULLS LAST, CAST(v0.c0 AS BLOB) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS LAST, CAST(v0.c0 AS BLOB) COLLATE RTRIM  NULLS LAST);
SELECT * FROM v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE NOCASE) ORDER BY v0.c0  NULLS LAST, CAST(v0.c0 AS BLOB) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS LAST, CAST(v0.c0 AS BLOB) COLLATE RTRIM  NULLS LAST);
SELECT * FROM v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE NOCASE) ORDER BY v0.c0  NULLS LAST, CAST(v0.c0 AS BLOB) COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((((('now' COLLATE BINARY)OR(CAST(vt1.c0 AS NUMERIC))))OR(((vt1.c0)+(x'')))));
SELECT SUM(count) FROM (SELECT ALL (((((('now' COLLATE BINARY)OR(CAST(vt1.c0 AS NUMERIC))))OR(((vt1.c0)+(x''))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((('now' COLLATE BINARY)OR(CAST(vt1.c0 AS NUMERIC))))OR(((vt1.c0)+(x'')))));
SELECT SUM(count) FROM (SELECT ALL (((((('now' COLLATE BINARY)OR(CAST(vt1.c0 AS NUMERIC))))OR(((vt1.c0)+(x''))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((('now' COLLATE BINARY)OR(CAST(vt1.c0 AS NUMERIC))))OR(((vt1.c0)+(x'')))));
SELECT * FROM vt1 WHERE (CASE ((x'')IS(vt1.c0))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN ((vt1.c0) IS FALSE) ELSE vt1.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((x'')IS(vt1.c0))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN ((vt1.c0) IS FALSE) ELSE vt1.c0 END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE ((x'')IS(vt1.c0))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN ((vt1.c0) IS FALSE) ELSE vt1.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((x'')IS(vt1.c0))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN ((vt1.c0) IS FALSE) ELSE vt1.c0 END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE ((x'')IS(vt1.c0))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN ((vt1.c0) IS FALSE) ELSE vt1.c0 END);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND (((((0X51a33826, rt0.c2, v0.c0, rt0.c1, 0.7514738195752758)) BETWEEN ((rt0.c1, rt0.c0, rt0.c0, rt0.c1, rt0.c0)) AND ((x'ad21', rt0.c0, v0.c0, rt0.c1, v0.c0))))))) ORDER BY ((NULLIF(rt0.c1, rt0.c2)) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND (((((0x51a33826, rt0.c2, v0.c0, rt0.c1, 0.7514738195752758)) BETWEEN ((rt0.c1, rt0.c0, rt0.c0, rt0.c1, rt0.c0)) AND ((x'ad21', rt0.c0, v0.c0, rt0.c1, v0.c0))))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((NULLIF(rt0.c1, rt0.c2)) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))) ASC);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND (((((0X51a33826, rt0.c2, v0.c0, rt0.c1, 0.7514738195752758)) BETWEEN ((rt0.c1, rt0.c0, rt0.c0, rt0.c1, rt0.c0)) AND ((x'ad21', rt0.c0, v0.c0, rt0.c1, v0.c0))))))) ORDER BY ((NULLIF(rt0.c1, rt0.c2)) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND (((((0x51a33826, rt0.c2, v0.c0, rt0.c1, 0.7514738195752758)) BETWEEN ((rt0.c1, rt0.c0, rt0.c0, rt0.c1, rt0.c0)) AND ((x'ad21', rt0.c0, v0.c0, rt0.c1, v0.c0))))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((NULLIF(rt0.c1, rt0.c2)) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))) ASC);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND (((((0X51a33826, rt0.c2, v0.c0, rt0.c1, 0.7514738195752758)) BETWEEN ((rt0.c1, rt0.c0, rt0.c0, rt0.c1, rt0.c0)) AND ((x'ad21', rt0.c0, v0.c0, rt0.c1, v0.c0))))))) ORDER BY ((NULLIF(rt0.c1, rt0.c2)) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))) ASC;
SELECT * FROM v0 FULL OUTER JOIN t0 ON (((rt0.c1 IN ()))IS('')) LEFT OUTER JOIN rt0 ON (- (TRIM(t0.c0, rt0.c2))) WHERE ((((('8躂') NOTNULL)) NOTNULL)) ORDER BY (((((t0.c0 IN ()))OR(((rt0.c2)-(v0.c0)))))AND(((t0.c0) IS TRUE))) ASC  NULLS FIRST, ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN NULL ELSE v0.c0 END) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((('8躂') NOTNULL)) NOTNULL)) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON (((rt0.c1 IN ()))IS('')) LEFT OUTER JOIN rt0 ON (- (TRIM(t0.c0, rt0.c2))) ORDER BY (((((t0.c0 IN ()))OR(((rt0.c2)-(v0.c0)))))AND(((t0.c0) IS TRUE))) ASC  NULLS FIRST, ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN NULL ELSE v0.c0 END) ISNULL) DESC);
SELECT * FROM v0 FULL OUTER JOIN t0 ON (((rt0.c1 IN ()))IS('')) LEFT OUTER JOIN rt0 ON (- (TRIM(t0.c0, rt0.c2))) WHERE ((((('8躂') NOTNULL)) NOTNULL)) ORDER BY (((((t0.c0 IN ()))OR(((rt0.c2)-(v0.c0)))))AND(((t0.c0) IS TRUE))) ASC  NULLS FIRST, ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN NULL ELSE v0.c0 END) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((('8躂') NOTNULL)) NOTNULL)) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON (((rt0.c1 IN ()))IS('')) LEFT OUTER JOIN rt0 ON (- (TRIM(t0.c0, rt0.c2))) ORDER BY (((((t0.c0 IN ()))OR(((rt0.c2)-(v0.c0)))))AND(((t0.c0) IS TRUE))) ASC  NULLS FIRST, ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN NULL ELSE v0.c0 END) ISNULL) DESC);
SELECT * FROM v0 FULL OUTER JOIN t0 ON (((rt0.c1 IN ()))IS('')) LEFT OUTER JOIN rt0 ON (- (TRIM(t0.c0, rt0.c2))) WHERE ((((('8躂') NOTNULL)) NOTNULL)) ORDER BY (((((t0.c0 IN ()))OR(((rt0.c2)-(v0.c0)))))AND(((t0.c0) IS TRUE))) ASC  NULLS FIRST, ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN NULL ELSE v0.c0 END) ISNULL) DESC;
SELECT ALL * FROM v0 FULL OUTER JOIN t0 ON ((('%RD' IN (v0.c0))) BETWEEN (((v0.c0)<>(v0.c0))) AND ((0.541062626359002 IN (t0.c0)))) WHERE ((((v0.c0, v0.c0, v0.c0, v0.c0, t0.c0)) BETWEEN ((v0.c0, ((((((((x'bb3b')AND('難%J^?f')))OR(v0.c0)))AND(0.24912116935043205)))OR(t0.c0)), ((t0.c0)%(t0.c0)), CAST(t0.c0 AS NUMERIC), ((v0.c0)%(t0.c0)))) AND ((((v0.c0) IS FALSE), (v0.c0 IN ()), t0.c0 COLLATE RTRIM, (((t0.c0, 0.05945299694617501, -633008915)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((t0.c0, v0.c0, v0.c0))), v0.c0)))) ORDER BY ((((t0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) IN ())  NULLS FIRST, rtreenode(((v0.c0) NOT NULL), t0.c0)  NULLS FIRST, (((((t0.c0 IN ()))AND(UPPER(v0.c0))))AND(CAST(t0.c0 AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c0, v0.c0, v0.c0, t0.c0)) BETWEEN ((v0.c0, ((((((((x'bb3b')AND('難%J^?f')))OR(v0.c0)))AND(0.24912116935043205)))OR(t0.c0)), ((t0.c0)%(t0.c0)), CAST(t0.c0 AS NUMERIC), ((v0.c0)%(t0.c0)))) AND ((((v0.c0) IS FALSE), (v0.c0 IN ()), t0.c0 COLLATE RTRIM, (((t0.c0, 0.05945299694617501, -633008915)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((t0.c0, v0.c0, v0.c0))), v0.c0)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON ((('%RD' IN (v0.c0))) BETWEEN (((v0.c0)<>(v0.c0))) AND ((0.541062626359002 IN (t0.c0)))) ORDER BY ((((t0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) IN ())  NULLS FIRST, rtreenode(((v0.c0) NOT NULL), t0.c0)  NULLS FIRST, (((((t0.c0 IN ()))AND(UPPER(v0.c0))))AND(CAST(t0.c0 AS INTEGER))) DESC  NULLS LAST);
SELECT ALL * FROM v0 FULL OUTER JOIN t0 ON ((('%RD' IN (v0.c0))) BETWEEN (((v0.c0)<>(v0.c0))) AND ((0.541062626359002 IN (t0.c0)))) WHERE ((((v0.c0, v0.c0, v0.c0, v0.c0, t0.c0)) BETWEEN ((v0.c0, ((((((((x'bb3b')AND('難%J^?f')))OR(v0.c0)))AND(0.24912116935043205)))OR(t0.c0)), ((t0.c0)%(t0.c0)), CAST(t0.c0 AS NUMERIC), ((v0.c0)%(t0.c0)))) AND ((((v0.c0) IS FALSE), (v0.c0 IN ()), t0.c0 COLLATE RTRIM, (((t0.c0, 0.05945299694617501, -633008915)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((t0.c0, v0.c0, v0.c0))), v0.c0)))) ORDER BY ((((t0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) IN ())  NULLS FIRST, rtreenode(((v0.c0) NOT NULL), t0.c0)  NULLS FIRST, (((((t0.c0 IN ()))AND(UPPER(v0.c0))))AND(CAST(t0.c0 AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c0, v0.c0, v0.c0, t0.c0)) BETWEEN ((v0.c0, ((((((((x'bb3b')AND('難%J^?f')))OR(v0.c0)))AND(0.24912116935043205)))OR(t0.c0)), ((t0.c0)%(t0.c0)), CAST(t0.c0 AS NUMERIC), ((v0.c0)%(t0.c0)))) AND ((((v0.c0) IS FALSE), (v0.c0 IN ()), t0.c0 COLLATE RTRIM, (((t0.c0, 0.05945299694617501, -633008915)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((t0.c0, v0.c0, v0.c0))), v0.c0)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON ((('%RD' IN (v0.c0))) BETWEEN (((v0.c0)<>(v0.c0))) AND ((0.541062626359002 IN (t0.c0)))) ORDER BY ((((t0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) IN ())  NULLS FIRST, rtreenode(((v0.c0) NOT NULL), t0.c0)  NULLS FIRST, (((((t0.c0 IN ()))AND(UPPER(v0.c0))))AND(CAST(t0.c0 AS INTEGER))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END AS TEXT)) ORDER BY v0.c0 ASC  NULLS LAST, (((v0.c0)*(NULL)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END AS TEXT)) IS TRUE)  as count FROM v0, rt0 ORDER BY v0.c0 ASC  NULLS LAST, (((v0.c0)*(NULL)) IN ()));
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END AS TEXT)) ORDER BY v0.c0 ASC  NULLS LAST, (((v0.c0)*(NULL)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END AS TEXT)) IS TRUE)  as count FROM v0, rt0 ORDER BY v0.c0 ASC  NULLS LAST, (((v0.c0)*(NULL)) IN ()));
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END AS TEXT)) ORDER BY v0.c0 ASC  NULLS LAST, (((v0.c0)*(NULL)) IN ());
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN t0 ON (CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END IN ()) WHERE (CASE ((((t0.c0)AND(vt1.c0)))OR(t0.c0))  WHEN t0.c0 THEN vt1.c0 END) ORDER BY (((t0.c0)) NOT BETWEEN ((NULL)) AND ((x''))) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((t0.c0)AND(vt1.c0)))OR(t0.c0))  WHEN t0.c0 THEN vt1.c0 END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON (CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END IN ()) ORDER BY (((t0.c0)) NOT BETWEEN ((NULL)) AND ((x''))) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN t0 ON (CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END IN ()) WHERE (CASE ((((t0.c0)AND(vt1.c0)))OR(t0.c0))  WHEN t0.c0 THEN vt1.c0 END) ORDER BY (((t0.c0)) NOT BETWEEN ((NULL)) AND ((x''))) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((t0.c0)AND(vt1.c0)))OR(t0.c0))  WHEN t0.c0 THEN vt1.c0 END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON (CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END IN ()) ORDER BY (((t0.c0)) NOT BETWEEN ((NULL)) AND ((x''))) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN t0 ON (CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END IN ()) WHERE (CASE ((((t0.c0)AND(vt1.c0)))OR(t0.c0))  WHEN t0.c0 THEN vt1.c0 END) ORDER BY (((t0.c0)) NOT BETWEEN ((NULL)) AND ((x''))) COLLATE NOCASE ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((((((t0.c0)OR(t0.c0)))AND(t0.c0)))) AND (((t0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((((((t0.c0)OR(t0.c0)))AND(t0.c0)))) AND (((t0.c0 IN ()))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((((((t0.c0)OR(t0.c0)))AND(t0.c0)))) AND (((t0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((((((t0.c0)OR(t0.c0)))AND(t0.c0)))) AND (((t0.c0 IN ()))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((((((t0.c0)OR(t0.c0)))AND(t0.c0)))) AND (((t0.c0 IN ())))));
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY vt1.c0  NULLS LAST, ((vt1.c0) NOTNULL) COLLATE RTRIM DESC  NULLS LAST, ((((vt1.c0)IS NOT(vt1.c0))) NOT BETWEEN ((((vt1.c0))<((0X41c58c70)))) AND (vt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS LAST, ((vt1.c0) NOTNULL) COLLATE RTRIM DESC  NULLS LAST, ((((vt1.c0)IS NOT(vt1.c0))) NOT BETWEEN ((((vt1.c0))<((0X41c58c70)))) AND (vt1.c0))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY vt1.c0  NULLS LAST, ((vt1.c0) NOTNULL) COLLATE RTRIM DESC  NULLS LAST, ((((vt1.c0)IS NOT(vt1.c0))) NOT BETWEEN ((((vt1.c0))<((0X41c58c70)))) AND (vt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS LAST, ((vt1.c0) NOTNULL) COLLATE RTRIM DESC  NULLS LAST, ((((vt1.c0)IS NOT(vt1.c0))) NOT BETWEEN ((((vt1.c0))<((0X41c58c70)))) AND (vt1.c0))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY vt1.c0  NULLS LAST, ((vt1.c0) NOTNULL) COLLATE RTRIM DESC  NULLS LAST, ((((vt1.c0)IS NOT(vt1.c0))) NOT BETWEEN ((((vt1.c0))<((0X41c58c70)))) AND (vt1.c0))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0, vt1, v0 WHERE (CAST(TYPEOF(v0.c0) AS BLOB)) ORDER BY (NOT (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((CAST(TYPEOF(v0.c0) AS BLOB)) IS TRUE)  as count FROM rt0, t0, vt1, v0 ORDER BY (NOT (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0, t0, vt1, v0 WHERE (CAST(TYPEOF(v0.c0) AS BLOB)) ORDER BY (NOT (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((CAST(TYPEOF(v0.c0) AS BLOB)) IS TRUE)  as count FROM rt0, t0, vt1, v0 ORDER BY (NOT (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0, t0, vt1, v0 WHERE (CAST(TYPEOF(v0.c0) AS BLOB)) ORDER BY (NOT (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))));
SELECT * FROM t0, vt1, rt0 WHERE (CAST(rt0.c1 AS NUMERIC)) ORDER BY CAST(((-1.292461248E9) BETWEEN (rt0.c1) AND (vt1.c0)) AS BLOB)  NULLS LAST, (+ (((((rt0.c0)OR(t0.c0)))AND(rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS NUMERIC)) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY CAST(((-1.292461248E9) BETWEEN (rt0.c1) AND (vt1.c0)) AS BLOB)  NULLS LAST, (+ (((((rt0.c0)OR(t0.c0)))AND(rt0.c1)))) DESC  NULLS LAST);
SELECT * FROM t0, vt1, rt0 WHERE (CAST(rt0.c1 AS NUMERIC)) ORDER BY CAST(((-1.292461248E9) BETWEEN (rt0.c1) AND (vt1.c0)) AS BLOB)  NULLS LAST, (+ (((((rt0.c0)OR(t0.c0)))AND(rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS NUMERIC)) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY CAST(((-1.292461248E9) BETWEEN (rt0.c1) AND (vt1.c0)) AS BLOB)  NULLS LAST, (+ (((((rt0.c0)OR(t0.c0)))AND(rt0.c1)))) DESC  NULLS LAST);
SELECT * FROM t0, vt1, rt0 WHERE (CAST(rt0.c1 AS NUMERIC)) ORDER BY CAST(((-1.292461248E9) BETWEEN (rt0.c1) AND (vt1.c0)) AS BLOB)  NULLS LAST, (+ (((((rt0.c0)OR(t0.c0)))AND(rt0.c1)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((((rt0.c2)IS NOT(vt1.c0)))OR(((vt1.c0) IS TRUE))))OR(((vt1.c0)>(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)IS NOT(vt1.c0)))OR(((vt1.c0) IS TRUE))))OR(((vt1.c0)>(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((((rt0.c2)IS NOT(vt1.c0)))OR(((vt1.c0) IS TRUE))))OR(((vt1.c0)>(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)IS NOT(vt1.c0)))OR(((vt1.c0) IS TRUE))))OR(((vt1.c0)>(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((((rt0.c2)IS NOT(vt1.c0)))OR(((vt1.c0) IS TRUE))))OR(((vt1.c0)>(rt0.c1)))));
SELECT * FROM rt0 WHERE (NULL) ORDER BY ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END) NOT BETWEEN ((+ (rt0.c2))) AND (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)) ASC, ((NULLIF(DISTINCT rt0.c2, rt0.c2)) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END) NOT BETWEEN ((+ (rt0.c2))) AND (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)) ASC, ((NULLIF(DISTINCT rt0.c2, rt0.c2)) NOTNULL)  NULLS LAST);
SELECT * FROM rt0 WHERE (NULL) ORDER BY ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END) NOT BETWEEN ((+ (rt0.c2))) AND (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)) ASC, ((NULLIF(DISTINCT rt0.c2, rt0.c2)) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END) NOT BETWEEN ((+ (rt0.c2))) AND (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)) ASC, ((NULLIF(DISTINCT rt0.c2, rt0.c2)) NOTNULL)  NULLS LAST);
SELECT * FROM rt0 WHERE (NULL) ORDER BY ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END) NOT BETWEEN ((+ (rt0.c2))) AND (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)) ASC, ((NULLIF(DISTINCT rt0.c2, rt0.c2)) NOTNULL)  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((((+ (rt0.c0)))GLOB(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c0)))GLOB(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((+ (rt0.c0)))GLOB(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c0)))GLOB(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((+ (rt0.c0)))GLOB(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))));
SELECT * FROM vt1, v0 WHERE (((TRIM(DISTINCT vt1.c0, v0.c0)) NOT BETWEEN ((v0.c0 IN (vt1.c0))) AND (((v0.c0)+(v0.c0))))) ORDER BY CAST((((vt1.c0))>=((v0.c0))) AS BLOB)  NULLS FIRST, CAST(CAST(vt1.c0 AS REAL) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt1.c0, v0.c0)) NOT BETWEEN ((v0.c0 IN (vt1.c0))) AND (((v0.c0)+(v0.c0))))) IS TRUE)  as count FROM vt1, v0 ORDER BY CAST((((vt1.c0))>=((v0.c0))) AS BLOB)  NULLS FIRST, CAST(CAST(vt1.c0 AS REAL) AS BLOB)  NULLS FIRST);
SELECT * FROM vt1, v0 WHERE (((TRIM(DISTINCT vt1.c0, v0.c0)) NOT BETWEEN ((v0.c0 IN (vt1.c0))) AND (((v0.c0)+(v0.c0))))) ORDER BY CAST((((vt1.c0))>=((v0.c0))) AS BLOB)  NULLS FIRST, CAST(CAST(vt1.c0 AS REAL) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt1.c0, v0.c0)) NOT BETWEEN ((v0.c0 IN (vt1.c0))) AND (((v0.c0)+(v0.c0))))) IS TRUE)  as count FROM vt1, v0 ORDER BY CAST((((vt1.c0))>=((v0.c0))) AS BLOB)  NULLS FIRST, CAST(CAST(vt1.c0 AS REAL) AS BLOB)  NULLS FIRST);
SELECT * FROM vt1, v0 WHERE (((TRIM(DISTINCT vt1.c0, v0.c0)) NOT BETWEEN ((v0.c0 IN (vt1.c0))) AND (((v0.c0)+(v0.c0))))) ORDER BY CAST((((vt1.c0))>=((v0.c0))) AS BLOB)  NULLS FIRST, CAST(CAST(vt1.c0 AS REAL) AS BLOB)  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt1 LEFT OUTER JOIN rt0 ON (((vt1.c0)&(t0.c0)) IN ()) RIGHT OUTER JOIN t0 ON (+ (vt1.c0)) COLLATE RTRIM WHERE ((((t0.c0 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ())) ISNULL)) IS TRUE)  as count FROM v0, vt1 LEFT OUTER JOIN rt0 ON (((vt1.c0)&(t0.c0)) IN ()) RIGHT OUTER JOIN t0 ON (+ (vt1.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM v0, vt1 LEFT OUTER JOIN rt0 ON (((vt1.c0)&(t0.c0)) IN ()) RIGHT OUTER JOIN t0 ON (+ (vt1.c0)) COLLATE RTRIM WHERE ((((t0.c0 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ())) ISNULL)) IS TRUE)  as count FROM v0, vt1 LEFT OUTER JOIN rt0 ON (((vt1.c0)&(t0.c0)) IN ()) RIGHT OUTER JOIN t0 ON (+ (vt1.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM v0, vt1 LEFT OUTER JOIN rt0 ON (((vt1.c0)&(t0.c0)) IN ()) RIGHT OUTER JOIN t0 ON (+ (vt1.c0)) COLLATE RTRIM WHERE ((((t0.c0 IN ())) ISNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT COUNT(*) FROM v0 WHERE (((CAST('0.3646634222629944' AS NUMERIC))<((~ (v0.c0))))) ORDER BY CASE ((((v0.c0)AND(v0.c0)))OR(v0.c0))  WHEN 0.09093030268756175 THEN 0X7f87002a ELSE ((v0.c0) IS FALSE) END ASC  NULLS LAST, v0.c0;
SELECT SUM(count) FROM (SELECT ((((CAST('0.3646634222629944' AS NUMERIC))<((~ (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CASE ((((v0.c0)AND(v0.c0)))OR(v0.c0))  WHEN 0.09093030268756175 THEN 0x7f87002a ELSE ((v0.c0) IS FALSE) END ASC  NULLS LAST, v0.c0);
SELECT COUNT(*) FROM v0 WHERE (((CAST('0.3646634222629944' AS NUMERIC))<((~ (v0.c0))))) ORDER BY CASE ((((v0.c0)AND(v0.c0)))OR(v0.c0))  WHEN 0.09093030268756175 THEN 0X7f87002a ELSE ((v0.c0) IS FALSE) END ASC  NULLS LAST, v0.c0;
SELECT SUM(count) FROM (SELECT ((((CAST('0.3646634222629944' AS NUMERIC))<((~ (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CASE ((((v0.c0)AND(v0.c0)))OR(v0.c0))  WHEN 0.09093030268756175 THEN 0x7f87002a ELSE ((v0.c0) IS FALSE) END ASC  NULLS LAST, v0.c0);
SELECT COUNT(*) FROM v0 WHERE (((CAST('0.3646634222629944' AS NUMERIC))<((~ (v0.c0))))) ORDER BY CASE ((((v0.c0)AND(v0.c0)))OR(v0.c0))  WHEN 0.09093030268756175 THEN 0X7f87002a ELSE ((v0.c0) IS FALSE) END ASC  NULLS LAST, v0.c0;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST(((rt0.c2)AND(rt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)AND(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST(((rt0.c2)AND(rt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)AND(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST(((rt0.c2)AND(rt0.c0)) AS TEXT));
SELECT ALL COUNT(*) FROM v0, t0, vt1 WHERE (((CAST(t0.c0 AS REAL))IS NOT(((t0.c0)==(vt1.c0))))) ORDER BY (CAST(t0.c0 AS TEXT) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS REAL))IS NOT(((t0.c0)=(vt1.c0))))) IS TRUE)  as count FROM v0, t0, vt1 ORDER BY (CAST(t0.c0 AS TEXT) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0, vt1 WHERE (((CAST(t0.c0 AS REAL))IS NOT(((t0.c0)==(vt1.c0))))) ORDER BY (CAST(t0.c0 AS TEXT) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS REAL))IS NOT(((t0.c0)=(vt1.c0))))) IS TRUE)  as count FROM v0, t0, vt1 ORDER BY (CAST(t0.c0 AS TEXT) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0, vt1 WHERE (((CAST(t0.c0 AS REAL))IS NOT(((t0.c0)==(vt1.c0))))) ORDER BY (CAST(t0.c0 AS TEXT) IN ()) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 NOT INDEXED, v0, vt1 NATURAL JOIN rt0 WHERE ((CAST('-1494300063' AS REAL) IN (((rt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((CAST('-1494300063' AS REAL) IN (((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM t0, v0, vt1 NATURAL JOIN rt0);
SELECT COUNT(*) FROM t0 NOT INDEXED, v0, vt1 NATURAL JOIN rt0 WHERE ((CAST('-1494300063' AS REAL) IN (((rt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((CAST('-1494300063' AS REAL) IN (((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM t0, v0, vt1 NATURAL JOIN rt0);
SELECT COUNT(*) FROM t0 NOT INDEXED, v0, vt1 NATURAL JOIN rt0 WHERE ((CAST('-1494300063' AS REAL) IN (((rt0.c0) IS TRUE))));
SELECT * FROM v0, vt1, rt0 WHERE ((('\h') NOT BETWEEN ((((rt0.c2, NULL, rt0.c0))<((rt0.c2, rt0.c0, rt0.c0)))) AND ('!h0m*'))) ORDER BY (~ ('-566006037')) ASC, (((~ (rt0.c2)))OR(v0.c0))  NULLS FIRST, LIKE((- (rt0.c2)), ((rt0.c2) IS FALSE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('\h') NOT BETWEEN ((((rt0.c2, NULL, rt0.c0))<((rt0.c2, rt0.c0, rt0.c0)))) AND ('!h0m*'))) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY (~ ('-566006037')) ASC, (((~ (rt0.c2)))OR(v0.c0))  NULLS FIRST, LIKE((- (rt0.c2)), ((rt0.c2) IS FALSE))  NULLS LAST);
SELECT * FROM v0, vt1, rt0 WHERE ((('\h') NOT BETWEEN ((((rt0.c2, NULL, rt0.c0))<((rt0.c2, rt0.c0, rt0.c0)))) AND ('!h0m*'))) ORDER BY (~ ('-566006037')) ASC, (((~ (rt0.c2)))OR(v0.c0))  NULLS FIRST, LIKE((- (rt0.c2)), ((rt0.c2) IS FALSE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('\h') NOT BETWEEN ((((rt0.c2, NULL, rt0.c0))<((rt0.c2, rt0.c0, rt0.c0)))) AND ('!h0m*'))) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY (~ ('-566006037')) ASC, (((~ (rt0.c2)))OR(v0.c0))  NULLS FIRST, LIKE((- (rt0.c2)), ((rt0.c2) IS FALSE))  NULLS LAST);
SELECT * FROM v0, vt1, rt0 WHERE ((('\h') NOT BETWEEN ((((rt0.c2, NULL, rt0.c0))<((rt0.c2, rt0.c0, rt0.c0)))) AND ('!h0m*'))) ORDER BY (~ ('-566006037')) ASC, (((~ (rt0.c2)))OR(v0.c0))  NULLS FIRST, LIKE((- (rt0.c2)), ((rt0.c2) IS FALSE))  NULLS LAST;
SELECT ALL * FROM t0, v0 WHERE (NULLIF(DISTINCT ((v0.c0)||(0.5511031778694623)), ABS(v0.c0)));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT ((v0.c0)||(0.5511031778694623)), ABS(v0.c0))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (NULLIF(DISTINCT ((v0.c0)||(0.5511031778694623)), ABS(v0.c0)));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT ((v0.c0)||(0.5511031778694623)), ABS(v0.c0))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (NULLIF(DISTINCT ((v0.c0)||(0.5511031778694623)), ABS(v0.c0)));
SELECT * FROM rt0 WHERE (((((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END)AND(CASE WHEN rt0.c1 THEN rt0.c2 END)))OR((NOT (rt0.c1))))) ORDER BY (((rt0.c2))<((rt0.c1))) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END)AND(CASE WHEN rt0.c1 THEN rt0.c2 END)))OR((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2))<((rt0.c1))) COLLATE BINARY  NULLS LAST);
SELECT * FROM rt0 WHERE (((((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END)AND(CASE WHEN rt0.c1 THEN rt0.c2 END)))OR((NOT (rt0.c1))))) ORDER BY (((rt0.c2))<((rt0.c1))) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END)AND(CASE WHEN rt0.c1 THEN rt0.c2 END)))OR((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2))<((rt0.c1))) COLLATE BINARY  NULLS LAST);
SELECT * FROM rt0 WHERE (((((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END)AND(CASE WHEN rt0.c1 THEN rt0.c2 END)))OR((NOT (rt0.c1))))) ORDER BY (((rt0.c2))<((rt0.c1))) COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM rt0, v0, vt1, t0 WHERE (SUBSTR(((((((((rt0.c0)AND(vt1.c0)))OR(vt1.c0)))AND(t0.c0)))OR(rt0.c0)), LOWER(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((SUBSTR(((((((((rt0.c0)AND(vt1.c0)))OR(vt1.c0)))AND(t0.c0)))OR(rt0.c0)), LOWER(rt0.c0))) IS TRUE)  as count FROM rt0, v0, vt1, t0);
SELECT ALL * FROM rt0, v0, vt1, t0 WHERE (SUBSTR(((((((((rt0.c0)AND(vt1.c0)))OR(vt1.c0)))AND(t0.c0)))OR(rt0.c0)), LOWER(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((SUBSTR(((((((((rt0.c0)AND(vt1.c0)))OR(vt1.c0)))AND(t0.c0)))OR(rt0.c0)), LOWER(rt0.c0))) IS TRUE)  as count FROM rt0, v0, vt1, t0);
SELECT ALL * FROM rt0, v0, vt1, t0 WHERE (SUBSTR(((((((((rt0.c0)AND(vt1.c0)))OR(vt1.c0)))AND(t0.c0)))OR(rt0.c0)), LOWER(rt0.c0)));
SELECT * FROM t0, v0, vt1, rt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM t0, v0, vt1, rt0);
SELECT * FROM t0, v0, vt1, rt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM t0, v0, vt1, rt0);
SELECT * FROM t0, v0, vt1, rt0 WHERE (vt1.c0);
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON t0.c0 CROSS JOIN t0 ON (((((t0.c0)<(rt0.c2))))<=(((((vt1.c0, rt0.c0, t0.c0)) NOT BETWEEN ((v0.c0, vt1.c0, 0.17634253084262952)) AND ((vt1.c0, t0.c0, rt0.c2)))))) LEFT OUTER JOIN v0 ON CAST(QUOTE(rt0.c2) AS REAL) WHERE ('-505637987');
SELECT SUM(count) FROM (SELECT ALL (('-505637987') IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON t0.c0 CROSS JOIN t0 ON (((((t0.c0)<(rt0.c2))))<=(((((vt1.c0, rt0.c0, t0.c0)) NOT BETWEEN ((v0.c0, vt1.c0, 0.17634253084262952)) AND ((vt1.c0, t0.c0, rt0.c2)))))) LEFT OUTER JOIN v0 ON CAST(QUOTE(rt0.c2) AS REAL));
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON t0.c0 CROSS JOIN t0 ON (((((t0.c0)<(rt0.c2))))<=(((((vt1.c0, rt0.c0, t0.c0)) NOT BETWEEN ((v0.c0, vt1.c0, 0.17634253084262952)) AND ((vt1.c0, t0.c0, rt0.c2)))))) LEFT OUTER JOIN v0 ON CAST(QUOTE(rt0.c2) AS REAL) WHERE ('-505637987');
SELECT SUM(count) FROM (SELECT ALL (('-505637987') IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON t0.c0 CROSS JOIN t0 ON (((((t0.c0)<(rt0.c2))))<=(((((vt1.c0, rt0.c0, t0.c0)) NOT BETWEEN ((v0.c0, vt1.c0, 0.17634253084262952)) AND ((vt1.c0, t0.c0, rt0.c2)))))) LEFT OUTER JOIN v0 ON CAST(QUOTE(rt0.c2) AS REAL));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON rt0.c1 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON rt0.c1);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON rt0.c1 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON rt0.c1);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON rt0.c1 WHERE (rt0.c0);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE WHEN CAST(t0.c0 AS TEXT) THEN (+ (rt0.c2)) WHEN CASE rt0.c2  WHEN t0.c0 THEN rt0.c0 END THEN (t0.c0 IN (rt0.c2)) WHEN ((t0.c0)*(t0.c0)) THEN (((t0.c0))!=((rt0.c2))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(t0.c0 AS TEXT) THEN (+ (rt0.c2)) WHEN CASE rt0.c2  WHEN t0.c0 THEN rt0.c0 END THEN (t0.c0 IN (rt0.c2)) WHEN ((t0.c0)*(t0.c0)) THEN (((t0.c0))!=((rt0.c2))) END) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE WHEN CAST(t0.c0 AS TEXT) THEN (+ (rt0.c2)) WHEN CASE rt0.c2  WHEN t0.c0 THEN rt0.c0 END THEN (t0.c0 IN (rt0.c2)) WHEN ((t0.c0)*(t0.c0)) THEN (((t0.c0))!=((rt0.c2))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(t0.c0 AS TEXT) THEN (+ (rt0.c2)) WHEN CASE rt0.c2  WHEN t0.c0 THEN rt0.c0 END THEN (t0.c0 IN (rt0.c2)) WHEN ((t0.c0)*(t0.c0)) THEN (((t0.c0))!=((rt0.c2))) END) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE WHEN CAST(t0.c0 AS TEXT) THEN (+ (rt0.c2)) WHEN CASE rt0.c2  WHEN t0.c0 THEN rt0.c0 END THEN (t0.c0 IN (rt0.c2)) WHEN ((t0.c0)*(t0.c0)) THEN (((t0.c0))!=((rt0.c2))) END);
SELECT * FROM rt0, vt1 WHERE ((('z%q7&')IS(((((((((rt0.c2)AND(vt1.c0)))AND(rt0.c1)))AND(rt0.c2)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((('z%q7&')IS(((((((((rt0.c2)AND(vt1.c0)))AND(rt0.c1)))AND(rt0.c2)))AND(vt1.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((('z%q7&')IS(((((((((rt0.c2)AND(vt1.c0)))AND(rt0.c1)))AND(rt0.c2)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((('z%q7&')IS(((((((((rt0.c2)AND(vt1.c0)))AND(rt0.c1)))AND(rt0.c2)))AND(vt1.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((('z%q7&')IS(((((((((rt0.c2)AND(vt1.c0)))AND(rt0.c1)))AND(rt0.c2)))AND(vt1.c0)))));
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (((0.13284751766237524)OR(ABS(vt1.c0)))) ORDER BY (((vt1.c0)IS NOT(x'')) IN (CASE WHEN vt1.c0 THEN rt0.c1 END, rt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((((0.13284751766237524)OR(ABS(vt1.c0)))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1 ORDER BY (((vt1.c0)IS NOT(x'')) IN (CASE WHEN vt1.c0 THEN rt0.c1 END, rt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (((0.13284751766237524)OR(ABS(vt1.c0)))) ORDER BY (((vt1.c0)IS NOT(x'')) IN (CASE WHEN vt1.c0 THEN rt0.c1 END, rt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((((0.13284751766237524)OR(ABS(vt1.c0)))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1 ORDER BY (((vt1.c0)IS NOT(x'')) IN (CASE WHEN vt1.c0 THEN rt0.c1 END, rt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (((0.13284751766237524)OR(ABS(vt1.c0)))) ORDER BY (((vt1.c0)IS NOT(x'')) IN (CASE WHEN vt1.c0 THEN rt0.c1 END, rt0.c0 COLLATE NOCASE));
SELECT * FROM vt1 WHERE (((((((((vt1.c0 COLLATE BINARY)OR(vt1.c0)))OR(vt1.c0 COLLATE RTRIM)))OR(0.1925946582588013)))AND(vt1.c0))) ORDER BY DATE(CAST(vt1.c0 AS NUMERIC), -5.56227864E8, ABS('-496929876')), '1788427178' COLLATE NOCASE COLLATE NOCASE DESC  NULLS LAST, (- (((vt1.c0) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0 COLLATE BINARY)OR(vt1.c0)))OR(vt1.c0 COLLATE RTRIM)))OR(0.1925946582588013)))AND(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY DATE(CAST(vt1.c0 AS NUMERIC), -5.56227864E8, ABS('-496929876')), '1788427178' COLLATE NOCASE COLLATE NOCASE DESC  NULLS LAST, (- (((vt1.c0) NOT NULL))) DESC);
SELECT * FROM vt1 WHERE (((((((((vt1.c0 COLLATE BINARY)OR(vt1.c0)))OR(vt1.c0 COLLATE RTRIM)))OR(0.1925946582588013)))AND(vt1.c0))) ORDER BY DATE(CAST(vt1.c0 AS NUMERIC), -5.56227864E8, ABS('-496929876')), '1788427178' COLLATE NOCASE COLLATE NOCASE DESC  NULLS LAST, (- (((vt1.c0) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0 COLLATE BINARY)OR(vt1.c0)))OR(vt1.c0 COLLATE RTRIM)))OR(0.1925946582588013)))AND(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY DATE(CAST(vt1.c0 AS NUMERIC), -5.56227864E8, ABS('-496929876')), '1788427178' COLLATE NOCASE COLLATE NOCASE DESC  NULLS LAST, (- (((vt1.c0) NOT NULL))) DESC);
SELECT * FROM vt1 WHERE (((((((((vt1.c0 COLLATE BINARY)OR(vt1.c0)))OR(vt1.c0 COLLATE RTRIM)))OR(0.1925946582588013)))AND(vt1.c0))) ORDER BY DATE(CAST(vt1.c0 AS NUMERIC), -5.56227864E8, ABS('-496929876')), '1788427178' COLLATE NOCASE COLLATE NOCASE DESC  NULLS LAST, (- (((vt1.c0) NOT NULL))) DESC;
SELECT * FROM rt0 WHERE (((NULL)AND((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((NULL)AND((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((NULL)AND((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((NULL)AND((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((NULL)AND((rt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM v0, vt1, rt0, t0 WHERE ('1758020953');
SELECT SUM(count) FROM (SELECT ALL (('1758020953') IS TRUE)  as count FROM v0, vt1, rt0, t0);
SELECT ALL COUNT(*) FROM v0, vt1, rt0, t0 WHERE ('1758020953');
SELECT SUM(count) FROM (SELECT ALL (('1758020953') IS TRUE)  as count FROM v0, vt1, rt0, t0);
SELECT ALL COUNT(*) FROM v0, vt1, rt0, t0 WHERE ('1758020953');
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE WHEN NULL THEN rt0.c1 COLLATE NOCASE WHEN (+ (v0.c0)) THEN ((rt0.c0) NOTNULL) WHEN ((((((((v0.c0)OR(v0.c0)))OR(rt0.c0)))OR(NULL)))AND(NULL)) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END ELSE ((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN rt0.c1 COLLATE NOCASE WHEN (+ (v0.c0)) THEN ((rt0.c0) NOTNULL) WHEN ((((((((v0.c0)OR(v0.c0)))OR(rt0.c0)))OR(NULL)))AND(NULL)) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END ELSE ((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) END) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE WHEN NULL THEN rt0.c1 COLLATE NOCASE WHEN (+ (v0.c0)) THEN ((rt0.c0) NOTNULL) WHEN ((((((((v0.c0)OR(v0.c0)))OR(rt0.c0)))OR(NULL)))AND(NULL)) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END ELSE ((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN rt0.c1 COLLATE NOCASE WHEN (+ (v0.c0)) THEN ((rt0.c0) NOTNULL) WHEN ((((((((v0.c0)OR(v0.c0)))OR(rt0.c0)))OR(NULL)))AND(NULL)) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END ELSE ((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) END) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE WHEN NULL THEN rt0.c1 COLLATE NOCASE WHEN (+ (v0.c0)) THEN ((rt0.c0) NOTNULL) WHEN ((((((((v0.c0)OR(v0.c0)))OR(rt0.c0)))OR(NULL)))AND(NULL)) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END ELSE ((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) END);
SELECT COUNT(*) FROM vt1, v0 CROSS JOIN t0 ON (v0.c0 IN (vt1.c0)) COLLATE RTRIM WHERE ((CAST(v0.c0 AS BLOB) IN ())) ORDER BY ((((v0.c0) BETWEEN (vt1.c0) AND (v0.c0)))IS(v0.c0));
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM vt1, v0 CROSS JOIN t0 ON (v0.c0 IN (vt1.c0)) COLLATE RTRIM ORDER BY ((((v0.c0) BETWEEN (vt1.c0) AND (v0.c0)))IS(v0.c0)));
SELECT COUNT(*) FROM vt1, v0 CROSS JOIN t0 ON (v0.c0 IN (vt1.c0)) COLLATE RTRIM WHERE ((CAST(v0.c0 AS BLOB) IN ())) ORDER BY ((((v0.c0) BETWEEN (vt1.c0) AND (v0.c0)))IS(v0.c0));
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM vt1, v0 CROSS JOIN t0 ON (v0.c0 IN (vt1.c0)) COLLATE RTRIM ORDER BY ((((v0.c0) BETWEEN (vt1.c0) AND (v0.c0)))IS(v0.c0)));
SELECT COUNT(*) FROM vt1, v0 CROSS JOIN t0 ON (v0.c0 IN (vt1.c0)) COLLATE RTRIM WHERE ((CAST(v0.c0 AS BLOB) IN ())) ORDER BY ((((v0.c0) BETWEEN (vt1.c0) AND (v0.c0)))IS(v0.c0));
SELECT ALL * FROM vt1 WHERE ((NOT (vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((NOT (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((NOT (vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((NOT (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((NOT (vt1.c0)) COLLATE BINARY);
SELECT ALL * FROM rt0, vt1 WHERE (IFNULL(DISTINCT (rt0.c2 IN ()), ((rt0.c2)<=(rt0.c0)))) ORDER BY '' DESC;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT (rt0.c2 IN ()), ((rt0.c2)<=(rt0.c0)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY '' DESC);
SELECT ALL * FROM rt0, vt1 WHERE (IFNULL(DISTINCT (rt0.c2 IN ()), ((rt0.c2)<=(rt0.c0)))) ORDER BY '' DESC;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT (rt0.c2 IN ()), ((rt0.c2)<=(rt0.c0)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY '' DESC);
SELECT ALL * FROM rt0, vt1 WHERE (IFNULL(DISTINCT (rt0.c2 IN ()), ((rt0.c2)<=(rt0.c0)))) ORDER BY '' DESC;
SELECT COUNT(*) FROM rt0, t0 INNER JOIN v0 ON CASE WHEN CAST(rt0.c1 AS TEXT) THEN SUBSTR(vt1.c0, x'') ELSE ((rt0.c2)|(t0.c0)) END INNER JOIN vt1 ON (((rt0.c2, t0.c0, rt0.c0)) NOT BETWEEN ((((((rt0.c2)OR(rt0.c2)))AND(vt1.c0)), rt0.c0 COLLATE BINARY, ((((rt0.c2)OR(vt1.c0)))OR('\c')))) AND ((vt1.c0 COLLATE NOCASE, rt0.c1, rt0.c2))) WHERE (((t0.c0) BETWEEN ((~ (v0.c0))) AND ((- (rt0.c1))))) ORDER BY CAST(((rt0.c1) IS TRUE) AS NUMERIC) ASC, CAST(((t0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0) BETWEEN ((~ (v0.c0))) AND ((- (rt0.c1))))) IS TRUE)  as count FROM rt0, t0 INNER JOIN v0 ON CASE WHEN CAST(rt0.c1 AS TEXT) THEN SUBSTR(vt1.c0, x'') ELSE ((rt0.c2)|(t0.c0)) END INNER JOIN vt1 ON (((rt0.c2, t0.c0, rt0.c0)) NOT BETWEEN ((((((rt0.c2)OR(rt0.c2)))AND(vt1.c0)), rt0.c0 COLLATE BINARY, ((((rt0.c2)OR(vt1.c0)))OR('\c')))) AND ((vt1.c0 COLLATE NOCASE, rt0.c1, rt0.c2))) ORDER BY CAST(((rt0.c1) IS TRUE) AS NUMERIC) ASC, CAST(((t0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) AS TEXT) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 INNER JOIN v0 ON CASE WHEN CAST(rt0.c1 AS TEXT) THEN SUBSTR(vt1.c0, x'') ELSE ((rt0.c2)|(t0.c0)) END INNER JOIN vt1 ON (((rt0.c2, t0.c0, rt0.c0)) NOT BETWEEN ((((((rt0.c2)OR(rt0.c2)))AND(vt1.c0)), rt0.c0 COLLATE BINARY, ((((rt0.c2)OR(vt1.c0)))OR('\c')))) AND ((vt1.c0 COLLATE NOCASE, rt0.c1, rt0.c2))) WHERE (((t0.c0) BETWEEN ((~ (v0.c0))) AND ((- (rt0.c1))))) ORDER BY CAST(((rt0.c1) IS TRUE) AS NUMERIC) ASC, CAST(((t0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0) BETWEEN ((~ (v0.c0))) AND ((- (rt0.c1))))) IS TRUE)  as count FROM rt0, t0 INNER JOIN v0 ON CASE WHEN CAST(rt0.c1 AS TEXT) THEN SUBSTR(vt1.c0, x'') ELSE ((rt0.c2)|(t0.c0)) END INNER JOIN vt1 ON (((rt0.c2, t0.c0, rt0.c0)) NOT BETWEEN ((((((rt0.c2)OR(rt0.c2)))AND(vt1.c0)), rt0.c0 COLLATE BINARY, ((((rt0.c2)OR(vt1.c0)))OR('\c')))) AND ((vt1.c0 COLLATE NOCASE, rt0.c1, rt0.c2))) ORDER BY CAST(((rt0.c1) IS TRUE) AS NUMERIC) ASC, CAST(((t0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) AS TEXT) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 INNER JOIN v0 ON CASE WHEN CAST(rt0.c1 AS TEXT) THEN SUBSTR(vt1.c0, x'') ELSE ((rt0.c2)|(t0.c0)) END INNER JOIN vt1 ON (((rt0.c2, t0.c0, rt0.c0)) NOT BETWEEN ((((((rt0.c2)OR(rt0.c2)))AND(vt1.c0)), rt0.c0 COLLATE BINARY, ((((rt0.c2)OR(vt1.c0)))OR('\c')))) AND ((vt1.c0 COLLATE NOCASE, rt0.c1, rt0.c2))) WHERE (((t0.c0) BETWEEN ((~ (v0.c0))) AND ((- (rt0.c1))))) ORDER BY CAST(((rt0.c1) IS TRUE) AS NUMERIC) ASC, CAST(((t0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) AS TEXT) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt1, rt0 WHERE (((json_valid(v0.c0))IS((v0.c0 IN (rt0.c2))))) ORDER BY ((PRINTF(rt0.c1, rt0.c0, vt1.c0)) BETWEEN (CAST(v0.c0 AS TEXT)) AND (((((rt0.c0)AND(rt0.c1)))AND(v0.c0)))), (((((rt0.c1)AND(rt0.c1)))OR(v0.c0)) IN (((v0.c0)%(rt0.c0)), ((rt0.c2) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((json_valid(v0.c0))IS((v0.c0 IN (rt0.c2))))) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY ((PRINTF(rt0.c1, rt0.c0, vt1.c0)) BETWEEN (CAST(v0.c0 AS TEXT)) AND (((((rt0.c0)AND(rt0.c1)))AND(v0.c0)))), (((((rt0.c1)AND(rt0.c1)))OR(v0.c0)) IN (((v0.c0)%(rt0.c0)), ((rt0.c2) NOTNULL))) DESC);
SELECT ALL COUNT(*) FROM v0, vt1, rt0 WHERE (((json_valid(v0.c0))IS((v0.c0 IN (rt0.c2))))) ORDER BY ((PRINTF(rt0.c1, rt0.c0, vt1.c0)) BETWEEN (CAST(v0.c0 AS TEXT)) AND (((((rt0.c0)AND(rt0.c1)))AND(v0.c0)))), (((((rt0.c1)AND(rt0.c1)))OR(v0.c0)) IN (((v0.c0)%(rt0.c0)), ((rt0.c2) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((json_valid(v0.c0))IS((v0.c0 IN (rt0.c2))))) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY ((PRINTF(rt0.c1, rt0.c0, vt1.c0)) BETWEEN (CAST(v0.c0 AS TEXT)) AND (((((rt0.c0)AND(rt0.c1)))AND(v0.c0)))), (((((rt0.c1)AND(rt0.c1)))OR(v0.c0)) IN (((v0.c0)%(rt0.c0)), ((rt0.c2) NOTNULL))) DESC);
SELECT ALL COUNT(*) FROM v0, vt1, rt0 WHERE (((json_valid(v0.c0))IS((v0.c0 IN (rt0.c2))))) ORDER BY ((PRINTF(rt0.c1, rt0.c0, vt1.c0)) BETWEEN (CAST(v0.c0 AS TEXT)) AND (((((rt0.c0)AND(rt0.c1)))AND(v0.c0)))), (((((rt0.c1)AND(rt0.c1)))OR(v0.c0)) IN (((v0.c0)%(rt0.c0)), ((rt0.c2) NOTNULL))) DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (((((vt1.c0)GLOB(vt1.c0))))<((((vt1.c0) IS FALSE)))) DESC  NULLS LAST, CASE WHEN ((vt1.c0) IS TRUE) THEN NULL COLLATE NOCASE ELSE CASE vt1.c0  WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '755711276' END END DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)GLOB(vt1.c0))))<((((vt1.c0) IS FALSE)))) DESC  NULLS LAST, CASE WHEN ((vt1.c0) IS TRUE) THEN NULL COLLATE NOCASE ELSE CASE vt1.c0  WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '755711276' END END DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (((((vt1.c0)GLOB(vt1.c0))))<((((vt1.c0) IS FALSE)))) DESC  NULLS LAST, CASE WHEN ((vt1.c0) IS TRUE) THEN NULL COLLATE NOCASE ELSE CASE vt1.c0  WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '755711276' END END DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)GLOB(vt1.c0))))<((((vt1.c0) IS FALSE)))) DESC  NULLS LAST, CASE WHEN ((vt1.c0) IS TRUE) THEN NULL COLLATE NOCASE ELSE CASE vt1.c0  WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '755711276' END END DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (((((vt1.c0)GLOB(vt1.c0))))<((((vt1.c0) IS FALSE)))) DESC  NULLS LAST, CASE WHEN ((vt1.c0) IS TRUE) THEN NULL COLLATE NOCASE ELSE CASE vt1.c0  WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '755711276' END END DESC;
SELECT COUNT(*) FROM rt0, v0, t0 WHERE (CASE ((NULL)||(rt0.c1))  WHEN (~ (rt0.c1)) THEN (rt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((NULL)||(rt0.c1))  WHEN (~ (rt0.c1)) THEN (rt0.c1 IN ()) END) IS TRUE)  as count FROM rt0, v0, t0);
SELECT COUNT(*) FROM rt0, v0, t0 WHERE (CASE ((NULL)||(rt0.c1))  WHEN (~ (rt0.c1)) THEN (rt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((NULL)||(rt0.c1))  WHEN (~ (rt0.c1)) THEN (rt0.c1 IN ()) END) IS TRUE)  as count FROM rt0, v0, t0);
SELECT COUNT(*) FROM rt0, v0, t0 WHERE (CASE ((NULL)||(rt0.c1))  WHEN (~ (rt0.c1)) THEN (rt0.c1 IN ()) END);
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE ((TRIM(rt0.c1, rt0.c2) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((TRIM(rt0.c1, rt0.c2) IN ())) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE ((TRIM(rt0.c1, rt0.c2) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((TRIM(rt0.c1, rt0.c2) IN ())) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE ((TRIM(rt0.c1, rt0.c2) IN ()));
SELECT * FROM rt0, v0 WHERE (CASE load_extension(rt0.c2, rt0.c1)  WHEN ((rt0.c0)%(rt0.c1)) THEN '0.34393675083994246' ELSE ((v0.c0) ISNULL) END) ORDER BY rt0.c0 ASC, (ABS(DISTINCT rt0.c2) IN (((rt0.c2) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE load_extension(rt0.c2, rt0.c1)  WHEN ((rt0.c0)%(rt0.c1)) THEN '0.34393675083994246' ELSE ((v0.c0) ISNULL) END) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c0 ASC, (ABS(DISTINCT rt0.c2) IN (((rt0.c2) IS FALSE)))  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (CASE load_extension(rt0.c2, rt0.c1)  WHEN ((rt0.c0)%(rt0.c1)) THEN '0.34393675083994246' ELSE ((v0.c0) ISNULL) END) ORDER BY rt0.c0 ASC, (ABS(DISTINCT rt0.c2) IN (((rt0.c2) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE load_extension(rt0.c2, rt0.c1)  WHEN ((rt0.c0)%(rt0.c1)) THEN '0.34393675083994246' ELSE ((v0.c0) ISNULL) END) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c0 ASC, (ABS(DISTINCT rt0.c2) IN (((rt0.c2) IS FALSE)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt1, rt0, t0 WHERE (((((((((vt1.c0 COLLATE RTRIM)AND((((rt0.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0))))))AND(vt1.c0 COLLATE BINARY)))OR(((rt0.c2)*(rt0.c1)))))AND(((vt1.c0) NOT NULL)))) ORDER BY NULL ASC, (LIKELIHOOD(DISTINCT v0.c0, 0.5851342853072453) IN (((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0 COLLATE RTRIM)AND((((rt0.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0))))))AND(vt1.c0 COLLATE BINARY)))OR(((rt0.c2)*(rt0.c1)))))AND(((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM v0, vt1, rt0 NOT INDEXED, t0 ORDER BY NULL ASC, (LIKELIHOOD(DISTINCT v0.c0, 0.5851342853072453) IN (((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt1, rt0, t0 WHERE (((((((((vt1.c0 COLLATE RTRIM)AND((((rt0.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0))))))AND(vt1.c0 COLLATE BINARY)))OR(((rt0.c2)*(rt0.c1)))))AND(((vt1.c0) NOT NULL)))) ORDER BY NULL ASC, (LIKELIHOOD(DISTINCT v0.c0, 0.5851342853072453) IN (((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0 COLLATE RTRIM)AND((((rt0.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0))))))AND(vt1.c0 COLLATE BINARY)))OR(((rt0.c2)*(rt0.c1)))))AND(((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM v0, vt1, rt0 NOT INDEXED, t0 ORDER BY NULL ASC, (LIKELIHOOD(DISTINCT v0.c0, 0.5851342853072453) IN (((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt1, rt0, t0 WHERE (((((((((vt1.c0 COLLATE RTRIM)AND((((rt0.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0))))))AND(vt1.c0 COLLATE BINARY)))OR(((rt0.c2)*(rt0.c1)))))AND(((vt1.c0) NOT NULL)))) ORDER BY NULL ASC, (LIKELIHOOD(DISTINCT v0.c0, 0.5851342853072453) IN (((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt0, v0 CROSS JOIN t0 ON ((rt0.c2)-(rt0.c0)) COLLATE NOCASE WHERE (((((rt0.c0) IS TRUE))%(LTRIM(rt0.c1)))) ORDER BY (NOT (((((((((((((0xb1c211a)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(rt0.c2)))OR('9')))AND(t0.c0)))), ((t0.c0) ISNULL) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS TRUE))%(LTRIM(rt0.c1)))) IS TRUE)  as count FROM vt1, rt0, v0 CROSS JOIN t0 ON ((rt0.c2)-(rt0.c0)) COLLATE NOCASE ORDER BY (NOT (((((((((((((0xb1c211a)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(rt0.c2)))OR('9')))AND(t0.c0)))), ((t0.c0) ISNULL) COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0, v0 CROSS JOIN t0 ON ((rt0.c2)-(rt0.c0)) COLLATE NOCASE WHERE (((((rt0.c0) IS TRUE))%(LTRIM(rt0.c1)))) ORDER BY (NOT (((((((((((((0xb1c211a)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(rt0.c2)))OR('9')))AND(t0.c0)))), ((t0.c0) ISNULL) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS TRUE))%(LTRIM(rt0.c1)))) IS TRUE)  as count FROM vt1, rt0, v0 CROSS JOIN t0 ON ((rt0.c2)-(rt0.c0)) COLLATE NOCASE ORDER BY (NOT (((((((((((((0xb1c211a)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(rt0.c2)))OR('9')))AND(t0.c0)))), ((t0.c0) ISNULL) COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0, v0 CROSS JOIN t0 ON ((rt0.c2)-(rt0.c0)) COLLATE NOCASE WHERE (((((rt0.c0) IS TRUE))%(LTRIM(rt0.c1)))) ORDER BY (NOT (((((((((((((0xb1c211a)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(rt0.c2)))OR('9')))AND(t0.c0)))), ((t0.c0) ISNULL) COLLATE BINARY DESC  NULLS FIRST;
SELECT * FROM rt0 INNER JOIN vt1 ON (((('-2031756829') ISNULL)) NOT NULL) WHERE (QUOTE(rt0.c2 COLLATE BINARY)) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((QUOTE(rt0.c2 COLLATE BINARY)) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON (((('-2031756829') ISNULL)) NOT NULL) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))) NOT NULL)  NULLS LAST);
SELECT * FROM rt0 INNER JOIN vt1 ON (((('-2031756829') ISNULL)) NOT NULL) WHERE (QUOTE(rt0.c2 COLLATE BINARY)) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((QUOTE(rt0.c2 COLLATE BINARY)) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON (((('-2031756829') ISNULL)) NOT NULL) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))) NOT NULL)  NULLS LAST);
SELECT * FROM rt0 INNER JOIN vt1 ON (((('-2031756829') ISNULL)) NOT NULL) WHERE (QUOTE(rt0.c2 COLLATE BINARY)) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))) NOT NULL)  NULLS LAST;
SELECT COUNT(*) FROM t0, v0, rt0, vt1 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0)GLOB(v0.c0)))) AND ((CASE rt0.c1  WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c0 END)))) ORDER BY LAST_INSERT_ROWID() DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((((v0.c0)GLOB(v0.c0)))) AND ((CASE rt0.c1  WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c0 END)))) IS TRUE)  as count FROM t0, v0, rt0, vt1 ORDER BY LAST_INSERT_ROWID() DESC);
SELECT COUNT(*) FROM t0, v0, rt0, vt1 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0)GLOB(v0.c0)))) AND ((CASE rt0.c1  WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c0 END)))) ORDER BY LAST_INSERT_ROWID() DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((((v0.c0)GLOB(v0.c0)))) AND ((CASE rt0.c1  WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c0 END)))) IS TRUE)  as count FROM t0, v0, rt0, vt1 ORDER BY LAST_INSERT_ROWID() DESC);
SELECT COUNT(*) FROM t0, v0, rt0, vt1 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0)GLOB(v0.c0)))) AND ((CASE rt0.c1  WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c0 END)))) ORDER BY LAST_INSERT_ROWID() DESC;
SELECT COUNT(*) FROM vt1, rt0, v0, t0 WHERE ((((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND (('816856425')))) BETWEEN (((rt0.c0)<>(vt1.c0))) AND (rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND (('816856425')))) BETWEEN (((rt0.c0)!=(vt1.c0))) AND (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, rt0, v0, t0);
SELECT COUNT(*) FROM vt1, rt0, v0, t0 WHERE ((((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND (('816856425')))) BETWEEN (((rt0.c0)<>(vt1.c0))) AND (rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND (('816856425')))) BETWEEN (((rt0.c0)!=(vt1.c0))) AND (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, rt0, v0, t0);
SELECT COUNT(*) FROM vt1, rt0, v0, t0 WHERE ((((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND (('816856425')))) BETWEEN (((rt0.c0)<>(vt1.c0))) AND (rt0.c1 COLLATE RTRIM)));
SELECT ALL * FROM v0 WHERE ((- (((v0.c0)<=(v0.c0))))) ORDER BY ((CAST(v0.c0 AS INTEGER)) BETWEEN (NULL) AND (TRIM(v0.c0, v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((v0.c0)<=(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS INTEGER)) BETWEEN (NULL) AND (TRIM(v0.c0, v0.c0)))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((- (((v0.c0)<=(v0.c0))))) ORDER BY ((CAST(v0.c0 AS INTEGER)) BETWEEN (NULL) AND (TRIM(v0.c0, v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((v0.c0)<=(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS INTEGER)) BETWEEN (NULL) AND (TRIM(v0.c0, v0.c0)))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((- (((v0.c0)<=(v0.c0))))) ORDER BY ((CAST(v0.c0 AS INTEGER)) BETWEEN (NULL) AND (TRIM(v0.c0, v0.c0)))  NULLS FIRST;
SELECT ALL * FROM rt0, t0 WHERE ((0.2771267792857173 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0.2771267792857173 IN ())) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((0.2771267792857173 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0.2771267792857173 IN ())) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((0.2771267792857173 IN ()));
SELECT ALL * FROM t0, v0 WHERE (CASE WHEN ((v0.c0) IS FALSE) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((0xffffffffaa145172))) WHEN (((v0.c0, v0.c0, t0.c0))>=((v0.c0, v0.c0, t0.c0))) THEN ((v0.c0)<=(t0.c0)) WHEN CAST(v0.c0 AS INTEGER) THEN ((v0.c0)LIKE(v0.c0)) END) ORDER BY ((t0.c0 COLLATE NOCASE)LIKE(t0.c0 COLLATE RTRIM))  NULLS FIRST, ((((((((v0.c0)AND(v0.c0)))AND(t0.c0)))OR(load_extension(t0.c0, v0.c0))))AND(CASE t0.c0  WHEN v0.c0 THEN t0.c0 ELSE t0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0) IS FALSE) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((0Xffffffffaa145172))) WHEN (((v0.c0, v0.c0, t0.c0))>=((v0.c0, v0.c0, t0.c0))) THEN ((v0.c0)<=(t0.c0)) WHEN CAST(v0.c0 AS INTEGER) THEN ((v0.c0)LIKE(v0.c0)) END) IS TRUE)  as count FROM t0, v0 ORDER BY ((t0.c0 COLLATE NOCASE)LIKE(t0.c0 COLLATE RTRIM))  NULLS FIRST, ((((((((v0.c0)AND(v0.c0)))AND(t0.c0)))OR(load_extension(t0.c0, v0.c0))))AND(CASE t0.c0  WHEN v0.c0 THEN t0.c0 ELSE t0.c0 END)) ASC  NULLS FIRST);
SELECT ALL * FROM t0, v0 WHERE (CASE WHEN ((v0.c0) IS FALSE) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((0xffffffffaa145172))) WHEN (((v0.c0, v0.c0, t0.c0))>=((v0.c0, v0.c0, t0.c0))) THEN ((v0.c0)<=(t0.c0)) WHEN CAST(v0.c0 AS INTEGER) THEN ((v0.c0)LIKE(v0.c0)) END) ORDER BY ((t0.c0 COLLATE NOCASE)LIKE(t0.c0 COLLATE RTRIM))  NULLS FIRST, ((((((((v0.c0)AND(v0.c0)))AND(t0.c0)))OR(load_extension(t0.c0, v0.c0))))AND(CASE t0.c0  WHEN v0.c0 THEN t0.c0 ELSE t0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0) IS FALSE) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((0Xffffffffaa145172))) WHEN (((v0.c0, v0.c0, t0.c0))>=((v0.c0, v0.c0, t0.c0))) THEN ((v0.c0)<=(t0.c0)) WHEN CAST(v0.c0 AS INTEGER) THEN ((v0.c0)LIKE(v0.c0)) END) IS TRUE)  as count FROM t0, v0 ORDER BY ((t0.c0 COLLATE NOCASE)LIKE(t0.c0 COLLATE RTRIM))  NULLS FIRST, ((((((((v0.c0)AND(v0.c0)))AND(t0.c0)))OR(load_extension(t0.c0, v0.c0))))AND(CASE t0.c0  WHEN v0.c0 THEN t0.c0 ELSE t0.c0 END)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) IS FALSE))<>(CAST('փtyev㍍' AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) IS FALSE))!=(CAST('փtyev㍍' AS NUMERIC)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) IS FALSE))<>(CAST('փtyev㍍' AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) IS FALSE))!=(CAST('փtyev㍍' AS NUMERIC)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) IS FALSE))<>(CAST('փtyev㍍' AS NUMERIC))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((TOTAL_CHANGES()))<>((t0.c0 COLLATE NOCASE)))) ORDER BY (((v0.c0, t0.c0, v0.c0))<((t0.c0, t0.c0, t0.c0))) COLLATE NOCASE  NULLS LAST, (- (((v0.c0)/(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((TOTAL_CHANGES()))<>((t0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM v0, t0 ORDER BY (((v0.c0, t0.c0, v0.c0))<((t0.c0, t0.c0, t0.c0))) COLLATE NOCASE  NULLS LAST, (- (((v0.c0)/(v0.c0)))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((TOTAL_CHANGES()))<>((t0.c0 COLLATE NOCASE)))) ORDER BY (((v0.c0, t0.c0, v0.c0))<((t0.c0, t0.c0, t0.c0))) COLLATE NOCASE  NULLS LAST, (- (((v0.c0)/(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((TOTAL_CHANGES()))<>((t0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM v0, t0 ORDER BY (((v0.c0, t0.c0, v0.c0))<((t0.c0, t0.c0, t0.c0))) COLLATE NOCASE  NULLS LAST, (- (((v0.c0)/(v0.c0)))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((TOTAL_CHANGES()))<>((t0.c0 COLLATE NOCASE)))) ORDER BY (((v0.c0, t0.c0, v0.c0))<((t0.c0, t0.c0, t0.c0))) COLLATE NOCASE  NULLS LAST, (- (((v0.c0)/(v0.c0))));
SELECT * FROM rt0 WHERE (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE RTRIM) ORDER BY rt0.c2 DESC  NULLS LAST, (((((rt0.c1) NOT NULL)))>=((((rt0.c2)&(rt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY rt0.c2 DESC  NULLS LAST, (((((rt0.c1) NOT NULL)))>=((((rt0.c2)&(rt0.c1))))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE RTRIM) ORDER BY rt0.c2 DESC  NULLS LAST, (((((rt0.c1) NOT NULL)))>=((((rt0.c2)&(rt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY rt0.c2 DESC  NULLS LAST, (((((rt0.c1) NOT NULL)))>=((((rt0.c2)&(rt0.c1))))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE RTRIM) ORDER BY rt0.c2 DESC  NULLS LAST, (((((rt0.c1) NOT NULL)))>=((((rt0.c2)&(rt0.c1))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END IN ((+ (vt1.c0)), ((vt1.c0)&(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END IN ((+ (vt1.c0)), ((vt1.c0)&(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END IN ((+ (vt1.c0)), ((vt1.c0)&(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END IN ((+ (vt1.c0)), ((vt1.c0)&(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END IN ((+ (vt1.c0)), ((vt1.c0)&(vt1.c0)))));
SELECT * FROM rt0, t0 INNER JOIN v0 ON ((((((v0.c0)-(vt1.c0)))OR((((vt1.c0, vt1.c0, vt1.c0))==((v0.c0, rt0.c0, vt1.c0))))))OR(((vt1.c0) NOTNULL))) LEFT OUTER JOIN vt1 ON ((((json_valid(rt0.c1))AND(rt0.c0)))AND((('GN')LIKE(t0.c0)))) WHERE (((ABS(rt0.c1)) NOTNULL)) ORDER BY (((t0.c0)) BETWEEN (((((('')OR(v0.c0)))OR(rt0.c1)))) AND ((((vt1.c0) IS TRUE)))) ASC, (NOT (((rt0.c2)IS NOT('')))), CASE WHEN vt1.c0 COLLATE NOCASE THEN ((rt0.c0)>(v0.c0)) ELSE ((((((((rt0.c0)AND(v0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((ABS(rt0.c1)) NOTNULL)) IS TRUE)  as count FROM rt0, t0 INNER JOIN v0 ON ((((((v0.c0)-(vt1.c0)))OR((((vt1.c0, vt1.c0, vt1.c0))==((v0.c0, rt0.c0, vt1.c0))))))OR(((vt1.c0) NOTNULL))) LEFT OUTER JOIN vt1 ON ((((json_valid(rt0.c1))AND(rt0.c0)))AND((('GN')LIKE(t0.c0)))) ORDER BY (((t0.c0)) BETWEEN (((((('')OR(v0.c0)))OR(rt0.c1)))) AND ((((vt1.c0) IS TRUE)))) ASC, (NOT (((rt0.c2)IS NOT('')))), CASE WHEN vt1.c0 COLLATE NOCASE THEN ((rt0.c0)>(v0.c0)) ELSE ((((((((rt0.c0)AND(v0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)) END DESC  NULLS LAST);
SELECT * FROM rt0, t0 INNER JOIN v0 ON ((((((v0.c0)-(vt1.c0)))OR((((vt1.c0, vt1.c0, vt1.c0))==((v0.c0, rt0.c0, vt1.c0))))))OR(((vt1.c0) NOTNULL))) LEFT OUTER JOIN vt1 ON ((((json_valid(rt0.c1))AND(rt0.c0)))AND((('GN')LIKE(t0.c0)))) WHERE (((ABS(rt0.c1)) NOTNULL)) ORDER BY (((t0.c0)) BETWEEN (((((('')OR(v0.c0)))OR(rt0.c1)))) AND ((((vt1.c0) IS TRUE)))) ASC, (NOT (((rt0.c2)IS NOT('')))), CASE WHEN vt1.c0 COLLATE NOCASE THEN ((rt0.c0)>(v0.c0)) ELSE ((((((((rt0.c0)AND(v0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((ABS(rt0.c1)) NOTNULL)) IS TRUE)  as count FROM rt0, t0 INNER JOIN v0 ON ((((((v0.c0)-(vt1.c0)))OR((((vt1.c0, vt1.c0, vt1.c0))==((v0.c0, rt0.c0, vt1.c0))))))OR(((vt1.c0) NOTNULL))) LEFT OUTER JOIN vt1 ON ((((json_valid(rt0.c1))AND(rt0.c0)))AND((('GN')LIKE(t0.c0)))) ORDER BY (((t0.c0)) BETWEEN (((((('')OR(v0.c0)))OR(rt0.c1)))) AND ((((vt1.c0) IS TRUE)))) ASC, (NOT (((rt0.c2)IS NOT('')))), CASE WHEN vt1.c0 COLLATE NOCASE THEN ((rt0.c0)>(v0.c0)) ELSE ((((((((rt0.c0)AND(v0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)) END DESC  NULLS LAST);
SELECT * FROM rt0, t0 INNER JOIN v0 ON ((((((v0.c0)-(vt1.c0)))OR((((vt1.c0, vt1.c0, vt1.c0))==((v0.c0, rt0.c0, vt1.c0))))))OR(((vt1.c0) NOTNULL))) LEFT OUTER JOIN vt1 ON ((((json_valid(rt0.c1))AND(rt0.c0)))AND((('GN')LIKE(t0.c0)))) WHERE (((ABS(rt0.c1)) NOTNULL)) ORDER BY (((t0.c0)) BETWEEN (((((('')OR(v0.c0)))OR(rt0.c1)))) AND ((((vt1.c0) IS TRUE)))) ASC, (NOT (((rt0.c2)IS NOT('')))), CASE WHEN vt1.c0 COLLATE NOCASE THEN ((rt0.c0)>(v0.c0)) ELSE ((((((((rt0.c0)AND(v0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)) END DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 INNER JOIN t0 ON (((rt0.c2)) BETWEEN ((((rt0.c0)=(rt0.c1)))) AND ((CASE rt0.c1  WHEN rt0.c0 THEN 1 WHEN t0.c0 THEN '0.08890022000371034' WHEN t0.c0 THEN t0.c0 ELSE rt0.c0 END))) WHERE (t0.c0) ORDER BY ((((x'') IS FALSE))>(t0.c0)) DESC, ((rt0.c2)>=(NULL)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON (((rt0.c2)) BETWEEN ((((rt0.c0)==(rt0.c1)))) AND ((CASE rt0.c1  WHEN rt0.c0 THEN 1 WHEN t0.c0 THEN '0.08890022000371034' WHEN t0.c0 THEN t0.c0 ELSE rt0.c0 END))) ORDER BY ((((x'') IS FALSE))>(t0.c0)) DESC, ((rt0.c2)>=(NULL)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 INNER JOIN t0 ON (((rt0.c2)) BETWEEN ((((rt0.c0)=(rt0.c1)))) AND ((CASE rt0.c1  WHEN rt0.c0 THEN 1 WHEN t0.c0 THEN '0.08890022000371034' WHEN t0.c0 THEN t0.c0 ELSE rt0.c0 END))) WHERE (t0.c0) ORDER BY ((((x'') IS FALSE))>(t0.c0)) DESC, ((rt0.c2)>=(NULL)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON (((rt0.c2)) BETWEEN ((((rt0.c0)==(rt0.c1)))) AND ((CASE rt0.c1  WHEN rt0.c0 THEN 1 WHEN t0.c0 THEN '0.08890022000371034' WHEN t0.c0 THEN t0.c0 ELSE rt0.c0 END))) ORDER BY ((((x'') IS FALSE))>(t0.c0)) DESC, ((rt0.c2)>=(NULL)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 INNER JOIN t0 ON (((rt0.c2)) BETWEEN ((((rt0.c0)=(rt0.c1)))) AND ((CASE rt0.c1  WHEN rt0.c0 THEN 1 WHEN t0.c0 THEN '0.08890022000371034' WHEN t0.c0 THEN t0.c0 ELSE rt0.c0 END))) WHERE (t0.c0) ORDER BY ((((x'') IS FALSE))>(t0.c0)) DESC, ((rt0.c2)>=(NULL)) COLLATE BINARY;
SELECT ALL COUNT(*) FROM v0, vt1, t0, rt0 WHERE (CAST(CAST(rt0.c2 AS NUMERIC) AS TEXT)) ORDER BY ((((t0.c0)IS(t0.c0))) NOTNULL)  NULLS FIRST, ((v0.c0)<(t0.c0 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c2 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM v0, vt1, t0, rt0 ORDER BY ((((t0.c0)IS(t0.c0))) NOTNULL)  NULLS FIRST, ((v0.c0)<(t0.c0 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt1, t0, rt0 WHERE (CAST(CAST(rt0.c2 AS NUMERIC) AS TEXT)) ORDER BY ((((t0.c0)IS(t0.c0))) NOTNULL)  NULLS FIRST, ((v0.c0)<(t0.c0 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c2 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM v0, vt1, t0, rt0 ORDER BY ((((t0.c0)IS(t0.c0))) NOTNULL)  NULLS FIRST, ((v0.c0)<(t0.c0 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt1, t0, rt0 WHERE (CAST(CAST(rt0.c2 AS NUMERIC) AS TEXT)) ORDER BY ((((t0.c0)IS(t0.c0))) NOTNULL)  NULLS FIRST, ((v0.c0)<(t0.c0 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0, v0 WHERE (TRIM(((((v0.c0)OR(rt0.c1)))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((TRIM(((((v0.c0)OR(rt0.c1)))AND(rt0.c2)))) IS TRUE)  as count FROM t0, rt0, v0);
SELECT ALL COUNT(*) FROM t0, rt0, v0 WHERE (TRIM(((((v0.c0)OR(rt0.c1)))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((TRIM(((((v0.c0)OR(rt0.c1)))AND(rt0.c2)))) IS TRUE)  as count FROM t0, rt0, v0);
SELECT ALL COUNT(*) FROM t0, rt0, v0 WHERE (TRIM(((((v0.c0)OR(rt0.c1)))AND(rt0.c2))));
SELECT * FROM rt0, v0 WHERE (((v0.c0)<=(rt0.c2)) COLLATE BINARY) ORDER BY ((((((((((((rt0.c0)AND(v0.c0)))AND(rt0.c1)))AND(rt0.c0 COLLATE NOCASE)))AND(((((v0.c0)OR(v0.c0)))AND(rt0.c0)))))OR('-818770453')))OR(((((((((v0.c0)OR(rt0.c1)))OR(x'')))OR(rt0.c2)))AND(x''))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)<=(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((((((((rt0.c0)AND(v0.c0)))AND(rt0.c1)))AND(rt0.c0 COLLATE NOCASE)))AND(((((v0.c0)OR(v0.c0)))AND(rt0.c0)))))OR('-818770453')))OR(((((((((v0.c0)OR(rt0.c1)))OR(x'')))OR(rt0.c2)))AND(x''))))  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (((v0.c0)<=(rt0.c2)) COLLATE BINARY) ORDER BY ((((((((((((rt0.c0)AND(v0.c0)))AND(rt0.c1)))AND(rt0.c0 COLLATE NOCASE)))AND(((((v0.c0)OR(v0.c0)))AND(rt0.c0)))))OR('-818770453')))OR(((((((((v0.c0)OR(rt0.c1)))OR(x'')))OR(rt0.c2)))AND(x''))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)<=(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((((((((rt0.c0)AND(v0.c0)))AND(rt0.c1)))AND(rt0.c0 COLLATE NOCASE)))AND(((((v0.c0)OR(v0.c0)))AND(rt0.c0)))))OR('-818770453')))OR(((((((((v0.c0)OR(rt0.c1)))OR(x'')))OR(rt0.c2)))AND(x''))))  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (((v0.c0)<=(rt0.c2)) COLLATE BINARY) ORDER BY ((((((((((((rt0.c0)AND(v0.c0)))AND(rt0.c1)))AND(rt0.c0 COLLATE NOCASE)))AND(((((v0.c0)OR(v0.c0)))AND(rt0.c0)))))OR('-818770453')))OR(((((((((v0.c0)OR(rt0.c1)))OR(x'')))OR(rt0.c2)))AND(x''))))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON CAST((~ (rt0.c1)) AS NUMERIC) LEFT OUTER JOIN t0 ON CAST(((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)) AS INTEGER) WHERE (((CAST(rt0.c2 AS INTEGER))==(((vt1.c0)||(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS INTEGER))=(((vt1.c0)||(t0.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON CAST((~ (rt0.c1)) AS NUMERIC) LEFT OUTER JOIN t0 ON CAST(((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)) AS INTEGER));
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON CAST((~ (rt0.c1)) AS NUMERIC) LEFT OUTER JOIN t0 ON CAST(((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)) AS INTEGER) WHERE (((CAST(rt0.c2 AS INTEGER))==(((vt1.c0)||(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS INTEGER))=(((vt1.c0)||(t0.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON CAST((~ (rt0.c1)) AS NUMERIC) LEFT OUTER JOIN t0 ON CAST(((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)) AS INTEGER));
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON CAST((~ (rt0.c1)) AS NUMERIC) LEFT OUTER JOIN t0 ON CAST(((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)) AS INTEGER) WHERE (((CAST(rt0.c2 AS INTEGER))==(((vt1.c0)||(t0.c0)))));
SELECT ALL COUNT(*) FROM t0, rt0, v0 WHERE (((((754873799)OR(((rt0.c2)+(rt0.c1)))))AND(((rt0.c2) NOTNULL)))) ORDER BY ((CASE WHEN rt0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c0 WHEN t0.c0 THEN v0.c0 WHEN rt0.c1 THEN v0.c0 WHEN t0.c0 THEN t0.c0 ELSE v0.c0 END) IS FALSE) ASC, ((v0.c0 COLLATE BINARY) NOT BETWEEN (((rt0.c1)<>(v0.c0))) AND (x'')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((754873799)OR(((rt0.c2)+(rt0.c1)))))AND(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM t0, rt0, v0 ORDER BY ((CASE WHEN rt0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c0 WHEN t0.c0 THEN v0.c0 WHEN rt0.c1 THEN v0.c0 WHEN t0.c0 THEN t0.c0 ELSE v0.c0 END) IS FALSE) ASC, ((v0.c0 COLLATE BINARY) NOT BETWEEN (((rt0.c1)!=(v0.c0))) AND (x'')) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, v0 WHERE (((((754873799)OR(((rt0.c2)+(rt0.c1)))))AND(((rt0.c2) NOTNULL)))) ORDER BY ((CASE WHEN rt0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c0 WHEN t0.c0 THEN v0.c0 WHEN rt0.c1 THEN v0.c0 WHEN t0.c0 THEN t0.c0 ELSE v0.c0 END) IS FALSE) ASC, ((v0.c0 COLLATE BINARY) NOT BETWEEN (((rt0.c1)<>(v0.c0))) AND (x'')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((754873799)OR(((rt0.c2)+(rt0.c1)))))AND(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM t0, rt0, v0 ORDER BY ((CASE WHEN rt0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c0 WHEN t0.c0 THEN v0.c0 WHEN rt0.c1 THEN v0.c0 WHEN t0.c0 THEN t0.c0 ELSE v0.c0 END) IS FALSE) ASC, ((v0.c0 COLLATE BINARY) NOT BETWEEN (((rt0.c1)!=(v0.c0))) AND (x'')) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, v0 WHERE (((((754873799)OR(((rt0.c2)+(rt0.c1)))))AND(((rt0.c2) NOTNULL)))) ORDER BY ((CASE WHEN rt0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c0 WHEN t0.c0 THEN v0.c0 WHEN rt0.c1 THEN v0.c0 WHEN t0.c0 THEN t0.c0 ELSE v0.c0 END) IS FALSE) ASC, ((v0.c0 COLLATE BINARY) NOT BETWEEN (((rt0.c1)<>(v0.c0))) AND (x'')) ASC  NULLS FIRST;
SELECT ALL * FROM v0, vt1 NATURAL JOIN rt0 WHERE (((UPPER(DISTINCT rt0.c0)) NOT BETWEEN ((vt1.c0 IN (vt1.c0))) AND ((((rt0.c0))==((v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((UPPER(DISTINCT rt0.c0)) NOT BETWEEN ((vt1.c0 IN (vt1.c0))) AND ((((rt0.c0))=((v0.c0)))))) IS TRUE)  as count FROM v0, vt1 NATURAL JOIN rt0);
SELECT ALL * FROM v0, vt1 NATURAL JOIN rt0 WHERE (((UPPER(DISTINCT rt0.c0)) NOT BETWEEN ((vt1.c0 IN (vt1.c0))) AND ((((rt0.c0))==((v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((UPPER(DISTINCT rt0.c0)) NOT BETWEEN ((vt1.c0 IN (vt1.c0))) AND ((((rt0.c0))=((v0.c0)))))) IS TRUE)  as count FROM v0, vt1 NATURAL JOIN rt0);
SELECT ALL * FROM v0, vt1 NATURAL JOIN rt0 WHERE (((UPPER(DISTINCT rt0.c0)) NOT BETWEEN ((vt1.c0 IN (vt1.c0))) AND ((((rt0.c0))==((v0.c0))))));
SELECT * FROM vt1, rt0 WHERE ((('Kb\rt?*AH ') IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((('Kb\rt?*AH ') IS FALSE)) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((('Kb\rt?*AH ') IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((('Kb\rt?*AH ') IS FALSE)) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((('Kb\rt?*AH ') IS FALSE));
SELECT COUNT(*) FROM vt1, rt0, v0 WHERE ((((((((vt1.c0)OR('1776673109')))OR(0.00702855991624407)), (v0.c0 IN (rt0.c0)), vt1.c0 COLLATE RTRIM))<=((((((rt0.c1)AND('W헷')))AND(rt0.c0)), (rt0.c0 IN (rt0.c2)), (rt0.c1 IN (rt0.c1)))))) ORDER BY LIKELY(UPPER(vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c0)OR('1776673109')))OR(0.00702855991624407)), (v0.c0 IN (rt0.c0)), vt1.c0 COLLATE RTRIM))<=((((((rt0.c1)AND('W헷')))AND(rt0.c0)), (rt0.c0 IN (rt0.c2)), (rt0.c1 IN (rt0.c1)))))) IS TRUE)  as count FROM vt1, rt0, v0 ORDER BY LIKELY(UPPER(vt1.c0))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0, v0 WHERE ((((((((vt1.c0)OR('1776673109')))OR(0.00702855991624407)), (v0.c0 IN (rt0.c0)), vt1.c0 COLLATE RTRIM))<=((((((rt0.c1)AND('W헷')))AND(rt0.c0)), (rt0.c0 IN (rt0.c2)), (rt0.c1 IN (rt0.c1)))))) ORDER BY LIKELY(UPPER(vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c0)OR('1776673109')))OR(0.00702855991624407)), (v0.c0 IN (rt0.c0)), vt1.c0 COLLATE RTRIM))<=((((((rt0.c1)AND('W헷')))AND(rt0.c0)), (rt0.c0 IN (rt0.c2)), (rt0.c1 IN (rt0.c1)))))) IS TRUE)  as count FROM vt1, rt0, v0 ORDER BY LIKELY(UPPER(vt1.c0))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0, v0 WHERE ((((((((vt1.c0)OR('1776673109')))OR(0.00702855991624407)), (v0.c0 IN (rt0.c0)), vt1.c0 COLLATE RTRIM))<=((((((rt0.c1)AND('W헷')))AND(rt0.c0)), (rt0.c0 IN (rt0.c2)), (rt0.c1 IN (rt0.c1)))))) ORDER BY LIKELY(UPPER(vt1.c0))  NULLS FIRST;
SELECT * FROM rt0, vt1, t0, v0 WHERE ((((rt0.c0 IN ())) IS TRUE)) ORDER BY CAST(CAST(v0.c0 AS REAL) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM rt0, vt1, t0, v0 ORDER BY CAST(CAST(v0.c0 AS REAL) AS NUMERIC)  NULLS LAST);
SELECT * FROM rt0, vt1, t0, v0 WHERE ((((rt0.c0 IN ())) IS TRUE)) ORDER BY CAST(CAST(v0.c0 AS REAL) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM rt0, vt1, t0, v0 ORDER BY CAST(CAST(v0.c0 AS REAL) AS NUMERIC)  NULLS LAST);
SELECT * FROM rt0, vt1, t0, v0 WHERE ((((rt0.c0 IN ())) IS TRUE)) ORDER BY CAST(CAST(v0.c0 AS REAL) AS NUMERIC)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) ISNULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) ISNULL)) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) ISNULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) ISNULL)) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) ISNULL)) NOTNULL));
SELECT ALL * FROM vt1, rt0 RIGHT OUTER JOIN t0 ON ((rt0.c0)|(((rt0.c2)GLOB(rt0.c0)))) WHERE ((- (((t0.c0)/(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((- (((t0.c0)/(rt0.c2))))) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN t0 ON ((rt0.c0)|(((rt0.c2)GLOB(rt0.c0)))));
SELECT ALL * FROM vt1, rt0 RIGHT OUTER JOIN t0 ON ((rt0.c0)|(((rt0.c2)GLOB(rt0.c0)))) WHERE ((- (((t0.c0)/(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((- (((t0.c0)/(rt0.c2))))) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN t0 ON ((rt0.c0)|(((rt0.c2)GLOB(rt0.c0)))));
SELECT ALL * FROM vt1, rt0 RIGHT OUTER JOIN t0 ON ((rt0.c0)|(((rt0.c2)GLOB(rt0.c0)))) WHERE ((- (((t0.c0)/(rt0.c2)))));
SELECT ALL * FROM rt0, v0 WHERE (((((v0.c0) NOT NULL))+((((rt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((NULL, rt0.c2, rt0.c1)) AND ((v0.c0, '', v0.c0)))))) ORDER BY (((load_extension(rt0.c2)))==(((rt0.c1 IN (rt0.c1))))), ((v0.c0) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c2 ELSE '.86' END) AND ((((rt0.c1, rt0.c2, v0.c0))<=((rt0.c1, v0.c0, rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT NULL))+((((rt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((NULL, rt0.c2, rt0.c1)) AND ((v0.c0, '', v0.c0)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((load_extension(rt0.c2)))=(((rt0.c1 IN (rt0.c1))))), ((v0.c0) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c2 ELSE '.86' END) AND ((((rt0.c1, rt0.c2, v0.c0))<=((rt0.c1, v0.c0, rt0.c2)))))  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (((((v0.c0) NOT NULL))+((((rt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((NULL, rt0.c2, rt0.c1)) AND ((v0.c0, '', v0.c0)))))) ORDER BY (((load_extension(rt0.c2)))==(((rt0.c1 IN (rt0.c1))))), ((v0.c0) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c2 ELSE '.86' END) AND ((((rt0.c1, rt0.c2, v0.c0))<=((rt0.c1, v0.c0, rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT NULL))+((((rt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((NULL, rt0.c2, rt0.c1)) AND ((v0.c0, '', v0.c0)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((load_extension(rt0.c2)))=(((rt0.c1 IN (rt0.c1))))), ((v0.c0) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c2 ELSE '.86' END) AND ((((rt0.c1, rt0.c2, v0.c0))<=((rt0.c1, v0.c0, rt0.c2)))))  NULLS FIRST);
SELECT * FROM vt1 WHERE (CASE '%HD^'  WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN vt1.c0 COLLATE RTRIM ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE '%HD^'  WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN vt1.c0 COLLATE RTRIM ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY NULL  NULLS LAST);
SELECT * FROM vt1 WHERE (CASE '%HD^'  WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN vt1.c0 COLLATE RTRIM ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE '%HD^'  WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN vt1.c0 COLLATE RTRIM ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY NULL  NULLS LAST);
SELECT * FROM vt1 WHERE (CASE '%HD^'  WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN vt1.c0 COLLATE RTRIM ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY NULL  NULLS LAST;
SELECT ALL * FROM vt1 LEFT OUTER JOIN t0 ON (vt1.c0 IN (vt1.c0)) COLLATE NOCASE WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON (vt1.c0 IN (vt1.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt1 LEFT OUTER JOIN t0 ON (vt1.c0 IN (vt1.c0)) COLLATE NOCASE WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON (vt1.c0 IN (vt1.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt1 LEFT OUTER JOIN t0 ON (vt1.c0 IN (vt1.c0)) COLLATE NOCASE WHERE ((NULL IN ()));
SELECT * FROM rt0 WHERE ((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), ((rt0.c0) NOTNULL), ((((rt0.c2)OR(x'')))AND(rt0.c0)))) AND ((((rt0.c0) NOT BETWEEN (-505637987) AND ('8QzB黬qgf#')), ((((0.6792166312917494)OR(rt0.c0)))AND(rt0.c2)), ((rt0.c0)||(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), ((rt0.c0) NOTNULL), ((((rt0.c2)OR(x'')))AND(rt0.c0)))) AND ((((rt0.c0) NOT BETWEEN (-505637987) AND ('8QzB黬qgf#')), ((((0.6792166312917494)OR(rt0.c0)))AND(rt0.c2)), ((rt0.c0)||(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), ((rt0.c0) NOTNULL), ((((rt0.c2)OR(x'')))AND(rt0.c0)))) AND ((((rt0.c0) NOT BETWEEN (-505637987) AND ('8QzB黬qgf#')), ((((0.6792166312917494)OR(rt0.c0)))AND(rt0.c2)), ((rt0.c0)||(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), ((rt0.c0) NOTNULL), ((((rt0.c2)OR(x'')))AND(rt0.c0)))) AND ((((rt0.c0) NOT BETWEEN (-505637987) AND ('8QzB黬qgf#')), ((((0.6792166312917494)OR(rt0.c0)))AND(rt0.c2)), ((rt0.c0)||(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), ((rt0.c0) NOTNULL), ((((rt0.c2)OR(x'')))AND(rt0.c0)))) AND ((((rt0.c0) NOT BETWEEN (-505637987) AND ('8QzB黬qgf#')), ((((0.6792166312917494)OR(rt0.c0)))AND(rt0.c2)), ((rt0.c0)||(rt0.c1))))));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(NULL AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(NULL AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(NULL AS TEXT));
SELECT ALL COUNT(*) FROM t0 WHERE (TRIM(DISTINCT t0.c0 COLLATE NOCASE, ((t0.c0)*(t0.c0)))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT t0.c0 COLLATE NOCASE, ((t0.c0)*(t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY NULL);
SELECT ALL COUNT(*) FROM t0 WHERE (TRIM(DISTINCT t0.c0 COLLATE NOCASE, ((t0.c0)*(t0.c0)))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT t0.c0 COLLATE NOCASE, ((t0.c0)*(t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY NULL);
SELECT ALL COUNT(*) FROM t0 WHERE (TRIM(DISTINCT t0.c0 COLLATE NOCASE, ((t0.c0)*(t0.c0)))) ORDER BY NULL;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)AND(vt1.c0))) BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((0.5975626946689395) ISNULL)))) ORDER BY CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN vt1.c0 COLLATE BINARY WHEN ((vt1.c0)>=(vt1.c0)) THEN vt1.c0 COLLATE NOCASE WHEN ((vt1.c0) NOT BETWEEN (x'c4484c45') AND (vt1.c0)) THEN (vt1.c0 IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)AND(vt1.c0))) BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((0.5975626946689395) ISNULL)))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN vt1.c0 COLLATE BINARY WHEN ((vt1.c0)>=(vt1.c0)) THEN vt1.c0 COLLATE NOCASE WHEN ((vt1.c0) NOT BETWEEN (x'c4484c45') AND (vt1.c0)) THEN (vt1.c0 IN ()) END  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)AND(vt1.c0))) BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((0.5975626946689395) ISNULL)))) ORDER BY CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN vt1.c0 COLLATE BINARY WHEN ((vt1.c0)>=(vt1.c0)) THEN vt1.c0 COLLATE NOCASE WHEN ((vt1.c0) NOT BETWEEN (x'c4484c45') AND (vt1.c0)) THEN (vt1.c0 IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)AND(vt1.c0))) BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((0.5975626946689395) ISNULL)))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN vt1.c0 COLLATE BINARY WHEN ((vt1.c0)>=(vt1.c0)) THEN vt1.c0 COLLATE NOCASE WHEN ((vt1.c0) NOT BETWEEN (x'c4484c45') AND (vt1.c0)) THEN (vt1.c0 IN ()) END  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)AND(vt1.c0))) BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((0.5975626946689395) ISNULL)))) ORDER BY CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN vt1.c0 COLLATE BINARY WHEN ((vt1.c0)>=(vt1.c0)) THEN vt1.c0 COLLATE NOCASE WHEN ((vt1.c0) NOT BETWEEN (x'c4484c45') AND (vt1.c0)) THEN (vt1.c0 IN ()) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0 NATURAL JOIN vt1 WHERE ('		s㴬') ORDER BY '1492936120'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('		s㴬') IS TRUE)  as count FROM t0, rt0 NATURAL JOIN vt1 ORDER BY '1492936120'  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 NATURAL JOIN vt1 WHERE ('		s㴬') ORDER BY '1492936120'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('		s㴬') IS TRUE)  as count FROM t0, rt0 NATURAL JOIN vt1 ORDER BY '1492936120'  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 NATURAL JOIN vt1 WHERE ('		s㴬') ORDER BY '1492936120'  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c0)=(rt0.c2)) IN ((((vt1.c0))>((rt0.c1))))) WHERE (((rt0.c1 COLLATE NOCASE)*(CASE rt0.c2  WHEN vt1.c0 THEN rt0.c1 END))) ORDER BY (((rt0.c0 IN ()))|(CAST(rt0.c0 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE)*(CASE rt0.c2  WHEN vt1.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c0)==(rt0.c2)) IN ((((vt1.c0))>((rt0.c1))))) ORDER BY (((rt0.c0 IN ()))|(CAST(rt0.c0 AS BLOB))) DESC);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c0)=(rt0.c2)) IN ((((vt1.c0))>((rt0.c1))))) WHERE (((rt0.c1 COLLATE NOCASE)*(CASE rt0.c2  WHEN vt1.c0 THEN rt0.c1 END))) ORDER BY (((rt0.c0 IN ()))|(CAST(rt0.c0 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE)*(CASE rt0.c2  WHEN vt1.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c0)==(rt0.c2)) IN ((((vt1.c0))>((rt0.c1))))) ORDER BY (((rt0.c0 IN ()))|(CAST(rt0.c0 AS BLOB))) DESC);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c0)=(rt0.c2)) IN ((((vt1.c0))>((rt0.c1))))) WHERE (((rt0.c1 COLLATE NOCASE)*(CASE rt0.c2  WHEN vt1.c0 THEN rt0.c1 END))) ORDER BY (((rt0.c0 IN ()))|(CAST(rt0.c0 AS BLOB))) DESC;
SELECT ALL * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) IS FALSE));
SELECT ALL * FROM t0, rt0, v0 RIGHT OUTER JOIN vt1 ON (('146385978')GLOB(((v0.c0) BETWEEN (rt0.c2) AND (v0.c0)))) WHERE (((LOWER(rt0.c2)) ISNULL)) ORDER BY (+ (((x'f330') BETWEEN (rt0.c1) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(rt0.c2)) ISNULL)) IS TRUE)  as count FROM t0, rt0, v0 RIGHT OUTER JOIN vt1 ON (('146385978')GLOB(((v0.c0) BETWEEN (rt0.c2) AND (v0.c0)))) ORDER BY (+ (((x'f330') BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT ALL * FROM t0, rt0, v0 RIGHT OUTER JOIN vt1 ON (('146385978')GLOB(((v0.c0) BETWEEN (rt0.c2) AND (v0.c0)))) WHERE (((LOWER(rt0.c2)) ISNULL)) ORDER BY (+ (((x'f330') BETWEEN (rt0.c1) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(rt0.c2)) ISNULL)) IS TRUE)  as count FROM t0, rt0, v0 RIGHT OUTER JOIN vt1 ON (('146385978')GLOB(((v0.c0) BETWEEN (rt0.c2) AND (v0.c0)))) ORDER BY (+ (((x'f330') BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT ALL * FROM t0, rt0, v0 RIGHT OUTER JOIN vt1 ON (('146385978')GLOB(((v0.c0) BETWEEN (rt0.c2) AND (v0.c0)))) WHERE (((LOWER(rt0.c2)) ISNULL)) ORDER BY (+ (((x'f330') BETWEEN (rt0.c1) AND (rt0.c0))));
SELECT ALL * FROM rt0, t0, vt1, v0 WHERE ((t0.c0 IN (((((((((rt0.c0)OR('-760932567')))OR(rt0.c2)))OR(rt0.c1)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN (((((((((rt0.c0)OR('-760932567')))OR(rt0.c2)))OR(rt0.c1)))OR(vt1.c0))))) IS TRUE)  as count FROM rt0, t0, vt1, v0);
SELECT ALL * FROM rt0, t0, vt1, v0 WHERE ((t0.c0 IN (((((((((rt0.c0)OR('-760932567')))OR(rt0.c2)))OR(rt0.c1)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN (((((((((rt0.c0)OR('-760932567')))OR(rt0.c2)))OR(rt0.c1)))OR(vt1.c0))))) IS TRUE)  as count FROM rt0, t0, vt1, v0);
SELECT ALL * FROM rt0, t0, vt1, v0 WHERE ((t0.c0 IN (((((((((rt0.c0)OR('-760932567')))OR(rt0.c2)))OR(rt0.c1)))OR(vt1.c0)))));
SELECT ALL * FROM rt0, v0, vt1, t0 WHERE ((rt0.c1 IN (v0.c0)) COLLATE RTRIM) ORDER BY ((rt0.c1)<(rt0.c2)) COLLATE NOCASE  NULLS LAST, ((((((v0.c0)GLOB(rt0.c0)))OR(((((rt0.c1)AND(t0.c0)))OR(v0.c0)))))OR((NOT (vt1.c0))))  NULLS LAST, CASE rt0.c2  WHEN NULL THEN rt0.c1 ELSE rt0.c0 END COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0, vt1, t0 ORDER BY ((rt0.c1)<(rt0.c2)) COLLATE NOCASE  NULLS LAST, ((((((v0.c0)GLOB(rt0.c0)))OR(((((rt0.c1)AND(t0.c0)))OR(v0.c0)))))OR((NOT (vt1.c0))))  NULLS LAST, CASE rt0.c2  WHEN NULL THEN rt0.c1 ELSE rt0.c0 END COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM rt0, v0, vt1, t0 WHERE ((rt0.c1 IN (v0.c0)) COLLATE RTRIM) ORDER BY ((rt0.c1)<(rt0.c2)) COLLATE NOCASE  NULLS LAST, ((((((v0.c0)GLOB(rt0.c0)))OR(((((rt0.c1)AND(t0.c0)))OR(v0.c0)))))OR((NOT (vt1.c0))))  NULLS LAST, CASE rt0.c2  WHEN NULL THEN rt0.c1 ELSE rt0.c0 END COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0, vt1, t0 ORDER BY ((rt0.c1)<(rt0.c2)) COLLATE NOCASE  NULLS LAST, ((((((v0.c0)GLOB(rt0.c0)))OR(((((rt0.c1)AND(t0.c0)))OR(v0.c0)))))OR((NOT (vt1.c0))))  NULLS LAST, CASE rt0.c2  WHEN NULL THEN rt0.c1 ELSE rt0.c0 END COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM rt0, v0, vt1, t0 WHERE ((rt0.c1 IN (v0.c0)) COLLATE RTRIM) ORDER BY ((rt0.c1)<(rt0.c2)) COLLATE NOCASE  NULLS LAST, ((((((v0.c0)GLOB(rt0.c0)))OR(((((rt0.c1)AND(t0.c0)))OR(v0.c0)))))OR((NOT (vt1.c0))))  NULLS LAST, CASE rt0.c2  WHEN NULL THEN rt0.c1 ELSE rt0.c0 END COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM v0, t0 WHERE ((((v0.c0 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE ((((v0.c0 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE ((((v0.c0 IN ())) IS TRUE));
SELECT * FROM rt0, vt1 WHERE (0x62bd9c72) ORDER BY CAST(UPPER(DISTINCT vt1.c0) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0X62bd9c72) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(UPPER(DISTINCT vt1.c0) AS REAL) DESC);
SELECT * FROM rt0, vt1 WHERE (0x62bd9c72) ORDER BY CAST(UPPER(DISTINCT vt1.c0) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0X62bd9c72) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(UPPER(DISTINCT vt1.c0) AS REAL) DESC);
SELECT * FROM rt0, vt1 WHERE (0x62bd9c72) ORDER BY CAST(UPPER(DISTINCT vt1.c0) AS REAL) DESC;
SELECT * FROM rt0 WHERE (((((CAST(rt0.c2 AS BLOB))AND('' COLLATE RTRIM)))OR((rt0.c2 IN (x''))))) ORDER BY ((SQLITE_SOURCE_ID()) NOT BETWEEN (((rt0.c1)GLOB(rt0.c2))) AND (rt0.c1)) ASC, rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c2 AS BLOB))AND('' COLLATE RTRIM)))OR((rt0.c2 IN (x''))))) IS TRUE)  as count FROM rt0 ORDER BY ((SQLITE_SOURCE_ID()) NOT BETWEEN (((rt0.c1)GLOB(rt0.c2))) AND (rt0.c1)) ASC, rt0.c0 ASC);
SELECT * FROM rt0 WHERE (((((CAST(rt0.c2 AS BLOB))AND('' COLLATE RTRIM)))OR((rt0.c2 IN (x''))))) ORDER BY ((SQLITE_SOURCE_ID()) NOT BETWEEN (((rt0.c1)GLOB(rt0.c2))) AND (rt0.c1)) ASC, rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c2 AS BLOB))AND('' COLLATE RTRIM)))OR((rt0.c2 IN (x''))))) IS TRUE)  as count FROM rt0 ORDER BY ((SQLITE_SOURCE_ID()) NOT BETWEEN (((rt0.c1)GLOB(rt0.c2))) AND (rt0.c1)) ASC, rt0.c0 ASC);
SELECT * FROM rt0 WHERE (((((CAST(rt0.c2 AS BLOB))AND('' COLLATE RTRIM)))OR((rt0.c2 IN (x''))))) ORDER BY ((SQLITE_SOURCE_ID()) NOT BETWEEN (((rt0.c1)GLOB(rt0.c2))) AND (rt0.c1)) ASC, rt0.c0 ASC;
SELECT COUNT(*) FROM rt0, vt1 WHERE (LTRIM(((vt1.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((LTRIM(((vt1.c0) NOT NULL))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (LTRIM(((vt1.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((LTRIM(((vt1.c0) NOT NULL))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (LTRIM(((vt1.c0) NOT NULL)));
SELECT ALL COUNT(*) FROM rt0, t0, vt1, v0 WHERE ((((((((rt0.c2)AND(rt0.c2)))OR(v0.c0))))<=((rt0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c2)AND(rt0.c2)))OR(v0.c0))))<=((rt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0, t0, vt1, v0);
SELECT ALL COUNT(*) FROM rt0, t0, vt1, v0 WHERE ((((((((rt0.c2)AND(rt0.c2)))OR(v0.c0))))<=((rt0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c2)AND(rt0.c2)))OR(v0.c0))))<=((rt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0, t0, vt1, v0);
SELECT ALL COUNT(*) FROM rt0, t0, vt1, v0 WHERE ((((((((rt0.c2)AND(rt0.c2)))OR(v0.c0))))<=((rt0.c0 COLLATE NOCASE))));
SELECT * FROM vt1, rt0, t0, v0 WHERE (CAST(CAST(rt0.c2 AS REAL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c2 AS REAL) AS INTEGER)) IS TRUE)  as count FROM vt1, rt0, t0, v0);
SELECT * FROM vt1, rt0, t0, v0 WHERE (CAST(CAST(rt0.c2 AS REAL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c2 AS REAL) AS INTEGER)) IS TRUE)  as count FROM vt1, rt0, t0, v0);
SELECT * FROM vt1, rt0, t0, v0 WHERE (CAST(CAST(rt0.c2 AS REAL) AS INTEGER));
SELECT * FROM v0, t0, rt0 WHERE (((((rt0.c1) NOTNULL))||(((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c0))))) ORDER BY CAST((t0.c0 IN ()) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOTNULL))||(((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM v0, t0, rt0 ORDER BY CAST((t0.c0 IN ()) AS BLOB));
SELECT * FROM v0, t0, rt0 WHERE (((((rt0.c1) NOTNULL))||(((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c0))))) ORDER BY CAST((t0.c0 IN ()) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOTNULL))||(((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM v0, t0, rt0 ORDER BY CAST((t0.c0 IN ()) AS BLOB));
SELECT * FROM v0, t0, rt0 WHERE (((((rt0.c1) NOTNULL))||(((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c0))))) ORDER BY CAST((t0.c0 IN ()) AS BLOB);
SELECT ALL * FROM rt0, vt1 WHERE (((vt1.c0) BETWEEN (rt0.c2 COLLATE BINARY) AND (((rt0.c2)IS NOT(vt1.c0))))) ORDER BY CASE '㄄)'  WHEN (rt0.c1 IN (vt1.c0)) THEN TYPEOF(rt0.c2) END, ((rt0.c2)<=(rt0.c1)) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN (rt0.c2 COLLATE BINARY) AND (((rt0.c2)IS NOT(vt1.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE '㄄)'  WHEN (rt0.c1 IN (vt1.c0)) THEN TYPEOF(rt0.c2) END, ((rt0.c2)<=(rt0.c1)) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE (((vt1.c0) BETWEEN (rt0.c2 COLLATE BINARY) AND (((rt0.c2)IS NOT(vt1.c0))))) ORDER BY CASE '㄄)'  WHEN (rt0.c1 IN (vt1.c0)) THEN TYPEOF(rt0.c2) END, ((rt0.c2)<=(rt0.c1)) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN (rt0.c2 COLLATE BINARY) AND (((rt0.c2)IS NOT(vt1.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE '㄄)'  WHEN (rt0.c1 IN (vt1.c0)) THEN TYPEOF(rt0.c2) END, ((rt0.c2)<=(rt0.c1)) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE (((vt1.c0) BETWEEN (rt0.c2 COLLATE BINARY) AND (((rt0.c2)IS NOT(vt1.c0))))) ORDER BY CASE '㄄)'  WHEN (rt0.c1 IN (vt1.c0)) THEN TYPEOF(rt0.c2) END, ((rt0.c2)<=(rt0.c1)) COLLATE BINARY DESC  NULLS LAST;
SELECT ALL * FROM rt0, v0, t0 WHERE ((rt0.c1 IN ())) ORDER BY (((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c2)))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ())) IS TRUE)  as count FROM rt0, v0, t0 ORDER BY (((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c2)))) NOTNULL) ASC);
SELECT ALL * FROM rt0, v0, t0 WHERE ((rt0.c1 IN ())) ORDER BY (((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c2)))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ())) IS TRUE)  as count FROM rt0, v0, t0 ORDER BY (((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c2)))) NOTNULL) ASC);
SELECT ALL * FROM rt0, v0, t0 WHERE ((rt0.c1 IN ())) ORDER BY (((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c2)))) NOTNULL) ASC;
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE UPPER(DISTINCT rt0.c2)  WHEN (+ (rt0.c0)) THEN t0.c0 WHEN COALESCE(DISTINCT x'', rt0.c0, rt0.c1, t0.c0) THEN ((rt0.c2)>(rt0.c1)) WHEN rt0.c1 COLLATE BINARY THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END END) ORDER BY json(((((((((t0.c0)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE UPPER(DISTINCT rt0.c2)  WHEN (+ (rt0.c0)) THEN t0.c0 WHEN COALESCE(DISTINCT x'', rt0.c0, rt0.c1, t0.c0) THEN ((rt0.c2)>(rt0.c1)) WHEN rt0.c1 COLLATE BINARY THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END END) IS TRUE)  as count FROM rt0, t0 ORDER BY json(((((((((t0.c0)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0))) DESC);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE UPPER(DISTINCT rt0.c2)  WHEN (+ (rt0.c0)) THEN t0.c0 WHEN COALESCE(DISTINCT x'', rt0.c0, rt0.c1, t0.c0) THEN ((rt0.c2)>(rt0.c1)) WHEN rt0.c1 COLLATE BINARY THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END END) ORDER BY json(((((((((t0.c0)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE UPPER(DISTINCT rt0.c2)  WHEN (+ (rt0.c0)) THEN t0.c0 WHEN COALESCE(DISTINCT x'', rt0.c0, rt0.c1, t0.c0) THEN ((rt0.c2)>(rt0.c1)) WHEN rt0.c1 COLLATE BINARY THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END END) IS TRUE)  as count FROM rt0, t0 ORDER BY json(((((((((t0.c0)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0))) DESC);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE UPPER(DISTINCT rt0.c2)  WHEN (+ (rt0.c0)) THEN t0.c0 WHEN COALESCE(DISTINCT x'', rt0.c0, rt0.c1, t0.c0) THEN ((rt0.c2)>(rt0.c1)) WHEN rt0.c1 COLLATE BINARY THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END END) ORDER BY json(((((((((t0.c0)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0))) DESC;
SELECT ALL * FROM rt0 NOT INDEXED, v0, vt1, t0 WHERE (CASE WHEN rt0.c0 COLLATE BINARY THEN 'Qj' ELSE (v0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 COLLATE BINARY THEN 'Qj' ELSE (v0.c0 IN ()) END) IS TRUE)  as count FROM rt0, v0, vt1, t0);
SELECT ALL * FROM rt0 NOT INDEXED, v0, vt1, t0 WHERE (CASE WHEN rt0.c0 COLLATE BINARY THEN 'Qj' ELSE (v0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 COLLATE BINARY THEN 'Qj' ELSE (v0.c0 IN ()) END) IS TRUE)  as count FROM rt0, v0, vt1, t0);
SELECT ALL * FROM rt0 NOT INDEXED, v0, vt1, t0 WHERE (CASE WHEN rt0.c0 COLLATE BINARY THEN 'Qj' ELSE (v0.c0 IN ()) END);
SELECT ALL * FROM rt0, vt1 FULL OUTER JOIN t0 ON ((((vt1.c0)OR(vt1.c0)))OR(rt0.c0)) COLLATE BINARY WHERE (((CAST(rt0.c1 AS REAL))>>(((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS REAL))>>(((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0, vt1 FULL OUTER JOIN t0 ON ((((vt1.c0)OR(vt1.c0)))OR(rt0.c0)) COLLATE BINARY);
SELECT ALL * FROM rt0, vt1 FULL OUTER JOIN t0 ON ((((vt1.c0)OR(vt1.c0)))OR(rt0.c0)) COLLATE BINARY WHERE (((CAST(rt0.c1 AS REAL))>>(((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS REAL))>>(((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0, vt1 FULL OUTER JOIN t0 ON ((((vt1.c0)OR(vt1.c0)))OR(rt0.c0)) COLLATE BINARY);
SELECT ALL * FROM rt0, vt1 FULL OUTER JOIN t0 ON ((((vt1.c0)OR(vt1.c0)))OR(rt0.c0)) COLLATE BINARY WHERE (((CAST(rt0.c1 AS REAL))>>(((rt0.c2) ISNULL))));
SELECT ALL * FROM t0 NATURAL JOIN vt1 WHERE (((((CAST(t0.c0 AS REAL))AND(CASE WHEN t0.c0 THEN t0.c0 END)))AND(vt1.c0 COLLATE BINARY))) ORDER BY TRIM(DISTINCT ((t0.c0)!=(vt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c0 AS REAL))AND(CASE WHEN t0.c0 THEN t0.c0 END)))AND(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0 NATURAL JOIN vt1 ORDER BY TRIM(DISTINCT ((t0.c0)!=(vt1.c0))) DESC);
SELECT ALL * FROM t0 NATURAL JOIN vt1 WHERE (((((CAST(t0.c0 AS REAL))AND(CASE WHEN t0.c0 THEN t0.c0 END)))AND(vt1.c0 COLLATE BINARY))) ORDER BY TRIM(DISTINCT ((t0.c0)!=(vt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c0 AS REAL))AND(CASE WHEN t0.c0 THEN t0.c0 END)))AND(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0 NATURAL JOIN vt1 ORDER BY TRIM(DISTINCT ((t0.c0)!=(vt1.c0))) DESC);
SELECT ALL * FROM t0 NATURAL JOIN vt1 WHERE (((((CAST(t0.c0 AS REAL))AND(CASE WHEN t0.c0 THEN t0.c0 END)))AND(vt1.c0 COLLATE BINARY))) ORDER BY TRIM(DISTINCT ((t0.c0)!=(vt1.c0))) DESC;
SELECT ALL COUNT(*) FROM t0, v0, vt1, rt0 WHERE (((((((rt0.c2)AND(rt0.c0)))OR(t0.c0))) NOT BETWEEN (TRIM(DISTINCT t0.c0)) AND (JULIANDAY(rt0.c0, rt0.c1, v0.c0)))) ORDER BY x'fb6a';
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)AND(rt0.c0)))OR(t0.c0))) NOT BETWEEN (TRIM(DISTINCT t0.c0)) AND (JULIANDAY(rt0.c0, rt0.c1, v0.c0)))) IS TRUE)  as count FROM t0, v0, vt1, rt0 ORDER BY x'fb6a');
SELECT ALL COUNT(*) FROM t0, v0, vt1, rt0 WHERE (((((((rt0.c2)AND(rt0.c0)))OR(t0.c0))) NOT BETWEEN (TRIM(DISTINCT t0.c0)) AND (JULIANDAY(rt0.c0, rt0.c1, v0.c0)))) ORDER BY x'fb6a';
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)AND(rt0.c0)))OR(t0.c0))) NOT BETWEEN (TRIM(DISTINCT t0.c0)) AND (JULIANDAY(rt0.c0, rt0.c1, v0.c0)))) IS TRUE)  as count FROM t0, v0, vt1, rt0 ORDER BY x'fb6a');
SELECT ALL COUNT(*) FROM t0, v0, vt1, rt0 WHERE (((((((rt0.c2)AND(rt0.c0)))OR(t0.c0))) NOT BETWEEN (TRIM(DISTINCT t0.c0)) AND (JULIANDAY(rt0.c0, rt0.c1, v0.c0)))) ORDER BY x'fb6a';
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c2) ISNULL))OR((rt0.c0 IN ()))))AND((rt0.c0 IN ())))) ORDER BY ((((rt0.c2) NOTNULL)) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c2 THEN x'' END) AND ((NOT (rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2) ISNULL))OR((rt0.c0 IN ()))))AND((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOTNULL)) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c2 THEN x'' END) AND ((NOT (rt0.c1)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c2) ISNULL))OR((rt0.c0 IN ()))))AND((rt0.c0 IN ())))) ORDER BY ((((rt0.c2) NOTNULL)) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c2 THEN x'' END) AND ((NOT (rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2) ISNULL))OR((rt0.c0 IN ()))))AND((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOTNULL)) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c2 THEN x'' END) AND ((NOT (rt0.c1)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c2) ISNULL))OR((rt0.c0 IN ()))))AND((rt0.c0 IN ())))) ORDER BY ((((rt0.c2) NOTNULL)) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c2 THEN x'' END) AND ((NOT (rt0.c1)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)OR(v0.c0 COLLATE BINARY)))OR(v0.c0))) ORDER BY ((((0.5963869406019829) BETWEEN (v0.c0) AND (v0.c0)))>=((((v0.c0))>((v0.c0)))))  NULLS LAST, (v0.c0 COLLATE NOCASE IN ());
SELECT SUM(count) FROM (SELECT ((((((v0.c0)OR(v0.c0 COLLATE BINARY)))OR(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY ((((0.5963869406019829) BETWEEN (v0.c0) AND (v0.c0)))>=((((v0.c0))>((v0.c0)))))  NULLS LAST, (v0.c0 COLLATE NOCASE IN ()));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)OR(v0.c0 COLLATE BINARY)))OR(v0.c0))) ORDER BY ((((0.5963869406019829) BETWEEN (v0.c0) AND (v0.c0)))>=((((v0.c0))>((v0.c0)))))  NULLS LAST, (v0.c0 COLLATE NOCASE IN ());
SELECT SUM(count) FROM (SELECT ((((((v0.c0)OR(v0.c0 COLLATE BINARY)))OR(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY ((((0.5963869406019829) BETWEEN (v0.c0) AND (v0.c0)))>=((((v0.c0))>((v0.c0)))))  NULLS LAST, (v0.c0 COLLATE NOCASE IN ()));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)OR(v0.c0 COLLATE BINARY)))OR(v0.c0))) ORDER BY ((((0.5963869406019829) BETWEEN (v0.c0) AND (v0.c0)))>=((((v0.c0))>((v0.c0)))))  NULLS LAST, (v0.c0 COLLATE NOCASE IN ());
SELECT * FROM rt0, t0, vt1, v0 WHERE (((((((((((rt0.c1)GLOB(rt0.c2)))AND('347699097')))AND(x'')))OR(((t0.c0) ISNULL))))OR(((vt1.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)GLOB(rt0.c2)))AND('347699097')))AND(x'')))OR(((t0.c0) ISNULL))))OR(((vt1.c0) NOT BETWEEN (rt0.c0) AND (v0.c0))))) IS TRUE)  as count FROM rt0, t0, vt1, v0);
SELECT * FROM rt0, t0, vt1, v0 WHERE (((((((((((rt0.c1)GLOB(rt0.c2)))AND('347699097')))AND(x'')))OR(((t0.c0) ISNULL))))OR(((vt1.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)GLOB(rt0.c2)))AND('347699097')))AND(x'')))OR(((t0.c0) ISNULL))))OR(((vt1.c0) NOT BETWEEN (rt0.c0) AND (v0.c0))))) IS TRUE)  as count FROM rt0, t0, vt1, v0);
SELECT * FROM rt0, t0, vt1, v0 WHERE (((((((((((rt0.c1)GLOB(rt0.c2)))AND('347699097')))AND(x'')))OR(((t0.c0) ISNULL))))OR(((vt1.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)))));
SELECT COUNT(*) FROM vt1, t0 WHERE (((('-1110753123'))>=(((('624597984') IS TRUE)))));
SELECT SUM(count) FROM (SELECT ((((('-1110753123'))>=(((('624597984') IS TRUE))))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((('-1110753123'))>=(((('624597984') IS TRUE)))));
SELECT SUM(count) FROM (SELECT ((((('-1110753123'))>=(((('624597984') IS TRUE))))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((('-1110753123'))>=(((('624597984') IS TRUE)))));
SELECT ALL COUNT(*) FROM vt1, v0, rt0, t0 WHERE ('1691008863');
SELECT SUM(count) FROM (SELECT (('1691008863') IS TRUE)  as count FROM vt1, v0, rt0, t0);
SELECT ALL COUNT(*) FROM vt1, v0, rt0, t0 WHERE ('1691008863');
SELECT SUM(count) FROM (SELECT (('1691008863') IS TRUE)  as count FROM vt1, v0, rt0, t0);
SELECT ALL COUNT(*) FROM vt1, v0, rt0, t0 WHERE ('1691008863');
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, v0 WHERE (CASE WHEN v0.c0 COLLATE NOCASE THEN ((((vt1.c0)AND(368034684)))OR(vt1.c0)) ELSE (v0.c0 IN (v0.c0)) END) ORDER BY ((CAST(v0.c0 AS NUMERIC)) BETWEEN ((- (vt1.c0))) AND (CASE WHEN v0.c0 THEN v0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 COLLATE NOCASE THEN ((((vt1.c0)AND(368034684)))OR(vt1.c0)) ELSE (v0.c0 IN (v0.c0)) END) IS TRUE)  as count FROM vt1, v0 ORDER BY ((CAST(v0.c0 AS NUMERIC)) BETWEEN ((- (vt1.c0))) AND (CASE WHEN v0.c0 THEN v0.c0 END)) DESC);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, v0 WHERE (CASE WHEN v0.c0 COLLATE NOCASE THEN ((((vt1.c0)AND(368034684)))OR(vt1.c0)) ELSE (v0.c0 IN (v0.c0)) END) ORDER BY ((CAST(v0.c0 AS NUMERIC)) BETWEEN ((- (vt1.c0))) AND (CASE WHEN v0.c0 THEN v0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 COLLATE NOCASE THEN ((((vt1.c0)AND(368034684)))OR(vt1.c0)) ELSE (v0.c0 IN (v0.c0)) END) IS TRUE)  as count FROM vt1, v0 ORDER BY ((CAST(v0.c0 AS NUMERIC)) BETWEEN ((- (vt1.c0))) AND (CASE WHEN v0.c0 THEN v0.c0 END)) DESC);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, v0 WHERE (CASE WHEN v0.c0 COLLATE NOCASE THEN ((((vt1.c0)AND(368034684)))OR(vt1.c0)) ELSE (v0.c0 IN (v0.c0)) END) ORDER BY ((CAST(v0.c0 AS NUMERIC)) BETWEEN ((- (vt1.c0))) AND (CASE WHEN v0.c0 THEN v0.c0 END)) DESC;
SELECT ALL COUNT(*) FROM vt1, t0 LEFT OUTER JOIN v0 ON ((((rt0.c0)IS NOT(vt1.c0)))<(((rt0.c2)<=(rt0.c2)))) CROSS JOIN rt0 ON (((v0.c0) ISNULL) IN ((((v0.c0, v0.c0, t0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0, v0.c0)) AND ((vt1.c0, rt0.c2, v0.c0))))) WHERE ((NOT (UNLIKELY(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (UNLIKELY(rt0.c1)))) IS TRUE)  as count FROM vt1, t0 LEFT OUTER JOIN v0 ON ((((rt0.c0)IS NOT(vt1.c0)))<(((rt0.c2)<=(rt0.c2)))) CROSS JOIN rt0 ON (((v0.c0) ISNULL) IN ((((v0.c0, v0.c0, t0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0, v0.c0)) AND ((vt1.c0, rt0.c2, v0.c0))))));
SELECT ALL COUNT(*) FROM vt1, t0 LEFT OUTER JOIN v0 ON ((((rt0.c0)IS NOT(vt1.c0)))<(((rt0.c2)<=(rt0.c2)))) CROSS JOIN rt0 ON (((v0.c0) ISNULL) IN ((((v0.c0, v0.c0, t0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0, v0.c0)) AND ((vt1.c0, rt0.c2, v0.c0))))) WHERE ((NOT (UNLIKELY(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (UNLIKELY(rt0.c1)))) IS TRUE)  as count FROM vt1, t0 LEFT OUTER JOIN v0 ON ((((rt0.c0)IS NOT(vt1.c0)))<(((rt0.c2)<=(rt0.c2)))) CROSS JOIN rt0 ON (((v0.c0) ISNULL) IN ((((v0.c0, v0.c0, t0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0, v0.c0)) AND ((vt1.c0, rt0.c2, v0.c0))))));
SELECT * FROM rt0, v0, vt1 NATURAL JOIN t0 WHERE (((((CAST(rt0.c0 AS INTEGER))AND((- (rt0.c0)))))AND(((((rt0.c2)OR(vt1.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c0 AS INTEGER))AND((- (rt0.c0)))))AND(((((rt0.c2)OR(vt1.c0)))OR(t0.c0))))) IS TRUE)  as count FROM rt0, v0, vt1 NATURAL JOIN t0);
SELECT * FROM rt0, v0, vt1 NATURAL JOIN t0 WHERE (((((CAST(rt0.c0 AS INTEGER))AND((- (rt0.c0)))))AND(((((rt0.c2)OR(vt1.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c0 AS INTEGER))AND((- (rt0.c0)))))AND(((((rt0.c2)OR(vt1.c0)))OR(t0.c0))))) IS TRUE)  as count FROM rt0, v0, vt1 NATURAL JOIN t0);
SELECT * FROM rt0, v0, vt1 NATURAL JOIN t0 WHERE (((((CAST(rt0.c0 AS INTEGER))AND((- (rt0.c0)))))AND(((((rt0.c2)OR(vt1.c0)))OR(t0.c0)))));
SELECT ALL * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((((v0.c0)>=(x'')), ((((v0.c0)AND(v0.c0)))AND(v0.c0)), LIKELY(v0.c0))) AND ((x'', (NULL IN ()), ((v0.c0)==(v0.c0)))))) ORDER BY (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((CAST(v0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c0, v0.c0)) BETWEEN ((((v0.c0)>=(x'')), ((((v0.c0)AND(v0.c0)))AND(v0.c0)), LIKELY(v0.c0))) AND ((x'', (NULL IN ()), ((v0.c0)=(v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((CAST(v0.c0 AS INTEGER)))));
SELECT ALL * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((((v0.c0)>=(x'')), ((((v0.c0)AND(v0.c0)))AND(v0.c0)), LIKELY(v0.c0))) AND ((x'', (NULL IN ()), ((v0.c0)==(v0.c0)))))) ORDER BY (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((CAST(v0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c0, v0.c0)) BETWEEN ((((v0.c0)>=(x'')), ((((v0.c0)AND(v0.c0)))AND(v0.c0)), LIKELY(v0.c0))) AND ((x'', (NULL IN ()), ((v0.c0)=(v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((CAST(v0.c0 AS INTEGER)))));
SELECT ALL * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((((v0.c0)>=(x'')), ((((v0.c0)AND(v0.c0)))AND(v0.c0)), LIKELY(v0.c0))) AND ((x'', (NULL IN ()), ((v0.c0)==(v0.c0)))))) ORDER BY (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((CAST(v0.c0 AS INTEGER))));
SELECT COUNT(*) FROM t0, vt1 WHERE ((CAST(vt1.c0 AS TEXT) IN ())) ORDER BY ((json_remove(vt1.c0, vt1.c0, t0.c0, vt1.c0)) NOT BETWEEN (DATETIME('{QoU,]ᮑQN', vt1.c0, vt1.c0)) AND (((t0.c0) BETWEEN (t0.c0) AND (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS TEXT) IN ())) IS TRUE)  as count FROM t0, vt1 ORDER BY ((json_remove(vt1.c0, vt1.c0, t0.c0, vt1.c0)) NOT BETWEEN (DATETIME('{QoU,]ᮑQN', vt1.c0, vt1.c0)) AND (((t0.c0) BETWEEN (t0.c0) AND (vt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1 WHERE ((CAST(vt1.c0 AS TEXT) IN ())) ORDER BY ((json_remove(vt1.c0, vt1.c0, t0.c0, vt1.c0)) NOT BETWEEN (DATETIME('{QoU,]ᮑQN', vt1.c0, vt1.c0)) AND (((t0.c0) BETWEEN (t0.c0) AND (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS TEXT) IN ())) IS TRUE)  as count FROM t0, vt1 ORDER BY ((json_remove(vt1.c0, vt1.c0, t0.c0, vt1.c0)) NOT BETWEEN (DATETIME('{QoU,]ᮑQN', vt1.c0, vt1.c0)) AND (((t0.c0) BETWEEN (t0.c0) AND (vt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM t0, v0, rt0 WHERE (CASE WHEN ((rt0.c1)IS(rt0.c2)) THEN CASE t0.c0  WHEN rt0.c1 THEN t0.c0 END WHEN rt0.c2 THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END WHEN CASE t0.c0  WHEN v0.c0 THEN t0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN 0.6238466912462531 THEN rt0.c2 END THEN ((((((((t0.c0)OR(t0.c0)))AND(0.058055996855354564)))AND(t0.c0)))AND(rt0.c0)) ELSE ((((rt0.c2)OR(v0.c0)))OR(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1)IS(rt0.c2)) THEN CASE t0.c0  WHEN rt0.c1 THEN t0.c0 END WHEN rt0.c2 THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END WHEN CASE t0.c0  WHEN v0.c0 THEN t0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN 0.6238466912462531 THEN rt0.c2 END THEN ((((((((t0.c0)OR(t0.c0)))AND(0.058055996855354564)))AND(t0.c0)))AND(rt0.c0)) ELSE ((((rt0.c2)OR(v0.c0)))OR(rt0.c0)) END) IS TRUE)  as count FROM t0, v0, rt0);
SELECT COUNT(*) FROM t0, v0, rt0 WHERE (CASE WHEN ((rt0.c1)IS(rt0.c2)) THEN CASE t0.c0  WHEN rt0.c1 THEN t0.c0 END WHEN rt0.c2 THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END WHEN CASE t0.c0  WHEN v0.c0 THEN t0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN 0.6238466912462531 THEN rt0.c2 END THEN ((((((((t0.c0)OR(t0.c0)))AND(0.058055996855354564)))AND(t0.c0)))AND(rt0.c0)) ELSE ((((rt0.c2)OR(v0.c0)))OR(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1)IS(rt0.c2)) THEN CASE t0.c0  WHEN rt0.c1 THEN t0.c0 END WHEN rt0.c2 THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END WHEN CASE t0.c0  WHEN v0.c0 THEN t0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN 0.6238466912462531 THEN rt0.c2 END THEN ((((((((t0.c0)OR(t0.c0)))AND(0.058055996855354564)))AND(t0.c0)))AND(rt0.c0)) ELSE ((((rt0.c2)OR(v0.c0)))OR(rt0.c0)) END) IS TRUE)  as count FROM t0, v0, rt0);
SELECT COUNT(*) FROM t0, v0, rt0 WHERE (CASE WHEN ((rt0.c1)IS(rt0.c2)) THEN CASE t0.c0  WHEN rt0.c1 THEN t0.c0 END WHEN rt0.c2 THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END WHEN CASE t0.c0  WHEN v0.c0 THEN t0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN 0.6238466912462531 THEN rt0.c2 END THEN ((((((((t0.c0)OR(t0.c0)))AND(0.058055996855354564)))AND(t0.c0)))AND(rt0.c0)) ELSE ((((rt0.c2)OR(v0.c0)))OR(rt0.c0)) END);
SELECT ALL * FROM t0, rt0, v0, vt1 WHERE ((((((vt1.c0, x'', v0.c0))<((v0.c0, rt0.c1, v0.c0)))) BETWEEN (rt0.c1 COLLATE BINARY) AND (CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0, x'', v0.c0))<((v0.c0, rt0.c1, v0.c0)))) BETWEEN (rt0.c1 COLLATE BINARY) AND (CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM t0, rt0, v0, vt1);
SELECT ALL * FROM t0, rt0, v0, vt1 WHERE ((((((vt1.c0, x'', v0.c0))<((v0.c0, rt0.c1, v0.c0)))) BETWEEN (rt0.c1 COLLATE BINARY) AND (CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0, x'', v0.c0))<((v0.c0, rt0.c1, v0.c0)))) BETWEEN (rt0.c1 COLLATE BINARY) AND (CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM t0, rt0, v0, vt1);
SELECT ALL * FROM t0, rt0, v0, vt1 WHERE ((((((vt1.c0, x'', v0.c0))<((v0.c0, rt0.c1, v0.c0)))) BETWEEN (rt0.c1 COLLATE BINARY) AND (CAST(rt0.c2 AS BLOB))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON 'D/' CROSS JOIN rt0 ON CASE CASE WHEN t0.c0 THEN rt0.c1 ELSE rt0.c2 END  WHEN ((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)) THEN ((rt0.c1) ISNULL) END WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON 'D/' CROSS JOIN rt0 ON CASE CASE WHEN t0.c0 THEN rt0.c1 ELSE rt0.c2 END  WHEN ((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)) THEN ((rt0.c1) ISNULL) END);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON 'D/' CROSS JOIN rt0 ON CASE CASE WHEN t0.c0 THEN rt0.c1 ELSE rt0.c2 END  WHEN ((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)) THEN ((rt0.c1) ISNULL) END WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON 'D/' CROSS JOIN rt0 ON CASE CASE WHEN t0.c0 THEN rt0.c1 ELSE rt0.c2 END  WHEN ((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)) THEN ((rt0.c1) ISNULL) END);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON 'D/' CROSS JOIN rt0 ON CASE CASE WHEN t0.c0 THEN rt0.c1 ELSE rt0.c2 END  WHEN ((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)) THEN ((rt0.c1) ISNULL) END WHERE (rt0.c1);
SELECT * FROM vt1, v0, rt0 WHERE ((((v0.c0)|(rt0.c0)) IN (v0.c0 COLLATE RTRIM, (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)|(rt0.c0)) IN (v0.c0 COLLATE RTRIM, (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) IS TRUE)  as count FROM vt1, v0, rt0);
SELECT * FROM vt1, v0, rt0 WHERE ((((v0.c0)|(rt0.c0)) IN (v0.c0 COLLATE RTRIM, (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)|(rt0.c0)) IN (v0.c0 COLLATE RTRIM, (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) IS TRUE)  as count FROM vt1, v0, rt0);
SELECT * FROM vt1, v0, rt0 WHERE ((((v0.c0)|(rt0.c0)) IN (v0.c0 COLLATE RTRIM, (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)>(v0.c0)) IN (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY '' ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0)>(v0.c0)) IN (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY '' ASC);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)>(v0.c0)) IN (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY '' ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0)>(v0.c0)) IN (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY '' ASC);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)>(v0.c0)) IN (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY '' ASC;
SELECT ALL * FROM t0, v0, vt1 WHERE (((((CASE WHEN vt1.c0 THEN t0.c0 WHEN v0.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 ELSE v0.c0 END)OR((((t0.c0))<=((t0.c0))))))AND(((v0.c0)IS(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt1.c0 THEN t0.c0 WHEN v0.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 ELSE v0.c0 END)OR((((t0.c0))<=((t0.c0))))))AND(((v0.c0)IS(v0.c0))))) IS TRUE)  as count FROM t0, v0, vt1);
SELECT ALL * FROM t0, v0, vt1 WHERE (((((CASE WHEN vt1.c0 THEN t0.c0 WHEN v0.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 ELSE v0.c0 END)OR((((t0.c0))<=((t0.c0))))))AND(((v0.c0)IS(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt1.c0 THEN t0.c0 WHEN v0.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 ELSE v0.c0 END)OR((((t0.c0))<=((t0.c0))))))AND(((v0.c0)IS(v0.c0))))) IS TRUE)  as count FROM t0, v0, vt1);
SELECT ALL * FROM t0, v0, vt1 WHERE (((((CASE WHEN vt1.c0 THEN t0.c0 WHEN v0.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 ELSE v0.c0 END)OR((((t0.c0))<=((t0.c0))))))AND(((v0.c0)IS(v0.c0)))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t0 ON CAST(v0.c0 AS REAL) FULL OUTER JOIN vt1 ON rt0.c1 RIGHT OUTER JOIN v0 ON DATETIME(((((((((v0.c0)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)), rt0.c0, 0x2d5cac15 COLLATE BINARY, v0.c0, '1704702304') WHERE (((((((((0.5678559652486793)OR(((v0.c0)<=(rt0.c1)))))OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))))AND(((t0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)))))AND(((v0.c0)OR(rt0.c0))))) ORDER BY (- ((((rt0.c0))<>((t0.c0))))), (json_type(v0.c0) IN ()) DESC, (v0.c0 COLLATE RTRIM IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((0.5678559652486793)OR(((v0.c0)<=(rt0.c1)))))OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))))AND(((t0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)))))AND(((v0.c0)OR(rt0.c0))))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON CAST(v0.c0 AS REAL) FULL OUTER JOIN vt1 ON rt0.c1 RIGHT OUTER JOIN v0 ON DATETIME(((((((((v0.c0)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)), rt0.c0, 0x2d5cac15 COLLATE BINARY, v0.c0, '1704702304') ORDER BY (- ((((rt0.c0))<>((t0.c0))))), (json_type(v0.c0) IN ()) DESC, (v0.c0 COLLATE RTRIM IN ()) DESC);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t0 ON CAST(v0.c0 AS REAL) FULL OUTER JOIN vt1 ON rt0.c1 RIGHT OUTER JOIN v0 ON DATETIME(((((((((v0.c0)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)), rt0.c0, 0x2d5cac15 COLLATE BINARY, v0.c0, '1704702304') WHERE (((((((((0.5678559652486793)OR(((v0.c0)<=(rt0.c1)))))OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))))AND(((t0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)))))AND(((v0.c0)OR(rt0.c0))))) ORDER BY (- ((((rt0.c0))<>((t0.c0))))), (json_type(v0.c0) IN ()) DESC, (v0.c0 COLLATE RTRIM IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((0.5678559652486793)OR(((v0.c0)<=(rt0.c1)))))OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))))AND(((t0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)))))AND(((v0.c0)OR(rt0.c0))))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON CAST(v0.c0 AS REAL) FULL OUTER JOIN vt1 ON rt0.c1 RIGHT OUTER JOIN v0 ON DATETIME(((((((((v0.c0)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)), rt0.c0, 0x2d5cac15 COLLATE BINARY, v0.c0, '1704702304') ORDER BY (- ((((rt0.c0))<>((t0.c0))))), (json_type(v0.c0) IN ()) DESC, (v0.c0 COLLATE RTRIM IN ()) DESC);
SELECT * FROM vt1, rt0 FULL OUTER JOIN t0 ON MAX(rt0.c2 COLLATE RTRIM, UNLIKELY(DISTINCT vt1.c0)) WHERE (CASE rt0.c2 COLLATE RTRIM  WHEN ((((t0.c0)OR(rt0.c1)))OR(vt1.c0)) THEN (~ (rt0.c0)) WHEN ((rt0.c2)*(rt0.c2)) THEN CAST(rt0.c2 AS TEXT) WHEN ((t0.c0)>=(rt0.c1)) THEN (rt0.c0 IN (t0.c0)) ELSE ((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2 COLLATE RTRIM  WHEN ((((t0.c0)OR(rt0.c1)))OR(vt1.c0)) THEN (~ (rt0.c0)) WHEN ((rt0.c2)*(rt0.c2)) THEN CAST(rt0.c2 AS TEXT) WHEN ((t0.c0)>=(rt0.c1)) THEN (rt0.c0 IN (t0.c0)) ELSE ((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) END) IS TRUE)  as count FROM vt1, rt0 FULL OUTER JOIN t0 ON MAX(rt0.c2 COLLATE RTRIM, UNLIKELY(DISTINCT vt1.c0)));
SELECT * FROM vt1, rt0 FULL OUTER JOIN t0 ON MAX(rt0.c2 COLLATE RTRIM, UNLIKELY(DISTINCT vt1.c0)) WHERE (CASE rt0.c2 COLLATE RTRIM  WHEN ((((t0.c0)OR(rt0.c1)))OR(vt1.c0)) THEN (~ (rt0.c0)) WHEN ((rt0.c2)*(rt0.c2)) THEN CAST(rt0.c2 AS TEXT) WHEN ((t0.c0)>=(rt0.c1)) THEN (rt0.c0 IN (t0.c0)) ELSE ((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2 COLLATE RTRIM  WHEN ((((t0.c0)OR(rt0.c1)))OR(vt1.c0)) THEN (~ (rt0.c0)) WHEN ((rt0.c2)*(rt0.c2)) THEN CAST(rt0.c2 AS TEXT) WHEN ((t0.c0)>=(rt0.c1)) THEN (rt0.c0 IN (t0.c0)) ELSE ((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) END) IS TRUE)  as count FROM vt1, rt0 FULL OUTER JOIN t0 ON MAX(rt0.c2 COLLATE RTRIM, UNLIKELY(DISTINCT vt1.c0)));
SELECT * FROM vt1, rt0 FULL OUTER JOIN t0 ON MAX(rt0.c2 COLLATE RTRIM, UNLIKELY(DISTINCT vt1.c0)) WHERE (CASE rt0.c2 COLLATE RTRIM  WHEN ((((t0.c0)OR(rt0.c1)))OR(vt1.c0)) THEN (~ (rt0.c0)) WHEN ((rt0.c2)*(rt0.c2)) THEN CAST(rt0.c2 AS TEXT) WHEN ((t0.c0)>=(rt0.c1)) THEN (rt0.c0 IN (t0.c0)) ELSE ((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) END);
SELECT COUNT(*) FROM v0, vt1, t0 WHERE (((((v0.c0)<=(vt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)<=(vt1.c0))) ISNULL)) IS TRUE)  as count FROM v0, vt1, t0);
SELECT COUNT(*) FROM v0, vt1, t0 WHERE (((((v0.c0)<=(vt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)<=(vt1.c0))) ISNULL)) IS TRUE)  as count FROM v0, vt1, t0);
SELECT COUNT(*) FROM v0, vt1, t0 WHERE (((((v0.c0)<=(vt1.c0))) ISNULL));
SELECT COUNT(*) FROM v0, t0 FULL OUTER JOIN rt0 ON (~ (((((v0.c0)OR(t0.c0)))AND(rt0.c0)))) FULL OUTER JOIN vt1 ON (~ (((t0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))) WHERE ((v0.c0 IN (rt0.c2)) COLLATE NOCASE) ORDER BY CAST(((rt0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((v0.c0 IN (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM v0, t0 FULL OUTER JOIN rt0 ON (~ (((((v0.c0)OR(t0.c0)))AND(rt0.c0)))) FULL OUTER JOIN vt1 ON (~ (((t0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))) ORDER BY CAST(((rt0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)) AS REAL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0 FULL OUTER JOIN rt0 ON (~ (((((v0.c0)OR(t0.c0)))AND(rt0.c0)))) FULL OUTER JOIN vt1 ON (~ (((t0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))) WHERE ((v0.c0 IN (rt0.c2)) COLLATE NOCASE) ORDER BY CAST(((rt0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((v0.c0 IN (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM v0, t0 FULL OUTER JOIN rt0 ON (~ (((((v0.c0)OR(t0.c0)))AND(rt0.c0)))) FULL OUTER JOIN vt1 ON (~ (((t0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))) ORDER BY CAST(((rt0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)) AS REAL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0 FULL OUTER JOIN rt0 ON (~ (((((v0.c0)OR(t0.c0)))AND(rt0.c0)))) FULL OUTER JOIN vt1 ON (~ (((t0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))) WHERE ((v0.c0 IN (rt0.c2)) COLLATE NOCASE) ORDER BY CAST(((rt0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)) AS REAL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0 COLLATE RTRIM)OR(CASE WHEN v0.c0 THEN v0.c0 END)))OR(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0 COLLATE RTRIM)OR(CASE WHEN v0.c0 THEN v0.c0 END)))OR(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0 COLLATE RTRIM)OR(CASE WHEN v0.c0 THEN v0.c0 END)))OR(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0 COLLATE RTRIM)OR(CASE WHEN v0.c0 THEN v0.c0 END)))OR(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0 COLLATE RTRIM)OR(CASE WHEN v0.c0 THEN v0.c0 END)))OR(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT ALL COUNT(*) FROM rt0, v0, vt1 WHERE ((((v0.c0)-(rt0.c2)) IN ())) ORDER BY ((('1271998556', NULL, rt0.c2, v0.c0, vt1.c0)) NOT BETWEEN ((((rt0.c1)AND(NULL)), HEX(DISTINCT rt0.c1), (((rt0.c0))<=((rt0.c0))), CAST(rt0.c2 AS REAL), NULL)) AND ((((v0.c0) BETWEEN (vt1.c0) AND (0.7459352195646228)), ((((vt1.c0)OR(rt0.c0)))AND(rt0.c0)), (((v0.c0, rt0.c2, v0.c0))>=((rt0.c2, v0.c0, v0.c0))), ((v0.c0)!=(vt1.c0)), ((rt0.c0) IS FALSE)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)-(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY ((('1271998556', NULL, rt0.c2, v0.c0, vt1.c0)) NOT BETWEEN ((((rt0.c1)AND(NULL)), HEX(DISTINCT rt0.c1), (((rt0.c0))<=((rt0.c0))), CAST(rt0.c2 AS REAL), NULL)) AND ((((v0.c0) BETWEEN (vt1.c0) AND (0.7459352195646228)), ((((vt1.c0)OR(rt0.c0)))AND(rt0.c0)), (((v0.c0, rt0.c2, v0.c0))>=((rt0.c2, v0.c0, v0.c0))), ((v0.c0)<>(vt1.c0)), ((rt0.c0) IS FALSE)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0, vt1 WHERE ((((v0.c0)-(rt0.c2)) IN ())) ORDER BY ((('1271998556', NULL, rt0.c2, v0.c0, vt1.c0)) NOT BETWEEN ((((rt0.c1)AND(NULL)), HEX(DISTINCT rt0.c1), (((rt0.c0))<=((rt0.c0))), CAST(rt0.c2 AS REAL), NULL)) AND ((((v0.c0) BETWEEN (vt1.c0) AND (0.7459352195646228)), ((((vt1.c0)OR(rt0.c0)))AND(rt0.c0)), (((v0.c0, rt0.c2, v0.c0))>=((rt0.c2, v0.c0, v0.c0))), ((v0.c0)!=(vt1.c0)), ((rt0.c0) IS FALSE)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)-(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY ((('1271998556', NULL, rt0.c2, v0.c0, vt1.c0)) NOT BETWEEN ((((rt0.c1)AND(NULL)), HEX(DISTINCT rt0.c1), (((rt0.c0))<=((rt0.c0))), CAST(rt0.c2 AS REAL), NULL)) AND ((((v0.c0) BETWEEN (vt1.c0) AND (0.7459352195646228)), ((((vt1.c0)OR(rt0.c0)))AND(rt0.c0)), (((v0.c0, rt0.c2, v0.c0))>=((rt0.c2, v0.c0, v0.c0))), ((v0.c0)<>(vt1.c0)), ((rt0.c0) IS FALSE)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0, vt1 WHERE ((((v0.c0)-(rt0.c2)) IN ())) ORDER BY ((('1271998556', NULL, rt0.c2, v0.c0, vt1.c0)) NOT BETWEEN ((((rt0.c1)AND(NULL)), HEX(DISTINCT rt0.c1), (((rt0.c0))<=((rt0.c0))), CAST(rt0.c2 AS REAL), NULL)) AND ((((v0.c0) BETWEEN (vt1.c0) AND (0.7459352195646228)), ((((vt1.c0)OR(rt0.c0)))AND(rt0.c0)), (((v0.c0, rt0.c2, v0.c0))>=((rt0.c2, v0.c0, v0.c0))), ((v0.c0)!=(vt1.c0)), ((rt0.c0) IS FALSE)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0, t0 WHERE (CASE WHEN CAST(rt0.c2 AS INTEGER) THEN ((rt0.c1) ISNULL) WHEN ((rt0.c0)||(rt0.c0)) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) WHEN (+ (v0.c0)) THEN ((rt0.c1) NOTNULL) ELSE (((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c2 AS INTEGER) THEN ((rt0.c1) ISNULL) WHEN ((rt0.c0)||(rt0.c0)) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) WHEN (+ (v0.c0)) THEN ((rt0.c1) NOTNULL) ELSE (((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1))) END) IS TRUE)  as count FROM rt0, v0, t0);
SELECT ALL COUNT(*) FROM rt0, v0, t0 WHERE (CASE WHEN CAST(rt0.c2 AS INTEGER) THEN ((rt0.c1) ISNULL) WHEN ((rt0.c0)||(rt0.c0)) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) WHEN (+ (v0.c0)) THEN ((rt0.c1) NOTNULL) ELSE (((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c2 AS INTEGER) THEN ((rt0.c1) ISNULL) WHEN ((rt0.c0)||(rt0.c0)) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) WHEN (+ (v0.c0)) THEN ((rt0.c1) NOTNULL) ELSE (((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1))) END) IS TRUE)  as count FROM rt0, v0, t0);
SELECT ALL COUNT(*) FROM rt0, v0, t0 WHERE (CASE WHEN CAST(rt0.c2 AS INTEGER) THEN ((rt0.c1) ISNULL) WHEN ((rt0.c0)||(rt0.c0)) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) WHEN (+ (v0.c0)) THEN ((rt0.c1) NOTNULL) ELSE (((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1))) END);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON TOTAL_CHANGES() RIGHT OUTER JOIN v0 ON '0.8548677947702654' WHERE ((' ~' IN (vt1.c0, vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((' ~' IN (vt1.c0, vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON TOTAL_CHANGES() RIGHT OUTER JOIN v0 ON '0.8548677947702654');
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON TOTAL_CHANGES() RIGHT OUTER JOIN v0 ON '0.8548677947702654' WHERE ((' ~' IN (vt1.c0, vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((' ~' IN (vt1.c0, vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON TOTAL_CHANGES() RIGHT OUTER JOIN v0 ON '0.8548677947702654');
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON TOTAL_CHANGES() RIGHT OUTER JOIN v0 ON '0.8548677947702654' WHERE ((' ~' IN (vt1.c0, vt1.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1, rt0 WHERE (TYPEOF(TRIM(rt0.c0, rt0.c0))) ORDER BY ((((((((CASE x'e594'  WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 END)OR(ABS(rt0.c1))))AND((rt0.c0 IN (x'')))))OR((((rt0.c2))>((NULL))))))AND(rt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(TRIM(rt0.c0, rt0.c0))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((((((CASE x'e594'  WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 END)OR(ABS(rt0.c1))))AND((rt0.c0 IN (x'')))))OR((((rt0.c2))>((NULL))))))AND(rt0.c0)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (TYPEOF(TRIM(rt0.c0, rt0.c0))) ORDER BY ((((((((CASE x'e594'  WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 END)OR(ABS(rt0.c1))))AND((rt0.c0 IN (x'')))))OR((((rt0.c2))>((NULL))))))AND(rt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(TRIM(rt0.c0, rt0.c0))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((((((CASE x'e594'  WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 END)OR(ABS(rt0.c1))))AND((rt0.c0 IN (x'')))))OR((((rt0.c2))>((NULL))))))AND(rt0.c0)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (TYPEOF(TRIM(rt0.c0, rt0.c0))) ORDER BY ((((((((CASE x'e594'  WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 END)OR(ABS(rt0.c1))))AND((rt0.c0 IN (x'')))))OR((((rt0.c2))>((NULL))))))AND(rt0.c0)) DESC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (x'') ORDER BY (((((((-1650071747)AND(v0.c0)))AND(v0.c0)), ((v0.c0)<<(v0.c0)), ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)), ((((v0.c0)AND(v0.c0)))OR(v0.c0)), ((v0.c0) NOTNULL)))>((LIKELY(DISTINCT v0.c0), ((v0.c0)==(v0.c0)), ((v0.c0)OR(v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'a2cd' WHEN v0.c0 THEN v0.c0 END, ((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND('-1741355693')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 ORDER BY (((((((-1650071747)AND(v0.c0)))AND(v0.c0)), ((v0.c0)<<(v0.c0)), ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)), ((((v0.c0)AND(v0.c0)))OR(v0.c0)), ((v0.c0) NOTNULL)))>((LIKELY(DISTINCT v0.c0), ((v0.c0)==(v0.c0)), ((v0.c0)OR(v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'a2cd' WHEN v0.c0 THEN v0.c0 END, ((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND('-1741355693')))))  NULLS LAST);
SELECT ALL * FROM v0 WHERE (x'') ORDER BY (((((((-1650071747)AND(v0.c0)))AND(v0.c0)), ((v0.c0)<<(v0.c0)), ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)), ((((v0.c0)AND(v0.c0)))OR(v0.c0)), ((v0.c0) NOTNULL)))>((LIKELY(DISTINCT v0.c0), ((v0.c0)==(v0.c0)), ((v0.c0)OR(v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'a2cd' WHEN v0.c0 THEN v0.c0 END, ((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND('-1741355693')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 ORDER BY (((((((-1650071747)AND(v0.c0)))AND(v0.c0)), ((v0.c0)<<(v0.c0)), ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)), ((((v0.c0)AND(v0.c0)))OR(v0.c0)), ((v0.c0) NOTNULL)))>((LIKELY(DISTINCT v0.c0), ((v0.c0)==(v0.c0)), ((v0.c0)OR(v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'a2cd' WHEN v0.c0 THEN v0.c0 END, ((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND('-1741355693')))))  NULLS LAST);
SELECT ALL * FROM v0 WHERE (x'') ORDER BY (((((((-1650071747)AND(v0.c0)))AND(v0.c0)), ((v0.c0)<<(v0.c0)), ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)), ((((v0.c0)AND(v0.c0)))OR(v0.c0)), ((v0.c0) NOTNULL)))>((LIKELY(DISTINCT v0.c0), ((v0.c0)==(v0.c0)), ((v0.c0)OR(v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'a2cd' WHEN v0.c0 THEN v0.c0 END, ((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND('-1741355693')))))  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((x'')) AND ((v0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((x'')) AND ((v0.c0))) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((x'')) AND ((v0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((x'')) AND ((v0.c0))) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((x'')) AND ((v0.c0))) COLLATE BINARY);
SELECT COUNT(*) FROM rt0, vt1, v0, t0 WHERE (((((v0.c0) BETWEEN (vt1.c0) AND (rt0.c0))) ISNULL)) ORDER BY CASE ((t0.c0)>>(rt0.c2))  WHEN (~ (rt0.c1)) THEN CAST(t0.c0 AS NUMERIC) WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) THEN NULL WHEN vt1.c0 COLLATE RTRIM THEN ((((((((x'')AND(vt1.c0)))AND(rt0.c0)))OR(rt0.c1)))AND(v0.c0)) WHEN 0.7016559135817428 THEN (~ (rt0.c0)) WHEN (- (NULL)) THEN ((t0.c0)IS(t0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (vt1.c0) AND (rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0, vt1, v0, t0 ORDER BY CASE ((t0.c0)>>(rt0.c2))  WHEN (~ (rt0.c1)) THEN CAST(t0.c0 AS NUMERIC) WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) THEN NULL WHEN vt1.c0 COLLATE RTRIM THEN ((((((((x'')AND(vt1.c0)))AND(rt0.c0)))OR(rt0.c1)))AND(v0.c0)) WHEN 0.7016559135817428 THEN (~ (rt0.c0)) WHEN (- (NULL)) THEN ((t0.c0)IS(t0.c0)) END  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1, v0, t0 WHERE (((((v0.c0) BETWEEN (vt1.c0) AND (rt0.c0))) ISNULL)) ORDER BY CASE ((t0.c0)>>(rt0.c2))  WHEN (~ (rt0.c1)) THEN CAST(t0.c0 AS NUMERIC) WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) THEN NULL WHEN vt1.c0 COLLATE RTRIM THEN ((((((((x'')AND(vt1.c0)))AND(rt0.c0)))OR(rt0.c1)))AND(v0.c0)) WHEN 0.7016559135817428 THEN (~ (rt0.c0)) WHEN (- (NULL)) THEN ((t0.c0)IS(t0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (vt1.c0) AND (rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0, vt1, v0, t0 ORDER BY CASE ((t0.c0)>>(rt0.c2))  WHEN (~ (rt0.c1)) THEN CAST(t0.c0 AS NUMERIC) WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) THEN NULL WHEN vt1.c0 COLLATE RTRIM THEN ((((((((x'')AND(vt1.c0)))AND(rt0.c0)))OR(rt0.c1)))AND(v0.c0)) WHEN 0.7016559135817428 THEN (~ (rt0.c0)) WHEN (- (NULL)) THEN ((t0.c0)IS(t0.c0)) END  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1, v0, t0 WHERE (((((v0.c0) BETWEEN (vt1.c0) AND (rt0.c0))) ISNULL)) ORDER BY CASE ((t0.c0)>>(rt0.c2))  WHEN (~ (rt0.c1)) THEN CAST(t0.c0 AS NUMERIC) WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) THEN NULL WHEN vt1.c0 COLLATE RTRIM THEN ((((((((x'')AND(vt1.c0)))AND(rt0.c0)))OR(rt0.c1)))AND(v0.c0)) WHEN 0.7016559135817428 THEN (~ (rt0.c0)) WHEN (- (NULL)) THEN ((t0.c0)IS(t0.c0)) END  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((~ (vt1.c0))) ORDER BY ((((vt1.c0)<<(vt1.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT (((~ (vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)<<(vt1.c0))) NOTNULL));
SELECT ALL * FROM vt1 WHERE ((~ (vt1.c0))) ORDER BY ((((vt1.c0)<<(vt1.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT (((~ (vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)<<(vt1.c0))) NOTNULL));
SELECT ALL * FROM vt1 WHERE ((~ (vt1.c0))) ORDER BY ((((vt1.c0)<<(vt1.c0))) NOTNULL);
SELECT * FROM vt1 WHERE (((((vt1.c0)+('0.188649710512113')))<<(CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)+('0.188649710512113')))<<(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0)+('0.188649710512113')))<<(CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)+('0.188649710512113')))<<(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0)+('0.188649710512113')))<<(CAST(vt1.c0 AS BLOB))));
SELECT * FROM v0 WHERE (((((CASE WHEN v0.c0 THEN 7.5054492E8 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)AND(NULL)))AND('-991132992' COLLATE BINARY))) ORDER BY ((NULL)&(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN v0.c0 THEN 7.5054492E8 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)AND(NULL)))AND('-991132992' COLLATE BINARY))) IS TRUE)  as count FROM v0 ORDER BY ((NULL)&(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ASC);
SELECT * FROM v0 WHERE (((((CASE WHEN v0.c0 THEN 7.5054492E8 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)AND(NULL)))AND('-991132992' COLLATE BINARY))) ORDER BY ((NULL)&(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN v0.c0 THEN 7.5054492E8 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)AND(NULL)))AND('-991132992' COLLATE BINARY))) IS TRUE)  as count FROM v0 ORDER BY ((NULL)&(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ASC);
SELECT * FROM v0 WHERE (((((CASE WHEN v0.c0 THEN 7.5054492E8 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)AND(NULL)))AND('-991132992' COLLATE BINARY))) ORDER BY ((NULL)&(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ASC;
SELECT ALL COUNT(*) FROM vt1, rt0, v0, t0 WHERE (((- (t0.c0)) IN (IFNULL(DISTINCT vt1.c0, rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((- (t0.c0)) IN (IFNULL(DISTINCT vt1.c0, rt0.c2)))) IS TRUE)  as count FROM vt1, rt0, v0, t0);
SELECT ALL COUNT(*) FROM vt1, rt0, v0, t0 WHERE (((- (t0.c0)) IN (IFNULL(DISTINCT vt1.c0, rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((- (t0.c0)) IN (IFNULL(DISTINCT vt1.c0, rt0.c2)))) IS TRUE)  as count FROM vt1, rt0, v0, t0);
SELECT ALL COUNT(*) FROM vt1, rt0, v0, t0 WHERE (((- (t0.c0)) IN (IFNULL(DISTINCT vt1.c0, rt0.c2))));
SELECT COUNT(*) FROM vt1, t0, rt0 WHERE ((((((rt0.c2)OR(rt0.c0)))AND(vt1.c0)) IN (rt0.c0 COLLATE BINARY))) ORDER BY (((NOT (rt0.c2))) NOT BETWEEN ((((rt0.c2))>=((rt0.c1)))) AND (((rt0.c1)IS(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)OR(rt0.c0)))AND(vt1.c0)) IN (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY (((NOT (rt0.c2))) NOT BETWEEN ((((rt0.c2))>=((rt0.c1)))) AND (((rt0.c1)IS(rt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0, rt0 WHERE ((((((rt0.c2)OR(rt0.c0)))AND(vt1.c0)) IN (rt0.c0 COLLATE BINARY))) ORDER BY (((NOT (rt0.c2))) NOT BETWEEN ((((rt0.c2))>=((rt0.c1)))) AND (((rt0.c1)IS(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)OR(rt0.c0)))AND(vt1.c0)) IN (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY (((NOT (rt0.c2))) NOT BETWEEN ((((rt0.c2))>=((rt0.c1)))) AND (((rt0.c1)IS(rt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0, rt0 WHERE ((((((rt0.c2)OR(rt0.c0)))AND(vt1.c0)) IN (rt0.c0 COLLATE BINARY))) ORDER BY (((NOT (rt0.c2))) NOT BETWEEN ((((rt0.c2))>=((rt0.c1)))) AND (((rt0.c1)IS(rt0.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (TRIM(vt1.c0)) ORDER BY ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY DESC, (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))<=((vt1.c0 COLLATE BINARY))) ASC, ((((vt1.c0) IS TRUE))*((x'' IN (vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(vt1.c0)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY DESC, (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))<=((vt1.c0 COLLATE BINARY))) ASC, ((((vt1.c0) IS TRUE))*((x'' IN (vt1.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (TRIM(vt1.c0)) ORDER BY ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY DESC, (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))<=((vt1.c0 COLLATE BINARY))) ASC, ((((vt1.c0) IS TRUE))*((x'' IN (vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(vt1.c0)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY DESC, (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))<=((vt1.c0 COLLATE BINARY))) ASC, ((((vt1.c0) IS TRUE))*((x'' IN (vt1.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (TRIM(vt1.c0)) ORDER BY ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY DESC, (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))<=((vt1.c0 COLLATE BINARY))) ASC, ((((vt1.c0) IS TRUE))*((x'' IN (vt1.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c1 AS REAL) IN ((x'' IN (rt0.c1, rt0.c2))))) ORDER BY (((+ (rt0.c2)))<=(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c1 AS REAL) IN ((x'' IN (rt0.c1, rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((+ (rt0.c2)))<=(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))) ASC);
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c1 AS REAL) IN ((x'' IN (rt0.c1, rt0.c2))))) ORDER BY (((+ (rt0.c2)))<=(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c1 AS REAL) IN ((x'' IN (rt0.c1, rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((+ (rt0.c2)))<=(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))) ASC);
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c1 AS REAL) IN ((x'' IN (rt0.c1, rt0.c2))))) ORDER BY (((+ (rt0.c2)))<=(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))) ASC;
SELECT ALL * FROM vt1, v0, t0 WHERE (((((v0.c0)IS(v0.c0)))!=(((v0.c0) NOT NULL)))) ORDER BY ((v0.c0 COLLATE BINARY) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)IS(v0.c0)))<>(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, v0, t0 ORDER BY ((v0.c0 COLLATE BINARY) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM vt1, v0, t0 WHERE (((((v0.c0)IS(v0.c0)))!=(((v0.c0) NOT NULL)))) ORDER BY ((v0.c0 COLLATE BINARY) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)IS(v0.c0)))<>(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, v0, t0 ORDER BY ((v0.c0 COLLATE BINARY) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM vt1, v0, t0 WHERE (((((v0.c0)IS(v0.c0)))!=(((v0.c0) NOT NULL)))) ORDER BY ((v0.c0 COLLATE BINARY) IS FALSE)  NULLS FIRST;
SELECT * FROM vt1 RIGHT OUTER JOIN v0 ON ((((CAST(rt0.c0 AS INTEGER))OR((vt1.c0 IN ()))))AND(t0.c0)) FULL OUTER JOIN rt0 ON '531628889' INNER JOIN t0 ON (CAST(vt1.c0 AS BLOB) IN ()) WHERE (((((x'')OR(v0.c0 COLLATE RTRIM)))OR((t0.c0 IN (rt0.c0, rt0.c1))))) ORDER BY rt0.c1 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')OR(v0.c0 COLLATE RTRIM)))OR((t0.c0 IN (rt0.c0, rt0.c1))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN v0 ON ((((CAST(rt0.c0 AS INTEGER))OR((vt1.c0 IN ()))))AND(t0.c0)) FULL OUTER JOIN rt0 ON '531628889' INNER JOIN t0 ON (CAST(vt1.c0 AS BLOB) IN ()) ORDER BY rt0.c1 COLLATE BINARY);
SELECT * FROM vt1 RIGHT OUTER JOIN v0 ON ((((CAST(rt0.c0 AS INTEGER))OR((vt1.c0 IN ()))))AND(t0.c0)) FULL OUTER JOIN rt0 ON '531628889' INNER JOIN t0 ON (CAST(vt1.c0 AS BLOB) IN ()) WHERE (((((x'')OR(v0.c0 COLLATE RTRIM)))OR((t0.c0 IN (rt0.c0, rt0.c1))))) ORDER BY rt0.c1 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')OR(v0.c0 COLLATE RTRIM)))OR((t0.c0 IN (rt0.c0, rt0.c1))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN v0 ON ((((CAST(rt0.c0 AS INTEGER))OR((vt1.c0 IN ()))))AND(t0.c0)) FULL OUTER JOIN rt0 ON '531628889' INNER JOIN t0 ON (CAST(vt1.c0 AS BLOB) IN ()) ORDER BY rt0.c1 COLLATE BINARY);
SELECT * FROM vt1 RIGHT OUTER JOIN v0 ON ((((CAST(rt0.c0 AS INTEGER))OR((vt1.c0 IN ()))))AND(t0.c0)) FULL OUTER JOIN rt0 ON '531628889' INNER JOIN t0 ON (CAST(vt1.c0 AS BLOB) IN ()) WHERE (((((x'')OR(v0.c0 COLLATE RTRIM)))OR((t0.c0 IN (rt0.c0, rt0.c1))))) ORDER BY rt0.c1 COLLATE BINARY;
SELECT * FROM vt1, t0, rt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c0) IS FALSE))) AND ((((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c2)))))) ORDER BY ((+ (t0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((((rt0.c0) IS FALSE))) AND ((((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c2)))))) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY ((+ (t0.c0)) IN ())  NULLS LAST);
SELECT * FROM vt1, t0, rt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c0) IS FALSE))) AND ((((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c2)))))) ORDER BY ((+ (t0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((((rt0.c0) IS FALSE))) AND ((((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c2)))))) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY ((+ (t0.c0)) IN ())  NULLS LAST);
SELECT * FROM vt1, t0, rt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c0) IS FALSE))) AND ((((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c2)))))) ORDER BY ((+ (t0.c0)) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((json_array_length(0xc5718a9))/(0.2352526133997097))) ORDER BY (+ ((- (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((json_array_length(0Xc5718a9))/(0.2352526133997097))) IS TRUE)  as count FROM vt1 ORDER BY (+ ((- (vt1.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((json_array_length(0xc5718a9))/(0.2352526133997097))) ORDER BY (+ ((- (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((json_array_length(0Xc5718a9))/(0.2352526133997097))) IS TRUE)  as count FROM vt1 ORDER BY (+ ((- (vt1.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((json_array_length(0xc5718a9))/(0.2352526133997097))) ORDER BY (+ ((- (vt1.c0))))  NULLS LAST;
SELECT COUNT(*) FROM v0, t0, vt1 WHERE (CASE ((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0))  WHEN vt1.c0 THEN t0.c0 ELSE (NOT (vt1.c0)) END) ORDER BY (- (((((x'')AND(v0.c0)))AND(v0.c0)))) DESC  NULLS LAST, CAST(((v0.c0)OR(vt1.c0)) AS REAL) ASC  NULLS FIRST, (((((((((~ (v0.c0)))AND((((t0.c0, t0.c0, vt1.c0, v0.c0, vt1.c0, 0.7580871947406631, t0.c0)) NOT BETWEEN ((vt1.c0, NULL, t0.c0, t0.c0, t0.c0, t0.c0, vt1.c0)) AND (('', t0.c0, vt1.c0, vt1.c0, vt1.c0, t0.c0, t0.c0))))))OR(((t0.c0) BETWEEN (v0.c0) AND (t0.c0)))))OR((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((NULL))))))OR(v0.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0))  WHEN vt1.c0 THEN t0.c0 ELSE (NOT (vt1.c0)) END) IS TRUE)  as count FROM v0, t0, vt1 ORDER BY (- (((((x'')AND(v0.c0)))AND(v0.c0)))) DESC  NULLS LAST, CAST(((v0.c0)OR(vt1.c0)) AS REAL) ASC  NULLS FIRST, (((((((((~ (v0.c0)))AND((((t0.c0, t0.c0, vt1.c0, v0.c0, vt1.c0, 0.7580871947406631, t0.c0)) NOT BETWEEN ((vt1.c0, NULL, t0.c0, t0.c0, t0.c0, t0.c0, vt1.c0)) AND (('', t0.c0, vt1.c0, vt1.c0, vt1.c0, t0.c0, t0.c0))))))OR(((t0.c0) BETWEEN (v0.c0) AND (t0.c0)))))OR((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((NULL))))))OR(v0.c0 COLLATE BINARY)) DESC);
SELECT COUNT(*) FROM v0, t0, vt1 WHERE (CASE ((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0))  WHEN vt1.c0 THEN t0.c0 ELSE (NOT (vt1.c0)) END) ORDER BY (- (((((x'')AND(v0.c0)))AND(v0.c0)))) DESC  NULLS LAST, CAST(((v0.c0)OR(vt1.c0)) AS REAL) ASC  NULLS FIRST, (((((((((~ (v0.c0)))AND((((t0.c0, t0.c0, vt1.c0, v0.c0, vt1.c0, 0.7580871947406631, t0.c0)) NOT BETWEEN ((vt1.c0, NULL, t0.c0, t0.c0, t0.c0, t0.c0, vt1.c0)) AND (('', t0.c0, vt1.c0, vt1.c0, vt1.c0, t0.c0, t0.c0))))))OR(((t0.c0) BETWEEN (v0.c0) AND (t0.c0)))))OR((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((NULL))))))OR(v0.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0))  WHEN vt1.c0 THEN t0.c0 ELSE (NOT (vt1.c0)) END) IS TRUE)  as count FROM v0, t0, vt1 ORDER BY (- (((((x'')AND(v0.c0)))AND(v0.c0)))) DESC  NULLS LAST, CAST(((v0.c0)OR(vt1.c0)) AS REAL) ASC  NULLS FIRST, (((((((((~ (v0.c0)))AND((((t0.c0, t0.c0, vt1.c0, v0.c0, vt1.c0, 0.7580871947406631, t0.c0)) NOT BETWEEN ((vt1.c0, NULL, t0.c0, t0.c0, t0.c0, t0.c0, vt1.c0)) AND (('', t0.c0, vt1.c0, vt1.c0, vt1.c0, t0.c0, t0.c0))))))OR(((t0.c0) BETWEEN (v0.c0) AND (t0.c0)))))OR((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((NULL))))))OR(v0.c0 COLLATE BINARY)) DESC);
SELECT COUNT(*) FROM v0, t0, vt1 WHERE (CASE ((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0))  WHEN vt1.c0 THEN t0.c0 ELSE (NOT (vt1.c0)) END) ORDER BY (- (((((x'')AND(v0.c0)))AND(v0.c0)))) DESC  NULLS LAST, CAST(((v0.c0)OR(vt1.c0)) AS REAL) ASC  NULLS FIRST, (((((((((~ (v0.c0)))AND((((t0.c0, t0.c0, vt1.c0, v0.c0, vt1.c0, 0.7580871947406631, t0.c0)) NOT BETWEEN ((vt1.c0, NULL, t0.c0, t0.c0, t0.c0, t0.c0, vt1.c0)) AND (('', t0.c0, vt1.c0, vt1.c0, vt1.c0, t0.c0, t0.c0))))))OR(((t0.c0) BETWEEN (v0.c0) AND (t0.c0)))))OR((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((NULL))))))OR(v0.c0 COLLATE BINARY)) DESC;
SELECT COUNT(*) FROM vt1, t0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM t0 WHERE (IFNULL(CASE WHEN t0.c0 THEN t0.c0 ELSE 0.5594946093992433 END, ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY CAST((((t0.c0))>((t0.c0))) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(CASE WHEN t0.c0 THEN t0.c0 ELSE 0.5594946093992433 END, ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY CAST((((t0.c0))>((t0.c0))) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (IFNULL(CASE WHEN t0.c0 THEN t0.c0 ELSE 0.5594946093992433 END, ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY CAST((((t0.c0))>((t0.c0))) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(CASE WHEN t0.c0 THEN t0.c0 ELSE 0.5594946093992433 END, ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY CAST((((t0.c0))>((t0.c0))) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (IFNULL(CASE WHEN t0.c0 THEN t0.c0 ELSE 0.5594946093992433 END, ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY CAST((((t0.c0))>((t0.c0))) AS BLOB) ASC;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON (+ (((v0.c0) IS FALSE))) CROSS JOIN t0 ON rt0.c2 LEFT OUTER JOIN v0 ON (NOT (rt0.c1 COLLATE BINARY)) WHERE (CAST(((((((((((((rt0.c2)AND(rt0.c2)))AND(t0.c0)))AND(t0.c0)))AND(rt0.c0)))AND(vt1.c0)))AND(v0.c0)) AS INTEGER)) ORDER BY 0.42778946220188685  NULLS LAST, (- ('750544920')) COLLATE BINARY, ((('')*(rt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((((((rt0.c2)AND(rt0.c2)))AND(t0.c0)))AND(t0.c0)))AND(rt0.c0)))AND(vt1.c0)))AND(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON (+ (((v0.c0) IS FALSE))) CROSS JOIN t0 ON rt0.c2 LEFT OUTER JOIN v0 ON (NOT (rt0.c1 COLLATE BINARY)) ORDER BY 0.42778946220188685  NULLS LAST, (- ('750544920')) COLLATE BINARY, ((('')*(rt0.c0)) IN ()) ASC);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON (+ (((v0.c0) IS FALSE))) CROSS JOIN t0 ON rt0.c2 LEFT OUTER JOIN v0 ON (NOT (rt0.c1 COLLATE BINARY)) WHERE (CAST(((((((((((((rt0.c2)AND(rt0.c2)))AND(t0.c0)))AND(t0.c0)))AND(rt0.c0)))AND(vt1.c0)))AND(v0.c0)) AS INTEGER)) ORDER BY 0.42778946220188685  NULLS LAST, (- ('750544920')) COLLATE BINARY, ((('')*(rt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((((((rt0.c2)AND(rt0.c2)))AND(t0.c0)))AND(t0.c0)))AND(rt0.c0)))AND(vt1.c0)))AND(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON (+ (((v0.c0) IS FALSE))) CROSS JOIN t0 ON rt0.c2 LEFT OUTER JOIN v0 ON (NOT (rt0.c1 COLLATE BINARY)) ORDER BY 0.42778946220188685  NULLS LAST, (- ('750544920')) COLLATE BINARY, ((('')*(rt0.c0)) IN ()) ASC);
SELECT ALL * FROM t0 WHERE ((((t0.c0) IS TRUE) IN (((t0.c0)+(t0.c0))))) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) BETWEEN ((t0.c0 IN ())) AND (CASE NULL  WHEN '-1658406967' THEN t0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c0) IS TRUE) IN (((t0.c0)+(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) BETWEEN ((t0.c0 IN ())) AND (CASE NULL  WHEN '-1658406967' THEN t0.c0 END)) ASC);
SELECT ALL * FROM t0 WHERE ((((t0.c0) IS TRUE) IN (((t0.c0)+(t0.c0))))) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) BETWEEN ((t0.c0 IN ())) AND (CASE NULL  WHEN '-1658406967' THEN t0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c0) IS TRUE) IN (((t0.c0)+(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) BETWEEN ((t0.c0 IN ())) AND (CASE NULL  WHEN '-1658406967' THEN t0.c0 END)) ASC);
SELECT ALL * FROM t0 WHERE ((((t0.c0) IS TRUE) IN (((t0.c0)+(t0.c0))))) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) BETWEEN ((t0.c0 IN ())) AND (CASE NULL  WHEN '-1658406967' THEN t0.c0 END)) ASC;
SELECT * FROM t0 WHERE (((((t0.c0) NOT NULL)) BETWEEN ((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT NULL)) BETWEEN ((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c0) NOT NULL)) BETWEEN ((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT NULL)) BETWEEN ((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c0) NOT NULL)) BETWEEN ((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT * FROM vt1 WHERE (CASE ((vt1.c0)IS(0x710b81c7))  WHEN CAST(vt1.c0 AS INTEGER) THEN CAST(vt1.c0 AS TEXT) WHEN ((vt1.c0)LIKE(x'')) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0)!=(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)IS(0x710b81c7))  WHEN CAST(vt1.c0 AS INTEGER) THEN CAST(vt1.c0 AS TEXT) WHEN ((vt1.c0)LIKE(x'')) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0)!=(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE ((vt1.c0)IS(0x710b81c7))  WHEN CAST(vt1.c0 AS INTEGER) THEN CAST(vt1.c0 AS TEXT) WHEN ((vt1.c0)LIKE(x'')) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0)!=(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)IS(0x710b81c7))  WHEN CAST(vt1.c0 AS INTEGER) THEN CAST(vt1.c0 AS TEXT) WHEN ((vt1.c0)LIKE(x'')) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0)!=(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE ((vt1.c0)IS(0x710b81c7))  WHEN CAST(vt1.c0 AS INTEGER) THEN CAST(vt1.c0 AS TEXT) WHEN ((vt1.c0)LIKE(x'')) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0)!=(vt1.c0)) END);
SELECT * FROM t0 WHERE (((((t0.c0)>('祆{M')))*(((((t0.c0)AND(t0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)>('祆{M')))*(((((t0.c0)AND(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c0)>('祆{M')))*(((((t0.c0)AND(t0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)>('祆{M')))*(((((t0.c0)AND(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c0)>('祆{M')))*(((((t0.c0)AND(t0.c0)))AND(t0.c0)))));
SELECT * FROM t0, rt0 WHERE (rt0.c2) ORDER BY (((t0.c0)) BETWEEN ((((rt0.c0) NOTNULL))) AND ((((x'') NOT NULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM t0, rt0 ORDER BY (((t0.c0)) BETWEEN ((((rt0.c0) NOTNULL))) AND ((((x'') NOT NULL))))  NULLS FIRST);
SELECT * FROM t0, rt0 WHERE (rt0.c2) ORDER BY (((t0.c0)) BETWEEN ((((rt0.c0) NOTNULL))) AND ((((x'') NOT NULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM t0, rt0 ORDER BY (((t0.c0)) BETWEEN ((((rt0.c0) NOTNULL))) AND ((((x'') NOT NULL))))  NULLS FIRST);
SELECT * FROM t0, rt0 WHERE (rt0.c2) ORDER BY (((t0.c0)) BETWEEN ((((rt0.c0) NOTNULL))) AND ((((x'') NOT NULL))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (0.1467378841299538) ORDER BY IFNULL(DISTINCT t0.c0, TYPEOF(DISTINCT vt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.1467378841299538) IS TRUE)  as count FROM vt1, t0 ORDER BY IFNULL(DISTINCT t0.c0, TYPEOF(DISTINCT vt1.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (0.1467378841299538) ORDER BY IFNULL(DISTINCT t0.c0, TYPEOF(DISTINCT vt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.1467378841299538) IS TRUE)  as count FROM vt1, t0 ORDER BY IFNULL(DISTINCT t0.c0, TYPEOF(DISTINCT vt1.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (0.1467378841299538) ORDER BY IFNULL(DISTINCT t0.c0, TYPEOF(DISTINCT vt1.c0))  NULLS LAST;
SELECT ALL * FROM rt0, vt1, t0 WHERE (((vt1.c0)&(t0.c0)) COLLATE BINARY) ORDER BY ((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))AND(t0.c0))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)&(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1 NOT INDEXED, t0 ORDER BY ((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))AND(t0.c0))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt1, t0 WHERE (((vt1.c0)&(t0.c0)) COLLATE BINARY) ORDER BY ((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))AND(t0.c0))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)&(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1 NOT INDEXED, t0 ORDER BY ((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))AND(t0.c0))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt1, t0 WHERE (((vt1.c0)&(t0.c0)) COLLATE BINARY) ORDER BY ((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))AND(t0.c0))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) DESC  NULLS LAST;
SELECT ALL * FROM vt1, t0 WHERE (((((((vt1.c0)OR(t0.c0)))AND(t0.c0)))IS NOT((vt1.c0 IN ())))) ORDER BY CAST(0.9151105497516588 AS BLOB);
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(t0.c0)))AND(t0.c0)))IS NOT((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, t0 ORDER BY CAST(0.9151105497516588 AS BLOB));
SELECT ALL * FROM vt1, t0 WHERE (((((((vt1.c0)OR(t0.c0)))AND(t0.c0)))IS NOT((vt1.c0 IN ())))) ORDER BY CAST(0.9151105497516588 AS BLOB);
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(t0.c0)))AND(t0.c0)))IS NOT((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, t0 ORDER BY CAST(0.9151105497516588 AS BLOB));
SELECT ALL * FROM vt1, t0 WHERE (((((((vt1.c0)OR(t0.c0)))AND(t0.c0)))IS NOT((vt1.c0 IN ())))) ORDER BY CAST(0.9151105497516588 AS BLOB);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN t0 ON CASE (((rt0.c1, rt0.c0, t0.c0)) BETWEEN ((v0.c0, v0.c0, rt0.c0)) AND ((v0.c0, rt0.c2, v0.c0)))  WHEN CASE WHEN rt0.c0 THEN v0.c0 ELSE t0.c0 END THEN ((v0.c0)||(rt0.c1)) WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c0)LIKE('?')) WHEN CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 END THEN ((('1654386685', v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, rt0.c1)) AND ((rt0.c1, rt0.c1, v0.c0))) END INNER JOIN rt0 ON CASE CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE '0.9498990265406903' END  WHEN DATE(NULL, t0.c0, rt0.c0, t0.c0, t0.c0) THEN CAST(rt0.c0 AS TEXT) END WHERE (((((0.6741728205164054) NOT BETWEEN (NULL) AND (rt0.c2)))-((((t0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) ORDER BY 0.9993286551887819 ASC, ((NULLIF(DISTINCT rt0.c1, t0.c0)) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.6741728205164054) NOT BETWEEN (NULL) AND (rt0.c2)))-((((t0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON CASE (((rt0.c1, rt0.c0, t0.c0)) BETWEEN ((v0.c0, v0.c0, rt0.c0)) AND ((v0.c0, rt0.c2, v0.c0)))  WHEN CASE WHEN rt0.c0 THEN v0.c0 ELSE t0.c0 END THEN ((v0.c0)||(rt0.c1)) WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c0)LIKE('?')) WHEN CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 END THEN ((('1654386685', v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, rt0.c1)) AND ((rt0.c1, rt0.c1, v0.c0))) END INNER JOIN rt0 ON CASE CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE '0.9498990265406903' END  WHEN DATE(NULL, t0.c0, rt0.c0, t0.c0, t0.c0) THEN CAST(rt0.c0 AS TEXT) END ORDER BY 0.9993286551887819 ASC, ((NULLIF(DISTINCT rt0.c1, t0.c0)) NOT NULL) ASC);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN t0 ON CASE (((rt0.c1, rt0.c0, t0.c0)) BETWEEN ((v0.c0, v0.c0, rt0.c0)) AND ((v0.c0, rt0.c2, v0.c0)))  WHEN CASE WHEN rt0.c0 THEN v0.c0 ELSE t0.c0 END THEN ((v0.c0)||(rt0.c1)) WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c0)LIKE('?')) WHEN CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 END THEN ((('1654386685', v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, rt0.c1)) AND ((rt0.c1, rt0.c1, v0.c0))) END INNER JOIN rt0 ON CASE CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE '0.9498990265406903' END  WHEN DATE(NULL, t0.c0, rt0.c0, t0.c0, t0.c0) THEN CAST(rt0.c0 AS TEXT) END WHERE (((((0.6741728205164054) NOT BETWEEN (NULL) AND (rt0.c2)))-((((t0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) ORDER BY 0.9993286551887819 ASC, ((NULLIF(DISTINCT rt0.c1, t0.c0)) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.6741728205164054) NOT BETWEEN (NULL) AND (rt0.c2)))-((((t0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON CASE (((rt0.c1, rt0.c0, t0.c0)) BETWEEN ((v0.c0, v0.c0, rt0.c0)) AND ((v0.c0, rt0.c2, v0.c0)))  WHEN CASE WHEN rt0.c0 THEN v0.c0 ELSE t0.c0 END THEN ((v0.c0)||(rt0.c1)) WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c0)LIKE('?')) WHEN CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 END THEN ((('1654386685', v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, rt0.c1)) AND ((rt0.c1, rt0.c1, v0.c0))) END INNER JOIN rt0 ON CASE CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE '0.9498990265406903' END  WHEN DATE(NULL, t0.c0, rt0.c0, t0.c0, t0.c0) THEN CAST(rt0.c0 AS TEXT) END ORDER BY 0.9993286551887819 ASC, ((NULLIF(DISTINCT rt0.c1, t0.c0)) NOT NULL) ASC);
SELECT * FROM rt0 WHERE (TRIM(rt0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((TRIM(rt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (TRIM(rt0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((TRIM(rt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (TRIM(rt0.c0) COLLATE NOCASE);
SELECT COUNT(*) FROM v0, t0 WHERE (v0.c0) ORDER BY TRIM(DISTINCT CASE '쩡5'  WHEN v0.c0 THEN t0.c0 END, ((((v0.c0)OR(t0.c0)))AND(t0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, t0 ORDER BY TRIM(DISTINCT CASE '쩡5'  WHEN v0.c0 THEN t0.c0 END, ((((v0.c0)OR(t0.c0)))AND(t0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0 WHERE (v0.c0) ORDER BY TRIM(DISTINCT CASE '쩡5'  WHEN v0.c0 THEN t0.c0 END, ((((v0.c0)OR(t0.c0)))AND(t0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, t0 ORDER BY TRIM(DISTINCT CASE '쩡5'  WHEN v0.c0 THEN t0.c0 END, ((((v0.c0)OR(t0.c0)))AND(t0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0 WHERE (v0.c0) ORDER BY TRIM(DISTINCT CASE '쩡5'  WHEN v0.c0 THEN t0.c0 END, ((((v0.c0)OR(t0.c0)))AND(t0.c0)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt1 ON ((((((vt1.c0))=((vt1.c0))), ((v0.c0)=(v0.c0)), ((v0.c0)|(vt1.c0))))>(((- (vt1.c0)), (v0.c0 IN ()), 0.39731143674919334))) WHERE ((((vt1.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))) AND ((v0.c0)))) ORDER BY vt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))) AND ((v0.c0)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON ((((((vt1.c0))=((vt1.c0))), ((v0.c0)=(v0.c0)), ((v0.c0)|(vt1.c0))))>(((- (vt1.c0)), (v0.c0 IN ()), 0.39731143674919334))) ORDER BY vt1.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt1 ON ((((((vt1.c0))=((vt1.c0))), ((v0.c0)=(v0.c0)), ((v0.c0)|(vt1.c0))))>(((- (vt1.c0)), (v0.c0 IN ()), 0.39731143674919334))) WHERE ((((vt1.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))) AND ((v0.c0)))) ORDER BY vt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))) AND ((v0.c0)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON ((((((vt1.c0))=((vt1.c0))), ((v0.c0)=(v0.c0)), ((v0.c0)|(vt1.c0))))>(((- (vt1.c0)), (v0.c0 IN ()), 0.39731143674919334))) ORDER BY vt1.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt1 ON ((((((vt1.c0))=((vt1.c0))), ((v0.c0)=(v0.c0)), ((v0.c0)|(vt1.c0))))>(((- (vt1.c0)), (v0.c0 IN ()), 0.39731143674919334))) WHERE ((((vt1.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))) AND ((v0.c0)))) ORDER BY vt1.c0 DESC  NULLS LAST;
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON UPPER(((('~4'))=((rt0.c2)))) INNER JOIN v0 ON ((SQLITE_COMPILEOPTION_USED(t0.c0))>(((v0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) WHERE ((((((v0.c0))<=((v0.c0)))) NOT BETWEEN ((v0.c0 IN (NULL))) AND (((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0))<=((v0.c0)))) NOT BETWEEN ((v0.c0 IN (NULL))) AND (((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON UPPER(((('~4'))==((rt0.c2)))) INNER JOIN v0 ON ((SQLITE_COMPILEOPTION_USED(t0.c0))>(((v0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON UPPER(((('~4'))=((rt0.c2)))) INNER JOIN v0 ON ((SQLITE_COMPILEOPTION_USED(t0.c0))>(((v0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) WHERE ((((((v0.c0))<=((v0.c0)))) NOT BETWEEN ((v0.c0 IN (NULL))) AND (((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0))<=((v0.c0)))) NOT BETWEEN ((v0.c0 IN (NULL))) AND (((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON UPPER(((('~4'))==((rt0.c2)))) INNER JOIN v0 ON ((SQLITE_COMPILEOPTION_USED(t0.c0))>(((v0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON UPPER(((('~4'))=((rt0.c2)))) INNER JOIN v0 ON ((SQLITE_COMPILEOPTION_USED(t0.c0))>(((v0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) WHERE ((((((v0.c0))<=((v0.c0)))) NOT BETWEEN ((v0.c0 IN (NULL))) AND (((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c2)))));
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c2)OR(rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)OR(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c2)OR(rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)OR(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c2)OR(rt0.c2))) NOTNULL));
SELECT COUNT(*) FROM v0, vt1, rt0 NATURAL JOIN t0 WHERE (((t0.c0)IS NOT(rt0.c2)) COLLATE RTRIM) ORDER BY ((NOT (v0.c0)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0)IS NOT(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt1, rt0 NATURAL JOIN t0 ORDER BY ((NOT (v0.c0)) IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt1, rt0 NATURAL JOIN t0 WHERE (((t0.c0)IS NOT(rt0.c2)) COLLATE RTRIM) ORDER BY ((NOT (v0.c0)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0)IS NOT(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt1, rt0 NATURAL JOIN t0 ORDER BY ((NOT (v0.c0)) IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt1, rt0 NATURAL JOIN t0 WHERE (((t0.c0)IS NOT(rt0.c2)) COLLATE RTRIM) ORDER BY ((NOT (v0.c0)) IN ()) ASC  NULLS FIRST;
SELECT * FROM v0, vt1 WHERE ('769458365') ORDER BY (((vt1.c0 IN ())) BETWEEN (((vt1.c0)<(vt1.c0))) AND (v0.c0)) DESC, CASE vt1.c0  WHEN CAST(v0.c0 AS INTEGER) THEN (v0.c0 IN ()) ELSE ((v0.c0)>=(v0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (('769458365') IS TRUE)  as count FROM v0, vt1 ORDER BY (((vt1.c0 IN ())) BETWEEN (((vt1.c0)<(vt1.c0))) AND (v0.c0)) DESC, CASE vt1.c0  WHEN CAST(v0.c0 AS INTEGER) THEN (v0.c0 IN ()) ELSE ((v0.c0)>=(v0.c0)) END ASC);
SELECT * FROM v0, vt1 WHERE ('769458365') ORDER BY (((vt1.c0 IN ())) BETWEEN (((vt1.c0)<(vt1.c0))) AND (v0.c0)) DESC, CASE vt1.c0  WHEN CAST(v0.c0 AS INTEGER) THEN (v0.c0 IN ()) ELSE ((v0.c0)>=(v0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (('769458365') IS TRUE)  as count FROM v0, vt1 ORDER BY (((vt1.c0 IN ())) BETWEEN (((vt1.c0)<(vt1.c0))) AND (v0.c0)) DESC, CASE vt1.c0  WHEN CAST(v0.c0 AS INTEGER) THEN (v0.c0 IN ()) ELSE ((v0.c0)>=(v0.c0)) END ASC);
SELECT * FROM v0, vt1 WHERE ('769458365') ORDER BY (((vt1.c0 IN ())) BETWEEN (((vt1.c0)<(vt1.c0))) AND (v0.c0)) DESC, CASE vt1.c0  WHEN CAST(v0.c0 AS INTEGER) THEN (v0.c0 IN ()) ELSE ((v0.c0)>=(v0.c0)) END ASC;
SELECT * FROM vt1 FULL OUTER JOIN t0 ON UPPER(vt1.c0) LEFT OUTER JOIN rt0 ON (HEX(DISTINCT rt0.c1) IN (CAST(rt0.c2 AS BLOB), ((((rt0.c1)OR(vt1.c0)))OR(vt1.c0)))) WHERE ((NOT (((t0.c0) ISNULL)))) ORDER BY CASE ((((rt0.c1)AND(rt0.c2)))AND(t0.c0))  WHEN ((vt1.c0)-(x'1f08')) THEN ((vt1.c0) IS TRUE) WHEN ((((((((vt1.c0)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)) THEN ((((vt1.c0)OR(t0.c0)))OR(t0.c0)) WHEN ((((rt0.c2)OR(t0.c0)))OR(-1143214113)) THEN CASE WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END WHEN x'' THEN (~ (rt0.c1)) WHEN ((((t0.c0)AND(rt0.c0)))OR(vt1.c0)) THEN (('0.9060697938291837') IS FALSE) ELSE ((t0.c0)/(rt0.c2)) END;
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c0) ISNULL)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON UPPER(vt1.c0) LEFT OUTER JOIN rt0 ON (HEX(DISTINCT rt0.c1) IN (CAST(rt0.c2 AS BLOB), ((((rt0.c1)OR(vt1.c0)))OR(vt1.c0)))) ORDER BY CASE ((((rt0.c1)AND(rt0.c2)))AND(t0.c0))  WHEN ((vt1.c0)-(x'1f08')) THEN ((vt1.c0) IS TRUE) WHEN ((((((((vt1.c0)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)) THEN ((((vt1.c0)OR(t0.c0)))OR(t0.c0)) WHEN ((((rt0.c2)OR(t0.c0)))OR(-1143214113)) THEN CASE WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END WHEN x'' THEN (~ (rt0.c1)) WHEN ((((t0.c0)AND(rt0.c0)))OR(vt1.c0)) THEN (('0.9060697938291837') IS FALSE) ELSE ((t0.c0)/(rt0.c2)) END);
SELECT * FROM vt1 FULL OUTER JOIN t0 ON UPPER(vt1.c0) LEFT OUTER JOIN rt0 ON (HEX(DISTINCT rt0.c1) IN (CAST(rt0.c2 AS BLOB), ((((rt0.c1)OR(vt1.c0)))OR(vt1.c0)))) WHERE ((NOT (((t0.c0) ISNULL)))) ORDER BY CASE ((((rt0.c1)AND(rt0.c2)))AND(t0.c0))  WHEN ((vt1.c0)-(x'1f08')) THEN ((vt1.c0) IS TRUE) WHEN ((((((((vt1.c0)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)) THEN ((((vt1.c0)OR(t0.c0)))OR(t0.c0)) WHEN ((((rt0.c2)OR(t0.c0)))OR(-1143214113)) THEN CASE WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END WHEN x'' THEN (~ (rt0.c1)) WHEN ((((t0.c0)AND(rt0.c0)))OR(vt1.c0)) THEN (('0.9060697938291837') IS FALSE) ELSE ((t0.c0)/(rt0.c2)) END;
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c0) ISNULL)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON UPPER(vt1.c0) LEFT OUTER JOIN rt0 ON (HEX(DISTINCT rt0.c1) IN (CAST(rt0.c2 AS BLOB), ((((rt0.c1)OR(vt1.c0)))OR(vt1.c0)))) ORDER BY CASE ((((rt0.c1)AND(rt0.c2)))AND(t0.c0))  WHEN ((vt1.c0)-(x'1f08')) THEN ((vt1.c0) IS TRUE) WHEN ((((((((vt1.c0)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)) THEN ((((vt1.c0)OR(t0.c0)))OR(t0.c0)) WHEN ((((rt0.c2)OR(t0.c0)))OR(-1143214113)) THEN CASE WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END WHEN x'' THEN (~ (rt0.c1)) WHEN ((((t0.c0)AND(rt0.c0)))OR(vt1.c0)) THEN (('0.9060697938291837') IS FALSE) ELSE ((t0.c0)/(rt0.c2)) END);
SELECT * FROM vt1 FULL OUTER JOIN t0 ON UPPER(vt1.c0) LEFT OUTER JOIN rt0 ON (HEX(DISTINCT rt0.c1) IN (CAST(rt0.c2 AS BLOB), ((((rt0.c1)OR(vt1.c0)))OR(vt1.c0)))) WHERE ((NOT (((t0.c0) ISNULL)))) ORDER BY CASE ((((rt0.c1)AND(rt0.c2)))AND(t0.c0))  WHEN ((vt1.c0)-(x'1f08')) THEN ((vt1.c0) IS TRUE) WHEN ((((((((vt1.c0)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)) THEN ((((vt1.c0)OR(t0.c0)))OR(t0.c0)) WHEN ((((rt0.c2)OR(t0.c0)))OR(-1143214113)) THEN CASE WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END WHEN x'' THEN (~ (rt0.c1)) WHEN ((((t0.c0)AND(rt0.c0)))OR(vt1.c0)) THEN (('0.9060697938291837') IS FALSE) ELSE ((t0.c0)/(rt0.c2)) END;
SELECT * FROM vt1, rt0 WHERE (CASE 'y_hh2%!v⭦'  WHEN ((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c2)) THEN (((rt0.c2))==((rt0.c2))) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ((CASE 'y_hh2%!v⭦'  WHEN ((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c2)) THEN (((rt0.c2))==((rt0.c2))) ELSE NULL END) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (CASE 'y_hh2%!v⭦'  WHEN ((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c2)) THEN (((rt0.c2))==((rt0.c2))) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ((CASE 'y_hh2%!v⭦'  WHEN ((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c2)) THEN (((rt0.c2))==((rt0.c2))) ELSE NULL END) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (CASE 'y_hh2%!v⭦'  WHEN ((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c2)) THEN (((rt0.c2))==((rt0.c2))) ELSE NULL END);
SELECT * FROM rt0 WHERE (CAST((NOT (rt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST((NOT (rt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST((NOT (rt0.c1)) AS BLOB));
SELECT * FROM rt0, vt1, v0, t0 WHERE (CAST((((t0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))) AS INTEGER)) IS TRUE)  as count FROM rt0, vt1, v0, t0);
SELECT * FROM rt0, vt1, v0, t0 WHERE (CAST((((t0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))) AS INTEGER)) IS TRUE)  as count FROM rt0, vt1, v0, t0);
SELECT * FROM rt0, vt1, v0, t0 WHERE (CAST((((t0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))) AS INTEGER));
SELECT ALL * FROM rt0, vt1 WHERE (((((vt1.c0) NOT NULL))GLOB(NULLIF(rt0.c2, rt0.c0)))) ORDER BY CAST(rt0.c0 AS NUMERIC) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT NULL))GLOB(NULLIF(rt0.c2, rt0.c0)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(rt0.c0 AS NUMERIC) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE (((((vt1.c0) NOT NULL))GLOB(NULLIF(rt0.c2, rt0.c0)))) ORDER BY CAST(rt0.c0 AS NUMERIC) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT NULL))GLOB(NULLIF(rt0.c2, rt0.c0)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(rt0.c0 AS NUMERIC) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE (((((vt1.c0) NOT NULL))GLOB(NULLIF(rt0.c2, rt0.c0)))) ORDER BY CAST(rt0.c0 AS NUMERIC) COLLATE RTRIM ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c0, rt0.c1, v0.c0)) BETWEEN ((0.5967251847125415, ((rt0.c2)/(rt0.c0)), ((((((((((((rt0.c1)OR(rt0.c1)))AND(v0.c0)))AND(rt0.c2)))AND(v0.c0)))AND(v0.c0)))AND(rt0.c0)))) AND ((((v0.c0)GLOB(v0.c0)), ((rt0.c0)||(v0.c0)), (- (rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c1, v0.c0)) BETWEEN ((0.5967251847125415, ((rt0.c2)/(rt0.c0)), ((((((((((((rt0.c1)OR(rt0.c1)))AND(v0.c0)))AND(rt0.c2)))AND(v0.c0)))AND(v0.c0)))AND(rt0.c0)))) AND ((((v0.c0)GLOB(v0.c0)), ((rt0.c0)||(v0.c0)), (- (rt0.c1)))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c0, rt0.c1, v0.c0)) BETWEEN ((0.5967251847125415, ((rt0.c2)/(rt0.c0)), ((((((((((((rt0.c1)OR(rt0.c1)))AND(v0.c0)))AND(rt0.c2)))AND(v0.c0)))AND(v0.c0)))AND(rt0.c0)))) AND ((((v0.c0)GLOB(v0.c0)), ((rt0.c0)||(v0.c0)), (- (rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c1, v0.c0)) BETWEEN ((0.5967251847125415, ((rt0.c2)/(rt0.c0)), ((((((((((((rt0.c1)OR(rt0.c1)))AND(v0.c0)))AND(rt0.c2)))AND(v0.c0)))AND(v0.c0)))AND(rt0.c0)))) AND ((((v0.c0)GLOB(v0.c0)), ((rt0.c0)||(v0.c0)), (- (rt0.c1)))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c0, rt0.c1, v0.c0)) BETWEEN ((0.5967251847125415, ((rt0.c2)/(rt0.c0)), ((((((((((((rt0.c1)OR(rt0.c1)))AND(v0.c0)))AND(rt0.c2)))AND(v0.c0)))AND(v0.c0)))AND(rt0.c0)))) AND ((((v0.c0)GLOB(v0.c0)), ((rt0.c0)||(v0.c0)), (- (rt0.c1))))));
SELECT ALL * FROM v0 WHERE (((v0.c0)OR((+ (v0.c0))))) ORDER BY v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)OR((+ (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC);
SELECT ALL * FROM v0 WHERE (((v0.c0)OR((+ (v0.c0))))) ORDER BY v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)OR((+ (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC);
SELECT ALL * FROM v0 WHERE (((v0.c0)OR((+ (v0.c0))))) ORDER BY v0.c0 DESC;
SELECT ALL * FROM t0 WHERE (UPPER(DISTINCT ((((t0.c0)AND(t0.c0)))AND(t0.c0)))) ORDER BY '65216609' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT ((((t0.c0)AND(t0.c0)))AND(t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY '65216609' ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (UPPER(DISTINCT ((((t0.c0)AND(t0.c0)))AND(t0.c0)))) ORDER BY '65216609' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT ((((t0.c0)AND(t0.c0)))AND(t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY '65216609' ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (UPPER(DISTINCT ((((t0.c0)AND(t0.c0)))AND(t0.c0)))) ORDER BY '65216609' ASC  NULLS FIRST;
SELECT * FROM rt0, v0, t0, vt1 WHERE (x'') ORDER BY (((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, v0, t0, vt1 ORDER BY (((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) IN ())  NULLS LAST);
SELECT * FROM rt0, v0, t0, vt1 WHERE (x'') ORDER BY (((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, v0, t0, vt1 ORDER BY (((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) IN ())  NULLS LAST);
SELECT * FROM rt0, v0, t0, vt1 WHERE (x'') ORDER BY (((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) IN ())  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0 RIGHT OUTER JOIN v0 ON CASE t0.c0  WHEN ((rt0.c0)%(v0.c0)) THEN 'f#⁒A2I3' END WHERE ((((rt0.c0 COLLATE NOCASE))==((UPPER(v0.c0))))) ORDER BY (NOT ((((x'')) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 COLLATE NOCASE))==((UPPER(v0.c0))))) IS TRUE)  as count FROM t0, rt0 RIGHT OUTER JOIN v0 ON CASE t0.c0  WHEN ((rt0.c0)%(v0.c0)) THEN 'f#⁒A2I3' END ORDER BY (NOT ((((x'')) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0 RIGHT OUTER JOIN v0 ON CASE t0.c0  WHEN ((rt0.c0)%(v0.c0)) THEN 'f#⁒A2I3' END WHERE ((((rt0.c0 COLLATE NOCASE))==((UPPER(v0.c0))))) ORDER BY (NOT ((((x'')) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 COLLATE NOCASE))==((UPPER(v0.c0))))) IS TRUE)  as count FROM t0, rt0 RIGHT OUTER JOIN v0 ON CASE t0.c0  WHEN ((rt0.c0)%(v0.c0)) THEN 'f#⁒A2I3' END ORDER BY (NOT ((((x'')) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0 RIGHT OUTER JOIN v0 ON CASE t0.c0  WHEN ((rt0.c0)%(v0.c0)) THEN 'f#⁒A2I3' END WHERE ((((rt0.c0 COLLATE NOCASE))==((UPPER(v0.c0))))) ORDER BY (NOT ((((x'')) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))))) ASC  NULLS FIRST;
SELECT * FROM v0 WHERE (((x'') NOTNULL));
SELECT SUM(count) FROM (SELECT ((((x'') NOTNULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((x'') NOTNULL));
SELECT SUM(count) FROM (SELECT ((((x'') NOTNULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((x'') NOTNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0) IS FALSE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c0) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0) IS FALSE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c0) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0) IS FALSE) COLLATE RTRIM);
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM) NOT BETWEEN (((rt0.c2)LIKE(rt0.c0))) AND ((~ (rt0.c1))))) ORDER BY CAST(ABS(0xffffffff9afbc142) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE RTRIM) NOT BETWEEN (((rt0.c2)LIKE(rt0.c0))) AND ((~ (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(ABS(0Xffffffff9afbc142) AS NUMERIC) ASC);
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM) NOT BETWEEN (((rt0.c2)LIKE(rt0.c0))) AND ((~ (rt0.c1))))) ORDER BY CAST(ABS(0xffffffff9afbc142) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE RTRIM) NOT BETWEEN (((rt0.c2)LIKE(rt0.c0))) AND ((~ (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(ABS(0Xffffffff9afbc142) AS NUMERIC) ASC);
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM) NOT BETWEEN (((rt0.c2)LIKE(rt0.c0))) AND ((~ (rt0.c1))))) ORDER BY CAST(ABS(0xffffffff9afbc142) AS NUMERIC) ASC;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((+ (((rt0.c2)IS NOT(rt0.c1))))) ORDER BY CASE (~ (rt0.c1))  WHEN (((x'b463'))>=((t0.c0))) THEN CAST(rt0.c0 AS BLOB) WHEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)) THEN ((((t0.c0)AND(rt0.c2)))AND(rt0.c0)) WHEN ('-1625102485' IN ()) THEN rt0.c2 ELSE ((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c2)IS NOT(rt0.c1))))) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE (~ (rt0.c1))  WHEN (((x'b463'))>=((t0.c0))) THEN CAST(rt0.c0 AS BLOB) WHEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)) THEN ((((t0.c0)AND(rt0.c2)))AND(rt0.c0)) WHEN ('-1625102485' IN ()) THEN rt0.c2 ELSE ((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c0)) END);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((+ (((rt0.c2)IS NOT(rt0.c1))))) ORDER BY CASE (~ (rt0.c1))  WHEN (((x'b463'))>=((t0.c0))) THEN CAST(rt0.c0 AS BLOB) WHEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)) THEN ((((t0.c0)AND(rt0.c2)))AND(rt0.c0)) WHEN ('-1625102485' IN ()) THEN rt0.c2 ELSE ((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c2)IS NOT(rt0.c1))))) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE (~ (rt0.c1))  WHEN (((x'b463'))>=((t0.c0))) THEN CAST(rt0.c0 AS BLOB) WHEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)) THEN ((((t0.c0)AND(rt0.c2)))AND(rt0.c0)) WHEN ('-1625102485' IN ()) THEN rt0.c2 ELSE ((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c0)) END);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((+ (((rt0.c2)IS NOT(rt0.c1))))) ORDER BY CASE (~ (rt0.c1))  WHEN (((x'b463'))>=((t0.c0))) THEN CAST(rt0.c0 AS BLOB) WHEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)) THEN ((((t0.c0)AND(rt0.c2)))AND(rt0.c0)) WHEN ('-1625102485' IN ()) THEN rt0.c2 ELSE ((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c0)) END;
SELECT * FROM t0 WHERE (((t0.c0) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) AND ((- (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) AND ((- (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) AND ((- (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) AND ((- (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) AND ((- (t0.c0)))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN v0 ON NULL CROSS JOIN rt0 ON HEX(DISTINCT x'') COLLATE BINARY COLLATE BINARY LEFT OUTER JOIN vt1 ON ((t0.c0)%('D틼w')) COLLATE RTRIM WHERE (CASE ((vt1.c0)||(vt1.c0))  WHEN ((rt0.c1) NOTNULL) THEN LIKELY(vt1.c0) END) ORDER BY ((((v0.c0) ISNULL))+(((rt0.c2)>(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0)||(vt1.c0))  WHEN ((rt0.c1) NOTNULL) THEN LIKELY(vt1.c0) END) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON NULL CROSS JOIN rt0 ON HEX(DISTINCT x'') COLLATE BINARY COLLATE BINARY LEFT OUTER JOIN vt1 ON ((t0.c0)%('D틼w')) COLLATE RTRIM ORDER BY ((((v0.c0) ISNULL))+(((rt0.c2)>(vt1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN v0 ON NULL CROSS JOIN rt0 ON HEX(DISTINCT x'') COLLATE BINARY COLLATE BINARY LEFT OUTER JOIN vt1 ON ((t0.c0)%('D틼w')) COLLATE RTRIM WHERE (CASE ((vt1.c0)||(vt1.c0))  WHEN ((rt0.c1) NOTNULL) THEN LIKELY(vt1.c0) END) ORDER BY ((((v0.c0) ISNULL))+(((rt0.c2)>(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0)||(vt1.c0))  WHEN ((rt0.c1) NOTNULL) THEN LIKELY(vt1.c0) END) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON NULL CROSS JOIN rt0 ON HEX(DISTINCT x'') COLLATE BINARY COLLATE BINARY LEFT OUTER JOIN vt1 ON ((t0.c0)%('D틼w')) COLLATE RTRIM ORDER BY ((((v0.c0) ISNULL))+(((rt0.c2)>(vt1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN v0 ON NULL CROSS JOIN rt0 ON HEX(DISTINCT x'') COLLATE BINARY COLLATE BINARY LEFT OUTER JOIN vt1 ON ((t0.c0)%('D틼w')) COLLATE RTRIM WHERE (CASE ((vt1.c0)||(vt1.c0))  WHEN ((rt0.c1) NOTNULL) THEN LIKELY(vt1.c0) END) ORDER BY ((((v0.c0) ISNULL))+(((rt0.c2)>(vt1.c0))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((t0.c0) IS TRUE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0) IS TRUE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0) IS TRUE)) IS TRUE));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((LIKELIHOOD('rm쩡tsq', 0.7461722895680859)) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (v0.c0 COLLATE BINARY))) ORDER BY ((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD('rm쩡tsq', 0.7461722895680859)) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((LIKELIHOOD('rm쩡tsq', 0.7461722895680859)) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (v0.c0 COLLATE BINARY))) ORDER BY ((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD('rm쩡tsq', 0.7461722895680859)) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((LIKELIHOOD('rm쩡tsq', 0.7461722895680859)) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (v0.c0 COLLATE BINARY))) ORDER BY ((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)) COLLATE RTRIM DESC;
SELECT ALL COUNT(*) FROM vt1, t0, rt0, v0 WHERE (((((v0.c0) NOT NULL)) NOT BETWEEN (((t0.c0) NOT BETWEEN (0.20718887965120758) AND (rt0.c0))) AND ((NOT (rt0.c2))))) ORDER BY ((RTRIM(rt0.c1)) BETWEEN (((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c2))) AND ((~ (rt0.c0)))) ASC, (NOT (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT NULL)) NOT BETWEEN (((t0.c0) NOT BETWEEN (0.20718887965120758) AND (rt0.c0))) AND ((NOT (rt0.c2))))) IS TRUE)  as count FROM vt1, t0, rt0, v0 ORDER BY ((RTRIM(rt0.c1)) BETWEEN (((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c2))) AND ((~ (rt0.c0)))) ASC, (NOT (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0, rt0, v0 WHERE (((((v0.c0) NOT NULL)) NOT BETWEEN (((t0.c0) NOT BETWEEN (0.20718887965120758) AND (rt0.c0))) AND ((NOT (rt0.c2))))) ORDER BY ((RTRIM(rt0.c1)) BETWEEN (((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c2))) AND ((~ (rt0.c0)))) ASC, (NOT (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT NULL)) NOT BETWEEN (((t0.c0) NOT BETWEEN (0.20718887965120758) AND (rt0.c0))) AND ((NOT (rt0.c2))))) IS TRUE)  as count FROM vt1, t0, rt0, v0 ORDER BY ((RTRIM(rt0.c1)) BETWEEN (((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c2))) AND ((~ (rt0.c0)))) ASC, (NOT (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0, rt0, v0 WHERE (((((v0.c0) NOT NULL)) NOT BETWEEN (((t0.c0) NOT BETWEEN (0.20718887965120758) AND (rt0.c0))) AND ((NOT (rt0.c2))))) ORDER BY ((RTRIM(rt0.c1)) BETWEEN (((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c2))) AND ((~ (rt0.c0)))) ASC, (NOT (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))  NULLS LAST;
SELECT ALL * FROM t0 FULL OUTER JOIN vt1 ON (((rt0.c1)) BETWEEN (((NULL IN (t0.c0, vt1.c0)))) AND ((-1366378975))) INNER JOIN rt0 ON (((rt0.c1 COLLATE NOCASE))<=((CASE WHEN rt0.c1 THEN rt0.c0 END))) WHERE (NULL) ORDER BY (((- (t0.c0))) NOT BETWEEN (((rt0.c2)IS(t0.c0))) AND (((rt0.c0)IS NOT(t0.c0))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON (((rt0.c1)) BETWEEN (((NULL IN (t0.c0, vt1.c0)))) AND ((-1366378975))) INNER JOIN rt0 ON (((rt0.c1 COLLATE NOCASE))<=((CASE WHEN rt0.c1 THEN rt0.c0 END))) ORDER BY (((- (t0.c0))) NOT BETWEEN (((rt0.c2)IS(t0.c0))) AND (((rt0.c0)IS NOT(t0.c0)))));
SELECT ALL * FROM t0 FULL OUTER JOIN vt1 ON (((rt0.c1)) BETWEEN (((NULL IN (t0.c0, vt1.c0)))) AND ((-1366378975))) INNER JOIN rt0 ON (((rt0.c1 COLLATE NOCASE))<=((CASE WHEN rt0.c1 THEN rt0.c0 END))) WHERE (NULL) ORDER BY (((- (t0.c0))) NOT BETWEEN (((rt0.c2)IS(t0.c0))) AND (((rt0.c0)IS NOT(t0.c0))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON (((rt0.c1)) BETWEEN (((NULL IN (t0.c0, vt1.c0)))) AND ((-1366378975))) INNER JOIN rt0 ON (((rt0.c1 COLLATE NOCASE))<=((CASE WHEN rt0.c1 THEN rt0.c0 END))) ORDER BY (((- (t0.c0))) NOT BETWEEN (((rt0.c2)IS(t0.c0))) AND (((rt0.c0)IS NOT(t0.c0)))));
SELECT COUNT(*) FROM t0 WHERE (TYPEOF((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))));
SELECT SUM(count) FROM (SELECT ((TYPEOF((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (TYPEOF((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))));
SELECT SUM(count) FROM (SELECT ((TYPEOF((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (TYPEOF((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)IS NOT(rt0.c1)))!=(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY ((((CAST(rt0.c0 AS BLOB))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND(CAST(rt0.c0 AS BLOB))) DESC, CAST((~ (NULL)) AS TEXT) DESC  NULLS FIRST, IFNULL(DISTINCT CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END, ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)IS NOT(rt0.c1)))<>(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((CAST(rt0.c0 AS BLOB))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND(CAST(rt0.c0 AS BLOB))) DESC, CAST((~ (NULL)) AS TEXT) DESC  NULLS FIRST, IFNULL(DISTINCT CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END, ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)IS NOT(rt0.c1)))!=(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY ((((CAST(rt0.c0 AS BLOB))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND(CAST(rt0.c0 AS BLOB))) DESC, CAST((~ (NULL)) AS TEXT) DESC  NULLS FIRST, IFNULL(DISTINCT CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END, ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)IS NOT(rt0.c1)))<>(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((CAST(rt0.c0 AS BLOB))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND(CAST(rt0.c0 AS BLOB))) DESC, CAST((~ (NULL)) AS TEXT) DESC  NULLS FIRST, IFNULL(DISTINCT CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END, ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)IS NOT(rt0.c1)))!=(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY ((((CAST(rt0.c0 AS BLOB))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND(CAST(rt0.c0 AS BLOB))) DESC, CAST((~ (NULL)) AS TEXT) DESC  NULLS FIRST, IFNULL(DISTINCT CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END, ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))  NULLS LAST;
SELECT * FROM rt0 WHERE (((CAST(rt0.c2 AS BLOB)) ISNULL)) ORDER BY (('')OR(rt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS BLOB)) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY (('')OR(rt0.c0 COLLATE NOCASE))  NULLS LAST);
SELECT * FROM rt0 WHERE (((CAST(rt0.c2 AS BLOB)) ISNULL)) ORDER BY (('')OR(rt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS BLOB)) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY (('')OR(rt0.c0 COLLATE NOCASE))  NULLS LAST);
SELECT * FROM rt0 WHERE (((CAST(rt0.c2 AS BLOB)) ISNULL)) ORDER BY (('')OR(rt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN CASE WHEN vt1.c0 THEN rt0.c1 END THEN ((((((((vt1.c0)AND(rt0.c2)))AND('')))OR(rt0.c1)))AND(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN vt1.c0 THEN rt0.c1 END THEN ((((((((vt1.c0)AND(rt0.c2)))AND('')))OR(rt0.c1)))AND(rt0.c0)) END) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN CASE WHEN vt1.c0 THEN rt0.c1 END THEN ((((((((vt1.c0)AND(rt0.c2)))AND('')))OR(rt0.c1)))AND(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN vt1.c0 THEN rt0.c1 END THEN ((((((((vt1.c0)AND(rt0.c2)))AND('')))OR(rt0.c1)))AND(rt0.c0)) END) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN CASE WHEN vt1.c0 THEN rt0.c1 END THEN ((((((((vt1.c0)AND(rt0.c2)))AND('')))OR(rt0.c1)))AND(rt0.c0)) END);
SELECT * FROM t0, vt1, v0, rt0 WHERE (((((((((((v0.c0) ISNULL))AND(((rt0.c0)%(rt0.c1)))))OR(v0.c0)))OR(((rt0.c2) NOT BETWEEN (vt1.c0) AND (v0.c0)))))OR(((rt0.c2)&('-898828088')))));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0) ISNULL))AND(((rt0.c0)%(rt0.c1)))))OR(v0.c0)))OR(((rt0.c2) NOT BETWEEN (vt1.c0) AND (v0.c0)))))OR(((rt0.c2)&('-898828088'))))) IS TRUE)  as count FROM t0, vt1, v0, rt0);
SELECT * FROM t0, vt1, v0, rt0 WHERE (((((((((((v0.c0) ISNULL))AND(((rt0.c0)%(rt0.c1)))))OR(v0.c0)))OR(((rt0.c2) NOT BETWEEN (vt1.c0) AND (v0.c0)))))OR(((rt0.c2)&('-898828088')))));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0) ISNULL))AND(((rt0.c0)%(rt0.c1)))))OR(v0.c0)))OR(((rt0.c2) NOT BETWEEN (vt1.c0) AND (v0.c0)))))OR(((rt0.c2)&('-898828088'))))) IS TRUE)  as count FROM t0, vt1, v0, rt0);
SELECT * FROM t0, vt1, v0, rt0 WHERE (((((((((((v0.c0) ISNULL))AND(((rt0.c0)%(rt0.c1)))))OR(v0.c0)))OR(((rt0.c2) NOT BETWEEN (vt1.c0) AND (v0.c0)))))OR(((rt0.c2)&('-898828088')))));
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2) NOT NULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) NOT NULL) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2) NOT NULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) NOT NULL) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2) NOT NULL) AS BLOB));
SELECT * FROM rt0 INNER JOIN v0 ON ((((((v0.c0)AND(x'9fde')))OR('-939933303'))) NOT NULL) WHERE ((((((((((('+I^\SO')OR(rt0.c0)))AND('bm풼Yv')))OR(rt0.c0)))AND(rt0.c2))) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))) AND (((rt0.c2)==(v0.c0))))) ORDER BY CASE rt0.c0  WHEN (- (v0.c0)) THEN ((v0.c0) ISNULL) ELSE ((rt0.c0)GLOB(x'')) END ASC  NULLS FIRST, NULL, ((CAST(v0.c0 AS NUMERIC))LIKE((v0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((('+I^\SO')OR(rt0.c0)))AND('bm풼Yv')))OR(rt0.c0)))AND(rt0.c2))) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))) AND (((rt0.c2)=(v0.c0))))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((((((v0.c0)AND(x'9fde')))OR('-939933303'))) NOT NULL) ORDER BY CASE rt0.c0  WHEN (- (v0.c0)) THEN ((v0.c0) ISNULL) ELSE ((rt0.c0)GLOB(x'')) END ASC  NULLS FIRST, NULL, ((CAST(v0.c0 AS NUMERIC))LIKE((v0.c0 IN ()))) DESC);
SELECT * FROM rt0 INNER JOIN v0 ON ((((((v0.c0)AND(x'9fde')))OR('-939933303'))) NOT NULL) WHERE ((((((((((('+I^\SO')OR(rt0.c0)))AND('bm풼Yv')))OR(rt0.c0)))AND(rt0.c2))) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))) AND (((rt0.c2)==(v0.c0))))) ORDER BY CASE rt0.c0  WHEN (- (v0.c0)) THEN ((v0.c0) ISNULL) ELSE ((rt0.c0)GLOB(x'')) END ASC  NULLS FIRST, NULL, ((CAST(v0.c0 AS NUMERIC))LIKE((v0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((('+I^\SO')OR(rt0.c0)))AND('bm풼Yv')))OR(rt0.c0)))AND(rt0.c2))) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))) AND (((rt0.c2)=(v0.c0))))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((((((v0.c0)AND(x'9fde')))OR('-939933303'))) NOT NULL) ORDER BY CASE rt0.c0  WHEN (- (v0.c0)) THEN ((v0.c0) ISNULL) ELSE ((rt0.c0)GLOB(x'')) END ASC  NULLS FIRST, NULL, ((CAST(v0.c0 AS NUMERIC))LIKE((v0.c0 IN ()))) DESC);
SELECT * FROM rt0 INNER JOIN v0 ON ((((((v0.c0)AND(x'9fde')))OR('-939933303'))) NOT NULL) WHERE ((((((((((('+I^\SO')OR(rt0.c0)))AND('bm풼Yv')))OR(rt0.c0)))AND(rt0.c2))) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))) AND (((rt0.c2)==(v0.c0))))) ORDER BY CASE rt0.c0  WHEN (- (v0.c0)) THEN ((v0.c0) ISNULL) ELSE ((rt0.c0)GLOB(x'')) END ASC  NULLS FIRST, NULL, ((CAST(v0.c0 AS NUMERIC))LIKE((v0.c0 IN ()))) DESC;
SELECT * FROM t0, rt0 WHERE (NULL) ORDER BY (+ ((t0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, rt0 ORDER BY (+ ((t0.c0 IN ()))) ASC);
SELECT * FROM t0, rt0 WHERE (NULL) ORDER BY (+ ((t0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, rt0 ORDER BY (+ ((t0.c0 IN ()))) ASC);
SELECT * FROM t0, rt0 WHERE (NULL) ORDER BY (+ ((t0.c0 IN ()))) ASC;
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0) NOTNULL))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)))OR((('1308397722')<<(rt0.c1)))))OR((rt0.c1 IN ()))))AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY (+ (TRIM(DISTINCT rt0.c2))), '\nxm' ASC, ((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))OR(-2.035645503E9)))AND(rt0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0) NOTNULL))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)))OR((('1308397722')<<(rt0.c1)))))OR((rt0.c1 IN ()))))AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (+ (TRIM(DISTINCT rt0.c2))), '\nxm' ASC, ((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))OR(-2.035645503E9)))AND(rt0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0) NOTNULL))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)))OR((('1308397722')<<(rt0.c1)))))OR((rt0.c1 IN ()))))AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY (+ (TRIM(DISTINCT rt0.c2))), '\nxm' ASC, ((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))OR(-2.035645503E9)))AND(rt0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0) NOTNULL))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)))OR((('1308397722')<<(rt0.c1)))))OR((rt0.c1 IN ()))))AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (+ (TRIM(DISTINCT rt0.c2))), '\nxm' ASC, ((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))OR(-2.035645503E9)))AND(rt0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0) NOTNULL))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)))OR((('1308397722')<<(rt0.c1)))))OR((rt0.c1 IN ()))))AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY (+ (TRIM(DISTINCT rt0.c2))), '\nxm' ASC, ((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))OR(-2.035645503E9)))AND(rt0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT * FROM vt1, v0, rt0, t0 WHERE (((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))>=(SUBSTR(t0.c0, rt0.c1)))) ORDER BY CASE WHEN ((v0.c0)>(t0.c0)) THEN 0xffffffffe42cdf29 END;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))>=(SUBSTR(t0.c0, rt0.c1)))) IS TRUE)  as count FROM vt1, v0, rt0, t0 ORDER BY CASE WHEN ((v0.c0)>(t0.c0)) THEN 0Xffffffffe42cdf29 END);
SELECT * FROM vt1, v0, rt0, t0 WHERE (((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))>=(SUBSTR(t0.c0, rt0.c1)))) ORDER BY CASE WHEN ((v0.c0)>(t0.c0)) THEN 0xffffffffe42cdf29 END;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))>=(SUBSTR(t0.c0, rt0.c1)))) IS TRUE)  as count FROM vt1, v0, rt0, t0 ORDER BY CASE WHEN ((v0.c0)>(t0.c0)) THEN 0Xffffffffe42cdf29 END);
SELECT * FROM vt1, v0, rt0, t0 WHERE (((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))>=(SUBSTR(t0.c0, rt0.c1)))) ORDER BY CASE WHEN ((v0.c0)>(t0.c0)) THEN 0xffffffffe42cdf29 END;
SELECT * FROM t0 WHERE ((((t0.c0 IN ()))IS(((t0.c0)>(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ()))IS(((t0.c0)>(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0 IN ()))IS(((t0.c0)>(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ()))IS(((t0.c0)>(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0 IN ()))IS(((t0.c0)>(t0.c0)))));
SELECT * FROM rt0 WHERE (((LIKELIHOOD(rt0.c2, 0.5661662480274252))/(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(rt0.c2, 0.5661662480274252))/(rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((LIKELIHOOD(rt0.c2, 0.5661662480274252))/(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(rt0.c2, 0.5661662480274252))/(rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((LIKELIHOOD(rt0.c2, 0.5661662480274252))/(rt0.c0)));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN v0 ON ((CAST(t0.c0 AS TEXT)) NOT BETWEEN ((rt0.c1 IN ())) AND ((- (rt0.c2)))) LEFT OUTER JOIN rt0 ON (((rt0.c2 IN (rt0.c0))) BETWEEN (rt0.c0 COLLATE RTRIM) AND (HEX(rt0.c1))) WHERE ((CAST(rt0.c1 AS NUMERIC) IN ())) ORDER BY UNICODE(v0.c0 COLLATE RTRIM) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c1 AS NUMERIC) IN ())) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON ((CAST(t0.c0 AS TEXT)) NOT BETWEEN ((rt0.c1 IN ())) AND ((- (rt0.c2)))) LEFT OUTER JOIN rt0 ON (((rt0.c2 IN (rt0.c0))) BETWEEN (rt0.c0 COLLATE RTRIM) AND (HEX(rt0.c1))) ORDER BY UNICODE(v0.c0 COLLATE RTRIM) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN v0 ON ((CAST(t0.c0 AS TEXT)) NOT BETWEEN ((rt0.c1 IN ())) AND ((- (rt0.c2)))) LEFT OUTER JOIN rt0 ON (((rt0.c2 IN (rt0.c0))) BETWEEN (rt0.c0 COLLATE RTRIM) AND (HEX(rt0.c1))) WHERE ((CAST(rt0.c1 AS NUMERIC) IN ())) ORDER BY UNICODE(v0.c0 COLLATE RTRIM) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c1 AS NUMERIC) IN ())) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON ((CAST(t0.c0 AS TEXT)) NOT BETWEEN ((rt0.c1 IN ())) AND ((- (rt0.c2)))) LEFT OUTER JOIN rt0 ON (((rt0.c2 IN (rt0.c0))) BETWEEN (rt0.c0 COLLATE RTRIM) AND (HEX(rt0.c1))) ORDER BY UNICODE(v0.c0 COLLATE RTRIM) DESC  NULLS FIRST);
SELECT * FROM t0, vt1, v0 RIGHT OUTER JOIN rt0 ON NULL WHERE ((((~ (rt0.c2)))OR(((v0.c0)IS NOT(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c2)))OR(((v0.c0)IS NOT(vt1.c0))))) IS TRUE)  as count FROM t0, vt1, v0 RIGHT OUTER JOIN rt0 ON NULL);
SELECT * FROM t0, vt1, v0 RIGHT OUTER JOIN rt0 ON NULL WHERE ((((~ (rt0.c2)))OR(((v0.c0)IS NOT(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c2)))OR(((v0.c0)IS NOT(vt1.c0))))) IS TRUE)  as count FROM t0, vt1, v0 RIGHT OUTER JOIN rt0 ON NULL);
SELECT * FROM t0, vt1, v0 RIGHT OUTER JOIN rt0 ON NULL WHERE ((((~ (rt0.c2)))OR(((v0.c0)IS NOT(vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (((- (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((- (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((- (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((- (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((- (vt1.c0)) IN ()));
SELECT * FROM v0, t0 WHERE (((((IFNULL(v0.c0, t0.c0))OR((((t0.c0)) NOT BETWEEN ((v0.c0)) AND (('sbJ'))))))AND(LIKELIHOOD(DISTINCT v0.c0, 0.7806997051076131)))) ORDER BY (((v0.c0, t0.c0, v0.c0)) BETWEEN ((CASE WHEN 'D~' THEN t0.c0 ELSE v0.c0 END, CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((v0.c0)*(t0.c0)))) AND (((((v0.c0))!=((t0.c0))), ((t0.c0) IS TRUE), (((t0.c0))<>((t0.c0)))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((IFNULL(v0.c0, t0.c0))OR((((t0.c0)) NOT BETWEEN ((v0.c0)) AND (('sbJ'))))))AND(LIKELIHOOD(DISTINCT v0.c0, 0.7806997051076131)))) IS TRUE)  as count FROM v0, t0 ORDER BY (((v0.c0, t0.c0, v0.c0)) BETWEEN ((CASE WHEN 'D~' THEN t0.c0 ELSE v0.c0 END, CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((v0.c0)*(t0.c0)))) AND (((((v0.c0))!=((t0.c0))), ((t0.c0) IS TRUE), (((t0.c0))<>((t0.c0)))))) ASC  NULLS LAST);
SELECT * FROM v0, t0 WHERE (((((IFNULL(v0.c0, t0.c0))OR((((t0.c0)) NOT BETWEEN ((v0.c0)) AND (('sbJ'))))))AND(LIKELIHOOD(DISTINCT v0.c0, 0.7806997051076131)))) ORDER BY (((v0.c0, t0.c0, v0.c0)) BETWEEN ((CASE WHEN 'D~' THEN t0.c0 ELSE v0.c0 END, CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((v0.c0)*(t0.c0)))) AND (((((v0.c0))!=((t0.c0))), ((t0.c0) IS TRUE), (((t0.c0))<>((t0.c0)))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((IFNULL(v0.c0, t0.c0))OR((((t0.c0)) NOT BETWEEN ((v0.c0)) AND (('sbJ'))))))AND(LIKELIHOOD(DISTINCT v0.c0, 0.7806997051076131)))) IS TRUE)  as count FROM v0, t0 ORDER BY (((v0.c0, t0.c0, v0.c0)) BETWEEN ((CASE WHEN 'D~' THEN t0.c0 ELSE v0.c0 END, CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((v0.c0)*(t0.c0)))) AND (((((v0.c0))!=((t0.c0))), ((t0.c0) IS TRUE), (((t0.c0))<>((t0.c0)))))) ASC  NULLS LAST);
SELECT * FROM v0, t0 WHERE (((((IFNULL(v0.c0, t0.c0))OR((((t0.c0)) NOT BETWEEN ((v0.c0)) AND (('sbJ'))))))AND(LIKELIHOOD(DISTINCT v0.c0, 0.7806997051076131)))) ORDER BY (((v0.c0, t0.c0, v0.c0)) BETWEEN ((CASE WHEN 'D~' THEN t0.c0 ELSE v0.c0 END, CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((v0.c0)*(t0.c0)))) AND (((((v0.c0))!=((t0.c0))), ((t0.c0) IS TRUE), (((t0.c0))<>((t0.c0)))))) ASC  NULLS LAST;
SELECT ALL * FROM t0, rt0 WHERE (x'') ORDER BY (((((((((NOT (rt0.c0)))AND(((rt0.c2)LIKE(t0.c0)))))AND(CASE rt0.c2  WHEN rt0.c0 THEN 0.44816104995781847 WHEN x'' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END)))OR((((t0.c0))>((t0.c0))))))OR(((rt0.c2) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, rt0 ORDER BY (((((((((NOT (rt0.c0)))AND(((rt0.c2)LIKE(t0.c0)))))AND(CASE rt0.c2  WHEN rt0.c0 THEN 0.44816104995781847 WHEN x'' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END)))OR((((t0.c0))>((t0.c0))))))OR(((rt0.c2) NOTNULL))));
SELECT ALL * FROM t0, rt0 WHERE (x'') ORDER BY (((((((((NOT (rt0.c0)))AND(((rt0.c2)LIKE(t0.c0)))))AND(CASE rt0.c2  WHEN rt0.c0 THEN 0.44816104995781847 WHEN x'' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END)))OR((((t0.c0))>((t0.c0))))))OR(((rt0.c2) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, rt0 ORDER BY (((((((((NOT (rt0.c0)))AND(((rt0.c2)LIKE(t0.c0)))))AND(CASE rt0.c2  WHEN rt0.c0 THEN 0.44816104995781847 WHEN x'' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END)))OR((((t0.c0))>((t0.c0))))))OR(((rt0.c2) NOTNULL))));
SELECT ALL * FROM t0, rt0 WHERE (x'') ORDER BY (((((((((NOT (rt0.c0)))AND(((rt0.c2)LIKE(t0.c0)))))AND(CASE rt0.c2  WHEN rt0.c0 THEN 0.44816104995781847 WHEN x'' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END)))OR((((t0.c0))>((t0.c0))))))OR(((rt0.c2) NOTNULL)));
SELECT ALL * FROM vt1, t0, rt0, v0 WHERE (x'') ORDER BY ((((rt0.c1)>>(rt0.c2))) BETWEEN ((((x'', t0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, t0.c0, t0.c0)) AND ((-1257049098, rt0.c1, '0.648449677343017')))) AND ((((('0.0757475888222292')OR(vt1.c0)))OR(x'5b4b0956'))));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, t0, rt0, v0 ORDER BY ((((rt0.c1)>>(rt0.c2))) BETWEEN ((((x'', t0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, t0.c0, t0.c0)) AND ((-1257049098, rt0.c1, '0.648449677343017')))) AND ((((('0.0757475888222292')OR(vt1.c0)))OR(x'5b4b0956')))));
SELECT ALL * FROM vt1, t0, rt0, v0 WHERE (x'') ORDER BY ((((rt0.c1)>>(rt0.c2))) BETWEEN ((((x'', t0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, t0.c0, t0.c0)) AND ((-1257049098, rt0.c1, '0.648449677343017')))) AND ((((('0.0757475888222292')OR(vt1.c0)))OR(x'5b4b0956'))));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, t0, rt0, v0 ORDER BY ((((rt0.c1)>>(rt0.c2))) BETWEEN ((((x'', t0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, t0.c0, t0.c0)) AND ((-1257049098, rt0.c1, '0.648449677343017')))) AND ((((('0.0757475888222292')OR(vt1.c0)))OR(x'5b4b0956')))));
SELECT ALL * FROM vt1, t0, rt0, v0 WHERE (x'') ORDER BY ((((rt0.c1)>>(rt0.c2))) BETWEEN ((((x'', t0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, t0.c0, t0.c0)) AND ((-1257049098, rt0.c1, '0.648449677343017')))) AND ((((('0.0757475888222292')OR(vt1.c0)))OR(x'5b4b0956'))));
SELECT * FROM t0, rt0, v0, vt1 WHERE (((~ (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((~ (rt0.c0)) IN ())) IS TRUE)  as count FROM t0, rt0, v0, vt1);
SELECT * FROM t0, rt0, v0, vt1 WHERE (((~ (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((~ (rt0.c0)) IN ())) IS TRUE)  as count FROM t0, rt0, v0, vt1);
SELECT * FROM t0, rt0, v0, vt1 WHERE (((~ (rt0.c0)) IN ()));
SELECT ALL * FROM v0 WHERE (CAST((v0.c0 IN ()) AS NUMERIC)) ORDER BY ((((((x'') ISNULL))OR(((NULL)<=('1142949820')))))OR(x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((v0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY ((((((x'') ISNULL))OR(((NULL)<=('1142949820')))))OR(x''))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (CAST((v0.c0 IN ()) AS NUMERIC)) ORDER BY ((((((x'') ISNULL))OR(((NULL)<=('1142949820')))))OR(x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((v0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY ((((((x'') ISNULL))OR(((NULL)<=('1142949820')))))OR(x''))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (CAST((v0.c0 IN ()) AS NUMERIC)) ORDER BY ((((((x'') ISNULL))OR(((NULL)<=('1142949820')))))OR(x''))  NULLS FIRST;
SELECT * FROM rt0, vt1, t0 WHERE ((NOT (TYPEOF(DISTINCT rt0.c0)))) ORDER BY CASE WHEN vt1.c0 COLLATE BINARY THEN (rt0.c1 IN ()) ELSE ABS(DISTINCT rt0.c2) END, (- (TYPEOF(vt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (TYPEOF(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY CASE WHEN vt1.c0 COLLATE BINARY THEN (rt0.c1 IN ()) ELSE ABS(DISTINCT rt0.c2) END, (- (TYPEOF(vt1.c0)))  NULLS LAST);
SELECT * FROM rt0, vt1, t0 WHERE ((NOT (TYPEOF(DISTINCT rt0.c0)))) ORDER BY CASE WHEN vt1.c0 COLLATE BINARY THEN (rt0.c1 IN ()) ELSE ABS(DISTINCT rt0.c2) END, (- (TYPEOF(vt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (TYPEOF(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY CASE WHEN vt1.c0 COLLATE BINARY THEN (rt0.c1 IN ()) ELSE ABS(DISTINCT rt0.c2) END, (- (TYPEOF(vt1.c0)))  NULLS LAST);
SELECT * FROM rt0, vt1, t0 WHERE ((NOT (TYPEOF(DISTINCT rt0.c0)))) ORDER BY CASE WHEN vt1.c0 COLLATE BINARY THEN (rt0.c1 IN ()) ELSE ABS(DISTINCT rt0.c2) END, (- (TYPEOF(vt1.c0)))  NULLS LAST;
SELECT * FROM v0 WHERE (CAST(((((v0.c0)AND(v0.c0)))AND(v0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((v0.c0)AND(v0.c0)))AND(v0.c0)) AS BLOB)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(((((v0.c0)AND(v0.c0)))AND(v0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((v0.c0)AND(v0.c0)))AND(v0.c0)) AS BLOB)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(((((v0.c0)AND(v0.c0)))AND(v0.c0)) AS BLOB));
SELECT COUNT(*) FROM vt1, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((vt1.c0))<>((rt0.c2))) COLLATE NOCASE) ORDER BY x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0))!=((rt0.c2))) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0 ORDER BY x'' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((vt1.c0))<>((rt0.c2))) COLLATE NOCASE) ORDER BY x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0))!=((rt0.c2))) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0 ORDER BY x'' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((vt1.c0))<>((rt0.c2))) COLLATE NOCASE) ORDER BY x'' DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((- ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) ORDER BY CAST(SQLITE_VERSION() AS BLOB)  NULLS FIRST, ((((rt0.c1)LIKE(rt0.c2))) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (rt0.c2 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(SQLITE_VERSION() AS BLOB)  NULLS FIRST, ((((rt0.c1)LIKE(rt0.c2))) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (rt0.c2 COLLATE BINARY))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((- ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) ORDER BY CAST(SQLITE_VERSION() AS BLOB)  NULLS FIRST, ((((rt0.c1)LIKE(rt0.c2))) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (rt0.c2 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(SQLITE_VERSION() AS BLOB)  NULLS FIRST, ((((rt0.c1)LIKE(rt0.c2))) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (rt0.c2 COLLATE BINARY))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((- ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) ORDER BY CAST(SQLITE_VERSION() AS BLOB)  NULLS FIRST, ((((rt0.c1)LIKE(rt0.c2))) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (rt0.c2 COLLATE BINARY))  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT ALL * FROM rt0 WHERE (0X0) ORDER BY (((~ (rt0.c0))) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0X0) IS TRUE)  as count FROM rt0 ORDER BY (((~ (rt0.c0))) NOTNULL) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (0X0) ORDER BY (((~ (rt0.c0))) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0X0) IS TRUE)  as count FROM rt0 ORDER BY (((~ (rt0.c0))) NOTNULL) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (0X0) ORDER BY (((~ (rt0.c0))) NOTNULL) ASC  NULLS LAST;
SELECT * FROM t0, rt0 WHERE (((0.7812056977364736 COLLATE NOCASE)||(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((0.7812056977364736 COLLATE NOCASE)||(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((0.7812056977364736 COLLATE NOCASE)||(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((0.7812056977364736 COLLATE NOCASE)||(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((0.7812056977364736 COLLATE NOCASE)||(rt0.c2 COLLATE NOCASE)));
SELECT ALL * FROM t0 WHERE ((((NOT (t0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c0))) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((NOT (t0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c0))) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((NOT (t0.c0))) IS TRUE));
SELECT ALL * FROM rt0, vt1 WHERE (rt0.c1) ORDER BY (((rt0.c0))!=((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c0))<>((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE (rt0.c1) ORDER BY (((rt0.c0))!=((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c0))<>((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE (rt0.c1) ORDER BY (((rt0.c0))!=((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))))  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((rt0.c1 COLLATE BINARY)AND(CASE rt0.c0  WHEN rt0.c2 THEN x'43b0' ELSE rt0.c2 END)))OR((('115879267')>>(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 COLLATE BINARY)AND(CASE rt0.c0  WHEN rt0.c2 THEN x'43b0' ELSE rt0.c2 END)))OR((('115879267')>>(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1 COLLATE BINARY)AND(CASE rt0.c0  WHEN rt0.c2 THEN x'43b0' ELSE rt0.c2 END)))OR((('115879267')>>(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 COLLATE BINARY)AND(CASE rt0.c0  WHEN rt0.c2 THEN x'43b0' ELSE rt0.c2 END)))OR((('115879267')>>(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1 COLLATE BINARY)AND(CASE rt0.c0  WHEN rt0.c2 THEN x'43b0' ELSE rt0.c2 END)))OR((('115879267')>>(rt0.c1)))));
SELECT ALL * FROM t0, vt1 WHERE ((vt1.c0 IN ()) COLLATE RTRIM) ORDER BY CAST(vt1.c0 COLLATE RTRIM AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1 ORDER BY CAST(vt1.c0 COLLATE RTRIM AS INTEGER) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt1 WHERE ((vt1.c0 IN ()) COLLATE RTRIM) ORDER BY CAST(vt1.c0 COLLATE RTRIM AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1 ORDER BY CAST(vt1.c0 COLLATE RTRIM AS INTEGER) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt1 WHERE ((vt1.c0 IN ()) COLLATE RTRIM) ORDER BY CAST(vt1.c0 COLLATE RTRIM AS INTEGER) DESC  NULLS LAST;
SELECT * FROM v0, vt1, rt0, t0 WHERE ((((rt0.c0 COLLATE RTRIM, ((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)), (((('-1862822785')AND(rt0.c2)))OR(0.31681177388824566))))==((((t0.c0) ISNULL), CASE '-944814340'  WHEN t0.c0 THEN rt0.c1 ELSE rt0.c0 END, CAST(v0.c0 AS INTEGER))))) ORDER BY (rt0.c1 IN ()) ASC  NULLS LAST, 0.44816104995781847  NULLS LAST, '1477794069' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 COLLATE RTRIM, ((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)), (((('-1862822785')AND(rt0.c2)))OR(0.31681177388824566))))==((((t0.c0) ISNULL), CASE '-944814340'  WHEN t0.c0 THEN rt0.c1 ELSE rt0.c0 END, CAST(v0.c0 AS INTEGER))))) IS TRUE)  as count FROM v0, vt1, rt0, t0 ORDER BY (rt0.c1 IN ()) ASC  NULLS LAST, 0.44816104995781847  NULLS LAST, '1477794069' DESC  NULLS LAST);
SELECT * FROM v0, vt1, rt0, t0 WHERE ((((rt0.c0 COLLATE RTRIM, ((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)), (((('-1862822785')AND(rt0.c2)))OR(0.31681177388824566))))==((((t0.c0) ISNULL), CASE '-944814340'  WHEN t0.c0 THEN rt0.c1 ELSE rt0.c0 END, CAST(v0.c0 AS INTEGER))))) ORDER BY (rt0.c1 IN ()) ASC  NULLS LAST, 0.44816104995781847  NULLS LAST, '1477794069' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 COLLATE RTRIM, ((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)), (((('-1862822785')AND(rt0.c2)))OR(0.31681177388824566))))==((((t0.c0) ISNULL), CASE '-944814340'  WHEN t0.c0 THEN rt0.c1 ELSE rt0.c0 END, CAST(v0.c0 AS INTEGER))))) IS TRUE)  as count FROM v0, vt1, rt0, t0 ORDER BY (rt0.c1 IN ()) ASC  NULLS LAST, 0.44816104995781847  NULLS LAST, '1477794069' DESC  NULLS LAST);
SELECT * FROM v0, vt1, rt0, t0 WHERE ((((rt0.c0 COLLATE RTRIM, ((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)), (((('-1862822785')AND(rt0.c2)))OR(0.31681177388824566))))==((((t0.c0) ISNULL), CASE '-944814340'  WHEN t0.c0 THEN rt0.c1 ELSE rt0.c0 END, CAST(v0.c0 AS INTEGER))))) ORDER BY (rt0.c1 IN ()) ASC  NULLS LAST, 0.44816104995781847  NULLS LAST, '1477794069' DESC  NULLS LAST;
SELECT ALL * FROM t0, rt0, v0, vt1 WHERE (((((vt1.c0)>(v0.c0)))>=(((vt1.c0) NOTNULL)))) ORDER BY ((((0x7fe554c3) NOT BETWEEN (rt0.c2) AND (0.41002024998057174))) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>(v0.c0)))>=(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM t0, rt0, v0, vt1 ORDER BY ((((0x7fe554c3) NOT BETWEEN (rt0.c2) AND (0.41002024998057174))) ISNULL) ASC  NULLS LAST);
SELECT ALL * FROM t0, rt0, v0, vt1 WHERE (((((vt1.c0)>(v0.c0)))>=(((vt1.c0) NOTNULL)))) ORDER BY ((((0x7fe554c3) NOT BETWEEN (rt0.c2) AND (0.41002024998057174))) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>(v0.c0)))>=(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM t0, rt0, v0, vt1 ORDER BY ((((0x7fe554c3) NOT BETWEEN (rt0.c2) AND (0.41002024998057174))) ISNULL) ASC  NULLS LAST);
SELECT ALL * FROM t0, rt0, v0, vt1 WHERE (((((vt1.c0)>(v0.c0)))>=(((vt1.c0) NOTNULL)))) ORDER BY ((((0x7fe554c3) NOT BETWEEN (rt0.c2) AND (0.41002024998057174))) ISNULL) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))&(rt0.c2 COLLATE RTRIM))) ORDER BY ((((rt0.c2)=(rt0.c1))) NOT BETWEEN ((((0.6578474356188578)) NOT BETWEEN (('')) AND ((rt0.c0)))) AND (CAST(rt0.c0 AS REAL)))  NULLS FIRST, ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))+(LOWER(DISTINCT rt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))&(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)==(rt0.c1))) NOT BETWEEN ((((0.6578474356188578)) NOT BETWEEN (('')) AND ((rt0.c0)))) AND (CAST(rt0.c0 AS REAL)))  NULLS FIRST, ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))+(LOWER(DISTINCT rt0.c0))) ASC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))&(rt0.c2 COLLATE RTRIM))) ORDER BY ((((rt0.c2)=(rt0.c1))) NOT BETWEEN ((((0.6578474356188578)) NOT BETWEEN (('')) AND ((rt0.c0)))) AND (CAST(rt0.c0 AS REAL)))  NULLS FIRST, ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))+(LOWER(DISTINCT rt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))&(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)==(rt0.c1))) NOT BETWEEN ((((0.6578474356188578)) NOT BETWEEN (('')) AND ((rt0.c0)))) AND (CAST(rt0.c0 AS REAL)))  NULLS FIRST, ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))+(LOWER(DISTINCT rt0.c0))) ASC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))&(rt0.c2 COLLATE RTRIM))) ORDER BY ((((rt0.c2)=(rt0.c1))) NOT BETWEEN ((((0.6578474356188578)) NOT BETWEEN (('')) AND ((rt0.c0)))) AND (CAST(rt0.c0 AS REAL)))  NULLS FIRST, ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))+(LOWER(DISTINCT rt0.c0))) ASC;
SELECT ALL * FROM v0, t0, vt1, rt0 WHERE ((((((rt0.c1, vt1.c0, rt0.c1)) BETWEEN ((t0.c0, v0.c0, rt0.c0)) AND ((rt0.c2, vt1.c0, t0.c0))))-(CAST(t0.c0 AS INTEGER)))) ORDER BY CAST(t0.c0 AS NUMERIC) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, vt1.c0, rt0.c1)) BETWEEN ((t0.c0, v0.c0, rt0.c0)) AND ((rt0.c2, vt1.c0, t0.c0))))-(CAST(t0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0, t0, vt1, rt0 ORDER BY CAST(t0.c0 AS NUMERIC) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM v0, t0, vt1, rt0 WHERE ((((((rt0.c1, vt1.c0, rt0.c1)) BETWEEN ((t0.c0, v0.c0, rt0.c0)) AND ((rt0.c2, vt1.c0, t0.c0))))-(CAST(t0.c0 AS INTEGER)))) ORDER BY CAST(t0.c0 AS NUMERIC) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, vt1.c0, rt0.c1)) BETWEEN ((t0.c0, v0.c0, rt0.c0)) AND ((rt0.c2, vt1.c0, t0.c0))))-(CAST(t0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0, t0, vt1, rt0 ORDER BY CAST(t0.c0 AS NUMERIC) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM v0, t0, vt1, rt0 WHERE ((((((rt0.c1, vt1.c0, rt0.c1)) BETWEEN ((t0.c0, v0.c0, rt0.c0)) AND ((rt0.c2, vt1.c0, t0.c0))))-(CAST(t0.c0 AS INTEGER)))) ORDER BY CAST(t0.c0 AS NUMERIC) COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (0.848629093686083);
SELECT SUM(count) FROM (SELECT ((0.848629093686083) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT ALL * FROM vt1 WHERE (0.848629093686083);
SELECT SUM(count) FROM (SELECT ((0.848629093686083) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT ALL * FROM vt1 WHERE (0.848629093686083);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((x'f8bd2f17')<(rt0.c1))) BETWEEN (((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))) AND (((rt0.c0)IS(rt0.c2))))) ORDER BY UPPER(CAST(rt0.c0 AS REAL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'f8bd2f17')<(rt0.c1))) BETWEEN (((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))) AND (((rt0.c0)IS(rt0.c2))))) IS TRUE)  as count FROM rt0, t0 ORDER BY UPPER(CAST(rt0.c0 AS REAL))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((x'f8bd2f17')<(rt0.c1))) BETWEEN (((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))) AND (((rt0.c0)IS(rt0.c2))))) ORDER BY UPPER(CAST(rt0.c0 AS REAL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'f8bd2f17')<(rt0.c1))) BETWEEN (((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))) AND (((rt0.c0)IS(rt0.c2))))) IS TRUE)  as count FROM rt0, t0 ORDER BY UPPER(CAST(rt0.c0 AS REAL))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((x'f8bd2f17')<(rt0.c1))) BETWEEN (((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))) AND (((rt0.c0)IS(rt0.c2))))) ORDER BY UPPER(CAST(rt0.c0 AS REAL))  NULLS LAST;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON (((('')+('1654386685')))&(((rt0.c2)IS('袇{n䮘')))) FULL OUTER JOIN t0 ON CAST(IFNULL(NULL, '755711276') AS NUMERIC) INNER JOIN vt1 ON CASE WHEN ((rt0.c0) NOT BETWEEN ('?\r') AND (v0.c0)) THEN ((((v0.c0)OR(rt0.c1)))OR(v0.c0)) ELSE CASE WHEN t0.c0 THEN rt0.c2 ELSE v0.c0 END END WHERE (UNLIKELY(DISTINCT (t0.c0 IN ()))) ORDER BY (((vt1.c0 IN (rt0.c0, v0.c0))) BETWEEN (((rt0.c1)>(rt0.c1))) AND (IFNULL(DISTINCT rt0.c2, rt0.c2)))  NULLS FIRST, CAST(rt0.c2 AS INTEGER) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT (t0.c0 IN ()))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (((('')+('1654386685')))&(((rt0.c2)IS('袇{n䮘')))) FULL OUTER JOIN t0 ON CAST(IFNULL(NULL, '755711276') AS NUMERIC) INNER JOIN vt1 ON CASE WHEN ((rt0.c0) NOT BETWEEN ('?\r') AND (v0.c0)) THEN ((((v0.c0)OR(rt0.c1)))OR(v0.c0)) ELSE CASE WHEN t0.c0 THEN rt0.c2 ELSE v0.c0 END END ORDER BY (((vt1.c0 IN (rt0.c0, v0.c0))) BETWEEN (((rt0.c1)>(rt0.c1))) AND (IFNULL(DISTINCT rt0.c2, rt0.c2)))  NULLS FIRST, CAST(rt0.c2 AS INTEGER) COLLATE RTRIM DESC);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON (((('')+('1654386685')))&(((rt0.c2)IS('袇{n䮘')))) FULL OUTER JOIN t0 ON CAST(IFNULL(NULL, '755711276') AS NUMERIC) INNER JOIN vt1 ON CASE WHEN ((rt0.c0) NOT BETWEEN ('?\r') AND (v0.c0)) THEN ((((v0.c0)OR(rt0.c1)))OR(v0.c0)) ELSE CASE WHEN t0.c0 THEN rt0.c2 ELSE v0.c0 END END WHERE (UNLIKELY(DISTINCT (t0.c0 IN ()))) ORDER BY (((vt1.c0 IN (rt0.c0, v0.c0))) BETWEEN (((rt0.c1)>(rt0.c1))) AND (IFNULL(DISTINCT rt0.c2, rt0.c2)))  NULLS FIRST, CAST(rt0.c2 AS INTEGER) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT (t0.c0 IN ()))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (((('')+('1654386685')))&(((rt0.c2)IS('袇{n䮘')))) FULL OUTER JOIN t0 ON CAST(IFNULL(NULL, '755711276') AS NUMERIC) INNER JOIN vt1 ON CASE WHEN ((rt0.c0) NOT BETWEEN ('?\r') AND (v0.c0)) THEN ((((v0.c0)OR(rt0.c1)))OR(v0.c0)) ELSE CASE WHEN t0.c0 THEN rt0.c2 ELSE v0.c0 END END ORDER BY (((vt1.c0 IN (rt0.c0, v0.c0))) BETWEEN (((rt0.c1)>(rt0.c1))) AND (IFNULL(DISTINCT rt0.c2, rt0.c2)))  NULLS FIRST, CAST(rt0.c2 AS INTEGER) COLLATE RTRIM DESC);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON (((('')+('1654386685')))&(((rt0.c2)IS('袇{n䮘')))) FULL OUTER JOIN t0 ON CAST(IFNULL(NULL, '755711276') AS NUMERIC) INNER JOIN vt1 ON CASE WHEN ((rt0.c0) NOT BETWEEN ('?\r') AND (v0.c0)) THEN ((((v0.c0)OR(rt0.c1)))OR(v0.c0)) ELSE CASE WHEN t0.c0 THEN rt0.c2 ELSE v0.c0 END END WHERE (UNLIKELY(DISTINCT (t0.c0 IN ()))) ORDER BY (((vt1.c0 IN (rt0.c0, v0.c0))) BETWEEN (((rt0.c1)>(rt0.c1))) AND (IFNULL(DISTINCT rt0.c2, rt0.c2)))  NULLS FIRST, CAST(rt0.c2 AS INTEGER) COLLATE RTRIM DESC;
SELECT * FROM vt1, t0, rt0 WHERE ((((TRIM(rt0.c2, rt0.c1), (((rt0.c0))>=((0.2905898229926551))), ((t0.c0)AND(t0.c0))))=((((vt1.c0) NOTNULL), '6UBh0{krR' COLLATE BINARY, (rt0.c1 IN (t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((TRIM(rt0.c2, rt0.c1), (((rt0.c0))>=((0.2905898229926551))), ((t0.c0)AND(t0.c0))))=((((vt1.c0) NOTNULL), '6UBh0{krR' COLLATE BINARY, (rt0.c1 IN (t0.c0)))))) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT * FROM vt1, t0, rt0 WHERE ((((TRIM(rt0.c2, rt0.c1), (((rt0.c0))>=((0.2905898229926551))), ((t0.c0)AND(t0.c0))))=((((vt1.c0) NOTNULL), '6UBh0{krR' COLLATE BINARY, (rt0.c1 IN (t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((TRIM(rt0.c2, rt0.c1), (((rt0.c0))>=((0.2905898229926551))), ((t0.c0)AND(t0.c0))))=((((vt1.c0) NOTNULL), '6UBh0{krR' COLLATE BINARY, (rt0.c1 IN (t0.c0)))))) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT * FROM vt1, t0, rt0 WHERE ((((TRIM(rt0.c2, rt0.c1), (((rt0.c0))>=((0.2905898229926551))), ((t0.c0)AND(t0.c0))))=((((vt1.c0) NOTNULL), '6UBh0{krR' COLLATE BINARY, (rt0.c1 IN (t0.c0))))));
SELECT ALL * FROM vt1, v0, rt0, t0 WHERE ((((((rt0.c0, rt0.c1, v0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c1, vt1.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, rt0.c1, v0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c1, vt1.c0)))) ISNULL)) IS TRUE)  as count FROM vt1, v0 NOT INDEXED, rt0, t0);
SELECT ALL * FROM vt1, v0, rt0, t0 WHERE ((((((rt0.c0, rt0.c1, v0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c1, vt1.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, rt0.c1, v0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c1, vt1.c0)))) ISNULL)) IS TRUE)  as count FROM vt1, v0 NOT INDEXED, rt0, t0);
SELECT ALL * FROM vt1, v0, rt0, t0 WHERE ((((((rt0.c0, rt0.c1, v0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c1, vt1.c0)))) ISNULL));
SELECT ALL COUNT(*) FROM vt1, v0 NATURAL JOIN t0 WHERE (CAST('-537463087' AS INTEGER)) ORDER BY (((((vt1.c0)OR(t0.c0)))AND(t0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('-537463087' AS INTEGER)) IS TRUE)  as count FROM vt1, v0 NATURAL JOIN t0 ORDER BY (((((vt1.c0)OR(t0.c0)))AND(t0.c0)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, v0 NATURAL JOIN t0 WHERE (CAST('-537463087' AS INTEGER)) ORDER BY (((((vt1.c0)OR(t0.c0)))AND(t0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('-537463087' AS INTEGER)) IS TRUE)  as count FROM vt1, v0 NATURAL JOIN t0 ORDER BY (((((vt1.c0)OR(t0.c0)))AND(t0.c0)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, v0 NATURAL JOIN t0 WHERE (CAST('-537463087' AS INTEGER)) ORDER BY (((((vt1.c0)OR(t0.c0)))AND(t0.c0)) IN ())  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0, vt1 WHERE ('\n3Xby');
SELECT SUM(count) FROM (SELECT ALL (('\n3Xby') IS TRUE)  as count FROM rt0, v0, vt1);
SELECT COUNT(*) FROM rt0, v0, vt1 WHERE ('\n3Xby');
SELECT SUM(count) FROM (SELECT ALL (('\n3Xby') IS TRUE)  as count FROM rt0, v0, vt1);
SELECT COUNT(*) FROM rt0, v0, vt1 WHERE ('\n3Xby');
SELECT COUNT(*) FROM v0, t0, rt0 WHERE (((rt0.c1 COLLATE NOCASE) IS TRUE)) ORDER BY (rt0.c0 COLLATE NOCASE IN ());
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM v0, t0, rt0 ORDER BY (rt0.c0 COLLATE NOCASE IN ()));
SELECT COUNT(*) FROM v0, t0, rt0 WHERE (((rt0.c1 COLLATE NOCASE) IS TRUE)) ORDER BY (rt0.c0 COLLATE NOCASE IN ());
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM v0, t0, rt0 ORDER BY (rt0.c0 COLLATE NOCASE IN ()));
SELECT COUNT(*) FROM v0, t0, rt0 WHERE (((rt0.c1 COLLATE NOCASE) IS TRUE)) ORDER BY (rt0.c0 COLLATE NOCASE IN ());
SELECT ALL COUNT(*) FROM rt0 WHERE ('') ORDER BY (- (((x'') ISNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0 ORDER BY (- (((x'') ISNULL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ('') ORDER BY (- (((x'') ISNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0 ORDER BY (- (((x'') ISNULL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ('') ORDER BY (- (((x'') ISNULL))) ASC  NULLS FIRST;
SELECT * FROM vt1, rt0 RIGHT OUTER JOIN t0 ON ((CAST(rt0.c1 AS BLOB))&((~ (rt0.c2)))) CROSS JOIN v0 ON ((((rt0.c1)*(vt1.c0)))<>(t0.c0 COLLATE NOCASE)) WHERE (CAST((((vt1.c0)) NOT BETWEEN (('0.2418182048154296')) AND ((rt0.c0))) AS TEXT)) ORDER BY (v0.c0 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c0)) NOT BETWEEN (('0.2418182048154296')) AND ((rt0.c0))) AS TEXT)) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN t0 ON ((CAST(rt0.c1 AS BLOB))&((~ (rt0.c2)))) CROSS JOIN v0 ON ((((rt0.c1)*(vt1.c0)))!=(t0.c0 COLLATE NOCASE)) ORDER BY (v0.c0 IN ())  NULLS LAST);
SELECT * FROM vt1, rt0 RIGHT OUTER JOIN t0 ON ((CAST(rt0.c1 AS BLOB))&((~ (rt0.c2)))) CROSS JOIN v0 ON ((((rt0.c1)*(vt1.c0)))<>(t0.c0 COLLATE NOCASE)) WHERE (CAST((((vt1.c0)) NOT BETWEEN (('0.2418182048154296')) AND ((rt0.c0))) AS TEXT)) ORDER BY (v0.c0 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c0)) NOT BETWEEN (('0.2418182048154296')) AND ((rt0.c0))) AS TEXT)) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN t0 ON ((CAST(rt0.c1 AS BLOB))&((~ (rt0.c2)))) CROSS JOIN v0 ON ((((rt0.c1)*(vt1.c0)))!=(t0.c0 COLLATE NOCASE)) ORDER BY (v0.c0 IN ())  NULLS LAST);
SELECT * FROM vt1, rt0 RIGHT OUTER JOIN t0 ON ((CAST(rt0.c1 AS BLOB))&((~ (rt0.c2)))) CROSS JOIN v0 ON ((((rt0.c1)*(vt1.c0)))<>(t0.c0 COLLATE NOCASE)) WHERE (CAST((((vt1.c0)) NOT BETWEEN (('0.2418182048154296')) AND ((rt0.c0))) AS TEXT)) ORDER BY (v0.c0 IN ())  NULLS LAST;
SELECT * FROM vt1 WHERE (HEX((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((HEX((vt1.c0 IN ()))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (HEX((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((HEX((vt1.c0 IN ()))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (HEX((vt1.c0 IN ())));
SELECT * FROM t0, v0, rt0, vt1 WHERE (((NULL) NOT BETWEEN (((rt0.c2)AND(t0.c0))) AND (TOTAL_CHANGES()))) ORDER BY (((((rt0.c2))>((rt0.c1)))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (((rt0.c2)AND(t0.c0))) AND (TOTAL_CHANGES()))) IS TRUE)  as count FROM t0, v0, rt0, vt1 ORDER BY (((((rt0.c2))>((rt0.c1)))) IS FALSE) DESC);
SELECT * FROM t0, v0, rt0, vt1 WHERE (((NULL) NOT BETWEEN (((rt0.c2)AND(t0.c0))) AND (TOTAL_CHANGES()))) ORDER BY (((((rt0.c2))>((rt0.c1)))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (((rt0.c2)AND(t0.c0))) AND (TOTAL_CHANGES()))) IS TRUE)  as count FROM t0, v0, rt0, vt1 ORDER BY (((((rt0.c2))>((rt0.c1)))) IS FALSE) DESC);
SELECT * FROM t0, v0, rt0, vt1 WHERE (((NULL) NOT BETWEEN (((rt0.c2)AND(t0.c0))) AND (TOTAL_CHANGES()))) ORDER BY (((((rt0.c2))>((rt0.c1)))) IS FALSE) DESC;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((vt1.c0)%(vt1.c0)) IN (rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)%(vt1.c0)) IN (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((vt1.c0)%(vt1.c0)) IN (rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)%(vt1.c0)) IN (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((vt1.c0)%(vt1.c0)) IN (rt0.c2 COLLATE NOCASE)));
SELECT * FROM t0, rt0, v0 WHERE (((((t0.c0)>(x'9cb9'))) NOT BETWEEN ((~ (v0.c0))) AND (CASE WHEN rt0.c2 THEN rt0.c1 ELSE t0.c0 END))) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)>(x'9cb9'))) NOT BETWEEN ((~ (v0.c0))) AND (CASE WHEN rt0.c2 THEN rt0.c1 ELSE t0.c0 END))) IS TRUE)  as count FROM t0, rt0, v0 ORDER BY t0.c0);
SELECT * FROM t0, rt0, v0 WHERE (((((t0.c0)>(x'9cb9'))) NOT BETWEEN ((~ (v0.c0))) AND (CASE WHEN rt0.c2 THEN rt0.c1 ELSE t0.c0 END))) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)>(x'9cb9'))) NOT BETWEEN ((~ (v0.c0))) AND (CASE WHEN rt0.c2 THEN rt0.c1 ELSE t0.c0 END))) IS TRUE)  as count FROM t0, rt0, v0 ORDER BY t0.c0);
SELECT * FROM t0, rt0, v0 WHERE (((((t0.c0)>(x'9cb9'))) NOT BETWEEN ((~ (v0.c0))) AND (CASE WHEN rt0.c2 THEN rt0.c1 ELSE t0.c0 END))) ORDER BY t0.c0;
SELECT COUNT(*) FROM vt1 WHERE ((LIKELY(vt1.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((LIKELY(vt1.c0) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((LIKELY(vt1.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((LIKELY(vt1.c0) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((LIKELY(vt1.c0) IN ()));
SELECT * FROM vt1, v0, t0 WHERE ((((t0.c0)) BETWEEN ((CAST(t0.c0 AS BLOB))) AND (((v0.c0 IN (v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) BETWEEN ((CAST(t0.c0 AS BLOB))) AND (((v0.c0 IN (v0.c0)))))) IS TRUE)  as count FROM vt1, v0, t0);
SELECT * FROM vt1, v0, t0 WHERE ((((t0.c0)) BETWEEN ((CAST(t0.c0 AS BLOB))) AND (((v0.c0 IN (v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) BETWEEN ((CAST(t0.c0 AS BLOB))) AND (((v0.c0 IN (v0.c0)))))) IS TRUE)  as count FROM vt1, v0, t0);
SELECT * FROM vt1, v0, t0 WHERE ((((t0.c0)) BETWEEN ((CAST(t0.c0 AS BLOB))) AND (((v0.c0 IN (v0.c0))))));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)*(v0.c0)))||((~ (v0.c0))))) ORDER BY v0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)*(v0.c0)))||((~ (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)*(v0.c0)))||((~ (v0.c0))))) ORDER BY v0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)*(v0.c0)))||((~ (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)*(v0.c0)))||((~ (v0.c0))))) ORDER BY v0.c0 ASC  NULLS FIRST;
SELECT ALL * FROM vt1, v0, t0, rt0 WHERE (((((vt1.c0)>=(t0.c0)))=(x''))) ORDER BY CAST(((rt0.c0)GLOB(rt0.c1)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>=(t0.c0)))==(x''))) IS TRUE)  as count FROM vt1, v0, t0, rt0 ORDER BY CAST(((rt0.c0)GLOB(rt0.c1)) AS TEXT));
SELECT ALL * FROM vt1, v0, t0, rt0 WHERE (((((vt1.c0)>=(t0.c0)))=(x''))) ORDER BY CAST(((rt0.c0)GLOB(rt0.c1)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>=(t0.c0)))==(x''))) IS TRUE)  as count FROM vt1, v0, t0, rt0 ORDER BY CAST(((rt0.c0)GLOB(rt0.c1)) AS TEXT));
SELECT ALL * FROM vt1, v0, t0, rt0 WHERE (((((vt1.c0)>=(t0.c0)))=(x''))) ORDER BY CAST(((rt0.c0)GLOB(rt0.c1)) AS TEXT);
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE (CASE WHEN ((t0.c0) ISNULL) THEN LTRIM(rt0.c1, rt0.c2) END) ORDER BY ((((rt0.c1)%(rt0.c2))) NOT BETWEEN (((((t0.c0)OR(rt0.c0)))AND(t0.c0))) AND (((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))) ASC  NULLS LAST, CAST(((t0.c0)LIKE(rt0.c1)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0) ISNULL) THEN LTRIM(rt0.c1, rt0.c2) END) IS TRUE)  as count FROM rt0 NATURAL JOIN t0 ORDER BY ((((rt0.c1)%(rt0.c2))) NOT BETWEEN (((((t0.c0)OR(rt0.c0)))AND(t0.c0))) AND (((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))) ASC  NULLS LAST, CAST(((t0.c0)LIKE(rt0.c1)) AS INTEGER) ASC);
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE (CASE WHEN ((t0.c0) ISNULL) THEN LTRIM(rt0.c1, rt0.c2) END) ORDER BY ((((rt0.c1)%(rt0.c2))) NOT BETWEEN (((((t0.c0)OR(rt0.c0)))AND(t0.c0))) AND (((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))) ASC  NULLS LAST, CAST(((t0.c0)LIKE(rt0.c1)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0) ISNULL) THEN LTRIM(rt0.c1, rt0.c2) END) IS TRUE)  as count FROM rt0 NATURAL JOIN t0 ORDER BY ((((rt0.c1)%(rt0.c2))) NOT BETWEEN (((((t0.c0)OR(rt0.c0)))AND(t0.c0))) AND (((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))) ASC  NULLS LAST, CAST(((t0.c0)LIKE(rt0.c1)) AS INTEGER) ASC);
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE (CASE WHEN ((t0.c0) ISNULL) THEN LTRIM(rt0.c1, rt0.c2) END) ORDER BY ((((rt0.c1)%(rt0.c2))) NOT BETWEEN (((((t0.c0)OR(rt0.c0)))AND(t0.c0))) AND (((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))) ASC  NULLS LAST, CAST(((t0.c0)LIKE(rt0.c1)) AS INTEGER) ASC;
SELECT COUNT(*) FROM t0, rt0, vt1 NATURAL JOIN v0 WHERE (CAST(((t0.c0)||(rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0)||(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM t0, rt0, vt1 NATURAL JOIN v0);
SELECT COUNT(*) FROM t0, rt0, vt1 NATURAL JOIN v0 WHERE (CAST(((t0.c0)||(rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0)||(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM t0, rt0, vt1 NATURAL JOIN v0);
SELECT COUNT(*) FROM t0, rt0, vt1 NATURAL JOIN v0 WHERE (CAST(((t0.c0)||(rt0.c2)) AS TEXT));
SELECT COUNT(*) FROM v0, t0, vt1, rt0 WHERE (((rt0.c2)<=((('-185080790') NOT NULL)))) ORDER BY IFNULL(DISTINCT (x'' IN ()), (((v0.c0, rt0.c0, rt0.c2, rt0.c0, t0.c0)) NOT BETWEEN ((rt0.c1, x'', rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c2, vt1.c0, x'', v0.c0, rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)<=((('-185080790') NOT NULL)))) IS TRUE)  as count FROM v0, t0, vt1, rt0 ORDER BY IFNULL(DISTINCT (x'' IN ()), (((v0.c0, rt0.c0, rt0.c2, rt0.c0, t0.c0)) NOT BETWEEN ((rt0.c1, x'', rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c2, vt1.c0, x'', v0.c0, rt0.c0)))) DESC);
SELECT COUNT(*) FROM v0, t0, vt1, rt0 WHERE (((rt0.c2)<=((('-185080790') NOT NULL)))) ORDER BY IFNULL(DISTINCT (x'' IN ()), (((v0.c0, rt0.c0, rt0.c2, rt0.c0, t0.c0)) NOT BETWEEN ((rt0.c1, x'', rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c2, vt1.c0, x'', v0.c0, rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)<=((('-185080790') NOT NULL)))) IS TRUE)  as count FROM v0, t0, vt1, rt0 ORDER BY IFNULL(DISTINCT (x'' IN ()), (((v0.c0, rt0.c0, rt0.c2, rt0.c0, t0.c0)) NOT BETWEEN ((rt0.c1, x'', rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c2, vt1.c0, x'', v0.c0, rt0.c0)))) DESC);
SELECT COUNT(*) FROM v0, t0, vt1, rt0 WHERE (((rt0.c2)<=((('-185080790') NOT NULL)))) ORDER BY IFNULL(DISTINCT (x'' IN ()), (((v0.c0, rt0.c0, rt0.c2, rt0.c0, t0.c0)) NOT BETWEEN ((rt0.c1, x'', rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c2, vt1.c0, x'', v0.c0, rt0.c0)))) DESC;
SELECT ALL * FROM v0 WHERE ((NOT (v0.c0 COLLATE BINARY))) ORDER BY v0.c0  NULLS LAST, ((CAST(v0.c0 AS REAL)) NOT NULL), ((((v0.c0 IN ())))<=((v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS LAST, ((CAST(v0.c0 AS REAL)) NOT NULL), ((((v0.c0 IN ())))<=((v0.c0))));
SELECT ALL * FROM v0 WHERE ((NOT (v0.c0 COLLATE BINARY))) ORDER BY v0.c0  NULLS LAST, ((CAST(v0.c0 AS REAL)) NOT NULL), ((((v0.c0 IN ())))<=((v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS LAST, ((CAST(v0.c0 AS REAL)) NOT NULL), ((((v0.c0 IN ())))<=((v0.c0))));
SELECT ALL * FROM v0 WHERE ((NOT (v0.c0 COLLATE BINARY))) ORDER BY v0.c0  NULLS LAST, ((CAST(v0.c0 AS REAL)) NOT NULL), ((((v0.c0 IN ())))<=((v0.c0)));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON (((+ (v0.c0))) NOT BETWEEN (((t0.c0) ISNULL)) AND (((t0.c0) BETWEEN (t0.c0) AND (vt1.c0)))) INNER JOIN vt1 ON (- (vt1.c0 COLLATE NOCASE)) WHERE (v0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE RTRIM) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON (((+ (v0.c0))) NOT BETWEEN (((t0.c0) ISNULL)) AND (((t0.c0) BETWEEN (t0.c0) AND (vt1.c0)))) INNER JOIN vt1 ON (- (vt1.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON (((+ (v0.c0))) NOT BETWEEN (((t0.c0) ISNULL)) AND (((t0.c0) BETWEEN (t0.c0) AND (vt1.c0)))) INNER JOIN vt1 ON (- (vt1.c0 COLLATE NOCASE)) WHERE (v0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE RTRIM) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON (((+ (v0.c0))) NOT BETWEEN (((t0.c0) ISNULL)) AND (((t0.c0) BETWEEN (t0.c0) AND (vt1.c0)))) INNER JOIN vt1 ON (- (vt1.c0 COLLATE NOCASE)));
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON vt1.c0 RIGHT OUTER JOIN vt1 ON (('-886793429' COLLATE BINARY) NOT NULL) WHERE (CASE (NOT (rt0.c1))  WHEN ((vt1.c0) NOT NULL) THEN rt0.c1 WHEN ((rt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)) THEN NULL COLLATE BINARY WHEN (x'' IN (rt0.c2)) THEN ((((t0.c0)OR(vt1.c0)))OR(-338388917)) END) ORDER BY ((((rt0.c1)<>(rt0.c0))) BETWEEN (((rt0.c0)>=(rt0.c1))) AND (((vt1.c0)GLOB(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (rt0.c1))  WHEN ((vt1.c0) NOT NULL) THEN rt0.c1 WHEN ((rt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)) THEN NULL COLLATE BINARY WHEN (x'' IN (rt0.c2)) THEN ((((t0.c0)OR(vt1.c0)))OR(-338388917)) END) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON vt1.c0 RIGHT OUTER JOIN vt1 ON (('-886793429' COLLATE BINARY) NOT NULL) ORDER BY ((((rt0.c1)!=(rt0.c0))) BETWEEN (((rt0.c0)>=(rt0.c1))) AND (((vt1.c0)GLOB(t0.c0)))));
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON vt1.c0 RIGHT OUTER JOIN vt1 ON (('-886793429' COLLATE BINARY) NOT NULL) WHERE (CASE (NOT (rt0.c1))  WHEN ((vt1.c0) NOT NULL) THEN rt0.c1 WHEN ((rt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)) THEN NULL COLLATE BINARY WHEN (x'' IN (rt0.c2)) THEN ((((t0.c0)OR(vt1.c0)))OR(-338388917)) END) ORDER BY ((((rt0.c1)<>(rt0.c0))) BETWEEN (((rt0.c0)>=(rt0.c1))) AND (((vt1.c0)GLOB(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (rt0.c1))  WHEN ((vt1.c0) NOT NULL) THEN rt0.c1 WHEN ((rt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)) THEN NULL COLLATE BINARY WHEN (x'' IN (rt0.c2)) THEN ((((t0.c0)OR(vt1.c0)))OR(-338388917)) END) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON vt1.c0 RIGHT OUTER JOIN vt1 ON (('-886793429' COLLATE BINARY) NOT NULL) ORDER BY ((((rt0.c1)!=(rt0.c0))) BETWEEN (((rt0.c0)>=(rt0.c1))) AND (((vt1.c0)GLOB(t0.c0)))));
SELECT * FROM vt1, rt0 WHERE (CASE WHEN rt0.c1 COLLATE RTRIM THEN (((rt0.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c1))) END) ORDER BY CAST(((rt0.c0) IS FALSE) AS TEXT)  NULLS LAST, ((((rt0.c2)AND(0.22260828618903583)))>>(((vt1.c0)<=(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 COLLATE RTRIM THEN (((rt0.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c1))) END) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(((rt0.c0) IS FALSE) AS TEXT)  NULLS LAST, ((((rt0.c2)AND(0.22260828618903583)))>>(((vt1.c0)<=(vt1.c0)))));
SELECT * FROM vt1, rt0 WHERE (CASE WHEN rt0.c1 COLLATE RTRIM THEN (((rt0.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c1))) END) ORDER BY CAST(((rt0.c0) IS FALSE) AS TEXT)  NULLS LAST, ((((rt0.c2)AND(0.22260828618903583)))>>(((vt1.c0)<=(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 COLLATE RTRIM THEN (((rt0.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c1))) END) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(((rt0.c0) IS FALSE) AS TEXT)  NULLS LAST, ((((rt0.c2)AND(0.22260828618903583)))>>(((vt1.c0)<=(vt1.c0)))));
SELECT * FROM vt1, rt0 WHERE (CASE WHEN rt0.c1 COLLATE RTRIM THEN (((rt0.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c1))) END) ORDER BY CAST(((rt0.c0) IS FALSE) AS TEXT)  NULLS LAST, ((((rt0.c2)AND(0.22260828618903583)))>>(((vt1.c0)<=(vt1.c0))));
SELECT ALL COUNT(*) FROM t0, v0 INNER JOIN rt0 ON ((t0.c0)||(rt0.c2)) COLLATE NOCASE WHERE ((('5!n3a9^9.')IS((- (v0.c0))))) ORDER BY ((((NOT (v0.c0))))!=((((rt0.c1) BETWEEN (t0.c0) AND (rt0.c1))))), rt0.c1, CASE WHEN CAST(rt0.c2 AS INTEGER) THEN ((t0.c0)>=('>')) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('5!n3a9^9.')IS((- (v0.c0))))) IS TRUE)  as count FROM t0, v0 INNER JOIN rt0 ON ((t0.c0)||(rt0.c2)) COLLATE NOCASE ORDER BY ((((NOT (v0.c0))))<>((((rt0.c1) BETWEEN (t0.c0) AND (rt0.c1))))), rt0.c1, CASE WHEN CAST(rt0.c2 AS INTEGER) THEN ((t0.c0)>=('>')) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 INNER JOIN rt0 ON ((t0.c0)||(rt0.c2)) COLLATE NOCASE WHERE ((('5!n3a9^9.')IS((- (v0.c0))))) ORDER BY ((((NOT (v0.c0))))!=((((rt0.c1) BETWEEN (t0.c0) AND (rt0.c1))))), rt0.c1, CASE WHEN CAST(rt0.c2 AS INTEGER) THEN ((t0.c0)>=('>')) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('5!n3a9^9.')IS((- (v0.c0))))) IS TRUE)  as count FROM t0, v0 INNER JOIN rt0 ON ((t0.c0)||(rt0.c2)) COLLATE NOCASE ORDER BY ((((NOT (v0.c0))))<>((((rt0.c1) BETWEEN (t0.c0) AND (rt0.c1))))), rt0.c1, CASE WHEN CAST(rt0.c2 AS INTEGER) THEN ((t0.c0)>=('>')) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 INNER JOIN rt0 ON ((t0.c0)||(rt0.c2)) COLLATE NOCASE WHERE ((('5!n3a9^9.')IS((- (v0.c0))))) ORDER BY ((((NOT (v0.c0))))!=((((rt0.c1) BETWEEN (t0.c0) AND (rt0.c1))))), rt0.c1, CASE WHEN CAST(rt0.c2 AS INTEGER) THEN ((t0.c0)>=('>')) END ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1)>(rt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)>(rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1)>(rt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)>(rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1)>(rt0.c1)) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ('0.766524302616273');
SELECT SUM(count) FROM (SELECT ALL (('0.766524302616273') IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ('0.766524302616273');
SELECT SUM(count) FROM (SELECT ALL (('0.766524302616273') IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ('0.766524302616273');
SELECT ALL * FROM v0 WHERE (TYPEOF(DISTINCT v0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT v0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (TYPEOF(DISTINCT v0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT v0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (TYPEOF(DISTINCT v0.c0 COLLATE NOCASE));
SELECT * FROM v0, t0, vt1 WHERE ((+ ((~ (x'13cc')))));
SELECT SUM(count) FROM (SELECT (((+ ((~ (x'13cc'))))) IS TRUE)  as count FROM v0, t0, vt1);
SELECT * FROM v0, t0, vt1 WHERE ((+ ((~ (x'13cc')))));
SELECT SUM(count) FROM (SELECT (((+ ((~ (x'13cc'))))) IS TRUE)  as count FROM v0, t0, vt1);
SELECT * FROM v0, t0, vt1 WHERE ((+ ((~ (x'13cc')))));
SELECT COUNT(*) FROM rt0, vt1 FULL OUTER JOIN v0 ON (((v0.c0) ISNULL) IN ()) WHERE (CAST(((vt1.c0)>(rt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)>(rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt1 FULL OUTER JOIN v0 ON (((v0.c0) ISNULL) IN ()));
SELECT COUNT(*) FROM rt0, vt1 FULL OUTER JOIN v0 ON (((v0.c0) ISNULL) IN ()) WHERE (CAST(((vt1.c0)>(rt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)>(rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt1 FULL OUTER JOIN v0 ON (((v0.c0) ISNULL) IN ()));
SELECT COUNT(*) FROM rt0, vt1 FULL OUTER JOIN v0 ON (((v0.c0) ISNULL) IN ()) WHERE (CAST(((vt1.c0)>(rt0.c1)) AS NUMERIC));
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON (NOT (CAST(rt0.c0 AS NUMERIC))) WHERE (((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)%(((NULL)-(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)%(((NULL)-(rt0.c0))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (NOT (CAST(rt0.c0 AS NUMERIC))));
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON (NOT (CAST(rt0.c0 AS NUMERIC))) WHERE (((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)%(((NULL)-(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)%(((NULL)-(rt0.c0))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (NOT (CAST(rt0.c0 AS NUMERIC))));
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON (NOT (CAST(rt0.c0 AS NUMERIC))) WHERE (((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)%(((NULL)-(rt0.c0)))));
SELECT ALL * FROM vt1, rt0 WHERE ((((CAST(rt0.c2 AS NUMERIC)))=((((0.652702564791448) NOT NULL))))) ORDER BY (('')LIKE((- (rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c2 AS NUMERIC)))==((((0.652702564791448) NOT NULL))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (('')LIKE((- (rt0.c2)))) ASC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE ((((CAST(rt0.c2 AS NUMERIC)))=((((0.652702564791448) NOT NULL))))) ORDER BY (('')LIKE((- (rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c2 AS NUMERIC)))==((((0.652702564791448) NOT NULL))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (('')LIKE((- (rt0.c2)))) ASC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE ((((CAST(rt0.c2 AS NUMERIC)))=((((0.652702564791448) NOT NULL))))) ORDER BY (('')LIKE((- (rt0.c2)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0 CROSS JOIN t0 ON ((((v0.c0) BETWEEN (rt0.c2) AND (vt1.c0)))!=(load_extension(rt0.c1))) CROSS JOIN vt1 ON ((rt0.c0)+(vt1.c0)) COLLATE RTRIM WHERE ((- (((rt0.c0)-(t0.c0))))) ORDER BY LIKELY((rt0.c2 IN ())) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c0)-(t0.c0))))) IS TRUE)  as count FROM v0, rt0 CROSS JOIN t0 ON ((((v0.c0) BETWEEN (rt0.c2) AND (vt1.c0)))<>(load_extension(rt0.c1))) CROSS JOIN vt1 ON ((rt0.c0)+(vt1.c0)) COLLATE RTRIM ORDER BY LIKELY((rt0.c2 IN ())) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 CROSS JOIN t0 ON ((((v0.c0) BETWEEN (rt0.c2) AND (vt1.c0)))!=(load_extension(rt0.c1))) CROSS JOIN vt1 ON ((rt0.c0)+(vt1.c0)) COLLATE RTRIM WHERE ((- (((rt0.c0)-(t0.c0))))) ORDER BY LIKELY((rt0.c2 IN ())) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c0)-(t0.c0))))) IS TRUE)  as count FROM v0, rt0 CROSS JOIN t0 ON ((((v0.c0) BETWEEN (rt0.c2) AND (vt1.c0)))<>(load_extension(rt0.c1))) CROSS JOIN vt1 ON ((rt0.c0)+(vt1.c0)) COLLATE RTRIM ORDER BY LIKELY((rt0.c2 IN ())) ASC  NULLS LAST);
SELECT * FROM t0 WHERE (0.16404844805032925) ORDER BY ((CAST(t0.c0 AS TEXT))GLOB(t0.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.16404844805032925) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c0 AS TEXT))GLOB(t0.c0 COLLATE BINARY))  NULLS LAST);
SELECT * FROM t0 WHERE (0.16404844805032925) ORDER BY ((CAST(t0.c0 AS TEXT))GLOB(t0.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.16404844805032925) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c0 AS TEXT))GLOB(t0.c0 COLLATE BINARY))  NULLS LAST);
SELECT * FROM t0 WHERE (0.16404844805032925) ORDER BY ((CAST(t0.c0 AS TEXT))GLOB(t0.c0 COLLATE BINARY))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(-465095022 COLLATE NOCASE AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(-465095022 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM v0 NOT INDEXED);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(-465095022 COLLATE NOCASE AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(-465095022 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM v0 NOT INDEXED);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(-465095022 COLLATE NOCASE AS NUMERIC));
SELECT ALL * FROM rt0, t0, v0 WHERE (UPPER(DISTINCT v0.c0));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT v0.c0)) IS TRUE)  as count FROM rt0, t0, v0);
SELECT ALL * FROM rt0, t0, v0 WHERE (UPPER(DISTINCT v0.c0));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT v0.c0)) IS TRUE)  as count FROM rt0, t0, v0);
SELECT ALL * FROM rt0, t0, v0 WHERE (UPPER(DISTINCT v0.c0));
SELECT ALL * FROM t0, v0, vt1 LEFT OUTER JOIN rt0 ON vt1.c0 WHERE (((DATETIME(rt0.c1, rt0.c0, v0.c0))LIKE((+ (0.4524335552989722))))) ORDER BY ((CASE rt0.c0  WHEN x'd6e5' THEN t0.c0 END) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((DATETIME(rt0.c1, rt0.c0, v0.c0))LIKE((+ (0.4524335552989722))))) IS TRUE)  as count FROM t0, v0, vt1 LEFT OUTER JOIN rt0 ON vt1.c0 ORDER BY ((CASE rt0.c0  WHEN x'd6e5' THEN t0.c0 END) IS TRUE) ASC  NULLS LAST);
SELECT ALL * FROM t0, v0, vt1 LEFT OUTER JOIN rt0 ON vt1.c0 WHERE (((DATETIME(rt0.c1, rt0.c0, v0.c0))LIKE((+ (0.4524335552989722))))) ORDER BY ((CASE rt0.c0  WHEN x'd6e5' THEN t0.c0 END) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((DATETIME(rt0.c1, rt0.c0, v0.c0))LIKE((+ (0.4524335552989722))))) IS TRUE)  as count FROM t0, v0, vt1 LEFT OUTER JOIN rt0 ON vt1.c0 ORDER BY ((CASE rt0.c0  WHEN x'd6e5' THEN t0.c0 END) IS TRUE) ASC  NULLS LAST);
SELECT ALL * FROM t0, v0, vt1 LEFT OUTER JOIN rt0 ON vt1.c0 WHERE (((DATETIME(rt0.c1, rt0.c0, v0.c0))LIKE((+ (0.4524335552989722))))) ORDER BY ((CASE rt0.c0  WHEN x'd6e5' THEN t0.c0 END) IS TRUE) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt1 ON (((NULL))>=((CAST(vt1.c0 AS TEXT)))) WHERE (((((((((((v0.c0)GLOB(vt1.c0)))OR(((v0.c0) BETWEEN (vt1.c0) AND (v0.c0)))))AND(CAST(vt1.c0 AS REAL))))AND(((v0.c0)&(v0.c0)))))OR(CHANGES())));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)GLOB(vt1.c0)))OR(((v0.c0) BETWEEN (vt1.c0) AND (v0.c0)))))AND(CAST(vt1.c0 AS REAL))))AND(((v0.c0)&(v0.c0)))))OR(CHANGES()))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt1 ON (((NULL))>=((CAST(vt1.c0 AS TEXT)))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt1 ON (((NULL))>=((CAST(vt1.c0 AS TEXT)))) WHERE (((((((((((v0.c0)GLOB(vt1.c0)))OR(((v0.c0) BETWEEN (vt1.c0) AND (v0.c0)))))AND(CAST(vt1.c0 AS REAL))))AND(((v0.c0)&(v0.c0)))))OR(CHANGES())));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)GLOB(vt1.c0)))OR(((v0.c0) BETWEEN (vt1.c0) AND (v0.c0)))))AND(CAST(vt1.c0 AS REAL))))AND(((v0.c0)&(v0.c0)))))OR(CHANGES()))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt1 ON (((NULL))>=((CAST(vt1.c0 AS TEXT)))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt1 ON (((NULL))>=((CAST(vt1.c0 AS TEXT)))) WHERE (((((((((((v0.c0)GLOB(vt1.c0)))OR(((v0.c0) BETWEEN (vt1.c0) AND (v0.c0)))))AND(CAST(vt1.c0 AS REAL))))AND(((v0.c0)&(v0.c0)))))OR(CHANGES())));
SELECT ALL * FROM rt0 WHERE (CASE ((((rt0.c2)AND(rt0.c2)))OR(rt0.c2))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN (((rt0.c0))==((rt0.c1))) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c2)AND(rt0.c2)))OR(rt0.c2))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN (((rt0.c0))==((rt0.c1))) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE ((((rt0.c2)AND(rt0.c2)))OR(rt0.c2))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN (((rt0.c0))==((rt0.c1))) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c2)AND(rt0.c2)))OR(rt0.c2))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN (((rt0.c0))==((rt0.c1))) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE ((((rt0.c2)AND(rt0.c2)))OR(rt0.c2))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN (((rt0.c0))==((rt0.c1))) END);
SELECT ALL * FROM v0, t0, rt0 WHERE (SQLITE_SOURCE_ID() COLLATE BINARY) ORDER BY (((NOT ('5D'))) NOTNULL)  NULLS FIRST, ((((rt0.c1) NOT NULL)) NOT BETWEEN (CASE x'be28'  WHEN t0.c0 THEN v0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c0 END) AND (0.9623927048531262))  NULLS FIRST, CAST(((t0.c0)*(rt0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID() COLLATE BINARY) IS TRUE)  as count FROM v0, t0, rt0 ORDER BY (((NOT ('5D'))) NOTNULL)  NULLS FIRST, ((((rt0.c1) NOT NULL)) NOT BETWEEN (CASE x'be28'  WHEN t0.c0 THEN v0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c0 END) AND (0.9623927048531262))  NULLS FIRST, CAST(((t0.c0)*(rt0.c0)) AS INTEGER));
SELECT ALL * FROM v0, t0, rt0 WHERE (SQLITE_SOURCE_ID() COLLATE BINARY) ORDER BY (((NOT ('5D'))) NOTNULL)  NULLS FIRST, ((((rt0.c1) NOT NULL)) NOT BETWEEN (CASE x'be28'  WHEN t0.c0 THEN v0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c0 END) AND (0.9623927048531262))  NULLS FIRST, CAST(((t0.c0)*(rt0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID() COLLATE BINARY) IS TRUE)  as count FROM v0, t0, rt0 ORDER BY (((NOT ('5D'))) NOTNULL)  NULLS FIRST, ((((rt0.c1) NOT NULL)) NOT BETWEEN (CASE x'be28'  WHEN t0.c0 THEN v0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c0 END) AND (0.9623927048531262))  NULLS FIRST, CAST(((t0.c0)*(rt0.c0)) AS INTEGER));
SELECT ALL * FROM v0, t0, rt0 WHERE (SQLITE_SOURCE_ID() COLLATE BINARY) ORDER BY (((NOT ('5D'))) NOTNULL)  NULLS FIRST, ((((rt0.c1) NOT NULL)) NOT BETWEEN (CASE x'be28'  WHEN t0.c0 THEN v0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c0 END) AND (0.9623927048531262))  NULLS FIRST, CAST(((t0.c0)*(rt0.c0)) AS INTEGER);
SELECT COUNT(*) FROM v0 NOT INDEXED, rt0 FULL OUTER JOIN t0 ON (((rt0.c2, rt0.c2, v0.c0)) NOT BETWEEN ((((v0.c0)&(v0.c0)), CAST(rt0.c0 AS REAL), json_quote(NULL))) AND (((+ (rt0.c1)), (rt0.c0 IN ()), ((t0.c0) NOT BETWEEN (NULL) AND (rt0.c0))))) WHERE (((json_remove(x'', rt0.c0, rt0.c1, rt0.c2)) NOT NULL)) ORDER BY CASE rt0.c0  WHEN 0Xffffffffa0514331 THEN rt0.c1 WHEN 0.7569252521280888 THEN t0.c0 WHEN rt0.c2 THEN '-2052225449' ELSE v0.c0 END COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((json_remove(x'', rt0.c0, rt0.c1, rt0.c2)) NOT NULL)) IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN t0 ON (((rt0.c2, rt0.c2, v0.c0)) NOT BETWEEN ((((v0.c0)&(v0.c0)), CAST(rt0.c0 AS REAL), json_quote(NULL))) AND (((+ (rt0.c1)), (rt0.c0 IN ()), ((t0.c0) NOT BETWEEN (NULL) AND (rt0.c0))))) ORDER BY CASE rt0.c0  WHEN 0xffffffffa0514331 THEN rt0.c1 WHEN 0.7569252521280888 THEN t0.c0 WHEN rt0.c2 THEN '-2052225449' ELSE v0.c0 END COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM v0 NOT INDEXED, rt0 FULL OUTER JOIN t0 ON (((rt0.c2, rt0.c2, v0.c0)) NOT BETWEEN ((((v0.c0)&(v0.c0)), CAST(rt0.c0 AS REAL), json_quote(NULL))) AND (((+ (rt0.c1)), (rt0.c0 IN ()), ((t0.c0) NOT BETWEEN (NULL) AND (rt0.c0))))) WHERE (((json_remove(x'', rt0.c0, rt0.c1, rt0.c2)) NOT NULL)) ORDER BY CASE rt0.c0  WHEN 0Xffffffffa0514331 THEN rt0.c1 WHEN 0.7569252521280888 THEN t0.c0 WHEN rt0.c2 THEN '-2052225449' ELSE v0.c0 END COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((json_remove(x'', rt0.c0, rt0.c1, rt0.c2)) NOT NULL)) IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN t0 ON (((rt0.c2, rt0.c2, v0.c0)) NOT BETWEEN ((((v0.c0)&(v0.c0)), CAST(rt0.c0 AS REAL), json_quote(NULL))) AND (((+ (rt0.c1)), (rt0.c0 IN ()), ((t0.c0) NOT BETWEEN (NULL) AND (rt0.c0))))) ORDER BY CASE rt0.c0  WHEN 0xffffffffa0514331 THEN rt0.c1 WHEN 0.7569252521280888 THEN t0.c0 WHEN rt0.c2 THEN '-2052225449' ELSE v0.c0 END COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM vt1, v0 WHERE (((((vt1.c0) ISNULL))=(((v0.c0)>=(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) ISNULL))==(((v0.c0)>=(v0.c0))))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE (((((vt1.c0) ISNULL))=(((v0.c0)>=(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) ISNULL))==(((v0.c0)>=(v0.c0))))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE (((((vt1.c0) ISNULL))=(((v0.c0)>=(v0.c0)))));
SELECT * FROM rt0, v0, t0 WHERE (((CAST(rt0.c2 AS REAL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS REAL)) IS FALSE)) IS TRUE)  as count FROM rt0, v0, t0);
SELECT * FROM rt0, v0, t0 WHERE (((CAST(rt0.c2 AS REAL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS REAL)) IS FALSE)) IS TRUE)  as count FROM rt0, v0, t0);
SELECT * FROM rt0, v0, t0 WHERE (((CAST(rt0.c2 AS REAL)) IS FALSE));
SELECT * FROM vt1, rt0 WHERE ((CAST(vt1.c0 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS REAL) IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((CAST(vt1.c0 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS REAL) IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((CAST(vt1.c0 AS REAL) IN ()));
SELECT * FROM v0 CROSS JOIN rt0 ON '1232327419' WHERE (((((rt0.c1) NOTNULL)) NOT BETWEEN ((NOT (rt0.c1))) AND (IFNULL(rt0.c0, rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOTNULL)) NOT BETWEEN ((NOT (rt0.c1))) AND (IFNULL(rt0.c0, rt0.c1)))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON '1232327419');
SELECT * FROM v0 CROSS JOIN rt0 ON '1232327419' WHERE (((((rt0.c1) NOTNULL)) NOT BETWEEN ((NOT (rt0.c1))) AND (IFNULL(rt0.c0, rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOTNULL)) NOT BETWEEN ((NOT (rt0.c1))) AND (IFNULL(rt0.c0, rt0.c1)))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON '1232327419');
SELECT * FROM v0 CROSS JOIN rt0 ON '1232327419' WHERE (((((rt0.c1) NOTNULL)) NOT BETWEEN ((NOT (rt0.c1))) AND (IFNULL(rt0.c0, rt0.c1))));
SELECT * FROM vt1, t0 WHERE ((((vt1.c0)) BETWEEN ((CAST(vt1.c0 AS REAL))) AND ((CAST(t0.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((CAST(vt1.c0 AS REAL))) AND ((CAST(t0.c0 AS TEXT))))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE ((((vt1.c0)) BETWEEN ((CAST(vt1.c0 AS REAL))) AND ((CAST(t0.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((CAST(vt1.c0 AS REAL))) AND ((CAST(t0.c0 AS TEXT))))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE ((((vt1.c0)) BETWEEN ((CAST(vt1.c0 AS REAL))) AND ((CAST(t0.c0 AS TEXT)))));
SELECT ALL COUNT(*) FROM t0, v0, vt1 WHERE (HEX(t0.c0) COLLATE RTRIM) ORDER BY ((((((((((((((t0.c0)OR(0.05964372215652858)))OR(v0.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(t0.c0)))OR(t0.c0))) ISNULL), ((vt1.c0)%(((((((((NULL)OR(t0.c0)))OR(v0.c0)))AND(t0.c0)))OR(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(t0.c0) COLLATE RTRIM) IS TRUE)  as count FROM t0, v0, vt1 ORDER BY ((((((((((((((t0.c0)OR(0.05964372215652858)))OR(v0.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(t0.c0)))OR(t0.c0))) ISNULL), ((vt1.c0)%(((((((((NULL)OR(t0.c0)))OR(v0.c0)))AND(t0.c0)))OR(v0.c0)))) DESC);
SELECT ALL COUNT(*) FROM t0, v0, vt1 WHERE (HEX(t0.c0) COLLATE RTRIM) ORDER BY ((((((((((((((t0.c0)OR(0.05964372215652858)))OR(v0.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(t0.c0)))OR(t0.c0))) ISNULL), ((vt1.c0)%(((((((((NULL)OR(t0.c0)))OR(v0.c0)))AND(t0.c0)))OR(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(t0.c0) COLLATE RTRIM) IS TRUE)  as count FROM t0, v0, vt1 ORDER BY ((((((((((((((t0.c0)OR(0.05964372215652858)))OR(v0.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(t0.c0)))OR(t0.c0))) ISNULL), ((vt1.c0)%(((((((((NULL)OR(t0.c0)))OR(v0.c0)))AND(t0.c0)))OR(v0.c0)))) DESC);
SELECT ALL COUNT(*) FROM t0, v0, vt1 WHERE (HEX(t0.c0) COLLATE RTRIM) ORDER BY ((((((((((((((t0.c0)OR(0.05964372215652858)))OR(v0.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(t0.c0)))OR(t0.c0))) ISNULL), ((vt1.c0)%(((((((((NULL)OR(t0.c0)))OR(v0.c0)))AND(t0.c0)))OR(v0.c0)))) DESC;
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((- (870386992)) IN ())) ORDER BY ((CAST(0.9403414883988047 AS NUMERIC))|(((((t0.c0)OR(v0.c0)))OR(v0.c0)))) ASC, 0Xffffffffe1dc939d, ((v0.c0) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((- (870386992)) IN ())) IS TRUE)  as count FROM t0, v0 ORDER BY ((CAST(0.9403414883988047 AS NUMERIC))|(((((t0.c0)OR(v0.c0)))OR(v0.c0)))) ASC, 0xffffffffe1dc939d, ((v0.c0) NOTNULL) ASC);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((- (870386992)) IN ())) ORDER BY ((CAST(0.9403414883988047 AS NUMERIC))|(((((t0.c0)OR(v0.c0)))OR(v0.c0)))) ASC, 0Xffffffffe1dc939d, ((v0.c0) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((- (870386992)) IN ())) IS TRUE)  as count FROM t0, v0 ORDER BY ((CAST(0.9403414883988047 AS NUMERIC))|(((((t0.c0)OR(v0.c0)))OR(v0.c0)))) ASC, 0xffffffffe1dc939d, ((v0.c0) NOTNULL) ASC);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((- (870386992)) IN ())) ORDER BY ((CAST(0.9403414883988047 AS NUMERIC))|(((((t0.c0)OR(v0.c0)))OR(v0.c0)))) ASC, 0Xffffffffe1dc939d, ((v0.c0) NOTNULL) ASC;
SELECT ALL * FROM rt0, v0, t0, vt1 WHERE (t0.c0) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt0, v0, t0, vt1 ORDER BY NULL  NULLS LAST);
SELECT ALL * FROM rt0, v0, t0, vt1 WHERE (t0.c0) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt0, v0, t0, vt1 ORDER BY NULL  NULLS LAST);
SELECT ALL * FROM rt0, v0, t0, vt1 WHERE (t0.c0) ORDER BY NULL  NULLS LAST;
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON CASE CAST(rt0.c0 AS TEXT)  WHEN (+ (rt0.c1)) THEN -839785644 COLLATE NOCASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (v0.c0)) THEN ((t0.c0)=(v0.c0)) WHEN ((((((((rt0.c1)AND(v0.c0)))OR(v0.c0)))AND(rt0.c0)))OR(rt0.c2)) THEN (rt0.c2 IN (rt0.c1)) WHEN v0.c0 COLLATE RTRIM THEN ((vt1.c0)IS(rt0.c1)) WHEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((t0.c0))) THEN ((rt0.c1)|(rt0.c2)) END RIGHT OUTER JOIN v0 ON (((((rt0.c0))==((v0.c0)))) BETWEEN ((~ (rt0.c1))) AND ((((rt0.c2, rt0.c0, t0.c0, v0.c0, rt0.c0))<((v0.c0, v0.c0, rt0.c2, 0.7681918217116633, v0.c0))))) CROSS JOIN t0 ON (('128986268') ISNULL) WHERE (((CASE WHEN t0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE '46809473' END)<('-312366572')));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE '46809473' END)<('-312366572'))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON CASE CAST(rt0.c0 AS TEXT)  WHEN (+ (rt0.c1)) THEN -839785644 COLLATE NOCASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (v0.c0)) THEN ((t0.c0)=(v0.c0)) WHEN ((((((((rt0.c1)AND(v0.c0)))OR(v0.c0)))AND(rt0.c0)))OR(rt0.c2)) THEN (rt0.c2 IN (rt0.c1)) WHEN v0.c0 COLLATE RTRIM THEN ((vt1.c0)IS(rt0.c1)) WHEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((t0.c0))) THEN ((rt0.c1)|(rt0.c2)) END RIGHT OUTER JOIN v0 ON (((((rt0.c0))=((v0.c0)))) BETWEEN ((~ (rt0.c1))) AND ((((rt0.c2, rt0.c0, t0.c0, v0.c0, rt0.c0))<((v0.c0, v0.c0, rt0.c2, 0.7681918217116633, v0.c0))))) CROSS JOIN t0 ON (('128986268') ISNULL));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON CASE CAST(rt0.c0 AS TEXT)  WHEN (+ (rt0.c1)) THEN -839785644 COLLATE NOCASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (v0.c0)) THEN ((t0.c0)=(v0.c0)) WHEN ((((((((rt0.c1)AND(v0.c0)))OR(v0.c0)))AND(rt0.c0)))OR(rt0.c2)) THEN (rt0.c2 IN (rt0.c1)) WHEN v0.c0 COLLATE RTRIM THEN ((vt1.c0)IS(rt0.c1)) WHEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((t0.c0))) THEN ((rt0.c1)|(rt0.c2)) END RIGHT OUTER JOIN v0 ON (((((rt0.c0))==((v0.c0)))) BETWEEN ((~ (rt0.c1))) AND ((((rt0.c2, rt0.c0, t0.c0, v0.c0, rt0.c0))<((v0.c0, v0.c0, rt0.c2, 0.7681918217116633, v0.c0))))) CROSS JOIN t0 ON (('128986268') ISNULL) WHERE (((CASE WHEN t0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE '46809473' END)<('-312366572')));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE '46809473' END)<('-312366572'))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON CASE CAST(rt0.c0 AS TEXT)  WHEN (+ (rt0.c1)) THEN -839785644 COLLATE NOCASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (v0.c0)) THEN ((t0.c0)=(v0.c0)) WHEN ((((((((rt0.c1)AND(v0.c0)))OR(v0.c0)))AND(rt0.c0)))OR(rt0.c2)) THEN (rt0.c2 IN (rt0.c1)) WHEN v0.c0 COLLATE RTRIM THEN ((vt1.c0)IS(rt0.c1)) WHEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((t0.c0))) THEN ((rt0.c1)|(rt0.c2)) END RIGHT OUTER JOIN v0 ON (((((rt0.c0))=((v0.c0)))) BETWEEN ((~ (rt0.c1))) AND ((((rt0.c2, rt0.c0, t0.c0, v0.c0, rt0.c0))<((v0.c0, v0.c0, rt0.c2, 0.7681918217116633, v0.c0))))) CROSS JOIN t0 ON (('128986268') ISNULL));
SELECT COUNT(*) FROM t0, v0 WHERE ((NOT ((x'cb8f' IN (v0.c0, v0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((x'cb8f' IN (v0.c0, v0.c0))))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE ((NOT ((x'cb8f' IN (v0.c0, v0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((x'cb8f' IN (v0.c0, v0.c0))))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE ((NOT ((x'cb8f' IN (v0.c0, v0.c0)))));
SELECT * FROM vt1, t0, v0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt1, t0, v0);
SELECT * FROM vt1, t0, v0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt1, t0, v0);
SELECT * FROM vt1, t0, v0 WHERE (t0.c0);
SELECT ALL * FROM v0, rt0, t0, vt1 WHERE (((TRIM(vt1.c0))AND(vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((TRIM(vt1.c0))AND(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, rt0, t0, vt1);
SELECT ALL * FROM v0, rt0, t0, vt1 WHERE (((TRIM(vt1.c0))AND(vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((TRIM(vt1.c0))AND(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, rt0, t0, vt1);
SELECT ALL * FROM v0, rt0, t0, vt1 WHERE (((TRIM(vt1.c0))AND(vt1.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt0, v0 FULL OUTER JOIN t0 ON NULL FULL OUTER JOIN vt1 ON ((PRINTF(rt0.c1)) NOTNULL) WHERE (CAST((rt0.c2 IN ()) AS TEXT)) ORDER BY (~ ((((rt0.c1))>((v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c2 IN ()) AS TEXT)) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN t0 ON NULL FULL OUTER JOIN vt1 ON ((PRINTF(rt0.c1)) NOTNULL) ORDER BY (~ ((((rt0.c1))>((v0.c0))))));
SELECT COUNT(*) FROM rt0, v0 FULL OUTER JOIN t0 ON NULL FULL OUTER JOIN vt1 ON ((PRINTF(rt0.c1)) NOTNULL) WHERE (CAST((rt0.c2 IN ()) AS TEXT)) ORDER BY (~ ((((rt0.c1))>((v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c2 IN ()) AS TEXT)) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN t0 ON NULL FULL OUTER JOIN vt1 ON ((PRINTF(rt0.c1)) NOTNULL) ORDER BY (~ ((((rt0.c1))>((v0.c0))))));
SELECT COUNT(*) FROM rt0, v0 FULL OUTER JOIN t0 ON NULL FULL OUTER JOIN vt1 ON ((PRINTF(rt0.c1)) NOTNULL) WHERE (CAST((rt0.c2 IN ()) AS TEXT)) ORDER BY (~ ((((rt0.c1))>((v0.c0)))));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON ((((vt1.c0))>((rt0.c1))) IN (json_array_length(vt1.c0, 0.25438465186940784), ((t0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))) INNER JOIN t0 ON CAST((+ (rt0.c0)) AS BLOB) FULL OUTER JOIN vt1 ON ((((rt0.c2) NOT BETWEEN (x'71d8') AND (t0.c0)))>=(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE t0.c0 END)) WHERE ('-727893803');
SELECT SUM(count) FROM (SELECT (('-727893803') IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((((vt1.c0))>((rt0.c1))) IN (json_array_length(vt1.c0, 0.25438465186940784), ((t0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))) INNER JOIN t0 ON CAST((+ (rt0.c0)) AS BLOB) FULL OUTER JOIN vt1 ON ((((rt0.c2) NOT BETWEEN (x'71d8') AND (t0.c0)))>=(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE t0.c0 END)));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON ((((vt1.c0))>((rt0.c1))) IN (json_array_length(vt1.c0, 0.25438465186940784), ((t0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))) INNER JOIN t0 ON CAST((+ (rt0.c0)) AS BLOB) FULL OUTER JOIN vt1 ON ((((rt0.c2) NOT BETWEEN (x'71d8') AND (t0.c0)))>=(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE t0.c0 END)) WHERE ('-727893803');
SELECT SUM(count) FROM (SELECT (('-727893803') IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((((vt1.c0))>((rt0.c1))) IN (json_array_length(vt1.c0, 0.25438465186940784), ((t0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))) INNER JOIN t0 ON CAST((+ (rt0.c0)) AS BLOB) FULL OUTER JOIN vt1 ON ((((rt0.c2) NOT BETWEEN (x'71d8') AND (t0.c0)))>=(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE t0.c0 END)));
SELECT COUNT(*) FROM t0, vt1, v0, rt0 WHERE (LIKELY((((vt1.c0)) BETWEEN ((v0.c0)) AND ((rt0.c1))))) ORDER BY (((rt0.c0 IN ()))>=(((((((((rt0.c0)OR(0.430395185186523)))AND(rt0.c0)))AND('1998789531')))OR(v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY((((vt1.c0)) BETWEEN ((v0.c0)) AND ((rt0.c1))))) IS TRUE)  as count FROM t0, vt1, v0, rt0 ORDER BY (((rt0.c0 IN ()))>=(((((((((rt0.c0)OR(0.430395185186523)))AND(rt0.c0)))AND('1998789531')))OR(v0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1, v0, rt0 WHERE (LIKELY((((vt1.c0)) BETWEEN ((v0.c0)) AND ((rt0.c1))))) ORDER BY (((rt0.c0 IN ()))>=(((((((((rt0.c0)OR(0.430395185186523)))AND(rt0.c0)))AND('1998789531')))OR(v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY((((vt1.c0)) BETWEEN ((v0.c0)) AND ((rt0.c1))))) IS TRUE)  as count FROM t0, vt1, v0, rt0 ORDER BY (((rt0.c0 IN ()))>=(((((((((rt0.c0)OR(0.430395185186523)))AND(rt0.c0)))AND('1998789531')))OR(v0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1, v0, rt0 WHERE (LIKELY((((vt1.c0)) BETWEEN ((v0.c0)) AND ((rt0.c1))))) ORDER BY (((rt0.c0 IN ()))>=(((((((((rt0.c0)OR(0.430395185186523)))AND(rt0.c0)))AND('1998789531')))OR(v0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM t0 INNER JOIN v0 ON CASE CASE t0.c0  WHEN v0.c0 THEN t0.c0 END  WHEN x'd062' THEN (v0.c0 IN ()) WHEN NULL THEN v0.c0 WHEN v0.c0 THEN ((NULL) NOT BETWEEN (t0.c0) AND (v0.c0)) END WHERE ((((((t0.c0))<=((v0.c0))))>=(NULL)));
SELECT SUM(count) FROM (SELECT (((((((t0.c0))<=((v0.c0))))>=(NULL))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON CASE CASE t0.c0  WHEN v0.c0 THEN t0.c0 END  WHEN x'd062' THEN (v0.c0 IN ()) WHEN NULL THEN v0.c0 WHEN v0.c0 THEN ((NULL) NOT BETWEEN (t0.c0) AND (v0.c0)) END);
SELECT ALL * FROM t0 INNER JOIN v0 ON CASE CASE t0.c0  WHEN v0.c0 THEN t0.c0 END  WHEN x'd062' THEN (v0.c0 IN ()) WHEN NULL THEN v0.c0 WHEN v0.c0 THEN ((NULL) NOT BETWEEN (t0.c0) AND (v0.c0)) END WHERE ((((((t0.c0))<=((v0.c0))))>=(NULL)));
SELECT SUM(count) FROM (SELECT (((((((t0.c0))<=((v0.c0))))>=(NULL))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON CASE CASE t0.c0  WHEN v0.c0 THEN t0.c0 END  WHEN x'd062' THEN (v0.c0 IN ()) WHEN NULL THEN v0.c0 WHEN v0.c0 THEN ((NULL) NOT BETWEEN (t0.c0) AND (v0.c0)) END);
SELECT ALL * FROM t0 INNER JOIN v0 ON CASE CASE t0.c0  WHEN v0.c0 THEN t0.c0 END  WHEN x'd062' THEN (v0.c0 IN ()) WHEN NULL THEN v0.c0 WHEN v0.c0 THEN ((NULL) NOT BETWEEN (t0.c0) AND (v0.c0)) END WHERE ((((((t0.c0))<=((v0.c0))))>=(NULL)));
SELECT ALL * FROM t0, rt0 WHERE (((((rt0.c2) NOTNULL)) NOTNULL)) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c0);
SELECT ALL * FROM t0, rt0 WHERE (((((rt0.c2) NOTNULL)) NOTNULL)) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c0);
SELECT ALL * FROM t0, rt0 WHERE (((((rt0.c2) NOTNULL)) NOTNULL)) ORDER BY rt0.c0;
SELECT ALL * FROM t0, vt1, v0 NATURAL JOIN rt0 WHERE (((rt0.c2 COLLATE BINARY) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM t0, vt1, v0 NATURAL JOIN rt0);
SELECT ALL * FROM t0, vt1, v0 NATURAL JOIN rt0 WHERE (((rt0.c2 COLLATE BINARY) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM t0, vt1, v0 NATURAL JOIN rt0);
SELECT ALL * FROM t0, vt1, v0 NATURAL JOIN rt0 WHERE (((rt0.c2 COLLATE BINARY) NOTNULL));
SELECT COUNT(*) FROM t0, vt1, v0, rt0 WHERE (((CASE rt0.c2  WHEN rt0.c2 THEN t0.c0 ELSE rt0.c2 END) NOT BETWEEN (((t0.c0)>(rt0.c0))) AND (vt1.c0))) ORDER BY (((((((((((((((((((rt0.c0, vt1.c0, vt1.c0))<>((vt1.c0, rt0.c0, rt0.c2))))OR((~ (rt0.c0)))))AND(CAST(rt0.c2 AS BLOB))))OR(0.09203805659968023)))OR(((rt0.c2) BETWEEN (rt0.c0) AND (t0.c0)))))AND(rt0.c2 COLLATE BINARY)))OR(v0.c0)))OR(((rt0.c2)-(vt1.c0)))))OR(((t0.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c2 THEN t0.c0 ELSE rt0.c2 END) NOT BETWEEN (((t0.c0)>(rt0.c0))) AND (vt1.c0))) IS TRUE)  as count FROM t0, vt1, v0, rt0 ORDER BY (((((((((((((((((((rt0.c0, vt1.c0, vt1.c0))<>((vt1.c0, rt0.c0, rt0.c2))))OR((~ (rt0.c0)))))AND(CAST(rt0.c2 AS BLOB))))OR(0.09203805659968023)))OR(((rt0.c2) BETWEEN (rt0.c0) AND (t0.c0)))))AND(rt0.c2 COLLATE BINARY)))OR(v0.c0)))OR(((rt0.c2)-(vt1.c0)))))OR(((t0.c0) IS TRUE))) DESC);
SELECT COUNT(*) FROM t0, vt1, v0, rt0 WHERE (((CASE rt0.c2  WHEN rt0.c2 THEN t0.c0 ELSE rt0.c2 END) NOT BETWEEN (((t0.c0)>(rt0.c0))) AND (vt1.c0))) ORDER BY (((((((((((((((((((rt0.c0, vt1.c0, vt1.c0))<>((vt1.c0, rt0.c0, rt0.c2))))OR((~ (rt0.c0)))))AND(CAST(rt0.c2 AS BLOB))))OR(0.09203805659968023)))OR(((rt0.c2) BETWEEN (rt0.c0) AND (t0.c0)))))AND(rt0.c2 COLLATE BINARY)))OR(v0.c0)))OR(((rt0.c2)-(vt1.c0)))))OR(((t0.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c2 THEN t0.c0 ELSE rt0.c2 END) NOT BETWEEN (((t0.c0)>(rt0.c0))) AND (vt1.c0))) IS TRUE)  as count FROM t0, vt1, v0, rt0 ORDER BY (((((((((((((((((((rt0.c0, vt1.c0, vt1.c0))<>((vt1.c0, rt0.c0, rt0.c2))))OR((~ (rt0.c0)))))AND(CAST(rt0.c2 AS BLOB))))OR(0.09203805659968023)))OR(((rt0.c2) BETWEEN (rt0.c0) AND (t0.c0)))))AND(rt0.c2 COLLATE BINARY)))OR(v0.c0)))OR(((rt0.c2)-(vt1.c0)))))OR(((t0.c0) IS TRUE))) DESC);
SELECT COUNT(*) FROM t0, vt1, v0, rt0 WHERE (((CASE rt0.c2  WHEN rt0.c2 THEN t0.c0 ELSE rt0.c2 END) NOT BETWEEN (((t0.c0)>(rt0.c0))) AND (vt1.c0))) ORDER BY (((((((((((((((((((rt0.c0, vt1.c0, vt1.c0))<>((vt1.c0, rt0.c0, rt0.c2))))OR((~ (rt0.c0)))))AND(CAST(rt0.c2 AS BLOB))))OR(0.09203805659968023)))OR(((rt0.c2) BETWEEN (rt0.c0) AND (t0.c0)))))AND(rt0.c2 COLLATE BINARY)))OR(v0.c0)))OR(((rt0.c2)-(vt1.c0)))))OR(((t0.c0) IS TRUE))) DESC;
SELECT ALL COUNT(*) FROM v0, t0, vt1 CROSS JOIN rt0 ON CAST((rt0.c1 IN ()) AS INTEGER) WHERE (CAST(((rt0.c1) BETWEEN (rt0.c1) AND (v0.c0)) AS REAL)) ORDER BY NULL COLLATE RTRIM ASC, ((CAST(vt1.c0 AS TEXT))*((~ (t0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) BETWEEN (rt0.c1) AND (v0.c0)) AS REAL)) IS TRUE)  as count FROM v0, t0, vt1 CROSS JOIN rt0 ON CAST((rt0.c1 IN ()) AS INTEGER) ORDER BY NULL COLLATE RTRIM ASC, ((CAST(vt1.c0 AS TEXT))*((~ (t0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0, vt1 CROSS JOIN rt0 ON CAST((rt0.c1 IN ()) AS INTEGER) WHERE (CAST(((rt0.c1) BETWEEN (rt0.c1) AND (v0.c0)) AS REAL)) ORDER BY NULL COLLATE RTRIM ASC, ((CAST(vt1.c0 AS TEXT))*((~ (t0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) BETWEEN (rt0.c1) AND (v0.c0)) AS REAL)) IS TRUE)  as count FROM v0, t0, vt1 CROSS JOIN rt0 ON CAST((rt0.c1 IN ()) AS INTEGER) ORDER BY NULL COLLATE RTRIM ASC, ((CAST(vt1.c0 AS TEXT))*((~ (t0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0, vt1 CROSS JOIN rt0 ON CAST((rt0.c1 IN ()) AS INTEGER) WHERE (CAST(((rt0.c1) BETWEEN (rt0.c1) AND (v0.c0)) AS REAL)) ORDER BY NULL COLLATE RTRIM ASC, ((CAST(vt1.c0 AS TEXT))*((~ (t0.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 CROSS JOIN v0 ON CASE WHEN x'3303' THEN ((NULL)AND(v0.c0)) ELSE 1537748390 END CROSS JOIN vt1 ON ((((((((t0.c0)OR(((t0.c0)OR(-642723832)))))AND(CASE vt1.c0  WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 END)))AND(((vt1.c0)||(v0.c0)))))OR(x'')) WHERE (((((v0.c0 COLLATE BINARY)OR((((t0.c0))>((0.48232944979017345))))))OR(((((t0.c0)AND(v0.c0)))OR(vt1.c0))))) ORDER BY ((((t0.c0)*(t0.c0))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0 COLLATE BINARY)OR((((t0.c0))>((0.48232944979017345))))))OR(((((t0.c0)AND(v0.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON CASE WHEN x'3303' THEN ((NULL)AND(v0.c0)) ELSE 1537748390 END CROSS JOIN vt1 ON ((((((((t0.c0)OR(((t0.c0)OR(-642723832)))))AND(CASE vt1.c0  WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 END)))AND(((vt1.c0)||(v0.c0)))))OR(x'')) ORDER BY ((((t0.c0)*(t0.c0))) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN v0 ON CASE WHEN x'3303' THEN ((NULL)AND(v0.c0)) ELSE 1537748390 END CROSS JOIN vt1 ON ((((((((t0.c0)OR(((t0.c0)OR(-642723832)))))AND(CASE vt1.c0  WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 END)))AND(((vt1.c0)||(v0.c0)))))OR(x'')) WHERE (((((v0.c0 COLLATE BINARY)OR((((t0.c0))>((0.48232944979017345))))))OR(((((t0.c0)AND(v0.c0)))OR(vt1.c0))))) ORDER BY ((((t0.c0)*(t0.c0))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0 COLLATE BINARY)OR((((t0.c0))>((0.48232944979017345))))))OR(((((t0.c0)AND(v0.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON CASE WHEN x'3303' THEN ((NULL)AND(v0.c0)) ELSE 1537748390 END CROSS JOIN vt1 ON ((((((((t0.c0)OR(((t0.c0)OR(-642723832)))))AND(CASE vt1.c0  WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 END)))AND(((vt1.c0)||(v0.c0)))))OR(x'')) ORDER BY ((((t0.c0)*(t0.c0))) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN v0 ON CASE WHEN x'3303' THEN ((NULL)AND(v0.c0)) ELSE 1537748390 END CROSS JOIN vt1 ON ((((((((t0.c0)OR(((t0.c0)OR(-642723832)))))AND(CASE vt1.c0  WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 END)))AND(((vt1.c0)||(v0.c0)))))OR(x'')) WHERE (((((v0.c0 COLLATE BINARY)OR((((t0.c0))>((0.48232944979017345))))))OR(((((t0.c0)AND(v0.c0)))OR(vt1.c0))))) ORDER BY ((((t0.c0)*(t0.c0))) IS FALSE)  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0, v0, t0 WHERE (((rt0.c2 COLLATE RTRIM) IS TRUE)) ORDER BY (((('1142949820') BETWEEN (rt0.c1) AND (vt1.c0))) BETWEEN (CASE rt0.c1  WHEN rt0.c2 THEN v0.c0 END) AND ((NOT (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM vt1, rt0, v0, t0 ORDER BY (((('1142949820') BETWEEN (rt0.c1) AND (vt1.c0))) BETWEEN (CASE rt0.c1  WHEN rt0.c2 THEN v0.c0 END) AND ((NOT (rt0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0, v0, t0 WHERE (((rt0.c2 COLLATE RTRIM) IS TRUE)) ORDER BY (((('1142949820') BETWEEN (rt0.c1) AND (vt1.c0))) BETWEEN (CASE rt0.c1  WHEN rt0.c2 THEN v0.c0 END) AND ((NOT (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM vt1, rt0, v0, t0 ORDER BY (((('1142949820') BETWEEN (rt0.c1) AND (vt1.c0))) BETWEEN (CASE rt0.c1  WHEN rt0.c2 THEN v0.c0 END) AND ((NOT (rt0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0, v0, t0 WHERE (((rt0.c2 COLLATE RTRIM) IS TRUE)) ORDER BY (((('1142949820') BETWEEN (rt0.c1) AND (vt1.c0))) BETWEEN (CASE rt0.c1  WHEN rt0.c2 THEN v0.c0 END) AND ((NOT (rt0.c2))))  NULLS FIRST;
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c2, rt0.c0, v0.c0, rt0.c1, v0.c0)) BETWEEN ((rt0.c0, CAST(rt0.c2 AS NUMERIC), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), CAST(rt0.c2 AS BLOB), UNLIKELY('?E()'))) AND ((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END, SUBSTR(rt0.c2, rt0.c1), CASE WHEN rt0.c1 THEN '-312366572' END, (rt0.c1 IN ()), 0.5638405421833719))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c0, v0.c0, rt0.c1, v0.c0)) BETWEEN ((rt0.c0, CAST(rt0.c2 AS NUMERIC), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), CAST(rt0.c2 AS BLOB), UNLIKELY('?E()'))) AND ((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END, SUBSTR(rt0.c2, rt0.c1), CASE WHEN rt0.c1 THEN '-312366572' END, (rt0.c1 IN ()), 0.5638405421833719)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c2, rt0.c0, v0.c0, rt0.c1, v0.c0)) BETWEEN ((rt0.c0, CAST(rt0.c2 AS NUMERIC), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), CAST(rt0.c2 AS BLOB), UNLIKELY('?E()'))) AND ((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END, SUBSTR(rt0.c2, rt0.c1), CASE WHEN rt0.c1 THEN '-312366572' END, (rt0.c1 IN ()), 0.5638405421833719))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c0, v0.c0, rt0.c1, v0.c0)) BETWEEN ((rt0.c0, CAST(rt0.c2 AS NUMERIC), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), CAST(rt0.c2 AS BLOB), UNLIKELY('?E()'))) AND ((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END, SUBSTR(rt0.c2, rt0.c1), CASE WHEN rt0.c1 THEN '-312366572' END, (rt0.c1 IN ()), 0.5638405421833719)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c2, rt0.c0, v0.c0, rt0.c1, v0.c0)) BETWEEN ((rt0.c0, CAST(rt0.c2 AS NUMERIC), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), CAST(rt0.c2 AS BLOB), UNLIKELY('?E()'))) AND ((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END, SUBSTR(rt0.c2, rt0.c1), CASE WHEN rt0.c1 THEN '-312366572' END, (rt0.c1 IN ()), 0.5638405421833719))));
SELECT ALL COUNT(*) FROM t0, v0, rt0, vt1 WHERE (((((v0.c0)IS NOT(rt0.c0))) BETWEEN (((rt0.c1) NOTNULL)) AND ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)IS NOT(rt0.c0))) BETWEEN (((rt0.c1) NOTNULL)) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM t0, v0, rt0 NOT INDEXED, vt1);
SELECT ALL COUNT(*) FROM t0, v0, rt0, vt1 WHERE (((((v0.c0)IS NOT(rt0.c0))) BETWEEN (((rt0.c1) NOTNULL)) AND ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)IS NOT(rt0.c0))) BETWEEN (((rt0.c1) NOTNULL)) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM t0, v0, rt0 NOT INDEXED, vt1);
SELECT ALL COUNT(*) FROM t0, v0, rt0, vt1 WHERE (((((v0.c0)IS NOT(rt0.c0))) BETWEEN (((rt0.c1) NOTNULL)) AND ((rt0.c1 IN ()))));
SELECT ALL * FROM v0, t0, vt1 WHERE ((t0.c0 IN (((((t0.c0)AND(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN (((((t0.c0)AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0, t0, vt1);
SELECT ALL * FROM v0, t0, vt1 WHERE ((t0.c0 IN (((((t0.c0)AND(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN (((((t0.c0)AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0, t0, vt1);
SELECT ALL * FROM v0, t0, vt1 WHERE ((t0.c0 IN (((((t0.c0)AND(v0.c0)))OR(v0.c0)))));
SELECT * FROM rt0 INNER JOIN v0 ON ((rt0.c2)>=(((((((((x'')OR('\!7f㑥rbn')))AND(v0.c0)))OR(rt0.c2)))OR(rt0.c2)))) WHERE ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c1 THEN v0.c0 ELSE x'' END IN ())) ORDER BY UPPER(CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c0 THEN 0.21283764205677547 WHEN v0.c0 THEN NULL END) DESC;
SELECT SUM(count) FROM (SELECT (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c1 THEN v0.c0 ELSE x'' END IN ())) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((rt0.c2)>=(((((((((x'')OR('\!7f㑥rbn')))AND(v0.c0)))OR(rt0.c2)))OR(rt0.c2)))) ORDER BY UPPER(CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c0 THEN 0.21283764205677547 WHEN v0.c0 THEN NULL END) DESC);
SELECT * FROM rt0 INNER JOIN v0 ON ((rt0.c2)>=(((((((((x'')OR('\!7f㑥rbn')))AND(v0.c0)))OR(rt0.c2)))OR(rt0.c2)))) WHERE ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c1 THEN v0.c0 ELSE x'' END IN ())) ORDER BY UPPER(CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c0 THEN 0.21283764205677547 WHEN v0.c0 THEN NULL END) DESC;
SELECT SUM(count) FROM (SELECT (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c1 THEN v0.c0 ELSE x'' END IN ())) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((rt0.c2)>=(((((((((x'')OR('\!7f㑥rbn')))AND(v0.c0)))OR(rt0.c2)))OR(rt0.c2)))) ORDER BY UPPER(CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c0 THEN 0.21283764205677547 WHEN v0.c0 THEN NULL END) DESC);
SELECT * FROM rt0 INNER JOIN v0 ON ((rt0.c2)>=(((((((((x'')OR('\!7f㑥rbn')))AND(v0.c0)))OR(rt0.c2)))OR(rt0.c2)))) WHERE ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c1 THEN v0.c0 ELSE x'' END IN ())) ORDER BY UPPER(CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c0 THEN 0.21283764205677547 WHEN v0.c0 THEN NULL END) DESC;
SELECT COUNT(*) FROM rt0, v0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (rt0.c2);
SELECT COUNT(*) FROM vt1, t0, rt0, v0 WHERE (CAST(((rt0.c0) BETWEEN (v0.c0) AND (vt1.c0)) AS NUMERIC)) ORDER BY CAST(((t0.c0)IS(t0.c0)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) BETWEEN (v0.c0) AND (vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1, t0, rt0, v0 ORDER BY CAST(((t0.c0)IS(t0.c0)) AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0, rt0, v0 WHERE (CAST(((rt0.c0) BETWEEN (v0.c0) AND (vt1.c0)) AS NUMERIC)) ORDER BY CAST(((t0.c0)IS(t0.c0)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) BETWEEN (v0.c0) AND (vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1, t0, rt0, v0 ORDER BY CAST(((t0.c0)IS(t0.c0)) AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0, rt0, v0 WHERE (CAST(((rt0.c0) BETWEEN (v0.c0) AND (vt1.c0)) AS NUMERIC)) ORDER BY CAST(((t0.c0)IS(t0.c0)) AS REAL)  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0) NOTNULL) AS NUMERIC)) ORDER BY CAST(HEX(vt1.c0) AS REAL), ((((vt1.c0) IS FALSE))<((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))))) DESC  NULLS FIRST, ((('R-', CASE WHEN vt1.c0 THEN vt1.c0 END, (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))==(((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), NULL, NULL COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) NOTNULL) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY CAST(HEX(vt1.c0) AS REAL), ((((vt1.c0) IS FALSE))<((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))))) DESC  NULLS FIRST, ((('R-', CASE WHEN vt1.c0 THEN vt1.c0 END, (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))==(((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), NULL, NULL COLLATE BINARY))));
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0) NOTNULL) AS NUMERIC)) ORDER BY CAST(HEX(vt1.c0) AS REAL), ((((vt1.c0) IS FALSE))<((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))))) DESC  NULLS FIRST, ((('R-', CASE WHEN vt1.c0 THEN vt1.c0 END, (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))==(((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), NULL, NULL COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) NOTNULL) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY CAST(HEX(vt1.c0) AS REAL), ((((vt1.c0) IS FALSE))<((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))))) DESC  NULLS FIRST, ((('R-', CASE WHEN vt1.c0 THEN vt1.c0 END, (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))==(((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), NULL, NULL COLLATE BINARY))));
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0) NOTNULL) AS NUMERIC)) ORDER BY CAST(HEX(vt1.c0) AS REAL), ((((vt1.c0) IS FALSE))<((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))))) DESC  NULLS FIRST, ((('R-', CASE WHEN vt1.c0 THEN vt1.c0 END, (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))==(((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), NULL, NULL COLLATE BINARY)));
SELECT * FROM rt0, t0, vt1 WHERE (CASE rt0.c0  WHEN 1142949820 THEN vt1.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN 1142949820 THEN vt1.c0 END COLLATE BINARY) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT * FROM rt0, t0, vt1 WHERE (CASE rt0.c0  WHEN 1142949820 THEN vt1.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN 1142949820 THEN vt1.c0 END COLLATE BINARY) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT * FROM rt0, t0, vt1 WHERE (CASE rt0.c0  WHEN 1142949820 THEN vt1.c0 END COLLATE BINARY);
SELECT COUNT(*) FROM rt0, vt1 NOT INDEXED, v0 WHERE ((- (((rt0.c2)|(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c2)|(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1, v0);
SELECT COUNT(*) FROM rt0, vt1 NOT INDEXED, v0 WHERE ((- (((rt0.c2)|(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c2)|(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1, v0);
SELECT COUNT(*) FROM rt0, vt1 NOT INDEXED, v0 WHERE ((- (((rt0.c2)|(rt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (((LTRIM(rt0.c2)) BETWEEN (rt0.c0 COLLATE RTRIM) AND (((0xffffffffe3adaac6) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((LTRIM(rt0.c2)) BETWEEN (rt0.c0 COLLATE RTRIM) AND (((0xffffffffe3adaac6) NOTNULL)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((LTRIM(rt0.c2)) BETWEEN (rt0.c0 COLLATE RTRIM) AND (((0xffffffffe3adaac6) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((LTRIM(rt0.c2)) BETWEEN (rt0.c0 COLLATE RTRIM) AND (((0xffffffffe3adaac6) NOTNULL)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((LTRIM(rt0.c2)) BETWEEN (rt0.c0 COLLATE RTRIM) AND (((0xffffffffe3adaac6) NOTNULL))));
SELECT ALL * FROM v0, rt0, vt1 WHERE ((((rt0.c2 COLLATE RTRIM))<=(((+ (rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 COLLATE RTRIM))<=(((+ (rt0.c0)))))) IS TRUE)  as count FROM v0, rt0, vt1);
SELECT ALL * FROM v0, rt0, vt1 WHERE ((((rt0.c2 COLLATE RTRIM))<=(((+ (rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 COLLATE RTRIM))<=(((+ (rt0.c0)))))) IS TRUE)  as count FROM v0, rt0, vt1);
SELECT ALL * FROM v0, rt0, vt1 WHERE ((((rt0.c2 COLLATE RTRIM))<=(((+ (rt0.c0))))));
SELECT * FROM rt0 WHERE (((((rt0.c1)|(rt0.c0))) BETWEEN (((rt0.c2) IS FALSE)) AND (rt0.c0 COLLATE BINARY))) ORDER BY (((rt0.c1 IN ()))AND(CASE WHEN rt0.c2 THEN rt0.c0 WHEN x'' THEN rt0.c1 WHEN x'' THEN rt0.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)|(rt0.c0))) BETWEEN (((rt0.c2) IS FALSE)) AND (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1 IN ()))AND(CASE WHEN rt0.c2 THEN rt0.c0 WHEN x'' THEN rt0.c1 WHEN x'' THEN rt0.c2 END)) DESC);
SELECT * FROM rt0 WHERE (((((rt0.c1)|(rt0.c0))) BETWEEN (((rt0.c2) IS FALSE)) AND (rt0.c0 COLLATE BINARY))) ORDER BY (((rt0.c1 IN ()))AND(CASE WHEN rt0.c2 THEN rt0.c0 WHEN x'' THEN rt0.c1 WHEN x'' THEN rt0.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)|(rt0.c0))) BETWEEN (((rt0.c2) IS FALSE)) AND (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1 IN ()))AND(CASE WHEN rt0.c2 THEN rt0.c0 WHEN x'' THEN rt0.c1 WHEN x'' THEN rt0.c2 END)) DESC);
SELECT ALL * FROM vt1, t0 NOT INDEXED WHERE (((((t0.c0) BETWEEN (0x6b428b3a) AND (t0.c0)))OR(((NULL) NOTNULL)))) ORDER BY 0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (0x6b428b3a) AND (t0.c0)))OR(((NULL) NOTNULL)))) IS TRUE)  as count FROM vt1, t0 ORDER BY 0 ASC);
SELECT ALL * FROM vt1, t0 NOT INDEXED WHERE (((((t0.c0) BETWEEN (0x6b428b3a) AND (t0.c0)))OR(((NULL) NOTNULL)))) ORDER BY 0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (0x6b428b3a) AND (t0.c0)))OR(((NULL) NOTNULL)))) IS TRUE)  as count FROM vt1, t0 ORDER BY 0 ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (rt0.c0 COLLATE NOCASE)));
SELECT * FROM rt0 WHERE (',he>1pnvz') ORDER BY (TRIM(DISTINCT rt0.c0) IN (((rt0.c0) IS FALSE))) DESC  NULLS LAST, ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN ((rt0.c2 IN ())) AND (((rt0.c0)IS('0.04718694919347399')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((',he>1pnvz') IS TRUE)  as count FROM rt0 ORDER BY (TRIM(DISTINCT rt0.c0) IN (((rt0.c0) IS FALSE))) DESC  NULLS LAST, ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN ((rt0.c2 IN ())) AND (((rt0.c0)IS('0.04718694919347399')))) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (',he>1pnvz') ORDER BY (TRIM(DISTINCT rt0.c0) IN (((rt0.c0) IS FALSE))) DESC  NULLS LAST, ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN ((rt0.c2 IN ())) AND (((rt0.c0)IS('0.04718694919347399')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((',he>1pnvz') IS TRUE)  as count FROM rt0 ORDER BY (TRIM(DISTINCT rt0.c0) IN (((rt0.c0) IS FALSE))) DESC  NULLS LAST, ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN ((rt0.c2 IN ())) AND (((rt0.c0)IS('0.04718694919347399')))) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (',he>1pnvz') ORDER BY (TRIM(DISTINCT rt0.c0) IN (((rt0.c0) IS FALSE))) DESC  NULLS LAST, ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN ((rt0.c2 IN ())) AND (((rt0.c0)IS('0.04718694919347399')))) ASC  NULLS FIRST;
SELECT * FROM v0, rt0, vt1 INNER JOIN t0 ON rt0.c1 WHERE (rt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0, vt1 INNER JOIN t0 ON rt0.c1);
SELECT * FROM v0, rt0, vt1 INNER JOIN t0 ON rt0.c1 WHERE (rt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0, vt1 INNER JOIN t0 ON rt0.c1);
SELECT * FROM v0, rt0, vt1 INNER JOIN t0 ON rt0.c1 WHERE (rt0.c0 COLLATE RTRIM);
SELECT ALL * FROM vt1, t0 FULL OUTER JOIN v0 ON RTRIM(CAST(t0.c0 AS TEXT)) WHERE (CASE 0.6245491472101327  WHEN (~ (t0.c0)) THEN (- (v0.c0)) END) ORDER BY CASE WHEN ((t0.c0)<<(v0.c0)) THEN NULL END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.6245491472101327  WHEN (~ (t0.c0)) THEN (- (v0.c0)) END) IS TRUE)  as count FROM vt1, t0 FULL OUTER JOIN v0 ON RTRIM(CAST(t0.c0 AS TEXT)) ORDER BY CASE WHEN ((t0.c0)<<(v0.c0)) THEN NULL END  NULLS LAST);
SELECT ALL * FROM vt1, t0 FULL OUTER JOIN v0 ON RTRIM(CAST(t0.c0 AS TEXT)) WHERE (CASE 0.6245491472101327  WHEN (~ (t0.c0)) THEN (- (v0.c0)) END) ORDER BY CASE WHEN ((t0.c0)<<(v0.c0)) THEN NULL END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.6245491472101327  WHEN (~ (t0.c0)) THEN (- (v0.c0)) END) IS TRUE)  as count FROM vt1, t0 FULL OUTER JOIN v0 ON RTRIM(CAST(t0.c0 AS TEXT)) ORDER BY CASE WHEN ((t0.c0)<<(v0.c0)) THEN NULL END  NULLS LAST);
SELECT ALL * FROM vt1, t0 FULL OUTER JOIN v0 ON RTRIM(CAST(t0.c0 AS TEXT)) WHERE (CASE 0.6245491472101327  WHEN (~ (t0.c0)) THEN (- (v0.c0)) END) ORDER BY CASE WHEN ((t0.c0)<<(v0.c0)) THEN NULL END  NULLS LAST;
SELECT * FROM rt0, v0, t0 WHERE ((CAST(t0.c0 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(t0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM rt0, v0, t0);
SELECT * FROM rt0, v0, t0 WHERE ((CAST(t0.c0 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(t0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM rt0, v0, t0);
SELECT * FROM rt0, v0, t0 WHERE ((CAST(t0.c0 AS TEXT) IN ()));
SELECT ALL COUNT(*) FROM t0, vt1, rt0, v0 WHERE (vt1.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1, rt0, v0);
SELECT ALL COUNT(*) FROM t0, vt1, rt0, v0 WHERE (vt1.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1, rt0, v0);
SELECT ALL COUNT(*) FROM t0, vt1, rt0, v0 WHERE (vt1.c0 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t0 ON (NOT (CAST(vt1.c0 AS NUMERIC))) LEFT OUTER JOIN vt1 ON CASE (v0.c0 IN ())  WHEN 207034537 THEN (t0.c0 IN (rt0.c1)) ELSE rt0.c2 END FULL OUTER JOIN v0 ON ((CASE WHEN v0.c0 THEN rt0.c1 END) NOT BETWEEN (rt0.c0) AND (t0.c0 COLLATE RTRIM)) WHERE (rt0.c0) ORDER BY ((rt0.c2 COLLATE RTRIM)/(7.61742841E8));
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON (NOT (CAST(vt1.c0 AS NUMERIC))) LEFT OUTER JOIN vt1 ON CASE (v0.c0 IN ())  WHEN 207034537 THEN (t0.c0 IN (rt0.c1)) ELSE rt0.c2 END FULL OUTER JOIN v0 ON ((CASE WHEN v0.c0 THEN rt0.c1 END) NOT BETWEEN (rt0.c0) AND (t0.c0 COLLATE RTRIM)) ORDER BY ((rt0.c2 COLLATE RTRIM)/(7.61742841E8)));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t0 ON (NOT (CAST(vt1.c0 AS NUMERIC))) LEFT OUTER JOIN vt1 ON CASE (v0.c0 IN ())  WHEN 207034537 THEN (t0.c0 IN (rt0.c1)) ELSE rt0.c2 END FULL OUTER JOIN v0 ON ((CASE WHEN v0.c0 THEN rt0.c1 END) NOT BETWEEN (rt0.c0) AND (t0.c0 COLLATE RTRIM)) WHERE (rt0.c0) ORDER BY ((rt0.c2 COLLATE RTRIM)/(7.61742841E8));
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON (NOT (CAST(vt1.c0 AS NUMERIC))) LEFT OUTER JOIN vt1 ON CASE (v0.c0 IN ())  WHEN 207034537 THEN (t0.c0 IN (rt0.c1)) ELSE rt0.c2 END FULL OUTER JOIN v0 ON ((CASE WHEN v0.c0 THEN rt0.c1 END) NOT BETWEEN (rt0.c0) AND (t0.c0 COLLATE RTRIM)) ORDER BY ((rt0.c2 COLLATE RTRIM)/(7.61742841E8)));
SELECT ALL * FROM vt1, v0, rt0, t0 WHERE (CAST(((rt0.c0)>>(t0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)>>(t0.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, v0, rt0, t0);
SELECT ALL * FROM vt1, v0, rt0, t0 WHERE (CAST(((rt0.c0)>>(t0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)>>(t0.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, v0, rt0, t0);
SELECT ALL * FROM vt1, v0, rt0, t0 WHERE (CAST(((rt0.c0)>>(t0.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM v0, vt1, t0, rt0 WHERE (t0.c0) ORDER BY CAST(CASE WHEN t0.c0 THEN vt1.c0 ELSE rt0.c2 END AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM v0, vt1, t0, rt0 ORDER BY CAST(CASE WHEN t0.c0 THEN vt1.c0 ELSE rt0.c2 END AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt1, t0, rt0 WHERE (t0.c0) ORDER BY CAST(CASE WHEN t0.c0 THEN vt1.c0 ELSE rt0.c2 END AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM v0, vt1, t0, rt0 ORDER BY CAST(CASE WHEN t0.c0 THEN vt1.c0 ELSE rt0.c2 END AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt1, t0, rt0 WHERE (t0.c0) ORDER BY CAST(CASE WHEN t0.c0 THEN vt1.c0 ELSE rt0.c2 END AS NUMERIC)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt1 WHERE (UPPER((+ (vt1.c0)))) ORDER BY CAST(((vt1.c0)%(vt1.c0)) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER((+ (vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0)%(vt1.c0)) AS INTEGER) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (UPPER((+ (vt1.c0)))) ORDER BY CAST(((vt1.c0)%(vt1.c0)) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER((+ (vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0)%(vt1.c0)) AS INTEGER) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (UPPER((+ (vt1.c0)))) ORDER BY CAST(((vt1.c0)%(vt1.c0)) AS INTEGER) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE (LAST_INSERT_ROWID()) ORDER BY '513628849'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY '513628849'  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE (LAST_INSERT_ROWID()) ORDER BY '513628849'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY '513628849'  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE (LAST_INSERT_ROWID()) ORDER BY '513628849'  NULLS LAST;
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS NUMERIC))|((- (vt1.c0)))) RIGHT OUTER JOIN rt0 ON (((t0.c0)) BETWEEN (('')) AND (((NOT ('530093037'))))) WHERE (-2126676668) ORDER BY ((CASE t0.c0  WHEN rt0.c0 THEN rt0.c0 END) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((-2126676668) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS NUMERIC))|((- (vt1.c0)))) RIGHT OUTER JOIN rt0 ON (((t0.c0)) BETWEEN (('')) AND (((NOT ('530093037'))))) ORDER BY ((CASE t0.c0  WHEN rt0.c0 THEN rt0.c0 END) ISNULL)  NULLS LAST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS NUMERIC))|((- (vt1.c0)))) RIGHT OUTER JOIN rt0 ON (((t0.c0)) BETWEEN (('')) AND (((NOT ('530093037'))))) WHERE (-2126676668) ORDER BY ((CASE t0.c0  WHEN rt0.c0 THEN rt0.c0 END) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((-2126676668) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS NUMERIC))|((- (vt1.c0)))) RIGHT OUTER JOIN rt0 ON (((t0.c0)) BETWEEN (('')) AND (((NOT ('530093037'))))) ORDER BY ((CASE t0.c0  WHEN rt0.c0 THEN rt0.c0 END) ISNULL)  NULLS LAST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS NUMERIC))|((- (vt1.c0)))) RIGHT OUTER JOIN rt0 ON (((t0.c0)) BETWEEN (('')) AND (((NOT ('530093037'))))) WHERE (-2126676668) ORDER BY ((CASE t0.c0  WHEN rt0.c0 THEN rt0.c0 END) ISNULL)  NULLS LAST;
SELECT * FROM v0, rt0, t0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM v0, rt0, t0);
SELECT * FROM v0, rt0, t0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM v0, rt0, t0);
SELECT * FROM v0, rt0, t0 WHERE (rt0.c1);
SELECT * FROM vt1, rt0, t0 NOT INDEXED, v0 WHERE (CASE ((rt0.c0)>>(v0.c0))  WHEN (rt0.c0 IN ()) THEN (rt0.c2 IN (vt1.c0)) WHEN ((((((((rt0.c0)OR(rt0.c1)))AND(vt1.c0)))OR(v0.c0)))OR(rt0.c0)) THEN rt0.c0 WHEN NULLIF(t0.c0, vt1.c0) THEN PRINTF(rt0.c2) WHEN NULLIF(DISTINCT vt1.c0, rt0.c2) THEN (((rt0.c0, rt0.c1, t0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, rt0.c2)) AND ((v0.c0, t0.c0, rt0.c1))) WHEN ((t0.c0) BETWEEN (v0.c0) AND (t0.c0)) THEN CAST(rt0.c0 AS REAL) ELSE ((rt0.c0) NOTNULL) END) ORDER BY json_patch(SQLITE_SOURCE_ID(), (t0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0)>>(v0.c0))  WHEN (rt0.c0 IN ()) THEN (rt0.c2 IN (vt1.c0)) WHEN ((((((((rt0.c0)OR(rt0.c1)))AND(vt1.c0)))OR(v0.c0)))OR(rt0.c0)) THEN rt0.c0 WHEN NULLIF(t0.c0, vt1.c0) THEN PRINTF(rt0.c2) WHEN NULLIF(DISTINCT vt1.c0, rt0.c2) THEN (((rt0.c0, rt0.c1, t0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, rt0.c2)) AND ((v0.c0, t0.c0, rt0.c1))) WHEN ((t0.c0) BETWEEN (v0.c0) AND (t0.c0)) THEN CAST(rt0.c0 AS REAL) ELSE ((rt0.c0) NOTNULL) END) IS TRUE)  as count FROM vt1, rt0, t0, v0 ORDER BY json_patch(SQLITE_SOURCE_ID(), (t0.c0 IN ())));
SELECT * FROM vt1, rt0, t0 NOT INDEXED, v0 WHERE (CASE ((rt0.c0)>>(v0.c0))  WHEN (rt0.c0 IN ()) THEN (rt0.c2 IN (vt1.c0)) WHEN ((((((((rt0.c0)OR(rt0.c1)))AND(vt1.c0)))OR(v0.c0)))OR(rt0.c0)) THEN rt0.c0 WHEN NULLIF(t0.c0, vt1.c0) THEN PRINTF(rt0.c2) WHEN NULLIF(DISTINCT vt1.c0, rt0.c2) THEN (((rt0.c0, rt0.c1, t0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, rt0.c2)) AND ((v0.c0, t0.c0, rt0.c1))) WHEN ((t0.c0) BETWEEN (v0.c0) AND (t0.c0)) THEN CAST(rt0.c0 AS REAL) ELSE ((rt0.c0) NOTNULL) END) ORDER BY json_patch(SQLITE_SOURCE_ID(), (t0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0)>>(v0.c0))  WHEN (rt0.c0 IN ()) THEN (rt0.c2 IN (vt1.c0)) WHEN ((((((((rt0.c0)OR(rt0.c1)))AND(vt1.c0)))OR(v0.c0)))OR(rt0.c0)) THEN rt0.c0 WHEN NULLIF(t0.c0, vt1.c0) THEN PRINTF(rt0.c2) WHEN NULLIF(DISTINCT vt1.c0, rt0.c2) THEN (((rt0.c0, rt0.c1, t0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, rt0.c2)) AND ((v0.c0, t0.c0, rt0.c1))) WHEN ((t0.c0) BETWEEN (v0.c0) AND (t0.c0)) THEN CAST(rt0.c0 AS REAL) ELSE ((rt0.c0) NOTNULL) END) IS TRUE)  as count FROM vt1, rt0, t0, v0 ORDER BY json_patch(SQLITE_SOURCE_ID(), (t0.c0 IN ())));
SELECT * FROM t0, rt0 WHERE (((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0))) NOT NULL)) ORDER BY ((((((((((t0.c0)||(rt0.c1)))OR((((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((t0.c0, rt0.c1, 0.5329253939559372))))))OR(x'')))AND(((rt0.c1)IS(rt0.c1)))))OR(((rt0.c0)&(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0))) NOT NULL)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((((((((t0.c0)||(rt0.c1)))OR((((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((t0.c0, rt0.c1, 0.5329253939559372))))))OR(x'')))AND(((rt0.c1)IS(rt0.c1)))))OR(((rt0.c0)&(rt0.c2))))  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0))) NOT NULL)) ORDER BY ((((((((((t0.c0)||(rt0.c1)))OR((((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((t0.c0, rt0.c1, 0.5329253939559372))))))OR(x'')))AND(((rt0.c1)IS(rt0.c1)))))OR(((rt0.c0)&(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0))) NOT NULL)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((((((((t0.c0)||(rt0.c1)))OR((((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((t0.c0, rt0.c1, 0.5329253939559372))))))OR(x'')))AND(((rt0.c1)IS(rt0.c1)))))OR(((rt0.c0)&(rt0.c2))))  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0))) NOT NULL)) ORDER BY ((((((((((t0.c0)||(rt0.c1)))OR((((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((t0.c0, rt0.c1, 0.5329253939559372))))))OR(x'')))AND(((rt0.c1)IS(rt0.c1)))))OR(((rt0.c0)&(rt0.c2))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ ((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((+ ((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ ((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((+ ((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ ((NOT (rt0.c2)))));
SELECT * FROM rt0 CROSS JOIN t0 ON (- (rt0.c2 COLLATE RTRIM)) INNER JOIN vt1 ON '' WHERE (TYPEOF((((rt0.c0))<=(('456022780'))))) ORDER BY ((((rt0.c1)<=(rt0.c1))) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((((rt0.c0))<=(('456022780'))))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (- (rt0.c2 COLLATE RTRIM)) INNER JOIN vt1 ON '' ORDER BY ((((rt0.c1)<=(rt0.c1))) NOT NULL) ASC  NULLS FIRST);
SELECT * FROM rt0 CROSS JOIN t0 ON (- (rt0.c2 COLLATE RTRIM)) INNER JOIN vt1 ON '' WHERE (TYPEOF((((rt0.c0))<=(('456022780'))))) ORDER BY ((((rt0.c1)<=(rt0.c1))) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((((rt0.c0))<=(('456022780'))))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (- (rt0.c2 COLLATE RTRIM)) INNER JOIN vt1 ON '' ORDER BY ((((rt0.c1)<=(rt0.c1))) NOT NULL) ASC  NULLS FIRST);
SELECT * FROM rt0 CROSS JOIN t0 ON (- (rt0.c2 COLLATE RTRIM)) INNER JOIN vt1 ON '' WHERE (TYPEOF((((rt0.c0))<=(('456022780'))))) ORDER BY ((((rt0.c1)<=(rt0.c1))) NOT NULL) ASC  NULLS FIRST;
SELECT ALL * FROM v0, t0, rt0 WHERE ((((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((NULL, (+ (rt0.c2)), ((x'4fa1cd00')>(rt0.c2)))) AND ((NULL, (~ (v0.c0)), ((rt0.c1)<(v0.c0)))))) ORDER BY (((t0.c0, v0.c0, rt0.c2)) BETWEEN ((x'', (v0.c0 IN ()), ((rt0.c1) NOT NULL))) AND ((((((((((((((rt0.c0)AND(NULL)))OR(t0.c0)))OR(rt0.c0)))AND(1103465584)))OR(v0.c0)))OR(t0.c0)), v0.c0, rt0.c0 COLLATE RTRIM)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((NULL, (+ (rt0.c2)), ((x'4fa1cd00')>(rt0.c2)))) AND ((NULL, (~ (v0.c0)), ((rt0.c1)<(v0.c0)))))) IS TRUE)  as count FROM v0, t0, rt0 ORDER BY (((t0.c0, v0.c0, rt0.c2)) BETWEEN ((x'', (v0.c0 IN ()), ((rt0.c1) NOT NULL))) AND ((((((((((((((rt0.c0)AND(NULL)))OR(t0.c0)))OR(rt0.c0)))AND(1103465584)))OR(v0.c0)))OR(t0.c0)), v0.c0, rt0.c0 COLLATE RTRIM)))  NULLS FIRST);
SELECT ALL * FROM v0, t0, rt0 WHERE ((((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((NULL, (+ (rt0.c2)), ((x'4fa1cd00')>(rt0.c2)))) AND ((NULL, (~ (v0.c0)), ((rt0.c1)<(v0.c0)))))) ORDER BY (((t0.c0, v0.c0, rt0.c2)) BETWEEN ((x'', (v0.c0 IN ()), ((rt0.c1) NOT NULL))) AND ((((((((((((((rt0.c0)AND(NULL)))OR(t0.c0)))OR(rt0.c0)))AND(1103465584)))OR(v0.c0)))OR(t0.c0)), v0.c0, rt0.c0 COLLATE RTRIM)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((NULL, (+ (rt0.c2)), ((x'4fa1cd00')>(rt0.c2)))) AND ((NULL, (~ (v0.c0)), ((rt0.c1)<(v0.c0)))))) IS TRUE)  as count FROM v0, t0, rt0 ORDER BY (((t0.c0, v0.c0, rt0.c2)) BETWEEN ((x'', (v0.c0 IN ()), ((rt0.c1) NOT NULL))) AND ((((((((((((((rt0.c0)AND(NULL)))OR(t0.c0)))OR(rt0.c0)))AND(1103465584)))OR(v0.c0)))OR(t0.c0)), v0.c0, rt0.c0 COLLATE RTRIM)))  NULLS FIRST);
SELECT ALL * FROM v0, t0, rt0 WHERE ((((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((NULL, (+ (rt0.c2)), ((x'4fa1cd00')>(rt0.c2)))) AND ((NULL, (~ (v0.c0)), ((rt0.c1)<(v0.c0)))))) ORDER BY (((t0.c0, v0.c0, rt0.c2)) BETWEEN ((x'', (v0.c0 IN ()), ((rt0.c1) NOT NULL))) AND ((((((((((((((rt0.c0)AND(NULL)))OR(t0.c0)))OR(rt0.c0)))AND(1103465584)))OR(v0.c0)))OR(t0.c0)), v0.c0, rt0.c0 COLLATE RTRIM)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, v0, vt1 WHERE (json_array_length(vt1.c0) COLLATE RTRIM) ORDER BY ((((t0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(vt1.c0) COLLATE RTRIM) IS TRUE)  as count FROM t0, v0, vt1 ORDER BY ((((t0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM t0, v0, vt1 WHERE (json_array_length(vt1.c0) COLLATE RTRIM) ORDER BY ((((t0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(vt1.c0) COLLATE RTRIM) IS TRUE)  as count FROM t0, v0, vt1 ORDER BY ((((t0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM t0, v0, vt1 WHERE (json_array_length(vt1.c0) COLLATE RTRIM) ORDER BY ((((t0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL);
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (NULL) ORDER BY ((((rt0.c2) IS FALSE)) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY ((((rt0.c2) IS FALSE)) IS FALSE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (NULL) ORDER BY ((((rt0.c2) IS FALSE)) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY ((((rt0.c2) IS FALSE)) IS FALSE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (NULL) ORDER BY ((((rt0.c2) IS FALSE)) IS FALSE) ASC  NULLS FIRST;
SELECT * FROM rt0, vt1, t0, v0 WHERE ((NOT (vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1, t0, v0);
SELECT * FROM rt0, vt1, t0, v0 WHERE ((NOT (vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1, t0, v0);
SELECT * FROM rt0, vt1, t0, v0 WHERE ((NOT (vt1.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (ABS(CASE WHEN v0.c0 THEN t0.c0 END)) ORDER BY (CAST(t0.c0 AS REAL) IN (((((t0.c0)AND(v0.c0)))AND(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((ABS(CASE WHEN v0.c0 THEN t0.c0 END)) IS TRUE)  as count FROM v0, t0 ORDER BY (CAST(t0.c0 AS REAL) IN (((((t0.c0)AND(v0.c0)))AND(t0.c0)))) DESC);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (ABS(CASE WHEN v0.c0 THEN t0.c0 END)) ORDER BY (CAST(t0.c0 AS REAL) IN (((((t0.c0)AND(v0.c0)))AND(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((ABS(CASE WHEN v0.c0 THEN t0.c0 END)) IS TRUE)  as count FROM v0, t0 ORDER BY (CAST(t0.c0 AS REAL) IN (((((t0.c0)AND(v0.c0)))AND(t0.c0)))) DESC);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (ABS(CASE WHEN v0.c0 THEN t0.c0 END)) ORDER BY (CAST(t0.c0 AS REAL) IN (((((t0.c0)AND(v0.c0)))AND(t0.c0)))) DESC;
SELECT * FROM v0 WHERE ((~ (((((v0.c0)AND(v0.c0)))AND(v0.c0))))) ORDER BY (NOT (CAST(v0.c0 AS TEXT))), x'' ASC, v0.c0 COLLATE BINARY  NULLS LAST, 1.89603922E8  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((v0.c0)AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (NOT (CAST(v0.c0 AS TEXT))), x'' ASC, v0.c0 COLLATE BINARY  NULLS LAST, 1.89603922E8  NULLS LAST);
SELECT * FROM v0 WHERE ((~ (((((v0.c0)AND(v0.c0)))AND(v0.c0))))) ORDER BY (NOT (CAST(v0.c0 AS TEXT))), x'' ASC, v0.c0 COLLATE BINARY  NULLS LAST, 1.89603922E8  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((v0.c0)AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (NOT (CAST(v0.c0 AS TEXT))), x'' ASC, v0.c0 COLLATE BINARY  NULLS LAST, 1.89603922E8  NULLS LAST);
SELECT * FROM v0 WHERE ((~ (((((v0.c0)AND(v0.c0)))AND(v0.c0))))) ORDER BY (NOT (CAST(v0.c0 AS TEXT))), x'' ASC, v0.c0 COLLATE BINARY  NULLS LAST, 1.89603922E8  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt1, rt0 WHERE ((- (((rt0.c0)<=(NULL))))) ORDER BY ((((v0.c0)&(v0.c0))) NOTNULL) DESC, ((rt0.c2) IS FALSE), (((v0.c0)) BETWEEN ((((((rt0.c0)AND(rt0.c0)))OR(vt1.c0)))) AND (((rt0.c2 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c0)<=(NULL))))) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY ((((v0.c0)&(v0.c0))) NOTNULL) DESC, ((rt0.c2) IS FALSE), (((v0.c0)) BETWEEN ((((((rt0.c0)AND(rt0.c0)))OR(vt1.c0)))) AND (((rt0.c2 IN ())))) DESC);
SELECT ALL COUNT(*) FROM v0, vt1, rt0 WHERE ((- (((rt0.c0)<=(NULL))))) ORDER BY ((((v0.c0)&(v0.c0))) NOTNULL) DESC, ((rt0.c2) IS FALSE), (((v0.c0)) BETWEEN ((((((rt0.c0)AND(rt0.c0)))OR(vt1.c0)))) AND (((rt0.c2 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c0)<=(NULL))))) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY ((((v0.c0)&(v0.c0))) NOTNULL) DESC, ((rt0.c2) IS FALSE), (((v0.c0)) BETWEEN ((((((rt0.c0)AND(rt0.c0)))OR(vt1.c0)))) AND (((rt0.c2 IN ())))) DESC);
SELECT ALL COUNT(*) FROM v0, vt1, rt0 WHERE ((- (((rt0.c0)<=(NULL))))) ORDER BY ((((v0.c0)&(v0.c0))) NOTNULL) DESC, ((rt0.c2) IS FALSE), (((v0.c0)) BETWEEN ((((((rt0.c0)AND(rt0.c0)))OR(vt1.c0)))) AND (((rt0.c2 IN ())))) DESC;
SELECT COUNT(*) FROM t0, v0, rt0, vt1 WHERE ((v0.c0 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM t0, v0, rt0, vt1);
SELECT COUNT(*) FROM t0, v0, rt0, vt1 WHERE ((v0.c0 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM t0, v0, rt0, vt1);
SELECT COUNT(*) FROM t0, v0, rt0, vt1 WHERE ((v0.c0 IN ()) COLLATE NOCASE);
SELECT ALL * FROM v0 WHERE (((((LENGTH(v0.c0))AND('')))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE NULL END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((LENGTH(v0.c0))AND('')))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE NULL END COLLATE BINARY);
SELECT ALL * FROM v0 WHERE (((((LENGTH(v0.c0))AND('')))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE NULL END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((LENGTH(v0.c0))AND('')))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE NULL END COLLATE BINARY);
SELECT ALL * FROM v0 WHERE (((((LENGTH(v0.c0))AND('')))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE NULL END COLLATE BINARY;
SELECT * FROM v0 NATURAL JOIN t0 WHERE (-1112569993) ORDER BY v0.c0, ((((v0.c0)OR(t0.c0)))AND(v0.c0)) COLLATE NOCASE ASC  NULLS FIRST, ((v0.c0)-(v0.c0)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((-1112569993) IS TRUE)  as count FROM v0 NATURAL JOIN t0 ORDER BY v0.c0, ((((v0.c0)OR(t0.c0)))AND(v0.c0)) COLLATE NOCASE ASC  NULLS FIRST, ((v0.c0)-(v0.c0)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT * FROM v0 NATURAL JOIN t0 WHERE (-1112569993) ORDER BY v0.c0, ((((v0.c0)OR(t0.c0)))AND(v0.c0)) COLLATE NOCASE ASC  NULLS FIRST, ((v0.c0)-(v0.c0)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((-1112569993) IS TRUE)  as count FROM v0 NATURAL JOIN t0 ORDER BY v0.c0, ((((v0.c0)OR(t0.c0)))AND(v0.c0)) COLLATE NOCASE ASC  NULLS FIRST, ((v0.c0)-(v0.c0)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT * FROM v0 NATURAL JOIN t0 WHERE (-1112569993) ORDER BY v0.c0, ((((v0.c0)OR(t0.c0)))AND(v0.c0)) COLLATE NOCASE ASC  NULLS FIRST, ((v0.c0)-(v0.c0)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, v0 WHERE (vt1.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt1, v0 NOT INDEXED);
SELECT COUNT(*) FROM vt1, v0 WHERE (vt1.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt1, v0 NOT INDEXED);
SELECT COUNT(*) FROM vt1, v0 WHERE (vt1.c0 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0, rt0, vt1 LEFT OUTER JOIN v0 ON (((((((((rt0.c2 IN ()))OR((((v0.c0, rt0.c0, rt0.c1)) BETWEEN ((0.7566133957989845, t0.c0, t0.c0)) AND (('	\r', t0.c0, rt0.c2))))))AND(((rt0.c0)>(t0.c0)))))AND(((((v0.c0)OR(t0.c0)))AND(t0.c0)))))OR((((v0.c0))==((vt1.c0))))) WHERE ((+ (CAST(t0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(t0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0, rt0, vt1 LEFT OUTER JOIN v0 ON (((((((((rt0.c2 IN ()))OR((((v0.c0, rt0.c0, rt0.c1)) BETWEEN ((0.7566133957989845, t0.c0, t0.c0)) AND (('	\r', t0.c0, rt0.c2))))))AND(((rt0.c0)>(t0.c0)))))AND(((((v0.c0)OR(t0.c0)))AND(t0.c0)))))OR((((v0.c0))=((vt1.c0))))));
SELECT ALL COUNT(*) FROM t0, rt0, vt1 LEFT OUTER JOIN v0 ON (((((((((rt0.c2 IN ()))OR((((v0.c0, rt0.c0, rt0.c1)) BETWEEN ((0.7566133957989845, t0.c0, t0.c0)) AND (('	\r', t0.c0, rt0.c2))))))AND(((rt0.c0)>(t0.c0)))))AND(((((v0.c0)OR(t0.c0)))AND(t0.c0)))))OR((((v0.c0))==((vt1.c0))))) WHERE ((+ (CAST(t0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(t0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0, rt0, vt1 LEFT OUTER JOIN v0 ON (((((((((rt0.c2 IN ()))OR((((v0.c0, rt0.c0, rt0.c1)) BETWEEN ((0.7566133957989845, t0.c0, t0.c0)) AND (('	\r', t0.c0, rt0.c2))))))AND(((rt0.c0)>(t0.c0)))))AND(((((v0.c0)OR(t0.c0)))AND(t0.c0)))))OR((((v0.c0))=((vt1.c0))))));
SELECT ALL COUNT(*) FROM t0, rt0, vt1 LEFT OUTER JOIN v0 ON (((((((((rt0.c2 IN ()))OR((((v0.c0, rt0.c0, rt0.c1)) BETWEEN ((0.7566133957989845, t0.c0, t0.c0)) AND (('	\r', t0.c0, rt0.c2))))))AND(((rt0.c0)>(t0.c0)))))AND(((((v0.c0)OR(t0.c0)))AND(t0.c0)))))OR((((v0.c0))==((vt1.c0))))) WHERE ((+ (CAST(t0.c0 AS NUMERIC))));
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY CAST(NULL AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY CAST(NULL AS INTEGER) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY CAST(NULL AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY CAST(NULL AS INTEGER) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY CAST(NULL AS INTEGER) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, v0, vt1 WHERE ((CAST(vt1.c0 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS TEXT) IN ())) IS TRUE)  as count FROM rt0, v0, vt1);
SELECT ALL * FROM rt0, v0, vt1 WHERE ((CAST(vt1.c0 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS TEXT) IN ())) IS TRUE)  as count FROM rt0, v0, vt1);
SELECT ALL * FROM rt0, v0, vt1 WHERE ((CAST(vt1.c0 AS TEXT) IN ()));
SELECT ALL COUNT(*) FROM rt0, t0, vt1, v0 WHERE ((- (json_patch(t0.c0, 0.840984110074269)))) ORDER BY CAST(((((v0.c0)OR(rt0.c2)))AND(rt0.c1)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (json_patch(t0.c0, 0.840984110074269)))) IS TRUE)  as count FROM rt0, t0, vt1, v0 ORDER BY CAST(((((v0.c0)OR(rt0.c2)))AND(rt0.c1)) AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, vt1, v0 WHERE ((- (json_patch(t0.c0, 0.840984110074269)))) ORDER BY CAST(((((v0.c0)OR(rt0.c2)))AND(rt0.c1)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (json_patch(t0.c0, 0.840984110074269)))) IS TRUE)  as count FROM rt0, t0, vt1, v0 ORDER BY CAST(((((v0.c0)OR(rt0.c2)))AND(rt0.c1)) AS BLOB)  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (x'd5e1df02');
SELECT SUM(count) FROM (SELECT ALL ((x'd5e1df02') IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (x'd5e1df02');
SELECT SUM(count) FROM (SELECT ALL ((x'd5e1df02') IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (x'd5e1df02');
SELECT ALL * FROM rt0, v0, t0 WHERE ((((+ (rt0.c2)))>('-702214149')));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c2)))>('-702214149'))) IS TRUE)  as count FROM rt0, v0, t0);
SELECT ALL * FROM rt0, v0, t0 WHERE ((((+ (rt0.c2)))>('-702214149')));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c2)))>('-702214149'))) IS TRUE)  as count FROM rt0, v0, t0);
SELECT ALL * FROM rt0, v0, t0 WHERE ((((+ (rt0.c2)))>('-702214149')));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)<<(vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (CAST(vt1.c0 AS REAL)))) ORDER BY (+ ((('J\.L''5')-(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<<(vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1 ORDER BY (+ ((('J\.L''5')-(vt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)<<(vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (CAST(vt1.c0 AS REAL)))) ORDER BY (+ ((('J\.L''5')-(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<<(vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1 ORDER BY (+ ((('J\.L''5')-(vt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)<<(vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (CAST(vt1.c0 AS REAL)))) ORDER BY (+ ((('J\.L''5')-(vt1.c0)))) ASC;
SELECT * FROM vt1 WHERE (CASE WHEN ((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(0.6759183576028567)))AND(vt1.c0)) THEN (((vt1.c0))!=((vt1.c0))) END) ORDER BY (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE NOCASE DESC  NULLS FIRST, NULL ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(0.6759183576028567)))AND(vt1.c0)) THEN (((vt1.c0))!=((vt1.c0))) END) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE NOCASE DESC  NULLS FIRST, NULL ASC);
SELECT * FROM vt1 WHERE (CASE WHEN ((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(0.6759183576028567)))AND(vt1.c0)) THEN (((vt1.c0))!=((vt1.c0))) END) ORDER BY (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE NOCASE DESC  NULLS FIRST, NULL ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(0.6759183576028567)))AND(vt1.c0)) THEN (((vt1.c0))!=((vt1.c0))) END) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE NOCASE DESC  NULLS FIRST, NULL ASC);
SELECT * FROM vt1 WHERE (CASE WHEN ((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(0.6759183576028567)))AND(vt1.c0)) THEN (((vt1.c0))!=((vt1.c0))) END) ORDER BY (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE NOCASE DESC  NULLS FIRST, NULL ASC;
SELECT COUNT(*) FROM rt0, vt1, v0, t0 WHERE ((((rt0.c1, rt0.c1, t0.c0))==((vt1.c0, v0.c0, rt0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c1, t0.c0))==((vt1.c0, v0.c0, rt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1, v0, t0);
SELECT COUNT(*) FROM rt0, vt1, v0, t0 WHERE ((((rt0.c1, rt0.c1, t0.c0))==((vt1.c0, v0.c0, rt0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c1, t0.c0))==((vt1.c0, v0.c0, rt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1, v0, t0);
SELECT COUNT(*) FROM rt0, vt1, v0, t0 WHERE ((((rt0.c1, rt0.c1, t0.c0))==((vt1.c0, v0.c0, rt0.c0))) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON (((+ (rt0.c0))) NOT BETWEEN (((v0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0))) AND (((v0.c0)>(rt0.c2)))) CROSS JOIN vt1 ON ABS(-2.035645503E9) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (((+ (rt0.c0))) NOT BETWEEN (((v0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0))) AND (((v0.c0)>(rt0.c2)))) CROSS JOIN vt1 ON ABS(-2.035645503E9));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON (((+ (rt0.c0))) NOT BETWEEN (((v0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0))) AND (((v0.c0)>(rt0.c2)))) CROSS JOIN vt1 ON ABS(-2.035645503E9) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (((+ (rt0.c0))) NOT BETWEEN (((v0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0))) AND (((v0.c0)>(rt0.c2)))) CROSS JOIN vt1 ON ABS(-2.035645503E9));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0))>=((rt0.c1))) IN ((('252166098') NOTNULL)))) ORDER BY (rt0.c2 IN (((rt0.c1)<>(rt0.c1))))  NULLS FIRST, (+ ('')) DESC, (((((rt0.c2 IN (rt0.c2)))AND(((((rt0.c2)AND(rt0.c0)))OR(x'')))))OR(((rt0.c0)LIKE(NULL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0))>=((rt0.c1))) IN ((('252166098') NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c2 IN (((rt0.c1)!=(rt0.c1))))  NULLS FIRST, (+ ('')) DESC, (((((rt0.c2 IN (rt0.c2)))AND(((((rt0.c2)AND(rt0.c0)))OR(x'')))))OR(((rt0.c0)LIKE(NULL)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0))>=((rt0.c1))) IN ((('252166098') NOTNULL)))) ORDER BY (rt0.c2 IN (((rt0.c1)<>(rt0.c1))))  NULLS FIRST, (+ ('')) DESC, (((((rt0.c2 IN (rt0.c2)))AND(((((rt0.c2)AND(rt0.c0)))OR(x'')))))OR(((rt0.c0)LIKE(NULL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0))>=((rt0.c1))) IN ((('252166098') NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c2 IN (((rt0.c1)!=(rt0.c1))))  NULLS FIRST, (+ ('')) DESC, (((((rt0.c2 IN (rt0.c2)))AND(((((rt0.c2)AND(rt0.c0)))OR(x'')))))OR(((rt0.c0)LIKE(NULL)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0))>=((rt0.c1))) IN ((('252166098') NOTNULL)))) ORDER BY (rt0.c2 IN (((rt0.c1)<>(rt0.c1))))  NULLS FIRST, (+ ('')) DESC, (((((rt0.c2 IN (rt0.c2)))AND(((((rt0.c2)AND(rt0.c0)))OR(x'')))))OR(((rt0.c0)LIKE(NULL)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0, t0, vt1 CROSS JOIN rt0 ON ((((NULL)>>(v0.c0))) IS TRUE) WHERE (((rt0.c0 COLLATE RTRIM)IS NOT(v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE RTRIM)IS NOT(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, t0, vt1 CROSS JOIN rt0 ON ((((NULL)>>(v0.c0))) IS TRUE));
SELECT COUNT(*) FROM v0, t0, vt1 CROSS JOIN rt0 ON ((((NULL)>>(v0.c0))) IS TRUE) WHERE (((rt0.c0 COLLATE RTRIM)IS NOT(v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE RTRIM)IS NOT(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, t0, vt1 CROSS JOIN rt0 ON ((((NULL)>>(v0.c0))) IS TRUE));
SELECT COUNT(*) FROM v0, t0, vt1 CROSS JOIN rt0 ON ((((NULL)>>(v0.c0))) IS TRUE) WHERE (((rt0.c0 COLLATE RTRIM)IS NOT(v0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2 COLLATE NOCASE);
SELECT * FROM rt0, vt1, t0, v0 WHERE (CAST(((rt0.c1) BETWEEN (v0.c0) AND (rt0.c1)) AS BLOB)) ORDER BY (((NULL IN (v0.c0))) NOT BETWEEN (((((((((t0.c0)AND(rt0.c2)))OR(rt0.c0)))OR(v0.c0)))OR(vt1.c0))) AND (((v0.c0)LIKE(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) BETWEEN (v0.c0) AND (rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0, vt1, t0, v0 ORDER BY (((NULL IN (v0.c0))) NOT BETWEEN (((((((((t0.c0)AND(rt0.c2)))OR(rt0.c0)))OR(v0.c0)))OR(vt1.c0))) AND (((v0.c0)LIKE(rt0.c0))))  NULLS FIRST);
SELECT * FROM rt0, vt1, t0, v0 WHERE (CAST(((rt0.c1) BETWEEN (v0.c0) AND (rt0.c1)) AS BLOB)) ORDER BY (((NULL IN (v0.c0))) NOT BETWEEN (((((((((t0.c0)AND(rt0.c2)))OR(rt0.c0)))OR(v0.c0)))OR(vt1.c0))) AND (((v0.c0)LIKE(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) BETWEEN (v0.c0) AND (rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0, vt1, t0, v0 ORDER BY (((NULL IN (v0.c0))) NOT BETWEEN (((((((((t0.c0)AND(rt0.c2)))OR(rt0.c0)))OR(v0.c0)))OR(vt1.c0))) AND (((v0.c0)LIKE(rt0.c0))))  NULLS FIRST);
SELECT * FROM rt0, vt1, t0, v0 WHERE (CAST(((rt0.c1) BETWEEN (v0.c0) AND (rt0.c1)) AS BLOB)) ORDER BY (((NULL IN (v0.c0))) NOT BETWEEN (((((((((t0.c0)AND(rt0.c2)))OR(rt0.c0)))OR(v0.c0)))OR(vt1.c0))) AND (((v0.c0)LIKE(rt0.c0))))  NULLS FIRST;
SELECT ALL * FROM v0, t0, rt0, vt1 WHERE (((v0.c0 COLLATE BINARY) ISNULL)) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM v0, t0, rt0, vt1 ORDER BY NULL DESC);
SELECT ALL * FROM v0, t0, rt0, vt1 WHERE (((v0.c0 COLLATE BINARY) ISNULL)) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM v0, t0, rt0, vt1 ORDER BY NULL DESC);
SELECT ALL * FROM v0, t0, rt0, vt1 WHERE (((v0.c0 COLLATE BINARY) ISNULL)) ORDER BY NULL DESC;
SELECT ALL COUNT(*) FROM t0, rt0, vt1, v0 WHERE (((((rt0.c1)OR(t0.c0)))AND(v0.c0)) COLLATE RTRIM COLLATE RTRIM) ORDER BY (((rt0.c2) ISNULL) IN (rt0.c1, ((rt0.c1) NOT NULL))) ASC  NULLS LAST, ((+ (rt0.c2)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)OR(t0.c0)))AND(v0.c0)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0, vt1, v0 ORDER BY (((rt0.c2) ISNULL) IN (rt0.c1, ((rt0.c1) NOT NULL))) ASC  NULLS LAST, ((+ (rt0.c2)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, vt1, v0 WHERE (((((rt0.c1)OR(t0.c0)))AND(v0.c0)) COLLATE RTRIM COLLATE RTRIM) ORDER BY (((rt0.c2) ISNULL) IN (rt0.c1, ((rt0.c1) NOT NULL))) ASC  NULLS LAST, ((+ (rt0.c2)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)OR(t0.c0)))AND(v0.c0)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0, vt1, v0 ORDER BY (((rt0.c2) ISNULL) IN (rt0.c1, ((rt0.c1) NOT NULL))) ASC  NULLS LAST, ((+ (rt0.c2)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, vt1, v0 WHERE (((((rt0.c1)OR(t0.c0)))AND(v0.c0)) COLLATE RTRIM COLLATE RTRIM) ORDER BY (((rt0.c2) ISNULL) IN (rt0.c1, ((rt0.c1) NOT NULL))) ASC  NULLS LAST, ((+ (rt0.c2)) IN ())  NULLS FIRST;
SELECT * FROM vt1, rt0, t0, v0 WHERE (TRIM(DISTINCT 0.05903109628501679)) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT 0.05903109628501679)) IS TRUE)  as count FROM vt1, rt0, t0, v0 ORDER BY v0.c0 ASC);
SELECT * FROM vt1, rt0, t0, v0 WHERE (TRIM(DISTINCT 0.05903109628501679)) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT 0.05903109628501679)) IS TRUE)  as count FROM vt1, rt0, t0, v0 ORDER BY v0.c0 ASC);
SELECT * FROM vt1, rt0, t0, v0 WHERE (TRIM(DISTINCT 0.05903109628501679)) ORDER BY v0.c0 ASC;
SELECT ALL * FROM v0 FULL OUTER JOIN vt1 ON ((t0.c0 COLLATE RTRIM)OR(((x'') BETWEEN (t0.c0) AND (v0.c0)))) LEFT OUTER JOIN t0 ON CAST(((v0.c0)&(vt1.c0)) AS BLOB) WHERE (((t0.c0)OR(((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY ((((vt1.c0) IS FALSE)) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c0)OR(((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt1 ON ((t0.c0 COLLATE RTRIM)OR(((x'') BETWEEN (t0.c0) AND (v0.c0)))) LEFT OUTER JOIN t0 ON CAST(((v0.c0)&(vt1.c0)) AS BLOB) ORDER BY ((((vt1.c0) IS FALSE)) NOTNULL) ASC  NULLS LAST);
SELECT ALL * FROM v0 FULL OUTER JOIN vt1 ON ((t0.c0 COLLATE RTRIM)OR(((x'') BETWEEN (t0.c0) AND (v0.c0)))) LEFT OUTER JOIN t0 ON CAST(((v0.c0)&(vt1.c0)) AS BLOB) WHERE (((t0.c0)OR(((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY ((((vt1.c0) IS FALSE)) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c0)OR(((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt1 ON ((t0.c0 COLLATE RTRIM)OR(((x'') BETWEEN (t0.c0) AND (v0.c0)))) LEFT OUTER JOIN t0 ON CAST(((v0.c0)&(vt1.c0)) AS BLOB) ORDER BY ((((vt1.c0) IS FALSE)) NOTNULL) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY CAST(HEX(vt1.c0) AS TEXT), CASE WHEN vt1.c0 THEN x'' END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY CAST(HEX(vt1.c0) AS TEXT), CASE WHEN vt1.c0 THEN x'' END  NULLS FIRST);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY CAST(HEX(vt1.c0) AS TEXT), CASE WHEN vt1.c0 THEN x'' END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY CAST(HEX(vt1.c0) AS TEXT), CASE WHEN vt1.c0 THEN x'' END  NULLS FIRST);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY CAST(HEX(vt1.c0) AS TEXT), CASE WHEN vt1.c0 THEN x'' END  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt1, rt0, v0 WHERE (((t0.c0)>>(((((((((0.33504893656584855)OR(rt0.c1)))OR(0x43eba7ed)))OR(rt0.c2)))OR(rt0.c0))))) ORDER BY CASE ((t0.c0) NOT BETWEEN (rt0.c2) AND (x'2f60'))  WHEN ((t0.c0)<=(rt0.c0)) THEN ((t0.c0)>>(rt0.c0)) WHEN ((t0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) THEN rt0.c0 COLLATE NOCASE WHEN ((t0.c0) IS FALSE) THEN ((((t0.c0)AND(rt0.c2)))AND(rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((t0.c0)>>(((((((((0.33504893656584855)OR(rt0.c1)))OR(0X43eba7ed)))OR(rt0.c2)))OR(rt0.c0))))) IS TRUE)  as count FROM t0, vt1, rt0, v0 ORDER BY CASE ((t0.c0) NOT BETWEEN (rt0.c2) AND (x'2f60'))  WHEN ((t0.c0)<=(rt0.c0)) THEN ((t0.c0)>>(rt0.c0)) WHEN ((t0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) THEN rt0.c0 COLLATE NOCASE WHEN ((t0.c0) IS FALSE) THEN ((((t0.c0)AND(rt0.c2)))AND(rt0.c0)) END);
SELECT COUNT(*) FROM t0, vt1, rt0, v0 WHERE (((t0.c0)>>(((((((((0.33504893656584855)OR(rt0.c1)))OR(0x43eba7ed)))OR(rt0.c2)))OR(rt0.c0))))) ORDER BY CASE ((t0.c0) NOT BETWEEN (rt0.c2) AND (x'2f60'))  WHEN ((t0.c0)<=(rt0.c0)) THEN ((t0.c0)>>(rt0.c0)) WHEN ((t0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) THEN rt0.c0 COLLATE NOCASE WHEN ((t0.c0) IS FALSE) THEN ((((t0.c0)AND(rt0.c2)))AND(rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((t0.c0)>>(((((((((0.33504893656584855)OR(rt0.c1)))OR(0X43eba7ed)))OR(rt0.c2)))OR(rt0.c0))))) IS TRUE)  as count FROM t0, vt1, rt0, v0 ORDER BY CASE ((t0.c0) NOT BETWEEN (rt0.c2) AND (x'2f60'))  WHEN ((t0.c0)<=(rt0.c0)) THEN ((t0.c0)>>(rt0.c0)) WHEN ((t0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) THEN rt0.c0 COLLATE NOCASE WHEN ((t0.c0) IS FALSE) THEN ((((t0.c0)AND(rt0.c2)))AND(rt0.c0)) END);
SELECT COUNT(*) FROM t0, vt1, rt0, v0 WHERE (((t0.c0)>>(((((((((0.33504893656584855)OR(rt0.c1)))OR(0x43eba7ed)))OR(rt0.c2)))OR(rt0.c0))))) ORDER BY CASE ((t0.c0) NOT BETWEEN (rt0.c2) AND (x'2f60'))  WHEN ((t0.c0)<=(rt0.c0)) THEN ((t0.c0)>>(rt0.c0)) WHEN ((t0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) THEN rt0.c0 COLLATE NOCASE WHEN ((t0.c0) IS FALSE) THEN ((((t0.c0)AND(rt0.c2)))AND(rt0.c0)) END;
SELECT ALL COUNT(*) FROM vt1, t0, v0, rt0 WHERE (((((v0.c0)|(v0.c0)))OR(((rt0.c1)<=(vt1.c0))))) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)|(v0.c0)))OR(((rt0.c1)<=(vt1.c0))))) IS TRUE)  as count FROM vt1, t0, v0, rt0 ORDER BY rt0.c1  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0, v0, rt0 WHERE (((((v0.c0)|(v0.c0)))OR(((rt0.c1)<=(vt1.c0))))) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)|(v0.c0)))OR(((rt0.c1)<=(vt1.c0))))) IS TRUE)  as count FROM vt1, t0, v0, rt0 ORDER BY rt0.c1  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0, v0, rt0 WHERE (((((v0.c0)|(v0.c0)))OR(((rt0.c1)<=(vt1.c0))))) ORDER BY rt0.c1  NULLS FIRST;
SELECT * FROM rt0, t0, vt1 WHERE ((t0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT * FROM rt0, t0, vt1 WHERE ((t0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT * FROM rt0, t0, vt1 WHERE ((t0.c0 COLLATE NOCASE IN ()));
SELECT ALL * FROM vt1, rt0 WHERE (CAST(CASE WHEN rt0.c2 THEN rt0.c0 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c2 THEN rt0.c0 END AS NUMERIC)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (CAST(CASE WHEN rt0.c2 THEN rt0.c0 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c2 THEN rt0.c0 END AS NUMERIC)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (CAST(CASE WHEN rt0.c2 THEN rt0.c0 END AS NUMERIC));
SELECT * FROM vt1 NOT INDEXED WHERE (vt1.c0) ORDER BY 0.48297816611514544;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY 0.48297816611514544);
SELECT * FROM vt1 NOT INDEXED WHERE (vt1.c0) ORDER BY 0.48297816611514544;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY 0.48297816611514544);
SELECT * FROM vt1 NOT INDEXED WHERE (vt1.c0) ORDER BY 0.48297816611514544;
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN ((v0.c0)==(v0.c0)) THEN ((v0.c0)IS NOT(v0.c0)) ELSE ((v0.c0)LIKE(v0.c0)) END) ORDER BY ((+ (v0.c0)) IN ()) DESC, COALESCE(DISTINCT ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), (NOT (v0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0)=(v0.c0)) THEN ((v0.c0)IS NOT(v0.c0)) ELSE ((v0.c0)LIKE(v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY ((+ (v0.c0)) IN ()) DESC, COALESCE(DISTINCT ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), (NOT (v0.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN ((v0.c0)==(v0.c0)) THEN ((v0.c0)IS NOT(v0.c0)) ELSE ((v0.c0)LIKE(v0.c0)) END) ORDER BY ((+ (v0.c0)) IN ()) DESC, COALESCE(DISTINCT ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), (NOT (v0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0)=(v0.c0)) THEN ((v0.c0)IS NOT(v0.c0)) ELSE ((v0.c0)LIKE(v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY ((+ (v0.c0)) IN ()) DESC, COALESCE(DISTINCT ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), (NOT (v0.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN ((v0.c0)==(v0.c0)) THEN ((v0.c0)IS NOT(v0.c0)) ELSE ((v0.c0)LIKE(v0.c0)) END) ORDER BY ((+ (v0.c0)) IN ()) DESC, COALESCE(DISTINCT ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), (NOT (v0.c0)))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE BINARY) BETWEEN (((rt0.c1)<=(rt0.c0))) AND (((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))OR('')))OR(0Xffffffff8b92d3aa))))) ORDER BY rt0.c1 ASC, ((rt0.c0 COLLATE RTRIM) IS TRUE) ASC, (- (CAST(rt0.c2 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE BINARY) BETWEEN (((rt0.c1)<=(rt0.c0))) AND (((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))OR('')))OR(0Xffffffff8b92d3aa))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC, ((rt0.c0 COLLATE RTRIM) IS TRUE) ASC, (- (CAST(rt0.c2 AS NUMERIC)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE BINARY) BETWEEN (((rt0.c1)<=(rt0.c0))) AND (((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))OR('')))OR(0Xffffffff8b92d3aa))))) ORDER BY rt0.c1 ASC, ((rt0.c0 COLLATE RTRIM) IS TRUE) ASC, (- (CAST(rt0.c2 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE BINARY) BETWEEN (((rt0.c1)<=(rt0.c0))) AND (((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))OR('')))OR(0Xffffffff8b92d3aa))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC, ((rt0.c0 COLLATE RTRIM) IS TRUE) ASC, (- (CAST(rt0.c2 AS NUMERIC)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE BINARY) BETWEEN (((rt0.c1)<=(rt0.c0))) AND (((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))OR('')))OR(0Xffffffff8b92d3aa))))) ORDER BY rt0.c1 ASC, ((rt0.c0 COLLATE RTRIM) IS TRUE) ASC, (- (CAST(rt0.c2 AS NUMERIC)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt0, t0, vt1 WHERE (CAST(rt0.c0 COLLATE BINARY AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM v0, rt0, t0, vt1);
SELECT ALL COUNT(*) FROM v0, rt0, t0, vt1 WHERE (CAST(rt0.c0 COLLATE BINARY AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM v0, rt0, t0, vt1);
SELECT ALL COUNT(*) FROM v0, rt0, t0, vt1 WHERE (CAST(rt0.c0 COLLATE BINARY AS INTEGER));
SELECT COUNT(*) FROM vt1, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (NULL);
SELECT COUNT(*) FROM v0 WHERE (CAST('Y//gkTgK	' AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST('Y//gkTgK	' AS TEXT)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST('Y//gkTgK	' AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST('Y//gkTgK	' AS TEXT)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST('Y//gkTgK	' AS TEXT));
SELECT ALL COUNT(*) FROM t0, rt0, v0 WHERE (((v0.c0 IN (rt0.c1, rt0.c2)) IN (((v0.c0)IS NOT(-2121697167)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 IN (rt0.c1, rt0.c2)) IN (((v0.c0)IS NOT(-2121697167))))) IS TRUE)  as count FROM t0, rt0, v0);
SELECT ALL COUNT(*) FROM t0, rt0, v0 WHERE (((v0.c0 IN (rt0.c1, rt0.c2)) IN (((v0.c0)IS NOT(-2121697167)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 IN (rt0.c1, rt0.c2)) IN (((v0.c0)IS NOT(-2121697167))))) IS TRUE)  as count FROM t0, rt0, v0);
SELECT ALL COUNT(*) FROM t0, rt0, v0 WHERE (((v0.c0 IN (rt0.c1, rt0.c2)) IN (((v0.c0)IS NOT(-2121697167)))));
SELECT ALL COUNT(*) FROM t0, rt0, v0 WHERE (((rt0.c2)AND((((t0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)AND((((t0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) IS TRUE)  as count FROM t0, rt0, v0 ORDER BY rt0.c1);
SELECT ALL COUNT(*) FROM t0, rt0, v0 WHERE (((rt0.c2)AND((((t0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)AND((((t0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) IS TRUE)  as count FROM t0, rt0, v0 ORDER BY rt0.c1);
SELECT ALL COUNT(*) FROM t0, rt0, v0 WHERE (((rt0.c2)AND((((t0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) ORDER BY rt0.c1;
SELECT COUNT(*) FROM v0 WHERE (CASE v0.c0 COLLATE NOCASE  WHEN ((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)) THEN (('1093495787') BETWEEN (v0.c0) AND (v0.c0)) ELSE ROUND(v0.c0, v0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE v0.c0 COLLATE NOCASE  WHEN ((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)) THEN (('1093495787') BETWEEN (v0.c0) AND (v0.c0)) ELSE ROUND(v0.c0, v0.c0) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE v0.c0 COLLATE NOCASE  WHEN ((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)) THEN (('1093495787') BETWEEN (v0.c0) AND (v0.c0)) ELSE ROUND(v0.c0, v0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE v0.c0 COLLATE NOCASE  WHEN ((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)) THEN (('1093495787') BETWEEN (v0.c0) AND (v0.c0)) ELSE ROUND(v0.c0, v0.c0) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE v0.c0 COLLATE NOCASE  WHEN ((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)) THEN (('1093495787') BETWEEN (v0.c0) AND (v0.c0)) ELSE ROUND(v0.c0, v0.c0) END);
SELECT ALL COUNT(*) FROM v0, rt0, vt1 WHERE (json_object(((vt1.c0)|(rt0.c0)), (((rt0.c2)) NOT BETWEEN ((x'fefd')) AND ((v0.c0))))) ORDER BY (- (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((json_object(((vt1.c0)|(rt0.c0)), (((rt0.c2)) NOT BETWEEN ((x'fefd')) AND ((v0.c0))))) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY (- (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))) DESC);
SELECT ALL COUNT(*) FROM v0, rt0, vt1 WHERE (json_object(((vt1.c0)|(rt0.c0)), (((rt0.c2)) NOT BETWEEN ((x'fefd')) AND ((v0.c0))))) ORDER BY (- (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((json_object(((vt1.c0)|(rt0.c0)), (((rt0.c2)) NOT BETWEEN ((x'fefd')) AND ((v0.c0))))) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY (- (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))) DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (rt0.c2);
SELECT ALL * FROM vt1, v0 LEFT OUTER JOIN rt0 ON ((((UNLIKELY(DISTINCT vt1.c0))AND((rt0.c2 IN (v0.c0)))))AND(UPPER(DISTINCT rt0.c2))) CROSS JOIN t0 ON ((((((((v0.c0 COLLATE BINARY)AND(((rt0.c1) BETWEEN (t0.c0) AND (rt0.c1)))))AND(v0.c0 COLLATE RTRIM)))OR(((vt1.c0)GLOB(t0.c0)))))AND(0.11909230101152879)) WHERE (((((((((((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))AND(((((((((vt1.c0)OR(v0.c0)))AND(vt1.c0)))OR(t0.c0)))AND(rt0.c2)))))AND((((t0.c0, t0.c0, vt1.c0))<((t0.c0, rt0.c0, vt1.c0))))))OR(CAST(rt0.c0 AS NUMERIC))))OR(CAST(v0.c0 AS REAL)))) ORDER BY ((IFNULL(DISTINCT rt0.c2, rt0.c2)) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))AND(((((((((vt1.c0)OR(v0.c0)))AND(vt1.c0)))OR(t0.c0)))AND(rt0.c2)))))AND((((t0.c0, t0.c0, vt1.c0))<((t0.c0, rt0.c0, vt1.c0))))))OR(CAST(rt0.c0 AS NUMERIC))))OR(CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM vt1, v0 LEFT OUTER JOIN rt0 ON ((((UNLIKELY(DISTINCT vt1.c0))AND((rt0.c2 IN (v0.c0)))))AND(UPPER(DISTINCT rt0.c2))) CROSS JOIN t0 ON ((((((((v0.c0 COLLATE BINARY)AND(((rt0.c1) BETWEEN (t0.c0) AND (rt0.c1)))))AND(v0.c0 COLLATE RTRIM)))OR(((vt1.c0)GLOB(t0.c0)))))AND(0.11909230101152879)) ORDER BY ((IFNULL(DISTINCT rt0.c2, rt0.c2)) NOTNULL) DESC  NULLS LAST);
SELECT ALL * FROM vt1, v0 LEFT OUTER JOIN rt0 ON ((((UNLIKELY(DISTINCT vt1.c0))AND((rt0.c2 IN (v0.c0)))))AND(UPPER(DISTINCT rt0.c2))) CROSS JOIN t0 ON ((((((((v0.c0 COLLATE BINARY)AND(((rt0.c1) BETWEEN (t0.c0) AND (rt0.c1)))))AND(v0.c0 COLLATE RTRIM)))OR(((vt1.c0)GLOB(t0.c0)))))AND(0.11909230101152879)) WHERE (((((((((((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))AND(((((((((vt1.c0)OR(v0.c0)))AND(vt1.c0)))OR(t0.c0)))AND(rt0.c2)))))AND((((t0.c0, t0.c0, vt1.c0))<((t0.c0, rt0.c0, vt1.c0))))))OR(CAST(rt0.c0 AS NUMERIC))))OR(CAST(v0.c0 AS REAL)))) ORDER BY ((IFNULL(DISTINCT rt0.c2, rt0.c2)) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))AND(((((((((vt1.c0)OR(v0.c0)))AND(vt1.c0)))OR(t0.c0)))AND(rt0.c2)))))AND((((t0.c0, t0.c0, vt1.c0))<((t0.c0, rt0.c0, vt1.c0))))))OR(CAST(rt0.c0 AS NUMERIC))))OR(CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM vt1, v0 LEFT OUTER JOIN rt0 ON ((((UNLIKELY(DISTINCT vt1.c0))AND((rt0.c2 IN (v0.c0)))))AND(UPPER(DISTINCT rt0.c2))) CROSS JOIN t0 ON ((((((((v0.c0 COLLATE BINARY)AND(((rt0.c1) BETWEEN (t0.c0) AND (rt0.c1)))))AND(v0.c0 COLLATE RTRIM)))OR(((vt1.c0)GLOB(t0.c0)))))AND(0.11909230101152879)) ORDER BY ((IFNULL(DISTINCT rt0.c2, rt0.c2)) NOTNULL) DESC  NULLS LAST);
SELECT ALL * FROM vt1, v0 LEFT OUTER JOIN rt0 ON ((((UNLIKELY(DISTINCT vt1.c0))AND((rt0.c2 IN (v0.c0)))))AND(UPPER(DISTINCT rt0.c2))) CROSS JOIN t0 ON ((((((((v0.c0 COLLATE BINARY)AND(((rt0.c1) BETWEEN (t0.c0) AND (rt0.c1)))))AND(v0.c0 COLLATE RTRIM)))OR(((vt1.c0)GLOB(t0.c0)))))AND(0.11909230101152879)) WHERE (((((((((((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))AND(((((((((vt1.c0)OR(v0.c0)))AND(vt1.c0)))OR(t0.c0)))AND(rt0.c2)))))AND((((t0.c0, t0.c0, vt1.c0))<((t0.c0, rt0.c0, vt1.c0))))))OR(CAST(rt0.c0 AS NUMERIC))))OR(CAST(v0.c0 AS REAL)))) ORDER BY ((IFNULL(DISTINCT rt0.c2, rt0.c2)) NOTNULL) DESC  NULLS LAST;
SELECT * FROM t0, vt1 WHERE ((((HEX(vt1.c0)))>((((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))))) ORDER BY (((((vt1.c0, vt1.c0, t0.c0, vt1.c0, t0.c0))!=((t0.c0, t0.c0, vt1.c0, vt1.c0, t0.c0))))=(((t0.c0) IS FALSE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((HEX(vt1.c0)))>((((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM t0, vt1 ORDER BY (((((vt1.c0, vt1.c0, t0.c0, vt1.c0, t0.c0))<>((t0.c0, t0.c0, vt1.c0, vt1.c0, t0.c0))))=(((t0.c0) IS FALSE))) ASC  NULLS LAST);
SELECT * FROM t0, vt1 WHERE ((((HEX(vt1.c0)))>((((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))))) ORDER BY (((((vt1.c0, vt1.c0, t0.c0, vt1.c0, t0.c0))!=((t0.c0, t0.c0, vt1.c0, vt1.c0, t0.c0))))=(((t0.c0) IS FALSE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((HEX(vt1.c0)))>((((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM t0, vt1 ORDER BY (((((vt1.c0, vt1.c0, t0.c0, vt1.c0, t0.c0))<>((t0.c0, t0.c0, vt1.c0, vt1.c0, t0.c0))))=(((t0.c0) IS FALSE))) ASC  NULLS LAST);
SELECT * FROM t0, vt1 WHERE ((((HEX(vt1.c0)))>((((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))))) ORDER BY (((((vt1.c0, vt1.c0, t0.c0, vt1.c0, t0.c0))!=((t0.c0, t0.c0, vt1.c0, vt1.c0, t0.c0))))=(((t0.c0) IS FALSE))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE (((rt0.c2) ISNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE (((rt0.c2) ISNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE (((rt0.c2) ISNULL) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, 0.46979255655568175)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN ((vt1.c0)%(vt1.c0)) WHEN ((vt1.c0)AND(vt1.c0)) THEN CAST(vt1.c0 AS TEXT) WHEN CAST(vt1.c0 AS BLOB) THEN CAST(vt1.c0 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, 0.46979255655568175)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN ((vt1.c0)%(vt1.c0)) WHEN ((vt1.c0)AND(vt1.c0)) THEN CAST(vt1.c0 AS TEXT) WHEN CAST(vt1.c0 AS BLOB) THEN CAST(vt1.c0 AS INTEGER) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, 0.46979255655568175)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN ((vt1.c0)%(vt1.c0)) WHEN ((vt1.c0)AND(vt1.c0)) THEN CAST(vt1.c0 AS TEXT) WHEN CAST(vt1.c0 AS BLOB) THEN CAST(vt1.c0 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, 0.46979255655568175)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN ((vt1.c0)%(vt1.c0)) WHEN ((vt1.c0)AND(vt1.c0)) THEN CAST(vt1.c0 AS TEXT) WHEN CAST(vt1.c0 AS BLOB) THEN CAST(vt1.c0 AS INTEGER) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, 0.46979255655568175)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN ((vt1.c0)%(vt1.c0)) WHEN ((vt1.c0)AND(vt1.c0)) THEN CAST(vt1.c0 AS TEXT) WHEN CAST(vt1.c0 AS BLOB) THEN CAST(vt1.c0 AS INTEGER) END);
SELECT * FROM t0, rt0, v0, vt1 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM t0, rt0, v0, vt1);
SELECT * FROM t0, rt0, v0, vt1 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM t0, rt0, v0, vt1);
SELECT * FROM t0, rt0, v0, vt1 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (NULL) ORDER BY v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt1 ORDER BY v0.c0 DESC);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (NULL) ORDER BY v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt1 ORDER BY v0.c0 DESC);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (NULL) ORDER BY v0.c0 DESC;
SELECT * FROM t0, vt1, v0 WHERE (t0.c0) ORDER BY 'Dc2ZZ';
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, vt1, v0 ORDER BY 'Dc2ZZ');
SELECT * FROM t0, vt1, v0 WHERE (t0.c0) ORDER BY 'Dc2ZZ';
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, vt1, v0 ORDER BY 'Dc2ZZ');
SELECT * FROM t0, vt1, v0 WHERE (t0.c0) ORDER BY 'Dc2ZZ';
SELECT COUNT(*) FROM v0, vt1, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM v0, vt1, t0);
SELECT COUNT(*) FROM v0, vt1, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM v0, vt1, t0);
SELECT COUNT(*) FROM v0, vt1, t0 WHERE (t0.c0);
SELECT * FROM v0, rt0, t0, vt1 WHERE (((rt0.c2)<=((rt0.c2 IN ())))) ORDER BY (rt0.c1 IN ((rt0.c0 IN ()), rt0.c2))  NULLS LAST, ((rt0.c0 COLLATE BINARY) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)<=((rt0.c2 IN ())))) IS TRUE)  as count FROM v0, rt0, t0, vt1 ORDER BY (rt0.c1 IN ((rt0.c0 IN ()), rt0.c2))  NULLS LAST, ((rt0.c0 COLLATE BINARY) IS FALSE));
SELECT * FROM v0, rt0, t0, vt1 WHERE (((rt0.c2)<=((rt0.c2 IN ())))) ORDER BY (rt0.c1 IN ((rt0.c0 IN ()), rt0.c2))  NULLS LAST, ((rt0.c0 COLLATE BINARY) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)<=((rt0.c2 IN ())))) IS TRUE)  as count FROM v0, rt0, t0, vt1 ORDER BY (rt0.c1 IN ((rt0.c0 IN ()), rt0.c2))  NULLS LAST, ((rt0.c0 COLLATE BINARY) IS FALSE));
SELECT * FROM v0, rt0, t0, vt1 WHERE (((rt0.c2)<=((rt0.c2 IN ())))) ORDER BY (rt0.c1 IN ((rt0.c0 IN ()), rt0.c2))  NULLS LAST, ((rt0.c0 COLLATE BINARY) IS FALSE);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (((((CASE WHEN NULL THEN vt1.c0 ELSE vt1.c0 END)AND(v0.c0)))AND(((v0.c0) NOTNULL)))) ORDER BY ((((((((v0.c0 COLLATE NOCASE)AND(((v0.c0)GLOB(v0.c0)))))OR(((v0.c0)||(vt1.c0)))))OR((v0.c0 IN ()))))OR(((vt1.c0)GLOB(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN NULL THEN vt1.c0 ELSE vt1.c0 END)AND(v0.c0)))AND(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM vt1, v0 ORDER BY ((((((((v0.c0 COLLATE NOCASE)AND(((v0.c0)GLOB(v0.c0)))))OR(((v0.c0)||(vt1.c0)))))OR((v0.c0 IN ()))))OR(((vt1.c0)GLOB(v0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (((((CASE WHEN NULL THEN vt1.c0 ELSE vt1.c0 END)AND(v0.c0)))AND(((v0.c0) NOTNULL)))) ORDER BY ((((((((v0.c0 COLLATE NOCASE)AND(((v0.c0)GLOB(v0.c0)))))OR(((v0.c0)||(vt1.c0)))))OR((v0.c0 IN ()))))OR(((vt1.c0)GLOB(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN NULL THEN vt1.c0 ELSE vt1.c0 END)AND(v0.c0)))AND(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM vt1, v0 ORDER BY ((((((((v0.c0 COLLATE NOCASE)AND(((v0.c0)GLOB(v0.c0)))))OR(((v0.c0)||(vt1.c0)))))OR((v0.c0 IN ()))))OR(((vt1.c0)GLOB(v0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (((((CASE WHEN NULL THEN vt1.c0 ELSE vt1.c0 END)AND(v0.c0)))AND(((v0.c0) NOTNULL)))) ORDER BY ((((((((v0.c0 COLLATE NOCASE)AND(((v0.c0)GLOB(v0.c0)))))OR(((v0.c0)||(vt1.c0)))))OR((v0.c0 IN ()))))OR(((vt1.c0)GLOB(v0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM vt1, v0, rt0, t0 WHERE (((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2))) BETWEEN ('2023700707') AND (CAST(v0.c0 AS NUMERIC)))) ORDER BY CASE (~ (rt0.c1))  WHEN ((rt0.c0) BETWEEN (t0.c0) AND (rt0.c2)) THEN CASE rt0.c1  WHEN vt1.c0 THEN t0.c0 END WHEN (((rt0.c2))>((rt0.c2))) THEN ((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) WHEN json_patch(rt0.c0, t0.c0) THEN ((((rt0.c0)AND(v0.c0)))AND(rt0.c0)) ELSE t0.c0 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2))) BETWEEN ('2023700707') AND (CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1, v0 NOT INDEXED, rt0, t0 ORDER BY CASE (~ (rt0.c1))  WHEN ((rt0.c0) BETWEEN (t0.c0) AND (rt0.c2)) THEN CASE rt0.c1  WHEN vt1.c0 THEN t0.c0 END WHEN (((rt0.c2))>((rt0.c2))) THEN ((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) WHEN json_patch(rt0.c0, t0.c0) THEN ((((rt0.c0)AND(v0.c0)))AND(rt0.c0)) ELSE t0.c0 END  NULLS FIRST);
SELECT COUNT(*) FROM vt1, v0, rt0, t0 WHERE (((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2))) BETWEEN ('2023700707') AND (CAST(v0.c0 AS NUMERIC)))) ORDER BY CASE (~ (rt0.c1))  WHEN ((rt0.c0) BETWEEN (t0.c0) AND (rt0.c2)) THEN CASE rt0.c1  WHEN vt1.c0 THEN t0.c0 END WHEN (((rt0.c2))>((rt0.c2))) THEN ((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) WHEN json_patch(rt0.c0, t0.c0) THEN ((((rt0.c0)AND(v0.c0)))AND(rt0.c0)) ELSE t0.c0 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2))) BETWEEN ('2023700707') AND (CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1, v0 NOT INDEXED, rt0, t0 ORDER BY CASE (~ (rt0.c1))  WHEN ((rt0.c0) BETWEEN (t0.c0) AND (rt0.c2)) THEN CASE rt0.c1  WHEN vt1.c0 THEN t0.c0 END WHEN (((rt0.c2))>((rt0.c2))) THEN ((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) WHEN json_patch(rt0.c0, t0.c0) THEN ((((rt0.c0)AND(v0.c0)))AND(rt0.c0)) ELSE t0.c0 END  NULLS FIRST);
SELECT * FROM vt1 INNER JOIN t0 ON ((((x'')OR(((t0.c0) ISNULL))))AND(NULLIF(vt1.c0, vt1.c0))) WHERE (((json_quote(vt1.c0))*(TRIM(DISTINCT t0.c0)))) ORDER BY ((TOTAL_CHANGES()) BETWEEN (vt1.c0) AND (((vt1.c0)%(t0.c0))))  NULLS FIRST, CAST(vt1.c0 AS TEXT) ASC  NULLS FIRST, CAST(((t0.c0) BETWEEN ('-1292461248') AND (t0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((json_quote(vt1.c0))*(TRIM(DISTINCT t0.c0)))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((((x'')OR(((t0.c0) ISNULL))))AND(NULLIF(vt1.c0, vt1.c0))) ORDER BY ((TOTAL_CHANGES()) BETWEEN (vt1.c0) AND (((vt1.c0)%(t0.c0))))  NULLS FIRST, CAST(vt1.c0 AS TEXT) ASC  NULLS FIRST, CAST(((t0.c0) BETWEEN ('-1292461248') AND (t0.c0)) AS INTEGER));
SELECT * FROM vt1 INNER JOIN t0 ON ((((x'')OR(((t0.c0) ISNULL))))AND(NULLIF(vt1.c0, vt1.c0))) WHERE (((json_quote(vt1.c0))*(TRIM(DISTINCT t0.c0)))) ORDER BY ((TOTAL_CHANGES()) BETWEEN (vt1.c0) AND (((vt1.c0)%(t0.c0))))  NULLS FIRST, CAST(vt1.c0 AS TEXT) ASC  NULLS FIRST, CAST(((t0.c0) BETWEEN ('-1292461248') AND (t0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((json_quote(vt1.c0))*(TRIM(DISTINCT t0.c0)))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((((x'')OR(((t0.c0) ISNULL))))AND(NULLIF(vt1.c0, vt1.c0))) ORDER BY ((TOTAL_CHANGES()) BETWEEN (vt1.c0) AND (((vt1.c0)%(t0.c0))))  NULLS FIRST, CAST(vt1.c0 AS TEXT) ASC  NULLS FIRST, CAST(((t0.c0) BETWEEN ('-1292461248') AND (t0.c0)) AS INTEGER));
SELECT * FROM vt1 INNER JOIN t0 ON ((((x'')OR(((t0.c0) ISNULL))))AND(NULLIF(vt1.c0, vt1.c0))) WHERE (((json_quote(vt1.c0))*(TRIM(DISTINCT t0.c0)))) ORDER BY ((TOTAL_CHANGES()) BETWEEN (vt1.c0) AND (((vt1.c0)%(t0.c0))))  NULLS FIRST, CAST(vt1.c0 AS TEXT) ASC  NULLS FIRST, CAST(((t0.c0) BETWEEN ('-1292461248') AND (t0.c0)) AS INTEGER);
SELECT * FROM t0 FULL OUTER JOIN rt0 ON ((((vt1.c0)>(t0.c0)))+((vt1.c0 IN (v0.c0, rt0.c2)))) LEFT OUTER JOIN v0 ON CAST(x'' COLLATE RTRIM AS REAL) LEFT OUTER JOIN vt1 ON ((((((((((rt0.c0)+(rt0.c2)))OR(rt0.c1)))OR(((vt1.c0) ISNULL))))AND(CAST(rt0.c2 AS BLOB))))OR(rt0.c2 COLLATE BINARY)) WHERE ((('370640547')%('n,')) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((('370640547')%('n,')) COLLATE RTRIM) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((((vt1.c0)>(t0.c0)))+((vt1.c0 IN (v0.c0, rt0.c2)))) LEFT OUTER JOIN v0 ON CAST(x'' COLLATE RTRIM AS REAL) LEFT OUTER JOIN vt1 ON ((((((((((rt0.c0)+(rt0.c2)))OR(rt0.c1)))OR(((vt1.c0) ISNULL))))AND(CAST(rt0.c2 AS BLOB))))OR(rt0.c2 COLLATE BINARY)));
SELECT * FROM t0 FULL OUTER JOIN rt0 ON ((((vt1.c0)>(t0.c0)))+((vt1.c0 IN (v0.c0, rt0.c2)))) LEFT OUTER JOIN v0 ON CAST(x'' COLLATE RTRIM AS REAL) LEFT OUTER JOIN vt1 ON ((((((((((rt0.c0)+(rt0.c2)))OR(rt0.c1)))OR(((vt1.c0) ISNULL))))AND(CAST(rt0.c2 AS BLOB))))OR(rt0.c2 COLLATE BINARY)) WHERE ((('370640547')%('n,')) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((('370640547')%('n,')) COLLATE RTRIM) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((((vt1.c0)>(t0.c0)))+((vt1.c0 IN (v0.c0, rt0.c2)))) LEFT OUTER JOIN v0 ON CAST(x'' COLLATE RTRIM AS REAL) LEFT OUTER JOIN vt1 ON ((((((((((rt0.c0)+(rt0.c2)))OR(rt0.c1)))OR(((vt1.c0) ISNULL))))AND(CAST(rt0.c2 AS BLOB))))OR(rt0.c2 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c0 THEN 156874556 WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END AS TEXT)) ORDER BY CASE WHEN CASE rt0.c1  WHEN rt0.c2 THEN '-1713889156' ELSE rt0.c1 END THEN ((rt0.c1)OR(t0.c0)) WHEN '1501238184' THEN t0.c0 WHEN ((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c2)) THEN ((0.15036176700283854)>=(t0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c1  WHEN rt0.c0 THEN 156874556 WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END AS TEXT)) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE WHEN CASE rt0.c1  WHEN rt0.c2 THEN '-1713889156' ELSE rt0.c1 END THEN ((rt0.c1)OR(t0.c0)) WHEN '1501238184' THEN t0.c0 WHEN ((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c2)) THEN ((0.15036176700283854)>=(t0.c0)) END DESC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c0 THEN 156874556 WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END AS TEXT)) ORDER BY CASE WHEN CASE rt0.c1  WHEN rt0.c2 THEN '-1713889156' ELSE rt0.c1 END THEN ((rt0.c1)OR(t0.c0)) WHEN '1501238184' THEN t0.c0 WHEN ((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c2)) THEN ((0.15036176700283854)>=(t0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c1  WHEN rt0.c0 THEN 156874556 WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END AS TEXT)) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE WHEN CASE rt0.c1  WHEN rt0.c2 THEN '-1713889156' ELSE rt0.c1 END THEN ((rt0.c1)OR(t0.c0)) WHEN '1501238184' THEN t0.c0 WHEN ((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c2)) THEN ((0.15036176700283854)>=(t0.c0)) END DESC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c0 THEN 156874556 WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END AS TEXT)) ORDER BY CASE WHEN CASE rt0.c1  WHEN rt0.c2 THEN '-1713889156' ELSE rt0.c1 END THEN ((rt0.c1)OR(t0.c0)) WHEN '1501238184' THEN t0.c0 WHEN ((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c2)) THEN ((0.15036176700283854)>=(t0.c0)) END DESC;
SELECT ALL * FROM v0 WHERE (CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (x''))  WHEN v0.c0 COLLATE NOCASE THEN (NOT (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (x''))  WHEN v0.c0 COLLATE NOCASE THEN (NOT (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (x''))  WHEN v0.c0 COLLATE NOCASE THEN (NOT (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (x''))  WHEN v0.c0 COLLATE NOCASE THEN (NOT (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (x''))  WHEN v0.c0 COLLATE NOCASE THEN (NOT (v0.c0)) END);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)|('2/-9]s9^g')) IN ())) ORDER BY ((CAST(rt0.c1 AS TEXT))+(CAST(rt0.c1 AS BLOB))), CAST(LIKE(rt0.c2, '2137913873') AS BLOB);
SELECT SUM(count) FROM (SELECT (((((rt0.c0)|('2/-9]s9^g')) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c1 AS TEXT))+(CAST(rt0.c1 AS BLOB))), CAST(LIKE(rt0.c2, '2137913873') AS BLOB));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)|('2/-9]s9^g')) IN ())) ORDER BY ((CAST(rt0.c1 AS TEXT))+(CAST(rt0.c1 AS BLOB))), CAST(LIKE(rt0.c2, '2137913873') AS BLOB);
SELECT SUM(count) FROM (SELECT (((((rt0.c0)|('2/-9]s9^g')) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c1 AS TEXT))+(CAST(rt0.c1 AS BLOB))), CAST(LIKE(rt0.c2, '2137913873') AS BLOB));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)|('2/-9]s9^g')) IN ())) ORDER BY ((CAST(rt0.c1 AS TEXT))+(CAST(rt0.c1 AS BLOB))), CAST(LIKE(rt0.c2, '2137913873') AS BLOB);
SELECT ALL * FROM v0 RIGHT OUTER JOIN t0 ON CAST(TRIM(vt1.c0) AS REAL) FULL OUTER JOIN vt1 ON (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0)))) ISNULL) WHERE (((((v0.c0) BETWEEN (t0.c0) AND (t0.c0)))-((+ (vt1.c0))))) ORDER BY PRINTF(((t0.c0)<(NULL))), CAST(CAST(t0.c0 AS INTEGER) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (t0.c0) AND (t0.c0)))-((+ (vt1.c0))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON CAST(TRIM(vt1.c0) AS REAL) FULL OUTER JOIN vt1 ON (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0)))) ISNULL) ORDER BY PRINTF(((t0.c0)<(NULL))), CAST(CAST(t0.c0 AS INTEGER) AS TEXT));
SELECT ALL * FROM v0 RIGHT OUTER JOIN t0 ON CAST(TRIM(vt1.c0) AS REAL) FULL OUTER JOIN vt1 ON (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0)))) ISNULL) WHERE (((((v0.c0) BETWEEN (t0.c0) AND (t0.c0)))-((+ (vt1.c0))))) ORDER BY PRINTF(((t0.c0)<(NULL))), CAST(CAST(t0.c0 AS INTEGER) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (t0.c0) AND (t0.c0)))-((+ (vt1.c0))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON CAST(TRIM(vt1.c0) AS REAL) FULL OUTER JOIN vt1 ON (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0)))) ISNULL) ORDER BY PRINTF(((t0.c0)<(NULL))), CAST(CAST(t0.c0 AS INTEGER) AS TEXT));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE RTRIM) ORDER BY rt0.c0, IFNULL((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))), ((rt0.c0)GLOB(rt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0, IFNULL((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))), ((rt0.c0)GLOB(rt0.c1))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE RTRIM) ORDER BY rt0.c0, IFNULL((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))), ((rt0.c0)GLOB(rt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0, IFNULL((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))), ((rt0.c0)GLOB(rt0.c1))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE RTRIM) ORDER BY rt0.c0, IFNULL((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))), ((rt0.c0)GLOB(rt0.c1))) DESC  NULLS LAST;
SELECT * FROM v0, rt0 LEFT OUTER JOIN t0 ON CASE WHEN (((rt0.c2))>((rt0.c2))) THEN COALESCE(DISTINCT t0.c0, '-1494300063', t0.c0, rt0.c1) ELSE ((v0.c0) IS TRUE) END WHERE (x'cfd8') ORDER BY ((((((((CASE WHEN t0.c0 THEN rt0.c2 END)AND(((((0.9033232183266298)OR(NULL)))OR(rt0.c1)))))OR(LIKE(rt0.c0, ''))))OR(rt0.c0)))OR(((v0.c0) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((x'cfd8') IS TRUE)  as count FROM v0, rt0 LEFT OUTER JOIN t0 ON CASE WHEN (((rt0.c2))>((rt0.c2))) THEN COALESCE(DISTINCT t0.c0, '-1494300063', t0.c0, rt0.c1) ELSE ((v0.c0) IS TRUE) END ORDER BY ((((((((CASE WHEN t0.c0 THEN rt0.c2 END)AND(((((0.9033232183266298)OR(NULL)))OR(rt0.c1)))))OR(LIKE(rt0.c0, ''))))OR(rt0.c0)))OR(((v0.c0) NOTNULL))) ASC);
SELECT * FROM v0, rt0 LEFT OUTER JOIN t0 ON CASE WHEN (((rt0.c2))>((rt0.c2))) THEN COALESCE(DISTINCT t0.c0, '-1494300063', t0.c0, rt0.c1) ELSE ((v0.c0) IS TRUE) END WHERE (x'cfd8') ORDER BY ((((((((CASE WHEN t0.c0 THEN rt0.c2 END)AND(((((0.9033232183266298)OR(NULL)))OR(rt0.c1)))))OR(LIKE(rt0.c0, ''))))OR(rt0.c0)))OR(((v0.c0) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((x'cfd8') IS TRUE)  as count FROM v0, rt0 LEFT OUTER JOIN t0 ON CASE WHEN (((rt0.c2))>((rt0.c2))) THEN COALESCE(DISTINCT t0.c0, '-1494300063', t0.c0, rt0.c1) ELSE ((v0.c0) IS TRUE) END ORDER BY ((((((((CASE WHEN t0.c0 THEN rt0.c2 END)AND(((((0.9033232183266298)OR(NULL)))OR(rt0.c1)))))OR(LIKE(rt0.c0, ''))))OR(rt0.c0)))OR(((v0.c0) NOTNULL))) ASC);
SELECT * FROM v0, rt0 LEFT OUTER JOIN t0 ON CASE WHEN (((rt0.c2))>((rt0.c2))) THEN COALESCE(DISTINCT t0.c0, '-1494300063', t0.c0, rt0.c1) ELSE ((v0.c0) IS TRUE) END WHERE (x'cfd8') ORDER BY ((((((((CASE WHEN t0.c0 THEN rt0.c2 END)AND(((((0.9033232183266298)OR(NULL)))OR(rt0.c1)))))OR(LIKE(rt0.c0, ''))))OR(rt0.c0)))OR(((v0.c0) NOTNULL))) ASC;
SELECT * FROM rt0, t0, v0 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM rt0, t0, v0);
SELECT * FROM rt0, t0, v0 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM rt0, t0, v0);
SELECT * FROM rt0, t0, v0 WHERE (SQLITE_VERSION());
SELECT COUNT(*) FROM t0, v0, vt1, rt0 WHERE ((~ (CAST(0xffffffffed61aa14 AS TEXT)))) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(0Xffffffffed61aa14 AS TEXT)))) IS TRUE)  as count FROM t0, v0, vt1 NOT INDEXED, rt0 ORDER BY t0.c0);
SELECT COUNT(*) FROM t0, v0, vt1, rt0 WHERE ((~ (CAST(0xffffffffed61aa14 AS TEXT)))) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(0Xffffffffed61aa14 AS TEXT)))) IS TRUE)  as count FROM t0, v0, vt1 NOT INDEXED, rt0 ORDER BY t0.c0);
SELECT COUNT(*) FROM t0, v0, vt1, rt0 WHERE ((~ (CAST(0xffffffffed61aa14 AS TEXT)))) ORDER BY t0.c0;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN NULL THEN ((t0.c0)IS(t0.c0)) WHEN ((t0.c0)<=(t0.c0)) THEN LIKE(t0.c0, t0.c0, '-') WHEN (t0.c0 IN (t0.c0, t0.c0)) THEN t0.c0 COLLATE RTRIM END) ORDER BY DATETIME(CAST(t0.c0 AS TEXT), ((1.778529101E9) NOT BETWEEN (t0.c0) AND (t0.c0)), LIKELIHOOD(t0.c0, 0.7815666640474354));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN ((t0.c0)IS(t0.c0)) WHEN ((t0.c0)<=(t0.c0)) THEN LIKE(t0.c0, t0.c0, '-') WHEN (t0.c0 IN (t0.c0, t0.c0)) THEN t0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM t0 ORDER BY DATETIME(CAST(t0.c0 AS TEXT), ((1.778529101E9) NOT BETWEEN (t0.c0) AND (t0.c0)), LIKELIHOOD(t0.c0, 0.7815666640474354)));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN NULL THEN ((t0.c0)IS(t0.c0)) WHEN ((t0.c0)<=(t0.c0)) THEN LIKE(t0.c0, t0.c0, '-') WHEN (t0.c0 IN (t0.c0, t0.c0)) THEN t0.c0 COLLATE RTRIM END) ORDER BY DATETIME(CAST(t0.c0 AS TEXT), ((1.778529101E9) NOT BETWEEN (t0.c0) AND (t0.c0)), LIKELIHOOD(t0.c0, 0.7815666640474354));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN ((t0.c0)IS(t0.c0)) WHEN ((t0.c0)<=(t0.c0)) THEN LIKE(t0.c0, t0.c0, '-') WHEN (t0.c0 IN (t0.c0, t0.c0)) THEN t0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM t0 ORDER BY DATETIME(CAST(t0.c0 AS TEXT), ((1.778529101E9) NOT BETWEEN (t0.c0) AND (t0.c0)), LIKELIHOOD(t0.c0, 0.7815666640474354)));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN NULL THEN ((t0.c0)IS(t0.c0)) WHEN ((t0.c0)<=(t0.c0)) THEN LIKE(t0.c0, t0.c0, '-') WHEN (t0.c0 IN (t0.c0, t0.c0)) THEN t0.c0 COLLATE RTRIM END) ORDER BY DATETIME(CAST(t0.c0 AS TEXT), ((1.778529101E9) NOT BETWEEN (t0.c0) AND (t0.c0)), LIKELIHOOD(t0.c0, 0.7815666640474354));
SELECT ALL * FROM t0, vt1 WHERE (0x1b7ae792);
SELECT SUM(count) FROM (SELECT ((0x1b7ae792) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (0x1b7ae792);
SELECT SUM(count) FROM (SELECT ((0x1b7ae792) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (0x1b7ae792);
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c0)AND(t0.c0)))AND('870386992')))AND(t0.c0)))AND(t0.c0)))*(t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)AND(t0.c0)))AND('870386992')))AND(t0.c0)))AND(t0.c0)))*(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c0)AND(t0.c0)))AND('870386992')))AND(t0.c0)))AND(t0.c0)))*(t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)AND(t0.c0)))AND('870386992')))AND(t0.c0)))AND(t0.c0)))*(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c0)AND(t0.c0)))AND('870386992')))AND(t0.c0)))AND(t0.c0)))*(t0.c0 COLLATE BINARY)));
SELECT * FROM rt0, t0 WHERE (CAST(((rt0.c0)OR(rt0.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)OR(rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (CAST(((rt0.c0)OR(rt0.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)OR(rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (CAST(((rt0.c0)OR(rt0.c2)) AS INTEGER));
SELECT ALL * FROM t0, vt1, v0, rt0 WHERE (json_quote(CAST(vt1.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((json_quote(CAST(vt1.c0 AS BLOB))) IS TRUE)  as count FROM t0, vt1, v0, rt0);
SELECT ALL * FROM t0, vt1, v0, rt0 WHERE (json_quote(CAST(vt1.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((json_quote(CAST(vt1.c0 AS BLOB))) IS TRUE)  as count FROM t0, vt1, v0, rt0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN (((v0.c0))<((v0.c0))) THEN v0.c0 WHEN (~ (v0.c0)) THEN ((v0.c0)>>(NULL)) WHEN (v0.c0 IN ()) THEN TYPEOF(v0.c0) ELSE (~ (v0.c0)) END) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 1.477794069E9 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT BETWEEN (((v0.c0) NOTNULL)) AND ('')) DESC, ((((0.8095348639178175)==(v0.c0))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((v0.c0))<((v0.c0))) THEN v0.c0 WHEN (~ (v0.c0)) THEN ((v0.c0)>>(NULL)) WHEN (v0.c0 IN ()) THEN TYPEOF(v0.c0) ELSE (~ (v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 1.477794069E9 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT BETWEEN (((v0.c0) NOTNULL)) AND ('')) DESC, ((((0.8095348639178175)=(v0.c0))) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN (((v0.c0))<((v0.c0))) THEN v0.c0 WHEN (~ (v0.c0)) THEN ((v0.c0)>>(NULL)) WHEN (v0.c0 IN ()) THEN TYPEOF(v0.c0) ELSE (~ (v0.c0)) END) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 1.477794069E9 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT BETWEEN (((v0.c0) NOTNULL)) AND ('')) DESC, ((((0.8095348639178175)==(v0.c0))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((v0.c0))<((v0.c0))) THEN v0.c0 WHEN (~ (v0.c0)) THEN ((v0.c0)>>(NULL)) WHEN (v0.c0 IN ()) THEN TYPEOF(v0.c0) ELSE (~ (v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 1.477794069E9 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT BETWEEN (((v0.c0) NOTNULL)) AND ('')) DESC, ((((0.8095348639178175)=(v0.c0))) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN (((v0.c0))<((v0.c0))) THEN v0.c0 WHEN (~ (v0.c0)) THEN ((v0.c0)>>(NULL)) WHEN (v0.c0 IN ()) THEN TYPEOF(v0.c0) ELSE (~ (v0.c0)) END) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 1.477794069E9 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT BETWEEN (((v0.c0) NOTNULL)) AND ('')) DESC, ((((0.8095348639178175)==(v0.c0))) IS FALSE)  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((~ (((v0.c0) NOT NULL)))) ORDER BY ((((((((((((t0.c0)AND(v0.c0)))OR(t0.c0)))OR(v0.c0)))AND(t0.c0)))AND(v0.c0)))OR(v0.c0)) COLLATE NOCASE, (- (((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c0) NOT NULL)))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((((((((((t0.c0)AND(v0.c0)))OR(t0.c0)))OR(v0.c0)))AND(t0.c0)))AND(v0.c0)))OR(v0.c0)) COLLATE NOCASE, (- (((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)))) ASC);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((~ (((v0.c0) NOT NULL)))) ORDER BY ((((((((((((t0.c0)AND(v0.c0)))OR(t0.c0)))OR(v0.c0)))AND(t0.c0)))AND(v0.c0)))OR(v0.c0)) COLLATE NOCASE, (- (((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c0) NOT NULL)))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((((((((((t0.c0)AND(v0.c0)))OR(t0.c0)))OR(v0.c0)))AND(t0.c0)))AND(v0.c0)))OR(v0.c0)) COLLATE NOCASE, (- (((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)))) ASC);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((~ (((v0.c0) NOT NULL)))) ORDER BY ((((((((((((t0.c0)AND(v0.c0)))OR(t0.c0)))OR(v0.c0)))AND(t0.c0)))AND(v0.c0)))OR(v0.c0)) COLLATE NOCASE, (- (((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((((((vt1.c0) IS FALSE))OR(CASE WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR(CASE WHEN t0.c0 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) IS FALSE))OR(CASE WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR(CASE WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((((((vt1.c0) IS FALSE))OR(CASE WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR(CASE WHEN t0.c0 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) IS FALSE))OR(CASE WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR(CASE WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((((((vt1.c0) IS FALSE))OR(CASE WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR(CASE WHEN t0.c0 THEN t0.c0 END)));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((CAST(t0.c0 AS REAL)))>=((((((((((0.3438997111500033)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((CAST(t0.c0 AS REAL)))>=((((((((((0.3438997111500033)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(t0.c0)))))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((CAST(t0.c0 AS REAL)))>=((((((((((0.3438997111500033)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((CAST(t0.c0 AS REAL)))>=((((((((((0.3438997111500033)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(t0.c0)))))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((CAST(t0.c0 AS REAL)))>=((((((((((0.3438997111500033)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(t0.c0))))));
SELECT ALL COUNT(*) FROM vt1, v0, t0, rt0 WHERE (((((((((CASE WHEN x'' THEN rt0.c2 ELSE vt1.c0 END)OR(v0.c0 COLLATE BINARY)))OR(((t0.c0) NOT NULL))))OR((- (v0.c0)))))OR(((((rt0.c2)AND(rt0.c1)))OR('1220849645'))))) ORDER BY CAST((rt0.c0 IN ()) AS REAL) ASC  NULLS LAST, (((rt0.c1))<((((rt0.c0) NOT BETWEEN (t0.c0) AND ('-897629075'))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN x'' THEN rt0.c2 ELSE vt1.c0 END)OR(v0.c0 COLLATE BINARY)))OR(((t0.c0) NOT NULL))))OR((- (v0.c0)))))OR(((((rt0.c2)AND(rt0.c1)))OR('1220849645'))))) IS TRUE)  as count FROM vt1, v0, t0, rt0 ORDER BY CAST((rt0.c0 IN ()) AS REAL) ASC  NULLS LAST, (((rt0.c1))<((((rt0.c0) NOT BETWEEN (t0.c0) AND ('-897629075'))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, v0, t0, rt0 WHERE (((((((((CASE WHEN x'' THEN rt0.c2 ELSE vt1.c0 END)OR(v0.c0 COLLATE BINARY)))OR(((t0.c0) NOT NULL))))OR((- (v0.c0)))))OR(((((rt0.c2)AND(rt0.c1)))OR('1220849645'))))) ORDER BY CAST((rt0.c0 IN ()) AS REAL) ASC  NULLS LAST, (((rt0.c1))<((((rt0.c0) NOT BETWEEN (t0.c0) AND ('-897629075'))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN x'' THEN rt0.c2 ELSE vt1.c0 END)OR(v0.c0 COLLATE BINARY)))OR(((t0.c0) NOT NULL))))OR((- (v0.c0)))))OR(((((rt0.c2)AND(rt0.c1)))OR('1220849645'))))) IS TRUE)  as count FROM vt1, v0, t0, rt0 ORDER BY CAST((rt0.c0 IN ()) AS REAL) ASC  NULLS LAST, (((rt0.c1))<((((rt0.c0) NOT BETWEEN (t0.c0) AND ('-897629075'))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, v0, t0, rt0 WHERE (((((((((CASE WHEN x'' THEN rt0.c2 ELSE vt1.c0 END)OR(v0.c0 COLLATE BINARY)))OR(((t0.c0) NOT NULL))))OR((- (v0.c0)))))OR(((((rt0.c2)AND(rt0.c1)))OR('1220849645'))))) ORDER BY CAST((rt0.c0 IN ()) AS REAL) ASC  NULLS LAST, (((rt0.c1))<((((rt0.c0) NOT BETWEEN (t0.c0) AND ('-897629075'))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1, '1232327419', rt0.c2))>=((rt0.c2, rt0.c2, rt0.c1))))+(((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, '1232327419', rt0.c2))>=((rt0.c2, rt0.c2, rt0.c1))))+(((((rt0.c2)AND(rt0.c1)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1, '1232327419', rt0.c2))>=((rt0.c2, rt0.c2, rt0.c1))))+(((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, '1232327419', rt0.c2))>=((rt0.c2, rt0.c2, rt0.c1))))+(((((rt0.c2)AND(rt0.c1)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1, '1232327419', rt0.c2))>=((rt0.c2, rt0.c2, rt0.c1))))+(((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED WHERE ((((- (rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED WHERE ((((- (rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED WHERE ((((- (rt0.c0))) IS TRUE));
SELECT * FROM v0 WHERE ((- ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY CAST(NULLIF(DISTINCT v0.c0, v0.c0) AS BLOB) ASC, CASE load_extension(v0.c0, v0.c0)  WHEN ((((v0.c0)AND(v0.c0)))OR('1352338967')) THEN ((x'df56fb46') IS TRUE) ELSE CAST(v0.c0 AS TEXT) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY CAST(NULLIF(DISTINCT v0.c0, v0.c0) AS BLOB) ASC, CASE load_extension(v0.c0, v0.c0)  WHEN ((((v0.c0)AND(v0.c0)))OR('1352338967')) THEN ((x'df56fb46') IS TRUE) ELSE CAST(v0.c0 AS TEXT) END  NULLS FIRST);
SELECT * FROM v0 WHERE ((- ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY CAST(NULLIF(DISTINCT v0.c0, v0.c0) AS BLOB) ASC, CASE load_extension(v0.c0, v0.c0)  WHEN ((((v0.c0)AND(v0.c0)))OR('1352338967')) THEN ((x'df56fb46') IS TRUE) ELSE CAST(v0.c0 AS TEXT) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY CAST(NULLIF(DISTINCT v0.c0, v0.c0) AS BLOB) ASC, CASE load_extension(v0.c0, v0.c0)  WHEN ((((v0.c0)AND(v0.c0)))OR('1352338967')) THEN ((x'df56fb46') IS TRUE) ELSE CAST(v0.c0 AS TEXT) END  NULLS FIRST);
SELECT * FROM t0, rt0, vt1 WHERE ((((rt0.c1)LIKE(rt0.c1)) IN ())) ORDER BY CASE WHEN t0.c0 COLLATE BINARY THEN ((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)) ELSE 0.071018747228496 END ASC  NULLS LAST, CAST(((vt1.c0) IS FALSE) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)LIKE(rt0.c1)) IN ())) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY CASE WHEN t0.c0 COLLATE BINARY THEN ((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)) ELSE 0.071018747228496 END ASC  NULLS LAST, CAST(((vt1.c0) IS FALSE) AS REAL) ASC);
SELECT * FROM t0, rt0, vt1 WHERE ((((rt0.c1)LIKE(rt0.c1)) IN ())) ORDER BY CASE WHEN t0.c0 COLLATE BINARY THEN ((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)) ELSE 0.071018747228496 END ASC  NULLS LAST, CAST(((vt1.c0) IS FALSE) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)LIKE(rt0.c1)) IN ())) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY CASE WHEN t0.c0 COLLATE BINARY THEN ((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)) ELSE 0.071018747228496 END ASC  NULLS LAST, CAST(((vt1.c0) IS FALSE) AS REAL) ASC);
SELECT * FROM t0, rt0, vt1 WHERE ((((rt0.c1)LIKE(rt0.c1)) IN ())) ORDER BY CASE WHEN t0.c0 COLLATE BINARY THEN ((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)) ELSE 0.071018747228496 END ASC  NULLS LAST, CAST(((vt1.c0) IS FALSE) AS REAL) ASC;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (x'');
SELECT * FROM t0, vt1, v0, rt0 WHERE (((((rt0.c1) IS FALSE))GLOB(((vt1.c0)<=(rt0.c0))))) ORDER BY ((((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c1))) BETWEEN (TYPEOF(t0.c0)) AND ((~ (v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) IS FALSE))GLOB(((vt1.c0)<=(rt0.c0))))) IS TRUE)  as count FROM t0, vt1, v0, rt0 ORDER BY ((((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c1))) BETWEEN (TYPEOF(t0.c0)) AND ((~ (v0.c0)))));
SELECT * FROM t0, vt1, v0, rt0 WHERE (((((rt0.c1) IS FALSE))GLOB(((vt1.c0)<=(rt0.c0))))) ORDER BY ((((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c1))) BETWEEN (TYPEOF(t0.c0)) AND ((~ (v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) IS FALSE))GLOB(((vt1.c0)<=(rt0.c0))))) IS TRUE)  as count FROM t0, vt1, v0, rt0 ORDER BY ((((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c1))) BETWEEN (TYPEOF(t0.c0)) AND ((~ (v0.c0)))));
SELECT * FROM t0, vt1, v0, rt0 WHERE (((((rt0.c1) IS FALSE))GLOB(((vt1.c0)<=(rt0.c0))))) ORDER BY ((((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c1))) BETWEEN (TYPEOF(t0.c0)) AND ((~ (v0.c0))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c0)AND(rt0.c0 COLLATE NOCASE)))AND(rt0.c2 COLLATE BINARY))) ORDER BY (+ ((v0.c0 IN ()))) ASC, (((rt0.c2)|(rt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)AND(rt0.c0 COLLATE NOCASE)))AND(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0, v0 ORDER BY (+ ((v0.c0 IN ()))) ASC, (((rt0.c2)|(rt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c0)AND(rt0.c0 COLLATE NOCASE)))AND(rt0.c2 COLLATE BINARY))) ORDER BY (+ ((v0.c0 IN ()))) ASC, (((rt0.c2)|(rt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)AND(rt0.c0 COLLATE NOCASE)))AND(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0, v0 ORDER BY (+ ((v0.c0 IN ()))) ASC, (((rt0.c2)|(rt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c0)AND(rt0.c0 COLLATE NOCASE)))AND(rt0.c2 COLLATE BINARY))) ORDER BY (+ ((v0.c0 IN ()))) ASC, (((rt0.c2)|(rt0.c0)) IN ());
SELECT ALL * FROM t0, rt0 FULL OUTER JOIN vt1 ON ((((('49\rcBQ' IN ()))AND(((((t0.c0)AND(v0.c0)))OR(rt0.c1)))))AND(NULL COLLATE NOCASE)) FULL OUTER JOIN v0 ON (rt0.c2 IN ()) WHERE (((SQLITE_COMPILEOPTION_USED(vt1.c0))>((rt0.c2 IN (vt1.c0, vt1.c0))))) ORDER BY ((TRIM(t0.c0))AND(rt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_COMPILEOPTION_USED(vt1.c0))>((rt0.c2 IN (vt1.c0, vt1.c0))))) IS TRUE)  as count FROM t0, rt0 FULL OUTER JOIN vt1 ON ((((('49\rcBQ' IN ()))AND(((((t0.c0)AND(v0.c0)))OR(rt0.c1)))))AND(NULL COLLATE NOCASE)) FULL OUTER JOIN v0 ON (rt0.c2 IN ()) ORDER BY ((TRIM(t0.c0))AND(rt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL * FROM t0, rt0 FULL OUTER JOIN vt1 ON ((((('49\rcBQ' IN ()))AND(((((t0.c0)AND(v0.c0)))OR(rt0.c1)))))AND(NULL COLLATE NOCASE)) FULL OUTER JOIN v0 ON (rt0.c2 IN ()) WHERE (((SQLITE_COMPILEOPTION_USED(vt1.c0))>((rt0.c2 IN (vt1.c0, vt1.c0))))) ORDER BY ((TRIM(t0.c0))AND(rt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_COMPILEOPTION_USED(vt1.c0))>((rt0.c2 IN (vt1.c0, vt1.c0))))) IS TRUE)  as count FROM t0, rt0 FULL OUTER JOIN vt1 ON ((((('49\rcBQ' IN ()))AND(((((t0.c0)AND(v0.c0)))OR(rt0.c1)))))AND(NULL COLLATE NOCASE)) FULL OUTER JOIN v0 ON (rt0.c2 IN ()) ORDER BY ((TRIM(t0.c0))AND(rt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL * FROM t0, rt0 FULL OUTER JOIN vt1 ON ((((('49\rcBQ' IN ()))AND(((((t0.c0)AND(v0.c0)))OR(rt0.c1)))))AND(NULL COLLATE NOCASE)) FULL OUTER JOIN v0 ON (rt0.c2 IN ()) WHERE (((SQLITE_COMPILEOPTION_USED(vt1.c0))>((rt0.c2 IN (vt1.c0, vt1.c0))))) ORDER BY ((TRIM(t0.c0))AND(rt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT ALL * FROM v0, rt0, t0 NATURAL JOIN vt1 WHERE (((NULL) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((NULL) NOTNULL)) IS TRUE)  as count FROM v0, rt0, t0 NATURAL JOIN vt1);
SELECT ALL * FROM v0, rt0, t0 NATURAL JOIN vt1 WHERE (((NULL) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((NULL) NOTNULL)) IS TRUE)  as count FROM v0, rt0, t0 NATURAL JOIN vt1);
SELECT ALL * FROM v0, rt0, t0 NATURAL JOIN vt1 WHERE (((NULL) NOTNULL));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c0) ORDER BY CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (NULL)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (NULL)) AS INTEGER));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c0) ORDER BY CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (NULL)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (NULL)) AS INTEGER));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c0) ORDER BY CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (NULL)) AS INTEGER);
SELECT ALL * FROM v0, vt1 WHERE (CAST(((vt1.c0) NOT NULL) AS TEXT)) ORDER BY CAST(-1590389030 AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) NOT NULL) AS TEXT)) IS TRUE)  as count FROM v0, vt1 ORDER BY CAST(-1590389030 AS REAL)  NULLS FIRST);
SELECT ALL * FROM v0, vt1 WHERE (CAST(((vt1.c0) NOT NULL) AS TEXT)) ORDER BY CAST(-1590389030 AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) NOT NULL) AS TEXT)) IS TRUE)  as count FROM v0, vt1 ORDER BY CAST(-1590389030 AS REAL)  NULLS FIRST);
SELECT ALL * FROM v0, vt1 WHERE (CAST(((vt1.c0) NOT NULL) AS TEXT)) ORDER BY CAST(-1590389030 AS REAL)  NULLS FIRST;
SELECT ALL * FROM rt0, v0, t0 WHERE (((rt0.c0)<(((rt0.c0)>(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<(((rt0.c0)>(rt0.c0))))) IS TRUE)  as count FROM rt0, v0, t0);
SELECT ALL * FROM rt0, v0, t0 WHERE (((rt0.c0)<(((rt0.c0)>(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<(((rt0.c0)>(rt0.c0))))) IS TRUE)  as count FROM rt0, v0, t0);
SELECT ALL * FROM rt0, v0, t0 WHERE (((rt0.c0)<(((rt0.c0)>(rt0.c0)))));
SELECT COUNT(*) FROM vt1, t0 WHERE (CAST((((t0.c0, t0.c0, t0.c0))<=((vt1.c0, NULL, t0.c0))) AS TEXT)) ORDER BY (((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t0.c0, t0.c0, t0.c0))<=((vt1.c0, NULL, t0.c0))) AS TEXT)) IS TRUE)  as count FROM vt1, t0 ORDER BY (((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0 WHERE (CAST((((t0.c0, t0.c0, t0.c0))<=((vt1.c0, NULL, t0.c0))) AS TEXT)) ORDER BY (((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t0.c0, t0.c0, t0.c0))<=((vt1.c0, NULL, t0.c0))) AS TEXT)) IS TRUE)  as count FROM vt1, t0 ORDER BY (((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0 WHERE (CAST((((t0.c0, t0.c0, t0.c0))<=((vt1.c0, NULL, t0.c0))) AS TEXT)) ORDER BY (((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ()) DESC  NULLS LAST;
SELECT * FROM v0, rt0 NOT INDEXED WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 NOT INDEXED WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 NOT INDEXED WHERE (rt0.c0);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt1 WHERE (t0.c0) ORDER BY ((- (t0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 NATURAL JOIN vt1 ORDER BY ((- (t0.c0)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt1 WHERE (t0.c0) ORDER BY ((- (t0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 NATURAL JOIN vt1 ORDER BY ((- (t0.c0)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt1 WHERE (t0.c0) ORDER BY ((- (t0.c0)) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN LIKELY(rt0.c2) THEN (vt1.c0 IN ()) WHEN (- (rt0.c2)) THEN (rt0.c2 IN ()) WHEN (+ (rt0.c2)) THEN (((rt0.c0))==((vt1.c0))) ELSE 'J''5G^L뤾' END) ORDER BY rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN LIKELY(rt0.c2) THEN (vt1.c0 IN ()) WHEN (- (rt0.c2)) THEN (rt0.c2 IN ()) WHEN (+ (rt0.c2)) THEN (((rt0.c0))=((vt1.c0))) ELSE 'J''5G^L뤾' END) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN LIKELY(rt0.c2) THEN (vt1.c0 IN ()) WHEN (- (rt0.c2)) THEN (rt0.c2 IN ()) WHEN (+ (rt0.c2)) THEN (((rt0.c0))==((vt1.c0))) ELSE 'J''5G^L뤾' END) ORDER BY rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN LIKELY(rt0.c2) THEN (vt1.c0 IN ()) WHEN (- (rt0.c2)) THEN (rt0.c2 IN ()) WHEN (+ (rt0.c2)) THEN (((rt0.c0))=((vt1.c0))) ELSE 'J''5G^L뤾' END) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN LIKELY(rt0.c2) THEN (vt1.c0 IN ()) WHEN (- (rt0.c2)) THEN (rt0.c2 IN ()) WHEN (+ (rt0.c2)) THEN (((rt0.c0))==((vt1.c0))) ELSE 'J''5G^L뤾' END) ORDER BY rt0.c0  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE (+ (rt0.c0))  WHEN ((rt0.c2)%(x'')) THEN t0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (rt0.c0))  WHEN ((rt0.c2)%(x'')) THEN t0.c0 END) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE (+ (rt0.c0))  WHEN ((rt0.c2)%(x'')) THEN t0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (rt0.c0))  WHEN ((rt0.c2)%(x'')) THEN t0.c0 END) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE (+ (rt0.c0))  WHEN ((rt0.c2)%(x'')) THEN t0.c0 END);
SELECT * FROM rt0, v0 RIGHT OUTER JOIN vt1 ON (+ (0.4423253977471643)) FULL OUTER JOIN t0 ON ((((t0.c0) ISNULL)) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) AND (((rt0.c1) BETWEEN (t0.c0) AND (vt1.c0)))) WHERE ((rt0.c2 IN (((rt0.c1)<=(NULL))))) ORDER BY ((((rt0.c0)OR(t0.c0))) NOT BETWEEN (NULL COLLATE BINARY) AND ((((t0.c0))<((rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN (((rt0.c1)<=(NULL))))) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN vt1 ON (+ (0.4423253977471643)) FULL OUTER JOIN t0 ON ((((t0.c0) ISNULL)) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) AND (((rt0.c1) BETWEEN (t0.c0) AND (vt1.c0)))) ORDER BY ((((rt0.c0)OR(t0.c0))) NOT BETWEEN (NULL COLLATE BINARY) AND ((((t0.c0))<((rt0.c2))))) ASC);
SELECT * FROM rt0, v0 RIGHT OUTER JOIN vt1 ON (+ (0.4423253977471643)) FULL OUTER JOIN t0 ON ((((t0.c0) ISNULL)) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) AND (((rt0.c1) BETWEEN (t0.c0) AND (vt1.c0)))) WHERE ((rt0.c2 IN (((rt0.c1)<=(NULL))))) ORDER BY ((((rt0.c0)OR(t0.c0))) NOT BETWEEN (NULL COLLATE BINARY) AND ((((t0.c0))<((rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN (((rt0.c1)<=(NULL))))) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN vt1 ON (+ (0.4423253977471643)) FULL OUTER JOIN t0 ON ((((t0.c0) ISNULL)) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) AND (((rt0.c1) BETWEEN (t0.c0) AND (vt1.c0)))) ORDER BY ((((rt0.c0)OR(t0.c0))) NOT BETWEEN (NULL COLLATE BINARY) AND ((((t0.c0))<((rt0.c2))))) ASC);
SELECT * FROM rt0, v0 RIGHT OUTER JOIN vt1 ON (+ (0.4423253977471643)) FULL OUTER JOIN t0 ON ((((t0.c0) ISNULL)) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) AND (((rt0.c1) BETWEEN (t0.c0) AND (vt1.c0)))) WHERE ((rt0.c2 IN (((rt0.c1)<=(NULL))))) ORDER BY ((((rt0.c0)OR(t0.c0))) NOT BETWEEN (NULL COLLATE BINARY) AND ((((t0.c0))<((rt0.c2))))) ASC;
SELECT ALL COUNT(*) FROM rt0, v0 FULL OUTER JOIN vt1 ON CASE 462360013  WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END COLLATE NOCASE WHERE ('0.39731143674919334');
SELECT SUM(count) FROM (SELECT ALL (('0.39731143674919334') IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN vt1 ON CASE 462360013  WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, v0 FULL OUTER JOIN vt1 ON CASE 462360013  WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END COLLATE NOCASE WHERE ('0.39731143674919334');
SELECT SUM(count) FROM (SELECT ALL (('0.39731143674919334') IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN vt1 ON CASE 462360013  WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, v0 FULL OUTER JOIN vt1 ON CASE 462360013  WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END COLLATE NOCASE WHERE ('0.39731143674919334');
SELECT COUNT(*) FROM v0, vt1 NOT INDEXED, t0, rt0 WHERE ((rt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ())) IS TRUE)  as count FROM v0, vt1, t0, rt0);
SELECT COUNT(*) FROM v0, vt1 NOT INDEXED, t0, rt0 WHERE ((rt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ())) IS TRUE)  as count FROM v0, vt1, t0, rt0);
SELECT COUNT(*) FROM v0, vt1 NOT INDEXED, t0, rt0 WHERE ((rt0.c0 IN ()));
SELECT COUNT(*) FROM t0 WHERE ('\n^''^') ORDER BY CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('\n^''^') IS TRUE)  as count FROM t0 ORDER BY CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END AS INTEGER) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ('\n^''^') ORDER BY CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('\n^''^') IS TRUE)  as count FROM t0 ORDER BY CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END AS INTEGER) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ('\n^''^') ORDER BY CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END AS INTEGER) DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE (((((json_quote(vt1.c0))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))AND(vt1.c0))) ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((json_quote(vt1.c0))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))AND(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((json_quote(vt1.c0))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))AND(vt1.c0))) ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((json_quote(vt1.c0))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))AND(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((json_quote(vt1.c0))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))AND(vt1.c0))) ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) DESC  NULLS FIRST;
SELECT ALL * FROM v0, t0, vt1, rt0 WHERE ((((vt1.c0 IN ())) NOT NULL)) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt1.c0))) NOT BETWEEN ('-58704729') AND (((t0.c0)LIKE(rt0.c2)))), CASE (rt0.c2 IN ())  WHEN 0.543321411964222 THEN ((v0.c0)<=(rt0.c2)) END ASC  NULLS LAST, (((('1135183273') BETWEEN (rt0.c2) AND (rt0.c2))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM v0, t0, vt1, rt0 ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt1.c0))) NOT BETWEEN ('-58704729') AND (((t0.c0)LIKE(rt0.c2)))), CASE (rt0.c2 IN ())  WHEN 0.543321411964222 THEN ((v0.c0)<=(rt0.c2)) END ASC  NULLS LAST, (((('1135183273') BETWEEN (rt0.c2) AND (rt0.c2))) NOT NULL)  NULLS FIRST);
SELECT ALL * FROM v0, t0, vt1, rt0 WHERE ((((vt1.c0 IN ())) NOT NULL)) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt1.c0))) NOT BETWEEN ('-58704729') AND (((t0.c0)LIKE(rt0.c2)))), CASE (rt0.c2 IN ())  WHEN 0.543321411964222 THEN ((v0.c0)<=(rt0.c2)) END ASC  NULLS LAST, (((('1135183273') BETWEEN (rt0.c2) AND (rt0.c2))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM v0, t0, vt1, rt0 ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt1.c0))) NOT BETWEEN ('-58704729') AND (((t0.c0)LIKE(rt0.c2)))), CASE (rt0.c2 IN ())  WHEN 0.543321411964222 THEN ((v0.c0)<=(rt0.c2)) END ASC  NULLS LAST, (((('1135183273') BETWEEN (rt0.c2) AND (rt0.c2))) NOT NULL)  NULLS FIRST);
SELECT ALL * FROM v0, t0, vt1, rt0 WHERE ((((vt1.c0 IN ())) NOT NULL)) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt1.c0))) NOT BETWEEN ('-58704729') AND (((t0.c0)LIKE(rt0.c2)))), CASE (rt0.c2 IN ())  WHEN 0.543321411964222 THEN ((v0.c0)<=(rt0.c2)) END ASC  NULLS LAST, (((('1135183273') BETWEEN (rt0.c2) AND (rt0.c2))) NOT NULL)  NULLS FIRST;
SELECT * FROM rt0 WHERE (CAST(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END AS BLOB)) ORDER BY UNLIKELY(CASE WHEN rt0.c1 THEN rt0.c1 END) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY UNLIKELY(CASE WHEN rt0.c1 THEN rt0.c1 END) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (CAST(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END AS BLOB)) ORDER BY UNLIKELY(CASE WHEN rt0.c1 THEN rt0.c1 END) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY UNLIKELY(CASE WHEN rt0.c1 THEN rt0.c1 END) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (CAST(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END AS BLOB)) ORDER BY UNLIKELY(CASE WHEN rt0.c1 THEN rt0.c1 END) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt1 LEFT OUTER JOIN rt0 ON CAST(LOWER(rt0.c0) AS BLOB) WHERE ((((((v0.c0))!=((rt0.c1)))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((((v0.c0))!=((rt0.c1)))) NOT NULL)) IS TRUE)  as count FROM v0, vt1 LEFT OUTER JOIN rt0 ON CAST(LOWER(rt0.c0) AS BLOB));
SELECT COUNT(*) FROM v0, vt1 LEFT OUTER JOIN rt0 ON CAST(LOWER(rt0.c0) AS BLOB) WHERE ((((((v0.c0))!=((rt0.c1)))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((((v0.c0))!=((rt0.c1)))) NOT NULL)) IS TRUE)  as count FROM v0, vt1 LEFT OUTER JOIN rt0 ON CAST(LOWER(rt0.c0) AS BLOB));
SELECT COUNT(*) FROM v0, vt1 LEFT OUTER JOIN rt0 ON CAST(LOWER(rt0.c0) AS BLOB) WHERE ((((((v0.c0))!=((rt0.c1)))) NOT NULL));
SELECT ALL * FROM t0, v0 WHERE (IFNULL(((t0.c0)<=(t0.c0)), json_patch(v0.c0, t0.c0)));
SELECT SUM(count) FROM (SELECT ((IFNULL(((t0.c0)<=(t0.c0)), json_patch(v0.c0, t0.c0))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (IFNULL(((t0.c0)<=(t0.c0)), json_patch(v0.c0, t0.c0)));
SELECT SUM(count) FROM (SELECT ((IFNULL(((t0.c0)<=(t0.c0)), json_patch(v0.c0, t0.c0))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (IFNULL(((t0.c0)<=(t0.c0)), json_patch(v0.c0, t0.c0)));
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0)=(rt0.c0)) AS INTEGER)) ORDER BY (rt0.c0 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)=(rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c0 IN ())  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0)=(rt0.c0)) AS INTEGER)) ORDER BY (rt0.c0 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)=(rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c0 IN ())  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0)=(rt0.c0)) AS INTEGER)) ORDER BY (rt0.c0 IN ())  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (STRFTIME(x'', ((vt1.c0)/(vt1.c0)), vt1.c0));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(x'', ((vt1.c0)/(vt1.c0)), vt1.c0)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (STRFTIME(x'', ((vt1.c0)/(vt1.c0)), vt1.c0));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(x'', ((vt1.c0)/(vt1.c0)), vt1.c0)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (STRFTIME(x'', ((vt1.c0)/(vt1.c0)), vt1.c0));
SELECT ALL COUNT(*) FROM v0, rt0, vt1, t0 WHERE (CASE WHEN ((rt0.c0)OR(v0.c0)) THEN (((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN (('298098072', vt1.c0, rt0.c1)) AND ((t0.c0, '', rt0.c2))) ELSE rt0.c0 END) ORDER BY 0x3a8c3465  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0)OR(v0.c0)) THEN (((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN (('298098072', vt1.c0, rt0.c1)) AND ((t0.c0, '', rt0.c2))) ELSE rt0.c0 END) IS TRUE)  as count FROM v0, rt0, vt1, t0 ORDER BY 0X3a8c3465  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0, vt1, t0 WHERE (CASE WHEN ((rt0.c0)OR(v0.c0)) THEN (((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN (('298098072', vt1.c0, rt0.c1)) AND ((t0.c0, '', rt0.c2))) ELSE rt0.c0 END) ORDER BY 0x3a8c3465  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0)OR(v0.c0)) THEN (((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN (('298098072', vt1.c0, rt0.c1)) AND ((t0.c0, '', rt0.c2))) ELSE rt0.c0 END) IS TRUE)  as count FROM v0, rt0, vt1, t0 ORDER BY 0X3a8c3465  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (LOWER(v0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(v0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (LOWER(v0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(v0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (LOWER(v0.c0 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 THEN x'' ELSE v0.c0 END COLLATE RTRIM) ORDER BY (~ ((NOT (v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN x'' ELSE v0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY (~ ((NOT (v0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 THEN x'' ELSE v0.c0 END COLLATE RTRIM) ORDER BY (~ ((NOT (v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN x'' ELSE v0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY (~ ((NOT (v0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 THEN x'' ELSE v0.c0 END COLLATE RTRIM) ORDER BY (~ ((NOT (v0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM v0, rt0, t0 WHERE (json_quote((t0.c0 IN (t0.c0)))) ORDER BY (~ ((rt0.c0 IN (rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_quote((t0.c0 IN (t0.c0)))) IS TRUE)  as count FROM v0, rt0, t0 ORDER BY (~ ((rt0.c0 IN (rt0.c2)))) ASC  NULLS LAST);
SELECT ALL * FROM v0, rt0, t0 WHERE (json_quote((t0.c0 IN (t0.c0)))) ORDER BY (~ ((rt0.c0 IN (rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_quote((t0.c0 IN (t0.c0)))) IS TRUE)  as count FROM v0, rt0, t0 ORDER BY (~ ((rt0.c0 IN (rt0.c2)))) ASC  NULLS LAST);
SELECT ALL * FROM v0, rt0, t0 WHERE (json_quote((t0.c0 IN (t0.c0)))) ORDER BY (~ ((rt0.c0 IN (rt0.c2)))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(t0.c0 COLLATE NOCASE AS REAL) FULL OUTER JOIN t0 ON ((v0.c0)&(((rt0.c1) IS FALSE))) FULL OUTER JOIN v0 ON vt1.c0 WHERE (((v0.c0) NOTNULL)) ORDER BY ((((((vt1.c0))==((rt0.c1)))))<=((x'fbd2'))), RTRIM(((rt0.c0)<<(rt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOTNULL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(t0.c0 COLLATE NOCASE AS REAL) FULL OUTER JOIN t0 ON ((v0.c0)&(((rt0.c1) IS FALSE))) FULL OUTER JOIN v0 ON vt1.c0 ORDER BY ((((((vt1.c0))=((rt0.c1)))))<=((x'fbd2'))), RTRIM(((rt0.c0)<<(rt0.c0)))  NULLS FIRST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(t0.c0 COLLATE NOCASE AS REAL) FULL OUTER JOIN t0 ON ((v0.c0)&(((rt0.c1) IS FALSE))) FULL OUTER JOIN v0 ON vt1.c0 WHERE (((v0.c0) NOTNULL)) ORDER BY ((((((vt1.c0))==((rt0.c1)))))<=((x'fbd2'))), RTRIM(((rt0.c0)<<(rt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOTNULL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(t0.c0 COLLATE NOCASE AS REAL) FULL OUTER JOIN t0 ON ((v0.c0)&(((rt0.c1) IS FALSE))) FULL OUTER JOIN v0 ON vt1.c0 ORDER BY ((((((vt1.c0))=((rt0.c1)))))<=((x'fbd2'))), RTRIM(((rt0.c0)<<(rt0.c0)))  NULLS FIRST);
SELECT * FROM t0, vt1, rt0 WHERE (NULL) ORDER BY (((~ (vt1.c0)))>(((rt0.c1) ISNULL)));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY (((~ (vt1.c0)))>(((rt0.c1) ISNULL))));
SELECT * FROM t0, vt1, rt0 WHERE (NULL) ORDER BY (((~ (vt1.c0)))>(((rt0.c1) ISNULL)));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY (((~ (vt1.c0)))>(((rt0.c1) ISNULL))));
SELECT * FROM t0, vt1, rt0 WHERE (NULL) ORDER BY (((~ (vt1.c0)))>(((rt0.c1) ISNULL)));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON ((((v0.c0)+(rt0.c2)))&(rt0.c1 COLLATE RTRIM)) FULL OUTER JOIN vt1 ON (((NOT (0.31309094697227113)))<<(((x'2b0c4edb')>(t0.c0)))) LEFT OUTER JOIN t0 ON CASE rt0.c1 COLLATE BINARY  WHEN UNLIKELY(v0.c0) THEN v0.c0 COLLATE NOCASE END WHERE ((~ (ABS(DISTINCT rt0.c0)))) ORDER BY ((((vt1.c0)OR(t0.c0 COLLATE BINARY)))OR(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(rt0.c2)))OR(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (ABS(DISTINCT rt0.c0)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((((v0.c0)+(rt0.c2)))&(rt0.c1 COLLATE RTRIM)) FULL OUTER JOIN vt1 ON (((NOT (0.31309094697227113)))<<(((x'2b0c4edb')>(t0.c0)))) LEFT OUTER JOIN t0 ON CASE rt0.c1 COLLATE BINARY  WHEN UNLIKELY(v0.c0) THEN v0.c0 COLLATE NOCASE END ORDER BY ((((vt1.c0)OR(t0.c0 COLLATE BINARY)))OR(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(rt0.c2)))OR(v0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON ((((v0.c0)+(rt0.c2)))&(rt0.c1 COLLATE RTRIM)) FULL OUTER JOIN vt1 ON (((NOT (0.31309094697227113)))<<(((x'2b0c4edb')>(t0.c0)))) LEFT OUTER JOIN t0 ON CASE rt0.c1 COLLATE BINARY  WHEN UNLIKELY(v0.c0) THEN v0.c0 COLLATE NOCASE END WHERE ((~ (ABS(DISTINCT rt0.c0)))) ORDER BY ((((vt1.c0)OR(t0.c0 COLLATE BINARY)))OR(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(rt0.c2)))OR(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (ABS(DISTINCT rt0.c0)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((((v0.c0)+(rt0.c2)))&(rt0.c1 COLLATE RTRIM)) FULL OUTER JOIN vt1 ON (((NOT (0.31309094697227113)))<<(((x'2b0c4edb')>(t0.c0)))) LEFT OUTER JOIN t0 ON CASE rt0.c1 COLLATE BINARY  WHEN UNLIKELY(v0.c0) THEN v0.c0 COLLATE NOCASE END ORDER BY ((((vt1.c0)OR(t0.c0 COLLATE BINARY)))OR(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(rt0.c2)))OR(v0.c0))))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (LIKELY(DISTINCT ((vt1.c0) BETWEEN (vt1.c0) AND (0X3a8c3465))));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((vt1.c0) BETWEEN (vt1.c0) AND (0X3a8c3465)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (LIKELY(DISTINCT ((vt1.c0) BETWEEN (vt1.c0) AND (0X3a8c3465))));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((vt1.c0) BETWEEN (vt1.c0) AND (0X3a8c3465)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (LIKELY(DISTINCT ((vt1.c0) BETWEEN (vt1.c0) AND (0X3a8c3465))));
