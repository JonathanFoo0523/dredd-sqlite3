-- Time: 2024/06/09 23:54:48
-- Database: database53
-- Database version: 3.40.0
-- seed value: 4207558853
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (NULL); -- 0ms;
VACUUM; -- 1ms;
INSERT OR REPLACE INTO rt0 VALUES ('J8u*Dj?}', 0.7765244426112285, ''); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1) VALUES ('ht-g', x''); -- 0ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1894372489 noskipscan'); -- 5ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-400133003 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-9223372036854775808'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-400133003 0 sz=-1214842928 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 -86065657 sz=-86065657 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2138426437 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((HEX(DISTINCT x'1ef7'))|(('-1334459010' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1334459010 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x'5cb424d9'  WHEN x'bd91' THEN '0.7765244426112285' END)||(((NULL)=(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1214842928'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1894372489 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1200438025'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(x'16f8' AS BLOB) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((1.894372489E9)AND('')))AND(x'')))AND(0.7765244426112285)))AND(NULL)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -282671582 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.7552739486862288)) NOT BETWEEN ((((((NULL)OR(0.7765244426112285)))OR('ht-g')))) AND ((((2136731066) IS TRUE)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=914627702 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-400133003 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=595632834 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-86065657'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 sz=105235478 unordered'); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1149476099 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((NULL)) NOT BETWEEN ((x'')) AND ((x''))))OR(((((0.5053839217944436)OR(NULL)))AND(0Xffffffff9e60ef4a)))))AND(((0Xffffffffe8267475)IS NOT('M')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '14731259 0'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (CAST('-400133003' AS BLOB) IN (NULL COLLATE NOCASE, '')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=958768443 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1066064062'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (~ (CAST(NULL AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.24839731567667378; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -1543061382 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 0 sz=1473440114'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-301358938 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-330050179 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '237255496 -1578553384 sz=-1214842928 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) NOT BETWEEN (('-1937800446')) AND ((x'8668'))))GLOB(((0Xfffffffffadebe07)%('s')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((((((x'')AND('237255496')))AND('h8a')))AND(0.5612026833943786)))AND(NULL))  WHEN '' COLLATE NOCASE THEN (('')>('C')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('0.7552739486862288') BETWEEN (NULL) AND (-1.937800446E9)))OR(('' IN ()))))AND(NULL COLLATE NOCASE)))AND(((((x'')OR(NULL)))AND(NULL)))))OR(LTRIM(NULL, 0.8650047442650354))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-983435879')&(0x16b3b342)))/(((0.02972478999231143) NOT BETWEEN ('958768443') AND ('-400133003')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((0.8407109331750959)OR(5.95632834E8)))OR('-2059864013')))AND((0.6928169972751005 IN ()))))AND(((NULL) IS TRUE))))OR(CAST(x'' AS NUMERIC))))OR(LIKELIHOOD('Ufqh*0FE*', 0.27089342861971855))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-330050179'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((((((((((((x'73f2')OR(0.7281998653333105)))OR(NULL)))OR('-301358938')))OR('0.7281998653333105')))OR('1647317187')))OR(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE 0X73361b0c  WHEN '-1826847034' THEN 0Xffffffffb1c5a87a WHEN x'' THEN '14731259' WHEN '2138426437' THEN '1-500000' END AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1204853565'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1288008530 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (+ ((((',p', x'', '1198197895'))<>(('-0.0', NULL, '775284143'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1807634622 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-934648136')GLOB(''))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-526414311 sz=-2092404934 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=775284143'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1566931679 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=583219402 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (0.37273145704786237)))+((0x53fc1223 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1932925708 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1312446342 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.4001456098087499; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1204853565 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1359518637'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1937800446 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5060658392708873)IS NOT(x'')))<>(x'' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN TRIM(0.5353099342453386, NULL) THEN x'0815' ELSE ((0xffffffffc84a66b8) IS TRUE) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((((((('')OR(0.1832480852339715)))AND('-1176073550')))OR(x'')))AND(x'd4f8')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE highlight(((NULL)LIKE(0.25524842075896537)), x'', ((('-1578553384')) NOT BETWEEN ((-1797932106)) AND ((x'182c'))), CAST(0.8650047442650354 AS BLOB)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.8863400074487995))<=((x''))))>((- (1440458893)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((~ ('')) IN (((x'') NOT BETWEEN ('E') AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1479292573'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1647317187 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1883080292 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.8394070157429379)) NOT BETWEEN (((0.40473231622321126 IN ()))) AND ((((NULL)<=(''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF((0.3020281695957292 IN ())); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1797932106 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1520196032 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('1114145874')IS NOT('-868899776')) THEN ((x'5d97') NOT NULL) ELSE CASE 'Pgsod'  WHEN 0.23281756816246213 THEN 849084024 WHEN NULL THEN '-14068609' WHEN 0.02972478999231143 THEN -1.359518637E9 ELSE 166103562 END END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1578553384')||((('\n*')IS('-1176073550')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2008489093 -978530088 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=746865496'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2135059137 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=595632834 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-330050179 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL) NOT BETWEEN (NULL) AND ('')))AND(0.5060658392708873)))OR(('k&V90l&g' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('A' AS REAL))-(COALESCE(1.883080292E9, NULL, 0xffffffff825188a1, NULL))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1942931344 unordered noskipscan'); -- 2ms;
DELETE FROM sqlite_stat1 WHERE (((((0x3e731de2, 0.6364855956891345, '0.23281756816246213'))<(('', NULL, x'')))) NOT BETWEEN ('1114145874' COLLATE BINARY) AND (load_extension(0.6364855956891345))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((load_extension(NULL, x'2145')))>((CASE NULL  WHEN '1qf' THEN '-1006887704' END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((541288391) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1176073550 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-185990683 sz=-2059864013 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1006887704 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1932925708 -1882401817 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1942931344 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2136731066 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE NOCASE)IS(0.5040550630596375)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((- (x'')))OR(((x'6580')|(NULL)))))AND((NOT ('~t[')))))AND(('0.5060658392708873' IN ('-178037565', '')))))OR(CAST(NULL AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-1006887704'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ROUND((x'' IN (-1.7976931348623157E308)), CAST(x'ef33' AS TEXT)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1951736931'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((197466290) NOT NULL))<>((~ (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2080493143 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELY(x'36617471'))>>(-1644426951 COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '595632834 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (+ ('-1534579339'))  WHEN ((x'') BETWEEN (x'') AND (-3.01358938E8)) THEN (((0.7428161566818422))<((x''))) WHEN ((x'7cb6') NOTNULL) THEN (((x''))<=((0.06688006100122634))) WHEN (((0.004521520015894898)) BETWEEN ((0)) AND ((NULL))) THEN x'' WHEN x'' COLLATE BINARY THEN ((((x'')OR('-1534579339')))OR('1+E')) WHEN ((((NULL)AND('-1125889120')))OR('.R')) THEN (('')<=(0.7552739486862288)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1566931679') IS FALSE)))>(((((x'', x'', '-610817579')) BETWEEN ((x'', 0.5894194891211666, NULL)) AND ((0.028999561021412767, '', x'')))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 11952228 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.7130607116135173, 0X467e3101, 0.1034296008862583)) BETWEEN (((NOT (x'')), (((('519452021')AND(0.29820033470537655)))AND(NULL)), (0xffffffffa1e92fd8 IN ()))) AND (((('-1520196032') NOTNULL), ABS(DISTINCT x'5a49'), CAST(x'' AS BLOB)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1487170190 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1566931679 sz=-282671582 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((((421463289)) BETWEEN ((0.7481702997312867)) AND ((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'22e8') BETWEEN (0x3f0ff5d5) AND (0.4466059777230329))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0xffffffffa086c320; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((((0Xffffffffcf62ae7b)OR('')))AND(0.27789557600678194)))AND(0.5053839217944436)))OR(0.4328864325047602)))AND(0.030423231239635307)))OR('456683515')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=775312580'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1431918051 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN (NULL, x'')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (NULL) AND (x''))) NOT NULL); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE WHEN NULL THEN 0.6861359113966059 END  WHEN ((0.3624520273250089) NOT BETWEEN (0.10502477549391931) AND (NULL)) THEN CAST(x'4c23' AS TEXT) WHEN (- ('')) THEN (('|w')>=(x'8e81')) WHEN (('Lg') NOTNULL) THEN ('0.8650047442650354' IN ()) ELSE ((NULL) BETWEEN (0.8394463381574896) AND ('0.8394070157429379')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1719320983 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1719320983 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1391967657 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=14731259'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (IFNULL('', x'') IN (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=775312580 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '265522167 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1647317187 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '597711309 sz=1509136770'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)-(0.9989414652255313)) IN ()); -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1513598719 0 sz=-509170593 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-2108585823 sz=-2054900393 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL) NOTNULL))OR(TRIM(DISTINCT x'e562'))))AND(((((x'')OR(NULL)))OR(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1915663034 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-991083793 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CAST('994986767' AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2138426437'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY((((NULL))=((0X3a68ab9a)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-9223372036854775808'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1648408417 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1954179933'); -- 3ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (1.409028643E9 COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1719320983'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.533950298472583)IS('')))LIKE(UPPER(DISTINCT 'WF%\rs\nj'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN NULL END) BETWEEN ((x'' IN ())) AND ((('[sKQ&') BETWEEN (x'') AND ('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-225445752'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOTNULL)) BETWEEN (((x'') BETWEEN ('') AND (-1.7976931348623157E308))) AND (((0.4751682605227713)=('0.5894194891211666')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT ((0.4327723483521668)>(x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((DATETIME(NULL, -444544420, NULL)) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2112157540'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1534579339 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2018641146 sz=-1797932106'); -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL) IS TRUE)  WHEN ((0.8757551560104295)IS(979938202)) THEN ((NULL) NOT BETWEEN (NULL) AND (0.4626244393349215)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1623778761 0 sz=-934648136 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((('k&V90l&g')OR(x'')))OR('1198197895')))AND('2061799714')))OR('s')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-659424280 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1431918051') BETWEEN (x'') AND (x'73f0'))) NOT BETWEEN (x'' COLLATE BINARY) AND (ABS(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1513598719 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1915663034 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '942866132 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1227987425 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-185990683 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 2 sz=503741223 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-751718481')OR(x'')), ((('1602796427'))<>((''))), -4.00133003E8 COLLATE BINARY))==((CAST(NULL AS REAL), NULL COLLATE NOCASE, ((NULL)IS NOT(''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1990309427 sz=519452021 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '14731259'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1135125941'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1200438025)<>(NULL)) IN ((x'a865' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.3437614808240249 AS NUMERIC)) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1566931679 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-132980034 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-400133003 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1096956841 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE((+ (0.6238878331770764)), ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-934648136 1361630020 sz=884230220 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'8f86') ISNULL) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2059864013'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ (0x161d4a0a)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'2c339c34') IS FALSE) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1382949219'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNICODE(CASE WHEN x'' THEN 0.6955930578203227 ELSE 0.6258544686837976 END); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((UNLIKELY(0.4387129711460791), ((x'0c3be6f0e3ca') IS FALSE), ((x'3702')<(0Xffffffffd496b2bf))))>=((CASE WHEN 'a䬏<' THEN 0.06453372105371169 END, ((NULL)>(-1.534579339E9)), CAST(0.5894194891211666 AS REAL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN '1719320983' ELSE 0xffffffff9f569b33 END) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=400591298 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1429686276 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-814355484 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-835509761 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '),' THEN 0.9079788974117308 COLLATE RTRIM END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1785523318 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-178037565'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((x'ae11')AND(0.7385122207971346)))AND(0.49093367613783045)), ((504197790)+(x'')), ((NULL) NOT BETWEEN (NULL) AND (0.768215555910946)), ((((((((x'66bf')AND(NULL)))AND(NULL)))AND(0.54593055504815)))OR(-868899776)), NULL COLLATE RTRIM))<>(((NULL IN ()), ((((0x186c6804)OR(NULL)))OR('Ufqh*0FE*')), (((x''))<((NULL))), 0.04104830140733473, CASE 0.6268675398307997  WHEN '1473440114' THEN '0.5053839217944436' WHEN NULL THEN '3.ePg' WHEN '' THEN x'82d1' ELSE NULL END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2011019551 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.02972478999231143, x'73b3776b', '1006576223')) NOT BETWEEN (('', x'', '-1997730664')) AND ((NULL, NULL, 0.9858747641166073))))>=(CAST('-563743917' AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1427812303 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-934648136 2 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1644426951'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-542764096 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=775284143 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -1176073550 sz=597711309 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 1981005836 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=456683515 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(DISTINCT ((0.7194104438625979) BETWEEN (x'') AND (-1312446342))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=300016457 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1705656457'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0xffffffff81c55872 COLLATE NOCASE) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1161914606'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE ABS(DISTINCT 0.4327723483521668)  WHEN (('1129000752')OR('-1797932106')) THEN (NOT (x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-185990683 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1636202578'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(CASE ''  WHEN '-178037565' THEN x'' ELSE x'1bc4' END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1719320983 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-686772586 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((~ ('B_6UH')))&(((x'')IS NOT('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1114145874 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', '?댟', x'')) NOT BETWEEN ((SQLITE_VERSION(), (('Ufqh*0FE*') ISNULL), MIN('793626602', '-1464628199'))) AND ((((('-1312446342', NULL, '958768443')) NOT BETWEEN ((-189562645, '⁃a%+]t', '[V')) AND (('zK㄁<2J!-e', NULL, NULL))), (0.1317345606306375 IN (1.719320983E9)), (((0Xffffffff80ebdb95))<=(('c5,-T')))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-983495504 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1223348144'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1072725960 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2033190885 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-14068609 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('977879904' COLLATE BINARY) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1011899305 unordered'); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 642481410 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL, '979938202', 0.536139633531437))<((0X360c8b42, 0xffffffff9a423b84, x''))), ((0.27813866217745564)>=(NULL)), ((x'e6dbc4cf') BETWEEN (x'') AND ('Dxw')), (((0.5572985171365791))>=((x'2a7d'))), (NOT (x''))))>=((((0.9552052847793492) NOT BETWEEN ('-1190048019') AND (x'')), (((NULL))>((' U'))), (((('411369158')OR(0Xffffffff810b48e2)))OR(')')), ((0.6850062173175396)%(-1.359518637E9)), ((((x'')OR(NULL)))OR(''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-868899776'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=438591601 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=197466290 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '446004443 sz=-672017120 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=28704484 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1740425059 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.403137834536048) BETWEEN ('') AND (NULL)) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (NOT (0.6989316283782007))  WHEN (((NULL))<(('L.piz3F\ns'))) THEN ((('', NULL, NULL)) BETWEEN ((1.058010581E9, ',p', -138452004)) AND ((x'2aff', NULL, x''))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1634593185'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-991083793')+((- (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 1942931344 sz=1846600346 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1750734764 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '583219402 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-167654044 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS REAL))<=(0.1832480852339715)); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)>>(x'7349af09' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UNLIKELY(NULL)) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1901814064 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT (((1.894372489E9, '-1214842928', 0.5185270074871275)) NOT BETWEEN ((x'', 'd''', x'')) AND ((NULL, x'', '?댟')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('Po') BETWEEN (x'') AND ('jJ,')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '105235478 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('BW' AS TEXT) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1101083980 -1954179933 sz=775312580 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-626007978 -94877235 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=566068638 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)*('0.8407109331750959'))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE BINARY)!=(('-1727982359' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.032594084454718786 COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((SQLITE_SOURCE_ID()))=(((~ ('C虤g	d.'))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=911898492 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=914627702 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN (((x'' IN ()))) AND ((SQLITE_COMPILEOPTION_GET(0Xffffffffc4ed42ef)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) IS FALSE) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2138426437 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1114736955 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS BLOB)) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.44881599023382734 IN (351055606))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'a4df'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1556150037 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((x'')||('-1520196032')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '6'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x''))>=(('0.9858747641166073'))) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((('1茣iw㣊L袡'))>=((x''))))OR((('1z倪\nR+') NOT BETWEEN (x'') AND (0x6a621343)))))AND((((('0.4327723483521668')AND(NULL)))AND(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-301358938 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (NULLIF(1005745002, x'f5fc10ee'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=421463289 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-453597198 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2015705416'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=328987701 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_object(((-1.566931679E9) NOT NULL), (('-1313210792')+(NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((('1LPH>\n.d')>>('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-364334142 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST(541288391 AS INTEGER)))!=(((('0.030423231239635307')>=(x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=268287928 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=2080493143 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((((x'')OR('')))OR(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '11952228 sz=-1994441580 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')AND('P*RzRow0쐖')))OR(x'29f3')) COLLATE NOCASE COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '729259583 597711309 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1114145874') IS FALSE))LIKE(((0.37273145704786237) NOT BETWEEN (NULL) AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-661626093 sz=1905136781 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1594196374 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=321662650 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UPPER(DISTINCT 'c\\&S9태m'))GLOB(('20198610' IN (-1480208260)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1537051549 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ('')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('0.536139633531437') NOT BETWEEN (x'fc9e') AND ('1193375326')))OR(((968887868)|(2.65522167E8)))))AND((('-77444397') BETWEEN (0.48587865961115506) AND ('14567978')))))OR(((x'925f') NOTNULL))))OR(x'10730c92')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')) NOT BETWEEN (('|w')) AND ((0.3917422822372263))))+(((x'')>('1942931344')))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((~ (NULL)))+((((0x35911ace, x'be31', x'')) NOT BETWEEN (('!䏐\nm)_N', 0.536139633531437, x'')) AND ((x'30e4', NULL, -955239700))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1o3瑵f0Z\r', 'Y\a Cd5', '-1214842928')) NOT BETWEEN (((((x'')) NOT BETWEEN ((NULL)) AND ((NULL))), json_object(NULL, 0.30893409978773356, '1245631507', NULL), (('-1797932106')*('!Z%<')))) AND ((((0.1967505900290374)*(0x22348370)), '2008489093', (('-444544420')|('-1149476099'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN (CASE x'f59f'  WHEN NULL THEN 0.7284947595587807 END, ((('-1596235645', NULL, x'ed58')) BETWEEN ((2066112026, 'K4', NULL)) AND (('', NULL, NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1494118918 sz=495632926'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-2054900393 sz=-1550657769 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '366564616 sz=760107010 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') BETWEEN ('-526414311') AND ('')))>=(((('775284143', '1352857623', 0.5642339951186723, '-1859316139', 0.4091145379863722))<=((x'', 0.7931263290677196, NULL, '', '-1976325451'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1187873199 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.4276218942063884 COLLATE RTRIM AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((1.114145874E9)!=(((1.66103562E8)!=(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2007161998'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((541288391)/('?Mi')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1508435214'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 4 sz=-1693019429'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1338003330 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-221145181 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1312446342 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-773404070 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1391967657 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 187486684 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-388103082 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE rtreenode((1474619152 IN (0.5809650980512178)), ((NULL) BETWEEN ('1927077828') AND (0.2756570405925496))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1544719598 sz=1066064062 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1494390735')<(''))) BETWEEN ((('-2108585823') NOT BETWEEN (NULL) AND (''))) AND ((('') NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 829556668 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 1647317187 sz=1894372489'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-991083793 sz=-1853908218'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('166103562')<=('-2054900393')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1841174780 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(NULL))AND(((x'cb45')>=(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2145194030'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -1396584230 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=809437176 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=197466290'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=0'); -- 2ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT (+ (-1.937800446E9))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') ISNULL)) NOT BETWEEN (CASE WHEN 0.3020281695957292 THEN x'45c5' WHEN '*ZLZDyW쒬' THEN '197466290' WHEN x'' THEN '-407156240' END) AND ((((NULL))<((''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE BINARY)<<((('') BETWEEN (x'') AND ('''.')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1204853565 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1543061382 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-301358938 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL COLLATE RTRIM IN ((((-101799480))>((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-414054365 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1736609582 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((+ ('?')) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('1') BETWEEN (NULL) AND ('-1973300692'))  WHEN ((((x'5a87')AND('')))OR('')) THEN (((0X3925a53b, 0.9673496465091471, 0.5608235494814009)) BETWEEN ((2.138426437E9, 1.391967657E9, -1.48717019E9)) AND ((x'', '5)', 0.24839731567667378))) WHEN 0.7654235188779085 COLLATE NOCASE THEN CASE WHEN NULL THEN x'' WHEN NULL THEN '421463289' WHEN x'' THEN 0x4fc8e043 WHEN 0.4751682605227713 THEN NULL WHEN x'' THEN NULL ELSE x'' END WHEN CAST(NULL AS REAL) THEN ('' IN ()) ELSE ((0.7824516141763475)<('-1534579339')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.9904146620262044)AND(NULL)))AND('')))OR((-9.83435879E8 IN ()))))OR(CAST(NULL AS NUMERIC))))OR((('1647317187')>=(-951046631)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1176073550 -1246567667 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1579437521'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1616034907 -934648136 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN x'362a' THEN 0.7725444157826299 END)AND(TYPEOF('0.54593055504815'))))AND((- ('pgsod')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('')))==(NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('{cK')) BETWEEN (('1066064062')) AND ((CAST(NULL AS REAL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')OR(NULL)))OR(0.4378178682203894)))&(((-1.644426951E9)IS NOT(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((DATETIME('-325705571', 0.4136887641754261, NULL)) BETWEEN (TRIM(DISTINCT -1.543061382E9)) AND (((0.2724205440828441) BETWEEN (NULL) AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('鐿')) NOT BETWEEN (((('775312580')LIKE('?Mi')))) AND ((('-444544420' IN (''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1051743098 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LTRIM(1288008530))==(((((0.4587942784637802)AND(NULL)))OR('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1601780960')) NOT BETWEEN ((NULL)) AND ((x'')))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-2060540821 sz=1676102316 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE NOCASE)&(((((((((0.3929960077811898)AND('-301623075')))AND('ὍUg0Xbj|g')))AND(x'')))AND(0.9858747641166073)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((LTRIM('5)', NULL)))==((NULLIF('-1520196032', x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1372436168'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1799956346 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1797932106'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2031983479'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS BLOB)) BETWEEN ((('2138426437')LIKE('5{HVF\n+'))) AND (((224283526) ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN '210557969' THEN '' ELSE -317553524 END AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-995161362 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) NOT BETWEEN (x'') AND (x'')) AS REAL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=583219402 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(x'' AS TEXT) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -978530088'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=853951864 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(((0.6262956385600102) IS TRUE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1797932106')>=('')))=(CASE '1509136770'  WHEN NULL THEN 0.203204187679073 WHEN 1.719320983E9 THEN '1182675201' WHEN x'' THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.34968164038406646)=(x'')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-750976626 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.10502477549391931) IS TRUE))<=(CAST(-1.534579339E9 AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN 0.4136887641754261 THEN 2.138426437E9 WHEN '2112784442' THEN NULL WHEN x'' THEN x'' ELSE '-690011585' END) BETWEEN ((x'2e3666ea' IN ())) AND ((+ (0X9e68a0a)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-206923626 sz=1274535426'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT (('PAlX/&%')/('锿')), '228275617'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (NOT (NULL)) THEN (('984081354')>>(0xffffffff825188a1)) ELSE ((((x'')AND(x'')))AND('uh')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1000839154 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.5053839217944436  WHEN '265522167' THEN 0.6362773091735642 ELSE 0.8179005651099771 END)>=((('')-(0.1317345606306375)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE -1520196032  WHEN NULL THEN x'bdf6' END)%(((x'') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2138426437 0 sz=1288008530 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 1807634622'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-859324530 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN ('Q') AND (NULL)))*((NOT (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'J -'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TYPEOF('0.7765244426112285')) NOT BETWEEN (STRFTIME(x'2002', 0.030423231239635307, x'8422')) AND (highlight(0.49736787539204597, NULL, 'T\rB', 0.5894194891211666))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.909285743481345)) NOT BETWEEN (('0.5608235494814009')) AND (('958768443'))))LIKE(((NULL) ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN 0.361550264233932 THEN -1.17607355E9 WHEN '-389962143' THEN 0.8863400074487995 WHEN '' THEN '0.7725444157826299' END) BETWEEN (((0.26215822568855096)IS NOT(0.883409273639841))) AND ((('-1882401817')<(-180297574)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2008489093 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1124535549 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF((((0xffffffffa7d3c963, NULL, '톀8'))>=(('-1543061382', NULL, -826660057))), CAST(NULL AS TEXT)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=811239077'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL, 5.83219402E8, '-1522802838')) BETWEEN (('ὍUg0Xbj|g', x'95e2', x'c5dc')) AND ((0.3053966087165051, NULL, NULL))))+((('914627702')GLOB(0.31754257266448294)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.5688200089889504)<<(-9223372036854775808))  WHEN (- (NULL)) THEN ((NULL)LIKE('5)')) WHEN (0.7284947595587807 IN ()) THEN ((-289853815)==(x'6db0')) WHEN (((0.9183439284278427, x'', '0h>6Za')) BETWEEN ((x'234b', 0x5af4242e, x'724c')) AND ((x'2ef8', 0.8667687705596134, ''))) THEN (((NULL))<=((0.13150300668359038))) ELSE x'b8a0' END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1953527485'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1646083741 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1122190616 sz=826058944'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN ((CASE WHEN '1518906961' THEN 0.2568805731638709 ELSE x'' END)) AND ((CASE 0.3624520273250089  WHEN x'' THEN 1.182675201E9 ELSE '-1329173994' END))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS BLOB)) NOT BETWEEN (((NULL) IS FALSE)) AND (x'9b8f')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'af71')LIKE('-728021020')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=166103562 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1543061382'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=615791921 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)AND(0.23281756816246213)))OR(2.008489093E9)) IN ((((0.03776676434266335)) NOT BETWEEN ((-266782982)) AND ((0.8032847838575007))), CAST(x'' AS TEXT), (0.18818544214244992 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE PRINTF((('-1118795111')IS NOT(x'')), ((2046252214)<=(0.4785065936063251)), -2.25445752E8 COLLATE BINARY); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (('-2064119335' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(0.9370033888484238 AS NUMERIC) IN ((((-1.7976931348623157E308)) NOT BETWEEN (('鐿')) AND ((x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1359518637 sz=1914779268 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1943237073 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=265522167 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (NULL IN ()) THEN ((((3.80875586E8)AND('595632834')))AND(x'287a')) ELSE (('-1915663034') NOT BETWEEN (0.567462072524081) AND ('F|KecMb')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1004366097 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((~ ('piQN-<')))OR(CASE '	|'  WHEN '1288008530' THEN '' END)))AND(((NULL)AND(x'7fef')))))OR(CAST(958768443 AS TEXT))))AND(((((((((0.533950298472583)AND(x'')))OR(x'')))AND(0.9714372295460216)))OR(0.026827907493586434)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=257948710 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('D3' IN ()))OR(0.879572804034638 COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1662083921 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('qz')-('*!')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1937800446 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1518890242 -1913512187 sz=695659125 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-14068609'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN ('쌊0') AND (5.41288391E8)))!=(((NULL)*(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1198861731 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_object(((1391967657) BETWEEN (x'ed90') AND (0.8945002657047656)), (((('958768443')OR(NULL)))AND(NULL)), ((x'')IS NOT(NULL)), NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (('-597703095' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOT NULL) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-714070515 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE DATE(x'' COLLATE NOCASE, ('s,3I' IN ('0.8394070157429379')), ((0.5053839217944436)>=(0.10215147389289903)), CASE x'0794'  WHEN x'' THEN NULL END, (('-225445752')IS(NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)IS(0.530006505638502))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN 's3M' THEN '' END AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1837329929'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1.7976931348623157E308, '-509170593', NULL)) BETWEEN ((0.6731050512067052, 0.9540970888334839, '-934648136')) AND ((0x487dcfe0, NULL, NULL))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2092404934 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '189041963 sz=593211791 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.3876375348749034; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.3839565062320214) BETWEEN ('') AND ('KW6pX')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1482548930'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2143840696 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0x79b7120c) IS FALSE) COLLATE NOCASE COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1673953791 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-113182066 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-151100456 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1815668117 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS NUMERIC) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1149476099 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1656848204')) BETWEEN ((0Xffffffffcc35a440)) AND ((0x73361b0c))))<=((((x'', '0.10502477549391931', '?uue糨r['))!=((NULL, 0.7796199351616581, 0.3080468216583445))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 sz=-576005311 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN 0.16476892106649854 ELSE NULL END) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('c\\&S9태m') NOT NULL) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('237255496'))) NOT BETWEEN (((x'')IS(NULL))) AND (CASE WHEN x'd618' THEN '-2054900393' ELSE '93157796' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-526414311 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1981275925'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.8768760732611446 IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-20976537 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '166103562 2 sz=1786807440'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '350674050 1653472932 sz=123084293 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE x'fe09'  WHEN 0.18221401489110212 THEN 0.6242056635229819 ELSE 'c虤g	d.' END)AND(((('', NULL, x''))>=((NULL, 0xffffffffd75bff3e, 'O'))))))AND(((('-', NULL, NULL))<=(('),', x'd184', 0.23420192817863517))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1154989286 1883080292 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((-1.85990683E8)AND(NULL)))AND(0.31633242468026357)))AND((((NULL, '713687574', 0.2977902013512439))<((NULL, NULL, 0.09808136720667782))))))OR(((583219402)AND(0.24188920344694553)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'c9da')) NOT BETWEEN ((x'a22e')) AND ((1819718682))))||(((0.7600736128322134) NOT NULL))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=265522167 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.6850062173175396; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.4626244393349215 AS REAL)) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2059179825 sz=1567805407'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1015394741 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULLIF(DISTINCT NULL, x'4a34'))AND((NOT (NULL)))))OR(('Xgh61G迳uj' IN (5.97711309E8)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((IFNULL('UF', '1198197895'))||((('US')>>(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=775312580 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((('')|('-185990683')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-201567656 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-522783259 sz=-983435879 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=499437105 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 674692628 sz=836748566 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1601780960 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '505634086 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.7975038866602513)<<(x'')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (0.6479272044692336 IN ())  WHEN ((x'') NOT BETWEEN ('595632834') AND (0.6255585047232026)) THEN (((x''))<=((x'7be6'))) ELSE ((1300966066) NOT BETWEEN ('ufqh*0fe*') AND (x'48e2')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1885608910 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1487170190 sz=-1543061382 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1711941915 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(LIKELY(DISTINCT x'') AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-610817579 2 sz=1895990430'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-845149492 64656348 sz=-2111749078 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-1520196032 COLLATE RTRIM)LIKE(((x'5770') BETWEEN (0.7200102299100267) AND (0X3638fd1a)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL IN (NULL, 0X623010c3)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((0.10502477549391931)OR('943735839')))AND('1066064062')) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-479709885 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-1779734581'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(((0.03351379103841601)LIKE('2136731066'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=881024798 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1954179933')) NOT BETWEEN (((('0.7552739486862288')<<('')))) AND (('B㱎t' COLLATE NOCASE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=406313621 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(x'' AS REAL) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-122849552'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('380875586' IN ()))|(((x'13fe24cb') NOT BETWEEN ('-191741641') AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1504247989 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '2008489093'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-86065657 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-301358938 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'' IN (1.066064062E9))))=(((((('0.6268675398307997')OR('-2071905399')))OR('aH'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 2026524000 THEN 0.3751763814169883 ELSE NULL END)||(CAST('2080493143' AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1669298753 -1738599963 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=439032619 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((((NULL)OR(0.45705036604628435)))AND(-90670115)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((x'')OR(x'd3a7')))OR(0.5990824283833316)))AND(0.02656550101957955)))OR(NULL)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2092404934 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-877179095 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2080493143 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json(COALESCE(DISTINCT '1942931344', NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-593011739 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '958768443 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL COLLATE RTRIM, (((((((('1200438025')AND(0.7285381803458209)))AND('+')))OR('R漺<GCs')))AND('')), '' COLLATE RTRIM))<(((- (NULL)), NULL COLLATE RTRIM, ((NULL)OR(-1.17607355E9))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1937800446 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CAST(0.0032016617760727284 AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((0.362701480794273, 'i nw*bF', '-1613517040')) NOT BETWEEN (('}?MLuVh', x'', '')) AND ((0.7828130157186249, x'', 'Vm6w'))))OR(CASE '-494238446'  WHEN 0.4002365818842136 THEN -1125889120 WHEN 'p1F%Z' THEN NULL WHEN 'j%' THEN '-114360824' ELSE '1794229935' END)))OR(((('1198197895'))!=((x'542d581f'))))))OR((((('380875586')AND(1.807634622E9)))AND(0x5183a2a1)))))AND(CAST(x'' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1932925708 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=884167536 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -0.0; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'312e' IN (x''))) BETWEEN (NULL) AND ((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1190404380 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1278706634 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'4bcb' COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ())) NOT BETWEEN ((('-1259887839') ISNULL)) AND ((((NULL)) BETWEEN (('-59838421')) AND ((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CASE '-2016082166'  WHEN -9.34648136E8 THEN NULL ELSE '恤ei\n' END)OR('N7c_' COLLATE RTRIM)))OR(((((NULL)OR(84736279)))OR(x'eca7')))))OR((0.8497943196877271 IN ()))))AND((('-1907668815')==(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=415598260 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1462457643 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=665987692 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.3981939071220094 IN (0.12026529642391781)))IS NOT(0Xffffffff8dd41c0a COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-2114826967 sz=931667782 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL)%('-143911951')) THEN x'' COLLATE BINARY ELSE RTRIM('-1204853565') END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((('597711309')AND(NULL)))OR(0.14849316037625282)) THEN STRFTIME(NULL, 0.7939683840430988, NULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=9223372036854775807'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(x'ed4b' AS BLOB) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '-1954179933' THEN x'' END) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1334459010 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (0x329bfe78)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((HEX('KOQ'))IS((((0.9481504439307097))<=((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (INSTR(0.6943460229906729, '0.48587865961115506') IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 1058010581; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1439643779 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1558955040 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1058010581 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TIME(NULL, x'', '-927080231', 'zA', '') COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(DISTINCT x'' COLLATE NOCASE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) ISNULL))=((NOT (0.4364457177234694)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 sz=-1006887704 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-14059414 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '105235478 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1636057231 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-999976080 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(CASE x'e89e42e7'  WHEN NULL THEN x'' ELSE x'' END, ((((x'')OR('')))AND('-1644426951'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2103690257'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1685670362'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1443078807'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1849988969')||(NULL)))<=(0.1317345606306375)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'a258' AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1324049947 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -2005950920; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL) NOT NULL) THEN (NULL IN ()) WHEN ((0.6727733506268103) BETWEEN ('1917880549') AND (',*gy?')) THEN ((x'') NOT BETWEEN (x'7340') AND ('0.30893409978773356')) WHEN (((0xffffffffee09a0a6, '-781904290', '1814591344')) NOT BETWEEN (('1182675201', 'e*lU', NULL)) AND ((x'f5cc', 0.05979460850942675, 0.5053839217944436))) THEN (('#*')>(-509170593)) ELSE x'' END; -- 0ms;
ANALYZE; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0, c1, c2)=(0.1496817878791893, '-185990683', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST('-185990683' AS REAL))OR(RTRIM(0x64c0b6ac))))AND('P3Ⴣ\l' COLLATE RTRIM)))OR(CAST(0.2760002773366692 AS NUMERIC))))AND(((-3.01358938E8)%(-1882401817)))); -- 1ms;
INSERT OR ABORT INTO rt0(c2) VALUES (1.942931344E9); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1) VALUES ('1096657354', ((CASE NULL  WHEN NULL THEN NULL WHEN '1942931344' THEN 0.004521520015894898 WHEN '2136731066' THEN '_TR\䘬&]' ELSE NULL END)>=(CASE WHEN x'' THEN NULL WHEN 2065527318 THEN '?)ti|' WHEN '-1513598719' THEN '-919310128' ELSE '-466678956' END))), (NULL, 0.04135949172878639), (x'', NULL); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0) VALUES ('?H?'); -- 0ms;
INSERT OR REPLACE INTO rt0(c0) VALUES (NULL); -- 1ms;
UPDATE OR IGNORE rt0 SET (c2)=('3'); -- 0ms;
ANALYZE; -- 1ms;
END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT '1444918949' COLLATE BINARY, ((((NULL)OR('741603588')))AND('J -'))); -- 0ms;
UPDATE OR IGNORE rt0 SET c0=0.8286279336941067 WHERE (rt0.c1 IN (rt0.c1, NULL)) COLLATE BINARY; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=NULL WHERE ((rt0.c2 COLLATE BINARY) BETWEEN (0.42064486515159216) AND (CAST(rt0.c1 AS BLOB))); -- 0ms;
UPDATE OR FAIL rt0 SET (c0)=(0.9149286832666311); -- 0ms;
UPDATE OR ABORT rt0 SET c1=0.5584648101855165 WHERE ((json(rt0.c2))<=(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END)); -- 0ms;
UPDATE OR FAIL rt0 SET (c0, c0, c2)=(x'', 'b괁C靖', NULL); -- 0ms;
UPDATE OR REPLACE rt0 SET (c1, c2)=(x'a36b', x'936c') WHERE ((((CAST(rt0.c1 AS REAL))OR('')))AND(((NULL) IS TRUE))); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR FAIL rt0 SET (c2)=('') WHERE CASE CAST(x'' AS REAL)  WHEN (NOT (rt0.c2)) THEN ((NULL) NOT NULL) END; -- 0ms;
UPDATE OR ABORT rt0 SET c0=x''; -- 0ms;
UPDATE OR IGNORE rt0 SET c0='-1915663034' WHERE (rt0.c0 IN ()); -- 0ms;
ANALYZE; -- 0ms;
PRAGMA main.mmap_size = -1099762328655131286; -- 0ms;
REINDEX  rt0; -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (x''); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (x'', '책㢍\nlVtHsn', NULL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt0(c2, c1, c0) VALUES (x'', '-524085266', '锿'); -- 1ms;
INSERT OR REPLACE INTO rt0 VALUES (0.8959113096844142, x'e201', 'Qह'); -- 0ms;
COMMIT; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
ANALYZE main; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1) VALUES (0.5572985171365791, 0.6304718860195953); -- 0ms;
REINDEX; -- 0ms;
PRAGMA threads; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1, c1)=('-9223372036854775808', 'sT''T#2p'); -- 0ms;
UPDATE rt0 SET c2='' WHERE (rt0.c0 IN ()); -- 0ms;
UPDATE OR IGNORE rt0 SET c1=x'' WHERE CASE WHEN (~ (rt0.c1)) THEN rt0.c1 COLLATE RTRIM ELSE CAST(rt0.c2 AS INTEGER) END; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES ('-282671582', -1785695213, x''); -- 0ms;
END TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(''); -- 1ms;
PRAGMA ignore_check_constraints; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt0(c1, c0) VALUES (x'', x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1, c2) VALUES ('-109853400', NULL, 'o'); -- 0ms;
COMMIT; -- 0ms;
UPDATE rt0 SET (c1)=(0Xffffffffb5afedde) WHERE (NOT ((((rt0.c2))<=((rt0.c2))))); -- 0ms;
CREATE VIEW v0(c0, c1, c2) AS SELECT (((NULL)&(rt0.c0)) IN ()), ((rt0.c1 COLLATE NOCASE)|(((rt0.c1)IS(rt0.c1)))), (NOT (((rt0.c0) IS TRUE))) FROM rt0; -- 8ms;
UPDATE rt0 SET (c2)=(NULL) WHERE ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE RTRIM; -- 1ms;
ANALYZE v0; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1) VALUES (0.30240569873975776, 0.5060658392708873); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON (CAST(v0.c2 AS NUMERIC) IN ((((x'')) BETWEEN ((-1149476099)) AND ((rt0.c2))))) WHERE ((- (((v0.c2) BETWEEN (x'4380') AND (rt0.c0))))) ORDER BY LOWER(DISTINCT '1615174411') DESC  NULLS LAST, (- (((rt0.c1)AND('FALSE')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((v0.c2) BETWEEN (x'4380') AND (rt0.c0))))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (CAST(v0.c2 AS NUMERIC) IN ((((x'')) BETWEEN ((-1149476099)) AND ((rt0.c2))))) ORDER BY LOWER(DISTINCT '1615174411') DESC  NULLS LAST, (- (((rt0.c1)AND('FALSE')))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON (CAST(v0.c2 AS NUMERIC) IN ((((x'')) BETWEEN ((-1149476099)) AND ((rt0.c2))))) WHERE ((- (((v0.c2) BETWEEN (x'4380') AND (rt0.c0))))) ORDER BY LOWER(DISTINCT '1615174411') DESC  NULLS LAST, (- (((rt0.c1)AND('FALSE')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((v0.c2) BETWEEN (x'4380') AND (rt0.c0))))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (CAST(v0.c2 AS NUMERIC) IN ((((x'')) BETWEEN ((-1149476099)) AND ((rt0.c2))))) ORDER BY LOWER(DISTINCT '1615174411') DESC  NULLS LAST, (- (((rt0.c1)AND('FALSE')))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON (CAST(v0.c2 AS NUMERIC) IN ((((x'')) BETWEEN ((-1149476099)) AND ((rt0.c2))))) WHERE ((- (((v0.c2) BETWEEN (x'4380') AND (rt0.c0))))) ORDER BY LOWER(DISTINCT '1615174411') DESC  NULLS LAST, (- (((rt0.c1)AND('FALSE')))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((CAST(x'' AS TEXT)) NOT BETWEEN (((v0.c2) BETWEEN (rt0.c1) AND (rt0.c1))) AND (((rt0.c1) IS TRUE)))) ORDER BY ((x'')=(v0.c2)) ASC, (((rt0.c2 IN (rt0.c0))) IS TRUE) ASC  NULLS LAST, ((NULLIF(rt0.c2, v0.c0))||((NOT (v0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'' AS TEXT)) NOT BETWEEN (((v0.c2) BETWEEN (rt0.c1) AND (rt0.c1))) AND (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((x'')==(v0.c2)) ASC, (((rt0.c2 IN (rt0.c0))) IS TRUE) ASC  NULLS LAST, ((NULLIF(rt0.c2, v0.c0))||((NOT (v0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((CAST(x'' AS TEXT)) NOT BETWEEN (((v0.c2) BETWEEN (rt0.c1) AND (rt0.c1))) AND (((rt0.c1) IS TRUE)))) ORDER BY ((x'')=(v0.c2)) ASC, (((rt0.c2 IN (rt0.c0))) IS TRUE) ASC  NULLS LAST, ((NULLIF(rt0.c2, v0.c0))||((NOT (v0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'' AS TEXT)) NOT BETWEEN (((v0.c2) BETWEEN (rt0.c1) AND (rt0.c1))) AND (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((x'')==(v0.c2)) ASC, (((rt0.c2 IN (rt0.c0))) IS TRUE) ASC  NULLS LAST, ((NULLIF(rt0.c2, v0.c0))||((NOT (v0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((CAST(x'' AS TEXT)) NOT BETWEEN (((v0.c2) BETWEEN (rt0.c1) AND (rt0.c1))) AND (((rt0.c1) IS TRUE)))) ORDER BY ((x'')=(v0.c2)) ASC, (((rt0.c2 IN (rt0.c0))) IS TRUE) ASC  NULLS LAST, ((NULLIF(rt0.c2, v0.c0))||((NOT (v0.c2))))  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((NOT (v0.c2)) IN ())) ORDER BY (((((((v0.c1)OR(v0.c2)))AND(v0.c1)), ((v0.c0) BETWEEN (v0.c1) AND (v0.c1)), x''))<>((v0.c1 COLLATE RTRIM, CAST(v0.c0 AS TEXT), v0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((((NOT (v0.c2)) IN ())) IS TRUE)  as count FROM v0 ORDER BY (((((((v0.c1)OR(v0.c2)))AND(v0.c1)), ((v0.c0) BETWEEN (v0.c1) AND (v0.c1)), x''))!=((v0.c1 COLLATE RTRIM, CAST(v0.c0 AS TEXT), v0.c1))) DESC);
SELECT COUNT(*) FROM v0 WHERE (((NOT (v0.c2)) IN ())) ORDER BY (((((((v0.c1)OR(v0.c2)))AND(v0.c1)), ((v0.c0) BETWEEN (v0.c1) AND (v0.c1)), x''))<>((v0.c1 COLLATE RTRIM, CAST(v0.c0 AS TEXT), v0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((((NOT (v0.c2)) IN ())) IS TRUE)  as count FROM v0 ORDER BY (((((((v0.c1)OR(v0.c2)))AND(v0.c1)), ((v0.c0) BETWEEN (v0.c1) AND (v0.c1)), x''))!=((v0.c1 COLLATE RTRIM, CAST(v0.c0 AS TEXT), v0.c1))) DESC);
SELECT COUNT(*) FROM v0 WHERE (((NOT (v0.c2)) IN ())) ORDER BY (((((((v0.c1)OR(v0.c2)))AND(v0.c1)), ((v0.c0) BETWEEN (v0.c1) AND (v0.c1)), x''))<>((v0.c1 COLLATE RTRIM, CAST(v0.c0 AS TEXT), v0.c1))) DESC;
SELECT COUNT(*) FROM rt0 WHERE (UNLIKELY(((rt0.c2)>>('0.30893409978773356'))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((rt0.c2)>>('0.30893409978773356')))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (UNLIKELY(((rt0.c2)>>('0.30893409978773356'))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((rt0.c2)>>('0.30893409978773356')))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (UNLIKELY(((rt0.c2)>>('0.30893409978773356'))));
SELECT ALL COUNT(*) FROM v0 WHERE (0.07856219528053199);
SELECT SUM(count) FROM (SELECT ALL ((0.07856219528053199) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (0.07856219528053199);
SELECT SUM(count) FROM (SELECT ALL ((0.07856219528053199) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (0.07856219528053199);
SELECT * FROM rt0 WHERE (CAST(rt0.c0 COLLATE BINARY AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(rt0.c0 COLLATE BINARY AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(rt0.c0 COLLATE BINARY AS REAL));
SELECT * FROM v0 WHERE ((((v0.c2))==((((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0)))))) ORDER BY CAST(((v0.c1) IS FALSE) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c2))==((((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c1) IS FALSE) AS TEXT) DESC  NULLS LAST);
SELECT * FROM v0 WHERE ((((v0.c2))==((((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0)))))) ORDER BY CAST(((v0.c1) IS FALSE) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c2))==((((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c1) IS FALSE) AS TEXT) DESC  NULLS LAST);
SELECT * FROM v0 WHERE ((((v0.c2))==((((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0)))))) ORDER BY CAST(((v0.c1) IS FALSE) AS TEXT) DESC  NULLS LAST;
SELECT * FROM v0, rt0 WHERE ((CAST(rt0.c2 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c2 AS TEXT) IN ())) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((CAST(rt0.c2 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c2 AS TEXT) IN ())) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((CAST(rt0.c2 AS TEXT) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c2)||(rt0.c2)))OR(((rt0.c1)>=(rt0.c2)))))AND((NOT (rt0.c2))))) ORDER BY COALESCE(((rt0.c0)IS NOT(rt0.c0)), (- (rt0.c1))) DESC  NULLS FIRST, ((((rt0.c0) ISNULL))<<(highlight(-2054900393, rt0.c1, rt0.c2, rt0.c2))), (((rt0.c0)IS NOT(x'0c5c630f')) IN (CAST(rt0.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)||(rt0.c2)))OR(((rt0.c1)>=(rt0.c2)))))AND((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY COALESCE(((rt0.c0)IS NOT(rt0.c0)), (- (rt0.c1))) DESC  NULLS FIRST, ((((rt0.c0) ISNULL))<<(highlight(-2054900393, rt0.c1, rt0.c2, rt0.c2))), (((rt0.c0)IS NOT(x'0c5c630f')) IN (CAST(rt0.c1 AS INTEGER))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c2)||(rt0.c2)))OR(((rt0.c1)>=(rt0.c2)))))AND((NOT (rt0.c2))))) ORDER BY COALESCE(((rt0.c0)IS NOT(rt0.c0)), (- (rt0.c1))) DESC  NULLS FIRST, ((((rt0.c0) ISNULL))<<(highlight(-2054900393, rt0.c1, rt0.c2, rt0.c2))), (((rt0.c0)IS NOT(x'0c5c630f')) IN (CAST(rt0.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)||(rt0.c2)))OR(((rt0.c1)>=(rt0.c2)))))AND((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY COALESCE(((rt0.c0)IS NOT(rt0.c0)), (- (rt0.c1))) DESC  NULLS FIRST, ((((rt0.c0) ISNULL))<<(highlight(-2054900393, rt0.c1, rt0.c2, rt0.c2))), (((rt0.c0)IS NOT(x'0c5c630f')) IN (CAST(rt0.c1 AS INTEGER))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)&(rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)&(rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)&(rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)&(rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)&(rt0.c2))) ISNULL));
SELECT * FROM rt0, v0 WHERE ((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) IN ())) ORDER BY ((((((((((((rt0.c2)OR(v0.c0)))OR(rt0.c1)))OR((rt0.c2 IN (rt0.c1, rt0.c2)))))AND(((rt0.c1)OR(v0.c2)))))AND(((((rt0.c0)OR(v0.c2)))OR(rt0.c1)))))AND(((v0.c1)IS NOT(v0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((((((((rt0.c2)OR(v0.c0)))OR(rt0.c1)))OR((rt0.c2 IN (rt0.c1, rt0.c2)))))AND(((rt0.c1)OR(v0.c2)))))AND(((((rt0.c0)OR(v0.c2)))OR(rt0.c1)))))AND(((v0.c1)IS NOT(v0.c2)))) ASC);
SELECT * FROM rt0, v0 WHERE ((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) IN ())) ORDER BY ((((((((((((rt0.c2)OR(v0.c0)))OR(rt0.c1)))OR((rt0.c2 IN (rt0.c1, rt0.c2)))))AND(((rt0.c1)OR(v0.c2)))))AND(((((rt0.c0)OR(v0.c2)))OR(rt0.c1)))))AND(((v0.c1)IS NOT(v0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((((((((rt0.c2)OR(v0.c0)))OR(rt0.c1)))OR((rt0.c2 IN (rt0.c1, rt0.c2)))))AND(((rt0.c1)OR(v0.c2)))))AND(((((rt0.c0)OR(v0.c2)))OR(rt0.c1)))))AND(((v0.c1)IS NOT(v0.c2)))) ASC);
SELECT * FROM rt0, v0 WHERE ((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) IN ())) ORDER BY ((((((((((((rt0.c2)OR(v0.c0)))OR(rt0.c1)))OR((rt0.c2 IN (rt0.c1, rt0.c2)))))AND(((rt0.c1)OR(v0.c2)))))AND(((((rt0.c0)OR(v0.c2)))OR(rt0.c1)))))AND(((v0.c1)IS NOT(v0.c2)))) ASC;
SELECT * FROM rt0, v0 WHERE ((((('832458979') ISNULL)) NOT BETWEEN (((v0.c2) BETWEEN (rt0.c1) AND (v0.c0))) AND (LIKELY(DISTINCT rt0.c1))));
SELECT SUM(count) FROM (SELECT (((((('832458979') ISNULL)) NOT BETWEEN (((v0.c2) BETWEEN (rt0.c1) AND (v0.c0))) AND (LIKELY(DISTINCT rt0.c1)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((('832458979') ISNULL)) NOT BETWEEN (((v0.c2) BETWEEN (rt0.c1) AND (v0.c0))) AND (LIKELY(DISTINCT rt0.c1))));
SELECT SUM(count) FROM (SELECT (((((('832458979') ISNULL)) NOT BETWEEN (((v0.c2) BETWEEN (rt0.c1) AND (v0.c0))) AND (LIKELY(DISTINCT rt0.c1)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((('832458979') ISNULL)) NOT BETWEEN (((v0.c2) BETWEEN (rt0.c1) AND (v0.c0))) AND (LIKELY(DISTINCT rt0.c1))));
SELECT ALL COUNT(*) FROM v0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ('');
SELECT ALL * FROM rt0 WHERE (((((((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)AND(CAST(rt0.c0 AS REAL))))AND(((x'') BETWEEN (rt0.c0) AND (rt0.c1)))))OR(rt0.c0)))OR(rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)AND(CAST(rt0.c0 AS REAL))))AND(((x'') BETWEEN (rt0.c0) AND (rt0.c1)))))OR(rt0.c0)))OR(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)AND(CAST(rt0.c0 AS REAL))))AND(((x'') BETWEEN (rt0.c0) AND (rt0.c1)))))OR(rt0.c0)))OR(rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)AND(CAST(rt0.c0 AS REAL))))AND(((x'') BETWEEN (rt0.c0) AND (rt0.c1)))))OR(rt0.c0)))OR(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)AND(CAST(rt0.c0 AS REAL))))AND(((x'') BETWEEN (rt0.c0) AND (rt0.c1)))))OR(rt0.c0)))OR(rt0.c1 COLLATE NOCASE)));
SELECT * FROM rt0, v0 WHERE ((((rt0.c0 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((rt0.c0 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((rt0.c0 IN ())) NOTNULL));
SELECT ALL * FROM rt0, v0 WHERE ((((((rt0.c2)OR(v0.c0)))AND(v0.c0)) IN ())) ORDER BY ((rt0.c1) ISNULL);
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)OR(v0.c0)))AND(v0.c0)) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY ((rt0.c1) ISNULL));
SELECT ALL * FROM rt0, v0 WHERE ((((((rt0.c2)OR(v0.c0)))AND(v0.c0)) IN ())) ORDER BY ((rt0.c1) ISNULL);
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)OR(v0.c0)))AND(v0.c0)) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY ((rt0.c1) ISNULL));
SELECT ALL * FROM rt0, v0 WHERE ((((((rt0.c2)OR(v0.c0)))AND(v0.c0)) IN ())) ORDER BY ((rt0.c1) ISNULL);
SELECT * FROM rt0, v0 WHERE (rt0.c0) ORDER BY ((((v0.c2) NOTNULL))LIKE((v0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((v0.c2) NOTNULL))LIKE((v0.c0 IN ()))) DESC);
SELECT * FROM rt0, v0 WHERE (rt0.c0) ORDER BY ((((v0.c2) NOTNULL))LIKE((v0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((v0.c2) NOTNULL))LIKE((v0.c0 IN ()))) DESC);
SELECT * FROM rt0, v0 WHERE (rt0.c0) ORDER BY ((((v0.c2) NOTNULL))LIKE((v0.c0 IN ()))) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((0xffffffffbb7c62fd)OR(((v0.c0) IS FALSE))))OR((((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c1))))))OR(CASE v0.c1  WHEN v0.c1 THEN v0.c0 END)))OR(((v0.c0) BETWEEN (v0.c0) AND (0.34097314321216365))))) ORDER BY CASE ((((v0.c2)OR(v0.c2)))AND(v0.c0))  WHEN (((v0.c0))=((v0.c1))) THEN (v0.c2 IN ()) ELSE ((v0.c0) ISNULL) END DESC;
SELECT SUM(count) FROM (SELECT ((((((((((0xffffffffbb7c62fd)OR(((v0.c0) IS FALSE))))OR((((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c1))))))OR(CASE v0.c1  WHEN v0.c1 THEN v0.c0 END)))OR(((v0.c0) BETWEEN (v0.c0) AND (0.34097314321216365))))) IS TRUE)  as count FROM v0 ORDER BY CASE ((((v0.c2)OR(v0.c2)))AND(v0.c0))  WHEN (((v0.c0))==((v0.c1))) THEN (v0.c2 IN ()) ELSE ((v0.c0) ISNULL) END DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((0xffffffffbb7c62fd)OR(((v0.c0) IS FALSE))))OR((((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c1))))))OR(CASE v0.c1  WHEN v0.c1 THEN v0.c0 END)))OR(((v0.c0) BETWEEN (v0.c0) AND (0.34097314321216365))))) ORDER BY CASE ((((v0.c2)OR(v0.c2)))AND(v0.c0))  WHEN (((v0.c0))=((v0.c1))) THEN (v0.c2 IN ()) ELSE ((v0.c0) ISNULL) END DESC;
SELECT SUM(count) FROM (SELECT ((((((((((0xffffffffbb7c62fd)OR(((v0.c0) IS FALSE))))OR((((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c1))))))OR(CASE v0.c1  WHEN v0.c1 THEN v0.c0 END)))OR(((v0.c0) BETWEEN (v0.c0) AND (0.34097314321216365))))) IS TRUE)  as count FROM v0 ORDER BY CASE ((((v0.c2)OR(v0.c2)))AND(v0.c0))  WHEN (((v0.c0))==((v0.c1))) THEN (v0.c2 IN ()) ELSE ((v0.c0) ISNULL) END DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((0xffffffffbb7c62fd)OR(((v0.c0) IS FALSE))))OR((((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c1))))))OR(CASE v0.c1  WHEN v0.c1 THEN v0.c0 END)))OR(((v0.c0) BETWEEN (v0.c0) AND (0.34097314321216365))))) ORDER BY CASE ((((v0.c2)OR(v0.c2)))AND(v0.c0))  WHEN (((v0.c0))=((v0.c1))) THEN (v0.c2 IN ()) ELSE ((v0.c0) ISNULL) END DESC;
SELECT * FROM rt0, v0 NOT INDEXED WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 NOT INDEXED WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 NOT INDEXED WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (rt0.c0) ORDER BY (x'' IN (TRIM(1e500, rt0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, v0 ORDER BY (x'' IN (TRIM(1e500, rt0.c2)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (rt0.c0) ORDER BY (x'' IN (TRIM(1e500, rt0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, v0 ORDER BY (x'' IN (TRIM(1e500, rt0.c2)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (rt0.c0) ORDER BY (x'' IN (TRIM(1e500, rt0.c2)))  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((- (rt0.c2)))<<(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN x'' END))) ORDER BY ((((rt0.c2) NOT BETWEEN ('') AND (rt0.c1))) IS TRUE) DESC  NULLS FIRST, DATE(rt0.c2 COLLATE BINARY, CAST(rt0.c0 AS BLOB), (('-301358938') NOT NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c2)))<<(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN x'' END))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOT BETWEEN ('') AND (rt0.c1))) IS TRUE) DESC  NULLS FIRST, DATE(rt0.c2 COLLATE BINARY, CAST(rt0.c0 AS BLOB), (('-301358938') NOT NULL))  NULLS LAST);
SELECT * FROM rt0 WHERE ((((- (rt0.c2)))<<(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN x'' END))) ORDER BY ((((rt0.c2) NOT BETWEEN ('') AND (rt0.c1))) IS TRUE) DESC  NULLS FIRST, DATE(rt0.c2 COLLATE BINARY, CAST(rt0.c0 AS BLOB), (('-301358938') NOT NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c2)))<<(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN x'' END))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOT BETWEEN ('') AND (rt0.c1))) IS TRUE) DESC  NULLS FIRST, DATE(rt0.c2 COLLATE BINARY, CAST(rt0.c0 AS BLOB), (('-301358938') NOT NULL))  NULLS LAST);
SELECT * FROM rt0 WHERE ((((- (rt0.c2)))<<(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN x'' END))) ORDER BY ((((rt0.c2) NOT BETWEEN ('') AND (rt0.c1))) IS TRUE) DESC  NULLS FIRST, DATE(rt0.c2 COLLATE BINARY, CAST(rt0.c0 AS BLOB), (('-301358938') NOT NULL))  NULLS LAST;
SELECT * FROM rt0 WHERE (LTRIM((((rt0.c2)) NOT BETWEEN ((NULL)) AND ((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((LTRIM((((rt0.c2)) NOT BETWEEN ((NULL)) AND ((rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (LTRIM((((rt0.c2)) NOT BETWEEN ((NULL)) AND ((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((LTRIM((((rt0.c2)) NOT BETWEEN ((NULL)) AND ((rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (LTRIM((((rt0.c2)) NOT BETWEEN ((NULL)) AND ((rt0.c1)))));
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON ((((((rt0.c2)OR(v0.c0)))AND(v0.c1))) NOT NULL) WHERE (x'e0ef');
SELECT SUM(count) FROM (SELECT ALL ((x'e0ef') IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((((((rt0.c2)OR(v0.c0)))AND(v0.c1))) NOT NULL));
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON ((((((rt0.c2)OR(v0.c0)))AND(v0.c1))) NOT NULL) WHERE (x'e0ef');
SELECT SUM(count) FROM (SELECT ALL ((x'e0ef') IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((((((rt0.c2)OR(v0.c0)))AND(v0.c1))) NOT NULL));
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON ((((((rt0.c2)OR(v0.c0)))AND(v0.c1))) NOT NULL) WHERE (x'e0ef');
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (v0.c1);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT * FROM rt0, v0 WHERE (((v0.c1) NOT NULL) COLLATE NOCASE) ORDER BY CAST(((rt0.c0) BETWEEN (0Xffffffffb6e879af) AND (v0.c1)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(((rt0.c0) BETWEEN (0xffffffffb6e879af) AND (v0.c1)) AS NUMERIC));
SELECT * FROM rt0, v0 WHERE (((v0.c1) NOT NULL) COLLATE NOCASE) ORDER BY CAST(((rt0.c0) BETWEEN (0Xffffffffb6e879af) AND (v0.c1)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(((rt0.c0) BETWEEN (0xffffffffb6e879af) AND (v0.c1)) AS NUMERIC));
SELECT * FROM rt0, v0 WHERE (((v0.c1) NOT NULL) COLLATE NOCASE) ORDER BY CAST(((rt0.c0) BETWEEN (0Xffffffffb6e879af) AND (v0.c1)) AS NUMERIC);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0)IS NOT(v0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)IS NOT(v0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0)IS NOT(v0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)IS NOT(v0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0)IS NOT(v0.c2)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 WHERE (((NULL)<<(LIKELY(DISTINCT rt0.c0)))) ORDER BY ((((rt0.c0)AND(rt0.c0)))AND(((rt0.c1)*(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)<<(LIKELY(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)AND(rt0.c0)))AND(((rt0.c1)*(rt0.c2)))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((NULL)<<(LIKELY(DISTINCT rt0.c0)))) ORDER BY ((((rt0.c0)AND(rt0.c0)))AND(((rt0.c1)*(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)<<(LIKELY(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)AND(rt0.c0)))AND(((rt0.c1)*(rt0.c2)))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((NULL)<<(LIKELY(DISTINCT rt0.c0)))) ORDER BY ((((rt0.c0)AND(rt0.c0)))AND(((rt0.c1)*(rt0.c2)))) ASC;
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((((0X321bbdeb)OR(rt0.c2)))OR(v0.c2)), ((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)), ((rt0.c1)&(v0.c2))))=(((((v0.c1))<=((NULL))), rt0.c1 COLLATE NOCASE, CAST(v0.c1 AS BLOB))))) ORDER BY (((CASE v0.c0  WHEN v0.c1 THEN rt0.c0 END))>=((((rt0.c1) IS FALSE)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((((0X321bbdeb)OR(rt0.c2)))OR(v0.c2)), ((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)), ((rt0.c1)&(v0.c2))))=(((((v0.c1))<=((NULL))), rt0.c1 COLLATE NOCASE, CAST(v0.c1 AS BLOB))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((CASE v0.c0  WHEN v0.c1 THEN rt0.c0 END))>=((((rt0.c1) IS FALSE)))) ASC);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((((0X321bbdeb)OR(rt0.c2)))OR(v0.c2)), ((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)), ((rt0.c1)&(v0.c2))))=(((((v0.c1))<=((NULL))), rt0.c1 COLLATE NOCASE, CAST(v0.c1 AS BLOB))))) ORDER BY (((CASE v0.c0  WHEN v0.c1 THEN rt0.c0 END))>=((((rt0.c1) IS FALSE)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((((0X321bbdeb)OR(rt0.c2)))OR(v0.c2)), ((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)), ((rt0.c1)&(v0.c2))))=(((((v0.c1))<=((NULL))), rt0.c1 COLLATE NOCASE, CAST(v0.c1 AS BLOB))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((CASE v0.c0  WHEN v0.c1 THEN rt0.c0 END))>=((((rt0.c1) IS FALSE)))) ASC);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((((0X321bbdeb)OR(rt0.c2)))OR(v0.c2)), ((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)), ((rt0.c1)&(v0.c2))))=(((((v0.c1))<=((NULL))), rt0.c1 COLLATE NOCASE, CAST(v0.c1 AS BLOB))))) ORDER BY (((CASE v0.c0  WHEN v0.c1 THEN rt0.c0 END))>=((((rt0.c1) IS FALSE)))) ASC;
SELECT COUNT(*) FROM v0 WHERE (SQLITE_COMPILEOPTION_GET(x'' COLLATE NOCASE)) ORDER BY json_insert(CASE v0.c2  WHEN v0.c2 THEN v0.c2 END, ((((v0.c1)AND('1440458893')))OR(x'')), CAST(v0.c1 AS BLOB)) ASC;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(x'' COLLATE NOCASE)) IS TRUE)  as count FROM v0 ORDER BY json_insert(CASE v0.c2  WHEN v0.c2 THEN v0.c2 END, ((((v0.c1)AND('1440458893')))OR(x'')), CAST(v0.c1 AS BLOB)) ASC);
SELECT COUNT(*) FROM v0 WHERE (SQLITE_COMPILEOPTION_GET(x'' COLLATE NOCASE)) ORDER BY json_insert(CASE v0.c2  WHEN v0.c2 THEN v0.c2 END, ((((v0.c1)AND('1440458893')))OR(x'')), CAST(v0.c1 AS BLOB)) ASC;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(x'' COLLATE NOCASE)) IS TRUE)  as count FROM v0 ORDER BY json_insert(CASE v0.c2  WHEN v0.c2 THEN v0.c2 END, ((((v0.c1)AND('1440458893')))OR(x'')), CAST(v0.c1 AS BLOB)) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((CAST(v0.c1 AS TEXT))OR(((v0.c0) IS TRUE))))AND((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c1 AS TEXT))OR(((v0.c0) IS TRUE))))AND((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c2)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((CAST(v0.c1 AS TEXT))OR(((v0.c0) IS TRUE))))AND((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c1 AS TEXT))OR(((v0.c0) IS TRUE))))AND((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c2)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((CAST(v0.c1 AS TEXT))OR(((v0.c0) IS TRUE))))AND((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c2))))));
SELECT COUNT(*) FROM rt0, v0 WHERE (((COALESCE(v0.c2, v0.c2, rt0.c1, rt0.c0))==(CASE WHEN v0.c1 THEN v0.c2 END))) ORDER BY ((v0.c0 COLLATE BINARY) NOT BETWEEN ((+ (v0.c2))) AND ((0.6792027778168342 IN ())));
SELECT SUM(count) FROM (SELECT ((((COALESCE(v0.c2, v0.c2, rt0.c1, rt0.c0))==(CASE WHEN v0.c1 THEN v0.c2 END))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((v0.c0 COLLATE BINARY) NOT BETWEEN ((+ (v0.c2))) AND ((0.6792027778168342 IN ()))));
SELECT COUNT(*) FROM rt0, v0 WHERE (((COALESCE(v0.c2, v0.c2, rt0.c1, rt0.c0))==(CASE WHEN v0.c1 THEN v0.c2 END))) ORDER BY ((v0.c0 COLLATE BINARY) NOT BETWEEN ((+ (v0.c2))) AND ((0.6792027778168342 IN ())));
SELECT SUM(count) FROM (SELECT ((((COALESCE(v0.c2, v0.c2, rt0.c1, rt0.c0))==(CASE WHEN v0.c1 THEN v0.c2 END))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((v0.c0 COLLATE BINARY) NOT BETWEEN ((+ (v0.c2))) AND ((0.6792027778168342 IN ()))));
SELECT COUNT(*) FROM rt0, v0 WHERE (((COALESCE(v0.c2, v0.c2, rt0.c1, rt0.c0))==(CASE WHEN v0.c1 THEN v0.c2 END))) ORDER BY ((v0.c0 COLLATE BINARY) NOT BETWEEN ((+ (v0.c2))) AND ((0.6792027778168342 IN ())));
SELECT ALL * FROM v0, rt0 WHERE (((CASE v0.c1  WHEN rt0.c2 THEN v0.c0 WHEN rt0.c1 THEN v0.c2 WHEN rt0.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c0 WHEN rt0.c1 THEN rt0.c1 END) BETWEEN (CASE v0.c2  WHEN v0.c2 THEN rt0.c1 ELSE 0Xffffffffb1c5a87a END) AND (NULL))) ORDER BY ((((rt0.c0) NOT BETWEEN (v0.c1) AND (rt0.c1))) BETWEEN (((v0.c0) BETWEEN (v0.c1) AND (rt0.c2))) AND (CASE v0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE v0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c1  WHEN rt0.c2 THEN v0.c0 WHEN rt0.c1 THEN v0.c2 WHEN rt0.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c0 WHEN rt0.c1 THEN rt0.c1 END) BETWEEN (CASE v0.c2  WHEN v0.c2 THEN rt0.c1 ELSE 0xffffffffb1c5a87a END) AND (NULL))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (v0.c1) AND (rt0.c1))) BETWEEN (((v0.c0) BETWEEN (v0.c1) AND (rt0.c2))) AND (CASE v0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE v0.c0 END)));
SELECT ALL * FROM v0, rt0 WHERE (((CASE v0.c1  WHEN rt0.c2 THEN v0.c0 WHEN rt0.c1 THEN v0.c2 WHEN rt0.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c0 WHEN rt0.c1 THEN rt0.c1 END) BETWEEN (CASE v0.c2  WHEN v0.c2 THEN rt0.c1 ELSE 0Xffffffffb1c5a87a END) AND (NULL))) ORDER BY ((((rt0.c0) NOT BETWEEN (v0.c1) AND (rt0.c1))) BETWEEN (((v0.c0) BETWEEN (v0.c1) AND (rt0.c2))) AND (CASE v0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE v0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c1  WHEN rt0.c2 THEN v0.c0 WHEN rt0.c1 THEN v0.c2 WHEN rt0.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c0 WHEN rt0.c1 THEN rt0.c1 END) BETWEEN (CASE v0.c2  WHEN v0.c2 THEN rt0.c1 ELSE 0xffffffffb1c5a87a END) AND (NULL))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (v0.c1) AND (rt0.c1))) BETWEEN (((v0.c0) BETWEEN (v0.c1) AND (rt0.c2))) AND (CASE v0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE v0.c0 END)));
SELECT ALL * FROM v0, rt0 WHERE (((CASE v0.c1  WHEN rt0.c2 THEN v0.c0 WHEN rt0.c1 THEN v0.c2 WHEN rt0.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c0 WHEN rt0.c1 THEN rt0.c1 END) BETWEEN (CASE v0.c2  WHEN v0.c2 THEN rt0.c1 ELSE 0Xffffffffb1c5a87a END) AND (NULL))) ORDER BY ((((rt0.c0) NOT BETWEEN (v0.c1) AND (rt0.c1))) BETWEEN (((v0.c0) BETWEEN (v0.c1) AND (rt0.c2))) AND (CASE v0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE v0.c0 END));
SELECT COUNT(*) FROM v0 WHERE (-1.915663034E9) ORDER BY (((x'888c')>=(v0.c1)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((-1.915663034E9) IS TRUE)  as count FROM v0 ORDER BY (((x'888c')>=(v0.c1)) IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (-1.915663034E9) ORDER BY (((x'888c')>=(v0.c1)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((-1.915663034E9) IS TRUE)  as count FROM v0 ORDER BY (((x'888c')>=(v0.c1)) IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (-1.915663034E9) ORDER BY (((x'888c')>=(v0.c1)) IN ()) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON (((CAST(rt0.c2 AS TEXT)))=((((((v0.c2)OR(v0.c1)))AND(v0.c1))))) WHERE (((v0.c1 COLLATE RTRIM)>>((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1 COLLATE RTRIM)>>((NOT (rt0.c0))))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (((CAST(rt0.c2 AS TEXT)))=((((((v0.c2)OR(v0.c1)))AND(v0.c1))))));
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON (((CAST(rt0.c2 AS TEXT)))=((((((v0.c2)OR(v0.c1)))AND(v0.c1))))) WHERE (((v0.c1 COLLATE RTRIM)>>((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1 COLLATE RTRIM)>>((NOT (rt0.c0))))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (((CAST(rt0.c2 AS TEXT)))=((((((v0.c2)OR(v0.c1)))AND(v0.c1))))));
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON (((CAST(rt0.c2 AS TEXT)))=((((((v0.c2)OR(v0.c1)))AND(v0.c1))))) WHERE (((v0.c1 COLLATE RTRIM)>>((NOT (rt0.c0)))));
SELECT * FROM v0 WHERE (CASE CASE v0.c2  WHEN v0.c0 THEN v0.c1 WHEN 1.28800853E9 THEN x'' WHEN v0.c2 THEN v0.c0 ELSE v0.c1 END  WHEN ((v0.c1) NOTNULL) THEN v0.c0 WHEN x'' THEN LIKE(v0.c0, v0.c0, '{') WHEN ((((v0.c2)OR(v0.c0)))OR(v0.c1)) THEN (((v0.c1))>((v0.c1))) END) ORDER BY CASE WHEN ((((v0.c0)AND(v0.c2)))AND(v0.c0)) THEN CAST(v0.c1 AS INTEGER) END DESC;
SELECT SUM(count) FROM (SELECT ((CASE CASE v0.c2  WHEN v0.c0 THEN v0.c1 WHEN 1.28800853E9 THEN x'' WHEN v0.c2 THEN v0.c0 ELSE v0.c1 END  WHEN ((v0.c1) NOTNULL) THEN v0.c0 WHEN x'' THEN LIKE(v0.c0, v0.c0, '{') WHEN ((((v0.c2)OR(v0.c0)))OR(v0.c1)) THEN (((v0.c1))>((v0.c1))) END) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((((v0.c0)AND(v0.c2)))AND(v0.c0)) THEN CAST(v0.c1 AS INTEGER) END DESC);
SELECT * FROM v0 WHERE (CASE CASE v0.c2  WHEN v0.c0 THEN v0.c1 WHEN 1.28800853E9 THEN x'' WHEN v0.c2 THEN v0.c0 ELSE v0.c1 END  WHEN ((v0.c1) NOTNULL) THEN v0.c0 WHEN x'' THEN LIKE(v0.c0, v0.c0, '{') WHEN ((((v0.c2)OR(v0.c0)))OR(v0.c1)) THEN (((v0.c1))>((v0.c1))) END) ORDER BY CASE WHEN ((((v0.c0)AND(v0.c2)))AND(v0.c0)) THEN CAST(v0.c1 AS INTEGER) END DESC;
SELECT SUM(count) FROM (SELECT ((CASE CASE v0.c2  WHEN v0.c0 THEN v0.c1 WHEN 1.28800853E9 THEN x'' WHEN v0.c2 THEN v0.c0 ELSE v0.c1 END  WHEN ((v0.c1) NOTNULL) THEN v0.c0 WHEN x'' THEN LIKE(v0.c0, v0.c0, '{') WHEN ((((v0.c2)OR(v0.c0)))OR(v0.c1)) THEN (((v0.c1))>((v0.c1))) END) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((((v0.c0)AND(v0.c2)))AND(v0.c0)) THEN CAST(v0.c1 AS INTEGER) END DESC);
SELECT * FROM v0 WHERE (CASE CASE v0.c2  WHEN v0.c0 THEN v0.c1 WHEN 1.28800853E9 THEN x'' WHEN v0.c2 THEN v0.c0 ELSE v0.c1 END  WHEN ((v0.c1) NOTNULL) THEN v0.c0 WHEN x'' THEN LIKE(v0.c0, v0.c0, '{') WHEN ((((v0.c2)OR(v0.c0)))OR(v0.c1)) THEN (((v0.c1))>((v0.c1))) END) ORDER BY CASE WHEN ((((v0.c0)AND(v0.c2)))AND(v0.c0)) THEN CAST(v0.c1 AS INTEGER) END DESC;
SELECT * FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))) AND (CAST(rt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))) AND (CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))) AND (CAST(rt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))) AND (CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))) AND (CAST(rt0.c0 AS TEXT))));
SELECT COUNT(*) FROM rt0, v0 WHERE ((~ ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((~ ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((~ ((rt0.c1 IN ()))));
SELECT ALL * FROM v0, rt0 WHERE (CASE WHEN (NOT (rt0.c2)) THEN ((v0.c2) ISNULL) ELSE ((rt0.c1) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (rt0.c2)) THEN ((v0.c2) ISNULL) ELSE ((rt0.c1) NOT NULL) END) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CASE WHEN (NOT (rt0.c2)) THEN ((v0.c2) ISNULL) ELSE ((rt0.c1) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (rt0.c2)) THEN ((v0.c2) ISNULL) ELSE ((rt0.c1) NOT NULL) END) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CASE WHEN (NOT (rt0.c2)) THEN ((v0.c2) ISNULL) ELSE ((rt0.c1) NOT NULL) END);
SELECT ALL * FROM v0 WHERE ((~ (((v0.c2)&(v0.c1))))) ORDER BY CAST(((v0.c0)<(v0.c0)) AS NUMERIC) DESC  NULLS FIRST, ((0.6565664742901859)==(CASE WHEN v0.c1 THEN v0.c2 WHEN v0.c0 THEN NULL WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT (((~ (((v0.c2)&(v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0)<(v0.c0)) AS NUMERIC) DESC  NULLS FIRST, ((0.6565664742901859)==(CASE WHEN v0.c1 THEN v0.c2 WHEN v0.c0 THEN NULL WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c2 END)) DESC);
SELECT ALL * FROM v0 WHERE ((~ (((v0.c2)&(v0.c1))))) ORDER BY CAST(((v0.c0)<(v0.c0)) AS NUMERIC) DESC  NULLS FIRST, ((0.6565664742901859)==(CASE WHEN v0.c1 THEN v0.c2 WHEN v0.c0 THEN NULL WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT (((~ (((v0.c2)&(v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0)<(v0.c0)) AS NUMERIC) DESC  NULLS FIRST, ((0.6565664742901859)==(CASE WHEN v0.c1 THEN v0.c2 WHEN v0.c0 THEN NULL WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c2 END)) DESC);
SELECT ALL * FROM v0 WHERE ((~ (((v0.c2)&(v0.c1))))) ORDER BY CAST(((v0.c0)<(v0.c0)) AS NUMERIC) DESC  NULLS FIRST, ((0.6565664742901859)==(CASE WHEN v0.c1 THEN v0.c2 WHEN v0.c0 THEN NULL WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c2 END)) DESC;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((NULL)) AND ((rt0.c2))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((NULL)) AND ((rt0.c2))) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((NULL)) AND ((rt0.c2))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((NULL)) AND ((rt0.c2))) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((NULL)) AND ((rt0.c2))) COLLATE RTRIM);
SELECT ALL * FROM rt0, v0 WHERE (v0.c2) ORDER BY ((((rt0.c2)GLOB(rt0.c1))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c2)GLOB(rt0.c1))) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (v0.c2) ORDER BY ((((rt0.c2)GLOB(rt0.c1))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c2)GLOB(rt0.c1))) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (v0.c2) ORDER BY ((((rt0.c2)GLOB(rt0.c1))) IS FALSE)  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0 WHERE (((((((((v0.c0 COLLATE NOCASE)AND(((rt0.c2)>>(rt0.c2)))))OR(v0.c1 COLLATE BINARY)))OR(((((((((x'')OR(rt0.c2)))OR(rt0.c0)))AND(v0.c2)))AND(rt0.c0)))))AND((~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c0 COLLATE NOCASE)AND(((rt0.c2)>>(rt0.c2)))))OR(v0.c1 COLLATE BINARY)))OR(((((((((x'')OR(rt0.c2)))OR(rt0.c0)))AND(v0.c2)))AND(rt0.c0)))))AND((~ (v0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((((((v0.c0 COLLATE NOCASE)AND(((rt0.c2)>>(rt0.c2)))))OR(v0.c1 COLLATE BINARY)))OR(((((((((x'')OR(rt0.c2)))OR(rt0.c0)))AND(v0.c2)))AND(rt0.c0)))))AND((~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c0 COLLATE NOCASE)AND(((rt0.c2)>>(rt0.c2)))))OR(v0.c1 COLLATE BINARY)))OR(((((((((x'')OR(rt0.c2)))OR(rt0.c0)))AND(v0.c2)))AND(rt0.c0)))))AND((~ (v0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((((((v0.c0 COLLATE NOCASE)AND(((rt0.c2)>>(rt0.c2)))))OR(v0.c1 COLLATE BINARY)))OR(((((((((x'')OR(rt0.c2)))OR(rt0.c0)))AND(v0.c2)))AND(rt0.c0)))))AND((~ (v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE (TRIM((v0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((v0.c1 IN ()))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (TRIM((v0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((v0.c1 IN ()))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (TRIM((v0.c1 IN ())));
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT * FROM rt0 WHERE (0.818474140184678 COLLATE BINARY) ORDER BY ((rt0.c1) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.818474140184678 COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1) NOTNULL) DESC);
SELECT * FROM rt0 WHERE (0.818474140184678 COLLATE BINARY) ORDER BY ((rt0.c1) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.818474140184678 COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1) NOTNULL) DESC);
SELECT * FROM rt0 WHERE (0.818474140184678 COLLATE BINARY) ORDER BY ((rt0.c1) NOTNULL) DESC;
SELECT ALL * FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) BETWEEN (((rt0.c2 IN ()))) AND ((rt0.c2)))) ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN ('?\nK}䢟') AND (((rt0.c2)GLOB(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN (((rt0.c2 IN ()))) AND ((rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN ('?\nK}䢟') AND (((rt0.c2)GLOB(rt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) BETWEEN (((rt0.c2 IN ()))) AND ((rt0.c2)))) ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN ('?\nK}䢟') AND (((rt0.c2)GLOB(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN (((rt0.c2 IN ()))) AND ((rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN ('?\nK}䢟') AND (((rt0.c2)GLOB(rt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) BETWEEN (((rt0.c2 IN ()))) AND ((rt0.c2)))) ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN ('?\nK}䢟') AND (((rt0.c2)GLOB(rt0.c0)))) ASC;
SELECT ALL * FROM v0, rt0 WHERE ((~ (CASE WHEN v0.c1 THEN v0.c1 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE WHEN v0.c1 THEN v0.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((~ (CASE WHEN v0.c1 THEN v0.c1 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE WHEN v0.c1 THEN v0.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((~ (CASE WHEN v0.c1 THEN v0.c1 ELSE rt0.c0 END)));
SELECT * FROM rt0, v0 WHERE (COALESCE(DISTINCT '', CASE WHEN v0.c1 THEN rt0.c2 WHEN v0.c2 THEN rt0.c0 WHEN v0.c1 THEN v0.c0 END, 0.6021502797280822, ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) ORDER BY CASE WHEN ((v0.c1) NOT NULL) THEN (((v0.c1)) BETWEEN ((v0.c2)) AND ((rt0.c2))) WHEN (((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((rt0.c1))) THEN ((v0.c1) IS FALSE) WHEN CAST(v0.c0 AS INTEGER) THEN rt0.c0 ELSE UPPER(v0.c0) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT '', CASE WHEN v0.c1 THEN rt0.c2 WHEN v0.c2 THEN rt0.c0 WHEN v0.c1 THEN v0.c0 END, 0.6021502797280822, ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN ((v0.c1) NOT NULL) THEN (((v0.c1)) BETWEEN ((v0.c2)) AND ((rt0.c2))) WHEN (((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((rt0.c1))) THEN ((v0.c1) IS FALSE) WHEN CAST(v0.c0 AS INTEGER) THEN rt0.c0 ELSE UPPER(v0.c0) END DESC  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (COALESCE(DISTINCT '', CASE WHEN v0.c1 THEN rt0.c2 WHEN v0.c2 THEN rt0.c0 WHEN v0.c1 THEN v0.c0 END, 0.6021502797280822, ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) ORDER BY CASE WHEN ((v0.c1) NOT NULL) THEN (((v0.c1)) BETWEEN ((v0.c2)) AND ((rt0.c2))) WHEN (((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((rt0.c1))) THEN ((v0.c1) IS FALSE) WHEN CAST(v0.c0 AS INTEGER) THEN rt0.c0 ELSE UPPER(v0.c0) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT '', CASE WHEN v0.c1 THEN rt0.c2 WHEN v0.c2 THEN rt0.c0 WHEN v0.c1 THEN v0.c0 END, 0.6021502797280822, ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN ((v0.c1) NOT NULL) THEN (((v0.c1)) BETWEEN ((v0.c2)) AND ((rt0.c2))) WHEN (((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((rt0.c1))) THEN ((v0.c1) IS FALSE) WHEN CAST(v0.c0 AS INTEGER) THEN rt0.c0 ELSE UPPER(v0.c0) END DESC  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (COALESCE(DISTINCT '', CASE WHEN v0.c1 THEN rt0.c2 WHEN v0.c2 THEN rt0.c0 WHEN v0.c1 THEN v0.c0 END, 0.6021502797280822, ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) ORDER BY CASE WHEN ((v0.c1) NOT NULL) THEN (((v0.c1)) BETWEEN ((v0.c2)) AND ((rt0.c2))) WHEN (((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((rt0.c1))) THEN ((v0.c1) IS FALSE) WHEN CAST(v0.c0 AS INTEGER) THEN rt0.c0 ELSE UPPER(v0.c0) END DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (CAST(rtreenode(rt0.c2, rt0.c1) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rtreenode(rt0.c2, rt0.c1) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(rtreenode(rt0.c2, rt0.c1) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rtreenode(rt0.c2, rt0.c1) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(rtreenode(rt0.c2, rt0.c1) AS NUMERIC));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON (v0.c0 COLLATE BINARY IN ()) WHERE (((CAST(v0.c2 AS INTEGER)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c2 AS INTEGER)) NOT NULL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (v0.c0 COLLATE BINARY IN ()));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON (v0.c0 COLLATE BINARY IN ()) WHERE (((CAST(v0.c2 AS INTEGER)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c2 AS INTEGER)) NOT NULL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (v0.c0 COLLATE BINARY IN ()));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON (v0.c0 COLLATE BINARY IN ()) WHERE (((CAST(v0.c2 AS INTEGER)) NOT NULL));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((v0.c2) NOTNULL))<=(((((x'')AND(rt0.c1)))AND(rt0.c1))))) ORDER BY ((((rt0.c1)&(rt0.c1))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c2) NOTNULL))<=(((((x'')AND(rt0.c1)))AND(rt0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c1)&(rt0.c1))) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((v0.c2) NOTNULL))<=(((((x'')AND(rt0.c1)))AND(rt0.c1))))) ORDER BY ((((rt0.c1)&(rt0.c1))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c2) NOTNULL))<=(((((x'')AND(rt0.c1)))AND(rt0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c1)&(rt0.c1))) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((v0.c2) NOTNULL))<=(((((x'')AND(rt0.c1)))AND(rt0.c1))))) ORDER BY ((((rt0.c1)&(rt0.c1))) NOTNULL) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (NULL);
SELECT * FROM rt0, v0 WHERE (((-1785575245)*(x'')));
SELECT SUM(count) FROM (SELECT ((((-1785575245)*(x''))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((-1785575245)*(x'')));
SELECT SUM(count) FROM (SELECT ((((-1785575245)*(x''))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((-1785575245)*(x'')));
SELECT ALL * FROM rt0 WHERE (rt0.c0 COLLATE BINARY) ORDER BY CAST(((rt0.c1)<>(rt0.c0)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c0 COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c1)!=(rt0.c0)) AS BLOB) ASC);
SELECT ALL * FROM rt0 WHERE (rt0.c0 COLLATE BINARY) ORDER BY CAST(((rt0.c1)<>(rt0.c0)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c0 COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c1)!=(rt0.c0)) AS BLOB) ASC);
SELECT ALL * FROM rt0 WHERE (rt0.c0 COLLATE BINARY) ORDER BY CAST(((rt0.c1)<>(rt0.c0)) AS BLOB) ASC;
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c1)IS NOT(rt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)IS NOT(rt0.c0))) NOT NULL)) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c1)IS NOT(rt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)IS NOT(rt0.c0))) NOT NULL)) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c1)IS NOT(rt0.c0))) NOT NULL));
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY)-(CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY)-(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY)-(CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY)-(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY)-(CAST(rt0.c2 AS BLOB))));
SELECT * FROM v0 WHERE (v0.c1) ORDER BY TRIM(0.5612026833943786, v0.c2) COLLATE RTRIM  NULLS FIRST, ((((((v0.c2) BETWEEN (v0.c2) AND (v0.c2)))OR((~ (v0.c2)))))AND(v0.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0 ORDER BY TRIM(0.5612026833943786, v0.c2) COLLATE RTRIM  NULLS FIRST, ((((((v0.c2) BETWEEN (v0.c2) AND (v0.c2)))OR((~ (v0.c2)))))AND(v0.c1)) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (v0.c1) ORDER BY TRIM(0.5612026833943786, v0.c2) COLLATE RTRIM  NULLS FIRST, ((((((v0.c2) BETWEEN (v0.c2) AND (v0.c2)))OR((~ (v0.c2)))))AND(v0.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0 ORDER BY TRIM(0.5612026833943786, v0.c2) COLLATE RTRIM  NULLS FIRST, ((((((v0.c2) BETWEEN (v0.c2) AND (v0.c2)))OR((~ (v0.c2)))))AND(v0.c1)) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (v0.c1) ORDER BY TRIM(0.5612026833943786, v0.c2) COLLATE RTRIM  NULLS FIRST, ((((((v0.c2) BETWEEN (v0.c2) AND (v0.c2)))OR((~ (v0.c2)))))AND(v0.c1)) ASC  NULLS FIRST;
SELECT * FROM v0, rt0 WHERE (CAST(CAST(rt0.c1 AS BLOB) AS INTEGER)) ORDER BY ((((((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((v0.c0, v0.c2, 0.24907843725954226)) AND ((v0.c2, v0.c2, v0.c2)))))==((((((rt0.c1)AND(v0.c0)))AND(rt0.c2))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c1 AS BLOB) AS INTEGER)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((v0.c0, v0.c2, 0.24907843725954226)) AND ((v0.c2, v0.c2, v0.c2)))))=((((((rt0.c1)AND(v0.c0)))AND(rt0.c2))))) ASC  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (CAST(CAST(rt0.c1 AS BLOB) AS INTEGER)) ORDER BY ((((((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((v0.c0, v0.c2, 0.24907843725954226)) AND ((v0.c2, v0.c2, v0.c2)))))==((((((rt0.c1)AND(v0.c0)))AND(rt0.c2))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c1 AS BLOB) AS INTEGER)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((v0.c0, v0.c2, 0.24907843725954226)) AND ((v0.c2, v0.c2, v0.c2)))))=((((((rt0.c1)AND(v0.c0)))AND(rt0.c2))))) ASC  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (CAST(CAST(rt0.c1 AS BLOB) AS INTEGER)) ORDER BY ((((((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((v0.c0, v0.c2, 0.24907843725954226)) AND ((v0.c2, v0.c2, v0.c2)))))==((((((rt0.c1)AND(v0.c0)))AND(rt0.c2))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((+ (LOWER(v0.c1)))) ORDER BY ((CAST(v0.c0 AS REAL))&(((rt0.c0)LIKE(rt0.c2)))), (((+ ('b탘')))>=(((rt0.c1) BETWEEN (rt0.c1) AND (v0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (LOWER(v0.c1)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((CAST(v0.c0 AS REAL))&(((rt0.c0)LIKE(rt0.c2)))), (((+ ('b탘')))>=(((rt0.c1) BETWEEN (rt0.c1) AND (v0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((+ (LOWER(v0.c1)))) ORDER BY ((CAST(v0.c0 AS REAL))&(((rt0.c0)LIKE(rt0.c2)))), (((+ ('b탘')))>=(((rt0.c1) BETWEEN (rt0.c1) AND (v0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (LOWER(v0.c1)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((CAST(v0.c0 AS REAL))&(((rt0.c0)LIKE(rt0.c2)))), (((+ ('b탘')))>=(((rt0.c1) BETWEEN (rt0.c1) AND (v0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((+ (LOWER(v0.c1)))) ORDER BY ((CAST(v0.c0 AS REAL))&(((rt0.c0)LIKE(rt0.c2)))), (((+ ('b탘')))>=(((rt0.c1) BETWEEN (rt0.c1) AND (v0.c2))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((rt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((rt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((rt0.c1) NOTNULL))));
SELECT COUNT(*) FROM v0, rt0 WHERE (((((('0.48587865961115506') NOTNULL)))>=(((v0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ((((((('0.48587865961115506') NOTNULL)))>=(((v0.c0 IN ()))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((('0.48587865961115506') NOTNULL)))>=(((v0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ((((((('0.48587865961115506') NOTNULL)))>=(((v0.c0 IN ()))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((('0.48587865961115506') NOTNULL)))>=(((v0.c0 IN ())))));
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c2)*(v0.c0))) ISNULL)) ORDER BY (('[,-R2Le') NOT BETWEEN ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0)))) AND (2.65522167E8))  NULLS FIRST, ((0X49e3f42e) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)*(v0.c0))) ISNULL)) IS TRUE)  as count FROM rt0, v0 ORDER BY (('[,-R2Le') NOT BETWEEN ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0)))) AND (2.65522167E8))  NULLS FIRST, ((0X49e3f42e) NOTNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c2)*(v0.c0))) ISNULL)) ORDER BY (('[,-R2Le') NOT BETWEEN ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0)))) AND (2.65522167E8))  NULLS FIRST, ((0X49e3f42e) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)*(v0.c0))) ISNULL)) IS TRUE)  as count FROM rt0, v0 ORDER BY (('[,-R2Le') NOT BETWEEN ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0)))) AND (2.65522167E8))  NULLS FIRST, ((0X49e3f42e) NOTNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c2)*(v0.c0))) ISNULL)) ORDER BY (('[,-R2Le') NOT BETWEEN ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0)))) AND (2.65522167E8))  NULLS FIRST, ((0X49e3f42e) NOTNULL) DESC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE ((((((v0.c2))<((v0.c2))))LIKE((~ (v0.c0))))) ORDER BY ((v0.c1) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c2))<((v0.c2))))LIKE((~ (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c1) IS FALSE) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((((((v0.c2))<((v0.c2))))LIKE((~ (v0.c0))))) ORDER BY ((v0.c1) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c2))<((v0.c2))))LIKE((~ (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c1) IS FALSE) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((((((v0.c2))<((v0.c2))))LIKE((~ (v0.c0))))) ORDER BY ((v0.c1) IS FALSE) ASC  NULLS FIRST;
SELECT ALL * FROM v0, rt0 WHERE (ROUND(((x'') ISNULL), ((v0.c2)>=(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((ROUND(((x'') ISNULL), ((v0.c2)>=(rt0.c2)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (ROUND(((x'') ISNULL), ((v0.c2)>=(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((ROUND(((x'') ISNULL), ((v0.c2)>=(rt0.c2)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (ROUND(((x'') ISNULL), ((v0.c2)>=(rt0.c2))));
SELECT * FROM rt0 WHERE (((((rt0.c1)<(rt0.c0))) NOT BETWEEN (((rt0.c0)||(rt0.c2))) AND (rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<(rt0.c0))) NOT BETWEEN (((rt0.c0)||(rt0.c2))) AND (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1)<(rt0.c0))) NOT BETWEEN (((rt0.c0)||(rt0.c2))) AND (rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<(rt0.c0))) NOT BETWEEN (((rt0.c0)||(rt0.c2))) AND (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1)<(rt0.c0))) NOT BETWEEN (((rt0.c0)||(rt0.c2))) AND (rt0.c2 COLLATE NOCASE)));
SELECT ALL * FROM rt0 WHERE (CAST(LIKELY(DISTINCT rt0.c1) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(LIKELY(DISTINCT rt0.c1) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(LIKELY(DISTINCT rt0.c1) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(LIKELY(DISTINCT rt0.c1) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(LIKELY(DISTINCT rt0.c1) AS REAL));
SELECT COUNT(*) FROM rt0, v0 WHERE ((~ (v0.c2 COLLATE NOCASE))) ORDER BY 0.23204233817504227;
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0 ORDER BY 0.23204233817504227);
SELECT COUNT(*) FROM rt0, v0 WHERE ((~ (v0.c2 COLLATE NOCASE))) ORDER BY 0.23204233817504227;
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0 ORDER BY 0.23204233817504227);
SELECT COUNT(*) FROM rt0, v0 WHERE ((~ (v0.c2 COLLATE NOCASE))) ORDER BY 0.23204233817504227;
SELECT COUNT(*) FROM v0 WHERE (CAST(NULL AS INTEGER)) ORDER BY 0.9674329050563449;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY 0.9674329050563449);
SELECT COUNT(*) FROM v0 WHERE (CAST(NULL AS INTEGER)) ORDER BY 0.9674329050563449;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY 0.9674329050563449);
SELECT COUNT(*) FROM v0 WHERE (CAST(NULL AS INTEGER)) ORDER BY 0.9674329050563449;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((NULL) ISNULL)) ORDER BY (+ (((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c1)))), ((CASE WHEN '-2069499917' THEN v0.c1 WHEN x'' THEN v0.c1 WHEN v0.c2 THEN v0.c2 ELSE rt0.c1 END)OR(CAST(v0.c1 AS REAL)))  NULLS FIRST, v0.c1 ASC;
SELECT SUM(count) FROM (SELECT ((((NULL) ISNULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY (+ (((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c1)))), ((CASE WHEN '-2069499917' THEN v0.c1 WHEN x'' THEN v0.c1 WHEN v0.c2 THEN v0.c2 ELSE rt0.c1 END)OR(CAST(v0.c1 AS REAL)))  NULLS FIRST, v0.c1 ASC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((NULL) ISNULL)) ORDER BY (+ (((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c1)))), ((CASE WHEN '-2069499917' THEN v0.c1 WHEN x'' THEN v0.c1 WHEN v0.c2 THEN v0.c2 ELSE rt0.c1 END)OR(CAST(v0.c1 AS REAL)))  NULLS FIRST, v0.c1 ASC;
SELECT SUM(count) FROM (SELECT ((((NULL) ISNULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY (+ (((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c1)))), ((CASE WHEN '-2069499917' THEN v0.c1 WHEN x'' THEN v0.c1 WHEN v0.c2 THEN v0.c2 ELSE rt0.c1 END)OR(CAST(v0.c1 AS REAL)))  NULLS FIRST, v0.c1 ASC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((NULL) ISNULL)) ORDER BY (+ (((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c1)))), ((CASE WHEN '-2069499917' THEN v0.c1 WHEN x'' THEN v0.c1 WHEN v0.c2 THEN v0.c2 ELSE rt0.c1 END)OR(CAST(v0.c1 AS REAL)))  NULLS FIRST, v0.c1 ASC;
SELECT * FROM v0, rt0 WHERE (((CAST(v0.c2 AS REAL)) BETWEEN (rt0.c1) AND (rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c2 AS REAL)) BETWEEN (rt0.c1) AND (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((CAST(v0.c2 AS REAL)) BETWEEN (rt0.c1) AND (rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c2 AS REAL)) BETWEEN (rt0.c1) AND (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((CAST(v0.c2 AS REAL)) BETWEEN (rt0.c1) AND (rt0.c2 COLLATE NOCASE)));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON (((((v0.c2))<((rt0.c1)))) BETWEEN (((v0.c1) IS TRUE)) AND (rt0.c2)) WHERE (((rt0.c0 IN ()) IN ())) ORDER BY CASE WHEN ((((v0.c1)AND(v0.c0)))OR(rt0.c0)) THEN (- (rt0.c1)) END;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 IN ()) IN ())) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((((v0.c2))<((rt0.c1)))) BETWEEN (((v0.c1) IS TRUE)) AND (rt0.c2)) ORDER BY CASE WHEN ((((v0.c1)AND(v0.c0)))OR(rt0.c0)) THEN (- (rt0.c1)) END);
SELECT * FROM v0 FULL OUTER JOIN rt0 ON (((((v0.c2))<((rt0.c1)))) BETWEEN (((v0.c1) IS TRUE)) AND (rt0.c2)) WHERE (((rt0.c0 IN ()) IN ())) ORDER BY CASE WHEN ((((v0.c1)AND(v0.c0)))OR(rt0.c0)) THEN (- (rt0.c1)) END;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 IN ()) IN ())) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((((v0.c2))<((rt0.c1)))) BETWEEN (((v0.c1) IS TRUE)) AND (rt0.c2)) ORDER BY CASE WHEN ((((v0.c1)AND(v0.c0)))OR(rt0.c0)) THEN (- (rt0.c1)) END);
SELECT * FROM v0 FULL OUTER JOIN rt0 ON (((((v0.c2))<((rt0.c1)))) BETWEEN (((v0.c1) IS TRUE)) AND (rt0.c2)) WHERE (((rt0.c0 IN ()) IN ())) ORDER BY CASE WHEN ((((v0.c1)AND(v0.c0)))OR(rt0.c0)) THEN (- (rt0.c1)) END;
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON ((COALESCE(DISTINCT rt0.c0, v0.c0)) BETWEEN ((((v0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND (TIME(x'8aee', rt0.c2, rt0.c2))) WHERE ((((rt0.c0)) BETWEEN ((((rt0.c0)+(v0.c1)))) AND ((((v0.c2) NOT BETWEEN (v0.c2) AND (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((((rt0.c0)+(v0.c1)))) AND ((((v0.c2) NOT BETWEEN (v0.c2) AND (rt0.c2)))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((COALESCE(DISTINCT rt0.c0, v0.c0)) BETWEEN ((((v0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND (TIME(x'8aee', rt0.c2, rt0.c2))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON ((COALESCE(DISTINCT rt0.c0, v0.c0)) BETWEEN ((((v0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND (TIME(x'8aee', rt0.c2, rt0.c2))) WHERE ((((rt0.c0)) BETWEEN ((((rt0.c0)+(v0.c1)))) AND ((((v0.c2) NOT BETWEEN (v0.c2) AND (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((((rt0.c0)+(v0.c1)))) AND ((((v0.c2) NOT BETWEEN (v0.c2) AND (rt0.c2)))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((COALESCE(DISTINCT rt0.c0, v0.c0)) BETWEEN ((((v0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND (TIME(x'8aee', rt0.c2, rt0.c2))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON ((COALESCE(DISTINCT rt0.c0, v0.c0)) BETWEEN ((((v0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND (TIME(x'8aee', rt0.c2, rt0.c2))) WHERE ((((rt0.c0)) BETWEEN ((((rt0.c0)+(v0.c1)))) AND ((((v0.c2) NOT BETWEEN (v0.c2) AND (rt0.c2))))));
SELECT * FROM v0 WHERE (((((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c0)))|((NOT (0x16c40d0a)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c0)))|((NOT (0x16c40d0a))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c0)))|((NOT (0x16c40d0a)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c0)))|((NOT (0x16c40d0a))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c0)))|((NOT (0x16c40d0a)))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((+ (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (v0.c0))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((+ (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (v0.c0))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((+ (v0.c0)));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c1)OR(v0.c1)))AND(v0.c1)) COLLATE BINARY) ORDER BY (((v0.c2)) NOT BETWEEN ((((v0.c1) IS FALSE))) AND ((v0.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c1)OR(v0.c1)))AND(v0.c1)) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY (((v0.c2)) NOT BETWEEN ((((v0.c1) IS FALSE))) AND ((v0.c2))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c1)OR(v0.c1)))AND(v0.c1)) COLLATE BINARY) ORDER BY (((v0.c2)) NOT BETWEEN ((((v0.c1) IS FALSE))) AND ((v0.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c1)OR(v0.c1)))AND(v0.c1)) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY (((v0.c2)) NOT BETWEEN ((((v0.c1) IS FALSE))) AND ((v0.c2))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c1)OR(v0.c1)))AND(v0.c1)) COLLATE BINARY) ORDER BY (((v0.c2)) NOT BETWEEN ((((v0.c1) IS FALSE))) AND ((v0.c2))) ASC  NULLS FIRST;
SELECT ALL * FROM v0, rt0 WHERE ((((v0.c0)OR(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0)OR(v0.c0)) IN ())) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((v0.c0)OR(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0)OR(v0.c0)) IN ())) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((v0.c0)OR(v0.c0)) IN ()));
SELECT * FROM rt0, v0 WHERE (0.14746985980011118);
SELECT SUM(count) FROM (SELECT ((0.14746985980011118) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (0.14746985980011118);
SELECT SUM(count) FROM (SELECT ((0.14746985980011118) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (0.14746985980011118);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c1) ISNULL)) ORDER BY ((NULL)>>((((v0.c2))<=((x''))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c1) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY ((NULL)>>((((v0.c2))<=((x''))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c1) ISNULL)) ORDER BY ((NULL)>>((((v0.c2))<=((x''))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c1) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY ((NULL)>>((((v0.c2))<=((x''))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c1) ISNULL)) ORDER BY ((NULL)>>((((v0.c2))<=((x''))))) DESC  NULLS FIRST;
SELECT * FROM v0 WHERE (((v0.c0) IS TRUE) COLLATE RTRIM) ORDER BY v0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY v0.c2  NULLS LAST);
SELECT * FROM v0 WHERE (((v0.c0) IS TRUE) COLLATE RTRIM) ORDER BY v0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY v0.c2  NULLS LAST);
SELECT * FROM v0 WHERE (((v0.c0) IS TRUE) COLLATE RTRIM) ORDER BY v0.c2  NULLS LAST;
SELECT ALL * FROM v0 INNER JOIN rt0 ON rt0.c2 WHERE ('516073448') ORDER BY ((CASE v0.c0  WHEN 'WeaVꮚp䮠 ' THEN v0.c1 ELSE rt0.c1 END) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('516073448') IS TRUE)  as count FROM v0 INNER JOIN rt0 ON rt0.c2 ORDER BY ((CASE v0.c0  WHEN 'WeaVꮚp䮠 ' THEN v0.c1 ELSE rt0.c1 END) IS FALSE)  NULLS LAST);
SELECT ALL * FROM v0 INNER JOIN rt0 ON rt0.c2 WHERE ('516073448') ORDER BY ((CASE v0.c0  WHEN 'WeaVꮚp䮠 ' THEN v0.c1 ELSE rt0.c1 END) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('516073448') IS TRUE)  as count FROM v0 INNER JOIN rt0 ON rt0.c2 ORDER BY ((CASE v0.c0  WHEN 'WeaVꮚp䮠 ' THEN v0.c1 ELSE rt0.c1 END) IS FALSE)  NULLS LAST);
SELECT ALL * FROM v0 INNER JOIN rt0 ON rt0.c2 WHERE ('516073448') ORDER BY ((CASE v0.c0  WHEN 'WeaVꮚp䮠 ' THEN v0.c1 ELSE rt0.c1 END) IS FALSE)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((421463289 IN ())) ORDER BY ROUND((~ (rt0.c0)), v0.c0 COLLATE RTRIM)  NULLS LAST, IFNULL(rt0.c1, NULLIF(rt0.c2, rt0.c1)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((421463289 IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY ROUND((~ (rt0.c0)), v0.c0 COLLATE RTRIM)  NULLS LAST, IFNULL(rt0.c1, NULLIF(rt0.c2, rt0.c1)) DESC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((421463289 IN ())) ORDER BY ROUND((~ (rt0.c0)), v0.c0 COLLATE RTRIM)  NULLS LAST, IFNULL(rt0.c1, NULLIF(rt0.c2, rt0.c1)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((421463289 IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY ROUND((~ (rt0.c0)), v0.c0 COLLATE RTRIM)  NULLS LAST, IFNULL(rt0.c1, NULLIF(rt0.c2, rt0.c1)) DESC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((421463289 IN ())) ORDER BY ROUND((~ (rt0.c0)), v0.c0 COLLATE RTRIM)  NULLS LAST, IFNULL(rt0.c1, NULLIF(rt0.c2, rt0.c1)) DESC;
SELECT ALL * FROM rt0, v0 WHERE ((((((v0.c2) NOTNULL)))>=((CASE v0.c0  WHEN v0.c1 THEN NULL END))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c2) NOTNULL)))>=((CASE v0.c0  WHEN v0.c1 THEN NULL END)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((((((v0.c2) NOTNULL)))>=((CASE v0.c0  WHEN v0.c1 THEN NULL END))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c2) NOTNULL)))>=((CASE v0.c0  WHEN v0.c1 THEN NULL END)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((((((v0.c2) NOTNULL)))>=((CASE v0.c0  WHEN v0.c1 THEN NULL END))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2)OR(v0.c2))) BETWEEN (MAX('d', v0.c1)) AND ('1702197069')));
SELECT SUM(count) FROM (SELECT ((((((v0.c2)OR(v0.c2))) BETWEEN (MAX('d', v0.c1)) AND ('1702197069'))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2)OR(v0.c2))) BETWEEN (MAX('d', v0.c1)) AND ('1702197069')));
SELECT SUM(count) FROM (SELECT ((((((v0.c2)OR(v0.c2))) BETWEEN (MAX('d', v0.c1)) AND ('1702197069'))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2)OR(v0.c2))) BETWEEN (MAX('d', v0.c1)) AND ('1702197069')));
SELECT * FROM rt0 WHERE ((NOT ('111602477')));
SELECT SUM(count) FROM (SELECT ALL (((NOT ('111602477'))) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT * FROM rt0 WHERE ((NOT ('111602477')));
SELECT SUM(count) FROM (SELECT ALL (((NOT ('111602477'))) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT * FROM rt0 WHERE ((NOT ('111602477')));
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))%('')));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))%(''))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))%('')));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))%(''))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))%('')));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE WHEN ((v0.c0) NOT NULL) THEN ((rt0.c0)LIKE(rt0.c1)) ELSE CASE WHEN v0.c1 THEN v0.c0 END END) ORDER BY json_array(HEX(DISTINCT rt0.c0), v0.c2, x'a5ab', CAST(v0.c2 AS NUMERIC), (NOT (v0.c0)), (v0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0) NOT NULL) THEN ((rt0.c0)LIKE(rt0.c1)) ELSE CASE WHEN v0.c1 THEN v0.c0 END END) IS TRUE)  as count FROM rt0, v0 ORDER BY json_array(HEX(DISTINCT rt0.c0), v0.c2, x'a5ab', CAST(v0.c2 AS NUMERIC), (NOT (v0.c0)), (v0.c0 IN ())));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE WHEN ((v0.c0) NOT NULL) THEN ((rt0.c0)LIKE(rt0.c1)) ELSE CASE WHEN v0.c1 THEN v0.c0 END END) ORDER BY json_array(HEX(DISTINCT rt0.c0), v0.c2, x'a5ab', CAST(v0.c2 AS NUMERIC), (NOT (v0.c0)), (v0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0) NOT NULL) THEN ((rt0.c0)LIKE(rt0.c1)) ELSE CASE WHEN v0.c1 THEN v0.c0 END END) IS TRUE)  as count FROM rt0, v0 ORDER BY json_array(HEX(DISTINCT rt0.c0), v0.c2, x'a5ab', CAST(v0.c2 AS NUMERIC), (NOT (v0.c0)), (v0.c0 IN ())));
SELECT * FROM rt0, v0 WHERE (((CAST(v0.c2 AS BLOB))GLOB(((x'')||(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c2 AS BLOB))GLOB(((x'')||(rt0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((CAST(v0.c2 AS BLOB))GLOB(((x'')||(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c2 AS BLOB))GLOB(((x'')||(rt0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((CAST(v0.c2 AS BLOB))GLOB(((x'')||(rt0.c2)))));
SELECT * FROM v0, rt0 WHERE (UNLIKELY(DISTINCT CASE 0.45863314910476827  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN v0.c1 WHEN v0.c0 THEN -1797932106 WHEN v0.c1 THEN rt0.c1 WHEN 'R' THEN v0.c0 ELSE v0.c2 END));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT CASE 0.45863314910476827  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN v0.c1 WHEN v0.c0 THEN -1797932106 WHEN v0.c1 THEN rt0.c1 WHEN 'R' THEN v0.c0 ELSE v0.c2 END)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (UNLIKELY(DISTINCT CASE 0.45863314910476827  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN v0.c1 WHEN v0.c0 THEN -1797932106 WHEN v0.c1 THEN rt0.c1 WHEN 'R' THEN v0.c0 ELSE v0.c2 END));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT CASE 0.45863314910476827  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN v0.c1 WHEN v0.c0 THEN -1797932106 WHEN v0.c1 THEN rt0.c1 WHEN 'R' THEN v0.c0 ELSE v0.c2 END)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (UNLIKELY(DISTINCT CASE 0.45863314910476827  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN v0.c1 WHEN v0.c0 THEN -1797932106 WHEN v0.c1 THEN rt0.c1 WHEN 'R' THEN v0.c0 ELSE v0.c2 END));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0)/(rt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)/(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0)/(rt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)/(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0)/(rt0.c2)) AS BLOB));
SELECT COUNT(*) FROM v0, rt0 WHERE (LOWER(CAST('' AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(CAST('' AS TEXT))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (LOWER(CAST('' AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(CAST('' AS TEXT))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (LOWER(CAST('' AS TEXT)));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST(((rt0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)) AS NUMERIC)) ORDER BY ((((v0.c1)>=(rt0.c0)))IS NOT((NOT (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((v0.c1)>=(rt0.c0)))IS NOT((NOT (v0.c0)))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST(((rt0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)) AS NUMERIC)) ORDER BY ((((v0.c1)>=(rt0.c0)))IS NOT((NOT (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((v0.c1)>=(rt0.c0)))IS NOT((NOT (v0.c0)))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST(((rt0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)) AS NUMERIC)) ORDER BY ((((v0.c1)>=(rt0.c0)))IS NOT((NOT (v0.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))+(x'5040')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))+(x'5040'))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))+(x'5040')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))+(x'5040'))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))+(x'5040')));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c2) ISNULL))OR(((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))))OR(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2) ISNULL))OR(((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))))OR(rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c2) ISNULL))OR(((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))))OR(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2) ISNULL))OR(((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))))OR(rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c2) ISNULL))OR(((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))))OR(rt0.c2)));
SELECT COUNT(*) FROM rt0, v0 WHERE (((rt0.c1 COLLATE NOCASE) NOT BETWEEN (((v0.c1) IS FALSE)) AND ((((v0.c1)) BETWEEN ((v0.c2)) AND ((v0.c1))))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE) NOT BETWEEN (((v0.c1) IS FALSE)) AND ((((v0.c1)) BETWEEN ((v0.c2)) AND ((v0.c1)))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((rt0.c1 COLLATE NOCASE) NOT BETWEEN (((v0.c1) IS FALSE)) AND ((((v0.c1)) BETWEEN ((v0.c2)) AND ((v0.c1))))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE) NOT BETWEEN (((v0.c1) IS FALSE)) AND ((((v0.c1)) BETWEEN ((v0.c2)) AND ((v0.c1)))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((rt0.c1 COLLATE NOCASE) NOT BETWEEN (((v0.c1) IS FALSE)) AND ((((v0.c1)) BETWEEN ((v0.c2)) AND ((v0.c1))))));
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON ((((((((((v0.c2)OR(v0.c1)))AND(v0.c0)))OR(v0.c0)))OR(rt0.c1)))GLOB((+ (rt0.c2)))) WHERE ((NOT (((((rt0.c1)OR(1951736931)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((rt0.c1)OR(1951736931)))AND(rt0.c1))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((((((((((v0.c2)OR(v0.c1)))AND(v0.c0)))OR(v0.c0)))OR(rt0.c1)))GLOB((+ (rt0.c2)))));
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON ((((((((((v0.c2)OR(v0.c1)))AND(v0.c0)))OR(v0.c0)))OR(rt0.c1)))GLOB((+ (rt0.c2)))) WHERE ((NOT (((((rt0.c1)OR(1951736931)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((rt0.c1)OR(1951736931)))AND(rt0.c1))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((((((((((v0.c2)OR(v0.c1)))AND(v0.c0)))OR(v0.c0)))OR(rt0.c1)))GLOB((+ (rt0.c2)))));
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON ((((((((((v0.c2)OR(v0.c1)))AND(v0.c0)))OR(v0.c0)))OR(rt0.c1)))GLOB((+ (rt0.c2)))) WHERE ((NOT (((((rt0.c1)OR(1951736931)))AND(rt0.c1)))));
SELECT * FROM rt0, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (NULL);
SELECT * FROM v0, rt0 WHERE ((('265522167')>(CAST(rt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((('265522167')>(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((('265522167')>(CAST(rt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((('265522167')>(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((('265522167')>(CAST(rt0.c0 AS NUMERIC))));
SELECT * FROM v0 WHERE ((((v0.c2)) BETWEEN ((IFNULL('	4Z5.w', v0.c1))) AND ((x'c8f7cdec' COLLATE NOCASE)))) ORDER BY (+ (x'')) DESC;
SELECT SUM(count) FROM (SELECT (((((v0.c2)) BETWEEN ((IFNULL('	4Z5.w', v0.c1))) AND ((x'c8f7cdec' COLLATE NOCASE)))) IS TRUE)  as count FROM v0 ORDER BY (+ (x'')) DESC);
SELECT * FROM v0 WHERE ((((v0.c2)) BETWEEN ((IFNULL('	4Z5.w', v0.c1))) AND ((x'c8f7cdec' COLLATE NOCASE)))) ORDER BY (+ (x'')) DESC;
SELECT SUM(count) FROM (SELECT (((((v0.c2)) BETWEEN ((IFNULL('	4Z5.w', v0.c1))) AND ((x'c8f7cdec' COLLATE NOCASE)))) IS TRUE)  as count FROM v0 ORDER BY (+ (x'')) DESC);
SELECT * FROM v0 WHERE ((((v0.c2)) BETWEEN ((IFNULL('	4Z5.w', v0.c1))) AND ((x'c8f7cdec' COLLATE NOCASE)))) ORDER BY (+ (x'')) DESC;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((x'' IN (json_extract(v0.c2, rt0.c0), (v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((x'' IN (json_extract(v0.c2, rt0.c0), (v0.c0 IN ())))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((x'' IN (json_extract(v0.c2, rt0.c0), (v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((x'' IN (json_extract(v0.c2, rt0.c0), (v0.c0 IN ())))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c2)) NOT BETWEEN ((v0.c2)) AND ((CASE v0.c2  WHEN rt0.c2 THEN v0.c0 ELSE v0.c2 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((v0.c2)) AND ((CASE v0.c2  WHEN rt0.c2 THEN v0.c0 ELSE v0.c2 END)))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c2)) NOT BETWEEN ((v0.c2)) AND ((CASE v0.c2  WHEN rt0.c2 THEN v0.c0 ELSE v0.c2 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((v0.c2)) AND ((CASE v0.c2  WHEN rt0.c2 THEN v0.c0 ELSE v0.c2 END)))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c2)) NOT BETWEEN ((v0.c2)) AND ((CASE v0.c2  WHEN rt0.c2 THEN v0.c0 ELSE v0.c2 END))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON ((json_quote(v0.c0))IS NOT(rt0.c0 COLLATE NOCASE)) WHERE ('0.5612026833943786') ORDER BY (((((v0.c2)>>(v0.c1))))!=((((NULL)||(v0.c0)))))  NULLS LAST, v0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('0.5612026833943786') IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((json_quote(v0.c0))IS NOT(rt0.c0 COLLATE NOCASE)) ORDER BY (((((v0.c2)>>(v0.c1))))!=((((NULL)||(v0.c0)))))  NULLS LAST, v0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON ((json_quote(v0.c0))IS NOT(rt0.c0 COLLATE NOCASE)) WHERE ('0.5612026833943786') ORDER BY (((((v0.c2)>>(v0.c1))))!=((((NULL)||(v0.c0)))))  NULLS LAST, v0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('0.5612026833943786') IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((json_quote(v0.c0))IS NOT(rt0.c0 COLLATE NOCASE)) ORDER BY (((((v0.c2)>>(v0.c1))))!=((((NULL)||(v0.c0)))))  NULLS LAST, v0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON ((json_quote(v0.c0))IS NOT(rt0.c0 COLLATE NOCASE)) WHERE ('0.5612026833943786') ORDER BY (((((v0.c2)>>(v0.c1))))!=((((NULL)||(v0.c0)))))  NULLS LAST, v0.c0 ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((CAST(1.066064062E9 AS TEXT) IN (rt0.c2 COLLATE BINARY, CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) ORDER BY (+ (((((rt0.c0)AND(rt0.c2)))AND(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(1.066064062E9 AS TEXT) IN (rt0.c2 COLLATE BINARY, CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0 ORDER BY (+ (((((rt0.c0)AND(rt0.c2)))AND(rt0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((CAST(1.066064062E9 AS TEXT) IN (rt0.c2 COLLATE BINARY, CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) ORDER BY (+ (((((rt0.c0)AND(rt0.c2)))AND(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(1.066064062E9 AS TEXT) IN (rt0.c2 COLLATE BINARY, CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0 ORDER BY (+ (((((rt0.c0)AND(rt0.c2)))AND(rt0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((CAST(1.066064062E9 AS TEXT) IN (rt0.c2 COLLATE BINARY, CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) ORDER BY (+ (((((rt0.c0)AND(rt0.c2)))AND(rt0.c2))))  NULLS FIRST;
SELECT * FROM v0 WHERE (((((v0.c2) IS FALSE)) NOT BETWEEN ((((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c1)))) AND ((((v0.c0, v0.c1, v0.c1))>((v0.c2, v0.c1, v0.c1)))))) ORDER BY ((CASE v0.c1  WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN x'' ELSE v0.c1 END) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c2) IS FALSE)) NOT BETWEEN ((((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c1)))) AND ((((v0.c0, v0.c1, v0.c1))>((v0.c2, v0.c1, v0.c1)))))) IS TRUE)  as count FROM v0 ORDER BY ((CASE v0.c1  WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN x'' ELSE v0.c1 END) NOT NULL)  NULLS LAST);
SELECT * FROM v0 WHERE (((((v0.c2) IS FALSE)) NOT BETWEEN ((((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c1)))) AND ((((v0.c0, v0.c1, v0.c1))>((v0.c2, v0.c1, v0.c1)))))) ORDER BY ((CASE v0.c1  WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN x'' ELSE v0.c1 END) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c2) IS FALSE)) NOT BETWEEN ((((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c1)))) AND ((((v0.c0, v0.c1, v0.c1))>((v0.c2, v0.c1, v0.c1)))))) IS TRUE)  as count FROM v0 ORDER BY ((CASE v0.c1  WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN x'' ELSE v0.c1 END) NOT NULL)  NULLS LAST);
SELECT * FROM v0 WHERE (((((v0.c2) IS FALSE)) NOT BETWEEN ((((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c1)))) AND ((((v0.c0, v0.c1, v0.c1))>((v0.c2, v0.c1, v0.c1)))))) ORDER BY ((CASE v0.c1  WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN x'' ELSE v0.c1 END) NOT NULL)  NULLS LAST;
SELECT ALL * FROM rt0, v0 WHERE (((((((rt0.c2)%(v0.c2)))AND(((v0.c1) BETWEEN (v0.c1) AND (rt0.c2)))))AND(((0.1088127235286308) BETWEEN (rt0.c2) AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)%(v0.c2)))AND(((v0.c1) BETWEEN (v0.c1) AND (rt0.c2)))))AND(((0.1088127235286308) BETWEEN (rt0.c2) AND (v0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((((((rt0.c2)%(v0.c2)))AND(((v0.c1) BETWEEN (v0.c1) AND (rt0.c2)))))AND(((0.1088127235286308) BETWEEN (rt0.c2) AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)%(v0.c2)))AND(((v0.c1) BETWEEN (v0.c1) AND (rt0.c2)))))AND(((0.1088127235286308) BETWEEN (rt0.c2) AND (v0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((((((rt0.c2)%(v0.c2)))AND(((v0.c1) BETWEEN (v0.c1) AND (rt0.c2)))))AND(((0.1088127235286308) BETWEEN (rt0.c2) AND (v0.c1)))));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON 0.1317345606306375 COLLATE BINARY WHERE (UPPER(((v0.c1) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((v0.c1) IS FALSE))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON 0.1317345606306375 COLLATE BINARY);
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON 0.1317345606306375 COLLATE BINARY WHERE (UPPER(((v0.c1) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((v0.c1) IS FALSE))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON 0.1317345606306375 COLLATE BINARY);
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON 0.1317345606306375 COLLATE BINARY WHERE (UPPER(((v0.c1) IS FALSE)));
SELECT COUNT(*) FROM v0 WHERE (((v0.c2 COLLATE RTRIM) ISNULL)) ORDER BY CAST(json(v0.c2) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY CAST(json(v0.c2) AS REAL) DESC);
SELECT COUNT(*) FROM v0 WHERE (((v0.c2 COLLATE RTRIM) ISNULL)) ORDER BY CAST(json(v0.c2) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY CAST(json(v0.c2) AS REAL) DESC);
SELECT COUNT(*) FROM v0 WHERE (((v0.c2 COLLATE RTRIM) ISNULL)) ORDER BY CAST(json(v0.c2) AS REAL) DESC;
SELECT * FROM rt0 WHERE ((rt0.c0 IN (rt0.c1)) COLLATE BINARY) ORDER BY (((rt0.c2 IN (rt0.c1, rt0.c2))) NOT BETWEEN (((x'171d') NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (((rt0.c2) IS TRUE)))  NULLS LAST, (NOT (TOTAL_CHANGES())) DESC;
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN (rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN (rt0.c1, rt0.c2))) NOT BETWEEN (((x'171d') NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (((rt0.c2) IS TRUE)))  NULLS LAST, (NOT (TOTAL_CHANGES())) DESC);
SELECT * FROM rt0 WHERE ((rt0.c0 IN (rt0.c1)) COLLATE BINARY) ORDER BY (((rt0.c2 IN (rt0.c1, rt0.c2))) NOT BETWEEN (((x'171d') NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (((rt0.c2) IS TRUE)))  NULLS LAST, (NOT (TOTAL_CHANGES())) DESC;
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN (rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN (rt0.c1, rt0.c2))) NOT BETWEEN (((x'171d') NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (((rt0.c2) IS TRUE)))  NULLS LAST, (NOT (TOTAL_CHANGES())) DESC);
SELECT * FROM rt0 WHERE ((rt0.c0 IN (rt0.c1)) COLLATE BINARY) ORDER BY (((rt0.c2 IN (rt0.c1, rt0.c2))) NOT BETWEEN (((x'171d') NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (((rt0.c2) IS TRUE)))  NULLS LAST, (NOT (TOTAL_CHANGES())) DESC;
SELECT ALL * FROM rt0, v0 WHERE ((((~ (rt0.c0))) BETWEEN (CHAR(v0.c0, v0.c2, 1.719320983E9)) AND (((((v0.c2)OR(v0.c0)))AND(v0.c1)))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c0))) BETWEEN (CHAR(v0.c0, v0.c2, 1.719320983E9)) AND (((((v0.c2)OR(v0.c0)))AND(v0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((((~ (rt0.c0))) BETWEEN (CHAR(v0.c0, v0.c2, 1.719320983E9)) AND (((((v0.c2)OR(v0.c0)))AND(v0.c1)))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c0))) BETWEEN (CHAR(v0.c0, v0.c2, 1.719320983E9)) AND (((((v0.c2)OR(v0.c0)))AND(v0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((((~ (rt0.c0))) BETWEEN (CHAR(v0.c0, v0.c2, 1.719320983E9)) AND (((((v0.c2)OR(v0.c0)))AND(v0.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST('' COLLATE RTRIM AS TEXT)) ORDER BY ((((rt0.c1) IS TRUE)) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))) AND (CAST(rt0.c2 AS TEXT))), UNLIKELY(DISTINCT (rt0.c1 IN (rt0.c1, rt0.c2, rt0.c1, rt0.c1)))  NULLS LAST, ((((rt0.c0)<>(rt0.c2))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('' COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) IS TRUE)) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))) AND (CAST(rt0.c2 AS TEXT))), UNLIKELY(DISTINCT (rt0.c1 IN (rt0.c1, rt0.c2, rt0.c1, rt0.c1)))  NULLS LAST, ((((rt0.c0)!=(rt0.c2))) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST('' COLLATE RTRIM AS TEXT)) ORDER BY ((((rt0.c1) IS TRUE)) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))) AND (CAST(rt0.c2 AS TEXT))), UNLIKELY(DISTINCT (rt0.c1 IN (rt0.c1, rt0.c2, rt0.c1, rt0.c1)))  NULLS LAST, ((((rt0.c0)<>(rt0.c2))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('' COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) IS TRUE)) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))) AND (CAST(rt0.c2 AS TEXT))), UNLIKELY(DISTINCT (rt0.c1 IN (rt0.c1, rt0.c2, rt0.c1, rt0.c1)))  NULLS LAST, ((((rt0.c0)!=(rt0.c2))) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST('' COLLATE RTRIM AS TEXT)) ORDER BY ((((rt0.c1) IS TRUE)) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))) AND (CAST(rt0.c2 AS TEXT))), UNLIKELY(DISTINCT (rt0.c1 IN (rt0.c1, rt0.c2, rt0.c1, rt0.c1)))  NULLS LAST, ((((rt0.c0)<>(rt0.c2))) ISNULL)  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)==(rt0.c0))) NOT BETWEEN (((rt0.c2) NOTNULL)) AND ((rt0.c0 IN (rt0.c0))))) ORDER BY (((NOT (rt0.c0)))&((rt0.c1 IN (rt0.c0, rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)=(rt0.c0))) NOT BETWEEN (((rt0.c2) NOTNULL)) AND ((rt0.c0 IN (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((NOT (rt0.c0)))&((rt0.c1 IN (rt0.c0, rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)==(rt0.c0))) NOT BETWEEN (((rt0.c2) NOTNULL)) AND ((rt0.c0 IN (rt0.c0))))) ORDER BY (((NOT (rt0.c0)))&((rt0.c1 IN (rt0.c0, rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)=(rt0.c0))) NOT BETWEEN (((rt0.c2) NOTNULL)) AND ((rt0.c0 IN (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((NOT (rt0.c0)))&((rt0.c1 IN (rt0.c0, rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)==(rt0.c0))) NOT BETWEEN (((rt0.c2) NOTNULL)) AND ((rt0.c0 IN (rt0.c0))))) ORDER BY (((NOT (rt0.c0)))&((rt0.c1 IN (rt0.c0, rt0.c2))));
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((~ (CAST(v0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(v0.c1 AS TEXT)))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((~ (CAST(v0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(v0.c1 AS TEXT)))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((~ (CAST(v0.c1 AS TEXT))));
SELECT * FROM rt0, v0 WHERE ((((NOT (rt0.c2))) NOT NULL)) ORDER BY ((((rt0.c0) IS TRUE))GLOB(((rt0.c2) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c0) IS TRUE))GLOB(((rt0.c2) NOTNULL)))  NULLS LAST);
SELECT * FROM rt0, v0 WHERE ((((NOT (rt0.c2))) NOT NULL)) ORDER BY ((((rt0.c0) IS TRUE))GLOB(((rt0.c2) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c0) IS TRUE))GLOB(((rt0.c2) NOTNULL)))  NULLS LAST);
SELECT * FROM rt0, v0 WHERE ((((NOT (rt0.c2))) NOT NULL)) ORDER BY ((((rt0.c0) IS TRUE))GLOB(((rt0.c2) NOTNULL)))  NULLS LAST;
SELECT * FROM v0 WHERE (((((x'a73d')AND(((v0.c0) IS FALSE))))AND(((v0.c1) BETWEEN (v0.c2) AND (v0.c2))))) ORDER BY CASE ABS(DISTINCT v0.c1)  WHEN ((v0.c0)<=(v0.c2)) THEN ((((v0.c2)OR(v0.c0)))AND(v0.c1)) WHEN ((v0.c1)=(v0.c1)) THEN ((((((((v0.c1)AND(v0.c0)))AND(v0.c2)))AND(v0.c1)))AND(v0.c0)) WHEN CASE v0.c0  WHEN v0.c1 THEN v0.c0 ELSE 0.5988227869359002 END THEN ((v0.c0) ISNULL) WHEN TYPEOF(DISTINCT v0.c2) THEN ((v0.c0) NOT NULL) WHEN ((((((((v0.c0)OR(v0.c2)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) THEN ((v0.c2) NOTNULL) ELSE (v0.c1 IN ()) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'a73d')AND(((v0.c0) IS FALSE))))AND(((v0.c1) BETWEEN (v0.c2) AND (v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY CASE ABS(DISTINCT v0.c1)  WHEN ((v0.c0)<=(v0.c2)) THEN ((((v0.c2)OR(v0.c0)))AND(v0.c1)) WHEN ((v0.c1)=(v0.c1)) THEN ((((((((v0.c1)AND(v0.c0)))AND(v0.c2)))AND(v0.c1)))AND(v0.c0)) WHEN CASE v0.c0  WHEN v0.c1 THEN v0.c0 ELSE 0.5988227869359002 END THEN ((v0.c0) ISNULL) WHEN TYPEOF(DISTINCT v0.c2) THEN ((v0.c0) NOT NULL) WHEN ((((((((v0.c0)OR(v0.c2)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) THEN ((v0.c2) NOTNULL) ELSE (v0.c1 IN ()) END ASC  NULLS LAST);
SELECT * FROM v0 WHERE (((((x'a73d')AND(((v0.c0) IS FALSE))))AND(((v0.c1) BETWEEN (v0.c2) AND (v0.c2))))) ORDER BY CASE ABS(DISTINCT v0.c1)  WHEN ((v0.c0)<=(v0.c2)) THEN ((((v0.c2)OR(v0.c0)))AND(v0.c1)) WHEN ((v0.c1)=(v0.c1)) THEN ((((((((v0.c1)AND(v0.c0)))AND(v0.c2)))AND(v0.c1)))AND(v0.c0)) WHEN CASE v0.c0  WHEN v0.c1 THEN v0.c0 ELSE 0.5988227869359002 END THEN ((v0.c0) ISNULL) WHEN TYPEOF(DISTINCT v0.c2) THEN ((v0.c0) NOT NULL) WHEN ((((((((v0.c0)OR(v0.c2)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) THEN ((v0.c2) NOTNULL) ELSE (v0.c1 IN ()) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'a73d')AND(((v0.c0) IS FALSE))))AND(((v0.c1) BETWEEN (v0.c2) AND (v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY CASE ABS(DISTINCT v0.c1)  WHEN ((v0.c0)<=(v0.c2)) THEN ((((v0.c2)OR(v0.c0)))AND(v0.c1)) WHEN ((v0.c1)=(v0.c1)) THEN ((((((((v0.c1)AND(v0.c0)))AND(v0.c2)))AND(v0.c1)))AND(v0.c0)) WHEN CASE v0.c0  WHEN v0.c1 THEN v0.c0 ELSE 0.5988227869359002 END THEN ((v0.c0) ISNULL) WHEN TYPEOF(DISTINCT v0.c2) THEN ((v0.c0) NOT NULL) WHEN ((((((((v0.c0)OR(v0.c2)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) THEN ((v0.c2) NOTNULL) ELSE (v0.c1 IN ()) END ASC  NULLS LAST);
SELECT * FROM v0 WHERE (((((x'a73d')AND(((v0.c0) IS FALSE))))AND(((v0.c1) BETWEEN (v0.c2) AND (v0.c2))))) ORDER BY CASE ABS(DISTINCT v0.c1)  WHEN ((v0.c0)<=(v0.c2)) THEN ((((v0.c2)OR(v0.c0)))AND(v0.c1)) WHEN ((v0.c1)=(v0.c1)) THEN ((((((((v0.c1)AND(v0.c0)))AND(v0.c2)))AND(v0.c1)))AND(v0.c0)) WHEN CASE v0.c0  WHEN v0.c1 THEN v0.c0 ELSE 0.5988227869359002 END THEN ((v0.c0) ISNULL) WHEN TYPEOF(DISTINCT v0.c2) THEN ((v0.c0) NOT NULL) WHEN ((((((((v0.c0)OR(v0.c2)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) THEN ((v0.c2) NOTNULL) ELSE (v0.c1 IN ()) END ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((('lf') NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((('lf') NOTNULL)) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT COUNT(*) FROM rt0 WHERE ((('lf') NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((('lf') NOTNULL)) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT COUNT(*) FROM rt0 WHERE ((('lf') NOTNULL));
SELECT COUNT(*) FROM rt0 WHERE (((((NULL)<(rt0.c2)))*((NOT (rt0.c2))))) ORDER BY (- (rt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((NULL)<(rt0.c2)))*((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (- (rt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 WHERE (((((NULL)<(rt0.c2)))*((NOT (rt0.c2))))) ORDER BY (- (rt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((NULL)<(rt0.c2)))*((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (- (rt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 WHERE (((((NULL)<(rt0.c2)))*((NOT (rt0.c2))))) ORDER BY (- (rt0.c0)) COLLATE BINARY;
SELECT COUNT(*) FROM rt0, v0 WHERE ((((CASE v0.c0  WHEN v0.c2 THEN rt0.c0 END))=(((+ (v0.c0)))))) ORDER BY ((v0.c2) ISNULL)  NULLS LAST, TRIM('XB' COLLATE BINARY, (-315460536 IN (v0.c2, v0.c0)))  NULLS FIRST, ((((x'')OR(((rt0.c1) ISNULL))))OR(v0.c2)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CASE v0.c0  WHEN v0.c2 THEN rt0.c0 END))=(((+ (v0.c0)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((v0.c2) ISNULL)  NULLS LAST, TRIM('XB' COLLATE BINARY, (-315460536 IN (v0.c2, v0.c0)))  NULLS FIRST, ((((x'')OR(((rt0.c1) ISNULL))))OR(v0.c2)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((CASE v0.c0  WHEN v0.c2 THEN rt0.c0 END))=(((+ (v0.c0)))))) ORDER BY ((v0.c2) ISNULL)  NULLS LAST, TRIM('XB' COLLATE BINARY, (-315460536 IN (v0.c2, v0.c0)))  NULLS FIRST, ((((x'')OR(((rt0.c1) ISNULL))))OR(v0.c2)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CASE v0.c0  WHEN v0.c2 THEN rt0.c0 END))=(((+ (v0.c0)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((v0.c2) ISNULL)  NULLS LAST, TRIM('XB' COLLATE BINARY, (-315460536 IN (v0.c2, v0.c0)))  NULLS FIRST, ((((x'')OR(((rt0.c1) ISNULL))))OR(v0.c2)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((CASE v0.c0  WHEN v0.c2 THEN rt0.c0 END))=(((+ (v0.c0)))))) ORDER BY ((v0.c2) ISNULL)  NULLS LAST, TRIM('XB' COLLATE BINARY, (-315460536 IN (v0.c2, v0.c0)))  NULLS FIRST, ((((x'')OR(((rt0.c1) ISNULL))))OR(v0.c2)) ASC  NULLS FIRST;
SELECT ALL * FROM rt0, v0 WHERE (((((v0.c2)>=(rt0.c2)))<=(v0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((v0.c2)>=(rt0.c2)))<=(v0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((((v0.c2)>=(rt0.c2)))<=(v0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((v0.c2)>=(rt0.c2)))<=(v0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((((v0.c2)>=(rt0.c2)))<=(v0.c2 COLLATE BINARY)));
SELECT ALL * FROM v0 WHERE (((((v0.c1)IS NOT(v0.c0)))IS(CAST(v0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((v0.c1)IS NOT(v0.c0)))IS(CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c1)IS NOT(v0.c0)))IS(CAST(v0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((v0.c1)IS NOT(v0.c0)))IS(CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c1)IS NOT(v0.c0)))IS(CAST(v0.c0 AS REAL))));
SELECT * FROM v0 WHERE ((((v0.c0 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0 IN ())) NOT NULL));
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)IS(rt0.c2))) ISNULL)) ORDER BY rt0.c1 COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)IS(rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)IS(rt0.c2))) ISNULL)) ORDER BY rt0.c1 COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)IS(rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)IS(rt0.c2))) ISNULL)) ORDER BY rt0.c1 COLLATE RTRIM DESC  NULLS FIRST;
SELECT * FROM v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c1);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN (~ (rt0.c2)) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END END) ORDER BY (((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2))))==((-1.359518637E9))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (rt0.c2)) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END END) IS TRUE)  as count FROM rt0 ORDER BY (((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2))))=((-1.359518637E9))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN (~ (rt0.c2)) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END END) ORDER BY (((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2))))==((-1.359518637E9))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (rt0.c2)) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END END) IS TRUE)  as count FROM rt0 ORDER BY (((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2))))=((-1.359518637E9))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN (~ (rt0.c2)) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END END) ORDER BY (((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2))))==((-1.359518637E9))) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN (v0.c2 IN (x'b43e', v0.c2)) THEN ((0.9885067556896098) NOT BETWEEN (v0.c2) AND (v0.c1)) WHEN (~ (v0.c1)) THEN ((v0.c0) NOT NULL) WHEN CAST(v0.c2 AS INTEGER) THEN LOWER(v0.c1) ELSE ((((v0.c1)OR(v0.c0)))AND(v0.c2)) END) ORDER BY ((v0.c2) NOT NULL) COLLATE NOCASE, CASE WHEN ((v0.c0)GLOB(v0.c1)) THEN NULLIF(v0.c0, v0.c2) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (v0.c2 IN (x'b43e', v0.c2)) THEN ((0.9885067556896098) NOT BETWEEN (v0.c2) AND (v0.c1)) WHEN (~ (v0.c1)) THEN ((v0.c0) NOT NULL) WHEN CAST(v0.c2 AS INTEGER) THEN LOWER(v0.c1) ELSE ((((v0.c1)OR(v0.c0)))AND(v0.c2)) END) IS TRUE)  as count FROM v0 ORDER BY ((v0.c2) NOT NULL) COLLATE NOCASE, CASE WHEN ((v0.c0)GLOB(v0.c1)) THEN NULLIF(v0.c0, v0.c2) END  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN (v0.c2 IN (x'b43e', v0.c2)) THEN ((0.9885067556896098) NOT BETWEEN (v0.c2) AND (v0.c1)) WHEN (~ (v0.c1)) THEN ((v0.c0) NOT NULL) WHEN CAST(v0.c2 AS INTEGER) THEN LOWER(v0.c1) ELSE ((((v0.c1)OR(v0.c0)))AND(v0.c2)) END) ORDER BY ((v0.c2) NOT NULL) COLLATE NOCASE, CASE WHEN ((v0.c0)GLOB(v0.c1)) THEN NULLIF(v0.c0, v0.c2) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (v0.c2 IN (x'b43e', v0.c2)) THEN ((0.9885067556896098) NOT BETWEEN (v0.c2) AND (v0.c1)) WHEN (~ (v0.c1)) THEN ((v0.c0) NOT NULL) WHEN CAST(v0.c2 AS INTEGER) THEN LOWER(v0.c1) ELSE ((((v0.c1)OR(v0.c0)))AND(v0.c2)) END) IS TRUE)  as count FROM v0 ORDER BY ((v0.c2) NOT NULL) COLLATE NOCASE, CASE WHEN ((v0.c0)GLOB(v0.c1)) THEN NULLIF(v0.c0, v0.c2) END  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN (v0.c2 IN (x'b43e', v0.c2)) THEN ((0.9885067556896098) NOT BETWEEN (v0.c2) AND (v0.c1)) WHEN (~ (v0.c1)) THEN ((v0.c0) NOT NULL) WHEN CAST(v0.c2 AS INTEGER) THEN LOWER(v0.c1) ELSE ((((v0.c1)OR(v0.c0)))AND(v0.c2)) END) ORDER BY ((v0.c2) NOT NULL) COLLATE NOCASE, CASE WHEN ((v0.c0)GLOB(v0.c1)) THEN NULLIF(v0.c0, v0.c2) END  NULLS LAST;
SELECT ALL * FROM v0, rt0 WHERE (json_extract(((rt0.c2)LIKE(v0.c1)), '-' COLLATE BINARY, ((v0.c0)>=(v0.c0)), CASE rt0.c0  WHEN v0.c1 THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN NULL END)) ORDER BY ((((rt0.c1) NOT NULL))LIKE(NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_extract(((rt0.c2)LIKE(v0.c1)), '-' COLLATE BINARY, ((v0.c0)>=(v0.c0)), CASE rt0.c0  WHEN v0.c1 THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN NULL END)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c1) NOT NULL))LIKE(NULL)) DESC  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE (json_extract(((rt0.c2)LIKE(v0.c1)), '-' COLLATE BINARY, ((v0.c0)>=(v0.c0)), CASE rt0.c0  WHEN v0.c1 THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN NULL END)) ORDER BY ((((rt0.c1) NOT NULL))LIKE(NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_extract(((rt0.c2)LIKE(v0.c1)), '-' COLLATE BINARY, ((v0.c0)>=(v0.c0)), CASE rt0.c0  WHEN v0.c1 THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN NULL END)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c1) NOT NULL))LIKE(NULL)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (((((rt0.c2)OR(rt0.c2)))OR(rt0.c1))))) ORDER BY (((rt0.c0) NOTNULL) IN ());
SELECT SUM(count) FROM (SELECT (((+ (((((rt0.c2)OR(rt0.c2)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0) NOTNULL) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (((((rt0.c2)OR(rt0.c2)))OR(rt0.c1))))) ORDER BY (((rt0.c0) NOTNULL) IN ());
SELECT SUM(count) FROM (SELECT (((+ (((((rt0.c2)OR(rt0.c2)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0) NOTNULL) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (((((rt0.c2)OR(rt0.c2)))OR(rt0.c1))))) ORDER BY (((rt0.c0) NOTNULL) IN ());
SELECT ALL COUNT(*) FROM v0 WHERE (((- (v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((- (v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((- (v0.c0)) IN ()));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((json_insert(v0.c0, v0.c0, v0.c1))==(highlight(v0.c1, v0.c0, v0.c0, rt0.c1)))) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((json_insert(v0.c0, v0.c0, v0.c1))==(highlight(v0.c1, v0.c0, v0.c0, rt0.c1)))) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c1  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((json_insert(v0.c0, v0.c0, v0.c1))==(highlight(v0.c1, v0.c0, v0.c0, rt0.c1)))) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((json_insert(v0.c0, v0.c0, v0.c1))==(highlight(v0.c1, v0.c0, v0.c0, rt0.c1)))) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c1  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c2)<<(v0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c2)<<(v0.c2)) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c2)<<(v0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c2)<<(v0.c2)) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c2)<<(v0.c2)) COLLATE BINARY);
SELECT ALL * FROM rt0, v0 WHERE (CAST(((v0.c1) NOT BETWEEN (v0.c0) AND (rt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c1) NOT BETWEEN (v0.c0) AND (rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0, v0 NOT INDEXED);
SELECT ALL * FROM rt0, v0 WHERE (CAST(((v0.c1) NOT BETWEEN (v0.c0) AND (rt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c1) NOT BETWEEN (v0.c0) AND (rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0, v0 NOT INDEXED);
SELECT ALL * FROM rt0, v0 WHERE (CAST(((v0.c1) NOT BETWEEN (v0.c0) AND (rt0.c2)) AS BLOB));
SELECT ALL * FROM rt0, v0 WHERE ((CAST(rt0.c1 AS TEXT) IN ())) ORDER BY 0.657789805253759;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c1 AS TEXT) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY 0.657789805253759);
SELECT ALL * FROM rt0, v0 WHERE ((CAST(rt0.c1 AS TEXT) IN ())) ORDER BY 0.657789805253759;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c1 AS TEXT) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY 0.657789805253759);
SELECT ALL * FROM rt0, v0 WHERE ((CAST(rt0.c1 AS TEXT) IN ())) ORDER BY 0.657789805253759;
SELECT ALL * FROM rt0, v0 WHERE (((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0))) NOTNULL)) ORDER BY 'MJ5de5' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, v0 ORDER BY 'MJ5de5' ASC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0))) NOTNULL)) ORDER BY 'MJ5de5' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, v0 ORDER BY 'MJ5de5' ASC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0))) NOTNULL)) ORDER BY 'MJ5de5' ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(TYPEOF(rt0.c0) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(TYPEOF(rt0.c0) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(TYPEOF(rt0.c0) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(TYPEOF(rt0.c0) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(TYPEOF(rt0.c0) AS NUMERIC));
SELECT COUNT(*) FROM rt0 WHERE (((('t'))>(((~ (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((('t'))>(((~ (rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((('t'))>(((~ (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((('t'))>(((~ (rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((('t'))>(((~ (rt0.c2))))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY ((((TYPEOF(rt0.c0))AND(rt0.c2 COLLATE RTRIM)))AND(((rt0.c0)*(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((TYPEOF(rt0.c0))AND(rt0.c2 COLLATE RTRIM)))AND(((rt0.c0)*(rt0.c0))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY ((((TYPEOF(rt0.c0))AND(rt0.c2 COLLATE RTRIM)))AND(((rt0.c0)*(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((TYPEOF(rt0.c0))AND(rt0.c2 COLLATE RTRIM)))AND(((rt0.c0)*(rt0.c0))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY ((((TYPEOF(rt0.c0))AND(rt0.c2 COLLATE RTRIM)))AND(((rt0.c0)*(rt0.c0))))  NULLS LAST;
SELECT * FROM rt0 CROSS JOIN v0 ON (+ (UNLIKELY(DISTINCT v0.c1))) WHERE (CAST((rt0.c2 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c2 IN ()) AS TEXT)) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (+ (UNLIKELY(DISTINCT v0.c1))));
SELECT * FROM rt0 CROSS JOIN v0 ON (+ (UNLIKELY(DISTINCT v0.c1))) WHERE (CAST((rt0.c2 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c2 IN ()) AS TEXT)) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (+ (UNLIKELY(DISTINCT v0.c1))));
SELECT * FROM rt0 CROSS JOIN v0 ON (+ (UNLIKELY(DISTINCT v0.c1))) WHERE (CAST((rt0.c2 IN ()) AS TEXT));
SELECT ALL * FROM v0 WHERE (((NULL) IS TRUE)) ORDER BY (((((((((((((NOT (v0.c1)))OR(CAST(v0.c1 AS BLOB))))OR((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))))))AND((NOT (v0.c0)))))AND(CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c0 END)))AND(CASE v0.c0  WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c1 END)))AND(((v0.c1)=(0.6928169972751005)))) ASC  NULLS LAST, 0.6928169972751005 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY (((((((((((((NOT (v0.c1)))OR(CAST(v0.c1 AS BLOB))))OR((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))))))AND((NOT (v0.c0)))))AND(CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c0 END)))AND(CASE v0.c0  WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c1 END)))AND(((v0.c1)==(0.6928169972751005)))) ASC  NULLS LAST, 0.6928169972751005 DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((NULL) IS TRUE)) ORDER BY (((((((((((((NOT (v0.c1)))OR(CAST(v0.c1 AS BLOB))))OR((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))))))AND((NOT (v0.c0)))))AND(CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c0 END)))AND(CASE v0.c0  WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c1 END)))AND(((v0.c1)=(0.6928169972751005)))) ASC  NULLS LAST, 0.6928169972751005 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY (((((((((((((NOT (v0.c1)))OR(CAST(v0.c1 AS BLOB))))OR((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))))))AND((NOT (v0.c0)))))AND(CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c0 END)))AND(CASE v0.c0  WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c1 END)))AND(((v0.c1)==(0.6928169972751005)))) ASC  NULLS LAST, 0.6928169972751005 DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((NULL) IS TRUE)) ORDER BY (((((((((((((NOT (v0.c1)))OR(CAST(v0.c1 AS BLOB))))OR((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))))))AND((NOT (v0.c0)))))AND(CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c0 END)))AND(CASE v0.c0  WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c1 END)))AND(((v0.c1)=(0.6928169972751005)))) ASC  NULLS LAST, 0.6928169972751005 DESC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c1) BETWEEN (v0.c0) AND (v0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) BETWEEN (v0.c0) AND (v0.c1))) ISNULL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c1) BETWEEN (v0.c0) AND (v0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) BETWEEN (v0.c0) AND (v0.c1))) ISNULL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c1) BETWEEN (v0.c0) AND (v0.c1))) ISNULL));
SELECT * FROM rt0, v0 WHERE ('-282671582');
SELECT SUM(count) FROM (SELECT ALL (('-282671582') IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ('-282671582');
SELECT SUM(count) FROM (SELECT ALL (('-282671582') IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ('-282671582');
SELECT ALL * FROM v0, rt0 WHERE (((((CAST(rt0.c1 AS REAL))AND(((v0.c0) ISNULL))))AND(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c1 AS REAL))AND(((v0.c0) ISNULL))))AND(rt0.c2))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((CAST(rt0.c1 AS REAL))AND(((v0.c0) ISNULL))))AND(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c1 AS REAL))AND(((v0.c0) ISNULL))))AND(rt0.c2))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((CAST(rt0.c1 AS REAL))AND(((v0.c0) ISNULL))))AND(rt0.c2)));
SELECT ALL * FROM v0 WHERE ((((((((((((((((('&g')AND(v0.c0)))AND(v0.c2)))AND(v0.c0)))AND(v0.c0)))AND(v0.c2)))OR((v0.c1 IN ()))))OR(v0.c0)))AND(CAST(v0.c1 AS REAL)))) ORDER BY ((v0.c2 COLLATE BINARY)||(((v0.c0)IS NOT(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((((((('&g')AND(v0.c0)))AND(v0.c2)))AND(v0.c0)))AND(v0.c0)))AND(v0.c2)))OR((v0.c1 IN ()))))OR(v0.c0)))AND(CAST(v0.c1 AS REAL)))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c2 COLLATE BINARY)||(((v0.c0)IS NOT(v0.c0))))  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((((((((((((((('&g')AND(v0.c0)))AND(v0.c2)))AND(v0.c0)))AND(v0.c0)))AND(v0.c2)))OR((v0.c1 IN ()))))OR(v0.c0)))AND(CAST(v0.c1 AS REAL)))) ORDER BY ((v0.c2 COLLATE BINARY)||(((v0.c0)IS NOT(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((((((('&g')AND(v0.c0)))AND(v0.c2)))AND(v0.c0)))AND(v0.c0)))AND(v0.c2)))OR((v0.c1 IN ()))))OR(v0.c0)))AND(CAST(v0.c1 AS REAL)))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c2 COLLATE BINARY)||(((v0.c0)IS NOT(v0.c0))))  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((((((((((((((('&g')AND(v0.c0)))AND(v0.c2)))AND(v0.c0)))AND(v0.c0)))AND(v0.c2)))OR((v0.c1 IN ()))))OR(v0.c0)))AND(CAST(v0.c1 AS REAL)))) ORDER BY ((v0.c2 COLLATE BINARY)||(((v0.c0)IS NOT(v0.c0))))  NULLS LAST;
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)) COLLATE NOCASE WHERE ((((rt0.c1)) NOT BETWEEN (((v0.c1 IN ()))) AND ((v0.c2))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN (((v0.c1 IN ()))) AND ((v0.c2)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)) COLLATE NOCASE);
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)) COLLATE NOCASE WHERE ((((rt0.c1)) NOT BETWEEN (((v0.c1 IN ()))) AND ((v0.c2))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN (((v0.c1 IN ()))) AND ((v0.c2)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)) COLLATE NOCASE);
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)) COLLATE NOCASE WHERE ((((rt0.c1)) NOT BETWEEN (((v0.c1 IN ()))) AND ((v0.c2))));
SELECT ALL * FROM rt0, v0 WHERE (((((v0.c2)>=(v0.c0)))+(((v0.c2) NOT NULL)))) ORDER BY CASE WHEN UPPER(rt0.c0) THEN v0.c1 WHEN TRIM(DISTINCT rt0.c2, v0.c0) THEN NULL WHEN 'i^{V苟Wz%^' THEN ABS(v0.c0) WHEN (rt0.c0 IN (rt0.c1)) THEN ((((((((v0.c1)AND(rt0.c0)))OR(v0.c2)))AND(v0.c1)))OR(v0.c1)) WHEN (('?7')LIKE(v0.c0)) THEN (((v0.c2))<=((v0.c0))) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)>=(v0.c0)))+(((v0.c2) NOT NULL)))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN UPPER(rt0.c0) THEN v0.c1 WHEN TRIM(DISTINCT rt0.c2, v0.c0) THEN NULL WHEN 'i^{V苟Wz%^' THEN ABS(v0.c0) WHEN (rt0.c0 IN (rt0.c1)) THEN ((((((((v0.c1)AND(rt0.c0)))OR(v0.c2)))AND(v0.c1)))OR(v0.c1)) WHEN (('?7')LIKE(v0.c0)) THEN (((v0.c2))<=((v0.c0))) END ASC);
SELECT ALL * FROM rt0, v0 WHERE (((((v0.c2)>=(v0.c0)))+(((v0.c2) NOT NULL)))) ORDER BY CASE WHEN UPPER(rt0.c0) THEN v0.c1 WHEN TRIM(DISTINCT rt0.c2, v0.c0) THEN NULL WHEN 'i^{V苟Wz%^' THEN ABS(v0.c0) WHEN (rt0.c0 IN (rt0.c1)) THEN ((((((((v0.c1)AND(rt0.c0)))OR(v0.c2)))AND(v0.c1)))OR(v0.c1)) WHEN (('?7')LIKE(v0.c0)) THEN (((v0.c2))<=((v0.c0))) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)>=(v0.c0)))+(((v0.c2) NOT NULL)))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN UPPER(rt0.c0) THEN v0.c1 WHEN TRIM(DISTINCT rt0.c2, v0.c0) THEN NULL WHEN 'i^{V苟Wz%^' THEN ABS(v0.c0) WHEN (rt0.c0 IN (rt0.c1)) THEN ((((((((v0.c1)AND(rt0.c0)))OR(v0.c2)))AND(v0.c1)))OR(v0.c1)) WHEN (('?7')LIKE(v0.c0)) THEN (((v0.c2))<=((v0.c0))) END ASC);
SELECT ALL * FROM rt0, v0 WHERE (((((v0.c2)>=(v0.c0)))+(((v0.c2) NOT NULL)))) ORDER BY CASE WHEN UPPER(rt0.c0) THEN v0.c1 WHEN TRIM(DISTINCT rt0.c2, v0.c0) THEN NULL WHEN 'i^{V苟Wz%^' THEN ABS(v0.c0) WHEN (rt0.c0 IN (rt0.c1)) THEN ((((((((v0.c1)AND(rt0.c0)))OR(v0.c2)))AND(v0.c1)))OR(v0.c1)) WHEN (('?7')LIKE(v0.c0)) THEN (((v0.c2))<=((v0.c0))) END ASC;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (v0.c0) ORDER BY COALESCE(DISTINCT ((v0.c0)<=(rt0.c1)), ((rt0.c0)<>(v0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0, v0 ORDER BY COALESCE(DISTINCT ((v0.c0)<=(rt0.c1)), ((rt0.c0)<>(v0.c2))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (v0.c0) ORDER BY COALESCE(DISTINCT ((v0.c0)<=(rt0.c1)), ((rt0.c0)<>(v0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0, v0 ORDER BY COALESCE(DISTINCT ((v0.c0)<=(rt0.c1)), ((rt0.c0)<>(v0.c2))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (v0.c0) ORDER BY COALESCE(DISTINCT ((v0.c0)<=(rt0.c1)), ((rt0.c0)<>(v0.c2))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((0.669456201844689))=((v0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((0.669456201844689))==((v0.c0))) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((0.669456201844689))=((v0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((0.669456201844689))==((v0.c0))) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((0.669456201844689))=((v0.c0))) IN ()));
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c2))))) ORDER BY (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END))==(((- (v0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END))=(((- (v0.c2)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c2))))) ORDER BY (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END))==(((- (v0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END))=(((- (v0.c2)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c2))))) ORDER BY (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END))==(((- (v0.c2)))))  NULLS LAST;
SELECT * FROM rt0, v0 WHERE ((((v0.c1, x'981e', rt0.c1)) NOT BETWEEN ((((v0.c2)<(rt0.c0)), ((rt0.c0) IS TRUE), (rt0.c0 IN ()))) AND ((rt0.c1 COLLATE RTRIM, rt0.c1, (((v0.c1, rt0.c0, v0.c2)) NOT BETWEEN ((v0.c0, v0.c2, rt0.c0)) AND ((rt0.c1, rt0.c0, v0.c2))))))) ORDER BY ((CASE WHEN 'i7' THEN v0.c1 END) NOTNULL);
SELECT SUM(count) FROM (SELECT (((((v0.c1, x'981e', rt0.c1)) NOT BETWEEN ((((v0.c2)<(rt0.c0)), ((rt0.c0) IS TRUE), (rt0.c0 IN ()))) AND ((rt0.c1 COLLATE RTRIM, rt0.c1, (((v0.c1, rt0.c0, v0.c2)) NOT BETWEEN ((v0.c0, v0.c2, rt0.c0)) AND ((rt0.c1, rt0.c0, v0.c2))))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((CASE WHEN 'i7' THEN v0.c1 END) NOTNULL));
SELECT * FROM rt0, v0 WHERE ((((v0.c1, x'981e', rt0.c1)) NOT BETWEEN ((((v0.c2)<(rt0.c0)), ((rt0.c0) IS TRUE), (rt0.c0 IN ()))) AND ((rt0.c1 COLLATE RTRIM, rt0.c1, (((v0.c1, rt0.c0, v0.c2)) NOT BETWEEN ((v0.c0, v0.c2, rt0.c0)) AND ((rt0.c1, rt0.c0, v0.c2))))))) ORDER BY ((CASE WHEN 'i7' THEN v0.c1 END) NOTNULL);
SELECT SUM(count) FROM (SELECT (((((v0.c1, x'981e', rt0.c1)) NOT BETWEEN ((((v0.c2)<(rt0.c0)), ((rt0.c0) IS TRUE), (rt0.c0 IN ()))) AND ((rt0.c1 COLLATE RTRIM, rt0.c1, (((v0.c1, rt0.c0, v0.c2)) NOT BETWEEN ((v0.c0, v0.c2, rt0.c0)) AND ((rt0.c1, rt0.c0, v0.c2))))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((CASE WHEN 'i7' THEN v0.c1 END) NOTNULL));
SELECT * FROM rt0, v0 WHERE ((((v0.c1, x'981e', rt0.c1)) NOT BETWEEN ((((v0.c2)<(rt0.c0)), ((rt0.c0) IS TRUE), (rt0.c0 IN ()))) AND ((rt0.c1 COLLATE RTRIM, rt0.c1, (((v0.c1, rt0.c0, v0.c2)) NOT BETWEEN ((v0.c0, v0.c2, rt0.c0)) AND ((rt0.c1, rt0.c0, v0.c2))))))) ORDER BY ((CASE WHEN 'i7' THEN v0.c1 END) NOTNULL);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c0 IN ((rt0.c1 IN ())))) ORDER BY rt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c0 IN ((rt0.c1 IN ())))) ORDER BY rt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c0 IN ((rt0.c1 IN ())))) ORDER BY rt0.c1 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((v0.c0 IN (rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((v0.c0 IN (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((v0.c0 IN (rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((v0.c0 IN (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((v0.c0 IN (rt0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 WHERE (TYPEOF(DISTINCT (NOT (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT (NOT (rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (TYPEOF(DISTINCT (NOT (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT (NOT (rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (TYPEOF(DISTINCT (NOT (rt0.c2))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN (rt0.c1)))>=((+ (rt0.c0))))) ORDER BY ((CASE WHEN 0.5397301006211365 THEN rt0.c2 ELSE rt0.c0 END) BETWEEN (CAST(rt0.c2 AS REAL)) AND ((~ (rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN (rt0.c1)))>=((+ (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN 0.5397301006211365 THEN rt0.c2 ELSE rt0.c0 END) BETWEEN (CAST(rt0.c2 AS REAL)) AND ((~ (rt0.c2)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN (rt0.c1)))>=((+ (rt0.c0))))) ORDER BY ((CASE WHEN 0.5397301006211365 THEN rt0.c2 ELSE rt0.c0 END) BETWEEN (CAST(rt0.c2 AS REAL)) AND ((~ (rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN (rt0.c1)))>=((+ (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN 0.5397301006211365 THEN rt0.c2 ELSE rt0.c0 END) BETWEEN (CAST(rt0.c2 AS REAL)) AND ((~ (rt0.c2)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN (rt0.c1)))>=((+ (rt0.c0))))) ORDER BY ((CASE WHEN 0.5397301006211365 THEN rt0.c2 ELSE rt0.c0 END) BETWEEN (CAST(rt0.c2 AS REAL)) AND ((~ (rt0.c2)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2)<(v0.c1))) NOT BETWEEN ((((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c1)))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)<(v0.c1))) NOT BETWEEN ((((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c1)))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c1))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2)<(v0.c1))) NOT BETWEEN ((((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c1)))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)<(v0.c1))) NOT BETWEEN ((((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c1)))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c1))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2)<(v0.c1))) NOT BETWEEN ((((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c1)))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c1)))));
SELECT * FROM v0, rt0 WHERE ((((((('W''ꋠ츽')=(rt0.c2)))AND((~ (v0.c2)))))OR((v0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((('W''ꋠ츽')=(rt0.c2)))AND((~ (v0.c2)))))OR((v0.c1 IN ())))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((((('W''ꋠ츽')=(rt0.c2)))AND((~ (v0.c2)))))OR((v0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((('W''ꋠ츽')=(rt0.c2)))AND((~ (v0.c2)))))OR((v0.c1 IN ())))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((((('W''ꋠ츽')=(rt0.c2)))AND((~ (v0.c2)))))OR((v0.c1 IN ()))));
SELECT COUNT(*) FROM rt0, v0 WHERE ((((+ (rt0.c0)))<<(((('歪A'))>=((v0.c1))))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c0)))<<(((('歪A'))>=((v0.c1)))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((+ (rt0.c0)))<<(((('歪A'))>=((v0.c1))))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c0)))<<(((('歪A'))>=((v0.c1)))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((+ (rt0.c0)))<<(((('歪A'))>=((v0.c1))))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN (rt0.c1)))&(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (rt0.c1)))&(rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN (rt0.c1)))&(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (rt0.c1)))&(rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN (rt0.c1)))&(rt0.c0)));
SELECT ALL * FROM rt0 WHERE ((- (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END))) ORDER BY rt0.c2 COLLATE NOCASE, (rt0.c2 COLLATE NOCASE IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 COLLATE NOCASE, (rt0.c2 COLLATE NOCASE IN ())  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((- (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END))) ORDER BY rt0.c2 COLLATE NOCASE, (rt0.c2 COLLATE NOCASE IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 COLLATE NOCASE, (rt0.c2 COLLATE NOCASE IN ())  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((- (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END))) ORDER BY rt0.c2 COLLATE NOCASE, (rt0.c2 COLLATE NOCASE IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST(((((v0.c1)AND(rt0.c2)))OR(rt0.c2)) AS INTEGER)) ORDER BY ((v0.c1) NOT BETWEEN (((rt0.c1)<=(rt0.c0))) AND (((rt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((CAST(((((v0.c1)AND(rt0.c2)))OR(rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((v0.c1) NOT BETWEEN (((rt0.c1)<=(rt0.c0))) AND (((rt0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST(((((v0.c1)AND(rt0.c2)))OR(rt0.c2)) AS INTEGER)) ORDER BY ((v0.c1) NOT BETWEEN (((rt0.c1)<=(rt0.c0))) AND (((rt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((CAST(((((v0.c1)AND(rt0.c2)))OR(rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((v0.c1) NOT BETWEEN (((rt0.c1)<=(rt0.c0))) AND (((rt0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST(((((v0.c1)AND(rt0.c2)))OR(rt0.c2)) AS INTEGER)) ORDER BY ((v0.c1) NOT BETWEEN (((rt0.c1)<=(rt0.c0))) AND (((rt0.c0) ISNULL)));
SELECT COUNT(*) FROM v0 WHERE (((v0.c1) BETWEEN (NULL) AND (v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1) BETWEEN (NULL) AND (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c1) BETWEEN (NULL) AND (v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1) BETWEEN (NULL) AND (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c1) BETWEEN (NULL) AND (v0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM v0, rt0 WHERE (((CASE v0.c2  WHEN v0.c2 THEN v0.c1 ELSE rt0.c0 END) NOT NULL)) ORDER BY ABS(DISTINCT rt0.c0) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c2  WHEN v0.c2 THEN v0.c1 ELSE rt0.c0 END) NOT NULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY ABS(DISTINCT rt0.c0) COLLATE NOCASE);
SELECT COUNT(*) FROM v0, rt0 WHERE (((CASE v0.c2  WHEN v0.c2 THEN v0.c1 ELSE rt0.c0 END) NOT NULL)) ORDER BY ABS(DISTINCT rt0.c0) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c2  WHEN v0.c2 THEN v0.c1 ELSE rt0.c0 END) NOT NULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY ABS(DISTINCT rt0.c0) COLLATE NOCASE);
SELECT COUNT(*) FROM v0, rt0 WHERE (((CASE v0.c2  WHEN v0.c2 THEN v0.c1 ELSE rt0.c0 END) NOT NULL)) ORDER BY ABS(DISTINCT rt0.c0) COLLATE NOCASE;
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))AND(((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))))OR(rt0.c2))) ORDER BY (((((rt0.c0))>=((rt0.c2)))) IS FALSE) ASC  NULLS LAST, ((+ (rt0.c1)) IN ())  NULLS FIRST, 0.8746036653469567 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))AND(((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))))OR(rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0))>=((rt0.c2)))) IS FALSE) ASC  NULLS LAST, ((+ (rt0.c1)) IN ())  NULLS FIRST, 0.8746036653469567 ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))AND(((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))))OR(rt0.c2))) ORDER BY (((((rt0.c0))>=((rt0.c2)))) IS FALSE) ASC  NULLS LAST, ((+ (rt0.c1)) IN ())  NULLS FIRST, 0.8746036653469567 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))AND(((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))))OR(rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0))>=((rt0.c2)))) IS FALSE) ASC  NULLS LAST, ((+ (rt0.c1)) IN ())  NULLS FIRST, 0.8746036653469567 ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))AND(((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))))OR(rt0.c2))) ORDER BY (((((rt0.c0))>=((rt0.c2)))) IS FALSE) ASC  NULLS LAST, ((+ (rt0.c1)) IN ())  NULLS FIRST, 0.8746036653469567 ASC  NULLS FIRST;
SELECT ALL * FROM rt0, v0 NOT INDEXED WHERE (((((rt0.c1)<('0.5608235494814009'))) NOT NULL)) ORDER BY CASE WHEN ABS(rt0.c2) THEN rt0.c2 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<('0.5608235494814009'))) NOT NULL)) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN ABS(rt0.c2) THEN rt0.c2 END  NULLS FIRST);
SELECT ALL * FROM rt0, v0 NOT INDEXED WHERE (((((rt0.c1)<('0.5608235494814009'))) NOT NULL)) ORDER BY CASE WHEN ABS(rt0.c2) THEN rt0.c2 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<('0.5608235494814009'))) NOT NULL)) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN ABS(rt0.c2) THEN rt0.c2 END  NULLS FIRST);
SELECT ALL * FROM rt0, v0 NOT INDEXED WHERE (((((rt0.c1)<('0.5608235494814009'))) NOT NULL)) ORDER BY CASE WHEN ABS(rt0.c2) THEN rt0.c2 END  NULLS FIRST;
SELECT * FROM rt0 WHERE ((- (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN 0.05175249036333318 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN 0.05175249036333318 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN 0.05175249036333318 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN 0.05175249036333318 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN 0.05175249036333318 THEN rt0.c0 END)));
SELECT * FROM v0 NOT INDEXED WHERE ((((x'f0be'))!=((((((v0.c0)OR(v0.c0)))AND(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((x'f0be'))!=((((((v0.c0)OR(v0.c0)))AND(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 NOT INDEXED WHERE ((((x'f0be'))!=((((((v0.c0)OR(v0.c0)))AND(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((x'f0be'))!=((((((v0.c0)OR(v0.c0)))AND(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 NOT INDEXED WHERE ((((x'f0be'))!=((((((v0.c0)OR(v0.c0)))AND(v0.c0))))));
SELECT * FROM v0, rt0 WHERE (((x'8765') BETWEEN (v0.c1) AND (v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((x'8765') BETWEEN (v0.c1) AND (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((x'8765') BETWEEN (v0.c1) AND (v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((x'8765') BETWEEN (v0.c1) AND (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((x'8765') BETWEEN (v0.c1) AND (v0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((v0.c2) NOT BETWEEN (rt0.c0) AND (v0.c2))) NOT BETWEEN ((((rt0.c2, rt0.c1, rt0.c2))<((rt0.c1, NULL, rt0.c0)))) AND ((NOT (rt0.c1))))) ORDER BY ((('-1176073550')<(rt0.c1)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c2) NOT BETWEEN (rt0.c0) AND (v0.c2))) NOT BETWEEN ((((rt0.c2, rt0.c1, rt0.c2))<((rt0.c1, NULL, rt0.c0)))) AND ((NOT (rt0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((('-1176073550')<(rt0.c1)) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((v0.c2) NOT BETWEEN (rt0.c0) AND (v0.c2))) NOT BETWEEN ((((rt0.c2, rt0.c1, rt0.c2))<((rt0.c1, NULL, rt0.c0)))) AND ((NOT (rt0.c1))))) ORDER BY ((('-1176073550')<(rt0.c1)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c2) NOT BETWEEN (rt0.c0) AND (v0.c2))) NOT BETWEEN ((((rt0.c2, rt0.c1, rt0.c2))<((rt0.c1, NULL, rt0.c0)))) AND ((NOT (rt0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((('-1176073550')<(rt0.c1)) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((v0.c2) NOT BETWEEN (rt0.c0) AND (v0.c2))) NOT BETWEEN ((((rt0.c2, rt0.c1, rt0.c2))<((rt0.c1, NULL, rt0.c0)))) AND ((NOT (rt0.c1))))) ORDER BY ((('-1176073550')<(rt0.c1)) IN ()) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (0.42756777034656035))) ORDER BY (~ (0Xffffffff8584b557)) ASC;
SELECT SUM(count) FROM (SELECT (((~ (0.42756777034656035))) IS TRUE)  as count FROM rt0 ORDER BY (~ (0xffffffff8584b557)) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (0.42756777034656035))) ORDER BY (~ (0Xffffffff8584b557)) ASC;
SELECT SUM(count) FROM (SELECT (((~ (0.42756777034656035))) IS TRUE)  as count FROM rt0 ORDER BY (~ (0xffffffff8584b557)) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (0.42756777034656035))) ORDER BY (~ (0Xffffffff8584b557)) ASC;
SELECT COUNT(*) FROM v0, rt0 WHERE ((('-330050179' COLLATE RTRIM)LIKE(((rt0.c2) NOT BETWEEN (rt0.c0) AND (x''))))) ORDER BY (((v0.c2 IN (rt0.c2)))AND(((rt0.c0) NOT NULL))) DESC, (rt0.c2 COLLATE BINARY IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((('-330050179' COLLATE RTRIM)LIKE(((rt0.c2) NOT BETWEEN (rt0.c0) AND (x''))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((v0.c2 IN (rt0.c2)))AND(((rt0.c0) NOT NULL))) DESC, (rt0.c2 COLLATE BINARY IN ()) ASC);
SELECT COUNT(*) FROM v0, rt0 WHERE ((('-330050179' COLLATE RTRIM)LIKE(((rt0.c2) NOT BETWEEN (rt0.c0) AND (x''))))) ORDER BY (((v0.c2 IN (rt0.c2)))AND(((rt0.c0) NOT NULL))) DESC, (rt0.c2 COLLATE BINARY IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((('-330050179' COLLATE RTRIM)LIKE(((rt0.c2) NOT BETWEEN (rt0.c0) AND (x''))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((v0.c2 IN (rt0.c2)))AND(((rt0.c0) NOT NULL))) DESC, (rt0.c2 COLLATE BINARY IN ()) ASC);
SELECT COUNT(*) FROM v0, rt0 WHERE ((('-330050179' COLLATE RTRIM)LIKE(((rt0.c2) NOT BETWEEN (rt0.c0) AND (x''))))) ORDER BY (((v0.c2 IN (rt0.c2)))AND(((rt0.c0) NOT NULL))) DESC, (rt0.c2 COLLATE BINARY IN ()) ASC;
SELECT COUNT(*) FROM rt0, v0 WHERE ((NOT (((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((NOT (((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((NOT (((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))));
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((((rt0.c1)OR(rt0.c2)))OR(0.5117121032098246))))>=((v0.c0 COLLATE RTRIM)))) ORDER BY ((((rt0.c1 COLLATE BINARY)OR(((rt0.c2) NOT NULL))))AND(((v0.c0)==(v0.c2)))) ASC  NULLS LAST, CAST(((v0.c0)>=(v0.c0)) AS BLOB), rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c1)OR(rt0.c2)))OR(0.5117121032098246))))>=((v0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c1 COLLATE BINARY)OR(((rt0.c2) NOT NULL))))AND(((v0.c0)==(v0.c2)))) ASC  NULLS LAST, CAST(((v0.c0)>=(v0.c0)) AS BLOB), rt0.c0  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((((rt0.c1)OR(rt0.c2)))OR(0.5117121032098246))))>=((v0.c0 COLLATE RTRIM)))) ORDER BY ((((rt0.c1 COLLATE BINARY)OR(((rt0.c2) NOT NULL))))AND(((v0.c0)==(v0.c2)))) ASC  NULLS LAST, CAST(((v0.c0)>=(v0.c0)) AS BLOB), rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c1)OR(rt0.c2)))OR(0.5117121032098246))))>=((v0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c1 COLLATE BINARY)OR(((rt0.c2) NOT NULL))))AND(((v0.c0)==(v0.c2)))) ASC  NULLS LAST, CAST(((v0.c0)>=(v0.c0)) AS BLOB), rt0.c0  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((((rt0.c1)OR(rt0.c2)))OR(0.5117121032098246))))>=((v0.c0 COLLATE RTRIM)))) ORDER BY ((((rt0.c1 COLLATE BINARY)OR(((rt0.c2) NOT NULL))))AND(((v0.c0)==(v0.c2)))) ASC  NULLS LAST, CAST(((v0.c0)>=(v0.c0)) AS BLOB), rt0.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (x'') ORDER BY ABS('') ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 ORDER BY ABS('') ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (x'') ORDER BY ABS('') ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 ORDER BY ABS('') ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (x'') ORDER BY ABS('') ASC;
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) AS REAL));
SELECT ALL * FROM v0, rt0 WHERE ((~ ((- (v0.c1))))) ORDER BY ((((((v0.c2)!=(v0.c1)))AND(((((rt0.c1)OR(rt0.c1)))OR(v0.c0)))))AND(((((v0.c0)AND(rt0.c2)))AND(rt0.c1))))  NULLS FIRST, 0Xffffffffa02cd80d ASC;
SELECT SUM(count) FROM (SELECT (((~ ((- (v0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((v0.c2)<>(v0.c1)))AND(((((rt0.c1)OR(rt0.c1)))OR(v0.c0)))))AND(((((v0.c0)AND(rt0.c2)))AND(rt0.c1))))  NULLS FIRST, 0xffffffffa02cd80d ASC);
SELECT ALL * FROM v0, rt0 WHERE ((~ ((- (v0.c1))))) ORDER BY ((((((v0.c2)!=(v0.c1)))AND(((((rt0.c1)OR(rt0.c1)))OR(v0.c0)))))AND(((((v0.c0)AND(rt0.c2)))AND(rt0.c1))))  NULLS FIRST, 0Xffffffffa02cd80d ASC;
SELECT SUM(count) FROM (SELECT (((~ ((- (v0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((v0.c2)<>(v0.c1)))AND(((((rt0.c1)OR(rt0.c1)))OR(v0.c0)))))AND(((((v0.c0)AND(rt0.c2)))AND(rt0.c1))))  NULLS FIRST, 0xffffffffa02cd80d ASC);
SELECT ALL * FROM v0, rt0 WHERE ((~ ((- (v0.c1))))) ORDER BY ((((((v0.c2)!=(v0.c1)))AND(((((rt0.c1)OR(rt0.c1)))OR(v0.c0)))))AND(((((v0.c0)AND(rt0.c2)))AND(rt0.c1))))  NULLS FIRST, 0Xffffffffa02cd80d ASC;
SELECT ALL * FROM rt0 WHERE ((rt0.c2 IN ())) ORDER BY (((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)), (rt0.c0 IN ()), ((('3P덂c+a', rt0.c2, rt0.c1, rt0.c0, rt0.c0))=((rt0.c0, rt0.c1, '8', rt0.c2, '''vੱ'))))) AND ((ABS(DISTINCT rt0.c0), rt0.c2, ((x'')AND(rt0.c2))))), (((rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)), (rt0.c0 IN ()), ((('3P덂c+a', rt0.c2, rt0.c1, rt0.c0, rt0.c0))=((rt0.c0, rt0.c1, '8', rt0.c2, '''vੱ'))))) AND ((ABS(DISTINCT rt0.c0), rt0.c2, ((x'')AND(rt0.c2))))), (((rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((rt0.c0))));
SELECT ALL * FROM rt0 WHERE ((rt0.c2 IN ())) ORDER BY (((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)), (rt0.c0 IN ()), ((('3P덂c+a', rt0.c2, rt0.c1, rt0.c0, rt0.c0))=((rt0.c0, rt0.c1, '8', rt0.c2, '''vੱ'))))) AND ((ABS(DISTINCT rt0.c0), rt0.c2, ((x'')AND(rt0.c2))))), (((rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)), (rt0.c0 IN ()), ((('3P덂c+a', rt0.c2, rt0.c1, rt0.c0, rt0.c0))=((rt0.c0, rt0.c1, '8', rt0.c2, '''vੱ'))))) AND ((ABS(DISTINCT rt0.c0), rt0.c2, ((x'')AND(rt0.c2))))), (((rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((rt0.c0))));
SELECT ALL * FROM rt0 WHERE ((rt0.c2 IN ())) ORDER BY (((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)), (rt0.c0 IN ()), ((('3P덂c+a', rt0.c2, rt0.c1, rt0.c0, rt0.c0))=((rt0.c0, rt0.c1, '8', rt0.c2, '''vੱ'))))) AND ((ABS(DISTINCT rt0.c0), rt0.c2, ((x'')AND(rt0.c2))))), (((rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((rt0.c0)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))AND(UPPER(rt0.c2))))AND(rt0.c0 COLLATE BINARY))) ORDER BY 0.9594844358901419 ASC, ((((((rt0.c1) NOT NULL))OR(rt0.c1)))OR(rt0.c1)) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))AND(UPPER(rt0.c2))))AND(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY 0.9594844358901419 ASC, ((((((rt0.c1) NOT NULL))OR(rt0.c1)))OR(rt0.c1)) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))AND(UPPER(rt0.c2))))AND(rt0.c0 COLLATE BINARY))) ORDER BY 0.9594844358901419 ASC, ((((((rt0.c1) NOT NULL))OR(rt0.c1)))OR(rt0.c1)) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))AND(UPPER(rt0.c2))))AND(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY 0.9594844358901419 ASC, ((((((rt0.c1) NOT NULL))OR(rt0.c1)))OR(rt0.c1)) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))AND(UPPER(rt0.c2))))AND(rt0.c0 COLLATE BINARY))) ORDER BY 0.9594844358901419 ASC, ((((((rt0.c1) NOT NULL))OR(rt0.c1)))OR(rt0.c1)) DESC;
SELECT * FROM v0 WHERE (x'a922') ORDER BY 0.724123262122538  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'a922') IS TRUE)  as count FROM v0 ORDER BY 0.724123262122538  NULLS LAST);
SELECT * FROM v0 WHERE (x'a922') ORDER BY 0.724123262122538  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'a922') IS TRUE)  as count FROM v0 ORDER BY 0.724123262122538  NULLS LAST);
SELECT * FROM v0 WHERE (x'a922') ORDER BY 0.724123262122538  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((CAST('-1343419045' AS BLOB) IN ((- (v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((CAST('-1343419045' AS BLOB) IN ((- (v0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((CAST('-1343419045' AS BLOB) IN ((- (v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((CAST('-1343419045' AS BLOB) IN ((- (v0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((CAST('-1343419045' AS BLOB) IN ((- (v0.c2)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, CAST(v0.c2 AS TEXT), v0.c0))>((((v0.c0)OR(v0.c1)), (- (v0.c0)), (((v0.c2))<=((v0.c2))))))) ORDER BY ((v0.c0)|(((v0.c2)>=(x''))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, CAST(v0.c2 AS TEXT), v0.c0))>((((v0.c0)OR(v0.c1)), (- (v0.c0)), (((v0.c2))<=((v0.c2))))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)|(((v0.c2)>=(x''))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, CAST(v0.c2 AS TEXT), v0.c0))>((((v0.c0)OR(v0.c1)), (- (v0.c0)), (((v0.c2))<=((v0.c2))))))) ORDER BY ((v0.c0)|(((v0.c2)>=(x''))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, CAST(v0.c2 AS TEXT), v0.c0))>((((v0.c0)OR(v0.c1)), (- (v0.c0)), (((v0.c2))<=((v0.c2))))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)|(((v0.c2)>=(x''))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, CAST(v0.c2 AS TEXT), v0.c0))>((((v0.c0)OR(v0.c1)), (- (v0.c0)), (((v0.c2))<=((v0.c2))))))) ORDER BY ((v0.c0)|(((v0.c2)>=(x''))))  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c0 IN (v0.c1)))|(HEX(rt0.c0)))) ORDER BY CAST((v0.c1 IN (v0.c1)) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (v0.c1)))|(HEX(rt0.c0)))) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST((v0.c1 IN (v0.c1)) AS REAL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c0 IN (v0.c1)))|(HEX(rt0.c0)))) ORDER BY CAST((v0.c1 IN (v0.c1)) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (v0.c1)))|(HEX(rt0.c0)))) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST((v0.c1 IN (v0.c1)) AS REAL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c0 IN (v0.c1)))|(HEX(rt0.c0)))) ORDER BY CAST((v0.c1 IN (v0.c1)) AS REAL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((CAST(v0.c1 AS BLOB) IN ((((v0.c0)) BETWEEN ((v0.c2)) AND ((''))), ('yv~4儝镲\rO' IN ())))) ORDER BY ((v0.c0)&(v0.c2)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c1 AS BLOB) IN ((((v0.c0)) BETWEEN ((v0.c2)) AND ((''))), ('yv~4儝镲\rO' IN ())))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((v0.c0)&(v0.c2)) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((CAST(v0.c1 AS BLOB) IN ((((v0.c0)) BETWEEN ((v0.c2)) AND ((''))), ('yv~4儝镲\rO' IN ())))) ORDER BY ((v0.c0)&(v0.c2)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c1 AS BLOB) IN ((((v0.c0)) BETWEEN ((v0.c2)) AND ((''))), ('yv~4儝镲\rO' IN ())))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((v0.c0)&(v0.c2)) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((CAST(v0.c1 AS BLOB) IN ((((v0.c0)) BETWEEN ((v0.c2)) AND ((''))), ('yv~4儝镲\rO' IN ())))) ORDER BY ((v0.c0)&(v0.c2)) COLLATE RTRIM DESC;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)&(rt0.c1))) BETWEEN (((rt0.c1)%(rt0.c2))) AND (((rt0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)&(rt0.c1))) BETWEEN (((rt0.c1)%(rt0.c2))) AND (((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)&(rt0.c1))) BETWEEN (((rt0.c1)%(rt0.c2))) AND (((rt0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)&(rt0.c1))) BETWEEN (((rt0.c1)%(rt0.c2))) AND (((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)&(rt0.c1))) BETWEEN (((rt0.c1)%(rt0.c2))) AND (((rt0.c2) NOT NULL))));
SELECT ALL * FROM rt0 WHERE (((((x'0dec')-(rt0.c1)))|((((NULL, rt0.c1, rt0.c0))<((rt0.c2, rt0.c0, rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((x'0dec')-(rt0.c1)))|((((NULL, rt0.c1, rt0.c0))<((rt0.c2, rt0.c0, rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((x'0dec')-(rt0.c1)))|((((NULL, rt0.c1, rt0.c0))<((rt0.c2, rt0.c0, rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((x'0dec')-(rt0.c1)))|((((NULL, rt0.c1, rt0.c0))<((rt0.c2, rt0.c0, rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((x'0dec')-(rt0.c1)))|((((NULL, rt0.c1, rt0.c0))<((rt0.c2, rt0.c0, rt0.c1))))));
SELECT ALL * FROM v0 WHERE ((DATE(v0.c2, v0.c1, v0.c1, x'c27a', '914627702') IN (CASE WHEN v0.c0 THEN '814828021' ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((DATE(v0.c2, v0.c1, v0.c1, x'c27a', '914627702') IN (CASE WHEN v0.c0 THEN '814828021' ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((DATE(v0.c2, v0.c1, v0.c1, x'c27a', '914627702') IN (CASE WHEN v0.c0 THEN '814828021' ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((DATE(v0.c2, v0.c1, v0.c1, x'c27a', '914627702') IN (CASE WHEN v0.c0 THEN '814828021' ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((DATE(v0.c2, v0.c1, v0.c1, x'c27a', '914627702') IN (CASE WHEN v0.c0 THEN '814828021' ELSE v0.c0 END)));
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON TIME(0.18369141075205486, (((rt0.c2))<=(('0.536139633531437'))), CAST(v0.c2 AS REAL)) WHERE ((- ((((rt0.c0))>=((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((rt0.c0))>=((rt0.c1)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON TIME(0.18369141075205486, (((rt0.c2))<=(('0.536139633531437'))), CAST(v0.c2 AS REAL)));
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON TIME(0.18369141075205486, (((rt0.c2))<=(('0.536139633531437'))), CAST(v0.c2 AS REAL)) WHERE ((- ((((rt0.c0))>=((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((rt0.c0))>=((rt0.c1)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON TIME(0.18369141075205486, (((rt0.c2))<=(('0.536139633531437'))), CAST(v0.c2 AS REAL)));
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON TIME(0.18369141075205486, (((rt0.c2))<=(('0.536139633531437'))), CAST(v0.c2 AS REAL)) WHERE ((- ((((rt0.c0))>=((rt0.c1))))));
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c1)>=(rt0.c2)) THEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)) END) ORDER BY CASE CAST(rt0.c2 AS INTEGER)  WHEN rt0.c0 COLLATE BINARY THEN ((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)) END;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)>=(rt0.c2)) THEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY CASE CAST(rt0.c2 AS INTEGER)  WHEN rt0.c0 COLLATE BINARY THEN ((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)) END);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c1)>=(rt0.c2)) THEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)) END) ORDER BY CASE CAST(rt0.c2 AS INTEGER)  WHEN rt0.c0 COLLATE BINARY THEN ((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)) END;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)>=(rt0.c2)) THEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY CASE CAST(rt0.c2 AS INTEGER)  WHEN rt0.c0 COLLATE BINARY THEN ((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)) END);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c1)>=(rt0.c2)) THEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)) END) ORDER BY CASE CAST(rt0.c2 AS INTEGER)  WHEN rt0.c0 COLLATE BINARY THEN ((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)) END;
SELECT COUNT(*) FROM v0 WHERE ((((v0.c2)GLOB(v0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c2)GLOB(v0.c1)) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c2)GLOB(v0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c2)GLOB(v0.c1)) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c2)GLOB(v0.c1)) IN ()));
SELECT * FROM rt0 WHERE (((rt0.c1) NOT BETWEEN ((('-106109156') NOT NULL)) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN ((('-106109156') NOT NULL)) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c1) NOT BETWEEN ((('-106109156') NOT NULL)) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN ((('-106109156') NOT NULL)) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c1) NOT BETWEEN ((('-106109156') NOT NULL)) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON 1685090351 WHERE (((v0.c0)<=(rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)<=(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON 1685090351);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON 1685090351 WHERE (((v0.c0)<=(rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)<=(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON 1685090351);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON 1685090351 WHERE (((v0.c0)<=(rt0.c0)) COLLATE RTRIM);
SELECT ALL * FROM rt0, v0 WHERE (CAST((rt0.c2 IN (rt0.c0, rt0.c1)) AS INTEGER)) ORDER BY ((((v0.c1)>>(rt0.c1)))!=(('i nw*bf' IN (v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c2 IN (rt0.c0, rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((v0.c1)>>(rt0.c1)))!=(('i nw*bf' IN (v0.c0))))  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (CAST((rt0.c2 IN (rt0.c0, rt0.c1)) AS INTEGER)) ORDER BY ((((v0.c1)>>(rt0.c1)))!=(('i nw*bf' IN (v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c2 IN (rt0.c0, rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((v0.c1)>>(rt0.c1)))!=(('i nw*bf' IN (v0.c0))))  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (CAST((rt0.c2 IN (rt0.c0, rt0.c1)) AS INTEGER)) ORDER BY ((((v0.c1)>>(rt0.c1)))!=(('i nw*bf' IN (v0.c0))))  NULLS LAST;
SELECT * FROM v0 WHERE (((((v0.c1) NOTNULL))OR(((((v0.c1)AND(v0.c2)))OR(v0.c2))))) ORDER BY CAST(v0.c1 COLLATE RTRIM AS NUMERIC)  NULLS FIRST, (((v0.c2, v0.c1, v0.c1)) NOT BETWEEN (((((v0.c1))>((v0.c2))), ((((v0.c0)AND(0.7725210702784402)))AND(v0.c2)), json_quote(v0.c2))) AND ((CAST(v0.c2 AS BLOB), v0.c0, CAST(v0.c1 AS REAL))))  NULLS FIRST, ((((((v0.c2)AND(v0.c0)))AND(0.9865231310282537)))IS NOT((('-0.0') NOT BETWEEN (v0.c1) AND (v0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) NOTNULL))OR(((((v0.c1)AND(v0.c2)))OR(v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c1 COLLATE RTRIM AS NUMERIC)  NULLS FIRST, (((v0.c2, v0.c1, v0.c1)) NOT BETWEEN (((((v0.c1))>((v0.c2))), ((((v0.c0)AND(0.7725210702784402)))AND(v0.c2)), json_quote(v0.c2))) AND ((CAST(v0.c2 AS BLOB), v0.c0, CAST(v0.c1 AS REAL))))  NULLS FIRST, ((((((v0.c2)AND(v0.c0)))AND(0.9865231310282537)))IS NOT((('-0.0') NOT BETWEEN (v0.c1) AND (v0.c2)))));
SELECT * FROM v0 WHERE (((((v0.c1) NOTNULL))OR(((((v0.c1)AND(v0.c2)))OR(v0.c2))))) ORDER BY CAST(v0.c1 COLLATE RTRIM AS NUMERIC)  NULLS FIRST, (((v0.c2, v0.c1, v0.c1)) NOT BETWEEN (((((v0.c1))>((v0.c2))), ((((v0.c0)AND(0.7725210702784402)))AND(v0.c2)), json_quote(v0.c2))) AND ((CAST(v0.c2 AS BLOB), v0.c0, CAST(v0.c1 AS REAL))))  NULLS FIRST, ((((((v0.c2)AND(v0.c0)))AND(0.9865231310282537)))IS NOT((('-0.0') NOT BETWEEN (v0.c1) AND (v0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) NOTNULL))OR(((((v0.c1)AND(v0.c2)))OR(v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c1 COLLATE RTRIM AS NUMERIC)  NULLS FIRST, (((v0.c2, v0.c1, v0.c1)) NOT BETWEEN (((((v0.c1))>((v0.c2))), ((((v0.c0)AND(0.7725210702784402)))AND(v0.c2)), json_quote(v0.c2))) AND ((CAST(v0.c2 AS BLOB), v0.c0, CAST(v0.c1 AS REAL))))  NULLS FIRST, ((((((v0.c2)AND(v0.c0)))AND(0.9865231310282537)))IS NOT((('-0.0') NOT BETWEEN (v0.c1) AND (v0.c2)))));
SELECT * FROM v0 WHERE (((((v0.c1) NOTNULL))OR(((((v0.c1)AND(v0.c2)))OR(v0.c2))))) ORDER BY CAST(v0.c1 COLLATE RTRIM AS NUMERIC)  NULLS FIRST, (((v0.c2, v0.c1, v0.c1)) NOT BETWEEN (((((v0.c1))>((v0.c2))), ((((v0.c0)AND(0.7725210702784402)))AND(v0.c2)), json_quote(v0.c2))) AND ((CAST(v0.c2 AS BLOB), v0.c0, CAST(v0.c1 AS REAL))))  NULLS FIRST, ((((((v0.c2)AND(v0.c0)))AND(0.9865231310282537)))IS NOT((('-0.0') NOT BETWEEN (v0.c1) AND (v0.c2))));
SELECT * FROM v0 WHERE ((((0.9265373436571571, (v0.c2 IN ()), ((((v0.c0)OR(v0.c1)))OR(v0.c0))))<=((v0.c1, ((v0.c0)>=(2021087530)), (((v0.c1, NULL, v0.c1))=((v0.c0, v0.c1, v0.c2))))))) ORDER BY (- (v0.c2 COLLATE NOCASE))  NULLS LAST, ((CAST(v0.c1 AS TEXT))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c2))));
SELECT SUM(count) FROM (SELECT (((((0.9265373436571571, (v0.c2 IN ()), ((((v0.c0)OR(v0.c1)))OR(v0.c0))))<=((v0.c1, ((v0.c0)>=(2021087530)), (((v0.c1, NULL, v0.c1))==((v0.c0, v0.c1, v0.c2))))))) IS TRUE)  as count FROM v0 ORDER BY (- (v0.c2 COLLATE NOCASE))  NULLS LAST, ((CAST(v0.c1 AS TEXT))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c2)))));
SELECT * FROM v0 WHERE ((((0.9265373436571571, (v0.c2 IN ()), ((((v0.c0)OR(v0.c1)))OR(v0.c0))))<=((v0.c1, ((v0.c0)>=(2021087530)), (((v0.c1, NULL, v0.c1))=((v0.c0, v0.c1, v0.c2))))))) ORDER BY (- (v0.c2 COLLATE NOCASE))  NULLS LAST, ((CAST(v0.c1 AS TEXT))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c2))));
SELECT SUM(count) FROM (SELECT (((((0.9265373436571571, (v0.c2 IN ()), ((((v0.c0)OR(v0.c1)))OR(v0.c0))))<=((v0.c1, ((v0.c0)>=(2021087530)), (((v0.c1, NULL, v0.c1))==((v0.c0, v0.c1, v0.c2))))))) IS TRUE)  as count FROM v0 ORDER BY (- (v0.c2 COLLATE NOCASE))  NULLS LAST, ((CAST(v0.c1 AS TEXT))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c2)))));
SELECT * FROM v0 WHERE ((((0.9265373436571571, (v0.c2 IN ()), ((((v0.c0)OR(v0.c1)))OR(v0.c0))))<=((v0.c1, ((v0.c0)>=(2021087530)), (((v0.c1, NULL, v0.c1))=((v0.c0, v0.c1, v0.c2))))))) ORDER BY (- (v0.c2 COLLATE NOCASE))  NULLS LAST, ((CAST(v0.c1 AS TEXT))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c2))));
SELECT ALL * FROM v0, rt0 WHERE ((+ (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((+ (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((+ (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((((SQLITE_SOURCE_ID())OR(((rt0.c0)/(v0.c1)))))OR(((((v0.c2)OR(rt0.c2)))AND(v0.c1)))))OR(UNLIKELY(DISTINCT v0.c2))))OR(UNLIKELY(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((SQLITE_SOURCE_ID())OR(((rt0.c0)/(v0.c1)))))OR(((((v0.c2)OR(rt0.c2)))AND(v0.c1)))))OR(UNLIKELY(DISTINCT v0.c2))))OR(UNLIKELY(v0.c0)))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((((SQLITE_SOURCE_ID())OR(((rt0.c0)/(v0.c1)))))OR(((((v0.c2)OR(rt0.c2)))AND(v0.c1)))))OR(UNLIKELY(DISTINCT v0.c2))))OR(UNLIKELY(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((SQLITE_SOURCE_ID())OR(((rt0.c0)/(v0.c1)))))OR(((((v0.c2)OR(rt0.c2)))AND(v0.c1)))))OR(UNLIKELY(DISTINCT v0.c2))))OR(UNLIKELY(v0.c0)))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((((SQLITE_SOURCE_ID())OR(((rt0.c0)/(v0.c1)))))OR(((((v0.c2)OR(rt0.c2)))AND(v0.c1)))))OR(UNLIKELY(DISTINCT v0.c2))))OR(UNLIKELY(v0.c0))));
SELECT * FROM v0 WHERE ((- (((v0.c1)|(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((v0.c1)|(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((- (((v0.c1)|(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((v0.c1)|(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((- (((v0.c1)|(v0.c0)))));
SELECT COUNT(*) FROM v0, rt0 WHERE ((- (v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((- (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((- (v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((- (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((- (v0.c0 COLLATE RTRIM)));
SELECT * FROM v0 WHERE (TRIM(DISTINCT ((v0.c1)<<(v0.c2)), ((v0.c2) IS TRUE))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((v0.c1)<<(v0.c2)), ((v0.c2) IS TRUE))) IS TRUE)  as count FROM v0 ORDER BY NULL DESC);
SELECT * FROM v0 WHERE (TRIM(DISTINCT ((v0.c1)<<(v0.c2)), ((v0.c2) IS TRUE))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((v0.c1)<<(v0.c2)), ((v0.c2) IS TRUE))) IS TRUE)  as count FROM v0 ORDER BY NULL DESC);
SELECT * FROM v0 WHERE (TRIM(DISTINCT ((v0.c1)<<(v0.c2)), ((v0.c2) IS TRUE))) ORDER BY NULL DESC;
SELECT * FROM rt0, v0 WHERE (0X4ad62c4e COLLATE RTRIM) ORDER BY (CASE WHEN rt0.c0 THEN NULL ELSE v0.c0 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0x4ad62c4e COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0 ORDER BY (CASE WHEN rt0.c0 THEN NULL ELSE v0.c0 END IN ())  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (0X4ad62c4e COLLATE RTRIM) ORDER BY (CASE WHEN rt0.c0 THEN NULL ELSE v0.c0 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0x4ad62c4e COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0 ORDER BY (CASE WHEN rt0.c0 THEN NULL ELSE v0.c0 END IN ())  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (0X4ad62c4e COLLATE RTRIM) ORDER BY (CASE WHEN rt0.c0 THEN NULL ELSE v0.c0 END IN ())  NULLS FIRST;
SELECT * FROM v0 WHERE (UNLIKELY('{V늺}'));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY('{V늺}')) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (UNLIKELY('{V늺}'));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY('{V늺}')) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (UNLIKELY('{V늺}'));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((LOWER(rt0.c2), NULL, rt0.c2)) AND (((rt0.c2 IN (rt0.c1)), ((NULL)LIKE(rt0.c0)), ((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)))))) ORDER BY (((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN (((((((((('')AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)), '595632834', (- (rt0.c2)))) AND (((((rt0.c1)) BETWEEN ((rt0.c0)) AND (('vpozZ1XB'))), rt0.c1, CAST(rt0.c1 AS TEXT)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((LOWER(rt0.c2), NULL, rt0.c2)) AND (((rt0.c2 IN (rt0.c1)), ((NULL)LIKE(rt0.c0)), ((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN (((((((((('')AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)), '595632834', (- (rt0.c2)))) AND (((((rt0.c1)) BETWEEN ((rt0.c0)) AND (('vpozZ1XB'))), rt0.c1, CAST(rt0.c1 AS TEXT)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((LOWER(rt0.c2), NULL, rt0.c2)) AND (((rt0.c2 IN (rt0.c1)), ((NULL)LIKE(rt0.c0)), ((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)))))) ORDER BY (((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN (((((((((('')AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)), '595632834', (- (rt0.c2)))) AND (((((rt0.c1)) BETWEEN ((rt0.c0)) AND (('vpozZ1XB'))), rt0.c1, CAST(rt0.c1 AS TEXT)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((LOWER(rt0.c2), NULL, rt0.c2)) AND (((rt0.c2 IN (rt0.c1)), ((NULL)LIKE(rt0.c0)), ((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN (((((((((('')AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)), '595632834', (- (rt0.c2)))) AND (((((rt0.c1)) BETWEEN ((rt0.c0)) AND (('vpozZ1XB'))), rt0.c1, CAST(rt0.c1 AS TEXT)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((LOWER(rt0.c2), NULL, rt0.c2)) AND (((rt0.c2 IN (rt0.c1)), ((NULL)LIKE(rt0.c0)), ((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)))))) ORDER BY (((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN (((((((((('')AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)), '595632834', (- (rt0.c2)))) AND (((((rt0.c1)) BETWEEN ((rt0.c0)) AND (('vpozZ1XB'))), rt0.c1, CAST(rt0.c1 AS TEXT)))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))) ISNULL)) ORDER BY ((CAST(rt0.c1 AS REAL))<('O[&thYlT')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c1 AS REAL))<('O[&thYlT')) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))) ISNULL)) ORDER BY ((CAST(rt0.c1 AS REAL))<('O[&thYlT')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c1 AS REAL))<('O[&thYlT')) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))) ISNULL)) ORDER BY ((CAST(rt0.c1 AS REAL))<('O[&thYlT')) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON ((((v0.c2) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN ((((v0.c1))>((rt0.c2)))) AND (((((v0.c2)AND(rt0.c0)))OR(v0.c2)))) WHERE (((rt0.c0 COLLATE BINARY) BETWEEN ((- (rt0.c2))) AND (highlight(rt0.c0, rt0.c1, v0.c2, rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY) BETWEEN ((- (rt0.c2))) AND (highlight(rt0.c0, rt0.c1, v0.c2, rt0.c1)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((((v0.c2) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN ((((v0.c1))>((rt0.c2)))) AND (((((v0.c2)AND(rt0.c0)))OR(v0.c2)))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON ((((v0.c2) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN ((((v0.c1))>((rt0.c2)))) AND (((((v0.c2)AND(rt0.c0)))OR(v0.c2)))) WHERE (((rt0.c0 COLLATE BINARY) BETWEEN ((- (rt0.c2))) AND (highlight(rt0.c0, rt0.c1, v0.c2, rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY) BETWEEN ((- (rt0.c2))) AND (highlight(rt0.c0, rt0.c1, v0.c2, rt0.c1)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((((v0.c2) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN ((((v0.c1))>((rt0.c2)))) AND (((((v0.c2)AND(rt0.c0)))OR(v0.c2)))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)LIKE(rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)LIKE(rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)LIKE(rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)LIKE(rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)LIKE(rt0.c2))) ISNULL));
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE v0.c2  WHEN x'' THEN x'' ELSE v0.c0 END) BETWEEN (((((v0.c2)OR(v0.c2)))OR(v0.c1))) AND ((+ (v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c2  WHEN x'' THEN x'' ELSE v0.c0 END) BETWEEN (((((v0.c2)OR(v0.c2)))OR(v0.c1))) AND ((+ (v0.c2))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE v0.c2  WHEN x'' THEN x'' ELSE v0.c0 END) BETWEEN (((((v0.c2)OR(v0.c2)))OR(v0.c1))) AND ((+ (v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c2  WHEN x'' THEN x'' ELSE v0.c0 END) BETWEEN (((((v0.c2)OR(v0.c2)))OR(v0.c1))) AND ((+ (v0.c2))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE v0.c2  WHEN x'' THEN x'' ELSE v0.c0 END) BETWEEN (((((v0.c2)OR(v0.c2)))OR(v0.c1))) AND ((+ (v0.c2)))));
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, v0 WHERE (UNLIKELY(CAST(rt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(CAST(rt0.c0 AS NUMERIC))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, v0 WHERE (UNLIKELY(CAST(rt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(CAST(rt0.c0 AS NUMERIC))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, v0 WHERE (UNLIKELY(CAST(rt0.c0 AS NUMERIC)));
SELECT ALL * FROM rt0, v0 WHERE (x'6886');
SELECT SUM(count) FROM (SELECT ALL ((x'6886') IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (x'6886');
SELECT SUM(count) FROM (SELECT ALL ((x'6886') IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (x'6886');
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (MAX(((rt0.c1) IS TRUE), '')) ORDER BY CAST(((rt0.c0)>>(x'257b')) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((MAX(((rt0.c1) IS TRUE), '')) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(((rt0.c0)>>(x'257b')) AS TEXT));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (MAX(((rt0.c1) IS TRUE), '')) ORDER BY CAST(((rt0.c0)>>(x'257b')) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((MAX(((rt0.c1) IS TRUE), '')) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(((rt0.c0)>>(x'257b')) AS TEXT));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (MAX(((rt0.c1) IS TRUE), '')) ORDER BY CAST(((rt0.c0)>>(x'257b')) AS TEXT);
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c2)) AS REAL)) ORDER BY ((v0.c2 COLLATE NOCASE) ISNULL) DESC, (((((v0.c1)AND(v0.c0)))OR(v0.c2)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c2)) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c2 COLLATE NOCASE) ISNULL) DESC, (((((v0.c1)AND(v0.c0)))OR(v0.c2)) IN ()));
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c2)) AS REAL)) ORDER BY ((v0.c2 COLLATE NOCASE) ISNULL) DESC, (((((v0.c1)AND(v0.c0)))OR(v0.c2)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c2)) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c2 COLLATE NOCASE) ISNULL) DESC, (((((v0.c1)AND(v0.c0)))OR(v0.c2)) IN ()));
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c2)) AS REAL)) ORDER BY ((v0.c2 COLLATE NOCASE) ISNULL) DESC, (((((v0.c1)AND(v0.c0)))OR(v0.c2)) IN ());
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((rt0.c0)OR(rt0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((rt0.c0)OR(rt0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((((((((((rt0.c0)>>(rt0.c1)))OR(((rt0.c1) IS FALSE))))AND(v0.c0)))AND(QUOTE(v0.c2))))AND((((v0.c0, v0.c1, v0.c1))>((rt0.c0, rt0.c0, v0.c2))))) WHERE (CASE WHEN NULL THEN LIKELIHOOD(rt0.c2, 0.6159971174404086) ELSE ((v0.c2)&(rt0.c2)) END) ORDER BY (((v0.c2)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0))))) DESC, ((CAST(v0.c2 AS BLOB)) BETWEEN (((rt0.c2)<=(rt0.c2))) AND (CASE rt0.c0  WHEN rt0.c0 THEN x'' END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN LIKELIHOOD(rt0.c2, 0.6159971174404086) ELSE ((v0.c2)&(rt0.c2)) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((((((((((rt0.c0)>>(rt0.c1)))OR(((rt0.c1) IS FALSE))))AND(v0.c0)))AND(QUOTE(v0.c2))))AND((((v0.c0, v0.c1, v0.c1))>((rt0.c0, rt0.c0, v0.c2))))) ORDER BY (((v0.c2)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0))))) DESC, ((CAST(v0.c2 AS BLOB)) BETWEEN (((rt0.c2)<=(rt0.c2))) AND (CASE rt0.c0  WHEN rt0.c0 THEN x'' END))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((((((((((rt0.c0)>>(rt0.c1)))OR(((rt0.c1) IS FALSE))))AND(v0.c0)))AND(QUOTE(v0.c2))))AND((((v0.c0, v0.c1, v0.c1))>((rt0.c0, rt0.c0, v0.c2))))) WHERE (CASE WHEN NULL THEN LIKELIHOOD(rt0.c2, 0.6159971174404086) ELSE ((v0.c2)&(rt0.c2)) END) ORDER BY (((v0.c2)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0))))) DESC, ((CAST(v0.c2 AS BLOB)) BETWEEN (((rt0.c2)<=(rt0.c2))) AND (CASE rt0.c0  WHEN rt0.c0 THEN x'' END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN LIKELIHOOD(rt0.c2, 0.6159971174404086) ELSE ((v0.c2)&(rt0.c2)) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((((((((((rt0.c0)>>(rt0.c1)))OR(((rt0.c1) IS FALSE))))AND(v0.c0)))AND(QUOTE(v0.c2))))AND((((v0.c0, v0.c1, v0.c1))>((rt0.c0, rt0.c0, v0.c2))))) ORDER BY (((v0.c2)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0))))) DESC, ((CAST(v0.c2 AS BLOB)) BETWEEN (((rt0.c2)<=(rt0.c2))) AND (CASE rt0.c0  WHEN rt0.c0 THEN x'' END))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((((((((((rt0.c0)>>(rt0.c1)))OR(((rt0.c1) IS FALSE))))AND(v0.c0)))AND(QUOTE(v0.c2))))AND((((v0.c0, v0.c1, v0.c1))>((rt0.c0, rt0.c0, v0.c2))))) WHERE (CASE WHEN NULL THEN LIKELIHOOD(rt0.c2, 0.6159971174404086) ELSE ((v0.c2)&(rt0.c2)) END) ORDER BY (((v0.c2)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0))))) DESC, ((CAST(v0.c2 AS BLOB)) BETWEEN (((rt0.c2)<=(rt0.c2))) AND (CASE rt0.c0  WHEN rt0.c0 THEN x'' END))  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)AND(v0.c1 COLLATE NOCASE)))OR(CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)AND(v0.c1 COLLATE NOCASE)))OR(CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)AND(v0.c1 COLLATE NOCASE)))OR(CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)AND(v0.c1 COLLATE NOCASE)))OR(CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)AND(v0.c1 COLLATE NOCASE)))OR(CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END)));
SELECT COUNT(*) FROM rt0, v0 WHERE (v0.c0) ORDER BY (((rt0.c0 IN ()))>=((v0.c1 IN (rt0.c1, rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c0 IN ()))>=((v0.c1 IN (rt0.c1, rt0.c0)))));
SELECT COUNT(*) FROM rt0, v0 WHERE (v0.c0) ORDER BY (((rt0.c0 IN ()))>=((v0.c1 IN (rt0.c1, rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c0 IN ()))>=((v0.c1 IN (rt0.c1, rt0.c0)))));
SELECT COUNT(*) FROM rt0, v0 WHERE (v0.c0) ORDER BY (((rt0.c0 IN ()))>=((v0.c1 IN (rt0.c1, rt0.c0))));
SELECT COUNT(*) FROM rt0, v0 WHERE ((((((v0.c2))>((v0.c0))))==(((rt0.c2) BETWEEN (rt0.c2) AND (v0.c1))))) ORDER BY ((TYPEOF(DISTINCT rt0.c2)) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((v0.c2))>((v0.c0))))==(((rt0.c2) BETWEEN (rt0.c2) AND (v0.c1))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((TYPEOF(DISTINCT rt0.c2)) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((((v0.c2))>((v0.c0))))==(((rt0.c2) BETWEEN (rt0.c2) AND (v0.c1))))) ORDER BY ((TYPEOF(DISTINCT rt0.c2)) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((v0.c2))>((v0.c0))))==(((rt0.c2) BETWEEN (rt0.c2) AND (v0.c1))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((TYPEOF(DISTINCT rt0.c2)) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((((v0.c2))>((v0.c0))))==(((rt0.c2) BETWEEN (rt0.c2) AND (v0.c1))))) ORDER BY ((TYPEOF(DISTINCT rt0.c2)) NOTNULL)  NULLS LAST;
SELECT ALL * FROM rt0, v0 WHERE ((((((v0.c1)AND(v0.c2)))AND(rt0.c0)) IN ())) ORDER BY ((((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2))) NOT BETWEEN (((v0.c0)OR(x'472c'))) AND (CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN v0.c2 WHEN v0.c1 THEN rt0.c2 ELSE rt0.c2 END))  NULLS LAST, ((rt0.c1) IS FALSE) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((((v0.c1)AND(v0.c2)))AND(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2))) NOT BETWEEN (((v0.c0)OR(x'472c'))) AND (CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN v0.c2 WHEN v0.c1 THEN rt0.c2 ELSE rt0.c2 END))  NULLS LAST, ((rt0.c1) IS FALSE) COLLATE RTRIM);
SELECT ALL * FROM rt0, v0 WHERE ((((((v0.c1)AND(v0.c2)))AND(rt0.c0)) IN ())) ORDER BY ((((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2))) NOT BETWEEN (((v0.c0)OR(x'472c'))) AND (CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN v0.c2 WHEN v0.c1 THEN rt0.c2 ELSE rt0.c2 END))  NULLS LAST, ((rt0.c1) IS FALSE) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((((v0.c1)AND(v0.c2)))AND(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2))) NOT BETWEEN (((v0.c0)OR(x'472c'))) AND (CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN v0.c2 WHEN v0.c1 THEN rt0.c2 ELSE rt0.c2 END))  NULLS LAST, ((rt0.c1) IS FALSE) COLLATE RTRIM);
SELECT ALL * FROM rt0, v0 WHERE ((((((v0.c1)AND(v0.c2)))AND(rt0.c0)) IN ())) ORDER BY ((((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2))) NOT BETWEEN (((v0.c0)OR(x'472c'))) AND (CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN v0.c2 WHEN v0.c1 THEN rt0.c2 ELSE rt0.c2 END))  NULLS LAST, ((rt0.c1) IS FALSE) COLLATE RTRIM;
SELECT ALL * FROM v0 WHERE ((((((v0.c2) NOT NULL), v0.c2 COLLATE BINARY, (v0.c1 IN (v0.c2))))>=(((((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c2))), ((v0.c1)<<(v0.c1)), ((((v0.c2)OR(NULL)))AND(v0.c2)))))) ORDER BY LIKELY(x'51b5d4ff') ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((v0.c2) NOT NULL), v0.c2 COLLATE BINARY, (v0.c1 IN (v0.c2))))>=(((((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c2))), ((v0.c1)<<(v0.c1)), ((((v0.c2)OR(NULL)))AND(v0.c2)))))) IS TRUE)  as count FROM v0 ORDER BY LIKELY(x'51b5d4ff') ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((((((v0.c2) NOT NULL), v0.c2 COLLATE BINARY, (v0.c1 IN (v0.c2))))>=(((((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c2))), ((v0.c1)<<(v0.c1)), ((((v0.c2)OR(NULL)))AND(v0.c2)))))) ORDER BY LIKELY(x'51b5d4ff') ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((v0.c2) NOT NULL), v0.c2 COLLATE BINARY, (v0.c1 IN (v0.c2))))>=(((((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c2))), ((v0.c1)<<(v0.c1)), ((((v0.c2)OR(NULL)))AND(v0.c2)))))) IS TRUE)  as count FROM v0 ORDER BY LIKELY(x'51b5d4ff') ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((((((v0.c2) NOT NULL), v0.c2 COLLATE BINARY, (v0.c1 IN (v0.c2))))>=(((((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c2))), ((v0.c1)<<(v0.c1)), ((((v0.c2)OR(NULL)))AND(v0.c2)))))) ORDER BY LIKELY(x'51b5d4ff') ASC  NULLS FIRST;
SELECT * FROM v0, rt0 WHERE (CASE WHEN LIKE(v0.c0, rt0.c0, '0') THEN ((v0.c1) BETWEEN (rt0.c1) AND (NULL)) ELSE rt0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKE(v0.c0, rt0.c0, '0') THEN ((v0.c1) BETWEEN (rt0.c1) AND (NULL)) ELSE rt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (CASE WHEN LIKE(v0.c0, rt0.c0, '0') THEN ((v0.c1) BETWEEN (rt0.c1) AND (NULL)) ELSE rt0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKE(v0.c0, rt0.c0, '0') THEN ((v0.c1) BETWEEN (rt0.c1) AND (NULL)) ELSE rt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (CASE WHEN LIKE(v0.c0, rt0.c0, '0') THEN ((v0.c1) BETWEEN (rt0.c1) AND (NULL)) ELSE rt0.c0 COLLATE NOCASE END);
SELECT COUNT(*) FROM v0, rt0 WHERE (((LOWER(rt0.c0)) IS TRUE)) ORDER BY (((0.6739921127447696 IN ())) NOT NULL) ASC  NULLS LAST, ((((rt0.c2) IS FALSE)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((LOWER(rt0.c0)) IS TRUE)) IS TRUE)  as count FROM v0, rt0 ORDER BY (((0.6739921127447696 IN ())) NOT NULL) ASC  NULLS LAST, ((((rt0.c2) IS FALSE)) ISNULL)  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((LOWER(rt0.c0)) IS TRUE)) ORDER BY (((0.6739921127447696 IN ())) NOT NULL) ASC  NULLS LAST, ((((rt0.c2) IS FALSE)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((LOWER(rt0.c0)) IS TRUE)) IS TRUE)  as count FROM v0, rt0 ORDER BY (((0.6739921127447696 IN ())) NOT NULL) ASC  NULLS LAST, ((((rt0.c2) IS FALSE)) ISNULL)  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((LOWER(rt0.c0)) IS TRUE)) ORDER BY (((0.6739921127447696 IN ())) NOT NULL) ASC  NULLS LAST, ((((rt0.c2) IS FALSE)) ISNULL)  NULLS FIRST;
SELECT * FROM v0, rt0 WHERE ((((((rt0.c2)>>(rt0.c0)), ((v0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), NULL COLLATE BINARY))>((v0.c0 COLLATE BINARY, ((v0.c1) NOTNULL), (v0.c1 IN ()))))) ORDER BY (((rt0.c2)) NOT BETWEEN ((0.08559292088162951)) AND ((((v0.c0)+(0.03080845485287953))))) ASC  NULLS FIRST, (((NOT (0.6994949914838291))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)>>(rt0.c0)), ((v0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), NULL COLLATE BINARY))>((v0.c0 COLLATE BINARY, ((v0.c1) NOTNULL), (v0.c1 IN ()))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((0.08559292088162951)) AND ((((v0.c0)+(0.03080845485287953))))) ASC  NULLS FIRST, (((NOT (0.6994949914838291))) IS TRUE) ASC);
SELECT * FROM v0, rt0 WHERE ((((((rt0.c2)>>(rt0.c0)), ((v0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), NULL COLLATE BINARY))>((v0.c0 COLLATE BINARY, ((v0.c1) NOTNULL), (v0.c1 IN ()))))) ORDER BY (((rt0.c2)) NOT BETWEEN ((0.08559292088162951)) AND ((((v0.c0)+(0.03080845485287953))))) ASC  NULLS FIRST, (((NOT (0.6994949914838291))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)>>(rt0.c0)), ((v0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), NULL COLLATE BINARY))>((v0.c0 COLLATE BINARY, ((v0.c1) NOTNULL), (v0.c1 IN ()))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((0.08559292088162951)) AND ((((v0.c0)+(0.03080845485287953))))) ASC  NULLS FIRST, (((NOT (0.6994949914838291))) IS TRUE) ASC);
SELECT * FROM v0, rt0 WHERE ((((((rt0.c2)>>(rt0.c0)), ((v0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), NULL COLLATE BINARY))>((v0.c0 COLLATE BINARY, ((v0.c1) NOTNULL), (v0.c1 IN ()))))) ORDER BY (((rt0.c2)) NOT BETWEEN ((0.08559292088162951)) AND ((((v0.c0)+(0.03080845485287953))))) ASC  NULLS FIRST, (((NOT (0.6994949914838291))) IS TRUE) ASC;
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (rt0.c0) ORDER BY CASE UNLIKELY(rt0.c2)  WHEN (('')IS NOT(rt0.c2)) THEN ((v0.c0) BETWEEN (v0.c1) AND (v0.c1)) WHEN ((rt0.c2)||(v0.c2)) THEN CASE WHEN rt0.c1 THEN v0.c0 ELSE v0.c1 END WHEN ((v0.c0)>(x'')) THEN ((rt0.c1) ISNULL) ELSE (rt0.c0 IN (v0.c0, v0.c2)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY CASE UNLIKELY(rt0.c2)  WHEN (('')IS NOT(rt0.c2)) THEN ((v0.c0) BETWEEN (v0.c1) AND (v0.c1)) WHEN ((rt0.c2)||(v0.c2)) THEN CASE WHEN rt0.c1 THEN v0.c0 ELSE v0.c1 END WHEN ((v0.c0)>(x'')) THEN ((rt0.c1) ISNULL) ELSE (rt0.c0 IN (v0.c0, v0.c2)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (rt0.c0) ORDER BY CASE UNLIKELY(rt0.c2)  WHEN (('')IS NOT(rt0.c2)) THEN ((v0.c0) BETWEEN (v0.c1) AND (v0.c1)) WHEN ((rt0.c2)||(v0.c2)) THEN CASE WHEN rt0.c1 THEN v0.c0 ELSE v0.c1 END WHEN ((v0.c0)>(x'')) THEN ((rt0.c1) ISNULL) ELSE (rt0.c0 IN (v0.c0, v0.c2)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY CASE UNLIKELY(rt0.c2)  WHEN (('')IS NOT(rt0.c2)) THEN ((v0.c0) BETWEEN (v0.c1) AND (v0.c1)) WHEN ((rt0.c2)||(v0.c2)) THEN CASE WHEN rt0.c1 THEN v0.c0 ELSE v0.c1 END WHEN ((v0.c0)>(x'')) THEN ((rt0.c1) ISNULL) ELSE (rt0.c0 IN (v0.c0, v0.c2)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (rt0.c0) ORDER BY CASE UNLIKELY(rt0.c2)  WHEN (('')IS NOT(rt0.c2)) THEN ((v0.c0) BETWEEN (v0.c1) AND (v0.c1)) WHEN ((rt0.c2)||(v0.c2)) THEN CASE WHEN rt0.c1 THEN v0.c0 ELSE v0.c1 END WHEN ((v0.c0)>(x'')) THEN ((rt0.c1) ISNULL) ELSE (rt0.c0 IN (v0.c0, v0.c2)) END  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c0 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c0 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c0 AS INTEGER) IN ()));
SELECT COUNT(*) FROM rt0, v0 WHERE ('651583182');
SELECT SUM(count) FROM (SELECT ALL (('651583182') IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ('651583182');
SELECT SUM(count) FROM (SELECT ALL (('651583182') IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ('651583182');
SELECT COUNT(*) FROM v0, rt0 WHERE (((((0.3929960077811898) NOT BETWEEN (v0.c2) AND ('0.7130607116135173'))) NOT BETWEEN (((((v0.c1)AND(v0.c0)))OR(v0.c2))) AND ('큸n7D.e	')));
SELECT SUM(count) FROM (SELECT ((((((0.3929960077811898) NOT BETWEEN (v0.c2) AND ('0.7130607116135173'))) NOT BETWEEN (((((v0.c1)AND(v0.c0)))OR(v0.c2))) AND ('큸n7D.e	'))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((0.3929960077811898) NOT BETWEEN (v0.c2) AND ('0.7130607116135173'))) NOT BETWEEN (((((v0.c1)AND(v0.c0)))OR(v0.c2))) AND ('큸n7D.e	')));
SELECT SUM(count) FROM (SELECT ((((((0.3929960077811898) NOT BETWEEN (v0.c2) AND ('0.7130607116135173'))) NOT BETWEEN (((((v0.c1)AND(v0.c0)))OR(v0.c2))) AND ('큸n7D.e	'))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((0.3929960077811898) NOT BETWEEN (v0.c2) AND ('0.7130607116135173'))) NOT BETWEEN (((((v0.c1)AND(v0.c0)))OR(v0.c2))) AND ('큸n7D.e	')));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((v0.c2 IN ()))OR(rt0.c1)))AND(((((v0.c2)AND(v0.c0)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c2 IN ()))OR(rt0.c1)))AND(((((v0.c2)AND(v0.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((v0.c2 IN ()))OR(rt0.c1)))AND(((((v0.c2)AND(v0.c0)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c2 IN ()))OR(rt0.c1)))AND(((((v0.c2)AND(v0.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((v0.c2 IN ()))OR(rt0.c1)))AND(((((v0.c2)AND(v0.c0)))AND(rt0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (((v0.c0)%('7F')) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)%('7F')) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0)%('7F')) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)%('7F')) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0)%('7F')) COLLATE RTRIM);
SELECT * FROM v0 CROSS JOIN rt0 ON IFNULL(((rt0.c2) BETWEEN (v0.c1) AND (NULL)), (- (rt0.c2))) WHERE (((+ (v0.c1)) IN (((((rt0.c2)AND(v0.c2)))AND('s')))));
SELECT SUM(count) FROM (SELECT ((((+ (v0.c1)) IN (((((rt0.c2)AND(v0.c2)))AND('s'))))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON IFNULL(((rt0.c2) BETWEEN (v0.c1) AND (NULL)), (- (rt0.c2))));
SELECT * FROM v0 CROSS JOIN rt0 ON IFNULL(((rt0.c2) BETWEEN (v0.c1) AND (NULL)), (- (rt0.c2))) WHERE (((+ (v0.c1)) IN (((((rt0.c2)AND(v0.c2)))AND('s')))));
SELECT SUM(count) FROM (SELECT ((((+ (v0.c1)) IN (((((rt0.c2)AND(v0.c2)))AND('s'))))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON IFNULL(((rt0.c2) BETWEEN (v0.c1) AND (NULL)), (- (rt0.c2))));
SELECT * FROM v0 CROSS JOIN rt0 ON IFNULL(((rt0.c2) BETWEEN (v0.c1) AND (NULL)), (- (rt0.c2))) WHERE (((+ (v0.c1)) IN (((((rt0.c2)AND(v0.c2)))AND('s')))));
SELECT ALL * FROM rt0, v0 WHERE (((CASE WHEN v0.c0 THEN rt0.c0 END)-(1633500803)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN rt0.c0 END)-(1633500803))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((CASE WHEN v0.c0 THEN rt0.c0 END)-(1633500803)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN rt0.c0 END)-(1633500803))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((CASE WHEN v0.c0 THEN rt0.c0 END)-(1633500803)));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((((rt0.c1))!=((v0.c0))))AND(rt0.c2 COLLATE NOCASE)))AND(((v0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c1))!=((v0.c0))))AND(rt0.c2 COLLATE NOCASE)))AND(((v0.c2) NOT NULL)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((((rt0.c1))!=((v0.c0))))AND(rt0.c2 COLLATE NOCASE)))AND(((v0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c1))!=((v0.c0))))AND(rt0.c2 COLLATE NOCASE)))AND(((v0.c2) NOT NULL)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((((rt0.c1))!=((v0.c0))))AND(rt0.c2 COLLATE NOCASE)))AND(((v0.c2) NOT NULL))));
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE WHEN CAST(-1080424487 AS BLOB) THEN rt0.c1 ELSE (+ (v0.c1)) END) ORDER BY CAST(((rt0.c1)|(v0.c1)) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(-1080424487 AS BLOB) THEN rt0.c1 ELSE (+ (v0.c1)) END) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(((rt0.c1)|(v0.c1)) AS REAL) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE WHEN CAST(-1080424487 AS BLOB) THEN rt0.c1 ELSE (+ (v0.c1)) END) ORDER BY CAST(((rt0.c1)|(v0.c1)) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(-1080424487 AS BLOB) THEN rt0.c1 ELSE (+ (v0.c1)) END) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(((rt0.c1)|(v0.c1)) AS REAL) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE WHEN CAST(-1080424487 AS BLOB) THEN rt0.c1 ELSE (+ (v0.c1)) END) ORDER BY CAST(((rt0.c1)|(v0.c1)) AS REAL) ASC  NULLS LAST;
SELECT * FROM v0, rt0 WHERE (((((((rt0.c0)AND(rt0.c0)))AND(v0.c1))) IS FALSE)) ORDER BY v0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c0)))AND(v0.c1))) IS FALSE)) IS TRUE)  as count FROM v0, rt0 ORDER BY v0.c0 ASC  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (((((((rt0.c0)AND(rt0.c0)))AND(v0.c1))) IS FALSE)) ORDER BY v0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c0)))AND(v0.c1))) IS FALSE)) IS TRUE)  as count FROM v0, rt0 ORDER BY v0.c0 ASC  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (((((((rt0.c0)AND(rt0.c0)))AND(v0.c1))) IS FALSE)) ORDER BY v0.c0 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON (((CASE WHEN v0.c2 THEN v0.c0 WHEN 0.29220554375954544 THEN v0.c0 WHEN v0.c1 THEN v0.c1 END))!=((json_array_length(v0.c1, v0.c0)))) WHERE ((- (((((v0.c2)OR(rt0.c0)))AND('-1209746052')))));
SELECT SUM(count) FROM (SELECT (((- (((((v0.c2)OR(rt0.c0)))AND('-1209746052'))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (((CASE WHEN v0.c2 THEN v0.c0 WHEN 0.29220554375954544 THEN v0.c0 WHEN v0.c1 THEN v0.c1 END))<>((json_array_length(v0.c1, v0.c0)))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON (((CASE WHEN v0.c2 THEN v0.c0 WHEN 0.29220554375954544 THEN v0.c0 WHEN v0.c1 THEN v0.c1 END))!=((json_array_length(v0.c1, v0.c0)))) WHERE ((- (((((v0.c2)OR(rt0.c0)))AND('-1209746052')))));
SELECT SUM(count) FROM (SELECT (((- (((((v0.c2)OR(rt0.c0)))AND('-1209746052'))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (((CASE WHEN v0.c2 THEN v0.c0 WHEN 0.29220554375954544 THEN v0.c0 WHEN v0.c1 THEN v0.c1 END))<>((json_array_length(v0.c1, v0.c0)))));
SELECT ALL * FROM rt0 WHERE ((((((((((((((((rt0.c1)OR(NULL)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0))))>=(((NOT (rt0.c2)))))) ORDER BY (((rt0.c2)) BETWEEN (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))) AND ((((rt0.c2)*(rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((((((((((((((((rt0.c1)OR(NULL)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0))))>=(((NOT (rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)) BETWEEN (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))) AND ((((rt0.c2)*(rt0.c0))))) ASC);
SELECT ALL * FROM rt0 WHERE ((((((((((((((((rt0.c1)OR(NULL)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0))))>=(((NOT (rt0.c2)))))) ORDER BY (((rt0.c2)) BETWEEN (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))) AND ((((rt0.c2)*(rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((((((((((((((((rt0.c1)OR(NULL)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0))))>=(((NOT (rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)) BETWEEN (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))) AND ((((rt0.c2)*(rt0.c0))))) ASC);
SELECT ALL * FROM rt0 WHERE ((((((((((((((((rt0.c1)OR(NULL)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0))))>=(((NOT (rt0.c2)))))) ORDER BY (((rt0.c2)) BETWEEN (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))) AND ((((rt0.c2)*(rt0.c0))))) ASC;
SELECT COUNT(*) FROM v0 WHERE (((((HEX(DISTINCT v0.c2))AND('-871501893')))OR(v0.c2 COLLATE NOCASE))) ORDER BY ',%u]f1b' ASC  NULLS FIRST, CAST(v0.c2 AS BLOB) COLLATE BINARY COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((((HEX(DISTINCT v0.c2))AND('-871501893')))OR(v0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM v0 ORDER BY ',%u]f1b' ASC  NULLS FIRST, CAST(v0.c2 AS BLOB) COLLATE BINARY COLLATE RTRIM DESC);
SELECT COUNT(*) FROM v0 WHERE (((((HEX(DISTINCT v0.c2))AND('-871501893')))OR(v0.c2 COLLATE NOCASE))) ORDER BY ',%u]f1b' ASC  NULLS FIRST, CAST(v0.c2 AS BLOB) COLLATE BINARY COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((((HEX(DISTINCT v0.c2))AND('-871501893')))OR(v0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM v0 ORDER BY ',%u]f1b' ASC  NULLS FIRST, CAST(v0.c2 AS BLOB) COLLATE BINARY COLLATE RTRIM DESC);
SELECT COUNT(*) FROM v0 WHERE (((((HEX(DISTINCT v0.c2))AND('-871501893')))OR(v0.c2 COLLATE NOCASE))) ORDER BY ',%u]f1b' ASC  NULLS FIRST, CAST(v0.c2 AS BLOB) COLLATE BINARY COLLATE RTRIM DESC;
SELECT * FROM rt0 WHERE (((IFNULL(rt0.c2, rt0.c0)) IS TRUE)) ORDER BY CASE IFNULL(rt0.c2, rt0.c1)  WHEN (rt0.c0 IN ()) THEN ((rt0.c1) NOTNULL) ELSE (rt0.c0 IN ()) END  NULLS LAST, (((((+ (rt0.c0)))OR((+ (rt0.c1)))))AND((rt0.c0 IN ()))) ASC  NULLS LAST, CASE CASE rt0.c1  WHEN NULL THEN rt0.c0 END  WHEN CAST(rt0.c0 AS BLOB) THEN (((rt0.c0))==((rt0.c1))) WHEN ((rt0.c2)-(rt0.c2)) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) WHEN 0xffffffff80bd953f THEN CAST(rt0.c1 AS NUMERIC) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(rt0.c2, rt0.c0)) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY CASE IFNULL(rt0.c2, rt0.c1)  WHEN (rt0.c0 IN ()) THEN ((rt0.c1) NOTNULL) ELSE (rt0.c0 IN ()) END  NULLS LAST, (((((+ (rt0.c0)))OR((+ (rt0.c1)))))AND((rt0.c0 IN ()))) ASC  NULLS LAST, CASE CASE rt0.c1  WHEN NULL THEN rt0.c0 END  WHEN CAST(rt0.c0 AS BLOB) THEN (((rt0.c0))=((rt0.c1))) WHEN ((rt0.c2)-(rt0.c2)) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) WHEN 0Xffffffff80bd953f THEN CAST(rt0.c1 AS NUMERIC) END ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((IFNULL(rt0.c2, rt0.c0)) IS TRUE)) ORDER BY CASE IFNULL(rt0.c2, rt0.c1)  WHEN (rt0.c0 IN ()) THEN ((rt0.c1) NOTNULL) ELSE (rt0.c0 IN ()) END  NULLS LAST, (((((+ (rt0.c0)))OR((+ (rt0.c1)))))AND((rt0.c0 IN ()))) ASC  NULLS LAST, CASE CASE rt0.c1  WHEN NULL THEN rt0.c0 END  WHEN CAST(rt0.c0 AS BLOB) THEN (((rt0.c0))==((rt0.c1))) WHEN ((rt0.c2)-(rt0.c2)) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) WHEN 0xffffffff80bd953f THEN CAST(rt0.c1 AS NUMERIC) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(rt0.c2, rt0.c0)) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY CASE IFNULL(rt0.c2, rt0.c1)  WHEN (rt0.c0 IN ()) THEN ((rt0.c1) NOTNULL) ELSE (rt0.c0 IN ()) END  NULLS LAST, (((((+ (rt0.c0)))OR((+ (rt0.c1)))))AND((rt0.c0 IN ()))) ASC  NULLS LAST, CASE CASE rt0.c1  WHEN NULL THEN rt0.c0 END  WHEN CAST(rt0.c0 AS BLOB) THEN (((rt0.c0))=((rt0.c1))) WHEN ((rt0.c2)-(rt0.c2)) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) WHEN 0Xffffffff80bd953f THEN CAST(rt0.c1 AS NUMERIC) END ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((((CAST(v0.c2 AS REAL))OR(((v0.c2) IS FALSE))))OR(x'da9b')));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c2 AS REAL))OR(((v0.c2) IS FALSE))))OR(x'da9b'))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((CAST(v0.c2 AS REAL))OR(((v0.c2) IS FALSE))))OR(x'da9b')));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c2 AS REAL))OR(((v0.c2) IS FALSE))))OR(x'da9b'))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((CAST(v0.c2 AS REAL))OR(((v0.c2) IS FALSE))))OR(x'da9b')));
SELECT COUNT(*) FROM rt0, v0 WHERE (v0.c2) ORDER BY CASE WHEN v0.c1 COLLATE NOCASE THEN (((rt0.c0, rt0.c2, rt0.c2))>=((v0.c1, 2101579365, v0.c0))) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN v0.c1 COLLATE NOCASE THEN (((rt0.c0, rt0.c2, rt0.c2))>=((v0.c1, 2101579365, v0.c0))) END DESC);
SELECT COUNT(*) FROM rt0, v0 WHERE (v0.c2) ORDER BY CASE WHEN v0.c1 COLLATE NOCASE THEN (((rt0.c0, rt0.c2, rt0.c2))>=((v0.c1, 2101579365, v0.c0))) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN v0.c1 COLLATE NOCASE THEN (((rt0.c0, rt0.c2, rt0.c2))>=((v0.c1, 2101579365, v0.c0))) END DESC);
SELECT COUNT(*) FROM rt0, v0 WHERE (v0.c2) ORDER BY CASE WHEN v0.c1 COLLATE NOCASE THEN (((rt0.c0, rt0.c2, rt0.c2))>=((v0.c1, 2101579365, v0.c0))) END DESC;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((+ (NULL))) BETWEEN ('-1158230141') AND (CAST(rt0.c2 AS REAL)))) ORDER BY CASE (rt0.c2 IN ())  WHEN (((v0.c0))>((NULL))) THEN v0.c0 WHEN ((((v0.c1)OR(v0.c1)))OR(0.4464993624155681)) THEN '1812372903' WHEN ((v0.c0) IS TRUE) THEN CASE NULL  WHEN 'ꘟ1' THEN v0.c0 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END ELSE SUBSTR(v0.c0, rt0.c1) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (NULL))) BETWEEN ('-1158230141') AND (CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE (rt0.c2 IN ())  WHEN (((v0.c0))>((NULL))) THEN v0.c0 WHEN ((((v0.c1)OR(v0.c1)))OR(0.4464993624155681)) THEN '1812372903' WHEN ((v0.c0) IS TRUE) THEN CASE NULL  WHEN 'ꘟ1' THEN v0.c0 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END ELSE SUBSTR(v0.c0, rt0.c1) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((+ (NULL))) BETWEEN ('-1158230141') AND (CAST(rt0.c2 AS REAL)))) ORDER BY CASE (rt0.c2 IN ())  WHEN (((v0.c0))>((NULL))) THEN v0.c0 WHEN ((((v0.c1)OR(v0.c1)))OR(0.4464993624155681)) THEN '1812372903' WHEN ((v0.c0) IS TRUE) THEN CASE NULL  WHEN 'ꘟ1' THEN v0.c0 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END ELSE SUBSTR(v0.c0, rt0.c1) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (NULL))) BETWEEN ('-1158230141') AND (CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE (rt0.c2 IN ())  WHEN (((v0.c0))>((NULL))) THEN v0.c0 WHEN ((((v0.c1)OR(v0.c1)))OR(0.4464993624155681)) THEN '1812372903' WHEN ((v0.c0) IS TRUE) THEN CASE NULL  WHEN 'ꘟ1' THEN v0.c0 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END ELSE SUBSTR(v0.c0, rt0.c1) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((+ (NULL))) BETWEEN ('-1158230141') AND (CAST(rt0.c2 AS REAL)))) ORDER BY CASE (rt0.c2 IN ())  WHEN (((v0.c0))>((NULL))) THEN v0.c0 WHEN ((((v0.c1)OR(v0.c1)))OR(0.4464993624155681)) THEN '1812372903' WHEN ((v0.c0) IS TRUE) THEN CASE NULL  WHEN 'ꘟ1' THEN v0.c0 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END ELSE SUBSTR(v0.c0, rt0.c1) END  NULLS FIRST;
SELECT ALL * FROM v0, rt0 WHERE (CAST(((x'')||(v0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'')||(v0.c1)) AS TEXT)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CAST(((x'')||(v0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'')||(v0.c1)) AS TEXT)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CAST(((x'')||(v0.c1)) AS TEXT));
SELECT COUNT(*) FROM v0, rt0 WHERE ('ὍUg0Xbj|g');
SELECT SUM(count) FROM (SELECT ALL (('ὍUg0Xbj|g') IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ('ὍUg0Xbj|g');
SELECT SUM(count) FROM (SELECT ALL (('ὍUg0Xbj|g') IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ('ὍUg0Xbj|g');
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))  WHEN (~ (rt0.c2)) THEN (rt0.c0 IN ()) ELSE ((((rt0.c2)AND(rt0.c0)))OR(NULL)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))  WHEN (~ (rt0.c2)) THEN (rt0.c0 IN ()) ELSE ((((rt0.c2)AND(rt0.c0)))OR(NULL)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))  WHEN (~ (rt0.c2)) THEN (rt0.c0 IN ()) ELSE ((((rt0.c2)AND(rt0.c0)))OR(NULL)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))  WHEN (~ (rt0.c2)) THEN (rt0.c0 IN ()) ELSE ((((rt0.c2)AND(rt0.c0)))OR(NULL)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))  WHEN (~ (rt0.c2)) THEN (rt0.c0 IN ()) ELSE ((((rt0.c2)AND(rt0.c0)))OR(NULL)) END);
SELECT COUNT(*) FROM v0, rt0 WHERE ((- (((v0.c0) NOT BETWEEN (v0.c1) AND (rt0.c1))))) ORDER BY ((((((v0.c0)||(rt0.c2)))OR(((rt0.c2)LIKE(rt0.c2)))))AND((((rt0.c0, rt0.c0, v0.c0, rt0.c1, v0.c0)) BETWEEN ((v0.c0, v0.c1, v0.c0, x'96c76f34', v0.c1)) AND ((v0.c2, v0.c0, rt0.c0, rt0.c1, 0X478d3b09)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((v0.c0) NOT BETWEEN (v0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((v0.c0)||(rt0.c2)))OR(((rt0.c2)LIKE(rt0.c2)))))AND((((rt0.c0, rt0.c0, v0.c0, rt0.c1, v0.c0)) BETWEEN ((v0.c0, v0.c1, v0.c0, x'96c76f34', v0.c1)) AND ((v0.c2, v0.c0, rt0.c0, rt0.c1, 0X478d3b09)))))  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE ((- (((v0.c0) NOT BETWEEN (v0.c1) AND (rt0.c1))))) ORDER BY ((((((v0.c0)||(rt0.c2)))OR(((rt0.c2)LIKE(rt0.c2)))))AND((((rt0.c0, rt0.c0, v0.c0, rt0.c1, v0.c0)) BETWEEN ((v0.c0, v0.c1, v0.c0, x'96c76f34', v0.c1)) AND ((v0.c2, v0.c0, rt0.c0, rt0.c1, 0X478d3b09)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((v0.c0) NOT BETWEEN (v0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((v0.c0)||(rt0.c2)))OR(((rt0.c2)LIKE(rt0.c2)))))AND((((rt0.c0, rt0.c0, v0.c0, rt0.c1, v0.c0)) BETWEEN ((v0.c0, v0.c1, v0.c0, x'96c76f34', v0.c1)) AND ((v0.c2, v0.c0, rt0.c0, rt0.c1, 0X478d3b09)))))  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE ((- (((v0.c0) NOT BETWEEN (v0.c1) AND (rt0.c1))))) ORDER BY ((((((v0.c0)||(rt0.c2)))OR(((rt0.c2)LIKE(rt0.c2)))))AND((((rt0.c0, rt0.c0, v0.c0, rt0.c1, v0.c0)) BETWEEN ((v0.c0, v0.c1, v0.c0, x'96c76f34', v0.c1)) AND ((v0.c2, v0.c0, rt0.c0, rt0.c1, 0X478d3b09)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, v0 WHERE ((NULLIF(DISTINCT rt0.c0, v0.c1) IN ())) ORDER BY (((rt0.c2)) NOT BETWEEN ((CAST(v0.c0 AS NUMERIC))) AND ((((v0.c2)&(rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NULLIF(DISTINCT rt0.c0, v0.c1) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c2)) NOT BETWEEN ((CAST(v0.c0 AS NUMERIC))) AND ((((v0.c2)&(rt0.c2)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, v0 WHERE ((NULLIF(DISTINCT rt0.c0, v0.c1) IN ())) ORDER BY (((rt0.c2)) NOT BETWEEN ((CAST(v0.c0 AS NUMERIC))) AND ((((v0.c2)&(rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NULLIF(DISTINCT rt0.c0, v0.c1) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c2)) NOT BETWEEN ((CAST(v0.c0 AS NUMERIC))) AND ((((v0.c2)&(rt0.c2)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, v0 WHERE ((NULLIF(DISTINCT rt0.c0, v0.c1) IN ())) ORDER BY (((rt0.c2)) NOT BETWEEN ((CAST(v0.c0 AS NUMERIC))) AND ((((v0.c2)&(rt0.c2)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (ABS(DISTINCT ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))) ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (ABS(DISTINCT ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))) ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (ABS(DISTINCT ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))) ORDER BY rt0.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ('0.7284947595587807');
SELECT SUM(count) FROM (SELECT ALL (('0.7284947595587807') IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ('0.7284947595587807');
SELECT SUM(count) FROM (SELECT ALL (('0.7284947595587807') IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ('0.7284947595587807');
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT * FROM rt0, v0 WHERE (((((2.008489093E9 COLLATE NOCASE)AND((((v0.c2, '/', x''))<>((rt0.c2, v0.c1, rt0.c2))))))OR(rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((2.008489093E9 COLLATE NOCASE)AND((((v0.c2, '/', x''))!=((rt0.c2, v0.c1, rt0.c2))))))OR(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((2.008489093E9 COLLATE NOCASE)AND((((v0.c2, '/', x''))<>((rt0.c2, v0.c1, rt0.c2))))))OR(rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((2.008489093E9 COLLATE NOCASE)AND((((v0.c2, '/', x''))!=((rt0.c2, v0.c1, rt0.c2))))))OR(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((2.008489093E9 COLLATE NOCASE)AND((((v0.c2, '/', x''))<>((rt0.c2, v0.c1, rt0.c2))))))OR(rt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c2)|(v0.c2)) IN (rtreenode(v0.c2, rt0.c0))) WHERE ((~ (((rt0.c1) NOT BETWEEN (rt0.c1) AND (v0.c0))))) ORDER BY CASE CAST(v0.c2 AS NUMERIC)  WHEN (NOT (NULL)) THEN (((v0.c0, v0.c1, v0.c1, v0.c2, v0.c1, rt0.c1, rt0.c0))<>((v0.c0, v0.c1, v0.c2, NULL, x'', rt0.c0, v0.c2))) ELSE TYPEOF(DISTINCT v0.c1) END;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c1) NOT BETWEEN (rt0.c1) AND (v0.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c2)|(v0.c2)) IN (rtreenode(v0.c2, rt0.c0))) ORDER BY CASE CAST(v0.c2 AS NUMERIC)  WHEN (NOT (NULL)) THEN (((v0.c0, v0.c1, v0.c1, v0.c2, v0.c1, rt0.c1, rt0.c0))<>((v0.c0, v0.c1, v0.c2, NULL, x'', rt0.c0, v0.c2))) ELSE TYPEOF(DISTINCT v0.c1) END);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c2)|(v0.c2)) IN (rtreenode(v0.c2, rt0.c0))) WHERE ((~ (((rt0.c1) NOT BETWEEN (rt0.c1) AND (v0.c0))))) ORDER BY CASE CAST(v0.c2 AS NUMERIC)  WHEN (NOT (NULL)) THEN (((v0.c0, v0.c1, v0.c1, v0.c2, v0.c1, rt0.c1, rt0.c0))<>((v0.c0, v0.c1, v0.c2, NULL, x'', rt0.c0, v0.c2))) ELSE TYPEOF(DISTINCT v0.c1) END;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c1) NOT BETWEEN (rt0.c1) AND (v0.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c2)|(v0.c2)) IN (rtreenode(v0.c2, rt0.c0))) ORDER BY CASE CAST(v0.c2 AS NUMERIC)  WHEN (NOT (NULL)) THEN (((v0.c0, v0.c1, v0.c1, v0.c2, v0.c1, rt0.c1, rt0.c0))<>((v0.c0, v0.c1, v0.c2, NULL, x'', rt0.c0, v0.c2))) ELSE TYPEOF(DISTINCT v0.c1) END);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c2)|(v0.c2)) IN (rtreenode(v0.c2, rt0.c0))) WHERE ((~ (((rt0.c1) NOT BETWEEN (rt0.c1) AND (v0.c0))))) ORDER BY CASE CAST(v0.c2 AS NUMERIC)  WHEN (NOT (NULL)) THEN (((v0.c0, v0.c1, v0.c1, v0.c2, v0.c1, rt0.c1, rt0.c0))<>((v0.c0, v0.c1, v0.c2, NULL, x'', rt0.c0, v0.c2))) ELSE TYPEOF(DISTINCT v0.c1) END;
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 END)AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY LIKELY(DISTINCT ((((rt0.c2)OR(rt0.c2)))AND(rt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN rt0.c1 END)AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY LIKELY(DISTINCT ((((rt0.c2)OR(rt0.c2)))AND(rt0.c2))) DESC);
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 END)AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY LIKELY(DISTINCT ((((rt0.c2)OR(rt0.c2)))AND(rt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN rt0.c1 END)AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY LIKELY(DISTINCT ((((rt0.c2)OR(rt0.c2)))AND(rt0.c2))) DESC);
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 END)AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY LIKELY(DISTINCT ((((rt0.c2)OR(rt0.c2)))AND(rt0.c2))) DESC;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((v0.c2)%(rt0.c2)))|(((rt0.c2) BETWEEN (v0.c1) AND (v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)%(rt0.c2)))|(((rt0.c2) BETWEEN (v0.c1) AND (v0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((v0.c2)%(rt0.c2)))|(((rt0.c2) BETWEEN (v0.c1) AND (v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)%(rt0.c2)))|(((rt0.c2) BETWEEN (v0.c1) AND (v0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((v0.c2)%(rt0.c2)))|(((rt0.c2) BETWEEN (v0.c1) AND (v0.c2)))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)/(rt0.c1)))!=(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)/(rt0.c1)))<>(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)/(rt0.c1)))!=(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)/(rt0.c1)))<>(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)/(rt0.c1)))!=(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END)));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (0xffffffffee09a0a6);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffee09a0a6) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (0xffffffffee09a0a6);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffee09a0a6) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (0xffffffffee09a0a6);
SELECT * FROM rt0, v0 WHERE (CAST(((x'')*(rt0.c2)) AS BLOB)) ORDER BY CASE rt0.c1 COLLATE NOCASE  WHEN (NOT (rt0.c0)) THEN ((v0.c2)|(v0.c1)) WHEN ((v0.c2)>(rt0.c0)) THEN ((rt0.c2) NOT BETWEEN (v0.c1) AND (1157402408)) WHEN ((((v0.c2)AND(v0.c2)))AND(v0.c0)) THEN 1.05235478E8 ELSE NULL END DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((x'')*(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE rt0.c1 COLLATE NOCASE  WHEN (NOT (rt0.c0)) THEN ((v0.c2)|(v0.c1)) WHEN ((v0.c2)>(rt0.c0)) THEN ((rt0.c2) NOT BETWEEN (v0.c1) AND (1157402408)) WHEN ((((v0.c2)AND(v0.c2)))AND(v0.c0)) THEN 1.05235478E8 ELSE NULL END DESC);
SELECT * FROM rt0, v0 WHERE (CAST(((x'')*(rt0.c2)) AS BLOB)) ORDER BY CASE rt0.c1 COLLATE NOCASE  WHEN (NOT (rt0.c0)) THEN ((v0.c2)|(v0.c1)) WHEN ((v0.c2)>(rt0.c0)) THEN ((rt0.c2) NOT BETWEEN (v0.c1) AND (1157402408)) WHEN ((((v0.c2)AND(v0.c2)))AND(v0.c0)) THEN 1.05235478E8 ELSE NULL END DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((x'')*(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE rt0.c1 COLLATE NOCASE  WHEN (NOT (rt0.c0)) THEN ((v0.c2)|(v0.c1)) WHEN ((v0.c2)>(rt0.c0)) THEN ((rt0.c2) NOT BETWEEN (v0.c1) AND (1157402408)) WHEN ((((v0.c2)AND(v0.c2)))AND(v0.c0)) THEN 1.05235478E8 ELSE NULL END DESC);
SELECT * FROM rt0, v0 WHERE (CAST(((x'')*(rt0.c2)) AS BLOB)) ORDER BY CASE rt0.c1 COLLATE NOCASE  WHEN (NOT (rt0.c0)) THEN ((v0.c2)|(v0.c1)) WHEN ((v0.c2)>(rt0.c0)) THEN ((rt0.c2) NOT BETWEEN (v0.c1) AND (1157402408)) WHEN ((((v0.c2)AND(v0.c2)))AND(v0.c0)) THEN 1.05235478E8 ELSE NULL END DESC;
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON CASE WHEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)) THEN ((rt0.c2)GLOB(v0.c1)) WHEN rt0.c0 THEN HEX(DISTINCT v0.c1) WHEN ((v0.c0) NOT NULL) THEN NULL WHEN (((rt0.c2)) BETWEEN ((x'')) AND ((v0.c2))) THEN (NOT (rt0.c0)) WHEN (- (0.30893409978773356)) THEN CASE WHEN v0.c1 THEN v0.c0 WHEN rt0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c1 END ELSE v0.c2 END WHERE ((((v0.c1))>(('-818671277'))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1))>(('-818671277')))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON CASE WHEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)) THEN ((rt0.c2)GLOB(v0.c1)) WHEN rt0.c0 THEN HEX(DISTINCT v0.c1) WHEN ((v0.c0) NOT NULL) THEN NULL WHEN (((rt0.c2)) BETWEEN ((x'')) AND ((v0.c2))) THEN (NOT (rt0.c0)) WHEN (- (0.30893409978773356)) THEN CASE WHEN v0.c1 THEN v0.c0 WHEN rt0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c1 END ELSE v0.c2 END);
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON CASE WHEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)) THEN ((rt0.c2)GLOB(v0.c1)) WHEN rt0.c0 THEN HEX(DISTINCT v0.c1) WHEN ((v0.c0) NOT NULL) THEN NULL WHEN (((rt0.c2)) BETWEEN ((x'')) AND ((v0.c2))) THEN (NOT (rt0.c0)) WHEN (- (0.30893409978773356)) THEN CASE WHEN v0.c1 THEN v0.c0 WHEN rt0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c1 END ELSE v0.c2 END WHERE ((((v0.c1))>(('-818671277'))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1))>(('-818671277')))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON CASE WHEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)) THEN ((rt0.c2)GLOB(v0.c1)) WHEN rt0.c0 THEN HEX(DISTINCT v0.c1) WHEN ((v0.c0) NOT NULL) THEN NULL WHEN (((rt0.c2)) BETWEEN ((x'')) AND ((v0.c2))) THEN (NOT (rt0.c0)) WHEN (- (0.30893409978773356)) THEN CASE WHEN v0.c1 THEN v0.c0 WHEN rt0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c1 END ELSE v0.c2 END);
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON CASE WHEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)) THEN ((rt0.c2)GLOB(v0.c1)) WHEN rt0.c0 THEN HEX(DISTINCT v0.c1) WHEN ((v0.c0) NOT NULL) THEN NULL WHEN (((rt0.c2)) BETWEEN ((x'')) AND ((v0.c2))) THEN (NOT (rt0.c0)) WHEN (- (0.30893409978773356)) THEN CASE WHEN v0.c1 THEN v0.c0 WHEN rt0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c1 END ELSE v0.c2 END WHERE ((((v0.c1))>(('-818671277'))));
SELECT ALL COUNT(*) FROM rt0 WHERE (0.7737687441910794) ORDER BY CASE WHEN CAST(rt0.c0 AS INTEGER) THEN NULL END ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.7737687441910794) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CAST(rt0.c0 AS INTEGER) THEN NULL END ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.7737687441910794) ORDER BY CASE WHEN CAST(rt0.c0 AS INTEGER) THEN NULL END ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.7737687441910794) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CAST(rt0.c0 AS INTEGER) THEN NULL END ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.7737687441910794) ORDER BY CASE WHEN CAST(rt0.c0 AS INTEGER) THEN NULL END ASC;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY ((rt0.c0 COLLATE RTRIM) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE RTRIM) NOTNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY ((rt0.c0 COLLATE RTRIM) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE RTRIM) NOTNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY ((rt0.c0 COLLATE RTRIM) NOTNULL) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (UPPER(((0.5893646639029575) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((0.5893646639029575) NOT NULL))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (UPPER(((0.5893646639029575) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((0.5893646639029575) NOT NULL))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (UPPER(((0.5893646639029575) NOT NULL)));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON TRIM(((v0.c2)*(v0.c2))) WHERE (CAST(GLOB(v0.c2, rt0.c2) AS INTEGER)) ORDER BY v0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(GLOB(v0.c2, rt0.c2) AS INTEGER)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON TRIM(((v0.c2)*(v0.c2))) ORDER BY v0.c2  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON TRIM(((v0.c2)*(v0.c2))) WHERE (CAST(GLOB(v0.c2, rt0.c2) AS INTEGER)) ORDER BY v0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(GLOB(v0.c2, rt0.c2) AS INTEGER)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON TRIM(((v0.c2)*(v0.c2))) ORDER BY v0.c2  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON TRIM(((v0.c2)*(v0.c2))) WHERE (CAST(GLOB(v0.c2, rt0.c2) AS INTEGER)) ORDER BY v0.c2  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((CAST(v0.c1 AS REAL))==(((v0.c1)==(v0.c1))))) ORDER BY (~ (((v0.c2)*(v0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c1 AS REAL))=(((v0.c1)==(v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY (~ (((v0.c2)*(v0.c2)))) DESC);
SELECT ALL * FROM v0 WHERE (((CAST(v0.c1 AS REAL))==(((v0.c1)==(v0.c1))))) ORDER BY (~ (((v0.c2)*(v0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c1 AS REAL))=(((v0.c1)==(v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY (~ (((v0.c2)*(v0.c2)))) DESC);
SELECT ALL * FROM v0 WHERE (((CAST(v0.c1 AS REAL))==(((v0.c1)==(v0.c1))))) ORDER BY (~ (((v0.c2)*(v0.c2)))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2))) NOT BETWEEN (((0.4066933443901505)AND(rt0.c0))) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE NULL END))) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c2) AND ('Q')))LIKE(((rt0.c0) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2))) NOT BETWEEN (((0.4066933443901505)AND(rt0.c0))) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE NULL END))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c2) AND ('Q')))LIKE(((rt0.c0) ISNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2))) NOT BETWEEN (((0.4066933443901505)AND(rt0.c0))) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE NULL END))) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c2) AND ('Q')))LIKE(((rt0.c0) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2))) NOT BETWEEN (((0.4066933443901505)AND(rt0.c0))) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE NULL END))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c2) AND ('Q')))LIKE(((rt0.c0) ISNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2))) NOT BETWEEN (((0.4066933443901505)AND(rt0.c0))) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE NULL END))) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c2) AND ('Q')))LIKE(((rt0.c0) ISNULL)))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON CAST(((v0.c1) BETWEEN (NULL) AND (v0.c1)) AS REAL) WHERE (CASE WHEN ((rt0.c0)>(v0.c0)) THEN (('-1601780960') NOT BETWEEN ('c5,-t') AND (v0.c2)) END) ORDER BY ((((0.6225304952668828)OR((((v0.c0, rt0.c0, '', NULL, rt0.c1)) BETWEEN ((v0.c1, v0.c0, rt0.c0, v0.c1, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c0, v0.c2, v0.c2))))))AND((((rt0.c0))=((rt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0)>(v0.c0)) THEN (('-1601780960') NOT BETWEEN ('c5,-t') AND (v0.c2)) END) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON CAST(((v0.c1) BETWEEN (NULL) AND (v0.c1)) AS REAL) ORDER BY ((((0.6225304952668828)OR((((v0.c0, rt0.c0, '', NULL, rt0.c1)) BETWEEN ((v0.c1, v0.c0, rt0.c0, v0.c1, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c0, v0.c2, v0.c2))))))AND((((rt0.c0))==((rt0.c1)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON CAST(((v0.c1) BETWEEN (NULL) AND (v0.c1)) AS REAL) WHERE (CASE WHEN ((rt0.c0)>(v0.c0)) THEN (('-1601780960') NOT BETWEEN ('c5,-t') AND (v0.c2)) END) ORDER BY ((((0.6225304952668828)OR((((v0.c0, rt0.c0, '', NULL, rt0.c1)) BETWEEN ((v0.c1, v0.c0, rt0.c0, v0.c1, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c0, v0.c2, v0.c2))))))AND((((rt0.c0))=((rt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0)>(v0.c0)) THEN (('-1601780960') NOT BETWEEN ('c5,-t') AND (v0.c2)) END) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON CAST(((v0.c1) BETWEEN (NULL) AND (v0.c1)) AS REAL) ORDER BY ((((0.6225304952668828)OR((((v0.c0, rt0.c0, '', NULL, rt0.c1)) BETWEEN ((v0.c1, v0.c0, rt0.c0, v0.c1, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c0, v0.c2, v0.c2))))))AND((((rt0.c0))==((rt0.c1)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON CAST(((v0.c1) BETWEEN (NULL) AND (v0.c1)) AS REAL) WHERE (CASE WHEN ((rt0.c0)>(v0.c0)) THEN (('-1601780960') NOT BETWEEN ('c5,-t') AND (v0.c2)) END) ORDER BY ((((0.6225304952668828)OR((((v0.c0, rt0.c0, '', NULL, rt0.c1)) BETWEEN ((v0.c1, v0.c0, rt0.c0, v0.c1, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c0, v0.c2, v0.c2))))))AND((((rt0.c0))=((rt0.c1)))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON (((rt0.c0)) NOT BETWEEN ((((v0.c2) BETWEEN (rt0.c0) AND (v0.c2)))) AND ((((((v0.c1)AND(rt0.c1)))OR(rt0.c1))))) WHERE (MIN(((rt0.c0)<>(v0.c2)), (((rt0.c2)) BETWEEN (('7872923516684998966:-7043245398124121839--301175200316701255 211 ')) AND ((v0.c1))))) ORDER BY (((((v0.c1)OR(rt0.c1)))OR(rt0.c0)) IN ()) ASC, (((CASE rt0.c1  WHEN rt0.c2 THEN v0.c1 WHEN v0.c1 THEN rt0.c2 WHEN v0.c2 THEN v0.c0 ELSE rt0.c1 END, ((v0.c1) BETWEEN (rt0.c1) AND (v0.c1)), (NOT (0.45576712718609524))))<=((((rt0.c2)IS NOT(v0.c0)), ((rt0.c1)+(rt0.c0)), x'')))  NULLS LAST, CASE WHEN CAST(rt0.c0 AS INTEGER) THEN LIKELIHOOD(rt0.c2, 0.5388797517655031) WHEN TYPEOF(DISTINCT v0.c0) THEN CASE WHEN rt0.c2 THEN rt0.c0 END WHEN (rt0.c2 IN ()) THEN 'r\n' ELSE UPPER(NULL) END;
SELECT SUM(count) FROM (SELECT ((MIN(((rt0.c0)<>(v0.c2)), (((rt0.c2)) BETWEEN (('7872923516684998966:-7043245398124121839--301175200316701255 211 ')) AND ((v0.c1))))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (((rt0.c0)) NOT BETWEEN ((((v0.c2) BETWEEN (rt0.c0) AND (v0.c2)))) AND ((((((v0.c1)AND(rt0.c1)))OR(rt0.c1))))) ORDER BY (((((v0.c1)OR(rt0.c1)))OR(rt0.c0)) IN ()) ASC, (((CASE rt0.c1  WHEN rt0.c2 THEN v0.c1 WHEN v0.c1 THEN rt0.c2 WHEN v0.c2 THEN v0.c0 ELSE rt0.c1 END, ((v0.c1) BETWEEN (rt0.c1) AND (v0.c1)), (NOT (0.45576712718609524))))<=((((rt0.c2)IS NOT(v0.c0)), ((rt0.c1)+(rt0.c0)), x'')))  NULLS LAST, CASE WHEN CAST(rt0.c0 AS INTEGER) THEN LIKELIHOOD(rt0.c2, 0.5388797517655031) WHEN TYPEOF(DISTINCT v0.c0) THEN CASE WHEN rt0.c2 THEN rt0.c0 END WHEN (rt0.c2 IN ()) THEN 'r\n' ELSE UPPER(NULL) END);
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON (((rt0.c0)) NOT BETWEEN ((((v0.c2) BETWEEN (rt0.c0) AND (v0.c2)))) AND ((((((v0.c1)AND(rt0.c1)))OR(rt0.c1))))) WHERE (MIN(((rt0.c0)<>(v0.c2)), (((rt0.c2)) BETWEEN (('7872923516684998966:-7043245398124121839--301175200316701255 211 ')) AND ((v0.c1))))) ORDER BY (((((v0.c1)OR(rt0.c1)))OR(rt0.c0)) IN ()) ASC, (((CASE rt0.c1  WHEN rt0.c2 THEN v0.c1 WHEN v0.c1 THEN rt0.c2 WHEN v0.c2 THEN v0.c0 ELSE rt0.c1 END, ((v0.c1) BETWEEN (rt0.c1) AND (v0.c1)), (NOT (0.45576712718609524))))<=((((rt0.c2)IS NOT(v0.c0)), ((rt0.c1)+(rt0.c0)), x'')))  NULLS LAST, CASE WHEN CAST(rt0.c0 AS INTEGER) THEN LIKELIHOOD(rt0.c2, 0.5388797517655031) WHEN TYPEOF(DISTINCT v0.c0) THEN CASE WHEN rt0.c2 THEN rt0.c0 END WHEN (rt0.c2 IN ()) THEN 'r\n' ELSE UPPER(NULL) END;
SELECT SUM(count) FROM (SELECT ((MIN(((rt0.c0)<>(v0.c2)), (((rt0.c2)) BETWEEN (('7872923516684998966:-7043245398124121839--301175200316701255 211 ')) AND ((v0.c1))))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (((rt0.c0)) NOT BETWEEN ((((v0.c2) BETWEEN (rt0.c0) AND (v0.c2)))) AND ((((((v0.c1)AND(rt0.c1)))OR(rt0.c1))))) ORDER BY (((((v0.c1)OR(rt0.c1)))OR(rt0.c0)) IN ()) ASC, (((CASE rt0.c1  WHEN rt0.c2 THEN v0.c1 WHEN v0.c1 THEN rt0.c2 WHEN v0.c2 THEN v0.c0 ELSE rt0.c1 END, ((v0.c1) BETWEEN (rt0.c1) AND (v0.c1)), (NOT (0.45576712718609524))))<=((((rt0.c2)IS NOT(v0.c0)), ((rt0.c1)+(rt0.c0)), x'')))  NULLS LAST, CASE WHEN CAST(rt0.c0 AS INTEGER) THEN LIKELIHOOD(rt0.c2, 0.5388797517655031) WHEN TYPEOF(DISTINCT v0.c0) THEN CASE WHEN rt0.c2 THEN rt0.c0 END WHEN (rt0.c2 IN ()) THEN 'r\n' ELSE UPPER(NULL) END);
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON (((rt0.c0)) NOT BETWEEN ((((v0.c2) BETWEEN (rt0.c0) AND (v0.c2)))) AND ((((((v0.c1)AND(rt0.c1)))OR(rt0.c1))))) WHERE (MIN(((rt0.c0)<>(v0.c2)), (((rt0.c2)) BETWEEN (('7872923516684998966:-7043245398124121839--301175200316701255 211 ')) AND ((v0.c1))))) ORDER BY (((((v0.c1)OR(rt0.c1)))OR(rt0.c0)) IN ()) ASC, (((CASE rt0.c1  WHEN rt0.c2 THEN v0.c1 WHEN v0.c1 THEN rt0.c2 WHEN v0.c2 THEN v0.c0 ELSE rt0.c1 END, ((v0.c1) BETWEEN (rt0.c1) AND (v0.c1)), (NOT (0.45576712718609524))))<=((((rt0.c2)IS NOT(v0.c0)), ((rt0.c1)+(rt0.c0)), x'')))  NULLS LAST, CASE WHEN CAST(rt0.c0 AS INTEGER) THEN LIKELIHOOD(rt0.c2, 0.5388797517655031) WHEN TYPEOF(DISTINCT v0.c0) THEN CASE WHEN rt0.c2 THEN rt0.c0 END WHEN (rt0.c2 IN ()) THEN 'r\n' ELSE UPPER(NULL) END;
SELECT ALL * FROM rt0 WHERE (SQLITE_COMPILEOPTION_USED((NOT (0.6171165099954161))));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED((NOT (0.6171165099954161)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (SQLITE_COMPILEOPTION_USED((NOT (0.6171165099954161))));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED((NOT (0.6171165099954161)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (SQLITE_COMPILEOPTION_USED((NOT (0.6171165099954161))));
SELECT ALL * FROM v0, rt0 WHERE (((x'')>>(NULL)));
SELECT SUM(count) FROM (SELECT ((((x'')>>(NULL))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((x'')>>(NULL)));
SELECT SUM(count) FROM (SELECT ((((x'')>>(NULL))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((x'')>>(NULL)));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON json_insert(((x'') NOT BETWEEN (0.9582304572660298) AND (v0.c1)), ((v0.c1) NOT BETWEEN (v0.c2) AND (-1.312446342E9)), ((0.7585090064226976)==(rt0.c1)), ((rt0.c2) NOTNULL), ((v0.c0)>(rt0.c0))) WHERE (((((((((((((rt0.c1)OR(v0.c1)))AND(v0.c0)))OR(CAST(v0.c1 AS TEXT))))OR((rt0.c2 IN ()))))OR(((rt0.c1)||(v0.c1)))))OR((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((x'')))))) ORDER BY (((((v0.c2))>=((rt0.c2))))IS(rt0.c1 COLLATE BINARY)), json_valid(((v0.c2) BETWEEN (v0.c2) AND (rt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c1)OR(v0.c1)))AND(v0.c0)))OR(CAST(v0.c1 AS TEXT))))OR((rt0.c2 IN ()))))OR(((rt0.c1)||(v0.c1)))))OR((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((x'')))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON json_insert(((x'') NOT BETWEEN (0.9582304572660298) AND (v0.c1)), ((v0.c1) NOT BETWEEN (v0.c2) AND (-1.312446342E9)), ((0.7585090064226976)=(rt0.c1)), ((rt0.c2) NOTNULL), ((v0.c0)>(rt0.c0))) ORDER BY (((((v0.c2))>=((rt0.c2))))IS(rt0.c1 COLLATE BINARY)), json_valid(((v0.c2) BETWEEN (v0.c2) AND (rt0.c1)))  NULLS LAST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON json_insert(((x'') NOT BETWEEN (0.9582304572660298) AND (v0.c1)), ((v0.c1) NOT BETWEEN (v0.c2) AND (-1.312446342E9)), ((0.7585090064226976)==(rt0.c1)), ((rt0.c2) NOTNULL), ((v0.c0)>(rt0.c0))) WHERE (((((((((((((rt0.c1)OR(v0.c1)))AND(v0.c0)))OR(CAST(v0.c1 AS TEXT))))OR((rt0.c2 IN ()))))OR(((rt0.c1)||(v0.c1)))))OR((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((x'')))))) ORDER BY (((((v0.c2))>=((rt0.c2))))IS(rt0.c1 COLLATE BINARY)), json_valid(((v0.c2) BETWEEN (v0.c2) AND (rt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c1)OR(v0.c1)))AND(v0.c0)))OR(CAST(v0.c1 AS TEXT))))OR((rt0.c2 IN ()))))OR(((rt0.c1)||(v0.c1)))))OR((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((x'')))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON json_insert(((x'') NOT BETWEEN (0.9582304572660298) AND (v0.c1)), ((v0.c1) NOT BETWEEN (v0.c2) AND (-1.312446342E9)), ((0.7585090064226976)=(rt0.c1)), ((rt0.c2) NOTNULL), ((v0.c0)>(rt0.c0))) ORDER BY (((((v0.c2))>=((rt0.c2))))IS(rt0.c1 COLLATE BINARY)), json_valid(((v0.c2) BETWEEN (v0.c2) AND (rt0.c1)))  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE ((NOT ((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT ((~ (rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((NOT ((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT ((~ (rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((NOT ((~ (rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((LIKELIHOOD(DISTINCT rt0.c0, 0.7152433774552962)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT rt0.c0, 0.7152433774552962)) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((LIKELIHOOD(DISTINCT rt0.c0, 0.7152433774552962)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT rt0.c0, 0.7152433774552962)) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((LIKELIHOOD(DISTINCT rt0.c0, 0.7152433774552962)) IS FALSE));
SELECT ALL * FROM rt0 WHERE (((rt0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0) IS TRUE));
SELECT COUNT(*) FROM v0 WHERE (LIKELY(DISTINCT ((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c0)))) ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END)IS NOT((- (v0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END)IS NOT((- (v0.c1)))) DESC);
SELECT COUNT(*) FROM v0 WHERE (LIKELY(DISTINCT ((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c0)))) ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END)IS NOT((- (v0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END)IS NOT((- (v0.c1)))) DESC);
SELECT COUNT(*) FROM v0 WHERE (LIKELY(DISTINCT ((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c0)))) ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END)IS NOT((- (v0.c1)))) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c1) ORDER BY '-570579707' ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0 ORDER BY '-570579707' ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c1) ORDER BY '-570579707' ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0 ORDER BY '-570579707' ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c1) ORDER BY '-570579707' ASC;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((ROUND(rt0.c0, rt0.c2) IN (((((v0.c2)OR(rt0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((ROUND(rt0.c0, rt0.c2) IN (((((v0.c2)OR(rt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((ROUND(rt0.c0, rt0.c2) IN (((((v0.c2)OR(rt0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((ROUND(rt0.c0, rt0.c2) IN (((((v0.c2)OR(rt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((ROUND(rt0.c0, rt0.c2) IN (((((v0.c2)OR(rt0.c0)))OR(rt0.c1)))));
SELECT * FROM v0, rt0 WHERE (v0.c0) ORDER BY (0.9027022930521589 IN (((rt0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)))), (((v0.c1 IN ())) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, rt0 ORDER BY (0.9027022930521589 IN (((rt0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)))), (((v0.c1 IN ())) NOT NULL));
SELECT * FROM v0, rt0 WHERE (v0.c0) ORDER BY (0.9027022930521589 IN (((rt0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)))), (((v0.c1 IN ())) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, rt0 ORDER BY (0.9027022930521589 IN (((rt0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)))), (((v0.c1 IN ())) NOT NULL));
SELECT * FROM v0, rt0 WHERE (v0.c0) ORDER BY (0.9027022930521589 IN (((rt0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)))), (((v0.c1 IN ())) NOT NULL);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1 IN (rt0.c0))))=(((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c1, 0X6dcda533, rt0.c1)))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 IN (rt0.c0))))==(((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c1, 0x6dcda533, rt0.c1))))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1 IN (rt0.c0))))=(((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c1, 0X6dcda533, rt0.c1)))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 IN (rt0.c0))))==(((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c1, 0x6dcda533, rt0.c1))))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1 IN (rt0.c0))))=(((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c1, 0X6dcda533, rt0.c1)))))));
SELECT ALL * FROM rt0 NOT INDEXED WHERE (CASE CASE WHEN rt0.c0 THEN rt0.c2 END  WHEN ((rt0.c2)+(rt0.c1)) THEN ((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)) WHEN ((((((((2.37255496E8)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)) THEN ((rt0.c2)<>(rt0.c1)) WHEN rt0.c0 THEN ((NULL)IS(x'')) ELSE MAX(rt0.c1, rt0.c2) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN rt0.c0 THEN rt0.c2 END  WHEN ((rt0.c2)+(rt0.c1)) THEN ((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)) WHEN ((((((((2.37255496E8)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)) THEN ((rt0.c2)<>(rt0.c1)) WHEN rt0.c0 THEN ((NULL)IS(x'')) ELSE MAX(rt0.c1, rt0.c2) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 NOT INDEXED WHERE (CASE CASE WHEN rt0.c0 THEN rt0.c2 END  WHEN ((rt0.c2)+(rt0.c1)) THEN ((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)) WHEN ((((((((2.37255496E8)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)) THEN ((rt0.c2)<>(rt0.c1)) WHEN rt0.c0 THEN ((NULL)IS(x'')) ELSE MAX(rt0.c1, rt0.c2) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN rt0.c0 THEN rt0.c2 END  WHEN ((rt0.c2)+(rt0.c1)) THEN ((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)) WHEN ((((((((2.37255496E8)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)) THEN ((rt0.c2)<>(rt0.c1)) WHEN rt0.c0 THEN ((NULL)IS(x'')) ELSE MAX(rt0.c1, rt0.c2) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 NOT INDEXED WHERE (CASE CASE WHEN rt0.c0 THEN rt0.c2 END  WHEN ((rt0.c2)+(rt0.c1)) THEN ((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)) WHEN ((((((((2.37255496E8)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)) THEN ((rt0.c2)<>(rt0.c1)) WHEN rt0.c0 THEN ((NULL)IS(x'')) ELSE MAX(rt0.c1, rt0.c2) END);
SELECT ALL * FROM rt0, v0 WHERE (CAST(IFNULL(DISTINCT rt0.c2, v0.c2) AS NUMERIC)) ORDER BY ((rt0.c2 COLLATE NOCASE)LIKE(v0.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(IFNULL(DISTINCT rt0.c2, v0.c2) AS NUMERIC)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((rt0.c2 COLLATE NOCASE)LIKE(v0.c0 COLLATE RTRIM)) ASC);
SELECT ALL * FROM rt0, v0 WHERE (CAST(IFNULL(DISTINCT rt0.c2, v0.c2) AS NUMERIC)) ORDER BY ((rt0.c2 COLLATE NOCASE)LIKE(v0.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(IFNULL(DISTINCT rt0.c2, v0.c2) AS NUMERIC)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((rt0.c2 COLLATE NOCASE)LIKE(v0.c0 COLLATE RTRIM)) ASC);
SELECT ALL * FROM rt0, v0 WHERE (CAST(IFNULL(DISTINCT rt0.c2, v0.c2) AS NUMERIC)) ORDER BY ((rt0.c2 COLLATE NOCASE)LIKE(v0.c0 COLLATE RTRIM)) ASC;
SELECT ALL * FROM v0 WHERE ((+ (CASE v0.c1  WHEN v0.c2 THEN v0.c0 END))) ORDER BY v0.c2  NULLS LAST, (((((v0.c0, v0.c2, v0.c1, v0.c1, v0.c0))>=((v0.c1, v0.c0, v0.c2, v0.c1, v0.c2))))<<('')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (CASE v0.c1  WHEN v0.c2 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY v0.c2  NULLS LAST, (((((v0.c0, v0.c2, v0.c1, v0.c1, v0.c0))>=((v0.c1, v0.c0, v0.c2, v0.c1, v0.c2))))<<('')) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((+ (CASE v0.c1  WHEN v0.c2 THEN v0.c0 END))) ORDER BY v0.c2  NULLS LAST, (((((v0.c0, v0.c2, v0.c1, v0.c1, v0.c0))>=((v0.c1, v0.c0, v0.c2, v0.c1, v0.c2))))<<('')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (CASE v0.c1  WHEN v0.c2 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY v0.c2  NULLS LAST, (((((v0.c0, v0.c2, v0.c1, v0.c1, v0.c0))>=((v0.c1, v0.c0, v0.c2, v0.c1, v0.c2))))<<('')) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((+ (CASE v0.c1  WHEN v0.c2 THEN v0.c0 END))) ORDER BY v0.c2  NULLS LAST, (((((v0.c0, v0.c2, v0.c1, v0.c1, v0.c0))>=((v0.c1, v0.c0, v0.c2, v0.c1, v0.c2))))<<('')) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((json_array(v0.c1, v0.c2, v0.c2, v0.c2))AND(((v0.c0) NOT BETWEEN (x'') AND (v0.c0)))))OR(v0.c2 COLLATE NOCASE)))AND(((v0.c2) IS FALSE))))AND('-1520196032')));
SELECT SUM(count) FROM (SELECT ((((((((((json_array(v0.c1, v0.c2, v0.c2, v0.c2))AND(((v0.c0) NOT BETWEEN (x'') AND (v0.c0)))))OR(v0.c2 COLLATE NOCASE)))AND(((v0.c2) IS FALSE))))AND('-1520196032'))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((json_array(v0.c1, v0.c2, v0.c2, v0.c2))AND(((v0.c0) NOT BETWEEN (x'') AND (v0.c0)))))OR(v0.c2 COLLATE NOCASE)))AND(((v0.c2) IS FALSE))))AND('-1520196032')));
SELECT SUM(count) FROM (SELECT ((((((((((json_array(v0.c1, v0.c2, v0.c2, v0.c2))AND(((v0.c0) NOT BETWEEN (x'') AND (v0.c0)))))OR(v0.c2 COLLATE NOCASE)))AND(((v0.c2) IS FALSE))))AND('-1520196032'))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((json_array(v0.c1, v0.c2, v0.c2, v0.c2))AND(((v0.c0) NOT BETWEEN (x'') AND (v0.c0)))))OR(v0.c2 COLLATE NOCASE)))AND(((v0.c2) IS FALSE))))AND('-1520196032')));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((0x7f3579dd)!=((((v0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((0x7f3579dd)<>((((v0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((0x7f3579dd)!=((((v0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((0x7f3579dd)<>((((v0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((0x7f3579dd)!=((((v0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((('k&v90l&g') NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((v0.c2) NOT BETWEEN (rt0.c0) AND (v0.c0))))) ORDER BY CASE WHEN v0.c2 THEN ((v0.c0) IS TRUE) END ASC  NULLS FIRST, ((((v0.c1)/(rt0.c2))) IS TRUE), HEX(DISTINCT (((v0.c0, v0.c1, v0.c0))<((0.4191201515079285, rt0.c2, v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('k&v90l&g') NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((v0.c2) NOT BETWEEN (rt0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE WHEN v0.c2 THEN ((v0.c0) IS TRUE) END ASC  NULLS FIRST, ((((v0.c1)/(rt0.c2))) IS TRUE), HEX(DISTINCT (((v0.c0, v0.c1, v0.c0))<((0.4191201515079285, rt0.c2, v0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((('k&v90l&g') NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((v0.c2) NOT BETWEEN (rt0.c0) AND (v0.c0))))) ORDER BY CASE WHEN v0.c2 THEN ((v0.c0) IS TRUE) END ASC  NULLS FIRST, ((((v0.c1)/(rt0.c2))) IS TRUE), HEX(DISTINCT (((v0.c0, v0.c1, v0.c0))<((0.4191201515079285, rt0.c2, v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('k&v90l&g') NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((v0.c2) NOT BETWEEN (rt0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE WHEN v0.c2 THEN ((v0.c0) IS TRUE) END ASC  NULLS FIRST, ((((v0.c1)/(rt0.c2))) IS TRUE), HEX(DISTINCT (((v0.c0, v0.c1, v0.c0))<((0.4191201515079285, rt0.c2, v0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((('k&v90l&g') NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((v0.c2) NOT BETWEEN (rt0.c0) AND (v0.c0))))) ORDER BY CASE WHEN v0.c2 THEN ((v0.c0) IS TRUE) END ASC  NULLS FIRST, ((((v0.c1)/(rt0.c2))) IS TRUE), HEX(DISTINCT (((v0.c0, v0.c1, v0.c0))<((0.4191201515079285, rt0.c2, v0.c0))))  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((((v0.c0)<=(v0.c0))) NOT BETWEEN ((((v0.c2)) BETWEEN ((v0.c1)) AND ((v0.c0)))) AND (CAST(v0.c1 AS TEXT)))) ORDER BY ((((CAST(v0.c1 AS TEXT))OR(x'')))OR((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c2))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)<=(v0.c0))) NOT BETWEEN ((((v0.c2)) BETWEEN ((v0.c1)) AND ((v0.c0)))) AND (CAST(v0.c1 AS TEXT)))) IS TRUE)  as count FROM v0 ORDER BY ((((CAST(v0.c1 AS TEXT))OR(x'')))OR((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c2))))) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((((v0.c0)<=(v0.c0))) NOT BETWEEN ((((v0.c2)) BETWEEN ((v0.c1)) AND ((v0.c0)))) AND (CAST(v0.c1 AS TEXT)))) ORDER BY ((((CAST(v0.c1 AS TEXT))OR(x'')))OR((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c2))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)<=(v0.c0))) NOT BETWEEN ((((v0.c2)) BETWEEN ((v0.c1)) AND ((v0.c0)))) AND (CAST(v0.c1 AS TEXT)))) IS TRUE)  as count FROM v0 ORDER BY ((((CAST(v0.c1 AS TEXT))OR(x'')))OR((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c2))))) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((((v0.c0)<=(v0.c0))) NOT BETWEEN ((((v0.c2)) BETWEEN ((v0.c1)) AND ((v0.c0)))) AND (CAST(v0.c1 AS TEXT)))) ORDER BY ((((CAST(v0.c1 AS TEXT))OR(x'')))OR((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c2))))) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE ((('0.028999561021412767') IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((('0.028999561021412767') IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((('0.028999561021412767') IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((('0.028999561021412767') IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((('0.028999561021412767') IS TRUE));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)-(v0.c0))) NOT BETWEEN (v0.c0) AND (v0.c1))) ORDER BY CAST(((0.11355250942282691)IS NOT(v0.c1)) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)-(v0.c0))) NOT BETWEEN (v0.c0) AND (v0.c1))) IS TRUE)  as count FROM v0 ORDER BY CAST(((0.11355250942282691)IS NOT(v0.c1)) AS TEXT) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)-(v0.c0))) NOT BETWEEN (v0.c0) AND (v0.c1))) ORDER BY CAST(((0.11355250942282691)IS NOT(v0.c1)) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)-(v0.c0))) NOT BETWEEN (v0.c0) AND (v0.c1))) IS TRUE)  as count FROM v0 ORDER BY CAST(((0.11355250942282691)IS NOT(v0.c1)) AS TEXT) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)-(v0.c0))) NOT BETWEEN (v0.c0) AND (v0.c1))) ORDER BY CAST(((0.11355250942282691)IS NOT(v0.c1)) AS TEXT) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((v0.c1) BETWEEN (0.1549187483165162) AND (v0.c1)) COLLATE BINARY) ORDER BY ((((v0.c1) IS TRUE))AND(v0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((((v0.c1) BETWEEN (0.1549187483165162) AND (v0.c1)) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c1) IS TRUE))AND(v0.c2 COLLATE RTRIM)));
SELECT COUNT(*) FROM v0 WHERE (((v0.c1) BETWEEN (0.1549187483165162) AND (v0.c1)) COLLATE BINARY) ORDER BY ((((v0.c1) IS TRUE))AND(v0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((((v0.c1) BETWEEN (0.1549187483165162) AND (v0.c1)) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c1) IS TRUE))AND(v0.c2 COLLATE RTRIM)));
SELECT COUNT(*) FROM v0 WHERE (((v0.c1) BETWEEN (0.1549187483165162) AND (v0.c1)) COLLATE BINARY) ORDER BY ((((v0.c1) IS TRUE))AND(v0.c2 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c1)) NOT BETWEEN ((((0.5736527355696991) NOT BETWEEN (v0.c1) AND (v0.c2)))) AND (((~ (v0.c2)))))) ORDER BY NULLIF((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))), CAST(v0.c2 AS NUMERIC)) ASC  NULLS LAST, ((('Gl*u')) NOT BETWEEN (((v0.c0 IN ()))) AND ((v0.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1)) NOT BETWEEN ((((0.5736527355696991) NOT BETWEEN (v0.c1) AND (v0.c2)))) AND (((~ (v0.c2)))))) IS TRUE)  as count FROM v0 ORDER BY NULLIF((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))), CAST(v0.c2 AS NUMERIC)) ASC  NULLS LAST, ((('Gl*u')) NOT BETWEEN (((v0.c0 IN ()))) AND ((v0.c2))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c1)) NOT BETWEEN ((((0.5736527355696991) NOT BETWEEN (v0.c1) AND (v0.c2)))) AND (((~ (v0.c2)))))) ORDER BY NULLIF((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))), CAST(v0.c2 AS NUMERIC)) ASC  NULLS LAST, ((('Gl*u')) NOT BETWEEN (((v0.c0 IN ()))) AND ((v0.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1)) NOT BETWEEN ((((0.5736527355696991) NOT BETWEEN (v0.c1) AND (v0.c2)))) AND (((~ (v0.c2)))))) IS TRUE)  as count FROM v0 ORDER BY NULLIF((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))), CAST(v0.c2 AS NUMERIC)) ASC  NULLS LAST, ((('Gl*u')) NOT BETWEEN (((v0.c0 IN ()))) AND ((v0.c2))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c1)) NOT BETWEEN ((((0.5736527355696991) NOT BETWEEN (v0.c1) AND (v0.c2)))) AND (((~ (v0.c2)))))) ORDER BY NULLIF((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))), CAST(v0.c2 AS NUMERIC)) ASC  NULLS LAST, ((('Gl*u')) NOT BETWEEN (((v0.c0 IN ()))) AND ((v0.c2))) ASC  NULLS FIRST;
SELECT * FROM v0 WHERE (((((v0.c0)<(v0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)<(v0.c2))) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0)<(v0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)<(v0.c2))) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0)<(v0.c2))) IS FALSE));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c1)LIKE(rt0.c2)))) AND (((rt0.c2 IN ()))))) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))<(rt0.c1));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((((rt0.c1)LIKE(rt0.c2)))) AND (((rt0.c2 IN ()))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))<(rt0.c1)));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c1)LIKE(rt0.c2)))) AND (((rt0.c2 IN ()))))) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))<(rt0.c1));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((((rt0.c1)LIKE(rt0.c2)))) AND (((rt0.c2 IN ()))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))<(rt0.c1)));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c1)LIKE(rt0.c2)))) AND (((rt0.c2 IN ()))))) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))<(rt0.c1));
SELECT COUNT(*) FROM v0, rt0 WHERE ((((rt0.c2) BETWEEN (rt0.c0) AND ('380875586')) IN ())) ORDER BY '3.ePg', ((((((rt0.c1)OR(rt0.c2)))AND(v0.c1)))GLOB((~ (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) BETWEEN (rt0.c0) AND ('380875586')) IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY '3.ePg', ((((((rt0.c1)OR(rt0.c2)))AND(v0.c1)))GLOB((~ (rt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((rt0.c2) BETWEEN (rt0.c0) AND ('380875586')) IN ())) ORDER BY '3.ePg', ((((((rt0.c1)OR(rt0.c2)))AND(v0.c1)))GLOB((~ (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) BETWEEN (rt0.c0) AND ('380875586')) IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY '3.ePg', ((((((rt0.c1)OR(rt0.c2)))AND(v0.c1)))GLOB((~ (rt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((rt0.c2) BETWEEN (rt0.c0) AND ('380875586')) IN ())) ORDER BY '3.ePg', ((((((rt0.c1)OR(rt0.c2)))AND(v0.c1)))GLOB((~ (rt0.c1))))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((+ (rt0.c2)), rt0.c0, ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))))<=(((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c2))), (- (rt0.c0)), ((rt0.c0)<(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((+ (rt0.c2)), rt0.c0, ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))))<=(((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c2))), (- (rt0.c0)), ((rt0.c0)<(rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((+ (rt0.c2)), rt0.c0, ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))))<=(((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c2))), (- (rt0.c0)), ((rt0.c0)<(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((+ (rt0.c2)), rt0.c0, ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))))<=(((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c2))), (- (rt0.c0)), ((rt0.c0)<(rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((+ (rt0.c2)), rt0.c0, ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))))<=(((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c2))), (- (rt0.c0)), ((rt0.c0)<(rt0.c2))))));
SELECT COUNT(*) FROM v0 WHERE (CASE ((v0.c0)>>(v0.c0))  WHEN ((v0.c1)<(v0.c2)) THEN v0.c0 END) ORDER BY CASE v0.c2  WHEN COALESCE(DISTINCT v0.c0, v0.c0) THEN CAST(v0.c1 AS REAL) WHEN UNLIKELY(DISTINCT v0.c1) THEN ((v0.c1)>=(v0.c2)) WHEN CASE WHEN v0.c2 THEN v0.c0 END THEN (NOT (v0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)>>(v0.c0))  WHEN ((v0.c1)<(v0.c2)) THEN v0.c0 END) IS TRUE)  as count FROM v0 ORDER BY CASE v0.c2  WHEN COALESCE(DISTINCT v0.c0, v0.c0) THEN CAST(v0.c1 AS REAL) WHEN UNLIKELY(DISTINCT v0.c1) THEN ((v0.c1)>=(v0.c2)) WHEN CASE WHEN v0.c2 THEN v0.c0 END THEN (NOT (v0.c0)) END ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CASE ((v0.c0)>>(v0.c0))  WHEN ((v0.c1)<(v0.c2)) THEN v0.c0 END) ORDER BY CASE v0.c2  WHEN COALESCE(DISTINCT v0.c0, v0.c0) THEN CAST(v0.c1 AS REAL) WHEN UNLIKELY(DISTINCT v0.c1) THEN ((v0.c1)>=(v0.c2)) WHEN CASE WHEN v0.c2 THEN v0.c0 END THEN (NOT (v0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)>>(v0.c0))  WHEN ((v0.c1)<(v0.c2)) THEN v0.c0 END) IS TRUE)  as count FROM v0 ORDER BY CASE v0.c2  WHEN COALESCE(DISTINCT v0.c0, v0.c0) THEN CAST(v0.c1 AS REAL) WHEN UNLIKELY(DISTINCT v0.c1) THEN ((v0.c1)>=(v0.c2)) WHEN CASE WHEN v0.c2 THEN v0.c0 END THEN (NOT (v0.c0)) END ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CASE ((v0.c0)>>(v0.c0))  WHEN ((v0.c1)<(v0.c2)) THEN v0.c0 END) ORDER BY CASE v0.c2  WHEN COALESCE(DISTINCT v0.c0, v0.c0) THEN CAST(v0.c1 AS REAL) WHEN UNLIKELY(DISTINCT v0.c1) THEN ((v0.c1)>=(v0.c2)) WHEN CASE WHEN v0.c2 THEN v0.c0 END THEN (NOT (v0.c0)) END ASC  NULLS LAST;
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON (+ (v0.c1)) WHERE (v0.c0) ORDER BY (NOT ((((rt0.c0, rt0.c2, v0.c0)) BETWEEN ((rt0.c0, v0.c2, rt0.c2)) AND ((v0.c0, v0.c2, v0.c0))))), ((((((((LIKE(rt0.c0, rt0.c1))OR(CAST(v0.c2 AS REAL))))AND(JULIANDAY(v0.c0, v0.c0, rt0.c1, v0.c2, rt0.c1))))AND(CAST(rt0.c0 AS BLOB))))AND((((v0.c1))>=((v0.c1))))), ((((v0.c2) NOT NULL))IS(NULL)) ASC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (+ (v0.c1)) ORDER BY (NOT ((((rt0.c0, rt0.c2, v0.c0)) BETWEEN ((rt0.c0, v0.c2, rt0.c2)) AND ((v0.c0, v0.c2, v0.c0))))), ((((((((LIKE(rt0.c0, rt0.c1))OR(CAST(v0.c2 AS REAL))))AND(JULIANDAY(v0.c0, v0.c0, rt0.c1, v0.c2, rt0.c1))))AND(CAST(rt0.c0 AS BLOB))))AND((((v0.c1))>=((v0.c1))))), ((((v0.c2) NOT NULL))IS(NULL)) ASC);
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON (+ (v0.c1)) WHERE (v0.c0) ORDER BY (NOT ((((rt0.c0, rt0.c2, v0.c0)) BETWEEN ((rt0.c0, v0.c2, rt0.c2)) AND ((v0.c0, v0.c2, v0.c0))))), ((((((((LIKE(rt0.c0, rt0.c1))OR(CAST(v0.c2 AS REAL))))AND(JULIANDAY(v0.c0, v0.c0, rt0.c1, v0.c2, rt0.c1))))AND(CAST(rt0.c0 AS BLOB))))AND((((v0.c1))>=((v0.c1))))), ((((v0.c2) NOT NULL))IS(NULL)) ASC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (+ (v0.c1)) ORDER BY (NOT ((((rt0.c0, rt0.c2, v0.c0)) BETWEEN ((rt0.c0, v0.c2, rt0.c2)) AND ((v0.c0, v0.c2, v0.c0))))), ((((((((LIKE(rt0.c0, rt0.c1))OR(CAST(v0.c2 AS REAL))))AND(JULIANDAY(v0.c0, v0.c0, rt0.c1, v0.c2, rt0.c1))))AND(CAST(rt0.c0 AS BLOB))))AND((((v0.c1))>=((v0.c1))))), ((((v0.c2) NOT NULL))IS(NULL)) ASC);
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON (+ (v0.c1)) WHERE (v0.c0) ORDER BY (NOT ((((rt0.c0, rt0.c2, v0.c0)) BETWEEN ((rt0.c0, v0.c2, rt0.c2)) AND ((v0.c0, v0.c2, v0.c0))))), ((((((((LIKE(rt0.c0, rt0.c1))OR(CAST(v0.c2 AS REAL))))AND(JULIANDAY(v0.c0, v0.c0, rt0.c1, v0.c2, rt0.c1))))AND(CAST(rt0.c0 AS BLOB))))AND((((v0.c1))>=((v0.c1))))), ((((v0.c2) NOT NULL))IS(NULL)) ASC;
SELECT COUNT(*) FROM v0 WHERE (v0.c1) ORDER BY (((v0.c2)OR(v0.c2)) IN ()) ASC  NULLS LAST, (NOT (v0.c2 COLLATE RTRIM)) ASC  NULLS LAST, IFNULL(((v0.c1) IS TRUE), ((v0.c0)-(v0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0 ORDER BY (((v0.c2)OR(v0.c2)) IN ()) ASC  NULLS LAST, (NOT (v0.c2 COLLATE RTRIM)) ASC  NULLS LAST, IFNULL(((v0.c1) IS TRUE), ((v0.c0)-(v0.c2))) DESC);
SELECT COUNT(*) FROM v0 WHERE (v0.c1) ORDER BY (((v0.c2)OR(v0.c2)) IN ()) ASC  NULLS LAST, (NOT (v0.c2 COLLATE RTRIM)) ASC  NULLS LAST, IFNULL(((v0.c1) IS TRUE), ((v0.c0)-(v0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0 ORDER BY (((v0.c2)OR(v0.c2)) IN ()) ASC  NULLS LAST, (NOT (v0.c2 COLLATE RTRIM)) ASC  NULLS LAST, IFNULL(((v0.c1) IS TRUE), ((v0.c0)-(v0.c2))) DESC);
SELECT COUNT(*) FROM v0 WHERE (v0.c1) ORDER BY (((v0.c2)OR(v0.c2)) IN ()) ASC  NULLS LAST, (NOT (v0.c2 COLLATE RTRIM)) ASC  NULLS LAST, IFNULL(((v0.c1) IS TRUE), ((v0.c0)-(v0.c2))) DESC;
SELECT ALL * FROM v0, rt0 WHERE ((((('-2108585823') NOT BETWEEN (v0.c0) AND (NULL))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((('-2108585823') NOT BETWEEN (v0.c0) AND (NULL))) IS TRUE)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((('-2108585823') NOT BETWEEN (v0.c0) AND (NULL))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((('-2108585823') NOT BETWEEN (v0.c0) AND (NULL))) IS TRUE)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((('-2108585823') NOT BETWEEN (v0.c0) AND (NULL))) IS TRUE));
SELECT * FROM v0 WHERE (NULL) ORDER BY (((v0.c0)>=(v0.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)>=(v0.c1)) IN ())  NULLS LAST);
SELECT * FROM v0 WHERE (NULL) ORDER BY (((v0.c0)>=(v0.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)>=(v0.c1)) IN ())  NULLS LAST);
SELECT * FROM v0 WHERE (NULL) ORDER BY (((v0.c0)>=(v0.c1)) IN ())  NULLS LAST;
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c0 WHERE (((rt0.c1)>>(v0.c0)) COLLATE BINARY) ORDER BY ((CAST(rt0.c2 AS REAL)) BETWEEN ((NOT (v0.c2))) AND (CASE WHEN rt0.c1 THEN v0.c2 ELSE rt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)>>(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c0 ORDER BY ((CAST(rt0.c2 AS REAL)) BETWEEN ((NOT (v0.c2))) AND (CASE WHEN rt0.c1 THEN v0.c2 ELSE rt0.c0 END))  NULLS LAST);
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c0 WHERE (((rt0.c1)>>(v0.c0)) COLLATE BINARY) ORDER BY ((CAST(rt0.c2 AS REAL)) BETWEEN ((NOT (v0.c2))) AND (CASE WHEN rt0.c1 THEN v0.c2 ELSE rt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)>>(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c0 ORDER BY ((CAST(rt0.c2 AS REAL)) BETWEEN ((NOT (v0.c2))) AND (CASE WHEN rt0.c1 THEN v0.c2 ELSE rt0.c0 END))  NULLS LAST);
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c0 WHERE (((rt0.c1)>>(v0.c0)) COLLATE BINARY) ORDER BY ((CAST(rt0.c2 AS REAL)) BETWEEN ((NOT (v0.c2))) AND (CASE WHEN rt0.c1 THEN v0.c2 ELSE rt0.c0 END))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((rt0.c1) NOT BETWEEN ((((rt0.c0, v0.c2, v0.c1))>=((v0.c2, v0.c2, rt0.c0)))) AND (((v0.c1) NOT BETWEEN (rt0.c0) AND (v0.c1))))) ORDER BY CASE WHEN v0.c1 COLLATE RTRIM THEN x'' END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOT BETWEEN ((((rt0.c0, v0.c2, v0.c1))>=((v0.c2, v0.c2, rt0.c0)))) AND (((v0.c1) NOT BETWEEN (rt0.c0) AND (v0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE WHEN v0.c1 COLLATE RTRIM THEN x'' END  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((rt0.c1) NOT BETWEEN ((((rt0.c0, v0.c2, v0.c1))>=((v0.c2, v0.c2, rt0.c0)))) AND (((v0.c1) NOT BETWEEN (rt0.c0) AND (v0.c1))))) ORDER BY CASE WHEN v0.c1 COLLATE RTRIM THEN x'' END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOT BETWEEN ((((rt0.c0, v0.c2, v0.c1))>=((v0.c2, v0.c2, rt0.c0)))) AND (((v0.c1) NOT BETWEEN (rt0.c0) AND (v0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE WHEN v0.c1 COLLATE RTRIM THEN x'' END  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((rt0.c1) NOT BETWEEN ((((rt0.c0, v0.c2, v0.c1))>=((v0.c2, v0.c2, rt0.c0)))) AND (((v0.c1) NOT BETWEEN (rt0.c0) AND (v0.c1))))) ORDER BY CASE WHEN v0.c1 COLLATE RTRIM THEN x'' END  NULLS FIRST;
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON ((((v0.c0)LIKE(v0.c1)))IS((v0.c1 IN (v0.c1)))) WHERE ('\緔hg]&V');
SELECT SUM(count) FROM (SELECT (('\緔hg]&V') IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON ((((v0.c0)LIKE(v0.c1)))IS((v0.c1 IN (v0.c1)))));
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON ((((v0.c0)LIKE(v0.c1)))IS((v0.c1 IN (v0.c1)))) WHERE ('\緔hg]&V');
SELECT SUM(count) FROM (SELECT (('\緔hg]&V') IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON ((((v0.c0)LIKE(v0.c1)))IS((v0.c1 IN (v0.c1)))));
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON ((((v0.c0)LIKE(v0.c1)))IS((v0.c1 IN (v0.c1)))) WHERE ('\緔hg]&V');
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON (((v0.c1 IN ())) IS TRUE) WHERE (NULL) ORDER BY ((((v0.c0)AND(CAST(v0.c1 AS INTEGER))))OR(CAST(rt0.c2 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (((v0.c1 IN ())) IS TRUE) ORDER BY ((((v0.c0)AND(CAST(v0.c1 AS INTEGER))))OR(CAST(rt0.c2 AS BLOB))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON (((v0.c1 IN ())) IS TRUE) WHERE (NULL) ORDER BY ((((v0.c0)AND(CAST(v0.c1 AS INTEGER))))OR(CAST(rt0.c2 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (((v0.c1 IN ())) IS TRUE) ORDER BY ((((v0.c0)AND(CAST(v0.c1 AS INTEGER))))OR(CAST(rt0.c2 AS BLOB))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON (((v0.c1 IN ())) IS TRUE) WHERE (NULL) ORDER BY ((((v0.c0)AND(CAST(v0.c1 AS INTEGER))))OR(CAST(rt0.c2 AS BLOB)));
SELECT * FROM v0, rt0 WHERE ((((v0.c0, v0.c2, v0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((((((v0.c1)OR(rt0.c0)))OR(rt0.c2)), v0.c0 COLLATE NOCASE, ((((rt0.c2)OR(v0.c2)))AND(v0.c1)), ((rt0.c0) IS FALSE), CASE WHEN rt0.c2 THEN v0.c0 ELSE v0.c2 END)) AND ((CASE v0.c1  WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END, (rt0.c0 IN ()), (rt0.c2 IN ()), ((v0.c2)>(rt0.c0)), ((rt0.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c2, v0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((((((v0.c1)OR(rt0.c0)))OR(rt0.c2)), v0.c0 COLLATE NOCASE, ((((rt0.c2)OR(v0.c2)))AND(v0.c1)), ((rt0.c0) IS FALSE), CASE WHEN rt0.c2 THEN v0.c0 ELSE v0.c2 END)) AND ((CASE v0.c1  WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END, (rt0.c0 IN ()), (rt0.c2 IN ()), ((v0.c2)>(rt0.c0)), ((rt0.c0) IS TRUE))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((v0.c0, v0.c2, v0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((((((v0.c1)OR(rt0.c0)))OR(rt0.c2)), v0.c0 COLLATE NOCASE, ((((rt0.c2)OR(v0.c2)))AND(v0.c1)), ((rt0.c0) IS FALSE), CASE WHEN rt0.c2 THEN v0.c0 ELSE v0.c2 END)) AND ((CASE v0.c1  WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END, (rt0.c0 IN ()), (rt0.c2 IN ()), ((v0.c2)>(rt0.c0)), ((rt0.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c2, v0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((((((v0.c1)OR(rt0.c0)))OR(rt0.c2)), v0.c0 COLLATE NOCASE, ((((rt0.c2)OR(v0.c2)))AND(v0.c1)), ((rt0.c0) IS FALSE), CASE WHEN rt0.c2 THEN v0.c0 ELSE v0.c2 END)) AND ((CASE v0.c1  WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END, (rt0.c0 IN ()), (rt0.c2 IN ()), ((v0.c2)>(rt0.c0)), ((rt0.c0) IS TRUE))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((v0.c0, v0.c2, v0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((((((v0.c1)OR(rt0.c0)))OR(rt0.c2)), v0.c0 COLLATE NOCASE, ((((rt0.c2)OR(v0.c2)))AND(v0.c1)), ((rt0.c0) IS FALSE), CASE WHEN rt0.c2 THEN v0.c0 ELSE v0.c2 END)) AND ((CASE v0.c1  WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END, (rt0.c0 IN ()), (rt0.c2 IN ()), ((v0.c2)>(rt0.c0)), ((rt0.c0) IS TRUE)))));
SELECT * FROM v0 WHERE (CASE WHEN (v0.c2 IN ()) THEN ((v0.c1)+(v0.c2)) WHEN ((v0.c0)||(v0.c2)) THEN ((v0.c2)/(v0.c2)) WHEN TYPEOF(DISTINCT v0.c1) THEN (+ (v0.c0)) ELSE ((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c0)) END) ORDER BY v0.c1;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (v0.c2 IN ()) THEN ((v0.c1)+(v0.c2)) WHEN ((v0.c0)||(v0.c2)) THEN ((v0.c2)/(v0.c2)) WHEN TYPEOF(DISTINCT v0.c1) THEN (+ (v0.c0)) ELSE ((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY v0.c1);
SELECT * FROM v0 WHERE (CASE WHEN (v0.c2 IN ()) THEN ((v0.c1)+(v0.c2)) WHEN ((v0.c0)||(v0.c2)) THEN ((v0.c2)/(v0.c2)) WHEN TYPEOF(DISTINCT v0.c1) THEN (+ (v0.c0)) ELSE ((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c0)) END) ORDER BY v0.c1;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (v0.c2 IN ()) THEN ((v0.c1)+(v0.c2)) WHEN ((v0.c0)||(v0.c2)) THEN ((v0.c2)/(v0.c2)) WHEN TYPEOF(DISTINCT v0.c1) THEN (+ (v0.c0)) ELSE ((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY v0.c1);
SELECT * FROM v0 WHERE (CASE WHEN (v0.c2 IN ()) THEN ((v0.c1)+(v0.c2)) WHEN ((v0.c0)||(v0.c2)) THEN ((v0.c2)/(v0.c2)) WHEN TYPEOF(DISTINCT v0.c1) THEN (+ (v0.c0)) ELSE ((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c0)) END) ORDER BY v0.c1;
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (((v0.c0)) BETWEEN ((CASE v0.c2  WHEN v0.c0 THEN v0.c1 ELSE v0.c1 END)) AND ((((v0.c0)/(v0.c0))))) WHERE (((((((rt0.c0)IS NOT(rt0.c2)))AND((v0.c1 IN ()))))AND(v0.c1))) ORDER BY v0.c2 ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)IS NOT(rt0.c2)))AND((v0.c1 IN ()))))AND(v0.c1))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((v0.c0)) BETWEEN ((CASE v0.c2  WHEN v0.c0 THEN v0.c1 ELSE v0.c1 END)) AND ((((v0.c0)/(v0.c0))))) ORDER BY v0.c2 ASC);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (((v0.c0)) BETWEEN ((CASE v0.c2  WHEN v0.c0 THEN v0.c1 ELSE v0.c1 END)) AND ((((v0.c0)/(v0.c0))))) WHERE (((((((rt0.c0)IS NOT(rt0.c2)))AND((v0.c1 IN ()))))AND(v0.c1))) ORDER BY v0.c2 ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)IS NOT(rt0.c2)))AND((v0.c1 IN ()))))AND(v0.c1))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((v0.c0)) BETWEEN ((CASE v0.c2  WHEN v0.c0 THEN v0.c1 ELSE v0.c1 END)) AND ((((v0.c0)/(v0.c0))))) ORDER BY v0.c2 ASC);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (((v0.c0)) BETWEEN ((CASE v0.c2  WHEN v0.c0 THEN v0.c1 ELSE v0.c1 END)) AND ((((v0.c0)/(v0.c0))))) WHERE (((((((rt0.c0)IS NOT(rt0.c2)))AND((v0.c1 IN ()))))AND(v0.c1))) ORDER BY v0.c2 ASC;
SELECT ALL * FROM v0, rt0 WHERE (LIKELY(v0.c1 COLLATE NOCASE)) ORDER BY (+ (rt0.c2 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((LIKELY(v0.c1 COLLATE NOCASE)) IS TRUE)  as count FROM v0, rt0 ORDER BY (+ (rt0.c2 COLLATE RTRIM)) ASC);
SELECT ALL * FROM v0, rt0 WHERE (LIKELY(v0.c1 COLLATE NOCASE)) ORDER BY (+ (rt0.c2 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((LIKELY(v0.c1 COLLATE NOCASE)) IS TRUE)  as count FROM v0, rt0 ORDER BY (+ (rt0.c2 COLLATE RTRIM)) ASC);
SELECT ALL * FROM v0, rt0 WHERE (LIKELY(v0.c1 COLLATE NOCASE)) ORDER BY (+ (rt0.c2 COLLATE RTRIM)) ASC;
SELECT * FROM v0, rt0 WHERE (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c1 DESC  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c1 DESC  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ())) NOTNULL));
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON ((json_array_length(v0.c2, rt0.c0))IS NOT(v0.c2)) WHERE ((((((v0.c2)IS(0.06453372105371169))))==((((((((((v0.c0)AND(v0.c0)))AND(v0.c1)))OR(v0.c0)))OR(rt0.c2)))))) ORDER BY v0.c2 ASC;
SELECT SUM(count) FROM (SELECT (((((((v0.c2)IS(0.06453372105371169))))=((((((((((v0.c0)AND(v0.c0)))AND(v0.c1)))OR(v0.c0)))OR(rt0.c2)))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((json_array_length(v0.c2, rt0.c0))IS NOT(v0.c2)) ORDER BY v0.c2 ASC);
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON ((json_array_length(v0.c2, rt0.c0))IS NOT(v0.c2)) WHERE ((((((v0.c2)IS(0.06453372105371169))))==((((((((((v0.c0)AND(v0.c0)))AND(v0.c1)))OR(v0.c0)))OR(rt0.c2)))))) ORDER BY v0.c2 ASC;
SELECT SUM(count) FROM (SELECT (((((((v0.c2)IS(0.06453372105371169))))=((((((((((v0.c0)AND(v0.c0)))AND(v0.c1)))OR(v0.c0)))OR(rt0.c2)))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((json_array_length(v0.c2, rt0.c0))IS NOT(v0.c2)) ORDER BY v0.c2 ASC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)||(rt0.c2)))||(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) ORDER BY rt0.c2 COLLATE NOCASE  NULLS FIRST, (((rt0.c0))>=((((0X2380a2c2) BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)||(rt0.c2)))||(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 COLLATE NOCASE  NULLS FIRST, (((rt0.c0))>=((((0x2380a2c2) BETWEEN (rt0.c2) AND (rt0.c2))))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)||(rt0.c2)))||(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) ORDER BY rt0.c2 COLLATE NOCASE  NULLS FIRST, (((rt0.c0))>=((((0X2380a2c2) BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)||(rt0.c2)))||(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 COLLATE NOCASE  NULLS FIRST, (((rt0.c0))>=((((0x2380a2c2) BETWEEN (rt0.c2) AND (rt0.c2))))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)||(rt0.c2)))||(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) ORDER BY rt0.c2 COLLATE NOCASE  NULLS FIRST, (((rt0.c0))>=((((0X2380a2c2) BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT ALL * FROM rt0 WHERE (UNLIKELY(NULL));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (UNLIKELY(NULL));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (UNLIKELY(NULL));
SELECT ALL * FROM rt0, v0 WHERE (TRIM(v0.c0) COLLATE NOCASE) ORDER BY ((0x20d28d2c) NOT NULL);
SELECT SUM(count) FROM (SELECT ((TRIM(v0.c0) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0 ORDER BY ((0X20d28d2c) NOT NULL));
SELECT ALL * FROM rt0, v0 WHERE (TRIM(v0.c0) COLLATE NOCASE) ORDER BY ((0x20d28d2c) NOT NULL);
SELECT SUM(count) FROM (SELECT ((TRIM(v0.c0) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0 ORDER BY ((0X20d28d2c) NOT NULL));
SELECT ALL * FROM rt0, v0 WHERE (TRIM(v0.c0) COLLATE NOCASE) ORDER BY ((0x20d28d2c) NOT NULL);
SELECT ALL COUNT(*) FROM v0 WHERE (CHAR(CASE WHEN '*ZLZDyW쒬' THEN x'b692' WHEN 0.1628672351031032 THEN v0.c2 WHEN v0.c2 THEN NULL ELSE v0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((CHAR(CASE WHEN '*ZLZDyW쒬' THEN x'b692' WHEN 0.1628672351031032 THEN v0.c2 WHEN v0.c2 THEN NULL ELSE v0.c0 END)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CHAR(CASE WHEN '*ZLZDyW쒬' THEN x'b692' WHEN 0.1628672351031032 THEN v0.c2 WHEN v0.c2 THEN NULL ELSE v0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((CHAR(CASE WHEN '*ZLZDyW쒬' THEN x'b692' WHEN 0.1628672351031032 THEN v0.c2 WHEN v0.c2 THEN NULL ELSE v0.c0 END)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CHAR(CASE WHEN '*ZLZDyW쒬' THEN x'b692' WHEN 0.1628672351031032 THEN v0.c2 WHEN v0.c2 THEN NULL ELSE v0.c0 END));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0 IN ())))<((((v0.c1)|(v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0 IN ())))<((((v0.c1)|(v0.c2)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0 IN ())))<((((v0.c1)|(v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0 IN ())))<((((v0.c1)|(v0.c2)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0 IN ())))<((((v0.c1)|(v0.c2))))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (v0.c2) ORDER BY CAST(v0.c0 AS BLOB) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(v0.c0 AS BLOB) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (v0.c2) ORDER BY CAST(v0.c0 AS BLOB) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(v0.c0 AS BLOB) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (v0.c2) ORDER BY CAST(v0.c0 AS BLOB) COLLATE NOCASE ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c2)) BETWEEN ((((((v0.c2)OR(v0.c1)))OR(v0.c1)))) AND (('-983435879'))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)) BETWEEN ((((((v0.c2)OR(v0.c1)))OR(v0.c1)))) AND (('-983435879')))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c2)) BETWEEN ((((((v0.c2)OR(v0.c1)))OR(v0.c1)))) AND (('-983435879'))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)) BETWEEN ((((((v0.c2)OR(v0.c1)))OR(v0.c1)))) AND (('-983435879')))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c2)) BETWEEN ((((((v0.c2)OR(v0.c1)))OR(v0.c1)))) AND (('-983435879'))));
SELECT ALL COUNT(*) FROM v0 WHERE ((NULLIF(x'', v0.c1) IN ())) ORDER BY ((((v0.c0) IS TRUE))<<((+ (v0.c2))));
SELECT SUM(count) FROM (SELECT (((NULLIF(x'', v0.c1) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) IS TRUE))<<((+ (v0.c2)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((NULLIF(x'', v0.c1) IN ())) ORDER BY ((((v0.c0) IS TRUE))<<((+ (v0.c2))));
SELECT SUM(count) FROM (SELECT (((NULLIF(x'', v0.c1) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) IS TRUE))<<((+ (v0.c2)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((NULLIF(x'', v0.c1) IN ())) ORDER BY ((((v0.c0) IS TRUE))<<((+ (v0.c2))));
SELECT ALL * FROM v0, rt0 WHERE (0.8042712891258539);
SELECT SUM(count) FROM (SELECT ((0.8042712891258539) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (0.8042712891258539);
SELECT SUM(count) FROM (SELECT ((0.8042712891258539) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (0.8042712891258539);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c2)OR((+ (v0.c1)))))OR(TRIM(DISTINCT v0.c1, 5.41288391E8))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)OR((+ (v0.c1)))))OR(TRIM(DISTINCT v0.c1, 5.41288391E8)))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c2)OR((+ (v0.c1)))))OR(TRIM(DISTINCT v0.c1, 5.41288391E8))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)OR((+ (v0.c1)))))OR(TRIM(DISTINCT v0.c1, 5.41288391E8)))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c2)OR((+ (v0.c1)))))OR(TRIM(DISTINCT v0.c1, 5.41288391E8))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((IFNULL(rt0.c2, '-282671582')))<=((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END)))) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((IFNULL(rt0.c2, '-282671582')))<=((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END)))) IS TRUE)  as count FROM rt0 ORDER BY NULL ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((IFNULL(rt0.c2, '-282671582')))<=((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END)))) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((IFNULL(rt0.c2, '-282671582')))<=((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END)))) IS TRUE)  as count FROM rt0 ORDER BY NULL ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((IFNULL(rt0.c2, '-282671582')))<=((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END)))) ORDER BY NULL ASC  NULLS LAST;
SELECT ALL * FROM rt0, v0 WHERE (CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN ((v0.c2)LIKE(v0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN ((v0.c2)LIKE(v0.c1)) END) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN ((v0.c2)LIKE(v0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN ((v0.c2)LIKE(v0.c1)) END) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN ((v0.c2)LIKE(v0.c1)) END);
SELECT ALL * FROM v0, rt0 WHERE (((((v0.c2) NOTNULL))==(NULL))) ORDER BY rt0.c2, (((rt0.c1 IN ())) ISNULL) ASC, CAST(rt0.c1 AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c2) NOTNULL))=(NULL))) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c2, (((rt0.c1 IN ())) ISNULL) ASC, CAST(rt0.c1 AS REAL) DESC);
SELECT ALL * FROM v0, rt0 WHERE (((((v0.c2) NOTNULL))==(NULL))) ORDER BY rt0.c2, (((rt0.c1 IN ())) ISNULL) ASC, CAST(rt0.c1 AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c2) NOTNULL))=(NULL))) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c2, (((rt0.c1 IN ())) ISNULL) ASC, CAST(rt0.c1 AS REAL) DESC);
SELECT ALL * FROM v0, rt0 WHERE (((((v0.c2) NOTNULL))==(NULL))) ORDER BY rt0.c2, (((rt0.c1 IN ())) ISNULL) ASC, CAST(rt0.c1 AS REAL) DESC;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((IFNULL(DISTINCT rt0.c0, rt0.c1))GLOB(NULLIF(rt0.c1, v0.c0)))) ORDER BY ((((rt0.c1 COLLATE BINARY)OR(rt0.c0)))AND(((((v0.c0)OR(v0.c2)))OR(NULL)))), ((((rt0.c1)>>(rt0.c1)))GLOB(LOWER(v0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((IFNULL(DISTINCT rt0.c0, rt0.c1))GLOB(NULLIF(rt0.c1, v0.c0)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c1 COLLATE BINARY)OR(rt0.c0)))AND(((((v0.c0)OR(v0.c2)))OR(NULL)))), ((((rt0.c1)>>(rt0.c1)))GLOB(LOWER(v0.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((IFNULL(DISTINCT rt0.c0, rt0.c1))GLOB(NULLIF(rt0.c1, v0.c0)))) ORDER BY ((((rt0.c1 COLLATE BINARY)OR(rt0.c0)))AND(((((v0.c0)OR(v0.c2)))OR(NULL)))), ((((rt0.c1)>>(rt0.c1)))GLOB(LOWER(v0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((IFNULL(DISTINCT rt0.c0, rt0.c1))GLOB(NULLIF(rt0.c1, v0.c0)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c1 COLLATE BINARY)OR(rt0.c0)))AND(((((v0.c0)OR(v0.c2)))OR(NULL)))), ((((rt0.c1)>>(rt0.c1)))GLOB(LOWER(v0.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((IFNULL(DISTINCT rt0.c0, rt0.c1))GLOB(NULLIF(rt0.c1, v0.c0)))) ORDER BY ((((rt0.c1 COLLATE BINARY)OR(rt0.c0)))AND(((((v0.c0)OR(v0.c2)))OR(NULL)))), ((((rt0.c1)>>(rt0.c1)))GLOB(LOWER(v0.c0)))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON (((((v0.c0 IN ()))OR((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))))))OR(((v0.c1) BETWEEN (rt0.c1) AND (v0.c1)))) WHERE (((((((((rt0.c1)OR(v0.c1)))OR(v0.c0)))OR(x'')))OR('-1359518637')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c1)OR(v0.c1)))OR(v0.c0)))OR(x'')))OR('-1359518637')) COLLATE NOCASE) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (((((v0.c0 IN ()))OR((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))))))OR(((v0.c1) BETWEEN (rt0.c1) AND (v0.c1)))));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON (((((v0.c0 IN ()))OR((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))))))OR(((v0.c1) BETWEEN (rt0.c1) AND (v0.c1)))) WHERE (((((((((rt0.c1)OR(v0.c1)))OR(v0.c0)))OR(x'')))OR('-1359518637')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c1)OR(v0.c1)))OR(v0.c0)))OR(x'')))OR('-1359518637')) COLLATE NOCASE) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (((((v0.c0 IN ()))OR((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))))))OR(((v0.c1) BETWEEN (rt0.c1) AND (v0.c1)))));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON (((((v0.c0 IN ()))OR((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))))))OR(((v0.c1) BETWEEN (rt0.c1) AND (v0.c1)))) WHERE (((((((((rt0.c1)OR(v0.c1)))OR(v0.c0)))OR(x'')))OR('-1359518637')) COLLATE NOCASE);
SELECT ALL * FROM v0, rt0 WHERE (((((+ (v0.c1))))=((rt0.c1 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ((((((+ (v0.c1))))=((rt0.c1 COLLATE BINARY)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((+ (v0.c1))))=((rt0.c1 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ((((((+ (v0.c1))))=((rt0.c1 COLLATE BINARY)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((+ (v0.c1))))=((rt0.c1 COLLATE BINARY))));
SELECT COUNT(*) FROM v0, rt0 WHERE ((TRIM(v0.c1, rt0.c2) IN ())) ORDER BY ((((rt0.c1)<(v0.c1)))|(CAST(NULL AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((TRIM(v0.c1, rt0.c2) IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c1)<(v0.c1)))|(CAST(NULL AS INTEGER)))  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE ((TRIM(v0.c1, rt0.c2) IN ())) ORDER BY ((((rt0.c1)<(v0.c1)))|(CAST(NULL AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((TRIM(v0.c1, rt0.c2) IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c1)<(v0.c1)))|(CAST(NULL AS INTEGER)))  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE ((TRIM(v0.c1, rt0.c2) IN ())) ORDER BY ((((rt0.c1)<(v0.c1)))|(CAST(NULL AS INTEGER)))  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((CAST(v0.c2 AS TEXT))==(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c2)))OR(v0.c0))))) ORDER BY v0.c2;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c2 AS TEXT))=(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c2)))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY v0.c2);
SELECT ALL * FROM v0 WHERE (((CAST(v0.c2 AS TEXT))==(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c2)))OR(v0.c0))))) ORDER BY v0.c2;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c2 AS TEXT))=(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c2)))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY v0.c2);
SELECT ALL * FROM v0 WHERE (((CAST(v0.c2 AS TEXT))==(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c2)))OR(v0.c0))))) ORDER BY v0.c2;
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((v0.c1 COLLATE NOCASE) ISNULL);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((v0.c1 COLLATE NOCASE) ISNULL));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((v0.c1 COLLATE NOCASE) ISNULL);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((v0.c1 COLLATE NOCASE) ISNULL));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((v0.c1 COLLATE NOCASE) ISNULL);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (rt0.c0) ORDER BY CASE WHEN v0.c0 THEN rt0.c0 WHEN v0.c1 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 ELSE v0.c1 END COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN v0.c0 THEN rt0.c0 WHEN v0.c1 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 ELSE v0.c1 END COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (rt0.c0) ORDER BY CASE WHEN v0.c0 THEN rt0.c0 WHEN v0.c1 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 ELSE v0.c1 END COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN v0.c0 THEN rt0.c0 WHEN v0.c1 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 ELSE v0.c1 END COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (rt0.c0) ORDER BY CASE WHEN v0.c0 THEN rt0.c0 WHEN v0.c1 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 ELSE v0.c1 END COLLATE NOCASE DESC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((CASE WHEN v0.c1 THEN v0.c2 END) NOT NULL) ASC, (STRFTIME(0x676ca90e, v0.c1, v0.c1) IN ())  NULLS LAST, (((((NULL))>((v0.c0))))==(CAST(v0.c2 AS REAL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN v0.c1 THEN v0.c2 END) NOT NULL) ASC, (STRFTIME(0x676ca90e, v0.c1, v0.c1) IN ())  NULLS LAST, (((((NULL))>((v0.c0))))=(CAST(v0.c2 AS REAL))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((CASE WHEN v0.c1 THEN v0.c2 END) NOT NULL) ASC, (STRFTIME(0x676ca90e, v0.c1, v0.c1) IN ())  NULLS LAST, (((((NULL))>((v0.c0))))==(CAST(v0.c2 AS REAL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN v0.c1 THEN v0.c2 END) NOT NULL) ASC, (STRFTIME(0x676ca90e, v0.c1, v0.c1) IN ())  NULLS LAST, (((((NULL))>((v0.c0))))=(CAST(v0.c2 AS REAL))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((CASE WHEN v0.c1 THEN v0.c2 END) NOT NULL) ASC, (STRFTIME(0x676ca90e, v0.c1, v0.c1) IN ())  NULLS LAST, (((((NULL))>((v0.c0))))==(CAST(v0.c2 AS REAL))) ASC  NULLS LAST;
SELECT * FROM v0 WHERE (NULL) ORDER BY (+ (v0.c2 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 ORDER BY (+ (v0.c2 COLLATE BINARY))  NULLS FIRST);
SELECT * FROM v0 WHERE (NULL) ORDER BY (+ (v0.c2 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 ORDER BY (+ (v0.c2 COLLATE BINARY))  NULLS FIRST);
SELECT * FROM v0 WHERE (NULL) ORDER BY (+ (v0.c2 COLLATE BINARY))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT)) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS TEXT)) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT)) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS TEXT)) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT)) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (rt0.c0)));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON (NOT (((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c1)))) WHERE (CAST((((0.2755694661653838, rt0.c2, v0.c2)) BETWEEN ((' U', v0.c1, v0.c2)) AND ((v0.c2, rt0.c0, rt0.c2))) AS BLOB)) ORDER BY (((NULL)) NOT BETWEEN (('쇎d/')) AND ((v0.c0 COLLATE RTRIM))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((0.2755694661653838, rt0.c2, v0.c2)) BETWEEN ((' U', v0.c1, v0.c2)) AND ((v0.c2, rt0.c0, rt0.c2))) AS BLOB)) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (NOT (((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c1)))) ORDER BY (((NULL)) NOT BETWEEN (('쇎d/')) AND ((v0.c0 COLLATE RTRIM))) ASC);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON (NOT (((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c1)))) WHERE (CAST((((0.2755694661653838, rt0.c2, v0.c2)) BETWEEN ((' U', v0.c1, v0.c2)) AND ((v0.c2, rt0.c0, rt0.c2))) AS BLOB)) ORDER BY (((NULL)) NOT BETWEEN (('쇎d/')) AND ((v0.c0 COLLATE RTRIM))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((0.2755694661653838, rt0.c2, v0.c2)) BETWEEN ((' U', v0.c1, v0.c2)) AND ((v0.c2, rt0.c0, rt0.c2))) AS BLOB)) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (NOT (((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c1)))) ORDER BY (((NULL)) NOT BETWEEN (('쇎d/')) AND ((v0.c0 COLLATE RTRIM))) ASC);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON (NOT (((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c1)))) WHERE (CAST((((0.2755694661653838, rt0.c2, v0.c2)) BETWEEN ((' U', v0.c1, v0.c2)) AND ((v0.c2, rt0.c0, rt0.c2))) AS BLOB)) ORDER BY (((NULL)) NOT BETWEEN (('쇎d/')) AND ((v0.c0 COLLATE RTRIM))) ASC;
SELECT * FROM rt0, v0 WHERE ((rt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((rt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((rt0.c0 IN ()));
SELECT * FROM rt0 WHERE (x'2fdf');
SELECT SUM(count) FROM (SELECT ((x'2fdf') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (x'2fdf');
SELECT SUM(count) FROM (SELECT ((x'2fdf') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (x'2fdf');
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1)>(0x74552463)));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)>(0x74552463))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1)>(0x74552463)));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)>(0x74552463))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1)>(0x74552463)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ ((((rt0.c0, rt0.c2, x'')) BETWEEN ((0.3619231489663659, rt0.c2, rt0.c2)) AND ((rt0.c2, rt0.c0, 0xffffffffcbc1167f)))))) ORDER BY -934648136 DESC;
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c0, rt0.c2, x'')) BETWEEN ((0.3619231489663659, rt0.c2, rt0.c2)) AND ((rt0.c2, rt0.c0, 0xffffffffcbc1167f)))))) IS TRUE)  as count FROM rt0 ORDER BY -934648136 DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ ((((rt0.c0, rt0.c2, x'')) BETWEEN ((0.3619231489663659, rt0.c2, rt0.c2)) AND ((rt0.c2, rt0.c0, 0xffffffffcbc1167f)))))) ORDER BY -934648136 DESC;
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c0, rt0.c2, x'')) BETWEEN ((0.3619231489663659, rt0.c2, rt0.c2)) AND ((rt0.c2, rt0.c0, 0xffffffffcbc1167f)))))) IS TRUE)  as count FROM rt0 ORDER BY -934648136 DESC);
SELECT * FROM rt0, v0 WHERE (((CASE v0.c2  WHEN v0.c1 THEN rt0.c1 WHEN rt0.c0 THEN '' WHEN v0.c2 THEN v0.c0 ELSE v0.c1 END)=(CASE rt0.c2  WHEN v0.c1 THEN rt0.c1 END))) ORDER BY ((v0.c0)GLOB(rt0.c0)) COLLATE RTRIM  NULLS LAST, CAST(CASE rt0.c0  WHEN v0.c0 THEN v0.c2 END AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c2  WHEN v0.c1 THEN rt0.c1 WHEN rt0.c0 THEN '' WHEN v0.c2 THEN v0.c0 ELSE v0.c1 END)==(CASE rt0.c2  WHEN v0.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, v0 NOT INDEXED ORDER BY ((v0.c0)GLOB(rt0.c0)) COLLATE RTRIM  NULLS LAST, CAST(CASE rt0.c0  WHEN v0.c0 THEN v0.c2 END AS NUMERIC)  NULLS LAST);
SELECT * FROM rt0, v0 WHERE (((CASE v0.c2  WHEN v0.c1 THEN rt0.c1 WHEN rt0.c0 THEN '' WHEN v0.c2 THEN v0.c0 ELSE v0.c1 END)=(CASE rt0.c2  WHEN v0.c1 THEN rt0.c1 END))) ORDER BY ((v0.c0)GLOB(rt0.c0)) COLLATE RTRIM  NULLS LAST, CAST(CASE rt0.c0  WHEN v0.c0 THEN v0.c2 END AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c2  WHEN v0.c1 THEN rt0.c1 WHEN rt0.c0 THEN '' WHEN v0.c2 THEN v0.c0 ELSE v0.c1 END)==(CASE rt0.c2  WHEN v0.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, v0 NOT INDEXED ORDER BY ((v0.c0)GLOB(rt0.c0)) COLLATE RTRIM  NULLS LAST, CAST(CASE rt0.c0  WHEN v0.c0 THEN v0.c2 END AS NUMERIC)  NULLS LAST);
SELECT * FROM rt0, v0 WHERE (((CASE v0.c2  WHEN v0.c1 THEN rt0.c1 WHEN rt0.c0 THEN '' WHEN v0.c2 THEN v0.c0 ELSE v0.c1 END)=(CASE rt0.c2  WHEN v0.c1 THEN rt0.c1 END))) ORDER BY ((v0.c0)GLOB(rt0.c0)) COLLATE RTRIM  NULLS LAST, CAST(CASE rt0.c0  WHEN v0.c0 THEN v0.c2 END AS NUMERIC)  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c2  WHEN v0.c0 THEN v0.c1 END) BETWEEN (v0.c2 COLLATE RTRIM) AND ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c2  WHEN v0.c0 THEN v0.c1 END) BETWEEN (v0.c2 COLLATE RTRIM) AND ((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c2  WHEN v0.c0 THEN v0.c1 END) BETWEEN (v0.c2 COLLATE RTRIM) AND ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c2  WHEN v0.c0 THEN v0.c1 END) BETWEEN (v0.c2 COLLATE RTRIM) AND ((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c2  WHEN v0.c0 THEN v0.c1 END) BETWEEN (v0.c2 COLLATE RTRIM) AND ((v0.c0 IN ()))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ())) NOTNULL));
SELECT COUNT(*) FROM rt0 WHERE ((((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((0.34020750682625756))))OR((rt0.c1 IN (rt0.c1)))))AND((rt0.c0 IN (rt0.c1, rt0.c1))))) ORDER BY CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((0.34020750682625756))))OR((rt0.c1 IN (rt0.c1)))))AND((rt0.c0 IN (rt0.c1, rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END AS NUMERIC) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((0.34020750682625756))))OR((rt0.c1 IN (rt0.c1)))))AND((rt0.c0 IN (rt0.c1, rt0.c1))))) ORDER BY CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((0.34020750682625756))))OR((rt0.c1 IN (rt0.c1)))))AND((rt0.c0 IN (rt0.c1, rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END AS NUMERIC) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((0.34020750682625756))))OR((rt0.c1 IN (rt0.c1)))))AND((rt0.c0 IN (rt0.c1, rt0.c1))))) ORDER BY CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END AS NUMERIC) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c2)) NOT BETWEEN (((v0.c2 IN (v0.c2, v0.c1)))) AND (('519452021')))) ORDER BY (('564276867') ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)) NOT BETWEEN (((v0.c2 IN (v0.c2, v0.c1)))) AND (('519452021')))) IS TRUE)  as count FROM v0 ORDER BY (('564276867') ISNULL) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c2)) NOT BETWEEN (((v0.c2 IN (v0.c2, v0.c1)))) AND (('519452021')))) ORDER BY (('564276867') ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)) NOT BETWEEN (((v0.c2 IN (v0.c2, v0.c1)))) AND (('519452021')))) IS TRUE)  as count FROM v0 ORDER BY (('564276867') ISNULL) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c2)) NOT BETWEEN (((v0.c2 IN (v0.c2, v0.c1)))) AND (('519452021')))) ORDER BY (('564276867') ISNULL) DESC;
SELECT ALL * FROM v0 WHERE ((((v0.c0)*(v0.c2)) IN ('')));
SELECT SUM(count) FROM (SELECT (((((v0.c0)*(v0.c2)) IN (''))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0)*(v0.c2)) IN ('')));
SELECT SUM(count) FROM (SELECT (((((v0.c0)*(v0.c2)) IN (''))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0)*(v0.c2)) IN ('')));
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE rt0.c1  WHEN ((v0.c0)LIKE(rt0.c0)) THEN (((x'34dc'))>((v0.c1))) ELSE (((v0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c0))) END) ORDER BY ((CASE rt0.c0  WHEN v0.c1 THEN rt0.c2 END) NOT BETWEEN (rt0.c0) AND (((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1  WHEN ((v0.c0)LIKE(rt0.c0)) THEN (((x'34dc'))>((v0.c1))) ELSE (((v0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c0))) END) IS TRUE)  as count FROM v0, rt0 ORDER BY ((CASE rt0.c0  WHEN v0.c1 THEN rt0.c2 END) NOT BETWEEN (rt0.c0) AND (((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE rt0.c1  WHEN ((v0.c0)LIKE(rt0.c0)) THEN (((x'34dc'))>((v0.c1))) ELSE (((v0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c0))) END) ORDER BY ((CASE rt0.c0  WHEN v0.c1 THEN rt0.c2 END) NOT BETWEEN (rt0.c0) AND (((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1  WHEN ((v0.c0)LIKE(rt0.c0)) THEN (((x'34dc'))>((v0.c1))) ELSE (((v0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c0))) END) IS TRUE)  as count FROM v0, rt0 ORDER BY ((CASE rt0.c0  WHEN v0.c1 THEN rt0.c2 END) NOT BETWEEN (rt0.c0) AND (((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE rt0.c1  WHEN ((v0.c0)LIKE(rt0.c0)) THEN (((x'34dc'))>((v0.c1))) ELSE (((v0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c0))) END) ORDER BY ((CASE rt0.c0  WHEN v0.c1 THEN rt0.c2 END) NOT BETWEEN (rt0.c0) AND (((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0 WHERE (((ABS(DISTINCT v0.c2)) NOT NULL)) ORDER BY (((((((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c0))))OR((NOT (rt0.c1)))))OR((('')+(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((ABS(DISTINCT v0.c2)) NOT NULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c0))))OR((NOT (rt0.c1)))))OR((('')+(rt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((ABS(DISTINCT v0.c2)) NOT NULL)) ORDER BY (((((((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c0))))OR((NOT (rt0.c1)))))OR((('')+(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((ABS(DISTINCT v0.c2)) NOT NULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c0))))OR((NOT (rt0.c1)))))OR((('')+(rt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((ABS(DISTINCT v0.c2)) NOT NULL)) ORDER BY (((((((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c0))))OR((NOT (rt0.c1)))))OR((('')+(rt0.c1))))  NULLS FIRST;
SELECT * FROM v0, rt0 WHERE (((((((v0.c2)=(v0.c2)))OR(CAST(v0.c0 AS INTEGER))))OR(((rt0.c0)AND(v0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c2)=(v0.c2)))OR(CAST(v0.c0 AS INTEGER))))OR(((rt0.c0)AND(v0.c2))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((((v0.c2)=(v0.c2)))OR(CAST(v0.c0 AS INTEGER))))OR(((rt0.c0)AND(v0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c2)=(v0.c2)))OR(CAST(v0.c0 AS INTEGER))))OR(((rt0.c0)AND(v0.c2))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((((v0.c2)=(v0.c2)))OR(CAST(v0.c0 AS INTEGER))))OR(((rt0.c0)AND(v0.c2)))));
SELECT ALL COUNT(*) FROM v0 WHERE (((LTRIM(v0.c1, v0.c2))>(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((LTRIM(v0.c1, v0.c2))>(x''))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((LTRIM(v0.c1, v0.c2))>(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((LTRIM(v0.c1, v0.c2))>(x''))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((LTRIM(v0.c1, v0.c2))>(x'')));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c2 COLLATE BINARY) BETWEEN (((((v0.c1)OR(rt0.c0)))AND(v0.c1))) AND (json_valid(rt0.c2))) WHERE (((CASE v0.c0  WHEN v0.c2 THEN v0.c2 ELSE rt0.c2 END)GLOB(((v0.c2)=(0.6071612915645206)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c2 THEN v0.c2 ELSE rt0.c2 END)GLOB(((v0.c2)==(0.6071612915645206))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c2 COLLATE BINARY) BETWEEN (((((v0.c1)OR(rt0.c0)))AND(v0.c1))) AND (json_valid(rt0.c2))));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c2 COLLATE BINARY) BETWEEN (((((v0.c1)OR(rt0.c0)))AND(v0.c1))) AND (json_valid(rt0.c2))) WHERE (((CASE v0.c0  WHEN v0.c2 THEN v0.c2 ELSE rt0.c2 END)GLOB(((v0.c2)=(0.6071612915645206)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c2 THEN v0.c2 ELSE rt0.c2 END)GLOB(((v0.c2)==(0.6071612915645206))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c2 COLLATE BINARY) BETWEEN (((((v0.c1)OR(rt0.c0)))AND(v0.c1))) AND (json_valid(rt0.c2))));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c2 COLLATE BINARY) BETWEEN (((((v0.c1)OR(rt0.c0)))AND(v0.c1))) AND (json_valid(rt0.c2))) WHERE (((CASE v0.c0  WHEN v0.c2 THEN v0.c2 ELSE rt0.c2 END)GLOB(((v0.c2)=(0.6071612915645206)))));
SELECT ALL COUNT(*) FROM v0 WHERE (((0.2872513171345752) ISNULL));
SELECT SUM(count) FROM (SELECT ((((0.2872513171345752) ISNULL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((0.2872513171345752) ISNULL));
SELECT SUM(count) FROM (SELECT ((((0.2872513171345752) ISNULL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((0.2872513171345752) ISNULL));
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT * FROM rt0, v0 WHERE (CAST((v0.c0 IN ()) AS REAL)) ORDER BY x'39a8';
SELECT SUM(count) FROM (SELECT ((CAST((v0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM rt0, v0 ORDER BY x'39a8');
SELECT * FROM rt0, v0 WHERE (CAST((v0.c0 IN ()) AS REAL)) ORDER BY x'39a8';
SELECT SUM(count) FROM (SELECT ((CAST((v0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM rt0, v0 ORDER BY x'39a8');
SELECT * FROM rt0, v0 WHERE (CAST((v0.c0 IN ()) AS REAL)) ORDER BY x'39a8';
SELECT COUNT(*) FROM rt0, v0 WHERE (rt0.c0) ORDER BY (((((rt0.c0))!=((v0.c1)))) NOT BETWEEN (rt0.c0) AND (((rt0.c0)>=(v0.c1)))) DESC  NULLS LAST, (((v0.c0 IN ()))/((~ ('''&')))) ASC  NULLS FIRST, (~ (rt0.c2))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((rt0.c0))!=((v0.c1)))) NOT BETWEEN (rt0.c0) AND (((rt0.c0)>=(v0.c1)))) DESC  NULLS LAST, (((v0.c0 IN ()))/((~ ('''&')))) ASC  NULLS FIRST, (~ (rt0.c2))  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (rt0.c0) ORDER BY (((((rt0.c0))!=((v0.c1)))) NOT BETWEEN (rt0.c0) AND (((rt0.c0)>=(v0.c1)))) DESC  NULLS LAST, (((v0.c0 IN ()))/((~ ('''&')))) ASC  NULLS FIRST, (~ (rt0.c2))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((rt0.c0))!=((v0.c1)))) NOT BETWEEN (rt0.c0) AND (((rt0.c0)>=(v0.c1)))) DESC  NULLS LAST, (((v0.c0 IN ()))/((~ ('''&')))) ASC  NULLS FIRST, (~ (rt0.c2))  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (rt0.c0) ORDER BY (((((rt0.c0))!=((v0.c1)))) NOT BETWEEN (rt0.c0) AND (((rt0.c0)>=(v0.c1)))) DESC  NULLS LAST, (((v0.c0 IN ()))/((~ ('''&')))) ASC  NULLS FIRST, (~ (rt0.c2))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c1 WHERE (((x'') BETWEEN (((v0.c0) ISNULL)) AND (rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((x'') BETWEEN (((v0.c0) ISNULL)) AND (rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c1);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c1 WHERE (((x'') BETWEEN (((v0.c0) ISNULL)) AND (rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((x'') BETWEEN (((v0.c0) ISNULL)) AND (rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c1);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c1 WHERE (((x'') BETWEEN (((v0.c0) ISNULL)) AND (rt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM v0 WHERE (CASE (- (v0.c2))  WHEN LIKELY(v0.c2) THEN v0.c2 ELSE ((x'ecfd')|(v0.c1)) END) ORDER BY v0.c2 ASC  NULLS LAST, v0.c2, x'' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (v0.c2))  WHEN LIKELY(v0.c2) THEN v0.c2 ELSE ((x'ecfd')|(v0.c1)) END) IS TRUE)  as count FROM v0 ORDER BY v0.c2 ASC  NULLS LAST, v0.c2, x'' ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CASE (- (v0.c2))  WHEN LIKELY(v0.c2) THEN v0.c2 ELSE ((x'ecfd')|(v0.c1)) END) ORDER BY v0.c2 ASC  NULLS LAST, v0.c2, x'' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (v0.c2))  WHEN LIKELY(v0.c2) THEN v0.c2 ELSE ((x'ecfd')|(v0.c1)) END) IS TRUE)  as count FROM v0 ORDER BY v0.c2 ASC  NULLS LAST, v0.c2, x'' ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CASE (- (v0.c2))  WHEN LIKELY(v0.c2) THEN v0.c2 ELSE ((x'ecfd')|(v0.c1)) END) ORDER BY v0.c2 ASC  NULLS LAST, v0.c2, x'' ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((((((((v0.c0)OR(v0.c2)))OR(v0.c2)))AND(v0.c1)))OR(v0.c1)))AND(v0.c1)))AND(v0.c2)) IN (((v0.c0)IS NOT(v0.c2))))) ORDER BY v0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((((((v0.c0)OR(v0.c2)))OR(v0.c2)))AND(v0.c1)))OR(v0.c1)))AND(v0.c1)))AND(v0.c2)) IN (((v0.c0)IS NOT(v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((((((((v0.c0)OR(v0.c2)))OR(v0.c2)))AND(v0.c1)))OR(v0.c1)))AND(v0.c1)))AND(v0.c2)) IN (((v0.c0)IS NOT(v0.c2))))) ORDER BY v0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((((((v0.c0)OR(v0.c2)))OR(v0.c2)))AND(v0.c1)))OR(v0.c1)))AND(v0.c1)))AND(v0.c2)) IN (((v0.c0)IS NOT(v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((((((((v0.c0)OR(v0.c2)))OR(v0.c2)))AND(v0.c1)))OR(v0.c1)))AND(v0.c1)))AND(v0.c2)) IN (((v0.c0)IS NOT(v0.c2))))) ORDER BY v0.c0 DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (CASE WHEN ((((v0.c0)OR(0.10487946323987352)))AND(v0.c1)) THEN rt0.c0 END) ORDER BY ((v0.c2)<<(v0.c2))  NULLS FIRST, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((v0.c0)OR(0.10487946323987352)))AND(v0.c1)) THEN rt0.c0 END) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY ((v0.c2)<<(v0.c2))  NULLS FIRST, NULL  NULLS FIRST);
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (CASE WHEN ((((v0.c0)OR(0.10487946323987352)))AND(v0.c1)) THEN rt0.c0 END) ORDER BY ((v0.c2)<<(v0.c2))  NULLS FIRST, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((v0.c0)OR(0.10487946323987352)))AND(v0.c1)) THEN rt0.c0 END) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY ((v0.c2)<<(v0.c2))  NULLS FIRST, NULL  NULLS FIRST);
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (CASE WHEN ((((v0.c0)OR(0.10487946323987352)))AND(v0.c1)) THEN rt0.c0 END) ORDER BY ((v0.c2)<<(v0.c2))  NULLS FIRST, NULL  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON DATETIME(((((v0.c1)AND(rt0.c1)))OR(rt0.c1)), (~ (rt0.c2)), ((rt0.c0)&('')), CAST(0x2425e14d AS REAL), ((v0.c2)=(v0.c1)), CASE WHEN rt0.c0 THEN rt0.c2 WHEN v0.c2 THEN v0.c1 WHEN rt0.c1 THEN v0.c0 END, ((rt0.c2)LIKE(v0.c0))) WHERE (LENGTH(rt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(rt0.c0)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON DATETIME(((((v0.c1)AND(rt0.c1)))OR(rt0.c1)), (~ (rt0.c2)), ((rt0.c0)&('')), CAST(0X2425e14d AS REAL), ((v0.c2)==(v0.c1)), CASE WHEN rt0.c0 THEN rt0.c2 WHEN v0.c2 THEN v0.c1 WHEN rt0.c1 THEN v0.c0 END, ((rt0.c2)LIKE(v0.c0))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON DATETIME(((((v0.c1)AND(rt0.c1)))OR(rt0.c1)), (~ (rt0.c2)), ((rt0.c0)&('')), CAST(0x2425e14d AS REAL), ((v0.c2)=(v0.c1)), CASE WHEN rt0.c0 THEN rt0.c2 WHEN v0.c2 THEN v0.c1 WHEN rt0.c1 THEN v0.c0 END, ((rt0.c2)LIKE(v0.c0))) WHERE (LENGTH(rt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(rt0.c0)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON DATETIME(((((v0.c1)AND(rt0.c1)))OR(rt0.c1)), (~ (rt0.c2)), ((rt0.c0)&('')), CAST(0X2425e14d AS REAL), ((v0.c2)==(v0.c1)), CASE WHEN rt0.c0 THEN rt0.c2 WHEN v0.c2 THEN v0.c1 WHEN rt0.c1 THEN v0.c0 END, ((rt0.c2)LIKE(v0.c0))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON DATETIME(((((v0.c1)AND(rt0.c1)))OR(rt0.c1)), (~ (rt0.c2)), ((rt0.c0)&('')), CAST(0x2425e14d AS REAL), ((v0.c2)=(v0.c1)), CASE WHEN rt0.c0 THEN rt0.c2 WHEN v0.c2 THEN v0.c1 WHEN rt0.c1 THEN v0.c0 END, ((rt0.c2)LIKE(v0.c0))) WHERE (LENGTH(rt0.c0));
SELECT * FROM rt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)OR(rt0.c0)))OR(CAST(rt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)OR(rt0.c0)))OR(CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)OR(rt0.c0)))OR(CAST(rt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)OR(rt0.c0)))OR(CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)OR(rt0.c0)))OR(CAST(rt0.c0 AS INTEGER))));
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST(v0.c2 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c2 AS TEXT)) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST(v0.c2 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c2 AS TEXT)) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST(v0.c2 AS TEXT));
SELECT COUNT(*) FROM v0, rt0 WHERE (((v0.c2 COLLATE RTRIM)==(((rt0.c1) BETWEEN (v0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2 COLLATE RTRIM)==(((rt0.c1) BETWEEN (v0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((v0.c2 COLLATE RTRIM)==(((rt0.c1) BETWEEN (v0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2 COLLATE RTRIM)==(((rt0.c1) BETWEEN (v0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((v0.c2 COLLATE RTRIM)==(((rt0.c1) BETWEEN (v0.c1) AND (rt0.c0)))));
SELECT ALL * FROM v0 WHERE (((CAST(v0.c1 AS BLOB)) NOTNULL)) ORDER BY x'7a4a' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c1 AS BLOB)) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY x'7a4a' DESC);
SELECT ALL * FROM v0 WHERE (((CAST(v0.c1 AS BLOB)) NOTNULL)) ORDER BY x'7a4a' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c1 AS BLOB)) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY x'7a4a' DESC);
SELECT ALL * FROM v0 WHERE (((CAST(v0.c1 AS BLOB)) NOTNULL)) ORDER BY x'7a4a' DESC;
SELECT * FROM rt0, v0 WHERE ((((((((((((rt0.c0, v0.c2, v0.c0))<>((v0.c2, v0.c1, 'R WFHDTA'))))OR('0.4091145379863722')))AND(((v0.c2) NOT BETWEEN (v0.c2) AND (rt0.c1)))))AND(v0.c0)))OR(LOWER(v0.c2))));
SELECT SUM(count) FROM (SELECT (((((((((((((rt0.c0, v0.c2, v0.c0))!=((v0.c2, v0.c1, 'R WFHDTA'))))OR('0.4091145379863722')))AND(((v0.c2) NOT BETWEEN (v0.c2) AND (rt0.c1)))))AND(v0.c0)))OR(LOWER(v0.c2)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((((((((((rt0.c0, v0.c2, v0.c0))<>((v0.c2, v0.c1, 'R WFHDTA'))))OR('0.4091145379863722')))AND(((v0.c2) NOT BETWEEN (v0.c2) AND (rt0.c1)))))AND(v0.c0)))OR(LOWER(v0.c2))));
SELECT SUM(count) FROM (SELECT (((((((((((((rt0.c0, v0.c2, v0.c0))!=((v0.c2, v0.c1, 'R WFHDTA'))))OR('0.4091145379863722')))AND(((v0.c2) NOT BETWEEN (v0.c2) AND (rt0.c1)))))AND(v0.c0)))OR(LOWER(v0.c2)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((((((((((rt0.c0, v0.c2, v0.c0))<>((v0.c2, v0.c1, 'R WFHDTA'))))OR('0.4091145379863722')))AND(((v0.c2) NOT BETWEEN (v0.c2) AND (rt0.c1)))))AND(v0.c0)))OR(LOWER(v0.c2))));
SELECT COUNT(*) FROM v0 WHERE (LIKE(((((v0.c2)OR(v0.c1)))OR(NULL)), ((((((((v0.c2)AND(v0.c2)))OR(v0.c1)))OR(v0.c2)))AND(v0.c1)), '0'));
SELECT SUM(count) FROM (SELECT ((LIKE(((((v0.c2)OR(v0.c1)))OR(NULL)), ((((((((v0.c2)AND(v0.c2)))OR(v0.c1)))OR(v0.c2)))AND(v0.c1)), '0')) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (LIKE(((((v0.c2)OR(v0.c1)))OR(NULL)), ((((((((v0.c2)AND(v0.c2)))OR(v0.c1)))OR(v0.c2)))AND(v0.c1)), '0'));
SELECT SUM(count) FROM (SELECT ((LIKE(((((v0.c2)OR(v0.c1)))OR(NULL)), ((((((((v0.c2)AND(v0.c2)))OR(v0.c1)))OR(v0.c2)))AND(v0.c1)), '0')) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (LIKE(((((v0.c2)OR(v0.c1)))OR(NULL)), ((((((((v0.c2)AND(v0.c2)))OR(v0.c1)))OR(v0.c2)))AND(v0.c1)), '0'));
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((rt0.c0)<(rt0.c1))))>=(((rt0.c2 IN ()))))) ORDER BY ((rt0.c2)OR(((rt0.c0) IS FALSE))) ASC, (((rt0.c2)) BETWEEN ((((v0.c2) BETWEEN (rt0.c0) AND (v0.c2)))) AND ((((rt0.c2) NOTNULL)))), (((((rt0.c1))>=((rt0.c0))))IS(1.50913677E9));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)<(rt0.c1))))>=(((rt0.c2 IN ()))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c2)OR(((rt0.c0) IS FALSE))) ASC, (((rt0.c2)) BETWEEN ((((v0.c2) BETWEEN (rt0.c0) AND (v0.c2)))) AND ((((rt0.c2) NOTNULL)))), (((((rt0.c1))>=((rt0.c0))))IS(1.50913677E9)));
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((rt0.c0)<(rt0.c1))))>=(((rt0.c2 IN ()))))) ORDER BY ((rt0.c2)OR(((rt0.c0) IS FALSE))) ASC, (((rt0.c2)) BETWEEN ((((v0.c2) BETWEEN (rt0.c0) AND (v0.c2)))) AND ((((rt0.c2) NOTNULL)))), (((((rt0.c1))>=((rt0.c0))))IS(1.50913677E9));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)<(rt0.c1))))>=(((rt0.c2 IN ()))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c2)OR(((rt0.c0) IS FALSE))) ASC, (((rt0.c2)) BETWEEN ((((v0.c2) BETWEEN (rt0.c0) AND (v0.c2)))) AND ((((rt0.c2) NOTNULL)))), (((((rt0.c1))>=((rt0.c0))))IS(1.50913677E9)));
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((rt0.c0)<(rt0.c1))))>=(((rt0.c2 IN ()))))) ORDER BY ((rt0.c2)OR(((rt0.c0) IS FALSE))) ASC, (((rt0.c2)) BETWEEN ((((v0.c2) BETWEEN (rt0.c0) AND (v0.c2)))) AND ((((rt0.c2) NOTNULL)))), (((((rt0.c1))>=((rt0.c0))))IS(1.50913677E9));
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(rt0.c1 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS INTEGER)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(rt0.c1 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS INTEGER)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(rt0.c1 AS INTEGER));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN (((~ (rt0.c2)))) AND ((((rt0.c0)GLOB(rt0.c1)))))) ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c2)LIKE(rt0.c1)))) AND ((((rt0.c2)OR(rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN (((~ (rt0.c2)))) AND ((((rt0.c0)GLOB(rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c2)LIKE(rt0.c1)))) AND ((((rt0.c2)OR(rt0.c0))))) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN (((~ (rt0.c2)))) AND ((((rt0.c0)GLOB(rt0.c1)))))) ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c2)LIKE(rt0.c1)))) AND ((((rt0.c2)OR(rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN (((~ (rt0.c2)))) AND ((((rt0.c0)GLOB(rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c2)LIKE(rt0.c1)))) AND ((((rt0.c2)OR(rt0.c0))))) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN (((~ (rt0.c2)))) AND ((((rt0.c0)GLOB(rt0.c1)))))) ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c2)LIKE(rt0.c1)))) AND ((((rt0.c2)OR(rt0.c0))))) DESC;
SELECT COUNT(*) FROM v0 WHERE (((((((((((v0.c1) IS TRUE))AND(NULL)))OR(CAST(v0.c0 AS INTEGER))))OR(((v0.c1)GLOB(v0.c1)))))OR(v0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c1) IS TRUE))AND(NULL)))OR(CAST(v0.c0 AS INTEGER))))OR(((v0.c1)GLOB(v0.c1)))))OR(v0.c1))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((((((v0.c1) IS TRUE))AND(NULL)))OR(CAST(v0.c0 AS INTEGER))))OR(((v0.c1)GLOB(v0.c1)))))OR(v0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c1) IS TRUE))AND(NULL)))OR(CAST(v0.c0 AS INTEGER))))OR(((v0.c1)GLOB(v0.c1)))))OR(v0.c1))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((((((v0.c1) IS TRUE))AND(NULL)))OR(CAST(v0.c0 AS INTEGER))))OR(((v0.c1)GLOB(v0.c1)))))OR(v0.c1)));
SELECT * FROM rt0 WHERE ((+ (((rt0.c2)&(rt0.c2))))) ORDER BY ((((rt0.c2)/(rt0.c1)))GLOB(NULL));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c2)&(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)/(rt0.c1)))GLOB(NULL)));
SELECT * FROM rt0 WHERE ((+ (((rt0.c2)&(rt0.c2))))) ORDER BY ((((rt0.c2)/(rt0.c1)))GLOB(NULL));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c2)&(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)/(rt0.c1)))GLOB(NULL)));
SELECT * FROM rt0 WHERE ((+ (((rt0.c2)&(rt0.c2))))) ORDER BY ((((rt0.c2)/(rt0.c1)))GLOB(NULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)) AS REAL)) ORDER BY (~ (rt0.c1)) DESC  NULLS LAST, CASE WHEN (NOT (rt0.c1)) THEN TYPEOF('BW') END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY (~ (rt0.c1)) DESC  NULLS LAST, CASE WHEN (NOT (rt0.c1)) THEN TYPEOF('BW') END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)) AS REAL)) ORDER BY (~ (rt0.c1)) DESC  NULLS LAST, CASE WHEN (NOT (rt0.c1)) THEN TYPEOF('BW') END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY (~ (rt0.c1)) DESC  NULLS LAST, CASE WHEN (NOT (rt0.c1)) THEN TYPEOF('BW') END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)) AS REAL)) ORDER BY (~ (rt0.c1)) DESC  NULLS LAST, CASE WHEN (NOT (rt0.c1)) THEN TYPEOF('BW') END ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0 WHERE (v0.c2) ORDER BY ((((v0.c2)OR(CASE WHEN v0.c2 THEN v0.c2 END)))OR(CASE WHEN v0.c0 THEN '' ELSE v0.c2 END))  NULLS FIRST, CAST((((rt0.c0, v0.c2, 0.4378178682203894))==((v0.c0, v0.c0, rt0.c1))) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((v0.c2)OR(CASE WHEN v0.c2 THEN v0.c2 END)))OR(CASE WHEN v0.c0 THEN '' ELSE v0.c2 END))  NULLS FIRST, CAST((((rt0.c0, v0.c2, 0.4378178682203894))=((v0.c0, v0.c0, rt0.c1))) AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (v0.c2) ORDER BY ((((v0.c2)OR(CASE WHEN v0.c2 THEN v0.c2 END)))OR(CASE WHEN v0.c0 THEN '' ELSE v0.c2 END))  NULLS FIRST, CAST((((rt0.c0, v0.c2, 0.4378178682203894))==((v0.c0, v0.c0, rt0.c1))) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((v0.c2)OR(CASE WHEN v0.c2 THEN v0.c2 END)))OR(CASE WHEN v0.c0 THEN '' ELSE v0.c2 END))  NULLS FIRST, CAST((((rt0.c0, v0.c2, 0.4378178682203894))=((v0.c0, v0.c0, rt0.c1))) AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (v0.c2) ORDER BY ((((v0.c2)OR(CASE WHEN v0.c2 THEN v0.c2 END)))OR(CASE WHEN v0.c0 THEN '' ELSE v0.c2 END))  NULLS FIRST, CAST((((rt0.c0, v0.c2, 0.4378178682203894))==((v0.c0, v0.c0, rt0.c1))) AS NUMERIC)  NULLS LAST;
SELECT ALL * FROM rt0, v0 WHERE (((rt0.c2 COLLATE BINARY)/((v0.c2 IN (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY)/((v0.c2 IN (v0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((rt0.c2 COLLATE BINARY)/((v0.c2 IN (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY)/((v0.c2 IN (v0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((rt0.c2 COLLATE BINARY)/((v0.c2 IN (v0.c0)))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c2) AND (v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c2) AND (v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (v0.c0))) NOT NULL));
SELECT ALL * FROM v0, rt0 WHERE (rt0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0 COLLATE BINARY) IS TRUE)  as count FROM v0 NOT INDEXED, rt0);
SELECT ALL * FROM v0, rt0 WHERE (rt0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0 COLLATE BINARY) IS TRUE)  as count FROM v0 NOT INDEXED, rt0);
SELECT ALL * FROM v0, rt0 WHERE (rt0.c0 COLLATE BINARY);
SELECT ALL * FROM v0 NOT INDEXED, rt0 WHERE (TRIM(DISTINCT (rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (rt0.c1 IN ()))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0 NOT INDEXED, rt0 WHERE (TRIM(DISTINCT (rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (rt0.c1 IN ()))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0 NOT INDEXED, rt0 WHERE (TRIM(DISTINCT (rt0.c1 IN ())));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON (((((((((~ (v0.c2)))AND(((rt0.c2)+(rt0.c0)))))OR(((v0.c2) BETWEEN (rt0.c2) AND ('1916683655')))))AND(v0.c0)))AND((x'e4a2' IN ()))) WHERE ((((((rt0.c2)) BETWEEN (('%bB[cmiSK')) AND ((rt0.c0))))>=(((v0.c0) IS TRUE)))) ORDER BY HEX(DISTINCT rt0.c1 COLLATE BINARY) DESC, LIKELIHOOD(((((((((0.661971039880067)AND(rt0.c0)))OR(v0.c2)))AND(x'')))AND(v0.c2)), 0.4173628452508328) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) BETWEEN (('%bB[cmiSK')) AND ((rt0.c0))))>=(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (((((((((~ (v0.c2)))AND(((rt0.c2)+(rt0.c0)))))OR(((v0.c2) BETWEEN (rt0.c2) AND ('1916683655')))))AND(v0.c0)))AND((x'e4a2' IN ()))) ORDER BY HEX(DISTINCT rt0.c1 COLLATE BINARY) DESC, LIKELIHOOD(((((((((0.661971039880067)AND(rt0.c0)))OR(v0.c2)))AND(x'')))AND(v0.c2)), 0.4173628452508328) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON (((((((((~ (v0.c2)))AND(((rt0.c2)+(rt0.c0)))))OR(((v0.c2) BETWEEN (rt0.c2) AND ('1916683655')))))AND(v0.c0)))AND((x'e4a2' IN ()))) WHERE ((((((rt0.c2)) BETWEEN (('%bB[cmiSK')) AND ((rt0.c0))))>=(((v0.c0) IS TRUE)))) ORDER BY HEX(DISTINCT rt0.c1 COLLATE BINARY) DESC, LIKELIHOOD(((((((((0.661971039880067)AND(rt0.c0)))OR(v0.c2)))AND(x'')))AND(v0.c2)), 0.4173628452508328) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) BETWEEN (('%bB[cmiSK')) AND ((rt0.c0))))>=(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (((((((((~ (v0.c2)))AND(((rt0.c2)+(rt0.c0)))))OR(((v0.c2) BETWEEN (rt0.c2) AND ('1916683655')))))AND(v0.c0)))AND((x'e4a2' IN ()))) ORDER BY HEX(DISTINCT rt0.c1 COLLATE BINARY) DESC, LIKELIHOOD(((((((((0.661971039880067)AND(rt0.c0)))OR(v0.c2)))AND(x'')))AND(v0.c2)), 0.4173628452508328) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON (((((((((~ (v0.c2)))AND(((rt0.c2)+(rt0.c0)))))OR(((v0.c2) BETWEEN (rt0.c2) AND ('1916683655')))))AND(v0.c0)))AND((x'e4a2' IN ()))) WHERE ((((((rt0.c2)) BETWEEN (('%bB[cmiSK')) AND ((rt0.c0))))>=(((v0.c0) IS TRUE)))) ORDER BY HEX(DISTINCT rt0.c1 COLLATE BINARY) DESC, LIKELIHOOD(((((((((0.661971039880067)AND(rt0.c0)))OR(v0.c2)))AND(x'')))AND(v0.c2)), 0.4173628452508328) ASC  NULLS FIRST;
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON CAST((v0.c0 IN ()) AS BLOB) WHERE (((((((((CASE v0.c2  WHEN rt0.c1 THEN v0.c0 END)OR(((rt0.c0) BETWEEN (v0.c1) AND (v0.c2)))))OR(((v0.c0) IS FALSE))))AND(((((rt0.c2)OR(rt0.c0)))OR('481878611')))))AND((+ ('-969223762'))))) ORDER BY PRINTF(NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE v0.c2  WHEN rt0.c1 THEN v0.c0 END)OR(((rt0.c0) BETWEEN (v0.c1) AND (v0.c2)))))OR(((v0.c0) IS FALSE))))AND(((((rt0.c2)OR(rt0.c0)))OR('481878611')))))AND((+ ('-969223762'))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON CAST((v0.c0 IN ()) AS BLOB) ORDER BY PRINTF(NULL) DESC  NULLS LAST);
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON CAST((v0.c0 IN ()) AS BLOB) WHERE (((((((((CASE v0.c2  WHEN rt0.c1 THEN v0.c0 END)OR(((rt0.c0) BETWEEN (v0.c1) AND (v0.c2)))))OR(((v0.c0) IS FALSE))))AND(((((rt0.c2)OR(rt0.c0)))OR('481878611')))))AND((+ ('-969223762'))))) ORDER BY PRINTF(NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE v0.c2  WHEN rt0.c1 THEN v0.c0 END)OR(((rt0.c0) BETWEEN (v0.c1) AND (v0.c2)))))OR(((v0.c0) IS FALSE))))AND(((((rt0.c2)OR(rt0.c0)))OR('481878611')))))AND((+ ('-969223762'))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON CAST((v0.c0 IN ()) AS BLOB) ORDER BY PRINTF(NULL) DESC  NULLS LAST);
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON CAST((v0.c0 IN ()) AS BLOB) WHERE (((((((((CASE v0.c2  WHEN rt0.c1 THEN v0.c0 END)OR(((rt0.c0) BETWEEN (v0.c1) AND (v0.c2)))))OR(((v0.c0) IS FALSE))))AND(((((rt0.c2)OR(rt0.c0)))OR('481878611')))))AND((+ ('-969223762'))))) ORDER BY PRINTF(NULL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS TEXT) COLLATE BINARY) ORDER BY v0.c0, UNLIKELY((+ (v0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY v0.c0, UNLIKELY((+ (v0.c1))));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS TEXT) COLLATE BINARY) ORDER BY v0.c0, UNLIKELY((+ (v0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY v0.c0, UNLIKELY((+ (v0.c1))));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS TEXT) COLLATE BINARY) ORDER BY v0.c0, UNLIKELY((+ (v0.c1)));
SELECT * FROM rt0, v0 WHERE (((((CAST(v0.c0 AS NUMERIC))OR(rt0.c0)))AND(x'')));
SELECT SUM(count) FROM (SELECT ((((((CAST(v0.c0 AS NUMERIC))OR(rt0.c0)))AND(x''))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((CAST(v0.c0 AS NUMERIC))OR(rt0.c0)))AND(x'')));
SELECT SUM(count) FROM (SELECT ((((((CAST(v0.c0 AS NUMERIC))OR(rt0.c0)))AND(x''))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((CAST(v0.c0 AS NUMERIC))OR(rt0.c0)))AND(x'')));
SELECT ALL * FROM v0, rt0 WHERE (((((v0.c0) BETWEEN (v0.c2) AND (rt0.c0)))/(((v0.c0) IS FALSE)))) ORDER BY CASE ((v0.c0)*(v0.c2))  WHEN TYPEOF(DISTINCT rt0.c1) THEN LIKELY(DISTINCT rt0.c2) WHEN rt0.c1 THEN v0.c0 COLLATE NOCASE WHEN CASE WHEN rt0.c0 THEN v0.c2 WHEN v0.c2 THEN v0.c0 WHEN rt0.c0 THEN rt0.c1 END THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) ELSE TOTAL_CHANGES() END ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (v0.c2) AND (rt0.c0)))/(((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE ((v0.c0)*(v0.c2))  WHEN TYPEOF(DISTINCT rt0.c1) THEN LIKELY(DISTINCT rt0.c2) WHEN rt0.c1 THEN v0.c0 COLLATE NOCASE WHEN CASE WHEN rt0.c0 THEN v0.c2 WHEN v0.c2 THEN v0.c0 WHEN rt0.c0 THEN rt0.c1 END THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) ELSE TOTAL_CHANGES() END ASC);
SELECT ALL * FROM v0, rt0 WHERE (((((v0.c0) BETWEEN (v0.c2) AND (rt0.c0)))/(((v0.c0) IS FALSE)))) ORDER BY CASE ((v0.c0)*(v0.c2))  WHEN TYPEOF(DISTINCT rt0.c1) THEN LIKELY(DISTINCT rt0.c2) WHEN rt0.c1 THEN v0.c0 COLLATE NOCASE WHEN CASE WHEN rt0.c0 THEN v0.c2 WHEN v0.c2 THEN v0.c0 WHEN rt0.c0 THEN rt0.c1 END THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) ELSE TOTAL_CHANGES() END ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (v0.c2) AND (rt0.c0)))/(((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE ((v0.c0)*(v0.c2))  WHEN TYPEOF(DISTINCT rt0.c1) THEN LIKELY(DISTINCT rt0.c2) WHEN rt0.c1 THEN v0.c0 COLLATE NOCASE WHEN CASE WHEN rt0.c0 THEN v0.c2 WHEN v0.c2 THEN v0.c0 WHEN rt0.c0 THEN rt0.c1 END THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) ELSE TOTAL_CHANGES() END ASC);
SELECT ALL * FROM v0, rt0 WHERE (((((v0.c0) BETWEEN (v0.c2) AND (rt0.c0)))/(((v0.c0) IS FALSE)))) ORDER BY CASE ((v0.c0)*(v0.c2))  WHEN TYPEOF(DISTINCT rt0.c1) THEN LIKELY(DISTINCT rt0.c2) WHEN rt0.c1 THEN v0.c0 COLLATE NOCASE WHEN CASE WHEN rt0.c0 THEN v0.c2 WHEN v0.c2 THEN v0.c0 WHEN rt0.c0 THEN rt0.c1 END THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) ELSE TOTAL_CHANGES() END ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((+ (rt0.c2))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) AND (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c2))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) AND (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((+ (rt0.c2))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) AND (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c2))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) AND (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((+ (rt0.c2))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) AND (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)));
SELECT * FROM v0, rt0 WHERE (((((v0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) IS FALSE)) ORDER BY (((rt0.c0) NOTNULL) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) IS FALSE)) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c0) NOTNULL) IN ())  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (((((v0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) IS FALSE)) ORDER BY (((rt0.c0) NOTNULL) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) IS FALSE)) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c0) NOTNULL) IN ())  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (((((v0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) IS FALSE)) ORDER BY (((rt0.c0) NOTNULL) IN ())  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (CASE (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))  WHEN ((rt0.c1)=(rt0.c0)) THEN ((rt0.c1) ISNULL) ELSE CAST(rt0.c0 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))  WHEN ((rt0.c1)==(rt0.c0)) THEN ((rt0.c1) ISNULL) ELSE CAST(rt0.c0 AS BLOB) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))  WHEN ((rt0.c1)=(rt0.c0)) THEN ((rt0.c1) ISNULL) ELSE CAST(rt0.c0 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))  WHEN ((rt0.c1)==(rt0.c0)) THEN ((rt0.c1) ISNULL) ELSE CAST(rt0.c0 AS BLOB) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))  WHEN ((rt0.c1)=(rt0.c0)) THEN ((rt0.c1) ISNULL) ELSE CAST(rt0.c0 AS BLOB) END);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((rt0.c1 IN ()) COLLATE NOCASE) ORDER BY (- (CASE WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN rt0.c2 WHEN rt0.c1 THEN -1520196032 END)) DESC  NULLS LAST, (CAST(v0.c0 AS TEXT) IN ())  NULLS FIRST, CAST(LOWER('311721023') AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0 ORDER BY (- (CASE WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN rt0.c2 WHEN rt0.c1 THEN -1520196032 END)) DESC  NULLS LAST, (CAST(v0.c0 AS TEXT) IN ())  NULLS FIRST, CAST(LOWER('311721023') AS TEXT) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((rt0.c1 IN ()) COLLATE NOCASE) ORDER BY (- (CASE WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN rt0.c2 WHEN rt0.c1 THEN -1520196032 END)) DESC  NULLS LAST, (CAST(v0.c0 AS TEXT) IN ())  NULLS FIRST, CAST(LOWER('311721023') AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0 ORDER BY (- (CASE WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN rt0.c2 WHEN rt0.c1 THEN -1520196032 END)) DESC  NULLS LAST, (CAST(v0.c0 AS TEXT) IN ())  NULLS FIRST, CAST(LOWER('311721023') AS TEXT) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((rt0.c1 IN ()) COLLATE NOCASE) ORDER BY (- (CASE WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN rt0.c2 WHEN rt0.c1 THEN -1520196032 END)) DESC  NULLS LAST, (CAST(v0.c0 AS TEXT) IN ())  NULLS FIRST, CAST(LOWER('311721023') AS TEXT) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((~ (NULL)));
SELECT SUM(count) FROM (SELECT (((~ (NULL))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((~ (NULL)));
SELECT SUM(count) FROM (SELECT (((~ (NULL))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((~ (NULL)));
SELECT ALL * FROM rt0, v0 WHERE (rt0.c0) ORDER BY ((((v0.c2)==(v0.c0))) NOT BETWEEN (((v0.c0)+(rt0.c1))) AND (json_extract(rt0.c0, v0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((v0.c2)==(v0.c0))) NOT BETWEEN (((v0.c0)+(rt0.c1))) AND (json_extract(rt0.c0, v0.c2))) DESC);
SELECT ALL * FROM rt0, v0 WHERE (rt0.c0) ORDER BY ((((v0.c2)==(v0.c0))) NOT BETWEEN (((v0.c0)+(rt0.c1))) AND (json_extract(rt0.c0, v0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((v0.c2)==(v0.c0))) NOT BETWEEN (((v0.c0)+(rt0.c1))) AND (json_extract(rt0.c0, v0.c2))) DESC);
SELECT ALL * FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c0 WHEN 1179254376 THEN v0.c0 END)OR(((v0.c2)OR(v0.c1)))))AND('\r昐 z1'))) ORDER BY (((v0.c1) BETWEEN (v0.c1) AND (v0.c1)) IN ((((v0.c1, v0.c2, v0.c2)) BETWEEN ((0.7824516141763475, NULL, v0.c2)) AND ((v0.c1, v0.c1, v0.c1))), (((v0.c1, v0.c2, v0.c1)) BETWEEN ((v0.c1, 'B_6UH', v0.c0)) AND ((v0.c1, v0.c0, v0.c1))))) DESC, CAST(((((v0.c2)OR(v0.c2)))AND(v0.c0)) AS BLOB) DESC, CASE ((v0.c2) NOTNULL)  WHEN CASE WHEN v0.c1 THEN v0.c1 ELSE x'' END THEN CAST(v0.c0 AS BLOB) WHEN ((v0.c2) IS FALSE) THEN ((((((((v0.c1)AND(v0.c1)))OR(v0.c2)))AND(v0.c2)))AND(v0.c2)) WHEN CASE WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END THEN ((v0.c2)IS(v0.c0)) ELSE ((v0.c0)IS NOT(v0.c2)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE v0.c0  WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c0 WHEN 1179254376 THEN v0.c0 END)OR(((v0.c2)OR(v0.c1)))))AND('\r昐 z1'))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c1) BETWEEN (v0.c1) AND (v0.c1)) IN ((((v0.c1, v0.c2, v0.c2)) BETWEEN ((0.7824516141763475, NULL, v0.c2)) AND ((v0.c1, v0.c1, v0.c1))), (((v0.c1, v0.c2, v0.c1)) BETWEEN ((v0.c1, 'B_6UH', v0.c0)) AND ((v0.c1, v0.c0, v0.c1))))) DESC, CAST(((((v0.c2)OR(v0.c2)))AND(v0.c0)) AS BLOB) DESC, CASE ((v0.c2) NOTNULL)  WHEN CASE WHEN v0.c1 THEN v0.c1 ELSE x'' END THEN CAST(v0.c0 AS BLOB) WHEN ((v0.c2) IS FALSE) THEN ((((((((v0.c1)AND(v0.c1)))OR(v0.c2)))AND(v0.c2)))AND(v0.c2)) WHEN CASE WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END THEN ((v0.c2)IS(v0.c0)) ELSE ((v0.c0)IS NOT(v0.c2)) END DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c0 WHEN 1179254376 THEN v0.c0 END)OR(((v0.c2)OR(v0.c1)))))AND('\r昐 z1'))) ORDER BY (((v0.c1) BETWEEN (v0.c1) AND (v0.c1)) IN ((((v0.c1, v0.c2, v0.c2)) BETWEEN ((0.7824516141763475, NULL, v0.c2)) AND ((v0.c1, v0.c1, v0.c1))), (((v0.c1, v0.c2, v0.c1)) BETWEEN ((v0.c1, 'B_6UH', v0.c0)) AND ((v0.c1, v0.c0, v0.c1))))) DESC, CAST(((((v0.c2)OR(v0.c2)))AND(v0.c0)) AS BLOB) DESC, CASE ((v0.c2) NOTNULL)  WHEN CASE WHEN v0.c1 THEN v0.c1 ELSE x'' END THEN CAST(v0.c0 AS BLOB) WHEN ((v0.c2) IS FALSE) THEN ((((((((v0.c1)AND(v0.c1)))OR(v0.c2)))AND(v0.c2)))AND(v0.c2)) WHEN CASE WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END THEN ((v0.c2)IS(v0.c0)) ELSE ((v0.c0)IS NOT(v0.c2)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE v0.c0  WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c0 WHEN 1179254376 THEN v0.c0 END)OR(((v0.c2)OR(v0.c1)))))AND('\r昐 z1'))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c1) BETWEEN (v0.c1) AND (v0.c1)) IN ((((v0.c1, v0.c2, v0.c2)) BETWEEN ((0.7824516141763475, NULL, v0.c2)) AND ((v0.c1, v0.c1, v0.c1))), (((v0.c1, v0.c2, v0.c1)) BETWEEN ((v0.c1, 'B_6UH', v0.c0)) AND ((v0.c1, v0.c0, v0.c1))))) DESC, CAST(((((v0.c2)OR(v0.c2)))AND(v0.c0)) AS BLOB) DESC, CASE ((v0.c2) NOTNULL)  WHEN CASE WHEN v0.c1 THEN v0.c1 ELSE x'' END THEN CAST(v0.c0 AS BLOB) WHEN ((v0.c2) IS FALSE) THEN ((((((((v0.c1)AND(v0.c1)))OR(v0.c2)))AND(v0.c2)))AND(v0.c2)) WHEN CASE WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END THEN ((v0.c2)IS(v0.c0)) ELSE ((v0.c0)IS NOT(v0.c2)) END DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c0 WHEN 1179254376 THEN v0.c0 END)OR(((v0.c2)OR(v0.c1)))))AND('\r昐 z1'))) ORDER BY (((v0.c1) BETWEEN (v0.c1) AND (v0.c1)) IN ((((v0.c1, v0.c2, v0.c2)) BETWEEN ((0.7824516141763475, NULL, v0.c2)) AND ((v0.c1, v0.c1, v0.c1))), (((v0.c1, v0.c2, v0.c1)) BETWEEN ((v0.c1, 'B_6UH', v0.c0)) AND ((v0.c1, v0.c0, v0.c1))))) DESC, CAST(((((v0.c2)OR(v0.c2)))AND(v0.c0)) AS BLOB) DESC, CASE ((v0.c2) NOTNULL)  WHEN CASE WHEN v0.c1 THEN v0.c1 ELSE x'' END THEN CAST(v0.c0 AS BLOB) WHEN ((v0.c2) IS FALSE) THEN ((((((((v0.c1)AND(v0.c1)))OR(v0.c2)))AND(v0.c2)))AND(v0.c2)) WHEN CASE WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END THEN ((v0.c2)IS(v0.c0)) ELSE ((v0.c0)IS NOT(v0.c2)) END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((CASE WHEN rt0.c1 THEN rt0.c1 END)OR(CASE WHEN v0.c0 THEN rt0.c1 END)))OR(v0.c0))) ORDER BY ((v0.c1 COLLATE BINARY) BETWEEN (((((rt0.c1)OR(v0.c0)))OR(v0.c1))) AND ((((v0.c2)) NOT BETWEEN ((rt0.c0)) AND ((v0.c1))))) ASC, '426461032' ASC, (((((v0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c2))))&(((v0.c2) IS TRUE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt0.c1 THEN rt0.c1 END)OR(CASE WHEN v0.c0 THEN rt0.c1 END)))OR(v0.c0))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((v0.c1 COLLATE BINARY) BETWEEN (((((rt0.c1)OR(v0.c0)))OR(v0.c1))) AND ((((v0.c2)) NOT BETWEEN ((rt0.c0)) AND ((v0.c1))))) ASC, '426461032' ASC, (((((v0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c2))))&(((v0.c2) IS TRUE))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((CASE WHEN rt0.c1 THEN rt0.c1 END)OR(CASE WHEN v0.c0 THEN rt0.c1 END)))OR(v0.c0))) ORDER BY ((v0.c1 COLLATE BINARY) BETWEEN (((((rt0.c1)OR(v0.c0)))OR(v0.c1))) AND ((((v0.c2)) NOT BETWEEN ((rt0.c0)) AND ((v0.c1))))) ASC, '426461032' ASC, (((((v0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c2))))&(((v0.c2) IS TRUE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt0.c1 THEN rt0.c1 END)OR(CASE WHEN v0.c0 THEN rt0.c1 END)))OR(v0.c0))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((v0.c1 COLLATE BINARY) BETWEEN (((((rt0.c1)OR(v0.c0)))OR(v0.c1))) AND ((((v0.c2)) NOT BETWEEN ((rt0.c0)) AND ((v0.c1))))) ASC, '426461032' ASC, (((((v0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c2))))&(((v0.c2) IS TRUE))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((CASE WHEN rt0.c1 THEN rt0.c1 END)OR(CASE WHEN v0.c0 THEN rt0.c1 END)))OR(v0.c0))) ORDER BY ((v0.c1 COLLATE BINARY) BETWEEN (((((rt0.c1)OR(v0.c0)))OR(v0.c1))) AND ((((v0.c2)) NOT BETWEEN ((rt0.c0)) AND ((v0.c1))))) ASC, '426461032' ASC, (((((v0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c2))))&(((v0.c2) IS TRUE))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON CASE WHEN rt0.c2 COLLATE RTRIM THEN ((v0.c0) NOT BETWEEN (v0.c2) AND (rt0.c2)) END WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c2)))/(((v0.c1) NOTNULL)))) ORDER BY ((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c1)) COLLATE BINARY ASC, ((v0.c0 COLLATE RTRIM)-(v0.c2 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c2)))/(((v0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON CASE WHEN rt0.c2 COLLATE RTRIM THEN ((v0.c0) NOT BETWEEN (v0.c2) AND (rt0.c2)) END ORDER BY ((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c1)) COLLATE BINARY ASC, ((v0.c0 COLLATE RTRIM)-(v0.c2 COLLATE RTRIM))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON CASE WHEN rt0.c2 COLLATE RTRIM THEN ((v0.c0) NOT BETWEEN (v0.c2) AND (rt0.c2)) END WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c2)))/(((v0.c1) NOTNULL)))) ORDER BY ((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c1)) COLLATE BINARY ASC, ((v0.c0 COLLATE RTRIM)-(v0.c2 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c2)))/(((v0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON CASE WHEN rt0.c2 COLLATE RTRIM THEN ((v0.c0) NOT BETWEEN (v0.c2) AND (rt0.c2)) END ORDER BY ((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c1)) COLLATE BINARY ASC, ((v0.c0 COLLATE RTRIM)-(v0.c2 COLLATE RTRIM))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON CASE WHEN rt0.c2 COLLATE RTRIM THEN ((v0.c0) NOT BETWEEN (v0.c2) AND (rt0.c2)) END WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c2)))/(((v0.c1) NOTNULL)))) ORDER BY ((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c1)) COLLATE BINARY ASC, ((v0.c0 COLLATE RTRIM)-(v0.c2 COLLATE RTRIM))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c1)OR(IFNULL(DISTINCT v0.c2, v0.c0))))OR((v0.c2 IN ())))) ORDER BY (((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)), CASE v0.c0  WHEN v0.c1 THEN v0.c2 WHEN '1321636861' THEN rt0.c0 WHEN v0.c0 THEN v0.c0 ELSE '-156223006' END, CASE v0.c2  WHEN v0.c0 THEN v0.c0 WHEN NULL THEN rt0.c1 WHEN rt0.c2 THEN v0.c2 END))<>((json_extract(v0.c2, v0.c2), ((v0.c1)||(rt0.c2)), CASE 0.7244648848027694  WHEN '-1940260410' THEN v0.c1 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)OR(IFNULL(DISTINCT v0.c2, v0.c0))))OR((v0.c2 IN ())))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)), CASE v0.c0  WHEN v0.c1 THEN v0.c2 WHEN '1321636861' THEN rt0.c0 WHEN v0.c0 THEN v0.c0 ELSE '-156223006' END, CASE v0.c2  WHEN v0.c0 THEN v0.c0 WHEN NULL THEN rt0.c1 WHEN rt0.c2 THEN v0.c2 END))<>((json_extract(v0.c2, v0.c2), ((v0.c1)||(rt0.c2)), CASE 0.7244648848027694  WHEN '-1940260410' THEN v0.c1 ELSE rt0.c0 END))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c1)OR(IFNULL(DISTINCT v0.c2, v0.c0))))OR((v0.c2 IN ())))) ORDER BY (((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)), CASE v0.c0  WHEN v0.c1 THEN v0.c2 WHEN '1321636861' THEN rt0.c0 WHEN v0.c0 THEN v0.c0 ELSE '-156223006' END, CASE v0.c2  WHEN v0.c0 THEN v0.c0 WHEN NULL THEN rt0.c1 WHEN rt0.c2 THEN v0.c2 END))<>((json_extract(v0.c2, v0.c2), ((v0.c1)||(rt0.c2)), CASE 0.7244648848027694  WHEN '-1940260410' THEN v0.c1 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)OR(IFNULL(DISTINCT v0.c2, v0.c0))))OR((v0.c2 IN ())))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)), CASE v0.c0  WHEN v0.c1 THEN v0.c2 WHEN '1321636861' THEN rt0.c0 WHEN v0.c0 THEN v0.c0 ELSE '-156223006' END, CASE v0.c2  WHEN v0.c0 THEN v0.c0 WHEN NULL THEN rt0.c1 WHEN rt0.c2 THEN v0.c2 END))<>((json_extract(v0.c2, v0.c2), ((v0.c1)||(rt0.c2)), CASE 0.7244648848027694  WHEN '-1940260410' THEN v0.c1 ELSE rt0.c0 END))));
SELECT ALL * FROM v0, rt0 WHERE ((((- ('9223372036854775807')))*(((-1648408417)*(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((- ('9223372036854775807')))*(((-1648408417)*(rt0.c1))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((- ('9223372036854775807')))*(((-1648408417)*(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((- ('9223372036854775807')))*(((-1648408417)*(rt0.c1))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((- ('9223372036854775807')))*(((-1648408417)*(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((v0.c2)>=(rt0.c0)) IN (x'' COLLATE BINARY))) ORDER BY CASE ((0.6372272278806634) IS FALSE)  WHEN -1.359518637E9 THEN CAST(rt0.c2 AS TEXT) WHEN ((0.76071043811706) NOTNULL) THEN ((rt0.c2)|(v0.c1)) WHEN (rt0.c0 IN (x'', v0.c2)) THEN (((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c0))) END  NULLS FIRST, (((((((((('635921142')<=(v0.c2)))AND(x'')))AND(0.04104830140733473)))OR(((((((((rt0.c2)OR(rt0.c0)))OR(v0.c1)))AND(v0.c1)))AND(v0.c1)))))AND(v0.c1));
SELECT SUM(count) FROM (SELECT (((((v0.c2)>=(rt0.c0)) IN (x'' COLLATE BINARY))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE ((0.6372272278806634) IS FALSE)  WHEN -1.359518637E9 THEN CAST(rt0.c2 AS TEXT) WHEN ((0.76071043811706) NOTNULL) THEN ((rt0.c2)|(v0.c1)) WHEN (rt0.c0 IN (x'', v0.c2)) THEN (((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c0))) END  NULLS FIRST, (((((((((('635921142')<=(v0.c2)))AND(x'')))AND(0.04104830140733473)))OR(((((((((rt0.c2)OR(rt0.c0)))OR(v0.c1)))AND(v0.c1)))AND(v0.c1)))))AND(v0.c1)));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((v0.c2)>=(rt0.c0)) IN (x'' COLLATE BINARY))) ORDER BY CASE ((0.6372272278806634) IS FALSE)  WHEN -1.359518637E9 THEN CAST(rt0.c2 AS TEXT) WHEN ((0.76071043811706) NOTNULL) THEN ((rt0.c2)|(v0.c1)) WHEN (rt0.c0 IN (x'', v0.c2)) THEN (((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c0))) END  NULLS FIRST, (((((((((('635921142')<=(v0.c2)))AND(x'')))AND(0.04104830140733473)))OR(((((((((rt0.c2)OR(rt0.c0)))OR(v0.c1)))AND(v0.c1)))AND(v0.c1)))))AND(v0.c1));
SELECT SUM(count) FROM (SELECT (((((v0.c2)>=(rt0.c0)) IN (x'' COLLATE BINARY))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE ((0.6372272278806634) IS FALSE)  WHEN -1.359518637E9 THEN CAST(rt0.c2 AS TEXT) WHEN ((0.76071043811706) NOTNULL) THEN ((rt0.c2)|(v0.c1)) WHEN (rt0.c0 IN (x'', v0.c2)) THEN (((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c0))) END  NULLS FIRST, (((((((((('635921142')<=(v0.c2)))AND(x'')))AND(0.04104830140733473)))OR(((((((((rt0.c2)OR(rt0.c0)))OR(v0.c1)))AND(v0.c1)))AND(v0.c1)))))AND(v0.c1)));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((v0.c2)>=(rt0.c0)) IN (x'' COLLATE BINARY))) ORDER BY CASE ((0.6372272278806634) IS FALSE)  WHEN -1.359518637E9 THEN CAST(rt0.c2 AS TEXT) WHEN ((0.76071043811706) NOTNULL) THEN ((rt0.c2)|(v0.c1)) WHEN (rt0.c0 IN (x'', v0.c2)) THEN (((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c0))) END  NULLS FIRST, (((((((((('635921142')<=(v0.c2)))AND(x'')))AND(0.04104830140733473)))OR(((((((((rt0.c2)OR(rt0.c0)))OR(v0.c1)))AND(v0.c1)))AND(v0.c1)))))AND(v0.c1));
SELECT ALL COUNT(*) FROM rt0 WHERE ('849084024');
SELECT SUM(count) FROM (SELECT (('849084024') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ('849084024');
SELECT SUM(count) FROM (SELECT (('849084024') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ('849084024');
SELECT * FROM rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END)OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))AND(rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END)OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))AND(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END)OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))AND(rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END)OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))AND(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END)OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))AND(rt0.c1 COLLATE BINARY)));
SELECT ALL * FROM v0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (rt0.c0);
SELECT * FROM v0 WHERE (CASE v0.c2 COLLATE RTRIM  WHEN ((v0.c2) IS FALSE) THEN (((v0.c2))<=((v0.c2))) ELSE ((((v0.c2)AND(v0.c2)))AND(v0.c0)) END) ORDER BY ((((LIKELIHOOD(v0.c2, 0.8083848293817989))OR((((v0.c1, v0.c1, NULL, v0.c2, v0.c0)) BETWEEN (('1288008530', v0.c0, v0.c2, v0.c2, v0.c0)) AND ((v0.c2, v0.c1, v0.c1, v0.c0, v0.c2))))))OR((v0.c1 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c2 COLLATE RTRIM  WHEN ((v0.c2) IS FALSE) THEN (((v0.c2))<=((v0.c2))) ELSE ((((v0.c2)AND(v0.c2)))AND(v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY ((((LIKELIHOOD(v0.c2, 0.8083848293817989))OR((((v0.c1, v0.c1, NULL, v0.c2, v0.c0)) BETWEEN (('1288008530', v0.c0, v0.c2, v0.c2, v0.c0)) AND ((v0.c2, v0.c1, v0.c1, v0.c0, v0.c2))))))OR((v0.c1 IN ()))) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (CASE v0.c2 COLLATE RTRIM  WHEN ((v0.c2) IS FALSE) THEN (((v0.c2))<=((v0.c2))) ELSE ((((v0.c2)AND(v0.c2)))AND(v0.c0)) END) ORDER BY ((((LIKELIHOOD(v0.c2, 0.8083848293817989))OR((((v0.c1, v0.c1, NULL, v0.c2, v0.c0)) BETWEEN (('1288008530', v0.c0, v0.c2, v0.c2, v0.c0)) AND ((v0.c2, v0.c1, v0.c1, v0.c0, v0.c2))))))OR((v0.c1 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c2 COLLATE RTRIM  WHEN ((v0.c2) IS FALSE) THEN (((v0.c2))<=((v0.c2))) ELSE ((((v0.c2)AND(v0.c2)))AND(v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY ((((LIKELIHOOD(v0.c2, 0.8083848293817989))OR((((v0.c1, v0.c1, NULL, v0.c2, v0.c0)) BETWEEN (('1288008530', v0.c0, v0.c2, v0.c2, v0.c0)) AND ((v0.c2, v0.c1, v0.c1, v0.c0, v0.c2))))))OR((v0.c1 IN ()))) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (CASE v0.c2 COLLATE RTRIM  WHEN ((v0.c2) IS FALSE) THEN (((v0.c2))<=((v0.c2))) ELSE ((((v0.c2)AND(v0.c2)))AND(v0.c0)) END) ORDER BY ((((LIKELIHOOD(v0.c2, 0.8083848293817989))OR((((v0.c1, v0.c1, NULL, v0.c2, v0.c0)) BETWEEN (('1288008530', v0.c0, v0.c2, v0.c2, v0.c0)) AND ((v0.c2, v0.c1, v0.c1, v0.c0, v0.c2))))))OR((v0.c1 IN ()))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((((NULL)AND(NULL)))AND(((v0.c0) ISNULL)))) ORDER BY (((v0.c1 IN ()))<=(((-1204853565)|(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)AND(NULL)))AND(((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c1 IN ()))<=(((-1204853565)|(v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (((((NULL)AND(NULL)))AND(((v0.c0) ISNULL)))) ORDER BY (((v0.c1 IN ()))<=(((-1204853565)|(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)AND(NULL)))AND(((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c1 IN ()))<=(((-1204853565)|(v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (((((NULL)AND(NULL)))AND(((v0.c0) ISNULL)))) ORDER BY (((v0.c1 IN ()))<=(((-1204853565)|(v0.c0))));
SELECT ALL * FROM v0 WHERE ((- (((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2)))));
SELECT SUM(count) FROM (SELECT (((- (((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((- (((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2)))));
SELECT SUM(count) FROM (SELECT (((- (((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((- (((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2)))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON ((((((((((((x'')AND(-1990230539)))OR(v0.c2)))AND((((0.8266045099088549))<((rt0.c0))))))AND(((x'')/(v0.c2)))))AND((v0.c2 IN ()))))AND('-978530088')) WHERE ('') ORDER BY CAST(rt0.c1 AS BLOB) COLLATE BINARY  NULLS LAST, v0.c0;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((((((((((x'')AND(-1990230539)))OR(v0.c2)))AND((((0.8266045099088549))<((rt0.c0))))))AND(((x'')/(v0.c2)))))AND((v0.c2 IN ()))))AND('-978530088')) ORDER BY CAST(rt0.c1 AS BLOB) COLLATE BINARY  NULLS LAST, v0.c0);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON ((((((((((((x'')AND(-1990230539)))OR(v0.c2)))AND((((0.8266045099088549))<((rt0.c0))))))AND(((x'')/(v0.c2)))))AND((v0.c2 IN ()))))AND('-978530088')) WHERE ('') ORDER BY CAST(rt0.c1 AS BLOB) COLLATE BINARY  NULLS LAST, v0.c0;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((((((((((x'')AND(-1990230539)))OR(v0.c2)))AND((((0.8266045099088549))<((rt0.c0))))))AND(((x'')/(v0.c2)))))AND((v0.c2 IN ()))))AND('-978530088')) ORDER BY CAST(rt0.c1 AS BLOB) COLLATE BINARY  NULLS LAST, v0.c0);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON ((((((((((((x'')AND(-1990230539)))OR(v0.c2)))AND((((0.8266045099088549))<((rt0.c0))))))AND(((x'')/(v0.c2)))))AND((v0.c2 IN ()))))AND('-978530088')) WHERE ('') ORDER BY CAST(rt0.c1 AS BLOB) COLLATE BINARY  NULLS LAST, v0.c0;
SELECT * FROM rt0 WHERE ((rt0.c0 IN ())) ORDER BY 1409028643  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ())) IS TRUE)  as count FROM rt0 ORDER BY 1409028643  NULLS LAST);
SELECT * FROM rt0 WHERE ((rt0.c0 IN ())) ORDER BY 1409028643  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ())) IS TRUE)  as count FROM rt0 ORDER BY 1409028643  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE (((CAST(v0.c1 AS REAL))*(LOWER(v0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c1 AS REAL))*(LOWER(v0.c2)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((CAST(v0.c1 AS REAL))*(LOWER(v0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c1 AS REAL))*(LOWER(v0.c2)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((CAST(v0.c1 AS REAL))*(LOWER(v0.c2))));
SELECT COUNT(*) FROM rt0, v0 WHERE (((CASE WHEN v0.c0 THEN rt0.c2 WHEN v0.c2 THEN rt0.c2 WHEN v0.c2 THEN v0.c0 END)==((((rt0.c0, 0xffffffffe9966fc3, rt0.c1)) BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c2, v0.c0, rt0.c2)))))) ORDER BY (((v0.c0, v0.c0, v0.c0, v0.c1, rt0.c2)) NOT BETWEEN ((((v0.c0) NOT NULL), (rt0.c1 IN ()), v0.c0, (+ (rt0.c2)), (NOT (rt0.c1)))) AND ((((x'')AND(v0.c0)), CASE WHEN '-526414311' THEN 197466290 END, (((('30')AND(v0.c0)))OR(v0.c1)), rt0.c0, v0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN rt0.c2 WHEN v0.c2 THEN rt0.c2 WHEN v0.c2 THEN v0.c0 END)=((((rt0.c0, 0xffffffffe9966fc3, rt0.c1)) BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c2, v0.c0, rt0.c2)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((v0.c0, v0.c0, v0.c0, v0.c1, rt0.c2)) NOT BETWEEN ((((v0.c0) NOT NULL), (rt0.c1 IN ()), v0.c0, (+ (rt0.c2)), (NOT (rt0.c1)))) AND ((((x'')AND(v0.c0)), CASE WHEN '-526414311' THEN 197466290 END, (((('30')AND(v0.c0)))OR(v0.c1)), rt0.c0, v0.c2))) DESC);
SELECT COUNT(*) FROM rt0, v0 WHERE (((CASE WHEN v0.c0 THEN rt0.c2 WHEN v0.c2 THEN rt0.c2 WHEN v0.c2 THEN v0.c0 END)==((((rt0.c0, 0xffffffffe9966fc3, rt0.c1)) BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c2, v0.c0, rt0.c2)))))) ORDER BY (((v0.c0, v0.c0, v0.c0, v0.c1, rt0.c2)) NOT BETWEEN ((((v0.c0) NOT NULL), (rt0.c1 IN ()), v0.c0, (+ (rt0.c2)), (NOT (rt0.c1)))) AND ((((x'')AND(v0.c0)), CASE WHEN '-526414311' THEN 197466290 END, (((('30')AND(v0.c0)))OR(v0.c1)), rt0.c0, v0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN rt0.c2 WHEN v0.c2 THEN rt0.c2 WHEN v0.c2 THEN v0.c0 END)=((((rt0.c0, 0xffffffffe9966fc3, rt0.c1)) BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c2, v0.c0, rt0.c2)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((v0.c0, v0.c0, v0.c0, v0.c1, rt0.c2)) NOT BETWEEN ((((v0.c0) NOT NULL), (rt0.c1 IN ()), v0.c0, (+ (rt0.c2)), (NOT (rt0.c1)))) AND ((((x'')AND(v0.c0)), CASE WHEN '-526414311' THEN 197466290 END, (((('30')AND(v0.c0)))OR(v0.c1)), rt0.c0, v0.c2))) DESC);
SELECT COUNT(*) FROM rt0, v0 WHERE (((CASE WHEN v0.c0 THEN rt0.c2 WHEN v0.c2 THEN rt0.c2 WHEN v0.c2 THEN v0.c0 END)==((((rt0.c0, 0xffffffffe9966fc3, rt0.c1)) BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c2, v0.c0, rt0.c2)))))) ORDER BY (((v0.c0, v0.c0, v0.c0, v0.c1, rt0.c2)) NOT BETWEEN ((((v0.c0) NOT NULL), (rt0.c1 IN ()), v0.c0, (+ (rt0.c2)), (NOT (rt0.c1)))) AND ((((x'')AND(v0.c0)), CASE WHEN '-526414311' THEN 197466290 END, (((('30')AND(v0.c0)))OR(v0.c1)), rt0.c0, v0.c2))) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2)AND(v0.c1))) NOT BETWEEN (NULL) AND (CAST(v0.c0 AS REAL)))) ORDER BY v0.c1 COLLATE RTRIM COLLATE RTRIM COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c2)AND(v0.c1))) NOT BETWEEN (NULL) AND (CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0 ORDER BY v0.c1 COLLATE RTRIM COLLATE RTRIM COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2)AND(v0.c1))) NOT BETWEEN (NULL) AND (CAST(v0.c0 AS REAL)))) ORDER BY v0.c1 COLLATE RTRIM COLLATE RTRIM COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c2)AND(v0.c1))) NOT BETWEEN (NULL) AND (CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0 ORDER BY v0.c1 COLLATE RTRIM COLLATE RTRIM COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2)AND(v0.c1))) NOT BETWEEN (NULL) AND (CAST(v0.c0 AS REAL)))) ORDER BY v0.c1 COLLATE RTRIM COLLATE RTRIM COLLATE BINARY DESC;
SELECT * FROM v0 NATURAL JOIN rt0 WHERE (HEX(DISTINCT (x'' IN ())));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT (x'' IN ()))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT * FROM v0 NATURAL JOIN rt0 WHERE (HEX(DISTINCT (x'' IN ())));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT (x'' IN ()))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT * FROM v0 NATURAL JOIN rt0 WHERE (HEX(DISTINCT (x'' IN ())));
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (CASE ((rt0.c0) NOT BETWEEN (v0.c2) AND (rt0.c0))  WHEN 'I쌠<t짛' THEN ((v0.c1)+(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0) NOT BETWEEN (v0.c2) AND (rt0.c0))  WHEN 'I쌠<t짛' THEN ((v0.c1)+(rt0.c0)) END) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (CASE ((rt0.c0) NOT BETWEEN (v0.c2) AND (rt0.c0))  WHEN 'I쌠<t짛' THEN ((v0.c1)+(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0) NOT BETWEEN (v0.c2) AND (rt0.c0))  WHEN 'I쌠<t짛' THEN ((v0.c1)+(rt0.c0)) END) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (CASE ((rt0.c0) NOT BETWEEN (v0.c2) AND (rt0.c0))  WHEN 'I쌠<t짛' THEN ((v0.c1)+(rt0.c0)) END);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE rtreenode(rt0.c0, rt0.c0)  WHEN LIKELY(DISTINCT NULL) THEN (v0.c1 IN ()) WHEN (((rt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c2))) THEN CAST(v0.c1 AS NUMERIC) WHEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c2)) THEN HEX(rt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rtreenode(rt0.c0, rt0.c0)  WHEN LIKELY(DISTINCT NULL) THEN (v0.c1 IN ()) WHEN (((rt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c2))) THEN CAST(v0.c1 AS NUMERIC) WHEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c2)) THEN HEX(rt0.c0) END) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE rtreenode(rt0.c0, rt0.c0)  WHEN LIKELY(DISTINCT NULL) THEN (v0.c1 IN ()) WHEN (((rt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c2))) THEN CAST(v0.c1 AS NUMERIC) WHEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c2)) THEN HEX(rt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rtreenode(rt0.c0, rt0.c0)  WHEN LIKELY(DISTINCT NULL) THEN (v0.c1 IN ()) WHEN (((rt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c2))) THEN CAST(v0.c1 AS NUMERIC) WHEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c2)) THEN HEX(rt0.c0) END) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE rtreenode(rt0.c0, rt0.c0)  WHEN LIKELY(DISTINCT NULL) THEN (v0.c1 IN ()) WHEN (((rt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c2))) THEN CAST(v0.c1 AS NUMERIC) WHEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c2)) THEN HEX(rt0.c0) END);
SELECT COUNT(*) FROM rt0 WHERE (((('D-9✷oZ_w\r')) BETWEEN (((rt0.c2 IN ()))) AND ((((rt0.c0)<(rt0.c2)))))) ORDER BY (((rt0.c1)|(rt0.c1)) IN (((rt0.c0)-(0.7400245291525186))));
SELECT SUM(count) FROM (SELECT ((((('D-9✷oZ_w\r')) BETWEEN (((rt0.c2 IN ()))) AND ((((rt0.c0)<(rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)|(rt0.c1)) IN (((rt0.c0)-(0.7400245291525186)))));
SELECT COUNT(*) FROM rt0 WHERE (((('D-9✷oZ_w\r')) BETWEEN (((rt0.c2 IN ()))) AND ((((rt0.c0)<(rt0.c2)))))) ORDER BY (((rt0.c1)|(rt0.c1)) IN (((rt0.c0)-(0.7400245291525186))));
SELECT SUM(count) FROM (SELECT ((((('D-9✷oZ_w\r')) BETWEEN (((rt0.c2 IN ()))) AND ((((rt0.c0)<(rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)|(rt0.c1)) IN (((rt0.c0)-(0.7400245291525186)))));
SELECT COUNT(*) FROM rt0 WHERE (((('D-9✷oZ_w\r')) BETWEEN (((rt0.c2 IN ()))) AND ((((rt0.c0)<(rt0.c2)))))) ORDER BY (((rt0.c1)|(rt0.c1)) IN (((rt0.c0)-(0.7400245291525186))));
SELECT ALL * FROM v0, rt0 WHERE ((((((rt0.c1)/(rt0.c2))))>((CASE WHEN v0.c2 THEN rt0.c2 ELSE v0.c1 END))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)/(rt0.c2))))>((CASE WHEN v0.c2 THEN rt0.c2 ELSE v0.c1 END)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((((rt0.c1)/(rt0.c2))))>((CASE WHEN v0.c2 THEN rt0.c2 ELSE v0.c1 END))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)/(rt0.c2))))>((CASE WHEN v0.c2 THEN rt0.c2 ELSE v0.c1 END)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((((rt0.c1)/(rt0.c2))))>((CASE WHEN v0.c2 THEN rt0.c2 ELSE v0.c1 END))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((v0.c0, v0.c2, v0.c1, v0.c1, -2108585823))<((v0.c0, v0.c0, v0.c0, v0.c1, v0.c1))))AND(v0.c1)))OR(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c0, v0.c2, v0.c1, v0.c1, -2108585823))<((v0.c0, v0.c0, v0.c0, v0.c1, v0.c1))))AND(v0.c1)))OR(v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((v0.c0, v0.c2, v0.c1, v0.c1, -2108585823))<((v0.c0, v0.c0, v0.c0, v0.c1, v0.c1))))AND(v0.c1)))OR(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c0, v0.c2, v0.c1, v0.c1, -2108585823))<((v0.c0, v0.c0, v0.c0, v0.c1, v0.c1))))AND(v0.c1)))OR(v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((v0.c0, v0.c2, v0.c1, v0.c1, -2108585823))<((v0.c0, v0.c0, v0.c0, v0.c1, v0.c1))))AND(v0.c1)))OR(v0.c0)));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c2))<((rt0.c0))) IN ((((v0.c2, rt0.c0, v0.c0, rt0.c2, NULL))<=((v0.c1, rt0.c1, rt0.c0, v0.c2, v0.c1))))) WHERE ((- (((rt0.c2)IS NOT(rt0.c2))))) ORDER BY CASE WHEN (('')AND(v0.c0)) THEN rt0.c2 WHEN (NOT (v0.c1)) THEN (((v0.c0))==((v0.c2))) WHEN (rt0.c1 IN ()) THEN ((rt0.c2)%(rt0.c0)) END DESC, (~ (rt0.c1));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c2)IS NOT(rt0.c2))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c2))<((rt0.c0))) IN ((((v0.c2, rt0.c0, v0.c0, rt0.c2, NULL))<=((v0.c1, rt0.c1, rt0.c0, v0.c2, v0.c1))))) ORDER BY CASE WHEN (('')AND(v0.c0)) THEN rt0.c2 WHEN (NOT (v0.c1)) THEN (((v0.c0))==((v0.c2))) WHEN (rt0.c1 IN ()) THEN ((rt0.c2)%(rt0.c0)) END DESC, (~ (rt0.c1)));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c2))<((rt0.c0))) IN ((((v0.c2, rt0.c0, v0.c0, rt0.c2, NULL))<=((v0.c1, rt0.c1, rt0.c0, v0.c2, v0.c1))))) WHERE ((- (((rt0.c2)IS NOT(rt0.c2))))) ORDER BY CASE WHEN (('')AND(v0.c0)) THEN rt0.c2 WHEN (NOT (v0.c1)) THEN (((v0.c0))==((v0.c2))) WHEN (rt0.c1 IN ()) THEN ((rt0.c2)%(rt0.c0)) END DESC, (~ (rt0.c1));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c2)IS NOT(rt0.c2))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c2))<((rt0.c0))) IN ((((v0.c2, rt0.c0, v0.c0, rt0.c2, NULL))<=((v0.c1, rt0.c1, rt0.c0, v0.c2, v0.c1))))) ORDER BY CASE WHEN (('')AND(v0.c0)) THEN rt0.c2 WHEN (NOT (v0.c1)) THEN (((v0.c0))==((v0.c2))) WHEN (rt0.c1 IN ()) THEN ((rt0.c2)%(rt0.c0)) END DESC, (~ (rt0.c1)));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c2))<((rt0.c0))) IN ((((v0.c2, rt0.c0, v0.c0, rt0.c2, NULL))<=((v0.c1, rt0.c1, rt0.c0, v0.c2, v0.c1))))) WHERE ((- (((rt0.c2)IS NOT(rt0.c2))))) ORDER BY CASE WHEN (('')AND(v0.c0)) THEN rt0.c2 WHEN (NOT (v0.c1)) THEN (((v0.c0))==((v0.c2))) WHEN (rt0.c1 IN ()) THEN ((rt0.c2)%(rt0.c0)) END DESC, (~ (rt0.c1));
SELECT COUNT(*) FROM rt0, v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (v0.c1);
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c1) IS FALSE) COLLATE RTRIM) ORDER BY (- (rt0.c2));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0 ORDER BY (- (rt0.c2)));
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c1) IS FALSE) COLLATE RTRIM) ORDER BY (- (rt0.c2));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0 ORDER BY (- (rt0.c2)));
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c1) IS FALSE) COLLATE RTRIM) ORDER BY (- (rt0.c2));
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((CAST(rt0.c1 AS NUMERIC), (((-1.17607355E9, rt0.c2, rt0.c2))<((v0.c2, rt0.c2, rt0.c1))), CASE WHEN 0.8716332216262106 THEN v0.c1 END)) AND (((v0.c1 IN (v0.c1)), (v0.c0 IN ()), ((rt0.c1) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((CAST(rt0.c1 AS NUMERIC), (((-1.17607355E9, rt0.c2, rt0.c2))<((v0.c2, rt0.c2, rt0.c1))), CASE WHEN 0.8716332216262106 THEN v0.c1 END)) AND (((v0.c1 IN (v0.c1)), (v0.c0 IN ()), ((rt0.c1) NOT NULL))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((CAST(rt0.c1 AS NUMERIC), (((-1.17607355E9, rt0.c2, rt0.c2))<((v0.c2, rt0.c2, rt0.c1))), CASE WHEN 0.8716332216262106 THEN v0.c1 END)) AND (((v0.c1 IN (v0.c1)), (v0.c0 IN ()), ((rt0.c1) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((CAST(rt0.c1 AS NUMERIC), (((-1.17607355E9, rt0.c2, rt0.c2))<((v0.c2, rt0.c2, rt0.c1))), CASE WHEN 0.8716332216262106 THEN v0.c1 END)) AND (((v0.c1 IN (v0.c1)), (v0.c0 IN ()), ((rt0.c1) NOT NULL))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((CAST(rt0.c1 AS NUMERIC), (((-1.17607355E9, rt0.c2, rt0.c2))<((v0.c2, rt0.c2, rt0.c1))), CASE WHEN 0.8716332216262106 THEN v0.c1 END)) AND (((v0.c1 IN (v0.c1)), (v0.c0 IN ()), ((rt0.c1) NOT NULL)))));
SELECT * FROM rt0 WHERE ((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)) IN ())) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END) NOT BETWEEN (('<Z' IN (rt0.c1))) AND ((NOT (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END) NOT BETWEEN (('<Z' IN (rt0.c1))) AND ((NOT (rt0.c2)))));
SELECT * FROM rt0 WHERE ((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)) IN ())) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END) NOT BETWEEN (('<Z' IN (rt0.c1))) AND ((NOT (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END) NOT BETWEEN (('<Z' IN (rt0.c1))) AND ((NOT (rt0.c2)))));
SELECT * FROM rt0 WHERE ((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)) IN ())) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END) NOT BETWEEN (('<Z' IN (rt0.c1))) AND ((NOT (rt0.c2))));
SELECT * FROM v0 WHERE (((((v0.c0)/(v0.c0))) NOTNULL)) ORDER BY v0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)/(v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY v0.c1);
SELECT * FROM v0 WHERE (((((v0.c0)/(v0.c0))) NOTNULL)) ORDER BY v0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)/(v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY v0.c1);
SELECT * FROM v0 WHERE (((((v0.c0)/(v0.c0))) NOTNULL)) ORDER BY v0.c1;
SELECT COUNT(*) FROM v0, rt0 WHERE (((v0.c0) ISNULL) COLLATE RTRIM) ORDER BY CASE NULL  WHEN (((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c2))) THEN CAST(v0.c1 AS REAL) ELSE CASE v0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN x'' THEN v0.c2 WHEN rt0.c1 THEN v0.c2 ELSE v0.c1 END END;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE NULL  WHEN (((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c2))) THEN CAST(v0.c1 AS REAL) ELSE CASE v0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN x'' THEN v0.c2 WHEN rt0.c1 THEN v0.c2 ELSE v0.c1 END END);
SELECT COUNT(*) FROM v0, rt0 WHERE (((v0.c0) ISNULL) COLLATE RTRIM) ORDER BY CASE NULL  WHEN (((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c2))) THEN CAST(v0.c1 AS REAL) ELSE CASE v0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN x'' THEN v0.c2 WHEN rt0.c1 THEN v0.c2 ELSE v0.c1 END END;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE NULL  WHEN (((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c2))) THEN CAST(v0.c1 AS REAL) ELSE CASE v0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN x'' THEN v0.c2 WHEN rt0.c1 THEN v0.c2 ELSE v0.c1 END END);
SELECT COUNT(*) FROM v0, rt0 WHERE (((v0.c0) ISNULL) COLLATE RTRIM) ORDER BY CASE NULL  WHEN (((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c2))) THEN CAST(v0.c1 AS REAL) ELSE CASE v0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN x'' THEN v0.c2 WHEN rt0.c1 THEN v0.c2 ELSE v0.c1 END END;
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((((((((((v0.c2) BETWEEN (rt0.c0) AND (NULL)))OR((((rt0.c2)) NOT BETWEEN ((v0.c1)) AND ((x''))))))AND(v0.c0 COLLATE RTRIM)))OR(v0.c0)))OR(LAST_INSERT_ROWID())))AND(rt0.c0 COLLATE NOCASE)))OR(((0.7654235188779085) NOT BETWEEN (v0.c2) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((v0.c2) BETWEEN (rt0.c0) AND (NULL)))OR((((rt0.c2)) NOT BETWEEN ((v0.c1)) AND ((x''))))))AND(v0.c0 COLLATE RTRIM)))OR(v0.c0)))OR(LAST_INSERT_ROWID())))AND(rt0.c0 COLLATE NOCASE)))OR(((0.7654235188779085) NOT BETWEEN (v0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((((((((((v0.c2) BETWEEN (rt0.c0) AND (NULL)))OR((((rt0.c2)) NOT BETWEEN ((v0.c1)) AND ((x''))))))AND(v0.c0 COLLATE RTRIM)))OR(v0.c0)))OR(LAST_INSERT_ROWID())))AND(rt0.c0 COLLATE NOCASE)))OR(((0.7654235188779085) NOT BETWEEN (v0.c2) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((v0.c2) BETWEEN (rt0.c0) AND (NULL)))OR((((rt0.c2)) NOT BETWEEN ((v0.c1)) AND ((x''))))))AND(v0.c0 COLLATE RTRIM)))OR(v0.c0)))OR(LAST_INSERT_ROWID())))AND(rt0.c0 COLLATE NOCASE)))OR(((0.7654235188779085) NOT BETWEEN (v0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((((((((((v0.c2) BETWEEN (rt0.c0) AND (NULL)))OR((((rt0.c2)) NOT BETWEEN ((v0.c1)) AND ((x''))))))AND(v0.c0 COLLATE RTRIM)))OR(v0.c0)))OR(LAST_INSERT_ROWID())))AND(rt0.c0 COLLATE NOCASE)))OR(((0.7654235188779085) NOT BETWEEN (v0.c2) AND (rt0.c2)))));
SELECT * FROM rt0 WHERE (CASE WHEN TYPEOF(DISTINCT rt0.c0) THEN ((rt0.c2)%(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN TYPEOF(DISTINCT rt0.c0) THEN ((rt0.c2)%(rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN TYPEOF(DISTINCT rt0.c0) THEN ((rt0.c2)%(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN TYPEOF(DISTINCT rt0.c0) THEN ((rt0.c2)%(rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN TYPEOF(DISTINCT rt0.c0) THEN ((rt0.c2)%(rt0.c2)) END);
SELECT * FROM v0 WHERE (((((((((((((((((v0.c0)AND(v0.c1)))OR(v0.c2)))AND(v0.c0)))OR(v0.c2)))AND(((((v0.c0)OR(v0.c0)))OR(NULL)))))OR(NULLIF(-810084249, v0.c0))))OR(v0.c1 COLLATE RTRIM)))OR(((v0.c1) BETWEEN (v0.c2) AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((v0.c0)AND(v0.c1)))OR(v0.c2)))AND(v0.c0)))OR(v0.c2)))AND(((((v0.c0)OR(v0.c0)))OR(NULL)))))OR(NULLIF(-810084249, v0.c0))))OR(v0.c1 COLLATE RTRIM)))OR(((v0.c1) BETWEEN (v0.c2) AND (v0.c1))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((((((((((((v0.c0)AND(v0.c1)))OR(v0.c2)))AND(v0.c0)))OR(v0.c2)))AND(((((v0.c0)OR(v0.c0)))OR(NULL)))))OR(NULLIF(-810084249, v0.c0))))OR(v0.c1 COLLATE RTRIM)))OR(((v0.c1) BETWEEN (v0.c2) AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((v0.c0)AND(v0.c1)))OR(v0.c2)))AND(v0.c0)))OR(v0.c2)))AND(((((v0.c0)OR(v0.c0)))OR(NULL)))))OR(NULLIF(-810084249, v0.c0))))OR(v0.c1 COLLATE RTRIM)))OR(((v0.c1) BETWEEN (v0.c2) AND (v0.c1))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((((((((((((v0.c0)AND(v0.c1)))OR(v0.c2)))AND(v0.c0)))OR(v0.c2)))AND(((((v0.c0)OR(v0.c0)))OR(NULL)))))OR(NULLIF(-810084249, v0.c0))))OR(v0.c1 COLLATE RTRIM)))OR(((v0.c1) BETWEEN (v0.c2) AND (v0.c1)))));
SELECT ALL * FROM v0 WHERE (CAST(v0.c2 AS REAL)) ORDER BY (((((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c2))))AND(((v0.c2)AND(NULL)))))AND(v0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c2 AS REAL)) IS TRUE)  as count FROM v0 ORDER BY (((((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c2))))AND(((v0.c2)AND(NULL)))))AND(v0.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (CAST(v0.c2 AS REAL)) ORDER BY (((((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c2))))AND(((v0.c2)AND(NULL)))))AND(v0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c2 AS REAL)) IS TRUE)  as count FROM v0 ORDER BY (((((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c2))))AND(((v0.c2)AND(NULL)))))AND(v0.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (CAST(v0.c2 AS REAL)) ORDER BY (((((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c2))))AND(((v0.c2)AND(NULL)))))AND(v0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)<=(rt0.c1)))IS NOT(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)<=(rt0.c1)))IS NOT(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)<=(rt0.c1)))IS NOT(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)<=(rt0.c1)))IS NOT(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)<=(rt0.c1)))IS NOT(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c2 COLLATE NOCASE)AND(((rt0.c1)<<(rt0.c0)))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2 COLLATE NOCASE)AND(((rt0.c1)<<(rt0.c0)))))AND(NULL))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c2 COLLATE NOCASE)AND(((rt0.c1)<<(rt0.c0)))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2 COLLATE NOCASE)AND(((rt0.c1)<<(rt0.c0)))))AND(NULL))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c2 COLLATE NOCASE)AND(((rt0.c1)<<(rt0.c0)))))AND(NULL)));
SELECT ALL * FROM v0 WHERE ((((((((((v0.c1)AND(v0.c1)))OR(v0.c1)))OR(v0.c2)))AND(v0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((v0.c1)AND(v0.c1)))OR(v0.c1)))OR(v0.c2)))AND(v0.c1)) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((((((v0.c1)AND(v0.c1)))OR(v0.c1)))OR(v0.c2)))AND(v0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((v0.c1)AND(v0.c1)))OR(v0.c1)))OR(v0.c2)))AND(v0.c1)) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((((((v0.c1)AND(v0.c1)))OR(v0.c1)))OR(v0.c2)))AND(v0.c1)) IN ()));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST(CASE v0.c0  WHEN v0.c0 THEN rt0.c0 ELSE rt0.c0 END AS INTEGER)) ORDER BY (((((((rt0.c0))<=((v0.c1))))AND((rt0.c2 IN ()))))AND(((((rt0.c0)OR(v0.c1)))OR(rt0.c2)))) ASC  NULLS FIRST, TRIM(((v0.c1)>=(v0.c2)), ((rt0.c0) BETWEEN (rt0.c1) AND ('\r퉅&x'))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE v0.c0  WHEN v0.c0 THEN rt0.c0 ELSE rt0.c0 END AS INTEGER)) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((((rt0.c0))<=((v0.c1))))AND((rt0.c2 IN ()))))AND(((((rt0.c0)OR(v0.c1)))OR(rt0.c2)))) ASC  NULLS FIRST, TRIM(((v0.c1)>=(v0.c2)), ((rt0.c0) BETWEEN (rt0.c1) AND ('\r퉅&x'))) DESC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST(CASE v0.c0  WHEN v0.c0 THEN rt0.c0 ELSE rt0.c0 END AS INTEGER)) ORDER BY (((((((rt0.c0))<=((v0.c1))))AND((rt0.c2 IN ()))))AND(((((rt0.c0)OR(v0.c1)))OR(rt0.c2)))) ASC  NULLS FIRST, TRIM(((v0.c1)>=(v0.c2)), ((rt0.c0) BETWEEN (rt0.c1) AND ('\r퉅&x'))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE v0.c0  WHEN v0.c0 THEN rt0.c0 ELSE rt0.c0 END AS INTEGER)) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((((rt0.c0))<=((v0.c1))))AND((rt0.c2 IN ()))))AND(((((rt0.c0)OR(v0.c1)))OR(rt0.c2)))) ASC  NULLS FIRST, TRIM(((v0.c1)>=(v0.c2)), ((rt0.c0) BETWEEN (rt0.c1) AND ('\r퉅&x'))) DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE (((v0.c1) ISNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((v0.c1) ISNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((v0.c1) ISNULL) COLLATE BINARY);
SELECT ALL * FROM v0 WHERE ((+ (v0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((+ (v0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((+ (v0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((+ (v0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((+ (v0.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((v0.c1 COLLATE RTRIM) BETWEEN (((v0.c2)|(rt0.c1))) AND (v0.c2 COLLATE BINARY))) ORDER BY ((((CASE rt0.c2  WHEN v0.c0 THEN v0.c1 END)AND(((('')) BETWEEN ((rt0.c0)) AND ((v0.c1))))))OR((~ (rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1 COLLATE RTRIM) BETWEEN (((v0.c2)|(rt0.c1))) AND (v0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((CASE rt0.c2  WHEN v0.c0 THEN v0.c1 END)AND(((('')) BETWEEN ((rt0.c0)) AND ((v0.c1))))))OR((~ (rt0.c1)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((v0.c1 COLLATE RTRIM) BETWEEN (((v0.c2)|(rt0.c1))) AND (v0.c2 COLLATE BINARY))) ORDER BY ((((CASE rt0.c2  WHEN v0.c0 THEN v0.c1 END)AND(((('')) BETWEEN ((rt0.c0)) AND ((v0.c1))))))OR((~ (rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1 COLLATE RTRIM) BETWEEN (((v0.c2)|(rt0.c1))) AND (v0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((CASE rt0.c2  WHEN v0.c0 THEN v0.c1 END)AND(((('')) BETWEEN ((rt0.c0)) AND ((v0.c1))))))OR((~ (rt0.c1)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((v0.c1 COLLATE RTRIM) BETWEEN (((v0.c2)|(rt0.c1))) AND (v0.c2 COLLATE BINARY))) ORDER BY ((((CASE rt0.c2  WHEN v0.c0 THEN v0.c1 END)AND(((('')) BETWEEN ((rt0.c0)) AND ((v0.c1))))))OR((~ (rt0.c1)))) ASC  NULLS FIRST;
SELECT * FROM rt0, v0 WHERE (((((v0.c0) NOTNULL))>(((rt0.c2) IS FALSE)))) ORDER BY rt0.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOTNULL))>(((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c2 DESC  NULLS LAST);
SELECT * FROM rt0, v0 WHERE (((((v0.c0) NOTNULL))>(((rt0.c2) IS FALSE)))) ORDER BY rt0.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOTNULL))>(((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c2 DESC  NULLS LAST);
SELECT * FROM rt0, v0 WHERE (((((v0.c0) NOTNULL))>(((rt0.c2) IS FALSE)))) ORDER BY rt0.c2 DESC  NULLS LAST;
SELECT * FROM v0 WHERE (((v0.c2) IS FALSE) COLLATE BINARY) ORDER BY (+ (((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY (+ (((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2)))) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (((v0.c2) IS FALSE) COLLATE BINARY) ORDER BY (+ (((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY (+ (((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2)))) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (((v0.c2) IS FALSE) COLLATE BINARY) ORDER BY (+ (((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((+ ((3.80875586E8 IN (v0.c0))))) ORDER BY ((((((rt0.c2)AND(rt0.c0)))OR(v0.c2)))+(((v0.c2) BETWEEN (0.3163425428280956) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((3.80875586E8 IN (v0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((rt0.c2)AND(rt0.c0)))OR(v0.c2)))+(((v0.c2) BETWEEN (0.3163425428280956) AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((+ ((3.80875586E8 IN (v0.c0))))) ORDER BY ((((((rt0.c2)AND(rt0.c0)))OR(v0.c2)))+(((v0.c2) BETWEEN (0.3163425428280956) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((3.80875586E8 IN (v0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((rt0.c2)AND(rt0.c0)))OR(v0.c2)))+(((v0.c2) BETWEEN (0.3163425428280956) AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((+ ((3.80875586E8 IN (v0.c0))))) ORDER BY ((((((rt0.c2)AND(rt0.c0)))OR(v0.c2)))+(((v0.c2) BETWEEN (0.3163425428280956) AND (rt0.c1))));
SELECT * FROM rt0, v0 WHERE (CAST(v0.c0 COLLATE NOCASE AS BLOB)) ORDER BY TRIM(DISTINCT ((rt0.c0)OR(v0.c1)))  NULLS LAST, ((((rt0.c1)&(v0.c0))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM rt0, v0 ORDER BY TRIM(DISTINCT ((rt0.c0)OR(v0.c1)))  NULLS LAST, ((((rt0.c1)&(v0.c0))) ISNULL) DESC);
SELECT * FROM rt0, v0 WHERE (CAST(v0.c0 COLLATE NOCASE AS BLOB)) ORDER BY TRIM(DISTINCT ((rt0.c0)OR(v0.c1)))  NULLS LAST, ((((rt0.c1)&(v0.c0))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM rt0, v0 ORDER BY TRIM(DISTINCT ((rt0.c0)OR(v0.c1)))  NULLS LAST, ((((rt0.c1)&(v0.c0))) ISNULL) DESC);
SELECT * FROM rt0, v0 WHERE (CAST(v0.c0 COLLATE NOCASE AS BLOB)) ORDER BY TRIM(DISTINCT ((rt0.c0)OR(v0.c1)))  NULLS LAST, ((((rt0.c1)&(v0.c0))) ISNULL) DESC;
SELECT ALL * FROM v0 WHERE (((((v0.c2) NOT BETWEEN ('') AND (v0.c2))) NOTNULL)) ORDER BY ((((((v0.c0) NOT BETWEEN (v0.c2) AND ('')))AND((v0.c0 IN (v0.c0)))))AND((('')GLOB(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c2) NOT BETWEEN ('') AND (v0.c2))) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0) NOT BETWEEN (v0.c2) AND ('')))AND((v0.c0 IN (v0.c0)))))AND((('')GLOB(v0.c0))))  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((((v0.c2) NOT BETWEEN ('') AND (v0.c2))) NOTNULL)) ORDER BY ((((((v0.c0) NOT BETWEEN (v0.c2) AND ('')))AND((v0.c0 IN (v0.c0)))))AND((('')GLOB(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c2) NOT BETWEEN ('') AND (v0.c2))) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0) NOT BETWEEN (v0.c2) AND ('')))AND((v0.c0 IN (v0.c0)))))AND((('')GLOB(v0.c0))))  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((((v0.c2) NOT BETWEEN ('') AND (v0.c2))) NOTNULL)) ORDER BY ((((((v0.c0) NOT BETWEEN (v0.c2) AND ('')))AND((v0.c0 IN (v0.c0)))))AND((('')GLOB(v0.c0))))  NULLS LAST;
SELECT * FROM rt0, v0 WHERE (((((v0.c1) BETWEEN (v0.c1) AND (v0.c2))) BETWEEN (CASE v0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE v0.c1 END) AND ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((1.05235478E8)))))) ORDER BY ((rt0.c2 COLLATE RTRIM)AND(CAST(v0.c1 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) BETWEEN (v0.c1) AND (v0.c2))) BETWEEN (CASE v0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE v0.c1 END) AND ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((1.05235478E8)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((rt0.c2 COLLATE RTRIM)AND(CAST(v0.c1 AS TEXT))));
SELECT * FROM rt0, v0 WHERE (((((v0.c1) BETWEEN (v0.c1) AND (v0.c2))) BETWEEN (CASE v0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE v0.c1 END) AND ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((1.05235478E8)))))) ORDER BY ((rt0.c2 COLLATE RTRIM)AND(CAST(v0.c1 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) BETWEEN (v0.c1) AND (v0.c2))) BETWEEN (CASE v0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE v0.c1 END) AND ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((1.05235478E8)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((rt0.c2 COLLATE RTRIM)AND(CAST(v0.c1 AS TEXT))));
SELECT * FROM rt0, v0 WHERE (((((v0.c1) BETWEEN (v0.c1) AND (v0.c2))) BETWEEN (CASE v0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE v0.c1 END) AND ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((1.05235478E8)))))) ORDER BY ((rt0.c2 COLLATE RTRIM)AND(CAST(v0.c1 AS TEXT)));
SELECT * FROM rt0 WHERE (((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)) COLLATE RTRIM) ORDER BY (('' COLLATE RTRIM)AND(((rt0.c2)<(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (('' COLLATE RTRIM)AND(((rt0.c2)<(rt0.c1))))  NULLS LAST);
SELECT * FROM rt0 WHERE (((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)) COLLATE RTRIM) ORDER BY (('' COLLATE RTRIM)AND(((rt0.c2)<(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (('' COLLATE RTRIM)AND(((rt0.c2)<(rt0.c1))))  NULLS LAST);
SELECT * FROM rt0 WHERE (((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)) COLLATE RTRIM) ORDER BY (('' COLLATE RTRIM)AND(((rt0.c2)<(rt0.c1))))  NULLS LAST;
SELECT * FROM v0 WHERE (NULL) ORDER BY (((v0.c0)>>(v0.c2)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)>>(v0.c2)) IN ()) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (NULL) ORDER BY (((v0.c0)>>(v0.c2)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)>>(v0.c2)) IN ()) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (NULL) ORDER BY (((v0.c0)>>(v0.c2)) IN ()) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON (((((('hCl')AND(v0.c2)))AND(rt0.c0))) BETWEEN (v0.c0 COLLATE NOCASE) AND (rt0.c0 COLLATE NOCASE)) WHERE (CAST(rt0.c2 AS REAL) COLLATE RTRIM) ORDER BY rt0.c0 ASC, (((v0.c1 IN (v0.c2, x''))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (((((('hCl')AND(v0.c2)))AND(rt0.c0))) BETWEEN (v0.c0 COLLATE NOCASE) AND (rt0.c0 COLLATE NOCASE)) ORDER BY rt0.c0 ASC, (((v0.c1 IN (v0.c2, x''))) NOTNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON (((((('hCl')AND(v0.c2)))AND(rt0.c0))) BETWEEN (v0.c0 COLLATE NOCASE) AND (rt0.c0 COLLATE NOCASE)) WHERE (CAST(rt0.c2 AS REAL) COLLATE RTRIM) ORDER BY rt0.c0 ASC, (((v0.c1 IN (v0.c2, x''))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (((((('hCl')AND(v0.c2)))AND(rt0.c0))) BETWEEN (v0.c0 COLLATE NOCASE) AND (rt0.c0 COLLATE NOCASE)) ORDER BY rt0.c0 ASC, (((v0.c1 IN (v0.c2, x''))) NOTNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON (((((('hCl')AND(v0.c2)))AND(rt0.c0))) BETWEEN (v0.c0 COLLATE NOCASE) AND (rt0.c0 COLLATE NOCASE)) WHERE (CAST(rt0.c2 AS REAL) COLLATE RTRIM) ORDER BY rt0.c0 ASC, (((v0.c1 IN (v0.c2, x''))) NOTNULL)  NULLS LAST;
SELECT * FROM v0 WHERE ((- (((v0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((- (((v0.c2) NOT NULL)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((- (((v0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((- (((v0.c2) NOT NULL)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((- (((v0.c2) NOT NULL))));
SELECT * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (0.4218545942817741))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (0.4218545942817741))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (0.4218545942817741))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (0.4218545942817741))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (0.4218545942817741))) IS TRUE));
SELECT COUNT(*) FROM rt0 WHERE (CASE ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))  WHEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END THEN rt0.c2 WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c0)>(rt0.c1)) WHEN ('3.ePg' IN ()) THEN ((rt0.c0) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))  WHEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END THEN rt0.c2 WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c0)>(rt0.c1)) WHEN ('3.ePg' IN ()) THEN ((rt0.c0) IS FALSE) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))  WHEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END THEN rt0.c2 WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c0)>(rt0.c1)) WHEN ('3.ePg' IN ()) THEN ((rt0.c0) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))  WHEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END THEN rt0.c2 WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c0)>(rt0.c1)) WHEN ('3.ePg' IN ()) THEN ((rt0.c0) IS FALSE) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))  WHEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END THEN rt0.c2 WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c0)>(rt0.c1)) WHEN ('3.ePg' IN ()) THEN ((rt0.c0) IS FALSE) END);
SELECT * FROM rt0 CROSS JOIN v0 ON ((((((((rt0.c1)OR(rt0.c1)))OR(v0.c1)))AND((rt0.c0 IN ()))))AND(rt0.c2)) WHERE (((((v0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))/(((((v0.c2)OR('-1826847034')))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))/(((((v0.c2)OR('-1826847034')))OR(v0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((((((((rt0.c1)OR(rt0.c1)))OR(v0.c1)))AND((rt0.c0 IN ()))))AND(rt0.c2)));
SELECT * FROM rt0 CROSS JOIN v0 ON ((((((((rt0.c1)OR(rt0.c1)))OR(v0.c1)))AND((rt0.c0 IN ()))))AND(rt0.c2)) WHERE (((((v0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))/(((((v0.c2)OR('-1826847034')))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))/(((((v0.c2)OR('-1826847034')))OR(v0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((((((((rt0.c1)OR(rt0.c1)))OR(v0.c1)))AND((rt0.c0 IN ()))))AND(rt0.c2)));
SELECT * FROM rt0 CROSS JOIN v0 ON ((((((((rt0.c1)OR(rt0.c1)))OR(v0.c1)))AND((rt0.c0 IN ()))))AND(rt0.c2)) WHERE (((((v0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))/(((((v0.c2)OR('-1826847034')))OR(v0.c0)))));
SELECT * FROM rt0 NATURAL JOIN v0 WHERE (((v0.c2) BETWEEN (((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c1))) AND ((- (v0.c2))))) ORDER BY ((CAST(v0.c1 AS NUMERIC))==(CASE WHEN v0.c2 THEN rt0.c0 END)), (~ ((v0.c1 IN (v0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c2) BETWEEN (((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c1))) AND ((- (v0.c2))))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY ((CAST(v0.c1 AS NUMERIC))=(CASE WHEN v0.c2 THEN rt0.c0 END)), (~ ((v0.c1 IN (v0.c1)))) ASC);
SELECT * FROM rt0 NATURAL JOIN v0 WHERE (((v0.c2) BETWEEN (((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c1))) AND ((- (v0.c2))))) ORDER BY ((CAST(v0.c1 AS NUMERIC))==(CASE WHEN v0.c2 THEN rt0.c0 END)), (~ ((v0.c1 IN (v0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c2) BETWEEN (((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c1))) AND ((- (v0.c2))))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY ((CAST(v0.c1 AS NUMERIC))=(CASE WHEN v0.c2 THEN rt0.c0 END)), (~ ((v0.c1 IN (v0.c1)))) ASC);
SELECT * FROM rt0 NATURAL JOIN v0 WHERE (((v0.c2) BETWEEN (((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c1))) AND ((- (v0.c2))))) ORDER BY ((CAST(v0.c1 AS NUMERIC))==(CASE WHEN v0.c2 THEN rt0.c0 END)), (~ ((v0.c1 IN (v0.c1)))) ASC;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON json_extract(v0.c1, rt0.c2) WHERE (CAST(0Xffffffffa563a640 AS INTEGER)) ORDER BY LIKELIHOOD((((v0.c1, v0.c2, v0.c2, rt0.c2, '-1520196032')) BETWEEN ((rt0.c1, v0.c0, v0.c2, v0.c1, rt0.c1)) AND ((rt0.c0, rt0.c2, rt0.c0, rt0.c2, v0.c2))), 0.7525153049055717) DESC  NULLS LAST, (((v0.c2 IN ()))OR(((rt0.c0) IS TRUE))) ASC, ((((v0.c0)|(rt0.c2))) BETWEEN (v0.c0 COLLATE RTRIM) AND (CAST(rt0.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(0Xffffffffa563a640 AS INTEGER)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON json_extract(v0.c1, rt0.c2) ORDER BY LIKELIHOOD((((v0.c1, v0.c2, v0.c2, rt0.c2, '-1520196032')) BETWEEN ((rt0.c1, v0.c0, v0.c2, v0.c1, rt0.c1)) AND ((rt0.c0, rt0.c2, rt0.c0, rt0.c2, v0.c2))), 0.7525153049055717) DESC  NULLS LAST, (((v0.c2 IN ()))OR(((rt0.c0) IS TRUE))) ASC, ((((v0.c0)|(rt0.c2))) BETWEEN (v0.c0 COLLATE RTRIM) AND (CAST(rt0.c0 AS TEXT)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON json_extract(v0.c1, rt0.c2) WHERE (CAST(0Xffffffffa563a640 AS INTEGER)) ORDER BY LIKELIHOOD((((v0.c1, v0.c2, v0.c2, rt0.c2, '-1520196032')) BETWEEN ((rt0.c1, v0.c0, v0.c2, v0.c1, rt0.c1)) AND ((rt0.c0, rt0.c2, rt0.c0, rt0.c2, v0.c2))), 0.7525153049055717) DESC  NULLS LAST, (((v0.c2 IN ()))OR(((rt0.c0) IS TRUE))) ASC, ((((v0.c0)|(rt0.c2))) BETWEEN (v0.c0 COLLATE RTRIM) AND (CAST(rt0.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(0Xffffffffa563a640 AS INTEGER)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON json_extract(v0.c1, rt0.c2) ORDER BY LIKELIHOOD((((v0.c1, v0.c2, v0.c2, rt0.c2, '-1520196032')) BETWEEN ((rt0.c1, v0.c0, v0.c2, v0.c1, rt0.c1)) AND ((rt0.c0, rt0.c2, rt0.c0, rt0.c2, v0.c2))), 0.7525153049055717) DESC  NULLS LAST, (((v0.c2 IN ()))OR(((rt0.c0) IS TRUE))) ASC, ((((v0.c0)|(rt0.c2))) BETWEEN (v0.c0 COLLATE RTRIM) AND (CAST(rt0.c0 AS TEXT)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((- ((x'' IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((x'' IN ())))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((- ((x'' IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((x'' IN ())))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((- ((x'' IN ()))));
SELECT ALL * FROM rt0, v0 WHERE ((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))) COLLATE RTRIM) ORDER BY ((json_extract(v0.c0, rt0.c2))*(rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0 ORDER BY ((json_extract(v0.c0, rt0.c2))*(rt0.c2))  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE ((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))) COLLATE RTRIM) ORDER BY ((json_extract(v0.c0, rt0.c2))*(rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0 ORDER BY ((json_extract(v0.c0, rt0.c2))*(rt0.c2))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (COALESCE(v0.c1, ((v0.c1)LIKE(v0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(v0.c1, ((v0.c1)LIKE(v0.c2)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (COALESCE(v0.c1, ((v0.c1)LIKE(v0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(v0.c1, ((v0.c1)LIKE(v0.c2)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (COALESCE(v0.c1, ((v0.c1)LIKE(v0.c2))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)OR(NULL)))AND(rt0.c0)) COLLATE RTRIM) ORDER BY (CASE WHEN rt0.c1 THEN rt0.c0 END IN (((rt0.c2)GLOB(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)OR(NULL)))AND(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (CASE WHEN rt0.c1 THEN rt0.c0 END IN (((rt0.c2)GLOB(rt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)OR(NULL)))AND(rt0.c0)) COLLATE RTRIM) ORDER BY (CASE WHEN rt0.c1 THEN rt0.c0 END IN (((rt0.c2)GLOB(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)OR(NULL)))AND(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (CASE WHEN rt0.c1 THEN rt0.c0 END IN (((rt0.c2)GLOB(rt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)OR(NULL)))AND(rt0.c0)) COLLATE RTRIM) ORDER BY (CASE WHEN rt0.c1 THEN rt0.c0 END IN (((rt0.c2)GLOB(rt0.c0)))) DESC  NULLS FIRST;
SELECT * FROM v0 WHERE ((CASE WHEN v0.c0 THEN v0.c1 END IN ())) ORDER BY (- (CASE v0.c2  WHEN v0.c1 THEN v0.c1 WHEN '1647317187' THEN v0.c2 WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN v0.c0 THEN v0.c1 END IN ())) IS TRUE)  as count FROM v0 ORDER BY (- (CASE v0.c2  WHEN v0.c1 THEN v0.c1 WHEN '1647317187' THEN v0.c2 WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c0 END))  NULLS LAST);
SELECT * FROM v0 WHERE ((CASE WHEN v0.c0 THEN v0.c1 END IN ())) ORDER BY (- (CASE v0.c2  WHEN v0.c1 THEN v0.c1 WHEN '1647317187' THEN v0.c2 WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN v0.c0 THEN v0.c1 END IN ())) IS TRUE)  as count FROM v0 ORDER BY (- (CASE v0.c2  WHEN v0.c1 THEN v0.c1 WHEN '1647317187' THEN v0.c2 WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c0 END))  NULLS LAST);
SELECT * FROM v0 WHERE ((CASE WHEN v0.c0 THEN v0.c1 END IN ())) ORDER BY (- (CASE v0.c2  WHEN v0.c1 THEN v0.c1 WHEN '1647317187' THEN v0.c2 WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c0 END))  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (CASE v0.c0 COLLATE RTRIM  WHEN ((((v0.c2)AND(v0.c2)))AND(v0.c2)) THEN CAST(v0.c1 AS TEXT) ELSE CAST(v0.c2 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ((CASE v0.c0 COLLATE RTRIM  WHEN ((((v0.c2)AND(v0.c2)))AND(v0.c2)) THEN CAST(v0.c1 AS TEXT) ELSE CAST(v0.c2 AS BLOB) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE v0.c0 COLLATE RTRIM  WHEN ((((v0.c2)AND(v0.c2)))AND(v0.c2)) THEN CAST(v0.c1 AS TEXT) ELSE CAST(v0.c2 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ((CASE v0.c0 COLLATE RTRIM  WHEN ((((v0.c2)AND(v0.c2)))AND(v0.c2)) THEN CAST(v0.c1 AS TEXT) ELSE CAST(v0.c2 AS BLOB) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE v0.c0 COLLATE RTRIM  WHEN ((((v0.c2)AND(v0.c2)))AND(v0.c2)) THEN CAST(v0.c1 AS TEXT) ELSE CAST(v0.c2 AS BLOB) END);
SELECT * FROM rt0 WHERE (CAST(x'' AS INTEGER)) ORDER BY 0.010652245910418245 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY 0.010652245910418245 ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (CAST(x'' AS INTEGER)) ORDER BY 0.010652245910418245 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY 0.010652245910418245 ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (CAST(x'' AS INTEGER)) ORDER BY 0.010652245910418245 ASC  NULLS FIRST;
SELECT * FROM v0 NATURAL JOIN rt0 WHERE ((((CASE v0.c0  WHEN v0.c2 THEN x'' END))<=((((((v0.c2)AND(v0.c0)))AND(rt0.c0)))))) ORDER BY ((((v0.c1) BETWEEN (v0.c2) AND (rt0.c0)))LIKE((v0.c1 IN (rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CASE v0.c0  WHEN v0.c2 THEN x'' END))<=((((((v0.c2)AND(v0.c0)))AND(rt0.c0)))))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY ((((v0.c1) BETWEEN (v0.c2) AND (rt0.c0)))LIKE((v0.c1 IN (rt0.c1)))) ASC  NULLS FIRST);
SELECT * FROM v0 NATURAL JOIN rt0 WHERE ((((CASE v0.c0  WHEN v0.c2 THEN x'' END))<=((((((v0.c2)AND(v0.c0)))AND(rt0.c0)))))) ORDER BY ((((v0.c1) BETWEEN (v0.c2) AND (rt0.c0)))LIKE((v0.c1 IN (rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CASE v0.c0  WHEN v0.c2 THEN x'' END))<=((((((v0.c2)AND(v0.c0)))AND(rt0.c0)))))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY ((((v0.c1) BETWEEN (v0.c2) AND (rt0.c0)))LIKE((v0.c1 IN (rt0.c1)))) ASC  NULLS FIRST);
SELECT * FROM v0 NATURAL JOIN rt0 WHERE ((((CASE v0.c0  WHEN v0.c2 THEN x'' END))<=((((((v0.c2)AND(v0.c0)))AND(rt0.c0)))))) ORDER BY ((((v0.c1) BETWEEN (v0.c2) AND (rt0.c0)))LIKE((v0.c1 IN (rt0.c1)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE ((+ (v0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((+ (v0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((+ (v0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((+ (v0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((+ (v0.c1 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0 WHERE (QUOTE(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)) ORDER BY rt0.c0 ASC, rt0.c2, ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) IN (((rt0.c0)/(rt0.c1)), 1256411785 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((QUOTE(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 ASC, rt0.c2, ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) IN (((rt0.c0)/(rt0.c1)), 1256411785 COLLATE BINARY)));
SELECT COUNT(*) FROM rt0 WHERE (QUOTE(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)) ORDER BY rt0.c0 ASC, rt0.c2, ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) IN (((rt0.c0)/(rt0.c1)), 1256411785 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((QUOTE(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 ASC, rt0.c2, ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) IN (((rt0.c0)/(rt0.c1)), 1256411785 COLLATE BINARY)));
SELECT COUNT(*) FROM rt0 WHERE (QUOTE(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)) ORDER BY rt0.c0 ASC, rt0.c2, ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) IN (((rt0.c0)/(rt0.c1)), 1256411785 COLLATE BINARY));
SELECT COUNT(*) FROM v0 WHERE (0x52f7bda9) ORDER BY ((v0.c0 COLLATE BINARY)+(v0.c0));
SELECT SUM(count) FROM (SELECT ALL ((0x52f7bda9) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE BINARY)+(v0.c0)));
SELECT COUNT(*) FROM v0 WHERE (0x52f7bda9) ORDER BY ((v0.c0 COLLATE BINARY)+(v0.c0));
SELECT SUM(count) FROM (SELECT ALL ((0x52f7bda9) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE BINARY)+(v0.c0)));
SELECT COUNT(*) FROM v0 WHERE (0x52f7bda9) ORDER BY ((v0.c0 COLLATE BINARY)+(v0.c0));
SELECT ALL * FROM rt0, v0 WHERE (-1.578553384E9);
SELECT SUM(count) FROM (SELECT ((-1.578553384E9) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (-1.578553384E9);
SELECT SUM(count) FROM (SELECT ((-1.578553384E9) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (-1.578553384E9);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) NOT NULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) NOT NULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) NOT NULL) COLLATE RTRIM);
SELECT ALL * FROM v0, rt0 WHERE (((((v0.c2) NOT NULL))OR(CAST(rt0.c0 AS INTEGER)))) ORDER BY (json_extract(v0.c1, rt0.c2, rt0.c0, rt0.c2) IN (ABS(DISTINCT rt0.c0), CAST(v0.c2 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2) NOT NULL))OR(CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0, rt0 ORDER BY (json_extract(v0.c1, rt0.c2, rt0.c0, rt0.c2) IN (ABS(DISTINCT rt0.c0), CAST(v0.c2 AS BLOB))) DESC);
SELECT ALL * FROM v0, rt0 WHERE (((((v0.c2) NOT NULL))OR(CAST(rt0.c0 AS INTEGER)))) ORDER BY (json_extract(v0.c1, rt0.c2, rt0.c0, rt0.c2) IN (ABS(DISTINCT rt0.c0), CAST(v0.c2 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2) NOT NULL))OR(CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0, rt0 ORDER BY (json_extract(v0.c1, rt0.c2, rt0.c0, rt0.c2) IN (ABS(DISTINCT rt0.c0), CAST(v0.c2 AS BLOB))) DESC);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON rt0.c2 WHERE (rt0.c1) ORDER BY ((((v0.c1)<(rt0.c2))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON rt0.c2 ORDER BY ((((v0.c1)<(rt0.c2))) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON rt0.c2 WHERE (rt0.c1) ORDER BY ((((v0.c1)<(rt0.c2))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON rt0.c2 ORDER BY ((((v0.c1)<(rt0.c2))) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON rt0.c2 WHERE (rt0.c1) ORDER BY ((((v0.c1)<(rt0.c2))) NOT NULL)  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((((((((((((((((v0.c0)OR(v0.c1)))AND(v0.c1)))OR(x'dff8')))AND(v0.c2)))AND(((v0.c1) BETWEEN (v0.c2) AND (v0.c1)))))OR(v0.c0)))AND(CASE v0.c0  WHEN v0.c1 THEN v0.c0 WHEN NULL THEN v0.c1 WHEN v0.c1 THEN v0.c0 END)))OR(((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((v0.c0)OR(v0.c1)))AND(v0.c1)))OR(x'dff8')))AND(v0.c2)))AND(((v0.c1) BETWEEN (v0.c2) AND (v0.c1)))))OR(v0.c0)))AND(CASE v0.c0  WHEN v0.c1 THEN v0.c0 WHEN NULL THEN v0.c1 WHEN v0.c1 THEN v0.c0 END)))OR(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((((((((((((v0.c0)OR(v0.c1)))AND(v0.c1)))OR(x'dff8')))AND(v0.c2)))AND(((v0.c1) BETWEEN (v0.c2) AND (v0.c1)))))OR(v0.c0)))AND(CASE v0.c0  WHEN v0.c1 THEN v0.c0 WHEN NULL THEN v0.c1 WHEN v0.c1 THEN v0.c0 END)))OR(((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((v0.c0)OR(v0.c1)))AND(v0.c1)))OR(x'dff8')))AND(v0.c2)))AND(((v0.c1) BETWEEN (v0.c2) AND (v0.c1)))))OR(v0.c0)))AND(CASE v0.c0  WHEN v0.c1 THEN v0.c0 WHEN NULL THEN v0.c1 WHEN v0.c1 THEN v0.c0 END)))OR(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((((((((((((v0.c0)OR(v0.c1)))AND(v0.c1)))OR(x'dff8')))AND(v0.c2)))AND(((v0.c1) BETWEEN (v0.c2) AND (v0.c1)))))OR(v0.c0)))AND(CASE v0.c0  WHEN v0.c1 THEN v0.c0 WHEN NULL THEN v0.c1 WHEN v0.c1 THEN v0.c0 END)))OR(((v0.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2)<<(v0.c1))) IS FALSE)) ORDER BY (((v0.c2) BETWEEN (v0.c1) AND (v0.c2)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c2)<<(v0.c1))) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c2) BETWEEN (v0.c1) AND (v0.c2)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2)<<(v0.c1))) IS FALSE)) ORDER BY (((v0.c2) BETWEEN (v0.c1) AND (v0.c2)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c2)<<(v0.c1))) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c2) BETWEEN (v0.c1) AND (v0.c2)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2)<<(v0.c1))) IS FALSE)) ORDER BY (((v0.c2) BETWEEN (v0.c1) AND (v0.c2)) IN ())  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c1 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ())) ISNULL)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c1 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ())) ISNULL)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c1 IN ())) ISNULL));
SELECT ALL * FROM rt0 WHERE (0Xffffffffdf252ae0);
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffdf252ae0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (0Xffffffffdf252ae0);
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffdf252ae0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (0Xffffffffdf252ae0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c2)/(rt0.c1))) BETWEEN (((rt0.c1)IS NOT(rt0.c1))) AND (((v0.c2)+(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)/(rt0.c1))) BETWEEN (((rt0.c1)IS NOT(rt0.c1))) AND (((v0.c2)+(v0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c2)/(rt0.c1))) BETWEEN (((rt0.c1)IS NOT(rt0.c1))) AND (((v0.c2)+(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)/(rt0.c1))) BETWEEN (((rt0.c1)IS NOT(rt0.c1))) AND (((v0.c2)+(v0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c2)/(rt0.c1))) BETWEEN (((rt0.c1)IS NOT(rt0.c1))) AND (((v0.c2)+(v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) NOTNULL) COLLATE BINARY);
SELECT * FROM rt0 WHERE ((((((((((((rt0.c2)OR('zZlQ')))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0))))!=(((x'4ce5' IN (rt0.c2)))))) ORDER BY CAST((- (rt0.c2)) AS TEXT)  NULLS LAST, CASE WHEN ((((NULL)AND(rt0.c2)))OR(rt0.c1)) THEN (rt0.c2 IN ()) WHEN CAST(rt0.c1 AS TEXT) THEN ((rt0.c2) NOT NULL) WHEN ((rt0.c2) IS TRUE) THEN rt0.c1 COLLATE RTRIM WHEN CAST(rt0.c1 AS BLOB) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) WHEN rt0.c0 COLLATE BINARY THEN (((rt0.c1, rt0.c0, 'Lz_i>m_(%'))<=((rt0.c2, rt0.c1, rt0.c1))) END ASC;
SELECT SUM(count) FROM (SELECT (((((((((((((rt0.c2)OR('zZlQ')))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0))))<>(((x'4ce5' IN (rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY CAST((- (rt0.c2)) AS TEXT)  NULLS LAST, CASE WHEN ((((NULL)AND(rt0.c2)))OR(rt0.c1)) THEN (rt0.c2 IN ()) WHEN CAST(rt0.c1 AS TEXT) THEN ((rt0.c2) NOT NULL) WHEN ((rt0.c2) IS TRUE) THEN rt0.c1 COLLATE RTRIM WHEN CAST(rt0.c1 AS BLOB) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) WHEN rt0.c0 COLLATE BINARY THEN (((rt0.c1, rt0.c0, 'Lz_i>m_(%'))<=((rt0.c2, rt0.c1, rt0.c1))) END ASC);
SELECT * FROM rt0 WHERE ((((((((((((rt0.c2)OR('zZlQ')))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0))))!=(((x'4ce5' IN (rt0.c2)))))) ORDER BY CAST((- (rt0.c2)) AS TEXT)  NULLS LAST, CASE WHEN ((((NULL)AND(rt0.c2)))OR(rt0.c1)) THEN (rt0.c2 IN ()) WHEN CAST(rt0.c1 AS TEXT) THEN ((rt0.c2) NOT NULL) WHEN ((rt0.c2) IS TRUE) THEN rt0.c1 COLLATE RTRIM WHEN CAST(rt0.c1 AS BLOB) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) WHEN rt0.c0 COLLATE BINARY THEN (((rt0.c1, rt0.c0, 'Lz_i>m_(%'))<=((rt0.c2, rt0.c1, rt0.c1))) END ASC;
SELECT SUM(count) FROM (SELECT (((((((((((((rt0.c2)OR('zZlQ')))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0))))<>(((x'4ce5' IN (rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY CAST((- (rt0.c2)) AS TEXT)  NULLS LAST, CASE WHEN ((((NULL)AND(rt0.c2)))OR(rt0.c1)) THEN (rt0.c2 IN ()) WHEN CAST(rt0.c1 AS TEXT) THEN ((rt0.c2) NOT NULL) WHEN ((rt0.c2) IS TRUE) THEN rt0.c1 COLLATE RTRIM WHEN CAST(rt0.c1 AS BLOB) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) WHEN rt0.c0 COLLATE BINARY THEN (((rt0.c1, rt0.c0, 'Lz_i>m_(%'))<=((rt0.c2, rt0.c1, rt0.c1))) END ASC);
SELECT * FROM rt0 WHERE ((((((((((((rt0.c2)OR('zZlQ')))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0))))!=(((x'4ce5' IN (rt0.c2)))))) ORDER BY CAST((- (rt0.c2)) AS TEXT)  NULLS LAST, CASE WHEN ((((NULL)AND(rt0.c2)))OR(rt0.c1)) THEN (rt0.c2 IN ()) WHEN CAST(rt0.c1 AS TEXT) THEN ((rt0.c2) NOT NULL) WHEN ((rt0.c2) IS TRUE) THEN rt0.c1 COLLATE RTRIM WHEN CAST(rt0.c1 AS BLOB) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) WHEN rt0.c0 COLLATE BINARY THEN (((rt0.c1, rt0.c0, 'Lz_i>m_(%'))<=((rt0.c2, rt0.c1, rt0.c1))) END ASC;
SELECT * FROM v0, rt0 WHERE (CASE v0.c0 COLLATE NOCASE  WHEN rt0.c2 THEN ((rt0.c0)%(0.11561655131131288)) END) ORDER BY (((- (rt0.c1)))-(((v0.c2) IS FALSE))) ASC, (((rt0.c1 IN ())) IS TRUE) ASC, (((rt0.c1 IN ())) NOTNULL);
SELECT SUM(count) FROM (SELECT ((CASE v0.c0 COLLATE NOCASE  WHEN rt0.c2 THEN ((rt0.c0)%(0.11561655131131288)) END) IS TRUE)  as count FROM v0, rt0 ORDER BY (((- (rt0.c1)))-(((v0.c2) IS FALSE))) ASC, (((rt0.c1 IN ())) IS TRUE) ASC, (((rt0.c1 IN ())) NOTNULL));
SELECT * FROM v0, rt0 WHERE (CASE v0.c0 COLLATE NOCASE  WHEN rt0.c2 THEN ((rt0.c0)%(0.11561655131131288)) END) ORDER BY (((- (rt0.c1)))-(((v0.c2) IS FALSE))) ASC, (((rt0.c1 IN ())) IS TRUE) ASC, (((rt0.c1 IN ())) NOTNULL);
SELECT SUM(count) FROM (SELECT ((CASE v0.c0 COLLATE NOCASE  WHEN rt0.c2 THEN ((rt0.c0)%(0.11561655131131288)) END) IS TRUE)  as count FROM v0, rt0 ORDER BY (((- (rt0.c1)))-(((v0.c2) IS FALSE))) ASC, (((rt0.c1 IN ())) IS TRUE) ASC, (((rt0.c1 IN ())) NOTNULL));
SELECT * FROM v0, rt0 WHERE (CASE v0.c0 COLLATE NOCASE  WHEN rt0.c2 THEN ((rt0.c0)%(0.11561655131131288)) END) ORDER BY (((- (rt0.c1)))-(((v0.c2) IS FALSE))) ASC, (((rt0.c1 IN ())) IS TRUE) ASC, (((rt0.c1 IN ())) NOTNULL);
SELECT * FROM v0 FULL OUTER JOIN rt0 ON ((load_extension(v0.c2))*(((rt0.c2) BETWEEN (v0.c0) AND (v0.c1)))) WHERE (((((((((((v0.c0)OR(v0.c1)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))%('')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)OR(v0.c1)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))%(''))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((load_extension(v0.c2))*(((rt0.c2) BETWEEN (v0.c0) AND (v0.c1)))));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON ((load_extension(v0.c2))*(((rt0.c2) BETWEEN (v0.c0) AND (v0.c1)))) WHERE (((((((((((v0.c0)OR(v0.c1)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))%('')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)OR(v0.c1)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))%(''))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((load_extension(v0.c2))*(((rt0.c2) BETWEEN (v0.c0) AND (v0.c1)))));
SELECT ALL * FROM rt0, v0 WHERE (CAST((rt0.c1 IN (v0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c1 IN (v0.c0)) AS REAL)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (CAST((rt0.c1 IN (v0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c1 IN (v0.c0)) AS REAL)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (CAST((rt0.c1 IN (v0.c0)) AS REAL));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON (((rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN v0.c1 WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c1 ELSE rt0.c0 END, ((((rt0.c2)AND(rt0.c0)))AND(NULL)), ((v0.c0) BETWEEN (v0.c1) AND (rt0.c2)))) AND (((((v0.c1)) BETWEEN ((rt0.c2)) AND ((v0.c1))), (((rt0.c0))<=((rt0.c2))), 0.3929960077811898))) WHERE (((((v0.c0)AND(rt0.c1 COLLATE NOCASE)))OR(((rt0.c0) BETWEEN (x'') AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)AND(rt0.c1 COLLATE NOCASE)))OR(((rt0.c0) BETWEEN (x'') AND (v0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (((rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN v0.c1 WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c1 ELSE rt0.c0 END, ((((rt0.c2)AND(rt0.c0)))AND(NULL)), ((v0.c0) BETWEEN (v0.c1) AND (rt0.c2)))) AND (((((v0.c1)) BETWEEN ((rt0.c2)) AND ((v0.c1))), (((rt0.c0))<=((rt0.c2))), 0.3929960077811898))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON (((rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN v0.c1 WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c1 ELSE rt0.c0 END, ((((rt0.c2)AND(rt0.c0)))AND(NULL)), ((v0.c0) BETWEEN (v0.c1) AND (rt0.c2)))) AND (((((v0.c1)) BETWEEN ((rt0.c2)) AND ((v0.c1))), (((rt0.c0))<=((rt0.c2))), 0.3929960077811898))) WHERE (((((v0.c0)AND(rt0.c1 COLLATE NOCASE)))OR(((rt0.c0) BETWEEN (x'') AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)AND(rt0.c1 COLLATE NOCASE)))OR(((rt0.c0) BETWEEN (x'') AND (v0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (((rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN v0.c1 WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c1 ELSE rt0.c0 END, ((((rt0.c2)AND(rt0.c0)))AND(NULL)), ((v0.c0) BETWEEN (v0.c1) AND (rt0.c2)))) AND (((((v0.c1)) BETWEEN ((rt0.c2)) AND ((v0.c1))), (((rt0.c0))<=((rt0.c2))), 0.3929960077811898))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON (((rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN v0.c1 WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c1 ELSE rt0.c0 END, ((((rt0.c2)AND(rt0.c0)))AND(NULL)), ((v0.c0) BETWEEN (v0.c1) AND (rt0.c2)))) AND (((((v0.c1)) BETWEEN ((rt0.c2)) AND ((v0.c1))), (((rt0.c0))<=((rt0.c2))), 0.3929960077811898))) WHERE (((((v0.c0)AND(rt0.c1 COLLATE NOCASE)))OR(((rt0.c0) BETWEEN (x'') AND (v0.c0)))));
SELECT ALL * FROM v0 WHERE (((((((v0.c1))<>((NULL)))))=((CASE WHEN v0.c1 THEN v0.c2 WHEN NULL THEN '1287697388' WHEN v0.c1 THEN v0.c0 ELSE v0.c0 END))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c1))<>((NULL)))))=((CASE WHEN v0.c1 THEN v0.c2 WHEN NULL THEN '1287697388' WHEN v0.c1 THEN v0.c0 ELSE v0.c0 END)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((v0.c1))<>((NULL)))))=((CASE WHEN v0.c1 THEN v0.c2 WHEN NULL THEN '1287697388' WHEN v0.c1 THEN v0.c0 ELSE v0.c0 END))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c1))<>((NULL)))))=((CASE WHEN v0.c1 THEN v0.c2 WHEN NULL THEN '1287697388' WHEN v0.c1 THEN v0.c0 ELSE v0.c0 END)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((v0.c1))<>((NULL)))))=((CASE WHEN v0.c1 THEN v0.c2 WHEN NULL THEN '1287697388' WHEN v0.c1 THEN v0.c0 ELSE v0.c0 END))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((' _?g蟎y' IN (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((' _?g蟎y' IN (rt0.c2))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((' _?g蟎y' IN (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((' _?g蟎y' IN (rt0.c2))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((' _?g蟎y' IN (rt0.c2)));
SELECT * FROM rt0 WHERE (((((((0.6060074111181305)IS NOT(rt0.c0)))OR(CAST(rt0.c2 AS NUMERIC))))AND(((((((((rt0.c1)OR(0X36aa57bc)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((0.6060074111181305)IS NOT(rt0.c0)))OR(CAST(rt0.c2 AS NUMERIC))))AND(((((((((rt0.c1)OR(0x36aa57bc)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((0.6060074111181305)IS NOT(rt0.c0)))OR(CAST(rt0.c2 AS NUMERIC))))AND(((((((((rt0.c1)OR(0X36aa57bc)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((0.6060074111181305)IS NOT(rt0.c0)))OR(CAST(rt0.c2 AS NUMERIC))))AND(((((((((rt0.c1)OR(0x36aa57bc)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((0.6060074111181305)IS NOT(rt0.c0)))OR(CAST(rt0.c2 AS NUMERIC))))AND(((((((((rt0.c1)OR(0X36aa57bc)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(CAST(v0.c1 AS NUMERIC) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c1 AS NUMERIC) AS BLOB)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(CAST(v0.c1 AS NUMERIC) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c1 AS NUMERIC) AS BLOB)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(CAST(v0.c1 AS NUMERIC) AS BLOB));
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c2 AS TEXT)) ORDER BY (('1182675201')>=(((((v0.c1)OR(x'6a2e')))AND(v0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c2 AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY (('1182675201')>=(((((v0.c1)OR(x'6a2e')))AND(v0.c2)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c2 AS TEXT)) ORDER BY (('1182675201')>=(((((v0.c1)OR(x'6a2e')))AND(v0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c2 AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY (('1182675201')>=(((((v0.c1)OR(x'6a2e')))AND(v0.c2)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c2 AS TEXT)) ORDER BY (('1182675201')>=(((((v0.c1)OR(x'6a2e')))AND(v0.c2)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((0.9432765834214101)) BETWEEN ((v0.c2)) AND ((TRIM(v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((0.9432765834214101)) BETWEEN ((v0.c2)) AND ((TRIM(v0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((0.9432765834214101)) BETWEEN ((v0.c2)) AND ((TRIM(v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((0.9432765834214101)) BETWEEN ((v0.c2)) AND ((TRIM(v0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((0.9432765834214101)) BETWEEN ((v0.c2)) AND ((TRIM(v0.c2)))));
SELECT COUNT(*) FROM rt0, v0 WHERE ((CASE rt0.c2  WHEN NULL THEN '' WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN '849084024' WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END IN ())) ORDER BY ((((v0.c0) NOTNULL)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE rt0.c2  WHEN NULL THEN '' WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN '849084024' WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((v0.c0) NOTNULL)) ISNULL)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((CASE rt0.c2  WHEN NULL THEN '' WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN '849084024' WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END IN ())) ORDER BY ((((v0.c0) NOTNULL)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE rt0.c2  WHEN NULL THEN '' WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN '849084024' WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((v0.c0) NOTNULL)) ISNULL)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((CASE rt0.c2  WHEN NULL THEN '' WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN '849084024' WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END IN ())) ORDER BY ((((v0.c0) NOTNULL)) ISNULL)  NULLS FIRST;
SELECT * FROM v0 WHERE ((CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c2 WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END IN (((v0.c1)-(v0.c2)), ((((v0.c1)OR(v0.c2)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c2 WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END IN (((v0.c1)-(v0.c2)), ((((v0.c1)OR(v0.c2)))AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c2 WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END IN (((v0.c1)-(v0.c2)), ((((v0.c1)OR(v0.c2)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c2 WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END IN (((v0.c1)-(v0.c2)), ((((v0.c1)OR(v0.c2)))AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c2 WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END IN (((v0.c1)-(v0.c2)), ((((v0.c1)OR(v0.c2)))AND(v0.c0)))));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (((CASE WHEN rt0.c0 THEN v0.c0 END))<=((CAST(v0.c2 AS NUMERIC)))) WHERE (((((rt0.c0 COLLATE BINARY)AND(v0.c0)))AND(((((v0.c2)OR(v0.c0)))AND('237255496')))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 COLLATE BINARY)AND(v0.c0)))AND(((((v0.c2)OR(v0.c0)))AND('237255496'))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((CASE WHEN rt0.c0 THEN v0.c0 END))<=((CAST(v0.c2 AS NUMERIC)))));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (((CASE WHEN rt0.c0 THEN v0.c0 END))<=((CAST(v0.c2 AS NUMERIC)))) WHERE (((((rt0.c0 COLLATE BINARY)AND(v0.c0)))AND(((((v0.c2)OR(v0.c0)))AND('237255496')))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 COLLATE BINARY)AND(v0.c0)))AND(((((v0.c2)OR(v0.c0)))AND('237255496'))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((CASE WHEN rt0.c0 THEN v0.c0 END))<=((CAST(v0.c2 AS NUMERIC)))));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (((CASE WHEN rt0.c0 THEN v0.c0 END))<=((CAST(v0.c2 AS NUMERIC)))) WHERE (((((rt0.c0 COLLATE BINARY)AND(v0.c0)))AND(((((v0.c2)OR(v0.c0)))AND('237255496')))));
SELECT ALL * FROM v0, rt0 WHERE (((((CAST(rt0.c1 AS BLOB))AND(((v0.c2)-(1.942931344E9)))))AND((((v0.c1)) BETWEEN ((v0.c2)) AND ((v0.c1)))))) ORDER BY CAST(((rt0.c0)=(x'')) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c1 AS BLOB))AND(((v0.c2)-(1.942931344E9)))))AND((((v0.c1)) BETWEEN ((v0.c2)) AND ((v0.c1)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(((rt0.c0)==(x'')) AS TEXT)  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE (((((CAST(rt0.c1 AS BLOB))AND(((v0.c2)-(1.942931344E9)))))AND((((v0.c1)) BETWEEN ((v0.c2)) AND ((v0.c1)))))) ORDER BY CAST(((rt0.c0)=(x'')) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c1 AS BLOB))AND(((v0.c2)-(1.942931344E9)))))AND((((v0.c1)) BETWEEN ((v0.c2)) AND ((v0.c1)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(((rt0.c0)==(x'')) AS TEXT)  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE (((((CAST(rt0.c1 AS BLOB))AND(((v0.c2)-(1.942931344E9)))))AND((((v0.c1)) BETWEEN ((v0.c2)) AND ((v0.c1)))))) ORDER BY CAST(((rt0.c0)=(x'')) AS TEXT)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((+ ((rt0.c2 IN ())))) ORDER BY CASE WHEN ((v0.c2) BETWEEN (v0.c0) AND ('-1431918051')) THEN ((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)) WHEN 0.6530489088518875 THEN ((rt0.c0) IS TRUE) WHEN (v0.c0 IN ()) THEN json_extract(v0.c1, v0.c1) END;
SELECT SUM(count) FROM (SELECT ALL (((+ ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN ((v0.c2) BETWEEN (v0.c0) AND ('-1431918051')) THEN ((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)) WHEN 0.6530489088518875 THEN ((rt0.c0) IS TRUE) WHEN (v0.c0 IN ()) THEN json_extract(v0.c1, v0.c1) END);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((+ ((rt0.c2 IN ())))) ORDER BY CASE WHEN ((v0.c2) BETWEEN (v0.c0) AND ('-1431918051')) THEN ((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)) WHEN 0.6530489088518875 THEN ((rt0.c0) IS TRUE) WHEN (v0.c0 IN ()) THEN json_extract(v0.c1, v0.c1) END;
SELECT SUM(count) FROM (SELECT ALL (((+ ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN ((v0.c2) BETWEEN (v0.c0) AND ('-1431918051')) THEN ((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)) WHEN 0.6530489088518875 THEN ((rt0.c0) IS TRUE) WHEN (v0.c0 IN ()) THEN json_extract(v0.c1, v0.c1) END);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((+ ((rt0.c2 IN ())))) ORDER BY CASE WHEN ((v0.c2) BETWEEN (v0.c0) AND ('-1431918051')) THEN ((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)) WHEN 0.6530489088518875 THEN ((rt0.c0) IS TRUE) WHEN (v0.c0 IN ()) THEN json_extract(v0.c1, v0.c1) END;
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON ((CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 WHEN 0.06008877878789798 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 END) BETWEEN (UNLIKELY(rt0.c0)) AND ((((v0.c2)) BETWEEN ((rt0.c2)) AND ((v0.c2))))) WHERE ((((((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c0))))||(((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c0))))||(((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c2))))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON ((CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 WHEN 0.06008877878789798 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 END) BETWEEN (UNLIKELY(rt0.c0)) AND ((((v0.c2)) BETWEEN ((rt0.c2)) AND ((v0.c2))))));
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON ((CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 WHEN 0.06008877878789798 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 END) BETWEEN (UNLIKELY(rt0.c0)) AND ((((v0.c2)) BETWEEN ((rt0.c2)) AND ((v0.c2))))) WHERE ((((((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c0))))||(((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c0))))||(((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c2))))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON ((CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 WHEN 0.06008877878789798 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 END) BETWEEN (UNLIKELY(rt0.c0)) AND ((((v0.c2)) BETWEEN ((rt0.c2)) AND ((v0.c2))))));
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON ((CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 WHEN 0.06008877878789798 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 END) BETWEEN (UNLIKELY(rt0.c0)) AND ((((v0.c2)) BETWEEN ((rt0.c2)) AND ((v0.c2))))) WHERE ((((((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c0))))||(((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c2)))));
SELECT * FROM rt0 WHERE ((CAST(rt0.c1 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c1 AS NUMERIC) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((CAST(rt0.c1 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c1 AS NUMERIC) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((CAST(rt0.c1 AS NUMERIC) IN ()));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON CAST((((rt0.c2))<=((v0.c0))) AS INTEGER) WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON CAST((((rt0.c2))<=((v0.c0))) AS INTEGER));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON CAST((((rt0.c2))<=((v0.c0))) AS INTEGER) WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON CAST((((rt0.c2))<=((v0.c0))) AS INTEGER));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON CAST((((rt0.c2))<=((v0.c0))) AS INTEGER) WHERE ('');
SELECT * FROM rt0 WHERE ('Fw') ORDER BY CASE (NOT (rt0.c0))  WHEN rt0.c0 COLLATE RTRIM THEN (((rt0.c2, rt0.c2, rt0.c2))>((rt0.c0, 'iKaS.qx', 0.8968353136412874))) ELSE (rt0.c1 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('Fw') IS TRUE)  as count FROM rt0 ORDER BY CASE (NOT (rt0.c0))  WHEN rt0.c0 COLLATE RTRIM THEN (((rt0.c2, rt0.c2, rt0.c2))>((rt0.c0, 'iKaS.qx', 0.8968353136412874))) ELSE (rt0.c1 IN ()) END  NULLS LAST);
SELECT * FROM rt0 WHERE ('Fw') ORDER BY CASE (NOT (rt0.c0))  WHEN rt0.c0 COLLATE RTRIM THEN (((rt0.c2, rt0.c2, rt0.c2))>((rt0.c0, 'iKaS.qx', 0.8968353136412874))) ELSE (rt0.c1 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('Fw') IS TRUE)  as count FROM rt0 ORDER BY CASE (NOT (rt0.c0))  WHEN rt0.c0 COLLATE RTRIM THEN (((rt0.c2, rt0.c2, rt0.c2))>((rt0.c0, 'iKaS.qx', 0.8968353136412874))) ELSE (rt0.c1 IN ()) END  NULLS LAST);
SELECT * FROM rt0 WHERE ('Fw') ORDER BY CASE (NOT (rt0.c0))  WHEN rt0.c0 COLLATE RTRIM THEN (((rt0.c2, rt0.c2, rt0.c2))>((rt0.c0, 'iKaS.qx', 0.8968353136412874))) ELSE (rt0.c1 IN ()) END  NULLS LAST;
SELECT ALL * FROM v0, rt0 WHERE (CASE WHEN IFNULL(DISTINCT v0.c0, v0.c1) THEN '1662403281' WHEN CAST(v0.c2 AS REAL) THEN v0.c0 COLLATE BINARY WHEN (NOT (v0.c1)) THEN '-868899776' END) ORDER BY CASE WHEN v0.c1 THEN LIKELY(DISTINCT rt0.c1) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN IFNULL(DISTINCT v0.c0, v0.c1) THEN '1662403281' WHEN CAST(v0.c2 AS REAL) THEN v0.c0 COLLATE BINARY WHEN (NOT (v0.c1)) THEN '-868899776' END) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE WHEN v0.c1 THEN LIKELY(DISTINCT rt0.c1) END DESC);
SELECT ALL * FROM v0, rt0 WHERE (CASE WHEN IFNULL(DISTINCT v0.c0, v0.c1) THEN '1662403281' WHEN CAST(v0.c2 AS REAL) THEN v0.c0 COLLATE BINARY WHEN (NOT (v0.c1)) THEN '-868899776' END) ORDER BY CASE WHEN v0.c1 THEN LIKELY(DISTINCT rt0.c1) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN IFNULL(DISTINCT v0.c0, v0.c1) THEN '1662403281' WHEN CAST(v0.c2 AS REAL) THEN v0.c0 COLLATE BINARY WHEN (NOT (v0.c1)) THEN '-868899776' END) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE WHEN v0.c1 THEN LIKELY(DISTINCT rt0.c1) END DESC);
SELECT ALL * FROM v0, rt0 WHERE (CASE WHEN IFNULL(DISTINCT v0.c0, v0.c1) THEN '1662403281' WHEN CAST(v0.c2 AS REAL) THEN v0.c0 COLLATE BINARY WHEN (NOT (v0.c1)) THEN '-868899776' END) ORDER BY CASE WHEN v0.c1 THEN LIKELY(DISTINCT rt0.c1) END DESC;
SELECT ALL * FROM v0 WHERE (((v0.c2 COLLATE NOCASE)>(v0.c0)));
SELECT SUM(count) FROM (SELECT ((((v0.c2 COLLATE NOCASE)>(v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c2 COLLATE NOCASE)>(v0.c0)));
SELECT SUM(count) FROM (SELECT ((((v0.c2 COLLATE NOCASE)>(v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c2 COLLATE NOCASE)>(v0.c0)));
SELECT ALL * FROM v0 WHERE (((((v0.c1)<(v0.c0))) NOTNULL)) ORDER BY TYPEOF(DISTINCT NULL) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c1)<(v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY TYPEOF(DISTINCT NULL) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((((v0.c1)<(v0.c0))) NOTNULL)) ORDER BY TYPEOF(DISTINCT NULL) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c1)<(v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY TYPEOF(DISTINCT NULL) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((((v0.c1)<(v0.c0))) NOTNULL)) ORDER BY TYPEOF(DISTINCT NULL) COLLATE BINARY ASC  NULLS LAST;
SELECT ALL * FROM v0, rt0 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (TOTAL_CHANGES());
SELECT ALL * FROM v0, rt0 WHERE ((((((((rt0.c1)AND(v0.c1)))AND(rt0.c2))))<=((COALESCE(DISTINCT rt0.c1, rt0.c0, v0.c1, rt0.c1))))) ORDER BY (+ (((((v0.c0)AND(v0.c0)))AND(rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c1)AND(v0.c1)))AND(rt0.c2))))<=((COALESCE(DISTINCT rt0.c1, rt0.c0, v0.c1, rt0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (+ (((((v0.c0)AND(v0.c0)))AND(rt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE ((((((((rt0.c1)AND(v0.c1)))AND(rt0.c2))))<=((COALESCE(DISTINCT rt0.c1, rt0.c0, v0.c1, rt0.c1))))) ORDER BY (+ (((((v0.c0)AND(v0.c0)))AND(rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c1)AND(v0.c1)))AND(rt0.c2))))<=((COALESCE(DISTINCT rt0.c1, rt0.c0, v0.c1, rt0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (+ (((((v0.c0)AND(v0.c0)))AND(rt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE ((((((((rt0.c1)AND(v0.c1)))AND(rt0.c2))))<=((COALESCE(DISTINCT rt0.c1, rt0.c0, v0.c1, rt0.c1))))) ORDER BY (+ (((((v0.c0)AND(v0.c0)))AND(rt0.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON x'' WHERE (CASE WHEN (('D摓')&(v0.c1)) THEN ((rt0.c1) BETWEEN (v0.c0) AND (v0.c0)) ELSE rt0.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (('D摓')&(v0.c1)) THEN ((rt0.c1) BETWEEN (v0.c0) AND (v0.c0)) ELSE rt0.c2 END) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON x'');
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON x'' WHERE (CASE WHEN (('D摓')&(v0.c1)) THEN ((rt0.c1) BETWEEN (v0.c0) AND (v0.c0)) ELSE rt0.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (('D摓')&(v0.c1)) THEN ((rt0.c1) BETWEEN (v0.c0) AND (v0.c0)) ELSE rt0.c2 END) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON x'');
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON x'' WHERE (CASE WHEN (('D摓')&(v0.c1)) THEN ((rt0.c1) BETWEEN (v0.c0) AND (v0.c0)) ELSE rt0.c2 END);
SELECT * FROM rt0 WHERE (((rt0.c1)==(rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c1)==(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c1)==(rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c1)==(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c1)==(rt0.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((rt0.c1))>=((rt0.c0))))OR(((rt0.c2) ISNULL))))OR((- (rt0.c1))))) ORDER BY rt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c1))>=((rt0.c0))))OR(((rt0.c2) ISNULL))))OR((- (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((rt0.c1))>=((rt0.c0))))OR(((rt0.c2) ISNULL))))OR((- (rt0.c1))))) ORDER BY rt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c1))>=((rt0.c0))))OR(((rt0.c2) ISNULL))))OR((- (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((rt0.c1))>=((rt0.c0))))OR(((rt0.c2) ISNULL))))OR((- (rt0.c1))))) ORDER BY rt0.c1 ASC  NULLS LAST;
SELECT ALL * FROM v0 WHERE (v0.c1) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0 ORDER BY x'' DESC);
SELECT ALL * FROM v0 WHERE (v0.c1) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0 ORDER BY x'' DESC);
SELECT ALL * FROM v0 WHERE (v0.c1) ORDER BY x'' DESC;
SELECT ALL * FROM v0 WHERE ('2125312182') ORDER BY rtreenode(((x'') NOT BETWEEN (0.4278383523211092) AND (v0.c0)), '')  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('2125312182') IS TRUE)  as count FROM v0 ORDER BY rtreenode(((x'') NOT BETWEEN (0.4278383523211092) AND (v0.c0)), '')  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ('2125312182') ORDER BY rtreenode(((x'') NOT BETWEEN (0.4278383523211092) AND (v0.c0)), '')  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('2125312182') IS TRUE)  as count FROM v0 ORDER BY rtreenode(((x'') NOT BETWEEN (0.4278383523211092) AND (v0.c0)), '')  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ('2125312182') ORDER BY rtreenode(((x'') NOT BETWEEN (0.4278383523211092) AND (v0.c0)), '')  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0 WHERE ((((v0.c2)) BETWEEN ((CASE WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c2 WHEN rt0.c1 THEN v0.c1 ELSE v0.c0 END)) AND ((NULL)))) ORDER BY CAST(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) AS INTEGER) ASC  NULLS FIRST, (((0.2253999772194707, v0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0 COLLATE BINARY, UPPER(DISTINCT rt0.c0), ((rt0.c1)<=(v0.c0)))) AND ((CAST(rt0.c1 AS BLOB), ((v0.c2) NOT BETWEEN (v0.c2) AND (rt0.c0)), ((v0.c0)||(v0.c2))))) ASC, x'';
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)) BETWEEN ((CASE WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c2 WHEN rt0.c1 THEN v0.c1 ELSE v0.c0 END)) AND ((NULL)))) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) AS INTEGER) ASC  NULLS FIRST, (((0.2253999772194707, v0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0 COLLATE BINARY, UPPER(DISTINCT rt0.c0), ((rt0.c1)<=(v0.c0)))) AND ((CAST(rt0.c1 AS BLOB), ((v0.c2) NOT BETWEEN (v0.c2) AND (rt0.c0)), ((v0.c0)||(v0.c2))))) ASC, x'');
SELECT COUNT(*) FROM rt0, v0 WHERE ((((v0.c2)) BETWEEN ((CASE WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c2 WHEN rt0.c1 THEN v0.c1 ELSE v0.c0 END)) AND ((NULL)))) ORDER BY CAST(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) AS INTEGER) ASC  NULLS FIRST, (((0.2253999772194707, v0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0 COLLATE BINARY, UPPER(DISTINCT rt0.c0), ((rt0.c1)<=(v0.c0)))) AND ((CAST(rt0.c1 AS BLOB), ((v0.c2) NOT BETWEEN (v0.c2) AND (rt0.c0)), ((v0.c0)||(v0.c2))))) ASC, x'';
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)) BETWEEN ((CASE WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c2 WHEN rt0.c1 THEN v0.c1 ELSE v0.c0 END)) AND ((NULL)))) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) AS INTEGER) ASC  NULLS FIRST, (((0.2253999772194707, v0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0 COLLATE BINARY, UPPER(DISTINCT rt0.c0), ((rt0.c1)<=(v0.c0)))) AND ((CAST(rt0.c1 AS BLOB), ((v0.c2) NOT BETWEEN (v0.c2) AND (rt0.c0)), ((v0.c0)||(v0.c2))))) ASC, x'');
SELECT COUNT(*) FROM rt0, v0 WHERE ((((v0.c2)) BETWEEN ((CASE WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c2 WHEN rt0.c1 THEN v0.c1 ELSE v0.c0 END)) AND ((NULL)))) ORDER BY CAST(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) AS INTEGER) ASC  NULLS FIRST, (((0.2253999772194707, v0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0 COLLATE BINARY, UPPER(DISTINCT rt0.c0), ((rt0.c1)<=(v0.c0)))) AND ((CAST(rt0.c1 AS BLOB), ((v0.c2) NOT BETWEEN (v0.c2) AND (rt0.c0)), ((v0.c0)||(v0.c2))))) ASC, x'';
SELECT * FROM v0 WHERE (load_extension('0.5612026833943786'));
SELECT SUM(count) FROM (SELECT ALL ((load_extension('0.5612026833943786')) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (load_extension('0.5612026833943786'));
SELECT SUM(count) FROM (SELECT ALL ((load_extension('0.5612026833943786')) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM rt0 WHERE (-1.578553384E9) ORDER BY (((rt0.c0)) NOT BETWEEN ((CAST(rt0.c2 AS INTEGER))) AND (((((rt0.c2)) BETWEEN ((NULL)) AND ((rt0.c1)))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((-1.578553384E9) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) NOT BETWEEN ((CAST(rt0.c2 AS INTEGER))) AND (((((rt0.c2)) BETWEEN ((NULL)) AND ((rt0.c1)))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (-1.578553384E9) ORDER BY (((rt0.c0)) NOT BETWEEN ((CAST(rt0.c2 AS INTEGER))) AND (((((rt0.c2)) BETWEEN ((NULL)) AND ((rt0.c1)))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((-1.578553384E9) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) NOT BETWEEN ((CAST(rt0.c2 AS INTEGER))) AND (((((rt0.c2)) BETWEEN ((NULL)) AND ((rt0.c1)))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (-1.578553384E9) ORDER BY (((rt0.c0)) NOT BETWEEN ((CAST(rt0.c2 AS INTEGER))) AND (((((rt0.c2)) BETWEEN ((NULL)) AND ((rt0.c1)))))) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (CASE WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END THEN (- (rt0.c2)) ELSE CASE WHEN rt0.c0 THEN NULL END END) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (((((rt0.c2)AND(rt0.c0)))OR(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END THEN (- (rt0.c2)) ELSE CASE WHEN rt0.c0 THEN NULL END END) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (((((rt0.c2)AND(rt0.c0)))OR(rt0.c2))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CASE WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END THEN (- (rt0.c2)) ELSE CASE WHEN rt0.c0 THEN NULL END END) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (((((rt0.c2)AND(rt0.c0)))OR(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END THEN (- (rt0.c2)) ELSE CASE WHEN rt0.c0 THEN NULL END END) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (((((rt0.c2)AND(rt0.c0)))OR(rt0.c2))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CASE WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END THEN (- (rt0.c2)) ELSE CASE WHEN rt0.c0 THEN NULL END END) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (((((rt0.c2)AND(rt0.c0)))OR(rt0.c2))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c1)AND(v0.c1)))OR(v0.c0))) NOT NULL)) ORDER BY ((((v0.c1)/(v0.c0)))LIKE(v0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c1)AND(v0.c1)))OR(v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c1)/(v0.c0)))LIKE(v0.c1))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c1)AND(v0.c1)))OR(v0.c0))) NOT NULL)) ORDER BY ((((v0.c1)/(v0.c0)))LIKE(v0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c1)AND(v0.c1)))OR(v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c1)/(v0.c0)))LIKE(v0.c1))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c1)AND(v0.c1)))OR(v0.c0))) NOT NULL)) ORDER BY ((((v0.c1)/(v0.c0)))LIKE(v0.c1))  NULLS LAST;
SELECT ALL * FROM rt0, v0 WHERE (((CAST(rt0.c1 AS NUMERIC))>(rt0.c1 COLLATE BINARY))) ORDER BY CAST((~ (rt0.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS NUMERIC))>(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST((~ (rt0.c0)) AS TEXT)  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (((CAST(rt0.c1 AS NUMERIC))>(rt0.c1 COLLATE BINARY))) ORDER BY CAST((~ (rt0.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS NUMERIC))>(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST((~ (rt0.c0)) AS TEXT)  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (((CAST(rt0.c1 AS NUMERIC))>(rt0.c1 COLLATE BINARY))) ORDER BY CAST((~ (rt0.c0)) AS TEXT)  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((rt0.c1 COLLATE BINARY)+(json_quote(rt0.c2)))) ORDER BY (((rt0.c0 IN ()))IS NOT(((rt0.c0)>>(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY)+(json_quote(rt0.c2)))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c0 IN ()))IS NOT(((rt0.c0)>>(rt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((rt0.c1 COLLATE BINARY)+(json_quote(rt0.c2)))) ORDER BY (((rt0.c0 IN ()))IS NOT(((rt0.c0)>>(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY)+(json_quote(rt0.c2)))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c0 IN ()))IS NOT(((rt0.c0)>>(rt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((rt0.c1 COLLATE BINARY)+(json_quote(rt0.c2)))) ORDER BY (((rt0.c0 IN ()))IS NOT(((rt0.c0)>>(rt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM) NOTNULL));
SELECT ALL * FROM v0, rt0 WHERE (DATE(rt0.c0, rt0.c0, rt0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((DATE(rt0.c0, rt0.c0, rt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (DATE(rt0.c0, rt0.c0, rt0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((DATE(rt0.c0, rt0.c0, rt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (DATE(rt0.c0, rt0.c0, rt0.c0) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)) IN ())) ORDER BY (CAST(rt0.c1 AS NUMERIC) IN (CAST(v0.c1 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY (CAST(rt0.c1 AS NUMERIC) IN (CAST(v0.c1 AS NUMERIC))) ASC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)) IN ())) ORDER BY (CAST(rt0.c1 AS NUMERIC) IN (CAST(v0.c1 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY (CAST(rt0.c1 AS NUMERIC) IN (CAST(v0.c1 AS NUMERIC))) ASC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)) IN ())) ORDER BY (CAST(rt0.c1 AS NUMERIC) IN (CAST(v0.c1 AS NUMERIC))) ASC;
SELECT ALL * FROM v0 WHERE (x'') ORDER BY ((CASE v0.c2  WHEN v0.c0 THEN v0.c0 END) NOT NULL);
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0 ORDER BY ((CASE v0.c2  WHEN v0.c0 THEN v0.c0 END) NOT NULL));
SELECT ALL * FROM v0 WHERE (x'') ORDER BY ((CASE v0.c2  WHEN v0.c0 THEN v0.c0 END) NOT NULL);
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0 ORDER BY ((CASE v0.c2  WHEN v0.c0 THEN v0.c0 END) NOT NULL));
SELECT ALL * FROM v0 WHERE (x'') ORDER BY ((CASE v0.c2  WHEN v0.c0 THEN v0.c0 END) NOT NULL);
SELECT ALL * FROM rt0 WHERE (0.9140772492553444);
SELECT SUM(count) FROM (SELECT ALL ((0.9140772492553444) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (0.9140772492553444);
SELECT SUM(count) FROM (SELECT ALL ((0.9140772492553444) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (0.9140772492553444);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON (((v0.c2 IN ())) NOT BETWEEN (((v0.c0) ISNULL)) AND (v0.c2 COLLATE RTRIM)) WHERE (rt0.c1) ORDER BY ((CASE rt0.c1  WHEN v0.c0 THEN v0.c2 ELSE v0.c2 END) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (((v0.c2 IN ())) NOT BETWEEN (((v0.c0) ISNULL)) AND (v0.c2 COLLATE RTRIM)) ORDER BY ((CASE rt0.c1  WHEN v0.c0 THEN v0.c2 ELSE v0.c2 END) NOT NULL) ASC);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON (((v0.c2 IN ())) NOT BETWEEN (((v0.c0) ISNULL)) AND (v0.c2 COLLATE RTRIM)) WHERE (rt0.c1) ORDER BY ((CASE rt0.c1  WHEN v0.c0 THEN v0.c2 ELSE v0.c2 END) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (((v0.c2 IN ())) NOT BETWEEN (((v0.c0) ISNULL)) AND (v0.c2 COLLATE RTRIM)) ORDER BY ((CASE rt0.c1  WHEN v0.c0 THEN v0.c2 ELSE v0.c2 END) NOT NULL) ASC);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON (((v0.c2 IN ())) NOT BETWEEN (((v0.c0) ISNULL)) AND (v0.c2 COLLATE RTRIM)) WHERE (rt0.c1) ORDER BY ((CASE rt0.c1  WHEN v0.c0 THEN v0.c2 ELSE v0.c2 END) NOT NULL) ASC;
SELECT ALL * FROM v0 WHERE ((json(v0.c2) IN (CAST(v0.c1 AS TEXT), ((v0.c1) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY ((v0.c2) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((json(v0.c2) IN (CAST(v0.c1 AS TEXT), ((v0.c1) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c2) NOT NULL) ASC);
SELECT ALL * FROM v0 WHERE ((json(v0.c2) IN (CAST(v0.c1 AS TEXT), ((v0.c1) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY ((v0.c2) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((json(v0.c2) IN (CAST(v0.c1 AS TEXT), ((v0.c1) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c2) NOT NULL) ASC);
SELECT ALL * FROM v0 WHERE ((json(v0.c2) IN (CAST(v0.c1 AS TEXT), ((v0.c1) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY ((v0.c2) NOT NULL) ASC;
SELECT * FROM rt0, v0 WHERE ((((v0.c2)) BETWEEN ((((((((((rt0.c1)AND(rt0.c1)))AND(v0.c1)))AND(rt0.c0)))AND(rt0.c2)))) AND (((rt0.c1 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)) BETWEEN ((((((((((rt0.c1)AND(rt0.c1)))AND(v0.c1)))AND(rt0.c0)))AND(rt0.c2)))) AND (((rt0.c1 IN ()))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((v0.c2)) BETWEEN ((((((((((rt0.c1)AND(rt0.c1)))AND(v0.c1)))AND(rt0.c0)))AND(rt0.c2)))) AND (((rt0.c1 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)) BETWEEN ((((((((((rt0.c1)AND(rt0.c1)))AND(v0.c1)))AND(rt0.c0)))AND(rt0.c2)))) AND (((rt0.c1 IN ()))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((v0.c2)) BETWEEN ((((((((((rt0.c1)AND(rt0.c1)))AND(v0.c1)))AND(rt0.c0)))AND(rt0.c2)))) AND (((rt0.c1 IN ())))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((x'') ISNULL)) ORDER BY LOWER(DISTINCT rt0.c0), x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'') ISNULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY LOWER(DISTINCT rt0.c0), x'' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((x'') ISNULL)) ORDER BY LOWER(DISTINCT rt0.c0), x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'') ISNULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY LOWER(DISTINCT rt0.c0), x'' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((x'') ISNULL)) ORDER BY LOWER(DISTINCT rt0.c0), x'' DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c2)) NOT BETWEEN ((CASE 0.6677425759185064  WHEN v0.c2 THEN v0.c0 END)) AND (('314402686'))));
SELECT SUM(count) FROM (SELECT (((((v0.c2)) NOT BETWEEN ((CASE 0.6677425759185064  WHEN v0.c2 THEN v0.c0 END)) AND (('314402686')))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c2)) NOT BETWEEN ((CASE 0.6677425759185064  WHEN v0.c2 THEN v0.c0 END)) AND (('314402686'))));
SELECT SUM(count) FROM (SELECT (((((v0.c2)) NOT BETWEEN ((CASE 0.6677425759185064  WHEN v0.c2 THEN v0.c0 END)) AND (('314402686')))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c2)) NOT BETWEEN ((CASE 0.6677425759185064  WHEN v0.c2 THEN v0.c0 END)) AND (('314402686'))));
SELECT ALL * FROM rt0, v0 WHERE (((CAST(v0.c0 AS TEXT))>=((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS TEXT))>=((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((CAST(v0.c0 AS TEXT))>=((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS TEXT))>=((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((CAST(v0.c0 AS TEXT))>=((rt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c0 IN ())) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (json('402019915'))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ())) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (json('402019915')))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c0 IN ())) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (json('402019915'))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ())) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (json('402019915')))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c0 IN ())) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (json('402019915'))));
SELECT ALL * FROM rt0 CROSS JOIN v0 ON v0.c2 WHERE ((((v0.c0)) BETWEEN ((((((v0.c2)OR(rt0.c2)))OR(0x6913469e)))) AND ((rt0.c2 COLLATE NOCASE)))) ORDER BY CAST(PRINTF(rt0.c0) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((((((v0.c2)OR(rt0.c2)))OR(0X6913469e)))) AND ((rt0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON v0.c2 ORDER BY CAST(PRINTF(rt0.c0) AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM rt0 CROSS JOIN v0 ON v0.c2 WHERE ((((v0.c0)) BETWEEN ((((((v0.c2)OR(rt0.c2)))OR(0x6913469e)))) AND ((rt0.c2 COLLATE NOCASE)))) ORDER BY CAST(PRINTF(rt0.c0) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((((((v0.c2)OR(rt0.c2)))OR(0X6913469e)))) AND ((rt0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON v0.c2 ORDER BY CAST(PRINTF(rt0.c0) AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM rt0 CROSS JOIN v0 ON v0.c2 WHERE ((((v0.c0)) BETWEEN ((((((v0.c2)OR(rt0.c2)))OR(0x6913469e)))) AND ((rt0.c2 COLLATE NOCASE)))) ORDER BY CAST(PRINTF(rt0.c0) AS INTEGER)  NULLS FIRST;
SELECT * FROM rt0 WHERE (TRIM(DISTINCT rt0.c1, rt0.c0) COLLATE RTRIM) ORDER BY (((((rt0.c2)>(rt0.c0)), rt0.c2 COLLATE BINARY, TRIM(DISTINCT 'E_'), CAST(rt0.c0 AS BLOB), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END))!=((highlight(rt0.c1, rt0.c2, rt0.c2, rt0.c1), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)), rt0.c1, ((rt0.c0) IS FALSE), ((rt0.c0) NOTNULL)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT rt0.c1, rt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2)>(rt0.c0)), rt0.c2 COLLATE BINARY, TRIM(DISTINCT 'E_'), CAST(rt0.c0 AS BLOB), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END))<>((highlight(rt0.c1, rt0.c2, rt0.c2, rt0.c1), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)), rt0.c1, ((rt0.c0) IS FALSE), ((rt0.c0) NOTNULL)))) DESC);
SELECT * FROM rt0 WHERE (TRIM(DISTINCT rt0.c1, rt0.c0) COLLATE RTRIM) ORDER BY (((((rt0.c2)>(rt0.c0)), rt0.c2 COLLATE BINARY, TRIM(DISTINCT 'E_'), CAST(rt0.c0 AS BLOB), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END))!=((highlight(rt0.c1, rt0.c2, rt0.c2, rt0.c1), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)), rt0.c1, ((rt0.c0) IS FALSE), ((rt0.c0) NOTNULL)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT rt0.c1, rt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2)>(rt0.c0)), rt0.c2 COLLATE BINARY, TRIM(DISTINCT 'E_'), CAST(rt0.c0 AS BLOB), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END))<>((highlight(rt0.c1, rt0.c2, rt0.c2, rt0.c1), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)), rt0.c1, ((rt0.c0) IS FALSE), ((rt0.c0) NOTNULL)))) DESC);
SELECT ALL * FROM rt0, v0 WHERE (CASE ((v0.c1) IS TRUE)  WHEN 0.36196957417544173 THEN '-1393765985' ELSE (((rt0.c0)) BETWEEN (('b0)dR7\r/')) AND ((v0.c2))) END) ORDER BY (v0.c1 IN ()) COLLATE NOCASE, ((rt0.c0) IS FALSE) DESC, (((v0.c2 IN ())) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c1) IS TRUE)  WHEN 0.36196957417544173 THEN '-1393765985' ELSE (((rt0.c0)) BETWEEN (('b0)dR7\r/')) AND ((v0.c2))) END) IS TRUE)  as count FROM rt0, v0 ORDER BY (v0.c1 IN ()) COLLATE NOCASE, ((rt0.c0) IS FALSE) DESC, (((v0.c2 IN ())) IS FALSE));
SELECT ALL * FROM rt0, v0 WHERE (CASE ((v0.c1) IS TRUE)  WHEN 0.36196957417544173 THEN '-1393765985' ELSE (((rt0.c0)) BETWEEN (('b0)dR7\r/')) AND ((v0.c2))) END) ORDER BY (v0.c1 IN ()) COLLATE NOCASE, ((rt0.c0) IS FALSE) DESC, (((v0.c2 IN ())) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c1) IS TRUE)  WHEN 0.36196957417544173 THEN '-1393765985' ELSE (((rt0.c0)) BETWEEN (('b0)dR7\r/')) AND ((v0.c2))) END) IS TRUE)  as count FROM rt0, v0 ORDER BY (v0.c1 IN ()) COLLATE NOCASE, ((rt0.c0) IS FALSE) DESC, (((v0.c2 IN ())) IS FALSE));
SELECT ALL * FROM rt0, v0 WHERE (CASE ((v0.c1) IS TRUE)  WHEN 0.36196957417544173 THEN '-1393765985' ELSE (((rt0.c0)) BETWEEN (('b0)dR7\r/')) AND ((v0.c2))) END) ORDER BY (v0.c1 IN ()) COLLATE NOCASE, ((rt0.c0) IS FALSE) DESC, (((v0.c2 IN ())) IS FALSE);
SELECT * FROM rt0 CROSS JOIN v0 ON CASE WHEN CAST(rt0.c1 AS INTEGER) THEN CAST(rt0.c1 AS NUMERIC) END WHERE (((((((v0.c2)AND(0.5040550630596375)))AND(rt0.c0)))GLOB(((rt0.c2)=(rt0.c2))))) ORDER BY (((((v0.c2))!=((rt0.c0)))) NOT BETWEEN ('' COLLATE NOCASE) AND (CASE '-1334459010'  WHEN rt0.c1 THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT ((((((((v0.c2)AND(0.5040550630596375)))AND(rt0.c0)))GLOB(((rt0.c2)==(rt0.c2))))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON CASE WHEN CAST(rt0.c1 AS INTEGER) THEN CAST(rt0.c1 AS NUMERIC) END ORDER BY (((((v0.c2))!=((rt0.c0)))) NOT BETWEEN ('' COLLATE NOCASE) AND (CASE '-1334459010'  WHEN rt0.c1 THEN v0.c0 END)));
SELECT * FROM rt0 CROSS JOIN v0 ON CASE WHEN CAST(rt0.c1 AS INTEGER) THEN CAST(rt0.c1 AS NUMERIC) END WHERE (((((((v0.c2)AND(0.5040550630596375)))AND(rt0.c0)))GLOB(((rt0.c2)=(rt0.c2))))) ORDER BY (((((v0.c2))!=((rt0.c0)))) NOT BETWEEN ('' COLLATE NOCASE) AND (CASE '-1334459010'  WHEN rt0.c1 THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT ((((((((v0.c2)AND(0.5040550630596375)))AND(rt0.c0)))GLOB(((rt0.c2)==(rt0.c2))))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON CASE WHEN CAST(rt0.c1 AS INTEGER) THEN CAST(rt0.c1 AS NUMERIC) END ORDER BY (((((v0.c2))!=((rt0.c0)))) NOT BETWEEN ('' COLLATE NOCASE) AND (CASE '-1334459010'  WHEN rt0.c1 THEN v0.c0 END)));
SELECT * FROM rt0 CROSS JOIN v0 ON CASE WHEN CAST(rt0.c1 AS INTEGER) THEN CAST(rt0.c1 AS NUMERIC) END WHERE (((((((v0.c2)AND(0.5040550630596375)))AND(rt0.c0)))GLOB(((rt0.c2)=(rt0.c2))))) ORDER BY (((((v0.c2))!=((rt0.c0)))) NOT BETWEEN ('' COLLATE NOCASE) AND (CASE '-1334459010'  WHEN rt0.c1 THEN v0.c0 END));
SELECT ALL * FROM v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c1);
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY ((rt0.c1 COLLATE RTRIM) NOT BETWEEN ((('-522986712')-(rt0.c2))) AND (((rt0.c0) IS TRUE))) ASC  NULLS LAST, ((((LAST_INSERT_ROWID())OR((- (rt0.c1)))))AND(rt0.c1))  NULLS FIRST, ((rt0.c0) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1 COLLATE RTRIM) NOT BETWEEN ((('-522986712')-(rt0.c2))) AND (((rt0.c0) IS TRUE))) ASC  NULLS LAST, ((((LAST_INSERT_ROWID())OR((- (rt0.c1)))))AND(rt0.c1))  NULLS FIRST, ((rt0.c0) IS FALSE));
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY ((rt0.c1 COLLATE RTRIM) NOT BETWEEN ((('-522986712')-(rt0.c2))) AND (((rt0.c0) IS TRUE))) ASC  NULLS LAST, ((((LAST_INSERT_ROWID())OR((- (rt0.c1)))))AND(rt0.c1))  NULLS FIRST, ((rt0.c0) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1 COLLATE RTRIM) NOT BETWEEN ((('-522986712')-(rt0.c2))) AND (((rt0.c0) IS TRUE))) ASC  NULLS LAST, ((((LAST_INSERT_ROWID())OR((- (rt0.c1)))))AND(rt0.c1))  NULLS FIRST, ((rt0.c0) IS FALSE));
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY ((rt0.c1 COLLATE RTRIM) NOT BETWEEN ((('-522986712')-(rt0.c2))) AND (((rt0.c0) IS TRUE))) ASC  NULLS LAST, ((((LAST_INSERT_ROWID())OR((- (rt0.c1)))))AND(rt0.c1))  NULLS FIRST, ((rt0.c0) IS FALSE);
SELECT COUNT(*) FROM rt0, v0 WHERE ((+ (rt0.c0 COLLATE RTRIM))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, v0 ORDER BY NULL);
SELECT COUNT(*) FROM rt0, v0 WHERE ((+ (rt0.c0 COLLATE RTRIM))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, v0 ORDER BY NULL);
SELECT COUNT(*) FROM rt0, v0 WHERE ((+ (rt0.c0 COLLATE RTRIM))) ORDER BY NULL;
SELECT * FROM v0 WHERE (CASE (NULL IN ())  WHEN CAST(v0.c1 AS INTEGER) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE ((((v0.c0)AND(v0.c0)))AND(v0.c0)) END) ORDER BY ((CASE WHEN v0.c1 THEN v0.c0 END)IS NOT(v0.c0 COLLATE NOCASE)) ASC  NULLS FIRST, ((v0.c0 IN ()) IN ()) ASC  NULLS FIRST, '0.9552052847793492' ASC;
SELECT SUM(count) FROM (SELECT ((CASE (NULL IN ())  WHEN CAST(v0.c1 AS INTEGER) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE ((((v0.c0)AND(v0.c0)))AND(v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN v0.c1 THEN v0.c0 END)IS NOT(v0.c0 COLLATE NOCASE)) ASC  NULLS FIRST, ((v0.c0 IN ()) IN ()) ASC  NULLS FIRST, '0.9552052847793492' ASC);
SELECT * FROM v0 WHERE (CASE (NULL IN ())  WHEN CAST(v0.c1 AS INTEGER) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE ((((v0.c0)AND(v0.c0)))AND(v0.c0)) END) ORDER BY ((CASE WHEN v0.c1 THEN v0.c0 END)IS NOT(v0.c0 COLLATE NOCASE)) ASC  NULLS FIRST, ((v0.c0 IN ()) IN ()) ASC  NULLS FIRST, '0.9552052847793492' ASC;
SELECT SUM(count) FROM (SELECT ((CASE (NULL IN ())  WHEN CAST(v0.c1 AS INTEGER) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE ((((v0.c0)AND(v0.c0)))AND(v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN v0.c1 THEN v0.c0 END)IS NOT(v0.c0 COLLATE NOCASE)) ASC  NULLS FIRST, ((v0.c0 IN ()) IN ()) ASC  NULLS FIRST, '0.9552052847793492' ASC);
SELECT * FROM v0 WHERE (CASE (NULL IN ())  WHEN CAST(v0.c1 AS INTEGER) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE ((((v0.c0)AND(v0.c0)))AND(v0.c0)) END) ORDER BY ((CASE WHEN v0.c1 THEN v0.c0 END)IS NOT(v0.c0 COLLATE NOCASE)) ASC  NULLS FIRST, ((v0.c0 IN ()) IN ()) ASC  NULLS FIRST, '0.9552052847793492' ASC;
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE WHEN rt0.c1 COLLATE BINARY THEN rt0.c1 ELSE (((NULL))<=((rt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 COLLATE BINARY THEN rt0.c1 ELSE (((NULL))<=((rt0.c0))) END) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE WHEN rt0.c1 COLLATE BINARY THEN rt0.c1 ELSE (((NULL))<=((rt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 COLLATE BINARY THEN rt0.c1 ELSE (((NULL))<=((rt0.c0))) END) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE WHEN rt0.c1 COLLATE BINARY THEN rt0.c1 ELSE (((NULL))<=((rt0.c0))) END);
SELECT * FROM v0 WHERE (CASE ((v0.c0)%(0.43833098996353037))  WHEN (((v0.c0, v0.c1, v0.c1))>=((v0.c0, v0.c0, v0.c1))) THEN ((((v0.c2)OR(v0.c2)))OR(v0.c2)) ELSE (v0.c1 IN (0.30610722496158116, v0.c1)) END) ORDER BY (CAST(v0.c0 AS REAL) IN ((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0)%(0.43833098996353037))  WHEN (((v0.c0, v0.c1, v0.c1))>=((v0.c0, v0.c0, v0.c1))) THEN ((((v0.c2)OR(v0.c2)))OR(v0.c2)) ELSE (v0.c1 IN (0.30610722496158116, v0.c1)) END) IS TRUE)  as count FROM v0 ORDER BY (CAST(v0.c0 AS REAL) IN ((v0.c0 IN ()))));
SELECT * FROM v0 WHERE (CASE ((v0.c0)%(0.43833098996353037))  WHEN (((v0.c0, v0.c1, v0.c1))>=((v0.c0, v0.c0, v0.c1))) THEN ((((v0.c2)OR(v0.c2)))OR(v0.c2)) ELSE (v0.c1 IN (0.30610722496158116, v0.c1)) END) ORDER BY (CAST(v0.c0 AS REAL) IN ((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0)%(0.43833098996353037))  WHEN (((v0.c0, v0.c1, v0.c1))>=((v0.c0, v0.c0, v0.c1))) THEN ((((v0.c2)OR(v0.c2)))OR(v0.c2)) ELSE (v0.c1 IN (0.30610722496158116, v0.c1)) END) IS TRUE)  as count FROM v0 ORDER BY (CAST(v0.c0 AS REAL) IN ((v0.c0 IN ()))));
SELECT * FROM v0 WHERE (CASE ((v0.c0)%(0.43833098996353037))  WHEN (((v0.c0, v0.c1, v0.c1))>=((v0.c0, v0.c0, v0.c1))) THEN ((((v0.c2)OR(v0.c2)))OR(v0.c2)) ELSE (v0.c1 IN (0.30610722496158116, v0.c1)) END) ORDER BY (CAST(v0.c0 AS REAL) IN ((v0.c0 IN ())));
SELECT COUNT(*) FROM rt0 WHERE (((UNLIKELY(rt0.c0)) BETWEEN (((rt0.c2) NOTNULL)) AND (rt0.c0))) ORDER BY ((((rt0.c0)OR(rt0.c1)))*(((x'')>>(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(rt0.c0)) BETWEEN (((rt0.c2) NOTNULL)) AND (rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)OR(rt0.c1)))*(((x'')>>(rt0.c1)))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((UNLIKELY(rt0.c0)) BETWEEN (((rt0.c2) NOTNULL)) AND (rt0.c0))) ORDER BY ((((rt0.c0)OR(rt0.c1)))*(((x'')>>(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(rt0.c0)) BETWEEN (((rt0.c2) NOTNULL)) AND (rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)OR(rt0.c1)))*(((x'')>>(rt0.c1)))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((UNLIKELY(rt0.c0)) BETWEEN (((rt0.c2) NOTNULL)) AND (rt0.c0))) ORDER BY ((((rt0.c0)OR(rt0.c1)))*(((x'')>>(rt0.c1)))) DESC;
SELECT ALL * FROM v0, rt0 WHERE ((- (((v0.c1)GLOB(rt0.c2))))) ORDER BY (((((((((rt0.c0 IN (rt0.c0)))AND(CASE v0.c1  WHEN rt0.c2 THEN rt0.c2 END)))AND(rt0.c1)))AND(((rt0.c0)IS(0.08409501397802699)))))OR(CAST(rt0.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT (((- (((v0.c1)GLOB(rt0.c2))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((((((rt0.c0 IN (rt0.c0)))AND(CASE v0.c1  WHEN rt0.c2 THEN rt0.c2 END)))AND(rt0.c1)))AND(((rt0.c0)IS(0.08409501397802699)))))OR(CAST(rt0.c1 AS INTEGER))));
SELECT ALL * FROM v0, rt0 WHERE ((- (((v0.c1)GLOB(rt0.c2))))) ORDER BY (((((((((rt0.c0 IN (rt0.c0)))AND(CASE v0.c1  WHEN rt0.c2 THEN rt0.c2 END)))AND(rt0.c1)))AND(((rt0.c0)IS(0.08409501397802699)))))OR(CAST(rt0.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT (((- (((v0.c1)GLOB(rt0.c2))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((((((rt0.c0 IN (rt0.c0)))AND(CASE v0.c1  WHEN rt0.c2 THEN rt0.c2 END)))AND(rt0.c1)))AND(((rt0.c0)IS(0.08409501397802699)))))OR(CAST(rt0.c1 AS INTEGER))));
SELECT ALL * FROM v0, rt0 WHERE ((- (((v0.c1)GLOB(rt0.c2))))) ORDER BY (((((((((rt0.c0 IN (rt0.c0)))AND(CASE v0.c1  WHEN rt0.c2 THEN rt0.c2 END)))AND(rt0.c1)))AND(((rt0.c0)IS(0.08409501397802699)))))OR(CAST(rt0.c1 AS INTEGER)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS NUMERIC))IS((((0x2b95dab5)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS NUMERIC))IS((((0X2b95dab5)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS NUMERIC))IS((((0x2b95dab5)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS NUMERIC))IS((((0X2b95dab5)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS NUMERIC))IS((((0x2b95dab5)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))));
SELECT * FROM v0 WHERE (((((((v0.c2)>=(v0.c0)))OR(CAST('' AS BLOB))))AND(((x'')=(v0.c1))))) ORDER BY ((((((((((((v0.c2 COLLATE NOCASE)AND(((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c2)))))AND(v0.c1)))OR(CASE WHEN v0.c0 THEN v0.c0 END)))AND((((('4&Z')AND(v0.c2)))AND(v0.c0)))))OR(((v0.c1) NOT NULL))))OR(CAST(v0.c0 AS TEXT))) ASC  NULLS LAST, (((v0.c2 IN (v0.c0, v0.c2))) BETWEEN (((((v0.c1)AND(v0.c0)))AND(v0.c1))) AND (((v0.c1)<>(v0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c2)>=(v0.c0)))OR(CAST('' AS BLOB))))AND(((x'')=(v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY ((((((((((((v0.c2 COLLATE NOCASE)AND(((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c2)))))AND(v0.c1)))OR(CASE WHEN v0.c0 THEN v0.c0 END)))AND((((('4&Z')AND(v0.c2)))AND(v0.c0)))))OR(((v0.c1) NOT NULL))))OR(CAST(v0.c0 AS TEXT))) ASC  NULLS LAST, (((v0.c2 IN (v0.c0, v0.c2))) BETWEEN (((((v0.c1)AND(v0.c0)))AND(v0.c1))) AND (((v0.c1)<>(v0.c1))))  NULLS LAST);
SELECT * FROM v0 WHERE (((((((v0.c2)>=(v0.c0)))OR(CAST('' AS BLOB))))AND(((x'')=(v0.c1))))) ORDER BY ((((((((((((v0.c2 COLLATE NOCASE)AND(((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c2)))))AND(v0.c1)))OR(CASE WHEN v0.c0 THEN v0.c0 END)))AND((((('4&Z')AND(v0.c2)))AND(v0.c0)))))OR(((v0.c1) NOT NULL))))OR(CAST(v0.c0 AS TEXT))) ASC  NULLS LAST, (((v0.c2 IN (v0.c0, v0.c2))) BETWEEN (((((v0.c1)AND(v0.c0)))AND(v0.c1))) AND (((v0.c1)<>(v0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c2)>=(v0.c0)))OR(CAST('' AS BLOB))))AND(((x'')=(v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY ((((((((((((v0.c2 COLLATE NOCASE)AND(((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c2)))))AND(v0.c1)))OR(CASE WHEN v0.c0 THEN v0.c0 END)))AND((((('4&Z')AND(v0.c2)))AND(v0.c0)))))OR(((v0.c1) NOT NULL))))OR(CAST(v0.c0 AS TEXT))) ASC  NULLS LAST, (((v0.c2 IN (v0.c0, v0.c2))) BETWEEN (((((v0.c1)AND(v0.c0)))AND(v0.c1))) AND (((v0.c1)<>(v0.c1))))  NULLS LAST);
SELECT * FROM v0 WHERE (((((((v0.c2)>=(v0.c0)))OR(CAST('' AS BLOB))))AND(((x'')=(v0.c1))))) ORDER BY ((((((((((((v0.c2 COLLATE NOCASE)AND(((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c2)))))AND(v0.c1)))OR(CASE WHEN v0.c0 THEN v0.c0 END)))AND((((('4&Z')AND(v0.c2)))AND(v0.c0)))))OR(((v0.c1) NOT NULL))))OR(CAST(v0.c0 AS TEXT))) ASC  NULLS LAST, (((v0.c2 IN (v0.c0, v0.c2))) BETWEEN (((((v0.c1)AND(v0.c0)))AND(v0.c1))) AND (((v0.c1)<>(v0.c1))))  NULLS LAST;
SELECT * FROM rt0, v0 WHERE (TYPEOF(DISTINCT (+ (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT (+ (rt0.c1)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (TYPEOF(DISTINCT (+ (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT (+ (rt0.c1)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (TYPEOF(DISTINCT (+ (rt0.c1))));
SELECT * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (NULL);
