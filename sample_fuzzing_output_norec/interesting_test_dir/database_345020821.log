-- Time: 2024/06/09 09:25:31
-- Database: database21
-- Database version: 3.40.0
-- seed value: 345020821
PRAGMA case_sensitive_like=ON; -- 5ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, order=ASC); -- 26ms;
CREATE TABLE t1 (c0 TEXT , c1 INTEGER , c2 INTEGER , c3 BLOB , c4 BLOB ); -- 18ms;
BEGIN  TRANSACTION; -- 0ms;
ALTER TABLE t1 RENAME COLUMN c1 TO c19; -- 1ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-478721468,14');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
CREATE TEMP VIEW v0(c0) AS SELECT DISTINCT (NOT ((- (t1.c0)))) FROM t1, vt0; -- 5ms;
CREATE INDEX i2 ON t1((+ (((((c19)OR(c19)))AND(c2)))),(((c3 IN ()))>=(NULL)),CASE WHEN ((c2)IS(c19)) THEN ((((c0)AND(c0)))AND(c2)) WHEN ((c4) NOT BETWEEN (c2) AND (c19)) THEN (((c4, c3, c19))<=(('', c4, c2))) WHEN (~ (-4.78721468E8)) THEN ((c0)>(c3)) ELSE c19 COLLATE RTRIM END DESC,(((- (c2))) NOTNULL) COLLATE BINARY ASC,(((('485560606') NOT BETWEEN (c19) AND (c2)))<(c0)) DESC) WHERE CASE WHEN json_quote(c2) THEN NULL END; -- 7ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
END; -- 21ms;
ANALYZE; -- 43ms;
INSERT OR ABORT INTO vt0 VALUES (-475675681), (x''), (''); -- 34ms;
REINDEX; -- 22ms;
ALTER TABLE t1 RENAME TO t0; -- 26ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 31ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA default_cache_size; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(((444407961)<=(NULL)), (('') BETWEEN ('') AND (NULL))); -- 1ms;
ALTER TABLE t0 ADD COLUMN c50 INTEGER; -- 21ms;
UPDATE OR REPLACE t0 SET (c19)=('1531765251'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ANALYZE v0; -- 0ms;
ANALYZE; -- 19ms;
INSERT OR REPLACE INTO t0(c2, c4, c0, c19, c50, c3) VALUES (0xffffffffbe633259, '奬S', -4.75675681E8, 0.6003900520885381, '-475675681', ((CASE WHEN x'' THEN 0.6003900520885381 WHEN x'' THEN NULL WHEN NULL THEN NULL END) ISNULL)), (x'', x'', x'', NULL, '奬s', NULL), ('607678067', x'', x'', NULL, 'Dm', 0.631081324574431); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('485560606'); -- 40ms;
ANALYZE; -- 29ms;
VACUUM; -- 43ms;
UPDATE t0 SET (c2)=(0X20932e41); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ ('dm')))<<(((6.07678067E8) IS FALSE))); -- 4ms;
REINDEX; -- 30ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
REINDEX; -- 5ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
CREATE UNIQUE INDEX IF NOT EXISTS i0 ON t0(((((c2) BETWEEN (c0) AND (c4)))<<((((c19)) BETWEEN ((c0)) AND ((c50))))) COLLATE RTRIM,NULL COLLATE RTRIM ASC,c0 COLLATE BINARY ASC,((json_remove(c3, c3)) NOT BETWEEN (c19 COLLATE NOCASE) AND (c4)) COLLATE RTRIM DESC,((c50)>('540202522')) COLLATE BINARY COLLATE BINARY ASC,(- (((0.631081324574431) IS TRUE))) COLLATE RTRIM) WHERE (((((c3)<<(c50)), c4 COLLATE NOCASE, (((c19, c3, c19)) NOT BETWEEN ((c3, c3, x'a1d1')) AND ((c4, c19, c50)))))>((CAST(c19 AS BLOB), (+ (0xffffffffe520183b)), c2))); -- 0ms;
DROP TABLE t0; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 4ms;
END TRANSACTION; -- 25ms;
END TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (x'1bbacc0c21f4333b'); -- 24ms;
ANALYZE; -- 23ms;
PRAGMA main.ignore_check_constraints; -- 0ms;
PRAGMA main.reverse_unordered_selects = true; -- 0ms;
CREATE TEMPORARY TABLE IF NOT EXISTS t0 (c0 TEXT , c1 BLOB , c2 BLOB  CHECK ( ((c1 IN ()) IN ()))); -- 0ms;
ANALYZE sqlite_master; -- 1ms;
VACUUM temp; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL, c0=0.631081324574431 WHERE (((vt0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((((vt0.c0)GLOB(vt0.c0))))); -- 1ms;
CREATE UNIQUE INDEX IF NOT EXISTS i12 ON t0(CASE WHEN ((c2)&(c2)) THEN ((c0)<(c0)) ELSE c1 END DESC,((c0 COLLATE BINARY) NOT BETWEEN (LTRIM(c0, c2)) AND (((((c1)OR(c0)))OR(c0)))) COLLATE RTRIM,(((c1 IN ())) IS TRUE)) WHERE NULL; -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
INSERT OR FAIL INTO t0(c1, c0) VALUES (0.16007439099782017, '\r,CE'); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES ('gMWo'); -- 37ms;
INSERT OR IGNORE INTO t0(c2) VALUES (x''); -- 0ms;
PRAGMA reverse_unordered_selects = true; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '57518'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '42126'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=882279722,14');\n; -- 0ms;
UPDATE OR REPLACE vt0 SET c0=-4.50881477E8, c0=NULL WHERE (((((vt0.c0))>((vt0.c0))))OR((vt0.c0 IN ()))); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR FAIL vt0 SET (c0)=(607678067); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 882279722);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1562295498,9');\n; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
END; -- 26ms;
UPDATE t1 SET c0=0.04164919312981441 WHERE (NOT (((t1.c2)>(t1.c0)))); -- 0ms;
ANALYZE; -- 33ms;
CREATE UNIQUE INDEX IF NOT EXISTS i25 ON t1((- ((+ (0.5060492798896831)))) ASC,((((c0)OR(c1)))*(((c1)-(c0)))),((c0 COLLATE BINARY)LIKE(CAST(c0 AS BLOB)))) WHERE ((((c1)||(c1)))&((~ (c1)))); -- 0ms;
CREATE UNIQUE INDEX i29 ON t1((((- (c2)))OR(CASE NULL  WHEN c0 THEN c1 END)) ASC,((CAST(c2 AS NUMERIC))+(((c1)&(NULL)))) DESC,'5셯\0쏟') WHERE CASE ((((((((c2)AND('')))OR(c1)))OR(c1)))AND(c2))  WHEN ((c2)>=('-1562295498')) THEN ((c1) NOTNULL) ELSE (((c1)) BETWEEN ((c2)) AND ((c0))) END; -- 0ms;
CREATE UNIQUE INDEX i13 ON t1(json_insert(c1, (c1 IN ()), ((c2) IS TRUE)) COLLATE NOCASE DESC,(((0.1526695189866455))==((TRIM(c0)))) COLLATE BINARY,HEX(((c2)>(c2))) ASC) WHERE ((((c1) NOT BETWEEN (c1) AND (c0)))>((((c2))<((c0))))); -- 0ms;
UPDATE OR IGNORE t1 SET c1=1.531765251E9; -- 0ms;
REINDEX RTRIM; -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 51ms;
UPDATE OR IGNORE vt0 SET c0=x'b6d2', c0=0.8426520630261864 WHERE ((vt0.c0 COLLATE BINARY) NOT BETWEEN (NULL) AND (vt0.c0 COLLATE BINARY)); -- 1ms;
REINDEX  vt0; -- 0ms;
UPDATE OR FAIL t1 SET c1=0.34650282996974135 WHERE t1.c2; -- 0ms;
ALTER TABLE t1 RENAME COLUMN c1 TO c17; -- 1ms;
REINDEX NOCASE; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE t1 SET (c17)=('m9Gd蔪'); -- 0ms;
UPDATE t1 SET (c2, c0)=(x'c7eb', NULL) WHERE (NOT (CASE WHEN '1155917030' THEN t1.c2 WHEN NULL THEN 0x883672f WHEN t1.c0 THEN t1.c17 END)); -- 0ms;
PRAGMA main.default_cache_size; -- 0ms;
UPDATE vt0 SET c0=x''; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 4ms;
ALTER TABLE t1 RENAME COLUMN c17 TO c64; -- 1ms;
UPDATE vt0 SET c0='142829359', c0=0x59378212; -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr0 INSTEAD OF DELETE ON v0 BEGIN UPDATE OR IGNORE t1 SET c2=NULL, c2=NULL;END; -- 0ms;
UPDATE OR ROLLBACK t1 SET c0=335474199, c2=0.3363855456756305, c2=NULL; -- 0ms;
PRAGMA legacy_file_format = false; -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL WHERE CASE WHEN IFNULL(t1.c0, t1.c0) THEN CASE t1.c0  WHEN t1.c64 THEN t1.c0 ELSE t1.c64 END ELSE ((((t1.c64)AND(t1.c2)))AND(t1.c2)) END; -- 1ms;
END; -- 32ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 39ms;
INSERT OR ABORT INTO rt0(c0, c1) VALUES (NULL, NULL); -- 27ms;
REINDEX  vt0; -- 0ms;
REINDEX i12; -- 0ms;
REINDEX; -- 24ms;
ANALYZE i13; -- 0ms;
PRAGMA defer_foreign_keys = true; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=15'); -- 25ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' noskipscan'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM vt0, t1, v0 WHERE (0.7645100795897307) ORDER BY ((vt0.c0 IN (t1.c64)) IN ())  NULLS LAST, ((((v0.c0)>=(vt0.c0))) BETWEEN ((((t1.c2)) BETWEEN ((vt0.c0)) AND ((v0.c0)))) AND (COALESCE(vt0.c0, v0.c0)));
SELECT SUM(count) FROM (SELECT ((0.7645100795897307) IS TRUE)  as count FROM vt0, t1, v0 ORDER BY ((vt0.c0 IN (t1.c64)) IN ())  NULLS LAST, ((((v0.c0)>=(vt0.c0))) BETWEEN ((((t1.c2)) BETWEEN ((vt0.c0)) AND ((v0.c0)))) AND (COALESCE(vt0.c0, v0.c0))));
SELECT ALL * FROM vt0, t1, v0 WHERE (0.7645100795897307) ORDER BY ((vt0.c0 IN (t1.c64)) IN ())  NULLS LAST, ((((v0.c0)>=(vt0.c0))) BETWEEN ((((t1.c2)) BETWEEN ((vt0.c0)) AND ((v0.c0)))) AND (COALESCE(vt0.c0, v0.c0)));
SELECT SUM(count) FROM (SELECT ((0.7645100795897307) IS TRUE)  as count FROM vt0, t1, v0 ORDER BY ((vt0.c0 IN (t1.c64)) IN ())  NULLS LAST, ((((v0.c0)>=(vt0.c0))) BETWEEN ((((t1.c2)) BETWEEN ((vt0.c0)) AND ((v0.c0)))) AND (COALESCE(vt0.c0, v0.c0))));
SELECT ALL * FROM vt0, t1, v0 WHERE (0.7645100795897307) ORDER BY ((vt0.c0 IN (t1.c64)) IN ())  NULLS LAST, ((((v0.c0)>=(vt0.c0))) BETWEEN ((((t1.c2)) BETWEEN ((vt0.c0)) AND ((v0.c0)))) AND (COALESCE(vt0.c0, v0.c0)));
SELECT ALL COUNT(*) FROM rt0, t1, v0, vt0 WHERE (x'88e6' COLLATE RTRIM) ORDER BY rt0.c1 DESC, rtreenode(NULLIF(t1.c2, NULL), t1.c2 COLLATE BINARY) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'88e6' COLLATE RTRIM) IS TRUE)  as count FROM rt0, t1, v0, vt0 ORDER BY rt0.c1 DESC, rtreenode(NULLIF(t1.c2, NULL), t1.c2 COLLATE BINARY) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t1, v0, vt0 WHERE (x'88e6' COLLATE RTRIM) ORDER BY rt0.c1 DESC, rtreenode(NULLIF(t1.c2, NULL), t1.c2 COLLATE BINARY) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'88e6' COLLATE RTRIM) IS TRUE)  as count FROM rt0, t1, v0, vt0 ORDER BY rt0.c1 DESC, rtreenode(NULLIF(t1.c2, NULL), t1.c2 COLLATE BINARY) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t1, v0, vt0 WHERE (x'88e6' COLLATE RTRIM) ORDER BY rt0.c1 DESC, rtreenode(NULLIF(t1.c2, NULL), t1.c2 COLLATE BINARY) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0, t1 WHERE (CASE ((t1.c2)<(t1.c64))  WHEN 0.6081979947455193 THEN ((((0.47820223083332236)AND(v0.c0)))OR(t1.c2)) ELSE (vt0.c0 IN (t1.c0)) END) ORDER BY (NOT (NULL));
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c2)<(t1.c64))  WHEN 0.6081979947455193 THEN ((((0.47820223083332236)AND(v0.c0)))OR(t1.c2)) ELSE (vt0.c0 IN (t1.c0)) END) IS TRUE)  as count FROM v0, vt0, t1 ORDER BY (NOT (NULL)));
SELECT COUNT(*) FROM v0, vt0, t1 WHERE (CASE ((t1.c2)<(t1.c64))  WHEN 0.6081979947455193 THEN ((((0.47820223083332236)AND(v0.c0)))OR(t1.c2)) ELSE (vt0.c0 IN (t1.c0)) END) ORDER BY (NOT (NULL));
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c2)<(t1.c64))  WHEN 0.6081979947455193 THEN ((((0.47820223083332236)AND(v0.c0)))OR(t1.c2)) ELSE (vt0.c0 IN (t1.c0)) END) IS TRUE)  as count FROM v0, vt0, t1 ORDER BY (NOT (NULL)));
SELECT COUNT(*) FROM v0, vt0, t1 WHERE (CASE ((t1.c2)<(t1.c64))  WHEN 0.6081979947455193 THEN ((((0.47820223083332236)AND(v0.c0)))OR(t1.c2)) ELSE (vt0.c0 IN (t1.c0)) END) ORDER BY (NOT (NULL));
SELECT ALL COUNT(*) FROM rt0, v0 RIGHT OUTER JOIN t1 ON CASE (v0.c0 IN ())  WHEN CASE t1.c0  WHEN vt0.c0 THEN 0.194923330969192 ELSE t1.c2 END THEN t1.c64 WHEN '' THEN (((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((rt0.c0, rt0.c0, vt0.c0)) AND ((rt0.c0, vt0.c0, t1.c2))) WHEN (((rt0.c2, vt0.c0, rt0.c2))>((NULL, t1.c2, rt0.c1))) THEN ABS(DISTINCT x'') WHEN ((rt0.c0) IS FALSE) THEN ((((t1.c64)AND(vt0.c0)))OR(v0.c0)) WHEN NULL THEN ((((((((t1.c0)OR(vt0.c0)))OR(t1.c0)))AND(t1.c0)))AND(rt0.c1)) ELSE ((t1.c2)>(t1.c64)) END LEFT OUTER JOIN vt0 ON t1.c2 WHERE ((((v0.c0, t1.c64, v0.c0)) NOT BETWEEN (('', (((1155917030, x'', rt0.c2))<=((rt0.c1, rt0.c1, x''))), (- (t1.c2)))) AND ((CAST(x'' AS REAL), NULL, rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, t1.c64, v0.c0)) NOT BETWEEN (('', (((1155917030, x'', rt0.c2))<=((rt0.c1, rt0.c1, x''))), (- (t1.c2)))) AND ((CAST(x'' AS REAL), NULL, rt0.c2)))) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN t1 ON CASE (v0.c0 IN ())  WHEN CASE t1.c0  WHEN vt0.c0 THEN 0.194923330969192 ELSE t1.c2 END THEN t1.c64 WHEN '' THEN (((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((rt0.c0, rt0.c0, vt0.c0)) AND ((rt0.c0, vt0.c0, t1.c2))) WHEN (((rt0.c2, vt0.c0, rt0.c2))>((NULL, t1.c2, rt0.c1))) THEN ABS(DISTINCT x'') WHEN ((rt0.c0) IS FALSE) THEN ((((t1.c64)AND(vt0.c0)))OR(v0.c0)) WHEN NULL THEN ((((((((t1.c0)OR(vt0.c0)))OR(t1.c0)))AND(t1.c0)))AND(rt0.c1)) ELSE ((t1.c2)>(t1.c64)) END LEFT OUTER JOIN vt0 ON t1.c2);
SELECT ALL COUNT(*) FROM rt0, v0 RIGHT OUTER JOIN t1 ON CASE (v0.c0 IN ())  WHEN CASE t1.c0  WHEN vt0.c0 THEN 0.194923330969192 ELSE t1.c2 END THEN t1.c64 WHEN '' THEN (((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((rt0.c0, rt0.c0, vt0.c0)) AND ((rt0.c0, vt0.c0, t1.c2))) WHEN (((rt0.c2, vt0.c0, rt0.c2))>((NULL, t1.c2, rt0.c1))) THEN ABS(DISTINCT x'') WHEN ((rt0.c0) IS FALSE) THEN ((((t1.c64)AND(vt0.c0)))OR(v0.c0)) WHEN NULL THEN ((((((((t1.c0)OR(vt0.c0)))OR(t1.c0)))AND(t1.c0)))AND(rt0.c1)) ELSE ((t1.c2)>(t1.c64)) END LEFT OUTER JOIN vt0 ON t1.c2 WHERE ((((v0.c0, t1.c64, v0.c0)) NOT BETWEEN (('', (((1155917030, x'', rt0.c2))<=((rt0.c1, rt0.c1, x''))), (- (t1.c2)))) AND ((CAST(x'' AS REAL), NULL, rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, t1.c64, v0.c0)) NOT BETWEEN (('', (((1155917030, x'', rt0.c2))<=((rt0.c1, rt0.c1, x''))), (- (t1.c2)))) AND ((CAST(x'' AS REAL), NULL, rt0.c2)))) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN t1 ON CASE (v0.c0 IN ())  WHEN CASE t1.c0  WHEN vt0.c0 THEN 0.194923330969192 ELSE t1.c2 END THEN t1.c64 WHEN '' THEN (((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((rt0.c0, rt0.c0, vt0.c0)) AND ((rt0.c0, vt0.c0, t1.c2))) WHEN (((rt0.c2, vt0.c0, rt0.c2))>((NULL, t1.c2, rt0.c1))) THEN ABS(DISTINCT x'') WHEN ((rt0.c0) IS FALSE) THEN ((((t1.c64)AND(vt0.c0)))OR(v0.c0)) WHEN NULL THEN ((((((((t1.c0)OR(vt0.c0)))OR(t1.c0)))AND(t1.c0)))AND(rt0.c1)) ELSE ((t1.c2)>(t1.c64)) END LEFT OUTER JOIN vt0 ON t1.c2);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, t1 WHERE (((rt0.c0 COLLATE BINARY)<<(t1.c64 COLLATE NOCASE))) ORDER BY ((CAST(rt0.c1 AS NUMERIC))!=(ABS(DISTINCT t1.c64))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE BINARY)<<(t1.c64 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, t1 ORDER BY ((CAST(rt0.c1 AS NUMERIC))!=(ABS(DISTINCT t1.c64))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, t1 WHERE (((rt0.c0 COLLATE BINARY)<<(t1.c64 COLLATE NOCASE))) ORDER BY ((CAST(rt0.c1 AS NUMERIC))!=(ABS(DISTINCT t1.c64))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE BINARY)<<(t1.c64 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, t1 ORDER BY ((CAST(rt0.c1 AS NUMERIC))!=(ABS(DISTINCT t1.c64))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, t1 WHERE (((rt0.c0 COLLATE BINARY)<<(t1.c64 COLLATE NOCASE))) ORDER BY ((CAST(rt0.c1 AS NUMERIC))!=(ABS(DISTINCT t1.c64))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (TRIM(vt0.c0 COLLATE BINARY, (+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(vt0.c0 COLLATE BINARY, (+ (vt0.c0)))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT COUNT(*) FROM vt0 WHERE (TRIM(vt0.c0 COLLATE BINARY, (+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(vt0.c0 COLLATE BINARY, (+ (vt0.c0)))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT COUNT(*) FROM vt0 WHERE (TRIM(vt0.c0 COLLATE BINARY, (+ (vt0.c0))));
SELECT ALL COUNT(*) FROM t1, rt0, v0, vt0 WHERE (((((t1.c64) NOT NULL))-(CAST(rt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((t1.c64) NOT NULL))-(CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM t1, rt0, v0, vt0);
SELECT ALL COUNT(*) FROM t1, rt0, v0, vt0 WHERE (((((t1.c64) NOT NULL))-(CAST(rt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((t1.c64) NOT NULL))-(CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM t1, rt0, v0, vt0);
SELECT ALL COUNT(*) FROM t1, rt0, v0, vt0 WHERE (((((t1.c64) NOT NULL))-(CAST(rt0.c0 AS INTEGER))));
SELECT ALL * FROM rt0 INNER JOIN v0 ON (~ (((rt0.c1) BETWEEN (rt0.c2) AND (NULL)))) WHERE (CAST(((v0.c0)<(rt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)<(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (~ (((rt0.c1) BETWEEN (rt0.c2) AND (NULL)))));
SELECT ALL * FROM rt0 INNER JOIN v0 ON (~ (((rt0.c1) BETWEEN (rt0.c2) AND (NULL)))) WHERE (CAST(((v0.c0)<(rt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)<(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (~ (((rt0.c1) BETWEEN (rt0.c2) AND (NULL)))));
SELECT ALL * FROM rt0 INNER JOIN v0 ON (~ (((rt0.c1) BETWEEN (rt0.c2) AND (NULL)))) WHERE (CAST(((v0.c0)<(rt0.c2)) AS BLOB));
SELECT * FROM vt0, t1 WHERE ((- ((~ (t1.c64)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((~ (t1.c64))))) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE ((- ((~ (t1.c64)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((~ (t1.c64))))) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE ((- ((~ (t1.c64)))));
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE (CASE vt0.c0  WHEN NULL THEN t1.c64 END COLLATE NOCASE) ORDER BY '0.1526695189866455' ASC, ((((t1.c64) NOTNULL))IS(((0.5407545616989251) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN NULL THEN t1.c64 END COLLATE NOCASE) IS TRUE)  as count FROM rt0, t1, vt0 ORDER BY '0.1526695189866455' ASC, ((((t1.c64) NOTNULL))IS(((0.5407545616989251) IS TRUE)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE (CASE vt0.c0  WHEN NULL THEN t1.c64 END COLLATE NOCASE) ORDER BY '0.1526695189866455' ASC, ((((t1.c64) NOTNULL))IS(((0.5407545616989251) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN NULL THEN t1.c64 END COLLATE NOCASE) IS TRUE)  as count FROM rt0, t1, vt0 ORDER BY '0.1526695189866455' ASC, ((((t1.c64) NOTNULL))IS(((0.5407545616989251) IS TRUE)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE (CASE vt0.c0  WHEN NULL THEN t1.c64 END COLLATE NOCASE) ORDER BY '0.1526695189866455' ASC, ((((t1.c64) NOTNULL))IS(((0.5407545616989251) IS TRUE)))  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0, t1, rt0 WHERE (CAST(((t1.c64)>=(rt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c64)>=(rt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0, v0, t1, rt0);
SELECT COUNT(*) FROM vt0, v0, t1, rt0 WHERE (CAST(((t1.c64)>=(rt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c64)>=(rt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0, v0, t1, rt0);
SELECT COUNT(*) FROM vt0, v0, t1, rt0 WHERE (CAST(((t1.c64)>=(rt0.c1)) AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)<>(((((((((vt0.c0)AND(NULL)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)<>(((((((((vt0.c0)AND(NULL)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)<>(((((((((vt0.c0)AND(NULL)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)<>(((((((((vt0.c0)AND(NULL)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)<>(((((((((vt0.c0)AND(NULL)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((NOT (((rt0.c1)&(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c1)&(rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((NOT (((rt0.c1)&(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c1)&(rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((NOT (((rt0.c1)&(rt0.c1)))));
SELECT ALL * FROM vt0, rt0, t1 WHERE (((NULL) ISNULL)) ORDER BY CAST(CASE vt0.c0  WHEN t1.c0 THEN x'65f3' WHEN vt0.c0 THEN rt0.c0 WHEN 0.8592248109720755 THEN rt0.c1 END AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) ISNULL)) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY CAST(CASE vt0.c0  WHEN t1.c0 THEN x'65f3' WHEN vt0.c0 THEN rt0.c0 WHEN 0.8592248109720755 THEN rt0.c1 END AS NUMERIC) ASC);
SELECT ALL * FROM vt0, rt0, t1 WHERE (((NULL) ISNULL)) ORDER BY CAST(CASE vt0.c0  WHEN t1.c0 THEN x'65f3' WHEN vt0.c0 THEN rt0.c0 WHEN 0.8592248109720755 THEN rt0.c1 END AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) ISNULL)) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY CAST(CASE vt0.c0  WHEN t1.c0 THEN x'65f3' WHEN vt0.c0 THEN rt0.c0 WHEN 0.8592248109720755 THEN rt0.c1 END AS NUMERIC) ASC);
SELECT ALL * FROM vt0, rt0, t1 WHERE (((NULL) ISNULL)) ORDER BY CAST(CASE vt0.c0  WHEN t1.c0 THEN x'65f3' WHEN vt0.c0 THEN rt0.c0 WHEN 0.8592248109720755 THEN rt0.c1 END AS NUMERIC) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE rt0.c2  WHEN vt0.c0 THEN (NULL IN (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN vt0.c0 THEN (NULL IN (vt0.c0)) END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE rt0.c2  WHEN vt0.c0 THEN (NULL IN (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN vt0.c0 THEN (NULL IN (vt0.c0)) END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE rt0.c2  WHEN vt0.c0 THEN (NULL IN (vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (IFNULL(DISTINCT vt0.c0 COLLATE NOCASE, 0.16007439099782017)) ORDER BY (+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT vt0.c0 COLLATE NOCASE, 0.16007439099782017)) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (IFNULL(DISTINCT vt0.c0 COLLATE NOCASE, 0.16007439099782017)) ORDER BY (+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT vt0.c0 COLLATE NOCASE, 0.16007439099782017)) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (IFNULL(DISTINCT vt0.c0 COLLATE NOCASE, 0.16007439099782017)) ORDER BY (+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM t1, vt0 CROSS JOIN rt0 ON CAST(HEX(DISTINCT rt0.c0) AS BLOB) WHERE (CASE WHEN ((((((((t1.c0)AND(t1.c64)))OR(t1.c2)))OR(t1.c0)))AND(rt0.c2)) THEN (((('-1201738003')OR(t1.c64)))AND(vt0.c0)) ELSE ((((t1.c0)OR(rt0.c2)))AND(vt0.c0)) END) ORDER BY rt0.c1, ((((t1.c2)<=(rt0.c2)))<=(t1.c64))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((t1.c0)AND(t1.c64)))OR(t1.c2)))OR(t1.c0)))AND(rt0.c2)) THEN (((('-1201738003')OR(t1.c64)))AND(vt0.c0)) ELSE ((((t1.c0)OR(rt0.c2)))AND(vt0.c0)) END) IS TRUE)  as count FROM t1, vt0 CROSS JOIN rt0 ON CAST(HEX(DISTINCT rt0.c0) AS BLOB) ORDER BY rt0.c1, ((((t1.c2)<=(rt0.c2)))<=(t1.c64))  NULLS LAST);
SELECT ALL * FROM t1, vt0 CROSS JOIN rt0 ON CAST(HEX(DISTINCT rt0.c0) AS BLOB) WHERE (CASE WHEN ((((((((t1.c0)AND(t1.c64)))OR(t1.c2)))OR(t1.c0)))AND(rt0.c2)) THEN (((('-1201738003')OR(t1.c64)))AND(vt0.c0)) ELSE ((((t1.c0)OR(rt0.c2)))AND(vt0.c0)) END) ORDER BY rt0.c1, ((((t1.c2)<=(rt0.c2)))<=(t1.c64))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((t1.c0)AND(t1.c64)))OR(t1.c2)))OR(t1.c0)))AND(rt0.c2)) THEN (((('-1201738003')OR(t1.c64)))AND(vt0.c0)) ELSE ((((t1.c0)OR(rt0.c2)))AND(vt0.c0)) END) IS TRUE)  as count FROM t1, vt0 CROSS JOIN rt0 ON CAST(HEX(DISTINCT rt0.c0) AS BLOB) ORDER BY rt0.c1, ((((t1.c2)<=(rt0.c2)))<=(t1.c64))  NULLS LAST);
SELECT ALL * FROM t1, vt0 CROSS JOIN rt0 ON CAST(HEX(DISTINCT rt0.c0) AS BLOB) WHERE (CASE WHEN ((((((((t1.c0)AND(t1.c64)))OR(t1.c2)))OR(t1.c0)))AND(rt0.c2)) THEN (((('-1201738003')OR(t1.c64)))AND(vt0.c0)) ELSE ((((t1.c0)OR(rt0.c2)))AND(vt0.c0)) END) ORDER BY rt0.c1, ((((t1.c2)<=(rt0.c2)))<=(t1.c64))  NULLS LAST;
SELECT COUNT(*) FROM t1, v0, rt0 LEFT OUTER JOIN vt0 ON CAST(vt0.c0 AS TEXT) WHERE (((UPPER(x''))>>(((t1.c64) NOT NULL)))) ORDER BY (((t1.c64)) BETWEEN ((((t1.c0)*(t1.c64)))) AND ((((t1.c64)<=(t1.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(x''))>>(((t1.c64) NOT NULL)))) IS TRUE)  as count FROM t1 NOT INDEXED, v0, rt0 LEFT OUTER JOIN vt0 ON CAST(vt0.c0 AS TEXT) ORDER BY (((t1.c64)) BETWEEN ((((t1.c0)*(t1.c64)))) AND ((((t1.c64)<=(t1.c2))))) ASC);
SELECT COUNT(*) FROM t1, v0, rt0 LEFT OUTER JOIN vt0 ON CAST(vt0.c0 AS TEXT) WHERE (((UPPER(x''))>>(((t1.c64) NOT NULL)))) ORDER BY (((t1.c64)) BETWEEN ((((t1.c0)*(t1.c64)))) AND ((((t1.c64)<=(t1.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(x''))>>(((t1.c64) NOT NULL)))) IS TRUE)  as count FROM t1 NOT INDEXED, v0, rt0 LEFT OUTER JOIN vt0 ON CAST(vt0.c0 AS TEXT) ORDER BY (((t1.c64)) BETWEEN ((((t1.c0)*(t1.c64)))) AND ((((t1.c64)<=(t1.c2))))) ASC);
SELECT COUNT(*) FROM t1, v0, rt0 LEFT OUTER JOIN vt0 ON CAST(vt0.c0 AS TEXT) WHERE (((UPPER(x''))>>(((t1.c64) NOT NULL)))) ORDER BY (((t1.c64)) BETWEEN ((((t1.c0)*(t1.c64)))) AND ((((t1.c64)<=(t1.c2))))) ASC;
SELECT COUNT(*) FROM rt0, t1 RIGHT OUTER JOIN v0 ON (((rt0.c2)AND(rt0.c2)) IN (CAST(rt0.c0 AS NUMERIC))) WHERE ((((NOT (t1.c0)))GLOB((('546516545') NOT BETWEEN (rt0.c2) AND (t1.c0))))) ORDER BY ((((CASE rt0.c2  WHEN t1.c64 THEN t1.c64 END)AND(((t1.c0)<=(t1.c64)))))OR(rt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST, (- (((t1.c2) NOTNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (t1.c0)))GLOB((('546516545') NOT BETWEEN (rt0.c2) AND (t1.c0))))) IS TRUE)  as count FROM rt0, t1 RIGHT OUTER JOIN v0 ON (((rt0.c2)AND(rt0.c2)) IN (CAST(rt0.c0 AS NUMERIC))) ORDER BY ((((CASE rt0.c2  WHEN t1.c64 THEN t1.c64 END)AND(((t1.c0)<=(t1.c64)))))OR(rt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST, (- (((t1.c2) NOTNULL))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t1 RIGHT OUTER JOIN v0 ON (((rt0.c2)AND(rt0.c2)) IN (CAST(rt0.c0 AS NUMERIC))) WHERE ((((NOT (t1.c0)))GLOB((('546516545') NOT BETWEEN (rt0.c2) AND (t1.c0))))) ORDER BY ((((CASE rt0.c2  WHEN t1.c64 THEN t1.c64 END)AND(((t1.c0)<=(t1.c64)))))OR(rt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST, (- (((t1.c2) NOTNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (t1.c0)))GLOB((('546516545') NOT BETWEEN (rt0.c2) AND (t1.c0))))) IS TRUE)  as count FROM rt0, t1 RIGHT OUTER JOIN v0 ON (((rt0.c2)AND(rt0.c2)) IN (CAST(rt0.c0 AS NUMERIC))) ORDER BY ((((CASE rt0.c2  WHEN t1.c64 THEN t1.c64 END)AND(((t1.c0)<=(t1.c64)))))OR(rt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST, (- (((t1.c2) NOTNULL))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t1 RIGHT OUTER JOIN v0 ON (((rt0.c2)AND(rt0.c2)) IN (CAST(rt0.c0 AS NUMERIC))) WHERE ((((NOT (t1.c0)))GLOB((('546516545') NOT BETWEEN (rt0.c2) AND (t1.c0))))) ORDER BY ((((CASE rt0.c2  WHEN t1.c64 THEN t1.c64 END)AND(((t1.c0)<=(t1.c64)))))OR(rt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST, (- (((t1.c2) NOTNULL))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((((vt0.c0)OR(x'')))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)OR(x'')))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((((vt0.c0)OR(x'')))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)OR(x'')))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((((vt0.c0)OR(x'')))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)) COLLATE RTRIM);
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN v0 ON '' WHERE (CASE WHEN t1.c2 THEN CASE t1.c2  WHEN v0.c0 THEN t1.c64 ELSE v0.c0 END ELSE t1.c64 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t1.c2 THEN CASE t1.c2  WHEN v0.c0 THEN t1.c64 ELSE v0.c0 END ELSE t1.c64 END) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN v0 ON '');
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN v0 ON '' WHERE (CASE WHEN t1.c2 THEN CASE t1.c2  WHEN v0.c0 THEN t1.c64 ELSE v0.c0 END ELSE t1.c64 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t1.c2 THEN CASE t1.c2  WHEN v0.c0 THEN t1.c64 ELSE v0.c0 END ELSE t1.c64 END) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN v0 ON '');
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN v0 ON '' WHERE (CASE WHEN t1.c2 THEN CASE t1.c2  WHEN v0.c0 THEN t1.c64 ELSE v0.c0 END ELSE t1.c64 END);
SELECT ALL * FROM v0, vt0, t1 WHERE (ABS(DISTINCT ((t1.c2) NOTNULL))) ORDER BY CASE WHEN '882279722' THEN ((vt0.c0)>(vt0.c0)) ELSE ((x'')<(-1.201738003E9)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT ((t1.c2) NOTNULL))) IS TRUE)  as count FROM v0, vt0, t1 ORDER BY CASE WHEN '882279722' THEN ((vt0.c0)>(vt0.c0)) ELSE ((x'')<(-1.201738003E9)) END DESC);
SELECT ALL * FROM v0, vt0, t1 WHERE (ABS(DISTINCT ((t1.c2) NOTNULL))) ORDER BY CASE WHEN '882279722' THEN ((vt0.c0)>(vt0.c0)) ELSE ((x'')<(-1.201738003E9)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT ((t1.c2) NOTNULL))) IS TRUE)  as count FROM v0, vt0, t1 ORDER BY CASE WHEN '882279722' THEN ((vt0.c0)>(vt0.c0)) ELSE ((x'')<(-1.201738003E9)) END DESC);
SELECT ALL * FROM v0, vt0, t1 WHERE (ABS(DISTINCT ((t1.c2) NOTNULL))) ORDER BY CASE WHEN '882279722' THEN ((vt0.c0)>(vt0.c0)) ELSE ((x'')<(-1.201738003E9)) END DESC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(((((rt0.c1)AND('485560606')))OR(NULL)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c1)AND('485560606')))OR(NULL)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(((((rt0.c1)AND('485560606')))OR(NULL)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c1)AND('485560606')))OR(NULL)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(((((rt0.c1)AND('485560606')))OR(NULL)) AS INTEGER));
SELECT * FROM vt0, rt0 WHERE ((rt0.c2 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((rt0.c2 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((rt0.c2 COLLATE NOCASE IN ()));
SELECT COUNT(*) FROM rt0, vt0 NOT INDEXED, v0 WHERE (json(((rt0.c0)OR(vt0.c0)))) ORDER BY rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((json(((rt0.c0)OR(vt0.c0)))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY rt0.c0 ASC);
SELECT COUNT(*) FROM rt0, vt0 NOT INDEXED, v0 WHERE (json(((rt0.c0)OR(vt0.c0)))) ORDER BY rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((json(((rt0.c0)OR(vt0.c0)))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY rt0.c0 ASC);
SELECT COUNT(*) FROM rt0, vt0 NOT INDEXED, v0 WHERE (json(((rt0.c0)OR(vt0.c0)))) ORDER BY rt0.c0 ASC;
SELECT * FROM v0 INDEXED BY i12, rt0, vt0, t1 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM v0 INDEXED BY i12, rt0, vt0, t1);
SELECT * FROM v0 INDEXED BY i12, rt0, vt0, t1 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM v0 INDEXED BY i12, rt0, vt0, t1);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((vt0.c0) BETWEEN (LOWER(rt0.c1)) AND (vt0.c0)) WHERE ((((0.2863730151253211 IN ()))/((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) ORDER BY (((rt0.c1))<>((((vt0.c0)/(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((0.2863730151253211 IN ()))/((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((vt0.c0) BETWEEN (LOWER(rt0.c1)) AND (vt0.c0)) ORDER BY (((rt0.c1))<>((((vt0.c0)/(rt0.c2))))));
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((vt0.c0) BETWEEN (LOWER(rt0.c1)) AND (vt0.c0)) WHERE ((((0.2863730151253211 IN ()))/((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) ORDER BY (((rt0.c1))<>((((vt0.c0)/(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((0.2863730151253211 IN ()))/((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((vt0.c0) BETWEEN (LOWER(rt0.c1)) AND (vt0.c0)) ORDER BY (((rt0.c1))<>((((vt0.c0)/(rt0.c2))))));
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((vt0.c0) BETWEEN (LOWER(rt0.c1)) AND (vt0.c0)) WHERE ((((0.2863730151253211 IN ()))/((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) ORDER BY (((rt0.c1))<>((((vt0.c0)/(rt0.c2)))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))) NOT NULL)) ORDER BY CASE CASE x'2126'  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END  WHEN MIN(rt0.c2, rt0.c1) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END ELSE HEX(rt0.c0) END ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY CASE CASE x'2126'  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END  WHEN MIN(rt0.c2, rt0.c1) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END ELSE HEX(rt0.c0) END ASC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))) NOT NULL)) ORDER BY CASE CASE x'2126'  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END  WHEN MIN(rt0.c2, rt0.c1) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END ELSE HEX(rt0.c0) END ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY CASE CASE x'2126'  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END  WHEN MIN(rt0.c2, rt0.c1) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END ELSE HEX(rt0.c0) END ASC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))) NOT NULL)) ORDER BY CASE CASE x'2126'  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END  WHEN MIN(rt0.c2, rt0.c1) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END ELSE HEX(rt0.c0) END ASC;
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (x'') ORDER BY (+ (CASE WHEN 0.7307840268283488 THEN v0.c0 ELSE rt0.c0 END));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (+ (CASE WHEN 0.7307840268283488 THEN v0.c0 ELSE rt0.c0 END)));
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (x'') ORDER BY (+ (CASE WHEN 0.7307840268283488 THEN v0.c0 ELSE rt0.c0 END));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (+ (CASE WHEN 0.7307840268283488 THEN v0.c0 ELSE rt0.c0 END)));
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (x'') ORDER BY (+ (CASE WHEN 0.7307840268283488 THEN v0.c0 ELSE rt0.c0 END));
SELECT ALL * FROM rt0, v0, t1, vt0 WHERE ((~ (t1.c0)) COLLATE NOCASE) ORDER BY CAST(CAST(t1.c0 AS NUMERIC) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (t1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0, t1, vt0 ORDER BY CAST(CAST(t1.c0 AS NUMERIC) AS REAL)  NULLS LAST);
SELECT ALL * FROM rt0, v0, t1, vt0 WHERE ((~ (t1.c0)) COLLATE NOCASE) ORDER BY CAST(CAST(t1.c0 AS NUMERIC) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (t1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0, t1, vt0 ORDER BY CAST(CAST(t1.c0 AS NUMERIC) AS REAL)  NULLS LAST);
SELECT ALL * FROM rt0, v0, t1, vt0 WHERE ((~ (t1.c0)) COLLATE NOCASE) ORDER BY CAST(CAST(t1.c0 AS NUMERIC) AS REAL)  NULLS LAST;
SELECT ALL * FROM t1, vt0, v0, rt0 WHERE (((t1.c0)/(t1.c64)) COLLATE BINARY) ORDER BY rt0.c2 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((t1.c0)/(t1.c64)) COLLATE BINARY) IS TRUE)  as count FROM t1, vt0, v0, rt0 ORDER BY rt0.c2 COLLATE BINARY);
SELECT ALL * FROM t1, vt0, v0, rt0 WHERE (((t1.c0)/(t1.c64)) COLLATE BINARY) ORDER BY rt0.c2 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((t1.c0)/(t1.c64)) COLLATE BINARY) IS TRUE)  as count FROM t1, vt0, v0, rt0 ORDER BY rt0.c2 COLLATE BINARY);
SELECT ALL * FROM t1, vt0, v0, rt0 WHERE (((t1.c0)/(t1.c64)) COLLATE BINARY) ORDER BY rt0.c2 COLLATE BINARY;
SELECT ALL COUNT(*) FROM t1, rt0, v0, vt0 WHERE (((vt0.c0)>(v0.c0)) COLLATE NOCASE) ORDER BY CAST(((vt0.c0)<<(vt0.c0)) AS REAL)  NULLS FIRST, ((((t1.c2)AND(rt0.c1)))<>(((v0.c0) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)>(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t1, rt0, v0, vt0 ORDER BY CAST(((vt0.c0)<<(vt0.c0)) AS REAL)  NULLS FIRST, ((((t1.c2)AND(rt0.c1)))!=(((v0.c0) NOT NULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt0, v0, vt0 WHERE (((vt0.c0)>(v0.c0)) COLLATE NOCASE) ORDER BY CAST(((vt0.c0)<<(vt0.c0)) AS REAL)  NULLS FIRST, ((((t1.c2)AND(rt0.c1)))<>(((v0.c0) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)>(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t1, rt0, v0, vt0 ORDER BY CAST(((vt0.c0)<<(vt0.c0)) AS REAL)  NULLS FIRST, ((((t1.c2)AND(rt0.c1)))!=(((v0.c0) NOT NULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt0, v0, vt0 WHERE (((vt0.c0)>(v0.c0)) COLLATE NOCASE) ORDER BY CAST(((vt0.c0)<<(vt0.c0)) AS REAL)  NULLS FIRST, ((((t1.c2)AND(rt0.c1)))<>(((v0.c0) NOT NULL)))  NULLS FIRST;
SELECT ALL * FROM rt0, t1, vt0 WHERE (0.22482617918096603);
SELECT SUM(count) FROM (SELECT ((0.22482617918096603) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT ALL * FROM rt0, t1, vt0 WHERE (0.22482617918096603);
SELECT SUM(count) FROM (SELECT ((0.22482617918096603) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT ALL * FROM rt0, t1, vt0 WHERE (0.22482617918096603);
SELECT ALL * FROM rt0, vt0, t1 WHERE (((((((vt0.c0, t1.c64, rt0.c1))<((t1.c0, vt0.c0, t1.c0)))))>=((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))))) ORDER BY ((((t1.c0)|(rt0.c0))) BETWEEN ((rt0.c1 IN ())) AND (t1.c2)) ASC  NULLS FIRST, ((((x'ccf1') NOTNULL)) NOT BETWEEN (t1.c0) AND (((t1.c2)>>(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0, t1.c64, rt0.c1))<((t1.c0, vt0.c0, t1.c0)))))>=((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))))) IS TRUE)  as count FROM rt0, vt0, t1 ORDER BY ((((t1.c0)|(rt0.c0))) BETWEEN ((rt0.c1 IN ())) AND (t1.c2)) ASC  NULLS FIRST, ((((x'ccf1') NOTNULL)) NOT BETWEEN (t1.c0) AND (((t1.c2)>>(rt0.c1)))) ASC);
SELECT ALL * FROM rt0, vt0, t1 WHERE (((((((vt0.c0, t1.c64, rt0.c1))<((t1.c0, vt0.c0, t1.c0)))))>=((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))))) ORDER BY ((((t1.c0)|(rt0.c0))) BETWEEN ((rt0.c1 IN ())) AND (t1.c2)) ASC  NULLS FIRST, ((((x'ccf1') NOTNULL)) NOT BETWEEN (t1.c0) AND (((t1.c2)>>(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0, t1.c64, rt0.c1))<((t1.c0, vt0.c0, t1.c0)))))>=((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))))) IS TRUE)  as count FROM rt0, vt0, t1 ORDER BY ((((t1.c0)|(rt0.c0))) BETWEEN ((rt0.c1 IN ())) AND (t1.c2)) ASC  NULLS FIRST, ((((x'ccf1') NOTNULL)) NOT BETWEEN (t1.c0) AND (((t1.c2)>>(rt0.c1)))) ASC);
SELECT ALL * FROM rt0, vt0, t1 WHERE (((((((vt0.c0, t1.c64, rt0.c1))<((t1.c0, vt0.c0, t1.c0)))))>=((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))))) ORDER BY ((((t1.c0)|(rt0.c0))) BETWEEN ((rt0.c1 IN ())) AND (t1.c2)) ASC  NULLS FIRST, ((((x'ccf1') NOTNULL)) NOT BETWEEN (t1.c0) AND (((t1.c2)>>(rt0.c1)))) ASC;
SELECT * FROM vt0, t1, v0 WHERE (((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) IN ())) IS TRUE)  as count FROM vt0, t1, v0);
SELECT * FROM vt0, t1, v0 WHERE (((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) IN ())) IS TRUE)  as count FROM vt0, t1, v0);
SELECT * FROM vt0, t1, v0 WHERE (((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) IN ()));
SELECT * FROM t1 WHERE (t1.c2);
SELECT SUM(count) FROM (SELECT ((t1.c2) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (t1.c2);
SELECT SUM(count) FROM (SELECT ((t1.c2) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (t1.c2);
SELECT COUNT(*) FROM t1 WHERE (((t1.c0) NOT BETWEEN ((+ (0.8071993866044019))) AND (CASE t1.c2  WHEN t1.c2 THEN t1.c64 WHEN t1.c2 THEN t1.c2 WHEN t1.c0 THEN t1.c2 ELSE t1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) NOT BETWEEN ((+ (0.8071993866044019))) AND (CASE t1.c2  WHEN t1.c2 THEN t1.c64 WHEN t1.c2 THEN t1.c2 WHEN t1.c0 THEN t1.c2 ELSE t1.c2 END))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((t1.c0) NOT BETWEEN ((+ (0.8071993866044019))) AND (CASE t1.c2  WHEN t1.c2 THEN t1.c64 WHEN t1.c2 THEN t1.c2 WHEN t1.c0 THEN t1.c2 ELSE t1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) NOT BETWEEN ((+ (0.8071993866044019))) AND (CASE t1.c2  WHEN t1.c2 THEN t1.c64 WHEN t1.c2 THEN t1.c2 WHEN t1.c0 THEN t1.c2 ELSE t1.c2 END))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((t1.c0) NOT BETWEEN ((+ (0.8071993866044019))) AND (CASE t1.c2  WHEN t1.c2 THEN t1.c64 WHEN t1.c2 THEN t1.c2 WHEN t1.c0 THEN t1.c2 ELSE t1.c2 END)));
SELECT * FROM vt0, t1 WHERE (((CAST(t1.c2 AS BLOB)) BETWEEN (((t1.c64) NOT BETWEEN (t1.c2) AND (t1.c0))) AND (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c2 AS BLOB)) BETWEEN (((t1.c64) NOT BETWEEN (t1.c2) AND (t1.c0))) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE (((CAST(t1.c2 AS BLOB)) BETWEEN (((t1.c64) NOT BETWEEN (t1.c2) AND (t1.c0))) AND (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c2 AS BLOB)) BETWEEN (((t1.c64) NOT BETWEEN (t1.c2) AND (t1.c0))) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE (((CAST(t1.c2 AS BLOB)) BETWEEN (((t1.c64) NOT BETWEEN (t1.c2) AND (t1.c0))) AND (vt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM t1 WHERE (CAST(((((NULL)AND(t1.c0)))AND(t1.c64)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((((NULL)AND(t1.c0)))AND(t1.c64)) AS REAL)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CAST(((((NULL)AND(t1.c0)))AND(t1.c64)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((((NULL)AND(t1.c0)))AND(t1.c64)) AS REAL)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CAST(((((NULL)AND(t1.c0)))AND(t1.c64)) AS REAL));
SELECT COUNT(*) FROM rt0, v0, t1 WHERE (CASE ((t1.c0) BETWEEN (rt0.c1) AND (t1.c2))  WHEN ((v0.c0)!=(v0.c0)) THEN 0.7580021391101053 ELSE ((t1.c0)AND(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c0) BETWEEN (rt0.c1) AND (t1.c2))  WHEN ((v0.c0)!=(v0.c0)) THEN 0.7580021391101053 ELSE ((t1.c0)AND(rt0.c2)) END) IS TRUE)  as count FROM rt0, v0, t1);
SELECT COUNT(*) FROM rt0, v0, t1 WHERE (CASE ((t1.c0) BETWEEN (rt0.c1) AND (t1.c2))  WHEN ((v0.c0)!=(v0.c0)) THEN 0.7580021391101053 ELSE ((t1.c0)AND(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c0) BETWEEN (rt0.c1) AND (t1.c2))  WHEN ((v0.c0)!=(v0.c0)) THEN 0.7580021391101053 ELSE ((t1.c0)AND(rt0.c2)) END) IS TRUE)  as count FROM rt0, v0, t1);
SELECT COUNT(*) FROM rt0, v0, t1 WHERE (CASE ((t1.c0) BETWEEN (rt0.c1) AND (t1.c2))  WHEN ((v0.c0)!=(v0.c0)) THEN 0.7580021391101053 ELSE ((t1.c0)AND(rt0.c2)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN (rt0.c2)))=(rt0.c1))) ORDER BY ABS(DISTINCT 'p ') ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN (rt0.c2)))=(rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY ABS(DISTINCT 'p ') ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN (rt0.c2)))=(rt0.c1))) ORDER BY ABS(DISTINCT 'p ') ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN (rt0.c2)))=(rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY ABS(DISTINCT 'p ') ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN (rt0.c2)))=(rt0.c1))) ORDER BY ABS(DISTINCT 'p ') ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ ((rt0.c1 IN ())))) ORDER BY CASE WHEN 0.8456150927715622 THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL (((~ ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN 0.8456150927715622 THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ ((rt0.c1 IN ())))) ORDER BY CASE WHEN 0.8456150927715622 THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL (((~ ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN 0.8456150927715622 THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ ((rt0.c1 IN ())))) ORDER BY CASE WHEN 0.8456150927715622 THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) END;
SELECT * FROM rt0, vt0, v0 WHERE (((((((((rt0.c1)OR((NOT (rt0.c2)))))OR(((rt0.c0)%(rt0.c1)))))OR(((rt0.c2) IS TRUE))))OR(((rt0.c0)=(rt0.c0))))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c1)OR((NOT (rt0.c2)))))OR(((rt0.c0)%(rt0.c1)))))OR(((rt0.c2) IS TRUE))))OR(((rt0.c0)=(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY vt0.c0 ASC);
SELECT * FROM rt0, vt0, v0 WHERE (((((((((rt0.c1)OR((NOT (rt0.c2)))))OR(((rt0.c0)%(rt0.c1)))))OR(((rt0.c2) IS TRUE))))OR(((rt0.c0)=(rt0.c0))))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c1)OR((NOT (rt0.c2)))))OR(((rt0.c0)%(rt0.c1)))))OR(((rt0.c2) IS TRUE))))OR(((rt0.c0)=(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY vt0.c0 ASC);
SELECT * FROM rt0, vt0, v0 WHERE (((((((((rt0.c1)OR((NOT (rt0.c2)))))OR(((rt0.c0)%(rt0.c1)))))OR(((rt0.c2) IS TRUE))))OR(((rt0.c0)=(rt0.c0))))) ORDER BY vt0.c0 ASC;
SELECT ALL * FROM v0 WHERE (0.0031260135654587184);
SELECT SUM(count) FROM (SELECT ALL ((0.0031260135654587184) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (0.0031260135654587184);
SELECT SUM(count) FROM (SELECT ALL ((0.0031260135654587184) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (0.0031260135654587184);
SELECT * FROM rt0, vt0, t1, v0 WHERE ((((rt0.c1 COLLATE NOCASE))>=((((((v0.c0)AND(t1.c64)))AND(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 COLLATE NOCASE))>=((((((v0.c0)AND(t1.c64)))AND(rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0, t1, v0);
SELECT * FROM rt0, vt0, t1, v0 WHERE ((((rt0.c1 COLLATE NOCASE))>=((((((v0.c0)AND(t1.c64)))AND(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 COLLATE NOCASE))>=((((((v0.c0)AND(t1.c64)))AND(rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0, t1, v0);
SELECT * FROM rt0, vt0, t1, v0 WHERE ((((rt0.c1 COLLATE NOCASE))>=((((((v0.c0)AND(t1.c64)))AND(rt0.c0))))));
SELECT * FROM rt0 INNER JOIN v0 ON ((rt0.c0)<=(((rt0.c2)>(rt0.c0)))) WHERE ((((((rt0.c2 IN (rt0.c0)))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))OR(rt0.c0))) ORDER BY ((((rt0.c2) NOT BETWEEN ('p ') AND ('545553702')))<(x'5eba'))  NULLS FIRST, CAST(1.15591703E9 AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2 IN (rt0.c0)))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))OR(rt0.c0))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((rt0.c0)<=(((rt0.c2)>(rt0.c0)))) ORDER BY ((((rt0.c2) NOT BETWEEN ('p ') AND ('545553702')))<(x'5eba'))  NULLS FIRST, CAST(1.15591703E9 AS REAL)  NULLS LAST);
SELECT * FROM rt0 INNER JOIN v0 ON ((rt0.c0)<=(((rt0.c2)>(rt0.c0)))) WHERE ((((((rt0.c2 IN (rt0.c0)))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))OR(rt0.c0))) ORDER BY ((((rt0.c2) NOT BETWEEN ('p ') AND ('545553702')))<(x'5eba'))  NULLS FIRST, CAST(1.15591703E9 AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2 IN (rt0.c0)))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))OR(rt0.c0))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((rt0.c0)<=(((rt0.c2)>(rt0.c0)))) ORDER BY ((((rt0.c2) NOT BETWEEN ('p ') AND ('545553702')))<(x'5eba'))  NULLS FIRST, CAST(1.15591703E9 AS REAL)  NULLS LAST);
SELECT * FROM rt0 INNER JOIN v0 ON ((rt0.c0)<=(((rt0.c2)>(rt0.c0)))) WHERE ((((((rt0.c2 IN (rt0.c0)))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))OR(rt0.c0))) ORDER BY ((((rt0.c2) NOT BETWEEN ('p ') AND ('545553702')))<(x'5eba'))  NULLS FIRST, CAST(1.15591703E9 AS REAL)  NULLS LAST;
SELECT * FROM vt0 CROSS JOIN t1 ON CAST((('\r,CE') IS TRUE) AS REAL) LEFT OUTER JOIN rt0 ON NULLIF(DISTINCT ((rt0.c1) NOT NULL), CAST(t1.c2 AS REAL)) WHERE (IFNULL(((((((((vt0.c0)OR(vt0.c0)))OR(t1.c0)))AND(rt0.c1)))OR(rt0.c2)), ((((vt0.c0)AND(t1.c2)))AND(rt0.c1)))) ORDER BY '-291827686' ASC;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((((((((vt0.c0)OR(vt0.c0)))OR(t1.c0)))AND(rt0.c1)))OR(rt0.c2)), ((((vt0.c0)AND(t1.c2)))AND(rt0.c1)))) IS TRUE)  as count FROM vt0 NOT INDEXED CROSS JOIN t1 ON CAST((('\r,CE') IS TRUE) AS REAL) LEFT OUTER JOIN rt0 ON NULLIF(DISTINCT ((rt0.c1) NOT NULL), CAST(t1.c2 AS REAL)) ORDER BY '-291827686' ASC);
SELECT * FROM vt0 CROSS JOIN t1 ON CAST((('\r,CE') IS TRUE) AS REAL) LEFT OUTER JOIN rt0 ON NULLIF(DISTINCT ((rt0.c1) NOT NULL), CAST(t1.c2 AS REAL)) WHERE (IFNULL(((((((((vt0.c0)OR(vt0.c0)))OR(t1.c0)))AND(rt0.c1)))OR(rt0.c2)), ((((vt0.c0)AND(t1.c2)))AND(rt0.c1)))) ORDER BY '-291827686' ASC;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((((((((vt0.c0)OR(vt0.c0)))OR(t1.c0)))AND(rt0.c1)))OR(rt0.c2)), ((((vt0.c0)AND(t1.c2)))AND(rt0.c1)))) IS TRUE)  as count FROM vt0 NOT INDEXED CROSS JOIN t1 ON CAST((('\r,CE') IS TRUE) AS REAL) LEFT OUTER JOIN rt0 ON NULLIF(DISTINCT ((rt0.c1) NOT NULL), CAST(t1.c2 AS REAL)) ORDER BY '-291827686' ASC);
SELECT * FROM vt0 CROSS JOIN t1 ON CAST((('\r,CE') IS TRUE) AS REAL) LEFT OUTER JOIN rt0 ON NULLIF(DISTINCT ((rt0.c1) NOT NULL), CAST(t1.c2 AS REAL)) WHERE (IFNULL(((((((((vt0.c0)OR(vt0.c0)))OR(t1.c0)))AND(rt0.c1)))OR(rt0.c2)), ((((vt0.c0)AND(t1.c2)))AND(rt0.c1)))) ORDER BY '-291827686' ASC;
SELECT COUNT(*) FROM rt0, vt0, t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT COUNT(*) FROM rt0, vt0, t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT COUNT(*) FROM rt0, vt0, t1 WHERE (t1.c0);
SELECT ALL * FROM v0, t1 LEFT OUTER JOIN vt0 ON ((x'') NOT NULL) WHERE ((NOT (((v0.c0)!=(v0.c0))))) ORDER BY (((TRIM(t1.c2, t1.c2)))<(('540202522'))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((v0.c0)<>(v0.c0))))) IS TRUE)  as count FROM v0, t1 LEFT OUTER JOIN vt0 ON ((x'') NOT NULL) ORDER BY (((TRIM(t1.c2, t1.c2)))<(('540202522'))) ASC);
SELECT ALL * FROM v0, t1 LEFT OUTER JOIN vt0 ON ((x'') NOT NULL) WHERE ((NOT (((v0.c0)!=(v0.c0))))) ORDER BY (((TRIM(t1.c2, t1.c2)))<(('540202522'))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((v0.c0)<>(v0.c0))))) IS TRUE)  as count FROM v0, t1 LEFT OUTER JOIN vt0 ON ((x'') NOT NULL) ORDER BY (((TRIM(t1.c2, t1.c2)))<(('540202522'))) ASC);
SELECT ALL * FROM v0, t1 LEFT OUTER JOIN vt0 ON ((x'') NOT NULL) WHERE ((NOT (((v0.c0)!=(v0.c0))))) ORDER BY (((TRIM(t1.c2, t1.c2)))<(('540202522'))) ASC;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))==(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY ((((vt0.c0)<(vt0.c0))) NOT BETWEEN (CAST(x'' AS REAL)) AND (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))  NULLS FIRST, vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))=(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<(vt0.c0))) NOT BETWEEN (CAST(x'' AS REAL)) AND (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))  NULLS FIRST, vt0.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))==(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY ((((vt0.c0)<(vt0.c0))) NOT BETWEEN (CAST(x'' AS REAL)) AND (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))  NULLS FIRST, vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))=(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<(vt0.c0))) NOT BETWEEN (CAST(x'' AS REAL)) AND (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))  NULLS FIRST, vt0.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))==(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY ((((vt0.c0)<(vt0.c0))) NOT BETWEEN (CAST(x'' AS REAL)) AND (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))  NULLS FIRST, vt0.c0 DESC  NULLS FIRST;
SELECT * FROM rt0, vt0, v0, t1 WHERE (t1.c2) ORDER BY t1.c64 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c2) IS TRUE)  as count FROM rt0, vt0, v0, t1 ORDER BY t1.c64 DESC  NULLS LAST);
SELECT * FROM rt0, vt0, v0, t1 WHERE (t1.c2) ORDER BY t1.c64 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c2) IS TRUE)  as count FROM rt0, vt0, v0, t1 ORDER BY t1.c64 DESC  NULLS LAST);
SELECT * FROM rt0, vt0, v0, t1 WHERE (t1.c2) ORDER BY t1.c64 DESC  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (((((((t1.c64)AND(t1.c2)))AND(t1.c2)))|(((('-1486063206'))<>((t1.c0)))))) ORDER BY ((((t1.c64) IS TRUE))<=(((t1.c2)&('-BHQF‭[')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c64)AND(t1.c2)))AND(t1.c2)))|(((('-1486063206'))<>((t1.c0)))))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c64) IS TRUE))<=(((t1.c2)&('-BHQF‭[')))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (((((((t1.c64)AND(t1.c2)))AND(t1.c2)))|(((('-1486063206'))<>((t1.c0)))))) ORDER BY ((((t1.c64) IS TRUE))<=(((t1.c2)&('-BHQF‭[')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c64)AND(t1.c2)))AND(t1.c2)))|(((('-1486063206'))<>((t1.c0)))))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c64) IS TRUE))<=(((t1.c2)&('-BHQF‭[')))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (((((((t1.c64)AND(t1.c2)))AND(t1.c2)))|(((('-1486063206'))<>((t1.c0)))))) ORDER BY ((((t1.c64) IS TRUE))<=(((t1.c2)&('-BHQF‭[')))) DESC  NULLS LAST;
SELECT * FROM v0, t1 WHERE (load_extension(NULL)) ORDER BY CASE t1.c2  WHEN (((t1.c2))>((t1.c0))) THEN '444407961' WHEN ((v0.c0) NOTNULL) THEN NULLIF(DISTINCT v0.c0, v0.c0) WHEN t1.c64 THEN ((v0.c0)=(t1.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((load_extension(NULL)) IS TRUE)  as count FROM v0, t1 ORDER BY CASE t1.c2  WHEN (((t1.c2))>((t1.c0))) THEN '444407961' WHEN ((v0.c0) NOTNULL) THEN NULLIF(DISTINCT v0.c0, v0.c0) WHEN t1.c64 THEN ((v0.c0)=(t1.c0)) END DESC);
SELECT * FROM v0, t1 WHERE (load_extension(NULL)) ORDER BY CASE t1.c2  WHEN (((t1.c2))>((t1.c0))) THEN '444407961' WHEN ((v0.c0) NOTNULL) THEN NULLIF(DISTINCT v0.c0, v0.c0) WHEN t1.c64 THEN ((v0.c0)=(t1.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((load_extension(NULL)) IS TRUE)  as count FROM v0, t1 ORDER BY CASE t1.c2  WHEN (((t1.c2))>((t1.c0))) THEN '444407961' WHEN ((v0.c0) NOTNULL) THEN NULLIF(DISTINCT v0.c0, v0.c0) WHEN t1.c64 THEN ((v0.c0)=(t1.c0)) END DESC);
SELECT * FROM v0, t1 WHERE (load_extension(NULL)) ORDER BY CASE t1.c2  WHEN (((t1.c2))>((t1.c0))) THEN '444407961' WHEN ((v0.c0) NOTNULL) THEN NULLIF(DISTINCT v0.c0, v0.c0) WHEN t1.c64 THEN ((v0.c0)=(t1.c0)) END DESC;
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON (((rt0.c0 IN ())) IS TRUE) WHERE (CAST((((rt0.c2))>((rt0.c2))) AS BLOB)) ORDER BY ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))>=(((NULL)AND(rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c2))>((rt0.c2))) AS BLOB)) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (((rt0.c0 IN ())) IS TRUE) ORDER BY ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))>=(((NULL)AND(rt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON (((rt0.c0 IN ())) IS TRUE) WHERE (CAST((((rt0.c2))>((rt0.c2))) AS BLOB)) ORDER BY ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))>=(((NULL)AND(rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c2))>((rt0.c2))) AS BLOB)) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (((rt0.c0 IN ())) IS TRUE) ORDER BY ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))>=(((NULL)AND(rt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON (((rt0.c0 IN ())) IS TRUE) WHERE (CAST((((rt0.c2))>((rt0.c2))) AS BLOB)) ORDER BY ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))>=(((NULL)AND(rt0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM v0, vt0, rt0, t1 WHERE (CASE WHEN t1.c2 COLLATE BINARY THEN (((0.2409694129818184)) NOT BETWEEN ((t1.c0)) AND ((rt0.c0))) WHEN '䛊gO}' THEN ((vt0.c0)*(t1.c2)) WHEN ((vt0.c0) BETWEEN (rt0.c1) AND (NULL)) THEN '-K7rCi''' ELSE v0.c0 END) ORDER BY ((CASE rt0.c2  WHEN rt0.c2 THEN v0.c0 WHEN rt0.c0 THEN v0.c0 WHEN v0.c0 THEN t1.c2 ELSE rt0.c2 END) NOT BETWEEN (v0.c0) AND (((0.810083537867287) NOT BETWEEN (rt0.c0) AND ('-820536440')))), (NOT (rt0.c2)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((CASE WHEN t1.c2 COLLATE BINARY THEN (((0.2409694129818184)) NOT BETWEEN ((t1.c0)) AND ((rt0.c0))) WHEN '䛊gO}' THEN ((vt0.c0)*(t1.c2)) WHEN ((vt0.c0) BETWEEN (rt0.c1) AND (NULL)) THEN '-K7rCi''' ELSE v0.c0 END) IS TRUE)  as count FROM v0, vt0, rt0, t1 ORDER BY ((CASE rt0.c2  WHEN rt0.c2 THEN v0.c0 WHEN rt0.c0 THEN v0.c0 WHEN v0.c0 THEN t1.c2 ELSE rt0.c2 END) NOT BETWEEN (v0.c0) AND (((0.810083537867287) NOT BETWEEN (rt0.c0) AND ('-820536440')))), (NOT (rt0.c2)) COLLATE NOCASE);
SELECT ALL * FROM v0, vt0, rt0, t1 WHERE (CASE WHEN t1.c2 COLLATE BINARY THEN (((0.2409694129818184)) NOT BETWEEN ((t1.c0)) AND ((rt0.c0))) WHEN '䛊gO}' THEN ((vt0.c0)*(t1.c2)) WHEN ((vt0.c0) BETWEEN (rt0.c1) AND (NULL)) THEN '-K7rCi''' ELSE v0.c0 END) ORDER BY ((CASE rt0.c2  WHEN rt0.c2 THEN v0.c0 WHEN rt0.c0 THEN v0.c0 WHEN v0.c0 THEN t1.c2 ELSE rt0.c2 END) NOT BETWEEN (v0.c0) AND (((0.810083537867287) NOT BETWEEN (rt0.c0) AND ('-820536440')))), (NOT (rt0.c2)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((CASE WHEN t1.c2 COLLATE BINARY THEN (((0.2409694129818184)) NOT BETWEEN ((t1.c0)) AND ((rt0.c0))) WHEN '䛊gO}' THEN ((vt0.c0)*(t1.c2)) WHEN ((vt0.c0) BETWEEN (rt0.c1) AND (NULL)) THEN '-K7rCi''' ELSE v0.c0 END) IS TRUE)  as count FROM v0, vt0, rt0, t1 ORDER BY ((CASE rt0.c2  WHEN rt0.c2 THEN v0.c0 WHEN rt0.c0 THEN v0.c0 WHEN v0.c0 THEN t1.c2 ELSE rt0.c2 END) NOT BETWEEN (v0.c0) AND (((0.810083537867287) NOT BETWEEN (rt0.c0) AND ('-820536440')))), (NOT (rt0.c2)) COLLATE NOCASE);
SELECT ALL * FROM v0, vt0, rt0, t1 WHERE (CASE WHEN t1.c2 COLLATE BINARY THEN (((0.2409694129818184)) NOT BETWEEN ((t1.c0)) AND ((rt0.c0))) WHEN '䛊gO}' THEN ((vt0.c0)*(t1.c2)) WHEN ((vt0.c0) BETWEEN (rt0.c1) AND (NULL)) THEN '-K7rCi''' ELSE v0.c0 END) ORDER BY ((CASE rt0.c2  WHEN rt0.c2 THEN v0.c0 WHEN rt0.c0 THEN v0.c0 WHEN v0.c0 THEN t1.c2 ELSE rt0.c2 END) NOT BETWEEN (v0.c0) AND (((0.810083537867287) NOT BETWEEN (rt0.c0) AND ('-820536440')))), (NOT (rt0.c2)) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (CASE WHEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN NULL WHEN v0.c0 THEN vt0.c0 ELSE rt0.c0 END THEN NULLIF(DISTINCT NULL, vt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN NULL WHEN v0.c0 THEN vt0.c0 ELSE rt0.c0 END THEN NULLIF(DISTINCT NULL, vt0.c0) END) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (CASE WHEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN NULL WHEN v0.c0 THEN vt0.c0 ELSE rt0.c0 END THEN NULLIF(DISTINCT NULL, vt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN NULL WHEN v0.c0 THEN vt0.c0 ELSE rt0.c0 END THEN NULLIF(DISTINCT NULL, vt0.c0) END) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (CASE WHEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN NULL WHEN v0.c0 THEN vt0.c0 ELSE rt0.c0 END THEN NULLIF(DISTINCT NULL, vt0.c0) END);
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE ((((((723581270)) NOT BETWEEN ((rt0.c0)) AND ((t1.c64))))GLOB(((t1.c64)IS NOT(t1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((723581270)) NOT BETWEEN ((rt0.c0)) AND ((t1.c64))))GLOB(((t1.c64)IS NOT(t1.c0))))) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE ((((((723581270)) NOT BETWEEN ((rt0.c0)) AND ((t1.c64))))GLOB(((t1.c64)IS NOT(t1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((723581270)) NOT BETWEEN ((rt0.c0)) AND ((t1.c64))))GLOB(((t1.c64)IS NOT(t1.c0))))) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE ((((((723581270)) NOT BETWEEN ((rt0.c0)) AND ((t1.c64))))GLOB(((t1.c64)IS NOT(t1.c0)))));
SELECT * FROM t1 RIGHT OUTER JOIN v0 ON (((~ (vt0.c0))) BETWEEN ((t1.c2 IN ())) AND ((vt0.c0 IN ()))) INNER JOIN vt0 ON COALESCE((((v0.c0, t1.c0, t1.c0))<((t1.c0, t1.c2, v0.c0))), ((('-133173079', t1.c64, vt0.c0))>=(('u3', t1.c64, '-1257260017')))) WHERE (0X31570360) ORDER BY (t1.c0 COLLATE BINARY IN (((t1.c2)>=(v0.c0)), ((v0.c0)<(v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0x31570360) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN v0 ON (((~ (vt0.c0))) BETWEEN ((t1.c2 IN ())) AND ((vt0.c0 IN ()))) INNER JOIN vt0 ON COALESCE((((v0.c0, t1.c0, t1.c0))<((t1.c0, t1.c2, v0.c0))), ((('-133173079', t1.c64, vt0.c0))>=(('u3', t1.c64, '-1257260017')))) ORDER BY (t1.c0 COLLATE BINARY IN (((t1.c2)>=(v0.c0)), ((v0.c0)<(v0.c0)))) DESC  NULLS FIRST);
SELECT * FROM t1 RIGHT OUTER JOIN v0 ON (((~ (vt0.c0))) BETWEEN ((t1.c2 IN ())) AND ((vt0.c0 IN ()))) INNER JOIN vt0 ON COALESCE((((v0.c0, t1.c0, t1.c0))<((t1.c0, t1.c2, v0.c0))), ((('-133173079', t1.c64, vt0.c0))>=(('u3', t1.c64, '-1257260017')))) WHERE (0X31570360) ORDER BY (t1.c0 COLLATE BINARY IN (((t1.c2)>=(v0.c0)), ((v0.c0)<(v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0x31570360) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN v0 ON (((~ (vt0.c0))) BETWEEN ((t1.c2 IN ())) AND ((vt0.c0 IN ()))) INNER JOIN vt0 ON COALESCE((((v0.c0, t1.c0, t1.c0))<((t1.c0, t1.c2, v0.c0))), ((('-133173079', t1.c64, vt0.c0))>=(('u3', t1.c64, '-1257260017')))) ORDER BY (t1.c0 COLLATE BINARY IN (((t1.c2)>=(v0.c0)), ((v0.c0)<(v0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 FULL OUTER JOIN t1 ON ((t1.c2 COLLATE NOCASE) NOT BETWEEN (((rt0.c1)||(t1.c2))) AND (CASE WHEN t1.c64 THEN rt0.c0 ELSE vt0.c0 END)) INNER JOIN vt0 ON SQLITE_SOURCE_ID() WHERE (((DATETIME(vt0.c0, rt0.c2, rt0.c1)) IS TRUE)) ORDER BY (((vt0.c0) NOT BETWEEN (t1.c2) AND (rt0.c1)) IN ((('1606022309') BETWEEN (t1.c64) AND (0xffffffffbd12c3b6)), CASE WHEN t1.c2 THEN vt0.c0 ELSE t1.c0 END, (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((t1.c64))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((DATETIME(vt0.c0, rt0.c2, rt0.c1)) IS TRUE)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON ((t1.c2 COLLATE NOCASE) NOT BETWEEN (((rt0.c1)||(t1.c2))) AND (CASE WHEN t1.c64 THEN rt0.c0 ELSE vt0.c0 END)) INNER JOIN vt0 ON SQLITE_SOURCE_ID() ORDER BY (((vt0.c0) NOT BETWEEN (t1.c2) AND (rt0.c1)) IN ((('1606022309') BETWEEN (t1.c64) AND (0xffffffffbd12c3b6)), CASE WHEN t1.c2 THEN vt0.c0 ELSE t1.c0 END, (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((t1.c64))))) DESC);
SELECT ALL * FROM rt0 FULL OUTER JOIN t1 ON ((t1.c2 COLLATE NOCASE) NOT BETWEEN (((rt0.c1)||(t1.c2))) AND (CASE WHEN t1.c64 THEN rt0.c0 ELSE vt0.c0 END)) INNER JOIN vt0 ON SQLITE_SOURCE_ID() WHERE (((DATETIME(vt0.c0, rt0.c2, rt0.c1)) IS TRUE)) ORDER BY (((vt0.c0) NOT BETWEEN (t1.c2) AND (rt0.c1)) IN ((('1606022309') BETWEEN (t1.c64) AND (0xffffffffbd12c3b6)), CASE WHEN t1.c2 THEN vt0.c0 ELSE t1.c0 END, (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((t1.c64))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((DATETIME(vt0.c0, rt0.c2, rt0.c1)) IS TRUE)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON ((t1.c2 COLLATE NOCASE) NOT BETWEEN (((rt0.c1)||(t1.c2))) AND (CASE WHEN t1.c64 THEN rt0.c0 ELSE vt0.c0 END)) INNER JOIN vt0 ON SQLITE_SOURCE_ID() ORDER BY (((vt0.c0) NOT BETWEEN (t1.c2) AND (rt0.c1)) IN ((('1606022309') BETWEEN (t1.c64) AND (0xffffffffbd12c3b6)), CASE WHEN t1.c2 THEN vt0.c0 ELSE t1.c0 END, (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((t1.c64))))) DESC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((x'') NOT BETWEEN (v0.c0) AND (rt0.c2)) IN ())) ORDER BY (((rt0.c2)<(rt0.c0)) IN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((x'') NOT BETWEEN (v0.c0) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c2)<(rt0.c0)) IN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((x'') NOT BETWEEN (v0.c0) AND (rt0.c2)) IN ())) ORDER BY (((rt0.c2)<(rt0.c0)) IN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((x'') NOT BETWEEN (v0.c0) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c2)<(rt0.c0)) IN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((x'') NOT BETWEEN (v0.c0) AND (rt0.c2)) IN ())) ORDER BY (((rt0.c2)<(rt0.c0)) IN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM t1 NATURAL JOIN rt0 WHERE ((((+ (rt0.c1))) BETWEEN (LOWER(rt0.c0)) AND ((NOT (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1))) BETWEEN (LOWER(rt0.c0)) AND ((NOT (t1.c0))))) IS TRUE)  as count FROM t1 NATURAL JOIN rt0);
SELECT ALL * FROM t1 NATURAL JOIN rt0 WHERE ((((+ (rt0.c1))) BETWEEN (LOWER(rt0.c0)) AND ((NOT (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1))) BETWEEN (LOWER(rt0.c0)) AND ((NOT (t1.c0))))) IS TRUE)  as count FROM t1 NATURAL JOIN rt0);
SELECT ALL * FROM t1 NATURAL JOIN rt0 WHERE ((((+ (rt0.c1))) BETWEEN (LOWER(rt0.c0)) AND ((NOT (t1.c0)))));
SELECT COUNT(*) FROM v0, rt0 FULL OUTER JOIN t1 ON ((((((x'90f697dd') ISNULL))OR(CASE WHEN t1.c0 THEN rt0.c2 END)))AND((((rt0.c0))<=((rt0.c1))))) WHERE ((((((((((((((((rt0.c0)OR(v0.c0)))AND(rt0.c1)))AND(x'')))AND(t1.c2)))OR(v0.c0)))AND('YG'))))>(((((t1.c0))==((t1.c64))))))) ORDER BY 0.963205445503838;
SELECT SUM(count) FROM (SELECT (((((((((((((((((rt0.c0)OR(v0.c0)))AND(rt0.c1)))AND(x'')))AND(t1.c2)))OR(v0.c0)))AND('YG'))))>(((((t1.c0))=((t1.c64))))))) IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN t1 ON ((((((x'90f697dd') ISNULL))OR(CASE WHEN t1.c0 THEN rt0.c2 END)))AND((((rt0.c0))<=((rt0.c1))))) ORDER BY 0.963205445503838);
SELECT COUNT(*) FROM v0, rt0 FULL OUTER JOIN t1 ON ((((((x'90f697dd') ISNULL))OR(CASE WHEN t1.c0 THEN rt0.c2 END)))AND((((rt0.c0))<=((rt0.c1))))) WHERE ((((((((((((((((rt0.c0)OR(v0.c0)))AND(rt0.c1)))AND(x'')))AND(t1.c2)))OR(v0.c0)))AND('YG'))))>(((((t1.c0))==((t1.c64))))))) ORDER BY 0.963205445503838;
SELECT SUM(count) FROM (SELECT (((((((((((((((((rt0.c0)OR(v0.c0)))AND(rt0.c1)))AND(x'')))AND(t1.c2)))OR(v0.c0)))AND('YG'))))>(((((t1.c0))=((t1.c64))))))) IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN t1 ON ((((((x'90f697dd') ISNULL))OR(CASE WHEN t1.c0 THEN rt0.c2 END)))AND((((rt0.c0))<=((rt0.c1))))) ORDER BY 0.963205445503838);
SELECT COUNT(*) FROM v0, rt0 FULL OUTER JOIN t1 ON ((((((x'90f697dd') ISNULL))OR(CASE WHEN t1.c0 THEN rt0.c2 END)))AND((((rt0.c0))<=((rt0.c1))))) WHERE ((((((((((((((((rt0.c0)OR(v0.c0)))AND(rt0.c1)))AND(x'')))AND(t1.c2)))OR(v0.c0)))AND('YG'))))>(((((t1.c0))==((t1.c64))))))) ORDER BY 0.963205445503838;
SELECT ALL COUNT(*) FROM t1, v0, rt0, vt0 WHERE (t1.c64) ORDER BY (v0.c0 IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c64) IS TRUE)  as count FROM t1, v0, rt0, vt0 ORDER BY (v0.c0 IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, v0, rt0, vt0 WHERE (t1.c64) ORDER BY (v0.c0 IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c64) IS TRUE)  as count FROM t1, v0, rt0, vt0 ORDER BY (v0.c0 IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, v0, rt0, vt0 WHERE (t1.c64) ORDER BY (v0.c0 IN ()) DESC  NULLS LAST;
SELECT * FROM rt0, vt0, t1, v0 WHERE ((('HeZfUkPT켙')-(CAST(t1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((('HeZfUkPT켙')-(CAST(t1.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0, vt0, t1, v0);
SELECT * FROM rt0, vt0, t1, v0 WHERE ((('HeZfUkPT켙')-(CAST(t1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((('HeZfUkPT켙')-(CAST(t1.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0, vt0, t1, v0);
SELECT * FROM rt0, vt0, t1, v0 WHERE ((('HeZfUkPT켙')-(CAST(t1.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt0, v0 RIGHT OUTER JOIN t1 ON 1531765251 CROSS JOIN rt0 ON highlight(vt0.c0 COLLATE RTRIM, ((rt0.c2)>(t1.c64)), ((rt0.c0) IS TRUE), rt0.c0 COLLATE NOCASE) WHERE (((((((((((t1.c0) IS FALSE))AND(0xffffffffd38d671f)))AND(((rt0.c1)|(v0.c0)))))AND(((rt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c0)))))AND(t1.c64)));
SELECT SUM(count) FROM (SELECT ((((((((((((t1.c0) IS FALSE))AND(0Xffffffffd38d671f)))AND(((rt0.c1)|(v0.c0)))))AND(((rt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c0)))))AND(t1.c64))) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN t1 ON 1531765251 CROSS JOIN rt0 ON highlight(vt0.c0 COLLATE RTRIM, ((rt0.c2)>(t1.c64)), ((rt0.c0) IS TRUE), rt0.c0 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM vt0, v0 RIGHT OUTER JOIN t1 ON 1531765251 CROSS JOIN rt0 ON highlight(vt0.c0 COLLATE RTRIM, ((rt0.c2)>(t1.c64)), ((rt0.c0) IS TRUE), rt0.c0 COLLATE NOCASE) WHERE (((((((((((t1.c0) IS FALSE))AND(0xffffffffd38d671f)))AND(((rt0.c1)|(v0.c0)))))AND(((rt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c0)))))AND(t1.c64)));
SELECT SUM(count) FROM (SELECT ((((((((((((t1.c0) IS FALSE))AND(0Xffffffffd38d671f)))AND(((rt0.c1)|(v0.c0)))))AND(((rt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c0)))))AND(t1.c64))) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN t1 ON 1531765251 CROSS JOIN rt0 ON highlight(vt0.c0 COLLATE RTRIM, ((rt0.c2)>(t1.c64)), ((rt0.c0) IS TRUE), rt0.c0 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM vt0, v0 RIGHT OUTER JOIN t1 ON 1531765251 CROSS JOIN rt0 ON highlight(vt0.c0 COLLATE RTRIM, ((rt0.c2)>(t1.c64)), ((rt0.c0) IS TRUE), rt0.c0 COLLATE NOCASE) WHERE (((((((((((t1.c0) IS FALSE))AND(0xffffffffd38d671f)))AND(((rt0.c1)|(v0.c0)))))AND(((rt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c0)))))AND(t1.c64)));
SELECT ALL * FROM rt0, v0 FULL OUTER JOIN t1 ON ((((rt0.c1) ISNULL)) NOT BETWEEN (CAST(t1.c64 AS TEXT)) AND (((rt0.c0) IS TRUE))) INNER JOIN vt0 ON x'' WHERE (CAST(rt0.c0 AS BLOB)) ORDER BY rt0.c1, ((((rt0.c0) IS FALSE))>(0.194923330969192)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS BLOB)) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN t1 ON ((((rt0.c1) ISNULL)) NOT BETWEEN (CAST(t1.c64 AS TEXT)) AND (((rt0.c0) IS TRUE))) INNER JOIN vt0 ON x'' ORDER BY rt0.c1, ((((rt0.c0) IS FALSE))>(0.194923330969192)) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, v0 FULL OUTER JOIN t1 ON ((((rt0.c1) ISNULL)) NOT BETWEEN (CAST(t1.c64 AS TEXT)) AND (((rt0.c0) IS TRUE))) INNER JOIN vt0 ON x'' WHERE (CAST(rt0.c0 AS BLOB)) ORDER BY rt0.c1, ((((rt0.c0) IS FALSE))>(0.194923330969192)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS BLOB)) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN t1 ON ((((rt0.c1) ISNULL)) NOT BETWEEN (CAST(t1.c64 AS TEXT)) AND (((rt0.c0) IS TRUE))) INNER JOIN vt0 ON x'' ORDER BY rt0.c1, ((((rt0.c0) IS FALSE))>(0.194923330969192)) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, v0 FULL OUTER JOIN t1 ON ((((rt0.c1) ISNULL)) NOT BETWEEN (CAST(t1.c64 AS TEXT)) AND (((rt0.c0) IS TRUE))) INNER JOIN vt0 ON x'' WHERE (CAST(rt0.c0 AS BLOB)) ORDER BY rt0.c1, ((((rt0.c0) IS FALSE))>(0.194923330969192)) ASC  NULLS FIRST;
SELECT * FROM v0, vt0 WHERE ((((vt0.c0) NOT BETWEEN (-1562295498) AND ('<*')) IN ())) ORDER BY LOWER(((((v0.c0)OR(vt0.c0)))AND(v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT BETWEEN (-1562295498) AND ('<*')) IN ())) IS TRUE)  as count FROM v0 NOT INDEXED, vt0 ORDER BY LOWER(((((v0.c0)OR(vt0.c0)))AND(v0.c0))) ASC);
SELECT * FROM v0, vt0 WHERE ((((vt0.c0) NOT BETWEEN (-1562295498) AND ('<*')) IN ())) ORDER BY LOWER(((((v0.c0)OR(vt0.c0)))AND(v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT BETWEEN (-1562295498) AND ('<*')) IN ())) IS TRUE)  as count FROM v0 NOT INDEXED, vt0 ORDER BY LOWER(((((v0.c0)OR(vt0.c0)))AND(v0.c0))) ASC);
SELECT * FROM v0, vt0 WHERE ((((vt0.c0) NOT BETWEEN (-1562295498) AND ('<*')) IN ())) ORDER BY LOWER(((((v0.c0)OR(vt0.c0)))AND(v0.c0))) ASC;
SELECT * FROM t1, v0, vt0, rt0 WHERE (((TRIM(DISTINCT t1.c64)) BETWEEN (((rt0.c0) NOT BETWEEN (t1.c0) AND (t1.c64))) AND (((vt0.c0)*(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT t1.c64)) BETWEEN (((rt0.c0) NOT BETWEEN (t1.c0) AND (t1.c64))) AND (((vt0.c0)*(rt0.c2))))) IS TRUE)  as count FROM t1, v0, vt0, rt0);
SELECT * FROM t1, v0, vt0, rt0 WHERE (((TRIM(DISTINCT t1.c64)) BETWEEN (((rt0.c0) NOT BETWEEN (t1.c0) AND (t1.c64))) AND (((vt0.c0)*(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT t1.c64)) BETWEEN (((rt0.c0) NOT BETWEEN (t1.c0) AND (t1.c64))) AND (((vt0.c0)*(rt0.c2))))) IS TRUE)  as count FROM t1, v0, vt0, rt0);
SELECT * FROM t1, v0, vt0, rt0 WHERE (((TRIM(DISTINCT t1.c64)) BETWEEN (((rt0.c0) NOT BETWEEN (t1.c0) AND (t1.c64))) AND (((vt0.c0)*(rt0.c2)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((NULL) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((NULL) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((NULL) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((NULL) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((NULL) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ()));
SELECT * FROM rt0 WHERE (CASE -37869557  WHEN ((rt0.c0)>>(rt0.c1)) THEN rt0.c2 ELSE ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) END) ORDER BY CAST(((rt0.c0) IS FALSE) AS REAL) DESC  NULLS LAST, (((+ ('-881526495'))) IS FALSE) ASC, '2144133927' ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE -37869557  WHEN ((rt0.c0)>>(rt0.c1)) THEN rt0.c2 ELSE ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0) IS FALSE) AS REAL) DESC  NULLS LAST, (((+ ('-881526495'))) IS FALSE) ASC, '2144133927' ASC);
SELECT * FROM rt0 WHERE (CASE -37869557  WHEN ((rt0.c0)>>(rt0.c1)) THEN rt0.c2 ELSE ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) END) ORDER BY CAST(((rt0.c0) IS FALSE) AS REAL) DESC  NULLS LAST, (((+ ('-881526495'))) IS FALSE) ASC, '2144133927' ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE -37869557  WHEN ((rt0.c0)>>(rt0.c1)) THEN rt0.c2 ELSE ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0) IS FALSE) AS REAL) DESC  NULLS LAST, (((+ ('-881526495'))) IS FALSE) ASC, '2144133927' ASC);
SELECT * FROM rt0 WHERE (CASE -37869557  WHEN ((rt0.c0)>>(rt0.c1)) THEN rt0.c2 ELSE ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) END) ORDER BY CAST(((rt0.c0) IS FALSE) AS REAL) DESC  NULLS LAST, (((+ ('-881526495'))) IS FALSE) ASC, '2144133927' ASC;
SELECT COUNT(*) FROM v0, t1 WHERE (((((t1.c0)%(t1.c64)))<<(CAST(t1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)%(t1.c64)))<<(CAST(t1.c0 AS BLOB)))) IS TRUE)  as count FROM v0, t1);
SELECT COUNT(*) FROM v0, t1 WHERE (((((t1.c0)%(t1.c64)))<<(CAST(t1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)%(t1.c64)))<<(CAST(t1.c0 AS BLOB)))) IS TRUE)  as count FROM v0, t1);
SELECT COUNT(*) FROM v0, t1 WHERE (((((t1.c0)%(t1.c64)))<<(CAST(t1.c0 AS BLOB))));
SELECT ALL * FROM vt0, rt0, v0, t1 WHERE ((((((rt0.c0) NOT BETWEEN ('1736454254') AND (vt0.c0))))>=((CAST(t1.c64 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0) NOT BETWEEN ('1736454254') AND (vt0.c0))))>=((CAST(t1.c64 AS NUMERIC))))) IS TRUE)  as count FROM vt0, rt0, v0, t1);
SELECT ALL * FROM vt0, rt0, v0, t1 WHERE ((((((rt0.c0) NOT BETWEEN ('1736454254') AND (vt0.c0))))>=((CAST(t1.c64 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0) NOT BETWEEN ('1736454254') AND (vt0.c0))))>=((CAST(t1.c64 AS NUMERIC))))) IS TRUE)  as count FROM vt0, rt0, v0, t1);
SELECT ALL * FROM vt0, rt0, v0, t1 WHERE ((((((rt0.c0) NOT BETWEEN ('1736454254') AND (vt0.c0))))>=((CAST(t1.c64 AS NUMERIC)))));
SELECT ALL * FROM v0, rt0, vt0 WHERE (((CAST(NULL AS BLOB)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS BLOB)) IS TRUE)) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (((CAST(NULL AS BLOB)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS BLOB)) IS TRUE)) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (((CAST(NULL AS BLOB)) IS TRUE));
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON (((rt0.c1 IN ())) BETWEEN ((rt0.c2 IN ())) AND (((v0.c0) ISNULL))) WHERE (((rt0.c1)<(v0.c0)) COLLATE RTRIM) ORDER BY (((rt0.c2 IN ())) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)<(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (((rt0.c1 IN ())) BETWEEN ((rt0.c2 IN ())) AND (((v0.c0) ISNULL))) ORDER BY (((rt0.c2 IN ())) IS TRUE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON (((rt0.c1 IN ())) BETWEEN ((rt0.c2 IN ())) AND (((v0.c0) ISNULL))) WHERE (((rt0.c1)<(v0.c0)) COLLATE RTRIM) ORDER BY (((rt0.c2 IN ())) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)<(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (((rt0.c1 IN ())) BETWEEN ((rt0.c2 IN ())) AND (((v0.c0) ISNULL))) ORDER BY (((rt0.c2 IN ())) IS TRUE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON (((rt0.c1 IN ())) BETWEEN ((rt0.c2 IN ())) AND (((v0.c0) ISNULL))) WHERE (((rt0.c1)<(v0.c0)) COLLATE RTRIM) ORDER BY (((rt0.c2 IN ())) IS TRUE) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0, t1 WHERE (((CASE t1.c0  WHEN rt0.c1 THEN rt0.c2 ELSE t1.c0 END)-((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t1.c0  WHEN rt0.c1 THEN rt0.c2 ELSE t1.c0 END)-((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT ALL COUNT(*) FROM vt0, rt0, t1 WHERE (((CASE t1.c0  WHEN rt0.c1 THEN rt0.c2 ELSE t1.c0 END)-((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t1.c0  WHEN rt0.c1 THEN rt0.c2 ELSE t1.c0 END)-((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT ALL COUNT(*) FROM vt0, rt0, t1 WHERE (((CASE t1.c0  WHEN rt0.c1 THEN rt0.c2 ELSE t1.c0 END)-((vt0.c0 IN ()))));
SELECT * FROM t1, rt0, vt0, v0 WHERE (((TRIM(DISTINCT 0.4611267281793525)) NOT BETWEEN (((t1.c0)IS NOT(t1.c64))) AND (((((v0.c0)AND(vt0.c0)))AND(t1.c64))))) ORDER BY CAST(v0.c0 COLLATE BINARY AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT 0.4611267281793525)) NOT BETWEEN (((t1.c0)IS NOT(t1.c64))) AND (((((v0.c0)AND(vt0.c0)))AND(t1.c64))))) IS TRUE)  as count FROM t1, rt0, vt0, v0 ORDER BY CAST(v0.c0 COLLATE BINARY AS BLOB) DESC  NULLS LAST);
SELECT * FROM t1, rt0, vt0, v0 WHERE (((TRIM(DISTINCT 0.4611267281793525)) NOT BETWEEN (((t1.c0)IS NOT(t1.c64))) AND (((((v0.c0)AND(vt0.c0)))AND(t1.c64))))) ORDER BY CAST(v0.c0 COLLATE BINARY AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT 0.4611267281793525)) NOT BETWEEN (((t1.c0)IS NOT(t1.c64))) AND (((((v0.c0)AND(vt0.c0)))AND(t1.c64))))) IS TRUE)  as count FROM t1, rt0, vt0, v0 ORDER BY CAST(v0.c0 COLLATE BINARY AS BLOB) DESC  NULLS LAST);
SELECT * FROM t1, rt0, vt0, v0 WHERE (((TRIM(DISTINCT 0.4611267281793525)) NOT BETWEEN (((t1.c0)IS NOT(t1.c64))) AND (((((v0.c0)AND(vt0.c0)))AND(t1.c64))))) ORDER BY CAST(v0.c0 COLLATE BINARY AS BLOB) DESC  NULLS LAST;
SELECT * FROM t1, v0 WHERE ((((CASE WHEN t1.c0 THEN v0.c0 ELSE t1.c64 END))<(((~ (t1.c64)))))) ORDER BY TRIM(DISTINCT (~ (t1.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t1.c0 THEN v0.c0 ELSE t1.c64 END))<(((~ (t1.c64)))))) IS TRUE)  as count FROM t1, v0 ORDER BY TRIM(DISTINCT (~ (t1.c2))) ASC  NULLS FIRST);
SELECT * FROM t1, v0 WHERE ((((CASE WHEN t1.c0 THEN v0.c0 ELSE t1.c64 END))<(((~ (t1.c64)))))) ORDER BY TRIM(DISTINCT (~ (t1.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t1.c0 THEN v0.c0 ELSE t1.c64 END))<(((~ (t1.c64)))))) IS TRUE)  as count FROM t1, v0 ORDER BY TRIM(DISTINCT (~ (t1.c2))) ASC  NULLS FIRST);
SELECT * FROM t1, v0 WHERE ((((CASE WHEN t1.c0 THEN v0.c0 ELSE t1.c64 END))<(((~ (t1.c64)))))) ORDER BY TRIM(DISTINCT (~ (t1.c2))) ASC  NULLS FIRST;
SELECT * FROM vt0, v0 CROSS JOIN t1 ON ((((rt0.c1) IS TRUE))LIKE(((((((((v0.c0)AND(rt0.c0)))AND(t1.c2)))AND(v0.c0)))AND(rt0.c0)))) FULL OUTER JOIN rt0 ON vt0.c0 WHERE ((+ (json_patch(t1.c0, rt0.c0))));
SELECT SUM(count) FROM (SELECT (((+ (json_patch(t1.c0, rt0.c0)))) IS TRUE)  as count FROM vt0, v0 CROSS JOIN t1 ON ((((rt0.c1) IS TRUE))LIKE(((((((((v0.c0)AND(rt0.c0)))AND(t1.c2)))AND(v0.c0)))AND(rt0.c0)))) FULL OUTER JOIN rt0 ON vt0.c0);
SELECT * FROM vt0, v0 CROSS JOIN t1 ON ((((rt0.c1) IS TRUE))LIKE(((((((((v0.c0)AND(rt0.c0)))AND(t1.c2)))AND(v0.c0)))AND(rt0.c0)))) FULL OUTER JOIN rt0 ON vt0.c0 WHERE ((+ (json_patch(t1.c0, rt0.c0))));
SELECT SUM(count) FROM (SELECT (((+ (json_patch(t1.c0, rt0.c0)))) IS TRUE)  as count FROM vt0, v0 CROSS JOIN t1 ON ((((rt0.c1) IS TRUE))LIKE(((((((((v0.c0)AND(rt0.c0)))AND(t1.c2)))AND(v0.c0)))AND(rt0.c0)))) FULL OUTER JOIN rt0 ON vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB)) ORDER BY ((x'' COLLATE RTRIM) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), (- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((x'' COLLATE RTRIM) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), (- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB)) ORDER BY ((x'' COLLATE RTRIM) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), (- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((x'' COLLATE RTRIM) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), (- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB)) ORDER BY ((x'' COLLATE RTRIM) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), (- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (rt0.c1) AND ('142829359')) THEN ((rt0.c1)<<(v0.c0)) WHEN ((rt0.c1)|(rt0.c1)) THEN UNLIKELY(DISTINCT v0.c0) WHEN SQLITE_VERSION() THEN vt0.c0 ELSE (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) NOT BETWEEN (rt0.c1) AND ('142829359')) THEN ((rt0.c1)<<(v0.c0)) WHEN ((rt0.c1)|(rt0.c1)) THEN UNLIKELY(DISTINCT v0.c0) WHEN SQLITE_VERSION() THEN vt0.c0 ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (rt0.c1) AND ('142829359')) THEN ((rt0.c1)<<(v0.c0)) WHEN ((rt0.c1)|(rt0.c1)) THEN UNLIKELY(DISTINCT v0.c0) WHEN SQLITE_VERSION() THEN vt0.c0 ELSE (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) NOT BETWEEN (rt0.c1) AND ('142829359')) THEN ((rt0.c1)<<(v0.c0)) WHEN ((rt0.c1)|(rt0.c1)) THEN UNLIKELY(DISTINCT v0.c0) WHEN SQLITE_VERSION() THEN vt0.c0 ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (rt0.c1) AND ('142829359')) THEN ((rt0.c1)<<(v0.c0)) WHEN ((rt0.c1)|(rt0.c1)) THEN UNLIKELY(DISTINCT v0.c0) WHEN SQLITE_VERSION() THEN vt0.c0 ELSE (vt0.c0 IN ()) END);
SELECT COUNT(*) FROM t1, v0, rt0 WHERE (v0.c0) ORDER BY rt0.c2, ((((rt0.c2)AND(rt0.c1)))OR(t1.c2)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM t1, v0, rt0 ORDER BY rt0.c2, ((((rt0.c2)AND(rt0.c1)))OR(t1.c2)) COLLATE NOCASE);
SELECT COUNT(*) FROM t1, v0, rt0 WHERE (v0.c0) ORDER BY rt0.c2, ((((rt0.c2)AND(rt0.c1)))OR(t1.c2)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM t1, v0, rt0 ORDER BY rt0.c2, ((((rt0.c2)AND(rt0.c1)))OR(t1.c2)) COLLATE NOCASE);
SELECT COUNT(*) FROM t1, v0, rt0 WHERE (v0.c0) ORDER BY rt0.c2, ((((rt0.c2)AND(rt0.c1)))OR(t1.c2)) COLLATE NOCASE;
SELECT * FROM t1 WHERE (((((t1.c64) ISNULL))&(((((NULL)OR(t1.c0)))AND(t1.c2))))) ORDER BY ((((t1.c64) NOT BETWEEN (t1.c2) AND (t1.c2)))-(((((t1.c64)OR(t1.c0)))OR(t1.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c64) ISNULL))&(((((NULL)OR(t1.c0)))AND(t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c64) NOT BETWEEN (t1.c2) AND (t1.c2)))-(((((t1.c64)OR(t1.c0)))OR(t1.c2)))) ASC  NULLS FIRST);
SELECT * FROM t1 WHERE (((((t1.c64) ISNULL))&(((((NULL)OR(t1.c0)))AND(t1.c2))))) ORDER BY ((((t1.c64) NOT BETWEEN (t1.c2) AND (t1.c2)))-(((((t1.c64)OR(t1.c0)))OR(t1.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c64) ISNULL))&(((((NULL)OR(t1.c0)))AND(t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c64) NOT BETWEEN (t1.c2) AND (t1.c2)))-(((((t1.c64)OR(t1.c0)))OR(t1.c2)))) ASC  NULLS FIRST);
SELECT * FROM t1 WHERE (((((t1.c64) ISNULL))&(((((NULL)OR(t1.c0)))AND(t1.c2))))) ORDER BY ((((t1.c64) NOT BETWEEN (t1.c2) AND (t1.c2)))-(((((t1.c64)OR(t1.c0)))OR(t1.c2)))) ASC  NULLS FIRST;
SELECT ALL * FROM t1, v0 WHERE ((- (TRIM(t1.c2)))) ORDER BY ((v0.c0) BETWEEN (x'b46a' COLLATE BINARY) AND (NULL)) DESC, (((~ (t1.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT (((- (TRIM(t1.c2)))) IS TRUE)  as count FROM t1, v0 ORDER BY ((v0.c0) BETWEEN (x'b46a' COLLATE BINARY) AND (NULL)) DESC, (((~ (t1.c0))) ISNULL));
SELECT ALL * FROM t1, v0 WHERE ((- (TRIM(t1.c2)))) ORDER BY ((v0.c0) BETWEEN (x'b46a' COLLATE BINARY) AND (NULL)) DESC, (((~ (t1.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT (((- (TRIM(t1.c2)))) IS TRUE)  as count FROM t1, v0 ORDER BY ((v0.c0) BETWEEN (x'b46a' COLLATE BINARY) AND (NULL)) DESC, (((~ (t1.c0))) ISNULL));
SELECT ALL * FROM t1, v0 WHERE ((- (TRIM(t1.c2)))) ORDER BY ((v0.c0) BETWEEN (x'b46a' COLLATE BINARY) AND (NULL)) DESC, (((~ (t1.c0))) ISNULL);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((UPPER(DISTINCT t1.c64))<(((t1.c2) BETWEEN (t1.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((UPPER(DISTINCT t1.c64))<(((t1.c2) BETWEEN (t1.c0) AND (rt0.c0))))) IS TRUE)  as count FROM t1, rt0);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((UPPER(DISTINCT t1.c64))<(((t1.c2) BETWEEN (t1.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((UPPER(DISTINCT t1.c64))<(((t1.c2) BETWEEN (t1.c0) AND (rt0.c0))))) IS TRUE)  as count FROM t1, rt0);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((UPPER(DISTINCT t1.c64))<(((t1.c2) BETWEEN (t1.c0) AND (rt0.c0)))));
SELECT * FROM t1, vt0, v0 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (((((vt0.c0)AND(v0.c0)))OR(t1.c2))) AND (((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY) BETWEEN (((((vt0.c0)AND(v0.c0)))OR(t1.c2))) AND (((v0.c0) IS TRUE)))) IS TRUE)  as count FROM t1, vt0, v0);
SELECT * FROM t1, vt0, v0 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (((((vt0.c0)AND(v0.c0)))OR(t1.c2))) AND (((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY) BETWEEN (((((vt0.c0)AND(v0.c0)))OR(t1.c2))) AND (((v0.c0) IS TRUE)))) IS TRUE)  as count FROM t1, vt0, v0);
SELECT * FROM t1, vt0, v0 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (((((vt0.c0)AND(v0.c0)))OR(t1.c2))) AND (((v0.c0) IS TRUE))));
SELECT * FROM v0 WHERE ((- (((v0.c0)%('1115392099'))))) ORDER BY ((((v0.c0)OR((('7\n\nfiw\y') ISNULL))))AND(LAST_INSERT_ROWID()));
SELECT SUM(count) FROM (SELECT (((- (((v0.c0)%('1115392099'))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)OR((('7\n\nfiw\y') ISNULL))))AND(LAST_INSERT_ROWID())));
SELECT * FROM v0 WHERE ((- (((v0.c0)%('1115392099'))))) ORDER BY ((((v0.c0)OR((('7\n\nfiw\y') ISNULL))))AND(LAST_INSERT_ROWID()));
SELECT SUM(count) FROM (SELECT (((- (((v0.c0)%('1115392099'))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)OR((('7\n\nfiw\y') ISNULL))))AND(LAST_INSERT_ROWID())));
SELECT * FROM v0 WHERE ((- (((v0.c0)%('1115392099'))))) ORDER BY ((((v0.c0)OR((('7\n\nfiw\y') ISNULL))))AND(LAST_INSERT_ROWID()));
SELECT * FROM v0, rt0 FULL OUTER JOIN t1 ON CAST(((t1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)) AS BLOB) CROSS JOIN vt0 ON CASE ((v0.c0)>=(t1.c2))  WHEN ((t1.c64) ISNULL) THEN ((t1.c64)<<(vt0.c0)) ELSE CASE WHEN t1.c0 THEN v0.c0 END END WHERE (CAST(CAST(rt0.c1 AS NUMERIC) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c1 AS NUMERIC) AS BLOB)) IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN t1 ON CAST(((t1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)) AS BLOB) CROSS JOIN vt0 ON CASE ((v0.c0)>=(t1.c2))  WHEN ((t1.c64) ISNULL) THEN ((t1.c64)<<(vt0.c0)) ELSE CASE WHEN t1.c0 THEN v0.c0 END END);
SELECT * FROM v0, rt0 FULL OUTER JOIN t1 ON CAST(((t1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)) AS BLOB) CROSS JOIN vt0 ON CASE ((v0.c0)>=(t1.c2))  WHEN ((t1.c64) ISNULL) THEN ((t1.c64)<<(vt0.c0)) ELSE CASE WHEN t1.c0 THEN v0.c0 END END WHERE (CAST(CAST(rt0.c1 AS NUMERIC) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c1 AS NUMERIC) AS BLOB)) IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN t1 ON CAST(((t1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)) AS BLOB) CROSS JOIN vt0 ON CASE ((v0.c0)>=(t1.c2))  WHEN ((t1.c64) ISNULL) THEN ((t1.c64)<<(vt0.c0)) ELSE CASE WHEN t1.c0 THEN v0.c0 END END);
SELECT ALL COUNT(*) FROM t1, rt0, vt0, v0 WHERE (CASE WHEN (~ (rt0.c2)) THEN (((v0.c0, t1.c64, 0.7872354011500368, vt0.c0, rt0.c1)) BETWEEN ((t1.c2, t1.c64, x'b9e1', rt0.c2, rt0.c1)) AND ((NULL, rt0.c2, t1.c64, rt0.c1, rt0.c1))) WHEN ((((t1.c2)AND(rt0.c1)))AND(rt0.c2)) THEN ((t1.c2) NOT NULL) WHEN ((t1.c64)GLOB(t1.c64)) THEN 0.9170660803934115 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (rt0.c2)) THEN (((v0.c0, t1.c64, 0.7872354011500368, vt0.c0, rt0.c1)) BETWEEN ((t1.c2, t1.c64, x'b9e1', rt0.c2, rt0.c1)) AND ((NULL, rt0.c2, t1.c64, rt0.c1, rt0.c1))) WHEN ((((t1.c2)AND(rt0.c1)))AND(rt0.c2)) THEN ((t1.c2) NOT NULL) WHEN ((t1.c64)GLOB(t1.c64)) THEN 0.9170660803934115 END) IS TRUE)  as count FROM t1, rt0, vt0, v0);
SELECT ALL COUNT(*) FROM t1, rt0, vt0, v0 WHERE (CASE WHEN (~ (rt0.c2)) THEN (((v0.c0, t1.c64, 0.7872354011500368, vt0.c0, rt0.c1)) BETWEEN ((t1.c2, t1.c64, x'b9e1', rt0.c2, rt0.c1)) AND ((NULL, rt0.c2, t1.c64, rt0.c1, rt0.c1))) WHEN ((((t1.c2)AND(rt0.c1)))AND(rt0.c2)) THEN ((t1.c2) NOT NULL) WHEN ((t1.c64)GLOB(t1.c64)) THEN 0.9170660803934115 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (rt0.c2)) THEN (((v0.c0, t1.c64, 0.7872354011500368, vt0.c0, rt0.c1)) BETWEEN ((t1.c2, t1.c64, x'b9e1', rt0.c2, rt0.c1)) AND ((NULL, rt0.c2, t1.c64, rt0.c1, rt0.c1))) WHEN ((((t1.c2)AND(rt0.c1)))AND(rt0.c2)) THEN ((t1.c2) NOT NULL) WHEN ((t1.c64)GLOB(t1.c64)) THEN 0.9170660803934115 END) IS TRUE)  as count FROM t1, rt0, vt0, v0);
SELECT ALL COUNT(*) FROM t1, rt0, vt0, v0 WHERE (CASE WHEN (~ (rt0.c2)) THEN (((v0.c0, t1.c64, 0.7872354011500368, vt0.c0, rt0.c1)) BETWEEN ((t1.c2, t1.c64, x'b9e1', rt0.c2, rt0.c1)) AND ((NULL, rt0.c2, t1.c64, rt0.c1, rt0.c1))) WHEN ((((t1.c2)AND(rt0.c1)))AND(rt0.c2)) THEN ((t1.c2) NOT NULL) WHEN ((t1.c64)GLOB(t1.c64)) THEN 0.9170660803934115 END);
SELECT ALL * FROM vt0 NOT INDEXED, rt0, v0, t1 WHERE (((t1.c2 COLLATE NOCASE) BETWEEN ((('1864179897') ISNULL)) AND (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c2 COLLATE NOCASE) BETWEEN ((('1864179897') ISNULL)) AND (rt0.c1))) IS TRUE)  as count FROM vt0, rt0, v0, t1);
SELECT ALL * FROM vt0 NOT INDEXED, rt0, v0, t1 WHERE (((t1.c2 COLLATE NOCASE) BETWEEN ((('1864179897') ISNULL)) AND (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c2 COLLATE NOCASE) BETWEEN ((('1864179897') ISNULL)) AND (rt0.c1))) IS TRUE)  as count FROM vt0, rt0, v0, t1);
SELECT ALL * FROM vt0 NOT INDEXED, rt0, v0, t1 WHERE (((t1.c2 COLLATE NOCASE) BETWEEN ((('1864179897') ISNULL)) AND (rt0.c1)));
SELECT ALL COUNT(*) FROM rt0, vt0, t1 FULL OUTER JOIN v0 ON ((LOWER(rt0.c1)) BETWEEN (((NULL)>=(t1.c64))) AND (0.4572274465821816)) WHERE ((((rt0.c0)+(rt0.c0)) IN ('U4'))) ORDER BY rt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)+(rt0.c0)) IN ('U4'))) IS TRUE)  as count FROM rt0, vt0, t1 FULL OUTER JOIN v0 ON ((LOWER(rt0.c1)) BETWEEN (((NULL)>=(t1.c64))) AND (0.4572274465821816)) ORDER BY rt0.c1 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, t1 FULL OUTER JOIN v0 ON ((LOWER(rt0.c1)) BETWEEN (((NULL)>=(t1.c64))) AND (0.4572274465821816)) WHERE ((((rt0.c0)+(rt0.c0)) IN ('U4'))) ORDER BY rt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)+(rt0.c0)) IN ('U4'))) IS TRUE)  as count FROM rt0, vt0, t1 FULL OUTER JOIN v0 ON ((LOWER(rt0.c1)) BETWEEN (((NULL)>=(t1.c64))) AND (0.4572274465821816)) ORDER BY rt0.c1 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, t1 FULL OUTER JOIN v0 ON ((LOWER(rt0.c1)) BETWEEN (((NULL)>=(t1.c64))) AND (0.4572274465821816)) WHERE ((((rt0.c0)+(rt0.c0)) IN ('U4'))) ORDER BY rt0.c1 ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2)+(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END))) ORDER BY (CAST(rt0.c0 AS BLOB) IN ())  NULLS FIRST, (+ ('142829359'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)+(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c0 AS BLOB) IN ())  NULLS FIRST, (+ ('142829359'))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2)+(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END))) ORDER BY (CAST(rt0.c0 AS BLOB) IN ())  NULLS FIRST, (+ ('142829359'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)+(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c0 AS BLOB) IN ())  NULLS FIRST, (+ ('142829359'))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2)+(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END))) ORDER BY (CAST(rt0.c0 AS BLOB) IN ())  NULLS FIRST, (+ ('142829359'))  NULLS LAST;
SELECT ALL * FROM t1, rt0 WHERE ((NOT (''))) ORDER BY ((((((t1.c0) IS TRUE))OR(((t1.c64) ISNULL))))AND(((0.963205445503838) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (''))) IS TRUE)  as count FROM t1, rt0 ORDER BY ((((((t1.c0) IS TRUE))OR(((t1.c64) ISNULL))))AND(((0.963205445503838) NOTNULL)))  NULLS FIRST);
SELECT ALL * FROM t1, rt0 WHERE ((NOT (''))) ORDER BY ((((((t1.c0) IS TRUE))OR(((t1.c64) ISNULL))))AND(((0.963205445503838) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (''))) IS TRUE)  as count FROM t1, rt0 ORDER BY ((((((t1.c0) IS TRUE))OR(((t1.c64) ISNULL))))AND(((0.963205445503838) NOTNULL)))  NULLS FIRST);
SELECT ALL * FROM t1, rt0 WHERE ((NOT (''))) ORDER BY ((((((t1.c0) IS TRUE))OR(((t1.c64) ISNULL))))AND(((0.963205445503838) NOTNULL)))  NULLS FIRST;
SELECT * FROM rt0 INNER JOIN t1 ON CASE ((((0.47717031191949644)OR(t1.c2)))OR(t1.c2))  WHEN ((rt0.c2)%(t1.c64)) THEN ((rt0.c2)==(rt0.c1)) ELSE (- (t1.c64)) END WHERE (t1.c64) ORDER BY (((((t1.c64)>=(rt0.c1)), 0.5166524716747017, (rt0.c1 IN ()), rt0.c1, json_array_length(rt0.c0, t1.c0)))<((((rt0.c2) IS TRUE), 0x40b2df6c, t1.c0 COLLATE RTRIM, rt0.c1 COLLATE BINARY, CASE WHEN t1.c2 THEN rt0.c2 END))) DESC;
SELECT SUM(count) FROM (SELECT ((t1.c64) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON CASE ((((0.47717031191949644)OR(t1.c2)))OR(t1.c2))  WHEN ((rt0.c2)%(t1.c64)) THEN ((rt0.c2)=(rt0.c1)) ELSE (- (t1.c64)) END ORDER BY (((((t1.c64)>=(rt0.c1)), 0.5166524716747017, (rt0.c1 IN ()), rt0.c1, json_array_length(rt0.c0, t1.c0)))<((((rt0.c2) IS TRUE), 0X40b2df6c, t1.c0 COLLATE RTRIM, rt0.c1 COLLATE BINARY, CASE WHEN t1.c2 THEN rt0.c2 END))) DESC);
SELECT * FROM rt0 INNER JOIN t1 ON CASE ((((0.47717031191949644)OR(t1.c2)))OR(t1.c2))  WHEN ((rt0.c2)%(t1.c64)) THEN ((rt0.c2)==(rt0.c1)) ELSE (- (t1.c64)) END WHERE (t1.c64) ORDER BY (((((t1.c64)>=(rt0.c1)), 0.5166524716747017, (rt0.c1 IN ()), rt0.c1, json_array_length(rt0.c0, t1.c0)))<((((rt0.c2) IS TRUE), 0x40b2df6c, t1.c0 COLLATE RTRIM, rt0.c1 COLLATE BINARY, CASE WHEN t1.c2 THEN rt0.c2 END))) DESC;
SELECT SUM(count) FROM (SELECT ((t1.c64) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON CASE ((((0.47717031191949644)OR(t1.c2)))OR(t1.c2))  WHEN ((rt0.c2)%(t1.c64)) THEN ((rt0.c2)=(rt0.c1)) ELSE (- (t1.c64)) END ORDER BY (((((t1.c64)>=(rt0.c1)), 0.5166524716747017, (rt0.c1 IN ()), rt0.c1, json_array_length(rt0.c0, t1.c0)))<((((rt0.c2) IS TRUE), 0X40b2df6c, t1.c0 COLLATE RTRIM, rt0.c1 COLLATE BINARY, CASE WHEN t1.c2 THEN rt0.c2 END))) DESC);
SELECT * FROM rt0 INNER JOIN t1 ON CASE ((((0.47717031191949644)OR(t1.c2)))OR(t1.c2))  WHEN ((rt0.c2)%(t1.c64)) THEN ((rt0.c2)==(rt0.c1)) ELSE (- (t1.c64)) END WHERE (t1.c64) ORDER BY (((((t1.c64)>=(rt0.c1)), 0.5166524716747017, (rt0.c1 IN ()), rt0.c1, json_array_length(rt0.c0, t1.c0)))<((((rt0.c2) IS TRUE), 0x40b2df6c, t1.c0 COLLATE RTRIM, rt0.c1 COLLATE BINARY, CASE WHEN t1.c2 THEN rt0.c2 END))) DESC;
SELECT * FROM v0 WHERE ((((((- (v0.c0)))OR(CAST(v0.c0 AS TEXT))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY CAST(CAST(v0.c0 AS REAL) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((- (v0.c0)))OR(CAST(v0.c0 AS TEXT))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CAST(CAST(v0.c0 AS REAL) AS TEXT) DESC);
SELECT * FROM v0 WHERE ((((((- (v0.c0)))OR(CAST(v0.c0 AS TEXT))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY CAST(CAST(v0.c0 AS REAL) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((- (v0.c0)))OR(CAST(v0.c0 AS TEXT))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CAST(CAST(v0.c0 AS REAL) AS TEXT) DESC);
SELECT * FROM v0 WHERE ((((((- (v0.c0)))OR(CAST(v0.c0 AS TEXT))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY CAST(CAST(v0.c0 AS REAL) AS TEXT) DESC;
SELECT ALL COUNT(*) FROM t1, rt0, vt0, v0 WHERE (((x'ed46') BETWEEN (v0.c0) AND ((t1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((x'ed46') BETWEEN (v0.c0) AND ((t1.c2 IN ())))) IS TRUE)  as count FROM t1, rt0, vt0, v0);
SELECT ALL COUNT(*) FROM t1, rt0, vt0, v0 WHERE (((x'ed46') BETWEEN (v0.c0) AND ((t1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((x'ed46') BETWEEN (v0.c0) AND ((t1.c2 IN ())))) IS TRUE)  as count FROM t1, rt0, vt0, v0);
SELECT ALL COUNT(*) FROM t1, rt0, vt0, v0 WHERE (((x'ed46') BETWEEN (v0.c0) AND ((t1.c2 IN ()))));
SELECT COUNT(*) FROM t1, vt0, rt0, v0 WHERE ((((t1.c0, rt0.c0, vt0.c0)) NOT BETWEEN ((ABS(vt0.c0), CAST(t1.c2 AS NUMERIC), (t1.c64 IN (rt0.c1)))) AND ((vt0.c0, rt0.c2 COLLATE BINARY, (((rt0.c2))>((rt0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((t1.c0, rt0.c0, vt0.c0)) NOT BETWEEN ((ABS(vt0.c0), CAST(t1.c2 AS NUMERIC), (t1.c64 IN (rt0.c1)))) AND ((vt0.c0, rt0.c2 COLLATE BINARY, (((rt0.c2))>((rt0.c0))))))) IS TRUE)  as count FROM t1, vt0, rt0, v0);
SELECT COUNT(*) FROM t1, vt0, rt0, v0 WHERE ((((t1.c0, rt0.c0, vt0.c0)) NOT BETWEEN ((ABS(vt0.c0), CAST(t1.c2 AS NUMERIC), (t1.c64 IN (rt0.c1)))) AND ((vt0.c0, rt0.c2 COLLATE BINARY, (((rt0.c2))>((rt0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((t1.c0, rt0.c0, vt0.c0)) NOT BETWEEN ((ABS(vt0.c0), CAST(t1.c2 AS NUMERIC), (t1.c64 IN (rt0.c1)))) AND ((vt0.c0, rt0.c2 COLLATE BINARY, (((rt0.c2))>((rt0.c0))))))) IS TRUE)  as count FROM t1, vt0, rt0, v0);
SELECT COUNT(*) FROM t1, vt0, rt0, v0 WHERE ((((t1.c0, rt0.c0, vt0.c0)) NOT BETWEEN ((ABS(vt0.c0), CAST(t1.c2 AS NUMERIC), (t1.c64 IN (rt0.c1)))) AND ((vt0.c0, rt0.c2 COLLATE BINARY, (((rt0.c2))>((rt0.c0)))))));
SELECT COUNT(*) FROM t1, rt0, v0 WHERE (((rt0.c1) NOT BETWEEN (((((((((v0.c0)OR(t1.c0)))OR(x'')))OR(t1.c2)))OR('䛊gO}'))) AND ((+ (t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOT BETWEEN (((((((((v0.c0)OR(t1.c0)))OR(x'')))OR(t1.c2)))OR('䛊gO}'))) AND ((+ (t1.c0))))) IS TRUE)  as count FROM t1, rt0, v0);
SELECT COUNT(*) FROM t1, rt0, v0 WHERE (((rt0.c1) NOT BETWEEN (((((((((v0.c0)OR(t1.c0)))OR(x'')))OR(t1.c2)))OR('䛊gO}'))) AND ((+ (t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOT BETWEEN (((((((((v0.c0)OR(t1.c0)))OR(x'')))OR(t1.c2)))OR('䛊gO}'))) AND ((+ (t1.c0))))) IS TRUE)  as count FROM t1, rt0, v0);
SELECT COUNT(*) FROM t1, rt0, v0 WHERE (((rt0.c1) NOT BETWEEN (((((((((v0.c0)OR(t1.c0)))OR(x'')))OR(t1.c2)))OR('䛊gO}'))) AND ((+ (t1.c0)))));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON (- (CASE WHEN rt0.c0 THEN t1.c2 ELSE t1.c2 END)) RIGHT OUTER JOIN t1 ON ((((((((((vt0.c0) BETWEEN (x'2052') AND (v0.c0)))OR(CAST('-2035629484' AS TEXT))))AND((+ (rt0.c1)))))AND(t1.c64)))AND((((t1.c64))>((vt0.c0))))) CROSS JOIN vt0 ON ((((t1.c64) BETWEEN (t1.c0) AND (rt0.c2))) ISNULL) WHERE (((+ (vt0.c0)) IN (((((t1.c2)OR(rt0.c2)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((+ (vt0.c0)) IN (((((t1.c2)OR(rt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (- (CASE WHEN rt0.c0 THEN t1.c2 ELSE t1.c2 END)) RIGHT OUTER JOIN t1 ON ((((((((((vt0.c0) BETWEEN (x'2052') AND (v0.c0)))OR(CAST('-2035629484' AS TEXT))))AND((+ (rt0.c1)))))AND(t1.c64)))AND((((t1.c64))>((vt0.c0))))) CROSS JOIN vt0 ON ((((t1.c64) BETWEEN (t1.c0) AND (rt0.c2))) ISNULL));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON (- (CASE WHEN rt0.c0 THEN t1.c2 ELSE t1.c2 END)) RIGHT OUTER JOIN t1 ON ((((((((((vt0.c0) BETWEEN (x'2052') AND (v0.c0)))OR(CAST('-2035629484' AS TEXT))))AND((+ (rt0.c1)))))AND(t1.c64)))AND((((t1.c64))>((vt0.c0))))) CROSS JOIN vt0 ON ((((t1.c64) BETWEEN (t1.c0) AND (rt0.c2))) ISNULL) WHERE (((+ (vt0.c0)) IN (((((t1.c2)OR(rt0.c2)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((+ (vt0.c0)) IN (((((t1.c2)OR(rt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (- (CASE WHEN rt0.c0 THEN t1.c2 ELSE t1.c2 END)) RIGHT OUTER JOIN t1 ON ((((((((((vt0.c0) BETWEEN (x'2052') AND (v0.c0)))OR(CAST('-2035629484' AS TEXT))))AND((+ (rt0.c1)))))AND(t1.c64)))AND((((t1.c64))>((vt0.c0))))) CROSS JOIN vt0 ON ((((t1.c64) BETWEEN (t1.c0) AND (rt0.c2))) ISNULL));
SELECT ALL COUNT(*) FROM t1, vt0, rt0 INDEXED BY i12, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1, vt0, rt0 INDEXED BY i12, v0);
SELECT ALL COUNT(*) FROM t1, vt0, rt0 INDEXED BY i12, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1, vt0, rt0 INDEXED BY i12, v0);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t1 ON HEX(DISTINCT t1.c0 COLLATE BINARY) WHERE (rt0.c1) ORDER BY ((((((rt0.c2) IS TRUE))OR(((rt0.c2) IS FALSE))))AND((((t1.c2)) NOT BETWEEN ((t1.c0)) AND ((rt0.c1))))) DESC  NULLS FIRST, CAST((((rt0.c0))<((t1.c2))) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON HEX(DISTINCT t1.c0 COLLATE BINARY) ORDER BY ((((((rt0.c2) IS TRUE))OR(((rt0.c2) IS FALSE))))AND((((t1.c2)) NOT BETWEEN ((t1.c0)) AND ((rt0.c1))))) DESC  NULLS FIRST, CAST((((rt0.c0))<((t1.c2))) AS INTEGER));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t1 ON HEX(DISTINCT t1.c0 COLLATE BINARY) WHERE (rt0.c1) ORDER BY ((((((rt0.c2) IS TRUE))OR(((rt0.c2) IS FALSE))))AND((((t1.c2)) NOT BETWEEN ((t1.c0)) AND ((rt0.c1))))) DESC  NULLS FIRST, CAST((((rt0.c0))<((t1.c2))) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON HEX(DISTINCT t1.c0 COLLATE BINARY) ORDER BY ((((((rt0.c2) IS TRUE))OR(((rt0.c2) IS FALSE))))AND((((t1.c2)) NOT BETWEEN ((t1.c0)) AND ((rt0.c1))))) DESC  NULLS FIRST, CAST((((rt0.c0))<((t1.c2))) AS INTEGER));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t1 ON HEX(DISTINCT t1.c0 COLLATE BINARY) WHERE (rt0.c1) ORDER BY ((((((rt0.c2) IS TRUE))OR(((rt0.c2) IS FALSE))))AND((((t1.c2)) NOT BETWEEN ((t1.c0)) AND ((rt0.c1))))) DESC  NULLS FIRST, CAST((((rt0.c0))<((t1.c2))) AS INTEGER);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (((rt0.c2)|(rt0.c2))))) ORDER BY ABS(rt0.c0 COLLATE BINARY) ASC  NULLS LAST, (((0X6d3202d, rt0.c2, (NOT (rt0.c2))))<(('-2035629484', rt0.c0, (~ (rt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c2)|(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ABS(rt0.c0 COLLATE BINARY) ASC  NULLS LAST, (((0x6d3202d, rt0.c2, (NOT (rt0.c2))))<(('-2035629484', rt0.c0, (~ (rt0.c1)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (((rt0.c2)|(rt0.c2))))) ORDER BY ABS(rt0.c0 COLLATE BINARY) ASC  NULLS LAST, (((0X6d3202d, rt0.c2, (NOT (rt0.c2))))<(('-2035629484', rt0.c0, (~ (rt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c2)|(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ABS(rt0.c0 COLLATE BINARY) ASC  NULLS LAST, (((0x6d3202d, rt0.c2, (NOT (rt0.c2))))<(('-2035629484', rt0.c0, (~ (rt0.c1)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (((rt0.c2)|(rt0.c2))))) ORDER BY ABS(rt0.c0 COLLATE BINARY) ASC  NULLS LAST, (((0X6d3202d, rt0.c2, (NOT (rt0.c2))))<(('-2035629484', rt0.c0, (~ (rt0.c1)))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0))>((((vt0.c0)>=(vt0.c0)))))) ORDER BY (+ ((((vt0.c0))<((vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0))>((((vt0.c0)>=(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (+ ((((vt0.c0))<((vt0.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0))>((((vt0.c0)>=(vt0.c0)))))) ORDER BY (+ ((((vt0.c0))<((vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0))>((((vt0.c0)>=(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (+ ((((vt0.c0))<((vt0.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0))>((((vt0.c0)>=(vt0.c0)))))) ORDER BY (+ ((((vt0.c0))<((vt0.c0))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t1, v0 WHERE ((+ (rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((+ (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, t1, v0);
SELECT ALL COUNT(*) FROM rt0, t1, v0 WHERE ((+ (rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((+ (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, t1, v0);
SELECT ALL COUNT(*) FROM rt0, t1, v0 WHERE ((+ (rt0.c2 COLLATE RTRIM)));
SELECT ALL * FROM vt0, v0, t1 WHERE (((t1.c64 COLLATE RTRIM) NOT NULL)) ORDER BY (((((((((t1.c2)OR(0.7645100795897307)))OR(t1.c2)))AND(t1.c64)))OR(t1.c2)) IN (((t1.c64) NOT NULL)))  NULLS FIRST, (((t1.c2 IN ())) BETWEEN (t1.c64) AND (((vt0.c0)||(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t1.c64 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM vt0, v0, t1 ORDER BY (((((((((t1.c2)OR(0.7645100795897307)))OR(t1.c2)))AND(t1.c64)))OR(t1.c2)) IN (((t1.c64) NOT NULL)))  NULLS FIRST, (((t1.c2 IN ())) BETWEEN (t1.c64) AND (((vt0.c0)||(vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0, v0, t1 WHERE (((t1.c64 COLLATE RTRIM) NOT NULL)) ORDER BY (((((((((t1.c2)OR(0.7645100795897307)))OR(t1.c2)))AND(t1.c64)))OR(t1.c2)) IN (((t1.c64) NOT NULL)))  NULLS FIRST, (((t1.c2 IN ())) BETWEEN (t1.c64) AND (((vt0.c0)||(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t1.c64 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM vt0, v0, t1 ORDER BY (((((((((t1.c2)OR(0.7645100795897307)))OR(t1.c2)))AND(t1.c64)))OR(t1.c2)) IN (((t1.c64) NOT NULL)))  NULLS FIRST, (((t1.c2 IN ())) BETWEEN (t1.c64) AND (((vt0.c0)||(vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0, v0, t1 WHERE (((t1.c64 COLLATE RTRIM) NOT NULL)) ORDER BY (((((((((t1.c2)OR(0.7645100795897307)))OR(t1.c2)))AND(t1.c64)))OR(t1.c2)) IN (((t1.c64) NOT NULL)))  NULLS FIRST, (((t1.c2 IN ())) BETWEEN (t1.c64) AND (((vt0.c0)||(vt0.c0))))  NULLS LAST;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t1 ON (v0.c0 IN ()) CROSS JOIN rt0 ON ((((t1.c0)AND(t1.c2)))OR(rt0.c1)) COLLATE BINARY FULL OUTER JOIN v0 ON UNLIKELY(TYPEOF(DISTINCT rt0.c0)) WHERE (((((t1.c64)AND(vt0.c0)))OR(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((t1.c64)AND(vt0.c0)))OR(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t1 ON (v0.c0 IN ()) CROSS JOIN rt0 ON ((((t1.c0)AND(t1.c2)))OR(rt0.c1)) COLLATE BINARY FULL OUTER JOIN v0 ON UNLIKELY(TYPEOF(DISTINCT rt0.c0)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t1 ON (v0.c0 IN ()) CROSS JOIN rt0 ON ((((t1.c0)AND(t1.c2)))OR(rt0.c1)) COLLATE BINARY FULL OUTER JOIN v0 ON UNLIKELY(TYPEOF(DISTINCT rt0.c0)) WHERE (((((t1.c64)AND(vt0.c0)))OR(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((t1.c64)AND(vt0.c0)))OR(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t1 ON (v0.c0 IN ()) CROSS JOIN rt0 ON ((((t1.c0)AND(t1.c2)))OR(rt0.c1)) COLLATE BINARY FULL OUTER JOIN v0 ON UNLIKELY(TYPEOF(DISTINCT rt0.c0)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t1 ON (v0.c0 IN ()) CROSS JOIN rt0 ON ((((t1.c0)AND(t1.c2)))OR(rt0.c1)) COLLATE BINARY FULL OUTER JOIN v0 ON UNLIKELY(TYPEOF(DISTINCT rt0.c0)) WHERE (((((t1.c64)AND(vt0.c0)))OR(vt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM v0, rt0 WHERE ((~ (CAST(rt0.c1 AS BLOB)))) ORDER BY (((((v0.c0))<((NULL))))==(CAST(v0.c0 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((v0.c0))<((NULL))))=(CAST(v0.c0 AS INTEGER))) DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE ((~ (CAST(rt0.c1 AS BLOB)))) ORDER BY (((((v0.c0))<((NULL))))==(CAST(v0.c0 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((v0.c0))<((NULL))))=(CAST(v0.c0 AS INTEGER))) DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE ((~ (CAST(rt0.c1 AS BLOB)))) ORDER BY (((((v0.c0))<((NULL))))==(CAST(v0.c0 AS INTEGER))) DESC;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ABS(-1562295498) LEFT OUTER JOIN t1 ON CAST(((t1.c64)&(0xfffffffff1ed75f2)) AS REAL) WHERE (t1.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0 COLLATE BINARY) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ABS(-1562295498) LEFT OUTER JOIN t1 ON CAST(((t1.c64)&(0xfffffffff1ed75f2)) AS REAL));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ABS(-1562295498) LEFT OUTER JOIN t1 ON CAST(((t1.c64)&(0xfffffffff1ed75f2)) AS REAL) WHERE (t1.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0 COLLATE BINARY) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ABS(-1562295498) LEFT OUTER JOIN t1 ON CAST(((t1.c64)&(0xfffffffff1ed75f2)) AS REAL));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ABS(-1562295498) LEFT OUTER JOIN t1 ON CAST(((t1.c64)&(0xfffffffff1ed75f2)) AS REAL) WHERE (t1.c0 COLLATE BINARY);
SELECT ALL * FROM vt0, t1 INDEXED BY i13, v0, rt0 WHERE (((v0.c0) NOT NULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t1 INDEXED BY i13, v0, rt0);
SELECT ALL * FROM vt0, t1 INDEXED BY i13, v0, rt0 WHERE (((v0.c0) NOT NULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t1 INDEXED BY i13, v0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((((((v0.c0)OR(rt0.c1)))OR(v0.c0)))+((~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(rt0.c1)))OR(v0.c0)))+((~ (v0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((((((v0.c0)OR(rt0.c1)))OR(v0.c0)))+((~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(rt0.c1)))OR(v0.c0)))+((~ (v0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((((((v0.c0)OR(rt0.c1)))OR(v0.c0)))+((~ (v0.c0)))));
SELECT COUNT(*) FROM rt0 NATURAL JOIN t1 WHERE ((((rt0.c0 IN ())) NOT BETWEEN ((rt0.c0 IN (t1.c2))) AND (rt0.c0 COLLATE BINARY))) ORDER BY ((((t1.c64) BETWEEN (t1.c2) AND (rt0.c1)))IS NOT(((rt0.c2)%(t1.c2))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) NOT BETWEEN ((rt0.c0 IN (t1.c2))) AND (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 NATURAL JOIN t1 ORDER BY ((((t1.c64) BETWEEN (t1.c2) AND (rt0.c1)))IS NOT(((rt0.c2)%(t1.c2)))));
SELECT COUNT(*) FROM rt0 NATURAL JOIN t1 WHERE ((((rt0.c0 IN ())) NOT BETWEEN ((rt0.c0 IN (t1.c2))) AND (rt0.c0 COLLATE BINARY))) ORDER BY ((((t1.c64) BETWEEN (t1.c2) AND (rt0.c1)))IS NOT(((rt0.c2)%(t1.c2))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) NOT BETWEEN ((rt0.c0 IN (t1.c2))) AND (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 NATURAL JOIN t1 ORDER BY ((((t1.c64) BETWEEN (t1.c2) AND (rt0.c1)))IS NOT(((rt0.c2)%(t1.c2)))));
SELECT COUNT(*) FROM rt0 NATURAL JOIN t1 WHERE ((((rt0.c0 IN ())) NOT BETWEEN ((rt0.c0 IN (t1.c2))) AND (rt0.c0 COLLATE BINARY))) ORDER BY ((((t1.c64) BETWEEN (t1.c2) AND (rt0.c1)))IS NOT(((rt0.c2)%(t1.c2))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND('1001572381'))) NOT BETWEEN (UPPER(DISTINCT vt0.c0)) AND (LOWER(DISTINCT vt0.c0)))) ORDER BY ((((+ (vt0.c0)), ((vt0.c0)+(vt0.c0)), ((vt0.c0)<(vt0.c0))))>(((vt0.c0 IN ()), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND('1001572381'))) NOT BETWEEN (UPPER(DISTINCT vt0.c0)) AND (LOWER(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((+ (vt0.c0)), ((vt0.c0)+(vt0.c0)), ((vt0.c0)<(vt0.c0))))>(((vt0.c0 IN ()), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND('1001572381'))) NOT BETWEEN (UPPER(DISTINCT vt0.c0)) AND (LOWER(DISTINCT vt0.c0)))) ORDER BY ((((+ (vt0.c0)), ((vt0.c0)+(vt0.c0)), ((vt0.c0)<(vt0.c0))))>(((vt0.c0 IN ()), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND('1001572381'))) NOT BETWEEN (UPPER(DISTINCT vt0.c0)) AND (LOWER(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((+ (vt0.c0)), ((vt0.c0)+(vt0.c0)), ((vt0.c0)<(vt0.c0))))>(((vt0.c0 IN ()), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND('1001572381'))) NOT BETWEEN (UPPER(DISTINCT vt0.c0)) AND (LOWER(DISTINCT vt0.c0)))) ORDER BY ((((+ (vt0.c0)), ((vt0.c0)+(vt0.c0)), ((vt0.c0)<(vt0.c0))))>(((vt0.c0 IN ()), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT ALL * FROM v0 WHERE ((((((v0.c0))>=((v0.c0)))) NOT BETWEEN (((((v0.c0)OR(x'6ad7')))AND(v0.c0))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY CASE WHEN ((v0.c0) IS TRUE) THEN (- (v0.c0)) END  NULLS LAST, (((v0.c0 IN ())) BETWEEN ((v0.c0 IN ())) AND (CAST(v0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))>=((v0.c0)))) NOT BETWEEN (((((v0.c0)OR(x'6ad7')))AND(v0.c0))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c0) IS TRUE) THEN (- (v0.c0)) END  NULLS LAST, (((v0.c0 IN ())) BETWEEN ((v0.c0 IN ())) AND (CAST(v0.c0 AS TEXT))));
SELECT ALL * FROM v0 WHERE ((((((v0.c0))>=((v0.c0)))) NOT BETWEEN (((((v0.c0)OR(x'6ad7')))AND(v0.c0))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY CASE WHEN ((v0.c0) IS TRUE) THEN (- (v0.c0)) END  NULLS LAST, (((v0.c0 IN ())) BETWEEN ((v0.c0 IN ())) AND (CAST(v0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))>=((v0.c0)))) NOT BETWEEN (((((v0.c0)OR(x'6ad7')))AND(v0.c0))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c0) IS TRUE) THEN (- (v0.c0)) END  NULLS LAST, (((v0.c0 IN ())) BETWEEN ((v0.c0 IN ())) AND (CAST(v0.c0 AS TEXT))));
SELECT ALL * FROM v0 WHERE ((((((v0.c0))>=((v0.c0)))) NOT BETWEEN (((((v0.c0)OR(x'6ad7')))AND(v0.c0))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY CASE WHEN ((v0.c0) IS TRUE) THEN (- (v0.c0)) END  NULLS LAST, (((v0.c0 IN ())) BETWEEN ((v0.c0 IN ())) AND (CAST(v0.c0 AS TEXT)));
SELECT ALL * FROM v0, rt0 WHERE ((((~ (v0.c0)))>(((((rt0.c2)OR(v0.c0)))AND(rt0.c1))))) ORDER BY (~ (((rt0.c2) IS FALSE))) ASC  NULLS LAST, CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)) THEN (+ (rt0.c2)) END DESC  NULLS LAST, (((TIME(v0.c0, rt0.c2, v0.c0)))>=((((v0.c0) BETWEEN (rt0.c1) AND (v0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (v0.c0)))>(((((rt0.c2)OR(v0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (~ (((rt0.c2) IS FALSE))) ASC  NULLS LAST, CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)) THEN (+ (rt0.c2)) END DESC  NULLS LAST, (((TIME(v0.c0, rt0.c2, v0.c0)))>=((((v0.c0) BETWEEN (rt0.c1) AND (v0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE ((((~ (v0.c0)))>(((((rt0.c2)OR(v0.c0)))AND(rt0.c1))))) ORDER BY (~ (((rt0.c2) IS FALSE))) ASC  NULLS LAST, CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)) THEN (+ (rt0.c2)) END DESC  NULLS LAST, (((TIME(v0.c0, rt0.c2, v0.c0)))>=((((v0.c0) BETWEEN (rt0.c1) AND (v0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (v0.c0)))>(((((rt0.c2)OR(v0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (~ (((rt0.c2) IS FALSE))) ASC  NULLS LAST, CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)) THEN (+ (rt0.c2)) END DESC  NULLS LAST, (((TIME(v0.c0, rt0.c2, v0.c0)))>=((((v0.c0) BETWEEN (rt0.c1) AND (v0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE ((((~ (v0.c0)))>(((((rt0.c2)OR(v0.c0)))AND(rt0.c1))))) ORDER BY (~ (((rt0.c2) IS FALSE))) ASC  NULLS LAST, CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)) THEN (+ (rt0.c2)) END DESC  NULLS LAST, (((TIME(v0.c0, rt0.c2, v0.c0)))>=((((v0.c0) BETWEEN (rt0.c1) AND (v0.c0))))) DESC  NULLS LAST;
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)+(-1674498675)))OR(CAST(v0.c0 AS INTEGER))))OR(((v0.c0) NOT NULL))))OR(v0.c0 COLLATE RTRIM)))AND(CAST(v0.c0 AS BLOB)))) ORDER BY CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)+(-1674498675)))OR(CAST(v0.c0 AS INTEGER))))OR(((v0.c0) NOT NULL))))OR(v0.c0 COLLATE RTRIM)))AND(CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END COLLATE NOCASE);
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)+(-1674498675)))OR(CAST(v0.c0 AS INTEGER))))OR(((v0.c0) NOT NULL))))OR(v0.c0 COLLATE RTRIM)))AND(CAST(v0.c0 AS BLOB)))) ORDER BY CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)+(-1674498675)))OR(CAST(v0.c0 AS INTEGER))))OR(((v0.c0) NOT NULL))))OR(v0.c0 COLLATE RTRIM)))AND(CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END COLLATE NOCASE);
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)+(-1674498675)))OR(CAST(v0.c0 AS INTEGER))))OR(((v0.c0) NOT NULL))))OR(v0.c0 COLLATE RTRIM)))AND(CAST(v0.c0 AS BLOB)))) ORDER BY CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END COLLATE NOCASE;
SELECT * FROM v0 LEFT OUTER JOIN t1 ON t1.c0 COLLATE NOCASE INNER JOIN vt0 ON (t1.c64 IN ()) COLLATE BINARY CROSS JOIN rt0 ON json((rt0.c1 IN ())) WHERE ((~ (((rt0.c0)IS NOT(rt0.c0))))) ORDER BY CASE WHEN ((rt0.c0)<<(vt0.c0)) THEN CAST(v0.c0 AS NUMERIC) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c0)IS NOT(rt0.c0))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t1 ON t1.c0 COLLATE NOCASE INNER JOIN vt0 ON (t1.c64 IN ()) COLLATE BINARY CROSS JOIN rt0 ON json((rt0.c1 IN ())) ORDER BY CASE WHEN ((rt0.c0)<<(vt0.c0)) THEN CAST(v0.c0 AS NUMERIC) END ASC  NULLS LAST);
SELECT * FROM v0 LEFT OUTER JOIN t1 ON t1.c0 COLLATE NOCASE INNER JOIN vt0 ON (t1.c64 IN ()) COLLATE BINARY CROSS JOIN rt0 ON json((rt0.c1 IN ())) WHERE ((~ (((rt0.c0)IS NOT(rt0.c0))))) ORDER BY CASE WHEN ((rt0.c0)<<(vt0.c0)) THEN CAST(v0.c0 AS NUMERIC) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c0)IS NOT(rt0.c0))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t1 ON t1.c0 COLLATE NOCASE INNER JOIN vt0 ON (t1.c64 IN ()) COLLATE BINARY CROSS JOIN rt0 ON json((rt0.c1 IN ())) ORDER BY CASE WHEN ((rt0.c0)<<(vt0.c0)) THEN CAST(v0.c0 AS NUMERIC) END ASC  NULLS LAST);
SELECT * FROM v0 LEFT OUTER JOIN t1 ON t1.c0 COLLATE NOCASE INNER JOIN vt0 ON (t1.c64 IN ()) COLLATE BINARY CROSS JOIN rt0 ON json((rt0.c1 IN ())) WHERE ((~ (((rt0.c0)IS NOT(rt0.c0))))) ORDER BY CASE WHEN ((rt0.c0)<<(vt0.c0)) THEN CAST(v0.c0 AS NUMERIC) END ASC  NULLS LAST;
SELECT * FROM vt0 LEFT OUTER JOIN t1 ON ((((rt0.c0)OR(rt0.c2)))AND(((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) RIGHT OUTER JOIN rt0 ON ((((((((((vt0.c0)<=('')))AND(TRIM(DISTINCT rt0.c1))))OR((- (t1.c0)))))AND((((vt0.c0))>=((rt0.c1))))))AND(((v0.c0)||(v0.c0)))) RIGHT OUTER JOIN v0 ON ((((t1.c0)LIKE(t1.c64))) NOT NULL) WHERE (((t1.c0)>>(LIKELY(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((t1.c0)>>(LIKELY(v0.c0)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON ((((rt0.c0)OR(rt0.c2)))AND(((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) RIGHT OUTER JOIN rt0 ON ((((((((((vt0.c0)<=('')))AND(TRIM(DISTINCT rt0.c1))))OR((- (t1.c0)))))AND((((vt0.c0))>=((rt0.c1))))))AND(((v0.c0)||(v0.c0)))) RIGHT OUTER JOIN v0 ON ((((t1.c0)LIKE(t1.c64))) NOT NULL));
SELECT * FROM vt0 LEFT OUTER JOIN t1 ON ((((rt0.c0)OR(rt0.c2)))AND(((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) RIGHT OUTER JOIN rt0 ON ((((((((((vt0.c0)<=('')))AND(TRIM(DISTINCT rt0.c1))))OR((- (t1.c0)))))AND((((vt0.c0))>=((rt0.c1))))))AND(((v0.c0)||(v0.c0)))) RIGHT OUTER JOIN v0 ON ((((t1.c0)LIKE(t1.c64))) NOT NULL) WHERE (((t1.c0)>>(LIKELY(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((t1.c0)>>(LIKELY(v0.c0)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON ((((rt0.c0)OR(rt0.c2)))AND(((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) RIGHT OUTER JOIN rt0 ON ((((((((((vt0.c0)<=('')))AND(TRIM(DISTINCT rt0.c1))))OR((- (t1.c0)))))AND((((vt0.c0))>=((rt0.c1))))))AND(((v0.c0)||(v0.c0)))) RIGHT OUTER JOIN v0 ON ((((t1.c0)LIKE(t1.c64))) NOT NULL));
SELECT * FROM t1, vt0, v0, rt0 WHERE (NULL) ORDER BY (rt0.c2 COLLATE NOCASE IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1, vt0, v0, rt0 ORDER BY (rt0.c2 COLLATE NOCASE IN ())  NULLS FIRST);
SELECT * FROM t1, vt0, v0, rt0 WHERE (NULL) ORDER BY (rt0.c2 COLLATE NOCASE IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1, vt0, v0, rt0 ORDER BY (rt0.c2 COLLATE NOCASE IN ())  NULLS FIRST);
SELECT * FROM t1, vt0, v0, rt0 WHERE (NULL) ORDER BY (rt0.c2 COLLATE NOCASE IN ())  NULLS FIRST;
SELECT * FROM rt0, v0 WHERE (LIKE(CAST(v0.c0 AS BLOB), ((v0.c0)IS(rt0.c1)), '%')) ORDER BY CAST(((rt0.c0)*(rt0.c1)) AS REAL), ((v0.c0 IN (0.963205445503838)) IN ()) ASC, rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKE(CAST(v0.c0 AS BLOB), ((v0.c0)IS(rt0.c1)), '%')) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(((rt0.c0)*(rt0.c1)) AS REAL), ((v0.c0 IN (0.963205445503838)) IN ()) ASC, rt0.c2 DESC);
SELECT * FROM rt0, v0 WHERE (LIKE(CAST(v0.c0 AS BLOB), ((v0.c0)IS(rt0.c1)), '%')) ORDER BY CAST(((rt0.c0)*(rt0.c1)) AS REAL), ((v0.c0 IN (0.963205445503838)) IN ()) ASC, rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKE(CAST(v0.c0 AS BLOB), ((v0.c0)IS(rt0.c1)), '%')) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(((rt0.c0)*(rt0.c1)) AS REAL), ((v0.c0 IN (0.963205445503838)) IN ()) ASC, rt0.c2 DESC);
SELECT * FROM rt0, v0 WHERE (LIKE(CAST(v0.c0 AS BLOB), ((v0.c0)IS(rt0.c1)), '%')) ORDER BY CAST(((rt0.c0)*(rt0.c1)) AS REAL), ((v0.c0 IN (0.963205445503838)) IN ()) ASC, rt0.c2 DESC;
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE ((('1496810002')|(CAST(rt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((('1496810002')|(CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE ((('1496810002')|(CAST(rt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((('1496810002')|(CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE ((('1496810002')|(CAST(rt0.c1 AS INTEGER))));
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)||(vt0.c0))  WHEN HEX(DISTINCT vt0.c0) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)||(vt0.c0))  WHEN HEX(DISTINCT vt0.c0) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)||(vt0.c0))  WHEN HEX(DISTINCT vt0.c0) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)||(vt0.c0))  WHEN HEX(DISTINCT vt0.c0) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)||(vt0.c0))  WHEN HEX(DISTINCT vt0.c0) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT * FROM v0 INNER JOIN t1 ON ((((t1.c64)||(t1.c2)))&(CAST(t1.c64 AS BLOB))) INNER JOIN vt0 ON 0.1400004457831392 WHERE (CASE CAST(t1.c64 AS BLOB)  WHEN t1.c2 COLLATE BINARY THEN (v0.c0 IN ()) ELSE ((v0.c0)AND(t1.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(t1.c64 AS BLOB)  WHEN t1.c2 COLLATE BINARY THEN (v0.c0 IN ()) ELSE ((v0.c0)AND(t1.c2)) END) IS TRUE)  as count FROM v0 INNER JOIN t1 ON ((((t1.c64)||(t1.c2)))&(CAST(t1.c64 AS BLOB))) INNER JOIN vt0 ON 0.1400004457831392);
SELECT * FROM v0 INNER JOIN t1 ON ((((t1.c64)||(t1.c2)))&(CAST(t1.c64 AS BLOB))) INNER JOIN vt0 ON 0.1400004457831392 WHERE (CASE CAST(t1.c64 AS BLOB)  WHEN t1.c2 COLLATE BINARY THEN (v0.c0 IN ()) ELSE ((v0.c0)AND(t1.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(t1.c64 AS BLOB)  WHEN t1.c2 COLLATE BINARY THEN (v0.c0 IN ()) ELSE ((v0.c0)AND(t1.c2)) END) IS TRUE)  as count FROM v0 INNER JOIN t1 ON ((((t1.c64)||(t1.c2)))&(CAST(t1.c64 AS BLOB))) INNER JOIN vt0 ON 0.1400004457831392);
SELECT * FROM v0 INNER JOIN t1 ON ((((t1.c64)||(t1.c2)))&(CAST(t1.c64 AS BLOB))) INNER JOIN vt0 ON 0.1400004457831392 WHERE (CASE CAST(t1.c64 AS BLOB)  WHEN t1.c2 COLLATE BINARY THEN (v0.c0 IN ()) ELSE ((v0.c0)AND(t1.c2)) END);
SELECT * FROM t1 WHERE (COALESCE((('-1334179514') IS TRUE), ((((t1.c0)OR(t1.c0)))OR(t1.c0)))) ORDER BY ((((x'05e21ff0')OR((t1.c64 IN ()))))AND(t1.c2)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE((('-1334179514') IS TRUE), ((((t1.c0)OR(t1.c0)))OR(t1.c0)))) IS TRUE)  as count FROM t1 ORDER BY ((((x'05e21ff0')OR((t1.c64 IN ()))))AND(t1.c2)) DESC  NULLS LAST);
SELECT * FROM t1 WHERE (COALESCE((('-1334179514') IS TRUE), ((((t1.c0)OR(t1.c0)))OR(t1.c0)))) ORDER BY ((((x'05e21ff0')OR((t1.c64 IN ()))))AND(t1.c2)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE((('-1334179514') IS TRUE), ((((t1.c0)OR(t1.c0)))OR(t1.c0)))) IS TRUE)  as count FROM t1 ORDER BY ((((x'05e21ff0')OR((t1.c64 IN ()))))AND(t1.c2)) DESC  NULLS LAST);
SELECT * FROM t1 WHERE (COALESCE((('-1334179514') IS TRUE), ((((t1.c0)OR(t1.c0)))OR(t1.c0)))) ORDER BY ((((x'05e21ff0')OR((t1.c64 IN ()))))AND(t1.c2)) DESC  NULLS LAST;
SELECT ALL * FROM vt0, t1, v0 WHERE ((((CASE t1.c2  WHEN '鮈qz6' THEN t1.c64 END, CASE WHEN t1.c64 THEN t1.c64 ELSE t1.c0 END, ROUND(t1.c0, t1.c2)))>=(((- (v0.c0)), ((t1.c64)<=(t1.c0)), (((vt0.c0))==((t1.c64)))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE t1.c2  WHEN '鮈qz6' THEN t1.c64 END, CASE WHEN t1.c64 THEN t1.c64 ELSE t1.c0 END, ROUND(t1.c0, t1.c2)))>=(((- (v0.c0)), ((t1.c64)<=(t1.c0)), (((vt0.c0))=((t1.c64))))))) IS TRUE)  as count FROM vt0, t1, v0);
SELECT ALL * FROM vt0, t1, v0 WHERE ((((CASE t1.c2  WHEN '鮈qz6' THEN t1.c64 END, CASE WHEN t1.c64 THEN t1.c64 ELSE t1.c0 END, ROUND(t1.c0, t1.c2)))>=(((- (v0.c0)), ((t1.c64)<=(t1.c0)), (((vt0.c0))==((t1.c64)))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE t1.c2  WHEN '鮈qz6' THEN t1.c64 END, CASE WHEN t1.c64 THEN t1.c64 ELSE t1.c0 END, ROUND(t1.c0, t1.c2)))>=(((- (v0.c0)), ((t1.c64)<=(t1.c0)), (((vt0.c0))=((t1.c64))))))) IS TRUE)  as count FROM vt0, t1, v0);
SELECT ALL * FROM vt0, t1, v0 WHERE ((((CASE t1.c2  WHEN '鮈qz6' THEN t1.c64 END, CASE WHEN t1.c64 THEN t1.c64 ELSE t1.c0 END, ROUND(t1.c0, t1.c2)))>=(((- (v0.c0)), ((t1.c64)<=(t1.c0)), (((vt0.c0))==((t1.c64)))))));
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (v0.c0))) ORDER BY ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))AND(CAST(v0.c0 AS INTEGER))))OR(v0.c0 COLLATE BINARY))  NULLS LAST, ((((v0.c0, v0.c0, NULL))<>((v0.c0, v0.c0, v0.c0))) IN (((v0.c0) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))AND(CAST(v0.c0 AS INTEGER))))OR(v0.c0 COLLATE BINARY))  NULLS LAST, ((((v0.c0, v0.c0, NULL))!=((v0.c0, v0.c0, v0.c0))) IN (((v0.c0) NOT NULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (v0.c0))) ORDER BY ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))AND(CAST(v0.c0 AS INTEGER))))OR(v0.c0 COLLATE BINARY))  NULLS LAST, ((((v0.c0, v0.c0, NULL))<>((v0.c0, v0.c0, v0.c0))) IN (((v0.c0) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))AND(CAST(v0.c0 AS INTEGER))))OR(v0.c0 COLLATE BINARY))  NULLS LAST, ((((v0.c0, v0.c0, NULL))!=((v0.c0, v0.c0, v0.c0))) IN (((v0.c0) NOT NULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (v0.c0))) ORDER BY ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))AND(CAST(v0.c0 AS INTEGER))))OR(v0.c0 COLLATE BINARY))  NULLS LAST, ((((v0.c0, v0.c0, NULL))<>((v0.c0, v0.c0, v0.c0))) IN (((v0.c0) NOT NULL)))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON NULL INNER JOIN rt0 ON x'' WHERE (CAST(rt0.c1 AS INTEGER) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON NULL INNER JOIN rt0 ON x'');
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON NULL INNER JOIN rt0 ON x'' WHERE (CAST(rt0.c1 AS INTEGER) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON NULL INNER JOIN rt0 ON x'');
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON NULL INNER JOIN rt0 ON x'' WHERE (CAST(rt0.c1 AS INTEGER) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((((t1.c64) ISNULL))&(((t1.c0)GLOB(t1.c2))))) ORDER BY (- (highlight(t1.c64, t1.c64, t1.c0, t1.c0)))  NULLS LAST, CASE t1.c64 COLLATE BINARY  WHEN SQLITE_SOURCE_ID() THEN ((((t1.c64)AND(t1.c2)))OR(vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c64) ISNULL))&(((t1.c0)GLOB(t1.c2))))) IS TRUE)  as count FROM vt0, t1 ORDER BY (- (highlight(t1.c64, t1.c64, t1.c0, t1.c0)))  NULLS LAST, CASE t1.c64 COLLATE BINARY  WHEN SQLITE_SOURCE_ID() THEN ((((t1.c64)AND(t1.c2)))OR(vt0.c0)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((((t1.c64) ISNULL))&(((t1.c0)GLOB(t1.c2))))) ORDER BY (- (highlight(t1.c64, t1.c64, t1.c0, t1.c0)))  NULLS LAST, CASE t1.c64 COLLATE BINARY  WHEN SQLITE_SOURCE_ID() THEN ((((t1.c64)AND(t1.c2)))OR(vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c64) ISNULL))&(((t1.c0)GLOB(t1.c2))))) IS TRUE)  as count FROM vt0, t1 ORDER BY (- (highlight(t1.c64, t1.c64, t1.c0, t1.c0)))  NULLS LAST, CASE t1.c64 COLLATE BINARY  WHEN SQLITE_SOURCE_ID() THEN ((((t1.c64)AND(t1.c2)))OR(vt0.c0)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((((t1.c64) ISNULL))&(((t1.c0)GLOB(t1.c2))))) ORDER BY (- (highlight(t1.c64, t1.c64, t1.c0, t1.c0)))  NULLS LAST, CASE t1.c64 COLLATE BINARY  WHEN SQLITE_SOURCE_ID() THEN ((((t1.c64)AND(t1.c2)))OR(vt0.c0)) END  NULLS LAST;
SELECT * FROM t1, vt0 WHERE ((((((t1.c0)||(t1.c64)), ((t1.c64) NOTNULL), CASE WHEN t1.c64 THEN t1.c64 END))=((t1.c64 COLLATE NOCASE, ((NULL) NOT NULL), (- (t1.c2))))));
SELECT SUM(count) FROM (SELECT (((((((t1.c0)||(t1.c64)), ((t1.c64) NOTNULL), CASE WHEN t1.c64 THEN t1.c64 END))=((t1.c64 COLLATE NOCASE, ((NULL) NOT NULL), (- (t1.c2)))))) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE ((((((t1.c0)||(t1.c64)), ((t1.c64) NOTNULL), CASE WHEN t1.c64 THEN t1.c64 END))=((t1.c64 COLLATE NOCASE, ((NULL) NOT NULL), (- (t1.c2))))));
SELECT SUM(count) FROM (SELECT (((((((t1.c0)||(t1.c64)), ((t1.c64) NOTNULL), CASE WHEN t1.c64 THEN t1.c64 END))=((t1.c64 COLLATE NOCASE, ((NULL) NOT NULL), (- (t1.c2)))))) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE ((((((t1.c0)||(t1.c64)), ((t1.c64) NOTNULL), CASE WHEN t1.c64 THEN t1.c64 END))=((t1.c64 COLLATE NOCASE, ((NULL) NOT NULL), (- (t1.c2))))));
SELECT ALL * FROM t1 WHERE (((((((t1.c0) NOTNULL))AND(((t1.c2) IS TRUE))))OR(((t1.c2)GLOB(x''))))) ORDER BY t1.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t1.c0) NOTNULL))AND(((t1.c2) IS TRUE))))OR(((t1.c2)GLOB(x''))))) IS TRUE)  as count FROM t1 ORDER BY t1.c2  NULLS LAST);
SELECT ALL * FROM t1 WHERE (((((((t1.c0) NOTNULL))AND(((t1.c2) IS TRUE))))OR(((t1.c2)GLOB(x''))))) ORDER BY t1.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t1.c0) NOTNULL))AND(((t1.c2) IS TRUE))))OR(((t1.c2)GLOB(x''))))) IS TRUE)  as count FROM t1 ORDER BY t1.c2  NULLS LAST);
SELECT ALL * FROM t1 WHERE (((((((t1.c0) NOTNULL))AND(((t1.c2) IS TRUE))))OR(((t1.c2)GLOB(x''))))) ORDER BY t1.c2  NULLS LAST;
SELECT ALL * FROM v0, t1 CROSS JOIN rt0 ON (((t1.c0 IN ())) NOT NULL) CROSS JOIN vt0 ON ((((((((((t1.c0)AND(t1.c0)))OR(rt0.c1)))OR(t1.c2)))AND(t1.c0)))AND(((t1.c2) BETWEEN (rt0.c0) AND (v0.c0)))) WHERE ((((rt0.c0)) BETWEEN (((((t1.c2))<>((rt0.c0))))) AND ((CASE WHEN '' THEN rt0.c0 END)))) ORDER BY 0.4185689309816316  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN (((((t1.c2))!=((rt0.c0))))) AND ((CASE WHEN '' THEN rt0.c0 END)))) IS TRUE)  as count FROM v0, t1 CROSS JOIN rt0 ON (((t1.c0 IN ())) NOT NULL) CROSS JOIN vt0 ON ((((((((((t1.c0)AND(t1.c0)))OR(rt0.c1)))OR(t1.c2)))AND(t1.c0)))AND(((t1.c2) BETWEEN (rt0.c0) AND (v0.c0)))) ORDER BY 0.4185689309816316  NULLS FIRST);
SELECT ALL * FROM v0, t1 CROSS JOIN rt0 ON (((t1.c0 IN ())) NOT NULL) CROSS JOIN vt0 ON ((((((((((t1.c0)AND(t1.c0)))OR(rt0.c1)))OR(t1.c2)))AND(t1.c0)))AND(((t1.c2) BETWEEN (rt0.c0) AND (v0.c0)))) WHERE ((((rt0.c0)) BETWEEN (((((t1.c2))<>((rt0.c0))))) AND ((CASE WHEN '' THEN rt0.c0 END)))) ORDER BY 0.4185689309816316  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN (((((t1.c2))!=((rt0.c0))))) AND ((CASE WHEN '' THEN rt0.c0 END)))) IS TRUE)  as count FROM v0, t1 CROSS JOIN rt0 ON (((t1.c0 IN ())) NOT NULL) CROSS JOIN vt0 ON ((((((((((t1.c0)AND(t1.c0)))OR(rt0.c1)))OR(t1.c2)))AND(t1.c0)))AND(((t1.c2) BETWEEN (rt0.c0) AND (v0.c0)))) ORDER BY 0.4185689309816316  NULLS FIRST);
SELECT ALL * FROM v0, t1 CROSS JOIN rt0 ON (((t1.c0 IN ())) NOT NULL) CROSS JOIN vt0 ON ((((((((((t1.c0)AND(t1.c0)))OR(rt0.c1)))OR(t1.c2)))AND(t1.c0)))AND(((t1.c2) BETWEEN (rt0.c0) AND (v0.c0)))) WHERE ((((rt0.c0)) BETWEEN (((((t1.c2))<>((rt0.c0))))) AND ((CASE WHEN '' THEN rt0.c0 END)))) ORDER BY 0.4185689309816316  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((((rt0.c0) NOT NULL))) AND ((CASE WHEN t1.c64 THEN t1.c64 END))) WHERE ((((- (rt0.c2))) BETWEEN ((('1736454254') IS FALSE)) AND (((rt0.c0) BETWEEN (rt0.c1) AND (x'')))));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c2))) BETWEEN ((('1736454254') IS FALSE)) AND (((rt0.c0) BETWEEN (rt0.c1) AND (x''))))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((((rt0.c0) NOT NULL))) AND ((CASE WHEN t1.c64 THEN t1.c64 END))));
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((((rt0.c0) NOT NULL))) AND ((CASE WHEN t1.c64 THEN t1.c64 END))) WHERE ((((- (rt0.c2))) BETWEEN ((('1736454254') IS FALSE)) AND (((rt0.c0) BETWEEN (rt0.c1) AND (x'')))));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c2))) BETWEEN ((('1736454254') IS FALSE)) AND (((rt0.c0) BETWEEN (rt0.c1) AND (x''))))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((((rt0.c0) NOT NULL))) AND ((CASE WHEN t1.c64 THEN t1.c64 END))));
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((((rt0.c0) NOT NULL))) AND ((CASE WHEN t1.c64 THEN t1.c64 END))) WHERE ((((- (rt0.c2))) BETWEEN ((('1736454254') IS FALSE)) AND (((rt0.c0) BETWEEN (rt0.c1) AND (x'')))));
SELECT * FROM t1, rt0, vt0, v0 WHERE (((((((rt0.c0)|(rt0.c1)))AND((NOT (vt0.c0)))))AND(NULL COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)|(rt0.c1)))AND((NOT (vt0.c0)))))AND(NULL COLLATE RTRIM))) IS TRUE)  as count FROM t1, rt0, vt0, v0);
SELECT * FROM t1, rt0, vt0, v0 WHERE (((((((rt0.c0)|(rt0.c1)))AND((NOT (vt0.c0)))))AND(NULL COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)|(rt0.c1)))AND((NOT (vt0.c0)))))AND(NULL COLLATE RTRIM))) IS TRUE)  as count FROM t1, rt0, vt0, v0);
SELECT * FROM t1, rt0, vt0, v0 WHERE (((((((rt0.c0)|(rt0.c1)))AND((NOT (vt0.c0)))))AND(NULL COLLATE RTRIM)));
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c1)IS NOT(rt0.c0)))GLOB(rt0.c0))) ORDER BY (NULL IN ()) ASC, CASE rt0.c1 COLLATE NOCASE  WHEN ((rt0.c2)!=(v0.c0)) THEN ((rt0.c2)-(rt0.c2)) ELSE ((v0.c0)/(rt0.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)IS NOT(rt0.c0)))GLOB(rt0.c0))) IS TRUE)  as count FROM rt0, v0 ORDER BY (NULL IN ()) ASC, CASE rt0.c1 COLLATE NOCASE  WHEN ((rt0.c2)!=(v0.c0)) THEN ((rt0.c2)-(rt0.c2)) ELSE ((v0.c0)/(rt0.c2)) END ASC);
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c1)IS NOT(rt0.c0)))GLOB(rt0.c0))) ORDER BY (NULL IN ()) ASC, CASE rt0.c1 COLLATE NOCASE  WHEN ((rt0.c2)!=(v0.c0)) THEN ((rt0.c2)-(rt0.c2)) ELSE ((v0.c0)/(rt0.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)IS NOT(rt0.c0)))GLOB(rt0.c0))) IS TRUE)  as count FROM rt0, v0 ORDER BY (NULL IN ()) ASC, CASE rt0.c1 COLLATE NOCASE  WHEN ((rt0.c2)!=(v0.c0)) THEN ((rt0.c2)-(rt0.c2)) ELSE ((v0.c0)/(rt0.c2)) END ASC);
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c1)IS NOT(rt0.c0)))GLOB(rt0.c0))) ORDER BY (NULL IN ()) ASC, CASE rt0.c1 COLLATE NOCASE  WHEN ((rt0.c2)!=(v0.c0)) THEN ((rt0.c2)-(rt0.c2)) ELSE ((v0.c0)/(rt0.c2)) END ASC;
SELECT * FROM vt0, t1 FULL OUTER JOIN rt0 ON CASE WHEN ((t1.c2)LIKE(rt0.c1)) THEN CASE WHEN x'' THEN rt0.c0 WHEN t1.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END ELSE CASE rt0.c2  WHEN t1.c0 THEN rt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN t1.c2 THEN v0.c0 ELSE rt0.c2 END END CROSS JOIN v0 ON (((((v0.c0)) NOT BETWEEN ((t1.c2)) AND ((vt0.c0)))) BETWEEN (((t1.c0) NOT NULL)) AND (0.07565045016867)) WHERE ((((((((('-133173079')AND(v0.c0)))AND(rt0.c0)))AND(t1.c0)))AND(v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((((((('-133173079')AND(v0.c0)))AND(rt0.c0)))AND(t1.c0)))AND(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t1 FULL OUTER JOIN rt0 ON CASE WHEN ((t1.c2)LIKE(rt0.c1)) THEN CASE WHEN x'' THEN rt0.c0 WHEN t1.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END ELSE CASE rt0.c2  WHEN t1.c0 THEN rt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN t1.c2 THEN v0.c0 ELSE rt0.c2 END END CROSS JOIN v0 ON (((((v0.c0)) NOT BETWEEN ((t1.c2)) AND ((vt0.c0)))) BETWEEN (((t1.c0) NOT NULL)) AND (0.07565045016867)));
SELECT * FROM vt0, t1 FULL OUTER JOIN rt0 ON CASE WHEN ((t1.c2)LIKE(rt0.c1)) THEN CASE WHEN x'' THEN rt0.c0 WHEN t1.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END ELSE CASE rt0.c2  WHEN t1.c0 THEN rt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN t1.c2 THEN v0.c0 ELSE rt0.c2 END END CROSS JOIN v0 ON (((((v0.c0)) NOT BETWEEN ((t1.c2)) AND ((vt0.c0)))) BETWEEN (((t1.c0) NOT NULL)) AND (0.07565045016867)) WHERE ((((((((('-133173079')AND(v0.c0)))AND(rt0.c0)))AND(t1.c0)))AND(v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((((((('-133173079')AND(v0.c0)))AND(rt0.c0)))AND(t1.c0)))AND(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t1 FULL OUTER JOIN rt0 ON CASE WHEN ((t1.c2)LIKE(rt0.c1)) THEN CASE WHEN x'' THEN rt0.c0 WHEN t1.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END ELSE CASE rt0.c2  WHEN t1.c0 THEN rt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN t1.c2 THEN v0.c0 ELSE rt0.c2 END END CROSS JOIN v0 ON (((((v0.c0)) NOT BETWEEN ((t1.c2)) AND ((vt0.c0)))) BETWEEN (((t1.c0) NOT NULL)) AND (0.07565045016867)));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON CAST((vt0.c0 IN ()) AS INTEGER) WHERE (COALESCE(DISTINCT vt0.c0, vt0.c0) COLLATE NOCASE) ORDER BY 0.7655821479683653 ASC;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT vt0.c0, vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CAST((vt0.c0 IN ()) AS INTEGER) ORDER BY 0.7655821479683653 ASC);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON CAST((vt0.c0 IN ()) AS INTEGER) WHERE (COALESCE(DISTINCT vt0.c0, vt0.c0) COLLATE NOCASE) ORDER BY 0.7655821479683653 ASC;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT vt0.c0, vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CAST((vt0.c0 IN ()) AS INTEGER) ORDER BY 0.7655821479683653 ASC);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON CAST((vt0.c0 IN ()) AS INTEGER) WHERE (COALESCE(DISTINCT vt0.c0, vt0.c0) COLLATE NOCASE) ORDER BY 0.7655821479683653 ASC;
SELECT * FROM t1, rt0, v0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1, rt0, v0, vt0);
SELECT * FROM t1, rt0, v0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1, rt0, v0, vt0);
SELECT * FROM t1, rt0, v0, vt0 WHERE (NULL);
SELECT ALL * FROM t1, vt0, rt0, v0 WHERE (CASE CASE WHEN vt0.c0 THEN rt0.c1 ELSE t1.c0 END  WHEN ((t1.c2)-('-2018556214')) THEN NULL WHEN json_type(t1.c2) THEN ((rt0.c1)<=(v0.c0)) WHEN ((rt0.c2) ISNULL) THEN CASE rt0.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c64 THEN vt0.c0 WHEN rt0.c0 THEN '1554897333' ELSE t1.c2 END ELSE ((t1.c2)IS NOT(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN vt0.c0 THEN rt0.c1 ELSE t1.c0 END  WHEN ((t1.c2)-('-2018556214')) THEN NULL WHEN json_type(t1.c2) THEN ((rt0.c1)<=(v0.c0)) WHEN ((rt0.c2) ISNULL) THEN CASE rt0.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c64 THEN vt0.c0 WHEN rt0.c0 THEN '1554897333' ELSE t1.c2 END ELSE ((t1.c2)IS NOT(v0.c0)) END) IS TRUE)  as count FROM t1, vt0, rt0, v0);
SELECT ALL * FROM t1, vt0, rt0, v0 WHERE (CASE CASE WHEN vt0.c0 THEN rt0.c1 ELSE t1.c0 END  WHEN ((t1.c2)-('-2018556214')) THEN NULL WHEN json_type(t1.c2) THEN ((rt0.c1)<=(v0.c0)) WHEN ((rt0.c2) ISNULL) THEN CASE rt0.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c64 THEN vt0.c0 WHEN rt0.c0 THEN '1554897333' ELSE t1.c2 END ELSE ((t1.c2)IS NOT(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN vt0.c0 THEN rt0.c1 ELSE t1.c0 END  WHEN ((t1.c2)-('-2018556214')) THEN NULL WHEN json_type(t1.c2) THEN ((rt0.c1)<=(v0.c0)) WHEN ((rt0.c2) ISNULL) THEN CASE rt0.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c64 THEN vt0.c0 WHEN rt0.c0 THEN '1554897333' ELSE t1.c2 END ELSE ((t1.c2)IS NOT(v0.c0)) END) IS TRUE)  as count FROM t1, vt0, rt0, v0);
SELECT ALL * FROM t1, vt0, rt0, v0 WHERE (CASE CASE WHEN vt0.c0 THEN rt0.c1 ELSE t1.c0 END  WHEN ((t1.c2)-('-2018556214')) THEN NULL WHEN json_type(t1.c2) THEN ((rt0.c1)<=(v0.c0)) WHEN ((rt0.c2) ISNULL) THEN CASE rt0.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c64 THEN vt0.c0 WHEN rt0.c0 THEN '1554897333' ELSE t1.c2 END ELSE ((t1.c2)IS NOT(v0.c0)) END);
SELECT COUNT(*) FROM v0, rt0, vt0 RIGHT OUTER JOIN t1 ON (((rt0.c2)) NOT BETWEEN ((CAST(0.6568548962030735 AS BLOB))) AND ((CAST(t1.c2 AS TEXT)))) WHERE (((((t1.c0)AND(CAST(t1.c2 AS TEXT))))AND(CASE 1643789983  WHEN t1.c64 THEN t1.c64 ELSE rt0.c2 END))) ORDER BY ((((t1.c64)AND(t1.c64)))AND(vt0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)AND(CAST(t1.c2 AS TEXT))))AND(CASE 1643789983  WHEN t1.c64 THEN t1.c64 ELSE rt0.c2 END))) IS TRUE)  as count FROM v0, rt0, vt0 RIGHT OUTER JOIN t1 ON (((rt0.c2)) NOT BETWEEN ((CAST(0.6568548962030735 AS BLOB))) AND ((CAST(t1.c2 AS TEXT)))) ORDER BY ((((t1.c64)AND(t1.c64)))AND(vt0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0, vt0 RIGHT OUTER JOIN t1 ON (((rt0.c2)) NOT BETWEEN ((CAST(0.6568548962030735 AS BLOB))) AND ((CAST(t1.c2 AS TEXT)))) WHERE (((((t1.c0)AND(CAST(t1.c2 AS TEXT))))AND(CASE 1643789983  WHEN t1.c64 THEN t1.c64 ELSE rt0.c2 END))) ORDER BY ((((t1.c64)AND(t1.c64)))AND(vt0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)AND(CAST(t1.c2 AS TEXT))))AND(CASE 1643789983  WHEN t1.c64 THEN t1.c64 ELSE rt0.c2 END))) IS TRUE)  as count FROM v0, rt0, vt0 RIGHT OUTER JOIN t1 ON (((rt0.c2)) NOT BETWEEN ((CAST(0.6568548962030735 AS BLOB))) AND ((CAST(t1.c2 AS TEXT)))) ORDER BY ((((t1.c64)AND(t1.c64)))AND(vt0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0, vt0 RIGHT OUTER JOIN t1 ON (((rt0.c2)) NOT BETWEEN ((CAST(0.6568548962030735 AS BLOB))) AND ((CAST(t1.c2 AS TEXT)))) WHERE (((((t1.c0)AND(CAST(t1.c2 AS TEXT))))AND(CASE 1643789983  WHEN t1.c64 THEN t1.c64 ELSE rt0.c2 END))) ORDER BY ((((t1.c64)AND(t1.c64)))AND(vt0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT * FROM t1, v0, rt0 WHERE (CASE WHEN (+ (4.85560606E8)) THEN NULLIF(t1.c2, rt0.c0) WHEN ((((v0.c0)OR(x'841f')))AND(rt0.c0)) THEN TRIM(v0.c0, rt0.c0) WHEN (t1.c64 IN (rt0.c1, v0.c0)) THEN rt0.c2 COLLATE NOCASE WHEN ((rt0.c0) NOTNULL) THEN ((t1.c2) ISNULL) WHEN NULL THEN ((((t1.c2)AND(v0.c0)))OR(rt0.c2)) END) ORDER BY ((((rt0.c1) NOTNULL))|(((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (4.85560606E8)) THEN NULLIF(t1.c2, rt0.c0) WHEN ((((v0.c0)OR(x'841f')))AND(rt0.c0)) THEN TRIM(v0.c0, rt0.c0) WHEN (t1.c64 IN (rt0.c1, v0.c0)) THEN rt0.c2 COLLATE NOCASE WHEN ((rt0.c0) NOTNULL) THEN ((t1.c2) ISNULL) WHEN NULL THEN ((((t1.c2)AND(v0.c0)))OR(rt0.c2)) END) IS TRUE)  as count FROM t1, v0, rt0 ORDER BY ((((rt0.c1) NOTNULL))|(((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))) DESC  NULLS FIRST);
SELECT * FROM t1, v0, rt0 WHERE (CASE WHEN (+ (4.85560606E8)) THEN NULLIF(t1.c2, rt0.c0) WHEN ((((v0.c0)OR(x'841f')))AND(rt0.c0)) THEN TRIM(v0.c0, rt0.c0) WHEN (t1.c64 IN (rt0.c1, v0.c0)) THEN rt0.c2 COLLATE NOCASE WHEN ((rt0.c0) NOTNULL) THEN ((t1.c2) ISNULL) WHEN NULL THEN ((((t1.c2)AND(v0.c0)))OR(rt0.c2)) END) ORDER BY ((((rt0.c1) NOTNULL))|(((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (4.85560606E8)) THEN NULLIF(t1.c2, rt0.c0) WHEN ((((v0.c0)OR(x'841f')))AND(rt0.c0)) THEN TRIM(v0.c0, rt0.c0) WHEN (t1.c64 IN (rt0.c1, v0.c0)) THEN rt0.c2 COLLATE NOCASE WHEN ((rt0.c0) NOTNULL) THEN ((t1.c2) ISNULL) WHEN NULL THEN ((((t1.c2)AND(v0.c0)))OR(rt0.c2)) END) IS TRUE)  as count FROM t1, v0, rt0 ORDER BY ((((rt0.c1) NOTNULL))|(((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))) DESC  NULLS FIRST);
SELECT * FROM t1, v0, rt0 WHERE (CASE WHEN (+ (4.85560606E8)) THEN NULLIF(t1.c2, rt0.c0) WHEN ((((v0.c0)OR(x'841f')))AND(rt0.c0)) THEN TRIM(v0.c0, rt0.c0) WHEN (t1.c64 IN (rt0.c1, v0.c0)) THEN rt0.c2 COLLATE NOCASE WHEN ((rt0.c0) NOTNULL) THEN ((t1.c2) ISNULL) WHEN NULL THEN ((((t1.c2)AND(v0.c0)))OR(rt0.c2)) END) ORDER BY ((((rt0.c1) NOTNULL))|(((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((t1.c64) NOT NULL))IS(((t1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c64) NOT NULL))IS(((t1.c0) NOTNULL)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((t1.c64) NOT NULL))IS(((t1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c64) NOT NULL))IS(((t1.c0) NOTNULL)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((t1.c64) NOT NULL))IS(((t1.c0) NOTNULL))));
SELECT ALL * FROM v0, vt0, t1 WHERE (CAST(t1.c2 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(t1.c2 AS INTEGER)) IS TRUE)  as count FROM v0, vt0, t1);
SELECT ALL * FROM v0, vt0, t1 WHERE (CAST(t1.c2 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(t1.c2 AS INTEGER)) IS TRUE)  as count FROM v0, vt0, t1);
SELECT ALL * FROM v0, vt0, t1 WHERE (CAST(t1.c2 AS INTEGER));
SELECT COUNT(*) FROM rt0, v0, t1 WHERE ((((((v0.c0 IN ()))AND(v0.c0)))AND(((t1.c2)%(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0 IN ()))AND(v0.c0)))AND(((t1.c2)%(rt0.c2))))) IS TRUE)  as count FROM rt0, v0, t1);
SELECT COUNT(*) FROM rt0, v0, t1 WHERE ((((((v0.c0 IN ()))AND(v0.c0)))AND(((t1.c2)%(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0 IN ()))AND(v0.c0)))AND(((t1.c2)%(rt0.c2))))) IS TRUE)  as count FROM rt0, v0, t1);
SELECT COUNT(*) FROM rt0, v0, t1 WHERE ((((((v0.c0 IN ()))AND(v0.c0)))AND(((t1.c2)%(rt0.c2)))));
SELECT * FROM t1 WHERE (0.6280762344224696) ORDER BY ((CASE t1.c2  WHEN t1.c64 THEN t1.c64 ELSE t1.c2 END)LIKE(t1.c2 COLLATE BINARY)) DESC  NULLS LAST, (((t1.c0)>>(t1.c0)) IN (((t1.c64)/(t1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.6280762344224696) IS TRUE)  as count FROM t1 ORDER BY ((CASE t1.c2  WHEN t1.c64 THEN t1.c64 ELSE t1.c2 END)LIKE(t1.c2 COLLATE BINARY)) DESC  NULLS LAST, (((t1.c0)>>(t1.c0)) IN (((t1.c64)/(t1.c2)))) DESC);
SELECT * FROM t1 WHERE (0.6280762344224696) ORDER BY ((CASE t1.c2  WHEN t1.c64 THEN t1.c64 ELSE t1.c2 END)LIKE(t1.c2 COLLATE BINARY)) DESC  NULLS LAST, (((t1.c0)>>(t1.c0)) IN (((t1.c64)/(t1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.6280762344224696) IS TRUE)  as count FROM t1 ORDER BY ((CASE t1.c2  WHEN t1.c64 THEN t1.c64 ELSE t1.c2 END)LIKE(t1.c2 COLLATE BINARY)) DESC  NULLS LAST, (((t1.c0)>>(t1.c0)) IN (((t1.c64)/(t1.c2)))) DESC);
SELECT * FROM t1 WHERE (0.6280762344224696) ORDER BY ((CASE t1.c2  WHEN t1.c64 THEN t1.c64 ELSE t1.c2 END)LIKE(t1.c2 COLLATE BINARY)) DESC  NULLS LAST, (((t1.c0)>>(t1.c0)) IN (((t1.c64)/(t1.c2)))) DESC;
SELECT ALL * FROM vt0, t1 WHERE (json_type((t1.c64 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((json_type((t1.c64 IN ()))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (json_type((t1.c64 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((json_type((t1.c64 IN ()))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (json_type((t1.c64 IN ())));
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (CASE WHEN NULL THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN NULL THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (CASE WHEN NULL THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN NULL THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (CASE WHEN NULL THEN vt0.c0 END)));
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (0x79b98178) ORDER BY (UPPER(rt0.c0) IN (((x'') NOT BETWEEN (rt0.c1) AND (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0x79b98178) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (UPPER(rt0.c0) IN (((x'') NOT BETWEEN (rt0.c1) AND (rt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (0x79b98178) ORDER BY (UPPER(rt0.c0) IN (((x'') NOT BETWEEN (rt0.c1) AND (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0x79b98178) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (UPPER(rt0.c0) IN (((x'') NOT BETWEEN (rt0.c1) AND (rt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (0x79b98178) ORDER BY (UPPER(rt0.c0) IN (((x'') NOT BETWEEN (rt0.c1) AND (rt0.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON IFNULL(DISTINCT (((v0.c0, rt0.c2, NULL)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c0))), DATETIME(v0.c0, rt0.c1, rt0.c0)) WHERE (CASE LOWER(rt0.c0)  WHEN ((rt0.c1)-(rt0.c1)) THEN (((rt0.c1))>=((rt0.c1))) ELSE GLOB(rt0.c2, v0.c0) END) ORDER BY ((rt0.c0)>=(rt0.c2)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE LOWER(rt0.c0)  WHEN ((rt0.c1)-(rt0.c1)) THEN (((rt0.c1))>=((rt0.c1))) ELSE GLOB(rt0.c2, v0.c0) END) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON IFNULL(DISTINCT (((v0.c0, rt0.c2, NULL)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c0))), DATETIME(v0.c0, rt0.c1, rt0.c0)) ORDER BY ((rt0.c0)>=(rt0.c2)) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON IFNULL(DISTINCT (((v0.c0, rt0.c2, NULL)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c0))), DATETIME(v0.c0, rt0.c1, rt0.c0)) WHERE (CASE LOWER(rt0.c0)  WHEN ((rt0.c1)-(rt0.c1)) THEN (((rt0.c1))>=((rt0.c1))) ELSE GLOB(rt0.c2, v0.c0) END) ORDER BY ((rt0.c0)>=(rt0.c2)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE LOWER(rt0.c0)  WHEN ((rt0.c1)-(rt0.c1)) THEN (((rt0.c1))>=((rt0.c1))) ELSE GLOB(rt0.c2, v0.c0) END) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON IFNULL(DISTINCT (((v0.c0, rt0.c2, NULL)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c0))), DATETIME(v0.c0, rt0.c1, rt0.c0)) ORDER BY ((rt0.c0)>=(rt0.c2)) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON IFNULL(DISTINCT (((v0.c0, rt0.c2, NULL)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c0))), DATETIME(v0.c0, rt0.c1, rt0.c0)) WHERE (CASE LOWER(rt0.c0)  WHEN ((rt0.c1)-(rt0.c1)) THEN (((rt0.c1))>=((rt0.c1))) ELSE GLOB(rt0.c2, v0.c0) END) ORDER BY ((rt0.c0)>=(rt0.c2)) COLLATE BINARY DESC;
SELECT * FROM rt0, t1, v0 WHERE ((((v0.c0) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM rt0, t1, v0);
SELECT * FROM rt0, t1, v0 WHERE ((((v0.c0) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM rt0, t1, v0);
SELECT * FROM rt0, t1, v0 WHERE ((((v0.c0) NOTNULL) IN ()));
SELECT ALL * FROM rt0, v0 WHERE (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t1, v0 WHERE (COALESCE(DISTINCT t1.c0, ((t1.c0) ISNULL), ((v0.c0) NOT BETWEEN (t1.c2) AND (t1.c0)), t1.c0));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT t1.c0, ((t1.c0) ISNULL), ((v0.c0) NOT BETWEEN (t1.c2) AND (t1.c0)), t1.c0)) IS TRUE)  as count FROM t1, v0);
SELECT ALL COUNT(*) FROM t1, v0 WHERE (COALESCE(DISTINCT t1.c0, ((t1.c0) ISNULL), ((v0.c0) NOT BETWEEN (t1.c2) AND (t1.c0)), t1.c0));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT t1.c0, ((t1.c0) ISNULL), ((v0.c0) NOT BETWEEN (t1.c2) AND (t1.c0)), t1.c0)) IS TRUE)  as count FROM t1, v0);
SELECT ALL COUNT(*) FROM t1, v0 WHERE (COALESCE(DISTINCT t1.c0, ((t1.c0) ISNULL), ((v0.c0) NOT BETWEEN (t1.c2) AND (t1.c0)), t1.c0));
SELECT * FROM rt0, v0, t1, vt0 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM rt0, v0, t1, vt0);
SELECT * FROM rt0, v0, t1, vt0 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM rt0, v0, t1, vt0);
SELECT * FROM rt0, v0, t1, vt0 WHERE (t1.c0);
SELECT ALL COUNT(*) FROM v0, t1 WHERE (1350852463) ORDER BY (((t1.c0) IS FALSE) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((1350852463) IS TRUE)  as count FROM v0, t1 ORDER BY (((t1.c0) IS FALSE) IN ()) DESC);
SELECT ALL COUNT(*) FROM v0, t1 WHERE (1350852463) ORDER BY (((t1.c0) IS FALSE) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((1350852463) IS TRUE)  as count FROM v0, t1 ORDER BY (((t1.c0) IS FALSE) IN ()) DESC);
SELECT ALL COUNT(*) FROM v0, t1 WHERE (1350852463) ORDER BY (((t1.c0) IS FALSE) IN ()) DESC;
SELECT * FROM t1, rt0, vt0 WHERE (((((((((((((((((rt0.c1)AND(t1.c2)))AND(t1.c2)))AND(vt0.c0)))OR('1034658933')))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))AND((rt0.c1 IN ())))) ORDER BY ((t1.c2 COLLATE RTRIM)GLOB(NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((rt0.c1)AND(t1.c2)))AND(t1.c2)))AND(vt0.c0)))OR('1034658933')))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))AND((rt0.c1 IN ())))) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY ((t1.c2 COLLATE RTRIM)GLOB(NULL)));
SELECT * FROM t1, rt0, vt0 WHERE (((((((((((((((((rt0.c1)AND(t1.c2)))AND(t1.c2)))AND(vt0.c0)))OR('1034658933')))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))AND((rt0.c1 IN ())))) ORDER BY ((t1.c2 COLLATE RTRIM)GLOB(NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((rt0.c1)AND(t1.c2)))AND(t1.c2)))AND(vt0.c0)))OR('1034658933')))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))AND((rt0.c1 IN ())))) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY ((t1.c2 COLLATE RTRIM)GLOB(NULL)));
SELECT * FROM t1, rt0, vt0 WHERE (((((((((((((((((rt0.c1)AND(t1.c2)))AND(t1.c2)))AND(vt0.c0)))OR('1034658933')))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))AND((rt0.c1 IN ())))) ORDER BY ((t1.c2 COLLATE RTRIM)GLOB(NULL));
SELECT ALL * FROM rt0, t1, v0, vt0 WHERE ((((((t1.c0)) BETWEEN ((x'')) AND ((vt0.c0)))) NOT BETWEEN (((t1.c64)GLOB(t1.c2))) AND (((x'')*(t1.c0))))) ORDER BY ((CASE vt0.c0  WHEN rt0.c1 THEN v0.c0 ELSE '-745707745' END)>>(((rt0.c1)<<(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0)) BETWEEN ((x'')) AND ((vt0.c0)))) NOT BETWEEN (((t1.c64)GLOB(t1.c2))) AND (((x'')*(t1.c0))))) IS TRUE)  as count FROM rt0, t1, v0, vt0 ORDER BY ((CASE vt0.c0  WHEN rt0.c1 THEN v0.c0 ELSE '-745707745' END)>>(((rt0.c1)<<(vt0.c0)))));
SELECT ALL * FROM rt0, t1, v0, vt0 WHERE ((((((t1.c0)) BETWEEN ((x'')) AND ((vt0.c0)))) NOT BETWEEN (((t1.c64)GLOB(t1.c2))) AND (((x'')*(t1.c0))))) ORDER BY ((CASE vt0.c0  WHEN rt0.c1 THEN v0.c0 ELSE '-745707745' END)>>(((rt0.c1)<<(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0)) BETWEEN ((x'')) AND ((vt0.c0)))) NOT BETWEEN (((t1.c64)GLOB(t1.c2))) AND (((x'')*(t1.c0))))) IS TRUE)  as count FROM rt0, t1, v0, vt0 ORDER BY ((CASE vt0.c0  WHEN rt0.c1 THEN v0.c0 ELSE '-745707745' END)>>(((rt0.c1)<<(vt0.c0)))));
SELECT ALL * FROM rt0, t1, v0, vt0 WHERE ((((((t1.c0)) BETWEEN ((x'')) AND ((vt0.c0)))) NOT BETWEEN (((t1.c64)GLOB(t1.c2))) AND (((x'')*(t1.c0))))) ORDER BY ((CASE vt0.c0  WHEN rt0.c1 THEN v0.c0 ELSE '-745707745' END)>>(((rt0.c1)<<(vt0.c0))));
SELECT ALL COUNT(*) FROM t1, vt0, v0, rt0 WHERE (((IFNULL(t1.c0, t1.c2))+(((((((((NULL)AND(-2126999130)))OR(vt0.c0)))OR(t1.c2)))AND(t1.c2))))) ORDER BY (((((t1.c0, vt0.c0, v0.c0))<=((t1.c64, rt0.c2, rt0.c1))))<=(CASE WHEN vt0.c0 THEN 'CSc	oE\n' ELSE rt0.c1 END)), (((((t1.c0, t1.c0, '-200418700', rt0.c1, t1.c2))<=((t1.c64, rt0.c2, rt0.c2, t1.c64, t1.c2)))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(t1.c0, t1.c2))+(((((((((NULL)AND(-2126999130)))OR(vt0.c0)))OR(t1.c2)))AND(t1.c2))))) IS TRUE)  as count FROM t1, vt0, v0, rt0 ORDER BY (((((t1.c0, vt0.c0, v0.c0))<=((t1.c64, rt0.c2, rt0.c1))))<=(CASE WHEN vt0.c0 THEN 'CSc	oE\n' ELSE rt0.c1 END)), (((((t1.c0, t1.c0, '-200418700', rt0.c1, t1.c2))<=((t1.c64, rt0.c2, rt0.c2, t1.c64, t1.c2)))) ISNULL) DESC);
SELECT ALL COUNT(*) FROM t1, vt0, v0, rt0 WHERE (((IFNULL(t1.c0, t1.c2))+(((((((((NULL)AND(-2126999130)))OR(vt0.c0)))OR(t1.c2)))AND(t1.c2))))) ORDER BY (((((t1.c0, vt0.c0, v0.c0))<=((t1.c64, rt0.c2, rt0.c1))))<=(CASE WHEN vt0.c0 THEN 'CSc	oE\n' ELSE rt0.c1 END)), (((((t1.c0, t1.c0, '-200418700', rt0.c1, t1.c2))<=((t1.c64, rt0.c2, rt0.c2, t1.c64, t1.c2)))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(t1.c0, t1.c2))+(((((((((NULL)AND(-2126999130)))OR(vt0.c0)))OR(t1.c2)))AND(t1.c2))))) IS TRUE)  as count FROM t1, vt0, v0, rt0 ORDER BY (((((t1.c0, vt0.c0, v0.c0))<=((t1.c64, rt0.c2, rt0.c1))))<=(CASE WHEN vt0.c0 THEN 'CSc	oE\n' ELSE rt0.c1 END)), (((((t1.c0, t1.c0, '-200418700', rt0.c1, t1.c2))<=((t1.c64, rt0.c2, rt0.c2, t1.c64, t1.c2)))) ISNULL) DESC);
SELECT ALL COUNT(*) FROM t1, vt0, v0, rt0 WHERE (((IFNULL(t1.c0, t1.c2))+(((((((((NULL)AND(-2126999130)))OR(vt0.c0)))OR(t1.c2)))AND(t1.c2))))) ORDER BY (((((t1.c0, vt0.c0, v0.c0))<=((t1.c64, rt0.c2, rt0.c1))))<=(CASE WHEN vt0.c0 THEN 'CSc	oE\n' ELSE rt0.c1 END)), (((((t1.c0, t1.c0, '-200418700', rt0.c1, t1.c2))<=((t1.c64, rt0.c2, rt0.c2, t1.c64, t1.c2)))) ISNULL) DESC;
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE (((((((t1.c2)AND(t1.c2)))OR(rt0.c1)))|(CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((((t1.c2)AND(t1.c2)))OR(rt0.c1)))|(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE (((((((t1.c2)AND(t1.c2)))OR(rt0.c1)))|(CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((((t1.c2)AND(t1.c2)))OR(rt0.c1)))|(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE (((((((t1.c2)AND(t1.c2)))OR(rt0.c1)))|(CAST(rt0.c1 AS TEXT))));
SELECT ALL * FROM rt0, t1, v0 LEFT OUTER JOIN vt0 ON ((((rt0.c2)%(t1.c0)))<=(((((vt0.c0)AND(t1.c64)))OR(v0.c0)))) WHERE (CASE CAST(rt0.c1 AS TEXT)  WHEN ((t1.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) THEN LOWER(rt0.c0) ELSE (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c1 AS TEXT)  WHEN ((t1.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) THEN LOWER(rt0.c0) ELSE (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) IS TRUE)  as count FROM rt0, t1, v0 LEFT OUTER JOIN vt0 ON ((((rt0.c2)%(t1.c0)))<=(((((vt0.c0)AND(t1.c64)))OR(v0.c0)))));
SELECT ALL * FROM rt0, t1, v0 LEFT OUTER JOIN vt0 ON ((((rt0.c2)%(t1.c0)))<=(((((vt0.c0)AND(t1.c64)))OR(v0.c0)))) WHERE (CASE CAST(rt0.c1 AS TEXT)  WHEN ((t1.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) THEN LOWER(rt0.c0) ELSE (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c1 AS TEXT)  WHEN ((t1.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) THEN LOWER(rt0.c0) ELSE (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) IS TRUE)  as count FROM rt0, t1, v0 LEFT OUTER JOIN vt0 ON ((((rt0.c2)%(t1.c0)))<=(((((vt0.c0)AND(t1.c64)))OR(v0.c0)))));
SELECT ALL * FROM rt0, t1, v0 LEFT OUTER JOIN vt0 ON ((((rt0.c2)%(t1.c0)))<=(((((vt0.c0)AND(t1.c64)))OR(v0.c0)))) WHERE (CASE CAST(rt0.c1 AS TEXT)  WHEN ((t1.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) THEN LOWER(rt0.c0) ELSE (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END);
SELECT ALL COUNT(*) FROM v0, t1, rt0, vt0 WHERE (TYPEOF(DISTINCT ((vt0.c0) BETWEEN (t1.c64) AND (rt0.c1)))) ORDER BY ((vt0.c0) NOTNULL) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((vt0.c0) BETWEEN (t1.c64) AND (rt0.c1)))) IS TRUE)  as count FROM v0, t1, rt0, vt0 ORDER BY ((vt0.c0) NOTNULL) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM v0, t1, rt0, vt0 WHERE (TYPEOF(DISTINCT ((vt0.c0) BETWEEN (t1.c64) AND (rt0.c1)))) ORDER BY ((vt0.c0) NOTNULL) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((vt0.c0) BETWEEN (t1.c64) AND (rt0.c1)))) IS TRUE)  as count FROM v0, t1, rt0, vt0 ORDER BY ((vt0.c0) NOTNULL) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM v0, t1, rt0, vt0 WHERE (TYPEOF(DISTINCT ((vt0.c0) BETWEEN (t1.c64) AND (rt0.c1)))) ORDER BY ((vt0.c0) NOTNULL) COLLATE BINARY DESC;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0 COLLATE BINARY)AND(((rt0.c0)>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY)AND(((rt0.c0)>(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0 COLLATE BINARY)AND(((rt0.c0)>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY)AND(((rt0.c0)>(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0 COLLATE BINARY)AND(((rt0.c0)>(vt0.c0)))));
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON 0.6611818265596371 WHERE ((((((v0.c0)AND(rt0.c2)))AND(rt0.c0)) IN (((v0.c0) BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY (CASE WHEN rt0.c0 THEN NULL ELSE rt0.c0 END IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)AND(rt0.c2)))AND(rt0.c0)) IN (((v0.c0) BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON 0.6611818265596371 ORDER BY (CASE WHEN rt0.c0 THEN NULL ELSE rt0.c0 END IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON 0.6611818265596371 WHERE ((((((v0.c0)AND(rt0.c2)))AND(rt0.c0)) IN (((v0.c0) BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY (CASE WHEN rt0.c0 THEN NULL ELSE rt0.c0 END IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)AND(rt0.c2)))AND(rt0.c0)) IN (((v0.c0) BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON 0.6611818265596371 ORDER BY (CASE WHEN rt0.c0 THEN NULL ELSE rt0.c0 END IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON 0.6611818265596371 WHERE ((((((v0.c0)AND(rt0.c2)))AND(rt0.c0)) IN (((v0.c0) BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY (CASE WHEN rt0.c0 THEN NULL ELSE rt0.c0 END IN ()) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (((((rt0.c2) IS FALSE))<=(NULL)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) IS FALSE))<=(NULL))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2) IS FALSE))<=(NULL)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) IS FALSE))<=(NULL))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2) IS FALSE))<=(NULL)));
SELECT COUNT(*) FROM vt0, v0, t1, rt0 WHERE (((0.08136440093702424 IN ()) IN (((rt0.c0)AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((0.08136440093702424 IN ()) IN (((rt0.c0)AND(vt0.c0))))) IS TRUE)  as count FROM vt0, v0, t1, rt0);
SELECT COUNT(*) FROM vt0, v0, t1, rt0 WHERE (((0.08136440093702424 IN ()) IN (((rt0.c0)AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((0.08136440093702424 IN ()) IN (((rt0.c0)AND(vt0.c0))))) IS TRUE)  as count FROM vt0, v0, t1, rt0);
SELECT COUNT(*) FROM vt0, v0, t1, rt0 WHERE (((0.08136440093702424 IN ()) IN (((rt0.c0)AND(vt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE ((((((0.375108989792034))>=((rt0.c0)))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))) AND (rt0.c0))) ORDER BY ((((((rt0.c0) IS FALSE))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))OR(x'' COLLATE BINARY)) ASC  NULLS LAST, ((CAST(rt0.c0 AS REAL)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((0.375108989792034))>=((rt0.c0)))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))) AND (rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0) IS FALSE))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))OR(x'' COLLATE BINARY)) ASC  NULLS LAST, ((CAST(rt0.c0 AS REAL)) NOTNULL) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((((((0.375108989792034))>=((rt0.c0)))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))) AND (rt0.c0))) ORDER BY ((((((rt0.c0) IS FALSE))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))OR(x'' COLLATE BINARY)) ASC  NULLS LAST, ((CAST(rt0.c0 AS REAL)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((0.375108989792034))>=((rt0.c0)))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))) AND (rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0) IS FALSE))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))OR(x'' COLLATE BINARY)) ASC  NULLS LAST, ((CAST(rt0.c0 AS REAL)) NOTNULL) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((((((0.375108989792034))>=((rt0.c0)))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))) AND (rt0.c0))) ORDER BY ((((((rt0.c0) IS FALSE))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))OR(x'' COLLATE BINARY)) ASC  NULLS LAST, ((CAST(rt0.c0 AS REAL)) NOTNULL) ASC;
SELECT ALL COUNT(*) FROM t1, rt0 RIGHT OUTER JOIN vt0 ON (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))*((t1.c0 IN ()))) WHERE (((rt0.c0 COLLATE BINARY) BETWEEN (t1.c64 COLLATE BINARY) AND (NULL))) ORDER BY (- (CASE WHEN vt0.c0 THEN rt0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE BINARY) BETWEEN (t1.c64 COLLATE BINARY) AND (NULL))) IS TRUE)  as count FROM t1, rt0 RIGHT OUTER JOIN vt0 ON (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))*((t1.c0 IN ()))) ORDER BY (- (CASE WHEN vt0.c0 THEN rt0.c1 END)) ASC);
SELECT ALL COUNT(*) FROM t1, rt0 RIGHT OUTER JOIN vt0 ON (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))*((t1.c0 IN ()))) WHERE (((rt0.c0 COLLATE BINARY) BETWEEN (t1.c64 COLLATE BINARY) AND (NULL))) ORDER BY (- (CASE WHEN vt0.c0 THEN rt0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE BINARY) BETWEEN (t1.c64 COLLATE BINARY) AND (NULL))) IS TRUE)  as count FROM t1, rt0 RIGHT OUTER JOIN vt0 ON (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))*((t1.c0 IN ()))) ORDER BY (- (CASE WHEN vt0.c0 THEN rt0.c1 END)) ASC);
SELECT ALL COUNT(*) FROM t1, rt0 RIGHT OUTER JOIN vt0 ON (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))*((t1.c0 IN ()))) WHERE (((rt0.c0 COLLATE BINARY) BETWEEN (t1.c64 COLLATE BINARY) AND (NULL))) ORDER BY (- (CASE WHEN vt0.c0 THEN rt0.c1 END)) ASC;
SELECT COUNT(*) FROM rt0, t1, v0 WHERE (((((v0.c0) BETWEEN (rt0.c0) AND (t1.c2))) NOT NULL)) ORDER BY CAST(((rt0.c0)<(rt0.c0)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (rt0.c0) AND (t1.c2))) NOT NULL)) IS TRUE)  as count FROM rt0, t1, v0 ORDER BY CAST(((rt0.c0)<(rt0.c0)) AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM rt0, t1, v0 WHERE (((((v0.c0) BETWEEN (rt0.c0) AND (t1.c2))) NOT NULL)) ORDER BY CAST(((rt0.c0)<(rt0.c0)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (rt0.c0) AND (t1.c2))) NOT NULL)) IS TRUE)  as count FROM rt0, t1, v0 ORDER BY CAST(((rt0.c0)<(rt0.c0)) AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM rt0, t1, v0 WHERE (((((v0.c0) BETWEEN (rt0.c0) AND (t1.c2))) NOT NULL)) ORDER BY CAST(((rt0.c0)<(rt0.c0)) AS REAL)  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS NUMERIC)) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS NUMERIC)) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS NUMERIC)) ORDER BY vt0.c0;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN (rt0.c2 COLLATE NOCASE) AND (((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN (rt0.c2 COLLATE NOCASE) AND (((((rt0.c0)OR(rt0.c2)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN (rt0.c2 COLLATE NOCASE) AND (((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN (rt0.c2 COLLATE NOCASE) AND (((((rt0.c0)OR(rt0.c2)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN (rt0.c2 COLLATE NOCASE) AND (((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))));
SELECT * FROM t1, rt0, v0 CROSS JOIN vt0 ON x'' WHERE (((t1.c0) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (('-1740489677' IN (rt0.c1))))) ORDER BY CASE SQLITE_COMPILEOPTION_GET(t1.c2)  WHEN CAST(rt0.c1 AS TEXT) THEN x'' WHEN t1.c2 THEN (((rt0.c2))!=((t1.c0))) WHEN ((t1.c64)||(vt0.c0)) THEN NULL ELSE vt0.c0 COLLATE BINARY END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (('-1740489677' IN (rt0.c1))))) IS TRUE)  as count FROM t1, rt0, v0 CROSS JOIN vt0 ON x'' ORDER BY CASE SQLITE_COMPILEOPTION_GET(t1.c2)  WHEN CAST(rt0.c1 AS TEXT) THEN x'' WHEN t1.c2 THEN (((rt0.c2))<>((t1.c0))) WHEN ((t1.c64)||(vt0.c0)) THEN NULL ELSE vt0.c0 COLLATE BINARY END ASC);
SELECT * FROM t1, rt0, v0 CROSS JOIN vt0 ON x'' WHERE (((t1.c0) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (('-1740489677' IN (rt0.c1))))) ORDER BY CASE SQLITE_COMPILEOPTION_GET(t1.c2)  WHEN CAST(rt0.c1 AS TEXT) THEN x'' WHEN t1.c2 THEN (((rt0.c2))!=((t1.c0))) WHEN ((t1.c64)||(vt0.c0)) THEN NULL ELSE vt0.c0 COLLATE BINARY END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (('-1740489677' IN (rt0.c1))))) IS TRUE)  as count FROM t1, rt0, v0 CROSS JOIN vt0 ON x'' ORDER BY CASE SQLITE_COMPILEOPTION_GET(t1.c2)  WHEN CAST(rt0.c1 AS TEXT) THEN x'' WHEN t1.c2 THEN (((rt0.c2))<>((t1.c0))) WHEN ((t1.c64)||(vt0.c0)) THEN NULL ELSE vt0.c0 COLLATE BINARY END ASC);
SELECT * FROM t1, rt0, v0 CROSS JOIN vt0 ON x'' WHERE (((t1.c0) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (('-1740489677' IN (rt0.c1))))) ORDER BY CASE SQLITE_COMPILEOPTION_GET(t1.c2)  WHEN CAST(rt0.c1 AS TEXT) THEN x'' WHEN t1.c2 THEN (((rt0.c2))!=((t1.c0))) WHEN ((t1.c64)||(vt0.c0)) THEN NULL ELSE vt0.c0 COLLATE BINARY END ASC;
SELECT COUNT(*) FROM rt0, vt0, t1 NATURAL JOIN v0 WHERE (TYPEOF(CAST(rt0.c2 AS REAL))) ORDER BY (((((NOT (v0.c0)))AND(CAST(rt0.c2 AS INTEGER))))OR(((v0.c0)<=(t1.c64)))) DESC  NULLS LAST, (LIKELIHOOD(DISTINCT rt0.c2, 0.7897443020878193) IN (((((t1.c2)OR(rt0.c0)))AND(x'')), CASE WHEN NULL THEN rt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(CAST(rt0.c2 AS REAL))) IS TRUE)  as count FROM rt0, vt0, t1 NATURAL JOIN v0 ORDER BY (((((NOT (v0.c0)))AND(CAST(rt0.c2 AS INTEGER))))OR(((v0.c0)<=(t1.c64)))) DESC  NULLS LAST, (LIKELIHOOD(DISTINCT rt0.c2, 0.7897443020878193) IN (((((t1.c2)OR(rt0.c0)))AND(x'')), CASE WHEN NULL THEN rt0.c0 END)));
SELECT COUNT(*) FROM rt0, vt0, t1 NATURAL JOIN v0 WHERE (TYPEOF(CAST(rt0.c2 AS REAL))) ORDER BY (((((NOT (v0.c0)))AND(CAST(rt0.c2 AS INTEGER))))OR(((v0.c0)<=(t1.c64)))) DESC  NULLS LAST, (LIKELIHOOD(DISTINCT rt0.c2, 0.7897443020878193) IN (((((t1.c2)OR(rt0.c0)))AND(x'')), CASE WHEN NULL THEN rt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(CAST(rt0.c2 AS REAL))) IS TRUE)  as count FROM rt0, vt0, t1 NATURAL JOIN v0 ORDER BY (((((NOT (v0.c0)))AND(CAST(rt0.c2 AS INTEGER))))OR(((v0.c0)<=(t1.c64)))) DESC  NULLS LAST, (LIKELIHOOD(DISTINCT rt0.c2, 0.7897443020878193) IN (((((t1.c2)OR(rt0.c0)))AND(x'')), CASE WHEN NULL THEN rt0.c0 END)));
SELECT COUNT(*) FROM rt0, vt0, t1 NATURAL JOIN v0 WHERE (TYPEOF(CAST(rt0.c2 AS REAL))) ORDER BY (((((NOT (v0.c0)))AND(CAST(rt0.c2 AS INTEGER))))OR(((v0.c0)<=(t1.c64)))) DESC  NULLS LAST, (LIKELIHOOD(DISTINCT rt0.c2, 0.7897443020878193) IN (((((t1.c2)OR(rt0.c0)))AND(x'')), CASE WHEN NULL THEN rt0.c0 END));
SELECT * FROM rt0 RIGHT OUTER JOIN t1 ON LTRIM((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((t1.c64, rt0.c2, t1.c0)) AND ((t1.c2, t1.c0, t1.c2)))) WHERE (((rt0.c0)AND(CAST(t1.c0 AS NUMERIC)))) ORDER BY ((((t1.c64)>=(0.3511283752980058)))|((+ (t1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)AND(CAST(t1.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON LTRIM((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((t1.c64, rt0.c2, t1.c0)) AND ((t1.c2, t1.c0, t1.c2)))) ORDER BY ((((t1.c64)>=(0.3511283752980058)))|((+ (t1.c0)))) DESC);
SELECT * FROM rt0 RIGHT OUTER JOIN t1 ON LTRIM((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((t1.c64, rt0.c2, t1.c0)) AND ((t1.c2, t1.c0, t1.c2)))) WHERE (((rt0.c0)AND(CAST(t1.c0 AS NUMERIC)))) ORDER BY ((((t1.c64)>=(0.3511283752980058)))|((+ (t1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)AND(CAST(t1.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON LTRIM((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((t1.c64, rt0.c2, t1.c0)) AND ((t1.c2, t1.c0, t1.c2)))) ORDER BY ((((t1.c64)>=(0.3511283752980058)))|((+ (t1.c0)))) DESC);
SELECT * FROM rt0 RIGHT OUTER JOIN t1 ON LTRIM((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((t1.c64, rt0.c2, t1.c0)) AND ((t1.c2, t1.c0, t1.c2)))) WHERE (((rt0.c0)AND(CAST(t1.c0 AS NUMERIC)))) ORDER BY ((((t1.c64)>=(0.3511283752980058)))|((+ (t1.c0)))) DESC;
SELECT * FROM v0 WHERE ((((v0.c0 IN ()))/(v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))/(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0 IN ()))/(v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))/(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0 IN ()))/(v0.c0 COLLATE NOCASE)));
SELECT * FROM vt0 FULL OUTER JOIN v0 ON CASE CAST(v0.c0 AS NUMERIC)  WHEN (((v0.c0))<=((vt0.c0))) THEN (((vt0.c0, vt0.c0, v0.c0))>((vt0.c0, v0.c0, vt0.c0))) WHEN (~ (vt0.c0)) THEN 0.8072241727057053 WHEN v0.c0 THEN TRIM(v0.c0, vt0.c0) ELSE v0.c0 COLLATE BINARY END WHERE ((((v0.c0)) NOT BETWEEN ((0.7599455216437682)) AND ((v0.c0 COLLATE NOCASE)))) ORDER BY (((('d|ⶍF*') BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (CAST(0xffffffff813891a6 AS INTEGER)) AND (CAST(v0.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((0.7599455216437682)) AND ((v0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CASE CAST(v0.c0 AS NUMERIC)  WHEN (((v0.c0))<=((vt0.c0))) THEN (((vt0.c0, vt0.c0, v0.c0))>((vt0.c0, v0.c0, vt0.c0))) WHEN (~ (vt0.c0)) THEN 0.8072241727057053 WHEN v0.c0 THEN TRIM(v0.c0, vt0.c0) ELSE v0.c0 COLLATE BINARY END ORDER BY (((('d|ⶍF*') BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (CAST(0xffffffff813891a6 AS INTEGER)) AND (CAST(v0.c0 AS TEXT)))  NULLS FIRST);
SELECT * FROM vt0 FULL OUTER JOIN v0 ON CASE CAST(v0.c0 AS NUMERIC)  WHEN (((v0.c0))<=((vt0.c0))) THEN (((vt0.c0, vt0.c0, v0.c0))>((vt0.c0, v0.c0, vt0.c0))) WHEN (~ (vt0.c0)) THEN 0.8072241727057053 WHEN v0.c0 THEN TRIM(v0.c0, vt0.c0) ELSE v0.c0 COLLATE BINARY END WHERE ((((v0.c0)) NOT BETWEEN ((0.7599455216437682)) AND ((v0.c0 COLLATE NOCASE)))) ORDER BY (((('d|ⶍF*') BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (CAST(0xffffffff813891a6 AS INTEGER)) AND (CAST(v0.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((0.7599455216437682)) AND ((v0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CASE CAST(v0.c0 AS NUMERIC)  WHEN (((v0.c0))<=((vt0.c0))) THEN (((vt0.c0, vt0.c0, v0.c0))>((vt0.c0, v0.c0, vt0.c0))) WHEN (~ (vt0.c0)) THEN 0.8072241727057053 WHEN v0.c0 THEN TRIM(v0.c0, vt0.c0) ELSE v0.c0 COLLATE BINARY END ORDER BY (((('d|ⶍF*') BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (CAST(0xffffffff813891a6 AS INTEGER)) AND (CAST(v0.c0 AS TEXT)))  NULLS FIRST);
SELECT * FROM vt0 FULL OUTER JOIN v0 ON CASE CAST(v0.c0 AS NUMERIC)  WHEN (((v0.c0))<=((vt0.c0))) THEN (((vt0.c0, vt0.c0, v0.c0))>((vt0.c0, v0.c0, vt0.c0))) WHEN (~ (vt0.c0)) THEN 0.8072241727057053 WHEN v0.c0 THEN TRIM(v0.c0, vt0.c0) ELSE v0.c0 COLLATE BINARY END WHERE ((((v0.c0)) NOT BETWEEN ((0.7599455216437682)) AND ((v0.c0 COLLATE NOCASE)))) ORDER BY (((('d|ⶍF*') BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (CAST(0xffffffff813891a6 AS INTEGER)) AND (CAST(v0.c0 AS TEXT)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0 IN ()))AND(TYPEOF(v0.c0))))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0 IN ()))AND(TYPEOF(v0.c0))))AND(v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0 IN ()))AND(TYPEOF(v0.c0))))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0 IN ()))AND(TYPEOF(v0.c0))))AND(v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0 IN ()))AND(TYPEOF(v0.c0))))AND(v0.c0)));
SELECT ALL * FROM t1 WHERE ((((t1.c2))>=((CAST(t1.c64 AS TEXT))))) ORDER BY ((t1.c0)>>(t1.c2)) COLLATE NOCASE COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c2))>=((CAST(t1.c64 AS TEXT))))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c0)>>(t1.c2)) COLLATE NOCASE COLLATE BINARY ASC);
SELECT ALL * FROM t1 WHERE ((((t1.c2))>=((CAST(t1.c64 AS TEXT))))) ORDER BY ((t1.c0)>>(t1.c2)) COLLATE NOCASE COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c2))>=((CAST(t1.c64 AS TEXT))))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c0)>>(t1.c2)) COLLATE NOCASE COLLATE BINARY ASC);
SELECT ALL * FROM t1 WHERE ((((t1.c2))>=((CAST(t1.c64 AS TEXT))))) ORDER BY ((t1.c0)>>(t1.c2)) COLLATE NOCASE COLLATE BINARY ASC;
SELECT ALL * FROM vt0, t1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (vt0.c0);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON UPPER(((t1.c2)>=(t1.c64))) RIGHT OUTER JOIN t1 ON ((((0.06129518121178146)AND(((((((((rt0.c1)OR(t1.c64)))AND(t1.c0)))AND(rt0.c0)))OR(t1.c64)))))AND(((rt0.c0) ISNULL))) WHERE (x'4e0dd55f') ORDER BY ((((v0.c0)GLOB(rt0.c0))) IS FALSE) DESC  NULLS LAST, TYPEOF(DISTINCT ((v0.c0) BETWEEN (rt0.c2) AND (t1.c0))) DESC, ((((((v0.c0)OR(rt0.c2)))OR(rt0.c2))) BETWEEN (CASE v0.c0  WHEN t1.c2 THEN t1.c64 END) AND ((t1.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((x'4e0dd55f') IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON UPPER(((t1.c2)>=(t1.c64))) RIGHT OUTER JOIN t1 ON ((((0.06129518121178146)AND(((((((((rt0.c1)OR(t1.c64)))AND(t1.c0)))AND(rt0.c0)))OR(t1.c64)))))AND(((rt0.c0) ISNULL))) ORDER BY ((((v0.c0)GLOB(rt0.c0))) IS FALSE) DESC  NULLS LAST, TYPEOF(DISTINCT ((v0.c0) BETWEEN (rt0.c2) AND (t1.c0))) DESC, ((((((v0.c0)OR(rt0.c2)))OR(rt0.c2))) BETWEEN (CASE v0.c0  WHEN t1.c2 THEN t1.c64 END) AND ((t1.c2 IN ()))));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON UPPER(((t1.c2)>=(t1.c64))) RIGHT OUTER JOIN t1 ON ((((0.06129518121178146)AND(((((((((rt0.c1)OR(t1.c64)))AND(t1.c0)))AND(rt0.c0)))OR(t1.c64)))))AND(((rt0.c0) ISNULL))) WHERE (x'4e0dd55f') ORDER BY ((((v0.c0)GLOB(rt0.c0))) IS FALSE) DESC  NULLS LAST, TYPEOF(DISTINCT ((v0.c0) BETWEEN (rt0.c2) AND (t1.c0))) DESC, ((((((v0.c0)OR(rt0.c2)))OR(rt0.c2))) BETWEEN (CASE v0.c0  WHEN t1.c2 THEN t1.c64 END) AND ((t1.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((x'4e0dd55f') IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON UPPER(((t1.c2)>=(t1.c64))) RIGHT OUTER JOIN t1 ON ((((0.06129518121178146)AND(((((((((rt0.c1)OR(t1.c64)))AND(t1.c0)))AND(rt0.c0)))OR(t1.c64)))))AND(((rt0.c0) ISNULL))) ORDER BY ((((v0.c0)GLOB(rt0.c0))) IS FALSE) DESC  NULLS LAST, TYPEOF(DISTINCT ((v0.c0) BETWEEN (rt0.c2) AND (t1.c0))) DESC, ((((((v0.c0)OR(rt0.c2)))OR(rt0.c2))) BETWEEN (CASE v0.c0  WHEN t1.c2 THEN t1.c64 END) AND ((t1.c2 IN ()))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2)) COLLATE RTRIM INNER JOIN t1 ON ((t1.c2) IS FALSE) RIGHT OUTER JOIN v0 ON v0.c0 WHERE (TOTAL_CHANGES()) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2)) COLLATE RTRIM INNER JOIN t1 ON ((t1.c2) IS FALSE) RIGHT OUTER JOIN v0 ON v0.c0 ORDER BY rt0.c2  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2)) COLLATE RTRIM INNER JOIN t1 ON ((t1.c2) IS FALSE) RIGHT OUTER JOIN v0 ON v0.c0 WHERE (TOTAL_CHANGES()) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2)) COLLATE RTRIM INNER JOIN t1 ON ((t1.c2) IS FALSE) RIGHT OUTER JOIN v0 ON v0.c0 ORDER BY rt0.c2  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2)) COLLATE RTRIM INNER JOIN t1 ON ((t1.c2) IS FALSE) RIGHT OUTER JOIN v0 ON v0.c0 WHERE (TOTAL_CHANGES()) ORDER BY rt0.c2  NULLS LAST;
SELECT ALL * FROM v0 WHERE ((NOT (v0.c0))) ORDER BY (+ (0.2515527359115646)) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY (+ (0.2515527359115646)) DESC);
SELECT ALL * FROM v0 WHERE ((NOT (v0.c0))) ORDER BY (+ (0.2515527359115646)) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY (+ (0.2515527359115646)) DESC);
SELECT ALL * FROM v0 WHERE ((NOT (v0.c0))) ORDER BY (+ (0.2515527359115646)) DESC;
SELECT COUNT(*) FROM rt0, v0, vt0, t1 WHERE (TYPEOF((t1.c2 IN (rt0.c2, 'AF鵹^>\d#w')))) ORDER BY x'' COLLATE NOCASE  NULLS FIRST, CASE WHEN ((((t1.c0)AND(rt0.c0)))OR(t1.c2)) THEN (t1.c0 IN ()) ELSE ABS(rt0.c2) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF((t1.c2 IN (rt0.c2, 'AF鵹^>\d#w')))) IS TRUE)  as count FROM rt0, v0, vt0, t1 ORDER BY x'' COLLATE NOCASE  NULLS FIRST, CASE WHEN ((((t1.c0)AND(rt0.c0)))OR(t1.c2)) THEN (t1.c0 IN ()) ELSE ABS(rt0.c2) END  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0, vt0, t1 WHERE (TYPEOF((t1.c2 IN (rt0.c2, 'AF鵹^>\d#w')))) ORDER BY x'' COLLATE NOCASE  NULLS FIRST, CASE WHEN ((((t1.c0)AND(rt0.c0)))OR(t1.c2)) THEN (t1.c0 IN ()) ELSE ABS(rt0.c2) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF((t1.c2 IN (rt0.c2, 'AF鵹^>\d#w')))) IS TRUE)  as count FROM rt0, v0, vt0, t1 ORDER BY x'' COLLATE NOCASE  NULLS FIRST, CASE WHEN ((((t1.c0)AND(rt0.c0)))OR(t1.c2)) THEN (t1.c0 IN ()) ELSE ABS(rt0.c2) END  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0, vt0, t1 WHERE (TYPEOF((t1.c2 IN (rt0.c2, 'AF鵹^>\d#w')))) ORDER BY x'' COLLATE NOCASE  NULLS FIRST, CASE WHEN ((((t1.c0)AND(rt0.c0)))OR(t1.c2)) THEN (t1.c0 IN ()) ELSE ABS(rt0.c2) END  NULLS LAST;
SELECT ALL * FROM vt0, rt0, t1 WHERE ((((rt0.c1)) NOT BETWEEN ((t1.c64 COLLATE RTRIM)) AND ((HEX(rt0.c0))))) ORDER BY ((((rt0.c0)GLOB(rt0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((t1.c64 COLLATE RTRIM)) AND ((HEX(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY ((((rt0.c0)GLOB(rt0.c0))) IS TRUE));
SELECT ALL * FROM vt0, rt0, t1 WHERE ((((rt0.c1)) NOT BETWEEN ((t1.c64 COLLATE RTRIM)) AND ((HEX(rt0.c0))))) ORDER BY ((((rt0.c0)GLOB(rt0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((t1.c64 COLLATE RTRIM)) AND ((HEX(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY ((((rt0.c0)GLOB(rt0.c0))) IS TRUE));
SELECT ALL * FROM vt0, rt0, t1 WHERE ((((rt0.c1)) NOT BETWEEN ((t1.c64 COLLATE RTRIM)) AND ((HEX(rt0.c0))))) ORDER BY ((((rt0.c0)GLOB(rt0.c0))) IS TRUE);
SELECT ALL * FROM vt0, t1, v0 WHERE ((((t1.c2 IN (t1.c64))) NOT BETWEEN ((t1.c0 IN ())) AND (((t1.c0)|(vt0.c0))))) ORDER BY CAST(CAST(v0.c0 AS INTEGER) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c2 IN (t1.c64))) NOT BETWEEN ((t1.c0 IN ())) AND (((t1.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt0, t1, v0 ORDER BY CAST(CAST(v0.c0 AS INTEGER) AS BLOB) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, t1, v0 WHERE ((((t1.c2 IN (t1.c64))) NOT BETWEEN ((t1.c0 IN ())) AND (((t1.c0)|(vt0.c0))))) ORDER BY CAST(CAST(v0.c0 AS INTEGER) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c2 IN (t1.c64))) NOT BETWEEN ((t1.c0 IN ())) AND (((t1.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt0, t1, v0 ORDER BY CAST(CAST(v0.c0 AS INTEGER) AS BLOB) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, t1, v0 WHERE ((((t1.c2 IN (t1.c64))) NOT BETWEEN ((t1.c0 IN ())) AND (((t1.c0)|(vt0.c0))))) ORDER BY CAST(CAST(v0.c0 AS INTEGER) AS BLOB) DESC  NULLS FIRST;
SELECT ALL * FROM v0, rt0, vt0 INDEXED BY i13, t1 WHERE (((((rt0.c2)AND(rt0.c0)))>(((((x'')OR(t1.c64)))AND(vt0.c0))))) ORDER BY (((rt0.c0) IS FALSE) IN ()) ASC, LIKELY(UPPER(rt0.c1)) ASC  NULLS FIRST, ((((((((((v0.c0)AND(v0.c0)))AND(t1.c2)))OR(rt0.c2)))OR(rt0.c2))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((v0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)AND(rt0.c0)))>(((((x'')OR(t1.c64)))AND(vt0.c0))))) IS TRUE)  as count FROM v0, rt0, vt0 INDEXED BY i13, t1 ORDER BY (((rt0.c0) IS FALSE) IN ()) ASC, LIKELY(UPPER(rt0.c1)) ASC  NULLS FIRST, ((((((((((v0.c0)AND(v0.c0)))AND(t1.c2)))OR(rt0.c2)))OR(rt0.c2))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((v0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))) DESC);
SELECT ALL * FROM v0, rt0, vt0 INDEXED BY i13, t1 WHERE (((((rt0.c2)AND(rt0.c0)))>(((((x'')OR(t1.c64)))AND(vt0.c0))))) ORDER BY (((rt0.c0) IS FALSE) IN ()) ASC, LIKELY(UPPER(rt0.c1)) ASC  NULLS FIRST, ((((((((((v0.c0)AND(v0.c0)))AND(t1.c2)))OR(rt0.c2)))OR(rt0.c2))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((v0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)AND(rt0.c0)))>(((((x'')OR(t1.c64)))AND(vt0.c0))))) IS TRUE)  as count FROM v0, rt0, vt0 INDEXED BY i13, t1 ORDER BY (((rt0.c0) IS FALSE) IN ()) ASC, LIKELY(UPPER(rt0.c1)) ASC  NULLS FIRST, ((((((((((v0.c0)AND(v0.c0)))AND(t1.c2)))OR(rt0.c2)))OR(rt0.c2))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((v0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST((t1.c2 IN ()) AS NUMERIC)) ORDER BY (((((('3拓VS')OR(t1.c0)))OR(t1.c2))) NOT BETWEEN (((t1.c2)IS NOT(t1.c2))) AND ((+ (t1.c64))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((t1.c2 IN ()) AS NUMERIC)) IS TRUE)  as count FROM t1 ORDER BY (((((('3拓VS')OR(t1.c0)))OR(t1.c2))) NOT BETWEEN (((t1.c2)IS NOT(t1.c2))) AND ((+ (t1.c64))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST((t1.c2 IN ()) AS NUMERIC)) ORDER BY (((((('3拓VS')OR(t1.c0)))OR(t1.c2))) NOT BETWEEN (((t1.c2)IS NOT(t1.c2))) AND ((+ (t1.c64))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((t1.c2 IN ()) AS NUMERIC)) IS TRUE)  as count FROM t1 ORDER BY (((((('3拓VS')OR(t1.c0)))OR(t1.c2))) NOT BETWEEN (((t1.c2)IS NOT(t1.c2))) AND ((+ (t1.c64))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST((t1.c2 IN ()) AS NUMERIC)) ORDER BY (((((('3拓VS')OR(t1.c0)))OR(t1.c2))) NOT BETWEEN (((t1.c2)IS NOT(t1.c2))) AND ((+ (t1.c64))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 CROSS JOIN t1 ON HEX(((rt0.c2)||(rt0.c0))) CROSS JOIN rt0 ON CASE WHEN ((((vt0.c0)OR(rt0.c2)))OR(t1.c2)) THEN ((t1.c2)-(rt0.c2)) ELSE (((rt0.c2)) NOT BETWEEN ((t1.c64)) AND ((vt0.c0))) END WHERE (((((vt0.c0)>(rt0.c1)))>(((rt0.c1)+(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>(rt0.c1)))>(((rt0.c1)+(rt0.c2))))) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON HEX(((rt0.c2)||(rt0.c0))) CROSS JOIN rt0 ON CASE WHEN ((((vt0.c0)OR(rt0.c2)))OR(t1.c2)) THEN ((t1.c2)-(rt0.c2)) ELSE (((rt0.c2)) NOT BETWEEN ((t1.c64)) AND ((vt0.c0))) END);
SELECT COUNT(*) FROM vt0 CROSS JOIN t1 ON HEX(((rt0.c2)||(rt0.c0))) CROSS JOIN rt0 ON CASE WHEN ((((vt0.c0)OR(rt0.c2)))OR(t1.c2)) THEN ((t1.c2)-(rt0.c2)) ELSE (((rt0.c2)) NOT BETWEEN ((t1.c64)) AND ((vt0.c0))) END WHERE (((((vt0.c0)>(rt0.c1)))>(((rt0.c1)+(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>(rt0.c1)))>(((rt0.c1)+(rt0.c2))))) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON HEX(((rt0.c2)||(rt0.c0))) CROSS JOIN rt0 ON CASE WHEN ((((vt0.c0)OR(rt0.c2)))OR(t1.c2)) THEN ((t1.c2)-(rt0.c2)) ELSE (((rt0.c2)) NOT BETWEEN ((t1.c64)) AND ((vt0.c0))) END);
SELECT COUNT(*) FROM vt0 CROSS JOIN t1 ON HEX(((rt0.c2)||(rt0.c0))) CROSS JOIN rt0 ON CASE WHEN ((((vt0.c0)OR(rt0.c2)))OR(t1.c2)) THEN ((t1.c2)-(rt0.c2)) ELSE (((rt0.c2)) NOT BETWEEN ((t1.c64)) AND ((vt0.c0))) END WHERE (((((vt0.c0)>(rt0.c1)))>(((rt0.c1)+(rt0.c2)))));
SELECT ALL * FROM v0, rt0, t1 WHERE (((((((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(t1.c0)))<((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(t1.c0)))<((rt0.c0 IN ())))) IS TRUE)  as count FROM v0, rt0, t1);
SELECT ALL * FROM v0, rt0, t1 WHERE (((((((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(t1.c0)))<((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(t1.c0)))<((rt0.c0 IN ())))) IS TRUE)  as count FROM v0, rt0, t1);
SELECT ALL * FROM v0, rt0, t1 WHERE (((((((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(t1.c0)))<((rt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM t1, vt0 CROSS JOIN rt0 ON (((rt0.c2)!=(t1.c64)) IN ()) INNER JOIN v0 ON LOWER(vt0.c0) WHERE (-133173079);
SELECT SUM(count) FROM (SELECT ((-133173079) IS TRUE)  as count FROM t1, vt0 CROSS JOIN rt0 ON (((rt0.c2)!=(t1.c64)) IN ()) INNER JOIN v0 ON LOWER(vt0.c0));
SELECT ALL COUNT(*) FROM t1, vt0 CROSS JOIN rt0 ON (((rt0.c2)!=(t1.c64)) IN ()) INNER JOIN v0 ON LOWER(vt0.c0) WHERE (-133173079);
SELECT SUM(count) FROM (SELECT ((-133173079) IS TRUE)  as count FROM t1, vt0 CROSS JOIN rt0 ON (((rt0.c2)!=(t1.c64)) IN ()) INNER JOIN v0 ON LOWER(vt0.c0));
SELECT ALL COUNT(*) FROM t1, vt0 CROSS JOIN rt0 ON (((rt0.c2)!=(t1.c64)) IN ()) INNER JOIN v0 ON LOWER(vt0.c0) WHERE (-133173079);
SELECT * FROM vt0, rt0, v0, t1 WHERE (CASE WHEN ((vt0.c0) IS TRUE) THEN ((((((((((((NULL)OR(rt0.c2)))OR(rt0.c0)))AND(t1.c64)))AND(v0.c0)))OR(t1.c64)))AND(x'')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) IS TRUE) THEN ((((((((((((NULL)OR(rt0.c2)))OR(rt0.c0)))AND(t1.c64)))AND(v0.c0)))OR(t1.c64)))AND(x'')) END) IS TRUE)  as count FROM vt0, rt0, v0, t1);
SELECT * FROM vt0, rt0, v0, t1 WHERE (CASE WHEN ((vt0.c0) IS TRUE) THEN ((((((((((((NULL)OR(rt0.c2)))OR(rt0.c0)))AND(t1.c64)))AND(v0.c0)))OR(t1.c64)))AND(x'')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) IS TRUE) THEN ((((((((((((NULL)OR(rt0.c2)))OR(rt0.c0)))AND(t1.c64)))AND(v0.c0)))OR(t1.c64)))AND(x'')) END) IS TRUE)  as count FROM vt0, rt0, v0, t1);
SELECT * FROM vt0, rt0, v0, t1 WHERE (CASE WHEN ((vt0.c0) IS TRUE) THEN ((((((((((((NULL)OR(rt0.c2)))OR(rt0.c0)))AND(t1.c64)))AND(v0.c0)))OR(t1.c64)))AND(x'')) END);
SELECT COUNT(*) FROM t1 INNER JOIN rt0 ON ((((t1.c64)%(t1.c0)))>=((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) RIGHT OUTER JOIN v0 ON ((((((((((0.0638546249956301)+(t1.c64)))OR(CASE v0.c0  WHEN t1.c2 THEN x'' END)))OR(rt0.c1 COLLATE BINARY)))AND(((rt0.c1)-(rt0.c1)))))OR(((rt0.c1) NOT BETWEEN (v0.c0) AND (t1.c0)))) FULL OUTER JOIN vt0 ON ((((t1.c0)>(vt0.c0)))*(GLOB(t1.c64, t1.c0))) WHERE (CAST((((t1.c2)) NOT BETWEEN ((t1.c64)) AND (('-1382025560'))) AS NUMERIC)) ORDER BY (((rt0.c2, HEX(DISTINCT t1.c2), x'' COLLATE NOCASE))<>((((t1.c2)IS(t1.c0)), CAST(t1.c2 AS TEXT), ((((((((v0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(v0.c0)))OR('0.8456150927715622'))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((t1.c2)) NOT BETWEEN ((t1.c64)) AND (('-1382025560'))) AS NUMERIC)) IS TRUE)  as count FROM t1 INNER JOIN rt0 ON ((((t1.c64)%(t1.c0)))>=((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) RIGHT OUTER JOIN v0 ON ((((((((((0.0638546249956301)+(t1.c64)))OR(CASE v0.c0  WHEN t1.c2 THEN x'' END)))OR(rt0.c1 COLLATE BINARY)))AND(((rt0.c1)-(rt0.c1)))))OR(((rt0.c1) NOT BETWEEN (v0.c0) AND (t1.c0)))) FULL OUTER JOIN vt0 ON ((((t1.c0)>(vt0.c0)))*(GLOB(t1.c64, t1.c0))) ORDER BY (((rt0.c2, HEX(DISTINCT t1.c2), x'' COLLATE NOCASE))!=((((t1.c2)IS(t1.c0)), CAST(t1.c2 AS TEXT), ((((((((v0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(v0.c0)))OR('0.8456150927715622'))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1 INNER JOIN rt0 ON ((((t1.c64)%(t1.c0)))>=((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) RIGHT OUTER JOIN v0 ON ((((((((((0.0638546249956301)+(t1.c64)))OR(CASE v0.c0  WHEN t1.c2 THEN x'' END)))OR(rt0.c1 COLLATE BINARY)))AND(((rt0.c1)-(rt0.c1)))))OR(((rt0.c1) NOT BETWEEN (v0.c0) AND (t1.c0)))) FULL OUTER JOIN vt0 ON ((((t1.c0)>(vt0.c0)))*(GLOB(t1.c64, t1.c0))) WHERE (CAST((((t1.c2)) NOT BETWEEN ((t1.c64)) AND (('-1382025560'))) AS NUMERIC)) ORDER BY (((rt0.c2, HEX(DISTINCT t1.c2), x'' COLLATE NOCASE))<>((((t1.c2)IS(t1.c0)), CAST(t1.c2 AS TEXT), ((((((((v0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(v0.c0)))OR('0.8456150927715622'))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((t1.c2)) NOT BETWEEN ((t1.c64)) AND (('-1382025560'))) AS NUMERIC)) IS TRUE)  as count FROM t1 INNER JOIN rt0 ON ((((t1.c64)%(t1.c0)))>=((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) RIGHT OUTER JOIN v0 ON ((((((((((0.0638546249956301)+(t1.c64)))OR(CASE v0.c0  WHEN t1.c2 THEN x'' END)))OR(rt0.c1 COLLATE BINARY)))AND(((rt0.c1)-(rt0.c1)))))OR(((rt0.c1) NOT BETWEEN (v0.c0) AND (t1.c0)))) FULL OUTER JOIN vt0 ON ((((t1.c0)>(vt0.c0)))*(GLOB(t1.c64, t1.c0))) ORDER BY (((rt0.c2, HEX(DISTINCT t1.c2), x'' COLLATE NOCASE))!=((((t1.c2)IS(t1.c0)), CAST(t1.c2 AS TEXT), ((((((((v0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(v0.c0)))OR('0.8456150927715622'))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1, v0 INNER JOIN rt0 ON (NOT (((rt0.c1)-(rt0.c1)))) WHERE (rt0.c2) ORDER BY ((UNICODE(''''))>>(((v0.c0)-(rt0.c0))))  NULLS FIRST, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t1, v0 INNER JOIN rt0 ON (NOT (((rt0.c1)-(rt0.c1)))) ORDER BY ((UNICODE(''''))>>(((v0.c0)-(rt0.c0))))  NULLS FIRST, NULL  NULLS FIRST);
SELECT COUNT(*) FROM t1, v0 INNER JOIN rt0 ON (NOT (((rt0.c1)-(rt0.c1)))) WHERE (rt0.c2) ORDER BY ((UNICODE(''''))>>(((v0.c0)-(rt0.c0))))  NULLS FIRST, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t1, v0 INNER JOIN rt0 ON (NOT (((rt0.c1)-(rt0.c1)))) ORDER BY ((UNICODE(''''))>>(((v0.c0)-(rt0.c0))))  NULLS FIRST, NULL  NULLS FIRST);
SELECT COUNT(*) FROM t1, v0 INNER JOIN rt0 ON (NOT (((rt0.c1)-(rt0.c1)))) WHERE (rt0.c2) ORDER BY ((UNICODE(''''))>>(((v0.c0)-(rt0.c0))))  NULLS FIRST, NULL  NULLS FIRST;
SELECT * FROM v0, vt0, t1, rt0 WHERE (((NULL)|(((t1.c64) NOT BETWEEN (x'd1a9') AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((NULL)|(((t1.c64) NOT BETWEEN (x'd1a9') AND (rt0.c2))))) IS TRUE)  as count FROM v0, vt0, t1, rt0);
SELECT * FROM v0, vt0, t1, rt0 WHERE (((NULL)|(((t1.c64) NOT BETWEEN (x'd1a9') AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((NULL)|(((t1.c64) NOT BETWEEN (x'd1a9') AND (rt0.c2))))) IS TRUE)  as count FROM v0, vt0, t1, rt0);
SELECT * FROM v0, vt0, t1, rt0 WHERE (((NULL)|(((t1.c64) NOT BETWEEN (x'd1a9') AND (rt0.c2)))));
SELECT ALL * FROM t1 WHERE (((((((t1.c0)) NOT BETWEEN ((-37869557)) AND ((t1.c0))), (~ (t1.c2)), (((t1.c0)) BETWEEN ((t1.c64)) AND ((t1.c2)))))<>((((t1.c0) IS TRUE), (((t1.c0, t1.c0, t1.c0))>=((t1.c2, x'4ff50666', x'7649'))), (((t1.c0))>=((t1.c2))))))) ORDER BY ((CASE t1.c2  WHEN t1.c64 THEN t1.c2 ELSE t1.c2 END) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t1.c0)) NOT BETWEEN ((-37869557)) AND ((t1.c0))), (~ (t1.c2)), (((t1.c0)) BETWEEN ((t1.c64)) AND ((t1.c2)))))!=((((t1.c0) IS TRUE), (((t1.c0, t1.c0, t1.c0))>=((t1.c2, x'4ff50666', x'7649'))), (((t1.c0))>=((t1.c2))))))) IS TRUE)  as count FROM t1 ORDER BY ((CASE t1.c2  WHEN t1.c64 THEN t1.c2 ELSE t1.c2 END) ISNULL)  NULLS LAST);
SELECT ALL * FROM t1 WHERE (((((((t1.c0)) NOT BETWEEN ((-37869557)) AND ((t1.c0))), (~ (t1.c2)), (((t1.c0)) BETWEEN ((t1.c64)) AND ((t1.c2)))))<>((((t1.c0) IS TRUE), (((t1.c0, t1.c0, t1.c0))>=((t1.c2, x'4ff50666', x'7649'))), (((t1.c0))>=((t1.c2))))))) ORDER BY ((CASE t1.c2  WHEN t1.c64 THEN t1.c2 ELSE t1.c2 END) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t1.c0)) NOT BETWEEN ((-37869557)) AND ((t1.c0))), (~ (t1.c2)), (((t1.c0)) BETWEEN ((t1.c64)) AND ((t1.c2)))))!=((((t1.c0) IS TRUE), (((t1.c0, t1.c0, t1.c0))>=((t1.c2, x'4ff50666', x'7649'))), (((t1.c0))>=((t1.c2))))))) IS TRUE)  as count FROM t1 ORDER BY ((CASE t1.c2  WHEN t1.c64 THEN t1.c2 ELSE t1.c2 END) ISNULL)  NULLS LAST);
SELECT ALL * FROM t1 WHERE (((((((t1.c0)) NOT BETWEEN ((-37869557)) AND ((t1.c0))), (~ (t1.c2)), (((t1.c0)) BETWEEN ((t1.c64)) AND ((t1.c2)))))<>((((t1.c0) IS TRUE), (((t1.c0, t1.c0, t1.c0))>=((t1.c2, x'4ff50666', x'7649'))), (((t1.c0))>=((t1.c2))))))) ORDER BY ((CASE t1.c2  WHEN t1.c64 THEN t1.c2 ELSE t1.c2 END) ISNULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 INDEXED BY i13, rt0, v0, vt0 WHERE ((- ((- (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((- (rt0.c1))))) IS TRUE)  as count FROM t1 INDEXED BY i13, rt0, v0, vt0);
SELECT ALL COUNT(*) FROM t1 INDEXED BY i13, rt0, v0, vt0 WHERE ((- ((- (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((- (rt0.c1))))) IS TRUE)  as count FROM t1 INDEXED BY i13, rt0, v0, vt0);
SELECT COUNT(*) FROM vt0, rt0, v0, t1 WHERE (((rt0.c0)AND(v0.c0)) COLLATE NOCASE) ORDER BY (NULL IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)AND(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, v0, t1 ORDER BY (NULL IN ()) DESC);
SELECT COUNT(*) FROM vt0, rt0, v0, t1 WHERE (((rt0.c0)AND(v0.c0)) COLLATE NOCASE) ORDER BY (NULL IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)AND(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, v0, t1 ORDER BY (NULL IN ()) DESC);
SELECT COUNT(*) FROM vt0, rt0, v0, t1 WHERE (((rt0.c0)AND(v0.c0)) COLLATE NOCASE) ORDER BY (NULL IN ()) DESC;
SELECT * FROM t1, vt0, v0, rt0 WHERE (((CASE vt0.c0  WHEN t1.c0 THEN t1.c64 END)OR(LIKELY(DISTINCT rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN t1.c0 THEN t1.c64 END)OR(LIKELY(DISTINCT rt0.c2)))) IS TRUE)  as count FROM t1, vt0, v0, rt0);
SELECT * FROM t1, vt0, v0, rt0 WHERE (((CASE vt0.c0  WHEN t1.c0 THEN t1.c64 END)OR(LIKELY(DISTINCT rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN t1.c0 THEN t1.c64 END)OR(LIKELY(DISTINCT rt0.c2)))) IS TRUE)  as count FROM t1, vt0, v0, rt0);
SELECT * FROM t1, vt0, v0, rt0 WHERE (((CASE vt0.c0  WHEN t1.c0 THEN t1.c64 END)OR(LIKELY(DISTINCT rt0.c2))));
SELECT ALL * FROM vt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1, rt0);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1, rt0);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((LIKE(v0.c0, '	E', 'm')))<(('0.4185689309816316')))) ORDER BY (((vt0.c0)>=('f')) IN ());
SELECT SUM(count) FROM (SELECT (((((LIKE(v0.c0, '	E', 'm')))<(('0.4185689309816316')))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((vt0.c0)>=('f')) IN ()));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((LIKE(v0.c0, '	E', 'm')))<(('0.4185689309816316')))) ORDER BY (((vt0.c0)>=('f')) IN ());
SELECT SUM(count) FROM (SELECT (((((LIKE(v0.c0, '	E', 'm')))<(('0.4185689309816316')))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((vt0.c0)>=('f')) IN ()));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((LIKE(v0.c0, '	E', 'm')))<(('0.4185689309816316')))) ORDER BY (((vt0.c0)>=('f')) IN ());
SELECT ALL * FROM vt0, v0, rt0 WHERE (json_extract(((vt0.c0)>>(vt0.c0)), (rt0.c1 IN (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((json_extract(((vt0.c0)>>(vt0.c0)), (rt0.c1 IN (rt0.c0)))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (json_extract(((vt0.c0)>>(vt0.c0)), (rt0.c1 IN (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((json_extract(((vt0.c0)>>(vt0.c0)), (rt0.c1 IN (rt0.c0)))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM v0, vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN v0.c0 END AS NUMERIC)) ORDER BY (~ ((NOT (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c0 THEN v0.c0 END AS NUMERIC)) IS TRUE)  as count FROM v0, vt0 ORDER BY (~ ((NOT (vt0.c0)))) DESC);
SELECT ALL * FROM v0, vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN v0.c0 END AS NUMERIC)) ORDER BY (~ ((NOT (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c0 THEN v0.c0 END AS NUMERIC)) IS TRUE)  as count FROM v0, vt0 ORDER BY (~ ((NOT (vt0.c0)))) DESC);
SELECT ALL * FROM v0, vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN v0.c0 END AS NUMERIC)) ORDER BY (~ ((NOT (vt0.c0)))) DESC;
SELECT * FROM vt0 FULL OUTER JOIN v0 ON CASE WHEN LOWER(vt0.c0) THEN 0.04141173892596817 WHEN vt0.c0 COLLATE NOCASE THEN 0.6541201570711298 WHEN ((v0.c0) NOTNULL) THEN ((v0.c0) NOT BETWEEN (x'') AND (vt0.c0)) ELSE v0.c0 COLLATE RTRIM END WHERE (((- (vt0.c0)) IN (json(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((- (vt0.c0)) IN (json(vt0.c0)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CASE WHEN LOWER(vt0.c0) THEN 0.04141173892596817 WHEN vt0.c0 COLLATE NOCASE THEN 0.6541201570711298 WHEN ((v0.c0) NOTNULL) THEN ((v0.c0) NOT BETWEEN (x'') AND (vt0.c0)) ELSE v0.c0 COLLATE RTRIM END);
SELECT * FROM vt0 FULL OUTER JOIN v0 ON CASE WHEN LOWER(vt0.c0) THEN 0.04141173892596817 WHEN vt0.c0 COLLATE NOCASE THEN 0.6541201570711298 WHEN ((v0.c0) NOTNULL) THEN ((v0.c0) NOT BETWEEN (x'') AND (vt0.c0)) ELSE v0.c0 COLLATE RTRIM END WHERE (((- (vt0.c0)) IN (json(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((- (vt0.c0)) IN (json(vt0.c0)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CASE WHEN LOWER(vt0.c0) THEN 0.04141173892596817 WHEN vt0.c0 COLLATE NOCASE THEN 0.6541201570711298 WHEN ((v0.c0) NOTNULL) THEN ((v0.c0) NOT BETWEEN (x'') AND (vt0.c0)) ELSE v0.c0 COLLATE RTRIM END);
SELECT * FROM vt0 FULL OUTER JOIN v0 ON CASE WHEN LOWER(vt0.c0) THEN 0.04141173892596817 WHEN vt0.c0 COLLATE NOCASE THEN 0.6541201570711298 WHEN ((v0.c0) NOTNULL) THEN ((v0.c0) NOT BETWEEN (x'') AND (vt0.c0)) ELSE v0.c0 COLLATE RTRIM END WHERE (((- (vt0.c0)) IN (json(vt0.c0))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) NOT BETWEEN (CASE WHEN vt0.c0 THEN rt0.c2 END) AND (x'')) WHERE ((+ (((rt0.c1)AND(rt0.c2))))) ORDER BY x'' COLLATE NOCASE, STRFTIME(LAST_INSERT_ROWID(), ((rt0.c1)*(rt0.c2)), (- (rt0.c1)))  NULLS FIRST, ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE NOCASE COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c1)AND(rt0.c2))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) NOT BETWEEN (CASE WHEN vt0.c0 THEN rt0.c2 END) AND (x'')) ORDER BY x'' COLLATE NOCASE, STRFTIME(LAST_INSERT_ROWID(), ((rt0.c1)*(rt0.c2)), (- (rt0.c1)))  NULLS FIRST, ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE NOCASE COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) NOT BETWEEN (CASE WHEN vt0.c0 THEN rt0.c2 END) AND (x'')) WHERE ((+ (((rt0.c1)AND(rt0.c2))))) ORDER BY x'' COLLATE NOCASE, STRFTIME(LAST_INSERT_ROWID(), ((rt0.c1)*(rt0.c2)), (- (rt0.c1)))  NULLS FIRST, ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE NOCASE COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c1)AND(rt0.c2))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) NOT BETWEEN (CASE WHEN vt0.c0 THEN rt0.c2 END) AND (x'')) ORDER BY x'' COLLATE NOCASE, STRFTIME(LAST_INSERT_ROWID(), ((rt0.c1)*(rt0.c2)), (- (rt0.c1)))  NULLS FIRST, ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE NOCASE COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) NOT BETWEEN (CASE WHEN vt0.c0 THEN rt0.c2 END) AND (x'')) WHERE ((+ (((rt0.c1)AND(rt0.c2))))) ORDER BY x'' COLLATE NOCASE, STRFTIME(LAST_INSERT_ROWID(), ((rt0.c1)*(rt0.c2)), (- (rt0.c1)))  NULLS FIRST, ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE NOCASE COLLATE RTRIM;
SELECT COUNT(*) FROM t1, rt0 WHERE (((((t1.c2, x'', 'DM'))=((t1.c0, t1.c2, t1.c2))) IN (rt0.c1 COLLATE RTRIM))) ORDER BY ((((t1.c0) NOT NULL)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((t1.c2, x'', 'DM'))=((t1.c0, t1.c2, t1.c2))) IN (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t1, rt0 ORDER BY ((((t1.c0) NOT NULL)) NOTNULL) ASC);
SELECT COUNT(*) FROM t1, rt0 WHERE (((((t1.c2, x'', 'DM'))=((t1.c0, t1.c2, t1.c2))) IN (rt0.c1 COLLATE RTRIM))) ORDER BY ((((t1.c0) NOT NULL)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((t1.c2, x'', 'DM'))=((t1.c0, t1.c2, t1.c2))) IN (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t1, rt0 ORDER BY ((((t1.c0) NOT NULL)) NOTNULL) ASC);
SELECT COUNT(*) FROM t1, rt0 WHERE (((((t1.c2, x'', 'DM'))=((t1.c0, t1.c2, t1.c2))) IN (rt0.c1 COLLATE RTRIM))) ORDER BY ((((t1.c0) NOT NULL)) NOTNULL) ASC;
SELECT COUNT(*) FROM rt0, v0 RIGHT OUTER JOIN vt0 ON ((CASE rt0.c0  WHEN rt0.c0 THEN t1.c2 WHEN '3s' THEN 0.8957284466905016 WHEN 0.27008200467837906 THEN t1.c2 ELSE vt0.c0 END) BETWEEN (((v0.c0)AND(''))) AND (((v0.c0)OR(t1.c2)))) LEFT OUTER JOIN t1 ON CAST(((rt0.c1)<=(t1.c0)) AS TEXT) WHERE ((((v0.c0 COLLATE BINARY))!=((rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 COLLATE BINARY))!=((rt0.c2)))) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN vt0 ON ((CASE rt0.c0  WHEN rt0.c0 THEN t1.c2 WHEN '3s' THEN 0.8957284466905016 WHEN 0.27008200467837906 THEN t1.c2 ELSE vt0.c0 END) BETWEEN (((v0.c0)AND(''))) AND (((v0.c0)OR(t1.c2)))) LEFT OUTER JOIN t1 ON CAST(((rt0.c1)<=(t1.c0)) AS TEXT));
SELECT COUNT(*) FROM rt0, v0 RIGHT OUTER JOIN vt0 ON ((CASE rt0.c0  WHEN rt0.c0 THEN t1.c2 WHEN '3s' THEN 0.8957284466905016 WHEN 0.27008200467837906 THEN t1.c2 ELSE vt0.c0 END) BETWEEN (((v0.c0)AND(''))) AND (((v0.c0)OR(t1.c2)))) LEFT OUTER JOIN t1 ON CAST(((rt0.c1)<=(t1.c0)) AS TEXT) WHERE ((((v0.c0 COLLATE BINARY))!=((rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 COLLATE BINARY))!=((rt0.c2)))) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN vt0 ON ((CASE rt0.c0  WHEN rt0.c0 THEN t1.c2 WHEN '3s' THEN 0.8957284466905016 WHEN 0.27008200467837906 THEN t1.c2 ELSE vt0.c0 END) BETWEEN (((v0.c0)AND(''))) AND (((v0.c0)OR(t1.c2)))) LEFT OUTER JOIN t1 ON CAST(((rt0.c1)<=(t1.c0)) AS TEXT));
SELECT ALL * FROM vt0, rt0, t1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0, t1);
SELECT ALL * FROM vt0, rt0, t1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0, t1);
SELECT ALL * FROM vt0, rt0, t1 WHERE (x'');
SELECT ALL COUNT(*) FROM v0, vt0 LEFT OUTER JOIN t1 ON ((((((v0.c0)==(0.6363796696995828)))AND((- (vt0.c0)))))OR((t1.c2 IN ()))) WHERE ((((((((((+ (vt0.c0)))AND(t1.c64 COLLATE BINARY)))AND(t1.c2 COLLATE NOCASE)))OR(t1.c2)))OR(((t1.c0) BETWEEN (t1.c64) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((+ (vt0.c0)))AND(t1.c64 COLLATE BINARY)))AND(t1.c2 COLLATE NOCASE)))OR(t1.c2)))OR(((t1.c0) BETWEEN (t1.c64) AND (t1.c0))))) IS TRUE)  as count FROM v0, vt0 NOT INDEXED LEFT OUTER JOIN t1 ON ((((((v0.c0)=(0.6363796696995828)))AND((- (vt0.c0)))))OR((t1.c2 IN ()))));
SELECT ALL COUNT(*) FROM v0, vt0 LEFT OUTER JOIN t1 ON ((((((v0.c0)==(0.6363796696995828)))AND((- (vt0.c0)))))OR((t1.c2 IN ()))) WHERE ((((((((((+ (vt0.c0)))AND(t1.c64 COLLATE BINARY)))AND(t1.c2 COLLATE NOCASE)))OR(t1.c2)))OR(((t1.c0) BETWEEN (t1.c64) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((+ (vt0.c0)))AND(t1.c64 COLLATE BINARY)))AND(t1.c2 COLLATE NOCASE)))OR(t1.c2)))OR(((t1.c0) BETWEEN (t1.c64) AND (t1.c0))))) IS TRUE)  as count FROM v0, vt0 NOT INDEXED LEFT OUTER JOIN t1 ON ((((((v0.c0)=(0.6363796696995828)))AND((- (vt0.c0)))))OR((t1.c2 IN ()))));
SELECT ALL COUNT(*) FROM v0, vt0 LEFT OUTER JOIN t1 ON ((((((v0.c0)==(0.6363796696995828)))AND((- (vt0.c0)))))OR((t1.c2 IN ()))) WHERE ((((((((((+ (vt0.c0)))AND(t1.c64 COLLATE BINARY)))AND(t1.c2 COLLATE NOCASE)))OR(t1.c2)))OR(((t1.c0) BETWEEN (t1.c64) AND (t1.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0, v0, t1 INDEXED BY i13 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (t1.c2)))<(((t1.c2)>(t1.c64))))) ORDER BY t1.c64 DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (t1.c2)))<(((t1.c2)>(t1.c64))))) IS TRUE)  as count FROM vt0, rt0, v0, t1 INDEXED BY i13 ORDER BY t1.c64 DESC);
SELECT ALL COUNT(*) FROM vt0, rt0, v0, t1 INDEXED BY i13 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (t1.c2)))<(((t1.c2)>(t1.c64))))) ORDER BY t1.c64 DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (t1.c2)))<(((t1.c2)>(t1.c64))))) IS TRUE)  as count FROM vt0, rt0, v0, t1 INDEXED BY i13 ORDER BY t1.c64 DESC);
SELECT ALL COUNT(*) FROM v0, rt0, t1 WHERE (((((CASE t1.c64  WHEN rt0.c0 THEN v0.c0 ELSE t1.c64 END)AND(t1.c64 COLLATE NOCASE)))AND((- (t1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((CASE t1.c64  WHEN rt0.c0 THEN v0.c0 ELSE t1.c64 END)AND(t1.c64 COLLATE NOCASE)))AND((- (t1.c2))))) IS TRUE)  as count FROM v0, rt0, t1);
SELECT ALL COUNT(*) FROM v0, rt0, t1 WHERE (((((CASE t1.c64  WHEN rt0.c0 THEN v0.c0 ELSE t1.c64 END)AND(t1.c64 COLLATE NOCASE)))AND((- (t1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((CASE t1.c64  WHEN rt0.c0 THEN v0.c0 ELSE t1.c64 END)AND(t1.c64 COLLATE NOCASE)))AND((- (t1.c2))))) IS TRUE)  as count FROM v0, rt0, t1);
SELECT ALL COUNT(*) FROM v0, rt0, t1 WHERE (((((CASE t1.c64  WHEN rt0.c0 THEN v0.c0 ELSE t1.c64 END)AND(t1.c64 COLLATE NOCASE)))AND((- (t1.c2)))));
SELECT ALL * FROM v0, t1 WHERE (((CAST(0.30975113456933845 AS BLOB)) BETWEEN (v0.c0) AND ((t1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.30975113456933845 AS BLOB)) BETWEEN (v0.c0) AND ((t1.c2 IN ())))) IS TRUE)  as count FROM v0, t1);
SELECT ALL * FROM v0, t1 WHERE (((CAST(0.30975113456933845 AS BLOB)) BETWEEN (v0.c0) AND ((t1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.30975113456933845 AS BLOB)) BETWEEN (v0.c0) AND ((t1.c2 IN ())))) IS TRUE)  as count FROM v0, t1);
SELECT ALL * FROM v0, t1 WHERE (((CAST(0.30975113456933845 AS BLOB)) BETWEEN (v0.c0) AND ((t1.c2 IN ()))));
SELECT ALL * FROM v0, t1, rt0 WHERE ((((((v0.c0, t1.c64, v0.c0)) BETWEEN ((rt0.c1, t1.c0, t1.c64)) AND ((rt0.c1, t1.c0, v0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0, t1.c64, v0.c0)) BETWEEN ((rt0.c1, t1.c0, t1.c64)) AND ((rt0.c1, t1.c0, v0.c0)))) ISNULL)) IS TRUE)  as count FROM v0, t1, rt0);
SELECT ALL * FROM v0, t1, rt0 WHERE ((((((v0.c0, t1.c64, v0.c0)) BETWEEN ((rt0.c1, t1.c0, t1.c64)) AND ((rt0.c1, t1.c0, v0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0, t1.c64, v0.c0)) BETWEEN ((rt0.c1, t1.c0, t1.c64)) AND ((rt0.c1, t1.c0, v0.c0)))) ISNULL)) IS TRUE)  as count FROM v0, t1, rt0);
SELECT ALL * FROM v0, t1, rt0 WHERE ((((((v0.c0, t1.c64, v0.c0)) BETWEEN ((rt0.c1, t1.c0, t1.c64)) AND ((rt0.c1, t1.c0, v0.c0)))) ISNULL));
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c2) ISNULL) IN (rt0.c2 COLLATE NOCASE))) ORDER BY 0.3194838699910748 DESC  NULLS FIRST, (((rt0.c2, (~ (rt0.c1)), ((rt0.c1) BETWEEN (rt0.c2) AND (v0.c0))))>(((((0.10208438069981107))<((rt0.c1))), x'', ((rt0.c1)>(rt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) ISNULL) IN (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0 ORDER BY 0.3194838699910748 DESC  NULLS FIRST, (((rt0.c2, (~ (rt0.c1)), ((rt0.c1) BETWEEN (rt0.c2) AND (v0.c0))))>(((((0.10208438069981107))<((rt0.c1))), x'', ((rt0.c1)>(rt0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c2) ISNULL) IN (rt0.c2 COLLATE NOCASE))) ORDER BY 0.3194838699910748 DESC  NULLS FIRST, (((rt0.c2, (~ (rt0.c1)), ((rt0.c1) BETWEEN (rt0.c2) AND (v0.c0))))>(((((0.10208438069981107))<((rt0.c1))), x'', ((rt0.c1)>(rt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) ISNULL) IN (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0 ORDER BY 0.3194838699910748 DESC  NULLS FIRST, (((rt0.c2, (~ (rt0.c1)), ((rt0.c1) BETWEEN (rt0.c2) AND (v0.c0))))>(((((0.10208438069981107))<((rt0.c1))), x'', ((rt0.c1)>(rt0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c2) ISNULL) IN (rt0.c2 COLLATE NOCASE))) ORDER BY 0.3194838699910748 DESC  NULLS FIRST, (((rt0.c2, (~ (rt0.c1)), ((rt0.c1) BETWEEN (rt0.c2) AND (v0.c0))))>(((((0.10208438069981107))<((rt0.c1))), x'', ((rt0.c1)>(rt0.c0))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t1, rt0, v0, vt0 WHERE (CASE IFNULL(rt0.c1, v0.c0)  WHEN NULL THEN ((rt0.c2) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE IFNULL(rt0.c1, v0.c0)  WHEN NULL THEN ((rt0.c2) ISNULL) END) IS TRUE)  as count FROM t1, rt0, v0, vt0);
SELECT COUNT(*) FROM t1, rt0, v0, vt0 WHERE (CASE IFNULL(rt0.c1, v0.c0)  WHEN NULL THEN ((rt0.c2) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE IFNULL(rt0.c1, v0.c0)  WHEN NULL THEN ((rt0.c2) ISNULL) END) IS TRUE)  as count FROM t1, rt0, v0, vt0);
SELECT COUNT(*) FROM t1, rt0, v0, vt0 WHERE (CASE IFNULL(rt0.c1, v0.c0)  WHEN NULL THEN ((rt0.c2) ISNULL) END);
SELECT ALL * FROM vt0, v0, t1 LEFT OUTER JOIN rt0 ON (((+ (v0.c0)))||(t1.c2 COLLATE BINARY)) WHERE (CASE WHEN (vt0.c0 IN (t1.c2)) THEN rt0.c1 COLLATE RTRIM END) ORDER BY INSTR(NULL, rt0.c2 COLLATE RTRIM) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c0 IN (t1.c2)) THEN rt0.c1 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, v0, t1 LEFT OUTER JOIN rt0 ON (((+ (v0.c0)))||(t1.c2 COLLATE BINARY)) ORDER BY INSTR(NULL, rt0.c2 COLLATE RTRIM) ASC);
SELECT ALL * FROM vt0, v0, t1 LEFT OUTER JOIN rt0 ON (((+ (v0.c0)))||(t1.c2 COLLATE BINARY)) WHERE (CASE WHEN (vt0.c0 IN (t1.c2)) THEN rt0.c1 COLLATE RTRIM END) ORDER BY INSTR(NULL, rt0.c2 COLLATE RTRIM) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c0 IN (t1.c2)) THEN rt0.c1 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, v0, t1 LEFT OUTER JOIN rt0 ON (((+ (v0.c0)))||(t1.c2 COLLATE BINARY)) ORDER BY INSTR(NULL, rt0.c2 COLLATE RTRIM) ASC);
SELECT ALL * FROM vt0, v0, t1 LEFT OUTER JOIN rt0 ON (((+ (v0.c0)))||(t1.c2 COLLATE BINARY)) WHERE (CASE WHEN (vt0.c0 IN (t1.c2)) THEN rt0.c1 COLLATE RTRIM END) ORDER BY INSTR(NULL, rt0.c2 COLLATE RTRIM) ASC;
SELECT ALL * FROM v0, t1, rt0 NOT INDEXED WHERE ((+ (t1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (t1.c0))) IS TRUE)  as count FROM v0, t1, rt0);
SELECT ALL * FROM v0, t1, rt0 NOT INDEXED WHERE ((+ (t1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (t1.c0))) IS TRUE)  as count FROM v0, t1, rt0);
SELECT ALL * FROM v0, t1, rt0 NOT INDEXED WHERE ((+ (t1.c0)));
SELECT ALL COUNT(*) FROM t1, vt0, rt0, v0 WHERE (((v0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM t1, vt0, rt0, v0);
SELECT ALL COUNT(*) FROM t1, vt0, rt0, v0 WHERE (((v0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM t1, vt0, rt0, v0);
SELECT ALL COUNT(*) FROM t1, vt0, rt0, v0 WHERE (((v0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE BINARY COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t1, v0 WHERE (((((((t1.c64)AND(v0.c0)))OR(t1.c2))) NOT BETWEEN (-1424894893) AND (((v0.c0) NOT BETWEEN (t1.c64) AND (t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c64)AND(v0.c0)))OR(t1.c2))) NOT BETWEEN (-1424894893) AND (((v0.c0) NOT BETWEEN (t1.c64) AND (t1.c2))))) IS TRUE)  as count FROM t1, v0);
SELECT ALL COUNT(*) FROM t1, v0 WHERE (((((((t1.c64)AND(v0.c0)))OR(t1.c2))) NOT BETWEEN (-1424894893) AND (((v0.c0) NOT BETWEEN (t1.c64) AND (t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c64)AND(v0.c0)))OR(t1.c2))) NOT BETWEEN (-1424894893) AND (((v0.c0) NOT BETWEEN (t1.c64) AND (t1.c2))))) IS TRUE)  as count FROM t1, v0);
SELECT ALL COUNT(*) FROM t1, v0 WHERE (((((((t1.c64)AND(v0.c0)))OR(t1.c2))) NOT BETWEEN (-1424894893) AND (((v0.c0) NOT BETWEEN (t1.c64) AND (t1.c2)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((vt0.c0)>>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((vt0.c0)>>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((vt0.c0)>>(vt0.c0)))));
SELECT * FROM vt0, rt0, t1 WHERE (TRIM((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((TRIM((rt0.c2 IN ()))) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT * FROM vt0, rt0, t1 WHERE (TRIM((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((TRIM((rt0.c2 IN ()))) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT * FROM vt0, rt0, t1 WHERE (TRIM((rt0.c2 IN ())));
SELECT COUNT(*) FROM vt0, v0, rt0, t1 WHERE (((((t1.c0) BETWEEN (rt0.c2) AND (rt0.c1))) IS FALSE)) ORDER BY ((DATE(rt0.c2, rt0.c2, rt0.c1))<(((((((((((((t1.c64)AND(t1.c2)))OR(rt0.c0)))OR(t1.c2)))AND(rt0.c0)))AND(v0.c0)))AND(-1.122843722E9))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) BETWEEN (rt0.c2) AND (rt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt0, v0, rt0, t1 ORDER BY ((DATE(rt0.c2, rt0.c2, rt0.c1))<(((((((((((((t1.c64)AND(t1.c2)))OR(rt0.c0)))OR(t1.c2)))AND(rt0.c0)))AND(v0.c0)))AND(-1.122843722E9)))));
SELECT COUNT(*) FROM vt0, v0, rt0, t1 WHERE (((((t1.c0) BETWEEN (rt0.c2) AND (rt0.c1))) IS FALSE)) ORDER BY ((DATE(rt0.c2, rt0.c2, rt0.c1))<(((((((((((((t1.c64)AND(t1.c2)))OR(rt0.c0)))OR(t1.c2)))AND(rt0.c0)))AND(v0.c0)))AND(-1.122843722E9))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) BETWEEN (rt0.c2) AND (rt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt0, v0, rt0, t1 ORDER BY ((DATE(rt0.c2, rt0.c2, rt0.c1))<(((((((((((((t1.c64)AND(t1.c2)))OR(rt0.c0)))OR(t1.c2)))AND(rt0.c0)))AND(v0.c0)))AND(-1.122843722E9)))));
SELECT COUNT(*) FROM vt0, v0, rt0, t1 WHERE (((((t1.c0) BETWEEN (rt0.c2) AND (rt0.c1))) IS FALSE)) ORDER BY ((DATE(rt0.c2, rt0.c2, rt0.c1))<(((((((((((((t1.c64)AND(t1.c2)))OR(rt0.c0)))OR(t1.c2)))AND(rt0.c0)))AND(v0.c0)))AND(-1.122843722E9))));
SELECT ALL COUNT(*) FROM t1, vt0, v0, rt0 WHERE (CAST(CAST(t1.c64 AS INTEGER) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t1.c64 AS INTEGER) AS NUMERIC)) IS TRUE)  as count FROM t1, vt0, v0, rt0);
SELECT ALL COUNT(*) FROM t1, vt0, v0, rt0 WHERE (CAST(CAST(t1.c64 AS INTEGER) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t1.c64 AS INTEGER) AS NUMERIC)) IS TRUE)  as count FROM t1, vt0, v0, rt0);
SELECT ALL COUNT(*) FROM t1, vt0, v0, rt0 WHERE (CAST(CAST(t1.c64 AS INTEGER) AS NUMERIC));
SELECT ALL COUNT(*) FROM v0, t1, vt0 WHERE (CAST(((v0.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)) AS NUMERIC)) ORDER BY v0.c0  NULLS LAST, (~ (v0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0, t1, vt0 ORDER BY v0.c0  NULLS LAST, (~ (v0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t1, vt0 WHERE (CAST(((v0.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)) AS NUMERIC)) ORDER BY v0.c0  NULLS LAST, (~ (v0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0, t1, vt0 ORDER BY v0.c0  NULLS LAST, (~ (v0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t1, vt0 WHERE (CAST(((v0.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)) AS NUMERIC)) ORDER BY v0.c0  NULLS LAST, (~ (v0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT COUNT(*) FROM t1, vt0, rt0, v0 WHERE (t1.c0) ORDER BY ((((((-775393557)AND(vt0.c0)))OR(rt0.c0)))<(CASE t1.c64  WHEN v0.c0 THEN t1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1, vt0, rt0, v0 ORDER BY ((((((-775393557)AND(vt0.c0)))OR(rt0.c0)))<(CASE t1.c64  WHEN v0.c0 THEN t1.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM t1, vt0, rt0, v0 WHERE (t1.c0) ORDER BY ((((((-775393557)AND(vt0.c0)))OR(rt0.c0)))<(CASE t1.c64  WHEN v0.c0 THEN t1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1, vt0, rt0, v0 ORDER BY ((((((-775393557)AND(vt0.c0)))OR(rt0.c0)))<(CASE t1.c64  WHEN v0.c0 THEN t1.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM t1, vt0, rt0, v0 WHERE (t1.c0) ORDER BY ((((((-775393557)AND(vt0.c0)))OR(rt0.c0)))<(CASE t1.c64  WHEN v0.c0 THEN t1.c0 END))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)|(v0.c0))) ISNULL)) ORDER BY (((((v0.c0)OR(v0.c0)))AND(v0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)|(v0.c0))) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)OR(v0.c0)))AND(v0.c0)) IN ()) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)|(v0.c0))) ISNULL)) ORDER BY (((((v0.c0)OR(v0.c0)))AND(v0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)|(v0.c0))) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)OR(v0.c0)))AND(v0.c0)) IN ()) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)|(v0.c0))) ISNULL)) ORDER BY (((((v0.c0)OR(v0.c0)))AND(v0.c0)) IN ()) ASC;
SELECT * FROM rt0, vt0 WHERE (1350852463);
SELECT SUM(count) FROM (SELECT ((1350852463) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (1350852463);
SELECT SUM(count) FROM (SELECT ((1350852463) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (1350852463);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST((- (vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST((- (vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST((- (vt0.c0)) AS NUMERIC));
SELECT ALL * FROM rt0, t1, vt0, v0 WHERE (CASE WHEN t1.c64 THEN t1.c64 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE t1.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t1.c64 THEN t1.c64 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE t1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM rt0, t1, vt0, v0);
SELECT ALL * FROM rt0, t1, vt0, v0 WHERE (CASE WHEN t1.c64 THEN t1.c64 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE t1.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t1.c64 THEN t1.c64 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE t1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM rt0, t1, vt0, v0);
SELECT ALL * FROM rt0, t1, vt0, v0 WHERE (CASE WHEN t1.c64 THEN t1.c64 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE t1.c0 END COLLATE RTRIM);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CASE WHEN (~ (v0.c0)) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END ELSE ((rt0.c0)/(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (v0.c0)) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END ELSE ((rt0.c0)/(rt0.c0)) END) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CASE WHEN (~ (v0.c0)) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END ELSE ((rt0.c0)/(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (v0.c0)) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END ELSE ((rt0.c0)/(rt0.c0)) END) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CASE WHEN (~ (v0.c0)) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END ELSE ((rt0.c0)/(rt0.c0)) END);
SELECT * FROM v0 WHERE (CASE WHEN ((v0.c0)>=(v0.c0)) THEN (- (v0.c0)) WHEN ((v0.c0) ISNULL) THEN highlight(v0.c0, v0.c0, x'a335', v0.c0) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN CASE WHEN v0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN LIKELIHOOD(v0.c0, 0.2588356967110027) WHEN v0.c0 COLLATE NOCASE THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) ELSE ((((v0.c0)AND(v0.c0)))AND(-1.740489677E9)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0)>=(v0.c0)) THEN (- (v0.c0)) WHEN ((v0.c0) ISNULL) THEN highlight(v0.c0, v0.c0, x'a335', v0.c0) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN CASE WHEN v0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN LIKELIHOOD(v0.c0, 0.2588356967110027) WHEN v0.c0 COLLATE NOCASE THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) ELSE ((((v0.c0)AND(v0.c0)))AND(-1.740489677E9)) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE WHEN ((v0.c0)>=(v0.c0)) THEN (- (v0.c0)) WHEN ((v0.c0) ISNULL) THEN highlight(v0.c0, v0.c0, x'a335', v0.c0) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN CASE WHEN v0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN LIKELIHOOD(v0.c0, 0.2588356967110027) WHEN v0.c0 COLLATE NOCASE THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) ELSE ((((v0.c0)AND(v0.c0)))AND(-1.740489677E9)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0)>=(v0.c0)) THEN (- (v0.c0)) WHEN ((v0.c0) ISNULL) THEN highlight(v0.c0, v0.c0, x'a335', v0.c0) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN CASE WHEN v0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN LIKELIHOOD(v0.c0, 0.2588356967110027) WHEN v0.c0 COLLATE NOCASE THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) ELSE ((((v0.c0)AND(v0.c0)))AND(-1.740489677E9)) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE WHEN ((v0.c0)>=(v0.c0)) THEN (- (v0.c0)) WHEN ((v0.c0) ISNULL) THEN highlight(v0.c0, v0.c0, x'a335', v0.c0) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN CASE WHEN v0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN LIKELIHOOD(v0.c0, 0.2588356967110027) WHEN v0.c0 COLLATE NOCASE THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) ELSE ((((v0.c0)AND(v0.c0)))AND(-1.740489677E9)) END);
SELECT ALL COUNT(*) FROM vt0, rt0, v0, t1 WHERE ('now');
SELECT SUM(count) FROM (SELECT (('now') IS TRUE)  as count FROM vt0, rt0, v0, t1);
SELECT ALL COUNT(*) FROM vt0, rt0, v0, t1 WHERE ('now');
SELECT SUM(count) FROM (SELECT (('now') IS TRUE)  as count FROM vt0, rt0, v0, t1);
SELECT ALL COUNT(*) FROM vt0, rt0, v0, t1 WHERE ('now');
SELECT * FROM t1, v0, vt0, rt0 WHERE ((((t1.c64, ((rt0.c0)/(rt0.c2)), (NOT (rt0.c1))))>=(((~ (rt0.c0)), ((t1.c0)==(rt0.c2)), ((t1.c2)<=(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c64, ((rt0.c0)/(rt0.c2)), (NOT (rt0.c1))))>=(((~ (rt0.c0)), ((t1.c0)==(rt0.c2)), ((t1.c2)<=(rt0.c2)))))) IS TRUE)  as count FROM t1, v0, vt0, rt0);
SELECT * FROM t1, v0, vt0, rt0 WHERE ((((t1.c64, ((rt0.c0)/(rt0.c2)), (NOT (rt0.c1))))>=(((~ (rt0.c0)), ((t1.c0)==(rt0.c2)), ((t1.c2)<=(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c64, ((rt0.c0)/(rt0.c2)), (NOT (rt0.c1))))>=(((~ (rt0.c0)), ((t1.c0)==(rt0.c2)), ((t1.c2)<=(rt0.c2)))))) IS TRUE)  as count FROM t1, v0, vt0, rt0);
SELECT * FROM t1, v0, vt0, rt0 WHERE ((((t1.c64, ((rt0.c0)/(rt0.c2)), (NOT (rt0.c1))))>=(((~ (rt0.c0)), ((t1.c0)==(rt0.c2)), ((t1.c2)<=(rt0.c2))))));
SELECT COUNT(*) FROM t1 WHERE ((+ (((t1.c0) BETWEEN (t1.c2) AND (t1.c0))))) ORDER BY (NOT ((t1.c64 IN ()))), (((t1.c64, t1.c64, t1.c0)) NOT BETWEEN ((NULL, LENGTH(NULL), t1.c2)) AND ((((t1.c64) NOT NULL), (((t1.c2))>((t1.c0))), CAST(t1.c64 AS NUMERIC)))), ((CAST(t1.c2 AS REAL)) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((t1.c0) BETWEEN (t1.c2) AND (t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY (NOT ((t1.c64 IN ()))), (((t1.c64, t1.c64, t1.c0)) NOT BETWEEN ((NULL, LENGTH(NULL), t1.c2)) AND ((((t1.c64) NOT NULL), (((t1.c2))>((t1.c0))), CAST(t1.c64 AS NUMERIC)))), ((CAST(t1.c2 AS REAL)) NOT NULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((+ (((t1.c0) BETWEEN (t1.c2) AND (t1.c0))))) ORDER BY (NOT ((t1.c64 IN ()))), (((t1.c64, t1.c64, t1.c0)) NOT BETWEEN ((NULL, LENGTH(NULL), t1.c2)) AND ((((t1.c64) NOT NULL), (((t1.c2))>((t1.c0))), CAST(t1.c64 AS NUMERIC)))), ((CAST(t1.c2 AS REAL)) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((t1.c0) BETWEEN (t1.c2) AND (t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY (NOT ((t1.c64 IN ()))), (((t1.c64, t1.c64, t1.c0)) NOT BETWEEN ((NULL, LENGTH(NULL), t1.c2)) AND ((((t1.c64) NOT NULL), (((t1.c2))>((t1.c0))), CAST(t1.c64 AS NUMERIC)))), ((CAST(t1.c2 AS REAL)) NOT NULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((+ (((t1.c0) BETWEEN (t1.c2) AND (t1.c0))))) ORDER BY (NOT ((t1.c64 IN ()))), (((t1.c64, t1.c64, t1.c0)) NOT BETWEEN ((NULL, LENGTH(NULL), t1.c2)) AND ((((t1.c64) NOT NULL), (((t1.c2))>((t1.c0))), CAST(t1.c64 AS NUMERIC)))), ((CAST(t1.c2 AS REAL)) NOT NULL) DESC  NULLS FIRST;
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (~ ((- (rt0.c1)))) WHERE ((((((vt0.c0))<=((vt0.c0)))) NOT BETWEEN ((+ (rt0.c1))) AND (((0.9584748454331917) BETWEEN (rt0.c0) AND (vt0.c0))))) ORDER BY (((~ (rt0.c1))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<=((vt0.c0)))) NOT BETWEEN ((+ (rt0.c1))) AND (((0.9584748454331917) BETWEEN (rt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (~ ((- (rt0.c1)))) ORDER BY (((~ (rt0.c1))) NOT NULL) DESC);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (~ ((- (rt0.c1)))) WHERE ((((((vt0.c0))<=((vt0.c0)))) NOT BETWEEN ((+ (rt0.c1))) AND (((0.9584748454331917) BETWEEN (rt0.c0) AND (vt0.c0))))) ORDER BY (((~ (rt0.c1))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<=((vt0.c0)))) NOT BETWEEN ((+ (rt0.c1))) AND (((0.9584748454331917) BETWEEN (rt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (~ ((- (rt0.c1)))) ORDER BY (((~ (rt0.c1))) NOT NULL) DESC);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (~ ((- (rt0.c1)))) WHERE ((((((vt0.c0))<=((vt0.c0)))) NOT BETWEEN ((+ (rt0.c1))) AND (((0.9584748454331917) BETWEEN (rt0.c0) AND (vt0.c0))))) ORDER BY (((~ (rt0.c1))) NOT NULL) DESC;
SELECT * FROM t1 WHERE ((('-1424894893') IS TRUE)) ORDER BY (((((t1.c0 IN (t1.c0)))AND(t1.c0)))AND(((t1.c64)<(1432970727))));
SELECT SUM(count) FROM (SELECT ALL (((('-1424894893') IS TRUE)) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c0 IN (t1.c0)))AND(t1.c0)))AND(((t1.c64)<(1432970727)))));
SELECT * FROM t1 WHERE ((('-1424894893') IS TRUE)) ORDER BY (((((t1.c0 IN (t1.c0)))AND(t1.c0)))AND(((t1.c64)<(1432970727))));
SELECT SUM(count) FROM (SELECT ALL (((('-1424894893') IS TRUE)) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c0 IN (t1.c0)))AND(t1.c0)))AND(((t1.c64)<(1432970727)))));
SELECT * FROM t1 WHERE ((('-1424894893') IS TRUE)) ORDER BY (((((t1.c0 IN (t1.c0)))AND(t1.c0)))AND(((t1.c64)<(1432970727))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON (CAST(rt0.c1 AS BLOB) IN (NULL, ((v0.c0)>=(t1.c2)))) LEFT OUTER JOIN t1 ON (((((rt0.c2)AND(t1.c0)))OR(rt0.c0)) IN ()) WHERE ((0.16707015859237762 IN (((v0.c0) ISNULL)))) ORDER BY (- ('P%d5*(㷳''E' COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT (((0.16707015859237762 IN (((v0.c0) ISNULL)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (CAST(rt0.c1 AS BLOB) IN (NULL, ((v0.c0)>=(t1.c2)))) LEFT OUTER JOIN t1 ON (((((rt0.c2)AND(t1.c0)))OR(rt0.c0)) IN ()) ORDER BY (- ('P%d5*(㷳''E' COLLATE NOCASE)));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON (CAST(rt0.c1 AS BLOB) IN (NULL, ((v0.c0)>=(t1.c2)))) LEFT OUTER JOIN t1 ON (((((rt0.c2)AND(t1.c0)))OR(rt0.c0)) IN ()) WHERE ((0.16707015859237762 IN (((v0.c0) ISNULL)))) ORDER BY (- ('P%d5*(㷳''E' COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT (((0.16707015859237762 IN (((v0.c0) ISNULL)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (CAST(rt0.c1 AS BLOB) IN (NULL, ((v0.c0)>=(t1.c2)))) LEFT OUTER JOIN t1 ON (((((rt0.c2)AND(t1.c0)))OR(rt0.c0)) IN ()) ORDER BY (- ('P%d5*(㷳''E' COLLATE NOCASE)));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN t1 ON (((t1.c64)) BETWEEN ((((t1.c2) IS TRUE))) AND (((((v0.c0, t1.c0, v0.c0)) NOT BETWEEN (('￿}Pe2!!ku', t1.c0, t1.c64)) AND ((NULL, v0.c0, v0.c0)))))) WHERE ((((((t1.c64) NOTNULL)))<=((((((((((v0.c0)AND(t1.c0)))AND(t1.c0)))AND(v0.c0)))AND(t1.c0))))));
SELECT SUM(count) FROM (SELECT (((((((t1.c64) NOTNULL)))<=((((((((((v0.c0)AND(t1.c0)))AND(t1.c0)))AND(v0.c0)))AND(t1.c0)))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t1 ON (((t1.c64)) BETWEEN ((((t1.c2) IS TRUE))) AND (((((v0.c0, t1.c0, v0.c0)) NOT BETWEEN (('￿}Pe2!!ku', t1.c0, t1.c64)) AND ((NULL, v0.c0, v0.c0)))))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN t1 ON (((t1.c64)) BETWEEN ((((t1.c2) IS TRUE))) AND (((((v0.c0, t1.c0, v0.c0)) NOT BETWEEN (('￿}Pe2!!ku', t1.c0, t1.c64)) AND ((NULL, v0.c0, v0.c0)))))) WHERE ((((((t1.c64) NOTNULL)))<=((((((((((v0.c0)AND(t1.c0)))AND(t1.c0)))AND(v0.c0)))AND(t1.c0))))));
SELECT SUM(count) FROM (SELECT (((((((t1.c64) NOTNULL)))<=((((((((((v0.c0)AND(t1.c0)))AND(t1.c0)))AND(v0.c0)))AND(t1.c0)))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t1 ON (((t1.c64)) BETWEEN ((((t1.c2) IS TRUE))) AND (((((v0.c0, t1.c0, v0.c0)) NOT BETWEEN (('￿}Pe2!!ku', t1.c0, t1.c64)) AND ((NULL, v0.c0, v0.c0)))))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN t1 ON (((t1.c64)) BETWEEN ((((t1.c2) IS TRUE))) AND (((((v0.c0, t1.c0, v0.c0)) NOT BETWEEN (('￿}Pe2!!ku', t1.c0, t1.c64)) AND ((NULL, v0.c0, v0.c0)))))) WHERE ((((((t1.c64) NOTNULL)))<=((((((((((v0.c0)AND(t1.c0)))AND(t1.c0)))AND(v0.c0)))AND(t1.c0))))));
SELECT ALL * FROM t1, vt0, v0 WHERE (((((((t1.c64) BETWEEN (t1.c0) AND (t1.c0)))OR((((t1.c0)) NOT BETWEEN ((0.9170392595884871)) AND ((t1.c0))))))OR(x''))) ORDER BY ((UNLIKELY(DISTINCT vt0.c0)) BETWEEN (((t1.c64)!=(t1.c0))) AND (CAST(t1.c2 AS TEXT)))  NULLS FIRST, LOWER(UNICODE(t1.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t1.c64) BETWEEN (t1.c0) AND (t1.c0)))OR((((t1.c0)) NOT BETWEEN ((0.9170392595884871)) AND ((t1.c0))))))OR(x''))) IS TRUE)  as count FROM t1, vt0, v0 ORDER BY ((UNLIKELY(DISTINCT vt0.c0)) BETWEEN (((t1.c64)<>(t1.c0))) AND (CAST(t1.c2 AS TEXT)))  NULLS FIRST, LOWER(UNICODE(t1.c0)) DESC  NULLS LAST);
SELECT ALL * FROM t1, vt0, v0 WHERE (((((((t1.c64) BETWEEN (t1.c0) AND (t1.c0)))OR((((t1.c0)) NOT BETWEEN ((0.9170392595884871)) AND ((t1.c0))))))OR(x''))) ORDER BY ((UNLIKELY(DISTINCT vt0.c0)) BETWEEN (((t1.c64)!=(t1.c0))) AND (CAST(t1.c2 AS TEXT)))  NULLS FIRST, LOWER(UNICODE(t1.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t1.c64) BETWEEN (t1.c0) AND (t1.c0)))OR((((t1.c0)) NOT BETWEEN ((0.9170392595884871)) AND ((t1.c0))))))OR(x''))) IS TRUE)  as count FROM t1, vt0, v0 ORDER BY ((UNLIKELY(DISTINCT vt0.c0)) BETWEEN (((t1.c64)<>(t1.c0))) AND (CAST(t1.c2 AS TEXT)))  NULLS FIRST, LOWER(UNICODE(t1.c0)) DESC  NULLS LAST);
SELECT ALL * FROM t1, vt0, v0 WHERE (((((((t1.c64) BETWEEN (t1.c0) AND (t1.c0)))OR((((t1.c0)) NOT BETWEEN ((0.9170392595884871)) AND ((t1.c0))))))OR(x''))) ORDER BY ((UNLIKELY(DISTINCT vt0.c0)) BETWEEN (((t1.c64)!=(t1.c0))) AND (CAST(t1.c2 AS TEXT)))  NULLS FIRST, LOWER(UNICODE(t1.c0)) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (rt0.c0) ORDER BY rt0.c0, ((((~ (rt0.c2))))>=(((((rt0.c0))==((0.10447222964167724)))))), (((((v0.c0)OR(rt0.c2)))OR(vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM v0, vt0 NOT INDEXED, rt0 ORDER BY rt0.c0, ((((~ (rt0.c2))))>=(((((rt0.c0))=((0.10447222964167724)))))), (((((v0.c0)OR(rt0.c2)))OR(vt0.c0)) IN ()) ASC);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (rt0.c0) ORDER BY rt0.c0, ((((~ (rt0.c2))))>=(((((rt0.c0))==((0.10447222964167724)))))), (((((v0.c0)OR(rt0.c2)))OR(vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM v0, vt0 NOT INDEXED, rt0 ORDER BY rt0.c0, ((((~ (rt0.c2))))>=(((((rt0.c0))=((0.10447222964167724)))))), (((((v0.c0)OR(rt0.c2)))OR(vt0.c0)) IN ()) ASC);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (rt0.c0) ORDER BY rt0.c0, ((((~ (rt0.c2))))>=(((((rt0.c0))==((0.10447222964167724)))))), (((((v0.c0)OR(rt0.c2)))OR(vt0.c0)) IN ()) ASC;
SELECT ALL * FROM vt0 WHERE ((~ (((vt0.c0) ISNULL)))) ORDER BY IFNULL(x'', CASE WHEN NULL THEN vt0.c0 END) ASC  NULLS FIRST, IFNULL(DISTINCT x'0a59', CAST(vt0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY IFNULL(x'', CASE WHEN NULL THEN vt0.c0 END) ASC  NULLS FIRST, IFNULL(DISTINCT x'0a59', CAST(vt0.c0 AS TEXT)));
SELECT ALL * FROM vt0 WHERE ((~ (((vt0.c0) ISNULL)))) ORDER BY IFNULL(x'', CASE WHEN NULL THEN vt0.c0 END) ASC  NULLS FIRST, IFNULL(DISTINCT x'0a59', CAST(vt0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY IFNULL(x'', CASE WHEN NULL THEN vt0.c0 END) ASC  NULLS FIRST, IFNULL(DISTINCT x'0a59', CAST(vt0.c0 AS TEXT)));
SELECT ALL * FROM vt0 WHERE ((~ (((vt0.c0) ISNULL)))) ORDER BY IFNULL(x'', CASE WHEN NULL THEN vt0.c0 END) ASC  NULLS FIRST, IFNULL(DISTINCT x'0a59', CAST(vt0.c0 AS TEXT));
SELECT ALL * FROM t1, rt0, vt0, v0 WHERE (TYPEOF(rt0.c2 COLLATE RTRIM)) ORDER BY (+ ((NOT (rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(rt0.c2 COLLATE RTRIM)) IS TRUE)  as count FROM t1, rt0, vt0, v0 ORDER BY (+ ((NOT (rt0.c0)))) DESC);
SELECT ALL * FROM t1, rt0, vt0, v0 WHERE (TYPEOF(rt0.c2 COLLATE RTRIM)) ORDER BY (+ ((NOT (rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(rt0.c2 COLLATE RTRIM)) IS TRUE)  as count FROM t1, rt0, vt0, v0 ORDER BY (+ ((NOT (rt0.c0)))) DESC);
SELECT ALL * FROM t1, rt0, vt0, v0 WHERE (TYPEOF(rt0.c2 COLLATE RTRIM)) ORDER BY (+ ((NOT (rt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (((v0.c0) ISNULL))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON CHAR(((vt0.c0) IS TRUE), ((vt0.c0)==(t1.c0)), t1.c0, CASE v0.c0  WHEN t1.c0 THEN t1.c0 WHEN v0.c0 THEN v0.c0 WHEN t1.c0 THEN t1.c64 END, ((t1.c2) BETWEEN (v0.c0) AND ('Z}0'))) FULL OUTER JOIN v0 ON ((((vt0.c0)>(t1.c64))) NOTNULL) WHERE (((x'') IS TRUE)) ORDER BY (('0.6568548962030735') BETWEEN ('' COLLATE RTRIM) AND (((t1.c0)IS NOT(t1.c0))))  NULLS FIRST, (((t1.c64)/(vt0.c0)) IN (((v0.c0) NOT BETWEEN (t1.c2) AND (t1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'') IS TRUE)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON CHAR(((vt0.c0) IS TRUE), ((vt0.c0)==(t1.c0)), t1.c0, CASE v0.c0  WHEN t1.c0 THEN t1.c0 WHEN v0.c0 THEN v0.c0 WHEN t1.c0 THEN t1.c64 END, ((t1.c2) BETWEEN (v0.c0) AND ('Z}0'))) FULL OUTER JOIN v0 ON ((((vt0.c0)>(t1.c64))) NOTNULL) ORDER BY (('0.6568548962030735') BETWEEN ('' COLLATE RTRIM) AND (((t1.c0)IS NOT(t1.c0))))  NULLS FIRST, (((t1.c64)/(vt0.c0)) IN (((v0.c0) NOT BETWEEN (t1.c2) AND (t1.c0)))) ASC);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON CHAR(((vt0.c0) IS TRUE), ((vt0.c0)==(t1.c0)), t1.c0, CASE v0.c0  WHEN t1.c0 THEN t1.c0 WHEN v0.c0 THEN v0.c0 WHEN t1.c0 THEN t1.c64 END, ((t1.c2) BETWEEN (v0.c0) AND ('Z}0'))) FULL OUTER JOIN v0 ON ((((vt0.c0)>(t1.c64))) NOTNULL) WHERE (((x'') IS TRUE)) ORDER BY (('0.6568548962030735') BETWEEN ('' COLLATE RTRIM) AND (((t1.c0)IS NOT(t1.c0))))  NULLS FIRST, (((t1.c64)/(vt0.c0)) IN (((v0.c0) NOT BETWEEN (t1.c2) AND (t1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'') IS TRUE)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON CHAR(((vt0.c0) IS TRUE), ((vt0.c0)==(t1.c0)), t1.c0, CASE v0.c0  WHEN t1.c0 THEN t1.c0 WHEN v0.c0 THEN v0.c0 WHEN t1.c0 THEN t1.c64 END, ((t1.c2) BETWEEN (v0.c0) AND ('Z}0'))) FULL OUTER JOIN v0 ON ((((vt0.c0)>(t1.c64))) NOTNULL) ORDER BY (('0.6568548962030735') BETWEEN ('' COLLATE RTRIM) AND (((t1.c0)IS NOT(t1.c0))))  NULLS FIRST, (((t1.c64)/(vt0.c0)) IN (((v0.c0) NOT BETWEEN (t1.c2) AND (t1.c0)))) ASC);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)||(v0.c0))) IS FALSE)) ORDER BY (v0.c0 IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)||(v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY (v0.c0 IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)||(v0.c0))) IS FALSE)) ORDER BY (v0.c0 IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)||(v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY (v0.c0 IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)||(v0.c0))) IS FALSE)) ORDER BY (v0.c0 IN ()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0, t1, vt0 WHERE (((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0, t1, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, t1, vt0 WHERE (((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0, t1, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, t1, vt0 WHERE (((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM);
SELECT * FROM rt0, t1 FULL OUTER JOIN v0 ON CAST((((v0.c0))>=((vt0.c0))) AS BLOB) LEFT OUTER JOIN vt0 ON ((LIKELY(vt0.c0))==(NULL)) WHERE (((t1.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) COLLATE BINARY) ORDER BY (((rt0.c0 IN ())) BETWEEN (CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN 0.9728797163544126 THEN t1.c64 WHEN rt0.c0 THEN t1.c0 END) AND (((v0.c0)IS NOT(t1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, t1 FULL OUTER JOIN v0 ON CAST((((v0.c0))>=((vt0.c0))) AS BLOB) LEFT OUTER JOIN vt0 ON ((LIKELY(vt0.c0))=(NULL)) ORDER BY (((rt0.c0 IN ())) BETWEEN (CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN 0.9728797163544126 THEN t1.c64 WHEN rt0.c0 THEN t1.c0 END) AND (((v0.c0)IS NOT(t1.c0)))) ASC);
SELECT * FROM rt0, t1 FULL OUTER JOIN v0 ON CAST((((v0.c0))>=((vt0.c0))) AS BLOB) LEFT OUTER JOIN vt0 ON ((LIKELY(vt0.c0))==(NULL)) WHERE (((t1.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) COLLATE BINARY) ORDER BY (((rt0.c0 IN ())) BETWEEN (CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN 0.9728797163544126 THEN t1.c64 WHEN rt0.c0 THEN t1.c0 END) AND (((v0.c0)IS NOT(t1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, t1 FULL OUTER JOIN v0 ON CAST((((v0.c0))>=((vt0.c0))) AS BLOB) LEFT OUTER JOIN vt0 ON ((LIKELY(vt0.c0))=(NULL)) ORDER BY (((rt0.c0 IN ())) BETWEEN (CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN 0.9728797163544126 THEN t1.c64 WHEN rt0.c0 THEN t1.c0 END) AND (((v0.c0)IS NOT(t1.c0)))) ASC);
SELECT ALL * FROM rt0 WHERE (((rt0.c2) NOTNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2) NOTNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2) NOTNULL) COLLATE RTRIM);
SELECT * FROM v0, rt0, vt0 WHERE ((((((v0.c0 IN (rt0.c2)))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)))OR(((rt0.c0)GLOB(rt0.c0))))) ORDER BY (~ (CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE NULL END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0 IN (rt0.c2)))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)))OR(((rt0.c0)GLOB(rt0.c0))))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (~ (CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE NULL END))  NULLS LAST);
SELECT * FROM v0, rt0, vt0 WHERE ((((((v0.c0 IN (rt0.c2)))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)))OR(((rt0.c0)GLOB(rt0.c0))))) ORDER BY (~ (CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE NULL END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0 IN (rt0.c2)))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)))OR(((rt0.c0)GLOB(rt0.c0))))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (~ (CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE NULL END))  NULLS LAST);
SELECT * FROM v0, rt0, vt0 WHERE ((((((v0.c0 IN (rt0.c2)))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)))OR(((rt0.c0)GLOB(rt0.c0))))) ORDER BY (~ (CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE NULL END))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE ((((rt0.c1)|(t1.c2)) IN ())) ORDER BY '\' ASC  NULLS LAST, rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)|(t1.c2)) IN ())) IS TRUE)  as count FROM rt0, t1, vt0 ORDER BY '\' ASC  NULLS LAST, rt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE ((((rt0.c1)|(t1.c2)) IN ())) ORDER BY '\' ASC  NULLS LAST, rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)|(t1.c2)) IN ())) IS TRUE)  as count FROM rt0, t1, vt0 ORDER BY '\' ASC  NULLS LAST, rt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE ((((rt0.c1)|(t1.c2)) IN ())) ORDER BY '\' ASC  NULLS LAST, rt0.c0  NULLS FIRST;
SELECT * FROM vt0, rt0, v0, t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0, v0, t1);
SELECT * FROM vt0, rt0, v0, t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0, v0, t1);
SELECT * FROM vt0, rt0, v0, t1 WHERE (NULL);
SELECT COUNT(*) FROM t1, vt0 CROSS JOIN v0 ON ('877835418' IN ()) LEFT OUTER JOIN rt0 ON v0.c0 WHERE (COALESCE(DISTINCT ((v0.c0) NOTNULL), (+ (NULL)))) ORDER BY 0.9093935320290594, rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((v0.c0) NOTNULL), (+ (NULL)))) IS TRUE)  as count FROM t1, vt0 CROSS JOIN v0 ON ('877835418' IN ()) LEFT OUTER JOIN rt0 ON v0.c0 ORDER BY 0.9093935320290594, rt0.c2  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt0 CROSS JOIN v0 ON ('877835418' IN ()) LEFT OUTER JOIN rt0 ON v0.c0 WHERE (COALESCE(DISTINCT ((v0.c0) NOTNULL), (+ (NULL)))) ORDER BY 0.9093935320290594, rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((v0.c0) NOTNULL), (+ (NULL)))) IS TRUE)  as count FROM t1, vt0 CROSS JOIN v0 ON ('877835418' IN ()) LEFT OUTER JOIN rt0 ON v0.c0 ORDER BY 0.9093935320290594, rt0.c2  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt0 CROSS JOIN v0 ON ('877835418' IN ()) LEFT OUTER JOIN rt0 ON v0.c0 WHERE (COALESCE(DISTINCT ((v0.c0) NOTNULL), (+ (NULL)))) ORDER BY 0.9093935320290594, rt0.c2  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, rt0, vt0 WHERE (((((t1.c0)/(t1.c0))) BETWEEN ((vt0.c0 IN ())) AND (IFNULL(DISTINCT x'', t1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)/(t1.c0))) BETWEEN ((vt0.c0 IN ())) AND (IFNULL(DISTINCT x'', t1.c2)))) IS TRUE)  as count FROM t1, rt0, vt0);
SELECT ALL COUNT(*) FROM t1, rt0, vt0 WHERE (((((t1.c0)/(t1.c0))) BETWEEN ((vt0.c0 IN ())) AND (IFNULL(DISTINCT x'', t1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)/(t1.c0))) BETWEEN ((vt0.c0 IN ())) AND (IFNULL(DISTINCT x'', t1.c2)))) IS TRUE)  as count FROM t1, rt0, vt0);
SELECT ALL COUNT(*) FROM t1, rt0, vt0 WHERE (((((t1.c0)/(t1.c0))) BETWEEN ((vt0.c0 IN ())) AND (IFNULL(DISTINCT x'', t1.c2))));
SELECT * FROM vt0, t1, rt0 WHERE ((((rt0.c2))>((((t1.c64)==(t1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2))>((((t1.c64)==(t1.c2)))))) IS TRUE)  as count FROM vt0, t1, rt0);
SELECT * FROM vt0, t1, rt0 WHERE ((((rt0.c2))>((((t1.c64)==(t1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2))>((((t1.c64)==(t1.c2)))))) IS TRUE)  as count FROM vt0, t1, rt0);
SELECT * FROM vt0, t1, rt0 WHERE ((((rt0.c2))>((((t1.c64)==(t1.c2))))));
SELECT COUNT(*) FROM t1, v0, vt0 NOT INDEXED WHERE (0.10717240837572706);
SELECT SUM(count) FROM (SELECT ((0.10717240837572706) IS TRUE)  as count FROM t1, v0, vt0);
SELECT COUNT(*) FROM t1, v0, vt0 NOT INDEXED WHERE (0.10717240837572706);
SELECT SUM(count) FROM (SELECT ((0.10717240837572706) IS TRUE)  as count FROM t1, v0, vt0);
SELECT COUNT(*) FROM t1, v0, vt0 NOT INDEXED WHERE (0.10717240837572706);
SELECT * FROM rt0 WHERE ((CAST(rt0.c2 AS REAL) IN ())) ORDER BY (((~ (rt0.c1)))IS(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c2 AS REAL) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((~ (rt0.c1)))IS(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT * FROM rt0 WHERE ((CAST(rt0.c2 AS REAL) IN ())) ORDER BY (((~ (rt0.c1)))IS(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c2 AS REAL) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((~ (rt0.c1)))IS(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT * FROM rt0 WHERE ((CAST(rt0.c2 AS REAL) IN ())) ORDER BY (((~ (rt0.c1)))IS(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END));
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(((2.58055545E8)==(t1.c64)) AS TEXT)) ORDER BY (CAST(t1.c0 AS TEXT) IN (((t1.c2) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((2.58055545E8)=(t1.c64)) AS TEXT)) IS TRUE)  as count FROM t1 ORDER BY (CAST(t1.c0 AS TEXT) IN (((t1.c2) NOT NULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(((2.58055545E8)==(t1.c64)) AS TEXT)) ORDER BY (CAST(t1.c0 AS TEXT) IN (((t1.c2) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((2.58055545E8)=(t1.c64)) AS TEXT)) IS TRUE)  as count FROM t1 ORDER BY (CAST(t1.c0 AS TEXT) IN (((t1.c2) NOT NULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(((2.58055545E8)==(t1.c64)) AS TEXT)) ORDER BY (CAST(t1.c0 AS TEXT) IN (((t1.c2) NOT NULL)))  NULLS LAST;
SELECT COUNT(*) FROM t1, v0 CROSS JOIN rt0 ON (- ((('') NOT BETWEEN (t1.c0) AND (t1.c0)))) WHERE ((- (((rt0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c2) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM t1, v0 CROSS JOIN rt0 ON (- ((('') NOT BETWEEN (t1.c0) AND (t1.c0)))));
SELECT COUNT(*) FROM t1, v0 CROSS JOIN rt0 ON (- ((('') NOT BETWEEN (t1.c0) AND (t1.c0)))) WHERE ((- (((rt0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c2) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM t1, v0 CROSS JOIN rt0 ON (- ((('') NOT BETWEEN (t1.c0) AND (t1.c0)))));
SELECT COUNT(*) FROM t1, v0 CROSS JOIN rt0 ON (- ((('') NOT BETWEEN (t1.c0) AND (t1.c0)))) WHERE ((- (((rt0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON CASE WHEN ((rt0.c2) NOT NULL) THEN CAST(rt0.c0 AS TEXT) WHEN ((((t1.c0)OR(rt0.c2)))AND(rt0.c2)) THEN ((rt0.c1) ISNULL) WHEN ((t1.c0) BETWEEN (rt0.c2) AND (t1.c64)) THEN ((t1.c64) BETWEEN (rt0.c2) AND (t1.c2)) ELSE HEX(rt0.c2) END WHERE ((('1868986304') ISNULL));
SELECT SUM(count) FROM (SELECT (((('1868986304') ISNULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON CASE WHEN ((rt0.c2) NOT NULL) THEN CAST(rt0.c0 AS TEXT) WHEN ((((t1.c0)OR(rt0.c2)))AND(rt0.c2)) THEN ((rt0.c1) ISNULL) WHEN ((t1.c0) BETWEEN (rt0.c2) AND (t1.c64)) THEN ((t1.c64) BETWEEN (rt0.c2) AND (t1.c2)) ELSE HEX(rt0.c2) END);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON CASE WHEN ((rt0.c2) NOT NULL) THEN CAST(rt0.c0 AS TEXT) WHEN ((((t1.c0)OR(rt0.c2)))AND(rt0.c2)) THEN ((rt0.c1) ISNULL) WHEN ((t1.c0) BETWEEN (rt0.c2) AND (t1.c64)) THEN ((t1.c64) BETWEEN (rt0.c2) AND (t1.c2)) ELSE HEX(rt0.c2) END WHERE ((('1868986304') ISNULL));
SELECT SUM(count) FROM (SELECT (((('1868986304') ISNULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON CASE WHEN ((rt0.c2) NOT NULL) THEN CAST(rt0.c0 AS TEXT) WHEN ((((t1.c0)OR(rt0.c2)))AND(rt0.c2)) THEN ((rt0.c1) ISNULL) WHEN ((t1.c0) BETWEEN (rt0.c2) AND (t1.c64)) THEN ((t1.c64) BETWEEN (rt0.c2) AND (t1.c2)) ELSE HEX(rt0.c2) END);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON CASE WHEN ((rt0.c2) NOT NULL) THEN CAST(rt0.c0 AS TEXT) WHEN ((((t1.c0)OR(rt0.c2)))AND(rt0.c2)) THEN ((rt0.c1) ISNULL) WHEN ((t1.c0) BETWEEN (rt0.c2) AND (t1.c64)) THEN ((t1.c64) BETWEEN (rt0.c2) AND (t1.c2)) ELSE HEX(rt0.c2) END WHERE ((('1868986304') ISNULL));
SELECT * FROM rt0, vt0 WHERE (rt0.c0) ORDER BY ((vt0.c0)>=(CAST(x'' AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((vt0.c0)>=(CAST(x'' AS INTEGER))));
SELECT * FROM rt0, vt0 WHERE (rt0.c0) ORDER BY ((vt0.c0)>=(CAST(x'' AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((vt0.c0)>=(CAST(x'' AS INTEGER))));
SELECT * FROM rt0, vt0 WHERE (rt0.c0) ORDER BY ((vt0.c0)>=(CAST(x'' AS INTEGER)));
SELECT * FROM v0, rt0, t1, vt0 WHERE (((TRIM(DISTINCT t1.c0, t1.c2)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT t1.c0, t1.c2)) NOTNULL)) IS TRUE)  as count FROM v0, rt0, t1, vt0);
SELECT * FROM v0, rt0, t1, vt0 WHERE (((TRIM(DISTINCT t1.c0, t1.c2)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT t1.c0, t1.c2)) NOTNULL)) IS TRUE)  as count FROM v0, rt0, t1, vt0);
SELECT * FROM v0, rt0, t1, vt0 WHERE (((TRIM(DISTINCT t1.c0, t1.c2)) NOTNULL));
SELECT * FROM v0, t1, rt0 INDEXED BY i13, vt0 WHERE ((((((0.7580021391101053) NOT NULL)))<=((CAST(vt0.c0 AS REAL))))) ORDER BY ((((((((((((rt0.c0 COLLATE NOCASE)OR((((rt0.c0)) NOT BETWEEN ((t1.c2)) AND ((t1.c0))))))AND(CASE '-1257260017'  WHEN v0.c0 THEN v0.c0 END)))AND(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN t1.c0 WHEN rt0.c0 THEN t1.c0 END)))AND(((rt0.c2)IS NOT(v0.c0)))))OR(((rt0.c2) IS FALSE))))OR(COALESCE(t1.c2, rt0.c0, rt0.c2, rt0.c2)));
SELECT SUM(count) FROM (SELECT (((((((0.7580021391101053) NOT NULL)))<=((CAST(vt0.c0 AS REAL))))) IS TRUE)  as count FROM v0, t1, rt0 INDEXED BY i13, vt0 ORDER BY ((((((((((((rt0.c0 COLLATE NOCASE)OR((((rt0.c0)) NOT BETWEEN ((t1.c2)) AND ((t1.c0))))))AND(CASE '-1257260017'  WHEN v0.c0 THEN v0.c0 END)))AND(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN t1.c0 WHEN rt0.c0 THEN t1.c0 END)))AND(((rt0.c2)IS NOT(v0.c0)))))OR(((rt0.c2) IS FALSE))))OR(COALESCE(t1.c2, rt0.c0, rt0.c2, rt0.c2))));
SELECT * FROM v0, t1, rt0 INDEXED BY i13, vt0 WHERE ((((((0.7580021391101053) NOT NULL)))<=((CAST(vt0.c0 AS REAL))))) ORDER BY ((((((((((((rt0.c0 COLLATE NOCASE)OR((((rt0.c0)) NOT BETWEEN ((t1.c2)) AND ((t1.c0))))))AND(CASE '-1257260017'  WHEN v0.c0 THEN v0.c0 END)))AND(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN t1.c0 WHEN rt0.c0 THEN t1.c0 END)))AND(((rt0.c2)IS NOT(v0.c0)))))OR(((rt0.c2) IS FALSE))))OR(COALESCE(t1.c2, rt0.c0, rt0.c2, rt0.c2)));
SELECT SUM(count) FROM (SELECT (((((((0.7580021391101053) NOT NULL)))<=((CAST(vt0.c0 AS REAL))))) IS TRUE)  as count FROM v0, t1, rt0 INDEXED BY i13, vt0 ORDER BY ((((((((((((rt0.c0 COLLATE NOCASE)OR((((rt0.c0)) NOT BETWEEN ((t1.c2)) AND ((t1.c0))))))AND(CASE '-1257260017'  WHEN v0.c0 THEN v0.c0 END)))AND(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN t1.c0 WHEN rt0.c0 THEN t1.c0 END)))AND(((rt0.c2)IS NOT(v0.c0)))))OR(((rt0.c2) IS FALSE))))OR(COALESCE(t1.c2, rt0.c0, rt0.c2, rt0.c2))));
SELECT * FROM v0 CROSS JOIN t1 ON ((((ABS(NULL))AND((((t1.c0))==((vt0.c0))))))OR(CASE WHEN t1.c64 THEN x'e1f3' WHEN '2144133927' THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END)) INNER JOIN vt0 ON CASE WHEN ((vt0.c0) BETWEEN ('VNaN_HQ鵹**N-') AND (v0.c0)) THEN (((t1.c64)) BETWEEN ((-1e500)) AND ((vt0.c0))) END WHERE (vt0.c0) ORDER BY CAST(((((t1.c64)AND('A')))AND(t1.c2)) AS TEXT)  NULLS FIRST, 0.6568548962030735;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0 CROSS JOIN t1 ON ((((ABS(NULL))AND((((t1.c0))==((vt0.c0))))))OR(CASE WHEN t1.c64 THEN x'e1f3' WHEN '2144133927' THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END)) INNER JOIN vt0 ON CASE WHEN ((vt0.c0) BETWEEN ('VNaN_HQ鵹**N-') AND (v0.c0)) THEN (((t1.c64)) BETWEEN ((-1e500)) AND ((vt0.c0))) END ORDER BY CAST(((((t1.c64)AND('A')))AND(t1.c2)) AS TEXT)  NULLS FIRST, 0.6568548962030735);
SELECT * FROM v0 CROSS JOIN t1 ON ((((ABS(NULL))AND((((t1.c0))==((vt0.c0))))))OR(CASE WHEN t1.c64 THEN x'e1f3' WHEN '2144133927' THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END)) INNER JOIN vt0 ON CASE WHEN ((vt0.c0) BETWEEN ('VNaN_HQ鵹**N-') AND (v0.c0)) THEN (((t1.c64)) BETWEEN ((-1e500)) AND ((vt0.c0))) END WHERE (vt0.c0) ORDER BY CAST(((((t1.c64)AND('A')))AND(t1.c2)) AS TEXT)  NULLS FIRST, 0.6568548962030735;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0 CROSS JOIN t1 ON ((((ABS(NULL))AND((((t1.c0))==((vt0.c0))))))OR(CASE WHEN t1.c64 THEN x'e1f3' WHEN '2144133927' THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END)) INNER JOIN vt0 ON CASE WHEN ((vt0.c0) BETWEEN ('VNaN_HQ鵹**N-') AND (v0.c0)) THEN (((t1.c64)) BETWEEN ((-1e500)) AND ((vt0.c0))) END ORDER BY CAST(((((t1.c64)AND('A')))AND(t1.c2)) AS TEXT)  NULLS FIRST, 0.6568548962030735);
SELECT * FROM v0 CROSS JOIN t1 ON ((((ABS(NULL))AND((((t1.c0))==((vt0.c0))))))OR(CASE WHEN t1.c64 THEN x'e1f3' WHEN '2144133927' THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END)) INNER JOIN vt0 ON CASE WHEN ((vt0.c0) BETWEEN ('VNaN_HQ鵹**N-') AND (v0.c0)) THEN (((t1.c64)) BETWEEN ((-1e500)) AND ((vt0.c0))) END WHERE (vt0.c0) ORDER BY CAST(((((t1.c64)AND('A')))AND(t1.c2)) AS TEXT)  NULLS FIRST, 0.6568548962030735;
SELECT * FROM vt0, rt0 INDEXED BY i12, v0 WHERE (((((((rt0.c0)<=(rt0.c2)))OR(((rt0.c0)GLOB(rt0.c1)))))OR((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)<=(rt0.c2)))OR(((rt0.c0)GLOB(rt0.c1)))))OR((v0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0 INDEXED BY i12, v0);
SELECT * FROM vt0, rt0 INDEXED BY i12, v0 WHERE (((((((rt0.c0)<=(rt0.c2)))OR(((rt0.c0)GLOB(rt0.c1)))))OR((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)<=(rt0.c2)))OR(((rt0.c0)GLOB(rt0.c1)))))OR((v0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0 INDEXED BY i12, v0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (CAST(((((((((v0.c0)AND(rt0.c1)))AND(rt0.c2)))AND(v0.c0)))AND(rt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((v0.c0)AND(rt0.c1)))AND(rt0.c2)))AND(v0.c0)))AND(rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (CAST(((((((((v0.c0)AND(rt0.c1)))AND(rt0.c2)))AND(v0.c0)))AND(rt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((v0.c0)AND(rt0.c1)))AND(rt0.c2)))AND(v0.c0)))AND(rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (CAST(((((((((v0.c0)AND(rt0.c1)))AND(rt0.c2)))AND(v0.c0)))AND(rt0.c2)) AS NUMERIC));
SELECT * FROM t1, vt0 FULL OUTER JOIN rt0 ON ((((t1.c2)-(v0.c0)))*(rt0.c0 COLLATE RTRIM)) RIGHT OUTER JOIN v0 ON x'3281' WHERE ((((NULL IN ()))<=(x''))) ORDER BY (- (((rt0.c1) IS TRUE)))  NULLS LAST, '1318682206' COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN ()))<=(x''))) IS TRUE)  as count FROM t1, vt0 FULL OUTER JOIN rt0 ON ((((t1.c2)-(v0.c0)))*(rt0.c0 COLLATE RTRIM)) RIGHT OUTER JOIN v0 ON x'3281' ORDER BY (- (((rt0.c1) IS TRUE)))  NULLS LAST, '1318682206' COLLATE BINARY);
SELECT * FROM t1, vt0 FULL OUTER JOIN rt0 ON ((((t1.c2)-(v0.c0)))*(rt0.c0 COLLATE RTRIM)) RIGHT OUTER JOIN v0 ON x'3281' WHERE ((((NULL IN ()))<=(x''))) ORDER BY (- (((rt0.c1) IS TRUE)))  NULLS LAST, '1318682206' COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN ()))<=(x''))) IS TRUE)  as count FROM t1, vt0 FULL OUTER JOIN rt0 ON ((((t1.c2)-(v0.c0)))*(rt0.c0 COLLATE RTRIM)) RIGHT OUTER JOIN v0 ON x'3281' ORDER BY (- (((rt0.c1) IS TRUE)))  NULLS LAST, '1318682206' COLLATE BINARY);
SELECT * FROM v0, rt0, t1, vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN '-1760081966' END THEN t1.c0 ELSE CAST(t1.c0 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt0.c0 THEN '-1760081966' END THEN t1.c0 ELSE CAST(t1.c0 AS BLOB) END) IS TRUE)  as count FROM v0, rt0, t1, vt0);
SELECT * FROM v0, rt0, t1, vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN '-1760081966' END THEN t1.c0 ELSE CAST(t1.c0 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt0.c0 THEN '-1760081966' END THEN t1.c0 ELSE CAST(t1.c0 AS BLOB) END) IS TRUE)  as count FROM v0, rt0, t1, vt0);
SELECT * FROM v0, rt0, t1, vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN '-1760081966' END THEN t1.c0 ELSE CAST(t1.c0 AS BLOB) END);
SELECT ALL * FROM v0 WHERE (((0x56aa1cce) NOT BETWEEN ((((v0.c0))<((v0.c0)))) AND ((('M/D!k%]<g')&(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((0X56aa1cce) NOT BETWEEN ((((v0.c0))<((v0.c0)))) AND ((('M/D!k%]<g')&(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((0x56aa1cce) NOT BETWEEN ((((v0.c0))<((v0.c0)))) AND ((('M/D!k%]<g')&(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((0X56aa1cce) NOT BETWEEN ((((v0.c0))<((v0.c0)))) AND ((('M/D!k%]<g')&(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((0x56aa1cce) NOT BETWEEN ((((v0.c0))<((v0.c0)))) AND ((('M/D!k%]<g')&(v0.c0)))));
SELECT ALL COUNT(*) FROM t1, rt0 INNER JOIN v0 ON (((rt0.c0 IN ())) BETWEEN ((((rt0.c0))>((rt0.c1)))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)))) WHERE (CAST((((t1.c64, t1.c0, t1.c0))<>((rt0.c0, rt0.c1, v0.c0))) AS INTEGER)) ORDER BY ((NULLIF(t1.c2, t1.c0)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((t1.c64, t1.c0, t1.c0))!=((rt0.c0, rt0.c1, v0.c0))) AS INTEGER)) IS TRUE)  as count FROM t1, rt0 INNER JOIN v0 ON (((rt0.c0 IN ())) BETWEEN ((((rt0.c0))>((rt0.c1)))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)))) ORDER BY ((NULLIF(t1.c2, t1.c0)) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt0 INNER JOIN v0 ON (((rt0.c0 IN ())) BETWEEN ((((rt0.c0))>((rt0.c1)))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)))) WHERE (CAST((((t1.c64, t1.c0, t1.c0))<>((rt0.c0, rt0.c1, v0.c0))) AS INTEGER)) ORDER BY ((NULLIF(t1.c2, t1.c0)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((t1.c64, t1.c0, t1.c0))!=((rt0.c0, rt0.c1, v0.c0))) AS INTEGER)) IS TRUE)  as count FROM t1, rt0 INNER JOIN v0 ON (((rt0.c0 IN ())) BETWEEN ((((rt0.c0))>((rt0.c1)))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)))) ORDER BY ((NULLIF(t1.c2, t1.c0)) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt0 INNER JOIN v0 ON (((rt0.c0 IN ())) BETWEEN ((((rt0.c0))>((rt0.c1)))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)))) WHERE (CAST((((t1.c64, t1.c0, t1.c0))<>((rt0.c0, rt0.c1, v0.c0))) AS INTEGER)) ORDER BY ((NULLIF(t1.c2, t1.c0)) IS TRUE)  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((((((t1.c2)AND(vt0.c0)))OR(t1.c2))) NOT BETWEEN (NULL) AND (((t1.c0)<<(t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c2)AND(vt0.c0)))OR(t1.c2))) NOT BETWEEN (NULL) AND (((t1.c0)<<(t1.c2))))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((((((t1.c2)AND(vt0.c0)))OR(t1.c2))) NOT BETWEEN (NULL) AND (((t1.c0)<<(t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c2)AND(vt0.c0)))OR(t1.c2))) NOT BETWEEN (NULL) AND (((t1.c0)<<(t1.c2))))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((((((t1.c2)AND(vt0.c0)))OR(t1.c2))) NOT BETWEEN (NULL) AND (((t1.c0)<<(t1.c2)))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t1 ON ((0.044344064163122976)/((+ ('G')))) WHERE (LOWER(''));
SELECT SUM(count) FROM (SELECT ((LOWER('')) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t1 ON ((0.044344064163122976)/((+ ('G')))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t1 ON ((0.044344064163122976)/((+ ('G')))) WHERE (LOWER(''));
SELECT SUM(count) FROM (SELECT ((LOWER('')) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t1 ON ((0.044344064163122976)/((+ ('G')))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t1 ON ((0.044344064163122976)/((+ ('G')))) WHERE (LOWER(''));
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON CAST(CAST(v0.c0 AS INTEGER) AS BLOB) WHERE (CAST(((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)) AS TEXT)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON CAST(CAST(v0.c0 AS INTEGER) AS BLOB));
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON CAST(CAST(v0.c0 AS INTEGER) AS BLOB) WHERE (CAST(((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)) AS TEXT)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON CAST(CAST(v0.c0 AS INTEGER) AS BLOB));
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON CAST(CAST(v0.c0 AS INTEGER) AS BLOB) WHERE (CAST(((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)) AS TEXT));
SELECT COUNT(*) FROM v0, t1, vt0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, t1, vt0, rt0);
SELECT COUNT(*) FROM v0, t1, vt0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, t1, vt0, rt0);
SELECT COUNT(*) FROM v0, t1, vt0, rt0 WHERE (x'');
SELECT COUNT(*) FROM v0, vt0, t1 NATURAL JOIN rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0))) NOT BETWEEN (INSTR(rt0.c2, t1.c0)) AND (((0.8652100348144917) NOTNULL)))) ORDER BY (((rt0.c0)/(t1.c2)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0))) NOT BETWEEN (INSTR(rt0.c2, t1.c0)) AND (((0.8652100348144917) NOTNULL)))) IS TRUE)  as count FROM v0, vt0, t1 NATURAL JOIN rt0 ORDER BY (((rt0.c0)/(t1.c2)) IN ()) ASC);
SELECT COUNT(*) FROM v0, vt0, t1 NATURAL JOIN rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0))) NOT BETWEEN (INSTR(rt0.c2, t1.c0)) AND (((0.8652100348144917) NOTNULL)))) ORDER BY (((rt0.c0)/(t1.c2)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0))) NOT BETWEEN (INSTR(rt0.c2, t1.c0)) AND (((0.8652100348144917) NOTNULL)))) IS TRUE)  as count FROM v0, vt0, t1 NATURAL JOIN rt0 ORDER BY (((rt0.c0)/(t1.c2)) IN ()) ASC);
SELECT COUNT(*) FROM v0, vt0, t1 NATURAL JOIN rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0))) NOT BETWEEN (INSTR(rt0.c2, t1.c0)) AND (((0.8652100348144917) NOTNULL)))) ORDER BY (((rt0.c0)/(t1.c2)) IN ()) ASC;
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN t1 ON (+ (((t1.c0)/(rt0.c2)))) CROSS JOIN rt0 ON (- (CAST(t1.c2 AS TEXT))) WHERE (('827751489' IN ())) ORDER BY (+ (CASE WHEN t1.c2 THEN t1.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((('827751489' IN ())) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t1 ON (+ (((t1.c0)/(rt0.c2)))) CROSS JOIN rt0 ON (- (CAST(t1.c2 AS TEXT))) ORDER BY (+ (CASE WHEN t1.c2 THEN t1.c2 END)) ASC);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN t1 ON (+ (((t1.c0)/(rt0.c2)))) CROSS JOIN rt0 ON (- (CAST(t1.c2 AS TEXT))) WHERE (('827751489' IN ())) ORDER BY (+ (CASE WHEN t1.c2 THEN t1.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((('827751489' IN ())) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t1 ON (+ (((t1.c0)/(rt0.c2)))) CROSS JOIN rt0 ON (- (CAST(t1.c2 AS TEXT))) ORDER BY (+ (CASE WHEN t1.c2 THEN t1.c2 END)) ASC);
SELECT COUNT(*) FROM t1 FULL OUTER JOIN rt0 ON ((CASE '1685548292'  WHEN t1.c0 THEN rt0.c2 WHEN v0.c0 THEN 0X41c632f5 WHEN rt0.c0 THEN t1.c64 END)!=(((t1.c0) IS TRUE))) LEFT OUTER JOIN v0 ON (CASE x''  WHEN vt0.c0 THEN t1.c0 END IN (rt0.c2 COLLATE RTRIM)) RIGHT OUTER JOIN vt0 ON (~ (((rt0.c2)+(t1.c0)))) WHERE (CAST(((vt0.c0)AND(v0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)AND(v0.c0)) AS TEXT)) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON ((CASE '1685548292'  WHEN t1.c0 THEN rt0.c2 WHEN v0.c0 THEN 0X41c632f5 WHEN rt0.c0 THEN t1.c64 END)<>(((t1.c0) IS TRUE))) LEFT OUTER JOIN v0 ON (CASE x''  WHEN vt0.c0 THEN t1.c0 END IN (rt0.c2 COLLATE RTRIM)) RIGHT OUTER JOIN vt0 ON (~ (((rt0.c2)+(t1.c0)))));
SELECT COUNT(*) FROM t1 FULL OUTER JOIN rt0 ON ((CASE '1685548292'  WHEN t1.c0 THEN rt0.c2 WHEN v0.c0 THEN 0X41c632f5 WHEN rt0.c0 THEN t1.c64 END)!=(((t1.c0) IS TRUE))) LEFT OUTER JOIN v0 ON (CASE x''  WHEN vt0.c0 THEN t1.c0 END IN (rt0.c2 COLLATE RTRIM)) RIGHT OUTER JOIN vt0 ON (~ (((rt0.c2)+(t1.c0)))) WHERE (CAST(((vt0.c0)AND(v0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)AND(v0.c0)) AS TEXT)) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON ((CASE '1685548292'  WHEN t1.c0 THEN rt0.c2 WHEN v0.c0 THEN 0X41c632f5 WHEN rt0.c0 THEN t1.c64 END)<>(((t1.c0) IS TRUE))) LEFT OUTER JOIN v0 ON (CASE x''  WHEN vt0.c0 THEN t1.c0 END IN (rt0.c2 COLLATE RTRIM)) RIGHT OUTER JOIN vt0 ON (~ (((rt0.c2)+(t1.c0)))));
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((((t1.c64)&(t1.c64)) IN (rt0.c0)));
SELECT SUM(count) FROM (SELECT (((((t1.c64)&(t1.c64)) IN (rt0.c0))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((((t1.c64)&(t1.c64)) IN (rt0.c0)));
SELECT SUM(count) FROM (SELECT (((((t1.c64)&(t1.c64)) IN (rt0.c0))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((((t1.c64)&(t1.c64)) IN (rt0.c0)));
SELECT * FROM t1 WHERE (CAST(((t1.c2) NOT BETWEEN (t1.c64) AND (t1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c2) NOT BETWEEN (t1.c64) AND (t1.c0)) AS REAL)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CAST(((t1.c2) NOT BETWEEN (t1.c64) AND (t1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c2) NOT BETWEEN (t1.c64) AND (t1.c0)) AS REAL)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CAST(((t1.c2) NOT BETWEEN (t1.c64) AND (t1.c0)) AS REAL));
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((((rt0.c1) BETWEEN ('') AND (rt0.c1)))<(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) BETWEEN ('') AND (rt0.c1)))<(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((((rt0.c1) BETWEEN ('') AND (rt0.c1)))<(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) BETWEEN ('') AND (rt0.c1)))<(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((((rt0.c1) BETWEEN ('') AND (rt0.c1)))<(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t1, rt0, v0 WHERE ((((((vt0.c0))!=((v0.c0))))<((((rt0.c0, v0.c0, t1.c0)) BETWEEN ((rt0.c2, rt0.c0, t1.c2)) AND ((rt0.c1, t1.c64, t1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<>((v0.c0))))<((((rt0.c0, v0.c0, t1.c0)) BETWEEN ((rt0.c2, rt0.c0, t1.c2)) AND ((rt0.c1, t1.c64, t1.c2)))))) IS TRUE)  as count FROM vt0, t1, rt0, v0);
SELECT COUNT(*) FROM vt0, t1, rt0, v0 WHERE ((((((vt0.c0))!=((v0.c0))))<((((rt0.c0, v0.c0, t1.c0)) BETWEEN ((rt0.c2, rt0.c0, t1.c2)) AND ((rt0.c1, t1.c64, t1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<>((v0.c0))))<((((rt0.c0, v0.c0, t1.c0)) BETWEEN ((rt0.c2, rt0.c0, t1.c2)) AND ((rt0.c1, t1.c64, t1.c2)))))) IS TRUE)  as count FROM vt0, t1, rt0, v0);
SELECT COUNT(*) FROM vt0, t1, rt0, v0 WHERE ((((((vt0.c0))!=((v0.c0))))<((((rt0.c0, v0.c0, t1.c0)) BETWEEN ((rt0.c2, rt0.c0, t1.c2)) AND ((rt0.c1, t1.c64, t1.c2))))));
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON (((vt0.c0 IN (x'', vt0.c0)))-(((vt0.c0) NOT NULL))) LEFT OUTER JOIN vt0 ON ((2.04220044E9) NOT BETWEEN (RTRIM(rt0.c2)) AND (CASE NULL  WHEN t1.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE t1.c2 END)) INNER JOIN t1 ON 0.23309171770985837 WHERE (ABS(((t1.c2)+(vt0.c0)))) ORDER BY (((rt0.c0, vt0.c0, vt0.c0))<=((t1.c0, rt0.c0, rt0.c0))) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((ABS(((t1.c2)+(vt0.c0)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (((vt0.c0 IN (x'', vt0.c0)))-(((vt0.c0) NOT NULL))) LEFT OUTER JOIN vt0 ON ((2.04220044E9) NOT BETWEEN (RTRIM(rt0.c2)) AND (CASE NULL  WHEN t1.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE t1.c2 END)) INNER JOIN t1 ON 0.23309171770985837 ORDER BY (((rt0.c0, vt0.c0, vt0.c0))<=((t1.c0, rt0.c0, rt0.c0))) COLLATE BINARY);
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON (((vt0.c0 IN (x'', vt0.c0)))-(((vt0.c0) NOT NULL))) LEFT OUTER JOIN vt0 ON ((2.04220044E9) NOT BETWEEN (RTRIM(rt0.c2)) AND (CASE NULL  WHEN t1.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE t1.c2 END)) INNER JOIN t1 ON 0.23309171770985837 WHERE (ABS(((t1.c2)+(vt0.c0)))) ORDER BY (((rt0.c0, vt0.c0, vt0.c0))<=((t1.c0, rt0.c0, rt0.c0))) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((ABS(((t1.c2)+(vt0.c0)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (((vt0.c0 IN (x'', vt0.c0)))-(((vt0.c0) NOT NULL))) LEFT OUTER JOIN vt0 ON ((2.04220044E9) NOT BETWEEN (RTRIM(rt0.c2)) AND (CASE NULL  WHEN t1.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE t1.c2 END)) INNER JOIN t1 ON 0.23309171770985837 ORDER BY (((rt0.c0, vt0.c0, vt0.c0))<=((t1.c0, rt0.c0, rt0.c0))) COLLATE BINARY);
SELECT ALL * FROM t1 WHERE ((((((((((((t1.c2))<>((t1.c2))))AND(((t1.c2) NOTNULL))))AND(NULL)))OR(0.9360767905506753)))AND(((((((((t1.c0)OR(t1.c0)))AND(t1.c64)))AND(t1.c0)))OR(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((t1.c2))!=((t1.c2))))AND(((t1.c2) NOTNULL))))AND(NULL)))OR(0.9360767905506753)))AND(((((((((t1.c0)OR(t1.c0)))AND(t1.c64)))AND(t1.c0)))OR(t1.c0))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((((((((((t1.c2))<>((t1.c2))))AND(((t1.c2) NOTNULL))))AND(NULL)))OR(0.9360767905506753)))AND(((((((((t1.c0)OR(t1.c0)))AND(t1.c64)))AND(t1.c0)))OR(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((t1.c2))!=((t1.c2))))AND(((t1.c2) NOTNULL))))AND(NULL)))OR(0.9360767905506753)))AND(((((((((t1.c0)OR(t1.c0)))AND(t1.c64)))AND(t1.c0)))OR(t1.c0))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((((((((((t1.c2))<>((t1.c2))))AND(((t1.c2) NOTNULL))))AND(NULL)))OR(0.9360767905506753)))AND(((((((((t1.c0)OR(t1.c0)))AND(t1.c64)))AND(t1.c0)))OR(t1.c0)))));
SELECT COUNT(*) FROM v0, rt0 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (SQLITE_VERSION());
SELECT ALL COUNT(*) FROM v0, vt0 INDEXED BY i13 LEFT OUTER JOIN t1 ON t1.c64 WHERE ((+ (((t1.c64) NOT BETWEEN (v0.c0) AND (t1.c64))))) ORDER BY ((t1.c0 COLLATE RTRIM) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND ((NOT (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((t1.c64) NOT BETWEEN (v0.c0) AND (t1.c64))))) IS TRUE)  as count FROM v0, vt0 INDEXED BY i13 LEFT OUTER JOIN t1 ON t1.c64 ORDER BY ((t1.c0 COLLATE RTRIM) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND ((NOT (vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 INDEXED BY i13 LEFT OUTER JOIN t1 ON t1.c64 WHERE ((+ (((t1.c64) NOT BETWEEN (v0.c0) AND (t1.c64))))) ORDER BY ((t1.c0 COLLATE RTRIM) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND ((NOT (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((t1.c64) NOT BETWEEN (v0.c0) AND (t1.c64))))) IS TRUE)  as count FROM v0, vt0 INDEXED BY i13 LEFT OUTER JOIN t1 ON t1.c64 ORDER BY ((t1.c0 COLLATE RTRIM) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND ((NOT (vt0.c0))))  NULLS LAST);
SELECT * FROM vt0, t1 WHERE (CAST(((((t1.c64)AND(t1.c64)))AND(t1.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t1.c64)AND(t1.c64)))AND(t1.c2)) AS NUMERIC)) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE (CAST(((((t1.c64)AND(t1.c64)))AND(t1.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t1.c64)AND(t1.c64)))AND(t1.c2)) AS NUMERIC)) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE (CAST(((((t1.c64)AND(t1.c64)))AND(t1.c2)) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE ((((rt0.c2))<>((((t1.c2)<>(t1.c64)))))) ORDER BY ((t1.c2)OR((((('1085464428')AND(rt0.c1)))OR(NULL)))) ASC  NULLS LAST, ((vt0.c0) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2))<>((((t1.c2)!=(t1.c64)))))) IS TRUE)  as count FROM rt0, t1, vt0 ORDER BY ((t1.c2)OR((((('1085464428')AND(rt0.c1)))OR(NULL)))) ASC  NULLS LAST, ((vt0.c0) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE ((((rt0.c2))<>((((t1.c2)<>(t1.c64)))))) ORDER BY ((t1.c2)OR((((('1085464428')AND(rt0.c1)))OR(NULL)))) ASC  NULLS LAST, ((vt0.c0) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2))<>((((t1.c2)!=(t1.c64)))))) IS TRUE)  as count FROM rt0, t1, vt0 ORDER BY ((t1.c2)OR((((('1085464428')AND(rt0.c1)))OR(NULL)))) ASC  NULLS LAST, ((vt0.c0) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE ((((rt0.c2))<>((((t1.c2)<>(t1.c64)))))) ORDER BY ((t1.c2)OR((((('1085464428')AND(rt0.c1)))OR(NULL)))) ASC  NULLS LAST, ((vt0.c0) NOTNULL) DESC;
SELECT * FROM vt0, v0, t1 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c0 THEN vt0.c0 END IN ())) IS TRUE)  as count FROM vt0, v0, t1);
SELECT * FROM vt0, v0, t1 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c0 THEN vt0.c0 END IN ())) IS TRUE)  as count FROM vt0, v0, t1);
SELECT * FROM vt0, v0, t1 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 END IN ()));
SELECT ALL COUNT(*) FROM t1, v0, vt0 WHERE (NULL) ORDER BY ((((v0.c0) ISNULL)) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND ((t1.c2 IN (t1.c64, vt0.c0)))), ((((((v0.c0)OR(t1.c0)))OR(t1.c64))) BETWEEN (((v0.c0) IS TRUE)) AND (-1.201738003E9)) DESC  NULLS LAST, ((vt0.c0) IS FALSE) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1, v0, vt0 ORDER BY ((((v0.c0) ISNULL)) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND ((t1.c2 IN (t1.c64, vt0.c0)))), ((((((v0.c0)OR(t1.c0)))OR(t1.c64))) BETWEEN (((v0.c0) IS TRUE)) AND (-1.201738003E9)) DESC  NULLS LAST, ((vt0.c0) IS FALSE) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM t1, v0, vt0 WHERE (NULL) ORDER BY ((((v0.c0) ISNULL)) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND ((t1.c2 IN (t1.c64, vt0.c0)))), ((((((v0.c0)OR(t1.c0)))OR(t1.c64))) BETWEEN (((v0.c0) IS TRUE)) AND (-1.201738003E9)) DESC  NULLS LAST, ((vt0.c0) IS FALSE) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1, v0, vt0 ORDER BY ((((v0.c0) ISNULL)) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND ((t1.c2 IN (t1.c64, vt0.c0)))), ((((((v0.c0)OR(t1.c0)))OR(t1.c64))) BETWEEN (((v0.c0) IS TRUE)) AND (-1.201738003E9)) DESC  NULLS LAST, ((vt0.c0) IS FALSE) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM t1, v0, vt0 WHERE (NULL) ORDER BY ((((v0.c0) ISNULL)) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND ((t1.c2 IN (t1.c64, vt0.c0)))), ((((((v0.c0)OR(t1.c0)))OR(t1.c64))) BETWEEN (((v0.c0) IS TRUE)) AND (-1.201738003E9)) DESC  NULLS LAST, ((vt0.c0) IS FALSE) COLLATE BINARY ASC;
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON CAST(((((rt0.c0)AND(0.4586092709377382)))AND(rt0.c2)) AS TEXT) FULL OUTER JOIN vt0 ON (((((rt0.c1))!=((v0.c0))))+(rt0.c1 COLLATE RTRIM)) WHERE (((v0.c0) IS FALSE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c0) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON CAST(((((rt0.c0)AND(0.4586092709377382)))AND(rt0.c2)) AS TEXT) FULL OUTER JOIN vt0 ON (((((rt0.c1))<>((v0.c0))))+(rt0.c1 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON CAST(((((rt0.c0)AND(0.4586092709377382)))AND(rt0.c2)) AS TEXT) FULL OUTER JOIN vt0 ON (((((rt0.c1))!=((v0.c0))))+(rt0.c1 COLLATE RTRIM)) WHERE (((v0.c0) IS FALSE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c0) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON CAST(((((rt0.c0)AND(0.4586092709377382)))AND(rt0.c2)) AS TEXT) FULL OUTER JOIN vt0 ON (((((rt0.c1))<>((v0.c0))))+(rt0.c1 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON CAST(((((rt0.c0)AND(0.4586092709377382)))AND(rt0.c2)) AS TEXT) FULL OUTER JOIN vt0 ON (((((rt0.c1))!=((v0.c0))))+(rt0.c1 COLLATE RTRIM)) WHERE (((v0.c0) IS FALSE) COLLATE BINARY);
SELECT ALL * FROM t1, vt0 WHERE ((((((vt0.c0))<((t1.c0))))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<((t1.c0))))OR(vt0.c0))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE ((((((vt0.c0))<((t1.c0))))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<((t1.c0))))OR(vt0.c0))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE ((((((vt0.c0))<((t1.c0))))OR(vt0.c0)));
SELECT ALL * FROM rt0, t1 NATURAL JOIN vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, t1 NATURAL JOIN vt0);
SELECT ALL * FROM rt0, t1 NATURAL JOIN vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, t1 NATURAL JOIN vt0);
SELECT ALL * FROM rt0, t1 NATURAL JOIN vt0 WHERE (rt0.c1);
SELECT * FROM t1, v0, vt0, rt0 WHERE (((vt0.c0 COLLATE RTRIM)==('4R'))) ORDER BY CAST(0.24927073640517794 AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)==('4R'))) IS TRUE)  as count FROM t1, v0, vt0, rt0 ORDER BY CAST(0.24927073640517794 AS REAL) DESC  NULLS LAST);
SELECT * FROM t1, v0, vt0, rt0 WHERE (((vt0.c0 COLLATE RTRIM)==('4R'))) ORDER BY CAST(0.24927073640517794 AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)==('4R'))) IS TRUE)  as count FROM t1, v0, vt0, rt0 ORDER BY CAST(0.24927073640517794 AS REAL) DESC  NULLS LAST);
SELECT * FROM t1, v0, vt0, rt0 WHERE (((vt0.c0 COLLATE RTRIM)==('4R'))) ORDER BY CAST(0.24927073640517794 AS REAL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END)) AND (((((rt0.c2))==((rt0.c2))))))) ORDER BY CASE ((rt0.c2) NOT BETWEEN ('1531765251') AND (rt0.c2))  WHEN ((rt0.c2)>(rt0.c1)) THEN (~ (rt0.c1)) ELSE ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)) END  NULLS LAST, LIKELIHOOD(TYPEOF(rt0.c1), 0.5155830086596884)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END)) AND (((((rt0.c2))==((rt0.c2))))))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c2) NOT BETWEEN ('1531765251') AND (rt0.c2))  WHEN ((rt0.c2)>(rt0.c1)) THEN (~ (rt0.c1)) ELSE ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)) END  NULLS LAST, LIKELIHOOD(TYPEOF(rt0.c1), 0.5155830086596884)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END)) AND (((((rt0.c2))==((rt0.c2))))))) ORDER BY CASE ((rt0.c2) NOT BETWEEN ('1531765251') AND (rt0.c2))  WHEN ((rt0.c2)>(rt0.c1)) THEN (~ (rt0.c1)) ELSE ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)) END  NULLS LAST, LIKELIHOOD(TYPEOF(rt0.c1), 0.5155830086596884)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END)) AND (((((rt0.c2))==((rt0.c2))))))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c2) NOT BETWEEN ('1531765251') AND (rt0.c2))  WHEN ((rt0.c2)>(rt0.c1)) THEN (~ (rt0.c1)) ELSE ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)) END  NULLS LAST, LIKELIHOOD(TYPEOF(rt0.c1), 0.5155830086596884)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END)) AND (((((rt0.c2))==((rt0.c2))))))) ORDER BY CASE ((rt0.c2) NOT BETWEEN ('1531765251') AND (rt0.c2))  WHEN ((rt0.c2)>(rt0.c1)) THEN (~ (rt0.c1)) ELSE ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)) END  NULLS LAST, LIKELIHOOD(TYPEOF(rt0.c1), 0.5155830086596884)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 FULL OUTER JOIN v0 ON CASE WHEN UNLIKELY(DISTINCT v0.c0) THEN '-1731488913' WHEN ((rt0.c1)>(v0.c0)) THEN CAST(rt0.c0 AS BLOB) WHEN ((((((((rt0.c0)OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)) THEN (((rt0.c2, v0.c0, v0.c0, vt0.c0, rt0.c0))<>((v0.c0, rt0.c2, rt0.c1, rt0.c1, rt0.c2))) END WHERE (rt0.c2) ORDER BY x'0b83';
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN v0 ON CASE WHEN UNLIKELY(DISTINCT v0.c0) THEN '-1731488913' WHEN ((rt0.c1)>(v0.c0)) THEN CAST(rt0.c0 AS BLOB) WHEN ((((((((rt0.c0)OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)) THEN (((rt0.c2, v0.c0, v0.c0, vt0.c0, rt0.c0))!=((v0.c0, rt0.c2, rt0.c1, rt0.c1, rt0.c2))) END ORDER BY x'0b83');
SELECT ALL COUNT(*) FROM vt0, rt0 FULL OUTER JOIN v0 ON CASE WHEN UNLIKELY(DISTINCT v0.c0) THEN '-1731488913' WHEN ((rt0.c1)>(v0.c0)) THEN CAST(rt0.c0 AS BLOB) WHEN ((((((((rt0.c0)OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)) THEN (((rt0.c2, v0.c0, v0.c0, vt0.c0, rt0.c0))<>((v0.c0, rt0.c2, rt0.c1, rt0.c1, rt0.c2))) END WHERE (rt0.c2) ORDER BY x'0b83';
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN v0 ON CASE WHEN UNLIKELY(DISTINCT v0.c0) THEN '-1731488913' WHEN ((rt0.c1)>(v0.c0)) THEN CAST(rt0.c0 AS BLOB) WHEN ((((((((rt0.c0)OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)) THEN (((rt0.c2, v0.c0, v0.c0, vt0.c0, rt0.c0))!=((v0.c0, rt0.c2, rt0.c1, rt0.c1, rt0.c2))) END ORDER BY x'0b83');
SELECT ALL COUNT(*) FROM vt0, rt0 FULL OUTER JOIN v0 ON CASE WHEN UNLIKELY(DISTINCT v0.c0) THEN '-1731488913' WHEN ((rt0.c1)>(v0.c0)) THEN CAST(rt0.c0 AS BLOB) WHEN ((((((((rt0.c0)OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)) THEN (((rt0.c2, v0.c0, v0.c0, vt0.c0, rt0.c0))<>((v0.c0, rt0.c2, rt0.c1, rt0.c1, rt0.c2))) END WHERE (rt0.c2) ORDER BY x'0b83';
SELECT ALL COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN v0 ON json_extract(CASE WHEN rt0.c2 THEN x'' END, (((614768362, t1.c64, t1.c2)) NOT BETWEEN ((vt0.c0, rt0.c0, t1.c64)) AND ((rt0.c1, rt0.c2, rt0.c1)))) FULL OUTER JOIN t1 ON (- (t1.c2 COLLATE NOCASE)) WHERE (rt0.c2) ORDER BY (((t1.c0) BETWEEN (rt0.c2) AND (rt0.c2)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN v0 ON json_extract(CASE WHEN rt0.c2 THEN x'' END, (((614768362, t1.c64, t1.c2)) NOT BETWEEN ((vt0.c0, rt0.c0, t1.c64)) AND ((rt0.c1, rt0.c2, rt0.c1)))) FULL OUTER JOIN t1 ON (- (t1.c2 COLLATE NOCASE)) ORDER BY (((t1.c0) BETWEEN (rt0.c2) AND (rt0.c2)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN v0 ON json_extract(CASE WHEN rt0.c2 THEN x'' END, (((614768362, t1.c64, t1.c2)) NOT BETWEEN ((vt0.c0, rt0.c0, t1.c64)) AND ((rt0.c1, rt0.c2, rt0.c1)))) FULL OUTER JOIN t1 ON (- (t1.c2 COLLATE NOCASE)) WHERE (rt0.c2) ORDER BY (((t1.c0) BETWEEN (rt0.c2) AND (rt0.c2)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN v0 ON json_extract(CASE WHEN rt0.c2 THEN x'' END, (((614768362, t1.c64, t1.c2)) NOT BETWEEN ((vt0.c0, rt0.c0, t1.c64)) AND ((rt0.c1, rt0.c2, rt0.c1)))) FULL OUTER JOIN t1 ON (- (t1.c2 COLLATE NOCASE)) ORDER BY (((t1.c0) BETWEEN (rt0.c2) AND (rt0.c2)) IN ())  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (((COALESCE(t1.c64, t1.c0))>=(((t1.c0) NOTNULL)))) ORDER BY NULLIF(DISTINCT ((('-425530200', t1.c64, t1.c2)) NOT BETWEEN ((t1.c0, '7\n\nfiw\y', t1.c0)) AND ((t1.c64, t1.c0, t1.c0))), (((x'b416'))!=(('-1257260017')))) DESC, (~ (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c2)))) DESC, ((t1.c2) IS FALSE) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((COALESCE(t1.c64, t1.c0))>=(((t1.c0) NOTNULL)))) IS TRUE)  as count FROM t1 ORDER BY NULLIF(DISTINCT ((('-425530200', t1.c64, t1.c2)) NOT BETWEEN ((t1.c0, '7\n\nfiw\y', t1.c0)) AND ((t1.c64, t1.c0, t1.c0))), (((x'b416'))!=(('-1257260017')))) DESC, (~ (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c2)))) DESC, ((t1.c2) IS FALSE) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM t1 WHERE (((COALESCE(t1.c64, t1.c0))>=(((t1.c0) NOTNULL)))) ORDER BY NULLIF(DISTINCT ((('-425530200', t1.c64, t1.c2)) NOT BETWEEN ((t1.c0, '7\n\nfiw\y', t1.c0)) AND ((t1.c64, t1.c0, t1.c0))), (((x'b416'))!=(('-1257260017')))) DESC, (~ (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c2)))) DESC, ((t1.c2) IS FALSE) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((COALESCE(t1.c64, t1.c0))>=(((t1.c0) NOTNULL)))) IS TRUE)  as count FROM t1 ORDER BY NULLIF(DISTINCT ((('-425530200', t1.c64, t1.c2)) NOT BETWEEN ((t1.c0, '7\n\nfiw\y', t1.c0)) AND ((t1.c64, t1.c0, t1.c0))), (((x'b416'))!=(('-1257260017')))) DESC, (~ (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c2)))) DESC, ((t1.c2) IS FALSE) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM t1 WHERE (((COALESCE(t1.c64, t1.c0))>=(((t1.c0) NOTNULL)))) ORDER BY NULLIF(DISTINCT ((('-425530200', t1.c64, t1.c2)) NOT BETWEEN ((t1.c0, '7\n\nfiw\y', t1.c0)) AND ((t1.c64, t1.c0, t1.c0))), (((x'b416'))!=(('-1257260017')))) DESC, (~ (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c2)))) DESC, ((t1.c2) IS FALSE) COLLATE BINARY  NULLS LAST;
SELECT * FROM vt0, rt0, t1 WHERE (CAST(((((-8.2053644E8)AND(t1.c64)))OR(t1.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((-8.2053644E8)AND(t1.c64)))OR(t1.c2)) AS TEXT)) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT * FROM vt0, rt0, t1 WHERE (CAST(((((-8.2053644E8)AND(t1.c64)))OR(t1.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((-8.2053644E8)AND(t1.c64)))OR(t1.c2)) AS TEXT)) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT * FROM vt0, rt0, t1 WHERE (CAST(((((-8.2053644E8)AND(t1.c64)))OR(t1.c2)) AS TEXT));
SELECT ALL COUNT(*) FROM t1, rt0 NATURAL JOIN v0 WHERE (CAST((v0.c0 IN ()) AS BLOB)) ORDER BY (CASE v0.c0  WHEN t1.c64 THEN rt0.c1 WHEN v0.c0 THEN 'bb' WHEN 0X5ac26351 THEN t1.c2 ELSE v0.c0 END IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM t1, rt0 NATURAL JOIN v0 ORDER BY (CASE v0.c0  WHEN t1.c64 THEN rt0.c1 WHEN v0.c0 THEN 'bb' WHEN 0X5ac26351 THEN t1.c2 ELSE v0.c0 END IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt0 NATURAL JOIN v0 WHERE (CAST((v0.c0 IN ()) AS BLOB)) ORDER BY (CASE v0.c0  WHEN t1.c64 THEN rt0.c1 WHEN v0.c0 THEN 'bb' WHEN 0X5ac26351 THEN t1.c2 ELSE v0.c0 END IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM t1, rt0 NATURAL JOIN v0 ORDER BY (CASE v0.c0  WHEN t1.c64 THEN rt0.c1 WHEN v0.c0 THEN 'bb' WHEN 0X5ac26351 THEN t1.c2 ELSE v0.c0 END IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt0 NATURAL JOIN v0 WHERE (CAST((v0.c0 IN ()) AS BLOB)) ORDER BY (CASE v0.c0  WHEN t1.c64 THEN rt0.c1 WHEN v0.c0 THEN 'bb' WHEN 0X5ac26351 THEN t1.c2 ELSE v0.c0 END IN ()) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))IS(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY UPPER(((((NULL)AND(vt0.c0)))OR(vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))IS(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY UPPER(((((NULL)AND(vt0.c0)))OR(vt0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))IS(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY UPPER(((((NULL)AND(vt0.c0)))OR(vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))IS(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY UPPER(((((NULL)AND(vt0.c0)))OR(vt0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))IS(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY UPPER(((((NULL)AND(vt0.c0)))OR(vt0.c0)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0 WHERE (ABS(DISTINCT CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (ABS(DISTINCT CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (ABS(DISTINCT CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END));
SELECT ALL COUNT(*) FROM v0, t1 WHERE (((((((t1.c64, t1.c64, t1.c2))<=((v0.c0, t1.c0, v0.c0)))))<=(((((t1.c2))<>((t1.c64))))))) ORDER BY (((t1.c64 IN ())) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c64, t1.c64, t1.c2))<=((v0.c0, t1.c0, v0.c0)))))<=(((((t1.c2))!=((t1.c64))))))) IS TRUE)  as count FROM v0, t1 ORDER BY (((t1.c64 IN ())) ISNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t1 WHERE (((((((t1.c64, t1.c64, t1.c2))<=((v0.c0, t1.c0, v0.c0)))))<=(((((t1.c2))<>((t1.c64))))))) ORDER BY (((t1.c64 IN ())) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c64, t1.c64, t1.c2))<=((v0.c0, t1.c0, v0.c0)))))<=(((((t1.c2))!=((t1.c64))))))) IS TRUE)  as count FROM v0, t1 ORDER BY (((t1.c64 IN ())) ISNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t1 WHERE (((((((t1.c64, t1.c64, t1.c2))<=((v0.c0, t1.c0, v0.c0)))))<=(((((t1.c2))<>((t1.c64))))))) ORDER BY (((t1.c64 IN ())) ISNULL) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0, t1 WHERE ((((~ (v0.c0)))LIKE(((((((((((((rt0.c1)AND('1911137832')))AND(rt0.c1)))OR(t1.c2)))OR(rt0.c0)))AND('1426030502')))OR(rt0.c0))))) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (v0.c0)))LIKE(((((((((((((rt0.c1)AND('1911137832')))AND(rt0.c1)))OR(t1.c2)))OR(rt0.c0)))AND('1426030502')))OR(rt0.c0))))) IS TRUE)  as count FROM rt0, v0, t1 ORDER BY rt0.c1  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0, t1 WHERE ((((~ (v0.c0)))LIKE(((((((((((((rt0.c1)AND('1911137832')))AND(rt0.c1)))OR(t1.c2)))OR(rt0.c0)))AND('1426030502')))OR(rt0.c0))))) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (v0.c0)))LIKE(((((((((((((rt0.c1)AND('1911137832')))AND(rt0.c1)))OR(t1.c2)))OR(rt0.c0)))AND('1426030502')))OR(rt0.c0))))) IS TRUE)  as count FROM rt0, v0, t1 ORDER BY rt0.c1  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0, t1 WHERE ((((~ (v0.c0)))LIKE(((((((((((((rt0.c1)AND('1911137832')))AND(rt0.c1)))OR(t1.c2)))OR(rt0.c0)))AND('1426030502')))OR(rt0.c0))))) ORDER BY rt0.c1  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((NOT (((((v0.c0)AND(v0.c0)))AND(NULL)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((v0.c0)AND(v0.c0)))AND(NULL))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((NOT (((((v0.c0)AND(v0.c0)))AND(NULL)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((v0.c0)AND(v0.c0)))AND(NULL))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((NOT (((((v0.c0)AND(v0.c0)))AND(NULL)))));
SELECT ALL * FROM t1, vt0, v0 WHERE (((((t1.c64)<(t1.c64))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c64)<(t1.c64))) NOT NULL)) IS TRUE)  as count FROM t1, vt0, v0);
SELECT ALL * FROM t1, vt0, v0 WHERE (((((t1.c64)<(t1.c64))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c64)<(t1.c64))) NOT NULL)) IS TRUE)  as count FROM t1, vt0, v0);
SELECT ALL * FROM t1, vt0, v0 WHERE (((((t1.c64)<(t1.c64))) NOT NULL));
SELECT ALL COUNT(*) FROM t1, v0 WHERE ((((((NOT (v0.c0)))AND(((t1.c64) BETWEEN (t1.c0) AND (t1.c2)))))OR(((t1.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((((NOT (v0.c0)))AND(((t1.c64) BETWEEN (t1.c0) AND (t1.c2)))))OR(((t1.c2) NOT NULL)))) IS TRUE)  as count FROM t1, v0);
SELECT ALL COUNT(*) FROM t1, v0 WHERE ((((((NOT (v0.c0)))AND(((t1.c64) BETWEEN (t1.c0) AND (t1.c2)))))OR(((t1.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((((NOT (v0.c0)))AND(((t1.c64) BETWEEN (t1.c0) AND (t1.c2)))))OR(((t1.c2) NOT NULL)))) IS TRUE)  as count FROM t1, v0);
SELECT ALL COUNT(*) FROM t1, v0 WHERE ((((((NOT (v0.c0)))AND(((t1.c64) BETWEEN (t1.c0) AND (t1.c2)))))OR(((t1.c2) NOT NULL))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((('') NOT BETWEEN ((('444407961') NOT BETWEEN (v0.c0) AND (v0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY vt0.c0  NULLS FIRST, (~ (NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('') NOT BETWEEN ((('444407961') NOT BETWEEN (v0.c0) AND (v0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0, vt0 ORDER BY vt0.c0  NULLS FIRST, (~ (NULL)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((('') NOT BETWEEN ((('444407961') NOT BETWEEN (v0.c0) AND (v0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY vt0.c0  NULLS FIRST, (~ (NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('') NOT BETWEEN ((('444407961') NOT BETWEEN (v0.c0) AND (v0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0, vt0 ORDER BY vt0.c0  NULLS FIRST, (~ (NULL)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((('') NOT BETWEEN ((('444407961') NOT BETWEEN (v0.c0) AND (v0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY vt0.c0  NULLS FIRST, (~ (NULL)) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (((json_remove(x'', vt0.c0)) IS FALSE)) ORDER BY GLOB(0.015160597707591483, vt0.c0) DESC  NULLS FIRST, CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS TEXT), (vt0.c0 COLLATE BINARY IN ());
SELECT SUM(count) FROM (SELECT ALL ((((json_remove(x'', vt0.c0)) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY GLOB(0.015160597707591483, vt0.c0) DESC  NULLS FIRST, CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS TEXT), (vt0.c0 COLLATE BINARY IN ()));
SELECT * FROM vt0 WHERE (((json_remove(x'', vt0.c0)) IS FALSE)) ORDER BY GLOB(0.015160597707591483, vt0.c0) DESC  NULLS FIRST, CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS TEXT), (vt0.c0 COLLATE BINARY IN ());
SELECT SUM(count) FROM (SELECT ALL ((((json_remove(x'', vt0.c0)) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY GLOB(0.015160597707591483, vt0.c0) DESC  NULLS FIRST, CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS TEXT), (vt0.c0 COLLATE BINARY IN ()));
SELECT ALL * FROM rt0 FULL OUTER JOIN t1 ON (+ ((NOT (t1.c0)))) WHERE (((- (rt0.c1)) IN ((~ (t1.c0))))) ORDER BY DATE(((rt0.c2) NOTNULL), t1.c0 COLLATE NOCASE, ((((t1.c0)AND(rt0.c1)))AND(rt0.c1)))  NULLS LAST, ((CAST(rt0.c1 AS TEXT)) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((- (rt0.c1)) IN ((~ (t1.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON (+ ((NOT (t1.c0)))) ORDER BY DATE(((rt0.c2) NOTNULL), t1.c0 COLLATE NOCASE, ((((t1.c0)AND(rt0.c1)))AND(rt0.c1)))  NULLS LAST, ((CAST(rt0.c1 AS TEXT)) NOT NULL) ASC  NULLS LAST);
SELECT ALL * FROM rt0 FULL OUTER JOIN t1 ON (+ ((NOT (t1.c0)))) WHERE (((- (rt0.c1)) IN ((~ (t1.c0))))) ORDER BY DATE(((rt0.c2) NOTNULL), t1.c0 COLLATE NOCASE, ((((t1.c0)AND(rt0.c1)))AND(rt0.c1)))  NULLS LAST, ((CAST(rt0.c1 AS TEXT)) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((- (rt0.c1)) IN ((~ (t1.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON (+ ((NOT (t1.c0)))) ORDER BY DATE(((rt0.c2) NOTNULL), t1.c0 COLLATE NOCASE, ((((t1.c0)AND(rt0.c1)))AND(rt0.c1)))  NULLS LAST, ((CAST(rt0.c1 AS TEXT)) NOT NULL) ASC  NULLS LAST);
SELECT ALL * FROM rt0 FULL OUTER JOIN t1 ON (+ ((NOT (t1.c0)))) WHERE (((- (rt0.c1)) IN ((~ (t1.c0))))) ORDER BY DATE(((rt0.c2) NOTNULL), t1.c0 COLLATE NOCASE, ((((t1.c0)AND(rt0.c1)))AND(rt0.c1)))  NULLS LAST, ((CAST(rt0.c1 AS TEXT)) NOT NULL) ASC  NULLS LAST;
SELECT ALL * FROM rt0, t1 LEFT OUTER JOIN vt0 ON CAST(CASE WHEN rt0.c2 THEN t1.c2 ELSE rt0.c2 END AS BLOB) WHERE (HEX(CAST(t1.c2 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((HEX(CAST(t1.c2 AS BLOB))) IS TRUE)  as count FROM rt0, t1 LEFT OUTER JOIN vt0 ON CAST(CASE WHEN rt0.c2 THEN t1.c2 ELSE rt0.c2 END AS BLOB));
SELECT ALL * FROM rt0, t1 LEFT OUTER JOIN vt0 ON CAST(CASE WHEN rt0.c2 THEN t1.c2 ELSE rt0.c2 END AS BLOB) WHERE (HEX(CAST(t1.c2 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((HEX(CAST(t1.c2 AS BLOB))) IS TRUE)  as count FROM rt0, t1 LEFT OUTER JOIN vt0 ON CAST(CASE WHEN rt0.c2 THEN t1.c2 ELSE rt0.c2 END AS BLOB));
SELECT ALL * FROM rt0, t1 LEFT OUTER JOIN vt0 ON CAST(CASE WHEN rt0.c2 THEN t1.c2 ELSE rt0.c2 END AS BLOB) WHERE (HEX(CAST(t1.c2 AS BLOB)));
SELECT * FROM vt0, t1 INNER JOIN v0 ON ((((rt0.c0) NOT NULL)) NOTNULL) INNER JOIN rt0 ON CASE (((rt0.c2, vt0.c0, vt0.c0))>=((0Xffffffff813891a6, rt0.c2, t1.c2)))  WHEN (rt0.c0 IN (v0.c0)) THEN CAST(rt0.c0 AS REAL) END WHERE ((NOT (((('-1760081966', NULL, t1.c64)) BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((0.35552842130603934, t1.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((NOT (((('-1760081966', NULL, t1.c64)) BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((0.35552842130603934, t1.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0, t1 INNER JOIN v0 ON ((((rt0.c0) NOT NULL)) NOTNULL) INNER JOIN rt0 ON CASE (((rt0.c2, vt0.c0, vt0.c0))>=((0xffffffff813891a6, rt0.c2, t1.c2)))  WHEN (rt0.c0 IN (v0.c0)) THEN CAST(rt0.c0 AS REAL) END);
SELECT * FROM vt0, t1 INNER JOIN v0 ON ((((rt0.c0) NOT NULL)) NOTNULL) INNER JOIN rt0 ON CASE (((rt0.c2, vt0.c0, vt0.c0))>=((0Xffffffff813891a6, rt0.c2, t1.c2)))  WHEN (rt0.c0 IN (v0.c0)) THEN CAST(rt0.c0 AS REAL) END WHERE ((NOT (((('-1760081966', NULL, t1.c64)) BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((0.35552842130603934, t1.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((NOT (((('-1760081966', NULL, t1.c64)) BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((0.35552842130603934, t1.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0, t1 INNER JOIN v0 ON ((((rt0.c0) NOT NULL)) NOTNULL) INNER JOIN rt0 ON CASE (((rt0.c2, vt0.c0, vt0.c0))>=((0xffffffff813891a6, rt0.c2, t1.c2)))  WHEN (rt0.c0 IN (v0.c0)) THEN CAST(rt0.c0 AS REAL) END);
SELECT * FROM vt0, t1 INNER JOIN v0 ON ((((rt0.c0) NOT NULL)) NOTNULL) INNER JOIN rt0 ON CASE (((rt0.c2, vt0.c0, vt0.c0))>=((0Xffffffff813891a6, rt0.c2, t1.c2)))  WHEN (rt0.c0 IN (v0.c0)) THEN CAST(rt0.c0 AS REAL) END WHERE ((NOT (((('-1760081966', NULL, t1.c64)) BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((0.35552842130603934, t1.c0, vt0.c0))))));
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN v0 ON CAST(((((t1.c0)AND(t1.c64)))OR(t1.c2)) AS INTEGER) INNER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((t1.c2)<=(0.2740373485545081)))) AND (((('-130432980')-(t1.c0))))) WHERE (CASE ((rt0.c2) NOTNULL)  WHEN (((rt0.c1))<>((v0.c0))) THEN (~ (t1.c64)) END) ORDER BY ((CAST(v0.c0 AS BLOB))>=(((v0.c0)-(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2) NOTNULL)  WHEN (((rt0.c1))!=((v0.c0))) THEN (~ (t1.c64)) END) IS TRUE)  as count FROM t1 LEFT OUTER JOIN v0 ON CAST(((((t1.c0)AND(t1.c64)))OR(t1.c2)) AS INTEGER) INNER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((t1.c2)<=(0.2740373485545081)))) AND (((('-130432980')-(t1.c0))))) ORDER BY ((CAST(v0.c0 AS BLOB))>=(((v0.c0)-(rt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN v0 ON CAST(((((t1.c0)AND(t1.c64)))OR(t1.c2)) AS INTEGER) INNER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((t1.c2)<=(0.2740373485545081)))) AND (((('-130432980')-(t1.c0))))) WHERE (CASE ((rt0.c2) NOTNULL)  WHEN (((rt0.c1))<>((v0.c0))) THEN (~ (t1.c64)) END) ORDER BY ((CAST(v0.c0 AS BLOB))>=(((v0.c0)-(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2) NOTNULL)  WHEN (((rt0.c1))!=((v0.c0))) THEN (~ (t1.c64)) END) IS TRUE)  as count FROM t1 LEFT OUTER JOIN v0 ON CAST(((((t1.c0)AND(t1.c64)))OR(t1.c2)) AS INTEGER) INNER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((t1.c2)<=(0.2740373485545081)))) AND (((('-130432980')-(t1.c0))))) ORDER BY ((CAST(v0.c0 AS BLOB))>=(((v0.c0)-(rt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN v0 ON CAST(((((t1.c0)AND(t1.c64)))OR(t1.c2)) AS INTEGER) INNER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((t1.c2)<=(0.2740373485545081)))) AND (((('-130432980')-(t1.c0))))) WHERE (CASE ((rt0.c2) NOTNULL)  WHEN (((rt0.c1))<>((v0.c0))) THEN (~ (t1.c64)) END) ORDER BY ((CAST(v0.c0 AS BLOB))>=(((v0.c0)-(rt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt0 ON (+ (CASE NULL  WHEN vt0.c0 THEN 0.9603956297264065 ELSE t1.c0 END)) CROSS JOIN v0 ON (((t1.c64)) NOT BETWEEN ((vt0.c0)) AND (((- (t1.c2))))) WHERE (((((v0.c0) IS FALSE))%(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS FALSE))%(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t1 NOT INDEXED CROSS JOIN vt0 ON (+ (CASE NULL  WHEN vt0.c0 THEN 0.9603956297264065 ELSE t1.c0 END)) CROSS JOIN v0 ON (((t1.c64)) NOT BETWEEN ((vt0.c0)) AND (((- (t1.c2))))));
SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt0 ON (+ (CASE NULL  WHEN vt0.c0 THEN 0.9603956297264065 ELSE t1.c0 END)) CROSS JOIN v0 ON (((t1.c64)) NOT BETWEEN ((vt0.c0)) AND (((- (t1.c2))))) WHERE (((((v0.c0) IS FALSE))%(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS FALSE))%(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t1 NOT INDEXED CROSS JOIN vt0 ON (+ (CASE NULL  WHEN vt0.c0 THEN 0.9603956297264065 ELSE t1.c0 END)) CROSS JOIN v0 ON (((t1.c64)) NOT BETWEEN ((vt0.c0)) AND (((- (t1.c2))))));
SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt0 ON (+ (CASE NULL  WHEN vt0.c0 THEN 0.9603956297264065 ELSE t1.c0 END)) CROSS JOIN v0 ON (((t1.c64)) NOT BETWEEN ((vt0.c0)) AND (((- (t1.c2))))) WHERE (((((v0.c0) IS FALSE))%(vt0.c0 COLLATE BINARY)));
SELECT * FROM vt0, v0 WHERE (TRIM(DISTINCT v0.c0 COLLATE NOCASE, (((vt0.c0))<((vt0.c0))))) ORDER BY (((((vt0.c0) IS TRUE)))==(((('122177817')>>(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT v0.c0 COLLATE NOCASE, (((vt0.c0))<((vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((vt0.c0) IS TRUE)))==(((('122177817')>>(v0.c0))))));
SELECT * FROM vt0, v0 WHERE (TRIM(DISTINCT v0.c0 COLLATE NOCASE, (((vt0.c0))<((vt0.c0))))) ORDER BY (((((vt0.c0) IS TRUE)))==(((('122177817')>>(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT v0.c0 COLLATE NOCASE, (((vt0.c0))<((vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((vt0.c0) IS TRUE)))==(((('122177817')>>(v0.c0))))));
SELECT * FROM vt0, v0 WHERE (TRIM(DISTINCT v0.c0 COLLATE NOCASE, (((vt0.c0))<((vt0.c0))))) ORDER BY (((((vt0.c0) IS TRUE)))==(((('122177817')>>(v0.c0)))));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON rt0.c2 WHERE (CAST(rt0.c2 AS INTEGER) COLLATE RTRIM) ORDER BY (((((rt0.c0)) NOT BETWEEN ((NULL)) AND ((rt0.c1)))) BETWEEN (rt0.c0 COLLATE NOCASE) AND (rt0.c1)), ((rt0.c0 IN ()) IN ())  NULLS LAST, rt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON rt0.c2 ORDER BY (((((rt0.c0)) NOT BETWEEN ((NULL)) AND ((rt0.c1)))) BETWEEN (rt0.c0 COLLATE NOCASE) AND (rt0.c1)), ((rt0.c0 IN ()) IN ())  NULLS LAST, rt0.c1 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON rt0.c2 WHERE (CAST(rt0.c2 AS INTEGER) COLLATE RTRIM) ORDER BY (((((rt0.c0)) NOT BETWEEN ((NULL)) AND ((rt0.c1)))) BETWEEN (rt0.c0 COLLATE NOCASE) AND (rt0.c1)), ((rt0.c0 IN ()) IN ())  NULLS LAST, rt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON rt0.c2 ORDER BY (((((rt0.c0)) NOT BETWEEN ((NULL)) AND ((rt0.c1)))) BETWEEN (rt0.c0 COLLATE NOCASE) AND (rt0.c1)), ((rt0.c0 IN ()) IN ())  NULLS LAST, rt0.c1 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON rt0.c2 WHERE (CAST(rt0.c2 AS INTEGER) COLLATE RTRIM) ORDER BY (((((rt0.c0)) NOT BETWEEN ((NULL)) AND ((rt0.c1)))) BETWEEN (rt0.c0 COLLATE NOCASE) AND (rt0.c1)), ((rt0.c0 IN ()) IN ())  NULLS LAST, rt0.c1 DESC  NULLS LAST;
SELECT ALL * FROM vt0, rt0, t1, v0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, rt0, t1, v0);
SELECT ALL * FROM vt0, rt0, t1, v0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, rt0, t1, v0);
SELECT ALL * FROM vt0, rt0, t1, v0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0)IS NOT(v0.c0)))OR(CAST(v0.c0 AS TEXT))))AND(DATETIME(v0.c0, v0.c0, v0.c0)))) ORDER BY CAST(((v0.c0)>>(v0.c0)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)IS NOT(v0.c0)))OR(CAST(v0.c0 AS TEXT))))AND(DATETIME(v0.c0, v0.c0, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0)>>(v0.c0)) AS TEXT) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0)IS NOT(v0.c0)))OR(CAST(v0.c0 AS TEXT))))AND(DATETIME(v0.c0, v0.c0, v0.c0)))) ORDER BY CAST(((v0.c0)>>(v0.c0)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)IS NOT(v0.c0)))OR(CAST(v0.c0 AS TEXT))))AND(DATETIME(v0.c0, v0.c0, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0)>>(v0.c0)) AS TEXT) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0)IS NOT(v0.c0)))OR(CAST(v0.c0 AS TEXT))))AND(DATETIME(v0.c0, v0.c0, v0.c0)))) ORDER BY CAST(((v0.c0)>>(v0.c0)) AS TEXT) ASC;
SELECT ALL * FROM t1, vt0 FULL OUTER JOIN v0 ON (((('-200418700')>=(vt0.c0)))<(((((t1.c64)AND(t1.c64)))OR(t1.c0)))) WHERE (((((t1.c64)AND(t1.c2)))OR(t1.c0)) COLLATE RTRIM) ORDER BY ((((((x'c3b78cb0')OR(t1.c2)))AND(vt0.c0))) NOT BETWEEN (((((((((t1.c64)AND(t1.c64)))OR(t1.c64)))AND(t1.c0)))OR(t1.c64))) AND (((t1.c0) IS FALSE))) ASC  NULLS LAST, (((t1.c2, v0.c0, vt0.c0, NULL, v0.c0)) BETWEEN ((((t1.c64) IS TRUE), (~ (t1.c64)), ((vt0.c0)!=(v0.c0)), ((t1.c64)GLOB(v0.c0)), ((t1.c0) IS FALSE))) AND (((t1.c2 IN ()), ((((t1.c2)OR(x'')))AND(vt0.c0)), ((v0.c0) NOT NULL), (~ (vt0.c0)), LIKELY(v0.c0)))) DESC, x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c64)AND(t1.c2)))OR(t1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t1, vt0 FULL OUTER JOIN v0 ON (((('-200418700')>=(vt0.c0)))<(((((t1.c64)AND(t1.c64)))OR(t1.c0)))) ORDER BY ((((((x'c3b78cb0')OR(t1.c2)))AND(vt0.c0))) NOT BETWEEN (((((((((t1.c64)AND(t1.c64)))OR(t1.c64)))AND(t1.c0)))OR(t1.c64))) AND (((t1.c0) IS FALSE))) ASC  NULLS LAST, (((t1.c2, v0.c0, vt0.c0, NULL, v0.c0)) BETWEEN ((((t1.c64) IS TRUE), (~ (t1.c64)), ((vt0.c0)!=(v0.c0)), ((t1.c64)GLOB(v0.c0)), ((t1.c0) IS FALSE))) AND (((t1.c2 IN ()), ((((t1.c2)OR(x'')))AND(vt0.c0)), ((v0.c0) NOT NULL), (~ (vt0.c0)), LIKELY(v0.c0)))) DESC, x''  NULLS FIRST);
SELECT ALL * FROM t1, vt0 FULL OUTER JOIN v0 ON (((('-200418700')>=(vt0.c0)))<(((((t1.c64)AND(t1.c64)))OR(t1.c0)))) WHERE (((((t1.c64)AND(t1.c2)))OR(t1.c0)) COLLATE RTRIM) ORDER BY ((((((x'c3b78cb0')OR(t1.c2)))AND(vt0.c0))) NOT BETWEEN (((((((((t1.c64)AND(t1.c64)))OR(t1.c64)))AND(t1.c0)))OR(t1.c64))) AND (((t1.c0) IS FALSE))) ASC  NULLS LAST, (((t1.c2, v0.c0, vt0.c0, NULL, v0.c0)) BETWEEN ((((t1.c64) IS TRUE), (~ (t1.c64)), ((vt0.c0)!=(v0.c0)), ((t1.c64)GLOB(v0.c0)), ((t1.c0) IS FALSE))) AND (((t1.c2 IN ()), ((((t1.c2)OR(x'')))AND(vt0.c0)), ((v0.c0) NOT NULL), (~ (vt0.c0)), LIKELY(v0.c0)))) DESC, x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c64)AND(t1.c2)))OR(t1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t1, vt0 FULL OUTER JOIN v0 ON (((('-200418700')>=(vt0.c0)))<(((((t1.c64)AND(t1.c64)))OR(t1.c0)))) ORDER BY ((((((x'c3b78cb0')OR(t1.c2)))AND(vt0.c0))) NOT BETWEEN (((((((((t1.c64)AND(t1.c64)))OR(t1.c64)))AND(t1.c0)))OR(t1.c64))) AND (((t1.c0) IS FALSE))) ASC  NULLS LAST, (((t1.c2, v0.c0, vt0.c0, NULL, v0.c0)) BETWEEN ((((t1.c64) IS TRUE), (~ (t1.c64)), ((vt0.c0)!=(v0.c0)), ((t1.c64)GLOB(v0.c0)), ((t1.c0) IS FALSE))) AND (((t1.c2 IN ()), ((((t1.c2)OR(x'')))AND(vt0.c0)), ((v0.c0) NOT NULL), (~ (vt0.c0)), LIKELY(v0.c0)))) DESC, x''  NULLS FIRST);
SELECT ALL * FROM t1, vt0 FULL OUTER JOIN v0 ON (((('-200418700')>=(vt0.c0)))<(((((t1.c64)AND(t1.c64)))OR(t1.c0)))) WHERE (((((t1.c64)AND(t1.c2)))OR(t1.c0)) COLLATE RTRIM) ORDER BY ((((((x'c3b78cb0')OR(t1.c2)))AND(vt0.c0))) NOT BETWEEN (((((((((t1.c64)AND(t1.c64)))OR(t1.c64)))AND(t1.c0)))OR(t1.c64))) AND (((t1.c0) IS FALSE))) ASC  NULLS LAST, (((t1.c2, v0.c0, vt0.c0, NULL, v0.c0)) BETWEEN ((((t1.c64) IS TRUE), (~ (t1.c64)), ((vt0.c0)!=(v0.c0)), ((t1.c64)GLOB(v0.c0)), ((t1.c0) IS FALSE))) AND (((t1.c2 IN ()), ((((t1.c2)OR(x'')))AND(vt0.c0)), ((v0.c0) NOT NULL), (~ (vt0.c0)), LIKELY(v0.c0)))) DESC, x''  NULLS FIRST;
SELECT ALL * FROM vt0, t1 WHERE (LIKELY(DISTINCT ((((t1.c64)AND(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((((t1.c64)AND(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (LIKELY(DISTINCT ((((t1.c64)AND(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((((t1.c64)AND(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (LIKELY(DISTINCT ((((t1.c64)AND(vt0.c0)))AND(vt0.c0))));
SELECT * FROM v0, rt0 CROSS JOIN t1 ON (NOT (t1.c64)) COLLATE BINARY CROSS JOIN vt0 ON CAST(((rt0.c0)>('393453004')) AS BLOB) WHERE (((((((((0x60dcfab8)OR((((rt0.c0))==((t1.c2))))))OR(((rt0.c2) NOT BETWEEN (v0.c0) AND (t1.c0)))))AND(CASE t1.c0  WHEN t1.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END)))AND((((v0.c0, x'', rt0.c2, x'', 908514903)) NOT BETWEEN ((NULL, t1.c0, rt0.c1, t1.c64, t1.c64)) AND ((rt0.c2, rt0.c2, x'8f37be8d', t1.c0, t1.c64))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((0X60dcfab8)OR((((rt0.c0))=((t1.c2))))))OR(((rt0.c2) NOT BETWEEN (v0.c0) AND (t1.c0)))))AND(CASE t1.c0  WHEN t1.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END)))AND((((v0.c0, x'', rt0.c2, x'', 908514903)) NOT BETWEEN ((NULL, t1.c0, rt0.c1, t1.c64, t1.c64)) AND ((rt0.c2, rt0.c2, x'8f37be8d', t1.c0, t1.c64)))))) IS TRUE)  as count FROM v0, rt0 CROSS JOIN t1 ON (NOT (t1.c64)) COLLATE BINARY CROSS JOIN vt0 ON CAST(((rt0.c0)>('393453004')) AS BLOB));
SELECT * FROM v0, rt0 CROSS JOIN t1 ON (NOT (t1.c64)) COLLATE BINARY CROSS JOIN vt0 ON CAST(((rt0.c0)>('393453004')) AS BLOB) WHERE (((((((((0x60dcfab8)OR((((rt0.c0))==((t1.c2))))))OR(((rt0.c2) NOT BETWEEN (v0.c0) AND (t1.c0)))))AND(CASE t1.c0  WHEN t1.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END)))AND((((v0.c0, x'', rt0.c2, x'', 908514903)) NOT BETWEEN ((NULL, t1.c0, rt0.c1, t1.c64, t1.c64)) AND ((rt0.c2, rt0.c2, x'8f37be8d', t1.c0, t1.c64))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((0X60dcfab8)OR((((rt0.c0))=((t1.c2))))))OR(((rt0.c2) NOT BETWEEN (v0.c0) AND (t1.c0)))))AND(CASE t1.c0  WHEN t1.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END)))AND((((v0.c0, x'', rt0.c2, x'', 908514903)) NOT BETWEEN ((NULL, t1.c0, rt0.c1, t1.c64, t1.c64)) AND ((rt0.c2, rt0.c2, x'8f37be8d', t1.c0, t1.c64)))))) IS TRUE)  as count FROM v0, rt0 CROSS JOIN t1 ON (NOT (t1.c64)) COLLATE BINARY CROSS JOIN vt0 ON CAST(((rt0.c0)>('393453004')) AS BLOB));
SELECT * FROM v0, rt0 CROSS JOIN t1 ON (NOT (t1.c64)) COLLATE BINARY CROSS JOIN vt0 ON CAST(((rt0.c0)>('393453004')) AS BLOB) WHERE (((((((((0x60dcfab8)OR((((rt0.c0))==((t1.c2))))))OR(((rt0.c2) NOT BETWEEN (v0.c0) AND (t1.c0)))))AND(CASE t1.c0  WHEN t1.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END)))AND((((v0.c0, x'', rt0.c2, x'', 908514903)) NOT BETWEEN ((NULL, t1.c0, rt0.c1, t1.c64, t1.c64)) AND ((rt0.c2, rt0.c2, x'8f37be8d', t1.c0, t1.c64))))));
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(CAST(rt0.c2 AS REAL) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c2 AS REAL) AS TEXT)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(CAST(rt0.c2 AS REAL) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c2 AS REAL) AS TEXT)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(CAST(rt0.c2 AS REAL) AS TEXT));
SELECT COUNT(*) FROM t1 WHERE (TYPEOF(((0.15403427482790333) BETWEEN ('E[') AND (t1.c2))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((0.15403427482790333) BETWEEN ('E[') AND (t1.c2)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (TYPEOF(((0.15403427482790333) BETWEEN ('E[') AND (t1.c2))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((0.15403427482790333) BETWEEN ('E[') AND (t1.c2)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (TYPEOF(((0.15403427482790333) BETWEEN ('E[') AND (t1.c2))));
SELECT * FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS BLOB));
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c1, rt0.c2, v0.c0)) BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((v0.c0, rt0.c1, rt0.c2))) IN (0.2740373485545081 COLLATE BINARY, (~ (v0.c0)))) WHERE ((((NOT (v0.c0)))%((((rt0.c2))<>((rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c0)))%((((rt0.c2))!=((rt0.c1)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c1, rt0.c2, v0.c0)) BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((v0.c0, rt0.c1, rt0.c2))) IN (0.2740373485545081 COLLATE BINARY, (~ (v0.c0)))));
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c1, rt0.c2, v0.c0)) BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((v0.c0, rt0.c1, rt0.c2))) IN (0.2740373485545081 COLLATE BINARY, (~ (v0.c0)))) WHERE ((((NOT (v0.c0)))%((((rt0.c2))<>((rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c0)))%((((rt0.c2))!=((rt0.c1)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c1, rt0.c2, v0.c0)) BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((v0.c0, rt0.c1, rt0.c2))) IN (0.2740373485545081 COLLATE BINARY, (~ (v0.c0)))));
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c1, rt0.c2, v0.c0)) BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((v0.c0, rt0.c1, rt0.c2))) IN (0.2740373485545081 COLLATE BINARY, (~ (v0.c0)))) WHERE ((((NOT (v0.c0)))%((((rt0.c2))<>((rt0.c1))))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON HEX(DISTINCT ((v0.c0) BETWEEN (vt0.c0) AND (t1.c64))) FULL OUTER JOIN rt0 ON 0X1be8a942 LEFT OUTER JOIN t1 ON CASE WHEN t1.c2 THEN v0.c0 ELSE vt0.c0 END COLLATE NOCASE WHERE (rt0.c2) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON HEX(DISTINCT ((v0.c0) BETWEEN (vt0.c0) AND (t1.c64))) FULL OUTER JOIN rt0 ON 0x1be8a942 LEFT OUTER JOIN t1 ON CASE WHEN t1.c2 THEN v0.c0 ELSE vt0.c0 END COLLATE NOCASE ORDER BY rt0.c0);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON HEX(DISTINCT ((v0.c0) BETWEEN (vt0.c0) AND (t1.c64))) FULL OUTER JOIN rt0 ON 0X1be8a942 LEFT OUTER JOIN t1 ON CASE WHEN t1.c2 THEN v0.c0 ELSE vt0.c0 END COLLATE NOCASE WHERE (rt0.c2) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON HEX(DISTINCT ((v0.c0) BETWEEN (vt0.c0) AND (t1.c64))) FULL OUTER JOIN rt0 ON 0x1be8a942 LEFT OUTER JOIN t1 ON CASE WHEN t1.c2 THEN v0.c0 ELSE vt0.c0 END COLLATE NOCASE ORDER BY rt0.c0);
SELECT COUNT(*) FROM vt0 CROSS JOIN t1 ON (+ (((rt0.c0) NOT NULL))) INNER JOIN rt0 ON (((~ (rt0.c0))) NOT BETWEEN (0.1731658584026533) AND (t1.c0)) LEFT OUTER JOIN v0 ON ((((rt0.c0)%(t1.c64)))>=(v0.c0)) WHERE (HEX(DISTINCT CAST(v0.c0 AS NUMERIC))) ORDER BY CASE WHEN (NOT (t1.c2)) THEN ((rt0.c2)IS(v0.c0)) END;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT CAST(v0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON (+ (((rt0.c0) NOT NULL))) INNER JOIN rt0 ON (((~ (rt0.c0))) NOT BETWEEN (0.1731658584026533) AND (t1.c0)) LEFT OUTER JOIN v0 ON ((((rt0.c0)%(t1.c64)))>=(v0.c0)) ORDER BY CASE WHEN (NOT (t1.c2)) THEN ((rt0.c2)IS(v0.c0)) END);
SELECT COUNT(*) FROM vt0 CROSS JOIN t1 ON (+ (((rt0.c0) NOT NULL))) INNER JOIN rt0 ON (((~ (rt0.c0))) NOT BETWEEN (0.1731658584026533) AND (t1.c0)) LEFT OUTER JOIN v0 ON ((((rt0.c0)%(t1.c64)))>=(v0.c0)) WHERE (HEX(DISTINCT CAST(v0.c0 AS NUMERIC))) ORDER BY CASE WHEN (NOT (t1.c2)) THEN ((rt0.c2)IS(v0.c0)) END;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT CAST(v0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON (+ (((rt0.c0) NOT NULL))) INNER JOIN rt0 ON (((~ (rt0.c0))) NOT BETWEEN (0.1731658584026533) AND (t1.c0)) LEFT OUTER JOIN v0 ON ((((rt0.c0)%(t1.c64)))>=(v0.c0)) ORDER BY CASE WHEN (NOT (t1.c2)) THEN ((rt0.c2)IS(v0.c0)) END);
SELECT COUNT(*) FROM vt0 CROSS JOIN t1 ON (+ (((rt0.c0) NOT NULL))) INNER JOIN rt0 ON (((~ (rt0.c0))) NOT BETWEEN (0.1731658584026533) AND (t1.c0)) LEFT OUTER JOIN v0 ON ((((rt0.c0)%(t1.c64)))>=(v0.c0)) WHERE (HEX(DISTINCT CAST(v0.c0 AS NUMERIC))) ORDER BY CASE WHEN (NOT (t1.c2)) THEN ((rt0.c2)IS(v0.c0)) END;
SELECT ALL COUNT(*) FROM v0, vt0, t1, rt0 WHERE (x'') ORDER BY (((t1.c2)) NOT BETWEEN (((+ (t1.c64)))) AND ((rt0.c1 COLLATE BINARY))) DESC  NULLS LAST, t1.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, vt0, t1, rt0 ORDER BY (((t1.c2)) NOT BETWEEN (((+ (t1.c64)))) AND ((rt0.c1 COLLATE BINARY))) DESC  NULLS LAST, t1.c2  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, t1, rt0 WHERE (x'') ORDER BY (((t1.c2)) NOT BETWEEN (((+ (t1.c64)))) AND ((rt0.c1 COLLATE BINARY))) DESC  NULLS LAST, t1.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, vt0, t1, rt0 ORDER BY (((t1.c2)) NOT BETWEEN (((+ (t1.c64)))) AND ((rt0.c1 COLLATE BINARY))) DESC  NULLS LAST, t1.c2  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, t1, rt0 WHERE (x'') ORDER BY (((t1.c2)) NOT BETWEEN (((+ (t1.c64)))) AND ((rt0.c1 COLLATE BINARY))) DESC  NULLS LAST, t1.c2  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(0.15088883186581803)))<<((- (v0.c0))))) ORDER BY ((((((((((((((v0.c0) IS TRUE))OR('')))AND((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, '1085464428')) AND ((v0.c0, v0.c0, v0.c0))))))AND((+ (v0.c0)))))AND(((v0.c0)>=(v0.c0)))))AND(GLOB(v0.c0, v0.c0))))AND((NOT (v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(v0.c0)))OR(0.15088883186581803)))<<((- (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((((((((((((v0.c0) IS TRUE))OR('')))AND((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, '1085464428')) AND ((v0.c0, v0.c0, v0.c0))))))AND((+ (v0.c0)))))AND(((v0.c0)>=(v0.c0)))))AND(GLOB(v0.c0, v0.c0))))AND((NOT (v0.c0)))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(0.15088883186581803)))<<((- (v0.c0))))) ORDER BY ((((((((((((((v0.c0) IS TRUE))OR('')))AND((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, '1085464428')) AND ((v0.c0, v0.c0, v0.c0))))))AND((+ (v0.c0)))))AND(((v0.c0)>=(v0.c0)))))AND(GLOB(v0.c0, v0.c0))))AND((NOT (v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(v0.c0)))OR(0.15088883186581803)))<<((- (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((((((((((((v0.c0) IS TRUE))OR('')))AND((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, '1085464428')) AND ((v0.c0, v0.c0, v0.c0))))))AND((+ (v0.c0)))))AND(((v0.c0)>=(v0.c0)))))AND(GLOB(v0.c0, v0.c0))))AND((NOT (v0.c0)))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(0.15088883186581803)))<<((- (v0.c0))))) ORDER BY ((((((((((((((v0.c0) IS TRUE))OR('')))AND((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, '1085464428')) AND ((v0.c0, v0.c0, v0.c0))))))AND((+ (v0.c0)))))AND(((v0.c0)>=(v0.c0)))))AND(GLOB(v0.c0, v0.c0))))AND((NOT (v0.c0)))) ASC;
SELECT ALL * FROM vt0, v0, rt0, t1 WHERE (((((t1.c0) BETWEEN (rt0.c0) AND (rt0.c0)))*(((x'')/(t1.c64)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) BETWEEN (rt0.c0) AND (rt0.c0)))*(((x'')/(t1.c64))))) IS TRUE)  as count FROM vt0, v0, rt0, t1);
SELECT ALL * FROM vt0, v0, rt0, t1 WHERE (((((t1.c0) BETWEEN (rt0.c0) AND (rt0.c0)))*(((x'')/(t1.c64)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) BETWEEN (rt0.c0) AND (rt0.c0)))*(((x'')/(t1.c64))))) IS TRUE)  as count FROM vt0, v0, rt0, t1);
SELECT ALL * FROM vt0, v0, rt0, t1 WHERE (((((t1.c0) BETWEEN (rt0.c0) AND (rt0.c0)))*(((x'')/(t1.c64)))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (TYPEOF((~ (rt0.c2)))) ORDER BY UNLIKELY(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))), (((rt0.c2)-(rt0.c0)) IN (((((rt0.c1)OR(rt0.c2)))AND(v0.c0)), (- (rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF((~ (rt0.c2)))) IS TRUE)  as count FROM v0, rt0 ORDER BY UNLIKELY(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))), (((rt0.c2)-(rt0.c0)) IN (((((rt0.c1)OR(rt0.c2)))AND(v0.c0)), (- (rt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (TYPEOF((~ (rt0.c2)))) ORDER BY UNLIKELY(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))), (((rt0.c2)-(rt0.c0)) IN (((((rt0.c1)OR(rt0.c2)))AND(v0.c0)), (- (rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF((~ (rt0.c2)))) IS TRUE)  as count FROM v0, rt0 ORDER BY UNLIKELY(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))), (((rt0.c2)-(rt0.c0)) IN (((((rt0.c1)OR(rt0.c2)))AND(v0.c0)), (- (rt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (TYPEOF((~ (rt0.c2)))) ORDER BY UNLIKELY(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))), (((rt0.c2)-(rt0.c0)) IN (((((rt0.c1)OR(rt0.c2)))AND(v0.c0)), (- (rt0.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((v0.c0, v0.c0, rt0.c2))=((rt0.c0, rt0.c0, v0.c0))))%(((rt0.c2)/(rt0.c1))))) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT (((((((v0.c0, v0.c0, rt0.c2))==((rt0.c0, rt0.c0, v0.c0))))%(((rt0.c2)/(rt0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c1 DESC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((v0.c0, v0.c0, rt0.c2))=((rt0.c0, rt0.c0, v0.c0))))%(((rt0.c2)/(rt0.c1))))) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT (((((((v0.c0, v0.c0, rt0.c2))==((rt0.c0, rt0.c0, v0.c0))))%(((rt0.c2)/(rt0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c1 DESC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((v0.c0, v0.c0, rt0.c2))=((rt0.c0, rt0.c0, v0.c0))))%(((rt0.c2)/(rt0.c1))))) ORDER BY rt0.c1 DESC;
SELECT * FROM vt0, rt0, v0 WHERE ((((v0.c0 IN (rt0.c0)))%('114499629'))) ORDER BY (((NULL)) BETWEEN ((rt0.c0)) AND ((((v0.c0)!=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN (rt0.c0)))%('114499629'))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((NULL)) BETWEEN ((rt0.c0)) AND ((((v0.c0)<>(rt0.c0))))));
SELECT * FROM vt0, rt0, v0 WHERE ((((v0.c0 IN (rt0.c0)))%('114499629'))) ORDER BY (((NULL)) BETWEEN ((rt0.c0)) AND ((((v0.c0)!=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN (rt0.c0)))%('114499629'))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((NULL)) BETWEEN ((rt0.c0)) AND ((((v0.c0)<>(rt0.c0))))));
SELECT * FROM vt0, rt0, v0 WHERE ((((v0.c0 IN (rt0.c0)))%('114499629'))) ORDER BY (((NULL)) BETWEEN ((rt0.c0)) AND ((((v0.c0)!=(rt0.c0)))));
SELECT * FROM t1, rt0, v0, vt0 WHERE (TRIM(0.9202275150078882) COLLATE NOCASE) ORDER BY (NOT ((NOT (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(0.9202275150078882) COLLATE NOCASE) IS TRUE)  as count FROM t1, rt0, v0, vt0 ORDER BY (NOT ((NOT (rt0.c1)))) ASC);
SELECT * FROM t1, rt0, v0, vt0 WHERE (TRIM(0.9202275150078882) COLLATE NOCASE) ORDER BY (NOT ((NOT (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(0.9202275150078882) COLLATE NOCASE) IS TRUE)  as count FROM t1, rt0, v0, vt0 ORDER BY (NOT ((NOT (rt0.c1)))) ASC);
SELECT * FROM t1, rt0, v0, vt0 WHERE (TRIM(0.9202275150078882) COLLATE NOCASE) ORDER BY (NOT ((NOT (rt0.c1)))) ASC;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((((rt0.c2)AND(rt0.c1)))AND(t1.c64)) COLLATE NOCASE CROSS JOIN vt0 ON (t1.c0 IN (CAST(rt0.c0 AS NUMERIC), ((v0.c0)||(rt0.c0)))) RIGHT OUTER JOIN t1 ON (CAST(rt0.c2 AS TEXT) IN (((rt0.c1) ISNULL))) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((((rt0.c2)AND(rt0.c1)))AND(t1.c64)) COLLATE NOCASE CROSS JOIN vt0 ON (t1.c0 IN (CAST(rt0.c0 AS NUMERIC), ((v0.c0)||(rt0.c0)))) RIGHT OUTER JOIN t1 ON (CAST(rt0.c2 AS TEXT) IN (((rt0.c1) ISNULL))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((((rt0.c2)AND(rt0.c1)))AND(t1.c64)) COLLATE NOCASE CROSS JOIN vt0 ON (t1.c0 IN (CAST(rt0.c0 AS NUMERIC), ((v0.c0)||(rt0.c0)))) RIGHT OUTER JOIN t1 ON (CAST(rt0.c2 AS TEXT) IN (((rt0.c1) ISNULL))) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((((rt0.c2)AND(rt0.c1)))AND(t1.c64)) COLLATE NOCASE CROSS JOIN vt0 ON (t1.c0 IN (CAST(rt0.c0 AS NUMERIC), ((v0.c0)||(rt0.c0)))) RIGHT OUTER JOIN t1 ON (CAST(rt0.c2 AS TEXT) IN (((rt0.c1) ISNULL))));
SELECT * FROM vt0, t1, v0, rt0 WHERE (((v0.c0)GLOB(t1.c64))) ORDER BY ((rt0.c0 COLLATE BINARY) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((v0.c0)GLOB(t1.c64))) IS TRUE)  as count FROM vt0, t1, v0, rt0 ORDER BY ((rt0.c0 COLLATE BINARY) NOTNULL) DESC);
SELECT * FROM vt0, t1, v0, rt0 WHERE (((v0.c0)GLOB(t1.c64))) ORDER BY ((rt0.c0 COLLATE BINARY) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((v0.c0)GLOB(t1.c64))) IS TRUE)  as count FROM vt0, t1, v0, rt0 ORDER BY ((rt0.c0 COLLATE BINARY) NOTNULL) DESC);
SELECT * FROM vt0, t1, v0, rt0 WHERE (((v0.c0)GLOB(t1.c64))) ORDER BY ((rt0.c0 COLLATE BINARY) NOTNULL) DESC;
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE ((((x'', rt0.c0, NULL))>((NULLIF(DISTINCT rt0.c0, t1.c64), CASE t1.c64  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END, (~ (t1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((x'', rt0.c0, NULL))>((NULLIF(DISTINCT rt0.c0, t1.c64), CASE t1.c64  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END, (~ (t1.c0)))))) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE ((((x'', rt0.c0, NULL))>((NULLIF(DISTINCT rt0.c0, t1.c64), CASE t1.c64  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END, (~ (t1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((x'', rt0.c0, NULL))>((NULLIF(DISTINCT rt0.c0, t1.c64), CASE t1.c64  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END, (~ (t1.c0)))))) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE ((((x'', rt0.c0, NULL))>((NULLIF(DISTINCT rt0.c0, t1.c64), CASE t1.c64  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END, (~ (t1.c0))))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c1 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c1);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c1 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c1);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c1 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) COLLATE BINARY);
SELECT COUNT(*) FROM t1 INNER JOIN vt0 ON '0.9603956297264065' WHERE ((((t1.c2)) BETWEEN (((t1.c64 IN ()))) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((t1.c2)) BETWEEN (((t1.c64 IN ()))) AND ((vt0.c0)))) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON '0.9603956297264065');
SELECT COUNT(*) FROM t1 INNER JOIN vt0 ON '0.9603956297264065' WHERE ((((t1.c2)) BETWEEN (((t1.c64 IN ()))) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((t1.c2)) BETWEEN (((t1.c64 IN ()))) AND ((vt0.c0)))) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON '0.9603956297264065');
SELECT COUNT(*) FROM t1 INNER JOIN vt0 ON '0.9603956297264065' WHERE ((((t1.c2)) BETWEEN (((t1.c64 IN ()))) AND ((vt0.c0))));
SELECT ALL COUNT(*) FROM t1, vt0, v0 WHERE ((NOT ((- (t1.c2))))) ORDER BY (+ (((t1.c64) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT ((- (t1.c2))))) IS TRUE)  as count FROM t1, vt0, v0 ORDER BY (+ (((t1.c64) IS TRUE))) DESC);
SELECT ALL COUNT(*) FROM t1, vt0, v0 WHERE ((NOT ((- (t1.c2))))) ORDER BY (+ (((t1.c64) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT ((- (t1.c2))))) IS TRUE)  as count FROM t1, vt0, v0 ORDER BY (+ (((t1.c64) IS TRUE))) DESC);
SELECT ALL COUNT(*) FROM t1, vt0, v0 WHERE ((NOT ((- (t1.c2))))) ORDER BY (+ (((t1.c64) IS TRUE))) DESC;
SELECT * FROM t1, rt0 WHERE (rt0.c1) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t1, rt0 ORDER BY rt0.c0);
SELECT * FROM t1, rt0 WHERE (rt0.c1) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t1, rt0 ORDER BY rt0.c0);
SELECT * FROM t1, rt0 WHERE (rt0.c1) ORDER BY rt0.c0;
SELECT ALL * FROM rt0, vt0, t1, v0 WHERE ((- ((t1.c0 IN (t1.c0))))) ORDER BY (CAST(rt0.c0 AS REAL) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((t1.c0 IN (t1.c0))))) IS TRUE)  as count FROM rt0, vt0, t1, v0 ORDER BY (CAST(rt0.c0 AS REAL) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, t1, v0 WHERE ((- ((t1.c0 IN (t1.c0))))) ORDER BY (CAST(rt0.c0 AS REAL) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((t1.c0 IN (t1.c0))))) IS TRUE)  as count FROM rt0, vt0, t1, v0 ORDER BY (CAST(rt0.c0 AS REAL) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, t1, v0 WHERE ((- ((t1.c0 IN (t1.c0))))) ORDER BY (CAST(rt0.c0 AS REAL) IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM v0, vt0 WHERE (((((v0.c0) NOTNULL)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND (CAST(v0.c0 AS INTEGER)))) ORDER BY NULL DESC, (((vt0.c0))>(((v0.c0 IN (v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOTNULL)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND (CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0, vt0 ORDER BY NULL DESC, (((vt0.c0))>(((v0.c0 IN (v0.c0)))))  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (((((v0.c0) NOTNULL)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND (CAST(v0.c0 AS INTEGER)))) ORDER BY NULL DESC, (((vt0.c0))>(((v0.c0 IN (v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOTNULL)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND (CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0, vt0 ORDER BY NULL DESC, (((vt0.c0))>(((v0.c0 IN (v0.c0)))))  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (((((v0.c0) NOTNULL)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND (CAST(v0.c0 AS INTEGER)))) ORDER BY NULL DESC, (((vt0.c0))>(((v0.c0 IN (v0.c0)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ())) NOT BETWEEN (QUOTE(0.12663960655885786)) AND (UPPER(DISTINCT rt0.c2)))) ORDER BY ((rt0.c2 COLLATE BINARY) NOT BETWEEN ((+ (rt0.c2))) AND (CAST(rt0.c0 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) NOT BETWEEN (QUOTE(0.12663960655885786)) AND (UPPER(DISTINCT rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2 COLLATE BINARY) NOT BETWEEN ((+ (rt0.c2))) AND (CAST(rt0.c0 AS REAL))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ())) NOT BETWEEN (QUOTE(0.12663960655885786)) AND (UPPER(DISTINCT rt0.c2)))) ORDER BY ((rt0.c2 COLLATE BINARY) NOT BETWEEN ((+ (rt0.c2))) AND (CAST(rt0.c0 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) NOT BETWEEN (QUOTE(0.12663960655885786)) AND (UPPER(DISTINCT rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2 COLLATE BINARY) NOT BETWEEN ((+ (rt0.c2))) AND (CAST(rt0.c0 AS REAL))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ())) NOT BETWEEN (QUOTE(0.12663960655885786)) AND (UPPER(DISTINCT rt0.c2)))) ORDER BY ((rt0.c2 COLLATE BINARY) NOT BETWEEN ((+ (rt0.c2))) AND (CAST(rt0.c0 AS REAL))) ASC;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c0) NOT NULL) IN ()) CROSS JOIN v0 ON x'' WHERE (((rt0.c2 IN (rt0.c2)) IN ())) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN (rt0.c2)) IN ())) IS TRUE)  as count FROM vt0 NOT INDEXED RIGHT OUTER JOIN rt0 ON (((rt0.c0) NOT NULL) IN ()) CROSS JOIN v0 ON x'' ORDER BY rt0.c0);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c0) NOT NULL) IN ()) CROSS JOIN v0 ON x'' WHERE (((rt0.c2 IN (rt0.c2)) IN ())) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN (rt0.c2)) IN ())) IS TRUE)  as count FROM vt0 NOT INDEXED RIGHT OUTER JOIN rt0 ON (((rt0.c0) NOT NULL) IN ()) CROSS JOIN v0 ON x'' ORDER BY rt0.c0);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c0) NOT NULL) IN ()) CROSS JOIN v0 ON x'' WHERE (((rt0.c2 IN (rt0.c2)) IN ())) ORDER BY rt0.c0;
SELECT * FROM v0, vt0, rt0 WHERE ((((((rt0.c2, vt0.c0, rt0.c2))<=((rt0.c0, rt0.c0, rt0.c2)))) NOT BETWEEN (CASE NULL  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN NULL WHEN rt0.c2 THEN rt0.c2 END) AND ((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2, vt0.c0, rt0.c2))<=((rt0.c0, rt0.c0, rt0.c2)))) NOT BETWEEN (CASE NULL  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN NULL WHEN rt0.c2 THEN rt0.c2 END) AND ((~ (vt0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE ((((((rt0.c2, vt0.c0, rt0.c2))<=((rt0.c0, rt0.c0, rt0.c2)))) NOT BETWEEN (CASE NULL  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN NULL WHEN rt0.c2 THEN rt0.c2 END) AND ((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2, vt0.c0, rt0.c2))<=((rt0.c0, rt0.c0, rt0.c2)))) NOT BETWEEN (CASE NULL  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN NULL WHEN rt0.c2 THEN rt0.c2 END) AND ((~ (vt0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE ((((((rt0.c2, vt0.c0, rt0.c2))<=((rt0.c0, rt0.c0, rt0.c2)))) NOT BETWEEN (CASE NULL  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN NULL WHEN rt0.c2 THEN rt0.c2 END) AND ((~ (vt0.c0)))));
SELECT * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)!=(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) ORDER BY ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(CAST(v0.c0 AS TEXT))))AND((((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))))) ASC  NULLS FIRST, x'39d29f23' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)!=(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(CAST(v0.c0 AS TEXT))))AND((((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))))) ASC  NULLS FIRST, x'39d29f23' ASC  NULLS LAST);
SELECT * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)!=(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) ORDER BY ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(CAST(v0.c0 AS TEXT))))AND((((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))))) ASC  NULLS FIRST, x'39d29f23' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)!=(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(CAST(v0.c0 AS TEXT))))AND((((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))))) ASC  NULLS FIRST, x'39d29f23' ASC  NULLS LAST);
SELECT * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)!=(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) ORDER BY ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(CAST(v0.c0 AS TEXT))))AND((((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))))) ASC  NULLS FIRST, x'39d29f23' ASC  NULLS LAST;
SELECT * FROM t1 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CHANGES());
SELECT * FROM rt0, vt0, v0, t1 WHERE (((CAST(v0.c0 AS REAL))/(((t1.c2)==(t1.c64)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS REAL))/(((t1.c2)==(t1.c64))))) IS TRUE)  as count FROM rt0, vt0, v0, t1);
SELECT * FROM rt0, vt0, v0, t1 WHERE (((CAST(v0.c0 AS REAL))/(((t1.c2)==(t1.c64)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS REAL))/(((t1.c2)==(t1.c64))))) IS TRUE)  as count FROM rt0, vt0, v0, t1);
SELECT * FROM rt0, vt0, v0, t1 WHERE (((CAST(v0.c0 AS REAL))/(((t1.c2)==(t1.c64)))));
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c2);
SELECT ALL * FROM t1, vt0, v0, rt0 WHERE (((((((v0.c0)%(rt0.c2)))OR((~ (v0.c0)))))OR((NOT (t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)%(rt0.c2)))OR((~ (v0.c0)))))OR((NOT (t1.c2))))) IS TRUE)  as count FROM t1, vt0, v0, rt0);
SELECT ALL * FROM t1, vt0, v0, rt0 WHERE (((((((v0.c0)%(rt0.c2)))OR((~ (v0.c0)))))OR((NOT (t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)%(rt0.c2)))OR((~ (v0.c0)))))OR((NOT (t1.c2))))) IS TRUE)  as count FROM t1, vt0, v0, rt0);
SELECT ALL * FROM t1, vt0, v0, rt0 WHERE (((((((v0.c0)%(rt0.c2)))OR((~ (v0.c0)))))OR((NOT (t1.c2)))));
SELECT * FROM v0 WHERE (CASE WHEN ((v0.c0)<>(v0.c0)) THEN ((NULL)==(v0.c0)) ELSE v0.c0 COLLATE BINARY END) ORDER BY (CAST(0.9360767905506753 AS NUMERIC) IN ());
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0)!=(v0.c0)) THEN ((NULL)=(v0.c0)) ELSE v0.c0 COLLATE BINARY END) IS TRUE)  as count FROM v0 ORDER BY (CAST(0.9360767905506753 AS NUMERIC) IN ()));
SELECT * FROM v0 WHERE (CASE WHEN ((v0.c0)<>(v0.c0)) THEN ((NULL)==(v0.c0)) ELSE v0.c0 COLLATE BINARY END) ORDER BY (CAST(0.9360767905506753 AS NUMERIC) IN ());
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0)!=(v0.c0)) THEN ((NULL)=(v0.c0)) ELSE v0.c0 COLLATE BINARY END) IS TRUE)  as count FROM v0 ORDER BY (CAST(0.9360767905506753 AS NUMERIC) IN ()));
SELECT * FROM v0 WHERE (CASE WHEN ((v0.c0)<>(v0.c0)) THEN ((NULL)==(v0.c0)) ELSE v0.c0 COLLATE BINARY END) ORDER BY (CAST(0.9360767905506753 AS NUMERIC) IN ());
SELECT COUNT(*) FROM t1 CROSS JOIN v0 ON ((((v0.c0)IS(v0.c0))) BETWEEN (LIKE(t1.c2, t1.c64, 'n')) AND (((t1.c2)>=(t1.c2)))) WHERE (((((((v0.c0)OR(t1.c64)))AND(t1.c64))) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (t1.c64))) AND (TYPEOF(DISTINCT 0.30975113456933845)))) ORDER BY NULL ASC, ((((t1.c64) IS FALSE))>=(t1.c2 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(t1.c64)))AND(t1.c64))) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (t1.c64))) AND (TYPEOF(DISTINCT 0.30975113456933845)))) IS TRUE)  as count FROM t1 CROSS JOIN v0 ON ((((v0.c0)IS(v0.c0))) BETWEEN (LIKE(t1.c2, t1.c64, 'n')) AND (((t1.c2)>=(t1.c2)))) ORDER BY NULL ASC, ((((t1.c64) IS FALSE))>=(t1.c2 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1 CROSS JOIN v0 ON ((((v0.c0)IS(v0.c0))) BETWEEN (LIKE(t1.c2, t1.c64, 'n')) AND (((t1.c2)>=(t1.c2)))) WHERE (((((((v0.c0)OR(t1.c64)))AND(t1.c64))) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (t1.c64))) AND (TYPEOF(DISTINCT 0.30975113456933845)))) ORDER BY NULL ASC, ((((t1.c64) IS FALSE))>=(t1.c2 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(t1.c64)))AND(t1.c64))) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (t1.c64))) AND (TYPEOF(DISTINCT 0.30975113456933845)))) IS TRUE)  as count FROM t1 CROSS JOIN v0 ON ((((v0.c0)IS(v0.c0))) BETWEEN (LIKE(t1.c2, t1.c64, 'n')) AND (((t1.c2)>=(t1.c2)))) ORDER BY NULL ASC, ((((t1.c64) IS FALSE))>=(t1.c2 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1 CROSS JOIN v0 ON ((((v0.c0)IS(v0.c0))) BETWEEN (LIKE(t1.c2, t1.c64, 'n')) AND (((t1.c2)>=(t1.c2)))) WHERE (((((((v0.c0)OR(t1.c64)))AND(t1.c64))) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (t1.c64))) AND (TYPEOF(DISTINCT 0.30975113456933845)))) ORDER BY NULL ASC, ((((t1.c64) IS FALSE))>=(t1.c2 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c2)OR((rt0.c1 IN (rt0.c1)))))AND(0xffffffff9c613b8c)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)OR((rt0.c1 IN (rt0.c1)))))AND(0xffffffff9c613b8c))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c2)OR((rt0.c1 IN (rt0.c1)))))AND(0xffffffff9c613b8c)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)OR((rt0.c1 IN (rt0.c1)))))AND(0xffffffff9c613b8c))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c2)OR((rt0.c1 IN (rt0.c1)))))AND(0xffffffff9c613b8c)));
SELECT * FROM t1, vt0 CROSS JOIN rt0 ON rt0.c1 WHERE (((rt0.c0)/((((t1.c64))>=((NULL)))))) ORDER BY CAST(t1.c2 COLLATE RTRIM AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)/((((t1.c64))>=((NULL)))))) IS TRUE)  as count FROM t1, vt0 CROSS JOIN rt0 ON rt0.c1 ORDER BY CAST(t1.c2 COLLATE RTRIM AS NUMERIC) DESC  NULLS FIRST);
SELECT * FROM t1, vt0 CROSS JOIN rt0 ON rt0.c1 WHERE (((rt0.c0)/((((t1.c64))>=((NULL)))))) ORDER BY CAST(t1.c2 COLLATE RTRIM AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)/((((t1.c64))>=((NULL)))))) IS TRUE)  as count FROM t1, vt0 CROSS JOIN rt0 ON rt0.c1 ORDER BY CAST(t1.c2 COLLATE RTRIM AS NUMERIC) DESC  NULLS FIRST);
SELECT * FROM t1, vt0 CROSS JOIN rt0 ON rt0.c1 WHERE (((rt0.c0)/((((t1.c64))>=((NULL)))))) ORDER BY CAST(t1.c2 COLLATE RTRIM AS NUMERIC) DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((((((((((((t1.c0)OR(t1.c64)))AND(0xffffffff905e00f7)))OR(t1.c2)))AND(t1.c64)))AND(t1.c64)))AND(t1.c64))) NOT BETWEEN (((t1.c64) NOTNULL)) AND (((t1.c2) BETWEEN (t1.c64) AND (t1.c64)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((t1.c0)OR(t1.c64)))AND(0Xffffffff905e00f7)))OR(t1.c2)))AND(t1.c64)))AND(t1.c64)))AND(t1.c64))) NOT BETWEEN (((t1.c64) NOTNULL)) AND (((t1.c2) BETWEEN (t1.c64) AND (t1.c64))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((((((((((((t1.c0)OR(t1.c64)))AND(0xffffffff905e00f7)))OR(t1.c2)))AND(t1.c64)))AND(t1.c64)))AND(t1.c64))) NOT BETWEEN (((t1.c64) NOTNULL)) AND (((t1.c2) BETWEEN (t1.c64) AND (t1.c64)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((t1.c0)OR(t1.c64)))AND(0Xffffffff905e00f7)))OR(t1.c2)))AND(t1.c64)))AND(t1.c64)))AND(t1.c64))) NOT BETWEEN (((t1.c64) NOTNULL)) AND (((t1.c2) BETWEEN (t1.c64) AND (t1.c64))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((((((((((((t1.c0)OR(t1.c64)))AND(0xffffffff905e00f7)))OR(t1.c2)))AND(t1.c64)))AND(t1.c64)))AND(t1.c64))) NOT BETWEEN (((t1.c64) NOTNULL)) AND (((t1.c2) BETWEEN (t1.c64) AND (t1.c64)))));
SELECT * FROM vt0, rt0, t1, v0 WHERE ((((((t1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((t1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0, t1, v0);
SELECT * FROM vt0, rt0, t1, v0 WHERE ((((((t1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((t1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0, t1, v0);
SELECT * FROM vt0, rt0, t1, v0 WHERE ((((((t1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))) NOTNULL));
SELECT * FROM vt0, rt0, v0 WHERE (((- (rt0.c0)) IN (0.9418243673807363))) ORDER BY (((v0.c0, rt0.c1, vt0.c0))>((rt0.c2, 0xf619d79, v0.c0))) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((- (rt0.c0)) IN (0.9418243673807363))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((v0.c0, rt0.c1, vt0.c0))>((rt0.c2, 0xf619d79, v0.c0))) COLLATE NOCASE  NULLS LAST);
SELECT * FROM vt0, rt0, v0 WHERE (((- (rt0.c0)) IN (0.9418243673807363))) ORDER BY (((v0.c0, rt0.c1, vt0.c0))>((rt0.c2, 0xf619d79, v0.c0))) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((- (rt0.c0)) IN (0.9418243673807363))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((v0.c0, rt0.c1, vt0.c0))>((rt0.c2, 0xf619d79, v0.c0))) COLLATE NOCASE  NULLS LAST);
SELECT * FROM vt0, rt0, v0 WHERE (((- (rt0.c0)) IN (0.9418243673807363))) ORDER BY (((v0.c0, rt0.c1, vt0.c0))>((rt0.c2, 0xf619d79, v0.c0))) COLLATE NOCASE  NULLS LAST;
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON (rt0.c0 IN ()) COLLATE RTRIM COLLATE RTRIM LEFT OUTER JOIN rt0 ON CASE WHEN DATE(rt0.c2, v0.c0, rt0.c0) THEN CASE v0.c0  WHEN vt0.c0 THEN rt0.c0 END WHEN rt0.c2 THEN ((v0.c0)>=(rt0.c2)) WHEN '-1996990593' THEN ((((((((v0.c0)AND(0.899834682056702)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)) ELSE ((((rt0.c1)OR(rt0.c0)))OR(v0.c0)) END WHERE (CASE v0.c0 COLLATE NOCASE  WHEN ((rt0.c2)OR(rt0.c0)) THEN ((v0.c0) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE v0.c0 COLLATE NOCASE  WHEN ((rt0.c2)OR(rt0.c0)) THEN ((v0.c0) ISNULL) END) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (rt0.c0 IN ()) COLLATE RTRIM COLLATE RTRIM LEFT OUTER JOIN rt0 ON CASE WHEN DATE(rt0.c2, v0.c0, rt0.c0) THEN CASE v0.c0  WHEN vt0.c0 THEN rt0.c0 END WHEN rt0.c2 THEN ((v0.c0)>=(rt0.c2)) WHEN '-1996990593' THEN ((((((((v0.c0)AND(0.899834682056702)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)) ELSE ((((rt0.c1)OR(rt0.c0)))OR(v0.c0)) END);
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON (rt0.c0 IN ()) COLLATE RTRIM COLLATE RTRIM LEFT OUTER JOIN rt0 ON CASE WHEN DATE(rt0.c2, v0.c0, rt0.c0) THEN CASE v0.c0  WHEN vt0.c0 THEN rt0.c0 END WHEN rt0.c2 THEN ((v0.c0)>=(rt0.c2)) WHEN '-1996990593' THEN ((((((((v0.c0)AND(0.899834682056702)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)) ELSE ((((rt0.c1)OR(rt0.c0)))OR(v0.c0)) END WHERE (CASE v0.c0 COLLATE NOCASE  WHEN ((rt0.c2)OR(rt0.c0)) THEN ((v0.c0) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE v0.c0 COLLATE NOCASE  WHEN ((rt0.c2)OR(rt0.c0)) THEN ((v0.c0) ISNULL) END) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (rt0.c0 IN ()) COLLATE RTRIM COLLATE RTRIM LEFT OUTER JOIN rt0 ON CASE WHEN DATE(rt0.c2, v0.c0, rt0.c0) THEN CASE v0.c0  WHEN vt0.c0 THEN rt0.c0 END WHEN rt0.c2 THEN ((v0.c0)>=(rt0.c2)) WHEN '-1996990593' THEN ((((((((v0.c0)AND(0.899834682056702)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)) ELSE ((((rt0.c1)OR(rt0.c0)))OR(v0.c0)) END);
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON (rt0.c0 IN ()) COLLATE RTRIM COLLATE RTRIM LEFT OUTER JOIN rt0 ON CASE WHEN DATE(rt0.c2, v0.c0, rt0.c0) THEN CASE v0.c0  WHEN vt0.c0 THEN rt0.c0 END WHEN rt0.c2 THEN ((v0.c0)>=(rt0.c2)) WHEN '-1996990593' THEN ((((((((v0.c0)AND(0.899834682056702)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)) ELSE ((((rt0.c1)OR(rt0.c0)))OR(v0.c0)) END WHERE (CASE v0.c0 COLLATE NOCASE  WHEN ((rt0.c2)OR(rt0.c0)) THEN ((v0.c0) ISNULL) END);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c1 COLLATE BINARY) NOT BETWEEN ((~ (vt0.c0))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE BINARY) NOT BETWEEN ((~ (vt0.c0))) AND (NULL))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c1 COLLATE BINARY) NOT BETWEEN ((~ (vt0.c0))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE BINARY) NOT BETWEEN ((~ (vt0.c0))) AND (NULL))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c1 COLLATE BINARY) NOT BETWEEN ((~ (vt0.c0))) AND (NULL)));
SELECT COUNT(*) FROM v0, vt0 FULL OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) AND ((rt0.c1 COLLATE RTRIM))) WHERE (((((rt0.c0)<<(rt0.c0))) BETWEEN ((+ (v0.c0))) AND ((((rt0.c2, rt0.c2, rt0.c2)) BETWEEN ((v0.c0, 0.31154378097379776, rt0.c2)) AND ((v0.c0, vt0.c0, rt0.c2)))))) ORDER BY ((TRIM(v0.c0)) BETWEEN (((rt0.c2)<=(v0.c0))) AND (ROUND(rt0.c0, rt0.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<<(rt0.c0))) BETWEEN ((+ (v0.c0))) AND ((((rt0.c2, rt0.c2, rt0.c2)) BETWEEN ((v0.c0, 0.31154378097379776, rt0.c2)) AND ((v0.c0, vt0.c0, rt0.c2)))))) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) AND ((rt0.c1 COLLATE RTRIM))) ORDER BY ((TRIM(v0.c0)) BETWEEN (((rt0.c2)<=(v0.c0))) AND (ROUND(rt0.c0, rt0.c1))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 FULL OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) AND ((rt0.c1 COLLATE RTRIM))) WHERE (((((rt0.c0)<<(rt0.c0))) BETWEEN ((+ (v0.c0))) AND ((((rt0.c2, rt0.c2, rt0.c2)) BETWEEN ((v0.c0, 0.31154378097379776, rt0.c2)) AND ((v0.c0, vt0.c0, rt0.c2)))))) ORDER BY ((TRIM(v0.c0)) BETWEEN (((rt0.c2)<=(v0.c0))) AND (ROUND(rt0.c0, rt0.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<<(rt0.c0))) BETWEEN ((+ (v0.c0))) AND ((((rt0.c2, rt0.c2, rt0.c2)) BETWEEN ((v0.c0, 0.31154378097379776, rt0.c2)) AND ((v0.c0, vt0.c0, rt0.c2)))))) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) AND ((rt0.c1 COLLATE RTRIM))) ORDER BY ((TRIM(v0.c0)) BETWEEN (((rt0.c2)<=(v0.c0))) AND (ROUND(rt0.c0, rt0.c1))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 FULL OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) AND ((rt0.c1 COLLATE RTRIM))) WHERE (((((rt0.c0)<<(rt0.c0))) BETWEEN ((+ (v0.c0))) AND ((((rt0.c2, rt0.c2, rt0.c2)) BETWEEN ((v0.c0, 0.31154378097379776, rt0.c2)) AND ((v0.c0, vt0.c0, rt0.c2)))))) ORDER BY ((TRIM(v0.c0)) BETWEEN (((rt0.c2)<=(v0.c0))) AND (ROUND(rt0.c0, rt0.c1))) ASC  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE (-915633657);
SELECT SUM(count) FROM (SELECT ((-915633657) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (-915633657);
SELECT SUM(count) FROM (SELECT ((-915633657) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (-915633657);
SELECT ALL * FROM v0, rt0, vt0, t1 WHERE ((((rt0.c0)) BETWEEN ((((t1.c2)|(t1.c2)))) AND ((CAST(rt0.c1 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((((t1.c2)|(t1.c2)))) AND ((CAST(rt0.c1 AS NUMERIC))))) IS TRUE)  as count FROM v0, rt0, vt0, t1);
SELECT ALL * FROM v0, rt0, vt0, t1 WHERE ((((rt0.c0)) BETWEEN ((((t1.c2)|(t1.c2)))) AND ((CAST(rt0.c1 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((((t1.c2)|(t1.c2)))) AND ((CAST(rt0.c1 AS NUMERIC))))) IS TRUE)  as count FROM v0, rt0, vt0, t1);
SELECT ALL * FROM v0, rt0, vt0, t1 WHERE ((((rt0.c0)) BETWEEN ((((t1.c2)|(t1.c2)))) AND ((CAST(rt0.c1 AS NUMERIC)))));
SELECT COUNT(*) FROM t1, v0 WHERE (t1.c2) ORDER BY 't|DIQCg顲' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM t1, v0 ORDER BY 't|DIQCg顲' DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, v0 WHERE (t1.c2) ORDER BY 't|DIQCg顲' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM t1, v0 ORDER BY 't|DIQCg顲' DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, v0 WHERE (t1.c2) ORDER BY 't|DIQCg顲' DESC  NULLS LAST;
SELECT ALL * FROM vt0 NOT INDEXED WHERE ((((((vt0.c0)*(vt0.c0))))<=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)*(vt0.c0))))<=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 NOT INDEXED WHERE ((((((vt0.c0)*(vt0.c0))))<=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)*(vt0.c0))))<=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 NOT INDEXED WHERE ((((((vt0.c0)*(vt0.c0))))<=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((((t1.c2) NOT BETWEEN (t1.c2) AND (rt0.c2)))||((~ (rt0.c1))))) ORDER BY CASE WHEN '908514903' THEN CAST(t1.c64 AS INTEGER) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c2) NOT BETWEEN (t1.c2) AND (rt0.c2)))||((~ (rt0.c1))))) IS TRUE)  as count FROM rt0, t1 ORDER BY CASE WHEN '908514903' THEN CAST(t1.c64 AS INTEGER) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((((t1.c2) NOT BETWEEN (t1.c2) AND (rt0.c2)))||((~ (rt0.c1))))) ORDER BY CASE WHEN '908514903' THEN CAST(t1.c64 AS INTEGER) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c2) NOT BETWEEN (t1.c2) AND (rt0.c2)))||((~ (rt0.c1))))) IS TRUE)  as count FROM rt0, t1 ORDER BY CASE WHEN '908514903' THEN CAST(t1.c64 AS INTEGER) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((((t1.c2) NOT BETWEEN (t1.c2) AND (rt0.c2)))||((~ (rt0.c1))))) ORDER BY CASE WHEN '908514903' THEN CAST(t1.c64 AS INTEGER) END  NULLS FIRST;
SELECT * FROM rt0 LEFT OUTER JOIN t1 ON ((vt0.c0 COLLATE RTRIM)-(((rt0.c1) NOT NULL))) RIGHT OUTER JOIN vt0 ON ((((CAST(NULL AS TEXT))AND(((t1.c64)*(t1.c64)))))OR(((t1.c0) NOT BETWEEN (5.40202522E8) AND (-2036548047)))) WHERE ((- (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON ((vt0.c0 COLLATE RTRIM)-(((rt0.c1) NOT NULL))) RIGHT OUTER JOIN vt0 ON ((((CAST(NULL AS TEXT))AND(((t1.c64)*(t1.c64)))))OR(((t1.c0) NOT BETWEEN (5.40202522E8) AND (-2036548047)))));
SELECT * FROM rt0 LEFT OUTER JOIN t1 ON ((vt0.c0 COLLATE RTRIM)-(((rt0.c1) NOT NULL))) RIGHT OUTER JOIN vt0 ON ((((CAST(NULL AS TEXT))AND(((t1.c64)*(t1.c64)))))OR(((t1.c0) NOT BETWEEN (5.40202522E8) AND (-2036548047)))) WHERE ((- (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON ((vt0.c0 COLLATE RTRIM)-(((rt0.c1) NOT NULL))) RIGHT OUTER JOIN vt0 ON ((((CAST(NULL AS TEXT))AND(((t1.c64)*(t1.c64)))))OR(((t1.c0) NOT BETWEEN (5.40202522E8) AND (-2036548047)))));
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST('' AS BLOB)) ORDER BY CASE ((rt0.c1)LIKE(rt0.c2))  WHEN v0.c0 THEN rt0.c2 WHEN (rt0.c2 IN ()) THEN CASE rt0.c0  WHEN rt0.c0 THEN '-1576292309' WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END WHEN CASE WHEN v0.c0 THEN 0.5617410449787512 ELSE v0.c0 END THEN ((((rt0.c0)OR(v0.c0)))OR(rt0.c1)) ELSE TOTAL_CHANGES() END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('' AS BLOB)) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE ((rt0.c1)LIKE(rt0.c2))  WHEN v0.c0 THEN rt0.c2 WHEN (rt0.c2 IN ()) THEN CASE rt0.c0  WHEN rt0.c0 THEN '-1576292309' WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END WHEN CASE WHEN v0.c0 THEN 0.5617410449787512 ELSE v0.c0 END THEN ((((rt0.c0)OR(v0.c0)))OR(rt0.c1)) ELSE TOTAL_CHANGES() END  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST('' AS BLOB)) ORDER BY CASE ((rt0.c1)LIKE(rt0.c2))  WHEN v0.c0 THEN rt0.c2 WHEN (rt0.c2 IN ()) THEN CASE rt0.c0  WHEN rt0.c0 THEN '-1576292309' WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END WHEN CASE WHEN v0.c0 THEN 0.5617410449787512 ELSE v0.c0 END THEN ((((rt0.c0)OR(v0.c0)))OR(rt0.c1)) ELSE TOTAL_CHANGES() END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('' AS BLOB)) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE ((rt0.c1)LIKE(rt0.c2))  WHEN v0.c0 THEN rt0.c2 WHEN (rt0.c2 IN ()) THEN CASE rt0.c0  WHEN rt0.c0 THEN '-1576292309' WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END WHEN CASE WHEN v0.c0 THEN 0.5617410449787512 ELSE v0.c0 END THEN ((((rt0.c0)OR(v0.c0)))OR(rt0.c1)) ELSE TOTAL_CHANGES() END  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST('' AS BLOB)) ORDER BY CASE ((rt0.c1)LIKE(rt0.c2))  WHEN v0.c0 THEN rt0.c2 WHEN (rt0.c2 IN ()) THEN CASE rt0.c0  WHEN rt0.c0 THEN '-1576292309' WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END WHEN CASE WHEN v0.c0 THEN 0.5617410449787512 ELSE v0.c0 END THEN ((((rt0.c0)OR(v0.c0)))OR(rt0.c1)) ELSE TOTAL_CHANGES() END  NULLS LAST;
SELECT ALL * FROM vt0, t1 WHERE (CASE (((vt0.c0)) BETWEEN ((t1.c64)) AND ((x'')))  WHEN t1.c0 COLLATE NOCASE THEN x'' WHEN ((t1.c0) NOT NULL) THEN t1.c64 WHEN CAST(t1.c2 AS REAL) THEN (+ (t1.c0)) ELSE ((t1.c0)OR(t1.c0)) END) ORDER BY ((vt0.c0 IN ()) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c0)) BETWEEN ((t1.c64)) AND ((x'')))  WHEN t1.c0 COLLATE NOCASE THEN x'' WHEN ((t1.c0) NOT NULL) THEN t1.c64 WHEN CAST(t1.c2 AS REAL) THEN (+ (t1.c0)) ELSE ((t1.c0)OR(t1.c0)) END) IS TRUE)  as count FROM vt0, t1 ORDER BY ((vt0.c0 IN ()) IN ())  NULLS FIRST);
SELECT ALL * FROM vt0, t1 WHERE (CASE (((vt0.c0)) BETWEEN ((t1.c64)) AND ((x'')))  WHEN t1.c0 COLLATE NOCASE THEN x'' WHEN ((t1.c0) NOT NULL) THEN t1.c64 WHEN CAST(t1.c2 AS REAL) THEN (+ (t1.c0)) ELSE ((t1.c0)OR(t1.c0)) END) ORDER BY ((vt0.c0 IN ()) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c0)) BETWEEN ((t1.c64)) AND ((x'')))  WHEN t1.c0 COLLATE NOCASE THEN x'' WHEN ((t1.c0) NOT NULL) THEN t1.c64 WHEN CAST(t1.c2 AS REAL) THEN (+ (t1.c0)) ELSE ((t1.c0)OR(t1.c0)) END) IS TRUE)  as count FROM vt0, t1 ORDER BY ((vt0.c0 IN ()) IN ())  NULLS FIRST);
SELECT ALL * FROM vt0, t1 WHERE (CASE (((vt0.c0)) BETWEEN ((t1.c64)) AND ((x'')))  WHEN t1.c0 COLLATE NOCASE THEN x'' WHEN ((t1.c0) NOT NULL) THEN t1.c64 WHEN CAST(t1.c2 AS REAL) THEN (+ (t1.c0)) ELSE ((t1.c0)OR(t1.c0)) END) ORDER BY ((vt0.c0 IN ()) IN ())  NULLS FIRST;
SELECT COUNT(*) FROM rt0 NOT INDEXED, vt0 LEFT OUTER JOIN t1 ON (CAST(rt0.c0 AS INTEGER) IN ()) RIGHT OUTER JOIN v0 ON t1.c2 WHERE (((((t1.c2) ISNULL)) NOT BETWEEN ((((t1.c64))<((rt0.c2)))) AND ((((t1.c0)) BETWEEN ((t1.c0)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((t1.c2) ISNULL)) NOT BETWEEN ((((t1.c64))<((rt0.c2)))) AND ((((t1.c0)) BETWEEN ((t1.c0)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN t1 ON (CAST(rt0.c0 AS INTEGER) IN ()) RIGHT OUTER JOIN v0 ON t1.c2);
SELECT COUNT(*) FROM rt0 NOT INDEXED, vt0 LEFT OUTER JOIN t1 ON (CAST(rt0.c0 AS INTEGER) IN ()) RIGHT OUTER JOIN v0 ON t1.c2 WHERE (((((t1.c2) ISNULL)) NOT BETWEEN ((((t1.c64))<((rt0.c2)))) AND ((((t1.c0)) BETWEEN ((t1.c0)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((t1.c2) ISNULL)) NOT BETWEEN ((((t1.c64))<((rt0.c2)))) AND ((((t1.c0)) BETWEEN ((t1.c0)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN t1 ON (CAST(rt0.c0 AS INTEGER) IN ()) RIGHT OUTER JOIN v0 ON t1.c2);
SELECT COUNT(*) FROM rt0 NOT INDEXED, vt0 LEFT OUTER JOIN t1 ON (CAST(rt0.c0 AS INTEGER) IN ()) RIGHT OUTER JOIN v0 ON t1.c2 WHERE (((((t1.c2) ISNULL)) NOT BETWEEN ((((t1.c64))<((rt0.c2)))) AND ((((t1.c0)) BETWEEN ((t1.c0)) AND ((rt0.c0))))));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (t1.c64) ORDER BY LIKELIHOOD(COALESCE(t1.c64, x''), 0.5782843450574847);
SELECT SUM(count) FROM (SELECT ((t1.c64) IS TRUE)  as count FROM t1, vt0 ORDER BY LIKELIHOOD(COALESCE(t1.c64, x''), 0.5782843450574847));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (t1.c64) ORDER BY LIKELIHOOD(COALESCE(t1.c64, x''), 0.5782843450574847);
SELECT SUM(count) FROM (SELECT ((t1.c64) IS TRUE)  as count FROM t1, vt0 ORDER BY LIKELIHOOD(COALESCE(t1.c64, x''), 0.5782843450574847));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (t1.c64) ORDER BY LIKELIHOOD(COALESCE(t1.c64, x''), 0.5782843450574847);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((v0.c0 COLLATE NOCASE) NOT NULL)) ORDER BY (((vt0.c0 IN ()))<<(((((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))OR(v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c0 IN ()))<<(((((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))OR(v0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((v0.c0 COLLATE NOCASE) NOT NULL)) ORDER BY (((vt0.c0 IN ()))<<(((((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))OR(v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c0 IN ()))<<(((((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))OR(v0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((v0.c0 COLLATE NOCASE) NOT NULL)) ORDER BY (((vt0.c0 IN ()))<<(((((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))OR(v0.c0)))) DESC  NULLS LAST;
SELECT * FROM v0 INDEXED BY i12 WHERE (((v0.c0)>(v0.c0)) COLLATE NOCASE) ORDER BY ((((((((LIKELIHOOD(v0.c0, 0.6235598531400228))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND((- (v0.c0)))))AND(((v0.c0)%(v0.c0)))))OR((+ (v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)>(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 INDEXED BY i12 ORDER BY ((((((((LIKELIHOOD(v0.c0, 0.6235598531400228))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND((- (v0.c0)))))AND(((v0.c0)%(v0.c0)))))OR((+ (v0.c0)))) ASC  NULLS FIRST);
SELECT * FROM v0 INDEXED BY i12 WHERE (((v0.c0)>(v0.c0)) COLLATE NOCASE) ORDER BY ((((((((LIKELIHOOD(v0.c0, 0.6235598531400228))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND((- (v0.c0)))))AND(((v0.c0)%(v0.c0)))))OR((+ (v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)>(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 INDEXED BY i12 ORDER BY ((((((((LIKELIHOOD(v0.c0, 0.6235598531400228))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND((- (v0.c0)))))AND(((v0.c0)%(v0.c0)))))OR((+ (v0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (CASE WHEN ((('')) BETWEEN ((t1.c0)) AND ((t1.c2))) THEN t1.c0 ELSE 0x1be8a942 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((('')) BETWEEN ((t1.c0)) AND ((t1.c2))) THEN t1.c0 ELSE 0x1be8a942 END) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CASE WHEN ((('')) BETWEEN ((t1.c0)) AND ((t1.c2))) THEN t1.c0 ELSE 0x1be8a942 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((('')) BETWEEN ((t1.c0)) AND ((t1.c2))) THEN t1.c0 ELSE 0x1be8a942 END) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CASE WHEN ((('')) BETWEEN ((t1.c0)) AND ((t1.c2))) THEN t1.c0 ELSE 0x1be8a942 END);
SELECT COUNT(*) FROM vt0, t1 WHERE (((((t1.c64)IS(t1.c2)))<=(t1.c0)));
SELECT SUM(count) FROM (SELECT ((((((t1.c64)IS(t1.c2)))<=(t1.c0))) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE (((((t1.c64)IS(t1.c2)))<=(t1.c0)));
SELECT SUM(count) FROM (SELECT ((((((t1.c64)IS(t1.c2)))<=(t1.c0))) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE (((((t1.c64)IS(t1.c2)))<=(t1.c0)));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((~ (((v0.c0)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((~ (((v0.c0)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((~ (((v0.c0)<=(vt0.c0)))));
SELECT ALL * FROM t1, vt0, v0 INNER JOIN rt0 ON ((((t1.c64 COLLATE BINARY)OR((t1.c64 IN ()))))OR('-916413721')) WHERE ((((rt0.c1 IN ())) NOT BETWEEN (t1.c64 COLLATE NOCASE) AND (json_quote('N '))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ())) NOT BETWEEN (t1.c64 COLLATE NOCASE) AND (json_quote('N ')))) IS TRUE)  as count FROM t1, vt0, v0 INNER JOIN rt0 ON ((((t1.c64 COLLATE BINARY)OR((t1.c64 IN ()))))OR('-916413721')));
SELECT ALL * FROM t1, vt0, v0 INNER JOIN rt0 ON ((((t1.c64 COLLATE BINARY)OR((t1.c64 IN ()))))OR('-916413721')) WHERE ((((rt0.c1 IN ())) NOT BETWEEN (t1.c64 COLLATE NOCASE) AND (json_quote('N '))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ())) NOT BETWEEN (t1.c64 COLLATE NOCASE) AND (json_quote('N ')))) IS TRUE)  as count FROM t1, vt0, v0 INNER JOIN rt0 ON ((((t1.c64 COLLATE BINARY)OR((t1.c64 IN ()))))OR('-916413721')));
SELECT ALL * FROM t1, vt0, v0 INNER JOIN rt0 ON ((((t1.c64 COLLATE BINARY)OR((t1.c64 IN ()))))OR('-916413721')) WHERE ((((rt0.c1 IN ())) NOT BETWEEN (t1.c64 COLLATE NOCASE) AND (json_quote('N '))));
SELECT COUNT(*) FROM v0 WHERE ((- (v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((- (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((- (v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((- (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((- (v0.c0 COLLATE RTRIM)));
SELECT * FROM rt0, v0, vt0, t1 WHERE (((('y' IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((('y' IN ())) ISNULL)) IS TRUE)  as count FROM rt0, v0, vt0, t1);
SELECT * FROM rt0, v0, vt0, t1 WHERE (((('y' IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((('y' IN ())) ISNULL)) IS TRUE)  as count FROM rt0, v0, vt0, t1);
SELECT * FROM rt0, v0, vt0, t1 WHERE (((('y' IN ())) ISNULL));
SELECT COUNT(*) FROM rt0 WHERE (0.2161649893434291) ORDER BY (LOWER(rt0.c2) IN ());
SELECT SUM(count) FROM (SELECT ((0.2161649893434291) IS TRUE)  as count FROM rt0 ORDER BY (LOWER(rt0.c2) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (0.2161649893434291) ORDER BY (LOWER(rt0.c2) IN ());
SELECT SUM(count) FROM (SELECT ((0.2161649893434291) IS TRUE)  as count FROM rt0 ORDER BY (LOWER(rt0.c2) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (0.2161649893434291) ORDER BY (LOWER(rt0.c2) IN ());
SELECT * FROM t1, rt0, v0, vt0 NOT INDEXED WHERE (((((((vt0.c0)OR('q')))OR(v0.c0))) ISNULL)) ORDER BY ((((((((((v0.c0)<=(t1.c2)))AND(rt0.c0 COLLATE RTRIM)))AND(1628353045)))OR(((0.6066482268175298) BETWEEN (rt0.c2) AND (t1.c64)))))OR((((t1.c0, rt0.c2, vt0.c0))=((t1.c0, t1.c64, t1.c64))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR('q')))OR(v0.c0))) ISNULL)) IS TRUE)  as count FROM t1, rt0, v0, vt0 ORDER BY ((((((((((v0.c0)<=(t1.c2)))AND(rt0.c0 COLLATE RTRIM)))AND(1628353045)))OR(((0.6066482268175298) BETWEEN (rt0.c2) AND (t1.c64)))))OR((((t1.c0, rt0.c2, vt0.c0))==((t1.c0, t1.c64, t1.c64))))) DESC);
SELECT * FROM t1, rt0, v0, vt0 NOT INDEXED WHERE (((((((vt0.c0)OR('q')))OR(v0.c0))) ISNULL)) ORDER BY ((((((((((v0.c0)<=(t1.c2)))AND(rt0.c0 COLLATE RTRIM)))AND(1628353045)))OR(((0.6066482268175298) BETWEEN (rt0.c2) AND (t1.c64)))))OR((((t1.c0, rt0.c2, vt0.c0))=((t1.c0, t1.c64, t1.c64))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR('q')))OR(v0.c0))) ISNULL)) IS TRUE)  as count FROM t1, rt0, v0, vt0 ORDER BY ((((((((((v0.c0)<=(t1.c2)))AND(rt0.c0 COLLATE RTRIM)))AND(1628353045)))OR(((0.6066482268175298) BETWEEN (rt0.c2) AND (t1.c64)))))OR((((t1.c0, rt0.c2, vt0.c0))==((t1.c0, t1.c64, t1.c64))))) DESC);
SELECT * FROM t1, rt0, v0, vt0 NOT INDEXED WHERE (((((((vt0.c0)OR('q')))OR(v0.c0))) ISNULL)) ORDER BY ((((((((((v0.c0)<=(t1.c2)))AND(rt0.c0 COLLATE RTRIM)))AND(1628353045)))OR(((0.6066482268175298) BETWEEN (rt0.c2) AND (t1.c64)))))OR((((t1.c0, rt0.c2, vt0.c0))=((t1.c0, t1.c64, t1.c64))))) DESC;
SELECT COUNT(*) FROM v0, t1, rt0 WHERE ('1318682206') ORDER BY ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))>>(CAST(t1.c64 AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('1318682206') IS TRUE)  as count FROM v0, t1, rt0 ORDER BY ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))>>(CAST(t1.c64 AS NUMERIC))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, t1, rt0 WHERE ('1318682206') ORDER BY ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))>>(CAST(t1.c64 AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('1318682206') IS TRUE)  as count FROM v0, t1, rt0 ORDER BY ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))>>(CAST(t1.c64 AS NUMERIC))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, t1, rt0 WHERE ('1318682206') ORDER BY ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))>>(CAST(t1.c64 AS NUMERIC))) DESC  NULLS LAST;
SELECT * FROM t1, vt0 WHERE (((((vt0.c0)OR((x'1d805af3' IN ()))))OR(CAST(t1.c2 AS INTEGER)))) ORDER BY (((((vt0.c0)AND(t1.c2)))OR(t1.c2)) IN (((vt0.c0)<>(t1.c2)), ((t1.c64) BETWEEN (t1.c2) AND (t1.c0)))) ASC, LIKELY(DISTINCT t1.c0) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR((x'1d805af3' IN ()))))OR(CAST(t1.c2 AS INTEGER)))) IS TRUE)  as count FROM t1, vt0 ORDER BY (((((vt0.c0)AND(t1.c2)))OR(t1.c2)) IN (((vt0.c0)!=(t1.c2)), ((t1.c64) BETWEEN (t1.c2) AND (t1.c0)))) ASC, LIKELY(DISTINCT t1.c0) ASC);
SELECT * FROM t1, vt0 WHERE (((((vt0.c0)OR((x'1d805af3' IN ()))))OR(CAST(t1.c2 AS INTEGER)))) ORDER BY (((((vt0.c0)AND(t1.c2)))OR(t1.c2)) IN (((vt0.c0)<>(t1.c2)), ((t1.c64) BETWEEN (t1.c2) AND (t1.c0)))) ASC, LIKELY(DISTINCT t1.c0) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR((x'1d805af3' IN ()))))OR(CAST(t1.c2 AS INTEGER)))) IS TRUE)  as count FROM t1, vt0 ORDER BY (((((vt0.c0)AND(t1.c2)))OR(t1.c2)) IN (((vt0.c0)!=(t1.c2)), ((t1.c64) BETWEEN (t1.c2) AND (t1.c0)))) ASC, LIKELY(DISTINCT t1.c0) ASC);
SELECT * FROM t1, vt0 WHERE (((((vt0.c0)OR((x'1d805af3' IN ()))))OR(CAST(t1.c2 AS INTEGER)))) ORDER BY (((((vt0.c0)AND(t1.c2)))OR(t1.c2)) IN (((vt0.c0)<>(t1.c2)), ((t1.c64) BETWEEN (t1.c2) AND (t1.c0)))) ASC, LIKELY(DISTINCT t1.c0) ASC;
SELECT ALL * FROM v0 WHERE (NULL) ORDER BY ((((((v0.c0)OR(v0.c0)))OR(v0.c0)))=(((0.4762039221189527)>(v0.c0))))  NULLS LAST, ((v0.c0)>=(((v0.c0)IS NOT(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)OR(v0.c0)))OR(v0.c0)))=(((0.4762039221189527)>(v0.c0))))  NULLS LAST, ((v0.c0)>=(((v0.c0)IS NOT(v0.c0)))) ASC);
SELECT ALL * FROM v0 WHERE (NULL) ORDER BY ((((((v0.c0)OR(v0.c0)))OR(v0.c0)))=(((0.4762039221189527)>(v0.c0))))  NULLS LAST, ((v0.c0)>=(((v0.c0)IS NOT(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)OR(v0.c0)))OR(v0.c0)))=(((0.4762039221189527)>(v0.c0))))  NULLS LAST, ((v0.c0)>=(((v0.c0)IS NOT(v0.c0)))) ASC);
SELECT ALL * FROM v0 WHERE (NULL) ORDER BY ((((((v0.c0)OR(v0.c0)))OR(v0.c0)))=(((0.4762039221189527)>(v0.c0))))  NULLS LAST, ((v0.c0)>=(((v0.c0)IS NOT(v0.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0)>>(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0)>>(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0)>>(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0)>>(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0)>>(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL * FROM rt0, vt0 WHERE ((((NULL)) BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND ((((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL)) BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND ((((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED);
SELECT ALL * FROM rt0, vt0 WHERE ((((NULL)) BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND ((((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL)) BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND ((((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED);
SELECT ALL * FROM rt0, vt0 WHERE ((((NULL)) BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND ((((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))));
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS NUMERIC)) ISNULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS NUMERIC)) ISNULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC)) ISNULL));
SELECT COUNT(*) FROM vt0, rt0, t1, v0 WHERE ((CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN t1.c0 WHEN rt0.c1 THEN t1.c0 ELSE v0.c0 END IN ())) ORDER BY CAST((+ (t1.c2)) AS BLOB) DESC  NULLS FIRST, ((~ (t1.c64)) IN ((t1.c2 IN ())))  NULLS LAST, (((((+ (rt0.c2)))OR(rt0.c2)))AND(((t1.c0) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN t1.c0 WHEN rt0.c1 THEN t1.c0 ELSE v0.c0 END IN ())) IS TRUE)  as count FROM vt0, rt0, t1, v0 ORDER BY CAST((+ (t1.c2)) AS BLOB) DESC  NULLS FIRST, ((~ (t1.c64)) IN ((t1.c2 IN ())))  NULLS LAST, (((((+ (rt0.c2)))OR(rt0.c2)))AND(((t1.c0) IS TRUE)))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, t1, v0 WHERE ((CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN t1.c0 WHEN rt0.c1 THEN t1.c0 ELSE v0.c0 END IN ())) ORDER BY CAST((+ (t1.c2)) AS BLOB) DESC  NULLS FIRST, ((~ (t1.c64)) IN ((t1.c2 IN ())))  NULLS LAST, (((((+ (rt0.c2)))OR(rt0.c2)))AND(((t1.c0) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN t1.c0 WHEN rt0.c1 THEN t1.c0 ELSE v0.c0 END IN ())) IS TRUE)  as count FROM vt0, rt0, t1, v0 ORDER BY CAST((+ (t1.c2)) AS BLOB) DESC  NULLS FIRST, ((~ (t1.c64)) IN ((t1.c2 IN ())))  NULLS LAST, (((((+ (rt0.c2)))OR(rt0.c2)))AND(((t1.c0) IS TRUE)))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, t1, v0 WHERE ((CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN t1.c0 WHEN rt0.c1 THEN t1.c0 ELSE v0.c0 END IN ())) ORDER BY CAST((+ (t1.c2)) AS BLOB) DESC  NULLS FIRST, ((~ (t1.c64)) IN ((t1.c2 IN ())))  NULLS LAST, (((((+ (rt0.c2)))OR(rt0.c2)))AND(((t1.c0) IS TRUE)))  NULLS LAST;
SELECT ALL * FROM t1, rt0 WHERE (((((((rt0.c0)OR(x'05d5')))OR(x'2d5c'))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)OR(x'05d5')))OR(x'2d5c'))) ISNULL)) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE (((((((rt0.c0)OR(x'05d5')))OR(x'2d5c'))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)OR(x'05d5')))OR(x'2d5c'))) ISNULL)) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE (((((((rt0.c0)OR(x'05d5')))OR(x'2d5c'))) ISNULL));
SELECT ALL * FROM v0, vt0, t1 INDEXED BY i12 WHERE (((CAST(t1.c0 AS REAL)) BETWEEN ((~ (v0.c0))) AND (0.04164919312981441))) ORDER BY ((CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE t1.c64 END) BETWEEN (x'30df') AND (CAST(t1.c0 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c0 AS REAL)) BETWEEN ((~ (v0.c0))) AND (0.04164919312981441))) IS TRUE)  as count FROM v0, vt0, t1 INDEXED BY i12 ORDER BY ((CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE t1.c64 END) BETWEEN (x'30df') AND (CAST(t1.c0 AS BLOB))) ASC);
SELECT ALL * FROM v0, vt0, t1 INDEXED BY i12 WHERE (((CAST(t1.c0 AS REAL)) BETWEEN ((~ (v0.c0))) AND (0.04164919312981441))) ORDER BY ((CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE t1.c64 END) BETWEEN (x'30df') AND (CAST(t1.c0 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c0 AS REAL)) BETWEEN ((~ (v0.c0))) AND (0.04164919312981441))) IS TRUE)  as count FROM v0, vt0, t1 INDEXED BY i12 ORDER BY ((CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE t1.c64 END) BETWEEN (x'30df') AND (CAST(t1.c0 AS BLOB))) ASC);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE ((NULL)IS(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE ((NULL)IS(v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE ((NULL)IS(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE ((NULL)IS(v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE ((NULL)IS(v0.c0)) END);
SELECT * FROM t1, v0 WHERE (CASE WHEN 1049563343 THEN t1.c0 WHEN t1.c2 THEN t1.c0 WHEN NULL THEN v0.c0 END COLLATE RTRIM) ORDER BY ((- (x'')) IN (CASE t1.c2  WHEN t1.c0 THEN t1.c64 END))  NULLS FIRST, (((v0.c0, t1.c64, v0.c0)) NOT BETWEEN ((((((((((t1.c0)AND(x'')))AND(t1.c2)))AND(v0.c0)))AND(x'f19c')), QUOTE(v0.c0), ((t1.c0)=(t1.c2)))) AND ((((t1.c2)OR(v0.c0)), v0.c0, ((t1.c64)%(t1.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 1049563343 THEN t1.c0 WHEN t1.c2 THEN t1.c0 WHEN NULL THEN v0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM t1, v0 ORDER BY ((- (x'')) IN (CASE t1.c2  WHEN t1.c0 THEN t1.c64 END))  NULLS FIRST, (((v0.c0, t1.c64, v0.c0)) NOT BETWEEN ((((((((((t1.c0)AND(x'')))AND(t1.c2)))AND(v0.c0)))AND(x'f19c')), QUOTE(v0.c0), ((t1.c0)=(t1.c2)))) AND ((((t1.c2)OR(v0.c0)), v0.c0, ((t1.c64)%(t1.c2))))) ASC);
SELECT * FROM t1, v0 WHERE (CASE WHEN 1049563343 THEN t1.c0 WHEN t1.c2 THEN t1.c0 WHEN NULL THEN v0.c0 END COLLATE RTRIM) ORDER BY ((- (x'')) IN (CASE t1.c2  WHEN t1.c0 THEN t1.c64 END))  NULLS FIRST, (((v0.c0, t1.c64, v0.c0)) NOT BETWEEN ((((((((((t1.c0)AND(x'')))AND(t1.c2)))AND(v0.c0)))AND(x'f19c')), QUOTE(v0.c0), ((t1.c0)=(t1.c2)))) AND ((((t1.c2)OR(v0.c0)), v0.c0, ((t1.c64)%(t1.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 1049563343 THEN t1.c0 WHEN t1.c2 THEN t1.c0 WHEN NULL THEN v0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM t1, v0 ORDER BY ((- (x'')) IN (CASE t1.c2  WHEN t1.c0 THEN t1.c64 END))  NULLS FIRST, (((v0.c0, t1.c64, v0.c0)) NOT BETWEEN ((((((((((t1.c0)AND(x'')))AND(t1.c2)))AND(v0.c0)))AND(x'f19c')), QUOTE(v0.c0), ((t1.c0)=(t1.c2)))) AND ((((t1.c2)OR(v0.c0)), v0.c0, ((t1.c64)%(t1.c2))))) ASC);
SELECT * FROM t1, v0 WHERE (CASE WHEN 1049563343 THEN t1.c0 WHEN t1.c2 THEN t1.c0 WHEN NULL THEN v0.c0 END COLLATE RTRIM) ORDER BY ((- (x'')) IN (CASE t1.c2  WHEN t1.c0 THEN t1.c64 END))  NULLS FIRST, (((v0.c0, t1.c64, v0.c0)) NOT BETWEEN ((((((((((t1.c0)AND(x'')))AND(t1.c2)))AND(v0.c0)))AND(x'f19c')), QUOTE(v0.c0), ((t1.c0)=(t1.c2)))) AND ((((t1.c2)OR(v0.c0)), v0.c0, ((t1.c64)%(t1.c2))))) ASC;
SELECT COUNT(*) FROM vt0, v0, rt0, t1 WHERE (CASE WHEN ((((((((vt0.c0)OR(t1.c0)))OR(rt0.c2)))OR(rt0.c0)))OR(t1.c2)) THEN ((t1.c0) IS TRUE) WHEN CAST('-745707745' AS INTEGER) THEN v0.c0 WHEN ((((v0.c0)OR(t1.c0)))AND(vt0.c0)) THEN (0.1527332344298542 IN ()) ELSE CASE vt0.c0  WHEN rt0.c0 THEN 'p ' END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((vt0.c0)OR(t1.c0)))OR(rt0.c2)))OR(rt0.c0)))OR(t1.c2)) THEN ((t1.c0) IS TRUE) WHEN CAST('-745707745' AS INTEGER) THEN v0.c0 WHEN ((((v0.c0)OR(t1.c0)))AND(vt0.c0)) THEN (0.1527332344298542 IN ()) ELSE CASE vt0.c0  WHEN rt0.c0 THEN 'p ' END END) IS TRUE)  as count FROM vt0, v0, rt0, t1);
SELECT COUNT(*) FROM vt0, v0, rt0, t1 WHERE (CASE WHEN ((((((((vt0.c0)OR(t1.c0)))OR(rt0.c2)))OR(rt0.c0)))OR(t1.c2)) THEN ((t1.c0) IS TRUE) WHEN CAST('-745707745' AS INTEGER) THEN v0.c0 WHEN ((((v0.c0)OR(t1.c0)))AND(vt0.c0)) THEN (0.1527332344298542 IN ()) ELSE CASE vt0.c0  WHEN rt0.c0 THEN 'p ' END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((vt0.c0)OR(t1.c0)))OR(rt0.c2)))OR(rt0.c0)))OR(t1.c2)) THEN ((t1.c0) IS TRUE) WHEN CAST('-745707745' AS INTEGER) THEN v0.c0 WHEN ((((v0.c0)OR(t1.c0)))AND(vt0.c0)) THEN (0.1527332344298542 IN ()) ELSE CASE vt0.c0  WHEN rt0.c0 THEN 'p ' END END) IS TRUE)  as count FROM vt0, v0, rt0, t1);
SELECT COUNT(*) FROM vt0, v0, rt0, t1 WHERE (CASE WHEN ((((((((vt0.c0)OR(t1.c0)))OR(rt0.c2)))OR(rt0.c0)))OR(t1.c2)) THEN ((t1.c0) IS TRUE) WHEN CAST('-745707745' AS INTEGER) THEN v0.c0 WHEN ((((v0.c0)OR(t1.c0)))AND(vt0.c0)) THEN (0.1527332344298542 IN ()) ELSE CASE vt0.c0  WHEN rt0.c0 THEN 'p ' END END);
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((rt0.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((rt0.c0) NOTNULL) END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((rt0.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((rt0.c0) NOTNULL) END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((rt0.c0) NOTNULL) END);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (0.8476522439479681) ORDER BY (((- (t1.c64))) NOT BETWEEN (((((rt0.c2)AND(rt0.c2)))AND(t1.c0))) AND (UPPER(DISTINCT rt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ((0.8476522439479681) IS TRUE)  as count FROM t1, rt0 ORDER BY (((- (t1.c64))) NOT BETWEEN (((((rt0.c2)AND(rt0.c2)))AND(t1.c0))) AND (UPPER(DISTINCT rt0.c2))) DESC);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (0.8476522439479681) ORDER BY (((- (t1.c64))) NOT BETWEEN (((((rt0.c2)AND(rt0.c2)))AND(t1.c0))) AND (UPPER(DISTINCT rt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ((0.8476522439479681) IS TRUE)  as count FROM t1, rt0 ORDER BY (((- (t1.c64))) NOT BETWEEN (((((rt0.c2)AND(rt0.c2)))AND(t1.c0))) AND (UPPER(DISTINCT rt0.c2))) DESC);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (0.8476522439479681) ORDER BY (((- (t1.c64))) NOT BETWEEN (((((rt0.c2)AND(rt0.c2)))AND(t1.c0))) AND (UPPER(DISTINCT rt0.c2))) DESC;
SELECT * FROM vt0, t1, v0, rt0 WHERE ((((t1.c64)) NOT BETWEEN ((((t1.c2) IS FALSE))) AND ((((t1.c2)*(rt0.c2)))))) ORDER BY ((((x'e336')/(rt0.c1))) IS TRUE) DESC  NULLS FIRST, (((vt0.c0 COLLATE BINARY))<>(('Z}gG9>|K'))) DESC, (((t1.c0) NOTNULL) IN (CASE WHEN rt0.c0 THEN v0.c0 ELSE t1.c0 END, '1305136947')) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c64)) NOT BETWEEN ((((t1.c2) IS FALSE))) AND ((((t1.c2)*(rt0.c2)))))) IS TRUE)  as count FROM vt0, t1, v0, rt0 ORDER BY ((((x'e336')/(rt0.c1))) IS TRUE) DESC  NULLS FIRST, (((vt0.c0 COLLATE BINARY))<>(('Z}gG9>|K'))) DESC, (((t1.c0) NOTNULL) IN (CASE WHEN rt0.c0 THEN v0.c0 ELSE t1.c0 END, '1305136947')) ASC);
SELECT * FROM vt0, t1, v0, rt0 WHERE ((((t1.c64)) NOT BETWEEN ((((t1.c2) IS FALSE))) AND ((((t1.c2)*(rt0.c2)))))) ORDER BY ((((x'e336')/(rt0.c1))) IS TRUE) DESC  NULLS FIRST, (((vt0.c0 COLLATE BINARY))<>(('Z}gG9>|K'))) DESC, (((t1.c0) NOTNULL) IN (CASE WHEN rt0.c0 THEN v0.c0 ELSE t1.c0 END, '1305136947')) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c64)) NOT BETWEEN ((((t1.c2) IS FALSE))) AND ((((t1.c2)*(rt0.c2)))))) IS TRUE)  as count FROM vt0, t1, v0, rt0 ORDER BY ((((x'e336')/(rt0.c1))) IS TRUE) DESC  NULLS FIRST, (((vt0.c0 COLLATE BINARY))<>(('Z}gG9>|K'))) DESC, (((t1.c0) NOTNULL) IN (CASE WHEN rt0.c0 THEN v0.c0 ELSE t1.c0 END, '1305136947')) ASC);
SELECT * FROM vt0, t1, v0, rt0 WHERE ((((t1.c64)) NOT BETWEEN ((((t1.c2) IS FALSE))) AND ((((t1.c2)*(rt0.c2)))))) ORDER BY ((((x'e336')/(rt0.c1))) IS TRUE) DESC  NULLS FIRST, (((vt0.c0 COLLATE BINARY))<>(('Z}gG9>|K'))) DESC, (((t1.c0) NOTNULL) IN (CASE WHEN rt0.c0 THEN v0.c0 ELSE t1.c0 END, '1305136947')) ASC;
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY CHAR(((v0.c0)<(-466938643)), v0.c0 COLLATE BINARY, (v0.c0 IN ())), (((((v0.c0)|(v0.c0))))>=((CAST(v0.c0 AS INTEGER))))  NULLS FIRST, ((CASE WHEN v0.c0 THEN v0.c0 END)IS((+ (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY CHAR(((v0.c0)<(-466938643)), v0.c0 COLLATE BINARY, (v0.c0 IN ())), (((((v0.c0)|(v0.c0))))>=((CAST(v0.c0 AS INTEGER))))  NULLS FIRST, ((CASE WHEN v0.c0 THEN v0.c0 END)IS((+ (v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY CHAR(((v0.c0)<(-466938643)), v0.c0 COLLATE BINARY, (v0.c0 IN ())), (((((v0.c0)|(v0.c0))))>=((CAST(v0.c0 AS INTEGER))))  NULLS FIRST, ((CASE WHEN v0.c0 THEN v0.c0 END)IS((+ (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY CHAR(((v0.c0)<(-466938643)), v0.c0 COLLATE BINARY, (v0.c0 IN ())), (((((v0.c0)|(v0.c0))))>=((CAST(v0.c0 AS INTEGER))))  NULLS FIRST, ((CASE WHEN v0.c0 THEN v0.c0 END)IS((+ (v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY CHAR(((v0.c0)<(-466938643)), v0.c0 COLLATE BINARY, (v0.c0 IN ())), (((((v0.c0)|(v0.c0))))>=((CAST(v0.c0 AS INTEGER))))  NULLS FIRST, ((CASE WHEN v0.c0 THEN v0.c0 END)IS((+ (v0.c0))));
SELECT COUNT(*) FROM t1, v0, rt0, vt0 WHERE ('c矀');
SELECT SUM(count) FROM (SELECT ALL (('c矀') IS TRUE)  as count FROM t1, v0, rt0, vt0);
SELECT COUNT(*) FROM t1, v0, rt0, vt0 WHERE ('c矀');
SELECT SUM(count) FROM (SELECT ALL (('c矀') IS TRUE)  as count FROM t1, v0, rt0, vt0);
SELECT COUNT(*) FROM t1, v0, rt0, vt0 WHERE ('c矀');
SELECT ALL COUNT(*) FROM rt0, v0, vt0, t1 WHERE (((((t1.c0) IS TRUE))IS NOT(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((t1.c0) IS TRUE))IS NOT(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0, vt0, t1);
SELECT ALL COUNT(*) FROM rt0, v0, vt0, t1 WHERE (((((t1.c0) IS TRUE))IS NOT(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((t1.c0) IS TRUE))IS NOT(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0, vt0, t1);
SELECT ALL COUNT(*) FROM rt0, v0, vt0, t1 WHERE (((((t1.c0) IS TRUE))IS NOT(rt0.c2 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (HEX('|t폭gT')) ORDER BY (((vt0.c0, -1.731488913E9, vt0.c0)) BETWEEN ((CAST(rt0.c2 AS INTEGER), vt0.c0, ((rt0.c0)=(rt0.c0)))) AND (((((rt0.c1, rt0.c2, rt0.c0))>((rt0.c2, v0.c0, rt0.c1))), ((rt0.c1)LIKE(rt0.c0)), ((rt0.c1)>=(vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((HEX('|t폭gT')) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((vt0.c0, -1.731488913E9, vt0.c0)) BETWEEN ((CAST(rt0.c2 AS INTEGER), vt0.c0, ((rt0.c0)==(rt0.c0)))) AND (((((rt0.c1, rt0.c2, rt0.c0))>((rt0.c2, v0.c0, rt0.c1))), ((rt0.c1)LIKE(rt0.c0)), ((rt0.c1)>=(vt0.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (HEX('|t폭gT')) ORDER BY (((vt0.c0, -1.731488913E9, vt0.c0)) BETWEEN ((CAST(rt0.c2 AS INTEGER), vt0.c0, ((rt0.c0)=(rt0.c0)))) AND (((((rt0.c1, rt0.c2, rt0.c0))>((rt0.c2, v0.c0, rt0.c1))), ((rt0.c1)LIKE(rt0.c0)), ((rt0.c1)>=(vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((HEX('|t폭gT')) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((vt0.c0, -1.731488913E9, vt0.c0)) BETWEEN ((CAST(rt0.c2 AS INTEGER), vt0.c0, ((rt0.c0)==(rt0.c0)))) AND (((((rt0.c1, rt0.c2, rt0.c0))>((rt0.c2, v0.c0, rt0.c1))), ((rt0.c1)LIKE(rt0.c0)), ((rt0.c1)>=(vt0.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (HEX('|t폭gT')) ORDER BY (((vt0.c0, -1.731488913E9, vt0.c0)) BETWEEN ((CAST(rt0.c2 AS INTEGER), vt0.c0, ((rt0.c0)=(rt0.c0)))) AND (((((rt0.c1, rt0.c2, rt0.c0))>((rt0.c2, v0.c0, rt0.c1))), ((rt0.c1)LIKE(rt0.c0)), ((rt0.c1)>=(vt0.c0))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((vt0.c0) ISNULL) COLLATE BINARY WHERE (vt0.c0) ORDER BY (((((v0.c0))<=((vt0.c0))))<=((- (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 NOT INDEXED LEFT OUTER JOIN v0 ON ((vt0.c0) ISNULL) COLLATE BINARY ORDER BY (((((v0.c0))<=((vt0.c0))))<=((- (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((vt0.c0) ISNULL) COLLATE BINARY WHERE (vt0.c0) ORDER BY (((((v0.c0))<=((vt0.c0))))<=((- (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 NOT INDEXED LEFT OUTER JOIN v0 ON ((vt0.c0) ISNULL) COLLATE BINARY ORDER BY (((((v0.c0))<=((vt0.c0))))<=((- (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((vt0.c0) ISNULL) COLLATE BINARY WHERE (vt0.c0) ORDER BY (((((v0.c0))<=((vt0.c0))))<=((- (vt0.c0))));
SELECT ALL * FROM t1 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS INTEGER))>(CAST(rt0.c2 AS TEXT))) WHERE (((t1.c64) BETWEEN (t1.c2) AND (0Xffffffffd8a649cf)) COLLATE BINARY) ORDER BY ((((((t1.c64)OR('B2#6K&QVp')))OR(((t1.c2)!=(rt0.c0)))))AND(((rt0.c2)IS(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t1.c64) BETWEEN (t1.c2) AND (0Xffffffffd8a649cf)) COLLATE BINARY) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS INTEGER))>(CAST(rt0.c2 AS TEXT))) ORDER BY ((((((t1.c64)OR('B2#6K&QVp')))OR(((t1.c2)<>(rt0.c0)))))AND(((rt0.c2)IS(rt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM t1 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS INTEGER))>(CAST(rt0.c2 AS TEXT))) WHERE (((t1.c64) BETWEEN (t1.c2) AND (0Xffffffffd8a649cf)) COLLATE BINARY) ORDER BY ((((((t1.c64)OR('B2#6K&QVp')))OR(((t1.c2)!=(rt0.c0)))))AND(((rt0.c2)IS(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t1.c64) BETWEEN (t1.c2) AND (0Xffffffffd8a649cf)) COLLATE BINARY) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS INTEGER))>(CAST(rt0.c2 AS TEXT))) ORDER BY ((((((t1.c64)OR('B2#6K&QVp')))OR(((t1.c2)<>(rt0.c0)))))AND(((rt0.c2)IS(rt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM t1 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS INTEGER))>(CAST(rt0.c2 AS TEXT))) WHERE (((t1.c64) BETWEEN (t1.c2) AND (0Xffffffffd8a649cf)) COLLATE BINARY) ORDER BY ((((((t1.c64)OR('B2#6K&QVp')))OR(((t1.c2)!=(rt0.c0)))))AND(((rt0.c2)IS(rt0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)IS(0.6942713355531612)) AS INTEGER)) ORDER BY 0.6582592991353563;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)IS(0.6942713355531612)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY 0.6582592991353563);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)IS(0.6942713355531612)) AS INTEGER)) ORDER BY 0.6582592991353563;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)IS(0.6942713355531612)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY 0.6582592991353563);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)IS(0.6942713355531612)) AS INTEGER)) ORDER BY 0.6582592991353563;
SELECT * FROM t1, rt0, vt0, v0 WHERE (((((((t1.c64) NOT BETWEEN (rt0.c0) AND (vt0.c0)))OR(v0.c0)))OR(((rt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c64) NOT BETWEEN (rt0.c0) AND (vt0.c0)))OR(v0.c0)))OR(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM t1, rt0, vt0, v0);
SELECT * FROM t1, rt0, vt0, v0 WHERE (((((((t1.c64) NOT BETWEEN (rt0.c0) AND (vt0.c0)))OR(v0.c0)))OR(((rt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c64) NOT BETWEEN (rt0.c0) AND (vt0.c0)))OR(v0.c0)))OR(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM t1, rt0, vt0, v0);
SELECT * FROM t1, rt0, vt0, v0 WHERE (((((((t1.c64) NOT BETWEEN (rt0.c0) AND (vt0.c0)))OR(v0.c0)))OR(((rt0.c2) IS TRUE))));
SELECT * FROM t1 WHERE (((((((((((((((((t1.c0)OR(t1.c2)))OR(t1.c0)))AND(t1.c64)))AND(t1.c64)))AND(t1.c0)))AND(t1.c2)))OR(x'')))OR(CASE t1.c64  WHEN t1.c64 THEN t1.c0 END))) ORDER BY ((0x6f6677c0)>>(UNLIKELY(t1.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((t1.c0)OR(t1.c2)))OR(t1.c0)))AND(t1.c64)))AND(t1.c64)))AND(t1.c0)))AND(t1.c2)))OR(x'')))OR(CASE t1.c64  WHEN t1.c64 THEN t1.c0 END))) IS TRUE)  as count FROM t1 ORDER BY ((0x6f6677c0)>>(UNLIKELY(t1.c2)))  NULLS LAST);
SELECT * FROM t1 WHERE (((((((((((((((((t1.c0)OR(t1.c2)))OR(t1.c0)))AND(t1.c64)))AND(t1.c64)))AND(t1.c0)))AND(t1.c2)))OR(x'')))OR(CASE t1.c64  WHEN t1.c64 THEN t1.c0 END))) ORDER BY ((0x6f6677c0)>>(UNLIKELY(t1.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((t1.c0)OR(t1.c2)))OR(t1.c0)))AND(t1.c64)))AND(t1.c64)))AND(t1.c0)))AND(t1.c2)))OR(x'')))OR(CASE t1.c64  WHEN t1.c64 THEN t1.c0 END))) IS TRUE)  as count FROM t1 ORDER BY ((0x6f6677c0)>>(UNLIKELY(t1.c2)))  NULLS LAST);
SELECT * FROM t1 WHERE (((((((((((((((((t1.c0)OR(t1.c2)))OR(t1.c0)))AND(t1.c64)))AND(t1.c64)))AND(t1.c0)))AND(t1.c2)))OR(x'')))OR(CASE t1.c64  WHEN t1.c64 THEN t1.c0 END))) ORDER BY ((0x6f6677c0)>>(UNLIKELY(t1.c2)))  NULLS LAST;
SELECT ALL * FROM vt0, t1 WHERE (t1.c64);
SELECT SUM(count) FROM (SELECT ALL ((t1.c64) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (t1.c64);
SELECT SUM(count) FROM (SELECT ALL ((t1.c64) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (t1.c64);
SELECT ALL COUNT(*) FROM t1 WHERE (json_array_length('1628353045')) ORDER BY CAST((t1.c0 IN ()) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length('1628353045')) IS TRUE)  as count FROM t1 ORDER BY CAST((t1.c0 IN ()) AS REAL) DESC);
SELECT ALL COUNT(*) FROM t1 WHERE (json_array_length('1628353045')) ORDER BY CAST((t1.c0 IN ()) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length('1628353045')) IS TRUE)  as count FROM t1 ORDER BY CAST((t1.c0 IN ()) AS REAL) DESC);
SELECT ALL COUNT(*) FROM t1 WHERE (json_array_length('1628353045')) ORDER BY CAST((t1.c0 IN ()) AS REAL) DESC;
SELECT ALL * FROM rt0 WHERE (((IFNULL(rt0.c0, NULL))LIKE(TYPEOF(rt0.c0)))) ORDER BY (908514903 IN (((((((((rt0.c0)AND(rt0.c1)))OR(x'4f67')))OR(rt0.c1)))OR(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(rt0.c0, NULL))LIKE(TYPEOF(rt0.c0)))) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY (908514903 IN (((((((((rt0.c0)AND(rt0.c1)))OR(x'4f67')))OR(rt0.c1)))OR(rt0.c2)))) ASC);
SELECT ALL * FROM rt0 WHERE (((IFNULL(rt0.c0, NULL))LIKE(TYPEOF(rt0.c0)))) ORDER BY (908514903 IN (((((((((rt0.c0)AND(rt0.c1)))OR(x'4f67')))OR(rt0.c1)))OR(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(rt0.c0, NULL))LIKE(TYPEOF(rt0.c0)))) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY (908514903 IN (((((((((rt0.c0)AND(rt0.c1)))OR(x'4f67')))OR(rt0.c1)))OR(rt0.c2)))) ASC);
SELECT ALL * FROM rt0 WHERE (((IFNULL(rt0.c0, NULL))LIKE(TYPEOF(rt0.c0)))) ORDER BY (908514903 IN (((((((((rt0.c0)AND(rt0.c1)))OR(x'4f67')))OR(rt0.c1)))OR(rt0.c2)))) ASC;
SELECT * FROM vt0 LEFT OUTER JOIN t1 ON t1.c64 WHERE (CASE ((t1.c2)>(t1.c2))  WHEN ((t1.c64)LIKE(t1.c64)) THEN ((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c0)) WHEN (vt0.c0 IN (vt0.c0, vt0.c0)) THEN (t1.c0 IN ()) WHEN ((vt0.c0)%(0.3027529689875865)) THEN ((t1.c2)|(t1.c64)) END) ORDER BY CAST(((((((((t1.c2)AND(t1.c64)))OR(vt0.c0)))AND(t1.c2)))OR(t1.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t1.c2)>(t1.c2))  WHEN ((t1.c64)LIKE(t1.c64)) THEN ((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c0)) WHEN (vt0.c0 IN (vt0.c0, vt0.c0)) THEN (t1.c0 IN ()) WHEN ((vt0.c0)%(0.3027529689875865)) THEN ((t1.c2)|(t1.c64)) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON t1.c64 ORDER BY CAST(((((((((t1.c2)AND(t1.c64)))OR(vt0.c0)))AND(t1.c2)))OR(t1.c0)) AS NUMERIC)  NULLS FIRST);
SELECT * FROM vt0 LEFT OUTER JOIN t1 ON t1.c64 WHERE (CASE ((t1.c2)>(t1.c2))  WHEN ((t1.c64)LIKE(t1.c64)) THEN ((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c0)) WHEN (vt0.c0 IN (vt0.c0, vt0.c0)) THEN (t1.c0 IN ()) WHEN ((vt0.c0)%(0.3027529689875865)) THEN ((t1.c2)|(t1.c64)) END) ORDER BY CAST(((((((((t1.c2)AND(t1.c64)))OR(vt0.c0)))AND(t1.c2)))OR(t1.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t1.c2)>(t1.c2))  WHEN ((t1.c64)LIKE(t1.c64)) THEN ((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c0)) WHEN (vt0.c0 IN (vt0.c0, vt0.c0)) THEN (t1.c0 IN ()) WHEN ((vt0.c0)%(0.3027529689875865)) THEN ((t1.c2)|(t1.c64)) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON t1.c64 ORDER BY CAST(((((((((t1.c2)AND(t1.c64)))OR(vt0.c0)))AND(t1.c2)))OR(t1.c0)) AS NUMERIC)  NULLS FIRST);
SELECT * FROM vt0 LEFT OUTER JOIN t1 ON t1.c64 WHERE (CASE ((t1.c2)>(t1.c2))  WHEN ((t1.c64)LIKE(t1.c64)) THEN ((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c0)) WHEN (vt0.c0 IN (vt0.c0, vt0.c0)) THEN (t1.c0 IN ()) WHEN ((vt0.c0)%(0.3027529689875865)) THEN ((t1.c2)|(t1.c64)) END) ORDER BY CAST(((((((((t1.c2)AND(t1.c64)))OR(vt0.c0)))AND(t1.c2)))OR(t1.c0)) AS NUMERIC)  NULLS FIRST;
SELECT ALL * FROM rt0, t1, v0, vt0 WHERE (((0X6f6677c0)IS NOT(((((((((t1.c0)AND(rt0.c1)))OR(v0.c0)))OR(rt0.c0)))OR(rt0.c2))))) ORDER BY ((((rt0.c1)AND(t1.c64)))AND(t1.c2)) COLLATE RTRIM COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0x6f6677c0)IS NOT(((((((((t1.c0)AND(rt0.c1)))OR(v0.c0)))OR(rt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0, t1, v0, vt0 ORDER BY ((((rt0.c1)AND(t1.c64)))AND(t1.c2)) COLLATE RTRIM COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t1, v0, vt0 WHERE (((0X6f6677c0)IS NOT(((((((((t1.c0)AND(rt0.c1)))OR(v0.c0)))OR(rt0.c0)))OR(rt0.c2))))) ORDER BY ((((rt0.c1)AND(t1.c64)))AND(t1.c2)) COLLATE RTRIM COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0x6f6677c0)IS NOT(((((((((t1.c0)AND(rt0.c1)))OR(v0.c0)))OR(rt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0, t1, v0, vt0 ORDER BY ((((rt0.c1)AND(t1.c64)))AND(t1.c2)) COLLATE RTRIM COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t1, v0, vt0 WHERE (((0X6f6677c0)IS NOT(((((((((t1.c0)AND(rt0.c1)))OR(v0.c0)))OR(rt0.c0)))OR(rt0.c2))))) ORDER BY ((((rt0.c1)AND(t1.c64)))AND(t1.c2)) COLLATE RTRIM COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t1, v0 WHERE (UPPER(((v0.c0)OR(x'c1c8')))) ORDER BY ((((((rt0.c0) BETWEEN (rt0.c0) AND (t1.c64)))AND(((0.6568104098646177)>(rt0.c0)))))AND(0x54ff7fa6)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((v0.c0)OR(x'c1c8')))) IS TRUE)  as count FROM rt0, t1, v0 ORDER BY ((((((rt0.c0) BETWEEN (rt0.c0) AND (t1.c64)))AND(((0.6568104098646177)>(rt0.c0)))))AND(0x54ff7fa6)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t1, v0 WHERE (UPPER(((v0.c0)OR(x'c1c8')))) ORDER BY ((((((rt0.c0) BETWEEN (rt0.c0) AND (t1.c64)))AND(((0.6568104098646177)>(rt0.c0)))))AND(0x54ff7fa6)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((v0.c0)OR(x'c1c8')))) IS TRUE)  as count FROM rt0, t1, v0 ORDER BY ((((((rt0.c0) BETWEEN (rt0.c0) AND (t1.c64)))AND(((0.6568104098646177)>(rt0.c0)))))AND(0x54ff7fa6)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t1, v0 WHERE (UPPER(((v0.c0)OR(x'c1c8')))) ORDER BY ((((((rt0.c0) BETWEEN (rt0.c0) AND (t1.c64)))AND(((0.6568104098646177)>(rt0.c0)))))AND(0x54ff7fa6)) ASC  NULLS FIRST;
SELECT * FROM t1, v0, vt0 WHERE (CASE NULL  WHEN x'' THEN ((t1.c0)+(t1.c0)) ELSE UNLIKELY(DISTINCT t1.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN x'' THEN ((t1.c0)+(t1.c0)) ELSE UNLIKELY(DISTINCT t1.c0) END) IS TRUE)  as count FROM t1, v0, vt0);
SELECT * FROM t1, v0, vt0 WHERE (CASE NULL  WHEN x'' THEN ((t1.c0)+(t1.c0)) ELSE UNLIKELY(DISTINCT t1.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN x'' THEN ((t1.c0)+(t1.c0)) ELSE UNLIKELY(DISTINCT t1.c0) END) IS TRUE)  as count FROM t1, v0, vt0);
SELECT * FROM t1, v0, vt0 WHERE (CASE NULL  WHEN x'' THEN ((t1.c0)+(t1.c0)) ELSE UNLIKELY(DISTINCT t1.c0) END);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((CAST(vt0.c0 AS NUMERIC)))==((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))) ORDER BY (((((rt0.c1) ISNULL), rt0.c1 COLLATE NOCASE, (- (rt0.c1)), 0.9776762593617894, CASE WHEN rt0.c0 THEN NULL ELSE rt0.c0 END))==(((rt0.c0 IN ()), rt0.c0 COLLATE NOCASE, 0Xffffffffca6d0dbf, ((((rt0.c0)AND(rt0.c0)))AND(vt0.c0)), ((rt0.c2) ISNULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c0 AS NUMERIC)))=((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((rt0.c1) ISNULL), rt0.c1 COLLATE NOCASE, (- (rt0.c1)), 0.9776762593617894, CASE WHEN rt0.c0 THEN NULL ELSE rt0.c0 END))=(((rt0.c0 IN ()), rt0.c0 COLLATE NOCASE, 0Xffffffffca6d0dbf, ((((rt0.c0)AND(rt0.c0)))AND(vt0.c0)), ((rt0.c2) ISNULL))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((CAST(vt0.c0 AS NUMERIC)))==((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))) ORDER BY (((((rt0.c1) ISNULL), rt0.c1 COLLATE NOCASE, (- (rt0.c1)), 0.9776762593617894, CASE WHEN rt0.c0 THEN NULL ELSE rt0.c0 END))==(((rt0.c0 IN ()), rt0.c0 COLLATE NOCASE, 0Xffffffffca6d0dbf, ((((rt0.c0)AND(rt0.c0)))AND(vt0.c0)), ((rt0.c2) ISNULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c0 AS NUMERIC)))=((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((rt0.c1) ISNULL), rt0.c1 COLLATE NOCASE, (- (rt0.c1)), 0.9776762593617894, CASE WHEN rt0.c0 THEN NULL ELSE rt0.c0 END))=(((rt0.c0 IN ()), rt0.c0 COLLATE NOCASE, 0Xffffffffca6d0dbf, ((((rt0.c0)AND(rt0.c0)))AND(vt0.c0)), ((rt0.c2) ISNULL))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((CAST(vt0.c0 AS NUMERIC)))==((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))) ORDER BY (((((rt0.c1) ISNULL), rt0.c1 COLLATE NOCASE, (- (rt0.c1)), 0.9776762593617894, CASE WHEN rt0.c0 THEN NULL ELSE rt0.c0 END))==(((rt0.c0 IN ()), rt0.c0 COLLATE NOCASE, 0Xffffffffca6d0dbf, ((((rt0.c0)AND(rt0.c0)))AND(vt0.c0)), ((rt0.c2) ISNULL))))  NULLS LAST;
SELECT * FROM rt0 FULL OUTER JOIN t1 ON (((((t1.c0)%('-1208130653'))))<>((((rt0.c2) NOTNULL)))) WHERE ('') ORDER BY t1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON (((((t1.c0)%('-1208130653'))))<>((((rt0.c2) NOTNULL)))) ORDER BY t1.c0  NULLS LAST);
SELECT * FROM rt0 FULL OUTER JOIN t1 ON (((((t1.c0)%('-1208130653'))))<>((((rt0.c2) NOTNULL)))) WHERE ('') ORDER BY t1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON (((((t1.c0)%('-1208130653'))))<>((((rt0.c2) NOTNULL)))) ORDER BY t1.c0  NULLS LAST);
SELECT * FROM rt0 FULL OUTER JOIN t1 ON (((((t1.c0)%('-1208130653'))))<>((((rt0.c2) NOTNULL)))) WHERE ('') ORDER BY t1.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, v0, rt0, vt0 NOT INDEXED WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1, v0, rt0, vt0);
SELECT ALL COUNT(*) FROM t1, v0, rt0, vt0 NOT INDEXED WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1, v0, rt0, vt0);
SELECT ALL COUNT(*) FROM t1, v0, rt0, vt0 NOT INDEXED WHERE (x'');
SELECT COUNT(*) FROM t1, vt0 RIGHT OUTER JOIN rt0 ON ((('' IN (vt0.c0, rt0.c2)))>>((v0.c0 IN ()))) FULL OUTER JOIN v0 ON ((((rt0.c0 COLLATE RTRIM)AND(x'')))OR((~ (t1.c64)))) WHERE ((((t1.c0)=(t1.c64)) IN (((rt0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((t1.c0)==(t1.c64)) IN (((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM t1, vt0 RIGHT OUTER JOIN rt0 ON ((('' IN (vt0.c0, rt0.c2)))>>((v0.c0 IN ()))) FULL OUTER JOIN v0 ON ((((rt0.c0 COLLATE RTRIM)AND(x'')))OR((~ (t1.c64)))));
SELECT COUNT(*) FROM t1, vt0 RIGHT OUTER JOIN rt0 ON ((('' IN (vt0.c0, rt0.c2)))>>((v0.c0 IN ()))) FULL OUTER JOIN v0 ON ((((rt0.c0 COLLATE RTRIM)AND(x'')))OR((~ (t1.c64)))) WHERE ((((t1.c0)=(t1.c64)) IN (((rt0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((t1.c0)==(t1.c64)) IN (((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM t1, vt0 RIGHT OUTER JOIN rt0 ON ((('' IN (vt0.c0, rt0.c2)))>>((v0.c0 IN ()))) FULL OUTER JOIN v0 ON ((((rt0.c0 COLLATE RTRIM)AND(x'')))OR((~ (t1.c64)))));
SELECT COUNT(*) FROM t1, vt0 RIGHT OUTER JOIN rt0 ON ((('' IN (vt0.c0, rt0.c2)))>>((v0.c0 IN ()))) FULL OUTER JOIN v0 ON ((((rt0.c0 COLLATE RTRIM)AND(x'')))OR((~ (t1.c64)))) WHERE ((((t1.c0)=(t1.c64)) IN (((rt0.c2) NOT NULL))));
SELECT ALL COUNT(*) FROM v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END COLLATE BINARY) ORDER BY (((v0.c0)>(v0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)>(v0.c0)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END COLLATE BINARY) ORDER BY (((v0.c0)>(v0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)>(v0.c0)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END COLLATE BINARY) ORDER BY (((v0.c0)>(v0.c0)) IN ())  NULLS FIRST;
SELECT ALL * FROM v0 NOT INDEXED, t1, vt0 WHERE (((((- (vt0.c0))))>((CAST(t1.c64 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ((((((- (vt0.c0))))>((CAST(t1.c64 AS NUMERIC))))) IS TRUE)  as count FROM v0, t1, vt0);
SELECT ALL * FROM v0 NOT INDEXED, t1, vt0 WHERE (((((- (vt0.c0))))>((CAST(t1.c64 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ((((((- (vt0.c0))))>((CAST(t1.c64 AS NUMERIC))))) IS TRUE)  as count FROM v0, t1, vt0);
SELECT ALL * FROM v0 NOT INDEXED, t1, vt0 WHERE (((((- (vt0.c0))))>((CAST(t1.c64 AS NUMERIC)))));
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE (((rt0.c0 COLLATE NOCASE)=((rt0.c0 IN (t1.c2))))) ORDER BY (((t1.c0 IN ()))&(((NULL) BETWEEN (rt0.c0) AND (t1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE)=((rt0.c0 IN (t1.c2))))) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY (((t1.c0 IN ()))&(((NULL) BETWEEN (rt0.c0) AND (t1.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE (((rt0.c0 COLLATE NOCASE)=((rt0.c0 IN (t1.c2))))) ORDER BY (((t1.c0 IN ()))&(((NULL) BETWEEN (rt0.c0) AND (t1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE)=((rt0.c0 IN (t1.c2))))) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY (((t1.c0 IN ()))&(((NULL) BETWEEN (rt0.c0) AND (t1.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE (((rt0.c0 COLLATE NOCASE)=((rt0.c0 IN (t1.c2))))) ORDER BY (((t1.c0 IN ()))&(((NULL) BETWEEN (rt0.c0) AND (t1.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, t1 WHERE (('<证VVW' COLLATE NOCASE IN (((((t1.c64)OR(t1.c2)))AND(vt0.c0))))) ORDER BY -2126999130;
SELECT SUM(count) FROM (SELECT ((('<证VVW' COLLATE NOCASE IN (((((t1.c64)OR(t1.c2)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, t1 ORDER BY -2126999130);
SELECT ALL * FROM vt0, t1 WHERE (('<证VVW' COLLATE NOCASE IN (((((t1.c64)OR(t1.c2)))AND(vt0.c0))))) ORDER BY -2126999130;
SELECT SUM(count) FROM (SELECT ((('<证VVW' COLLATE NOCASE IN (((((t1.c64)OR(t1.c2)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, t1 ORDER BY -2126999130);
SELECT * FROM rt0, vt0 WHERE ((((vt0.c0, vt0.c0, rt0.c1)) BETWEEN (((~ ('723581270')), rt0.c2, ((rt0.c0)<(rt0.c1)))) AND ((((rt0.c1) NOT BETWEEN ('1433819444') AND (rt0.c1)), (rt0.c2 IN ()), CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, rt0.c1)) BETWEEN (((~ ('723581270')), rt0.c2, ((rt0.c0)<(rt0.c1)))) AND ((((rt0.c1) NOT BETWEEN ('1433819444') AND (rt0.c1)), (rt0.c2 IN ()), CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((vt0.c0, vt0.c0, rt0.c1)) BETWEEN (((~ ('723581270')), rt0.c2, ((rt0.c0)<(rt0.c1)))) AND ((((rt0.c1) NOT BETWEEN ('1433819444') AND (rt0.c1)), (rt0.c2 IN ()), CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, rt0.c1)) BETWEEN (((~ ('723581270')), rt0.c2, ((rt0.c0)<(rt0.c1)))) AND ((((rt0.c1) NOT BETWEEN ('1433819444') AND (rt0.c1)), (rt0.c2 IN ()), CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((vt0.c0, vt0.c0, rt0.c1)) BETWEEN (((~ ('723581270')), rt0.c2, ((rt0.c0)<(rt0.c1)))) AND ((((rt0.c1) NOT BETWEEN ('1433819444') AND (rt0.c1)), (rt0.c2 IN ()), CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))));
SELECT ALL COUNT(*) FROM vt0, t1, v0 WHERE (UPPER(TRIM(DISTINCT t1.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ((UPPER(TRIM(DISTINCT t1.c0, vt0.c0))) IS TRUE)  as count FROM vt0, t1, v0);
SELECT ALL COUNT(*) FROM vt0, t1, v0 WHERE (UPPER(TRIM(DISTINCT t1.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ((UPPER(TRIM(DISTINCT t1.c0, vt0.c0))) IS TRUE)  as count FROM vt0, t1, v0);
SELECT ALL COUNT(*) FROM vt0, t1, v0 WHERE (UPPER(TRIM(DISTINCT t1.c0, vt0.c0)));
SELECT COUNT(*) FROM v0 WHERE ((~ (((v0.c0) NOT BETWEEN ('-323935042') AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((v0.c0) NOT BETWEEN ('-323935042') AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((~ (((v0.c0) NOT BETWEEN ('-323935042') AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((v0.c0) NOT BETWEEN ('-323935042') AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((~ (((v0.c0) NOT BETWEEN ('-323935042') AND (v0.c0)))));
SELECT * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)IS NOT(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0X6f6677c0 WHEN v0.c0 THEN -236096014 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) ORDER BY ((((v0.c0)IS NOT(v0.c0)))<<(0.04164919312981441))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)IS NOT(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0X6f6677c0 WHEN v0.c0 THEN -236096014 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)IS NOT(v0.c0)))<<(0.04164919312981441))  NULLS LAST);
SELECT * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)IS NOT(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0X6f6677c0 WHEN v0.c0 THEN -236096014 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) ORDER BY ((((v0.c0)IS NOT(v0.c0)))<<(0.04164919312981441))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)IS NOT(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0X6f6677c0 WHEN v0.c0 THEN -236096014 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)IS NOT(v0.c0)))<<(0.04164919312981441))  NULLS LAST);
SELECT * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)IS NOT(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0X6f6677c0 WHEN v0.c0 THEN -236096014 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) ORDER BY ((((v0.c0)IS NOT(v0.c0)))<<(0.04164919312981441))  NULLS LAST;
SELECT * FROM rt0 NOT INDEXED, t1, vt0, v0 WHERE (((0Xffffffffb07a0946) NOT BETWEEN (((v0.c0)LIKE(rt0.c0))) AND (((((((((((((t1.c0)AND(rt0.c0)))AND(rt0.c0)))AND(t1.c0)))AND(rt0.c2)))AND(v0.c0)))OR(x'')))));
SELECT SUM(count) FROM (SELECT ((((0Xffffffffb07a0946) NOT BETWEEN (((v0.c0)LIKE(rt0.c0))) AND (((((((((((((t1.c0)AND(rt0.c0)))AND(rt0.c0)))AND(t1.c0)))AND(rt0.c2)))AND(v0.c0)))OR(x''))))) IS TRUE)  as count FROM rt0, t1, vt0, v0);
SELECT * FROM rt0 NOT INDEXED, t1, vt0, v0 WHERE (((0Xffffffffb07a0946) NOT BETWEEN (((v0.c0)LIKE(rt0.c0))) AND (((((((((((((t1.c0)AND(rt0.c0)))AND(rt0.c0)))AND(t1.c0)))AND(rt0.c2)))AND(v0.c0)))OR(x'')))));
SELECT SUM(count) FROM (SELECT ((((0Xffffffffb07a0946) NOT BETWEEN (((v0.c0)LIKE(rt0.c0))) AND (((((((((((((t1.c0)AND(rt0.c0)))AND(rt0.c0)))AND(t1.c0)))AND(rt0.c2)))AND(v0.c0)))OR(x''))))) IS TRUE)  as count FROM rt0, t1, vt0, v0);
SELECT * FROM rt0 NOT INDEXED, t1, vt0, v0 WHERE (((0Xffffffffb07a0946) NOT BETWEEN (((v0.c0)LIKE(rt0.c0))) AND (((((((((((((t1.c0)AND(rt0.c0)))AND(rt0.c0)))AND(t1.c0)))AND(rt0.c2)))AND(v0.c0)))OR(x'')))));
SELECT * FROM vt0 WHERE (ABS(LENGTH(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((ABS(LENGTH(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (ABS(LENGTH(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((ABS(LENGTH(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (ABS(LENGTH(vt0.c0)));
SELECT COUNT(*) FROM t1, rt0, v0 WHERE (((LOWER(NULL)) NOT BETWEEN (((v0.c0)<(t1.c0))) AND ((((x'268c'))>=((t1.c0)))))) ORDER BY (CAST(t1.c64 AS BLOB) IN (((rt0.c1) NOT BETWEEN (1908103078) AND (t1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((LOWER(NULL)) NOT BETWEEN (((v0.c0)<(t1.c0))) AND ((((x'268c'))>=((t1.c0)))))) IS TRUE)  as count FROM t1, rt0, v0 ORDER BY (CAST(t1.c64 AS BLOB) IN (((rt0.c1) NOT BETWEEN (1908103078) AND (t1.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt0, v0 WHERE (((LOWER(NULL)) NOT BETWEEN (((v0.c0)<(t1.c0))) AND ((((x'268c'))>=((t1.c0)))))) ORDER BY (CAST(t1.c64 AS BLOB) IN (((rt0.c1) NOT BETWEEN (1908103078) AND (t1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((LOWER(NULL)) NOT BETWEEN (((v0.c0)<(t1.c0))) AND ((((x'268c'))>=((t1.c0)))))) IS TRUE)  as count FROM t1, rt0, v0 ORDER BY (CAST(t1.c64 AS BLOB) IN (((rt0.c1) NOT BETWEEN (1908103078) AND (t1.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt0, v0 WHERE (((LOWER(NULL)) NOT BETWEEN (((v0.c0)<(t1.c0))) AND ((((x'268c'))>=((t1.c0)))))) ORDER BY (CAST(t1.c64 AS BLOB) IN (((rt0.c1) NOT BETWEEN (1908103078) AND (t1.c0)))) DESC  NULLS FIRST;
SELECT * FROM v0, rt0 WHERE (((((rt0.c0)*(rt0.c2))) BETWEEN ((~ (v0.c0))) AND (INSTR(v0.c0, v0.c0)))) ORDER BY (rt0.c0 IN ()) ASC  NULLS LAST, x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)*(rt0.c2))) BETWEEN ((~ (v0.c0))) AND (INSTR(v0.c0, v0.c0)))) IS TRUE)  as count FROM v0, rt0 ORDER BY (rt0.c0 IN ()) ASC  NULLS LAST, x''  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (((((rt0.c0)*(rt0.c2))) BETWEEN ((~ (v0.c0))) AND (INSTR(v0.c0, v0.c0)))) ORDER BY (rt0.c0 IN ()) ASC  NULLS LAST, x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)*(rt0.c2))) BETWEEN ((~ (v0.c0))) AND (INSTR(v0.c0, v0.c0)))) IS TRUE)  as count FROM v0, rt0 ORDER BY (rt0.c0 IN ()) ASC  NULLS LAST, x''  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (((((rt0.c0)*(rt0.c2))) BETWEEN ((~ (v0.c0))) AND (INSTR(v0.c0, v0.c0)))) ORDER BY (rt0.c0 IN ()) ASC  NULLS LAST, x''  NULLS LAST;
SELECT ALL * FROM t1, vt0, v0 WHERE (t1.c0) ORDER BY ((NULLIF(DISTINCT t1.c2, t1.c64))%((t1.c0 IN (t1.c64, v0.c0)))) ASC, (('}I\Gꇽ')<=((NULL IN (vt0.c0, t1.c64)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1, vt0, v0 ORDER BY ((NULLIF(DISTINCT t1.c2, t1.c64))%((t1.c0 IN (t1.c64, v0.c0)))) ASC, (('}I\Gꇽ')<=((NULL IN (vt0.c0, t1.c64)))) DESC  NULLS FIRST);
SELECT ALL * FROM t1, vt0, v0 WHERE (t1.c0) ORDER BY ((NULLIF(DISTINCT t1.c2, t1.c64))%((t1.c0 IN (t1.c64, v0.c0)))) ASC, (('}I\Gꇽ')<=((NULL IN (vt0.c0, t1.c64)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1, vt0, v0 ORDER BY ((NULLIF(DISTINCT t1.c2, t1.c64))%((t1.c0 IN (t1.c64, v0.c0)))) ASC, (('}I\Gꇽ')<=((NULL IN (vt0.c0, t1.c64)))) DESC  NULLS FIRST);
SELECT ALL * FROM t1, vt0, v0 WHERE (t1.c0) ORDER BY ((NULLIF(DISTINCT t1.c2, t1.c64))%((t1.c0 IN (t1.c64, v0.c0)))) ASC, (('}I\Gꇽ')<=((NULL IN (vt0.c0, t1.c64)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, v0, t1 WHERE (((CAST(v0.c0 AS TEXT)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS TEXT)) ISNULL)) IS TRUE)  as count FROM rt0, v0, t1);
SELECT ALL * FROM rt0, v0, t1 WHERE (((CAST(v0.c0 AS TEXT)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS TEXT)) ISNULL)) IS TRUE)  as count FROM rt0, v0, t1);
SELECT ALL * FROM rt0, v0, t1 WHERE (((CAST(v0.c0 AS TEXT)) ISNULL));
SELECT ALL COUNT(*) FROM v0 WHERE ((+ ((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((- (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((+ ((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((- (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((+ ((- (v0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0))) NOT BETWEEN (DATE(vt0.c0, vt0.c0, vt0.c0)) AND (0.9776762593617894)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)GLOB(vt0.c0))) NOT BETWEEN (DATE(vt0.c0, vt0.c0, vt0.c0)) AND (0.9776762593617894))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0))) NOT BETWEEN (DATE(vt0.c0, vt0.c0, vt0.c0)) AND (0.9776762593617894)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)GLOB(vt0.c0))) NOT BETWEEN (DATE(vt0.c0, vt0.c0, vt0.c0)) AND (0.9776762593617894))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0))) NOT BETWEEN (DATE(vt0.c0, vt0.c0, vt0.c0)) AND (0.9776762593617894)));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((((rt0.c0))<=((rt0.c2)))) NOT NULL) WHERE (((((rt0.c1) ISNULL))>=(((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) ISNULL))>=(((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((((rt0.c0))<=((rt0.c2)))) NOT NULL));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((((rt0.c0))<=((rt0.c2)))) NOT NULL) WHERE (((((rt0.c1) ISNULL))>=(((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) ISNULL))>=(((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((((rt0.c0))<=((rt0.c2)))) NOT NULL));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((((rt0.c0))<=((rt0.c2)))) NOT NULL) WHERE (((((rt0.c1) ISNULL))>=(((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0 FULL OUTER JOIN v0 ON (LIKELIHOOD(rt0.c1, 0.49157223646182635) IN (((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c1)))) WHERE (((((0xffffffffcaf19b0b) IS FALSE)) NOT BETWEEN ((rt0.c1 IN (rt0.c0))) AND (vt0.c0))) ORDER BY (((rt0.c2))!=((v0.c0 COLLATE RTRIM))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((0Xffffffffcaf19b0b) IS FALSE)) NOT BETWEEN ((rt0.c1 IN (rt0.c0))) AND (vt0.c0))) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0 FULL OUTER JOIN v0 ON (LIKELIHOOD(rt0.c1, 0.49157223646182635) IN (((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c1)))) ORDER BY (((rt0.c2))!=((v0.c0 COLLATE RTRIM))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 FULL OUTER JOIN v0 ON (LIKELIHOOD(rt0.c1, 0.49157223646182635) IN (((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c1)))) WHERE (((((0xffffffffcaf19b0b) IS FALSE)) NOT BETWEEN ((rt0.c1 IN (rt0.c0))) AND (vt0.c0))) ORDER BY (((rt0.c2))!=((v0.c0 COLLATE RTRIM))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((0Xffffffffcaf19b0b) IS FALSE)) NOT BETWEEN ((rt0.c1 IN (rt0.c0))) AND (vt0.c0))) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0 FULL OUTER JOIN v0 ON (LIKELIHOOD(rt0.c1, 0.49157223646182635) IN (((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c1)))) ORDER BY (((rt0.c2))!=((v0.c0 COLLATE RTRIM))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 FULL OUTER JOIN v0 ON (LIKELIHOOD(rt0.c1, 0.49157223646182635) IN (((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c1)))) WHERE (((((0xffffffffcaf19b0b) IS FALSE)) NOT BETWEEN ((rt0.c1 IN (rt0.c0))) AND (vt0.c0))) ORDER BY (((rt0.c2))!=((v0.c0 COLLATE RTRIM))) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0 COLLATE NOCASE)AND(((v0.c0)>(v0.c0)))))OR(((v0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0 COLLATE NOCASE)AND(((v0.c0)>(v0.c0)))))OR(((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0 COLLATE NOCASE)AND(((v0.c0)>(v0.c0)))))OR(((v0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0 COLLATE NOCASE)AND(((v0.c0)>(v0.c0)))))OR(((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0 COLLATE NOCASE)AND(((v0.c0)>(v0.c0)))))OR(((v0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t1, v0, vt0, rt0 WHERE ((((rt0.c0 IN (t1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (t1.c0))) NOTNULL)) IS TRUE)  as count FROM t1, v0, vt0, rt0);
SELECT ALL COUNT(*) FROM t1, v0, vt0, rt0 WHERE ((((rt0.c0 IN (t1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (t1.c0))) NOTNULL)) IS TRUE)  as count FROM t1, v0, vt0, rt0);
SELECT ALL COUNT(*) FROM t1, v0, vt0, rt0 WHERE ((((rt0.c0 IN (t1.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM rt0, t1, v0, vt0 WHERE (CASE WHEN rt0.c2 THEN t1.c2 END COLLATE RTRIM COLLATE BINARY) ORDER BY t1.c0;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c2 THEN t1.c2 END COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM rt0, t1, v0, vt0 NOT INDEXED ORDER BY t1.c0);
SELECT ALL COUNT(*) FROM rt0, t1, v0, vt0 WHERE (CASE WHEN rt0.c2 THEN t1.c2 END COLLATE RTRIM COLLATE BINARY) ORDER BY t1.c0;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c2 THEN t1.c2 END COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM rt0, t1, v0, vt0 NOT INDEXED ORDER BY t1.c0);
SELECT ALL COUNT(*) FROM rt0, t1, v0, vt0 WHERE (CASE WHEN rt0.c2 THEN t1.c2 END COLLATE RTRIM COLLATE BINARY) ORDER BY t1.c0;
SELECT * FROM t1, v0 RIGHT OUTER JOIN rt0 ON CAST(0.8747593861449676 AS BLOB) LEFT OUTER JOIN vt0 ON (- (((v0.c0)==(vt0.c0)))) WHERE (((((((((STRFTIME(t1.c64, t1.c2, '', vt0.c0, t1.c2))OR(CAST(vt0.c0 AS TEXT))))AND((((t1.c2)) NOT BETWEEN ((rt0.c0)) AND ((t1.c0))))))AND(rt0.c1)))OR(CAST(t1.c0 AS TEXT)))) ORDER BY ((((((t1.c64)==(rt0.c1)))OR((+ (t1.c64)))))OR(((vt0.c0) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((STRFTIME(t1.c64, t1.c2, '', vt0.c0, t1.c2))OR(CAST(vt0.c0 AS TEXT))))AND((((t1.c2)) NOT BETWEEN ((rt0.c0)) AND ((t1.c0))))))AND(rt0.c1)))OR(CAST(t1.c0 AS TEXT)))) IS TRUE)  as count FROM t1, v0 RIGHT OUTER JOIN rt0 ON CAST(0.8747593861449676 AS BLOB) LEFT OUTER JOIN vt0 ON (- (((v0.c0)=(vt0.c0)))) ORDER BY ((((((t1.c64)==(rt0.c1)))OR((+ (t1.c64)))))OR(((vt0.c0) NOT NULL))) DESC);
SELECT * FROM t1, v0 RIGHT OUTER JOIN rt0 ON CAST(0.8747593861449676 AS BLOB) LEFT OUTER JOIN vt0 ON (- (((v0.c0)==(vt0.c0)))) WHERE (((((((((STRFTIME(t1.c64, t1.c2, '', vt0.c0, t1.c2))OR(CAST(vt0.c0 AS TEXT))))AND((((t1.c2)) NOT BETWEEN ((rt0.c0)) AND ((t1.c0))))))AND(rt0.c1)))OR(CAST(t1.c0 AS TEXT)))) ORDER BY ((((((t1.c64)==(rt0.c1)))OR((+ (t1.c64)))))OR(((vt0.c0) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((STRFTIME(t1.c64, t1.c2, '', vt0.c0, t1.c2))OR(CAST(vt0.c0 AS TEXT))))AND((((t1.c2)) NOT BETWEEN ((rt0.c0)) AND ((t1.c0))))))AND(rt0.c1)))OR(CAST(t1.c0 AS TEXT)))) IS TRUE)  as count FROM t1, v0 RIGHT OUTER JOIN rt0 ON CAST(0.8747593861449676 AS BLOB) LEFT OUTER JOIN vt0 ON (- (((v0.c0)=(vt0.c0)))) ORDER BY ((((((t1.c64)==(rt0.c1)))OR((+ (t1.c64)))))OR(((vt0.c0) NOT NULL))) DESC);
SELECT * FROM t1, v0 RIGHT OUTER JOIN rt0 ON CAST(0.8747593861449676 AS BLOB) LEFT OUTER JOIN vt0 ON (- (((v0.c0)==(vt0.c0)))) WHERE (((((((((STRFTIME(t1.c64, t1.c2, '', vt0.c0, t1.c2))OR(CAST(vt0.c0 AS TEXT))))AND((((t1.c2)) NOT BETWEEN ((rt0.c0)) AND ((t1.c0))))))AND(rt0.c1)))OR(CAST(t1.c0 AS TEXT)))) ORDER BY ((((((t1.c64)==(rt0.c1)))OR((+ (t1.c64)))))OR(((vt0.c0) NOT NULL))) DESC;
SELECT ALL * FROM vt0, v0, rt0 WHERE ((~ (((vt0.c0) BETWEEN (v0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0) BETWEEN (v0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((~ (((vt0.c0) BETWEEN (v0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0) BETWEEN (v0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((~ (((vt0.c0) BETWEEN (v0.c0) AND (rt0.c2)))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((x'97dc', '', CAST(rt0.c1 AS TEXT))) AND (((vt0.c0 IN (rt0.c0)), (((vt0.c0))<((rt0.c0))), NULL))) WHERE ((rt0.c2 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((x'97dc', '', CAST(rt0.c1 AS TEXT))) AND (((vt0.c0 IN (rt0.c0)), (((vt0.c0))<((rt0.c0))), NULL))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((x'97dc', '', CAST(rt0.c1 AS TEXT))) AND (((vt0.c0 IN (rt0.c0)), (((vt0.c0))<((rt0.c0))), NULL))) WHERE ((rt0.c2 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((x'97dc', '', CAST(rt0.c1 AS TEXT))) AND (((vt0.c0 IN (rt0.c0)), (((vt0.c0))<((rt0.c0))), NULL))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((x'97dc', '', CAST(rt0.c1 AS TEXT))) AND (((vt0.c0 IN (rt0.c0)), (((vt0.c0))<((rt0.c0))), NULL))) WHERE ((rt0.c2 IN ()) COLLATE RTRIM);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON (((vt0.c0))<>((LTRIM(v0.c0, t1.c64)))) INNER JOIN t1 ON (((v0.c0)) BETWEEN ((CASE t1.c64  WHEN t1.c64 THEN t1.c0 ELSE t1.c64 END)) AND ((((t1.c0) ISNULL)))) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (((vt0.c0))!=((LTRIM(v0.c0, t1.c64)))) INNER JOIN t1 ON (((v0.c0)) BETWEEN ((CASE t1.c64  WHEN t1.c64 THEN t1.c0 ELSE t1.c64 END)) AND ((((t1.c0) ISNULL)))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON (((vt0.c0))<>((LTRIM(v0.c0, t1.c64)))) INNER JOIN t1 ON (((v0.c0)) BETWEEN ((CASE t1.c64  WHEN t1.c64 THEN t1.c0 ELSE t1.c64 END)) AND ((((t1.c0) ISNULL)))) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (((vt0.c0))!=((LTRIM(v0.c0, t1.c64)))) INNER JOIN t1 ON (((v0.c0)) BETWEEN ((CASE t1.c64  WHEN t1.c64 THEN t1.c0 ELSE t1.c64 END)) AND ((((t1.c0) ISNULL)))));
SELECT COUNT(*) FROM t1 INDEXED BY i13, rt0, vt0, v0 WHERE (((((t1.c64)LIKE(NULL)))AND(((((t1.c64)OR(rt0.c0)))OR(x'9d9f')))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c64)LIKE(NULL)))AND(((((t1.c64)OR(rt0.c0)))OR(x'9d9f'))))) IS TRUE)  as count FROM t1 INDEXED BY i13, rt0, vt0, v0);
SELECT COUNT(*) FROM t1 INDEXED BY i13, rt0, vt0, v0 WHERE (((((t1.c64)LIKE(NULL)))AND(((((t1.c64)OR(rt0.c0)))OR(x'9d9f')))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c64)LIKE(NULL)))AND(((((t1.c64)OR(rt0.c0)))OR(x'9d9f'))))) IS TRUE)  as count FROM t1 INDEXED BY i13, rt0, vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((((((v0.c0)) BETWEEN (('~b')) AND ((rt0.c2))))<>((((rt0.c1))<>((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) BETWEEN (('~b')) AND ((rt0.c2))))!=((((rt0.c1))!=((rt0.c2)))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((((((v0.c0)) BETWEEN (('~b')) AND ((rt0.c2))))<>((((rt0.c1))<>((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) BETWEEN (('~b')) AND ((rt0.c2))))!=((((rt0.c1))!=((rt0.c2)))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((((((v0.c0)) BETWEEN (('~b')) AND ((rt0.c2))))<>((((rt0.c1))<>((rt0.c2))))));
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((v0.c0 IN ()) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((v0.c0 IN ()) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 IN ()) IN ()));
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((- (((vt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c0))))) ORDER BY ((t1.c64) BETWEEN ((((NULL)) NOT BETWEEN ((t1.c64)) AND ((vt0.c0)))) AND (t1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, t1 ORDER BY ((t1.c64) BETWEEN ((((NULL)) NOT BETWEEN ((t1.c64)) AND ((vt0.c0)))) AND (t1.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((- (((vt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c0))))) ORDER BY ((t1.c64) BETWEEN ((((NULL)) NOT BETWEEN ((t1.c64)) AND ((vt0.c0)))) AND (t1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, t1 ORDER BY ((t1.c64) BETWEEN ((((NULL)) NOT BETWEEN ((t1.c64)) AND ((vt0.c0)))) AND (t1.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((- (((vt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c0))))) ORDER BY ((t1.c64) BETWEEN ((((NULL)) NOT BETWEEN ((t1.c64)) AND ((vt0.c0)))) AND (t1.c0))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c2)) COLLATE BINARY) ORDER BY 4.44407961E8, ((rt0.c2 COLLATE BINARY) BETWEEN (((rt0.c2)+(rt0.c0))) AND (rt0.c0 COLLATE BINARY)), ((rt0.c0)IS NOT(rt0.c2)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY 4.44407961E8, ((rt0.c2 COLLATE BINARY) BETWEEN (((rt0.c2)+(rt0.c0))) AND (rt0.c0 COLLATE BINARY)), ((rt0.c0)IS NOT(rt0.c2)) COLLATE NOCASE ASC);
SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c2)) COLLATE BINARY) ORDER BY 4.44407961E8, ((rt0.c2 COLLATE BINARY) BETWEEN (((rt0.c2)+(rt0.c0))) AND (rt0.c0 COLLATE BINARY)), ((rt0.c0)IS NOT(rt0.c2)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY 4.44407961E8, ((rt0.c2 COLLATE BINARY) BETWEEN (((rt0.c2)+(rt0.c0))) AND (rt0.c0 COLLATE BINARY)), ((rt0.c0)IS NOT(rt0.c2)) COLLATE NOCASE ASC);
SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c2)) COLLATE BINARY) ORDER BY 4.44407961E8, ((rt0.c2 COLLATE BINARY) BETWEEN (((rt0.c2)+(rt0.c0))) AND (rt0.c0 COLLATE BINARY)), ((rt0.c0)IS NOT(rt0.c2)) COLLATE NOCASE ASC;
SELECT * FROM rt0, vt0, t1 WHERE ((((('|t폭gT') BETWEEN (rt0.c2) AND (t1.c2))) NOT BETWEEN (((rt0.c0) NOT NULL)) AND (((NULL)<=(rt0.c1))))) ORDER BY CAST(TRIM(t1.c0, rt0.c2) AS INTEGER) ASC, ((((t1.c0)IS(t1.c64)))+(LOWER(DISTINCT vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('|t폭gT') BETWEEN (rt0.c2) AND (t1.c2))) NOT BETWEEN (((rt0.c0) NOT NULL)) AND (((NULL)<=(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0, t1 ORDER BY CAST(TRIM(t1.c0, rt0.c2) AS INTEGER) ASC, ((((t1.c0)IS(t1.c64)))+(LOWER(DISTINCT vt0.c0)))  NULLS LAST);
SELECT * FROM rt0, vt0, t1 WHERE ((((('|t폭gT') BETWEEN (rt0.c2) AND (t1.c2))) NOT BETWEEN (((rt0.c0) NOT NULL)) AND (((NULL)<=(rt0.c1))))) ORDER BY CAST(TRIM(t1.c0, rt0.c2) AS INTEGER) ASC, ((((t1.c0)IS(t1.c64)))+(LOWER(DISTINCT vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('|t폭gT') BETWEEN (rt0.c2) AND (t1.c2))) NOT BETWEEN (((rt0.c0) NOT NULL)) AND (((NULL)<=(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0, t1 ORDER BY CAST(TRIM(t1.c0, rt0.c2) AS INTEGER) ASC, ((((t1.c0)IS(t1.c64)))+(LOWER(DISTINCT vt0.c0)))  NULLS LAST);
SELECT * FROM rt0, vt0, t1 WHERE ((((('|t폭gT') BETWEEN (rt0.c2) AND (t1.c2))) NOT BETWEEN (((rt0.c0) NOT NULL)) AND (((NULL)<=(rt0.c1))))) ORDER BY CAST(TRIM(t1.c0, rt0.c2) AS INTEGER) ASC, ((((t1.c0)IS(t1.c64)))+(LOWER(DISTINCT vt0.c0)))  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((CAST(rt0.c1 AS INTEGER)))>(((~ (rt0.c0)))))) ORDER BY '' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c1 AS INTEGER)))>(((~ (rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY '' DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((CAST(rt0.c1 AS INTEGER)))>(((~ (rt0.c0)))))) ORDER BY '' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c1 AS INTEGER)))>(((~ (rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY '' DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((CAST(rt0.c1 AS INTEGER)))>(((~ (rt0.c0)))))) ORDER BY '' DESC  NULLS FIRST;
SELECT * FROM vt0, rt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CAST(x'957e26d4' AS BLOB))) AND ((((rt0.c0)&(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((CAST(x'957e26d4' AS BLOB))) AND ((((rt0.c0)&(rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CAST(x'957e26d4' AS BLOB))) AND ((((rt0.c0)&(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((CAST(x'957e26d4' AS BLOB))) AND ((((rt0.c0)&(rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CAST(x'957e26d4' AS BLOB))) AND ((((rt0.c0)&(rt0.c0))))));
SELECT ALL * FROM t1, v0, vt0 WHERE ((((((~ (t1.c64)))OR('1685548292')))AND(highlight(0.015160597707591483, vt0.c0, vt0.c0, vt0.c0)))) ORDER BY CAST('1868986304' AS INTEGER) ASC, ((((v0.c0) BETWEEN (vt0.c0) AND (t1.c2))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((~ (t1.c64)))OR('1685548292')))AND(highlight(0.015160597707591483, vt0.c0, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM t1, v0, vt0 ORDER BY CAST('1868986304' AS INTEGER) ASC, ((((v0.c0) BETWEEN (vt0.c0) AND (t1.c2))) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM t1, v0, vt0 WHERE ((((((~ (t1.c64)))OR('1685548292')))AND(highlight(0.015160597707591483, vt0.c0, vt0.c0, vt0.c0)))) ORDER BY CAST('1868986304' AS INTEGER) ASC, ((((v0.c0) BETWEEN (vt0.c0) AND (t1.c2))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((~ (t1.c64)))OR('1685548292')))AND(highlight(0.015160597707591483, vt0.c0, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM t1, v0, vt0 ORDER BY CAST('1868986304' AS INTEGER) ASC, ((((v0.c0) BETWEEN (vt0.c0) AND (t1.c2))) IS FALSE)  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 CROSS JOIN vt0 ON ((((((rt0.c0)OR(rt0.c1)))OR(((rt0.c1)=('Ju')))))OR(((((rt0.c1)OR(v0.c0)))AND(v0.c0)))) WHERE (((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))<<(v0.c0))) ORDER BY (((rt0.c1 IN (v0.c0)))|(LOWER(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))<<(v0.c0))) IS TRUE)  as count FROM v0, rt0 CROSS JOIN vt0 ON ((((((rt0.c0)OR(rt0.c1)))OR(((rt0.c1)==('Ju')))))OR(((((rt0.c1)OR(v0.c0)))AND(v0.c0)))) ORDER BY (((rt0.c1 IN (v0.c0)))|(LOWER(rt0.c2))));
SELECT COUNT(*) FROM v0, rt0 CROSS JOIN vt0 ON ((((((rt0.c0)OR(rt0.c1)))OR(((rt0.c1)=('Ju')))))OR(((((rt0.c1)OR(v0.c0)))AND(v0.c0)))) WHERE (((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))<<(v0.c0))) ORDER BY (((rt0.c1 IN (v0.c0)))|(LOWER(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))<<(v0.c0))) IS TRUE)  as count FROM v0, rt0 CROSS JOIN vt0 ON ((((((rt0.c0)OR(rt0.c1)))OR(((rt0.c1)==('Ju')))))OR(((((rt0.c1)OR(v0.c0)))AND(v0.c0)))) ORDER BY (((rt0.c1 IN (v0.c0)))|(LOWER(rt0.c2))));
SELECT COUNT(*) FROM v0, rt0 CROSS JOIN vt0 ON ((((((rt0.c0)OR(rt0.c1)))OR(((rt0.c1)=('Ju')))))OR(((((rt0.c1)OR(v0.c0)))AND(v0.c0)))) WHERE (((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))<<(v0.c0))) ORDER BY (((rt0.c1 IN (v0.c0)))|(LOWER(rt0.c2)));
SELECT COUNT(*) FROM t1, vt0, rt0, v0 WHERE (((((CASE WHEN '-1609514055' THEN t1.c2 ELSE t1.c0 END)AND(((0Xffffffffb45fb39d)>(rt0.c0)))))AND(((rt0.c2) IS TRUE)))) ORDER BY ((rt0.c0) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN '-1609514055' THEN t1.c2 ELSE t1.c0 END)AND(((0Xffffffffb45fb39d)>(rt0.c0)))))AND(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM t1, vt0, rt0, v0 ORDER BY ((rt0.c0) NOT NULL));
SELECT COUNT(*) FROM t1, vt0, rt0, v0 WHERE (((((CASE WHEN '-1609514055' THEN t1.c2 ELSE t1.c0 END)AND(((0Xffffffffb45fb39d)>(rt0.c0)))))AND(((rt0.c2) IS TRUE)))) ORDER BY ((rt0.c0) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN '-1609514055' THEN t1.c2 ELSE t1.c0 END)AND(((0Xffffffffb45fb39d)>(rt0.c0)))))AND(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM t1, vt0, rt0, v0 ORDER BY ((rt0.c0) NOT NULL));
SELECT COUNT(*) FROM t1, vt0, rt0, v0 WHERE (((((CASE WHEN '-1609514055' THEN t1.c2 ELSE t1.c0 END)AND(((0Xffffffffb45fb39d)>(rt0.c0)))))AND(((rt0.c2) IS TRUE)))) ORDER BY ((rt0.c0) NOT NULL);
SELECT * FROM rt0, vt0, t1 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT * FROM rt0, vt0, t1 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT * FROM rt0, vt0, t1 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELY(((vt0.c0)%(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((LIKELY(((vt0.c0)%(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELY(((vt0.c0)%(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((LIKELY(((vt0.c0)%(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELY(((vt0.c0)%(vt0.c0))));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS INTEGER)) ORDER BY ((((NULL)&(v0.c0))) NOTNULL), 0.591274302881799  NULLS FIRST, ((v0.c0)==(NULLIF(v0.c0, v0.c0))) ASC, (- (((v0.c0) IS FALSE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY ((((NULL)&(v0.c0))) NOTNULL), 0.591274302881799  NULLS FIRST, ((v0.c0)==(NULLIF(v0.c0, v0.c0))) ASC, (- (((v0.c0) IS FALSE))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS INTEGER)) ORDER BY ((((NULL)&(v0.c0))) NOTNULL), 0.591274302881799  NULLS FIRST, ((v0.c0)==(NULLIF(v0.c0, v0.c0))) ASC, (- (((v0.c0) IS FALSE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY ((((NULL)&(v0.c0))) NOTNULL), 0.591274302881799  NULLS FIRST, ((v0.c0)==(NULLIF(v0.c0, v0.c0))) ASC, (- (((v0.c0) IS FALSE))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS INTEGER)) ORDER BY ((((NULL)&(v0.c0))) NOTNULL), 0.591274302881799  NULLS FIRST, ((v0.c0)==(NULLIF(v0.c0, v0.c0))) ASC, (- (((v0.c0) IS FALSE))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t1 ON CASE WHEN (((0.6799886348672329)) NOT BETWEEN ((t1.c0)) AND ((rt0.c2))) THEN LOWER(rt0.c0) WHEN HEX(t1.c0) THEN x'' WHEN ((t1.c64)%(t1.c0)) THEN (- (rt0.c2)) END WHERE (((rt0.c0)>((+ (t1.c0))))) ORDER BY ABS(DISTINCT ((((rt0.c2)AND(rt0.c0)))AND(t1.c2))) ASC, CASE (- (t1.c2))  WHEN t1.c64 COLLATE NOCASE THEN t1.c64 COLLATE NOCASE END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)>((+ (t1.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON CASE WHEN (((0.6799886348672329)) NOT BETWEEN ((t1.c0)) AND ((rt0.c2))) THEN LOWER(rt0.c0) WHEN HEX(t1.c0) THEN x'' WHEN ((t1.c64)%(t1.c0)) THEN (- (rt0.c2)) END ORDER BY ABS(DISTINCT ((((rt0.c2)AND(rt0.c0)))AND(t1.c2))) ASC, CASE (- (t1.c2))  WHEN t1.c64 COLLATE NOCASE THEN t1.c64 COLLATE NOCASE END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t1 ON CASE WHEN (((0.6799886348672329)) NOT BETWEEN ((t1.c0)) AND ((rt0.c2))) THEN LOWER(rt0.c0) WHEN HEX(t1.c0) THEN x'' WHEN ((t1.c64)%(t1.c0)) THEN (- (rt0.c2)) END WHERE (((rt0.c0)>((+ (t1.c0))))) ORDER BY ABS(DISTINCT ((((rt0.c2)AND(rt0.c0)))AND(t1.c2))) ASC, CASE (- (t1.c2))  WHEN t1.c64 COLLATE NOCASE THEN t1.c64 COLLATE NOCASE END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)>((+ (t1.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON CASE WHEN (((0.6799886348672329)) NOT BETWEEN ((t1.c0)) AND ((rt0.c2))) THEN LOWER(rt0.c0) WHEN HEX(t1.c0) THEN x'' WHEN ((t1.c64)%(t1.c0)) THEN (- (rt0.c2)) END ORDER BY ABS(DISTINCT ((((rt0.c2)AND(rt0.c0)))AND(t1.c2))) ASC, CASE (- (t1.c2))  WHEN t1.c64 COLLATE NOCASE THEN t1.c64 COLLATE NOCASE END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t1 ON CASE WHEN (((0.6799886348672329)) NOT BETWEEN ((t1.c0)) AND ((rt0.c2))) THEN LOWER(rt0.c0) WHEN HEX(t1.c0) THEN x'' WHEN ((t1.c64)%(t1.c0)) THEN (- (rt0.c2)) END WHERE (((rt0.c0)>((+ (t1.c0))))) ORDER BY ABS(DISTINCT ((((rt0.c2)AND(rt0.c0)))AND(t1.c2))) ASC, CASE (- (t1.c2))  WHEN t1.c64 COLLATE NOCASE THEN t1.c64 COLLATE NOCASE END  NULLS LAST;
SELECT * FROM vt0 INNER JOIN rt0 ON CAST(0.23309171770985837 AS TEXT) WHERE (((((((((1155917030)OR(((vt0.c0)<=(rt0.c2)))))OR((((rt0.c1))==((rt0.c0))))))OR(((rt0.c2) BETWEEN (1.864179897E9) AND (rt0.c1)))))OR(rt0.c1))) ORDER BY (LIKELIHOOD(DISTINCT vt0.c0, 0.3952623416226826) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((1155917030)OR(((vt0.c0)<=(rt0.c2)))))OR((((rt0.c1))==((rt0.c0))))))OR(((rt0.c2) BETWEEN (1.864179897E9) AND (rt0.c1)))))OR(rt0.c1))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON CAST(0.23309171770985837 AS TEXT) ORDER BY (LIKELIHOOD(DISTINCT vt0.c0, 0.3952623416226826) IN ()) DESC  NULLS FIRST);
SELECT * FROM vt0 INNER JOIN rt0 ON CAST(0.23309171770985837 AS TEXT) WHERE (((((((((1155917030)OR(((vt0.c0)<=(rt0.c2)))))OR((((rt0.c1))==((rt0.c0))))))OR(((rt0.c2) BETWEEN (1.864179897E9) AND (rt0.c1)))))OR(rt0.c1))) ORDER BY (LIKELIHOOD(DISTINCT vt0.c0, 0.3952623416226826) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((1155917030)OR(((vt0.c0)<=(rt0.c2)))))OR((((rt0.c1))==((rt0.c0))))))OR(((rt0.c2) BETWEEN (1.864179897E9) AND (rt0.c1)))))OR(rt0.c1))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON CAST(0.23309171770985837 AS TEXT) ORDER BY (LIKELIHOOD(DISTINCT vt0.c0, 0.3952623416226826) IN ()) DESC  NULLS FIRST);
SELECT * FROM vt0 INNER JOIN rt0 ON CAST(0.23309171770985837 AS TEXT) WHERE (((((((((1155917030)OR(((vt0.c0)<=(rt0.c2)))))OR((((rt0.c1))==((rt0.c0))))))OR(((rt0.c2) BETWEEN (1.864179897E9) AND (rt0.c1)))))OR(rt0.c1))) ORDER BY (LIKELIHOOD(DISTINCT vt0.c0, 0.3952623416226826) IN ()) DESC  NULLS FIRST;
SELECT * FROM vt0, rt0 RIGHT OUTER JOIN t1 ON CAST(-1.826645902E9 AS TEXT) WHERE ((((rt0.c2, NULL, 0x56aa1cce))<>((t1.c2, rt0.c0, t1.c64))) COLLATE BINARY) ORDER BY ((((0x43056bb0)LIKE(t1.c2))) NOT BETWEEN (((t1.c0)-(1318682206))) AND ((((t1.c64, t1.c2, rt0.c0))<((rt0.c2, vt0.c0, t1.c64))))) DESC, (('-1100795303') NOT BETWEEN ((('')OR(rt0.c0))) AND (CAST(rt0.c2 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2, NULL, 0X56aa1cce))!=((t1.c2, rt0.c0, t1.c64))) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN t1 ON CAST(-1.826645902E9 AS TEXT) ORDER BY ((((0x43056bb0)LIKE(t1.c2))) NOT BETWEEN (((t1.c0)-(1318682206))) AND ((((t1.c64, t1.c2, rt0.c0))<((rt0.c2, vt0.c0, t1.c64))))) DESC, (('-1100795303') NOT BETWEEN ((('')OR(rt0.c0))) AND (CAST(rt0.c2 AS BLOB))) DESC);
SELECT * FROM vt0, rt0 RIGHT OUTER JOIN t1 ON CAST(-1.826645902E9 AS TEXT) WHERE ((((rt0.c2, NULL, 0x56aa1cce))<>((t1.c2, rt0.c0, t1.c64))) COLLATE BINARY) ORDER BY ((((0x43056bb0)LIKE(t1.c2))) NOT BETWEEN (((t1.c0)-(1318682206))) AND ((((t1.c64, t1.c2, rt0.c0))<((rt0.c2, vt0.c0, t1.c64))))) DESC, (('-1100795303') NOT BETWEEN ((('')OR(rt0.c0))) AND (CAST(rt0.c2 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2, NULL, 0X56aa1cce))!=((t1.c2, rt0.c0, t1.c64))) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN t1 ON CAST(-1.826645902E9 AS TEXT) ORDER BY ((((0x43056bb0)LIKE(t1.c2))) NOT BETWEEN (((t1.c0)-(1318682206))) AND ((((t1.c64, t1.c2, rt0.c0))<((rt0.c2, vt0.c0, t1.c64))))) DESC, (('-1100795303') NOT BETWEEN ((('')OR(rt0.c0))) AND (CAST(rt0.c2 AS BLOB))) DESC);
SELECT * FROM vt0, rt0 RIGHT OUTER JOIN t1 ON CAST(-1.826645902E9 AS TEXT) WHERE ((((rt0.c2, NULL, 0x56aa1cce))<>((t1.c2, rt0.c0, t1.c64))) COLLATE BINARY) ORDER BY ((((0x43056bb0)LIKE(t1.c2))) NOT BETWEEN (((t1.c0)-(1318682206))) AND ((((t1.c64, t1.c2, rt0.c0))<((rt0.c2, vt0.c0, t1.c64))))) DESC, (('-1100795303') NOT BETWEEN ((('')OR(rt0.c0))) AND (CAST(rt0.c2 AS BLOB))) DESC;
SELECT * FROM v0 WHERE (CAST(v0.c0 AS INTEGER)) ORDER BY (CAST(v0.c0 AS BLOB) IN (v0.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY (CAST(v0.c0 AS BLOB) IN (v0.c0 COLLATE RTRIM)) ASC);
SELECT * FROM v0 WHERE (CAST(v0.c0 AS INTEGER)) ORDER BY (CAST(v0.c0 AS BLOB) IN (v0.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY (CAST(v0.c0 AS BLOB) IN (v0.c0 COLLATE RTRIM)) ASC);
SELECT * FROM v0 WHERE (CAST(v0.c0 AS INTEGER)) ORDER BY (CAST(v0.c0 AS BLOB) IN (v0.c0 COLLATE RTRIM)) ASC;
SELECT * FROM rt0, v0, t1 WHERE (((((x'31b2')AND(x'ba60')))AND(t1.c0 COLLATE NOCASE))) ORDER BY (((((t1.c2)) NOT BETWEEN ((t1.c2)) AND (('-1424894893'))))AND((~ (rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'31b2')AND(x'ba60')))AND(t1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0, t1 ORDER BY (((((t1.c2)) NOT BETWEEN ((t1.c2)) AND (('-1424894893'))))AND((~ (rt0.c0)))) DESC  NULLS LAST);
SELECT * FROM rt0, v0, t1 WHERE (((((x'31b2')AND(x'ba60')))AND(t1.c0 COLLATE NOCASE))) ORDER BY (((((t1.c2)) NOT BETWEEN ((t1.c2)) AND (('-1424894893'))))AND((~ (rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'31b2')AND(x'ba60')))AND(t1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0, t1 ORDER BY (((((t1.c2)) NOT BETWEEN ((t1.c2)) AND (('-1424894893'))))AND((~ (rt0.c0)))) DESC  NULLS LAST);
SELECT * FROM rt0, v0, t1 WHERE (((((x'31b2')AND(x'ba60')))AND(t1.c0 COLLATE NOCASE))) ORDER BY (((((t1.c2)) NOT BETWEEN ((t1.c2)) AND (('-1424894893'))))AND((~ (rt0.c0)))) DESC  NULLS LAST;
SELECT * FROM vt0, rt0, t1, v0 WHERE (((((((((((rt0.c0)OR(0.616989738600702)))OR(rt0.c1)))AND(t1.c64)))OR(rt0.c0)))||(((vt0.c0) BETWEEN (rt0.c2) AND (t1.c64)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)OR(0.616989738600702)))OR(rt0.c1)))AND(t1.c64)))OR(rt0.c0)))||(((vt0.c0) BETWEEN (rt0.c2) AND (t1.c64))))) IS TRUE)  as count FROM vt0, rt0, t1, v0);
SELECT * FROM vt0, rt0, t1, v0 WHERE (((((((((((rt0.c0)OR(0.616989738600702)))OR(rt0.c1)))AND(t1.c64)))OR(rt0.c0)))||(((vt0.c0) BETWEEN (rt0.c2) AND (t1.c64)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)OR(0.616989738600702)))OR(rt0.c1)))AND(t1.c64)))OR(rt0.c0)))||(((vt0.c0) BETWEEN (rt0.c2) AND (t1.c64))))) IS TRUE)  as count FROM vt0, rt0, t1, v0);
SELECT * FROM vt0, rt0, t1, v0 WHERE (((((((((((rt0.c0)OR(0.616989738600702)))OR(rt0.c1)))AND(t1.c64)))OR(rt0.c0)))||(((vt0.c0) BETWEEN (rt0.c2) AND (t1.c64)))));
SELECT ALL * FROM vt0, rt0 NATURAL JOIN v0 WHERE ((- (rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN v0);
SELECT ALL * FROM vt0, rt0 NATURAL JOIN v0 WHERE ((- (rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN v0);
SELECT ALL * FROM vt0, rt0 NATURAL JOIN v0 WHERE ((- (rt0.c1)) COLLATE RTRIM);
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE (((vt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE (((vt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE (((vt0.c0 IN ()) IN ()));
SELECT * FROM rt0, v0, t1, vt0 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM rt0, v0, t1, vt0);
SELECT * FROM rt0, v0, t1, vt0 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM rt0, v0, t1, vt0);
SELECT * FROM rt0, v0, t1, vt0 WHERE (SQLITE_SOURCE_ID());
SELECT * FROM t1, rt0 WHERE (CASE (- (t1.c2))  WHEN ((((t1.c64)AND('M/D!k%]<g')))AND(rt0.c1)) THEN CASE WHEN t1.c2 THEN t1.c64 ELSE rt0.c0 END WHEN ((t1.c64) IS FALSE) THEN CASE t1.c0  WHEN rt0.c1 THEN t1.c2 WHEN rt0.c0 THEN t1.c0 WHEN t1.c64 THEN t1.c0 ELSE NULL END WHEN CHANGES() THEN (t1.c2 IN ()) ELSE (~ (rt0.c2)) END) ORDER BY (~ (CAST(t1.c0 AS TEXT))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (- (t1.c2))  WHEN ((((t1.c64)AND('M/D!k%]<g')))AND(rt0.c1)) THEN CASE WHEN t1.c2 THEN t1.c64 ELSE rt0.c0 END WHEN ((t1.c64) IS FALSE) THEN CASE t1.c0  WHEN rt0.c1 THEN t1.c2 WHEN rt0.c0 THEN t1.c0 WHEN t1.c64 THEN t1.c0 ELSE NULL END WHEN CHANGES() THEN (t1.c2 IN ()) ELSE (~ (rt0.c2)) END) IS TRUE)  as count FROM t1, rt0 ORDER BY (~ (CAST(t1.c0 AS TEXT))) ASC  NULLS LAST);
SELECT * FROM t1, rt0 WHERE (CASE (- (t1.c2))  WHEN ((((t1.c64)AND('M/D!k%]<g')))AND(rt0.c1)) THEN CASE WHEN t1.c2 THEN t1.c64 ELSE rt0.c0 END WHEN ((t1.c64) IS FALSE) THEN CASE t1.c0  WHEN rt0.c1 THEN t1.c2 WHEN rt0.c0 THEN t1.c0 WHEN t1.c64 THEN t1.c0 ELSE NULL END WHEN CHANGES() THEN (t1.c2 IN ()) ELSE (~ (rt0.c2)) END) ORDER BY (~ (CAST(t1.c0 AS TEXT))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (- (t1.c2))  WHEN ((((t1.c64)AND('M/D!k%]<g')))AND(rt0.c1)) THEN CASE WHEN t1.c2 THEN t1.c64 ELSE rt0.c0 END WHEN ((t1.c64) IS FALSE) THEN CASE t1.c0  WHEN rt0.c1 THEN t1.c2 WHEN rt0.c0 THEN t1.c0 WHEN t1.c64 THEN t1.c0 ELSE NULL END WHEN CHANGES() THEN (t1.c2 IN ()) ELSE (~ (rt0.c2)) END) IS TRUE)  as count FROM t1, rt0 ORDER BY (~ (CAST(t1.c0 AS TEXT))) ASC  NULLS LAST);
SELECT * FROM t1, rt0 WHERE (CASE (- (t1.c2))  WHEN ((((t1.c64)AND('M/D!k%]<g')))AND(rt0.c1)) THEN CASE WHEN t1.c2 THEN t1.c64 ELSE rt0.c0 END WHEN ((t1.c64) IS FALSE) THEN CASE t1.c0  WHEN rt0.c1 THEN t1.c2 WHEN rt0.c0 THEN t1.c0 WHEN t1.c64 THEN t1.c0 ELSE NULL END WHEN CHANGES() THEN (t1.c2 IN ()) ELSE (~ (rt0.c2)) END) ORDER BY (~ (CAST(t1.c0 AS TEXT))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON ((NULL)IS((((t1.c2, t1.c64, t1.c2)) NOT BETWEEN ((t1.c2, rt0.c1, rt0.c2)) AND ((t1.c0, t1.c64, t1.c2))))) WHERE (rt0.c1 COLLATE RTRIM) ORDER BY (((t1.c0)) BETWEEN ((((((((((rt0.c2)OR(t1.c2)))OR(x'')))OR(rt0.c1)))AND(t1.c2)))) AND ((t1.c0))) ASC, (((t1.c2)) BETWEEN ((0.9928611797292598)) AND (((('(}	') NOTNULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON ((NULL)IS((((t1.c2, t1.c64, t1.c2)) NOT BETWEEN ((t1.c2, rt0.c1, rt0.c2)) AND ((t1.c0, t1.c64, t1.c2))))) ORDER BY (((t1.c0)) BETWEEN ((((((((((rt0.c2)OR(t1.c2)))OR(x'')))OR(rt0.c1)))AND(t1.c2)))) AND ((t1.c0))) ASC, (((t1.c2)) BETWEEN ((0.9928611797292598)) AND (((('(}	') NOTNULL))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON ((NULL)IS((((t1.c2, t1.c64, t1.c2)) NOT BETWEEN ((t1.c2, rt0.c1, rt0.c2)) AND ((t1.c0, t1.c64, t1.c2))))) WHERE (rt0.c1 COLLATE RTRIM) ORDER BY (((t1.c0)) BETWEEN ((((((((((rt0.c2)OR(t1.c2)))OR(x'')))OR(rt0.c1)))AND(t1.c2)))) AND ((t1.c0))) ASC, (((t1.c2)) BETWEEN ((0.9928611797292598)) AND (((('(}	') NOTNULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON ((NULL)IS((((t1.c2, t1.c64, t1.c2)) NOT BETWEEN ((t1.c2, rt0.c1, rt0.c2)) AND ((t1.c0, t1.c64, t1.c2))))) ORDER BY (((t1.c0)) BETWEEN ((((((((((rt0.c2)OR(t1.c2)))OR(x'')))OR(rt0.c1)))AND(t1.c2)))) AND ((t1.c0))) ASC, (((t1.c2)) BETWEEN ((0.9928611797292598)) AND (((('(}	') NOTNULL))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON ((NULL)IS((((t1.c2, t1.c64, t1.c2)) NOT BETWEEN ((t1.c2, rt0.c1, rt0.c2)) AND ((t1.c0, t1.c64, t1.c2))))) WHERE (rt0.c1 COLLATE RTRIM) ORDER BY (((t1.c0)) BETWEEN ((((((((((rt0.c2)OR(t1.c2)))OR(x'')))OR(rt0.c1)))AND(t1.c2)))) AND ((t1.c0))) ASC, (((t1.c2)) BETWEEN ((0.9928611797292598)) AND (((('(}	') NOTNULL))))  NULLS FIRST;
SELECT * FROM t1, rt0 WHERE (CAST(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) AS NUMERIC)) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t1, rt0 ORDER BY x''  NULLS LAST);
SELECT * FROM t1, rt0 WHERE (CAST(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) AS NUMERIC)) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t1, rt0 ORDER BY x''  NULLS LAST);
SELECT * FROM t1, rt0 WHERE (CAST(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) AS NUMERIC)) ORDER BY x''  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (0.8045632038839609) ORDER BY ((((NOT (vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((((x'')AND(vt0.c0)))AND(vt0.c0)), IFNULL(vt0.c0, vt0.c0)))>((1.277443571E9 COLLATE NOCASE, CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (+ (vt0.c0)), NULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.8045632038839609) IS TRUE)  as count FROM vt0 ORDER BY ((((NOT (vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((((x'')AND(vt0.c0)))AND(vt0.c0)), IFNULL(vt0.c0, vt0.c0)))>((1.277443571E9 COLLATE NOCASE, CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (+ (vt0.c0)), NULL))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.8045632038839609) ORDER BY ((((NOT (vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((((x'')AND(vt0.c0)))AND(vt0.c0)), IFNULL(vt0.c0, vt0.c0)))>((1.277443571E9 COLLATE NOCASE, CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (+ (vt0.c0)), NULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.8045632038839609) IS TRUE)  as count FROM vt0 ORDER BY ((((NOT (vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((((x'')AND(vt0.c0)))AND(vt0.c0)), IFNULL(vt0.c0, vt0.c0)))>((1.277443571E9 COLLATE NOCASE, CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (+ (vt0.c0)), NULL))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.8045632038839609) ORDER BY ((((NOT (vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((((x'')AND(vt0.c0)))AND(vt0.c0)), IFNULL(vt0.c0, vt0.c0)))>((1.277443571E9 COLLATE NOCASE, CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (+ (vt0.c0)), NULL))) DESC  NULLS LAST;
SELECT * FROM t1 INNER JOIN rt0 ON CASE WHEN ((0.6776060278102515)-(rt0.c2)) THEN ((rt0.c2)LIKE(t1.c64)) ELSE NULL END WHERE (CASE (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))  WHEN (t1.c2 IN ()) THEN (NULL IN ()) ELSE ((rt0.c0) NOT BETWEEN (t1.c64) AND (t1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))  WHEN (t1.c2 IN ()) THEN (NULL IN ()) ELSE ((rt0.c0) NOT BETWEEN (t1.c64) AND (t1.c2)) END) IS TRUE)  as count FROM t1 INNER JOIN rt0 ON CASE WHEN ((0.6776060278102515)-(rt0.c2)) THEN ((rt0.c2)LIKE(t1.c64)) ELSE NULL END);
SELECT * FROM t1 INNER JOIN rt0 ON CASE WHEN ((0.6776060278102515)-(rt0.c2)) THEN ((rt0.c2)LIKE(t1.c64)) ELSE NULL END WHERE (CASE (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))  WHEN (t1.c2 IN ()) THEN (NULL IN ()) ELSE ((rt0.c0) NOT BETWEEN (t1.c64) AND (t1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))  WHEN (t1.c2 IN ()) THEN (NULL IN ()) ELSE ((rt0.c0) NOT BETWEEN (t1.c64) AND (t1.c2)) END) IS TRUE)  as count FROM t1 INNER JOIN rt0 ON CASE WHEN ((0.6776060278102515)-(rt0.c2)) THEN ((rt0.c2)LIKE(t1.c64)) ELSE NULL END);
SELECT * FROM t1 INNER JOIN rt0 ON CASE WHEN ((0.6776060278102515)-(rt0.c2)) THEN ((rt0.c2)LIKE(t1.c64)) ELSE NULL END WHERE (CASE (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))  WHEN (t1.c2 IN ()) THEN (NULL IN ()) ELSE ((rt0.c0) NOT BETWEEN (t1.c64) AND (t1.c2)) END);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c64))) COLLATE RTRIM) ORDER BY (((((((((((t1.c64)) NOT BETWEEN ((t1.c2)) AND ((t1.c2))))OR(((t1.c2) NOT BETWEEN (t1.c64) AND (t1.c2)))))AND(CASE WHEN t1.c2 THEN NULL WHEN t1.c64 THEN t1.c2 WHEN 'M?a4 !' THEN t1.c2 ELSE t1.c2 END)))OR(CAST(t1.c2 AS NUMERIC))))AND(COALESCE(DISTINCT '-660190769', t1.c64))), (NOT ((((t1.c0)) NOT BETWEEN ((t1.c2)) AND ((t1.c64))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c64))) COLLATE RTRIM) IS TRUE)  as count FROM t1 ORDER BY (((((((((((t1.c64)) NOT BETWEEN ((t1.c2)) AND ((t1.c2))))OR(((t1.c2) NOT BETWEEN (t1.c64) AND (t1.c2)))))AND(CASE WHEN t1.c2 THEN NULL WHEN t1.c64 THEN t1.c2 WHEN 'M?a4 !' THEN t1.c2 ELSE t1.c2 END)))OR(CAST(t1.c2 AS NUMERIC))))AND(COALESCE(DISTINCT '-660190769', t1.c64))), (NOT ((((t1.c0)) NOT BETWEEN ((t1.c2)) AND ((t1.c64))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c64))) COLLATE RTRIM) ORDER BY (((((((((((t1.c64)) NOT BETWEEN ((t1.c2)) AND ((t1.c2))))OR(((t1.c2) NOT BETWEEN (t1.c64) AND (t1.c2)))))AND(CASE WHEN t1.c2 THEN NULL WHEN t1.c64 THEN t1.c2 WHEN 'M?a4 !' THEN t1.c2 ELSE t1.c2 END)))OR(CAST(t1.c2 AS NUMERIC))))AND(COALESCE(DISTINCT '-660190769', t1.c64))), (NOT ((((t1.c0)) NOT BETWEEN ((t1.c2)) AND ((t1.c64))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c64))) COLLATE RTRIM) IS TRUE)  as count FROM t1 ORDER BY (((((((((((t1.c64)) NOT BETWEEN ((t1.c2)) AND ((t1.c2))))OR(((t1.c2) NOT BETWEEN (t1.c64) AND (t1.c2)))))AND(CASE WHEN t1.c2 THEN NULL WHEN t1.c64 THEN t1.c2 WHEN 'M?a4 !' THEN t1.c2 ELSE t1.c2 END)))OR(CAST(t1.c2 AS NUMERIC))))AND(COALESCE(DISTINCT '-660190769', t1.c64))), (NOT ((((t1.c0)) NOT BETWEEN ((t1.c2)) AND ((t1.c64))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c64))) COLLATE RTRIM) ORDER BY (((((((((((t1.c64)) NOT BETWEEN ((t1.c2)) AND ((t1.c2))))OR(((t1.c2) NOT BETWEEN (t1.c64) AND (t1.c2)))))AND(CASE WHEN t1.c2 THEN NULL WHEN t1.c64 THEN t1.c2 WHEN 'M?a4 !' THEN t1.c2 ELSE t1.c2 END)))OR(CAST(t1.c2 AS NUMERIC))))AND(COALESCE(DISTINCT '-660190769', t1.c64))), (NOT ((((t1.c0)) NOT BETWEEN ((t1.c2)) AND ((t1.c64))))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t1 ON ((((NULL) NOT NULL))>=(((((t1.c64)OR(t1.c0)))OR(t1.c0)))) WHERE (IFNULL(DISTINCT ((vt0.c0)OR(t1.c64)), ((t1.c2)<(1219578860)))) ORDER BY JULIANDAY(((vt0.c0)||('')), DATETIME(NULL, vt0.c0, t1.c64), TRIM(DISTINCT t1.c0)) ASC  NULLS FIRST, ABS(DISTINCT vt0.c0)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((vt0.c0)OR(t1.c64)), ((t1.c2)<(1219578860)))) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON ((((NULL) NOT NULL))>=(((((t1.c64)OR(t1.c0)))OR(t1.c0)))) ORDER BY JULIANDAY(((vt0.c0)||('')), DATETIME(NULL, vt0.c0, t1.c64), TRIM(DISTINCT t1.c0)) ASC  NULLS FIRST, ABS(DISTINCT vt0.c0)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t1 ON ((((NULL) NOT NULL))>=(((((t1.c64)OR(t1.c0)))OR(t1.c0)))) WHERE (IFNULL(DISTINCT ((vt0.c0)OR(t1.c64)), ((t1.c2)<(1219578860)))) ORDER BY JULIANDAY(((vt0.c0)||('')), DATETIME(NULL, vt0.c0, t1.c64), TRIM(DISTINCT t1.c0)) ASC  NULLS FIRST, ABS(DISTINCT vt0.c0)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((vt0.c0)OR(t1.c64)), ((t1.c2)<(1219578860)))) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON ((((NULL) NOT NULL))>=(((((t1.c64)OR(t1.c0)))OR(t1.c0)))) ORDER BY JULIANDAY(((vt0.c0)||('')), DATETIME(NULL, vt0.c0, t1.c64), TRIM(DISTINCT t1.c0)) ASC  NULLS FIRST, ABS(DISTINCT vt0.c0)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t1 ON ((((NULL) NOT NULL))>=(((((t1.c64)OR(t1.c0)))OR(t1.c0)))) WHERE (IFNULL(DISTINCT ((vt0.c0)OR(t1.c64)), ((t1.c2)<(1219578860)))) ORDER BY JULIANDAY(((vt0.c0)||('')), DATETIME(NULL, vt0.c0, t1.c64), TRIM(DISTINCT t1.c0)) ASC  NULLS FIRST, ABS(DISTINCT vt0.c0)  NULLS LAST;
SELECT * FROM rt0, t1, v0, vt0 WHERE (CAST(NULL AS BLOB) COLLATE BINARY) ORDER BY (~ (((v0.c0)GLOB(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM rt0, t1, v0, vt0 ORDER BY (~ (((v0.c0)GLOB(rt0.c1))))  NULLS LAST);
SELECT * FROM rt0, t1, v0, vt0 WHERE (CAST(NULL AS BLOB) COLLATE BINARY) ORDER BY (~ (((v0.c0)GLOB(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM rt0, t1, v0, vt0 ORDER BY (~ (((v0.c0)GLOB(rt0.c1))))  NULLS LAST);
SELECT * FROM rt0, t1, v0, vt0 WHERE (CAST(NULL AS BLOB) COLLATE BINARY) ORDER BY (~ (((v0.c0)GLOB(rt0.c1))))  NULLS LAST;
SELECT ALL * FROM t1, v0, vt0, rt0 WHERE (((rt0.c1) NOT BETWEEN (t1.c2) AND (rt0.c0)) COLLATE RTRIM) ORDER BY CAST(((v0.c0)>=(v0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOT BETWEEN (t1.c2) AND (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t1, v0, vt0, rt0 ORDER BY CAST(((v0.c0)>=(v0.c0)) AS INTEGER));
SELECT ALL * FROM t1, v0, vt0, rt0 WHERE (((rt0.c1) NOT BETWEEN (t1.c2) AND (rt0.c0)) COLLATE RTRIM) ORDER BY CAST(((v0.c0)>=(v0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOT BETWEEN (t1.c2) AND (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t1, v0, vt0, rt0 ORDER BY CAST(((v0.c0)>=(v0.c0)) AS INTEGER));
SELECT ALL * FROM t1, v0, vt0, rt0 WHERE (((rt0.c1) NOT BETWEEN (t1.c2) AND (rt0.c0)) COLLATE RTRIM) ORDER BY CAST(((v0.c0)>=(v0.c0)) AS INTEGER);
SELECT COUNT(*) FROM rt0, v0 RIGHT OUTER JOIN vt0 ON (+ (((rt0.c0)<>(rt0.c2)))) WHERE (CASE WHEN (((v0.c0, 0xffffffff8c021900, 0.5407545616989251)) BETWEEN ((v0.c0, vt0.c0, vt0.c0)) AND ((rt0.c0, v0.c0, vt0.c0))) THEN (NOT ('fq')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((v0.c0, 0xffffffff8c021900, 0.5407545616989251)) BETWEEN ((v0.c0, vt0.c0, vt0.c0)) AND ((rt0.c0, v0.c0, vt0.c0))) THEN (NOT ('fq')) END) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN vt0 ON (+ (((rt0.c0)<>(rt0.c2)))));
SELECT COUNT(*) FROM rt0, v0 RIGHT OUTER JOIN vt0 ON (+ (((rt0.c0)<>(rt0.c2)))) WHERE (CASE WHEN (((v0.c0, 0xffffffff8c021900, 0.5407545616989251)) BETWEEN ((v0.c0, vt0.c0, vt0.c0)) AND ((rt0.c0, v0.c0, vt0.c0))) THEN (NOT ('fq')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((v0.c0, 0xffffffff8c021900, 0.5407545616989251)) BETWEEN ((v0.c0, vt0.c0, vt0.c0)) AND ((rt0.c0, v0.c0, vt0.c0))) THEN (NOT ('fq')) END) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN vt0 ON (+ (((rt0.c0)<>(rt0.c2)))));
SELECT COUNT(*) FROM rt0, v0 RIGHT OUTER JOIN vt0 ON (+ (((rt0.c0)<>(rt0.c2)))) WHERE (CASE WHEN (((v0.c0, 0xffffffff8c021900, 0.5407545616989251)) BETWEEN ((v0.c0, vt0.c0, vt0.c0)) AND ((rt0.c0, v0.c0, vt0.c0))) THEN (NOT ('fq')) END);
SELECT COUNT(*) FROM t1, rt0, v0 WHERE (((((x'') BETWEEN (t1.c64) AND (t1.c64)))||(((v0.c0)=(v0.c0))))) ORDER BY ((CAST(t1.c0 AS NUMERIC)) NOT BETWEEN (((t1.c0)<(rt0.c2))) AND (((('p\k㛍㋵Si[髰'))<=((t1.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'') BETWEEN (t1.c64) AND (t1.c64)))||(((v0.c0)=(v0.c0))))) IS TRUE)  as count FROM t1, rt0, v0 ORDER BY ((CAST(t1.c0 AS NUMERIC)) NOT BETWEEN (((t1.c0)<(rt0.c2))) AND (((('p\k㛍㋵Si[髰'))<=((t1.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t1, rt0, v0 WHERE (((((x'') BETWEEN (t1.c64) AND (t1.c64)))||(((v0.c0)=(v0.c0))))) ORDER BY ((CAST(t1.c0 AS NUMERIC)) NOT BETWEEN (((t1.c0)<(rt0.c2))) AND (((('p\k㛍㋵Si[髰'))<=((t1.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'') BETWEEN (t1.c64) AND (t1.c64)))||(((v0.c0)=(v0.c0))))) IS TRUE)  as count FROM t1, rt0, v0 ORDER BY ((CAST(t1.c0 AS NUMERIC)) NOT BETWEEN (((t1.c0)<(rt0.c2))) AND (((('p\k㛍㋵Si[髰'))<=((t1.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t1, rt0, v0 WHERE (((((x'') BETWEEN (t1.c64) AND (t1.c64)))||(((v0.c0)=(v0.c0))))) ORDER BY ((CAST(t1.c0 AS NUMERIC)) NOT BETWEEN (((t1.c0)<(rt0.c2))) AND (((('p\k㛍㋵Si[髰'))<=((t1.c0))))) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, rt0, vt0, t1 WHERE (((((TYPEOF(DISTINCT v0.c0))OR(((8.2778608E8)IS(t1.c64)))))OR(((t1.c64)<(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((TYPEOF(DISTINCT v0.c0))OR(((8.2778608E8)IS(t1.c64)))))OR(((t1.c64)<(t1.c0))))) IS TRUE)  as count FROM v0, rt0, vt0, t1);
SELECT COUNT(*) FROM v0, rt0, vt0, t1 WHERE (((((TYPEOF(DISTINCT v0.c0))OR(((8.2778608E8)IS(t1.c64)))))OR(((t1.c64)<(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((TYPEOF(DISTINCT v0.c0))OR(((8.2778608E8)IS(t1.c64)))))OR(((t1.c64)<(t1.c0))))) IS TRUE)  as count FROM v0, rt0, vt0, t1);
SELECT COUNT(*) FROM v0, rt0, vt0, t1 WHERE (((((TYPEOF(DISTINCT v0.c0))OR(((8.2778608E8)IS(t1.c64)))))OR(((t1.c64)<(t1.c0)))));
SELECT ALL * FROM rt0 CROSS JOIN t1 ON CASE rt0.c1  WHEN rt0.c1 THEN t1.c0 ELSE rt0.c0 END COLLATE RTRIM WHERE ((CASE WHEN t1.c2 THEN t1.c2 WHEN NULL THEN rt0.c2 WHEN t1.c2 THEN t1.c64 ELSE t1.c0 END IN ())) ORDER BY ((CAST(x'' AS TEXT))>(NULL)) ASC, ((((t1.c64) BETWEEN (t1.c64) AND (937037396))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN t1.c2 THEN t1.c2 WHEN NULL THEN rt0.c2 WHEN t1.c2 THEN t1.c64 ELSE t1.c0 END IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON CASE rt0.c1  WHEN rt0.c1 THEN t1.c0 ELSE rt0.c0 END COLLATE RTRIM ORDER BY ((CAST(x'' AS TEXT))>(NULL)) ASC, ((((t1.c64) BETWEEN (t1.c64) AND (937037396))) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM rt0 CROSS JOIN t1 ON CASE rt0.c1  WHEN rt0.c1 THEN t1.c0 ELSE rt0.c0 END COLLATE RTRIM WHERE ((CASE WHEN t1.c2 THEN t1.c2 WHEN NULL THEN rt0.c2 WHEN t1.c2 THEN t1.c64 ELSE t1.c0 END IN ())) ORDER BY ((CAST(x'' AS TEXT))>(NULL)) ASC, ((((t1.c64) BETWEEN (t1.c64) AND (937037396))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN t1.c2 THEN t1.c2 WHEN NULL THEN rt0.c2 WHEN t1.c2 THEN t1.c64 ELSE t1.c0 END IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON CASE rt0.c1  WHEN rt0.c1 THEN t1.c0 ELSE rt0.c0 END COLLATE RTRIM ORDER BY ((CAST(x'' AS TEXT))>(NULL)) ASC, ((((t1.c64) BETWEEN (t1.c64) AND (937037396))) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM rt0 CROSS JOIN t1 ON CASE rt0.c1  WHEN rt0.c1 THEN t1.c0 ELSE rt0.c0 END COLLATE RTRIM WHERE ((CASE WHEN t1.c2 THEN t1.c2 WHEN NULL THEN rt0.c2 WHEN t1.c2 THEN t1.c64 ELSE t1.c0 END IN ())) ORDER BY ((CAST(x'' AS TEXT))>(NULL)) ASC, ((((t1.c64) BETWEEN (t1.c64) AND (937037396))) NOTNULL)  NULLS FIRST;
SELECT ALL * FROM vt0, rt0, t1 FULL OUTER JOIN v0 ON ((rt0.c0 COLLATE BINARY) IS FALSE) WHERE (((((v0.c0) ISNULL)) IS FALSE)) ORDER BY CASE IFNULL(DISTINCT rt0.c2, v0.c0)  WHEN t1.c0 THEN ((x'')+(t1.c0)) ELSE ((t1.c0)LIKE(rt0.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) ISNULL)) IS FALSE)) IS TRUE)  as count FROM vt0, rt0, t1 FULL OUTER JOIN v0 ON ((rt0.c0 COLLATE BINARY) IS FALSE) ORDER BY CASE IFNULL(DISTINCT rt0.c2, v0.c0)  WHEN t1.c0 THEN ((x'')+(t1.c0)) ELSE ((t1.c0)LIKE(rt0.c2)) END ASC);
SELECT ALL * FROM vt0, rt0, t1 FULL OUTER JOIN v0 ON ((rt0.c0 COLLATE BINARY) IS FALSE) WHERE (((((v0.c0) ISNULL)) IS FALSE)) ORDER BY CASE IFNULL(DISTINCT rt0.c2, v0.c0)  WHEN t1.c0 THEN ((x'')+(t1.c0)) ELSE ((t1.c0)LIKE(rt0.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) ISNULL)) IS FALSE)) IS TRUE)  as count FROM vt0, rt0, t1 FULL OUTER JOIN v0 ON ((rt0.c0 COLLATE BINARY) IS FALSE) ORDER BY CASE IFNULL(DISTINCT rt0.c2, v0.c0)  WHEN t1.c0 THEN ((x'')+(t1.c0)) ELSE ((t1.c0)LIKE(rt0.c2)) END ASC);
SELECT ALL * FROM vt0, rt0, t1 FULL OUTER JOIN v0 ON ((rt0.c0 COLLATE BINARY) IS FALSE) WHERE (((((v0.c0) ISNULL)) IS FALSE)) ORDER BY CASE IFNULL(DISTINCT rt0.c2, v0.c0)  WHEN t1.c0 THEN ((x'')+(t1.c0)) ELSE ((t1.c0)LIKE(rt0.c2)) END ASC;
SELECT ALL * FROM vt0, v0, rt0 WHERE (((v0.c0)==(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((v0.c0)=(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (((v0.c0)==(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((v0.c0)=(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (((v0.c0)==(vt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM t1, rt0 RIGHT OUTER JOIN v0 ON (- (CASE vt0.c0  WHEN rt0.c1 THEN 0.9599521159876591 END)) INNER JOIN vt0 ON ((((rt0.c2)>=(v0.c0)))GLOB(CAST(rt0.c1 AS NUMERIC))) WHERE (((((t1.c64) NOT BETWEEN (vt0.c0) AND (rt0.c1)))<>(((t1.c0)%(t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c64) NOT BETWEEN (vt0.c0) AND (rt0.c1)))!=(((t1.c0)%(t1.c2))))) IS TRUE)  as count FROM t1, rt0 RIGHT OUTER JOIN v0 ON (- (CASE vt0.c0  WHEN rt0.c1 THEN 0.9599521159876591 END)) INNER JOIN vt0 ON ((((rt0.c2)>=(v0.c0)))GLOB(CAST(rt0.c1 AS NUMERIC))));
SELECT COUNT(*) FROM t1, rt0 RIGHT OUTER JOIN v0 ON (- (CASE vt0.c0  WHEN rt0.c1 THEN 0.9599521159876591 END)) INNER JOIN vt0 ON ((((rt0.c2)>=(v0.c0)))GLOB(CAST(rt0.c1 AS NUMERIC))) WHERE (((((t1.c64) NOT BETWEEN (vt0.c0) AND (rt0.c1)))<>(((t1.c0)%(t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c64) NOT BETWEEN (vt0.c0) AND (rt0.c1)))!=(((t1.c0)%(t1.c2))))) IS TRUE)  as count FROM t1, rt0 RIGHT OUTER JOIN v0 ON (- (CASE vt0.c0  WHEN rt0.c1 THEN 0.9599521159876591 END)) INNER JOIN vt0 ON ((((rt0.c2)>=(v0.c0)))GLOB(CAST(rt0.c1 AS NUMERIC))));
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c64) ORDER BY ((t1.c2)>(t1.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((t1.c64) IS TRUE)  as count FROM t1 ORDER BY ((t1.c2)>(t1.c2 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c64) ORDER BY ((t1.c2)>(t1.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((t1.c64) IS TRUE)  as count FROM t1 ORDER BY ((t1.c2)>(t1.c2 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c64) ORDER BY ((t1.c2)>(t1.c2 COLLATE RTRIM));
SELECT * FROM v0, vt0, t1, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((((t1.c0)OR(t1.c64)))OR(rt0.c1)))) AND ((t1.c2)))) ORDER BY (((t1.c0 IN ())) NOT BETWEEN (rt0.c2) AND (((t1.c64)AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((((((t1.c0)OR(t1.c64)))OR(rt0.c1)))) AND ((t1.c2)))) IS TRUE)  as count FROM v0, vt0, t1, rt0 ORDER BY (((t1.c0 IN ())) NOT BETWEEN (rt0.c2) AND (((t1.c64)AND(vt0.c0)))));
SELECT * FROM v0, vt0, t1, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((((t1.c0)OR(t1.c64)))OR(rt0.c1)))) AND ((t1.c2)))) ORDER BY (((t1.c0 IN ())) NOT BETWEEN (rt0.c2) AND (((t1.c64)AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((((((t1.c0)OR(t1.c64)))OR(rt0.c1)))) AND ((t1.c2)))) IS TRUE)  as count FROM v0, vt0, t1, rt0 ORDER BY (((t1.c0 IN ())) NOT BETWEEN (rt0.c2) AND (((t1.c64)AND(vt0.c0)))));
SELECT * FROM v0, vt0, t1, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((((t1.c0)OR(t1.c64)))OR(rt0.c1)))) AND ((t1.c2)))) ORDER BY (((t1.c0 IN ())) NOT BETWEEN (rt0.c2) AND (((t1.c64)AND(vt0.c0))));
SELECT ALL * FROM rt0, t1, v0 WHERE (LIKELY((+ (rt0.c1)))) ORDER BY CAST(CAST(t1.c64 AS BLOB) AS BLOB)  NULLS FIRST, (((v0.c0 IN ()))|(NULL))  NULLS FIRST, (((UNLIKELY(DISTINCT t1.c0)))==((CAST(t1.c0 AS REAL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY((+ (rt0.c1)))) IS TRUE)  as count FROM rt0, t1, v0 ORDER BY CAST(CAST(t1.c64 AS BLOB) AS BLOB)  NULLS FIRST, (((v0.c0 IN ()))|(NULL))  NULLS FIRST, (((UNLIKELY(DISTINCT t1.c0)))=((CAST(t1.c0 AS REAL)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, t1, v0 WHERE (LIKELY((+ (rt0.c1)))) ORDER BY CAST(CAST(t1.c64 AS BLOB) AS BLOB)  NULLS FIRST, (((v0.c0 IN ()))|(NULL))  NULLS FIRST, (((UNLIKELY(DISTINCT t1.c0)))==((CAST(t1.c0 AS REAL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY((+ (rt0.c1)))) IS TRUE)  as count FROM rt0, t1, v0 ORDER BY CAST(CAST(t1.c64 AS BLOB) AS BLOB)  NULLS FIRST, (((v0.c0 IN ()))|(NULL))  NULLS FIRST, (((UNLIKELY(DISTINCT t1.c0)))=((CAST(t1.c0 AS REAL)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, t1, v0 WHERE (LIKELY((+ (rt0.c1)))) ORDER BY CAST(CAST(t1.c64 AS BLOB) AS BLOB)  NULLS FIRST, (((v0.c0 IN ()))|(NULL))  NULLS FIRST, (((UNLIKELY(DISTINCT t1.c0)))==((CAST(t1.c0 AS REAL)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, t1 INNER JOIN vt0 ON ((t1.c64)AND(rt0.c1)) COLLATE RTRIM WHERE ((((+ (rt0.c1))) ISNULL)) ORDER BY ((TRIM(DISTINCT rt0.c2)) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0, t1 INNER JOIN vt0 ON ((t1.c64)AND(rt0.c1)) COLLATE RTRIM ORDER BY ((TRIM(DISTINCT rt0.c2)) ISNULL) ASC);
SELECT ALL * FROM rt0, t1 INNER JOIN vt0 ON ((t1.c64)AND(rt0.c1)) COLLATE RTRIM WHERE ((((+ (rt0.c1))) ISNULL)) ORDER BY ((TRIM(DISTINCT rt0.c2)) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0, t1 INNER JOIN vt0 ON ((t1.c64)AND(rt0.c1)) COLLATE RTRIM ORDER BY ((TRIM(DISTINCT rt0.c2)) ISNULL) ASC);
SELECT ALL * FROM rt0, t1 INNER JOIN vt0 ON ((t1.c64)AND(rt0.c1)) COLLATE RTRIM WHERE ((((+ (rt0.c1))) ISNULL)) ORDER BY ((TRIM(DISTINCT rt0.c2)) ISNULL) ASC;
SELECT ALL * FROM v0 WHERE (COALESCE(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)), ((((v0.c0)OR(v0.c0)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ((COALESCE(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)), ((((v0.c0)OR(v0.c0)))OR(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (COALESCE(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)), ((((v0.c0)OR(v0.c0)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ((COALESCE(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)), ((((v0.c0)OR(v0.c0)))OR(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (COALESCE(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)), ((((v0.c0)OR(v0.c0)))OR(v0.c0))));
SELECT * FROM vt0 WHERE ('1426030502') ORDER BY x'f546' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('1426030502') IS TRUE)  as count FROM vt0 ORDER BY x'f546' DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ('1426030502') ORDER BY x'f546' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('1426030502') IS TRUE)  as count FROM vt0 ORDER BY x'f546' DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ('1426030502') ORDER BY x'f546' DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0, t1 WHERE (((((t1.c0) ISNULL))=(CAST(t1.c64 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) ISNULL))=(CAST(t1.c64 AS NUMERIC)))) IS TRUE)  as count FROM rt0, v0, t1);
SELECT COUNT(*) FROM rt0, v0, t1 WHERE (((((t1.c0) ISNULL))=(CAST(t1.c64 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) ISNULL))=(CAST(t1.c64 AS NUMERIC)))) IS TRUE)  as count FROM rt0, v0, t1);
SELECT COUNT(*) FROM rt0, v0, t1 WHERE (((((t1.c0) ISNULL))=(CAST(t1.c64 AS NUMERIC))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON TRIM(DISTINCT rt0.c2) RIGHT OUTER JOIN t1 ON ((((((((((t1.c64)AND(rt0.c2)))AND(rt0.c0)))AND(v0.c0)))OR(rt0.c2)))IS NOT(((t1.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))) WHERE (((((((((CAST(t1.c0 AS BLOB))OR(CAST(rt0.c2 AS NUMERIC))))OR(((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(t1.c0)))AND(t1.c64)))OR(rt0.c0)))))AND(((t1.c2) IS FALSE))))AND(((rt0.c2)+(t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(t1.c0 AS BLOB))OR(CAST(rt0.c2 AS NUMERIC))))OR(((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(t1.c0)))AND(t1.c64)))OR(rt0.c0)))))AND(((t1.c2) IS FALSE))))AND(((rt0.c2)+(t1.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON TRIM(DISTINCT rt0.c2) RIGHT OUTER JOIN t1 ON ((((((((((t1.c64)AND(rt0.c2)))AND(rt0.c0)))AND(v0.c0)))OR(rt0.c2)))IS NOT(((t1.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON TRIM(DISTINCT rt0.c2) RIGHT OUTER JOIN t1 ON ((((((((((t1.c64)AND(rt0.c2)))AND(rt0.c0)))AND(v0.c0)))OR(rt0.c2)))IS NOT(((t1.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))) WHERE (((((((((CAST(t1.c0 AS BLOB))OR(CAST(rt0.c2 AS NUMERIC))))OR(((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(t1.c0)))AND(t1.c64)))OR(rt0.c0)))))AND(((t1.c2) IS FALSE))))AND(((rt0.c2)+(t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(t1.c0 AS BLOB))OR(CAST(rt0.c2 AS NUMERIC))))OR(((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(t1.c0)))AND(t1.c64)))OR(rt0.c0)))))AND(((t1.c2) IS FALSE))))AND(((rt0.c2)+(t1.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON TRIM(DISTINCT rt0.c2) RIGHT OUTER JOIN t1 ON ((((((((((t1.c64)AND(rt0.c2)))AND(rt0.c0)))AND(v0.c0)))OR(rt0.c2)))IS NOT(((t1.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON TRIM(DISTINCT rt0.c2) RIGHT OUTER JOIN t1 ON ((((((((((t1.c64)AND(rt0.c2)))AND(rt0.c0)))AND(v0.c0)))OR(rt0.c2)))IS NOT(((t1.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))) WHERE (((((((((CAST(t1.c0 AS BLOB))OR(CAST(rt0.c2 AS NUMERIC))))OR(((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(t1.c0)))AND(t1.c64)))OR(rt0.c0)))))AND(((t1.c2) IS FALSE))))AND(((rt0.c2)+(t1.c0)))));
SELECT COUNT(*) FROM rt0, t1, v0 WHERE (x'a603');
SELECT SUM(count) FROM (SELECT ((x'a603') IS TRUE)  as count FROM rt0, t1, v0);
SELECT COUNT(*) FROM rt0, t1, v0 WHERE (x'a603');
SELECT SUM(count) FROM (SELECT ((x'a603') IS TRUE)  as count FROM rt0, t1, v0);
SELECT COUNT(*) FROM rt0, t1, v0 WHERE (x'a603');
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN rt0 ON CAST(((rt0.c2) NOT BETWEEN (NULL) AND (t1.c0)) AS REAL) CROSS JOIN v0 ON CAST(CASE t1.c2  WHEN v0.c0 THEN NULL WHEN rt0.c1 THEN t1.c64 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END AS NUMERIC) WHERE (((((((t1.c2)AND(rt0.c1)))AND(rt0.c1)))>=(((((((((rt0.c2)AND('')))AND(v0.c0)))OR(rt0.c1)))AND(rt0.c2))))) ORDER BY ((LOWER(v0.c0))AND(((rt0.c2) IS TRUE))) DESC, (((rt0.c0 IN ()))||(CASE t1.c0  WHEN rt0.c1 THEN rt0.c2 END)) ASC  NULLS FIRST, COALESCE(DISTINCT ((rt0.c1)+(NULL)), t1.c0);
SELECT SUM(count) FROM (SELECT ((((((((t1.c2)AND(rt0.c1)))AND(rt0.c1)))>=(((((((((rt0.c2)AND('')))AND(v0.c0)))OR(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON CAST(((rt0.c2) NOT BETWEEN (NULL) AND (t1.c0)) AS REAL) CROSS JOIN v0 ON CAST(CASE t1.c2  WHEN v0.c0 THEN NULL WHEN rt0.c1 THEN t1.c64 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END AS NUMERIC) ORDER BY ((LOWER(v0.c0))AND(((rt0.c2) IS TRUE))) DESC, (((rt0.c0 IN ()))||(CASE t1.c0  WHEN rt0.c1 THEN rt0.c2 END)) ASC  NULLS FIRST, COALESCE(DISTINCT ((rt0.c1)+(NULL)), t1.c0));
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN rt0 ON CAST(((rt0.c2) NOT BETWEEN (NULL) AND (t1.c0)) AS REAL) CROSS JOIN v0 ON CAST(CASE t1.c2  WHEN v0.c0 THEN NULL WHEN rt0.c1 THEN t1.c64 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END AS NUMERIC) WHERE (((((((t1.c2)AND(rt0.c1)))AND(rt0.c1)))>=(((((((((rt0.c2)AND('')))AND(v0.c0)))OR(rt0.c1)))AND(rt0.c2))))) ORDER BY ((LOWER(v0.c0))AND(((rt0.c2) IS TRUE))) DESC, (((rt0.c0 IN ()))||(CASE t1.c0  WHEN rt0.c1 THEN rt0.c2 END)) ASC  NULLS FIRST, COALESCE(DISTINCT ((rt0.c1)+(NULL)), t1.c0);
SELECT SUM(count) FROM (SELECT ((((((((t1.c2)AND(rt0.c1)))AND(rt0.c1)))>=(((((((((rt0.c2)AND('')))AND(v0.c0)))OR(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON CAST(((rt0.c2) NOT BETWEEN (NULL) AND (t1.c0)) AS REAL) CROSS JOIN v0 ON CAST(CASE t1.c2  WHEN v0.c0 THEN NULL WHEN rt0.c1 THEN t1.c64 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END AS NUMERIC) ORDER BY ((LOWER(v0.c0))AND(((rt0.c2) IS TRUE))) DESC, (((rt0.c0 IN ()))||(CASE t1.c0  WHEN rt0.c1 THEN rt0.c2 END)) ASC  NULLS FIRST, COALESCE(DISTINCT ((rt0.c1)+(NULL)), t1.c0));
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN rt0 ON CAST(((rt0.c2) NOT BETWEEN (NULL) AND (t1.c0)) AS REAL) CROSS JOIN v0 ON CAST(CASE t1.c2  WHEN v0.c0 THEN NULL WHEN rt0.c1 THEN t1.c64 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END AS NUMERIC) WHERE (((((((t1.c2)AND(rt0.c1)))AND(rt0.c1)))>=(((((((((rt0.c2)AND('')))AND(v0.c0)))OR(rt0.c1)))AND(rt0.c2))))) ORDER BY ((LOWER(v0.c0))AND(((rt0.c2) IS TRUE))) DESC, (((rt0.c0 IN ()))||(CASE t1.c0  WHEN rt0.c1 THEN rt0.c2 END)) ASC  NULLS FIRST, COALESCE(DISTINCT ((rt0.c1)+(NULL)), t1.c0);
SELECT ALL COUNT(*) FROM v0, vt0, t1 WHERE (((((t1.c2)|(t1.c64))) ISNULL)) ORDER BY (- (((vt0.c0)<=(-1.38202556E9)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c2)|(t1.c64))) ISNULL)) IS TRUE)  as count FROM v0, vt0, t1 ORDER BY (- (((vt0.c0)<=(-1.38202556E9)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, t1 WHERE (((((t1.c2)|(t1.c64))) ISNULL)) ORDER BY (- (((vt0.c0)<=(-1.38202556E9)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c2)|(t1.c64))) ISNULL)) IS TRUE)  as count FROM v0, vt0, t1 ORDER BY (- (((vt0.c0)<=(-1.38202556E9)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, t1 WHERE (((((t1.c2)|(t1.c64))) ISNULL)) ORDER BY (- (((vt0.c0)<=(-1.38202556E9)))) ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt0, t1, v0 WHERE ((((t1.c64) BETWEEN (v0.c0) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c64) BETWEEN (v0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM rt0, vt0, t1, v0);
SELECT ALL * FROM rt0, vt0, t1, v0 WHERE ((((t1.c64) BETWEEN (v0.c0) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c64) BETWEEN (v0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM rt0, vt0, t1, v0);
SELECT ALL * FROM rt0, vt0, t1, v0 WHERE ((((t1.c64) BETWEEN (v0.c0) AND (vt0.c0)) IN ()));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON '1318682206' LEFT OUTER JOIN rt0 ON t1.c0 RIGHT OUTER JOIN t1 ON (((rt0.c2, t1.c2, t1.c0)) BETWEEN ((NULLIF(t1.c2, rt0.c1), (~ (t1.c0)), UNLIKELY(t1.c0))) AND ((((((t1.c0)OR(t1.c2)))AND(rt0.c1)), ((rt0.c1) NOTNULL), CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END))) WHERE ((((((((('827786080')AND(NULL)))OR(t1.c0)))AND(rt0.c2 COLLATE NOCASE)))AND((- (rt0.c0))))) ORDER BY (((((- (0.9852516453820105)))OR(((v0.c0) BETWEEN (t1.c2) AND (rt0.c2)))))AND((t1.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((((((('827786080')AND(NULL)))OR(t1.c0)))AND(rt0.c2 COLLATE NOCASE)))AND((- (rt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON '1318682206' LEFT OUTER JOIN rt0 ON t1.c0 RIGHT OUTER JOIN t1 ON (((rt0.c2, t1.c2, t1.c0)) BETWEEN ((NULLIF(t1.c2, rt0.c1), (~ (t1.c0)), UNLIKELY(t1.c0))) AND ((((((t1.c0)OR(t1.c2)))AND(rt0.c1)), ((rt0.c1) NOTNULL), CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END))) ORDER BY (((((- (0.9852516453820105)))OR(((v0.c0) BETWEEN (t1.c2) AND (rt0.c2)))))AND((t1.c2 IN ()))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON '1318682206' LEFT OUTER JOIN rt0 ON t1.c0 RIGHT OUTER JOIN t1 ON (((rt0.c2, t1.c2, t1.c0)) BETWEEN ((NULLIF(t1.c2, rt0.c1), (~ (t1.c0)), UNLIKELY(t1.c0))) AND ((((((t1.c0)OR(t1.c2)))AND(rt0.c1)), ((rt0.c1) NOTNULL), CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END))) WHERE ((((((((('827786080')AND(NULL)))OR(t1.c0)))AND(rt0.c2 COLLATE NOCASE)))AND((- (rt0.c0))))) ORDER BY (((((- (0.9852516453820105)))OR(((v0.c0) BETWEEN (t1.c2) AND (rt0.c2)))))AND((t1.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((((((('827786080')AND(NULL)))OR(t1.c0)))AND(rt0.c2 COLLATE NOCASE)))AND((- (rt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON '1318682206' LEFT OUTER JOIN rt0 ON t1.c0 RIGHT OUTER JOIN t1 ON (((rt0.c2, t1.c2, t1.c0)) BETWEEN ((NULLIF(t1.c2, rt0.c1), (~ (t1.c0)), UNLIKELY(t1.c0))) AND ((((((t1.c0)OR(t1.c2)))AND(rt0.c1)), ((rt0.c1) NOTNULL), CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END))) ORDER BY (((((- (0.9852516453820105)))OR(((v0.c0) BETWEEN (t1.c2) AND (rt0.c2)))))AND((t1.c2 IN ()))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((((((rt0.c0) NOT BETWEEN ('1305136947') AND (rt0.c2)))OR(((rt0.c1)>=(t1.c64)))))AND((NOT (v0.c0)))) CROSS JOIN t1 ON '' COLLATE RTRIM RIGHT OUTER JOIN v0 ON ((t1.c64) IS TRUE) WHERE (CAST(((rt0.c2)OR(rt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)OR(rt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((((((rt0.c0) NOT BETWEEN ('1305136947') AND (rt0.c2)))OR(((rt0.c1)>=(t1.c64)))))AND((NOT (v0.c0)))) CROSS JOIN t1 ON '' COLLATE RTRIM RIGHT OUTER JOIN v0 ON ((t1.c64) IS TRUE));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((((((rt0.c0) NOT BETWEEN ('1305136947') AND (rt0.c2)))OR(((rt0.c1)>=(t1.c64)))))AND((NOT (v0.c0)))) CROSS JOIN t1 ON '' COLLATE RTRIM RIGHT OUTER JOIN v0 ON ((t1.c64) IS TRUE) WHERE (CAST(((rt0.c2)OR(rt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)OR(rt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((((((rt0.c0) NOT BETWEEN ('1305136947') AND (rt0.c2)))OR(((rt0.c1)>=(t1.c64)))))AND((NOT (v0.c0)))) CROSS JOIN t1 ON '' COLLATE RTRIM RIGHT OUTER JOIN v0 ON ((t1.c64) IS TRUE));
SELECT * FROM v0 NOT INDEXED, rt0 NATURAL JOIN vt0 WHERE (('877835418' IN (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((('877835418' IN (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, rt0 NATURAL JOIN vt0);
SELECT * FROM v0 NOT INDEXED, rt0 NATURAL JOIN vt0 WHERE (('877835418' IN (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((('877835418' IN (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, rt0 NATURAL JOIN vt0);
SELECT * FROM v0 NOT INDEXED, rt0 NATURAL JOIN vt0 WHERE (('877835418' IN (vt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM v0, rt0 INNER JOIN vt0 ON CASE TRIM(t1.c64)  WHEN 614768362 THEN ((((((((t1.c64)OR(v0.c0)))OR(vt0.c0)))AND(t1.c64)))OR(v0.c0)) END INNER JOIN t1 ON ((rt0.c2) NOT BETWEEN (rt0.c1) AND (x'c21e')) COLLATE NOCASE WHERE ((((((rt0.c1)OR(t1.c64)))AND(rt0.c2)) IN ())) ORDER BY INSTR(TRIM(t1.c0), (((v0.c0, rt0.c2, v0.c0)) BETWEEN ((rt0.c0, rt0.c1, t1.c64)) AND ((v0.c0, rt0.c0, t1.c2)))), ((((((x'') NOT BETWEEN (rt0.c0) AND (v0.c0)))AND(((((((((((((vt0.c0)OR(rt0.c0)))AND(v0.c0)))OR(t1.c64)))OR(v0.c0)))OR(vt0.c0)))OR(t1.c0)))))AND(json_extract(t1.c2, t1.c2))) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)OR(t1.c64)))AND(rt0.c2)) IN ())) IS TRUE)  as count FROM v0, rt0 INNER JOIN vt0 ON CASE TRIM(t1.c64)  WHEN 614768362 THEN ((((((((t1.c64)OR(v0.c0)))OR(vt0.c0)))AND(t1.c64)))OR(v0.c0)) END INNER JOIN t1 ON ((rt0.c2) NOT BETWEEN (rt0.c1) AND (x'c21e')) COLLATE NOCASE ORDER BY INSTR(TRIM(t1.c0), (((v0.c0, rt0.c2, v0.c0)) BETWEEN ((rt0.c0, rt0.c1, t1.c64)) AND ((v0.c0, rt0.c0, t1.c2)))), ((((((x'') NOT BETWEEN (rt0.c0) AND (v0.c0)))AND(((((((((((((vt0.c0)OR(rt0.c0)))AND(v0.c0)))OR(t1.c64)))OR(v0.c0)))OR(vt0.c0)))OR(t1.c0)))))AND(json_extract(t1.c2, t1.c2))) ASC);
SELECT COUNT(*) FROM v0, rt0 INNER JOIN vt0 ON CASE TRIM(t1.c64)  WHEN 614768362 THEN ((((((((t1.c64)OR(v0.c0)))OR(vt0.c0)))AND(t1.c64)))OR(v0.c0)) END INNER JOIN t1 ON ((rt0.c2) NOT BETWEEN (rt0.c1) AND (x'c21e')) COLLATE NOCASE WHERE ((((((rt0.c1)OR(t1.c64)))AND(rt0.c2)) IN ())) ORDER BY INSTR(TRIM(t1.c0), (((v0.c0, rt0.c2, v0.c0)) BETWEEN ((rt0.c0, rt0.c1, t1.c64)) AND ((v0.c0, rt0.c0, t1.c2)))), ((((((x'') NOT BETWEEN (rt0.c0) AND (v0.c0)))AND(((((((((((((vt0.c0)OR(rt0.c0)))AND(v0.c0)))OR(t1.c64)))OR(v0.c0)))OR(vt0.c0)))OR(t1.c0)))))AND(json_extract(t1.c2, t1.c2))) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)OR(t1.c64)))AND(rt0.c2)) IN ())) IS TRUE)  as count FROM v0, rt0 INNER JOIN vt0 ON CASE TRIM(t1.c64)  WHEN 614768362 THEN ((((((((t1.c64)OR(v0.c0)))OR(vt0.c0)))AND(t1.c64)))OR(v0.c0)) END INNER JOIN t1 ON ((rt0.c2) NOT BETWEEN (rt0.c1) AND (x'c21e')) COLLATE NOCASE ORDER BY INSTR(TRIM(t1.c0), (((v0.c0, rt0.c2, v0.c0)) BETWEEN ((rt0.c0, rt0.c1, t1.c64)) AND ((v0.c0, rt0.c0, t1.c2)))), ((((((x'') NOT BETWEEN (rt0.c0) AND (v0.c0)))AND(((((((((((((vt0.c0)OR(rt0.c0)))AND(v0.c0)))OR(t1.c64)))OR(v0.c0)))OR(vt0.c0)))OR(t1.c0)))))AND(json_extract(t1.c2, t1.c2))) ASC);
SELECT COUNT(*) FROM v0, rt0 INNER JOIN vt0 ON CASE TRIM(t1.c64)  WHEN 614768362 THEN ((((((((t1.c64)OR(v0.c0)))OR(vt0.c0)))AND(t1.c64)))OR(v0.c0)) END INNER JOIN t1 ON ((rt0.c2) NOT BETWEEN (rt0.c1) AND (x'c21e')) COLLATE NOCASE WHERE ((((((rt0.c1)OR(t1.c64)))AND(rt0.c2)) IN ())) ORDER BY INSTR(TRIM(t1.c0), (((v0.c0, rt0.c2, v0.c0)) BETWEEN ((rt0.c0, rt0.c1, t1.c64)) AND ((v0.c0, rt0.c0, t1.c2)))), ((((((x'') NOT BETWEEN (rt0.c0) AND (v0.c0)))AND(((((((((((((vt0.c0)OR(rt0.c0)))AND(v0.c0)))OR(t1.c64)))OR(v0.c0)))OR(vt0.c0)))OR(t1.c0)))))AND(json_extract(t1.c2, t1.c2))) ASC;
SELECT * FROM v0 WHERE ((((((v0.c0)AND(v0.c0)))AND(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((v0.c0)AND(v0.c0)))AND(v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((v0.c0)AND(v0.c0)))AND(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((v0.c0)AND(v0.c0)))AND(v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((v0.c0)AND(v0.c0)))AND(v0.c0)) IN ()));
SELECT * FROM vt0 WHERE (((((((vt0.c0))<=((vt0.c0)))))<=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)%(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC, '鮈qz6';
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0))<=((vt0.c0)))))<=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)%(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC, '鮈qz6');
SELECT * FROM vt0 WHERE (((((((vt0.c0))<=((vt0.c0)))))<=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)%(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC, '鮈qz6';
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0))<=((vt0.c0)))))<=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)%(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC, '鮈qz6');
SELECT * FROM vt0 WHERE (((((((vt0.c0))<=((vt0.c0)))))<=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)%(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC, '鮈qz6';
SELECT ALL * FROM v0 INDEXED BY i13 WHERE (((((v0.c0 COLLATE RTRIM)OR(((v0.c0)IS NOT(v0.c0)))))OR(((v0.c0)%(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0 COLLATE RTRIM)OR(((v0.c0)IS NOT(v0.c0)))))OR(((v0.c0)%(v0.c0))))) IS TRUE)  as count FROM v0 INDEXED BY i13);
SELECT ALL * FROM v0 INDEXED BY i13 WHERE (((((v0.c0 COLLATE RTRIM)OR(((v0.c0)IS NOT(v0.c0)))))OR(((v0.c0)%(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0 COLLATE RTRIM)OR(((v0.c0)IS NOT(v0.c0)))))OR(((v0.c0)%(v0.c0))))) IS TRUE)  as count FROM v0 INDEXED BY i13);
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON (((((v0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c0)))) NOT BETWEEN ((((rt0.c0))<=((-1674498675)))) AND (rt0.c0 COLLATE BINARY)) WHERE ((+ ((~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((~ (v0.c0))))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (((((v0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c0)))) NOT BETWEEN ((((rt0.c0))<=((-1674498675)))) AND (rt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON (((((v0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c0)))) NOT BETWEEN ((((rt0.c0))<=((-1674498675)))) AND (rt0.c0 COLLATE BINARY)) WHERE ((+ ((~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((~ (v0.c0))))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (((((v0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c0)))) NOT BETWEEN ((((rt0.c0))<=((-1674498675)))) AND (rt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON (((((v0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c0)))) NOT BETWEEN ((((rt0.c0))<=((-1674498675)))) AND (rt0.c0 COLLATE BINARY)) WHERE ((+ ((~ (v0.c0)))));
SELECT ALL * FROM vt0, rt0, t1, v0 WHERE (0.6140581521095246) ORDER BY (((rt0.c2, v0.c0, v0.c0)) BETWEEN ((t1.c64 COLLATE BINARY, UPPER(t1.c64), ((t1.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) AND ((((rt0.c0)GLOB(t1.c2)), ((t1.c2)<(t1.c0)), LIKELIHOOD(DISTINCT t1.c2, 0.08716873435654471))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.6140581521095246) IS TRUE)  as count FROM vt0, rt0, t1, v0 ORDER BY (((rt0.c2, v0.c0, v0.c0)) BETWEEN ((t1.c64 COLLATE BINARY, UPPER(t1.c64), ((t1.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) AND ((((rt0.c0)GLOB(t1.c2)), ((t1.c2)<(t1.c0)), LIKELIHOOD(DISTINCT t1.c2, 0.08716873435654471))))  NULLS LAST);
SELECT ALL * FROM vt0, rt0, t1, v0 WHERE (0.6140581521095246) ORDER BY (((rt0.c2, v0.c0, v0.c0)) BETWEEN ((t1.c64 COLLATE BINARY, UPPER(t1.c64), ((t1.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) AND ((((rt0.c0)GLOB(t1.c2)), ((t1.c2)<(t1.c0)), LIKELIHOOD(DISTINCT t1.c2, 0.08716873435654471))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.6140581521095246) IS TRUE)  as count FROM vt0, rt0, t1, v0 ORDER BY (((rt0.c2, v0.c0, v0.c0)) BETWEEN ((t1.c64 COLLATE BINARY, UPPER(t1.c64), ((t1.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) AND ((((rt0.c0)GLOB(t1.c2)), ((t1.c2)<(t1.c0)), LIKELIHOOD(DISTINCT t1.c2, 0.08716873435654471))))  NULLS LAST);
SELECT ALL * FROM vt0, rt0, t1, v0 WHERE (0.6140581521095246) ORDER BY (((rt0.c2, v0.c0, v0.c0)) BETWEEN ((t1.c64 COLLATE BINARY, UPPER(t1.c64), ((t1.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) AND ((((rt0.c0)GLOB(t1.c2)), ((t1.c2)<(t1.c0)), LIKELIHOOD(DISTINCT t1.c2, 0.08716873435654471))))  NULLS LAST;
SELECT ALL * FROM t1 NOT INDEXED WHERE (((((t1.c64)IS NOT(t1.c0)))/(((((t1.c0)AND(t1.c0)))OR('2042200440')))));
SELECT SUM(count) FROM (SELECT ((((((t1.c64)IS NOT(t1.c0)))/(((((t1.c0)AND(t1.c0)))OR('2042200440'))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 NOT INDEXED WHERE (((((t1.c64)IS NOT(t1.c0)))/(((((t1.c0)AND(t1.c0)))OR('2042200440')))));
SELECT SUM(count) FROM (SELECT ((((((t1.c64)IS NOT(t1.c0)))/(((((t1.c0)AND(t1.c0)))OR('2042200440'))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 NOT INDEXED WHERE (((((t1.c64)IS NOT(t1.c0)))/(((((t1.c0)AND(t1.c0)))OR('2042200440')))));
SELECT ALL COUNT(*) FROM vt0 WHERE (TYPEOF(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (TYPEOF(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (TYPEOF(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))));
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((0.04141173892596817 IN (rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((0.04141173892596817 IN (rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((0.04141173892596817 IN (rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((0.04141173892596817 IN (rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((0.04141173892596817 IN (rt0.c2))) ISNULL));
SELECT ALL * FROM vt0, t1, rt0, v0 WHERE (0.30525987211570427);
SELECT SUM(count) FROM (SELECT ALL ((0.30525987211570427) IS TRUE)  as count FROM vt0, t1, rt0, v0);
SELECT ALL * FROM vt0, t1, rt0, v0 WHERE (0.30525987211570427);
SELECT SUM(count) FROM (SELECT ALL ((0.30525987211570427) IS TRUE)  as count FROM vt0, t1, rt0, v0);
SELECT ALL * FROM vt0, t1, rt0, v0 WHERE (0.30525987211570427);
SELECT * FROM t1 INNER JOIN v0 ON v0.c0 WHERE (CASE WHEN CASE t1.c2  WHEN t1.c0 THEN v0.c0 WHEN '-475675681' THEN v0.c0 WHEN v0.c0 THEN t1.c2 ELSE NULL END THEN CAST(t1.c2 AS BLOB) END) ORDER BY CAST(((((t1.c0)OR(v0.c0)))OR(v0.c0)) AS NUMERIC) DESC  NULLS FIRST, ((((v0.c0)+(t1.c2)))&((t1.c2 IN ('189056407'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE t1.c2  WHEN t1.c0 THEN v0.c0 WHEN '-475675681' THEN v0.c0 WHEN v0.c0 THEN t1.c2 ELSE NULL END THEN CAST(t1.c2 AS BLOB) END) IS TRUE)  as count FROM t1 INNER JOIN v0 ON v0.c0 ORDER BY CAST(((((t1.c0)OR(v0.c0)))OR(v0.c0)) AS NUMERIC) DESC  NULLS FIRST, ((((v0.c0)+(t1.c2)))&((t1.c2 IN ('189056407'))))  NULLS FIRST);
SELECT * FROM t1 INNER JOIN v0 ON v0.c0 WHERE (CASE WHEN CASE t1.c2  WHEN t1.c0 THEN v0.c0 WHEN '-475675681' THEN v0.c0 WHEN v0.c0 THEN t1.c2 ELSE NULL END THEN CAST(t1.c2 AS BLOB) END) ORDER BY CAST(((((t1.c0)OR(v0.c0)))OR(v0.c0)) AS NUMERIC) DESC  NULLS FIRST, ((((v0.c0)+(t1.c2)))&((t1.c2 IN ('189056407'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE t1.c2  WHEN t1.c0 THEN v0.c0 WHEN '-475675681' THEN v0.c0 WHEN v0.c0 THEN t1.c2 ELSE NULL END THEN CAST(t1.c2 AS BLOB) END) IS TRUE)  as count FROM t1 INNER JOIN v0 ON v0.c0 ORDER BY CAST(((((t1.c0)OR(v0.c0)))OR(v0.c0)) AS NUMERIC) DESC  NULLS FIRST, ((((v0.c0)+(t1.c2)))&((t1.c2 IN ('189056407'))))  NULLS FIRST);
SELECT * FROM t1 INNER JOIN v0 ON v0.c0 WHERE (CASE WHEN CASE t1.c2  WHEN t1.c0 THEN v0.c0 WHEN '-475675681' THEN v0.c0 WHEN v0.c0 THEN t1.c2 ELSE NULL END THEN CAST(t1.c2 AS BLOB) END) ORDER BY CAST(((((t1.c0)OR(v0.c0)))OR(v0.c0)) AS NUMERIC) DESC  NULLS FIRST, ((((v0.c0)+(t1.c2)))&((t1.c2 IN ('189056407'))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE (SQLITE_VERSION());
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0 COLLATE BINARY);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY ((((v0.c0 IN ()), ((v0.c0) NOT BETWEEN (-1122843722) AND (v0.c0)), ((v0.c0)<>(v0.c0))))<(((((('-775393557')AND(v0.c0)))AND(v0.c0)), CAST(v0.c0 AS BLOB), v0.c0))) DESC  NULLS FIRST, ''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0 IN ()), ((v0.c0) NOT BETWEEN (-1122843722) AND (v0.c0)), ((v0.c0)<>(v0.c0))))<(((((('-775393557')AND(v0.c0)))AND(v0.c0)), CAST(v0.c0 AS BLOB), v0.c0))) DESC  NULLS FIRST, ''  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY ((((v0.c0 IN ()), ((v0.c0) NOT BETWEEN (-1122843722) AND (v0.c0)), ((v0.c0)<>(v0.c0))))<(((((('-775393557')AND(v0.c0)))AND(v0.c0)), CAST(v0.c0 AS BLOB), v0.c0))) DESC  NULLS FIRST, ''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0 IN ()), ((v0.c0) NOT BETWEEN (-1122843722) AND (v0.c0)), ((v0.c0)<>(v0.c0))))<(((((('-775393557')AND(v0.c0)))AND(v0.c0)), CAST(v0.c0 AS BLOB), v0.c0))) DESC  NULLS FIRST, ''  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY ((((v0.c0 IN ()), ((v0.c0) NOT BETWEEN (-1122843722) AND (v0.c0)), ((v0.c0)<>(v0.c0))))<(((((('-775393557')AND(v0.c0)))AND(v0.c0)), CAST(v0.c0 AS BLOB), v0.c0))) DESC  NULLS FIRST, ''  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t1 WHERE ((((t1.c64)) NOT BETWEEN (((t1.c0 IN ()))) AND (((((NULL))<=((t1.c64)))))));
SELECT SUM(count) FROM (SELECT (((((t1.c64)) NOT BETWEEN (((t1.c0 IN ()))) AND (((((NULL))<=((t1.c64))))))) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE ((((t1.c64)) NOT BETWEEN (((t1.c0 IN ()))) AND (((((NULL))<=((t1.c64)))))));
SELECT SUM(count) FROM (SELECT (((((t1.c64)) NOT BETWEEN (((t1.c0 IN ()))) AND (((((NULL))<=((t1.c64))))))) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE ((((t1.c64)) NOT BETWEEN (((t1.c0 IN ()))) AND (((((NULL))<=((t1.c64)))))));
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN v0 ON (((+ (t1.c0)))>=(json_extract(rt0.c0, rt0.c0))) INNER JOIN t1 ON (- (CAST(t1.c0 AS BLOB))) WHERE ((CASE rt0.c2  WHEN rt0.c0 THEN t1.c0 ELSE rt0.c0 END IN (rt0.c1, t1.c2))) ORDER BY UPPER(DISTINCT t1.c2 COLLATE NOCASE)  NULLS FIRST, 0.5377393852070685 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE rt0.c2  WHEN rt0.c0 THEN t1.c0 ELSE rt0.c0 END IN (rt0.c1, t1.c2))) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN v0 ON (((+ (t1.c0)))>=(json_extract(rt0.c0, rt0.c0))) INNER JOIN t1 ON (- (CAST(t1.c0 AS BLOB))) ORDER BY UPPER(DISTINCT t1.c2 COLLATE NOCASE)  NULLS FIRST, 0.5377393852070685 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN v0 ON (((+ (t1.c0)))>=(json_extract(rt0.c0, rt0.c0))) INNER JOIN t1 ON (- (CAST(t1.c0 AS BLOB))) WHERE ((CASE rt0.c2  WHEN rt0.c0 THEN t1.c0 ELSE rt0.c0 END IN (rt0.c1, t1.c2))) ORDER BY UPPER(DISTINCT t1.c2 COLLATE NOCASE)  NULLS FIRST, 0.5377393852070685 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE rt0.c2  WHEN rt0.c0 THEN t1.c0 ELSE rt0.c0 END IN (rt0.c1, t1.c2))) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN v0 ON (((+ (t1.c0)))>=(json_extract(rt0.c0, rt0.c0))) INNER JOIN t1 ON (- (CAST(t1.c0 AS BLOB))) ORDER BY UPPER(DISTINCT t1.c2 COLLATE NOCASE)  NULLS FIRST, 0.5377393852070685 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN v0 ON (((+ (t1.c0)))>=(json_extract(rt0.c0, rt0.c0))) INNER JOIN t1 ON (- (CAST(t1.c0 AS BLOB))) WHERE ((CASE rt0.c2  WHEN rt0.c0 THEN t1.c0 ELSE rt0.c0 END IN (rt0.c1, t1.c2))) ORDER BY UPPER(DISTINCT t1.c2 COLLATE NOCASE)  NULLS FIRST, 0.5377393852070685 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t1, v0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, t1, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, t1, v0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, t1, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, t1, v0, vt0 WHERE (x'');
SELECT ALL * FROM v0, vt0, t1 WHERE (((((NULL) BETWEEN (v0.c0) AND (vt0.c0))) NOT BETWEEN ((v0.c0 IN (t1.c2))) AND (t1.c2 COLLATE BINARY))) ORDER BY (CASE vt0.c0  WHEN t1.c64 THEN v0.c0 WHEN vt0.c0 THEN t1.c64 WHEN t1.c0 THEN v0.c0 ELSE t1.c2 END IN ()) DESC, CAST('' AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) BETWEEN (v0.c0) AND (vt0.c0))) NOT BETWEEN ((v0.c0 IN (t1.c2))) AND (t1.c2 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt0, t1 ORDER BY (CASE vt0.c0  WHEN t1.c64 THEN v0.c0 WHEN vt0.c0 THEN t1.c64 WHEN t1.c0 THEN v0.c0 ELSE t1.c2 END IN ()) DESC, CAST('' AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL * FROM v0, vt0, t1 WHERE (((((NULL) BETWEEN (v0.c0) AND (vt0.c0))) NOT BETWEEN ((v0.c0 IN (t1.c2))) AND (t1.c2 COLLATE BINARY))) ORDER BY (CASE vt0.c0  WHEN t1.c64 THEN v0.c0 WHEN vt0.c0 THEN t1.c64 WHEN t1.c0 THEN v0.c0 ELSE t1.c2 END IN ()) DESC, CAST('' AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) BETWEEN (v0.c0) AND (vt0.c0))) NOT BETWEEN ((v0.c0 IN (t1.c2))) AND (t1.c2 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt0, t1 ORDER BY (CASE vt0.c0  WHEN t1.c64 THEN v0.c0 WHEN vt0.c0 THEN t1.c64 WHEN t1.c0 THEN v0.c0 ELSE t1.c2 END IN ()) DESC, CAST('' AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL * FROM v0, vt0, t1 WHERE (((((NULL) BETWEEN (v0.c0) AND (vt0.c0))) NOT BETWEEN ((v0.c0 IN (t1.c2))) AND (t1.c2 COLLATE BINARY))) ORDER BY (CASE vt0.c0  WHEN t1.c64 THEN v0.c0 WHEN vt0.c0 THEN t1.c64 WHEN t1.c0 THEN v0.c0 ELSE t1.c2 END IN ()) DESC, CAST('' AS NUMERIC) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN t1 ON CASE ((NULL)<=(rt0.c2))  WHEN t1.c0 THEN (- (t1.c64)) ELSE CASE t1.c0  WHEN rt0.c0 THEN vt0.c0 END END FULL OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND (((((rt0.c1, rt0.c2, t1.c2))>=((t1.c2, t1.c64, t1.c0)))))) FULL OUTER JOIN vt0 ON (((rt0.c2, t1.c2, x'')) BETWEEN ((0.3022197857290564, CASE WHEN rt0.c2 THEN vt0.c0 END, rt0.c2)) AND ((ABS('-820536440'), ((v0.c0) NOT BETWEEN (rt0.c2) AND (t1.c64)), (((rt0.c1)) BETWEEN ((t1.c0)) AND ((rt0.c0)))))) WHERE (LOWER(((t1.c0)GLOB(0.09027969769112887))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((t1.c0)GLOB(0.09027969769112887)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t1 ON CASE ((NULL)<=(rt0.c2))  WHEN t1.c0 THEN (- (t1.c64)) ELSE CASE t1.c0  WHEN rt0.c0 THEN vt0.c0 END END FULL OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND (((((rt0.c1, rt0.c2, t1.c2))>=((t1.c2, t1.c64, t1.c0)))))) FULL OUTER JOIN vt0 ON (((rt0.c2, t1.c2, x'')) BETWEEN ((0.3022197857290564, CASE WHEN rt0.c2 THEN vt0.c0 END, rt0.c2)) AND ((ABS('-820536440'), ((v0.c0) NOT BETWEEN (rt0.c2) AND (t1.c64)), (((rt0.c1)) BETWEEN ((t1.c0)) AND ((rt0.c0)))))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN t1 ON CASE ((NULL)<=(rt0.c2))  WHEN t1.c0 THEN (- (t1.c64)) ELSE CASE t1.c0  WHEN rt0.c0 THEN vt0.c0 END END FULL OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND (((((rt0.c1, rt0.c2, t1.c2))>=((t1.c2, t1.c64, t1.c0)))))) FULL OUTER JOIN vt0 ON (((rt0.c2, t1.c2, x'')) BETWEEN ((0.3022197857290564, CASE WHEN rt0.c2 THEN vt0.c0 END, rt0.c2)) AND ((ABS('-820536440'), ((v0.c0) NOT BETWEEN (rt0.c2) AND (t1.c64)), (((rt0.c1)) BETWEEN ((t1.c0)) AND ((rt0.c0)))))) WHERE (LOWER(((t1.c0)GLOB(0.09027969769112887))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((t1.c0)GLOB(0.09027969769112887)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t1 ON CASE ((NULL)<=(rt0.c2))  WHEN t1.c0 THEN (- (t1.c64)) ELSE CASE t1.c0  WHEN rt0.c0 THEN vt0.c0 END END FULL OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND (((((rt0.c1, rt0.c2, t1.c2))>=((t1.c2, t1.c64, t1.c0)))))) FULL OUTER JOIN vt0 ON (((rt0.c2, t1.c2, x'')) BETWEEN ((0.3022197857290564, CASE WHEN rt0.c2 THEN vt0.c0 END, rt0.c2)) AND ((ABS('-820536440'), ((v0.c0) NOT BETWEEN (rt0.c2) AND (t1.c64)), (((rt0.c1)) BETWEEN ((t1.c0)) AND ((rt0.c0)))))));
SELECT * FROM vt0, t1 WHERE (((((vt0.c0)-(t1.c64)))+(CHAR(t1.c2, vt0.c0, vt0.c0)))) ORDER BY -236096014  NULLS LAST, (+ (((x'e026')&(t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)-(t1.c64)))+(CHAR(t1.c2, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0, t1 ORDER BY -236096014  NULLS LAST, (+ (((x'e026')&(t1.c0)))));
SELECT * FROM vt0, t1 WHERE (((((vt0.c0)-(t1.c64)))+(CHAR(t1.c2, vt0.c0, vt0.c0)))) ORDER BY -236096014  NULLS LAST, (+ (((x'e026')&(t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)-(t1.c64)))+(CHAR(t1.c2, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0, t1 ORDER BY -236096014  NULLS LAST, (+ (((x'e026')&(t1.c0)))));
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON (((NULL IN (rt0.c1))) ISNULL) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (((NULL IN (rt0.c1))) ISNULL));
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON (((NULL IN (rt0.c1))) ISNULL) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (((NULL IN (rt0.c1))) ISNULL));
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON (((NULL IN (rt0.c1))) ISNULL) WHERE (NULL);
SELECT * FROM t1 WHERE (((((((((((t1.c2)&(t1.c64)))AND(CAST(t1.c64 AS NUMERIC))))AND((t1.c0 IN ()))))AND(CASE t1.c64  WHEN t1.c0 THEN NULL WHEN t1.c2 THEN '0.2515527359115646' WHEN t1.c0 THEN t1.c2 END)))OR(CAST(t1.c64 AS TEXT)))) ORDER BY ((t1.c2 COLLATE NOCASE)*((- (NULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((t1.c2)&(t1.c64)))AND(CAST(t1.c64 AS NUMERIC))))AND((t1.c0 IN ()))))AND(CASE t1.c64  WHEN t1.c0 THEN NULL WHEN t1.c2 THEN '0.2515527359115646' WHEN t1.c0 THEN t1.c2 END)))OR(CAST(t1.c64 AS TEXT)))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c2 COLLATE NOCASE)*((- (NULL))))  NULLS FIRST);
SELECT * FROM t1 WHERE (((((((((((t1.c2)&(t1.c64)))AND(CAST(t1.c64 AS NUMERIC))))AND((t1.c0 IN ()))))AND(CASE t1.c64  WHEN t1.c0 THEN NULL WHEN t1.c2 THEN '0.2515527359115646' WHEN t1.c0 THEN t1.c2 END)))OR(CAST(t1.c64 AS TEXT)))) ORDER BY ((t1.c2 COLLATE NOCASE)*((- (NULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((t1.c2)&(t1.c64)))AND(CAST(t1.c64 AS NUMERIC))))AND((t1.c0 IN ()))))AND(CASE t1.c64  WHEN t1.c0 THEN NULL WHEN t1.c2 THEN '0.2515527359115646' WHEN t1.c0 THEN t1.c2 END)))OR(CAST(t1.c64 AS TEXT)))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c2 COLLATE NOCASE)*((- (NULL))))  NULLS FIRST);
SELECT * FROM t1 WHERE (((((((((((t1.c2)&(t1.c64)))AND(CAST(t1.c64 AS NUMERIC))))AND((t1.c0 IN ()))))AND(CASE t1.c64  WHEN t1.c0 THEN NULL WHEN t1.c2 THEN '0.2515527359115646' WHEN t1.c0 THEN t1.c2 END)))OR(CAST(t1.c64 AS TEXT)))) ORDER BY ((t1.c2 COLLATE NOCASE)*((- (NULL))))  NULLS FIRST;
SELECT COUNT(*) FROM t1, v0, vt0 WHERE (((((((vt0.c0)AND(t1.c64)))OR(t1.c0)))+((- (v0.c0))))) ORDER BY ((CHANGES())+((t1.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(t1.c64)))OR(t1.c0)))+((- (v0.c0))))) IS TRUE)  as count FROM t1 NOT INDEXED, v0, vt0 ORDER BY ((CHANGES())+((t1.c0 IN ()))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1, v0, vt0 WHERE (((((((vt0.c0)AND(t1.c64)))OR(t1.c0)))+((- (v0.c0))))) ORDER BY ((CHANGES())+((t1.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(t1.c64)))OR(t1.c0)))+((- (v0.c0))))) IS TRUE)  as count FROM t1 NOT INDEXED, v0, vt0 ORDER BY ((CHANGES())+((t1.c0 IN ()))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1, v0, vt0 WHERE (((((((vt0.c0)AND(t1.c64)))OR(t1.c0)))+((- (v0.c0))))) ORDER BY ((CHANGES())+((t1.c0 IN ()))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((CAST(vt0.c0 AS TEXT))%(((rt0.c0) IS FALSE)))) ORDER BY CASE (~ (v0.c0))  WHEN ((v0.c0)IS(rt0.c1)) THEN (((rt0.c0))>=((rt0.c2))) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT))%(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CASE (~ (v0.c0))  WHEN ((v0.c0)IS(rt0.c1)) THEN (((rt0.c0))>=((rt0.c2))) END ASC);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((CAST(vt0.c0 AS TEXT))%(((rt0.c0) IS FALSE)))) ORDER BY CASE (~ (v0.c0))  WHEN ((v0.c0)IS(rt0.c1)) THEN (((rt0.c0))>=((rt0.c2))) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT))%(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CASE (~ (v0.c0))  WHEN ((v0.c0)IS(rt0.c1)) THEN (((rt0.c0))>=((rt0.c2))) END ASC);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((CAST(vt0.c0 AS TEXT))%(((rt0.c0) IS FALSE)))) ORDER BY CASE (~ (v0.c0))  WHEN ((v0.c0)IS(rt0.c1)) THEN (((rt0.c0))>=((rt0.c2))) END ASC;
SELECT ALL * FROM v0, rt0, vt0 INNER JOIN t1 ON '798974707' WHERE (CAST(rt0.c2 AS NUMERIC)) ORDER BY (((((- (vt0.c0)))OR(rt0.c0 COLLATE NOCASE)))AND(((t1.c2) NOT BETWEEN (v0.c0) AND (t1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS NUMERIC)) IS TRUE)  as count FROM v0, rt0, vt0 INNER JOIN t1 ON '798974707' ORDER BY (((((- (vt0.c0)))OR(rt0.c0 COLLATE NOCASE)))AND(((t1.c2) NOT BETWEEN (v0.c0) AND (t1.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM v0, rt0, vt0 INNER JOIN t1 ON '798974707' WHERE (CAST(rt0.c2 AS NUMERIC)) ORDER BY (((((- (vt0.c0)))OR(rt0.c0 COLLATE NOCASE)))AND(((t1.c2) NOT BETWEEN (v0.c0) AND (t1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS NUMERIC)) IS TRUE)  as count FROM v0, rt0, vt0 INNER JOIN t1 ON '798974707' ORDER BY (((((- (vt0.c0)))OR(rt0.c0 COLLATE NOCASE)))AND(((t1.c2) NOT BETWEEN (v0.c0) AND (t1.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM v0, rt0, vt0 INNER JOIN t1 ON '798974707' WHERE (CAST(rt0.c2 AS NUMERIC)) ORDER BY (((((- (vt0.c0)))OR(rt0.c0 COLLATE NOCASE)))AND(((t1.c2) NOT BETWEEN (v0.c0) AND (t1.c0)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t1, v0 WHERE (t1.c2) ORDER BY CASE ((t1.c0) BETWEEN ('-1382025560') AND (t1.c0))  WHEN CASE WHEN t1.c64 THEN v0.c0 ELSE v0.c0 END THEN x'1ffa' ELSE ((t1.c64) BETWEEN (v0.c0) AND (v0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c2) IS TRUE)  as count FROM t1, v0 ORDER BY CASE ((t1.c0) BETWEEN ('-1382025560') AND (t1.c0))  WHEN CASE WHEN t1.c64 THEN v0.c0 ELSE v0.c0 END THEN x'1ffa' ELSE ((t1.c64) BETWEEN (v0.c0) AND (v0.c0)) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1, v0 WHERE (t1.c2) ORDER BY CASE ((t1.c0) BETWEEN ('-1382025560') AND (t1.c0))  WHEN CASE WHEN t1.c64 THEN v0.c0 ELSE v0.c0 END THEN x'1ffa' ELSE ((t1.c64) BETWEEN (v0.c0) AND (v0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c2) IS TRUE)  as count FROM t1, v0 ORDER BY CASE ((t1.c0) BETWEEN ('-1382025560') AND (t1.c0))  WHEN CASE WHEN t1.c64 THEN v0.c0 ELSE v0.c0 END THEN x'1ffa' ELSE ((t1.c64) BETWEEN (v0.c0) AND (v0.c0)) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1, v0 WHERE (t1.c2) ORDER BY CASE ((t1.c0) BETWEEN ('-1382025560') AND (t1.c0))  WHEN CASE WHEN t1.c64 THEN v0.c0 ELSE v0.c0 END THEN x'1ffa' ELSE ((t1.c64) BETWEEN (v0.c0) AND (v0.c0)) END DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0, t1 LEFT OUTER JOIN rt0 ON ((((v0.c0)AND(v0.c0)))&((((v0.c0))=((v0.c0))))) WHERE ((NOT (((t1.c0)IS NOT(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t1.c0)IS NOT(t1.c0))))) IS TRUE)  as count FROM v0, t1 LEFT OUTER JOIN rt0 ON ((((v0.c0)AND(v0.c0)))&((((v0.c0))=((v0.c0))))));
SELECT COUNT(*) FROM v0, t1 LEFT OUTER JOIN rt0 ON ((((v0.c0)AND(v0.c0)))&((((v0.c0))=((v0.c0))))) WHERE ((NOT (((t1.c0)IS NOT(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t1.c0)IS NOT(t1.c0))))) IS TRUE)  as count FROM v0, t1 LEFT OUTER JOIN rt0 ON ((((v0.c0)AND(v0.c0)))&((((v0.c0))=((v0.c0))))));
SELECT COUNT(*) FROM v0, t1 LEFT OUTER JOIN rt0 ON ((((v0.c0)AND(v0.c0)))&((((v0.c0))=((v0.c0))))) WHERE ((NOT (((t1.c0)IS NOT(t1.c0)))));
SELECT * FROM t1, rt0, vt0 WHERE ((((((((t1.c2)OR(rt0.c0)))AND(t1.c0))))<=((((0.7107381253881815) NOT BETWEEN (t1.c0) AND (t1.c64))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((t1.c2)OR(rt0.c0)))AND(t1.c0))))<=((((0.7107381253881815) NOT BETWEEN (t1.c0) AND (t1.c64)))))) IS TRUE)  as count FROM t1, rt0, vt0);
SELECT * FROM t1, rt0, vt0 WHERE ((((((((t1.c2)OR(rt0.c0)))AND(t1.c0))))<=((((0.7107381253881815) NOT BETWEEN (t1.c0) AND (t1.c64))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((t1.c2)OR(rt0.c0)))AND(t1.c0))))<=((((0.7107381253881815) NOT BETWEEN (t1.c0) AND (t1.c64)))))) IS TRUE)  as count FROM t1, rt0, vt0);
SELECT * FROM t1, rt0, vt0 WHERE ((((((((t1.c2)OR(rt0.c0)))AND(t1.c0))))<=((((0.7107381253881815) NOT BETWEEN (t1.c0) AND (t1.c64))))));
SELECT COUNT(*) FROM v0, t1, vt0, rt0 WHERE (((((CAST(t1.c0 AS TEXT))AND((~ (rt0.c1)))))OR(((t1.c2) BETWEEN (rt0.c1) AND (vt0.c0))))) ORDER BY rt0.c1 COLLATE BINARY COLLATE BINARY ASC, CAST(t1.c64 AS TEXT) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t1.c0 AS TEXT))AND((~ (rt0.c1)))))OR(((t1.c2) BETWEEN (rt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM v0, t1, vt0, rt0 ORDER BY rt0.c1 COLLATE BINARY COLLATE BINARY ASC, CAST(t1.c64 AS TEXT) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM v0, t1, vt0, rt0 WHERE (((((CAST(t1.c0 AS TEXT))AND((~ (rt0.c1)))))OR(((t1.c2) BETWEEN (rt0.c1) AND (vt0.c0))))) ORDER BY rt0.c1 COLLATE BINARY COLLATE BINARY ASC, CAST(t1.c64 AS TEXT) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t1.c0 AS TEXT))AND((~ (rt0.c1)))))OR(((t1.c2) BETWEEN (rt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM v0, t1, vt0, rt0 ORDER BY rt0.c1 COLLATE BINARY COLLATE BINARY ASC, CAST(t1.c64 AS TEXT) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM v0, t1, vt0, rt0 WHERE (((((CAST(t1.c0 AS TEXT))AND((~ (rt0.c1)))))OR(((t1.c2) BETWEEN (rt0.c1) AND (vt0.c0))))) ORDER BY rt0.c1 COLLATE BINARY COLLATE BINARY ASC, CAST(t1.c64 AS TEXT) COLLATE RTRIM  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM vt0, v0 CROSS JOIN t1 ON (LENGTH(rt0.c1) IN (CAST(t1.c0 AS INTEGER))) FULL OUTER JOIN rt0 ON '' WHERE ((((NOT (t1.c0)))-(TYPEOF(t1.c2))));
SELECT SUM(count) FROM (SELECT (((((NOT (t1.c0)))-(TYPEOF(t1.c2)))) IS TRUE)  as count FROM vt0, v0 CROSS JOIN t1 ON (LENGTH(rt0.c1) IN (CAST(t1.c0 AS INTEGER))) FULL OUTER JOIN rt0 ON '');
SELECT ALL COUNT(*) FROM vt0, v0 CROSS JOIN t1 ON (LENGTH(rt0.c1) IN (CAST(t1.c0 AS INTEGER))) FULL OUTER JOIN rt0 ON '' WHERE ((((NOT (t1.c0)))-(TYPEOF(t1.c2))));
SELECT SUM(count) FROM (SELECT (((((NOT (t1.c0)))-(TYPEOF(t1.c2)))) IS TRUE)  as count FROM vt0, v0 CROSS JOIN t1 ON (LENGTH(rt0.c1) IN (CAST(t1.c0 AS INTEGER))) FULL OUTER JOIN rt0 ON '');
SELECT ALL COUNT(*) FROM v0, t1 WHERE ((~ ((((t1.c64))!=((t1.c64))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((t1.c64))<>((t1.c64)))))) IS TRUE)  as count FROM v0, t1);
SELECT ALL COUNT(*) FROM v0, t1 WHERE ((~ ((((t1.c64))!=((t1.c64))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((t1.c64))<>((t1.c64)))))) IS TRUE)  as count FROM v0, t1);
SELECT ALL COUNT(*) FROM v0, t1 WHERE ((~ ((((t1.c64))!=((t1.c64))))));
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))AND(0xffffffffe3b08f06)))OR((~ (rt0.c0)))))AND(TYPEOF(DISTINCT '1445458598')))) ORDER BY (((rt0.c0)) BETWEEN ((NULL)) AND ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2))))), (((((rt0.c0))=((rt0.c0)))) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))AND(0Xffffffffe3b08f06)))OR((~ (rt0.c0)))))AND(TYPEOF(DISTINCT '1445458598')))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) BETWEEN ((NULL)) AND ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2))))), (((((rt0.c0))==((rt0.c0)))) NOTNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))AND(0xffffffffe3b08f06)))OR((~ (rt0.c0)))))AND(TYPEOF(DISTINCT '1445458598')))) ORDER BY (((rt0.c0)) BETWEEN ((NULL)) AND ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2))))), (((((rt0.c0))=((rt0.c0)))) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))AND(0Xffffffffe3b08f06)))OR((~ (rt0.c0)))))AND(TYPEOF(DISTINCT '1445458598')))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) BETWEEN ((NULL)) AND ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2))))), (((((rt0.c0))==((rt0.c0)))) NOTNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))AND(0xffffffffe3b08f06)))OR((~ (rt0.c0)))))AND(TYPEOF(DISTINCT '1445458598')))) ORDER BY (((rt0.c0)) BETWEEN ((NULL)) AND ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2))))), (((((rt0.c0))=((rt0.c0)))) NOTNULL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 FULL OUTER JOIN v0 ON (((rt0.c1, vt0.c0, vt0.c0)) BETWEEN ((((rt0.c0)>=(rt0.c2)), rt0.c1 COLLATE BINARY, (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))))) AND ((((v0.c0) IS FALSE), CASE rt0.c2  WHEN '-506360295' THEN rt0.c1 ELSE rt0.c2 END, x''))) WHERE (CAST((~ (v0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((~ (v0.c0)) AS REAL)) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN v0 ON (((rt0.c1, vt0.c0, vt0.c0)) BETWEEN ((((rt0.c0)>=(rt0.c2)), rt0.c1 COLLATE BINARY, (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))))) AND ((((v0.c0) IS FALSE), CASE rt0.c2  WHEN '-506360295' THEN rt0.c1 ELSE rt0.c2 END, x''))));
SELECT ALL COUNT(*) FROM rt0, vt0 FULL OUTER JOIN v0 ON (((rt0.c1, vt0.c0, vt0.c0)) BETWEEN ((((rt0.c0)>=(rt0.c2)), rt0.c1 COLLATE BINARY, (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))))) AND ((((v0.c0) IS FALSE), CASE rt0.c2  WHEN '-506360295' THEN rt0.c1 ELSE rt0.c2 END, x''))) WHERE (CAST((~ (v0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((~ (v0.c0)) AS REAL)) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN v0 ON (((rt0.c1, vt0.c0, vt0.c0)) BETWEEN ((((rt0.c0)>=(rt0.c2)), rt0.c1 COLLATE BINARY, (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))))) AND ((((v0.c0) IS FALSE), CASE rt0.c2  WHEN '-506360295' THEN rt0.c1 ELSE rt0.c2 END, x''))));
SELECT ALL COUNT(*) FROM rt0, vt0 FULL OUTER JOIN v0 ON (((rt0.c1, vt0.c0, vt0.c0)) BETWEEN ((((rt0.c0)>=(rt0.c2)), rt0.c1 COLLATE BINARY, (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))))) AND ((((v0.c0) IS FALSE), CASE rt0.c2  WHEN '-506360295' THEN rt0.c1 ELSE rt0.c2 END, x''))) WHERE (CAST((~ (v0.c0)) AS REAL));
SELECT ALL COUNT(*) FROM t1, v0, rt0 WHERE (LOWER((t1.c64 IN ())));
SELECT SUM(count) FROM (SELECT ((LOWER((t1.c64 IN ()))) IS TRUE)  as count FROM t1 NOT INDEXED, v0, rt0);
SELECT ALL COUNT(*) FROM t1, v0, rt0 WHERE (LOWER((t1.c64 IN ())));
SELECT SUM(count) FROM (SELECT ((LOWER((t1.c64 IN ()))) IS TRUE)  as count FROM t1 NOT INDEXED, v0, rt0);
SELECT ALL COUNT(*) FROM t1, v0, rt0 WHERE (LOWER((t1.c64 IN ())));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c2);
SELECT ALL * FROM t1 WHERE ((('1864179897')LIKE((t1.c0 IN (t1.c2))))) ORDER BY ((((t1.c64)) BETWEEN ((t1.c64)) AND ((t1.c2))) IN ()) DESC  NULLS LAST, (((((((((t1.c64 IN ()))AND(CASE t1.c0  WHEN t1.c0 THEN t1.c64 END)))AND(t1.c0)))AND(CASE WHEN t1.c64 THEN t1.c64 ELSE t1.c0 END)))AND((- (t1.c64)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((('1864179897')LIKE((t1.c0 IN (t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c64)) BETWEEN ((t1.c64)) AND ((t1.c2))) IN ()) DESC  NULLS LAST, (((((((((t1.c64 IN ()))AND(CASE t1.c0  WHEN t1.c0 THEN t1.c64 END)))AND(t1.c0)))AND(CASE WHEN t1.c64 THEN t1.c64 ELSE t1.c0 END)))AND((- (t1.c64)))) ASC);
SELECT ALL * FROM t1 WHERE ((('1864179897')LIKE((t1.c0 IN (t1.c2))))) ORDER BY ((((t1.c64)) BETWEEN ((t1.c64)) AND ((t1.c2))) IN ()) DESC  NULLS LAST, (((((((((t1.c64 IN ()))AND(CASE t1.c0  WHEN t1.c0 THEN t1.c64 END)))AND(t1.c0)))AND(CASE WHEN t1.c64 THEN t1.c64 ELSE t1.c0 END)))AND((- (t1.c64)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((('1864179897')LIKE((t1.c0 IN (t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c64)) BETWEEN ((t1.c64)) AND ((t1.c2))) IN ()) DESC  NULLS LAST, (((((((((t1.c64 IN ()))AND(CASE t1.c0  WHEN t1.c0 THEN t1.c64 END)))AND(t1.c0)))AND(CASE WHEN t1.c64 THEN t1.c64 ELSE t1.c0 END)))AND((- (t1.c64)))) ASC);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (x'03de0160' IN ()) LEFT OUTER JOIN t1 ON CASE (((rt0.c1, t1.c2, rt0.c1, t1.c0, rt0.c2))>((t1.c2, '0.7307840268283488', vt0.c0, rt0.c1, vt0.c0)))  WHEN (((rt0.c0))==((rt0.c2))) THEN GLOB(vt0.c0, t1.c64) ELSE (((rt0.c0))<>((NULL))) END INNER JOIN v0 ON CASE WHEN json_patch(v0.c0, 0.15945414728652318) THEN (v0.c0 IN (vt0.c0)) WHEN ((((t1.c0)AND(v0.c0)))AND(rt0.c0)) THEN ((vt0.c0)+(v0.c0)) WHEN (- (t1.c2)) THEN CASE WHEN t1.c0 THEN rt0.c0 END WHEN (((rt0.c2)) NOT BETWEEN ((t1.c64)) AND ((NULL))) THEN (('-1834693330')>>(rt0.c1)) WHEN CAST(rt0.c2 AS NUMERIC) THEN CASE t1.c2  WHEN rt0.c1 THEN rt0.c2 END ELSE CASE vt0.c0  WHEN t1.c64 THEN t1.c64 ELSE rt0.c1 END END WHERE (((CASE WHEN t1.c0 THEN rt0.c1 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t1.c0 THEN rt0.c1 END) NOT NULL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (x'03de0160' IN ()) LEFT OUTER JOIN t1 ON CASE (((rt0.c1, t1.c2, rt0.c1, t1.c0, rt0.c2))>((t1.c2, '0.7307840268283488', vt0.c0, rt0.c1, vt0.c0)))  WHEN (((rt0.c0))==((rt0.c2))) THEN GLOB(vt0.c0, t1.c64) ELSE (((rt0.c0))!=((NULL))) END INNER JOIN v0 ON CASE WHEN json_patch(v0.c0, 0.15945414728652318) THEN (v0.c0 IN (vt0.c0)) WHEN ((((t1.c0)AND(v0.c0)))AND(rt0.c0)) THEN ((vt0.c0)+(v0.c0)) WHEN (- (t1.c2)) THEN CASE WHEN t1.c0 THEN rt0.c0 END WHEN (((rt0.c2)) NOT BETWEEN ((t1.c64)) AND ((NULL))) THEN (('-1834693330')>>(rt0.c1)) WHEN CAST(rt0.c2 AS NUMERIC) THEN CASE t1.c2  WHEN rt0.c1 THEN rt0.c2 END ELSE CASE vt0.c0  WHEN t1.c64 THEN t1.c64 ELSE rt0.c1 END END);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (x'03de0160' IN ()) LEFT OUTER JOIN t1 ON CASE (((rt0.c1, t1.c2, rt0.c1, t1.c0, rt0.c2))>((t1.c2, '0.7307840268283488', vt0.c0, rt0.c1, vt0.c0)))  WHEN (((rt0.c0))==((rt0.c2))) THEN GLOB(vt0.c0, t1.c64) ELSE (((rt0.c0))<>((NULL))) END INNER JOIN v0 ON CASE WHEN json_patch(v0.c0, 0.15945414728652318) THEN (v0.c0 IN (vt0.c0)) WHEN ((((t1.c0)AND(v0.c0)))AND(rt0.c0)) THEN ((vt0.c0)+(v0.c0)) WHEN (- (t1.c2)) THEN CASE WHEN t1.c0 THEN rt0.c0 END WHEN (((rt0.c2)) NOT BETWEEN ((t1.c64)) AND ((NULL))) THEN (('-1834693330')>>(rt0.c1)) WHEN CAST(rt0.c2 AS NUMERIC) THEN CASE t1.c2  WHEN rt0.c1 THEN rt0.c2 END ELSE CASE vt0.c0  WHEN t1.c64 THEN t1.c64 ELSE rt0.c1 END END WHERE (((CASE WHEN t1.c0 THEN rt0.c1 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t1.c0 THEN rt0.c1 END) NOT NULL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (x'03de0160' IN ()) LEFT OUTER JOIN t1 ON CASE (((rt0.c1, t1.c2, rt0.c1, t1.c0, rt0.c2))>((t1.c2, '0.7307840268283488', vt0.c0, rt0.c1, vt0.c0)))  WHEN (((rt0.c0))==((rt0.c2))) THEN GLOB(vt0.c0, t1.c64) ELSE (((rt0.c0))!=((NULL))) END INNER JOIN v0 ON CASE WHEN json_patch(v0.c0, 0.15945414728652318) THEN (v0.c0 IN (vt0.c0)) WHEN ((((t1.c0)AND(v0.c0)))AND(rt0.c0)) THEN ((vt0.c0)+(v0.c0)) WHEN (- (t1.c2)) THEN CASE WHEN t1.c0 THEN rt0.c0 END WHEN (((rt0.c2)) NOT BETWEEN ((t1.c64)) AND ((NULL))) THEN (('-1834693330')>>(rt0.c1)) WHEN CAST(rt0.c2 AS NUMERIC) THEN CASE t1.c2  WHEN rt0.c1 THEN rt0.c2 END ELSE CASE vt0.c0  WHEN t1.c64 THEN t1.c64 ELSE rt0.c1 END END);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (x'03de0160' IN ()) LEFT OUTER JOIN t1 ON CASE (((rt0.c1, t1.c2, rt0.c1, t1.c0, rt0.c2))>((t1.c2, '0.7307840268283488', vt0.c0, rt0.c1, vt0.c0)))  WHEN (((rt0.c0))==((rt0.c2))) THEN GLOB(vt0.c0, t1.c64) ELSE (((rt0.c0))<>((NULL))) END INNER JOIN v0 ON CASE WHEN json_patch(v0.c0, 0.15945414728652318) THEN (v0.c0 IN (vt0.c0)) WHEN ((((t1.c0)AND(v0.c0)))AND(rt0.c0)) THEN ((vt0.c0)+(v0.c0)) WHEN (- (t1.c2)) THEN CASE WHEN t1.c0 THEN rt0.c0 END WHEN (((rt0.c2)) NOT BETWEEN ((t1.c64)) AND ((NULL))) THEN (('-1834693330')>>(rt0.c1)) WHEN CAST(rt0.c2 AS NUMERIC) THEN CASE t1.c2  WHEN rt0.c1 THEN rt0.c2 END ELSE CASE vt0.c0  WHEN t1.c64 THEN t1.c64 ELSE rt0.c1 END END WHERE (((CASE WHEN t1.c0 THEN rt0.c1 END) NOT NULL));
SELECT * FROM rt0 INDEXED BY i13, vt0 FULL OUTER JOIN t1 ON ((((rt0.c2) NOTNULL))>=('6h')) WHERE (CAST(((((vt0.c0)AND(rt0.c0)))AND(t1.c64)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c0)AND(rt0.c0)))AND(t1.c64)) AS TEXT)) IS TRUE)  as count FROM rt0 INDEXED BY i13, vt0 FULL OUTER JOIN t1 ON ((((rt0.c2) NOTNULL))>=('6h')));
SELECT * FROM rt0 INDEXED BY i13, vt0 FULL OUTER JOIN t1 ON ((((rt0.c2) NOTNULL))>=('6h')) WHERE (CAST(((((vt0.c0)AND(rt0.c0)))AND(t1.c64)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c0)AND(rt0.c0)))AND(t1.c64)) AS TEXT)) IS TRUE)  as count FROM rt0 INDEXED BY i13, vt0 FULL OUTER JOIN t1 ON ((((rt0.c2) NOTNULL))>=('6h')));
SELECT * FROM vt0, v0 WHERE (((((vt0.c0)<=(v0.c0)))OR(((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<=(v0.c0)))OR(((v0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((((vt0.c0)<=(v0.c0)))OR(((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<=(v0.c0)))OR(((v0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((((vt0.c0)<=(v0.c0)))OR(((v0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((TRIM(t1.c2, rt0.c2))&((~ (t1.c2)))) RIGHT OUTER JOIN t1 ON HEX(DISTINCT ((t1.c64) NOT BETWEEN (v0.c0) AND (vt0.c0))) CROSS JOIN rt0 ON (NOT ((~ (rt0.c0)))) WHERE ('0.4611267281793525') ORDER BY ((t1.c64)%(((((t1.c2)OR(t1.c64)))OR(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('0.4611267281793525') IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((TRIM(t1.c2, rt0.c2))&((~ (t1.c2)))) RIGHT OUTER JOIN t1 ON HEX(DISTINCT ((t1.c64) NOT BETWEEN (v0.c0) AND (vt0.c0))) CROSS JOIN rt0 ON (NOT ((~ (rt0.c0)))) ORDER BY ((t1.c64)%(((((t1.c2)OR(t1.c64)))OR(v0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((TRIM(t1.c2, rt0.c2))&((~ (t1.c2)))) RIGHT OUTER JOIN t1 ON HEX(DISTINCT ((t1.c64) NOT BETWEEN (v0.c0) AND (vt0.c0))) CROSS JOIN rt0 ON (NOT ((~ (rt0.c0)))) WHERE ('0.4611267281793525') ORDER BY ((t1.c64)%(((((t1.c2)OR(t1.c64)))OR(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('0.4611267281793525') IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((TRIM(t1.c2, rt0.c2))&((~ (t1.c2)))) RIGHT OUTER JOIN t1 ON HEX(DISTINCT ((t1.c64) NOT BETWEEN (v0.c0) AND (vt0.c0))) CROSS JOIN rt0 ON (NOT ((~ (rt0.c0)))) ORDER BY ((t1.c64)%(((((t1.c2)OR(t1.c64)))OR(v0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((((rt0.c0) IS TRUE))<(CASE WHEN rt0.c0 THEN rt0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS TRUE))<(CASE WHEN rt0.c0 THEN rt0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((((rt0.c0) IS TRUE))<(CASE WHEN rt0.c0 THEN rt0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS TRUE))<(CASE WHEN rt0.c0 THEN rt0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((((rt0.c0) IS TRUE))<(CASE WHEN rt0.c0 THEN rt0.c0 ELSE v0.c0 END)));
SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0)+(vt0.c0))))) ORDER BY CASE vt0.c0 COLLATE NOCASE  WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN ((vt0.c0)!=(vt0.c0)) THEN 0.840004695759864 WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0) ISNULL) ELSE ((vt0.c0)GLOB(vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0)+(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0 COLLATE NOCASE  WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN ((vt0.c0)<>(vt0.c0)) THEN 0.840004695759864 WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0) ISNULL) ELSE ((vt0.c0)GLOB(vt0.c0)) END ASC);
SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0)+(vt0.c0))))) ORDER BY CASE vt0.c0 COLLATE NOCASE  WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN ((vt0.c0)!=(vt0.c0)) THEN 0.840004695759864 WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0) ISNULL) ELSE ((vt0.c0)GLOB(vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0)+(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0 COLLATE NOCASE  WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN ((vt0.c0)<>(vt0.c0)) THEN 0.840004695759864 WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0) ISNULL) ELSE ((vt0.c0)GLOB(vt0.c0)) END ASC);
SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0)+(vt0.c0))))) ORDER BY CASE vt0.c0 COLLATE NOCASE  WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN ((vt0.c0)!=(vt0.c0)) THEN 0.840004695759864 WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0) ISNULL) ELSE ((vt0.c0)GLOB(vt0.c0)) END ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)GLOB(0.5874520941495908)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)GLOB(0.5874520941495908)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)GLOB(0.5874520941495908)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)GLOB(0.5874520941495908)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)GLOB(0.5874520941495908)) AS BLOB));
SELECT COUNT(*) FROM t1, v0, rt0 WHERE (((((((((((rt0.c2) IS FALSE))AND((t1.c2 IN ()))))OR(rt0.c0)))OR((((t1.c64)) BETWEEN ((t1.c0)) AND ((t1.c64))))))AND(CAST(t1.c0 AS TEXT)))) ORDER BY -1.334179514E9  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2) IS FALSE))AND((t1.c2 IN ()))))OR(rt0.c0)))OR((((t1.c64)) BETWEEN ((t1.c0)) AND ((t1.c64))))))AND(CAST(t1.c0 AS TEXT)))) IS TRUE)  as count FROM t1, v0, rt0 ORDER BY -1.334179514E9  NULLS FIRST);
SELECT COUNT(*) FROM t1, v0, rt0 WHERE (((((((((((rt0.c2) IS FALSE))AND((t1.c2 IN ()))))OR(rt0.c0)))OR((((t1.c64)) BETWEEN ((t1.c0)) AND ((t1.c64))))))AND(CAST(t1.c0 AS TEXT)))) ORDER BY -1.334179514E9  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2) IS FALSE))AND((t1.c2 IN ()))))OR(rt0.c0)))OR((((t1.c64)) BETWEEN ((t1.c0)) AND ((t1.c64))))))AND(CAST(t1.c0 AS TEXT)))) IS TRUE)  as count FROM t1, v0, rt0 ORDER BY -1.334179514E9  NULLS FIRST);
SELECT COUNT(*) FROM t1, v0, rt0 WHERE (((((((((((rt0.c2) IS FALSE))AND((t1.c2 IN ()))))OR(rt0.c0)))OR((((t1.c64)) BETWEEN ((t1.c0)) AND ((t1.c64))))))AND(CAST(t1.c0 AS TEXT)))) ORDER BY -1.334179514E9  NULLS FIRST;
SELECT COUNT(*) FROM t1, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1, rt0);
SELECT COUNT(*) FROM t1, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1, rt0);
SELECT COUNT(*) FROM t1, rt0 WHERE (x'');
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST((~ (v0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((~ (v0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST((~ (v0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((~ (v0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST((~ (v0.c0)) AS INTEGER));
SELECT COUNT(*) FROM v0, rt0, vt0, t1 WHERE (0Xffffffff9a4868ce);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffff9a4868ce) IS TRUE)  as count FROM v0, rt0, vt0, t1);
SELECT COUNT(*) FROM v0, rt0, vt0, t1 WHERE (0Xffffffff9a4868ce);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffff9a4868ce) IS TRUE)  as count FROM v0, rt0, vt0, t1);
SELECT COUNT(*) FROM v0, rt0, vt0, t1 WHERE (0Xffffffff9a4868ce);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (~ (((vt0.c0)OR(1.049563343E9)))) LEFT OUTER JOIN v0 ON (NOT (rt0.c0)) COLLATE BINARY WHERE (((((vt0.c0) NOT BETWEEN (x'') AND (v0.c0))) IS TRUE)) ORDER BY '+ccb?' ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (x'') AND (v0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (~ (((vt0.c0)OR(1.049563343E9)))) LEFT OUTER JOIN v0 ON (NOT (rt0.c0)) COLLATE BINARY ORDER BY '+ccb?' ASC);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (~ (((vt0.c0)OR(1.049563343E9)))) LEFT OUTER JOIN v0 ON (NOT (rt0.c0)) COLLATE BINARY WHERE (((((vt0.c0) NOT BETWEEN (x'') AND (v0.c0))) IS TRUE)) ORDER BY '+ccb?' ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (x'') AND (v0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (~ (((vt0.c0)OR(1.049563343E9)))) LEFT OUTER JOIN v0 ON (NOT (rt0.c0)) COLLATE BINARY ORDER BY '+ccb?' ASC);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (~ (((vt0.c0)OR(1.049563343E9)))) LEFT OUTER JOIN v0 ON (NOT (rt0.c0)) COLLATE BINARY WHERE (((((vt0.c0) NOT BETWEEN (x'') AND (v0.c0))) IS TRUE)) ORDER BY '+ccb?' ASC;
SELECT * FROM v0, t1, rt0 INNER JOIN vt0 ON ((NULL COLLATE NOCASE) IS FALSE) WHERE (CASE ((t1.c0) ISNULL)  WHEN CASE v0.c0  WHEN t1.c2 THEN t1.c64 END THEN ((rt0.c2)<=(rt0.c0)) END) ORDER BY 0.7048807282592366, ABS(DISTINCT rt0.c1) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c0) ISNULL)  WHEN CASE v0.c0  WHEN t1.c2 THEN t1.c64 END THEN ((rt0.c2)<=(rt0.c0)) END) IS TRUE)  as count FROM v0, t1, rt0 INNER JOIN vt0 ON ((NULL COLLATE NOCASE) IS FALSE) ORDER BY 0.7048807282592366, ABS(DISTINCT rt0.c1) COLLATE RTRIM);
SELECT * FROM v0, t1, rt0 INNER JOIN vt0 ON ((NULL COLLATE NOCASE) IS FALSE) WHERE (CASE ((t1.c0) ISNULL)  WHEN CASE v0.c0  WHEN t1.c2 THEN t1.c64 END THEN ((rt0.c2)<=(rt0.c0)) END) ORDER BY 0.7048807282592366, ABS(DISTINCT rt0.c1) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c0) ISNULL)  WHEN CASE v0.c0  WHEN t1.c2 THEN t1.c64 END THEN ((rt0.c2)<=(rt0.c0)) END) IS TRUE)  as count FROM v0, t1, rt0 INNER JOIN vt0 ON ((NULL COLLATE NOCASE) IS FALSE) ORDER BY 0.7048807282592366, ABS(DISTINCT rt0.c1) COLLATE RTRIM);
SELECT * FROM v0, t1, rt0 INNER JOIN vt0 ON ((NULL COLLATE NOCASE) IS FALSE) WHERE (CASE ((t1.c0) ISNULL)  WHEN CASE v0.c0  WHEN t1.c2 THEN t1.c64 END THEN ((rt0.c2)<=(rt0.c0)) END) ORDER BY 0.7048807282592366, ABS(DISTINCT rt0.c1) COLLATE RTRIM;
SELECT ALL * FROM vt0, v0, t1, rt0 WHERE (((t1.c64 IN ()) IN ())) ORDER BY (((((((rt0.c0))>=((t1.c2))))OR((((rt0.c2))<((rt0.c1))))))OR(((t1.c2) BETWEEN (t1.c0) AND (rt0.c1))))  NULLS LAST, ((((t1.c64)<=(vt0.c0)))IS NOT(((t1.c0)IS NOT(t1.c0)))), rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c64 IN ()) IN ())) IS TRUE)  as count FROM vt0, v0, t1, rt0 ORDER BY (((((((rt0.c0))>=((t1.c2))))OR((((rt0.c2))<((rt0.c1))))))OR(((t1.c2) BETWEEN (t1.c0) AND (rt0.c1))))  NULLS LAST, ((((t1.c64)<=(vt0.c0)))IS NOT(((t1.c0)IS NOT(t1.c0)))), rt0.c1);
SELECT ALL * FROM vt0, v0, t1, rt0 WHERE (((t1.c64 IN ()) IN ())) ORDER BY (((((((rt0.c0))>=((t1.c2))))OR((((rt0.c2))<((rt0.c1))))))OR(((t1.c2) BETWEEN (t1.c0) AND (rt0.c1))))  NULLS LAST, ((((t1.c64)<=(vt0.c0)))IS NOT(((t1.c0)IS NOT(t1.c0)))), rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c64 IN ()) IN ())) IS TRUE)  as count FROM vt0, v0, t1, rt0 ORDER BY (((((((rt0.c0))>=((t1.c2))))OR((((rt0.c2))<((rt0.c1))))))OR(((t1.c2) BETWEEN (t1.c0) AND (rt0.c1))))  NULLS LAST, ((((t1.c64)<=(vt0.c0)))IS NOT(((t1.c0)IS NOT(t1.c0)))), rt0.c1);
SELECT ALL * FROM vt0, v0, t1, rt0 WHERE (((t1.c64 IN ()) IN ())) ORDER BY (((((((rt0.c0))>=((t1.c2))))OR((((rt0.c2))<((rt0.c1))))))OR(((t1.c2) BETWEEN (t1.c0) AND (rt0.c1))))  NULLS LAST, ((((t1.c64)<=(vt0.c0)))IS NOT(((t1.c0)IS NOT(t1.c0)))), rt0.c1;
SELECT ALL * FROM v0, vt0 FULL OUTER JOIN t1 ON ((rt0.c1 COLLATE RTRIM)AND(CASE WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN t1.c0 WHEN t1.c64 THEN x'112e' END)) RIGHT OUTER JOIN rt0 ON CASE ((((t1.c2)OR(t1.c2)))OR(t1.c64))  WHEN v0.c0 THEN rt0.c0 COLLATE NOCASE END WHERE (((((t1.c64 IN ())))==((NULL COLLATE RTRIM)))) ORDER BY ((CAST(0x1268b5da AS BLOB)) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c64 IN ())))=((NULL COLLATE RTRIM)))) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN t1 ON ((rt0.c1 COLLATE RTRIM)AND(CASE WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN t1.c0 WHEN t1.c64 THEN x'112e' END)) RIGHT OUTER JOIN rt0 ON CASE ((((t1.c2)OR(t1.c2)))OR(t1.c64))  WHEN v0.c0 THEN rt0.c0 COLLATE NOCASE END ORDER BY ((CAST(0X1268b5da AS BLOB)) ISNULL));
SELECT ALL * FROM v0, vt0 FULL OUTER JOIN t1 ON ((rt0.c1 COLLATE RTRIM)AND(CASE WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN t1.c0 WHEN t1.c64 THEN x'112e' END)) RIGHT OUTER JOIN rt0 ON CASE ((((t1.c2)OR(t1.c2)))OR(t1.c64))  WHEN v0.c0 THEN rt0.c0 COLLATE NOCASE END WHERE (((((t1.c64 IN ())))==((NULL COLLATE RTRIM)))) ORDER BY ((CAST(0x1268b5da AS BLOB)) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c64 IN ())))=((NULL COLLATE RTRIM)))) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN t1 ON ((rt0.c1 COLLATE RTRIM)AND(CASE WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN t1.c0 WHEN t1.c64 THEN x'112e' END)) RIGHT OUTER JOIN rt0 ON CASE ((((t1.c2)OR(t1.c2)))OR(t1.c64))  WHEN v0.c0 THEN rt0.c0 COLLATE NOCASE END ORDER BY ((CAST(0X1268b5da AS BLOB)) ISNULL));
SELECT * FROM t1 FULL OUTER JOIN vt0 ON ((((t1.c2) NOT BETWEEN (NULL) AND (t1.c2)))<<(t1.c0 COLLATE NOCASE)) WHERE ((1522688849 IN ())) ORDER BY ((t1.c2 IN ()) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((1522688849 IN ())) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt0 ON ((((t1.c2) NOT BETWEEN (NULL) AND (t1.c2)))<<(t1.c0 COLLATE NOCASE)) ORDER BY ((t1.c2 IN ()) IN ()) DESC  NULLS FIRST);
SELECT * FROM t1 FULL OUTER JOIN vt0 ON ((((t1.c2) NOT BETWEEN (NULL) AND (t1.c2)))<<(t1.c0 COLLATE NOCASE)) WHERE ((1522688849 IN ())) ORDER BY ((t1.c2 IN ()) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((1522688849 IN ())) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt0 ON ((((t1.c2) NOT BETWEEN (NULL) AND (t1.c2)))<<(t1.c0 COLLATE NOCASE)) ORDER BY ((t1.c2 IN ()) IN ()) DESC  NULLS FIRST);
SELECT * FROM t1 FULL OUTER JOIN vt0 ON ((((t1.c2) NOT BETWEEN (NULL) AND (t1.c2)))<<(t1.c0 COLLATE NOCASE)) WHERE ((1522688849 IN ())) ORDER BY ((t1.c2 IN ()) IN ()) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)GLOB(vt0.c0)), CAST(x'1574' AS TEXT), (((vt0.c0))<((vt0.c0)))))>((((vt0.c0)GLOB(vt0.c0)), vt0.c0, ''))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)GLOB(vt0.c0)), CAST(x'1574' AS TEXT), (((vt0.c0))<((vt0.c0)))))>((((vt0.c0)GLOB(vt0.c0)), vt0.c0, '')))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)GLOB(vt0.c0)), CAST(x'1574' AS TEXT), (((vt0.c0))<((vt0.c0)))))>((((vt0.c0)GLOB(vt0.c0)), vt0.c0, ''))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)GLOB(vt0.c0)), CAST(x'1574' AS TEXT), (((vt0.c0))<((vt0.c0)))))>((((vt0.c0)GLOB(vt0.c0)), vt0.c0, '')))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)GLOB(vt0.c0)), CAST(x'1574' AS TEXT), (((vt0.c0))<((vt0.c0)))))>((((vt0.c0)GLOB(vt0.c0)), vt0.c0, ''))));
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 IN (v0.c0)) IN ())) ORDER BY ((('AF鵹^>\d#w')>(v0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 IN (v0.c0)) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((('AF鵹^>\d#w')>(v0.c0)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 IN (v0.c0)) IN ())) ORDER BY ((('AF鵹^>\d#w')>(v0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 IN (v0.c0)) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((('AF鵹^>\d#w')>(v0.c0)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 IN (v0.c0)) IN ())) ORDER BY ((('AF鵹^>\d#w')>(v0.c0)) IN ())  NULLS LAST;
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))LIKE(((rt0.c0)<=(rt0.c0)))) FULL OUTER JOIN rt0 ON vt0.c0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))) NOTNULL)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))LIKE(((rt0.c0)<=(rt0.c0)))) FULL OUTER JOIN rt0 ON vt0.c0);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))LIKE(((rt0.c0)<=(rt0.c0)))) FULL OUTER JOIN rt0 ON vt0.c0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))) NOTNULL)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))LIKE(((rt0.c0)<=(rt0.c0)))) FULL OUTER JOIN rt0 ON vt0.c0);
SELECT ALL * FROM v0, rt0, vt0, t1 WHERE (CAST((t1.c2 IN (rt0.c2)) AS NUMERIC)) ORDER BY (((((v0.c0))<((rt0.c2))))IS NOT((rt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((t1.c2 IN (rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM v0, rt0, vt0, t1 ORDER BY (((((v0.c0))<((rt0.c2))))IS NOT((rt0.c0 IN ()))) ASC);
SELECT ALL * FROM v0, rt0, vt0, t1 WHERE (CAST((t1.c2 IN (rt0.c2)) AS NUMERIC)) ORDER BY (((((v0.c0))<((rt0.c2))))IS NOT((rt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((t1.c2 IN (rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM v0, rt0, vt0, t1 ORDER BY (((((v0.c0))<((rt0.c2))))IS NOT((rt0.c0 IN ()))) ASC);
SELECT ALL * FROM v0, rt0, vt0, t1 WHERE (CAST((t1.c2 IN (rt0.c2)) AS NUMERIC)) ORDER BY (((((v0.c0))<((rt0.c2))))IS NOT((rt0.c0 IN ()))) ASC;
SELECT * FROM rt0 WHERE ((((((rt0.c0)==(rt0.c2))))>=((((rt0.c2)&(rt0.c0)))))) ORDER BY rt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)=(rt0.c2))))>=((((rt0.c2)&(rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((((rt0.c0)==(rt0.c2))))>=((((rt0.c2)&(rt0.c0)))))) ORDER BY rt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)=(rt0.c2))))>=((((rt0.c2)&(rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((((rt0.c0)==(rt0.c2))))>=((((rt0.c2)&(rt0.c0)))))) ORDER BY rt0.c1 ASC  NULLS LAST;
SELECT * FROM v0, t1, vt0, rt0 WHERE ((~ (((v0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0, t1, vt0, rt0);
SELECT * FROM v0, t1, vt0, rt0 WHERE ((~ (((v0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0, t1, vt0, rt0);
SELECT * FROM v0, t1, vt0, rt0 WHERE ((~ (((v0.c0) IS FALSE))));
SELECT ALL * FROM vt0, v0, t1 WHERE (CASE WHEN NULL THEN t1.c2 ELSE CAST(t1.c64 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN t1.c2 ELSE CAST(t1.c64 AS INTEGER) END) IS TRUE)  as count FROM vt0, v0, t1);
SELECT ALL * FROM vt0, v0, t1 WHERE (CASE WHEN NULL THEN t1.c2 ELSE CAST(t1.c64 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN t1.c2 ELSE CAST(t1.c64 AS INTEGER) END) IS TRUE)  as count FROM vt0, v0, t1);
SELECT ALL * FROM vt0, v0, t1 WHERE (CASE WHEN NULL THEN t1.c2 ELSE CAST(t1.c64 AS INTEGER) END);
