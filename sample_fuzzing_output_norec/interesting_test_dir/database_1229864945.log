-- Time: 2024/06/08 21:39:29
-- Database: database45
-- Database version: 3.40.0
-- seed value: 1229864945
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE TEMP TABLE t0 (c0 TEXT ); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0); -- 1ms;
ANALYZE sqlite_master; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (''); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (''); -- 0ms;
UPDATE t0 SET (c0)=('563018501') WHERE UNLIKELY(t0.c0); -- 1ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (''); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (x''), ('1974435046'), (0.7863849740722921); -- 0ms;
ROLLBACK TRANSACTION; -- 6ms;
INSERT OR REPLACE INTO vt1(c0) VALUES ('1703299426'); -- 16ms;
COMMIT; -- 0ms;
END TRANSACTION; -- 1ms;
PRAGMA wal_checkpoint(PASSIVE); -- 1ms;
UPDATE OR ROLLBACK t0 SET c0='', c0=NULL, c0='' WHERE CASE WHEN CAST(t0.c0 AS INTEGER) THEN (~ (t0.c0)) END; -- 0ms;
ANALYZE; -- 3ms;
COMMIT TRANSACTION; -- 0ms;
REINDEX; -- 10ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c68; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
INSERT OR FAIL INTO t1(c68) VALUES (x''); -- 0ms;
INSERT OR FAIL INTO t1 VALUES (1599666035); -- 1ms;
INSERT OR FAIL INTO t1(c68) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x''); -- 14ms;
DELETE FROM sqlite_stat1 WHERE CAST('1974435046' AS REAL) COLLATE NOCASE; -- 0ms;
ANALYZE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
PRAGMA recursive_triggers; -- 0ms;
INSERT OR REPLACE INTO t1 VALUES (NULL); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(5.63018501E8); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 177632415); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '5480'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 95011313); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 303232017); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '40945'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
REINDEX BINARY; -- 0ms;
ALTER TABLE t1 ADD COLUMN c79 REAL; -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ALTER TABLE t1 RENAME COLUMN c79 TO c46; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(0.7863849740722921); -- 0ms;
PRAGMA main.shrink_memory; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (0.44262023505569337); -- 0ms;
END; -- 1ms;
PRAGMA main.cache_size; -- 0ms;
UPDATE vt1 SET (c0)=(0.11422247178717093) WHERE ((((vt1.c0)AND(vt1.c0))) BETWEEN (vt1.c0 COLLATE RTRIM) AND (((0Xffffffff824a1215) NOT NULL))); -- 15ms;
CREATE TEMPORARY TRIGGER IF NOT EXISTS tr0 AFTER INSERT ON t1 FOR EACH ROW  WHEN NULL BEGIN UPDATE OR IGNORE vt1 SET (c0)=(NULL) WHERE ((((((((vt1.c0 COLLATE BINARY)OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))AND(((x'')OR(vt1.c0)))))OR(LIKE(vt1.c0, '1703299426', '6'))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END));INSERT OR REPLACE INTO t1(c46, c68) VALUES (0Xffffffffcd82f62b, x'');UPDATE OR IGNORE vt1 SET (c0, c0, c0)=(NULL, x'', 0X688fcf5b) WHERE ((vt1.c0 COLLATE RTRIM)GLOB(('>v쒁' IN ())));END; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
PRAGMA main.legacy_file_format; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
UPDATE OR IGNORE t1 SET c68='w콛Q|	㲱' WHERE (t1.c46 IN (t1.c46 COLLATE BINARY)); -- 0ms;
PRAGMA temp.cache_spill; -- 1ms;
PRAGMA short_column_names; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ALTER TABLE t1 ADD COLUMN c90 INTEGER; -- 0ms;
PRAGMA temp.automatic_index = true; -- 0ms;
PRAGMA main.cache_size; -- 0ms;
ANALYZE t1; -- 0ms;
REINDEX; -- 7ms;
UPDATE OR IGNORE t1 SET (c46)=(0.566751072030415); -- 0ms;
UPDATE OR IGNORE vt1 SET c0=0.15758201109583436; -- 1ms;
ALTER TABLE t1 RENAME COLUMN c90 TO c44; -- 0ms;
END; -- 10ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
UPDATE t1 SET c44='586756640' WHERE ((ABS(t1.c68)) ISNULL); -- 0ms;
UPDATE t1 SET (c68)=(x''); -- 0ms;
DROP TABLE t1; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, +c3 BLOB ); -- 7ms;
PRAGMA journal_size_limit = -3179968139397115366; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(x''); -- 4ms;
UPDATE OR ABORT vt1 SET (c0)=(5.63018501E8) WHERE '1135755771' COLLATE NOCASE; -- 0ms;
UPDATE OR ABORT rt0 SET c2=x'' WHERE 0.9875843010800771; -- 1ms;
UPDATE OR IGNORE rt0 SET c3=1883822125; -- 1ms;
INSERT OR ABORT INTO vt1 VALUES ('沵0'); -- 0ms;
ANALYZE temp; -- 0ms;
UPDATE OR IGNORE rt0 SET c2='1703299426' WHERE CASE 0Xffffffffde6615e8  WHEN ((rt0.c0) NOTNULL) THEN (- (rt0.c0)) ELSE ((0.11422247178717093) BETWEEN (rt0.c0) AND (rt0.c2)) END; -- 0ms;
UPDATE OR REPLACE rt0 SET (c3)=('1189389922'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (''), (-1468556651), (x''); -- 1ms;
REINDEX  rt0; -- 0ms;
REINDEX RTRIM; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=x''; -- 0ms;
ANALYZE; -- 13ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA auto_vacuum; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(x''); -- 0ms;
UPDATE vt1 SET c0='' WHERE (NOT (((vt1.c0)OR(vt1.c0)))); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '12061'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 6); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 423431010); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 4); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 898805880); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -1468556651);\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 252133472); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 9); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 1ms;
CREATE TEMP VIEW  IF NOT EXISTS v0(c0, c1, c2) AS SELECT DISTINCT CASE WHEN MIN(rt0.c3) THEN rt0.c0 COLLATE RTRIM END, CASE ((((vt1.c0)AND(rt0.c1)))AND(vt1.c0))  WHEN rt0.c1 THEN (((rt0.c2, rt0.c0, rt0.c3, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, vt1.c0, vt1.c0, rt0.c0)) AND ((vt1.c0, rt0.c0, rt0.c1, rt0.c0, vt1.c0))) END, x'' FROM rt0, vt1 WHERE (0.9378994198632443) LIMIT -1468556651; -- 0ms;
UPDATE vt1 SET (c0)=(x'') WHERE SUBSTR(vt1.c0, (('0.11422247178717093') IS FALSE)); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT OR FAIL INTO rt0(c0) VALUES (NULL), (0xfffffffffa6d9118), (-490551406); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM vt1 WHERE ('sp6VS#h䇻');
SELECT SUM(count) FROM (SELECT (('sp6VS#h䇻') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ('sp6VS#h䇻');
SELECT SUM(count) FROM (SELECT (('sp6VS#h䇻') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ('sp6VS#h䇻');
SELECT ALL * FROM vt1 WHERE (((((((((((((((vt1.c0)<(vt1.c0)))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(CAST(vt1.c0 AS REAL))))OR(((vt1.c0)OR(x'')))))AND(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))AND(vt1.c0)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY LAST_INSERT_ROWID();
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((vt1.c0)<(vt1.c0)))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(CAST(vt1.c0 AS REAL))))OR(((vt1.c0)OR(x'')))))AND(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))AND(vt1.c0)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY LAST_INSERT_ROWID());
SELECT ALL * FROM vt1 WHERE (((((((((((((((vt1.c0)<(vt1.c0)))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(CAST(vt1.c0 AS REAL))))OR(((vt1.c0)OR(x'')))))AND(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))AND(vt1.c0)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY LAST_INSERT_ROWID();
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((vt1.c0)<(vt1.c0)))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(CAST(vt1.c0 AS REAL))))OR(((vt1.c0)OR(x'')))))AND(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))AND(vt1.c0)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY LAST_INSERT_ROWID());
SELECT ALL * FROM vt1 WHERE (((((((((((((((vt1.c0)<(vt1.c0)))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(CAST(vt1.c0 AS REAL))))OR(((vt1.c0)OR(x'')))))AND(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))AND(vt1.c0)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY LAST_INSERT_ROWID();
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (STRFTIME((+ (0.1751972986477468)), (vt1.c0 IN ()), ((vt1.c0)IS NOT(rt0.c0)), IFNULL(rt0.c2, rt0.c0), CAST(vt1.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((STRFTIME((+ (0.1751972986477468)), (vt1.c0 IN ()), ((vt1.c0)IS NOT(rt0.c0)), IFNULL(rt0.c2, rt0.c0), CAST(vt1.c0 AS INTEGER))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (STRFTIME((+ (0.1751972986477468)), (vt1.c0 IN ()), ((vt1.c0)IS NOT(rt0.c0)), IFNULL(rt0.c2, rt0.c0), CAST(vt1.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((STRFTIME((+ (0.1751972986477468)), (vt1.c0 IN ()), ((vt1.c0)IS NOT(rt0.c0)), IFNULL(rt0.c2, rt0.c0), CAST(vt1.c0 AS INTEGER))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (STRFTIME((+ (0.1751972986477468)), (vt1.c0 IN ()), ((vt1.c0)IS NOT(rt0.c0)), IFNULL(rt0.c2, rt0.c0), CAST(vt1.c0 AS INTEGER)));
SELECT * FROM rt0, vt1 WHERE (((CASE rt0.c3  WHEN rt0.c1 THEN x'' WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 END)<<(((rt0.c3) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c3  WHEN rt0.c1 THEN x'' WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 END)<<(((rt0.c3) IS FALSE)))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((CASE rt0.c3  WHEN rt0.c1 THEN x'' WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 END)<<(((rt0.c3) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c3  WHEN rt0.c1 THEN x'' WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 END)<<(((rt0.c3) IS FALSE)))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((CASE rt0.c3  WHEN rt0.c1 THEN x'' WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 END)<<(((rt0.c3) IS FALSE))));
SELECT COUNT(*) FROM vt1 WHERE ('') ORDER BY (((('沵0')+(vt1.c0)))||(vt1.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1 ORDER BY (((('沵0')+(vt1.c0)))||(vt1.c0 COLLATE BINARY)) DESC);
SELECT COUNT(*) FROM vt1 WHERE ('') ORDER BY (((('沵0')+(vt1.c0)))||(vt1.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1 ORDER BY (((('沵0')+(vt1.c0)))||(vt1.c0 COLLATE BINARY)) DESC);
SELECT COUNT(*) FROM vt1 WHERE ('') ORDER BY (((('沵0')+(vt1.c0)))||(vt1.c0 COLLATE BINARY)) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (x'9f86' COLLATE RTRIM) ORDER BY LIKELIHOOD(DISTINCT LOWER(rt0.c0), 0.7856545675915128)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'9f86' COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY LIKELIHOOD(DISTINCT LOWER(rt0.c0), 0.7856545675915128)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'9f86' COLLATE RTRIM) ORDER BY LIKELIHOOD(DISTINCT LOWER(rt0.c0), 0.7856545675915128)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'9f86' COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY LIKELIHOOD(DISTINCT LOWER(rt0.c0), 0.7856545675915128)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'9f86' COLLATE RTRIM) ORDER BY LIKELIHOOD(DISTINCT LOWER(rt0.c0), 0.7856545675915128)  NULLS LAST;
SELECT * FROM vt1 WHERE (((vt1.c0)IS(0.7941689875049667 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)IS(0.7941689875049667 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0)IS(0.7941689875049667 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)IS(0.7941689875049667 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0)IS(0.7941689875049667 COLLATE BINARY)));
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (rt0.c2)));
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (rt0.c2)));
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (rt0.c2)));
SELECT ALL * FROM rt0 CROSS JOIN vt1 ON CASE ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1))  WHEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)) THEN ROUND(vt1.c0, NULL) END WHERE (((vt1.c0)==(CAST(rt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)==(CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON CASE ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1))  WHEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)) THEN ROUND(vt1.c0, NULL) END);
SELECT ALL * FROM rt0 CROSS JOIN vt1 ON CASE ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1))  WHEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)) THEN ROUND(vt1.c0, NULL) END WHERE (((vt1.c0)==(CAST(rt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)==(CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON CASE ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1))  WHEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)) THEN ROUND(vt1.c0, NULL) END);
SELECT ALL * FROM rt0 CROSS JOIN vt1 ON CASE ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1))  WHEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)) THEN ROUND(vt1.c0, NULL) END WHERE (((vt1.c0)==(CAST(rt0.c1 AS INTEGER))));
SELECT COUNT(*) FROM rt0, vt1 WHERE ((~ (vt1.c0 COLLATE NOCASE))) ORDER BY (- (rt0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (- (rt0.c2)) DESC);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((~ (vt1.c0 COLLATE NOCASE))) ORDER BY (- (rt0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (- (rt0.c2)) DESC);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((~ (vt1.c0 COLLATE NOCASE))) ORDER BY (- (rt0.c2)) DESC;
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE ((- (((vt1.c0)/(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((vt1.c0)/(rt0.c0))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE ((- (((vt1.c0)/(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((vt1.c0)/(rt0.c0))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE ((- (((vt1.c0)/(rt0.c0)))));
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c3 IN ()), ((vt1.c0) BETWEEN (rt0.c0) AND ('-901732142')), CAST(rt0.c3 AS INTEGER)))<=(((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0))), (rt0.c2 IN ()), ((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3 IN ()), ((vt1.c0) BETWEEN (rt0.c0) AND ('-901732142')), CAST(rt0.c3 AS INTEGER)))<=(((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0))), (rt0.c2 IN ()), ((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c3 IN ()), ((vt1.c0) BETWEEN (rt0.c0) AND ('-901732142')), CAST(rt0.c3 AS INTEGER)))<=(((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0))), (rt0.c2 IN ()), ((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3 IN ()), ((vt1.c0) BETWEEN (rt0.c0) AND ('-901732142')), CAST(rt0.c3 AS INTEGER)))<=(((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0))), (rt0.c2 IN ()), ((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c3 IN ()), ((vt1.c0) BETWEEN (rt0.c0) AND ('-901732142')), CAST(rt0.c3 AS INTEGER)))<=(((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0))), (rt0.c2 IN ()), ((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0))))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3, rt0.c1, rt0.c3)) BETWEEN ((rt0.c0, ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)), rt0.c3)) AND (((rt0.c1 IN (NULL)), CAST(rt0.c0 AS INTEGER), -9.3482728E7)))) ORDER BY (((((~ (rt0.c3)))AND('-1975057621')))OR('-289173684'))  NULLS LAST, rt0.c0 DESC, (((rt0.c2)) NOT BETWEEN ((((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)))) AND ((((rt0.c0)*(rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3, rt0.c1, rt0.c3)) BETWEEN ((rt0.c0, ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)), rt0.c3)) AND (((rt0.c1 IN (NULL)), CAST(rt0.c0 AS INTEGER), -9.3482728E7)))) IS TRUE)  as count FROM rt0 ORDER BY (((((~ (rt0.c3)))AND('-1975057621')))OR('-289173684'))  NULLS LAST, rt0.c0 DESC, (((rt0.c2)) NOT BETWEEN ((((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)))) AND ((((rt0.c0)*(rt0.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3, rt0.c1, rt0.c3)) BETWEEN ((rt0.c0, ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)), rt0.c3)) AND (((rt0.c1 IN (NULL)), CAST(rt0.c0 AS INTEGER), -9.3482728E7)))) ORDER BY (((((~ (rt0.c3)))AND('-1975057621')))OR('-289173684'))  NULLS LAST, rt0.c0 DESC, (((rt0.c2)) NOT BETWEEN ((((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)))) AND ((((rt0.c0)*(rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3, rt0.c1, rt0.c3)) BETWEEN ((rt0.c0, ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)), rt0.c3)) AND (((rt0.c1 IN (NULL)), CAST(rt0.c0 AS INTEGER), -9.3482728E7)))) IS TRUE)  as count FROM rt0 ORDER BY (((((~ (rt0.c3)))AND('-1975057621')))OR('-289173684'))  NULLS LAST, rt0.c0 DESC, (((rt0.c2)) NOT BETWEEN ((((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)))) AND ((((rt0.c0)*(rt0.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3, rt0.c1, rt0.c3)) BETWEEN ((rt0.c0, ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)), rt0.c3)) AND (((rt0.c1 IN (NULL)), CAST(rt0.c0 AS INTEGER), -9.3482728E7)))) ORDER BY (((((~ (rt0.c3)))AND('-1975057621')))OR('-289173684'))  NULLS LAST, rt0.c0 DESC, (((rt0.c2)) NOT BETWEEN ((((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)))) AND ((((rt0.c0)*(rt0.c0)))))  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0 WHERE (((vt1.c0 COLLATE NOCASE) BETWEEN (((rt0.c1) IS TRUE)) AND (rt0.c3)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE) BETWEEN (((rt0.c1) IS TRUE)) AND (rt0.c3))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((vt1.c0 COLLATE NOCASE) BETWEEN (((rt0.c1) IS TRUE)) AND (rt0.c3)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE) BETWEEN (((rt0.c1) IS TRUE)) AND (rt0.c3))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((vt1.c0 COLLATE NOCASE) BETWEEN (((rt0.c1) IS TRUE)) AND (rt0.c3)));
SELECT COUNT(*) FROM vt1, rt0 WHERE (((NULL)>>(rt0.c0))) ORDER BY (+ (rt0.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>>(rt0.c0))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (+ (rt0.c2 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt1, rt0 WHERE (((NULL)>>(rt0.c0))) ORDER BY (+ (rt0.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>>(rt0.c0))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (+ (rt0.c2 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt1, rt0 WHERE (((NULL)>>(rt0.c0))) ORDER BY (+ (rt0.c2 COLLATE NOCASE));
SELECT COUNT(*) FROM rt0, vt1 WHERE ((+ (vt1.c0)) COLLATE NOCASE) ORDER BY (((((((('1135755771')OR(0.9378994198632443)))OR((vt1.c0 IN (rt0.c3)))))OR(((rt0.c3)==(rt0.c1)))))OR(CASE rt0.c1  WHEN rt0.c0 THEN '>v쒁' ELSE rt0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((((('1135755771')OR(0.9378994198632443)))OR((vt1.c0 IN (rt0.c3)))))OR(((rt0.c3)=(rt0.c1)))))OR(CASE rt0.c1  WHEN rt0.c0 THEN '>v쒁' ELSE rt0.c0 END)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((+ (vt1.c0)) COLLATE NOCASE) ORDER BY (((((((('1135755771')OR(0.9378994198632443)))OR((vt1.c0 IN (rt0.c3)))))OR(((rt0.c3)==(rt0.c1)))))OR(CASE rt0.c1  WHEN rt0.c0 THEN '>v쒁' ELSE rt0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((((('1135755771')OR(0.9378994198632443)))OR((vt1.c0 IN (rt0.c3)))))OR(((rt0.c3)=(rt0.c1)))))OR(CASE rt0.c1  WHEN rt0.c0 THEN '>v쒁' ELSE rt0.c0 END)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((+ (vt1.c0)) COLLATE NOCASE) ORDER BY (((((((('1135755771')OR(0.9378994198632443)))OR((vt1.c0 IN (rt0.c3)))))OR(((rt0.c3)==(rt0.c1)))))OR(CASE rt0.c1  WHEN rt0.c0 THEN '>v쒁' ELSE rt0.c0 END)) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (CAST(rtreenode(rt0.c1, rt0.c1) AS REAL)) ORDER BY CASE ((rt0.c3)>(0.05454614969536564))  WHEN CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END THEN rt0.c3 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rtreenode(rt0.c1, rt0.c1) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c3)>(0.05454614969536564))  WHEN CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END THEN rt0.c3 END  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rtreenode(rt0.c1, rt0.c1) AS REAL)) ORDER BY CASE ((rt0.c3)>(0.05454614969536564))  WHEN CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END THEN rt0.c3 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rtreenode(rt0.c1, rt0.c1) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c3)>(0.05454614969536564))  WHEN CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END THEN rt0.c3 END  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rtreenode(rt0.c1, rt0.c1) AS REAL)) ORDER BY CASE ((rt0.c3)>(0.05454614969536564))  WHEN CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END THEN rt0.c3 END  NULLS LAST;
SELECT ALL * FROM rt0, vt1 WHERE (x'2389') ORDER BY ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'2389') IS TRUE)  as count FROM rt0, vt1 ORDER BY ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE (x'2389') ORDER BY ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'2389') IS TRUE)  as count FROM rt0, vt1 ORDER BY ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE (x'2389') ORDER BY ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((x''))<=((CAST(vt1.c0 AS TEXT))))) ORDER BY (((vt1.c0 IN (vt1.c0)))AND(RTRIM(NULL)));
SELECT SUM(count) FROM (SELECT (((((x''))<=((CAST(vt1.c0 AS TEXT))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN (vt1.c0)))AND(RTRIM(NULL))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((x''))<=((CAST(vt1.c0 AS TEXT))))) ORDER BY (((vt1.c0 IN (vt1.c0)))AND(RTRIM(NULL)));
SELECT SUM(count) FROM (SELECT (((((x''))<=((CAST(vt1.c0 AS TEXT))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN (vt1.c0)))AND(RTRIM(NULL))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((x''))<=((CAST(vt1.c0 AS TEXT))))) ORDER BY (((vt1.c0 IN (vt1.c0)))AND(RTRIM(NULL)));
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (CASE WHEN x'' THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN x'' THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (CASE WHEN x'' THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN x'' THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (CASE WHEN x'' THEN vt1.c0 END)));
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((('-901732142')-(rt0.c0)))|((((x'dce3', rt0.c0, '-536908619'))<=((vt1.c0, NULL, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((('-901732142')-(rt0.c0)))|((((x'dce3', rt0.c0, '-536908619'))<=((vt1.c0, NULL, rt0.c0)))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((('-901732142')-(rt0.c0)))|((((x'dce3', rt0.c0, '-536908619'))<=((vt1.c0, NULL, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((('-901732142')-(rt0.c0)))|((((x'dce3', rt0.c0, '-536908619'))<=((vt1.c0, NULL, rt0.c0)))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((('-901732142')-(rt0.c0)))|((((x'dce3', rt0.c0, '-536908619'))<=((vt1.c0, NULL, rt0.c0))))));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c3)>>(rt0.c2)) COLLATE BINARY) ORDER BY rt0.c2 DESC, (NOT ((- (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)>>(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC, (NOT ((- (rt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c3)>>(rt0.c2)) COLLATE BINARY) ORDER BY rt0.c2 DESC, (NOT ((- (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)>>(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC, (NOT ((- (rt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c3)>>(rt0.c2)) COLLATE BINARY) ORDER BY rt0.c2 DESC, (NOT ((- (rt0.c0))));
SELECT * FROM rt0 WHERE ((- (rt0.c2)) COLLATE RTRIM) ORDER BY (((((- (rt0.c1)))OR(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)))OR(CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (((((- (rt0.c1)))OR(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)))OR(CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END)) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((- (rt0.c2)) COLLATE RTRIM) ORDER BY (((((- (rt0.c1)))OR(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)))OR(CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (((((- (rt0.c1)))OR(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)))OR(CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END)) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((- (rt0.c2)) COLLATE RTRIM) ORDER BY (((((- (rt0.c1)))OR(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)))OR(CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (NULLIF(((((rt0.c1)AND(vt1.c0)))AND(vt1.c0)), CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt1.c0 END)) ORDER BY (NOT (CASE WHEN rt0.c0 THEN rt0.c3 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((((rt0.c1)AND(vt1.c0)))AND(vt1.c0)), CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt1.c0 END)) IS TRUE)  as count FROM rt0, vt1 ORDER BY (NOT (CASE WHEN rt0.c0 THEN rt0.c3 END)) ASC);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (NULLIF(((((rt0.c1)AND(vt1.c0)))AND(vt1.c0)), CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt1.c0 END)) ORDER BY (NOT (CASE WHEN rt0.c0 THEN rt0.c3 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((((rt0.c1)AND(vt1.c0)))AND(vt1.c0)), CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt1.c0 END)) IS TRUE)  as count FROM rt0, vt1 ORDER BY (NOT (CASE WHEN rt0.c0 THEN rt0.c3 END)) ASC);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (NULLIF(((((rt0.c1)AND(vt1.c0)))AND(vt1.c0)), CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt1.c0 END)) ORDER BY (NOT (CASE WHEN rt0.c0 THEN rt0.c3 END)) ASC;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c0)<<(vt1.c0)))GLOB(TRIM(DISTINCT vt1.c0)))) ORDER BY vt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)<<(vt1.c0)))GLOB(TRIM(DISTINCT vt1.c0)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY vt1.c0 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c0)<<(vt1.c0)))GLOB(TRIM(DISTINCT vt1.c0)))) ORDER BY vt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)<<(vt1.c0)))GLOB(TRIM(DISTINCT vt1.c0)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY vt1.c0 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c0)<<(vt1.c0)))GLOB(TRIM(DISTINCT vt1.c0)))) ORDER BY vt1.c0 ASC  NULLS FIRST;
SELECT ALL * FROM vt1, rt0 WHERE (NULL COLLATE NOCASE) ORDER BY (((((rt0.c0))=((rt0.c3)))) BETWEEN ((rt0.c1 IN (rt0.c1))) AND (NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((rt0.c0))=((rt0.c3)))) BETWEEN ((rt0.c1 IN (rt0.c1))) AND (NULL))  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (NULL COLLATE NOCASE) ORDER BY (((((rt0.c0))=((rt0.c3)))) BETWEEN ((rt0.c1 IN (rt0.c1))) AND (NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((rt0.c0))=((rt0.c3)))) BETWEEN ((rt0.c1 IN (rt0.c1))) AND (NULL))  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (NULL COLLATE NOCASE) ORDER BY (((((rt0.c0))=((rt0.c3)))) BETWEEN ((rt0.c1 IN (rt0.c1))) AND (NULL))  NULLS LAST;
SELECT ALL * FROM vt1, rt0 WHERE ((((('1754255195') IS FALSE))%(((rt0.c2)||(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((('1754255195') IS FALSE))%(((rt0.c2)||(rt0.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((((('1754255195') IS FALSE))%(((rt0.c2)||(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((('1754255195') IS FALSE))%(((rt0.c2)||(rt0.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((((('1754255195') IS FALSE))%(((rt0.c2)||(rt0.c0)))));
SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c3)GLOB(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c3)GLOB(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c3)GLOB(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c3)GLOB(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c3)GLOB(rt0.c3)))));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c3)*(rt0.c3)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)*(rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c3)*(rt0.c3)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)*(rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c3)*(rt0.c3)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON CASE WHEN (((rt0.c1, vt1.c0, rt0.c0)) NOT BETWEEN (('-536908619', rt0.c3, rt0.c3)) AND ((vt1.c0, vt1.c0, rt0.c1))) THEN LAST_INSERT_ROWID() WHEN '1703299426' THEN ((rt0.c0) IS TRUE) WHEN (~ (rt0.c1)) THEN ((rt0.c0) NOT NULL) END WHERE (NULLIF(((rt0.c0)<<(rt0.c3)), CAST(rt0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((NULLIF(((rt0.c0)<<(rt0.c3)), CAST(rt0.c1 AS NUMERIC))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON CASE WHEN (((rt0.c1, vt1.c0, rt0.c0)) NOT BETWEEN (('-536908619', rt0.c3, rt0.c3)) AND ((vt1.c0, vt1.c0, rt0.c1))) THEN LAST_INSERT_ROWID() WHEN '1703299426' THEN ((rt0.c0) IS TRUE) WHEN (~ (rt0.c1)) THEN ((rt0.c0) NOT NULL) END);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON CASE WHEN (((rt0.c1, vt1.c0, rt0.c0)) NOT BETWEEN (('-536908619', rt0.c3, rt0.c3)) AND ((vt1.c0, vt1.c0, rt0.c1))) THEN LAST_INSERT_ROWID() WHEN '1703299426' THEN ((rt0.c0) IS TRUE) WHEN (~ (rt0.c1)) THEN ((rt0.c0) NOT NULL) END WHERE (NULLIF(((rt0.c0)<<(rt0.c3)), CAST(rt0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((NULLIF(((rt0.c0)<<(rt0.c3)), CAST(rt0.c1 AS NUMERIC))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON CASE WHEN (((rt0.c1, vt1.c0, rt0.c0)) NOT BETWEEN (('-536908619', rt0.c3, rt0.c3)) AND ((vt1.c0, vt1.c0, rt0.c1))) THEN LAST_INSERT_ROWID() WHEN '1703299426' THEN ((rt0.c0) IS TRUE) WHEN (~ (rt0.c1)) THEN ((rt0.c0) NOT NULL) END);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON CASE WHEN (((rt0.c1, vt1.c0, rt0.c0)) NOT BETWEEN (('-536908619', rt0.c3, rt0.c3)) AND ((vt1.c0, vt1.c0, rt0.c1))) THEN LAST_INSERT_ROWID() WHEN '1703299426' THEN ((rt0.c0) IS TRUE) WHEN (~ (rt0.c1)) THEN ((rt0.c0) NOT NULL) END WHERE (NULLIF(((rt0.c0)<<(rt0.c3)), CAST(rt0.c1 AS NUMERIC)));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)=('\r*')))%(CASE WHEN rt0.c3 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)==('\r*')))%(CASE WHEN rt0.c3 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)=('\r*')))%(CASE WHEN rt0.c3 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)==('\r*')))%(CASE WHEN rt0.c3 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)=('\r*')))%(CASE WHEN rt0.c3 THEN rt0.c1 END)));
SELECT ALL * FROM vt1, rt0 WHERE ((NOT (((((((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c3))))) ORDER BY DATE(((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)), ((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c3)), NULLIF(vt1.c0, rt0.c1));
SELECT SUM(count) FROM (SELECT (((NOT (((((((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c3))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY DATE(((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)), ((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c3)), NULLIF(vt1.c0, rt0.c1)));
SELECT ALL * FROM vt1, rt0 WHERE ((NOT (((((((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c3))))) ORDER BY DATE(((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)), ((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c3)), NULLIF(vt1.c0, rt0.c1));
SELECT SUM(count) FROM (SELECT (((NOT (((((((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c3))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY DATE(((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)), ((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c3)), NULLIF(vt1.c0, rt0.c1)));
SELECT ALL * FROM vt1, rt0 WHERE ((NOT (((((((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c3))))) ORDER BY DATE(((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)), ((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c3)), NULLIF(vt1.c0, rt0.c1));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON ((((((rt0.c2)/(rt0.c0)))AND(CAST(rt0.c3 AS REAL))))AND(CASE WHEN rt0.c0 THEN rt0.c0 ELSE vt1.c0 END)) WHERE (CAST(((rt0.c3)IS(rt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c3)IS(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((((((rt0.c2)/(rt0.c0)))AND(CAST(rt0.c3 AS REAL))))AND(CASE WHEN rt0.c0 THEN rt0.c0 ELSE vt1.c0 END)));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON ((((((rt0.c2)/(rt0.c0)))AND(CAST(rt0.c3 AS REAL))))AND(CASE WHEN rt0.c0 THEN rt0.c0 ELSE vt1.c0 END)) WHERE (CAST(((rt0.c3)IS(rt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c3)IS(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((((((rt0.c2)/(rt0.c0)))AND(CAST(rt0.c3 AS REAL))))AND(CASE WHEN rt0.c0 THEN rt0.c0 ELSE vt1.c0 END)));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON ((((((rt0.c2)/(rt0.c0)))AND(CAST(rt0.c3 AS REAL))))AND(CASE WHEN rt0.c0 THEN rt0.c0 ELSE vt1.c0 END)) WHERE (CAST(((rt0.c3)IS(rt0.c0)) AS TEXT));
SELECT * FROM vt1 WHERE (((vt1.c0)IS NOT((vt1.c0 IN (vt1.c0, vt1.c0))))) ORDER BY (((vt1.c0)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND (((vt1.c0 IN ())))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)IS NOT((vt1.c0 IN (vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND (((vt1.c0 IN ())))) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((vt1.c0)IS NOT((vt1.c0 IN (vt1.c0, vt1.c0))))) ORDER BY (((vt1.c0)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND (((vt1.c0 IN ())))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)IS NOT((vt1.c0 IN (vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND (((vt1.c0 IN ())))) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((vt1.c0)IS NOT((vt1.c0 IN (vt1.c0, vt1.c0))))) ORDER BY (((vt1.c0)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND (((vt1.c0 IN ())))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c3, vt1.c0, rt0.c1)) BETWEEN ((((vt1.c0) IS FALSE), CAST(rt0.c0 AS TEXT), rt0.c3 COLLATE BINARY)) AND ((CASE rt0.c0  WHEN vt1.c0 THEN rt0.c3 ELSE NULL END, (+ (rt0.c1)), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END)))) ORDER BY CAST(rt0.c0 AS NUMERIC) ASC, ((((vt1.c0)+(vt1.c0)))<(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3, vt1.c0, rt0.c1)) BETWEEN ((((vt1.c0) IS FALSE), CAST(rt0.c0 AS TEXT), rt0.c3 COLLATE BINARY)) AND ((CASE rt0.c0  WHEN vt1.c0 THEN rt0.c3 ELSE NULL END, (+ (rt0.c1)), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(rt0.c0 AS NUMERIC) ASC, ((((vt1.c0)+(vt1.c0)))<(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c3, vt1.c0, rt0.c1)) BETWEEN ((((vt1.c0) IS FALSE), CAST(rt0.c0 AS TEXT), rt0.c3 COLLATE BINARY)) AND ((CASE rt0.c0  WHEN vt1.c0 THEN rt0.c3 ELSE NULL END, (+ (rt0.c1)), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END)))) ORDER BY CAST(rt0.c0 AS NUMERIC) ASC, ((((vt1.c0)+(vt1.c0)))<(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3, vt1.c0, rt0.c1)) BETWEEN ((((vt1.c0) IS FALSE), CAST(rt0.c0 AS TEXT), rt0.c3 COLLATE BINARY)) AND ((CASE rt0.c0  WHEN vt1.c0 THEN rt0.c3 ELSE NULL END, (+ (rt0.c1)), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(rt0.c0 AS NUMERIC) ASC, ((((vt1.c0)+(vt1.c0)))<(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c3, vt1.c0, rt0.c1)) BETWEEN ((((vt1.c0) IS FALSE), CAST(rt0.c0 AS TEXT), rt0.c3 COLLATE BINARY)) AND ((CASE rt0.c0  WHEN vt1.c0 THEN rt0.c3 ELSE NULL END, (+ (rt0.c1)), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END)))) ORDER BY CAST(rt0.c0 AS NUMERIC) ASC, ((((vt1.c0)+(vt1.c0)))<(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON vt1.c0 WHERE (((((((((vt1.c0)OR(rt0.c2)))AND(rt0.c1)))AND(((vt1.c0)<=(rt0.c3)))))OR((((vt1.c0))>((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0)OR(rt0.c2)))AND(rt0.c1)))AND(((vt1.c0)<=(rt0.c3)))))OR((((vt1.c0))>((rt0.c0)))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON vt1.c0);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON vt1.c0 WHERE (((((((((vt1.c0)OR(rt0.c2)))AND(rt0.c1)))AND(((vt1.c0)<=(rt0.c3)))))OR((((vt1.c0))>((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0)OR(rt0.c2)))AND(rt0.c1)))AND(((vt1.c0)<=(rt0.c3)))))OR((((vt1.c0))>((rt0.c0)))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON vt1.c0);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON vt1.c0 WHERE (((((((((vt1.c0)OR(rt0.c2)))AND(rt0.c1)))AND(((vt1.c0)<=(rt0.c3)))))OR((((vt1.c0))>((rt0.c0))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c0) AND ('P+'))) BETWEEN (UNICODE(rt0.c0)) AND (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY (- (((rt0.c3)=(rt0.c3)))) ASC, ((((NULLIF(DISTINCT rt0.c2, rt0.c0))AND(((((((((rt0.c3)OR(rt0.c3)))OR(0.21020791362552682)))AND(rt0.c0)))AND(rt0.c0)))))OR(CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)), (((rt0.c1)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOT BETWEEN (rt0.c0) AND ('P+'))) BETWEEN (UNICODE(rt0.c0)) AND (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (- (((rt0.c3)=(rt0.c3)))) ASC, ((((NULLIF(DISTINCT rt0.c2, rt0.c0))AND(((((((((rt0.c3)OR(rt0.c3)))OR(0.21020791362552682)))AND(rt0.c0)))AND(rt0.c0)))))OR(CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)), (((rt0.c1)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c0) AND ('P+'))) BETWEEN (UNICODE(rt0.c0)) AND (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY (- (((rt0.c3)=(rt0.c3)))) ASC, ((((NULLIF(DISTINCT rt0.c2, rt0.c0))AND(((((((((rt0.c3)OR(rt0.c3)))OR(0.21020791362552682)))AND(rt0.c0)))AND(rt0.c0)))))OR(CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)), (((rt0.c1)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOT BETWEEN (rt0.c0) AND ('P+'))) BETWEEN (UNICODE(rt0.c0)) AND (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (- (((rt0.c3)=(rt0.c3)))) ASC, ((((NULLIF(DISTINCT rt0.c2, rt0.c0))AND(((((((((rt0.c3)OR(rt0.c3)))OR(0.21020791362552682)))AND(rt0.c0)))AND(rt0.c0)))))OR(CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)), (((rt0.c1)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c0) AND ('P+'))) BETWEEN (UNICODE(rt0.c0)) AND (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY (- (((rt0.c3)=(rt0.c3)))) ASC, ((((NULLIF(DISTINCT rt0.c2, rt0.c0))AND(((((((((rt0.c3)OR(rt0.c3)))OR(0.21020791362552682)))AND(rt0.c0)))AND(rt0.c0)))))OR(CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)), (((rt0.c1)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END))) DESC;
SELECT * FROM vt1 WHERE (((vt1.c0 IN (vt1.c0)) IN (((vt1.c0)>=(vt1.c0)), ((vt1.c0)IS(vt1.c0))))) ORDER BY ((vt1.c0 COLLATE RTRIM) NOT BETWEEN ('-486485735') AND (CAST(x'8bd1' AS REAL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN (vt1.c0)) IN (((vt1.c0)>=(vt1.c0)), ((vt1.c0)IS(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE RTRIM) NOT BETWEEN ('-486485735') AND (CAST(x'8bd1' AS REAL))) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (((vt1.c0 IN (vt1.c0)) IN (((vt1.c0)>=(vt1.c0)), ((vt1.c0)IS(vt1.c0))))) ORDER BY ((vt1.c0 COLLATE RTRIM) NOT BETWEEN ('-486485735') AND (CAST(x'8bd1' AS REAL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN (vt1.c0)) IN (((vt1.c0)>=(vt1.c0)), ((vt1.c0)IS(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE RTRIM) NOT BETWEEN ('-486485735') AND (CAST(x'8bd1' AS REAL))) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (((vt1.c0 IN (vt1.c0)) IN (((vt1.c0)>=(vt1.c0)), ((vt1.c0)IS(vt1.c0))))) ORDER BY ((vt1.c0 COLLATE RTRIM) NOT BETWEEN ('-486485735') AND (CAST(x'8bd1' AS REAL))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (NULLIF(((vt1.c0) NOTNULL), UNLIKELY(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((vt1.c0) NOTNULL), UNLIKELY(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (NULLIF(((vt1.c0) NOTNULL), UNLIKELY(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((vt1.c0) NOTNULL), UNLIKELY(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (NULLIF(((vt1.c0) NOTNULL), UNLIKELY(vt1.c0)));
SELECT COUNT(*) FROM vt1, rt0 WHERE (json_array(CAST(0.25201499077199785 AS BLOB), ((rt0.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((json_array(CAST(0.25201499077199785 AS BLOB), ((rt0.c1) NOTNULL))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (json_array(CAST(0.25201499077199785 AS BLOB), ((rt0.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((json_array(CAST(0.25201499077199785 AS BLOB), ((rt0.c1) NOTNULL))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1 WHERE ((((((vt1.c0))<=((vt1.c0))))<<(((vt1.c0)>(vt1.c0))))) ORDER BY CAST(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.06741889462200656 ELSE vt1.c0 END AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))<=((vt1.c0))))<<(((vt1.c0)>(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.06741889462200656 ELSE vt1.c0 END AS INTEGER)  NULLS LAST);
SELECT * FROM vt1 WHERE ((((((vt1.c0))<=((vt1.c0))))<<(((vt1.c0)>(vt1.c0))))) ORDER BY CAST(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.06741889462200656 ELSE vt1.c0 END AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))<=((vt1.c0))))<<(((vt1.c0)>(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.06741889462200656 ELSE vt1.c0 END AS INTEGER)  NULLS LAST);
SELECT * FROM vt1 WHERE ((((((vt1.c0))<=((vt1.c0))))<<(((vt1.c0)>(vt1.c0))))) ORDER BY CAST(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.06741889462200656 ELSE vt1.c0 END AS INTEGER)  NULLS LAST;
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON ((((rt0.c3)LIKE(rt0.c3))) BETWEEN (((0.1728422605866088) IS TRUE)) AND (((rt0.c1)|(rt0.c2)))) WHERE (CASE rt0.c3 COLLATE NOCASE  WHEN ((vt1.c0)||(rt0.c3)) THEN ((((rt0.c1)AND(rt0.c3)))AND(rt0.c3)) ELSE (rt0.c3 IN ()) END) ORDER BY (((rt0.c1)) NOT BETWEEN (((vt1.c0 IN ()))) AND ((((rt0.c2)<(rt0.c3))))) DESC  NULLS FIRST, (((~ (rt0.c0)))OR(rt0.c3 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((CASE rt0.c3 COLLATE NOCASE  WHEN ((vt1.c0)||(rt0.c3)) THEN ((((rt0.c1)AND(rt0.c3)))AND(rt0.c3)) ELSE (rt0.c3 IN ()) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON ((((rt0.c3)LIKE(rt0.c3))) BETWEEN (((0.1728422605866088) IS TRUE)) AND (((rt0.c1)|(rt0.c2)))) ORDER BY (((rt0.c1)) NOT BETWEEN (((vt1.c0 IN ()))) AND ((((rt0.c2)<(rt0.c3))))) DESC  NULLS FIRST, (((~ (rt0.c0)))OR(rt0.c3 COLLATE NOCASE)));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON ((((rt0.c3)LIKE(rt0.c3))) BETWEEN (((0.1728422605866088) IS TRUE)) AND (((rt0.c1)|(rt0.c2)))) WHERE (CASE rt0.c3 COLLATE NOCASE  WHEN ((vt1.c0)||(rt0.c3)) THEN ((((rt0.c1)AND(rt0.c3)))AND(rt0.c3)) ELSE (rt0.c3 IN ()) END) ORDER BY (((rt0.c1)) NOT BETWEEN (((vt1.c0 IN ()))) AND ((((rt0.c2)<(rt0.c3))))) DESC  NULLS FIRST, (((~ (rt0.c0)))OR(rt0.c3 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((CASE rt0.c3 COLLATE NOCASE  WHEN ((vt1.c0)||(rt0.c3)) THEN ((((rt0.c1)AND(rt0.c3)))AND(rt0.c3)) ELSE (rt0.c3 IN ()) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON ((((rt0.c3)LIKE(rt0.c3))) BETWEEN (((0.1728422605866088) IS TRUE)) AND (((rt0.c1)|(rt0.c2)))) ORDER BY (((rt0.c1)) NOT BETWEEN (((vt1.c0 IN ()))) AND ((((rt0.c2)<(rt0.c3))))) DESC  NULLS FIRST, (((~ (rt0.c0)))OR(rt0.c3 COLLATE NOCASE)));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON ((((rt0.c3)LIKE(rt0.c3))) BETWEEN (((0.1728422605866088) IS TRUE)) AND (((rt0.c1)|(rt0.c2)))) WHERE (CASE rt0.c3 COLLATE NOCASE  WHEN ((vt1.c0)||(rt0.c3)) THEN ((((rt0.c1)AND(rt0.c3)))AND(rt0.c3)) ELSE (rt0.c3 IN ()) END) ORDER BY (((rt0.c1)) NOT BETWEEN (((vt1.c0 IN ()))) AND ((((rt0.c2)<(rt0.c3))))) DESC  NULLS FIRST, (((~ (rt0.c0)))OR(rt0.c3 COLLATE NOCASE));
SELECT COUNT(*) FROM vt1 WHERE (CASE MAX(vt1.c0, vt1.c0)  WHEN CAST(vt1.c0 AS TEXT) THEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) WHEN CAST(0.1093781826074377 AS INTEGER) THEN (((('LR(	')OR(vt1.c0)))OR('*Z')) WHEN vt1.c0 COLLATE RTRIM THEN ((vt1.c0) BETWEEN (vt1.c0) AND (0.15840296632425488)) ELSE ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) END) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)!=((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((CASE MAX(vt1.c0, vt1.c0)  WHEN CAST(vt1.c0 AS TEXT) THEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) WHEN CAST(0.1093781826074377 AS INTEGER) THEN (((('LR(	')OR(vt1.c0)))OR('*Z')) WHEN vt1.c0 COLLATE RTRIM THEN ((vt1.c0) BETWEEN (vt1.c0) AND (0.15840296632425488)) ELSE ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)<>((vt1.c0 IN ()))));
SELECT COUNT(*) FROM vt1 WHERE (CASE MAX(vt1.c0, vt1.c0)  WHEN CAST(vt1.c0 AS TEXT) THEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) WHEN CAST(0.1093781826074377 AS INTEGER) THEN (((('LR(	')OR(vt1.c0)))OR('*Z')) WHEN vt1.c0 COLLATE RTRIM THEN ((vt1.c0) BETWEEN (vt1.c0) AND (0.15840296632425488)) ELSE ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) END) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)!=((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((CASE MAX(vt1.c0, vt1.c0)  WHEN CAST(vt1.c0 AS TEXT) THEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) WHEN CAST(0.1093781826074377 AS INTEGER) THEN (((('LR(	')OR(vt1.c0)))OR('*Z')) WHEN vt1.c0 COLLATE RTRIM THEN ((vt1.c0) BETWEEN (vt1.c0) AND (0.15840296632425488)) ELSE ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)<>((vt1.c0 IN ()))));
SELECT COUNT(*) FROM vt1 WHERE (CASE MAX(vt1.c0, vt1.c0)  WHEN CAST(vt1.c0 AS TEXT) THEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) WHEN CAST(0.1093781826074377 AS INTEGER) THEN (((('LR(	')OR(vt1.c0)))OR('*Z')) WHEN vt1.c0 COLLATE RTRIM THEN ((vt1.c0) BETWEEN (vt1.c0) AND (0.15840296632425488)) ELSE ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) END) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)!=((vt1.c0 IN ())));
SELECT * FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))|((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))|((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))|((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))|((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))|((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((0Xffffffffde6615e8) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((vt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((0Xffffffffde6615e8) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((0Xffffffffde6615e8) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((vt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((0Xffffffffde6615e8) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((0Xffffffffde6615e8) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((vt1.c0) ISNULL))));
SELECT * FROM rt0 WHERE ((+ (CAST(rt0.c3 AS REAL))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(rt0.c3 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((+ (CAST(rt0.c3 AS REAL))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(rt0.c3 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((+ (CAST(rt0.c3 AS REAL))));
SELECT COUNT(*) FROM vt1, rt0 WHERE (((CASE WHEN vt1.c0 THEN 0x75af7ce6 ELSE x'' END) BETWEEN (((((vt1.c0)AND(rt0.c0)))OR(rt0.c0))) AND (((rt0.c0)<<(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN 0x75af7ce6 ELSE x'' END) BETWEEN (((((vt1.c0)AND(rt0.c0)))OR(rt0.c0))) AND (((rt0.c0)<<(rt0.c3))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((CASE WHEN vt1.c0 THEN 0x75af7ce6 ELSE x'' END) BETWEEN (((((vt1.c0)AND(rt0.c0)))OR(rt0.c0))) AND (((rt0.c0)<<(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN 0x75af7ce6 ELSE x'' END) BETWEEN (((((vt1.c0)AND(rt0.c0)))OR(rt0.c0))) AND (((rt0.c0)<<(rt0.c3))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((CASE WHEN vt1.c0 THEN 0x75af7ce6 ELSE x'' END) BETWEEN (((((vt1.c0)AND(rt0.c0)))OR(rt0.c0))) AND (((rt0.c0)<<(rt0.c3)))));
SELECT * FROM vt1 WHERE (CASE WHEN NULL THEN (((vt1.c0))<>((x''))) WHEN ((vt1.c0)!=(vt1.c0)) THEN UNLIKELY(vt1.c0) WHEN ((-9.01732142E8) NOT BETWEEN (0.0417252275722646) AND (vt1.c0)) THEN vt1.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN (((vt1.c0))!=((x''))) WHEN ((vt1.c0)!=(vt1.c0)) THEN UNLIKELY(vt1.c0) WHEN ((-9.01732142E8) NOT BETWEEN (0.0417252275722646) AND (vt1.c0)) THEN vt1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE WHEN NULL THEN (((vt1.c0))<>((x''))) WHEN ((vt1.c0)!=(vt1.c0)) THEN UNLIKELY(vt1.c0) WHEN ((-9.01732142E8) NOT BETWEEN (0.0417252275722646) AND (vt1.c0)) THEN vt1.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN (((vt1.c0))!=((x''))) WHEN ((vt1.c0)!=(vt1.c0)) THEN UNLIKELY(vt1.c0) WHEN ((-9.01732142E8) NOT BETWEEN (0.0417252275722646) AND (vt1.c0)) THEN vt1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE WHEN NULL THEN (((vt1.c0))<>((x''))) WHEN ((vt1.c0)!=(vt1.c0)) THEN UNLIKELY(vt1.c0) WHEN ((-9.01732142E8) NOT BETWEEN (0.0417252275722646) AND (vt1.c0)) THEN vt1.c0 COLLATE RTRIM END);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((((rt0.c1)IS NOT(rt0.c1)))) AND ((CASE WHEN rt0.c3 THEN rt0.c0 END)))) ORDER BY ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))*(((rt0.c2)*(rt0.c3))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((((rt0.c1)IS NOT(rt0.c1)))) AND ((CASE WHEN rt0.c3 THEN rt0.c0 END)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))*(((rt0.c2)*(rt0.c3)))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((((rt0.c1)IS NOT(rt0.c1)))) AND ((CASE WHEN rt0.c3 THEN rt0.c0 END)))) ORDER BY ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))*(((rt0.c2)*(rt0.c3))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((((rt0.c1)IS NOT(rt0.c1)))) AND ((CASE WHEN rt0.c3 THEN rt0.c0 END)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))*(((rt0.c2)*(rt0.c3)))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((((rt0.c1)IS NOT(rt0.c1)))) AND ((CASE WHEN rt0.c3 THEN rt0.c0 END)))) ORDER BY ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))*(((rt0.c2)*(rt0.c3))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((json_valid(rt0.c0) IN ())) ORDER BY LIKELY(rt0.c0) COLLATE NOCASE DESC, (('1108941621')>=(CAST(rt0.c0 AS NUMERIC)))  NULLS FIRST, UNLIKELY(DISTINCT ((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((json_valid(rt0.c0) IN ())) IS TRUE)  as count FROM vt1, rt0 ORDER BY LIKELY(rt0.c0) COLLATE NOCASE DESC, (('1108941621')>=(CAST(rt0.c0 AS NUMERIC)))  NULLS FIRST, UNLIKELY(DISTINCT ((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c2))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((json_valid(rt0.c0) IN ())) ORDER BY LIKELY(rt0.c0) COLLATE NOCASE DESC, (('1108941621')>=(CAST(rt0.c0 AS NUMERIC)))  NULLS FIRST, UNLIKELY(DISTINCT ((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((json_valid(rt0.c0) IN ())) IS TRUE)  as count FROM vt1, rt0 ORDER BY LIKELY(rt0.c0) COLLATE NOCASE DESC, (('1108941621')>=(CAST(rt0.c0 AS NUMERIC)))  NULLS FIRST, UNLIKELY(DISTINCT ((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c2))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((json_valid(rt0.c0) IN ())) ORDER BY LIKELY(rt0.c0) COLLATE NOCASE DESC, (('1108941621')>=(CAST(rt0.c0 AS NUMERIC)))  NULLS FIRST, UNLIKELY(DISTINCT ((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c2))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (((((((((607170091)AND(CASE WHEN '0.05454614969536564' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(CAST(vt1.c0 AS TEXT))))OR(((vt1.c0)OR(vt1.c0)))))OR(TRIM(vt1.c0, vt1.c0)))) ORDER BY UPPER(DISTINCT ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((607170091)AND(CASE WHEN '0.05454614969536564' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(CAST(vt1.c0 AS TEXT))))OR(((vt1.c0)OR(vt1.c0)))))OR(TRIM(vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY UPPER(DISTINCT ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((((((607170091)AND(CASE WHEN '0.05454614969536564' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(CAST(vt1.c0 AS TEXT))))OR(((vt1.c0)OR(vt1.c0)))))OR(TRIM(vt1.c0, vt1.c0)))) ORDER BY UPPER(DISTINCT ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((607170091)AND(CASE WHEN '0.05454614969536564' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(CAST(vt1.c0 AS TEXT))))OR(((vt1.c0)OR(vt1.c0)))))OR(TRIM(vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY UPPER(DISTINCT ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((((((607170091)AND(CASE WHEN '0.05454614969536564' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(CAST(vt1.c0 AS TEXT))))OR(((vt1.c0)OR(vt1.c0)))))OR(TRIM(vt1.c0, vt1.c0)))) ORDER BY UPPER(DISTINCT ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (-950832791);
SELECT SUM(count) FROM (SELECT ALL ((-950832791) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (-950832791);
SELECT SUM(count) FROM (SELECT ALL ((-950832791) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (-950832791);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))OR(((((((((rt0.c2)OR(x'')))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))OR(((((((((rt0.c2)OR(x'')))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))OR(((((((((rt0.c2)OR(x'')))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))OR(((((((((rt0.c2)OR(x'')))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))OR(((((((((rt0.c2)OR(x'')))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))));
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED FULL OUTER JOIN rt0 ON (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1)) IN (GLOB(rt0.c1, rt0.c3))) WHERE (((((json_insert(0.4376665247349757, rt0.c3, rt0.c0, x'', rt0.c3))AND(CAST(rt0.c2 AS TEXT))))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) ORDER BY (((rt0.c0)IS NOT(rt0.c0)) IN (CASE WHEN vt1.c0 THEN rt0.c3 ELSE vt1.c0 END, (rt0.c3 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((((json_insert(0.4376665247349757, rt0.c3, rt0.c0, x'', rt0.c3))AND(CAST(rt0.c2 AS TEXT))))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1)) IN (GLOB(rt0.c1, rt0.c3))) ORDER BY (((rt0.c0)IS NOT(rt0.c0)) IN (CASE WHEN vt1.c0 THEN rt0.c3 ELSE vt1.c0 END, (rt0.c3 IN ()))));
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED FULL OUTER JOIN rt0 ON (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1)) IN (GLOB(rt0.c1, rt0.c3))) WHERE (((((json_insert(0.4376665247349757, rt0.c3, rt0.c0, x'', rt0.c3))AND(CAST(rt0.c2 AS TEXT))))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) ORDER BY (((rt0.c0)IS NOT(rt0.c0)) IN (CASE WHEN vt1.c0 THEN rt0.c3 ELSE vt1.c0 END, (rt0.c3 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((((json_insert(0.4376665247349757, rt0.c3, rt0.c0, x'', rt0.c3))AND(CAST(rt0.c2 AS TEXT))))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1)) IN (GLOB(rt0.c1, rt0.c3))) ORDER BY (((rt0.c0)IS NOT(rt0.c0)) IN (CASE WHEN vt1.c0 THEN rt0.c3 ELSE vt1.c0 END, (rt0.c3 IN ()))));
SELECT COUNT(*) FROM vt1, rt0 WHERE (TRIM(((rt0.c3) IS FALSE))) ORDER BY CAST(CAST(rt0.c2 AS REAL) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(((rt0.c3) IS FALSE))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(CAST(rt0.c2 AS REAL) AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (TRIM(((rt0.c3) IS FALSE))) ORDER BY CAST(CAST(rt0.c2 AS REAL) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(((rt0.c3) IS FALSE))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(CAST(rt0.c2 AS REAL) AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (TRIM(((rt0.c3) IS FALSE))) ORDER BY CAST(CAST(rt0.c2 AS REAL) AS BLOB)  NULLS FIRST;
SELECT * FROM rt0, vt1 WHERE ((((~ ('-348325806'))) BETWEEN ((+ (rt0.c1))) AND (CAST(vt1.c0 AS INTEGER)))) ORDER BY CAST(vt1.c0 COLLATE NOCASE AS REAL)  NULLS LAST, ((((rt0.c2) BETWEEN (rt0.c3) AND (-336865499))) ISNULL)  NULLS FIRST, rt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((~ ('-348325806'))) BETWEEN ((+ (rt0.c1))) AND (CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(vt1.c0 COLLATE NOCASE AS REAL)  NULLS LAST, ((((rt0.c2) BETWEEN (rt0.c3) AND (-336865499))) ISNULL)  NULLS FIRST, rt0.c0);
SELECT * FROM rt0, vt1 WHERE ((((~ ('-348325806'))) BETWEEN ((+ (rt0.c1))) AND (CAST(vt1.c0 AS INTEGER)))) ORDER BY CAST(vt1.c0 COLLATE NOCASE AS REAL)  NULLS LAST, ((((rt0.c2) BETWEEN (rt0.c3) AND (-336865499))) ISNULL)  NULLS FIRST, rt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((~ ('-348325806'))) BETWEEN ((+ (rt0.c1))) AND (CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(vt1.c0 COLLATE NOCASE AS REAL)  NULLS LAST, ((((rt0.c2) BETWEEN (rt0.c3) AND (-336865499))) ISNULL)  NULLS FIRST, rt0.c0);
SELECT * FROM rt0, vt1 WHERE ((((~ ('-348325806'))) BETWEEN ((+ (rt0.c1))) AND (CAST(vt1.c0 AS INTEGER)))) ORDER BY CAST(vt1.c0 COLLATE NOCASE AS REAL)  NULLS LAST, ((((rt0.c2) BETWEEN (rt0.c3) AND (-336865499))) ISNULL)  NULLS FIRST, rt0.c0;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON ABS(DISTINCT ((((vt1.c0)AND(rt0.c3)))OR(rt0.c1))) WHERE (((((((((((rt0.c0)IS(rt0.c1)))AND('')))OR(rt0.c3)))AND((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c3))))))AND(rt0.c1 COLLATE RTRIM))) ORDER BY ((((+ (rt0.c3))))>((HEX(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)IS(rt0.c1)))AND('')))OR(rt0.c3)))AND((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c3))))))AND(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ABS(DISTINCT ((((vt1.c0)AND(rt0.c3)))OR(rt0.c1))) ORDER BY ((((+ (rt0.c3))))>((HEX(vt1.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON ABS(DISTINCT ((((vt1.c0)AND(rt0.c3)))OR(rt0.c1))) WHERE (((((((((((rt0.c0)IS(rt0.c1)))AND('')))OR(rt0.c3)))AND((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c3))))))AND(rt0.c1 COLLATE RTRIM))) ORDER BY ((((+ (rt0.c3))))>((HEX(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)IS(rt0.c1)))AND('')))OR(rt0.c3)))AND((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c3))))))AND(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ABS(DISTINCT ((((vt1.c0)AND(rt0.c3)))OR(rt0.c1))) ORDER BY ((((+ (rt0.c3))))>((HEX(vt1.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON ABS(DISTINCT ((((vt1.c0)AND(rt0.c3)))OR(rt0.c1))) WHERE (((((((((((rt0.c0)IS(rt0.c1)))AND('')))OR(rt0.c3)))AND((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c3))))))AND(rt0.c1 COLLATE RTRIM))) ORDER BY ((((+ (rt0.c3))))>((HEX(vt1.c0)))) DESC  NULLS FIRST;
SELECT * FROM vt1 CROSS JOIN rt0 ON ((vt1.c0 COLLATE BINARY) NOT BETWEEN (rt0.c3) AND ((vt1.c0 IN ()))) WHERE ((((rt0.c3, rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c3 COLLATE RTRIM, CASE rt0.c2  WHEN vt1.c0 THEN rt0.c3 END, ((rt0.c0)>=(rt0.c0)))) AND (((((NULL)) BETWEEN ((rt0.c1)) AND ((rt0.c0))), (('-1166023477') NOT BETWEEN (rt0.c2) AND (rt0.c2)), NULLIF(DISTINCT rt0.c0, rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3, rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c3 COLLATE RTRIM, CASE rt0.c2  WHEN vt1.c0 THEN rt0.c3 END, ((rt0.c0)>=(rt0.c0)))) AND (((((NULL)) BETWEEN ((rt0.c1)) AND ((rt0.c0))), (('-1166023477') NOT BETWEEN (rt0.c2) AND (rt0.c2)), NULLIF(DISTINCT rt0.c0, rt0.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((vt1.c0 COLLATE BINARY) NOT BETWEEN (rt0.c3) AND ((vt1.c0 IN ()))));
SELECT * FROM vt1 CROSS JOIN rt0 ON ((vt1.c0 COLLATE BINARY) NOT BETWEEN (rt0.c3) AND ((vt1.c0 IN ()))) WHERE ((((rt0.c3, rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c3 COLLATE RTRIM, CASE rt0.c2  WHEN vt1.c0 THEN rt0.c3 END, ((rt0.c0)>=(rt0.c0)))) AND (((((NULL)) BETWEEN ((rt0.c1)) AND ((rt0.c0))), (('-1166023477') NOT BETWEEN (rt0.c2) AND (rt0.c2)), NULLIF(DISTINCT rt0.c0, rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3, rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c3 COLLATE RTRIM, CASE rt0.c2  WHEN vt1.c0 THEN rt0.c3 END, ((rt0.c0)>=(rt0.c0)))) AND (((((NULL)) BETWEEN ((rt0.c1)) AND ((rt0.c0))), (('-1166023477') NOT BETWEEN (rt0.c2) AND (rt0.c2)), NULLIF(DISTINCT rt0.c0, rt0.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((vt1.c0 COLLATE BINARY) NOT BETWEEN (rt0.c3) AND ((vt1.c0 IN ()))));
SELECT * FROM vt1 CROSS JOIN rt0 ON ((vt1.c0 COLLATE BINARY) NOT BETWEEN (rt0.c3) AND ((vt1.c0 IN ()))) WHERE ((((rt0.c3, rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c3 COLLATE RTRIM, CASE rt0.c2  WHEN vt1.c0 THEN rt0.c3 END, ((rt0.c0)>=(rt0.c0)))) AND (((((NULL)) BETWEEN ((rt0.c1)) AND ((rt0.c0))), (('-1166023477') NOT BETWEEN (rt0.c2) AND (rt0.c2)), NULLIF(DISTINCT rt0.c0, rt0.c0)))));
SELECT ALL * FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM);
SELECT * FROM rt0 WHERE (CAST(((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))OR('\r#')))OR(rt0.c3)) AS REAL)) ORDER BY ((((rt0.c3)GLOB(rt0.c2)))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))OR('\r#')))OR(rt0.c3)) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)GLOB(rt0.c2)))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)) DESC);
SELECT * FROM rt0 WHERE (CAST(((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))OR('\r#')))OR(rt0.c3)) AS REAL)) ORDER BY ((((rt0.c3)GLOB(rt0.c2)))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))OR('\r#')))OR(rt0.c3)) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)GLOB(rt0.c2)))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)) DESC);
SELECT * FROM rt0 WHERE (CAST(((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))OR('\r#')))OR(rt0.c3)) AS REAL)) ORDER BY ((((rt0.c3)GLOB(rt0.c2)))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)) DESC;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((rt0.c3 COLLATE RTRIM IN (((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2))))) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT (((rt0.c3 COLLATE RTRIM IN (((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c1 DESC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((rt0.c3 COLLATE RTRIM IN (((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2))))) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT (((rt0.c3 COLLATE RTRIM IN (((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c1 DESC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((rt0.c3 COLLATE RTRIM IN (((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2))))) ORDER BY rt0.c1 DESC;
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c0)!=(vt1.c0)))*(((rt0.c1) IS FALSE)))) ORDER BY ((((((((((rt0.c3)%(vt1.c0)))AND(((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c1)))))AND((((rt0.c1)) NOT BETWEEN (('kR%YPFP')) AND ((rt0.c0))))))OR(((rt0.c3)>=(vt1.c0)))))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (0xef90b1f))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<>(vt1.c0)))*(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((((((rt0.c3)%(vt1.c0)))AND(((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c1)))))AND((((rt0.c1)) NOT BETWEEN (('kR%YPFP')) AND ((rt0.c0))))))OR(((rt0.c3)>=(vt1.c0)))))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (0Xef90b1f)))));
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c0)!=(vt1.c0)))*(((rt0.c1) IS FALSE)))) ORDER BY ((((((((((rt0.c3)%(vt1.c0)))AND(((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c1)))))AND((((rt0.c1)) NOT BETWEEN (('kR%YPFP')) AND ((rt0.c0))))))OR(((rt0.c3)>=(vt1.c0)))))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (0xef90b1f))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<>(vt1.c0)))*(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((((((rt0.c3)%(vt1.c0)))AND(((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c1)))))AND((((rt0.c1)) NOT BETWEEN (('kR%YPFP')) AND ((rt0.c0))))))OR(((rt0.c3)>=(vt1.c0)))))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (0Xef90b1f)))));
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c0)!=(vt1.c0)))*(((rt0.c1) IS FALSE)))) ORDER BY ((((((((((rt0.c3)%(vt1.c0)))AND(((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c1)))))AND((((rt0.c1)) NOT BETWEEN (('kR%YPFP')) AND ((rt0.c0))))))OR(((rt0.c3)>=(vt1.c0)))))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (0xef90b1f))));
SELECT * FROM vt1 WHERE (((((vt1.c0)<<(vt1.c0))) NOT BETWEEN (((NULL)<(vt1.c0))) AND (((vt1.c0)*(0.846346842733181)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<<(vt1.c0))) NOT BETWEEN (((NULL)<(vt1.c0))) AND (((vt1.c0)*(0.846346842733181))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0)<<(vt1.c0))) NOT BETWEEN (((NULL)<(vt1.c0))) AND (((vt1.c0)*(0.846346842733181)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<<(vt1.c0))) NOT BETWEEN (((NULL)<(vt1.c0))) AND (((vt1.c0)*(0.846346842733181))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0)<<(vt1.c0))) NOT BETWEEN (((NULL)<(vt1.c0))) AND (((vt1.c0)*(0.846346842733181)))));
SELECT * FROM rt0, vt1 WHERE (((((rt0.c0)IS(rt0.c3))) BETWEEN (((rt0.c3) BETWEEN (vt1.c0) AND (vt1.c0))) AND (((rt0.c3)==(rt0.c0))))) ORDER BY CASE WHEN ((rt0.c3)||(rt0.c1)) THEN (vt1.c0 IN ()) ELSE (rt0.c3 IN ()) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)IS(rt0.c3))) BETWEEN (((rt0.c3) BETWEEN (vt1.c0) AND (vt1.c0))) AND (((rt0.c3)=(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE WHEN ((rt0.c3)||(rt0.c1)) THEN (vt1.c0 IN ()) ELSE (rt0.c3 IN ()) END ASC  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (((((rt0.c0)IS(rt0.c3))) BETWEEN (((rt0.c3) BETWEEN (vt1.c0) AND (vt1.c0))) AND (((rt0.c3)==(rt0.c0))))) ORDER BY CASE WHEN ((rt0.c3)||(rt0.c1)) THEN (vt1.c0 IN ()) ELSE (rt0.c3 IN ()) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)IS(rt0.c3))) BETWEEN (((rt0.c3) BETWEEN (vt1.c0) AND (vt1.c0))) AND (((rt0.c3)=(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE WHEN ((rt0.c3)||(rt0.c1)) THEN (vt1.c0 IN ()) ELSE (rt0.c3 IN ()) END ASC  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (((((rt0.c0)IS(rt0.c3))) BETWEEN (((rt0.c3) BETWEEN (vt1.c0) AND (vt1.c0))) AND (((rt0.c3)==(rt0.c0))))) ORDER BY CASE WHEN ((rt0.c3)||(rt0.c1)) THEN (vt1.c0 IN ()) ELSE (rt0.c3 IN ()) END ASC  NULLS LAST;
SELECT ALL * FROM vt1, rt0 WHERE ((((- (rt0.c3)))*(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c3 END))) ORDER BY rt0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c3)))*(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c3 END))) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c2 ASC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE ((((- (rt0.c3)))*(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c3 END))) ORDER BY rt0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c3)))*(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c3 END))) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c2 ASC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE ((((- (rt0.c3)))*(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c3 END))) ORDER BY rt0.c2 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (LIKELY(DISTINCT rt0.c0))));
SELECT SUM(count) FROM (SELECT (((~ (LIKELY(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (LIKELY(DISTINCT rt0.c0))));
SELECT SUM(count) FROM (SELECT (((~ (LIKELY(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (LIKELY(DISTINCT rt0.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY x'' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY x'' ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY x'' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY x'' ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY x'' ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt1 WHERE ((NOT (CAST(NULL AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((NOT (CAST(NULL AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((NOT (CAST(NULL AS INTEGER))));
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON ((((((((x'')OR(NULL)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c2)))))OR(('-1637745360' IN (rt0.c3, rt0.c1)))))OR(((rt0.c0)/(rt0.c1)))) WHERE (((rt0.c0 IN ()) IN ())) ORDER BY ((((rt0.c1))<>((rt0.c1))) IN ()), (+ ((rt0.c2 IN ())))  NULLS LAST, rt0.c3 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 IN ()) IN ())) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((((((x'')OR(NULL)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c2)))))OR(('-1637745360' IN (rt0.c3, rt0.c1)))))OR(((rt0.c0)/(rt0.c1)))) ORDER BY ((((rt0.c1))<>((rt0.c1))) IN ()), (+ ((rt0.c2 IN ())))  NULLS LAST, rt0.c3 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON ((((((((x'')OR(NULL)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c2)))))OR(('-1637745360' IN (rt0.c3, rt0.c1)))))OR(((rt0.c0)/(rt0.c1)))) WHERE (((rt0.c0 IN ()) IN ())) ORDER BY ((((rt0.c1))<>((rt0.c1))) IN ()), (+ ((rt0.c2 IN ())))  NULLS LAST, rt0.c3 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 IN ()) IN ())) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((((((x'')OR(NULL)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c2)))))OR(('-1637745360' IN (rt0.c3, rt0.c1)))))OR(((rt0.c0)/(rt0.c1)))) ORDER BY ((((rt0.c1))<>((rt0.c1))) IN ()), (+ ((rt0.c2 IN ())))  NULLS LAST, rt0.c3 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON ((((((((x'')OR(NULL)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c2)))))OR(('-1637745360' IN (rt0.c3, rt0.c1)))))OR(((rt0.c0)/(rt0.c1)))) WHERE (((rt0.c0 IN ()) IN ())) ORDER BY ((((rt0.c1))<>((rt0.c1))) IN ()), (+ ((rt0.c2 IN ())))  NULLS LAST, rt0.c3 DESC  NULLS LAST;
SELECT * FROM rt0, vt1 WHERE (((LIKELY(DISTINCT rt0.c3)) BETWEEN ((rt0.c0 IN (vt1.c0))) AND (((rt0.c1)|(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((LIKELY(DISTINCT rt0.c3)) BETWEEN ((rt0.c0 IN (vt1.c0))) AND (((rt0.c1)|(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((LIKELY(DISTINCT rt0.c3)) BETWEEN ((rt0.c0 IN (vt1.c0))) AND (((rt0.c1)|(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((LIKELY(DISTINCT rt0.c3)) BETWEEN ((rt0.c0 IN (vt1.c0))) AND (((rt0.c1)|(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((LIKELY(DISTINCT rt0.c3)) BETWEEN ((rt0.c0 IN (vt1.c0))) AND (((rt0.c1)|(rt0.c0)))));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON rt0.c2 WHERE (CAST(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END AS NUMERIC)) ORDER BY '-289173684', ((((vt1.c0)+(rt0.c3)))*((rt0.c2 IN (rt0.c2)))), (((rt0.c2 IN ()))-((rt0.c2 IN (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END AS NUMERIC)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON rt0.c2 ORDER BY '-289173684', ((((vt1.c0)+(rt0.c3)))*((rt0.c2 IN (rt0.c2)))), (((rt0.c2 IN ()))-((rt0.c2 IN (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON rt0.c2 WHERE (CAST(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END AS NUMERIC)) ORDER BY '-289173684', ((((vt1.c0)+(rt0.c3)))*((rt0.c2 IN (rt0.c2)))), (((rt0.c2 IN ()))-((rt0.c2 IN (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END AS NUMERIC)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON rt0.c2 ORDER BY '-289173684', ((((vt1.c0)+(rt0.c3)))*((rt0.c2 IN (rt0.c2)))), (((rt0.c2 IN ()))-((rt0.c2 IN (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON rt0.c2 WHERE (CAST(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END AS NUMERIC)) ORDER BY '-289173684', ((((vt1.c0)+(rt0.c3)))*((rt0.c2 IN (rt0.c2)))), (((rt0.c2 IN ()))-((rt0.c2 IN (vt1.c0))));
SELECT * FROM rt0, vt1 WHERE ((((rt0.c0) NOT NULL) IN ())) ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE vt1.c0 END) NOT BETWEEN ((vt1.c0 IN (rt0.c3, rt0.c0))) AND ((+ (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE vt1.c0 END) NOT BETWEEN ((vt1.c0 IN (rt0.c3, rt0.c0))) AND ((+ (vt1.c0)))));
SELECT * FROM rt0, vt1 WHERE ((((rt0.c0) NOT NULL) IN ())) ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE vt1.c0 END) NOT BETWEEN ((vt1.c0 IN (rt0.c3, rt0.c0))) AND ((+ (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE vt1.c0 END) NOT BETWEEN ((vt1.c0 IN (rt0.c3, rt0.c0))) AND ((+ (vt1.c0)))));
SELECT * FROM rt0, vt1 WHERE ((((rt0.c0) NOT NULL) IN ())) ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE vt1.c0 END) NOT BETWEEN ((vt1.c0 IN (rt0.c3, rt0.c0))) AND ((+ (vt1.c0))));
SELECT ALL * FROM vt1 WHERE (SQLITE_SOURCE_ID()) ORDER BY ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((vt1.c0)-(vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt1 ORDER BY ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((vt1.c0)-(vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (SQLITE_SOURCE_ID()) ORDER BY ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((vt1.c0)-(vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt1 ORDER BY ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((vt1.c0)-(vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (SQLITE_SOURCE_ID()) ORDER BY ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((vt1.c0)-(vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3)))OR((+ (rt0.c0)))))OR((~ (rt0.c2))))) ORDER BY ((rt0.c2) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3)))OR((+ (rt0.c0)))))OR((~ (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2) NOTNULL));
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3)))OR((+ (rt0.c0)))))OR((~ (rt0.c2))))) ORDER BY ((rt0.c2) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3)))OR((+ (rt0.c0)))))OR((~ (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2) NOTNULL));
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3)))OR((+ (rt0.c0)))))OR((~ (rt0.c2))))) ORDER BY ((rt0.c2) NOTNULL);
SELECT * FROM vt1 WHERE (IFNULL(DISTINCT vt1.c0 COLLATE NOCASE, ((vt1.c0)%(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT vt1.c0 COLLATE NOCASE, ((vt1.c0)%(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (IFNULL(DISTINCT vt1.c0 COLLATE NOCASE, ((vt1.c0)%(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT vt1.c0 COLLATE NOCASE, ((vt1.c0)%(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (IFNULL(DISTINCT vt1.c0 COLLATE NOCASE, ((vt1.c0)%(vt1.c0))));
SELECT ALL * FROM vt1 WHERE ((vt1.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((vt1.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((vt1.c0 IN ()) COLLATE BINARY);
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON (((0.566751072030415))<(((- (rt0.c1))))) WHERE ((TRIM(rt0.c3) IN ())) ORDER BY CASE WHEN ((((rt0.c3)OR(rt0.c0)))OR(vt1.c0)) THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END WHEN CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END THEN ((rt0.c1)<<(rt0.c2)) WHEN CASE WHEN vt1.c0 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '2041647814' THEN rt0.c3 WHEN rt0.c0 THEN NULL WHEN rt0.c2 THEN rt0.c1 END THEN (rt0.c1 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((TRIM(rt0.c3) IN ())) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON (((0.566751072030415))<(((- (rt0.c1))))) ORDER BY CASE WHEN ((((rt0.c3)OR(rt0.c0)))OR(vt1.c0)) THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END WHEN CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END THEN ((rt0.c1)<<(rt0.c2)) WHEN CASE WHEN vt1.c0 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '2041647814' THEN rt0.c3 WHEN rt0.c0 THEN NULL WHEN rt0.c2 THEN rt0.c1 END THEN (rt0.c1 IN ()) END  NULLS LAST);
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON (((0.566751072030415))<(((- (rt0.c1))))) WHERE ((TRIM(rt0.c3) IN ())) ORDER BY CASE WHEN ((((rt0.c3)OR(rt0.c0)))OR(vt1.c0)) THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END WHEN CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END THEN ((rt0.c1)<<(rt0.c2)) WHEN CASE WHEN vt1.c0 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '2041647814' THEN rt0.c3 WHEN rt0.c0 THEN NULL WHEN rt0.c2 THEN rt0.c1 END THEN (rt0.c1 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((TRIM(rt0.c3) IN ())) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON (((0.566751072030415))<(((- (rt0.c1))))) ORDER BY CASE WHEN ((((rt0.c3)OR(rt0.c0)))OR(vt1.c0)) THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END WHEN CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END THEN ((rt0.c1)<<(rt0.c2)) WHEN CASE WHEN vt1.c0 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '2041647814' THEN rt0.c3 WHEN rt0.c0 THEN NULL WHEN rt0.c2 THEN rt0.c1 END THEN (rt0.c1 IN ()) END  NULLS LAST);
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON (((0.566751072030415))<(((- (rt0.c1))))) WHERE ((TRIM(rt0.c3) IN ())) ORDER BY CASE WHEN ((((rt0.c3)OR(rt0.c0)))OR(vt1.c0)) THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END WHEN CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END THEN ((rt0.c1)<<(rt0.c2)) WHEN CASE WHEN vt1.c0 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '2041647814' THEN rt0.c3 WHEN rt0.c0 THEN NULL WHEN rt0.c2 THEN rt0.c1 END THEN (rt0.c1 IN ()) END  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)>(vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)>(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)>(vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)>(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)>(vt1.c0)) COLLATE BINARY);
SELECT * FROM rt0, vt1 WHERE ((~ (0.6448067525610711))) ORDER BY (NOT (((vt1.c0)==(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (0.6448067525610711))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (NOT (((vt1.c0)==(rt0.c0))))  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE ((~ (0.6448067525610711))) ORDER BY (NOT (((vt1.c0)==(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (0.6448067525610711))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (NOT (((vt1.c0)==(rt0.c0))))  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE ((~ (0.6448067525610711))) ORDER BY (NOT (((vt1.c0)==(rt0.c0))))  NULLS FIRST;
SELECT * FROM vt1 WHERE (CASE ((vt1.c0)%(vt1.c0))  WHEN TRIM(vt1.c0, vt1.c0) THEN ((vt1.c0)-(vt1.c0)) ELSE json_remove(vt1.c0, vt1.c0, vt1.c0, vt1.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)%(vt1.c0))  WHEN TRIM(vt1.c0, vt1.c0) THEN ((vt1.c0)-(vt1.c0)) ELSE json_remove(vt1.c0, vt1.c0, vt1.c0, vt1.c0) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE ((vt1.c0)%(vt1.c0))  WHEN TRIM(vt1.c0, vt1.c0) THEN ((vt1.c0)-(vt1.c0)) ELSE json_remove(vt1.c0, vt1.c0, vt1.c0, vt1.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)%(vt1.c0))  WHEN TRIM(vt1.c0, vt1.c0) THEN ((vt1.c0)-(vt1.c0)) ELSE json_remove(vt1.c0, vt1.c0, vt1.c0, vt1.c0) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1, rt0 WHERE (NULLIF(CASE WHEN rt0.c0 THEN rt0.c2 END, ((((vt1.c0)AND(vt1.c0)))OR(rt0.c0)))) ORDER BY CAST(x'' AS NUMERIC) DESC  NULLS FIRST, UNLIKELY((rt0.c2 IN ()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(CASE WHEN rt0.c0 THEN rt0.c2 END, ((((vt1.c0)AND(vt1.c0)))OR(rt0.c0)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(x'' AS NUMERIC) DESC  NULLS FIRST, UNLIKELY((rt0.c2 IN ()))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (NULLIF(CASE WHEN rt0.c0 THEN rt0.c2 END, ((((vt1.c0)AND(vt1.c0)))OR(rt0.c0)))) ORDER BY CAST(x'' AS NUMERIC) DESC  NULLS FIRST, UNLIKELY((rt0.c2 IN ()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(CASE WHEN rt0.c0 THEN rt0.c2 END, ((((vt1.c0)AND(vt1.c0)))OR(rt0.c0)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(x'' AS NUMERIC) DESC  NULLS FIRST, UNLIKELY((rt0.c2 IN ()))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (NULLIF(CASE WHEN rt0.c0 THEN rt0.c2 END, ((((vt1.c0)AND(vt1.c0)))OR(rt0.c0)))) ORDER BY CAST(x'' AS NUMERIC) DESC  NULLS FIRST, UNLIKELY((rt0.c2 IN ()))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt1 NOT INDEXED WHERE (CASE WHEN ((rt0.c0) ISNULL) THEN ((rt0.c1)GLOB(0.49780973980107124)) WHEN ((rt0.c1)>>(rt0.c2)) THEN NULL WHEN ((((vt1.c0)OR(rt0.c0)))AND(rt0.c0)) THEN (rt0.c1 IN ()) ELSE CASE rt0.c3  WHEN vt1.c0 THEN 0.26005744178451584 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) ISNULL) THEN ((rt0.c1)GLOB(0.49780973980107124)) WHEN ((rt0.c1)>>(rt0.c2)) THEN NULL WHEN ((((vt1.c0)OR(rt0.c0)))AND(rt0.c0)) THEN (rt0.c1 IN ()) ELSE CASE rt0.c3  WHEN vt1.c0 THEN 0.26005744178451584 END END) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 NOT INDEXED WHERE (CASE WHEN ((rt0.c0) ISNULL) THEN ((rt0.c1)GLOB(0.49780973980107124)) WHEN ((rt0.c1)>>(rt0.c2)) THEN NULL WHEN ((((vt1.c0)OR(rt0.c0)))AND(rt0.c0)) THEN (rt0.c1 IN ()) ELSE CASE rt0.c3  WHEN vt1.c0 THEN 0.26005744178451584 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) ISNULL) THEN ((rt0.c1)GLOB(0.49780973980107124)) WHEN ((rt0.c1)>>(rt0.c2)) THEN NULL WHEN ((((vt1.c0)OR(rt0.c0)))AND(rt0.c0)) THEN (rt0.c1 IN ()) ELSE CASE rt0.c3  WHEN vt1.c0 THEN 0.26005744178451584 END END) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 NOT INDEXED WHERE (CASE WHEN ((rt0.c0) ISNULL) THEN ((rt0.c1)GLOB(0.49780973980107124)) WHEN ((rt0.c1)>>(rt0.c2)) THEN NULL WHEN ((((vt1.c0)OR(rt0.c0)))AND(rt0.c0)) THEN (rt0.c1 IN ()) ELSE CASE rt0.c3  WHEN vt1.c0 THEN 0.26005744178451584 END END);
SELECT ALL * FROM vt1 WHERE ((((((((((NULL)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) IN (((vt1.c0)-(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((NULL)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) IN (((vt1.c0)-(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((((((NULL)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) IN (((vt1.c0)-(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((NULL)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) IN (((vt1.c0)-(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((((((NULL)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) IN (((vt1.c0)-(vt1.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (TRIM(CASE WHEN rt0.c0 THEN '675gQw' ELSE rt0.c0 END, ((rt0.c1) IS FALSE))) ORDER BY (NOT (((((rt0.c3)OR('')))OR(rt0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CASE WHEN rt0.c0 THEN '675gQw' ELSE rt0.c0 END, ((rt0.c1) IS FALSE))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((((rt0.c3)OR('')))OR(rt0.c3)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (TRIM(CASE WHEN rt0.c0 THEN '675gQw' ELSE rt0.c0 END, ((rt0.c1) IS FALSE))) ORDER BY (NOT (((((rt0.c3)OR('')))OR(rt0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CASE WHEN rt0.c0 THEN '675gQw' ELSE rt0.c0 END, ((rt0.c1) IS FALSE))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((((rt0.c3)OR('')))OR(rt0.c3)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (TRIM(CASE WHEN rt0.c0 THEN '675gQw' ELSE rt0.c0 END, ((rt0.c1) IS FALSE))) ORDER BY (NOT (((((rt0.c3)OR('')))OR(rt0.c3)))) ASC;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((vt1.c0)LIKE(rt0.c2))) BETWEEN (TYPEOF(rt0.c0)) AND (SQLITE_VERSION()))) ORDER BY QUOTE(((rt0.c1) ISNULL))  NULLS LAST, (((((~ (rt0.c0)))AND('-1682976045')))OR(((rt0.c2) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)LIKE(rt0.c2))) BETWEEN (TYPEOF(rt0.c0)) AND (SQLITE_VERSION()))) IS TRUE)  as count FROM vt1, rt0 ORDER BY QUOTE(((rt0.c1) ISNULL))  NULLS LAST, (((((~ (rt0.c0)))AND('-1682976045')))OR(((rt0.c2) NOTNULL))) ASC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((vt1.c0)LIKE(rt0.c2))) BETWEEN (TYPEOF(rt0.c0)) AND (SQLITE_VERSION()))) ORDER BY QUOTE(((rt0.c1) ISNULL))  NULLS LAST, (((((~ (rt0.c0)))AND('-1682976045')))OR(((rt0.c2) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)LIKE(rt0.c2))) BETWEEN (TYPEOF(rt0.c0)) AND (SQLITE_VERSION()))) IS TRUE)  as count FROM vt1, rt0 ORDER BY QUOTE(((rt0.c1) ISNULL))  NULLS LAST, (((((~ (rt0.c0)))AND('-1682976045')))OR(((rt0.c2) NOTNULL))) ASC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((vt1.c0)LIKE(rt0.c2))) BETWEEN (TYPEOF(rt0.c0)) AND (SQLITE_VERSION()))) ORDER BY QUOTE(((rt0.c1) ISNULL))  NULLS LAST, (((((~ (rt0.c0)))AND('-1682976045')))OR(((rt0.c2) NOTNULL))) ASC;
SELECT COUNT(*) FROM vt1 WHERE (json_valid(((NULL)|(vt1.c0)))) ORDER BY vt1.c0, ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_valid(((NULL)|(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0, ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) COLLATE NOCASE ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (json_valid(((NULL)|(vt1.c0)))) ORDER BY vt1.c0, ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_valid(((NULL)|(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0, ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) COLLATE NOCASE ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (json_valid(((NULL)|(vt1.c0)))) ORDER BY vt1.c0, ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) COLLATE NOCASE ASC  NULLS LAST;
SELECT * FROM vt1 WHERE ((((+ (vt1.c0))) ISNULL)) ORDER BY (~ ((vt1.c0 IN (x'')))) DESC  NULLS LAST, (((((((((vt1.c0 IN ()))OR((vt1.c0 IN (vt1.c0)))))OR(LOWER(DISTINCT vt1.c0))))OR('kR%wPFP')))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ASC  NULLS LAST, ((vt1.c0) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY (~ ((vt1.c0 IN (x'')))) DESC  NULLS LAST, (((((((((vt1.c0 IN ()))OR((vt1.c0 IN (vt1.c0)))))OR(LOWER(DISTINCT vt1.c0))))OR('kR%wPFP')))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ASC  NULLS LAST, ((vt1.c0) NOT NULL)  NULLS FIRST);
SELECT * FROM vt1 WHERE ((((+ (vt1.c0))) ISNULL)) ORDER BY (~ ((vt1.c0 IN (x'')))) DESC  NULLS LAST, (((((((((vt1.c0 IN ()))OR((vt1.c0 IN (vt1.c0)))))OR(LOWER(DISTINCT vt1.c0))))OR('kR%wPFP')))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ASC  NULLS LAST, ((vt1.c0) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY (~ ((vt1.c0 IN (x'')))) DESC  NULLS LAST, (((((((((vt1.c0 IN ()))OR((vt1.c0 IN (vt1.c0)))))OR(LOWER(DISTINCT vt1.c0))))OR('kR%wPFP')))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ASC  NULLS LAST, ((vt1.c0) NOT NULL)  NULLS FIRST);
SELECT * FROM vt1 WHERE ((((+ (vt1.c0))) ISNULL)) ORDER BY (~ ((vt1.c0 IN (x'')))) DESC  NULLS LAST, (((((((((vt1.c0 IN ()))OR((vt1.c0 IN (vt1.c0)))))OR(LOWER(DISTINCT vt1.c0))))OR('kR%wPFP')))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ASC  NULLS LAST, ((vt1.c0) NOT NULL)  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (x'685ab9c4');
SELECT SUM(count) FROM (SELECT ((x'685ab9c4') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (x'685ab9c4');
SELECT SUM(count) FROM (SELECT ((x'685ab9c4') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (x'685ab9c4');
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c0 IN ())) ORDER BY CASE (- (rt0.c3))  WHEN CAST(rt0.c0 AS TEXT) THEN (((rt0.c3))>=((NULL))) ELSE ((rt0.c0)AND(rt0.c0)) END, CAST(((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c2)))AND(NULL)))AND(rt0.c2)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ())) IS TRUE)  as count FROM rt0 ORDER BY CASE (- (rt0.c3))  WHEN CAST(rt0.c0 AS TEXT) THEN (((rt0.c3))>=((NULL))) ELSE ((rt0.c0)AND(rt0.c0)) END, CAST(((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c2)))AND(NULL)))AND(rt0.c2)) AS REAL));
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c0 IN ())) ORDER BY CASE (- (rt0.c3))  WHEN CAST(rt0.c0 AS TEXT) THEN (((rt0.c3))>=((NULL))) ELSE ((rt0.c0)AND(rt0.c0)) END, CAST(((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c2)))AND(NULL)))AND(rt0.c2)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ())) IS TRUE)  as count FROM rt0 ORDER BY CASE (- (rt0.c3))  WHEN CAST(rt0.c0 AS TEXT) THEN (((rt0.c3))>=((NULL))) ELSE ((rt0.c0)AND(rt0.c0)) END, CAST(((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c2)))AND(NULL)))AND(rt0.c2)) AS REAL));
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c0 IN ())) ORDER BY CASE (- (rt0.c3))  WHEN CAST(rt0.c0 AS TEXT) THEN (((rt0.c3))>=((NULL))) ELSE ((rt0.c0)AND(rt0.c0)) END, CAST(((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c2)))AND(NULL)))AND(rt0.c2)) AS REAL);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((CAST(rt0.c3 AS BLOB)) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND ((((rt0.c2, rt0.c2, rt0.c3))>((rt0.c0, rt0.c2, x'')))))) ORDER BY ((CAST(rt0.c2 AS INTEGER))<=(rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS BLOB)) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND ((((rt0.c2, rt0.c2, rt0.c3))>((rt0.c0, rt0.c2, x'')))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((CAST(rt0.c2 AS INTEGER))<=(rt0.c2))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((CAST(rt0.c3 AS BLOB)) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND ((((rt0.c2, rt0.c2, rt0.c3))>((rt0.c0, rt0.c2, x'')))))) ORDER BY ((CAST(rt0.c2 AS INTEGER))<=(rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS BLOB)) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND ((((rt0.c2, rt0.c2, rt0.c3))>((rt0.c0, rt0.c2, x'')))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((CAST(rt0.c2 AS INTEGER))<=(rt0.c2))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((CAST(rt0.c3 AS BLOB)) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND ((((rt0.c2, rt0.c2, rt0.c3))>((rt0.c0, rt0.c2, x'')))))) ORDER BY ((CAST(rt0.c2 AS INTEGER))<=(rt0.c2))  NULLS FIRST;
SELECT * FROM rt0, vt1 WHERE (((rt0.c2 COLLATE RTRIM)AND((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM)AND((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((rt0.c2 COLLATE RTRIM)AND((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM)AND((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((rt0.c2 COLLATE RTRIM)AND((rt0.c2 IN ()))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE WHEN ((rt0.c1)IS NOT(vt1.c0)) THEN ((vt1.c0)/(rt0.c1)) ELSE (~ (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1)IS NOT(vt1.c0)) THEN ((vt1.c0)/(rt0.c1)) ELSE (~ (rt0.c1)) END) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE WHEN ((rt0.c1)IS NOT(vt1.c0)) THEN ((vt1.c0)/(rt0.c1)) ELSE (~ (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1)IS NOT(vt1.c0)) THEN ((vt1.c0)/(rt0.c1)) ELSE (~ (rt0.c1)) END) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE WHEN ((rt0.c1)IS NOT(vt1.c0)) THEN ((vt1.c0)/(rt0.c1)) ELSE (~ (rt0.c1)) END);
SELECT * FROM rt0 WHERE (((((CAST(rt0.c2 AS REAL))OR(CAST(rt0.c3 AS BLOB))))AND(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c2 AS REAL))OR(CAST(rt0.c3 AS BLOB))))AND(rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((CAST(rt0.c2 AS REAL))OR(CAST(rt0.c3 AS BLOB))))AND(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c2 AS REAL))OR(CAST(rt0.c3 AS BLOB))))AND(rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((CAST(rt0.c2 AS REAL))OR(CAST(rt0.c3 AS BLOB))))AND(rt0.c2)));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt1 ON rt0.c3 COLLATE BINARY WHERE (CAST(((rt0.c3)<=(vt1.c0)) AS REAL)) ORDER BY rt0.c3;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3)<=(vt1.c0)) AS REAL)) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON rt0.c3 COLLATE BINARY ORDER BY rt0.c3);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt1 ON rt0.c3 COLLATE BINARY WHERE (CAST(((rt0.c3)<=(vt1.c0)) AS REAL)) ORDER BY rt0.c3;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3)<=(vt1.c0)) AS REAL)) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON rt0.c3 COLLATE BINARY ORDER BY rt0.c3);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt1 ON rt0.c3 COLLATE BINARY WHERE (CAST(((rt0.c3)<=(vt1.c0)) AS REAL)) ORDER BY rt0.c3;
SELECT COUNT(*) FROM vt1, rt0 WHERE (((IFNULL(rt0.c1, rt0.c3))IS(((rt0.c2) NOTNULL)))) ORDER BY ((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((IFNULL(rt0.c1, rt0.c3))IS(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2))) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((IFNULL(rt0.c1, rt0.c3))IS(((rt0.c2) NOTNULL)))) ORDER BY ((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((IFNULL(rt0.c1, rt0.c3))IS(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2))) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((IFNULL(rt0.c1, rt0.c3))IS(((rt0.c2) NOTNULL)))) ORDER BY ((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2))) NOTNULL)  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c3) NOTNULL) COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) NOTNULL) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c3) NOTNULL) COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) NOTNULL) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c3) NOTNULL) COLLATE BINARY COLLATE NOCASE);
SELECT * FROM rt0 WHERE ((((rt0.c0)<(rt0.c1)) IN ())) ORDER BY CAST((rt0.c0 IN ()) AS BLOB) ASC, CASE ((((rt0.c2)AND(rt0.c3)))AND(rt0.c1))  WHEN (rt0.c3 IN ()) THEN NULL WHEN x'' THEN x'' WHEN ((rt0.c1)>(rt0.c3)) THEN ((rt0.c2)-(rt0.c1)) ELSE ((rt0.c1) BETWEEN (rt0.c3) AND (x'')) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)<(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY CAST((rt0.c0 IN ()) AS BLOB) ASC, CASE ((((rt0.c2)AND(rt0.c3)))AND(rt0.c1))  WHEN (rt0.c3 IN ()) THEN NULL WHEN x'' THEN x'' WHEN ((rt0.c1)>(rt0.c3)) THEN ((rt0.c2)-(rt0.c1)) ELSE ((rt0.c1) BETWEEN (rt0.c3) AND (x'')) END  NULLS LAST);
SELECT * FROM rt0 WHERE ((((rt0.c0)<(rt0.c1)) IN ())) ORDER BY CAST((rt0.c0 IN ()) AS BLOB) ASC, CASE ((((rt0.c2)AND(rt0.c3)))AND(rt0.c1))  WHEN (rt0.c3 IN ()) THEN NULL WHEN x'' THEN x'' WHEN ((rt0.c1)>(rt0.c3)) THEN ((rt0.c2)-(rt0.c1)) ELSE ((rt0.c1) BETWEEN (rt0.c3) AND (x'')) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)<(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY CAST((rt0.c0 IN ()) AS BLOB) ASC, CASE ((((rt0.c2)AND(rt0.c3)))AND(rt0.c1))  WHEN (rt0.c3 IN ()) THEN NULL WHEN x'' THEN x'' WHEN ((rt0.c1)>(rt0.c3)) THEN ((rt0.c2)-(rt0.c1)) ELSE ((rt0.c1) BETWEEN (rt0.c3) AND (x'')) END  NULLS LAST);
SELECT * FROM rt0 WHERE ((((rt0.c0)<(rt0.c1)) IN ())) ORDER BY CAST((rt0.c0 IN ()) AS BLOB) ASC, CASE ((((rt0.c2)AND(rt0.c3)))AND(rt0.c1))  WHEN (rt0.c3 IN ()) THEN NULL WHEN x'' THEN x'' WHEN ((rt0.c1)>(rt0.c3)) THEN ((rt0.c2)-(rt0.c1)) ELSE ((rt0.c1) BETWEEN (rt0.c3) AND (x'')) END  NULLS LAST;
SELECT * FROM vt1, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (NULL);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1) NOTNULL) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1) NOTNULL) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1) NOTNULL) IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ((vt1.c0)%(vt1.c0))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN (vt1.c0 IN ()) END) ORDER BY ((NULL)-((~ (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)%(vt1.c0))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN (vt1.c0 IN ()) END) IS TRUE)  as count FROM vt1 ORDER BY ((NULL)-((~ (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ((vt1.c0)%(vt1.c0))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN (vt1.c0 IN ()) END) ORDER BY ((NULL)-((~ (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)%(vt1.c0))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN (vt1.c0 IN ()) END) IS TRUE)  as count FROM vt1 ORDER BY ((NULL)-((~ (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ((vt1.c0)%(vt1.c0))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN (vt1.c0 IN ()) END) ORDER BY ((NULL)-((~ (vt1.c0))));
SELECT ALL * FROM rt0, vt1 WHERE (((rt0.c1) NOT BETWEEN (('-486485735' IN ())) AND (CASE WHEN rt0.c3 THEN vt1.c0 ELSE 'Qg0)폵Ḏ	' END)));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOT BETWEEN (('-486485735' IN ())) AND (CASE WHEN rt0.c3 THEN vt1.c0 ELSE 'Qg0)폵Ḏ	' END))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((rt0.c1) NOT BETWEEN (('-486485735' IN ())) AND (CASE WHEN rt0.c3 THEN vt1.c0 ELSE 'Qg0)폵Ḏ	' END)));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOT BETWEEN (('-486485735' IN ())) AND (CASE WHEN rt0.c3 THEN vt1.c0 ELSE 'Qg0)폵Ḏ	' END))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((rt0.c1) NOT BETWEEN (('-486485735' IN ())) AND (CASE WHEN rt0.c3 THEN vt1.c0 ELSE 'Qg0)폵Ḏ	' END)));
SELECT ALL * FROM vt1 WHERE (CASE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))  WHEN vt1.c0 THEN ((vt1.c0)%(vt1.c0)) WHEN ((vt1.c0) NOT NULL) THEN (vt1.c0 IN (vt1.c0, vt1.c0)) WHEN ((vt1.c0)>=(vt1.c0)) THEN ((vt1.c0) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))  WHEN vt1.c0 THEN ((vt1.c0)%(vt1.c0)) WHEN ((vt1.c0) NOT NULL) THEN (vt1.c0 IN (vt1.c0, vt1.c0)) WHEN ((vt1.c0)>=(vt1.c0)) THEN ((vt1.c0) ISNULL) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))  WHEN vt1.c0 THEN ((vt1.c0)%(vt1.c0)) WHEN ((vt1.c0) NOT NULL) THEN (vt1.c0 IN (vt1.c0, vt1.c0)) WHEN ((vt1.c0)>=(vt1.c0)) THEN ((vt1.c0) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))  WHEN vt1.c0 THEN ((vt1.c0)%(vt1.c0)) WHEN ((vt1.c0) NOT NULL) THEN (vt1.c0 IN (vt1.c0, vt1.c0)) WHEN ((vt1.c0)>=(vt1.c0)) THEN ((vt1.c0) ISNULL) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))  WHEN vt1.c0 THEN ((vt1.c0)%(vt1.c0)) WHEN ((vt1.c0) NOT NULL) THEN (vt1.c0 IN (vt1.c0, vt1.c0)) WHEN ((vt1.c0)>=(vt1.c0)) THEN ((vt1.c0) ISNULL) END);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((~ (((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c3))))) ORDER BY (((((rt0.c1)||(vt1.c0))))<=((((rt0.c3) NOTNULL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c3))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((rt0.c1)||(vt1.c0))))<=((((rt0.c3) NOTNULL)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((~ (((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c3))))) ORDER BY (((((rt0.c1)||(vt1.c0))))<=((((rt0.c3) NOTNULL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c3))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((rt0.c1)||(vt1.c0))))<=((((rt0.c3) NOTNULL)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((~ (((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c3))))) ORDER BY (((((rt0.c1)||(vt1.c0))))<=((((rt0.c3) NOTNULL)))) DESC  NULLS LAST;
SELECT * FROM rt0, vt1 WHERE (CASE ((rt0.c3)OR(rt0.c3))  WHEN CAST(vt1.c0 AS INTEGER) THEN ((((((((((((rt0.c1)OR(NULL)))AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c3)) END) ORDER BY LIKELY(DISTINCT '269-1997-1500 1218 iT')  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c3)OR(rt0.c3))  WHEN CAST(vt1.c0 AS INTEGER) THEN ((((((((((((rt0.c1)OR(NULL)))AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c3)) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY LIKELY(DISTINCT '269-1997-1500 1218 iT')  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (CASE ((rt0.c3)OR(rt0.c3))  WHEN CAST(vt1.c0 AS INTEGER) THEN ((((((((((((rt0.c1)OR(NULL)))AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c3)) END) ORDER BY LIKELY(DISTINCT '269-1997-1500 1218 iT')  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c3)OR(rt0.c3))  WHEN CAST(vt1.c0 AS INTEGER) THEN ((((((((((((rt0.c1)OR(NULL)))AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c3)) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY LIKELY(DISTINCT '269-1997-1500 1218 iT')  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (CASE ((rt0.c3)OR(rt0.c3))  WHEN CAST(vt1.c0 AS INTEGER) THEN ((((((((((((rt0.c1)OR(NULL)))AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c3)) END) ORDER BY LIKELY(DISTINCT '269-1997-1500 1218 iT')  NULLS LAST;
SELECT * FROM vt1, rt0 WHERE (HEX(rt0.c3 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((HEX(rt0.c3 COLLATE NOCASE)) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (HEX(rt0.c3 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((HEX(rt0.c3 COLLATE NOCASE)) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (HEX(rt0.c3 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c2) ISNULL))OR((((rt0.c1))>=((vt1.c0)))))) ORDER BY (CAST(rt0.c1 AS TEXT) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) ISNULL))OR((((rt0.c1))>=((vt1.c0)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (CAST(rt0.c1 AS TEXT) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c2) ISNULL))OR((((rt0.c1))>=((vt1.c0)))))) ORDER BY (CAST(rt0.c1 AS TEXT) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) ISNULL))OR((((rt0.c1))>=((vt1.c0)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (CAST(rt0.c1 AS TEXT) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c2) ISNULL))OR((((rt0.c1))>=((vt1.c0)))))) ORDER BY (CAST(rt0.c1 AS TEXT) IN ()) ASC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c0))))AND((NOT (vt1.c0))))) ORDER BY vt1.c0, ((((((((CASE vt1.c0  WHEN vt1.c0 THEN '' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)AND(vt1.c0 COLLATE NOCASE)))AND((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))))))AND(x'7d0e')))AND(CAST('3' AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0))))AND((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0, ((((((((CASE vt1.c0  WHEN vt1.c0 THEN '' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)AND(vt1.c0 COLLATE NOCASE)))AND((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))))))AND(x'7d0e')))AND(CAST('3' AS TEXT)))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c0))))AND((NOT (vt1.c0))))) ORDER BY vt1.c0, ((((((((CASE vt1.c0  WHEN vt1.c0 THEN '' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)AND(vt1.c0 COLLATE NOCASE)))AND((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))))))AND(x'7d0e')))AND(CAST('3' AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0))))AND((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0, ((((((((CASE vt1.c0  WHEN vt1.c0 THEN '' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)AND(vt1.c0 COLLATE NOCASE)))AND((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))))))AND(x'7d0e')))AND(CAST('3' AS TEXT)))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c0))))AND((NOT (vt1.c0))))) ORDER BY vt1.c0, ((((((((CASE vt1.c0  WHEN vt1.c0 THEN '' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)AND(vt1.c0 COLLATE NOCASE)))AND((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))))))AND(x'7d0e')))AND(CAST('3' AS TEXT)))  NULLS LAST;
SELECT * FROM vt1 WHERE ((((vt1.c0) IS FALSE) IN (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))))) ORDER BY 0X63c1ec9d;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) IS FALSE) IN (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY 0x63c1ec9d);
SELECT * FROM vt1 WHERE ((((vt1.c0) IS FALSE) IN (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))))) ORDER BY 0X63c1ec9d;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) IS FALSE) IN (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY 0x63c1ec9d);
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c1) NOTNULL))*(LIKELY(DISTINCT vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOTNULL))*(LIKELY(DISTINCT vt1.c0)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c1) NOTNULL))*(LIKELY(DISTINCT vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOTNULL))*(LIKELY(DISTINCT vt1.c0)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c1) NOTNULL))*(LIKELY(DISTINCT vt1.c0))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)AND(1.754255195E9)))AND(vt1.c0))) NOT BETWEEN (((vt1.c0)AND(vt1.c0))) AND (((vt1.c0)AND(vt1.c0))))) ORDER BY (((~ (vt1.c0))) IS TRUE) DESC, IFNULL(NULL, ((x'e386')OR(vt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(1.754255195E9)))AND(vt1.c0))) NOT BETWEEN (((vt1.c0)AND(vt1.c0))) AND (((vt1.c0)AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((~ (vt1.c0))) IS TRUE) DESC, IFNULL(NULL, ((x'e386')OR(vt1.c0))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)AND(1.754255195E9)))AND(vt1.c0))) NOT BETWEEN (((vt1.c0)AND(vt1.c0))) AND (((vt1.c0)AND(vt1.c0))))) ORDER BY (((~ (vt1.c0))) IS TRUE) DESC, IFNULL(NULL, ((x'e386')OR(vt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(1.754255195E9)))AND(vt1.c0))) NOT BETWEEN (((vt1.c0)AND(vt1.c0))) AND (((vt1.c0)AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((~ (vt1.c0))) IS TRUE) DESC, IFNULL(NULL, ((x'e386')OR(vt1.c0))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)AND(1.754255195E9)))AND(vt1.c0))) NOT BETWEEN (((vt1.c0)AND(vt1.c0))) AND (((vt1.c0)AND(vt1.c0))))) ORDER BY (((~ (vt1.c0))) IS TRUE) DESC, IFNULL(NULL, ((x'e386')OR(vt1.c0))) DESC;
SELECT COUNT(*) FROM vt1, rt0 WHERE ((LOWER(rt0.c1) IN ())) ORDER BY CASE WHEN (((rt0.c3))==((vt1.c0))) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) ELSE (+ (rt0.c3)) END;
SELECT SUM(count) FROM (SELECT (((LOWER(rt0.c1) IN ())) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE WHEN (((rt0.c3))==((vt1.c0))) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) ELSE (+ (rt0.c3)) END);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((LOWER(rt0.c1) IN ())) ORDER BY CASE WHEN (((rt0.c3))==((vt1.c0))) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) ELSE (+ (rt0.c3)) END;
SELECT SUM(count) FROM (SELECT (((LOWER(rt0.c1) IN ())) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE WHEN (((rt0.c3))==((vt1.c0))) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) ELSE (+ (rt0.c3)) END);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((LOWER(rt0.c1) IN ())) ORDER BY CASE WHEN (((rt0.c3))==((vt1.c0))) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) ELSE (+ (rt0.c3)) END;
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON ((((((rt0.c1)AND(rt0.c3)))OR(rt0.c0))) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))) AND (json_array_length(rt0.c0, rt0.c1))) WHERE (x'') ORDER BY CAST(((rt0.c3)*(rt0.c3)) AS BLOB), (~ (((rt0.c3)*(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((((((rt0.c1)AND(rt0.c3)))OR(rt0.c0))) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))) AND (json_array_length(rt0.c0, rt0.c1))) ORDER BY CAST(((rt0.c3)*(rt0.c3)) AS BLOB), (~ (((rt0.c3)*(vt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON ((((((rt0.c1)AND(rt0.c3)))OR(rt0.c0))) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))) AND (json_array_length(rt0.c0, rt0.c1))) WHERE (x'') ORDER BY CAST(((rt0.c3)*(rt0.c3)) AS BLOB), (~ (((rt0.c3)*(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((((((rt0.c1)AND(rt0.c3)))OR(rt0.c0))) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))) AND (json_array_length(rt0.c0, rt0.c1))) ORDER BY CAST(((rt0.c3)*(rt0.c3)) AS BLOB), (~ (((rt0.c3)*(vt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY CAST(rt0.c0 AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c0 AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY CAST(rt0.c0 AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c0 AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY CAST(rt0.c0 AS REAL)  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((((((CAST(rt0.c1 AS BLOB))OR((~ (0.9875843010800771)))))OR((+ (rt0.c3)))))OR(((NULL) IS FALSE))))AND(rt0.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt0.c1 AS BLOB))OR((~ (0.9875843010800771)))))OR((+ (rt0.c3)))))OR(((NULL) IS FALSE))))AND(rt0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((((CAST(rt0.c1 AS BLOB))OR((~ (0.9875843010800771)))))OR((+ (rt0.c3)))))OR(((NULL) IS FALSE))))AND(rt0.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt0.c1 AS BLOB))OR((~ (0.9875843010800771)))))OR((+ (rt0.c3)))))OR(((NULL) IS FALSE))))AND(rt0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((((CAST(rt0.c1 AS BLOB))OR((~ (0.9875843010800771)))))OR((+ (rt0.c3)))))OR(((NULL) IS FALSE))))AND(rt0.c3 COLLATE RTRIM)));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)AND(CAST(vt1.c0 AS NUMERIC))))AND(((vt1.c0)>>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)AND(CAST(vt1.c0 AS NUMERIC))))AND(((vt1.c0)>>(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)AND(CAST(vt1.c0 AS NUMERIC))))AND(((vt1.c0)>>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)AND(CAST(vt1.c0 AS NUMERIC))))AND(((vt1.c0)>>(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)AND(CAST(vt1.c0 AS NUMERIC))))AND(((vt1.c0)>>(vt1.c0)))));
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON x'' WHERE (((rt0.c3 COLLATE RTRIM)<((((rt0.c0, rt0.c1, vt1.c0)) BETWEEN ((rt0.c0, rt0.c2, vt1.c0)) AND ((rt0.c1, vt1.c0, rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE RTRIM)<((((rt0.c0, rt0.c1, vt1.c0)) BETWEEN ((rt0.c0, rt0.c2, vt1.c0)) AND ((rt0.c1, vt1.c0, rt0.c3)))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON x'');
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON x'' WHERE (((rt0.c3 COLLATE RTRIM)<((((rt0.c0, rt0.c1, vt1.c0)) BETWEEN ((rt0.c0, rt0.c2, vt1.c0)) AND ((rt0.c1, vt1.c0, rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE RTRIM)<((((rt0.c0, rt0.c1, vt1.c0)) BETWEEN ((rt0.c0, rt0.c2, vt1.c0)) AND ((rt0.c1, vt1.c0, rt0.c3)))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON x'');
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON x'' WHERE (((rt0.c3 COLLATE RTRIM)<((((rt0.c0, rt0.c1, vt1.c0)) BETWEEN ((rt0.c0, rt0.c2, vt1.c0)) AND ((rt0.c1, vt1.c0, rt0.c3))))));
SELECT ALL * FROM vt1, rt0 WHERE (((((((((((rt0.c3)AND(vt1.c0)))OR(rt0.c1)))AND(rt0.c2)))OR(x'56ea3326')))&(NULL COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c3)AND(vt1.c0)))OR(rt0.c1)))AND(rt0.c2)))OR(x'56ea3326')))&(NULL COLLATE NOCASE))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((((((((((rt0.c3)AND(vt1.c0)))OR(rt0.c1)))AND(rt0.c2)))OR(x'56ea3326')))&(NULL COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c3)AND(vt1.c0)))OR(rt0.c1)))AND(rt0.c2)))OR(x'56ea3326')))&(NULL COLLATE NOCASE))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((((((((((rt0.c3)AND(vt1.c0)))OR(rt0.c1)))AND(rt0.c2)))OR(x'56ea3326')))&(NULL COLLATE NOCASE)));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON x'' WHERE ((((vt1.c0, rt0.c2, NULL)) BETWEEN ((rt0.c1, vt1.c0, vt1.c0)) AND ((rt0.c1, rt0.c0, rt0.c1))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, rt0.c2, NULL)) BETWEEN ((rt0.c1, vt1.c0, vt1.c0)) AND ((rt0.c1, rt0.c0, rt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON x'');
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON x'' WHERE ((((vt1.c0, rt0.c2, NULL)) BETWEEN ((rt0.c1, vt1.c0, vt1.c0)) AND ((rt0.c1, rt0.c0, rt0.c1))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, rt0.c2, NULL)) BETWEEN ((rt0.c1, vt1.c0, vt1.c0)) AND ((rt0.c1, rt0.c0, rt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON x'');
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON x'' WHERE ((((vt1.c0, rt0.c2, NULL)) BETWEEN ((rt0.c1, vt1.c0, vt1.c0)) AND ((rt0.c1, rt0.c0, rt0.c1))) COLLATE RTRIM);
SELECT * FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM) NOT NULL)) ORDER BY HEX(DISTINCT CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END);
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY HEX(DISTINCT CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END));
SELECT * FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM) NOT NULL)) ORDER BY HEX(DISTINCT CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END);
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY HEX(DISTINCT CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END));
SELECT * FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM) NOT NULL)) ORDER BY HEX(DISTINCT CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 END))<((CAST(vt1.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT (((((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 END))<((CAST(vt1.c0 AS TEXT))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 END))<((CAST(vt1.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT (((((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 END))<((CAST(vt1.c0 AS TEXT))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 END))<((CAST(vt1.c0 AS TEXT)))));
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0 IN ()))AND(0.4651612522944427)))AND(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0 IN ()))AND(0.4651612522944427)))AND(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0 IN ()))AND(0.4651612522944427)))AND(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0 IN ()))AND(0.4651612522944427)))AND(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0 IN ()))AND(0.4651612522944427)))AND(vt1.c0)));
SELECT * FROM vt1 WHERE ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))!=((0.2191471832468268)))) ORDER BY ((((vt1.c0)&(vt1.c0))) BETWEEN ((- (vt1.c0))) AND ('Y')) ASC  NULLS LAST, ((('675gQw'))>=(((vt1.c0 IN (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))<>((0.2191471832468268)))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)&(vt1.c0))) BETWEEN ((- (vt1.c0))) AND ('Y')) ASC  NULLS LAST, ((('675gQw'))>=(((vt1.c0 IN (vt1.c0))))));
SELECT * FROM vt1 WHERE ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))!=((0.2191471832468268)))) ORDER BY ((((vt1.c0)&(vt1.c0))) BETWEEN ((- (vt1.c0))) AND ('Y')) ASC  NULLS LAST, ((('675gQw'))>=(((vt1.c0 IN (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))<>((0.2191471832468268)))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)&(vt1.c0))) BETWEEN ((- (vt1.c0))) AND ('Y')) ASC  NULLS LAST, ((('675gQw'))>=(((vt1.c0 IN (vt1.c0))))));
SELECT * FROM vt1 WHERE ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))!=((0.2191471832468268)))) ORDER BY ((((vt1.c0)&(vt1.c0))) BETWEEN ((- (vt1.c0))) AND ('Y')) ASC  NULLS LAST, ((('675gQw'))>=(((vt1.c0 IN (vt1.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT * FROM vt1, rt0 WHERE ((NOT (CAST(rt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((NOT (CAST(rt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((NOT (CAST(rt0.c1 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt1 WHERE (0.6149727736681623);
SELECT SUM(count) FROM (SELECT ((0.6149727736681623) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (0.6149727736681623);
SELECT SUM(count) FROM (SELECT ((0.6149727736681623) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (0.6149727736681623);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(((rt0.c3) BETWEEN (rt0.c1) AND (vt1.c0)) AS BLOB) WHERE ((((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3)), TOTAL_CHANGES(), ((rt0.c0)|(rt0.c0))))!=(((NOT (rt0.c1)), ((rt0.c0)/(rt0.c0)), ((rt0.c3)>(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3)), TOTAL_CHANGES(), ((rt0.c0)|(rt0.c0))))!=(((NOT (rt0.c1)), ((rt0.c0)/(rt0.c0)), ((rt0.c3)>(rt0.c2)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(((rt0.c3) BETWEEN (rt0.c1) AND (vt1.c0)) AS BLOB));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(((rt0.c3) BETWEEN (rt0.c1) AND (vt1.c0)) AS BLOB) WHERE ((((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3)), TOTAL_CHANGES(), ((rt0.c0)|(rt0.c0))))!=(((NOT (rt0.c1)), ((rt0.c0)/(rt0.c0)), ((rt0.c3)>(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3)), TOTAL_CHANGES(), ((rt0.c0)|(rt0.c0))))!=(((NOT (rt0.c1)), ((rt0.c0)/(rt0.c0)), ((rt0.c3)>(rt0.c2)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(((rt0.c3) BETWEEN (rt0.c1) AND (vt1.c0)) AS BLOB));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(((rt0.c3) BETWEEN (rt0.c1) AND (vt1.c0)) AS BLOB) WHERE ((((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3)), TOTAL_CHANGES(), ((rt0.c0)|(rt0.c0))))!=(((NOT (rt0.c1)), ((rt0.c0)/(rt0.c0)), ((rt0.c3)>(rt0.c2))))));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT ALL * FROM rt0 WHERE (CASE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END  WHEN '-1580948083' THEN rt0.c1 COLLATE NOCASE WHEN ((rt0.c1)>=(rt0.c3)) THEN ((rt0.c2) IS TRUE) WHEN ((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)) THEN (((rt0.c0)) BETWEEN ((rt0.c3)) AND (('l~R.F	N'))) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END  WHEN '-1580948083' THEN rt0.c1 COLLATE NOCASE WHEN ((rt0.c1)>=(rt0.c3)) THEN ((rt0.c2) IS TRUE) WHEN ((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)) THEN (((rt0.c0)) BETWEEN ((rt0.c3)) AND (('l~R.F	N'))) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END  WHEN '-1580948083' THEN rt0.c1 COLLATE NOCASE WHEN ((rt0.c1)>=(rt0.c3)) THEN ((rt0.c2) IS TRUE) WHEN ((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)) THEN (((rt0.c0)) BETWEEN ((rt0.c3)) AND (('l~R.F	N'))) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END  WHEN '-1580948083' THEN rt0.c1 COLLATE NOCASE WHEN ((rt0.c1)>=(rt0.c3)) THEN ((rt0.c2) IS TRUE) WHEN ((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)) THEN (((rt0.c0)) BETWEEN ((rt0.c3)) AND (('l~R.F	N'))) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END  WHEN '-1580948083' THEN rt0.c1 COLLATE NOCASE WHEN ((rt0.c1)>=(rt0.c3)) THEN ((rt0.c2) IS TRUE) WHEN ((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)) THEN (((rt0.c0)) BETWEEN ((rt0.c3)) AND (('l~R.F	N'))) END);
SELECT * FROM vt1, rt0 WHERE (((vt1.c0) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND ((rt0.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND ((rt0.c3 IN ())))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((vt1.c0) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND ((rt0.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND ((rt0.c3 IN ())))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((vt1.c0) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND ((rt0.c3 IN ()))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)IS NOT(0.4279183415751838)))/(((rt0.c1)LIKE(rt0.c1))))) ORDER BY ((((rt0.c3)IS(rt0.c0))) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)IS NOT(0.4279183415751838)))/(((rt0.c1)LIKE(rt0.c1))))) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY ((((rt0.c3)IS(rt0.c0))) IS TRUE) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)IS NOT(0.4279183415751838)))/(((rt0.c1)LIKE(rt0.c1))))) ORDER BY ((((rt0.c3)IS(rt0.c0))) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)IS NOT(0.4279183415751838)))/(((rt0.c1)LIKE(rt0.c1))))) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY ((((rt0.c3)IS(rt0.c0))) IS TRUE) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)IS NOT(0.4279183415751838)))/(((rt0.c1)LIKE(rt0.c1))))) ORDER BY ((((rt0.c3)IS(rt0.c0))) IS TRUE) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)) COLLATE NOCASE WHERE (CASE NULL  WHEN ((vt1.c0)<<(rt0.c1)) THEN (vt1.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN ((vt1.c0)<<(rt0.c1)) THEN (vt1.c0 IN ()) END) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)) COLLATE NOCASE WHERE (CASE NULL  WHEN ((vt1.c0)<<(rt0.c1)) THEN (vt1.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN ((vt1.c0)<<(rt0.c1)) THEN (vt1.c0 IN ()) END) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)) COLLATE NOCASE WHERE (CASE NULL  WHEN ((vt1.c0)<<(rt0.c1)) THEN (vt1.c0 IN ()) END);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c1)))>>(0xffffffffe0b68555 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c1)))>>(0xffffffffe0b68555 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c1)))>>(0xffffffffe0b68555 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c1)))>>(0xffffffffe0b68555 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c1)))>>(0xffffffffe0b68555 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, 0.9240795134225246, vt1.c0)) AND ((vt1.c0, vt1.c0, 'M6''ꖍhⱩ+H'))) IN (((vt1.c0) NOT BETWEEN ('-794897419') AND ('''')), ((vt1.c0)IS(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, 0.9240795134225246, vt1.c0)) AND ((vt1.c0, vt1.c0, 'M6''ꖍhⱩ+H'))) IN (((vt1.c0) NOT BETWEEN ('-794897419') AND ('''')), ((vt1.c0)IS(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, 0.9240795134225246, vt1.c0)) AND ((vt1.c0, vt1.c0, 'M6''ꖍhⱩ+H'))) IN (((vt1.c0) NOT BETWEEN ('-794897419') AND ('''')), ((vt1.c0)IS(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, 0.9240795134225246, vt1.c0)) AND ((vt1.c0, vt1.c0, 'M6''ꖍhⱩ+H'))) IN (((vt1.c0) NOT BETWEEN ('-794897419') AND ('''')), ((vt1.c0)IS(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, 0.9240795134225246, vt1.c0)) AND ((vt1.c0, vt1.c0, 'M6''ꖍhⱩ+H'))) IN (((vt1.c0) NOT BETWEEN ('-794897419') AND ('''')), ((vt1.c0)IS(vt1.c0)))));
SELECT * FROM rt0, vt1 WHERE ((((rt0.c3)<(NULL)) IN ())) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)<(NULL)) IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY x''  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE ((((rt0.c3)<(NULL)) IN ())) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)<(NULL)) IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY x''  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE ((((rt0.c3)<(NULL)) IN ())) ORDER BY x''  NULLS LAST;
SELECT ALL * FROM rt0, vt1 WHERE (((CASE WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN vt1.c0 END)<(((vt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN vt1.c0 END)<(((vt1.c0) ISNULL)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((CASE WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN vt1.c0 END)<(((vt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN vt1.c0 END)<(((vt1.c0) ISNULL)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((CASE WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN vt1.c0 END)<(((vt1.c0) ISNULL))));
SELECT COUNT(*) FROM vt1 WHERE ((NOT (NULL))) ORDER BY CAST((vt1.c0 IN (vt1.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((NOT (NULL))) IS TRUE)  as count FROM vt1 ORDER BY CAST((vt1.c0 IN (vt1.c0)) AS REAL));
SELECT COUNT(*) FROM vt1 WHERE ((NOT (NULL))) ORDER BY CAST((vt1.c0 IN (vt1.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((NOT (NULL))) IS TRUE)  as count FROM vt1 ORDER BY CAST((vt1.c0 IN (vt1.c0)) AS REAL));
SELECT COUNT(*) FROM vt1 WHERE ((NOT (NULL))) ORDER BY CAST((vt1.c0 IN (vt1.c0)) AS REAL);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER)) NOT NULL)) ORDER BY ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS INTEGER)) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER)) NOT NULL)) ORDER BY ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS INTEGER)) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER)) NOT NULL)) ORDER BY ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt1 ON ((((((((((((rt0.c3)AND(vt1.c0)))AND(vt1.c0)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))OR(((rt0.c3)||(rt0.c0)))) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((((((((((rt0.c3)AND(vt1.c0)))AND(vt1.c0)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))OR(((rt0.c3)||(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt1 ON ((((((((((((rt0.c3)AND(vt1.c0)))AND(vt1.c0)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))OR(((rt0.c3)||(rt0.c0)))) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((((((((((rt0.c3)AND(vt1.c0)))AND(vt1.c0)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))OR(((rt0.c3)||(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt1 ON ((((((((((((rt0.c3)AND(vt1.c0)))AND(vt1.c0)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))OR(((rt0.c3)||(rt0.c0)))) WHERE (rt0.c0);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3))) BETWEEN ((+ (rt0.c1))) AND ((+ (rt0.c3))))) ORDER BY CAST(CAST(rt0.c0 AS REAL) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3))) BETWEEN ((+ (rt0.c1))) AND ((+ (rt0.c3))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(CAST(rt0.c0 AS REAL) AS TEXT));
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3))) BETWEEN ((+ (rt0.c1))) AND ((+ (rt0.c3))))) ORDER BY CAST(CAST(rt0.c0 AS REAL) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3))) BETWEEN ((+ (rt0.c1))) AND ((+ (rt0.c3))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(CAST(rt0.c0 AS REAL) AS TEXT));
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3))) BETWEEN ((+ (rt0.c1))) AND ((+ (rt0.c3))))) ORDER BY CAST(CAST(rt0.c0 AS REAL) AS TEXT);
SELECT COUNT(*) FROM vt1 INNER JOIN rt0 ON ((((rt0.c3)|(vt1.c0))) NOTNULL) WHERE ((((((rt0.c3 IN (rt0.c1)))OR(((((rt0.c2)AND('')))AND(rt0.c3)))))AND((NOT (rt0.c0))))) ORDER BY (('I/r|cJ')LIKE(COALESCE(rt0.c2, vt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3 IN (rt0.c1)))OR(((((rt0.c2)AND('')))AND(rt0.c3)))))AND((NOT (rt0.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ((((rt0.c3)|(vt1.c0))) NOTNULL) ORDER BY (('I/r|cJ')LIKE(COALESCE(rt0.c2, vt1.c0))) DESC);
SELECT COUNT(*) FROM vt1 INNER JOIN rt0 ON ((((rt0.c3)|(vt1.c0))) NOTNULL) WHERE ((((((rt0.c3 IN (rt0.c1)))OR(((((rt0.c2)AND('')))AND(rt0.c3)))))AND((NOT (rt0.c0))))) ORDER BY (('I/r|cJ')LIKE(COALESCE(rt0.c2, vt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3 IN (rt0.c1)))OR(((((rt0.c2)AND('')))AND(rt0.c3)))))AND((NOT (rt0.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ((((rt0.c3)|(vt1.c0))) NOTNULL) ORDER BY (('I/r|cJ')LIKE(COALESCE(rt0.c2, vt1.c0))) DESC);
SELECT COUNT(*) FROM vt1 INNER JOIN rt0 ON ((((rt0.c3)|(vt1.c0))) NOTNULL) WHERE ((((((rt0.c3 IN (rt0.c1)))OR(((((rt0.c2)AND('')))AND(rt0.c3)))))AND((NOT (rt0.c0))))) ORDER BY (('I/r|cJ')LIKE(COALESCE(rt0.c2, vt1.c0))) DESC;
SELECT COUNT(*) FROM vt1 INNER JOIN rt0 ON ((CAST(vt1.c0 AS REAL))||(IFNULL(DISTINCT vt1.c0, rt0.c1))) WHERE ((((rt0.c1) IS FALSE) IN ())) ORDER BY (((rt0.c1 IN ()))<>(((rt0.c3)LIKE(rt0.c1))))  NULLS LAST, (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt1.c0))))!=(0.03218818604669771)) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1) IS FALSE) IN ())) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ((CAST(vt1.c0 AS REAL))||(IFNULL(DISTINCT vt1.c0, rt0.c1))) ORDER BY (((rt0.c1 IN ()))!=(((rt0.c3)LIKE(rt0.c1))))  NULLS LAST, (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt1.c0))))<>(0.03218818604669771)) ASC);
SELECT COUNT(*) FROM vt1 INNER JOIN rt0 ON ((CAST(vt1.c0 AS REAL))||(IFNULL(DISTINCT vt1.c0, rt0.c1))) WHERE ((((rt0.c1) IS FALSE) IN ())) ORDER BY (((rt0.c1 IN ()))<>(((rt0.c3)LIKE(rt0.c1))))  NULLS LAST, (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt1.c0))))!=(0.03218818604669771)) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1) IS FALSE) IN ())) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ((CAST(vt1.c0 AS REAL))||(IFNULL(DISTINCT vt1.c0, rt0.c1))) ORDER BY (((rt0.c1 IN ()))!=(((rt0.c3)LIKE(rt0.c1))))  NULLS LAST, (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt1.c0))))<>(0.03218818604669771)) ASC);
SELECT COUNT(*) FROM vt1 INNER JOIN rt0 ON ((CAST(vt1.c0 AS REAL))||(IFNULL(DISTINCT vt1.c0, rt0.c1))) WHERE ((((rt0.c1) IS FALSE) IN ())) ORDER BY (((rt0.c1 IN ()))<>(((rt0.c3)LIKE(rt0.c1))))  NULLS LAST, (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt1.c0))))!=(0.03218818604669771)) ASC;
SELECT ALL * FROM rt0 WHERE (CASE WHEN (NOT (rt0.c2)) THEN (NOT (rt0.c2)) WHEN (rt0.c2 IN ()) THEN ((rt0.c0)+('-986345025')) WHEN (((rt0.c0, rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, x'')) AND ((rt0.c3, rt0.c1, rt0.c0))) THEN ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3)) ELSE (((rt0.c1, rt0.c3, rt0.c2))>=((rt0.c3, rt0.c1, rt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (rt0.c2)) THEN (NOT (rt0.c2)) WHEN (rt0.c2 IN ()) THEN ((rt0.c0)+('-986345025')) WHEN (((rt0.c0, rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, x'')) AND ((rt0.c3, rt0.c1, rt0.c0))) THEN ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3)) ELSE (((rt0.c1, rt0.c3, rt0.c2))>=((rt0.c3, rt0.c1, rt0.c0))) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN (NOT (rt0.c2)) THEN (NOT (rt0.c2)) WHEN (rt0.c2 IN ()) THEN ((rt0.c0)+('-986345025')) WHEN (((rt0.c0, rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, x'')) AND ((rt0.c3, rt0.c1, rt0.c0))) THEN ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3)) ELSE (((rt0.c1, rt0.c3, rt0.c2))>=((rt0.c3, rt0.c1, rt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (rt0.c2)) THEN (NOT (rt0.c2)) WHEN (rt0.c2 IN ()) THEN ((rt0.c0)+('-986345025')) WHEN (((rt0.c0, rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, x'')) AND ((rt0.c3, rt0.c1, rt0.c0))) THEN ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3)) ELSE (((rt0.c1, rt0.c3, rt0.c2))>=((rt0.c3, rt0.c1, rt0.c0))) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN (NOT (rt0.c2)) THEN (NOT (rt0.c2)) WHEN (rt0.c2 IN ()) THEN ((rt0.c0)+('-986345025')) WHEN (((rt0.c0, rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, x'')) AND ((rt0.c3, rt0.c1, rt0.c0))) THEN ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3)) ELSE (((rt0.c1, rt0.c3, rt0.c2))>=((rt0.c3, rt0.c1, rt0.c0))) END);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c2) NOT BETWEEN ('C ') AND (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) NOT BETWEEN ('C ') AND (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c2) NOT BETWEEN ('C ') AND (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) NOT BETWEEN ('C ') AND (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c2) NOT BETWEEN ('C ') AND (rt0.c2)) IN ()));
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, vt1 WHERE ((x'' COLLATE NOCASE IN ((((rt0.c3))>((rt0.c0))), ((rt0.c0) BETWEEN (rt0.c1) AND (vt1.c0)), ((((((((((((rt0.c2)AND(x'')))OR(rt0.c0)))AND(x'')))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c2))))) ORDER BY ((((rt0.c3)LIKE(rt0.c2)))OR((((vt1.c0, vt1.c0, rt0.c1))<=((vt1.c0, vt1.c0, rt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((x'' COLLATE NOCASE IN ((((rt0.c3))>((rt0.c0))), ((rt0.c0) BETWEEN (rt0.c1) AND (vt1.c0)), ((((((((((((rt0.c2)AND(x'')))OR(rt0.c0)))AND(x'')))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c3)LIKE(rt0.c2)))OR((((vt1.c0, vt1.c0, rt0.c1))<=((vt1.c0, vt1.c0, rt0.c0))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, vt1 WHERE ((x'' COLLATE NOCASE IN ((((rt0.c3))>((rt0.c0))), ((rt0.c0) BETWEEN (rt0.c1) AND (vt1.c0)), ((((((((((((rt0.c2)AND(x'')))OR(rt0.c0)))AND(x'')))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c2))))) ORDER BY ((((rt0.c3)LIKE(rt0.c2)))OR((((vt1.c0, vt1.c0, rt0.c1))<=((vt1.c0, vt1.c0, rt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((x'' COLLATE NOCASE IN ((((rt0.c3))>((rt0.c0))), ((rt0.c0) BETWEEN (rt0.c1) AND (vt1.c0)), ((((((((((((rt0.c2)AND(x'')))OR(rt0.c0)))AND(x'')))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c3)LIKE(rt0.c2)))OR((((vt1.c0, vt1.c0, rt0.c1))<=((vt1.c0, vt1.c0, rt0.c0))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, vt1 WHERE ((x'' COLLATE NOCASE IN ((((rt0.c3))>((rt0.c0))), ((rt0.c0) BETWEEN (rt0.c1) AND (vt1.c0)), ((((((((((((rt0.c2)AND(x'')))OR(rt0.c0)))AND(x'')))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c2))))) ORDER BY ((((rt0.c3)LIKE(rt0.c2)))OR((((vt1.c0, vt1.c0, rt0.c1))<=((vt1.c0, vt1.c0, rt0.c0))))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON IFNULL(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)), rt0.c2) WHERE (rtreenode(rt0.c0, CAST(rt0.c1 AS REAL))) ORDER BY (((('')<=(vt1.c0)))<<(((rt0.c3)%(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(rt0.c0, CAST(rt0.c1 AS REAL))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON IFNULL(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)), rt0.c2) ORDER BY (((('')<=(vt1.c0)))<<(((rt0.c3)%(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON IFNULL(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)), rt0.c2) WHERE (rtreenode(rt0.c0, CAST(rt0.c1 AS REAL))) ORDER BY (((('')<=(vt1.c0)))<<(((rt0.c3)%(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(rt0.c0, CAST(rt0.c1 AS REAL))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON IFNULL(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)), rt0.c2) ORDER BY (((('')<=(vt1.c0)))<<(((rt0.c3)%(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON IFNULL(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)), rt0.c2) WHERE (rtreenode(rt0.c0, CAST(rt0.c1 AS REAL))) ORDER BY (((('')<=(vt1.c0)))<<(((rt0.c3)%(rt0.c0))));
SELECT * FROM vt1 WHERE (CASE WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((vt1.c0)<<(vt1.c0)) THEN (((('')OR(vt1.c0)))AND(vt1.c0)) WHEN (vt1.c0 IN ()) THEN vt1.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((vt1.c0)<<(vt1.c0)) THEN (((('')OR(vt1.c0)))AND(vt1.c0)) WHEN (vt1.c0 IN ()) THEN vt1.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((vt1.c0)<<(vt1.c0)) THEN (((('')OR(vt1.c0)))AND(vt1.c0)) WHEN (vt1.c0 IN ()) THEN vt1.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((vt1.c0)<<(vt1.c0)) THEN (((('')OR(vt1.c0)))AND(vt1.c0)) WHEN (vt1.c0 IN ()) THEN vt1.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((vt1.c0)<<(vt1.c0)) THEN (((('')OR(vt1.c0)))AND(vt1.c0)) WHEN (vt1.c0 IN ()) THEN vt1.c0 COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((IFNULL(DISTINCT vt1.c0, vt1.c0))OR(CAST(vt1.c0 AS REAL))))OR((NOT (vt1.c0))))) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN x'' THEN vt1.c0 ELSE vt1.c0 END, SQLITE_COMPILEOPTION_USED(x'f5b8'), ((vt1.c0) BETWEEN (x'') AND (vt1.c0)))) AND (('(c\7K(	' COLLATE NOCASE, vt1.c0 COLLATE RTRIM, (NOT (vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((IFNULL(DISTINCT vt1.c0, vt1.c0))OR(CAST(vt1.c0 AS REAL))))OR((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN x'' THEN vt1.c0 ELSE vt1.c0 END, SQLITE_COMPILEOPTION_USED(x'f5b8'), ((vt1.c0) BETWEEN (x'') AND (vt1.c0)))) AND (('(c\7K(	' COLLATE NOCASE, vt1.c0 COLLATE RTRIM, (NOT (vt1.c0))))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((IFNULL(DISTINCT vt1.c0, vt1.c0))OR(CAST(vt1.c0 AS REAL))))OR((NOT (vt1.c0))))) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN x'' THEN vt1.c0 ELSE vt1.c0 END, SQLITE_COMPILEOPTION_USED(x'f5b8'), ((vt1.c0) BETWEEN (x'') AND (vt1.c0)))) AND (('(c\7K(	' COLLATE NOCASE, vt1.c0 COLLATE RTRIM, (NOT (vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((IFNULL(DISTINCT vt1.c0, vt1.c0))OR(CAST(vt1.c0 AS REAL))))OR((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN x'' THEN vt1.c0 ELSE vt1.c0 END, SQLITE_COMPILEOPTION_USED(x'f5b8'), ((vt1.c0) BETWEEN (x'') AND (vt1.c0)))) AND (('(c\7K(	' COLLATE NOCASE, vt1.c0 COLLATE RTRIM, (NOT (vt1.c0))))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((IFNULL(DISTINCT vt1.c0, vt1.c0))OR(CAST(vt1.c0 AS REAL))))OR((NOT (vt1.c0))))) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN x'' THEN vt1.c0 ELSE vt1.c0 END, SQLITE_COMPILEOPTION_USED(x'f5b8'), ((vt1.c0) BETWEEN (x'') AND (vt1.c0)))) AND (('(c\7K(	' COLLATE NOCASE, vt1.c0 COLLATE RTRIM, (NOT (vt1.c0))))) DESC;
SELECT COUNT(*) FROM vt1, rt0 WHERE ((('-289173684')>(((vt1.c0)AND(NULL))))) ORDER BY ((LOWER(rt0.c0))-(vt1.c0)) ASC, ((ABS(rt0.c1)) NOT BETWEEN (((rt0.c3)IS(NULL))) AND (((rt0.c0)!=(rt0.c1)))), (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('-289173684')>(((vt1.c0)AND(NULL))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((LOWER(rt0.c0))-(vt1.c0)) ASC, ((ABS(rt0.c1)) NOT BETWEEN (((rt0.c3)IS(NULL))) AND (((rt0.c0)<>(rt0.c1)))), (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 END IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((('-289173684')>(((vt1.c0)AND(NULL))))) ORDER BY ((LOWER(rt0.c0))-(vt1.c0)) ASC, ((ABS(rt0.c1)) NOT BETWEEN (((rt0.c3)IS(NULL))) AND (((rt0.c0)!=(rt0.c1)))), (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('-289173684')>(((vt1.c0)AND(NULL))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((LOWER(rt0.c0))-(vt1.c0)) ASC, ((ABS(rt0.c1)) NOT BETWEEN (((rt0.c3)IS(NULL))) AND (((rt0.c0)<>(rt0.c1)))), (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 END IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((('-289173684')>(((vt1.c0)AND(NULL))))) ORDER BY ((LOWER(rt0.c0))-(vt1.c0)) ASC, ((ABS(rt0.c1)) NOT BETWEEN (((rt0.c3)IS(NULL))) AND (((rt0.c0)!=(rt0.c1)))), (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 END IN ())  NULLS LAST;
SELECT * FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c0)))OR(0.07490869848532011))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c0)))OR(0.07490869848532011))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c0)))OR(0.07490869848532011))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c0)))OR(0.07490869848532011))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c0)))OR(0.07490869848532011))) ISNULL));
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c0 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c0 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c0 AS NUMERIC) IN ()));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON (vt1.c0 COLLATE NOCASE IN (((vt1.c0) NOTNULL), (((rt0.c3, rt0.c1, rt0.c3, rt0.c3, rt0.c1)) BETWEEN ((rt0.c1, rt0.c2, rt0.c1, vt1.c0, rt0.c3)) AND ((rt0.c3, vt1.c0, vt1.c0, rt0.c0, rt0.c0))))) WHERE (CASE WHEN (+ (rt0.c2)) THEN CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END ELSE ((rt0.c3) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (rt0.c2)) THEN CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END ELSE ((rt0.c3) ISNULL) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON (vt1.c0 COLLATE NOCASE IN (((vt1.c0) NOTNULL), (((rt0.c3, rt0.c1, rt0.c3, rt0.c3, rt0.c1)) BETWEEN ((rt0.c1, rt0.c2, rt0.c1, vt1.c0, rt0.c3)) AND ((rt0.c3, vt1.c0, vt1.c0, rt0.c0, rt0.c0))))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON (vt1.c0 COLLATE NOCASE IN (((vt1.c0) NOTNULL), (((rt0.c3, rt0.c1, rt0.c3, rt0.c3, rt0.c1)) BETWEEN ((rt0.c1, rt0.c2, rt0.c1, vt1.c0, rt0.c3)) AND ((rt0.c3, vt1.c0, vt1.c0, rt0.c0, rt0.c0))))) WHERE (CASE WHEN (+ (rt0.c2)) THEN CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END ELSE ((rt0.c3) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (rt0.c2)) THEN CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END ELSE ((rt0.c3) ISNULL) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON (vt1.c0 COLLATE NOCASE IN (((vt1.c0) NOTNULL), (((rt0.c3, rt0.c1, rt0.c3, rt0.c3, rt0.c1)) BETWEEN ((rt0.c1, rt0.c2, rt0.c1, vt1.c0, rt0.c3)) AND ((rt0.c3, vt1.c0, vt1.c0, rt0.c0, rt0.c0))))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON (vt1.c0 COLLATE NOCASE IN (((vt1.c0) NOTNULL), (((rt0.c3, rt0.c1, rt0.c3, rt0.c3, rt0.c1)) BETWEEN ((rt0.c1, rt0.c2, rt0.c1, vt1.c0, rt0.c3)) AND ((rt0.c3, vt1.c0, vt1.c0, rt0.c0, rt0.c0))))) WHERE (CASE WHEN (+ (rt0.c2)) THEN CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END ELSE ((rt0.c3) ISNULL) END);
SELECT ALL * FROM vt1, rt0 WHERE (((((((((((((rt0.c2)AND(vt1.c0)))OR(rt0.c2)))OR(vt1.c0)))OR(rt0.c3)))OR(((rt0.c0) NOTNULL))))AND(CASE vt1.c0  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END))) ORDER BY CASE (((x'', vt1.c0, rt0.c1)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((rt0.c3, vt1.c0, x'7d5b')))  WHEN ((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))AND(vt1.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c3 ELSE rt0.c0 END ELSE ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c2)AND(vt1.c0)))OR(rt0.c2)))OR(vt1.c0)))OR(rt0.c3)))OR(((rt0.c0) NOTNULL))))AND(CASE vt1.c0  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE (((x'', vt1.c0, rt0.c1)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((rt0.c3, vt1.c0, x'7d5b')))  WHEN ((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))AND(vt1.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c3 ELSE rt0.c0 END ELSE ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) END);
SELECT ALL * FROM vt1, rt0 WHERE (((((((((((((rt0.c2)AND(vt1.c0)))OR(rt0.c2)))OR(vt1.c0)))OR(rt0.c3)))OR(((rt0.c0) NOTNULL))))AND(CASE vt1.c0  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END))) ORDER BY CASE (((x'', vt1.c0, rt0.c1)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((rt0.c3, vt1.c0, x'7d5b')))  WHEN ((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))AND(vt1.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c3 ELSE rt0.c0 END ELSE ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c2)AND(vt1.c0)))OR(rt0.c2)))OR(vt1.c0)))OR(rt0.c3)))OR(((rt0.c0) NOTNULL))))AND(CASE vt1.c0  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE (((x'', vt1.c0, rt0.c1)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((rt0.c3, vt1.c0, x'7d5b')))  WHEN ((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))AND(vt1.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c3 ELSE rt0.c0 END ELSE ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) END);
SELECT ALL * FROM vt1, rt0 WHERE (((((((((((((rt0.c2)AND(vt1.c0)))OR(rt0.c2)))OR(vt1.c0)))OR(rt0.c3)))OR(((rt0.c0) NOTNULL))))AND(CASE vt1.c0  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END))) ORDER BY CASE (((x'', vt1.c0, rt0.c1)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((rt0.c3, vt1.c0, x'7d5b')))  WHEN ((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))AND(vt1.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c3 ELSE rt0.c0 END ELSE ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) END;
SELECT * FROM vt1 WHERE (((x'') BETWEEN (vt1.c0) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((x'') BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((x'') BETWEEN (vt1.c0) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((x'') BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((x'') BETWEEN (vt1.c0) AND (vt1.c0)));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON CAST(((rt0.c0) ISNULL) AS REAL) WHERE (0.26005744178451584);
SELECT SUM(count) FROM (SELECT ((0.26005744178451584) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON CAST(((rt0.c0) ISNULL) AS REAL));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON CAST(((rt0.c0) ISNULL) AS REAL) WHERE (0.26005744178451584);
SELECT SUM(count) FROM (SELECT ((0.26005744178451584) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON CAST(((rt0.c0) ISNULL) AS REAL));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON CAST(((rt0.c0) ISNULL) AS REAL) WHERE (0.26005744178451584);
SELECT COUNT(*) FROM vt1 WHERE (ABS(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY (CAST(vt1.c0 AS REAL) IN ());
SELECT SUM(count) FROM (SELECT ((ABS(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY (CAST(vt1.c0 AS REAL) IN ()));
SELECT COUNT(*) FROM vt1 WHERE (ABS(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY (CAST(vt1.c0 AS REAL) IN ());
SELECT SUM(count) FROM (SELECT ((ABS(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY (CAST(vt1.c0 AS REAL) IN ()));
SELECT COUNT(*) FROM vt1 WHERE (ABS(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY (CAST(vt1.c0 AS REAL) IN ());
SELECT ALL * FROM vt1, rt0 WHERE (((rt0.c1 COLLATE RTRIM)>(CAST(rt0.c1 AS NUMERIC)))) ORDER BY rt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM)>(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c1 DESC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (((rt0.c1 COLLATE RTRIM)>(CAST(rt0.c1 AS NUMERIC)))) ORDER BY rt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM)>(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c1 DESC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (((rt0.c1 COLLATE RTRIM)>(CAST(rt0.c1 AS NUMERIC)))) ORDER BY rt0.c1 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c3)<<(0x5f58f773))) NOTNULL)) ORDER BY (((rt0.c1) ISNULL) IN (((rt0.c0)<(vt1.c0)), -5.08220311E8)) DESC, ((((((((CASE WHEN vt1.c0 THEN rt0.c3 ELSE rt0.c1 END)OR(rt0.c0)))AND(((rt0.c0) IS FALSE))))OR((- (rt0.c2)))))OR(((((rt0.c0)AND(vt1.c0)))OR(rt0.c3)))) ASC, DATETIME(rt0.c1, 0x1c09ec43, rt0.c2) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)<<(0X5f58f773))) NOTNULL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c1) ISNULL) IN (((rt0.c0)<(vt1.c0)), -5.08220311E8)) DESC, ((((((((CASE WHEN vt1.c0 THEN rt0.c3 ELSE rt0.c1 END)OR(rt0.c0)))AND(((rt0.c0) IS FALSE))))OR((- (rt0.c2)))))OR(((((rt0.c0)AND(vt1.c0)))OR(rt0.c3)))) ASC, DATETIME(rt0.c1, 0x1c09ec43, rt0.c2) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c3)<<(0x5f58f773))) NOTNULL)) ORDER BY (((rt0.c1) ISNULL) IN (((rt0.c0)<(vt1.c0)), -5.08220311E8)) DESC, ((((((((CASE WHEN vt1.c0 THEN rt0.c3 ELSE rt0.c1 END)OR(rt0.c0)))AND(((rt0.c0) IS FALSE))))OR((- (rt0.c2)))))OR(((((rt0.c0)AND(vt1.c0)))OR(rt0.c3)))) ASC, DATETIME(rt0.c1, 0x1c09ec43, rt0.c2) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)<<(0X5f58f773))) NOTNULL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c1) ISNULL) IN (((rt0.c0)<(vt1.c0)), -5.08220311E8)) DESC, ((((((((CASE WHEN vt1.c0 THEN rt0.c3 ELSE rt0.c1 END)OR(rt0.c0)))AND(((rt0.c0) IS FALSE))))OR((- (rt0.c2)))))OR(((((rt0.c0)AND(vt1.c0)))OR(rt0.c3)))) ASC, DATETIME(rt0.c1, 0x1c09ec43, rt0.c2) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c3)<<(0x5f58f773))) NOTNULL)) ORDER BY (((rt0.c1) ISNULL) IN (((rt0.c0)<(vt1.c0)), -5.08220311E8)) DESC, ((((((((CASE WHEN vt1.c0 THEN rt0.c3 ELSE rt0.c1 END)OR(rt0.c0)))AND(((rt0.c0) IS FALSE))))OR((- (rt0.c2)))))OR(((((rt0.c0)AND(vt1.c0)))OR(rt0.c3)))) ASC, DATETIME(rt0.c1, 0x1c09ec43, rt0.c2) COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL * FROM rt0, vt1 WHERE (((LIKELIHOOD(rt0.c2, 0.9106408954909331)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(rt0.c2, 0.9106408954909331)) NOT NULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((LIKELIHOOD(rt0.c2, 0.9106408954909331)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(rt0.c2, 0.9106408954909331)) NOT NULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((LIKELIHOOD(rt0.c2, 0.9106408954909331)) NOT NULL));
SELECT COUNT(*) FROM rt0 WHERE ((('{	()') IS TRUE));
SELECT SUM(count) FROM (SELECT (((('{	()') IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((('{	()') IS TRUE));
SELECT SUM(count) FROM (SELECT (((('{	()') IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((('{	()') IS TRUE));
SELECT ALL COUNT(*) FROM rt0 WHERE (GLOB(IFNULL(rt0.c2, rt0.c2), (~ (rt0.c2)))) ORDER BY (((((rt0.c1, rt0.c3, rt0.c2))>=((rt0.c3, rt0.c1, rt0.c1)))) NOT BETWEEN ((((rt0.c2))=((rt0.c0)))) AND (((NULL)||(rt0.c1)))) ASC, ((((rt0.c3)|(rt0.c0))) BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3)))) AND ((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((GLOB(IFNULL(rt0.c2, rt0.c2), (~ (rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1, rt0.c3, rt0.c2))>=((rt0.c3, rt0.c1, rt0.c1)))) NOT BETWEEN ((((rt0.c2))=((rt0.c0)))) AND (((NULL)||(rt0.c1)))) ASC, ((((rt0.c3)|(rt0.c0))) BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3)))) AND ((rt0.c2 IN ()))));
SELECT ALL COUNT(*) FROM rt0 WHERE (GLOB(IFNULL(rt0.c2, rt0.c2), (~ (rt0.c2)))) ORDER BY (((((rt0.c1, rt0.c3, rt0.c2))>=((rt0.c3, rt0.c1, rt0.c1)))) NOT BETWEEN ((((rt0.c2))=((rt0.c0)))) AND (((NULL)||(rt0.c1)))) ASC, ((((rt0.c3)|(rt0.c0))) BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3)))) AND ((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((GLOB(IFNULL(rt0.c2, rt0.c2), (~ (rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1, rt0.c3, rt0.c2))>=((rt0.c3, rt0.c1, rt0.c1)))) NOT BETWEEN ((((rt0.c2))=((rt0.c0)))) AND (((NULL)||(rt0.c1)))) ASC, ((((rt0.c3)|(rt0.c0))) BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3)))) AND ((rt0.c2 IN ()))));
SELECT ALL COUNT(*) FROM rt0 WHERE (GLOB(IFNULL(rt0.c2, rt0.c2), (~ (rt0.c2)))) ORDER BY (((((rt0.c1, rt0.c3, rt0.c2))>=((rt0.c3, rt0.c1, rt0.c1)))) NOT BETWEEN ((((rt0.c2))=((rt0.c0)))) AND (((NULL)||(rt0.c1)))) ASC, ((((rt0.c3)|(rt0.c0))) BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3)))) AND ((rt0.c2 IN ())));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CAST(LIKELIHOOD(DISTINCT rt0.c3, 0.9118060020771437) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(LIKELIHOOD(DISTINCT rt0.c3, 0.9118060020771437) AS INTEGER)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CAST(LIKELIHOOD(DISTINCT rt0.c3, 0.9118060020771437) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(LIKELIHOOD(DISTINCT rt0.c3, 0.9118060020771437) AS INTEGER)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CAST(LIKELIHOOD(DISTINCT rt0.c3, 0.9118060020771437) AS INTEGER));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON ((((((((((rt0.c0)OR(vt1.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(vt1.c0))) IS TRUE) WHERE ((~ ((+ (rt0.c3))))) ORDER BY ((+ (rt0.c3)) IN ()), ((((((((((rt0.c3)-(rt0.c2)))AND(((((vt1.c0)AND(0.8567825136061143)))OR(rt0.c1)))))AND((rt0.c3 IN ()))))OR(rt0.c3 COLLATE RTRIM)))AND(((((rt0.c2)AND(rt0.c0)))AND(vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((+ (rt0.c3))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON ((((((((((rt0.c0)OR(vt1.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(vt1.c0))) IS TRUE) ORDER BY ((+ (rt0.c3)) IN ()), ((((((((((rt0.c3)-(rt0.c2)))AND(((((vt1.c0)AND(0.8567825136061143)))OR(rt0.c1)))))AND((rt0.c3 IN ()))))OR(rt0.c3 COLLATE RTRIM)))AND(((((rt0.c2)AND(rt0.c0)))AND(vt1.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON ((((((((((rt0.c0)OR(vt1.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(vt1.c0))) IS TRUE) WHERE ((~ ((+ (rt0.c3))))) ORDER BY ((+ (rt0.c3)) IN ()), ((((((((((rt0.c3)-(rt0.c2)))AND(((((vt1.c0)AND(0.8567825136061143)))OR(rt0.c1)))))AND((rt0.c3 IN ()))))OR(rt0.c3 COLLATE RTRIM)))AND(((((rt0.c2)AND(rt0.c0)))AND(vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((+ (rt0.c3))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON ((((((((((rt0.c0)OR(vt1.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(vt1.c0))) IS TRUE) ORDER BY ((+ (rt0.c3)) IN ()), ((((((((((rt0.c3)-(rt0.c2)))AND(((((vt1.c0)AND(0.8567825136061143)))OR(rt0.c1)))))AND((rt0.c3 IN ()))))OR(rt0.c3 COLLATE RTRIM)))AND(((((rt0.c2)AND(rt0.c0)))AND(vt1.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON ((((((((((rt0.c0)OR(vt1.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(vt1.c0))) IS TRUE) WHERE ((~ ((+ (rt0.c3))))) ORDER BY ((+ (rt0.c3)) IN ()), ((((((((((rt0.c3)-(rt0.c2)))AND(((((vt1.c0)AND(0.8567825136061143)))OR(rt0.c1)))))AND((rt0.c3 IN ()))))OR(rt0.c3 COLLATE RTRIM)))AND(((((rt0.c2)AND(rt0.c0)))AND(vt1.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)/(vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)/(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)/(vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)/(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)/(vt1.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE CAST(rt0.c2 AS TEXT)  WHEN (rt0.c2 IN ()) THEN 0X44e4a6f7 END) ORDER BY (NOT ((-486485735 IN ()))), ((CASE vt1.c0  WHEN rt0.c2 THEN rt0.c0 END)LIKE((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c2 AS TEXT)  WHEN (rt0.c2 IN ()) THEN 0X44e4a6f7 END) IS TRUE)  as count FROM vt1, rt0 ORDER BY (NOT ((-486485735 IN ()))), ((CASE vt1.c0  WHEN rt0.c2 THEN rt0.c0 END)LIKE((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE CAST(rt0.c2 AS TEXT)  WHEN (rt0.c2 IN ()) THEN 0X44e4a6f7 END) ORDER BY (NOT ((-486485735 IN ()))), ((CASE vt1.c0  WHEN rt0.c2 THEN rt0.c0 END)LIKE((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c2 AS TEXT)  WHEN (rt0.c2 IN ()) THEN 0X44e4a6f7 END) IS TRUE)  as count FROM vt1, rt0 ORDER BY (NOT ((-486485735 IN ()))), ((CASE vt1.c0  WHEN rt0.c2 THEN rt0.c0 END)LIKE((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE CAST(rt0.c2 AS TEXT)  WHEN (rt0.c2 IN ()) THEN 0X44e4a6f7 END) ORDER BY (NOT ((-486485735 IN ()))), ((CASE vt1.c0  WHEN rt0.c2 THEN rt0.c0 END)LIKE((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))));
SELECT * FROM rt0 WHERE (CAST(NULL AS NUMERIC)) ORDER BY 9.15422385E8 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY 9.15422385E8 DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (CAST(NULL AS NUMERIC)) ORDER BY 9.15422385E8 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY 9.15422385E8 DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (CAST(NULL AS NUMERIC)) ORDER BY 9.15422385E8 DESC  NULLS LAST;
SELECT * FROM vt1, rt0 WHERE (((((CAST(vt1.c0 AS BLOB))AND(((vt1.c0)-(rt0.c1)))))OR(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt1.c0 AS BLOB))AND(((vt1.c0)-(rt0.c1)))))OR(vt1.c0))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((((CAST(vt1.c0 AS BLOB))AND(((vt1.c0)-(rt0.c1)))))OR(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt1.c0 AS BLOB))AND(((vt1.c0)-(rt0.c1)))))OR(vt1.c0))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((((CAST(vt1.c0 AS BLOB))AND(((vt1.c0)-(rt0.c1)))))OR(vt1.c0)));
SELECT ALL * FROM rt0, vt1 WHERE (highlight((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))), ((rt0.c1)<>(rt0.c3)), CASE WHEN '' THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END, vt1.c0)) ORDER BY CHAR((((rt0.c2, rt0.c2, NULL))>=((vt1.c0, rt0.c2, vt1.c0))), rt0.c1 COLLATE RTRIM, (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))), (((rt0.c1, rt0.c3, rt0.c1)) BETWEEN ((rt0.c3, 'f)\彫J', rt0.c2)) AND ((rt0.c3, rt0.c0, rt0.c1))), rt0.c2, COALESCE(DISTINCT rt0.c1, rt0.c1), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0))), (((((rt0.c0))!=((rt0.c2)))) BETWEEN (rt0.c2) AND (CAST(rt0.c3 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((highlight((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))), ((rt0.c1)!=(rt0.c3)), CASE WHEN '' THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END, vt1.c0)) IS TRUE)  as count FROM rt0, vt1 ORDER BY CHAR((((rt0.c2, rt0.c2, NULL))>=((vt1.c0, rt0.c2, vt1.c0))), rt0.c1 COLLATE RTRIM, (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))), (((rt0.c1, rt0.c3, rt0.c1)) BETWEEN ((rt0.c3, 'f)\彫J', rt0.c2)) AND ((rt0.c3, rt0.c0, rt0.c1))), rt0.c2, COALESCE(DISTINCT rt0.c1, rt0.c1), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0))), (((((rt0.c0))<>((rt0.c2)))) BETWEEN (rt0.c2) AND (CAST(rt0.c3 AS NUMERIC))) ASC);
SELECT ALL * FROM rt0, vt1 WHERE (highlight((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))), ((rt0.c1)<>(rt0.c3)), CASE WHEN '' THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END, vt1.c0)) ORDER BY CHAR((((rt0.c2, rt0.c2, NULL))>=((vt1.c0, rt0.c2, vt1.c0))), rt0.c1 COLLATE RTRIM, (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))), (((rt0.c1, rt0.c3, rt0.c1)) BETWEEN ((rt0.c3, 'f)\彫J', rt0.c2)) AND ((rt0.c3, rt0.c0, rt0.c1))), rt0.c2, COALESCE(DISTINCT rt0.c1, rt0.c1), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0))), (((((rt0.c0))!=((rt0.c2)))) BETWEEN (rt0.c2) AND (CAST(rt0.c3 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((highlight((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))), ((rt0.c1)!=(rt0.c3)), CASE WHEN '' THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END, vt1.c0)) IS TRUE)  as count FROM rt0, vt1 ORDER BY CHAR((((rt0.c2, rt0.c2, NULL))>=((vt1.c0, rt0.c2, vt1.c0))), rt0.c1 COLLATE RTRIM, (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))), (((rt0.c1, rt0.c3, rt0.c1)) BETWEEN ((rt0.c3, 'f)\彫J', rt0.c2)) AND ((rt0.c3, rt0.c0, rt0.c1))), rt0.c2, COALESCE(DISTINCT rt0.c1, rt0.c1), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0))), (((((rt0.c0))<>((rt0.c2)))) BETWEEN (rt0.c2) AND (CAST(rt0.c3 AS NUMERIC))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (CAST('675gQw' AS NUMERIC)) ORDER BY ((NULL)&(rt0.c2)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('675gQw' AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY ((NULL)&(rt0.c2)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST('675gQw' AS NUMERIC)) ORDER BY ((NULL)&(rt0.c2)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('675gQw' AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY ((NULL)&(rt0.c2)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST('675gQw' AS NUMERIC)) ORDER BY ((NULL)&(rt0.c2)) COLLATE NOCASE  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)OR(vt1.c0))) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR(vt1.c0))) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)OR(vt1.c0))) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR(vt1.c0))) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)OR(vt1.c0))) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0)));
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, '-1774391373', NULL)) AND ((0.8173250989983419, vt1.c0, vt1.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, '-1774391373', NULL)) AND ((0.8173250989983419, vt1.c0, vt1.c0)))) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, '-1774391373', NULL)) AND ((0.8173250989983419, vt1.c0, vt1.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, '-1774391373', NULL)) AND ((0.8173250989983419, vt1.c0, vt1.c0)))) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, '-1774391373', NULL)) AND ((0.8173250989983419, vt1.c0, vt1.c0)))) ISNULL));
SELECT ALL * FROM rt0, vt1 WHERE (((NULL)IS(((rt0.c2)+(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((NULL)IS(((rt0.c2)+(rt0.c2))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((NULL)IS(((rt0.c2)+(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((NULL)IS(((rt0.c2)+(rt0.c2))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((NULL)IS(((rt0.c2)+(rt0.c2)))));
SELECT COUNT(*) FROM vt1 WHERE ((NOT ((vt1.c0 IN (vt1.c0))))) ORDER BY CAST(vt1.c0 AS BLOB) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((NOT ((vt1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c0 AS BLOB) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM vt1 WHERE ((NOT ((vt1.c0 IN (vt1.c0))))) ORDER BY CAST(vt1.c0 AS BLOB) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((NOT ((vt1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c0 AS BLOB) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM vt1 WHERE ((NOT ((vt1.c0 IN (vt1.c0))))) ORDER BY CAST(vt1.c0 AS BLOB) COLLATE NOCASE DESC;
SELECT ALL * FROM vt1, rt0 WHERE (((CAST(x'' AS BLOB))>(CASE rt0.c0  WHEN rt0.c0 THEN NULL END)));
SELECT SUM(count) FROM (SELECT ((((CAST(x'' AS BLOB))>(CASE rt0.c0  WHEN rt0.c0 THEN NULL END))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((CAST(x'' AS BLOB))>(CASE rt0.c0  WHEN rt0.c0 THEN NULL END)));
SELECT SUM(count) FROM (SELECT ((((CAST(x'' AS BLOB))>(CASE rt0.c0  WHEN rt0.c0 THEN NULL END))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((CAST(x'' AS BLOB))>(CASE rt0.c0  WHEN rt0.c0 THEN NULL END)));
SELECT ALL * FROM vt1 WHERE ((((((x'') BETWEEN (vt1.c0) AND (vt1.c0))))<((CAST(vt1.c0 AS TEXT))))) ORDER BY (((((((('-658834704')AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((((((x'') BETWEEN (vt1.c0) AND (vt1.c0))))<((CAST(vt1.c0 AS TEXT))))) IS TRUE)  as count FROM vt1 ORDER BY (((((((('-658834704')AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) COLLATE BINARY ASC);
SELECT ALL * FROM vt1 WHERE ((((((x'') BETWEEN (vt1.c0) AND (vt1.c0))))<((CAST(vt1.c0 AS TEXT))))) ORDER BY (((((((('-658834704')AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((((((x'') BETWEEN (vt1.c0) AND (vt1.c0))))<((CAST(vt1.c0 AS TEXT))))) IS TRUE)  as count FROM vt1 ORDER BY (((((((('-658834704')AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) COLLATE BINARY ASC);
SELECT ALL * FROM vt1 WHERE ((((((x'') BETWEEN (vt1.c0) AND (vt1.c0))))<((CAST(vt1.c0 AS TEXT))))) ORDER BY (((((((('-658834704')AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) COLLATE BINARY ASC;
SELECT ALL * FROM vt1 WHERE (CASE WHEN (~ (x'')) THEN ((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN CAST(x'' AS INTEGER) THEN (vt1.c0 IN (vt1.c0)) WHEN ((vt1.c0) ISNULL) THEN ((vt1.c0) NOTNULL) END) ORDER BY 0.019322630039559807 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (x'')) THEN ((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN CAST(x'' AS INTEGER) THEN (vt1.c0 IN (vt1.c0)) WHEN ((vt1.c0) ISNULL) THEN ((vt1.c0) NOTNULL) END) IS TRUE)  as count FROM vt1 ORDER BY 0.019322630039559807 DESC);
SELECT ALL * FROM vt1 WHERE (CASE WHEN (~ (x'')) THEN ((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN CAST(x'' AS INTEGER) THEN (vt1.c0 IN (vt1.c0)) WHEN ((vt1.c0) ISNULL) THEN ((vt1.c0) NOTNULL) END) ORDER BY 0.019322630039559807 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (x'')) THEN ((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN CAST(x'' AS INTEGER) THEN (vt1.c0 IN (vt1.c0)) WHEN ((vt1.c0) ISNULL) THEN ((vt1.c0) NOTNULL) END) IS TRUE)  as count FROM vt1 ORDER BY 0.019322630039559807 DESC);
SELECT ALL * FROM vt1 WHERE (CASE WHEN (~ (x'')) THEN ((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN CAST(x'' AS INTEGER) THEN (vt1.c0 IN (vt1.c0)) WHEN ((vt1.c0) ISNULL) THEN ((vt1.c0) NOTNULL) END) ORDER BY 0.019322630039559807 DESC;
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY (~ ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) DESC  NULLS LAST, CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (~ ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) DESC  NULLS LAST, CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB));
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY (~ ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) DESC  NULLS LAST, CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (~ ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) DESC  NULLS LAST, CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB));
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY (~ ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) DESC  NULLS LAST, CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB);
SELECT ALL COUNT(*) FROM rt0 WHERE ((CAST(rt0.c0 AS TEXT) IN ())) ORDER BY load_extension(CAST(rt0.c2 AS BLOB), rt0.c2 COLLATE NOCASE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM rt0 ORDER BY load_extension(CAST(rt0.c2 AS BLOB), rt0.c2 COLLATE NOCASE)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((CAST(rt0.c0 AS TEXT) IN ())) ORDER BY load_extension(CAST(rt0.c2 AS BLOB), rt0.c2 COLLATE NOCASE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM rt0 ORDER BY load_extension(CAST(rt0.c2 AS BLOB), rt0.c2 COLLATE NOCASE)  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE ''  WHEN CASE WHEN 0.12387938215155847 THEN rt0.c1 END THEN CAST(rt0.c2 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE ''  WHEN CASE WHEN 0.12387938215155847 THEN rt0.c1 END THEN CAST(rt0.c2 AS NUMERIC) END) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE ''  WHEN CASE WHEN 0.12387938215155847 THEN rt0.c1 END THEN CAST(rt0.c2 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE ''  WHEN CASE WHEN 0.12387938215155847 THEN rt0.c1 END THEN CAST(rt0.c2 AS NUMERIC) END) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE ''  WHEN CASE WHEN 0.12387938215155847 THEN rt0.c1 END THEN CAST(rt0.c2 AS NUMERIC) END);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((MAX(vt1.c0, vt1.c0))) AND (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((MAX(vt1.c0, vt1.c0))) AND (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((MAX(vt1.c0, vt1.c0))) AND (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((MAX(vt1.c0, vt1.c0))) AND (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((MAX(vt1.c0, vt1.c0))) AND (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))));
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE (((RTRIM(0xffffffffc53591bf))GLOB((- (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((RTRIM(0Xffffffffc53591bf))GLOB((- (vt1.c0))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE (((RTRIM(0xffffffffc53591bf))GLOB((- (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((RTRIM(0Xffffffffc53591bf))GLOB((- (vt1.c0))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE (((RTRIM(0xffffffffc53591bf))GLOB((- (vt1.c0)))));
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON CASE WHEN ((((rt0.c1)OR(rt0.c1)))OR(vt1.c0)) THEN ((rt0.c0) IS FALSE) END WHERE (CAST(((((vt1.c0)AND(rt0.c0)))OR(vt1.c0)) AS INTEGER)) ORDER BY (+ (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.c0)AND(rt0.c0)))OR(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON CASE WHEN ((((rt0.c1)OR(rt0.c1)))OR(vt1.c0)) THEN ((rt0.c0) IS FALSE) END ORDER BY (+ (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)) ASC  NULLS LAST);
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON CASE WHEN ((((rt0.c1)OR(rt0.c1)))OR(vt1.c0)) THEN ((rt0.c0) IS FALSE) END WHERE (CAST(((((vt1.c0)AND(rt0.c0)))OR(vt1.c0)) AS INTEGER)) ORDER BY (+ (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.c0)AND(rt0.c0)))OR(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON CASE WHEN ((((rt0.c1)OR(rt0.c1)))OR(vt1.c0)) THEN ((rt0.c0) IS FALSE) END ORDER BY (+ (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)) ASC  NULLS LAST);
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON CASE WHEN ((((rt0.c1)OR(rt0.c1)))OR(vt1.c0)) THEN ((rt0.c0) IS FALSE) END WHERE (CAST(((((vt1.c0)AND(rt0.c0)))OR(vt1.c0)) AS INTEGER)) ORDER BY (+ (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((NULLIF(DISTINCT vt1.c0, vt1.c0)) NOT BETWEEN ('8\8\nx怭륝{턙') AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT vt1.c0, vt1.c0)) NOT BETWEEN ('8\8\nx怭륝{턙') AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((NULLIF(DISTINCT vt1.c0, vt1.c0)) NOT BETWEEN ('8\8\nx怭륝{턙') AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT vt1.c0, vt1.c0)) NOT BETWEEN ('8\8\nx怭륝{턙') AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((NULLIF(DISTINCT vt1.c0, vt1.c0)) NOT BETWEEN ('8\8\nx怭륝{턙') AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) IN ())) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY NULL);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) IN ())) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY NULL);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) IN ())) ORDER BY NULL;
SELECT * FROM vt1 INNER JOIN rt0 ON UPPER(rt0.c2) WHERE ((NOT (CAST(0X44e4a6f7 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(0X44e4a6f7 AS NUMERIC)))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON UPPER(rt0.c2));
SELECT * FROM vt1 INNER JOIN rt0 ON UPPER(rt0.c2) WHERE ((NOT (CAST(0X44e4a6f7 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(0X44e4a6f7 AS NUMERIC)))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON UPPER(rt0.c2));
SELECT * FROM vt1 INNER JOIN rt0 ON UPPER(rt0.c2) WHERE ((NOT (CAST(0X44e4a6f7 AS NUMERIC))));
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1 IN ()))AND(rt0.c3)))OR(((rt0.c2)AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1 IN ()))AND(rt0.c3)))OR(((rt0.c2)AND(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1 IN ()))AND(rt0.c3)))OR(((rt0.c2)AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1 IN ()))AND(rt0.c3)))OR(((rt0.c2)AND(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1 IN ()))AND(rt0.c3)))OR(((rt0.c2)AND(rt0.c1)))));
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON json(rt0.c0) COLLATE NOCASE WHERE (NULL COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE RTRIM) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON json(rt0.c0) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON json(rt0.c0) COLLATE NOCASE WHERE (NULL COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE RTRIM) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON json(rt0.c0) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON json(rt0.c0) COLLATE NOCASE WHERE (NULL COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 WHERE ((- ((vt1.c0 IN (vt1.c0))))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL (((- ((vt1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT COUNT(*) FROM vt1 WHERE ((- ((vt1.c0 IN (vt1.c0))))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL (((- ((vt1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT COUNT(*) FROM vt1 WHERE ((- ((vt1.c0 IN (vt1.c0))))) ORDER BY vt1.c0;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN (vt1.c0 IN ()) WHEN (vt1.c0 IN ()) THEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) WHEN (- (vt1.c0)) THEN 0.1751972986477468 END) ORDER BY ((((vt1.c0) NOTNULL))<=(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END));
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN (vt1.c0 IN ()) WHEN (vt1.c0 IN ()) THEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) WHEN (- (vt1.c0)) THEN 0.1751972986477468 END) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOTNULL))<=(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN (vt1.c0 IN ()) WHEN (vt1.c0 IN ()) THEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) WHEN (- (vt1.c0)) THEN 0.1751972986477468 END) ORDER BY ((((vt1.c0) NOTNULL))<=(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END));
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN (vt1.c0 IN ()) WHEN (vt1.c0 IN ()) THEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) WHEN (- (vt1.c0)) THEN 0.1751972986477468 END) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOTNULL))<=(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN (vt1.c0 IN ()) WHEN (vt1.c0 IN ()) THEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) WHEN (- (vt1.c0)) THEN 0.1751972986477468 END) ORDER BY ((((vt1.c0) NOTNULL))<=(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((((0.2947830479120579))<((rt0.c0))))) AND ((rt0.c3)))) ORDER BY ((((rt0.c2)>=(0.4351699902622308)))*((- (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN (((((0.2947830479120579))<((rt0.c0))))) AND ((rt0.c3)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)>=(0.4351699902622308)))*((- (rt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((((0.2947830479120579))<((rt0.c0))))) AND ((rt0.c3)))) ORDER BY ((((rt0.c2)>=(0.4351699902622308)))*((- (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN (((((0.2947830479120579))<((rt0.c0))))) AND ((rt0.c3)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)>=(0.4351699902622308)))*((- (rt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((((0.2947830479120579))<((rt0.c0))))) AND ((rt0.c3)))) ORDER BY ((((rt0.c2)>=(0.4351699902622308)))*((- (rt0.c1)))) ASC;
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON (((+ (rt0.c0))) ISNULL) WHERE ((((rt0.c2)) BETWEEN ((((rt0.c0)-('-1416191318')))) AND (((rt0.c1 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((((rt0.c0)-('-1416191318')))) AND (((rt0.c1 IN ()))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON (((+ (rt0.c0))) ISNULL));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON (((+ (rt0.c0))) ISNULL) WHERE ((((rt0.c2)) BETWEEN ((((rt0.c0)-('-1416191318')))) AND (((rt0.c1 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((((rt0.c0)-('-1416191318')))) AND (((rt0.c1 IN ()))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON (((+ (rt0.c0))) ISNULL));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON (((+ (rt0.c0))) ISNULL) WHERE ((((rt0.c2)) BETWEEN ((((rt0.c0)-('-1416191318')))) AND (((rt0.c1 IN ())))));
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((((((((rt0.c0)OR(rt0.c1)))AND(vt1.c0)))OR(rt0.c2)))OR(vt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)OR(rt0.c1)))AND(vt1.c0)))OR(rt0.c2)))OR(vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((((((((rt0.c0)OR(rt0.c1)))AND(vt1.c0)))OR(rt0.c2)))OR(vt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)OR(rt0.c1)))AND(vt1.c0)))OR(rt0.c2)))OR(vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((((((((rt0.c0)OR(rt0.c1)))AND(vt1.c0)))OR(rt0.c2)))OR(vt1.c0))) ISNULL));
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY (- (((((rt0.c2)OR(rt0.c0)))OR(rt0.c3)))), CASE (((NULL)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))  WHEN (+ (rt0.c1)) THEN rt0.c0 ELSE rt0.c1 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY (- (((((rt0.c2)OR(rt0.c0)))OR(rt0.c3)))), CASE (((NULL)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))  WHEN (+ (rt0.c1)) THEN rt0.c0 ELSE rt0.c1 END  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY (- (((((rt0.c2)OR(rt0.c0)))OR(rt0.c3)))), CASE (((NULL)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))  WHEN (+ (rt0.c1)) THEN rt0.c0 ELSE rt0.c1 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY (- (((((rt0.c2)OR(rt0.c0)))OR(rt0.c3)))), CASE (((NULL)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))  WHEN (+ (rt0.c1)) THEN rt0.c0 ELSE rt0.c1 END  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY (- (((((rt0.c2)OR(rt0.c0)))OR(rt0.c3)))), CASE (((NULL)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))  WHEN (+ (rt0.c1)) THEN rt0.c0 ELSE rt0.c1 END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON NULL WHERE (((((-245485103) NOT BETWEEN (rt0.c1) AND (vt1.c0))) NOT BETWEEN (CASE WHEN rt0.c0 THEN 0Xffffffff9d1186ea WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN vt1.c0 END) AND ((((rt0.c2))!=((rt0.c0)))))) ORDER BY (((((((((vt1.c0 IN ()))OR(((rt0.c3)LIKE(vt1.c0)))))AND(((rt0.c0)%(rt0.c1)))))AND((rt0.c1 IN (vt1.c0)))))OR(((vt1.c0) BETWEEN (rt0.c1) AND (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((-245485103) NOT BETWEEN (rt0.c1) AND (vt1.c0))) NOT BETWEEN (CASE WHEN rt0.c0 THEN 0xffffffff9d1186ea WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN vt1.c0 END) AND ((((rt0.c2))<>((rt0.c0)))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON NULL ORDER BY (((((((((vt1.c0 IN ()))OR(((rt0.c3)LIKE(vt1.c0)))))AND(((rt0.c0)%(rt0.c1)))))AND((rt0.c1 IN (vt1.c0)))))OR(((vt1.c0) BETWEEN (rt0.c1) AND (vt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON NULL WHERE (((((-245485103) NOT BETWEEN (rt0.c1) AND (vt1.c0))) NOT BETWEEN (CASE WHEN rt0.c0 THEN 0Xffffffff9d1186ea WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN vt1.c0 END) AND ((((rt0.c2))!=((rt0.c0)))))) ORDER BY (((((((((vt1.c0 IN ()))OR(((rt0.c3)LIKE(vt1.c0)))))AND(((rt0.c0)%(rt0.c1)))))AND((rt0.c1 IN (vt1.c0)))))OR(((vt1.c0) BETWEEN (rt0.c1) AND (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((-245485103) NOT BETWEEN (rt0.c1) AND (vt1.c0))) NOT BETWEEN (CASE WHEN rt0.c0 THEN 0xffffffff9d1186ea WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN vt1.c0 END) AND ((((rt0.c2))<>((rt0.c0)))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON NULL ORDER BY (((((((((vt1.c0 IN ()))OR(((rt0.c3)LIKE(vt1.c0)))))AND(((rt0.c0)%(rt0.c1)))))AND((rt0.c1 IN (vt1.c0)))))OR(((vt1.c0) BETWEEN (rt0.c1) AND (vt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON NULL WHERE (((((-245485103) NOT BETWEEN (rt0.c1) AND (vt1.c0))) NOT BETWEEN (CASE WHEN rt0.c0 THEN 0Xffffffff9d1186ea WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN vt1.c0 END) AND ((((rt0.c2))!=((rt0.c0)))))) ORDER BY (((((((((vt1.c0 IN ()))OR(((rt0.c3)LIKE(vt1.c0)))))AND(((rt0.c0)%(rt0.c1)))))AND((rt0.c1 IN (vt1.c0)))))OR(((vt1.c0) BETWEEN (rt0.c1) AND (vt1.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE ((NOT (vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((NOT (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE ((NOT (vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((NOT (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE ((NOT (vt1.c0)) COLLATE BINARY);
SELECT * FROM vt1 WHERE (CAST((vt1.c0 IN (vt1.c0)) AS INTEGER)) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))>=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt1.c0 IN (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))>=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS FIRST);
SELECT * FROM vt1 WHERE (CAST((vt1.c0 IN (vt1.c0)) AS INTEGER)) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))>=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt1.c0 IN (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))>=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS FIRST);
SELECT * FROM vt1 WHERE (CAST((vt1.c0 IN (vt1.c0)) AS INTEGER)) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))>=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c0 IN (rt0.c3))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (rt0.c3))) IS TRUE)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c0 IN (rt0.c3))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (rt0.c3))) IS TRUE)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c0 IN (rt0.c3))) IS TRUE));
SELECT * FROM vt1 WHERE (CASE LENGTH(NULL)  WHEN ((((((((NULL)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) THEN (((vt1.c0))>=((vt1.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE LENGTH(NULL)  WHEN ((((((((NULL)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) THEN (((vt1.c0))>=((vt1.c0))) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE LENGTH(NULL)  WHEN ((((((((NULL)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) THEN (((vt1.c0))>=((vt1.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE LENGTH(NULL)  WHEN ((((((((NULL)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) THEN (((vt1.c0))>=((vt1.c0))) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE LENGTH(NULL)  WHEN ((((((((NULL)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) THEN (((vt1.c0))>=((vt1.c0))) END);
SELECT * FROM vt1, rt0 WHERE ((((rt0.c1)) BETWEEN (((rt0.c3 IN ()))) AND ((rt0.c3)))) ORDER BY ((INSTR(rt0.c1, rt0.c1)) BETWEEN (((rt0.c1)>(rt0.c3))) AND (CAST(rt0.c3 AS REAL))), ((((rt0.c1)<(rt0.c3)))<(((rt0.c3)+('1673653405')))) DESC, ((CAST('░UqYAs-_o' AS TEXT)) NOT BETWEEN ((rt0.c1 IN ())) AND (((vt1.c0)/(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN (((rt0.c3 IN ()))) AND ((rt0.c3)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((INSTR(rt0.c1, rt0.c1)) BETWEEN (((rt0.c1)>(rt0.c3))) AND (CAST(rt0.c3 AS REAL))), ((((rt0.c1)<(rt0.c3)))<(((rt0.c3)+('1673653405')))) DESC, ((CAST('░UqYAs-_o' AS TEXT)) NOT BETWEEN ((rt0.c1 IN ())) AND (((vt1.c0)/(rt0.c2))))  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE ((((rt0.c1)) BETWEEN (((rt0.c3 IN ()))) AND ((rt0.c3)))) ORDER BY ((INSTR(rt0.c1, rt0.c1)) BETWEEN (((rt0.c1)>(rt0.c3))) AND (CAST(rt0.c3 AS REAL))), ((((rt0.c1)<(rt0.c3)))<(((rt0.c3)+('1673653405')))) DESC, ((CAST('░UqYAs-_o' AS TEXT)) NOT BETWEEN ((rt0.c1 IN ())) AND (((vt1.c0)/(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN (((rt0.c3 IN ()))) AND ((rt0.c3)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((INSTR(rt0.c1, rt0.c1)) BETWEEN (((rt0.c1)>(rt0.c3))) AND (CAST(rt0.c3 AS REAL))), ((((rt0.c1)<(rt0.c3)))<(((rt0.c3)+('1673653405')))) DESC, ((CAST('░UqYAs-_o' AS TEXT)) NOT BETWEEN ((rt0.c1 IN ())) AND (((vt1.c0)/(rt0.c2))))  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE ((((rt0.c1)) BETWEEN (((rt0.c3 IN ()))) AND ((rt0.c3)))) ORDER BY ((INSTR(rt0.c1, rt0.c1)) BETWEEN (((rt0.c1)>(rt0.c3))) AND (CAST(rt0.c3 AS REAL))), ((((rt0.c1)<(rt0.c3)))<(((rt0.c3)+('1673653405')))) DESC, ((CAST('░UqYAs-_o' AS TEXT)) NOT BETWEEN ((rt0.c1 IN ())) AND (((vt1.c0)/(rt0.c2))))  NULLS FIRST;
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON ((CASE vt1.c0  WHEN rt0.c2 THEN NULL END) BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((-884293823)))) AND (CAST(rt0.c3 AS INTEGER))) WHERE ((((((rt0.c1)>(NULL)), (~ (rt0.c3)), ((((((((((((rt0.c1)OR(vt1.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c3)))AND(NULL)))AND(rt0.c3))))<((((((rt0.c3)AND(rt0.c1)))AND(vt1.c0)), ((rt0.c1) ISNULL), CAST(rt0.c0 AS BLOB))))) ORDER BY ((rt0.c3)>=(rt0.c2)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)>(NULL)), (~ (rt0.c3)), ((((((((((((rt0.c1)OR(vt1.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c3)))AND(NULL)))AND(rt0.c3))))<((((((rt0.c3)AND(rt0.c1)))AND(vt1.c0)), ((rt0.c1) ISNULL), CAST(rt0.c0 AS BLOB))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON ((CASE vt1.c0  WHEN rt0.c2 THEN NULL END) BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((-884293823)))) AND (CAST(rt0.c3 AS INTEGER))) ORDER BY ((rt0.c3)>=(rt0.c2)) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON ((CASE vt1.c0  WHEN rt0.c2 THEN NULL END) BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((-884293823)))) AND (CAST(rt0.c3 AS INTEGER))) WHERE ((((((rt0.c1)>(NULL)), (~ (rt0.c3)), ((((((((((((rt0.c1)OR(vt1.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c3)))AND(NULL)))AND(rt0.c3))))<((((((rt0.c3)AND(rt0.c1)))AND(vt1.c0)), ((rt0.c1) ISNULL), CAST(rt0.c0 AS BLOB))))) ORDER BY ((rt0.c3)>=(rt0.c2)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)>(NULL)), (~ (rt0.c3)), ((((((((((((rt0.c1)OR(vt1.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c3)))AND(NULL)))AND(rt0.c3))))<((((((rt0.c3)AND(rt0.c1)))AND(vt1.c0)), ((rt0.c1) ISNULL), CAST(rt0.c0 AS BLOB))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON ((CASE vt1.c0  WHEN rt0.c2 THEN NULL END) BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((-884293823)))) AND (CAST(rt0.c3 AS INTEGER))) ORDER BY ((rt0.c3)>=(rt0.c2)) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON ((CASE vt1.c0  WHEN rt0.c2 THEN NULL END) BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((-884293823)))) AND (CAST(rt0.c3 AS INTEGER))) WHERE ((((((rt0.c1)>(NULL)), (~ (rt0.c3)), ((((((((((((rt0.c1)OR(vt1.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c3)))AND(NULL)))AND(rt0.c3))))<((((((rt0.c3)AND(rt0.c1)))AND(vt1.c0)), ((rt0.c1) ISNULL), CAST(rt0.c0 AS BLOB))))) ORDER BY ((rt0.c3)>=(rt0.c2)) COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM rt0, vt1 WHERE (COALESCE(DISTINCT CAST(rt0.c3 AS INTEGER), 0.26629014704444165));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT CAST(rt0.c3 AS INTEGER), 0.26629014704444165)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (COALESCE(DISTINCT CAST(rt0.c3 AS INTEGER), 0.26629014704444165));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT CAST(rt0.c3 AS INTEGER), 0.26629014704444165)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (COALESCE(DISTINCT CAST(rt0.c3 AS INTEGER), 0.26629014704444165));
SELECT * FROM vt1, rt0 WHERE (NULL) ORDER BY SUBSTR(((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)), rt0.c2) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, rt0 ORDER BY SUBSTR(((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)), rt0.c2) ASC);
SELECT * FROM vt1, rt0 WHERE (NULL) ORDER BY SUBSTR(((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)), rt0.c2) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, rt0 ORDER BY SUBSTR(((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)), rt0.c2) ASC);
SELECT * FROM vt1, rt0 WHERE (NULL) ORDER BY SUBSTR(((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)), rt0.c2) ASC;
SELECT * FROM rt0, vt1 WHERE ((NOT (((rt0.c2) BETWEEN (0xffffffffd8bafaf0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2) BETWEEN (0Xffffffffd8bafaf0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((NOT (((rt0.c2) BETWEEN (0xffffffffd8bafaf0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2) BETWEEN (0Xffffffffd8bafaf0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((NOT (((rt0.c2) BETWEEN (0xffffffffd8bafaf0) AND (rt0.c0)))));
SELECT ALL * FROM rt0, vt1 WHERE (json_array_length(CAST(rt0.c3 AS REAL), ((rt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((json_array_length(CAST(rt0.c3 AS REAL), ((rt0.c0) ISNULL))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (json_array_length(CAST(rt0.c3 AS REAL), ((rt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((json_array_length(CAST(rt0.c3 AS REAL), ((rt0.c0) ISNULL))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (json_array_length(CAST(rt0.c3 AS REAL), ((rt0.c0) ISNULL)));
SELECT COUNT(*) FROM rt0, vt1 WHERE (((vt1.c0 COLLATE RTRIM) ISNULL)) ORDER BY rt0.c0 COLLATE RTRIM COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c0 COLLATE RTRIM COLLATE RTRIM);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((vt1.c0 COLLATE RTRIM) ISNULL)) ORDER BY rt0.c0 COLLATE RTRIM COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c0 COLLATE RTRIM COLLATE RTRIM);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((vt1.c0 COLLATE RTRIM) ISNULL)) ORDER BY rt0.c0 COLLATE RTRIM COLLATE RTRIM;
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON ((((CAST(vt1.c0 AS BLOB))AND(NULL)))AND(((((vt1.c0)OR(rt0.c0)))AND(0.566751072030415)))) WHERE (((rt0.c2) IS FALSE)) ORDER BY LTRIM(((rt0.c1)-(rt0.c2)), ((rt0.c0)==(vt1.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS FALSE)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((((CAST(vt1.c0 AS BLOB))AND(NULL)))AND(((((vt1.c0)OR(rt0.c0)))AND(0.566751072030415)))) ORDER BY LTRIM(((rt0.c1)-(rt0.c2)), ((rt0.c0)=(vt1.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON ((((CAST(vt1.c0 AS BLOB))AND(NULL)))AND(((((vt1.c0)OR(rt0.c0)))AND(0.566751072030415)))) WHERE (((rt0.c2) IS FALSE)) ORDER BY LTRIM(((rt0.c1)-(rt0.c2)), ((rt0.c0)==(vt1.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS FALSE)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((((CAST(vt1.c0 AS BLOB))AND(NULL)))AND(((((vt1.c0)OR(rt0.c0)))AND(0.566751072030415)))) ORDER BY LTRIM(((rt0.c1)-(rt0.c2)), ((rt0.c0)=(vt1.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON ((((CAST(vt1.c0 AS BLOB))AND(NULL)))AND(((((vt1.c0)OR(rt0.c0)))AND(0.566751072030415)))) WHERE (((rt0.c2) IS FALSE)) ORDER BY LTRIM(((rt0.c1)-(rt0.c2)), ((rt0.c0)==(vt1.c0))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c2)<=(rt0.c1)) IN ())) ORDER BY ((vt1.c0 COLLATE RTRIM)%(CAST(vt1.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)<=(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((vt1.c0 COLLATE RTRIM)%(CAST(vt1.c0 AS INTEGER))) ASC);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c2)<=(rt0.c1)) IN ())) ORDER BY ((vt1.c0 COLLATE RTRIM)%(CAST(vt1.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)<=(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((vt1.c0 COLLATE RTRIM)%(CAST(vt1.c0 AS INTEGER))) ASC);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c2)<=(rt0.c1)) IN ())) ORDER BY ((vt1.c0 COLLATE RTRIM)%(CAST(vt1.c0 AS INTEGER))) ASC;
SELECT COUNT(*) FROM rt0, vt1 WHERE ((NOT (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((NOT (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((NOT (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)))));
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (((((rt0.c2)AND(rt0.c2))) NOT NULL)) ORDER BY CASE CAST(rt0.c2 AS INTEGER)  WHEN (- (vt1.c0)) THEN ((rt0.c1)%(vt1.c0)) END DESC, ((((((rt0.c1, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, rt0.c1, x'7eb9')) AND ((NULL, rt0.c2, rt0.c0))), (((('')OR(vt1.c0)))AND(rt0.c2)), load_extension(vt1.c0)))>=(((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0))), CASE WHEN rt0.c3 THEN rt0.c2 ELSE vt1.c0 END, (((rt0.c3))<>((rt0.c0)))))) DESC  NULLS FIRST, CASE WHEN CAST(rt0.c2 AS TEXT) THEN CAST('[p' AS REAL) WHEN ((rt0.c3)==(rt0.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END WHEN vt1.c0 THEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)AND(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY CASE CAST(rt0.c2 AS INTEGER)  WHEN (- (vt1.c0)) THEN ((rt0.c1)%(vt1.c0)) END DESC, ((((((rt0.c1, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, rt0.c1, x'7eb9')) AND ((NULL, rt0.c2, rt0.c0))), (((('')OR(vt1.c0)))AND(rt0.c2)), load_extension(vt1.c0)))>=(((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0))), CASE WHEN rt0.c3 THEN rt0.c2 ELSE vt1.c0 END, (((rt0.c3))<>((rt0.c0)))))) DESC  NULLS FIRST, CASE WHEN CAST(rt0.c2 AS TEXT) THEN CAST('[p' AS REAL) WHEN ((rt0.c3)==(rt0.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END WHEN vt1.c0 THEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) END  NULLS FIRST);
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (((((rt0.c2)AND(rt0.c2))) NOT NULL)) ORDER BY CASE CAST(rt0.c2 AS INTEGER)  WHEN (- (vt1.c0)) THEN ((rt0.c1)%(vt1.c0)) END DESC, ((((((rt0.c1, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, rt0.c1, x'7eb9')) AND ((NULL, rt0.c2, rt0.c0))), (((('')OR(vt1.c0)))AND(rt0.c2)), load_extension(vt1.c0)))>=(((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0))), CASE WHEN rt0.c3 THEN rt0.c2 ELSE vt1.c0 END, (((rt0.c3))<>((rt0.c0)))))) DESC  NULLS FIRST, CASE WHEN CAST(rt0.c2 AS TEXT) THEN CAST('[p' AS REAL) WHEN ((rt0.c3)==(rt0.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END WHEN vt1.c0 THEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)AND(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY CASE CAST(rt0.c2 AS INTEGER)  WHEN (- (vt1.c0)) THEN ((rt0.c1)%(vt1.c0)) END DESC, ((((((rt0.c1, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, rt0.c1, x'7eb9')) AND ((NULL, rt0.c2, rt0.c0))), (((('')OR(vt1.c0)))AND(rt0.c2)), load_extension(vt1.c0)))>=(((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0))), CASE WHEN rt0.c3 THEN rt0.c2 ELSE vt1.c0 END, (((rt0.c3))<>((rt0.c0)))))) DESC  NULLS FIRST, CASE WHEN CAST(rt0.c2 AS TEXT) THEN CAST('[p' AS REAL) WHEN ((rt0.c3)==(rt0.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END WHEN vt1.c0 THEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) END  NULLS FIRST);
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (((((rt0.c2)AND(rt0.c2))) NOT NULL)) ORDER BY CASE CAST(rt0.c2 AS INTEGER)  WHEN (- (vt1.c0)) THEN ((rt0.c1)%(vt1.c0)) END DESC, ((((((rt0.c1, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, rt0.c1, x'7eb9')) AND ((NULL, rt0.c2, rt0.c0))), (((('')OR(vt1.c0)))AND(rt0.c2)), load_extension(vt1.c0)))>=(((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0))), CASE WHEN rt0.c3 THEN rt0.c2 ELSE vt1.c0 END, (((rt0.c3))<>((rt0.c0)))))) DESC  NULLS FIRST, CASE WHEN CAST(rt0.c2 AS TEXT) THEN CAST('[p' AS REAL) WHEN ((rt0.c3)==(rt0.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END WHEN vt1.c0 THEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) END  NULLS FIRST;
SELECT * FROM rt0, vt1 WHERE ((+ (NULL COLLATE BINARY))) ORDER BY (((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))OR(((rt0.c0) NOTNULL))))OR(((rt0.c2)%(vt1.c0)))), CASE (- (vt1.c0))  WHEN ((vt1.c0) ISNULL) THEN ((rt0.c3)>>(rt0.c1)) ELSE (vt1.c0 IN (vt1.c0, vt1.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (NULL COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))OR(((rt0.c0) NOTNULL))))OR(((rt0.c2)%(vt1.c0)))), CASE (- (vt1.c0))  WHEN ((vt1.c0) ISNULL) THEN ((rt0.c3)>>(rt0.c1)) ELSE (vt1.c0 IN (vt1.c0, vt1.c0)) END DESC  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE ((+ (NULL COLLATE BINARY))) ORDER BY (((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))OR(((rt0.c0) NOTNULL))))OR(((rt0.c2)%(vt1.c0)))), CASE (- (vt1.c0))  WHEN ((vt1.c0) ISNULL) THEN ((rt0.c3)>>(rt0.c1)) ELSE (vt1.c0 IN (vt1.c0, vt1.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (NULL COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))OR(((rt0.c0) NOTNULL))))OR(((rt0.c2)%(vt1.c0)))), CASE (- (vt1.c0))  WHEN ((vt1.c0) ISNULL) THEN ((rt0.c3)>>(rt0.c1)) ELSE (vt1.c0 IN (vt1.c0, vt1.c0)) END DESC  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE ((+ (NULL COLLATE BINARY))) ORDER BY (((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))OR(((rt0.c0) NOTNULL))))OR(((rt0.c2)%(vt1.c0)))), CASE (- (vt1.c0))  WHEN ((vt1.c0) ISNULL) THEN ((rt0.c3)>>(rt0.c1)) ELSE (vt1.c0 IN (vt1.c0, vt1.c0)) END DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END)<>(CAST(rt0.c3 AS TEXT)))) ORDER BY CAST(((rt0.c0) NOT BETWEEN (x'cd1a') AND (rt0.c1)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END)<>(CAST(rt0.c3 AS TEXT)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0) NOT BETWEEN (x'cd1a') AND (rt0.c1)) AS BLOB) ASC);
SELECT * FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END)<>(CAST(rt0.c3 AS TEXT)))) ORDER BY CAST(((rt0.c0) NOT BETWEEN (x'cd1a') AND (rt0.c1)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END)<>(CAST(rt0.c3 AS TEXT)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0) NOT BETWEEN (x'cd1a') AND (rt0.c1)) AS BLOB) ASC);
SELECT * FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END)<>(CAST(rt0.c3 AS TEXT)))) ORDER BY CAST(((rt0.c0) NOT BETWEEN (x'cd1a') AND (rt0.c1)) AS BLOB) ASC;
SELECT COUNT(*) FROM rt0, vt1 WHERE (((CAST(vt1.c0 AS REAL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS REAL)) IS FALSE)) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((CAST(vt1.c0 AS REAL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS REAL)) IS FALSE)) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((CAST(vt1.c0 AS REAL)) IS FALSE));
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER))OR(vt1.c0 COLLATE RTRIM))) ORDER BY (((vt1.c0)) NOT BETWEEN (((NOT (vt1.c0)))) AND ((((vt1.c0)GLOB(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS INTEGER))OR(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) NOT BETWEEN (((NOT (vt1.c0)))) AND ((((vt1.c0)GLOB(vt1.c0))))));
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER))OR(vt1.c0 COLLATE RTRIM))) ORDER BY (((vt1.c0)) NOT BETWEEN (((NOT (vt1.c0)))) AND ((((vt1.c0)GLOB(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS INTEGER))OR(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) NOT BETWEEN (((NOT (vt1.c0)))) AND ((((vt1.c0)GLOB(vt1.c0))))));
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER))OR(vt1.c0 COLLATE RTRIM))) ORDER BY (((vt1.c0)) NOT BETWEEN (((NOT (vt1.c0)))) AND ((((vt1.c0)GLOB(vt1.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (0.846346842733181);
SELECT SUM(count) FROM (SELECT ALL ((0.846346842733181) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (0.846346842733181);
SELECT SUM(count) FROM (SELECT ALL ((0.846346842733181) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (0.846346842733181);
SELECT ALL * FROM rt0 WHERE (((UPPER('1109973198')) NOT NULL)) ORDER BY ((((rt0.c2)<(rt0.c1)))>>((0.827418366895003 IN ())));
SELECT SUM(count) FROM (SELECT ((((UPPER('1109973198')) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)<(rt0.c1)))>>((0.827418366895003 IN ()))));
SELECT ALL * FROM rt0 WHERE (((UPPER('1109973198')) NOT NULL)) ORDER BY ((((rt0.c2)<(rt0.c1)))>>((0.827418366895003 IN ())));
SELECT SUM(count) FROM (SELECT ((((UPPER('1109973198')) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)<(rt0.c1)))>>((0.827418366895003 IN ()))));
SELECT ALL * FROM rt0 WHERE (((UPPER('1109973198')) NOT NULL)) ORDER BY ((((rt0.c2)<(rt0.c1)))>>((0.827418366895003 IN ())));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((CASE vt1.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE vt1.c0 END)IS NOT(0.14852781198364529)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE vt1.c0 END)IS NOT(0.14852781198364529))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((CASE vt1.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE vt1.c0 END)IS NOT(0.14852781198364529)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE vt1.c0 END)IS NOT(0.14852781198364529))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((CASE vt1.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE vt1.c0 END)IS NOT(0.14852781198364529)));
SELECT COUNT(*) FROM rt0 WHERE (CAST((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) AS REAL)) ORDER BY (((((((rt0.c3, rt0.c3, rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1, rt0.c2, rt0.c0))))AND(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 END)))OR(((rt0.c1)/(rt0.c3)))) ASC, CAST(LENGTH(rt0.c0) AS TEXT)  NULLS FIRST, NULLIF(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c3)), (('')>>(rt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY (((((((rt0.c3, rt0.c3, rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1, rt0.c2, rt0.c0))))AND(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 END)))OR(((rt0.c1)/(rt0.c3)))) ASC, CAST(LENGTH(rt0.c0) AS TEXT)  NULLS FIRST, NULLIF(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c3)), (('')>>(rt0.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CAST((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) AS REAL)) ORDER BY (((((((rt0.c3, rt0.c3, rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1, rt0.c2, rt0.c0))))AND(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 END)))OR(((rt0.c1)/(rt0.c3)))) ASC, CAST(LENGTH(rt0.c0) AS TEXT)  NULLS FIRST, NULLIF(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c3)), (('')>>(rt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY (((((((rt0.c3, rt0.c3, rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1, rt0.c2, rt0.c0))))AND(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 END)))OR(((rt0.c1)/(rt0.c3)))) ASC, CAST(LENGTH(rt0.c0) AS TEXT)  NULLS FIRST, NULLIF(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c3)), (('')>>(rt0.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CAST((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) AS REAL)) ORDER BY (((((((rt0.c3, rt0.c3, rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1, rt0.c2, rt0.c0))))AND(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 END)))OR(((rt0.c1)/(rt0.c3)))) ASC, CAST(LENGTH(rt0.c0) AS TEXT)  NULLS FIRST, NULLIF(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c3)), (('')>>(rt0.c0))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1, rt0 WHERE (CAST(((vt1.c0) ISNULL) AS INTEGER)) ORDER BY ((((rt0.c0)LIKE(rt0.c3))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) ISNULL) AS INTEGER)) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c0)LIKE(rt0.c3))) IS TRUE)  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (CAST(((vt1.c0) ISNULL) AS INTEGER)) ORDER BY ((((rt0.c0)LIKE(rt0.c3))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) ISNULL) AS INTEGER)) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c0)LIKE(rt0.c3))) IS TRUE)  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (CAST(((vt1.c0) ISNULL) AS INTEGER)) ORDER BY ((((rt0.c0)LIKE(rt0.c3))) IS TRUE)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON (((CASE WHEN rt0.c3 THEN rt0.c2 END, ((rt0.c0)>=(rt0.c2)), TYPEOF(DISTINCT rt0.c2)))<=((CAST(vt1.c0 AS NUMERIC), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)), CASE WHEN rt0.c3 THEN rt0.c2 ELSE 0.72763511094752 END))) WHERE ('1c');
SELECT SUM(count) FROM (SELECT (('1c') IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON (((CASE WHEN rt0.c3 THEN rt0.c2 END, ((rt0.c0)>=(rt0.c2)), TYPEOF(DISTINCT rt0.c2)))<=((CAST(vt1.c0 AS NUMERIC), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)), CASE WHEN rt0.c3 THEN rt0.c2 ELSE 0.72763511094752 END))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON (((CASE WHEN rt0.c3 THEN rt0.c2 END, ((rt0.c0)>=(rt0.c2)), TYPEOF(DISTINCT rt0.c2)))<=((CAST(vt1.c0 AS NUMERIC), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)), CASE WHEN rt0.c3 THEN rt0.c2 ELSE 0.72763511094752 END))) WHERE ('1c');
SELECT SUM(count) FROM (SELECT (('1c') IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON (((CASE WHEN rt0.c3 THEN rt0.c2 END, ((rt0.c0)>=(rt0.c2)), TYPEOF(DISTINCT rt0.c2)))<=((CAST(vt1.c0 AS NUMERIC), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)), CASE WHEN rt0.c3 THEN rt0.c2 ELSE 0.72763511094752 END))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON (((CASE WHEN rt0.c3 THEN rt0.c2 END, ((rt0.c0)>=(rt0.c2)), TYPEOF(DISTINCT rt0.c2)))<=((CAST(vt1.c0 AS NUMERIC), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)), CASE WHEN rt0.c3 THEN rt0.c2 ELSE 0.72763511094752 END))) WHERE ('1c');
SELECT ALL * FROM rt0, vt1 WHERE (((((vt1.c0) ISNULL))IS NOT(LOWER(DISTINCT rt0.c0)))) ORDER BY CASE ((rt0.c3)+(rt0.c1))  WHEN CASE WHEN rt0.c3 THEN rt0.c3 END THEN NULLIF(DISTINCT rt0.c2, rt0.c0) WHEN rt0.c3 COLLATE RTRIM THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) WHEN rt0.c3 COLLATE BINARY THEN ((rt0.c0) NOT NULL) WHEN vt1.c0 COLLATE NOCASE THEN ((rt0.c0)AND(rt0.c3)) WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE NULL END THEN (NOT (rt0.c2)) ELSE CASE WHEN rt0.c3 THEN rt0.c1 END END  NULLS FIRST, (NOT (CAST(rt0.c1 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) ISNULL))IS NOT(LOWER(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE ((rt0.c3)+(rt0.c1))  WHEN CASE WHEN rt0.c3 THEN rt0.c3 END THEN NULLIF(DISTINCT rt0.c2, rt0.c0) WHEN rt0.c3 COLLATE RTRIM THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) WHEN rt0.c3 COLLATE BINARY THEN ((rt0.c0) NOT NULL) WHEN vt1.c0 COLLATE NOCASE THEN ((rt0.c0)AND(rt0.c3)) WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE NULL END THEN (NOT (rt0.c2)) ELSE CASE WHEN rt0.c3 THEN rt0.c1 END END  NULLS FIRST, (NOT (CAST(rt0.c1 AS REAL))));
SELECT ALL * FROM rt0, vt1 WHERE (((((vt1.c0) ISNULL))IS NOT(LOWER(DISTINCT rt0.c0)))) ORDER BY CASE ((rt0.c3)+(rt0.c1))  WHEN CASE WHEN rt0.c3 THEN rt0.c3 END THEN NULLIF(DISTINCT rt0.c2, rt0.c0) WHEN rt0.c3 COLLATE RTRIM THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) WHEN rt0.c3 COLLATE BINARY THEN ((rt0.c0) NOT NULL) WHEN vt1.c0 COLLATE NOCASE THEN ((rt0.c0)AND(rt0.c3)) WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE NULL END THEN (NOT (rt0.c2)) ELSE CASE WHEN rt0.c3 THEN rt0.c1 END END  NULLS FIRST, (NOT (CAST(rt0.c1 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) ISNULL))IS NOT(LOWER(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE ((rt0.c3)+(rt0.c1))  WHEN CASE WHEN rt0.c3 THEN rt0.c3 END THEN NULLIF(DISTINCT rt0.c2, rt0.c0) WHEN rt0.c3 COLLATE RTRIM THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) WHEN rt0.c3 COLLATE BINARY THEN ((rt0.c0) NOT NULL) WHEN vt1.c0 COLLATE NOCASE THEN ((rt0.c0)AND(rt0.c3)) WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE NULL END THEN (NOT (rt0.c2)) ELSE CASE WHEN rt0.c3 THEN rt0.c1 END END  NULLS FIRST, (NOT (CAST(rt0.c1 AS REAL))));
SELECT ALL * FROM rt0, vt1 WHERE (((((vt1.c0) ISNULL))IS NOT(LOWER(DISTINCT rt0.c0)))) ORDER BY CASE ((rt0.c3)+(rt0.c1))  WHEN CASE WHEN rt0.c3 THEN rt0.c3 END THEN NULLIF(DISTINCT rt0.c2, rt0.c0) WHEN rt0.c3 COLLATE RTRIM THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) WHEN rt0.c3 COLLATE BINARY THEN ((rt0.c0) NOT NULL) WHEN vt1.c0 COLLATE NOCASE THEN ((rt0.c0)AND(rt0.c3)) WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE NULL END THEN (NOT (rt0.c2)) ELSE CASE WHEN rt0.c3 THEN rt0.c1 END END  NULLS FIRST, (NOT (CAST(rt0.c1 AS REAL)));
SELECT ALL * FROM rt0 WHERE (((GLOB(rt0.c3, rt0.c1))>(rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((GLOB(rt0.c3, rt0.c1))>(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((GLOB(rt0.c3, rt0.c1))>(rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((GLOB(rt0.c3, rt0.c1))>(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((GLOB(rt0.c3, rt0.c1))>(rt0.c1 COLLATE BINARY)));
SELECT ALL * FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS INTEGER)) ORDER BY ((CASE WHEN rt0.c1 THEN x'' ELSE rt0.c3 END) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND ('-508220311'))) AND (rt0.c2 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c1 THEN x'' ELSE rt0.c3 END) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND ('-508220311'))) AND (rt0.c2 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS INTEGER)) ORDER BY ((CASE WHEN rt0.c1 THEN x'' ELSE rt0.c3 END) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND ('-508220311'))) AND (rt0.c2 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c1 THEN x'' ELSE rt0.c3 END) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND ('-508220311'))) AND (rt0.c2 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS INTEGER)) ORDER BY ((CASE WHEN rt0.c1 THEN x'' ELSE rt0.c3 END) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND ('-508220311'))) AND (rt0.c2 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT * FROM rt0, vt1 WHERE (((('>+')) BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE NOCASE COLLATE RTRIM) ORDER BY rt0.c3, TRIM(DISTINCT ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)), (+ (vt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((('>+')) BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c3, TRIM(DISTINCT ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)), (+ (vt1.c0))) ASC);
SELECT * FROM rt0, vt1 WHERE (((('>+')) BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE NOCASE COLLATE RTRIM) ORDER BY rt0.c3, TRIM(DISTINCT ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)), (+ (vt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((('>+')) BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c3, TRIM(DISTINCT ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)), (+ (vt1.c0))) ASC);
SELECT * FROM rt0, vt1 WHERE (((('>+')) BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE NOCASE COLLATE RTRIM) ORDER BY rt0.c3, TRIM(DISTINCT ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)), (+ (vt1.c0))) ASC;
SELECT ALL * FROM vt1, rt0 WHERE (((CASE WHEN vt1.c0 THEN rt0.c1 END)GLOB(((rt0.c3)>=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN rt0.c1 END)GLOB(((rt0.c3)>=(rt0.c1))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((CASE WHEN vt1.c0 THEN rt0.c1 END)GLOB(((rt0.c3)>=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN rt0.c1 END)GLOB(((rt0.c3)>=(rt0.c1))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((CASE WHEN vt1.c0 THEN rt0.c1 END)GLOB(((rt0.c3)>=(rt0.c1)))));
SELECT * FROM vt1 WHERE ((((((+ (vt1.c0)))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))AND((('F') NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((+ (vt1.c0)))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))AND((('F') NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((+ (vt1.c0)))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))AND((('F') NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((+ (vt1.c0)))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))AND((('F') NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((+ (vt1.c0)))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))AND((('F') NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL * FROM vt1, rt0 WHERE (((x'fc9d') IS FALSE));
SELECT SUM(count) FROM (SELECT ((((x'fc9d') IS FALSE)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((x'fc9d') IS FALSE));
SELECT SUM(count) FROM (SELECT ((((x'fc9d') IS FALSE)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((x'fc9d') IS FALSE));
SELECT * FROM rt0, vt1 WHERE ((NOT (-9.50832791E8))) ORDER BY ((((LIKELY(DISTINCT rt0.c2))AND(((rt0.c1)GLOB(rt0.c0)))))OR(load_extension(vt1.c0, rt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (-9.50832791E8))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((LIKELY(DISTINCT rt0.c2))AND(((rt0.c1)GLOB(rt0.c0)))))OR(load_extension(vt1.c0, rt0.c0))) ASC);
SELECT * FROM rt0, vt1 WHERE ((NOT (-9.50832791E8))) ORDER BY ((((LIKELY(DISTINCT rt0.c2))AND(((rt0.c1)GLOB(rt0.c0)))))OR(load_extension(vt1.c0, rt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (-9.50832791E8))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((LIKELY(DISTINCT rt0.c2))AND(((rt0.c1)GLOB(rt0.c0)))))OR(load_extension(vt1.c0, rt0.c0))) ASC);
SELECT ALL * FROM rt0 WHERE ((((((((((('yY')AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c3)))IS NOT(((rt0.c2)/(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((((((('yY')AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c3)))IS NOT(((rt0.c2)/(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((((((('yY')AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c3)))IS NOT(((rt0.c2)/(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((((((('yY')AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c3)))IS NOT(((rt0.c2)/(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((((((('yY')AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c3)))IS NOT(((rt0.c2)/(rt0.c2)))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST(((rt0.c1) ISNULL) AS BLOB)) ORDER BY ((((((vt1.c0)AND(rt0.c1)))AND(rt0.c1))) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) ISNULL) AS BLOB)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((vt1.c0)AND(rt0.c1)))AND(rt0.c1))) IS FALSE) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST(((rt0.c1) ISNULL) AS BLOB)) ORDER BY ((((((vt1.c0)AND(rt0.c1)))AND(rt0.c1))) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) ISNULL) AS BLOB)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((vt1.c0)AND(rt0.c1)))AND(rt0.c1))) IS FALSE) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST(((rt0.c1) ISNULL) AS BLOB)) ORDER BY ((((((vt1.c0)AND(rt0.c1)))AND(rt0.c1))) IS FALSE) ASC  NULLS LAST;
SELECT * FROM rt0 INNER JOIN vt1 ON vt1.c0 WHERE ((((NOT (0xffffffffb3bfcaa0))) IS TRUE)) ORDER BY (((((((rt0.c3))<=((rt0.c0))))OR(((((rt0.c3)OR(rt0.c2)))OR(rt0.c0)))))OR(TYPEOF(vt1.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (0Xffffffffb3bfcaa0))) IS TRUE)) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON vt1.c0 ORDER BY (((((((rt0.c3))<=((rt0.c0))))OR(((((rt0.c3)OR(rt0.c2)))OR(rt0.c0)))))OR(TYPEOF(vt1.c0))) ASC  NULLS LAST);
SELECT * FROM rt0 INNER JOIN vt1 ON vt1.c0 WHERE ((((NOT (0xffffffffb3bfcaa0))) IS TRUE)) ORDER BY (((((((rt0.c3))<=((rt0.c0))))OR(((((rt0.c3)OR(rt0.c2)))OR(rt0.c0)))))OR(TYPEOF(vt1.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (0Xffffffffb3bfcaa0))) IS TRUE)) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON vt1.c0 ORDER BY (((((((rt0.c3))<=((rt0.c0))))OR(((((rt0.c3)OR(rt0.c2)))OR(rt0.c0)))))OR(TYPEOF(vt1.c0))) ASC  NULLS LAST);
SELECT * FROM rt0 INNER JOIN vt1 ON vt1.c0 WHERE ((((NOT (0xffffffffb3bfcaa0))) IS TRUE)) ORDER BY (((((((rt0.c3))<=((rt0.c0))))OR(((((rt0.c3)OR(rt0.c2)))OR(rt0.c0)))))OR(TYPEOF(vt1.c0))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (0xa76a35b);
SELECT SUM(count) FROM (SELECT ALL ((0Xa76a35b) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (0xa76a35b);
SELECT SUM(count) FROM (SELECT ALL ((0Xa76a35b) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (0xa76a35b);
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE (vt1.c0) ORDER BY (- (rt0.c0)) COLLATE BINARY ASC  NULLS LAST, ((NULL) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1 ORDER BY (- (rt0.c0)) COLLATE BINARY ASC  NULLS LAST, ((NULL) NOT NULL) DESC  NULLS LAST);
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE (vt1.c0) ORDER BY (- (rt0.c0)) COLLATE BINARY ASC  NULLS LAST, ((NULL) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1 ORDER BY (- (rt0.c0)) COLLATE BINARY ASC  NULLS LAST, ((NULL) NOT NULL) DESC  NULLS LAST);
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE (vt1.c0) ORDER BY (- (rt0.c0)) COLLATE BINARY ASC  NULLS LAST, ((NULL) NOT NULL) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c3);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)%(vt1.c0)) IN (vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)%(vt1.c0)) IN (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)%(vt1.c0)) IN (vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)%(vt1.c0)) IN (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)%(vt1.c0)) IN (vt1.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt0 WHERE ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END IN ())) ORDER BY (0.26629014704444165 IN ()), CAST((((rt0.c3, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c3)) AND ((rt0.c0, rt0.c1, '鋰is﬽ob䓯'))) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END IN ())) IS TRUE)  as count FROM rt0 ORDER BY (0.26629014704444165 IN ()), CAST((((rt0.c3, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c3)) AND ((rt0.c0, rt0.c1, '鋰is﬽ob䓯'))) AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END IN ())) ORDER BY (0.26629014704444165 IN ()), CAST((((rt0.c3, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c3)) AND ((rt0.c0, rt0.c1, '鋰is﬽ob䓯'))) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END IN ())) IS TRUE)  as count FROM rt0 ORDER BY (0.26629014704444165 IN ()), CAST((((rt0.c3, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c3)) AND ((rt0.c0, rt0.c1, '鋰is﬽ob䓯'))) AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END IN ())) ORDER BY (0.26629014704444165 IN ()), CAST((((rt0.c3, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c3)) AND ((rt0.c0, rt0.c1, '鋰is﬽ob䓯'))) AS REAL)  NULLS LAST;
SELECT * FROM vt1 WHERE (((x'')IS NOT(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((x'')IS NOT(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((x'')IS NOT(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((x'')IS NOT(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((x'')IS NOT(vt1.c0)));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN CAST(rt0.c1 AS TEXT) THEN TYPEOF(DISTINCT rt0.c2) WHEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)) THEN rt0.c3 COLLATE RTRIM WHEN rt0.c1 THEN (('F ')+(rt0.c0)) END) ORDER BY ((NULL) NOT BETWEEN (((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1))) AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN '-42012891' WHEN rt0.c0 THEN rt0.c1 END)), (+ (rt0.c2)) COLLATE NOCASE DESC, 0x6752d3c7;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c1 AS TEXT) THEN TYPEOF(DISTINCT rt0.c2) WHEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)) THEN rt0.c3 COLLATE RTRIM WHEN rt0.c1 THEN (('F ')+(rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY ((NULL) NOT BETWEEN (((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1))) AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN '-42012891' WHEN rt0.c0 THEN rt0.c1 END)), (+ (rt0.c2)) COLLATE NOCASE DESC, 0X6752d3c7);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN CAST(rt0.c1 AS TEXT) THEN TYPEOF(DISTINCT rt0.c2) WHEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)) THEN rt0.c3 COLLATE RTRIM WHEN rt0.c1 THEN (('F ')+(rt0.c0)) END) ORDER BY ((NULL) NOT BETWEEN (((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1))) AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN '-42012891' WHEN rt0.c0 THEN rt0.c1 END)), (+ (rt0.c2)) COLLATE NOCASE DESC, 0x6752d3c7;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c1 AS TEXT) THEN TYPEOF(DISTINCT rt0.c2) WHEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)) THEN rt0.c3 COLLATE RTRIM WHEN rt0.c1 THEN (('F ')+(rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY ((NULL) NOT BETWEEN (((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1))) AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN '-42012891' WHEN rt0.c0 THEN rt0.c1 END)), (+ (rt0.c2)) COLLATE NOCASE DESC, 0X6752d3c7);
SELECT * FROM rt0, vt1 WHERE ((- (((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c0))))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c0);
SELECT * FROM rt0, vt1 WHERE ((- (((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c0))))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c0);
SELECT * FROM rt0, vt1 WHERE ((- (((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c0))))) ORDER BY rt0.c0;
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON ((((NULL) ISNULL)) NOT BETWEEN (((rt0.c3)OR(vt1.c0))) AND ((- ('8{7GC2g*|')))) WHERE (CHAR(((((((((rt0.c2)AND(rt0.c2)))OR(vt1.c0)))OR(rt0.c0)))AND(rt0.c2)), ((rt0.c1)IS(rt0.c2)), CAST(rt0.c1 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((CHAR(((((((((rt0.c2)AND(rt0.c2)))OR(vt1.c0)))OR(rt0.c0)))AND(rt0.c2)), ((rt0.c1)IS(rt0.c2)), CAST(rt0.c1 AS BLOB))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((NULL) ISNULL)) NOT BETWEEN (((rt0.c3)OR(vt1.c0))) AND ((- ('8{7GC2g*|')))));
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON ((((NULL) ISNULL)) NOT BETWEEN (((rt0.c3)OR(vt1.c0))) AND ((- ('8{7GC2g*|')))) WHERE (CHAR(((((((((rt0.c2)AND(rt0.c2)))OR(vt1.c0)))OR(rt0.c0)))AND(rt0.c2)), ((rt0.c1)IS(rt0.c2)), CAST(rt0.c1 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((CHAR(((((((((rt0.c2)AND(rt0.c2)))OR(vt1.c0)))OR(rt0.c0)))AND(rt0.c2)), ((rt0.c1)IS(rt0.c2)), CAST(rt0.c1 AS BLOB))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((NULL) ISNULL)) NOT BETWEEN (((rt0.c3)OR(vt1.c0))) AND ((- ('8{7GC2g*|')))));
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON ((((NULL) ISNULL)) NOT BETWEEN (((rt0.c3)OR(vt1.c0))) AND ((- ('8{7GC2g*|')))) WHERE (CHAR(((((((((rt0.c2)AND(rt0.c2)))OR(vt1.c0)))OR(rt0.c0)))AND(rt0.c2)), ((rt0.c1)IS(rt0.c2)), CAST(rt0.c1 AS BLOB)));
SELECT * FROM vt1 WHERE (((((((0.3967389961147624)AND(vt1.c0)))AND(vt1.c0)))|(((vt1.c0)/(0.3189157982901416))))) ORDER BY '306503045' DESC  NULLS FIRST, (((vt1.c0 IN ()))<=(NULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((0.3967389961147624)AND(vt1.c0)))AND(vt1.c0)))|(((vt1.c0)/(0.3189157982901416))))) IS TRUE)  as count FROM vt1 ORDER BY '306503045' DESC  NULLS FIRST, (((vt1.c0 IN ()))<=(NULL)) ASC);
SELECT * FROM vt1 WHERE (((((((0.3967389961147624)AND(vt1.c0)))AND(vt1.c0)))|(((vt1.c0)/(0.3189157982901416))))) ORDER BY '306503045' DESC  NULLS FIRST, (((vt1.c0 IN ()))<=(NULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((0.3967389961147624)AND(vt1.c0)))AND(vt1.c0)))|(((vt1.c0)/(0.3189157982901416))))) IS TRUE)  as count FROM vt1 ORDER BY '306503045' DESC  NULLS FIRST, (((vt1.c0 IN ()))<=(NULL)) ASC);
SELECT * FROM vt1 WHERE (((((((0.3967389961147624)AND(vt1.c0)))AND(vt1.c0)))|(((vt1.c0)/(0.3189157982901416))))) ORDER BY '306503045' DESC  NULLS FIRST, (((vt1.c0 IN ()))<=(NULL)) ASC;
SELECT ALL * FROM rt0 WHERE (HEX(DISTINCT ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3))));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (HEX(DISTINCT ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3))));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (HEX(DISTINCT ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3))));
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON CASE x'5a867778'  WHEN TRIM(vt1.c0, vt1.c0) THEN ((rt0.c1)%(rt0.c3)) ELSE x'' END WHERE ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt1.c0 END IN ('2080511212'))) ORDER BY ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))%((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt1.c0 END IN ('2080511212'))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON CASE x'5a867778'  WHEN TRIM(vt1.c0, vt1.c0) THEN ((rt0.c1)%(rt0.c3)) ELSE x'' END ORDER BY ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))%((rt0.c2 IN ()))));
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON CASE x'5a867778'  WHEN TRIM(vt1.c0, vt1.c0) THEN ((rt0.c1)%(rt0.c3)) ELSE x'' END WHERE ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt1.c0 END IN ('2080511212'))) ORDER BY ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))%((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt1.c0 END IN ('2080511212'))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON CASE x'5a867778'  WHEN TRIM(vt1.c0, vt1.c0) THEN ((rt0.c1)%(rt0.c3)) ELSE x'' END ORDER BY ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))%((rt0.c2 IN ()))));
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON CASE x'5a867778'  WHEN TRIM(vt1.c0, vt1.c0) THEN ((rt0.c1)%(rt0.c3)) ELSE x'' END WHERE ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt1.c0 END IN ('2080511212'))) ORDER BY ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))%((rt0.c2 IN ())));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((NOT (((rt0.c0)-(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c0)-(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((NOT (((rt0.c0)-(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c0)-(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((NOT (((rt0.c0)-(rt0.c1)))));
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE ('1293136216');
SELECT SUM(count) FROM (SELECT (('1293136216') IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE ('1293136216');
SELECT SUM(count) FROM (SELECT (('1293136216') IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE ('1293136216');
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((0.1728422605866088))>((((rt0.c3) ISNULL))))) ORDER BY rt0.c1  NULLS LAST, (((rt0.c1)) NOT BETWEEN ((NULL)) AND ((CASE vt1.c0  WHEN rt0.c3 THEN rt0.c1 END))) DESC, ((((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN ((((rt0.c0, rt0.c3, vt1.c0))==((rt0.c0, rt0.c2, vt1.c0)))) AND (((((rt0.c2)AND(rt0.c3)))AND(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((0.1728422605866088))>((((rt0.c3) ISNULL))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c1  NULLS LAST, (((rt0.c1)) NOT BETWEEN ((NULL)) AND ((CASE vt1.c0  WHEN rt0.c3 THEN rt0.c1 END))) DESC, ((((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN ((((rt0.c0, rt0.c3, vt1.c0))==((rt0.c0, rt0.c2, vt1.c0)))) AND (((((rt0.c2)AND(rt0.c3)))AND(rt0.c2)))) DESC);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((0.1728422605866088))>((((rt0.c3) ISNULL))))) ORDER BY rt0.c1  NULLS LAST, (((rt0.c1)) NOT BETWEEN ((NULL)) AND ((CASE vt1.c0  WHEN rt0.c3 THEN rt0.c1 END))) DESC, ((((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN ((((rt0.c0, rt0.c3, vt1.c0))==((rt0.c0, rt0.c2, vt1.c0)))) AND (((((rt0.c2)AND(rt0.c3)))AND(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((0.1728422605866088))>((((rt0.c3) ISNULL))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c1  NULLS LAST, (((rt0.c1)) NOT BETWEEN ((NULL)) AND ((CASE vt1.c0  WHEN rt0.c3 THEN rt0.c1 END))) DESC, ((((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN ((((rt0.c0, rt0.c3, vt1.c0))==((rt0.c0, rt0.c2, vt1.c0)))) AND (((((rt0.c2)AND(rt0.c3)))AND(rt0.c2)))) DESC);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((0.1728422605866088))>((((rt0.c3) ISNULL))))) ORDER BY rt0.c1  NULLS LAST, (((rt0.c1)) NOT BETWEEN ((NULL)) AND ((CASE vt1.c0  WHEN rt0.c3 THEN rt0.c1 END))) DESC, ((((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN ((((rt0.c0, rt0.c3, vt1.c0))==((rt0.c0, rt0.c2, vt1.c0)))) AND (((((rt0.c2)AND(rt0.c3)))AND(rt0.c2)))) DESC;
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c0 IN ())))<=((rt0.c0)))) ORDER BY ((CAST(rt0.c1 AS INTEGER))<=(x'a222')) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 IN ())))<=((rt0.c0)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((CAST(rt0.c1 AS INTEGER))<=(x'a222')) DESC);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c0 IN ())))<=((rt0.c0)))) ORDER BY ((CAST(rt0.c1 AS INTEGER))<=(x'a222')) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 IN ())))<=((rt0.c0)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((CAST(rt0.c1 AS INTEGER))<=(x'a222')) DESC);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c0 IN ())))<=((rt0.c0)))) ORDER BY ((CAST(rt0.c1 AS INTEGER))<=(x'a222')) DESC;
SELECT COUNT(*) FROM vt1, rt0 WHERE ((- (rt0.c2)) COLLATE RTRIM) ORDER BY (+ ('0.2191471832468268')) DESC, ABS(((rt0.c2)<(vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0 ORDER BY (+ ('0.2191471832468268')) DESC, ABS(((rt0.c2)<(vt1.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((- (rt0.c2)) COLLATE RTRIM) ORDER BY (+ ('0.2191471832468268')) DESC, ABS(((rt0.c2)<(vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0 ORDER BY (+ ('0.2191471832468268')) DESC, ABS(((rt0.c2)<(vt1.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((- (rt0.c2)) COLLATE RTRIM) ORDER BY (+ ('0.2191471832468268')) DESC, ABS(((rt0.c2)<(vt1.c0)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))OR(0.07490869848532011)))AND(vt1.c0)))AND(vt1.c0)))&((~ (vt1.c0))))) ORDER BY '-1387923705' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)AND(vt1.c0)))OR(0.07490869848532011)))AND(vt1.c0)))AND(vt1.c0)))&((~ (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY '-1387923705' DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))OR(0.07490869848532011)))AND(vt1.c0)))AND(vt1.c0)))&((~ (vt1.c0))))) ORDER BY '-1387923705' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)AND(vt1.c0)))OR(0.07490869848532011)))AND(vt1.c0)))AND(vt1.c0)))&((~ (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY '-1387923705' DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))OR(0.07490869848532011)))AND(vt1.c0)))AND(vt1.c0)))&((~ (vt1.c0))))) ORDER BY '-1387923705' DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN '<<' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOTNULL)) ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(NULL)))OR(vt1.c0))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN '<<' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(NULL)))OR(vt1.c0))) ISNULL) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN '<<' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOTNULL)) ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(NULL)))OR(vt1.c0))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN '<<' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(NULL)))OR(vt1.c0))) ISNULL) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN '<<' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOTNULL)) ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(NULL)))OR(vt1.c0))) ISNULL) DESC;
SELECT * FROM vt1 WHERE ('269-1997-1500 1218 iT');
SELECT SUM(count) FROM (SELECT ALL (('269-1997-1500 1218 iT') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ('269-1997-1500 1218 iT');
SELECT SUM(count) FROM (SELECT ALL (('269-1997-1500 1218 iT') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ('269-1997-1500 1218 iT');
SELECT ALL * FROM rt0, vt1 WHERE ((((rt0.c1)) BETWEEN (((((rt0.c2))=((rt0.c1))))) AND (((~ (rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN (((((rt0.c2))==((rt0.c1))))) AND (((~ (rt0.c2)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((((rt0.c1)) BETWEEN (((((rt0.c2))=((rt0.c1))))) AND (((~ (rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN (((((rt0.c2))==((rt0.c1))))) AND (((~ (rt0.c2)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((((rt0.c1)) BETWEEN (((((rt0.c2))=((rt0.c1))))) AND (((~ (rt0.c2))))));
SELECT COUNT(*) FROM vt1 WHERE (LENGTH(((586756640)|(vt1.c0)))) ORDER BY (('-649044773') IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LENGTH(((586756640)|(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY (('-649044773') IS TRUE) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (LENGTH(((586756640)|(vt1.c0)))) ORDER BY (('-649044773') IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LENGTH(((586756640)|(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY (('-649044773') IS TRUE) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (LENGTH(((586756640)|(vt1.c0)))) ORDER BY (('-649044773') IS TRUE) DESC  NULLS LAST;
SELECT * FROM vt1, rt0 WHERE ((((((((((rt0.c3 IN (rt0.c2)))AND(((rt0.c1)IS(rt0.c1)))))AND((((rt0.c1))=((rt0.c0))))))AND(((rt0.c1)&(rt0.c3)))))AND(TRIM(rt0.c0, rt0.c2)))) ORDER BY rt0.c3 ASC  NULLS FIRST, (((rt0.c2)) NOT BETWEEN (((((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, vt1.c0)) AND ((rt0.c1, rt0.c1, rt0.c2))))) AND ((rt0.c0 COLLATE RTRIM)))  NULLS LAST, (NOT (rt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c3 IN (rt0.c2)))AND(((rt0.c1)IS(rt0.c1)))))AND((((rt0.c1))==((rt0.c0))))))AND(((rt0.c1)&(rt0.c3)))))AND(TRIM(rt0.c0, rt0.c2)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c3 ASC  NULLS FIRST, (((rt0.c2)) NOT BETWEEN (((((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, vt1.c0)) AND ((rt0.c1, rt0.c1, rt0.c2))))) AND ((rt0.c0 COLLATE RTRIM)))  NULLS LAST, (NOT (rt0.c0))  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE ((((((((((rt0.c3 IN (rt0.c2)))AND(((rt0.c1)IS(rt0.c1)))))AND((((rt0.c1))=((rt0.c0))))))AND(((rt0.c1)&(rt0.c3)))))AND(TRIM(rt0.c0, rt0.c2)))) ORDER BY rt0.c3 ASC  NULLS FIRST, (((rt0.c2)) NOT BETWEEN (((((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, vt1.c0)) AND ((rt0.c1, rt0.c1, rt0.c2))))) AND ((rt0.c0 COLLATE RTRIM)))  NULLS LAST, (NOT (rt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c3 IN (rt0.c2)))AND(((rt0.c1)IS(rt0.c1)))))AND((((rt0.c1))==((rt0.c0))))))AND(((rt0.c1)&(rt0.c3)))))AND(TRIM(rt0.c0, rt0.c2)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c3 ASC  NULLS FIRST, (((rt0.c2)) NOT BETWEEN (((((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, vt1.c0)) AND ((rt0.c1, rt0.c1, rt0.c2))))) AND ((rt0.c0 COLLATE RTRIM)))  NULLS LAST, (NOT (rt0.c0))  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE ((((((((((rt0.c3 IN (rt0.c2)))AND(((rt0.c1)IS(rt0.c1)))))AND((((rt0.c1))=((rt0.c0))))))AND(((rt0.c1)&(rt0.c3)))))AND(TRIM(rt0.c0, rt0.c2)))) ORDER BY rt0.c3 ASC  NULLS FIRST, (((rt0.c2)) NOT BETWEEN (((((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, vt1.c0)) AND ((rt0.c1, rt0.c1, rt0.c2))))) AND ((rt0.c0 COLLATE RTRIM)))  NULLS LAST, (NOT (rt0.c0))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c0 IN (rt0.c0, rt0.c3)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN (rt0.c0, rt0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c0 IN (rt0.c0, rt0.c3)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN (rt0.c0, rt0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c0 IN (rt0.c0, rt0.c3)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((NOT (vt1.c0)))OR(((vt1.c0) ISNULL))))AND((vt1.c0 IN (vt1.c0, vt1.c0))))) ORDER BY ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0 COLLATE RTRIM)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((((NOT (vt1.c0)))OR(((vt1.c0) ISNULL))))AND((vt1.c0 IN (vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0 COLLATE RTRIM)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((NOT (vt1.c0)))OR(((vt1.c0) ISNULL))))AND((vt1.c0 IN (vt1.c0, vt1.c0))))) ORDER BY ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0 COLLATE RTRIM)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((((NOT (vt1.c0)))OR(((vt1.c0) ISNULL))))AND((vt1.c0 IN (vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0 COLLATE RTRIM)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((NOT (vt1.c0)))OR(((vt1.c0) ISNULL))))AND((vt1.c0 IN (vt1.c0, vt1.c0))))) ORDER BY ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0 COLLATE RTRIM)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c0, rt0.c1, rt0.c2))<(('F9EvA1[-#', '힮nSXeF', rt0.c3))) IN (((rt0.c1) BETWEEN (rt0.c2) AND (-1777968653))))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0, rt0.c1, rt0.c2))<(('F9EvA1[-#', '힮nSXeF', rt0.c3))) IN (((rt0.c1) BETWEEN (rt0.c2) AND (-1777968653))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0, rt0.c1, rt0.c2))<(('F9EvA1[-#', '힮nSXeF', rt0.c3))) IN (((rt0.c1) BETWEEN (rt0.c2) AND (-1777968653))))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0, rt0.c1, rt0.c2))<(('F9EvA1[-#', '힮nSXeF', rt0.c3))) IN (((rt0.c1) BETWEEN (rt0.c2) AND (-1777968653))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0, rt0.c1, rt0.c2))<(('F9EvA1[-#', '힮nSXeF', rt0.c3))) IN (((rt0.c1) BETWEEN (rt0.c2) AND (-1777968653))))) ORDER BY rt0.c1;
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1))))) ORDER BY -1972275479;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY -1972275479);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1))))) ORDER BY -1972275479;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY -1972275479);
SELECT ALL * FROM vt1, rt0 WHERE (LIKE(vt1.c0, ((rt0.c0)!=(rt0.c1)), '-')) ORDER BY (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND (((rt0.c3 IN (rt0.c0)))))  NULLS LAST, CAST(CASE vt1.c0  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END AS TEXT)  NULLS LAST, json_array(((rt0.c1) BETWEEN (rt0.c1) AND (-1774391373)), (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c0))), (~ (rt0.c2)), rt0.c3) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKE(vt1.c0, ((rt0.c0)!=(rt0.c1)), '-')) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND (((rt0.c3 IN (rt0.c0)))))  NULLS LAST, CAST(CASE vt1.c0  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END AS TEXT)  NULLS LAST, json_array(((rt0.c1) BETWEEN (rt0.c1) AND (-1774391373)), (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c0))), (~ (rt0.c2)), rt0.c3) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 WHERE (LIKE(vt1.c0, ((rt0.c0)!=(rt0.c1)), '-')) ORDER BY (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND (((rt0.c3 IN (rt0.c0)))))  NULLS LAST, CAST(CASE vt1.c0  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END AS TEXT)  NULLS LAST, json_array(((rt0.c1) BETWEEN (rt0.c1) AND (-1774391373)), (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c0))), (~ (rt0.c2)), rt0.c3) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKE(vt1.c0, ((rt0.c0)!=(rt0.c1)), '-')) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND (((rt0.c3 IN (rt0.c0)))))  NULLS LAST, CAST(CASE vt1.c0  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END AS TEXT)  NULLS LAST, json_array(((rt0.c1) BETWEEN (rt0.c1) AND (-1774391373)), (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c0))), (~ (rt0.c2)), rt0.c3) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 WHERE (LIKE(vt1.c0, ((rt0.c0)!=(rt0.c1)), '-')) ORDER BY (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND (((rt0.c3 IN (rt0.c0)))))  NULLS LAST, CAST(CASE vt1.c0  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END AS TEXT)  NULLS LAST, json_array(((rt0.c1) BETWEEN (rt0.c1) AND (-1774391373)), (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c0))), (~ (rt0.c2)), rt0.c3) ASC  NULLS FIRST;
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c0) ISNULL)) BETWEEN (((((rt0.c0)OR(rt0.c0)))AND(vt1.c0))) AND (((0xffffffffd335c3a1)||(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) ISNULL)) BETWEEN (((((rt0.c0)OR(rt0.c0)))AND(vt1.c0))) AND (((0xffffffffd335c3a1)||(rt0.c2))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c0) ISNULL)) BETWEEN (((((rt0.c0)OR(rt0.c0)))AND(vt1.c0))) AND (((0xffffffffd335c3a1)||(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) ISNULL)) BETWEEN (((((rt0.c0)OR(rt0.c0)))AND(vt1.c0))) AND (((0xffffffffd335c3a1)||(rt0.c2))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c0) ISNULL)) BETWEEN (((((rt0.c0)OR(rt0.c0)))AND(vt1.c0))) AND (((0xffffffffd335c3a1)||(rt0.c2)))));
SELECT * FROM rt0 WHERE ((((((rt0.c2, rt0.c1, rt0.c0))>((rt0.c1, rt0.c1, rt0.c3)))) BETWEEN ((((rt0.c1, rt0.c3, rt0.c3, rt0.c3, rt0.c3)) BETWEEN ((rt0.c2, rt0.c1, '0.15840296632425488', rt0.c0, rt0.c3)) AND ((rt0.c2, rt0.c0, rt0.c2, rt0.c2, rt0.c2)))) AND (rt0.c1)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2, rt0.c1, rt0.c0))>((rt0.c1, rt0.c1, rt0.c3)))) BETWEEN ((((rt0.c1, rt0.c3, rt0.c3, rt0.c3, rt0.c3)) BETWEEN ((rt0.c2, rt0.c1, '0.15840296632425488', rt0.c0, rt0.c3)) AND ((rt0.c2, rt0.c0, rt0.c2, rt0.c2, rt0.c2)))) AND (rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c2, rt0.c1, rt0.c0))>((rt0.c1, rt0.c1, rt0.c3)))) BETWEEN ((((rt0.c1, rt0.c3, rt0.c3, rt0.c3, rt0.c3)) BETWEEN ((rt0.c2, rt0.c1, '0.15840296632425488', rt0.c0, rt0.c3)) AND ((rt0.c2, rt0.c0, rt0.c2, rt0.c2, rt0.c2)))) AND (rt0.c1)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2, rt0.c1, rt0.c0))>((rt0.c1, rt0.c1, rt0.c3)))) BETWEEN ((((rt0.c1, rt0.c3, rt0.c3, rt0.c3, rt0.c3)) BETWEEN ((rt0.c2, rt0.c1, '0.15840296632425488', rt0.c0, rt0.c3)) AND ((rt0.c2, rt0.c0, rt0.c2, rt0.c2, rt0.c2)))) AND (rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c2, rt0.c1, rt0.c0))>((rt0.c1, rt0.c1, rt0.c3)))) BETWEEN ((((rt0.c1, rt0.c3, rt0.c3, rt0.c3, rt0.c3)) BETWEEN ((rt0.c2, rt0.c1, '0.15840296632425488', rt0.c0, rt0.c3)) AND ((rt0.c2, rt0.c0, rt0.c2, rt0.c2, rt0.c2)))) AND (rt0.c1)));
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT)) BETWEEN (CAST(NULL AS BLOB)) AND (CAST(rt0.c2 AS NUMERIC)))) ORDER BY '-570205932'  NULLS FIRST, ((((((rt0.c0)AND(rt0.c3)))AND(rt0.c2)))>(((rt0.c0) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS TEXT)) BETWEEN (CAST(NULL AS BLOB)) AND (CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY '-570205932'  NULLS FIRST, ((((((rt0.c0)AND(rt0.c3)))AND(rt0.c2)))>(((rt0.c0) IS FALSE))) ASC);
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT)) BETWEEN (CAST(NULL AS BLOB)) AND (CAST(rt0.c2 AS NUMERIC)))) ORDER BY '-570205932'  NULLS FIRST, ((((((rt0.c0)AND(rt0.c3)))AND(rt0.c2)))>(((rt0.c0) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS TEXT)) BETWEEN (CAST(NULL AS BLOB)) AND (CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY '-570205932'  NULLS FIRST, ((((((rt0.c0)AND(rt0.c3)))AND(rt0.c2)))>(((rt0.c0) IS FALSE))) ASC);
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT)) BETWEEN (CAST(NULL AS BLOB)) AND (CAST(rt0.c2 AS NUMERIC)))) ORDER BY '-570205932'  NULLS FIRST, ((((((rt0.c0)AND(rt0.c3)))AND(rt0.c2)))>(((rt0.c0) IS FALSE))) ASC;
SELECT COUNT(*) FROM vt1 WHERE (((SUBSTR(vt1.c0, vt1.c0)) BETWEEN (vt1.c0 COLLATE BINARY) AND (vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((SUBSTR(vt1.c0, vt1.c0)) BETWEEN (vt1.c0 COLLATE BINARY) AND (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((SUBSTR(vt1.c0, vt1.c0)) BETWEEN (vt1.c0 COLLATE BINARY) AND (vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((SUBSTR(vt1.c0, vt1.c0)) BETWEEN (vt1.c0 COLLATE BINARY) AND (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((SUBSTR(vt1.c0, vt1.c0)) BETWEEN (vt1.c0 COLLATE BINARY) AND (vt1.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (LIKELIHOOD((((vt1.c0, rt0.c2, rt0.c3)) BETWEEN ((vt1.c0, rt0.c3, rt0.c3)) AND ((vt1.c0, vt1.c0, rt0.c2))), 0.15911797190478805));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((((vt1.c0, rt0.c2, rt0.c3)) BETWEEN ((vt1.c0, rt0.c3, rt0.c3)) AND ((vt1.c0, vt1.c0, rt0.c2))), 0.15911797190478805)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (LIKELIHOOD((((vt1.c0, rt0.c2, rt0.c3)) BETWEEN ((vt1.c0, rt0.c3, rt0.c3)) AND ((vt1.c0, vt1.c0, rt0.c2))), 0.15911797190478805));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((((vt1.c0, rt0.c2, rt0.c3)) BETWEEN ((vt1.c0, rt0.c3, rt0.c3)) AND ((vt1.c0, vt1.c0, rt0.c2))), 0.15911797190478805)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (LIKELIHOOD((((vt1.c0, rt0.c2, rt0.c3)) BETWEEN ((vt1.c0, rt0.c3, rt0.c3)) AND ((vt1.c0, vt1.c0, rt0.c2))), 0.15911797190478805));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (IFNULL(DISTINCT LIKE(rt0.c0, rt0.c1), (NOT (rt0.c1)))) ORDER BY CAST((NOT (rt0.c3)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT LIKE(rt0.c0, rt0.c1), (NOT (rt0.c1)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST((NOT (rt0.c3)) AS NUMERIC) DESC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (IFNULL(DISTINCT LIKE(rt0.c0, rt0.c1), (NOT (rt0.c1)))) ORDER BY CAST((NOT (rt0.c3)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT LIKE(rt0.c0, rt0.c1), (NOT (rt0.c1)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST((NOT (rt0.c3)) AS NUMERIC) DESC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (IFNULL(DISTINCT LIKE(rt0.c0, rt0.c1), (NOT (rt0.c1)))) ORDER BY CAST((NOT (rt0.c3)) AS NUMERIC) DESC;
SELECT COUNT(*) FROM vt1 WHERE (((('-1403375835' IN (vt1.c0)))LIKE(vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((('-1403375835' IN (vt1.c0)))LIKE(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((('-1403375835' IN (vt1.c0)))LIKE(vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((('-1403375835' IN (vt1.c0)))LIKE(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((('-1403375835' IN (vt1.c0)))LIKE(vt1.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM)<=(rt0.c1))) ORDER BY CASE CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END  WHEN CASE WHEN NULL THEN rt0.c0 END THEN LOWER(rt0.c2) ELSE ((5.87184477E8) NOTNULL) END, CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 END COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM)<=(rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY CASE CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END  WHEN CASE WHEN NULL THEN rt0.c0 END THEN LOWER(rt0.c2) ELSE ((5.87184477E8) NOTNULL) END, CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 END COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM)<=(rt0.c1))) ORDER BY CASE CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END  WHEN CASE WHEN NULL THEN rt0.c0 END THEN LOWER(rt0.c2) ELSE ((5.87184477E8) NOTNULL) END, CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 END COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM)<=(rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY CASE CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END  WHEN CASE WHEN NULL THEN rt0.c0 END THEN LOWER(rt0.c2) ELSE ((5.87184477E8) NOTNULL) END, CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 END COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM)<=(rt0.c1))) ORDER BY CASE CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END  WHEN CASE WHEN NULL THEN rt0.c0 END THEN LOWER(rt0.c2) ELSE ((5.87184477E8) NOTNULL) END, CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 END COLLATE NOCASE  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOT NULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT NULL)) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOT NULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT NULL)) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOT NULL)) NOTNULL));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE IFNULL(DISTINCT rt0.c3, rt0.c2)  WHEN (rt0.c2 IN ()) THEN ((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) WHEN (~ (-2038422127)) THEN '' WHEN CASE WHEN rt0.c3 THEN rt0.c0 ELSE vt1.c0 END THEN ((rt0.c3) NOT NULL) WHEN vt1.c0 THEN CAST(rt0.c2 AS BLOB) WHEN vt1.c0 THEN (~ (rt0.c0)) ELSE vt1.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE IFNULL(DISTINCT rt0.c3, rt0.c2)  WHEN (rt0.c2 IN ()) THEN ((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) WHEN (~ (-2038422127)) THEN '' WHEN CASE WHEN rt0.c3 THEN rt0.c0 ELSE vt1.c0 END THEN ((rt0.c3) NOT NULL) WHEN vt1.c0 THEN CAST(rt0.c2 AS BLOB) WHEN vt1.c0 THEN (~ (rt0.c0)) ELSE vt1.c0 END) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE IFNULL(DISTINCT rt0.c3, rt0.c2)  WHEN (rt0.c2 IN ()) THEN ((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) WHEN (~ (-2038422127)) THEN '' WHEN CASE WHEN rt0.c3 THEN rt0.c0 ELSE vt1.c0 END THEN ((rt0.c3) NOT NULL) WHEN vt1.c0 THEN CAST(rt0.c2 AS BLOB) WHEN vt1.c0 THEN (~ (rt0.c0)) ELSE vt1.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE IFNULL(DISTINCT rt0.c3, rt0.c2)  WHEN (rt0.c2 IN ()) THEN ((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) WHEN (~ (-2038422127)) THEN '' WHEN CASE WHEN rt0.c3 THEN rt0.c0 ELSE vt1.c0 END THEN ((rt0.c3) NOT NULL) WHEN vt1.c0 THEN CAST(rt0.c2 AS BLOB) WHEN vt1.c0 THEN (~ (rt0.c0)) ELSE vt1.c0 END) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE IFNULL(DISTINCT rt0.c3, rt0.c2)  WHEN (rt0.c2 IN ()) THEN ((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) WHEN (~ (-2038422127)) THEN '' WHEN CASE WHEN rt0.c3 THEN rt0.c0 ELSE vt1.c0 END THEN ((rt0.c3) NOT NULL) WHEN vt1.c0 THEN CAST(rt0.c2 AS BLOB) WHEN vt1.c0 THEN (~ (rt0.c0)) ELSE vt1.c0 END);
SELECT * FROM rt0, vt1 WHERE (((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0))) IS FALSE)) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c0);
SELECT * FROM rt0, vt1 WHERE (((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0))) IS FALSE)) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c0);
SELECT * FROM rt0, vt1 WHERE (((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0))) IS FALSE)) ORDER BY rt0.c0;
SELECT * FROM rt0, vt1 WHERE (((((((((0x4713f0ad)OR((rt0.c2 IN ()))))AND(CASE 0.7293115734822143  WHEN rt0.c2 THEN rt0.c2 END)))AND(0.6376557354081797)))AND(((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((0X4713f0ad)OR((rt0.c2 IN ()))))AND(CASE 0.7293115734822143  WHEN rt0.c2 THEN rt0.c2 END)))AND(0.6376557354081797)))AND(((((rt0.c1)OR(rt0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((((((((0x4713f0ad)OR((rt0.c2 IN ()))))AND(CASE 0.7293115734822143  WHEN rt0.c2 THEN rt0.c2 END)))AND(0.6376557354081797)))AND(((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((0X4713f0ad)OR((rt0.c2 IN ()))))AND(CASE 0.7293115734822143  WHEN rt0.c2 THEN rt0.c2 END)))AND(0.6376557354081797)))AND(((((rt0.c1)OR(rt0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((((((((0x4713f0ad)OR((rt0.c2 IN ()))))AND(CASE 0.7293115734822143  WHEN rt0.c2 THEN rt0.c2 END)))AND(0.6376557354081797)))AND(((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))));
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c0 AS REAL) IN ())) ORDER BY (((rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c0, 0Xffffffff85d50652, rt0.c1, rt0.c2)) AND ((rt0.c3, rt0.c2, rt0.c2, rt0.c2, ''))) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c0 AS REAL) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c0, 0xffffffff85d50652, rt0.c1, rt0.c2)) AND ((rt0.c3, rt0.c2, rt0.c2, rt0.c2, ''))) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c0 AS REAL) IN ())) ORDER BY (((rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c0, 0Xffffffff85d50652, rt0.c1, rt0.c2)) AND ((rt0.c3, rt0.c2, rt0.c2, rt0.c2, ''))) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c0 AS REAL) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c0, 0xffffffff85d50652, rt0.c1, rt0.c2)) AND ((rt0.c3, rt0.c2, rt0.c2, rt0.c2, ''))) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c0 AS REAL) IN ())) ORDER BY (((rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c0, 0Xffffffff85d50652, rt0.c1, rt0.c2)) AND ((rt0.c3, rt0.c2, rt0.c2, rt0.c2, ''))) COLLATE NOCASE  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c0, rt0.c0, rt0.c3)) BETWEEN ((rt0.c2, ((vt1.c0)LIKE(rt0.c1)), CHANGES())) AND ((((rt0.c3) IS TRUE), (((rt0.c0))<((rt0.c0))), ((rt0.c0)IS(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c0, rt0.c3)) BETWEEN ((rt0.c2, ((vt1.c0)LIKE(rt0.c1)), CHANGES())) AND ((((rt0.c3) IS TRUE), (((rt0.c0))<((rt0.c0))), ((rt0.c0)IS(rt0.c0)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c0, rt0.c0, rt0.c3)) BETWEEN ((rt0.c2, ((vt1.c0)LIKE(rt0.c1)), CHANGES())) AND ((((rt0.c3) IS TRUE), (((rt0.c0))<((rt0.c0))), ((rt0.c0)IS(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c0, rt0.c3)) BETWEEN ((rt0.c2, ((vt1.c0)LIKE(rt0.c1)), CHANGES())) AND ((((rt0.c3) IS TRUE), (((rt0.c0))<((rt0.c0))), ((rt0.c0)IS(rt0.c0)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c0, rt0.c0, rt0.c3)) BETWEEN ((rt0.c2, ((vt1.c0)LIKE(rt0.c1)), CHANGES())) AND ((((rt0.c3) IS TRUE), (((rt0.c0))<((rt0.c0))), ((rt0.c0)IS(rt0.c0))))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON vt1.c0 WHERE ((((~ (vt1.c0)))<((((rt0.c1, rt0.c2, rt0.c2, rt0.c2, rt0.c0))<>((rt0.c1, vt1.c0, vt1.c0, rt0.c2, rt0.c0)))))) ORDER BY '1703299426';
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0)))<((((rt0.c1, rt0.c2, rt0.c2, rt0.c2, rt0.c0))<>((rt0.c1, vt1.c0, vt1.c0, rt0.c2, rt0.c0)))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON vt1.c0 ORDER BY '1703299426');
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON vt1.c0 WHERE ((((~ (vt1.c0)))<((((rt0.c1, rt0.c2, rt0.c2, rt0.c2, rt0.c0))<>((rt0.c1, vt1.c0, vt1.c0, rt0.c2, rt0.c0)))))) ORDER BY '1703299426';
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0)))<((((rt0.c1, rt0.c2, rt0.c2, rt0.c2, rt0.c0))<>((rt0.c1, vt1.c0, vt1.c0, rt0.c2, rt0.c0)))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON vt1.c0 ORDER BY '1703299426');
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON vt1.c0 WHERE ((((~ (vt1.c0)))<((((rt0.c1, rt0.c2, rt0.c2, rt0.c2, rt0.c0))<>((rt0.c1, vt1.c0, vt1.c0, rt0.c2, rt0.c0)))))) ORDER BY '1703299426';
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON (HEX(DISTINCT rt0.c3) IN ()) WHERE (CASE rt0.c1 COLLATE RTRIM  WHEN rt0.c2 COLLATE RTRIM THEN UNLIKELY(rt0.c2) WHEN ((vt1.c0)%(rt0.c1)) THEN load_extension('-536908619', rt0.c0) WHEN STRFTIME(rt0.c0, '', rt0.c2) THEN (((rt0.c1, NULL, x''))<>((rt0.c2, 1733481415, vt1.c0))) ELSE rt0.c3 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1 COLLATE RTRIM  WHEN rt0.c2 COLLATE RTRIM THEN UNLIKELY(rt0.c2) WHEN ((vt1.c0)%(rt0.c1)) THEN load_extension('-536908619', rt0.c0) WHEN STRFTIME(rt0.c0, '', rt0.c2) THEN (((rt0.c1, NULL, x''))!=((rt0.c2, 1733481415, vt1.c0))) ELSE rt0.c3 COLLATE RTRIM END) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON (HEX(DISTINCT rt0.c3) IN ()));
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON (HEX(DISTINCT rt0.c3) IN ()) WHERE (CASE rt0.c1 COLLATE RTRIM  WHEN rt0.c2 COLLATE RTRIM THEN UNLIKELY(rt0.c2) WHEN ((vt1.c0)%(rt0.c1)) THEN load_extension('-536908619', rt0.c0) WHEN STRFTIME(rt0.c0, '', rt0.c2) THEN (((rt0.c1, NULL, x''))<>((rt0.c2, 1733481415, vt1.c0))) ELSE rt0.c3 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1 COLLATE RTRIM  WHEN rt0.c2 COLLATE RTRIM THEN UNLIKELY(rt0.c2) WHEN ((vt1.c0)%(rt0.c1)) THEN load_extension('-536908619', rt0.c0) WHEN STRFTIME(rt0.c0, '', rt0.c2) THEN (((rt0.c1, NULL, x''))!=((rt0.c2, 1733481415, vt1.c0))) ELSE rt0.c3 COLLATE RTRIM END) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON (HEX(DISTINCT rt0.c3) IN ()));
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON (HEX(DISTINCT rt0.c3) IN ()) WHERE (CASE rt0.c1 COLLATE RTRIM  WHEN rt0.c2 COLLATE RTRIM THEN UNLIKELY(rt0.c2) WHEN ((vt1.c0)%(rt0.c1)) THEN load_extension('-536908619', rt0.c0) WHEN STRFTIME(rt0.c0, '', rt0.c2) THEN (((rt0.c1, NULL, x''))<>((rt0.c2, 1733481415, vt1.c0))) ELSE rt0.c3 COLLATE RTRIM END);
SELECT COUNT(*) FROM rt0 WHERE (CASE ((rt0.c2)>=(rt0.c2))  WHEN ((rt0.c1)&('2')) THEN ((rt0.c0) BETWEEN (rt0.c3) AND (x'')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2)>=(rt0.c2))  WHEN ((rt0.c1)&('2')) THEN ((rt0.c0) BETWEEN (rt0.c3) AND (x'')) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE ((rt0.c2)>=(rt0.c2))  WHEN ((rt0.c1)&('2')) THEN ((rt0.c0) BETWEEN (rt0.c3) AND (x'')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2)>=(rt0.c2))  WHEN ((rt0.c1)&('2')) THEN ((rt0.c0) BETWEEN (rt0.c3) AND (x'')) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE ((rt0.c2)>=(rt0.c2))  WHEN ((rt0.c1)&('2')) THEN ((rt0.c0) BETWEEN (rt0.c3) AND (x'')) END);
SELECT * FROM rt0 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (TOTAL_CHANGES());
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST((((888634155, rt0.c1, 0.5350978392550999, rt0.c1, rt0.c1))>((rt0.c2, rt0.c2, rt0.c0, rt0.c1, rt0.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((((888634155, rt0.c1, 0.5350978392550999, rt0.c1, rt0.c1))>((rt0.c2, rt0.c2, rt0.c0, rt0.c1, rt0.c0))) AS BLOB)) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST((((888634155, rt0.c1, 0.5350978392550999, rt0.c1, rt0.c1))>((rt0.c2, rt0.c2, rt0.c0, rt0.c1, rt0.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((((888634155, rt0.c1, 0.5350978392550999, rt0.c1, rt0.c1))>((rt0.c2, rt0.c2, rt0.c0, rt0.c1, rt0.c0))) AS BLOB)) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST((((888634155, rt0.c1, 0.5350978392550999, rt0.c1, rt0.c1))>((rt0.c2, rt0.c2, rt0.c0, rt0.c1, rt0.c0))) AS BLOB));
SELECT COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c0))) NOT BETWEEN (0.4279183415751838) AND (((rt0.c2)!=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c0))) NOT BETWEEN (0.4279183415751838) AND (((rt0.c2)<>(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c0))) NOT BETWEEN (0.4279183415751838) AND (((rt0.c2)!=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c0))) NOT BETWEEN (0.4279183415751838) AND (((rt0.c2)<>(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c0))) NOT BETWEEN (0.4279183415751838) AND (((rt0.c2)!=(rt0.c0)))));
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON ((vt1.c0) IS TRUE) COLLATE RTRIM WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((vt1.c0) IS TRUE) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON ((vt1.c0) IS TRUE) COLLATE RTRIM WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((vt1.c0) IS TRUE) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON ((vt1.c0) IS TRUE) COLLATE RTRIM WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((+ (vt1.c0)))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))OR((vt1.c0 IN (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((+ (vt1.c0)))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))OR((vt1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((+ (vt1.c0)))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))OR((vt1.c0 IN (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((+ (vt1.c0)))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))OR((vt1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((+ (vt1.c0)))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))OR((vt1.c0 IN (vt1.c0)))));
SELECT COUNT(*) FROM rt0, vt1 WHERE ((~ (((((((((rt0.c2)AND(x'c132')))AND(rt0.c2)))OR(rt0.c2)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((((((((rt0.c2)AND(x'c132')))AND(rt0.c2)))OR(rt0.c2)))OR(vt1.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((~ (((((((((rt0.c2)AND(x'c132')))AND(rt0.c2)))OR(rt0.c2)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((((((((rt0.c2)AND(x'c132')))AND(rt0.c2)))OR(rt0.c2)))OR(vt1.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((~ (((((((((rt0.c2)AND(x'c132')))AND(rt0.c2)))OR(rt0.c2)))OR(vt1.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((+ (((0.14721728497030817)OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((0.14721728497030817)OR(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((+ (((0.14721728497030817)OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((0.14721728497030817)OR(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((+ (((0.14721728497030817)OR(rt0.c1)))));
SELECT * FROM vt1 NOT INDEXED, rt0 NOT INDEXED WHERE ((((((rt0.c2) IS FALSE), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)), (rt0.c0 IN ())))<((((0.8305746968996094) NOT BETWEEN (rt0.c1) AND (rt0.c3)), ((rt0.c2)==(rt0.c2)), ((((x'')AND(-3.48325806E8)))OR(vt1.c0)))))) ORDER BY CASE rt0.c3 COLLATE NOCASE  WHEN (~ (rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)) ELSE ((rt0.c2) IS TRUE) END ASC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) IS FALSE), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)), (rt0.c0 IN ())))<((((0.8305746968996094) NOT BETWEEN (rt0.c1) AND (rt0.c3)), ((rt0.c2)=(rt0.c2)), ((((x'')AND(-3.48325806E8)))OR(vt1.c0)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE rt0.c3 COLLATE NOCASE  WHEN (~ (rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)) ELSE ((rt0.c2) IS TRUE) END ASC);
SELECT * FROM vt1 NOT INDEXED, rt0 NOT INDEXED WHERE ((((((rt0.c2) IS FALSE), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)), (rt0.c0 IN ())))<((((0.8305746968996094) NOT BETWEEN (rt0.c1) AND (rt0.c3)), ((rt0.c2)==(rt0.c2)), ((((x'')AND(-3.48325806E8)))OR(vt1.c0)))))) ORDER BY CASE rt0.c3 COLLATE NOCASE  WHEN (~ (rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)) ELSE ((rt0.c2) IS TRUE) END ASC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) IS FALSE), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)), (rt0.c0 IN ())))<((((0.8305746968996094) NOT BETWEEN (rt0.c1) AND (rt0.c3)), ((rt0.c2)=(rt0.c2)), ((((x'')AND(-3.48325806E8)))OR(vt1.c0)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE rt0.c3 COLLATE NOCASE  WHEN (~ (rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)) ELSE ((rt0.c2) IS TRUE) END ASC);
SELECT * FROM vt1 NOT INDEXED, rt0 NOT INDEXED WHERE ((((((rt0.c2) IS FALSE), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)), (rt0.c0 IN ())))<((((0.8305746968996094) NOT BETWEEN (rt0.c1) AND (rt0.c3)), ((rt0.c2)==(rt0.c2)), ((((x'')AND(-3.48325806E8)))OR(vt1.c0)))))) ORDER BY CASE rt0.c3 COLLATE NOCASE  WHEN (~ (rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)) ELSE ((rt0.c2) IS TRUE) END ASC;
SELECT ALL * FROM rt0, vt1 WHERE ((((rt0.c1))<=((LIKE(rt0.c0, rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1))<=((LIKE(rt0.c0, rt0.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((((rt0.c1))<=((LIKE(rt0.c0, rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1))<=((LIKE(rt0.c0, rt0.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((((rt0.c1))<=((LIKE(rt0.c0, rt0.c0)))));
SELECT * FROM vt1, rt0 WHERE ((rt0.c1 COLLATE NOCASE IN (((vt1.c0) NOT NULL)))) ORDER BY rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 COLLATE NOCASE IN (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c0 ASC);
SELECT * FROM vt1, rt0 WHERE ((rt0.c1 COLLATE NOCASE IN (((vt1.c0) NOT NULL)))) ORDER BY rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 COLLATE NOCASE IN (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c0 ASC);
SELECT * FROM vt1, rt0 WHERE ((rt0.c1 COLLATE NOCASE IN (((vt1.c0) NOT NULL)))) ORDER BY rt0.c0 ASC;
SELECT COUNT(*) FROM rt0 WHERE (load_extension(rt0.c3 COLLATE BINARY)) ORDER BY (rt0.c3 COLLATE NOCASE IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(rt0.c3 COLLATE BINARY)) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c3 COLLATE NOCASE IN ())  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (load_extension(rt0.c3 COLLATE BINARY)) ORDER BY (rt0.c3 COLLATE NOCASE IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(rt0.c3 COLLATE BINARY)) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c3 COLLATE NOCASE IN ())  NULLS LAST);
SELECT * FROM vt1 WHERE (CAST((+ (vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((+ (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST((+ (vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((+ (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST((+ (vt1.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON ((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)))/(NULL)) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)))/(NULL)));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON ((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)))/(NULL)) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)))/(NULL)));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON ((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)))/(NULL)) WHERE (rt0.c0);
SELECT * FROM rt0 WHERE (-1481217257);
SELECT SUM(count) FROM (SELECT ALL ((-1481217257) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (-1481217257);
SELECT SUM(count) FROM (SELECT ALL ((-1481217257) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (-1481217257);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))/((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))/((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))/((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))/((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))/((rt0.c0 IN ()))));
SELECT * FROM rt0 WHERE ('1151079823');
SELECT SUM(count) FROM (SELECT (('1151079823') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ('1151079823');
SELECT SUM(count) FROM (SELECT (('1151079823') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ('1151079823');
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c1)OR(vt1.c0)))*(CAST(rt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)OR(vt1.c0)))*(CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c1)OR(vt1.c0)))*(CAST(rt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)OR(vt1.c0)))*(CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c1)OR(vt1.c0)))*(CAST(rt0.c1 AS INTEGER))));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ((vt1.c0)<<(rt0.c3 COLLATE BINARY)) WHERE (CAST(((((rt0.c1)AND(rt0.c0)))AND(rt0.c3)) AS REAL)) ORDER BY (((((rt0.c3)||(0.3967389961147624)), ((NULL) IS TRUE), ((rt0.c0)+(rt0.c0))))>=(((NOT (rt0.c0)), NULL, CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c1)AND(rt0.c0)))AND(rt0.c3)) AS REAL)) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((vt1.c0)<<(rt0.c3 COLLATE BINARY)) ORDER BY (((((rt0.c3)||(0.3967389961147624)), ((NULL) IS TRUE), ((rt0.c0)+(rt0.c0))))>=(((NOT (rt0.c0)), NULL, CAST(rt0.c1 AS TEXT)))));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ((vt1.c0)<<(rt0.c3 COLLATE BINARY)) WHERE (CAST(((((rt0.c1)AND(rt0.c0)))AND(rt0.c3)) AS REAL)) ORDER BY (((((rt0.c3)||(0.3967389961147624)), ((NULL) IS TRUE), ((rt0.c0)+(rt0.c0))))>=(((NOT (rt0.c0)), NULL, CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c1)AND(rt0.c0)))AND(rt0.c3)) AS REAL)) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((vt1.c0)<<(rt0.c3 COLLATE BINARY)) ORDER BY (((((rt0.c3)||(0.3967389961147624)), ((NULL) IS TRUE), ((rt0.c0)+(rt0.c0))))>=(((NOT (rt0.c0)), NULL, CAST(rt0.c1 AS TEXT)))));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ((vt1.c0)<<(rt0.c3 COLLATE BINARY)) WHERE (CAST(((((rt0.c1)AND(rt0.c0)))AND(rt0.c3)) AS REAL)) ORDER BY (((((rt0.c3)||(0.3967389961147624)), ((NULL) IS TRUE), ((rt0.c0)+(rt0.c0))))>=(((NOT (rt0.c0)), NULL, CAST(rt0.c1 AS TEXT))));
SELECT * FROM vt1 WHERE (((((vt1.c0)GLOB(vt1.c0))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (COALESCE(DISTINCT vt1.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)GLOB(vt1.c0))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (COALESCE(DISTINCT vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0)GLOB(vt1.c0))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (COALESCE(DISTINCT vt1.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)GLOB(vt1.c0))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (COALESCE(DISTINCT vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0)GLOB(vt1.c0))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (COALESCE(DISTINCT vt1.c0, vt1.c0))));
SELECT COUNT(*) FROM rt0 WHERE (TRIM(CASE x''  WHEN rt0.c1 THEN rt0.c2 WHEN NULL THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END, x''));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CASE x''  WHEN rt0.c1 THEN rt0.c2 WHEN NULL THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END, x'')) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (TRIM(CASE x''  WHEN rt0.c1 THEN rt0.c2 WHEN NULL THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END, x''));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CASE x''  WHEN rt0.c1 THEN rt0.c2 WHEN NULL THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END, x'')) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (TRIM(CASE x''  WHEN rt0.c1 THEN rt0.c2 WHEN NULL THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END, x''));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))GLOB(UPPER(DISTINCT vt1.c0)))) ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) BETWEEN (json_object(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND (highlight(vt1.c0, vt1.c0, vt1.c0, vt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))GLOB(UPPER(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) BETWEEN (json_object(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND (highlight(vt1.c0, vt1.c0, vt1.c0, vt1.c0)))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))GLOB(UPPER(DISTINCT vt1.c0)))) ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) BETWEEN (json_object(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND (highlight(vt1.c0, vt1.c0, vt1.c0, vt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))GLOB(UPPER(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) BETWEEN (json_object(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND (highlight(vt1.c0, vt1.c0, vt1.c0, vt1.c0)))  NULLS LAST);
SELECT * FROM rt0 WHERE (CAST(CAST(0.9875843010800771 AS NUMERIC) AS TEXT)) ORDER BY ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))OR((((rt0.c2))<=((rt0.c3))))))AND(((rt0.c3)<=(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(0.9875843010800771 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))OR((((rt0.c2))<=((rt0.c3))))))AND(((rt0.c3)<=(rt0.c0)))));
SELECT * FROM rt0 WHERE (CAST(CAST(0.9875843010800771 AS NUMERIC) AS TEXT)) ORDER BY ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))OR((((rt0.c2))<=((rt0.c3))))))AND(((rt0.c3)<=(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(0.9875843010800771 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))OR((((rt0.c2))<=((rt0.c3))))))AND(((rt0.c3)<=(rt0.c0)))));
SELECT * FROM rt0 WHERE (CAST(CAST(0.9875843010800771 AS NUMERIC) AS TEXT)) ORDER BY ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))OR((((rt0.c2))<=((rt0.c3))))))AND(((rt0.c3)<=(rt0.c0))));
SELECT * FROM vt1, rt0 WHERE ((((((((('')AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((((((('')AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((((((((('')AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((((((('')AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((((((((('')AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c2)) COLLATE BINARY);
SELECT COUNT(*) FROM vt1 WHERE ('ar');
SELECT SUM(count) FROM (SELECT (('ar') IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ('ar');
SELECT SUM(count) FROM (SELECT (('ar') IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ('ar');
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1)>>(rt0.c2))))<>((rt0.c0 COLLATE RTRIM)))) ORDER BY ((((((rt0.c0) IS TRUE))OR(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c3)))))AND(x'666b'));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)>>(rt0.c2))))<>((rt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0) IS TRUE))OR(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c3)))))AND(x'666b')));
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1)>>(rt0.c2))))<>((rt0.c0 COLLATE RTRIM)))) ORDER BY ((((((rt0.c0) IS TRUE))OR(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c3)))))AND(x'666b'));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)>>(rt0.c2))))<>((rt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0) IS TRUE))OR(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c3)))))AND(x'666b')));
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1)>>(rt0.c2))))<>((rt0.c0 COLLATE RTRIM)))) ORDER BY ((((((rt0.c0) IS TRUE))OR(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c3)))))AND(x'666b'));
SELECT ALL * FROM rt0 WHERE (NULL) ORDER BY (- (((((rt0.c1)OR(rt0.c3)))AND(rt0.c2)))), DATETIME(rt0.c3, rt0.c3, rt0.c1, rt0.c0, rt0.c1) COLLATE NOCASE ASC  NULLS LAST, LIKE(((((((((((((rt0.c0)AND(rt0.c0)))OR(0.8447860479059942)))OR(rt0.c0)))OR('	S')))OR(rt0.c0)))AND(rt0.c3)), (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c1))), 't');
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY (- (((((rt0.c1)OR(rt0.c3)))AND(rt0.c2)))), DATETIME(rt0.c3, rt0.c3, rt0.c1, rt0.c0, rt0.c1) COLLATE NOCASE ASC  NULLS LAST, LIKE(((((((((((((rt0.c0)AND(rt0.c0)))OR(0.8447860479059942)))OR(rt0.c0)))OR('	S')))OR(rt0.c0)))AND(rt0.c3)), (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c1))), 't'));
SELECT ALL * FROM rt0 WHERE (NULL) ORDER BY (- (((((rt0.c1)OR(rt0.c3)))AND(rt0.c2)))), DATETIME(rt0.c3, rt0.c3, rt0.c1, rt0.c0, rt0.c1) COLLATE NOCASE ASC  NULLS LAST, LIKE(((((((((((((rt0.c0)AND(rt0.c0)))OR(0.8447860479059942)))OR(rt0.c0)))OR('	S')))OR(rt0.c0)))AND(rt0.c3)), (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c1))), 't');
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY (- (((((rt0.c1)OR(rt0.c3)))AND(rt0.c2)))), DATETIME(rt0.c3, rt0.c3, rt0.c1, rt0.c0, rt0.c1) COLLATE NOCASE ASC  NULLS LAST, LIKE(((((((((((((rt0.c0)AND(rt0.c0)))OR(0.8447860479059942)))OR(rt0.c0)))OR('	S')))OR(rt0.c0)))AND(rt0.c3)), (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c1))), 't'));
SELECT ALL * FROM rt0 WHERE (NULL) ORDER BY (- (((((rt0.c1)OR(rt0.c3)))AND(rt0.c2)))), DATETIME(rt0.c3, rt0.c3, rt0.c1, rt0.c0, rt0.c1) COLLATE NOCASE ASC  NULLS LAST, LIKE(((((((((((((rt0.c0)AND(rt0.c0)))OR(0.8447860479059942)))OR(rt0.c0)))OR('	S')))OR(rt0.c0)))AND(rt0.c3)), (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c1))), 't');
SELECT * FROM vt1 WHERE (((vt1.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0) NOT NULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c3)GLOB(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c3)GLOB(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c3)GLOB(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c3)GLOB(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c3)GLOB(rt0.c1)) COLLATE BINARY);
SELECT * FROM vt1 WHERE ((CASE '-97919144'  WHEN vt1.c0 THEN vt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE '-97919144'  WHEN vt1.c0 THEN vt1.c0 END IN ())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((CASE '-97919144'  WHEN vt1.c0 THEN vt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE '-97919144'  WHEN vt1.c0 THEN vt1.c0 END IN ())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((CASE '-97919144'  WHEN vt1.c0 THEN vt1.c0 END IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE (((0.5550114616521421) NOT BETWEEN ((vt1.c0 IN ())) AND ((((vt1.c0))>((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((0.5550114616521421) NOT BETWEEN ((vt1.c0 IN ())) AND ((((vt1.c0))>((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((0.5550114616521421) NOT BETWEEN ((vt1.c0 IN ())) AND ((((vt1.c0))>((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((0.5550114616521421) NOT BETWEEN ((vt1.c0 IN ())) AND ((((vt1.c0))>((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((0.5550114616521421) NOT BETWEEN ((vt1.c0 IN ())) AND ((((vt1.c0))>((vt1.c0))))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((+ (rt0.c3))))<>((((vt1.c0) ISNULL)))));
SELECT SUM(count) FROM (SELECT ((((((+ (rt0.c3))))<>((((vt1.c0) ISNULL))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((+ (rt0.c3))))<>((((vt1.c0) ISNULL)))));
SELECT SUM(count) FROM (SELECT ((((((+ (rt0.c3))))<>((((vt1.c0) ISNULL))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((+ (rt0.c3))))<>((((vt1.c0) ISNULL)))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c0) ISNULL) IN ()) WHERE (((CAST(rt0.c1 AS NUMERIC))!=((+ (rt0.c3))))) ORDER BY (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))))-(rt0.c1)) DESC  NULLS FIRST, ((json_remove(vt1.c0, rt0.c3, rt0.c2, NULL))|(rt0.c3));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS NUMERIC))!=((+ (rt0.c3))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c0) ISNULL) IN ()) ORDER BY (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))))-(rt0.c1)) DESC  NULLS FIRST, ((json_remove(vt1.c0, rt0.c3, rt0.c2, NULL))|(rt0.c3)));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c0) ISNULL) IN ()) WHERE (((CAST(rt0.c1 AS NUMERIC))!=((+ (rt0.c3))))) ORDER BY (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))))-(rt0.c1)) DESC  NULLS FIRST, ((json_remove(vt1.c0, rt0.c3, rt0.c2, NULL))|(rt0.c3));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS NUMERIC))!=((+ (rt0.c3))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c0) ISNULL) IN ()) ORDER BY (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))))-(rt0.c1)) DESC  NULLS FIRST, ((json_remove(vt1.c0, rt0.c3, rt0.c2, NULL))|(rt0.c3)));
SELECT COUNT(*) FROM vt1 WHERE ((((+ (vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((+ (vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((+ (vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((+ (vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((+ (vt1.c0))) NOTNULL));
SELECT ALL * FROM rt0 WHERE ((((rt0.c1, ((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)), -1.166023477E9 COLLATE RTRIM))<((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END, rt0.c0 COLLATE NOCASE, ((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))))) ORDER BY LOWER(rt0.c3) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1, ((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)), -1.166023477E9 COLLATE RTRIM))<((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END, rt0.c0 COLLATE NOCASE, ((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY LOWER(rt0.c3) COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1, ((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)), -1.166023477E9 COLLATE RTRIM))<((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END, rt0.c0 COLLATE NOCASE, ((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))))) ORDER BY LOWER(rt0.c3) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1, ((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)), -1.166023477E9 COLLATE RTRIM))<((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END, rt0.c0 COLLATE NOCASE, ((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY LOWER(rt0.c3) COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1, ((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)), -1.166023477E9 COLLATE RTRIM))<((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END, rt0.c0 COLLATE NOCASE, ((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))))) ORDER BY LOWER(rt0.c3) COLLATE NOCASE  NULLS LAST;
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((((rt0.c0)OR(rt0.c2)))AND(0.49780973980107124)))=(((rt0.c1)||(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(rt0.c2)))AND(0.49780973980107124)))=(((rt0.c1)||(rt0.c3))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((((rt0.c0)OR(rt0.c2)))AND(0.49780973980107124)))=(((rt0.c1)||(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(rt0.c2)))AND(0.49780973980107124)))=(((rt0.c1)||(rt0.c3))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((((rt0.c0)OR(rt0.c2)))AND(0.49780973980107124)))=(((rt0.c1)||(rt0.c3)))));
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY CASE ((vt1.c0)<<(vt1.c0))  WHEN (-1822582899 IN ()) THEN ((vt1.c0)&(vt1.c0)) WHEN ((vt1.c0) ISNULL) THEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) WHEN (- (vt1.c0)) THEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY CASE ((vt1.c0)<<(vt1.c0))  WHEN (-1822582899 IN ()) THEN ((vt1.c0)&(vt1.c0)) WHEN ((vt1.c0) ISNULL) THEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) WHEN (- (vt1.c0)) THEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) END ASC);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY CASE ((vt1.c0)<<(vt1.c0))  WHEN (-1822582899 IN ()) THEN ((vt1.c0)&(vt1.c0)) WHEN ((vt1.c0) ISNULL) THEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) WHEN (- (vt1.c0)) THEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY CASE ((vt1.c0)<<(vt1.c0))  WHEN (-1822582899 IN ()) THEN ((vt1.c0)&(vt1.c0)) WHEN ((vt1.c0) ISNULL) THEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) WHEN (- (vt1.c0)) THEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) END ASC);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY CASE ((vt1.c0)<<(vt1.c0))  WHEN (-1822582899 IN ()) THEN ((vt1.c0)&(vt1.c0)) WHEN ((vt1.c0) ISNULL) THEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) WHEN (- (vt1.c0)) THEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) END ASC;
SELECT ALL * FROM vt1, rt0 WHERE (CASE (('')-(rt0.c2))  WHEN ((((rt0.c3)OR('-901732142')))OR(rt0.c2)) THEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c3)) ELSE CAST(rt0.c0 AS BLOB) END) ORDER BY ((CAST(rt0.c2 AS BLOB)) NOT BETWEEN ((+ (rt0.c2))) AND (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3)))) ASC, ((((rt0.c2)IS(rt0.c2)))IS NOT(LIKELY('-649044773')));
SELECT SUM(count) FROM (SELECT ((CASE (('')-(rt0.c2))  WHEN ((((rt0.c3)OR('-901732142')))OR(rt0.c2)) THEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c3)) ELSE CAST(rt0.c0 AS BLOB) END) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((CAST(rt0.c2 AS BLOB)) NOT BETWEEN ((+ (rt0.c2))) AND (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3)))) ASC, ((((rt0.c2)IS(rt0.c2)))IS NOT(LIKELY('-649044773'))));
SELECT ALL * FROM vt1, rt0 WHERE (CASE (('')-(rt0.c2))  WHEN ((((rt0.c3)OR('-901732142')))OR(rt0.c2)) THEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c3)) ELSE CAST(rt0.c0 AS BLOB) END) ORDER BY ((CAST(rt0.c2 AS BLOB)) NOT BETWEEN ((+ (rt0.c2))) AND (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3)))) ASC, ((((rt0.c2)IS(rt0.c2)))IS NOT(LIKELY('-649044773')));
SELECT SUM(count) FROM (SELECT ((CASE (('')-(rt0.c2))  WHEN ((((rt0.c3)OR('-901732142')))OR(rt0.c2)) THEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c3)) ELSE CAST(rt0.c0 AS BLOB) END) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((CAST(rt0.c2 AS BLOB)) NOT BETWEEN ((+ (rt0.c2))) AND (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3)))) ASC, ((((rt0.c2)IS(rt0.c2)))IS NOT(LIKELY('-649044773'))));
SELECT ALL * FROM vt1, rt0 WHERE (CASE (('')-(rt0.c2))  WHEN ((((rt0.c3)OR('-901732142')))OR(rt0.c2)) THEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c3)) ELSE CAST(rt0.c0 AS BLOB) END) ORDER BY ((CAST(rt0.c2 AS BLOB)) NOT BETWEEN ((+ (rt0.c2))) AND (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3)))) ASC, ((((rt0.c2)IS(rt0.c2)))IS NOT(LIKELY('-649044773')));
SELECT ALL * FROM rt0, vt1 WHERE (DATETIME(0.9711383560329472, (rt0.c1 IN ()), ((rt0.c0)||(rt0.c1)))) ORDER BY '', rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(0.9711383560329472, (rt0.c1 IN ()), ((rt0.c0)||(rt0.c1)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY '', rt0.c1);
SELECT ALL * FROM rt0, vt1 WHERE (DATETIME(0.9711383560329472, (rt0.c1 IN ()), ((rt0.c0)||(rt0.c1)))) ORDER BY '', rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(0.9711383560329472, (rt0.c1 IN ()), ((rt0.c0)||(rt0.c1)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY '', rt0.c1);
SELECT ALL * FROM rt0, vt1 WHERE (DATETIME(0.9711383560329472, (rt0.c1 IN ()), ((rt0.c0)||(rt0.c1)))) ORDER BY '', rt0.c1;
SELECT COUNT(*) FROM vt1 WHERE (CASE vt1.c0 COLLATE BINARY  WHEN x'' THEN ((x'') BETWEEN ('N9') AND (vt1.c0)) WHEN ((vt1.c0) NOTNULL) THEN vt1.c0 COLLATE RTRIM WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) THEN vt1.c0 COLLATE RTRIM END) ORDER BY (NOT (x'')) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0 COLLATE BINARY  WHEN x'' THEN ((x'') BETWEEN ('N9') AND (vt1.c0)) WHEN ((vt1.c0) NOTNULL) THEN vt1.c0 COLLATE RTRIM WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) THEN vt1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt1 ORDER BY (NOT (x'')) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (CASE vt1.c0 COLLATE BINARY  WHEN x'' THEN ((x'') BETWEEN ('N9') AND (vt1.c0)) WHEN ((vt1.c0) NOTNULL) THEN vt1.c0 COLLATE RTRIM WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) THEN vt1.c0 COLLATE RTRIM END) ORDER BY (NOT (x'')) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0 COLLATE BINARY  WHEN x'' THEN ((x'') BETWEEN ('N9') AND (vt1.c0)) WHEN ((vt1.c0) NOTNULL) THEN vt1.c0 COLLATE RTRIM WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) THEN vt1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt1 ORDER BY (NOT (x'')) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (CASE vt1.c0 COLLATE BINARY  WHEN x'' THEN ((x'') BETWEEN ('N9') AND (vt1.c0)) WHEN ((vt1.c0) NOTNULL) THEN vt1.c0 COLLATE RTRIM WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) THEN vt1.c0 COLLATE RTRIM END) ORDER BY (NOT (x'')) COLLATE BINARY  NULLS FIRST;
SELECT * FROM vt1, rt0 WHERE ((NOT (NULL)));
SELECT SUM(count) FROM (SELECT (((NOT (NULL))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((NOT (NULL)));
SELECT SUM(count) FROM (SELECT (((NOT (NULL))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((NOT (NULL)));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3);
SELECT COUNT(*) FROM vt1 WHERE (UNLIKELY(vt1.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((UNLIKELY(vt1.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (UNLIKELY(vt1.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((UNLIKELY(vt1.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (UNLIKELY(vt1.c0) COLLATE RTRIM);
SELECT ALL * FROM vt1, rt0 WHERE (((rt0.c2) NOT NULL) COLLATE RTRIM COLLATE BINARY) ORDER BY ((((rt0.c1)<=(vt1.c0)))<(((rt0.c3)==(vt1.c0)))) ASC  NULLS LAST, CASE WHEN ((((rt0.c0)OR(1.75547227E8)))OR(rt0.c1)) THEN 1251838700 WHEN rt0.c3 COLLATE RTRIM THEN ((x'')<>(rt0.c2)) WHEN ((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)) THEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT NULL) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c1)<=(vt1.c0)))<(((rt0.c3)=(vt1.c0)))) ASC  NULLS LAST, CASE WHEN ((((rt0.c0)OR(1.75547227E8)))OR(rt0.c1)) THEN 1251838700 WHEN rt0.c3 COLLATE RTRIM THEN ((x'')<>(rt0.c2)) WHEN ((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)) THEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) END DESC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (((rt0.c2) NOT NULL) COLLATE RTRIM COLLATE BINARY) ORDER BY ((((rt0.c1)<=(vt1.c0)))<(((rt0.c3)==(vt1.c0)))) ASC  NULLS LAST, CASE WHEN ((((rt0.c0)OR(1.75547227E8)))OR(rt0.c1)) THEN 1251838700 WHEN rt0.c3 COLLATE RTRIM THEN ((x'')<>(rt0.c2)) WHEN ((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)) THEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT NULL) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c1)<=(vt1.c0)))<(((rt0.c3)=(vt1.c0)))) ASC  NULLS LAST, CASE WHEN ((((rt0.c0)OR(1.75547227E8)))OR(rt0.c1)) THEN 1251838700 WHEN rt0.c3 COLLATE RTRIM THEN ((x'')<>(rt0.c2)) WHEN ((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)) THEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) END DESC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (((rt0.c2) NOT NULL) COLLATE RTRIM COLLATE BINARY) ORDER BY ((((rt0.c1)<=(vt1.c0)))<(((rt0.c3)==(vt1.c0)))) ASC  NULLS LAST, CASE WHEN ((((rt0.c0)OR(1.75547227E8)))OR(rt0.c1)) THEN 1251838700 WHEN rt0.c3 COLLATE RTRIM THEN ((x'')<>(rt0.c2)) WHEN ((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)) THEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON ((((((((((vt1.c0)AND(rt0.c0)))AND(vt1.c0)))OR(rt0.c0)))AND(vt1.c0))) NOT NULL) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON ((((((((((vt1.c0)AND(rt0.c0)))AND(vt1.c0)))OR(rt0.c0)))AND(vt1.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON ((((((((((vt1.c0)AND(rt0.c0)))AND(vt1.c0)))OR(rt0.c0)))AND(vt1.c0))) NOT NULL) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON ((((((((((vt1.c0)AND(rt0.c0)))AND(vt1.c0)))OR(rt0.c0)))AND(vt1.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON ((((((((((vt1.c0)AND(rt0.c0)))AND(vt1.c0)))OR(rt0.c0)))AND(vt1.c0))) NOT NULL) WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((- ((vt1.c0 IN ())))) ORDER BY ((x'')>>(CASE WHEN vt1.c0 THEN vt1.c0 END)) ASC, 1218625574;
SELECT SUM(count) FROM (SELECT ALL (((- ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY ((x'')>>(CASE WHEN vt1.c0 THEN vt1.c0 END)) ASC, 1218625574);
SELECT ALL COUNT(*) FROM vt1 WHERE ((- ((vt1.c0 IN ())))) ORDER BY ((x'')>>(CASE WHEN vt1.c0 THEN vt1.c0 END)) ASC, 1218625574;
SELECT SUM(count) FROM (SELECT ALL (((- ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY ((x'')>>(CASE WHEN vt1.c0 THEN vt1.c0 END)) ASC, 1218625574);
SELECT ALL COUNT(*) FROM vt1 WHERE ((vt1.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((vt1.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((vt1.c0 IN ()) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ ((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((~ ((+ (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ ((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((~ ((+ (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ ((+ (vt1.c0)))));
SELECT * FROM rt0 WHERE (load_extension(rt0.c3)) ORDER BY (rt0.c2 COLLATE RTRIM IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(rt0.c3)) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c2 COLLATE RTRIM IN ()) ASC);
SELECT * FROM rt0 WHERE (load_extension(rt0.c3)) ORDER BY (rt0.c2 COLLATE RTRIM IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(rt0.c3)) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c2 COLLATE RTRIM IN ()) ASC);
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c1)IS(rt0.c2))) ISNULL)) ORDER BY ((((rt0.c2)IS NOT(rt0.c3))) NOT BETWEEN (((rt0.c0)IS NOT(vt1.c0))) AND (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))) DESC  NULLS LAST, ((CASE rt0.c3  WHEN x'' THEN rt0.c1 END)+(NULL))  NULLS LAST, COALESCE(((x'') NOT BETWEEN (rt0.c0) AND (rt0.c0)), CAST(rt0.c2 AS TEXT));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)IS(rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c2)IS NOT(rt0.c3))) NOT BETWEEN (((rt0.c0)IS NOT(vt1.c0))) AND (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))) DESC  NULLS LAST, ((CASE rt0.c3  WHEN x'' THEN rt0.c1 END)+(NULL))  NULLS LAST, COALESCE(((x'') NOT BETWEEN (rt0.c0) AND (rt0.c0)), CAST(rt0.c2 AS TEXT)));
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c1)IS(rt0.c2))) ISNULL)) ORDER BY ((((rt0.c2)IS NOT(rt0.c3))) NOT BETWEEN (((rt0.c0)IS NOT(vt1.c0))) AND (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))) DESC  NULLS LAST, ((CASE rt0.c3  WHEN x'' THEN rt0.c1 END)+(NULL))  NULLS LAST, COALESCE(((x'') NOT BETWEEN (rt0.c0) AND (rt0.c0)), CAST(rt0.c2 AS TEXT));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)IS(rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c2)IS NOT(rt0.c3))) NOT BETWEEN (((rt0.c0)IS NOT(vt1.c0))) AND (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))) DESC  NULLS LAST, ((CASE rt0.c3  WHEN x'' THEN rt0.c1 END)+(NULL))  NULLS LAST, COALESCE(((x'') NOT BETWEEN (rt0.c0) AND (rt0.c0)), CAST(rt0.c2 AS TEXT)));
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c1)IS(rt0.c2))) ISNULL)) ORDER BY ((((rt0.c2)IS NOT(rt0.c3))) NOT BETWEEN (((rt0.c0)IS NOT(vt1.c0))) AND (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))) DESC  NULLS LAST, ((CASE rt0.c3  WHEN x'' THEN rt0.c1 END)+(NULL))  NULLS LAST, COALESCE(((x'') NOT BETWEEN (rt0.c0) AND (rt0.c0)), CAST(rt0.c2 AS TEXT));
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c1))) NOTNULL));
SELECT ALL * FROM rt0 WHERE ((((rt0.c3))<>((rt0.c0))) COLLATE RTRIM) ORDER BY x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3))!=((rt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY x'' DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c3))<>((rt0.c0))) COLLATE RTRIM) ORDER BY x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3))!=((rt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY x'' DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c3))<>((rt0.c0))) COLLATE RTRIM) ORDER BY x'' DESC  NULLS FIRST;
SELECT * FROM rt0, vt1 WHERE (((((((rt0.c2)&(rt0.c1)))OR((- (rt0.c2)))))AND((rt0.c3 IN (rt0.c2, rt0.c0))))) ORDER BY ((rt0.c0)*((rt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)&(rt0.c1)))OR((- (rt0.c2)))))AND((rt0.c3 IN (rt0.c2, rt0.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((rt0.c0)*((rt0.c0 IN ())))  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (((((((rt0.c2)&(rt0.c1)))OR((- (rt0.c2)))))AND((rt0.c3 IN (rt0.c2, rt0.c0))))) ORDER BY ((rt0.c0)*((rt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)&(rt0.c1)))OR((- (rt0.c2)))))AND((rt0.c3 IN (rt0.c2, rt0.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((rt0.c0)*((rt0.c0 IN ())))  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (((((((rt0.c2)&(rt0.c1)))OR((- (rt0.c2)))))AND((rt0.c3 IN (rt0.c2, rt0.c0))))) ORDER BY ((rt0.c0)*((rt0.c0 IN ())))  NULLS LAST;
SELECT * FROM rt0, vt1 WHERE (CAST(x'' AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS INTEGER)) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (CAST(x'' AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS INTEGER)) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (CAST(x'' AS INTEGER));
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.c0)<(vt1.c0)) THEN (+ (vt1.c0)) END) ORDER BY (((((vt1.c0 IN ()))AND(LOWER(DISTINCT vt1.c0))))AND(((vt1.c0)IS NOT(vt1.c0)))), CAST(vt1.c0 AS BLOB)  NULLS FIRST, (((((vt1.c0)/(vt1.c0))))>=((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0)<(vt1.c0)) THEN (+ (vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0 IN ()))AND(LOWER(DISTINCT vt1.c0))))AND(((vt1.c0)IS NOT(vt1.c0)))), CAST(vt1.c0 AS BLOB)  NULLS FIRST, (((((vt1.c0)/(vt1.c0))))>=((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.c0)<(vt1.c0)) THEN (+ (vt1.c0)) END) ORDER BY (((((vt1.c0 IN ()))AND(LOWER(DISTINCT vt1.c0))))AND(((vt1.c0)IS NOT(vt1.c0)))), CAST(vt1.c0 AS BLOB)  NULLS FIRST, (((((vt1.c0)/(vt1.c0))))>=((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0)<(vt1.c0)) THEN (+ (vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0 IN ()))AND(LOWER(DISTINCT vt1.c0))))AND(((vt1.c0)IS NOT(vt1.c0)))), CAST(vt1.c0 AS BLOB)  NULLS FIRST, (((((vt1.c0)/(vt1.c0))))>=((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((rt0.c2 COLLATE RTRIM))<=((((rt0.c2)LIKE(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 COLLATE RTRIM))<=((((rt0.c2)LIKE(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2 COLLATE RTRIM))<=((((rt0.c2)LIKE(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 COLLATE RTRIM))<=((((rt0.c2)LIKE(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2 COLLATE RTRIM))<=((((rt0.c2)LIKE(rt0.c1))))));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0))<=(((~ (vt1.c0)))))) ORDER BY (((vt1.c0))<=((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND('*z')))OR(vt1.c0))))) DESC  NULLS LAST, vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0))<=(((~ (vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0))<=((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND('*z')))OR(vt1.c0))))) DESC  NULLS LAST, vt1.c0  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0))<=(((~ (vt1.c0)))))) ORDER BY (((vt1.c0))<=((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND('*z')))OR(vt1.c0))))) DESC  NULLS LAST, vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0))<=(((~ (vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0))<=((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND('*z')))OR(vt1.c0))))) DESC  NULLS LAST, vt1.c0  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0))<=(((~ (vt1.c0)))))) ORDER BY (((vt1.c0))<=((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND('*z')))OR(vt1.c0))))) DESC  NULLS LAST, vt1.c0  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY CASE WHEN CASE WHEN rt0.c2 THEN rt0.c3 END THEN rt0.c2 COLLATE BINARY ELSE (~ (rt0.c0)) END DESC, ((rt0.c3 COLLATE RTRIM) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CASE WHEN rt0.c2 THEN rt0.c3 END THEN rt0.c2 COLLATE BINARY ELSE (~ (rt0.c0)) END DESC, ((rt0.c3 COLLATE RTRIM) IS TRUE));
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY CASE WHEN CASE WHEN rt0.c2 THEN rt0.c3 END THEN rt0.c2 COLLATE BINARY ELSE (~ (rt0.c0)) END DESC, ((rt0.c3 COLLATE RTRIM) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CASE WHEN rt0.c2 THEN rt0.c3 END THEN rt0.c2 COLLATE BINARY ELSE (~ (rt0.c0)) END DESC, ((rt0.c3 COLLATE RTRIM) IS TRUE));
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY CASE WHEN CASE WHEN rt0.c2 THEN rt0.c3 END THEN rt0.c2 COLLATE BINARY ELSE (~ (rt0.c0)) END DESC, ((rt0.c3 COLLATE RTRIM) IS TRUE);
SELECT * FROM rt0 WHERE (CASE ((rt0.c2)AND(rt0.c1))  WHEN 0.7423913111917734 THEN TYPEOF(DISTINCT rt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2)AND(rt0.c1))  WHEN 0.7423913111917734 THEN TYPEOF(DISTINCT rt0.c0) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE ((rt0.c2)AND(rt0.c1))  WHEN 0.7423913111917734 THEN TYPEOF(DISTINCT rt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2)AND(rt0.c1))  WHEN 0.7423913111917734 THEN TYPEOF(DISTINCT rt0.c0) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE ((rt0.c2)AND(rt0.c1))  WHEN 0.7423913111917734 THEN TYPEOF(DISTINCT rt0.c0) END);
SELECT ALL * FROM vt1 WHERE ((~ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((~ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((~ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3 COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3 COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3 COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER))+(((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (~ (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS INTEGER))+(((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (~ (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER))+(((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (~ (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS INTEGER))+(((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (~ (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER))+(((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (~ (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt1, rt0 WHERE (TRIM(DISTINCT rt0.c3) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT rt0.c3) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (TRIM(DISTINCT rt0.c3) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT rt0.c3) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (TRIM(DISTINCT rt0.c3) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)=(rt0.c1)))>=(((((((((rt0.c3)OR(NULL)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)=(rt0.c1)))>=(((((((((rt0.c3)OR(NULL)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)=(rt0.c1)))>=(((((((((rt0.c3)OR(NULL)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)=(rt0.c1)))>=(((((((((rt0.c3)OR(NULL)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)=(rt0.c1)))>=(((((((((rt0.c3)OR(NULL)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))));
SELECT * FROM rt0, vt1 WHERE (((CAST(rt0.c0 AS TEXT))>>(((((((((vt1.c0)AND(0.8505733144012977)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS TEXT))>>(((((((((vt1.c0)AND(0.8505733144012977)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((CAST(rt0.c0 AS TEXT))>>(((((((((vt1.c0)AND(0.8505733144012977)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS TEXT))>>(((((((((vt1.c0)AND(0.8505733144012977)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((CAST(rt0.c0 AS TEXT))>>(((((((((vt1.c0)AND(0.8505733144012977)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c3)))));
SELECT ALL * FROM vt1 INNER JOIN rt0 ON ('915422385' IN ()) WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ('915422385' IN ()));
SELECT ALL * FROM vt1 INNER JOIN rt0 ON ('915422385' IN ()) WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ('915422385' IN ()));
SELECT ALL * FROM vt1 INNER JOIN rt0 ON ('915422385' IN ()) WHERE (rt0.c3);
SELECT * FROM rt0 WHERE (((rt0.c1 IN (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 IN (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c1 IN (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 IN (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c1 IN (rt0.c2)) IN ()));
SELECT * FROM vt1 WHERE (CAST(((vt1.c0) NOT NULL) AS INTEGER)) ORDER BY TRIM((vt1.c0 IN (vt1.c0, vt1.c0)), vt1.c0)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) NOT NULL) AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY TRIM((vt1.c0 IN (vt1.c0, vt1.c0)), vt1.c0)  NULLS LAST);
SELECT * FROM vt1 WHERE (CAST(((vt1.c0) NOT NULL) AS INTEGER)) ORDER BY TRIM((vt1.c0 IN (vt1.c0, vt1.c0)), vt1.c0)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) NOT NULL) AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY TRIM((vt1.c0 IN (vt1.c0, vt1.c0)), vt1.c0)  NULLS LAST);
SELECT * FROM vt1 WHERE (CAST(((vt1.c0) NOT NULL) AS INTEGER)) ORDER BY TRIM((vt1.c0 IN (vt1.c0, vt1.c0)), vt1.c0)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (COALESCE(((rt0.c2)GLOB(rt0.c3)), ((rt0.c3) NOTNULL))) ORDER BY CAST(rt0.c1 AS REAL) ASC, CAST((0.3418872062917776 IN ()) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(((rt0.c2)GLOB(rt0.c3)), ((rt0.c3) NOTNULL))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c1 AS REAL) ASC, CAST((0.3418872062917776 IN ()) AS REAL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (COALESCE(((rt0.c2)GLOB(rt0.c3)), ((rt0.c3) NOTNULL))) ORDER BY CAST(rt0.c1 AS REAL) ASC, CAST((0.3418872062917776 IN ()) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(((rt0.c2)GLOB(rt0.c3)), ((rt0.c3) NOTNULL))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c1 AS REAL) ASC, CAST((0.3418872062917776 IN ()) AS REAL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (COALESCE(((rt0.c2)GLOB(rt0.c3)), ((rt0.c3) NOTNULL))) ORDER BY CAST(rt0.c1 AS REAL) ASC, CAST((0.3418872062917776 IN ()) AS REAL) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((CAST(vt1.c0 AS REAL)) NOT BETWEEN ((+ (vt1.c0))) AND (CAST(vt1.c0 AS BLOB)))  NULLS LAST, LTRIM(vt1.c0 COLLATE RTRIM) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS REAL)) NOT BETWEEN ((+ (vt1.c0))) AND (CAST(vt1.c0 AS BLOB)))  NULLS LAST, LTRIM(vt1.c0 COLLATE RTRIM) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((CAST(vt1.c0 AS REAL)) NOT BETWEEN ((+ (vt1.c0))) AND (CAST(vt1.c0 AS BLOB)))  NULLS LAST, LTRIM(vt1.c0 COLLATE RTRIM) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS REAL)) NOT BETWEEN ((+ (vt1.c0))) AND (CAST(vt1.c0 AS BLOB)))  NULLS LAST, LTRIM(vt1.c0 COLLATE RTRIM) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((CAST(vt1.c0 AS REAL)) NOT BETWEEN ((+ (vt1.c0))) AND (CAST(vt1.c0 AS BLOB)))  NULLS LAST, LTRIM(vt1.c0 COLLATE RTRIM) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((0.15840296632425488) IS FALSE) WHERE (((rt0.c2 IN (rt0.c2)) IN ((('حF')<=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN (rt0.c2)) IN ((('حF')<=(rt0.c2))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((0.15840296632425488) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((0.15840296632425488) IS FALSE) WHERE (((rt0.c2 IN (rt0.c2)) IN ((('حF')<=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN (rt0.c2)) IN ((('حF')<=(rt0.c2))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((0.15840296632425488) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((0.15840296632425488) IS FALSE) WHERE (((rt0.c2 IN (rt0.c2)) IN ((('حF')<=(rt0.c2)))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((CAST(rt0.c3 AS INTEGER))OR((((vt1.c0))<>((rt0.c3))))))OR((vt1.c0 IN ())))) ORDER BY ((~ (rt0.c1)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c3 AS INTEGER))OR((((vt1.c0))!=((rt0.c3))))))OR((vt1.c0 IN ())))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((~ (rt0.c1)) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((CAST(rt0.c3 AS INTEGER))OR((((vt1.c0))<>((rt0.c3))))))OR((vt1.c0 IN ())))) ORDER BY ((~ (rt0.c1)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c3 AS INTEGER))OR((((vt1.c0))!=((rt0.c3))))))OR((vt1.c0 IN ())))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((~ (rt0.c1)) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((CAST(rt0.c3 AS INTEGER))OR((((vt1.c0))<>((rt0.c3))))))OR((vt1.c0 IN ())))) ORDER BY ((~ (rt0.c1)) IN ()) ASC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE)&((((0.6811833331628939, '1269613100', vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, 0.7293115734822143)))))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE)&((((0.6811833331628939, '1269613100', vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, 0.7293115734822143)))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL));
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE)&((((0.6811833331628939, '1269613100', vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, 0.7293115734822143)))))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE)&((((0.6811833331628939, '1269613100', vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, 0.7293115734822143)))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL));
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE)&((((0.6811833331628939, '1269613100', vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, 0.7293115734822143)))))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL);
SELECT * FROM rt0 NATURAL JOIN vt1 WHERE (QUOTE(NULL));
SELECT SUM(count) FROM (SELECT ALL ((QUOTE(NULL)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT * FROM rt0 NATURAL JOIN vt1 WHERE (QUOTE(NULL));
SELECT SUM(count) FROM (SELECT ALL ((QUOTE(NULL)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT * FROM rt0 NATURAL JOIN vt1 WHERE (QUOTE(NULL));
SELECT * FROM vt1, rt0 WHERE (((CAST(rt0.c3 AS INTEGER))LIKE(((vt1.c0) NOTNULL)))) ORDER BY ((((vt1.c0) IS TRUE)) BETWEEN ((((rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN ((x'', rt0.c1, rt0.c3)) AND ((rt0.c1, rt0.c3, rt0.c3)))) AND ((((rt0.c2)) NOT BETWEEN ((x'')) AND ((0x2b207ff3))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS INTEGER))LIKE(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((vt1.c0) IS TRUE)) BETWEEN ((((rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN ((x'', rt0.c1, rt0.c3)) AND ((rt0.c1, rt0.c3, rt0.c3)))) AND ((((rt0.c2)) NOT BETWEEN ((x'')) AND ((0x2b207ff3))))) ASC  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE (((CAST(rt0.c3 AS INTEGER))LIKE(((vt1.c0) NOTNULL)))) ORDER BY ((((vt1.c0) IS TRUE)) BETWEEN ((((rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN ((x'', rt0.c1, rt0.c3)) AND ((rt0.c1, rt0.c3, rt0.c3)))) AND ((((rt0.c2)) NOT BETWEEN ((x'')) AND ((0x2b207ff3))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS INTEGER))LIKE(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((vt1.c0) IS TRUE)) BETWEEN ((((rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN ((x'', rt0.c1, rt0.c3)) AND ((rt0.c1, rt0.c3, rt0.c3)))) AND ((((rt0.c2)) NOT BETWEEN ((x'')) AND ((0x2b207ff3))))) ASC  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE (((CAST(rt0.c3 AS INTEGER))LIKE(((vt1.c0) NOTNULL)))) ORDER BY ((((vt1.c0) IS TRUE)) BETWEEN ((((rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN ((x'', rt0.c1, rt0.c3)) AND ((rt0.c1, rt0.c3, rt0.c3)))) AND ((((rt0.c2)) NOT BETWEEN ((x'')) AND ((0x2b207ff3))))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0, vt1 WHERE ((NOT (rt0.c1 COLLATE BINARY))) ORDER BY (((rt0.c3) NOTNULL) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c3) NOTNULL) IN ())  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE ((NOT (rt0.c1 COLLATE BINARY))) ORDER BY (((rt0.c3) NOTNULL) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c3) NOTNULL) IN ())  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE ((NOT (rt0.c1 COLLATE BINARY))) ORDER BY (((rt0.c3) NOTNULL) IN ())  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CAST((((rt0.c3))>((rt0.c0))) AS NUMERIC)) ORDER BY ((rt0.c3) NOTNULL) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c3))>((rt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c3) NOTNULL) COLLATE RTRIM DESC);
SELECT ALL * FROM rt0 WHERE (CAST((((rt0.c3))>((rt0.c0))) AS NUMERIC)) ORDER BY ((rt0.c3) NOTNULL) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c3))>((rt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c3) NOTNULL) COLLATE RTRIM DESC);
SELECT ALL * FROM rt0 WHERE (CAST((((rt0.c3))>((rt0.c0))) AS NUMERIC)) ORDER BY ((rt0.c3) NOTNULL) COLLATE RTRIM DESC;
SELECT * FROM rt0, vt1 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt1.c0))) BETWEEN (((((rt0.c3)OR('')))AND(vt1.c0))) AND (CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt1.c0))) BETWEEN (((((rt0.c3)OR('')))AND(vt1.c0))) AND (CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt1.c0))) BETWEEN (((((rt0.c3)OR('')))AND(vt1.c0))) AND (CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt1.c0))) BETWEEN (((((rt0.c3)OR('')))AND(vt1.c0))) AND (CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt1.c0))) BETWEEN (((((rt0.c3)OR('')))AND(vt1.c0))) AND (CAST(rt0.c0 AS REAL))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((vt1.c0)/(rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)/(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((vt1.c0)/(rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)/(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((vt1.c0)/(rt0.c2))) NOTNULL));
SELECT ALL * FROM vt1, rt0 WHERE (LAST_INSERT_ROWID()) ORDER BY (ABS(rt0.c0) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt1, rt0 ORDER BY (ABS(rt0.c0) IN ())  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 WHERE (LAST_INSERT_ROWID()) ORDER BY (ABS(rt0.c0) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt1, rt0 ORDER BY (ABS(rt0.c0) IN ())  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 WHERE (LAST_INSERT_ROWID()) ORDER BY (ABS(rt0.c0) IN ())  NULLS FIRST;
SELECT * FROM vt1, rt0 WHERE ((- ((~ (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((~ (rt0.c3))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((- ((~ (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((~ (rt0.c3))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((- ((~ (rt0.c3)))));
SELECT ALL * FROM rt0 WHERE (INSTR(rt0.c0, rt0.c1) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((INSTR(rt0.c0, rt0.c1) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (INSTR(rt0.c0, rt0.c1) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((INSTR(rt0.c0, rt0.c1) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (INSTR(rt0.c0, rt0.c1) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1))>=((rt0.c0))))/(((rt0.c0)AND(rt0.c0))))) ORDER BY ((((((((((((((rt0.c3)-(rt0.c0)))OR(((rt0.c2)|(rt0.c3)))))AND(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c0)))))OR((((rt0.c0))<>((rt0.c3))))))OR(((rt0.c1)GLOB(rt0.c1)))))OR(((rt0.c3)|(rt0.c1)))))AND(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))) ASC  NULLS FIRST, SQLITE_SOURCE_ID() ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1))>=((rt0.c0))))/(((rt0.c0)AND(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((((((rt0.c3)-(rt0.c0)))OR(((rt0.c2)|(rt0.c3)))))AND(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c0)))))OR((((rt0.c0))!=((rt0.c3))))))OR(((rt0.c1)GLOB(rt0.c1)))))OR(((rt0.c3)|(rt0.c1)))))AND(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))) ASC  NULLS FIRST, SQLITE_SOURCE_ID() ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1))>=((rt0.c0))))/(((rt0.c0)AND(rt0.c0))))) ORDER BY ((((((((((((((rt0.c3)-(rt0.c0)))OR(((rt0.c2)|(rt0.c3)))))AND(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c0)))))OR((((rt0.c0))<>((rt0.c3))))))OR(((rt0.c1)GLOB(rt0.c1)))))OR(((rt0.c3)|(rt0.c1)))))AND(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))) ASC  NULLS FIRST, SQLITE_SOURCE_ID() ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1))>=((rt0.c0))))/(((rt0.c0)AND(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((((((rt0.c3)-(rt0.c0)))OR(((rt0.c2)|(rt0.c3)))))AND(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c0)))))OR((((rt0.c0))!=((rt0.c3))))))OR(((rt0.c1)GLOB(rt0.c1)))))OR(((rt0.c3)|(rt0.c1)))))AND(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))) ASC  NULLS FIRST, SQLITE_SOURCE_ID() ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1))>=((rt0.c0))))/(((rt0.c0)AND(rt0.c0))))) ORDER BY ((((((((((((((rt0.c3)-(rt0.c0)))OR(((rt0.c2)|(rt0.c3)))))AND(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c0)))))OR((((rt0.c0))<>((rt0.c3))))))OR(((rt0.c1)GLOB(rt0.c1)))))OR(((rt0.c3)|(rt0.c1)))))AND(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))) ASC  NULLS FIRST, SQLITE_SOURCE_ID() ASC  NULLS LAST;
SELECT * FROM rt0 INNER JOIN vt1 ON CAST(IFNULL(DISTINCT rt0.c1, 0x27aca8c7) AS TEXT) WHERE (vt1.c0) ORDER BY PRINTF((rt0.c2 IN (rt0.c3, rt0.c3)), (~ (vt1.c0)), ((rt0.c1) ISNULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON CAST(IFNULL(DISTINCT rt0.c1, 0x27aca8c7) AS TEXT) ORDER BY PRINTF((rt0.c2 IN (rt0.c3, rt0.c3)), (~ (vt1.c0)), ((rt0.c1) ISNULL)) DESC  NULLS FIRST);
SELECT * FROM rt0 INNER JOIN vt1 ON CAST(IFNULL(DISTINCT rt0.c1, 0x27aca8c7) AS TEXT) WHERE (vt1.c0) ORDER BY PRINTF((rt0.c2 IN (rt0.c3, rt0.c3)), (~ (vt1.c0)), ((rt0.c1) ISNULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON CAST(IFNULL(DISTINCT rt0.c1, 0x27aca8c7) AS TEXT) ORDER BY PRINTF((rt0.c2 IN (rt0.c3, rt0.c3)), (~ (vt1.c0)), ((rt0.c1) ISNULL)) DESC  NULLS FIRST);
SELECT * FROM rt0 INNER JOIN vt1 ON CAST(IFNULL(DISTINCT rt0.c1, 0x27aca8c7) AS TEXT) WHERE (vt1.c0) ORDER BY PRINTF((rt0.c2 IN (rt0.c3, rt0.c3)), (~ (vt1.c0)), ((rt0.c1) ISNULL)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (x'')))*(CAST(vt1.c0 AS NUMERIC)))) ORDER BY ((((((((TYPEOF(vt1.c0))AND((((''))>=((vt1.c0))))))OR((~ (vt1.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND ('')))))OR((((vt1.c0, vt1.c0, x'')) NOT BETWEEN ((vt1.c0, '915422385', vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (x'')))*(CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((TYPEOF(vt1.c0))AND((((''))>=((vt1.c0))))))OR((~ (vt1.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND ('')))))OR((((vt1.c0, vt1.c0, x'')) NOT BETWEEN ((vt1.c0, '915422385', vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (x'')))*(CAST(vt1.c0 AS NUMERIC)))) ORDER BY ((((((((TYPEOF(vt1.c0))AND((((''))>=((vt1.c0))))))OR((~ (vt1.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND ('')))))OR((((vt1.c0, vt1.c0, x'')) NOT BETWEEN ((vt1.c0, '915422385', vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (x'')))*(CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((TYPEOF(vt1.c0))AND((((''))>=((vt1.c0))))))OR((~ (vt1.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND ('')))))OR((((vt1.c0, vt1.c0, x'')) NOT BETWEEN ((vt1.c0, '915422385', vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (x'')))*(CAST(vt1.c0 AS NUMERIC)))) ORDER BY ((((((((TYPEOF(vt1.c0))AND((((''))>=((vt1.c0))))))OR((~ (vt1.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND ('')))))OR((((vt1.c0, vt1.c0, x'')) NOT BETWEEN ((vt1.c0, '915422385', vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 NOT INDEXED INNER JOIN rt0 ON (((rt0.c1 IN (rt0.c1))) BETWEEN (rt0.c1) AND ((NOT (vt1.c0)))) WHERE (x'8578') ORDER BY (+ (vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'8578') IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON (((rt0.c1 IN (rt0.c1))) BETWEEN (rt0.c1) AND ((NOT (vt1.c0)))) ORDER BY (+ (vt1.c0))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 NOT INDEXED INNER JOIN rt0 ON (((rt0.c1 IN (rt0.c1))) BETWEEN (rt0.c1) AND ((NOT (vt1.c0)))) WHERE (x'8578') ORDER BY (+ (vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'8578') IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON (((rt0.c1 IN (rt0.c1))) BETWEEN (rt0.c1) AND ((NOT (vt1.c0)))) ORDER BY (+ (vt1.c0))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 NOT INDEXED INNER JOIN rt0 ON (((rt0.c1 IN (rt0.c1))) BETWEEN (rt0.c1) AND ((NOT (vt1.c0)))) WHERE (x'8578') ORDER BY (+ (vt1.c0))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c2))) NOT NULL)) ORDER BY (((CAST(rt0.c0 AS NUMERIC), rt0.c1 COLLATE BINARY, (+ (rt0.c0))))==(('', ((rt0.c0) ISNULL), rt0.c2 COLLATE BINARY))) DESC;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY (((CAST(rt0.c0 AS NUMERIC), rt0.c1 COLLATE BINARY, (+ (rt0.c0))))=(('', ((rt0.c0) ISNULL), rt0.c2 COLLATE BINARY))) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c2))) NOT NULL)) ORDER BY (((CAST(rt0.c0 AS NUMERIC), rt0.c1 COLLATE BINARY, (+ (rt0.c0))))==(('', ((rt0.c0) ISNULL), rt0.c2 COLLATE BINARY))) DESC;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY (((CAST(rt0.c0 AS NUMERIC), rt0.c1 COLLATE BINARY, (+ (rt0.c0))))=(('', ((rt0.c0) ISNULL), rt0.c2 COLLATE BINARY))) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c2))) NOT NULL)) ORDER BY (((CAST(rt0.c0 AS NUMERIC), rt0.c1 COLLATE BINARY, (+ (rt0.c0))))==(('', ((rt0.c0) ISNULL), rt0.c2 COLLATE BINARY))) DESC;
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN ((((rt0.c2)AND(rt0.c3)))AND(rt0.c1)) THEN (NOT ('-2109074923')) WHEN ((rt0.c0) IS TRUE) THEN CAST(rt0.c2 AS INTEGER) WHEN ((((rt0.c2)AND(vt1.c0)))AND(rt0.c2)) THEN ((rt0.c1)<<(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt0.c2)AND(rt0.c3)))AND(rt0.c1)) THEN (NOT ('-2109074923')) WHEN ((rt0.c0) IS TRUE) THEN CAST(rt0.c2 AS INTEGER) WHEN ((((rt0.c2)AND(vt1.c0)))AND(rt0.c2)) THEN ((rt0.c1)<<(vt1.c0)) END) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN ((((rt0.c2)AND(rt0.c3)))AND(rt0.c1)) THEN (NOT ('-2109074923')) WHEN ((rt0.c0) IS TRUE) THEN CAST(rt0.c2 AS INTEGER) WHEN ((((rt0.c2)AND(vt1.c0)))AND(rt0.c2)) THEN ((rt0.c1)<<(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt0.c2)AND(rt0.c3)))AND(rt0.c1)) THEN (NOT ('-2109074923')) WHEN ((rt0.c0) IS TRUE) THEN CAST(rt0.c2 AS INTEGER) WHEN ((((rt0.c2)AND(vt1.c0)))AND(rt0.c2)) THEN ((rt0.c1)<<(vt1.c0)) END) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN ((((rt0.c2)AND(rt0.c3)))AND(rt0.c1)) THEN (NOT ('-2109074923')) WHEN ((rt0.c0) IS TRUE) THEN CAST(rt0.c2 AS INTEGER) WHEN ((((rt0.c2)AND(vt1.c0)))AND(rt0.c2)) THEN ((rt0.c1)<<(vt1.c0)) END);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)&(vt1.c0)) AS NUMERIC)) ORDER BY (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)&(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)&(vt1.c0)) AS NUMERIC)) ORDER BY (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)&(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)&(vt1.c0)) AS NUMERIC)) ORDER BY (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())  NULLS FIRST;
SELECT * FROM rt0 WHERE (((x'') IS TRUE)) ORDER BY CASE WHEN CAST(0.06741889462200656 AS BLOB) THEN (((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c1, rt0.c3, NULL)) AND ((rt0.c3, rt0.c3, rt0.c2))) END DESC  NULLS LAST, ((1.109973198E9)<<(((rt0.c1)/(rt0.c3))))  NULLS LAST, ((('-1306497337', rt0.c3, rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((((rt0.c3)<<(rt0.c1)), (((0.8812327989288594, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c3, rt0.c2, rt0.c3))), CAST(rt0.c3 AS TEXT), ((rt0.c1)>(rt0.c1)), (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) AND ((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 END, (- (rt0.c3)), ((rt0.c0)=(NULL)), CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 ELSE 0X7743f68b END, ((rt0.c3)<(rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'') IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CAST(0.06741889462200656 AS BLOB) THEN (((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c1, rt0.c3, NULL)) AND ((rt0.c3, rt0.c3, rt0.c2))) END DESC  NULLS LAST, ((1.109973198E9)<<(((rt0.c1)/(rt0.c3))))  NULLS LAST, ((('-1306497337', rt0.c3, rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((((rt0.c3)<<(rt0.c1)), (((0.8812327989288594, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c3, rt0.c2, rt0.c3))), CAST(rt0.c3 AS TEXT), ((rt0.c1)>(rt0.c1)), (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) AND ((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 END, (- (rt0.c3)), ((rt0.c0)==(NULL)), CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 ELSE 0X7743f68b END, ((rt0.c3)<(rt0.c2))))) ASC);
SELECT * FROM rt0 WHERE (((x'') IS TRUE)) ORDER BY CASE WHEN CAST(0.06741889462200656 AS BLOB) THEN (((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c1, rt0.c3, NULL)) AND ((rt0.c3, rt0.c3, rt0.c2))) END DESC  NULLS LAST, ((1.109973198E9)<<(((rt0.c1)/(rt0.c3))))  NULLS LAST, ((('-1306497337', rt0.c3, rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((((rt0.c3)<<(rt0.c1)), (((0.8812327989288594, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c3, rt0.c2, rt0.c3))), CAST(rt0.c3 AS TEXT), ((rt0.c1)>(rt0.c1)), (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) AND ((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 END, (- (rt0.c3)), ((rt0.c0)=(NULL)), CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 ELSE 0X7743f68b END, ((rt0.c3)<(rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'') IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CAST(0.06741889462200656 AS BLOB) THEN (((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c1, rt0.c3, NULL)) AND ((rt0.c3, rt0.c3, rt0.c2))) END DESC  NULLS LAST, ((1.109973198E9)<<(((rt0.c1)/(rt0.c3))))  NULLS LAST, ((('-1306497337', rt0.c3, rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((((rt0.c3)<<(rt0.c1)), (((0.8812327989288594, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c3, rt0.c2, rt0.c3))), CAST(rt0.c3 AS TEXT), ((rt0.c1)>(rt0.c1)), (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) AND ((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 END, (- (rt0.c3)), ((rt0.c0)==(NULL)), CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 ELSE 0X7743f68b END, ((rt0.c3)<(rt0.c2))))) ASC);
SELECT * FROM rt0 WHERE (((x'') IS TRUE)) ORDER BY CASE WHEN CAST(0.06741889462200656 AS BLOB) THEN (((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c1, rt0.c3, NULL)) AND ((rt0.c3, rt0.c3, rt0.c2))) END DESC  NULLS LAST, ((1.109973198E9)<<(((rt0.c1)/(rt0.c3))))  NULLS LAST, ((('-1306497337', rt0.c3, rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((((rt0.c3)<<(rt0.c1)), (((0.8812327989288594, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c3, rt0.c2, rt0.c3))), CAST(rt0.c3 AS TEXT), ((rt0.c1)>(rt0.c1)), (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) AND ((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 END, (- (rt0.c3)), ((rt0.c0)=(NULL)), CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 ELSE 0X7743f68b END, ((rt0.c3)<(rt0.c2))))) ASC;
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON (((((rt0.c2))<((rt0.c3))))IS(SQLITE_COMPILEOPTION_GET(rt0.c2))) WHERE (CASE (((vt1.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))  WHEN (((('')OR(rt0.c0)))AND(rt0.c3)) THEN json_extract(rt0.c2, rt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE (((vt1.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))  WHEN (((('')OR(rt0.c0)))AND(rt0.c3)) THEN json_extract(rt0.c2, rt0.c0) END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON (((((rt0.c2))<((rt0.c3))))IS(SQLITE_COMPILEOPTION_GET(rt0.c2))));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON (((((rt0.c2))<((rt0.c3))))IS(SQLITE_COMPILEOPTION_GET(rt0.c2))) WHERE (CASE (((vt1.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))  WHEN (((('')OR(rt0.c0)))AND(rt0.c3)) THEN json_extract(rt0.c2, rt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE (((vt1.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))  WHEN (((('')OR(rt0.c0)))AND(rt0.c3)) THEN json_extract(rt0.c2, rt0.c0) END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON (((((rt0.c2))<((rt0.c3))))IS(SQLITE_COMPILEOPTION_GET(rt0.c2))));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON (((((rt0.c2))<((rt0.c3))))IS(SQLITE_COMPILEOPTION_GET(rt0.c2))) WHERE (CASE (((vt1.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))  WHEN (((('')OR(rt0.c0)))AND(rt0.c3)) THEN json_extract(rt0.c2, rt0.c0) END);
SELECT ALL * FROM vt1, rt0 WHERE (LTRIM(rt0.c0)) ORDER BY (((rt0.c3 IN ()))|((~ (rt0.c3))));
SELECT SUM(count) FROM (SELECT ((LTRIM(rt0.c0)) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((rt0.c3 IN ()))|((~ (rt0.c3)))));
SELECT ALL * FROM vt1, rt0 WHERE (LTRIM(rt0.c0)) ORDER BY (((rt0.c3 IN ()))|((~ (rt0.c3))));
SELECT SUM(count) FROM (SELECT ((LTRIM(rt0.c0)) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((rt0.c3 IN ()))|((~ (rt0.c3)))));
SELECT ALL * FROM vt1, rt0 WHERE (LTRIM(rt0.c0)) ORDER BY (((rt0.c3 IN ()))|((~ (rt0.c3))));
SELECT COUNT(*) FROM vt1 WHERE ((- ((((vt1.c0))>((vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((- ((((vt1.c0))>((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((- ((((vt1.c0))>((vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((- ((((vt1.c0))>((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((- ((((vt1.c0))>((vt1.c0))))));
SELECT * FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0))))+(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0))))+(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0))))+(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0))))+(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0))))+(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)));
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY (((((rt0.c3, rt0.c2, rt0.c1, rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c2, rt0.c1, rt0.c3)))) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (((((1629032492)OR(rt0.c0)))OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c3, rt0.c2, rt0.c1, rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c2, rt0.c1, rt0.c3)))) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (((((1629032492)OR(rt0.c0)))OR(rt0.c1)))));
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY (((((rt0.c3, rt0.c2, rt0.c1, rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c2, rt0.c1, rt0.c3)))) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (((((1629032492)OR(rt0.c0)))OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c3, rt0.c2, rt0.c1, rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c2, rt0.c1, rt0.c3)))) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (((((1629032492)OR(rt0.c0)))OR(rt0.c1)))));
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY (((((rt0.c3, rt0.c2, rt0.c1, rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c2, rt0.c1, rt0.c3)))) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (((((1629032492)OR(rt0.c0)))OR(rt0.c1))));
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c2 COLLATE NOCASE AS TEXT)) ORDER BY NULLIF(DISTINCT 0.5685949646220299, CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END) ASC, CASE CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 END  WHEN UPPER(rt0.c0) THEN ((rt0.c2) NOTNULL) WHEN ((rt0.c0) NOT NULL) THEN (('{<') IS TRUE) WHEN ((rt0.c1)%(rt0.c0)) THEN ((((rt0.c2)AND(rt0.c3)))AND(rt0.c3)) ELSE rt0.c1 COLLATE NOCASE END ASC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY NULLIF(DISTINCT 0.5685949646220299, CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END) ASC, CASE CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 END  WHEN UPPER(rt0.c0) THEN ((rt0.c2) NOTNULL) WHEN ((rt0.c0) NOT NULL) THEN (('{<') IS TRUE) WHEN ((rt0.c1)%(rt0.c0)) THEN ((((rt0.c2)AND(rt0.c3)))AND(rt0.c3)) ELSE rt0.c1 COLLATE NOCASE END ASC);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c2 COLLATE NOCASE AS TEXT)) ORDER BY NULLIF(DISTINCT 0.5685949646220299, CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END) ASC, CASE CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 END  WHEN UPPER(rt0.c0) THEN ((rt0.c2) NOTNULL) WHEN ((rt0.c0) NOT NULL) THEN (('{<') IS TRUE) WHEN ((rt0.c1)%(rt0.c0)) THEN ((((rt0.c2)AND(rt0.c3)))AND(rt0.c3)) ELSE rt0.c1 COLLATE NOCASE END ASC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY NULLIF(DISTINCT 0.5685949646220299, CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END) ASC, CASE CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 END  WHEN UPPER(rt0.c0) THEN ((rt0.c2) NOTNULL) WHEN ((rt0.c0) NOT NULL) THEN (('{<') IS TRUE) WHEN ((rt0.c1)%(rt0.c0)) THEN ((((rt0.c2)AND(rt0.c3)))AND(rt0.c3)) ELSE rt0.c1 COLLATE NOCASE END ASC);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c2 COLLATE NOCASE AS TEXT)) ORDER BY NULLIF(DISTINCT 0.5685949646220299, CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END) ASC, CASE CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 END  WHEN UPPER(rt0.c0) THEN ((rt0.c2) NOTNULL) WHEN ((rt0.c0) NOT NULL) THEN (('{<') IS TRUE) WHEN ((rt0.c1)%(rt0.c0)) THEN ((((rt0.c2)AND(rt0.c3)))AND(rt0.c3)) ELSE rt0.c1 COLLATE NOCASE END ASC;
SELECT ALL * FROM vt1, rt0 WHERE (CAST((- (vt1.c0)) AS TEXT)) ORDER BY ((0.9335910203055571)>(vt1.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((0.9335910203055571)>(vt1.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 WHERE (CAST((- (vt1.c0)) AS TEXT)) ORDER BY ((0.9335910203055571)>(vt1.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((0.9335910203055571)>(vt1.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 WHERE (CAST((- (vt1.c0)) AS TEXT)) ORDER BY ((0.9335910203055571)>(vt1.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) ISNULL)) ORDER BY ((0.32531046783532613)AND(((vt1.c0)|(vt1.c0)))) ASC, (((vt1.c0)||(vt1.c0)) IN (('' IN (vt1.c0)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((0.32531046783532613)AND(((vt1.c0)|(vt1.c0)))) ASC, (((vt1.c0)||(vt1.c0)) IN (('' IN (vt1.c0)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) ISNULL)) ORDER BY ((0.32531046783532613)AND(((vt1.c0)|(vt1.c0)))) ASC, (((vt1.c0)||(vt1.c0)) IN (('' IN (vt1.c0)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((0.32531046783532613)AND(((vt1.c0)|(vt1.c0)))) ASC, (((vt1.c0)||(vt1.c0)) IN (('' IN (vt1.c0)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) ISNULL)) ORDER BY ((0.32531046783532613)AND(((vt1.c0)|(vt1.c0)))) ASC, (((vt1.c0)||(vt1.c0)) IN (('' IN (vt1.c0)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((rt0.c0 COLLATE BINARY)GLOB(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY)GLOB(rt0.c1))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((rt0.c0 COLLATE BINARY)GLOB(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY)GLOB(rt0.c1))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((rt0.c0 COLLATE BINARY)GLOB(rt0.c1)));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c3)AND(vt1.c0)))OR(rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)AND(vt1.c0)))OR(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c3)AND(vt1.c0)))OR(rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)AND(vt1.c0)))OR(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c3)AND(vt1.c0)))OR(rt0.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (0.4852500043550111);
SELECT SUM(count) FROM (SELECT ALL ((0.4852500043550111) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (0.4852500043550111);
SELECT SUM(count) FROM (SELECT ALL ((0.4852500043550111) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (0.4852500043550111);
SELECT ALL * FROM vt1 WHERE ((vt1.c0 IN (vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((vt1.c0 IN (vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((vt1.c0 IN (vt1.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)>>(NULL)) COLLATE BINARY) ORDER BY (((CAST(vt1.c0 AS TEXT)))<=((((vt1.c0)-(0.6376557354081797))))) DESC  NULLS LAST, NULLIF(DISTINCT ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), vt1.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)>>(NULL)) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY (((CAST(vt1.c0 AS TEXT)))<=((((vt1.c0)-(0.6376557354081797))))) DESC  NULLS LAST, NULLIF(DISTINCT ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), vt1.c0 COLLATE BINARY));
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)>>(NULL)) COLLATE BINARY) ORDER BY (((CAST(vt1.c0 AS TEXT)))<=((((vt1.c0)-(0.6376557354081797))))) DESC  NULLS LAST, NULLIF(DISTINCT ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), vt1.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)>>(NULL)) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY (((CAST(vt1.c0 AS TEXT)))<=((((vt1.c0)-(0.6376557354081797))))) DESC  NULLS LAST, NULLIF(DISTINCT ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), vt1.c0 COLLATE BINARY));
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)>>(NULL)) COLLATE BINARY) ORDER BY (((CAST(vt1.c0 AS TEXT)))<=((((vt1.c0)-(0.6376557354081797))))) DESC  NULLS LAST, NULLIF(DISTINCT ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), vt1.c0 COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (DATETIME(vt1.c0 COLLATE BINARY, 0x688fcf5b, (rt0.c1 IN ()), CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c3 THEN vt1.c0 WHEN '0.5350978392550999' THEN vt1.c0 END, (rt0.c1 IN (-6.58834704E8, rt0.c0)))) ORDER BY (CAST(rt0.c0 AS NUMERIC) IN (((rt0.c1)>(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((DATETIME(vt1.c0 COLLATE BINARY, 0X688fcf5b, (rt0.c1 IN ()), CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c3 THEN vt1.c0 WHEN '0.5350978392550999' THEN vt1.c0 END, (rt0.c1 IN (-6.58834704E8, rt0.c0)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (CAST(rt0.c0 AS NUMERIC) IN (((rt0.c1)>(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (DATETIME(vt1.c0 COLLATE BINARY, 0x688fcf5b, (rt0.c1 IN ()), CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c3 THEN vt1.c0 WHEN '0.5350978392550999' THEN vt1.c0 END, (rt0.c1 IN (-6.58834704E8, rt0.c0)))) ORDER BY (CAST(rt0.c0 AS NUMERIC) IN (((rt0.c1)>(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((DATETIME(vt1.c0 COLLATE BINARY, 0X688fcf5b, (rt0.c1 IN ()), CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c3 THEN vt1.c0 WHEN '0.5350978392550999' THEN vt1.c0 END, (rt0.c1 IN (-6.58834704E8, rt0.c0)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (CAST(rt0.c0 AS NUMERIC) IN (((rt0.c1)>(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (DATETIME(vt1.c0 COLLATE BINARY, 0x688fcf5b, (rt0.c1 IN ()), CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c3 THEN vt1.c0 WHEN '0.5350978392550999' THEN vt1.c0 END, (rt0.c1 IN (-6.58834704E8, rt0.c0)))) ORDER BY (CAST(rt0.c0 AS NUMERIC) IN (((rt0.c1)>(rt0.c1))));
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE NULLIF(DISTINCT vt1.c0, rt0.c3)  WHEN ((rt0.c3) NOTNULL) THEN ((rt0.c3)>>(rt0.c0)) WHEN ((rt0.c3) NOT BETWEEN (rt0.c3) AND (vt1.c0)) THEN 0x7c0214ec WHEN ((((((((rt0.c0)OR(rt0.c1)))OR(vt1.c0)))OR(rt0.c3)))AND(rt0.c1)) THEN (rt0.c3 IN ()) ELSE vt1.c0 END) ORDER BY CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN json_insert(rt0.c1, rt0.c0, rt0.c2, rt0.c1, rt0.c1) WHEN (- (vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2)) WHEN CAST(rt0.c1 AS REAL) THEN CAST(rt0.c2 AS NUMERIC) ELSE (NOT (vt1.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE NULLIF(DISTINCT vt1.c0, rt0.c3)  WHEN ((rt0.c3) NOTNULL) THEN ((rt0.c3)>>(rt0.c0)) WHEN ((rt0.c3) NOT BETWEEN (rt0.c3) AND (vt1.c0)) THEN 0x7c0214ec WHEN ((((((((rt0.c0)OR(rt0.c1)))OR(vt1.c0)))OR(rt0.c3)))AND(rt0.c1)) THEN (rt0.c3 IN ()) ELSE vt1.c0 END) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN json_insert(rt0.c1, rt0.c0, rt0.c2, rt0.c1, rt0.c1) WHEN (- (vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2)) WHEN CAST(rt0.c1 AS REAL) THEN CAST(rt0.c2 AS NUMERIC) ELSE (NOT (vt1.c0)) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE NULLIF(DISTINCT vt1.c0, rt0.c3)  WHEN ((rt0.c3) NOTNULL) THEN ((rt0.c3)>>(rt0.c0)) WHEN ((rt0.c3) NOT BETWEEN (rt0.c3) AND (vt1.c0)) THEN 0x7c0214ec WHEN ((((((((rt0.c0)OR(rt0.c1)))OR(vt1.c0)))OR(rt0.c3)))AND(rt0.c1)) THEN (rt0.c3 IN ()) ELSE vt1.c0 END) ORDER BY CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN json_insert(rt0.c1, rt0.c0, rt0.c2, rt0.c1, rt0.c1) WHEN (- (vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2)) WHEN CAST(rt0.c1 AS REAL) THEN CAST(rt0.c2 AS NUMERIC) ELSE (NOT (vt1.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE NULLIF(DISTINCT vt1.c0, rt0.c3)  WHEN ((rt0.c3) NOTNULL) THEN ((rt0.c3)>>(rt0.c0)) WHEN ((rt0.c3) NOT BETWEEN (rt0.c3) AND (vt1.c0)) THEN 0x7c0214ec WHEN ((((((((rt0.c0)OR(rt0.c1)))OR(vt1.c0)))OR(rt0.c3)))AND(rt0.c1)) THEN (rt0.c3 IN ()) ELSE vt1.c0 END) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN json_insert(rt0.c1, rt0.c0, rt0.c2, rt0.c1, rt0.c1) WHEN (- (vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2)) WHEN CAST(rt0.c1 AS REAL) THEN CAST(rt0.c2 AS NUMERIC) ELSE (NOT (vt1.c0)) END DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((NOT ((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NOT ((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NOT ((NOT (rt0.c0)))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)) BETWEEN (((((rt0.c2))<>(('e-xVi*)F'))))) AND ((CAST(NULL AS REAL))))) ORDER BY (((((',}hz^9>I', rt0.c0, rt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((592072795, rt0.c1, rt0.c2)))) NOT NULL) DESC  NULLS LAST, (~ ((- (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN (((((rt0.c2))!=(('e-xVi*)F'))))) AND ((CAST(NULL AS REAL))))) IS TRUE)  as count FROM rt0 ORDER BY (((((',}hz^9>I', rt0.c0, rt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((592072795, rt0.c1, rt0.c2)))) NOT NULL) DESC  NULLS LAST, (~ ((- (rt0.c0)))) ASC);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)) BETWEEN (((((rt0.c2))<>(('e-xVi*)F'))))) AND ((CAST(NULL AS REAL))))) ORDER BY (((((',}hz^9>I', rt0.c0, rt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((592072795, rt0.c1, rt0.c2)))) NOT NULL) DESC  NULLS LAST, (~ ((- (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN (((((rt0.c2))!=(('e-xVi*)F'))))) AND ((CAST(NULL AS REAL))))) IS TRUE)  as count FROM rt0 ORDER BY (((((',}hz^9>I', rt0.c0, rt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((592072795, rt0.c1, rt0.c2)))) NOT NULL) DESC  NULLS LAST, (~ ((- (rt0.c0)))) ASC);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)) BETWEEN (((((rt0.c2))<>(('e-xVi*)F'))))) AND ((CAST(NULL AS REAL))))) ORDER BY (((((',}hz^9>I', rt0.c0, rt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((592072795, rt0.c1, rt0.c2)))) NOT NULL) DESC  NULLS LAST, (~ ((- (rt0.c0)))) ASC;
SELECT * FROM rt0 WHERE ((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2)) IN ())) ORDER BY (((rt0.c3)) NOT BETWEEN ((((rt0.c0)GLOB(rt0.c3)))) AND ((CASE WHEN NULL THEN rt0.c3 ELSE '/r' END))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3)) NOT BETWEEN ((((rt0.c0)GLOB(rt0.c3)))) AND ((CASE WHEN NULL THEN rt0.c3 ELSE '/r' END))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2)) IN ())) ORDER BY (((rt0.c3)) NOT BETWEEN ((((rt0.c0)GLOB(rt0.c3)))) AND ((CASE WHEN NULL THEN rt0.c3 ELSE '/r' END))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3)) NOT BETWEEN ((((rt0.c0)GLOB(rt0.c3)))) AND ((CASE WHEN NULL THEN rt0.c3 ELSE '/r' END))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2)) IN ())) ORDER BY (((rt0.c3)) NOT BETWEEN ((((rt0.c0)GLOB(rt0.c3)))) AND ((CASE WHEN NULL THEN rt0.c3 ELSE '/r' END))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN (rt0.c0)))>(((rt0.c3)||(rt0.c0))))) ORDER BY ((CAST(rt0.c1 AS REAL)) ISNULL)  NULLS LAST, rt0.c0 ASC  NULLS FIRST, (- (CAST(rt0.c3 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN (rt0.c0)))>(((rt0.c3)||(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c1 AS REAL)) ISNULL)  NULLS LAST, rt0.c0 ASC  NULLS FIRST, (- (CAST(rt0.c3 AS INTEGER))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN (rt0.c0)))>(((rt0.c3)||(rt0.c0))))) ORDER BY ((CAST(rt0.c1 AS REAL)) ISNULL)  NULLS LAST, rt0.c0 ASC  NULLS FIRST, (- (CAST(rt0.c3 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN (rt0.c0)))>(((rt0.c3)||(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c1 AS REAL)) ISNULL)  NULLS LAST, rt0.c0 ASC  NULLS FIRST, (- (CAST(rt0.c3 AS INTEGER))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN (rt0.c0)))>(((rt0.c3)||(rt0.c0))))) ORDER BY ((CAST(rt0.c1 AS REAL)) ISNULL)  NULLS LAST, rt0.c0 ASC  NULLS FIRST, (- (CAST(rt0.c3 AS INTEGER)));
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (vt1.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (((('809551948' IN ()))LIKE((((rt0.c3))!=((NULL))))));
SELECT SUM(count) FROM (SELECT ALL ((((('809551948' IN ()))LIKE((((rt0.c3))<>((NULL)))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (((('809551948' IN ()))LIKE((((rt0.c3))!=((NULL))))));
SELECT SUM(count) FROM (SELECT ALL ((((('809551948' IN ()))LIKE((((rt0.c3))<>((NULL)))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (((('809551948' IN ()))LIKE((((rt0.c3))!=((NULL))))));
SELECT ALL * FROM vt1, rt0 WHERE ((((rt0.c3)<=(rt0.c2)) IN ())) ORDER BY ((((rt0.c3)*(vt1.c0)))<<(((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)<=(rt0.c2)) IN ())) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c3)*(vt1.c0)))<<(((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c3))))  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE ((((rt0.c3)<=(rt0.c2)) IN ())) ORDER BY ((((rt0.c3)*(vt1.c0)))<<(((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)<=(rt0.c2)) IN ())) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c3)*(vt1.c0)))<<(((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c3))))  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE ((((rt0.c3)<=(rt0.c2)) IN ())) ORDER BY ((((rt0.c3)*(vt1.c0)))<<(((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c3))))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((~ (((((rt0.c0)AND(rt0.c1)))OR(-1.403375835E9))))) ORDER BY ((- (rt0.c1)) IN ()) DESC, (((((((((((((+ (rt0.c2)))OR(((rt0.c2)>=(rt0.c1)))))OR(rt0.c2)))OR(TYPEOF(rt0.c0))))OR(((rt0.c1) ISNULL))))AND(((x'') NOT BETWEEN (rt0.c1) AND (rt0.c3)))))AND(((((((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((rt0.c0)AND(rt0.c1)))OR(-1.403375835E9))))) IS TRUE)  as count FROM rt0 ORDER BY ((- (rt0.c1)) IN ()) DESC, (((((((((((((+ (rt0.c2)))OR(((rt0.c2)>=(rt0.c1)))))OR(rt0.c2)))OR(TYPEOF(rt0.c0))))OR(((rt0.c1) ISNULL))))AND(((x'') NOT BETWEEN (rt0.c1) AND (rt0.c3)))))AND(((((((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((~ (((((rt0.c0)AND(rt0.c1)))OR(-1.403375835E9))))) ORDER BY ((- (rt0.c1)) IN ()) DESC, (((((((((((((+ (rt0.c2)))OR(((rt0.c2)>=(rt0.c1)))))OR(rt0.c2)))OR(TYPEOF(rt0.c0))))OR(((rt0.c1) ISNULL))))AND(((x'') NOT BETWEEN (rt0.c1) AND (rt0.c3)))))AND(((((((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((rt0.c0)AND(rt0.c1)))OR(-1.403375835E9))))) IS TRUE)  as count FROM rt0 ORDER BY ((- (rt0.c1)) IN ()) DESC, (((((((((((((+ (rt0.c2)))OR(((rt0.c2)>=(rt0.c1)))))OR(rt0.c2)))OR(TYPEOF(rt0.c0))))OR(((rt0.c1) ISNULL))))AND(((x'') NOT BETWEEN (rt0.c1) AND (rt0.c3)))))AND(((((((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((~ (((((rt0.c0)AND(rt0.c1)))OR(-1.403375835E9))))) ORDER BY ((- (rt0.c1)) IN ()) DESC, (((((((((((((+ (rt0.c2)))OR(((rt0.c2)>=(rt0.c1)))))OR(rt0.c2)))OR(TYPEOF(rt0.c0))))OR(((rt0.c1) ISNULL))))AND(((x'') NOT BETWEEN (rt0.c1) AND (rt0.c3)))))AND(((((((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c1))))  NULLS FIRST;
SELECT * FROM rt0, vt1 WHERE (CASE WHEN NULL THEN ((rt0.c0)IS(rt0.c0)) WHEN rt0.c0 COLLATE RTRIM THEN CASE WHEN rt0.c1 THEN rt0.c2 END WHEN ((rt0.c0)IS(rt0.c0)) THEN (~ (vt1.c0)) WHEN ((vt1.c0)-(rt0.c0)) THEN (((rt0.c2))<((rt0.c1))) WHEN CAST(rt0.c1 AS NUMERIC) THEN (NOT (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN ((rt0.c0)IS(rt0.c0)) WHEN rt0.c0 COLLATE RTRIM THEN CASE WHEN rt0.c1 THEN rt0.c2 END WHEN ((rt0.c0)IS(rt0.c0)) THEN (~ (vt1.c0)) WHEN ((vt1.c0)-(rt0.c0)) THEN (((rt0.c2))<((rt0.c1))) WHEN CAST(rt0.c1 AS NUMERIC) THEN (NOT (rt0.c2)) END) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (CASE WHEN NULL THEN ((rt0.c0)IS(rt0.c0)) WHEN rt0.c0 COLLATE RTRIM THEN CASE WHEN rt0.c1 THEN rt0.c2 END WHEN ((rt0.c0)IS(rt0.c0)) THEN (~ (vt1.c0)) WHEN ((vt1.c0)-(rt0.c0)) THEN (((rt0.c2))<((rt0.c1))) WHEN CAST(rt0.c1 AS NUMERIC) THEN (NOT (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN ((rt0.c0)IS(rt0.c0)) WHEN rt0.c0 COLLATE RTRIM THEN CASE WHEN rt0.c1 THEN rt0.c2 END WHEN ((rt0.c0)IS(rt0.c0)) THEN (~ (vt1.c0)) WHEN ((vt1.c0)-(rt0.c0)) THEN (((rt0.c2))<((rt0.c1))) WHEN CAST(rt0.c1 AS NUMERIC) THEN (NOT (rt0.c2)) END) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (CASE WHEN NULL THEN ((rt0.c0)IS(rt0.c0)) WHEN rt0.c0 COLLATE RTRIM THEN CASE WHEN rt0.c1 THEN rt0.c2 END WHEN ((rt0.c0)IS(rt0.c0)) THEN (~ (vt1.c0)) WHEN ((vt1.c0)-(rt0.c0)) THEN (((rt0.c2))<((rt0.c1))) WHEN CAST(rt0.c1 AS NUMERIC) THEN (NOT (rt0.c2)) END);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(((rt0.c2) IS TRUE) AS TEXT) WHERE ('') ORDER BY ((((x'') NOT BETWEEN (rt0.c3) AND (rt0.c3)))*(((vt1.c0) BETWEEN (rt0.c2) AND (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(((rt0.c2) IS TRUE) AS TEXT) ORDER BY ((((x'') NOT BETWEEN (rt0.c3) AND (rt0.c3)))*(((vt1.c0) BETWEEN (rt0.c2) AND (vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(((rt0.c2) IS TRUE) AS TEXT) WHERE ('') ORDER BY ((((x'') NOT BETWEEN (rt0.c3) AND (rt0.c3)))*(((vt1.c0) BETWEEN (rt0.c2) AND (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(((rt0.c2) IS TRUE) AS TEXT) ORDER BY ((((x'') NOT BETWEEN (rt0.c3) AND (rt0.c3)))*(((vt1.c0) BETWEEN (rt0.c2) AND (vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(((rt0.c2) IS TRUE) AS TEXT) WHERE ('') ORDER BY ((((x'') NOT BETWEEN (rt0.c3) AND (rt0.c3)))*(((vt1.c0) BETWEEN (rt0.c2) AND (vt1.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE CAST(x'a1f5' AS BLOB)  WHEN LIKELY(vt1.c0) THEN (((vt1.c0))==((vt1.c0))) ELSE vt1.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(x'a1f5' AS BLOB)  WHEN LIKELY(vt1.c0) THEN (((vt1.c0))==((vt1.c0))) ELSE vt1.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE CAST(x'a1f5' AS BLOB)  WHEN LIKELY(vt1.c0) THEN (((vt1.c0))==((vt1.c0))) ELSE vt1.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(x'a1f5' AS BLOB)  WHEN LIKELY(vt1.c0) THEN (((vt1.c0))==((vt1.c0))) ELSE vt1.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE CAST(x'a1f5' AS BLOB)  WHEN LIKELY(vt1.c0) THEN (((vt1.c0))==((vt1.c0))) ELSE vt1.c0 COLLATE BINARY END);
SELECT * FROM rt0, vt1 WHERE (((NULL)IS(rt0.c3)) COLLATE NOCASE) ORDER BY CAST(((rt0.c3) NOT NULL) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((((NULL)IS(rt0.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(((rt0.c3) NOT NULL) AS REAL) DESC);
SELECT * FROM rt0, vt1 WHERE (((NULL)IS(rt0.c3)) COLLATE NOCASE) ORDER BY CAST(((rt0.c3) NOT NULL) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((((NULL)IS(rt0.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(((rt0.c3) NOT NULL) AS REAL) DESC);
SELECT * FROM rt0, vt1 WHERE (((NULL)IS(rt0.c3)) COLLATE NOCASE) ORDER BY CAST(((rt0.c3) NOT NULL) AS REAL) DESC;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (rt0.c3);
SELECT ALL COUNT(*) FROM rt0 WHERE (TRIM('\t1ao', rt0.c3 COLLATE NOCASE)) ORDER BY CAST(((rt0.c0) BETWEEN ('-649044773') AND (rt0.c3)) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM('\t1ao', rt0.c3 COLLATE NOCASE)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0) BETWEEN ('-649044773') AND (rt0.c3)) AS REAL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (TRIM('\t1ao', rt0.c3 COLLATE NOCASE)) ORDER BY CAST(((rt0.c0) BETWEEN ('-649044773') AND (rt0.c3)) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM('\t1ao', rt0.c3 COLLATE NOCASE)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0) BETWEEN ('-649044773') AND (rt0.c3)) AS REAL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (TRIM('\t1ao', rt0.c3 COLLATE NOCASE)) ORDER BY CAST(((rt0.c0) BETWEEN ('-649044773') AND (rt0.c3)) AS REAL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (rt0.c3);
SELECT * FROM rt0, vt1 WHERE (CASE WHEN rt0.c0 COLLATE NOCASE THEN CAST(vt1.c0 AS REAL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c0 COLLATE NOCASE THEN CAST(vt1.c0 AS REAL) END) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (CASE WHEN rt0.c0 COLLATE NOCASE THEN CAST(vt1.c0 AS REAL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c0 COLLATE NOCASE THEN CAST(vt1.c0 AS REAL) END) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (CASE WHEN rt0.c0 COLLATE NOCASE THEN CAST(vt1.c0 AS REAL) END);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((~ (rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((~ (rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((~ (rt0.c2))) IS TRUE));
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (json_patch((((rt0.c3, vt1.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c3)) AND ((rt0.c1, rt0.c2, vt1.c0))), rt0.c2 COLLATE NOCASE)) ORDER BY (NULL IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_patch((((rt0.c3, vt1.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c3)) AND ((rt0.c1, rt0.c2, vt1.c0))), rt0.c2 COLLATE NOCASE)) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY (NULL IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (json_patch((((rt0.c3, vt1.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c3)) AND ((rt0.c1, rt0.c2, vt1.c0))), rt0.c2 COLLATE NOCASE)) ORDER BY (NULL IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_patch((((rt0.c3, vt1.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c3)) AND ((rt0.c1, rt0.c2, vt1.c0))), rt0.c2 COLLATE NOCASE)) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY (NULL IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (json_patch((((rt0.c3, vt1.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c3)) AND ((rt0.c1, rt0.c2, vt1.c0))), rt0.c2 COLLATE NOCASE)) ORDER BY (NULL IN ()) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (CASE 0.45898265021486073  WHEN vt1.c0 THEN vt1.c0 END COLLATE NOCASE) ORDER BY ((vt1.c0) NOTNULL), '2105579479' DESC, (((((((((+ (vt1.c0)))OR((NOT (vt1.c0)))))AND((vt1.c0 IN (x'bb96', vt1.c0)))))OR(json_quote(vt1.c0))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.45898265021486073  WHEN vt1.c0 THEN vt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) NOTNULL), '2105579479' DESC, (((((((((+ (vt1.c0)))OR((NOT (vt1.c0)))))AND((vt1.c0 IN (x'bb96', vt1.c0)))))OR(json_quote(vt1.c0))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 END)) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (CASE 0.45898265021486073  WHEN vt1.c0 THEN vt1.c0 END COLLATE NOCASE) ORDER BY ((vt1.c0) NOTNULL), '2105579479' DESC, (((((((((+ (vt1.c0)))OR((NOT (vt1.c0)))))AND((vt1.c0 IN (x'bb96', vt1.c0)))))OR(json_quote(vt1.c0))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.45898265021486073  WHEN vt1.c0 THEN vt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) NOTNULL), '2105579479' DESC, (((((((((+ (vt1.c0)))OR((NOT (vt1.c0)))))AND((vt1.c0 IN (x'bb96', vt1.c0)))))OR(json_quote(vt1.c0))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((NOT (rt0.c0)))<(((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c0)))<(((((rt0.c2)AND(rt0.c1)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((NOT (rt0.c0)))<(((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c0)))<(((((rt0.c2)AND(rt0.c1)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((NOT (rt0.c0)))<(((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((CAST(rt0.c2 AS TEXT) IN ())) ORDER BY '-97919144';
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c2 AS TEXT) IN ())) IS TRUE)  as count FROM vt1, rt0 ORDER BY '-97919144');
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((CAST(rt0.c2 AS TEXT) IN ())) ORDER BY '-97919144';
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c2 AS TEXT) IN ())) IS TRUE)  as count FROM vt1, rt0 ORDER BY '-97919144');
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((CAST(rt0.c2 AS TEXT) IN ())) ORDER BY '-97919144';
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c1)AND(CAST(rt0.c1 AS BLOB))))OR(CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(CAST(rt0.c1 AS BLOB))))OR(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c1)AND(CAST(rt0.c1 AS BLOB))))OR(CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(CAST(rt0.c1 AS BLOB))))OR(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c1)AND(CAST(rt0.c1 AS BLOB))))OR(CAST(vt1.c0 AS BLOB))));
SELECT * FROM rt0, vt1 WHERE ((((NULL) BETWEEN (rt0.c1) AND (rt0.c0)) IN ())) ORDER BY rt0.c2  NULLS LAST, CASE rt0.c2 COLLATE NOCASE  WHEN COALESCE(DISTINCT rt0.c2, rt0.c3) THEN rt0.c1 COLLATE BINARY ELSE (((vt1.c0, rt0.c2, rt0.c3))<=((rt0.c2, rt0.c1, rt0.c2))) END ASC, ((((rt0.c1) NOTNULL))>(NULL));
SELECT SUM(count) FROM (SELECT (((((NULL) BETWEEN (rt0.c1) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c2  NULLS LAST, CASE rt0.c2 COLLATE NOCASE  WHEN COALESCE(DISTINCT rt0.c2, rt0.c3) THEN rt0.c1 COLLATE BINARY ELSE (((vt1.c0, rt0.c2, rt0.c3))<=((rt0.c2, rt0.c1, rt0.c2))) END ASC, ((((rt0.c1) NOTNULL))>(NULL)));
SELECT * FROM rt0, vt1 WHERE ((((NULL) BETWEEN (rt0.c1) AND (rt0.c0)) IN ())) ORDER BY rt0.c2  NULLS LAST, CASE rt0.c2 COLLATE NOCASE  WHEN COALESCE(DISTINCT rt0.c2, rt0.c3) THEN rt0.c1 COLLATE BINARY ELSE (((vt1.c0, rt0.c2, rt0.c3))<=((rt0.c2, rt0.c1, rt0.c2))) END ASC, ((((rt0.c1) NOTNULL))>(NULL));
SELECT SUM(count) FROM (SELECT (((((NULL) BETWEEN (rt0.c1) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c2  NULLS LAST, CASE rt0.c2 COLLATE NOCASE  WHEN COALESCE(DISTINCT rt0.c2, rt0.c3) THEN rt0.c1 COLLATE BINARY ELSE (((vt1.c0, rt0.c2, rt0.c3))<=((rt0.c2, rt0.c1, rt0.c2))) END ASC, ((((rt0.c1) NOTNULL))>(NULL)));
SELECT * FROM rt0, vt1 WHERE ((((NULL) BETWEEN (rt0.c1) AND (rt0.c0)) IN ())) ORDER BY rt0.c2  NULLS LAST, CASE rt0.c2 COLLATE NOCASE  WHEN COALESCE(DISTINCT rt0.c2, rt0.c3) THEN rt0.c1 COLLATE BINARY ELSE (((vt1.c0, rt0.c2, rt0.c3))<=((rt0.c2, rt0.c1, rt0.c2))) END ASC, ((((rt0.c1) NOTNULL))>(NULL));
SELECT * FROM rt0 WHERE (0.6412336107804678);
SELECT SUM(count) FROM (SELECT ((0.6412336107804678) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (0.6412336107804678);
SELECT SUM(count) FROM (SELECT ((0.6412336107804678) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (0.6412336107804678);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c1 IN (((2.02579099E9) NOT BETWEEN (rt0.c2) AND (rt0.c3))))) ORDER BY (NOT (((rt0.c2) BETWEEN (rt0.c3) AND (-2048612290)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN (((2.02579099E9) NOT BETWEEN (rt0.c2) AND (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((rt0.c2) BETWEEN (rt0.c3) AND (-2048612290)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c1 IN (((2.02579099E9) NOT BETWEEN (rt0.c2) AND (rt0.c3))))) ORDER BY (NOT (((rt0.c2) BETWEEN (rt0.c3) AND (-2048612290)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN (((2.02579099E9) NOT BETWEEN (rt0.c2) AND (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((rt0.c2) BETWEEN (rt0.c3) AND (-2048612290)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c1 IN (((2.02579099E9) NOT BETWEEN (rt0.c2) AND (rt0.c3))))) ORDER BY (NOT (((rt0.c2) BETWEEN (rt0.c3) AND (-2048612290)))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE NOCASE);
SELECT * FROM vt1, rt0 WHERE ((('\n?1[')GLOB(rt0.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((('\n?1[')GLOB(rt0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((('\n?1[')GLOB(rt0.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((('\n?1[')GLOB(rt0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((('\n?1[')GLOB(rt0.c3 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c3)<<(x''))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)<<(x''))) NOTNULL)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c3)<<(x''))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)<<(x''))) NOTNULL)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c3)<<(x''))) NOTNULL));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON CASE ((rt0.c3)||(rt0.c0))  WHEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 END THEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)) ELSE rt0.c0 END WHERE (CAST(rt0.c1 AS TEXT) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON CASE ((rt0.c3)||(rt0.c0))  WHEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 END THEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)) ELSE rt0.c0 END);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON CASE ((rt0.c3)||(rt0.c0))  WHEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 END THEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)) ELSE rt0.c0 END WHERE (CAST(rt0.c1 AS TEXT) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON CASE ((rt0.c3)||(rt0.c0))  WHEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 END THEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)) ELSE rt0.c0 END);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON CASE ((rt0.c3)||(rt0.c0))  WHEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 END THEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)) ELSE rt0.c0 END WHERE (CAST(rt0.c1 AS TEXT) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c2, rt0.c0, rt0.c3)) BETWEEN ((CAST('' AS TEXT), ((-1657924164) NOTNULL), ((vt1.c0)>>(vt1.c0)))) AND (((~ (rt0.c2)), (((vt1.c0, vt1.c0, '-42012891'))=((rt0.c3, rt0.c1, rt0.c1))), (((vt1.c0))<=((rt0.c1))))))) ORDER BY ((rt0.c1 COLLATE BINARY) BETWEEN (CASE rt0.c3  WHEN NULL THEN vt1.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN '' END) AND ((rt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c0, rt0.c3)) BETWEEN ((CAST('' AS TEXT), ((-1657924164) NOTNULL), ((vt1.c0)>>(vt1.c0)))) AND (((~ (rt0.c2)), (((vt1.c0, vt1.c0, '-42012891'))=((rt0.c3, rt0.c1, rt0.c1))), (((vt1.c0))<=((rt0.c1))))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((rt0.c1 COLLATE BINARY) BETWEEN (CASE rt0.c3  WHEN NULL THEN vt1.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN '' END) AND ((rt0.c0 IN ()))));
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c2, rt0.c0, rt0.c3)) BETWEEN ((CAST('' AS TEXT), ((-1657924164) NOTNULL), ((vt1.c0)>>(vt1.c0)))) AND (((~ (rt0.c2)), (((vt1.c0, vt1.c0, '-42012891'))=((rt0.c3, rt0.c1, rt0.c1))), (((vt1.c0))<=((rt0.c1))))))) ORDER BY ((rt0.c1 COLLATE BINARY) BETWEEN (CASE rt0.c3  WHEN NULL THEN vt1.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN '' END) AND ((rt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c0, rt0.c3)) BETWEEN ((CAST('' AS TEXT), ((-1657924164) NOTNULL), ((vt1.c0)>>(vt1.c0)))) AND (((~ (rt0.c2)), (((vt1.c0, vt1.c0, '-42012891'))=((rt0.c3, rt0.c1, rt0.c1))), (((vt1.c0))<=((rt0.c1))))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((rt0.c1 COLLATE BINARY) BETWEEN (CASE rt0.c3  WHEN NULL THEN vt1.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN '' END) AND ((rt0.c0 IN ()))));
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c2, rt0.c0, rt0.c3)) BETWEEN ((CAST('' AS TEXT), ((-1657924164) NOTNULL), ((vt1.c0)>>(vt1.c0)))) AND (((~ (rt0.c2)), (((vt1.c0, vt1.c0, '-42012891'))=((rt0.c3, rt0.c1, rt0.c1))), (((vt1.c0))<=((rt0.c1))))))) ORDER BY ((rt0.c1 COLLATE BINARY) BETWEEN (CASE rt0.c3  WHEN NULL THEN vt1.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN '' END) AND ((rt0.c0 IN ())));
SELECT ALL * FROM vt1, rt0 WHERE (CASE WHEN CASE WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c0 END THEN CASE vt1.c0  WHEN rt0.c1 THEN rt0.c1 END ELSE ((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c0 END THEN CASE vt1.c0  WHEN rt0.c1 THEN rt0.c1 END ELSE ((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c1)) END) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (CASE WHEN CASE WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c0 END THEN CASE vt1.c0  WHEN rt0.c1 THEN rt0.c1 END ELSE ((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c0 END THEN CASE vt1.c0  WHEN rt0.c1 THEN rt0.c1 END ELSE ((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c1)) END) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (CASE WHEN CASE WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c0 END THEN CASE vt1.c0  WHEN rt0.c1 THEN rt0.c1 END ELSE ((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c1)) END);
SELECT * FROM rt0, vt1 WHERE (((vt1.c0 COLLATE NOCASE) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((vt1.c0 COLLATE NOCASE) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((vt1.c0 COLLATE NOCASE) ISNULL));
SELECT * FROM vt1 WHERE (CASE ((vt1.c0) NOTNULL)  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (NOT (vt1.c0)) ELSE ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) NOTNULL)  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (NOT (vt1.c0)) ELSE ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE ((vt1.c0) NOTNULL)  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (NOT (vt1.c0)) ELSE ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) NOTNULL)  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (NOT (vt1.c0)) ELSE ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE ((vt1.c0) NOTNULL)  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (NOT (vt1.c0)) ELSE ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c1)IS NOT(rt0.c1))))) ORDER BY TRIM((NOT (rt0.c2)), (rt0.c3 IN ('1696591948'))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c1)IS NOT(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY TRIM((NOT (rt0.c2)), (rt0.c3 IN ('1696591948'))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c1)IS NOT(rt0.c1))))) ORDER BY TRIM((NOT (rt0.c2)), (rt0.c3 IN ('1696591948'))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c1)IS NOT(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY TRIM((NOT (rt0.c2)), (rt0.c3 IN ('1696591948'))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c1)IS NOT(rt0.c1))))) ORDER BY TRIM((NOT (rt0.c2)), (rt0.c3 IN ('1696591948'))) DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)-(((vt1.c0)%(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)-(((vt1.c0)%(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)-(((vt1.c0)%(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)-(((vt1.c0)%(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)-(((vt1.c0)%(vt1.c0)))));
SELECT * FROM rt0 CROSS JOIN vt1 ON ((('}0ಬG,W0')) BETWEEN ((CASE WHEN rt0.c3 THEN '-324077453' ELSE rt0.c0 END)) AND ((((rt0.c3)&(rt0.c0))))) WHERE (((((((((vt1.c0)OR(vt1.c0)))AND(rt0.c0)))AND((NOT (vt1.c0)))))AND(((((rt0.c1)AND(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0)OR(vt1.c0)))AND(rt0.c0)))AND((NOT (vt1.c0)))))AND(((((rt0.c1)AND(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((('}0ಬG,W0')) BETWEEN ((CASE WHEN rt0.c3 THEN '-324077453' ELSE rt0.c0 END)) AND ((((rt0.c3)&(rt0.c0))))));
SELECT * FROM rt0 CROSS JOIN vt1 ON ((('}0ಬG,W0')) BETWEEN ((CASE WHEN rt0.c3 THEN '-324077453' ELSE rt0.c0 END)) AND ((((rt0.c3)&(rt0.c0))))) WHERE (((((((((vt1.c0)OR(vt1.c0)))AND(rt0.c0)))AND((NOT (vt1.c0)))))AND(((((rt0.c1)AND(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0)OR(vt1.c0)))AND(rt0.c0)))AND((NOT (vt1.c0)))))AND(((((rt0.c1)AND(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((('}0ಬG,W0')) BETWEEN ((CASE WHEN rt0.c3 THEN '-324077453' ELSE rt0.c0 END)) AND ((((rt0.c3)&(rt0.c0))))));
SELECT * FROM rt0 CROSS JOIN vt1 ON ((('}0ಬG,W0')) BETWEEN ((CASE WHEN rt0.c3 THEN '-324077453' ELSE rt0.c0 END)) AND ((((rt0.c3)&(rt0.c0))))) WHERE (((((((((vt1.c0)OR(vt1.c0)))AND(rt0.c0)))AND((NOT (vt1.c0)))))AND(((((rt0.c1)AND(vt1.c0)))AND(vt1.c0)))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c3)=(rt0.c3)))%(((rt0.c3)>(rt0.c0))))) ORDER BY ((LIKELIHOOD(DISTINCT rt0.c1, 0.12148777283699685)) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)=(rt0.c3)))%(((rt0.c3)>(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((LIKELIHOOD(DISTINCT rt0.c1, 0.12148777283699685)) IS FALSE));
SELECT ALL * FROM rt0 WHERE (((((rt0.c3)=(rt0.c3)))%(((rt0.c3)>(rt0.c0))))) ORDER BY ((LIKELIHOOD(DISTINCT rt0.c1, 0.12148777283699685)) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)=(rt0.c3)))%(((rt0.c3)>(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((LIKELIHOOD(DISTINCT rt0.c1, 0.12148777283699685)) IS FALSE));
SELECT ALL * FROM rt0 WHERE (((((rt0.c3)=(rt0.c3)))%(((rt0.c3)>(rt0.c0))))) ORDER BY ((LIKELIHOOD(DISTINCT rt0.c1, 0.12148777283699685)) IS FALSE);
SELECT * FROM vt1, rt0 WHERE ((~ ('}KR' COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((~ ('}KR' COLLATE BINARY))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((~ ('}KR' COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((~ ('}KR' COLLATE BINARY))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((~ ('}KR' COLLATE BINARY)));
SELECT * FROM rt0, vt1 WHERE ((((rt0.c3, rt0.c3, rt0.c1)) BETWEEN (((rt0.c3 IN ()), CAST(NULL AS BLOB), 915422385)) AND (((rt0.c2 IN (rt0.c3, rt0.c1)), ((rt0.c0)*(rt0.c3)), (((x'')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))))))) ORDER BY ((rt0.c1)+(rt0.c1)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3, rt0.c3, rt0.c1)) BETWEEN (((rt0.c3 IN ()), CAST(NULL AS BLOB), 915422385)) AND (((rt0.c2 IN (rt0.c3, rt0.c1)), ((rt0.c0)*(rt0.c3)), (((x'')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((rt0.c1)+(rt0.c1)) COLLATE BINARY  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE ((((rt0.c3, rt0.c3, rt0.c1)) BETWEEN (((rt0.c3 IN ()), CAST(NULL AS BLOB), 915422385)) AND (((rt0.c2 IN (rt0.c3, rt0.c1)), ((rt0.c0)*(rt0.c3)), (((x'')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))))))) ORDER BY ((rt0.c1)+(rt0.c1)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3, rt0.c3, rt0.c1)) BETWEEN (((rt0.c3 IN ()), CAST(NULL AS BLOB), 915422385)) AND (((rt0.c2 IN (rt0.c3, rt0.c1)), ((rt0.c0)*(rt0.c3)), (((x'')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((rt0.c1)+(rt0.c1)) COLLATE BINARY  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE ((((rt0.c3, rt0.c3, rt0.c1)) BETWEEN (((rt0.c3 IN ()), CAST(NULL AS BLOB), 915422385)) AND (((rt0.c2 IN (rt0.c3, rt0.c1)), ((rt0.c0)*(rt0.c3)), (((x'')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))))))) ORDER BY ((rt0.c1)+(rt0.c1)) COLLATE BINARY  NULLS FIRST;
SELECT * FROM rt0 WHERE (((rt0.c1)%(rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)%(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c1)%(rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)%(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c1)%(rt0.c1 COLLATE BINARY)));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY TYPEOF(DISTINCT (('睔U') BETWEEN (rt0.c1) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY TYPEOF(DISTINCT (('睔U') BETWEEN (rt0.c1) AND (rt0.c0))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY TYPEOF(DISTINCT (('睔U') BETWEEN (rt0.c1) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY TYPEOF(DISTINCT (('睔U') BETWEEN (rt0.c1) AND (rt0.c0))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY TYPEOF(DISTINCT (('睔U') BETWEEN (rt0.c1) AND (rt0.c0)));
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE (((((((rt0.c0) IS FALSE))OR(((rt0.c3) NOT BETWEEN (rt0.c2) AND (vt1.c0)))))OR(((rt0.c2) BETWEEN (rt0.c3) AND (vt1.c0))))) ORDER BY ((vt1.c0)IS NOT(rt0.c3)) COLLATE RTRIM COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) IS FALSE))OR(((rt0.c3) NOT BETWEEN (rt0.c2) AND (vt1.c0)))))OR(((rt0.c2) BETWEEN (rt0.c3) AND (vt1.c0))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1 ORDER BY ((vt1.c0)IS NOT(rt0.c3)) COLLATE RTRIM COLLATE RTRIM);
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE (((((((rt0.c0) IS FALSE))OR(((rt0.c3) NOT BETWEEN (rt0.c2) AND (vt1.c0)))))OR(((rt0.c2) BETWEEN (rt0.c3) AND (vt1.c0))))) ORDER BY ((vt1.c0)IS NOT(rt0.c3)) COLLATE RTRIM COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) IS FALSE))OR(((rt0.c3) NOT BETWEEN (rt0.c2) AND (vt1.c0)))))OR(((rt0.c2) BETWEEN (rt0.c3) AND (vt1.c0))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1 ORDER BY ((vt1.c0)IS NOT(rt0.c3)) COLLATE RTRIM COLLATE RTRIM);
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE (((((((rt0.c0) IS FALSE))OR(((rt0.c3) NOT BETWEEN (rt0.c2) AND (vt1.c0)))))OR(((rt0.c2) BETWEEN (rt0.c3) AND (vt1.c0))))) ORDER BY ((vt1.c0)IS NOT(rt0.c3)) COLLATE RTRIM COLLATE RTRIM;
SELECT COUNT(*) FROM vt1, rt0 WHERE ((- (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((- (NULL))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((- (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((- (NULL))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((- (NULL)));
SELECT COUNT(*) FROM vt1 WHERE (UPPER('tF'));
SELECT SUM(count) FROM (SELECT ((UPPER('tF')) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (UPPER('tF'));
SELECT SUM(count) FROM (SELECT ((UPPER('tF')) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (UPPER('tF'));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c3);
SELECT ALL * FROM rt0 WHERE (((((LOWER(rt0.c0))AND(((rt0.c3)>(rt0.c3)))))AND(((rt0.c3) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((LOWER(rt0.c0))AND(((rt0.c3)>(rt0.c3)))))AND(((rt0.c3) IS TRUE)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((LOWER(rt0.c0))AND(((rt0.c3)>(rt0.c3)))))AND(((rt0.c3) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((LOWER(rt0.c0))AND(((rt0.c3)>(rt0.c3)))))AND(((rt0.c3) IS TRUE)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((LOWER(rt0.c0))AND(((rt0.c3)>(rt0.c3)))))AND(((rt0.c3) IS TRUE))));
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0)))+(((vt1.c0) IS TRUE)))) ORDER BY x'36d7' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN (vt1.c0)))+(((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1 ORDER BY x'36d7' ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0)))+(((vt1.c0) IS TRUE)))) ORDER BY x'36d7' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN (vt1.c0)))+(((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1 ORDER BY x'36d7' ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0)))+(((vt1.c0) IS TRUE)))) ORDER BY x'36d7' ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (LTRIM(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)) ORDER BY NULLIF(DISTINCT ((rt0.c0)>(rt0.c1)), ((rt0.c1) IS FALSE))  NULLS FIRST, (((((0X79b112c6, rt0.c3, rt0.c2))!=((rt0.c0, rt0.c2, rt0.c0)))) IS FALSE) DESC, ((rt0.c3)<>(((rt0.c1)||(rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LTRIM(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)) IS TRUE)  as count FROM rt0 ORDER BY NULLIF(DISTINCT ((rt0.c0)>(rt0.c1)), ((rt0.c1) IS FALSE))  NULLS FIRST, (((((0x79b112c6, rt0.c3, rt0.c2))<>((rt0.c0, rt0.c2, rt0.c0)))) IS FALSE) DESC, ((rt0.c3)<>(((rt0.c1)||(rt0.c1)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (LTRIM(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)) ORDER BY NULLIF(DISTINCT ((rt0.c0)>(rt0.c1)), ((rt0.c1) IS FALSE))  NULLS FIRST, (((((0X79b112c6, rt0.c3, rt0.c2))!=((rt0.c0, rt0.c2, rt0.c0)))) IS FALSE) DESC, ((rt0.c3)<>(((rt0.c1)||(rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LTRIM(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)) IS TRUE)  as count FROM rt0 ORDER BY NULLIF(DISTINCT ((rt0.c0)>(rt0.c1)), ((rt0.c1) IS FALSE))  NULLS FIRST, (((((0x79b112c6, rt0.c3, rt0.c2))<>((rt0.c0, rt0.c2, rt0.c0)))) IS FALSE) DESC, ((rt0.c3)<>(((rt0.c1)||(rt0.c1)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (LTRIM(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)) ORDER BY NULLIF(DISTINCT ((rt0.c0)>(rt0.c1)), ((rt0.c1) IS FALSE))  NULLS FIRST, (((((0X79b112c6, rt0.c3, rt0.c2))!=((rt0.c0, rt0.c2, rt0.c0)))) IS FALSE) DESC, ((rt0.c3)<>(((rt0.c1)||(rt0.c1)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c1 IN ()))&(vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))&(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c1 IN ()))&(vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))&(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c1 IN ()))&(vt1.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (0.6098514174421023)));
SELECT SUM(count) FROM (SELECT (((~ (0.6098514174421023))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (0.6098514174421023)));
SELECT SUM(count) FROM (SELECT (((~ (0.6098514174421023))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (0.6098514174421023)));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (TIME(((rt0.c0) IS TRUE), ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c1 COLLATE NOCASE)) ORDER BY CAST(rt0.c2 AS NUMERIC), (((((rt0.c1 IN ()))OR(vt1.c0)))OR((rt0.c0 IN (rt0.c0, vt1.c0))))  NULLS FIRST, ((((rt0.c3, '-289173684', rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, '915422385')) AND ((rt0.c0, rt0.c0, rt0.c1))) IN ((((vt1.c0))<((rt0.c1))), ((rt0.c3)|(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TIME(((rt0.c0) IS TRUE), ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c1 COLLATE NOCASE)) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(rt0.c2 AS NUMERIC), (((((rt0.c1 IN ()))OR(vt1.c0)))OR((rt0.c0 IN (rt0.c0, vt1.c0))))  NULLS FIRST, ((((rt0.c3, '-289173684', rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, '915422385')) AND ((rt0.c0, rt0.c0, rt0.c1))) IN ((((vt1.c0))<((rt0.c1))), ((rt0.c3)|(rt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (TIME(((rt0.c0) IS TRUE), ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c1 COLLATE NOCASE)) ORDER BY CAST(rt0.c2 AS NUMERIC), (((((rt0.c1 IN ()))OR(vt1.c0)))OR((rt0.c0 IN (rt0.c0, vt1.c0))))  NULLS FIRST, ((((rt0.c3, '-289173684', rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, '915422385')) AND ((rt0.c0, rt0.c0, rt0.c1))) IN ((((vt1.c0))<((rt0.c1))), ((rt0.c3)|(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TIME(((rt0.c0) IS TRUE), ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c1 COLLATE NOCASE)) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(rt0.c2 AS NUMERIC), (((((rt0.c1 IN ()))OR(vt1.c0)))OR((rt0.c0 IN (rt0.c0, vt1.c0))))  NULLS FIRST, ((((rt0.c3, '-289173684', rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, '915422385')) AND ((rt0.c0, rt0.c0, rt0.c1))) IN ((((vt1.c0))<((rt0.c1))), ((rt0.c3)|(rt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (TIME(((rt0.c0) IS TRUE), ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c1 COLLATE NOCASE)) ORDER BY CAST(rt0.c2 AS NUMERIC), (((((rt0.c1 IN ()))OR(vt1.c0)))OR((rt0.c0 IN (rt0.c0, vt1.c0))))  NULLS FIRST, ((((rt0.c3, '-289173684', rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, '915422385')) AND ((rt0.c0, rt0.c0, rt0.c1))) IN ((((vt1.c0))<((rt0.c1))), ((rt0.c3)|(rt0.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON (~ ((((rt0.c1, rt0.c3, rt0.c2))<((rt0.c1, NULL, x'1c94'))))) WHERE (SQLITE_COMPILEOPTION_GET((rt0.c0 IN (rt0.c3, rt0.c3)))) ORDER BY ((CAST(vt1.c0 AS INTEGER))GLOB(((('')) BETWEEN ((rt0.c0)) AND ((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET((rt0.c0 IN (rt0.c3, rt0.c3)))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON (~ ((((rt0.c1, rt0.c3, rt0.c2))<((rt0.c1, NULL, x'1c94'))))) ORDER BY ((CAST(vt1.c0 AS INTEGER))GLOB(((('')) BETWEEN ((rt0.c0)) AND ((rt0.c1))))));
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON (~ ((((rt0.c1, rt0.c3, rt0.c2))<((rt0.c1, NULL, x'1c94'))))) WHERE (SQLITE_COMPILEOPTION_GET((rt0.c0 IN (rt0.c3, rt0.c3)))) ORDER BY ((CAST(vt1.c0 AS INTEGER))GLOB(((('')) BETWEEN ((rt0.c0)) AND ((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET((rt0.c0 IN (rt0.c3, rt0.c3)))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON (~ ((((rt0.c1, rt0.c3, rt0.c2))<((rt0.c1, NULL, x'1c94'))))) ORDER BY ((CAST(vt1.c0 AS INTEGER))GLOB(((('')) BETWEEN ((rt0.c0)) AND ((rt0.c1))))));
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON (~ ((((rt0.c1, rt0.c3, rt0.c2))<((rt0.c1, NULL, x'1c94'))))) WHERE (SQLITE_COMPILEOPTION_GET((rt0.c0 IN (rt0.c3, rt0.c3)))) ORDER BY ((CAST(vt1.c0 AS INTEGER))GLOB(((('')) BETWEEN ((rt0.c0)) AND ((rt0.c1)))));
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON ((rt0.c3)==('0.3418872062917776')) WHERE ((((((rt0.c2)/('-592747492'))))<=((((rt0.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)/('-592747492'))))<=((((rt0.c0) NOT NULL))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON ((rt0.c3)==('0.3418872062917776')));
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON ((rt0.c3)==('0.3418872062917776')) WHERE ((((((rt0.c2)/('-592747492'))))<=((((rt0.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)/('-592747492'))))<=((((rt0.c0) NOT NULL))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON ((rt0.c3)==('0.3418872062917776')));
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON ((rt0.c3)==('0.3418872062917776')) WHERE ((((((rt0.c2)/('-592747492'))))<=((((rt0.c0) NOT NULL)))));
SELECT * FROM rt0 WHERE (CASE WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c2) IS FALSE) WHEN (+ (rt0.c2)) THEN rt0.c3 COLLATE NOCASE WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END THEN ((rt0.c3)<>(rt0.c3)) ELSE (((rt0.c3)) BETWEEN ((x'')) AND ((NULL))) END) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c2) IS FALSE) WHEN (+ (rt0.c2)) THEN rt0.c3 COLLATE NOCASE WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END THEN ((rt0.c3)<>(rt0.c3)) ELSE (((rt0.c3)) BETWEEN ((x'')) AND ((NULL))) END) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 ASC);
SELECT * FROM rt0 WHERE (CASE WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c2) IS FALSE) WHEN (+ (rt0.c2)) THEN rt0.c3 COLLATE NOCASE WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END THEN ((rt0.c3)<>(rt0.c3)) ELSE (((rt0.c3)) BETWEEN ((x'')) AND ((NULL))) END) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c2) IS FALSE) WHEN (+ (rt0.c2)) THEN rt0.c3 COLLATE NOCASE WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END THEN ((rt0.c3)<>(rt0.c3)) ELSE (((rt0.c3)) BETWEEN ((x'')) AND ((NULL))) END) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 ASC);
SELECT * FROM rt0 WHERE (CASE WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c2) IS FALSE) WHEN (+ (rt0.c2)) THEN rt0.c3 COLLATE NOCASE WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END THEN ((rt0.c3)<>(rt0.c3)) ELSE (((rt0.c3)) BETWEEN ((x'')) AND ((NULL))) END) ORDER BY rt0.c2 ASC;
SELECT COUNT(*) FROM vt1 WHERE (json_valid((NOT (vt1.c0)))) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_valid((NOT (vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (json_valid((NOT (vt1.c0)))) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_valid((NOT (vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (json_valid((NOT (vt1.c0)))) ORDER BY vt1.c0  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt1 WHERE ('X{') ORDER BY NULL, (((((+ (vt1.c0)))AND(((rt0.c2)&(rt0.c3)))))AND(rt0.c1 COLLATE RTRIM)) ASC  NULLS LAST, (((rt0.c2 IN ())) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (rt0.c2 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT (('X{') IS TRUE)  as count FROM rt0, vt1 ORDER BY NULL, (((((+ (vt1.c0)))AND(((rt0.c2)&(rt0.c3)))))AND(rt0.c1 COLLATE RTRIM)) ASC  NULLS LAST, (((rt0.c2 IN ())) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (rt0.c2 COLLATE BINARY)) DESC);
SELECT COUNT(*) FROM rt0, vt1 WHERE ('X{') ORDER BY NULL, (((((+ (vt1.c0)))AND(((rt0.c2)&(rt0.c3)))))AND(rt0.c1 COLLATE RTRIM)) ASC  NULLS LAST, (((rt0.c2 IN ())) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (rt0.c2 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT (('X{') IS TRUE)  as count FROM rt0, vt1 ORDER BY NULL, (((((+ (vt1.c0)))AND(((rt0.c2)&(rt0.c3)))))AND(rt0.c1 COLLATE RTRIM)) ASC  NULLS LAST, (((rt0.c2 IN ())) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (rt0.c2 COLLATE BINARY)) DESC);
SELECT COUNT(*) FROM rt0, vt1 WHERE ('X{') ORDER BY NULL, (((((+ (vt1.c0)))AND(((rt0.c2)&(rt0.c3)))))AND(rt0.c1 COLLATE RTRIM)) ASC  NULLS LAST, (((rt0.c2 IN ())) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (rt0.c2 COLLATE BINARY)) DESC;
SELECT * FROM vt1, rt0 WHERE (((DATE(rt0.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c3))/(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((DATE(rt0.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c3))/(rt0.c1))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((DATE(rt0.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c3))/(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((DATE(rt0.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c3))/(rt0.c1))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((DATE(rt0.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c3))/(rt0.c1)));
SELECT COUNT(*) FROM rt0 WHERE (LOWER(DISTINCT ((rt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((rt0.c0) ISNULL))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (LOWER(DISTINCT ((rt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((rt0.c0) ISNULL))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (LOWER(DISTINCT ((rt0.c0) ISNULL)));
SELECT ALL * FROM vt1, rt0 NOT INDEXED WHERE (CASE WHEN ((NULL)LIKE(rt0.c1)) THEN TRIM(DISTINCT rt0.c1) WHEN ((((rt0.c3)AND(rt0.c1)))OR(rt0.c0)) THEN CASE '-1304771634'  WHEN rt0.c1 THEN 0.4905692619140942 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 END WHEN TRIM(DISTINCT vt1.c0, rt0.c1) THEN (- (rt0.c2)) ELSE vt1.c0 END) ORDER BY rt0.c3;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((NULL)LIKE(rt0.c1)) THEN TRIM(DISTINCT rt0.c1) WHEN ((((rt0.c3)AND(rt0.c1)))OR(rt0.c0)) THEN CASE '-1304771634'  WHEN rt0.c1 THEN 0.4905692619140942 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 END WHEN TRIM(DISTINCT vt1.c0, rt0.c1) THEN (- (rt0.c2)) ELSE vt1.c0 END) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c3);
SELECT ALL * FROM vt1, rt0 NOT INDEXED WHERE (CASE WHEN ((NULL)LIKE(rt0.c1)) THEN TRIM(DISTINCT rt0.c1) WHEN ((((rt0.c3)AND(rt0.c1)))OR(rt0.c0)) THEN CASE '-1304771634'  WHEN rt0.c1 THEN 0.4905692619140942 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 END WHEN TRIM(DISTINCT vt1.c0, rt0.c1) THEN (- (rt0.c2)) ELSE vt1.c0 END) ORDER BY rt0.c3;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((NULL)LIKE(rt0.c1)) THEN TRIM(DISTINCT rt0.c1) WHEN ((((rt0.c3)AND(rt0.c1)))OR(rt0.c0)) THEN CASE '-1304771634'  WHEN rt0.c1 THEN 0.4905692619140942 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 END WHEN TRIM(DISTINCT vt1.c0, rt0.c1) THEN (- (rt0.c2)) ELSE vt1.c0 END) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c3);
SELECT ALL * FROM vt1, rt0 NOT INDEXED WHERE (CASE WHEN ((NULL)LIKE(rt0.c1)) THEN TRIM(DISTINCT rt0.c1) WHEN ((((rt0.c3)AND(rt0.c1)))OR(rt0.c0)) THEN CASE '-1304771634'  WHEN rt0.c1 THEN 0.4905692619140942 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 END WHEN TRIM(DISTINCT vt1.c0, rt0.c1) THEN (- (rt0.c2)) ELSE vt1.c0 END) ORDER BY rt0.c3;
SELECT ALL * FROM rt0 WHERE ((- (((rt0.c1)<<(rt0.c3))))) ORDER BY CAST(((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)) AS TEXT), IFNULL(DISTINCT ((rt0.c0)IS NOT(rt0.c3)), (']LlV\n7G' IN (rt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c1)<<(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)) AS TEXT), IFNULL(DISTINCT ((rt0.c0)IS NOT(rt0.c3)), (']LlV\n7G' IN (rt0.c1)))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((- (((rt0.c1)<<(rt0.c3))))) ORDER BY CAST(((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)) AS TEXT), IFNULL(DISTINCT ((rt0.c0)IS NOT(rt0.c3)), (']LlV\n7G' IN (rt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c1)<<(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)) AS TEXT), IFNULL(DISTINCT ((rt0.c0)IS NOT(rt0.c3)), (']LlV\n7G' IN (rt0.c1)))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((- (((rt0.c1)<<(rt0.c3))))) ORDER BY CAST(((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)) AS TEXT), IFNULL(DISTINCT ((rt0.c0)IS NOT(rt0.c3)), (']LlV\n7G' IN (rt0.c1)))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (((NULL) ISNULL));
SELECT SUM(count) FROM (SELECT ((((NULL) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((NULL) ISNULL));
SELECT SUM(count) FROM (SELECT ((((NULL) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((NULL) ISNULL));
SELECT * FROM rt0, vt1 WHERE ('░uqyas-_o');
SELECT SUM(count) FROM (SELECT ALL (('░uqyas-_o') IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ('░uqyas-_o');
SELECT SUM(count) FROM (SELECT ALL (('░uqyas-_o') IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ('░uqyas-_o');
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (TRIM(DISTINCT -1279276384, rt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT -1279276384, rt0.c0)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (TRIM(DISTINCT -1279276384, rt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT -1279276384, rt0.c0)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (TRIM(DISTINCT -1279276384, rt0.c0));
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST((('-524909227') NOT NULL) AS BLOB)) ORDER BY DATETIME(CAST(rt0.c3 AS REAL), load_extension(rt0.c0, rt0.c0), (((vt1.c0, rt0.c0, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, vt1.c0))), ((vt1.c0) IS TRUE), CAST(rt0.c3 AS TEXT)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((('-524909227') NOT NULL) AS BLOB)) IS TRUE)  as count FROM rt0, vt1 ORDER BY DATETIME(CAST(rt0.c3 AS REAL), load_extension(rt0.c0, rt0.c0), (((vt1.c0, rt0.c0, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, vt1.c0))), ((vt1.c0) IS TRUE), CAST(rt0.c3 AS TEXT)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST((('-524909227') NOT NULL) AS BLOB)) ORDER BY DATETIME(CAST(rt0.c3 AS REAL), load_extension(rt0.c0, rt0.c0), (((vt1.c0, rt0.c0, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, vt1.c0))), ((vt1.c0) IS TRUE), CAST(rt0.c3 AS TEXT)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((('-524909227') NOT NULL) AS BLOB)) IS TRUE)  as count FROM rt0, vt1 ORDER BY DATETIME(CAST(rt0.c3 AS REAL), load_extension(rt0.c0, rt0.c0), (((vt1.c0, rt0.c0, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, vt1.c0))), ((vt1.c0) IS TRUE), CAST(rt0.c3 AS TEXT)) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CAST(CAST(vt1.c0 AS BLOB) AS NUMERIC)) ORDER BY ((vt1.c0 COLLATE NOCASE) BETWEEN ((~ (vt1.c0))) AND (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt1.c0 AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE NOCASE) BETWEEN ((~ (vt1.c0))) AND (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (CAST(CAST(vt1.c0 AS BLOB) AS NUMERIC)) ORDER BY ((vt1.c0 COLLATE NOCASE) BETWEEN ((~ (vt1.c0))) AND (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt1.c0 AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE NOCASE) BETWEEN ((~ (vt1.c0))) AND (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (CAST(CAST(vt1.c0 AS BLOB) AS NUMERIC)) ORDER BY ((vt1.c0 COLLATE NOCASE) BETWEEN ((~ (vt1.c0))) AND (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON ((((((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))OR((rt0.c1 IN ()))))AND((NOT (rt0.c2)))))AND((- (rt0.c1)))))OR(vt1.c0)) WHERE ((((vt1.c0 IN (rt0.c3))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN (rt0.c3))) NOT NULL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON ((((((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))OR((rt0.c1 IN ()))))AND((NOT (rt0.c2)))))AND((- (rt0.c1)))))OR(vt1.c0)));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON ((((((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))OR((rt0.c1 IN ()))))AND((NOT (rt0.c2)))))AND((- (rt0.c1)))))OR(vt1.c0)) WHERE ((((vt1.c0 IN (rt0.c3))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN (rt0.c3))) NOT NULL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON ((((((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))OR((rt0.c1 IN ()))))AND((NOT (rt0.c2)))))AND((- (rt0.c1)))))OR(vt1.c0)));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON ((((((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))OR((rt0.c1 IN ()))))AND((NOT (rt0.c2)))))AND((- (rt0.c1)))))OR(vt1.c0)) WHERE ((((vt1.c0 IN (rt0.c3))) NOT NULL));
SELECT * FROM rt0, vt1 WHERE (x'cb45');
SELECT SUM(count) FROM (SELECT ALL ((x'cb45') IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (x'cb45');
SELECT SUM(count) FROM (SELECT ALL ((x'cb45') IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (x'cb45');
SELECT ALL * FROM vt1 WHERE (CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN UPPER(vt1.c0) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN UPPER(vt1.c0) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT ALL * FROM vt1 WHERE (CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN UPPER(vt1.c0) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN UPPER(vt1.c0) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT ALL * FROM vt1 WHERE (CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN UPPER(vt1.c0) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY vt1.c0;
SELECT * FROM rt0 WHERE ((- ((((rt0.c0))>=((NULL)))))) ORDER BY CASE WHEN (((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) THEN CAST(rt0.c3 AS REAL) WHEN ((rt0.c1) BETWEEN (x'') AND (rt0.c0)) THEN ((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)) WHEN ((rt0.c3) IS FALSE) THEN ((rt0.c1)==(rt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((((rt0.c0))>=((NULL)))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) THEN CAST(rt0.c3 AS REAL) WHEN ((rt0.c1) BETWEEN (x'') AND (rt0.c0)) THEN ((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)) WHEN ((rt0.c3) IS FALSE) THEN ((rt0.c1)==(rt0.c0)) END  NULLS LAST);
SELECT * FROM rt0 WHERE ((- ((((rt0.c0))>=((NULL)))))) ORDER BY CASE WHEN (((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) THEN CAST(rt0.c3 AS REAL) WHEN ((rt0.c1) BETWEEN (x'') AND (rt0.c0)) THEN ((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)) WHEN ((rt0.c3) IS FALSE) THEN ((rt0.c1)==(rt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((((rt0.c0))>=((NULL)))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) THEN CAST(rt0.c3 AS REAL) WHEN ((rt0.c1) BETWEEN (x'') AND (rt0.c0)) THEN ((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)) WHEN ((rt0.c3) IS FALSE) THEN ((rt0.c1)==(rt0.c0)) END  NULLS LAST);
SELECT * FROM rt0 WHERE ((- ((((rt0.c0))>=((NULL)))))) ORDER BY CASE WHEN (((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) THEN CAST(rt0.c3 AS REAL) WHEN ((rt0.c1) BETWEEN (x'') AND (rt0.c0)) THEN ((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)) WHEN ((rt0.c3) IS FALSE) THEN ((rt0.c1)==(rt0.c0)) END  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (0.9344308523031348))) ORDER BY (- (((vt1.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT (((- (0.9344308523031348))) IS TRUE)  as count FROM vt1 ORDER BY (- (((vt1.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (0.9344308523031348))) ORDER BY (- (((vt1.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT (((- (0.9344308523031348))) IS TRUE)  as count FROM vt1 ORDER BY (- (((vt1.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (0.9344308523031348))) ORDER BY (- (((vt1.c0) NOTNULL)));
SELECT * FROM rt0 WHERE ('-1977145450') ORDER BY (((rt0.c3 IN ()))<>(((rt0.c2)OR(rt0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-1977145450') IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3 IN ()))<>(((rt0.c2)OR(rt0.c3))))  NULLS LAST);
SELECT * FROM rt0 WHERE ('-1977145450') ORDER BY (((rt0.c3 IN ()))<>(((rt0.c2)OR(rt0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-1977145450') IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3 IN ()))<>(((rt0.c2)OR(rt0.c3))))  NULLS LAST);
SELECT * FROM rt0 WHERE ('-1977145450') ORDER BY (((rt0.c3 IN ()))<>(((rt0.c2)OR(rt0.c3))))  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ((- ((vt1.c0 IN ())))) ORDER BY (((TYPEOF(vt1.c0)))>=((((vt1.c0) IS TRUE))))  NULLS LAST, (((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.20603753636414857)) IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY (((TYPEOF(vt1.c0)))>=((((vt1.c0) IS TRUE))))  NULLS LAST, (((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.20603753636414857)) IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC);
SELECT COUNT(*) FROM vt1 WHERE ((- ((vt1.c0 IN ())))) ORDER BY (((TYPEOF(vt1.c0)))>=((((vt1.c0) IS TRUE))))  NULLS LAST, (((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.20603753636414857)) IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY (((TYPEOF(vt1.c0)))>=((((vt1.c0) IS TRUE))))  NULLS LAST, (((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.20603753636414857)) IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC);
SELECT COUNT(*) FROM vt1 WHERE ((- ((vt1.c0 IN ())))) ORDER BY (((TYPEOF(vt1.c0)))>=((((vt1.c0) IS TRUE))))  NULLS LAST, (((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.20603753636414857)) IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c0 IN ())) BETWEEN (vt1.c0 COLLATE RTRIM) AND ((+ (rt0.c2))))) ORDER BY ((CASE WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c3 END)/((((rt0.c2))==((rt0.c3))))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) BETWEEN (vt1.c0 COLLATE RTRIM) AND ((+ (rt0.c2))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((CASE WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c3 END)/((((rt0.c2))=((rt0.c3))))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c0 IN ())) BETWEEN (vt1.c0 COLLATE RTRIM) AND ((+ (rt0.c2))))) ORDER BY ((CASE WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c3 END)/((((rt0.c2))==((rt0.c3))))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) BETWEEN (vt1.c0 COLLATE RTRIM) AND ((+ (rt0.c2))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((CASE WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c3 END)/((((rt0.c2))=((rt0.c3))))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c0 IN ())) BETWEEN (vt1.c0 COLLATE RTRIM) AND ((+ (rt0.c2))))) ORDER BY ((CASE WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c3 END)/((((rt0.c2))==((rt0.c3))))) ASC;
SELECT * FROM vt1, rt0 WHERE (CASE WHEN '' THEN ((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(x'')))OR(NULL)))OR(rt0.c3)))OR(rt0.c1)) ELSE CASE vt1.c0  WHEN rt0.c2 THEN rt0.c1 ELSE '\n' END END) ORDER BY (~ (((((((((vt1.c0)AND(rt0.c0)))OR(rt0.c2)))AND(x'')))AND(rt0.c3)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN '' THEN ((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(x'')))OR(NULL)))OR(rt0.c3)))OR(rt0.c1)) ELSE CASE vt1.c0  WHEN rt0.c2 THEN rt0.c1 ELSE '\n' END END) IS TRUE)  as count FROM vt1, rt0 ORDER BY (~ (((((((((vt1.c0)AND(rt0.c0)))OR(rt0.c2)))AND(x'')))AND(rt0.c3)))) ASC  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE (CASE WHEN '' THEN ((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(x'')))OR(NULL)))OR(rt0.c3)))OR(rt0.c1)) ELSE CASE vt1.c0  WHEN rt0.c2 THEN rt0.c1 ELSE '\n' END END) ORDER BY (~ (((((((((vt1.c0)AND(rt0.c0)))OR(rt0.c2)))AND(x'')))AND(rt0.c3)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN '' THEN ((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(x'')))OR(NULL)))OR(rt0.c3)))OR(rt0.c1)) ELSE CASE vt1.c0  WHEN rt0.c2 THEN rt0.c1 ELSE '\n' END END) IS TRUE)  as count FROM vt1, rt0 ORDER BY (~ (((((((((vt1.c0)AND(rt0.c0)))OR(rt0.c2)))AND(x'')))AND(rt0.c3)))) ASC  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE (CASE WHEN '' THEN ((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(x'')))OR(NULL)))OR(rt0.c3)))OR(rt0.c1)) ELSE CASE vt1.c0  WHEN rt0.c2 THEN rt0.c1 ELSE '\n' END END) ORDER BY (~ (((((((((vt1.c0)AND(rt0.c0)))OR(rt0.c2)))AND(x'')))AND(rt0.c3)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON ((vt1.c0)>=(rt0.c3)) COLLATE NOCASE WHERE (CAST(CASE WHEN rt0.c1 THEN rt0.c1 ELSE vt1.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c1 THEN rt0.c1 ELSE vt1.c0 END AS REAL)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((vt1.c0)>=(rt0.c3)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON ((vt1.c0)>=(rt0.c3)) COLLATE NOCASE WHERE (CAST(CASE WHEN rt0.c1 THEN rt0.c1 ELSE vt1.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c1 THEN rt0.c1 ELSE vt1.c0 END AS REAL)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((vt1.c0)>=(rt0.c3)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON ((vt1.c0)>=(rt0.c3)) COLLATE NOCASE WHERE (CAST(CASE WHEN rt0.c1 THEN rt0.c1 ELSE vt1.c0 END AS REAL));
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)||(vt1.c0)) AS REAL)) ORDER BY UNLIKELY(DISTINCT ((vt1.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)||(vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY UNLIKELY(DISTINCT ((vt1.c0) IS FALSE)));
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)||(vt1.c0)) AS REAL)) ORDER BY UNLIKELY(DISTINCT ((vt1.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)||(vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY UNLIKELY(DISTINCT ((vt1.c0) IS FALSE)));
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)||(vt1.c0)) AS REAL)) ORDER BY UNLIKELY(DISTINCT ((vt1.c0) IS FALSE));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((((((((0.5611170328324306) NOTNULL))AND(IFNULL(rt0.c1, vt1.c0))))OR(((rt0.c3) NOT NULL))))AND((rt0.c3 IN (rt0.c2, rt0.c3)))))OR(((vt1.c0) NOTNULL)))) ORDER BY ((x'c2cb') NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((0.5611170328324306) NOTNULL))AND(IFNULL(rt0.c1, vt1.c0))))OR(((rt0.c3) NOT NULL))))AND((rt0.c3 IN (rt0.c2, rt0.c3)))))OR(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((x'c2cb') NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((((((((0.5611170328324306) NOTNULL))AND(IFNULL(rt0.c1, vt1.c0))))OR(((rt0.c3) NOT NULL))))AND((rt0.c3 IN (rt0.c2, rt0.c3)))))OR(((vt1.c0) NOTNULL)))) ORDER BY ((x'c2cb') NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((0.5611170328324306) NOTNULL))AND(IFNULL(rt0.c1, vt1.c0))))OR(((rt0.c3) NOT NULL))))AND((rt0.c3 IN (rt0.c2, rt0.c3)))))OR(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((x'c2cb') NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((((((((0.5611170328324306) NOTNULL))AND(IFNULL(rt0.c1, vt1.c0))))OR(((rt0.c3) NOT NULL))))AND((rt0.c3 IN (rt0.c2, rt0.c3)))))OR(((vt1.c0) NOTNULL)))) ORDER BY ((x'c2cb') NOT NULL)  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ('|C') ORDER BY (((rt0.c3)+(rt0.c2)) IN (((rt0.c0) ISNULL), ((rt0.c3)>(0.19588155714931044)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('|C') IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3)+(rt0.c2)) IN (((rt0.c0) ISNULL), ((rt0.c3)>(0.19588155714931044)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ('|C') ORDER BY (((rt0.c3)+(rt0.c2)) IN (((rt0.c0) ISNULL), ((rt0.c3)>(0.19588155714931044)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('|C') IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3)+(rt0.c2)) IN (((rt0.c0) ISNULL), ((rt0.c3)>(0.19588155714931044)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ('|C') ORDER BY (((rt0.c3)+(rt0.c2)) IN (((rt0.c0) ISNULL), ((rt0.c3)>(0.19588155714931044)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((((rt0.c3)/(rt0.c1)))OR((+ (rt0.c1)))))AND((('Hi||o') BETWEEN ('JBv迷') AND (rt0.c1)))))AND(CASE WHEN rt0.c3 THEN rt0.c1 END)))AND(UPPER(DISTINCT rt0.c3))))OR(((rt0.c0)LIKE(rt0.c1)))))OR(((2.51202335E8) NOT BETWEEN (rt0.c1) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c3)/(rt0.c1)))OR((+ (rt0.c1)))))AND((('Hi||o') BETWEEN ('JBv迷') AND (rt0.c1)))))AND(CASE WHEN rt0.c3 THEN rt0.c1 END)))AND(UPPER(DISTINCT rt0.c3))))OR(((rt0.c0)LIKE(rt0.c1)))))OR(((2.51202335E8) NOT BETWEEN (rt0.c1) AND (rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((((rt0.c3)/(rt0.c1)))OR((+ (rt0.c1)))))AND((('Hi||o') BETWEEN ('JBv迷') AND (rt0.c1)))))AND(CASE WHEN rt0.c3 THEN rt0.c1 END)))AND(UPPER(DISTINCT rt0.c3))))OR(((rt0.c0)LIKE(rt0.c1)))))OR(((2.51202335E8) NOT BETWEEN (rt0.c1) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c3)/(rt0.c1)))OR((+ (rt0.c1)))))AND((('Hi||o') BETWEEN ('JBv迷') AND (rt0.c1)))))AND(CASE WHEN rt0.c3 THEN rt0.c1 END)))AND(UPPER(DISTINCT rt0.c3))))OR(((rt0.c0)LIKE(rt0.c1)))))OR(((2.51202335E8) NOT BETWEEN (rt0.c1) AND (rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((((rt0.c3)/(rt0.c1)))OR((+ (rt0.c1)))))AND((('Hi||o') BETWEEN ('JBv迷') AND (rt0.c1)))))AND(CASE WHEN rt0.c3 THEN rt0.c1 END)))AND(UPPER(DISTINCT rt0.c3))))OR(((rt0.c0)LIKE(rt0.c1)))))OR(((2.51202335E8) NOT BETWEEN (rt0.c1) AND (rt0.c3)))));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON (((NULL)) NOT BETWEEN (((rt0.c1 IN (vt1.c0, rt0.c0)))) AND (((rt0.c1 IN (rt0.c3))))) WHERE ('-175347176');
SELECT SUM(count) FROM (SELECT ALL (('-175347176') IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON (((NULL)) NOT BETWEEN (((rt0.c1 IN (vt1.c0, rt0.c0)))) AND (((rt0.c1 IN (rt0.c3))))));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON (((NULL)) NOT BETWEEN (((rt0.c1 IN (vt1.c0, rt0.c0)))) AND (((rt0.c1 IN (rt0.c3))))) WHERE ('-175347176');
SELECT SUM(count) FROM (SELECT ALL (('-175347176') IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON (((NULL)) NOT BETWEEN (((rt0.c1 IN (vt1.c0, rt0.c0)))) AND (((rt0.c1 IN (rt0.c3))))));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON (((NULL)) NOT BETWEEN (((rt0.c1 IN (vt1.c0, rt0.c0)))) AND (((rt0.c1 IN (rt0.c3))))) WHERE ('-175347176');
SELECT * FROM rt0, vt1 WHERE ('d }');
SELECT SUM(count) FROM (SELECT (('d }') IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ('d }');
SELECT SUM(count) FROM (SELECT (('d }') IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ('d }');
SELECT COUNT(*) FROM vt1 WHERE (((((((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(((vt1.c0)OR(0.4376665247349757)))))AND((+ (vt1.c0)))))AND(x'')))OR(vt1.c0 COLLATE RTRIM))) ORDER BY SUBSTR(((((((((vt1.c0)OR(x'')))OR(x'')))AND(vt1.c0)))OR(vt1.c0)), (~ (vt1.c0)))  NULLS FIRST, ((vt1.c0)GLOB(((1.192489133E9) NOTNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(((vt1.c0)OR(0.4376665247349757)))))AND((+ (vt1.c0)))))AND(x'')))OR(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 ORDER BY SUBSTR(((((((((vt1.c0)OR(x'')))OR(x'')))AND(vt1.c0)))OR(vt1.c0)), (~ (vt1.c0)))  NULLS FIRST, ((vt1.c0)GLOB(((1.192489133E9) NOTNULL))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(((vt1.c0)OR(0.4376665247349757)))))AND((+ (vt1.c0)))))AND(x'')))OR(vt1.c0 COLLATE RTRIM))) ORDER BY SUBSTR(((((((((vt1.c0)OR(x'')))OR(x'')))AND(vt1.c0)))OR(vt1.c0)), (~ (vt1.c0)))  NULLS FIRST, ((vt1.c0)GLOB(((1.192489133E9) NOTNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(((vt1.c0)OR(0.4376665247349757)))))AND((+ (vt1.c0)))))AND(x'')))OR(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 ORDER BY SUBSTR(((((((((vt1.c0)OR(x'')))OR(x'')))AND(vt1.c0)))OR(vt1.c0)), (~ (vt1.c0)))  NULLS FIRST, ((vt1.c0)GLOB(((1.192489133E9) NOTNULL))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(((vt1.c0)OR(0.4376665247349757)))))AND((+ (vt1.c0)))))AND(x'')))OR(vt1.c0 COLLATE RTRIM))) ORDER BY SUBSTR(((((((((vt1.c0)OR(x'')))OR(x'')))AND(vt1.c0)))OR(vt1.c0)), (~ (vt1.c0)))  NULLS FIRST, ((vt1.c0)GLOB(((1.192489133E9) NOTNULL))) DESC  NULLS FIRST;
SELECT ALL * FROM vt1, rt0 WHERE ((LTRIM(rt0.c0, rt0.c2) IN ())) ORDER BY (+ (rt0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((LTRIM(rt0.c0, rt0.c2) IN ())) IS TRUE)  as count FROM vt1, rt0 ORDER BY (+ (rt0.c1)) ASC);
SELECT ALL * FROM vt1, rt0 WHERE ((LTRIM(rt0.c0, rt0.c2) IN ())) ORDER BY (+ (rt0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((LTRIM(rt0.c0, rt0.c2) IN ())) IS TRUE)  as count FROM vt1, rt0 ORDER BY (+ (rt0.c1)) ASC);
SELECT ALL * FROM vt1, rt0 WHERE ((LTRIM(rt0.c0, rt0.c2) IN ())) ORDER BY (+ (rt0.c1)) ASC;
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c1)))OR(x'b18dac3166b6')))OR(rt0.c2))) BETWEEN (CAST(rt0.c3 AS NUMERIC)) AND (0xffffffff82d6eebf)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c1)))OR(x'b18dac3166b6')))OR(rt0.c2))) BETWEEN (CAST(rt0.c3 AS NUMERIC)) AND (0xffffffff82d6eebf))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c1)))OR(x'b18dac3166b6')))OR(rt0.c2))) BETWEEN (CAST(rt0.c3 AS NUMERIC)) AND (0xffffffff82d6eebf)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c1)))OR(x'b18dac3166b6')))OR(rt0.c2))) BETWEEN (CAST(rt0.c3 AS NUMERIC)) AND (0xffffffff82d6eebf))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c1)))OR(x'b18dac3166b6')))OR(rt0.c2))) BETWEEN (CAST(rt0.c3 AS NUMERIC)) AND (0xffffffff82d6eebf)));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((((x'' IN ()))AND(((vt1.c0)|(rt0.c3)))))OR(rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((((x'' IN ()))AND(((vt1.c0)|(rt0.c3)))))OR(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((((x'' IN ()))AND(((vt1.c0)|(rt0.c3)))))OR(rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((((x'' IN ()))AND(((vt1.c0)|(rt0.c3)))))OR(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((((x'' IN ()))AND(((vt1.c0)|(rt0.c3)))))OR(rt0.c2 COLLATE RTRIM)));
SELECT ALL * FROM vt1, rt0 WHERE (CAST((rt0.c2 IN (rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c2 IN (rt0.c2)) AS TEXT)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (CAST((rt0.c2 IN (rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c2 IN (rt0.c2)) AS TEXT)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (CAST((rt0.c2 IN (rt0.c2)) AS TEXT));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2, rt0.c1, rt0.c2, rt0.c3, rt0.c3)) BETWEEN ((((rt0.c2)>>(rt0.c1)), rt0.c1 COLLATE RTRIM, ((rt0.c2)|(rt0.c2)), ((0.053725146641088295) NOTNULL), ((((rt0.c2)AND(rt0.c3)))OR(rt0.c2)))) AND ((TRIM(rt0.c3, rt0.c2), ((rt0.c2)>>('at92rM_J')), 'UPX,b' COLLATE RTRIM, (((rt0.c1))<((rt0.c2))), (NOT (0.4376665247349757))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c1, rt0.c2, rt0.c3, rt0.c3)) BETWEEN ((((rt0.c2)>>(rt0.c1)), rt0.c1 COLLATE RTRIM, ((rt0.c2)|(rt0.c2)), ((0.053725146641088295) NOTNULL), ((((rt0.c2)AND(rt0.c3)))OR(rt0.c2)))) AND ((TRIM(rt0.c3, rt0.c2), ((rt0.c2)>>('at92rM_J')), 'UPX,b' COLLATE RTRIM, (((rt0.c1))<((rt0.c2))), (NOT (0.4376665247349757)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2, rt0.c1, rt0.c2, rt0.c3, rt0.c3)) BETWEEN ((((rt0.c2)>>(rt0.c1)), rt0.c1 COLLATE RTRIM, ((rt0.c2)|(rt0.c2)), ((0.053725146641088295) NOTNULL), ((((rt0.c2)AND(rt0.c3)))OR(rt0.c2)))) AND ((TRIM(rt0.c3, rt0.c2), ((rt0.c2)>>('at92rM_J')), 'UPX,b' COLLATE RTRIM, (((rt0.c1))<((rt0.c2))), (NOT (0.4376665247349757))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c1, rt0.c2, rt0.c3, rt0.c3)) BETWEEN ((((rt0.c2)>>(rt0.c1)), rt0.c1 COLLATE RTRIM, ((rt0.c2)|(rt0.c2)), ((0.053725146641088295) NOTNULL), ((((rt0.c2)AND(rt0.c3)))OR(rt0.c2)))) AND ((TRIM(rt0.c3, rt0.c2), ((rt0.c2)>>('at92rM_J')), 'UPX,b' COLLATE RTRIM, (((rt0.c1))<((rt0.c2))), (NOT (0.4376665247349757)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2, rt0.c1, rt0.c2, rt0.c3, rt0.c3)) BETWEEN ((((rt0.c2)>>(rt0.c1)), rt0.c1 COLLATE RTRIM, ((rt0.c2)|(rt0.c2)), ((0.053725146641088295) NOTNULL), ((((rt0.c2)AND(rt0.c3)))OR(rt0.c2)))) AND ((TRIM(rt0.c3, rt0.c2), ((rt0.c2)>>('at92rM_J')), 'UPX,b' COLLATE RTRIM, (((rt0.c1))<((rt0.c2))), (NOT (0.4376665247349757))))));
SELECT * FROM rt0, vt1 WHERE ((((CAST(rt0.c2 AS NUMERIC)))>=((rt0.c2 COLLATE RTRIM)))) ORDER BY (NOT (CAST(rt0.c0 AS REAL))), (((rt0.c3)GLOB(rt0.c1)) IN (rt0.c2 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c2 AS NUMERIC)))>=((rt0.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (NOT (CAST(rt0.c0 AS REAL))), (((rt0.c3)GLOB(rt0.c1)) IN (rt0.c2 COLLATE RTRIM))  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE ((((CAST(rt0.c2 AS NUMERIC)))>=((rt0.c2 COLLATE RTRIM)))) ORDER BY (NOT (CAST(rt0.c0 AS REAL))), (((rt0.c3)GLOB(rt0.c1)) IN (rt0.c2 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c2 AS NUMERIC)))>=((rt0.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (NOT (CAST(rt0.c0 AS REAL))), (((rt0.c3)GLOB(rt0.c1)) IN (rt0.c2 COLLATE RTRIM))  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE ((((CAST(rt0.c2 AS NUMERIC)))>=((rt0.c2 COLLATE RTRIM)))) ORDER BY (NOT (CAST(rt0.c0 AS REAL))), (((rt0.c3)GLOB(rt0.c1)) IN (rt0.c2 COLLATE RTRIM))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt1 WHERE ((- (((rt0.c2)>>(''))))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c2)>>(''))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY vt1.c0);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((- (((rt0.c2)>>(''))))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c2)>>(''))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY vt1.c0);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((- (((rt0.c2)>>(''))))) ORDER BY vt1.c0;
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((((vt1.c0))<((vt1.c0))), (~ (vt1.c0)), (((vt1.c0, vt1.c0, 0xffffffff963cefb3))<=((vt1.c0, vt1.c0, vt1.c0))))) AND ((-1.975057621E9, ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), (vt1.c0 IN (vt1.c0)))))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((((vt1.c0))<((vt1.c0))), (~ (vt1.c0)), (((vt1.c0, vt1.c0, 0xffffffff963cefb3))<=((vt1.c0, vt1.c0, vt1.c0))))) AND ((-1.975057621E9, ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), (vt1.c0 IN (vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY NULL DESC);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((((vt1.c0))<((vt1.c0))), (~ (vt1.c0)), (((vt1.c0, vt1.c0, 0xffffffff963cefb3))<=((vt1.c0, vt1.c0, vt1.c0))))) AND ((-1.975057621E9, ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), (vt1.c0 IN (vt1.c0)))))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((((vt1.c0))<((vt1.c0))), (~ (vt1.c0)), (((vt1.c0, vt1.c0, 0xffffffff963cefb3))<=((vt1.c0, vt1.c0, vt1.c0))))) AND ((-1.975057621E9, ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), (vt1.c0 IN (vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY NULL DESC);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((((vt1.c0))<((vt1.c0))), (~ (vt1.c0)), (((vt1.c0, vt1.c0, 0xffffffff963cefb3))<=((vt1.c0, vt1.c0, vt1.c0))))) AND ((-1.975057621E9, ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), (vt1.c0 IN (vt1.c0)))))) ORDER BY NULL DESC;
SELECT * FROM rt0, vt1 WHERE (((((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)))||((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)))||((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)))||((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)))||((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)))||((rt0.c2 IN ()))));
SELECT COUNT(*) FROM vt1 WHERE (CAST(CAST(vt1.c0 AS REAL) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c0 AS REAL) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(CAST(vt1.c0 AS REAL) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c0 AS REAL) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(CAST(vt1.c0 AS REAL) AS TEXT));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT ALL * FROM rt0 WHERE (CASE WHEN (+ (rt0.c2)) THEN rt0.c0 COLLATE NOCASE WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c3)OR(rt0.c2)) WHEN (((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN CHAR('1108941621') ELSE (((rt0.c2))<=((rt0.c3))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (rt0.c2)) THEN rt0.c0 COLLATE NOCASE WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c3)OR(rt0.c2)) WHEN (((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN CHAR('1108941621') ELSE (((rt0.c2))<=((rt0.c3))) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN (+ (rt0.c2)) THEN rt0.c0 COLLATE NOCASE WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c3)OR(rt0.c2)) WHEN (((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN CHAR('1108941621') ELSE (((rt0.c2))<=((rt0.c3))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (rt0.c2)) THEN rt0.c0 COLLATE NOCASE WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c3)OR(rt0.c2)) WHEN (((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN CHAR('1108941621') ELSE (((rt0.c2))<=((rt0.c3))) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN (+ (rt0.c2)) THEN rt0.c0 COLLATE NOCASE WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c3)OR(rt0.c2)) WHEN (((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN CHAR('1108941621') ELSE (((rt0.c2))<=((rt0.c3))) END);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c3)GLOB(rt0.c1)) IN (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END))) ORDER BY DATETIME(vt1.c0, (+ (rt0.c3)), (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND (('0.19588155714931044')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)GLOB(rt0.c1)) IN (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, vt1 ORDER BY DATETIME(vt1.c0, (+ (rt0.c3)), (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND (('0.19588155714931044')))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c3)GLOB(rt0.c1)) IN (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END))) ORDER BY DATETIME(vt1.c0, (+ (rt0.c3)), (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND (('0.19588155714931044')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)GLOB(rt0.c1)) IN (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, vt1 ORDER BY DATETIME(vt1.c0, (+ (rt0.c3)), (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND (('0.19588155714931044')))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c3)GLOB(rt0.c1)) IN (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END))) ORDER BY DATETIME(vt1.c0, (+ (rt0.c3)), (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND (('0.19588155714931044')))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN (((rt0.c2, rt0.c3, 1736234926))>((rt0.c2, rt0.c2, rt0.c3))) THEN ((rt0.c1)<<(rt0.c2)) WHEN ((rt0.c0)OR(rt0.c0)) THEN CAST(rt0.c0 AS REAL) WHEN ((((rt0.c1)AND(0.11530388023135663)))AND(0.08483604569349745)) THEN LOWER(DISTINCT rt0.c2) ELSE ((rt0.c3) ISNULL) END) ORDER BY (((((NULL)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c2, rt0.c3, 1736234926))>((rt0.c2, rt0.c2, rt0.c3))) THEN ((rt0.c1)<<(rt0.c2)) WHEN ((rt0.c0)OR(rt0.c0)) THEN CAST(rt0.c0 AS REAL) WHEN ((((rt0.c1)AND(0.11530388023135663)))AND(0.08483604569349745)) THEN LOWER(DISTINCT rt0.c2) ELSE ((rt0.c3) ISNULL) END) IS TRUE)  as count FROM rt0 ORDER BY (((((NULL)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN (((rt0.c2, rt0.c3, 1736234926))>((rt0.c2, rt0.c2, rt0.c3))) THEN ((rt0.c1)<<(rt0.c2)) WHEN ((rt0.c0)OR(rt0.c0)) THEN CAST(rt0.c0 AS REAL) WHEN ((((rt0.c1)AND(0.11530388023135663)))AND(0.08483604569349745)) THEN LOWER(DISTINCT rt0.c2) ELSE ((rt0.c3) ISNULL) END) ORDER BY (((((NULL)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c2, rt0.c3, 1736234926))>((rt0.c2, rt0.c2, rt0.c3))) THEN ((rt0.c1)<<(rt0.c2)) WHEN ((rt0.c0)OR(rt0.c0)) THEN CAST(rt0.c0 AS REAL) WHEN ((((rt0.c1)AND(0.11530388023135663)))AND(0.08483604569349745)) THEN LOWER(DISTINCT rt0.c2) ELSE ((rt0.c3) ISNULL) END) IS TRUE)  as count FROM rt0 ORDER BY (((((NULL)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN (((rt0.c2, rt0.c3, 1736234926))>((rt0.c2, rt0.c2, rt0.c3))) THEN ((rt0.c1)<<(rt0.c2)) WHEN ((rt0.c0)OR(rt0.c0)) THEN CAST(rt0.c0 AS REAL) WHEN ((((rt0.c1)AND(0.11530388023135663)))AND(0.08483604569349745)) THEN LOWER(DISTINCT rt0.c2) ELSE ((rt0.c3) ISNULL) END) ORDER BY (((((NULL)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))) ISNULL)  NULLS LAST;
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY ((CAST(rt0.c0 AS BLOB))>>(CAST(-1401344344 AS BLOB))), ((((rt0.c2)==(rt0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS BLOB))>>(CAST(-1401344344 AS BLOB))), ((((rt0.c2)=(rt0.c0))) ISNULL));
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY ((CAST(rt0.c0 AS BLOB))>>(CAST(-1401344344 AS BLOB))), ((((rt0.c2)==(rt0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS BLOB))>>(CAST(-1401344344 AS BLOB))), ((((rt0.c2)=(rt0.c0))) ISNULL));
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY ((CAST(rt0.c0 AS BLOB))>>(CAST(-1401344344 AS BLOB))), ((((rt0.c2)==(rt0.c0))) ISNULL);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((+ (rt0.c3)))LIKE((NOT (vt1.c0))))) ORDER BY ((((rt0.c2) ISNULL))<(CASE 0.7258013227739977  WHEN rt0.c3 THEN rt0.c2 ELSE x'' END)) ASC  NULLS LAST, CASE ((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c3))  WHEN ((rt0.c2) IS FALSE) THEN ((rt0.c1) NOTNULL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c3)))LIKE((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c2) ISNULL))<(CASE 0.7258013227739977  WHEN rt0.c3 THEN rt0.c2 ELSE x'' END)) ASC  NULLS LAST, CASE ((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c3))  WHEN ((rt0.c2) IS FALSE) THEN ((rt0.c1) NOTNULL) END  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((+ (rt0.c3)))LIKE((NOT (vt1.c0))))) ORDER BY ((((rt0.c2) ISNULL))<(CASE 0.7258013227739977  WHEN rt0.c3 THEN rt0.c2 ELSE x'' END)) ASC  NULLS LAST, CASE ((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c3))  WHEN ((rt0.c2) IS FALSE) THEN ((rt0.c1) NOTNULL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c3)))LIKE((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c2) ISNULL))<(CASE 0.7258013227739977  WHEN rt0.c3 THEN rt0.c2 ELSE x'' END)) ASC  NULLS LAST, CASE ((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c3))  WHEN ((rt0.c2) IS FALSE) THEN ((rt0.c1) NOTNULL) END  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((+ (rt0.c3)))LIKE((NOT (vt1.c0))))) ORDER BY ((((rt0.c2) ISNULL))<(CASE 0.7258013227739977  WHEN rt0.c3 THEN rt0.c2 ELSE x'' END)) ASC  NULLS LAST, CASE ((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c3))  WHEN ((rt0.c2) IS FALSE) THEN ((rt0.c1) NOTNULL) END  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY (- (rt0.c1 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 ORDER BY (- (rt0.c1 COLLATE NOCASE))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY (- (rt0.c1 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 ORDER BY (- (rt0.c1 COLLATE NOCASE))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY (- (rt0.c1 COLLATE NOCASE))  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((((((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c3)))OR(-1403375835)))<<(((rt0.c1)-('0.9875843010800771'))))) ORDER BY (((rt0.c2))<>(((~ (rt0.c3))))) DESC  NULLS FIRST, CASE WHEN CASE rt0.c1  WHEN 0.16036485933898037 THEN rt0.c3 ELSE rt0.c1 END THEN rt0.c3 ELSE CAST(rt0.c2 AS TEXT) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c3)))OR(-1403375835)))<<(((rt0.c1)-('0.9875843010800771'))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c2))<>(((~ (rt0.c3))))) DESC  NULLS FIRST, CASE WHEN CASE rt0.c1  WHEN 0.16036485933898037 THEN rt0.c3 ELSE rt0.c1 END THEN rt0.c3 ELSE CAST(rt0.c2 AS TEXT) END DESC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((((((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c3)))OR(-1403375835)))<<(((rt0.c1)-('0.9875843010800771'))))) ORDER BY (((rt0.c2))<>(((~ (rt0.c3))))) DESC  NULLS FIRST, CASE WHEN CASE rt0.c1  WHEN 0.16036485933898037 THEN rt0.c3 ELSE rt0.c1 END THEN rt0.c3 ELSE CAST(rt0.c2 AS TEXT) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c3)))OR(-1403375835)))<<(((rt0.c1)-('0.9875843010800771'))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c2))<>(((~ (rt0.c3))))) DESC  NULLS FIRST, CASE WHEN CASE rt0.c1  WHEN 0.16036485933898037 THEN rt0.c3 ELSE rt0.c1 END THEN rt0.c3 ELSE CAST(rt0.c2 AS TEXT) END DESC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((((((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c3)))OR(-1403375835)))<<(((rt0.c1)-('0.9875843010800771'))))) ORDER BY (((rt0.c2))<>(((~ (rt0.c3))))) DESC  NULLS FIRST, CASE WHEN CASE rt0.c1  WHEN 0.16036485933898037 THEN rt0.c3 ELSE rt0.c1 END THEN rt0.c3 ELSE CAST(rt0.c2 AS TEXT) END DESC;
SELECT ALL * FROM vt1, rt0 WHERE (CAST(((((((((((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c1)))AND(vt1.c0)))AND(rt0.c3)))OR(0.00604751603640008)))OR(rt0.c3)))AND(vt1.c0)) AS NUMERIC)) ORDER BY (~ (CAST(rt0.c3 AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c1)))AND(vt1.c0)))AND(rt0.c3)))OR(0.00604751603640008)))OR(rt0.c3)))AND(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1, rt0 ORDER BY (~ (CAST(rt0.c3 AS INTEGER))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (CAST(((((((((((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c1)))AND(vt1.c0)))AND(rt0.c3)))OR(0.00604751603640008)))OR(rt0.c3)))AND(vt1.c0)) AS NUMERIC)) ORDER BY (~ (CAST(rt0.c3 AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c1)))AND(vt1.c0)))AND(rt0.c3)))OR(0.00604751603640008)))OR(rt0.c3)))AND(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1, rt0 ORDER BY (~ (CAST(rt0.c3 AS INTEGER))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (CAST(((((((((((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c1)))AND(vt1.c0)))AND(rt0.c3)))OR(0.00604751603640008)))OR(rt0.c3)))AND(vt1.c0)) AS NUMERIC)) ORDER BY (~ (CAST(rt0.c3 AS INTEGER))) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c3, rt0.c3, rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c3, ((rt0.c1)>>(rt0.c0)), CASE rt0.c2  WHEN '251202335' THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END, ((rt0.c0)+(rt0.c0)), CAST(rt0.c2 AS NUMERIC))) AND ((rt0.c2 COLLATE NOCASE, '1995067150', CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END, ABS(rt0.c3), CASE WHEN rt0.c1 THEN rt0.c2 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3, rt0.c3, rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c3, ((rt0.c1)>>(rt0.c0)), CASE rt0.c2  WHEN '251202335' THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END, ((rt0.c0)+(rt0.c0)), CAST(rt0.c2 AS NUMERIC))) AND ((rt0.c2 COLLATE NOCASE, '1995067150', CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END, ABS(rt0.c3), CASE WHEN rt0.c1 THEN rt0.c2 END)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c3, rt0.c3, rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c3, ((rt0.c1)>>(rt0.c0)), CASE rt0.c2  WHEN '251202335' THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END, ((rt0.c0)+(rt0.c0)), CAST(rt0.c2 AS NUMERIC))) AND ((rt0.c2 COLLATE NOCASE, '1995067150', CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END, ABS(rt0.c3), CASE WHEN rt0.c1 THEN rt0.c2 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3, rt0.c3, rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c3, ((rt0.c1)>>(rt0.c0)), CASE rt0.c2  WHEN '251202335' THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END, ((rt0.c0)+(rt0.c0)), CAST(rt0.c2 AS NUMERIC))) AND ((rt0.c2 COLLATE NOCASE, '1995067150', CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END, ABS(rt0.c3), CASE WHEN rt0.c1 THEN rt0.c2 END)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c3, rt0.c3, rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c3, ((rt0.c1)>>(rt0.c0)), CASE rt0.c2  WHEN '251202335' THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END, ((rt0.c0)+(rt0.c0)), CAST(rt0.c2 AS NUMERIC))) AND ((rt0.c2 COLLATE NOCASE, '1995067150', CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END, ABS(rt0.c3), CASE WHEN rt0.c1 THEN rt0.c2 END))));
SELECT * FROM rt0, vt1 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c3) AND (vt1.c0))) ISNULL)) ORDER BY CASE ((vt1.c0)<<(NULL))  WHEN ((((vt1.c0)AND(rt0.c3)))OR(vt1.c0)) THEN rt0.c0 COLLATE RTRIM ELSE (rt0.c2 IN ()) END, (((rt0.c0))<((rt0.c1))) COLLATE RTRIM  NULLS FIRST, 0.9356482699055892;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (rt0.c3) AND (vt1.c0))) ISNULL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE ((vt1.c0)<<(NULL))  WHEN ((((vt1.c0)AND(rt0.c3)))OR(vt1.c0)) THEN rt0.c0 COLLATE RTRIM ELSE (rt0.c2 IN ()) END, (((rt0.c0))<((rt0.c1))) COLLATE RTRIM  NULLS FIRST, 0.9356482699055892);
SELECT * FROM rt0, vt1 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c3) AND (vt1.c0))) ISNULL)) ORDER BY CASE ((vt1.c0)<<(NULL))  WHEN ((((vt1.c0)AND(rt0.c3)))OR(vt1.c0)) THEN rt0.c0 COLLATE RTRIM ELSE (rt0.c2 IN ()) END, (((rt0.c0))<((rt0.c1))) COLLATE RTRIM  NULLS FIRST, 0.9356482699055892;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (rt0.c3) AND (vt1.c0))) ISNULL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE ((vt1.c0)<<(NULL))  WHEN ((((vt1.c0)AND(rt0.c3)))OR(vt1.c0)) THEN rt0.c0 COLLATE RTRIM ELSE (rt0.c2 IN ()) END, (((rt0.c0))<((rt0.c1))) COLLATE RTRIM  NULLS FIRST, 0.9356482699055892);
SELECT * FROM rt0, vt1 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c3) AND (vt1.c0))) ISNULL)) ORDER BY CASE ((vt1.c0)<<(NULL))  WHEN ((((vt1.c0)AND(rt0.c3)))OR(vt1.c0)) THEN rt0.c0 COLLATE RTRIM ELSE (rt0.c2 IN ()) END, (((rt0.c0))<((rt0.c1))) COLLATE RTRIM  NULLS FIRST, 0.9356482699055892;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND((~ (0x3cdb90f5)))))AND(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND((~ (0x3cdb90f5)))))AND(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND((~ (0x3cdb90f5)))))AND(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND((~ (0x3cdb90f5)))))AND(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND((~ (0x3cdb90f5)))))AND(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))));
SELECT * FROM rt0 WHERE (HEX(DISTINCT rt0.c1)) ORDER BY rt0.c0  NULLS FIRST, ((rt0.c2) IS FALSE) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT rt0.c1)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0  NULLS FIRST, ((rt0.c2) IS FALSE) COLLATE NOCASE);
SELECT * FROM rt0 WHERE (HEX(DISTINCT rt0.c1)) ORDER BY rt0.c0  NULLS FIRST, ((rt0.c2) IS FALSE) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT rt0.c1)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0  NULLS FIRST, ((rt0.c2) IS FALSE) COLLATE NOCASE);
SELECT * FROM rt0 WHERE (HEX(DISTINCT rt0.c1)) ORDER BY rt0.c0  NULLS FIRST, ((rt0.c2) IS FALSE) COLLATE NOCASE;
SELECT * FROM vt1 WHERE (((((vt1.c0)LIKE(vt1.c0))) IS TRUE)) ORDER BY ((1735750182)*(0.7709160036866827)), (((vt1.c0 IN (vt1.c0))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)LIKE(vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY ((1735750182)*(0.7709160036866827)), (((vt1.c0 IN (vt1.c0))) IS FALSE) DESC);
SELECT * FROM vt1 WHERE (((((vt1.c0)LIKE(vt1.c0))) IS TRUE)) ORDER BY ((1735750182)*(0.7709160036866827)), (((vt1.c0 IN (vt1.c0))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)LIKE(vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY ((1735750182)*(0.7709160036866827)), (((vt1.c0 IN (vt1.c0))) IS FALSE) DESC);
SELECT * FROM vt1 WHERE (((((vt1.c0)LIKE(vt1.c0))) IS TRUE)) ORDER BY ((1735750182)*(0.7709160036866827)), (((vt1.c0 IN (vt1.c0))) IS FALSE) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ()))||(LIKELY(DISTINCT rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))||(LIKELY(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ()))||(LIKELY(DISTINCT rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))||(LIKELY(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ()))||(LIKELY(DISTINCT rt0.c0))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((ABS(DISTINCT vt1.c0)) NOT BETWEEN ((rt0.c2 IN ())) AND ('437T2464076209362071204:30--5256632153014731755:1584-5244983135507867022 1544509105121736321T281313934434776035T8351554181397924189-')));
SELECT SUM(count) FROM (SELECT ((((ABS(DISTINCT vt1.c0)) NOT BETWEEN ((rt0.c2 IN ())) AND ('437T2464076209362071204:30--5256632153014731755:1584-5244983135507867022 1544509105121736321T281313934434776035T8351554181397924189-'))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((ABS(DISTINCT vt1.c0)) NOT BETWEEN ((rt0.c2 IN ())) AND ('437T2464076209362071204:30--5256632153014731755:1584-5244983135507867022 1544509105121736321T281313934434776035T8351554181397924189-')));
SELECT SUM(count) FROM (SELECT ((((ABS(DISTINCT vt1.c0)) NOT BETWEEN ((rt0.c2 IN ())) AND ('437T2464076209362071204:30--5256632153014731755:1584-5244983135507867022 1544509105121736321T281313934434776035T8351554181397924189-'))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((ABS(DISTINCT vt1.c0)) NOT BETWEEN ((rt0.c2 IN ())) AND ('437T2464076209362071204:30--5256632153014731755:1584-5244983135507867022 1544509105121736321T281313934434776035T8351554181397924189-')));
SELECT COUNT(*) FROM rt0, vt1 WHERE (NULL) ORDER BY CASE WHEN rt0.c3 THEN ((rt0.c0)<=('2090576768')) WHEN (((rt0.c0, vt1.c0, rt0.c0)) BETWEEN ((rt0.c3, rt0.c0, rt0.c1)) AND ((vt1.c0, rt0.c3, vt1.c0))) THEN CASE rt0.c1  WHEN rt0.c0 THEN vt1.c0 END WHEN (((rt0.c2))<=((vt1.c0))) THEN HEX(rt0.c2) ELSE rt0.c1 END ASC, (((rt0.c2)) BETWEEN ((((vt1.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)))) AND ((((rt0.c2) IS FALSE)))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE WHEN rt0.c3 THEN ((rt0.c0)<=('2090576768')) WHEN (((rt0.c0, vt1.c0, rt0.c0)) BETWEEN ((rt0.c3, rt0.c0, rt0.c1)) AND ((vt1.c0, rt0.c3, vt1.c0))) THEN CASE rt0.c1  WHEN rt0.c0 THEN vt1.c0 END WHEN (((rt0.c2))<=((vt1.c0))) THEN HEX(rt0.c2) ELSE rt0.c1 END ASC, (((rt0.c2)) BETWEEN ((((vt1.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)))) AND ((((rt0.c2) IS FALSE)))) ASC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (NULL) ORDER BY CASE WHEN rt0.c3 THEN ((rt0.c0)<=('2090576768')) WHEN (((rt0.c0, vt1.c0, rt0.c0)) BETWEEN ((rt0.c3, rt0.c0, rt0.c1)) AND ((vt1.c0, rt0.c3, vt1.c0))) THEN CASE rt0.c1  WHEN rt0.c0 THEN vt1.c0 END WHEN (((rt0.c2))<=((vt1.c0))) THEN HEX(rt0.c2) ELSE rt0.c1 END ASC, (((rt0.c2)) BETWEEN ((((vt1.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)))) AND ((((rt0.c2) IS FALSE)))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE WHEN rt0.c3 THEN ((rt0.c0)<=('2090576768')) WHEN (((rt0.c0, vt1.c0, rt0.c0)) BETWEEN ((rt0.c3, rt0.c0, rt0.c1)) AND ((vt1.c0, rt0.c3, vt1.c0))) THEN CASE rt0.c1  WHEN rt0.c0 THEN vt1.c0 END WHEN (((rt0.c2))<=((vt1.c0))) THEN HEX(rt0.c2) ELSE rt0.c1 END ASC, (((rt0.c2)) BETWEEN ((((vt1.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)))) AND ((((rt0.c2) IS FALSE)))) ASC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (NULL) ORDER BY CASE WHEN rt0.c3 THEN ((rt0.c0)<=('2090576768')) WHEN (((rt0.c0, vt1.c0, rt0.c0)) BETWEEN ((rt0.c3, rt0.c0, rt0.c1)) AND ((vt1.c0, rt0.c3, vt1.c0))) THEN CASE rt0.c1  WHEN rt0.c0 THEN vt1.c0 END WHEN (((rt0.c2))<=((vt1.c0))) THEN HEX(rt0.c2) ELSE rt0.c1 END ASC, (((rt0.c2)) BETWEEN ((((vt1.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)))) AND ((((rt0.c2) IS FALSE)))) ASC;
SELECT ALL * FROM rt0, vt1 WHERE (((vt1.c0)>((((rt0.c3)) BETWEEN ((vt1.c0)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)>((((rt0.c3)) BETWEEN ((vt1.c0)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((vt1.c0)>((((rt0.c3)) BETWEEN ((vt1.c0)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)>((((rt0.c3)) BETWEEN ((vt1.c0)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((vt1.c0)>((((rt0.c3)) BETWEEN ((vt1.c0)) AND ((rt0.c0))))));
SELECT ALL * FROM rt0 WHERE ((((0x63c1ec9d)) NOT BETWEEN ((rt0.c0 COLLATE RTRIM)) AND (((~ (rt0.c2)))))) ORDER BY ((((rt0.c1) IS TRUE))+(((rt0.c1)&(rt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((0x63c1ec9d)) NOT BETWEEN ((rt0.c0 COLLATE RTRIM)) AND (((~ (rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) IS TRUE))+(((rt0.c1)&(rt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((0x63c1ec9d)) NOT BETWEEN ((rt0.c0 COLLATE RTRIM)) AND (((~ (rt0.c2)))))) ORDER BY ((((rt0.c1) IS TRUE))+(((rt0.c1)&(rt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((0x63c1ec9d)) NOT BETWEEN ((rt0.c0 COLLATE RTRIM)) AND (((~ (rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) IS TRUE))+(((rt0.c1)&(rt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((0x63c1ec9d)) NOT BETWEEN ((rt0.c0 COLLATE RTRIM)) AND (((~ (rt0.c2)))))) ORDER BY ((((rt0.c1) IS TRUE))+(((rt0.c1)&(rt0.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((('174768170')AND((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((vt1.c0))))))OR((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((('174768170')AND((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((vt1.c0))))))OR((rt0.c1 IN ())))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((('174768170')AND((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((vt1.c0))))))OR((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((('174768170')AND((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((vt1.c0))))))OR((rt0.c1 IN ())))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((('174768170')AND((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((vt1.c0))))))OR((rt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((('-1920305649') BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((('-1920305649') BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((('-1920305649') BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((('-1920305649') BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((('-1920305649') BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY);
SELECT * FROM vt1 WHERE (((((((vt1.c0)<(vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR(IFNULL(vt1.c0, vt1.c0)))) ORDER BY ((((vt1.c0)/(vt1.c0))) NOT NULL) ASC  NULLS FIRST, '~忎6P+១'  NULLS LAST, CAST(((vt1.c0)%(vt1.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)<(vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR(IFNULL(vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)/(vt1.c0))) NOT NULL) ASC  NULLS FIRST, '~忎6P+១'  NULLS LAST, CAST(((vt1.c0)%(vt1.c0)) AS BLOB));
SELECT * FROM vt1 WHERE (((((((vt1.c0)<(vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR(IFNULL(vt1.c0, vt1.c0)))) ORDER BY ((((vt1.c0)/(vt1.c0))) NOT NULL) ASC  NULLS FIRST, '~忎6P+១'  NULLS LAST, CAST(((vt1.c0)%(vt1.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)<(vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR(IFNULL(vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)/(vt1.c0))) NOT NULL) ASC  NULLS FIRST, '~忎6P+១'  NULLS LAST, CAST(((vt1.c0)%(vt1.c0)) AS BLOB));
SELECT * FROM vt1 WHERE (((((((vt1.c0)<(vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR(IFNULL(vt1.c0, vt1.c0)))) ORDER BY ((((vt1.c0)/(vt1.c0))) NOT NULL) ASC  NULLS FIRST, '~忎6P+១'  NULLS LAST, CAST(((vt1.c0)%(vt1.c0)) AS BLOB);
SELECT ALL * FROM vt1 WHERE ((((NOT (vt1.c0)))!=(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY (((vt1.c0 IN ())) NOT BETWEEN ((((vt1.c0))<>((vt1.c0)))) AND (((vt1.c0)>=(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt1.c0)))!=(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN ())) NOT BETWEEN ((((vt1.c0))<>((vt1.c0)))) AND (((vt1.c0)>=(vt1.c0)))) DESC);
SELECT ALL * FROM vt1 WHERE ((((NOT (vt1.c0)))!=(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY (((vt1.c0 IN ())) NOT BETWEEN ((((vt1.c0))<>((vt1.c0)))) AND (((vt1.c0)>=(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt1.c0)))!=(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN ())) NOT BETWEEN ((((vt1.c0))<>((vt1.c0)))) AND (((vt1.c0)>=(vt1.c0)))) DESC);
SELECT ALL * FROM vt1 WHERE ((((NOT (vt1.c0)))!=(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY (((vt1.c0 IN ())) NOT BETWEEN ((((vt1.c0))<>((vt1.c0)))) AND (((vt1.c0)>=(vt1.c0)))) DESC;
SELECT COUNT(*) FROM rt0, vt1 WHERE (((UPPER(vt1.c0))/(rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(vt1.c0))/(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((UPPER(vt1.c0))/(rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(vt1.c0))/(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((UPPER(vt1.c0))/(rt0.c1 COLLATE NOCASE)));
SELECT ALL * FROM vt1 WHERE (((COALESCE(DISTINCT '349534083', 0.30978270005099917, vt1.c0, vt1.c0)) NOT NULL)) ORDER BY (NOT (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST, ((((((vt1.c0)IS NOT(vt1.c0)))AND(vt1.c0 COLLATE NOCASE)))OR(IFNULL(vt1.c0, vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT '349534083', 0.30978270005099917, vt1.c0, vt1.c0)) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY (NOT (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST, ((((((vt1.c0)IS NOT(vt1.c0)))AND(vt1.c0 COLLATE NOCASE)))OR(IFNULL(vt1.c0, vt1.c0)))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((COALESCE(DISTINCT '349534083', 0.30978270005099917, vt1.c0, vt1.c0)) NOT NULL)) ORDER BY (NOT (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST, ((((((vt1.c0)IS NOT(vt1.c0)))AND(vt1.c0 COLLATE NOCASE)))OR(IFNULL(vt1.c0, vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT '349534083', 0.30978270005099917, vt1.c0, vt1.c0)) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY (NOT (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST, ((((((vt1.c0)IS NOT(vt1.c0)))AND(vt1.c0 COLLATE NOCASE)))OR(IFNULL(vt1.c0, vt1.c0)))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((COALESCE(DISTINCT '349534083', 0.30978270005099917, vt1.c0, vt1.c0)) NOT NULL)) ORDER BY (NOT (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST, ((((((vt1.c0)IS NOT(vt1.c0)))AND(vt1.c0 COLLATE NOCASE)))OR(IFNULL(vt1.c0, vt1.c0)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST(rt0.c3 COLLATE RTRIM AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST(rt0.c3 COLLATE RTRIM AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST(rt0.c3 COLLATE RTRIM AS NUMERIC));
SELECT ALL * FROM rt0, vt1 WHERE (((rt0.c2) IS TRUE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((rt0.c2) IS TRUE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((rt0.c2) IS TRUE) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN TYPEOF(rt0.c2) THEN CHAR(rt0.c3) ELSE x'' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN TYPEOF(rt0.c2) THEN CHAR(rt0.c3) ELSE x'' END) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN TYPEOF(rt0.c2) THEN CHAR(rt0.c3) ELSE x'' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN TYPEOF(rt0.c2) THEN CHAR(rt0.c3) ELSE x'' END) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN TYPEOF(rt0.c2) THEN CHAR(rt0.c3) ELSE x'' END);
SELECT ALL * FROM rt0 WHERE (((rt0.c3 COLLATE RTRIM)AND(rt0.c2))) ORDER BY ((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c1)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE RTRIM)AND(rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c1)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((rt0.c3 COLLATE RTRIM)AND(rt0.c2))) ORDER BY ((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c1)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE RTRIM)AND(rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c1)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((rt0.c3 COLLATE RTRIM)AND(rt0.c2))) ORDER BY ((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c1)) COLLATE NOCASE  NULLS FIRST;
SELECT * FROM rt0, vt1 WHERE (JULIANDAY(((x'') NOT NULL), GLOB(rt0.c3, vt1.c0), (((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))) ORDER BY ((rt0.c3)||(rt0.c1)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((JULIANDAY(((x'') NOT NULL), GLOB(rt0.c3, vt1.c0), (((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((rt0.c3)||(rt0.c1)) COLLATE RTRIM DESC);
SELECT * FROM rt0, vt1 WHERE (JULIANDAY(((x'') NOT NULL), GLOB(rt0.c3, vt1.c0), (((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))) ORDER BY ((rt0.c3)||(rt0.c1)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((JULIANDAY(((x'') NOT NULL), GLOB(rt0.c3, vt1.c0), (((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((rt0.c3)||(rt0.c1)) COLLATE RTRIM DESC);
SELECT * FROM rt0, vt1 WHERE (JULIANDAY(((x'') NOT NULL), GLOB(rt0.c3, vt1.c0), (((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))) ORDER BY ((rt0.c3)||(rt0.c1)) COLLATE RTRIM DESC;
SELECT COUNT(*) FROM vt1 WHERE ((+ (vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((+ (vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((+ (vt1.c0 COLLATE NOCASE)));
SELECT * FROM rt0 WHERE (NULL) ORDER BY ((((((((rt0.c0)OR(CAST(rt0.c2 AS INTEGER))))AND(rt0.c2)))OR(NULLIF(rt0.c0, rt0.c3))))OR(CAST(rt0.c3 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((((((((rt0.c0)OR(CAST(rt0.c2 AS INTEGER))))AND(rt0.c2)))OR(NULLIF(rt0.c0, rt0.c3))))OR(CAST(rt0.c3 AS REAL)))  NULLS LAST);
SELECT * FROM rt0 WHERE (NULL) ORDER BY ((((((((rt0.c0)OR(CAST(rt0.c2 AS INTEGER))))AND(rt0.c2)))OR(NULLIF(rt0.c0, rt0.c3))))OR(CAST(rt0.c3 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((((((((rt0.c0)OR(CAST(rt0.c2 AS INTEGER))))AND(rt0.c2)))OR(NULLIF(rt0.c0, rt0.c3))))OR(CAST(rt0.c3 AS REAL)))  NULLS LAST);
SELECT * FROM rt0 WHERE (NULL) ORDER BY ((((((((rt0.c0)OR(CAST(rt0.c2 AS INTEGER))))AND(rt0.c2)))OR(NULLIF(rt0.c0, rt0.c3))))OR(CAST(rt0.c3 AS REAL)))  NULLS LAST;
SELECT ALL * FROM vt1, rt0 WHERE ((- (rt0.c0 COLLATE BINARY))) ORDER BY CAST((rt0.c3 IN (rt0.c1)) AS REAL);
SELECT SUM(count) FROM (SELECT (((- (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST((rt0.c3 IN (rt0.c1)) AS REAL));
SELECT ALL * FROM vt1, rt0 WHERE ((- (rt0.c0 COLLATE BINARY))) ORDER BY CAST((rt0.c3 IN (rt0.c1)) AS REAL);
SELECT SUM(count) FROM (SELECT (((- (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST((rt0.c3 IN (rt0.c1)) AS REAL));
SELECT ALL * FROM vt1, rt0 WHERE ((- (rt0.c0 COLLATE BINARY))) ORDER BY CAST((rt0.c3 IN (rt0.c1)) AS REAL);
SELECT COUNT(*) FROM vt1 WHERE ((((load_extension(vt1.c0), vt1.c0, vt1.c0))>((((vt1.c0)GLOB(vt1.c0)), (- (vt1.c0)), (+ (vt1.c0)))))) ORDER BY (((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS TEXT))) AND ((((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ASC, vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((load_extension(vt1.c0), vt1.c0, vt1.c0))>((((vt1.c0)GLOB(vt1.c0)), (- (vt1.c0)), (+ (vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS TEXT))) AND ((((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ASC, vt1.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((load_extension(vt1.c0), vt1.c0, vt1.c0))>((((vt1.c0)GLOB(vt1.c0)), (- (vt1.c0)), (+ (vt1.c0)))))) ORDER BY (((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS TEXT))) AND ((((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ASC, vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((load_extension(vt1.c0), vt1.c0, vt1.c0))>((((vt1.c0)GLOB(vt1.c0)), (- (vt1.c0)), (+ (vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS TEXT))) AND ((((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ASC, vt1.c0  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c1)GLOB(rt0.c1)))/(ABS(x''))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)GLOB(rt0.c1)))/(ABS(x'')))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1)GLOB(rt0.c1)))/(ABS(x''))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)GLOB(rt0.c1)))/(ABS(x'')))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1)GLOB(rt0.c1)))/(ABS(x''))));
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON ((0x22f93220) ISNULL) WHERE (((highlight(x'', rt0.c3, rt0.c0, x''))>=(((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY (((((vt1.c0))==((rt0.c3)))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((highlight(x'', rt0.c3, rt0.c0, x''))>=(((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON ((0X22f93220) ISNULL) ORDER BY (((((vt1.c0))==((rt0.c3)))) IS FALSE));
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON ((0x22f93220) ISNULL) WHERE (((highlight(x'', rt0.c3, rt0.c0, x''))>=(((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY (((((vt1.c0))==((rt0.c3)))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((highlight(x'', rt0.c3, rt0.c0, x''))>=(((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON ((0X22f93220) ISNULL) ORDER BY (((((vt1.c0))==((rt0.c3)))) IS FALSE));
SELECT * FROM rt0 WHERE (((((CAST(rt0.c3 AS BLOB))OR(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)))))AND(((rt0.c1)==(rt0.c1))))) ORDER BY CASE WHEN '-847055317' THEN ((((rt0.c3)OR(rt0.c1)))OR(rt0.c2)) ELSE ((((rt0.c3)OR(rt0.c2)))AND(rt0.c2)) END  NULLS FIRST, ((5.87184477E8) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c3 AS BLOB))OR(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)))))AND(((rt0.c1)==(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN '-847055317' THEN ((((rt0.c3)OR(rt0.c1)))OR(rt0.c2)) ELSE ((((rt0.c3)OR(rt0.c2)))AND(rt0.c2)) END  NULLS FIRST, ((5.87184477E8) ISNULL) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (((((CAST(rt0.c3 AS BLOB))OR(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)))))AND(((rt0.c1)==(rt0.c1))))) ORDER BY CASE WHEN '-847055317' THEN ((((rt0.c3)OR(rt0.c1)))OR(rt0.c2)) ELSE ((((rt0.c3)OR(rt0.c2)))AND(rt0.c2)) END  NULLS FIRST, ((5.87184477E8) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c3 AS BLOB))OR(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)))))AND(((rt0.c1)==(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN '-847055317' THEN ((((rt0.c3)OR(rt0.c1)))OR(rt0.c2)) ELSE ((((rt0.c3)OR(rt0.c2)))AND(rt0.c2)) END  NULLS FIRST, ((5.87184477E8) ISNULL) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (((((CAST(rt0.c3 AS BLOB))OR(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)))))AND(((rt0.c1)==(rt0.c1))))) ORDER BY CASE WHEN '-847055317' THEN ((((rt0.c3)OR(rt0.c1)))OR(rt0.c2)) ELSE ((((rt0.c3)OR(rt0.c2)))AND(rt0.c2)) END  NULLS FIRST, ((5.87184477E8) ISNULL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((((rt0.c3) ISNULL), ((rt0.c0)IS NOT(rt0.c1)), rt0.c0))>((CAST(rt0.c3 AS REAL), ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)), ((rt0.c0) IS TRUE))))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT (((((((rt0.c3) ISNULL), ((rt0.c0)IS NOT(rt0.c1)), rt0.c0))>((CAST(rt0.c3 AS REAL), ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)), ((rt0.c0) IS TRUE))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY x'');
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((((rt0.c3) ISNULL), ((rt0.c0)IS NOT(rt0.c1)), rt0.c0))>((CAST(rt0.c3 AS REAL), ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)), ((rt0.c0) IS TRUE))))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT (((((((rt0.c3) ISNULL), ((rt0.c0)IS NOT(rt0.c1)), rt0.c0))>((CAST(rt0.c3 AS REAL), ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)), ((rt0.c0) IS TRUE))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY x'');
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((((rt0.c3) ISNULL), ((rt0.c0)IS NOT(rt0.c1)), rt0.c0))>((CAST(rt0.c3 AS REAL), ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)), ((rt0.c0) IS TRUE))))) ORDER BY x'';
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON (+ (((rt0.c2) ISNULL))) WHERE (vt1.c0) ORDER BY CASE WHEN ((rt0.c1)IS(rt0.c2)) THEN ((vt1.c0) ISNULL) ELSE CAST(vt1.c0 AS REAL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON (+ (((rt0.c2) ISNULL))) ORDER BY CASE WHEN ((rt0.c1)IS(rt0.c2)) THEN ((vt1.c0) ISNULL) ELSE CAST(vt1.c0 AS REAL) END  NULLS FIRST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON (+ (((rt0.c2) ISNULL))) WHERE (vt1.c0) ORDER BY CASE WHEN ((rt0.c1)IS(rt0.c2)) THEN ((vt1.c0) ISNULL) ELSE CAST(vt1.c0 AS REAL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON (+ (((rt0.c2) ISNULL))) ORDER BY CASE WHEN ((rt0.c1)IS(rt0.c2)) THEN ((vt1.c0) ISNULL) ELSE CAST(vt1.c0 AS REAL) END  NULLS FIRST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON (+ (((rt0.c2) ISNULL))) WHERE (vt1.c0) ORDER BY CASE WHEN ((rt0.c1)IS(rt0.c2)) THEN ((vt1.c0) ISNULL) ELSE CAST(vt1.c0 AS REAL) END  NULLS FIRST;
SELECT * FROM vt1 WHERE (((((vt1.c0)AND(CAST(vt1.c0 AS TEXT))))OR((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, '9#', vt1.c0, vt1.c0, vt1.c0)))))) ORDER BY ((vt1.c0) BETWEEN (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) AND ((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))))) DESC  NULLS LAST, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)AND(CAST(vt1.c0 AS TEXT))))OR((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, '9#', vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) BETWEEN (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) AND ((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))))) DESC  NULLS LAST, NULL  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((vt1.c0)AND(CAST(vt1.c0 AS TEXT))))OR((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, '9#', vt1.c0, vt1.c0, vt1.c0)))))) ORDER BY ((vt1.c0) BETWEEN (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) AND ((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))))) DESC  NULLS LAST, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)AND(CAST(vt1.c0 AS TEXT))))OR((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, '9#', vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) BETWEEN (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) AND ((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))))) DESC  NULLS LAST, NULL  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((vt1.c0)AND(CAST(vt1.c0 AS TEXT))))OR((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, '9#', vt1.c0, vt1.c0, vt1.c0)))))) ORDER BY ((vt1.c0) BETWEEN (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) AND ((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))))) DESC  NULLS LAST, NULL  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE ('磧&U');
SELECT SUM(count) FROM (SELECT ALL (('磧&U') IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ('磧&U');
SELECT SUM(count) FROM (SELECT ALL (('磧&U') IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ('磧&U');
SELECT ALL * FROM vt1, rt0 WHERE (CAST(((rt0.c2)-('')) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)-('')) AS REAL)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (CAST(((rt0.c2)-('')) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)-('')) AS REAL)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (CAST(((rt0.c2)-('')) AS REAL));
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST(((rt0.c0)OR(rt0.c0)) AS NUMERIC)) ORDER BY (NOT (CASE WHEN rt0.c1 THEN '-419144310' END)) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)OR(rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt1 ORDER BY (NOT (CASE WHEN rt0.c1 THEN '-419144310' END)) DESC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST(((rt0.c0)OR(rt0.c0)) AS NUMERIC)) ORDER BY (NOT (CASE WHEN rt0.c1 THEN '-419144310' END)) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)OR(rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt1 ORDER BY (NOT (CASE WHEN rt0.c1 THEN '-419144310' END)) DESC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST(((rt0.c0)OR(rt0.c0)) AS NUMERIC)) ORDER BY (NOT (CASE WHEN rt0.c1 THEN '-419144310' END)) DESC;
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c2 COLLATE BINARY COLLATE BINARY COLLATE BINARY) ORDER BY ((LOWER(rt0.c3))AND(rt0.c3)), ((((rt0.c0) IS FALSE)) ISNULL);
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE BINARY COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((LOWER(rt0.c3))AND(rt0.c3)), ((((rt0.c0) IS FALSE)) ISNULL));
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c2 COLLATE BINARY COLLATE BINARY COLLATE BINARY) ORDER BY ((LOWER(rt0.c3))AND(rt0.c3)), ((((rt0.c0) IS FALSE)) ISNULL);
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE BINARY COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((LOWER(rt0.c3))AND(rt0.c3)), ((((rt0.c0) IS FALSE)) ISNULL));
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c2 COLLATE BINARY COLLATE BINARY COLLATE BINARY) ORDER BY ((LOWER(rt0.c3))AND(rt0.c3)), ((((rt0.c0) IS FALSE)) ISNULL);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)&(x'aaf9')))*(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) ORDER BY CASE WHEN ((vt1.c0)/(vt1.c0)) THEN '-1972275479' COLLATE RTRIM ELSE TYPEOF(vt1.c0) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)&(x'aaf9')))*(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((vt1.c0)/(vt1.c0)) THEN '-1972275479' COLLATE RTRIM ELSE TYPEOF(vt1.c0) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)&(x'aaf9')))*(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) ORDER BY CASE WHEN ((vt1.c0)/(vt1.c0)) THEN '-1972275479' COLLATE RTRIM ELSE TYPEOF(vt1.c0) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)&(x'aaf9')))*(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((vt1.c0)/(vt1.c0)) THEN '-1972275479' COLLATE RTRIM ELSE TYPEOF(vt1.c0) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)&(x'aaf9')))*(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) ORDER BY CASE WHEN ((vt1.c0)/(vt1.c0)) THEN '-1972275479' COLLATE RTRIM ELSE TYPEOF(vt1.c0) END DESC  NULLS FIRST;
